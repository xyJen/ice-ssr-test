var loadingMap = new Map();
var loadedMap = new Map();
function getAsync(id, getter) {
  if (isLoaded(id)) {
    return getLoaded(id);
  }

  var promise = loadingMap.get(id);

  if (promise) {
    return promise;
  }

  promise = getter();
  loadingMap.set(id, promise);
  promise.then(function (value) {
    loadedMap.set(id, value);
    loadingMap["delete"](id);
  }, function () {
    loadingMap["delete"](id);
  });
  return promise;
}
function isLoaded(id) {
  return loadedMap.has(id);
}
function isLoading(id) {
  return loadingMap.has(id);
}
function getLoaded(id) {
  return loadedMap.get(id);
}
function removeLoaded(id) {
  if (isLoaded(id)) {
    loadedMap["delete"](id);
  }

  if (isLoading(id)) {
    loadingMap.get(id).then(function () {
      loadedMap["delete"](id);
    });
  }
}

export default getAsync;
export { getLoaded, isLoaded, isLoading, removeLoaded };
//# sourceMappingURL=index.js.map
