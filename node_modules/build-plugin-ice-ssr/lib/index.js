"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var path = require("path");
var fse = require("fs-extra");
var webpack_plugin_1 = require("@loadable/webpack-plugin");
var webpack_config_1 = require("@builder/webpack-config");
var app_helpers_1 = require("@builder/app-helpers");
var webpackNodeExternals = require("webpack-node-externals");
var generateStaticPages_1 = require("./generateStaticPages");
var ssrPlugin_1 = require("./vite/ssrPlugin");
var ssrBuild_1 = require("./vite/ssrBuild");
var replaceHtmlContent_1 = require("./replaceHtmlContent");
var plugin = function (api) { return __awaiter(void 0, void 0, void 0, function () {
    var context, registerTask, getValue, onGetWebpackConfig, onHook, log, applyMethod, modifyUserConfig, registerUserConfig, rootDir, command, webpack, commandArgs, userConfig, outputDir, ssr, nodeExternals, TEMP_PATH, buildDir, serverDir, serverFilename, serverFilePath, templatePath, ssrEntry, ssgEntry, routesFileExists, renderProps, mode, webpackConfig;
    return __generator(this, function (_a) {
        context = api.context, registerTask = api.registerTask, getValue = api.getValue, onGetWebpackConfig = api.onGetWebpackConfig, onHook = api.onHook, log = api.log, applyMethod = api.applyMethod, modifyUserConfig = api.modifyUserConfig, registerUserConfig = api.registerUserConfig;
        // Register nodeExternals in build.json
        registerUserConfig({
            name: 'nodeExternals',
            validation: function (val) {
                return typeof val === 'boolean' || typeof val === 'object';
            }
        });
        rootDir = context.rootDir, command = context.command, webpack = context.webpack, commandArgs = context.commandArgs, userConfig = context.userConfig;
        outputDir = userConfig.outputDir, ssr = userConfig.ssr;
        nodeExternals = userConfig.nodeExternals;
        TEMP_PATH = getValue('TEMP_PATH');
        buildDir = path.join(rootDir, outputDir);
        serverDir = path.join(buildDir, 'server');
        serverFilename = 'index.js';
        serverFilePath = path.join(serverDir, serverFilename);
        templatePath = path.join(__dirname, './server.ts.ejs');
        ssrEntry = path.join(TEMP_PATH, 'plugins/ssr/server.ts');
        ssgEntry = path.join(TEMP_PATH, 'plugins/ssr/renderPage.ts');
        routesFileExists = Boolean(applyMethod('getSourceFile', 'src/routes', rootDir));
        applyMethod('addRenderFile', path.join(__dirname, '../src/env.ts'), path.join(TEMP_PATH, 'plugins/ssr/env.ts'));
        renderProps = {
            outputDir: outputDir,
            routesPath: routesFileExists ? '@' : '../..',
            disableLoadable: !!userConfig.vite,
            // 仅在 vite 的 dev 模式下，需要指定 env，build 阶段 process.env.__IS_SERVER__ 会被替换成布尔值
            importEnv: !!userConfig.vite && command !== 'build',
        };
        applyMethod('addRenderFile', templatePath, ssrEntry, renderProps);
        if (ssr === 'static') {
            applyMethod('addRenderFile', path.join(__dirname, './renderPages.ts.ejs'), ssgEntry, renderProps);
        }
        if (userConfig.vite) {
            // vite 模式下直接使用 process.env.__IS_SERVER__ 的变量，如果注册即便是将会进行字符串替换
            if (command === 'start') {
                onGetWebpackConfig(function (config) {
                    config
                        .plugin('DefinePlugin')
                        .tap(function (_a) {
                        var args = _a[0];
                        delete args['process.env.__IS_SERVER__'];
                        return [args];
                    });
                });
            }
            modifyUserConfig('vite.plugins', [(0, ssrPlugin_1.default)(ssrEntry)], { deepmerge: true });
            onHook('after.build.compile', function (_a) {
                var config = _a.config;
                return __awaiter(void 0, void 0, void 0, function () {
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0: 
                            // dev 阶段直接使用 ssrLoadModule 实时加载并执行
                            // build 服务未实现类似 ssrLoadModule 的能力，需要将 server 源码进行打包
                            return [4 /*yield*/, (0, ssrBuild_1.default)(config, { ssrEntry: ssrEntry, ssgEntry: ssgEntry, ssr: ssr })];
                            case 1:
                                // dev 阶段直接使用 ssrLoadModule 实时加载并执行
                                // build 服务未实现类似 ssrLoadModule 的能力，需要将 server 源码进行打包
                                _b.sent();
                                if (!(ssr === 'static')) return [3 /*break*/, 3];
                                return [4 /*yield*/, (0, generateStaticPages_1.default)(buildDir, serverFilePath)];
                            case 2:
                                _b.sent();
                                _b.label = 3;
                            case 3: return [2 /*return*/];
                        }
                    });
                });
            });
            return [2 /*return*/];
        }
        mode = command === 'start' ? 'development' : 'production';
        webpackConfig = (0, webpack_config_1.default)(mode);
        // config DefinePlugin out of onGetWebpackConfig, so it can be modified by user config
        webpackConfig
            .plugin('DefinePlugin')
            .use(webpack.DefinePlugin, [{
                'process.env.APP_MODE': JSON.stringify(commandArgs.mode || command),
                'process.env.SERVER_PORT': JSON.stringify(commandArgs.port),
            }]);
        onGetWebpackConfig(function (config) {
            if (config.plugins.get('HtmlWebpackPlugin')) {
                config
                    .plugin('HtmlWebpackPlugin')
                    .tap(function (_a) {
                    var args = _a[0];
                    return [__assign(__assign({}, args), { 
                            // will add assets by @loadable/component
                            inject: false })];
                });
            }
            config.plugin('@loadable/webpack-plugin').use(webpack_plugin_1.default);
        });
        modifyUserConfig('babelPlugins', __spreadArray(__spreadArray([], (userConfig.babelPlugins || []), true), [
            require.resolve('./babelPluginReplaceLazy'),
            '@loadable/babel-plugin',
        ], false));
        registerTask('ssr', webpackConfig);
        onGetWebpackConfig('ssr', function (config) {
            config.entryPoints.clear();
            config.entry('index').add(ssrEntry);
            config.target('node');
            config.name('ssr');
            config.module
                .rule('polyfill')
                .include.add(ssrEntry);
            config
                .plugin('DefinePlugin')
                .tap(function (_a) {
                var args = _a[0];
                return [__assign(__assign({}, args), { 'process.env.__IS_SERVER__': true })];
            });
            config.plugins.delete('MiniCssExtractPlugin');
            ['scss', 'scss-module', 'css', 'css-module', 'less', 'less-module'].forEach(function (rule) {
                if (config.module.rules.get(rule)) {
                    config.module.rule(rule).uses.delete('MiniCssExtractPlugin.loader');
                    config.module
                        .rule(rule)
                        .use('css-loader')
                        .tap(function (options) { return (__assign(__assign({}, options), { modules: __assign(__assign({}, (options.modules || {})), { exportOnlyLocals: true }) })); });
                }
            });
            config.output
                .path(serverDir)
                .filename('[name].js')
                .publicPath('/')
                .libraryTarget('commonjs2');
            // not generate vendor
            config.optimization.splitChunks({ cacheGroups: {} });
            // in case of app with client and server code, webpack-node-externals is helpful to reduce server bundle size
            // while by bundle all dependencies, developers do not need to concern about the dependencies of server-side
            // empty externals added by config external
            config.externals(nodeExternals ?
                [
                    webpackNodeExternals({
                        allowlist: __spreadArray([
                            // inner deps need to be bundled
                            /^create-app-shared/,
                            /^react-app-renderer/,
                            /^@ice\/runtime/
                        ], [(nodeExternals === null || nodeExternals === void 0 ? void 0 : nodeExternals.excludes) || []].map(function (exclude) { return RegExp("^".concat(exclude)); }), true)
                    })
                ] : []);
            // remove process fallback when target is node
            config.plugins.delete('ProvidePlugin');
            // no need to generate the loadable-stats.json because it will not be used in anywhere
            config.plugins.delete('@loadable/webpack-plugin');
            function serverRender(res, req) {
                return __awaiter(this, void 0, void 0, function () {
                    var htmlTemplate, serverRender, ctx, _a, error, html, redirectUrl;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                htmlTemplate = fse.readFileSync(path.join(buildDir, 'index.html'), 'utf8');
                                log.info('[SSR]', 'start server render');
                                delete require.cache[serverFilePath];
                                serverRender = require(serverFilePath);
                                ctx = { res: res, req: req };
                                return [4 /*yield*/, serverRender.default(ctx, { htmlTemplate: htmlTemplate })];
                            case 1:
                                _a = _b.sent(), error = _a.error, html = _a.html, redirectUrl = _a.redirectUrl;
                                if (redirectUrl) {
                                    log.info('[SSR]', "Redirect to the new path ".concat(redirectUrl));
                                    res.redirect(302, redirectUrl);
                                }
                                else {
                                    if (error) {
                                        log.error('[SSR] Server side rendering error, downgraded to client side rendering');
                                        log.error(error);
                                    }
                                    log.info('[SSR] SSR success', 'output html content');
                                    log.verbose('[SSR] ssr html content', html);
                                    res.send(html);
                                }
                                return [2 /*return*/];
                        }
                    });
                });
            }
            if (command === 'start') {
                var originalDevMiddleware = config.devServer.get('devMiddleware');
                config.devServer.set('devMiddleware', __assign(__assign({}, originalDevMiddleware), { writeToDisk: function (filePath) {
                        var formattedFilePath = (0, app_helpers_1.formatPath)(filePath);
                        return /(server\/.*|loadable-stats.json|index.html)$/.test(formattedFilePath);
                    } }));
                var serverReady_1 = false;
                var httpResponseQueue_1 = [];
                var setupMiddlewares_1 = config.devServer.get('setupMiddlewares');
                config.devServer.set('setupMiddlewares', function (originalMiddlewares, server) {
                    var app = server.app;
                    var middlewares = originalMiddlewares;
                    if (typeof setupMiddlewares_1 === 'function') {
                        middlewares = setupMiddlewares_1(originalMiddlewares, server);
                    }
                    var compilerDoneCount = 0;
                    server.compiler.compilers.forEach(function (compiler) {
                        compiler.hooks.done.tap('ssrServer', function () {
                            compilerDoneCount++;
                            // wait until all compiler is done
                            if (compilerDoneCount === server.compiler.compilers.length) {
                                serverReady_1 = true;
                                httpResponseQueue_1.forEach(function (_a) {
                                    var req = _a[0], res = _a[1];
                                    serverRender(res, req);
                                });
                                // empty httpResponseQueue
                                httpResponseQueue_1 = [];
                            }
                        });
                    });
                    var pattern = /^\/?((?!\.(js|css|map|json|png|jpg|jpeg|gif|svg|eot|woff2|ttf|ico)).)*$/;
                    app.get(pattern, function (req, res) { return __awaiter(void 0, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            if (serverReady_1) {
                                serverRender(res, req);
                            }
                            else {
                                httpResponseQueue_1.push([req, res]);
                            }
                            return [2 /*return*/];
                        });
                    }); });
                    return middlewares;
                });
            }
            if (command === 'build' && ssr === 'static') {
                // SSG, pre-render page in production
                var ssgBundlePath_1 = path.join(serverDir, 'renderPages.js');
                config.entry('renderPages').add(ssgEntry);
                onHook('after.build.compile', function () { return __awaiter(void 0, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, (0, generateStaticPages_1.default)(buildDir, ssgBundlePath_1)];
                            case 1:
                                _a.sent();
                                return [4 /*yield*/, fse.remove(ssgBundlePath_1)];
                            case 2:
                                _a.sent();
                                return [2 /*return*/];
                        }
                    });
                }); });
            }
        });
        onHook("after.".concat(command, ".compile"), function () {
            var htmlFilePath = path.join(buildDir, 'index.html');
            (0, replaceHtmlContent_1.default)(htmlFilePath, serverFilePath);
        });
        return [2 /*return*/];
    });
}); };
exports.default = plugin;
//# sourceMappingURL=index.js.map