"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var path = require("path");
var vite_1 = require("vite");
var deepmerge_1 = require("deepmerge");
var replaceHtmlContent_1 = require("../replaceHtmlContent");
// simple array merge for config merge
var arrayMerge = function (destinationArray, sourceArray) {
    return __spreadArray(__spreadArray([], (destinationArray || []), true), (sourceArray || []), true);
};
var ssrBuild = function (prodConfig, buildOptions) { return __awaiter(void 0, void 0, void 0, function () {
    var ssrEntry, ssr, ssgEntry, distDir, entry, buildConfig, err_1;
    var _a, _b, _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                ssrEntry = buildOptions.ssrEntry, ssr = buildOptions.ssr, ssgEntry = buildOptions.ssgEntry;
                distDir = (_b = (_a = prodConfig.build) === null || _a === void 0 ? void 0 : _a.outDir) !== null && _b !== void 0 ? _b : path.resolve(process.cwd(), 'build');
                entry = ssr === 'static' ? ssgEntry : ssrEntry;
                buildConfig = (0, deepmerge_1.all)([prodConfig, {
                        // No need to copy public files to SSR directory
                        publicDir: false,
                        define: {
                            'process.env.__IS_SERVER__': true,
                        },
                        build: {
                            minify: false,
                            outDir: path.resolve(distDir, 'server'),
                            ssr: entry,
                            emptyOutDir: false,
                            rollupOptions: {
                                input: {
                                    index: entry
                                },
                                output: {
                                    entryFileNames: '[name].js',
                                    chunkFileNames: '[name].js',
                                },
                            },
                        },
                    }], { arrayMerge: arrayMerge });
                // filter vite-plugin-html-index for create html entry
                buildConfig.plugins = buildConfig.plugins.filter(function (plugin) {
                    var name = plugin.name;
                    return name !== 'vite-plugin-html-index';
                });
                _d.label = 1;
            case 1:
                _d.trys.push([1, 3, , 4]);
                return [4 /*yield*/, (0, vite_1.build)(buildConfig)];
            case 2:
                _d.sent();
                (0, replaceHtmlContent_1.default)(path.join((_c = prodConfig.build) === null || _c === void 0 ? void 0 : _c.outDir, 'index.html'), path.resolve(distDir, 'server', 'index.js'));
                return [3 /*break*/, 4];
            case 3:
                err_1 = _d.sent();
                console.error(err_1);
                return [3 /*break*/, 4];
            case 4: return [2 /*return*/];
        }
    });
}); };
exports.default = ssrBuild;
//# sourceMappingURL=ssrBuild.js.map