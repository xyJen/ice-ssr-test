import { IPluginAPI } from 'build-scripts';
import type ReactGenerator from './generate/ReactGenerator';
import type RaxGenerator from './generate/RaxGenerator';
import { FrameworkType } from './types';
interface IEntries {
    entryName: string;
    entryPath: string;
    source?: string;
    path?: string;
}
interface IConfigOptions {
    type?: string;
    framework?: FrameworkType;
    entries?: IEntries[];
    targetDir?: string;
    executeGenerateTasks?: boolean;
}
interface MPAEntries extends IEntries {
    generator?: RaxGenerator | ReactGenerator;
    finalEntry: string;
    runAppPath: string | null;
    routesFilePath: string | null;
}
export declare const generateMPAEntries: (api: IPluginAPI, options: IConfigOptions) => Record<string, MPAEntries>;
declare const setMPAConfig: (api: any, config: any, options: IConfigOptions) => void;
export default setMPAConfig;
