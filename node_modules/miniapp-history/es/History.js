import generateActions, { __updateRouterMap } from './router';
import Location from './Location';
import { addListener } from './listeners';
var MiniAppHistory = /** @class */ (function () {
    function MiniAppHistory(routes) {
        this.location = new Location();
        __updateRouterMap(routes);
        // Apply actions for history.
        Object.assign(this, generateActions(this.location));
    }
    Object.defineProperty(MiniAppHistory.prototype, "length", {
        get: function () {
            // eslint-disable-next-line no-undef
            return getCurrentPages().length;
        },
        enumerable: false,
        configurable: true
    });
    MiniAppHistory.prototype.listen = function (callback) {
        var listeners = addListener(this.location._pageId, callback);
        return function () {
            var index = -1;
            for (var idx in listeners) {
                if (listeners[idx] === callback) {
                    index = Number(idx);
                    break;
                }
            }
            if (index > -1)
                listeners.splice(index, 1);
        };
    };
    return MiniAppHistory;
}());
export default MiniAppHistory;
