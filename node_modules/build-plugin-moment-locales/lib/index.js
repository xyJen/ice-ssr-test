"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vitePluginMoment_1 = require("./vitePluginMoment");
var plugin = function (_a, options) {
    var onGetWebpackConfig = _a.onGetWebpackConfig, modifyUserConfig = _a.modifyUserConfig, context = _a.context;
    var webpack = context.webpack, userConfig = context.userConfig;
    var locales = (options || {}).locales;
    var localeArray = typeof locales === 'string' ? [locales] : locales;
    if (userConfig.vite) {
        modifyUserConfig('vite', {
            plugins: [(0, vitePluginMoment_1.default)(locales)],
            optimizeDeps: {
                // pre build moment locales
                include: localeArray.map((function (locale) { return "moment/dist/locale/" + locale; })),
            },
        }, { deepmerge: true });
    }
    else {
        onGetWebpackConfig(function (config) {
            if (localeArray.length) {
                var localesRegExp = new RegExp(localeArray.join('|'));
                config.plugin('context-replacement')
                    .use(webpack.ContextReplacementPlugin, [/moment[/\\]locale$/, localesRegExp]);
            }
        });
    }
};
exports.default = plugin;
//# sourceMappingURL=index.js.map