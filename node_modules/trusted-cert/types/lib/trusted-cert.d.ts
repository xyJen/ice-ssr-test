import { pki } from 'node-forge';
import { I18nDictModifier } from '../i18n/interface';
interface CertAndKey {
    cert: pki.Certificate;
    key: pki.rsa.PrivateKey;
}
export declare class TrustedCert {
    private dir;
    private caName;
    private sslName;
    private quiet;
    private i18n;
    constructor({ dir, caName, sslName, quiet, i18n, }?: {
        dir?: string;
        caName?: string;
        sslName?: string;
        quiet?: boolean;
        i18n?: I18nDictModifier;
    });
    install({ hosts, overwrite, }: {
        hosts: string[];
        overwrite?: boolean;
    }): Promise<{
        trusted: boolean;
        key: string;
        cert: string;
        keyFilePath: string;
        certFilePath: string;
    }>;
    uninstall(): Promise<false | undefined>;
    sign({ ca, hosts, overwrite, }: {
        ca?: CertAndKey;
        hosts: string[];
        overwrite?: boolean;
    }): Promise<{
        key: string;
        cert: string;
        keyFilePath: string;
        certFilePath: string;
    }>;
    doTrust(): Promise<boolean>;
    info(): void;
    caInfo(): void;
    private trust;
    private generateKeyPair;
    private loadCertAndKey;
    private loadSSL;
    private loadCA;
    private ensureCA;
    private isCertTrusted;
    private l;
    private log;
}
export {};
