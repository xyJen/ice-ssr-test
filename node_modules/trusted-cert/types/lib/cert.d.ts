import { pki } from 'node-forge';
export declare const generateKeyPair: (options?: pki.rsa.GenerateKeyPairOptions) => Promise<pki.rsa.KeyPair>;
export declare const createCACert: (keys: pki.KeyPair) => pki.Certificate;
export declare function createCert({ caPrivKey, caCertAttrs, publicKey, hosts, expiresIn, }: {
    caPrivKey: pki.PrivateKey;
    caCertAttrs?: Array<pki.CertificateField>;
    publicKey: pki.PublicKey;
    hosts: string[];
    expiresIn?: number;
}): pki.Certificate;
/**
 * 获取证书里支持的域名
 */
export declare const getCertHosts: (cert: pki.Certificate) => string[];
/**
 * 获取缓存的证书文件里的sha1值
 */
export declare const getCertSha1: (cert: pki.Certificate) => string;
/**
 * 获取证书的有效时间
 */
export declare const getCertValidPeriod: (cert: pki.Certificate) => string;
/**
 * 获取证书的名称
 */
export declare const getCertCommonName: (cert: pki.Certificate) => string;
export declare const isCertSignedByCA: (cert: pki.Certificate, ca: pki.Certificate) => boolean;
/**
 * 验证证书是否在有效期内
 */
export declare const isCertValid: (cert: pki.Certificate) => boolean;
