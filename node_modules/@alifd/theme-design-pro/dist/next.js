/*!
 * @alifd/theme-design-pro@0.8.0 (https://fusion.design)
 * @alifd/next@1.25.24 (https://fusion.design)
 * Copyright 2018-present Alibaba Group,
 * Licensed under MIT (https://github.com/alibaba-fusion/next/blob/master/LICENSE)
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"), require("moment"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom", "moment"], factory);
	else if(typeof exports === 'object')
		exports["Next"] = factory(require("react"), require("react-dom"), require("moment"));
	else
		root["Next"] = factory(root["React"], root["ReactDOM"], root["moment"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_11__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 72);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(76);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(10);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(106);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(110);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(10);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) {
  var ReactIs = require('react-is');

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(113)();
}


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyfill", function() { return polyfill; });
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}




/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(84);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(96);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 13 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(26)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(25);
var IE8_DOM_DEFINE = __webpack_require__(53);
var toPrimitive = __webpack_require__(34);
var dP = Object.defineProperty;

exports.f = __webpack_require__(14) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 16 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 17 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(12);
var core = __webpack_require__(13);
var ctx = __webpack_require__(52);
var hide = __webpack_require__(19);
var has = __webpack_require__(16);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(15);
var createDesc = __webpack_require__(27);
module.exports = __webpack_require__(14) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(56);
var defined = __webpack_require__(35);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(38)('wks');
var uid = __webpack_require__(30);
var Symbol = __webpack_require__(12).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 23 */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}

module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(17);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asyncMap = asyncMap;
exports.asyncMapPromise = asyncMapPromise;
exports.complementError = complementError;
exports.format = format;
exports.processErrorResults = processErrorResults;

var _regenerator = _interopRequireDefault(__webpack_require__(48));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(49));

var formatRegExp = /%[sdj%]/g;

function format() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var i = 1;
  var f = args[0];
  var len = args.length;

  if (typeof f === 'function') {
    return f(args.slice(1));
  }

  if (typeof f === 'string') {
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') {
        return '%';
      }

      if (i >= len) {
        return x;
      }

      switch (x) {
        case '%s':
          return String(args[i++]);

        case '%d':
          return Number(args[i++]);

        case '%j':
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return '[Circular]';
          }

        default:
          return x;
      }
    });
    return str;
  }

  return f;
}
/**
 * 串联校验一组数据，只返回第一个出错结果
 * @param {*} arr
 * @param {*} validator
 * @param {*} callback 出递归，告诉错误校验完成
 */


function _asyncValidateSerials(arr, validator, callback) {
  var index = 0;
  var arrLength = arr.length;

  function next(errors) {
    if (errors && errors.length) {
      return callback(errors);
    }

    var original = index;
    index = index + 1;

    if (original < arrLength) {
      validator(arr[original], next);
    } else {
      return callback([]);
    }
  }

  next([]);
}
/**
 * 串联校验一组数据，只返回第一个出错结果
 * @param {*} arr
 * @param {*} validator
 * @returns
 */


function _promiseValidateSeries(_x, _x2) {
  return _promiseValidateSeries2.apply(this, arguments);
}
/**
 * 平铺规则
 * @param  {object} objArr {name: [{value, rule}, {value, rule2}], name2: [{value2, rule3}]}
 * @return {Array} [{value, rule}, {value, rule2}, {value2, rule3}]
 */


function _promiseValidateSeries2() {
  _promiseValidateSeries2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(arr, validator) {
    return _regenerator.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", arr.reduce( /*#__PURE__*/function () {
              var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(prevPromise, next) {
                var errors;
                return _regenerator.default.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return prevPromise;

                      case 3:
                        errors = _context.sent;
                        _context.next = 9;
                        break;

                      case 6:
                        _context.prev = 6;
                        _context.t0 = _context["catch"](0);
                        errors = _context.t0;

                      case 9:
                        if (!(errors && errors.length)) {
                          _context.next = 11;
                          break;
                        }

                        return _context.abrupt("return", errors);

                      case 11:
                        return _context.abrupt("return", validator(next));

                      case 12:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, null, [[0, 6]]);
              }));

              return function (_x6, _x7) {
                return _ref.apply(this, arguments);
              };
            }(), []));

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _promiseValidateSeries2.apply(this, arguments);
}

function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function (k) {
    Object.keys(objArr[k]).forEach(function (r) {
      ret.push(objArr[k][r]);
    });
  });
  return ret;
}
/**
 * 异步调用
 * @param  {map}   objArr   校验规则对象列表
 * @param  {object}   option   配置项
 * @param  {Function} validator     每个校验规则
 * @param  {Function} callback 全部完成后的执行
 */


function asyncMap(objArr, option, validator, callback) {
  // 发现第一个错误即返回
  if (option.first) {
    var flattenArr = flattenObjArr(objArr);
    return _asyncValidateSerials(flattenArr, validator, callback);
  }

  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total = 0;
  var results = [];

  var next = function next(errors) {
    results.push(errors);
    total++;

    if (total === objArrLength) {
      return callback(results);
    }
  };

  objArrKeys.forEach(function (key) {
    var arr = objArr[key];

    _asyncValidateSerials(arr, validator, next);
  });
}

function asyncMapPromise(_x3, _x4, _x5) {
  return _asyncMapPromise.apply(this, arguments);
}

function _asyncMapPromise() {
  _asyncMapPromise = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(objArr, option, validator) {
    var flatObjArr, objArrValues;
    return _regenerator.default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (!option.first) {
              _context3.next = 5;
              break;
            }

            flatObjArr = flattenObjArr(objArr);
            _context3.next = 4;
            return _promiseValidateSeries(flatObjArr, validator);

          case 4:
            return _context3.abrupt("return", _context3.sent);

          case 5:
            objArrValues = Object.values(objArr);
            _context3.next = 8;
            return Promise.all(objArrValues.map(function (val) {
              return _promiseValidateSeries(val, validator);
            }));

          case 8:
            return _context3.abrupt("return", _context3.sent);

          case 9:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _asyncMapPromise.apply(this, arguments);
}

function complementError(rule) {
  return function (oe) {
    if (oe && oe.message) {
      oe.field = rule.field;
      return oe;
    }

    return {
      message: oe,
      field: rule.field
    };
  };
}
/**
 *
 * @param {Array} results errors from running validation
 * @returns {Object} { errors: Array, fields: Object }
 */


function processErrorResults() {
  var results = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var errors = [];
  var fields = {};

  function add(e) {
    if (Array.isArray(e)) {
      errors = errors.concat(e);
    } else {
      errors.push(e);
    }
  }

  for (var i = 0; i < results.length; i++) {
    add(results[i]);
  }

  if (!errors.length) {
    errors = null;
    fields = null;
  } else {
    for (var _i = 0; _i < errors.length; _i++) {
      var field = errors[_i].field;

      if (field) {
        fields[field] = fields[field] || [];
        fields[field].push(errors[_i]);
      }
    }
  }

  return {
    errors: errors,
    fields: fields
  };
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(20);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(55);
var enumBugKeys = __webpack_require__(39);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 30 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 31 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["a"] = (index);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(62)))

/***/ }),
/* 33 */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _extends.apply(this, arguments);
}

module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(20);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 35 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 36 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(38)('keys');
var uid = __webpack_require__(30);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(13);
var global = __webpack_require__(12);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(29) ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 39 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 40 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(35);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(25);
var dPs = __webpack_require__(89);
var enumBugKeys = __webpack_require__(39);
var IE_PROTO = __webpack_require__(37)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(54)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(90).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(15).f;
var has = __webpack_require__(16);
var TAG = __webpack_require__(22)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(22);


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(12);
var core = __webpack_require__(13);
var LIBRARY = __webpack_require__(29);
var wksExt = __webpack_require__(45);
var defineProperty = __webpack_require__(15).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _CSSTransition = _interopRequireDefault(__webpack_require__(125));

var _ReplaceTransition = _interopRequireDefault(__webpack_require__(129));

var _TransitionGroup = _interopRequireDefault(__webpack_require__(66));

var _Transition = _interopRequireDefault(__webpack_require__(64));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = {
  Transition: _Transition.default,
  TransitionGroup: _TransitionGroup.default,
  ReplaceTransition: _ReplaceTransition.default,
  CSSTransition: _CSSTransition.default
};

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(138);


/***/ }),
/* 49 */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 50 */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var styleEqual = __webpack_require__(157);
var hasOwnProperty = Object.prototype.hasOwnProperty;

function type(a) {
  return Array.isArray(a) ? 'array' : typeof a;
}

function elementEquals(a, b) {
  var typeOfA = type(a);
  var typeOfB = type(b);

  if (typeOfA !== typeOfB) return false;

  switch (typeOfA) {
    case 'array':
      if (a.length !== b.length) return false;
      for (var i = 0; i < a.length; i++) {
        if (!elementEquals(a[i], b[i])) return false;
      }
      return true;
    case 'object':
      if (!a || !b) return a === b;
      if (a.type !== b.type) return false;
      if (a.key !== b.key) return false;
      if (a.ref !== b.ref) return false;
      return shallowElementEquals(a.props, b.props);
      break;
    default:
      return a === b;
  }
}

function shallowElementEquals(a, b) {
  var aCount = 0;
  var bCount = 0;

  for (var key in a) {
    if (hasOwnProperty.call(a, key)) {
      if (key === 'style') {
        // NOTE(lmr): kind of risky, but i'm assuming that a `style` prop is a React Native style,
        // and using the `styleEqual` algorithm here.
        if (!styleEqual(a[key], b[key])) return false;
      } else if (key === 'children') {
        // will compare children later
      } else {
        if (a[key] !== b[key]) return false;
      }
      aCount++;
    }
  }

  for (var key in b) {
    if (hasOwnProperty.call(b, key)) {
      bCount++;
    }
  }

  if (aCount !== bCount) return false;

  // compare children last...
  return elementEquals(a.children, b.children);
}

module.exports = shallowElementEquals;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(79);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(14) && !__webpack_require__(26)(function () {
  return Object.defineProperty(__webpack_require__(54)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(20);
var document = __webpack_require__(12).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(16);
var toIObject = __webpack_require__(21);
var arrayIndexOf = __webpack_require__(81)(false);
var IE_PROTO = __webpack_require__(37)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(57);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 57 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(29);
var $export = __webpack_require__(18);
var redefine = __webpack_require__(59);
var hide = __webpack_require__(19);
var Iterators = __webpack_require__(42);
var $iterCreate = __webpack_require__(88);
var setToStringTag = __webpack_require__(44);
var getPrototypeOf = __webpack_require__(91);
var ITERATOR = __webpack_require__(22)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(19);


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(55);
var hiddenKeys = __webpack_require__(39).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(31);
var createDesc = __webpack_require__(27);
var toIObject = __webpack_require__(21);
var toPrimitive = __webpack_require__(34);
var has = __webpack_require__(16);
var IE8_DOM_DEFINE = __webpack_require__(53);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(14) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 62 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",$="Invalid Date",l=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},v="en",D={};D[v]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return v;if("string"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split("-");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(v=i),i||!r&&v},w=function(t,e){if(p(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g="set"+(this.$u?"UTC":"");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var v=this.$locale().weekStart||0,D=(y<v?y+7:y)-v;return $(r?m-D:m+(6-D),M);case a:case d:return l(g+"Hours",0);case u:return l(g+"Minutes",1);case s:return l(g+"Seconds",2);case i:return l(g+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h="set"+(this.$u?"UTC":""),$=(n={},n[a]=h+"Date",n[d]=h+"Date",n[f]=h+"Month",n[c]=h+"FullYear",n[u]=h+"Hours",n[s]=h+"Minutes",n[i]=h+"Seconds",n[r]=h+"Milliseconds",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].substr(0,s)},c=function(t){return O.s(s%12||12,t,"0")},d=n.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,"0"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,"0"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,v=O.m(this,M);return v=(l={},l[c]=v/12,l[f]=v,l[h]=v/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?v:O.a(v)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[v],w.Ls=D,w.p={},w}));

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(5));

var _react = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(9));

var _reactLifecyclesCompat = __webpack_require__(8);

var _PropTypes = __webpack_require__(65);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var UNMOUNTED = 'unmounted';
exports.UNMOUNTED = UNMOUNTED;
var EXITED = 'exited';
exports.EXITED = EXITED;
var ENTERING = 'entering';
exports.ENTERING = ENTERING;
var ENTERED = 'entered';
exports.ENTERED = ENTERED;
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

exports.EXITING = EXITING;

var Transition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  var _proto = Transition.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: null // allows for nested Transitions

    };
  };

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      var node = _reactDom.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(node, appearing);

      _this2.onTransitionEnd(node, enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      this.props.addEndListener(node, this.nextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react.default.Children.only(children);

    return _react.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react.default.Component);

Transition.contextTypes = {
  transitionGroup: PropTypes.object
};
Transition.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};
Transition.propTypes =  false ? {
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = _PropTypes.timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes.func // Name the function so it is clearer in the documentation

} : {};

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

exports.default = _default;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.classNamesShape = exports.timeoutsShape = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(5));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var timeoutsShape =  false ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
  enter: _propTypes.default.number,
  exit: _propTypes.default.number,
  appear: _propTypes.default.number
}).isRequired]) : null;
exports.timeoutsShape = timeoutsShape;
var classNamesShape =  false ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
  enter: _propTypes.default.string,
  exit: _propTypes.default.string,
  active: _propTypes.default.string
}), _propTypes.default.shape({
  enter: _propTypes.default.string,
  enterDone: _propTypes.default.string,
  enterActive: _propTypes.default.string,
  exit: _propTypes.default.string,
  exitDone: _propTypes.default.string,
  exitActive: _propTypes.default.string
})]) : null;
exports.classNamesShape = classNamesShape;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(5));

var _react = _interopRequireDefault(__webpack_require__(0));

var _reactLifecyclesCompat = __webpack_require__(8);

var _ChildMapping = __webpack_require__(130);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: {
        isMounting: !this.appeared
      }
    };
  };

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
    this.mounted = true;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = _extends({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return children;
    }

    return _react.default.createElement(Component, props, children);
  };

  return TransitionGroup;
}(_react.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes.default.object.isRequired
};
TransitionGroup.propTypes =  false ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: _propTypes.default.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: _propTypes.default.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: _propTypes.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;

var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);

exports.default = _default;
module.exports = exports["default"];

/***/ }),
/* 67 */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(133);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/**
 * Adds the key-value `pair` to `map`.
 *
 * @private
 * @param {Object} map The map to modify.
 * @param {Array} pair The key-value pair to add.
 * @returns {Object} Returns `map`.
 */
function addMapEntry(map, pair) {
  // Don't return `map.set` because it's not chainable in IE 11.
  map.set(pair[0], pair[1]);
  return map;
}

/**
 * Adds `value` to `set`.
 *
 * @private
 * @param {Object} set The set to modify.
 * @param {*} value The value to add.
 * @returns {Object} Returns `set`.
 */
function addSetEntry(set, value) {
  // Don't return `set.add` because it's not chainable in IE 11.
  set.add(value);
  return set;
}

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array ? array.length : 0;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    objectCreate = Object.create,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeKeys = overArg(Object.keys, Object);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  this.__data__ = new ListCache(entries);
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  return this.__data__['delete'](key);
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var cache = this.__data__;
  if (cache instanceof ListCache) {
    var pairs = cache.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      return this;
    }
    cache = this.__data__ = new MapCache(pairs);
  }
  cache.set(key, value);
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    object[key] = value;
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @param {boolean} [isFull] Specify a clone including symbols.
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
  var result;
  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      if (isHostObject(value)) {
        return object ? value : {};
      }
      result = initCloneObject(isFunc ? {} : value);
      if (!isDeep) {
        return copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (!isArr) {
    var props = isFull ? getAllKeys(value) : keys(value);
  }
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
  });
  return result;
}

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} prototype The object to inherit from.
 * @returns {Object} Returns the new object.
 */
function baseCreate(proto) {
  return isObject(proto) ? objectCreate(proto) : {};
}

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

/**
 * The base implementation of `getTag`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  return objectToString.call(value);
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var result = new buffer.constructor(buffer.length);
  buffer.copy(result);
  return result;
}

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/**
 * Creates a clone of `map`.
 *
 * @private
 * @param {Object} map The map to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned map.
 */
function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor);
}

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/**
 * Creates a clone of `set`.
 *
 * @private
 * @param {Object} set The set to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned set.
 */
function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor);
}

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    assignValue(object, key, newValue === undefined ? source[key] : newValue);
  }
  return object;
}

/**
 * Copies own symbol properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Creates an array of the own enumerable symbol properties of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11,
// for data views in Edge < 14, and promises in Node.js.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = objectToString.call(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : undefined;

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, true, true);
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = cloneDeep;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62), __webpack_require__(136)(module)))

/***/ }),
/* 70 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 71 */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(73);
module.exports = __webpack_require__(74);


/***/ }),
/* 73 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(75);

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
var env_namespaceObject = {};
__webpack_require__.d(env_namespaceObject, "ieVersion", function() { return ieVersion; });
__webpack_require__.d(env_namespaceObject, "isProduction", function() { return isProduction; });
__webpack_require__.d(env_namespaceObject, "default", function() { return env; });
var log_namespaceObject = {};
__webpack_require__.d(log_namespaceObject, "deprecated", function() { return log_deprecated; });
__webpack_require__.d(log_namespaceObject, "warning", function() { return log_warning; });
var object_namespaceObject = {};
__webpack_require__.d(object_namespaceObject, "typeOf", function() { return typeOf; });
__webpack_require__.d(object_namespaceObject, "isArrayLike", function() { return isArrayLike; });
__webpack_require__.d(object_namespaceObject, "isPromise", function() { return isPromise; });
__webpack_require__.d(object_namespaceObject, "isPlainObject", function() { return isPlainObject; });
__webpack_require__.d(object_namespaceObject, "shallowEqual", function() { return object_shallowEqual; });
__webpack_require__.d(object_namespaceObject, "each", function() { return each; });
__webpack_require__.d(object_namespaceObject, "pickOthers", function() { return pickOthers; });
__webpack_require__.d(object_namespaceObject, "pickProps", function() { return pickProps; });
__webpack_require__.d(object_namespaceObject, "pickAttrsWith", function() { return pickAttrsWith; });
__webpack_require__.d(object_namespaceObject, "isNil", function() { return isNil; });
__webpack_require__.d(object_namespaceObject, "deepMerge", function() { return deepMerge; });
__webpack_require__.d(object_namespaceObject, "isFunctionComponent", function() { return isFunctionComponent; });
__webpack_require__.d(object_namespaceObject, "isClassComponent", function() { return isClassComponent; });
__webpack_require__.d(object_namespaceObject, "isReactFragment", function() { return isReactFragment; });
__webpack_require__.d(object_namespaceObject, "values", function() { return object_values; });
var string_namespaceObject = {};
__webpack_require__.d(string_namespaceObject, "camelcase", function() { return camelcase; });
__webpack_require__.d(string_namespaceObject, "hyphenate", function() { return hyphenate; });
__webpack_require__.d(string_namespaceObject, "template", function() { return template; });
var dom_namespaceObject = {};
__webpack_require__.d(dom_namespaceObject, "hasDOM", function() { return hasDOM; });
__webpack_require__.d(dom_namespaceObject, "hasClass", function() { return hasClass; });
__webpack_require__.d(dom_namespaceObject, "addClass", function() { return addClass; });
__webpack_require__.d(dom_namespaceObject, "removeClass", function() { return removeClass; });
__webpack_require__.d(dom_namespaceObject, "toggleClass", function() { return toggleClass; });
__webpack_require__.d(dom_namespaceObject, "matches", function() { return dom_matches; });
__webpack_require__.d(dom_namespaceObject, "getNodeHozWhitespace", function() { return getNodeHozWhitespace; });
__webpack_require__.d(dom_namespaceObject, "getStyle", function() { return dom_getStyle; });
__webpack_require__.d(dom_namespaceObject, "setStyle", function() { return setStyle; });
__webpack_require__.d(dom_namespaceObject, "scrollbar", function() { return scrollbar; });
__webpack_require__.d(dom_namespaceObject, "hasScroll", function() { return dom_hasScroll; });
__webpack_require__.d(dom_namespaceObject, "getOffset", function() { return getOffset; });
__webpack_require__.d(dom_namespaceObject, "getPixels", function() { return getPixels; });
__webpack_require__.d(dom_namespaceObject, "getClosest", function() { return getClosest; });
__webpack_require__.d(dom_namespaceObject, "getMatches", function() { return getMatches; });
__webpack_require__.d(dom_namespaceObject, "saveRef", function() { return saveRef; });
var events_namespaceObject = {};
__webpack_require__.d(events_namespaceObject, "off", function() { return _off; });
__webpack_require__.d(events_namespaceObject, "on", function() { return on; });
__webpack_require__.d(events_namespaceObject, "once", function() { return once; });
var func_namespaceObject = {};
__webpack_require__.d(func_namespaceObject, "noop", function() { return noop; });
__webpack_require__.d(func_namespaceObject, "prevent", function() { return prevent; });
__webpack_require__.d(func_namespaceObject, "makeChain", function() { return makeChain; });
__webpack_require__.d(func_namespaceObject, "bindCtx", function() { return bindCtx; });
__webpack_require__.d(func_namespaceObject, "promiseCall", function() { return promiseCall; });
__webpack_require__.d(func_namespaceObject, "invoke", function() { return invoke; });
__webpack_require__.d(func_namespaceObject, "renderNode", function() { return renderNode; });
__webpack_require__.d(func_namespaceObject, "checkDate", function() { return checkDate; });
__webpack_require__.d(func_namespaceObject, "checkRangeDate", function() { return checkRangeDate; });
var support_namespaceObject = {};
__webpack_require__.d(support_namespaceObject, "animation", function() { return support_animation; });
__webpack_require__.d(support_namespaceObject, "transition", function() { return transition; });
__webpack_require__.d(support_namespaceObject, "flex", function() { return support_flex; });
var focus_namespaceObject = {};
__webpack_require__.d(focus_namespaceObject, "getFocusNodeList", function() { return getFocusNodeList; });
__webpack_require__.d(focus_namespaceObject, "saveLastFocusNode", function() { return saveLastFocusNode; });
__webpack_require__.d(focus_namespaceObject, "clearLastFocusNode", function() { return clearLastFocusNode; });
__webpack_require__.d(focus_namespaceObject, "backLastFocusNode", function() { return backLastFocusNode; });
__webpack_require__.d(focus_namespaceObject, "limitTabRange", function() { return limitTabRange; });
var htmlId_namespaceObject = {};
__webpack_require__.d(htmlId_namespaceObject, "randomId", function() { return randomId; });
__webpack_require__.d(htmlId_namespaceObject, "escapeForId", function() { return escapeForId; });

// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/extends.js
var helpers_extends = __webpack_require__(1);
var extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);

// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(2);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(3);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/inherits.js
var inherits = __webpack_require__(4);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"}
var external___root___React___commonjs2___react___commonjs___react___amd___react__ = __webpack_require__(0);
var external___root___React___commonjs2___react___commonjs___react___amd___react___default = /*#__PURE__*/__webpack_require__.n(external___root___React___commonjs2___react___commonjs___react___amd___react__);

// EXTERNAL MODULE: ./node_modules/_prop-types@15.8.1@prop-types/index.js
var _prop_types_15_8_1_prop_types = __webpack_require__(5);
var _prop_types_15_8_1_prop_types_default = /*#__PURE__*/__webpack_require__.n(_prop_types_15_8_1_prop_types);

// EXTERNAL MODULE: ./node_modules/_classnames@2.3.1@classnames/index.js
var _classnames_2_3_1_classnames = __webpack_require__(6);
var _classnames_2_3_1_classnames_default = /*#__PURE__*/__webpack_require__.n(_classnames_2_3_1_classnames);

// EXTERNAL MODULE: external {"root":"ReactDOM","commonjs2":"react-dom","commonjs":"react-dom","amd":"react-dom"}
var external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__ = __webpack_require__(9);
var external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default = /*#__PURE__*/__webpack_require__.n(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__);

// EXTERNAL MODULE: ./node_modules/_react-lifecycles-compat@3.0.4@react-lifecycles-compat/react-lifecycles-compat.es.js
var react_lifecycles_compat_es = __webpack_require__(8);

// EXTERNAL MODULE: ./node_modules/_resize-observer-polyfill@1.5.1@resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es = __webpack_require__(32);

// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(10);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/env.js
/**
 * IE浏览器的渲染引擎版本号
 * 注意：此属性与浏览器版本号不同，IE的渲染引擎版本号是可以通过HTML header或手动设置去更改的
 * @type {Number} 6 ~ 11
 */
var ieVersion = typeof document !== 'undefined' ? document.documentMode : undefined;

/**
 * 判断是否是生产环境
 * @type {Boolean}
 */
var isProduction = function isProduction() {
    var PRODUCTION_ENV = 'production';
    var result = false;
    try {
        if ("production" === PRODUCTION_ENV) {
            result = true;
        }
    } catch (err) {
        //
    }

    return result;
};

/* harmony default export */ var env = ({
    ieVersion: ieVersion,
    isProduction: isProduction
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/log.js


/* eslint no-console: 0 */

/**
 * 反对使用某一方法或属性的警告
 * @param  {String} props     过时的属性或方法名
 * @param  {String} instead   替代的属性或方法名
 * @param  {String} component 组件名
 *
 * @example
 * log.deprecated('onBeforeClose', 'beforeClose', 'Dialog');
 * // Warning: onBeforeClose is deprecated at [ Dialog ], use [ beforeClose ] instead of it.
 */
function log_deprecated(props, instead, component) {
    /* istanbul ignore else */
    if (!isProduction() && typeof console !== 'undefined' && console.error) {
        return console.error('Warning: [ ' + props + ' ] is deprecated at [ ' + component + ' ], ' + ('use [ ' + instead + ' ] instead of it.'));
    }
}

/**
 * 控制台警告日志
 * @param {String} msg
 * @return {Console<Error> | void}
 */
function log_warning(msg) {
    /* istanbul ignore else */
    if (!isProduction() && typeof console !== 'undefined' && console.error) {
        return console.error('Warning: ' + msg);
    }
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/object.js




/**
 * 获取对象的类型
 * @param  {*} obj
 * @return {String}
 *
 * @example
 * typeOf([]) === 'Array'
 * typeOf() === 'Undefined'
 * typeOf(1) === 'Number'
 */
function typeOf(obj) {
    return Object.prototype.toString.call(obj).replace(/\[object\s|]/g, '');
}

/**
 * 判断是否是数组或类数组对象
 * @param  {*}  obj
 * @return {Boolean}
 *
 * @example
 * isArrayLike([]) === true
 * isArrayLike(arguments) === true
 * isArrayLike(this.props.children) === true
 */
function isArrayLike(obj) {
    var length = !!obj && 'length' in obj && obj.length;
    var type = typeOf(obj);

    return type === 'Array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;
}

/**
 * 判断对象是否是一个promise，即是否可以用.then
 * @param  {*}  obj
 * @return {Boolean}
 */
function isPromise(obj) {
    return !!obj && ((typeof obj === 'undefined' ? 'undefined' : typeof_default()(obj)) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

/**
 * 是否是一个纯净的对象
 * @param  {*}  obj
 * @return {Boolean}
 * @reference https://github.com/jonschlinkert/is-plain-object
 */
function isPlainObject(obj) {
    if (typeOf(obj) !== 'Object') {
        return false;
    }

    var ctor = obj.constructor;

    if (typeof ctor !== 'function') {
        return false;
    }

    var prot = ctor.prototype;

    if (typeOf(prot) !== 'Object') {
        return false;
    }

    if (!prot.hasOwnProperty('isPrototypeOf')) {
        return false;
    }

    return true;
}

/**
 * 对象浅比较
 * @param  {Object} objA
 * @param  {Object} objB
 * @param  {Function}  [compare] 手动调用方法比较
 * @return {Boolean}      对象浅比较是否相等
 *
 * @example
 * object.shallowEqual({a: 100}, {a: 100}); // true
 */
function object_shallowEqual(objA, objB, compare) {
    if (objA === objB) {
        return true;
    }

    // 其中一个不是object，则不相等
    if (!objA || !objB || (typeof objA === 'undefined' ? 'undefined' : typeof_default()(objA)) + (typeof objB === 'undefined' ? 'undefined' : typeof_default()(objB)) !== 'objectobject') {
        return false;
    }

    var keyA = Object.keys(objA);
    var keyB = Object.keys(objB);
    var len = keyA.length;

    // key 数量不一致则不相等
    if (len !== keyB.length) {
        return false;
    }

    var hasCallback = typeof compare === 'function';

    for (var i = 0; i < len; i++) {
        var key = keyA[i];

        if (!Object.prototype.hasOwnProperty.call(objB, key)) {
            return false;
        }

        var valA = objA[key];
        var valB = objB[key];

        var ret = hasCallback ? compare(valA, valB, key) : void 0;

        if (ret === false || ret === void 0 && valA !== valB) {
            return false;
        }
    }

    return true;
}

/**
 * 遍历对象或数组，或者类数组，例如React中的children对象、arguments等
 * @param  {Object|Array}   obj
 * @param  {Function} callback fn(n, i) or fn(val, key)
 * @param  {Number}   [direction = 1] 是否倒序遍历，只对数组有效
 * @return {Object|Array}
 *
 * @example
 * // 遍历数组
 * object.each([100, 200, 300], (n, i) => console.log(n, i));
 * // 遍历json对象
 * object.each({a: 100, b: 200}, (value, key) => console.log(key, value));
 * // 遍历React子节点
 * object.each(this.props.children, (child, index) => console.log(child));
 * // 遍历arguments
 * object.each(arguments, (arg, i) => console.log(arg));
 */
function each(obj, callback, direction) {
    var reversed = direction === -1;
    var length = obj.length;
    var value = void 0,
        i = reversed ? length - 1 : 0;

    if (isArrayLike(obj)) {
        for (; i < length && i >= 0; reversed ? i-- : i++) {
            value = callback.call(obj[i], obj[i], i);

            if (value === false) {
                break;
            }
        }
    } else {
        for (i in obj) {
            /* istanbul ignore else */
            if (obj.hasOwnProperty(i)) {
                value = callback.call(obj[i], obj[i], i);

                if (value === false) {
                    break;
                }
            }
        }
    }

    return obj;
}

// @private 判断key是否在数组或对象中
var _isInObj = function _isInObj(key, obj, isArray) {
    return isArray ? obj.indexOf(key) > -1 : key in obj;
};

/**
 * 过滤出其它属性
 * @param  {Object|Array} holdProps 过滤的参照对象，最终的结果只保留不在参照对象中的key
 * @param  {Object} props     被过滤的对象
 * @return {Object}           others
 *
 * @example
 * object.pickOthers(FooComponent.propTypes, this.props);
 * object.pickOthers(['className', 'onChange'], this.props);
 */
function pickOthers(holdProps, props) {
    var others = {};
    var isArray = typeOf(holdProps) === 'Array';

    for (var key in props) {
        if (!_isInObj(key, holdProps, isArray)) {
            others[key] = props[key];
        }
    }

    return others;
}

/**
 * 过滤出需要的属性
 * @param  {Object|Array} holdProps 过滤的参照对象，最终的结果只保留在参照对象中的key
 * @param  {Object} props     被过滤的对象
 * @return {Object}           others
 *
 * @example
 * object.pickProps(FooComponent.propTypes, this.props);
 * object.pickProps(['className', 'onChange'], this.props);
 */
function pickProps(holdProps, props) {
    var others = {};
    var isArray = typeOf(holdProps) === 'Array';

    for (var key in props) {
        if (_isInObj(key, holdProps, isArray)) {
            others[key] = props[key];
        }
    }

    return others;
}

/**
 * 过滤出带prefix的属性
 * @param  {Object} holdProps 过滤的参照对象，最终的结果只保留不在参照对象中的key
 * @param  {string} prefix    包含的字符串
 * @return {Object}           others
 *
 * @example
 * object.pickAttrsWith(FooComponent.propTypes, 'data-');
 */
function pickAttrsWith(holdProps, prefix) {
    var others = {};

    for (var key in holdProps) {
        if (key.match(prefix)) {
            others[key] = holdProps[key];
        }
    }

    return others;
}

/**
 * Checks if value is `null` or `undefined`.
 * @param {*} value
 * @return {Boolean}
 */
function isNil(value) {
    // It will returns `true` only if `null` or `undefined` compare with `null`
    // with loose equaliy
    return value == null; // eslint-disable-line eqeqeq
}

/**
 * Deep merge two objects.
 * @param target
 * @param ...sources
 * @reference https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge?page=1&tab=votes#tab-top
 */
function deepMerge(target) {
    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        sources[_key - 1] = arguments[_key];
    }

    if (!sources.length) return target;
    var source = sources.shift();

    if (!isPlainObject(target)) {
        target = {};
    }

    if (isPlainObject(target) && isPlainObject(source)) {
        for (var key in source) {
            // 如果是object 进行深拷贝
            if (isPlainObject(source[key]) && !external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(source[key])) {
                var _extends2;

                if (!target[key]) extends_default()(target, (_extends2 = {}, _extends2[key] = {}, _extends2));
                // fix {a: 'te'}, {a:{b:3}}
                if (!isPlainObject(target[key])) {
                    target[key] = source[key];
                }
                deepMerge(target[key], source[key]);
                // string/number/function/react node 等直接复制
            } else {
                var _extends3;

                extends_default()(target, (_extends3 = {}, _extends3[key] = source[key], _extends3));
            }
        }
    }

    return deepMerge.apply(undefined, [target].concat(sources));
}

/**
 * 组件是否为 Fucntion Component
 * @param {*} component 传入的组件
 */
function isFunctionComponent(component) {
    return typeOf(component) === 'Function' && component.prototype && component.prototype.isReactComponent === undefined;
}

/**
 * 组件是否为 Class Component
 * @param {*} component  传入的组件
 */
function isClassComponent(component) {
    return typeOf(component) === 'Function' && component.prototype && component.prototype.isReactComponent !== undefined;
}

/**
 * 判断是否为 ReactFragment
 * @param {*} component  传入的组件
 */
function isReactFragment(component) {
    if (isNil(component)) {
        return false;
    }

    if (component.type) {
        return component.type === external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment;
    }
    return component === external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment;
}

/**
 * Creates an array of the own enumerable string keyed property values of object.
 *
 * @param {Object} obj
 * @returns {Array}
 *
 * @example
 * // returns [1, 2]
 * values({a: 1, b: 2})
 */
function object_values(obj) {
    if (Object.values) {
        return Object.values(obj);
    }

    var vals = [];

    for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
            vals.push(obj[key]);
        }
    }

    return vals;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/string.js



/**
 * 将字符串转化为驼峰式写法
 * @param  {String} str 例：-webkit-transition
 * @return {String}     例：WebkitTransition
 */
function camelcase(str) {
    if (!/-/.test(str)) {
        return str || '';
    }
    return str.toLowerCase().replace(/-([a-z])/g, function ($0, $1) {
        return $1.toUpperCase();
    });
}

/**
 * 将驼峰式字符串转化为连字符写法
 * @param  {String} str 例：WebkitTransition
 * @return {String}     例：-webkit-transition
 */
function hyphenate(str) {
    var strType = typeOf(str);
    if (strType !== 'String') {
        log_warning('[ hyphenate(str: string): string ] ' + ('Expected arguments[0] to be a string but get a ' + strType + '.') + 'It will return an empty string without any processing.');
        return '';
    }
    return str.replace(/([A-Z])/g, function ($0) {
        return '-' + $0.toLowerCase();
    });
}

/**
 * 替换模板字符串
 * @param {String} tpl     例：当前{current}, 共{total}页
 * @param {Object} object  例：{current: 1, total: 9}
 * @return {String}        例：
 */
function template(tpl) {
    var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var tplType = typeOf(tpl);
    if (tplType !== 'String') {
        log_warning('[ template(tpl: string, object: object): string ] ' + ('Expected arguments[0] to be a string but get a ' + tplType + '.') + 'It will return an empty string without any processing.');
        return '';
    }

    return tpl.replace(/\{[a-z]*\}/g, function (str) {
        var key = str.substring(1, str.length - 1);
        return object[key] || '';
    });
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/dom.js




/**
 * 是否能使用 DOM 方法
 * @type {Boolean}
 */
var hasDOM = typeof window !== 'undefined' && !!window.document && !!document.createElement;

/**
 * 节点是否包含指定 className
 * @param  {Element}  node
 * @param  {String}  className
 * @return {Boolean}
 *
 * @example
 * dom.hasClass(document.body, 'foo');
 */
function hasClass(node, className) {
    /* istanbul ignore if */
    if (!hasDOM || !node) {
        return false;
    }

    if (node.classList) {
        return node.classList.contains(className);
    } else {
        return node.className.indexOf(className) > -1;
    }
}

/**
 * 添加 className
 * @param {Element} node
 * @param {String} className
 *
 * @example
 * dom.addClass(document.body, 'foo');
 */
function addClass(node, className, _force) {
    /* istanbul ignore if */
    if (!hasDOM || !node) {
        return;
    }

    if (node.classList) {
        node.classList.add(className);
    } else if (_force === true || !hasClass(node, className)) {
        node.className += ' ' + className;
    }
}

/**
 * 移除 className
 * @param  {Element} node
 * @param  {String} className
 *
 * @example
 * dom.removeClass(document.body, 'foo');
 */
function removeClass(node, className, _force) {
    /* istanbul ignore if */
    if (!hasDOM || !node) {
        return;
    }

    if (node.classList) {
        node.classList.remove(className);
    } else if (_force === true || hasClass(node, className)) {
        node.className = node.className.replace(className, '').replace(/\s+/g, ' ').trim();
    }
}

/**
 * 切换 className
 * @param  {Element} node
 * @param  {String} className
 * @return {Boolean}           执行后节点上是否还有此 className
 *
 * @example
 * dom.toggleClass(document.body, 'foo');
 */
function toggleClass(node, className) {
    /* istanbul ignore if */
    if (!hasDOM || !node) {
        return false;
    }

    if (node.classList) {
        return node.classList.toggle(className);
    } else {
        var flag = hasClass(node, className);
        flag ? removeClass(node, className, true) : addClass(node, className, true);

        return !flag;
    }
}

/**
 * 元素是否匹配 CSS 选择器
 * @param  {Element} node       DOM 节点
 * @param  {String}  selector   CSS 选择器
 * @return {Boolean}
 *
 * @example
 * dom.matches(mountNode, '.container'); // boolean
 */
var dom_matches = function () {
    var matchesFn = null;
    /* istanbul ignore else */
    if (hasDOM) {
        var _body = document.body || document.head;
        matchesFn = _body.matches ? 'matches' : _body.webkitMatchesSelector ? 'webkitMatchesSelector' : _body.msMatchesSelector ? 'msMatchesSelector' : _body.mozMatchesSelector ? 'mozMatchesSelector' : null;
    }

    return function (node, selector) {
        if (!hasDOM || !node) {
            return false;
        }

        return matchesFn ? node[matchesFn](selector) : false;
    };
}();

/**
 * 获取元素计算后的样式
 * @private
 * @param  {Element} node
 * @return {Object}
 */
function _getComputedStyle(node) {
    return node && node.nodeType === 1 ? window.getComputedStyle(node, null) : {};
}

var PIXEL_PATTERN = /margin|padding|width|height|max|min|offset|size|top/i;
var removePixel = { left: 1, top: 1, right: 1, bottom: 1 };

/**
 * 校验并修正元素的样式属性值
 * @private
 * @param  {Element} node
 * @param  {String} type
 * @param  {Number} value
 */
function _getStyleValue(node, type, value) {
    type = type.toLowerCase();

    if (value === 'auto') {
        if (type === 'height') {
            return node.offsetHeight || 0;
        }
        if (type === 'width') {
            return node.offsetWidth || 0;
        }
    }

    if (!(type in removePixel)) {
        // 属性值是否需要去掉 px 单位，这里假定此类的属性值都是 px 为单位的
        removePixel[type] = PIXEL_PATTERN.test(type);
    }

    return removePixel[type] ? parseFloat(value) || 0 : value;
}

var floatMap = { cssFloat: 1, styleFloat: 1, float: 1 };

function getNodeHozWhitespace(node) {
    var paddingLeft = dom_getStyle(node, 'paddingLeft');
    var paddingRight = dom_getStyle(node, 'paddingRight');
    var marginLeft = dom_getStyle(node, 'marginLeft');
    var marginRight = dom_getStyle(node, 'marginRight');
    return paddingLeft + paddingRight + marginLeft + marginRight;
}

/**
 * 获取元素计算后的样式
 * @param  {Element} node DOM 节点
 * @param  {String} name 属性名
 * @return {Number|Object}
 */
function dom_getStyle(node, name) {
    /* istanbul ignore if */
    if (!hasDOM || !node) {
        return null;
    }

    var style = _getComputedStyle(node);

    // 如果不指定属性名，则返回全部值
    if (arguments.length === 1) {
        return style;
    }

    // if style is {}(e.g. node isn't a element node), return null
    if (isPlainObject(style)) {
        return null;
    }

    name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;

    return _getStyleValue(node, name, style.getPropertyValue(hyphenate(name)) || node.style[camelcase(name)]);
}

/**
 * 设置元素的样式
 * @param {Element} node  DOM 节点
 * @param {Object|String} name  属性名，或者是一个对象，包含多个属性
 * @param {Number|String} value 属性值
 *
 * @example
 * // 设置单个属性值
 * dom.setStyle(mountNode, 'width', 100);
 * // 设置多条属性值
 * dom.setStyle(mountNode, {
 *     width: 100,
 *     height: 200
 * });
 */
function setStyle(node, name, value) {
    /* istanbul ignore if */
    if (!hasDOM || !node) {
        return false;
    }

    // 批量设置多个值
    if ((typeof name === 'undefined' ? 'undefined' : typeof_default()(name)) === 'object' && arguments.length === 2) {
        each(name, function (val, key) {
            return setStyle(node, key, val);
        });
    } else {
        name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;
        if (typeof value === 'number' && PIXEL_PATTERN.test(name)) {
            value = value + 'px';
        }
        node.style[camelcase(name)] = value; // IE8 support
    }
}

var isScrollDisplay = function isScrollDisplay(element) {
    try {
        var scrollbarStyle = window.getComputedStyle(element, '::-webkit-scrollbar');
        return !scrollbarStyle || scrollbarStyle.getPropertyValue('display') !== 'none';
    } catch (e) {
        // ignore error for firefox
    }

    return true;
};

/**
 * 获取默认的滚动条大小（通过创造一个滚动元素，读取滚动元素的滚动条信息）
 * @return {Object} width, height
 */
function scrollbar() {
    var scrollDiv = document.createElement('div');
    scrollDiv.className += 'just-to-get-scrollbar-size';

    setStyle(scrollDiv, {
        position: 'absolute',
        width: '100px',
        height: '100px',
        overflow: 'scroll',
        top: '-9999px'
    });
    document.body && document.body.appendChild(scrollDiv);
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    var scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;
    document.body.removeChild(scrollDiv);

    return {
        width: scrollbarWidth,
        height: scrollbarHeight
    };
}

function dom_hasScroll(containerNode) {
    // 当元素带有 overflow: hidden 一定没有滚动条
    var overflow = dom_getStyle(containerNode, 'overflow');
    if (overflow === 'hidden') {
        return false;
    }

    var parentNode = containerNode.parentNode;

    return parentNode && parentNode.scrollHeight > parentNode.clientHeight && scrollbar().width > 0 && isScrollDisplay(parentNode) && isScrollDisplay(containerNode);
}

/**
 * 获取元素距离视口顶部和左边的偏移距离
 * @return {Object} top, left
 */
function getOffset(node) {
    var rect = node.getBoundingClientRect();
    var win = node.ownerDocument.defaultView;
    return {
        top: rect.top + win.pageYOffset,
        left: rect.left + win.pageXOffset
    };
}

/**
 * 获取不同单位转为 number 的长度
 * @param {string|number} len 传入的长度
 * @return {number} pixels
 */
function getPixels(len) {
    var win = document.defaultView;
    if (typeof +len === 'number' && !isNaN(+len)) {
        return +len;
    }

    if (typeof len === 'string') {
        var PX_REG = /(\d+)px/;
        var VH_REG = /(\d+)vh/;
        if (Array.isArray(len.match(PX_REG))) {
            return +len.match(PX_REG)[1] || 0;
        }

        if (Array.isArray(len.match(VH_REG))) {
            var _1vh = win.innerHeight / 100;
            return +(len.match(VH_REG)[1] * _1vh) || 0;
        }
    }

    return 0;
}

/**
 * 匹配特定选择器且离当前元素最近的祖先元素（也可以是当前元素本身），如果匹配不到，则返回 null
 * @param {element} dom 待匹配的元素
 * @param {string} selecotr 选择器
 * @return {element} parent
 */
function getClosest(dom, selector) {
    /* istanbul ignore if */
    if (!hasDOM || !dom) {
        return null;
    }

    // ie9
    /* istanbul ignore if */
    if (!Element.prototype.closest) {
        if (!document.documentElement.contains(dom)) return null;
        do {
            if (getMatches(dom, selector)) return dom;
            dom = dom.parentElement;
        } while (dom !== null);
    } else {
        return dom.closest(selector);
    }
    return null;
}

/**
 * 如果元素被指定的选择器字符串选择，getMatches()  方法返回true; 否则返回false
 * @param {element} dom 待匹配的元素
 * @param {string} selecotr 选择器
 * @return {element} parent
 */
function getMatches(dom, selector) {
    /* istanbul ignore if */
    if (!hasDOM || !dom) {
        return null;
    }

    /* istanbul ignore if */
    if (Element.prototype.matches) {
        return dom.matches(selector);
    } else if (Element.prototype.msMatchesSelector) {
        return dom.msMatchesSelector(selector);
    } else if (Element.prototype.webkitMatchesSelector) {
        return dom.webkitMatchesSelector(selector);
    }

    return null;
}

function saveRef(ref) {
    if (!ref) {
        return null;
    }
    return function (element) {
        if (typeof ref === 'string') {
            throw new Error('can not set ref string for ' + ref);
        } else if (typeof ref === 'function') {
            ref(element);
        } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {
            ref.current = element;
        }
    };
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/events.js

/**
 * 取消事件绑定
 * @param  {*}   node       DOM节点或任何可以绑定事件的对象
 * @param  {String}   eventName  事件名
 * @param  {Function} callback   回调方法
 * @param  {Boolean}   [useCapture=false] 是否开启事件捕获优先
 */
function _off(node, eventName, callback, useCapture) {
    /* istanbul ignore else */
    if (node.removeEventListener) {
        node.removeEventListener(eventName, callback, useCapture || false);
    }
}

/**
 * 绑定事件
 * @param  {*}   node       DOM节点或任何可以绑定事件的对象
 * @param  {String}   eventName  事件名
 * @param  {Function} callback   回调方法
 * @param  {Boolean}   useCapture 是否开启事件捕获优先
 * @return {Object}               返回的object中包含一个off方法，用于取消事件监听
 *
 * @example
 * const handler = events.on(document.body, 'click', e => {
 *     // handle click ...
 * });
 * // 取消事件绑定
 * handler.off();
 */
function on(node, eventName, callback, useCapture) {
    /* istanbul ignore else */
    if (node.addEventListener) {
        node.addEventListener(eventName, callback, useCapture || false);
    }

    return {
        off: function off() {
            return _off(node, eventName, callback, useCapture);
        }
    };
}

/**
 * 绑定事件，只执行一次后销毁
 * @param  {*}   node       DOM节点或任何可以绑定事件的对象
 * @param  {String}   eventName  事件名
 * @param  {Function} callback   回调方法
 * @param  {Boolean}   useCapture 是否开启事件捕获优先
 * @return {Function}             返回的object中包含一个off方法，用于取消事件监听
 */
function once(node, eventName, callback, useCapture) {
    return on(node, eventName, function __fn() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        callback.apply(this, args);

        // 由于addEventListener中的参数options只在Chrome 55、Firefox(Gecko)以上版本支持，故还是用传统的方法实现once
        _off(node, eventName, __fn, useCapture);
    }, useCapture);
}
// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/dayjs.min.js
var dayjs_min = __webpack_require__(63);
var dayjs_min_default = /*#__PURE__*/__webpack_require__.n(dayjs_min);

// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/plugin/customParseFormat.js
var customParseFormat = __webpack_require__(115);
var customParseFormat_default = /*#__PURE__*/__webpack_require__.n(customParseFormat);

// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/plugin/updateLocale.js
var updateLocale = __webpack_require__(116);
var updateLocale_default = /*#__PURE__*/__webpack_require__.n(updateLocale);

// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/plugin/localeData.js
var plugin_localeData = __webpack_require__(117);
var localeData_default = /*#__PURE__*/__webpack_require__.n(plugin_localeData);

// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/plugin/quarterOfYear.js
var quarterOfYear = __webpack_require__(118);
var quarterOfYear_default = /*#__PURE__*/__webpack_require__.n(quarterOfYear);

// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/plugin/advancedFormat.js
var advancedFormat = __webpack_require__(119);
var advancedFormat_default = /*#__PURE__*/__webpack_require__.n(advancedFormat);

// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/plugin/weekOfYear.js
var weekOfYear = __webpack_require__(120);
var weekOfYear_default = /*#__PURE__*/__webpack_require__.n(weekOfYear);

// EXTERNAL MODULE: ./node_modules/_dayjs@1.11.0@dayjs/locale/zh-cn.js
var zh_cn = __webpack_require__(121);
var zh_cn_default = /*#__PURE__*/__webpack_require__.n(zh_cn);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/date.js









dayjs_min_default.a.extend(advancedFormat_default.a);
dayjs_min_default.a.extend(quarterOfYear_default.a);
dayjs_min_default.a.extend(customParseFormat_default.a);
dayjs_min_default.a.extend(updateLocale_default.a);
dayjs_min_default.a.extend(localeData_default.a);
dayjs_min_default.a.extend(weekOfYear_default.a);
dayjs_min_default.a.locale('zh-cn');

var datejs = dayjs_min_default.a;
datejs.isSelf = dayjs_min_default.a.isDayjs;

dayjs_min_default.a.localeData();

/* harmony default export */ var util_date = (datejs);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/func.js



/**
 * 一个空方法，返回入参本身或空对象
 */
var noop = function noop() {};

/**
 * 一个空方法，返回false
 */
var prevent = function prevent() {
    return false;
};

/**
 * 将N个方法合并为一个链式调用的方法
 * @return {Function}     合并后的方法
 * 参考 https://github.com/react-component/util/
 *
 * @example
 * func.makeChain(this.handleChange, this.props.onChange);
 */
function makeChain() {
    for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
        fns[_key] = arguments[_key];
    }

    if (fns.length === 1) {
        return fns[0];
    }

    return function chainedFunction() {
        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
        }

        for (var i = 0, j = fns.length; i < j; i++) {
            if (fns[i] && fns[i].apply) {
                fns[i].apply(this, args);
            }
        }
    };
}

/**
 * 批量改变方法的上下文
 * 此方法在react组件中很有用，在constructor中批量将组件上的方法执行上下文绑定到组件本身
 * 注意：用bind改变函数运行的上下文只会生效一次
 * @param  {Object} ctx 方法挂载的对象以及执行的上下文
 * @param  {Array<String>} fns 方法名列表
 *
 * @example
 * func.bindCtx(this, ['handleClick', 'handleChange']);
 */
function bindCtx(ctx, fns, ns) {
    if (typeof fns === 'string') {
        fns = [fns];
    }

    // 方法的挂载空间，如果不传，默认与ctx相同
    ns = ns || ctx;

    fns.forEach(function (fnName) {
        // 这里不要添加空方法判断，由调用者保证正确性，否则出了问题无法排查
        ns[fnName] = ns[fnName].bind(ctx);
    });
}

/**
 * 用于执行回调方法后的逻辑
 * @param  {*} ret            回调方法执行结果
 * @param  {Function} success 执行结果返回非false的回调
 * @param  {Function} [failure=noop] 执行结果返回false的回调
 */
function promiseCall(ret, success) {
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;

    if (isPromise(ret)) {
        return ret.then(function (result) {
            success(result);
            return result;
        }).catch(function (e) {
            failure(e);
            // throw e;
        });
    }

    return ret !== false ? success(ret) : failure(ret);
}

/**
 * 方法调用，如果obj对象中存在名为method的方法则调用该方法
 * @param {Object} target 目标对象
 * @param {string} method 方法名
 * @param {Array} args 函数参数列表
 * @returns {*} 函数返回值 如果不存在返回undefined
 */
function invoke(target, method, args) {
    var func = target && method in target ? target[method] : undefined;
    return func && func.apply(undefined, args);
}

function renderNode(render, defaultRender) {
    var renderProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    var r = render !== undefined ? render : defaultRender;

    if (renderProps && !Array.isArray(renderProps)) {
        renderProps = [renderProps];
    }
    return typeof r === 'function' ? r.apply(undefined, renderProps) : r;
}

/**
 * 日期检验：无效值返回 null
 * @param {dayjs.ConfigType} value
 * @returns {Dayjs | null}
 */
function checkDate(value) {
    /**
     * 因为 datejs(undefined) 表示当前时间
     * 但是这里期望的是一个空值，即用户不输入值的时候显示为空
     */
    if (value === undefined) {
        value = null;
    }

    value = util_date(value);
    return value.isValid() ? value : null;
}

/**
 * Range 日期检验
 * @param {dayjs.ConfigType[]} value 日期值
 * @param {number} inputType 输入框类型：开始时间输入框/结束时间输入框
 * @param {boolean} disabled 是否禁用
 * @param {boolean} strictly 是否严格校验：严格模式下不允许开始时间大于结束时间，在显示确认按键的，用户输入过程可不严格校验
 * @returns {Dayjs[] | null[]}
 */
function checkRangeDate(value, inputType, disabled) {
    var strictly = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

    var _ref = Array.isArray(value) ? [0, 1].map(function (i) {
        return checkDate(value[i]);
    }) : [null, null],
        begin = _ref[0],
        end = _ref[1];

    var _ref2 = Array.isArray(disabled) ? disabled : [disabled, disabled],
        disabledBegin = _ref2[0],
        disabledEnd = _ref2[1];

    /**
     * 需要清除其中一个时间，优先清除结束时间，下面情况清除开始时间：
     * 1. 结束时间被 disabled 而开始时间没有被 disabled
     * 2. 开始时间和结束时间都没被 disabled 且当前正在输入是结束时间
     */


    if (strictly && begin && end && begin.isAfter(end)) {
        if (!disabledBegin && disabledEnd ||
        // 本来是 (!disabledBegin && !disabledBegin && inputType === DATE_INPUT_TYPE.END)
        !disabledBegin && !disabledBegin && inputType === 1) {
            return [null, end];
        }

        return [begin, null];
    }

    return [begin, end];
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/support.js



var animationEndEventNames = {
    WebkitAnimation: 'webkitAnimationEnd',
    OAnimation: 'oAnimationEnd',
    animation: 'animationend'
};

var transitionEventNames = {
    WebkitTransition: 'webkitTransitionEnd',
    OTransition: 'oTransitionEnd',
    transition: 'transitionend'
};

/**
 * 是否支持某些动效事件，如果支持，返回相应的end事件名
 * @private
 * @param  {Object<String>} names
 * @return {Object|false}
 */
function _supportEnd(names) {
    /* istanbul ignore if */
    if (!hasDOM) {
        return false;
    }

    var el = document.createElement('div');
    var ret = false;

    each(names, function (val, key) {
        /* istanbul ignore else */
        if (el.style[key] !== undefined) {
            ret = { end: val };
            return false;
        }
    });

    return ret;
}

/**
 * 是否支持某些CSS属性
 * @private
 * @param  {Object<Array<String>>} names
 * @return {Boolean}       is support
 */
function _supportCSS(names) {
    /* istanbul ignore if */
    if (!hasDOM) {
        return false;
    }

    var el = document.createElement('div');
    var ret = false;

    each(names, function (val, key) {
        each(val, function (item) {
            try {
                el.style[key] = item;
                ret = ret || el.style[key] === item;
            } catch (e) {
                // It will be throw error when set unknown property under IE8
            }
            return !ret; // 如果有一个支持就返回false，后面不需要再判断
        });

        return !ret;
    });

    return ret;
}

/**
 * 是否支持animation以及动画结束事件名
 * @type {Object|false}
 * @property {String} end 动画结束事件名
 */
var support_animation = _supportEnd(animationEndEventNames);

/**
 * 是否支持transition以及过滤效果结束事件名
 * @type {Object|false}
 * @property {String} end 过渡效果结束事件名
 */
var transition = _supportEnd(transitionEventNames);

/**
 * 是否支持flex属性
 * @type {Boolean}
 */
var support_flex = _supportCSS({
    display: ['flex', '-webkit-flex', '-moz-flex', '-ms-flexbox']
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/keycode.js
/* harmony default export */ var keycode = ({
    BACKSPACE: 8,
    TAB: 9,
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    ESC: 27,
    SPACE: 32,
    END: 35,
    HOME: 36,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    PAGE_UP: 33,
    PAGE_DOWN: 34,

    // version 0.x
    ESCAPE: 27,
    LEFT_ARROW: 37,
    UP_ARROW: 38,
    RIGHT_ARROW: 39,
    DOWN_ARROW: 40,

    // MacOS
    CONTROL: 17,
    OPTION: 18,
    CMD: 91,
    COMMAND: 91,
    DELETE: 8
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/focus.js



/**
 * 用于切换页面元素的焦点
 */

/**
 * 元素是否可见
 * @private
 * @param   {Element}  node
 * @return  {Boolean}
 */
function _isVisible(node) {
    while (node) {
        var _node = node,
            nodeName = _node.nodeName;

        if (nodeName === 'BODY' || nodeName === 'HTML') {
            break;
        }
        if (node.style.display === 'none' || node.style.visibility === 'hidden') {
            return false;
        }
        node = node.parentNode;
    }
    return true;
}

/**
 * 元素是否可以获取焦点
 * @private
 * @param   {Element}  node
 * @return  {Boolean}
 */
function _isFocusable(node) {
    var nodeName = node.nodeName.toLowerCase();
    var tabIndex = parseInt(node.getAttribute('tabindex'), 10);
    var hasTabIndex = !isNaN(tabIndex) && tabIndex > -1;

    if (_isVisible(node)) {
        if (nodeName === 'input') {
            return !node.disabled && node.type !== 'hidden';
        } else if (['select', 'textarea', 'button'].indexOf(nodeName) > -1) {
            return !node.disabled;
        } else if (nodeName === 'a') {
            return node.getAttribute('href') || hasTabIndex;
        } else {
            return hasTabIndex;
        }
    }
    return false;
}

/**
 * 列出能获取焦点的子节点
 * @param  {Element} node 容器节点
 * @return {Array<Element>}
 */
function getFocusNodeList(node) {
    var res = [];
    var nodeList = node.querySelectorAll('*');

    each(nodeList, function (item) {
        if (_isFocusable(item)) {
            var method = item.getAttribute('data-auto-focus') ? 'unshift' : 'push';
            res[method](item);
        }
    });

    if (_isFocusable(node)) {
        res.unshift(node);
    }

    return res;
}

// 用于记录上一次获得焦点的无素
var lastFocusElement = null;

/**
 * 保存最近一次获得焦点的无素
 */
function saveLastFocusNode() {
    lastFocusElement = document.activeElement;
}

/**
 * 清除焦点记录
 */
function clearLastFocusNode() {
    lastFocusElement = null;
}

/**
 * 尝试将焦点切换到上一个元素
 */
function backLastFocusNode() {
    if (lastFocusElement) {
        try {
            // 元素可能已经被移动了
            lastFocusElement.focus();
        } catch (e) {
            // ignore ...
        }
    }
}

/**
 * 在限制的范围内切换焦点
 * @param  {Element} node 容器节点
 * @param  {Event} e      键盘事件
 */
function limitTabRange(node, e) {
    if (e.keyCode === keycode.TAB) {
        var tabNodeList = getFocusNodeList(node);
        var maxIndex = tabNodeList.length - 1;
        var index = tabNodeList.indexOf(document.activeElement);

        if (index > -1) {
            var targetIndex = index + (e.shiftKey ? -1 : 1);
            targetIndex < 0 && (targetIndex = maxIndex);
            targetIndex > maxIndex && (targetIndex = 0);
            tabNodeList[targetIndex].focus();
            e.preventDefault();
        }
    }
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/htmlId.js

/**
 * Generate a string to be used for HTML id attributes
 *
 * @param {String} prefix - prefix text for the id. Important because without one, eventually there will be 2 elements with the same id on the same page
 * @param {Number} max - range for the random number generator. Defaults to 1,000,000, but can be set higher if necessary.
 * @returns {String}
 */
function randomId(prefix) {
    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000000;

    var rand = Math.ceil(Math.random() * max);

    return prefix ? escapeForId(prefix) + '-' + rand : rand.toString(10);
}

/**
 * Replace characters not allowed for HTML id attributes
 *
 * @param {String} text
 * @returns {String}
 */
function escapeForId(text) {
    if (!text) {
        return '';
    }

    if ((typeof text === 'undefined' ? 'undefined' : typeof_default()(text)) === 'object') {
        text = JSON.stringify(text);
    } else if (typeof text !== 'string') {
        text = String(text);
    }

    return text.replace(/['"]/gm, '').replace(/[\s'"]/gm, '-');
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/guid.js
var timestamp = Date.now();

/**
 * 生成全局唯一的id
 * @param  {String} [prefix=''] 前缀字符串
 * @return {String}
 *
 * @example
 * guid(); // j7jv509c
 * guid('prefix-'); // prefix-j7jv509d
 */
/* harmony default export */ var guid = (function (prefix) {
  prefix = prefix || '';

  return prefix + (timestamp++).toString(36);
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/pick-attrs.js
var attributes = 'accept acceptCharset accessKey action allowFullScreen allowTransparency\nalt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge\ncharSet checked classID className colSpan cols content contentEditable contextMenu\ncontrols coords crossOrigin data dateTime default defer dir disabled download draggable\nencType form formAction formEncType formMethod formNoValidate formTarget frameBorder\nheaders height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity\nis keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media\nmediaGroup method min minLength multiple muted name noValidate nonce open\noptimum pattern placeholder poster preload radioGroup readOnly rel required\nreversed role rowSpan rows sandbox scope scoped scrolling seamless selected\nshape size sizes span spellCheck src srcDoc srcLang srcSet start step style\nsummary tabIndex target title type useMap value width wmode wrap'.replace(/\s+/g, ' ').replace(/\t|\n|\r/g, '').split(' ');

var eventsName = 'onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown\n    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick\n    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown\n    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel\n    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough\n    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata\n    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError'.replace(/\s+/g, ' ').replace(/\t|\n|\r/g, '').split(' ');

var attrsPrefix = ['data-', 'aria-'];
/**
 * 过滤掉无效的透传到 DOM 属性
 */
/* harmony default export */ var pick_attrs = (function (props) {
    var attrs = {};

    var _loop = function _loop(key) {
        if (attributes.indexOf(key) > -1 || eventsName.indexOf(key) > -1) {
            attrs[key] = props[key];
        } else if (attrsPrefix.map(function (prefix) {
            return new RegExp('^' + prefix);
        }).some(function (reg) {
            return key.replace(reg, '') !== key;
        })) {
            attrs[key] = props[key];
        }
    };

    for (var key in props) {
        _loop(key);
    }
    return attrs;
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/util/index.js















var util_dom = dom_namespaceObject;
var util_env = env_namespaceObject;
var util_events = events_namespaceObject;
var func = func_namespaceObject;
var log = log_namespaceObject;
var util_obj = object_namespaceObject;
var util_str = string_namespaceObject;
var support = support_namespaceObject;
var util_focus = focus_namespaceObject;
var util_guid = guid;
var KEYCODE = keycode;
var htmlId = htmlId_namespaceObject;
var util_datejs = util_date;
var pickAttrs = pick_attrs;
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/locale/zh-cn.js
/* harmony default export */ var locale_zh_cn = ({
    momentLocale: 'zh-cn',
    Timeline: {
        expand: '展开',
        fold: '收起'
    },
    Balloon: {
        close: '关闭'
    },
    Card: {
        expand: '展开',
        fold: '收起'
    },
    Calendar: {
        today: '今天',
        now: '此刻',
        ok: '确定',
        clear: '清除',
        month: '月',
        year: '年',
        prevYear: '上一年',
        nextYear: '下一年',
        prevMonth: '上个月',
        nextMonth: '下个月',
        prevDecade: '上十年',
        nextDecade: '后十年',
        yearSelectAriaLabel: '选择年份',
        monthSelectAriaLabel: '选择月份'
    },
    DatePicker: {
        placeholder: '请选择日期',
        datetimePlaceholder: '请选择日期和时间',
        monthPlaceholder: '请选择月',
        yearPlaceholder: '请选择年',
        weekPlaceholder: '请选择周',
        now: '此刻',
        selectTime: '选择时间',
        selectDate: '选择日期',
        ok: '确定',
        clear: '清除',
        startPlaceholder: '起始日期',
        endPlaceholder: '结束日期',
        hour: '时',
        minute: '分',
        second: '秒'
    },
    Dialog: {
        close: '关闭',
        ok: '确认',
        cancel: '取消'
    },
    Drawer: {
        close: '关闭'
    },
    Message: {
        closeAriaLabel: '关闭'
    },
    Pagination: {
        prev: '上一页',
        next: '下一页',
        goTo: '到第',
        page: '页',
        go: '确定',
        total: '第{current}页，共{total}页',
        labelPrev: '上一页，当前第{current}页',
        labelNext: '下一页，当前第{current}页',
        inputAriaLabel: '请输入跳转到第几页',
        selectAriaLabel: '请选择每页显示几条',
        pageSize: '每页显示：'
    },
    Input: {
        clear: '清除'
    },
    List: {
        empty: '没有数据'
    },
    Select: {
        selectPlaceholder: '请选择',
        autoCompletePlaceholder: '请输入',
        notFoundContent: '无选项',
        maxTagPlaceholder: '已选择 {selected}/{total} 项',
        selectAll: '全选'
    },
    TreeSelect: {
        maxTagPlaceholder: '已选择 {selected}/{total} 项',
        shortMaxTagPlaceholder: '已选择 {selected} 项'
    },
    Table: {
        empty: '没有数据',
        ok: '确认',
        reset: '重置',
        asc: '升序',
        desc: '降序',
        expanded: '已展开',
        folded: '已折叠',
        filter: '筛选',
        selectAll: '全选'
    },
    TimePicker: {
        placeholder: '请选择时间',
        clear: '清除',
        hour: '时',
        minute: '分',
        second: '秒'
    },
    Transfer: {
        items: '项',
        item: '项',
        moveAll: '移动全部',
        searchPlaceholder: '请输入',
        moveToLeft: '撤销选中元素',
        moveToRight: '提交选中元素'
    },
    Upload: {
        card: {
            cancel: '取消',
            addPhoto: '上传图片',
            download: '下载',
            delete: '删除'
        },
        drag: {
            text: '点击或者拖动文件到虚线框内上传',
            hint: '支持 docx, xls, PDF, rar, zip, PNG, JPG 等类型的文件'
        },
        upload: {
            delete: '删除'
        }
    },
    Search: {
        buttonText: '搜索'
    },
    Tag: {
        delete: '删除'
    },
    Rating: {
        description: '评分选项'
    },
    Switch: {
        on: '已打开',
        off: '已关闭'
    },
    Tab: {
        closeAriaLabel: '关闭'
    },
    Form: {
        Validate: {
            default: '%s 校验失败',
            required: '%s 是必填字段',
            format: {
                number: '%s 不是合法的数字',
                email: '%s 不是合法的 email 地址',
                url: '%s 不是合法的 URL 地址',
                tel: '%s 不是合法的电话号码'
            },
            number: {
                length: '%s 长度必须是 %s',
                min: '%s 不得小于 %s',
                max: '%s 不得大于 %s',
                minLength: '%s 字段字符长度不得少于 %s',
                maxLength: '%s 字段字符长度不得超过 %s'
            },
            string: {
                length: '%s 长度必须是 %s',
                min: '%s 不得小于 %s',
                max: '%s 不得大于 %s',
                minLength: '%s 长度不得少于 %s',
                maxLength: '%s 长度不得超过 %s'
            },
            array: {
                length: '%s 个数必须是 %s',
                minLength: '%s 个数不得少于 %s',
                maxLength: '%s 个数不得超过 %s'
            },
            pattern: '%s 数值 %s 不匹配正则 %s'
        }
    }
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/config-provider/get-context-props.js



/**
 *
 * @param {Object|Boolean} input
 * @returns {Object} typeof obj.open === 'boolean'
 */
var get_context_props_parseBoundary = function parseBoundary(input) {
    var obj = void 0;
    if (input === undefined || input === null) {
        return {};
    } else if (typeof input === 'boolean') {
        obj = { open: input };
    } else {
        obj = extends_default()({ open: true }, input);
    }

    return obj;
};

function getContextProps(props, context, displayName) {
    var prefix = props.prefix,
        locale = props.locale,
        defaultPropsConfig = props.defaultPropsConfig,
        pure = props.pure,
        rtl = props.rtl,
        device = props.device,
        popupContainer = props.popupContainer,
        errorBoundary = props.errorBoundary;
    var nextPrefix = context.nextPrefix,
        nextLocale = context.nextLocale,
        nextDefaultPropsConfig = context.nextDefaultPropsConfig,
        nextPure = context.nextPure,
        nextWarning = context.nextWarning,
        nextRtl = context.nextRtl,
        nextDevice = context.nextDevice,
        nextPopupContainer = context.nextPopupContainer,
        nextErrorBoundary = context.nextErrorBoundary;


    var newPrefix = prefix || nextPrefix;

    var localeFromContext = void 0;
    var newDisplayName = displayName;

    switch (displayName) {
        case 'DatePicker2':
            newDisplayName = 'DatePicker';
            break;
        case 'Calendar2':
            newDisplayName = 'Calendar';
            break;
        case 'TimePicker2':
            newDisplayName = 'TimePicker';
            break;
        default:
            break;
    }

    if (nextLocale) {
        localeFromContext = nextLocale[newDisplayName];
        if (localeFromContext) {
            localeFromContext.momentLocale = nextLocale.momentLocale;
        }
    }

    var newLocale = void 0;
    if (locale) {
        newLocale = util_obj.deepMerge({}, locale_zh_cn[newDisplayName], localeFromContext, locale);
    } else if (localeFromContext) {
        newLocale = util_obj.deepMerge({}, locale_zh_cn[newDisplayName], localeFromContext);
    }

    var newPure = typeof pure === 'boolean' ? pure : nextPure;
    var newRtl = typeof rtl === 'boolean' ? rtl : nextRtl;

    // ProtoType of [nextE|e]rrorBoundary can be one of [boolean, object]
    // but typeof newErrorBoundary === 'object'
    // newErrorBoundary should always have the key 'open', which indicates ErrorBoundary on or off
    var newErrorBoundary = extends_default()({}, get_context_props_parseBoundary(nextErrorBoundary), get_context_props_parseBoundary(errorBoundary));

    if (!('open' in newErrorBoundary)) {
        newErrorBoundary.open = false;
    }

    return {
        prefix: newPrefix,
        locale: newLocale,
        pure: newPure,
        rtl: newRtl,
        warning: nextWarning,
        defaultPropsConfig: nextDefaultPropsConfig || {},
        device: device || nextDevice || undefined,
        popupContainer: popupContainer || nextPopupContainer,
        errorBoundary: newErrorBoundary
    };
}
// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(7);
var objectWithoutProperties_default = /*#__PURE__*/__webpack_require__.n(objectWithoutProperties);

// EXTERNAL MODULE: ./node_modules/_hoist-non-react-statics@3.3.2@hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var hoist_non_react_statics_cjs = __webpack_require__(122);
var hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/config-provider/error-boundary.js




var error_boundary__class, error_boundary__temp;




DefaultUI.propTypes = {
    error: _prop_types_15_8_1_prop_types_default.a.object,
    errorInfo: _prop_types_15_8_1_prop_types_default.a.object
};

function DefaultUI() {
    return '';
}

var error_boundary_ErrorBoundary = (error_boundary__temp = error_boundary__class = function (_React$Component) {
    inherits_default()(ErrorBoundary, _React$Component);

    function ErrorBoundary(props) {
        classCallCheck_default()(this, ErrorBoundary);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.state = { error: null, errorInfo: null };
        return _this;
    }

    ErrorBoundary.prototype.componentDidCatch = function componentDidCatch(error, errorInfo) {
        this.setState({
            error: error,
            errorInfo: errorInfo
        });

        var afterCatch = this.props.afterCatch;


        if ('afterCatch' in this.props && typeof afterCatch === 'function') {
            this.props.afterCatch(error, errorInfo);
        }
    };

    ErrorBoundary.prototype.render = function render() {
        var _props$fallbackUI = this.props.fallbackUI,
            FallbackUI = _props$fallbackUI === undefined ? DefaultUI : _props$fallbackUI;


        if (this.state.errorInfo) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(FallbackUI, {
                error: this.state.error,
                errorInfo: this.state.errorInfo
            });
        }
        // Normally, just render children
        return this.props.children;
    };

    return ErrorBoundary;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), error_boundary__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.element,
    /**
     * 捕获错误后的自定义处理, 比如埋点上传
     * @param {Object} error 错误
     * @param {Object} errorInfo 错误详细信息
     */
    afterCatch: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 捕获错误后的展现 自定义组件
     * @param {Object} error 错误
     * @param {Object} errorInfo 错误详细信息
     * @returns {Element} 捕获错误后的处理
     */
    fallbackUI: _prop_types_15_8_1_prop_types_default.a.func
}, error_boundary__temp);
error_boundary_ErrorBoundary.displayName = 'ErrorBoundary';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/config-provider/config.js












var config_shallowEqual = util_obj.shallowEqual;


function getDisplayName(Component) {
    return Component.displayName || Component.name || 'Component';
}

var globalLocales = void 0;
var currentGlobalLanguage = 'zh-cn';
var currentGlobalLocale = {};
var currentGlobalRtl = void 0;

function initLocales(locales) {
    globalLocales = locales;

    if (locales) {
        currentGlobalLocale = locales[currentGlobalLanguage];

        if (typeof currentGlobalRtl !== 'boolean') {
            currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
        }
    }
}

function setLanguage(language) {
    if (globalLocales) {
        currentGlobalLanguage = language;
        currentGlobalLocale = globalLocales[language];

        if (typeof currentGlobalRtl !== 'boolean') {
            currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
        }
    }
}

function setLocale(locale) {
    currentGlobalLocale = extends_default()({}, globalLocales ? globalLocales[currentGlobalLanguage] : {}, locale);

    if (typeof currentGlobalRtl !== 'boolean') {
        currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
    }
}

function setDirection(dir) {
    currentGlobalRtl = dir === 'rtl';
}

function getLocale() {
    return currentGlobalLocale;
}

function getLanguage() {
    return currentGlobalLanguage;
}

function getDirection() {
    return currentGlobalRtl;
}

function config_config(Component) {
    var _class, _temp;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    // 非 forwardRef 创建的 class component
    if (util_obj.isClassComponent(Component) && Component.prototype.shouldComponentUpdate === undefined) {
        // class component: 通过定义 shouldComponentUpdate 改写成 pure component, 有refs
        Component.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
            if (this.props.pure) {
                return !config_shallowEqual(this.props, nextProps) || !config_shallowEqual(this.state, nextState);
            }

            return true;
        };
    }

    var ConfigedComponent = (_temp = _class = function (_React$Component) {
        inherits_default()(ConfigedComponent, _React$Component);

        function ConfigedComponent(props, context) {
            classCallCheck_default()(this, ConfigedComponent);

            var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

            _this._getInstance = _this._getInstance.bind(_this);
            _this._deprecated = _this._deprecated.bind(_this);
            return _this;
        }

        ConfigedComponent.prototype._getInstance = function _getInstance(ref) {
            var _this2 = this;

            this._instance = ref;

            if (this._instance && options.exportNames) {
                options.exportNames.forEach(function (name) {
                    var field = _this2._instance[name];
                    if (typeof field === 'function') {
                        _this2[name] = field.bind(_this2._instance);
                    } else {
                        _this2[name] = field;
                    }
                });
            }
        };

        ConfigedComponent.prototype._deprecated = function _deprecated() {
            if (this.context.nextWarning !== false) {
                log.deprecated.apply(log, arguments);
            }
        };

        ConfigedComponent.prototype.getInstance = function getInstance() {
            return this._instance;
        };

        ConfigedComponent.prototype.render = function render() {
            var _props = this.props,
                prefix = _props.prefix,
                locale = _props.locale,
                defaultPropsConfig = _props.defaultPropsConfig,
                pure = _props.pure,
                rtl = _props.rtl,
                device = _props.device,
                popupContainer = _props.popupContainer,
                errorBoundary = _props.errorBoundary,
                others = objectWithoutProperties_default()(_props, ['prefix', 'locale', 'defaultPropsConfig', 'pure', 'rtl', 'device', 'popupContainer', 'errorBoundary']);

            var _context = this.context,
                nextPrefix = _context.nextPrefix,
                _context$nextLocale = _context.nextLocale,
                nextLocale = _context$nextLocale === undefined ? {} : _context$nextLocale,
                _context$nextDefaultP = _context.nextDefaultPropsConfig,
                nextDefaultPropsConfig = _context$nextDefaultP === undefined ? {} : _context$nextDefaultP,
                nextPure = _context.nextPure,
                nextRtl = _context.nextRtl,
                nextDevice = _context.nextDevice,
                nextPopupContainer = _context.nextPopupContainer,
                nextErrorBoundary = _context.nextErrorBoundary;


            var displayName = options.componentName || getDisplayName(Component);
            var contextProps = getContextProps({
                prefix: prefix,
                locale: locale,
                defaultPropsConfig: defaultPropsConfig,
                pure: pure,
                device: device,
                popupContainer: popupContainer,
                rtl: rtl,
                errorBoundary: errorBoundary
            }, {
                nextPrefix: nextPrefix,
                nextLocale: extends_default()({}, currentGlobalLocale, nextLocale),
                nextDefaultPropsConfig: nextDefaultPropsConfig,
                nextPure: nextPure,
                nextDevice: nextDevice,
                nextPopupContainer: nextPopupContainer,
                nextRtl: typeof nextRtl === 'boolean' ? nextRtl : currentGlobalRtl === true ? true : undefined,
                nextErrorBoundary: nextErrorBoundary
            }, displayName);

            // errorBoundary is only for <ErrorBoundary>
            var newContextProps = ['prefix', 'locale', 'pure', 'rtl', 'device', 'popupContainer'].reduce(function (ret, name) {
                if (typeof contextProps[name] !== 'undefined') {
                    ret[name] = contextProps[name];
                }
                return ret;
            }, {});

            if ('pure' in newContextProps && newContextProps.pure) {
                log.warning('pure of ConfigProvider is deprecated, use Function Component or React.PureComponent');
            }

            // 对于两个真正消费 popupContainer 的组件来说，正确的名字是 container,
            if ('popupContainer' in newContextProps && this.props.container === undefined && ['Overlay', 'Popup'].indexOf(displayName) > -1) {
                newContextProps.container = newContextProps.popupContainer;
                delete newContextProps.popupContainer;
            }

            var newOthers = options.transform ? options.transform(others, this._deprecated) : others;

            var content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Component, extends_default()({}, contextProps.defaultPropsConfig[displayName], newOthers, newContextProps, {
                ref: util_obj.isClassComponent(Component) ? this._getInstance : null
            }));

            var _contextProps$errorBo = contextProps.errorBoundary,
                open = _contextProps$errorBo.open,
                othersBoundary = objectWithoutProperties_default()(_contextProps$errorBo, ['open']);

            return open ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                error_boundary_ErrorBoundary,
                othersBoundary,
                content
            ) : content;
        };

        return ConfigedComponent;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.propTypes = extends_default()({}, Component.propTypes || {}, {
        prefix: _prop_types_15_8_1_prop_types_default.a.string,
        locale: _prop_types_15_8_1_prop_types_default.a.object,
        defaultPropsConfig: _prop_types_15_8_1_prop_types_default.a.object,
        pure: _prop_types_15_8_1_prop_types_default.a.bool,
        rtl: _prop_types_15_8_1_prop_types_default.a.bool,
        device: _prop_types_15_8_1_prop_types_default.a.oneOf(['tablet', 'desktop', 'phone']),
        popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
        errorBoundary: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object])
    }), _class.contextTypes = extends_default()({}, Component.contextTypes || {}, {
        nextPrefix: _prop_types_15_8_1_prop_types_default.a.string,
        nextLocale: _prop_types_15_8_1_prop_types_default.a.object,
        nextDefaultPropsConfig: _prop_types_15_8_1_prop_types_default.a.object,
        nextPure: _prop_types_15_8_1_prop_types_default.a.bool,
        nextRtl: _prop_types_15_8_1_prop_types_default.a.bool,
        nextWarning: _prop_types_15_8_1_prop_types_default.a.bool,
        nextDevice: _prop_types_15_8_1_prop_types_default.a.oneOf(['tablet', 'desktop', 'phone']),
        nextPopupContainer: _prop_types_15_8_1_prop_types_default.a.any,
        nextErrorBoundary: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object])
    }), _temp);
    ConfigedComponent.displayName = 'ConfigedComponent';


    ConfigedComponent.displayName = 'Config(' + getDisplayName(Component) + ')';

    hoist_non_react_statics_cjs_default()(ConfigedComponent, Component);

    return ConfigedComponent;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/config-provider/consumer.js


/**
 * Creates an object with the same values as object and keys
 * generated by running each own enumerable string keyed property
 * of object thru iteratee.
 * @param {Object} obj
 * @param {Function} fn
 * @return {Object}
 */
var mapKeys = function mapKeys(obj, fn) {
    var result = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var value = obj[key];
            var newKey = fn(key, value);
            result[newKey] = value;
        }
    }

    return result;
};

/**
 * Replace specific key with prefix `next`
 * and lowercase first character of the result.
 * @param {String} key
 * @return {String}
 */
var replaceKey = function replaceKey(key) {
    return key.replace(/^(next)([A-Z])/, function (match, p1, p2) {
        return p2.toLowerCase();
    });
};

/**
 * @param {Object} source
 * @return {Object}
 */
var transformContext = function transformContext(source) {
    return mapKeys(source, replaceKey);
};

/**
 * Consumer
 * @param {Object} prop
 * @param {Object} context
 */
var Consumer = function Consumer(_ref, context) {
    var children = _ref.children;
    return typeof children === 'function' ? children(transformContext(context)) : null;
};

/**
 * PropTypes
 * @type {Object}
 * @static
 */
Consumer.propTypes = {
    // Render context as function
    // Function(context: object): ReactElement
    children: _prop_types_15_8_1_prop_types_default.a.func
};

/**
 * ContextTypes (legacy context)
 * @type {Object}
 * @static
 */
Consumer.contextTypes = {
    nextPrefix: _prop_types_15_8_1_prop_types_default.a.string,
    nextLocale: _prop_types_15_8_1_prop_types_default.a.object,
    nextPure: _prop_types_15_8_1_prop_types_default.a.bool,
    newRtl: _prop_types_15_8_1_prop_types_default.a.bool,
    nextWarning: _prop_types_15_8_1_prop_types_default.a.bool,
    nextDevice: _prop_types_15_8_1_prop_types_default.a.oneOf(['tablet', 'desktop', 'phone']),
    nextPopupContainer: _prop_types_15_8_1_prop_types_default.a.any
};

/* harmony default export */ var consumer = (Consumer);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/config-provider/cache.js


var cache_Cache = function () {
    function Cache() {
        classCallCheck_default()(this, Cache);

        this._root = null;
        this._store = new Map();
    }

    Cache.prototype.empty = function empty() {
        return this._store.size === 0;
    };

    Cache.prototype.has = function has(key) {
        return this._store.has(key);
    };

    Cache.prototype.get = function get(key, defaultValue) {
        var res = this.has(key) ? this._store.get(key) : this.root();
        return typeof res === 'undefined' || res === null ? defaultValue : res;
    };

    Cache.prototype.add = function add(key, value) {
        if (this.empty()) {
            this._root = key;
        }
        this._store.set(key, value);
    };

    Cache.prototype.update = function update(key, value) {
        if (this.has(key)) {
            this._store.set(key, value);
        }
    };

    Cache.prototype.remove = function remove(key) {
        this._store.delete(key);

        if (key === this._root) {
            var maps = this._store.keys();
            // 如果当前销毁的实例刚好是root，那么从map中取下一个加入的节点当作root
            var nextkey = maps.next().value;
            this._root = nextkey;
        }
    };

    Cache.prototype.clear = function clear() {
        this._store.clear();
    };

    Cache.prototype.root = function root() {
        return this._store.get(this._root);
    };

    return Cache;
}();

/* harmony default export */ var config_provider_cache = (cache_Cache);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/config-provider/index.js





var config_provider__class, config_provider__temp;











var childContextCache = new config_provider_cache();

var setMomentLocale = function setMomentLocale(locale) {
    var moment = void 0;
    try {
        moment = __webpack_require__(11);
        if (moment && moment.default && moment.default.isMoment) moment = moment.default;
    } catch (e) {
        // ignore
    }

    if (moment && locale) {
        moment.locale(locale.momentLocale);
    }
};

var config_provider_setDateLocale = function setDateLocale(locale) {
    if (locale) {
        util_date.locale(locale.dateLocale || locale.momentLocale);
    }
};

/**
 * ConfigProvider
 * @propsExtends false
 */
var config_provider_ConfigProvider = (config_provider__temp = config_provider__class = function (_Component) {
    inherits_default()(ConfigProvider, _Component);

    /**
     * 传入组件的 props 和 displayName，得到和 childContext 计算过的包含有 preifx/locale/pure 的对象，一般用于通过静态方法生成脱离组件树的组件
     * @param {Object} props 组件的 props
     * @param {String} displayName 组件的 displayName
     * @returns {Object} 新的 context props
     */
    function ConfigProvider() {
        classCallCheck_default()(this, ConfigProvider);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        var _this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args)));

        childContextCache.add(_this, extends_default()({}, childContextCache.get(_this, {}), _this.getChildContext()));

        setMomentLocale(_this.props.locale);
        config_provider_setDateLocale(_this.props.locale);

        _this.state = {
            locale: _this.props.locale
        };
        return _this;
    }

    /**
     * 传入组件，生成受 ConfigProvider 控制的 HOC 组件
     * @param {Component} Component 组件类
     * @param {Object} options 可选项
     * @returns {Component} HOC
     */


    ConfigProvider.prototype.getChildContext = function getChildContext() {
        var _props = this.props,
            prefix = _props.prefix,
            locale = _props.locale,
            defaultPropsConfig = _props.defaultPropsConfig,
            pure = _props.pure,
            warning = _props.warning,
            rtl = _props.rtl,
            device = _props.device,
            popupContainer = _props.popupContainer,
            errorBoundary = _props.errorBoundary;
        var _context = this.context,
            nextPrefix = _context.nextPrefix,
            nextDefaultPropsConfig = _context.nextDefaultPropsConfig,
            nextLocale = _context.nextLocale,
            nextPure = _context.nextPure,
            nextRtl = _context.nextRtl,
            nextWarning = _context.nextWarning,
            nextDevice = _context.nextDevice,
            nextPopupContainer = _context.nextPopupContainer,
            nextErrorBoundary = _context.nextErrorBoundary;


        return {
            nextPrefix: prefix || nextPrefix,
            nextDefaultPropsConfig: defaultPropsConfig || nextDefaultPropsConfig,
            nextLocale: locale || nextLocale,
            nextPure: typeof pure === 'boolean' ? pure : nextPure,
            nextRtl: typeof rtl === 'boolean' ? rtl : nextRtl,
            nextWarning: typeof warning === 'boolean' ? warning : nextWarning,
            nextDevice: device || nextDevice,
            nextPopupContainer: popupContainer || nextPopupContainer,
            nextErrorBoundary: errorBoundary || nextErrorBoundary
        };
    };

    ConfigProvider.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if (nextProps.locale !== prevState.locale) {
            setMomentLocale(nextProps.locale);
            config_provider_setDateLocale(nextProps.locale);

            return {
                locale: nextProps.locale
            };
        }

        return null;
    };

    ConfigProvider.prototype.componentDidUpdate = function componentDidUpdate() {
        childContextCache.add(this, extends_default()({}, childContextCache.get(this, {}), this.getChildContext()));
    };

    ConfigProvider.prototype.componentWillUnmount = function componentWillUnmount() {
        childContextCache.remove(this);
    };

    ConfigProvider.prototype.render = function render() {
        return external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].only(this.props.children);
    };

    return ConfigProvider;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), config_provider__class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 国际化文案对象，属性为组件的 displayName
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 组件 API 的默认配置
     */
    defaultPropsConfig: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否开启错误捕捉 errorBoundary
     * 如需自定义参数，请传入对象 对象接受参数列表如下：
     *
     * fallbackUI `Function(error?: {}, errorInfo?: {}) => Element` 捕获错误后的展示
     * afterCatch `Function(error?: {}, errorInfo?: {})` 捕获错误后的行为, 比如埋点上传
     */
    errorBoundary: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * 是否开启 Pure Render 模式，会提高性能，但是也会带来副作用
     */
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否在开发模式下显示组件属性被废弃的 warning 提示
     */
    warning: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否开启 rtl 模式
     */
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 设备类型，针对不同的设备类型组件做出对应的响应式变化
     */
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['tablet', 'desktop', 'phone']),
    /**
     * 组件树
     */
    children: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any
}, config_provider__class.defaultProps = {
    warning: true,
    errorBoundary: false
}, config_provider__class.contextTypes = {
    nextPrefix: _prop_types_15_8_1_prop_types_default.a.string,
    nextLocale: _prop_types_15_8_1_prop_types_default.a.object,
    nextDefaultPropsConfig: _prop_types_15_8_1_prop_types_default.a.object,
    nextPure: _prop_types_15_8_1_prop_types_default.a.bool,
    nextRtl: _prop_types_15_8_1_prop_types_default.a.bool,
    nextWarning: _prop_types_15_8_1_prop_types_default.a.bool,
    nextDevice: _prop_types_15_8_1_prop_types_default.a.oneOf(['tablet', 'desktop', 'phone']),
    nextPopupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    nextErrorBoundary: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object])
}, config_provider__class.childContextTypes = {
    nextPrefix: _prop_types_15_8_1_prop_types_default.a.string,
    nextLocale: _prop_types_15_8_1_prop_types_default.a.object,
    nextDefaultPropsConfig: _prop_types_15_8_1_prop_types_default.a.object,
    nextPure: _prop_types_15_8_1_prop_types_default.a.bool,
    nextRtl: _prop_types_15_8_1_prop_types_default.a.bool,
    nextWarning: _prop_types_15_8_1_prop_types_default.a.bool,
    nextDevice: _prop_types_15_8_1_prop_types_default.a.oneOf(['tablet', 'desktop', 'phone']),
    nextPopupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    nextErrorBoundary: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object])
}, config_provider__class.config = function (Component, options) {
    return config_config(Component, options);
}, config_provider__class.getContextProps = function (props, displayName) {
    return getContextProps(props, childContextCache.root() || {}, displayName);
}, config_provider__class.clearCache = function () {
    childContextCache.clear();
}, config_provider__class.initLocales = initLocales, config_provider__class.setLanguage = setLanguage, config_provider__class.setLocale = setLocale, config_provider__class.setDirection = setDirection, config_provider__class.getLanguage = getLanguage, config_provider__class.getLocale = getLocale, config_provider__class.getDirection = getDirection, config_provider__class.Consumer = consumer, config_provider__class.ErrorBoundary = error_boundary_ErrorBoundary, config_provider__class.getContext = function () {
    var _ref = childContextCache.root() || {},
        nextPrefix = _ref.nextPrefix,
        nextLocale = _ref.nextLocale,
        nextDefaultPropsConfig = _ref.nextDefaultPropsConfig,
        nextPure = _ref.nextPure,
        nextRtl = _ref.nextRtl,
        nextWarning = _ref.nextWarning,
        nextDevice = _ref.nextDevice,
        nextPopupContainer = _ref.nextPopupContainer,
        nextErrorBoundary = _ref.nextErrorBoundary;

    return {
        prefix: nextPrefix,
        locale: nextLocale,
        defaultPropsConfig: nextDefaultPropsConfig,
        pure: nextPure,
        rtl: nextRtl,
        warning: nextWarning,
        device: nextDevice,
        popupContainer: nextPopupContainer,
        errorBoundary: nextErrorBoundary
    };
}, config_provider__temp);
config_provider_ConfigProvider.displayName = 'ConfigProvider';


/* harmony default export */ var config_provider = (Object(react_lifecycles_compat_es["polyfill"])(config_provider_ConfigProvider));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/affix/util.js
function getScroll(node, isVertical) {
    if (typeof window === 'undefined') {
        return 0;
    }
    var windowProp = isVertical ? 'pageYOffset' : 'pageXOffset';
    var elementProp = isVertical ? 'scrollTop' : 'scrollLeft';
    return node === window ? node[windowProp] : node[elementProp];
}

function getRect(node) {
    return node !== window ? node.getBoundingClientRect() : { top: 0, left: 0, bottom: 0 };
}

function getNodeHeight(node) {
    if (!node) {
        return 0;
    }
    if (node === window) {
        return window.innerHeight;
    }
    return node.clientHeight;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/affix/index.js





var affix__class, affix__temp;












/** Affix */
var affix_Affix = (affix__temp = affix__class = function (_React$Component) {
    inherits_default()(Affix, _React$Component);

    Affix._getAffixMode = function _getAffixMode(nextProps) {
        var affixMode = {
            top: false,
            bottom: false,
            offset: 0
        };
        if (!nextProps) {
            return affixMode;
        }
        var offsetTop = nextProps.offsetTop,
            offsetBottom = nextProps.offsetBottom;


        if (typeof offsetTop !== 'number' && typeof offsetBottom !== 'number') {
            // set default
            affixMode.top = true;
        } else if (typeof offsetTop === 'number') {
            affixMode.top = true;
            affixMode.bottom = false;
            affixMode.offset = offsetTop;
        } else if (typeof offsetBottom === 'number') {
            affixMode.bottom = true;
            affixMode.top = false;
            affixMode.offset = offsetBottom;
        }

        return affixMode;
    };

    function Affix(props, context) {
        classCallCheck_default()(this, Affix);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        _this._clearContainerEvent = function () {
            if (_this.timeout) {
                clearTimeout(_this.timeout);
                _this.timeout = null;
            }
            var container = _this.props.container;

            _this._removeEventHandlerForContainer(container);
        };

        _this.updatePosition = function () {
            _this._updateNodePosition();
        };

        _this._updateNodePosition = function () {
            var affixMode = _this.state.affixMode;
            var _this$props = _this.props,
                container = _this$props.container,
                useAbsolute = _this$props.useAbsolute;

            var affixContainer = container();

            if (!affixContainer || !_this.affixNode) {
                return false;
            }
            var containerScrollTop = getScroll(affixContainer, true); // 容器在垂直位置上的滚动 offset
            var affixOffset = _this._getOffset(_this.affixNode, affixContainer); // 目标节点当前相对于容器的 offset
            var containerHeight = getNodeHeight(affixContainer); // 容器的高度
            var affixHeight = _this.affixNode.offsetHeight;
            var containerRect = getRect(affixContainer);

            var affixChildHeight = _this.affixChildNode.offsetHeight;

            var affixStyle = {
                width: affixOffset.width
            };
            var containerStyle = {
                width: affixOffset.width,
                height: affixChildHeight
            };
            var positionStyle = null;
            if (affixMode.top && containerScrollTop > affixOffset.top - affixMode.offset) {
                // affix top
                if (useAbsolute) {
                    affixStyle.position = 'absolute';
                    affixStyle.top = containerScrollTop - (affixOffset.top - affixMode.offset);
                    positionStyle = 'relative';
                } else {
                    affixStyle.position = 'fixed';
                    affixStyle.top = affixMode.offset + containerRect.top;
                }
                _this._setAffixStyle(affixStyle, true);
                _this._setContainerStyle(containerStyle);
            } else if (affixMode.bottom && containerScrollTop < affixOffset.top + affixHeight + affixMode.offset - containerHeight) {
                // affix bottom
                affixStyle.height = affixHeight;
                if (useAbsolute) {
                    affixStyle.position = 'absolute';
                    affixStyle.top = containerScrollTop - (affixOffset.top + affixHeight + affixMode.offset - containerHeight);
                    positionStyle = 'relative';
                } else {
                    affixStyle.position = 'fixed';
                    affixStyle.bottom = affixMode.offset;
                }
                _this._setAffixStyle(affixStyle, true);
                _this._setContainerStyle(containerStyle);
            } else {
                _this._setAffixStyle(null);
                _this._setContainerStyle(null);
            }

            if (_this.state.positionStyle !== positionStyle) {
                _this.setState({ positionStyle: positionStyle });
            }
        };

        _this._affixNodeRefHandler = function (ref) {
            _this.affixNode = ref;
        };

        _this._affixChildNodeRefHandler = function (ref) {
            _this.affixChildNode = ref;
        };

        _this.state = {
            style: null,
            containerStyle: null,
            positionStyle: null,
            affixMode: Affix._getAffixMode(props)
        };
        _this.resizeObserver = new ResizeObserver_es["a" /* default */](_this._updateNodePosition);
        return _this;
    }

    Affix.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if ('offsetTop' in nextProps || 'offsetBottom' in nextProps) {
            return {
                affixMode: Affix._getAffixMode(nextProps)
            };
        }
        return null;
    };

    Affix.prototype.componentDidMount = function componentDidMount() {
        var _this2 = this;

        var container = this.props.container;
        // wait for parent rendered

        this.timeout = setTimeout(function () {
            _this2._updateNodePosition();
            _this2._setEventHandlerForContainer(container);
        });
    };

    Affix.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState, snapshot) {
        var _this3 = this;

        if (prevProps.container() !== this.props.container()) {
            this._clearContainerEvent();

            this.timeout = setTimeout(function () {
                _this3._setEventHandlerForContainer(_this3.props.container);
            });
        }

        setTimeout(this._updateNodePosition);
    };

    Affix.prototype.componentWillUnmount = function componentWillUnmount() {
        this._clearContainerEvent();
    };

    Affix.prototype._setEventHandlerForContainer = function _setEventHandlerForContainer(getContainer) {
        var container = getContainer();
        if (!container) {
            return;
        }
        util_events.on(container, 'scroll', this._updateNodePosition, false);
        this.resizeObserver.observe(this.affixNode);
    };

    Affix.prototype._removeEventHandlerForContainer = function _removeEventHandlerForContainer(getContainer) {
        var container = getContainer();
        if (container) {
            util_events.off(container, 'scroll', this._updateNodePosition);
            this.resizeObserver.disconnect();
        }
    };

    Affix.prototype._setAffixStyle = function _setAffixStyle(affixStyle) {
        var affixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (util_obj.shallowEqual(affixStyle, this.state.style)) {
            return;
        }

        this.setState({
            style: affixStyle
        });

        var onAffix = this.props.onAffix;


        if (affixed) {
            setTimeout(function () {
                return onAffix(true);
            });
        } else if (!affixStyle) {
            setTimeout(function () {
                return onAffix(false);
            });
        }
    };

    Affix.prototype._setContainerStyle = function _setContainerStyle(containerStyle) {
        if (util_obj.shallowEqual(containerStyle, this.state.containerStyle)) {
            return;
        }
        this.setState({ containerStyle: containerStyle });
    };

    Affix.prototype._getOffset = function _getOffset(affixNode, affixContainer) {
        var affixRect = affixNode.getBoundingClientRect(); // affix 元素 相对浏览器窗口的位置
        var containerRect = getRect(affixContainer); // affix 容器 相对浏览器窗口的位置
        var containerScrollTop = getScroll(affixContainer, true);
        var containerScrollLeft = getScroll(affixContainer, false);

        return {
            top: affixRect.top - containerRect.top + containerScrollTop,
            left: affixRect.left - containerRect.left + containerScrollLeft,
            width: affixRect.width,
            height: affixRect.height
        };
    };

    Affix.prototype.render = function render() {
        var _classnames;

        var _state = this.state,
            affixMode = _state.affixMode,
            positionStyle = _state.positionStyle;
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            style = _props.style,
            children = _props.children;

        var state = this.state;
        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'affix'] = state.style, _classnames[prefix + 'affix-top'] = !state.style && affixMode.top, _classnames[prefix + 'affix-bottom'] = !state.style && affixMode.bottom, _classnames[className] = className, _classnames));
        var wrapperStyle = extends_default()({}, style, { position: positionStyle });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { ref: this._affixNodeRefHandler, style: wrapperStyle },
            state.style && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { style: state.containerStyle, 'aria-hidden': 'true' }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { ref: this._affixChildNodeRefHandler, className: classNames, style: state.style },
                children
            )
        );
    };

    return Affix;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), affix__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 设置 Affix 需要监听滚动事件的容器元素
     * @return {ReactElement} 目标容器元素的实例
     */
    container: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 距离窗口顶部达到指定偏移量后触发
     */
    offsetTop: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 距离窗口底部达到制定偏移量后触发
     */
    offsetBottom: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 当元素的样式发生固钉样式变化时触发的回调函数
     * @param {Boolean} affixed 元素是否被固钉
     */
    onAffix: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否启用绝对布局实现 affix
     * @param {Boolean} 是否启用绝对布局
     */
    useAbsolute: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.any
}, affix__class.defaultProps = {
    prefix: 'next-',
    container: function container() {
        return window;
    },
    onAffix: func.noop
}, affix__temp);
affix_Affix.displayName = 'Affix';


/* harmony default export */ var affix = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(affix_Affix)));
// EXTERNAL MODULE: ./node_modules/_react-transition-group@2.9.0@react-transition-group/index.js
var _react_transition_group_2_9_0_react_transition_group = __webpack_require__(47);
var _react_transition_group_2_9_0_react_transition_group_default = /*#__PURE__*/__webpack_require__.n(_react_transition_group_2_9_0_react_transition_group);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/animate/child.js






var child__class, child__temp;






var child_noop = function noop() {};
var child_on = util_events.on,
    off = util_events.off;
var child_addClass = util_dom.addClass,
    child_removeClass = util_dom.removeClass;

var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];

function getStyleProperty(node, name) {
    var style = window.getComputedStyle(node);
    var ret = '';
    for (var i = 0; i < prefixes.length; i++) {
        ret = style.getPropertyValue(prefixes[i] + name);
        if (ret) {
            break;
        }
    }
    return ret;
}

var child_AnimateChild = (child__temp = child__class = function (_Component) {
    inherits_default()(AnimateChild, _Component);

    function AnimateChild(props) {
        classCallCheck_default()(this, AnimateChild);

        var _this2 = possibleConstructorReturn_default()(this, _Component.call(this, props));

        func.bindCtx(_this2, ['handleEnter', 'handleEntering', 'handleEntered', 'handleExit', 'handleExiting', 'handleExited', 'addEndListener']);
        _this2.endListeners = {
            transitionend: [],
            animationend: []
        };
        _this2.timeoutMap = {};
        return _this2;
    }

    AnimateChild.prototype.componentWillUnmount = function componentWillUnmount() {
        var _this3 = this;

        Object.keys(this.endListeners).forEach(function (eventName) {
            _this3.endListeners[eventName].forEach(function (listener) {
                off(_this3.node, eventName, listener);
            });
        });
        this.endListeners = {
            transitionend: [],
            animationend: []
        };
    };

    AnimateChild.prototype.generateEndListener = function generateEndListener(node, done, eventName, id) {
        var _this = this;
        return function endListener(e) {
            if (e && e.target === node) {
                if (_this.timeoutMap[id]) {
                    clearTimeout(_this.timeoutMap[id]);
                    delete _this.timeoutMap[id];
                }

                done();
                off(node, eventName, endListener);
                var listeners = _this.endListeners[eventName];
                var index = listeners.indexOf(endListener);
                index > -1 && listeners.splice(index, 1);
            }
        };
    };

    AnimateChild.prototype.addEndListener = function addEndListener(node, done) {
        var _this4 = this;

        if (support.transition || support.animation) {
            var id = util_guid();

            this.node = node;
            if (support.transition) {
                var transitionEndListener = this.generateEndListener(node, done, 'transitionend', id);
                child_on(node, 'transitionend', transitionEndListener);
                this.endListeners.transitionend.push(transitionEndListener);
            }
            if (support.animation) {
                var animationEndListener = this.generateEndListener(node, done, 'animationend', id);
                child_on(node, 'animationend', animationEndListener);
                this.endListeners.animationend.push(animationEndListener);
            }

            setTimeout(function () {
                var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
                var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
                var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
                var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
                var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
                if (time) {
                    _this4.timeoutMap[id] = setTimeout(function () {
                        done();
                    }, time * 1000 + 200);
                }
            }, 15);
        } else {
            done();
        }
    };

    AnimateChild.prototype.removeEndtListener = function removeEndtListener() {
        this.transitionOff && this.transitionOff();
        this.animationOff && this.animationOff();
    };

    AnimateChild.prototype.removeClassNames = function removeClassNames(node, names) {
        Object.keys(names).forEach(function (key) {
            child_removeClass(node, names[key]);
        });
    };

    AnimateChild.prototype.handleEnter = function handleEnter(node, isAppearing) {
        var names = this.props.names;

        if (names) {
            this.removeClassNames(node, names);
            var className = isAppearing ? 'appear' : 'enter';
            child_addClass(node, names[className]);
        }

        var hook = isAppearing ? this.props.onAppear : this.props.onEnter;
        hook(node);
    };

    AnimateChild.prototype.handleEntering = function handleEntering(node, isAppearing) {
        var _this5 = this;

        setTimeout(function () {
            var names = _this5.props.names;

            if (names) {
                var className = isAppearing ? 'appearActive' : 'enterActive';
                child_addClass(node, names[className]);
            }

            var hook = isAppearing ? _this5.props.onAppearing : _this5.props.onEntering;
            hook(node);
        }, 10);
    };

    AnimateChild.prototype.handleEntered = function handleEntered(node, isAppearing) {
        var names = this.props.names;

        if (names) {
            var classNames = isAppearing ? [names.appear, names.appearActive] : [names.enter, names.enterActive];
            classNames.forEach(function (className) {
                child_removeClass(node, className);
            });
        }

        var hook = isAppearing ? this.props.onAppeared : this.props.onEntered;
        hook(node);
    };

    AnimateChild.prototype.handleExit = function handleExit(node) {
        var names = this.props.names;

        if (names) {
            this.removeClassNames(node, names);
            child_addClass(node, names.leave);
        }

        this.props.onExit(node);
    };

    AnimateChild.prototype.handleExiting = function handleExiting(node) {
        var _this6 = this;

        setTimeout(function () {
            var names = _this6.props.names;

            if (names) {
                child_addClass(node, names.leaveActive);
            }
            _this6.props.onExiting(node);
        }, 10);
    };

    AnimateChild.prototype.handleExited = function handleExited(node) {
        var names = this.props.names;

        if (names) {
            [names.leave, names.leaveActive].forEach(function (className) {
                child_removeClass(node, className);
            });
        }

        this.props.onExited(node);
    };

    AnimateChild.prototype.render = function render() {
        /* eslint-disable no-unused-vars */
        var _props = this.props,
            names = _props.names,
            onAppear = _props.onAppear,
            onAppeared = _props.onAppeared,
            onAppearing = _props.onAppearing,
            onEnter = _props.onEnter,
            onEntering = _props.onEntering,
            onEntered = _props.onEntered,
            onExit = _props.onExit,
            onExiting = _props.onExiting,
            onExited = _props.onExited,
            others = objectWithoutProperties_default()(_props, ['names', 'onAppear', 'onAppeared', 'onAppearing', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited']);
        /* eslint-enable no-unused-vars */

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(_react_transition_group_2_9_0_react_transition_group["Transition"], extends_default()({}, others, {
            onEnter: this.handleEnter,
            onEntering: this.handleEntering,
            onEntered: this.handleEntered,
            onExit: this.handleExit,
            onExiting: this.handleExiting,
            onExited: this.handleExited,
            addEndListener: this.addEndListener
        }));
    };

    return AnimateChild;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), child__class.propTypes = {
    names: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.object]),
    onAppear: _prop_types_15_8_1_prop_types_default.a.func,
    onAppearing: _prop_types_15_8_1_prop_types_default.a.func,
    onAppeared: _prop_types_15_8_1_prop_types_default.a.func,
    onEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onEntering: _prop_types_15_8_1_prop_types_default.a.func,
    onEntered: _prop_types_15_8_1_prop_types_default.a.func,
    onExit: _prop_types_15_8_1_prop_types_default.a.func,
    onExiting: _prop_types_15_8_1_prop_types_default.a.func,
    onExited: _prop_types_15_8_1_prop_types_default.a.func
}, child__class.defaultProps = {
    onAppear: child_noop,
    onAppearing: child_noop,
    onAppeared: child_noop,
    onEnter: child_noop,
    onEntering: child_noop,
    onEntered: child_noop,
    onExit: child_noop,
    onExiting: child_noop,
    onExited: child_noop
}, child__temp);
child_AnimateChild.displayName = 'AnimateChild';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/animate/animate.js







var animate__class, animate__temp;






var animate_noop = function noop() {};
var animate_FirstChild = function FirstChild(props) {
    var childrenArray = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.toArray(props.children);
    return childrenArray[0] || null;
};

/**
 * Animate
 */
var animate_Animate = (animate__temp = animate__class = function (_Component) {
    inherits_default()(Animate, _Component);

    function Animate() {
        classCallCheck_default()(this, Animate);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Animate.prototype.normalizeNames = function normalizeNames(names) {
        if (typeof names === 'string') {
            return {
                appear: names + '-appear',
                appearActive: names + '-appear-active',
                enter: names + '-enter',
                enterActive: names + '-enter-active',
                leave: names + '-leave',
                leaveActive: names + '-leave-active'
            };
        }
        if ((typeof names === 'undefined' ? 'undefined' : typeof_default()(names)) === 'object') {
            return {
                appear: names.appear,
                appearActive: names.appear + '-active',
                enter: '' + names.enter,
                enterActive: names.enter + '-active',
                leave: '' + names.leave,
                leaveActive: names.leave + '-active'
            };
        }
    };

    Animate.prototype.render = function render() {
        var _this2 = this;

        /* eslint-disable no-unused-vars */
        var _props = this.props,
            animation = _props.animation,
            children = _props.children,
            animationAppear = _props.animationAppear,
            singleMode = _props.singleMode,
            component = _props.component,
            beforeAppear = _props.beforeAppear,
            onAppear = _props.onAppear,
            afterAppear = _props.afterAppear,
            beforeEnter = _props.beforeEnter,
            onEnter = _props.onEnter,
            afterEnter = _props.afterEnter,
            beforeLeave = _props.beforeLeave,
            onLeave = _props.onLeave,
            afterLeave = _props.afterLeave,
            others = objectWithoutProperties_default()(_props, ['animation', 'children', 'animationAppear', 'singleMode', 'component', 'beforeAppear', 'onAppear', 'afterAppear', 'beforeEnter', 'onEnter', 'afterEnter', 'beforeLeave', 'onLeave', 'afterLeave']);
        /* eslint-enable no-unused-vars */

        var animateChildren = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                child_AnimateChild,
                {
                    key: child.key,
                    names: _this2.normalizeNames(animation),
                    onAppear: beforeAppear,
                    onAppearing: onAppear,
                    onAppeared: afterAppear,
                    onEnter: beforeEnter,
                    onEntering: onEnter,
                    onEntered: afterEnter,
                    onExit: beforeLeave,
                    onExiting: onLeave,
                    onExited: afterLeave
                },
                child
            );
        });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            _react_transition_group_2_9_0_react_transition_group["TransitionGroup"],
            extends_default()({
                appear: animationAppear,
                component: singleMode ? animate_FirstChild : component
            }, others),
            animateChildren
        );
    };

    return Animate;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), animate__class.propTypes = {
    /**
     * 动画 className
     */
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * 子元素第一次挂载时是否执行动画
     */
    animationAppear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 包裹子元素的标签
     */
    component: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否只有单个子元素，如果有多个子元素，请设置为 false
     */
    singleMode: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 子元素
     */
    children: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.element, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.element)]),
    /**
     * 执行第一次挂载动画前触发的回调函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    beforeAppear: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行第一次挂载动画，添加 xxx-appear-active 类名后触发的回调函数
     *  @param {HTMLElement} node 执行动画的 dom 元素
     */
    onAppear: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行完第一次挂载动画后触发的函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    afterAppear: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行进场动画前触发的回调函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    beforeEnter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行进场动画，添加 xxx-enter-active 类名后触发的回调函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    onEnter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行完进场动画后触发的回调函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    afterEnter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行离场动画前触发的回调函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    beforeLeave: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行离场动画，添加 xxx-leave-active 类名后触发的回调函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    onLeave: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 执行完离场动画后触发的回调函数
     * @param {HTMLElement} node 执行动画的 dom 元素
     */
    afterLeave: _prop_types_15_8_1_prop_types_default.a.func
}, animate__class.defaultProps = {
    animationAppear: true,
    component: 'div',
    singleMode: true,
    beforeAppear: animate_noop,
    onAppear: animate_noop,
    afterAppear: animate_noop,
    beforeEnter: animate_noop,
    onEnter: animate_noop,
    afterEnter: animate_noop,
    beforeLeave: animate_noop,
    onLeave: animate_noop,
    afterLeave: animate_noop
}, animate__temp);
animate_Animate.displayName = 'Animate';


/* harmony default export */ var animate = (animate_Animate);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/animate/expand.js






var expand__class, expand__temp;






var expand_noop = function noop() {};
var expand_getStyle = util_dom.getStyle;
var expand_Expand = (expand__temp = expand__class = function (_Component) {
    inherits_default()(Expand, _Component);

    function Expand(props) {
        classCallCheck_default()(this, Expand);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        func.bindCtx(_this, ['beforeEnter', 'onEnter', 'afterEnter', 'beforeLeave', 'onLeave', 'afterLeave']);
        return _this;
    }

    Expand.prototype.beforeEnter = function beforeEnter(node) {
        if (this.leaving) {
            this.afterLeave(node);
        }

        this.cacheCurrentStyle(node);
        this.cacheComputedStyle(node);
        this.setCurrentStyleToZero(node);

        this.props.beforeEnter(node);
    };

    Expand.prototype.onEnter = function onEnter(node) {
        this.setCurrentStyleToComputedStyle(node);

        this.props.onEnter(node);
    };

    Expand.prototype.afterEnter = function afterEnter(node) {
        this.restoreCurrentStyle(node);

        this.props.afterEnter(node);
    };

    Expand.prototype.beforeLeave = function beforeLeave(node) {
        this.leaving = true;

        this.cacheCurrentStyle(node);
        this.cacheComputedStyle(node);
        this.setCurrentStyleToComputedStyle(node);

        this.props.beforeLeave(node);
    };

    Expand.prototype.onLeave = function onLeave(node) {
        this.setCurrentStyleToZero(node);

        this.props.onLeave(node);
    };

    Expand.prototype.afterLeave = function afterLeave(node) {
        this.leaving = false;

        this.restoreCurrentStyle(node);

        this.props.afterLeave(node);
    };

    Expand.prototype.cacheCurrentStyle = function cacheCurrentStyle(node) {
        this.styleBorderTopWidth = node.style.borderTopWidth;
        this.stylePaddingTop = node.style.paddingTop;
        this.styleHeight = node.style.height;
        this.stylePaddingBottom = node.style.paddingBottom;
        this.styleBorderBottomWidth = node.style.borderBottomWidth;
    };

    Expand.prototype.cacheComputedStyle = function cacheComputedStyle(node) {
        this.borderTopWidth = expand_getStyle(node, 'borderTopWidth');
        this.paddingTop = expand_getStyle(node, 'paddingTop');
        this.height = node.offsetHeight;
        this.paddingBottom = expand_getStyle(node, 'paddingBottom');
        this.borderBottomWidth = expand_getStyle(node, 'borderBottomWidth');
    };

    Expand.prototype.setCurrentStyleToZero = function setCurrentStyleToZero(node) {
        node.style.borderTopWidth = '0px';
        node.style.paddingTop = '0px';
        node.style.height = '0px';
        node.style.paddingBottom = '0px';
        node.style.borderBottomWidth = '0px';
    };

    Expand.prototype.setCurrentStyleToComputedStyle = function setCurrentStyleToComputedStyle(node) {
        node.style.borderTopWidth = this.borderTopWidth + 'px';
        node.style.paddingTop = this.paddingTop + 'px';
        node.style.height = this.height + 'px';
        node.style.paddingBottom = this.paddingBottom + 'px';
        node.style.borderBottomWidth = this.borderBottomWidth + 'px';
    };

    Expand.prototype.restoreCurrentStyle = function restoreCurrentStyle(node) {
        node.style.borderTopWidth = this.styleBorderTopWidth;
        node.style.paddingTop = this.stylePaddingTop;
        node.style.height = this.styleHeight;
        node.style.paddingBottom = this.stylePaddingBottom;
        node.style.borderBottomWidth = this.styleBorderBottomWidth;
    };

    Expand.prototype.render = function render() {
        var _props = this.props,
            animation = _props.animation,
            others = objectWithoutProperties_default()(_props, ['animation']);

        var newAnimation = animation || 'expand';

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(animate, extends_default()({}, others, {
            animation: newAnimation,
            beforeEnter: this.beforeEnter,
            onEnter: this.onEnter,
            afterEnter: this.afterEnter,
            beforeLeave: this.beforeLeave,
            onLeave: this.onLeave,
            afterLeave: this.afterLeave
        }));
    };

    return Expand;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), expand__class.propTypes = {
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.object]),
    beforeEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onEnter: _prop_types_15_8_1_prop_types_default.a.func,
    afterEnter: _prop_types_15_8_1_prop_types_default.a.func,
    beforeLeave: _prop_types_15_8_1_prop_types_default.a.func,
    onLeave: _prop_types_15_8_1_prop_types_default.a.func,
    afterLeave: _prop_types_15_8_1_prop_types_default.a.func
}, expand__class.defaultProps = {
    beforeEnter: expand_noop,
    onEnter: expand_noop,
    afterEnter: expand_noop,
    beforeLeave: expand_noop,
    onLeave: expand_noop,
    afterLeave: expand_noop
}, expand__temp);
expand_Expand.displayName = 'Expand';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/animate/overlay-animate.js


/* istanbul ignore file */




var overlay_animate_OverlayAnimate = function OverlayAnimate(props) {
    var animation = props.animation,
        visible = props.visible,
        children = props.children,
        _props$timeout = props.timeout,
        timeout = _props$timeout === undefined ? 300 : _props$timeout,
        style = props.style,
        mountOnEnter = props.mountOnEnter,
        unmountOnExit = props.unmountOnExit,
        appear = props.appear,
        enter = props.enter,
        exit = props.exit,
        onEnter = props.onEnter,
        onEntering = props.onEntering,
        onEntered = props.onEntered,
        onExit = props.onExit,
        onExiting = props.onExiting,
        onExited = props.onExited,
        others = objectWithoutProperties_default()(props, ['animation', 'visible', 'children', 'timeout', 'style', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited']);

    var animateProps = {
        mountOnEnter: mountOnEnter,
        unmountOnExit: unmountOnExit,
        appear: appear,
        enter: enter,
        exit: exit,
        onEnter: onEnter,
        onEntering: onEntering,
        onEntered: onEntered,
        onExit: onExit,
        onExiting: onExiting,
        onExited: onExited
    };

    Object.keys(animateProps).forEach(function (k) {
        if (!(k in props) || typeof props[k] === 'undefined') {
            delete animateProps[k];
        }
    });

    var animationMap = typeof animation === 'string' ? { in: animation, out: animation } : animation;

    var animateClsMap = animation ? {
        entering: animationMap.in,
        exiting: animationMap.out
    } : {};

    if (animation === false) {
        animateClsMap.entering = '';
        animateClsMap.exiting = '';
    }

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        _react_transition_group_2_9_0_react_transition_group["Transition"],
        extends_default()({}, animateProps, { 'in': visible, timeout: animation ? timeout : 0, appear: true }),
        function (state) {
            var _classNames;

            var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[children.props.className] = !!children.props.className, _classNames[animateClsMap[state]] = state in animateClsMap && animateClsMap[state], _classNames));

            var childProps = extends_default()({}, others, {
                className: cls
            });

            if (style && children.props && children.props.style) {
                childProps.style = extends_default()({}, children.props.style, style);
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(children, childProps);
        }
    );
};

/* harmony default export */ var overlay_animate = (overlay_animate_OverlayAnimate);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/animate/index.js




animate.Expand = expand_Expand;
animate.OverlayAnimate = overlay_animate;

/* harmony default export */ var es_animate = (animate);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/badge/sup.js




var sup__class, sup__temp;








/**
 * badge sup component
 */

// util::getDigitArray
var getDigitArray = function getDigitArray(num) {
    return num.toString().split('').reverse().map(function (i) {
        return parseInt(i, 10);
    });
};

var sup_Sup = (sup__temp = sup__class = function (_Component) {
    inherits_default()(Sup, _Component);

    // 单排可滚动的数字列表
    Sup.renderDigit = function renderDigit(prefix, digit, key) {
        var children = [];
        for (var i = 0; i < 30; i++) {
            children.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { key: i },
                i % 10
            ));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'badge-scroll-number-only', key: key },
            children
        );
    };

    // 可滚动数字组


    Sup.renderNumber = function renderNumber(prefix, count) {
        return getDigitArray(count).map(function (digit, i) {
            return Sup.renderDigit(prefix, digit, i);
        }).reverse();
    };

    function Sup(props) {
        classCallCheck_default()(this, Sup);

        // render 时， 上一次的渲染数字 和 当前渲染的数字
        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.saveRef = function (ref) {
            _this.supEl = ref;
        };

        _this.state = {
            lastCount: 0,
            currentCount: props.count
        };
        return _this;
    }

    Sup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if ('count' in nextProps) {
            return {
                lastCount: prevState.currentCount,
                currentCount: nextProps.count
            };
        }

        return null;
    };

    Sup.prototype.componentDidMount = function componentDidMount() {
        this.computeStyle(true);
    };

    Sup.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var _this2 = this;

        if (prevProps.count !== this.props.count) {
            this.computeStyle(false);

            // NOTE why called `computeStyle` again after 300ms ?
            setTimeout(function () {
                _this2.computeStyle(true, true);
            }, 300);
        }
    };

    Sup.prototype.computeStyle = function computeStyle(removeTransition, revert) {
        var _this3 = this;

        var _props = this.props,
            prefix = _props.prefix,
            count = _props.count,
            overflowCount = _props.overflowCount;
        var lastCount = this.state.lastCount;


        if (count < 0) {
            return;
        }
        var supNode = this.supEl;

        if (supNode && util_dom.hasClass(supNode, prefix + 'badge-count')) {
            var scrollNums = supNode.querySelectorAll('.' + prefix + 'badge-scroll-number-only');

            if (scrollNums.length) {
                var height = window.getComputedStyle(supNode).height;

                scrollNums = [].slice.call(scrollNums, 0).reverse();

                getDigitArray(count).forEach(function (digit, i) {
                    var position = _this3.getPositionByDigit(digit, i, revert);
                    var transformTo = -position * parseFloat(height);

                    removeTransition = removeTransition || typeof getDigitArray(lastCount)[i] === 'undefined' || lastCount > overflowCount || lastCount <= 0;

                    var scrollStyle = support.animation ? {
                        transition: removeTransition ? 'none' : 'transform .3s cubic-bezier(.645, .045, .355, 1), -webkit-transform .3s cubic-bezier(.645, .045, .355, 1)',
                        WebkitTransform: 'translateY(' + transformTo + 'px)',
                        transform: 'translateY(' + transformTo + 'px)',
                        height: height,
                        lineHeight: height
                    } : {
                        top: transformTo + 'px',
                        height: height,
                        lineHeight: height
                    };

                    Object.keys(scrollStyle).forEach(function (key) {
                        scrollNums[i].style[key] = scrollStyle[key];
                    });
                });
            }
        }
    };

    Sup.prototype.getPositionByDigit = function getPositionByDigit(digit, i, revert) {
        var lastCount = this.state.lastCount;

        if (revert) {
            return 10 + digit;
        }
        var lastDigit = getDigitArray(lastCount)[i] || 0;

        if (this.props.count > lastCount) {
            return (digit >= lastDigit ? 10 : 20) + digit;
        }

        if (digit <= lastDigit) {
            return 10 + digit;
        }

        return digit;
    };

    Sup.prototype.render = function render() {
        var _classNames;

        var _props2 = this.props,
            prefix = _props2.prefix,
            count = _props2.count,
            showZero = _props2.showZero,
            overflowCount = _props2.overflowCount,
            dot = _props2.dot,
            style = _props2.style,
            content = _props2.content;


        var supClasses = _classnames_2_3_1_classnames_default()(prefix + 'badge-scroll-number', (_classNames = {}, _classNames[prefix + 'badge-count'] = !!count || count === 0 && showZero, _classNames[prefix + 'badge-dot'] = dot, _classNames[prefix + 'badge-custom'] = !!content, _classNames));

        var children = null;
        var show = dot || count > 0 || count === 0 && showZero || content;

        if (count > 0 || count === 0 && showZero) {
            var realCount = overflowCount > 0 && count > overflowCount ? overflowCount + '+' : count;

            children = isNaN(realCount) ? realCount : Sup.renderNumber(prefix, count);
        } else if (content) {
            children = content;
        }

        var animation = {
            appear: 'zoomIn',
            enter: 'zoomIn',
            leave: 'zoomOut'
        };

        var wrapper = support.animation ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_animate, { animation: animation }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', null);
        var element = show ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'sup',
            { ref: this.saveRef, className: supClasses, style: style },
            children
        ) : null;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(wrapper, {}, element);
    };

    return Sup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), sup__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    count: _prop_types_15_8_1_prop_types_default.a.number,
    showZero: _prop_types_15_8_1_prop_types_default.a.bool,
    overflowCount: _prop_types_15_8_1_prop_types_default.a.number,
    content: _prop_types_15_8_1_prop_types_default.a.node,
    dot: _prop_types_15_8_1_prop_types_default.a.bool,
    style: _prop_types_15_8_1_prop_types_default.a.object
}, sup__class.defaultProps = {
    prefix: 'next-',
    count: 0,
    showZero: false,
    overflowCount: 99,
    dot: false
}, sup__temp);
sup_Sup.displayName = 'Sup';


/* harmony default export */ var sup = (Object(react_lifecycles_compat_es["polyfill"])(sup_Sup));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/badge/index.js





var badge__class, badge__temp;








/**
 * Badge
 */
var badge_Badge = (badge__temp = badge__class = function (_Component) {
    inherits_default()(Badge, _Component);

    function Badge() {
        classCallCheck_default()(this, Badge);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Badge.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            dot = _props.dot,
            className = _props.className,
            children = _props.children,
            content = _props.content,
            style = _props.style,
            rtl = _props.rtl,
            originCount = _props.count,
            showZero = _props.showZero,
            originOverflowCount = _props.overflowCount;

        var count = parseInt(originCount, 10);
        var overflowCount = parseInt(originOverflowCount, 10);
        var others = util_obj.pickOthers(Badge.propTypes, this.props);

        // 如果是数字，则添加默认的 title
        if (count || count === 0 && showZero) {
            others.title = others.title || '' + count;
        }

        var classes = _classnames_2_3_1_classnames_default()(prefix + 'badge', (_classNames = {}, _classNames[prefix + 'badge-not-a-wrapper'] = !children, _classNames), className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({ dir: rtl ? 'rtl' : undefined, className: classes }, others),
            children,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(sup, {
                prefix: prefix,
                content: content,
                count: count,
                showZero: showZero,
                overflowCount: overflowCount,
                dot: dot,
                style: style
            })
        );
    };

    return Badge;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), badge__class.propTypes = {
    // 样式类名的品牌前缀
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    // 自定义类名
    className: _prop_types_15_8_1_prop_types_default.a.string,
    // 自定义内联样式
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 徽标依托的内容，一般显示在其右上方
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 展示的数字，大于 `overflowCount` 时显示为 `${overflowCount}+`，为 `0` 时默认隐藏
     */
    count: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 当`count`为`0`时，是否显示count
     * @version 1.16
     */
    showZero: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义徽标中的内容
     */
    content: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 展示的封顶的数字
     */
    overflowCount: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 不展示数字，只展示一个小红点
     */
    dot: _prop_types_15_8_1_prop_types_default.a.bool
}, badge__class.defaultProps = {
    prefix: 'next-',
    count: 0,
    showZero: false,
    overflowCount: 99,
    dot: false
}, badge__temp);
badge_Badge.displayName = 'Badge';


/* harmony default export */ var badge = (config_provider.config(badge_Badge));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/manager.js
var overlayManager = {
    allOverlays: [],

    addOverlay: function addOverlay(overlay) {
        this.removeOverlay(overlay);
        this.allOverlays.unshift(overlay);
    },
    isCurrentOverlay: function isCurrentOverlay(overlay) {
        return overlay && this.allOverlays[0] === overlay;
    },
    removeOverlay: function removeOverlay(overlay) {
        var i = this.allOverlays.indexOf(overlay);
        if (i > -1) {
            this.allOverlays.splice(i, 1);
        }
    }
};

/* harmony default export */ var manager = (overlayManager);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/utils/find-node.js


function findNode(target, param) {
    if (!target) {
        return null;
    }

    if (typeof target === 'string') {
        return document.getElementById(target);
    }

    if (typeof target === 'function') {
        try {
            target = target(param);
        } catch (err) {
            target = null;
        }
    }

    if (!target) {
        return null;
    }

    try {
        return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(target);
    } catch (err) {
        return target;
    }
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/gateway.js




var gateway__class, gateway__temp;








var gateway_makeChain = func.makeChain;


var gateway_getContainerNode = function getContainerNode(props) {
    var targetNode = findNode(props.target);
    return findNode(props.container, targetNode);
};

var gateway_Gateway = (gateway__temp = gateway__class = function (_Component) {
    inherits_default()(Gateway, _Component);

    function Gateway(props) {
        classCallCheck_default()(this, Gateway);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.updateContainer = function () {
            var containerNode = gateway_getContainerNode(_this.props);

            if (containerNode !== _this.state.containerNode) {
                // eslint-disable-next-line
                _this.setState({
                    containerNode: containerNode
                });
            }
        };

        _this.saveChildRef = function (ref) {
            _this.child = ref;
        };

        _this.state = {
            containerNode: null
        };
        return _this;
    }

    Gateway.prototype.componentDidMount = function componentDidMount() {
        this.updateContainer();
    };

    Gateway.prototype.componentDidUpdate = function componentDidUpdate() {
        this.updateContainer();
    };

    Gateway.prototype.getChildNode = function getChildNode() {
        try {
            return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.child);
        } catch (err) {
            return null;
        }
    };

    Gateway.prototype.render = function render() {
        var containerNode = this.state.containerNode;


        if (!containerNode) {
            return null;
        }

        var children = this.props.children;

        var child = children ? external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].only(children) : null;
        if (!child) {
            return null;
        }

        if (typeof child.ref === 'string') {
            throw new Error('Can not set ref by string in Gateway, use function instead.');
        }
        child = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
            ref: gateway_makeChain(this.saveChildRef, child.ref)
        });

        return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["createPortal"])(child, containerNode);
    };

    return Gateway;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), gateway__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.node,
    container: _prop_types_15_8_1_prop_types_default.a.any,
    target: _prop_types_15_8_1_prop_types_default.a.any
}, gateway__class.defaultProps = {
    container: function container() {
        return document.body;
    }
}, gateway__temp);
gateway_Gateway.displayName = 'Gateway';


/* harmony default export */ var gateway = (Object(react_lifecycles_compat_es["polyfill"])(gateway_Gateway));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/utils/position.js



var position__class, position__temp, position__initialiseProps;




var VIEWPORT = 'viewport';

// IE8 not support pageXOffset
var getPageX = function getPageX() {
    return window.pageXOffset || document.documentElement.scrollLeft;
};
var getPageY = function getPageY() {
    return window.pageYOffset || document.documentElement.scrollTop;
};

/**
 * @private get element size
 * @param       {Element} element
 * @return      {Object}
 */
function _getSize(element) {
    // element like `svg` do not have offsetWidth and offsetHeight prop
    // then getBoundingClientRect
    if ('offsetWidth' in element && 'offsetHeight' in element) {
        return {
            width: element.offsetWidth,
            height: element.offsetHeight
        };
    } else {
        var _element$getBoundingC = element.getBoundingClientRect(),
            width = _element$getBoundingC.width,
            height = _element$getBoundingC.height;

        return {
            width: width,
            height: height
        };
    }
}

/**
 * @private get element rect
 * @param       {Element} elem
 * @return      {Object}
 */
function _getElementRect(elem, container) {
    var offsetTop = 0,
        offsetLeft = 0,
        scrollTop = 0,
        scrollLeft = 0;

    var _getSize2 = _getSize(elem),
        width = _getSize2.width,
        height = _getSize2.height;

    do {
        if (!isNaN(elem.offsetTop)) {
            offsetTop += elem.offsetTop;
        }
        if (!isNaN(elem.offsetLeft)) {
            offsetLeft += elem.offsetLeft;
        }
        if (elem && elem.offsetParent) {
            if (!isNaN(elem.offsetParent.scrollLeft) && elem.offsetParent !== document.body) {
                scrollLeft += elem.offsetParent.scrollLeft;
            }

            if (!isNaN(elem.offsetParent.scrollTop) && elem.offsetParent !== document.body) {
                scrollTop += elem.offsetParent.scrollTop;
            }
        }

        elem = elem.offsetParent;
    } while (elem !== null && elem !== container);

    // if container is body or invalid, treat as window, use client width & height
    var treatAsWindow = !container || container === document.body;

    return {
        top: offsetTop - scrollTop - (treatAsWindow ? document.documentElement.scrollTop || document.body.scrollTop : 0),
        left: offsetLeft - scrollLeft - (treatAsWindow ? document.documentElement.scrollLeft || document.body.scrollLeft : 0),
        width: width,
        height: height
    };
}

/**
 * @private get viewport size
 * @return {Object}
 */
function _getViewportSize(container) {
    if (!container || container === document.body) {
        return {
            width: document.documentElement.clientWidth,
            height: document.documentElement.clientHeight
        };
    }

    var _container$getBoundin = container.getBoundingClientRect(),
        width = _container$getBoundin.width,
        height = _container$getBoundin.height;

    return {
        width: width,
        height: height
    };
}

var position_getContainer = function getContainer(_ref) {
    var container = _ref.container,
        baseElement = _ref.baseElement;

    // SSR下会有副作用
    if ((typeof document === 'undefined' ? 'undefined' : typeof_default()(document)) === undefined) {
        return container;
    }

    var calcContainer = findNode(container, baseElement);

    if (!calcContainer) {
        calcContainer = document.body;
    }

    while (util_dom.getStyle(calcContainer, 'position') === 'static') {
        if (!calcContainer || calcContainer === document.body) {
            return document.body;
        }
        calcContainer = calcContainer.parentNode;
    }

    return calcContainer;
};

var position_Position = (position__temp = position__class = function () {
    function Position(props) {
        classCallCheck_default()(this, Position);

        position__initialiseProps.call(this);

        this.pinElement = props.pinElement;
        this.baseElement = props.baseElement;
        this.pinFollowBaseElementWhenFixed = props.pinFollowBaseElementWhenFixed;
        this.container = position_getContainer(props);
        this.autoFit = props.autoFit || false;
        this.align = props.align || 'tl tl';
        this.offset = props.offset || [0, 0];
        this.needAdjust = props.needAdjust || false;
        this.isRtl = props.isRtl || false;
    }

    /**
     * @public static place method
     * @param  {Object}       props
     *     @param  {DOM}      props.pinElement
     *     @param  {DOM}      props.baseElement
     *     @param  {String}   props.align
     *     @param  {Number}   props.offset
     *     @param  {Boolean}  props.needAdjust
     *     @param  {Boolean}  props.isRtl
     * @return {Position}
     */


    Position.prototype.setPosition = function setPosition() {
        var pinElement = this.pinElement;
        var baseElement = this.baseElement;
        var pinFollowBaseElementWhenFixed = this.pinFollowBaseElementWhenFixed;
        var expectedAlign = this._getExpectedAlign();
        var isPinFixed = void 0,
            isBaseFixed = void 0,
            firstPositionResult = void 0;
        if (pinElement === VIEWPORT) {
            return;
        }
        if (util_dom.getStyle(pinElement, 'position') !== 'fixed') {
            util_dom.setStyle(pinElement, 'position', 'absolute');
            isPinFixed = false;
        } else {
            isPinFixed = true;
        }
        if (baseElement === VIEWPORT || util_dom.getStyle(baseElement, 'position') !== 'fixed') {
            isBaseFixed = false;
        } else {
            isBaseFixed = true;
        }

        // 根据期望的定位
        for (var i = 0; i < expectedAlign.length; i++) {
            var align = expectedAlign[i];
            var pinElementPoints = this._normalizePosition(pinElement, align.split(' ')[0], isPinFixed);
            var baseElementPoints = this._normalizePosition(baseElement, align.split(' ')[1],
            // 忽略元素位置，发生在类似dialog的场景下
            isPinFixed && !pinFollowBaseElementWhenFixed);

            var pinElementParentOffset = this._getParentOffset(pinElement);
            var pinElementParentScrollOffset = this._getParentScrollOffset(pinElement);

            var baseElementOffset = isPinFixed && isBaseFixed ? this._getLeftTop(baseElement) : // 在 pin 是 fixed 布局，并且又需要根据 base 计算位置时，计算 base 的 offset 需要忽略页面滚动
            baseElementPoints.offset(isPinFixed && pinFollowBaseElementWhenFixed);
            var top = baseElementOffset.top + baseElementPoints.y - pinElementParentOffset.top - pinElementPoints.y + pinElementParentScrollOffset.top;
            var left = baseElementOffset.left + baseElementPoints.x - pinElementParentOffset.left - pinElementPoints.x + pinElementParentScrollOffset.left;

            this._setPinElementPostion(pinElement, { left: left, top: top }, this.offset);

            if (this._isInViewport(pinElement, align)) {
                return align;
            } else if (!firstPositionResult) {
                if (this.needAdjust && !this.autoFit) {
                    var _getViewportOffset2 = this._getViewportOffset(pinElement, align),
                        right = _getViewportOffset2.right;

                    firstPositionResult = {
                        left: right < 0 ? left + right : left,
                        top: top
                    };
                } else {
                    firstPositionResult = { left: left, top: top };
                }
            }
        }

        // This will only execute if `pinElement` could not be placed entirely in the Viewport
        var inViewportLeft = this._makeElementInViewport(pinElement, firstPositionResult.left, 'Left', isPinFixed);
        var inViewportTop = this._makeElementInViewport(pinElement, firstPositionResult.top, 'Top', isPinFixed);

        this._setPinElementPostion(pinElement, { left: inViewportLeft, top: inViewportTop }, this._calPinOffset(expectedAlign[0]));

        return expectedAlign[0];
    };

    Position.prototype._getParentOffset = function _getParentOffset(element) {
        var parent = element.offsetParent || document.documentElement;
        var offset = void 0;
        if (parent === document.body && util_dom.getStyle(parent, 'position') === 'static') {
            offset = {
                top: 0,
                left: 0
            };
        } else {
            offset = this._getElementOffset(parent);
        }

        offset.top += parseFloat(util_dom.getStyle(parent, 'border-top-width'), 10);
        offset.left += parseFloat(util_dom.getStyle(parent, 'border-left-width'), 10);
        offset.offsetParent = parent;
        return offset;
    };

    Position.prototype._makeElementInViewport = function _makeElementInViewport(pinElement, number, type, isPinFixed) {
        // pinElement.offsetParent is never body because wrapper has position: absolute
        // refactored to make code clearer. Revert if wrapper style changes.
        var result = number;
        var docElement = document.documentElement;
        var offsetParent = pinElement.offsetParent || document.documentElement;

        if (result < 0) {
            if (isPinFixed) {
                result = 0;
            } else if (offsetParent === document.body && util_dom.getStyle(offsetParent, 'position') === 'static') {
                // Only when div's offsetParent is document.body, we set new position result.
                result = Math.max(docElement['scroll' + type], document.body['scroll' + type]);
            }
        }
        return result;
    };

    // 这里的第三个参数真实含义为：是否为fixed布局，并且像dialog一样，不跟随trigger元素


    Position.prototype._normalizePosition = function _normalizePosition(element, align, ignoreElementOffset) {
        var points = this._normalizeElement(element, ignoreElementOffset);
        this._normalizeXY(points, align);

        return points;
    };

    Position.prototype._normalizeXY = function _normalizeXY(points, align) {
        var x = align.split('')[1];
        var y = align.split('')[0];

        points.x = this._xyConverter(x, points, 'width');
        points.y = this._xyConverter(y, points, 'height');

        return points;
    };

    Position.prototype._xyConverter = function _xyConverter(align, points, type) {
        var res = align.replace(/t|l/gi, '0%').replace(/c/gi, '50%').replace(/b|r/gi, '100%').replace(/(\d+)%/gi, function (m, d) {
            return points.size()[type] * (d / 100);
        });

        return parseFloat(res, 10) || 0;
    };

    Position.prototype._getLeftTop = function _getLeftTop(element) {
        return {
            left: parseFloat(util_dom.getStyle(element, 'left')) || 0,
            top: parseFloat(util_dom.getStyle(element, 'top')) || 0
        };
    };

    Position.prototype._normalizeElement = function _normalizeElement(element, ignoreElementOffset) {
        var _this = this;

        var result = {
            element: element,
            x: 0,
            y: 0
        },
            isViewport = element === VIEWPORT,
            docElement = document.documentElement;

        result.offset = function (ignoreScroll) {
            // 这里是关键，第二个参数的含义以ing该是：是否为 fixed 布局，并且像 dialog 一样，不跟随 trigger 元素
            if (ignoreElementOffset) {
                return {
                    left: 0,
                    top: 0
                };
            } else if (isViewport) {
                return {
                    left: getPageX(),
                    top: getPageY()
                };
            } else {
                return _this._getElementOffset(element, ignoreScroll);
            }
        };

        result.size = function () {
            if (isViewport) {
                return {
                    width: docElement.clientWidth,
                    height: docElement.clientHeight
                };
            } else {
                return _getSize(element);
            }
        };

        return result;
    };

    // ignoreScroll 在 pin 元素为 fixed 的时候生效，此时需要忽略页面滚动
    // 对 fixed 模式下 subNav 弹层的计算很重要，只有在这种情况下，才同时需要元素的相对位置，又不关心页面滚动


    Position.prototype._getElementOffset = function _getElementOffset(element, ignoreScroll) {
        var rect = element.getBoundingClientRect();
        var docElement = document.documentElement;
        var body = document.body;
        var docClientLeft = docElement.clientLeft || body.clientLeft || 0;
        var docClientTop = docElement.clientTop || body.clientTop || 0;

        return {
            left: rect.left + (ignoreScroll ? 0 : getPageX()) - docClientLeft,
            top: rect.top + (ignoreScroll ? 0 : getPageY()) - docClientTop
        };
    };

    // According to the location of the overflow to calculate the desired positioning


    Position.prototype._getExpectedAlign = function _getExpectedAlign() {
        var align = this.isRtl ? this._replaceAlignDir(this.align, /l|r/g, { l: 'r', r: 'l' }) : this.align;
        var expectedAlign = [align];
        if (this.needAdjust) {
            if (/t|b/g.test(align)) {
                expectedAlign.push(this._replaceAlignDir(align, /t|b/g, { t: 'b', b: 't' }));
            }
            if (/l|r/g.test(align)) {
                expectedAlign.push(this._replaceAlignDir(align, /l|r/g, { l: 'r', r: 'l' }));
            }
            if (/c/g.test(align)) {
                expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, { c: 'l' }));
                expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, { c: 'r' }));
            }
            expectedAlign.push(this._replaceAlignDir(align, /l|r|t|b/g, {
                l: 'r',
                r: 'l',
                t: 'b',
                b: 't'
            }));
        }
        return expectedAlign;
    };

    // Transform align order.


    Position.prototype._replaceAlignDir = function _replaceAlignDir(align, regExp, map) {
        return align.replace(regExp, function (res) {
            return map[res];
        });
    };

    // Are the right sides of the pin and base aligned?


    Position.prototype._isRightAligned = function _isRightAligned(align) {
        var _align$split = align.split(' '),
            pinAlign = _align$split[0],
            baseAlign = _align$split[1];

        return pinAlign[1] === 'r' && pinAlign[1] === baseAlign[1];
    };

    // Are the bottoms of the pin and base aligned?


    Position.prototype._isBottomAligned = function _isBottomAligned(align) {
        var _align$split2 = align.split(' '),
            pinAlign = _align$split2[0],
            baseAlign = _align$split2[1];

        return pinAlign[0] === 'b' && pinAlign[0] === baseAlign[0];
    };

    // Detecting element is in the window， we want to adjust position later.


    Position.prototype._isInViewport = function _isInViewport(element, align) {
        var viewportSize = _getViewportSize(this.container);
        var elementRect = _getElementRect(element, this.container);
        var elementSize = _getSize(element);

        // https://github.com/alibaba-fusion/next/issues/853
        // Equality causes issues in Chrome when pin element is off screen to right or bottom.
        // If it is not supposed to align with the bottom or right, then subtract 1 to use strict less than.
        var viewportWidth = this._isRightAligned(align) ? viewportSize.width : viewportSize.width - 1;
        var viewportHeight = this._isBottomAligned(align) ? viewportSize.height : viewportSize.height - 1;

        // 临时方案，在 select + table 的场景下，不需要关注横向上是否在可视区域内
        // 在 balloon 场景下需要关注
        if (this.autoFit) {
            return elementRect.top >= 0 && elementRect.top + element.offsetHeight <= viewportHeight;
        }

        // Avoid animate problem that use offsetWidth instead of getBoundingClientRect.
        return elementRect.left >= 0 && elementRect.left + elementSize.width <= viewportWidth && elementRect.top >= 0 && elementRect.top + elementSize.height <= viewportHeight;
    };

    Position.prototype._getViewportOffset = function _getViewportOffset(element, align) {
        var viewportSize = _getViewportSize(this.container);
        var elementRect = _getElementRect(element, this.container);
        var elementSize = _getSize(element);

        var viewportWidth = this._isRightAligned(align) ? viewportSize.width : viewportSize.width - 1;
        var viewportHeight = this._isBottomAligned(align) ? viewportSize.height : viewportSize.height - 1;

        return {
            top: elementRect.top,
            right: viewportWidth - (elementRect.left + elementSize.width),
            bottom: viewportHeight - (elementRect.top + elementSize.height),
            left: elementRect.left
        };
    };

    // 在这里做RTL判断 top-left 定位转化为等效的 top-right定位


    Position.prototype._setPinElementPostion = function _setPinElementPostion(pinElement, postion) {
        var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];
        var top = postion.top,
            left = postion.left;

        if (!this.isRtl) {
            util_dom.setStyle(pinElement, {
                left: left + offset[0] + 'px',
                top: top + offset[1] + 'px'
            });
            return;
        }

        // transfer {left,top} equaly to {right,top}
        var pinElementParentOffset = this._getParentOffset(pinElement);

        var _getElementRect2 = _getElementRect(pinElementParentOffset.offsetParent),
            offsetParentWidth = _getElementRect2.width;

        var _getElementRect3 = _getElementRect(pinElement),
            width = _getElementRect3.width;

        var right = offsetParentWidth - (left + width);
        util_dom.setStyle(pinElement, {
            left: 'auto',
            right: right + offset[0] + 'px',
            top: top + offset[1] + 'px'
        });
    };

    return Position;
}(), position__class.VIEWPORT = VIEWPORT, position__class.place = function (props) {
    return new position_Position(props).setPosition();
}, position__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this._calPinOffset = function (align) {
        var offset = [].concat(_this2.offset);

        if (_this2.autoFit && align && _this2.container && _this2.container !== document.body) {
            var baseElementRect = _getElementRect(_this2.baseElement, _this2.container);
            var pinElementRect = _getElementRect(_this2.pinElement, _this2.container);
            var viewportSize = _getViewportSize(_this2.container);
            var pinAlign = align.split(' ')[0];
            var x = pinAlign.charAt(1);
            var y = pinAlign.charAt(0);

            if (pinElementRect.top < 0 || pinElementRect.top + pinElementRect.height > viewportSize.height) {
                offset[1] = -baseElementRect.top - (y === 't' ? baseElementRect.height : 0);
            }
        }
        return offset;
    };

    this._getParentScrollOffset = function (elem) {
        var top = 0;
        var left = 0;

        if (elem && elem.offsetParent && elem.offsetParent !== document.body) {
            if (!isNaN(elem.offsetParent.scrollTop)) {
                top += elem.offsetParent.scrollTop;
            }
            if (!isNaN(elem.offsetParent.scrollLeft)) {
                left += elem.offsetParent.scrollLeft;
            }
        }

        return {
            top: top,
            left: left
        };
    };
}, position__temp);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/position.js




var overlay_position__class, overlay_position__temp;









var position_noop = func.noop,
    position_bindCtx = func.bindCtx;
var position_getStyle = util_dom.getStyle;

var place = position_Position.place;

var overlay_position_Position = (overlay_position__temp = overlay_position__class = function (_Component) {
    inherits_default()(Position, _Component);

    function Position(props) {
        classCallCheck_default()(this, Position);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.observe = function () {
            var contentNode = _this.getContentNode();
            contentNode && _this.resizeObserver.observe(contentNode);
        };

        _this.unobserve = function () {
            _this.resizeObserver.disconnect();
        };

        position_bindCtx(_this, ['handleResize']);

        _this.resizeObserver = new ResizeObserver_es["a" /* default */](_this.handleResize);
        return _this;
    }

    Position.prototype.componentDidMount = function componentDidMount() {
        this.setPosition();

        if (this.props.needListenResize) {
            util_events.on(window, 'resize', this.handleResize);
            this.observe();
        }
    };

    Position.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var props = this.props;


        if ('align' in props && props.align !== prevProps.align || props.shouldUpdatePosition) {
            this.shouldUpdatePosition = true;
        }

        if (this.shouldUpdatePosition) {
            clearTimeout(this.resizeTimeout);

            this.setPosition();
            this.shouldUpdatePosition = false;
        }
    };

    Position.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.props.needListenResize) {
            util_events.off(window, 'resize', this.handleResize);
            this.unobserve();
        }

        clearTimeout(this.resizeTimeout);
    };

    Position.prototype.setPosition = function setPosition() {
        var _props = this.props,
            align = _props.align,
            offset = _props.offset,
            beforePosition = _props.beforePosition,
            onPosition = _props.onPosition,
            needAdjust = _props.needAdjust,
            container = _props.container,
            rtl = _props.rtl,
            pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed,
            autoFit = _props.autoFit;


        beforePosition();

        var contentNode = this.getContentNode();
        var targetNode = this.getTargetNode();

        if (contentNode && targetNode) {
            var resultAlign = place({
                pinElement: contentNode,
                baseElement: targetNode,
                pinFollowBaseElementWhenFixed: pinFollowBaseElementWhenFixed,
                align: align,
                offset: offset,
                autoFit: autoFit,
                container: container,
                needAdjust: needAdjust,
                isRtl: rtl
            });
            var top = position_getStyle(contentNode, 'top');
            var left = position_getStyle(contentNode, 'left');

            onPosition({
                align: resultAlign.split(' '),
                top: top,
                left: left
            }, contentNode);
        }
    };

    Position.prototype.getContentNode = function getContentNode() {
        try {
            return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);
        } catch (err) {
            return null;
        }
    };

    Position.prototype.getTargetNode = function getTargetNode() {
        var target = this.props.target;


        return target === position_Position.VIEWPORT ? position_Position.VIEWPORT : findNode(target, this.props);
    };

    Position.prototype.handleResize = function handleResize() {
        var _this2 = this;

        clearTimeout(this.resizeTimeout);

        this.resizeTimeout = setTimeout(function () {
            _this2.setPosition();
        }, 200);
    };

    Position.prototype.render = function render() {
        return external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].only(this.props.children);
    };

    return Position;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), overlay_position__class.VIEWPORT = position_Position.VIEWPORT, overlay_position__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.node,
    target: _prop_types_15_8_1_prop_types_default.a.any,
    container: _prop_types_15_8_1_prop_types_default.a.any,
    align: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.bool]),
    offset: _prop_types_15_8_1_prop_types_default.a.array,
    beforePosition: _prop_types_15_8_1_prop_types_default.a.func,
    onPosition: _prop_types_15_8_1_prop_types_default.a.func,
    needAdjust: _prop_types_15_8_1_prop_types_default.a.bool,
    autoFit: _prop_types_15_8_1_prop_types_default.a.bool,
    needListenResize: _prop_types_15_8_1_prop_types_default.a.bool,
    shouldUpdatePosition: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    pinFollowBaseElementWhenFixed: _prop_types_15_8_1_prop_types_default.a.bool
}, overlay_position__class.defaultProps = {
    align: 'tl bl',
    offset: [0, 0],
    beforePosition: position_noop,
    onPosition: position_noop,
    needAdjust: true,
    autoFit: false,
    needListenResize: true,
    shouldUpdatePosition: false,
    rtl: false
}, overlay_position__temp);
overlay_position_Position.displayName = 'Position';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/overlay.js





var overlay__class, overlay__temp;












var overlay_saveLastFocusNode = util_focus.saveLastFocusNode,
    overlay_getFocusNodeList = util_focus.getFocusNodeList,
    overlay_backLastFocusNode = util_focus.backLastFocusNode;
var overlay_makeChain = func.makeChain,
    overlay_noop = func.noop,
    overlay_bindCtx = func.bindCtx;


var overlay_getContainerNode = function getContainerNode(props) {
    var targetNode = findNode(props.target);
    return findNode(props.container, targetNode);
};

var overlay_prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
var overlay_getStyleProperty = function getStyleProperty(node, name) {
    var style = window.getComputedStyle(node);
    var ret = '';
    for (var i = 0; i < overlay_prefixes.length; i++) {
        ret = style.getPropertyValue(overlay_prefixes[i] + name);
        if (ret) {
            break;
        }
    }
    return ret;
};

// 存 containerNode 信息
var containerNodeList = [];

/**
 * Overlay
 */
var overlay_Overlay = (overlay__temp = overlay__class = function (_Component) {
    inherits_default()(Overlay, _Component);

    function Overlay(props) {
        classCallCheck_default()(this, Overlay);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.saveContentRef = function (ref) {
            _this.contentRef = ref;
        };

        _this.saveGatewayRef = function (ref) {
            _this.gatewayRef = ref;
        };

        _this.lastAlign = props.align;

        overlay_bindCtx(_this, ['handlePosition', 'handleAnimateEnd', 'handleDocumentKeyDown', 'handleDocumentClick', 'handleMaskClick', 'beforeOpen', 'beforeClose']);

        _this.state = {
            visible: false,
            status: 'none',
            animation: _this.getAnimation(props),
            willOpen: false,
            willClose: false
        };

        _this.timeoutMap = {};
        return _this;
    }

    Overlay.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var willOpen = !prevState.visible && nextProps.visible;
        var willClose = prevState.visible && !nextProps.visible;

        var nextState = {
            willOpen: willOpen,
            willClose: willClose
        };

        if (willOpen) {
            nextProps.beforeOpen && nextProps.beforeOpen();
        } else if (willClose) {
            nextProps.beforeClose && nextProps.beforeClose();
        }

        if (nextProps.animation || nextProps.animation === false) {
            nextState.animation = nextProps.animation;
        }

        if (nextProps.animation !== false && support.animation) {
            if (willOpen) {
                nextState.visible = true;
                nextState.status = 'mounting';
            } else if (willClose) {
                // can not set visible=false directly, otherwise animation not work without dom
                // nextState.visible = false;
                nextState.status = 'leaving';
            }
        } else if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
            nextState.visible = nextProps.visible;
        }

        return nextState;
    };

    Overlay.prototype.componentDidMount = function componentDidMount() {
        if (this.state.willOpen) {
            this.beforeOpen();
        } else if (this.state.willClose) {
            this.beforeClose();
        }

        if (this.state.visible) {
            this.doAnimation(true, false);
            this._isMounted = true;
        }

        this.addDocumentEvents();

        manager.addOverlay(this);
    };

    Overlay.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (this.state.willOpen) {
            this.beforeOpen();
        } else if (this.state.willClose) {
            this.beforeClose();
        }

        if (!this._isMounted && this.props.visible) {
            this._isMounted = true;
        }

        if (this.props.align !== prevProps.align) {
            this.lastAlign = prevProps.align;
        }

        var willOpen = !prevProps.visible && this.props.visible;
        var willClose = prevProps.visible && !this.props.visible;

        (willOpen || willClose) && this.doAnimation(willOpen, willClose);
    };

    Overlay.prototype.componentWillUnmount = function componentWillUnmount() {
        this._isDestroyed = true;
        this._isMounted = false;
        manager.removeOverlay(this);
        this.removeDocumentEvents();
        if (this.focusTimeout) {
            clearTimeout(this.focusTimeout);
        }
        if (this._animation) {
            this._animation.off();
            this._animation = null;
        }
        this.beforeClose();
    };

    Overlay.prototype.doAnimation = function doAnimation(open, close) {
        var _this2 = this;

        if (this.state.animation && support.animation) {
            if (open) {
                this.onEntering();
            } else if (close) {
                this.onLeaving();
            }
            this.addAnimationEvents();
        } else {
            if (open) {
                // fix https://github.com/alibaba-fusion/next/issues/1901
                setTimeout(function () {
                    _this2.props.onOpen();
                    util_dom.addClass(_this2.getWrapperNode(), 'opened');
                    manager.addOverlay(_this2);
                    _this2.props.afterOpen();
                });
            } else if (close) {
                this.props.onClose();
                util_dom.removeClass(this.getWrapperNode(), 'opened');
                manager.removeOverlay(this);
                this.props.afterClose();
            }
            this.setFocusNode();
        }
    };

    Overlay.prototype.getAnimation = function getAnimation(props) {
        if (props.animation === false) {
            return false;
        }

        if (props.animation) {
            return props.animation;
        }

        return this.getAnimationByAlign(props.align);
    };

    Overlay.prototype.getAnimationByAlign = function getAnimationByAlign(align) {
        switch (align[0]) {
            case 't':
                return {
                    // 为了防止有的用户 js升级了而css没升级，所以把两个动画都保留了。
                    // 动画不会叠加，会替代，顺序根据 src/animate/main.scss 中的样式先后顺序遵循css覆盖原则
                    // fadeInDownSmall fadeOutUpSmall 优先级更高
                    in: 'expandInDown fadeInDownSmall',
                    out: 'expandOutUp fadeOutUpSmall'
                };
            case 'b':
                return {
                    in: 'fadeInUp',
                    out: 'fadeOutDown'
                };
            default:
                return {
                    in: 'expandInDown fadeInDownSmall',
                    out: 'expandOutUp fadeOutUpSmall'
                };
        }
    };

    Overlay.prototype.addAnimationEvents = function addAnimationEvents() {
        var _this3 = this;

        setTimeout(function () {
            var node = _this3.getContentNode();
            if (node) {
                var id = util_guid();

                _this3._animation = util_events.on(node, support.animation.end, _this3.handleAnimateEnd.bind(_this3, id));

                var animationDelay = parseFloat(overlay_getStyleProperty(node, 'animation-delay')) || 0;
                var animationDuration = parseFloat(overlay_getStyleProperty(node, 'animation-duration')) || 0;
                var time = animationDelay + animationDuration;
                if (time) {
                    _this3.timeoutMap[id] = setTimeout(function () {
                        _this3.handleAnimateEnd(id);
                    }, time * 1000 + 200);
                }
            }
        });
    };

    Overlay.prototype.handlePosition = function handlePosition(config) {
        var align = config.align.join(' ');

        if (!('animation' in this.props) && this.props.needAdjust && this.lastAlign !== align) {
            this.setState({
                animation: this.getAnimationByAlign(align)
            });
        }

        var status = this.state.status;

        if (status === 'mounting') {
            this.setState({
                status: 'entering'
            });
        }

        this.lastAlign = align;
    };

    Overlay.prototype.handleAnimateEnd = function handleAnimateEnd(id) {
        if (this.timeoutMap[id]) {
            clearTimeout(this.timeoutMap[id]);
        }
        delete this.timeoutMap[id];

        if (this._animation) {
            this._animation.off();
            this._animation = null;
        }

        if (!this._isMounted) {
            return;
        }

        if (this.state.status === 'leaving') {
            this.setState({
                visible: false,
                status: 'none'
            });

            this.onLeaved();
            // dom结构首次出现 触发的是entering
            // dom结构已经存在（例如设置了cache），触发的是mounting
        } else if (this.state.status === 'entering' || this.state.status === 'mounting') {
            this.setState({
                status: 'none'
            });

            this.onEntered();
        }
    };

    Overlay.prototype.onEntering = function onEntering() {
        var _this4 = this;

        if (this._isDestroyed) {
            return;
        }

        // make sure overlay.ref has been called (eg: menu/popup-item called overlay.getInstance().getContentNode().)
        setTimeout(function () {
            var wrapperNode = _this4.getWrapperNode();
            util_dom.addClass(wrapperNode, 'opened');
            _this4.props.onOpen();
        });
    };

    Overlay.prototype.onLeaving = function onLeaving() {
        var wrapperNode = this.getWrapperNode();
        util_dom.removeClass(wrapperNode, 'opened');
        this.props.onClose();
    };

    Overlay.prototype.onEntered = function onEntered() {
        manager.addOverlay(this);
        this.setFocusNode();
        this.props.afterOpen();
    };

    Overlay.prototype.onLeaved = function onLeaved() {
        manager.removeOverlay(this);
        this.setFocusNode();
        this.props.afterClose();
    };

    Overlay.prototype.beforeOpen = function beforeOpen() {
        if (this.props.disableScroll) {
            var containerNode = overlay_getContainerNode(this.props) || document.body;
            var _containerNode$style = containerNode.style,
                overflow = _containerNode$style.overflow,
                paddingRight = _containerNode$style.paddingRight;


            var cnInfo = containerNodeList.find(function (m) {
                return m.containerNode === containerNode;
            }) || {
                containerNode: containerNode,
                count: 0
            };

            /**
             * container 节点初始状态已经是 overflow=hidden 则忽略
             * See {@link https://codesandbox.io/s/next-overlay-overflow-2-fulpq?file=/src/App.js}
             */
            if (cnInfo.count === 0 && overflow !== 'hidden') {
                var style = {
                    overflow: 'hidden'
                };

                cnInfo.overflow = overflow;

                if (util_dom.hasScroll(containerNode)) {
                    cnInfo.paddingRight = paddingRight;
                    style.paddingRight = util_dom.getStyle(containerNode, 'paddingRight') + util_dom.scrollbar().width + 'px';
                }

                util_dom.setStyle(containerNode, style);
                containerNodeList.push(cnInfo);
                cnInfo.count++;
            } else if (cnInfo.count) {
                cnInfo.count++;
            }

            this._containerNode = containerNode;
        }
    };

    Overlay.prototype.beforeClose = function beforeClose() {
        var _this5 = this;

        if (this.props.disableScroll) {
            var idx = containerNodeList.findIndex(function (cn) {
                return cn.containerNode === _this5._containerNode;
            });

            if (idx !== -1) {
                var cnInfo = containerNodeList[idx];
                var overflow = cnInfo.overflow,
                    paddingRight = cnInfo.paddingRight;

                // 最后一个 overlay 的时候再将样式重置回去
                // 此时 overflow 应该值在 beforeOpen 中设置的 hidden

                if (cnInfo.count === 1 && this._containerNode && this._containerNode.style.overflow === 'hidden') {
                    var style = {
                        overflow: overflow
                    };

                    if (paddingRight !== undefined) {
                        style.paddingRight = paddingRight;
                    }

                    util_dom.setStyle(this._containerNode, style);
                }

                cnInfo.count--;

                if (cnInfo.count === 0) {
                    containerNodeList.splice(idx, 1);
                }
            }
            this._containerNode = undefined;
        }
    };

    Overlay.prototype.setFocusNode = function setFocusNode() {
        var _this6 = this;

        if (!this.props.autoFocus) {
            return;
        }

        if (this.state.visible && !this._hasFocused) {
            overlay_saveLastFocusNode();
            // 这个时候很可能上一个弹层的关闭事件还未触发，导致焦点已经回到触发的元素
            // 这里延时处理一下，延时的时间为 document.click 捕获触发的延时时间
            this.focusTimeout = setTimeout(function () {
                var node = _this6.getContentNode();
                if (node) {
                    var focusNodeList = overlay_getFocusNodeList(node);
                    if (focusNodeList.length) {
                        focusNodeList[0].focus();
                    }
                    _this6._hasFocused = true;
                }
            }, 100);
        } else if (!this.state.visible && this._hasFocused) {
            overlay_backLastFocusNode();
            this._hasFocused = false;
        }
    };

    Overlay.prototype.getContent = function getContent() {
        return this.contentRef;
    };

    Overlay.prototype.getContentNode = function getContentNode() {
        try {
            return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.contentRef);
        } catch (err) {
            return null;
        }
    };

    Overlay.prototype.getWrapperNode = function getWrapperNode() {
        return this.gatewayRef ? this.gatewayRef.getChildNode() : null;
    };

    /**
     * document global event
     */


    Overlay.prototype.addDocumentEvents = function addDocumentEvents() {
        var useCapture = this.props.useCapture;
        // use capture phase listener to be compatible with react17
        // https://reactjs.org/blog/2020/08/10/react-v17-rc.html#fixing-potential-issues

        if (this.props.canCloseByEsc) {
            this._keydownEvents = util_events.on(document, 'keydown', this.handleDocumentKeyDown, useCapture);
        }

        if (this.props.canCloseByOutSideClick) {
            this._clickEvents = util_events.on(document, 'click', this.handleDocumentClick, useCapture);
            this._touchEvents = util_events.on(document, 'touchend', this.handleDocumentClick, useCapture);
        }
    };

    Overlay.prototype.removeDocumentEvents = function removeDocumentEvents() {
        var _this7 = this;

        ['_keydownEvents', '_clickEvents', '_touchEvents'].forEach(function (event) {
            if (_this7[event]) {
                _this7[event].off();
                _this7[event] = null;
            }
        });
    };

    Overlay.prototype.handleDocumentKeyDown = function handleDocumentKeyDown(e) {
        if (this.state.visible && e.keyCode === KEYCODE.ESC && manager.isCurrentOverlay(this)) {
            this.props.onRequestClose('keyboard', e);
        }
    };

    Overlay.prototype.isInShadowDOM = function isInShadowDOM(node) {
        return node.getRootNode ? node.getRootNode().nodeType === 11 : false;
    };

    Overlay.prototype.getEventPath = function getEventPath(event) {
        // 参考 https://github.com/spring-media/react-shadow-dom-retarget-events/blob/master/index.js#L29
        return event.path || event.composedPath && event.composedPath() || this.composedPath(event.target);
    };

    Overlay.prototype.composedPath = function composedPath(el) {
        var path = [];
        while (el) {
            path.push(el);
            if (el.tagName === 'HTML') {
                path.push(document);
                path.push(window);
                return path;
            }
            el = el.parentElement;
        }
    };

    Overlay.prototype.matchInShadowDOM = function matchInShadowDOM(node, e) {
        if (this.isInShadowDOM(node)) {
            // Shadow DOM 环境中，触发点击事件，监听 document click 事件获得的事件源
            // 并非实际触发的 dom 节点，而是 Shadow DOM 的 host 节点
            // 进而会导致如 Select 组件的下拉弹层打开后立即关闭等问题
            // 因此额外增加 node 和 eventPath 的判断
            var eventPath = this.getEventPath(e);
            return node === eventPath[0] || node.contains(eventPath[0]);
        }

        return false;
    };

    Overlay.prototype.handleDocumentClick = function handleDocumentClick(e) {
        var _this8 = this;

        if (this.state.visible) {
            var safeNode = this.props.safeNode;

            var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
            safeNodes.unshift(function () {
                return _this8.getWrapperNode();
            });

            for (var i = 0; i < safeNodes.length; i++) {
                var node = findNode(safeNodes[i], this.props);
                // HACK: 如果触发点击的节点是弹层内部的节点，并且在被点击后立即销毁，那么此时无法使用 node.contains(e.target)
                // 来判断此时点击的节点是否是弹层内部的节点，额外判断
                if (node && (node === e.target || node.contains(e.target) || this.matchInShadowDOM(node, e) || e.target !== document && !document.documentElement.contains(e.target))) {
                    return;
                }
            }

            this.props.onRequestClose('docClick', e);
        }
    };

    Overlay.prototype.handleMaskClick = function handleMaskClick(e) {
        if (e.currentTarget === e.target && this.props.canCloseByMask) {
            this.props.onRequestClose('maskClick', e);
        }
    };

    // 兼容过去的用法: this.popupRef.getInstance().overlay.getInstance().getContentNode()
    Overlay.prototype.getInstance = function getInstance() {
        return this;
    };

    Overlay.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            style = _props.style,
            propChildren = _props.children,
            target = _props.target,
            align = _props.align,
            offset = _props.offset,
            container = _props.container,
            hasMask = _props.hasMask,
            needAdjust = _props.needAdjust,
            autoFit = _props.autoFit,
            beforePosition = _props.beforePosition,
            onPosition = _props.onPosition,
            wrapperStyle = _props.wrapperStyle,
            rtl = _props.rtl,
            propShouldUpdatePosition = _props.shouldUpdatePosition,
            cache = _props.cache,
            wrapperClassName = _props.wrapperClassName,
            onMaskMouseEnter = _props.onMaskMouseEnter,
            onMaskMouseLeave = _props.onMaskMouseLeave,
            maskClass = _props.maskClass,
            isChildrenInMask = _props.isChildrenInMask,
            pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed;
        var _state = this.state,
            stateVisible = _state.visible,
            status = _state.status,
            animation = _state.animation;


        var children = stateVisible || cache && this._isMounted ? propChildren : null;
        if (children) {
            var _classnames, _classnames2;

            var child = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].only(children);
            // if chlild is a functional component wrap in a component to allow a ref to be set
            if (typeof child.type === 'function' && !(child.type.prototype instanceof external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"])) {
                child = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { role: 'none' },
                    child
                );
            }
            var childClazz = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'overlay-inner'] = true, _classnames[animation.in] = status === 'entering' || status === 'mounting', _classnames[animation.out] = status === 'leaving', _classnames[child.props.className] = !!child.props.className, _classnames[className] = !!className, _classnames));
            if (typeof child.ref === 'string') {
                throw new Error('Can not set ref by string in Overlay, use function instead.');
            }

            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                className: childClazz,
                style: extends_default()({}, child.props.style, style),
                ref: overlay_makeChain(this.saveContentRef, child.ref),
                'aria-hidden': !stateVisible && cache && this._isMounted,
                onClick: overlay_makeChain(this.props.onClick, child.props.onClick),
                onTouchEnd: overlay_makeChain(this.props.onTouchEnd, child.props.onTouchEnd)
            });

            if (align) {
                var shouldUpdatePosition = status === 'leaving' ? false : propShouldUpdatePosition;
                children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_position_Position, {
                    children: children,
                    target: target,
                    align: align,
                    offset: offset,
                    autoFit: autoFit,
                    container: container,
                    needAdjust: needAdjust,
                    pinFollowBaseElementWhenFixed: pinFollowBaseElementWhenFixed,
                    beforePosition: beforePosition,
                    onPosition: overlay_makeChain(this.handlePosition, onPosition),
                    shouldUpdatePosition: shouldUpdatePosition,
                    rtl: rtl
                });
            }

            var wrapperClazz = _classnames_2_3_1_classnames_default()([prefix + 'overlay-wrapper', wrapperClassName]);
            var newWrapperStyle = extends_default()({}, {
                display: stateVisible ? '' : 'none'
            }, wrapperStyle);

            var maskClazz = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'overlay-backdrop'] = true, _classnames2[maskClass] = !!maskClass, _classnames2));

            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: wrapperClazz, style: newWrapperStyle, dir: rtl ? 'rtl' : undefined },
                hasMask ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        className: maskClazz,
                        onClick: this.handleMaskClick,
                        onMouseEnter: onMaskMouseEnter,
                        onMouseLeave: onMaskMouseLeave,
                        dir: rtl ? 'rtl' : undefined
                    },
                    isChildrenInMask && children
                ) : null,
                !isChildrenInMask && children
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(gateway, extends_default()({ container: container, target: target, children: children }, { ref: this.saveGatewayRef }));
    };

    return Overlay;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), overlay__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否显示弹层
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层请求关闭时触发事件的回调函数
     * @param {String} type 弹层关闭的来源
     * @param {Object} e DOM 事件
     */
    onRequestClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层定位的参照元素
     */
    target: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层相对于参照元素的定位, 详见开发指南的[定位部分](#定位)
     */
    align: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量
     * e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px
     */
    offset: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 渲染组件的容器，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点
     */
    container: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否显示遮罩
     */
    hasMask: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否支持 esc 按键关闭弹层
     */
    canCloseByEsc: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 点击弹层外的区域是否关闭弹层，不显示遮罩时生效
     */
    canCloseByOutSideClick: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 点击遮罩区域是否关闭弹层，显示遮罩时生效
     */
    canCloseByMask: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层打开前触发事件的回调函数
     */
    beforeOpen: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层打开时触发事件的回调函数
     */
    onOpen: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层打开后触发事件的回调函数, 如果有动画，则在动画结束后触发
     */
    afterOpen: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层关闭前触发事件的回调函数
     */
    beforeClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层关闭时触发事件的回调函数
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层关闭后触发事件的回调函数, 如果有动画，则在动画结束后触发
     */
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层定位完成前触发的事件
     */
    beforePosition: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层定位完成时触发的事件
     * @param {Object} config 定位的参数
     * @param {Array} config.align 对齐方式，如 ['cc', 'cc']（如果开启 needAdjust，可能和预先设置的 align 不同）
     * @param {Number} config.top 距离视口顶部距离
     * @param {Number} config.left 距离视口左侧距离
     * @param {Object} node 定位参照的容器节点
     */
    onPosition: _prop_types_15_8_1_prop_types_default.a.func,
    shouldUpdatePosition: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层打开时是否让其中的元素自动获取焦点
     */
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    needAdjust: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用页面滚动
     */
    disableScroll: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否在捕获阶段监听，适配 react 17 事件模型变更
     * @version 1.25
     */
    useCapture: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 隐藏时是否保留子节点
     */
    cache: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 安全节点，当点击 document 的时候，如果包含该节点则不会关闭弹层，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点，或者以上值组成的数组
     */
    safeNode: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层的根节点的样式类
     */
    wrapperClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层的根节点的内联样式
     */
    wrapperStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画。 请参考 Animate 组件的文档获取可用的动画名
     * @default { in: 'expandInDown', out: 'expandOutUp' }
     */
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool]),
    onMaskMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onMaskMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    maskClass: _prop_types_15_8_1_prop_types_default.a.string,
    isChildrenInMask: _prop_types_15_8_1_prop_types_default.a.bool,
    // 当 pin 元素（一般是弹层）是 fixed 布局的时候，pin 元素是否要跟随 base 元素（一般是trigger）
    // 举例来说，dialog/drawer 这类组件弹层是不跟随trigger的，而 fixed 布局下的subNav是跟随trigger的
    pinFollowBaseElementWhenFixed: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 开启 v2 版本
     * @version 1.25
     */
    v2: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2] align 的数组形式，不能和 align 同时使用
     * @version 1.25
     */
    points: _prop_types_15_8_1_prop_types_default.a.array
}, overlay__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    visible: false,
    onRequestClose: overlay_noop,
    target: overlay_position_Position.VIEWPORT,
    align: 'tl bl',
    offset: [0, 0],
    hasMask: false,
    canCloseByEsc: true,
    canCloseByOutSideClick: true,
    canCloseByMask: true,
    beforeOpen: overlay_noop,
    onOpen: overlay_noop,
    afterOpen: overlay_noop,
    beforeClose: overlay_noop,
    onClose: overlay_noop,
    afterClose: overlay_noop,
    beforePosition: overlay_noop,
    onPosition: overlay_noop,
    onMaskMouseEnter: overlay_noop,
    onMaskMouseLeave: overlay_noop,
    shouldUpdatePosition: false,
    autoFocus: false,
    needAdjust: true,
    disableScroll: false,
    cache: false,
    isChildrenInMask: false,
    onTouchEnd: function onTouchEnd(event) {
        event.stopPropagation();
    },
    onClick: function onClick(event) {
        return event.stopPropagation();
    },
    maskClass: '',
    useCapture: true
}, overlay__temp);
overlay_Overlay.displayName = 'Overlay';


/* harmony default export */ var overlay_overlay = (Object(react_lifecycles_compat_es["polyfill"])(overlay_Overlay));
// EXTERNAL MODULE: ./node_modules/_@babel_runtime@7.17.7@@babel/runtime/helpers/extends.js
var runtime_helpers_extends = __webpack_require__(33);
var helpers_extends_default = /*#__PURE__*/__webpack_require__.n(runtime_helpers_extends);

// EXTERNAL MODULE: ./node_modules/_@babel_runtime@7.17.7@@babel/runtime/helpers/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(67);
var objectWithoutPropertiesLoose_default = /*#__PURE__*/__webpack_require__.n(objectWithoutPropertiesLoose);

// EXTERNAL MODULE: ./node_modules/_@babel_runtime@7.17.7@@babel/runtime/helpers/inheritsLoose.js
var inheritsLoose = __webpack_require__(131);
var inheritsLoose_default = /*#__PURE__*/__webpack_require__.n(inheritsLoose);

// CONCATENATED MODULE: ./node_modules/_@alifd_overlay@0.2.10@@alifd/overlay/es/utils.js


function useListener(nodeList, eventName, callback, useCapture, condition) {
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (condition) {
      if (!Array.isArray(nodeList)) {
        nodeList = [nodeList];
      }

      nodeList.forEach(function (n) {
        n && n.addEventListener && n.addEventListener(eventName, callback, useCapture || false);
      });
      return function () {
        Array.isArray(nodeList) && nodeList.forEach(function (n) {
          n && n.removeEventListener && n.removeEventListener(eventName, callback, useCapture || false);
        });
      };
    }

    return undefined;
  }, [condition]);
  return;
}
/**
 * 将N个方法合并为一个链式调用的方法
 * @return {Function}     合并后的方法
 *
 * @example
 * func.makeChain(this.handleChange, this.props.onChange);
 */

function utils_makeChain() {
  var _this = this;

  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  if (fns.length === 1) {
    return fns[0];
  }

  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    for (var i = 0, j = fns.length; i < j; i++) {
      if (fns[i] && fns[i].apply) {
        //@ts-ignore
        fns[i].apply(_this, args);
      }
    }
  };
}
function callRef(ref, element) {
  if (!ref) {
    return;
  }

  if (typeof ref === 'string') {
    throw new Error("can not set ref string for " + ref);
  } else if (typeof ref === 'function') {
    ref(element);
  } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {
    ref.current = element;
  }
}
function utils_saveRef(ref) {
  if (!ref) {
    return null;
  }

  return function (element) {
    if (typeof ref === 'string') {
      throw new Error("can not set ref string for " + ref);
    } else if (typeof ref === 'function') {
      ref(element);
    } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {
      ref.current = element;
    }
  };
}
/**
 * 获取 position != static ，用来计算相对位置的容器
 * @param container 
 * @returns 
 */

var getRelativeContainer = function getRelativeContainer(container) {
  if (typeof document === undefined) {
    return container;
  }

  var calcContainer = container;

  while (utils_getStyle(calcContainer, 'position') === 'static') {
    if (!calcContainer || calcContainer === document.documentElement) {
      return document.documentElement;
    }

    calcContainer = calcContainer.parentNode;
  }

  return calcContainer;
};
/**
 * 获取 target 和 container 之间会滚动的元素 (不包含 target、container)
 * 用来监听滚动元素，自动更新弹窗位置
 * @param targetNode 
 * @param container 
 * @returns 
 */

var getOverflowNodes = function getOverflowNodes(targetNode, container) {
  if (typeof document === undefined) {
    return [];
  }

  var overflowNodes = [];
  var calcContainer = targetNode;

  while (true) {
    // 忽略 body/documentElement, 不算额外滚动元素
    if (!calcContainer || calcContainer === container || calcContainer === document.body || calcContainer === document.documentElement) {
      break;
    }

    var overflow = utils_getStyle(calcContainer, 'overflow');

    if (overflow && overflow.match(/auto|scroll/)) {
      var _calcContainer = calcContainer,
          clientWidth = _calcContainer.clientWidth,
          clientHeight = _calcContainer.clientHeight,
          scrollWidth = _calcContainer.scrollWidth,
          scrollHeight = _calcContainer.scrollHeight;

      if (clientHeight !== scrollHeight || clientWidth !== scrollWidth) {
        overflowNodes.push(calcContainer);
      }
    }

    calcContainer = calcContainer.parentNode;
  }

  return overflowNodes;
};
/**
 * 获取可视区域，用来计算弹窗应该相对哪个节点做上下左右的位置变化。
 * @param container 
 * @returns 
 */

function getViewPort(container) {
  var calcContainer = container;

  while (calcContainer) {
    var overflow = utils_getStyle(calcContainer, 'overflow');

    if (overflow !== null && overflow !== void 0 && overflow.match(/auto|scroll|hidden/)) {
      return calcContainer;
    }

    calcContainer = calcContainer.parentNode;
  }

  return document.documentElement;
}
function utils_getStyle(elt, name) {
  if (!elt || elt.nodeType !== 1) {
    return null;
  }

  var style = window.getComputedStyle(elt, null);
  return style.getPropertyValue(name);
}
var utils_PIXEL_PATTERN = /margin|padding|width|height|max|min|offset|size|top|left/i;
function utils_setStyle(node, name, value) {
  if (!node) {
    return;
  }

  if (typeof name === 'string') {
    if (typeof value === 'number' && utils_PIXEL_PATTERN.test(name)) {
      value = value + "px";
    } //@ts-ignore


    node.style[name] = value;
  } else if (typeof name === 'object' && arguments.length === 2) {
    //@ts-ignore
    Object.keys(name).forEach(function (key) {
      return utils_setStyle(node, key, name[key]);
    });
  }
} // 默认首次调用是立刻执行

function throttle(func, wait) {
  var previous = -wait;
  return function () {
    var now = Date.now();
    var args = arguments;

    if (now - previous > wait) {
      //@ts-ignore
      func.apply(this, args);
      previous = now;
    }
  };
}
function debounce(func, wait) {
  var _arguments = arguments,
      _this2 = this;

  var timeoutID;
  return function () {
    var args = _arguments;
    clearTimeout(timeoutID);
    timeoutID = setTimeout(function () {
      //@ts-ignore
      func.apply(_this2, args);
    }, wait);
  };
}
/**
 * 元素相对于可视区的 left/top
 * @param node 
 * @returns 
 */

function getViewTopLeft(node) {
  /**
   * document.body 向下滚动后 scrollTop 一直为0，同时 top=-xx 为负数，相当于本身是没有滚动条的，这个逻辑是正确的。
   * document.documentElement 向下滚动后 scrollTop/top 都在变化，会影响计算逻辑，所以这里写死 0
   */
  if (node === document.documentElement) {
    return {
      top: 0,
      left: 0
    };
  }

  var _node$getBoundingClie = node.getBoundingClientRect(),
      left = _node$getBoundingClie.left,
      top = _node$getBoundingClie.top;

  return {
    top: top,
    left: left
  };
}
/**
 * get element size
 * offsetWidth/offsetHeight 更容易获取真实大小，不会受到动画影响优先使用。
 * @param       {Element} element
 * @return      {Object}
 */

function getWidthHeight(element) {
  // element like `svg` do not have offsetWidth and offsetHeight prop
  // then getBoundingClientRect
  if ('offsetWidth' in element && 'offsetHeight' in element) {
    return {
      width: element.offsetWidth,
      height: element.offsetHeight
    };
  } else {
    var _element$getBoundingC = element.getBoundingClientRect(),
        width = _element$getBoundingC.width,
        height = _element$getBoundingC.height;

    return {
      width: width,
      height: height
    };
  }
}
/**
 * 获取默认的滚动条大小
 * @return {Number} width
 */

function getScrollbarWidth() {
  var scrollDiv = document.createElement('div');
  scrollDiv.className += 'just-to-get-scrollbar-size';
  utils_setStyle(scrollDiv, {
    position: 'absolute',
    width: '100px',
    height: '100px',
    overflow: 'scroll',
    top: '-9999px'
  });
  document.body && document.body.appendChild(scrollDiv);
  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  document.body.removeChild(scrollDiv);
  return scrollbarWidth;
}
/**
 * 元素是否可见
 * @private
 * @param   {Element}  node
 * @return  {Boolean}
 */

function utils__isVisible(node) {
  while (node) {
    if (node === document.body || node === document.documentElement) {
      break;
    }

    if (node.style.display === 'none' || node.style.visibility === 'hidden') {
      return false;
    }

    node = node.parentNode;
  }

  return true;
}
/**
 * 元素是否可以获取焦点
 * @private
 * @param   {Element}  node
 * @return  {Boolean}
 */


function utils__isFocusable(node) {
  var nodeName = node.nodeName.toLowerCase();
  var tabIndex = parseInt(node.getAttribute('tabindex'), 10);
  var hasTabIndex = !isNaN(tabIndex) && tabIndex > -1;

  if (utils__isVisible(node)) {
    if (nodeName === 'input') {
      //@ts-ignore
      return !node.disabled && node.type !== 'hidden';
    } else if (['select', 'textarea', 'button'].indexOf(nodeName) > -1) {
      //@ts-ignore
      return !node.disabled;
    } else if (nodeName === 'a') {
      return node.getAttribute('href') || hasTabIndex;
    } else {
      return hasTabIndex;
    }
  }

  return false;
}
/**
 * 列出能获取焦点的子节点
 * @param  {Element} node 容器节点
 * @return {Array<Element>}
 */


function utils_getFocusNodeList(node) {
  var res = [];
  var nodeList = node.querySelectorAll('*');
  nodeList.forEach(function (item) {
    if (utils__isFocusable(item)) {
      var method = item.getAttribute('data-auto-focus') ? 'unshift' : 'push';
      res[method](item);
    }
  });

  if (utils__isFocusable(node)) {
    res.unshift(node);
  }

  return res;
}
function getHTMLElement(node) {
  if (node) {
    if (node.nodeType) {
      if (node.nodeType === 1) {
        return node;
      } else {
        return document.body;
      }
    } else if (node === window) {
      return document.body;
    } else {
      return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(node);
    }
  }

  return node;
}
function utils_getTargetNode(target) {
  if (typeof target === 'function') {
    return target();
  } else if (typeof target === 'string') {
    return document.getElementById(target);
  } // 兼容 target = HTMLElement


  return target;
}
function isSameObject(object1, object2) {
  if (!object1 || !object2) {
    return false;
  }

  var o1keys = Object.keys(object1);
  var o2keys = Object.keys(object2);
  if (o2keys.length !== o1keys.length) return false;

  for (var i = 0; i <= o1keys.length - 1; i++) {
    var _key3 = o1keys[i];
    if (!o2keys.includes(_key3)) return false; //@ts-ignore

    if (object2[_key3] !== object1[_key3]) return false;
  }

  return true;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_overlay@0.2.10@@alifd/overlay/es/placement.js

;
var placementMap = {
  tl: ['bl', 'tl'],
  t: ['bc', 'tc'],
  tr: ['br', 'tr'],
  lt: ['tr', 'tl'],
  l: ['cr', 'cl'],
  lb: ['br', 'bl'],
  bl: ['tl', 'bl'],
  b: ['tc', 'bc'],
  br: ['tr', 'br'],
  rt: ['tl', 'tr'],
  r: ['cl', 'cr'],
  rb: ['bl', 'br']
};

function getXY(p, staticInfo) {
  var targetInfo = staticInfo.targetInfo,
      containerInfo = staticInfo.containerInfo,
      overlayInfo = staticInfo.overlayInfo,
      opoints = staticInfo.points,
      placementOffset = staticInfo.placementOffset,
      offset = staticInfo.offset,
      rtl = staticInfo.rtl;
  var basex = targetInfo.left - containerInfo.left + containerInfo.scrollLeft;
  var basey = targetInfo.top - containerInfo.top + containerInfo.scrollTop;

  function setPointX(point, positive, width) {
    if (positive === void 0) {
      positive = true;
    }

    var plus = positive ? 1 : -1;

    switch (point) {
      case 'l':
        basex += 0;
        break;

      case 'c':
        basex += plus * width / 2;
        break;

      case 'r':
        basex += plus * width;
        break;
    }
  }

  function setPointY(point, positive, height) {
    if (positive === void 0) {
      positive = true;
    }

    var plus = positive ? 1 : -1;

    switch (point) {
      case 't':
        basey += 0;
        break;

      case 'c':
        basey += plus * height / 2;
        break;

      case 'b':
        basey += plus * height;
        break;
    }
  }

  var points = [].concat(opoints);

  if (p && p in placementMap) {
    points = placementMap[p];
  } // rtl 左右对调


  if (rtl) {
    if (points[0].match(/l/)) {
      points[0] = points[0].replace('l', 'r');
    } else if (points[0].match(/r/)) {
      points[0] = points[0].replace('r', 'l');
    }

    if (points[1].match(/l/)) {
      points[1] = points[1].replace('l', 'r');
    } else if (points[1].match(/r/)) {
      points[1] = points[1].replace('r', 'l');
    }
  } // 目标元素


  setPointY(points[1][0], true, targetInfo.height);
  setPointX(points[1][1], true, targetInfo.width);
  setPointY(points[0][0], false, overlayInfo.height);
  setPointX(points[0][1], false, overlayInfo.width);

  if (placementOffset && p.length >= 1) {
    switch (p[0]) {
      case 't':
        basey -= placementOffset;
        break;

      case 'b':
        basey += placementOffset;
        break;

      case 'l':
        basex -= placementOffset;
        break;

      case 'r':
        basex += placementOffset;
        break;
    }
  }

  return {
    points: points,
    left: basex + offset[0],
    top: basey + offset[1]
  };
}

function shouldResizePlacement(l, t, viewport, staticInfo) {
  var container = staticInfo.container,
      containerInfo = staticInfo.containerInfo,
      overlayInfo = staticInfo.overlayInfo;

  if (viewport !== container) {
    // 说明 container 不具备滚动属性
    var _getViewTopLeft = getViewTopLeft(viewport),
        vleft = _getViewTopLeft.left,
        vtop = _getViewTopLeft.top;

    var vwidth = viewport.scrollWidth,
        vheight = viewport.scrollHeight,
        vscrollTop = viewport.scrollTop,
        vscrollLeft = viewport.scrollLeft;
    var nt = t + containerInfo.top - vtop + vscrollTop;
    var nl = l + containerInfo.left - vleft + vscrollLeft;
    return nt < 0 || nl < 0 || nt + overlayInfo.height > vheight || nl + overlayInfo.width > vwidth;
  }

  return t < 0 || l < 0 || t + overlayInfo.height > containerInfo.height || l + overlayInfo.width > containerInfo.width;
}

function getNewPlacement(l, t, p, staticInfo) {
  var overlayInfo = staticInfo.overlayInfo,
      containerInfo = staticInfo.containerInfo;
  var np = p.split('');

  if (np.length === 1) {
    np.push('');
  } // 区域不够


  if (t < 0) {
    // [上边 => 下边, 底部对齐 => 顶部对齐]
    np = [np[0].replace('t', 'b'), np[1].replace('b', 't')];
  } // 区域不够


  if (l < 0) {
    // [左边 => 右边, 右对齐 => 左对齐]
    np = [np[0].replace('l', 'r'), np[1].replace('r', 'l')];
  } // 超出区域


  if (t + overlayInfo.height > containerInfo.height) {
    // [下边 => 上边, 顶部对齐 => 底部对齐]
    np = [np[0].replace('b', 't'), np[1].replace('t', 'b')];
  } // 超出区域


  if (l + overlayInfo.width > containerInfo.width) {
    // [右边 => 左边, 左对齐 => 右对齐]
    np = [np[0].replace('r', 'l'), np[1].replace('l', 'r')];
  }

  return np.join('');
}

function ajustLeftAndTop(l, t, staticInfo) {
  var overlayInfo = staticInfo.overlayInfo,
      containerInfo = staticInfo.containerInfo;

  if (t < 0) {
    t = 0;
  }

  if (l < 0) {
    l = 0;
  }

  if (t + overlayInfo.height > containerInfo.height) {
    t = containerInfo.height - overlayInfo.height;
  }

  if (l + overlayInfo.width > containerInfo.width) {
    l = containerInfo.width - overlayInfo.width;
  }

  return {
    left: l,
    top: t
  };
}
/**
 * 计算相对于 container 的偏移位置
 * @param config 
 * @returns 
 */


function getPlacements(config) {
  var target = config.target,
      overlay = config.overlay,
      container = config.container,
      scrollNode = config.scrollNode,
      oplacement = config.placement,
      _config$placementOffs = config.placementOffset,
      placementOffset = _config$placementOffs === void 0 ? 0 : _config$placementOffs,
      _config$points = config.points,
      opoints = _config$points === void 0 ? ['tl', 'bl'] : _config$points,
      _config$offset = config.offset,
      offset = _config$offset === void 0 ? [0, 0] : _config$offset,
      _config$position = config.position,
      position = _config$position === void 0 ? 'absolute' : _config$position,
      beforePosition = config.beforePosition,
      _config$autoAdjust = config.autoAdjust,
      autoAdjust = _config$autoAdjust === void 0 ? true : _config$autoAdjust,
      _config$autoHideScrol = config.autoHideScrollOverflow,
      autoHideScrollOverflow = _config$autoHideScrol === void 0 ? true : _config$autoHideScrol,
      rtl = config.rtl;
  var placement = oplacement;
  /**
   * 可视窗口是浏览器给用户展示的窗口
   * getBoundingClientRect(): top/left 是相对 viewport 
   * node: offsetTop/offsetarget.Left 是相对 parent 元素的
   * 
   * top: 元素上边  距离可视窗口 上边框的距离
   * left: 元素左边 距离可视窗口 左边框的距离
   * 
   * scrollTop: 容器上下滚动距离
   * scrollLeft: 容器左右滚动距离
   */

  var _getWidthHeight = getWidthHeight(overlay),
      owidth = _getWidthHeight.width,
      oheight = _getWidthHeight.height;

  if (position === 'fixed') {
    var _result = {
      config: {
        placement: undefined,
        points: undefined
      },
      style: {
        position: position,
        left: offset[0],
        top: offset[1]
      }
    };

    if (beforePosition && typeof beforePosition) {
      return beforePosition(_result, {
        overlay: {
          node: overlay,
          width: owidth,
          height: oheight
        }
      });
    }

    return _result;
  }

  var _target$getBoundingCl = target.getBoundingClientRect(),
      twidth = _target$getBoundingCl.width,
      theight = _target$getBoundingCl.height,
      tleft = _target$getBoundingCl.left,
      ttop = _target$getBoundingCl.top;

  var _getViewTopLeft2 = getViewTopLeft(container),
      cleft = _getViewTopLeft2.left,
      ctop = _getViewTopLeft2.top;

  var cwidth = container.scrollWidth,
      cheight = container.scrollHeight,
      cscrollTop = container.scrollTop,
      cscrollLeft = container.scrollLeft;
  var staticInfo = {
    targetInfo: {
      width: twidth,
      height: theight,
      left: tleft,
      top: ttop
    },
    containerInfo: {
      left: cleft,
      top: ctop,
      width: cwidth,
      height: cheight,
      scrollTop: cscrollTop,
      scrollLeft: cscrollLeft
    },
    overlayInfo: {
      width: owidth,
      height: oheight
    },
    points: opoints,
    placementOffset: placementOffset,
    offset: offset,
    container: container,
    rtl: rtl
  }; // step1: 根据 placement 计算位置

  var _getXY = getXY(placement, staticInfo),
      left = _getXY.left,
      top = _getXY.top,
      points = _getXY.points; // 获取可视区域，来计算容器相对位置


  var viewport = getViewPort(container); // step2: 根据 viewport（挂载容器不一定是可视区, eg: 挂载在父节点，但是弹窗超出父节点）重新计算位置. 根据可视区域优化位置
  // 位置动态优化思路见 https://github.com/alibaba-fusion/overlay/issues/2

  if (autoAdjust && placement && shouldResizePlacement(left, top, viewport, staticInfo)) {
    var nplacement = getNewPlacement(left, top, placement, staticInfo); // step2: 空间不够，替换位置重新计算位置

    if (placement !== nplacement) {
      var _getXY2 = getXY(nplacement, staticInfo),
          _nleft = _getXY2.left,
          _ntop = _getXY2.top;

      if (shouldResizePlacement(_nleft, _ntop, viewport, staticInfo)) {
        var nnplacement = getNewPlacement(_nleft, _ntop, nplacement, staticInfo); // step3: 空间依然不够，说明xy轴至少有一个方向是怎么更换位置都不够的。停止计算开始补偿逻辑

        if (nplacement !== nnplacement) {
          var _getXY3 = getXY(nnplacement, staticInfo),
              nnleft = _getXY3.left,
              nntop = _getXY3.top;

          var _ajustLeftAndTop = ajustLeftAndTop(nnleft, nntop, staticInfo),
              nnnleft = _ajustLeftAndTop.left,
              nnntop = _ajustLeftAndTop.top;

          placement = nnplacement;
          left = nnnleft;
          top = nnntop;
        } else {
          placement = nplacement;
          left = _nleft;
          top = _ntop;
        }
      } else {
        placement = nplacement;
        left = _nleft;
        top = _ntop;
      }
    }

    var _ajustLeftAndTop2 = ajustLeftAndTop(left, top, staticInfo),
        nleft = _ajustLeftAndTop2.left,
        ntop = _ajustLeftAndTop2.top;

    left = nleft;
    top = ntop;
  }

  var result = {
    config: {
      placement: placement,
      points: points
    },
    style: {
      position: position,
      left: Math.round(left),
      top: Math.round(top)
    }
  };
  /**
   * step3: 滚动隐藏弹窗逻辑。避免出现 target 已经滚动消失，弹层飘在页面最上方的情况。详细见 https://github.com/alibaba-fusion/overlay/issues/3
   * 触发条件: target 和 document.body 之间存在 overflow 滚动元素， target 进入不可见区域
   */

  if (autoHideScrollOverflow && placement && scrollNode !== null && scrollNode !== void 0 && scrollNode.length) {
    // 滚动改成 transform 提高性能, 但是有动效问题
    // result.style.transform = `translate3d(${result.style.left}px, ${result.style.top}px, 0px)`;
    // result.style.left = 0;
    // result.style.top = 0;
    scrollNode.forEach(function (node) {
      var _node$getBoundingClie = node.getBoundingClientRect(),
          top = _node$getBoundingClie.top,
          left = _node$getBoundingClie.left,
          width = _node$getBoundingClie.width,
          height = _node$getBoundingClie.height;

      if (ttop + theight < top || ttop > top + height || tleft + twidth < left || tleft > left + width) {
        result.style.display = 'none';
      } else {
        result.style.display = '';
      }
    });
  }

  if (beforePosition && typeof beforePosition) {
    return beforePosition(result, {
      target: {
        node: target,
        width: twidth,
        height: theight,
        left: tleft,
        top: ttop
      },
      overlay: {
        node: overlay,
        width: owidth,
        height: oheight
      }
    });
  }

  return result;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_overlay@0.2.10@@alifd/overlay/es/overlay-context.js

var OverlayContext = /*#__PURE__*/Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["createContext"])({
  setVisibleOverlayToParent: function setVisibleOverlayToParent() {}
});
/* harmony default export */ var overlay_context = (OverlayContext);
// CONCATENATED MODULE: ./node_modules/_@alifd_overlay@0.2.10@@alifd/overlay/es/overlay.js



var _excluded = ["target", "children", "wrapperClassName", "maskClassName", "maskStyle", "hasMask", "canCloseByMask", "maskRender", "points", "offset", "fixed", "visible", "onRequestClose", "onOpen", "onClose", "container", "placement", "placementOffset", "disableScroll", "canCloseByOutSideClick", "canCloseByEsc", "safeNode", "beforePosition", "onPosition", "cache", "autoAdjust", "autoFocus", "isAnimationEnd", "rtl", "wrapperStyle"],
    _excluded2 = ["setVisibleOverlayToParent"];

var overlay__this = this;

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }









var overlay_isScrollDisplay = function isScrollDisplay(element) {
  try {
    var scrollbarStyle = window.getComputedStyle(element, '::-webkit-scrollbar');
    return !scrollbarStyle || scrollbarStyle.getPropertyValue('display') !== 'none';
  } catch (e) {// ignore error for firefox
  }

  return true;
};

var overlay_hasScroll = function hasScroll(containerNode) {
  var overflow = utils_getStyle(containerNode, 'overflow');

  if (overflow === 'hidden') {
    return false;
  }

  var parentNode = containerNode.parentNode;
  return parentNode && parentNode.scrollHeight > parentNode.clientHeight && getScrollbarWidth() > 0 && overlay_isScrollDisplay(parentNode) && overlay_isScrollDisplay(containerNode);
};
/**
 * 传入的组件可能是没有 forwardRef 包裹的 Functional Component, 会导致取不到 ref
 */


var overlay_RefWrapper = /*#__PURE__*/function (_React$Component) {
  inheritsLoose_default()(RefWrapper, _React$Component);

  function RefWrapper() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = RefWrapper.prototype;

  _proto.render = function render() {
    return this.props.children;
  };

  return RefWrapper;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component);
var es_overlay_Overlay = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.forwardRef(function (props, ref) {
  var _overflowRef$current;

  var body = function body() {
    return document.body;
  };

  var target = props.target,
      children = props.children,
      wrapperClassName = props.wrapperClassName,
      maskClassName = props.maskClassName,
      maskStyle = props.maskStyle,
      hasMask = props.hasMask,
      _props$canCloseByMask = props.canCloseByMask,
      canCloseByMask = _props$canCloseByMask === void 0 ? true : _props$canCloseByMask,
      maskRender = props.maskRender,
      points = props.points,
      offset = props.offset,
      fixed = props.fixed,
      visible = props.visible,
      _props$onRequestClose = props.onRequestClose,
      onRequestClose = _props$onRequestClose === void 0 ? function () {} : _props$onRequestClose,
      onOpen = props.onOpen,
      onClose = props.onClose,
      _props$container = props.container,
      popupContainer = _props$container === void 0 ? body : _props$container,
      placement = props.placement,
      placementOffset = props.placementOffset,
      _props$disableScroll = props.disableScroll,
      disableScroll = _props$disableScroll === void 0 ? false : _props$disableScroll,
      _props$canCloseByOutS = props.canCloseByOutSideClick,
      canCloseByOutSideClick = _props$canCloseByOutS === void 0 ? true : _props$canCloseByOutS,
      _props$canCloseByEsc = props.canCloseByEsc,
      canCloseByEsc = _props$canCloseByEsc === void 0 ? true : _props$canCloseByEsc,
      safeNode = props.safeNode,
      beforePosition = props.beforePosition,
      onPosition = props.onPosition,
      _props$cache = props.cache,
      cache = _props$cache === void 0 ? false : _props$cache,
      autoAdjust = props.autoAdjust,
      _props$autoFocus = props.autoFocus,
      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,
      _props$isAnimationEnd = props.isAnimationEnd,
      isAnimationEnd = _props$isAnimationEnd === void 0 ? true : _props$isAnimationEnd,
      rtl = props.rtl,
      owrapperStyle = props.wrapperStyle,
      others = objectWithoutPropertiesLoose_default()(props, _excluded);

  var position = fixed ? 'fixed' : 'absolute';

  var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(visible),
      firstVisible = _useState[0],
      setFirst = _useState[1];

  var _useState2 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(null),
      forceUpdate = _useState2[1];

  var positionStyleRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])({
    position: position
  });
  var getContainer = typeof popupContainer === 'string' ? function () {
    return document.getElementById(popupContainer);
  } : typeof popupContainer !== 'function' ? function () {
    return popupContainer;
  } : popupContainer;

  var _useState3 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(null),
      container = _useState3[0],
      setContainer = _useState3[1];

  var targetRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var preTarget = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(target);
  var overlayRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var containerRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var maskRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var overflowRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])([]);
  var lastFocus = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var ro = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);

  var _useState4 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(Date.now().toString(36)),
      uuid = _useState4[0];

  var _useContext = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useContext"])(overlay_context),
      setVisibleOverlayToParent = _useContext.setVisibleOverlayToParent,
      otherContext = objectWithoutPropertiesLoose_default()(_useContext, _excluded2);

  var childIDMap = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(new Map());

  var handleOpen = function handleOpen(node) {
    setVisibleOverlayToParent(uuid, node);
    onOpen === null || onOpen === void 0 ? void 0 : onOpen(node);
  };

  var handleClose = function handleClose() {
    positionStyleRef.current = null;
    setVisibleOverlayToParent(uuid, null);
    onClose === null || onClose === void 0 ? void 0 : onClose();
  };

  var getVisibleOverlayFromChild = function getVisibleOverlayFromChild(id, node) {
    if (node) {
      childIDMap.current.set(id, node);
    } else {
      childIDMap.current["delete"](id);
    } // 让父级也感知


    setVisibleOverlayToParent(id, node);
  };

  var child = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.only(children);

  if (typeof child.ref === 'string') {
    throw new Error('Can not set ref by string in Overlay, use function instead.');
  }

  var updatePosition = function updatePosition() {
    var overlayNode = overlayRef.current;
    var containerNode = containerRef.current;
    var targetNode = targetRef.current;

    if (!overlayNode || !containerNode || !targetNode) {
      return;
    }

    var placements = getPlacements({
      target: targetNode,
      overlay: overlayNode,
      container: containerNode,
      scrollNode: overflowRef.current,
      points: points,
      offset: offset,
      position: position,
      placement: placement,
      placementOffset: placementOffset,
      beforePosition: beforePosition,
      autoAdjust: autoAdjust,
      rtl: rtl
    });

    if (!isSameObject(positionStyleRef.current, placements.style)) {
      positionStyleRef.current = placements.style;
      utils_setStyle(overlayNode, placements.style);
      typeof onPosition === 'function' && onPosition(placements);
    }
  }; // 弹窗挂载


  var overlayRefCallback = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useCallback"])(function (nodeRef) {
    var node = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(nodeRef);
    overlayRef.current = node;
    callRef(ref, node);

    if (node !== null && container) {
      var containerNode = getRelativeContainer(getHTMLElement(container));
      containerRef.current = containerNode;
      var targetElement = target === 'viewport' ? hasMask ? maskRef.current : body() : utils_getTargetNode(target) || body();
      var targetNode = getHTMLElement(targetElement);
      targetRef.current = targetNode;
      overflowRef.current = getOverflowNodes(targetNode, containerNode); // 1. 这里提前先设置好 position 属性，因为有的节点可能会因为设置了 position 属性导致宽度变小
      // 2. 提前设置 top/left -1000 先把弹窗藏起来，以免影响了 container 的高度计算

      utils_setStyle(node, {
        position: fixed ? 'fixed' : 'absolute',
        top: -1000,
        left: -1000
      });
      var waitTime = 100;
      ro.current = new ResizeObserver_es["a" /* default */](throttle(updatePosition.bind(overlay__this), waitTime));
      ro.current.observe(containerNode);
      ro.current.observe(node);
      forceUpdate({});

      if (autoFocus) {
        // 这里setTimeout是等弹窗位置计算完成再进行 focus，否则弹窗还在页面最低端，会出现突然滚动到页面最下方的情况
        setTimeout(function () {
          var focusableNodes = utils_getFocusNodeList(node);

          if (focusableNodes.length > 0 && focusableNodes[0]) {
            lastFocus.current = document.activeElement;
            focusableNodes[0].focus();
          }
        }, waitTime);
      }

      !cache && handleOpen(node);
    } else {
      !cache && handleClose();

      if (ro.current) {
        ro.current.disconnect();
        ro.current = null;
      }
    }
  }, [container]);

  var clickEvent = function clickEvent(e) {
    // 点击在子元素上面，则忽略。为了兼容 react16，这里用 contains 判断而不利用 e.stopPropagation() 阻止冒泡的特性来处理
    for (var _iterator = _createForOfIteratorHelperLoose(childIDMap.current.entries()), _step; !(_step = _iterator()).done;) {
      var _step$value = _step.value,
          oNode = _step$value[1];

      var _node2 = getHTMLElement(oNode);

      if (_node2 && (_node2 === e.target || _node2.contains(e.target))) {
        return;
      }
    }

    if (!visible) {
      return;
    } // 点击遮罩关闭


    if (hasMask && maskRef.current === e.target) {
      if (canCloseByMask) {
        onRequestClose('maskClick', e); // TODO: will rename to `mask` in 1.0
      }

      return;
    }

    var safeNodeList = Array.isArray(safeNode) ? safeNode : [safeNode]; // 弹层默认是安全节点

    if (overlayRef.current) {
      safeNodeList.push(function () {
        return overlayRef.current;
      });
    } // 安全节点不关闭


    for (var i = 0; i < safeNodeList.length; i++) {
      var _safeNode = utils_getTargetNode(safeNodeList[i]);

      var _node = getHTMLElement(_safeNode);

      if (_node && (_node === e.target || _node.contains(e.target))) {
        return;
      }
    }

    if (canCloseByOutSideClick) {
      onRequestClose('docClick', e); // TODO: will rename to `doc` in 1.0
    }
  }; // 这里用 mousedown 而不是用 click。因为 click 是 mouseup 才触发。
  // 如果用 click 带来的问题: mousedown 在弹窗内部，然后按住鼠标不放拖动到弹窗外触发 mouseup 结果弹窗关了，这是不期望的展示。 https://github.com/alibaba-fusion/next/issues/742
  // react 17 冒泡问题: 
  //  - react17 中，如果弹窗 mousedown 阻止了 e.stopPropagation(), 那么 document 就不会监听到事件，因为事件冒泡到挂载节点 rootElement 就中断了。
  //  - https://reactjs.org/blog/2020/08/10/react-v17-rc.html#changes-to-event-delegation


  useListener(document, 'mousedown', clickEvent, false, !!(visible && overlayRef.current && (canCloseByOutSideClick || hasMask && canCloseByMask)));

  var keydownEvent = function keydownEvent(e) {
    if (!visible) {
      return;
    } // 无子元素才能 esc 取消关闭


    if (e.keyCode === 27 && canCloseByEsc && !childIDMap.current.size) {
      onRequestClose('esc', e);
    }
  };

  useListener(document, 'keydown', keydownEvent, false, !!(visible && overlayRef.current && canCloseByEsc));

  var scrollEvent = function scrollEvent(e) {
    if (!visible) {
      return;
    }

    updatePosition();
  };

  useListener(overflowRef.current, 'scroll', scrollEvent, false, !!(visible && overlayRef.current && (_overflowRef$current = overflowRef.current) !== null && _overflowRef$current !== void 0 && _overflowRef$current.length)); // 有弹窗情况下在 body 增加 overflow:hidden，两个弹窗同时存在也没问题，会按照堆的方式依次 pop

  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible && disableScroll) {
      var originStyle = document.body.getAttribute('style');
      utils_setStyle(document.body, 'overflow', 'hidden');

      if (overlay_hasScroll(document.body)) {
        var scrollWidth = getScrollbarWidth();

        if (scrollWidth) {
          utils_setStyle(document.body, 'padding-right', "calc(" + utils_getStyle(document.body, 'padding-right') + " + " + scrollWidth + "px)");
        }
      }

      return function () {
        document.body.setAttribute('style', originStyle || '');
      };
    }

    return undefined;
  }, [visible && disableScroll]); // 第一次加载并且 visible=false 的情况不挂载弹窗

  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (!firstVisible && visible) {
      setFirst(true);
    }
  }, [visible]); // cache 情况下的模拟 onOpen/onClose

  var overlayNode = overlayRef.current; // overlayRef.current 可能会异步变化，所以要先接下

  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (cache && overlayNode) {
      if (visible) {
        updatePosition();
        handleOpen(overlayNode);
      } else {
        handleClose();
      }
    }
  }, [visible, cache && overlayNode]); // target 动态更新则重新刷新定位

  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible && overlayNode) {
      if (target && targetRef.current && preTarget.current !== target) {
        var targetElement = target === 'viewport' ? hasMask ? maskRef.current : body() : utils_getTargetNode(target) || body();
        var targetNode = getHTMLElement(targetElement);

        if (targetNode && targetRef.current !== targetNode) {
          targetRef.current = targetNode;
          updatePosition();
        }

        preTarget.current = target;
      }
    }
  }, [target]);
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible && overlayNode) {
      updatePosition();
    }
  }, [offset, placement, placementOffset, points, autoAdjust, rtl]); // autoFocus 弹窗关闭后回到触发点

  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (!visible && autoFocus && lastFocus.current) {
      lastFocus.current.focus();
      lastFocus.current = null;
    }
  }, [!visible && autoFocus && lastFocus.current]); // container 异步加载, 因为 container 很可能还没渲染完成，所以 visible 后这里异步设置下

  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible) {
      // 首次更新
      if (!container) {
        setContainer(getContainer());
      } else if (getContainer() !== container) {
        setContainer(getContainer());
      }
    }
  }, [visible, popupContainer]);

  if (firstVisible === false || !container) {
    return null;
  }

  if (!visible && !cache && isAnimationEnd) {
    return null;
  }

  var newChildren = child ? /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_RefWrapper, {
    ref: overlayRefCallback
  }, /*#__PURE__*/Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, helpers_extends_default()({}, others, {
    style: helpers_extends_default()({
      top: 0,
      left: 0
    }, child.props.style, positionStyleRef.current)
  }))) : null;

  var wrapperStyle = helpers_extends_default()({}, owrapperStyle);

  if (cache && !visible && isAnimationEnd) {
    wrapperStyle.display = 'none';
  }

  var maskNode = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement("div", {
    className: maskClassName,
    style: maskStyle,
    ref: maskRef
  });
  var content = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement("div", {
    className: wrapperClassName,
    style: wrapperStyle
  }, hasMask ? maskRender ? maskRender(maskNode) : maskNode : null, newChildren);
  return /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_context.Provider, {
    value: helpers_extends_default()({}, otherContext, {
      setVisibleOverlayToParent: getVisibleOverlayFromChild
    })
  }, /*#__PURE__*/Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["createPortal"])(content, container));
});
/* harmony default export */ var es_overlay = (es_overlay_Overlay);
// CONCATENATED MODULE: ./node_modules/_@alifd_overlay@0.2.10@@alifd/overlay/es/popup.js


var popup__excluded = ["overlay", "triggerType", "triggerClickKeyCode", "children", "defaultVisible", "className", "onVisibleChange", "container", "style", "placement", "canCloseByTrigger", "delay", "overlayProps", "safeNode", "followTrigger", "target"];




var popup_Popup = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.forwardRef(function (props, ref) {
  var body = function body() {
    return document.body;
  };

  var overlay = props.overlay,
      _props$triggerType = props.triggerType,
      triggerType = _props$triggerType === void 0 ? 'click' : _props$triggerType,
      triggerClickKeyCode = props.triggerClickKeyCode,
      children = props.children,
      defaultVisible = props.defaultVisible,
      className = props.className,
      _props$onVisibleChang = props.onVisibleChange,
      onVisibleChange = _props$onVisibleChang === void 0 ? function () {} : _props$onVisibleChang,
      _props$container = props.container,
      container = _props$container === void 0 ? body : _props$container,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? "bl" : _props$placement,
      _props$canCloseByTrig = props.canCloseByTrigger,
      canCloseByTrigger = _props$canCloseByTrig === void 0 ? true : _props$canCloseByTrig,
      _props$delay = props.delay,
      delay = _props$delay === void 0 ? 200 : _props$delay,
      _props$overlayProps = props.overlayProps,
      overlayProps = _props$overlayProps === void 0 ? {} : _props$overlayProps,
      safeNode = props.safeNode,
      _props$followTrigger = props.followTrigger,
      followTrigger = _props$followTrigger === void 0 ? false : _props$followTrigger,
      otarget = props.target,
      others = objectWithoutPropertiesLoose_default()(props, popup__excluded);

  var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(defaultVisible || props.visible),
      visible = _useState[0],
      setVisible = _useState[1];

  var triggerRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var overlayRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var mouseLeaveTimer = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var mouseEnterTimer = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var overlayClick = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(false);
  var child = children && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.only(children);
  var overlayChild = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.only(overlay);
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if ('visible' in props) {
      setVisible(props.visible);
    }
  }, [props.visible]);

  var handleVisibleChange = function handleVisibleChange(visible, e, triggerType) {
    if (triggerType === void 0) {
      triggerType = 'fromTrigger';
    }

    if (!('visible' in props)) {
      if (visible || overlayRef.current) {
        setVisible(visible);
      }
    }

    onVisibleChange(visible, triggerType, e);
  };

  var handleClick = function handleClick(e) {
    if (visible && !canCloseByTrigger) {
      return;
    }

    handleVisibleChange(!visible, e); // todo: rename to trigger in 1.x
  };

  var handleKeyDown = function handleKeyDown(e) {
    var keycodes = Array.isArray(triggerClickKeyCode) ? triggerClickKeyCode : [triggerClickKeyCode];

    if (keycodes.includes(e.keyCode)) {
      handleVisibleChange(!visible, e); // todo: rename to trigger in 1.x
    }
  };

  var handleMouseEnter = function handleMouseEnter(targetType) {
    return function (e) {
      if (mouseLeaveTimer.current && visible) {
        clearTimeout(mouseLeaveTimer.current);
        mouseLeaveTimer.current = null;
        return;
      }

      if (!mouseEnterTimer.current && !visible) {
        mouseEnterTimer.current = setTimeout(function () {
          handleVisibleChange(true, e, targetType);
          mouseEnterTimer.current = null;
        }, delay);
      }
    };
  };

  var handleMouseLeave = function handleMouseLeave(targetType) {
    return function (e) {
      if (!mouseLeaveTimer.current && visible) {
        mouseLeaveTimer.current = setTimeout(function () {
          handleVisibleChange(false, e, targetType);
          mouseLeaveTimer.current = null;
        }, delay);
      }

      if (mouseEnterTimer.current && !visible) {
        clearTimeout(mouseEnterTimer.current);
        mouseEnterTimer.current = null;
      }
    };
  };

  var handleFocus = function handleFocus(e) {
    handleVisibleChange(true, e);
  };

  var handleBlur = function handleBlur(e) {
    if (overlayClick.current) {
      overlayClick.current = false;
      return;
    }

    handleVisibleChange(false, e);
  }; // 点击弹窗的时候不能被 onBlur 关闭


  var handleOverlayClick = function handleOverlayClick(e) {
    overlayClick.current = true;
  };

  var handleRequestClose = function handleRequestClose(targetType, e) {
    handleVisibleChange(false, e, targetType);
  };

  var triggerProps = {};
  var overlayOtherProps = {};
  var safeNodes = Array.isArray(safeNode) ? safeNode : [safeNode];

  if (child) {
    var triggerTypeList = typeof triggerType === 'string' ? [triggerType] : triggerType;
    triggerTypeList.forEach(function (t) {
      var _child$props, _child$props2, _child$props3, _child$props4, _child$props5, _child$props6;

      switch (t) {
        case 'click':
          triggerProps.onClick = utils_makeChain(handleClick, (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.onClick);
          triggerProps.onKeyDown = utils_makeChain(handleKeyDown, (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.onKeyDown);
          break;

        case 'hover':
          triggerProps.onMouseEnter = utils_makeChain(handleMouseEnter('fromTrigger'), (_child$props3 = child.props) === null || _child$props3 === void 0 ? void 0 : _child$props3.onMouseEnter);
          triggerProps.onMouseLeave = utils_makeChain(handleMouseLeave('fromTrigger'), (_child$props4 = child.props) === null || _child$props4 === void 0 ? void 0 : _child$props4.onMouseLeave);
          overlayOtherProps.onMouseEnter = utils_makeChain(handleMouseEnter('overlay'), overlayProps.onMouseEnter);
          overlayOtherProps.onMouseLeave = utils_makeChain(handleMouseLeave('overlay'), overlayProps.onMouseLeave);
          break;

        case 'focus':
          triggerProps.onFocus = utils_makeChain(handleFocus, (_child$props5 = child.props) === null || _child$props5 === void 0 ? void 0 : _child$props5.onFocus);
          triggerProps.onBlur = utils_makeChain(handleBlur, (_child$props6 = child.props) === null || _child$props6 === void 0 ? void 0 : _child$props6.onBlur);
          overlayOtherProps.onMouseDown = utils_makeChain(handleOverlayClick, overlayProps.onMouseDown);
          break;
      }
    }); // trigger 是安全节点

    safeNodes.push(function () {
      return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current);
    });
  }

  var target = otarget ? otarget : child ? function () {
    return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current);
  } : body;
  var getContainer = typeof container === 'string' ? function () {
    return document.getElementById(container);
  } : typeof container !== 'function' ? function () {
    return container;
  } : function () {
    return container(Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current));
  };
  var overlayContainer = followTrigger ? function () {
    var _findDOMNode;

    return (_findDOMNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current)) === null || _findDOMNode === void 0 ? void 0 : _findDOMNode.parentNode;
  } : getContainer; // triggerRef 可能会更新，等计算的时候再通过 findDOMNode 取真实值

  return /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment, null, child && /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_RefWrapper, {
    ref: Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useCallback"])(function (ref) {
      return triggerRef.current = ref;
    }, [])
  }, /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, triggerProps)), /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_overlay, helpers_extends_default()({}, others, overlayOtherProps, {
    placement: placement,
    container: overlayContainer,
    safeNode: safeNodes,
    visible: visible,
    target: target,
    onRequestClose: handleRequestClose,
    ref: Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useCallback"])(utils_makeChain(utils_saveRef(overlayRef), utils_saveRef(ref)), [])
  }), overlayChild));
});
/* harmony default export */ var es_popup = (popup_Popup);
// CONCATENATED MODULE: ./node_modules/_@alifd_overlay@0.2.10@@alifd/overlay/es/index.js



var es_Overlay = es_overlay;
es_Overlay.Popup = es_popup;
es_Overlay.OverlayContext = overlay_context;
/* harmony default export */ var es = (es_Overlay);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/overlay-v2.js


/* istanbul ignore file */








var overlay_v2_Overlay2 = function Overlay2(props) {
    var _classNames;

    if (!external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"] || !external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"] || !external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"]) {
        log.warning('need react version > 16.8.0');
        return null;
    }

    var _props$prefix = props.prefix,
        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
        _props$animation = props.animation,
        animation = _props$animation === undefined ? { in: 'expandInDown', out: 'expandOutUp' } : _props$animation,
        visible = props.visible,
        hasMask = props.hasMask,
        align = props.align,
        _props$points = props.points,
        points = _props$points === undefined ? align ? align.split(' ') : undefined : _props$points,
        onPosition = props.onPosition,
        children = props.children,
        className = props.className,
        style = props.style,
        wrapperClassName = props.wrapperClassName,
        beforeOpen = props.beforeOpen,
        onOpen = props.onOpen,
        afterOpen = props.afterOpen,
        beforeClose = props.beforeClose,
        onClose = props.onClose,
        afterClose = props.afterClose,
        others = objectWithoutProperties_default()(props, ['prefix', 'animation', 'visible', 'hasMask', 'align', 'points', 'onPosition', 'children', 'className', 'style', 'wrapperClassName', 'beforeOpen', 'onOpen', 'afterOpen', 'beforeClose', 'onClose', 'afterClose']);

    var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(true),
        isAnimationEnd = _useState[0],
        markAnimationEnd = _useState[1];

    var overlayRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);

    var handleEnter = function handleEnter() {
        markAnimationEnd(false);
        typeof beforeOpen === 'function' && beforeOpen(overlayRef.current);
    };
    var handleEntering = function handleEntering() {
        typeof onOpen === 'function' && onOpen(overlayRef.current);
    };
    var handleEntered = function handleEntered() {
        typeof afterOpen === 'function' && afterOpen(overlayRef.current);
    };
    var handleExit = function handleExit() {
        typeof beforeClose === 'function' && beforeClose(overlayRef.current);
    };
    var handleExiting = function handleExiting() {
        typeof onClose === 'function' && onClose(overlayRef.current);
    };
    var handleExited = function handleExited() {
        markAnimationEnd(true);
        typeof afterClose === 'function' && afterClose(overlayRef.current);
    };

    var childrenNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        es_animate.OverlayAnimate,
        {
            visible: visible,
            animation: animation,
            onEnter: handleEnter,
            onEntering: handleEntering,
            onEntered: handleEntered,
            onExit: handleExit,
            onExiting: handleExiting,
            onExited: handleExited,
            timeout: 300,
            style: style
        },
        children ? Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(children, {
            className: _classnames_2_3_1_classnames_default()([prefix + 'overlay-inner', className, children && children.props && children.props.className])
        }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', null)
    );

    var wraperCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'overlay-wrapper v2'] = true, _classNames[wrapperClassName] = wrapperClassName, _classNames.opened = visible, _classNames));

    var handlePosition = function handlePosition(result) {
        // 兼容 1.x, 2.x 可去除这段逻辑
        extends_default()(result, { align: result.config.points });

        typeof onPosition === 'function' && onPosition(result);
    };

    var maskRender = function maskRender(node) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_animate.OverlayAnimate,
            {
                visible: visible,
                animation: animation ? { in: 'fadeIn', out: 'fadeOut' } : false,
                timeout: 300,
                unmountOnExit: true
            },
            node
        );
    };

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        es,
        extends_default()({}, others, {
            visible: visible,
            isAnimationEnd: isAnimationEnd,
            hasMask: hasMask,
            wrapperClassName: wraperCls,
            maskClassName: prefix + 'overlay-backdrop',
            maskRender: maskRender,
            points: points,
            onPosition: handlePosition,
            ref: overlayRef
        }),
        childrenNode
    );
};

/* harmony default export */ var overlay_v2 = (overlay_v2_Overlay2);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/popup.js






var popup__class, popup__temp;








var popup_noop = func.noop,
    popup_makeChain = func.makeChain,
    popup_bindCtx = func.bindCtx;

/**
 * Overlay.Popup
 * @description 继承 Overlay 的 API，除非特别说明
 * */

var overlay_popup_Popup = (popup__temp = popup__class = function (_Component) {
    inherits_default()(Popup, _Component);

    function Popup(props) {
        classCallCheck_default()(this, Popup);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.state = {
            visible: typeof props.visible === 'undefined' ? props.defaultVisible : props.visible
        };

        popup_bindCtx(_this, ['handleTriggerClick', 'handleTriggerKeyDown', 'handleTriggerMouseEnter', 'handleTriggerMouseLeave', 'handleTriggerFocus', 'handleTriggerBlur', 'handleContentMouseEnter', 'handleContentMouseLeave', 'handleContentMouseDown', 'handleRequestClose', 'handleMaskMouseEnter', 'handleMaskMouseLeave']);
        return _this;
    }

    Popup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if ('visible' in nextProps) {
            return extends_default()({}, prevState, {
                visible: nextProps.visible
            });
        }

        return null;
    };

    Popup.prototype.componentWillUnmount = function componentWillUnmount() {
        var _this2 = this;

        ['_timer', '_hideTimer', '_showTimer'].forEach(function (time) {
            _this2[time] && clearTimeout(_this2[time]);
        });
    };

    Popup.prototype.handleVisibleChange = function handleVisibleChange(visible, type, e) {
        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        this.props.onVisibleChange(visible, type, e);
    };

    Popup.prototype.handleTriggerClick = function handleTriggerClick(e) {
        if (this.state.visible && !this.props.canCloseByTrigger) {
            return;
        }

        this.handleVisibleChange(!this.state.visible, 'fromTrigger', e);
    };

    Popup.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e) {
        var triggerClickKeycode = this.props.triggerClickKeycode;

        var keycodes = Array.isArray(triggerClickKeycode) ? triggerClickKeycode : [triggerClickKeycode];
        if (keycodes.includes(e.keyCode)) {
            e.preventDefault();
            this.handleTriggerClick(e);
        }
    };

    Popup.prototype.handleTriggerMouseEnter = function handleTriggerMouseEnter(e) {
        var _this3 = this;

        this._mouseNotFirstOnMask = false;

        if (this._hideTimer) {
            clearTimeout(this._hideTimer);
            this._hideTimer = null;
        }
        if (this._showTimer) {
            clearTimeout(this._showTimer);
            this._showTimer = null;
        }
        if (!this.state.visible) {
            this._showTimer = setTimeout(function () {
                _this3.handleVisibleChange(true, 'fromTrigger', e);
            }, this.props.delay);
        }
    };

    Popup.prototype.handleTriggerMouseLeave = function handleTriggerMouseLeave(e, type) {
        var _this4 = this;

        if (this._showTimer) {
            clearTimeout(this._showTimer);
            this._showTimer = null;
        }
        if (this.state.visible) {
            this._hideTimer = setTimeout(function () {
                _this4.handleVisibleChange(false, type || 'fromTrigger', e);
            }, this.props.delay);
        }
    };

    Popup.prototype.handleTriggerFocus = function handleTriggerFocus(e) {
        this.handleVisibleChange(true, 'fromTrigger', e);
    };

    Popup.prototype.handleTriggerBlur = function handleTriggerBlur(e) {
        if (!this._isForwardContent) {
            this.handleVisibleChange(false, 'fromTrigger', e);
        }
        this._isForwardContent = false;
    };

    Popup.prototype.handleContentMouseDown = function handleContentMouseDown() {
        this._isForwardContent = true;
    };

    Popup.prototype.handleContentMouseEnter = function handleContentMouseEnter() {
        clearTimeout(this._hideTimer);
    };

    Popup.prototype.handleContentMouseLeave = function handleContentMouseLeave(e) {
        this.handleTriggerMouseLeave(e, 'fromContent');
    };

    Popup.prototype.handleMaskMouseEnter = function handleMaskMouseEnter() {
        if (!this._mouseNotFirstOnMask) {
            clearTimeout(this._hideTimer);
            this._hideTimer = null;
            this._mouseNotFirstOnMask = false;
        }
    };

    Popup.prototype.handleMaskMouseLeave = function handleMaskMouseLeave() {
        this._mouseNotFirstOnMask = true;
    };

    Popup.prototype.handleRequestClose = function handleRequestClose(type, e) {
        this.handleVisibleChange(false, type, e);
    };

    Popup.prototype.renderTrigger = function renderTrigger() {
        var _this5 = this;

        var _props = this.props,
            trigger = _props.trigger,
            disabled = _props.disabled;

        var props = {
            key: 'trigger',
            'aria-haspopup': true,
            'aria-expanded': this.state.visible
        };

        if (!this.state.visible) {
            props['aria-describedby'] = undefined;
        }

        if (!disabled) {
            var triggerType = this.props.triggerType;

            var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];

            var _ref = trigger && trigger.props || {},
                onClick = _ref.onClick,
                onKeyDown = _ref.onKeyDown,
                onMouseEnter = _ref.onMouseEnter,
                onMouseLeave = _ref.onMouseLeave,
                onFocus = _ref.onFocus,
                onBlur = _ref.onBlur;

            triggerTypes.forEach(function (triggerType) {
                switch (triggerType) {
                    case 'click':
                        props.onClick = popup_makeChain(_this5.handleTriggerClick, onClick);
                        props.onKeyDown = popup_makeChain(_this5.handleTriggerKeyDown, onKeyDown);
                        break;
                    case 'hover':
                        props.onMouseEnter = popup_makeChain(_this5.handleTriggerMouseEnter, onMouseEnter);
                        props.onMouseLeave = popup_makeChain(_this5.handleTriggerMouseLeave, onMouseLeave);
                        break;
                    case 'focus':
                        props.onFocus = popup_makeChain(_this5.handleTriggerFocus, onFocus);
                        props.onBlur = popup_makeChain(_this5.handleTriggerBlur, onBlur);
                        break;
                    default:
                        break;
                }
            });
        }

        return trigger && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(trigger, props);
    };

    Popup.prototype.renderContent = function renderContent() {
        var _this6 = this;

        var _props2 = this.props,
            children = _props2.children,
            triggerType = _props2.triggerType;

        var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];
        var content = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].only(children);
        var _content$props = content.props,
            onMouseDown = _content$props.onMouseDown,
            onMouseEnter = _content$props.onMouseEnter,
            onMouseLeave = _content$props.onMouseLeave;

        var props = {
            key: 'portal'
        };

        triggerTypes.forEach(function (triggerType) {
            switch (triggerType) {
                case 'focus':
                    props.onMouseDown = popup_makeChain(_this6.handleContentMouseDown, onMouseDown);
                    break;
                case 'hover':
                    props.onMouseEnter = popup_makeChain(_this6.handleContentMouseEnter, onMouseEnter);
                    props.onMouseLeave = popup_makeChain(_this6.handleContentMouseLeave, onMouseLeave);
                    break;
                default:
                    break;
            }
        });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(content, props);
    };

    Popup.prototype.renderPortal = function renderPortal() {
        var _this7 = this;

        var _props3 = this.props,
            target = _props3.target,
            safeNode = _props3.safeNode,
            followTrigger = _props3.followTrigger,
            triggerType = _props3.triggerType,
            hasMask = _props3.hasMask,
            wrapperStyle = _props3.wrapperStyle,
            others = objectWithoutProperties_default()(_props3, ['target', 'safeNode', 'followTrigger', 'triggerType', 'hasMask', 'wrapperStyle']);

        var container = this.props.container;

        var findTriggerNode = function findTriggerNode() {
            return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(_this7);
        };
        var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
        safeNodes.unshift(findTriggerNode);

        var newWrapperStyle = wrapperStyle || {};

        if (followTrigger) {
            container = function container(trigger) {
                return trigger && trigger.parentNode || trigger;
            };
            newWrapperStyle.position = 'relative';
        }

        if (triggerType === 'hover' && hasMask) {
            others.onMaskMouseEnter = this.handleMaskMouseEnter;
            others.onMaskMouseLeave = this.handleMaskMouseLeave;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            overlay_overlay,
            extends_default()({}, others, {
                key: 'overlay',
                ref: function ref(overlay) {
                    return _this7.overlay = overlay;
                },
                visible: this.state.visible,
                target: target || findTriggerNode,
                container: container,
                safeNode: safeNodes,
                wrapperStyle: newWrapperStyle,
                triggerType: triggerType,
                hasMask: hasMask,
                onRequestClose: this.handleRequestClose
            }),
            this.props.children && this.renderContent()
        );
    };

    Popup.prototype.render = function render() {
        return [this.renderTrigger(), this.renderPortal()];
    };

    return Popup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), popup__class.propTypes = {
    /**
     * 弹层内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 触发弹层显示或隐藏的元素
     */
    trigger: _prop_types_15_8_1_prop_types_default.a.element,
    /**
     * 触发弹层显示或隐藏的操作类型，可以是 'click'，'hover'，'focus'，或者它们组成的数组，如 ['hover', 'focus']
     */
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 当 triggerType 为 click 时才生效，可自定义触发弹层显示的键盘码
     */
    triggerClickKeycode: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 弹层当前是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示或隐藏时触发的回调函数
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示或隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     * @param {Object} e DOM事件
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置此属性，弹层无法显示或隐藏
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    autoFit: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效
     */
    delay: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * trigger 是否可以关闭弹层
     */
    canCloseByTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层定位的参照元素
     * @default target 属性，即触发元素
     */
    target: _prop_types_15_8_1_prop_types_default.a.any,
    safeNode: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否跟随trigger滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    container: _prop_types_15_8_1_prop_types_default.a.any,
    hasMask: _prop_types_15_8_1_prop_types_default.a.bool,
    wrapperStyle: _prop_types_15_8_1_prop_types_default.a.object,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 开启 v2 版本
     */
    v2: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2] 快捷位置，包含 'tl' | 't' | 'tr' | 'rt' | 'r' | 'rb' | 'bl' | 'b' | 'br' | 'lt' | 'l' | 'lb'
     */
    placement: _prop_types_15_8_1_prop_types_default.a.string
}, popup__class.defaultProps = {
    triggerType: 'hover',
    triggerClickKeycode: [KEYCODE.SPACE, KEYCODE.ENTER],
    defaultVisible: false,
    onVisibleChange: popup_noop,
    disabled: false,
    autoFit: false,
    delay: 200,
    canCloseByTrigger: true,
    followTrigger: false,
    container: function container() {
        return document.body;
    },
    rtl: false
}, popup__temp);
overlay_popup_Popup.displayName = 'Popup';


/* harmony default export */ var overlay_popup = (Object(react_lifecycles_compat_es["polyfill"])(overlay_popup_Popup));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/popup-v2.js


/* istanbul ignore file */








var popup_v2_Popup = function Popup(props) {
    var _classNames;

    if (!external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"] || !external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"] || !external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"]) {
        log.warning('need react version > 16.8.0');
        return null;
    }

    var _props$prefix = props.prefix,
        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
        _props$animation = props.animation,
        panimation = _props$animation === undefined ? { in: 'expandInDown', out: 'expandOutUp' } : _props$animation,
        defaultVisible = props.defaultVisible,
        _props$onVisibleChang = props.onVisibleChange,
        onVisibleChange = _props$onVisibleChang === undefined ? function () {} : _props$onVisibleChang,
        trigger = props.trigger,
        _props$triggerType = props.triggerType,
        triggerType = _props$triggerType === undefined ? 'hover' : _props$triggerType,
        overlay = props.overlay,
        onPosition = props.onPosition,
        children = props.children,
        className = props.className,
        style = props.style,
        wrapperClassName = props.wrapperClassName,
        triggerClickKeycode = props.triggerClickKeycode,
        align = props.align,
        beforeOpen = props.beforeOpen,
        onOpen = props.onOpen,
        afterOpen = props.afterOpen,
        beforeClose = props.beforeClose,
        onClose = props.onClose,
        afterClose = props.afterClose,
        others = objectWithoutProperties_default()(props, ['prefix', 'animation', 'defaultVisible', 'onVisibleChange', 'trigger', 'triggerType', 'overlay', 'onPosition', 'children', 'className', 'style', 'wrapperClassName', 'triggerClickKeycode', 'align', 'beforeOpen', 'onOpen', 'afterOpen', 'beforeClose', 'onClose', 'afterClose']);

    var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(defaultVisible),
        visible = _useState[0],
        setVisible = _useState[1];

    var _useState2 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(panimation),
        animation = _useState2[0],
        setAnimation = _useState2[1];

    var _useState3 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(true),
        isAnimationEnd = _useState3[0],
        markAnimationEnd = _useState3[1];

    var overlayRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);

    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        if ('visible' in props) {
            setVisible(props.visible);
        }
    }, [props.visible]);

    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        if ('animation' in props && animation !== panimation) {
            setAnimation(panimation);
        }
    }, [panimation]);

    var handleVisibleChange = function handleVisibleChange(visible) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
        }

        if (!('visible' in props)) {
            setVisible(visible);
        }

        onVisibleChange.apply(undefined, [visible].concat(args));
    };

    var triggerNode = overlay ? children : trigger;
    var overlayNode = overlay ? overlay : children;

    var handleEnter = function handleEnter() {
        markAnimationEnd(false);
        typeof beforeOpen === 'function' && beforeOpen(overlayRef.current);
    };
    var handleEntering = function handleEntering() {
        typeof onOpen === 'function' && onOpen(overlayRef.current);
    };
    var handleEntered = function handleEntered() {
        typeof afterOpen === 'function' && afterOpen(overlayRef.current);
    };
    var handleExit = function handleExit() {
        typeof beforeClose === 'function' && beforeClose(overlayRef.current);
    };
    var handleExiting = function handleExiting() {
        typeof onClose === 'function' && onClose(overlayRef.current);
    };
    var handleExited = function handleExited() {
        markAnimationEnd(true);
        typeof afterClose === 'function' && afterClose(overlayRef.current);
    };

    overlayNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        es_animate.OverlayAnimate,
        {
            visible: visible,
            animation: animation,
            timeout: 200,
            onEnter: handleEnter,
            onEntering: handleEntering,
            onEntered: handleEntered,
            onExit: handleExit,
            onExiting: handleExiting,
            onExited: handleExited,
            style: style
        },
        overlayNode ? Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(overlayNode, {
            className: _classnames_2_3_1_classnames_default()([prefix + 'overlay-inner', className, overlayNode && overlayNode.props && overlayNode.props.className])
        }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', null)
    );

    var handlePosition = function handlePosition(result) {
        // 兼容 1.x, 2.x 可去除这段逻辑
        extends_default()(result, { align: result.config.points });

        var placement = result.config.placement;
        if (placement && typeof placement === 'string') {
            if (animation.in === 'expandInDown' && animation.out === 'expandOutUp' && placement.match(/t/)) {
                setAnimation({
                    in: 'expandInUp',
                    out: 'expandOutDown'
                });
            } else if (animation.in === 'expandInUp' && animation.out === 'expandOutDown' && placement.match(/b/)) {
                setAnimation({
                    in: 'expandInDown',
                    out: 'expandOutUp'
                });
            }
        }

        typeof onPosition === 'function' && onPosition(result);
    };

    var wraperCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'overlay-wrapper v2'] = true, _classNames[wrapperClassName] = wrapperClassName, _classNames.opened = visible, _classNames));

    // 兼容
    var v1Props = {};
    if (align) {
        v1Props.points = align.split(' ');
    }

    var maskRender = function maskRender(node) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_animate.OverlayAnimate,
            {
                visible: visible,
                animation: animation ? { in: 'fadeIn', out: 'fadeOut' } : false,
                timeout: 200,
                unmountOnExit: true
            },
            node
        );
    };

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        es.Popup,
        extends_default()({}, others, v1Props, {
            wrapperClassName: wraperCls,
            overlay: overlayNode,
            visible: visible,
            isAnimationEnd: isAnimationEnd,
            triggerType: triggerType,
            onVisibleChange: handleVisibleChange,
            onPosition: handlePosition,
            triggerClickKeyCode: triggerClickKeycode,
            maskRender: maskRender,
            ref: overlayRef
        }),
        triggerNode
    );
};

/* harmony default export */ var popup_v2 = (popup_v2_Popup);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/overlay/index.js


















var next_es_overlay_Overlay = function (_React$Component) {
    inherits_default()(Overlay, _React$Component);

    function Overlay(props) {
        classCallCheck_default()(this, Overlay);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.overlayRef = null;
        _this.saveRef = _this.saveRef.bind(_this);
        return _this;
    }

    Overlay.prototype.saveRef = function saveRef(ref) {
        this.overlayRef = ref;
    };
    /**
     * 兼容 1.x API, will be removed in 2.1.0
     */


    Overlay.prototype.getContent = function getContent() {
        if (this.overlayRef) {
            return this.overlayRef.getContent();
        }
        return null;
    };
    /**
     * 兼容 1.x API, will be removed in 2.1.0
     */


    Overlay.prototype.getContentNode = function getContentNode() {
        if (this.overlayRef) {
            return this.overlayRef.getContentNode();
        }
        return null;
    };

    Overlay.prototype.render = function render() {
        var _props = this.props,
            v2 = _props.v2,
            others = objectWithoutProperties_default()(_props, ['v2']);

        if (v2) {
            if ('needAdjust' in others) {
                log.deprecated('needAdjust', 'needAdjust', 'Overlay v2');
                others.autoAdjust = others.needAdjust;
                delete others.needAdjust;
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_v2, others);
        } else {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_overlay, extends_default()({}, others, { ref: this.saveRef }));
        }
    };

    return Overlay;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component);
// eslint-disable-next-line


next_es_overlay_Overlay.displayName = 'Overlay';

var overlay_Popup = function (_React$Component2) {
    inherits_default()(Popup, _React$Component2);

    function Popup(props) {
        classCallCheck_default()(this, Popup);

        var _this2 = possibleConstructorReturn_default()(this, _React$Component2.call(this, props));

        _this2.overlay = null;
        _this2.saveRef = _this2.saveRef.bind(_this2);
        return _this2;
    }

    Popup.prototype.saveRef = function saveRef(ref) {
        if (ref) {
            this.overlay = ref.overlay;
        }
    };

    Popup.prototype.render = function render() {
        var _props2 = this.props,
            v2 = _props2.v2,
            others = objectWithoutProperties_default()(_props2, ['v2']);

        if (v2) {
            if ('needAdjust' in others) {
                log.deprecated('needAdjust', 'needAdjust', 'Popup v2');
                others.autoAdjust = others.needAdjust;
                delete others.needAdjust;
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(popup_v2, others);
        } else {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_popup, extends_default()({}, others, { ref: this.saveRef }));
        }
    };

    return Popup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component);

overlay_Popup.displayName = 'Popup';


next_es_overlay_Overlay.Gateway = gateway;
next_es_overlay_Overlay.Position = overlay_position_Position;
next_es_overlay_Overlay.Popup = config_provider.config(overlay_Popup, {
    exportNames: ['overlay']
});

/* harmony default export */ var next_es_overlay = (config_provider.config(next_es_overlay_Overlay, {
    exportNames: ['getContent', 'getContentNode']
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/icon/icon-font.js







var customCache = new Set();

/** Icon.createFromIconfontCN
 *  @description 通过自定义 iconfont源来使用使用svg格式的图片
 *  @order 1
 */
function createFromIconfontCN() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var scriptUrl = options.scriptUrl,
        _options$extraCommonP = options.extraCommonProps,
        extraCommonProps = _options$extraCommonP === undefined ? {} : _options$extraCommonP;

    var hasExist = customCache.has(scriptUrl);

    if (document.querySelector('script[data-namespace="' + scriptUrl + '"]')) {
        hasExist = true;
    }

    /**
     * DOM API required.
     * Make sure in browser environment.
     * The Custom Icon will create a <script/>
     * that loads SVG symbols and insert the SVG Element into the document body.
     */
    if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !hasExist) {
        var script = document.createElement('script');
        script.setAttribute('src', scriptUrl);
        script.setAttribute('data-namespace', scriptUrl);
        customCache.add(scriptUrl);
        document.body.appendChild(script);
    }

    var Iconfont = function Iconfont(props) {
        var _cx;

        var type = props.type,
            size = props.size,
            children = props.children,
            className = props.className,
            _props$prefix = props.prefix,
            prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
            others = objectWithoutProperties_default()(props, ['type', 'size', 'children', 'className', 'prefix']);

        // component > children > type


        var content = null;
        if (props.type) {
            content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('use', { xlinkHref: '#' + type });
        }
        if (children) {
            content = children;
        }

        var classes = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'icon-remote'] = true, _cx), className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_icon,
            { size: size },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'svg',
                extends_default()({
                    className: classes,
                    focusable: false
                }, others, extraCommonProps),
                content
            )
        );
    };

    Iconfont.displayName = 'Iconfont';

    return config_provider.config(Iconfont);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/icon/index.js





var icon__class, icon__temp;







/**
 * Icon
 */
var icon_Icon = (icon__temp = icon__class = function (_Component) {
    inherits_default()(Icon, _Component);

    function Icon() {
        classCallCheck_default()(this, Icon);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Icon.prototype.render = function render() {
        var _cx;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            prefix = _props.prefix,
            type = _props.type,
            size = _props.size,
            className = _props.className,
            rtl = _props.rtl,
            style = _props.style,
            children = _props.children;

        var others = util_obj.pickOthers(extends_default()({}, Icon.propTypes), this.props);

        var classes = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'icon'] = true, _cx[prefix + 'icon-' + type] = !!type, _cx['' + prefix + size] = !!size && typeof size === 'string', _cx[className] = !!className, _cx));

        if (rtl && ['arrow-left', 'arrow-right', 'arrow-double-left', 'arrow-double-right', 'switch', 'sorting', 'descending', 'ascending'].indexOf(type) !== -1) {
            others.dir = 'rtl';
        }

        var sizeStyle = typeof size === 'number' ? {
            width: size,
            height: size,
            lineHeight: size + 'px',
            fontSize: size
        } : {};

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'i',
            extends_default()({}, others, {
                style: extends_default()({}, sizeStyle, style),
                className: classes
            }),
            children
        );
    };

    return Icon;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), icon__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 指定显示哪种图标
     */
    type: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 指定图标大小
     * <br/>**可选值**<br/> xxs, xs, small, medium, large, xl, xxl, xxxl, inherit
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.oneOf(['xxs', 'xs', 'small', 'medium', 'large', 'xl', 'xxl', 'xxxl', 'inherit']), _prop_types_15_8_1_prop_types_default.a.number]),
    className: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object
}), icon__class.defaultProps = {
    prefix: 'next-',
    size: 'medium'
}, icon__class._typeMark = 'icon', icon__temp);
icon_Icon.displayName = 'Icon';


icon_Icon.createFromIconfontCN = createFromIconfontCN;
/* harmony default export */ var es_icon = (config_provider.config(icon_Icon));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/balloon/alignMap.js
/**
 * Created by xiachi on 17/1/17.
 */

var normalMap = {
    t: {
        align: 'bc tc',
        rtlAlign: 'bc tc',
        arrow: 'bottom',
        trOrigin: 'bottom',
        rtlTrOrigin: 'bottom',
        offset: [0, -12]
    },
    r: {
        align: 'cl cr',
        rtlAlign: 'cr cl',
        arrow: 'left',
        trOrigin: 'left',
        rtlTrOrigin: 'right',
        offset: [12, 0]
    },
    b: {
        align: 'tc bc',
        rtlAlign: 'tc bc',
        arrow: 'top',
        trOrigin: 'top',
        rtlTrOrigin: 'top',
        offset: [0, 12]
    },
    l: {
        align: 'cr cl',
        rtlAlign: 'cl cr',
        arrow: 'right',
        trOrigin: 'right',
        rtlTrOrigin: 'left',
        offset: [-12, 0]
    },
    tl: {
        align: 'br tc',
        rtlAlign: 'bl tc',
        arrow: 'bottom-right',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [20, -12]
    },
    tr: {
        align: 'bl tc',
        rtlAlign: 'br tc',
        arrow: 'bottom-left',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [-20, -12]
    },
    rt: {
        align: 'bl cr',
        rtlAlign: 'br cl',
        arrow: 'left-bottom',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [12, 20]
    },
    rb: {
        align: 'tl cr',
        rtlAlign: 'tr cl',
        arrow: 'left-top',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [12, -20]
    },
    bl: {
        align: 'tr bc',
        rtlAlign: 'tl bc',
        arrow: 'top-right',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [20, 12]
    },
    br: {
        align: 'tl bc',
        rtlAlign: 'tr bc',
        arrow: 'top-left',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [-20, 12]
    },
    lt: {
        align: 'br cl',
        rtlAlign: 'bl cr',
        arrow: 'right-bottom',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [-12, 20]
    },
    lb: {
        align: 'tr cl',
        rtlAlign: 'tl cr',
        arrow: 'right-top',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [-12, -20]
    }
};
var edgeMap = {
    t: {
        align: 'bc tc',
        rtlAlign: 'bc tc',
        arrow: 'bottom',
        trOrigin: 'bottom',
        rtlTrOrigin: 'bottom',
        offset: [0, -12]
    },
    r: {
        align: 'cl cr',
        rtlAlign: 'cr cl',
        arrow: 'left',
        trOrigin: 'left',
        rtlTrOrigin: 'right',
        offset: [12, 0]
    },
    b: {
        align: 'tc bc',
        rtlAlign: 'tc bc',
        arrow: 'top',
        trOrigin: 'top',
        rtlTrOrigin: 'top',
        offset: [0, 12]
    },
    l: {
        align: 'cr cl',
        rtlAlign: 'cl cr',
        arrow: 'right',
        trOrigin: 'right',
        rtlTrOrigin: 'left',
        offset: [-12, 0]
    },
    tl: {
        align: 'bl tl',
        rtlAlign: 'br tr',
        arrow: 'bottom-left',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [0, -12]
    },
    tr: {
        align: 'br tr',
        rtlAlign: 'bl tl',
        arrow: 'bottom-right',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [0, -12]
    },
    rt: {
        align: 'tl tr',
        rtlAlign: 'tr tl',
        arrow: 'left-top',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [12, 0]
    },
    rb: {
        align: 'bl br',
        rtlAlign: 'br bl',
        arrow: 'left-bottom',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [12, 0]
    },
    bl: {
        align: 'tl bl',
        rtlAlign: 'tr br',
        arrow: 'top-left',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [0, 12]
    },
    br: {
        align: 'tr br',
        rtlAlign: 'tl bl',
        arrow: 'top-right',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [0, 12]
    },
    lt: {
        align: 'tr tl',
        rtlAlign: 'tl tr',
        arrow: 'right-top',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [-12, 0]
    },
    lb: {
        align: 'br bl',
        rtlAlign: 'bl br',
        arrow: 'right-bottom',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [-12, 0]
    }
};


// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/balloon/inner.js






var inner__class, inner__temp;









/**
 * Created by xiachi on 17/2/10.
 */

var inner_noop = func.noop;
var inner_BalloonInner = (inner__temp = inner__class = function (_React$Component) {
    inherits_default()(BalloonInner, _React$Component);

    function BalloonInner() {
        classCallCheck_default()(this, BalloonInner);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    BalloonInner.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            prefix = _props.prefix,
            closable = _props.closable,
            className = _props.className,
            style = _props.style,
            isTooltip = _props.isTooltip,
            align = _props.align,
            title = _props.title,
            type = _props.type,
            onClose = _props.onClose,
            alignEdge = _props.alignEdge,
            v2 = _props.v2,
            children = _props.children,
            rtl = _props.rtl,
            locale = _props.locale,
            others = objectWithoutProperties_default()(_props, ['prefix', 'closable', 'className', 'style', 'isTooltip', 'align', 'title', 'type', 'onClose', 'alignEdge', 'v2', 'children', 'rtl', 'locale']);

        var alignMap = alignEdge || v2 ? edgeMap : normalMap;
        var _prefix = prefix;

        if (isTooltip) {
            _prefix = _prefix + 'balloon-tooltip';
        } else {
            _prefix = _prefix + 'balloon';
        }

        var closableInTitle = closable && title !== undefined;
        var closableInContent = closable && title === undefined;

        var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames['' + _prefix] = true, _classNames[_prefix + '-' + type] = type, _classNames[_prefix + '-medium'] = true, _classNames[_prefix + '-' + alignMap[align].arrow] = alignMap[align], _classNames[_prefix + '-closable'] = closableInContent, _classNames[className] = className, _classNames));

        var titleCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'balloon-title'] = true, _classNames2[_prefix + '-closable'] = closableInTitle, _classNames2));

        var closeIcon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'a',
            { role: 'button', 'aria-label': locale.close, tabIndex: '0', className: _prefix + '-close', onClick: onClose },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'close', size: 'small' })
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                role: 'tooltip',
                'aria-live': 'polite',
                dir: rtl ? 'rtl' : undefined,
                className: classes,
                style: style
            }, util_obj.pickOthers(Object.keys(BalloonInner.propTypes), others)),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'balloon-arrow' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'balloon-arrow-content' })
            ),
            title && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: titleCls },
                title,
                closableInTitle && closeIcon
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'balloon-content' },
                children
            ),
            closableInContent && closeIcon
        );
    };

    return BalloonInner;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), inner__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, inner__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    closable: _prop_types_15_8_1_prop_types_default.a.bool,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    title: _prop_types_15_8_1_prop_types_default.a.node,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    alignEdge: _prop_types_15_8_1_prop_types_default.a.bool,
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    style: _prop_types_15_8_1_prop_types_default.a.any,
    align: _prop_types_15_8_1_prop_types_default.a.string,
    type: _prop_types_15_8_1_prop_types_default.a.string,
    isTooltip: _prop_types_15_8_1_prop_types_default.a.bool,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    v2: _prop_types_15_8_1_prop_types_default.a.bool
}, inner__class.defaultProps = {
    prefix: 'next-',
    closable: true,
    onClose: inner_noop,
    locale: locale_zh_cn.Balloon,
    align: 'b',
    type: 'normal',
    alignEdge: false,
    pure: false
}, inner__temp);
inner_BalloonInner.displayName = 'BalloonInner';


/* harmony default export */ var balloon_inner = (inner_BalloonInner);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/balloon/util.js



function getDisabledCompatibleTrigger(element) {
    if (element.type.displayName === 'Config(Button)' && element.props.disabled) {
        var displayStyle = element.props.style && element.props.style.display ? element.props.style.display : 'inline-block';
        var child = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(element, {
            style: extends_default()({}, element.props.style, {
                pointerEvents: 'none'
            })
        });
        return (
            // eslint-disable-next-line
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { style: { display: displayStyle, cursor: 'not-allowed' } },
                child
            )
        );
    }
    return element;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/balloon/balloon.js






var balloon__class, balloon__temp;










var balloon_noop = func.noop;
var balloon_Popup = next_es_overlay.Popup;


var alignList = ['t', 'r', 'b', 'l', 'tl', 'tr', 'bl', 'br', 'lt', 'lb', 'rt', 'rb'];

var balloon_alignMap = normalMap;

/** Balloon */
var balloon_Balloon = (balloon__temp = balloon__class = function (_React$Component) {
    inherits_default()(Balloon, _React$Component);

    function Balloon(props, context) {
        classCallCheck_default()(this, Balloon);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        _this.beforePosition = function (result, obj) {
            var placement = result.config.placement;

            if (placement !== _this.state.align) {
                _this.setState({
                    align: placement,
                    innerAlign: true
                });
            }

            if (_this.props.arrowPointToCenter) {
                var _obj$target = obj.target,
                    width = _obj$target.width,
                    height = _obj$target.height;

                if (placement.length === 2) {
                    var offset = normalMap[placement].offset;
                    switch (placement[0]) {
                        case 'b':
                        case 't':
                            {
                                var plus = offset[0] > 0 ? 1 : -1;
                                result.style.left = result.style.left + plus * width / 2 - offset[0];
                            }
                            break;
                        case 'l':
                        case 'r':
                            {
                                var _plus = offset[0] > 0 ? 1 : -1;
                                result.style.top = result.style.top + _plus * height / 2 - offset[1];
                            }
                            break;
                    }
                }
            }

            return result;
        };

        _this.state = {
            align: alignList.includes(props.align) ? props.align : 'b',
            visible: 'visible' in props ? props.visible : props.defaultVisible
        };
        _this._onClose = _this._onClose.bind(_this);
        _this._onPosition = _this._onPosition.bind(_this);
        _this._onVisibleChange = _this._onVisibleChange.bind(_this);
        return _this;
    }

    Balloon.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var nextState = {};
        if ('visible' in nextProps) {
            nextState.visible = nextProps.visible;
        }

        if (!prevState.innerAlign && 'align' in nextProps && alignList.includes(nextProps.align) && nextProps.align !== prevState.align) {
            nextState.align = nextProps.align;
            nextState.innerAlign = false;
        }

        return nextState;
    };

    Balloon.prototype._onVisibleChange = function _onVisibleChange(visible, trigger) {
        // Not Controlled
        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        this.props.onVisibleChange(visible, trigger);

        if (!visible) {
            this.props.onClose();
        }
    };

    Balloon.prototype._onClose = function _onClose(e) {
        this._onVisibleChange(false, 'closeClick');

        //必须加上preventDefault,否则单测IE下报错,出现full page reload 异常
        e.preventDefault();
    };

    Balloon.prototype._onPosition = function _onPosition(res) {
        var rtl = this.props.rtl;

        balloon_alignMap = this.props.alignEdge ? edgeMap : normalMap;
        var newAlign = res.align.join(' ');
        var resAlign = void 0;

        var alignKey = 'align';
        if (rtl) {
            alignKey = 'rtlAlign';
        }

        for (var key in balloon_alignMap) {
            if (balloon_alignMap[key][alignKey] === newAlign) {
                resAlign = key;

                break;
            }
        }

        resAlign = resAlign || this.state.align;
        if (resAlign !== this.state.align) {
            this.setState({
                align: resAlign,
                innerAlign: true
            });
        }
    };

    Balloon.prototype.render = function render() {
        var _props = this.props,
            id = _props.id,
            type = _props.type,
            prefix = _props.prefix,
            className = _props.className,
            title = _props.title,
            alignEdge = _props.alignEdge,
            trigger = _props.trigger,
            triggerType = _props.triggerType,
            children = _props.children,
            closable = _props.closable,
            shouldUpdatePosition = _props.shouldUpdatePosition,
            delay = _props.delay,
            needAdjust = _props.needAdjust,
            autoAdjust = _props.autoAdjust,
            safeId = _props.safeId,
            autoFocus = _props.autoFocus,
            safeNode = _props.safeNode,
            onClick = _props.onClick,
            onHover = _props.onHover,
            animation = _props.animation,
            offset = _props.offset,
            style = _props.style,
            container = _props.container,
            popupContainer = _props.popupContainer,
            cache = _props.cache,
            popupStyle = _props.popupStyle,
            popupClassName = _props.popupClassName,
            popupProps = _props.popupProps,
            followTrigger = _props.followTrigger,
            rtl = _props.rtl,
            v2 = _props.v2,
            arrowPointToCenter = _props.arrowPointToCenter,
            others = objectWithoutProperties_default()(_props, ['id', 'type', 'prefix', 'className', 'title', 'alignEdge', 'trigger', 'triggerType', 'children', 'closable', 'shouldUpdatePosition', 'delay', 'needAdjust', 'autoAdjust', 'safeId', 'autoFocus', 'safeNode', 'onClick', 'onHover', 'animation', 'offset', 'style', 'container', 'popupContainer', 'cache', 'popupStyle', 'popupClassName', 'popupProps', 'followTrigger', 'rtl', 'v2', 'arrowPointToCenter']);

        if (container) {
            log.deprecated('container', 'popupContainer', 'Balloon');
        }

        var align = this.state.align;


        balloon_alignMap = alignEdge || v2 ? edgeMap : normalMap;
        var _prefix = this.context.prefix || prefix;

        var trOrigin = 'trOrigin';
        if (rtl) {
            trOrigin = 'rtlTrOrigin';
        }

        var _offset = [balloon_alignMap[align].offset[0] + offset[0], balloon_alignMap[align].offset[1] + offset[1]];
        var transformOrigin = balloon_alignMap[align][trOrigin];
        var _style = extends_default()({ transformOrigin: transformOrigin }, style);

        var content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            balloon_inner,
            extends_default()({}, util_obj.pickOthers(Object.keys(Balloon.propTypes), others), {
                id: id,
                title: title,
                prefix: _prefix,
                closable: closable,
                onClose: this._onClose,
                className: className,
                style: _style,
                align: align,
                type: type,
                rtl: rtl,
                alignEdge: alignEdge,
                v2: v2
            }),
            children
        );

        var triggerProps = {};
        triggerProps['aria-describedby'] = id;
        triggerProps.tabIndex = '0';

        var ariaTrigger = id ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(trigger, triggerProps) : trigger;

        var newTrigger = getDisabledCompatibleTrigger(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(ariaTrigger) ? ariaTrigger : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            null,
            ariaTrigger
        ));

        var otherProps = {
            delay: delay,
            shouldUpdatePosition: shouldUpdatePosition,
            needAdjust: needAdjust,
            align: balloon_alignMap[align].align,
            offset: _offset,
            safeId: safeId,
            onHover: onHover,
            onPosition: this._onPosition
        };

        if (v2) {
            delete otherProps.align;
            delete otherProps.shouldUpdatePosition;
            delete otherProps.needAdjust;
            delete otherProps.offset;
            delete otherProps.safeId;
            delete otherProps.onHover;
            delete otherProps.onPosition;

            extends_default()(otherProps, {
                placement: align,
                placementOffset: 12,
                v2: true,
                beforePosition: this.beforePosition,
                autoAdjust: autoAdjust
            });
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            balloon_Popup,
            extends_default()({}, popupProps, {
                followTrigger: followTrigger,
                trigger: newTrigger,
                cache: cache,
                triggerType: triggerType,
                visible: this.state.visible,
                onClick: onClick,
                afterClose: this.props.afterClose,
                onVisibleChange: this._onVisibleChange,
                animation: animation,
                autoFocus: triggerType === 'focus' ? false : autoFocus,
                safeNode: safeNode,
                container: popupContainer || container,
                className: popupClassName,
                style: popupStyle,
                rtl: rtl
            }, otherProps),
            content
        );
    };

    return Balloon;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), balloon__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, balloon__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内敛样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 浮层的内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.any,
    size: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 样式类型
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'primary']),
    /**
     * 标题
     * @version 1.23
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 弹层当前显示的状态
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认显示的状态
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层在显示和隐藏触发的事件
     * @param {Boolean} visible 弹层是否隐藏和显示
     * @param {String} type 触发弹层显示或隐藏的来源， closeClick 表示由自带的关闭按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    alignEdge: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 开启 v2 版本
     * @version 1.25
     */
    v2: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2] 箭头是否指向目标元素的中心
     * @version 1.25
     */
    arrowPointToCenter: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示关闭按钮
     */
    closable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹出层位置
     * @enumdesc 上, 右, 下, 左, 上左, 上右, 下左, 下右, 左上, 左下, 右上, 右下
     */
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(alignList),
    /**
     * 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量
     * e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px
     */
    offset: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 触发元素
     */
    trigger: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 触发行为
     * 鼠标悬浮, 鼠标点击('hover','click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若弹窗内容有复杂交互请使用click
     */
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),

    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 任何visible为false时会触发的事件
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    onHover: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * [v2] 是否进行自动位置调整，默认自动开启。
     * @version 1.25
     */
    autoAdjust: _prop_types_15_8_1_prop_types_default.a.bool,
    needAdjust: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层在触发以后的延时显示, 单位毫秒 ms
     */
    delay: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 浮层关闭后触发的事件, 如果有动画，则在动画结束后触发
     */
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    shouldUpdatePosition: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层出现后是否自动focus到内部第一个元素
     */
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 安全节点:对于triggetType为click的浮层,会在点击除了浮层外的其它区域时关闭浮层.safeNode用于添加不触发关闭的节点, 值可以是dom节点的id或者是节点的dom对象
     */
    safeNode: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 用来指定safeNode节点的id，和safeNode配合使用
     */
    safeId: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 配置动画的播放方式，格式是{in: '', out: ''}， 常用的动画class请查看Animate组件文档
     * @param {String} in 进场动画
     * @param {String} out 出场动画
     */
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool]),

    /**
     * 弹层的dom节点关闭时是否删除
     */
    cache: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    container: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层组件style，透传给Popup
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层组件className，透传给Popup
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层组件属性，透传给Popup
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层id, 传入值才会支持无障碍
     */
    id: _prop_types_15_8_1_prop_types_default.a.string
}, balloon__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    type: 'normal',
    closable: true,
    defaultVisible: false,
    size: 'medium',
    alignEdge: false,
    arrowPointToCenter: false,
    align: 'b',
    offset: [0, 0],
    trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', null),
    onClose: balloon_noop,
    afterClose: balloon_noop,
    onVisibleChange: balloon_noop,
    needAdjust: false,
    triggerType: 'hover',
    safeNode: undefined,
    safeId: null,
    autoFocus: true,
    animation: {
        in: 'zoomIn zoomInBig',
        out: 'zoomOut zoomOutBig'
    },
    cache: false,
    popupStyle: {},
    popupClassName: '',
    popupProps: {}
}, balloon__temp);
balloon_Balloon.displayName = 'Balloon';


/* harmony default export */ var balloon = (Object(react_lifecycles_compat_es["polyfill"])(balloon_Balloon));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/balloon/tooltip.js






var tooltip__class, tooltip__temp;








var tooltip_Popup = next_es_overlay.Popup;


var tooltip_alignMap = normalMap;
/** Balloon.Tooltip */
var tooltip_Tooltip = (tooltip__temp = tooltip__class = function (_React$Component) {
    inherits_default()(Tooltip, _React$Component);

    function Tooltip(props) {
        classCallCheck_default()(this, Tooltip);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.beforePosition = function (result, obj) {
            var placement = result.config.placement;

            if (placement !== _this.state.align) {
                _this.setState({
                    align: placement,
                    innerAlign: true
                });
            }

            if (_this.props.arrowPointToCenter) {
                var _obj$target = obj.target,
                    width = _obj$target.width,
                    height = _obj$target.height;

                if (placement.length === 2) {
                    var offset = normalMap[placement].offset;
                    switch (placement[0]) {
                        case 'b':
                        case 't':
                            {
                                var plus = offset[0] > 0 ? 1 : -1;
                                result.style.left = result.style.left + plus * width / 2 - offset[0];
                            }
                            break;
                        case 'l':
                        case 'r':
                            {
                                var _plus = offset[0] > 0 ? 1 : -1;
                                result.style.top = result.style.top + _plus * height / 2 - offset[1];
                            }
                            break;
                    }
                }
            }

            return result;
        };

        _this.state = {
            align: props.placement || props.align,
            innerAlign: false
        };
        return _this;
    }

    Tooltip.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if (nextProps.v2 && !prevState.innerAlign && 'align' in nextProps && nextProps.align !== prevState.align) {
            return {
                align: nextProps.align,
                innerAlign: false
            };
        }

        return null;
    };

    Tooltip.prototype.render = function render() {
        var _props = this.props,
            id = _props.id,
            className = _props.className,
            palign = _props.align,
            style = _props.style,
            prefix = _props.prefix,
            trigger = _props.trigger,
            children = _props.children,
            popupContainer = _props.popupContainer,
            popupProps = _props.popupProps,
            popupClassName = _props.popupClassName,
            popupStyle = _props.popupStyle,
            followTrigger = _props.followTrigger,
            triggerType = _props.triggerType,
            autoFocus = _props.autoFocus,
            alignEdge = _props.alignEdge,
            autoAdjust = _props.autoAdjust,
            rtl = _props.rtl,
            delay = _props.delay,
            v2 = _props.v2,
            arrowPointToCenter = _props.arrowPointToCenter,
            others = objectWithoutProperties_default()(_props, ['id', 'className', 'align', 'style', 'prefix', 'trigger', 'children', 'popupContainer', 'popupProps', 'popupClassName', 'popupStyle', 'followTrigger', 'triggerType', 'autoFocus', 'alignEdge', 'autoAdjust', 'rtl', 'delay', 'v2', 'arrowPointToCenter']);

        var trOrigin = 'trOrigin';
        if (rtl) {
            others.rtl = true;
            trOrigin = 'rtlTrOrigin';
        }

        tooltip_alignMap = alignEdge || v2 ? edgeMap : normalMap;
        var align = v2 ? this.state.align : palign;

        var transformOrigin = tooltip_alignMap[align][trOrigin];
        var _offset = tooltip_alignMap[align].offset;
        var _style = extends_default()({ transformOrigin: transformOrigin }, style);

        var content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            balloon_inner,
            extends_default()({}, others, {
                id: id,
                prefix: prefix,
                closable: false,
                isTooltip: true,
                className: className,
                style: _style,
                align: align,
                rtl: rtl,
                alignEdge: alignEdge,
                v2: v2
            }),
            children
        );

        var triggerProps = {};
        triggerProps['aria-describedby'] = id;
        triggerProps.tabIndex = '0';

        var newTriggerType = triggerType;

        if (triggerType === 'hover' && id) {
            newTriggerType = ['focus', 'hover'];
        }

        var ariaTrigger = id ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(trigger, triggerProps) : trigger;

        var newTrigger = getDisabledCompatibleTrigger(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(ariaTrigger) ? ariaTrigger : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            null,
            ariaTrigger
        ));

        var otherProps = {
            delay: delay,
            shouldUpdatePosition: true,
            needAdjust: false,
            align: tooltip_alignMap[align].align,
            offset: _offset
        };

        if (v2) {
            delete otherProps.align;
            delete otherProps.shouldUpdatePosition;
            delete otherProps.needAdjust;
            delete otherProps.offset;

            extends_default()(otherProps, {
                placement: align,
                placementOffset: 12,
                v2: true,
                beforePosition: this.beforePosition,
                autoAdjust: autoAdjust
            });
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            tooltip_Popup,
            extends_default()({
                role: 'tooltip',
                animation: {
                    in: 'zoomIn',
                    out: 'zoomOut'
                },
                className: popupClassName,
                container: popupContainer,
                followTrigger: followTrigger,
                trigger: newTrigger,
                triggerType: newTriggerType,
                style: popupStyle,
                rtl: rtl,
                autoFocus: triggerType === 'focus' ? false : autoFocus
            }, otherProps, popupProps),
            content
        );
    };

    return Tooltip;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), tooltip__class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * tooltip的内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹出层位置
     * @enumdesc 上, 右, 下, 左, 上左, 上右, 下左, 下右, 左上, 左下, 右上, 右下
     */
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(['t', 'r', 'b', 'l', 'tl', 'tr', 'bl', 'br', 'lt', 'lb', 'rt', 'rb']),
    /**
     * 触发元素
     */
    trigger: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 触发行为
     * 鼠标悬浮,  鼠标点击('hover', 'click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若有复杂交互，推荐使用triggerType为click的Balloon组件
     */
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 弹层组件style，透传给Popup
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层组件className，透传给Popup
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层组件属性，透传给Popup
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否pure render
     */
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层id, 传入值才会支持无障碍
     */
    id: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 如果需要让 Tooltip 内容可被点击，可以设置这个参数，例如 100
     */
    delay: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 开启 v2 版本
     */
    v2: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2] 箭头是否指向目标元素的中心
     */
    arrowPointToCenter: _prop_types_15_8_1_prop_types_default.a.bool
}, tooltip__class.defaultProps = {
    triggerType: 'hover',
    prefix: 'next-',
    align: 'b',
    delay: 50,
    trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', null),
    arrowPointToCenter: false
}, tooltip__temp);
tooltip_Tooltip.displayName = 'Tooltip';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/balloon/index.js







balloon.Tooltip = config_provider.config(tooltip_Tooltip, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('text' in props) {
            deprecated('text', 'children', 'Tooltip');

            var _props = props,
                text = _props.text,
                others = objectWithoutProperties_default()(_props, ['text']);

            props = extends_default()({ children: text }, others);
        }

        return props;
    }
});
balloon.Inner = balloon_inner;

/* harmony default export */ var es_balloon = (config_provider.config(balloon, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if (props.alignment) {
            deprecated('alignment', 'alignEdge', 'Balloon');

            var _props2 = props,
                alignment = _props2.alignment,
                others = objectWithoutProperties_default()(_props2, ['alignment']);

            props = extends_default()({ alignEdge: alignment === 'edge' }, others);
        }
        if (props.onCloseClick) {
            deprecated('onCloseClick', 'onVisibleChange(visible, [type = "closeClick"])', 'Balloon');

            var _props3 = props,
                onCloseClick = _props3.onCloseClick,
                onVisibleChange = _props3.onVisibleChange,
                _others = objectWithoutProperties_default()(_props3, ['onCloseClick', 'onVisibleChange']);

            var newOnVisibleChange = function newOnVisibleChange(visible, type) {
                if (type === 'closeClick') {
                    onCloseClick();
                }
                if (onVisibleChange) {
                    onVisibleChange(visible, type);
                }
            };
            props = extends_default()({ onVisibleChange: newOnVisibleChange }, _others);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dropdown/dropdown.js





var dropdown__class, dropdown__temp;






var dropdown_noop = func.noop,
    dropdown_makeChain = func.makeChain,
    dropdown_bindCtx = func.bindCtx;

var dropdown_Popup = next_es_overlay.Popup;

/**
 * Dropdown
 * @description 继承 Popup 的 API，除非特别说明
 */
var dropdown_Dropdown = (dropdown__temp = dropdown__class = function (_Component) {
    inherits_default()(Dropdown, _Component);

    function Dropdown(props) {
        classCallCheck_default()(this, Dropdown);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.state = {
            visible: 'visible' in props ? props.visible : props.defaultVisible || false,
            autoFocus: 'autoFocus' in props ? props.autoFocus : false
        };

        dropdown_bindCtx(_this, ['onTriggerKeyDown', 'onMenuClick', 'onVisibleChange']);
        return _this;
    }

    Dropdown.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
        var state = {};

        if ('visible' in nextProps) {
            state.visible = nextProps.visible;
        }

        return state;
    };

    Dropdown.prototype.getVisible = function getVisible() {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

        return 'visible' in props ? props.visible : this.state.visible;
    };

    Dropdown.prototype.onMenuClick = function onMenuClick() {
        var autoClose = this.props.autoClose;


        if (!('visible' in this.props) && autoClose) {
            this.setState({
                visible: false
            });
        }
        this.onVisibleChange(false, 'fromContent');
    };

    Dropdown.prototype.onVisibleChange = function onVisibleChange(visible, from) {
        this.setState({ visible: visible });

        this.props.onVisibleChange(visible, from);
    };

    Dropdown.prototype.onTriggerKeyDown = function onTriggerKeyDown() {
        var autoFocus = true;

        if ('autoFocus' in this.props) {
            autoFocus = this.props.autoFocus;
        }

        this.setState({
            autoFocus: autoFocus
        });
    };

    Dropdown.prototype.render = function render() {
        var _props = this.props,
            trigger = _props.trigger,
            rtl = _props.rtl,
            autoClose = _props.autoClose;


        var child = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].only(this.props.children);
        var content = child;
        if (typeof child.type === 'function' && child.type.isNextMenu) {
            content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                onItemClick: dropdown_makeChain(this.onMenuClick, child.props.onItemClick)
            });
        } else if (autoClose) {
            content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                onClick: dropdown_makeChain(this.onMenuClick, child.props.onClick)
            });
        }

        var newTrigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(trigger, {
            onKeyDown: dropdown_makeChain(this.onTriggerKeyDown, trigger.props.onKeyDown)
        });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            dropdown_Popup,
            extends_default()({}, this.props, {
                rtl: rtl,
                autoFocus: this.state.autoFocus,
                trigger: newTrigger,
                visible: this.getVisible(),
                onVisibleChange: this.onVisibleChange,
                canCloseByOutSideClick: true
            }),
            content
        );
    };

    return Dropdown;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), dropdown__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 弹层当前是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示或隐藏时触发的回调函数
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 触发弹层显示或者隐藏的元素
     */
    trigger: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 触发弹层显示或隐藏的操作类型，可以是 'click'，'hover'，或者它们组成的数组，如 ['hover', 'click']
     */
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 设置此属性，弹层无法显示或隐藏
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层相对于触发元素的定位, 详见 Overlay 的定位部分
     */
    align: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量
     * e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px
     */
    offset: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效
     */
    delay: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 弹层打开时是否让其中的元素自动获取焦点
     */
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示遮罩
     */
    hasMask: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 开启后，children 不管是不是Menu，点击后都默认关掉弹层（2.x默认设置为true）
     * @version 1.23
     */
    autoClose: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 隐藏时是否保留子节点
     */
    cache: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画
     * @default { in: 'expandInDown', out: 'expandOutUp' }
     */
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool])
}, dropdown__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    defaultVisible: false,
    autoClose: false,
    onVisibleChange: dropdown_noop,
    triggerType: 'hover',
    disabled: false,
    align: 'tl bl',
    offset: [0, 0],
    delay: 200,
    hasMask: false,
    cache: false,
    onPosition: dropdown_noop
}, dropdown__temp);
dropdown_Dropdown.displayName = 'Dropdown';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dropdown/index.js



/* harmony default export */ var dropdown = (config_provider.config(dropdown_Dropdown, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('triggerType' in props) {
            var triggerType = Array.isArray(props.triggerType) ? [].concat(props.triggerType) : [props.triggerType];

            if (triggerType.indexOf('focus') > -1) {
                deprecated('triggerType[focus]', 'triggerType[hover, click]', 'Balloon');
            }
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/item.js





var item__class, item__temp;







var item_bindCtx = func.bindCtx;
var item_pickOthers = util_obj.pickOthers;
var item_Item = (item__temp = item__class = function (_Component) {
    inherits_default()(Item, _Component);

    function Item(props) {
        classCallCheck_default()(this, Item);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        item_bindCtx(_this, ['handleClick', 'handleKeyDown']);
        return _this;
    }

    Item.prototype.componentDidMount = function componentDidMount() {
        this.itemNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);

        var _props = this.props,
            parentMode = _props.parentMode,
            root = _props.root,
            menu = _props.menu;

        if (menu) {
            this.menuNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(menu);
        } else if (parentMode === 'popup') {
            this.menuNode = this.itemNode.parentNode;
        } else {
            this.menuNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(root);
            var _root$props = root.props,
                prefix = _root$props.prefix,
                header = _root$props.header,
                footer = _root$props.footer;

            if (header || footer) {
                this.menuNode = this.menuNode.querySelector('.' + prefix + 'menu-content');
            }
        }

        this.setFocus();
    };

    Item.prototype.componentDidUpdate = function componentDidUpdate() {
        if (this.props.root.props.focusable) {
            this.setFocus();
        }
    };

    Item.prototype.focusable = function focusable() {
        var _props2 = this.props,
            root = _props2.root,
            type = _props2.type,
            disabled = _props2.disabled;
        var focusable = root.props.focusable;

        return focusable && (type === 'submenu' || !disabled);
    };

    Item.prototype.getFocused = function getFocused() {
        var _props3 = this.props,
            _key = _props3._key,
            root = _props3.root;
        var focusedKey = root.state.focusedKey;

        return focusedKey === _key;
    };

    Item.prototype.setFocus = function setFocus() {
        var focused = this.getFocused();
        if (focused) {
            if (this.focusable()) {
                this.itemNode.focus({ preventScroll: true });
            }
            if (this.menuNode && this.menuNode.scrollHeight > this.menuNode.clientHeight) {
                var scrollBottom = this.menuNode.clientHeight + this.menuNode.scrollTop;
                var itemBottom = this.itemNode.offsetTop + this.itemNode.offsetHeight;
                if (itemBottom > scrollBottom) {
                    this.menuNode.scrollTop = itemBottom - this.menuNode.clientHeight;
                } else if (this.itemNode.offsetTop < this.menuNode.scrollTop) {
                    this.menuNode.scrollTop = this.itemNode.offsetTop;
                }
            }
        }
    };

    Item.prototype.handleClick = function handleClick(e) {
        e.stopPropagation();

        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root,
            disabled = _props4.disabled;


        if (!disabled) {
            root.handleItemClick(_key, this, e);

            this.props.onClick && this.props.onClick(e);
        } else {
            e.preventDefault();
        }
    };

    Item.prototype.handleKeyDown = function handleKeyDown(e) {
        var _props5 = this.props,
            _key = _props5._key,
            root = _props5.root,
            type = _props5.type;


        if (this.focusable()) {
            root.handleItemKeyDown(_key, type, this, e);

            switch (e.keyCode) {
                case KEYCODE.ENTER:
                    {
                        if (!(type === 'submenu')) {
                            this.handleClick(e);
                        }
                        break;
                    }
            }
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    Item.prototype.getTitle = function getTitle(children) {
        if (typeof children === 'string') {
            return children;
        }
        return;
    };

    Item.prototype.render = function render() {
        var _cx;

        var _props6 = this.props,
            inlineLevel = _props6.inlineLevel,
            root = _props6.root,
            replaceClassName = _props6.replaceClassName,
            groupIndent = _props6.groupIndent,
            component = _props6.component,
            disabled = _props6.disabled,
            className = _props6.className,
            children = _props6.children,
            needIndent = _props6.needIndent,
            parentMode = _props6.parentMode,
            _key = _props6._key;

        var others = item_pickOthers(Object.keys(Item.propTypes), this.props);

        var _root$props2 = root.props,
            prefix = _root$props2.prefix,
            focusable = _root$props2.focusable,
            inlineIndent = _root$props2.inlineIndent,
            itemClassName = _root$props2.itemClassName,
            rtl = _root$props2.rtl;

        var focused = this.getFocused();

        var newClassName = replaceClassName ? className : _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'menu-item'] = true, _cx[prefix + 'disabled'] = disabled, _cx[prefix + 'focused'] = !focusable && focused, _cx[itemClassName] = !!itemClassName, _cx[className] = !!className, _cx));
        if (disabled) {
            others['aria-disabled'] = true;
            others['aria-hidden'] = true;
        }

        others.tabIndex = root.state.tabbableKey === _key ? '0' : '-1';

        if (parentMode === 'inline' && inlineLevel > 1 && inlineIndent > 0 && needIndent) {
            var _extends2;

            var paddingProp = rtl ? 'paddingRight' : 'paddingLeft';
            others.style = extends_default()({}, others.style || {}, (_extends2 = {}, _extends2[paddingProp] = inlineLevel * inlineIndent - (groupIndent || 0) * 0.4 * inlineIndent + 'px', _extends2));
        }
        var TagName = component;

        var role = 'menuitem';
        if ('selectMode' in root.props) {
            role = 'option';
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            TagName,
            extends_default()({
                role: role,
                title: this.getTitle(children)
            }, others, {
                className: newClassName,
                onClick: this.handleClick,
                onKeyDown: this.handleKeyDown
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'menu-item-inner' },
                children
            )
        );
    };

    return Item;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), item__class.propTypes = {
    _key: _prop_types_15_8_1_prop_types_default.a.string,
    level: _prop_types_15_8_1_prop_types_default.a.number,
    inlineLevel: _prop_types_15_8_1_prop_types_default.a.number,
    groupIndent: _prop_types_15_8_1_prop_types_default.a.number,
    root: _prop_types_15_8_1_prop_types_default.a.object,
    menu: _prop_types_15_8_1_prop_types_default.a.any,
    parent: _prop_types_15_8_1_prop_types_default.a.object,
    parentMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup']),
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['submenu', 'item']),
    component: _prop_types_15_8_1_prop_types_default.a.string,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    needIndent: _prop_types_15_8_1_prop_types_default.a.bool,
    replaceClassName: _prop_types_15_8_1_prop_types_default.a.bool
}, item__class.defaultProps = {
    component: 'li',
    groupIndent: 0,
    replaceClassName: false,
    needIndent: true
}, item__temp);
item_Item.displayName = 'Item';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/selectable-item.js





var selectable_item__class, selectable_item__temp;








var selectable_item_bindCtx = func.bindCtx;
var selectable_item_pickOthers = util_obj.pickOthers;

/**
 * Menu.Item
 * @order 0
 */

var selectable_item_SelectableItem = (selectable_item__temp = selectable_item__class = function (_Component) {
    inherits_default()(SelectableItem, _Component);

    function SelectableItem(props) {
        classCallCheck_default()(this, SelectableItem);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        selectable_item_bindCtx(_this, ['handleKeyDown', 'handleClick']);
        return _this;
    }

    SelectableItem.prototype.getSelected = function getSelected() {
        var _props = this.props,
            _key = _props._key,
            root = _props.root,
            selected = _props.selected;
        var selectMode = root.props.selectMode;
        var selectedKeys = root.state.selectedKeys;

        return selected || !!selectMode && selectedKeys.indexOf(_key) > -1;
    };

    SelectableItem.prototype.handleSelect = function handleSelect(e) {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root,
            onSelect = _props2.onSelect;

        if (onSelect) {
            onSelect(!this.getSelected(), this, e);
        } else {
            root.handleSelect(_key, !this.getSelected(), this);
        }
    };

    SelectableItem.prototype.handleKeyDown = function handleKeyDown(e) {
        if (e.keyCode === KEYCODE.SPACE && !this.props.disabled) {
            this.handleSelect(e);
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    SelectableItem.prototype.handleClick = function handleClick(e) {
        this.handleSelect(e);

        this.props.onClick && this.props.onClick(e);
    };

    SelectableItem.prototype.renderSelectedIcon = function renderSelectedIcon(selected) {
        var _cx;

        var _props3 = this.props,
            root = _props3.root,
            inlineIndent = _props3.inlineIndent,
            needIndent = _props3.needIndent,
            hasSelectedIcon = _props3.hasSelectedIcon,
            isSelectIconRight = _props3.isSelectIconRight,
            type = _props3.type;
        var _root$props = root.props,
            prefix = _root$props.prefix,
            rootSelectedIcon = _root$props.hasSelectedIcon,
            rootSelectIconRight = _root$props.isSelectIconRight,
            icons = _root$props.icons;


        var iconsSelect = icons.select;

        if (!Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["isValidElement"])(icons.select) && icons.select) {
            iconsSelect = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                null,
                icons.select
            );
        }

        var cls = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'menu-icon-selected'] = true, _cx[prefix + 'menu-symbol-icon-selected'] = !iconsSelect, _cx[prefix + 'menu-icon-right'] = ('isSelectIconRight' in this.props ? isSelectIconRight : rootSelectIconRight) && type !== 'submenu', _cx));

        return ('hasSelectedIcon' in this.props ? hasSelectedIcon : rootSelectedIcon) && selected ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(iconsSelect || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'select' }), {
            style: needIndent && inlineIndent > 0 ? { left: inlineIndent + 'px' } : null,
            className: cls
        }) : null;
    };

    SelectableItem.prototype.render = function render() {
        var _cx2;

        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root,
            className = _props4.className,
            disabled = _props4.disabled,
            helper = _props4.helper,
            children = _props4.children,
            needIndent = _props4.needIndent;
        var prefix = root.props.prefix;

        var others = selectable_item_pickOthers(Object.keys(SelectableItem.propTypes), this.props);
        var selected = this.getSelected();

        var newProps = extends_default()({
            _key: _key,
            root: root,
            disabled: disabled,
            type: 'item',
            className: _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'selected'] = selected, _cx2[className] = !!className, _cx2)),
            onKeyDown: this.handleKeyDown,
            onClick: !disabled ? this.handleClick : this.props.onClick,
            needIndent: needIndent
        }, others);

        if (!('title' in newProps) && typeof children === 'string') {
            newProps.title = children;
        }

        var textProps = {};

        if ('selectMode' in root.props) {
            textProps['aria-selected'] = selected;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            item_Item,
            newProps,
            this.renderSelectedIcon(selected),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                extends_default()({ className: prefix + 'menu-item-text' }, textProps),
                children
            ),
            helper ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'menu-item-helper' },
                helper
            ) : null
        );
    };

    return SelectableItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), selectable_item__class.menuChildType = 'item', selectable_item__class.propTypes = {
    _key: _prop_types_15_8_1_prop_types_default.a.string,
    root: _prop_types_15_8_1_prop_types_default.a.object,
    selected: _prop_types_15_8_1_prop_types_default.a.bool,
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    inlineIndent: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 帮助文本
     */
    helper: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 菜单项标签内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    needIndent: _prop_types_15_8_1_prop_types_default.a.bool,
    hasSelectedIcon: _prop_types_15_8_1_prop_types_default.a.bool,
    isSelectIconRight: _prop_types_15_8_1_prop_types_default.a.bool,
    icons: _prop_types_15_8_1_prop_types_default.a.object
}, selectable_item__class.defaultProps = {
    disabled: false,
    needIndent: true,
    icons: {}
}, selectable_item__temp);
selectable_item_SelectableItem.displayName = 'SelectableItem';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/util.js
var getWidth = function getWidth(elem) {
    var width = elem && typeof elem.getBoundingClientRect === 'function' && elem.getBoundingClientRect().width;
    if (width) {
        width = +width.toFixed(6);
    }
    return width || 0;
};

var normalizeToArray = function normalizeToArray(items) {
    if (items) {
        if (Array.isArray(items)) {
            return items;
        }
        return [items];
    }

    return [];
};

var isSibling = function isSibling(currentPos, targetPos) {
    var currentNums = currentPos.split('-').slice(0, -1);
    var targetNums = targetPos.split('-').slice(0, -1);

    return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
};

var isAncestor = function isAncestor(currentPos, targetPos) {
    var currentNums = currentPos.split('-');
    var targetNums = targetPos.split('-');

    return currentNums.length > targetNums.length && targetNums.every(function (num, index) {
        return num === currentNums[index];
    });
};

var isAvailablePos = function isAvailablePos(refPos, targetPos, _p2n) {
    var _p2n$targetPos = _p2n[targetPos],
        type = _p2n$targetPos.type,
        disabled = _p2n$targetPos.disabled;


    return isSibling(refPos, targetPos) && (type === 'item' && !disabled || type === 'submenu');
};

var getFirstAvaliablelChildKey = function getFirstAvaliablelChildKey(parentPos, _p2n) {
    var pos = Object.keys(_p2n).find(function (p) {
        return isAvailablePos(parentPos + '-0', p, _p2n);
    });
    return pos ? _p2n[pos].key : null;
};

/**
 * 如果 key 在 SelectedKeys 的选中链上（例如 SelectedKeys 是['0-1-2'],  key是 0-1 ），那么返回true
 *
 * selectMode?: string; 当前的选择模式，一般为 multiple single
 * selectedKeys?: string[]; 选中的key值
 * k2n?: object[] mapping;
 * _key?: string; 待测试的key值
 *
 * @return bool 当前元素是否有孩子被选中
 */
var getChildSelected = function getChildSelected(_ref) {
    var selectMode = _ref.selectMode,
        selectedKeys = _ref.selectedKeys,
        _k2n = _ref._k2n,
        _key = _ref._key;

    if (!_k2n) {
        return false;
    }

    var _keyPos = (_k2n[_key] && _k2n[_key].pos) + '-';

    return !!selectMode && selectedKeys.some(function (key) {
        return _k2n[key] && _k2n[key].pos.indexOf(_keyPos) === 0;
    });
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/popup-item.js






var popup_item__class, popup_item__temp;












var popup_item_bindCtx = func.bindCtx;
var popup_item_setStyle = util_dom.setStyle;

var popup_item_Popup = next_es_overlay.Popup;

/**
 * Menu.PopupItem
 * @order 2
 */
var popup_item_PopupItem = (popup_item__temp = popup_item__class = function (_Component) {
    inherits_default()(PopupItem, _Component);

    function PopupItem(props) {
        classCallCheck_default()(this, PopupItem);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        popup_item_bindCtx(_this, ['handleOpen', 'handlePopupOpen', 'handlePopupClose', 'getPopup']);
        return _this;
    }

    PopupItem.prototype.getPopup = function getPopup(ref) {
        this.popup = ref;
    };

    PopupItem.prototype.getOpen = function getOpen() {
        var _props = this.props,
            _key = _props._key,
            root = _props.root;
        var openKeys = root.state.openKeys;


        return openKeys.indexOf(_key) > -1;
    };

    PopupItem.prototype.getPopupProps = function getPopupProps() {
        var popupProps = this.props.root.props.popupProps;

        if (typeof popupProps === 'function') {
            popupProps = popupProps(this.props);
        }
        return popupProps;
    };

    PopupItem.prototype.handleOpen = function handleOpen(open, triggerType, e) {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root;

        root.handleOpen(_key, open, triggerType, e);

        var popupProps = this.popupProps;
        popupProps.onVisibleChange && popupProps.onVisibleChange(open, triggerType, e);
    };

    PopupItem.prototype.handlePopupOpen = function handlePopupOpen() {
        var _props3 = this.props,
            root = _props3.root,
            level = _props3.level,
            align = _props3.align,
            autoWidth = _props3.autoWidth;
        var _root$props = root.props,
            rootPopupAutoWidth = _root$props.popupAutoWidth,
            rootPopupAlign = _root$props.popupAlign,
            direction = _root$props.direction;

        var popupAlign = align || rootPopupAlign;
        var popupAutoWidth = 'autoWidth' in this.props ? autoWidth : rootPopupAutoWidth;
        try {
            // avoid errors while dom removed and js executing
            var itemNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);
            var menuNode = itemNode.parentNode;
            this.popupNode = this.popup.getInstance().overlay.getInstance().getContentNode();
            root.popupNodes.push(this.popupNode);

            if (popupAutoWidth) {
                var targetNode = direction === 'hoz' && level === 1 ? itemNode : menuNode;

                if (targetNode.offsetWidth > this.popupNode.offsetWidth) {
                    popup_item_setStyle(this.popupNode, 'width', targetNode.offsetWidth + 'px');
                }
            }
            if (popupAlign === 'outside' && !(direction === 'hoz' && level === 1)) {
                popup_item_setStyle(this.popupNode, 'height', menuNode.offsetHeight + 'px');
                this.popupNode.firstElementChild && popup_item_setStyle(this.popupNode.firstElementChild, 'overflow-y', 'auto');
            }
            // removeClass(this.popupNode, `${prefix}hide`);

            var popupProps = this.popupProps;
            popupProps.onOpen && popupProps.onOpen();
        } catch (error) {
            return null;
        }
    };

    PopupItem.prototype.handlePopupClose = function handlePopupClose() {
        var root = this.props.root;

        var popupNodes = root.popupNodes;
        var index = popupNodes.indexOf(this.popupNode);
        index > -1 && popupNodes.splice(index, 1);

        var popupProps = this.popupProps;
        popupProps.onClose && popupProps.onClose();
    };

    PopupItem.prototype.renderItem = function renderItem(selectable, children, others) {
        var _cx;

        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root,
            level = _props4.level,
            inlineLevel = _props4.inlineLevel,
            label = _props4.label,
            className = _props4.className;
        var _root$props2 = root.props,
            prefix = _root$props2.prefix,
            selectMode = _root$props2.selectMode;

        var NewItem = selectable ? selectable_item_SelectableItem : item_Item;
        var open = this.getOpen();

        var _root$state = root.state,
            selectedKeys = _root$state.selectedKeys,
            _k2n = _root$state._k2n;

        var isChildSelected = getChildSelected({
            _key: _key,
            _k2n: _k2n,
            selectMode: selectMode,
            selectedKeys: selectedKeys
        });

        var itemProps = {
            'aria-haspopup': true,
            'aria-expanded': open,
            _key: _key,
            root: root,
            level: level,
            inlineLevel: inlineLevel,
            type: 'submenu'
        };

        itemProps.className = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'opened'] = open, _cx[prefix + 'child-selected'] = isChildSelected, _cx[className] = !!className, _cx));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            NewItem,
            extends_default()({}, itemProps, others),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'menu-item-text' },
                label
            ),
            children
        );
    };

    PopupItem.prototype.renderPopup = function renderPopup(trigger, triggerType, positionProps, children) {
        var _this2 = this;

        var _props5 = this.props,
            root = _props5.root,
            level = _props5.level,
            selectable = _props5.selectable,
            propCls = _props5.className;
        var direction = root.props.direction;

        this.popupProps = this.getPopupProps();
        var open = this.getOpen();

        if (direction === 'hoz' && level === 1 && selectable) {
            positionProps.target = function () {
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(_this2);
            };
        }

        var posCls = positionProps.className,
            otherPostion = objectWithoutProperties_default()(positionProps, ['className']);

        var className = _classnames_2_3_1_classnames_default()(propCls, posCls);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            popup_item_Popup,
            extends_default()({
                ref: this.getPopup
            }, otherPostion, this.popupProps, {
                canCloseByEsc: false,
                trigger: trigger,
                triggerType: triggerType,
                visible: open,
                pinFollowBaseElementWhenFixed: true,
                onVisibleChange: this.handleOpen,
                onOpen: this.handlePopupOpen,
                onClose: this.handlePopupClose
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: className },
                children
            )
        );
    };

    PopupItem.prototype.render = function render() {
        var _this3 = this;

        var _props6 = this.props,
            root = _props6.root,
            level = _props6.level,
            hasSubMenu = _props6.hasSubMenu,
            selectableFromProps = _props6.selectable,
            children = _props6.children,
            triggerType = _props6.triggerType,
            align = _props6.align,
            noIcon = _props6.noIcon,
            rtl = _props6.rtl;

        var others = util_obj.pickOthers(Object.keys(PopupItem.propTypes), this.props);
        var _root$props3 = root.props,
            prefix = _root$props3.prefix,
            selectMode = _root$props3.selectMode,
            direction = _root$props3.direction,
            rootPopupAlign = _root$props3.popupAlign,
            rootTriggerType = _root$props3.triggerType;

        var popupAlign = align || rootPopupAlign;
        var newTriggerType = triggerType || (hasSubMenu ? rootTriggerType : 'hover');
        var newChildren = Array.isArray(children) ? children[0] : children;
        // let newChildren = Array.isArray(children) ? children[0] : children;
        // newChildren = cloneElement(newChildren, {
        //     className: cx({
        //         [`${prefix}menu-popup-content`]: true,
        //         [newChildren.props.className]: !!newChildren.props.className,
        //         [`${prefix}hide`]: popupAutoWidth || popupAlign === 'outside'
        //     })
        // });
        var selectable = selectMode && selectableFromProps;
        var triggerIsIcon = selectable && newTriggerType === 'click';
        var open = this.getOpen();

        var positionProps = {};
        var arrowProps = void 0;

        if (direction === 'hoz' && level === 1) {
            var _cx2;

            positionProps.align = 'tl bl';
            positionProps.className = prefix + 'menu-spacing-tb';

            arrowProps = {
                type: 'arrow-down',
                className: _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'menu-hoz-icon-arrow'] = true, _cx2[prefix + 'open'] = open, _cx2))
            };
        } else {
            if (popupAlign === 'outside') {
                positionProps.target = function () {
                    return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(root);
                };
                positionProps.align = 'tl tr';

                positionProps.className = prefix + 'menu-spacing-lr ' + prefix + 'menu-outside';
            } else {
                if (triggerIsIcon) {
                    positionProps.target = function () {
                        return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(_this3);
                    };
                }
                positionProps.align = 'tl tr';
                positionProps.className = prefix + 'menu-spacing-lr';
            }

            arrowProps = {
                type: 'arrow-right',
                className: prefix + 'menu-icon-arrow ' + prefix + 'menu-symbol-popupfold'
            };
        }

        var arrow = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, arrowProps);
        var trigger = triggerIsIcon ? arrow : this.renderItem(selectable, noIcon ? null : arrow, others);
        var popup = this.renderPopup(trigger, newTriggerType, positionProps, newChildren);
        return triggerIsIcon ? this.renderItem(selectable, popup, others) : popup;
    };

    return PopupItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), popup_item__class.menuChildType = 'submenu', popup_item__class.propTypes = {
    _key: _prop_types_15_8_1_prop_types_default.a.string,
    root: _prop_types_15_8_1_prop_types_default.a.object,
    level: _prop_types_15_8_1_prop_types_default.a.number,
    hasSubMenu: _prop_types_15_8_1_prop_types_default.a.bool,
    noIcon: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    selectable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 标签内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 自定义弹层内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 子菜单打开的触发行为
     */
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(['outside', 'follow']),
    autoWidth: _prop_types_15_8_1_prop_types_default.a.bool
}, popup_item__class.defaultProps = {
    selectable: false,
    noIcon: false
}, popup_item__temp);
popup_item_PopupItem.displayName = 'PopupItem';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/sub-menu.js







var sub_menu__class, sub_menu__temp;













var sub_menu_Expand = es_animate.Expand;
var sub_menu_bindCtx = func.bindCtx;

/**
 * Menu.SubMenu
 * @order 1
 */

var sub_menu_SubMenu = (sub_menu__temp = sub_menu__class = function (_Component) {
    inherits_default()(SubMenu, _Component);

    function SubMenu(props) {
        classCallCheck_default()(this, SubMenu);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        sub_menu_bindCtx(_this, ['handleMouseEnter', 'handleMouseLeave', 'handleClick', 'handleOpen', 'afterLeave']);
        return _this;
    }

    SubMenu.prototype.componentDidMount = function componentDidMount() {
        this.itemNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);
    };

    SubMenu.prototype.afterLeave = function afterLeave() {
        var _props = this.props,
            focused = _props.focused,
            root = _props.root;
        var focusable = root.props.focusable;

        if (focusable && focused) {
            this.itemNode.focus();
        }
    };

    SubMenu.prototype.getOpen = function getOpen() {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root;
        var openKeys = root.state.openKeys;


        return openKeys.indexOf(_key) > -1;
    };

    SubMenu.prototype.handleMouseEnter = function handleMouseEnter(e) {
        this.handleOpen(true);

        this.props.onMouseEnter && this.props.onMouseEnter(e);
    };

    SubMenu.prototype.handleMouseLeave = function handleMouseLeave(e) {
        this.handleOpen(false);

        this.props.onMouseLeave && this.props.onMouseLeave(e);
    };

    SubMenu.prototype.handleClick = function handleClick(e) {
        var _props3 = this.props,
            root = _props3.root,
            selectable = _props3.selectable;
        var selectMode = root.props.selectMode;

        if (selectMode && selectable) {
            e.stopPropagation();
        }

        var open = this.getOpen();
        this.handleOpen(!open);
    };

    SubMenu.prototype.handleOpen = function handleOpen(open, triggerType, e) {
        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root;

        root.handleOpen(_key, open, triggerType, e);
    };

    SubMenu.prototype.passParentToChildren = function passParentToChildren(children) {
        var _this2 = this;

        var _props5 = this.props,
            mode = _props5.mode,
            root = _props5.root;


        return external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child) {
            // to fix https://github.com/alibaba-fusion/next/issues/952
            if (typeof child !== 'function' && (typeof child === 'undefined' ? 'undefined' : typeof_default()(child)) !== 'object') {
                return child;
            }

            return Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, {
                parent: _this2,
                parentMode: mode || root.props.mode
            });
        });
    };

    SubMenu.prototype.renderInline = function renderInline() {
        var _cx, _cx2, _cx3, _cx4;

        var _props6 = this.props,
            _key = _props6._key,
            level = _props6.level,
            inlineLevel = _props6.inlineLevel,
            root = _props6.root,
            className = _props6.className,
            selectableFromProps = _props6.selectable,
            label = _props6.label,
            children = _props6.children,
            noIcon = _props6.noIcon,
            subMenuContentClassName = _props6.subMenuContentClassName,
            propsTriggerType = _props6.triggerType,
            parentMode = _props6.parentMode;
        var _root$props = root.props,
            prefix = _root$props.prefix,
            selectMode = _root$props.selectMode,
            rootTriggerType = _root$props.triggerType,
            inlineArrowDirection = _root$props.inlineArrowDirection,
            expandAnimation = _root$props.expandAnimation,
            rtl = _root$props.rtl;

        var triggerType = propsTriggerType || rootTriggerType;
        var open = this.getOpen();

        var _root$state = root.state,
            selectedKeys = _root$state.selectedKeys,
            _k2n = _root$state._k2n;

        var isChildSelected = getChildSelected({
            _key: _key,
            _k2n: _k2n,
            selectMode: selectMode,
            selectedKeys: selectedKeys
        });

        var others = util_obj.pickOthers(Object.keys(SubMenu.propTypes), this.props);

        var liProps = {
            className: _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'menu-sub-menu-wrapper'] = true, _cx[className] = !!className, _cx))
        };
        var itemProps = {
            'aria-expanded': open,
            _key: _key,
            level: level,
            role: 'listitem',
            inlineLevel: inlineLevel,
            root: root,
            type: 'submenu',
            component: 'div',
            parentMode: parentMode,
            className: _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'opened'] = open, _cx2[prefix + 'child-selected'] = isChildSelected, _cx2))
        };

        if (typeof label === 'string') {
            itemProps.title = label;
        }

        var arrorProps = {
            type: inlineArrowDirection === 'right' ? 'arrow-right' : 'arrow-down',
            className: _classnames_2_3_1_classnames_default()((_cx3 = {}, _cx3[prefix + 'menu-icon-arrow'] = true, _cx3[prefix + 'menu-icon-arrow-down'] = inlineArrowDirection === 'down', _cx3[prefix + 'menu-icon-arrow-right'] = inlineArrowDirection === 'right', _cx3[prefix + 'open'] = open, _cx3))
        };

        var selectable = !!selectMode && selectableFromProps;
        var NewItem = selectable ? selectable_item_SelectableItem : item_Item;

        if (triggerType === 'hover') {
            liProps.onMouseEnter = this.handleMouseEnter;
            liProps.onMouseLeave = this.handleMouseLeave;
        } else if (selectable) {
            arrorProps.onClick = this.handleClick;
        } else {
            itemProps.onClick = this.handleClick;
        }

        var newSubMenuContentClassName = _classnames_2_3_1_classnames_default()((_cx4 = {}, _cx4[prefix + 'menu-sub-menu'] = true, _cx4[subMenuContentClassName] = !!subMenuContentClassName, _cx4));

        var roleMenu = 'menu',
            roleItem = 'menuitem';
        if ('selectMode' in root.props) {
            roleMenu = 'listbox';
            roleItem = 'option';
        }

        var subMenu = open ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ul',
            { role: roleMenu, dir: rtl ? 'rtl' : undefined, className: newSubMenuContentClassName },
            this.passParentToChildren(children)
        ) : null;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            extends_default()({ role: roleItem }, others, liProps),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                NewItem,
                itemProps,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { className: prefix + 'menu-item-text' },
                    label
                ),
                noIcon ? null : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, arrorProps)
            ),
            expandAnimation ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                sub_menu_Expand,
                { animationAppear: false, afterLeave: this.afterLeave },
                subMenu
            ) : subMenu
        );
    };

    SubMenu.prototype.renderPopup = function renderPopup() {
        var _cx5;

        var _props7 = this.props,
            children = _props7.children,
            subMenuContentClassName = _props7.subMenuContentClassName,
            noIcon = _props7.noIcon,
            others = objectWithoutProperties_default()(_props7, ['children', 'subMenuContentClassName', 'noIcon']);

        var root = this.props.root;
        var _root$props2 = root.props,
            prefix = _root$props2.prefix,
            popupClassName = _root$props2.popupClassName,
            popupStyle = _root$props2.popupStyle,
            rtl = _root$props2.rtl;


        var newClassName = _classnames_2_3_1_classnames_default()((_cx5 = {}, _cx5[prefix + 'menu'] = true, _cx5[prefix + 'ver'] = true, _cx5[popupClassName] = !!popupClassName, _cx5[subMenuContentClassName] = !!subMenuContentClassName, _cx5));

        others.rtl = rtl;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            popup_item_PopupItem,
            extends_default()({}, others, { noIcon: noIcon, hasSubMenu: true }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'ul',
                { role: 'menu', dir: rtl ? 'rtl' : undefined, className: newClassName, style: popupStyle },
                this.passParentToChildren(children)
            )
        );
    };

    SubMenu.prototype.render = function render() {
        var _props8 = this.props,
            mode = _props8.mode,
            root = _props8.root;

        var newMode = mode || root.props.mode;

        return newMode === 'popup' ? this.renderPopup() : this.renderInline();
    };

    return SubMenu;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), sub_menu__class.menuChildType = 'submenu', sub_menu__class.propTypes = {
    _key: _prop_types_15_8_1_prop_types_default.a.string,
    root: _prop_types_15_8_1_prop_types_default.a.object,
    level: _prop_types_15_8_1_prop_types_default.a.number,
    inlineLevel: _prop_types_15_8_1_prop_types_default.a.number,
    groupIndent: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 标签内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否可选，该属性仅在设置 Menu 组件 selectMode 属性后生效
     */
    selectable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 子菜单打开方式，如果设置会覆盖 Menu 上的同名属性
     * @default Menu 的 mode 属性值
     */
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup']),
    /**
     * 是否需要提示当前项可展开的 icon，默认是有的
     */
    noIcon: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 菜单项或下一级子菜单
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    onMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    subMenuContentClassName: _prop_types_15_8_1_prop_types_default.a.string,
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(['outside', 'follow']),
    parentMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup']),
    parent: _prop_types_15_8_1_prop_types_default.a.any
}, sub_menu__class.defaultProps = {
    groupIndent: 0,
    noIcon: false,
    selectable: false
}, sub_menu__temp);
sub_menu_SubMenu.displayName = 'SubMenu';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/menu.js






var menu__class, menu__temp;











var menu_bindCtx = func.bindCtx;
var menu_pickOthers = util_obj.pickOthers,
    menu_isNil = util_obj.isNil;

var menu_noop = function noop() {};
var MENUITEM_OVERFLOWED_CLASSNAME = 'menuitem-overflowed';

var menu_getIndicatorsItem = function getIndicatorsItem(items, isPlaceholder) {
    var _cx;

    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var renderMore = arguments[3];

    var moreCls = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'menu-more'] = true, _cx));

    var style = {};
    // keep placehold to get width
    if (isPlaceholder) {
        style.visibility = 'hidden';
        style.display = 'inline-block';
        // indicators which not in use, just display: none
    } else if (items && items.length === 0) {
        style.display = 'none';
        style.visibility = 'unset';
    }

    if (renderMore && typeof renderMore === 'function') {
        var moreNode = renderMore(items);
        var renderMoreCls = _classnames_2_3_1_classnames_default()(moreCls, moreNode.props && moreNode.props.className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(moreNode) ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(moreNode, {
            style: style,
            className: renderMoreCls
        }) : moreNode;
    }

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        sub_menu_SubMenu,
        { label: '\xB7\xB7\xB7', noIcon: true, className: moreCls, style: style },
        items
    );
};

var menu_addIndicators = function addIndicators(_ref) {
    var children = _ref.children,
        lastVisibleIndex = _ref.lastVisibleIndex,
        prefix = _ref.prefix,
        renderMore = _ref.renderMore;

    var arr = [];

    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(children, function (child, index) {
        if (!child) {
            return;
        }
        var overflowedItems = [];

        if (index > lastVisibleIndex) {
            child = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                key: child.key || 'more-' + index,
                style: { display: 'none' },
                className: (child && child.className || '') + ' ' + MENUITEM_OVERFLOWED_CLASSNAME
            });
        }

        if (index === lastVisibleIndex + 1) {
            overflowedItems = children.slice(lastVisibleIndex + 1).map(function (c, i) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(c, {
                    key: c.key || 'more-' + index + '-' + i
                });
            });
            arr.push(menu_getIndicatorsItem(overflowedItems, false, prefix, renderMore));
        }

        arr.push(child);
    });

    arr.push(menu_getIndicatorsItem([], true, prefix, renderMore));

    return arr;
};

var menu_getNewChildren = function getNewChildren(_ref2) {
    var children = _ref2.children,
        root = _ref2.root,
        mode = _ref2.mode,
        lastVisibleIndex = _ref2.lastVisibleIndex,
        hozInLine = _ref2.hozInLine,
        prefix = _ref2.prefix,
        renderMore = _ref2.renderMore;

    var k2n = {};
    var p2n = {};

    var arr = hozInLine ? menu_addIndicators({
        children: children,
        lastVisibleIndex: lastVisibleIndex,
        prefix: prefix,
        renderMore: renderMore
    }) : children;

    var loop = function loop(children, posPrefix) {
        var indexWrapper = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { index: 0 };
        var inlineLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

        var keyArray = [];
        return external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child) {
            if (child && (typeof child.type === 'function' ||
            // `React.forwardRef(render)` returns a forwarding
            // object that includes `render` method, and the specific
            // `child.type` will be an object instead of a class or
            // function.
            typeof_default()(child.type) === 'object') && 'menuChildType' in child.type) {
                var newChild = void 0;

                var pos = void 0;
                var props = { root: root };

                if (['item', 'submenu', 'group'].indexOf(child.type.menuChildType) > -1) {
                    pos = posPrefix + '-' + indexWrapper.index++;
                    var key = typeof child.key === 'string' ? child.key : pos;

                    // filter out duplicate keys
                    if (keyArray.indexOf(key) > -1) {
                        return;
                    }

                    keyArray.push(key);

                    var level = pos.split('-').length - 1;
                    k2n[key] = p2n[pos] = {
                        key: key,
                        pos: pos,
                        mode: child.props.mode,
                        type: child.type.menuChildType,
                        disabled: child.props.disabled,
                        label: child.props.label || child.props.children
                    };

                    props.level = level;
                    props.inlineLevel = inlineLevel;
                    props._key = key;
                    props.groupIndent = child.type.menuChildType === 'group' ? 1 : 0;
                }

                // paddingLeft(or paddingRight in rtl) only make sense in inline mode
                // parent know children's inlineLevel
                // if parent's mode is popup, then children's inlineLevel must be 1;
                // else inlineLevel should add 1
                var childLevel = (child.props.mode || mode) === 'popup' ? 1 : inlineLevel + 1;

                switch (child.type.menuChildType) {
                    case 'submenu':
                        newChild = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, props, loop(child.props.children, pos, undefined, childLevel));
                        break;
                    case 'group':
                        newChild = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, props, loop(child.props.children, posPrefix, indexWrapper, props.level));
                        break;
                    case 'item':
                    case 'divider':
                        newChild = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, props);
                        break;
                    default:
                        newChild = child;
                        break;
                }

                return newChild;
            }

            return child;
        });
    };

    var newChildren = loop(arr, '0');

    return {
        newChildren: newChildren,
        _k2n: k2n,
        _p2n: p2n
    };
};

/**
 * Menu
 */
var menu_Menu = (menu__temp = menu__class = function (_Component) {
    inherits_default()(Menu, _Component);

    function Menu(props) {
        classCallCheck_default()(this, Menu);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.getUpdateChildren = function () {
            var _this$state = _this.state,
                root = _this$state.root,
                lastVisibleIndex = _this$state.lastVisibleIndex;


            return menu_getNewChildren(extends_default()({
                root: root,
                lastVisibleIndex: lastVisibleIndex
            }, _this.props));
        };

        _this.menuContentRef = function (ref) {
            _this.menuContent = ref;
        };

        _this.menuHeaderRef = function (ref) {
            _this.menuHeader = ref;
        };

        _this.menuFooterRef = function (ref) {
            _this.menuFooter = ref;
        };

        var _this$props = _this.props,
            prefix = _this$props.prefix,
            children = _this$props.children,
            selectedKeys = _this$props.selectedKeys,
            defaultSelectedKeys = _this$props.defaultSelectedKeys,
            focusedKey = _this$props.focusedKey,
            focusable = _this$props.focusable,
            autoFocus = _this$props.autoFocus,
            hozInLine = _this$props.hozInLine,
            renderMore = _this$props.renderMore;


        _this.state = {
            lastVisibleIndex: undefined
        };

        var _getNewChildren = menu_getNewChildren(extends_default()({
            root: _this
        }, _this.props)),
            newChildren = _getNewChildren.newChildren,
            _k2n = _getNewChildren._k2n,
            _p2n = _getNewChildren._p2n;

        var tabbableKey = focusable ? getFirstAvaliablelChildKey('0', _p2n) : undefined;

        _this.state = {
            root: _this,
            lastVisibleIndex: undefined,
            newChildren: newChildren,
            _k2n: _k2n,
            _p2n: _p2n,
            tabbableKey: tabbableKey,
            openKeys: _this.getInitOpenKeys(props, _k2n, _p2n),
            selectedKeys: normalizeToArray(selectedKeys || defaultSelectedKeys),
            focusedKey: !menu_isNil(_this.props.focusedKey) ? focusedKey : focusable && autoFocus ? tabbableKey : null
        };

        menu_bindCtx(_this, ['handleOpen', 'handleSelect', 'handleItemClick', 'handleItemKeyDown', 'onBlur', 'adjustChildrenWidth']);

        _this.popupNodes = [];
        return _this;
    }

    Menu.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        if ('openKeys' in nextProps) {
            state.openKeys = normalizeToArray(nextProps.openKeys);
            // 从展开状态变为收起状态，才需要清空openKeys
        } else if ('mode' in nextProps && nextProps.mode === 'popup' && prevState.lastMode === 'inline') {
            state.openKeys = [];
        }

        if ('selectedKeys' in nextProps) {
            state.selectedKeys = normalizeToArray(nextProps.selectedKeys);
        }
        if ('focusedKey' in nextProps) {
            state.focusedKey = nextProps.focusedKey;
        }

        state.lastMode = nextProps.mode;

        var _getNewChildren2 = menu_getNewChildren(extends_default()({
            root: prevState.root,
            lastVisibleIndex: prevState.lastVisibleIndex
        }, nextProps)),
            newChildren = _getNewChildren2.newChildren,
            _k2n = _getNewChildren2._k2n,
            _p2n = _getNewChildren2._p2n;

        state.newChildren = newChildren;
        state._k2n = _k2n;
        state._p2n = _p2n;

        if (nextProps.focusable) {
            if (prevState.tabbableKey in _k2n) {
                if (prevState.focusedKey) {
                    state.tabbableKey = prevState.focusedKey;
                }
            } else {
                state.tabbableKey = getFirstAvaliablelChildKey('0', _p2n);
            }
        }

        return state;
    };

    Menu.prototype.componentDidMount = function componentDidMount() {
        this.menuNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);

        this.adjustChildrenWidth();

        if (this.props.hozInLine) {
            util_events.on(window, 'resize', this.adjustChildrenWidth);
        }
    };

    Menu.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (prevState.lastVisibleIndex !== this.state.lastVisibleIndex) {
            this.adjustChildrenWidth();
        }
    };

    Menu.prototype.componentWillUnmount = function componentWillUnmount() {
        util_events.off(window, 'resize', this.adjustChildrenWidth);
    };

    Menu.prototype.adjustChildrenWidth = function adjustChildrenWidth() {
        var _props = this.props,
            direction = _props.direction,
            prefix = _props.prefix,
            header = _props.header,
            footer = _props.footer,
            hozInLine = _props.hozInLine;

        if (direction !== 'hoz' || !hozInLine) {
            return;
        }

        if (!this.menuNode && !this.menuContent) {
            return;
        }

        var children = [],
            spaceWidth = void 0;

        if (header || footer) {
            children = this.menuContent.children;
            spaceWidth = getWidth(this.menuNode) - getWidth(this.menuHeader) - getWidth(this.menuFooter);
        } else {
            children = this.menuNode.children;
            spaceWidth = getWidth(this.menuNode);
        }

        if (children.length < 2) {
            return;
        }

        var currentSumWidth = 0,
            lastVisibleIndex = -1;

        var moreNode = '';

        var menuItemNodes = [].slice.call(children).filter(function (node) {
            if (node.className.split(' ').indexOf(prefix + 'menu-more') < 0) {
                return true;
            } else {
                moreNode = node;
            }
            return false;
        });

        var overflowedItems = menuItemNodes.filter(function (c) {
            return c.className.split(' ').indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0;
        });

        overflowedItems.forEach(function (c) {
            util_dom.setStyle(c, 'display', 'inline-block');
        });

        util_dom.setStyle(moreNode, 'display', 'inline-block');
        var moreWidth = getWidth(moreNode);

        this.menuItemSizes = menuItemNodes.map(function (c) {
            return getWidth(c);
        });
        var totalLen = this.menuItemSizes.length;

        overflowedItems.forEach(function (c) {
            util_dom.setStyle(c, 'display', 'none');
        });

        this.menuItemSizes.forEach(function (liWidth, i) {
            currentSumWidth += liWidth;
            if (i >= totalLen - 1 && currentSumWidth <= spaceWidth || currentSumWidth + moreWidth <= spaceWidth) {
                lastVisibleIndex++;
            }
        });

        if (lastVisibleIndex >= totalLen - 1) {
            util_dom.setStyle(moreNode, 'display', 'none');
        }

        this.setState(extends_default()({
            lastVisibleIndex: lastVisibleIndex
        }, this.getUpdateChildren()));
    };

    Menu.prototype.onBlur = function onBlur(e) {
        this.setState({
            focusedKey: undefined
        });

        this.props.onBlur && this.props.onBlur(e);
    };

    Menu.prototype.getInitOpenKeys = function getInitOpenKeys(props, _k2n, _p2n) {
        var initOpenKeys = void 0;

        var openKeys = props.openKeys,
            defaultOpenKeys = props.defaultOpenKeys,
            defaultOpenAll = props.defaultOpenAll,
            mode = props.mode,
            openMode = props.openMode;

        if (openKeys) {
            initOpenKeys = openKeys;
        } else if (defaultOpenAll && mode === 'inline' && openMode === 'multiple') {
            initOpenKeys = Object.keys(_k2n).filter(function (key) {
                return _k2n[key].type === 'submenu';
            });
        } else {
            initOpenKeys = defaultOpenKeys;
        }

        return normalizeToArray(initOpenKeys);
    };

    Menu.prototype.handleOpen = function handleOpen(key, open, triggerType, e) {
        var newOpenKeys = void 0;

        var _props2 = this.props,
            mode = _props2.mode,
            openMode = _props2.openMode;
        var _state = this.state,
            openKeys = _state.openKeys,
            _k2n = _state._k2n;

        var index = openKeys.indexOf(key);
        if (open && index === -1) {
            if (mode === 'inline') {
                if (openMode === 'single') {
                    newOpenKeys = openKeys.filter(function (k) {
                        return _k2n[k] && !isSibling(_k2n[key].pos, _k2n[k].pos);
                    });
                    newOpenKeys.push(key);
                } else {
                    newOpenKeys = openKeys.concat(key);
                }
            } else {
                newOpenKeys = openKeys.filter(function (k) {
                    return _k2n[k] && isAncestor(_k2n[key].pos, _k2n[k].pos);
                });
                newOpenKeys.push(key);
            }
        } else if (!open && index > -1) {
            if (mode === 'inline') {
                newOpenKeys = [].concat(openKeys.slice(0, index), openKeys.slice(index + 1));
            } else if (triggerType === 'docClick') {
                if (!this.popupNodes.concat(this.menuNode).some(function (node) {
                    return node.contains(e.target);
                })) {
                    newOpenKeys = [];
                }
            } else {
                newOpenKeys = openKeys.filter(function (k) {
                    return k !== key && _k2n[k] && !isAncestor(_k2n[k].pos, _k2n[key].pos);
                });
            }
        }

        if (newOpenKeys) {
            if (menu_isNil(this.props.openKeys)) {
                this.setState(extends_default()({
                    openKeys: newOpenKeys
                }, this.getUpdateChildren()));
            }

            this.props.onOpen(newOpenKeys, {
                key: key,
                open: open
            });
        }
    };

    Menu.prototype.getPath = function getPath(key, _k2n, _p2n) {
        var keyPath = [];
        var labelPath = [];

        var pos = _k2n[key].pos;
        var nums = pos.split('-');
        for (var i = 1; i < nums.length - 1; i++) {
            var parentNums = nums.slice(0, i + 1);
            var parentPos = parentNums.join('-');
            var parent = _p2n[parentPos];
            keyPath.push(parent.key);
            labelPath.push(parent.label);
        }

        return {
            keyPath: keyPath,
            labelPath: labelPath
        };
    };

    Menu.prototype.handleSelect = function handleSelect(key, select, menuItem) {
        var _state2 = this.state,
            _k2n = _state2._k2n,
            _p2n = _state2._p2n;

        var pos = _k2n[key].pos;
        var level = pos.split('-').length - 1;
        if (this.props.shallowSelect && level > 1) {
            return;
        }

        var newSelectedKeys = void 0;

        var selectMode = this.props.selectMode;
        var selectedKeys = this.state.selectedKeys;

        var index = selectedKeys.indexOf(key);
        if (select && index === -1) {
            if (selectMode === 'single') {
                newSelectedKeys = [key];
            } else if (selectMode === 'multiple') {
                newSelectedKeys = selectedKeys.concat(key);
            }
        } else if (!select && index > -1 && selectMode === 'multiple') {
            newSelectedKeys = [].concat(selectedKeys.slice(0, index), selectedKeys.slice(index + 1));
        }

        if (newSelectedKeys) {
            if (menu_isNil(this.props.selectedKeys)) {
                this.setState({
                    selectedKeys: newSelectedKeys
                });
            }

            this.props.onSelect(newSelectedKeys, menuItem, extends_default()({
                key: key,
                select: select,
                label: _k2n[key].label
            }, this.getPath(key, _k2n, _p2n)));
        }
    };

    Menu.prototype.handleItemClick = function handleItemClick(key, item, e) {
        var _k2n = this.state._k2n;

        if (this.props.focusable) {
            if (menu_isNil(this.props.focusedKey)) {
                this.setState({
                    focusedKey: key
                });
            }

            this.props.onItemFocus(key, item, e);
        }

        if (item.props.type === 'item') {
            if (item.props.parentMode === 'popup' && this.state.openKeys.length) {
                if (menu_isNil(this.props.openKeys)) {
                    this.setState({
                        openKeys: []
                    });
                }

                this.props.onOpen([], {
                    key: this.state.openKeys.sort(function (prevKey, nextKey) {
                        return _k2n[nextKey].pos.split('-').length - _k2n[prevKey].pos.split('-').length;
                    })[0],
                    open: false
                });
            }

            this.props.onItemClick(key, item, e);
        }
    };

    Menu.prototype.getAvailableKey = function getAvailableKey(pos, prev) {
        var _p2n = this.state._p2n;

        var ps = Object.keys(_p2n).filter(function (p) {
            return isAvailablePos(pos, p, _p2n);
        });
        if (ps.length > 1) {
            var index = ps.indexOf(pos);
            var targetIndex = void 0;
            if (prev) {
                targetIndex = index === 0 ? ps.length - 1 : index - 1;
            } else {
                targetIndex = index === ps.length - 1 ? 0 : index + 1;
            }

            return _p2n[ps[targetIndex]].key;
        }

        return null;
    };

    Menu.prototype.getParentKey = function getParentKey(pos) {
        return this.state._p2n[pos.slice(0, pos.length - 2)].key;
    };

    Menu.prototype.handleItemKeyDown = function handleItemKeyDown(key, type, item, e) {
        if ([KEYCODE.UP, KEYCODE.DOWN, KEYCODE.RIGHT, KEYCODE.LEFT, KEYCODE.ENTER, KEYCODE.ESC, KEYCODE.SPACE].indexOf(e.keyCode) > -1) {
            e.preventDefault();
            e.stopPropagation();
        }

        var focusedKey = this.state.focusedKey;
        var _state3 = this.state,
            _p2n = _state3._p2n,
            _k2n = _state3._k2n;
        var direction = this.props.direction;

        var pos = _k2n[key].pos;
        var level = pos.split('-').length - 1;
        switch (e.keyCode) {
            case KEYCODE.UP:
                {
                    var avaliableKey = this.getAvailableKey(pos, true);
                    if (avaliableKey) {
                        focusedKey = avaliableKey;
                    }
                    break;
                }
            case KEYCODE.DOWN:
                {
                    var _avaliableKey = void 0;
                    if (direction === 'hoz' && level === 1 && type === 'submenu') {
                        this.handleOpen(key, true);
                        _avaliableKey = getFirstAvaliablelChildKey(pos, _p2n);
                    } else {
                        _avaliableKey = this.getAvailableKey(pos, false);
                    }
                    if (_avaliableKey) {
                        focusedKey = _avaliableKey;
                    }
                    break;
                }
            case KEYCODE.RIGHT:
                {
                    var _avaliableKey2 = void 0;
                    if (direction === 'hoz' && level === 1) {
                        _avaliableKey2 = this.getAvailableKey(pos, false);
                    } else if (type === 'submenu') {
                        this.handleOpen(key, true);
                        _avaliableKey2 = getFirstAvaliablelChildKey(pos, _p2n);
                    }
                    if (_avaliableKey2) {
                        focusedKey = _avaliableKey2;
                    }
                    break;
                }
            case KEYCODE.ENTER:
                {
                    if (type === 'submenu') {
                        this.handleOpen(key, true);
                        var _avaliableKey3 = getFirstAvaliablelChildKey(pos, _p2n);
                        if (_avaliableKey3) {
                            focusedKey = _avaliableKey3;
                        }
                    }
                    break;
                }
            case KEYCODE.LEFT:
                {
                    if (direction === 'hoz' && level === 1) {
                        var _avaliableKey4 = this.getAvailableKey(pos, true);
                        if (_avaliableKey4) {
                            focusedKey = _avaliableKey4;
                        }
                    } else if (level > 1) {
                        var parentKey = this.getParentKey(pos);
                        this.handleOpen(parentKey, false);
                        focusedKey = parentKey;
                    }
                    break;
                }
            case KEYCODE.ESC:
                if (level > 1) {
                    var _parentKey = this.getParentKey(pos);
                    this.handleOpen(_parentKey, false);
                    focusedKey = _parentKey;
                }
                break;

            case KEYCODE.TAB:
                focusedKey = null;
                break;
            default:
                break;
        }

        if (focusedKey !== this.state.focusedKey) {
            if (menu_isNil(this.props.focusedKey)) {
                this.setState({
                    focusedKey: focusedKey
                });
            }

            this.props.onItemKeyDown(focusedKey, item, e);
            this.props.onItemFocus(focusedKey, e);
        }
    };

    Menu.prototype.render = function render() {
        var _cx2;

        var _props3 = this.props,
            prefix = _props3.prefix,
            className = _props3.className,
            direction = _props3.direction,
            hozAlign = _props3.hozAlign,
            header = _props3.header,
            footer = _props3.footer,
            embeddable = _props3.embeddable,
            selectMode = _props3.selectMode,
            hozInLine = _props3.hozInLine,
            rtl = _props3.rtl,
            flatenContent = _props3.flatenContent;
        var newChildren = this.state.newChildren;

        var others = menu_pickOthers(Object.keys(Menu.propTypes), this.props);

        var newClassName = _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'menu'] = true, _cx2[prefix + 'ver'] = direction === 'ver', _cx2[prefix + 'hoz'] = direction === 'hoz', _cx2[prefix + 'menu-embeddable'] = embeddable, _cx2[prefix + 'menu-nowrap'] = hozInLine, _cx2[prefix + 'menu-selectable-' + selectMode] = selectMode, _cx2[className] = !!className, _cx2));

        var role = direction === 'hoz' ? 'menubar' : 'menu';
        var ariaMultiselectable = void 0;
        if ('selectMode' in this.props) {
            role = 'listbox';
            ariaMultiselectable = !!(selectMode === 'multiple');
        }

        var headerElement = header ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            { className: prefix + 'menu-header', ref: this.menuHeaderRef },
            header
        ) : null;
        var itemsElement = !flatenContent && (header || footer) ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ul',
            { className: prefix + 'menu-content', ref: this.menuContentRef },
            newChildren
        ) : newChildren;
        var footerElement = footer ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            { className: prefix + 'menu-footer', ref: this.menuFooterRef },
            footer
        ) : null;
        var shouldWrapItemsAndFooter = hozAlign === 'right' && !!header;

        if (rtl) {
            others.dir = 'rtl';
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ul',
            extends_default()({
                role: role,
                onBlur: this.onBlur,
                className: newClassName,
                onKeyDown: this.handleEnter,
                'aria-multiselectable': ariaMultiselectable
            }, others),
            headerElement,
            shouldWrapItemsAndFooter ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'menu-hoz-right' },
                itemsElement,
                footerElement
            ) : null,
            !shouldWrapItemsAndFooter ? itemsElement : null,
            !shouldWrapItemsAndFooter ? footerElement : null
        );
    };

    return Menu;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), menu__class.isNextMenu = true, menu__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 菜单项和子菜单
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 点击菜单项触发的回调函数
     * @param {String} key 点击的菜单项的 key 值
     * @param {Object} item 点击的菜单项对象
     * @param {Object} event 点击的事件对象
     */
    onItemClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 当前打开的子菜单的 key 值
     */
    openKeys: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 初始打开的子菜单的 key 值
     */
    defaultOpenKeys: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 初始展开所有的子菜单，只在 mode 设置为 'inline' 以及 openMode 设置为 'multiple' 下生效，优先级高于 defaultOpenKeys
     */
    defaultOpenAll: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 打开或关闭子菜单触发的回调函数
     * @param {Array} key 打开的所有子菜单的 key 值
     * @param {Object} extra 额外参数
     * @param {String} extra.key 当前操作子菜单的 key 值
     * @param {Boolean} extra.open 是否是打开
     */
    onOpen: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 子菜单打开的模式
     */
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup']),
    /**
     * 子菜单打开的触发行为
     */
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 展开内连子菜单的模式，同时可以展开一个子菜单还是多个子菜单，该属性仅在 mode 为 inline 时生效
     */
    openMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple']),
    /**
     * 内连子菜单缩进距离
     */
    inlineIndent: _prop_types_15_8_1_prop_types_default.a.number,
    inlineArrowDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['down', 'right']),
    /**
     * 是否自动让弹层的宽度和菜单项保持一致，如果弹层的宽度比菜单项小则和菜单项保持一致，如果宽度大于菜单项则不做处理
     */
    popupAutoWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层的对齐方式
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['follow', 'outside']),
    /**
     * 弹层自定义 props
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.func]),
    /**
     * 弹出子菜单自定义 className
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹出子菜单自定义 style
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 当前选中菜单项的 key 值
     */
    selectedKeys: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 初始选中菜单项的 key 值
     */
    defaultSelectedKeys: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 选中或取消选中菜单项触发的回调函数
     * @param {Array} selectedKeys 选中的所有菜单项的值
     * @param {Object} item 选中或取消选中的菜单项
     * @param {Object} extra 额外参数
     * @param {Boolean} extra.select 是否是选中
     * @param {Array} extra.key 菜单项的 key
     * @param {Object} extra.label 菜单项的文本
     * @param {Array} extra.keyPath 菜单项 key 的路径
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选中模式，单选还是多选，默认无值，不可选
     */
    selectMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple']),
    /**
     * 是否只能选择第一层菜单项（不能选择子菜单中的菜单项）
     */
    shallowSelect: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示选中图标，如果设置为 false 需配合配置平台设置选中时的背景色以示区分
     */
    hasSelectedIcon: _prop_types_15_8_1_prop_types_default.a.bool,
    labelToggleChecked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否将选中图标居右，仅当 hasSelectedIcon 为true 时生效。
     * 注意：SubMenu 上的选中图标一直居左，不受此API控制
     */
    isSelectIconRight: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 菜单第一层展示方向
     */
    direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['ver', 'hoz']),
    /**
     * 横向菜单条 item 和 footer 的对齐方向，在 direction 设置为 'hoz' 并且 header 存在时生效
     */
    hozAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
    /**
     * 横向菜单模式下，是否维持在一行，即超出一行折叠成 SubMenu 显示， 仅在 direction='hoz' mode='popup' 时生效
     */
    hozInLine: _prop_types_15_8_1_prop_types_default.a.bool,
    renderMore: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义菜单头部
     */
    header: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 自定义菜单尾部
     */
    footer: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否自动获得焦点
     */
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当前获得焦点的子菜单或菜单项 key 值
     */
    focusedKey: _prop_types_15_8_1_prop_types_default.a.string,
    focusable: _prop_types_15_8_1_prop_types_default.a.bool,
    onItemFocus: _prop_types_15_8_1_prop_types_default.a.func,
    onBlur: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否开启嵌入式模式，一般用于Layout的布局中，开启后没有默认背景、外层border、box-shadow，可以配合`<Menu style={{lineHeight: '100px'}}>` 自定义高度
     * @version 1.18
     */
    embeddable: _prop_types_15_8_1_prop_types_default.a.bool,
    onItemKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    expandAnimation: _prop_types_15_8_1_prop_types_default.a.bool,
    itemClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 可配置的icons，包括 select 等
     */
    icons: _prop_types_15_8_1_prop_types_default.a.object,
    // content 是否为单层模式，目前主要在有 header 或 footer 的时候有意义
    flatenContent: _prop_types_15_8_1_prop_types_default.a.bool
}), menu__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    defaultOpenKeys: [],
    defaultOpenAll: false,
    onOpen: menu_noop,
    mode: 'inline',
    triggerType: 'click',
    openMode: 'multiple',
    inlineIndent: 20,
    inlineArrowDirection: 'down',
    popupAutoWidth: false,
    popupAlign: 'follow',
    popupProps: {},
    defaultSelectedKeys: [],
    onSelect: menu_noop,
    shallowSelect: false,
    hasSelectedIcon: true,
    isSelectIconRight: false,
    labelToggleChecked: true,
    direction: 'ver',
    hozAlign: 'left',
    hozInLine: false,
    autoFocus: false,
    focusable: true,
    embeddable: false,
    onItemFocus: menu_noop,
    onItemKeyDown: menu_noop,
    onItemClick: menu_noop,
    expandAnimation: true,
    icons: {}
}, menu__temp);
menu_Menu.displayName = 'Menu';


/* harmony default export */ var view_menu = (Object(react_lifecycles_compat_es["polyfill"])(menu_Menu));
// EXTERNAL MODULE: ./node_modules/_babel-runtime@6.26.0@babel-runtime/helpers/createClass.js
var createClass = __webpack_require__(68);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/mixin-ui-state/index.js







var mixin_ui_state_makeChain = func.makeChain;
// UIState 为一些特殊元素的状态响应提供了标准的方式，
// 尤其适合CSS无法完全定制的控件，比如checkbox，radio等。
// 若组件 disable 则自行判断是否需要绑定状态管理。
// 注意：disable 不会触发事件，请使用resetUIState还原状态
/* eslint-disable react/prop-types */

var mixin_ui_state_UIState = function (_Component) {
    inherits_default()(UIState, _Component);

    function UIState(props) {
        classCallCheck_default()(this, UIState);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.state = {};
        ['_onUIFocus', '_onUIBlur'].forEach(function (item) {
            _this[item] = _this[item].bind(_this);
        });
        return _this;
    }
    // base 事件绑定的元素


    UIState.prototype.getStateElement = function getStateElement(base) {
        var _props = this.props,
            onFocus = _props.onFocus,
            onBlur = _props.onBlur;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(base, {
            onFocus: mixin_ui_state_makeChain(this._onUIFocus, onFocus),
            onBlur: mixin_ui_state_makeChain(this._onUIBlur, onBlur)
        });
    };
    // 获取状态classname


    UIState.prototype.getStateClassName = function getStateClassName() {
        var focused = this.state.focused;

        return _classnames_2_3_1_classnames_default()({
            focused: focused
        });
    };
    // 复原状态


    UIState.prototype.resetUIState = function resetUIState() {
        this.setState({
            focused: false
        });
    };

    UIState.prototype._onUIFocus = function _onUIFocus() {
        this.setState({
            focused: true
        });
    };

    UIState.prototype._onUIBlur = function _onUIBlur() {
        this.setState({
            focused: false
        });
    };

    return UIState;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]);

mixin_ui_state_UIState.displayName = 'UIState';


/* harmony default export */ var mixin_ui_state = (mixin_ui_state_UIState);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/checkbox/with-context.js







function with_context_withContext(Checkbox) {
    var _class, _temp;

    return _temp = _class = function (_React$Component) {
        inherits_default()(WrappedComp, _React$Component);

        function WrappedComp() {
            classCallCheck_default()(this, WrappedComp);

            return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
        }

        WrappedComp.prototype.render = function render() {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Checkbox, extends_default()({}, this.props, { context: this.context }));
        };

        return WrappedComp;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.displayName = 'Checkbox', _class.contextTypes = {
        onChange: _prop_types_15_8_1_prop_types_default.a.func,
        __group__: _prop_types_15_8_1_prop_types_default.a.bool,
        selectedValue: _prop_types_15_8_1_prop_types_default.a.array,
        disabled: _prop_types_15_8_1_prop_types_default.a.bool,
        prefix: _prop_types_15_8_1_prop_types_default.a.string
    }, _temp;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/checkbox/checkbox.js







var checkbox__class, checkbox__temp;











var checkbox_noop = func.noop;
function checkbox_isChecked(selectedValue, value) {
    return selectedValue.indexOf(value) > -1;
}
/**
 * Checkbox
 * @order 1
 */
var checkbox_Checkbox = (checkbox__temp = checkbox__class = function (_UIState) {
    inherits_default()(Checkbox, _UIState);

    function Checkbox(props) {
        classCallCheck_default()(this, Checkbox);

        var _this = possibleConstructorReturn_default()(this, _UIState.call(this, props));

        var context = props.context;

        var checked = void 0,
            indeterminate = void 0;

        if ('checked' in props) {
            checked = props.checked;
        } else {
            checked = props.defaultChecked;
        }

        if ('indeterminate' in props) {
            indeterminate = props.indeterminate;
        } else {
            indeterminate = props.defaultIndeterminate;
        }
        if (context.__group__) {
            checked = checkbox_isChecked(context.selectedValue, props.value);
        }
        _this.state = {
            checked: checked,
            indeterminate: indeterminate
        };

        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }

    Checkbox.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
        var nextContext = nextProps.context;

        var state = {};
        if (nextContext.__group__) {
            if ('selectedValue' in nextContext) {
                state.checked = checkbox_isChecked(nextContext.selectedValue, nextProps.value);
            }
        } else if ('checked' in nextProps) {
            state.checked = nextProps.checked;
        }

        if ('indeterminate' in nextProps) {
            state.indeterminate = nextProps.indeterminate;
        }

        return state;
    };

    Checkbox.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
        var shallowEqual = util_obj.shallowEqual;

        return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState) || !shallowEqual(this.context, nextContext);
    };

    Checkbox.prototype.onChange = function onChange(e) {
        var _props = this.props,
            context = _props.context,
            value = _props.value;

        var checked = e.target.checked;

        if (this.disabled) {
            return;
        }
        if (context.__group__) {
            context.onChange(value, e);
        } else {
            if (!('checked' in this.props)) {
                this.setState({
                    checked: checked
                });
            }

            if (!('indeterminate' in this.props)) {
                this.setState({
                    indeterminate: false
                });
            }
            this.props.onChange(checked, e);
        }
    };

    Checkbox.prototype.render = function render() {
        var _classnames, _classnames2;

        /* eslint-disable no-unused-vars */
        var _props2 = this.props,
            id = _props2.id,
            className = _props2.className,
            children = _props2.children,
            style = _props2.style,
            label = _props2.label,
            onMouseEnter = _props2.onMouseEnter,
            onMouseLeave = _props2.onMouseLeave,
            rtl = _props2.rtl,
            isPreview = _props2.isPreview,
            renderPreview = _props2.renderPreview,
            context = _props2.context,
            value = _props2.value,
            name = _props2.name,
            otherProps = objectWithoutProperties_default()(_props2, ['id', 'className', 'children', 'style', 'label', 'onMouseEnter', 'onMouseLeave', 'rtl', 'isPreview', 'renderPreview', 'context', 'value', 'name']);

        var checked = !!this.state.checked;
        var disabled = this.disabled;
        var indeterminate = !!this.state.indeterminate;
        var prefix = context.prefix || this.props.prefix;

        var others = util_obj.pickOthers(Checkbox.propTypes, otherProps);
        var othersData = util_obj.pickAttrsWith(others, 'data-');
        if (otherProps.title) {
            othersData.title = otherProps.title;
        }

        var childInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('input', extends_default()({}, util_obj.pickOthers(Checkbox.propTypes, otherProps), {
            id: id,
            value: value,
            name: name,
            disabled: disabled,
            checked: checked,
            type: 'checkbox',
            onChange: this.onChange,
            'aria-checked': indeterminate ? 'mixed' : checked,
            className: prefix + 'checkbox-input'
        }));

        // disable 无状态操作
        if (!disabled) {
            childInput = this.getStateElement(childInput);
        }
        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'checkbox-wrapper'] = true, _classnames[className] = !!className, _classnames.checked = checked, _classnames.disabled = disabled, _classnames.indeterminate = indeterminate, _classnames[this.getStateClassName()] = true, _classnames));
        var labelCls = prefix + 'checkbox-label';
        var type = indeterminate ? 'semi-select' : 'select';

        if (isPreview) {
            var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');
            if ('renderPreview' in this.props) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({ id: id, dir: rtl ? 'rtl' : undefined }, othersData, { className: previewCls }),
                    renderPreview(checked, this.props)
                );
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                extends_default()({ id: id, dir: rtl ? 'rtl' : undefined }, othersData, { className: previewCls }),
                checked && (children || label || this.state.value)
            );
        }

        var iconCls = _classnames_2_3_1_classnames_default()((_classnames2 = {
            zoomIn: indeterminate
        }, _classnames2[prefix + 'checkbox-semi-select-icon'] = indeterminate, _classnames2[prefix + 'checkbox-select-icon'] = !indeterminate, _classnames2));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'label',
            extends_default()({}, othersData, {
                className: cls,
                style: style,
                dir: rtl ? 'rtl' : undefined,
                onMouseEnter: onMouseEnter,
                onMouseLeave: onMouseLeave
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'checkbox' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { className: prefix + 'checkbox-inner' },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: type, size: 'xs', className: iconCls })
                ),
                childInput
            ),
            [label, children].map(function (item, i) {
                return [undefined, null].indexOf(item) === -1 ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { key: i, className: labelCls },
                    item
                ) : null;
            })
        );
    };

    createClass_default()(Checkbox, [{
        key: 'disabled',
        get: function get() {
            var props = this.props;
            var context = props.context;


            return props.disabled || 'disabled' in context && context.disabled;
        }
    }]);

    return Checkbox;
}(mixin_ui_state), checkbox__class.displayName = 'Checkbox', checkbox__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * checkbox id, 挂载在input上
     */
    id: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内敛样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 选中状态
     */
    checked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 默认选中状态
     */
    defaultChecked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 通过属性配置label，
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * Checkbox 的中间状态，只会影响到 Checkbox 的样式，并不影响其 checked 属性
     */
    indeterminate: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     *  Checkbox 的默认中间态，只会影响到 Checkbox 的样式，并不影响其 checked 属性
     */
    defaultIndeterminate: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 状态变化时触发的事件
     * @param {Boolean} checked 是否选中
     * @param {Event} e Dom 事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 鼠标进入enter事件
     * @param {Event} e Dom 事件对象
     */
    onMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 鼠标离开Leave事件
     * @param {Event} e Dom 事件对象
     */
    onMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * checkbox 的value
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * name
     */
    name: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为预览态
     * @version 1.19
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Boolean} checked 是否选中
     * @param {Object} props 所有传入的参数
     * @returns {reactNode} Element 渲染内容
     * @version 1.19
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func
}), checkbox__class.defaultProps = {
    defaultChecked: false,
    defaultIndeterminate: false,
    onChange: checkbox_noop,
    onMouseEnter: checkbox_noop,
    onMouseLeave: checkbox_noop,
    prefix: 'next-',
    isPreview: false
}, checkbox__temp);


/* harmony default export */ var checkbox_checkbox = (config_provider.config(with_context_withContext(Object(react_lifecycles_compat_es["polyfill"])(checkbox_Checkbox))));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/checkbox/checkbox-group.js






var checkbox_group__class, checkbox_group__temp;








var checkbox_group_pickOthers = util_obj.pickOthers;

/** Checkbox.Group */

var checkbox_group_CheckboxGroup = (checkbox_group__temp = checkbox_group__class = function (_Component) {
    inherits_default()(CheckboxGroup, _Component);

    function CheckboxGroup(props) {
        classCallCheck_default()(this, CheckboxGroup);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        var value = [];
        if ('value' in props) {
            value = props.value;
        } else if ('defaultValue' in props) {
            value = props.defaultValue;
        }
        if (!Array.isArray(value)) {
            if (value === null || value === undefined) {
                value = [];
            } else {
                value = [value];
            }
        }
        _this.state = {
            value: [].concat(value)
        };

        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }

    CheckboxGroup.prototype.getChildContext = function getChildContext() {
        return {
            __group__: true,
            onChange: this.onChange,
            selectedValue: this.state.value,
            disabled: this.props.disabled
        };
    };

    CheckboxGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
        if ('value' in nextProps) {
            var value = nextProps.value;

            if (!Array.isArray(value)) {
                if (value === null || value === undefined) {
                    value = [];
                } else {
                    value = [value];
                }
            }

            return { value: value };
        }

        return null;
    };

    CheckboxGroup.prototype.onChange = function onChange(currentValue, e) {
        var value = this.state.value;

        var index = value.indexOf(currentValue);
        var valTemp = [].concat(value);

        if (index === -1) {
            valTemp.push(currentValue);
        } else {
            valTemp.splice(index, 1);
        }

        if (!('value' in this.props)) {
            this.setState({ value: valTemp });
        }
        this.props.onChange(valTemp, e);
    };

    CheckboxGroup.prototype.render = function render() {
        var _this2 = this,
            _classnames;

        var _props = this.props,
            className = _props.className,
            style = _props.style,
            prefix = _props.prefix,
            disabled = _props.disabled,
            direction = _props.direction,
            rtl = _props.rtl,
            isPreview = _props.isPreview,
            renderPreview = _props.renderPreview;

        var others = checkbox_group_pickOthers(CheckboxGroup.propTypes, this.props);

        // 如果内嵌标签跟dataSource同时存在，以内嵌标签为主
        var children = void 0;
        var previewed = [];
        if (this.props.children) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.map(this.props.children, function (child) {
                if (!external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
                    return child;
                }
                var checked = _this2.state.value && _this2.state.value.indexOf(child.props.value) > -1;

                if (checked) {
                    previewed.push({
                        label: child.props.children,
                        value: child.props.value
                    });
                }

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, child.props.rtl === undefined ? { rtl: rtl } : null);
            });
        } else {
            children = this.props.dataSource.map(function (item, index) {
                var option = item;
                if ((typeof item === 'undefined' ? 'undefined' : typeof_default()(item)) !== 'object') {
                    option = {
                        label: item,
                        value: item,
                        disabled: disabled
                    };
                }
                var checked = _this2.state.value && _this2.state.value.indexOf(option.value) > -1;

                if (checked) {
                    previewed.push({
                        label: option.label,
                        value: option.value
                    });
                }

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(checkbox_checkbox, {
                    key: index,
                    value: option.value,
                    checked: checked,
                    rtl: rtl,
                    disabled: disabled || option.disabled,
                    label: option.label
                });
            });
        }

        if (isPreview) {
            var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

            if ('renderPreview' in this.props) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({}, others, { dir: rtl ? 'rtl' : undefined, className: previewCls }),
                    renderPreview(previewed, this.props)
                );
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                extends_default()({}, others, { dir: rtl ? 'rtl' : undefined, className: previewCls }),
                previewed.map(function (item) {
                    return item.label;
                }).join(', ')
            );
        }

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'checkbox-group'] = true, _classnames[prefix + 'checkbox-group-' + direction] = true, _classnames[className] = !!className, _classnames.disabled = disabled, _classnames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({ dir: rtl ? 'rtl' : undefined }, others, { className: cls, style: style }),
            children
        );
    };

    return CheckboxGroup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), checkbox_group__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内敛样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 整体禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 可选项列表, 数据项可为 String 或者 Object, 如 `['apple', 'pear', 'orange']` 或者 `[{value: 'apple', label: '苹果',}, {value: 'pear', label: '梨'}, {value: 'orange', label: '橙子'}]`
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string), _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object)]),
    /**
     * 被选中的值列表
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.array, _prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 默认被选中的值列表
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.array, _prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 通过子元素方式设置内部 checkbox
     */
    children: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.element),
    /**
     * 选中值改变时的事件
     * @param {Array} value 选中项列表
     * @param {Event} e Dom 事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,

    /**
     * 子项目的排列方式
     * - hoz: 水平排列 (default)
     * - ver: 垂直排列
     */
    direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    /**
     * 是否为预览态
     * @version 1.19
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Array} previewed 预览值 [{label: '', value:''},...]
     * @param {Object} props 所有传入的参数
     * @returns {reactNode} Element 渲染内容
     * @version 1.19
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func
}, checkbox_group__class.defaultProps = {
    dataSource: [],
    onChange: function onChange() {},
    prefix: 'next-',
    direction: 'hoz',
    isPreview: false
}, checkbox_group__class.childContextTypes = {
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    __group__: _prop_types_15_8_1_prop_types_default.a.bool,
    selectedValue: _prop_types_15_8_1_prop_types_default.a.array,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool
}, checkbox_group__temp);
checkbox_group_CheckboxGroup.displayName = 'CheckboxGroup';


/* harmony default export */ var checkbox_group = (Object(react_lifecycles_compat_es["polyfill"])(checkbox_group_CheckboxGroup));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/checkbox/index.js






checkbox_checkbox.Group = config_provider.config(checkbox_group, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('itemDirection' in props) {
            deprecated('itemDirection', 'direction', 'Checkbox');

            var _props = props,
                itemDirection = _props.itemDirection,
                others = objectWithoutProperties_default()(_props, ['itemDirection']);

            props = extends_default()({ direction: itemDirection }, others);
        }

        return props;
    }
});

/* harmony default export */ var es_checkbox = (checkbox_checkbox);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/radio/with-context.js







function radio_with_context_withContext(Radio) {
    var _class, _temp;

    return _temp = _class = function (_React$Component) {
        inherits_default()(WrappedComp, _React$Component);

        function WrappedComp() {
            classCallCheck_default()(this, WrappedComp);

            return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
        }

        WrappedComp.prototype.render = function render() {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Radio, extends_default()({}, this.props, { context: this.context }));
        };

        return WrappedComp;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.displayName = 'Radio', _class.contextTypes = {
        onChange: _prop_types_15_8_1_prop_types_default.a.func,
        __group__: _prop_types_15_8_1_prop_types_default.a.bool,
        isButton: _prop_types_15_8_1_prop_types_default.a.bool,
        selectedValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.bool]),
        disabled: _prop_types_15_8_1_prop_types_default.a.bool
    }, _temp;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/radio/radio.js







var radio__class, radio__temp;










var radio_makeChain = func.makeChain,
    radio_noop = func.noop;
/**
 * Radio
 * @order 1
 */

var radio_Radio = (radio__temp = radio__class = function (_UIState) {
    inherits_default()(Radio, _UIState);

    function Radio(props) {
        classCallCheck_default()(this, Radio);

        var _this = possibleConstructorReturn_default()(this, _UIState.call(this, props));

        var context = props.context;

        var checked = void 0;
        if (context.__group__) {
            checked = context.selectedValue === props.value;
        } else if ('checked' in props) {
            checked = props.checked;
        } else {
            checked = props.defaultChecked;
        }

        _this.state = { checked: checked };

        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }

    Radio.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
        var nextContext = nextProps.context;


        if (nextContext.__group__ && 'selectedValue' in nextContext) {
            return {
                checked: nextContext.selectedValue === nextProps.value
            };
        } else if ('checked' in nextProps) {
            return {
                checked: nextProps.checked
            };
        }

        return null;
    };

    Radio.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
        var shallowEqual = util_obj.shallowEqual;

        return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState) || !shallowEqual(this.context, nextContext);
    };

    Radio.prototype.componentDidUpdate = function componentDidUpdate() {
        // when disabled, reset UIState
        if (this.disabled) {
            // only class has an impact, no effect on visual
            this.resetUIState();
        }
    };

    Radio.prototype.onChange = function onChange(e) {
        var checked = e.target.checked;
        var _props = this.props,
            context = _props.context,
            value = _props.value;


        if (context.__group__) {
            context.onChange(value, e);
        } else if (this.state.checked !== checked) {
            if (!('checked' in this.props)) {
                this.setState({
                    checked: checked
                });
            }
            this.props.onChange(checked, e);
        }
    };

    Radio.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3;

        /* eslint-disable no-unused-vars */
        var _props2 = this.props,
            id = _props2.id,
            className = _props2.className,
            children = _props2.children,
            style = _props2.style,
            label = _props2.label,
            onMouseEnter = _props2.onMouseEnter,
            onMouseLeave = _props2.onMouseLeave,
            tabIndex = _props2.tabIndex,
            rtl = _props2.rtl,
            name = _props2.name,
            isPreview = _props2.isPreview,
            renderPreview = _props2.renderPreview,
            value = _props2.value,
            context = _props2.context,
            otherProps = objectWithoutProperties_default()(_props2, ['id', 'className', 'children', 'style', 'label', 'onMouseEnter', 'onMouseLeave', 'tabIndex', 'rtl', 'name', 'isPreview', 'renderPreview', 'value', 'context']);

        var checked = !!this.state.checked;
        var disabled = this.disabled;
        var isButton = context.isButton;
        var prefix = context.prefix || this.props.prefix;

        var others = util_obj.pickOthers(Radio.propTypes, otherProps);
        var othersData = util_obj.pickAttrsWith(others, 'data-');

        if (isPreview) {
            var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

            if ('renderPreview' in this.props) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }),
                    renderPreview(checked, this.props)
                );
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                extends_default()({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }),
                checked && (children || label || value)
            );
        }

        var input = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('input', extends_default()({}, util_obj.pickOthers(othersData, others), {
            name: name,
            id: id,
            tabIndex: tabIndex,
            disabled: disabled,
            checked: checked,
            type: 'radio',
            onChange: this.onChange,
            'aria-checked': checked,
            className: prefix + 'radio-input'
        }));

        // disabled do not hove focus state
        if (!disabled) {
            input = this.getStateElement(input);
        }

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'radio'] = true, _classnames.checked = checked, _classnames.disabled = disabled, _classnames[this.getStateClassName()] = true, _classnames));
        var clsInner = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'radio-inner'] = true, _classnames2.press = checked, _classnames2.unpress = !checked, _classnames2));
        var clsWrapper = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'radio-wrapper'] = true, _classnames3[className] = !!className, _classnames3.checked = checked, _classnames3.disabled = disabled, _classnames3[this.getStateClassName()] = true, _classnames3));
        var childrenCls = prefix + 'radio-label';

        var radioComp = !isButton ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: cls },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: clsInner }),
            input
        ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'radio-single-input' },
            input
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'label',
            extends_default()({}, othersData, {
                dir: rtl ? 'rtl' : 'ltr',
                style: style,
                'aria-checked': checked,
                'aria-disabled': disabled,
                className: clsWrapper,
                onMouseEnter: disabled ? onMouseEnter : radio_makeChain(this._onUIMouseEnter, onMouseEnter),
                onMouseLeave: disabled ? onMouseLeave : radio_makeChain(this._onUIMouseLeave, onMouseLeave)
            }),
            radioComp,
            [children, label].map(function (d, i) {
                return d !== undefined ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { key: i, className: childrenCls },
                    d
                ) : null;
            })
        );
    };

    createClass_default()(Radio, [{
        key: 'disabled',
        get: function get() {
            var props = this.props;
            var context = props.context;


            var disabled = props.disabled || context.__group__ && 'disabled' in context && context.disabled;

            return disabled;
        }
    }]);

    return Radio;
}(mixin_ui_state), radio__class.displayName = 'Radio', radio__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 组件input的id
     */
    id: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内敛样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 设置radio是否选中
     */
    checked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 设置radio是否默认选中
     */
    defaultChecked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 通过属性配置label
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 状态变化时触发的事件
     * @param {Boolean} checked 是否选中
     * @param {Event} e Dom 事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 鼠标进入enter事件
     * @param {Event} e Dom 事件对象
     */
    onMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 鼠标离开事件
     * @param {Event} e Dom 事件对象
     */
    onMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * radio是否被禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * radio 的value
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * name
     */
    name: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Boolean} checked 是否选中
     * @param {Object} props 所有传入的参数
     * @returns {reactNode} Element 渲染内容
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func
}), radio__class.defaultProps = {
    onChange: radio_noop,
    onMouseLeave: radio_noop,
    onMouseEnter: radio_noop,
    tabIndex: 0,
    prefix: 'next-',
    isPreview: false
}, radio__class.contextTypes = {
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    __group__: _prop_types_15_8_1_prop_types_default.a.bool,
    isButton: _prop_types_15_8_1_prop_types_default.a.bool,
    selectedValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.bool]),
    disabled: _prop_types_15_8_1_prop_types_default.a.bool
}, radio__temp);


/* harmony default export */ var radio_radio = (config_provider.config(radio_with_context_withContext(Object(react_lifecycles_compat_es["polyfill"])(radio_Radio))));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/radio/radio-group.js






var radio_group__class, radio_group__temp;









var radio_group_pickOthers = util_obj.pickOthers;

/**
 * Radio.Group
 * @order 2
 */

var radio_group_RadioGroup = (radio_group__temp = radio_group__class = function (_Component) {
    inherits_default()(RadioGroup, _Component);

    function RadioGroup(props) {
        classCallCheck_default()(this, RadioGroup);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        var value = '';
        if ('value' in props) {
            value = props.value;
        } else if ('defaultValue' in props) {
            value = props.defaultValue;
        }

        _this.state = { value: value };
        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }

    RadioGroup.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if ('value' in props && props.value !== state.value) {
            return {
                value: props.value
            };
        }

        return null;
    };

    RadioGroup.prototype.getChildContext = function getChildContext() {
        var disabled = this.props.disabled;


        return {
            __group__: true,
            isButton: this.props.shape === 'button',
            onChange: this.onChange,
            selectedValue: this.state.value,
            disabled: disabled
        };
    };

    RadioGroup.prototype.onChange = function onChange(currentValue, e) {
        if (!('value' in this.props)) {
            this.setState({ value: currentValue });
        }
        if (currentValue !== this.state.value) {
            this.props.onChange(currentValue, e);
        }
    };

    RadioGroup.prototype.render = function render() {
        var _this2 = this,
            _classnames;

        var _props = this.props,
            rtl = _props.rtl,
            className = _props.className,
            disabled = _props.disabled,
            shape = _props.shape,
            size = _props.size,
            style = _props.style,
            prefix = _props.prefix,
            direction = _props.direction,
            component = _props.component,
            isPreview = _props.isPreview,
            renderPreview = _props.renderPreview;

        var others = radio_group_pickOthers(Object.keys(RadioGroup.propTypes), this.props);

        if (rtl) {
            others.dir = 'rtl';
        }

        var children = void 0;
        var previewed = {};
        if (this.props.children) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.map(this.props.children, function (child, index) {
                if (!external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
                    return child;
                }
                var checked = _this2.state.value === child.props.value;
                if (checked) {
                    previewed.label = child.props.children;
                    previewed.value = child.props.value;
                }
                var tabIndex = index === 0 && !_this2.state.value || checked ? 0 : -1;
                var childrtl = child.props.rtl === undefined ? rtl : child.props.rtl;
                if (child.type && child.type.displayName === 'Config(Radio)') {
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                        checked: checked,
                        tabIndex: tabIndex,
                        rtl: childrtl
                    });
                }
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                    checked: checked,
                    rtl: childrtl
                });
            });
        } else {
            children = this.props.dataSource.map(function (item, index) {
                var option = item;
                if ((typeof item === 'undefined' ? 'undefined' : typeof_default()(item)) !== 'object') {
                    option = {
                        label: item,
                        value: item,
                        disabled: disabled
                    };
                }
                var checked = _this2.state.value === option.value;
                if (checked) {
                    previewed.label = option.label;
                    previewed.value = option.value;
                }
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(radio_radio, {
                    key: index,
                    tabIndex: index === 0 && !_this2.state.value || checked ? 0 : -1,
                    value: option.value,
                    checked: checked,
                    label: option.label,
                    disabled: disabled || option.disabled
                });
            });
        }
        if (isPreview) {
            var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

            if ('renderPreview' in this.props) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({}, others, { className: previewCls }),
                    renderPreview(previewed, this.props)
                );
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                extends_default()({}, others, { className: previewCls }),
                previewed.label
            );
        }

        var isButtonShape = shape === 'button';

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'radio-group'] = true, _classnames[prefix + 'radio-group-' + direction] = !isButtonShape, _classnames[prefix + 'radio-button'] = isButtonShape, _classnames[prefix + 'radio-button-' + size] = isButtonShape, _classnames[className] = !!className, _classnames.disabled = disabled, _classnames));

        var TagName = component;
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            TagName,
            extends_default()({}, others, { 'aria-disabled': disabled, role: 'radiogroup', className: cls, style: style }),
            children
        );
    };

    return RadioGroup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), radio_group__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内敛样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * name
     */
    name: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * radio group的选中项的值
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * radio group的默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.func]),
    /**
     * 选中值改变时的事件
     * @param {String/Number} value 选中项的值
     * @param {Event} e Dom 事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 表示radio被禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 可以设置成 button 展示形状
     * @enumdesc 按钮状
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'button']),
    /**
     * 与 `shape` 属性配套使用，shape设为button时有效
     * @enumdesc 大, 中, 小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['large', 'medium', 'small']),
    /**
     * 可选项列表, 数据项可为 String 或者 Object, 如 `['apple', 'pear', 'orange']` `[{label: 'apply', value: 'apple'}]`
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string), _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object)]),
    /**
     * 通过子元素方式设置内部radio
     */
    children: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.element), _prop_types_15_8_1_prop_types_default.a.element]),

    /**
     * 子项目的排列方式
     * - hoz: 水平排列 (default)
     * - ver: 垂直排列
     */
    direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Object} previewed 预览值：{label: "", value: ""}
     * @param {Object} props 所有传入的参数
     * @returns {reactNode} Element 渲染内容
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func
}), radio_group__class.defaultProps = {
    dataSource: [],
    size: 'medium',
    onChange: function onChange() {},
    prefix: 'next-',
    component: 'div',
    direction: 'hoz',
    isPreview: false
}, radio_group__class.childContextTypes = {
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    __group__: _prop_types_15_8_1_prop_types_default.a.bool,
    isButton: _prop_types_15_8_1_prop_types_default.a.bool,
    selectedValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.bool]),
    disabled: _prop_types_15_8_1_prop_types_default.a.bool
}, radio_group__temp);
radio_group_RadioGroup.displayName = 'RadioGroup';


/* harmony default export */ var radio_group = (Object(react_lifecycles_compat_es["polyfill"])(radio_group_RadioGroup));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/radio/index.js






radio_radio.Group = config_provider.config(radio_group, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('itemDirection' in props) {
            deprecated('itemDirection', 'direction', 'Radio');

            var _props = props,
                itemDirection = _props.itemDirection,
                others = objectWithoutProperties_default()(_props, ['itemDirection']);

            props = extends_default()({ direction: itemDirection }, others);
        }

        return props;
    }
});

/* harmony default export */ var es_radio = (radio_radio);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/checkable-item.js





var checkable_item__class, checkable_item__temp;








var checkable_item_noop = {};
var checkable_item_bindCtx = func.bindCtx;
var checkable_item_pickOthers = util_obj.pickOthers;
var checkable_item_CheckableItem = (checkable_item__temp = checkable_item__class = function (_Component) {
    inherits_default()(CheckableItem, _Component);

    function CheckableItem(props) {
        classCallCheck_default()(this, CheckableItem);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        checkable_item_bindCtx(_this, ['stopPropagation', 'handleKeyDown', 'handleClick']);
        _this.id = htmlId.escapeForId('checkable-item-' + (props.id || props._key));
        return _this;
    }

    CheckableItem.prototype.stopPropagation = function stopPropagation(e) {
        e.stopPropagation();
    };

    CheckableItem.prototype.handleCheck = function handleCheck(e) {
        var _props = this.props,
            checkType = _props.checkType,
            checked = _props.checked,
            onChange = _props.onChange;

        if (!(checkType === 'radio' && checked)) {
            onChange(!checked, e);
        }
    };

    CheckableItem.prototype.handleKeyDown = function handleKeyDown(e) {
        if (e.keyCode === KEYCODE.SPACE && !this.props.checkDisabled) {
            this.handleCheck(e);
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    CheckableItem.prototype.handleClick = function handleClick(e) {
        this.handleCheck(e);

        this.props.onClick && this.props.onClick(e);
    };

    CheckableItem.prototype.renderCheck = function renderCheck() {
        var _props2 = this.props,
            root = _props2.root,
            checked = _props2.checked,
            indeterminate = _props2.indeterminate,
            disabled = _props2.disabled,
            checkType = _props2.checkType,
            checkDisabled = _props2.checkDisabled,
            onChange = _props2.onChange;
        var labelToggleChecked = root.props.labelToggleChecked;

        var Check = checkType === 'radio' ? es_radio : es_checkbox;

        var checkProps = {
            tabIndex: '-1',
            checked: checked,
            disabled: disabled || checkDisabled
        };
        if (checkType === 'checkbox') {
            checkProps.indeterminate = indeterminate;
        }
        if (!labelToggleChecked) {
            checkProps.onChange = onChange;
            checkProps.onClick = this.stopPropagation;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Check, extends_default()({ 'aria-labelledby': this.id }, checkProps));
    };

    CheckableItem.prototype.render = function render() {
        var _props3 = this.props,
            _key = _props3._key,
            root = _props3.root,
            checked = _props3.checked,
            disabled = _props3.disabled,
            onClick = _props3.onClick,
            helper = _props3.helper,
            children = _props3.children;
        var _root$props = root.props,
            prefix = _root$props.prefix,
            labelToggleChecked = _root$props.labelToggleChecked;

        var others = checkable_item_pickOthers(Object.keys(CheckableItem.propTypes), this.props);

        var newProps = extends_default()({
            _key: _key,
            root: root,
            disabled: disabled,
            type: 'item',
            onClick: onClick,
            onKeyDown: this.handleKeyDown
        }, others);
        if (labelToggleChecked && !disabled) {
            newProps.onClick = this.handleClick;
        }

        var title = void 0;
        if (typeof children === 'string') {
            title = children;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            item_Item,
            extends_default()({ 'aria-checked': checked, title: title }, newProps),
            this.renderCheck(),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'menu-item-text', id: this.id },
                children
            ),
            helper ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'menu-item-helper' },
                helper
            ) : null
        );
    };

    return CheckableItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), checkable_item__class.propTypes = {
    _key: _prop_types_15_8_1_prop_types_default.a.string,
    root: _prop_types_15_8_1_prop_types_default.a.object,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    inlineIndent: _prop_types_15_8_1_prop_types_default.a.number,
    checked: _prop_types_15_8_1_prop_types_default.a.bool,
    indeterminate: _prop_types_15_8_1_prop_types_default.a.bool,
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    checkType: _prop_types_15_8_1_prop_types_default.a.oneOf(['checkbox', 'radio']),
    checkDisabled: _prop_types_15_8_1_prop_types_default.a.bool,
    helper: _prop_types_15_8_1_prop_types_default.a.node,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    id: _prop_types_15_8_1_prop_types_default.a.string
}, checkable_item__class.defaultProps = {
    disabled: false,
    checked: false,
    indeterminate: false,
    checkType: 'checkbox',
    checkDisabled: false,
    onChange: checkable_item_noop
}, checkable_item__temp);
checkable_item_CheckableItem.displayName = 'CheckableItem';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/checkbox-item.js






var checkbox_item__class, checkbox_item__temp;





/**
 * Menu.CheckboxItem
 * @order 3
 * @description 该子组件选中情况不受 defaultSelectedKeys/selectedKeys 控制，请自行控制选中逻辑
 */
var checkbox_item_CheckboxItem = (checkbox_item__temp = checkbox_item__class = function (_Component) {
  inherits_default()(CheckboxItem, _Component);

  function CheckboxItem() {
    classCallCheck_default()(this, CheckboxItem);

    return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
  }

  CheckboxItem.prototype.render = function render() {
    var _props = this.props,
        checkboxDisabled = _props.checkboxDisabled,
        others = objectWithoutProperties_default()(_props, ['checkboxDisabled']);

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(checkable_item_CheckableItem, extends_default()({
      role: 'menuitemcheckbox',
      checkType: 'checkbox',
      checkDisabled: checkboxDisabled
    }, others));
  };

  return CheckboxItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), checkbox_item__class.menuChildType = 'item', checkbox_item__class.propTypes = {
  /**
   * 是否选中
   */
  checked: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否半选中
   */
  indeterminate: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否禁用
   */
  disabled: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 选中或取消选中触发的回调函数
   * @param {Boolean} checked 是否选中
   * @param {Object} event 选中事件对象
   */
  onChange: _prop_types_15_8_1_prop_types_default.a.func,
  /**
   * 帮助文本
   */
  helper: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 标签内容
   */
  children: _prop_types_15_8_1_prop_types_default.a.node,
  checkboxDisabled: _prop_types_15_8_1_prop_types_default.a.bool
}, checkbox_item__class.defaultProps = {
  checked: false,
  indeterminate: false,
  disabled: false,
  onChange: function onChange() {},
  checkboxDisabled: false
}, checkbox_item__temp);
checkbox_item_CheckboxItem.displayName = 'CheckboxItem';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/radio-item.js





var radio_item__class, radio_item__temp;





/**
 * Menu.RadioItem
 * @order 4
 * @description 该子组件选中情况不受 defaultSelectedKeys/selectedKeys 控制，请自行控制选中逻辑
 */
var radio_item_RadioItem = (radio_item__temp = radio_item__class = function (_Component) {
  inherits_default()(RadioItem, _Component);

  function RadioItem() {
    classCallCheck_default()(this, RadioItem);

    return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
  }

  RadioItem.prototype.render = function render() {
    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(checkable_item_CheckableItem, extends_default()({
      role: 'menuitemradio',
      checkType: 'radio'
    }, this.props));
  };

  return RadioItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), radio_item__class.menuChildType = 'item', radio_item__class.propTypes = {
  /**
   * 是否选中
   */
  checked: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否禁用
   */
  disabled: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 选中或取消选中触发的回调函数
   * @param {Boolean} checked 是否选中
   * @param {Object} event 选中事件对象
   */
  onChange: _prop_types_15_8_1_prop_types_default.a.func,
  /**
   * 帮助文本
   */
  helper: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 标签内容
   */
  children: _prop_types_15_8_1_prop_types_default.a.node
}, radio_item__class.defaultProps = {
  checked: false,
  disabled: false,
  onChange: function onChange() {}
}, radio_item__temp);
radio_item_RadioItem.displayName = 'RadioItem';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/group.js







var group__class, group__temp;






/**
 * Menu.Group
 * @order 5
 */
var group_Group = (group__temp = group__class = function (_Component) {
    inherits_default()(Group, _Component);

    function Group() {
        classCallCheck_default()(this, Group);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Group.prototype.render = function render() {
        var _cx;

        var _props = this.props,
            root = _props.root,
            className = _props.className,
            label = _props.label,
            children = _props.children,
            parentMode = _props.parentMode,
            others = objectWithoutProperties_default()(_props, ['root', 'className', 'label', 'children', 'parentMode']);

        var prefix = root.props.prefix;


        var newClassName = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'menu-group-label'] = true, _cx[className] = !!className, _cx));

        var newChildren = children.map(function (child) {
            var _cx2;

            // to fix https://github.com/alibaba-fusion/next/issues/952
            if (typeof child !== 'function' && (typeof child === 'undefined' ? 'undefined' : typeof_default()(child)) !== 'object') {
                return child;
            }
            var className = child.props.className;

            var newChildClassName = _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'menu-group-item'] = true, _cx2[className] = !!className, _cx2));

            return Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, {
                parentMode: parentMode,
                className: newChildClassName
            });
        });

        return [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            item_Item,
            extends_default()({
                key: 'menu-group-label',
                className: newClassName,
                replaceClassName: true,
                root: root,
                parentMode: parentMode
            }, others),
            label
        )].concat(newChildren);
    };

    return Group;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), group__class.menuChildType = 'group', group__class.propTypes = {
    root: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 标签内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 菜单项
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    parentMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup'])
}, group__temp);
group_Group.displayName = 'Group';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/divider.js






var divider__class, divider__temp;





/**
 * Menu.Divider
 * @order 6
 */
var divider_Divider = (divider__temp = divider__class = function (_Component) {
    inherits_default()(Divider, _Component);

    function Divider() {
        classCallCheck_default()(this, Divider);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Divider.prototype.render = function render() {
        var _cx;

        var _props = this.props,
            root = _props.root,
            className = _props.className,
            parentMode = _props.parentMode,
            parent = _props.parent,
            others = objectWithoutProperties_default()(_props, ['root', 'className', 'parentMode', 'parent']);

        var prefix = root.props.prefix;


        var newClassName = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'menu-divider'] = true, _cx[className] = !!className, _cx));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('li', extends_default()({ role: 'separator', className: newClassName }, others));
    };

    return Divider;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), divider__class.menuChildType = 'divider', divider__class.propTypes = {
    root: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, divider__temp);
divider_Divider.displayName = 'Divider';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/view/create.js






var create__class, create__temp;










var create_bindCtx = func.bindCtx;
var create_getContextProps = config_provider.getContextProps;

var create_Menu = config_provider.config(view_menu);

var menuInstance = void 0;

var create_ContextMenu = (create__temp = create__class = function (_Component) {
    inherits_default()(ContextMenu, _Component);

    function ContextMenu(props) {
        classCallCheck_default()(this, ContextMenu);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.state = {
            visible: true
        };

        create_bindCtx(_this, ['handleOverlayClose', 'handleOverlayOpen', 'handleItemClick', 'getOverlay']);
        return _this;
    }

    ContextMenu.prototype.getOverlay = function getOverlay(ref) {
        this.overlay = ref;
    };

    ContextMenu.prototype.close = function close() {
        this.setState({
            visible: false
        });
        menuInstance = null;
    };

    ContextMenu.prototype.handleOverlayClose = function handleOverlayClose(triggerType, e) {
        var clickedPopupMenu = triggerType === 'docClick' && this.popupNodes.some(function (node) {
            return node.contains(e.target);
        });
        if (!clickedPopupMenu) {
            this.close();
            var overlayProps = this.props.overlayProps;

            if (overlayProps && overlayProps.onRequestClose) {
                for (var _len = arguments.length, others = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                    others[_key - 2] = arguments[_key];
                }

                overlayProps.onRequestClose.apply(overlayProps, [triggerType, e].concat(others));
            }
        }
    };

    ContextMenu.prototype.handleOverlayOpen = function handleOverlayOpen() {
        this.popupNodes = this.overlay.getInstance().getContent().getInstance().popupNodes;
        var overlayProps = this.props.overlayProps;

        if (overlayProps && overlayProps.onOpen) {
            overlayProps.onOpen();
        }
    };

    ContextMenu.prototype.handleItemClick = function handleItemClick() {
        var _props;

        this.close();

        this.props.onItemClick && (_props = this.props).onItemClick.apply(_props, arguments);
    };

    ContextMenu.prototype.render = function render() {
        var _cx, _cx2;

        var _props2 = this.props,
            className = _props2.className,
            popupClassName = _props2.popupClassName,
            target = _props2.target,
            align = _props2.align,
            offset = _props2.offset,
            afterClose = _props2.afterClose,
            _props2$overlayProps = _props2.overlayProps,
            overlayProps = _props2$overlayProps === undefined ? {} : _props2$overlayProps,
            others = objectWithoutProperties_default()(_props2, ['className', 'popupClassName', 'target', 'align', 'offset', 'afterClose', 'overlayProps']);

        var contextProps = create_getContextProps(this.props);
        var prefix = contextProps.prefix;
        var visible = this.state.visible;


        var newOverlayProps = extends_default()({}, contextProps, overlayProps, {
            target: target,
            align: align,
            offset: offset,
            afterClose: afterClose,
            visible: visible,
            onRequestClose: this.handleOverlayClose,
            onOpen: this.handleOverlayOpen,
            ref: this.getOverlay
        });
        var menuProps = extends_default()({}, contextProps, {
            triggerType: 'hover'
        }, others, {
            className: _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'context'] = true, _cx[className] = !!className, _cx)),
            popupClassName: _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'context'] = true, _cx2[popupClassName] = !!popupClassName, _cx2)),
            onItemClick: this.handleItemClick
        });

        newOverlayProps.rtl = false;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            next_es_overlay,
            newOverlayProps,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(create_Menu, menuProps)
        );
    };

    return ContextMenu;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), create__class.propTypes = {
    className: _prop_types_15_8_1_prop_types_default.a.string,
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    target: _prop_types_15_8_1_prop_types_default.a.any,
    align: _prop_types_15_8_1_prop_types_default.a.string,
    offset: _prop_types_15_8_1_prop_types_default.a.array,
    overlayProps: _prop_types_15_8_1_prop_types_default.a.object,
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup']),
    onOpen: _prop_types_15_8_1_prop_types_default.a.func,
    onItemClick: _prop_types_15_8_1_prop_types_default.a.func
}, create__class.defaultProps = {
    prefix: 'next-',
    align: 'tl tl',
    mode: 'popup'
}, create__temp);

/**
 * 创建上下文菜单
 * @exportName create
 * @param {Object} props 属性对象
 */

create_ContextMenu.displayName = 'ContextMenu';
function create_create(props) {
    if (menuInstance) {
        menuInstance.destroy();
    }

    /* eslint-disable no-unused-vars */

    var afterClose = props.afterClose,
        others = objectWithoutProperties_default()(props, ['afterClose']);
    /* eslint-enable no-unused-vars */

    var div = document.createElement('div');
    document.body.appendChild(div);

    var closeChain = function closeChain() {
        Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["unmountComponentAtNode"])(div);
        document.body.removeChild(div);

        afterClose && afterClose();
    };

    var newContext = config_provider.getContext();

    var menu = void 0;
    Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["render"])(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        config_provider,
        newContext,
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(create_ContextMenu, extends_default()({
            ref: function ref(_ref) {
                menu = _ref;
            },
            afterClose: closeChain
        }, others))
    ), div);

    menuInstance = {
        destroy: function destroy() {
            if (menu) {
                menu.close();
            }
        }
    };

    return menuInstance;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu/index.js













view_menu.SubMenu = sub_menu_SubMenu;
view_menu.Item = selectable_item_SelectableItem;
view_menu.CheckboxItem = checkbox_item_CheckboxItem;
view_menu.RadioItem = radio_item_RadioItem;
view_menu.PopupItem = popup_item_PopupItem;
view_menu.Group = group_Group;
view_menu.Divider = divider_Divider;
view_menu.create = create_create;

/* istanbul ignore next */
var menu_transform = function transform(props, deprecated) {
    if ('indentSize' in props) {
        deprecated('indentSize', 'inlineIndent', 'Menu');

        var _props = props,
            indentSize = _props.indentSize,
            others = objectWithoutProperties_default()(_props, ['indentSize']);

        props = extends_default()({ inlineIndent: indentSize }, others);
    }

    if ('onDeselect' in props) {
        deprecated('onDeselect', 'onSelect', 'Menu');
        if (props.onDeselect) {
            var _props2 = props,
                onDeselect = _props2.onDeselect,
                onSelect = _props2.onSelect,
                _others = objectWithoutProperties_default()(_props2, ['onDeselect', 'onSelect']);

            var newOnSelect = function newOnSelect(selectedKeys, item, extra) {
                if (!extra.select) {
                    onDeselect(extra.key);
                }
                if (onSelect) {
                    onSelect(selectedKeys, item, extra);
                }
            };

            props = extends_default()({ onSelect: newOnSelect }, _others);
        }
    }

    return props;
};

/* harmony default export */ var es_menu = (config_provider.config(view_menu, {
    transform: menu_transform
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/breadcrumb/item.js






var breadcrumb_item__class, breadcrumb_item__temp;






/**
 * Breadcrumb.Item
 */
var breadcrumb_item_Item = (breadcrumb_item__temp = breadcrumb_item__class = function (_Component) {
    inherits_default()(Item, _Component);

    function Item() {
        classCallCheck_default()(this, Item);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    // stateless separator component
    Item.Separator = function Separator(_ref) {
        var prefix = _ref.prefix,
            children = _ref.children;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'breadcrumb-separator' },
            children
        );
    };

    Item.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            className = _props.className,
            children = _props.children,
            link = _props.link,
            activated = _props.activated,
            separator = _props.separator,
            others = objectWithoutProperties_default()(_props, ['prefix', 'rtl', 'className', 'children', 'link', 'activated', 'separator']);

        var clazz = _classnames_2_3_1_classnames_default()(prefix + 'breadcrumb-text', className, {
            activated: activated
        });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            { dir: rtl ? 'rtl' : null, className: prefix + 'breadcrumb-item' },
            link ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'a',
                extends_default()({ href: link, className: clazz }, others),
                children
            ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                extends_default()({ className: clazz }, others),
                children
            ),
            activated ? null : Item.Separator({ prefix: prefix, children: separator })
        );
    };

    return Item;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), breadcrumb_item__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 面包屑节点链接，如果设置这个属性，则该节点为`<a />` ，否则是`<span />`
     */
    link: _prop_types_15_8_1_prop_types_default.a.string,
    activated: _prop_types_15_8_1_prop_types_default.a.bool,
    separator: _prop_types_15_8_1_prop_types_default.a.node,
    className: _prop_types_15_8_1_prop_types_default.a.any,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, breadcrumb_item__class.defaultProps = {
    prefix: 'next-'
}, breadcrumb_item__class._typeMark = 'breadcrumb_item', breadcrumb_item__temp);
breadcrumb_item_Item.displayName = 'Item';


/* harmony default export */ var breadcrumb_item = (config_provider.config(breadcrumb_item_Item));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/breadcrumb/index.js







var breadcrumb__class, breadcrumb__temp, breadcrumb__initialiseProps;











/**
 * Breadcrumb
 */
var breadcrumb_Breadcrumb = (breadcrumb__temp = breadcrumb__class = function (_Component) {
    inherits_default()(Breadcrumb, _Component);

    function Breadcrumb(props) {
        classCallCheck_default()(this, Breadcrumb);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        breadcrumb__initialiseProps.call(_this);

        _this.state = {
            maxNode: props.maxNode === 'auto' ? 100 : props.maxNode
        };
        return _this;
    }

    Breadcrumb.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (state.prevMaxNode === props.maxNode) {
            return {};
        }

        return {
            prevMaxNode: props.maxNode,
            maxNode: props.maxNode === 'auto' ? 100 : props.maxNode
        };
    };

    Breadcrumb.prototype.componentDidMount = function componentDidMount() {
        this.computeMaxNode();
        util_events.on(window, 'resize', this.computeMaxNode);
    };

    Breadcrumb.prototype.componentDidUpdate = function componentDidUpdate() {
        this.computeMaxNode();
    };

    Breadcrumb.prototype.componentWillUnmount = function componentWillUnmount() {
        util_events.off(window, 'resize', this.computeMaxNode);
    };

    Breadcrumb.prototype.renderEllipsisNodeWithMenu = function renderEllipsisNodeWithMenu(children, breakpointer) {
        // 拿到被隐藏的项
        var hiddenItems = [];
        external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(children, function (item, i) {
            var _item$props = item.props,
                link = _item$props.link,
                itemChildren = _item$props.children;

            if (i > 0 && i <= breakpointer) {
                hiddenItems.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_menu.Item,
                    { key: i },
                    link ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'a',
                        { href: link },
                        itemChildren
                    ) : itemChildren
                ));
            }
        });

        var _props = this.props,
            prefix = _props.prefix,
            followTrigger = _props.followTrigger,
            popupContainer = _props.popupContainer,
            popupProps = _props.popupProps;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            dropdown,
            extends_default()({
                trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    null,
                    '...'
                )
            }, popupProps, {
                container: popupContainer,
                followTrigger: followTrigger
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'breadcrumb-dropdown-wrapper' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_menu,
                    null,
                    hiddenItems
                )
            )
        );
    };

    Breadcrumb.prototype.render = function render() {
        var _this2 = this;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            className = _props2.className,
            children = _props2.children,
            component = _props2.component,
            showHiddenItems = _props2.showHiddenItems,
            maxNodeProp = _props2.maxNode,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'rtl', 'className', 'children', 'component', 'showHiddenItems', 'maxNode']);

        var separator = this.props.separator || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-right', className: prefix + 'breadcrumb-icon-sep' });

        var maxNode = this.state.maxNode;


        var items = void 0;
        var length = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].count(children);

        if (maxNode > 1 && length > maxNode) {
            var breakpointer = length - maxNode + 1;
            items = [];

            external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(children, function (item, i) {
                var ariaProps = {};

                // 增加空值判断
                if (!item) {
                    return;
                }
                if (i === length - 1) {
                    ariaProps['aria-current'] = 'page';
                }

                if (i && i === breakpointer) {
                    items.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(item, extends_default()({
                        separator: separator,
                        prefix: prefix,
                        key: i,
                        activated: i === length - 1
                    }, ariaProps, {
                        className: showHiddenItems ? prefix + 'breadcrumb-text-ellipsis-clickable' : prefix + 'breadcrumb-text-ellipsis'
                    }), showHiddenItems ? _this2.renderEllipsisNodeWithMenu(children, breakpointer) : '...'));
                } else if (!i || i > breakpointer) {
                    items.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(item, extends_default()({
                        separator: separator,
                        prefix: prefix,
                        key: i
                    }, ariaProps, {
                        activated: i === length - 1
                    })));
                }
            });
        } else {
            items = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (item, i) {
                var ariaProps = {};
                // 增加空值判断
                if (!item) {
                    return;
                }
                if (i === length - 1) {
                    ariaProps['aria-current'] = 'page';
                }

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(item, extends_default()({
                    separator: separator,
                    prefix: prefix,
                    activated: i === length - 1
                }, ariaProps, {
                    key: i
                }));
            });
        }

        if (rtl) {
            others.dir = 'rtl';
        }

        var BreadcrumbComponent = component;

        delete others.maxNode;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            BreadcrumbComponent,
            extends_default()({
                'aria-label': 'Breadcrumb',
                className: className
            }, others, {
                style: extends_default()({ position: 'relative' }, others.style || {})
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'ul',
                { className: prefix + 'breadcrumb' },
                items
            ),
            maxNodeProp === 'auto' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'ul',
                {
                    style: {
                        position: 'absolute',
                        left: 0,
                        right: 0,
                        top: 0,
                        visibility: 'hidden'
                    },
                    ref: this.saveBreadcrumbRef,
                    className: prefix + 'breadcrumb'
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (item, i) {
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(item, {
                        separator: separator,
                        prefix: prefix,
                        activated: i === length - 1,
                        key: i
                    });
                })
            ) : null
        );
    };

    return Breadcrumb;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), breadcrumb__class.Item = breadcrumb_item, breadcrumb__class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /*eslint-disable*/
    /**
     * 面包屑子节点，需传入 Breadcrumb.Item
     */
    children: function children(props, propName) {
        external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(props[propName], function (child) {
            if (!(child && ['function', 'object'].indexOf(typeof_default()(child.type)) > -1 && child.type._typeMark === 'breadcrumb_item')) {
                throw new Error("Breadcrumb's children must be Breadcrumb.Item!");
            }
        });
    },
    /*eslint-enable*/
    /**
     * 面包屑最多显示个数，超出部分会被隐藏, 设置为 auto 会自动根据父元素的宽度适配。
     */
    maxNode: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.oneOf(['auto'])]),
    /**
     * 当超过的项被隐藏时，是否可通过点击省略号展示菜单（包含被隐藏的项）
     * @version 1.23
     */
    showHiddenItems: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层挂载的容器节点（在showHiddenItems为true时才有意义）
     * @version 1.23
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否跟随trigger滚动（在showHiddenItems为true时才有意义）
     * @version 1.23
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 添加到弹层上的属性（在showHiddenItems为true时才有意义）
     * @version 1.23
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 分隔符，可以是文本或 Icon
     */
    separator: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.func]),
    className: _prop_types_15_8_1_prop_types_default.a.any
}, breadcrumb__class.defaultProps = {
    prefix: 'next-',
    maxNode: 100,
    showHiddenItems: false,
    component: 'nav'
}, breadcrumb__initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.computeMaxNode = function () {
        // 计算最大node节点，无法获取到 ... 节点的宽度，目前会有 nodeWidth - ellipsisNodeWidth 的误差
        if (_this3.props.maxNode !== 'auto' || !_this3.breadcrumbEl) return;
        var scrollWidth = _this3.breadcrumbEl.scrollWidth;
        var rect = _this3.breadcrumbEl.getBoundingClientRect();

        if (scrollWidth <= rect.width) return;
        var maxNode = _this3.breadcrumbEl.children.length;
        var index = 1;
        var fullWidth = scrollWidth;

        while (index < _this3.breadcrumbEl.children.length - 1) {
            var el = _this3.breadcrumbEl.children[index];
            maxNode--;
            fullWidth -= el.getBoundingClientRect().width;
            if (fullWidth <= rect.width) {
                break;
            }
            index++;
        }

        maxNode = Math.max(3, maxNode);

        if (maxNode !== _this3.state.maxNode) {
            _this3.setState({
                maxNode: maxNode
            });
        }
    };

    this.saveBreadcrumbRef = function (ref) {
        _this3.breadcrumbEl = ref;
    };
}, breadcrumb__temp);
breadcrumb_Breadcrumb.displayName = 'Breadcrumb';


/* harmony default export */ var breadcrumb = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(breadcrumb_Breadcrumb)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/button/view/button.js







var button__class, button__temp2;







function mapIconSize(size) {
    return {
        large: 'small',
        medium: 'xs',
        small: 'xs'
    }[size];
}

/** Button */
var button_Button = (button__temp2 = button__class = function (_Component) {
    inherits_default()(Button, _Component);

    function Button() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Button);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.onMouseUp = function (e) {
            _this.button.blur();

            if (_this.props.onMouseUp) {
                _this.props.onMouseUp(e);
            }
        }, _this.buttonRefHandler = function (button) {
            _this.button = button;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Button.prototype.render = function render() {
        var _btnClsObj;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            type = _props.type,
            size = _props.size,
            htmlType = _props.htmlType,
            loading = _props.loading,
            text = _props.text,
            warning = _props.warning,
            ghost = _props.ghost,
            component = _props.component,
            iconSize = _props.iconSize,
            icons = _props.icons,
            disabled = _props.disabled,
            onClick = _props.onClick,
            children = _props.children,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'type', 'size', 'htmlType', 'loading', 'text', 'warning', 'ghost', 'component', 'iconSize', 'icons', 'disabled', 'onClick', 'children', 'rtl']);

        var ghostType = ['light', 'dark'].indexOf(ghost) >= 0 ? ghost : 'dark';

        var btnClsObj = (_btnClsObj = {}, _btnClsObj[prefix + 'btn'] = true, _btnClsObj['' + prefix + size] = size, _btnClsObj[prefix + 'btn-' + type] = type && !ghost, _btnClsObj[prefix + 'btn-text'] = text, _btnClsObj[prefix + 'btn-warning'] = warning, _btnClsObj[prefix + 'btn-loading'] = loading, _btnClsObj[prefix + 'btn-ghost'] = ghost, _btnClsObj[prefix + 'btn-' + ghostType] = ghost, _btnClsObj[className] = className, _btnClsObj);

        var loadingIcon = null;

        // 如果传入了 loading 的 icons，使用该节点来渲染
        if (icons && icons.loading && Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["isValidElement"])(icons.loading)) {
            var _classNames;

            if (loading) {
                delete btnClsObj[prefix + 'btn-loading'];
                btnClsObj[prefix + 'btn-custom-loading'] = true;
            }

            var loadingSize = iconSize || mapIconSize(size);
            loadingIcon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(icons.loading, {
                className: _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'btn-custom-loading-icon'] = true, _classNames.show = loading, _classNames)),
                size: loadingSize
            });
        }

        var count = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].count(children);
        var clonedChildren = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child, index) {
            if (child && ['function', 'object'].indexOf(typeof_default()(child.type)) > -1 && child.type._typeMark === 'icon') {
                var _classNames2;

                var iconCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'btn-icon'] = !iconSize, _classNames2[prefix + 'icon-first'] = count > 1 && index === 0, _classNames2[prefix + 'icon-last'] = count > 1 && index === count - 1, _classNames2[prefix + 'icon-alone'] = count === 1, _classNames2[child.props.className] = !!child.props.className, _classNames2));

                if ('size' in child.props) {
                    log.warning('The size of Icon will not take effect, when Icon is the [direct child element] of Button(<Button><Icon size="' + child.props.size + '" /></Button>), use <Button iconSize="' + child.props.size + '"> or <Button><div><Icon size="' + child.props.size + '" /></div></Button> instead of.');
                }
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                    className: iconCls,
                    size: iconSize || mapIconSize(size)
                });
            }

            if (!Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["isValidElement"])(child)) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { className: prefix + 'btn-helper' },
                    child
                );
            }

            return child;
        });

        var TagName = component;
        var tagAttrs = extends_default()({}, util_obj.pickOthers(Object.keys(Button.propTypes), others), {
            type: htmlType,
            disabled: disabled,
            onClick: onClick,
            className: _classnames_2_3_1_classnames_default()(btnClsObj)
        });

        if (TagName !== 'button') {
            delete tagAttrs.type;

            if (tagAttrs.disabled) {
                delete tagAttrs.onClick; // a 标签的 onClick 浏览器默认不会禁用
                tagAttrs.href && delete tagAttrs.href; // a 标签在禁用状态下无跳转
            }
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            TagName,
            extends_default()({}, tagAttrs, { dir: rtl ? 'rtl' : undefined, onMouseUp: this.onMouseUp, ref: this.buttonRefHandler }),
            loadingIcon,
            clonedChildren
        );
    };

    return Button;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), button__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 按钮的类型
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['primary', 'secondary', 'normal']),
    /**
     * 按钮的尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 按钮中可配置的 Icon，格式为 { loading: <Icon type="loading" /> }
     */
    icons: _prop_types_15_8_1_prop_types_default.a.shape({
        loading: _prop_types_15_8_1_prop_types_default.a.node
    }),
    /**
     * 按钮中 Icon 的尺寸，用于替代 Icon 的默认大小
     */
    iconSize: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.oneOf(['xxs', 'xs', 'small', 'medium', 'large', 'xl', 'xxl', 'xxxl', 'inherit']), _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 当 component = 'button' 时，设置 button 标签的 type 值
     */
    htmlType: _prop_types_15_8_1_prop_types_default.a.oneOf(['submit', 'reset', 'button']),
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.oneOf(['button', 'a', 'div', 'span']),
    /**
     * 设置按钮的载入状态
     */
    loading: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为幽灵按钮
     */
    ghost: _prop_types_15_8_1_prop_types_default.a.oneOf([true, false, 'light', 'dark']),
    /**
     * 是否为文本按钮
     */
    text: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为警告按钮
     */
    warning: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 点击按钮的回调
     * @param {Object} e Event Object
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    onMouseUp: _prop_types_15_8_1_prop_types_default.a.func,
    children: _prop_types_15_8_1_prop_types_default.a.node
}), button__class.defaultProps = {
    prefix: 'next-',
    type: 'normal',
    size: 'medium',
    icons: {},
    htmlType: 'button',
    component: 'button',
    loading: false,
    ghost: false,
    text: false,
    warning: false,
    disabled: false,
    onClick: function onClick() {}
}, button__temp2);
button_Button.displayName = 'Button';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/button/view/group.js






var view_group__class, view_group__temp;






/**
 * Button.Group
 */
var group_ButtonGroup = (view_group__temp = view_group__class = function (_Component) {
    inherits_default()(ButtonGroup, _Component);

    function ButtonGroup() {
        classCallCheck_default()(this, ButtonGroup);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    ButtonGroup.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            size = _props.size,
            children = _props.children,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'size', 'children', 'rtl']);

        var groupCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'btn-group'] = true, _classNames[className] = className, _classNames));

        var cloneChildren = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child) {
            if (child) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                    size: size
                });
            }
        });

        if (rtl) {
            others.dir = 'rtl';
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, others, { className: groupCls }),
            cloneChildren
        );
    };

    return ButtonGroup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), view_group__class.propTypes = extends_default()({}, config_provider.propTypes, {
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 统一设置 Button 组件的按钮大小
     */
    size: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.node
}), view_group__class.defaultProps = {
    prefix: 'next-',
    size: 'medium'
}, view_group__temp);
group_ButtonGroup.displayName = 'ButtonGroup';


/* harmony default export */ var group = (config_provider.config(group_ButtonGroup));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/button/index.js






button_Button.Group = group;

/* harmony default export */ var es_button = (config_provider.config(button_Button, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('shape' in props) {
            deprecated('shape', 'text | warning | ghost', 'Button');

            var _props = props,
                shape = _props.shape,
                type = _props.type,
                others = objectWithoutProperties_default()(_props, ['shape', 'type']);

            var newType = type;
            if (type === 'light' || type === 'dark' || type === 'secondary' && shape === 'warning') {
                newType = 'normal';
            }

            var ghost = void 0;
            if (shape === 'ghost') {
                ghost = {
                    primary: 'dark',
                    secondary: 'dark',
                    normal: 'light',
                    dark: 'dark',
                    light: 'light'
                }[type || button_Button.defaultProps.type];
            }

            var text = shape === 'text';
            var warning = shape === 'warning';

            props = extends_default()({ type: newType, ghost: ghost, text: text, warning: warning }, others);
        }

        return props;
    }
}));
// EXTERNAL MODULE: external {"root":"moment","commonjs2":"moment","commonjs":"moment","amd":"moment"}
var external___root___moment___commonjs2___moment___commonjs___moment___amd___moment__ = __webpack_require__(11);
var external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default = /*#__PURE__*/__webpack_require__.n(external___root___moment___commonjs2___moment___commonjs___moment___amd___moment__);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/utils/index.js




var DAYS_OF_WEEK = 7;

var CALENDAR_TABLE_COL_COUNT = 7;

var CALENDAR_TABLE_ROW_COUNT = 6;

var MONTH_TABLE_ROW_COUNT = 4;

var MONTH_TABLE_COL_COUNT = 3;

var YEAR_TABLE_ROW_COUNT = 4;

var YEAR_TABLE_COL_COUNT = 3;

var CALENDAR_MODE_YEAR = 'year';

var CALENDAR_MODE_MONTH = 'month';

var CALENDAR_MODE_DATE = 'date';

var CALENDAR_MODES = [CALENDAR_MODE_DATE, CALENDAR_MODE_MONTH, CALENDAR_MODE_YEAR];

function isDisabledDate(date, fn, view) {
    if (typeof fn === 'function' && fn(date, view)) {
        return true;
    }
    return false;
}

function checkMomentObj(props, propName, componentName) {
    if (props[propName] && !external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(props[propName])) {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object');
    }
}

function formatDateValue(value) {
    var reservedValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (value && external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(value)) {
        return value;
    }
    return reservedValue;
}

function getVisibleMonth(defaultVisibleMonth, value) {
    var getVM = defaultVisibleMonth;
    if (typeof getVM !== 'function' || !external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(getVM())) {
        getVM = function getVM() {
            if (value) {
                return value;
            }
            return external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()();
        };
    }
    return getVM();
}

function isSameYearMonth(dateA, dateB) {
    return dateA.month() === dateB.month() && dateA.year() === dateB.year();
}

function preFormatDateValue(value, format) {
    var val = typeof value === 'string' ? external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(value, format, false) : value;
    if (val && external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(val) && val.isValid()) {
        return val;
    }

    return null;
}

function getLocaleData(_ref, localeData) {
    var _months = _ref.months,
        shortMonths = _ref.shortMonths,
        _firstDayOfWeek = _ref.firstDayOfWeek,
        _weekdays = _ref.weekdays,
        shortWeekdays = _ref.shortWeekdays,
        veryShortWeekdays = _ref.veryShortWeekdays;

    return extends_default()({}, localeData, {
        monthsShort: function monthsShort() {
            return shortMonths || localeData.monthsShort();
        },
        months: function months() {
            return _months || localeData.months();
        },
        firstDayOfWeek: function firstDayOfWeek() {
            return _firstDayOfWeek || localeData.firstDayOfWeek();
        },
        weekdays: function weekdays() {
            return _weekdays || localeData.weekdays;
        },
        weekdaysShort: function weekdaysShort() {
            return shortWeekdays || localeData.weekdaysShort();
        },
        weekdaysMin: function weekdaysMin() {
            return veryShortWeekdays || localeData.weekdaysMin();
        }
    });
}

/* istanbul ignore next */
function getYears(yearRange, yearRangeOffset, year) {
    var options = [];
    var startYear = yearRange[0],
        endYear = yearRange[1];

    if (!startYear || !endYear) {
        startYear = year - yearRangeOffset;
        endYear = year + yearRangeOffset;
    }

    for (var i = startYear; i <= endYear; i++) {
        options.push({
            label: i,
            value: i
        });
    }
    return options;
}

/* istanbul ignore next */
function getMonths(momentLocale) {
    var localeMonths = momentLocale.monthsShort();
    var options = [];
    for (var i = 0; i < 12; i++) {
        options.push({
            value: i,
            label: localeMonths[i]
        });
    }
    return options;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tag/tag.js






var tag__class, tag__temp;










var tag_noop = func.noop,
    tag_bindCtx = func.bindCtx;


var PRESET_COLOR_REG = /blue|green|orange|red|turquoise|yellow/;

/**
 * Tag
 */
var tag_Tag = (tag__temp = tag__class = function (_Component) {
    inherits_default()(Tag, _Component);

    function Tag(props) {
        classCallCheck_default()(this, Tag);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.onKeyDown = function (e) {
            // 针对无障碍化要求 添加键盘SPACE事件
            var _this$props = _this.props,
                closable = _this$props.closable,
                closeArea = _this$props.closeArea,
                onClick = _this$props.onClick,
                disabled = _this$props.disabled;

            if (e.keyCode !== KEYCODE.SPACE || disabled) {
                return;
            }

            e.preventDefault();
            e.stopPropagation();

            if (closable) {
                _this.handleClose(closeArea);
            } else {
                typeof onClick === 'function' && onClick(e);
            }
        };

        _this.state = {
            visible: true
        };

        tag_bindCtx(_this, ['handleBodyClick', 'handleTailClick', 'handleAnimationInit', 'handleAnimationEnd', 'renderTailNode']);
        return _this;
    }

    Tag.prototype.componentWillUnmount = function componentWillUnmount() {
        this.__destroyed = true;
    };

    Tag.prototype.handleClose = function handleClose(from) {
        var _this2 = this;

        var _props = this.props,
            animation = _props.animation,
            onClose = _props.onClose;

        var hasAnimation = support.animation && animation;

        // 先执行回调
        var result = onClose(from, this.tagNode);

        // 如果回调函数返回 false，则阻止关闭行为
        if (result !== false && !this.__destroyed) {
            this.setState({
                visible: false
            }, function () {
                // 如果没有动画，则直接执行 afterClose
                !hasAnimation && _this2.props.afterClose(_this2.tagNode);
            });
        }
    };

    // 标签体点击


    Tag.prototype.handleBodyClick = function handleBodyClick(e) {
        var _props2 = this.props,
            closable = _props2.closable,
            closeArea = _props2.closeArea,
            onClick = _props2.onClick;

        var node = e.currentTarget;

        if (node && (node === e.target || node.contains(e.target))) {
            if (closable && closeArea === 'tag') {
                this.handleClose('tag');
            }

            if (typeof onClick === 'function') {
                return onClick(e);
            }
        }
    };

    Tag.prototype.handleTailClick = function handleTailClick(e) {
        e && e.preventDefault();
        e && e.stopPropagation();

        this.handleClose('tail');
    };

    Tag.prototype.handleAnimationInit = function handleAnimationInit(node) {
        this.props.afterAppear(node);
    };

    Tag.prototype.handleAnimationEnd = function handleAnimationEnd(node) {
        this.props.afterClose(node);
    };

    Tag.prototype.renderAnimatedTag = function renderAnimatedTag(children, animationName) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_animate,
            {
                animation: animationName,
                afterAppear: this.handleAnimationInit,
                afterLeave: this.handleAnimationEnd
            },
            children
        );
    };

    Tag.prototype.renderTailNode = function renderTailNode() {
        var _props3 = this.props,
            prefix = _props3.prefix,
            closable = _props3.closable,
            locale = _props3.locale;


        if (!closable) {
            return null;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            {
                className: prefix + 'tag-close-btn',
                onClick: this.handleTailClick,
                role: 'button',
                'aria-label': locale.delete
            },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'close' })
        );
    };

    Tag.prototype.isPresetColor = function isPresetColor() {
        var color = this.props.color;


        if (!color) {
            return false;
        }

        return PRESET_COLOR_REG.test(color);
    };

    Tag.prototype.getTagStyle = function getTagStyle() {
        var _props4 = this.props,
            _props4$color = _props4.color,
            color = _props4$color === undefined ? '' : _props4$color,
            style = _props4.style;

        var isPresetColor = this.isPresetColor();
        var customColorStyle = {
            backgroundColor: color,
            borderColor: color,
            color: '#fff'
        };

        return extends_default()({}, color && !isPresetColor ? customColorStyle : null, style);
    };

    Tag.prototype.render = function render() {
        var _classNames,
            _this3 = this;

        var _props5 = this.props,
            prefix = _props5.prefix,
            type = _props5.type,
            size = _props5.size,
            color = _props5.color,
            _shape = _props5._shape,
            closable = _props5.closable,
            closeArea = _props5.closeArea,
            className = _props5.className,
            children = _props5.children,
            animation = _props5.animation,
            disabled = _props5.disabled,
            rtl = _props5.rtl;
        var visible = this.state.visible;

        var isPresetColor = this.isPresetColor();
        var others = util_obj.pickOthers(Tag.propTypes, this.props);
        // eslint-disable-next-line no-unused-vars

        var style = others.style,
            otherTagProps = objectWithoutProperties_default()(others, ['style']);

        var shape = closable ? 'closable' : _shape;
        var bodyClazz = _classnames_2_3_1_classnames_default()([prefix + 'tag', prefix + 'tag-' + shape, prefix + 'tag-' + size], (_classNames = {}, _classNames[prefix + 'tag-level-' + type] = !color, _classNames[prefix + 'tag-closable'] = closable, _classNames[prefix + 'tag-body-pointer'] = closable && closeArea === 'tag', _classNames[prefix + 'tag-' + color] = color && isPresetColor && type === 'primary', _classNames[prefix + 'tag-' + color + '-inverse'] = color && isPresetColor && type === 'normal', _classNames), className);

        // close btn
        var tailNode = this.renderTailNode();
        // tag node
        var tagNode = !visible ? null : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                className: bodyClazz,
                onClick: this.handleBodyClick,
                onKeyDown: this.onKeyDown,
                tabIndex: disabled ? '' : '0',
                role: 'button',
                'aria-disabled': disabled,
                disabled: disabled,
                dir: rtl ? 'rtl' : undefined,
                ref: function ref(n) {
                    return _this3.tagNode = n;
                },
                style: this.getTagStyle()
            }, otherTagProps),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'tag-body' },
                children
            ),
            tailNode
        );

        if (animation && support.animation) {
            return this.renderAnimatedTag(tagNode, prefix + 'tag-zoom');
        }

        // 未开启或不支持动画
        return tagNode;
    };

    return Tag;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tag__class.propTypes = {
    /**
     * 标签类名前缀,提供给二次开发者用
     * @default next-
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 标签的类型
     * @enumdesc 普通, 主要
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'primary']),
    /**
     * 标签的尺寸（large 尺寸为兼容表单场景 large = medium）
     * @enumdesc 小, 中, 大
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),

    /**
     * 标签颜色, 目前支持：blue、 green、 orange、red、 turquoise、 yellow 和 hex 颜色值 （`color keywords`作为 Tag 组件的保留字，请勿直接使用 ）, `1.19.0` 以上版本生效
     */
    color: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否开启动效
     */
    animation: _prop_types_15_8_1_prop_types_default.a.bool,
    closeArea: _prop_types_15_8_1_prop_types_default.a.oneOf(['tag', 'tail']),
    closable: _prop_types_15_8_1_prop_types_default.a.bool,
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 标签出现动画结束后执行的回调
     */
    afterAppear: _prop_types_15_8_1_prop_types_default.a.func,
    className: _prop_types_15_8_1_prop_types_default.a.any,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 点击回调
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    _shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['default', 'closable', 'checkable']),
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    locale: _prop_types_15_8_1_prop_types_default.a.object
}, tag__class.defaultProps = {
    prefix: 'next-',
    type: 'normal',
    size: 'medium',
    closeArea: 'tail',
    animation: false,
    onClose: tag_noop,
    afterClose: tag_noop,
    afterAppear: tag_noop,
    onClick: tag_noop,
    _shape: 'default',
    disabled: false,
    rtl: false,
    locale: locale_zh_cn.Tag
}, tag__temp);
tag_Tag.displayName = 'Tag';


/* harmony default export */ var tag = (config_provider.config(tag_Tag));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tag/tag-group.js






var tag_group__class, tag_group__temp;





var tag_group_Group = (tag_group__temp = tag_group__class = function (_Component) {
    inherits_default()(Group, _Component);

    function Group() {
        classCallCheck_default()(this, Group);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Group.prototype.render = function render() {
        var _props = this.props,
            className = _props.className,
            prefix = _props.prefix,
            children = _props.children,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['className', 'prefix', 'children', 'rtl']);

        var clazz = _classnames_2_3_1_classnames_default()((prefix || 'next-') + 'tag-group', className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ className: clazz, dir: rtl ? 'rtl' : undefined }, others),
            children
        );
    };

    return Group;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tag_group__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.any,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, tag_group__class.defaultProps = {
    prefix: 'next-',
    rtl: false
}, tag_group__temp);
tag_group_Group.displayName = 'Group';


/* harmony default export */ var tag_group = (tag_group_Group);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tag/selectable.js





var selectable__class, selectable__temp;








var selectable_noop = func.noop,
    selectable_bindCtx = func.bindCtx;

/**
 * Tag.Selectable
 */

var selectable_Selectable = (selectable__temp = selectable__class = function (_Component) {
    inherits_default()(Selectable, _Component);

    function Selectable(props) {
        classCallCheck_default()(this, Selectable);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.state = {
            checked: 'checked' in props ? props.checked : props.defaultChecked || false
        };

        selectable_bindCtx(_this, ['handleClick']);
        return _this;
    }

    Selectable.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.checked !== undefined && props.checked !== state.checked) {
            return {
                checked: props.checked
            };
        }

        return null;
    };

    Selectable.prototype.handleClick = function handleClick(e) {
        e && e.preventDefault();
        // IE9 不支持 pointer-events，还是可能会触发 click 事件
        if (this.props.disabled) {
            return false;
        }

        var checked = this.state.checked;


        this.setState({
            checked: !checked
        });

        this.props.onChange(!checked, e);
    };

    Selectable.prototype.render = function render() {
        var attrFilterTarget = ['checked', 'defaultChecked', 'onChange', 'className',
        // 防止这些额外的参数影响 tag 的类型
        '_shape', 'closable'];

        var others = util_obj.pickOthers(attrFilterTarget, this.props);
        var isChecked = 'checked' in this.props ? this.props.checked : this.state.checked;
        var clazz = _classnames_2_3_1_classnames_default()(this.props.className, {
            checked: isChecked
        });
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(tag, extends_default()({}, others, {
            role: 'checkbox',
            _shape: 'checkable',
            'aria-checked': isChecked,
            className: clazz,
            onClick: this.handleClick
        }));
    };

    return Selectable;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), selectable__class.propTypes = {
    /**
     * 标签是否被选中，受控用法
     * tag checked or not, a controlled way
     */
    checked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 标签是否默认被选中，非受控用法
     * tag checked or not by default, a uncontrolled way
     */
    defaultChecked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 选中状态变化时触发的事件
     * @param {Boolean} checked 是否选中
     * @param {Event} e Dom 事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 标签是否被禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.any
}, selectable__class.defaultProps = {
    onChange: selectable_noop
}, selectable__temp);
selectable_Selectable.displayName = 'Selectable';


/* harmony default export */ var tag_selectable = (Object(react_lifecycles_compat_es["polyfill"])(selectable_Selectable));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tag/closeable.js






var closeable__class, closeable__temp;





/**
 * Tag.Closeable
 */
var closeable_Closeable = (closeable__temp = closeable__class = function (_Component) {
    inherits_default()(Closeable, _Component);

    function Closeable() {
        classCallCheck_default()(this, Closeable);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Closeable.prototype.render = function render() {
        var _props = this.props,
            disabled = _props.disabled,
            className = _props.className,
            closeArea = _props.closeArea,
            onClose = _props.onClose,
            afterClose = _props.afterClose,
            onClick = _props.onClick,
            type = _props.type,
            size = _props.size,
            children = _props.children,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['disabled', 'className', 'closeArea', 'onClose', 'afterClose', 'onClick', 'type', 'size', 'children', 'rtl']);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            tag,
            extends_default()({}, others, {
                rtl: rtl,
                disabled: disabled,
                className: className,
                closeArea: closeArea,
                onClose: onClose,
                afterClose: afterClose,
                onClick: onClick,
                type: type,
                size: size,
                closable: true
            }),
            children
        );
    };

    return Closeable;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), closeable__class.propTypes = {
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * closeable 标签的 onClose 响应区域, tag: 标签体, tail(默认): 关闭按钮
     * @enumdesc 标签, 尾部icon
     */
    closeArea: _prop_types_15_8_1_prop_types_default.a.oneOf(['tag', 'tail']),
    /**
     * 点击关闭按钮时的回调
     * @param {String} from 事件来源, tag: 标签体点击, tail: 关闭按钮点击
     * @returns {Boolean} true则关闭, false阻止关闭
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 标签关闭后执行的回调
     */
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击回调
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'primary']),
    /**
     * 标签的尺寸（large 尺寸为兼容表单场景 large = medium）
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    children: _prop_types_15_8_1_prop_types_default.a.any,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, closeable__class.defaultProps = {
    disabled: false,
    type: 'normal'
}, closeable__temp);
closeable_Closeable.displayName = 'Closeable';


/* harmony default export */ var tag_closeable = (closeable_Closeable);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tag/index.js







var ConfigTag = config_provider.config(tag, {
    transfrom: /* istanbul ignore next */function transfrom(props, deprecated) {
        var shape = props.shape,
            type = props.type;

        if (shape === 'selectable') {
            deprecated('shape=selectable', 'Tag.Selectable', 'Tag');
        }

        if (shape === 'deletable') {
            deprecated('shape=deletable', 'Tag.Closeable', 'Tag');
        }

        if (shape === 'link') {
            deprecated('shape=link', '<Tag><a href="x">x</a></Tag>', 'Tag');
        }

        if (shape === 'readonly' || shape === 'interactive') {
            log.warning('Warning: [ shape=' + shape + ' ] is deprecated at [ Tag ]');
        }

        if (type === 'secondary') {
            log.warning('Warning: [ type=secondary ] is deprecated at [ Tag ]');
        }

        ['count', 'marked', 'value', 'onChange'].forEach(function (key) {
            if (key in props) {
                log.warning('Warning: [ ' + key + ' ] is deprecated at [ Tag ]');
            }
        });

        if ('selected' in props || 'defaultSelected' in props) {
            log.warning('Warning: [ selected|defaultSelected  ] is deprecated at [ Tag ], use [ checked|defaultChecked ] at [ Tag.Selectable ] instead of it');
        }

        if ('closed' in props) {
            log.warning('Warning: [ closed  ] is deprecated at [ Tag ], use [ onClose ] at [ Tag.Closeable ] instead of it');
        }

        if ('onSelect' in props) {
            deprecated('onSelect', '<Tag.Selectable onChange/>', 'Tag');
        }

        if ('afterClose' in props) {
            log.warning('Warning: [ afterClose  ] is deprecated at [ Tag ], use [ afterClose ] at [ Tag.Closeable ] instead of it');
        }

        return props;
    }
});

ConfigTag.Group = config_provider.config(tag_group);

ConfigTag.Selectable = config_provider.config(tag_selectable);

// 有的地方叫做 Closeable 有的地方用Closeable, 为了保持兼容 文档类出现 Closeable, Closeable可以继续用
ConfigTag.Closable = config_provider.config(tag_closeable);
ConfigTag.Closeable = ConfigTag.Closable;

/* harmony default export */ var es_tag = (ConfigTag);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/input/base.js





var base__class, base__temp2;










var base_Base = (base__temp2 = base__class = function (_React$Component) {
    inherits_default()(Base, _React$Component);

    function Base() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Base);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleCompositionStart = function (e) {
            _this.setState({
                composition: true
            });
            _this.props.onCompositionStart(e);
        }, _this.handleCompositionEnd = function (e) {
            _this.setState({
                composition: false
            });
            _this.props.onCompositionEnd(e);

            var value = e.target.value;
            _this.props.onChange(value, e);
        }, _this.saveRef = function (input) {
            _this.inputRef = input;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Base.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if ('value' in nextProps && nextProps.value !== prevState.value && !prevState.composition) {
            var value = nextProps.value;
            return {
                value: value === undefined || value === null ? '' : value
            };
        }

        return null;
    };

    Base.prototype.ieHack = function ieHack(value) {
        return value;
    };

    Base.prototype.onChange = function onChange(e) {
        if ('stopPropagation' in e) {
            e.stopPropagation();
        } else if ('cancelBubble' in e) {
            e.cancelBubble();
        }

        var value = e.target.value;

        if (this.props.trim) {
            value = value.trim();
        }

        value = this.ieHack(value);

        // not controlled
        if (!('value' in this.props) || this.state.composition) {
            this.setState({
                value: value
            });
        }

        if (this.state.composition) {
            return;
        }

        // Number('') = 0
        if (value && this.props.htmlType === 'number') {
            value = Number(value);
        }

        this.props.onChange(value, e);
    };

    Base.prototype.onKeyDown = function onKeyDown(e) {
        var value = e.target.value;
        var maxLength = this.props.maxLength;

        var len = maxLength > 0 && value ? this.getValueLength(value) : 0;
        var opts = {};

        // has enable trim and has input whitespace
        if (this.props.trim && e.keyCode === 32) {
            opts.beTrimed = true;
        }

        // has defined maxLength and has over max length and has not input backspace and delete
        if (maxLength > 0 && (len > maxLength + 1 || (len === maxLength || len === maxLength + 1) && e.keyCode !== 8 && e.keyCode !== 46)) {
            opts.overMaxLength = true;
        }

        this.props.onKeyDown(e, opts);
    };

    Base.prototype.onFocus = function onFocus(e) {
        this.setState({
            focus: true
        });
        this.props.onFocus(e);
    };

    Base.prototype.onBlur = function onBlur(e) {
        this.setState({
            focus: false
        });
        this.props.onBlur(e);
    };

    Base.prototype.renderLength = function renderLength() {
        var _classNames;

        var _props = this.props,
            maxLength = _props.maxLength,
            showLimitHint = _props.showLimitHint,
            prefix = _props.prefix,
            rtl = _props.rtl;

        var len = maxLength > 0 && this.state.value ? this.getValueLength(this.state.value) : 0;

        var classesLenWrap = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'input-len'] = true, _classNames[prefix + 'error'] = len > maxLength, _classNames));

        var content = rtl ? maxLength + '/' + len : len + '/' + maxLength;

        return maxLength && showLimitHint ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: classesLenWrap },
            content
        ) : null;
    };

    Base.prototype.renderControl = function renderControl() {
        var _this2 = this;

        var lenWrap = this.renderLength();

        return lenWrap ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { onClick: function onClick() {
                    return _this2.focus();
                }, className: this.props.prefix + 'input-control' },
            lenWrap
        ) : null;
    };

    Base.prototype.getClass = function getClass() {
        var _classNames2;

        var _props2 = this.props,
            disabled = _props2.disabled,
            state = _props2.state,
            prefix = _props2.prefix;


        return _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'input'] = true, _classNames2[prefix + 'disabled'] = !!disabled, _classNames2[prefix + 'error'] = state === 'error', _classNames2[prefix + 'warning'] = state === 'warning', _classNames2[prefix + 'focus'] = this.state.focus, _classNames2));
    };

    Base.prototype.getProps = function getProps() {
        var _props3 = this.props,
            placeholder = _props3.placeholder,
            inputStyle = _props3.inputStyle,
            disabled = _props3.disabled,
            readOnly = _props3.readOnly,
            cutString = _props3.cutString,
            maxLength = _props3.maxLength,
            name = _props3.name,
            onCompositionStart = _props3.onCompositionStart,
            onCompositionEnd = _props3.onCompositionEnd;

        var props = {
            style: inputStyle,
            placeholder: placeholder,
            disabled: disabled,
            readOnly: readOnly,
            name: name,
            maxLength: cutString ? maxLength : undefined,
            value: this.state.value,
            onChange: this.onChange.bind(this),
            onBlur: this.onBlur.bind(this),
            onFocus: this.onFocus.bind(this),
            onCompositionStart: onCompositionStart,
            onCompositionEnd: onCompositionEnd
        };

        // fix accessibility：auto process status of aria disabled
        if (disabled) {
            props['aria-disabled'] = disabled;
        }

        return props;
    };

    Base.prototype.getInputNode = function getInputNode() {
        return this.inputRef;
    };

    Base.prototype.focus = function focus(start, end) {
        this.inputRef.focus();
        if (typeof start === 'number') {
            this.inputRef.selectionStart = start;
        }
        if (typeof end === 'number') {
            this.inputRef.selectionEnd = end;
        }
    };

    return Base;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), base__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 当前值
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 初始化值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 发生改变的时候触发的回调
     * @param {String} value 数据
     * @param {Event} e DOM事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 键盘按下的时候触发的回调
     * @param {Event} e DOM事件对象
     * @param {Object} opts 可扩展的附加信息：<br> - opts.overMaxLength: {Boolean} 已超出最大长度<br> - opts.beTrimed: {Boolean} 输入的空格被清理
     */
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用状态
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 最大长度
     */
    maxLength: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 是否展现最大长度样式（旧版本为 hasLimitHint，目前仍兼容旧用法，将在2.x直接废弃）
     */
    showLimitHint: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当设置了maxLength时，是否截断超出字符串
     */
    cutString: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 只读
     */
    readOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * onChange返回会自动去除头尾空字符
     */
    trim: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 获取焦点时候触发的回调
     * @param {Event} e DOM事件对象
     */
    onFocus: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 失去焦点时候触发的回调
     * @param {Event} e DOM事件对象
     */
    onBlur: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义字符串计算长度方式
     * @param {String} value 数据
     * @returns {Number} 自定义长度
     */
    getValueLength: _prop_types_15_8_1_prop_types_default.a.func,
    inputStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 原生type
     */
    htmlType: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * name
     */
    name: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'loading', 'success', 'warning']),
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 尺寸
     * @enumdesc 小, 中, 大
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 开启后会过滤输入法中间字母状态，文字输入完成后才会触发 onChange
     * @version 1.23
     */
    composition: _prop_types_15_8_1_prop_types_default.a.bool,
    onCompositionStart: _prop_types_15_8_1_prop_types_default.a.func,
    onCompositionEnd: _prop_types_15_8_1_prop_types_default.a.func
}), base__class.defaultProps = {
    disabled: false,
    prefix: 'next-',
    size: 'medium',
    maxLength: null,
    showLimitHint: false,
    cutString: true,
    readOnly: false,
    isPreview: false,
    trim: false,
    composition: false,
    onFocus: func.noop,
    onBlur: func.noop,
    onChange: func.noop,
    onKeyDown: func.noop,
    getValueLength: func.noop,
    onCompositionStart: func.noop,
    onCompositionEnd: func.noop,
    locale: locale_zh_cn.Input
}, base__temp2);
base_Base.displayName = 'Base';


/* harmony default export */ var input_base = (Object(react_lifecycles_compat_es["polyfill"])(base_Base));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/input/group.js






var input_group__class, input_group__temp;






/**
 * Input.Group
 */
var input_group_Group = (input_group__temp = input_group__class = function (_React$Component) {
    inherits_default()(Group, _React$Component);

    function Group() {
        classCallCheck_default()(this, Group);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Group.prototype.render = function render() {
        var _classNames, _classNames2, _classNames3;

        var _props = this.props,
            className = _props.className,
            style = _props.style,
            children = _props.children,
            prefix = _props.prefix,
            addonBefore = _props.addonBefore,
            addonAfter = _props.addonAfter,
            addonBeforeClassName = _props.addonBeforeClassName,
            addonAfterClassName = _props.addonAfterClassName,
            rtl = _props.rtl,
            disabled = _props.disabled,
            others = objectWithoutProperties_default()(_props, ['className', 'style', 'children', 'prefix', 'addonBefore', 'addonAfter', 'addonBeforeClassName', 'addonAfterClassName', 'rtl', 'disabled']);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'input-group'] = true, _classNames[prefix + 'disabled'] = disabled, _classNames[className] = !!className, _classNames));

        var addonCls = prefix + 'input-group-addon';
        var beforeCls = _classnames_2_3_1_classnames_default()(addonCls, (_classNames2 = {}, _classNames2[prefix + 'before'] = true, _classNames2[addonBeforeClassName] = addonBeforeClassName, _classNames2));
        var afterCls = _classnames_2_3_1_classnames_default()(addonCls, (_classNames3 = {}, _classNames3[prefix + 'after'] = true, _classNames3[addonAfterClassName] = addonAfterClassName, _classNames3));

        var before = addonBefore ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: beforeCls },
            addonBefore
        ) : null;

        var after = addonAfter ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: afterCls },
            addonAfter
        ) : null;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({}, others, { disabled: disabled, dir: rtl ? 'rtl' : undefined, className: cls, style: style }),
            before,
            children,
            after
        );
    };

    return Group;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), input_group__class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框前附加内容
     */
    addonBefore: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框前附加内容css
     */
    addonBeforeClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 输入框后附加内容
     */
    addonAfter: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框后额外css
     */
    addonAfterClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * rtl
     */
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, input_group__class.defaultProps = {
    prefix: 'next-'
}, input_group__temp);
input_group_Group.displayName = 'Group';


/* harmony default export */ var input_group = (config_provider.config(input_group_Group));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/input/input.js





var input__class, input__temp;









// preventDefault here can stop onBlur to keep focus state
function preventDefault(e) {
    e.preventDefault();
}

/** Input */
var input_Input = (input__temp = input__class = function (_Base) {
    inherits_default()(Input, _Base);

    function Input(props) {
        classCallCheck_default()(this, Input);

        var _this = possibleConstructorReturn_default()(this, _Base.call(this, props));

        _this.handleKeyDown = function (e) {
            if (e.keyCode === 13) {
                _this.props.onPressEnter(e);
            }

            _this.onKeyDown(e);
        };

        _this.handleKeyDownFromClear = function (e) {
            if (e.keyCode === 13) {
                _this.onClear(e);
            }
        };

        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: typeof value === 'undefined' ? '' : value
        };
        return _this;
    }

    // `Enter` was considered to be two chars in chrome , but one char in ie.
    // so we make all `Enter` to be two chars


    Input.prototype.getValueLength = function getValueLength(value) {
        var nv = '' + value;
        var strLen = this.props.getValueLength(nv);
        if (typeof strLen !== 'number') {
            strLen = nv.length;
        }

        return strLen;
    };

    Input.prototype.renderControl = function renderControl() {
        var _this2 = this;

        var _props = this.props,
            hasClear = _props.hasClear,
            readOnly = _props.readOnly,
            state = _props.state,
            prefix = _props.prefix,
            hint = _props.hint,
            extra = _props.extra,
            locale = _props.locale,
            disabled = _props.disabled,
            hoverShowClear = _props.hoverShowClear;


        var lenWrap = this.renderLength();

        var stateWrap = null;
        if (state === 'success') {
            stateWrap = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'success-filling', className: prefix + 'input-success-icon' });
        } else if (state === 'loading') {
            stateWrap = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'loading', className: prefix + 'input-loading-icon' });
        } else if (state === 'warning') {
            stateWrap = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'warning', className: prefix + 'input-warning-icon' });
        }

        var clearWrap = null;
        // showClear属性应该与disable属性为互斥状态
        var showClear = hasClear && !readOnly && !!('' + this.state.value) && !disabled;

        if (hint || showClear) {
            var hintIcon = null;
            if (hint) {
                if (typeof hint === 'string') {
                    hintIcon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: hint, className: prefix + 'input-hint' });
                } else if (Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["isValidElement"])(hint)) {
                    hintIcon = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(hint, {
                        className: _classnames_2_3_1_classnames_default()(hint.props.className, prefix + 'input-hint')
                    });
                } else {
                    hintIcon = hint;
                }
            } else {
                var _classNames;

                var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'input-hint'] = true, _classNames[prefix + 'input-clear-icon'] = true, _classNames[prefix + 'input-hover-show'] = hoverShowClear, _classNames));
                hintIcon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    type: 'delete-filling',
                    role: 'button',
                    tabIndex: '0',
                    className: cls,
                    'aria-label': locale.clear,
                    onClick: this.onClear.bind(this),
                    onMouseDown: preventDefault,
                    onKeyDown: this.handleKeyDownFromClear
                });
            }

            clearWrap = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'input-hint-wrap' },
                hasClear && hint ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    type: 'delete-filling',
                    role: 'button',
                    tabIndex: '0',
                    className: prefix + 'input-clear ' + prefix + 'input-clear-icon',
                    'aria-label': locale.clear,
                    onClick: this.onClear.bind(this),
                    onMouseDown: preventDefault,
                    onKeyDown: this.handleKeyDownFromClear
                }) : null,
                hintIcon
            );
        }

        if (state === 'loading') {
            clearWrap = null;
        }

        return clearWrap || lenWrap || stateWrap || extra ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { onClick: function onClick() {
                    return _this2.focus();
                }, className: prefix + 'input-control' },
            clearWrap,
            lenWrap,
            stateWrap,
            extra
        ) : null;
    };

    Input.prototype.renderLabel = function renderLabel() {
        var _props2 = this.props,
            label = _props2.label,
            prefix = _props2.prefix,
            id = _props2.id;

        return label ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'label',
            { className: prefix + 'input-label', htmlFor: id },
            label
        ) : null;
    };

    Input.prototype.renderInner = function renderInner(inner, cls) {
        return inner ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: cls },
            inner
        ) : null;
    };

    Input.prototype.onClear = function onClear(e) {
        if (this.props.disabled) {
            return;
        }

        // 非受控模式清空内部数据
        if (!('value' in this.props)) {
            this.setState({
                value: ''
            });
        }
        this.props.onChange('', e, 'clear');
        this.focus();
    };

    Input.prototype.render = function render() {
        var _classNames2, _classNames3, _classNames4, _classNames5, _classNames6, _classNames7, _classNames8;

        var _props3 = this.props,
            size = _props3.size,
            htmlType = _props3.htmlType,
            htmlSize = _props3.htmlSize,
            autoComplete = _props3.autoComplete,
            autoFocus = _props3.autoFocus,
            disabled = _props3.disabled,
            style = _props3.style,
            innerBefore = _props3.innerBefore,
            innerAfter = _props3.innerAfter,
            innerBeforeClassName = _props3.innerBeforeClassName,
            innerAfterClassName = _props3.innerAfterClassName,
            className = _props3.className,
            hasBorder = _props3.hasBorder,
            prefix = _props3.prefix,
            isPreview = _props3.isPreview,
            renderPreview = _props3.renderPreview,
            addonBefore = _props3.addonBefore,
            addonAfter = _props3.addonAfter,
            addonTextBefore = _props3.addonTextBefore,
            addonTextAfter = _props3.addonTextAfter,
            inputRender = _props3.inputRender,
            rtl = _props3.rtl,
            composition = _props3.composition;


        var hasAddon = addonBefore || addonAfter || addonTextBefore || addonTextAfter;
        var cls = _classnames_2_3_1_classnames_default()(this.getClass(), (_classNames2 = {}, _classNames2['' + prefix + size] = true, _classNames2[prefix + 'hidden'] = this.props.htmlType === 'hidden', _classNames2[prefix + 'noborder'] = !hasBorder || this.props.htmlType === 'file', _classNames2[prefix + 'input-group-auto-width'] = hasAddon, _classNames2[prefix + 'disabled'] = disabled, _classNames2[className] = !!className && !hasAddon, _classNames2));

        var innerCls = prefix + 'input-inner';
        var innerBeforeCls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[innerCls] = true, _classNames3[prefix + 'before'] = true, _classNames3[innerBeforeClassName] = innerBeforeClassName, _classNames3));
        var innerAfterCls = _classnames_2_3_1_classnames_default()((_classNames4 = {}, _classNames4[innerCls] = true, _classNames4[prefix + 'after'] = true, _classNames4[prefix + 'input-inner-text'] = typeof innerAfter === 'string', _classNames4[innerAfterClassName] = innerAfterClassName, _classNames4));
        var previewCls = _classnames_2_3_1_classnames_default()((_classNames5 = {}, _classNames5[prefix + 'form-preview'] = true, _classNames5[className] = !!className, _classNames5));

        var props = this.getProps();
        // custom data attributes are assigned to the top parent node
        // data-类自定义数据属性分配到顶层node节点
        var dataProps = util_obj.pickAttrsWith(this.props, 'data-');
        // Custom props are transparently transmitted to the core input node by default
        // 自定义属性默认透传到核心node节点：input
        var others = util_obj.pickOthers(extends_default()({}, dataProps, Input.propTypes), this.props);

        if (isPreview) {
            var value = props.value;
            var label = this.props.label;

            if (typeof renderPreview === 'function') {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({}, others, { className: previewCls }),
                    renderPreview(value, this.props)
                );
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                addonBefore || addonTextBefore,
                label,
                innerBefore,
                value,
                innerAfter,
                addonAfter || addonTextAfter
            );
        }

        var compositionProps = {};
        if (composition) {
            compositionProps.onCompositionStart = this.handleCompositionStart;
            compositionProps.onCompositionEnd = this.handleCompositionEnd;
        }

        var inputEl = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('input', extends_default()({}, others, props, compositionProps, {
            height: '100%',
            type: htmlType,
            size: htmlSize,
            autoFocus: autoFocus,
            autoComplete: autoComplete,
            onKeyDown: this.handleKeyDown,
            ref: this.saveRef
        }));

        var inputWrap = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({}, dataProps, { dir: rtl ? 'rtl' : undefined, className: cls, style: hasAddon ? undefined : style }),
            this.renderLabel(),
            this.renderInner(innerBefore, innerBeforeCls),
            inputRender(inputEl),
            this.renderInner(innerAfter, innerAfterCls),
            this.renderControl()
        );

        var groupCls = _classnames_2_3_1_classnames_default()((_classNames6 = {}, _classNames6[prefix + 'input-group-text'] = true, _classNames6['' + prefix + size] = !!size, _classNames6[prefix + 'disabled'] = disabled, _classNames6));

        var addonBeforeCls = _classnames_2_3_1_classnames_default()((_classNames7 = {}, _classNames7[groupCls] = addonTextBefore, _classNames7));
        var addonAfterCls = _classnames_2_3_1_classnames_default()((_classNames8 = {}, _classNames8[groupCls] = addonTextAfter, _classNames8));

        if (hasAddon) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                input_group,
                extends_default()({}, dataProps, {
                    prefix: prefix,
                    className: className,
                    style: style,
                    disabled: disabled,
                    addonBefore: addonBefore || addonTextBefore,
                    addonBeforeClassName: addonBeforeCls,
                    addonAfter: addonAfter || addonTextAfter,
                    addonAfterClassName: addonAfterCls
                }),
                inputWrap
            );
        }

        return inputWrap;
    };

    return Input;
}(input_base), input__class.getDerivedStateFromProps = input_base.getDerivedStateFromProps, input__class.propTypes = extends_default()({}, input_base.propTypes, {
    /**
     * label
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否出现clear按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有边框
     */
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 状态
     * @enumdesc 错误, 校验中, 成功, 警告
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'loading', 'success', 'warning']),
    /**
     * 按下回车的回调
     */
    onPressEnter: _prop_types_15_8_1_prop_types_default.a.func,

    onClear: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 原生type
     */
    htmlType: _prop_types_15_8_1_prop_types_default.a.string,
    htmlSize: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 水印 (Icon的type类型，和hasClear占用一个地方)
     */
    hint: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.node]),
    /**
     * 文字前附加内容
     */
    innerBefore: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 文字后附加内容
     */
    innerAfter: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框前附加内容
     */
    addonBefore: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框后附加内容
     */
    addonAfter: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框前附加文字
     */
    addonTextBefore: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框后附加文字
     */
    addonTextAfter: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * (原生input支持)
     */
    autoComplete: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自动聚焦(原生input支持)
     */
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    inputRender: _prop_types_15_8_1_prop_types_default.a.func,
    extra: _prop_types_15_8_1_prop_types_default.a.node,
    innerBeforeClassName: _prop_types_15_8_1_prop_types_default.a.string,
    innerAfterClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * hover展示clear (配合 hasClear=true使用)
     * @version 1.24
     */
    hoverShowClear: _prop_types_15_8_1_prop_types_default.a.bool
}), input__class.defaultProps = extends_default()({}, input_base.defaultProps, {
    autoComplete: 'off',
    hasBorder: true,
    isPreview: false,
    hoverShowClear: false,
    onPressEnter: func.noop,
    inputRender: function inputRender(el) {
        return el;
    }
}), input__temp);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/input/password.js






var password__class, password__temp2;







function password_preventDefault(e) {
    e.preventDefault();
}
var password_Password = (password__temp2 = password__class = function (_Input) {
    inherits_default()(Password, _Input);

    function Password() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Password);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Input.call.apply(_Input, [this].concat(args))), _this), _this.state = {
            hint: 'eye-close',
            htmlType: 'password'
        }, _this.toggleEye = function (e) {
            e.preventDefault();
            if (_this.props.disabled) return;
            var eyeClose = _this.state.hint === 'eye';

            _this.setState({
                hint: eyeClose ? 'eye-close' : 'eye',
                htmlType: eyeClose || !_this.props.showToggle ? 'password' : 'text'
            });
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Password.prototype.render = function render() {
        var _props = this.props,
            showToggle = _props.showToggle,
            others = objectWithoutProperties_default()(_props, ['showToggle']);

        var _state = this.state,
            hint = _state.hint,
            htmlType = _state.htmlType;


        var extra = showToggle ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: hint, onClick: this.toggleEye, onMouseDown: password_preventDefault }) : null;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(input_Input, extends_default()({}, others, { extra: extra, htmlType: htmlType }));
    };

    return Password;
}(input_Input), password__class.getDerivedStateFromProps = input_Input.getDerivedStateFromProps, password__class.propTypes = extends_default()({}, input_Input.propTypes, {
    /**
     * 是否展示切换按钮
     */
    showToggle: _prop_types_15_8_1_prop_types_default.a.bool
}), password__class.defaultProps = extends_default()({}, input_Input.defaultProps, {
    showToggle: true
}), password__temp2);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/input/textarea.js






var textarea__class, textarea__temp, textarea__initialiseProps;








function onNextFrame(cb) {
    if (window.requestAnimationFrame) {
        return window.requestAnimationFrame(cb);
    }
    return window.setTimeout(cb, 1);
}

function clearNextFrameAction(nextFrameId) {
    if (window.cancelAnimationFrame) {
        window.cancelAnimationFrame(nextFrameId);
    } else {
        window.clearTimeout(nextFrameId);
    }
}

// safari in mac
var isMacSafari = typeof navigator !== 'undefined' && navigator && navigator.userAgent ? navigator.userAgent.match(/^((?!chrome|android|windows).)*safari/i) : false;

var hiddenStyle = {
    visibility: 'hidden',
    position: 'absolute',
    zIndex: '-1000',
    top: '-1000px',
    overflowY: 'hidden',
    left: 0,
    right: 0
};

/**
 * Input.TextArea
 * @order 2
 */
var textarea_TextArea = (textarea__temp = textarea__class = function (_Base) {
    inherits_default()(TextArea, _Base);

    function TextArea(props) {
        classCallCheck_default()(this, TextArea);

        var _this = possibleConstructorReturn_default()(this, _Base.call(this, props));

        textarea__initialiseProps.call(_this);

        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: typeof value === 'undefined' ? '' : value
        };
        return _this;
    }

    TextArea.prototype.componentDidMount = function componentDidMount() {
        var autoHeight = this.props.autoHeight;
        if (autoHeight) {
            if ((typeof autoHeight === 'undefined' ? 'undefined' : typeof_default()(autoHeight)) === 'object') {
                /* eslint-disable react/no-did-mount-set-state */
                this.setState(this._getMinMaxHeight(autoHeight, this.state.value));
            } else {
                this.setState({
                    height: this._getHeight(this.state.value),
                    overflowY: 'hidden'
                });
            }
        }
    };

    TextArea.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (this.props.autoHeight && this.props.value !== prevProps.value) {
            this._resizeTextArea(this.props.value);
        }
    };

    TextArea.prototype._getMinMaxHeight = function _getMinMaxHeight(_ref, value) {
        var minRows = _ref.minRows,
            maxRows = _ref.maxRows;

        var node = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.helpRef);
        if (!node) {
            return {};
        }
        node.setAttribute('rows', minRows);
        var minHeight = node.clientHeight;

        node.setAttribute('rows', maxRows);
        var maxHeight = node.clientHeight;

        node.setAttribute('rows', '1');
        var height = this._getHeight(value);

        return {
            minHeight: minHeight,
            maxHeight: maxHeight,
            height: height,
            overflowY: height <= maxHeight ? 'hidden' : undefined
        };
    };

    TextArea.prototype._getHeight = function _getHeight(value) {
        var node = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.helpRef);
        if (!node) {
            return 0;
        }
        node.value = value;

        return node.scrollHeight;
    };

    TextArea.prototype.ieHack = function ieHack(value) {
        // Fix: textarea dit not support maxLength in ie9
        /* istanbul ignore if */
        if (util_env.ieVersion === 9 && this.props.maxLength) {
            var maxLength = parseInt(this.props.maxLength);
            var len = this.getValueLength(value, true);
            if (len > maxLength && this.props.cutString) {
                value = value.replace(/\n/g, '\n\n');
                value = value.substr(0, maxLength);
                value = value.replace(/\n\n/g, '\n');
            }
        }

        this.props.autoHeight && this._resizeTextArea(value);

        return value;
    };

    /**
     * value.length !== maxLength  in ie/safari(mac) while value has `Enter`
     * about maxLength compute: `Enter` was considered to be one char(\n) in chrome , but two chars(\r\n) in ie/safari(mac).
     * so while value has `Enter`, we should let display length + 1
     */


    TextArea.prototype.getValueLength = function getValueLength(value) {
        var _props = this.props,
            maxLength = _props.maxLength,
            cutString = _props.cutString;


        var nv = '' + value;
        var strLen = this.props.getValueLength(nv);
        if (typeof strLen !== 'number') {
            strLen = nv.length;
        }

        /* istanbul ignore if */
        if (util_env.ieVersion || isMacSafari) {
            strLen = strLen + nv.split('\n').length - 1;
            if (strLen > maxLength && cutString) {
                strLen = maxLength;
            }
        }

        return strLen;
    };

    TextArea.prototype.saveTextAreaRef = function saveTextAreaRef(textArea) {
        this.inputRef = textArea;
    };

    TextArea.prototype.saveHelpRef = function saveHelpRef(ref) {
        this.helpRef = ref;
    };

    TextArea.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props2 = this.props,
            rows = _props2.rows,
            style = _props2.style,
            className = _props2.className,
            autoHeight = _props2.autoHeight,
            isPreview = _props2.isPreview,
            renderPreview = _props2.renderPreview,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            hasBorder = _props2.hasBorder,
            size = _props2.size,
            composition = _props2.composition;


        var cls = _classnames_2_3_1_classnames_default()(this.getClass(), (_classNames = {}, _classNames['' + prefix + size] = size === 'large' || 'size' === 'small', _classNames[prefix + 'input-textarea'] = true, _classNames[prefix + 'noborder'] = !hasBorder, _classNames[className] = !!className, _classNames));

        var props = this.getProps();
        // custom data attributes are assigned to the top parent node
        // data-类自定义数据属性分配到顶层node节点
        var dataProps = util_obj.pickAttrsWith(this.props, 'data-');
        // Custom props are transparently transmitted to the core input node by default
        // 自定义属性默认透传到核心node节点：input
        var others = util_obj.pickOthers(extends_default()({}, dataProps, TextArea.propTypes), this.props);

        var textareStyle = extends_default()({}, props.style, {
            height: this.state.height,
            minHeight: this.state.minHeight,
            maxHeight: this.state.maxHeight,
            overflowY: this.state.overflowY
        });

        var previewCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'input-textarea'] = true, _classNames2[prefix + 'form-preview'] = true, _classNames2[className] = !!className, _classNames2));

        var wrapStyle = autoHeight ? extends_default()({}, style, { position: 'relative' }) : style;

        if (isPreview) {
            var value = props.value;

            if ('renderPreview' in this.props) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({}, others, { className: previewCls }),
                    renderPreview(value, this.props)
                );
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                value.split('\n').map(function (data, i) {
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'p',
                        { key: 'p-' + i },
                        data
                    );
                })
            );
        }

        var compositionProps = {};
        if (composition) {
            compositionProps.onCompositionStart = this.handleCompositionStart;
            compositionProps.onCompositionEnd = this.handleCompositionEnd;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({ className: cls, style: wrapStyle, dir: rtl ? 'rtl' : undefined }, dataProps),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('textarea', extends_default()({}, others, props, compositionProps, {
                'data-real': true,
                rows: rows,
                style: textareStyle,
                ref: this.saveRef.bind(this),
                onKeyDown: this.onKeyDown.bind(this)
            })),
            autoHeight ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('textarea', {
                'data-fake': true,
                ref: this.saveHelpRef.bind(this),
                style: extends_default()({}, props.style, hiddenStyle),
                rows: '1'
            }) : null,
            this.renderControl()
        );
    };

    return TextArea;
}(input_base), textarea__class.getDerivedStateFromProps = input_base.getDerivedStateFromProps, textarea__class.propTypes = extends_default()({}, input_base.propTypes, {
    /**
     * 是否有边框
     */
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 状态
     * @enumdesc 错误
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'warning']),
    /**
     * 自动高度 true / {minRows: 2, maxRows: 4}
     */
    autoHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * 多行文本框高度 <br />(不要直接用height设置多行文本框的高度, ie9 10会有兼容性问题)
     */
    rows: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func
}), textarea__class.defaultProps = extends_default()({}, input_base.defaultProps, {
    hasBorder: true,
    isPreview: false,
    rows: 4,
    autoHeight: false
}), textarea__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this._resizeTextArea = function (value) {
        if (_this2.nextFrameActionId) {
            clearNextFrameAction(_this2.nextFrameActionId);
        }
        _this2.nextFrameActionId = onNextFrame(function () {
            var height = _this2._getHeight(value);
            var maxHeight = _this2.state.maxHeight ? _this2.state.maxHeight : Infinity;

            _this2.setState({
                height: _this2._getHeight(value),
                overflowY: height <= maxHeight ? 'hidden' : undefined
            });
        });
    };
}, textarea__temp);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/input/index.js








input_Input.Password = config_provider.config(password_Password, {
    exportNames: ['getInputNode', 'focus'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasLimitHint' in props) {
            deprecated('hasLimitHint', 'showLimitHint', 'Input');

            var _props = props,
                hasLimitHint = _props.hasLimitHint,
                others = objectWithoutProperties_default()(_props, ['hasLimitHint']);

            props = extends_default()({ showLimitHint: hasLimitHint }, others);
        }

        return props;
    }
});

input_Input.TextArea = config_provider.config(textarea_TextArea, {
    exportNames: ['getInputNode', 'focus'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasLimitHint' in props) {
            deprecated('hasLimitHint', 'showLimitHint', 'Input');

            var _props2 = props,
                hasLimitHint = _props2.hasLimitHint,
                others = objectWithoutProperties_default()(_props2, ['hasLimitHint']);

            props = extends_default()({ showLimitHint: hasLimitHint }, others);
        }

        return props;
    }
});
input_Input.Group = input_group;

// 用来自动生成文档的工具底层依赖的 react-docgen，无法解析生成 HOC 的方法中存在第二个参数的情况
// 所以不能在 input.jsx／textarea.jsx 中生成 HOC
/* harmony default export */ var es_input = (config_provider.config(input_Input, {
    exportNames: ['getInputNode', 'focus'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasLimitHint' in props) {
            deprecated('hasLimitHint', 'showLimitHint', 'Input');

            var _props3 = props,
                hasLimitHint = _props3.hasLimitHint,
                others = objectWithoutProperties_default()(_props3, ['hasLimitHint']);

            props = extends_default()({ showLimitHint: hasLimitHint }, others);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/util.js





/**
 * util module
 */

/**
 * 是否是单选模式
 * @param {string} mode
 * @return {boolean} is single mode
 */
function util_isSingle(mode) {
    return !mode || mode === 'single';
}

/**
 * 在 Select 中，认为 null 和 undefined 都是空值
 * @param {*} n any object
 * @return {boolean}
 */
function isNull(n) {
    return n === null || n === undefined;
}

/**
 * 将字符串中的正则表达式关键字符添加转义
 * @param {string} str
 * @return {string}
 */
function escapeForReg(str) {
    return str.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
}

/**
 * filter by key
 * @param {string} key filter key
 * @param {object} item item object
 * @return {boolean} it's filtered
 */
function util_filter(key, item) {
    var _key = escapeForReg('' + key);
    var regExp = new RegExp('(' + _key + ')', 'ig');

    return regExp.test('' + item.value) || regExp.test('' + item.label);
}

/**
 * loop map
 * @param {Array} dataSource
 * @param {function} callback
 * @return {Array}
 * ----
 * @callback ~loopCallback
 * @param {object} option
 */
function loopMap(dataSource, callback) {
    var result = [];
    dataSource.forEach(function (option) {
        if (option.children) {
            var children = loopMap(option.children, callback);
            result.push(extends_default()({}, option, {
                children: children
            }));
        } else {
            // eslint-disable-next-line callback-return
            var tmp = callback(option);
            tmp && result.push(tmp);
        }
    });

    return result;
}

/**
 * Parse dataSource from MenuItem
 * @static
 * @param {Array<Element>} children
 * @param {number} [deep=0] recursion deep level
 */
function parseDataSourceFromChildren(children) {
    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    var source = [];

    external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(children, function (child, index) {
        if (!child) {
            return;
        }
        var type = child.type,
            childProps = child.props;

        var item2 = { deep: deep };

        var isOption = false;
        var isOptionGroup = false;

        if (typeof type === 'function' && type._typeMark === 'next_select_option' || type === 'option') {
            isOption = true;
        }
        if (typeof type === 'function' && type._typeMark === 'next_select_option_group' || type === 'optgroup') {
            isOptionGroup = true;
        }

        if (!isOption && !isOptionGroup) {
            return;
        }

        if (isOption) {
            // option
            // If children is a string, it can be used as value
            var isStrChild = typeof childProps.children === 'string';
            // value > key > string children > index
            item2.value = 'value' in childProps ? childProps.value : 'key' in childProps ? childProps.key : isStrChild ? childProps.children : '' + index;

            item2.label = childProps.label || childProps.children || '' + item2.value;
            if ('title' in childProps) {
                item2.title = childProps.title;
            }
            childProps.disabled === true && (item2.disabled = true);
            // You can put your extra data here, and use it in `itemRender` or `labelRender`
            extends_default()(item2, childProps['data-extra'] || {});
        } else if (isOptionGroup && deep < 1) {
            // option group
            item2.label = childProps.label || 'Group';
            // parse children nodes
            item2.children = parseDataSourceFromChildren(childProps.children, deep + 1);
        }

        source.push(item2);
    });

    return source;
}

/**
 * Normalize dataSource
 * @static
 * @param {Array} dataSource
 * @param {number} [deep=0] recursion deep level
 * ----
 * value priority: value > 'index'
 * label priority: label > 'value' > 'index'
 * disabled: disabled === true
 */
function util_normalizeDataSource(dataSource) {
    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var showDataSourceChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    var source = [];

    dataSource.forEach(function (item, index) {
        // enable array of basic type
        if (/string|boolean|number/.test(typeof item === 'undefined' ? 'undefined' : typeof_default()(item)) || item === null || item === undefined) {
            item = { label: '' + item, value: item };
        }

        // filter off addon item
        if (item && item.__isAddon) {
            return;
        }

        var item2 = { deep: deep };
        // deep < 1: only 2 level allowed
        if (Array.isArray(item.children) && deep < 1 && showDataSourceChildren) {
            // handle group
            item2.label = item.label || item.value || 'Group ' + index;
            // parse children
            item2.children = util_normalizeDataSource(item.children, deep + 1);
        } else {
            var _item = item,
                value = _item.value,
                label = _item.label,
                disabled = _item.disabled,
                title = _item.title,
                others = objectWithoutProperties_default()(_item, ['value', 'label', 'disabled', 'title']);
            // undefined 认为是没传取 index 值替代


            item2.value = typeof value !== 'undefined' ? value : '' + index;
            item2.label = label || '' + item2.value;
            if ('title' in item) {
                item2.title = title;
            }
            disabled === true && (item2.disabled = true);

            extends_default()(item2, others);
        }

        source.push(item2);
    });

    return source;
}

/**
 * Get flatten dataSource
 * @static
 * @param  {Array} dataSource structured dataSource
 * @return {Array}
 */
function flattingDataSource(dataSource) {
    var source = [];

    dataSource.forEach(function (item) {
        if (Array.isArray(item.children)) {
            source.push.apply(source, flattingDataSource(item.children));
        } else {
            source.push(item);
        }
    });

    return source;
}

function filterDataSource(dataSource, key, filter, addonKey) {
    if (!Array.isArray(dataSource)) {
        return [];
    }
    if (typeof key === 'undefined' || key === null) {
        return [].concat(dataSource);
    }

    var addKey = true;
    var menuDataSource = loopMap(dataSource, function (option) {
        if (key === '' + option.value) {
            addKey = false;
        }
        return filter(key, option) && !option.__isAddon && option;
    });

    // if key not in menuDataSource, add key to dataSource
    if (addonKey && key && addKey) {
        menuDataSource.unshift({
            value: key,
            label: key,
            __isAddon: true
        });
    }

    return menuDataSource;
}

function getKeyItemByValue(value, valueMap) {
    var item = void 0;

    if ((typeof value === 'undefined' ? 'undefined' : typeof_default()(value)) === 'object') {
        if (value.hasOwnProperty('value')) {
            item = value;
        } else {
            item = extends_default()({
                value: ''
            }, value);
        }
    } else {
        item = valueMap['' + value] || {
            value: value,
            label: value
        };
    }

    return item;
}

/**
 * compute valueDataSource by new value
 * @param {Array/String} value 数据
 * @param {Object} mapValueDS   上个value的缓存数据 value => {value,label} 的映射关系表
 * @param {*} mapMenuDS  通过 dataSource 建立 value => {value,label} 的映射关系表
 * @returns {Object} value: [value]; valueDS: [{value,label}]; mapValueDS: {value: {value,label}}
 */
function getValueDataSource(value, mapValueDS, mapMenuDS) {
    if (isNull(value)) {
        return {};
    }

    var newValue = [];
    var newValueDS = [];
    var newMapValueDS = {};
    var _newMapDS = extends_default()({}, mapValueDS, mapMenuDS);

    if (Array.isArray(value)) {
        value.forEach(function (v) {
            var item = getKeyItemByValue(v, _newMapDS);

            newValueDS.push(item);
            newMapValueDS['' + item.value] = item;
            newValue.push(item.value);
        });

        return {
            value: newValue, // [value]
            valueDS: newValueDS, // [{value,label}]
            mapValueDS: newMapValueDS // {value: {value,label}}
        };
    } else {
        var _mapValueDS;

        var item = getKeyItemByValue(value, _newMapDS);

        return {
            value: item.value,
            valueDS: item,
            mapValueDS: (_mapValueDS = {}, _mapValueDS['' + item.value] = item, _mapValueDS)
        };
    }
}

/**
 * Get flatten dataSource
 * @static
 * @param  {any} value structured dataSource
 * @return {String}
 */
function valueToSelectKey(value) {
    var val = void 0;
    if ((typeof value === 'undefined' ? 'undefined' : typeof_default()(value)) === 'object' && value.hasOwnProperty('value')) {
        val = value.value;
    } else {
        val = value;
    }
    return '' + val;
}

/**
 * UP Down 改进双向链表方法
 */
// function DoubleLinkList(element){
//     this.prev = null;
//     this.next = null;
//     this.element = element;
// }
//
// export function mapDoubleLinkList(dataSource){
//
//     const mapDS = {};
//     let doubleLink = null;
//
//     let head = null;
//     let tail = null;
//
//     function  append(element) {
//         if (!doubleLink) {
//             doubleLink = new DoubleLinkList(element);
//             head = doubleLink;
//             tail = doubleLink;
//             return doubleLink;
//         }
//
//         const node = new DoubleLinkList(element);
//         tail.next = node;
//         node.prev = tail;
//         tail = node;
//
//         return tail;
//     }
//
//     dataSource.forEach((item => {
//         if (item.disabled) {
//             return;
//         }
//         mapDS[`${item.value}`] = append(item);
//     }));
//
//     return mapDS;
// }
//
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/data-store.js




/**
 * manage dataSource for menu list
 */

var data_store_DataStore = function () {
    function DataStore(options) {
        classCallCheck_default()(this, DataStore);

        this.options = extends_default()({
            filter: util_filter,
            key: undefined,
            addonKey: false,
            filterLocal: true,
            showDataSourceChildren: true
        }, options);

        // origin data
        this.dataSource = [];
        // current data for menu display
        this.menuDataSource = [];
        // key=>value map for menuDataSource
        this.mapDataSource = {};
        // current data can be select (not disabled) on menu
        this.enabledDataSource = [];
        this.flattenDataSource = [];
    }

    DataStore.prototype.setOptions = function setOptions(options) {
        extends_default()(this.options, options);
    };

    DataStore.prototype.updateByDS = function updateByDS(dataSource) {
        var isChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        this.dataSource = isChildren ? parseDataSourceFromChildren(dataSource) : util_normalizeDataSource(dataSource, 0, this.options.showDataSourceChildren);
        return this.updateAll();
    };

    DataStore.prototype.updateByKey = function updateByKey(key) {
        if (key === this.options.key) {
            return this.getMenuDS();
        }

        this.options.key = key;
        return this.updateAll();
    };

    DataStore.prototype.getOriginDS = function getOriginDS() {
        return this.dataSource;
    };

    DataStore.prototype.getMenuDS = function getMenuDS() {
        return this.menuDataSource;
    };

    DataStore.prototype.getFlattenDS = function getFlattenDS() {
        return this.flattenDataSource;
    };

    DataStore.prototype.getEnableDS = function getEnableDS() {
        return this.enabledDataSource;
    };

    DataStore.prototype.getMapDS = function getMapDS() {
        return this.mapDataSource;
    };

    DataStore.prototype.updateAll = function updateAll() {
        var _this = this;

        var _options = this.options,
            key = _options.key,
            filter = _options.filter,
            filterLocal = _options.filterLocal,
            showDataSourceChildren = _options.showDataSourceChildren;

        this.menuDataSource = filterDataSource(this.dataSource, filterLocal ? key : '', filter, this.options.addonKey);

        this.flattenDataSource = showDataSourceChildren ? flattingDataSource(this.menuDataSource) : this.menuDataSource;

        this.mapDataSource = {};
        this.flattenDataSource.forEach(function (item) {
            _this.mapDataSource['' + item.value] = item;
        });

        this.enabledDataSource = this.flattenDataSource.filter(function (item) {
            return !item.disabled;
        });

        return this.menuDataSource;
    };

    return DataStore;
}();

/* harmony default export */ var data_store = (data_store_DataStore);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/virtual-list/virtual-list.js




var virtual_list__class, virtual_list__temp;








var NOOP = function NOOP() {};
var MAX_SYNC_UPDATES = 40;

var isEqualSubset = function isEqualSubset(a, b) {
    for (var key in b) {
        if (a[key] !== b[key]) {
            return false;
        }
    }

    return true;
};

var virtual_list_getOffset = function getOffset(el) {
    var offset = el.clientLeft || 0;
    do {
        offset += el.offsetTop || 0;
        el = el.offsetParent;
    } while (el);
    return offset;
};

var constrain = function constrain(from, size, _ref) {
    var children = _ref.children,
        minSize = _ref.minSize;

    var length = children && children.length;
    size = Math.max(size, minSize);
    if (size > length) {
        size = length;
    }
    from = from ? Math.max(Math.min(from, length - size), 0) : 0;

    return { from: from, size: size };
};
/** VirtualList */
var virtual_list_VirtualList = (virtual_list__temp = virtual_list__class = function (_Component) {
    inherits_default()(VirtualList, _Component);

    function VirtualList(props) {
        classCallCheck_default()(this, VirtualList);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        var jumpIndex = props.jumpIndex;

        var _constrain = constrain(jumpIndex, 0, props),
            from = _constrain.from,
            size = _constrain.size;

        _this.state = { from: from, size: size };
        _this.cache = {};
        _this.cacheAdd = {};
        _this.scrollTo = _this.scrollTo.bind(_this);
        _this.cachedScroll = null;
        _this.unstable = false;
        _this.updateCounter = 0;
        return _this;
    }

    VirtualList.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var from = prevState.from,
            size = prevState.size;


        return constrain(from, size, nextProps);
    };

    VirtualList.prototype.componentDidMount = function componentDidMount() {
        var jumpIndex = this.props.jumpIndex;


        this.updateFrameAndClearCache = this.updateFrameAndClearCache.bind(this);

        util_events.on(window, 'resize', this.updateFrameAndClearCache);

        this.updateFrame(this.scrollTo.bind(this, jumpIndex));
    };

    VirtualList.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var _this2 = this;

        var oldIndex = prevProps.jumpIndex;
        var newIndex = this.props.jumpIndex;

        if (oldIndex !== newIndex) {
            this.updateFrame(this.scrollTo.bind(this, newIndex));
        }

        // If the list has reached an unstable state, prevent an infinite loop.
        if (this.unstable) {
            return;
        }

        if (++this.updateCounter > MAX_SYNC_UPDATES) {
            this.unstable = true;
        }

        if (!this.updateCounterTimeoutId) {
            this.updateCounterTimeoutId = setTimeout(function () {
                _this2.updateCounter = 0;
                delete _this2.updateCounterTimeoutId;
            }, 0);
        }

        this.updateFrame();
    };

    VirtualList.prototype.componentWillUnmount = function componentWillUnmount() {
        util_events.off(window, 'resize', this.updateFrameAndClearCache);

        util_events.off(this.scrollParent, 'scroll', this.updateFrameAndClearCache);
        util_events.off(this.scrollParent, 'mousewheel', NOOP);
    };

    VirtualList.prototype.maybeSetState = function maybeSetState(b, cb) {
        if (isEqualSubset(this.state, b)) {
            return cb();
        }

        this.setState(b, cb);
    };

    VirtualList.prototype.getEl = function getEl() {
        return this.el || this.items || {};
    };

    VirtualList.prototype.getScrollParent = function getScrollParent() {
        var el = this.getEl();
        el = el.parentElement;

        switch (window.getComputedStyle(el).overflowY) {
            case 'auto':
            case 'scroll':
            case 'overlay':
            case 'visible':
                return el;
        }

        return window;
    };

    VirtualList.prototype.getScroll = function getScroll() {
        // Cache scroll position as this causes a forced synchronous layout.
        // if (typeof this.cachedScroll === 'number') {
        //     return this.cachedScroll;
        // }
        var scrollParent = this.scrollParent;

        var scrollKey = 'scrollTop';
        var actual = scrollParent === window ? // Firefox always returns document.body[scrollKey] as 0 and Chrome/Safari
        // always return document.documentElement[scrollKey] as 0, so take
        // whichever has a value.
        document.body[scrollKey] || document.documentElement[scrollKey] : scrollParent[scrollKey];
        var max = this.getScrollSize() - this.getViewportSize();

        var scroll = Math.max(0, Math.min(actual, max));
        var el = this.getEl();
        this.cachedScroll = virtual_list_getOffset(scrollParent) + scroll - virtual_list_getOffset(el);

        return this.cachedScroll;
    };

    VirtualList.prototype.setScroll = function setScroll(offset) {
        var scrollParent = this.scrollParent;

        offset += virtual_list_getOffset(this.getEl());
        if (scrollParent === window) {
            return window.scrollTo(0, offset);
        }

        offset -= virtual_list_getOffset(this.scrollParent);
        scrollParent.scrollTop = offset;
    };

    VirtualList.prototype.getViewportSize = function getViewportSize() {
        var scrollParent = this.scrollParent;

        return scrollParent === window ? window.innerHeight : scrollParent.clientHeight;
    };

    VirtualList.prototype.getScrollSize = function getScrollSize() {
        var scrollParent = this.scrollParent;
        var _document = document,
            body = _document.body,
            documentElement = _document.documentElement;

        var key = 'scrollHeight';
        return scrollParent === window ? Math.max(body[key], documentElement[key]) : scrollParent[key];
    };

    VirtualList.prototype.getStartAndEnd = function getStartAndEnd() {
        var threshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.threshold;

        var scroll = this.getScroll();

        var trueScroll = scroll;
        var start = Math.max(0, trueScroll - threshold);
        var end = trueScroll + this.getViewportSize() + threshold;

        return { start: start, end: end };
    };

    // Called by 'scroll' and 'resize' events, clears scroll position cache.


    VirtualList.prototype.updateFrameAndClearCache = function updateFrameAndClearCache(cb) {
        this.cachedScroll = null;
        return this.updateFrame(cb);
    };

    VirtualList.prototype.updateFrame = function updateFrame(cb) {
        this.updateScrollParent();

        if (typeof cb !== 'function') {
            cb = NOOP;
        }

        return this.updateVariableFrame(cb);
    };

    VirtualList.prototype.updateScrollParent = function updateScrollParent() {
        var prev = this.scrollParent;
        this.scrollParent = this.getScrollParent();

        if (prev === this.scrollParent) {
            return;
        }
        if (prev) {
            util_events.off(prev, 'scroll', this.updateFrameAndClearCache);
            util_events.off(prev, 'mousewheel', NOOP);
        }

        util_events.on(this.scrollParent, 'scroll', this.updateFrameAndClearCache);
        util_events.on(this.scrollParent, 'mousewheel', NOOP);

        // You have to attach mousewheel listener to the scrollable element.
        // Just an empty listener. After that onscroll events will be fired synchronously.
    };

    VirtualList.prototype.updateVariableFrame = function updateVariableFrame(cb) {
        if (!this.props.itemSizeGetter) {
            this.cacheSizes();
        }

        var _getStartAndEnd = this.getStartAndEnd(),
            start = _getStartAndEnd.start,
            end = _getStartAndEnd.end;

        var _props = this.props,
            pageSize = _props.pageSize,
            children = _props.children;

        var length = children.length;
        var space = 0;
        var from = 0;
        var size = 0;
        var maxFrom = length - 1;

        while (from < maxFrom) {
            var itemSize = this.getSizeOf(from);
            if (itemSize === null || itemSize === undefined || space + itemSize > start) {
                break;
            }
            space += itemSize;
            ++from;
        }

        var maxSize = length - from;

        while (size < maxSize && space < end) {
            var _itemSize = this.getSizeOf(from + size);
            if (_itemSize === null || _itemSize === undefined) {
                size = Math.min(size + pageSize, maxSize);
                break;
            }
            space += _itemSize;
            ++size;
        }

        this.maybeSetState({ from: from, size: size }, cb);
    };

    VirtualList.prototype.getSpaceBefore = function getSpaceBefore(index) {
        var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (!index) {
            return 0;
        }
        if (cache[index] !== null && cache[index] !== undefined) {
            return cache[index] || 0;
        }

        // Find the closest space to index there is a cached value for.
        var from = index;
        while (from > 0 && (cache[from] === null || cache[from] === undefined)) {
            from--;
        }

        // Finally, accumulate sizes of items from - index.
        var space = cache[from] || 0;
        for (var i = from; i < index; ++i) {
            cache[i] = space;
            var itemSize = this.getSizeOf(i);
            if (itemSize === null || itemSize === undefined) {
                break;
            }
            space += itemSize;
        }

        cache[index] = space;

        return cache[index] || 0;
    };

    VirtualList.prototype.cacheSizes = function cacheSizes() {
        var cache = this.cache;
        var from = this.state.from;
        var _items = this.items,
            children = _items.children,
            _items$props = _items.props,
            props = _items$props === undefined ? {} : _items$props;

        var itemEls = children || props.children || [];

        try {
            // <Select useVirtual /> 模式下，在快速点击切换Tab的情况下（Select实例快速出现、消失） 有时会出现this.items不存在，导致页面报错。怀疑是Select的异步timer渲染逻辑引起的
            for (var i = 0, l = itemEls.length; i < l; ++i) {
                var ulRef = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.items);
                var height = ulRef.children[i].offsetHeight;
                if (height > 0) {
                    cache[from + i] = height;
                }
            }
        } catch (error) {
            // ...
        }
    };

    VirtualList.prototype.getSizeOf = function getSizeOf(index) {
        var cache = this.cache;
        var _props2 = this.props,
            itemSizeGetter = _props2.itemSizeGetter,
            jumpIndex = _props2.jumpIndex;

        // Try the cache.

        if (index in cache) {
            return cache[index];
        }
        if (itemSizeGetter) {
            return itemSizeGetter(index);
        }

        if (!this.defaultItemHeight && jumpIndex > -1) {
            var keysList = Object.keys(this.cache);
            var len = keysList.length;
            var height = this.cache[len - 1];
            this.defaultItemHeight = height;
        }

        if (this.defaultItemHeight) {
            return this.defaultItemHeight;
        }
    };

    VirtualList.prototype.scrollTo = function scrollTo(index) {
        this.setScroll(this.getSpaceBefore(index, this.cacheAdd));
    };

    VirtualList.prototype.renderMenuItems = function renderMenuItems() {
        var _this3 = this;

        var _props3 = this.props,
            children = _props3.children,
            itemsRenderer = _props3.itemsRenderer;
        var _state = this.state,
            from = _state.from,
            size = _state.size;

        var items = [];

        for (var i = 0; i < size; ++i) {
            items.push(children[from + i]);
        }

        return itemsRenderer(items, function (c) {
            _this3.items = c;
            return _this3.items;
        });
    };

    VirtualList.prototype.render = function render() {
        var _cx,
            _this4 = this;

        var _props4 = this.props,
            _props4$children = _props4.children,
            children = _props4$children === undefined ? [] : _props4$children,
            prefix = _props4.prefix,
            className = _props4.className;

        var length = children.length;
        var from = this.state.from;

        var items = this.renderMenuItems();

        var style = { position: 'relative' };

        var size = this.getSpaceBefore(length, {});

        if (size) {
            style.height = size;
        }
        var offset = this.getSpaceBefore(from, this.cacheAdd);
        var transform = 'translate(0px, ' + offset + 'px)';
        var listStyle = {
            msTransform: transform,
            WebkitTransform: transform,
            transform: transform
        };

        var cls = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'virtual-list-wrapper'] = true, _cx[className] = !!className, _cx));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                className: cls,
                style: style,
                ref: function ref(c) {
                    _this4.el = c;
                    return _this4.el;
                }
            },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { style: listStyle },
                items
            )
        );
    };

    return VirtualList;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), virtual_list__class.displayName = 'VirtualList', virtual_list__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 渲染的子节点
     */
    children: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 最小加载数量
     */
    minSize: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 一屏数量
     */
    pageSize: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 父渲染函数，默认为 (items, ref) => <ul ref={ref}>{items}</ul>
     */
    itemsRenderer: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 缓冲区高度
     */
    threshold: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 获取item高度的函数
     */
    itemSizeGetter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置跳转位置，需要设置 itemSizeGetter 才能生效, 不设置认为元素等高并取第一个元素高度作为默认高
     */
    jumpIndex: _prop_types_15_8_1_prop_types_default.a.number,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, virtual_list__class.defaultProps = {
    prefix: 'next-',
    itemsRenderer: function itemsRenderer(items, ref) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ul',
            { ref: ref },
            items
        );
    },
    minSize: 1,
    pageSize: 10,
    jumpIndex: 0,
    threshold: 100
}, virtual_list__temp);
virtual_list_VirtualList.displayName = 'VirtualList';


/* harmony default export */ var virtual_list = (Object(react_lifecycles_compat_es["polyfill"])(virtual_list_VirtualList));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/virtual-list/index.js



/* harmony default export */ var es_virtual_list = (config_provider.config(virtual_list));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/base.js





var select_base__class, base__temp;















var base_Popup = next_es_overlay.Popup;
var MenuItem = es_menu.Item,
    MenuGroup = es_menu.Group;
var base_noop = func.noop,
    base_bindCtx = func.bindCtx,
    base_makeChain = func.makeChain;


function base_preventDefault(e) {
    e.preventDefault();
}

var select_base_Base = (base__temp = select_base__class = function (_React$Component) {
    inherits_default()(Base, _React$Component);

    function Base(props) {
        classCallCheck_default()(this, Base);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.handleMouseDown = function (e) {
            if (!_this.props.popupAutoFocus) {
                base_preventDefault(e);
            }
        };

        _this.saveSelectRef = function (ref) {
            _this.selectDOM = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(ref);
        };

        _this.saveInputRef = function (ref) {
            if (ref && ref.getInstance()) {
                _this.inputRef = ref.getInstance();
            }
        };

        _this.savePopupRef = function (ref) {
            _this.popupRef = ref;
        };

        _this.dataStore = new data_store({
            filter: props.filter,
            filterLocal: props.filterLocal,
            showDataSourceChildren: props.showDataSourceChildren
        });

        var mode = props.mode;

        var value = 'value' in props ? props.value : props.defaultValue;

        // 多选情况下做 value 数组订正
        if (props.mode !== 'single' && value && !Array.isArray(value)) {
            value = [value];
        }

        _this.state = {
            dataStore: _this.dataStore,
            value: value,
            visible: 'visible' in props ? props.visible : props.defaultVisible,
            dataSource: _this.setDataSource(_this.props),
            width: 100,
            highlightKey: 'highlightKey' in props ? props.highlightKey : props.defaultHighlightKey || props.defaultValue,
            srReader: ''
        };

        base_bindCtx(_this, ['handleMenuBodyClick', 'handleVisibleChange', 'focusInput', 'beforeOpen', 'beforeClose', 'afterClose', 'handleResize']);
        return _this;
    }

    Base.prototype.componentDidMount = function componentDidMount() {
        var _this2 = this;

        // overlay 还没有完成 mount，所以需要滞后同步宽度
        setTimeout(function () {
            return _this2.syncWidth();
        }, 0);

        util_events.on(window, 'resize', this.handleResize);
    };

    Base.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (prevProps.label !== this.props.label || prevState.value !== this.state.value) {
            this.syncWidth();
        }
    };

    Base.prototype.componentWillUnmount = function componentWillUnmount() {
        util_events.off(window, 'resize', this.handleResize);
        clearTimeout(this.resizeTimeout);
    };

    /**
     * Calculate and set width of popup menu
     * @protected
     */


    Base.prototype.syncWidth = function syncWidth() {
        var _this3 = this;

        var _props2 = this.props,
            popupStyle = _props2.popupStyle,
            popupProps = _props2.popupProps;

        if (popupStyle && 'width' in popupStyle || popupProps && popupProps.style && 'width' in popupProps.style) {
            return;
        }

        var width = util_dom.getStyle(this.selectDOM, 'width');
        if (width && this.width !== width) {
            this.width = width;

            if (this.popupRef && this.shouldAutoWidth()) {
                // overy 的 node 节点可能没有挂载完成，所以这里需要异步
                setTimeout(function () {
                    if (_this3.popupRef) {
                        util_dom.setStyle(_this3.popupRef, 'width', _this3.width);
                        return;
                    }
                }, 0);
            }
        }
    };

    Base.prototype.handleResize = function handleResize() {
        var _this4 = this;

        clearTimeout(this.resizeTimeout);
        if (this.state.visible) {
            this.resizeTimeout = setTimeout(function () {
                _this4.syncWidth();
            }, 200);
        }
    };

    /**
     * Get structured dataSource, for cache
     * @protected
     * @param  {Object} [props=this.props]
     * @return {Array}
     */


    Base.prototype.setDataSource = function setDataSource(props) {
        var dataSource = props.dataSource,
            children = props.children;

        // children is higher priority then dataSource

        if (external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].count(children)) {
            return this.dataStore.updateByDS(children, true);
        } else if (Array.isArray(dataSource)) {
            return this.dataStore.updateByDS(dataSource, false);
        }
        return [];
    };

    /**
     * Set popup visible
     * @protected
     * @param {boolean} visible
     * @param {string} type trigger type
     */


    Base.prototype.setVisible = function setVisible(visible, type) {
        // disabled 状态下只允许关闭不允许打开
        if (this.props.disabled && visible || this.state.visible === visible) {
            return;
        }

        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        this.props.onVisibleChange(visible, type);
    };

    Base.prototype.setFirstHightLightKeyForMenu = function setFirstHightLightKeyForMenu(searchValue) {
        // 判断value/highlightKey解决受控后，默认高亮第一个元素问题。(当搜索值时，搜索后应执行默认选择第一个元素)
        var highlightKey = this.state.highlightKey;

        if (!this.props.autoHighlightFirstItem) {
            return;
        }

        // 设置高亮 item key
        if (this.dataStore.getMenuDS().length && this.dataStore.getEnableDS().length && (!highlightKey || searchValue)) {
            var _highlightKey = '' + this.dataStore.getEnableDS()[0].value;
            this.setState({
                highlightKey: _highlightKey
            });
            this.props.onToggleHighlightItem(_highlightKey, 'autoFirstItem');
        }

        // 当有搜索值且搜索条件与dataSource不匹配时(搜索条件不满足不会出现可选择的列表，所以高亮key应为null)
        if (searchValue && !this.dataStore.getEnableDS().length) {
            this.setState({
                highlightKey: null
            });
            this.props.onToggleHighlightItem(null, 'highlightKeyToNull');
        }
    };

    Base.prototype.handleChange = function handleChange(value) {
        var _props3;

        // 非受控模式清空内部数据
        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
        }

        (_props3 = this.props).onChange.apply(_props3, [value].concat(args));
    };

    /**
     * Handle Menu body click
     * @param {Event} e click event
     */


    Base.prototype.handleMenuBodyClick = function handleMenuBodyClick(e) {
        if (!this.props.popupAutoFocus) {
            this.focusInput(e);
        }
    };

    /**
     * Toggle highlight MenuItem
     * @private
     * @param {number} dir -1: up, 1: down
     */


    Base.prototype.toggleHighlightItem = function toggleHighlightItem(dir) {
        if (!this.state.visible) {
            this.setVisible(true, 'enter');
            return;
        }

        var maxCount = this.dataStore.getEnableDS().length;
        // When there is no enabled item
        if (!maxCount) {
            return false;
        }

        var highlightKey = this.state.highlightKey;

        var highlightIndex = -1;

        // find previous highlight index
        highlightKey !== null && this.dataStore.getEnableDS().some(function (item, index) {
            if ('' + item.value === highlightKey) {
                highlightIndex = index;
            }
            return highlightIndex > -1;
        });

        // toggle highlight index
        highlightIndex += dir;
        if (highlightIndex < 0) {
            highlightIndex = maxCount - 1;
        }
        if (highlightIndex >= maxCount) {
            highlightIndex = 0;
        }

        // get highlight key
        var highlightItem = this.dataStore.getEnableDS()[highlightIndex];
        highlightKey = highlightItem ? '' + highlightItem.value : null;

        this.setState({ highlightKey: highlightKey, srReader: highlightItem.label });

        this.scrollMenuIntoView();

        return highlightItem;
    };

    // scroll into focus item


    Base.prototype.scrollMenuIntoView = function scrollMenuIntoView() {
        var _this5 = this;

        var prefix = this.props.prefix;


        clearTimeout(this.highlightTimer);
        this.highlightTimer = setTimeout(function () {
            try {
                var menuNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(_this5.menuRef);
                var itemNode = menuNode.querySelector('.' + prefix + 'select-menu-item.' + prefix + 'focused');
                itemNode && itemNode.scrollIntoViewIfNeeded && itemNode.scrollIntoViewIfNeeded();
            } catch (ex) {
                // I don't care...
            }
        });
    };

    /**
     * render popup menu header
     * @abstract
     */


    Base.prototype.renderMenuHeader = function renderMenuHeader() {
        var menuProps = this.props.menuProps;


        if (menuProps && 'header' in menuProps) {
            return menuProps.header;
        }

        return null;
    };

    Base.prototype.handleSelect = function handleSelect() {};

    /**
     * 防止 onBlur/onFocus 抖动
     */

    /**
     * render popup children
     * @protected
     * @param {object} props
     */
    Base.prototype.renderMenu = function renderMenu() {
        var _classNames,
            _this6 = this;

        var _props4 = this.props,
            prefix = _props4.prefix,
            mode = _props4.mode,
            locale = _props4.locale,
            notFoundContent = _props4.notFoundContent,
            useVirtual = _props4.useVirtual,
            menuProps = _props4.menuProps;
        var _state = this.state,
            dataSource = _state.dataSource,
            highlightKey = _state.highlightKey;

        var value = this.state.value;
        var selectedKeys = void 0;

        if (isNull(value) || value.length === 0 || this.isAutoComplete) {
            selectedKeys = [];
        } else if (util_isSingle(mode)) {
            selectedKeys = [valueToSelectKey(value)];
        } else {
            selectedKeys = [].concat(value).map(function (n) {
                return valueToSelectKey(n);
            });
        }

        var children = this.renderMenuItem(dataSource);

        var menuClassName = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'select-menu'] = true, _classNames[prefix + 'select-menu-empty'] = !children || !children.length, _classNames));

        if (!children || !children.length) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'select-menu-empty-content' },
                notFoundContent || locale.notFoundContent
            );
        }

        var customProps = extends_default()({}, menuProps, {
            children: children,
            role: 'listbox',
            selectedKeys: selectedKeys,
            focusedKey: highlightKey,
            focusable: false,
            selectMode: util_isSingle(mode) ? 'single' : 'multiple',
            onSelect: this.handleMenuSelect,
            onItemClick: this.handleItemClick,
            header: this.renderMenuHeader(),
            onClick: this.handleMenuBodyClick,
            onMouseDown: this.handleMouseDown,
            className: menuClassName
        });
        var menuStyle = this.shouldAutoWidth() ? { width: '100%' } : { minWidth: this.width };

        return useVirtual && children.length > 10 ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'select-menu-wrapper', style: extends_default()({ position: 'relative' }, menuStyle) },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_virtual_list,
                {
                    itemsRenderer: function itemsRenderer(items, _ref) {
                        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            es_menu,
                            extends_default()({
                                ref: function ref(c) {
                                    _ref(c);
                                    _this6.menuRef = c;
                                },
                                flatenContent: true
                            }, customProps),
                            items
                        );
                    }
                },
                children
            )
        ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_menu, extends_default()({}, customProps, { style: menuStyle }));
    };

    /**
     * render menu item
     * @protected
     * @param {Array} dataSource
     */


    Base.prototype.renderMenuItem = function renderMenuItem(dataSource) {
        var _this7 = this;

        var _props5 = this.props,
            prefix = _props5.prefix,
            itemRender = _props5.itemRender,
            showDataSourceChildren = _props5.showDataSourceChildren;
        // If it has.

        var searchKey = void 0;
        if (this.isAutoComplete) {
            // In AutoComplete, value is the searchKey
            searchKey = this.state.value;
        } else {
            searchKey = this.state.searchValue;
        }

        return dataSource.map(function (item, index) {
            if (!item) {
                return null;
            }
            if (Array.isArray(item.children) && showDataSourceChildren) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    MenuGroup,
                    { key: index, label: item.label },
                    _this7.renderMenuItem(item.children)
                );
            } else {
                var itemProps = {
                    role: 'option',
                    key: item.value,
                    className: prefix + 'select-menu-item',
                    disabled: item.disabled
                };

                if ('title' in item) {
                    itemProps.title = item.title;
                }

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    MenuItem,
                    itemProps,
                    itemRender(item, searchKey)
                );
            }
        });
    };

    /**
     * 点击 arrow 或 label 的时候焦点切到 input 中
     * @override
     */
    Base.prototype.focusInput = function focusInput() {
        this.inputRef.focus();
    };

    Base.prototype.focus = function focus() {
        var _inputRef;

        (_inputRef = this.inputRef).focus.apply(_inputRef, arguments);
    };

    Base.prototype.beforeOpen = function beforeOpen() {
        if (this.props.mode === 'single') {
            this.setFirstHightLightKeyForMenu();
        }
        this.syncWidth();
    };

    Base.prototype.beforeClose = function beforeClose() {};

    Base.prototype.afterClose = function afterClose() {};

    Base.prototype.shouldAutoWidth = function shouldAutoWidth() {
        if (this.props.popupComponent) {
            return false;
        }

        return this.props.autoWidth;
    };

    Base.prototype.render = function render(props) {
        var _classNames2;

        var prefix = props.prefix,
            mode = props.mode,
            popupProps = props.popupProps,
            popupContainer = props.popupContainer,
            popupClassName = props.popupClassName,
            popupStyle = props.popupStyle,
            popupContent = props.popupContent,
            canCloseByTrigger = props.canCloseByTrigger,
            followTrigger = props.followTrigger,
            cache = props.cache,
            popupComponent = props.popupComponent,
            isPreview = props.isPreview,
            renderPreview = props.renderPreview,
            style = props.style,
            className = props.className;


        var cls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'select-auto-complete-menu'] = !popupContent && this.isAutoComplete, _classNames2[prefix + 'select-' + mode + '-menu'] = !popupContent && !!mode, _classNames2), popupClassName || popupProps.className);

        if (isPreview) {
            if (this.isAutoComplete) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, {
                    style: style,
                    className: className,
                    isPreview: isPreview,
                    renderPreview: renderPreview,
                    value: this.state.value
                });
            } else {
                var value = this.state.value;
                var valueDS = this.state.value;

                if (!this.useDetailValue()) {
                    if (value === this.valueDataSource.value) {
                        valueDS = this.valueDataSource.valueDS;
                    } else {
                        valueDS = getValueDataSource(value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS()).valueDS;
                    }
                }

                if (typeof renderPreview === 'function') {
                    var _classNames3;

                    var previewCls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'form-preview'] = true, _classNames3[className] = !!className, _classNames3));
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { style: style, className: previewCls },
                        renderPreview(valueDS, this.props)
                    );
                } else {
                    var fillProps = this.props.fillProps;

                    if (mode === 'single') {
                        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, {
                            style: style,
                            className: className,
                            isPreview: isPreview,
                            value: valueDS ? fillProps ? valueDS[fillProps] : valueDS.label : ''
                        });
                    } else {
                        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, {
                            style: style,
                            className: className,
                            isPreview: isPreview,
                            value: (valueDS || []).map(function (i) {
                                return i.label;
                            }).join(', ')
                        });
                    }
                }
            }
        }

        var _props = extends_default()({
            triggerType: 'click',
            autoFocus: !!this.props.popupAutoFocus,
            cache: cache
        }, popupProps, {
            //beforeOpen node not mount, afterOpen too slow.
            // from display:none to block, we may need to recompute width
            beforeOpen: base_makeChain(this.beforeOpen, popupProps.beforeOpen),
            beforeClose: base_makeChain(this.beforeClose, popupProps.beforeClose),
            afterClose: base_makeChain(this.afterClose, popupProps.afterClose),
            canCloseByTrigger: canCloseByTrigger,
            followTrigger: followTrigger,
            visible: this.state.visible,
            onVisibleChange: this.handleVisibleChange,
            shouldUpdatePosition: true,
            container: popupContainer || popupProps.container,
            className: cls,
            style: popupStyle || popupProps.style
        });

        if (popupProps.v2) {
            delete _props.shouldUpdatePosition;
        }

        var Tag = popupComponent ? popupComponent : base_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({}, _props, { trigger: this.renderSelect() }),
            popupContent ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: prefix + 'select-popup-wrap',
                    style: this.shouldAutoWidth() ? { width: this.width } : {},
                    ref: this.savePopupRef
                },
                popupContent
            ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: prefix + 'select-spacing-tb',
                    style: this.shouldAutoWidth() ? { width: this.width } : {},
                    ref: this.savePopupRef
                },
                this.renderMenu()
            )
        );
    };

    return Base;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), select_base__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选择器尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    // 当前值，用于受控模式
    value: _prop_types_15_8_1_prop_types_default.a.any, // to be override
    // 初始化的默认值
    defaultValue: _prop_types_15_8_1_prop_types_default.a.any, // to be override
    /**
     * 没有值的时候的占位符
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 下拉菜单是否与选择器对齐
     */
    autoWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义内联 label
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否有清除按钮（单选模式有效）
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 校验状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'loading', 'success', 'warning']),
    /**
     * 是否只读，只读模式下可以展开弹层但不能选
     */
    readOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用选择器
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当前弹层是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层初始化是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示或隐藏时触发的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层挂载的容器节点
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层的 className
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层的内联样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 添加到弹层上的属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义弹层的内容
     */
    popupContent: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 添加到菜单上的属性
     * @version 1.18
     */
    menuProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否使用本地过滤，在数据源为远程的时候需要关闭此项
     */
    filterLocal: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 本地过滤方法，返回一个 Boolean 值确定是否保留
     * @param {String} key 搜索关键字
     * @param {Object} item 渲染节点的item
     * @return {Boolean} 是否匹配
     */
    filter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 默认高亮的 key，不要和 autoHighlightFirstItem 同时使用
     */
    defaultHighlightKey: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 高亮 key，不要和 autoHighlightFirstItem 同时使用，用于受控模式
     */
    highlightKey: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 键盘上下键切换菜单高亮选项的回调
     */
    onToggleHighlightItem: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自动高亮第一个元素
     */
    autoHighlightFirstItem: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否开启虚拟滚动模式
     */
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    // 自定义类名
    className: _prop_types_15_8_1_prop_types_default.a.any,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    mode: _prop_types_15_8_1_prop_types_default.a.string,
    notFoundContent: _prop_types_15_8_1_prop_types_default.a.node,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    popupComponent: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    showDataSourceChildren: _prop_types_15_8_1_prop_types_default.a.bool
}, select_base__class.defaultProps = {
    prefix: 'next-',
    size: 'medium',
    autoWidth: true,
    onChange: base_noop,
    onVisibleChange: base_noop,
    onToggleHighlightItem: base_noop,
    popupProps: {},
    filterLocal: true,
    filter: util_filter,
    itemRender: function itemRender(item) {
        return item.label || item.value;
    },
    locale: locale_zh_cn.Select,
    autoHighlightFirstItem: true,
    showDataSourceChildren: true,
    defaultHighlightKey: null
}, base__temp);
select_base_Base.displayName = 'Base';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/select.js






var select__class, select__temp;

/* eslint-disable valid-jsdoc */













var select_bindCtx = func.bindCtx,
    select_noop = func.noop;

var isIE9 = util_env.ieVersion === 9;

/**
 * 无障碍化注意事项:
 * 1. Select 无搜索情况下，不应该让 Input 可focus，此时外层wrap必须可focus，并且需要相应focus事件让外边框发生变化
 *
 * TODO: hightLight 后续改造注意点
 * 1. hightLight 跟随点击变化(fixed) 2. 弹窗打开时根据 是否高亮第一个选项的 api开关设置是否hightLight 第一项
 */

// 自定义弹层：1. 不需要关心Menu的点击事件 2. 不需要关心dataSource变化

/**
 * Select
 */
var select_Select = (select__temp = select__class = function (_Base) {
    inherits_default()(Select, _Base);

    function Select(props) {
        classCallCheck_default()(this, Select);

        // because dataSource maybe updated while select a item, so we should cache choosen value's item
        var _this = possibleConstructorReturn_default()(this, _Base.call(this, props));

        _this.handleWrapClick = function (e) {
            // ignore click on input to choose text
            if (e.target.nodeName !== 'INPUT') {
                e.preventDefault();
            }
            _this.focusInput();
        };

        _this.handleArrowClick = function (e) {
            e.preventDefault();
            _this.focusInput();

            // because of can not close Popup by click Input while hasSearch.
            // so when Popup open and hasSearch, we should close Popup intentionally
            _this.state.visible && _this.hasSearch() && _this.setVisible(false);
        };

        _this.handleClear = function (e) {
            e.stopPropagation();
            _this.selectAllYet = false;
            _this.handleChange(undefined, 'clear');
        };

        _this.valueDataSource = {
            valueDS: [], // [{value,label}]
            mapValueDS: {} // {value: {value,label}}
        };

        var searchValue = 'searchValue' in props ? props.searchValue : '';

        _this.dataStore.setOptions({
            key: searchValue,
            addonKey: props.mode === 'tag' // tag 模式手动输入的数据
        });

        extends_default()(_this.state, {
            searchValue: searchValue,
            dataSource: _this.setDataSource(props)
        });

        // 根据value和计算后的dataSource，更新value对应的详细数据valueDataSource
        if (typeof _this.state.value !== 'undefined') {
            _this.valueDataSource = getValueDataSource(_this.state.value, _this.valueDataSource.mapValueDS, _this.dataStore.getMapDS());
        }

        select_bindCtx(_this, ['handleMenuSelect', 'handleItemClick', 'handleSearch', 'handleSearchKeyDown', 'handleSelectAll', 'maxTagPlaceholder']);
        return _this;
    }

    Select.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        if ('value' in nextProps && nextProps.value !== prevState.value) {
            extends_default()(state, {
                value: nextProps.value
            });
        }

        if ('highlightKey' in nextProps && nextProps.highlightKey !== prevState.highlightKey) {
            extends_default()(state, {
                highlightKey: nextProps.highlightKey
            });
        }

        if ('searchValue' in nextProps && nextProps.searchValue !== prevState.searchValue) {
            var searchValue = nextProps.searchValue;
            extends_default()(state, {
                searchValue: searchValue === undefined || searchValue === null ? '' : searchValue
            });
        }

        if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
            extends_default()(state, {
                visible: nextProps.visible
            });
        }

        if (Object.keys(state).length) {
            return state;
        }

        return null;
    };

    Select.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        var props = this.props;
        if ('searchValue' in props && this.state.searchValue !== prevState.searchValue) {
            this.dataStore.setOptions({ key: this.state.searchValue });
        }

        if (props.mode !== prevProps.mode) {
            this.dataStore.setOptions({
                addonKey: props.mode === 'tag'
            });
        }
        if (props.mode !== prevProps.mode) {
            this.dataStore.setOptions({
                addonKey: props.mode === 'tag'
            });
        }
        if (props.filter !== prevProps.filter) {
            this.dataStore.setOptions({
                filter: props.filter
            });
        }
        if (props.filterLocal !== prevProps.filterLocal) {
            this.dataStore.setOptions({
                filterLocal: props.filterLocal
            });
        }

        if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
            /* eslint-disable react/no-did-update-set-state */
            this.setState({
                dataSource: this.setDataSource(props)
            });

            if (!props.popupContent) {
                this.setFirstHightLightKeyForMenu(this.state.searchValue);
            }
        }

        if ('value' in props) {
            this.valueDataSource = getValueDataSource(props.value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
            this.updateSelectAllYet(this.valueDataSource.value);
        } else if ('defaultValue' in props && props.defaultValue === this.valueDataSource.value && (props.children !== prevProps.children || props.dataSource !== prevProps.dataSource)) {
            // has defaultValue and value not changed and dataSource changed
            // fix: set defaultValue first, then update dataSource.
            this.valueDataSource = getValueDataSource(props.defaultValue, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
        }

        if (prevProps.label !== this.props.label || prevState.value !== this.state.value || props.searchValue !== this.state.searchValue) {
            this.syncWidth();
        }
    };

    Select.prototype.componentDidMount = function componentDidMount() {
        if (isIE9) {
            this.ie9Hack();
        }
        _Base.prototype.componentDidMount.call(this);
    };

    // ie9 下 table-cell 布局不支持宽度超出隐藏


    Select.prototype.ie9Hack = function ie9Hack() {
        try {
            var width = this.selectDOM.currentStyle.width;
            this.setState({
                fixWidth: width !== 'auto'
            });
        } catch (e) {
            //
        }
    };

    Select.prototype.useDetailValue = function useDetailValue() {
        var _props = this.props,
            popupContent = _props.popupContent,
            useDetailValue = _props.useDetailValue,
            dataSource = _props.dataSource;

        return useDetailValue || popupContent && !dataSource;
    };

    Select.prototype.hasSearch = function hasSearch() {
        var _props2 = this.props,
            showSearch = _props2.showSearch,
            mode = _props2.mode;

        return showSearch || mode === 'tag';
    };

    Select.prototype.getTagSize = function getTagSize() {
        var _props3 = this.props,
            size = _props3.size,
            adjustTagSize = _props3.adjustTagSize;

        if (adjustTagSize) {
            return size;
        }
        return size === 'large' ? 'medium' : 'small';
    };

    /**
     * Menu.Item onSelect
     * @private
     * @param  {Array<string>} keys
     * @
     */


    Select.prototype.handleMenuSelect = function handleMenuSelect(keys, item) {
        var _props4 = this.props,
            mode = _props4.mode,
            readOnly = _props4.readOnly,
            disabled = _props4.disabled;


        if (readOnly || disabled) {
            return false;
        }

        var isSingle = mode === 'single';

        if (isSingle) {
            // 单选
            return this.handleSingleSelect(keys[0], 'itemClick');
        } else {
            // 正常多选
            return this.handleMultipleSelect(keys, 'itemClick', item.props && item.props._key);
        }
    };

    Select.prototype.handleItemClick = function handleItemClick() {
        if (!this.props.popupAutoFocus) {
            this.focusInput();
        }
    };

    /**
     * 单选模式
     */


    Select.prototype.handleSingleSelect = function handleSingleSelect(key, triggerType) {
        // TODO: 这里 cacheValue=false 有问题，dataSource 更新的时候就应该处理
        var cacheValue = this.props.cacheValue;
        // get data only from dataStore while cacheValue=false

        var itemObj = getValueDataSource(key, cacheValue ? this.valueDataSource.mapValueDS : {}, this.dataStore.getMapDS());
        this.valueDataSource = itemObj;

        this.setVisible(false, triggerType);

        // 应在return之前传出highlightKey
        this.setState({
            highlightKey: key
        });

        if (this.useDetailValue()) {
            return this.handleChange(itemObj.valueDS, triggerType);
        } else {
            this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
        }

        // 清空搜索
        if (!('searchValue' in this.props) && this.state.searchValue) {
            this.handleSearchClear(triggerType);
        }
    };

    /**
     * 多选模式 multiple/tag
     */


    Select.prototype.handleMultipleSelect = function handleMultipleSelect(keys, triggerType, key, keepSearchValue) {
        var _this2 = this;

        var itemObj = getValueDataSource(keys, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());

        var _props5 = this.props,
            cacheValue = _props5.cacheValue,
            mode = _props5.mode,
            hiddenSelected = _props5.hiddenSelected;

        // cache those value maybe not exists in dataSource

        if (cacheValue || mode === 'tag') {
            this.valueDataSource = itemObj;
        }

        if (hiddenSelected) {
            this.setVisible(false, triggerType);
        }

        // 因为搜索后会设置 hightLight 为第一个item，menu渲染会自动滚动到 hightLight 的元素上面。
        // 所以设置 hightLight 为当前选中项避免滚动
        key && this.state.visible && this.setState({
            highlightKey: key
        });

        if (this.useDetailValue()) {
            this.handleChange(itemObj.valueDS, triggerType);
        } else {
            this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
        }

        this.updateSelectAllYet(itemObj.value);

        // 清空搜索
        if (!('searchValue' in this.props) && this.state.searchValue && !keepSearchValue) {
            // 因为 SearchValue 被 clear 后会重新渲染 Menu，所以在 Overlay 检测 safeNode 的时候 e.target 可能会找不到导致弹窗关闭
            setTimeout(function () {
                _this2.handleSearchClear(triggerType);
            });
        }
    };

    Select.prototype.updateSelectAllYet = function updateSelectAllYet(value) {
        var _this3 = this;

        // multiple mode
        // is current state select all or not
        this.selectAllYet = false;
        if (this.props.hasSelectAll && Array.isArray(value)) {
            var selectAllValues = this.dataStore.getEnableDS().map(function (item) {
                return item.value;
            });

            if (selectAllValues.length <= value.length) {
                this.selectAllYet = true;

                selectAllValues.forEach(function (val) {
                    if (value.indexOf(val) === -1) {
                        _this3.selectAllYet = false;
                        return;
                    }
                });
            }
        }
    };

    Select.prototype.handleSearchValue = function handleSearchValue(value) {
        if (this.state.searchValue === value) {
            return;
        }

        var filterLocal = this.props.filterLocal;


        if (filterLocal) {
            if (!('searchValue' in this.props)) {
                this.setState({
                    searchValue: value,
                    dataSource: this.dataStore.updateByKey(value)
                });
                this.setFirstHightLightKeyForMenu(value);
            }
        } else if (!('searchValue' in this.props)) {
            this.setState({
                searchValue: value
            });
        }
    };

    /**
     * Handle search input change event
     * @param {String} value search text
     * @param {Event} e change Event
     */


    Select.prototype.handleSearch = function handleSearch(value, e) {
        this.handleSearchValue(value);

        // inputing should trigger popup open
        if (!this.state.visible && value) {
            this.setVisible(true);
        }

        this.props.onSearch(value, e);
    };

    Select.prototype.handleSearchClear = function handleSearchClear(triggerType) {
        this.handleSearchValue('');
        this.props.onSearchClear(triggerType);
    };

    // 搜索框 keyDown 事件


    Select.prototype.handleSearchKeyDown = function handleSearchKeyDown(e) {
        var _props6 = this.props,
            popupContent = _props6.popupContent,
            onKeyDown = _props6.onKeyDown,
            showSearch = _props6.showSearch,
            mode = _props6.mode,
            hasClear = _props6.hasClear,
            onToggleHighlightItem = _props6.onToggleHighlightItem,
            readOnly = _props6.readOnly,
            disabled = _props6.disabled;


        var hasSearch = this.hasSearch();

        if (popupContent) {
            // 搜索的时候不阻止冒泡会无法输入
            if (hasSearch && e.keyCode === KEYCODE.SPACE) {
                e.stopPropagation();
            }
            return onKeyDown(e);
        }

        var proxy = 'search';

        switch (e.keyCode) {
            case KEYCODE.UP:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(-1, e), 'up');
                break;
            case KEYCODE.DOWN:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(1, e), 'down');
                break;
            case KEYCODE.ENTER:
                e.preventDefault();
                if (readOnly || disabled) {
                    break;
                }
                this.chooseHighlightItem(proxy, e);
                break;
            case KEYCODE.ESC:
                e.preventDefault();
                this.state.visible && this.setVisible(false, 'keyDown');
                break;
            case KEYCODE.SPACE:
                e.stopPropagation();
                !hasSearch && e.preventDefault();
                break;
            case KEYCODE.BACKSPACE:
                if (readOnly || disabled) {
                    break;
                }
                if (mode === 'multiple' && showSearch || mode === 'tag') {
                    // 在多选并且有搜索的情况下，删除最后一个 tag
                    var valueDS = this.valueDataSource.valueDS;
                    if (valueDS && valueDS.length && !valueDS[valueDS.length - 1].disabled) {
                        this.handleDeleteTag(e);
                    }
                } else if (mode === 'single' && hasClear && !this.state.visible) {
                    // 单选、非展开、并且可清除的情况，允许按删除键清除
                    this.handleClear(e);
                }
                break;
            default:
                break;
        }

        onKeyDown(e);
    };

    Select.prototype.chooseMultipleItem = function chooseMultipleItem(key) {
        var value = this.state.value || [];
        var keys = value.map(function (v) {
            return valueToSelectKey(v);
        });

        var keepSearchValue = false;

        var index = keys.map(function (v) {
            return '' + v;
        }).indexOf(key);

        if (index > -1) {
            // unselect
            keys.splice(index, 1);
            keepSearchValue = true; // 回车反选保留搜索值
        } else {
            // select
            keys.push(key);
        }

        this.handleMultipleSelect(keys, 'enter', null, keepSearchValue);
    };

    // 回车 选择高亮的 item


    Select.prototype.chooseHighlightItem = function chooseHighlightItem(proxy, e) {
        var mode = this.props.mode;


        if (!this.state.visible) {
            // input tag by itself
            if (mode === 'tag' && this.state.searchValue) {
                this.chooseMultipleItem(this.state.searchValue);
            }
            return false;
        }

        var highlightKey = this.state.highlightKey;

        // 没有高亮选项 或者 没有可选菜单

        if (highlightKey === null || !this.dataStore.getMenuDS().length) {
            return;
        }

        if (mode === 'single') {
            this.handleSingleSelect(highlightKey, 'enter');
        } else {
            this.chooseMultipleItem(highlightKey);
            // 阻止事件冒泡到最外层，让Popup 监听到触发弹层关闭
            e && e.stopPropagation();
        }
    };

    /**
     * Handle Tag close event
     * @param  {Object} item
     * @return {Boolean} false  return false to prevent auto close
     * ----
     * It MUST be multiple mode, needn't additional judgement
     */


    Select.prototype.handleTagClose = function handleTagClose(item) {
        var readOnly = this.props.readOnly;

        if (readOnly) return false;
        if (this.useDetailValue()) {
            var value = this.state.value.filter(function (v) {
                return item.value !== v.value;
            });

            this.handleChange(value, 'tag');
        } else {
            // filter out current item, and then call handleMenuSelect
            var _value = this.state.value.filter(function (v) {
                return item.value !== v;
            });

            this.handleMultipleSelect(_value, 'tag');
        }

        this.props.onRemove(item);

        // prevent tag close
        return false;
    };

    // eslint-disable-next-line valid-jsdoc
    /**
     * Handle BACKSPACE key event
     * @param {Event} e keyDown event
     * ---
     * It MUST be multiple mode
     */


    Select.prototype.handleDeleteTag = function handleDeleteTag(e) {
        var value = this.state.value;
        var searchValue = this.state.searchValue;

        if (searchValue || !value || !value.length) {
            return false;
        }

        e.preventDefault();

        var nextValues = value.slice(0, value.length - 1);
        // 手动调用 handleMenuSelect 时直接传入原生的 value，可以减少 toString 的操作

        if (this.useDetailValue()) {
            this.handleChange(nextValues, 'tag');
        } else {
            this.handleMultipleSelect(nextValues, 'tag');
        }
    };

    /**
     * Handle SelectAll span click event
     * @param {Event} e click event
     */


    Select.prototype.handleSelectAll = function handleSelectAll(e) {
        e && e.preventDefault();
        var nextValues = void 0;

        if (this.selectAllYet) {
            nextValues = [];
        } else {
            nextValues = this.dataStore.getEnableDS().map(function (item) {
                return item.value;
            });
        }

        // 直接传 values，减少 toString 操作
        this.handleMultipleSelect(nextValues, 'selectAll');
    };

    Select.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        this.setVisible(visible, type);
    };

    Select.prototype.afterClose = function afterClose() {
        // 关闭的时候清空搜索值
        if (this.hasSearch()) {
            this.handleSearchClear('popupClose');
        }
    };

    Select.prototype.maxTagPlaceholder = function maxTagPlaceholder(selectedValues, totalValues) {
        var locale = this.props.locale;


        return '' + util_str.template(locale.maxTagPlaceholder, {
            selected: selectedValues.length,
            total: totalValues.length
        });
    };

    /**
     * 如果用户是自定义的弹层，则直接以 value 为准，不再校验 dataSource
     * TODO: 2.0 中 value 接受 string/object{value,label} 两种类型的数据，自动做识别，可以避免用户去转换，也和 date-picker 对齐
     * 此外 onChange 第一个参数根据 api 来控制类型是 [string] 还是 [object{value,label}]
     * @param {object} props
     */


    Select.prototype.renderValues = function renderValues() {
        var _this4 = this;

        var _props7 = this.props,
            prefix = _props7.prefix,
            mode = _props7.mode,
            valueRender = _props7.valueRender,
            fillProps = _props7.fillProps,
            disabled = _props7.disabled,
            maxTagCount = _props7.maxTagCount,
            maxTagPlaceholder = _props7.maxTagPlaceholder,
            tagInline = _props7.tagInline,
            tagClosable = _props7.tagClosable;

        var tagSize = this.getTagSize();
        var value = this.state.value;

        if (isNull(value)) {
            return null;
        }

        // get detail value
        if (!this.useDetailValue()) {
            if (value === this.valueDataSource.value) {
                value = this.valueDataSource.valueDS;
            } else {
                value = getValueDataSource(value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS()).valueDS;
            }
        }

        if (mode === 'single') {
            if (!value) {
                return null;
            }

            var retvalue = fillProps && (typeof value === 'undefined' ? 'undefined' : typeof_default()(value)) === 'object' && fillProps in value ? value[fillProps] : valueRender(value);
            // 0 => '0'
            return typeof retvalue === 'number' ? retvalue.toString() : retvalue;
        } else if (value) {
            var limitedCountValue = value;
            var maxTagPlaceholderEl = void 0;
            var totalValue = this.dataStore.getFlattenDS();
            var holder = 'maxTagPlaceholder' in this.props ? maxTagPlaceholder : this.maxTagPlaceholder;

            if (maxTagCount !== undefined && value.length > maxTagCount && !tagInline) {
                limitedCountValue = limitedCountValue.slice(0, maxTagCount);
                maxTagPlaceholderEl = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_tag,
                    { key: '_count', type: 'primary', size: tagSize, animation: false },
                    holder(value, totalValue)
                );
            }

            if (value.length > 0 && tagInline) {
                maxTagPlaceholderEl = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'select-tag-compact', key: '_count' },
                    holder(value, totalValue)
                );
            }

            value = limitedCountValue;
            if (!Array.isArray(value)) {
                value = [value];
            }

            var selectedValueNodes = value.map(function (v) {
                if (!v) {
                    return null;
                }
                var labelNode = fillProps ? v[fillProps] : valueRender(v);

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_tag,
                    {
                        key: v.value,
                        disabled: disabled || v.disabled,
                        type: 'primary',
                        size: tagSize,
                        animation: false,
                        onClose: _this4.handleTagClose.bind(_this4, v),
                        closable: tagClosable
                    },
                    labelNode
                );
            });

            if (maxTagPlaceholderEl) {
                if (tagInline) {
                    selectedValueNodes.unshift(maxTagPlaceholderEl);
                } else {
                    selectedValueNodes.push(maxTagPlaceholderEl);
                }
            }
            return selectedValueNodes;
        }

        return null;
    };
    /**
     * 1. fix flash while click <label/>
     * 2. fix onBlur while has clear
     * @returns
     */


    Select.prototype.hasClear = function hasClear() {
        var _props8 = this.props,
            hasClear = _props8.hasClear,
            readOnly = _props8.readOnly,
            disabled = _props8.disabled,
            showSearch = _props8.showSearch;
        var _state = this.state,
            value = _state.value,
            visible = _state.visible;


        return typeof value !== 'undefined' && value !== null && hasClear && !readOnly && !disabled && !(showSearch && visible);
    };

    /**
     * render arrow
     * @param {object} props
     * @param {function} [clickHandler]
     */


    Select.prototype.renderExtraNode = function renderExtraNode() {
        var _props9 = this.props,
            hasArrow = _props9.hasArrow,
            hasClear = _props9.hasClear,
            prefix = _props9.prefix;


        var ret = [];

        if (hasArrow) {
            ret.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { key: 'arrow', 'aria-hidden': true, onClick: this.handleArrowClick, className: prefix + 'select-arrow' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down', className: prefix + 'select-symbol-fold' })
            ));
        }

        // do not use this.hasClear() here, to make sure clear btn always exists, can not influenced by apis like `disabled` `readOnly`
        if (hasClear) {
            ret.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { key: 'clear', 'aria-hidden': true, onClick: this.handleClear, className: prefix + 'select-clear' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'delete-filling' })
            ));
        }

        return ret;
    };

    /**
     * 选择器
     * @override
     * @param {object} props
     */


    Select.prototype.renderSelect = function renderSelect() {
        var _classNames,
            _this5 = this;

        var _props10 = this.props,
            prefix = _props10.prefix,
            showSearch = _props10.showSearch,
            placeholder = _props10.placeholder,
            mode = _props10.mode,
            size = _props10.size,
            className = _props10.className,
            style = _props10.style,
            readOnly = _props10.readOnly,
            disabled = _props10.disabled,
            hasBorder = _props10.hasBorder,
            label = _props10.label,
            locale = _props10.locale,
            state = _props10.state,
            onBlur = _props10.onBlur,
            onFocus = _props10.onFocus,
            onMouseEnter = _props10.onMouseEnter,
            onMouseLeave = _props10.onMouseLeave,
            rtl = _props10.rtl;

        var others = util_obj.pickOthers(Select.propTypes, this.props);
        var othersData = util_obj.pickAttrsWith(others, 'data-');

        var visible = this.state.visible;
        var isSingle = mode === 'single';
        var hasSearch = this.hasSearch();
        var valueNodes = this.renderValues();

        // compatible with selectPlaceHolder. TODO: removed in 2.0 version
        var _placeholder = placeholder || locale.selectPlaceholder || locale.selectPlaceHolder;
        if (valueNodes && valueNodes.length) {
            _placeholder = null;
        }

        // 弹窗展开时将当前的值作为 placeholder，这个功能的前提是 valueNode 必须是一个字符串
        if (showSearch && visible && isSingle && typeof valueNodes === 'string') {
            _placeholder = valueNodes;
        }

        // 下拉箭头
        var extra = this.renderExtraNode();

        var triggerClazz = _classnames_2_3_1_classnames_default()([prefix + 'select', prefix + 'select-trigger', prefix + 'select-' + mode, '' + prefix + size, className], (_classNames = {}, _classNames[prefix + 'active'] = visible, _classNames[prefix + 'inactive'] = !visible, _classNames[prefix + 'no-search'] = !hasSearch, _classNames[prefix + 'has-search'] = hasSearch, _classNames[prefix + 'select-in-ie'] = isIE9, _classNames[prefix + 'select-in-ie-fixwidth'] = this.state.fixWidth, _classNames[prefix + 'has-clear'] = this.hasClear(), _classNames));

        var valuetext = this.valueDataSource.valueDS ? this.valueDataSource.valueDS.label : '';
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({}, othersData, {
                className: triggerClazz,
                style: style,
                dir: rtl ? 'rtl' : undefined,
                ref: this.saveSelectRef,
                onClick: this.handleWrapClick,
                onMouseEnter: onMouseEnter,
                onMouseLeave: onMouseLeave,
                onMouseDown: this.handleWrapClick
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({
                'aria-valuetext': valuetext
            }, util_obj.pickOthers(othersData, others), {
                role: 'combobox',
                tabIndex: 0,
                'aria-expanded': this.state.visible,
                'aria-disabled': disabled,
                state: state,
                label: label,
                extra: extra,
                value: this.state.searchValue,
                size: size,
                readOnly: !this.hasSearch() || readOnly,
                disabled: disabled,
                placeholder: _placeholder,
                hasBorder: hasBorder,
                hasClear: false,
                htmlSize: '1',
                inputRender: function inputRender(inputEl) {
                    return _this5.renderSearchInput(valueNodes, _placeholder, inputEl);
                },
                onChange: this.handleSearch,
                onKeyDown: this.handleSearchKeyDown,
                onFocus: onFocus,
                onBlur: onBlur,
                className: prefix + 'select-inner',
                ref: this.saveInputRef
            })),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'sr-only', 'aria-live': 'polite' },
                this.state.srReader
            )
        );
    };

    Select.prototype.renderSearchInput = function renderSearchInput(valueNodes, placeholder, inputEl) {
        var _classNames2;

        var _props11 = this.props,
            prefix = _props11.prefix,
            mode = _props11.mode,
            tagInline = _props11.tagInline;

        var isSingle = mode === 'single';

        var mirrorText = this.state.searchValue;

        var cls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'select-values'] = true, _classNames2[prefix + 'input-text-field'] = true, _classNames2[prefix + 'select-compact'] = !isSingle && tagInline, _classNames2));
        var title = typeof valueNodes === 'string' ? valueNodes : '';
        var searchInput = [isSingle && valueNodes ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'em',
            { title: title, key: 'select-value' },
            valueNodes
        ) : valueNodes];
        var triggerSearch = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { key: 'trigger-search', className: prefix + 'select-trigger-search' },
            inputEl,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { 'aria-hidden': true },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    null,
                    mirrorText || placeholder
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { style: { display: 'inline-block', width: 1 } },
                    '\xA0'
                )
            )
        );

        if (!isSingle && tagInline) {
            searchInput.unshift(triggerSearch);
        } else {
            searchInput.push(triggerSearch);
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: cls },
            searchInput
        );
    };

    /**
     * 渲染弹层的 header 内容
     * @override
     * @param {object} props
     */


    Select.prototype.renderMenuHeader = function renderMenuHeader() {
        var _classNames3, _classNames4;

        var _props12 = this.props,
            prefix = _props12.prefix,
            hasSelectAll = _props12.hasSelectAll,
            mode = _props12.mode,
            locale = _props12.locale,
            menuProps = _props12.menuProps;


        if (menuProps && 'header' in menuProps) {
            return menuProps.header;
        }

        var sourceCount = this.dataStore.getEnableDS().length;
        // 多选模式下才有全选
        if (!hasSelectAll || mode === 'single' || !sourceCount) {
            return null;
        }

        var text = typeof hasSelectAll === 'boolean' ? locale.selectAll : hasSelectAll;

        var selectAllYet = this.selectAllYet;

        var cls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'select-all'] = true, _classNames3[prefix + 'selected'] = selectAllYet, _classNames3));

        var clsInner = _classnames_2_3_1_classnames_default()((_classNames4 = {}, _classNames4[prefix + 'select-all-inner'] = true, _classNames4));

        // remove style={{'lineHeight': 'unset'}} in next Y
        // remove style={{'display': 'none'}} in next Y
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { key: 'all', onClick: this.handleSelectAll, className: cls, style: { lineHeight: 'unset' } },
            selectAllYet ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: prefix + 'menu-icon-selected', style: { display: 'none' }, type: 'select' }) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: clsInner },
                text
            )
        );
    };

    Select.prototype.render = function render() {
        var mode = this.props.mode;

        var props = extends_default()({}, this.props);

        // forbid to close Popup by click Input while hasSearch
        if (this.hasSearch()) {
            props.canCloseByTrigger = false;
        }
        if (mode === 'single') {
            props.cache = true;
        }
        return _Base.prototype.render.call(this, props);
    };

    return Select;
}(select_base_Base), select__class.propTypes = extends_default()({}, select_base_Base.propTypes, {
    /**
     * 选择器模式
     */
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple', 'tag']),
    /**
     * 当前值，用于受控模式
     */
    value: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 初始的默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * Select发生改变时触发的回调
     * @param {*} value 选中的值
     * @param {String} actionType 触发的方式, 'itemClick', 'enter', 'tag'
     * @param {*} item 选中的值的对象数据 (useDetailValue=false有效)
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 传入的数据源，可以动态渲染子项，详见 [dataSource的使用](#dataSource的使用)
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.shape({
        value: _prop_types_15_8_1_prop_types_default.a.any,
        label: _prop_types_15_8_1_prop_types_default.a.any,
        disabled: _prop_types_15_8_1_prop_types_default.a.bool,
        children: _prop_types_15_8_1_prop_types_default.a.array
    }), _prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string])),
    /**
     * 是否有边框
     */
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有下拉箭头
     */
    hasArrow: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 展开后是否能搜索（tag 模式下固定为true）
     */
    showSearch: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当搜索框值变化时回调
     * @param {String} value 数据
     */
    onSearch: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 当搜索框值被(选择、弹窗关闭)导致清空时候的回调
     * @param {String} actionType 触发的方式, 'select'(选择清空), 'popupClose'(弹窗关闭清空)
     */
    onSearchClear: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 多选模式下是否有全选功能
     */
    hasSelectAll: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 填充到选择框里的值的 key
     */
    fillProps: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * value 使用对象类型 `{value, label}`, 同时 onChange 第一个参数返回也修改为 dataSource 中的对象
     */
    useDetailValue: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * dataSource 变化的时是否保留已选的内容
     */
    cacheValue: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 渲染 Select 展现内容的方法
     * @param {Object} item 渲染节点的item
     * @return {ReactNode} 展现内容
     * @default item => `item.label || item.value`
     */
    valueRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 渲染 MenuItem 内容的方法
     * @param {Object} item 渲染节点的item
     * @param {String} searchValue 搜索关键字（如果开启搜索）
     * @return {ReactNode} item node
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层内容为空的文案
     */
    notFoundContent: _prop_types_15_8_1_prop_types_default.a.node,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 受控搜索值，一般不需要设置
     * @type {[type]}
     */
    searchValue: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否一行显示，仅在 mode 为 multiple 的时候生效
     * @version 1.15
     */
    tagInline: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * tag 是否可关闭
     * @version 1.20
     */
    tagClosable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * tag 尺寸是否和 select 保持一致(mode=multiple/tag 模式生效），默认false
     * @version 1.24
     */
    adjustTagSize: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 最多显示多少个 tag
     * @version 1.15
     */
    maxTagCount: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用
     * @param {object} selectedValues 当前已选中的元素
     * @param {object} totalValues 总待选元素
     * @version 1.15
     */
    maxTagPlaceholder: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选择后是否立即隐藏菜单 (mode=multiple/tag 模式生效)
     */
    hiddenSelected: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * tag 删除回调
     * @param {object} item 渲染节点的item
     */
    onRemove: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 焦点事件
     */
    onFocus: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否自动高亮第一个选项
     */
    // highlightFirstItem: PropTypes.bool,
    /**
     * 失去焦点事件
     */
    onBlur: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 展开下拉菜单时是否自动焦点到弹层
     */
    popupAutoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否展示 dataSource 中 children
     */
    showDataSourceChildren: _prop_types_15_8_1_prop_types_default.a.bool
}), select__class.defaultProps = extends_default()({}, select_base_Base.defaultProps, {
    locale: locale_zh_cn.Select,
    mode: 'single',
    showSearch: false,
    cacheValue: true,
    tagInline: false,
    adjustTagSize: false,
    onSearch: select_noop,
    onSearchClear: select_noop,
    hasArrow: true,
    onRemove: select_noop,
    // highlightFirstItem: true,
    valueRender: function valueRender(item) {
        return item.label || item.value;
    },
    onKeyDown: select_noop,
    onFocus: select_noop,
    onBlur: select_noop,
    onMouseEnter: select_noop,
    onMouseLeave: select_noop,
    popupAutoFocus: false,
    tagClosable: true
}), select__class.displayName = 'Select', select__temp);


/* harmony default export */ var select_select = (Object(react_lifecycles_compat_es["polyfill"])(select_Select));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/auto-complete.js





var auto_complete__class, auto_complete__temp;










var auto_complete_bindCtx = func.bindCtx,
    auto_complete_noop = func.noop;

/**
 * Select.AutoComplete
 */

var auto_complete_AutoComplete = (auto_complete__temp = auto_complete__class = function (_Base) {
    inherits_default()(AutoComplete, _Base);

    function AutoComplete(props) {
        classCallCheck_default()(this, AutoComplete);

        var _this = possibleConstructorReturn_default()(this, _Base.call(this, props));

        _this.handleChange = function (value, proxy, item) {
            var _this$props = _this.props,
                disabled = _this$props.disabled,
                readOnly = _this$props.readOnly,
                filterLocal = _this$props.filterLocal;


            if (disabled || readOnly) {
                return false;
            }

            var actionType = typeof proxy === 'string' ? proxy : 'change';

            _this.isInputing = actionType === 'change';

            if (filterLocal) {
                _this.setState({
                    dataSource: _this.dataStore.updateByKey(value)
                });

                _this.shouldControlPopup(_this.props, actionType);
                _this.setFirstHightLightKeyForMenu(value);
            }

            // 非受控模式清空内部数据
            if (!('value' in _this.props)) {
                _this.setState({
                    value: value
                });
            }

            // 不自动高亮的情况下, highlightKey 根据value精确值走，也就是被选中元素自动高亮，这样也不会影响不在选项内的用户搜索操作
            if (!_this.props.autoHighlightFirstItem) {
                _this.setState({
                    highlightKey: value
                });
            }

            _this.props.onChange(value, actionType, item);

            if (actionType === 'itemClick' || actionType === 'enter') {
                // 点击 item 的时候不会触发关闭，需要手动关闭，其它类型比如 keyDown 等都会有其它事件句柄处理
                _this.setVisible(false, actionType);
            }
        };

        _this.isAutoComplete = true;
        _this.isInputing = false;

        _this.dataStore.setOptions({ key: _this.state.value });
        extends_default()(_this.state, {
            dataSource: _this.setDataSource(props)
        });

        auto_complete_bindCtx(_this, ['handleTriggerKeyDown', 'handleMenuSelect', 'handleItemClick']);
        return _this;
    }

    AutoComplete.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        if ('value' in nextProps && nextProps.value !== prevState.value) {
            extends_default()(state, {
                value: nextProps.value
            });
        }

        if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
            extends_default()(state, {
                visible: nextProps.visible
            });
        }

        if (Object.keys(state).length) {
            return state;
        }

        return null;
    };

    AutoComplete.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        var props = this.props;

        if ('value' in props) {
            this.dataStore.setOptions({ key: props.value });
        }

        if (props.filter !== prevProps.filter) {
            this.dataStore.setOptions({
                filter: props.filter
            });
        }
        if (props.filterLocal !== prevProps.filterLocal) {
            this.dataStore.setOptions({
                filterLocal: props.filterLocal
            });
        }

        if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
            /* eslint-disable react/no-did-update-set-state */
            this.setState({
                dataSource: this.setDataSource(props)
            });

            // remote dataSource and focused
            // 因为autoComplete没有下拉数据不展示，搜索并且有数据了需要自动展示下拉
            if (!props.filterLocal && this.isInputing) {
                this.shouldControlPopup(props, 'update');
            }
            if (!props.filterLocal && !props.popupContent) {
                this.setFirstHightLightKeyForMenu();
            }
        }
    };

    AutoComplete.prototype.shouldControlPopup = function shouldControlPopup() {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
        var type = arguments[1];

        var hasPopup = props.popupContent || this.dataStore.getMenuDS().length;
        if (hasPopup) {
            this.setVisible(true, type);
        } else {
            this.setVisible(false, type);
        }
    };

    AutoComplete.prototype.handleMenuSelect = function handleMenuSelect(keys) {
        var key = keys[0];

        var mapDS = this.dataStore.getMapDS();

        if (key in mapDS) {
            var item = mapDS[key];
            this.handleSelectEvent(key, item, 'itemClick');
        }
    };

    AutoComplete.prototype.handleItemClick = function handleItemClick() {
        this.setVisible(false, 'itemClick');
    };

    AutoComplete.prototype.handleSelectEvent = function handleSelectEvent(key, item, triggerType) {
        var value = item && item[this.props.fillProps] || key;

        if (triggerType === 'itemClick' || triggerType === 'enter') {
            // 点击 item 的时候不会触发关闭，需要手动关闭，其它类型比如 keyDown 等都会有其它事件句柄处理
            this.setVisible(false, triggerType);
        }

        this.handleChange(value, triggerType, item);
    };

    AutoComplete.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        if (!('visible' in this.props) && visible && !this.props.popupContent && !this.dataStore.getMenuDS().length) {
            return;
        }

        this.setVisible(visible, type);
    };

    AutoComplete.prototype.beforeClose = function beforeClose() {
        this.isInputing = false;
    };

    /**
     * Handle trigger keydown event
     * @param {Event} e
     */


    AutoComplete.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e) {
        var _props = this.props,
            popupContent = _props.popupContent,
            onToggleHighlightItem = _props.onToggleHighlightItem,
            onKeyDown = _props.onKeyDown;

        if (popupContent) {
            e.stopPropagation(); //stopPropagation can make use onChange triggerd while typing space('') in Input
            return onKeyDown(e);
        }

        switch (e.keyCode) {
            case KEYCODE.UP:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(-1, e), 'up');
                break;
            case KEYCODE.DOWN:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(1, e), 'down');
                break;
            case KEYCODE.ENTER:
                e.preventDefault();
                this.chooseHighlightItem(e);
                break;
            case KEYCODE.SPACE:
                // stopPropagation can make use onChange triggerd while typing space('') in Input
                e.stopPropagation();
                break;
            case KEYCODE.ESC:
                e.preventDefault();
                this.state.visible && this.setVisible(false, 'esc');
                break;
            default:
                break;
        }

        onKeyDown(e);
    };

    // 回车 选择高亮的 item


    AutoComplete.prototype.chooseHighlightItem = function chooseHighlightItem() {
        if (!this.state.visible) {
            return false;
        }

        var highlightKey = this.state.highlightKey;

        var highlightItem = this.dataStore.getEnableDS().find(function (item) {
            return highlightKey === '' + item.value;
        });

        if (highlightItem) {
            this.handleSelectEvent(highlightKey, highlightItem, 'enter');
        }
    };

    AutoComplete.prototype.hasClear = function hasClear() {
        var _props2 = this.props,
            hasClear = _props2.hasClear,
            readOnly = _props2.readOnly,
            disabled = _props2.disabled;
        var value = this.state.value;


        return value && hasClear && !readOnly && !disabled;
    };

    /**
     * 选择器
     * @override
     * @param {object} props
     */


    AutoComplete.prototype.renderSelect = function renderSelect() {
        var _classNames;

        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
        var placeholder = props.placeholder,
            size = props.size,
            prefix = props.prefix,
            className = props.className,
            style = props.style,
            label = props.label,
            readOnly = props.readOnly,
            disabled = props.disabled,
            highlightHolder = props.highlightHolder,
            locale = props.locale,
            hasClear = props.hasClear,
            state = props.state,
            rtl = props.rtl;

        var others = util_obj.pickOthers(AutoComplete.propTypes, props);
        var othersData = util_obj.pickAttrsWith(others, 'data-');

        var value = this.state.value;
        var visible = this.state.visible;

        // // 下拉箭头
        // const arrowNode = this.renderArrowNode(props, () => {
        //     this.focusInput();
        //     this.setVisible(!this.state.visible);
        // });

        // trigger className
        var triggerClazz = _classnames_2_3_1_classnames_default()([prefix + 'select', prefix + 'select-auto-complete', prefix + 'size-' + size, className], (_classNames = {}, _classNames[prefix + 'active'] = visible, _classNames[prefix + 'disabled'] = disabled, _classNames));

        // highlightKey into placeholder
        // compatible with selectPlaceHolder. TODO: removed in 2.0 version
        var _placeholder = placeholder || locale.autoCompletePlaceholder || locale.autoCompletePlaceHolder;
        if (highlightHolder && visible) {
            _placeholder = this.state.highlightKey || _placeholder;
        }

        // Input props
        var _inputProps = extends_default()({}, util_obj.pickOthers(othersData, others), {
            state: state,
            ref: this.saveInputRef,
            hasClear: hasClear,
            value: value,
            size: size,
            disabled: disabled,
            readOnly: readOnly,
            placeholder: _placeholder,
            label: label,
            // extra: arrowNode,
            onChange: this.handleChange,
            onKeyDown: this.handleTriggerKeyDown
        });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({}, othersData, {
                className: triggerClazz,
                style: style,
                dir: rtl ? 'rtl' : undefined,
                ref: this.saveSelectRef,
                onClick: this.focusInput
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({
                role: 'combobox',
                'aria-autocomplete': 'list',
                'aria-disabled': disabled,
                'aria-expanded': this.state.visible
            }, _inputProps)),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'sr-only', 'aria-live': 'polite' },
                this.state.srReader
            )
        );
    };

    AutoComplete.prototype.render = function render() {
        var _this2 = this;

        if (this.hasClear()) {
            // clear 按钮点击后，会在 dom 结构中被删除掉，需要将其额外设置为安全节点，防止触发弹层的显示或隐藏
            var safeNode = this.props.popupProps.safeNode || [];
            var safeNodes = Array.isArray(safeNode) ? safeNode : [safeNode];
            safeNodes.push(function () {
                return _this2.clearNode;
            });
            this.props.popupProps.safeNode = safeNodes;
        }

        return _Base.prototype.render.call(this, extends_default()({}, this.props, { canCloseByTrigger: false }));
    };

    return AutoComplete;
}(select_base_Base), auto_complete__class.propTypes = extends_default()({}, select_base_Base.propTypes, {
    /**
     * 当前值，用于受控模式
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 初始化的默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * Select发生改变时触发的回调
     * @param {*} value 选中的值
     * @param {String} actionType 触发的方式, 'itemClick', 'enter', 'change'
     * @param {*} item 选中的值的对象数据
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 传入的数据源，可以动态渲染子项
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.shape({
        value: _prop_types_15_8_1_prop_types_default.a.string,
        label: _prop_types_15_8_1_prop_types_default.a.any,
        disabled: _prop_types_15_8_1_prop_types_default.a.bool,
        children: _prop_types_15_8_1_prop_types_default.a.array
    }), _prop_types_15_8_1_prop_types_default.a.string])),
    /**
     * 填充到选择框里的值的 key，默认是 value
     */
    fillProps: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 渲染 MenuItem 内容的方法
     * @param {Object} item 渲染节点的 item
     * @return {ReactNode} item node
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    // input keydown
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    // 是否将当前高亮的选项作为 placeholder
    highlightHolder: _prop_types_15_8_1_prop_types_default.a.bool,
    style: _prop_types_15_8_1_prop_types_default.a.object
}), auto_complete__class.defaultProps = extends_default()({}, select_base_Base.defaultProps, {
    onKeyDown: auto_complete_noop,
    fillProps: 'value'
}), auto_complete__temp);


/* harmony default export */ var auto_complete = (Object(react_lifecycles_compat_es["polyfill"])(auto_complete_AutoComplete));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/option.js




var option__class, option__temp;




/* istanbul ignore file */

/**
 * Select.Option
 */
var option_Option = (option__temp = option__class = function (_React$Component) {
  inherits_default()(Option, _React$Component);

  function Option() {
    classCallCheck_default()(this, Option);

    return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
  }

  Option.prototype.render = function render() {
    return this.props.children;
  };

  return Option;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), option__class.propTypes = {
  /**
   * 选项值
   */
  value: _prop_types_15_8_1_prop_types_default.a.any.isRequired,
  /**
   * 是否禁用
   */
  disabled: _prop_types_15_8_1_prop_types_default.a.bool,
  children: _prop_types_15_8_1_prop_types_default.a.any
}, option__class._typeMark = 'next_select_option', option__temp);
option_Option.displayName = 'Option';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/option-group.js




var option_group__class, option_group__temp;




/* istanbul ignore file */

/**
 * Select.OptionGroup
 */
var option_group_OptionGroup = (option_group__temp = option_group__class = function (_React$Component) {
    inherits_default()(OptionGroup, _React$Component);

    function OptionGroup() {
        classCallCheck_default()(this, OptionGroup);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    OptionGroup.prototype.render = function render() {
        return this.props.children;
    };

    return OptionGroup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), option_group__class.propTypes = {
    /**
     * 设置分组的文案
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    children: _prop_types_15_8_1_prop_types_default.a.any
}, option_group__class._typeMark = 'next_select_option_group', option_group__temp);
option_group_OptionGroup.displayName = 'OptionGroup';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/select/index.js







select_select.AutoComplete = config_provider.config(auto_complete, {
    componentName: 'Select'
});

select_select.Option = option_Option;
select_select.OptionGroup = option_group_OptionGroup;

// compatible with 0.x version
/* istanbul ignore next */
function _transform(props, deprecated) {
    var shape = props.shape,
        container = props.container,
        multiple = props.multiple,
        filterBy = props.filterBy,
        overlay = props.overlay,
        safeNode = props.safeNode,
        noFoundContent = props.noFoundContent,
        others = objectWithoutProperties_default()(props, ['shape', 'container', 'multiple', 'filterBy', 'overlay', 'safeNode', 'noFoundContent']);

    var newprops = others;
    if (shape === 'arrow-only') {
        deprecated('shape=arrow-only', 'hasBorder=false', 'Select');
        newprops.hasBorder = false;
    }
    if (container) {
        deprecated('container', 'popupContainer', 'Select');
        newprops.popupContainer = container;
    }
    if (multiple) {
        deprecated('multiple', 'mode=multiple', 'Select');
        newprops.mode = 'multiple';
    }
    if (filterBy) {
        deprecated('filterBy', 'filter', 'Select');
        newprops.filter = filterBy;
    }
    if (overlay) {
        deprecated('overlay', 'popupContent', 'Select');
        newprops.popupContent = overlay;
        newprops.autoWidth = false;
    }

    if (noFoundContent) {
        deprecated('noFoundContent', 'notFoundContent', 'Select');
        newprops.notFoundContent = noFoundContent;
    }

    if (safeNode) {
        deprecated('safeNode', 'popupProps={safeNode}', 'Select');
        newprops.popupProps = {
            safeNode: safeNode
        };
    }

    return newprops;
}

// compatible with 0.x version: Select.Combobox
select_select.Combobox = config_provider.config(select_select, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        deprecated('Select.Combobox', '<Select showSearch={true}/>', 'Select');

        var newprops = _transform(props, deprecated);
        if (props.onInputUpdate) {
            newprops.onSearch = props.onInputUpdate;
            newprops.showSearch = true;
        }
        return newprops;
    }
});

/* harmony default export */ var es_select = (config_provider.config(select_select, {
    transform: _transform,
    exportNames: ['focusInput', 'handleSearchClear']
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/head/card-header.js




var card_header__class, card_header__temp2;







var card_header_CardHeader = (card_header__temp2 = card_header__class = function (_React$Component) {
    inherits_default()(CardHeader, _React$Component);

    function CardHeader() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, CardHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.selectContainerHandler = function (target) {
            var device = _this.props.device;

            if (device === 'phone') {
                return document.body;
            }
            return target.parentNode;
        }, _this.onYearChange = function (year) {
            var _this$props = _this.props,
                visibleMonth = _this$props.visibleMonth,
                changeVisibleMonth = _this$props.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().year(year), 'yearSelect');
        }, _this.changeVisibleMonth = function (month) {
            var _this$props2 = _this.props,
                visibleMonth = _this$props2.visibleMonth,
                changeVisibleMonth = _this$props2.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().month(month), 'monthSelect');
        }, _this.onModePanelChange = function (mode) {
            _this.props.changeMode(mode);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    CardHeader.prototype.getYearSelect = function getYearSelect(year) {
        var _props = this.props,
            prefix = _props.prefix,
            yearRangeOffset = _props.yearRangeOffset,
            _props$yearRange = _props.yearRange,
            yearRange = _props$yearRange === undefined ? [] : _props$yearRange,
            locale = _props.locale;
        var startYear = yearRange[0],
            endYear = yearRange[1];

        if (!startYear || !endYear) {
            startYear = year - yearRangeOffset;
            endYear = year + yearRangeOffset;
        }

        var options = [];
        for (var i = startYear; i <= endYear; i++) {
            options.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_select.Option,
                { key: i, value: i },
                i
            ));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_select,
            {
                prefix: prefix,
                value: year,
                'aria-label': locale.yearSelectAriaLabel,
                onChange: this.onYearChange,
                popupContainer: this.selectContainerHandler
            },
            options
        );
    };

    CardHeader.prototype.getMonthSelect = function getMonthSelect(month) {
        var _props2 = this.props,
            prefix = _props2.prefix,
            momentLocale = _props2.momentLocale,
            locale = _props2.locale;

        var localeMonths = momentLocale.monthsShort();
        var options = [];
        for (var i = 0; i < 12; i++) {
            options.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_select.Option,
                { key: i, value: i },
                localeMonths[i]
            ));
        }
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_select,
            {
                'aria-label': locale.monthSelectAriaLabel,
                prefix: prefix,
                value: month,
                onChange: this.changeVisibleMonth,
                popupContainer: this.selectContainerHandler
            },
            options
        );
    };

    CardHeader.prototype.render = function render() {
        var _props3 = this.props,
            prefix = _props3.prefix,
            mode = _props3.mode,
            locale = _props3.locale,
            visibleMonth = _props3.visibleMonth;


        var yearSelect = this.getYearSelect(visibleMonth.year());
        var monthSelect = mode === 'month' ? null : this.getMonthSelect(visibleMonth.month());
        var panelSelect = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_radio.Group,
            { shape: 'button', size: 'medium', value: mode, onChange: this.onModePanelChange },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_radio,
                { value: 'date' },
                locale.month
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_radio,
                { value: 'month' },
                locale.year
            )
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'calendar-header' },
            yearSelect,
            monthSelect,
            panelSelect
        );
    };

    return CardHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), card_header__class.propTypes = {
    yearRange: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number),
    yearRangeOffset: _prop_types_15_8_1_prop_types_default.a.number,
    locale: _prop_types_15_8_1_prop_types_default.a.object
}, card_header__class.defaultProps = {
    yearRangeOffset: 10
}, card_header__temp2);
card_header_CardHeader.displayName = 'CardHeader';


/* harmony default export */ var card_header = (config_provider.config(card_header_CardHeader));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/head/menu.js






var head_menu__class, menu__temp2;

/* istanbul ignore file */





var menu_SelectMenu = (menu__temp2 = head_menu__class = function (_Component) {
    inherits_default()(SelectMenu, _Component);

    function SelectMenu() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, SelectMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.saveRef = function (ref) {
            _this.menuEl = ref;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    SelectMenu.prototype.componentDidMount = function componentDidMount() {
        this.scrollToSelectedItem();
    };

    SelectMenu.prototype.scrollToSelectedItem = function scrollToSelectedItem() {
        var _props = this.props,
            prefix = _props.prefix,
            dataSource = _props.dataSource,
            value = _props.value;


        var selectedIndex = dataSource.findIndex(function (item) {
            return item.value === value;
        });

        if (selectedIndex === -1) {
            return;
        }

        var itemSelector = '.' + prefix + 'menu-item';
        var menu = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.menuEl);
        var targetItem = menu.querySelectorAll(itemSelector)[selectedIndex];
        if (targetItem) {
            menu.scrollTop = targetItem.offsetTop - Math.floor((menu.clientHeight / targetItem.clientHeight - 1) / 2) * targetItem.clientHeight;
        }
    };

    SelectMenu.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            dataSource = _props2.dataSource,
            onChange = _props2.onChange,
            value = _props2.value,
            className = _props2.className,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'dataSource', 'onChange', 'value', 'className']);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu,
            extends_default()({}, others, {
                ref: this.saveRef,
                selectMode: 'single',
                selectedKeys: [String(value)],
                onSelect: function onSelect(selectKeys) {
                    return onChange(Number(selectKeys[0]));
                },
                role: 'listbox',
                className: prefix + 'calendar-panel-menu ' + className
            }),
            dataSource.map(function (_ref) {
                var label = _ref.label,
                    value = _ref.value;
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_menu.Item,
                    { key: value },
                    label
                );
            })
        );
    };

    return SelectMenu;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), head_menu__class.isNextMenu = true, head_menu__class.propTypes = {
    dataSource: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object),
    value: _prop_types_15_8_1_prop_types_default.a.number,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, menu__temp2);
menu_SelectMenu.displayName = 'SelectMenu';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/head/date-panel-header.js




var date_panel_header__class, date_panel_header__temp2;

/* istanbul ignore file */






/* eslint-disable */
var date_panel_header_DatePanelHeader = (date_panel_header__temp2 = date_panel_header__class = function (_React$PureComponent) {
    inherits_default()(DatePanelHeader, _React$PureComponent);

    function DatePanelHeader() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, DatePanelHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.selectContainerHandler = function (target) {
            return target.parentNode;
        }, _this.onYearChange = function (year) {
            var _this$props = _this.props,
                visibleMonth = _this$props.visibleMonth,
                changeVisibleMonth = _this$props.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().year(year), 'yearSelect');
        }, _this.changeVisibleMonth = function (month) {
            var _this$props2 = _this.props,
                visibleMonth = _this$props2.visibleMonth,
                changeVisibleMonth = _this$props2.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().month(month), 'monthSelect');
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    DatePanelHeader.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            momentLocale = _props.momentLocale,
            locale = _props.locale,
            changeMode = _props.changeMode,
            goNextMonth = _props.goNextMonth,
            goNextYear = _props.goNextYear,
            goPrevMonth = _props.goPrevMonth,
            goPrevYear = _props.goPrevYear,
            disableChangeMode = _props.disableChangeMode,
            yearRangeOffset = _props.yearRangeOffset,
            _props$yearRange = _props.yearRange,
            yearRange = _props$yearRange === undefined ? [] : _props$yearRange;


        var localedMonths = momentLocale.months();
        var monthLabel = localedMonths[visibleMonth.month()];
        var yearLabel = visibleMonth.year();
        var btnCls = prefix + 'calendar-btn';

        var monthButton = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'button',
            {
                role: 'button',
                type: 'button',
                className: btnCls,
                title: monthLabel,
                onClick: function onClick() {
                    return changeMode('month', 'start');
                }
            },
            monthLabel
        );

        var yearButton = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'button',
            {
                role: 'button',
                type: 'button',
                className: btnCls,
                title: yearLabel,
                onClick: function onClick() {
                    return changeMode('year', 'start');
                }
            },
            yearLabel
        );

        if (disableChangeMode) {
            var months = getMonths(momentLocale);
            var years = getYears(yearRange, yearRangeOffset, visibleMonth.year());

            monthButton = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                dropdown,
                {
                    align: 'tc bc',
                    container: this.selectContainerHandler,
                    trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'button',
                        { role: 'button', type: 'button', className: btnCls, title: monthLabel },
                        monthLabel,
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down' })
                    ),
                    triggerType: 'click'
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(menu_SelectMenu, {
                    prefix: prefix,
                    value: visibleMonth.month(),
                    dataSource: months,
                    onChange: function onChange(value) {
                        return _this2.changeVisibleMonth(value);
                    }
                })
            );

            yearButton = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                dropdown,
                {
                    align: 'tc bc',
                    container: this.selectContainerHandler,
                    trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'button',
                        { role: 'button', type: 'button', className: btnCls, title: yearLabel },
                        yearLabel,
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down' })
                    ),
                    triggerType: 'click'
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(menu_SelectMenu, {
                    prefix: prefix,
                    value: visibleMonth.year(),
                    dataSource: years,
                    onChange: this.onYearChange
                })
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'calendar-panel-header' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.prevYear,
                    className: btnCls + ' ' + btnCls + '-prev-year',
                    onClick: goPrevYear
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.prevMonth,
                    className: btnCls + ' ' + btnCls + '-prev-month',
                    onClick: goPrevMonth
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-left', className: prefix + 'calendar-symbol-prev' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar-panel-header-full' },
                monthButton,
                yearButton
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.nextMonth,
                    className: btnCls + ' ' + btnCls + '-next-month',
                    onClick: goNextMonth
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-right', className: prefix + 'calendar-symbol-next' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.nextYear,
                    className: btnCls + ' ' + btnCls + '-next-year',
                    onClick: goNextYear
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })
            )
        );
    };

    return DatePanelHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent), date_panel_header__class.defaultProps = {
    yearRangeOffset: 10
}, date_panel_header__temp2);


/* harmony default export */ var date_panel_header = (date_panel_header_DatePanelHeader);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/head/month-panel-header.js






var month_panel_header_MonthPanelHeader = function (_React$PureComponent) {
    inherits_default()(MonthPanelHeader, _React$PureComponent);

    function MonthPanelHeader() {
        classCallCheck_default()(this, MonthPanelHeader);

        return possibleConstructorReturn_default()(this, _React$PureComponent.apply(this, arguments));
    }

    MonthPanelHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            locale = _props.locale,
            changeMode = _props.changeMode,
            goPrevYear = _props.goPrevYear,
            goNextYear = _props.goNextYear;

        var yearLabel = visibleMonth.year();
        var btnCls = prefix + 'calendar-btn';

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'calendar-panel-header' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.prevYear,
                    className: btnCls + ' ' + btnCls + '-prev-year',
                    onClick: goPrevYear
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar-panel-header-full' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'button',
                    {
                        role: 'button',
                        type: 'button',
                        title: yearLabel,
                        className: '' + btnCls,
                        onClick: function onClick() {
                            return changeMode('year');
                        }
                    },
                    yearLabel
                )
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.nextYear,
                    className: btnCls + ' ' + btnCls + '-next-year',
                    onClick: goNextYear
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })
            )
        );
    };

    return MonthPanelHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent);

/* harmony default export */ var month_panel_header = (month_panel_header_MonthPanelHeader);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/head/year-panel-header.js






var year_panel_header_YearPanelHeader = function (_React$PureComponent) {
    inherits_default()(YearPanelHeader, _React$PureComponent);

    function YearPanelHeader() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, YearPanelHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.getDecadeLabel = function (date) {
            var year = date.year();
            var start = parseInt(year / 10, 10) * 10;
            var end = start + 9;
            return start + '-' + end;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    YearPanelHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            locale = _props.locale,
            goPrevDecade = _props.goPrevDecade,
            goNextDecade = _props.goNextDecade;

        var decadeLable = this.getDecadeLabel(visibleMonth);
        var btnCls = prefix + 'calendar-btn';

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'calendar-panel-header' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.prevDecade,
                    className: btnCls + ' ' + btnCls + '-prev-decade',
                    onClick: goPrevDecade
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar-panel-header-full' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'button',
                    { role: 'button', type: 'button', title: decadeLable, className: btnCls },
                    decadeLable
                )
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.nextDecade,
                    className: btnCls + ' ' + btnCls + '-next-decade',
                    onClick: goNextDecade
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })
            )
        );
    };

    return YearPanelHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent);

/* harmony default export */ var year_panel_header = (year_panel_header_YearPanelHeader);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/table/date-table-head.js






var date_table_head_DateTableHead = function (_PureComponent) {
    inherits_default()(DateTableHead, _PureComponent);

    function DateTableHead() {
        classCallCheck_default()(this, DateTableHead);

        return possibleConstructorReturn_default()(this, _PureComponent.apply(this, arguments));
    }

    DateTableHead.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            momentLocale = _props.momentLocale;

        var firstDayOfWeek = momentLocale.firstDayOfWeek();
        var weekdaysShort = momentLocale.weekdaysShort();

        var elements = [];
        for (var i = 0; i < DAYS_OF_WEEK; i++) {
            var index = (firstDayOfWeek + i) % DAYS_OF_WEEK;
            elements.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'th',
                { key: i, className: prefix + 'calendar-th', role: 'cell' },
                weekdaysShort[index]
            ));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'thead',
            { className: prefix + 'calendar-thead', role: 'rowgroup' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                { role: 'row' },
                elements
            )
        );
    };

    return DateTableHead;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["PureComponent"]);

/* harmony default export */ var date_table_head = (date_table_head_DateTableHead);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/table/date-table.js









function date_table_isSameDay(a, b) {
    return a && b && a.isSame(b, 'day');
}

function isRangeDate(date, startDate, endDate) {
    return date.format('L') !== startDate.format('L') && date.format('L') !== endDate.format('L') && date.valueOf() > startDate.valueOf() && date.valueOf() < endDate.valueOf();
}

function isLastMonthDate(date, target) {
    if (date.year() < target.year()) {
        return 1;
    }
    return date.year() === target.year() && date.month() < target.month();
}

function isNextMonthDate(date, target) {
    if (date.year() > target.year()) {
        return 1;
    }
    return date.year() === target.year() && date.month() > target.month();
}

var date_table_DateTable = function (_PureComponent) {
    inherits_default()(DateTable, _PureComponent);

    function DateTable() {
        classCallCheck_default()(this, DateTable);

        return possibleConstructorReturn_default()(this, _PureComponent.apply(this, arguments));
    }

    DateTable.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            showOtherMonth = _props.showOtherMonth,
            endValue = _props.endValue,
            format = _props.format,
            today = _props.today,
            momentLocale = _props.momentLocale,
            dateCellRender = _props.dateCellRender,
            disabledDate = _props.disabledDate,
            onSelectDate = _props.onSelectDate;

        var startValue = this.props.startValue || this.props.value;

        var firstDayOfMonth = visibleMonth.clone().startOf('month'); // 该月的 1 号
        var firstDayOfMonthInWeek = firstDayOfMonth.day(); // 星期几

        var firstDayOfWeek = momentLocale.firstDayOfWeek();

        var datesOfLastMonthCount = (firstDayOfMonthInWeek + DAYS_OF_WEEK - firstDayOfWeek) % DAYS_OF_WEEK;

        var lastMonthDate = firstDayOfMonth.clone();
        lastMonthDate.add(0 - datesOfLastMonthCount, 'days');

        var counter = 0;
        var currentDate = void 0;
        var dateList = [];
        for (var i = 0; i < CALENDAR_TABLE_ROW_COUNT; i++) {
            for (var j = 0; j < CALENDAR_TABLE_COL_COUNT; j++) {
                currentDate = lastMonthDate;
                if (counter) {
                    currentDate = currentDate.clone();
                    currentDate.add(counter, 'days');
                }
                dateList.push(currentDate);
                counter++;
            }
        }
        counter = 0; // reset counter
        var monthElements = [];
        for (var _i = 0; _i < CALENDAR_TABLE_ROW_COUNT; _i++) {
            var weekElements = [];
            var firstDayOfWeekInCurrentMonth = true;
            var lastDayOfWeekInCurrentMonth = true;
            for (var _j = 0; _j < CALENDAR_TABLE_COL_COUNT; _j++) {
                var _classNames;

                currentDate = dateList[counter];
                if (_j === 0) {
                    // currentDate 的month 是否等于当前月 firstDayOfMonth
                    firstDayOfWeekInCurrentMonth = currentDate.format('M') === firstDayOfMonth.format('M');
                }
                if (_j === CALENDAR_TABLE_COL_COUNT - 1) {
                    // currentDate 的month 是否等于当前月 firstDayOfMonth
                    lastDayOfWeekInCurrentMonth = currentDate.format('M') === firstDayOfMonth.format('M');
                }
                var isLastMonth = isLastMonthDate(currentDate, visibleMonth);
                var isNextMonth = isNextMonthDate(currentDate, visibleMonth);
                var isCurrentMonth = !isLastMonth && !isNextMonth;

                var isDisabled = isDisabledDate(currentDate, disabledDate, 'date');
                var isToday = !isDisabled && date_table_isSameDay(currentDate, today) && isCurrentMonth;
                var isSelected = !isDisabled && (date_table_isSameDay(currentDate, startValue) || date_table_isSameDay(currentDate, endValue)) && isCurrentMonth;
                var isInRange = !isDisabled && startValue && endValue && isRangeDate(currentDate, startValue, endValue) && isCurrentMonth;

                var cellContent = !showOtherMonth && !isCurrentMonth ? null : dateCellRender(currentDate);

                var elementCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'calendar-cell'] = true, _classNames[prefix + 'calendar-cell-prev-month'] = isLastMonth, _classNames[prefix + 'calendar-cell-next-month'] = isNextMonth, _classNames[prefix + 'calendar-cell-current'] = isToday, _classNames[prefix + 'inrange'] = isInRange, _classNames[prefix + 'selected'] = isSelected, _classNames[prefix + 'disabled'] = cellContent && isDisabled, _classNames));

                weekElements.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'td',
                    {
                        key: counter,
                        title: currentDate.format(format),
                        onClick: isDisabled ? undefined : onSelectDate.bind(null, currentDate),
                        className: elementCls,
                        role: 'cell',
                        'aria-disabled': isDisabled ? 'true' : 'false',
                        'aria-selected': isSelected ? 'true' : 'false'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: prefix + 'calendar-date' },
                        cellContent
                    )
                ));
                counter++;
            }

            if (!showOtherMonth && !lastDayOfWeekInCurrentMonth && !firstDayOfWeekInCurrentMonth) {
                break;
            }

            monthElements.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                { key: _i, role: 'row' },
                weekElements
            ));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'table',
            { className: prefix + 'calendar-table', role: 'grid' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(date_table_head, extends_default()({}, this.props, { momentLocale: momentLocale })),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tbody',
                { className: prefix + 'calendar-tbody', role: 'rowgroup' },
                monthElements
            )
        );
    };

    return DateTable;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["PureComponent"]);

/* harmony default export */ var date_table = (date_table_DateTable);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/table/month-table.js







function isSameMonth(currentDate, selectedDate) {
    return selectedDate && currentDate.year() === selectedDate.year() && currentDate.month() === selectedDate.month();
}

var month_table_MonthTable = function (_PureComponent) {
    inherits_default()(MonthTable, _PureComponent);

    function MonthTable() {
        classCallCheck_default()(this, MonthTable);

        return possibleConstructorReturn_default()(this, _PureComponent.apply(this, arguments));
    }

    MonthTable.prototype.onMonthCellClick = function onMonthCellClick(date) {
        this.props.onSelectMonth(date, 'date');
    };

    MonthTable.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            visibleMonth = _props.visibleMonth,
            disabledDate = _props.disabledDate,
            today = _props.today,
            momentLocale = _props.momentLocale,
            monthCellRender = _props.monthCellRender;


        var monthLocale = momentLocale.monthsShort();

        var counter = 0;
        var monthList = [];
        for (var i = 0; i < MONTH_TABLE_ROW_COUNT; i++) {
            var rowList = [];
            for (var j = 0; j < MONTH_TABLE_COL_COUNT; j++) {
                var _classnames;

                var monthDate = visibleMonth.clone().month(counter);
                var isDisabled = isDisabledDate(monthDate, disabledDate, 'month');
                var isSelected = isSameMonth(monthDate, value);
                var isThisMonth = isSameMonth(monthDate, today);
                var elementCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'calendar-cell'] = true, _classnames[prefix + 'calendar-cell-current'] = isThisMonth, _classnames[prefix + 'selected'] = isSelected, _classnames[prefix + 'disabled'] = isDisabled, _classnames));
                var localedMonth = monthLocale[counter];
                var monthCellContent = monthCellRender ? monthCellRender(monthDate) : localedMonth;
                rowList.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'td',
                    {
                        key: counter,
                        title: localedMonth,
                        onClick: isDisabled ? undefined : this.onMonthCellClick.bind(this, monthDate),
                        className: elementCls,
                        role: 'cell',
                        'aria-disabled': isDisabled ? 'true' : 'false',
                        'aria-selected': isSelected ? 'true' : 'false'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: prefix + 'calendar-month' },
                        monthCellContent
                    )
                ));
                counter++;
            }
            monthList.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                { key: i, role: 'row' },
                rowList
            ));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'table',
            { className: prefix + 'calendar-table', role: 'grid' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tbody',
                { className: prefix + 'calendar-tbody', role: 'rowgroup' },
                monthList
            )
        );
    };

    return MonthTable;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["PureComponent"]);

/* harmony default export */ var month_table = (month_table_MonthTable);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/table/year-table.js








var year_table_YearTable = function (_React$PureComponent) {
    inherits_default()(YearTable, _React$PureComponent);

    function YearTable() {
        classCallCheck_default()(this, YearTable);

        return possibleConstructorReturn_default()(this, _React$PureComponent.apply(this, arguments));
    }

    YearTable.prototype.onYearCellClick = function onYearCellClick(date) {
        this.props.onSelectYear(date, 'month');
    };

    YearTable.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            today = _props.today,
            visibleMonth = _props.visibleMonth,
            locale = _props.locale,
            disabledDate = _props.disabledDate,
            goPrevDecade = _props.goPrevDecade,
            goNextDecade = _props.goNextDecade,
            yearCellRender = _props.yearCellRender;

        var currentYear = today.year();
        var selectedYear = value ? value.year() : null;
        var visibleYear = visibleMonth.year();
        var startYear = Math.floor(visibleYear / 10) * 10;

        var yearElements = [];
        var counter = 0;

        var lastRowIndex = YEAR_TABLE_ROW_COUNT - 1;
        var lastColIndex = YEAR_TABLE_COL_COUNT - 1;

        for (var i = 0; i < YEAR_TABLE_ROW_COUNT; i++) {
            var rowElements = [];
            for (var j = 0; j < YEAR_TABLE_COL_COUNT; j++) {
                var _classnames;

                var content = void 0;
                var year = void 0;
                var isDisabled = false;
                var onClick = void 0;
                var title = void 0;

                if (i === 0 && j === 0) {
                    title = locale.prevDecade;
                    onClick = goPrevDecade;
                    content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-left', size: 'xs' });
                } else if (i === lastRowIndex && j === lastColIndex) {
                    title = locale.nextDecade;
                    onClick = goNextDecade;
                    content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-right', size: 'xs' });
                } else {
                    year = startYear + counter++;
                    title = year;
                    var yearDate = visibleMonth.clone().year(year);
                    isDisabled = isDisabledDate(yearDate, disabledDate, 'year');

                    !isDisabled && (onClick = this.onYearCellClick.bind(this, yearDate));

                    content = yearCellRender ? yearCellRender(yearDate) : year;
                }

                var isSelected = year === selectedYear;

                var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'calendar-cell'] = true, _classnames[prefix + 'calendar-cell-current'] = year === currentYear, _classnames[prefix + 'selected'] = isSelected, _classnames[prefix + 'disabled'] = isDisabled, _classnames));

                rowElements.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'td',
                    { key: i + '-' + j, className: classNames, role: 'cell' },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            className: prefix + 'calendar-year',
                            onClick: onClick,
                            title: title,
                            'aria-disabled': isDisabled ? 'true' : 'false',
                            'aria-selected': isSelected ? 'true' : 'false'
                        },
                        content
                    )
                ));
            }
            yearElements.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                { key: i, role: 'row' },
                rowElements
            ));
        }
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'table',
            { className: prefix + 'calendar-table', role: 'grid' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tbody',
                { className: prefix + 'calendar-tbody', role: 'rowgroup' },
                yearElements
            )
        );
    };

    return YearTable;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent);

/* harmony default export */ var year_table = (year_table_YearTable);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/calendar.js






var calendar__class, calendar__temp, calendar__initialiseProps;


















var calendar_isValueChanged = function isValueChanged(value, oldVlaue) {
    if (value && oldVlaue) {
        if (!external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(value)) {
            value = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(value);
        }
        if (!external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(oldVlaue)) {
            oldVlaue = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(oldVlaue);
        }
        return value.valueOf() !== oldVlaue.valueOf();
    } else {
        return value !== oldVlaue;
    }
};

/** Calendar */
var calendar_Calendar = (calendar__temp = calendar__class = function (_Component) {
    inherits_default()(Calendar, _Component);

    function Calendar(props, context) {
        classCallCheck_default()(this, Calendar);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        calendar__initialiseProps.call(_this);

        var value = formatDateValue(props.value || props.defaultValue);
        var visibleMonth = getVisibleMonth(props.defaultVisibleMonth, value);

        _this.MODES = props.modes;
        _this.today = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()();
        _this.state = {
            value: value,
            mode: props.mode || _this.MODES[0],
            MODES: _this.MODES,
            visibleMonth: visibleMonth
        };
        return _this;
    }

    Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var st = {};
        if ('value' in props) {
            var value = formatDateValue(props.value);
            if (value && calendar_isValueChanged(props.value, state.value)) {
                st.visibleMonth = value;
            }
            st.value = value;
        }

        if (props.mode && state.MODES.indexOf(props.mode) > -1) {
            st.mode = props.mode;
        }

        return st;
    };

    /**
     * 根据日期偏移量设置当前展示的月份
     * @param {Number} offset 日期偏移的数量
     * @param {String} type 日期偏移的类型 days, months, years
     */
    Calendar.prototype.changeVisibleMonthByOffset = function changeVisibleMonthByOffset(offset, type) {
        var cloneValue = this.state.visibleMonth.clone();
        cloneValue.add(offset, type);
        this.changeVisibleMonth(cloneValue, 'buttonClick');
    };

    Calendar.prototype.render = function render() {
        var _classnames, _tables, _panelHeaders;

        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            className = _props.className,
            shape = _props.shape,
            showOtherMonth = _props.showOtherMonth,
            format = _props.format,
            locale = _props.locale,
            dateCellRender = _props.dateCellRender,
            monthCellRender = _props.monthCellRender,
            yearCellRender = _props.yearCellRender,
            disabledDate = _props.disabledDate,
            yearRange = _props.yearRange,
            disableChangeMode = _props.disableChangeMode,
            others = objectWithoutProperties_default()(_props, ['prefix', 'rtl', 'className', 'shape', 'showOtherMonth', 'format', 'locale', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'disabledDate', 'yearRange', 'disableChangeMode']);

        var state = this.state;

        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-' + shape] = shape, _classnames), className);

        if (rtl) {
            others.dir = 'rtl';
        }

        var visibleMonth = state.visibleMonth;

        // reset moment locale
        if (locale.momentLocale) {
            state.value && state.value.locale(locale.momentLocale);
            visibleMonth.locale(locale.momentLocale);
        }

        var localeData = getLocaleData(locale.format || {}, visibleMonth.localeData());

        var headerProps = {
            prefix: prefix,
            value: state.value,
            mode: state.mode,
            disableChangeMode: disableChangeMode,
            yearRange: yearRange,
            locale: locale,
            rtl: rtl,
            visibleMonth: visibleMonth,
            momentLocale: localeData,
            changeMode: this.changeMode,
            changeVisibleMonth: this.changeVisibleMonth,
            goNextDecade: this.goNextDecade,
            goNextYear: this.goNextYear,
            goNextMonth: this.goNextMonth,
            goPrevDecade: this.goPrevDecade,
            goPrevYear: this.goPrevYear,
            goPrevMonth: this.goPrevMonth
        };

        var tableProps = {
            prefix: prefix,
            visibleMonth: visibleMonth,
            showOtherMonth: showOtherMonth,
            value: state.value,
            mode: state.mode,
            locale: locale,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            disabledDate: disabledDate,
            momentLocale: localeData,
            today: this.today,
            goPrevDecade: this.goPrevDecade,
            goNextDecade: this.goNextDecade
        };

        var tables = (_tables = {}, _tables[CALENDAR_MODE_DATE] = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(date_table, extends_default()({ format: format }, tableProps, { onSelectDate: this.onSelectCell })), _tables[CALENDAR_MODE_MONTH] = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(month_table, extends_default()({}, tableProps, { onSelectMonth: this.onSelectCell })), _tables[CALENDAR_MODE_YEAR] = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(year_table, extends_default()({}, tableProps, { rtl: rtl, onSelectYear: this.onSelectCell })), _tables);

        var panelHeaders = (_panelHeaders = {}, _panelHeaders[CALENDAR_MODE_DATE] = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(date_panel_header, headerProps), _panelHeaders[CALENDAR_MODE_MONTH] = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(month_panel_header, headerProps), _panelHeaders[CALENDAR_MODE_YEAR] = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(year_panel_header, headerProps), _panelHeaders);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(Calendar.propTypes, others), { className: classNames }),
            shape === 'panel' ? panelHeaders[state.mode] : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(card_header, headerProps),
            tables[state.mode]
        );
    };

    return Calendar;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), calendar__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 默认选中的日期（moment 对象）
     */
    defaultValue: checkMomentObj,
    /**
     * 选中的日期值 (moment 对象)
     */
    value: checkMomentObj,
    /**
     * 面板模式
     */
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(CALENDAR_MODES), // 生成 API 文档需要手动改回 ['date', 'month', 'year']
    // 面板可变化的模式列表，仅初始化时接收一次
    modes: _prop_types_15_8_1_prop_types_default.a.array,
    // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)
    disableChangeMode: _prop_types_15_8_1_prop_types_default.a.bool,
    // 日期值的格式（用于日期title显示的格式）
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否展示非本月的日期
     */
    showOtherMonth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 默认展示的月份
     */
    defaultVisibleMonth: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 展现形态
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['card', 'fullscreen', 'panel']),
    /**
     * 选择日期单元格时的回调
     * @param {Object} value 对应的日期值 (moment 对象)
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 面板模式变化时的回调
     * @param {String} mode 对应面板模式 date month year
     */
    onModeChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 展现的月份变化时的回调
     * @param {Object} value 显示的月份 (moment 对象)
     * @param {String} reason 触发月份改变原因
     */
    onVisibleMonthChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义样式类
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义日期渲染函数
     * @param {Object} value 日期值（moment对象）
     * @returns {ReactNode}
     */
    dateCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    yearCellRender: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x yearCellRender
    /**
     * 年份范围，[START_YEAR, END_YEAR] (只在shape 为 ‘card’, 'fullscreen' 下生效)
     */
    yearRange: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number),
    /**
     * 不可选择的日期
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @returns {Boolean}
     */
    disabledDate: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 国际化配置
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object
}), calendar__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    shape: 'fullscreen',
    modes: CALENDAR_MODES,
    disableChangeMode: false,
    format: 'YYYY-MM-DD',
    onSelect: func.noop,
    onVisibleMonthChange: func.noop,
    onModeChange: func.noop,
    dateCellRender: function dateCellRender(value) {
        return value.date();
    },
    locale: locale_zh_cn.Calendar,
    showOtherMonth: true
}, calendar__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onSelectCell = function (date, nextMode) {
        var visibleMonth = _this2.state.visibleMonth;
        var _props2 = _this2.props,
            shape = _props2.shape,
            showOtherMonth = _props2.showOtherMonth;

        // 点击其他月份日期不生效

        if (!showOtherMonth && !isSameYearMonth(visibleMonth, date)) {
            return;
        }

        _this2.changeVisibleMonth(date, 'cellClick');

        // 当用户所在的面板为初始化面板时，则选择动作为触发 onSelect 回调
        if (_this2.state.mode === _this2.MODES[0]) {
            _this2.props.onSelect(date);
        }

        if (shape === 'panel') {
            _this2.changeMode(nextMode);
        }
    };

    this.changeMode = function (nextMode) {
        if (nextMode && _this2.MODES.indexOf(nextMode) > -1 && nextMode !== _this2.state.mode) {
            _this2.setState({ mode: nextMode });
            _this2.props.onModeChange(nextMode);
        }
    };

    this.changeVisibleMonth = function (date, reason) {
        if (!isSameYearMonth(date, _this2.state.visibleMonth)) {
            _this2.setState({ visibleMonth: date });
            _this2.props.onVisibleMonthChange(date, reason);
        }
    };

    this.goPrevDecade = function () {
        _this2.changeVisibleMonthByOffset(-10, 'years');
    };

    this.goNextDecade = function () {
        _this2.changeVisibleMonthByOffset(10, 'years');
    };

    this.goPrevYear = function () {
        _this2.changeVisibleMonthByOffset(-1, 'years');
    };

    this.goNextYear = function () {
        _this2.changeVisibleMonthByOffset(1, 'years');
    };

    this.goPrevMonth = function () {
        _this2.changeVisibleMonthByOffset(-1, 'months');
    };

    this.goNextMonth = function () {
        _this2.changeVisibleMonthByOffset(1, 'months');
    };
}, calendar__temp);
calendar_Calendar.displayName = 'Calendar';


/* harmony default export */ var calendar = (Object(react_lifecycles_compat_es["polyfill"])(calendar_Calendar));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/head/range-panel-header.js




var range_panel_header__class, range_panel_header__temp2;

/* istanbul ignore file */






/* eslint-disable */
var range_panel_header_RangePanelHeader = (range_panel_header__temp2 = range_panel_header__class = function (_React$PureComponent) {
    inherits_default()(RangePanelHeader, _React$PureComponent);

    function RangePanelHeader() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, RangePanelHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.selectContainerHandler = function (target) {
            return target.parentNode;
        }, _this.onYearChange = function (visibleMonth, year, tag) {
            var changeVisibleMonth = _this.props.changeVisibleMonth;

            var startYear = visibleMonth.clone().year(year).add(tag === 'end' ? -1 : 0, 'month');
            changeVisibleMonth(startYear, 'yearSelect');
        }, _this.changeVisibleMonth = function (visibleMonth, month, tag) {
            var changeVisibleMonth = _this.props.changeVisibleMonth;

            var startMonth = tag === 'end' ? month - 1 : month;
            changeVisibleMonth(visibleMonth.clone().month(startMonth), 'monthSelect');
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    RangePanelHeader.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            startVisibleMonth = _props.startVisibleMonth,
            endVisibleMonth = _props.endVisibleMonth,
            _props$yearRange = _props.yearRange,
            yearRange = _props$yearRange === undefined ? [] : _props$yearRange,
            yearRangeOffset = _props.yearRangeOffset,
            momentLocale = _props.momentLocale,
            locale = _props.locale,
            changeMode = _props.changeMode,
            goNextMonth = _props.goNextMonth,
            goNextYear = _props.goNextYear,
            goPrevMonth = _props.goPrevMonth,
            goPrevYear = _props.goPrevYear,
            disableChangeMode = _props.disableChangeMode;


        var localedMonths = momentLocale.months();
        var startMonthLabel = localedMonths[startVisibleMonth.month()];
        var endMonthLabel = localedMonths[endVisibleMonth.month()];
        var startYearLabel = startVisibleMonth.year();
        var endYearLabel = endVisibleMonth.year();
        var btnCls = prefix + 'calendar-btn';

        var months = getMonths(momentLocale);
        var startYears = getYears(yearRange, yearRangeOffset, startVisibleMonth.year());
        var endYears = getYears(yearRange, yearRangeOffset, endVisibleMonth.year());

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'calendar-panel-header' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.prevYear,
                    className: btnCls + ' ' + btnCls + '-prev-year',
                    onClick: goPrevYear
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.prevMonth,
                    className: btnCls + ' ' + btnCls + '-prev-month',
                    onClick: goPrevMonth
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-left', className: prefix + 'calendar-symbol-prev' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar-panel-header-left' },
                disableChangeMode ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    dropdown,
                    {
                        align: 'tc bc',
                        container: this.selectContainerHandler,
                        trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'button',
                            { role: 'button', type: 'button', className: btnCls, title: startMonthLabel },
                            startMonthLabel,
                            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down' })
                        ),
                        triggerType: 'click'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(menu_SelectMenu, {
                        prefix: prefix,
                        value: startVisibleMonth.month(),
                        dataSource: months,
                        onChange: function onChange(value) {
                            return _this2.changeVisibleMonth(startVisibleMonth, value, 'start');
                        }
                    })
                ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'button',
                    {
                        role: 'button',
                        type: 'button',
                        title: startMonthLabel,
                        className: btnCls,
                        onClick: function onClick() {
                            return changeMode('month', 'start');
                        }
                    },
                    startMonthLabel
                ),
                disableChangeMode ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    dropdown,
                    {
                        align: 'tc bc',
                        container: this.selectContainerHandler,
                        trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'button',
                            { role: 'button', type: 'button', className: btnCls, title: startYearLabel },
                            startYearLabel,
                            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down' })
                        ),
                        triggerType: 'click'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(menu_SelectMenu, {
                        prefix: prefix,
                        value: startVisibleMonth.year(),
                        dataSource: startYears,
                        onChange: function onChange(v) {
                            return _this2.onYearChange(startVisibleMonth, v, 'start');
                        }
                    })
                ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'button',
                    {
                        role: 'button',
                        type: 'button',
                        title: startYearLabel,
                        className: btnCls,
                        onClick: function onClick() {
                            return changeMode('year', 'start');
                        }
                    },
                    startYearLabel
                )
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar-panel-header-right' },
                disableChangeMode ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    dropdown,
                    {
                        align: 'tc bc',
                        container: this.selectContainerHandler,
                        trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'button',
                            { role: 'button', type: 'button', className: btnCls, title: endMonthLabel },
                            endMonthLabel,
                            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down' })
                        ),
                        triggerType: 'click'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(menu_SelectMenu, {
                        prefix: prefix,
                        value: endVisibleMonth.month(),
                        dataSource: months,
                        onChange: function onChange(value) {
                            return _this2.changeVisibleMonth(endVisibleMonth, value, 'end');
                        }
                    })
                ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'button',
                    {
                        role: 'button',
                        type: 'button',
                        title: endMonthLabel,
                        className: btnCls,
                        onClick: function onClick() {
                            return changeMode('month', 'end');
                        }
                    },
                    endMonthLabel
                ),
                disableChangeMode ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    dropdown,
                    {
                        align: 'tc bc',
                        container: this.selectContainerHandler,
                        trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'button',
                            { role: 'button', type: 'button', className: btnCls, title: endYearLabel },
                            endYearLabel,
                            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down' })
                        ),
                        triggerType: 'click'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(menu_SelectMenu, {
                        prefix: prefix,
                        value: endVisibleMonth.year(),
                        dataSource: endYears,
                        onChange: function onChange(v) {
                            return _this2.onYearChange(endVisibleMonth, v, 'end');
                        }
                    })
                ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'button',
                    {
                        role: 'button',
                        type: 'button',
                        title: endYearLabel,
                        className: btnCls,
                        onClick: function onClick() {
                            return changeMode('year', 'end');
                        }
                    },
                    endYearLabel
                )
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.nextMonth,
                    className: btnCls + ' ' + btnCls + '-next-month',
                    onClick: goNextMonth
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-right', className: prefix + 'calendar-symbol-next' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    role: 'button',
                    type: 'button',
                    title: locale.nextYear,
                    className: btnCls + ' ' + btnCls + '-next-year',
                    onClick: goNextYear
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })
            )
        );
    };

    return RangePanelHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent), range_panel_header__class.defaultProps = {
    yearRangeOffset: 10
}, range_panel_header__temp2);


/* harmony default export */ var range_panel_header = (range_panel_header_RangePanelHeader);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/range-calendar.js






var range_calendar__class, range_calendar__temp;

















var range_calendar_RangeCalendar = (range_calendar__temp = range_calendar__class = function (_React$Component) {
    inherits_default()(RangeCalendar, _React$Component);

    function RangeCalendar(props, context) {
        classCallCheck_default()(this, RangeCalendar);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        _this.onSelectCell = function (date, nextMode) {
            if (_this.state.mode === CALENDAR_MODE_DATE) {
                _this.props.onSelect(date);
            } else {
                _this.changeVisibleMonth(date, 'cellClick');
            }

            _this.changeMode(nextMode);
        };

        _this.changeMode = function (mode, activePanel) {
            var _this$state = _this.state,
                lastMode = _this$state.lastMode,
                lastPanelType = _this$state.lastPanelType;


            var state = {
                lastMode: mode,
                // rangePicker的panel下，选 year -> month ，从当前函数的activePanel传来的数据已经拿不到 start end panel的状态了，需要根据 lastMode 来判断
                lastPanelType: lastMode === 'year' ? lastPanelType : activePanel
            };
            if (typeof mode === 'string' && mode !== _this.state.mode) {
                state.mode = mode;
            }
            if (activePanel && activePanel !== _this.state.activePanel) {
                state.activePanel = activePanel;
            }

            _this.setState(state);
        };

        _this.changeVisibleMonth = function (date, reason) {
            var lastPanelType = _this.state.lastPanelType;

            if (!isSameYearMonth(date, _this.state.startVisibleMonth)) {
                var startVisibleMonth = lastPanelType === 'end' ? date.clone().add(-1, 'month') : date;
                _this.setState({ startVisibleMonth: startVisibleMonth });
                _this.props.onVisibleMonthChange(startVisibleMonth, reason);
            }
        };

        _this.changeVisibleMonthByOffset = function (offset, type) {
            var offsetDate = _this.state.startVisibleMonth.clone().add(offset, type);
            _this.changeVisibleMonth(offsetDate, 'buttonClick');
        };

        _this.goPrevDecade = function () {
            _this.changeVisibleMonthByOffset(-10, 'years');
        };

        _this.goNextDecade = function () {
            _this.changeVisibleMonthByOffset(10, 'years');
        };

        _this.goPrevYear = function () {
            _this.changeVisibleMonthByOffset(-1, 'years');
        };

        _this.goNextYear = function () {
            _this.changeVisibleMonthByOffset(1, 'years');
        };

        _this.goPrevMonth = function () {
            _this.changeVisibleMonthByOffset(-1, 'months');
        };

        _this.goNextMonth = function () {
            _this.changeVisibleMonthByOffset(1, 'months');
        };

        var startValue = formatDateValue(props.startValue || props.defaultStartValue);
        var endValue = formatDateValue(props.endValue || props.defaultEndValue);
        var visibleMonth = getVisibleMonth(props.defaultVisibleMonth, startValue);

        _this.state = {
            startValue: startValue,
            endValue: endValue,
            mode: props.mode,
            prevMode: props.mode,
            startVisibleMonth: visibleMonth,
            activePanel: undefined,
            lastMode: undefined,
            lastPanelType: 'start' // enum, 包括 start end
        };
        _this.today = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()();
        return _this;
    }

    RangeCalendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var st = {};
        if ('startValue' in props) {
            var startValue = formatDateValue(props.startValue);
            st.startValue = startValue;
            if (startValue && !startValue.isSame(state.startValue, 'day')) {
                st.startVisibleMonth = startValue;
            }
        }

        if ('endValue' in props) {
            st.endValue = formatDateValue(props.endValue);
        }

        if ('mode' in props && state.prevMode !== props.mode) {
            st.prevMode = props.mode;
            st.mode = props.mode;
        }

        return st;
    };

    /**
     * 根据日期偏移量设置当前展示的月份
     * @param {Number} offset 日期偏移量
     * @param {String} type 日期偏移类型 days, months, years
     */


    RangeCalendar.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            dateCellRender = _props.dateCellRender,
            monthCellRender = _props.monthCellRender,
            yearCellRender = _props.yearCellRender,
            className = _props.className,
            format = _props.format,
            locale = _props.locale,
            showOtherMonth = _props.showOtherMonth,
            disabledDate = _props.disabledDate,
            disableChangeMode = _props.disableChangeMode,
            yearRange = _props.yearRange,
            others = objectWithoutProperties_default()(_props, ['prefix', 'rtl', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'className', 'format', 'locale', 'showOtherMonth', 'disabledDate', 'disableChangeMode', 'yearRange']);

        var _state = this.state,
            startValue = _state.startValue,
            endValue = _state.endValue,
            mode = _state.mode,
            startVisibleMonth = _state.startVisibleMonth,
            activePanel = _state.activePanel;

        // reset moment locale

        if (locale.momentLocale) {
            startValue && startValue.locale(locale.momentLocale);
            endValue && endValue.locale(locale.momentLocale);
            startVisibleMonth.locale(locale.momentLocale);
        }

        if (rtl) {
            others.dir = 'rtl';
        }
        var localeData = getLocaleData(locale.format || {}, startVisibleMonth.localeData());

        var endVisibleMonth = startVisibleMonth.clone().add(1, 'months');

        var headerProps = {
            prefix: prefix,
            rtl: rtl,
            mode: mode,
            locale: locale,
            momentLocale: localeData,
            startVisibleMonth: startVisibleMonth,
            endVisibleMonth: endVisibleMonth,
            changeVisibleMonth: this.changeVisibleMonth,
            changeMode: this.changeMode,
            yearRange: yearRange,
            disableChangeMode: disableChangeMode
        };

        var tableProps = {
            prefix: prefix,
            value: startValue,
            startValue: startValue,
            endValue: endValue,
            mode: mode,
            locale: locale,
            momentLocale: localeData,
            showOtherMonth: showOtherMonth,
            today: this.today,
            disabledDate: disabledDate,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            changeMode: this.changeMode,
            changeVisibleMonth: this.changeVisibleMonth
        };

        var visibleMonths = {
            start: startVisibleMonth,
            end: endVisibleMonth
        };

        var visibleMonth = visibleMonths[activePanel];

        var header = void 0;
        var table = void 0;

        switch (mode) {
            case CALENDAR_MODE_DATE:
                {
                    table = [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: prefix + 'calendar-body-left', key: 'left-panel' },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(date_table, extends_default()({
                            format: format
                        }, tableProps, {
                            visibleMonth: startVisibleMonth,
                            onSelectDate: this.onSelectCell
                        }))
                    ), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: prefix + 'calendar-body-right', key: 'right-panel' },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(date_table, extends_default()({
                            format: format
                        }, tableProps, {
                            visibleMonth: endVisibleMonth,
                            onSelectDate: this.onSelectCell
                        }))
                    )];
                    header = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(range_panel_header, extends_default()({}, headerProps, {
                        goPrevYear: this.goPrevYear,
                        goPrevMonth: this.goPrevMonth,
                        goNextYear: this.goNextYear,
                        goNextMonth: this.goNextMonth
                    }));
                    break;
                }
            case CALENDAR_MODE_MONTH:
                {
                    table = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(month_table, extends_default()({}, tableProps, { visibleMonth: visibleMonth, onSelectMonth: this.onSelectCell }));
                    header = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(month_panel_header, extends_default()({}, headerProps, {
                        visibleMonth: visibleMonth,
                        goPrevYear: this.goPrevYear,
                        goNextYear: this.goNextYear
                    }));
                    break;
                }
            case CALENDAR_MODE_YEAR:
                {
                    table = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(year_table, extends_default()({}, tableProps, {
                        rtl: rtl,
                        visibleMonth: visibleMonth,
                        onSelectYear: this.onSelectCell,
                        goPrevDecade: this.goPrevDecade,
                        goNextDecade: this.goNextDecade
                    }));
                    header = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(year_panel_header, extends_default()({}, headerProps, {
                        visibleMonth: visibleMonth,
                        goPrevDecade: this.goPrevDecade,
                        goNextDecade: this.goNextDecade
                    }));
                    break;
                }
        }

        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-range'] = true, _classnames), className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(RangeCalendar.propTypes, others), { className: classNames }),
            header,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar-body' },
                table
            )
        );
    };

    return RangeCalendar;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), range_calendar__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 默认的开始日期
     */
    defaultStartValue: checkMomentObj,
    /**
     * 默认的结束日期
     */
    defaultEndValue: checkMomentObj,
    /**
     * 开始日期（moment 对象）
     */
    startValue: checkMomentObj,
    /**
     * 结束日期（moment 对象）
     */
    endValue: checkMomentObj,
    // 面板模式
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(CALENDAR_MODES),
    // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)
    disableChangeMode: _prop_types_15_8_1_prop_types_default.a.bool,
    // 日期值的格式（用于日期title显示的格式）
    format: _prop_types_15_8_1_prop_types_default.a.string,
    yearRange: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number),
    /**
     * 是否显示非本月的日期
     */
    showOtherMonth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 模板展示的月份（起始月份）
     */
    defaultVisibleMonth: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 展现的月份变化时的回调
     * @param {Object} value 显示的月份 (moment 对象)
     * @param {String} reason 触发月份改变原因
     */
    onVisibleMonthChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 不可选择的日期
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @returns {Boolean}
     */
    disabledDate: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选择日期单元格时的回调
     * @param {Object} value 对应的日期值 (moment 对象)
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义日期单元格渲染
     */
    dateCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    yearCellRender: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x yearCellRender
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string
}), range_calendar__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    mode: CALENDAR_MODE_DATE,
    disableChangeMode: false,
    format: 'YYYY-MM-DD',
    dateCellRender: function dateCellRender(value) {
        return value.date();
    },
    onSelect: func.noop,
    onVisibleMonthChange: func.noop,
    locale: locale_zh_cn.Calendar,
    showOtherMonth: false
}, range_calendar__temp);
range_calendar_RangeCalendar.displayName = 'RangeCalendar';


/* harmony default export */ var range_calendar = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(range_calendar_RangeCalendar), {
    componentName: 'Calendar'
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar/index.js






/* istanbul ignore next */
var calendar_transform = function transform(props, deprecated) {
    var type = props.type,
        onChange = props.onChange,
        base = props.base,
        disabledMonth = props.disabledMonth,
        disabledYear = props.disabledYear,
        others = objectWithoutProperties_default()(props, ['type', 'onChange', 'base', 'disabledMonth', 'disabledYear']);

    var newProps = others;

    if ('type' in props) {
        deprecated('type', 'shape', 'Calendar');

        newProps.shape = type;

        if ('shape' in props) {
            newProps.shape = props.shape;
        }
    }

    if ('base' in props) {
        deprecated('base', 'defaultVisibleMonth', 'Calendar');

        var newDefaultVisibleMonth = function newDefaultVisibleMonth() {
            preFormatDateValue(base, 'YYYY-MM-DD');
        };

        if ('defaultVisibleMonth' in props) {
            newDefaultVisibleMonth = props.defaultVisibleMonth;
        }

        newProps.defaultVisibleMonth = newDefaultVisibleMonth;
    }

    if ('onChange' in props && typeof onChange === 'function') {
        deprecated('onChange', 'onSelect', 'Calendar');

        var newOnSelect = function newOnSelect(date) {
            onChange({ mode: others.mode, value: date });

            if ('onSelect' in props) {
                props.onSelect(date);
            }
        };

        newProps.onSelect = newOnSelect;
    }

    if ('disabledMonth' in props && typeof disabledMonth === 'function') {
        deprecated('disabledMonth', 'disabledDate', 'Calendar');
    }

    if ('disabledYear' in props && typeof disabledYear === 'function') {
        deprecated('disabledYear', 'disabledDate', 'Calendar');
    }

    if ('yearCellRender' in props && typeof yearCellRender === 'function') {
        deprecated('yearCellRender', 'monthCellRender/dateCellRender', 'Calendar');
    }

    if ('language' in props) {
        deprecated('language', 'moment.locale', 'Calendar');
    }

    return newProps;
};

calendar.RangeCalendar = range_calendar;
/* harmony default export */ var es_calendar = (config_provider.config(calendar, {
    transform: calendar_transform
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/bullet-header.js




var bullet_header__class, bullet_header__temp;






/**
 * Card.BulletHeader
 * @order 2
 */
var bullet_header_CardBulletHeader = (bullet_header__temp = bullet_header__class = function (_Component) {
    inherits_default()(CardBulletHeader, _Component);

    function CardBulletHeader() {
        classCallCheck_default()(this, CardBulletHeader);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    CardBulletHeader.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            title = _props.title,
            subTitle = _props.subTitle,
            extra = _props.extra,
            showTitleBullet = _props.showTitleBullet;


        if (!title) return null;

        var headCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'card-head'] = true, _classNames[prefix + 'card-head-show-bullet'] = showTitleBullet, _classNames));

        var headExtra = extra ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'card-extra' },
            extra
        ) : null;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: headCls },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'card-head-main' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'card-title' },
                    title,
                    subTitle ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'span',
                        { className: prefix + 'card-subtitle' },
                        subTitle
                    ) : null
                ),
                headExtra
            )
        );
    };

    return CardBulletHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), bullet_header__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 卡片的标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 卡片的副标题
     */
    subTitle: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否显示标题的项目符号
     */
    showTitleBullet: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 标题区域的用户自定义内容
     */
    extra: _prop_types_15_8_1_prop_types_default.a.node
}, bullet_header__class.defaultProps = {
    prefix: 'next-',
    showTitleBullet: true
}, bullet_header__temp);
bullet_header_CardBulletHeader.displayName = 'CardBulletHeader';


/* harmony default export */ var bullet_header = (config_provider.config(bullet_header_CardBulletHeader, {
    componentName: 'Card'
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/collapse-content.js




var collapse_content__class, collapse_content__temp;









/**
 * Card.CollapseContent
 * @order 3
 */
var collapse_content_CardCollapseContent = (collapse_content__temp = collapse_content__class = function (_Component) {
    inherits_default()(CardCollapseContent, _Component);

    function CardCollapseContent(props, context) {
        classCallCheck_default()(this, CardCollapseContent);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this.handleToggle = function () {
            _this.setState(function (prevState) {
                return {
                    expand: !prevState.expand
                };
            });
        };

        _this._contentRefHandler = function (ref) {
            _this.content = ref;
        };

        _this.saveFooter = function (ref) {
            _this.footer = ref;
        };

        _this.state = {
            needMore: false,
            expand: false,
            contentHeight: 'auto'
        };
        return _this;
    }

    CardCollapseContent.prototype.componentDidMount = function componentDidMount() {
        this._setNeedMore();
        this._setContentHeight();
    };

    CardCollapseContent.prototype.componentDidUpdate = function componentDidUpdate() {
        this._setContentHeight();
    };

    // 是否展示 More 按钮
    CardCollapseContent.prototype._setNeedMore = function _setNeedMore() {
        var contentHeight = this.props.contentHeight;

        var childrenHeight = this._getNodeChildrenHeight(this.content);
        this.setState({
            needMore: contentHeight !== 'auto' && childrenHeight > contentHeight
        });
    };

    // 设置 Body 的高度


    CardCollapseContent.prototype._setContentHeight = function _setContentHeight() {
        if (this.props.contentHeight === 'auto') {
            this.content.style.height = 'auto';
            return;
        }

        if (this.state.expand) {
            var childrenHeight = this._getNodeChildrenHeight(this.content);
            this.content.style.height = childrenHeight + 'px'; // get the real height
        } else {
            var el = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.footer);
            var height = this.props.contentHeight;

            if (el) {
                height = height - el.getBoundingClientRect().height;
            }

            this.content.style.height = height + 'px';
        }
    };

    CardCollapseContent.prototype._getNodeChildrenHeight = function _getNodeChildrenHeight(node) {
        if (!node) {
            return 0;
        }

        var contentChildNodes = node.childNodes;
        var length = contentChildNodes.length;

        if (!length) {
            return 0;
        }

        var lastNode = contentChildNodes[length - 1];

        return lastNode.offsetTop + lastNode.offsetHeight;
    };

    CardCollapseContent.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            children = _props.children,
            locale = _props.locale;
        var _state = this.state,
            needMore = _state.needMore,
            expand = _state.expand;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'card-body' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'card-content', ref: this._contentRefHandler },
                children
            ),
            needMore ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'card-footer', ref: this.saveFooter, onClick: this.handleToggle },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    { text: true, type: 'primary' },
                    expand ? locale.fold : locale.expand,
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down', className: expand ? 'expand' : '' })
                )
            ) : null
        );
    };

    return CardCollapseContent;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), collapse_content__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 内容区域的固定高度
     */
    contentHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, collapse_content__class.defaultProps = {
    prefix: 'next-',
    contentHeight: 120,
    locale: locale_zh_cn.Card
}, collapse_content__temp);
collapse_content_CardCollapseContent.displayName = 'CardCollapseContent';


/* harmony default export */ var collapse_content = (config_provider.config(collapse_content_CardCollapseContent, {
    componentName: 'Card'
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/media.js






var media__class, media__temp;







var media_warning = log.warning;


var MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];

/**
 * Card.Media
 * @order 1
 */
var media_CardMedia = (media__temp = media__class = function (_Component) {
    inherits_default()(CardMedia, _Component);

    function CardMedia() {
        classCallCheck_default()(this, CardMedia);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    CardMedia.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            style = _props.style,
            className = _props.className,
            Component = _props.component,
            image = _props.image,
            src = _props.src,
            others = objectWithoutProperties_default()(_props, ['prefix', 'style', 'className', 'component', 'image', 'src']);

        if (!('children' in others || Boolean(image || src))) {
            media_warning('either `children`, `image` or `src` prop must be specified.');
        }

        var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;
        var composedStyle = !isMediaComponent && image ? extends_default()({ backgroundImage: 'url("' + image + '")' }, style) : style;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Component, extends_default()({}, others, {
            style: composedStyle,
            className: _classnames_2_3_1_classnames_default()(prefix + 'card-media', className),
            src: isMediaComponent ? image || src : undefined
        }));
    };

    return CardMedia;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), media__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType,
    /**
     * 背景图片地址
     */
    image: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 媒体源文件地址
     */
    src: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, media__class.defaultProps = {
    prefix: 'next-',
    component: 'div',
    style: {}
}, media__temp);
media_CardMedia.displayName = 'CardMedia';


/* harmony default export */ var card_media = (config_provider.config(media_CardMedia));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/actions.js






var actions__class, actions__temp;






/**
 * Card.Actions
 * @order 5
 */
var actions_CardActions = (actions__temp = actions__class = function (_Component) {
    inherits_default()(CardActions, _Component);

    function CardActions() {
        classCallCheck_default()(this, CardActions);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    CardActions.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            Component = _props.component,
            className = _props.className,
            others = objectWithoutProperties_default()(_props, ['prefix', 'component', 'className']);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Component, extends_default()({}, others, {
            className: _classnames_2_3_1_classnames_default()(prefix + 'card-actions', className)
        }));
    };

    return CardActions;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), actions__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, actions__class.defaultProps = {
    prefix: 'next-',
    component: 'div'
}, actions__temp);
actions_CardActions.displayName = 'CardActions';


/* harmony default export */ var card_actions = (config_provider.config(actions_CardActions));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/card.js





var card__class, card__temp;

/* eslint-disable valid-jsdoc */










var card_pickOthers = util_obj.pickOthers;

/**
 * Card
 * @order 0
 */

var card_Card = (card__temp = card__class = function (_React$Component) {
  inherits_default()(Card, _React$Component);

  function Card() {
    classCallCheck_default()(this, Card);

    return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
  }

  Card.prototype.render = function render() {
    var _classNames;

    var _props = this.props,
        prefix = _props.prefix,
        className = _props.className,
        title = _props.title,
        subTitle = _props.subTitle,
        extra = _props.extra,
        showTitleBullet = _props.showTitleBullet,
        showHeadDivider = _props.showHeadDivider,
        children = _props.children,
        rtl = _props.rtl,
        contentHeight = _props.contentHeight,
        free = _props.free,
        actions = _props.actions,
        hasBorder = _props.hasBorder,
        media = _props.media;


    var cardCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'card'] = true, _classNames[prefix + 'card-free'] = free, _classNames[prefix + 'card-noborder'] = !hasBorder, _classNames[prefix + 'card-show-divider'] = showHeadDivider, _classNames[prefix + 'card-hide-divider'] = !showHeadDivider, _classNames), className);

    var others = card_pickOthers(Object.keys(Card.propTypes), this.props);

    others.dir = rtl ? 'rtl' : undefined;

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
      'div',
      extends_default()({}, others, { className: cardCls }),
      media && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        card_media,
        null,
        media
      ),
      external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(bullet_header, { title: title, subTitle: subTitle, extra: extra, showTitleBullet: showTitleBullet }),
      free ? children : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        collapse_content,
        { contentHeight: contentHeight },
        children
      ),
      actions && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        card_actions,
        null,
        actions
      )
    );
  };

  return Card;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), card__class.displayName = 'Card', card__class.propTypes = extends_default()({}, config_provider.propTypes, {
  prefix: _prop_types_15_8_1_prop_types_default.a.string,
  rtl: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 卡片的上的图片 / 视频
   */
  media: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 卡片的标题
   */
  title: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 卡片的副标题
   */
  subTitle: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 卡片操作组，位置在卡片底部
   */
  actions: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 是否显示标题的项目符号
   */
  showTitleBullet: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否展示头部的分隔线
   */
  showHeadDivider: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 内容区域的固定高度
   */
  contentHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
  /**
   * 标题区域的用户自定义内容
   */
  extra: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 是否开启自由模式，开启后card 将使用子组件配合使用, 设置此项后 title, subtitle, 等等属性都将失效
   */
  free: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否带边框
   * @version 1.24
   */
  hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
  className: _prop_types_15_8_1_prop_types_default.a.string,
  children: _prop_types_15_8_1_prop_types_default.a.node
}), card__class.defaultProps = {
  prefix: 'next-',
  free: false,
  showTitleBullet: true,
  showHeadDivider: true,
  hasBorder: true,
  contentHeight: 120
}, card__temp);
card_Card.displayName = 'Card';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/header.js






var header__class, header__temp;






/**
 * Card.Header
 * @order 2
 */
var header_CardHeader = (header__temp = header__class = function (_Component) {
    inherits_default()(CardHeader, _Component);

    function CardHeader() {
        classCallCheck_default()(this, CardHeader);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    CardHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            title = _props.title,
            subTitle = _props.subTitle,
            extra = _props.extra,
            className = _props.className,
            Component = _props.component,
            others = objectWithoutProperties_default()(_props, ['prefix', 'title', 'subTitle', 'extra', 'className', 'component']);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Component,
            extends_default()({}, others, {
                className: _classnames_2_3_1_classnames_default()(prefix + 'card-header', className)
            }),
            extra && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'card-header-extra' },
                extra
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'card-header-titles' },
                title && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'card-header-title' },
                    title
                ),
                subTitle && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'card-header-subtitle' },
                    subTitle
                )
            )
        );
    };

    return CardHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), header__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 卡片的标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 卡片的副标题
     */
    subTitle: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 标题区域的用户自定义内容
     */
    extra: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, header__class.defaultProps = {
    prefix: 'next-',
    component: 'div'
}, header__temp);
header_CardHeader.displayName = 'CardHeader';


/* harmony default export */ var es_card_header = (config_provider.config(header_CardHeader));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/divider.js






var card_divider__class, card_divider__temp;






/**
 * Card.Divider
 * @order 4
 */
var divider_CardDivider = (card_divider__temp = card_divider__class = function (_Component) {
    inherits_default()(CardDivider, _Component);

    function CardDivider() {
        classCallCheck_default()(this, CardDivider);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    CardDivider.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            Component = _props.component,
            inset = _props.inset,
            className = _props.className,
            others = objectWithoutProperties_default()(_props, ['prefix', 'component', 'inset', 'className']);

        var dividerClassName = _classnames_2_3_1_classnames_default()(prefix + 'card-divider', (_classNames = {}, _classNames[prefix + 'card-divider--inset'] = inset, _classNames), className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Component, extends_default()({}, others, { className: dividerClassName }));
    };

    return CardDivider;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), card_divider__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType,
    /**
     * 分割线是否向内缩进
     */
    inset: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, card_divider__class.defaultProps = {
    prefix: 'next-',
    component: 'hr'
}, card_divider__temp);
divider_CardDivider.displayName = 'CardDivider';


/* harmony default export */ var card_divider = (config_provider.config(divider_CardDivider));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/content.js






var content__class, content__temp;






/**
 * Card.Content
 * @order 3
 */
var content_CardContent = (content__temp = content__class = function (_Component) {
    inherits_default()(CardContent, _Component);

    function CardContent() {
        classCallCheck_default()(this, CardContent);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    CardContent.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            Component = _props.component,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'component']);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Component, extends_default()({}, others, {
            className: _classnames_2_3_1_classnames_default()(prefix + 'card-content-container', className)
        }));
    };

    return CardContent;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), content__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, content__class.defaultProps = {
    prefix: 'next-',
    component: 'div'
}, content__temp);
content_CardContent.displayName = 'CardContent';


/* harmony default export */ var card_content = (config_provider.config(content_CardContent));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/card/index.js












card_Card.Header = es_card_header;
card_Card.Media = card_media;
card_Card.Divider = card_divider;
card_Card.Content = card_content;
card_Card.Actions = card_actions;
card_Card.BulletHeader = bullet_header;
card_Card.CollaspeContent = collapse_content;
card_Card.CollapseContent = collapse_content;

/* harmony default export */ var card = (config_provider.config(card_Card, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('titlePrefixLine' in props) {
            deprecated('titlePrefixLine', 'showTitleBullet', 'Card');

            var _props = props,
                titlePrefixLine = _props.titlePrefixLine,
                others = objectWithoutProperties_default()(_props, ['titlePrefixLine']);

            props = extends_default()({ showTitleBullet: titlePrefixLine }, others);
        }
        if ('titleBottomLine' in props) {
            deprecated('titleBottomLine', 'showHeadDivider', 'Card');

            var _props2 = props,
                titleBottomLine = _props2.titleBottomLine,
                _others = objectWithoutProperties_default()(_props2, ['titleBottomLine']);

            props = extends_default()({ showHeadDivider: titleBottomLine }, _others);
        }
        if ('bodyHeight' in props) {
            deprecated('bodyHeight', 'contentHeight', 'Card');

            var _props3 = props,
                bodyHeight = _props3.bodyHeight,
                _others2 = objectWithoutProperties_default()(_props3, ['bodyHeight']);

            props = extends_default()({ contentHeight: bodyHeight }, _others2);
        }

        return props;
    }
}));
// EXTERNAL MODULE: ./node_modules/_lodash.clonedeep@4.5.0@lodash.clonedeep/index.js
var _lodash_clonedeep_4_5_0_lodash_clonedeep = __webpack_require__(69);
var _lodash_clonedeep_4_5_0_lodash_clonedeep_default = /*#__PURE__*/__webpack_require__.n(_lodash_clonedeep_4_5_0_lodash_clonedeep);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/cascader/menu.js






var cascader_menu__class, cascader_menu__temp2;







var menu_CascaderMenu = (cascader_menu__temp2 = cascader_menu__class = function (_Component) {
    inherits_default()(CascaderMenu, _Component);

    function CascaderMenu() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, CascaderMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.saveMenuRef = function (ref) {
            _this.menuEl = ref;
        }, _this.saveVirtualRef = function (ref) {
            _this.virtualEl = ref;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    CascaderMenu.prototype.componentDidMount = function componentDidMount() {
        this.scrollToSelectedItem();
    };

    CascaderMenu.prototype.scrollToSelectedItem = function scrollToSelectedItem() {
        var _props = this.props,
            prefix = _props.prefix,
            useVirtual = _props.useVirtual,
            children = _props.children;

        if (!children || children.length === 0) {
            return;
        }
        var selectedIndex = children.findIndex(function (item) {
            return !!item.props.checked || !!item.props.selected || !!item.props.expanded;
        });

        if (selectedIndex === -1) {
            return;
        }

        if (useVirtual) {
            var instance = this.virtualEl.getInstance();
            setTimeout(function () {
                return instance.scrollTo(selectedIndex);
            }, 0);
        } else {
            var itemSelector = '.' + prefix + 'menu-item';
            var menu = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.menuEl);
            var targetItem = menu.querySelectorAll(itemSelector)[selectedIndex];
            if (targetItem) {
                menu.scrollTop = targetItem.offsetTop - Math.floor((menu.clientHeight / targetItem.clientHeight - 1) / 2) * targetItem.clientHeight;
            }
        }
    };

    CascaderMenu.prototype.renderMenu = function renderMenu(items, ref, props) {
        var _this2 = this;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu,
            extends_default()({ ref: ref, role: 'listbox' }, props),
            items.map(function (node) {
                if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(node) && node.type.menuChildType === 'item') {
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(node, {
                        menu: _this2
                    });
                }

                return node;
            })
        );
    };

    CascaderMenu.prototype.render = function render() {
        var _this3 = this;

        var _props2 = this.props,
            prefix = _props2.prefix,
            useVirtual = _props2.useVirtual,
            className = _props2.className,
            style = _props2.style,
            children = _props2.children,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'useVirtual', 'className', 'style', 'children']);

        var menuProps = extends_default()({
            labelToggleChecked: false,
            className: prefix + 'cascader-menu'
        }, others);
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                ref: this.saveMenuRef,
                className: prefix + 'cascader-menu-wrapper ' + (className ? className : ''),
                style: style
            },
            useVirtual ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_virtual_list,
                {
                    ref: this.saveVirtualRef,
                    itemsRenderer: function itemsRenderer(items, ref) {
                        return _this3.renderMenu(items, ref, menuProps);
                    }
                },
                children
            ) : this.renderMenu(children, undefined, menuProps)
        );
    };

    return CascaderMenu;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), cascader_menu__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, cascader_menu__temp2);
menu_CascaderMenu.displayName = 'CascaderMenu';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/cascader/item.js





var cascader_item__class, cascader_item__temp;








var cascader_item_bindCtx = func.bindCtx;
var cascader_item_pickOthers = util_obj.pickOthers;
var item_CascaderMenuItem = (cascader_item__temp = cascader_item__class = function (_Component) {
    inherits_default()(CascaderMenuItem, _Component);

    function CascaderMenuItem(props) {
        classCallCheck_default()(this, CascaderMenuItem);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.state = {
            loading: false
        };

        cascader_item_bindCtx(_this, ['handleExpand', 'handleClick', 'handleMouseEnter', 'handleKeyDown', 'removeLoading']);
        return _this;
    }

    CascaderMenuItem.prototype.addLoading = function addLoading() {
        this.setState({
            loading: true
        });
    };

    CascaderMenuItem.prototype.removeLoading = function removeLoading() {
        this.setState({
            loading: false
        });
    };

    CascaderMenuItem.prototype.setLoadingIfNeed = function setLoadingIfNeed(p) {
        if (p && typeof p.then === 'function') {
            this.addLoading();
            p.then(this.removeLoading).catch(this.removeLoading);
        }
    };

    CascaderMenuItem.prototype.handleExpand = function handleExpand(focusedFirstChild) {
        this.setLoadingIfNeed(this.props.onExpand(focusedFirstChild));
    };

    CascaderMenuItem.prototype.handleClick = function handleClick() {
        this.handleExpand(false);
    };

    CascaderMenuItem.prototype.handleMouseEnter = function handleMouseEnter() {
        this.handleExpand(false);
    };

    CascaderMenuItem.prototype.handleKeyDown = function handleKeyDown(e) {
        if (!this.props.disabled) {
            if (e.keyCode === KEYCODE.RIGHT || e.keyCode === KEYCODE.ENTER) {
                if (this.props.canExpand) {
                    this.handleExpand(true);
                }
            } else if (e.keyCode === KEYCODE.LEFT || e.keyCode === KEYCODE.ESC) {
                this.props.onFold();
            } else if (e.keyCode === KEYCODE.SPACE) {
                this.handleExpand(false);
            }
        }
    };

    CascaderMenuItem.prototype.render = function render() {
        var _cx;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            menu = _props.menu,
            disabled = _props.disabled,
            selected = _props.selected,
            onSelect = _props.onSelect,
            expanded = _props.expanded,
            canExpand = _props.canExpand,
            expandTriggerType = _props.expandTriggerType,
            checkable = _props.checkable,
            checked = _props.checked,
            indeterminate = _props.indeterminate,
            checkboxDisabled = _props.checkboxDisabled,
            onCheck = _props.onCheck,
            children = _props.children;

        var others = cascader_item_pickOthers(Object.keys(CascaderMenuItem.propTypes), this.props);
        var loading = this.state.loading;


        var itemProps = extends_default()({
            className: _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'cascader-menu-item'] = true, _cx[prefix + 'expanded'] = expanded, _cx[className] = !!className, _cx)),
            disabled: disabled,
            menu: menu,
            onKeyDown: this.handleKeyDown,
            role: 'option'
        }, others);
        if (!disabled) {
            if (expandTriggerType === 'hover') {
                itemProps.onMouseEnter = this.handleMouseEnter;
            } else {
                itemProps.onClick = this.handleClick;
            }
        }

        var Item = void 0,
            title = void 0;
        if (checkable) {
            Item = es_menu.CheckboxItem;
            itemProps.checked = checked;
            itemProps.indeterminate = indeterminate;
            itemProps.checkboxDisabled = checkboxDisabled;
            itemProps.onChange = onCheck;
        } else {
            Item = es_menu.Item;
            itemProps.selected = selected;
            itemProps.onSelect = onSelect;
        }

        if (typeof children === 'string') {
            title = children;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Item,
            extends_default()({ title: title }, itemProps),
            children,
            canExpand ? loading ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                className: prefix + 'cascader-menu-icon-right ' + prefix + 'cascader-menu-icon-loading',
                type: 'loading'
            }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                className: prefix + 'cascader-menu-icon-right ' + prefix + 'cascader-menu-icon-expand',
                type: 'arrow-right'
            }) : null
        );
    };

    return CascaderMenuItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), cascader_item__class.menuChildType = 'item', cascader_item__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    selected: _prop_types_15_8_1_prop_types_default.a.bool,
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    expanded: _prop_types_15_8_1_prop_types_default.a.bool,
    canExpand: _prop_types_15_8_1_prop_types_default.a.bool,
    menu: _prop_types_15_8_1_prop_types_default.a.any,
    expandTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    onExpand: _prop_types_15_8_1_prop_types_default.a.func,
    onFold: _prop_types_15_8_1_prop_types_default.a.func,
    checkable: _prop_types_15_8_1_prop_types_default.a.bool,
    checked: _prop_types_15_8_1_prop_types_default.a.bool,
    indeterminate: _prop_types_15_8_1_prop_types_default.a.bool,
    checkboxDisabled: _prop_types_15_8_1_prop_types_default.a.bool,
    onCheck: _prop_types_15_8_1_prop_types_default.a.func,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, cascader_item__temp);
item_CascaderMenuItem.displayName = 'CascaderMenuItem';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/cascader/utils.js
/* eslint-disable valid-jsdoc */
function utils_normalizeToArray(values) {
    if (values !== undefined && values !== null) {
        if (Array.isArray(values)) {
            return [].concat(values);
        }

        return [values];
    }

    return [];
}

/**
 * 判断子节点是否是选中状态，如果 checkable={false} 则向下递归，
 * @param {Node} child
 * @param {Array} checkedValues
 */
function isNodeChecked(node, checkedValues) {
    if (node.disabled || node.checkboxDisabled) return true;
    /* istanbul ignore next */
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(function (c) {
            return isNodeChecked(c, checkedValues);
        });
    }
    return checkedValues.indexOf(node.value) > -1;
}

/**
 * 遍历所有可用的子节点
 * @param {Node}
 * @param {Function} callback
 */
function forEachEnableNode(node) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

    if (node.disabled || node.checkboxDisabled) return;
    // eslint-disable-next-line callback-return
    callback(node);
    if (node.children && node.children.length > 0) {
        node.children.forEach(function (child) {
            return forEachEnableNode(child, callback);
        });
    }
}
/**
 * 判断节点是否禁用checked
 * @param {Node} node
 * @returns {Boolean}
 */
function isNodeDisabledChecked(node) {
    if (node.disabled || node.checkboxDisabled) return true;
    /* istanbul ignore next */
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(isNodeDisabledChecked);
    }

    return false;
}

/**
 * 递归获取一个 checkable = {true} 的父节点，当 checkable={false} 时继续往上查找
 * @param {Node} node
 * @param {Map} _p2n
 * @return {Node}
 */
function getCheckableParentNode(node, _p2n) {
    var parentPos = node.pos.split(['-']);
    if (parentPos.length === 2) return node;
    parentPos.splice(parentPos.length - 1, 1);
    parentPos = parentPos.join('-');
    var parentNode = _p2n[parentPos];
    if (parentNode.disabled || parentNode.checkboxDisabled) return false;
    /* istanbul ignore next */
    if (parentNode.checkable === false) {
        return getCheckableParentNode(parentNode, _p2n);
    }

    return parentNode;
}
/**
 * 过滤子节点
 * @param {Array} values
 * @param {Object} _v2n
 */
function filterChildValue(values, _v2n, _p2n) {
    var newValues = [];
    values.forEach(function (value) {
        var node = getCheckableParentNode(_v2n[value], _p2n);
        if (!node || node.checkable === false || node === _v2n[value] || values.indexOf(node.value) === -1) {
            newValues.push(value);
        }
    });
    return newValues;
}

function filterParentValue(values, _v2n) {
    var newValues = [];

    for (var i = 0; i < values.length; i++) {
        var node = _v2n[values[i]];
        if (!node.children || node.children.length === 0 || node.children.every(isNodeDisabledChecked)) {
            newValues.push(values[i]);
        }
    }

    return newValues;
}

function isDescendantOrSelf(currentPos, targetPos) {
    if (!currentPos || !targetPos) {
        return false;
    }

    var currentNums = currentPos.split('-');
    var targetNums = targetPos.split('-');

    return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}

function isSiblingOrSelf(currentPos, targetPos) {
    var currentNums = currentPos.split('-').slice(0, -1);
    var targetNums = targetPos.split('-').slice(0, -1);

    return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}

// eslint-disable-next-line max-statements
function getAllCheckedValues(checkedValues, _v2n, _p2n) {
    checkedValues = utils_normalizeToArray(checkedValues);
    var filteredValues = checkedValues.filter(function (value) {
        return !!_v2n[value];
    });
    var flatValues = [].concat(filterChildValue(filteredValues, _v2n, _p2n), filteredValues.filter(function (value) {
        return _v2n[value].disabled || _v2n[value].checkboxDisabled;
    }));
    var removeValue = function removeValue(child) {
        if (child.disabled || child.checkboxDisabled) return;
        if (child.checkable === false && child.children && child.children.length > 0) {
            return child.children.forEach(removeValue);
        }
        flatValues.splice(flatValues.indexOf(child.value), 1);
    };

    var addParentValue = function addParentValue(i, parent) {
        return flatValues.splice(i, 0, parent.value);
    };

    var values = [].concat(flatValues);
    for (var i = 0; i < values.length; i++) {
        var pos = _v2n[values[i]].pos;
        var nums = pos.split('-');
        if (nums.length === 2) {
            break;
        }
        for (var j = nums.length - 2; j > 0; j--) {
            var parentPos = nums.slice(0, j + 1).join('-');
            var parent = _p2n[parentPos];
            if (parent.checkable === false || parent.disabled || parent.checkboxDisabled) continue;
            var parentChecked = parent.children.every(function (child) {
                return isNodeChecked(child, flatValues);
            });
            if (parentChecked) {
                parent.children.forEach(removeValue);
                addParentValue(i, parent);
            } else {
                break;
            }
        }
    }

    var newValues = [];
    flatValues.forEach(function (value) {
        if (_v2n[value].disabled || _v2n[value].checkboxDisabled) {
            newValues.push(value);
            return;
        }
        forEachEnableNode(_v2n[value], function (node) {
            if (node.checkable === false) return;
            newValues.push(node.value);
        });
    });

    return newValues;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/cascader/cascader.js





var cascader__class, cascader__temp;












var cascader_bindCtx = func.bindCtx;
var cascader_pickOthers = util_obj.pickOthers;
var cascader_addClass = util_dom.addClass,
    cascader_removeClass = util_dom.removeClass,
    cascader_setStyle = util_dom.setStyle,
    cascader_getStyle = util_dom.getStyle;

// 数据打平

var cascader_flatDataSource = function flatDataSource(data) {
    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
    var v2n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var p2n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    data.forEach(function (item, index) {
        var value = item.value,
            children = item.children;

        var pos = prefix + '-' + index;
        var newValue = String(value);

        item.value = newValue;

        v2n[newValue] = p2n[pos] = extends_default()({}, item, {
            pos: pos,
            _source: item
        });

        if (children && children.length) {
            flatDataSource(children, pos, v2n, p2n);
        }
    });

    return { v2n: v2n, p2n: p2n };
};

function cascader_preHandleData(data, immutable) {
    var _data = immutable ? _lodash_clonedeep_4_5_0_lodash_clonedeep_default()(data) : data;

    try {
        return cascader_flatDataSource(_data);
    } catch (err) {
        if ((err.message || '').match('Cannot assign to read only property')) {
            // eslint-disable-next-line no-console
            console.error(err.message, 'try to set immutable to true to allow immutable dataSource');
        }
        throw err;
    }
}

var cascader_getExpandedValue = function getExpandedValue(v, _v2n, _p2n) {
    if (!v || !_v2n[v]) {
        return [];
    }

    var pos = _v2n[v].pos;
    if (pos.split('-').length === 2) {
        return [];
    }

    var expandedMap = {};
    Object.keys(_p2n).forEach(function (p) {
        if (isDescendantOrSelf(p, pos) && p !== pos) {
            expandedMap[_p2n[p].value] = p;
        }
    });

    return Object.keys(expandedMap).sort(function (prev, next) {
        return expandedMap[prev].split('-').length - expandedMap[next].split('-').length;
    });
};

var normalizeValue = function normalizeValue(value) {
    if (value) {
        if (Array.isArray(value)) {
            return value;
        }

        return [value];
    }

    return [];
};

/**
 * Cascader
 */
var cascader_Cascader = (cascader__temp = cascader__class = function (_Component) {
    inherits_default()(Cascader, _Component);

    function Cascader(props, context) {
        classCallCheck_default()(this, Cascader);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        var defaultValue = props.defaultValue,
            value = props.value,
            defaultExpandedValue = props.defaultExpandedValue,
            expandedValue = props.expandedValue,
            dataSource = props.dataSource,
            multiple = props.multiple,
            checkStrictly = props.checkStrictly,
            canOnlyCheckLeaf = props.canOnlyCheckLeaf,
            loadData = props.loadData,
            immutable = props.immutable;

        var _preHandleData = cascader_preHandleData(dataSource, immutable),
            v2n = _preHandleData.v2n,
            p2n = _preHandleData.p2n;

        var normalizedValue = normalizeValue(typeof value === 'undefined' ? defaultValue : value);

        if (!loadData) {
            normalizedValue = normalizedValue.filter(function (v) {
                return v2n[v];
            });
        }

        var realExpandedValue = typeof expandedValue === 'undefined' ? typeof defaultExpandedValue === 'undefined' ? cascader_getExpandedValue(normalizedValue[0], v2n, p2n) : normalizeValue(defaultExpandedValue) : normalizeValue(expandedValue);
        var st = {
            value: normalizedValue,
            expandedValue: realExpandedValue
        };
        if (multiple && !checkStrictly && !canOnlyCheckLeaf) {
            st.value = getAllCheckedValues(st.value, v2n, p2n);
        }

        _this.lastExpandedValue = [].concat(st.expandedValue);
        _this.state = extends_default()({}, st, {
            _v2n: v2n,
            _p2n: p2n
        });

        cascader_bindCtx(_this, ['handleMouseLeave', 'handleFocus', 'handleFold', 'getCascaderNode', 'onBlur']);
        return _this;
    }

    Cascader.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var _preHandleData2 = cascader_preHandleData(props.dataSource, props.immutable),
            v2n = _preHandleData2.v2n,
            p2n = _preHandleData2.p2n;

        var states = {};

        if ('value' in props) {
            states.value = normalizeValue(props.value);
            if (!props.loadData) {
                states.value = states.value.filter(function (v) {
                    return v2n[v];
                });
            }

            var multiple = props.multiple,
                checkStrictly = props.checkStrictly,
                canOnlyCheckLeaf = props.canOnlyCheckLeaf;

            if (multiple && !checkStrictly && !canOnlyCheckLeaf) {
                states.value = getAllCheckedValues(states.value, v2n, p2n);
            }

            if (!state.expandedValue.length && !('expandedValue' in props)) {
                states.expandedValue = cascader_getExpandedValue(states.value[0], v2n, p2n);
            }
        }

        if ('expandedValue' in props) {
            states.expandedValue = normalizeValue(props.expandedValue);
        }

        return extends_default()({}, states, {
            _v2n: v2n,
            _p2n: p2n
        });
    };

    Cascader.prototype.componentDidMount = function componentDidMount() {
        this.setCascaderInnerWidth();
    };

    Cascader.prototype.componentDidUpdate = function componentDidUpdate() {
        this.setCascaderInnerWidth();
    };

    Cascader.prototype.getCascaderNode = function getCascaderNode(ref) {
        this.cascader = ref;
        if (this.cascader) {
            this.cascaderInner = this.cascader.querySelector('.' + this.props.prefix + 'cascader-inner');
        }
    };

    Cascader.prototype.setCascaderInnerWidth = function setCascaderInnerWidth() {
        if (!this.cascaderInner) {
            return;
        }
        var menus = [].slice.call(this.cascaderInner.querySelectorAll('.' + this.props.prefix + 'cascader-menu-wrapper'));
        if (menus.length === 0) {
            return;
        }

        var menusWidth = Math.ceil(menus.reduce(function (ret, menu) {
            return ret + Math.ceil(menu.getBoundingClientRect().width);
        }, 0));

        if (cascader_getStyle(this.cascaderInner, 'width') !== menusWidth) {
            cascader_setStyle(this.cascaderInner, 'width', menusWidth);
        }

        if (cascader_getStyle(this.cascader, 'display') === 'inline-block') {
            var hasRightBorderClass = this.props.prefix + 'has-right-border';
            menus.forEach(function (menu) {
                return cascader_removeClass(menu, hasRightBorderClass);
            });
            if (this.cascader.clientWidth > menusWidth) {
                cascader_addClass(menus[menus.length - 1], hasRightBorderClass);
            }
        }
    };

    /*eslint-enable*/


    Cascader.prototype.flatValue = function flatValue(value) {
        return filterChildValue(value, this.state._v2n, this.state._p2n);
    };

    Cascader.prototype.getValue = function getValue(pos) {
        return this.state._p2n[pos] ? this.state._p2n[pos].value : null;
    };

    Cascader.prototype.getPos = function getPos(value) {
        return this.state._v2n[value] ? this.state._v2n[value].pos : null;
    };

    Cascader.prototype.getData = function getData(value) {
        var _this2 = this;

        return value.map(function (v) {
            return _this2.state._v2n[v];
        });
    };

    Cascader.prototype.processValue = function processValue(value, v, checked) {
        var index = value.indexOf(v);
        if (checked && index === -1) {
            value.push(v);
        } else if (!checked && index > -1) {
            value.splice(index, 1);
        }
    };

    Cascader.prototype.handleSelect = function handleSelect(v, canExpand) {
        var _this3 = this;

        if (!(this.props.canOnlySelectLeaf && canExpand)) {
            var data = this.state._v2n[v];
            var nums = data.pos.split('-');
            var selectedPath = nums.slice(1).reduce(function (ret, num, index) {
                var p = nums.slice(0, index + 2).join('-');
                ret.push(_this3.state._p2n[p]);
                return ret;
            }, []);

            if (this.state.value[0] !== v) {
                if (!('value' in this.props)) {
                    this.setState({
                        value: [v]
                    });
                }

                if ('onChange' in this.props) {
                    this.props.onChange(v, data, {
                        selectedPath: selectedPath
                    });
                }
            }

            if ('onSelect' in this.props) {
                this.props.onSelect(v, data, {
                    selectedPath: selectedPath
                });
            }
        }

        if (canExpand) {
            if (!this.props.canOnlySelectLeaf) {
                this.lastExpandedValue = this.state.expandedValue.slice(0, -1);
            }
        } else {
            this.lastExpandedValue = [].concat(this.state.expandedValue);
        }
    };
    /*eslint-disable max-statements*/


    Cascader.prototype.handleCheck = function handleCheck(v, checked) {
        var _this4 = this;

        var _props = this.props,
            checkStrictly = _props.checkStrictly,
            canOnlyCheckLeaf = _props.canOnlyCheckLeaf;

        var value = [].concat(this.state.value);

        if (checkStrictly || canOnlyCheckLeaf) {
            this.processValue(value, v, checked);
        } else {
            var pos = this.getPos(v);

            var ps = Object.keys(this.state._p2n);

            forEachEnableNode(this.state._v2n[v], function (node) {
                if (node.checkable === false) return;
                _this4.processValue(value, node.value, checked);
            });

            var currentPos = pos;
            var nums = pos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentCheck = true;

                var parentPos = nums.slice(0, i - 1).join('-');
                if (this.state._p2n[parentPos].disabled || this.state._p2n[parentPos].checkboxDisabled || this.state._p2n[parentPos].checkable === false) {
                    currentPos = parentPos;
                    continue;
                }

                var parentValue = this.state._p2n[parentPos].value;
                var parentChecked = value.indexOf(parentValue) > -1;
                if (!checked && !parentChecked) {
                    break;
                }

                for (var j = 0; j < ps.length; j++) {
                    var p = ps[j];
                    var pnode = this.state._p2n[p];
                    if (isSiblingOrSelf(currentPos, p) && !pnode.disabled && !pnode.checkboxDisabled) {
                        var k = pnode.value;
                        // eslint-disable-next-line max-depth
                        if (pnode.checkable === false) {
                            // eslint-disable-next-line max-depth
                            if (!pnode.children || pnode.children.length === 0) {
                                continue;
                            }
                            // eslint-disable-next-line max-depth
                            for (var m = 0; m < pnode.children.length; m++) {
                                // eslint-disable-next-line max-depth
                                if (!pnode.children.every(function (child) {
                                    return isNodeChecked(child, value);
                                })) {
                                    parentCheck = false;
                                    break;
                                }
                            }
                        } else if (value.indexOf(k) === -1) {
                            parentCheck = false;
                        }

                        if (!parentCheck) break;
                    }
                }

                this.processValue(value, parentValue, parentCheck);

                currentPos = parentPos;
            }
        }

        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        if ('onChange' in this.props) {
            if (checkStrictly || canOnlyCheckLeaf) {
                var data = this.getData(value);
                this.props.onChange(value, data, {
                    checked: checked,
                    currentData: this.state._v2n[v],
                    checkedData: data
                });
            } else {
                var flatValue = this.flatValue(value);
                var flatData = this.getData(flatValue);
                var checkedData = this.getData(value);
                var indeterminateValue = this.getIndeterminate(value);
                var indeterminateData = this.getData(indeterminateValue);
                this.props.onChange(flatValue, flatData, {
                    checked: checked,
                    currentData: this.state._v2n[v],
                    checkedData: checkedData,
                    indeterminateData: indeterminateData
                });
            }
        }

        this.lastExpandedValue = [].concat(this.state.expandedValue);
    };

    Cascader.prototype.handleExpand = function handleExpand(value, level, canExpand, focusedFirstChild) {
        var _this5 = this;

        var expandedValue = this.state.expandedValue;


        if (canExpand || expandedValue.length > level) {
            if (canExpand) {
                expandedValue.splice(level, expandedValue.length - level, value);
            } else {
                expandedValue.splice(level);
            }

            var callback = function callback() {
                _this5.setExpandValue(expandedValue);

                if (focusedFirstChild) {
                    var endExpandedValue = expandedValue[expandedValue.length - 1];
                    _this5.setState({
                        focusedValue: _this5.state._v2n[endExpandedValue].children[0].value
                    });
                }
            };

            var loadData = this.props.loadData;

            if (canExpand && loadData) {
                var data = this.state._v2n[value];
                return loadData(data, data._source).then(callback);
            } else {
                return callback();
            }
        }
    };

    Cascader.prototype.handleMouseLeave = function handleMouseLeave() {
        this.setExpandValue([].concat(this.lastExpandedValue));
    };

    Cascader.prototype.setExpandValue = function setExpandValue(expandedValue) {
        if (!('expandedValue' in this.props)) {
            this.setState({
                expandedValue: expandedValue
            });
        }

        if ('onExpand' in this.props) {
            this.props.onExpand(expandedValue);
        }
    };

    Cascader.prototype.getFirstFocusKeyByDataSource = function getFirstFocusKeyByDataSource(dataSource) {
        if (!dataSource || dataSource.length === 0) {
            return '';
        }

        for (var i = 0; i < dataSource.length; i++) {
            if (dataSource[i] && !dataSource[i].disabled) {
                return dataSource[i].value;
            }
        }

        return '';
    };

    Cascader.prototype.getFirstFocusKeyByFilteredPaths = function getFirstFocusKeyByFilteredPaths(filteredPaths) {
        if (!filteredPaths || filteredPaths.length === 0) {
            return '';
        }

        for (var i = 0; i < filteredPaths.length; i++) {
            var path = filteredPaths[i];
            if (!path.some(function (item) {
                return item.disabled;
            })) {
                var lastItem = path[path.length - 1];
                return lastItem.value;
            }
        }

        return '';
    };

    Cascader.prototype.getFirstFocusKey = function getFirstFocusKey() {
        var _props2 = this.props,
            dataSource = _props2.dataSource,
            searchValue = _props2.searchValue,
            filteredPaths = _props2.filteredPaths;


        return !searchValue ? this.getFirstFocusKeyByDataSource(dataSource) : this.getFirstFocusKeyByFilteredPaths(filteredPaths);
    };

    Cascader.prototype.setFocusValue = function setFocusValue() {
        this.setState({
            focusedValue: this.getFirstFocusKey()
        });
    };

    Cascader.prototype.handleFocus = function handleFocus(focusedValue) {
        this.setState({
            focusedValue: focusedValue
        });
    };

    Cascader.prototype.handleFold = function handleFold() {
        var expandedValue = this.state.expandedValue;

        if (expandedValue.length > 0) {
            this.setExpandValue(expandedValue.slice(0, -1));
        }

        this.setState({
            focusedValue: expandedValue[expandedValue.length - 1]
        });
    };

    Cascader.prototype.getIndeterminate = function getIndeterminate(value) {
        var _this6 = this;

        var indeterminateValues = [];

        var poss = filterChildValue(value.filter(function (v) {
            return !!_this6.state._v2n[v];
        }).filter(function (v) {
            return !_this6.state._v2n[v].disabled && !_this6.state._v2n[v].checkboxDisabled && _this6.state._v2n[v].checkable !== false;
        }), this.state._v2n, this.state._p2n).map(function (v) {
            return _this6.state._v2n[v].pos;
        });
        poss.forEach(function (pos) {
            var nums = pos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentPos = nums.slice(0, i - 1).join('-');
                var parent = _this6.state._p2n[parentPos];
                if (parent.disabled || parent.checkboxDisabled) break;
                var parentValue = parent.value;
                if (indeterminateValues.indexOf(parentValue) === -1) {
                    indeterminateValues.push(parentValue);
                }
            }
        });

        return indeterminateValues;
    };

    Cascader.prototype.onBlur = function onBlur(e) {
        this.setState({
            focusedValue: undefined
        });

        this.props.onBlur && this.props.onBlur(e);
    };

    Cascader.prototype.renderMenu = function renderMenu(data, level) {
        var _this7 = this;

        var _props3 = this.props,
            prefix = _props3.prefix,
            multiple = _props3.multiple,
            useVirtual = _props3.useVirtual,
            checkStrictly = _props3.checkStrictly,
            expandTriggerType = _props3.expandTriggerType,
            loadData = _props3.loadData,
            canOnlyCheckLeaf = _props3.canOnlyCheckLeaf,
            listClassName = _props3.listClassName,
            listStyle = _props3.listStyle,
            itemRender = _props3.itemRender;
        var _state = this.state,
            value = _state.value,
            expandedValue = _state.expandedValue,
            focusedValue = _state.focusedValue;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            menu_CascaderMenu,
            {
                key: level,
                prefix: prefix,
                useVirtual: useVirtual,
                className: listClassName,
                style: listStyle,
                ref: this.saveMenuRef,
                focusedKey: focusedValue,
                onItemFocus: this.handleFocus,
                onBlur: this.onBlur
            },
            data.map(function (item) {
                var disabled = !!item.disabled;
                var canExpand = !!item.children && !!item.children.length || !!loadData && !item.isLeaf;
                var expanded = expandedValue[level] === item.value;
                var props = {
                    prefix: prefix,
                    disabled: disabled,
                    canExpand: canExpand,
                    expanded: expanded,
                    expandTriggerType: expandTriggerType,
                    onExpand: _this7.handleExpand.bind(_this7, item.value, level, canExpand),
                    onFold: _this7.handleFold
                };

                if ('title' in item) {
                    props.title = item.title;
                }

                if (multiple) {
                    props.checkable = !(canOnlyCheckLeaf && canExpand);
                    props.checked = value.indexOf(item.value) > -1 || !!item.checked;
                    props.indeterminate = (checkStrictly || canOnlyCheckLeaf ? false : _this7.indeterminate.indexOf(item.value) > -1) || !!item.indeterminate;
                    props.checkboxDisabled = !!item.checkboxDisabled;
                    props.onCheck = _this7.handleCheck.bind(_this7, item.value);
                } else {
                    props.selected = value[0] === item.value;
                    props.onSelect = _this7.handleSelect.bind(_this7, item.value, canExpand);
                }

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    item_CascaderMenuItem,
                    extends_default()({ key: item.value }, props),
                    itemRender(item)
                );
            })
        );
    };

    Cascader.prototype.renderMenus = function renderMenus() {
        var dataSource = this.props.dataSource;
        var expandedValue = this.state.expandedValue;


        var menus = [];
        var data = dataSource;

        for (var i = 0; i <= expandedValue.length; i++) {
            if (!data) {
                break;
            }

            menus.push(this.renderMenu(data, i));

            var expandedItem = void 0;
            for (var j = 0; j < data.length; j++) {
                if (data[j].value === expandedValue[i]) {
                    expandedItem = data[j];
                    break;
                }
            }
            data = expandedItem ? expandedItem.children : null;
        }

        return menus;
    };

    Cascader.prototype.renderFilteredItem = function renderFilteredItem(path) {
        var _props4 = this.props,
            prefix = _props4.prefix,
            resultRender = _props4.resultRender,
            searchValue = _props4.searchValue,
            multiple = _props4.multiple;
        var value = this.state.value;

        var lastItem = path[path.length - 1];

        var Item = void 0;
        var props = {
            key: lastItem.value,
            className: prefix + 'cascader-filtered-item',
            disabled: path.some(function (item) {
                return item.disabled;
            }),
            children: resultRender(searchValue, path)
        };

        if (multiple) {
            Item = es_menu.CheckboxItem;
            var _props5 = this.props,
                checkStrictly = _props5.checkStrictly,
                canOnlyCheckLeaf = _props5.canOnlyCheckLeaf;

            props.checked = value.indexOf(lastItem.value) > -1;
            props.indeterminate = !checkStrictly && !canOnlyCheckLeaf && this.indeterminate.indexOf(lastItem.value) > -1;
            props.checkboxDisabled = lastItem.checkboxDisabled;
            props.onChange = this.handleCheck.bind(this, lastItem.value);
        } else {
            Item = es_menu.Item;
            props.selected = value[0] === lastItem.value;
            props.onSelect = this.handleSelect.bind(this, lastItem.value, false);
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Item, props);
    };

    Cascader.prototype.renderFilteredList = function renderFilteredList() {
        var _this8 = this;

        var _props6 = this.props,
            prefix = _props6.prefix,
            filteredListStyle = _props6.filteredListStyle,
            filteredPaths = _props6.filteredPaths,
            _props6$focusable = _props6.focusable,
            focusable = _props6$focusable === undefined ? false : _props6$focusable;
        var focusedValue = this.state.focusedValue;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu
            // 如果不设置为false， CascaderSelect 开启 showSearch后，弹窗展开时，光标无法到input上去，也无法输入.
            // TODO: set focusable=true in 2.x
            ,
            { focusable: focusable,
                focusedKey: focusedValue,
                onItemFocus: this.handleFocus,
                className: prefix + 'cascader-filtered-list',
                style: filteredListStyle
            },
            filteredPaths.map(function (path) {
                return _this8.renderFilteredItem(path);
            })
        );
    };

    Cascader.prototype.render = function render() {
        var _cx;

        var _props7 = this.props,
            prefix = _props7.prefix,
            rtl = _props7.rtl,
            className = _props7.className,
            expandTriggerType = _props7.expandTriggerType,
            multiple = _props7.multiple,
            dataSource = _props7.dataSource,
            checkStrictly = _props7.checkStrictly,
            canOnlyCheckLeaf = _props7.canOnlyCheckLeaf,
            searchValue = _props7.searchValue;

        var others = cascader_pickOthers(Object.keys(Cascader.propTypes), this.props);
        var value = this.state.value;


        if (rtl) {
            others.dir = 'rtl';
        }

        var props = extends_default()({
            className: _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'cascader'] = true, _cx.multiple = multiple, _cx[className] = !!className, _cx)),
            ref: 'cascader'
        }, others);
        if (expandTriggerType === 'hover') {
            props.onMouseLeave = this.handleMouseLeave;
        }

        if (multiple && !checkStrictly && !canOnlyCheckLeaf) {
            this.indeterminate = this.getIndeterminate(value);
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, props, { ref: this.getCascaderNode }),
            !searchValue ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'cascader-inner' },
                dataSource && dataSource.length ? this.renderMenus() : null
            ) : this.renderFilteredList()
        );
    };

    return Cascader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), cascader__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 数据源，结构可参考下方说明
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object),
    /**
     * （非受控）默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string)]),
    /**
     * （受控）当前值
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string)]),
    /**
     * 选中值改变时触发的回调函数
     * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组
     * @param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点
     * @param {Object} extra 额外参数
     * @param {Array} extra.selectedPath 单选时选中的数据的路径
     * @param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中
     * @param {Object} extra.currentData 多选时当前操作的数据
     * @param {Array} extra.checkedData 多选时所有被选中的数据
     * @param {Array} extra.indeterminateData 多选时半选的数据
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * （非受控）默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置
     */
    defaultExpandedValue: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * （受控）当前展开值
     */
    expandedValue: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 展开触发的方式
     */
    expandTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 展开时触发的回调函数
     * @param {Array} expandedValue 各列展开值的数组
     */
    onExpand: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否多选
     */
    multiple: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 单选时是否只能选中叶子节点
     */
    canOnlySelectLeaf: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 多选时是否只能选中叶子节点
     */
    canOnlyCheckLeaf: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 父子节点是否选中不关联
     */
    checkStrictly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 每列列表样式对象
     */
    listStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 每列列表类名
     */
    listClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 每列列表项渲染函数
     * @param {Object} data 数据
     * @return {ReactNode} 列表项内容
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 异步加载数据函数
     * @param {Object} data 当前点击异步加载的数据
     * @param {Object} source 当前点击数据，source是原始对象
     */
    loadData: _prop_types_15_8_1_prop_types_default.a.func,
    searchValue: _prop_types_15_8_1_prop_types_default.a.string,
    onBlur: _prop_types_15_8_1_prop_types_default.a.func,
    filteredPaths: _prop_types_15_8_1_prop_types_default.a.array,
    filteredListStyle: _prop_types_15_8_1_prop_types_default.a.object,
    resultRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否是不可变数据
     * @version 1.23
     */
    immutable: _prop_types_15_8_1_prop_types_default.a.bool
}, cascader__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    pure: false,
    dataSource: [],
    defaultValue: null,
    canOnlySelectLeaf: false,
    canOnlyCheckLeaf: false,
    expandTriggerType: 'click',
    multiple: false,
    useVirtual: false,
    checkStrictly: false,
    itemRender: function itemRender(item) {
        return item.label;
    },
    immutable: false
}, cascader__temp);
cascader_Cascader.displayName = 'Cascader';


/* harmony default export */ var cascader = (Object(react_lifecycles_compat_es["polyfill"])(cascader_Cascader));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/cascader/index.js





/* harmony default export */ var es_cascader = (config_provider.config(cascader, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('expandTrigger' in props) {
            deprecated('expandTrigger', 'expandTriggerType', 'Cascader');

            var _props = props,
                expandTrigger = _props.expandTrigger,
                others = objectWithoutProperties_default()(_props, ['expandTrigger']);

            props = extends_default()({ expandTriggerType: expandTrigger }, others);
        }

        if ('showItemCount' in props) {
            deprecated('showItemCount', 'listStyle | listClassName', 'Cascader');
        }
        if ('labelWidth' in props) {
            deprecated('labelWidth', 'listStyle | listClassName', 'Cascader');
        }

        return props;
    },
    exportNames: ['setFocusValue']
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/cascader-select/cascader-select.js





var cascader_select__class, cascader_select__temp;










var cascader_select_bindCtx = func.bindCtx;
var cascader_select_pickOthers = util_obj.pickOthers;
var cascader_select_getStyle = util_dom.getStyle;


var cascader_select_normalizeValue = function normalizeValue(value) {
    if (value) {
        if (Array.isArray(value)) {
            return value;
        }

        return [value];
    }

    return [];
};

/**
 * CascaderSelect
 */
var cascader_select_CascaderSelect = (cascader_select__temp = cascader_select__class = function (_Component) {
    inherits_default()(CascaderSelect, _Component);

    function CascaderSelect(props) {
        classCallCheck_default()(this, CascaderSelect);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.refreshValueDataCache = function (curValue) {
            if (curValue) {
                var valueArr = Array.isArray(curValue) ? curValue : [curValue];

                valueArr.length && Object.keys(_this._valueDataCache).forEach(function (v) {
                    if (!valueArr.includes(v)) {
                        delete _this._valueDataCache[v];
                    }
                });
            } else {
                _this._valueDataCache = {};
            }
        };

        _this.state = {
            value: cascader_select_normalizeValue('value' in props ? props.value : props.defaultValue),
            searchValue: '',
            visible: typeof props.visible === 'undefined' ? props.defaultVisible : props.visible
        };

        // 缓存选中值数据
        _this._valueDataCache = {};

        cascader_select_bindCtx(_this, ['handleVisibleChange', 'handleAfterOpen', 'handleSelect', 'handleChange', 'handleClear', 'handleRemove', 'handleSearch', 'getPopup', 'saveSelectRef', 'saveCascaderRef', 'handleKeyDown']);
        return _this;
    }

    CascaderSelect.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var st = {};

        if ('value' in props) {
            st.value = cascader_select_normalizeValue(props.value);
        }
        if ('visible' in props) {
            st.visible = props.visible;
        }

        return st;
    };

    CascaderSelect.prototype.updateCache = function updateCache(dataSource) {
        var _this2 = this;

        this._v2n = {};
        this._p2n = {};
        var loop = function loop(data) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
            return data.forEach(function (item, index) {
                var value = item.value,
                    children = item.children;

                var pos = prefix + '-' + index;
                _this2._v2n[value] = _this2._p2n[pos] = extends_default()({}, item, { pos: pos });

                if (children && children.length) {
                    loop(children, pos);
                }
            });
        };

        loop(dataSource);
    };

    CascaderSelect.prototype.flatValue = function flatValue(value) {
        var _this3 = this;

        var getDepth = function getDepth(v) {
            var pos = _this3.getPos(v);
            if (!pos) {
                return 0;
            }
            return pos.split('-').length;
        };
        var newValue = value.slice(0).sort(function (prev, next) {
            return getDepth(prev) - getDepth(next);
        });

        for (var i = 0; i < newValue.length; i++) {
            for (var j = 0; j < newValue.length; j++) {
                if (i !== j && this.isDescendantOrSelf(this.getPos(newValue[i]), this.getPos(newValue[j]))) {
                    newValue.splice(j, 1);
                    j--;
                }
            }
        }

        return newValue;
    };

    CascaderSelect.prototype.isDescendantOrSelf = function isDescendantOrSelf(currentPos, targetPos) {
        if (!currentPos || !targetPos) {
            return false;
        }

        var currentNums = currentPos.split('-');
        var targetNums = targetPos.split('-');

        return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {
            return num === targetNums[index];
        });
    };

    CascaderSelect.prototype.getValue = function getValue(pos) {
        return this._p2n[pos] ? this._p2n[pos].value : null;
    };

    CascaderSelect.prototype.getPos = function getPos(value) {
        return this._v2n[value] ? this._v2n[value].pos : null;
    };

    CascaderSelect.prototype.getData = function getData(value) {
        var _this4 = this;

        return value.map(function (v) {
            return _this4._v2n[v] || _this4._valueDataCache[v];
        });
    };

    CascaderSelect.prototype.getLabelPath = function getLabelPath(data) {
        var _this5 = this;

        var nums = data.pos.split('-');
        return nums.slice(1).reduce(function (ret, num, index) {
            var p = nums.slice(0, index + 2).join('-');
            ret.push(_this5._p2n[p].label);
            return ret;
        }, []);
    };

    CascaderSelect.prototype.getSingleData = function getSingleData(value) {
        if (!value.length) {
            return null;
        }

        if (Array.isArray(value)) value = value[0];

        var data = this._v2n[value];

        if (data) {
            var labelPath = this.getLabelPath(data);
            var displayRender = this.props.displayRender || function (labels) {
                return labels.join(' / ');
            };

            data = extends_default()({}, data, {
                label: displayRender(labelPath, data)
            });

            this._valueDataCache[value] = data;
            this.refreshValueDataCache(value);
        } else {
            data = this._valueDataCache[value];
        }

        return data || {
            value: value
        };
    };

    CascaderSelect.prototype.getMultipleData = function getMultipleData(value) {
        var _this6 = this;

        if (!value.length) {
            return null;
        }

        var _props = this.props,
            checkStrictly = _props.checkStrictly,
            canOnlyCheckLeaf = _props.canOnlyCheckLeaf,
            displayRender = _props.displayRender;

        var flatValue = checkStrictly || canOnlyCheckLeaf ? value : this.flatValue(value);
        var data = flatValue.map(function (v) {
            var item = _this6._v2n[v];

            if (item) {
                _this6._valueDataCache[v] = item;
            } else {
                item = _this6._valueDataCache[v];
            }

            return item || { value: v };
        });

        if (displayRender) {
            data = data.map(function (item) {
                if (!item.pos || !(item.value in _this6._v2n)) {
                    return item;
                }

                var labelPath = _this6.getLabelPath(item);
                var newItem = extends_default()({}, item, {
                    label: displayRender(labelPath, item)
                });

                _this6._valueDataCache[item.value] = newItem;

                return newItem;
            });
        }

        return data;
    };

    CascaderSelect.prototype.getIndeterminate = function getIndeterminate(value) {
        var _this7 = this;

        var indeterminate = [];

        var positions = value.map(this.getPos.bind(this));
        positions.forEach(function (pos) {
            if (!pos) {
                return false;
            }
            var nums = pos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentPos = nums.slice(0, i - 1).join('-');
                var parentValue = _this7.getValue(parentPos);
                if (indeterminate.indexOf(parentValue) === -1) {
                    indeterminate.push(parentValue);
                }
            }
        });

        return indeterminate;
    };

    CascaderSelect.prototype.saveSelectRef = function saveSelectRef(ref) {
        this.select = ref;
    };

    CascaderSelect.prototype.saveCascaderRef = function saveCascaderRef(ref) {
        this.cascader = ref;
    };

    CascaderSelect.prototype.completeValue = function completeValue(value) {
        var newValue = [];

        var flatValue = this.flatValue(value).reverse();
        var ps = Object.keys(this._p2n);
        for (var i = 0; i < ps.length; i++) {
            for (var j = 0; j < flatValue.length; j++) {
                var v = flatValue[j];
                if (this.isDescendantOrSelf(this.getPos(v), ps[i])) {
                    newValue.push(this.getValue(ps[i]));
                    ps.splice(i, 1);
                    i--;
                    break;
                }
            }
        }

        return newValue;
    };

    CascaderSelect.prototype.isLeaf = function isLeaf(data) {
        return !(data.children && data.children.length || !!this.props.loadData && !data.isLeaf);
    };

    CascaderSelect.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        var _this8 = this;

        var searchValue = this.state.searchValue;

        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        if (!visible && searchValue) {
            this.setState({
                searchValue: ''
            });
        }

        if (['fromCascader', 'keyboard'].indexOf(type) !== -1 && !visible) {
            // 这里需要延迟下，showSearch 的情况下通过手动设置 menuProps={{focusable: true}} 回车 focus 会有延迟
            setTimeout(function () {
                return _this8.select.focusInput();
            }, 0);
        }

        this.props.onVisibleChange(visible, type);
    };

    CascaderSelect.prototype.handleKeyDown = function handleKeyDown(e) {
        var onKeyDown = this.props.onKeyDown;
        var visible = this.state.visible;


        if (onKeyDown) {
            onKeyDown(e);
        }

        if (!visible) {
            return;
        }

        switch (e.keyCode) {
            case KEYCODE.UP:
            case KEYCODE.DOWN:
                this.cascader.setFocusValue();
                e.preventDefault();
                break;
            default:
                break;
        }
    };

    CascaderSelect.prototype.getPopup = function getPopup(ref) {
        this.popup = ref;
        if (typeof this.props.popupProps.ref === 'function') {
            this.props.popupProps.ref(ref);
        }
    };

    CascaderSelect.prototype.handleAfterOpen = function handleAfterOpen() {
        if (!this.popup) {
            return;
        }

        var _props2 = this.props,
            prefix = _props2.prefix,
            popupProps = _props2.popupProps;

        var dropDownNode = this.popup.getInstance().overlay.getInstance().getContentNode();
        var cascaderNode = dropDownNode.querySelector('.' + prefix + 'cascader');
        if (cascaderNode) {
            this.cascaderHeight = cascader_select_getStyle(cascaderNode, 'height');
        }

        if (typeof popupProps.afterOpen === 'function') {
            popupProps.afterOpen();
        }
    };

    CascaderSelect.prototype.handleSelect = function handleSelect(value, data) {
        var _props3 = this.props,
            multiple = _props3.multiple,
            changeOnSelect = _props3.changeOnSelect;
        var _state = this.state,
            visible = _state.visible,
            searchValue = _state.searchValue;


        if (!multiple && (!changeOnSelect || this.isLeaf(data) || !!searchValue)) {
            this.handleVisibleChange(!visible, 'fromCascader');
        }
    };

    /**
     * 刷新值数据缓存，删除无效值
     * @param {Arrary | String} curValue 当前值
     */


    CascaderSelect.prototype.handleChange = function handleChange(value, data, extra) {
        var _this9 = this;

        var _props4 = this.props,
            multiple = _props4.multiple,
            onChange = _props4.onChange;
        var _state2 = this.state,
            searchValue = _state2.searchValue,
            stateValue = _state2.value;


        var st = {};

        if (multiple && stateValue && Array.isArray(stateValue)) {
            var noExistedValues = stateValue.filter(function (v) {
                return !_this9._v2n[v];
            });

            value = [].concat(noExistedValues, value);
            // onChange 中的 data 参数也应该保留不存在的 value 的数据
            // 在 dataSource 异步加载的情况下，会出现value重复的现象，需要去重
            data = [].concat(noExistedValues.map(function (v) {
                return _this9._valueDataCache[v];
            }).filter(function (v) {
                return v;
            }), data).filter(function (current, index, arr) {
                return index === arr.indexOf(current);
            });
            // 更新缓存
            this.refreshValueDataCache(value);
        }

        if (!('value' in this.props)) {
            st.value = value;
        }
        if (!multiple && searchValue) {
            st.searchValue = '';
        }
        if (Object.keys(st).length) {
            this.setState(st);
        }

        if (onChange) {
            onChange(value, data, extra);
        }

        if (searchValue && this.select) {
            this.select.handleSearchClear();
        }
    };

    CascaderSelect.prototype.handleClear = function handleClear() {
        // 单选时点击清空按钮
        var _props5 = this.props,
            hasClear = _props5.hasClear,
            multiple = _props5.multiple,
            treeCheckable = _props5.treeCheckable;

        if (hasClear && (!multiple || !treeCheckable)) {
            if (!('value' in this.props)) {
                this.setState({
                    value: []
                });
            }

            this.props.onChange(null, null);
        }
    };

    CascaderSelect.prototype.handleRemove = function handleRemove(currentData) {
        var currentValue = currentData.value;

        var value = void 0;

        var _props6 = this.props,
            multiple = _props6.multiple,
            checkStrictly = _props6.checkStrictly,
            onChange = _props6.onChange;

        if (multiple) {
            value = [].concat(this.state.value);
            value.splice(value.indexOf(currentValue), 1);

            if (this.props.onChange) {
                var data = this.getData(value);
                var checked = false;

                if (checkStrictly) {
                    this.props.onChange(value, data, {
                        checked: checked,
                        currentData: currentData,
                        checkedData: data
                    });
                } else {
                    var checkedValue = this.completeValue(value);
                    var checkedData = this.getData(checkedValue);
                    var indeterminateValue = this.getIndeterminate(value);
                    var indeterminateData = this.getData(indeterminateValue);
                    this.props.onChange(value, data, {
                        checked: checked,
                        currentData: currentData,
                        checkedData: checkedData,
                        indeterminateData: indeterminateData
                    });
                }
            }
        } else {
            value = [];
            onChange(null, null);
        }

        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        this.refreshValueDataCache(value);
    };

    CascaderSelect.prototype.handleSearch = function handleSearch(searchValue) {
        this.setState({
            searchValue: searchValue
        });

        this.props.onSearch && this.props.onSearch(searchValue);
    };

    CascaderSelect.prototype.getPath = function getPath(pos) {
        var items = [];

        var nums = pos.split('-');
        if (nums === 2) {
            items.push(this._p2n[pos]);
        } else {
            for (var i = 1; i < nums.length; i++) {
                var p = nums.slice(0, i + 1).join('-');
                items.push(this._p2n[p]);
            }
        }

        return items;
    };

    CascaderSelect.prototype.filterItems = function filterItems() {
        var _this10 = this;

        var _props7 = this.props,
            multiple = _props7.multiple,
            changeOnSelect = _props7.changeOnSelect,
            canOnlyCheckLeaf = _props7.canOnlyCheckLeaf,
            filter = _props7.filter;
        var searchValue = this.state.searchValue;

        var items = Object.keys(this._p2n).map(function (p) {
            return _this10._p2n[p];
        });
        if (!multiple && !changeOnSelect || multiple && canOnlyCheckLeaf) {
            items = items.filter(function (item) {
                return !item.children || !item.children.length;
            });
        }

        return items.map(function (item) {
            return _this10.getPath(item.pos);
        }).filter(function (path) {
            return filter(searchValue, path);
        });
    };

    CascaderSelect.prototype.renderNotFound = function renderNotFound() {
        var _props8 = this.props,
            prefix = _props8.prefix,
            notFoundContent = _props8.notFoundContent;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu,
            { className: prefix + 'cascader-select-not-found' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_menu.Item,
                null,
                notFoundContent
            )
        );
    };

    CascaderSelect.prototype.renderCascader = function renderCascader() {
        var dataSource = this.props.dataSource;

        if (dataSource.length === 0) {
            return this.renderNotFound();
        }

        var searchValue = this.state.searchValue;

        var filteredPaths = [];

        if (searchValue) {
            filteredPaths = this.filterItems();
            if (filteredPaths.length === 0) {
                return this.renderNotFound();
            }
        }

        var _props9 = this.props,
            multiple = _props9.multiple,
            useVirtual = _props9.useVirtual,
            changeOnSelect = _props9.changeOnSelect,
            checkStrictly = _props9.checkStrictly,
            canOnlyCheckLeaf = _props9.canOnlyCheckLeaf,
            defaultExpandedValue = _props9.defaultExpandedValue,
            expandTriggerType = _props9.expandTriggerType,
            onExpand = _props9.onExpand,
            listStyle = _props9.listStyle,
            listClassName = _props9.listClassName,
            loadData = _props9.loadData,
            showSearch = _props9.showSearch,
            resultRender = _props9.resultRender,
            readOnly = _props9.readOnly,
            itemRender = _props9.itemRender,
            immutable = _props9.immutable,
            _props9$menuProps = _props9.menuProps,
            menuProps = _props9$menuProps === undefined ? {} : _props9$menuProps;
        var value = this.state.value;


        var props = {
            dataSource: dataSource,
            value: value,
            multiple: multiple,
            useVirtual: useVirtual,
            canOnlySelectLeaf: !changeOnSelect,
            checkStrictly: checkStrictly,
            canOnlyCheckLeaf: canOnlyCheckLeaf,
            defaultExpandedValue: defaultExpandedValue,
            expandTriggerType: expandTriggerType,
            ref: this.saveCascaderRef,
            onExpand: onExpand,
            listStyle: listStyle,
            listClassName: listClassName,
            loadData: loadData,
            itemRender: itemRender,
            immutable: immutable
        };

        if ('expandedValue' in this.props) {
            props.expandedValue = this.props.expandedValue;
        }

        if (!readOnly) {
            props.onChange = this.handleChange;
            props.onSelect = this.handleSelect;
        }
        if (showSearch) {
            props.searchValue = searchValue;
            props.filteredPaths = filteredPaths;
            props.resultRender = resultRender;
            props.filteredListStyle = { height: this.cascaderHeight };
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_cascader, extends_default()({}, props, menuProps));
    };

    CascaderSelect.prototype.renderPopupContent = function renderPopupContent() {
        var _props10 = this.props,
            prefix = _props10.prefix,
            header = _props10.header,
            footer = _props10.footer;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'cascader-select-dropdown' },
            header,
            this.renderCascader(),
            footer
        );
    };

    CascaderSelect.prototype.renderPreview = function renderPreview(others) {
        var _props11 = this.props,
            prefix = _props11.prefix,
            multiple = _props11.multiple,
            className = _props11.className,
            renderPreview = _props11.renderPreview;
        var value = this.state.value;

        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');
        var items = (multiple ? this.getMultipleData(value) : this.getSingleData(value)) || [];

        if (!Array.isArray(items)) {
            items = [items];
        }

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(items, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            items.map(function (_ref) {
                var label = _ref.label;
                return label;
            }).join(', ')
        );
    };

    CascaderSelect.prototype.render = function render() {
        var _props12 = this.props,
            prefix = _props12.prefix,
            size = _props12.size,
            hasArrow = _props12.hasArrow,
            hasBorder = _props12.hasBorder,
            hasClear = _props12.hasClear,
            label = _props12.label,
            readOnly = _props12.readOnly,
            placeholder = _props12.placeholder,
            dataSource = _props12.dataSource,
            disabled = _props12.disabled,
            multiple = _props12.multiple,
            className = _props12.className,
            showSearch = _props12.showSearch,
            popupStyle = _props12.popupStyle,
            popupClassName = _props12.popupClassName,
            popupContainer = _props12.popupContainer,
            popupProps = _props12.popupProps,
            followTrigger = _props12.followTrigger,
            isPreview = _props12.isPreview,
            resultAutoWidth = _props12.resultAutoWidth;
        var _state3 = this.state,
            value = _state3.value,
            searchValue = _state3.searchValue,
            visible = _state3.visible;

        var others = cascader_select_pickOthers(Object.keys(CascaderSelect.propTypes), this.props);

        this.updateCache(dataSource);

        if (isPreview) {
            return this.renderPreview(others);
        }

        var popupContent = this.renderPopupContent();

        var props = {
            prefix: prefix,
            className: className,
            size: size,
            placeholder: placeholder,
            disabled: disabled,
            hasArrow: hasArrow,
            hasBorder: hasBorder,
            hasClear: hasClear,
            label: label,
            readOnly: readOnly,
            ref: this.saveSelectRef,
            autoWidth: false,
            mode: multiple ? 'multiple' : 'single',
            value: multiple ? this.getMultipleData(value) : this.getSingleData(value),
            onChange: this.handleClear,
            onRemove: this.handleRemove,
            visible: visible,
            onVisibleChange: this.handleVisibleChange,
            showSearch: showSearch,
            onSearch: this.handleSearch,
            onKeyDown: this.handleKeyDown,
            popupContent: popupContent,
            popupStyle: popupStyle,
            popupClassName: popupClassName,
            popupContainer: popupContainer,
            popupProps: popupProps,
            followTrigger: followTrigger
        };

        if (showSearch) {
            props.popupProps = extends_default()({}, popupProps, {
                ref: this.getPopup,
                afterOpen: this.handleAfterOpen
            });
            props.autoWidth = resultAutoWidth && !!searchValue;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_select, extends_default()({}, props, others));
    };

    return CascaderSelect;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), cascader_select__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选择框大小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 选择框占位符
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有下拉箭头
     */
    hasArrow: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有边框
     */
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有清除按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义内联 label
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否只读，只读模式下可以展开弹层但不能选
     */
    readOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 数据源，结构可参考下方说明
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object),
    /**
     * （非受控）默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string)]),
    /**
     * （受控）当前值
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string)]),
    /**
     * 选中值改变时触发的回调函数
     * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组
     * @param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点
     * @param {Object} extra 额外参数
     * @param {Array} extra.selectedPath 单选时选中的数据的路径
     * @param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中
     * @param {Object} extra.currentData 多选时当前操作的数据
     * @param {Array} extra.checkedData 多选时所有被选中的数据
     * @param {Array} extra.indeterminateData 多选时半选的数据
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置
     */
    defaultExpandedValue: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * （受控）当前展开值
     */
    expandedValue: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 展开触发的方式
     */
    expandTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    onExpand: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否多选
     */
    multiple: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否选中即发生改变, 该属性仅在单选模式下有效
     */
    changeOnSelect: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否只能勾选叶子项的checkbox，该属性仅在多选模式下有效
     */
    canOnlyCheckLeaf: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 父子节点是否选中不关联
     */
    checkStrictly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 每列列表样式对象
     */
    listStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 每列列表类名
     */
    listClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选择框单选时展示结果的自定义渲染函数
     * @param {Array} label 选中路径的文本数组
     * @return {ReactNode} 渲染在选择框中的内容
     * @default 单选时：labelPath => labelPath.join(' / ')；多选时：labelPath => labelPath[labelPath.length - 1]
     */
    displayRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 渲染 item 内容的方法
     * @param {Object} item 渲染节点的item
     * @return {ReactNode} item node
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否显示搜索框
     */
    showSearch: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义搜索函数
     * @param {String} searchValue 搜索的关键字
     * @param {Array} path 节点路径
     * @return {Boolean} 是否匹配
     * @default 根据路径所有节点的文本值模糊匹配
     */
    filter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 当搜索框值变化时回调
     * @param {String} value 数据
     * @version 1.23
     */
    onSearch: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 搜索结果自定义渲染函数
     * @param {String} searchValue 搜索的关键字
     * @param {Array} path 匹配到的节点路径
     * @return {ReactNode} 渲染的内容
     * @default 按照节点文本 a / b / c 的模式渲染
     */
    resultRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 搜索结果列表是否和选择框等宽
     */
    resultAutoWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 无数据时显示内容
     */
    notFoundContent: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 异步加载数据函数
     * @param {Object} data 当前点击异步加载的数据
     */
    loadData: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义下拉框头部
     */
    header: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 自定义下拉框底部
     */
    footer: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 初始下拉框是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当前下拉框是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 下拉框显示或关闭时触发事件的回调函数
     * @param {Boolean} visible 是否显示
     * @param {String} type 触发显示关闭的操作类型, fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 下拉框自定义样式对象
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 下拉框样式自定义类名
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 下拉框挂载的容器节点
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 透传到 Popup 的属性对象
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Array<data>} value 选择值 { label: , value:}
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否是不可变数据
     * @version 1.23
     */
    immutable: _prop_types_15_8_1_prop_types_default.a.bool
}, cascader_select__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    size: 'medium',
    disabled: false,
    hasArrow: true,
    hasBorder: true,
    hasClear: false,
    dataSource: [],
    defaultValue: null,
    expandTriggerType: 'click',
    onExpand: function onExpand() {},
    useVirtual: false,
    multiple: false,
    changeOnSelect: false,
    canOnlyCheckLeaf: false,
    checkStrictly: false,
    showSearch: false,
    filter: function filter(searchValue, path) {
        return path.some(function (item) {
            return String(item.label).toLowerCase().indexOf(String(searchValue).toLowerCase()) > -1;
        });
    },
    resultRender: function resultRender(searchValue, path) {
        var parts = [];
        path.forEach(function (item, i) {
            var reExp = searchValue.replace(/[-.+*?^$()[\]{}|\\]/g, function (v) {
                return '\\' + v;
            });

            var re = new RegExp(reExp, 'gi');
            var others = item.label.split(re);
            var matches = item.label.match(re);

            others.forEach(function (other, j) {
                if (other) {
                    parts.push(other);
                }
                if (j < others.length - 1) {
                    parts.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'em',
                        { key: i + '-' + j },
                        matches[j]
                    ));
                }
            });
            if (i < path.length - 1) {
                parts.push(' / ');
            }
        });
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            null,
            parts
        );
    },
    resultAutoWidth: true,
    notFoundContent: 'Not Found',
    defaultVisible: false,
    onVisibleChange: function onVisibleChange() {},
    popupProps: {},
    immutable: false
}, cascader_select__temp);
cascader_select_CascaderSelect.displayName = 'CascaderSelect';


/* harmony default export */ var cascader_select = (Object(react_lifecycles_compat_es["polyfill"])(cascader_select_CascaderSelect));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/cascader-select/index.js





/* harmony default export */ var es_cascader_select = (config_provider.config(cascader_select, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('shape' in props) {
            deprecated('shape', 'hasBorder', 'CascaderSelect');

            var _props = props,
                shape = _props.shape,
                others = objectWithoutProperties_default()(_props, ['shape']);

            props = extends_default()({ hasBorder: shape !== 'arrow-only' }, others);
        }

        if ('container' in props) {
            deprecated('container', 'popupContainer', 'CascaderSelect');

            var _props2 = props,
                container = _props2.container,
                _others = objectWithoutProperties_default()(_props2, ['container']);

            props = extends_default()({ popupContainer: container }, _others);
        }

        if ('expandTrigger' in props) {
            deprecated('expandTrigger', 'expandTriggerType', 'CascaderSelect');

            var _props3 = props,
                expandTrigger = _props3.expandTrigger,
                _others2 = objectWithoutProperties_default()(_props3, ['expandTrigger']);

            props = extends_default()({ expandTriggerType: expandTrigger }, _others2);
        }

        if ('showItemCount' in props) {
            deprecated('showItemCount', 'listStyle | listClassName', 'CascaderSelect');
        }
        if ('labelWidth' in props) {
            deprecated('labelWidth', 'listStyle | listClassName', 'CascaderSelect');
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/collapse/panel.js






var panel__class, panel__temp2;








/** Collapse.Panel */
var panel_Panel = (panel__temp2 = panel__class = function (_React$Component) {
    inherits_default()(Panel, _React$Component);

    function Panel() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Panel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onKeyDown = function (e) {
            var keyCode = e.keyCode;

            if (keyCode === KEYCODE.SPACE) {
                var onClick = _this.props.onClick;

                e.preventDefault();
                onClick && onClick(e);
            }
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    } //

    Panel.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            title = _props.title,
            children = _props.children,
            className = _props.className,
            isExpanded = _props.isExpanded,
            disabled = _props.disabled,
            style = _props.style,
            prefix = _props.prefix,
            onClick = _props.onClick,
            id = _props.id,
            others = objectWithoutProperties_default()(_props, ['title', 'children', 'className', 'isExpanded', 'disabled', 'style', 'prefix', 'onClick', 'id']);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'collapse-panel'] = true, _classNames[prefix + 'collapse-panel-hidden'] = !isExpanded, _classNames[prefix + 'collapse-panel-expanded'] = isExpanded, _classNames[prefix + 'collapse-panel-disabled'] = disabled, _classNames[className] = className, _classNames));

        var iconCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'collapse-panel-icon'] = true, _classNames2[prefix + 'collapse-panel-icon-expanded'] = isExpanded, _classNames2));

        // 为了无障碍 需要添加两个id
        var headingId = id ? id + '-heading' : undefined;
        var regionId = id ? id + '-region' : undefined;
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ className: cls, style: style, id: id }, others),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    id: headingId,
                    className: prefix + 'collapse-panel-title',
                    onClick: onClick,
                    onKeyDown: this.onKeyDown,
                    tabIndex: '0',
                    'aria-disabled': disabled,
                    'aria-expanded': isExpanded,
                    'aria-controls': regionId,
                    role: 'button'
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    type: 'arrow-right',
                    className: iconCls,
                    'aria-hidden': 'true'
                }),
                title
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: prefix + 'collapse-panel-content',
                    role: 'region',
                    id: regionId
                },
                children
            )
        );
    };

    return Panel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), panel__class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 子组件接受行内样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    isExpanded: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁止用户操作
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 扩展class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    id: _prop_types_15_8_1_prop_types_default.a.string
}, panel__class.defaultProps = {
    prefix: 'next-',
    isExpanded: false,
    onClick: func.noop
}, panel__class.isNextPanel = true, panel__temp2);
panel_Panel.displayName = 'Panel';


/* harmony default export */ var collapse_panel = (config_provider.config(panel_Panel));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/collapse/collapse.js





var collapse__class, collapse__temp;









/** Collapse */
var collapse_Collapse = (collapse__temp = collapse__class = function (_React$Component) {
    inherits_default()(Collapse, _React$Component);

    function Collapse(props) {
        classCallCheck_default()(this, Collapse);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        var expandedKeys = void 0;
        if ('expandedKeys' in props) {
            expandedKeys = props.expandedKeys;
        } else {
            expandedKeys = props.defaultExpandedKeys;
        }

        _this.state = {
            expandedKeys: typeof expandedKeys === 'undefined' ? [] : expandedKeys
        };
        return _this;
    }

    Collapse.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        if ('expandedKeys' in props) {
            return {
                expandedKeys: typeof props.expandedKeys === 'undefined' ? [] : props.expandedKeys
            };
        }
        return null;
    };

    Collapse.prototype.onItemClick = function onItemClick(key) {
        var expandedKeys = this.state.expandedKeys;
        if (this.props.accordion) {
            expandedKeys = String(expandedKeys[0]) === String(key) ? [] : [key];
        } else {
            expandedKeys = [].concat(expandedKeys);
            var stringKey = String(key);
            var index = expandedKeys.findIndex(function (k) {
                return String(k) === stringKey;
            });
            var isExpanded = index > -1;
            if (isExpanded) {
                expandedKeys.splice(index, 1);
            } else {
                expandedKeys.push(key);
            }
        }
        this.setExpandedKey(expandedKeys);
    };

    Collapse.prototype.genratePanelId = function genratePanelId(itemId, index) {
        var collapseId = this.props.id;

        var id = void 0;
        if (itemId) {
            // 优先用 item自带的id
            id = itemId;
        } else if (collapseId) {
            // 其次用 collapseId 和 index 生成id
            id = collapseId + '-panel-' + index;
        }
        return id;
    };

    Collapse.prototype.getProps = function getProps(item, index, key) {
        var _this2 = this;

        var expandedKeys = this.state.expandedKeys;
        var title = item.title;

        var disabled = this.props.disabled;

        if (!disabled) {
            disabled = item.disabled;
        }

        var isExpanded = false;

        if (this.props.accordion) {
            isExpanded = String(expandedKeys[0]) === String(key);
        } else {
            isExpanded = expandedKeys.some(function (expandedKey) {
                if (expandedKey === null || expandedKey === undefined || key === null || key === undefined) {
                    return false;
                }

                if (expandedKey === key || expandedKey.toString() === key.toString()) {
                    return true;
                }
                return false;
            });
        }

        var id = this.genratePanelId(item.id, index);
        return {
            key: key,
            title: title,
            isExpanded: isExpanded,
            disabled: disabled,
            id: id,
            onClick: disabled ? null : function () {
                _this2.onItemClick(key);
                if ('onClick' in item) {
                    item.onClick(key);
                }
            }
        };
    };

    Collapse.prototype.getItemsByDataSource = function getItemsByDataSource() {
        var _this3 = this;

        var props = this.props;
        var dataSource = props.dataSource;
        // 是否有dataSource.item传入过key

        var hasKeys = dataSource.some(function (item) {
            return 'key' in item;
        });

        return dataSource.map(function (item, index) {
            // 传入过key就用item.key 没传入则统一使用index为key
            var key = hasKeys ? item.key : '' + index;
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                collapse_panel,
                extends_default()({}, _this3.getProps(item, index, key), { key: key }),
                item.content
            );
        });
    };

    Collapse.prototype.getItemsByChildren = function getItemsByChildren() {
        var _this4 = this;

        // 是否有child传入过key
        var allKeys = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.map(this.props.children, function (child) {
            return child && child.key;
        });
        var hasKeys = Boolean(allKeys && allKeys.length);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.map(this.props.children, function (child, index) {
            if (child && typeof child.type === 'function' && child.type.isNextPanel) {
                // 传入过key就用child.key 没传入则统一使用index为key
                var key = hasKeys ? child.key : '' + index;
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, _this4.getProps(child.props, index, key));
            } else {
                return child;
            }
        });
    };

    Collapse.prototype.setExpandedKey = function setExpandedKey(expandedKeys) {
        if (!('expandedKeys' in this.props)) {
            this.setState({ expandedKeys: expandedKeys });
        }
        this.props.onExpand(this.props.accordion ? expandedKeys[0] : expandedKeys);
    };

    Collapse.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            style = _props.style,
            disabled = _props.disabled,
            dataSource = _props.dataSource,
            id = _props.id,
            rtl = _props.rtl;

        var collapseClassName = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'collapse'] = true, _classNames[prefix + 'collapse-disabled'] = disabled, _classNames[className] = Boolean(className), _classNames));

        var others = util_obj.pickOthers(Collapse.propTypes, this.props);
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                id: id,
                className: collapseClassName,
                style: style
            }, others, {
                role: 'presentation',
                dir: rtl ? 'rtl' : undefined
            }),
            dataSource ? this.getItemsByDataSource() : this.getItemsByChildren()
        );
    };

    return Collapse;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), collapse__class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 组件接受行内样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 使用数据模型构建
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 默认展开keys
     */
    defaultExpandedKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 受控展开keys
     */
    expandedKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 展开状态发升变化时候的回调
     */
    onExpand: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 所有禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 扩展class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 手风琴模式，一次只能打开一个
     */
    accordion: _prop_types_15_8_1_prop_types_default.a.bool,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    id: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, collapse__class.defaultProps = {
    accordion: false,
    prefix: 'next-',
    onExpand: func.noop
}, collapse__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, collapse__temp);
collapse_Collapse.displayName = 'Collapse';


/* harmony default export */ var collapse_collapse = (Object(react_lifecycles_compat_es["polyfill"])(config_provider.config(collapse_Collapse)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/collapse/index.js



collapse_collapse.Panel = collapse_panel;

/* harmony default export */ var es_collapse = (collapse_collapse);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker/utils/index.js


// 检查传入值是否为 moment 对象
function utils_checkMomentObj(props, propName, componentName) {
    if (props[propName] && !external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(props[propName])) {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object');
    }
}

// 检查传入值是否为 moment 对象或时间字符串，字符串不检测是否为日期字符串
function checkDateValue(props, propName, componentName) {
    if (props[propName] && !external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(props[propName]) && typeof props[propName] !== 'string') {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object or format date string!');
    }
}

function utils_formatDateValue(value, format) {
    var val = typeof value === 'string' ? external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(value, format, true) : value;
    if (val && external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(val) && val.isValid()) {
        return val;
    }
    return null;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker/module/time-menu.js




var time_menu__class, time_menu__temp2;






function scrollTo(element, to, duration) {
    var requestAnimationFrame = window.requestAnimationFrame || function requestAnimationFrameTimeout() {
        return setTimeout(arguments.length <= 0 ? undefined : arguments[0], 10);
    };

    if (duration <= 0) {
        element.scrollTop = to;
        return;
    }

    var difference = to - element.scrollTop;
    var perTick = difference / duration * 10;

    requestAnimationFrame(function () {
        element.scrollTop = element.scrollTop + perTick;

        if (element.scrollTop === to) {
            return;
        }

        scrollTo(element, to, duration - 10);
    });
}

var time_menu_noop = function noop() {};

var time_menu_TimeMenu = (time_menu__temp2 = time_menu__class = function (_React$Component) {
    inherits_default()(TimeMenu, _React$Component);

    function TimeMenu() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, TimeMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._menuRefHandler = function (ref) {
            _this.menu = ref;
        }, _this.createMenuItems = function (list) {
            var _this$props = _this.props,
                prefix = _this$props.prefix,
                mode = _this$props.mode,
                disabled = _this$props.disabled,
                disabledItems = _this$props.disabledItems,
                activeIndex = _this$props.activeIndex,
                onSelect = _this$props.onSelect,
                renderTimeMenuItems = _this$props.renderTimeMenuItems,
                timeValue = _this$props.value;

            list = renderTimeMenuItems(list, mode, timeValue) || list;

            return list.map(function (_ref) {
                var _classnames;

                var label = _ref.label,
                    value = _ref.value;

                var isDisabled = disabled || disabledItems(value);
                var itemCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'time-picker-menu-item'] = true, _classnames[prefix + 'disabled'] = isDisabled, _classnames[prefix + 'selected'] = value === activeIndex, _classnames));
                var onClick = isDisabled ? time_menu_noop : function () {
                    return onSelect(value, mode);
                };
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'li',
                    {
                        role: 'option',
                        'aria-selected': String(value === activeIndex),
                        key: value,
                        title: value,
                        className: itemCls,
                        onClick: onClick
                    },
                    label
                );
            });
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    TimeMenu.prototype.componentDidMount = function componentDidMount() {
        this.scrollToSelected(0);
    };

    TimeMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (prevProps.activeIndex !== this.props.activeIndex) {
            this.scrollToSelected(120);
        }
    };

    TimeMenu.prototype.scrollToSelected = function scrollToSelected() {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var _props = this.props,
            activeIndex = _props.activeIndex,
            step = _props.step;

        var targetIndex = Math.floor((activeIndex || 0) / step);
        var firstItem = this.menu.children[targetIndex];
        var offsetTo = firstItem.offsetTop;
        scrollTo(this.menu, offsetTo, duration);
    };

    TimeMenu.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            title = _props2.title,
            mode = _props2.mode,
            step = _props2.step;

        var total = mode === 'hour' ? 24 : 60;
        var list = [];
        for (var i = 0; i < total; i++) {
            if (i % step === 0) {
                list.push({
                    label: i,
                    value: i
                });
            }
        }

        var menuTitle = title ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'time-picker-menu-title' },
            title
        ) : null;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'time-picker-menu' },
            menuTitle,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'ul',
                {
                    role: 'listbox',
                    className: prefix + 'time-picker-menu-' + mode,
                    ref: this._menuRefHandler
                },
                this.createMenuItems(list)
            )
        );
    };

    return TimeMenu;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), time_menu__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    title: _prop_types_15_8_1_prop_types_default.a.node,
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['hour', 'minute', 'second']),
    step: _prop_types_15_8_1_prop_types_default.a.number,
    activeIndex: _prop_types_15_8_1_prop_types_default.a.number,
    value: utils_checkMomentObj,
    disabledItems: _prop_types_15_8_1_prop_types_default.a.func,
    renderTimeMenuItems: _prop_types_15_8_1_prop_types_default.a.func,
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool
}, time_menu__class.defaultProps = {
    step: 1,
    disabledItems: function disabledItems() {
        return false;
    },
    renderTimeMenuItems: function renderTimeMenuItems(list) {
        return list;
    },
    onSelect: function onSelect() {},
    disabled: false
}, time_menu__temp2);
time_menu_TimeMenu.displayName = 'TimeMenu';


/* harmony default export */ var time_menu = (time_menu_TimeMenu);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker/panel.js






var time_picker_panel__class, time_picker_panel__temp2;










var panel_noop = func.noop;
var panel_TimePickerPanel = (time_picker_panel__temp2 = time_picker_panel__class = function (_Component) {
    inherits_default()(TimePickerPanel, _Component);

    function TimePickerPanel() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, TimePickerPanel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.onSelectMenuItem = function (index, type) {
            var value = _this.props.value;

            var clonedValue = value ? value.clone() : external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()('00:00:00', 'HH:mm:ss', true);
            switch (type) {
                case 'hour':
                    clonedValue.hour(index);
                    break;
                case 'minute':
                    clonedValue.minute(index);
                    break;
                case 'second':
                    clonedValue.second(index);
                    break;
            }
            _this.props.onSelect(clonedValue);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    TimePickerPanel.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            locale = _props.locale,
            className = _props.className,
            disabled = _props.disabled,
            showHour = _props.showHour,
            showMinute = _props.showMinute,
            showSecond = _props.showSecond,
            hourStep = _props.hourStep,
            minuteStep = _props.minuteStep,
            secondStep = _props.secondStep,
            disabledHours = _props.disabledHours,
            disabledMinutes = _props.disabledMinutes,
            disabledSeconds = _props.disabledSeconds,
            renderTimeMenuItems = _props.renderTimeMenuItems,
            others = objectWithoutProperties_default()(_props, ['prefix', 'value', 'locale', 'className', 'disabled', 'showHour', 'showMinute', 'showSecond', 'hourStep', 'minuteStep', 'secondStep', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'renderTimeMenuItems']);

        var colLen = [showHour, showMinute, showSecond].filter(function (v) {
            return v;
        }).length;
        var classNames = _classnames_2_3_1_classnames_default()(prefix + 'time-picker-panel', prefix + 'time-picker-panel-col-' + colLen, className);

        var commonProps = {
            prefix: prefix,
            disabled: disabled,
            onSelect: this.onSelectMenuItem,
            renderTimeMenuItems: renderTimeMenuItems,
            value: value
        };

        var activeHour = void 0;
        var activeMinute = void 0;
        var activeSecond = void 0;

        if (value && external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(value)) {
            activeHour = value.hour();
            activeMinute = value.minute();
            activeSecond = value.second();
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, others, { className: classNames }),
            showHour ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_menu, extends_default()({}, commonProps, {
                activeIndex: activeHour,
                title: locale.hour,
                mode: 'hour',
                step: hourStep,
                disabledItems: disabledHours
            })) : null,
            showMinute ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_menu, extends_default()({}, commonProps, {
                activeIndex: activeMinute,
                title: locale.minute,
                mode: 'minute',
                step: minuteStep,
                disabledItems: disabledMinutes
            })) : null,
            showSecond ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_menu, extends_default()({}, commonProps, {
                activeIndex: activeSecond,
                title: locale.second,
                step: secondStep,
                mode: 'second',
                disabledItems: disabledSeconds
            })) : null
        );
    };

    return TimePickerPanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), time_picker_panel__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 时间值（moment 对象）
     */
    value: utils_checkMomentObj,
    /**
     * 是否显示小时
     */
    showHour: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示分钟
     */
    showMinute: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示秒
     */
    showSecond: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 小时选项步长
     */
    hourStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用秒函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {moment} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选择某个日期值时的回调
     * @param {Object} 选中后的日期值
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, time_picker_panel__class.defaultProps = {
    prefix: 'next-',
    showHour: true,
    showSecond: true,
    showMinute: true,
    disabledHours: panel_noop,
    disabledMinutes: panel_noop,
    disabledSeconds: panel_noop,
    onSelect: panel_noop,
    disabled: false,
    locale: locale_zh_cn.TimePicker
}, time_picker_panel__temp2);
panel_TimePickerPanel.displayName = 'TimePickerPanel';


/* harmony default export */ var time_picker_panel = (panel_TimePickerPanel);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/util/index.js



var PANEL = {
    TIME: 'time-panel',
    DATE: 'date-panel'
};

var DEFAULT_TIME_FORMAT = 'HH:mm:ss';

function isFunction(obj) {
    return !!(obj && obj.constructor && obj.call && obj.apply);
}

/**
 * 将 source 的 time 替换为 target 的 time
 * @param {Object} source 输入值
 * @param {Object} target 目标值
 */
function resetValueTime(source, target) {
    if (!external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(source) || !external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(target)) {
        return source;
    }
    return source.clone().hour(target.hour()).minute(target.minute()).second(target.second());
}

function util_formatDateValue(value, format) {
    var val = typeof value === 'string' ? external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(value, format, false) : value;
    if (val && external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(val) && val.isValid()) {
        return val;
    }

    return null;
}

function util_checkDateValue(props, propName, componentName) {
    // 支持传入 moment 对象或字符串，字符串不检测是否为日期字符串
    if (props[propName] && !external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.isMoment(props[propName]) && typeof props[propName] !== 'string') {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object or format date string!');
    }
}

function getDateTimeFormat(format, showTime, type) {
    if (!format && type) {
        format = {
            date: 'YYYY-MM-DD',
            month: 'YYYY-MM',
            year: 'YYYY',
            time: ''
        }[type];
    }
    var timeFormat = showTime ? showTime.format || DEFAULT_TIME_FORMAT : '';
    var dateTimeFormat = timeFormat ? format + ' ' + timeFormat : format;
    return {
        format: format,
        timeFormat: timeFormat,
        dateTimeFormat: dateTimeFormat
    };
}

function extend(source, target) {
    for (var key in source) {
        if (source.hasOwnProperty(key)) {
            target[key] = source[key];
        }
    }
    return target;
}

/**
 * 监听键盘事件，操作日期字符串
 * @param {KeyboardEvent} e 事件对象
 * @param {Object} param1
 * @param {String} type 类型 year month day
 */
function onDateKeydown(e, _ref, type) {
    var format = _ref.format,
        dateInputStr = _ref.dateInputStr,
        value = _ref.value;

    if ([KEYCODE.UP, KEYCODE.DOWN, KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) {
        return;
    }

    if (e.altKey && [KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) {
        return;
    }

    var date = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(dateInputStr, format, true);

    if (date.isValid()) {
        var stepUnit = e.altKey ? 'year' : 'month';
        switch (e.keyCode) {
            case KEYCODE.UP:
                date.subtract(1, type);
                break;
            case KEYCODE.DOWN:
                date.add(1, type);
                break;
            case KEYCODE.PAGE_UP:
                date.subtract(1, stepUnit);
                break;
            case KEYCODE.PAGE_DOWN:
                date.add(1, stepUnit);
                break;
        }
    } else if (value) {
        date = value.clone();
    } else {
        date = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()();
    }

    e.preventDefault();
    return date.format(format);
}

/**
 * 监听键盘事件，操作时间
 * @param {KeyboardEvent} e
 * @param {Object} param1
 * @param {String} type second hour minute
 */
function onTimeKeydown(e, _ref2, type) {
    var format = _ref2.format,
        timeInputStr = _ref2.timeInputStr,
        steps = _ref2.steps,
        value = _ref2.value;

    if ([KEYCODE.UP, KEYCODE.DOWN, KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) return;
    if (e.altKey && [KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) return;

    var time = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(timeInputStr, format, true);

    if (time.isValid()) {
        var stepUnit = e.altKey ? 'hour' : 'minute';
        switch (e.keyCode) {
            case KEYCODE.UP:
                time.subtract(steps[type], type);
                break;
            case KEYCODE.DOWN:
                time.add(steps[type], type);
                break;
            case KEYCODE.PAGE_UP:
                time.subtract(steps[stepUnit], stepUnit);
                break;
            case KEYCODE.PAGE_DOWN:
                time.add(steps[stepUnit], stepUnit);
                break;
        }
    } else if (value) {
        time = value.clone();
    } else {
        time = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()().hours(0).minutes(0).seconds(0);
    }

    e.preventDefault();
    return time.format(format);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/module/panel-footer.js





var panel_footer__class, panel_footer__temp2;







var panel_footer_PanelFooter = (panel_footer__temp2 = panel_footer__class = function (_React$PureComponent) {
    inherits_default()(PanelFooter, _React$PureComponent);

    function PanelFooter() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, PanelFooter);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.changePanel = function () {
            var _PANEL$DATE$PANEL$TIM;

            var targetPanel = (_PANEL$DATE$PANEL$TIM = {}, _PANEL$DATE$PANEL$TIM[PANEL.DATE] = PANEL.TIME, _PANEL$DATE$PANEL$TIM[PANEL.TIME] = PANEL.DATE, _PANEL$DATE$PANEL$TIM)[_this.props.panel];
            _this.props.onPanelChange(targetPanel);
        }, _this.createRanges = function (ranges) {
            if (!ranges || ranges.length === 0) return null;
            var _this$props = _this.props,
                onOk = _this$props.onOk,
                prefix = _this$props.prefix;


            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'date-picker-panel-tools' },
                ranges.map(function (_ref) {
                    var label = _ref.label,
                        _ref$value = _ref.value,
                        value = _ref$value === undefined ? [] : _ref$value,
                        onChange = _ref.onChange;

                    var handleClick = function handleClick() {
                        var momentValue = value.map(function (v) {
                            return external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(v);
                        });

                        onChange(momentValue);
                        onOk(momentValue);
                    };
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        es_button,
                        {
                            key: label,
                            text: true,
                            size: 'small',
                            type: 'primary',
                            onClick: handleClick
                        },
                        label
                    );
                })
            );
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    PanelFooter.prototype.render = function render() {
        var _PANEL$DATE$PANEL$TIM2;

        var _props = this.props,
            prefix = _props.prefix,
            locale = _props.locale,
            panel = _props.panel,
            value = _props.value,
            ranges = _props.ranges,
            disabledOk = _props.disabledOk,
            onPanelChange = _props.onPanelChange,
            onOk = _props.onOk;

        var panelBtnLabel = (_PANEL$DATE$PANEL$TIM2 = {}, _PANEL$DATE$PANEL$TIM2[PANEL.DATE] = locale.selectTime, _PANEL$DATE$PANEL$TIM2[PANEL.TIME] = locale.selectDate, _PANEL$DATE$PANEL$TIM2)[panel];

        var sharedBtnProps = {
            size: 'small',
            type: 'primary',
            disabled: !value
        };
        var onClick = function onClick() {
            return onOk();
        };

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'date-picker-panel-footer' },
            this.createRanges(ranges),
            onPanelChange ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                extends_default()({}, sharedBtnProps, { text: true, onClick: this.changePanel }),
                panelBtnLabel
            ) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                extends_default()({}, sharedBtnProps, {
                    disabled: disabledOk || !value,
                    onClick: onClick
                }),
                locale.ok
            )
        );
    };

    return PanelFooter;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent), panel_footer__class.defaultProps = {
    // onPanelChange: func.noop,
    onOk: func.noop
}, panel_footer__temp2);


/* harmony default export */ var panel_footer = (panel_footer_PanelFooter);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/date-picker.js







var date_picker__class, date_picker__temp, date_picker__initialiseProps;

















var date_picker_Popup = next_es_overlay.Popup;

/**
 * DatePicker
 */

var date_picker_DatePicker = (date_picker__temp = date_picker__class = function (_Component) {
    inherits_default()(DatePicker, _Component);

    function DatePicker(props, context) {
        classCallCheck_default()(this, DatePicker);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        date_picker__initialiseProps.call(_this);

        var _getDateTimeFormat = getDateTimeFormat(props.format, props.showTime),
            format = _getDateTimeFormat.format,
            timeFormat = _getDateTimeFormat.timeFormat,
            dateTimeFormat = _getDateTimeFormat.dateTimeFormat;

        _this.state = {
            value: util_formatDateValue(props.defaultValue, dateTimeFormat),
            dateInputStr: '',
            timeInputStr: '',
            inputing: false, // 当前是否处于输入状态
            visible: props.defaultVisible,
            inputAsString: typeof props.defaultValue === 'string',
            panel: PANEL.DATE,
            format: format,
            timeFormat: timeFormat,
            dateTimeFormat: dateTimeFormat
        };
        return _this;
    }

    DatePicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var formatStates = getDateTimeFormat(props.format, props.showTime);
        var states = {};

        if ('value' in props) {
            states.value = util_formatDateValue(props.value, formatStates.dateTimeFormat);
            states.inputAsString = typeof props.value === 'string';
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return extends_default()({}, states, formatStates);
    };

    DatePicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var _state = this.state,
            value = _state.value,
            dateTimeFormat = _state.dateTimeFormat;

        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

        var label = value ? value.format(dateTimeFormat) : '';

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(value, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            label
        );
    };

    DatePicker.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3, _classnames4, _PANEL$DATE$PANEL$TIM;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            defaultVisibleMonth = _props2.defaultVisibleMonth,
            onVisibleMonthChange = _props2.onVisibleMonthChange,
            showTime = _props2.showTime,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            dateCellRender = _props2.dateCellRender,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            dateInputAriaLabel = _props2.dateInputAriaLabel,
            timeInputAriaLabel = _props2.timeInputAriaLabel,
            isPreview = _props2.isPreview,
            disableChangeMode = _props2.disableChangeMode,
            yearRange = _props2.yearRange,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'defaultVisibleMonth', 'onVisibleMonthChange', 'showTime', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'dateInputAriaLabel', 'timeInputAriaLabel', 'isPreview', 'disableChangeMode', 'yearRange']);

        var _state2 = this.state,
            visible = _state2.visible,
            value = _state2.value,
            dateInputStr = _state2.dateInputStr,
            timeInputStr = _state2.timeInputStr,
            panel = _state2.panel,
            inputing = _state2.inputing,
            format = _state2.format,
            timeFormat = _state2.timeFormat,
            dateTimeFormat = _state2.dateTimeFormat;


        var datePickerCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'date-picker'] = true, _classnames), className);

        var triggerInputCls = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'date-picker-input'] = true, _classnames2[prefix + 'error'] = false, _classnames2));

        var panelBodyClassName = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'date-picker-body'] = true, _classnames3[prefix + 'date-picker-body-show-time'] = showTime, _classnames3));

        var panelDateInputCls = _classnames_2_3_1_classnames_default()((_classnames4 = {}, _classnames4[prefix + 'date-picker-panel-input'] = true, _classnames4[prefix + 'focus'] = panel === PANEL.DATE, _classnames4));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(util_obj.pickOthers(others, DatePicker.PropTypes));
        }

        var sharedInputProps = extends_default()({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onKeyDown
        });

        var dateInputValue = inputing === 'date' ? dateInputStr : value && value.format(format) || '';
        var triggerInputValue = dateInputValue;

        var dateInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
            'aria-label': dateInputAriaLabel,
            value: dateInputValue,
            onFocus: this.onFoucsDateInput,
            placeholder: format,
            className: panelDateInputCls
        }));

        var datePanel = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_calendar, {
            shape: 'panel',
            value: value,
            format: format,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            onSelect: this.onSelectCalendarPanel,
            defaultVisibleMonth: defaultVisibleMonth,
            onVisibleMonthChange: onVisibleMonthChange,
            disabledDate: disabledDate,
            disableChangeMode: disableChangeMode,
            yearRange: yearRange
        });

        var panelFooter = footerRender();

        var timeInput = null;
        var timePanel = null;

        if (showTime) {
            var _classnames5;

            var timeInputValue = inputing === 'time' ? timeInputStr : value && value.format(timeFormat) || '';
            triggerInputValue = value && value.format(dateTimeFormat) || '';

            var timePanelProps = (typeof showTime === 'undefined' ? 'undefined' : typeof_default()(showTime)) === 'object' ? showTime : {};

            var showSecond = timeFormat.indexOf('s') > -1;
            var showMinute = timeFormat.indexOf('m') > -1;

            var panelTimeInputCls = _classnames_2_3_1_classnames_default()((_classnames5 = {}, _classnames5[prefix + 'date-picker-panel-input'] = true, _classnames5[prefix + 'focus'] = panel === PANEL.TIME, _classnames5));

            timeInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, {
                placeholder: timeFormat,
                value: timeInputValue,
                size: size,
                'aria-label': timeInputAriaLabel,
                disabled: disabled || !value,
                onChange: this.onTimeInputChange,
                onFocus: this.onFoucsTimeInput,
                onBlur: this.onTimeInputBlur,
                onPressEnter: this.onTimeInputBlur,
                onKeyDown: this.onTimeKeyDown,
                className: panelTimeInputCls
            });

            timePanel = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_picker_panel, extends_default()({}, timePanelProps, {
                locale: locale,
                className: prefix + 'date-picker-panel-time',
                showSecond: showSecond,
                showMinute: showMinute,
                disabled: disabled,
                prefix: prefix,
                value: value,
                onSelect: this.onSelectTimePanel
            }));

            panelFooter = panelFooter || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(panel_footer, {
                prefix: prefix,
                locale: locale,
                value: value,
                panel: panel,
                onPanelChange: this.changePanel,
                onOk: this.onOk
            });
        }

        var panelBody = (_PANEL$DATE$PANEL$TIM = {}, _PANEL$DATE$PANEL$TIM[PANEL.DATE] = datePanel, _PANEL$DATE$PANEL$TIM[PANEL.TIME] = timePanel, _PANEL$DATE$PANEL$TIM)[panel];

        var allowClear = value && hasClear;
        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'date-picker-trigger' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                label: label,
                state: state,
                value: triggerInputValue,
                role: 'combobox',
                'aria-expanded': visible,
                readOnly: true,
                placeholder: placeholder || (showTime ? locale.datetimePlaceholder : locale.placeholder),
                hint: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' }),
                hasClear: allowClear,
                className: triggerInputCls
            }))
        );
        var PopupComponent = popupComponent ? popupComponent : date_picker_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(DatePicker.propTypes, others), { className: datePickerCls }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComponent,
                extends_default()({
                    autoFocus: true,
                    align: popupAlign
                }, popupProps, {
                    followTrigger: followTrigger,
                    disabled: disabled,
                    visible: visible,
                    onVisibleChange: this.onVisibleChange,
                    triggerType: popupTriggerType,
                    container: popupContainer,
                    style: popupStyle,
                    className: popupClassName,
                    trigger: trigger
                }),
                popupContent ? popupContent : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { dir: others.dir, className: panelBodyClassName },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: prefix + 'date-picker-panel-header' },
                        dateInput,
                        timeInput
                    ),
                    panelBody,
                    panelFooter
                )
            )
        );
    };

    return DatePicker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), date_picker__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框内置标签
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 默认展现的月
     * @return {MomentObject} 返回包含指定月份的 moment 对象实例
     */
    defaultVisibleMonth: _prop_types_15_8_1_prop_types_default.a.func,
    onVisibleMonthChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期值（受控）moment 对象
     */
    value: util_checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: util_checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否使用时间控件，传入 TimePicker 的属性 { defaultValue, format, ... }
     */
    showTime: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * 每次选择日期时是否重置时间（仅在 showTime 开启时有效）
     */
    resetTime: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击确认按钮时的回调
     * @param {MomentObject|String} value 日期值
     */
    onOk: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 输入框尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示状态
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式,具体含义见 OverLay文档
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层其他属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义日期渲染函数
     * @param {Object} value 日期值（moment对象）
     * @returns {ReactNode}
     */
    dateCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    yearCellRender: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x yearCellRender
    /**
     * 日期输入框的 aria-label 属性
     */
    dateInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 时间输入框的 aria-label 属性
     */
    timeInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 日期
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    name: _prop_types_15_8_1_prop_types_default.a.string,
    popupComponent: _prop_types_15_8_1_prop_types_default.a.elementType,
    popupContent: _prop_types_15_8_1_prop_types_default.a.node,
    disableChangeMode: _prop_types_15_8_1_prop_types_default.a.bool,
    yearRange: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)
}), date_picker__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'YYYY-MM-DD',
    size: 'medium',
    showTime: false,
    resetTime: false,
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: locale_zh_cn.DatePicker,
    defaultVisible: false,
    onChange: func.noop,
    onVisibleChange: func.noop,
    onOk: func.noop
}, date_picker__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onValueChange = function (newValue) {
        var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'onChange';

        var ret = _this2.state.inputAsString && newValue ? newValue.format(_this2.state.dateTimeFormat) : newValue;
        _this2.props[handler](ret);
    };

    this.onSelectCalendarPanel = function (value) {
        var _props3 = _this2.props,
            showTime = _props3.showTime,
            resetTime = _props3.resetTime;


        var prevValue = _this2.state.value;
        var newValue = value;
        if (showTime) {
            if (!prevValue) {
                // 第一次选择日期值时，如果设置了默认时间，则使用该默认时间
                if (showTime.defaultValue) {
                    var defaultTimeValue = util_formatDateValue(showTime.defaultValue, _this2.state.timeFormat);
                    newValue = resetValueTime(value, defaultTimeValue);
                }
            } else if (!resetTime) {
                // 非第一选择日期，如果开启了 resetTime 属性，则记住之前选择的时间值
                newValue = resetValueTime(value, prevValue);
            }
        }

        _this2.handleChange(newValue, prevValue, { inputing: false });

        if (!showTime) {
            _this2.onVisibleChange(false, 'calendarSelect');
        }
    };

    this.onSelectTimePanel = function (value) {
        _this2.handleChange(value, _this2.state.value, { inputing: false });
    };

    this.clearValue = function () {
        _this2.setState({
            dateInputStr: '',
            timeInputStr: ''
        });

        _this2.handleChange(null, _this2.state.value, { inputing: false });
    };

    this.onDateInputChange = function (inputStr, e, eventType) {
        if (eventType === 'clear' || !inputStr) {
            e.stopPropagation();
            _this2.clearValue();
        } else {
            _this2.setState({
                dateInputStr: inputStr,
                inputing: 'date'
            });
        }
    };

    this.onTimeInputChange = function (inputStr) {
        _this2.setState({
            timeInputStr: inputStr,
            inputing: 'time'
        });
    };

    this.onDateInputBlur = function () {
        var _state3 = _this2.state,
            dateInputStr = _state3.dateInputStr,
            value = _state3.value,
            format = _state3.format;
        var resetTime = _this2.props.resetTime;


        if (dateInputStr) {
            var disabledDate = _this2.props.disabledDate;

            var parsed = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(dateInputStr, format, true);

            _this2.setState({
                dateInputStr: '',
                inputing: false
            });
            if (parsed.isValid() && !disabledDate(parsed, 'date')) {
                parsed = resetTime ? parsed : resetValueTime(parsed, value);
                _this2.handleChange(parsed, value);
            }
        }
    };

    this.onTimeInputBlur = function () {
        var _state4 = _this2.state,
            value = _state4.value,
            timeInputStr = _state4.timeInputStr,
            timeFormat = _state4.timeFormat;

        if (timeInputStr) {
            var parsed = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(timeInputStr, timeFormat, true);

            _this2.setState({
                timeInputStr: '',
                inputing: false
            });

            if (parsed.isValid()) {
                var hour = parsed.hour();
                var minute = parsed.minute();
                var second = parsed.second();
                var newValue = value.clone().hour(hour).minute(minute).second(second);

                _this2.handleChange(newValue, _this2.state.value);
            }
        }
    };

    this.onKeyDown = function (e) {
        var format = _this2.props.format;
        var _state5 = _this2.state,
            dateInputStr = _state5.dateInputStr,
            value = _state5.value;

        var dateStr = onDateKeydown(e, { format: format, dateInputStr: dateInputStr, value: value }, 'day');
        if (!dateStr) return;
        _this2.onDateInputChange(dateStr);
    };

    this.onTimeKeyDown = function (e) {
        var showTime = _this2.props.showTime;
        var _state6 = _this2.state,
            timeInputStr = _state6.timeInputStr,
            timeFormat = _state6.timeFormat,
            value = _state6.value;

        var _ref = (typeof showTime === 'undefined' ? 'undefined' : typeof_default()(showTime)) === 'object' ? showTime : {},
            disabledMinutes = _ref.disabledMinutes,
            disabledSeconds = _ref.disabledSeconds,
            _ref$hourStep = _ref.hourStep,
            hourStep = _ref$hourStep === undefined ? 1 : _ref$hourStep,
            _ref$minuteStep = _ref.minuteStep,
            minuteStep = _ref$minuteStep === undefined ? 1 : _ref$minuteStep,
            _ref$secondStep = _ref.secondStep,
            secondStep = _ref$secondStep === undefined ? 1 : _ref$secondStep;

        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }

        var timeStr = onTimeKeydown(e, {
            format: timeFormat,
            timeInputStr: timeInputStr,
            value: value,
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            }
        }, unit);

        if (!timeStr) return;

        _this2.onTimeInputChange(timeStr);
    };

    this.handleChange = function (newValue, prevValue) {
        var others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        if (!('value' in _this2.props)) {
            _this2.setState(extends_default()({
                value: newValue
            }, others));
        } else {
            _this2.setState(extends_default()({}, others));
        }

        var newValueOf = newValue ? newValue.valueOf() : null;
        var preValueOf = prevValue ? prevValue.valueOf() : null;

        if (newValueOf !== preValueOf) {
            _this2.onValueChange(newValue);
        }
    };

    this.onFoucsDateInput = function () {
        if (_this2.state.panel !== PANEL.DATE) {
            _this2.setState({
                panel: PANEL.DATE
            });
        }
    };

    this.onFoucsTimeInput = function () {
        if (_this2.state.panel !== PANEL.TIME) {
            _this2.setState({
                panel: PANEL.TIME
            });
        }
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this2.props)) {
            _this2.setState({
                visible: visible
            });
        }
        _this2.props.onVisibleChange(visible, type);
    };

    this.changePanel = function (panel) {
        _this2.setState({
            panel: panel
        });
    };

    this.onOk = function (value) {
        _this2.onVisibleChange(false, 'okBtnClick');
        _this2.onValueChange(value || _this2.state.value, 'onOk');
    };
}, date_picker__temp);
date_picker_DatePicker.displayName = 'DatePicker';


/* harmony default export */ var date_picker = (Object(react_lifecycles_compat_es["polyfill"])(date_picker_DatePicker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/range-picker.js







var range_picker__class, range_picker__temp, range_picker__initialiseProps;


















var range_picker_Popup = next_es_overlay.Popup;


function mapInputStateName(name) {
    return {
        startValue: 'startDateInputStr',
        endValue: 'endDateInputStr',
        startTime: 'startTimeInputStr',
        endTime: 'endTimeInputStr'
    }[name];
}

function mapTimeToValue(name) {
    return {
        startTime: 'startValue',
        endTime: 'endValue'
    }[name];
}

function getFormatValues(values, format) {
    if (!Array.isArray(values)) {
        return [null, null];
    }
    return [util_formatDateValue(values[0], format), util_formatDateValue(values[1], format)];
}

/**
 * DatePicker.RangePicker
 */
var range_picker_RangePicker = (range_picker__temp = range_picker__class = function (_Component) {
    inherits_default()(RangePicker, _Component);

    function RangePicker(props, context) {
        classCallCheck_default()(this, RangePicker);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        range_picker__initialiseProps.call(_this);

        var _getDateTimeFormat = getDateTimeFormat(props.format, props.showTime, props.type),
            format = _getDateTimeFormat.format,
            timeFormat = _getDateTimeFormat.timeFormat,
            dateTimeFormat = _getDateTimeFormat.dateTimeFormat;

        var val = props.value || props.defaultValue;
        var values = getFormatValues(val, dateTimeFormat);

        _this.state = {
            visible: props.visible || props.defaultVisible,
            startValue: values[0],
            endValue: values[1],
            startDateInputStr: '',
            endDateInputStr: '',
            activeDateInput: 'startValue',
            startTimeInputStr: '',
            endTimeInputStr: '',
            inputing: false, // 当前是否处于输入状态
            panel: PANEL.DATE,
            format: format,
            timeFormat: timeFormat,
            dateTimeFormat: dateTimeFormat,
            inputAsString: val && (typeof val[0] === 'string' || typeof val[1] === 'string')
        };
        return _this;
    }

    RangePicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var formatStates = getDateTimeFormat(props.format, props.showTime, props.type);
        var states = {};

        if ('value' in props) {
            var values = getFormatValues(props.value, formatStates.dateTimeFormat);
            states.startValue = values[0];
            states.endValue = values[1];
            states.inputAsString = props.value && (typeof props.value[0] === 'string' || typeof props.value[1] === 'string');
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return extends_default()({}, states, formatStates);
    };

    // 如果用户没有给定时间禁用逻辑，则给默认到禁用逻辑


    RangePicker.prototype.renderPreview = function renderPreview(_ref, others) {
        var startValue = _ref[0],
            endValue = _ref[1];
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var dateTimeFormat = this.state.dateTimeFormat;


        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');
        var startLabel = startValue ? startValue.format(dateTimeFormat) : '';
        var endLabel = endValue ? endValue.format(dateTimeFormat) : '';

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview([startValue, endValue], this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            startLabel,
            ' - ',
            endLabel
        );
    };

    RangePicker.prototype.render = function render() {
        var _classnames,
            _classnames2,
            _classnames3,
            _classnames4,
            _classnames5,
            _this2 = this,
            _PANEL$DATE$PANEL$TIM;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            type = _props2.type,
            defaultVisibleMonth = _props2.defaultVisibleMonth,
            onVisibleMonthChange = _props2.onVisibleMonthChange,
            showTime = _props2.showTime,
            _disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            label = _props2.label,
            _props2$ranges = _props2.ranges,
            ranges = _props2$ranges === undefined ? {} : _props2$ranges,
            inputState = _props2.state,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            locale = _props2.locale,
            inputProps = _props2.inputProps,
            dateCellRender = _props2.dateCellRender,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            startDateInputAriaLabel = _props2.startDateInputAriaLabel,
            startTimeInputAriaLabel = _props2.startTimeInputAriaLabel,
            endDateInputAriaLabel = _props2.endDateInputAriaLabel,
            endTimeInputAriaLabel = _props2.endTimeInputAriaLabel,
            isPreview = _props2.isPreview,
            disableChangeMode = _props2.disableChangeMode,
            yearRange = _props2.yearRange,
            placeholder = _props2.placeholder,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'rtl', 'type', 'defaultVisibleMonth', 'onVisibleMonthChange', 'showTime', 'disabledDate', 'footerRender', 'label', 'ranges', 'state', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'locale', 'inputProps', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'startDateInputAriaLabel', 'startTimeInputAriaLabel', 'endDateInputAriaLabel', 'endTimeInputAriaLabel', 'isPreview', 'disableChangeMode', 'yearRange', 'placeholder']);

        var state = this.state;

        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'range-picker'] = true, _classnames['' + prefix + size] = size, _classnames[prefix + 'disabled'] = disabled, _classnames), className);

        var panelBodyClassName = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'range-picker-body'] = true, _classnames2[prefix + 'range-picker-body-show-time'] = showTime, _classnames2));

        var triggerCls = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'range-picker-trigger'] = true, _classnames3[prefix + 'error'] = inputState === 'error', _classnames3));

        var startDateInputCls = _classnames_2_3_1_classnames_default()((_classnames4 = {}, _classnames4[prefix + 'range-picker-panel-input-start-date'] = true, _classnames4[prefix + 'focus'] = state.activeDateInput === 'startValue', _classnames4));

        var endDateInputCls = _classnames_2_3_1_classnames_default()((_classnames5 = {}, _classnames5[prefix + 'range-picker-panel-input-end-date'] = true, _classnames5[prefix + 'focus'] = state.activeDateInput === 'endValue', _classnames5));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview([state.startValue, state.endValue], util_obj.pickOthers(others, RangePicker.PropTypes));
        }

        var startDateInputValue = state.inputing === 'startValue' ? state.startDateInputStr : state.startValue && state.startValue.format(state.format) || '';
        var endDateInputValue = state.inputing === 'endValue' ? state.endDateInputStr : state.endValue && state.endValue.format(state.format) || '';

        var startTriggerValue = startDateInputValue;
        var endTriggerValue = endDateInputValue;

        var sharedInputProps = extends_default()({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onDateInputKeyDown
        });

        var startDateInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
            'aria-label': startDateInputAriaLabel,
            placeholder: state.format,
            value: startDateInputValue,
            onFocus: function onFocus() {
                return _this2.onFocusDateInput('startValue');
            },
            className: startDateInputCls
        }));

        var endDateInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
            'aria-label': endDateInputAriaLabel,
            placeholder: state.format,
            value: endDateInputValue,
            onFocus: function onFocus() {
                return _this2.onFocusDateInput('endValue');
            },
            className: endDateInputCls
        }));

        var shareCalendarProps = {
            showOtherMonth: true,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            format: state.format,
            defaultVisibleMonth: defaultVisibleMonth,
            onVisibleMonthChange: onVisibleMonthChange
        };

        var datePanel = type === 'date' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(range_calendar, extends_default()({}, shareCalendarProps, {
            yearRange: yearRange,
            disableChangeMode: disableChangeMode,
            disabledDate: _disabledDate,
            onSelect: this.onSelectCalendarPanel,
            startValue: state.startValue,
            endValue: state.endValue
        })) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'range-picker-panel-body' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_calendar, extends_default()({
                shape: 'panel',
                modes: type === 'month' ? ['month', 'year'] : ['year']
            }, extends_default()({}, shareCalendarProps), {
                disabledDate: function disabledDate(date) {
                    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                        args[_key - 1] = arguments[_key];
                    }

                    return state.endValue && date.isAfter(state.endValue, type) || _disabledDate && _disabledDate.apply(undefined, [date].concat(args));
                },
                onSelect: function onSelect(value) {
                    var selectedValue = value.clone().date(1).hour(0).minute(0).second(0);
                    if (type === 'year') {
                        selectedValue.month(0);
                    }
                    _this2.onSelectCalendarPanel(selectedValue, 'startValue');
                },
                value: state.startValue
            })),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_calendar, extends_default()({
                shape: 'panel',
                modes: type === 'month' ? ['month', 'year'] : ['year']
            }, shareCalendarProps, {
                disabledDate: function disabledDate(date) {
                    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                        args[_key2 - 1] = arguments[_key2];
                    }

                    return state.startValue && date.isBefore(state.startValue, type) || _disabledDate && _disabledDate.apply(undefined, [date].concat(args));
                },
                onSelect: function onSelect(value) {
                    var selectedValue = value.clone().hour(23).minute(59).second(59);
                    if (type === 'year') {
                        selectedValue.month(11).date(31);
                    } else {
                        selectedValue.date(selectedValue.daysInMonth());
                    }
                    _this2.onSelectCalendarPanel(selectedValue, 'endValue');
                },
                value: state.endValue
            }))
        );

        var startTimeInput = null;
        var endTimeInput = null;
        var timePanel = null;
        var panelFooter = footerRender();

        if (showTime) {
            var _classnames6, _classnames7;

            var startTimeInputValue = state.inputing === 'startTime' ? state.startTimeInputStr : state.startValue && state.startValue.format(state.timeFormat) || '';
            var endTimeInputValue = state.inputing === 'endTime' ? state.endTimeInputStr : state.endValue && state.endValue.format(state.timeFormat) || '';

            startTriggerValue = state.startValue && state.startValue.format(state.dateTimeFormat) || '';
            endTriggerValue = state.endValue && state.endValue.format(state.dateTimeFormat) || '';

            var sharedTimeInputProps = {
                size: size,
                placeholder: state.timeFormat,
                onFocus: this.onFocusTimeInput,
                onBlur: this.onTimeInputBlur,
                onPressEnter: this.onTimeInputBlur,
                onChange: this.onTimeInputChange,
                onKeyDown: this.onTimeInputKeyDown
            };

            var startTimeInputCls = _classnames_2_3_1_classnames_default()((_classnames6 = {}, _classnames6[prefix + 'range-picker-panel-input-start-time'] = true, _classnames6[prefix + 'focus'] = state.activeDateInput === 'startTime', _classnames6));

            startTimeInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedTimeInputProps, {
                value: startTimeInputValue,
                'aria-label': startTimeInputAriaLabel,
                disabled: disabled || !state.startValue,
                onFocus: function onFocus() {
                    return _this2.onFocusTimeInput('startTime');
                },
                className: startTimeInputCls
            }));

            var endTimeInputCls = _classnames_2_3_1_classnames_default()((_classnames7 = {}, _classnames7[prefix + 'range-picker-panel-input-end-time'] = true, _classnames7[prefix + 'focus'] = state.activeDateInput === 'endTime', _classnames7));

            endTimeInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedTimeInputProps, {
                value: endTimeInputValue,
                'aria-label': endTimeInputAriaLabel,
                disabled: disabled || !state.endValue,
                onFocus: function onFocus() {
                    return _this2.onFocusTimeInput('endTime');
                },
                className: endTimeInputCls
            }));

            var showSecond = state.timeFormat.indexOf('s') > -1;
            var showMinute = state.timeFormat.indexOf('m') > -1;

            var sharedTimePickerProps = extends_default()({}, showTime, {
                prefix: prefix,
                locale: locale,
                disabled: disabled,
                showSecond: showSecond,
                showMinute: showMinute
            });

            var disabledTime = this.getDisabledTime(state);

            timePanel = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'range-picker-panel-time' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_picker_panel, extends_default()({}, sharedTimePickerProps, {
                    disabled: disabled || !state.startValue,
                    className: prefix + 'range-picker-panel-time-start',
                    value: state.startValue,
                    onSelect: this.onSelectStartTime
                })),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_picker_panel, extends_default()({}, sharedTimePickerProps, disabledTime, {
                    disabled: disabled || !state.endValue,
                    className: prefix + 'range-picker-panel-time-end',
                    value: state.endValue,
                    onSelect: this.onSelectEndTime
                }))
            );
        }

        panelFooter = panelFooter || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(panel_footer, {
            prefix: prefix,
            value: state.startValue || state.endValue,
            ranges: Object.keys(ranges).map(function (key) {
                return {
                    label: key,
                    value: ranges[key],
                    onChange: function onChange(values) {
                        _this2.setState({
                            startValue: values[0],
                            endValue: values[1]
                        });
                        _this2.onValueChange(values);
                    }
                };
            }),
            disabledOk: !state.startValue || !state.endValue || state.startValue.valueOf() > state.endValue.valueOf(),
            locale: locale,
            panel: state.panel,
            onPanelChange: showTime ? this.changePanel : null,
            onOk: this.onOk
        });

        var panelBody = (_PANEL$DATE$PANEL$TIM = {}, _PANEL$DATE$PANEL$TIM[PANEL.DATE] = datePanel, _PANEL$DATE$PANEL$TIM[PANEL.TIME] = timePanel, _PANEL$DATE$PANEL$TIM)[state.panel];

        var allowClear = state.startValue && state.endValue && hasClear;

        var _ref2 = placeholder || [],
            startPlaceholder = _ref2[0],
            endPlaceholder = _ref2[1];

        if (typeof placeholder === 'string') {
            startPlaceholder = placeholder;
            endPlaceholder = placeholder;
        }

        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: triggerCls },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                readOnly: true,
                role: 'combobox',
                'aria-expanded': state.visible,
                label: label,
                placeholder: startPlaceholder || locale.startPlaceholder,
                value: startTriggerValue,
                hasBorder: false,
                className: prefix + 'range-picker-trigger-input',
                onFocus: function onFocus() {
                    return _this2.onFocusDateInput('startValue');
                }
            })),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'range-picker-trigger-separator' },
                '-'
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                readOnly: true,
                role: 'combobox',
                'aria-expanded': state.visible,
                placeholder: endPlaceholder || locale.endPlaceholder,
                value: endTriggerValue,
                hasBorder: false,
                className: prefix + 'range-picker-trigger-input',
                onFocus: function onFocus() {
                    return _this2.onFocusDateInput('endValue');
                },
                hasClear: allowClear,
                hint: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' })
            }))
        );

        var PopupComponent = popupComponent ? popupComponent : range_picker_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(RangePicker.propTypes, others), { className: classNames }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComponent,
                extends_default()({
                    autoFocus: true,
                    align: popupAlign
                }, popupProps, {
                    followTrigger: followTrigger,
                    disabled: disabled,
                    visible: state.visible,
                    onVisibleChange: this.onVisibleChange,
                    triggerType: popupTriggerType,
                    container: popupContainer,
                    style: popupStyle,
                    className: popupClassName,
                    trigger: trigger
                }),
                popupContent ? popupContent : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { dir: others.dir, className: panelBodyClassName },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: prefix + 'range-picker-panel-header' },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'div',
                            { className: prefix + 'range-picker-panel-input' },
                            startDateInput,
                            startTimeInput,
                            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                                'span',
                                { className: prefix + 'range-picker-panel-input-separator' },
                                '-'
                            ),
                            endDateInput,
                            endTimeInput
                        )
                    ),
                    panelBody,
                    panelFooter
                )
            )
        );
    };

    return RangePicker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), range_picker__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 日期范围类型
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['date', 'month', 'year']),
    /**
     * 默认展示的起始月份
     * @return {MomentObject} 返回包含指定月份的 moment 对象实例
     */
    defaultVisibleMonth: _prop_types_15_8_1_prop_types_default.a.func,
    onVisibleMonthChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期范围值数组 [moment, moment]
     */
    value: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 初始的日期范围值数组 [moment, moment]
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 日期格式
     */
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否使用时间控件，支持传入 TimePicker 的属性
     */
    showTime: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * 每次选择是否重置时间（仅在 showTime 开启时有效）
     */
    resetTime: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期范围值改变时的回调 [ MomentObject|String, MomentObject|String ]
     * @param {Array<MomentObject|String>} value 日期值
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击确认按钮时的回调 返回开始时间和结束时间`[ MomentObject|String, MomentObject|String ]`
     * @return {Array} 日期范围
     */
    onOk: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 输入框内置标签
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'loading', 'success']),
    /**
     * 输入框尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示状态
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式, 具体含义见 OverLay文档
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层其他属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义日期单元格渲染
     */
    dateCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    yearCellRender: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x yearCellRender
    /**
     * 开始日期输入框的 aria-label 属性
     */
    startDateInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 开始时间输入框的 aria-label 属性
     */
    startTimeInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 结束日期输入框的 aria-label 属性
     */
    endDateInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 结束时间输入框的 aria-label 属性
     */
    endTimeInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Array<MomentObject, MomentObject>} value 日期区间
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    disableChangeMode: _prop_types_15_8_1_prop_types_default.a.bool,
    yearRange: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number),
    ranges: _prop_types_15_8_1_prop_types_default.a.object, // 兼容0.x版本
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    name: _prop_types_15_8_1_prop_types_default.a.string,
    popupComponent: _prop_types_15_8_1_prop_types_default.a.elementType,
    popupContent: _prop_types_15_8_1_prop_types_default.a.node,
    placeholder: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string), _prop_types_15_8_1_prop_types_default.a.string])
}), range_picker__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    type: 'date',
    size: 'medium',
    showTime: false,
    resetTime: false,
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    defaultVisible: false,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: locale_zh_cn.DatePicker,
    disableChangeMode: false,
    onChange: func.noop,
    onOk: func.noop,
    onVisibleChange: func.noop
}, range_picker__initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.onValueChange = function (values) {
        var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'onChange';

        var ret = void 0;
        if (!values.length || !_this3.state.inputAsString) {
            ret = values;
        } else {
            ret = [values[0] ? values[0].format(_this3.state.dateTimeFormat) : null, values[1] ? values[1].format(_this3.state.dateTimeFormat) : null];
        }
        _this3.props[handler](ret);
    };

    this.onSelectCalendarPanel = function (value, active) {
        var _props3 = _this3.props,
            showTime = _props3.showTime,
            resetTime = _props3.resetTime;
        var _state = _this3.state,
            prevActiveDateInput = _state.activeDateInput,
            prevStartValue = _state.startValue,
            prevEndValue = _state.endValue,
            timeFormat = _state.timeFormat;


        var newState = {
            activeDateInput: active || prevActiveDateInput,
            inputing: false
        };

        var newValue = value;

        switch (active || prevActiveDateInput) {
            case 'startValue':
                {
                    if (!prevEndValue || value.valueOf() <= prevEndValue.valueOf()) {
                        newState.activeDateInput = 'endValue';
                    }

                    if (showTime) {
                        if (!prevStartValue) {
                            // 第一次选择，如果设置了时间默认值，则使用该默认时间
                            if (showTime.defaultValue) {
                                var defaultTimeValue = util_formatDateValue(Array.isArray(showTime.defaultValue) ? showTime.defaultValue[0] : showTime.defaultValue, timeFormat);
                                newValue = resetValueTime(value, defaultTimeValue);
                            }
                        } else if (!resetTime) {
                            // 非第一次选择，如果开启了 resetTime ，则记住之前选择的时间值
                            newValue = resetValueTime(value, prevStartValue);
                        }
                    }

                    newState.startValue = newValue;

                    // 如果起始日期大于结束日期
                    if (prevEndValue && newValue.valueOf() > prevEndValue.valueOf()) {
                        // 将结束日期设置为起始日期 如果需要的话保留时间
                        newState.endValue = resetTime ? newValue : resetValueTime(value, prevEndValue);

                        // 如果结束日期不大于起始日期则将结束日期设置为等于开始日期
                        if (newState.endValue.valueOf() < newState.startValue.valueOf()) {
                            newState.endValue = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(newState.startValue);
                        }
                        newState.activeDateInput = 'endValue';
                    }
                    break;
                }

            case 'endValue':
                if (!prevStartValue) {
                    newState.activeDateInput = 'startValue';
                }

                if (showTime) {
                    if (!prevEndValue) {
                        // 第一次选择，如果设置了时间默认值，则使用该默认时间
                        if (showTime.defaultValue) {
                            var _defaultTimeValue = util_formatDateValue(Array.isArray(showTime.defaultValue) ? showTime.defaultValue[1] || showTime.defaultValue[0] : showTime.defaultValue, timeFormat);
                            newValue = resetValueTime(value, _defaultTimeValue);
                        }
                    } else if (!resetTime) {
                        // 非第一次选择，如果开启了 resetTime ，则记住之前选择的时间值
                        newValue = resetValueTime(value, prevEndValue);
                    }
                }

                newState.endValue = newValue;

                // 选择了一个比开始日期更小的结束日期，此时表示用户重新选择了
                if (prevStartValue && newValue.valueOf() <= prevStartValue.valueOf()) {
                    newState.startValue = resetTime ? value : resetValueTime(value, prevStartValue);
                    newState.endValue = resetTime ? value : resetValueTime(value, prevEndValue);

                    // 如果结束日期不大于起始日期则将结束日期设置为等于开始日期
                    if (newState.endValue.valueOf() < newState.startValue.valueOf()) {
                        newState.endValue = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(newState.startValue);
                    }
                }
                break;
        }

        var newStartValue = 'startValue' in newState ? newState.startValue : prevStartValue;
        var newEndValue = 'endValue' in newState ? newState.endValue : prevEndValue;

        // 受控状态选择不更新值
        if ('value' in _this3.props) {
            delete newState.startValue;
            delete newState.endValue;
        }

        _this3.setState(newState);

        _this3.onValueChange([newStartValue, newEndValue]);
    };

    this.clearRange = function () {
        _this3.setState({
            startDateInputStr: '',
            endDateInputStr: '',
            startTimeInputStr: '',
            endTimeInputStr: ''
        });

        if (!('value' in _this3.props)) {
            _this3.setState({
                startValue: null,
                endValue: null
            });
        }

        _this3.onValueChange([]);
    };

    this.onDateInputChange = function (inputStr, e, eventType) {
        if (eventType === 'clear' || !inputStr) {
            e.stopPropagation();
            _this3.clearRange();
        } else {
            var _this3$setState;

            var stateName = mapInputStateName(_this3.state.activeDateInput);
            _this3.setState((_this3$setState = {}, _this3$setState[stateName] = inputStr, _this3$setState.inputing = _this3.state.activeDateInput, _this3$setState));
        }
    };

    this.onDateInputBlur = function () {
        var resetTime = _this3.props.resetTime;
        var activeDateInput = _this3.state.activeDateInput;

        var stateName = mapInputStateName(activeDateInput);
        var dateInputStr = _this3.state[stateName];

        if (dateInputStr) {
            var _this3$setState2;

            var _props4 = _this3.props,
                format = _props4.format,
                disabledDate = _props4.disabledDate;

            var parsed = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(dateInputStr, format, true);

            _this3.setState((_this3$setState2 = {}, _this3$setState2[stateName] = '', _this3$setState2.inputing = false, _this3$setState2));

            if (parsed.isValid() && !disabledDate(parsed, 'date')) {
                var valueName = activeDateInput;
                var newValue = resetTime ? parsed : resetValueTime(parsed, _this3.state[activeDateInput]);

                _this3.handleChange(valueName, newValue);
            }
        }
    };

    this.onDateInputKeyDown = function (e) {
        var type = _this3.props.type;
        var _state2 = _this3.state,
            activeDateInput = _state2.activeDateInput,
            format = _state2.format;

        var stateName = mapInputStateName(activeDateInput);
        var dateInputStr = _this3.state[stateName];
        var dateStr = onDateKeydown(e, {
            format: format,
            value: _this3.state[activeDateInput],
            dateInputStr: dateInputStr
        }, type === 'date' ? 'day' : type);
        if (!dateStr) return;

        return _this3.onDateInputChange(dateStr);
    };

    this.onFocusDateInput = function (type) {
        if (type !== _this3.state.activeDateInput) {
            _this3.setState({
                activeDateInput: type
            });
        }
        if (_this3.state.panel !== PANEL.DATE) {
            _this3.setState({
                panel: PANEL.DATE
            });
        }
    };

    this.onFocusTimeInput = function (type) {
        if (type !== _this3.state.activeDateInput) {
            _this3.setState({
                activeDateInput: type
            });
        }

        if (_this3.state.panel !== PANEL.TIME) {
            _this3.setState({
                panel: PANEL.TIME
            });
        }
    };

    this.onSelectStartTime = function (value) {
        if (!('value' in _this3.props)) {
            _this3.setState({
                startValue: value,
                inputing: false,
                activeDateInput: 'startTime'
            });
        }

        if (value.valueOf() !== _this3.state.startValue.valueOf()) {
            _this3.onValueChange([value, _this3.state.endValue]);
        }
    };

    this.onSelectEndTime = function (value) {
        if (!('value' in _this3.props)) {
            _this3.setState({
                endValue: value,
                inputing: false,
                activeDateInput: 'endTime'
            });
        }
        if (value.valueOf() !== _this3.state.endValue.valueOf()) {
            _this3.onValueChange([_this3.state.startValue, value]);
        }
    };

    this.onTimeInputChange = function (inputStr) {
        var _this3$setState3;

        var stateName = mapInputStateName(_this3.state.activeDateInput);
        _this3.setState((_this3$setState3 = {}, _this3$setState3[stateName] = inputStr, _this3$setState3.inputing = _this3.state.activeDateInput, _this3$setState3));
    };

    this.onTimeInputBlur = function () {
        var _this3$setState4;

        var stateName = mapInputStateName(_this3.state.activeDateInput);
        var timeInputStr = _this3.state[stateName];

        var parsed = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(timeInputStr, _this3.state.timeFormat, true);

        _this3.setState((_this3$setState4 = {}, _this3$setState4[stateName] = '', _this3$setState4.inputing = false, _this3$setState4));

        if (parsed.isValid()) {
            var hour = parsed.hour();
            var minute = parsed.minute();
            var second = parsed.second();
            var valueName = mapTimeToValue(_this3.state.activeDateInput);
            var newValue = _this3.state[valueName].clone().hour(hour).minute(minute).second(second);

            _this3.handleChange(valueName, newValue);
        }
    };

    this.onTimeInputKeyDown = function (e) {
        var showTime = _this3.props.showTime;
        var _state3 = _this3.state,
            activeDateInput = _state3.activeDateInput,
            timeFormat = _state3.timeFormat;

        var stateName = mapInputStateName(activeDateInput);
        var timeInputStr = _this3.state[stateName];

        var _ref3 = (typeof showTime === 'undefined' ? 'undefined' : typeof_default()(showTime)) === 'object' ? showTime : {},
            disabledMinutes = _ref3.disabledMinutes,
            disabledSeconds = _ref3.disabledSeconds,
            _ref3$hourStep = _ref3.hourStep,
            hourStep = _ref3$hourStep === undefined ? 1 : _ref3$hourStep,
            _ref3$minuteStep = _ref3.minuteStep,
            minuteStep = _ref3$minuteStep === undefined ? 1 : _ref3$minuteStep,
            _ref3$secondStep = _ref3.secondStep,
            secondStep = _ref3$secondStep === undefined ? 1 : _ref3$secondStep;

        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }

        var timeStr = onTimeKeydown(e, {
            format: timeFormat,
            timeInputStr: timeInputStr,
            value: _this3.state[activeDateInput.indexOf('start') ? 'startValue' : 'endValue'],
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            }
        }, unit);

        if (!timeStr) return;

        _this3.onTimeInputChange(timeStr);
    };

    this.handleChange = function (valueName, newValue) {
        var values = ['startValue', 'endValue'].map(function (name) {
            return valueName === name ? newValue : _this3.state[name];
        });

        // 判断起始时间是否大于结束时间
        if (values[0] && values[1] && values[0].valueOf() > values[1].valueOf()) {
            return;
        }

        if (!('value' in _this3.props)) {
            var _this3$setState5;

            _this3.setState((_this3$setState5 = {}, _this3$setState5[valueName] = newValue, _this3$setState5));
        }

        _this3.onValueChange(values);
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this3.props)) {
            _this3.setState({
                visible: visible
            });
        }
        _this3.props.onVisibleChange(visible, type);
    };

    this.changePanel = function (panel) {
        var _state4 = _this3.state,
            startValue = _state4.startValue,
            endValue = _state4.endValue;

        _this3.setState({
            panel: panel,
            activeDateInput: panel === PANEL.DATE ? !!startValue && !endValue ? 'endValue' : 'startValue' : 'startTime'
        });
    };

    this.onOk = function (value) {
        _this3.onVisibleChange(false, 'okBtnClick');
        _this3.onValueChange(value || [_this3.state.startValue, _this3.state.endValue], 'onOk');
    };

    this.getDisabledTime = function (_ref4) {
        var startValue = _ref4.startValue,
            endValue = _ref4.endValue;

        var _ref5 = _this3.props.showTime || {},
            disabledHours = _ref5.disabledHours,
            disabledMinutes = _ref5.disabledMinutes,
            disabledSeconds = _ref5.disabledSeconds;

        var disabledTime = {};

        if (startValue && endValue) {
            var isSameDay = startValue.format('L') === endValue.format('L');
            var newDisabledHours = isFunction(disabledHours) ? disabledHours : function (index) {
                if (isSameDay && index < startValue.hour()) {
                    return true;
                }
            };

            var newDisabledMinutes = isFunction(disabledMinutes) ? disabledMinutes : function (index) {
                if (isSameDay && startValue.hour() === endValue.hour() && index < startValue.minute()) {
                    return true;
                }
            };

            var newDisabledSeconds = isFunction(disabledSeconds) ? disabledSeconds : function (index) {
                if (isSameDay && startValue.hour() === endValue.hour() && startValue.minute() === endValue.minute() && index < startValue.second()) {
                    return true;
                }
            };
            disabledTime = {
                disabledHours: newDisabledHours,
                disabledMinutes: newDisabledMinutes,
                disabledSeconds: newDisabledSeconds
            };
        }

        return disabledTime;
    };
}, range_picker__temp);
range_picker_RangePicker.displayName = 'RangePicker';


/* harmony default export */ var range_picker = (Object(react_lifecycles_compat_es["polyfill"])(range_picker_RangePicker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/month-picker.js






var month_picker__class, month_picker__temp;















var month_picker_Popup = next_es_overlay.Popup;

/**
 * DatePicker.MonthPicker
 */

var month_picker_MonthPicker = (month_picker__temp = month_picker__class = function (_Component) {
    inherits_default()(MonthPicker, _Component);

    function MonthPicker(props, context) {
        classCallCheck_default()(this, MonthPicker);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this.onValueChange = function (newValue) {
            var ret = _this.state.inputAsString && newValue ? newValue.format(_this.props.format) : newValue;
            _this.props.onChange(ret);
        };

        _this.onSelectCalendarPanel = function (value) {
            // const { format } = this.props;
            var prevSelectedMonth = _this.state.value;
            var selectedMonth = value.clone().date(1).hour(0).minute(0).second(0);

            _this.handleChange(selectedMonth, prevSelectedMonth, { inputing: false }, function () {
                _this.onVisibleChange(false, 'calendarSelect');
            });
        };

        _this.clearValue = function () {
            _this.setState({
                dateInputStr: ''
            });

            _this.handleChange(null, _this.state.value);
        };

        _this.onDateInputChange = function (inputStr, e, eventType) {
            if (eventType === 'clear' || !inputStr) {
                e.stopPropagation();
                _this.clearValue();
            } else {
                _this.setState({
                    dateInputStr: inputStr,
                    inputing: true
                });
            }
        };

        _this.onDateInputBlur = function () {
            var dateInputStr = _this.state.dateInputStr;

            if (dateInputStr) {
                var _this$props = _this.props,
                    disabledDate = _this$props.disabledDate,
                    format = _this$props.format;

                var parsed = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(dateInputStr, format, true);

                _this.setState({
                    dateInputStr: '',
                    inputing: false
                });

                if (parsed.isValid() && !disabledDate(parsed, 'month')) {
                    _this.handleChange(parsed, _this.state.value);
                }
            }
        };

        _this.onKeyDown = function (e) {
            var format = _this.props.format;
            var _this$state = _this.state,
                dateInputStr = _this$state.dateInputStr,
                value = _this$state.value;

            var dateStr = onDateKeydown(e, { format: format, dateInputStr: dateInputStr, value: value }, 'month');
            if (!dateStr) return;
            _this.onDateInputChange(dateStr);
        };

        _this.handleChange = function (newValue, prevValue) {
            var others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var callback = arguments[3];

            if (!('value' in _this.props)) {
                _this.setState(extends_default()({
                    value: newValue
                }, others));
            } else {
                _this.setState(extends_default()({}, others));
            }

            var format = _this.props.format;


            var newValueOf = newValue ? newValue.format(format) : null;
            var preValueOf = prevValue ? prevValue.format(format) : null;

            if (newValueOf !== preValueOf) {
                _this.onValueChange(newValue);
                if (typeof callback === 'function') {
                    return callback();
                }
            }
        };

        _this.onVisibleChange = function (visible, type) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, type);
        };

        _this.state = {
            value: util_formatDateValue(props.defaultValue, props.format),
            dateInputStr: '',
            inputing: false,
            visible: props.defaultVisible,
            inputAsString: typeof props.defaultValue === 'string'
        };
        return _this;
    }

    MonthPicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var states = {};
        if ('value' in props) {
            states.value = util_formatDateValue(props.value, props.format);
            states.inputAsString = typeof props.value === 'string';
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return states;
    };

    MonthPicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(value, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            label
        );
    };

    MonthPicker.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            format = _props2.format,
            defaultVisibleYear = _props2.defaultVisibleYear,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            dateInputAriaLabel = _props2.dateInputAriaLabel,
            isPreview = _props2.isPreview,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'format', 'defaultVisibleYear', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'monthCellRender', 'yearCellRender', 'dateInputAriaLabel', 'isPreview']);

        var _state = this.state,
            visible = _state.visible,
            value = _state.value,
            dateInputStr = _state.dateInputStr,
            inputing = _state.inputing;


        var monthPickerCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'month-picker'] = true, _classnames), className);

        var triggerInputCls = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'month-picker-input'] = true, _classnames2[prefix + 'error'] = false, _classnames2));

        var panelBodyClassName = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'month-picker-body'] = true, _classnames3));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(util_obj.pickOthers(others, MonthPicker.PropTypes));
        }

        var panelInputCls = prefix + 'month-picker-panel-input';

        var sharedInputProps = extends_default()({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onKeyDown
        });

        var dateInputValue = inputing ? dateInputStr : value && value.format(format) || '';
        var triggerInputValue = dateInputValue;

        var dateInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
            value: dateInputValue,
            'aria-label': dateInputAriaLabel,
            onFocus: this.onFoucsDateInput,
            placeholder: format,
            className: panelInputCls
        }));

        var datePanel = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_calendar, {
            shape: 'panel',
            modes: ['month', 'year'],
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            value: value,
            onSelect: this.onSelectCalendarPanel,
            defaultVisibleMonth: defaultVisibleYear,
            disabledDate: disabledDate
        });

        var panelBody = datePanel;
        var panelFooter = footerRender();

        var allowClear = value && hasClear;
        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'month-picker-trigger' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                label: label,
                state: state,
                readOnly: true,
                value: triggerInputValue,
                placeholder: placeholder || locale.monthPlaceholder,
                hint: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    type: 'calendar',
                    className: prefix + 'date-picker-symbol-calendar-icon'
                }),
                hasClear: allowClear,
                className: triggerInputCls
            }))
        );

        var PopupComponent = popupComponent ? popupComponent : month_picker_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(MonthPicker.propTypes, others), {
                className: monthPickerCls
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComponent,
                extends_default()({
                    autoFocus: true,
                    align: popupAlign
                }, popupProps, {
                    followTrigger: followTrigger,
                    role: 'combobox',
                    'aria-expanded': visible,
                    disabled: disabled,
                    visible: visible,
                    onVisibleChange: this.onVisibleChange,
                    triggerType: popupTriggerType,
                    container: popupContainer,
                    style: popupStyle,
                    className: popupClassName,
                    trigger: trigger
                }),
                popupContent ? popupContent : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: panelBodyClassName, dir: others.dir },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            className: prefix + 'month-picker-panel-header'
                        },
                        dateInput
                    ),
                    panelBody,
                    panelFooter
                )
            )
        );
    };

    return MonthPicker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), month_picker__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框内置标签
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 默认展现的年
     * @return {MomentObject} 返回包含指定年份的 moment 对象实例
     */
    defaultVisibleYear: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期值（受控）moment 对象
     */
    value: util_checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: util_checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 输入框尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示状态
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式, 具体含义见 OverLay文档
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层其他属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    yearCellRender: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x yearCellRender
    /**
     * 日期输入框的 aria-label 属性
     */
    dateInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 月份
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    name: _prop_types_15_8_1_prop_types_default.a.string,
    popupComponent: _prop_types_15_8_1_prop_types_default.a.elementType,
    popupContent: _prop_types_15_8_1_prop_types_default.a.node
}), month_picker__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'YYYY-MM',
    size: 'medium',
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: locale_zh_cn.DatePicker,
    onChange: func.noop,
    onVisibleChange: func.noop
}, month_picker__temp);
month_picker_MonthPicker.displayName = 'MonthPicker';


/* harmony default export */ var month_picker = (Object(react_lifecycles_compat_es["polyfill"])(month_picker_MonthPicker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/year-picker.js






var year_picker__class, year_picker__temp;














var year_picker_Popup = next_es_overlay.Popup;

/**
 * DatePicker.YearPicker
 */

var year_picker_YearPicker = (year_picker__temp = year_picker__class = function (_Component) {
    inherits_default()(YearPicker, _Component);

    function YearPicker(props, context) {
        classCallCheck_default()(this, YearPicker);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this.onValueChange = function (newValue) {
            var ret = _this.state.inputAsString && newValue ? newValue.format(_this.props.format) : newValue;
            _this.props.onChange(ret);
        };

        _this.onSelectCalendarPanel = function (value) {
            // const { format } = this.props;
            var prevSelectedMonth = _this.state.value;
            var selectedMonth = value.clone().month(0).date(1).hour(0).minute(0).second(0);

            _this.handleChange(selectedMonth, prevSelectedMonth, { inputing: false }, function () {
                _this.onVisibleChange(false, 'calendarSelect');
            });
        };

        _this.clearValue = function () {
            _this.setState({
                dateInputStr: ''
            });

            _this.handleChange(null, _this.state.value);
        };

        _this.onDateInputChange = function (inputStr, e, eventType) {
            if (eventType === 'clear' || !inputStr) {
                e.stopPropagation();
                _this.clearValue();
            } else {
                _this.setState({
                    dateInputStr: inputStr,
                    inputing: true
                });
            }
        };

        _this.onDateInputBlur = function () {
            var dateInputStr = _this.state.dateInputStr;

            if (dateInputStr) {
                var _this$props = _this.props,
                    disabledDate = _this$props.disabledDate,
                    format = _this$props.format;

                var parsed = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(dateInputStr, format, true);

                _this.setState({
                    dateInputStr: '',
                    inputing: false
                });

                if (parsed.isValid() && !disabledDate(parsed, 'year')) {
                    _this.handleChange(parsed, _this.state.value);
                }
            }
        };

        _this.onKeyDown = function (e) {
            var format = _this.props.format;
            var _this$state = _this.state,
                dateInputStr = _this$state.dateInputStr,
                value = _this$state.value;

            var dateStr = onDateKeydown(e, { format: format, dateInputStr: dateInputStr, value: value }, 'year');
            if (!dateStr) return;
            _this.onDateInputChange(dateStr);
        };

        _this.handleChange = function (newValue, prevValue) {
            var others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var callback = arguments[3];

            if (!('value' in _this.props)) {
                _this.setState(extends_default()({
                    value: newValue
                }, others));
            } else {
                _this.setState(extends_default()({}, others));
            }

            var format = _this.props.format;


            var newValueOf = newValue ? newValue.format(format) : null;
            var preValueOf = prevValue ? prevValue.format(format) : null;

            if (newValueOf !== preValueOf) {
                _this.onValueChange(newValue);
                if (typeof callback === 'function') {
                    return callback();
                }
            }
        };

        _this.onVisibleChange = function (visible, reason) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, reason);
        };

        _this.state = {
            value: util_formatDateValue(props.defaultValue, props.format),
            dateInputStr: '',
            inputing: false,
            visible: props.defaultVisible,
            inputAsString: typeof props.defaultValue === 'string' // 判断用户输入是否是字符串
        };
        return _this;
    }

    YearPicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var states = {};
        if ('value' in props) {
            states.value = util_formatDateValue(props.value, props.format);
            states.inputAsString = typeof props.value === 'string';
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return states;
    };

    YearPicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(value, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            label
        );
    };

    YearPicker.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            format = _props2.format,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            dateInputAriaLabel = _props2.dateInputAriaLabel,
            yearCellRender = _props2.yearCellRender,
            isPreview = _props2.isPreview,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'format', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'dateInputAriaLabel', 'yearCellRender', 'isPreview']);

        var _state = this.state,
            visible = _state.visible,
            value = _state.value,
            dateInputStr = _state.dateInputStr,
            inputing = _state.inputing;


        var yearPickerCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'year-picker'] = true, _classnames), className);

        var triggerInputCls = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'year-picker-input'] = true, _classnames2[prefix + 'error'] = false, _classnames2));

        var panelBodyClassName = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'year-picker-body'] = true, _classnames3));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(util_obj.pickOthers(others, YearPicker.PropTypes));
        }

        var panelInputCls = prefix + 'year-picker-panel-input';

        var sharedInputProps = extends_default()({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onKeyDown
        });

        var dateInputValue = inputing ? dateInputStr : value && value.format(format) || '';
        var triggerInputValue = dateInputValue;

        var dateInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
            'aria-label': dateInputAriaLabel,
            value: dateInputValue,
            placeholder: format,
            className: panelInputCls
        }));

        var datePanel = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_calendar, {
            shape: 'panel',
            modes: ['year'],
            value: value,
            yearCellRender: yearCellRender,
            onSelect: this.onSelectCalendarPanel,
            disabledDate: disabledDate
        });

        var panelBody = datePanel;
        var panelFooter = footerRender();

        var allowClear = value && hasClear;
        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'year-picker-trigger' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                label: label,
                state: state,
                value: triggerInputValue,
                role: 'combobox',
                'aria-expanded': visible,
                readOnly: true,
                placeholder: placeholder || locale.yearPlaceholder,
                hint: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    type: 'calendar',
                    className: prefix + 'date-picker-symbol-calendar-icon'
                }),
                hasClear: allowClear,
                className: triggerInputCls
            }))
        );

        var PopupComponent = popupComponent ? popupComponent : year_picker_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(YearPicker.propTypes, others), {
                className: yearPickerCls
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComponent,
                extends_default()({
                    autoFocus: true,
                    align: popupAlign
                }, popupProps, {
                    followTrigger: followTrigger,
                    disabled: disabled,
                    visible: visible,
                    onVisibleChange: this.onVisibleChange,
                    triggerType: popupTriggerType,
                    container: popupContainer,
                    style: popupStyle,
                    className: popupClassName,
                    trigger: trigger
                }),
                popupContent ? popupContent : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { dir: others.dir, className: panelBodyClassName },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            className: prefix + 'year-picker-panel-header'
                        },
                        dateInput
                    ),
                    panelBody,
                    panelFooter
                )
            )
        );
    };

    return YearPicker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), year_picker__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框内置标签
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 日期值（受控）moment 对象
     */
    value: util_checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: util_checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 输入框尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示状态
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} reason 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式, 具体含义见 OverLay文档
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层其他属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _prop_types_15_8_1_prop_types_default.a.object,
    yearCellRender: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x yearCellRender
    /**
     * 日期输入框的 aria-label 属性
     */
    dateInputAriaLabel: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 年份
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    name: _prop_types_15_8_1_prop_types_default.a.string,
    popupComponent: _prop_types_15_8_1_prop_types_default.a.elementType,
    popupContent: _prop_types_15_8_1_prop_types_default.a.node
}, year_picker__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'YYYY',
    size: 'medium',
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: locale_zh_cn.DatePicker,
    onChange: func.noop,
    onVisibleChange: func.noop
}, year_picker__temp);
year_picker_YearPicker.displayName = 'YearPicker';


/* harmony default export */ var year_picker = (Object(react_lifecycles_compat_es["polyfill"])(year_picker_YearPicker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/week-picker.js






var week_picker__class, week_picker__temp, week_picker__initialiseProps;















var week_picker_Popup = next_es_overlay.Popup;

/**
 * DatePicker.WeekPicker
 */

var week_picker_WeekPicker = (week_picker__temp = week_picker__class = function (_Component) {
    inherits_default()(WeekPicker, _Component);

    function WeekPicker(props, context) {
        classCallCheck_default()(this, WeekPicker);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        week_picker__initialiseProps.call(_this);

        var value = util_formatDateValue(props.value || props.defaultValue, props.format);

        _this.state = {
            value: value,
            visible: props.visible || props.defaultVisible
        };
        return _this;
    }

    WeekPicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var st = {};
        if ('value' in props) {
            st.value = util_formatDateValue(props.value, props.format);
        }

        if ('visible' in props) {
            st.visible = props.visible;
        }

        return st;
    };

    WeekPicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(value, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            label
        );
    };

    WeekPicker.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            format = _props2.format,
            defaultVisibleMonth = _props2.defaultVisibleMonth,
            onVisibleMonthChange = _props2.onVisibleMonthChange,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            isPreview = _props2.isPreview,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'format', 'defaultVisibleMonth', 'onVisibleMonthChange', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'monthCellRender', 'yearCellRender', 'isPreview']);

        var _state = this.state,
            visible = _state.visible,
            value = _state.value;


        var sharedInputProps = extends_default()({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onKeyDown: this.onKeyDown
        });

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(util_obj.pickOthers(others, WeekPicker.PropTypes));
        }

        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'week-picker-trigger' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                label: label,
                state: state,
                value: value ? value.format(format) : '',
                role: 'combobox',
                'aria-expanded': visible,
                readOnly: true,
                placeholder: placeholder || locale.weekPlaceholder,
                hint: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' }),
                hasClear: value && hasClear,
                className: prefix + 'week-picker-input'
            }))
        );

        var PopupComponent = popupComponent ? popupComponent : week_picker_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(WeekPicker.propTypes, others), {
                className: _classnames_2_3_1_classnames_default()(prefix + 'week-picker', className)
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComponent,
                extends_default()({
                    align: popupAlign
                }, popupProps, {
                    followTrigger: followTrigger,
                    disabled: disabled,
                    visible: visible,
                    onVisibleChange: this.onVisibleChange,
                    triggerType: popupTriggerType,
                    container: popupContainer,
                    style: popupStyle,
                    className: popupClassName,
                    trigger: trigger
                }),
                popupContent ? popupContent : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { dir: others.dir, className: prefix + 'week-picker-body' },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_calendar, {
                        shape: 'panel',
                        value: value,
                        format: format,
                        className: prefix + 'calendar-week',
                        dateCellRender: this.dateRender,
                        monthCellRender: monthCellRender,
                        yearCellRender: yearCellRender,
                        onSelect: this.onSelectCalendarPanel,
                        defaultVisibleMonth: defaultVisibleMonth,
                        onVisibleMonthChange: onVisibleMonthChange,
                        disabledDate: disabledDate
                    }),
                    footerRender()
                )
            )
        );
    };

    return WeekPicker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), week_picker__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框内置标签
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 默认展现的月
     * @return {MomentObject} 返回包含指定月份的 moment 对象实例
     */
    defaultVisibleMonth: _prop_types_15_8_1_prop_types_default.a.func,
    onVisibleMonthChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期值（受控）moment 对象
     */
    value: util_checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: util_checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 输入框尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示状态
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式,具体含义见 OverLay文档
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层其他属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义日期渲染函数
     * @param {Object} value 日期值（moment对象）
     * @returns {ReactNode}
     */
    dateCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 年份
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    yearCellRender: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x yearCellRender
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    name: _prop_types_15_8_1_prop_types_default.a.string,
    popupComponent: _prop_types_15_8_1_prop_types_default.a.elementType,
    popupContent: _prop_types_15_8_1_prop_types_default.a.node
}), week_picker__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'GGGG-Wo',
    size: 'medium',
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: locale_zh_cn.DatePicker,
    defaultVisible: false,
    onChange: func.noop,
    onVisibleChange: func.noop
}, week_picker__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.handleChange = function (newValue, prevValue) {
        if (!('value' in _this2.props)) {
            _this2.setState({
                value: newValue
            });
        }

        var newValueOf = newValue ? newValue.valueOf() : null;
        var preValueOf = prevValue ? prevValue.valueOf() : null;

        if (newValueOf !== preValueOf) {
            _this2.props.onChange(newValue);
        }
    };

    this.onDateInputChange = function (value, e, eventType) {
        if (eventType === 'clear' || !value) {
            e.stopPropagation();
            _this2.handleChange(null, _this2.state.value);
        }
    };

    this.onKeyDown = function (e) {
        if ([KEYCODE.UP, KEYCODE.DOWN, KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) {
            return;
        }

        if (e.altKey && [KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) {
            return;
        }

        var date = _this2.state.value;

        if (date && date.isValid()) {
            var stepUnit = e.altKey ? 'year' : 'month';
            switch (e.keyCode) {
                case KEYCODE.UP:
                    date.subtract(1, 'w');
                    break;
                case KEYCODE.DOWN:
                    date.add(1, 'w');
                    break;
                case KEYCODE.PAGE_UP:
                    date.subtract(1, stepUnit);
                    break;
                case KEYCODE.PAGE_DOWN:
                    date.add(1, stepUnit);
                    break;
            }
        } else {
            date = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()();
        }

        e.preventDefault();

        _this2.handleChange(date, _this2.state.value);
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this2.props)) {
            _this2.setState({
                visible: visible
            });
        }
        _this2.props.onVisibleChange(visible, type);
    };

    this.onSelectCalendarPanel = function (value) {
        _this2.handleChange(value, _this2.state.value);
        _this2.onVisibleChange(false, 'calendarSelect');
    };

    this.dateRender = function (value) {
        var _props3 = _this2.props,
            prefix = _props3.prefix,
            dateCellRender = _props3.dateCellRender;

        var selectedValue = _this2.state.value;
        var content = dateCellRender && typeof dateCellRender === 'function' ? dateCellRender(value) : value.dates();
        if (selectedValue && selectedValue.years() === value.years() && selectedValue.weeks() === value.weeks()) {
            var _classnames;

            var firstDay = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.localeData().firstDayOfWeek();
            var endDay = firstDay - 1 < 0 ? 6 : firstDay - 1;
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: _classnames_2_3_1_classnames_default()(prefix + 'calendar-week-active-date', (_classnames = {}, _classnames[prefix + 'calendar-week-active-start'] = value.days() === external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default.a.localeData().firstDayOfWeek(), _classnames[prefix + 'calendar-week-active-end'] = value.days() === endDay, _classnames))
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    null,
                    content
                )
            );
        }

        return content;
    };
}, week_picker__temp);
week_picker_WeekPicker.displayName = 'WeekPicker';


/* harmony default export */ var week_picker = (Object(react_lifecycles_compat_es["polyfill"])(week_picker_WeekPicker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker/index.js








/* istanbul ignore next */
var date_picker_transform = function transform(props, deprecated) {
    var open = props.open,
        defaultOpen = props.defaultOpen,
        onOpenChange = props.onOpenChange,
        others = objectWithoutProperties_default()(props, ['open', 'defaultOpen', 'onOpenChange']);

    var newProps = others;

    delete newProps.formater;

    if ('open' in props) {
        deprecated('open', 'visible', 'DatePicker');

        newProps.visible = open;

        if ('visible' in props) {
            newProps.visible = props.visible;
        }
    }

    if ('defaultOpen' in props) {
        deprecated('defaultOpen', 'defaultVisible', 'DatePicker');

        newProps.defaultVisible = defaultOpen;

        if ('defaultVisible' in props) {
            newProps.defaultVisible = props.defaultVisible;
        }
    }

    if ('onOpenChange' in props && typeof onOpenChange === 'function') {
        deprecated('onOpenChange', 'onVisibleChange', 'DatePicker');

        newProps.onVisibleChange = onOpenChange;

        if ('onVisibleChange' in props) {
            newProps.onVisibleChange = props.onVisibleChange;
        }
    }

    if ('formater' in props) {
        deprecated('formater', 'format showTime.format', 'DatePicker');
    }

    if ('format' in props && typeof props.format !== 'string') {
        deprecated('format', 'format: PropTypes.string,', 'DatePicker');
    }

    if ('ranges' in props) {
        deprecated('ranges', 'footerRender: PropTypes.func', 'RangePicker');
    }

    return newProps;
};

date_picker.RangePicker = config_provider.config(range_picker, {
    componentName: 'DatePicker',
    transform: date_picker_transform
});
date_picker.MonthPicker = config_provider.config(month_picker, {
    componentName: 'DatePicker',
    transform: date_picker_transform
});
date_picker.YearPicker = config_provider.config(year_picker, {
    componentName: 'DatePicker',
    transform: date_picker_transform
});

date_picker.WeekPicker = config_provider.config(week_picker, {
    componentName: 'DatePicker'
});

/* harmony default export */ var es_date_picker = (config_provider.config(date_picker, {
    transform: date_picker_transform
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dialog/inner.js





var dialog_inner__class, dialog_inner__temp;









var inner_makeChain = func.makeChain;
var inner_pickOthers = util_obj.pickOthers;

var dialog_inner_noop = function noop() {};

var inner_Inner = (dialog_inner__temp = dialog_inner__class = function (_Component) {
    inherits_default()(Inner, _Component);

    function Inner() {
        classCallCheck_default()(this, Inner);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Inner.prototype.componentDidUpdate = function componentDidUpdate() {
        var _props = this.props,
            maxHeight = _props.maxHeight,
            _props$height = _props.height,
            pheight = _props$height === undefined ? maxHeight : _props$height,
            v2 = _props.v2;

        if (this.bodyNode && v2 && pheight && pheight !== 'auto') {
            var style = {};
            var headerHeight = 0,
                footerHeight = 0;
            if (this.headerNode) {
                headerHeight = this.headerNode.getBoundingClientRect().height;
            }
            if (this.footerNode) {
                footerHeight = this.footerNode.getBoundingClientRect().height;
            }
            var minHeight = headerHeight + footerHeight;
            style.minHeight = minHeight;

            var height = pheight;
            if (pheight && typeof pheight === 'string') {
                if (height.match(/calc|vh/)) {
                    style.maxHeight = 'calc(' + pheight + ' - ' + minHeight + 'px)';
                    style.overflowY = 'auto';
                } else {
                    height = parseInt(pheight);
                }
            }

            if (typeof height === 'number' && height > minHeight) {
                style.maxHeight = height - minHeight;
                style.overflowY = 'auto';
            }

            util_dom.setStyle(this.bodyNode, style);
        }
    };

    Inner.prototype.getNode = function getNode(name, ref) {
        this[name] = ref;
    };

    Inner.prototype.renderHeader = function renderHeader() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            title = _props2.title;

        if (title) {
            this.titleId = util_guid('dialog-title-');
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: prefix + 'dialog-header',
                    id: this.titleId,
                    ref: this.getNode.bind(this, 'headerNode'),
                    role: 'heading',
                    'aria-level': '1'
                },
                title
            );
        }
        return null;
    };

    Inner.prototype.renderBody = function renderBody() {
        var _props3 = this.props,
            prefix = _props3.prefix,
            children = _props3.children;

        if (children) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'dialog-body', ref: this.getNode.bind(this, 'bodyNode') },
                children
            );
        }
        return null;
    };

    Inner.prototype.renderFooter = function renderFooter() {
        var _cx,
            _this2 = this;

        var _props4 = this.props,
            prefix = _props4.prefix,
            footer = _props4.footer,
            footerAlign = _props4.footerAlign,
            footerActions = _props4.footerActions,
            locale = _props4.locale,
            height = _props4.height;


        if (footer === false) {
            return null;
        }

        var newClassName = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'dialog-footer'] = true, _cx[prefix + 'align-' + footerAlign] = true, _cx[prefix + 'dialog-footer-fixed-height'] = !!height, _cx));
        var footerContent = footer === true || !footer ? footerActions.map(function (action) {
            var btnProps = _this2.props[action + 'Props'];
            var newBtnProps = extends_default()({}, btnProps, {
                prefix: prefix,
                className: _classnames_2_3_1_classnames_default()(prefix + 'dialog-btn', btnProps.className),
                onClick: inner_makeChain(_this2.props['on' + (action[0].toUpperCase() + action.slice(1))], btnProps.onClick),
                children: btnProps.children || locale[action]
            });
            if (action === 'ok') {
                newBtnProps.type = 'primary';
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_button, extends_default()({ key: action }, newBtnProps));
        }) : footer;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: newClassName, ref: this.getNode.bind(this, 'footerNode') },
            footerContent
        );
    };

    Inner.prototype.renderCloseLink = function renderCloseLink() {
        var _props5 = this.props,
            prefix = _props5.prefix,
            closeable = _props5.closeable,
            onClose = _props5.onClose,
            locale = _props5.locale,
            closeIcon = _props5.closeIcon;


        if (closeable) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'a',
                { role: 'button', 'aria-label': locale.close, className: prefix + 'dialog-close', onClick: onClose },
                closeIcon ? closeIcon : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: prefix + 'dialog-close-icon', type: 'close' })
            );
        }

        return null;
    };

    Inner.prototype.render = function render() {
        var _cx2;

        var _props6 = this.props,
            prefix = _props6.prefix,
            className = _props6.className,
            closeable = _props6.closeable,
            title = _props6.title,
            role = _props6.role,
            rtl = _props6.rtl;

        var others = inner_pickOthers(Object.keys(Inner.propTypes), this.props);
        var newClassName = _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'dialog'] = true, _cx2[prefix + 'closeable'] = closeable, _cx2[className] = !!className, _cx2));

        var header = this.renderHeader();
        var body = this.renderBody();
        var footer = this.renderFooter();
        var closeLink = this.renderCloseLink();

        var ariaProps = {
            role: role,
            'aria-modal': 'true'
        };
        if (title) {
            ariaProps['aria-labelledby'] = this.titleId;
        }

        var width = others.style && others.style.width;
        others.style = extends_default()({}, others.style, util_obj.pickProps(['height', 'maxHeight', 'width'], this.props));
        // 兼容 v1 style={width} 用法, 这里增加了 width api， 导致 style.width 优先级低了
        if (width) {
            others.style.width = width;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, ariaProps, { className: newClassName }, others, { dir: rtl ? 'rtl' : undefined }),
            header,
            body,
            footer,
            closeLink
        );
    };

    return Inner;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), dialog_inner__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    title: _prop_types_15_8_1_prop_types_default.a.node,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    footer: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.node]),
    footerAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'center', 'right']),
    footerActions: _prop_types_15_8_1_prop_types_default.a.array,
    onOk: _prop_types_15_8_1_prop_types_default.a.func,
    onCancel: _prop_types_15_8_1_prop_types_default.a.func,
    okProps: _prop_types_15_8_1_prop_types_default.a.object,
    cancelProps: _prop_types_15_8_1_prop_types_default.a.object,
    closeable: _prop_types_15_8_1_prop_types_default.a.bool,
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    role: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    width: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    // set value for a fixed height dialog. Passing a value will absolutely position the footer to the bottom.
    height: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    maxHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    v2: _prop_types_15_8_1_prop_types_default.a.bool,
    closeIcon: _prop_types_15_8_1_prop_types_default.a.node,
    pure: _prop_types_15_8_1_prop_types_default.a.bool
}, dialog_inner__class.defaultProps = {
    prefix: 'next-',
    footerAlign: 'right',
    footerActions: ['ok', 'cancel'],
    onOk: dialog_inner_noop,
    onCancel: dialog_inner_noop,
    okProps: {},
    cancelProps: {},
    closeable: true,
    onClose: dialog_inner_noop,
    locale: locale_zh_cn.Dialog,
    role: 'dialog'
}, dialog_inner__temp);
inner_Inner.displayName = 'Inner';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dialog/dialog.js






var dialog__class, dialog__temp;








var dialog_noop = function noop() {};
var dialog_limitTabRange = util_focus.limitTabRange;
var dialog_bindCtx = func.bindCtx;
var dialog_pickOthers = util_obj.pickOthers;
var dialog_getStyle = util_dom.getStyle,
    dialog_setStyle = util_dom.setStyle;

// [fix issue #1609](https://github.com/alibaba-fusion/next/issues/1609)
// https://stackoverflow.com/questions/19717907/getcomputedstyle-reporting-different-heights-between-chrome-safari-firefox-and-i

function dialog__getSize(dom, name) {
    var boxSizing = dialog_getStyle(dom, 'boxSizing');

    if (util_env.ieVersion && ['width', 'height'].indexOf(name) !== -1 && boxSizing === 'border-box') {
        return parseFloat(dom.getBoundingClientRect()[name].toFixed(1));
    } else {
        return dialog_getStyle(dom, name);
    }
}

/**
 * Dialog
 */
var dialog_Dialog = (dialog__temp = dialog__class = function (_Component) {
    inherits_default()(Dialog, _Component);

    function Dialog(props, context) {
        classCallCheck_default()(this, Dialog);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        dialog_bindCtx(_this, ['onKeyDown', 'beforePosition', 'adjustPosition', 'getOverlayRef']);
        return _this;
    }

    Dialog.prototype.componentDidMount = function componentDidMount() {
        util_events.on(document, 'keydown', this.onKeyDown);
        if (!this.useCSSToPosition()) {
            this.adjustPosition();
        }
    };

    Dialog.prototype.componentWillUnmount = function componentWillUnmount() {
        util_events.off(document, 'keydown', this.onKeyDown);
    };

    Dialog.prototype.useCSSToPosition = function useCSSToPosition() {
        var _props = this.props,
            align = _props.align,
            isFullScreen = _props.isFullScreen;

        return align === 'cc cc' && isFullScreen;
    };

    Dialog.prototype.onKeyDown = function onKeyDown(e) {
        var node = this.getInnerNode();
        if (node) {
            dialog_limitTabRange(node, e);
        }
    };

    Dialog.prototype.beforePosition = function beforePosition() {
        if (this.props.visible && this.overlay) {
            var inner = this.getInner();
            if (inner) {
                var node = this.getInnerNode();
                if (this._lastDialogHeight !== dialog__getSize(node, 'height')) {
                    this.revertSize(inner.bodyNode);
                }
            }
        }
    };

    Dialog.prototype.adjustPosition = function adjustPosition() {
        if (this.props.visible && this.overlay) {
            var inner = this.getInner();
            if (inner) {
                var node = this.getInnerNode();

                var top = dialog_getStyle(node, 'top');
                var minMargin = this.props.minMargin;
                if (top < minMargin) {
                    top = minMargin;
                    dialog_setStyle(node, 'top', minMargin + 'px');
                }

                var height = dialog__getSize(node, 'height');
                var viewportHeight = window.innerHeight || document.documentElement.clientHeight;

                if (viewportHeight < height + top * 2 - 1 || // 分辨率和精确度的原因 高度计算的时候 可能会有1px内的偏差
                this.props.height) {
                    this.adjustSize(inner, node, Math.min(height, viewportHeight - top * 2));
                } else {
                    this.revertSize(inner.bodyNode);
                }

                this._lastDialogHeight = height;
            }
        }
    };

    Dialog.prototype.adjustSize = function adjustSize(inner, node, expectHeight) {
        var headerNode = inner.headerNode,
            bodyNode = inner.bodyNode,
            footerNode = inner.footerNode;

        var _map = [headerNode, footerNode].map(function (node) {
            return node ? dialog__getSize(node, 'height') : 0;
        }),
            headerHeight = _map[0],
            footerHeight = _map[1];

        var padding = ['padding-top', 'padding-bottom'].reduce(function (sum, attr) {
            return sum + dialog_getStyle(node, attr);
        }, 0);

        var maxBodyHeight = expectHeight - headerHeight - footerHeight - padding;

        if (maxBodyHeight < 0) {
            maxBodyHeight = 1;
        }

        if (bodyNode) {
            this.dialogBodyStyleMaxHeight = bodyNode.style.maxHeight;
            this.dialogBodyStyleOverflowY = bodyNode.style.overflowY;

            dialog_setStyle(bodyNode, {
                'max-height': maxBodyHeight + 'px',
                'overflow-y': 'auto'
            });
        }
    };

    Dialog.prototype.revertSize = function revertSize(bodyNode) {
        dialog_setStyle(bodyNode, {
            'max-height': this.dialogBodyStyleMaxHeight,
            'overflow-y': this.dialogBodyStyleOverflowY
        });
    };

    Dialog.prototype.mapcloseableToConfig = function mapcloseableToConfig(closeable) {
        return ['esc', 'close', 'mask'].reduce(function (ret, option) {
            var key = option.charAt(0).toUpperCase() + option.substr(1);
            var value = typeof closeable === 'boolean' ? closeable : closeable.split(',').indexOf(option) > -1;

            if (option === 'esc' || option === 'mask') {
                ret['canCloseBy' + key] = value;
            } else {
                ret['canCloseBy' + key + 'Click'] = value;
            }

            return ret;
        }, {});
    };

    Dialog.prototype.getOverlayRef = function getOverlayRef(ref) {
        this.overlay = ref;
    };

    Dialog.prototype.getInner = function getInner() {
        return this.overlay.getInstance().getContent();
    };

    Dialog.prototype.getInnerNode = function getInnerNode() {
        return this.overlay.getInstance().getContentNode();
    };

    Dialog.prototype.renderInner = function renderInner(closeable) {
        var _props2 = this.props,
            prefix = _props2.prefix,
            className = _props2.className,
            title = _props2.title,
            children = _props2.children,
            footer = _props2.footer,
            footerAlign = _props2.footerAlign,
            footerActions = _props2.footerActions,
            onOk = _props2.onOk,
            onCancel = _props2.onCancel,
            okProps = _props2.okProps,
            cancelProps = _props2.cancelProps,
            onClose = _props2.onClose,
            locale = _props2.locale,
            visible = _props2.visible,
            rtl = _props2.rtl,
            height = _props2.height;

        var others = dialog_pickOthers(Object.keys(Dialog.propTypes), this.props);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            inner_Inner,
            extends_default()({
                prefix: prefix,
                className: className,
                title: title,
                footer: footer,
                footerAlign: footerAlign,
                footerActions: footerActions,
                onOk: visible ? onOk : dialog_noop,
                onCancel: visible ? onCancel : dialog_noop,
                okProps: okProps,
                cancelProps: cancelProps,
                locale: locale,
                closeable: closeable,
                rtl: rtl,
                onClose: onClose.bind(this, 'closeClick'),
                height: height
            }, others),
            children
        );
    };

    Dialog.prototype.render = function render() {
        var _props3 = this.props,
            prefix = _props3.prefix,
            visible = _props3.visible,
            hasMask = _props3.hasMask,
            animation = _props3.animation,
            autoFocus = _props3.autoFocus,
            closeable = _props3.closeable,
            closeMode = _props3.closeMode,
            onClose = _props3.onClose,
            afterClose = _props3.afterClose,
            shouldUpdatePosition = _props3.shouldUpdatePosition,
            align = _props3.align,
            popupContainer = _props3.popupContainer,
            cache = _props3.cache,
            overlayProps = _props3.overlayProps,
            rtl = _props3.rtl;


        var useCSS = this.useCSSToPosition();
        var newCloseable = 'closeMode' in this.props ? Array.isArray(closeMode) ? closeMode.join(',') : closeMode : closeable;

        var _mapcloseableToConfig = this.mapcloseableToConfig(newCloseable),
            canCloseByCloseClick = _mapcloseableToConfig.canCloseByCloseClick,
            closeConfig = objectWithoutProperties_default()(_mapcloseableToConfig, ['canCloseByCloseClick']);

        var newOverlayProps = extends_default()({
            disableScroll: true,
            container: popupContainer,
            cache: cache
        }, overlayProps, {
            prefix: prefix,
            visible: visible,
            animation: animation,
            hasMask: hasMask,
            autoFocus: autoFocus,
            afterClose: afterClose
        }, closeConfig, {
            canCloseByOutSideClick: false,
            align: useCSS ? false : align,
            onRequestClose: onClose,
            needAdjust: false,
            ref: this.getOverlayRef,
            rtl: rtl,
            maskClass: useCSS ? prefix + 'dialog-container' : '',
            isChildrenInMask: useCSS && hasMask
        });
        if (!useCSS) {
            newOverlayProps.beforePosition = this.beforePosition;
            newOverlayProps.onPosition = this.adjustPosition;
            newOverlayProps.shouldUpdatePosition = shouldUpdatePosition;
        }

        var inner = this.renderInner(canCloseByCloseClick);

        // useCSS && hasMask : isFullScreen 并且 有mask的模式下，为了解决 next-overlay-backdrop 覆盖mask，使得点击mask关闭页面的功能不生效的问题，需要开启 Overlay 的 isChildrenInMask 功能，并且把 next-dialog-container 放到 next-overlay-backdrop上
        // useCSS && !hasMask : isFullScreen 并且 没有mask的情况下，需要关闭 isChildrenInMask 功能，以防止children不渲染
        // 其他模式下维持 mask 与 children 同级的关系
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            next_es_overlay,
            newOverlayProps,
            useCSS && !hasMask ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'dialog-container', dir: rtl ? 'rtl' : undefined },
                inner
            ) : inner
        );
    };

    return Dialog;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), dialog__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 底部内容，设置为 false，则不进行显示
     * @default [<Button type="primary">确定</Button>, <Button>取消</Button>]
     */
    footer: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.node]),
    /**
     * 底部按钮的对齐方式
     */
    footerAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'center', 'right']),
    /**
     * 指定确定按钮和取消按钮是否存在以及如何排列,<br><br>**可选值**：
     * ['ok', 'cancel']（确认取消按钮同时存在，确认按钮在左）
     * ['cancel', 'ok']（确认取消按钮同时存在，确认按钮在右）
     * ['ok']（只存在确认按钮）
     * ['cancel']（只存在取消按钮）
     */
    footerActions: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 在点击确定按钮时触发的回调函数
     * @param {Object} event 点击事件对象
     */
    onOk: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 在点击取消/关闭按钮时触发的回调函数
     * @param {Object} event 点击事件对象, event.triggerType=esc|closeIcon 可区分点击来源
     */
    onCancel: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 应用于确定按钮的属性对象
     */
    okProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 应用于取消按钮的属性对象
     */
    cancelProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * [推荐]1.21.x 支持控制对话框关闭的方式，值可以为字符串或者数组，其中字符串、数组均为以下值的枚举：
     * **close** 表示点击关闭按钮可以关闭对话框
     * **mask** 表示点击遮罩区域可以关闭对话框
     * **esc** 表示按下 esc 键可以关闭对话框
     * 如 'close' 或 ['close','esc','mask'], []
     * @version 1.21
     */
    closeMode: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOf(['close', 'mask', 'esc'])), _prop_types_15_8_1_prop_types_default.a.oneOf(['close', 'mask', 'esc'])]),
    /**
     * 隐藏时是否保留子节点，不销毁 （低版本通过 overlayProps 实现）
     * @version 1.23
     */
    cache: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 对话框关闭后触发的回调函数, 如果有动画，则在动画结束后触发
     */
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否显示遮罩
     */
    hasMask: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 显示隐藏时动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画。 请参考 Animate 组件的文档获取可用的动画名
     * @default { in: 'expandInDown', out: 'expandOutUp' }
     */
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * 对话框弹出时是否自动获得焦点
     */
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 透传到弹层组件的属性对象
     */
    overlayProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义国际化文案对象
     * @property {String} ok 确认按钮文案
     * @property {String} cancel 取消按钮文案
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    // Do not remove this, it's for <ConfigProvider popupContainer={} />
    // see https://github.com/alibaba-fusion/next/issues/1508
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 对话框的高度样式属性
     */
    height: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 开启 v2 版本弹窗
     */
    v2: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2] 弹窗宽度
     * @version 1.25
     */
    width: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * [v2] 弹窗上边距。默认 100，设置 centered=true 后默认 40
     * @version 1.25
     */
    top: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * [v2] 弹窗下边距
     * @version 1.25
     */
    bottom: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * [v2] 定制关闭按钮 icon
     * @version 1.25
     */
    closeIcon: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * [v2] 弹窗居中对齐
     * @version 1.25
     */
    centered: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2] 对话框高度超过浏览器视口高度时，对话框是否展示滚动条。关闭此功后对话框会随高度撑开页面
     * @version 1.25
     */
    overflowScroll: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [废弃]同closeMode, 控制对话框关闭的方式，值可以为字符串或者布尔值，其中字符串是由以下值组成：
     * **close** 表示点击关闭按钮可以关闭对话框
     * **mask** 表示点击遮罩区域可以关闭对话框
     * **esc** 表示按下 esc 键可以关闭对话框
     * 如 'close' 或 'close,esc,mask'
     * 如果设置为 true，则以上关闭方式全部生效
     * 如果设置为 false，则以上关闭方式全部失效
     */
    closeable: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * 点击对话框关闭按钮时触发的回调函数
     * @param {String} trigger 关闭触发行为的描述字符串
     * @param {Object} event 关闭时事件对象
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * [v2废弃] 对话框对齐方式, 具体见Overlay文档
     */
    align: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * [v2废弃] 是否撑开页面。 v2 改用 overflowScroll
     */
    isFullScreen: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2废弃] 是否在对话框重新渲染时及时更新对话框位置，一般用于对话框高度变化后依然能保证原来的对齐方式
     */
    shouldUpdatePosition: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [v2废弃] 对话框距离浏览器顶部和底部的最小间距，align 被设置为 'cc cc' 并且 isFullScreen 被设置为 true 时不生效
     */
    minMargin: _prop_types_15_8_1_prop_types_default.a.number
}, dialog__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    visible: false,
    footerAlign: 'right',
    footerActions: ['ok', 'cancel'],
    onOk: dialog_noop,
    onCancel: dialog_noop,
    cache: false,
    okProps: {},
    cancelProps: {},
    closeable: 'esc,close',
    onClose: dialog_noop,
    afterClose: dialog_noop,
    centered: false,
    hasMask: true,
    animation: {
        in: 'fadeInUp',
        out: 'fadeOutUp'
    },
    autoFocus: false,
    align: 'cc cc',
    isFullScreen: false,
    overflowScroll: true,
    shouldUpdatePosition: false,
    minMargin: 40,
    bottom: 40,
    overlayProps: {},
    locale: locale_zh_cn.Dialog
}, dialog__temp);
dialog_Dialog.displayName = 'Dialog';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dialog/scroll-locker.js


/**
 * https://github.com/alibaba-fusion/next/issues/3638
 * 通过栈的形式：解决弹窗关闭的时候对 document.body 上面的 style 恢复顺序问题
 * 问题复现步骤:
 *   1. dialog1 进来，把 body.style=overflow:hidden，如果关闭应该恢复 body.style=""
 *   2. dialog2 进来，把 body.style=overflow:hidden, 因为此时 body.style是verflow:hidden，所以如果关闭应该恢复 body.style="verflow:hidden"
 *   3. dialog1 关闭，恢复 body.style=""。造成问题：dialog2 页面可滚动
 *   4. dialog2 关闭，恢复 body.style="verflow:hidden"。造成问题：页面不可滚动
 * 解决方案：
 *   1. 每个 dialog 修改 body.style 的时候都 push 入栈
 *   2. 如果dialog1 先退出，发现 dialog2 存在则不做任何操作，把自己的恢复值给到 dialog2
 */

var lockcache = [];

function scroll_locker_lock(container, style) {
    var originStyle = container.getAttribute('style');
    var uuid = util_guid();
    lockcache.push({
        uuid: uuid,
        container: container,
        originStyle: originStyle
    });
    util_dom.setStyle(container, style);
    return uuid;
}

function unlock(container, uuid) {
    var list = lockcache.filter(function (i) {
        return i.container === container;
    });
    var item = list.find(function (i) {
        return i.uuid === uuid;
    });
    if (item) {
        var idx = list.indexOf(item);
        // 解锁的时候，链表有新增。说明 container style 已经被其他 Dialog 修改过了
        if (idx !== -1 && idx < list.length - 1) {
            var originStyle = item.originStyle;
            // 下一个 dialog 解锁的时候直接替换为
            list[idx + 1].originStyle = originStyle;
            lockcache.splice(lockcache.indexOf(item), 1);

            return;
        }

        container.setAttribute('style', item.originStyle || '');
        lockcache.pop();
    }
}

/* harmony default export */ var scroll_locker = ({
    lock: scroll_locker_lock,
    unlock: unlock
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dialog/dialog-v2.js


/* istanbul ignore file */











var dialog_v2_OverlayContext = es.OverlayContext;

var dialog_v2_noop = func.noop;

var dialog_v2_Dialog = function Dialog(props) {
    var _classNames, _classNames2, _classNames3;

    if (!external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"] || !external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"] || !external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"]) {
        log.warning('need react version > 16.8.0');
        return null;
    }

    var _props$prefix = props.prefix,
        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
        _props$afterClose = props.afterClose,
        afterClose = _props$afterClose === undefined ? dialog_v2_noop : _props$afterClose,
        _props$hasMask = props.hasMask,
        hasMask = _props$hasMask === undefined ? true : _props$hasMask,
        _props$autoFocus = props.autoFocus,
        autoFocus = _props$autoFocus === undefined ? false : _props$autoFocus,
        className = props.className,
        title = props.title,
        children = props.children,
        footer = props.footer,
        footerAlign = props.footerAlign,
        footerActions = props.footerActions,
        _props$onOk = props.onOk,
        onOk = _props$onOk === undefined ? dialog_v2_noop : _props$onOk,
        onCancel = props.onCancel,
        okProps = props.okProps,
        cancelProps = props.cancelProps,
        _props$locale = props.locale,
        locale = _props$locale === undefined ? locale_zh_cn.Dialog : _props$locale,
        rtl = props.rtl,
        pvisible = props.visible,
        _props$closeMode = props.closeMode,
        closeMode = _props$closeMode === undefined ? ['close', 'esc'] : _props$closeMode,
        closeIcon = props.closeIcon,
        _props$animation = props.animation,
        animation = _props$animation === undefined ? { in: 'fadeInUp', out: 'fadeOutUp' } : _props$animation,
        cache = props.cache,
        wrapperStyle = props.wrapperStyle,
        _props$popupContainer = props.popupContainer,
        popupContainer = _props$popupContainer === undefined ? document.body : _props$popupContainer,
        dialogRender = props.dialogRender,
        centered = props.centered,
        _props$top = props.top,
        top = _props$top === undefined ? centered ? 40 : 100 : _props$top,
        _props$bottom = props.bottom,
        bottom = _props$bottom === undefined ? 40 : _props$bottom,
        _props$width = props.width,
        width = _props$width === undefined ? 520 : _props$width,
        height = props.height,
        isFullScreen = props.isFullScreen,
        _props$overflowScroll = props.overflowScroll,
        overflowScroll = _props$overflowScroll === undefined ? !isFullScreen : _props$overflowScroll,
        minMargin = props.minMargin,
        onClose = props.onClose,
        style = props.style,
        others = objectWithoutProperties_default()(props, ['prefix', 'afterClose', 'hasMask', 'autoFocus', 'className', 'title', 'children', 'footer', 'footerAlign', 'footerActions', 'onOk', 'onCancel', 'okProps', 'cancelProps', 'locale', 'rtl', 'visible', 'closeMode', 'closeIcon', 'animation', 'cache', 'wrapperStyle', 'popupContainer', 'dialogRender', 'centered', 'top', 'bottom', 'width', 'height', 'isFullScreen', 'overflowScroll', 'minMargin', 'onClose', 'style']);

    if ('isFullScreen' in props) {
        log.deprecated('isFullScreen', 'overflowScroll', 'Dialog v2');
    }
    if ('minMargin' in props) {
        log.deprecated('minMargin', 'top/bottom', 'Dialog v2');
    }

    var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(pvisible || false),
        firstVisible = _useState[0],
        setFirst = _useState[1];

    var _useState2 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(pvisible),
        visible = _useState2[0],
        setVisible = _useState2[1];

    var getContainer = typeof popupContainer === 'string' ? function () {
        return document.getElementById(popupContainer);
    } : typeof popupContainer !== 'function' ? function () {
        return popupContainer;
    } : popupContainer;

    var _useState3 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(getContainer()),
        container = _useState3[0],
        setContainer = _useState3[1];

    var dialogRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
    var wrapperRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
    var lastFocus = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
    var locker = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);

    var _useState4 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(util_guid()),
        uuid = _useState4[0];

    var _useContext = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useContext"])(dialog_v2_OverlayContext),
        setVisibleOverlayToParent = _useContext.setVisibleOverlayToParent,
        otherContext = objectWithoutProperties_default()(_useContext, ['setVisibleOverlayToParent']);

    var childIDMap = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(new Map());
    var isAnimationEnd = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(false);

    var _useState5 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(),
        forceUpdate = _useState5[1];

    var markAnimationEnd = function markAnimationEnd(state) {
        isAnimationEnd.current = state;
        forceUpdate({});
    };

    var canCloseByEsc = false;
    var canCloseByMask = false;
    var closeable = false;

    var closeModeArray = Array.isArray(closeMode) ? closeMode : [closeMode];
    closeModeArray.forEach(function (mode) {
        switch (mode) {
            case 'esc':
                canCloseByEsc = true;
                break;
            case 'mask':
                canCloseByMask = true;
                break;
            case 'close':
                closeable = true;
                break;
        }
    });

    // visible 受控
    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        if ('visible' in props) {
            setVisible(pvisible);
        }
    }, [pvisible]);

    // 打开遮罩后 document.body 滚动处理
    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        if (visible && hasMask) {
            var _style = {
                overflow: 'hidden'
            };

            if (util_dom.hasScroll(document.body)) {
                var scrollWidth = util_dom.scrollbar().width;
                if (scrollWidth) {
                    _style.paddingRight = util_dom.getStyle(document.body, 'paddingRight') + util_dom.scrollbar().width + 'px';
                }
            }
            locker.current = scroll_locker.lock(document.body, _style);
        }
    }, [visible && hasMask]);

    var handleClose = function handleClose(targetType, e) {
        setVisibleOverlayToParent(uuid, null);
        typeof onClose === 'function' && onClose(targetType, e);
    };

    var keydownEvent = function keydownEvent(e) {
        if (e.keyCode === 27 && canCloseByEsc && !childIDMap.current.size) {
            handleClose('esc', e);
        }
    };

    // esc 键盘事件处理
    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        if (visible && canCloseByEsc) {
            document.body.addEventListener('keydown', keydownEvent, false);
            return function () {
                document.body.removeEventListener('keydown', keydownEvent, false);
            };
        }
    }, [visible && canCloseByEsc]);

    // 优化: 第一次加载并且 visible=false 的情况不挂载弹窗
    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        !firstVisible && visible && setFirst(true);
    }, [visible]);

    // container 异步加载情况
    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        if (!container) {
            setTimeout(function () {
                setContainer(getContainer());
            });
        }
    }, [container]);

    var handleExited = function handleExited() {
        if (!isAnimationEnd.current) {
            markAnimationEnd(true);
            util_dom.setStyle(wrapperRef.current, 'display', 'none');
            scroll_locker.unlock(document.body, locker.current);

            if (autoFocus && lastFocus.current) {
                try {
                    lastFocus.current.focus();
                } finally {
                    // ignore ...
                }
                lastFocus.current = null;
            }
            afterClose();
        }
    };

    Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
        return function () {
            handleExited();
        };
    }, []);

    if (firstVisible === false || !container) {
        return null;
    }

    if (!visible && !cache && isAnimationEnd.current) {
        return null;
    }

    var handleCancel = function handleCancel(e) {
        if (typeof onCancel === 'function') {
            onCancel(e);
        } else {
            handleClose('cancelBtn', e);
        }
    };

    var handleMaskClick = function handleMaskClick(e) {
        if (!canCloseByMask) {
            return;
        }

        if (e.type === 'click' && dialogRef.current) {
            var dialogNode = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(dialogRef.current);
            if (dialogNode && dialogNode.contains(e.target)) {
                return;
            }
        }

        handleClose('maskClick', e);
    };

    var handleEnter = function handleEnter() {
        markAnimationEnd(false);
        util_dom.setStyle(wrapperRef.current, 'display', '');
    };
    var handleEntered = function handleEntered() {
        if (autoFocus && dialogRef.current && dialogRef.current.bodyNode) {
            var focusableNodes = util_focus.getFocusNodeList(dialogRef.current.bodyNode);
            if (focusableNodes.length > 0 && focusableNodes[0]) {
                lastFocus.current = document.activeElement;
                focusableNodes[0].focus();
            }
        }
        setVisibleOverlayToParent(uuid, wrapperRef.current);
    };

    var wrapperCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'overlay-wrapper'] = true, _classNames.opened = visible, _classNames));
    var dialogCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'dialog-v2'] = true, _classNames2[className] = !!className, _classNames2));

    var topStyle = {};
    if (centered) {
        // 兼容 minMargin
        if (!top && !bottom && minMargin) {
            topStyle.marginTop = minMargin;
            topStyle.marginBottom = minMargin;
        } else {
            top && (topStyle.marginTop = top);
            bottom && (topStyle.marginBottom = bottom);
        }
    } else {
        top && (topStyle.top = top);
        bottom && (topStyle.paddingBottom = bottom);
    }

    var maxHeight = void 0;
    if (overflowScroll) {
        maxHeight = 'calc(100vh - ' + (top + bottom) + 'px)';
    }

    var timeout = {
        appear: 300,
        enter: 300,
        exit: 250
    };

    var inner = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        es_animate.OverlayAnimate,
        {
            visible: visible,
            animation: animation,
            timeout: timeout,
            onEnter: handleEnter,
            onEntered: handleEntered,
            onExited: handleExited
        },
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            inner_Inner,
            extends_default()({}, others, {
                style: centered ? extends_default()({}, topStyle, style) : style,
                v2: true,
                ref: dialogRef,
                prefix: prefix,
                className: dialogCls,
                title: title,
                footer: footer,
                footerAlign: footerAlign,
                footerActions: footerActions,
                onOk: visible ? onOk : dialog_v2_noop,
                onCancel: visible ? handleCancel : dialog_v2_noop,
                okProps: okProps,
                cancelProps: cancelProps,
                locale: locale,
                closeable: closeable,
                rtl: rtl,
                onClose: function onClose() {
                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                    }

                    return handleClose.apply(undefined, ['closeClick'].concat(args));
                },
                closeIcon: closeIcon,
                height: height,
                maxHeight: maxHeight,
                width: width
            }),
            children
        )
    );

    if (typeof dialogRender === 'function') {
        inner = dialogRender(inner);
    }

    var innerWrapperCls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'overlay-inner'] = true, _classNames3[prefix + 'dialog-wrapper'] = true, _classNames3[prefix + 'dialog-centered'] = centered, _classNames3));

    var getVisibleOverlayFromChild = function getVisibleOverlayFromChild(id, node) {
        if (node) {
            childIDMap.current.set(id, node);
        } else {
            childIDMap.current.delete(id);
        }
        // 让父级也感知
        setVisibleOverlayToParent(id, node);
    };

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        dialog_v2_OverlayContext.Provider,
        {
            value: extends_default()({}, otherContext, {
                setVisibleOverlayToParent: getVisibleOverlayFromChild
            })
        },
        external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.createPortal(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: wrapperCls, style: wrapperStyle, ref: wrapperRef },
            hasMask ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_animate.OverlayAnimate,
                {
                    visible: visible,
                    animation: animation ? { in: 'fadeIn', out: 'fadeOut' } : false,
                    timeout: timeout,
                    unmountOnExit: true
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'overlay-backdrop' })
            ) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: innerWrapperCls, onClick: handleMaskClick },
                centered ? inner : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { style: topStyle, className: prefix + 'dialog-inner-wrapper' },
                    inner
                )
            )
        ), container)
    );
};

/* harmony default export */ var dialog_v2 = (dialog_v2_Dialog);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/message/message.js





var message__class, message__temp2;











var message_noop = function noop() {};

/**
 * Message
 */
var message_Message = (message__temp2 = message__class = function (_Component) {
    inherits_default()(Message, _Component);

    function Message() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Message);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
            visible: typeof _this.props.visible === 'undefined' ? _this.props.defaultVisible : _this.props.visible
        }, _this.onClose = function () {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: false
                });
            }
            _this.props.onClose(false);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Message.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        if ('visible' in props) {
            return {
                visible: props.visible
            };
        }

        return {};
    };

    Message.prototype.render = function render() {
        var _classNames;

        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            pure = _props.pure,
            className = _props.className,
            style = _props.style,
            type = _props.type,
            shape = _props.shape,
            size = _props.size,
            title = _props.title,
            children = _props.children,
            defaultVisible = _props.defaultVisible,
            propsVisible = _props.visible,
            icon = _props.iconType,
            closeable = _props.closeable,
            onClose = _props.onClose,
            afterClose = _props.afterClose,
            animation = _props.animation,
            rtl = _props.rtl,
            locale = _props.locale;

        var others = extends_default()({}, util_obj.pickOthers(Object.keys(Message.propTypes), this.props));
        /* eslint-enable */
        var visible = this.state.visible;

        var messagePrefix = prefix + 'message';

        var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[messagePrefix] = true, _classNames[prefix + 'message-' + type] = type, _classNames['' + prefix + shape] = shape, _classNames['' + prefix + size] = size, _classNames[prefix + 'title-content'] = !!title, _classNames[prefix + 'only-content'] = !title && !!children, _classNames[className] = className, _classNames));

        var newChildren = visible ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                role: 'alert',
                style: style
            }, others, {
                className: classes,
                dir: rtl ? 'rtl' : undefined
            }),
            closeable ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'a',
                {
                    role: 'button',
                    'aria-label': locale.closeAriaLabel,
                    className: messagePrefix + '-close',
                    onClick: this.onClose
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'close' })
            ) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                className: messagePrefix + '-symbol ' + (!icon && messagePrefix + '-symbol-icon'),
                type: icon
            }),
            title ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: messagePrefix + '-title' },
                title
            ) : null,
            children ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: messagePrefix + '-content' },
                children
            ) : null
        ) : null;

        if (animation) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_animate.Expand,
                { animationAppear: false, afterLeave: afterClose },
                newChildren
            );
        }

        return newChildren;
    };

    return Message;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), message__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 反馈类型
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['success', 'warning', 'error', 'notice', 'help', 'loading']),
    /**
     * 反馈外观
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'addon', 'toast']),
    /**
     * 反馈大小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['medium', 'large']),
    /**
     * 标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当前是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 显示的图标类型，会覆盖内部设置的IconType
     */
    iconType: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 显示关闭按钮
     */
    closeable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 关闭按钮的回调
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 关闭之后调用的函数
     */
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否开启展开收起动画
     */
    animation: _prop_types_15_8_1_prop_types_default.a.bool,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, message__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    type: 'success',
    shape: 'inline',
    size: 'medium',
    defaultVisible: true,
    closeable: false,
    onClose: message_noop,
    afterClose: message_noop,
    animation: true,
    locale: locale_zh_cn.Message
}, message__temp2);
message_Message.displayName = 'Message';


/* harmony default export */ var message = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(message_Message)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/message/toast.js






var toast__class, toast__temp2;









var toast_config = config_provider.config;


var toast_instance = void 0;
var timeouts = {};

var toast_Mask = (toast__temp2 = toast__class = function (_React$Component) {
    inherits_default()(Mask, _React$Component);

    function Mask() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Mask);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            visible: true
        }, _this.handleClose = function () {
            var silent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            _this.setState({
                visible: false
            });

            if (!silent) {
                _this.props.onClose && _this.props.onClose();
            }
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Mask.prototype.componentWillUnmount = function componentWillUnmount() {
        var timeoutId = this.props.timeoutId;


        if (timeoutId in timeouts) {
            var timeout = timeouts[timeoutId];
            clearTimeout(timeout);
            delete timeouts[timeoutId];
        }
    };

    Mask.prototype.render = function render() {
        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            type = _props.type,
            title = _props.title,
            content = _props.content,
            align = _props.align,
            offset = _props.offset,
            hasMask = _props.hasMask,
            afterClose = _props.afterClose,
            animation = _props.animation,
            overlayProps = _props.overlayProps,
            timeoutId = _props.timeoutId,
            className = _props.className,
            style = _props.style,
            others = objectWithoutProperties_default()(_props, ['prefix', 'type', 'title', 'content', 'align', 'offset', 'hasMask', 'afterClose', 'animation', 'overlayProps', 'timeoutId', 'className', 'style']);
        /* eslint-enable */


        var visible = this.state.visible;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            next_es_overlay,
            extends_default()({}, overlayProps, {
                prefix: prefix,
                animation: animation,
                visible: visible,
                align: align,
                offset: offset,
                hasMask: hasMask,
                afterClose: afterClose
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                message,
                extends_default()({}, others, {
                    prefix: prefix,
                    visible: true,
                    type: type,
                    shape: 'toast',
                    title: title,
                    style: style,
                    className: prefix + 'message-wrapper ' + className,
                    onClose: this.handleClose
                }),
                content
            )
        );
    };

    return Mask;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), toast__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, toast__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    type: _prop_types_15_8_1_prop_types_default.a.string,
    title: _prop_types_15_8_1_prop_types_default.a.node,
    content: _prop_types_15_8_1_prop_types_default.a.node,
    align: _prop_types_15_8_1_prop_types_default.a.string,
    offset: _prop_types_15_8_1_prop_types_default.a.array,
    hasMask: _prop_types_15_8_1_prop_types_default.a.bool,
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool]),
    overlayProps: _prop_types_15_8_1_prop_types_default.a.object,
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    timeoutId: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, toast__class.defaultProps = {
    prefix: 'next-',
    align: 'tc tc',
    offset: [0, 30],
    hasMask: false,
    animation: {
        in: 'pulse',
        out: 'zoomOut'
    },
    style: {},
    className: ''
}, toast__temp2);
toast_Mask.displayName = 'Mask';


var NewMask = toast_config(toast_Mask);

var toast_create = function create(props) {
    /* eslint-disable no-unused-vars */
    var duration = props.duration,
        afterClose = props.afterClose,
        contextConfig = props.contextConfig,
        others = objectWithoutProperties_default()(props, ['duration', 'afterClose', 'contextConfig']);
    /* eslint-enable no-unused-vars */

    var div = document.createElement('div');
    document.body.appendChild(div);
    var closeChain = function closeChain() {
        external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.unmountComponentAtNode(div);
        document.body.removeChild(div);
        afterClose && afterClose();
    };

    var newContext = contextConfig;
    if (!newContext) newContext = config_provider.getContext();

    var mask = void 0,
        myRef = void 0,
        destroyed = false;
    var destroy = function destroy() {
        var inc = mask && mask.getInstance();
        inc && inc.handleClose(true);
        destroyed = true;
    };

    external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.render(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        config_provider,
        newContext,
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(NewMask, extends_default()({
            afterClose: closeChain
        }, others, {
            ref: function ref(_ref) {
                myRef = _ref;
            }
        }))
    ), div, function () {
        mask = myRef;
        if (mask && destroyed) {
            destroy();
        }
    });

    return {
        component: mask,
        destroy: destroy
    };
};

function handleConfig(config, type) {
    var newConfig = {};

    if (typeof config === 'string' || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(config)) {
        newConfig.title = config;
    } else if (isObject(config)) {
        newConfig = extends_default()({}, config);
    }
    if (typeof newConfig.duration !== 'number') {
        newConfig.duration = 3000;
    }
    if (type) {
        newConfig.type = type;
    }

    return newConfig;
}

function isObject(obj) {
    return {}.toString.call(obj) === '[object Object]';
}

function toast_open(config, type) {
    toast_close();
    config = handleConfig(config, type);
    var timeoutId = util_guid();
    toast_instance = toast_create(extends_default()({}, config, { timeoutId: timeoutId }));

    if (config.duration > 0) {
        var timeout = setTimeout(toast_close, config.duration);
        timeouts[timeoutId] = timeout;
    }
}

function toast_close() {
    if (toast_instance) {
        toast_instance.destroy();
        toast_instance = null;
    }
}

/**
 * 创建提示弹层
 * @exportName show
 * @param {Object} props 属性对象
 */
function toast__show(config) {
    toast_open(config);
}

/**
 * 关闭提示弹层
 * @exportName hide
 */
function toast_hide() {
    toast_close();
}

/**
 * 创建成功提示弹层
 * @exportName success
 * @param {Object} props 属性对象
 */
function _success(config) {
    toast_open(config, 'success');
}

/**
 * 创建警告提示弹层
 * @exportName warning
 * @param {Object} props 属性对象
 */
function _warning(config) {
    toast_open(config, 'warning');
}

/**
 * 创建错误提示弹层
 * @exportName error
 * @param {Object} props 属性对象
 */
function _error(config) {
    toast_open(config, 'error');
}

/**
 * 创建帮助提示弹层
 * @exportName help
 * @param {Object} props 属性对象
 */
function _help(config) {
    toast_open(config, 'help');
}

/**
 * 创建加载中提示弹层
 * @exportName loading
 * @param {Object} props 属性对象
 */
function _loading(config) {
    toast_open(config, 'loading');
}

/**
 * 创建通知提示弹层
 * @exportName notice
 * @param {Object} props 属性对象
 */
function _notice(config) {
    toast_open(config, 'notice');
}

/* harmony default export */ var toast = ({
    show: toast__show,
    hide: toast_hide,
    success: _success,
    warning: _warning,
    error: _error,
    help: _help,
    loading: _loading,
    notice: _notice
});

var toast_withContext = function withContext(WrappedComponent) {
    var HOC = function HOC(props) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            config_provider.Consumer,
            null,
            function (contextConfig) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(WrappedComponent, extends_default()({}, props, {
                    contextMessage: {
                        show: function show() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return toast__show(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        hide: toast_hide,
                        success: function success() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _success(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        warning: function warning() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _warning(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        error: function error() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _error(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        help: function help() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _help(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        loading: function loading() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _loading(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        notice: function notice() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _notice(extends_default()({}, config, { contextConfig: contextConfig }));
                        }
                    }
                }));
            }
        );
    };
    return HOC;
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/message/toast2.js









var _config = {
    top: 8,
    maxCount: 0,
    duration: 3000
};

var toast2_MessageWrapper = function MessageWrapper(props) {
    // eslint-disable-next-line
    var _props$prefix = props.prefix,
        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
        _props$dataSource = props.dataSource,
        dataSource = _props$dataSource === undefined ? [] : _props$dataSource;

    var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(),
        forceUpdate = _useState[1];

    dataSource.forEach(function (i) {
        if (!i.timer) {
            i.timer = setTimeout(function () {
                var idx = dataSource.indexOf(i);
                if (idx > -1) {
                    var item = dataSource[idx];
                    typeof item.onClose === 'function' && item.onClose();
                    dataSource.splice(idx, 1);
                    forceUpdate({});
                }
            }, i.duration);
        }
    });

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        'div',
        { className: prefix + 'message-wrapper-v2', style: { top: _config.top } },
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_animate,
            {
                animationAppear: true,
                animation: {
                    appear: 'pulse',
                    enter: 'pulse',
                    leave: prefix + 'message-fade-leave'
                },
                singleMode: false
            },
            dataSource.map(function (i) {
                var key = i.key,
                    className = i.className,
                    type = i.type,
                    title = i.title,
                    content = i.content,
                    style = i.style,
                    others = objectWithoutProperties_default()(i, ['key', 'className', 'type', 'title', 'content', 'style']);

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'message-list', key: key },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        message,
                        extends_default()({}, others, {
                            className: className,
                            prefix: prefix,
                            visible: true,
                            type: type,
                            shape: 'toast',
                            title: title,
                            style: style
                        }),
                        content
                    )
                );
            })
        )
    );
};

var ConfigedMessages = config_provider.config(toast2_MessageWrapper);

var messageRootNode = void 0;
var messageList = [];

var toast2_createMessage = function createMessage(props) {
    var _props$key = props.key,
        key = _props$key === undefined ? util_guid('message-') : _props$key,
        others = objectWithoutProperties_default()(props, ['key']);

    if (!messageRootNode) {
        messageRootNode = document.createElement('div');
        document.body.appendChild(messageRootNode);
    }

    var maxCount = _config.maxCount,
        duration = _config.duration;


    var item = extends_default()({
        key: key,
        duration: duration
    }, others);

    messageList.push(item);

    if (maxCount && messageList.length > maxCount) {
        messageList.shift();
    }

    external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.render(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        config_provider,
        config_provider.getContext(),
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigedMessages, { dataSource: messageList })
    ), messageRootNode);

    return {
        key: key,
        close: function close() {
            if (item.timer) {
                clearTimeout(item.timer);
            }
            var idx = messageList.indexOf(item);
            if (idx > -1) {
                typeof item.onClose === 'function' && item.onClose();
                messageList.splice(idx, 1);

                external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.render(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    config_provider,
                    config_provider.getContext(),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigedMessages, { dataSource: messageList })
                ), messageRootNode);
            }
        }
    };
};

function toast2_close(key) {
    if (key) {
        var index = messageList.findIndex(function (item) {
            return item.key === key;
        });
        messageList.splice(index, 1);
    } else {
        messageList = [];
    }

    if (messageRootNode) {
        external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.render(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            config_provider,
            config_provider.getContext(),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigedMessages, { dataSource: messageList })
        ), messageRootNode);
    }
}

function toast2_handleConfig(config, type) {
    var newConfig = {};

    if (typeof config === 'string' || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(config)) {
        newConfig.title = config;
    } else if (util_obj.typeOf(config) === 'Object') {
        newConfig = extends_default()({}, config);
    }

    if (type) {
        newConfig.type = type;
    }

    return newConfig;
}

function toast2_open(type) {
    return function (config) {
        config = toast2_handleConfig(config, type);
        return toast2_createMessage(config);
    };
}

function toast2_destory() {
    if (!messageRootNode) return;
    if (messageRootNode) {
        external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.unmountComponentAtNode(messageRootNode);
        messageRootNode.parentNode.removeChild(messageRootNode);
        messageRootNode = null;
    }
}

/* harmony default export */ var toast2 = ({
    open: toast2_open(),
    success: toast2_open('success'),
    warning: toast2_open('warning'),
    error: toast2_open('error'),
    help: toast2_open('help'),
    loading: toast2_open('loading'),
    notice: toast2_open('notice'),
    close: toast2_close,
    destory: toast2_destory,
    config: function config() {
        if (!external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"]) {
            log.warning('need react version > 16.8.0');
            return;
        }

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return extends_default.a.apply(undefined, [_config].concat(args));
    }
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/message/index.js





message.show = toast.show;
message.success = toast.success;
message.warning = toast.warning;
message.error = toast.error;
message.notice = toast.notice;
message.help = toast.help;
message.loading = toast.loading;
message.hide = toast.hide;
message.withContext = toast_withContext;

var MessageProvider = config_provider.config(message, {
    componentName: 'Message'
});

/* harmony default export */ var es_message = (MessageProvider);

var openV2 = false;
// 调用 config 开启 v2 版本的 message
MessageProvider.config = function (config) {
    toast2.config(config);

    if (!openV2) {
        MessageProvider.show = toast2.open; // 兼容 show 用法, 后续计划都改成 open（ Notification 已经用了 open）
        MessageProvider.open = toast2.open;
        MessageProvider.hide = toast2.close; // 兼容 hide 用法, 后续计划都改成 open（ Notification 已经用了 close)
        MessageProvider.close = toast2.close;
        MessageProvider.destory = toast2.destory;
        MessageProvider.success = toast2.success;
        MessageProvider.warning = toast2.warning;
        MessageProvider.error = toast2.error;
        MessageProvider.notice = toast2.notice;
        MessageProvider.help = toast2.help;
        MessageProvider.loading = toast2.loading;

        openV2 = true;
    }
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dialog/show.js






var show__class, show__temp2;











var show_Dialog = config_provider.config(dialog_Dialog);
var Dialog2 = config_provider.config(dialog_v2);

var show_noop = function noop() {};
var MESSAGE_TYPE = {
    alert: 'warning', // deprecated in 2.x
    confirm: 'help',

    success: 'success',
    error: 'error',
    warning: 'warning',
    notice: 'notice',
    help: 'help'
};

var show_ModalInner = function ModalInner(_ref) {
    var type = _ref.type,
        _ref$messageProps = _ref.messageProps,
        messageProps = _ref$messageProps === undefined ? {} : _ref$messageProps,
        title = _ref.title,
        rtl = _ref.rtl,
        _ref$prefix = _ref.prefix,
        prefix = _ref$prefix === undefined ? 'next-' : _ref$prefix,
        content = _ref.content;

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        es_message,
        extends_default()({
            size: 'large',
            shape: 'addon',
            type: MESSAGE_TYPE[type]
        }, messageProps, {
            title: title,
            rtl: rtl,
            className: _classnames_2_3_1_classnames_default()(prefix + 'dialog-message', messageProps.className)
        }),
        content
    );
};

var show_Modal = (show__temp2 = show__class = function (_Component) {
    inherits_default()(Modal, _Component);

    function Modal() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Modal);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
            visible: true,
            loading: false
        }, _this.close = function () {
            _this.setState({
                visible: false
            });
        }, _this.loading = function (loading) {
            _this.setState({
                loading: loading
            });
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Modal.prototype.wrapper = function wrapper(fn, callback) {
        var _this2 = this;

        return function () {
            var res = fn.apply(undefined, arguments);
            if (res && res.then) {
                _this2.loading(true);

                res.then(function (result) {
                    _this2.loading(false);

                    if (result !== false) {
                        return callback();
                    }
                }).catch(function (e) {
                    _this2.loading(false);
                    throw e;
                });
            } else if (res !== false) {
                return callback();
            }
        };
    };

    Modal.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            type = _props.type,
            title = _props.title,
            content = _props.content,
            messageProps = _props.messageProps,
            footerActions = _props.footerActions,
            onOk = _props.onOk,
            onCancel = _props.onCancel,
            onClose = _props.onClose,
            okProps = _props.okProps,
            needWrapper = _props.needWrapper,
            rtl = _props.rtl,
            className = _props.className,
            v2 = _props.v2,
            _props$width = _props.width,
            width = _props$width === undefined ? 420 : _props$width,
            others = objectWithoutProperties_default()(_props, ['prefix', 'type', 'title', 'content', 'messageProps', 'footerActions', 'onOk', 'onCancel', 'onClose', 'okProps', 'needWrapper', 'rtl', 'className', 'v2', 'width']);

        var newTitle = needWrapper && type ? null : title;

        var newContent = needWrapper && type ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(show_ModalInner, {
            type: type,
            messageProps: messageProps,
            title: title,
            rtl: rtl,
            prefix: prefix,
            content: content
        }) : content;

        var newFooterActions = footerActions || (type === 'confirm' ? ['ok', 'cancel'] : ['alert', 'success', 'error', 'notice', 'warning', 'help'].indexOf(type) > -1 ? ['ok'] : undefined);
        var newOnOk = this.wrapper(onOk, this.close);
        var newOnCancel = this.wrapper(onCancel, this.close);
        var newOnClose = this.wrapper(onClose, this.close);

        var _state = this.state,
            visible = _state.visible,
            loading = _state.loading;
        // 不能直接改，这里修改相当于改了全局 okProps
        // okProps.loading = loading;

        var newOkProps = extends_default()({}, okProps);
        if (!('loading' in okProps)) {
            newOkProps.loading = loading;
        }

        var classNames = _classnames_2_3_1_classnames_default()(prefix + 'dialog-quick', className);

        var Tag = v2 ? Dialog2 : show_Dialog;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({
                prefix: prefix,
                role: 'alertdialog'
            }, others, {
                visible: visible,
                title: newTitle,
                rtl: rtl,
                footerActions: newFooterActions,
                onOk: this.state.loading ? show_noop : newOnOk,
                onCancel: newOnCancel,
                onClose: newOnClose,
                okProps: newOkProps,
                className: classNames,
                width: v2 ? width : undefined
            }),
            newContent
        );
    };

    return Modal;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), show__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['alert', 'confirm', 'success', 'error', 'notice', 'warning', 'help']),
    title: _prop_types_15_8_1_prop_types_default.a.node,
    content: _prop_types_15_8_1_prop_types_default.a.node,
    messageProps: _prop_types_15_8_1_prop_types_default.a.object,
    footerActions: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * Callback function triggered when Ok button is clicked
     * @param {Object} event click event object
     * @returns {Promise} Optionally handles a Promise return object
     */
    onOk: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * Callback function triggered when Cancel button is clicked
     * @param {Object} event click event object
     * @returns {Promise} Optionally handles a Promise return object
     */
    onCancel: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * Callback function triggered when Close button is clicked
     * @param {Object} event click event object
     * @returns {Promise} Optionally handles a Promise return object
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    okProps: _prop_types_15_8_1_prop_types_default.a.object,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    needWrapper: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, show__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    messageProps: {},
    onOk: show_noop,
    onCancel: show_noop,
    onClose: show_noop,
    okProps: {},
    locale: locale_zh_cn.Dialog,
    needWrapper: true
}, show__temp2);
show_Modal.displayName = 'Modal';


var ConfigModal = config_provider.config(show_Modal, { componentName: 'Dialog' });

/**
 * 创建对话框
 * @exportName show
 * @param {Object} config 配置项
 * @returns {Object} 包含有 hide 方法，可用来关闭对话框
 */
var show__show = function _show() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var container = document.createElement('div');
    var unmount = function unmount() {
        if (config.afterClose) {
            config.afterClose();
        }
        external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.unmountComponentAtNode(container);
        container.parentNode.removeChild(container);
    };

    document.body.appendChild(container);
    var newContext = config.contextConfig;
    if (!newContext) newContext = config_provider.getContext();

    var instance = void 0,
        myRef = void 0;

    external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.render(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        config_provider,
        newContext,
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigModal, extends_default()({}, config, {
            afterClose: unmount,
            ref: function ref(_ref2) {
                myRef = _ref2;
            }
        }))
    ), container, function () {
        instance = myRef;
    });
    return {
        hide: function hide() {
            var inc = instance && instance.getInstance();
            inc && inc.close();
        }
    };
};


var methodFactory = function methodFactory(type) {
    return function () {
        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        config.type = type;
        return show__show(config);
    };
};

/**
 * 创建警示对话框
 * @exportName alert
 * @param {Object} config 配置项
 * @returns {Object} 包含有 hide 方法，可用来关闭对话框
 */
var _alert = methodFactory('alert');


var show__success = methodFactory('success');

var show__error = methodFactory('error');

var show__notice = methodFactory('notice');

var show__warning = methodFactory('warning');

var show__help = methodFactory('help');

/**
 * 创建确认对话框
 * @exportName confirm
 * @param {Object} config 配置项
 * @returns {Object} 包含有 hide 方法，可用来关闭对话框
 */

var _confirm = methodFactory('confirm');


var show_withContext = function withContext(WrappedComponent) {
    var HOC = function HOC(props) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            config_provider.Consumer,
            null,
            function (contextConfig) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(WrappedComponent, extends_default()({}, props, {
                    contextDialog: {
                        show: function show() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return show__show(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        alert: function alert() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _alert(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        confirm: function confirm() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return _confirm(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        success: function success() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return show__success(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        error: function error() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return show__error(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        warning: function warning() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return show__warning(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        notice: function notice() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return show__notice(extends_default()({}, config, { contextConfig: contextConfig }));
                        },
                        help: function help() {
                            var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                            return show__help(extends_default()({}, config, { contextConfig: contextConfig }));
                        }
                    }
                }));
            }
        );
    };
    return HOC;
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/dialog/index.js














var es_dialog_Dialog = function (_React$Component) {
    inherits_default()(Dialog, _React$Component);

    function Dialog() {
        classCallCheck_default()(this, Dialog);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Dialog.prototype.render = function render() {
        var _props = this.props,
            v2 = _props.v2,
            others = objectWithoutProperties_default()(_props, ['v2']);

        if (v2) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(dialog_v2, others);
        } else {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(dialog_Dialog, others);
        }
    };

    return Dialog;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component);

es_dialog_Dialog.displayName = 'Dialog';


es_dialog_Dialog.Inner = inner_Inner;
es_dialog_Dialog.show = function (config) {
    var _ConfigProvider$getCo = config_provider.getContextProps(config, 'Dialog'),
        warning = _ConfigProvider$getCo.warning;

    if (warning !== false) {
        config = processProps(config, log.deprecated);
    }
    return show__show(config);
};
es_dialog_Dialog.alert = function (config) {
    var _ConfigProvider$getCo2 = config_provider.getContextProps(config, 'Dialog'),
        warning = _ConfigProvider$getCo2.warning;

    if (warning !== false) {
        config = processProps(config, log.deprecated);
    }
    return _alert(config);
};
es_dialog_Dialog.confirm = function (config) {
    var _ConfigProvider$getCo3 = config_provider.getContextProps(config, 'Dialog'),
        warning = _ConfigProvider$getCo3.warning;

    if (warning !== false) {
        config = processProps(config, log.deprecated);
    }
    return _confirm(config);
};
es_dialog_Dialog.success = function (config) {
    return show__success(config);
};
es_dialog_Dialog.error = function (config) {
    return show__error(config);
};
es_dialog_Dialog.notice = function (config) {
    return show__notice(config);
};
es_dialog_Dialog.warning = function (config) {
    return show__warning(config);
};
es_dialog_Dialog.help = function (config) {
    return show__help(config);
};

es_dialog_Dialog.withContext = show_withContext;

/* istanbul ignore next */
function processProps(props, deprecated) {
    if ('closable' in props) {
        deprecated('closable', 'closeable', 'Dialog');

        var _props2 = props,
            closable = _props2.closable,
            others = objectWithoutProperties_default()(_props2, ['closable']);

        props = extends_default()({ closeable: closable }, others);
    }

    if ('v2' in props) {
        var nProps = extends_default()({}, props);
        if ('align' in props) {
            delete nProps.align;
            deprecated('align', 'centered', '<Dialog v2 />');
        }
        if ('shouldUpdatePosition' in props) {
            delete nProps.shouldUpdatePosition;
            log.warning('Warning: [ shouldUpdatePosition ] is deprecated at [ <Dialog v2 /> ]');
        }
        if ('minMargin' in props) {
            // delete nProps.minMargin;
            deprecated('minMargin', 'top/bottom', '<Dialog v2 />');
        }
        if ('isFullScreen' in props) {
            props.overFlowScroll = !props.isFullScreen;
            delete nProps.isFullScreen;
            deprecated('isFullScreen', 'overFlowScroll', '<Dialog v2 />');
        }

        return nProps;
    }

    var overlayPropNames = ['target', 'offset', 'beforeOpen', 'onOpen', 'afterOpen', 'beforePosition', 'onPosition', 'cache', 'safeNode', 'wrapperClassName', 'container'];
    overlayPropNames.forEach(function (name) {
        if (name in props) {
            var _extends2;

            deprecated(name, 'overlayProps.' + name, 'Dialog');

            var _props3 = props,
                overlayProps = _props3.overlayProps,
                _others = objectWithoutProperties_default()(_props3, ['overlayProps']);

            var newOverlayProps = extends_default()((_extends2 = {}, _extends2[name] = props[name], _extends2), overlayProps || {});
            delete _others[name];
            props = extends_default()({ overlayProps: newOverlayProps }, _others);
        }
    });

    return props;
}

/* harmony default export */ var dialog = (config_provider.config(es_dialog_Dialog, {
    transform: function transform(props, deprecated) {
        return processProps(props, deprecated);
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/drawer/inner.js





var drawer_inner__class, drawer_inner__temp;








var drawer_inner_noop = function noop() {};
var drawer_inner_pickOthers = util_obj.pickOthers;
var drawer_inner_Inner = (drawer_inner__temp = drawer_inner__class = function (_Component) {
    inherits_default()(Inner, _Component);

    function Inner() {
        classCallCheck_default()(this, Inner);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Inner.prototype.renderHeader = function renderHeader() {
        var _cx;

        var _props = this.props,
            prefix = _props.prefix,
            title = _props.title,
            headerStyle = _props.headerStyle;

        var closeLink = this.renderCloseLink();
        var headerCls = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'drawer-header'] = true, _cx[prefix + 'drawer-no-title'] = !title, _cx));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                className: headerCls,
                style: headerStyle,
                role: 'heading',
                'aria-level': '1'
            },
            title,
            closeLink
        );
    };

    Inner.prototype.renderBody = function renderBody() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            children = _props2.children,
            bodyStyle = _props2.bodyStyle;

        if (children) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'drawer-body', style: bodyStyle },
                children
            );
        }
        return null;
    };

    Inner.prototype.renderCloseLink = function renderCloseLink() {
        var _props3 = this.props,
            prefix = _props3.prefix,
            closeable = _props3.closeable,
            onClose = _props3.onClose,
            locale = _props3.locale;


        if (closeable) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'a',
                {
                    role: 'button',
                    'aria-label': locale.close,
                    className: prefix + 'drawer-close',
                    onClick: onClose
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    className: prefix + 'drawer-close-icon',
                    type: 'close'
                })
            );
        }

        return null;
    };

    Inner.prototype.render = function render() {
        var _cx2;

        var _props4 = this.props,
            prefix = _props4.prefix,
            className = _props4.className,
            closeable = _props4.closeable,
            placement = _props4.placement,
            role = _props4.role,
            rtl = _props4.rtl;


        var others = drawer_inner_pickOthers(Object.keys(Inner.propTypes), this.props);
        var newClassName = _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'drawer'] = true, _cx2[prefix + 'drawer-' + placement] = true, _cx2[prefix + 'closeable'] = closeable, _cx2[className] = !!className, _cx2));

        var ariaProps = {
            role: role,
            'aria-modal': 'true'
        };

        var header = this.renderHeader();
        var body = this.renderBody();

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, ariaProps, {
                className: newClassName
            }, others, {
                dir: rtl ? 'rtl' : undefined
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { style: { height: '100%', overflow: 'auto' } },
                header,
                body
            )
        );
    };

    return Inner;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), drawer_inner__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    closeable: _prop_types_15_8_1_prop_types_default.a.bool,
    role: _prop_types_15_8_1_prop_types_default.a.string,
    title: _prop_types_15_8_1_prop_types_default.a.node,
    placement: _prop_types_15_8_1_prop_types_default.a.oneOf(['top', 'right', 'bottom', 'left']),
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    headerStyle: _prop_types_15_8_1_prop_types_default.a.object,
    bodyStyle: _prop_types_15_8_1_prop_types_default.a.object,
    afterClose: _prop_types_15_8_1_prop_types_default.a.func,
    beforeOpen: _prop_types_15_8_1_prop_types_default.a.func,
    beforeClose: _prop_types_15_8_1_prop_types_default.a.func,
    cache: _prop_types_15_8_1_prop_types_default.a.bool,
    shouldUpdatePosition: _prop_types_15_8_1_prop_types_default.a.bool
}, drawer_inner__class.defaultProps = {
    prefix: 'next-',
    closeable: true,
    role: 'dialog',
    onClose: drawer_inner_noop,
    locale: locale_zh_cn.Drawer
}, drawer_inner__temp);
drawer_inner_Inner.displayName = 'Inner';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/drawer/drawer.js






var drawer__class, drawer__temp2;








var drawer_noop = function noop() {};
var drawer_Popup = next_es_overlay.Popup;
var drawer_pickOthers = util_obj.pickOthers;

/**
 * Drawer
 * @description 继承 Overlay.Popup 的 API，除非特别说明
 * */

var drawer_Drawer = (drawer__temp2 = drawer__class = function (_Component) {
    inherits_default()(Drawer, _Component);

    function Drawer() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Drawer);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.getAlign = function (placement) {
            var align = void 0;
            switch (placement) {
                case 'top':
                    align = 'tl tl';
                    break;
                case 'bottom':
                    align = 'bl bl';
                    break;
                case 'left':
                    align = 'tl tl';
                    break;
                case 'right':
                default:
                    align = 'tr tr';
                    break;
            }

            return align;
        }, _this.getAnimation = function (placement) {
            if ('animation' in _this.props) {
                return _this.props.animation;
            }

            var animation = void 0;
            switch (placement) {
                case 'top':
                    animation = {
                        in: 'slideInDown',
                        out: 'slideOutUp'
                    };
                    break;
                case 'bottom':
                    animation = {
                        in: 'slideInUp',
                        out: 'slideOutDown'
                    };
                    break;
                case 'left':
                    animation = {
                        in: 'slideInLeft',
                        out: 'slideOutLeft'
                    };
                    break;
                case 'right':
                default:
                    animation = {
                        in: 'slideInRight',
                        out: 'slideOutRight'
                    };
                    break;
            }

            return animation;
        }, _this.getOverlayRef = function (ref) {
            _this.overlay = ref;
        }, _this.mapcloseableToConfig = function (closeable) {
            return ['esc', 'close', 'mask'].reduce(function (ret, option) {
                var key = option.charAt(0).toUpperCase() + option.substr(1);
                var value = typeof closeable === 'boolean' ? closeable : closeable.split(',').indexOf(option) > -1;

                if (option === 'esc' || option === 'mask') {
                    ret['canCloseBy' + key] = value;
                } else {
                    ret['canCloseBy' + key + 'Click'] = value;
                }

                return ret;
            }, {});
        }, _this.handleVisibleChange = function (visible, reason, e) {
            var _this$props = _this.props,
                onClose = _this$props.onClose,
                onVisibleChange = _this$props.onVisibleChange;


            if (visible === false) {
                onClose && onClose(reason, e);
            }

            onVisibleChange && onVisibleChange(visible, reason, e);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Drawer.prototype.renderInner = function renderInner(closeable) {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            children = _props.children,
            title = _props.title,
            onClose = _props.onClose,
            locale = _props.locale,
            headerStyle = _props.headerStyle,
            bodyStyle = _props.bodyStyle,
            placement = _props.placement,
            rtl = _props.rtl;

        var others = drawer_pickOthers(Object.keys(Drawer.propTypes), this.props);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            drawer_inner_Inner,
            extends_default()({
                prefix: prefix,
                title: title,
                className: className,
                locale: locale,
                closeable: closeable,
                rtl: rtl,
                headerStyle: headerStyle,
                bodyStyle: bodyStyle,
                placement: placement,
                onClose: onClose.bind(this, 'closeClick')
            }, others),
            children
        );
    };

    Drawer.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            style = _props2.style,
            width = _props2.width,
            height = _props2.height,
            trigger = _props2.trigger,
            triggerType = _props2.triggerType,
            animation = _props2.animation,
            hasMask = _props2.hasMask,
            visible = _props2.visible,
            placement = _props2.placement,
            onClose = _props2.onClose,
            onVisibleChange = _props2.onVisibleChange,
            closeable = _props2.closeable,
            closeMode = _props2.closeMode,
            rtl = _props2.rtl,
            popupContainer = _props2.popupContainer,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'style', 'width', 'height', 'trigger', 'triggerType', 'animation', 'hasMask', 'visible', 'placement', 'onClose', 'onVisibleChange', 'closeable', 'closeMode', 'rtl', 'popupContainer']);

        var newStyle = extends_default()({
            width: width,
            height: height
        }, style);

        var newCloseable = 'closeMode' in this.props ? Array.isArray(closeMode) ? closeMode.join(',') : closeMode : closeable;

        var _mapcloseableToConfig = this.mapcloseableToConfig(newCloseable),
            canCloseByCloseClick = _mapcloseableToConfig.canCloseByCloseClick,
            closeConfig = objectWithoutProperties_default()(_mapcloseableToConfig, ['canCloseByCloseClick']);

        var newPopupProps = extends_default()({
            prefix: prefix,
            visible: visible,
            trigger: trigger,
            triggerType: triggerType,
            onVisibleChange: this.handleVisibleChange,
            animation: this.getAnimation(placement),
            hasMask: hasMask,
            align: this.getAlign(placement)
        }, closeConfig, {
            canCloseByOutSideClick: false,
            disableScroll: true,
            ref: this.getOverlayRef,
            rtl: rtl,
            target: 'viewport',
            style: newStyle,
            needAdjust: false,
            container: popupContainer
        });

        var inner = this.renderInner(canCloseByCloseClick);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            drawer_Popup,
            extends_default()({}, newPopupProps, others),
            inner
        );
    };

    return Drawer;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), drawer__class.displayName = 'Drawer', drawer__class.propTypes = extends_default()({}, drawer_Popup.propTypes || {}, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    // 不建议使用trigger
    trigger: _prop_types_15_8_1_prop_types_default.a.element,
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 宽度，仅在 placement是 left right 的时候生效
     */
    width: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 高度，仅在 placement是 top bottom 的时候生效
     */
    height: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * [废弃]同closeMode, 控制对话框关闭的方式，值可以为字符串或者布尔值，其中字符串是由以下值组成：
     * **close** 表示点击关闭按钮可以关闭对话框
     * **mask** 表示点击遮罩区域可以关闭对话框
     * **esc** 表示按下 esc 键可以关闭对话框
     * 如 'close' 或 'close,esc,mask'
     * 如果设置为 true，则以上关闭方式全部生效
     * 如果设置为 false，则以上关闭方式全部失效
     */
    closeable: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.bool]),
    /**
     * 隐藏时是否保留子节点，不销毁
     */
    cache: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * [推荐]控制对话框关闭的方式，值可以为字符串或者数组，其中字符串、数组均为以下值的枚举：
     * **close** 表示点击关闭按钮可以关闭对话框
     * **mask** 表示点击遮罩区域可以关闭对话框
     * **esc** 表示按下 esc 键可以关闭对话框
     * 如 'close' 或 ['close','esc','mask'], []
     * @version 1.21
     */
    closeMode: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOf(['close', 'mask', 'esc'])), _prop_types_15_8_1_prop_types_default.a.oneOf(['close', 'mask', 'esc'])]),
    /**
     * 对话框关闭时触发的回调函数
     * @param {String} trigger 关闭触发行为的描述字符串
     * @param {Object} event 关闭时事件对象
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 对话框打开后的回调函数
     */
    afterOpen: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 位于页面的位置
     */
    placement: _prop_types_15_8_1_prop_types_default.a.oneOf(['top', 'right', 'bottom', 'left']),
    /**
     * 标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * header上的样式
     */
    headerStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * body上的样式
     */
    bodyStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示遮罩
     */
    hasMask: _prop_types_15_8_1_prop_types_default.a.bool,
    // 受控模式下(没有 trigger 的时候)，只会在关闭时触发，相当于onClose
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 显示隐藏时动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画。 请参考 Animate 组件的文档获取可用的动画名
     * @default { in: 'expandInDown', out: 'expandOutUp' }
     */
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.bool]),
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    // for ConfigProvider
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any
}), drawer__class.defaultProps = {
    prefix: 'next-',
    triggerType: 'click',
    trigger: null,
    closeable: true,
    onClose: drawer_noop,
    hasMask: true,
    placement: 'right',
    locale: locale_zh_cn.Drawer
}, drawer__temp2);
drawer_Drawer.displayName = 'Drawer';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/drawer/index.js




drawer_Drawer.Inner = drawer_inner_Inner;
/* harmony default export */ var drawer = (config_provider.config(drawer_Drawer));
// EXTERNAL MODULE: ./node_modules/_@alifd_field@1.5.8@@alifd/field/lib/index.js
var lib = __webpack_require__(137);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/field/utils.js



function cloneAndAddKey(element) {
    if (element && Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["isValidElement"])(element)) {
        var key = element.key || 'error';
        return Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(element, { key: key });
    }
    return element;
}

function scrollToFirstError(_ref) {
    var errorsGroup = _ref.errorsGroup,
        options = _ref.options,
        instance = _ref.instance;

    if (errorsGroup && options.scrollToFirstError) {
        var firstNode = void 0;
        var firstTop = void 0;
        for (var i in errorsGroup) {
            if (errorsGroup.hasOwnProperty(i)) {
                var node = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(instance[i]);
                if (!node) {
                    return;
                }
                var top = node.offsetTop;
                if (firstTop === undefined || firstTop > top) {
                    firstTop = top;
                    firstNode = node;
                }
            }
        }

        if (firstNode) {
            if (typeof options.scrollToFirstError === 'number' && window && typeof window.scrollTo === 'function') {
                var offsetLeft = document && document.body && document.body.offsetLeft ? document.body.offsetLeft : 0;
                window.scrollTo(offsetLeft, firstTop + options.scrollToFirstError);
            } else if (firstNode.scrollIntoViewIfNeeded) {
                firstNode.scrollIntoViewIfNeeded(true);
            }
        }
    }
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/field/index.js










var field_NextField = function (_Field) {
    inherits_default()(NextField, _Field);

    NextField.useField = function useField() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        if (!external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"] || !external___root___React___commonjs2___react___commonjs___react___amd___react__["useMemo"]) {
            log.warning('need react version > 16.8.0');
            return;
        }
        return this.getUseField({ useMemo: external___root___React___commonjs2___react___commonjs___react___amd___react__["useMemo"], useState: external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"] })(options);
    };

    function NextField(com) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        classCallCheck_default()(this, NextField);

        var newOptions = extends_default()({}, options, {
            afterValidateRerender: scrollToFirstError,
            processErrorMessage: cloneAndAddKey
        });

        var _this = possibleConstructorReturn_default()(this, _Field.call(this, com, newOptions));

        _this.validate = _this.validate.bind(_this);
        return _this;
    }

    NextField.prototype.validate = function validate(ns, cb) {
        this.validateCallback(ns, cb);
    };

    NextField.prototype.reset = function reset(ns) {
        var backToDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        if (ns === true) {
            log.deprecated('reset(true)', 'resetToDefault()', 'Field');
            this.resetToDefault();
        } else if (backToDefault === true) {
            log.deprecated('reset(ns,true)', 'resetToDefault(ns)', 'Field');
            this.resetToDefault(ns);
        } else {
            this._reset(ns, false);
        }
    };

    return NextField;
}(lib_default.a);

/* harmony default export */ var es_field = (field_NextField);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/responsive-grid/util.js


var util_isPlainObject = util_obj.isPlainObject;

/**
 * 过滤 undefined 类型的值
 * @param  {*}  obj
 * @return {Object}
 */

function filterUndefinedValue(object) {
    if (!util_isPlainObject(object)) {
        return object;
    }

    var obj = {};

    Object.keys(object).forEach(function (key) {
        var value = object[key];

        if (value !== undefined) {
            obj[key] = value;
        }
    });

    return obj;
}

/**
 * 从 obj 中去除 subObj
 * @param  {*}  obj
 * @param  {*}  subObj
 * @return {Object}
 */
function stripObject(obj, subObj) {
    var newObject = {};

    Object.keys(obj).forEach(function (key) {
        if (!(key in subObj)) {
            newObject[key] = obj[key];
        }
    });
    return newObject;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/responsive-grid/create-style.js


// import { prefix } from 'inline-style-prefixer';



var create_style_ieVersion = util_env.ieVersion;

var getPadding = function getPadding(padding) {
    if (!Array.isArray(padding)) {
        return {
            padding: padding
        };
    }

    var attrs = ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'];
    var paddings = {};
    var value = void 0;

    attrs.forEach(function (attr, index) {
        switch (padding.length) {
            case 1:
                value = padding[0] || 0;
                break;
            case 2:
                value = padding[index] || padding[index - 2] || 0;
                break;
            case 3:
                value = index === 2 ? padding[2] : padding[index] || padding[index - 2] || 0;
                break;
            case 4:
            default:
                value = padding[index] || 0;
                break;
        }
        paddings[attr] = value;
    });

    return paddings;
};

var getMargin = function getMargin(size) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { isNegative: false, half: false },
        isNegative = _ref.isNegative,
        half = _ref.half;

    if (!size) {
        return {};
    }
    var attrs = ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'];
    var margins = {};
    var param = 1 * (isNegative ? -1 : 1) * (half ? 0.5 : 1);
    var value = void 0;

    attrs.forEach(function (attr, index) {
        if (!Array.isArray(size)) {
            value = param * size;
        } else {
            switch (size.length) {
                case 1:
                    value = param * (size[0] || 0);
                    break;
                case 2:
                    value = param * (size[index] || size[index - 2] || 0);
                    break;
                case 3:
                    value = param * (index === 2 ? size[2] : size[index] || size[index - 2] || 0);
                    break;
                case 4:
                default:
                    value = param * (size[index] || 0);
                    break;
            }
        }

        margins[attr] = value;
    });

    return margins;
};

var getChildMargin = function getChildMargin(spacing) {
    return getMargin(spacing, { half: true });
};

var getSpacingMargin = function getSpacingMargin(spacing) {
    return getMargin(spacing, { half: true });
};

var getSpacingHelperMargin = function getSpacingHelperMargin(spacing) {
    return getMargin(spacing, { isNegative: true, half: true });
};

var getFlexs = function getFlexs(flex) {
    if (!Array.isArray(flex)) {
        return {
            flex: flex
        };
    }

    var attrs = ['flexGrow', 'flexShrink', 'flexBasis'];
    var flexs = {};

    flex.forEach(function (val, index) {
        flexs[attrs[index]] = val;
    });

    return flexs;
};

var getGridGap = function getGridGap(gap) {
    if (!Array.isArray(gap)) {
        return {
            gap: gap
        };
    }

    var attrs = ['rowGap', 'columnGap'];
    var gaps = {};

    gap.forEach(function (val, index) {
        gaps[attrs[index]] = val;
    });

    return gaps;
};

var getTemplateCount = function getTemplateCount(counts) {
    if (!isNaN(counts) || typeof counts === 'string') {
        return 'repeat(' + counts + ', minmax(0,1fr))';
    }

    return counts;
};

// const outerProps = ['alignSelf', 'flexGrow', 'flexShrink', 'flexBasis', 'backgroundColor', 'boxShadow', 'borderRadius', 'borderWidth', 'borderStyle', 'borderColor', 'padding', 'paddingTop', 'paddingLeft', 'paddingRight', 'paddingBottom'];

var helperProps = ['margin', 'marginTop', 'marginLeft', 'marginRight', 'marginBottom'];

var create_style_innerProps = ['flexDirection', 'flexWrap',
// 'justifyContent',
'alignContent', 'alignItems', 'display'];

var create_style_filterOuterStyle = function filterOuterStyle(style) {
    var props = {};

    [].concat(create_style_innerProps).forEach(function (key) {
        props[key] = style[key];
    });

    return filterUndefinedValue(stripObject(style, props));
};

var create_style_filterHelperStyle = function filterHelperStyle(style) {
    var props = {};
    helperProps.forEach(function (key) {
        props[key] = style[key];
    });

    return filterUndefinedValue(extends_default()({}, props, {
        overflow: 'hidden'
    }));
};

var create_style_filterInnerStyle = function filterInnerStyle(style) {
    var props = {};

    create_style_innerProps.forEach(function (key) {
        props[key] = style[key];
    });

    return filterUndefinedValue(props);
};

var create_style_getGridChildProps = function getGridChildProps(props, device, gap) {
    var _props$row = props.row,
        row = _props$row === undefined ? 'initial' : _props$row,
        _props$col = props.col,
        col = _props$col === undefined ? 'initial' : _props$col,
        _props$rowSpan = props.rowSpan,
        rowSpan = _props$rowSpan === undefined ? 1 : _props$rowSpan,
        _props$colSpan = props.colSpan,
        colSpan = _props$colSpan === undefined ? 1 : _props$colSpan;


    var totalSpan = 12;
    var newColSpan = (typeof colSpan === 'undefined' ? 'undefined' : typeof_default()(colSpan)) === 'object' && 'desktop' in colSpan ? colSpan.desktop : colSpan;

    ['tablet', 'phone'].forEach(function (deviceKey) {
        if (deviceKey === device) {
            if ((typeof colSpan === 'undefined' ? 'undefined' : typeof_default()(colSpan)) === 'object' && device in colSpan) {
                newColSpan = colSpan[device];
            } else {
                switch (deviceKey) {
                    case 'tablet':
                        totalSpan = 8;
                        newColSpan = colSpan > 5 ? 8 : colSpan > 2 ? 4 : 2;
                        break;
                    case 'phone':
                        totalSpan = 4;
                        newColSpan = colSpan > 2 ? 4 : 2;
                        break;
                }
            }
        }
    });

    var gapLeft = gap;
    if (Array.isArray(gap)) {
        gapLeft = gap[1];
    }

    var ieChildFix = create_style_ieVersion && !(rowSpan === 1 && colSpan === 1) ? {
        display: 'inline-block',
        width: gapLeft ? 'calc(' + newColSpan / totalSpan * 100 + '% - ' + gapLeft + 'px)' : newColSpan / totalSpan * 100 + '%'
    } : {};

    return filterUndefinedValue(extends_default()({
        gridRowStart: row,
        gridRowEnd: 'span ' + rowSpan,
        gridColumnStart: col,
        gridColumnEnd: 'span ' + newColSpan
    }, ieChildFix));
};

var create_style_getBoxChildProps = function getBoxChildProps(props) {
    var alignSelf = props.alignSelf,
        flex = props.flex;


    return filterUndefinedValue(extends_default()({
        alignSelf: alignSelf
    }, getFlexs(flex)));
};

/* harmony default export */ var create_style = (function (_ref2) {
    var device = _ref2.device,
        display = _ref2.display,
        gap = _ref2.gap,
        direction = _ref2.direction,
        dense = _ref2.dense,
        rowSpan = _ref2.rowSpan,
        colSpan = _ref2.colSpan,
        row = _ref2.row,
        col = _ref2.col,
        rows = _ref2.rows,
        columns = _ref2.columns,
        justify = _ref2.justify,
        align = _ref2.align,
        alignSelf = _ref2.alignSelf,
        wrap = _ref2.wrap,
        flex = _ref2.flex,
        padding = _ref2.padding,
        margin = _ref2.margin;

    var style = extends_default()({}, getPadding(padding));

    var deviceColumns = 'auto';

    switch (device) {
        case 'phone':
            deviceColumns = 4;
            break;
        case 'tablet':
            deviceColumns = 8;
            break;
        case 'desktop':
            deviceColumns = 12;
            break;
        default:
            break;
    }
    var newColumns = !isNaN(columns) || typeof columns === 'string' ? columns : deviceColumns;

    switch (display) {
        case 'grid':
            style = extends_default()({}, getGridGap(gap), {
                gridTemplateRows: getTemplateCount(rows),
                gridTemplateColumns: getTemplateCount(newColumns),
                gridAutoFlow: '' + (direction || '') + (dense && ' dense')
            }, create_style_getGridChildProps({
                row: row,
                rowSpan: rowSpan,
                col: col,
                colSpan: colSpan
                // justifySelf,
                // alignSelf,
            }, device), style);
            break;
        case 'flex':
            style = extends_default()({
                // parent
                msFlexDirection: direction,
                flexDirection: direction,
                msFlexWrap: wrap ? 'wrap' : 'none',
                flexWrap: wrap ? 'wrap' : 'nowrap',
                msFlexPack: justify,
                justifyContent: justify,
                msFlexAlign: align,
                alignItems: align
            }, getMargin(margin), create_style_getBoxChildProps({
                alignSelf: alignSelf,
                flex: flex
            }), style);
            break;
        default:
            break;
    }

    // return prefix(style);
    return filterUndefinedValue(style);
});


// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/box/index.js






var box__class, box__temp;








var box_pickOthers = util_obj.pickOthers;


var box_createChildren = function createChildren(children, _ref) {
    var spacing = _ref.spacing,
        direction = _ref.direction,
        wrap = _ref.wrap,
        device = _ref.device;

    var array = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.toArray(children);
    if (!children) {
        return null;
    }

    return array.map(function (child, index) {
        var spacingMargin = {};

        spacingMargin = getChildMargin(spacing);

        if (!wrap) {
            // 不折行
            var isNone = [index === 0, index === array.length - 1];
            var props = direction === 'row' ? ['marginLeft', 'marginRight'] : ['marginTop', 'marginBottom'];

            ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'].forEach(function (prop) {
                if (prop in spacingMargin && props.indexOf(prop) === -1) {
                    spacingMargin[prop] = 0;
                }

                props.forEach(function (key, i) {
                    if (key in spacingMargin && isNone[i]) {
                        spacingMargin[key] = 0;
                    }
                });
            });
        }

        if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
            var propsMargin = child.props.margin;

            var childPropsMargin = getMargin(propsMargin);
            var gridProps = {};

            if (['function', 'object'].indexOf(typeof_default()(child.type)) > -1 && child.type._typeMark === 'responsive_grid') {
                gridProps = create_style(extends_default()({ display: 'grid' }, child.props));
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                style: extends_default()({}, spacingMargin, childPropsMargin, gridProps, child.props.style || {})
            });
        }

        return child;
    });
};

var box_getStyle = function getStyle() {
    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var props = arguments[1];

    return extends_default()({}, create_style(extends_default()({ display: 'flex' }, props)), style);
};

var box_getOuterStyle = function getOuterStyle(style, styleProps) {
    var sheet = box_getStyle(style, styleProps);

    return create_style_filterOuterStyle(sheet);
};

var box_getHelperStyle = function getHelperStyle(style, styleProps) {
    var sheet = box_getStyle(style, styleProps);

    return create_style_filterHelperStyle(extends_default()({}, sheet, getSpacingHelperMargin(styleProps.spacing)));
};

var box_getInnerStyle = function getInnerStyle(style, styleProps) {
    var sheet = box_getStyle(style, styleProps);

    return create_style_filterInnerStyle(sheet);
};

/**
 * Box
 */
var box_Box = (box__temp = box__class = function (_Component) {
    inherits_default()(Box, _Component);

    function Box() {
        classCallCheck_default()(this, Box);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Box.prototype.render = function render() {
        var _cx;

        var _props = this.props,
            prefix = _props.prefix,
            direction = _props.direction,
            justify = _props.justify,
            align = _props.align,
            wrap = _props.wrap,
            flex = _props.flex,
            spacing = _props.spacing,
            padding = _props.padding,
            margin = _props.margin,
            style = _props.style,
            className = _props.className,
            children = _props.children,
            device = _props.device,
            component = _props.component;


        var styleProps = {
            direction: direction,
            justify: justify,
            align: align,
            wrap: wrap,
            flex: flex,
            spacing: spacing,
            padding: padding,
            margin: margin
        };
        var View = component;
        var others = box_pickOthers(Object.keys(Box.propTypes), this.props);
        var styleSheet = box_getStyle(style, styleProps);

        var boxs = box_createChildren(children, {
            spacing: spacing,
            direction: direction,
            wrap: wrap,
            device: device
        });

        var cls = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'box'] = true, _cx), className);
        if (wrap && spacing) {
            var outerStyle = box_getOuterStyle(style, styleProps);
            var helperStyle = box_getHelperStyle(style, styleProps);
            var innerStyle = box_getInnerStyle(style, styleProps);

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                View,
                extends_default()({ style: outerStyle, className: cls }, others),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { style: helperStyle },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { style: innerStyle, className: prefix + 'box' },
                        boxs
                    )
                )
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            View,
            extends_default()({ style: styleSheet, className: cls }, others),
            boxs
        );
    };

    return Box;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), box__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 布局属性
     */
    flex: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string])), _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 布局方向，默认为 column ，一个元素占据一整行
     * @default column
     */
    direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['row', 'column', 'row-reverse']),
    /**
     * 是否折行 支持IE11+
     */
    wrap: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 元素之间的间距 [bottom&top, right&left]
     */
    spacing: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number), _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 设置 margin [bottom&top, right&left]
     */
    margin: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number), _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 设置 padding [bottom&top, right&left]
     */
    padding: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number), _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 沿着主轴方向，子元素们的排布关系 （兼容性同 justify-content ）
     */
    justify: _prop_types_15_8_1_prop_types_default.a.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around']),
    /**
     * 垂直主轴方向，子元素们的排布关系 （兼容性同 align-items ）
     */
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(['flex-start', 'center', 'flex-end', 'baseline', 'stretch']),
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['phone', 'tablet', 'desktop']),
    /**
     * 定制标签名， 例如section等
     */
    component: _prop_types_15_8_1_prop_types_default.a.string
}, box__class.defaultProps = {
    prefix: 'next-',
    direction: 'column',
    wrap: false,
    component: 'div'
}, box__temp);
box_Box.displayName = 'Box';


/* harmony default export */ var box = (config_provider.config(box_Box));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/responsive-grid/cell.js




var cell__class, cell__temp;






var cell_pickOthers = util_obj.pickOthers;
/**
 * ResponsiveGrid.Cell
 */

var cell_Cell = (cell__temp = cell__class = function (_Component) {
    inherits_default()(Cell, _Component);

    function Cell() {
        classCallCheck_default()(this, Cell);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Cell.prototype.render = function render() {
        var _props = this.props,
            View = _props.component,
            children = _props.children;


        var others = cell_pickOthers(Object.keys(Cell.propTypes), this.props);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            View,
            others,
            children
        );
    };

    return Cell;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), cell__class._typeMark = 'responsive_grid_cell', cell__class.propTypes = {
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['phone', 'tablet', 'desktop']),
    /**
     * 横向，占据几列
     */
    colSpan: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * 纵向，占据几行
     */
    rowSpan: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType
}, cell__class.defaultProps = {
    component: 'div',
    device: 'desktop'
}, cell__temp);
cell_Cell.displayName = 'Cell';


/* harmony default export */ var responsive_grid_cell = (config_provider.config(cell_Cell));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/responsive-grid/index.js






var responsive_grid__class, responsive_grid__temp;










var responsive_grid_ieVersion = util_env.ieVersion;
var responsive_grid_pickOthers = util_obj.pickOthers,
    responsive_grid_isReactFragment = util_obj.isReactFragment;


var responsive_grid_createChildren = function createChildren(children, device, gap) {
    var array = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.toArray(children);
    if (!children) {
        return null;
    }

    return array.map(function (child) {
        if (responsive_grid_isReactFragment(child)) {
            return createChildren(child.props.children, device, gap);
        }

        if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child) && ['function', 'object'].indexOf(typeof_default()(child.type)) > -1 && ['form_item', 'responsive_grid_cell'].indexOf(child.type._typeMark) > -1) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                style: extends_default()({}, create_style_getGridChildProps(child.props, device, gap), child.props.style || {})
            });
        }

        return child;
    });
};

var responsive_grid_getStyle = function getStyle() {
    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var props = arguments[1];

    return extends_default()({}, create_style(extends_default()({ display: 'grid' }, props)), style);
};

/**
 * ResponsiveGrid
 */
var responsive_grid_ResponsiveGrid = (responsive_grid__temp = responsive_grid__class = function (_Component) {
    inherits_default()(ResponsiveGrid, _Component);

    function ResponsiveGrid() {
        classCallCheck_default()(this, ResponsiveGrid);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    ResponsiveGrid.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            View = _props.component,
            style = _props.style,
            className = _props.className,
            children = _props.children,
            device = _props.device,
            rows = _props.rows,
            columns = _props.columns,
            gap = _props.gap,
            rowSpan = _props.rowSpan,
            colSpan = _props.colSpan,
            component = _props.component,
            dense = _props.dense;

        var styleProps = {
            rows: rows,
            columns: columns,
            gap: gap,
            device: device,
            rowSpan: rowSpan,
            colSpan: colSpan,
            component: component,
            dense: dense
        };

        var others = responsive_grid_pickOthers(Object.keys(ResponsiveGrid.propTypes), this.props);

        var styleSheet = responsive_grid_getStyle(style, styleProps);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'responsive-grid'] = true, _classNames[prefix + 'responsive-grid-ie'] = responsive_grid_ieVersion, _classNames), className);

        return responsive_grid_ieVersion ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(box, extends_default()({}, this.props, { direction: 'row', wrap: true, spacing: gap, children: responsive_grid_createChildren(children, device, gap) })) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            View,
            extends_default()({ style: styleSheet, className: cls }, others),
            responsive_grid_createChildren(children, device, gap)
        );
    };

    return ResponsiveGrid;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), responsive_grid__class._typeMark = 'responsive_grid', responsive_grid__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 设备，用来做自适应，默认为 PC
     * @enumdesc 手机, 平板, PC
     */
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['phone', 'tablet', 'desktop']),
    rows: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 分为几列， 默认是 12 列
     */
    columns: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 每个 cell 之间的间距， [bottom&top, right&left]
     */
    gap: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number), _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType,
    /**
     * 是否开启紧密模式，开启后尽可能能紧密填满，尽量不出现空格
     */
    dense: _prop_types_15_8_1_prop_types_default.a.bool,
    style: _prop_types_15_8_1_prop_types_default.a.object
}, responsive_grid__class.defaultProps = {
    prefix: 'next-',
    component: 'div',
    device: 'desktop',
    dense: false
}, responsive_grid__temp);
responsive_grid_ResponsiveGrid.displayName = 'ResponsiveGrid';


responsive_grid_ResponsiveGrid.Cell = responsive_grid_cell;

/* harmony default export */ var responsive_grid = (config_provider.config(responsive_grid_ResponsiveGrid));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/form/form.js






var form__class, form__temp;








function pickerDefined(obj) {
    var newObj = {};
    Object.keys(obj).forEach(function (i) {
        if (typeof obj[i] !== 'undefined') {
            newObj[i] = obj[i];
        }
    });
    return newObj;
}

function form_preventDefault(e) {
    e.preventDefault();
}
var form_getNewChildren = function getNewChildren(children, props) {
    var size = props.size,
        device = props.device,
        labelAlign = props.labelAlign,
        labelTextAlign = props.labelTextAlign,
        labelCol = props.labelCol,
        wrapperCol = props.wrapperCol,
        responsive = props.responsive,
        colon = props.colon;


    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.map(children, function (child) {
        if (util_obj.isReactFragment(child)) {
            return getNewChildren(child.props.children, props);
        }

        if (child && ['function', 'object'].indexOf(typeof_default()(child.type)) > -1 && child.type._typeMark === 'form_item') {
            var childrenProps = {
                labelCol: child.props.labelCol ? child.props.labelCol : labelCol,
                wrapperCol: child.props.wrapperCol ? child.props.wrapperCol : wrapperCol,
                labelAlign: child.props.labelAlign ? child.props.labelAlign : device === 'phone' ? 'top' : labelAlign,
                labelTextAlign: child.props.labelTextAlign ? child.props.labelTextAlign : labelTextAlign,
                colon: 'colon' in child.props ? child.props.colon : colon,
                size: child.props.size ? child.props.size : size,
                responsive: responsive
            };
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, pickerDefined(childrenProps));
        }
        return child;
    });
};

/** Form */
var form_Form = (form__temp = form__class = function (_React$Component) {
    inherits_default()(Form, _React$Component);

    function Form(props) {
        classCallCheck_default()(this, Form);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.onChange = function (name, value) {
            _this.props.onChange(_this._formField.getValues(), {
                name: name,
                value: value,
                field: _this._formField
            });
        };

        _this._formField = null;
        if (props.field !== false) {
            var options = extends_default()({}, props.fieldOptions, {
                onChange: _this.onChange
            });

            if (props.field) {
                _this._formField = props.field;
                var onChange = _this._formField.options.onChange;
                options.onChange = func.makeChain(onChange, _this.onChange);
                _this._formField.setOptions && _this._formField.setOptions(options);
            } else {
                if ('value' in props) {
                    options.values = props.value;
                }

                _this._formField = new es_field(_this, options);
            }

            if (props.locale && props.locale.Validate) {
                _this._formField.setOptions({ messages: props.locale.Validate });
            }

            props.saveField(_this._formField);
        }
        return _this;
    }

    Form.prototype.getChildContext = function getChildContext() {
        return {
            _formField: this.props.field ? this.props.field : this._formField,
            _formSize: this.props.size,
            _formDisabled: this.props.disabled,
            _formPreview: this.props.isPreview,
            _formFullWidth: this.props.fullWidth,
            _formLabelForErrorMessage: this.props.useLabelForErrorMessage
        };
    };

    Form.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var props = this.props;

        if (this._formField) {
            if ('value' in props && props.value !== prevProps.value) {
                this._formField.setValues(props.value);
            }
            if ('error' in props && props.error !== prevProps.error) {
                this._formField.setValues(props.error);
            }
        }
    };

    Form.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            className = _props.className,
            inline = _props.inline,
            size = _props.size,
            device = _props.device,
            labelAlign = _props.labelAlign,
            labelTextAlign = _props.labelTextAlign,
            onSubmit = _props.onSubmit,
            children = _props.children,
            labelCol = _props.labelCol,
            wrapperCol = _props.wrapperCol,
            style = _props.style,
            prefix = _props.prefix,
            rtl = _props.rtl,
            isPreview = _props.isPreview,
            Tag = _props.component,
            responsive = _props.responsive,
            gap = _props.gap,
            colon = _props.colon;


        var formClassName = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'form'] = true, _classNames[prefix + 'inline'] = inline, _classNames['' + prefix + size] = size, _classNames[prefix + 'form-responsive-grid'] = responsive, _classNames[prefix + 'form-preview'] = isPreview, _classNames[className] = !!className, _classNames));

        var newChildren = form_getNewChildren(children, this.props);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({
                role: 'grid'
            }, util_obj.pickOthers(Form.propTypes, this.props), {
                className: formClassName,
                style: style,
                dir: rtl ? 'rtl' : undefined,
                onSubmit: onSubmit
            }),
            responsive ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                responsive_grid,
                { gap: gap },
                newChildren
            ) : newChildren
        );
    };

    return Form;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), form__class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 内联表单
     */
    inline: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。
     * @enumdesc 大, 中, 小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['large', 'medium', 'small']),
    /**
     * 单个 Item 中表单类组件宽度是否是100%
     */
    fullWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 标签的位置, 如果不设置 labelCol 和 wrapperCol 那么默认是标签在上
     * @enumdesc 上, 左, 内
     */
    labelAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['top', 'left', 'inset']),
    /**
     * 标签的左右对齐方式
     * @enumdesc 左, 右
     */
    labelTextAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
    /**
     * field 实例, 传 false 会禁用 field
     */
    field: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 保存 Form 自动生成的 field 对象
     */
    saveField: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 控制第一级 Item 的 labelCol
     */
    labelCol: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 控制第一级 Item 的 wrapperCol
     */
    wrapperCol: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * form内有 `htmlType="submit"` 的元素的时候会触发
     */
    onSubmit: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 子元素
     */
    children: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 扩展class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 表单数值
     */
    value: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 表单变化回调
     * @param {Object} values 表单数据
     * @param {Object} item 详细
     * @param {String} item.name 变化的组件名
     * @param {String} item.value 变化的数据
     * @param {Object} item.field field 实例
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.func]),
    fieldOptions: _prop_types_15_8_1_prop_types_default.a.object,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预设屏幕宽度
     */
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['phone', 'tablet', 'desktop']),
    /**
     * 是否开启内置的响应式布局 （使用ResponsiveGrid）
     * @version 1.19
     */
    responsive: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否开启预览态
     * @version 1.19
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否使用 label 替换校验信息的 name 字段
     * @version 1.20
     */
    useLabelForErrorMessage: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 表示是否显示 label 后面的冒号
     * @version 1.22
     */
    colon: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用表单
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    // 在 responsive模式下，透传给 ResponsiveGrid的， 表示 每个 cell 之间的间距， [bottom&top, right&left]
    gap: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number), _prop_types_15_8_1_prop_types_default.a.number])
}, form__class.defaultProps = {
    prefix: 'next-',
    onSubmit: form_preventDefault,
    size: 'medium',
    labelAlign: 'left',
    onChange: func.noop,
    component: 'form',
    saveField: func.noop,
    device: 'desktop',
    colon: false,
    disabled: false
}, form__class.childContextTypes = {
    _formField: _prop_types_15_8_1_prop_types_default.a.object,
    _formSize: _prop_types_15_8_1_prop_types_default.a.string,
    _formDisabled: _prop_types_15_8_1_prop_types_default.a.bool,
    _formPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    _formFullWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    _formLabelForErrorMessage: _prop_types_15_8_1_prop_types_default.a.bool
}, form__temp);
form_Form.displayName = 'Form';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/grid/row.js






var row__class, row__temp;





/**
 * Grid.Row
 * @order 1
 */
var row_Row = (row__temp = row__class = function (_Component) {
    inherits_default()(Row, _Component);

    function Row() {
        classCallCheck_default()(this, Row);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Row.prototype.render = function render() {
        var _extends2, _extends3;

        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            pure = _props.pure,
            wrap = _props.wrap,
            fixed = _props.fixed,
            gutter = _props.gutter,
            fixedWidth = _props.fixedWidth,
            align = _props.align,
            justify = _props.justify,
            hidden = _props.hidden,
            className = _props.className,
            Tag = _props.component,
            children = _props.children,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'pure', 'wrap', 'fixed', 'gutter', 'fixedWidth', 'align', 'justify', 'hidden', 'className', 'component', 'children', 'rtl']);
        /* eslint-enable no-unused-vars */

        var hiddenClassObj = void 0;
        if (hidden === true) {
            var _hiddenClassObj;

            hiddenClassObj = (_hiddenClassObj = {}, _hiddenClassObj[prefix + 'row-hidden'] = true, _hiddenClassObj);
        } else if (typeof hidden === 'string') {
            var _hiddenClassObj2;

            hiddenClassObj = (_hiddenClassObj2 = {}, _hiddenClassObj2[prefix + 'row-' + hidden + '-hidden'] = !!hidden, _hiddenClassObj2);
        } else if (Array.isArray(hidden)) {
            hiddenClassObj = hidden.reduce(function (ret, point) {
                ret[prefix + 'row-' + point + '-hidden'] = !!point;
                return ret;
            }, {});
        }

        var newClassName = _classnames_2_3_1_classnames_default()(extends_default()((_extends2 = {}, _extends2[prefix + 'row'] = true, _extends2[prefix + 'row-wrap'] = wrap, _extends2[prefix + 'row-fixed'] = fixed, _extends2[prefix + 'row-fixed-' + fixedWidth] = !!fixedWidth, _extends2[prefix + 'row-justify-' + justify] = !!justify, _extends2[prefix + 'row-align-' + align] = !!align, _extends2), hiddenClassObj, (_extends3 = {}, _extends3[className] = !!className, _extends3)));

        var newChildren = children;
        var gutterNumber = parseInt(gutter, 10);
        if (gutterNumber !== 0) {
            var halfGutterString = gutterNumber / 2 + 'px';
            others.style = extends_default()({
                marginLeft: '-' + halfGutterString,
                marginRight: '-' + halfGutterString
            }, others.style || {});
            newChildren = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child) {
                if (child && child.type && typeof child.type === 'function' && child.type.isNextCol) {
                    var newChild = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, {
                        style: extends_default()({
                            paddingLeft: halfGutterString,
                            paddingRight: halfGutterString
                        }, child.style || {})
                    });
                    return newChild;
                }

                return child;
            });
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({
                dir: rtl ? 'rtl' : 'ltr',
                role: 'row',
                className: newClassName
            }, others),
            newChildren
        );
    };

    return Row;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), row__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 行内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 列间隔
     */
    gutter: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 列在行中宽度溢出后是否换行
     */
    wrap: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 行在某一断点下宽度是否保持不变（默认行宽度随视口变化而变化）
     */
    fixed: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 固定行的宽度为某一断点的宽度，不受视口影响而变动
     * @enumdesc 320px, 480px, 720px, 990px, 1200px, 1500px
     */
    fixedWidth: _prop_types_15_8_1_prop_types_default.a.oneOf(['xxs', 'xs', 's', 'm', 'l', 'xl']),
    /**
     * （不支持IE9浏览器）多列垂直方向对齐方式
     * @enumdesc 顶部对齐, 居中对齐, 底部对齐, 按第一行文字基线对齐, 未设置高度或设为 auto，将占满整个容器的高度
     */
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(['top', 'center', 'bottom', 'baseline', 'stretch']),
    /**
     * （不支持IE9浏览器）行内具有多余空间时的布局方式
     * @enumdesc 左对齐, 居中对齐, 右对齐, 两端对齐，列之间间距相等, 每列具有相同的左右间距，行两端间距是列间距的二分之一
     */
    justify: _prop_types_15_8_1_prop_types_default.a.oneOf(['start', 'center', 'end', 'space-between', 'space-around']),
    /**
     * 行在不同断点下的显示与隐藏<br><br>**可选值**:<br>true(在所有断点下隐藏)<br>false(在所有断点下显示)<br>'xs'(在 xs 断点下隐藏）<br>['xxs', 'xs', 's', 'm', 'l', 'xl'](在 xxs, xs, s, m, l, xl 断点下隐藏）
     */
    hidden: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 指定以何种元素渲染该节点
     * - 默认为 'div'
     */
    component: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.func])
}, row__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    fixed: false,
    gutter: 0,
    wrap: false,
    component: 'div'
}, row__temp);
row_Row.displayName = 'Row';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/grid/col.js







var col__class, col__temp;





var breakPoints = ['xxs', 'xs', 's', 'm', 'l', 'xl'];

/**
 * Grid.Col
 * @order 2
 */
var col_Col = (col__temp = col__class = function (_Component) {
    inherits_default()(Col, _Component);

    function Col() {
        classCallCheck_default()(this, Col);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Col.prototype.render = function render() {
        var _this2 = this,
            _extends2,
            _extends3;

        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            pure = _props.pure,
            span = _props.span,
            offset = _props.offset,
            fixedSpan = _props.fixedSpan,
            fixedOffset = _props.fixedOffset,
            hidden = _props.hidden,
            align = _props.align,
            xxs = _props.xxs,
            xs = _props.xs,
            s = _props.s,
            m = _props.m,
            l = _props.l,
            xl = _props.xl,
            Tag = _props.component,
            className = _props.className,
            children = _props.children,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'pure', 'span', 'offset', 'fixedSpan', 'fixedOffset', 'hidden', 'align', 'xxs', 'xs', 's', 'm', 'l', 'xl', 'component', 'className', 'children', 'rtl']);
        /* eslint-enable no-unused-vars */

        var pointClassObj = breakPoints.reduce(function (ret, point) {
            var pointProps = {};
            if (typeof_default()(_this2.props[point]) === 'object') {
                pointProps = _this2.props[point];
            } else {
                pointProps.span = _this2.props[point];
            }

            ret[prefix + 'col-' + point + '-' + pointProps.span] = !!pointProps.span;
            ret[prefix + 'col-' + point + '-offset-' + pointProps.offset] = !!pointProps.offset;

            return ret;
        }, {});

        var hiddenClassObj = void 0;
        if (hidden === true) {
            var _hiddenClassObj;

            hiddenClassObj = (_hiddenClassObj = {}, _hiddenClassObj[prefix + 'col-hidden'] = true, _hiddenClassObj);
        } else if (typeof hidden === 'string') {
            var _hiddenClassObj2;

            hiddenClassObj = (_hiddenClassObj2 = {}, _hiddenClassObj2[prefix + 'col-' + hidden + '-hidden'] = !!hidden, _hiddenClassObj2);
        } else if (Array.isArray(hidden)) {
            hiddenClassObj = hidden.reduce(function (ret, point) {
                ret[prefix + 'col-' + point + '-hidden'] = !!point;
                return ret;
            }, {});
        }

        var classes = _classnames_2_3_1_classnames_default()(extends_default()((_extends2 = {}, _extends2[prefix + 'col'] = true, _extends2[prefix + 'col-' + span] = !!span, _extends2[prefix + 'col-fixed-' + fixedSpan] = !!fixedSpan, _extends2[prefix + 'col-offset-' + offset] = !!offset, _extends2[prefix + 'col-offset-fixed-' + fixedOffset] = !!fixedOffset, _extends2[prefix + 'col-' + align] = !!align, _extends2), pointClassObj, hiddenClassObj, (_extends3 = {}, _extends3[className] = className, _extends3)));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({
                dir: rtl ? 'rtl' : 'ltr',
                role: 'gridcell',
                className: classes
            }, others),
            children
        );
    };

    return Col;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), col__class.isNextCol = true, col__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 列内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 列宽度<br><br>**可选值**:<br>1, 2, 3, ..., 22, 23, 24
     */
    span: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 固定列宽度，宽度值为20 * 栅格数<br><br>**可选值**:<br>1, 2, 3, ..., 28, 29, 30
     */
    fixedSpan: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * （不支持IE9浏览器）列偏移<br><br>**可选值**:<br>1, 2, 3, ..., 22, 23, 24
     */
    offset: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * （不支持IE9浏览器）固定列偏移，宽度值为20 * 栅格数<br><br>**可选值**:<br>1, 2, 3, ..., 28, 29, 30
     */
    fixedOffset: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * （不支持IE9浏览器）多列垂直方向对齐方式，可覆盖Row的align属性
     */
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(['top', 'center', 'bottom', 'baseline', 'stretch']),
    /**
     * 列在不同断点下的显示与隐藏<br><br>**可选值**:<br>true(在所有断点下隐藏)<br>false(在所有断点下显示)<br>'xs'(在 xs 断点下隐藏）<br>['xxs', 'xs', 's', 'm', 'l', 'xl'](在 xxs, xs, s, m, l, xl 断点下隐藏）
     */
    hidden: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * >=320px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象
     */
    xxs: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * >=480px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象
     */
    xs: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * >=720px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象
     */
    s: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * >=990px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象
     */
    m: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * >=1200px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象
     */
    l: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * >=1500px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象
     */
    xl: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * 指定以何种元素渲染该节点，默认为 'div'
     */
    component: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.func])
}, col__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    component: 'div'
}, col__temp);
col_Col.displayName = 'Col';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/grid/index.js






var Grid = {
    Row: config_provider.config(row_Row, {
        transform: /* istanbul ignore next */function transform(props, deprecated) {
            if ('type' in props) {
                deprecated('type', 'fixed | wrap | gutter', 'Row');

                var _props = props,
                    type = _props.type,
                    others = objectWithoutProperties_default()(_props, ['type']);

                var types = Array.isArray(type) ? type : [type];
                var fixed = void 0;
                if (types.indexOf('fixed') > -1) {
                    fixed = true;
                }
                var wrap = void 0;
                if (types.indexOf('wrap') > -1) {
                    wrap = true;
                }
                props = extends_default()({ fixed: fixed, wrap: wrap }, others);
            }

            return props;
        }
    }),
    Col: config_provider.config(col_Col)
};

/* harmony default export */ var grid = (Grid);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/form/error.js






var error__class, error__temp2;






/**
 * Form.Error
 * @description 自定义错误展示
 * @order 4
 */
var error_Error = (error__temp2 = error__class = function (_React$Component) {
    inherits_default()(Error, _React$Component);

    function Error() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Error);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.itemRender = function (errors) {
            return errors.length ? errors : null;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Error.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            children = _props.children,
            name = _props.name,
            prefix = _props.prefix,
            style = _props.style,
            className = _props.className,
            _field = _props.field,
            others = objectWithoutProperties_default()(_props, ['children', 'name', 'prefix', 'style', 'className', 'field']);

        if (children && typeof children !== 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'form-item-help' },
                children
            );
        }

        var field = this.context._formField || _field;

        if (!field || !name) {
            return null;
        }

        var isSingle = typeof name === 'string';

        var names = isSingle ? [name] : name;
        var errorArr = [];

        if (names.length) {
            var errors = field.getErrors(names);
            Object.keys(errors).forEach(function (key) {
                if (errors[key]) {
                    errorArr.push(errors[key]);
                }
            });
        }

        var result = null;
        if (typeof children === 'function') {
            result = children(errorArr, isSingle ? field.getState(name) : undefined);
        } else {
            result = this.itemRender(errorArr);
        }

        if (!result) {
            return null;
        }

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'form-item-help'] = true, _classNames[className] = className, _classNames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, others, { className: cls, style: style }),
            result
        );
    };

    return Error;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), error__class.propTypes = {
    /**
     * 表单名
     */
    name: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 自定义 field (在 Form 内不需要设置)
     */
    field: _prop_types_15_8_1_prop_types_default.a.object,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义错误渲染, 可以是 node 或者 function(errors, state)
     */
    children: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func]),
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, error__class.defaultProps = {
    prefix: 'next-'
}, error__class.contextTypes = {
    _formField: _prop_types_15_8_1_prop_types_default.a.object
}, error__class._typeMark = 'form_error', error__temp2);
error_Error.displayName = 'Error';


/* harmony default export */ var form_error = (config_provider.config(error_Error));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/form/enhance.js
function getCfgFromProps(props, type) {
    if (type in props) {
        return props[type];
    }

    return undefined;
}

function getRule(ruleName, props) {
    var _ref;

    return _ref = {}, _ref[ruleName] = props[ruleName], _ref.message = getCfgFromProps(props, ruleName + 'Message'), _ref.trigger = getCfgFromProps(props, ruleName + 'Trigger'), _ref;
}

function getValueName(props, displayName) {
    if (props.valueName) {
        return props.valueName;
    }

    if (typeof displayName === 'string') {
        // Next Components are all wrappered by configProvider
        var componentName = displayName.replace(/Config\(/g, '').replace(/\)/g, '');
        if (['Switch', 'Checkbox', 'Radio'].indexOf(componentName) !== -1) {
            return 'checked';
        }
    }

    return 'value';
}

function getRules(props, labelForErrorMessage) {
    var result = [];

    // required
    if (props.required) {
        result.push(getRule('required', props));
    }

    var maxLength = Number(props.maxLength);
    var minLength = Number(props.minLength);
    if (minLength || maxLength) {
        result.push({
            minLength: minLength,
            maxLength: maxLength,
            // minLengthMessage maxLengthMessage had been deprected, please use minmaxLength. TODO: removed in 2.0
            message: getCfgFromProps(props, 'minmaxLengthMessage') || getCfgFromProps(props, 'minLengthMessage') || getCfgFromProps(props, 'maxLengthMessage'),
            trigger: getCfgFromProps(props, 'minmaxLengthTrigger') || getCfgFromProps(props, 'minLengthTrigger') || getCfgFromProps(props, 'maxLengthTrigger')
        });
    }

    // length
    if (props.length) {
        result.push(getRule('length', props));
    }

    // pattern
    if (props.pattern) {
        result.push(getRule('pattern', props));
    }

    // format
    if (['number', 'tel', 'url', 'email'].indexOf(props.format) > -1) {
        result.push(getRule('format', props));
    }

    var max = Number(props.max);
    var min = Number(props.min);
    // max min
    if (max || min) {
        result.push({
            min: min,
            max: max,
            // minMessage maxMessage had been deprected, please use minmaxLength. TODO: removed in 2.0
            message: getCfgFromProps(props, 'minmaxMessage') || getCfgFromProps(props, 'minMessage') || getCfgFromProps(props, 'maxMessage'),
            trigger: getCfgFromProps(props, 'minmaxTrigger') || getCfgFromProps(props, 'minTrigger') || getCfgFromProps(props, 'maxTrigger')
        });
    }

    if (props.validator && typeof props.validator === 'function') {
        result.push({
            validator: props.validator,
            trigger: getCfgFromProps(props, 'validatorTrigger')
        });
    }

    if (labelForErrorMessage) {
        result.forEach(function (r) {
            r.aliasName = labelForErrorMessage;
        });
    }

    return result;
}

function getFieldInitCfg(props, displayName, labelForErrorMessage) {
    return {
        valueName: getValueName(props, displayName),
        trigger: props.trigger ? props.trigger : 'onChange',
        autoValidate: props.autoValidate,
        rules: getRules(props, labelForErrorMessage)
    };
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/form/item.js






var form_item__class, form_item__temp;










var item_Row = grid.Row,
    item_Col = grid.Col;
var item_Cell = responsive_grid.Cell;
var item_isNil = util_obj.isNil;

/** Form.Item
 *  @description 手动传递了 wrapCol labelCol 会使用 Grid 辅助布局; labelAlign='top' 会强制禁用 Grid
 *  @order 1
 */

var form_item_Item = (form_item__temp = form_item__class = function (_React$Component) {
    inherits_default()(Item, _React$Component);

    function Item() {
        classCallCheck_default()(this, Item);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    /**
     * 从子元素里面提取表单组件. TODO: 2.x 中改为只获取一个元素
     */
    Item.prototype.getNames = function getNames(children) {
        var name = this.props.name;

        var childrenList = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.toArray(children);
        var nameList = childrenList.filter(function (c) {
            return c.props && ('name' in c.props || 'data-meta' in c.props);
        }).map(function (c) {
            return c.props.name || c.props.id;
        });

        if (nameList.length) {
            return nameList;
        } else if (name) {
            return [name];
        }

        return [];
    };

    Item.prototype.getHelper = function getHelper(children) {
        var help = this.props.help;
        var _formField = this.context._formField;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            form_error,
            { name: help === undefined ? this.getNames(children) : undefined, field: _formField },
            help
        );
    };

    Item.prototype.getState = function getState(children) {
        var validateState = this.props.validateState;

        if (validateState) {
            return validateState;
        }

        if (this.context._formField) {
            var getState = this.context._formField.getState;

            var names = this.getNames(children);
            if (!names.length) {
                return '';
            }

            // get first name
            return getState(names[0]);
        }

        return undefined;
    };

    Item.prototype.getSize = function getSize() {
        return this.props.size || this.context._formSize;
    };

    Item.prototype.getDisabled = function getDisabled() {
        return 'disabled' in this.props ? this.props.disabled : this.context._formDisabled;
    };

    Item.prototype.getIsPreview = function getIsPreview() {
        return 'isPreview' in this.props ? this.props.isPreview : this.context._formPreview;
    };

    Item.prototype.getFullWidth = function getFullWidth() {
        return item_isNil(this.props.fullWidth) ? !!this.context._formFullWidth : this.props.fullWidth;
    };

    Item.prototype.getLabelForErrorMessage = function getLabelForErrorMessage() {
        var label = this.props.label;

        if (!label || typeof label !== 'string') {
            return null;
        }

        label = label.replace(':', '').replace('：', '');

        var labelForErrorMessage = 'useLabelForErrorMessage' in this.props ? this.props.useLabelForErrorMessage : this.context._formLabelForErrorMessage;
        if (labelForErrorMessage && label) {
            return label;
        }

        return null;
    };

    Item.prototype.getItemLabel = function getItemLabel(children) {
        var _classNames;

        var _props = this.props,
            id = _props.id,
            required = _props.required,
            _props$asterisk = _props.asterisk,
            asterisk = _props$asterisk === undefined ? required : _props$asterisk,
            label = _props.label,
            labelCol = _props.labelCol,
            wrapperCol = _props.wrapperCol,
            prefix = _props.prefix,
            responsive = _props.responsive,
            labelWidth = _props.labelWidth,
            labelTextAlign = _props.labelTextAlign,
            colon = _props.colon;


        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);

        if (!label) {
            return null;
        }

        var ele = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'label',
            { htmlFor: id || this.getNames(children)[0], required: asterisk, key: 'label' },
            label
        );

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'form-item-label'] = true, _classNames['has-colon'] = colon, _classNames[prefix + 'left'] = labelTextAlign === 'left', _classNames));

        if (responsive && labelWidth && labelAlign !== 'top') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: cls, style: { width: labelWidth } },
                ele
            );
        }

        if ((wrapperCol || labelCol) && labelAlign !== 'top') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                item_Col,
                extends_default()({}, labelCol, { className: cls }),
                ele
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: cls },
            ele
        );
    };

    Item.prototype.getItemWrapper = function getItemWrapper(children) {
        var _this2 = this;

        var _props2 = this.props,
            hasFeedback = _props2.hasFeedback,
            labelCol = _props2.labelCol,
            wrapperCol = _props2.wrapperCol,
            extra = _props2.extra,
            prefix = _props2.prefix,
            renderPreview = _props2.renderPreview,
            name = _props2.name;


        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);

        var state = this.getState(children);

        var isPreview = this.getIsPreview();
        var childrenProps = {
            size: this.getSize()
        };

        if (isPreview) {
            childrenProps.isPreview = true;
        }

        if ('renderPreview' in this.props && typeof renderPreview === 'function') {
            childrenProps.renderPreview = renderPreview;
        }

        if (state && (state === 'error' || hasFeedback)) {
            childrenProps.state = state;
        }

        if (labelAlign === 'inset') {
            childrenProps.label = this.getItemLabel(children);
        }

        if (this.getDisabled()) {
            childrenProps.disabled = true;
        }

        var labelForErrorMessage = this.getLabelForErrorMessage();

        var ele = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.map(children, function (child, idx) {
            if (child && ['function', 'object'].indexOf(typeof_default()(child.type)) > -1 && child.type._typeMark !== 'form_item' && child.type._typeMark !== 'form_error') {
                var extraProps = childrenProps;
                // 自己直接使用 field.init 会在 props 上面留下 data-meta
                // name 挪到 FormItem 上面，默认把第一个元素当做 Form 组件
                if (_this2.context._formField && !('data-meta' in child.props) && ('name' in child.props || name && idx === 0) //TODO：1.x 为了不BR, 2.x 中把优先级调换下，优先取 FormItem 的 name
                ) {
                        var initName = 'name' in child.props && child.props.name ? child.props.name : name;
                        extraProps = _this2.context._formField.init(initName, extends_default()({}, getFieldInitCfg(_this2.props, child.type.displayName, labelForErrorMessage), {
                            props: extends_default()({}, child.props, { ref: child.ref })
                        }), childrenProps);
                    } else {
                    extraProps = extends_default()({}, child.props, extraProps);
                }

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, extraProps);
            }

            return child;
        });

        var help = this.getHelper(children);

        if ((wrapperCol || labelCol) && labelAlign !== 'top') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                item_Col,
                extends_default()({}, wrapperCol, { className: prefix + 'form-item-control', key: 'item' }),
                ele,
                ' ',
                help,
                ' ',
                extra
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'form-item-control' },
            ele,
            ' ',
            help,
            ' ',
            extra
        );
    };

    Item.prototype.getLabelAlign = function getLabelAlign(labelAlign, device) {
        if (device === 'phone') {
            return 'top';
        }

        return labelAlign;
    };

    Item.prototype.render = function render() {
        var _classNames2;

        var _props3 = this.props,
            className = _props3.className,
            style = _props3.style,
            prefix = _props3.prefix,
            wrapperCol = _props3.wrapperCol,
            labelCol = _props3.labelCol,
            responsive = _props3.responsive,
            children = _props3.children;


        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);

        var childrenNode = children;
        if (typeof children === 'function' && this.context._formField) {
            childrenNode = children(this.context._formField.getValues());
        }

        var state = this.getState(childrenNode);
        var size = this.getSize();
        var fullWidth = this.getFullWidth();
        var isPreview = this.getIsPreview();

        var itemClassName = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'form-item'] = true, _classNames2['' + prefix + labelAlign] = labelAlign, _classNames2['has-' + state] = !!state, _classNames2['' + prefix + size] = !!size, _classNames2[prefix + 'form-item-fullwidth'] = fullWidth, _classNames2['' + className] = !!className, _classNames2[prefix + 'form-preview'] = isPreview, _classNames2));

        // 垂直模式并且左对齐才用到
        var Tag = responsive ? item_Cell : (wrapperCol || labelCol) && labelAlign !== 'top' ? item_Row : 'div';
        var label = labelAlign === 'inset' ? null : this.getItemLabel(childrenNode);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({}, util_obj.pickOthers(Item.propTypes, this.props), { className: itemClassName, style: style }),
            label,
            this.getItemWrapper(childrenNode)
        );
    };

    return Item;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), form_item__class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * label 标签的文本
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * label 标签布局，通 `<Col>` 组件，设置 span offset 值，如 {span: 8, offset: 16}，该项仅在垂直表单有效
     */
    labelCol: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol
     */
    wrapperCol: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义提示信息，如不设置，则会根据校验规则自动生成.
     */
    help: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 字段名，默认赋值给第一个子元素
     */
    name: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。 位于错误信息后面
     */
    extra: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 校验状态，如不设置，则会根据校验规则自动生成
     * @enumdesc 失败, 成功, 校验中, 警告
     */
    validateState: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'success', 'loading', 'warning']),
    /**
     * 配合 validateState 属性使用，是否展示 success/loading 的校验状态图标, 目前只有Input支持
     */
    hasFeedback: _prop_types_15_8_1_prop_types_default.a.bool, //TODO: hasFeedback => validateStatus=[error,success,loading]
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    id: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * node 或者 function(values)
     */
    children: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func]),
    /**
     * 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['large', 'small', 'medium']),
    /**
     * 单个 Item 中表单类组件宽度是否是100%
     */
    fullWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 标签的位置, 如果不设置 labelCol 和 wrapperCol 那么默认是标签在上
     * @enumdesc 上, 左, 内
     */
    labelAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['top', 'left', 'inset']),
    /**
     * 标签的左右对齐方式
     * @enumdesc 左, 右
     */
    labelTextAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
    /**
     * 扩展class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * [表单校验] 不能为空
     */
    required: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * required 的星号是否显示
     */
    asterisk: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * required 自定义错误信息
     */
    requiredMessage: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * required 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    requiredTrigger: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * [表单校验] 最小值
     */
    min: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * [表单校验] 最大值
     */
    max: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * min/max 自定义错误信息
     */
    minmaxMessage: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * min/max 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    minmaxTrigger: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * [表单校验] 字符串最小长度 / 数组最小个数
     */
    minLength: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * [表单校验] 字符串最大长度 / 数组最大个数
     */
    maxLength: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * minLength/maxLength 自定义错误信息
     */
    minmaxLengthMessage: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * minLength/maxLength 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    minmaxLengthTrigger: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * [表单校验] 字符串精确长度 / 数组精确个数
     */
    length: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * length 自定义错误信息
     */
    lengthMessage: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * length 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    lengthTrigger: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 正则校验
     */
    pattern: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * pattern 自定义错误信息
     */
    patternMessage: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * pattern 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    patternTrigger: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * [表单校验] 四种常用的 pattern
     */
    format: _prop_types_15_8_1_prop_types_default.a.oneOf(['number', 'email', 'url', 'tel']),
    /**
     * format 自定义错误信息
     */
    formatMessage: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * format 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    formatTrigger: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * [表单校验] 自定义校验函数
     */
    validator: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * validator 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    validatorTrigger: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 是否修改数据时自动触发校验
     */
    autoValidate: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预设屏幕宽度
     */
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['phone', 'tablet', 'desktop']),
    responsive: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 在响应式布局模式下，表单项占多少列
     */
    colSpan: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 在响应式布局下，且label在左边时，label的宽度是多少
     */
    labelWidth: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 是否开启预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {any} value 根据包裹的组件的 value 类型而决定
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否使用 label 替换校验信息的 name 字段
     */
    useLabelForErrorMessage: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 表示是否显示 label 后面的冒号
     */
    colon: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用表单
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 子元素的 value 名称
     */
    valueName: _prop_types_15_8_1_prop_types_default.a.string
}, form_item__class.defaultProps = {
    prefix: 'next-',
    hasFeedback: false,
    labelWidth: 100
}, form_item__class.contextTypes = {
    _formField: _prop_types_15_8_1_prop_types_default.a.object,
    _formSize: _prop_types_15_8_1_prop_types_default.a.oneOf(['large', 'small', 'medium']),
    _formDisabled: _prop_types_15_8_1_prop_types_default.a.bool,
    _formPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    _formFullWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    _formLabelForErrorMessage: _prop_types_15_8_1_prop_types_default.a.bool
}, form_item__class._typeMark = 'form_item', form_item__temp);
form_item_Item.displayName = 'Item';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/form/submit.js





var submit__class, submit__temp2;






/**
 * Form.Submit
 * @description 继承 Button API
 * @order 2
 */
var submit_Submit = (submit__temp2 = submit__class = function (_React$Component) {
    inherits_default()(Submit, _React$Component);

    function Submit() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Submit);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function () {
            var _this$props = _this.props,
                onClick = _this$props.onClick,
                validate = _this$props.validate;

            var field = _this.context._formField || _this.props.field;

            if (!field) {
                onClick();
                return;
            }

            if (validate === true) {
                field.validate(function (errors) {
                    onClick(field.getValues(), errors, field);
                });
            } else if (Array.isArray(validate)) {
                field.validate(validate, function (errors) {
                    onClick(field.getValues(), errors, field);
                });
            } else {
                onClick(field.getValues(), null, field);
            }
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Submit.prototype.render = function render() {
        var children = this.props.children;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            extends_default()({}, util_obj.pickOthers(Submit.propTypes, this.props), {
                onClick: this.handleClick
            }),
            children
        );
    };

    return Submit;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), submit__class.propTypes = {
    /**
     * 点击提交后触发
     * @param {Object} value 数据
     * @param {Object} errors 错误数据
     * @param {class} field 实例
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否校验/需要校验的 name 数组
     */
    validate: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.array]),
    /**
     * 自定义 field (在 Form 内不需要设置)
     */
    field: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, submit__class.defaultProps = {
    onClick: func.noop
}, submit__class.contextTypes = {
    _formField: _prop_types_15_8_1_prop_types_default.a.object
}, submit__temp2);
submit_Submit.displayName = 'Submit';


/* harmony default export */ var form_submit = (submit_Submit);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/form/reset.js





var reset__class, reset__temp2;






/**
 * Form.Reset
 * @description 继承 Button API
 * @order 3
 */
var reset_Reset = (reset__temp2 = reset__class = function (_React$Component) {
    inherits_default()(Reset, _React$Component);

    function Reset() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Reset);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function () {
            var _this$props = _this.props,
                names = _this$props.names,
                toDefault = _this$props.toDefault,
                onClick = _this$props.onClick;

            var field = _this.context._formField || _this.props.field;

            if (!field) {
                onClick();
                return;
            }

            if (toDefault) {
                field.resetToDefault(names);
            } else {
                field.reset(names);
            }

            onClick();
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Reset.prototype.render = function render() {
        var children = this.props.children;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            extends_default()({}, util_obj.pickOthers(Reset.propTypes, this.props), {
                onClick: this.handleClick
            }),
            children
        );
    };

    return Reset;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), reset__class.propTypes = {
    /**
     * 自定义重置的字段
     */
    names: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 点击提交后触发
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 返回默认值
     */
    toDefault: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义 field (在 Form 内不需要设置)
     */
    field: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, reset__class.defaultProps = {
    onClick: func.noop
}, reset__class.contextTypes = {
    _formField: _prop_types_15_8_1_prop_types_default.a.object
}, reset__temp2);
reset_Reset.displayName = 'Reset';


/* harmony default export */ var form_reset = (reset_Reset);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/form/index.js









form_Form.Item = config_provider.config(form_item_Item, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('validateStatus' in props) {
            deprecated('validateStatus', 'validateState', 'Form.Item');

            var _props = props,
                validateStatus = _props.validateStatus,
                others = objectWithoutProperties_default()(_props, ['validateStatus']);

            props = extends_default()({ validateState: validateStatus }, others);
        }

        return props;
    }
});
form_Form.Submit = form_submit;
form_Form.Reset = form_reset;
form_Form.Error = form_error;

/* harmony default export */ var es_form = (config_provider.config(form_Form, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('direction' in props) {
            deprecated('direction', 'inline', 'Form');

            var _props2 = props,
                direction = _props2.direction,
                others = objectWithoutProperties_default()(_props2, ['direction']);

            if (direction === 'hoz') {
                props = extends_default()({ inline: true }, others);
            }
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/loading/index.js





var loading__class, loading__temp;








/* eslint-disable react/prefer-stateless-function */

/** Loading */
var loading_Loading = (loading__temp = loading__class = function (_React$Component) {
    inherits_default()(Loading, _React$Component);

    function Loading() {
        classCallCheck_default()(this, Loading);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Loading.prototype.render = function render() {
        var _classNames2, _classNames3, _classNames4;

        var _props = this.props,
            tip = _props.tip,
            visible = _props.visible,
            children = _props.children,
            className = _props.className,
            style = _props.style,
            indicator = _props.indicator,
            color = _props.color,
            prefix = _props.prefix,
            fullScreen = _props.fullScreen,
            disableScroll = _props.disableScroll,
            onVisibleChange = _props.onVisibleChange,
            tipAlign = _props.tipAlign,
            size = _props.size,
            inline = _props.inline,
            rtl = _props.rtl,
            safeNode = _props.safeNode;


        var indicatorDom = null;
        var dotCls = prefix + 'loading-dot';

        if (indicator) {
            indicatorDom = indicator;
        } else {
            var _classNames;

            var backgroundColor = color;
            var fusionReactorCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'loading-fusion-reactor'] = true, _classNames[prefix + 'loading-medium-fusion-reactor'] = size === 'medium', _classNames));
            indicatorDom = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: fusionReactorCls, dir: rtl ? 'rtl' : undefined },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: dotCls, style: { backgroundColor: backgroundColor } }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: dotCls, style: { backgroundColor: backgroundColor } }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: dotCls, style: { backgroundColor: backgroundColor } }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: dotCls, style: { backgroundColor: backgroundColor } })
            );
        }

        var loadingCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'loading'] = true, _classNames2[prefix + 'open'] = visible, _classNames2[prefix + 'loading-inline'] = inline, _classNames2[className] = className, _classNames2));

        var tipCls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'loading-tip'] = true, _classNames3[prefix + 'loading-tip-fullscreen'] = fullScreen, _classNames3[prefix + 'loading-right-tip'] = tipAlign === 'right', _classNames3));

        var others = util_obj.pickOthers(Loading.propTypes, this.props);

        var contentCls = _classnames_2_3_1_classnames_default()((_classNames4 = {}, _classNames4[prefix + 'loading-component'] = visible, _classNames4[prefix + 'loading-wrap'] = true, _classNames4));

        return fullScreen ? [children, external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            next_es_overlay,
            extends_default()({
                key: 'overlay',
                hasMask: true,
                align: 'cc cc',
                safeNode: safeNode,
                disableScroll: disableScroll
            }, others, {
                className: className,
                style: style,
                visible: visible,
                onRequestClose: onVisibleChange
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: tipCls },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'loading-indicator' },
                    indicatorDom
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'loading-tip-content' },
                    tip
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'loading-tip-placeholder' },
                    tip
                )
            )
        )] : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ className: loadingCls, style: style }, others),
            visible ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: tipCls },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'loading-indicator' },
                    indicatorDom
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'loading-tip-content' },
                    tip
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'loading-tip-placeholder' },
                    tip
                )
            ) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: contentCls },
                visible ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'loading-masker' }) : null,
                children
            )
        );
    };

    return Loading;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), loading__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内容，可以传入string或reactElement
     */
    tip: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 自定义内容位置
     * @enumdesc 出现在动画右边, 出现在动画下面
     */
    tipAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['right', 'bottom']),
    /**
     * loading 状态, 默认 true
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 全屏模式下，loading弹层请求关闭时触发的回调函数
     * @param {String} type 弹层关闭的来源
     * @param {Object} e DOM 事件
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 设置动画尺寸
     * @description 仅仅对默认动画效果起作用
     * @enumdesc 大号, 中号
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['large', 'medium']),
    /**
     * 自定义动画
     */
    indicator: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 动画颜色
     */
    color: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 全屏展示
     */
    fullScreen: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当点击 document 的时候，如果包含该节点则不会关闭弹层，
     * 如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点，或者以上值组成的数组
     * 是否禁用滚动，仅在 fullScreen 模式下生效
     */
    disableScroll: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 安全节点，fullScreen时有效，
     */
    safeNode: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 子元素
     */
    children: _prop_types_15_8_1_prop_types_default.a.any,
    inline: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}), loading__class.defaultProps = {
    prefix: 'next-',
    visible: true,
    onVisibleChange: func.noop,
    animate: null,
    tipAlign: 'bottom',
    size: 'large',
    inline: true,
    disableScroll: false
}, loading__temp);
loading_Loading.displayName = 'Loading';


/* harmony default export */ var es_loading = (config_provider.config(loading_Loading));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/menu-button/index.js






var menu_button__class, menu_button__temp;













var menu_button_Popup = next_es_overlay.Popup;

/**
 * MenuButton
 */

var menu_button_MenuButton = (menu_button__temp = menu_button__class = function (_React$Component) {
    inherits_default()(MenuButton, _React$Component);

    function MenuButton(props, context) {
        classCallCheck_default()(this, MenuButton);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        _this.clickMenuItem = function (key) {
            var _this$props;

            for (var _len = arguments.length, others = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                others[_key - 1] = arguments[_key];
            }

            var selectMode = _this.props.selectMode;


            (_this$props = _this.props).onItemClick.apply(_this$props, [key].concat(others));

            if (selectMode === 'multiple') {
                return;
            }

            _this.onPopupVisibleChange(false, 'menuSelect');
        };

        _this.selectMenu = function (keys) {
            var _this$props2;

            for (var _len2 = arguments.length, others = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                others[_key2 - 1] = arguments[_key2];
            }

            if (!('selectedKeys' in _this.props)) {
                _this.setState({
                    selectedKeys: keys
                });
            }
            (_this$props2 = _this.props).onSelect.apply(_this$props2, [keys].concat(others));
        };

        _this.onPopupOpen = function () {
            var button = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(_this);
            if (_this.props.autoWidth && button && _this.menu) {
                _this.menu.style.width = button.offsetWidth + 'px';
            }
        };

        _this.onPopupVisibleChange = function (visible, type) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, type);
        };

        _this._menuRefHandler = function (ref) {
            _this.menu = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(ref);

            var refFn = _this.props.menuProps.ref;
            if (typeof refFn === 'function') {
                refFn(ref);
            }
        };

        _this.state = {
            selectedKeys: props.defaultSelectedKeys,
            visible: props.defaultVisible
        };
        return _this;
    }

    MenuButton.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var st = {};

        if ('visible' in props) {
            st.visible = props.visible;
        }

        if ('selectedKeys' in props) {
            st.selectedKeys = props.selectedKeys;
        }

        return st;
    };

    MenuButton.prototype.render = function render() {
        var _classnames, _classnames2;

        var _props = this.props,
            prefix = _props.prefix,
            style = _props.style,
            className = _props.className,
            label = _props.label,
            popupTriggerType = _props.popupTriggerType,
            popupContainer = _props.popupContainer,
            popupStyle = _props.popupStyle,
            popupClassName = _props.popupClassName,
            popupProps = _props.popupProps,
            followTrigger = _props.followTrigger,
            selectMode = _props.selectMode,
            menuProps = _props.menuProps,
            children = _props.children,
            others = objectWithoutProperties_default()(_props, ['prefix', 'style', 'className', 'label', 'popupTriggerType', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'followTrigger', 'selectMode', 'menuProps', 'children']);

        var state = this.state;

        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'menu-btn'] = true, _classnames[prefix + 'expand'] = state.visible, _classnames.opened = state.visible, _classnames), className);

        var popupClassNames = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'menu-btn-popup'] = true, _classnames2), popupClassName);

        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            extends_default()({ style: style, className: classNames }, util_obj.pickOthers(MenuButton.propTypes, others)),
            label,
            ' ',
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down', className: prefix + 'menu-btn-arrow' })
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            menu_button_Popup,
            extends_default()({}, popupProps, {
                followTrigger: followTrigger,
                visible: state.visible,
                onVisibleChange: this.onPopupVisibleChange,
                trigger: trigger,
                triggerType: popupTriggerType,
                container: popupContainer,
                onOpen: this.onPopupOpen,
                style: popupStyle,
                className: popupClassNames
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'menu-btn-spacing-tb' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_menu,
                    extends_default()({}, menuProps, {
                        ref: this._menuRefHandler,
                        selectedKeys: state.selectedKeys,
                        selectMode: selectMode,
                        onSelect: this.selectMenu,
                        onItemClick: this.clickMenuItem
                    }),
                    children
                )
            )
        );
    };

    return MenuButton;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), menu_button__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 按钮上的文本内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 弹层是否与按钮宽度相同
     */
    autoWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层容器
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层展开状态
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否展开
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层在显示和隐藏触发的事件
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层属性透传
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 默认激活的菜单项（用法同 Menu 非受控）
     */
    defaultSelectedKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 激活的菜单项（用法同 Menu 受控）
     */
    selectedKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 菜单的选择模式，同 Menu
     */
    selectMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple']),
    /**
     * 点击菜单项后的回调，同 Menu
     */
    onItemClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选择菜单后的回调，同 Menu
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 菜单属性透传
     */
    menuProps: _prop_types_15_8_1_prop_types_default.a.object,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.any
}, menu_button__class.defaultProps = {
    prefix: 'next-',
    autoWidth: true,
    popupTriggerType: 'click',
    onVisibleChange: func.noop,
    onItemClick: func.noop,
    onSelect: func.noop,
    defaultSelectedKeys: [],
    menuProps: {}
}, menu_button__temp);
menu_button_MenuButton.displayName = 'MenuButton';


menu_button_MenuButton.Item = es_menu.Item;
menu_button_MenuButton.Group = es_menu.Group;
menu_button_MenuButton.Divider = es_menu.Divider;

/* harmony default export */ var menu_button = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(menu_button_MenuButton), {
    componentName: 'MenuButton'
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/nav/nav.js






var nav__class, nav__temp;







/**
 * Nav
 * @description 继承自 `Menu` 的能力请查看 `Menu` 文档
 */
var nav_Nav = (nav__temp = nav__class = function (_Component) {
  inherits_default()(Nav, _Component);

  function Nav(props) {
    classCallCheck_default()(this, Nav);

    var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

    _this.getMenuRef = _this.getMenuRef.bind(_this);
    return _this;
  }

  Nav.prototype.getChildContext = function getChildContext() {
    var _props = this.props,
        prefix = _props.prefix,
        direction = _props.direction,
        mode = _props.mode,
        iconOnly = _props.iconOnly,
        iconOnlyWidth = _props.iconOnlyWidth,
        hasTooltip = _props.hasTooltip,
        hasArrow = _props.hasArrow;
    var isCollapse = this.context.isCollapse;


    return {
      prefix: prefix,
      mode: direction === 'hoz' ? 'popup' : mode,
      iconOnly: 'iconOnly' in this.props ? iconOnly : isCollapse,
      iconOnlyWidth: 'iconOnlyWidth' in this.props ? iconOnlyWidth : undefined,
      hasTooltip: hasTooltip,
      hasArrow: hasArrow
    };
  };

  Nav.prototype.getMenuRef = function getMenuRef(ref) {
    this.menu = ref;
  };

  Nav.prototype.render = function render() {
    var _classNames, _classNames2;

    // eslint-disable-next-line
    var _props2 = this.props,
        prefix = _props2.prefix,
        className = _props2.className,
        style = _props2.style,
        children = _props2.children,
        type = _props2.type,
        direction = _props2.direction,
        activeDirection = _props2.activeDirection,
        mode = _props2.mode,
        triggerType = _props2.triggerType,
        inlineIndent = _props2.inlineIndent,
        openMode = _props2.openMode,
        popupAlign = _props2.popupAlign,
        popupClassName = _props2.popupClassName,
        iconOnly = _props2.iconOnly,
        iconOnlyWidth = _props2.iconOnlyWidth,
        hasArrow = _props2.hasArrow,
        hasTooltip = _props2.hasTooltip,
        embeddable = _props2.embeddable,
        _popupProps = _props2.popupProps,
        rtl = _props2.rtl,
        others = objectWithoutProperties_default()(_props2, ['prefix', 'className', 'style', 'children', 'type', 'direction', 'activeDirection', 'mode', 'triggerType', 'inlineIndent', 'openMode', 'popupAlign', 'popupClassName', 'iconOnly', 'iconOnlyWidth', 'hasArrow', 'hasTooltip', 'embeddable', 'popupProps', 'rtl']);

    var isCollapse = this.context.isCollapse;


    var newIconOnly = 'iconOnly' in this.props ? iconOnly : isCollapse;

    var realActiveDirection = activeDirection;
    if (realActiveDirection && (direction === 'hoz' && (realActiveDirection === 'left' || realActiveDirection === 'right') || direction === 'ver' && (realActiveDirection === 'top' || realActiveDirection === 'bottom'))) {
      realActiveDirection = null;
    }

    if (!newIconOnly && realActiveDirection === undefined) {
      realActiveDirection = direction === 'hoz' ? 'bottom' : type === 'line' ? 'right' : 'left';
    }

    var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'nav'] = true, _classNames['' + prefix + type] = type, _classNames[prefix + 'active'] = realActiveDirection, _classNames['' + prefix + realActiveDirection] = realActiveDirection, _classNames[prefix + 'icon-only'] = newIconOnly, _classNames[prefix + 'custom-icon-only-width'] = newIconOnly && 'iconOnlyWidth' in this.props, _classNames[prefix + 'no-arrow'] = !hasArrow, _classNames[prefix + 'nav-embeddable'] = embeddable, _classNames[className] = !!className, _classNames));
    var newStyle = newIconOnly ? extends_default()({}, style, { width: iconOnlyWidth || 58 }) : style;

    var props = {
      prefix: prefix,
      direction: direction,
      openMode: openMode,
      triggerType: triggerType,
      mode: direction === 'hoz' ? 'popup' : mode,
      popupAlign: direction === 'hoz' ? 'follow' : popupAlign,
      inlineIndent: newIconOnly ? 0 : inlineIndent,
      hasSelectedIcon: false,
      popupAutoWidth: true,
      selectMode: 'single',
      itemClassName: prefix + 'nav-item',
      popupClassName: _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[cls.replace(prefix + 'icon-only', '').replace(prefix + 'nav-embeddable', '')] = mode === 'popup', _classNames2[prefix + 'icon-only'] = newIconOnly && mode === 'inline', _classNames2[popupClassName] = !!popupClassName, _classNames2)),
      popupProps: function popupProps() {
        return extends_default()({}, _popupProps);
      }
    };

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
      es_menu,
      extends_default()({ className: cls, style: newStyle }, props, others, { ref: this.getMenuRef }),
      children
    );
  };

  return Nav;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), nav__class.propTypes = {
  prefix: _prop_types_15_8_1_prop_types_default.a.string,
  pure: _prop_types_15_8_1_prop_types_default.a.bool,
  rtl: _prop_types_15_8_1_prop_types_default.a.bool,
  className: _prop_types_15_8_1_prop_types_default.a.string,
  style: _prop_types_15_8_1_prop_types_default.a.object,
  /**
   * 导航项和子导航
   */
  children: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 导航类型
   * @enumdesc 普通, 主要, 次要, 线形
   */
  type: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'primary', 'secondary', 'line']),
  /**
   * 导航布局
   * @enumdesc 水平, 垂直
   */
  direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
  /**
   * 横向导航条 items 和 footer 的对齐方向，在 direction 设置为 'hoz' 并且 header 存在时生效
   */
  hozAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
  /**
   * 设置组件选中状态的 active 边方向
   * @enumdesc 无, 上, 下, 左, 右
   * @default 当 direction 为 'hoz' 时，默认值为 'bottom'，当 direction 为 'ver' 时，默认值为 'left'
   */
  activeDirection: _prop_types_15_8_1_prop_types_default.a.oneOf([null, 'top', 'bottom', 'left', 'right']),
  /**
   * 子导航打开的模式（水平导航只支持弹出）
   * @eumdesc 行内, 弹出
   */
  mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup']),
  /**
   * 子导航打开的触发方式
   */
  triggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
  /**
   * 内联子导航缩进距离
   */
  inlineIndent: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 首次渲染展开所有的子导航，只在 mode 设置为 'inline' 以及 openMode 设置为 'multiple' 下生效
   */
  defaultOpenAll: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 内联子导航的展开模式，同时可以展开一个同级子导航还是多个同级子导航，该属性仅在 mode 为 inline 时生效
   * @eumdesc 一个, 多个
   */
  openMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple']),
  /**
   * 当前选中导航项的 key 值
   */
  selectedKeys: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
  /**
   * 初始选中导航项的 key 值
   */
  defaultSelectedKeys: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.array]),
  /**
   * 选中或取消选中导航项触发的回调函数
   * @param {Array} selectedKeys 选中的所有导航项的 key
   * @param {Object} item 选中或取消选中的导航项
   * @param {Object} extra 额外参数
   * @param {Boolean} extra.select 是否是选中
   * @param {Array} extra.key 导航项的 key
   * @param {Object} extra.label 导航项的文本
   * @param {Array} extra.keyPath 导航项 key 的路径
   */
  onSelect: _prop_types_15_8_1_prop_types_default.a.func,
  /**
   * 弹出子导航的对齐方式（水平导航只支持 follow ）
   * @eumdesc Item 顶端对齐, Nav 顶端对齐
   */
  popupAlign: _prop_types_15_8_1_prop_types_default.a.oneOf(['follow', 'outside']),
  /**
   * 弹出子导航的自定义类名
   */
  popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * 是否只显示图标
   */
  iconOnly: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * iconOnly 模式下的宽度（仅在 iconOnly=true 时生效） 如果传入了iconOnlyWidth，那么会隐藏文本，例如 Nav.Item 的 label
   */
  iconOnlyWidth: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
  /**
   * 是否显示右侧的箭头（仅在 iconOnly=true 时生效）
   */
  hasArrow: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否有 ToolTips （仅在 iconOnly=true 时生效）
   */
  hasTooltip: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 自定义导航头部
   */
  header: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 自定义导航尾部
   */
  footer: _prop_types_15_8_1_prop_types_default.a.node,
  /**
   * 是否开启嵌入式模式，一般用于Layout的布局中，开启后没有默认背景、外层border、box-shadow，可以配合`<Nav style={{lineHeight: '100px'}}>` 自定义高度
   * @version 1.18
   */
  embeddable: _prop_types_15_8_1_prop_types_default.a.bool,
  popupProps: _prop_types_15_8_1_prop_types_default.a.object
}, nav__class.defaultProps = {
  prefix: 'next-',
  pure: false,
  type: 'normal',
  direction: 'ver',
  hozAlign: 'left',
  mode: 'inline',
  triggerType: 'click',
  inlineIndent: 20,
  defaultOpenAll: false,
  openMode: 'multiple',
  defaultSelectedKeys: [],
  popupAlign: 'follow',
  hasTooltip: false,
  embeddable: false,
  hasArrow: true,
  popupProps: {}
}, nav__class.childContextTypes = {
  prefix: _prop_types_15_8_1_prop_types_default.a.string,
  mode: _prop_types_15_8_1_prop_types_default.a.string,
  iconOnly: _prop_types_15_8_1_prop_types_default.a.bool,
  iconOnlyWidth: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
  hasTooltip: _prop_types_15_8_1_prop_types_default.a.bool,
  hasArrow: _prop_types_15_8_1_prop_types_default.a.bool
}, nav__class.contextTypes = {
  isCollapse: _prop_types_15_8_1_prop_types_default.a.bool
}, nav__temp);
nav_Nav.displayName = 'Nav';


/* harmony default export */ var nav = (config_provider.config(nav_Nav));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/nav/item.js






var nav_item__class, nav_item__temp;








var item_Tooltip = es_balloon.Tooltip;

/**
 * Nav.Item
 * @description 继承自 `Menu.Item` 的能力请查看 `Menu.Item` 文档
 */

var nav_item_Item = (nav_item__temp = nav_item__class = function (_Component) {
    inherits_default()(Item, _Component);

    function Item() {
        classCallCheck_default()(this, Item);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Item.prototype.render = function render() {
        var _context = this.context,
            prefix = _context.prefix,
            iconOnly = _context.iconOnly,
            iconOnlyWidth = _context.iconOnlyWidth,
            hasTooltip = _context.hasTooltip;

        var _props = this.props,
            icon = _props.icon,
            children = _props.children,
            others = objectWithoutProperties_default()(_props, ['icon', 'children']);

        var iconEl = typeof icon === 'string' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: prefix + 'nav-icon', type: icon }) : icon;

        var title = void 0;

        if (typeof children === 'string') {
            title = children;
        }

        var showChildren = !iconOnly || iconOnly && !iconOnlyWidth;

        var item = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu.Item,
            extends_default()({ title: title }, others),
            iconEl,
            showChildren && children
        );

        if (iconOnly && hasTooltip && others.parentMode !== 'popup') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                item_Tooltip,
                { align: 'r', trigger: item },
                children
            );
        }

        return item;
    };

    return Item;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), nav_item__class.menuChildType = 'item', nav_item__class.propTypes = {
    /**
     * 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type="icon type" />`
     */
    icon: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.node]),
    /**
     * 导航内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    parentMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['inline', 'popup'])
}, nav_item__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    iconOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    iconOnlyWidth: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    hasTooltip: _prop_types_15_8_1_prop_types_default.a.bool
}, nav_item__temp);
nav_item_Item.displayName = 'Item';


/* harmony default export */ var nav_item = (nav_item_Item);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/nav/group.js






var nav_group__class, nav_group__temp;






/**
 * Nav.Group
 * @description 继承自 `Menu.Group` 的能力请查看 `Menu.Group` 文档
 */
var nav_group_Group = (nav_group__temp = nav_group__class = function (_Component) {
    inherits_default()(Group, _Component);

    function Group() {
        classCallCheck_default()(this, Group);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Group.prototype.render = function render() {
        var _classNames;

        var _context = this.context,
            prefix = _context.prefix,
            iconOnly = _context.iconOnly;

        var _props = this.props,
            className = _props.className,
            children = _props.children,
            label = _props.label,
            others = objectWithoutProperties_default()(_props, ['className', 'children', 'label']);

        var newLabel = label;
        if (iconOnly) {
            // TODO: add a group icon ?
            newLabel = [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { key: 'label' },
                label
            )];
        }

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'nav-group-label'] = true, _classNames[className] = !!className, _classNames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu.Group,
            extends_default()({ className: cls, label: newLabel }, others),
            children
        );
    };

    return Group;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), nav_group__class.menuChildType = 'group', nav_group__class.propTypes = {
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 标签内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 导航项和子导航
     */
    children: _prop_types_15_8_1_prop_types_default.a.node
}, nav_group__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    iconOnly: _prop_types_15_8_1_prop_types_default.a.bool
}, nav_group__temp);
nav_group_Group.displayName = 'Group';


/* harmony default export */ var nav_group = (nav_group_Group);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/nav/sub-nav.js






var sub_nav__class, sub_nav__temp;







/**
 * Nav.SubNav
 * @description 继承自 `Menu.SubMenu` 的能力请查看 `Menu.SubMenu` 文档
 */
var sub_nav_SubNav = (sub_nav__temp = sub_nav__class = function (_Component) {
    inherits_default()(SubNav, _Component);

    function SubNav() {
        classCallCheck_default()(this, SubNav);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    SubNav.prototype.render = function render() {
        var _classNames;

        var _context = this.context,
            prefix = _context.prefix,
            iconOnly = _context.iconOnly,
            iconOnlyWidth = _context.iconOnlyWidth,
            hasArrow = _context.hasArrow,
            noIcon = _context.noIcon,
            mode = _context.mode;

        var _props = this.props,
            className = _props.className,
            icon = _props.icon,
            label = _props.label,
            children = _props.children,
            level = _props.level,
            others = objectWithoutProperties_default()(_props, ['className', 'icon', 'label', 'children', 'level']);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'nav-sub-nav-item'] = true, _classNames[prefix + 'nav-popup'] = mode === 'popup', _classNames[className] = !!className, _classNames));
        var iconEl = typeof icon === 'string' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: prefix + 'nav-icon', type: icon }) : icon;
        // 这里是为 iconOnly 模式下，添加默认的展开按钮
        // 只有在 inline 模式下 或 popup模式的第一层级，才需要添加默认的按钮
        if (iconOnly && hasArrow && (mode === 'inline' || level === 1 && mode === 'popup')) {
            iconEl = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                className: prefix + 'nav-icon-only-arrow',
                type: mode === 'popup' ? 'arrow-right' : 'arrow-down'
            });
        }

        var newLabel = [iconEl ? Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(iconEl, { key: 'icon' }) : null];

        var showLabel = !iconOnly || iconOnly && !iconOnlyWidth;

        if (showLabel) {
            newLabel.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { key: 'label' },
                label
            ));
        }

        var title = void 0;

        if (typeof label === 'string') {
            title = label;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu.SubMenu,
            extends_default()({ className: cls, label: newLabel, level: level, title: title, noIcon: noIcon }, others),
            children
        );
    };

    return SubNav;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), sub_nav__class.menuChildType = 'submenu', sub_nav__class.propTypes = {
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type="your type" />`
     */
    icon: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.node]),
    /**
     * 标签内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否可选
     */
    selectable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 导航项和子导航
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否需要提示当前项可展开的 icon，默认是有的
     */
    noIcon: _prop_types_15_8_1_prop_types_default.a.bool
}, sub_nav__class.defaultProps = {
    selectable: false
}, sub_nav__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    mode: _prop_types_15_8_1_prop_types_default.a.string,
    iconOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    iconOnlyWidth: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    hasArrow: _prop_types_15_8_1_prop_types_default.a.bool
}, sub_nav__temp);
sub_nav_SubNav.displayName = 'SubNav';


/* harmony default export */ var sub_nav = (sub_nav_SubNav);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/nav/popup-item.js






var nav_popup_item__class, nav_popup_item__temp;







/**
 * Nav.PopupItem
 * @description 继承自 `Menu.PopupItem` 的能力请查看 `Menu.PopupItem` 文档
 */
var nav_popup_item_PopupItem = (nav_popup_item__temp = nav_popup_item__class = function (_Component) {
    inherits_default()(PopupItem, _Component);

    function PopupItem() {
        classCallCheck_default()(this, PopupItem);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    PopupItem.prototype.render = function render() {
        var _classNames;

        var _context = this.context,
            prefix = _context.prefix,
            iconOnly = _context.iconOnly,
            iconOnlyWidth = _context.iconOnlyWidth,
            hasArrow = _context.hasArrow;

        var _props = this.props,
            className = _props.className,
            icon = _props.icon,
            label = _props.label,
            children = _props.children,
            others = objectWithoutProperties_default()(_props, ['className', 'icon', 'label', 'children']);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'nav-popup-item'] = true, _classNames[className] = !!className, _classNames));

        var iconEl = typeof icon === 'string' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: prefix + 'nav-icon', type: icon }) : icon;
        if (iconOnly) {
            if (hasArrow) {
                iconEl = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: prefix + 'nav-icon-only-arrow', type: 'arrow-right' });
            }
        }
        var newLabel = [iconEl ? Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(iconEl, { key: 'icon' }) : null];

        var showLabel = !iconOnly || iconOnly && !iconOnlyWidth;

        if (showLabel) {
            newLabel.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { key: 'label' },
                label
            ));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu.PopupItem,
            extends_default()({ className: cls, label: newLabel }, others),
            children
        );
    };

    return PopupItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), nav_popup_item__class.menuChildType = 'submenu', nav_popup_item__class.propTypes = {
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义图标，可以使用 Icon 的 type, 也可以使用组件 `<Icon type="icon type" />`
     */
    icon: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.node]),
    /**
     * 标签内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 弹出内容
     */
    children: _prop_types_15_8_1_prop_types_default.a.node
}, nav_popup_item__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    iconOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    iconOnlyWidth: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    hasArrow: _prop_types_15_8_1_prop_types_default.a.bool
}, nav_popup_item__temp);
nav_popup_item_PopupItem.displayName = 'PopupItem';


/* harmony default export */ var popup_item = (nav_popup_item_PopupItem);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/nav/index.js







nav.Item = nav_item;
nav.Group = nav_group;
nav.SubNav = sub_nav;
nav.PopupItem = popup_item;
nav.Divider = es_menu.Divider;

/* harmony default export */ var es_nav = (nav);
// EXTERNAL MODULE: ./node_modules/_bignumber.js@9.0.2@bignumber.js/bignumber.js
var bignumber = __webpack_require__(156);
var bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/number-picker/number-picker.js





var number_picker__class, number_picker__temp;












var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
var MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -Math.pow(2, 53) + 1;

var number_picker_isNil = util_obj.isNil;
/** NumberPicker */

var number_picker_NumberPicker = (number_picker__temp = number_picker__class = function (_React$Component) {
    inherits_default()(NumberPicker, _React$Component);

    function NumberPicker(props) {
        classCallCheck_default()(this, NumberPicker);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        var defaultValue = props.defaultValue,
            stringMode = props.stringMode;


        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = defaultValue;
        }
        value = value === undefined || value === null ? '' : stringMode ? '' + value : value;
        _this.state = {
            value: value,
            hasFocused: false,
            onlyDisplay: false,
            displayValue: value,
            max: stringMode ? Infinity : MAX_SAFE_INTEGER,
            min: stringMode ? -Infinity : MIN_SAFE_INTEGER
        };
        return _this;
    }

    NumberPicker.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        // 用户键入非法值后render逻辑，未触发onChange，业务组件无感知，不强制受控value
        if (prevState.onlyDisplay) {
            return {
                value: prevState.value,
                displayValue: prevState.displayValue,
                onlyDisplay: false
            };
        }

        var state = {};
        var value = nextProps.value,
            stringMode = nextProps.stringMode;
        // 一般受控render逻辑

        if ('value' in nextProps && '' + nextProps.value !== '' + prevState.value) {
            var newValue = value === undefined || value === null ? '' : stringMode ? '' + value : value;
            state.value = newValue;
            // 因为 Number('') === 0，所以会导致value=0赋值不生效
            if (prevState.displayValue === '' || Number(prevState.displayValue) !== nextProps.value) {
                state.displayValue = newValue;
            }
        }

        // 如果是undefined或null，应该不限制最大最小值
        var min = nextProps.min,
            max = nextProps.max;

        if ('min' in nextProps && min !== prevState.min) {
            state.min = !number_picker_isNil(min) ? min : stringMode ? Infinity : MIN_SAFE_INTEGER;
        }

        if ('max' in nextProps && max !== prevState.max) {
            state.max = !number_picker_isNil(max) ? max : stringMode ? Infinity : MAX_SAFE_INTEGER;
        }

        if (Object.keys(state).length) {
            return state;
        }

        return null;
    };

    NumberPicker.prototype.isGreaterThan = function isGreaterThan(v1, v2) {
        var stringMode = this.props.stringMode;

        if (stringMode) return bignumber_default()(v1).isGreaterThan(bignumber_default()(v2));
        return Number(v1) > Number(v2);
    };

    NumberPicker.prototype.correctBoundary = function correctBoundary(value) {
        var _state = this.state,
            max = _state.max,
            min = _state.min;

        return this.isGreaterThan(min, value) ? min : this.isGreaterThan(value, max) ? max : value;
    };

    NumberPicker.prototype.setFocus = function setFocus(status) {
        var format = this.props.format;
        // Only trigger `setState` if `format` is settled to avoid unnecessary rendering

        if (typeof format === 'function') {
            this.setState({
                hasFocused: status
            });
        }
    };

    NumberPicker.prototype.onFocus = function onFocus(e) {
        var onFocus = this.props.onFocus;

        this.setFocus(true);

        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
        }

        onFocus && onFocus.apply(undefined, [e].concat(args));
    };

    NumberPicker.prototype.onBlur = function onBlur(e) {
        var _props = this.props,
            editable = _props.editable,
            stringMode = _props.stringMode;

        var displayValue = '' + this.state.displayValue;
        // 展示值合法但超出边界时，额外在Blur时触发onChange
        // 展示值非法时，回退前一个有效值
        if (editable === true && !isNaN(displayValue) && !this.shouldFireOnChange(displayValue) && !this.withinMinMax(displayValue)) {
            var valueCorrected = this.correctValue(displayValue);
            valueCorrected = stringMode ? bignumber_default()(valueCorrected).toFixed(this.getPrecision()) : valueCorrected;
            if (this.state.value !== valueCorrected) {
                this.setValue({ value: valueCorrected, e: e });
            }
            this.setDisplayValue({ displayValue: valueCorrected });
        } else {
            this.setDisplayValue({ displayValue: this.state.value });
        }

        this.setFocus(false);
        var onBlur = this.props.onBlur;

        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
        }

        onBlur && onBlur.apply(undefined, [e].concat(args));
    };

    NumberPicker.prototype.withinMinMax = function withinMinMax(value) {
        var _state2 = this.state,
            max = _state2.max,
            min = _state2.min;

        if (isNaN(value) || this.isGreaterThan(value, max) || this.isGreaterThan(min, value)) return false;
        return true;
    };

    NumberPicker.prototype.setDisplayValue = function setDisplayValue(_ref) {
        var displayValue = _ref.displayValue,
            _ref$onlyDisplay = _ref.onlyDisplay,
            onlyDisplay = _ref$onlyDisplay === undefined ? false : _ref$onlyDisplay;

        this.setState({ displayValue: displayValue, onlyDisplay: onlyDisplay });
    };

    NumberPicker.prototype.getDisplayValue = function getDisplayValue() {
        var _state3 = this.state,
            displayValue = _state3.displayValue,
            hasFocused = _state3.hasFocused;
        var format = this.props.format;


        return typeof format === 'function' && !hasFocused ? format(displayValue) : // 避免原生input将number类型的-0，渲染为0
        typeof displayValue === 'number' && 1 / displayValue === -Infinity ? '-0' : displayValue;
    };

    NumberPicker.prototype.shouldFireOnChange = function shouldFireOnChange(value) {
        // 不触发onChange：a.非数字  b.超出边界的数字输入
        if (isNaN(value) || !this.withinMinMax(value)) {
            return false;
        }
        return true;
    };

    NumberPicker.prototype.onChange = function onChange(value, e) {
        // ignore space & Compatible Chinese Input Method
        value = value.replace('。', '.').trim();
        var onlyDisplay = false;
        if (this.props.editable === true && this.shouldFireOnChange(value)) {
            var valueCorrected = this.correctValue(value);
            if (this.state.value !== valueCorrected) {
                this.setValue({ value: valueCorrected, e: e });
            }
        } else {
            onlyDisplay = true;
        }

        // 【不应支持】如果输入为满足精度要求的纯数字，底层input.value设置为数字类型而非string
        // if (`${valueCorrected}` === value) value = valueCorrected;

        this.setDisplayValue({ displayValue: value, onlyDisplay: onlyDisplay });
    };

    NumberPicker.prototype.correctValue = function correctValue(value) {
        var val = value;

        // take care of isNaN('')=false
        if (val !== '') {
            // 精度订正：直接cut，不四舍五入
            var precisionSet = this.getPrecision();
            var precisionCurrent = value.length - value.indexOf('.') - 1;
            var dotIndex = value.indexOf('.');
            // precision === 0 should cut '.' for stringMode
            var cutPosition = precisionSet !== 0 ? dotIndex + 1 + precisionSet : dotIndex + precisionSet;
            if (dotIndex > -1 && precisionCurrent > precisionSet) val = val.substr(0, cutPosition);

            // 边界订正：
            val = this.correctBoundary(val);
            val = this.props.stringMode ? bignumber_default()(val).toFixed() : Number(val);
        }

        if (isNaN(val)) val = this.state.value;

        if ('' + val !== '' + value) {
            // .0* 到 .x0* 不该触发onCorrect
            if (!/\.[0-9]*0+$/g.test(value)) {
                this.props.onCorrect({
                    currentValue: val,
                    oldValue: value
                });
            }
        }

        return val;
    };

    NumberPicker.prototype.setValue = function setValue(_ref2) {
        var value = _ref2.value,
            e = _ref2.e,
            triggerType = _ref2.triggerType;

        if (!('value' in this.props) || value === this.props.value) {
            this.setState({
                value: value
            });
        }

        this.props.onChange(isNaN(value) || value === '' ? undefined : value, extends_default()({}, e, {
            triggerType: triggerType
        }));
    };

    NumberPicker.prototype.getPrecision = function getPrecision() {
        var stepString = this.props.step.toString();
        if (stepString.indexOf('e-') >= 0) {
            return parseInt(stepString.slice(stepString.indexOf('e-')), 10);
        }
        var precision = 0;
        if (stepString.indexOf('.') >= 0) {
            precision = stepString.length - stepString.indexOf('.') - 1;
        }

        return Math.max(precision, this.props.precision);
    };

    NumberPicker.prototype.getPrecisionFactor = function getPrecisionFactor() {
        var precision = this.getPrecision();
        return Math.pow(10, precision);
    };

    NumberPicker.prototype.onKeyDown = function onKeyDown(e) {
        var _props2;

        if (e.keyCode === 38) {
            this.up(false, e);
        } else if (e.keyCode === 40) {
            this.down(false, e);
        }

        for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
            args[_key3 - 1] = arguments[_key3];
        }

        (_props2 = this.props).onKeyDown.apply(_props2, [e].concat(args));
    };

    NumberPicker.prototype.up = function up(disabled, e) {
        this.step('up', disabled, e);
    };

    NumberPicker.prototype.down = function down(disabled, e) {
        this.step('down', disabled, e);
    };

    NumberPicker.prototype.step = function step(type, disabled, e) {
        if (e) {
            e.preventDefault();
        }

        var onDisabled = this.props.onDisabled;

        if (disabled) {
            return onDisabled(e);
        }

        var value = this.state.value;
        // 受控下，可能强制回填非法值
        if (isNaN(value)) {
            return;
        }

        if (value === '' && !this.props.stringMode) {
            value = 0;
        }

        var val = this[type + 'Step'](value);
        val = this.correctBoundary(val);
        // 受控下，显示的值应为受控value
        if (!('value' in this.props)) {
            this.setDisplayValue({ displayValue: val });
        }

        this.setValue({ value: val, e: e, triggerType: type });
    };

    NumberPicker.prototype.upStep = function upStep(val) {
        var _props3 = this.props,
            step = _props3.step,
            stringMode = _props3.stringMode;

        var precisionFactor = this.getPrecisionFactor();
        if (typeof val === 'number' && !stringMode) {
            var result = (precisionFactor * val + precisionFactor * step) / precisionFactor;
            return this.hackChrome(result);
        }
        return bignumber_default()(val || '0').plus(step).toFixed(this.getPrecision());
    };

    NumberPicker.prototype.downStep = function downStep(val) {
        var _props4 = this.props,
            step = _props4.step,
            stringMode = _props4.stringMode;

        var precisionFactor = this.getPrecisionFactor();
        if (typeof val === 'number' && !stringMode) {
            var result = (precisionFactor * val - precisionFactor * step) / precisionFactor;
            return this.hackChrome(result);
        }
        return bignumber_default()(val || '0').minus(step).toFixed(this.getPrecision());
    };

    /**
     * fix bug in chrome browser
     * 0.28 + 0.01 = 0.29000000000000004
     * 0.29 - 0.01 = 0.27999999999999997
     * @param {Number} value value
     */


    NumberPicker.prototype.hackChrome = function hackChrome(value) {
        var precision = this.getPrecision();
        if (precision > 0) {
            return Number(Number(value).toFixed(precision));
        }
        return value;
    };

    NumberPicker.prototype.focus = function focus() {
        this.inputRef.getInstance().focus();
    };

    NumberPicker.prototype.saveInputRef = function saveInputRef(ref) {
        this.inputRef = ref;
    };

    NumberPicker.prototype.getInputNode = function getInputNode() {
        return this.inputRef;
    };

    NumberPicker.prototype.handleMouseDown = function handleMouseDown(e) {
        e.preventDefault();
    };

    NumberPicker.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props5 = this.props,
            device = _props5.device,
            prefix = _props5.prefix,
            rtl = _props5.rtl,
            disabled = _props5.disabled,
            style = _props5.style,
            className = _props5.className,
            size = _props5.size,
            autoFocus = _props5.autoFocus,
            editable = _props5.editable,
            state = _props5.state,
            label = _props5.label,
            _props5$upBtnProps = _props5.upBtnProps,
            upBtnProps = _props5$upBtnProps === undefined ? {} : _props5$upBtnProps,
            _props5$downBtnProps = _props5.downBtnProps,
            downBtnProps = _props5$downBtnProps === undefined ? {} : _props5$downBtnProps,
            innerAfter = _props5.innerAfter,
            isPreview = _props5.isPreview,
            renderPreview = _props5.renderPreview,
            hasTrigger = _props5.hasTrigger,
            alwaysShowTrigger = _props5.alwaysShowTrigger;
        var _state4 = this.state,
            max = _state4.max,
            min = _state4.min;

        var type = device === 'phone' || this.props.type === 'inline' ? 'inline' : 'normal';

        var prefixCls = prefix + 'number-picker';

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefixCls] = true, _classNames[prefixCls + '-' + type] = type, _classNames['' + prefix + size] = true, _classNames[prefixCls + '-show-trigger'] = alwaysShowTrigger, _classNames[prefixCls + '-no-trigger'] = !hasTrigger, _classNames[prefix + 'disabled'] = disabled, _classNames[className] = className, _classNames));

        var upDisabled = false;
        var downDisabled = false;
        var value = this.state.value;
        if (!isNaN(value)) {
            if (!this.isGreaterThan(max, value)) {
                upDisabled = true;
            }
            if (this.isGreaterThan(min, value) || min === value) {
                downDisabled = true;
            }
        }

        var extra = null,
            innerAfterClassName = null,
            addonBefore = null,
            addonAfter = null;
        if (type === 'normal') {
            extra = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefixCls + '-handler' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    extends_default()({}, upBtnProps, {
                        onMouseDown: this.handleMouseDown,
                        disabled: disabled,
                        className: (upBtnProps.className || '') + ' ' + (upDisabled ? 'disabled' : ''),
                        onClick: this.up.bind(this, upDisabled),
                        tabIndex: -1
                    }),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-up', className: prefixCls + '-up-icon' })
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    extends_default()({}, downBtnProps, {
                        onMouseDown: this.handleMouseDown,
                        disabled: disabled,
                        className: (downBtnProps.className || '') + ' ' + (downDisabled ? 'disabled' : ''),
                        onClick: this.down.bind(this, downDisabled),
                        tabIndex: -1
                    }),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down', className: prefixCls + '-down-icon' })
                )
            );
        } else {
            addonBefore = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                extends_default()({}, downBtnProps, {
                    size: size,
                    disabled: disabled,
                    className: (downBtnProps.className || '') + ' ' + (downDisabled ? 'disabled' : ''),
                    onClick: this.down.bind(this, downDisabled),
                    tabIndex: -1
                }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'minus', className: prefixCls + '-minus-icon' })
            );
            addonAfter = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                extends_default()({}, upBtnProps, {
                    size: size,
                    disabled: disabled,
                    className: (upBtnProps.className || '') + ' ' + (upDisabled ? 'disabled' : ''),
                    onClick: this.up.bind(this, upDisabled),
                    tabIndex: -1
                }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'add', className: prefixCls + '-add-icon' })
            );
        }

        var others = util_obj.pickOthers(NumberPicker.propTypes, this.props);
        var dataAttrs = util_obj.pickAttrsWith(this.props, 'data-');

        var previewCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'form-preview'] = true, _classNames2[className] = !!className, _classNames2));

        if (isPreview) {
            if (typeof renderPreview === 'function') {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({}, others, { style: style, className: previewCls }),
                    renderPreview(this.getDisplayValue(), this.props)
                );
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                extends_default()({}, others, { style: { style: style }, className: previewCls }),
                this.getDisplayValue(),
                '\xA0',
                innerAfter
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({ className: cls, style: style, dir: rtl ? 'rtl' : undefined }, dataAttrs),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, others, {
                hasClear: false,
                'aria-valuemax': max,
                'aria-valuemin': min,
                state: state === 'error' ? 'error' : null,
                onBlur: this.onBlur.bind(this),
                onFocus: this.onFocus.bind(this),
                onKeyDown: this.onKeyDown.bind(this),
                autoFocus: autoFocus,
                readOnly: !editable,
                value: this.getDisplayValue(),
                disabled: disabled,
                size: size,
                onChange: this.onChange.bind(this),
                ref: this.saveInputRef.bind(this),
                label: label,
                innerAfter: innerAfter,
                extra: hasTrigger ? extra : null,
                addonBefore: addonBefore,
                addonAfter: addonAfter,
                composition: true
            }))
        );
    };

    return NumberPicker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), number_picker__class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 设置类型(当 device 为 phone 时，NumberPicker 的类型强制为 normal，不可通过 type 修改)
     * @enumdesc 普通, 内联
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'inline']),
    /**
     * 大小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['large', 'medium', 'small']),
    /**
     * 当前值
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 步长
     */
    step: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 保留小数点后位数
     */
    precision: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 用户是否可以输入
     */
    editable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自动焦点
     */
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 数值被改变的事件
     * @param {Number|String} value 数据
     * @param {Event} e DOM事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 键盘按下
     * @param {Event} e DOM事件对象
     */
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 焦点获得
     * @param {Event} e DOM事件对象
     */
    onFocus: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 焦点失去
     * @param {Event} e DOM事件对象
     */
    onBlur: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 数值订正后的回调
     * @param {Object} obj {currentValue,oldValue:String}
     */
    onCorrect: _prop_types_15_8_1_prop_types_default.a.func,
    onDisabled: _prop_types_15_8_1_prop_types_default.a.func, // 兼容0.x onDisabled
    /**
     * 最大值
     */
    max: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 最小值
     */
    min: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 自定义class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error']),
    /**
     * 格式化当前值
     * @param {Number} value
     * @return {String|Number}
     */
    format: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 增加按钮的props
     */
    upBtnProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 减少按钮的props
     */
    downBtnProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 内联 左侧label
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 内联 右侧附加内容
     */
    innerAfter: _prop_types_15_8_1_prop_types_default.a.node,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Number|String} value 当前值
     * @param {Object} props 传入的组件参数
     * @returns {reactNode} Element 渲染内容
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 预设屏幕宽度
     */
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['phone', 'tablet', 'desktop']),
    /**
     * 是否展示点击按钮
     */
    hasTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否一直显示点击按钮(无须hover)
     */
    alwaysShowTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 开启大数支持，输入输出均为string类型
     * @version 1.24
     */
    stringMode: _prop_types_15_8_1_prop_types_default.a.bool
}, number_picker__class.defaultProps = {
    prefix: 'next-',
    // max: MAX_SAFE_INTEGER,
    // min: MIN_SAFE_INTEGER,
    type: 'normal',
    size: 'medium',
    step: 1,
    style: {},
    precision: 0,
    editable: true,
    onChange: func.noop,
    onKeyDown: func.noop,
    onBlur: func.noop,
    onCorrect: func.noop,
    onDisabled: func.noop,
    hasTrigger: true,
    alwaysShowTrigger: false,
    stringMode: false
}, number_picker__temp);
number_picker_NumberPicker.displayName = 'NumberPicker';


/* harmony default export */ var number_picker = (Object(react_lifecycles_compat_es["polyfill"])(number_picker_NumberPicker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/number-picker/index.js




/* harmony default export */ var es_number_picker = (config_provider.config(number_picker, {
    transform: /* istanbul ignore next */function transform(props) {
        if ('onDisabled' in props && typeof props.onDisabled === 'function') {
            log.warning('[NumberPicker]: onDisabled is deleted!');
        }

        if ('state' in props && props.state === 'success') {
            delete props.state;
        }

        return props;
    },
    exportNames: ['getInputNode']
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/pagination/pagination.js






var pagination__class, pagination__temp;













var pagination_Option = es_select.Option;

var pagination_noop = function noop() {};

function correctCurrent(currentPage, total, currentPageSize) {
    var totalPage = getTotalPage(total, currentPageSize);
    return currentPage > totalPage ? totalPage : currentPage;
}

function getTotalPage(total, currentPageSize) {
    var totalPage = Math.ceil(total / currentPageSize);
    return totalPage <= 0 ? 1 : totalPage;
}

/**
 * Pagination
 */
var pagination_Pagination = (pagination__temp = pagination__class = function (_Component) {
    inherits_default()(Pagination, _Component);

    function Pagination(props, context) {
        classCallCheck_default()(this, Pagination);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this.handleJump = function (e) {
            var total = _this.props.total;
            var _this$state = _this.state,
                current = _this$state.current,
                currentPageSize = _this$state.currentPageSize,
                inputValue = _this$state.inputValue;

            var totalPage = getTotalPage(total, currentPageSize);
            var value = parseInt(inputValue, 10);

            if (isNaN(value)) {
                value = '';
            } else if (value < 1) {
                value = 1;
            } else if (value > totalPage) {
                value = totalPage;
            }

            if (value && value !== current) {
                _this.onPageItemClick(value, e);
            }

            _this.setState({
                inputValue: ''
            });
        };

        _this.state = {
            current: props.defaultCurrent || 1,
            currentPageSize: 0,
            inputValue: ''
        };
        return _this;
    }

    Pagination.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var current = props.current,
            total = props.total,
            pageSize = props.pageSize;

        var st = {};
        var newCurrent = correctCurrent(current || state.current, total, pageSize);
        if (state.current !== newCurrent) {
            st.current = newCurrent;
        }
        if (state.currentPageSize !== pageSize) {
            st.currentPageSize = pageSize;
        }

        return st;
    };

    Pagination.prototype.onPageItemClick = function onPageItemClick(page, e) {
        if (!('current' in this.props)) {
            this.setState({
                current: page
            });
        }
        this.props.onChange(page, e);
    };

    Pagination.prototype.onInputChange = function onInputChange(value) {
        this.setState({
            inputValue: value
        });
    };

    Pagination.prototype.onSelectSize = function onSelectSize(pageSize) {
        var newState = {
            currentPageSize: pageSize
        };

        var totalPage = getTotalPage(this.props.total, pageSize);
        if (this.state.current > totalPage) {
            newState.current = totalPage;
        }

        this.setState(newState);
        this.props.onPageSizeChange(pageSize);
    };

    Pagination.prototype.renderPageTotal = function renderPageTotal() {
        var _props = this.props,
            prefix = _props.prefix,
            total = _props.total,
            totalRender = _props.totalRender;
        var _state = this.state,
            currentPageSize = _state.currentPageSize,
            current = _state.current;

        var range = [(current - 1) * currentPageSize + 1, current * currentPageSize];

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'pagination-total' },
            totalRender(total, range)
        );
    };

    Pagination.prototype.renderPageItem = function renderPageItem(index) {
        var _cx;

        var _props2 = this.props,
            prefix = _props2.prefix,
            size = _props2.size,
            link = _props2.link,
            pageNumberRender = _props2.pageNumberRender,
            total = _props2.total,
            pageSize = _props2.pageSize,
            locale = _props2.locale;
        var current = this.state.current;


        var totalPage = getTotalPage(total, pageSize);
        var isCurrent = parseInt(index, 10) === current;
        var props = {
            size: size,
            className: _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'pagination-item'] = true, _cx[prefix + 'current'] = isCurrent, _cx)),
            onClick: isCurrent ? pagination_noop : this.onPageItemClick.bind(this, index)
        };
        if (link) {
            props.component = 'a';
            props.href = link.replace('{page}', index);
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            extends_default()({
                'aria-label': util_str.template(locale.total, {
                    current: index,
                    total: totalPage
                })
            }, props, {
                key: index
            }),
            pageNumberRender(index)
        );
    };

    Pagination.prototype.renderPageFirst = function renderPageFirst(current) {
        var _cx2;

        var _props3 = this.props,
            prefix = _props3.prefix,
            size = _props3.size,
            shape = _props3.shape,
            locale = _props3.locale;


        var isFirst = current <= 1;
        var props = {
            disabled: isFirst,
            size: size,
            className: _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'pagination-item'] = true, _cx2[prefix + 'prev'] = true, _cx2)),
            onClick: this.onPageItemClick.bind(this, current - 1)
        };

        var icon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-left', className: prefix + 'pagination-icon-prev' });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            extends_default()({}, props, { 'aria-label': util_str.template(locale.labelPrev, { current: current }) }),
            icon,
            shape === 'arrow-only' || shape === 'arrow-prev-only' || shape === 'no-border' ? '' : locale.prev
        );
    };

    Pagination.prototype.renderPageLast = function renderPageLast(current, totalPage) {
        var _cx3;

        var _props4 = this.props,
            prefix = _props4.prefix,
            size = _props4.size,
            shape = _props4.shape,
            locale = _props4.locale;


        var isLast = current >= totalPage;
        var props = {
            disabled: isLast,
            size: size,
            className: _classnames_2_3_1_classnames_default()((_cx3 = {}, _cx3[prefix + 'pagination-item'] = true, _cx3[prefix + 'next'] = true, _cx3)),
            onClick: this.onPageItemClick.bind(this, current + 1)
        };

        var icon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-right', className: prefix + 'pagination-icon-next' });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            extends_default()({}, props, { 'aria-label': util_str.template(locale.labelNext, { current: current }) }),
            shape === 'arrow-only' || shape === 'no-border' ? '' : locale.next,
            icon
        );
    };

    Pagination.prototype.renderPageEllipsis = function renderPageEllipsis(idx) {
        var prefix = this.props.prefix;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
            className: prefix + 'pagination-ellipsis ' + prefix + 'pagination-icon-ellipsis',
            type: 'ellipsis',
            key: 'ellipsis-' + idx
        });
    };

    Pagination.prototype.renderPageJump = function renderPageJump() {
        var _this2 = this;

        var _props5 = this.props,
            prefix = _props5.prefix,
            size = _props5.size,
            locale = _props5.locale;
        var inputValue = this.state.inputValue;

        /* eslint-disable react/jsx-key */

        return [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'pagination-jump-text' },
            locale.goTo
        ), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, {
            className: prefix + 'pagination-jump-input',
            type: 'text',
            'aria-label': locale.inputAriaLabel,
            size: size,
            value: inputValue,
            onChange: this.onInputChange.bind(this),
            onKeyDown: function onKeyDown(e) {
                if (e.keyCode === KEYCODE.ENTER) {
                    _this2.handleJump(e);
                }
            }
        }), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'pagination-jump-text' },
            locale.page
        ), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            { className: prefix + 'pagination-jump-go', size: size, onClick: this.handleJump },
            locale.go
        )];
        /* eslint-enable react/jsx-key */
    };

    Pagination.prototype.renderPageDisplay = function renderPageDisplay(current, totalPage) {
        var _props6 = this.props,
            prefix = _props6.prefix,
            pageNumberRender = _props6.pageNumberRender;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'pagination-display' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'em',
                null,
                pageNumberRender(current)
            ),
            '/',
            pageNumberRender(totalPage)
        );
    };

    Pagination.prototype.renderPageList = function renderPageList(current, totalPage) {
        var _props7 = this.props,
            prefix = _props7.prefix,
            pageShowCount = _props7.pageShowCount;

        var pages = [];

        if (totalPage <= pageShowCount) {
            for (var i = 1; i <= totalPage; i++) {
                pages.push(this.renderPageItem(i));
            }
        } else {
            // 除去第一页，最后一页以及当前页，剩下的页数
            var othersCount = pageShowCount - 3;
            var halfCount = parseInt(othersCount / 2, 10);
            var start = void 0,
                end = void 0;

            pages.push(this.renderPageItem(1));

            start = current - halfCount;
            end = current + halfCount;
            if (start <= 1) {
                start = 2;
                end = start + othersCount;
            }
            if (start > 2) {
                pages.push(this.renderPageEllipsis(1));
            }
            if (end >= totalPage - 1) {
                end = totalPage - 1;
                start = totalPage - 1 - othersCount;
            }
            for (var j = start; j <= end; j++) {
                pages.push(this.renderPageItem(j));
            }
            if (end < totalPage - 1) {
                pages.push(this.renderPageEllipsis(2));
            }

            pages.push(this.renderPageItem(totalPage));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'pagination-list' },
            pages
        );
    };

    Pagination.prototype.renderPageSizeSelector = function renderPageSizeSelector() {
        var _props8 = this.props,
            prefix = _props8.prefix,
            pageSizeSelector = _props8.pageSizeSelector,
            locale = _props8.locale;

        var pageSizeSpan = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'pagination-size-selector-title' },
            locale.pageSize
        );

        switch (pageSizeSelector) {
            case 'filter':
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'pagination-size-selector' },
                    pageSizeSpan,
                    this.renderPageSizeFilter()
                );
            case 'dropdown':
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'pagination-size-selector' },
                    pageSizeSpan,
                    this.renderPageSizeDropdown()
                );
            default:
                return null;
        }
    };

    Pagination.prototype.renderPageSizeFilter = function renderPageSizeFilter() {
        var _this3 = this;

        var _props9 = this.props,
            prefix = _props9.prefix,
            size = _props9.size,
            pageSizeList = _props9.pageSizeList;
        var currentPageSize = this.state.currentPageSize;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'pagination-size-selector-filter' },
            pageSizeList.map(function (item, index) {
                var _cx4;

                var label = void 0;
                var pageSize = void 0;
                if (item.value) {
                    // {label: '', value: 5}
                    label = item.label;
                    pageSize = item.value;
                } else {
                    // number
                    label = pageSize = item;
                }
                var classes = _classnames_2_3_1_classnames_default()((_cx4 = {}, _cx4[prefix + 'pagination-size-selector-btn'] = true, _cx4[prefix + 'current'] = pageSize === currentPageSize, _cx4));

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    {
                        key: index,
                        text: true,
                        size: size,
                        className: classes,
                        onClick: pageSize !== currentPageSize ? _this3.onSelectSize.bind(_this3, pageSize) : null
                    },
                    label
                );
            })
        );
    };

    Pagination.prototype.renderPageSizeDropdown = function renderPageSizeDropdown() {
        var _props10 = this.props,
            prefix = _props10.prefix,
            size = _props10.size,
            pageSizeList = _props10.pageSizeList,
            locale = _props10.locale,
            popupProps = _props10.popupProps,
            selectProps = _props10.selectProps;
        var currentPageSize = this.state.currentPageSize;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_select,
            extends_default()({
                className: prefix + 'pagination-size-selector-dropdown',
                popupClassName: prefix + 'pagination-size-selector-popup',
                popupProps: popupProps,
                'aria-label': locale.selectAriaLabel,
                autoWidth: false,
                size: size,
                value: currentPageSize,
                onChange: this.onSelectSize.bind(this)
            }, selectProps),
            pageSizeList.map(function (item, index) {
                var label = void 0;
                var pageSize = void 0;
                if (item.value) {
                    // {label: '', value: 5}
                    label = item.label;
                    pageSize = item.value;
                } else {
                    // number
                    label = pageSize = item;
                }
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    pagination_Option,
                    { key: index, value: pageSize },
                    label
                );
            })
        );
    };

    Pagination.prototype.render = function render() {
        var _cx5,
            _this4 = this;

        /* eslint-disable no-unused-vars */
        var _props11 = this.props,
            prefix = _props11.prefix,
            pure = _props11.pure,
            rtl = _props11.rtl,
            device = _props11.device,
            paginationType = _props11.type,
            size = _props11.size,
            shape = _props11.shape,
            className = _props11.className,
            total = _props11.total,
            totalRender = _props11.totalRender,
            pageSize = _props11.pageSize,
            pageSizeSelector = _props11.pageSizeSelector,
            pageSizeList = _props11.pageSizeList,
            pageSizePosition = _props11.pageSizePosition,
            useFloatLayout = _props11.useFloatLayout,
            onPageSizeChange = _props11.onPageSizeChange,
            hideOnlyOnePage = _props11.hideOnlyOnePage,
            showJump = _props11.showJump,
            locale = _props11.locale,
            current = _props11.current,
            defaultCurrent = _props11.defaultCurrent,
            pageShowCount = _props11.pageShowCount,
            pageNumberRender = _props11.pageNumberRender,
            link = _props11.link,
            onChange = _props11.onChange,
            popupProps = _props11.popupProps,
            selectProps = _props11.selectProps,
            others = objectWithoutProperties_default()(_props11, ['prefix', 'pure', 'rtl', 'device', 'type', 'size', 'shape', 'className', 'total', 'totalRender', 'pageSize', 'pageSizeSelector', 'pageSizeList', 'pageSizePosition', 'useFloatLayout', 'onPageSizeChange', 'hideOnlyOnePage', 'showJump', 'locale', 'current', 'defaultCurrent', 'pageShowCount', 'pageNumberRender', 'link', 'onChange', 'popupProps', 'selectProps']);
        /* eslint-enable */


        var _state2 = this.state,
            currentPage = _state2.current,
            currentPageSize = _state2.currentPageSize;

        var totalPage = getTotalPage(total, currentPageSize);
        var pageFirst = this.renderPageFirst(currentPage);
        var pageLast = this.renderPageLast(currentPage, totalPage);
        var sizeSelector = this.renderPageSizeSelector();
        var isStart = pageSizePosition === 'start';

        var type = paginationType;

        if (device === 'phone' && type === 'normal') {
            type = 'simple';
        }

        var classes = _classnames_2_3_1_classnames_default()((_cx5 = {}, _cx5[prefix + 'pagination'] = true, _cx5['' + prefix + size] = size, _cx5['' + prefix + type] = type, _cx5['' + prefix + shape] = shape, _cx5[prefix + 'start'] = !!pageSizeSelector && isStart && useFloatLayout, _cx5[prefix + 'end'] = !!pageSizeSelector && !isStart && useFloatLayout, _cx5[prefix + 'hide'] = totalPage <= 1 && hideOnlyOnePage, _cx5[className] = !!className, _cx5));

        if (rtl) {
            others.dir = 'rtl';
        }

        var buildComponent = function buildComponent() {
            for (var _len = arguments.length, coms = Array(_len), _key = 0; _key < _len; _key++) {
                coms[_key] = arguments[_key];
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({ className: classes }, util_obj.pickOthers(Object.keys(Pagination.propTypes), others)),
                isStart && sizeSelector,
                totalRender ? _this4.renderPageTotal() : null,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'pagination-pages' },
                    coms.map(function (com, index) {
                        return com && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(com, { key: index });
                    })
                ),
                !isStart && sizeSelector
            );
        };

        switch (type) {
            case 'mini':
                return buildComponent(pageFirst, pageLast);
            case 'simple':
                {
                    var pageDisplay = this.renderPageDisplay(currentPage, totalPage);
                    return buildComponent(pageFirst, pageDisplay, pageLast);
                }
            case 'normal':
                {
                    var pageList = this.renderPageList(currentPage, totalPage);
                    var _pageDisplay = showJump && total > pageSize * pageShowCount ? this.renderPageDisplay(currentPage, totalPage) : null;
                    var pageJump = showJump && total > pageSize * pageShowCount ? this.renderPageJump(currentPage, totalPage) : null;
                    return buildComponent.apply(undefined, [pageFirst, pageList, pageLast, _pageDisplay].concat(pageJump));
                }
            default:
                return null;
        }
    };

    return Pagination;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), pagination__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['desktop', 'tablet', 'phone']),
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义国际化文案对象
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 分页组件类型
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'simple', 'mini']),
    /**
     * 前进后退按钮样式
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'arrow-only', 'arrow-prev-only', 'no-border']),
    /**
     * 分页组件大小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * （受控）当前页码
     */
    current: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * （非受控）初始页码
     */
    defaultCurrent: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 页码发生改变时的回调函数
     * @param {Number} current 改变后的页码数
     * @param {Object} e 点击事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 总记录数
     */
    total: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 总数的渲染函数
     * @param {Number} total 总数
     * @param {Array} range 当前数据在总数中的区间
     */
    totalRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 页码显示的数量，更多的使用...代替
     */
    pageShowCount: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 一页中的记录数
     */
    pageSize: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 每页显示选择器类型
     */
    pageSizeSelector: _prop_types_15_8_1_prop_types_default.a.oneOf([false, 'filter', 'dropdown']),
    /**
     * 每页显示选择器可选值
     */
    pageSizeList: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number), _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.shape({
        label: _prop_types_15_8_1_prop_types_default.a.string,
        value: _prop_types_15_8_1_prop_types_default.a.number
    }))]),
    /**
     * 自定义页码渲染函数，函数作用于页码button以及当前页/总页数的数字渲染
     * @param {Number} index 分页的页码，从1开始
     * @return {ReactNode} 返回渲染结果
     */
    pageNumberRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 每页显示选择器在组件中的位置
     */
    pageSizePosition: _prop_types_15_8_1_prop_types_default.a.oneOf(['start', 'end']),
    /**
     * 存在每页显示选择器时是否使用浮动布局
     */
    useFloatLayout: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 每页显示记录数量改变时的回调函数
     * @param {Number} pageSize 改变后的每页显示记录数
     */
    onPageSizeChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 当分页数为1时，是否隐藏分页器
     */
    hideOnlyOnePage: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * type 设置为 normal 时，在页码数超过5页后，会显示跳转输入框与按钮，当设置 showJump 为 false 时，不再显示该跳转区域
     */
    showJump: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 设置页码按钮的跳转链接，它的值为一个包含 {page} 的模版字符串，如：https://www.taobao.com/{page}
     */
    link: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层组件属性，透传给Popup
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    selectProps: _prop_types_15_8_1_prop_types_default.a.object
}), pagination__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    rtl: false,
    locale: locale_zh_cn.Pagination,
    type: 'normal',
    shape: 'normal',
    size: 'medium',
    defaultCurrent: 1,
    onChange: pagination_noop,
    pageSize: 10,
    pageSizeSelector: false,
    pageSizeList: [5, 10, 20],
    pageSizePosition: 'start',
    onPageSizeChange: pagination_noop,
    useFloatLayout: false,
    total: 100,
    pageShowCount: 5,
    hideOnlyOnePage: false,
    showJump: true,
    pageNumberRender: function pageNumberRender(index) {
        return index;
    }
}, pagination__temp);
pagination_Pagination.displayName = 'Pagination';


/* harmony default export */ var pagination = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(pagination_Pagination)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/pagination/index.js


/* harmony default export */ var es_pagination = (pagination);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/paragraph/index.js






var paragraph__class, paragraph__temp;







/* eslint-disable */

/** Paragraph */
var paragraph_Paragraph = (paragraph__temp = paragraph__class = function (_React$Component) {
    inherits_default()(Paragraph, _React$Component);

    function Paragraph(props) {
        classCallCheck_default()(this, Paragraph);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        log.warning('[Paragraph] is deprecated, please use Typography.Paragraph instead!');
        return _this;
    }

    Paragraph.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            type = _props.type,
            size = _props.size,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'type', 'size', 'rtl']);

        var cls = _classnames_2_3_1_classnames_default()(prefix + 'paragraph', type === 'short' ? prefix + 'paragraph-short' : prefix + 'paragraph-long', size === 'small' ? prefix + 'paragraph-small' : prefix + 'paragraph-medium', className);
        if (rtl) {
            others.dir = 'rtl';
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, others, { className: cls }),
            this.props.children
        );
    };

    return Paragraph;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), paragraph__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 额外的样式名 会附加到 root dom 上
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 什么方式展示段落
     * @enumdesc 展示所有文本, 展示三行以内（非强制）
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['long', 'short']),
    /**
     * 组件大小。
     * @enumdesc 中号, 小号
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['medium', 'small']),
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, paragraph__class.defaultProps = {
    prefix: 'next-',
    type: 'long',
    size: 'medium'
}, paragraph__temp);
paragraph_Paragraph.displayName = 'Paragraph';


/* harmony default export */ var paragraph = (config_provider.config(paragraph_Paragraph));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/progress/view/progress-line.js






var progress_line__class, progress_line__temp;





var progress_line_Line = (progress_line__temp = progress_line__class = function (_React$PureComponent) {
    inherits_default()(Line, _React$PureComponent);

    function Line() {
        classCallCheck_default()(this, Line);

        return possibleConstructorReturn_default()(this, _React$PureComponent.apply(this, arguments));
    }

    Line.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            prefix = _props.prefix,
            size = _props.size,
            state = _props.state,
            color = _props.color,
            percent = _props.percent,
            progressive = _props.progressive,
            hasBorder = _props.hasBorder,
            textRender = _props.textRender,
            className = _props.className,
            rtl = _props.rtl,
            backgroundColor = _props.backgroundColor,
            others = objectWithoutProperties_default()(_props, ['prefix', 'size', 'state', 'color', 'percent', 'progressive', 'hasBorder', 'textRender', 'className', 'rtl', 'backgroundColor']);

        var suffixText = textRender(percent, { rtl: rtl });

        var wrapCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'progress-line'] = true, _classNames[prefix + 'progress-line-show-info'] = suffixText, _classNames[prefix + 'progress-line-show-border'] = hasBorder, _classNames['' + (prefix + size)] = size, _classNames[className] = className, _classNames));
        var lineCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'progress-line-overlay'] = true, _classNames2[prefix + 'progress-line-overlay-' + state] = !color && !progressive && state, _classNames2[prefix + 'progress-line-overlay-started'] = !color && progressive && percent <= 30, _classNames2[prefix + 'progress-line-overlay-middle'] = !color && progressive && percent > 30 && percent < 80, _classNames2[prefix + 'progress-line-overlay-finishing'] = !color && progressive && percent >= 80, _classNames2));

        var lineStyle = {
            width: (percent > 100 ? 100 : percent < 0 ? 0 : percent) + '%',
            backgroundColor: color
        };
        var underlayStyle = { backgroundColor: backgroundColor };

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                dir: rtl ? 'rtl' : undefined,
                role: 'progressbar',
                'aria-valuenow': percent,
                'aria-valuemin': '0',
                'aria-valuemax': '100',
                className: wrapCls
            }, others),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'progress-line-container' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        className: prefix + 'progress-line-underlay',
                        style: underlayStyle
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: lineCls, style: lineStyle })
                )
            ),
            suffixText ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'progress-line-text' },
                suffixText
            ) : null
        );
    };

    return Line;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent), progress_line__class.propTypes = {
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    percent: _prop_types_15_8_1_prop_types_default.a.number,
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'success', 'error']),
    progressive: _prop_types_15_8_1_prop_types_default.a.bool,
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    textRender: _prop_types_15_8_1_prop_types_default.a.func,
    color: _prop_types_15_8_1_prop_types_default.a.string,
    backgroundColor: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.object])
}, progress_line__temp);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/progress/view/progress-circle.js






var progress_circle__class, progress_circle__temp;





var VIEWBOX_WIDTH = 100; // width of viewBox
var HALF_VIEWBOX_WIDTH = VIEWBOX_WIDTH / 2;
var DEFAULT_STROKE_WIDTH = 8;

var viewBox = '0 0 ' + VIEWBOX_WIDTH + ' ' + VIEWBOX_WIDTH;

var progress_circle_Circle = (progress_circle__temp = progress_circle__class = function (_Component) {
    inherits_default()(Circle, _Component);

    function Circle(props) {
        classCallCheck_default()(this, Circle);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this._underlayRefHandler = function (ref) {
            _this.underlay = ref;
        };

        _this._overlayRefHandler = function (ref) {
            _this.overlay = ref;
        };

        _this.state = {
            underlayStrokeWidth: DEFAULT_STROKE_WIDTH,
            overlayStrokeWidth: DEFAULT_STROKE_WIDTH
        };
        return _this;
    }

    Circle.prototype.componentDidMount = function componentDidMount() {
        if (this.underlay && this.overlay) {
            // eslint-disable-next-line
            this.setState({
                underlayStrokeWidth: this._getCssValue(this.underlay, 'stroke-width') || DEFAULT_STROKE_WIDTH,
                overlayStrokeWidth: this._getCssValue(this.overlay, 'stroke-width') || DEFAULT_STROKE_WIDTH
            });
        }
    };

    Circle.prototype._getCssValue = function _getCssValue(dom, name) {
        var css = window.getComputedStyle(dom).getPropertyValue(name);
        var regExp = /(\d*)px/g;
        var result = regExp.exec(css);

        return Array.isArray(result) ? Number(result[1]) : 0;
    };

    Circle.prototype._computeOverlayStrokeDashOffset = function _computeOverlayStrokeDashOffset() {
        var _state = this.state,
            underlayStrokeWidth = _state.underlayStrokeWidth,
            overlayStrokeWidth = _state.overlayStrokeWidth;

        var overlayRadius = HALF_VIEWBOX_WIDTH - overlayStrokeWidth / 2 - (underlayStrokeWidth - overlayStrokeWidth) / 2;
        var overlayLen = Math.PI * 2 * overlayRadius;
        return (VIEWBOX_WIDTH - this.props.percent) / VIEWBOX_WIDTH * overlayLen;
    };

    Circle.prototype._getPath = function _getPath(radius) {
        return 'M ' + HALF_VIEWBOX_WIDTH + ',' + HALF_VIEWBOX_WIDTH + ' m 0,-' + radius + ' a ' + radius + ',' + radius + ' 0 1 1 0,' + 2 * radius + ' a ' + radius + ',' + radius + ' 0 1 1 0,-' + 2 * radius;
    };

    Circle.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            prefix = _props.prefix,
            size = _props.size,
            state = _props.state,
            percent = _props.percent,
            className = _props.className,
            textRender = _props.textRender,
            progressive = _props.progressive,
            color = _props.color,
            backgroundColor = _props.backgroundColor,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'size', 'state', 'percent', 'className', 'textRender', 'progressive', 'color', 'backgroundColor', 'rtl']);

        var _state2 = this.state,
            underlayStrokeWidth = _state2.underlayStrokeWidth,
            overlayStrokeWidth = _state2.overlayStrokeWidth;

        // underlay path

        var underlayRadius = HALF_VIEWBOX_WIDTH - underlayStrokeWidth / 2;
        var underlayPath = this._getPath(underlayRadius);

        // overlay path (为居中，减去相对于underlay的宽度)
        var overlayRadius = HALF_VIEWBOX_WIDTH - overlayStrokeWidth / 2 - (underlayStrokeWidth - overlayStrokeWidth) / 2;
        var overlayPath = this._getPath(overlayRadius);
        var overlayLen = Math.PI * 2 * overlayRadius;
        var overlayStrokeDasharray = overlayLen + 'px ' + overlayLen + 'px';
        var overlayStrokeDashoffset = this._computeOverlayStrokeDashOffset() + 'px';

        var suffixText = textRender(percent, { rtl: rtl });

        var wrapCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'progress-circle'] = true, _classNames[prefix + 'progress-circle-show-info'] = suffixText, _classNames['' + (prefix + size)] = size, _classNames[className] = className, _classNames));

        var pathCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'progress-circle-overlay'] = true, _classNames2[prefix + 'progress-circle-overlay-' + state] = !color && !progressive && state, _classNames2[prefix + 'progress-circle-overlay-started'] = !color && progressive && percent <= 30, _classNames2[prefix + 'progress-circle-overlay-middle'] = !color && progressive && percent > 30 && percent < 80, _classNames2[prefix + 'progress-circle-overlay-finishing'] = !color && progressive && percent >= 80, _classNames2));

        var underlayStyle = { stroke: backgroundColor };

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                className: wrapCls,
                dir: rtl ? 'rtl' : undefined,
                role: 'progressbar',
                'aria-valuenow': percent,
                'aria-valuemin': '0',
                'aria-valuemax': '100'
            }, others),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'svg',
                {
                    className: prefix + 'progress-circle-container',
                    viewBox: viewBox
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('path', {
                    className: prefix + 'progress-circle-underlay',
                    d: underlayPath,
                    fillOpacity: '0',
                    ref: this._underlayRefHandler,
                    style: underlayStyle
                }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('path', {
                    className: pathCls,
                    d: overlayPath,
                    fillOpacity: '0',
                    strokeDasharray: overlayStrokeDasharray,
                    strokeDashoffset: overlayStrokeDashoffset,
                    ref: this._overlayRefHandler,
                    stroke: color
                })
            ),
            suffixText ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'progress-circle-text' },
                suffixText
            ) : null
        );
    };

    return Circle;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), progress_circle__class.propTypes = {
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    percent: _prop_types_15_8_1_prop_types_default.a.number,
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'success', 'error']),
    progressive: _prop_types_15_8_1_prop_types_default.a.bool,
    textRender: _prop_types_15_8_1_prop_types_default.a.func,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    color: _prop_types_15_8_1_prop_types_default.a.string,
    backgroundColor: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, progress_circle__temp);
progress_circle_Circle.displayName = 'Circle';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/progress/view/progress.js






var progress__class, progress__temp;






/**
 * Progress
 */
var progress_Progress = (progress__temp = progress__class = function (_Component) {
  inherits_default()(Progress, _Component);

  function Progress() {
    classCallCheck_default()(this, Progress);

    return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
  }

  Progress.prototype.render = function render() {
    var _props = this.props,
        shape = _props.shape,
        hasBorder = _props.hasBorder,
        others = objectWithoutProperties_default()(_props, ['shape', 'hasBorder']);

    return shape === 'circle' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(progress_circle_Circle, others) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(progress_line_Line, extends_default()({}, others, { hasBorder: hasBorder }));
  };

  return Progress;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), progress__class.propTypes = {
  prefix: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * 形态
   */
  shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['circle', 'line']),
  /**
   * 尺寸
   */
  size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
  /**
   * 所占百分比
   */
  percent: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 进度状态, 显示优先级: color > progressive > state
   */
  state: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'success', 'error']),
  /**
   * 是否为色彩阶段变化模式, 显示优先级: color > progressive > state
   */
  progressive: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否添加 Border（只适用于 Line Progress)
   */
  hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 文本渲染函数
   * @param {Number} percent 当前的进度信息
   * @param {Object} option 额外的参数
   * @property {Boolean} option.rtl 是否在rtl 模式下渲染
   * @return {ReactNode} 返回文本节点
   */
  textRender: _prop_types_15_8_1_prop_types_default.a.func,
  /**
   * 进度条颜色, 显示优先级: color > progressive > state
   */
  color: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * 背景色
   */
  backgroundColor: _prop_types_15_8_1_prop_types_default.a.string,
  rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, progress__class.defaultProps = {
  prefix: 'next-',
  shape: 'line',
  state: 'normal',
  size: 'medium',
  percent: 0,
  progressive: false,
  hasBorder: false,
  textRender: function textRender(percent) {
    return Math.floor(percent) + '%';
  }
}, progress__class.contextTypes = {
  prefix: _prop_types_15_8_1_prop_types_default.a.string
}, progress__temp);
progress_Progress.displayName = 'Progress';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/progress/index.js





/* harmony default export */ var progress = (config_provider.config(progress_Progress, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'progressive', 'Progress');

            var _props = props,
                type = _props.type,
                others = objectWithoutProperties_default()(_props, ['type']);

            props = extends_default()({ progressive: type === 'progressive' }, others);
        }

        if ('showInfo' in props) {
            deprecated('showInfo', 'textRender', 'Progress');

            var _props2 = props,
                showInfo = _props2.showInfo,
                _others = objectWithoutProperties_default()(_props2, ['showInfo']);

            if (showInfo) {
                props = _others;
            } else {
                props = extends_default()({ textRender: function textRender() {
                        return false;
                    } }, _others);
            }
        }

        if ('suffix' in props) {
            deprecated('suffix', 'textRender', 'Progress');

            var _props3 = props,
                suffix = _props3.suffix,
                _others2 = objectWithoutProperties_default()(_props3, ['suffix']);

            props = extends_default()({ textRender: function textRender() {
                    return suffix;
                } }, _others2);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/utils.js
function inRange(value, range, min) {
    if (!Array.isArray(range)) {
        range = [min, range];
    }

    return value >= range[0] && value <= range[1];
}

function getPercent(min, max, value) {
    return (value - min) * 100 / (max - min);
}

function getPrecision(step) {
    var precision = 0;
    var stepString = step.toString();
    if (stepString.indexOf('.') !== -1) {
        precision = stepString.length - stepString.indexOf('.') - 1;
    }
    return precision;
}

function utils_isEqual(left, right) {
    if (Array.isArray(left)) {
        return left[0] === right[0] && left[1] === right[1];
    } else {
        return left === right;
    }
}

function getDragging(current, preValue) {
    var dragging = 'upper';

    if (current > preValue[1]) {
        dragging = 'upper';
    } else if (current < preValue[0]) {
        dragging = 'lower';
    } else {
        var mid = (preValue[0] + preValue[1]) / 2;

        dragging = current < mid ? 'lower' : 'upper';
    }

    return dragging;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/view/scale.js




var scale__class, scale__temp;






var scale_Scale = (scale__temp = scale__class = function (_React$Component) {
    inherits_default()(Scale, _React$Component);

    function Scale() {
        classCallCheck_default()(this, Scale);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Scale.prototype._renderItems = function _renderItems() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            value = _props.value,
            prefix = _props.prefix,
            scales = _props.scales,
            rtl = _props.rtl;

        var items = [];

        scales.forEach(function (scale, i) {
            var _classNames;

            var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'range-scale-item'] = true, _classNames.activated = inRange(scale, value, min), _classNames));
            var style = void 0;
            if (rtl) {
                style = {
                    right: getPercent(min, max, scale) + '%',
                    left: 'auto'
                };
            } else {
                style = {
                    left: getPercent(min, max, scale) + '%',
                    right: 'auto'
                };
            }

            items.push(
            // "key" is for https://fb.me/react-warning-keys
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: classes, style: style, key: i }));
        });

        return items;
    };

    Scale.prototype.render = function render() {
        var _classNames2;

        var prefix = this.props.prefix;

        var classes = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'range-scale'] = true, _classNames2));
        var items = this._renderItems();

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: classes },
            items
        );
    };

    return Scale;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), scale__class.propTypes = {
    min: _prop_types_15_8_1_prop_types_default.a.number,
    max: _prop_types_15_8_1_prop_types_default.a.number,
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    scales: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number),
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, scale__class.defaultProps = {
    prefix: 'next-',
    min: 0,
    max: 100,
    value: 0,
    rtl: false
}, scale__temp);
scale_Scale.displayName = 'Scale';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/view/track.js




var track_Track = function Track(_ref) {
    var _classNames;

    var prefix = _ref.prefix;

    var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'range-track'] = true, _classNames));
    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: classes });
};

track_Track.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
};

track_Track.defaultProps = {
    prefix: 'next-'
};

/* harmony default export */ var track = (track_Track);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/view/selected.js




var selected__class, selected__temp;






var selected_Selected = (selected__temp = selected__class = function (_React$Component) {
    inherits_default()(Selected, _React$Component);

    function Selected() {
        classCallCheck_default()(this, Selected);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Selected.prototype._getStyle = function _getStyle() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            reverse = _props.reverse,
            rtl = _props.rtl;
        var value = this.props.value;


        if (!Array.isArray(value)) {
            value = [min, value];
        }
        var width = (value[1] - value[0]) * 100 / (max - min);

        var style = void 0;

        if (!rtl && !reverse) {
            // normal select
            style = {
                width: width + '%',
                left: getPercent(min, max, value[0]) + '%'
            };
        } else if (rtl && !reverse) {
            // select in rtl mode
            style = {
                width: width + '%',
                left: getPercent(min, max, max + min - value[1]) + '%'
            };
        } else if (!rtl && reverse) {
            // select in reverse mode
            style = {
                width: 100 - width + '%',
                left: getPercent(min, max, value[0]) + width + '%'
            };
        } else {
            // select in rtl & reverse mode
            style = {
                width: 100 - width + '%',
                left: getPercent(min, max, value[0]) + '%'
            };
        }

        return style;
    };

    Selected.prototype._getStyleLeft = function _getStyleLeft() {
        var _props2 = this.props,
            min = _props2.min,
            max = _props2.max,
            rtl = _props2.rtl;
        var value = this.props.value;


        if (!Array.isArray(value)) {
            value = [min, value];
        }

        var style = {
            width: getPercent(min, max, value[0]) + '%',
            left: 0
        };
        if (rtl) {
            style.width = 100 - getPercent(min, max, value[1]) + '%';
        }
        return style;
    };

    Selected.prototype._getStyleRight = function _getStyleRight() {
        var _props3 = this.props,
            min = _props3.min,
            max = _props3.max,
            rtl = _props3.rtl;
        var value = this.props.value;


        if (!Array.isArray(value)) {
            value = [min, value];
        }
        var width = (value[1] - value[0]) * 100 / (max - min);

        var style = {
            width: 100 - getPercent(min, max, value[0]) - width + '%',
            left: getPercent(min, max, value[0]) + width + '%'
        };

        if (rtl) {
            style = {
                width: getPercent(min, max, value[0]) + '%',
                left: 100 - getPercent(min, max, value[0]) + '%'
            };
        }
        return style;
    };

    Selected.prototype.render = function render() {
        var _classNames;

        var _props4 = this.props,
            prefix = _props4.prefix,
            slider = _props4.slider,
            reverse = _props4.reverse,
            rtl = _props4.rtl;

        var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'range-selected'] = true, _classNames));
        var SeletedComps = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: classes, style: this._getStyle() });

        if (slider === 'double' && reverse) {
            SeletedComps = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                null,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: classes, style: this._getStyleLeft() }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: classes, style: this._getStyleRight() })
            );
        }

        return SeletedComps;
    };

    return Selected;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), selected__class.propTypes = {
    min: _prop_types_15_8_1_prop_types_default.a.number,
    max: _prop_types_15_8_1_prop_types_default.a.number,
    slider: _prop_types_15_8_1_prop_types_default.a.string,
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    reverse: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, selected__class.defaultProps = {
    prefix: 'next-',
    slider: 'single',
    min: 0,
    max: 100,
    value: 0,
    reverse: false,
    rtl: false
}, selected__temp);
selected_Selected.displayName = 'Selected';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/view/mark.js




var mark__class, mark__temp;






var mark_Mark = (mark__temp = mark__class = function (_React$Component) {
    inherits_default()(Mark, _React$Component);

    function Mark() {
        classCallCheck_default()(this, Mark);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Mark.prototype._renderItems = function _renderItems() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            value = _props.value,
            prefix = _props.prefix,
            marks = _props.marks,
            rtl = _props.rtl;

        var items = [];

        Object.keys(marks).forEach(function (mark, i) {
            var _classNames;

            var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'range-mark-text'] = true, _classNames.activated = inRange(mark, value, min), _classNames));
            var style = void 0;
            if (rtl) {
                style = {
                    right: getPercent(min, max, mark) + '%',
                    left: 'auto'
                };
            } else {
                style = {
                    left: getPercent(min, max, mark) + '%',
                    right: 'auto'
                };
            }

            items.push(
            // "key" is for https://fb.me/react-warning-keys
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: classes, style: style, key: i },
                marks[mark]
            ));
        });

        return items;
    };

    Mark.prototype.render = function render() {
        var _classNames2;

        var _props2 = this.props,
            prefix = _props2.prefix,
            marksPosition = _props2.marksPosition;

        var className = marksPosition === 'above' ? prefix + 'range-mark-above' : prefix + 'range-mark-below';
        var classes = _classnames_2_3_1_classnames_default()(className, (_classNames2 = {}, _classNames2[prefix + 'range-mark'] = true, _classNames2));
        var items = this._renderItems();

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: classes },
            items
        );
    };

    return Mark;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), mark__class.propTypes = {
    min: _prop_types_15_8_1_prop_types_default.a.number,
    max: _prop_types_15_8_1_prop_types_default.a.number,
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    marks: _prop_types_15_8_1_prop_types_default.a.object,
    marksPosition: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, mark__class.defaultProps = {
    prefix: 'next-',
    min: 0,
    max: 100,
    value: 0,
    marksPosition: '',
    rtl: false
}, mark__temp);
mark_Mark.displayName = 'Mark';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/view/slider.js






function _getProps(min, max, value, rtl) {
    return {
        style: {
            left: rtl ? 100 - getPercent(min, max, value) + '%' : getPercent(min, max, value) + '%',
            zIndex: 100
        },
        'aria-valuenow': value,
        'aria-valuetext': value,
        'aria-valuemin': min,
        'aria-valuemax': max
    };
}

function slider_Slider(_ref) {
    var _classNames;

    var prefix = _ref.prefix,
        hasMovingClass = _ref.hasMovingClass,
        min = _ref.min,
        max = _ref.max,
        value = _ref.value,
        onKeyDown = _ref.onKeyDown,
        rtl = _ref.rtl;

    var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'range-slider'] = true, _classNames[prefix + 'range-slider-moving'] = hasMovingClass, _classNames));
    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        'div',
        extends_default()({
            className: classes,
            onKeyDown: onKeyDown,
            role: 'slider',
            tabIndex: 0
        }, _getProps(min, max, value, rtl)),
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'range-slider-inner' })
    );
}

slider_Slider.propTypes = {
    min: _prop_types_15_8_1_prop_types_default.a.number,
    max: _prop_types_15_8_1_prop_types_default.a.number,
    value: _prop_types_15_8_1_prop_types_default.a.number,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    hasMovingClass: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
};

slider_Slider.defaultProps = {
    prefix: 'next-',
    min: 0,
    max: 100,
    value: 0,
    hasMovingClass: false,
    rtl: false
};

/* harmony default export */ var view_slider = (slider_Slider);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/view/fixedSlider.js





var fixedSlider__class, fixedSlider__temp;







var fixedSlider_Tooltip = es_balloon.Tooltip;
var fixedSlider_noop = func.noop;


function fixedSlider__getStyle(min, max, value, rtl) {
    if (rtl) {
        return {
            left: getPercent(min, max, max + min - value[1]) + '%',
            right: getPercent(min, max, value[0]) + '%'
        };
    }
    return {
        left: getPercent(min, max, value[0]) + '%',
        right: 100 - getPercent(min, max, value[1]) + '%'
    };
}

function sliderFrag(props) {
    var prefix = props.prefix,
        min = props.min,
        max = props.max,
        value = props.value,
        disabled = props.disabled,
        onMouseEnter = props.onMouseEnter,
        onMouseLeave = props.onMouseLeave,
        onMouseDown = props.onMouseDown,
        rtl = props.rtl;


    var activeClass = !disabled && props.hasMovingClass ? prefix + 'range-active' : '';

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        'div',
        {
            className: prefix + 'range-frag ' + activeClass,
            style: fixedSlider__getStyle(min, max, value, rtl),
            onMouseEnter: onMouseEnter,
            onMouseLeave: onMouseLeave,
            onMouseDown: onMouseDown
        },
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'range-selected' }),
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'range-slider' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'range-slider-inner' })
        ),
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'range-slider' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'range-slider-inner' })
        )
    );
}

sliderFrag.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    min: _prop_types_15_8_1_prop_types_default.a.number,
    max: _prop_types_15_8_1_prop_types_default.a.number,
    hasMovingClass: _prop_types_15_8_1_prop_types_default.a.bool,
    onMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseDown: _prop_types_15_8_1_prop_types_default.a.func,
    value: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number),
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
};

var fixedSlider_FixedSlider = (fixedSlider__temp = fixedSlider__class = function (_React$Component) {
    inherits_default()(FixedSlider, _React$Component);

    function FixedSlider(props) {
        classCallCheck_default()(this, FixedSlider);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.state = {
            hasMovingClass: false,
            onTooltipVisibleChange: false,
            tooltipAnimation: true
        };
        return _this;
    }

    FixedSlider.prototype._onMouseEnter = function _onMouseEnter() {
        if (!(this.keyState === 'down')) {
            this.keyState = 'enter';
        }
        this.setState({
            hasMovingClass: true
        });
    };

    FixedSlider.prototype._onMouseLeave = function _onMouseLeave() {
        if (this.keyState === 'enter') {
            this.setState({
                hasMovingClass: false
            });
        }
    };

    FixedSlider.prototype._onMouseDown = function _onMouseDown() {
        this.keyState = 'down';
        this.setState({
            hasMovingClass: true
        });
        this._addDocumentEvents();
    };

    FixedSlider.prototype._onMouseUp = function _onMouseUp() {
        if (this.keyState === 'down') {
            this.keyState = '';
            this._removeDocumentEvents();
            this.setState({
                hasMovingClass: false
            });
        }
    };

    FixedSlider.prototype._addDocumentEvents = function _addDocumentEvents() {
        this._onMouseUpListener = util_events.on(document, 'mouseup', this._onMouseUp.bind(this));
    };

    FixedSlider.prototype._removeDocumentEvents = function _removeDocumentEvents() {
        if (this._onMouseUpListener) {
            this._onMouseUpListener.off();
            this._onMouseUpListener = null;
        }
    };

    FixedSlider.prototype.render = function render() {
        var _props = this.props,
            hasTip = _props.hasTip,
            value = _props.value,
            tipRender = _props.tipRender,
            tooltipVisible = _props.tooltipVisible,
            hasMovingClass = _props.hasMovingClass;


        var addedProps = {
            hasMovingClass: hasMovingClass || this.state.hasMovingClass,
            onMouseEnter: this._onMouseEnter.bind(this),
            onMouseLeave: this._onMouseLeave.bind(this),
            onMouseDown: this._onMouseDown.bind(this)
        };

        return hasTip ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            fixedSlider_Tooltip,
            {
                popupContainer: function popupContainer(target) {
                    return target.parentNode;
                },
                popupProps: {
                    visible: tooltipVisible || hasMovingClass,
                    animation: this.state.tooltipAnimation ? { in: 'expandInUp', out: 'expandOutDown' } : false
                },
                trigger: sliderFrag(extends_default()({}, this.props, addedProps)),
                align: 't'
            },
            tipRender(value[0] + '-' + value[1])
        ) : sliderFrag(extends_default()({}, this.props, addedProps));
    };

    return FixedSlider;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), fixedSlider__class.propTypes = {
    hasTip: _prop_types_15_8_1_prop_types_default.a.bool,
    tooltipVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    onTooltipVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    tooltipAnimation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object]),
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    tipRender: _prop_types_15_8_1_prop_types_default.a.func,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    hasMovingClass: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, fixedSlider__class.defaultProps = {
    disabled: false,
    hasTip: true,
    onChange: fixedSlider_noop,
    onProcess: fixedSlider_noop,
    tipRender: function tipRender(value) {
        return value;
    },
    reverse: false,
    rtl: false
}, fixedSlider__temp);
fixedSlider_FixedSlider.displayName = 'FixedSlider';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/view/range.js





var range__class, range__temp;















var range_Tooltip = es_balloon.Tooltip;
var range_noop = func.noop,
    range_bindCtx = func.bindCtx;
var range_pickOthers = util_obj.pickOthers;


function _isMultiple(slider, isFixedWidth) {
    return isFixedWidth || slider === 'double';
}

function LowerSlider(props) {
    var hasTip = props.hasTip,
        value = props.value,
        tipRender = props.tipRender,
        slider = props.slider,
        tooltipVisible = props.tooltipVisible,
        onTooltipVisibleChange = props.onTooltipVisibleChange,
        tooltipAnimation = props.tooltipAnimation;


    if (_isMultiple(slider)) {
        return hasTip ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            range_Tooltip,
            {
                popupContainer: function popupContainer(target) {
                    return target.parentNode;
                },
                popupProps: {
                    visible: tooltipVisible,
                    onVisibleChange: onTooltipVisibleChange,
                    animation: tooltipAnimation,
                    needAdjust: false
                },
                trigger: view_slider(extends_default()({}, props, { value: value[0] })),
                align: 't'
            },
            tipRender('' + value[0])
        ) : view_slider(extends_default()({}, props, { value: value[0] }));
    }
    return null;
}

LowerSlider.propTypes = {
    hasTip: _prop_types_15_8_1_prop_types_default.a.bool,
    tooltipVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    onTooltipVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    tooltipAnimation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object]),
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    tipRender: _prop_types_15_8_1_prop_types_default.a.func,
    slider: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'double'])
};

function UpperSlider(props) {
    var newprop = extends_default()({}, props);
    var hasTip = newprop.hasTip,
        value = newprop.value,
        tipRender = newprop.tipRender,
        slider = newprop.slider,
        tooltipVisible = newprop.tooltipVisible,
        onTooltipVisibleChange = newprop.onTooltipVisibleChange,
        tooltipAnimation = newprop.tooltipAnimation;

    if (_isMultiple(slider)) {
        delete newprop.onKeyDown;
        return hasTip ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            range_Tooltip,
            {
                popupContainer: function popupContainer(target) {
                    return target.parentNode;
                },
                popupProps: {
                    visible: tooltipVisible,
                    onVisibleChange: onTooltipVisibleChange,
                    animation: tooltipAnimation,
                    needAdjust: false
                },
                trigger: view_slider(extends_default()({}, newprop, { value: value[1] })),
                align: 't'
            },
            tipRender(value[1])
        ) : view_slider(extends_default()({}, newprop, { value: value[1] }));
    }
    return hasTip ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        range_Tooltip,
        {
            popupContainer: function popupContainer(target) {
                return target.parentNode;
            },
            popupProps: {
                visible: tooltipVisible,
                onVisibleChange: onTooltipVisibleChange,
                animation: tooltipAnimation,
                needAdjust: false
            },
            animation: {
                in: 'fadeInUp',
                out: 'fadeOutDown'
            },
            trigger: view_slider(newprop),
            align: 't'
        },
        tipRender(value)
    ) : view_slider(newprop);
}

UpperSlider.propTypes = {
    hasTip: _prop_types_15_8_1_prop_types_default.a.bool,
    tooltipVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    onTooltipVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    tooltipAnimation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object]),
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    tipRender: _prop_types_15_8_1_prop_types_default.a.func,
    slider: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'double'])
};

function pauseEvent(e) {
    e.stopPropagation();
    e.preventDefault();
}

/** Range */
var range_Range = (range__temp = range__class = function (_React$Component) {
    inherits_default()(Range, _React$Component);

    function Range(props) {
        classCallCheck_default()(this, Range);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        var min = props.min;

        var initialValue = _isMultiple(props.slider) ? [min, min] : min;
        var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
        var value = props.value !== undefined ? props.value : defaultValue;

        _this.state = {
            value: value,
            tempValue: value,
            hasMovingClass: false,
            lowerTooltipVisible: false,
            upperTooltipVisible: false,
            tooltipAnimation: true
        };

        range_bindCtx(_this, ['handleLowerTooltipVisibleChange', 'handleUpperTooltipVisibleChange', 'onKeyDown']);
        return _this;
    }

    Range.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if ('value' in props) {
            var min = props.min,
                slider = props.slider,
                value = props.value;
            var hasMovingClass = state.hasMovingClass;

            var newState = {
                value: value
            };

            if (value === undefined) {
                newState.value = _isMultiple(slider) ? [min, min] : min;
            }

            if (!hasMovingClass) {
                newState.tempValue = newState.value;
            }

            return newState;
        }
        return null;
    };

    Range.prototype._marksToScales = function _marksToScales(marks) {
        var result = [];
        if (Object.prototype.toString.call(marks) === '[object Object]') {
            for (var key in marks) {
                if (Object.hasOwnProperty.call(marks, key)) {
                    result.push(parseInt(key));
                }
            }
        } else {
            result = marks;
        }
        return result;
    };

    Range.prototype._calcScales = function _calcScales() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            marks = _props.marks;

        var scales = this._marksToScales(marks);

        if (scales !== false) {
            if (Array.isArray(scales)) {
                return scales;
            } else {
                var pace = (max - min) / scales;
                var result = [];

                result.push(min);
                for (var i = 1; i < scales; i++) {
                    result.push(min + i * pace);
                }
                result.push(max);
                return result;
            }
        } else {
            return [];
        }
    };

    Range.prototype._calcMarks = function _calcMarks() {
        var _props2 = this.props,
            min = _props2.min,
            max = _props2.max,
            marks = _props2.marks;


        var result = {};

        if (Array.isArray(marks)) {
            marks.forEach(function (m) {
                result[m] = m.toString();
            });
        } else if (typeof marks === 'number') {
            var pace = (max - min) / marks;

            result[min] = min;
            for (var i = 1; i < marks; i++) {
                var mark = min + i * pace;
                var precision = getPrecision(mark);
                if (precision > 2) {
                    precision = 2;
                }
                mark = mark.toFixed(precision);
                result[mark] = mark;
            }
            result[max] = max;
        } else {
            result = marks;
        }
        return result;
    };

    Range.prototype._onMouseDown = function _onMouseDown(e) {
        if (e.button === 0) {
            this._start(e.pageX);
            this._addDocumentMouseEvents();
            pauseEvent(e);
        }
    };

    Range.prototype._onTouchStart = function _onTouchStart(e) {
        this._start(e.targetTouches[0].pageX);
        this._addDocumentTouchEvents();
        e.stopPropagation(); // preventDefault() will be ignored: https://www.chromestatus.com/features/5093566007214080
    };

    Range.prototype.onKeyDown = function onKeyDown(e) {
        if (this.props.disabled) return;

        if (e.keyCode === KEYCODE.LEFT_ARROW || e.keyCode === KEYCODE.RIGHT_ARROW) {
            e.stopPropagation();
            e.preventDefault();
            var newValue = void 0;
            if (e.keyCode === KEYCODE.LEFT_ARROW) {
                newValue = this.state.value - this.props.step;
            } else {
                newValue = this.state.value + this.props.step;
            }
            if (newValue > this.props.max) {
                newValue = this.props.max;
            }
            if (newValue < this.props.min) {
                newValue = this.props.min;
            }
            if (newValue !== this.state.value) {
                this.setState({
                    value: newValue
                });
                this.props.onChange(newValue);
            }
        }
    };

    Range.prototype._start = function _start(position) {
        this.setState({
            hasMovingClass: true
        });

        var tempValue = this.state.tempValue;

        var range = this.dom;
        var start = util_dom.getOffset(range).left;
        // used in unit test
        var width = range.clientWidth;
        if (!width) {
            if (range.style.width) {
                var index = range.style.width.indexOf('px');
                if (index !== -1) {
                    width = Number(range.style.width.slice(0, index));
                }
            }
        }

        this._moving = {
            start: start,
            end: start + width,
            startValue: tempValue
        };

        // change on start
        this._onProcess(position, true);
    };

    Range.prototype._end = function _end() {
        var startValue = this._moving.startValue;
        var _state = this.state,
            tempValue = _state.tempValue,
            value = _state.value;

        this._moving = null;
        this._removeDocumentEvents();
        this.setState({
            hasMovingClass: false,
            lowerTooltipVisible: false,
            upperTooltipVisible: false,
            tooltipAnimation: true
        });

        if (!utils_isEqual(tempValue, startValue)) {
            // Not Controlled
            if (!('value' in this.props)) {
                this.setState({
                    value: tempValue
                });
            } else {
                this.setState({
                    // tooltipVisible: false,
                    tempValue: value,
                    value: value
                });
            }
            this.props.onChange(tempValue);
        }
    };

    Range.prototype._move = function _move(e) {
        var position = e.type === 'mousemove' ? e.pageX : e.targetTouches[0].pageX;
        this._onProcess(position);
    };

    Range.prototype._onProcess = function _onProcess(position, start) {
        var tempValue = this.state.tempValue;

        var current = this._positionToCurrent(position); //current 为当前click的value

        if (this.isFixedWidth) {
            if (start) {
                this.lastPosition = current;
            }
        } else if (start) {
            this.lastPosition = current;
            if (_isMultiple(this.props.slider)) {
                this._moving.dragging = getDragging(current, tempValue);
            } else {
                this._moving.dragging = 'upper';
            }

            this.setState({
                lowerTooltipVisible: this._moving.dragging === 'lower',
                upperTooltipVisible: this._moving.dragging === 'upper',
                tooltipAnimation: false
            });
        } else if (this.oldDragging === 'lower' && this._moving.dragging === 'upper') {
            this.setState({
                upperTooltipVisible: true,
                lowerTooltipVisible: false
            });
        } else if (this.oldDragging === 'upper' && this._moving.dragging === 'lower') {
            this.setState({
                upperTooltipVisible: false,
                lowerTooltipVisible: true
            });
        }

        this.oldDragging = this._moving.dragging;

        var nextValue = this._currentToValue(current, tempValue, this.lastPosition, this.isFixedWidth); //计算range的新value,可能是数组,可能是单个值
        this.lastPosition = current;

        if (!utils_isEqual(nextValue, tempValue)) {
            this.setState({
                tempValue: nextValue
            });
            this.props.onProcess(nextValue);
        }
    };

    Range.prototype._addDocumentMouseEvents = function _addDocumentMouseEvents() {
        this._onMouseMoveListener = util_events.on(document, 'mousemove', this._move.bind(this));
        this._onMouseUpListener = util_events.on(document, 'mouseup', this._end.bind(this));
    };

    Range.prototype._addDocumentTouchEvents = function _addDocumentTouchEvents() {
        this._onTouchMoveListener = util_events.on(document, 'touchmove', this._move.bind(this));
        this._onTouchEndListener = util_events.on(document, 'touchend', this._end.bind(this));
    };

    Range.prototype._removeDocumentEvents = function _removeDocumentEvents() {
        if (this._onMouseMoveListener) {
            this._onMouseMoveListener.off();
            this._onMouseMoveListener = null;
        }

        if (this._onMouseUpListener) {
            this._onMouseUpListener.off();
            this._onMouseUpListener = null;
        }

        if (this._onTouchMoveListener) {
            this._onTouchMoveListener.off();
            this._onTouchMoveListener = null;
        }

        if (this._onTouchEndListener) {
            this._onTouchEndListener.off();
            this._onTouchEndListener = null;
        }
    };

    // position => current (value type)


    Range.prototype._positionToCurrent = function _positionToCurrent(position) {
        var _moving = this._moving,
            start = _moving.start,
            end = _moving.end;
        var _props3 = this.props,
            step = _props3.step,
            min = _props3.min,
            max = _props3.max,
            rtl = _props3.rtl;


        if (position < start) {
            position = start;
        } else if (position > end) {
            position = end;
        }
        var percent = getPercent(start, end, position);
        percent = rtl ? 100 - percent : percent;
        // reset by step
        var newValue = parseFloat((Math.round(percent / 100 * (max - min) / step) * step).toFixed(getPrecision(step)));
        var currentValue = (min + newValue).toFixed(getPrecision(step));

        return Number(currentValue);
    };

    Range.prototype._currentToValue = function _currentToValue(current, preValue, lastPosition, isFixedWidth) {
        var dragging = this._moving.dragging;
        var _props4 = this.props,
            min = _props4.min,
            max = _props4.max;


        if (!_isMultiple(this.props.slider, isFixedWidth)) {
            return current;
        } else {
            var result = void 0;

            var precision = getPrecision(this.props.step);
            var diff = current - lastPosition;
            var newLeft = +(+preValue[0] + diff).toFixed(precision);
            var newRight = +(+preValue[1] + diff).toFixed(precision);

            var newMaxLeft = +(max - preValue[1] + preValue[0]).toFixed(precision);
            var newMinRight = +(min + preValue[1] - preValue[0]).toFixed(precision);

            if (isFixedWidth) {
                if (newLeft < min) {
                    result = [min, newMinRight];
                } else if (newRight > max) {
                    result = [newMaxLeft, max];
                } else {
                    result = [newLeft, newRight];
                }
            } else if (dragging === 'lower') {
                if (current > preValue[1]) {
                    result = [preValue[1], current];
                    this._moving.dragging = 'upper';
                } else {
                    result = [current, preValue[1]];
                }
            } else if (dragging === 'upper') {
                if (current < preValue[0]) {
                    result = [current, preValue[0]];
                    this._moving.dragging = 'lower';
                } else {
                    result = [preValue[0], current];
                }
            }

            return result;
        }
    };

    Range.prototype.handleLowerTooltipVisibleChange = function handleLowerTooltipVisibleChange(visible) {
        if (this.state.hasMovingClass) {
            return;
        }
        this.setState({
            lowerTooltipVisible: visible
        });
    };

    Range.prototype.handleUpperTooltipVisibleChange = function handleUpperTooltipVisibleChange(visible) {
        if (this.state.hasMovingClass) {
            return;
        }
        this.setState({
            upperTooltipVisible: visible
        });
    };

    Range.prototype.render = function render() {
        var _classNames,
            _this2 = this;

        var value = this._moving ? this.state.tempValue : this.state.value;

        var _props5 = this.props,
            prefix = _props5.prefix,
            min = _props5.min,
            max = _props5.max,
            disabled = _props5.disabled,
            style = _props5.style,
            id = _props5.id,
            slider = _props5.slider,
            reverse = _props5.reverse,
            className = _props5.className,
            marks = _props5.marks,
            marksPosition = _props5.marksPosition,
            hasTip = _props5.hasTip,
            tipRender = _props5.tipRender,
            fixedWidth = _props5.fixedWidth,
            defaultValue = _props5.defaultValue,
            tooltipVisible = _props5.tooltipVisible,
            rtl = _props5.rtl,
            isPreview = _props5.isPreview,
            renderPreview = _props5.renderPreview;


        var others = range_pickOthers(Object.keys(Range.propTypes), this.props);

        var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'range'] = true, _classNames.disabled = disabled, _classNames[className] = className, _classNames));

        if (Array.isArray(value)) {
            value.forEach(function (item, index) {
                if (item > max) {
                    value[index] = max;
                }
            });
        } else if (value > max) {
            value = max;
        }

        var commonProps = {
            prefix: prefix,
            min: min,
            max: max,
            value: value,
            reverse: reverse,
            slider: slider,
            hasTip: hasTip,
            tipRender: tipRender,
            marksPosition: marksPosition,
            tooltipVisible: tooltipVisible,
            hasMovingClass: this.state.hasMovingClass,
            disabled: disabled,
            rtl: rtl
        };

        this.isFixedWidth = fixedWidth && (value ? Array.isArray(value) : defaultValue ? Array.isArray(defaultValue) : false);

        if (isPreview) {
            var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

            if ('renderPreview' in this.props) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }),
                    renderPreview(value, this.props)
                );
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                extends_default()({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }),
                Array.isArray(value) ? value.join('~') : value
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                ref: function ref(dom) {
                    _this2.dom = dom;
                }
            }, others, {
                style: style,
                className: classes,
                id: id,
                dir: rtl ? 'rtl' : 'ltr',
                onMouseDown: disabled ? range_noop : this._onMouseDown.bind(this),
                onTouchStart: disabled ? range_noop : this._onTouchStart.bind(this)
            }),
            marks !== false && marksPosition === 'above' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(mark_Mark, extends_default()({}, commonProps, { marks: this._calcMarks() })) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'range-inner' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(scale_Scale, extends_default()({}, commonProps, { scales: this._calcScales() })),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(track, commonProps),
                this.isFixedWidth ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(fixedSlider_FixedSlider, commonProps) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    null,
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(selected_Selected, commonProps),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(LowerSlider, extends_default()({}, commonProps, {
                        hasMovingClass: this.state.hasMovingClass && this._moving && this._moving.dragging === 'lower',
                        tooltipVisible: tooltipVisible || this.state.lowerTooltipVisible,
                        onTooltipVisibleChange: this.handleLowerTooltipVisibleChange,
                        tooltipAnimation: this.state.tooltipAnimation ? {
                            in: 'expandInUp',
                            out: 'expandOutDown'
                        } : false
                    })),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(UpperSlider, extends_default()({}, commonProps, {
                        onKeyDown: this.onKeyDown,
                        hasMovingClass: this.state.hasMovingClass && this._moving && this._moving.dragging === 'upper',
                        tooltipVisible: tooltipVisible || this.state.upperTooltipVisible,
                        onTooltipVisibleChange: this.handleUpperTooltipVisibleChange,
                        tooltipAnimation: this.state.tooltipAnimation ? {
                            in: 'expandInUp',
                            out: 'expandOutDown'
                        } : false
                    }))
                )
            ),
            marks !== false && marksPosition === 'below' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(mark_Mark, extends_default()({}, commonProps, { marks: this._calcMarks() })) : null
        );
    };

    return Range;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), range__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, range__class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内敛样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 滑块个数
     * @enumdesc 单个, 两个
     */
    slider: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'double']),
    /**
     * 最小值
     */
    min: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 最大值
     */
    max: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 步长，取值必须大于 0，并且可被 (max - min) 整除。
     */
    step: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 设置当前取值。当 `slider` 为 `single` 时，使用 `Number`，否则用 `[Number, Number]`
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    tempValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    /**
     * 设置初始取值。当 `slider` 为 `single` 时，使用 `Number`，否则用 `[Number, Number]`
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number)]),
    /**
     * 刻度数值显示逻辑（false 代表不显示，array 枚举显示的值，number 代表按 number 平分，object 表示按 key 划分，value 值显示）
     */
    marks: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.number), _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * marks显示在上方('above')or下方('below')
     */
    marksPosition: _prop_types_15_8_1_prop_types_default.a.oneOf(['above', 'below']),
    /**
     * 值为 `true` 时，滑块为禁用状态
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当 Range 的值发生改变后，会触发 onChange 事件，并把改变后的值作为参数传入, 如果设置了value, 要配合此函数做受控使用
     * @param {String/number} value
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 滑块拖动的时候触发的事件,不建议在这里setState, 一般情况下不需要用, 滑动时有特殊需求时使用
     * @param {String/number} value
     */
    onProcess: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否显示 tip
     */
    hasTip: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义 tip 显示内容
     * @param {Number|String} value 值
     * @return {ReactNode} 显示内容
     */
    tipRender: _prop_types_15_8_1_prop_types_default.a.func,
    id: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选中态反转
     */
    reverse: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否pure render
     */
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为拖动线段类型,默认slider为double, defaultValue必传且指定区间
     */
    fixedWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * tooltip是否默认展示
     */
    tooltipVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否已rtl模式展示
     */
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func
}, range__class.defaultProps = {
    prefix: 'next-',
    slider: 'single',
    min: 0,
    max: 100,
    step: 1,
    marks: false,
    disabled: false,
    fixedWidth: false,
    tooltipVisible: false,
    hasTip: true,
    onChange: range_noop,
    onProcess: range_noop,
    tipRender: function tipRender(value) {
        return value;
    },
    reverse: false,
    pure: false,
    marksPosition: 'above',
    rtl: false,
    isPreview: false
}, range__temp);
range_Range.displayName = 'Range';


/* harmony default export */ var view_range = (Object(react_lifecycles_compat_es["polyfill"])(range_Range));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/range/index.js





/* harmony default export */ var es_range = (config_provider.config(view_range, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasTips' in props) {
            deprecated('hasTips', 'hasTip', 'Range');

            var _props = props,
                hasTips = _props.hasTips,
                others = objectWithoutProperties_default()(_props, ['hasTips']);

            props = extends_default()({ hasTip: hasTips }, others);
        }

        if ('tipFormatter' in props) {
            deprecated('tipFormatter', 'tipRender', 'Range');

            var _props2 = props,
                tipFormatter = _props2.tipFormatter,
                _others = objectWithoutProperties_default()(_props2, ['tipFormatter']);

            props = extends_default()({ tipRender: tipFormatter }, _others);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/rating/rating.js





var rating__class, rating__temp;










var rating_noop = func.noop,
    rating_bindCtx = func.bindCtx;
var ENTER = KEYCODE.ENTER,
    LEFT = KEYCODE.LEFT,
    UP = KEYCODE.UP,
    RIGHT = KEYCODE.RIGHT,
    DOWN = KEYCODE.DOWN;

var supportKeys = [ENTER, LEFT, UP, RIGHT, DOWN];

// 评分组件的大小与icon的大小映射关系
var ICON_SIZE_MAP = {
    small: 'xs',
    medium: 'small',
    large: 'medium'
};

/** Rating */
var rating_Rating = (rating__temp = rating__class = function (_Component) {
    inherits_default()(Rating, _Component);

    Rating.currentValue = function currentValue(min, max, hoverValue, stateValue) {
        var value = hoverValue ? hoverValue : stateValue;

        value = value >= max ? max : value;
        value = value <= min ? min : value;

        return value || 0;
    };

    function Rating(props) {
        classCallCheck_default()(this, Rating);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.saveRef = function (ref, i) {
            _this['refs-rating-icon-' + i] = ref;
        };

        _this.state = {
            value: 'value' in props ? props.value : props.defaultValue,
            hoverValue: 0,
            cleanedValue: null,
            iconSpace: 0,
            iconSize: 0,
            clicked: false // 标记组件是否被点击过
        };
        _this.timer = null;

        rating_bindCtx(_this, ['handleClick', 'handleHover', 'handleLeave', 'onKeyDown']);
        return _this;
    }

    Rating.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};
        if ('value' in nextProps) {
            state.value = nextProps.value || 0;
        }

        if ('disabled' in nextProps || 'readOnly' in nextProps || 'isPreview' in nextProps || 'renderPreview' in nextProps) {
            state.disabled = nextProps.disabled || nextProps.readOnly || nextProps.isPreview && !('renderPreview' in nextProps);
        }

        return state;
    };

    Rating.prototype.componentDidMount = function componentDidMount() {
        this.getRenderResult();
    };

    Rating.prototype.componentWillUnmount = function componentWillUnmount() {
        this.clearTimer();
    };

    // 清除延时


    Rating.prototype.clearTimer = function clearTimer() {
        if (this.timer) {
            clearTimeout(this.timer);
            this.timer = null;
        }
    };

    Rating.prototype.getRenderResult = function getRenderResult() {
        var count = this.props.count;
        var _state = this.state,
            iconSpace = _state.iconSpace,
            iconSize = _state.iconSize;

        var icon = this['refs-rating-icon-0'];

        if (icon && this.underlayNode) {
            var newIconSize = icon.offsetWidth;
            var newIconSpace = (this.underlayNode.offsetWidth - count * newIconSize) / (count + 1);

            if (newIconSize !== iconSize || newIconSpace !== iconSpace) {
                this.setState({
                    iconSpace: newIconSpace,
                    iconSize: newIconSize
                });
            }
        }
    };

    Rating.prototype.getValue = function getValue(e) {
        // 如定位不准，优先纠正定位
        this.getRenderResult();

        var _props = this.props,
            allowHalf = _props.allowHalf,
            count = _props.count,
            rtl = _props.rtl;
        var _state2 = this.state,
            iconSpace = _state2.iconSpace,
            iconSize = _state2.iconSize;


        var pos = e.pageX - this.underlayNode.getBoundingClientRect().left;
        var fullNum = Math.floor(pos / (iconSpace + iconSize));
        var surplusNum = (pos - fullNum * (iconSpace + iconSize) - iconSpace) / iconSize;
        var value = Number(fullNum) + Number(surplusNum.toFixed(1));
        if (value >= count) {
            value = count;
        } else if (allowHalf) {
            var floorValue = Math.floor(value);
            if (rtl) {
                value = value - 0.5 >= floorValue ? floorValue + 1.5 : floorValue + 1;
            } else {
                value = value - 0.5 >= floorValue ? floorValue + 1 : floorValue + 0.5;
            }
        } else {
            value = Math.floor(value) + 1;
        }

        return rtl ? count - value + 1 : value;
    };

    Rating.prototype.handleHover = function handleHover(e) {
        var _this2 = this;

        if (this.state.disabled) {
            return;
        }

        var value = this.getValue(e);
        var onHoverChange = this.props.onHoverChange;
        var cleanedValue = this.state.cleanedValue;

        if (cleanedValue !== value) {
            this.clearTimer();

            this.timer = setTimeout(function () {
                _this2.setState({ hoverValue: value, cleanedValue: null }, function () {
                    onHoverChange(value);
                });
            }, 0);
        }
    };

    Rating.prototype.handleLeave = function handleLeave() {
        var onHoverChange = this.props.onHoverChange;

        if (this.state.disabled) {
            return;
        }

        this.clearTimer();

        this.setState({
            hoverValue: 0,
            cleanedValue: null
        });
        onHoverChange(undefined);
    };

    Rating.prototype.onKeyDown = function onKeyDown(e) {
        if (this.state.disabled) {
            return;
        }

        var _props2 = this.props,
            onKeyDown = _props2.onKeyDown,
            count = _props2.count;
        var disabled = this.state.disabled;

        if (disabled || supportKeys.indexOf(e.keyCode) < 0) {
            return !onKeyDown || onKeyDown(e);
        }

        var _state3 = this.state,
            hoverValue = _state3.hoverValue,
            value = _state3.value;

        var changingValue = hoverValue;
        if (changingValue === 0) {
            changingValue = value;
        }

        switch (e.keyCode) {
            case DOWN:
            case RIGHT:
                if (changingValue < count) {
                    changingValue += 1;
                } else {
                    changingValue = 1;
                }
                this.handleChecked(changingValue);
                break;
            case UP:
            case LEFT:
                if (changingValue > 1) {
                    changingValue -= 1;
                } else {
                    changingValue = count;
                }
                this.handleChecked(changingValue);
                break;
            case ENTER:
                this.props.onChange(changingValue);
                this.setState({
                    value: changingValue,
                    hoverValue: changingValue
                });
                break;
        }
        return !onKeyDown || onKeyDown(e);
    };

    Rating.prototype.handleChecked = function handleChecked(index) {
        if (this.state.disabled) {
            return;
        }

        this.setState({ hoverValue: index });
    };

    Rating.prototype.handleClick = function handleClick(e) {
        var _this3 = this;

        if (this.state.disabled) {
            return;
        }
        var allowClear = this.props.allowClear;
        var value = this.state.value;

        var newValue = this.getValue(e);
        var isReset = false;
        if (allowClear) {
            isReset = newValue === value;
        }
        this.handleLeave();
        if (newValue < 0) {
            return;
        }

        if (!('value' in this.props)) {
            this.setState({ value: isReset ? 0 : newValue, clicked: true });
        }

        this.props.onChange(isReset ? 0 : newValue);
        setTimeout(function () {
            _this3.setState({ clicked: false });
        }, 100);
        this.setState({
            cleanedValue: isReset ? newValue : null
        });
    };

    Rating.prototype.getOverlayWidth = function getOverlayWidth() {
        var _state4 = this.state,
            hoverValue = _state4.hoverValue,
            iconSpace = _state4.iconSpace,
            iconSize = _state4.iconSize;


        if (!iconSpace || !iconSize) {
            return 'auto';
        }

        var value = Rating.currentValue(0, this.props.count, hoverValue, this.state.value);

        var floorValue = Math.floor(value);

        return iconSize * value + (floorValue + 1) * iconSpace;
    };

    Rating.prototype.getInfoLeft = function getInfoLeft() {
        var _state5 = this.state,
            value = _state5.value,
            hoverValue = _state5.hoverValue,
            iconSpace = _state5.iconSpace,
            iconSize = _state5.iconSize;

        var infoValue = hoverValue || value;
        var ceilValue = Math.ceil(infoValue);

        return iconSize * (ceilValue - 1) + ceilValue * iconSpace;
    };

    Rating.prototype.render = function render() {
        var _classNames,
            _classNames2,
            _classNames3,
            _this4 = this;

        var _props3 = this.props,
            id = _props3.id,
            prefix = _props3.prefix,
            className = _props3.className,
            showGrade = _props3.showGrade,
            count = _props3.count,
            size = _props3.size,
            iconType = _props3.iconType,
            strokeMode = _props3.strokeMode,
            readAs = _props3.readAs,
            rtl = _props3.rtl,
            isPreview = _props3.isPreview,
            renderPreview = _props3.renderPreview,
            locale = _props3.locale;
        var disabled = this.state.disabled;

        var others = util_obj.pickOthers(Rating.propTypes, this.props);
        var _state6 = this.state,
            hoverValue = _state6.hoverValue,
            clicked = _state6.clicked;

        var underlay = [],
            overlay = [];

        var enableA11y = !!id;

        // 获得Value
        var value = Rating.currentValue(0, count, hoverValue, this.state.value);

        // icon的sizeMap
        var sizeMap = ICON_SIZE_MAP[size];

        var _loop = function _loop(i) {
            var _classNames4;

            var isCurrent = Math.ceil(value - 1) === i;
            var iconCls = _classnames_2_3_1_classnames_default()((_classNames4 = {
                hover: hoverValue > 0 && isCurrent,
                clicked: clicked && isCurrent
            }, _classNames4[prefix + 'rating-symbol-icon'] = !iconType, _classNames4));
            var iconNode = iconType ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: iconType, size: sizeMap, className: iconCls }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'favorites-filling', size: sizeMap, className: iconCls });

            var saveRefs = function saveRefs(ref) {
                _this4.saveRef(ref, i);
            };

            underlay.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { ref: saveRefs, key: 'underlay-' + i, className: prefix + 'rating-icon' },
                iconNode
            ));
            if (enableA11y) {
                overlay.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('input', {
                    id: id + '-' + prefix + 'star' + (i + 1),
                    key: 'input-' + i,
                    className: prefix + 'sr-only',
                    'aria-checked': i + 1 === parseInt(hoverValue),
                    checked: i + 1 === parseInt(hoverValue),
                    onChange: _this4.handleChecked.bind(_this4, i + 1),
                    type: 'radio',
                    name: 'rating'
                }));
            }

            overlay.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'label',
                {
                    key: 'overlay-' + i,
                    htmlFor: enableA11y ? id + '-' + prefix + 'star' + (i + 1) : null,
                    className: prefix + 'rating-icon'
                },
                iconNode,
                enableA11y ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { className: prefix + 'sr-only' },
                    readAs(i + 1)
                ) : null
            ));
        };

        for (var i = 0; i < count; i++) {
            _loop(i);
        }

        var ratingCls = _classnames_2_3_1_classnames_default()([prefix + 'rating', prefix + 'rating-' + size], (_classNames = {}, _classNames[prefix + 'rating-grade-low'] = value <= count * 0.4, _classNames[prefix + 'rating-grade-high'] = value > count * 0.4, _classNames[prefix + 'rating-stroke-mode'] = strokeMode, _classNames.hover = hoverValue > 0, _classNames), className);

        var baseCls = _classnames_2_3_1_classnames_default()(prefix + 'rating-base', (_classNames2 = {}, _classNames2[prefix + 'rating-base-disabled'] = disabled, _classNames2));

        var previewCls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'form-preview'] = true, _classNames3[className] = !!className, _classNames3));

        var overlayStyle = {
            width: this.getOverlayWidth()
        };
        var infoStyle = {
            left: this.getInfoLeft(),
            display: hoverValue ? 'block' : 'none'
        };

        var finalProps = disabled ? {} : {
            onClick: this.handleClick,
            onMouseOver: this.handleHover,
            onMouseMove: this.handleHover,
            onMouseLeave: this.handleLeave
        };

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview && 'renderPreview' in this.props) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({ id: id }, others, { className: previewCls }),
                renderPreview(value, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                id: id
            }, others, {
                className: ratingCls,
                onKeyDown: this.onKeyDown,
                tabIndex: '0',
                role: 'group',
                'aria-label': locale.description
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({ className: baseCls }, finalProps),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'rating-underlay', ref: function ref(n) {
                            return _this4.underlayNode = n;
                        }, 'aria-hidden': true },
                    underlay
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'rating-overlay', style: overlayStyle, onClick: function onClick(e) {
                            return e.preventDefault();
                        } },
                    overlay
                )
            ),
            showGrade ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'rating-info', style: infoStyle },
                readAs(value)
            ) : null
        );
    };

    return Rating;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), rating__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 值
     */
    value: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 评分的总数
     */
    count: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 是否显示 grade
     */
    showGrade: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否允许半星评分
     */
    allowHalf: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否允许再次点击后清除
     */
    allowClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 用户点击评分时触发的回调
     * @param {Number} value 评分值
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 用户hover评分时触发的回调
     * @param {Number} value 评分值
     */
    onHoverChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 评分文案生成方法，传入id支持无障碍时，读屏软件可读
     */
    readAs: _prop_types_15_8_1_prop_types_default.a.func,
    // 实验属性: 自定义评分icon
    iconType: _prop_types_15_8_1_prop_types_default.a.string,
    // 实验属性: 开启 `-webkit-text-stroke` 显示边框颜色，在IE中无效
    strokeMode: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    id: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义国际化文案对象
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否为只读态，效果上同 disabeld
     */
    readOnly: _prop_types_15_8_1_prop_types_default.a.bool
}, rating__class.defaultProps = {
    prefix: 'next-',
    size: 'medium',
    disabled: false,
    readOnly: false,
    isPreview: false,
    count: 5,
    showGrade: false,
    defaultValue: 0,
    readAs: function readAs(val) {
        return val;
    },
    allowHalf: false,
    allowClear: false,
    onChange: rating_noop,
    onHoverChange: rating_noop,
    locale: locale_zh_cn.Rating
}, rating__temp);
rating_Rating.displayName = 'Rating';


/* harmony default export */ var rating = (Object(react_lifecycles_compat_es["polyfill"])(rating_Rating));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/rating/index.js





/* harmony default export */ var es_rating = (config_provider.config(rating, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'showGrade', 'Rating');

            var _props = props,
                type = _props.type,
                others = objectWithoutProperties_default()(_props, ['type']);

            props = extends_default()({ showGrade: type === 'grade' }, others);
        }

        var _props2 = props,
            disabled = _props2.disabled,
            readOnly = _props2.readOnly;

        props.disabled = disabled || readOnly;

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/search/Search.js






var Search__class, Search__temp, Search__initialiseProps;













var Search_Group = es_input.Group;
var Search_AutoComplete = es_select.AutoComplete;
var Search_noop = func.noop;

/**
 * Search
 * @description 输入框部分继承 Select.AutoComplete 的能力，可以直接用AutoComplete 的 api
 */

var Search_Search = (Search__temp = Search__class = function (_React$Component) {
    inherits_default()(Search, _React$Component);

    function Search(props) {
        classCallCheck_default()(this, Search);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        Search__initialiseProps.call(_this);

        var value = 'value' in props ? props.value : props.defaultValue;
        var filterValue = 'filterValue' in props ? props.filterValue : props.defaultFilterValue;

        _this.state = {
            value: typeof value === 'undefined' ? '' : value,
            filterValue: filterValue
        };

        _this.highlightKey = null;
        return _this;
    }

    Search.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var nextState = {};
        if ('value' in nextProps && nextProps.value !== prevState.value) {
            var value = nextProps.value;
            nextState.value = value === undefined || value === null ? '' : nextProps.value;
        }

        if ('filterValue' in nextProps && nextProps.filterValue !== prevState.filterValue) {
            var filterValue = nextProps.filterValue;
            nextState.filterValue = filterValue === undefined ? '' : filterValue;
        }

        if (Object.keys(nextState).length > 0) {
            return nextState;
        }

        return null;
    };

    Search.prototype.focus = function focus() {
        var _inputRef;

        (_inputRef = this.inputRef).focus.apply(_inputRef, arguments);
    };

    Search.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            shape = _props.shape,
            filter = _props.filter,
            hasIcon = _props.hasIcon,
            disabled = _props.disabled,
            placeholder = _props.placeholder,
            type = _props.type,
            className = _props.className,
            style = _props.style,
            size = _props.size,
            prefix = _props.prefix,
            searchText = _props.searchText,
            dataSource = _props.dataSource,
            filterProps = _props.filterProps,
            buttonProps = _props.buttonProps,
            fillProps = _props.fillProps,
            popupContent = _props.popupContent,
            followTrigger = _props.followTrigger,
            hasClear = _props.hasClear,
            visible = _props.visible,
            locale = _props.locale,
            rtl = _props.rtl,
            icons = _props.icons,
            autoHighlightFirstItem = _props.autoHighlightFirstItem,
            others = objectWithoutProperties_default()(_props, ['shape', 'filter', 'hasIcon', 'disabled', 'placeholder', 'type', 'className', 'style', 'size', 'prefix', 'searchText', 'dataSource', 'filterProps', 'buttonProps', 'fillProps', 'popupContent', 'followTrigger', 'hasClear', 'visible', 'locale', 'rtl', 'icons', 'autoHighlightFirstItem']);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'search'] = true, _classNames[prefix + 'search-' + shape] = true, _classNames['' + prefix + type] = type, _classNames['' + prefix + size] = size, _classNames[prefix + 'disabled'] = !!disabled, _classNames[className] = !!className, _classNames));

        var searchIcon = null,
            filterSelect = null,
            searchBtn = null,
            iconsSearch = icons.search;

        if (!Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["isValidElement"])(icons.search) && icons.search) {
            iconsSearch = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                null,
                icons.search
            );
        }

        if (shape === 'simple') {
            var _classNames2;

            var _cls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'search-icon'] = true, _classNames2[buttonProps.className] = !!buttonProps.className, _classNames2[prefix + 'search-symbol-icon'] = !iconsSearch, _classNames2));
            hasIcon && (searchIcon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(iconsSearch || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'search' }), extends_default()({
                role: 'button',
                'aria-disabled': disabled,
                'aria-label': locale.buttonText
            }, buttonProps, {
                className: _cls,
                onClick: this.onSearch,
                onKeyDown: this.onKeyDown
            })));
        } else {
            var _classNames3;

            var _cls2 = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'search-btn'] = true, _classNames3[buttonProps.className] = !!buttonProps.className, _classNames3));
            searchBtn = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                extends_default()({
                    tabIndex: '0',
                    'aria-disabled': disabled,
                    'aria-label': locale.buttonText,
                    className: _cls2,
                    disabled: disabled
                }, buttonProps, {
                    onClick: this.onSearch,
                    onKeyDown: this.onKeyDown
                }),
                hasIcon ? iconsSearch || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'search', className: prefix + 'search-symbol-icon' }) : null,
                searchText ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { className: prefix + 'search-btn-text' },
                    searchText
                ) : null
            );
        }

        if (filter.length > 0) {
            filterSelect = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_select, extends_default()({}, filterProps, {
                followTrigger: followTrigger,
                hasBorder: false,
                dataSource: filter,
                size: size,
                disabled: disabled,
                value: this.state.filterValue,
                onChange: this.onFilterChange
            }));
        }

        var othersAttributes = util_obj.pickOthers(Search.propTypes, others);
        if (visible !== undefined) {
            // 受控属性 visible 不能直接写在组件上
            othersAttributes.visible = Boolean(visible);
        }
        var dataAttr = util_obj.pickAttrsWith(others, 'data-');

        var left = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Search_Group,
            {
                addonBefore: filterSelect,
                className: prefix + 'search-left',
                addonBeforeClassName: prefix + 'search-left-addon'
            },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Search_AutoComplete, extends_default()({
                'aria-label': locale.buttonText
            }, othersAttributes, {
                followTrigger: followTrigger,
                role: 'searchbox',
                hasClear: hasClear,
                className: prefix + 'search-input',
                size: size,
                fillProps: fillProps,
                placeholder: placeholder,
                dataSource: dataSource,
                innerAfter: searchIcon,
                onPressEnter: this.onPressEnter,
                value: this.state.value,
                onChange: this.onChange,
                onToggleHighlightItem: this.onToggleHighlightItem,
                autoHighlightFirstItem: autoHighlightFirstItem,
                popupContent: popupContent,
                disabled: disabled,
                ref: this.saveInputRef
            }))
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({ className: cls, style: style }, dataAttr, { dir: rtl ? 'rtl' : undefined }),
            searchBtn ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                Search_Group,
                { addonAfter: searchBtn },
                left
            ) : left
        );
    };

    return Search;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), Search__class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 形状
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'simple']),
    /**
     * 类型 shape=normal: primary/secondary; shape=simple: normal/dark;
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['primary', 'secondary', 'normal', 'dark']),
    /**
     * 大小
     * @enumdesc '大', '小'
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['large', 'medium']),
    /**
     * 搜索框默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 搜索框数值
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 输入关键字时的回掉
     * @param {Object} value 输入值
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击搜索按钮触发的回调
     * @param {String} value 输入值
     * @param {String} filterValue 选项值
     */
    onSearch: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选择器默认值
     */
    defaultFilterValue: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 填充到输入框里的值的 key ，默认是value
     */
    fillProps: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选择器
     */
    filter: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 选择器值
     */
    filterValue: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选择器发生变化时回调
     * @param {Object} filter value
     */
    onFilterChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 搜索框下拉联想列表
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 默认提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * button 的内容
     */
    searchText: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 自定义样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 样式名称
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选择器的props
     */
    filterProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 按钮的额外属性
     */
    buttonProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义渲染的的下拉框
     */
    popupContent: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义渲染的的下拉框
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示清除按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示搜索按钮
     */
    hasIcon: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 可配置的icons，包括 search 等
     */
    icons: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否自动高亮第一个元素
     */
    autoHighlightFirstItem: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 上下箭头切换选项的回调
     */
    onToggleHighlightItem: _prop_types_15_8_1_prop_types_default.a.func
}, Search__class.defaultProps = {
    prefix: 'next-',
    shape: 'normal',
    type: 'normal',
    size: 'medium',
    hasIcon: true,
    filter: [],
    locale: locale_zh_cn.Search,
    buttonProps: {},
    onChange: Search_noop,
    onSearch: Search_noop,
    onFilterChange: Search_noop,
    onToggleHighlightItem: Search_noop,
    hasClear: false,
    disabled: false,
    icons: {},
    autoHighlightFirstItem: true
}, Search__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onChange = function (value, type) {
        for (var _len = arguments.length, argv = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            argv[_key - 2] = arguments[_key];
        }

        var _props2;

        if (_this2.props.disabled) {
            return;
        }

        if (!('value' in _this2.props)) {
            _this2.setState({ value: value });
        }

        (_props2 = _this2.props).onChange.apply(_props2, [value, type].concat(argv));
        if (type === 'enter') {
            _this2.highlightKey = '';
            _this2.props.onSearch(value, _this2.state.filterValue);
        }
    };

    this.onPressEnter = function () {
        if (_this2.highlightKey) {
            return;
        }
        _this2.onSearch();
    };

    this.onSearch = function () {
        if (_this2.props.disabled) {
            return;
        }
        _this2.props.onSearch(_this2.state.value, _this2.state.filterValue);
    };

    this.onFilterChange = function (filterValue) {
        if (!('filterValue' in _this2.props)) {
            _this2.setState({ filterValue: filterValue });
        }

        _this2.props.onFilterChange(filterValue);
    };

    this.onToggleHighlightItem = function (highlightKey) {
        var _props3;

        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
        }

        _this2.highlightKey = highlightKey;

        (_props3 = _this2.props).onToggleHighlightItem.apply(_props3, [highlightKey].concat(args));
    };

    this.onKeyDown = function (e) {
        if (_this2.props.disabled) {
            return;
        }
        if (e.keyCode !== KEYCODE.ENTER) {
            return;
        }
        _this2.onSearch();
    };

    this.saveInputRef = function (ref) {
        if (ref && ref.getInstance()) {
            _this2.inputRef = ref.getInstance();
        }
    };
}, Search__temp);
Search_Search.displayName = 'Search';


/* harmony default export */ var search_Search = (Object(react_lifecycles_compat_es["polyfill"])(Search_Search));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/search/index.js




/* harmony default export */ var search = (config_provider.config(search_Search, {
    transfrom: /* istanbul ignore next */function transfrom(props, deprecated) {
        var onInputFocus = props.onInputFocus,
            overlayVisible = props.overlayVisible,
            combox = props.combox,
            others = objectWithoutProperties_default()(props, ['onInputFocus', 'overlayVisible', 'combox']);

        var newprops = others;

        if (onInputFocus) {
            deprecated('onInputFocus', 'onFocus', 'Search');
            newprops.onFocus = onInputFocus;
        }
        if ('overlayVisible' in props) {
            deprecated('overlayVisible', 'visible', 'Search');
            newprops.visible = overlayVisible;
        }
        if (combox) {
            deprecated('combox', 'popupContent', 'Search');
            newprops.popupContent = combox;
        }

        return newprops;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/shell/util.js
/**
 * 判断是否为布尔类型
 * @param  {any} val 例：'str' / undefined / null / true / false / 0
 * @return {bool}     例： false / false / false / true / false / false
 */
function isBoolean(val) {
    return typeof val === 'boolean';
}

function getCollapseMap(device) {
    // by default all of them are collapsed
    var origin = {
        Navigation: true,
        LocalNavigation: true,
        Ancillary: true,
        ToolDock: true
    };

    var map = [];

    switch (device) {
        case 'phone':
            break;
        case 'pad':
        case 'tablet':
            map = ['ToolDock'];
            break;
        case 'desktop':
            map = ['Navigation', 'LocalNavigation', 'Ancillary', 'ToolDock'];
            break;
        default:
            break;
    }

    Object.keys(origin).forEach(function (key) {
        if (map.indexOf(key) > -1) {
            origin[key] = false;
        }
    });

    return origin;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/shell/shell.js















/**
 * Shell
 */
function ShellBase(props) {
    var _class, _temp, _initialiseProps;

    var componentName = props.componentName;
    var Shell = (_temp = _class = function (_Component) {
        inherits_default()(Shell, _Component);

        function Shell(props) {
            classCallCheck_default()(this, Shell);

            var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

            _initialiseProps.call(_this);

            var deviceMap = getCollapseMap(props.device);
            _this.layout = {};

            _this.state = {
                controll: false,
                collapseMap: deviceMap,
                device: props.device
            };
            return _this;
        }

        Shell.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
            var device = prevState.device;


            if (nextProps.device !== device) {
                var deviceMap = getCollapseMap(nextProps.device);
                return {
                    controll: false,
                    collapseMap: deviceMap,
                    device: nextProps.device
                };
            }

            return {};
        };

        Shell.prototype.componentDidMount = function componentDidMount() {
            this.checkAsideFixed();
        };

        Shell.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
            var _this2 = this;

            if (prevProps.device !== this.props.device) {
                var deviceMapBefore = getCollapseMap(prevProps.device);
                var deviceMapAfter = getCollapseMap(this.props.device);

                Object.keys(deviceMapAfter).forEach(function (block) {
                    var _ref = _this2.layout[block] || {},
                        props = _ref.props;

                    if (deviceMapBefore[block] !== deviceMapAfter[block]) {
                        if (props && typeof props.onCollapseChange === 'function') {
                            props.onCollapseChange(deviceMapAfter[block]);
                        }
                    }
                });
            }

            setTimeout(function () {
                // 如果左侧边栏固定
                _this2.checkAsideFixed();
            }, 201);
        };

        Shell.prototype.render = function render() {
            return this.renderShell(this.props);
        };

        return Shell;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), _class.displayName = componentName, _class._typeMark = componentName, _class.propTypes = extends_default()({}, config_provider.propTypes, {
        prefix: _prop_types_15_8_1_prop_types_default.a.string,
        /**
         * 设备类型
         * @enumdesc 手机, 平板, PC电脑
         */
        device: _prop_types_15_8_1_prop_types_default.a.oneOf(['phone', 'tablet', 'desktop']),
        /**
         * 设备类型
         * @enumdesc 浅色, 深色, 主题色
         */
        type: _prop_types_15_8_1_prop_types_default.a.oneOf(['light', 'dark', 'brand']),
        /**
         * 是否固定 header, 用sticky实现，IE下降级为Affix
         */
        fixedHeader: _prop_types_15_8_1_prop_types_default.a.bool
    }), _class.defaultProps = {
        prefix: 'next-',
        device: 'desktop',
        type: 'light',
        fixedHeader: false
    }, _initialiseProps = function _initialiseProps() {
        var _this3 = this;

        this.checkAsideFixed = function () {
            var fixedHeader = _this3.props.fixedHeader;


            if (!fixedHeader) {
                return;
            }

            var headerHeight = void 0;
            if (_this3.headerRef && (_this3.navigationFixed || _this3.toolDockFixed)) {
                headerHeight = util_dom.getStyle(_this3.headerRef, 'height');
            }

            if (_this3.navigationFixed) {
                var style = {};
                style.marginLeft = util_dom.getStyle(_this3.navRef, 'width');
                util_dom.addClass(_this3.navRef, 'fixed');
                headerHeight && util_dom.setStyle(_this3.navRef, { top: headerHeight });
                util_dom.setStyle(_this3.localNavRef || _this3.submainRef, style);
            }

            if (_this3.toolDockFixed) {
                var _style = {};
                _style.marginRight = util_dom.getStyle(_this3.toolDockRef, 'width');
                util_dom.addClass(_this3.toolDockRef, 'fixed');
                headerHeight && util_dom.setStyle(_this3.toolDockRef, { top: headerHeight });
                util_dom.setStyle(_this3.localNavRef || _this3.submainRef, _style);
            }
        };

        this.setChildCollapse = function (child, mark) {
            var _state = _this3.state,
                device = _state.device,
                collapseMap = _state.collapseMap,
                controll = _state.controll;
            var collapse = child.props.collapse;

            var deviceMap = getCollapseMap(device);
            var props = {};

            // 非受控模式
            if (isBoolean(collapse) === false) {
                props.collapse = controll ? collapseMap[mark] : deviceMap[mark];
                // props.collapse = collapseMap[mark];
            }

            if (device !== 'phone' && mark === 'Navigation') {
                props.miniable = true;
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, props);
        };

        this.toggleAside = function (mark, props, e) {
            var _extends2;

            var _state2 = _this3.state,
                device = _state2.device,
                collapseMap = _state2.collapseMap;

            var deviceMap = getCollapseMap(device);
            var current = props.collapse;

            var newCollapseMap = extends_default()({}, deviceMap, collapseMap, (_extends2 = {}, _extends2[mark] = !current, _extends2));
            _this3.setState({
                controll: true,
                collapseMap: newCollapseMap
            });

            if (props && typeof props.onCollapseChange === 'function') {
                props.onCollapseChange(newCollapseMap[mark]);
            }

            var children = _this3.props.children;

            var com = void 0;
            if (mark === 'Navigation') {
                com = children.filter(function (child) {
                    return child && child.type._typeMark.replace('Shell_', '') === mark && child.props.direction !== 'hoz';
                }).pop();
            } else {
                com = children.filter(function (child) {
                    return child && child.type._typeMark.replace('Shell_', '') === mark;
                }).pop();
            }

            var _com$props$triggerPro = com.props.triggerProps,
                triggerProps = _com$props$triggerPro === undefined ? {} : _com$props$triggerPro;


            if (typeof triggerProps.onClick === 'function') {
                triggerProps.onClick(e, _this3.state.collapseMap[mark]);
            }
        };

        this.toggleNavigation = function (e) {
            var mark = 'Navigation';
            var props = _this3.layout[mark].props;


            if ('keyCode' in e && e.keyCode !== KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.toggleLocalNavigation = function (e) {
            var mark = 'LocalNavigation';
            var props = _this3.layout[mark].props;


            if ('keyCode' in e && e.keyCode !== KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.toggleAncillary = function (e) {
            var mark = 'Ancillary';
            var props = _this3.layout[mark].props;


            if ('keyCode' in e && e.keyCode !== KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.toggleToolDock = function (e) {
            var mark = 'ToolDock';
            var props = _this3.layout[mark].props;


            if ('keyCode' in e && e.keyCode !== KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.saveHeaderRef = function (ref) {
            _this3.headerRef = ref;
        };

        this.saveLocalNavRef = function (ref) {
            _this3.localNavRef = ref;
        };

        this.saveNavRef = function (ref) {
            _this3.navRef = ref;
        };

        this.saveSubmainRef = function (ref) {
            _this3.submainRef = ref;
        };

        this.saveToolDockRef = function (ref) {
            _this3.toolDockRef = ref;
        };

        this.renderShell = function (props) {
            var _classnames, _classnames2, _classnames3, _classnames4, _classnames5, _classnames6, _classnames7, _classnames11;

            var prefix = props.prefix,
                children = props.children,
                className = props.className,
                type = props.type,
                fixedHeader = props.fixedHeader,
                others = objectWithoutProperties_default()(props, ['prefix', 'children', 'className', 'type', 'fixedHeader']);

            var device = _this3.state.device;


            var layout = {};
            layout.header = {};
            var hasToolDock = false,
                needNavigationTrigger = false,
                needDockTrigger = false;

            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.map(children, function (child) {
                if (child && typeof child.type === 'function') {
                    var mark = child.type._typeMark.replace('Shell_', '');
                    switch (mark) {
                        case 'Branding':
                        case 'Action':
                            layout.header[mark] = child;
                            break;
                        case 'MultiTask':
                            layout.taskHeader = child;
                            break;
                        case 'LocalNavigation':
                            if (!layout[mark]) {
                                layout[mark] = [];
                            }
                            layout[mark] = _this3.setChildCollapse(child, mark);
                            break;
                        case 'Ancillary':
                            if (!layout[mark]) {
                                layout[mark] = [];
                            }

                            layout[mark] = _this3.setChildCollapse(child, mark);
                            break;
                        case 'ToolDock':
                            hasToolDock = true;

                            if (!layout[mark]) {
                                layout[mark] = [];
                            }

                            _this3.toolDockFixed = child.props.fixed;
                            var childT = _this3.setChildCollapse(child, mark);
                            layout[mark] = childT;

                            break;
                        case 'AppBar':
                        case 'Content':
                        case 'Footer':
                            layout.content || (layout.content = []);
                            layout.content.push(child);
                            break;
                        case 'Page':
                            layout.page || (layout.page = []);
                            layout.page = child;
                            break;
                        case 'Navigation':
                            if (child.props.direction === 'hoz') {
                                layout.header[mark] = child;
                            } else {
                                if (!layout[mark]) {
                                    layout[mark] = [];
                                }

                                needNavigationTrigger = true;
                                _this3.navigationFixed = child.props.fixed;
                                var childN = _this3.setChildCollapse(child, mark);
                                layout[mark] = childN;
                            }
                            break;
                        default:
                            break;
                    }
                }
            });

            var headerCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'shell-header'] = true, _classnames[prefix + 'shell-fixed-header'] = fixedHeader, _classnames));

            var mainCls = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'shell-main'] = true, _classnames2));

            var pageCls = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'shell-page'] = true, _classnames3));

            var submainCls = _classnames_2_3_1_classnames_default()((_classnames4 = {}, _classnames4[prefix + 'shell-sub-main'] = true, _classnames4));

            var asideCls = _classnames_2_3_1_classnames_default()((_classnames5 = {}, _classnames5[prefix + 'shell-aside'] = true, _classnames5));

            var toolDockCls = _classnames_2_3_1_classnames_default()((_classnames6 = {}, _classnames6[prefix + 'aside-tooldock'] = true, _classnames6));

            var navigationCls = _classnames_2_3_1_classnames_default()((_classnames7 = {}, _classnames7[prefix + 'aside-navigation'] = true, _classnames7[prefix + 'shell-collapse'] = layout.Navigation && layout.Navigation.props.collapse, _classnames7));

            if (hasToolDock) {
                if (device === 'phone') {
                    needDockTrigger = true;
                }
            }

            // 如果存在垂直模式的 Navigation, 则需要在 Branding 上出现 trigger
            if (needNavigationTrigger) {
                var branding = layout.header.Branding;
                var _layout$Navigation$pr = layout.Navigation.props,
                    trigger = _layout$Navigation$pr.trigger,
                    collapse = _layout$Navigation$pr.collapse;


                if ('trigger' in layout.Navigation.props) {
                    trigger = trigger && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(trigger, {
                        onClick: _this3.toggleNavigation,
                        'aria-expanded': !collapse
                    }) || trigger;
                } else {
                    trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            key: 'nav-trigger',
                            role: 'button',
                            tabIndex: 0,
                            'aria-expanded': !collapse,
                            'aria-label': 'toggle',
                            className: 'nav-trigger',
                            onClick: _this3.toggleNavigation,
                            onKeyDown: _this3.toggleNavigation
                        },
                        collapse ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'small', type: 'toggle-right' }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'small', type: 'toggle-left' })
                    );
                }

                if (!branding) {
                    trigger && (layout.header.Branding = trigger);
                } else {
                    layout.header.Branding = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(branding, {}, [trigger, branding.props.children]);
                }
            }

            // 如果存在 toolDock, 则需要在 Action 上出现 trigger
            if (needDockTrigger) {
                var action = layout.header.Action;
                var _layout$ToolDock$prop = layout.ToolDock.props,
                    _trigger = _layout$ToolDock$prop.trigger,
                    _collapse = _layout$ToolDock$prop.collapse;


                if ('trigger' in layout.ToolDock.props) {
                    _trigger = _trigger && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(_trigger, {
                        onClick: _this3.toggleToolDock,
                        'aria-expanded': !_collapse
                    }) || _trigger;
                } else {
                    _trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            key: 'dock-trigger',
                            tabIndex: 0,
                            role: 'button',
                            'aria-expanded': !_collapse,
                            'aria-label': 'toggle',
                            className: 'dock-trigger',
                            onClick: _this3.toggleToolDock,
                            onKeyDown: _this3.toggleToolDock
                        },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'small', type: 'add' })
                    );
                }

                if (!action) {
                    layout.header.Action = _trigger;
                } else {
                    layout.header.Action = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(action, {}, [action.props.children, _trigger]);
                }
            }

            var headerDom = [],
                contentArr = [],
                innerArr = [],
                taskHeaderDom = null;

            if (layout.taskHeader) {
                var _classnames8;

                var taskHeaderCls = _classnames_2_3_1_classnames_default()((_classnames8 = {}, _classnames8[prefix + 'shell-task-header'] = true, _classnames8));

                taskHeaderDom = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'section',
                    { key: 'task-header', className: taskHeaderCls },
                    layout.taskHeader
                );
            }

            // 按照dom结构，innerArr 包括 LocalNavigation content Ancillary
            if (layout.LocalNavigation) {
                var _classnames9;

                var _layout$LocalNavigati = layout.LocalNavigation.props,
                    _trigger2 = _layout$LocalNavigati.trigger,
                    _collapse2 = _layout$LocalNavigati.collapse;


                if ('trigger' in layout.LocalNavigation.props) {
                    _trigger2 = _trigger2 && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(_trigger2, {
                        onClick: _this3.toggleLocalNavigation,
                        'aria-expanded': !_collapse2
                    }) || _trigger2;
                } else {
                    _trigger2 = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            key: 'local-nav-trigger',
                            role: 'button',
                            tabIndex: 0,
                            'aria-expanded': !_collapse2,
                            'aria-label': 'toggle',
                            className: 'local-nav-trigger aside-trigger',
                            onClick: _this3.toggleLocalNavigation,
                            onKeyDown: _this3.toggleLocalNavigation
                        },
                        _collapse2 ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'small', type: 'arrow-right' }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'small', type: 'arrow-left' })
                    );
                }

                var localNavCls = _classnames_2_3_1_classnames_default()(asideCls, (_classnames9 = {}, _classnames9[prefix + 'aside-localnavigation'] = true, _classnames9));

                innerArr.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'aside',
                    { key: 'localnavigation', className: localNavCls, ref: _this3.saveLocalNavRef },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(layout.LocalNavigation, {}, [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { key: 'wrapper', className: prefix + 'shell-content-wrapper' },
                        layout.LocalNavigation.props.children
                    ), _trigger2])
                ));
            }

            if (layout.content) {
                innerArr.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'section',
                    { key: 'submain', className: submainCls, ref: _this3.saveSubmainRef },
                    layout.content
                ));
            }

            if (layout.Ancillary) {
                var _classnames10;

                var _layout$Ancillary$pro = layout.Ancillary.props,
                    _trigger3 = _layout$Ancillary$pro.trigger,
                    _collapse3 = _layout$Ancillary$pro.collapse;


                if ('trigger' in layout.Ancillary.props) {
                    _trigger3 = _trigger3 && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(_trigger3, {
                        onClick: _this3.toggleAncillary,
                        'aria-expanded': !_collapse3
                    }) || _trigger3;
                } else {
                    _trigger3 = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            key: 'ancillary-trigger',
                            role: 'button',
                            tabIndex: 0,
                            'aria-expanded': !_collapse3,
                            'aria-label': 'toggle',
                            className: 'ancillary-trigger aside-trigger',
                            onClick: _this3.toggleAncillary,
                            onKeyDown: _this3.toggleAncillary
                        },
                        _collapse3 ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'small', type: 'arrow-left' }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'small', type: 'arrow-right' })
                    );
                }

                var ancillaryCls = _classnames_2_3_1_classnames_default()(asideCls, (_classnames10 = {}, _classnames10[prefix + 'aside-ancillary'] = true, _classnames10));

                innerArr.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'aside',
                    { key: 'ancillary', className: ancillaryCls },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(layout.Ancillary, {}, [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { key: 'wrapper', className: prefix + 'shell-content-wrapper' },
                        layout.Ancillary.props.children
                    ), _trigger3])
                ));
            }

            // 按照dom结构, arr 包括 header Navigation ToolDock 和 innerArr
            if (Object.keys(layout.header).length > 0) {
                var _dom = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'header',
                    { key: 'header', className: headerCls, ref: _this3.saveHeaderRef },
                    layout.header.Branding,
                    layout.header.Navigation,
                    layout.header.Action
                );
                if (fixedHeader && util_env.ieVersion) {
                    headerDom = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        affix,
                        { style: { zIndex: 9 } },
                        _dom
                    );
                } else {
                    headerDom = _dom;
                }
            }

            layout.Navigation && contentArr.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'aside',
                { key: 'navigation', className: navigationCls, ref: _this3.saveNavRef },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(layout.Navigation, {
                    className: _classnames_2_3_1_classnames_default()(asideCls, layout.Navigation.props.className)
                })
            ));

            // const contentArea = innerArr.length > 0
            //     ? <section key="main" className={mainCls}>{innerArr}</section>
            //     : layout.page;

            // contentArr.push(contentArea);
            contentArr = contentArr.concat(innerArr.length > 0 ? innerArr : [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'section',
                { key: 'page', ref: _this3.saveSubmainRef, className: submainCls },
                layout.page
            )]);

            layout.ToolDock && contentArr.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'aside',
                { key: 'tooldock', className: toolDockCls, ref: _this3.saveToolDockRef },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(layout.ToolDock, {
                    className: _classnames_2_3_1_classnames_default()(asideCls, layout.ToolDock.props.className),
                    key: 'tooldock'
                })
            ));

            var cls = _classnames_2_3_1_classnames_default()((_classnames11 = {}, _classnames11[prefix + 'shell'] = true, _classnames11[prefix + 'shell-' + device] = true, _classnames11[prefix + 'shell-' + type] = true, _classnames11[className] = !!className, _classnames11));

            if (componentName === 'Page') {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'section',
                    { className: pageCls },
                    children
                );
            }

            _this3.layout = layout;

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'section',
                extends_default()({ className: cls }, others),
                headerDom,
                taskHeaderDom,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'section',
                    { className: mainCls },
                    contentArr
                )
            );
        };
    }, _temp);
    Shell.displayName = 'Shell';


    return Object(react_lifecycles_compat_es["polyfill"])(Shell);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/shell/base.js










function shell_base_Base(props) {
    var _class, _temp;

    var componentName = props.componentName;
    var Shell = (_temp = _class = function (_Component) {
        inherits_default()(Shell, _Component);

        function Shell() {
            classCallCheck_default()(this, Shell);

            return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
        }

        Shell.prototype.getChildContext = function getChildContext() {
            var collapse = this.props.collapse;


            return {
                isCollapse: collapse
            };
        };

        Shell.prototype.render = function render() {
            var _classnames;

            var _props = this.props,
                prefix = _props.prefix,
                className = _props.className,
                miniable = _props.miniable,
                device = _props.device,
                direction = _props.direction,
                children = _props.children,
                collapse = _props.collapse,
                triggerProps = _props.triggerProps,
                onCollapseChange = _props.onCollapseChange,
                component = _props.component,
                align = _props.align,
                fixed = _props.fixed,
                others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'miniable', 'device', 'direction', 'children', 'collapse', 'triggerProps', 'onCollapseChange', 'component', 'align', 'fixed']);

            var Tag = component;

            var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'shell-' + componentName.toLowerCase()] = true, _classnames[prefix + 'shell-collapse'] = !!collapse, _classnames[prefix + 'shell-mini'] = miniable, _classnames[prefix + 'shell-nav-' + align] = componentName === 'Navigation' && direction === 'hoz' && align, _classnames[className] = !!className, _classnames));

            var newChildren = children;
            if (componentName === 'Content') {
                newChildren = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'shell-content-inner' },
                    children
                );
            }

            if (componentName === 'Page') {
                return children;
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                Tag,
                extends_default()({ className: cls }, others),
                newChildren
            );
        };

        return Shell;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), _class.displayName = componentName, _class._typeMark = 'Shell_' + componentName, _class.propTypes = extends_default()({}, config_provider.propTypes, {
        prefix: _prop_types_15_8_1_prop_types_default.a.string,
        collapse: _prop_types_15_8_1_prop_types_default.a.bool,
        miniable: _prop_types_15_8_1_prop_types_default.a.bool,
        component: _prop_types_15_8_1_prop_types_default.a.string,
        trigger: _prop_types_15_8_1_prop_types_default.a.node,
        triggerProps: _prop_types_15_8_1_prop_types_default.a.object,
        direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
        align: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right', 'center']),
        /**
         * 弹层显示或隐藏时触发的回调函数
         * @param {Boolean} collapse 弹层是否显示
         */
        onCollapseChange: _prop_types_15_8_1_prop_types_default.a.func,
        /**
         * 是否固定，仅对 Shell.Navigation Shell.ToolDock 生效，且需要在在 Shell fixedHeader时生效
         */
        fixed: _prop_types_15_8_1_prop_types_default.a.bool
    }), _class.defaultProps = {
        prefix: 'next-',
        component: 'div',
        onCollapseChange: function onCollapseChange() {},
        fixed: false
    }, _class.childContextTypes = {
        isCollapse: _prop_types_15_8_1_prop_types_default.a.bool
    }, _temp);
    Shell.displayName = 'Shell';


    return config_provider.config(Shell);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/shell/index.js






var shell_Shell = ShellBase({
    componentName: 'Shell'
});

['Branding', 'Navigation', 'Action', 'MultiTask', 'LocalNavigation', 'AppBar', 'Content', 'Footer', 'Ancillary', 'ToolDock', 'ToolDockItem'].forEach(function (key) {
    shell_Shell[key] = shell_base_Base({
        componentName: key
    });
});

shell_Shell.Page = config_provider.config(ShellBase({
    componentName: 'Page'
}));

/* harmony default export */ var shell = (config_provider.config(shell_Shell, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('Component' in props) {
            deprecated('Component', 'component', 'Shell');

            var _props = props,
                Component = _props.Component,
                component = _props.component,
                others = objectWithoutProperties_default()(_props, ['Component', 'component']);

            if ('component' in props) {
                props = extends_default()({ component: component }, others);
            } else {
                props = extends_default()({ component: Component }, others);
            }
        }
        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slick/mixins/trackHelper.js



var checkSpecKeys = function checkSpecKeys(spec, keysArray) {
    return keysArray.reduce(function (value, key) {
        return value && spec.hasOwnProperty(key);
    }, true) ? null : console.error('Keys Missing', spec); /*eslint no-console:0*/
};

var trackHelper_getTrackCSS = function getTrackCSS(spec) {
    checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth']);

    var trackWidth = void 0;
    var trackHeight = void 0;

    var trackChildren = spec.slideCount + 2 * spec.slidesToShow;

    if (!spec.vertical) {
        if (spec.variableWidth) {
            trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
        } else if (spec.centerMode) {
            trackWidth = (spec.slideCount + 2 * (spec.slidesToShow + 1)) * spec.slideWidth;
        } else {
            trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
        }
    } else {
        trackHeight = trackChildren * spec.slideHeight;
    }

    var style = {
        opacity: 1
    };

    var transform = {
        WebkitTransform: !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)',
        transform: !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)',
        transition: '',
        WebkitTransition: '',
        msTransform: !spec.vertical ? 'translateX(' + spec.left + 'px)' : 'translateY(' + spec.left + 'px)'
    };

    if (trackWidth) {
        style = extends_default()({}, style, { width: trackWidth });
    }

    if (trackHeight) {
        style = extends_default()({}, style, { height: trackHeight });
    }

    if (spec.animation !== 'fade') {
        style = extends_default()({}, style, transform);
    }

    return style;
};

var getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
    checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth', 'speed', 'cssEase']);

    var style = trackHelper_getTrackCSS(spec);
    // useCSS is true by default so it can be undefined
    style.WebkitTransition = '-webkit-transform ' + spec.speed + 'ms ' + spec.cssEase;
    style.transition = 'transform ' + spec.speed + 'ms ' + spec.cssEase;
    return style;
};

var trackHelper_getTrackLeft = function getTrackLeft(spec) {
    checkSpecKeys(spec, ['slideIndex', 'trackRef', 'infinite', 'centerMode', 'slideCount', 'slidesToShow', 'slidesToScroll', 'slideWidth', 'listWidth', 'variableWidth', 'slideHeight']);

    var slideOffset = 0;
    var targetLeft = void 0;
    var targetSlide = void 0;
    var verticalOffset = 0;

    if (spec.animation === 'fade') {
        return 0;
    }

    if (spec.infinite) {
        if (spec.slideCount > spec.slidesToShow) {
            slideOffset = spec.slideWidth * spec.slidesToShow * -1;
            verticalOffset = spec.slideHeight * spec.slidesToShow * -1;
        }
        if (spec.slideCount % spec.slidesToScroll !== 0) {
            var condition = spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow;

            if (spec.rtl) {
                var slideIndex = spec.slideIndex >= spec.slideCount ? spec.slideCount - spec.slideIndex : spec.slideIndex;
                condition = slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow;
            }
            if (condition) {
                if (spec.slideIndex > spec.slideCount) {
                    slideOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideWidth * -1;
                    verticalOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideHeight * -1;
                } else {
                    slideOffset = spec.slideCount % spec.slidesToScroll * spec.slideWidth * -1;
                    verticalOffset = spec.slideCount % spec.slidesToScroll * spec.slideHeight * -1;
                }
            }
        }
    } else {
        /* eslint-disable no-lonely-if */
        if (spec.slideCount % spec.slidesToScroll !== 0) {
            if (spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow) {
                var slidesToOffset = spec.slidesToShow - spec.slideCount % spec.slidesToScroll;
                slideOffset = slidesToOffset * spec.slideWidth;
            }
        }
    }

    if (spec.centerMode) {
        if (spec.infinite) {
            slideOffset += spec.slideWidth * Math.floor(spec.slidesToShow / 2);
        } else {
            slideOffset = spec.slideWidth * Math.floor(spec.slidesToShow / 2);
        }
    }

    if (!spec.vertical) {
        targetLeft = spec.slideIndex * spec.slideWidth * -1 + slideOffset;
    } else {
        targetLeft = spec.slideIndex * spec.slideHeight * -1 + verticalOffset;
    }

    if (spec.variableWidth === true) {
        var targetSlideIndex = void 0;
        if (spec.slideCount <= spec.slidesToShow || spec.infinite === false) {
            targetSlide = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(spec.trackRef).childNodes[spec.slideIndex];
        } else {
            targetSlideIndex = spec.slideIndex + spec.slidesToShow;
            targetSlide = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(spec.trackRef).childNodes[targetSlideIndex];
        }
        targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
        if (spec.centerMode === true) {
            if (spec.infinite === false) {
                targetSlide = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(spec.trackRef).children[spec.slideIndex];
            } else {
                targetSlide = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(spec.trackRef).children[spec.slideIndex + spec.slidesToShow + 1];
            }

            if (targetSlide) {
                targetLeft = targetSlide.offsetLeft * -1 + (spec.listWidth - targetSlide.offsetWidth) / 2;
            }
        }
    }

    return targetLeft;
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slick/mixins/event-handlers.js




/* istanbul ignore next */
var EventHandlers = {
    // Event handler for previous and next
    changeSlide: function changeSlide(options) {
        var slideOffset = void 0,
            targetSlide = void 0;
        var unevenOffset = this.state.slideCount % this.props.slidesToScroll !== 0;
        var indexOffset = unevenOffset ? 0 : (this.state.slideCount - this.state.currentSlide) % this.props.slidesToScroll;

        if (options.message === 'previous') {
            slideOffset = indexOffset === 0 ? this.props.slidesToScroll : this.props.slidesToShow - indexOffset;
            targetSlide = this.state.currentSlide - slideOffset;
        } else if (options.message === 'next') {
            slideOffset = indexOffset === 0 ? this.props.slidesToScroll : indexOffset;
            targetSlide = this.state.currentSlide + slideOffset;
        } else if (options.message === 'dots' || options.message === 'children') {
            // Click on dots
            targetSlide = options.index * options.slidesToScroll;
            if (targetSlide === options.currentSlide) {
                return;
            }
        } else if (options.message === 'index') {
            targetSlide = options.index;
            if (targetSlide === options.currentSlide) {
                return;
            }
        }
        this.slideHandler(targetSlide);
    },


    // Accessiblity handler for previous and next
    keyHandler: function keyHandler(e) {
        //Dont slide if the cursor is inside the form fields and arrow keys are pressed
        if (!e.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
            if (e.keyCode === 37 && this.props.accessibility === true) {
                this.changeSlide({
                    message: this.props.rtl === true ? 'next' : 'previous'
                });
            } else if (e.keyCode === 39 && this.props.accessibility === true) {
                this.changeSlide({
                    message: this.props.rtl === true ? 'previous' : 'next'
                });
            }
        }
    },


    // Focus on selecting a slide (click handler on track)
    selectHandler: function selectHandler(options) {
        this.changeSlide(options);
    },
    swipeStart: function swipeStart(e) {
        if (this.props.swipe === false || 'ontouchend' in document && this.props.swipe === false) {
            return;
        } else if (this.props.draggable === false && e.type.indexOf('mouse') !== -1) {
            return;
        }
        var posX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;
        var posY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;
        this.setState({
            dragging: true,
            touchObject: {
                startX: posX,
                startY: posY,
                curX: posX,
                curY: posY
            }
        });
    },
    swipeMove: function swipeMove(e) {
        if (!this.state.dragging) {
            return;
        }
        if (this.state.animating) {
            return;
        }
        var touchObject = this.state.touchObject;

        var curLeft = trackHelper_getTrackLeft(extends_default()({
            slideIndex: this.state.currentSlide,
            trackRef: this.refs.track
        }, this.props, this.state));

        touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
        touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
        touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));

        var positionOffset = (this.props.rtl === false ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);

        if (this.props.verticalSwiping === true) {
            touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));
            positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;
        }

        var currentSlide = this.state.currentSlide;
        var dotCount = Math.ceil(this.state.slideCount / this.props.slidesToScroll);
        var swipeDirection = this.swipeDirection(this.state.touchObject);
        var touchSwipeLength = touchObject.swipeLength;

        if (this.props.infinite === false) {
            if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left') {
                touchSwipeLength = touchObject.swipeLength * this.props.edgeFriction;

                if (this.state.edgeDragged === false && this.props.edgeEvent) {
                    this.props.edgeEvent(swipeDirection);
                    this.setState({ edgeDragged: true });
                }
            }
        }

        if (this.state.swiped === false && this.props.swipeEvent) {
            this.props.swipeEvent(swipeDirection);
            this.setState({ swiped: true });
        }

        var swipeLeft = curLeft + touchSwipeLength * positionOffset;
        this.setState({
            touchObject: touchObject,
            swipeLeft: swipeLeft,
            trackStyle: trackHelper_getTrackCSS(extends_default()({
                left: swipeLeft
            }, this.props, this.state))
        });

        if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
            return;
        }
        if (touchObject.swipeLength > 4) {
            e.preventDefault();
        }
    },
    getNavigableIndexes: function getNavigableIndexes() {
        var max = void 0;
        var breakPoint = 0;
        var counter = 0;
        var indexes = [];

        if (!this.props.infinite) {
            max = this.state.slideCount;
        } else {
            breakPoint = this.props.slidesToShow * -1;
            counter = this.props.slidesToShow * -1;
            max = this.state.slideCount * 2;
        }

        while (breakPoint < max) {
            indexes.push(breakPoint);
            breakPoint = counter + this.props.slidesToScroll;

            counter += this.props.slidesToScroll <= this.props.slidesToShow ? this.props.slidesToScroll : this.props.slidesToShow;
        }

        return indexes;
    },
    checkNavigable: function checkNavigable(index) {
        var navigables = this.getNavigableIndexes();
        var prevNavigable = 0;

        if (index > navigables[navigables.length - 1]) {
            index = navigables[navigables.length - 1];
        } else {
            for (var n in navigables) {
                if (index < navigables[n]) {
                    index = prevNavigable;
                    break;
                }

                prevNavigable = navigables[n];
            }
        }

        return index;
    },
    getSlideCount: function getSlideCount() {
        var _this = this;

        var centerOffset = this.props.centerMode ? this.state.slideWidth * Math.floor(this.props.slidesToShow / 2) : 0;
        if (this.props.swipeToSlide) {
            var swipedSlide = void 0;
            var slickList = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.list);

            var slides = slickList.querySelectorAll(this.props.prefix + 'slick-slide');

            Array.from(slides).every(function (slide) {
                if (!_this.props.vertical) {
                    if (slide.offsetLeft - centerOffset + (_this.getWidth(slide) || 0) / 2 > _this.state.swipeLeft * -1) {
                        swipedSlide = slide;
                        return false;
                    }
                } else if (slide.offsetTop + (_this.getHeight(slide) || 0) / 2 > _this.state.swipeLeft * -1) {
                    swipedSlide = slide;
                    return false;
                }

                return true;
            });
            var slidesTraversed = Math.abs(swipedSlide.dataset.index - this.state.currentSlide) || 1;
            return slidesTraversed;
        } else {
            return this.props.slidesToScroll;
        }
    },
    swipeEnd: function swipeEnd(e) {
        if (!this.state.dragging) {
            if (this.props.swipe) {
                e.preventDefault();
            }
            return;
        }
        var touchObject = this.state.touchObject;
        var minSwipe = this.state.listWidth / this.props.touchThreshold;
        var swipeDirection = this.swipeDirection(touchObject);

        if (this.props.verticalSwiping) {
            minSwipe = this.state.listHeight / this.props.touchThreshold;
        }

        // reset the state of touch related state variables.
        this.setState({
            dragging: false,
            edgeDragged: false,
            swiped: false,
            swipeLeft: null,
            touchObject: {}
        });

        if (!touchObject.swipeLength) {
            return;
        }

        if (touchObject.swipeLength > minSwipe) {
            e.preventDefault();

            var slideCount = void 0;
            var newSlide = void 0;

            switch (swipeDirection) {
                case 'left':
                case 'down':
                    newSlide = this.state.currentSlide + this.getSlideCount();
                    slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;
                    this.setState({ currentDirection: 0 });
                    break;
                case 'right':
                case 'up':
                    newSlide = this.state.currentSlide - this.getSlideCount();
                    slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;
                    this.setState({ currentDirection: 1 });
                    break;
                default:
                    slideCount = this.state.currentSlide;
            }
            this.slideHandler(slideCount);
        } else {
            // Adjust the track back to it's original position.
            var currentLeft = trackHelper_getTrackLeft(extends_default()({
                slideIndex: this.state.currentSlide,
                trackRef: this.track
            }, this.props, this.state));

            this.setState({
                trackStyle: getTrackAnimateCSS(extends_default()({
                    left: currentLeft
                }, this.props, this.state))
            });
        }
    },
    onInnerSliderEnter: function onInnerSliderEnter() {
        if (this.props.autoplay && this.props.pauseOnHover) {
            this.pause();
        }
    },
    onInnerSliderLeave: function onInnerSliderLeave() {
        if (this.props.autoplay && this.props.pauseOnHover) {
            this.autoPlay();
        }
    }
};

/* harmony default export */ var event_handlers = (EventHandlers);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slick/mixins/helpers.js





var helpers = {
    initialize: function initialize(props) {
        var _this = this;

        var slickList = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.list);
        var slideCount = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.count(props.children);
        var listWidth = this.getWidth(slickList) || 0;
        var trackWidth = this.getWidth(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.track)) || 0;
        var slideWidth = void 0;

        if (!props.vertical) {
            var centerPaddingAdj = props.centerMode && parseInt(props.centerPadding) * 2;
            slideWidth = (listWidth - centerPaddingAdj) / props.slidesToShow;
        } else {
            slideWidth = listWidth;
        }

        var slideHeight = this.getHeight(slickList.querySelector('[data-index="0"]')) || 0;
        var listHeight = slideHeight * props.slidesToShow;

        var slidesToShow = props.slidesToShow || 1;

        var activeIndex = 'activeIndex' in props ? props.activeIndex : props.defaultActiveIndex;
        var currentSlide = props.rtl ? slideCount - 1 - (slidesToShow - 1) - activeIndex : activeIndex;

        this.setState({
            slideCount: slideCount,
            slideWidth: slideWidth,
            listWidth: listWidth,
            trackWidth: trackWidth,
            currentSlide: currentSlide,
            slideHeight: slideHeight,
            listHeight: listHeight
        }, function () {
            var targetLeft = trackHelper_getTrackLeft(extends_default()({
                slideIndex: _this.state.currentSlide,
                trackRef: _this.track
            }, props, _this.state));
            // getCSS function needs previously set state
            var trackStyle = trackHelper_getTrackCSS(extends_default()({
                left: targetLeft
            }, props, _this.state));

            _this.setState({ trackStyle: trackStyle });

            _this.autoPlay(); // once we're set up, trigger the initial autoplay.
        });
    },
    update: function update(props) {
        this.initialize(props);
    },
    getWidth: function getWidth(elem) {
        if ('clientWidth' in elem) {
            return elem.clientWidth;
        }
        return elem && elem.getBoundingClientRect().width;
    },
    getHeight: function getHeight(elem) {
        if ('clientHeight' in elem) {
            return elem.clientHeight;
        }
        return elem && elem.getBoundingClientRect().height;
    },
    adaptHeight: function adaptHeight() {
        if (this.props.adaptiveHeight) {
            var selector = '[data-index="' + this.state.currentSlide + '"]';
            if (this.list) {
                var slickList = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.list);
                var listHeight = slickList.querySelector(selector).offsetHeight;
                slickList.style.height = listHeight + 'px';
            }
        }
    },
    canGoNext: function canGoNext(opts) {
        var canGo = true;
        if (!opts.infinite) {
            if (opts.centerMode) {
                if (opts.currentSlide >= opts.slideCount - 1) {
                    canGo = false;
                }
            } else if (opts.slideCount <= opts.slidesToShow || opts.currentSlide >= opts.slideCount - opts.slidesToShow) {
                // check if all slides are shown in slider
                canGo = false;
            }
        }
        return canGo;
    },
    slideHandler: function slideHandler(index) {
        var _this2 = this;

        var rtl = this.props.rtl;

        // Functionality of animateSlide and postSlide is merged into this function

        var targetSlide = void 0,
            currentSlide = void 0;
        var callback = void 0;

        if (this.props.waitForAnimate && this.state.animating) {
            return;
        }

        if (this.props.animation === 'fade') {
            currentSlide = this.state.currentSlide;

            // don't change slide if it's not infinite and current slide is the first or last slide'
            if (this.props.infinite === false && (index < 0 || index >= this.state.slideCount)) {
                return;
            }

            //  Shifting targetSlide back into the range
            if (index < 0) {
                targetSlide = index + this.state.slideCount;
            } else if (index >= this.state.slideCount) {
                targetSlide = index - this.state.slideCount;
            } else {
                targetSlide = index;
            }

            if (this.props.lazyLoad && this.state.lazyLoadedList.indexOf(targetSlide) < 0) {
                this.setState({
                    lazyLoadedList: this.state.lazyLoadedList.concat(targetSlide)
                });
            }

            callback = function callback() {
                _this2.setState({
                    animating: false
                });
                _this2.props.onChange(targetSlide);
                delete _this2.animationEndCallback;
            };

            this.props.onBeforeChange(this.state.currentSlide, targetSlide);

            this.setState({
                animating: true,
                currentSlide: targetSlide
            }, function () {
                this.animationEndCallback = setTimeout(callback, this.props.speed + 20);
            });

            this.autoPlay();
            return;
        }

        targetSlide = index;

        if (rtl) {
            if (targetSlide < 0) {
                if (this.props.infinite === false) {
                    currentSlide = 0;
                } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                    if (targetSlide + this.props.slidesToScroll <= 0) {
                        currentSlide = this.state.slideCount + targetSlide;
                        targetSlide = this.state.slideCount - this.props.slidesToScroll;
                    } else {
                        currentSlide = targetSlide = 0;
                    }
                } else {
                    // this.state.slideCount % this.props.slidesToScroll
                    currentSlide = this.state.slideCount + targetSlide;
                }
            } else if (targetSlide >= this.state.slideCount) {
                if (this.props.infinite === false) {
                    currentSlide = this.state.slideCount - this.props.slidesToShow;
                } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                    currentSlide = 0;
                } else {
                    currentSlide = targetSlide - this.state.slideCount;
                }
            } else {
                currentSlide = targetSlide;
            }
        } else if (targetSlide < 0) {
            if (this.props.infinite === false) {
                currentSlide = 0;
            } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                currentSlide = this.state.slideCount - this.state.slideCount % this.props.slidesToScroll;
            } else {
                currentSlide = this.state.slideCount + targetSlide;
            }
        } else if (targetSlide >= this.state.slideCount) {
            if (this.props.infinite === false) {
                currentSlide = this.state.slideCount - this.props.slidesToShow;
            } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                currentSlide = 0;
            } else {
                currentSlide = targetSlide - this.state.slideCount;
            }
        } else {
            currentSlide = targetSlide;
        }

        var targetLeft = trackHelper_getTrackLeft(extends_default()({
            slideIndex: targetSlide,
            trackRef: this.track
        }, this.props, this.state));

        var currentLeft = trackHelper_getTrackLeft(extends_default()({
            slideIndex: currentSlide,
            trackRef: this.track
        }, this.props, this.state));

        if (this.props.infinite === false) {
            targetLeft = currentLeft;
        }

        if (this.props.lazyLoad) {
            var loaded = true;
            var slidesToLoad = [];
            var slidesLen = this.state.slideCount;

            var sliderIndex = targetSlide < 0 ? slidesLen + targetSlide : currentSlide;

            for (var i = sliderIndex; i < sliderIndex + this.props.slidesToShow; i++) {
                var k = i;
                if (rtl) {
                    k = i >= slidesLen ? slidesLen * 2 - i - 1 : slidesLen - i - 1;
                }

                var pre = k - 1 < 0 ? slidesLen - 1 : k - 1;
                var next = k + 1 >= slidesLen ? 0 : k + 1;

                this.state.lazyLoadedList.indexOf(k) < 0 && slidesToLoad.push(k);
                this.state.lazyLoadedList.indexOf(pre) < 0 && slidesToLoad.push(pre);
                this.state.lazyLoadedList.indexOf(next) < 0 && slidesToLoad.push(next);
            }

            slidesToLoad.forEach(function (i) {
                if (_this2.state.lazyLoadedList.indexOf(i) < 0) {
                    loaded = false;
                }
            });

            if (!loaded) {
                this.setState({
                    lazyLoadedList: this.state.lazyLoadedList.concat(slidesToLoad)
                });
            }
        }

        this.props.onBeforeChange(this.state.currentSlide, currentSlide);

        // Slide Transition happens here.
        // animated transition happens to target Slide and
        // non - animated transition happens to current Slide
        // If CSS transitions are false, directly go the current slide.
        /* istanbul ignore if */
        if (this.props.useCSS === false) {
            this.setState({
                currentSlide: currentSlide,
                trackStyle: trackHelper_getTrackCSS(extends_default()({
                    left: currentLeft
                }, this.props, this.state))
            }, function () {
                _this2.props.onChange(currentSlide);
            });
        } else {
            var nextStateChanges = {
                animating: false,
                currentSlide: currentSlide,
                trackStyle: trackHelper_getTrackCSS(extends_default()({
                    left: currentLeft
                }, this.props, this.state)),
                swipeLeft: null
            };

            callback = function callback() {
                _this2.setState(nextStateChanges);
                _this2.props.onChange(currentSlide);
                delete _this2.animationEndCallback;
            };

            this.setState({
                animating: true,
                currentSlide: currentSlide,
                trackStyle: getTrackAnimateCSS(extends_default()({
                    left: targetLeft
                }, this.props, this.state))
            }, function () {
                this.animationEndCallback = setTimeout(callback, this.props.speed + 20);
            });
        }

        this.autoPlay();
    },


    // 鼠标悬浮在 arrow 上时作出动画反馈
    arrowHoverHandler: function arrowHoverHandler(msg) {
        var offset = 30; // slide 的位置偏移量
        var targetLeft = trackHelper_getTrackLeft(extends_default()({
            slideIndex: this.state.currentSlide,
            trackRef: this.track
        }, this.props, this.state));

        var left = void 0;
        /* istanbul ignore next */
        if (msg === 'next') {
            left = targetLeft - offset;
        } else if (msg === 'prev') {
            left = targetLeft + offset;
        } else {
            left = targetLeft;
        }

        this.setState({
            trackStyle: getTrackAnimateCSS(extends_default()({
                left: left
            }, this.props, this.state))
        });
    },
    swipeDirection: function swipeDirection(touchObject) {
        /* istanbul ignore next */
        var swipeAngle = void 0;
        /* istanbul ignore next */
        var xDist = touchObject.startX - touchObject.curX;
        /* istanbul ignore next */
        var yDist = touchObject.startY - touchObject.curY;
        /* istanbul ignore next */
        var r = Math.atan2(yDist, xDist);
        /* istanbul ignore next */
        swipeAngle = Math.round(r * 180 / Math.PI);
        /* istanbul ignore next */
        if (swipeAngle < 0) {
            swipeAngle = 360 - Math.abs(swipeAngle);
        }
        /* istanbul ignore next */
        if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
            return this.props.rtl === false ? 'left' : 'right';
        }
        /* istanbul ignore next */
        if (swipeAngle >= 135 && swipeAngle <= 225) {
            return this.props.rtl === false ? 'right' : 'left';
        }
        /* istanbul ignore next */
        if (this.props.verticalSwiping === true) {
            if (swipeAngle >= 35 && swipeAngle <= 135) {
                return 'down';
            } else {
                return 'up';
            }
        }

        /* istanbul ignore next */
        return 'vertical';
    },
    play: function play() {
        var nextIndex = void 0;
        if (!this.hasMounted) {
            /* istanbul ignore next */
            return false;
        }
        if (this.props.rtl) {
            nextIndex = this.state.currentSlide - this.props.slidesToScroll;
        } else if (this.canGoNext(extends_default()({}, this.props, this.state))) {
            nextIndex = this.state.currentSlide + this.props.slidesToScroll;
        } else {
            return false;
        }
        this.slideHandler(nextIndex);
    },
    autoPlay: function autoPlay() {
        if (this.state.autoPlayTimer) {
            clearTimeout(this.state.autoPlayTimer);
        }
        if (this.props.autoplay) {
            this.setState({
                autoPlayTimer: setTimeout(this.play.bind(this), this.props.autoplaySpeed)
            });
        }
    },
    pause: function pause() {
        /* istanbul ignore next */
        if (this.state.autoPlayTimer) {
            clearTimeout(this.state.autoPlayTimer);
            this.setState({
                autoPlayTimer: null
            });
        }
    }
};

/* harmony default export */ var mixins_helpers = (helpers);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slick/arrow.js





var arrow__class, arrow__temp;







/**
 * slider arrow
 * 左右控制箭头
 */

var arrow_noop = func.noop;
var arrow_Arrow = (arrow__temp = arrow__class = function (_Component) {
    inherits_default()(Arrow, _Component);

    function Arrow() {
        classCallCheck_default()(this, Arrow);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Arrow.isDisabled = function isDisabled(props) {
        var infinite = props.infinite,
            type = props.type,
            centerMode = props.centerMode,
            currentSlide = props.currentSlide,
            slideCount = props.slideCount,
            slidesToShow = props.slidesToShow;


        if (infinite) {
            return false;
        }

        // 下一个 index 大于总数？？
        // if (slideCount <= slidesToShow) {
        //     return true;
        // }

        // 向前箭头：当前是第 0 个
        if (type === 'prev') {
            return currentSlide <= 0;
        }

        if (centerMode && currentSlide >= slideCount - 1) {
            // 向后箭头：居中模式，当前 index 大于最大 index
            return true;
        } else if (currentSlide >= slideCount - slidesToShow) {
            // 向后箭头：普通模式，当前 index 大于 总数 - 下一个 index ？？？
            return true;
        }

        return false;
    };

    Arrow.prototype.handleClick = function handleClick(options, e) {
        e && e.preventDefault();

        // TODO hack
        if (options.message === 'prev') {
            options.message = 'previous';
        }

        this.props.clickHandler(options, e);
    };

    Arrow.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            type = _props.type,
            arrowSize = _props.arrowSize,
            arrowPosition = _props.arrowPosition,
            arrowDirection = _props.arrowDirection,
            onMouseEnter = _props.onMouseEnter,
            onMouseLeave = _props.onMouseLeave,
            children = _props.children;


        var others = util_obj.pickOthers(Arrow.propTypes, this.props);
        var iconType = Arrow.ARROW_ICON_TYPES[arrowDirection][type];
        var disabled = Arrow.isDisabled(this.props);

        var arrowClazz = _classnames_2_3_1_classnames_default()([prefix + 'slick-arrow', prefix + 'slick-' + type, arrowPosition, arrowSize, arrowDirection], { disabled: disabled });

        var arrowProps = extends_default()({}, others, {
            key: type,
            'data-role': 'none',
            className: arrowClazz,
            style: { display: 'block' },
            onClick: disabled ? null : this.handleClick.bind(this, { message: type }),
            onMouseEnter: disabled ? null : onMouseEnter,
            onMouseLeave: disabled ? null : onMouseLeave
        });

        if (children) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.only(children), arrowProps);
        } else {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                extends_default()({ type: 'button', role: 'button' }, arrowProps),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: iconType })
            );
        }
    };

    return Arrow;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), arrow__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['prev', 'next']).isRequired,
    centerMode: _prop_types_15_8_1_prop_types_default.a.bool,
    currentSlide: _prop_types_15_8_1_prop_types_default.a.number,
    infinite: _prop_types_15_8_1_prop_types_default.a.bool,
    clickHandler: _prop_types_15_8_1_prop_types_default.a.func,
    slideCount: _prop_types_15_8_1_prop_types_default.a.number,
    slidesToShow: _prop_types_15_8_1_prop_types_default.a.number,
    arrow: _prop_types_15_8_1_prop_types_default.a.element,
    arrowSize: _prop_types_15_8_1_prop_types_default.a.string,
    arrowPosition: _prop_types_15_8_1_prop_types_default.a.string,
    arrowDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    onMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    children: _prop_types_15_8_1_prop_types_default.a.node
}, arrow__class.defaultProps = {
    onMouseEnter: arrow_noop,
    onMouseLeave: arrow_noop
}, arrow__class.ARROW_ICON_TYPES = {
    hoz: { prev: 'arrow-left', next: 'arrow-right' },
    ver: { prev: 'arrow-up', next: 'arrow-down' }
}, arrow__temp);
arrow_Arrow.displayName = 'Arrow';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slick/track.js





var track__class, track__temp;






/**
 * Slider Track
 * 内容轨道
 */

var track_getSlideClasses = function getSlideClasses(specProps) {
    var _classNames;

    var prefix = specProps.prefix;
    var slickActive = void 0,
        slickCenter = void 0;
    var centerOffset = void 0,
        index = void 0;

    if (specProps.rtl) {
        index = specProps.slideCount - 1 - specProps.activeIndex;
    } else {
        index = specProps.activeIndex;
    }

    var slickCloned = index < 0 || index >= specProps.slideCount;
    if (specProps.centerMode) {
        centerOffset = Math.floor(specProps.slidesToShow / 2);
        slickCenter = (index - specProps.currentSlide) % specProps.slideCount === 0;
        if (index > specProps.currentSlide - centerOffset - 1 && index <= specProps.currentSlide + centerOffset) {
            slickActive = true;
        }
    } else {
        slickActive = specProps.currentSlide <= index && index < specProps.currentSlide + specProps.slidesToShow;
    }

    return _classnames_2_3_1_classnames_default()(prefix + 'slick-slide', (_classNames = {}, _classNames[prefix + 'slick-active'] = slickActive, _classNames[prefix + 'slick-center'] = slickCenter, _classNames[prefix + 'slick-cloned'] = slickCloned, _classNames));
};

var getSlideStyle = function getSlideStyle(specProps) {
    var style = {};

    if (specProps.variableWidth === undefined || specProps.variableWidth === false) {
        style.width = specProps.slideWidth;
    }

    if (specProps.animation === 'fade') {
        style.position = 'relative';

        style.opacity = specProps.currentSlide === specProps.activeIndex ? 1 : 0;
        style.visibility = specProps.currentSlide >= specProps.activeIndex ? 'visible' : 'hidden';
        style.transition = 'opacity ' + specProps.speed + 'ms ' + specProps.cssEase;
        style.WebkitTransition = 'opacity ' + specProps.speed + 'ms ' + specProps.cssEase;

        if (specProps.vertical) {
            style.top = -specProps.activeIndex * specProps.slideHeight;
        } else {
            style.left = -specProps.activeIndex * specProps.slideWidth;
        }
    }

    if (specProps.vertical) {
        style.width = '100%';
    }

    return style;
};

var getKey = function getKey(child, fallbackKey) {
    // key could be a zero
    return child.key === null || child.key === undefined ? fallbackKey : child.key;
};

var track_renderSlides = function renderSlides(specProps) {
    var key = void 0;
    var slides = [];
    var preCloneSlides = [];
    var postCloneSlides = [];
    var count = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.count(specProps.children);
    var child = void 0;

    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(specProps.children, function (elem, index) {
        var childOnClickOptions = {
            message: 'children',
            index: index,
            slidesToScroll: specProps.slidesToScroll,
            currentSlide: specProps.currentSlide
        };

        if (!specProps.lazyLoad | (specProps.lazyLoad && specProps.lazyLoadedList.indexOf(index) >= 0)) {
            child = elem;
        } else {
            child = elem.key ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { key: elem.key }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', null);
        }
        var childStyle = getSlideStyle(extends_default()({}, specProps, { activeIndex: index }));
        var slickClasses = track_getSlideClasses(extends_default()({
            activeIndex: index
        }, specProps));
        var cssClasses = void 0;

        if (child.props.className) {
            cssClasses = _classnames_2_3_1_classnames_default()(slickClasses, child.props.className);
        } else {
            cssClasses = slickClasses;
        }

        var onClick = function onClick(e) {
            // only child === elem, it will has .props.onClick;
            child.props && child.props.onClick && elem.props.onClick(e);
            if (specProps.focusOnSelect) {
                specProps.focusOnSelect(childOnClickOptions);
            }
        };

        slides.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
            key: 'original' + getKey(child, index),
            'data-index': index,
            className: cssClasses,
            tabIndex: '-1',
            'aria-posinset': index,
            'aria-setsize': count,
            role: 'listitem',
            dir: specProps.rtl ? 'rtl' : 'ltr',
            // server-side render depend on elements of their own style
            style: !util_dom.hasDOM ? extends_default()({ outline: 'none' }, childStyle, child.props.style) : extends_default()({ outline: 'none' }, child.props.style, childStyle),
            onClick: onClick
        }));

        // variableWidth doesn't wrap properly.
        if (specProps.infinite && specProps.animation !== 'fade') {
            var infiniteCount = specProps.variableWidth ? specProps.slidesToShow + 1 : specProps.slidesToShow;

            if (index >= count - infiniteCount) {
                key = -(count - index);
                preCloneSlides.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                    key: 'precloned' + getKey(child, key),
                    'data-index': key,
                    className: cssClasses,
                    style: extends_default()({}, child.props.style, childStyle)
                }));
            }

            if (index < infiniteCount) {
                key = count + index;
                postCloneSlides.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                    key: 'postcloned' + getKey(child, key),
                    'data-index': key,
                    className: cssClasses,
                    style: extends_default()({}, child.props.style, childStyle)
                }));
            }
        }
    });
    // To support server-side rendering
    if (!util_dom.hasDOM) {
        return slides.slice(specProps.currentSlide, specProps.currentSlide + specProps.slidesToShow);
    }
    if (specProps.rtl) {
        return preCloneSlides.concat(slides, postCloneSlides).reverse();
    } else {
        return preCloneSlides.concat(slides, postCloneSlides);
    }
};

var slick_track_Track = (track__temp = track__class = function (_Component) {
    inherits_default()(Track, _Component);

    function Track() {
        classCallCheck_default()(this, Track);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Track.prototype.render = function render() {
        var slides = track_renderSlides(this.props);
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                role: 'list',
                className: this.props.prefix + 'slick-track',
                style: this.props.trackStyle
            },
            slides
        );
    };

    return Track;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), track__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    trackStyle: _prop_types_15_8_1_prop_types_default.a.object
}, track__class.defaultProps = {
    prefix: 'next-'
}, track__temp);
slick_track_Track.displayName = 'Track';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slick/dots.js





var dots__class, dots__temp;






/**
 * slider dots
 * 导航锚点
 */

var dots_noop = func.noop;
var dots_Dots = (dots__temp = dots__class = function (_React$Component) {
    inherits_default()(Dots, _React$Component);

    function Dots() {
        classCallCheck_default()(this, Dots);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Dots.prototype.handleChangeSlide = function handleChangeSlide(options, e) {
        e.preventDefault();

        this.props.changeSlide(options);
    };

    Dots.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            slideCount = _props.slideCount,
            slidesToScroll = _props.slidesToScroll,
            currentSlide = _props.currentSlide,
            dotsClass = _props.dotsClass,
            dotsDirection = _props.dotsDirection,
            dotsRender = _props.dotsRender,
            triggerType = _props.triggerType,
            rtl = _props.rtl;


        var dotsClazz = _classnames_2_3_1_classnames_default()(prefix + 'slick-dots', dotsDirection, dotsClass);
        var dotCount = Math.ceil(slideCount / slidesToScroll);
        var children = [];

        for (var i = 0; i < dotCount; i++) {
            var _handleProp;

            var leftBound = i * slidesToScroll;
            var rightBound = leftBound + slidesToScroll - 1;
            var itemClazz = _classnames_2_3_1_classnames_default()(prefix + 'slick-dots-item', {
                active: currentSlide >= leftBound && currentSlide <= rightBound
            });
            var dotOptions = {
                message: 'dots',
                index: i,
                slidesToScroll: slidesToScroll,
                currentSlide: currentSlide
            };
            // 除非设置为hover，默认使用click触发
            var handleProp = (_handleProp = {}, _handleProp[triggerType.toLowerCase() === 'hover' ? 'onMouseEnter' : 'onClick'] = this.handleChangeSlide.bind(this, dotOptions), _handleProp);

            var docIndex = i;
            var currentSlideIndex = currentSlide;
            if (rtl) {
                docIndex = dotCount - 1 - i;
                currentSlideIndex = dotCount - 1 - currentSlide;
            }

            children.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'li',
                extends_default()({ key: i, className: itemClazz }, handleProp),
                dotsRender instanceof Function ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    null,
                    dotsRender(docIndex, currentSlideIndex)
                ) :
                // Slider is navigated by right and left arrow buttons so the dots are not required functionality
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('button', { tabIndex: '-1' })
            ));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ul',
            { className: dotsClazz, 'aria-hidden': 'true' },
            children
        );
    };

    return Dots;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), dots__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    currentSlide: _prop_types_15_8_1_prop_types_default.a.number,
    changeSlide: _prop_types_15_8_1_prop_types_default.a.func,
    dotsClass: _prop_types_15_8_1_prop_types_default.a.string,
    slideCount: _prop_types_15_8_1_prop_types_default.a.number,
    slidesToScroll: _prop_types_15_8_1_prop_types_default.a.number,
    dotsDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    dotsRender: _prop_types_15_8_1_prop_types_default.a.func,
    triggerType: _prop_types_15_8_1_prop_types_default.a.string
}, dots__class.defaultProps = {
    changeSlide: dots_noop
}, dots__temp);
dots_Dots.displayName = 'Dots';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slick/inner-slider.js





var inner_slider__class, inner_slider__temp;











/**
 * Slider inner
 */

var inner_slider_noop = func.noop;
var inner_slider_InnerSlider = (inner_slider__temp = inner_slider__class = function (_React$Component) {
    inherits_default()(InnerSlider, _React$Component);

    function InnerSlider(props) {
        classCallCheck_default()(this, InnerSlider);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.state = {
            animating: false,
            dragging: false,
            autoPlayTimer: null,
            currentDirection: 0,
            currentLeft: null,
            currentSlide: 'activeIndex' in props ? props.activeIndex : props.defaultActiveIndex,
            direction: 1,
            listWidth: null,
            listHeight: null,
            slideCount: null,
            slideWidth: null,
            slideHeight: null,
            swipeLeft: null,
            touchObject: {
                startX: 0,
                startY: 0,
                curX: 0,
                curY: 0
            },

            lazyLoadedList: [],

            // added for react
            initialized: false,
            edgeDragged: false,
            swiped: false, // used by swipeEvent. differentites between touch and swipe.
            trackStyle: {},
            trackWidth: 0
        };

        // this.filterProps = Object.assign({}, sliderPropTypes, InnerSlider.propTypes);

        func.bindCtx(_this, ['onWindowResized', 'selectHandler', 'changeSlide', 'onInnerSliderEnter', 'onInnerSliderLeave', 'swipeStart', 'swipeMove', 'swipeEnd']);
        return _this;
    }

    InnerSlider.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        var lazyLoad = nextProps.lazyLoad,
            children = nextProps.children,
            slidesToShow = nextProps.slidesToShow,
            activeIndex = nextProps.activeIndex;
        var currentSlide = prevState.currentSlide;

        var lazyLoadedList = [];

        if (children !== prevState.children) {
            state.children = children;
        }

        if (lazyLoad) {
            for (var i = 0, j = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.count(children); i < j; i++) {
                if (i >= currentSlide && i < currentSlide + slidesToShow) {
                    lazyLoadedList.push(i);

                    var pre = i - 1 < 0 ? j - 1 : i - 1;
                    var next = i + 1 >= j ? 0 : i + 1;

                    lazyLoadedList.push(pre);
                    lazyLoadedList.push(next);
                }
            }

            if (prevState.lazyLoadedList.length === 0) {
                state.lazyLoadedList = lazyLoadedList;
            }
        }

        return state;
    };

    InnerSlider.prototype.componentDidMount = function componentDidMount() {
        this.hasMounted = true;

        // TODO Hack for autoplay -- Inspect Later
        this.initialize(this.props);
        this.adaptHeight();

        if (this.props.activeIndex) {
            this.slickGoTo(this.props.activeIndex);
        }

        /* istanbul ignore if  */
        if (window) {
            // To support server-side rendering
            util_events.on(window, 'resize', this.onWindowResized);
        }
    };

    InnerSlider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (prevProps.activeIndex !== this.props.activeIndex) {
            this.slickGoTo(this.props.activeIndex);
        } else if (prevState.currentSlide >= this.props.children.length) {
            this.update(this.props);
            this.changeSlide({
                message: 'index',
                index: this.props.children.length - this.props.slidesToShow,
                currentSlide: this.state.currentSlide
            });
        } else {
            var update = !util_obj.shallowEqual(prevProps, this.props);
            if (update) {
                this.update(this.props);
            }
        }

        this.adaptHeight();
    };

    InnerSlider.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.animationEndCallback) {
            clearTimeout(this.animationEndCallback);
        }

        util_events.off(window, 'resize', this.onWindowResized);

        if (this.state.autoPlayTimer) {
            clearInterval(this.state.autoPlayTimer);
        }
    };

    InnerSlider.prototype.onWindowResized = function onWindowResized() {
        this.update(this.props);
        // animating state should be cleared while resizing, otherwise autoplay stops working
        this.setState({ animating: false });
        clearTimeout(this.animationEndCallback);
        delete this.animationEndCallback;
    };

    InnerSlider.prototype.slickGoTo = function slickGoTo(slide) {
        typeof slide === 'number' && this.changeSlide({
            message: 'index',
            index: slide,
            currentSlide: this.state.currentSlide
        });
    };

    InnerSlider.prototype.onEnterArrow = function onEnterArrow(msg) {
        this.arrowHoverHandler(msg);
    };

    InnerSlider.prototype.onLeaveArrow = function onLeaveArrow() {
        this.arrowHoverHandler();
    };

    InnerSlider.prototype._instanceRefHandler = function _instanceRefHandler(attr, ref) {
        this[attr] = ref;
    };

    InnerSlider.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            animation = _props.animation,
            arrows = _props.arrows,
            arrowSize = _props.arrowSize,
            arrowPosition = _props.arrowPosition,
            arrowDirection = _props.arrowDirection,
            dots = _props.dots,
            dotsClass = _props.dotsClass,
            cssEase = _props.cssEase,
            speed = _props.speed,
            infinite = _props.infinite,
            centerMode = _props.centerMode,
            centerPadding = _props.centerPadding,
            lazyLoad = _props.lazyLoad,
            dotsDirection = _props.dotsDirection,
            rtl = _props.rtl,
            slidesToShow = _props.slidesToShow,
            slidesToScroll = _props.slidesToScroll,
            variableWidth = _props.variableWidth,
            vertical = _props.vertical,
            verticalSwiping = _props.verticalSwiping,
            focusOnSelect = _props.focusOnSelect,
            children = _props.children,
            dotsRender = _props.dotsRender,
            triggerType = _props.triggerType;
        var _state = this.state,
            currentSlide = _state.currentSlide,
            lazyLoadedList = _state.lazyLoadedList,
            slideCount = _state.slideCount,
            slideWidth = _state.slideWidth,
            slideHeight = _state.slideHeight,
            trackStyle = _state.trackStyle,
            listHeight = _state.listHeight,
            dragging = _state.dragging;

        // TODO 需要精简一下

        var trackProps = {
            prefix: prefix,
            animation: animation,
            cssEase: cssEase,
            speed: speed,
            infinite: infinite,
            centerMode: centerMode,
            focusOnSelect: focusOnSelect ? this.selectHandler : null,
            currentSlide: currentSlide,
            lazyLoad: lazyLoad,
            lazyLoadedList: lazyLoadedList,
            rtl: rtl,
            slideWidth: slideWidth,
            slideHeight: slideHeight,
            slidesToShow: slidesToShow,
            slidesToScroll: slidesToScroll,
            slideCount: slideCount,
            trackStyle: trackStyle,
            variableWidth: variableWidth,
            vertical: vertical,
            verticalSwiping: verticalSwiping,
            triggerType: triggerType
            // clickHandler: this.changeSlide, unused
        };

        var dotsEle = void 0;

        if (dots === true && slideCount > slidesToShow) {
            var dotProps = {
                prefix: prefix,
                rtl: rtl,
                dotsClass: dotsClass,
                slideCount: slideCount,
                slidesToShow: slidesToShow,
                currentSlide: currentSlide,
                slidesToScroll: slidesToScroll,
                dotsDirection: dotsDirection,
                changeSlide: this.changeSlide,
                dotsRender: dotsRender,
                triggerType: triggerType
            };

            dotsEle = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(dots_Dots, dotProps);
        }

        var prevArrow = void 0,
            nextArrow = void 0;

        var arrowProps = {
            prefix: prefix,
            rtl: rtl,
            arrowSize: arrowSize,
            arrowPosition: arrowPosition,
            arrowDirection: arrowDirection,
            infinite: infinite,
            centerMode: centerMode,
            currentSlide: currentSlide,
            slideCount: slideCount,
            slidesToShow: slidesToShow,
            clickHandler: this.changeSlide
        };

        if (arrows) {
            prevArrow = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                arrow_Arrow,
                extends_default()({}, arrowProps, {
                    type: 'prev',
                    'aria-label': 'Previous',
                    ref: this._instanceRefHandler.bind(this, 'pArrow'),
                    onMouseEnter: animation ? this.onEnterArrow.bind(this, 'prev') : inner_slider_noop,
                    onMouseLeave: animation ? this.onLeaveArrow.bind(this, 'prev') : inner_slider_noop
                }),
                this.props.prevArrow
            );

            nextArrow = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                arrow_Arrow,
                extends_default()({}, arrowProps, {
                    type: 'next',
                    'aria-label': 'Next',
                    ref: this._instanceRefHandler.bind(this, 'nArrow'),
                    onMouseEnter: animation ? this.onEnterArrow.bind(this, 'next') : inner_slider_noop,
                    onMouseLeave: animation ? this.onLeaveArrow.bind(this, 'next') : inner_slider_noop
                }),
                this.props.nextArrow
            );
        }

        var verticalHeightStyle = vertical ? {
            height: listHeight
        } : null;

        var centerPaddingStyle = void 0;
        if (centerMode) {
            centerPaddingStyle = vertical ? { padding: centerPadding + ' 0px' } : { padding: '0px ' + centerPadding };
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                className: prefix + 'slick-container ' + prefix + 'slick-initialized',
                onMouseEnter: this.onInnerSliderEnter,
                onMouseLeave: this.onInnerSliderLeave
            },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    ref: this._instanceRefHandler.bind(this, 'list'),
                    className: prefix + 'slick-list',
                    style: extends_default()({}, verticalHeightStyle, centerPaddingStyle),
                    onMouseDown: this.swipeStart,
                    onMouseUp: this.swipeEnd,
                    onTouchStart: this.swipeStart,
                    onTouchEnd: this.swipeEnd,
                    onMouseMove: dragging ? this.swipeMove : null,
                    onMouseLeave: dragging ? this.swipeEnd : null,
                    onTouchMove: dragging ? this.swipeMove : null,
                    onTouchCancel: dragging ? this.swipeEnd : null
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    slick_track_Track,
                    extends_default()({ ref: this._instanceRefHandler.bind(this, 'track') }, trackProps),
                    children
                )
            ),
            prevArrow,
            nextArrow,
            dotsEle
        );
    };

    return InnerSlider;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), inner_slider__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.bool]),
    arrows: _prop_types_15_8_1_prop_types_default.a.bool,
    arrowSize: _prop_types_15_8_1_prop_types_default.a.oneOf(['medium', 'large']),
    arrowPosition: _prop_types_15_8_1_prop_types_default.a.oneOf(['inner', 'outer']),
    arrowDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    centerPadding: _prop_types_15_8_1_prop_types_default.a.any,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    centerMode: _prop_types_15_8_1_prop_types_default.a.bool,
    dots: _prop_types_15_8_1_prop_types_default.a.bool,
    dotsDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    dotsClass: _prop_types_15_8_1_prop_types_default.a.string,
    focusOnSelect: _prop_types_15_8_1_prop_types_default.a.bool,
    cssEase: _prop_types_15_8_1_prop_types_default.a.string,
    speed: _prop_types_15_8_1_prop_types_default.a.number,
    infinite: _prop_types_15_8_1_prop_types_default.a.bool,
    defaultActiveIndex: _prop_types_15_8_1_prop_types_default.a.number,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    slidesToShow: _prop_types_15_8_1_prop_types_default.a.number,
    lazyLoad: _prop_types_15_8_1_prop_types_default.a.bool,
    activeIndex: _prop_types_15_8_1_prop_types_default.a.number,
    slidesToScroll: _prop_types_15_8_1_prop_types_default.a.number,
    variableWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    vertical: _prop_types_15_8_1_prop_types_default.a.bool,
    verticalSwiping: _prop_types_15_8_1_prop_types_default.a.bool,
    prevArrow: _prop_types_15_8_1_prop_types_default.a.element,
    nextArrow: _prop_types_15_8_1_prop_types_default.a.element,
    dotsRender: _prop_types_15_8_1_prop_types_default.a.func,
    triggerType: _prop_types_15_8_1_prop_types_default.a.string
}, inner_slider__class.defaultProps = {
    prefix: 'next-',
    arrowDirection: 'hoz',
    triggerType: 'click'
}, inner_slider__temp);

// extend prototype

inner_slider_InnerSlider.displayName = 'InnerSlider';
extends_default()(inner_slider_InnerSlider.prototype, mixins_helpers);
extends_default()(inner_slider_InnerSlider.prototype, event_handlers);

/* harmony default export */ var inner_slider = (Object(react_lifecycles_compat_es["polyfill"])(inner_slider_InnerSlider));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/slider.js





var slider__class, slider__temp2;








/**
 * Slider
 */
var slider_slider_Slider = (slider__temp2 = slider__class = function (_Component) {
  inherits_default()(Slider, _Component);

  function Slider() {
    var _temp, _this, _ret;

    classCallCheck_default()(this, Slider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.resize = function () {
      // export api
      _this.innerSlider.onWindowResized();
    }, _temp), possibleConstructorReturn_default()(_this, _ret);
  }

  Slider.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        prefix = _props.prefix,
        arrowPosition = _props.arrowPosition,
        slideDirection = _props.slideDirection,
        style = _props.style,
        className = _props.className,
        children = _props.children;


    var globalProps = {};
    Object.keys(config_provider.propTypes).forEach(function (key) {
      globalProps[key] = _this2.props[key];
    });

    var sliderProps = util_obj.pickOthers(['className', 'style', 'slideDirection'], this.props);
    var slideCount = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.count(children);

    if (slideCount === 0) {
      // 没有 item 时不显示 slider
      return null;
    } else if (slideCount === 1) {
      // 单个 item 时不显示箭头和控制器
      sliderProps.arrows = false;
      sliderProps.autoplay = false;
      sliderProps.draggable = false;
    }

    var clazz = _classnames_2_3_1_classnames_default()([prefix + 'slick', prefix + 'slick-' + arrowPosition, prefix + 'slick-' + slideDirection], className);

    if (slideDirection === 'ver') {
      // 向下传递时使用 vertical 属性
      sliderProps.vertical = true;
      sliderProps.verticalSwiping = true;
    }

    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
      config_provider,
      extends_default()({}, globalProps, { rtl: false }),
      external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
        'div',
        extends_default()({
          dir: 'ltr',
          className: clazz,
          style: style
        }, util_obj.pickOthers(extends_default()({}, Slider.propTypes, inner_slider.propTypes), sliderProps)),
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(inner_slider, extends_default()({
          ref: function ref(InnerSlider) {
            return _this2.innerSlider = InnerSlider;
          }
        }, sliderProps))
      )
    );
  };

  return Slider;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), slider__class.propTypes = {
  prefix: _prop_types_15_8_1_prop_types_default.a.string,
  rtl: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 自定义传入的样式
   */
  className: _prop_types_15_8_1_prop_types_default.a.any,
  /**
   * 是否使用自适应高度
   */
  adaptiveHeight: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 动效类型，默认是'slide'
   */
  animation: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.bool]),
  /**
   * 是否显示箭头
   */
  arrows: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 导航箭头大小 可选值: 'medium', 'large'
   */
  arrowSize: _prop_types_15_8_1_prop_types_default.a.oneOf(['medium', 'large']),
  /**
   * 导航箭头位置 可选值: 'inner', 'outer'
   */
  arrowPosition: _prop_types_15_8_1_prop_types_default.a.oneOf(['inner', 'outer']),
  /**
   * 导航箭头的方向 可选值: 'hoz', 'ver'
   */
  arrowDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
  /**
   * 是否自动播放
   */
  autoplay: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 自动播放的速度
   */
  autoplaySpeed: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 向后箭头
   */
  nextArrow: _prop_types_15_8_1_prop_types_default.a.element,
  /**
   * 向前箭头
   */
  prevArrow: _prop_types_15_8_1_prop_types_default.a.element,
  /**
   * 是否启用居中模式
   */
  centerMode: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否显示导航锚点
   */
  dots: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 导航锚点位置
   */
  dotsDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
  dotsClass: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * 自定义导航锚点
   */
  dotsRender: _prop_types_15_8_1_prop_types_default.a.func,
  /**
   * 是否可拖拽
   */
  draggable: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否使用无穷循环模式
   */
  infinite: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 初始被激活的轮播图
   */
  defaultActiveIndex: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 是否启用懒加载
   */
  lazyLoad: _prop_types_15_8_1_prop_types_default.a.bool,
  slide: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * 轮播方向
   */
  slideDirection: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
  /**
   * 同时展示的图片数量
   */
  slidesToShow: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 同时滑动的图片数量
   */
  slidesToScroll: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 轮播速度
   */
  speed: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 跳转到指定的轮播图（受控）
   */
  activeIndex: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 锚点导航触发方式
   */
  triggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
  /**
   * 轮播切换的回调函数
   * @param {Number} index 幻灯片的索引
   */
  onChange: _prop_types_15_8_1_prop_types_default.a.func,
  onBeforeChange: _prop_types_15_8_1_prop_types_default.a.func, // 兼容 0.x onBeforeChange
  children: _prop_types_15_8_1_prop_types_default.a.any,
  /**
   * 自定义传入的class
   */
  style: _prop_types_15_8_1_prop_types_default.a.object,
  /**
   * Side padding when in center mode (px or %); 展示部分为center，pading会产生前后预览
   */
  centerPadding: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * CSS3 Animation Easing,默认‘ease’
   */
  cssEase: _prop_types_15_8_1_prop_types_default.a.string, // used
  edgeFriction: _prop_types_15_8_1_prop_types_default.a.number, // 非无限轮播滑动到边缘时的阻力
  /**
   * 多图轮播时，点击选中后自动居中
   */
  focusOnSelect: _prop_types_15_8_1_prop_types_default.a.bool,
  pauseOnHover: _prop_types_15_8_1_prop_types_default.a.bool, // 鼠标经过时停止播放
  swipe: _prop_types_15_8_1_prop_types_default.a.bool,
  swipeToSlide: _prop_types_15_8_1_prop_types_default.a.bool,
  touchMove: _prop_types_15_8_1_prop_types_default.a.bool,
  touchThreshold: _prop_types_15_8_1_prop_types_default.a.number,
  useCSS: _prop_types_15_8_1_prop_types_default.a.bool,
  variableWidth: _prop_types_15_8_1_prop_types_default.a.bool, // used
  waitForAnimate: _prop_types_15_8_1_prop_types_default.a.bool,
  edgeEvent: _prop_types_15_8_1_prop_types_default.a.any,
  swipeEvent: _prop_types_15_8_1_prop_types_default.a.any
}, slider__class.defaultProps = {
  prefix: 'next-',
  animation: 'slide',
  arrowSize: 'medium',
  arrowPosition: 'inner',
  vertical: false,
  verticalSwiping: false,
  dots: true,
  dotsDirection: 'hoz',
  arrows: true,
  arrowDirection: 'hoz',
  infinite: true,
  autoplay: false,
  autoplaySpeed: 3000,
  speed: 600,
  adaptiveHeight: false,
  centerMode: false,
  centerPadding: '50px', // Side padding when in center mode (px or %); 展示部分为center，pading会产生前后预览
  cssEase: 'ease',
  draggable: true,
  edgeFriction: 0.35,
  focusOnSelect: false,
  defaultActiveIndex: 0,
  lazyLoad: false,
  pauseOnHover: false,
  rtl: false,
  slide: 'div',
  slideDirection: 'hoz',
  slidesToShow: 1,
  slidesToScroll: 1,
  swipe: true,
  swipeToSlide: false, // Allow users to drag or swipe directly to a slide irrespective of slidesToScroll
  touchMove: true, // 移动端touch
  touchThreshold: 5,
  useCSS: true,
  variableWidth: false,
  waitForAnimate: true,
  onChange: function onChange() {},
  onBeforeChange: function onBeforeChange() {},
  edgeEvent: null,
  swipeEvent: null,
  nextArrow: null, // nextArrow, prevArrow are react components
  prevArrow: null,
  style: null,
  dotsRender: null,
  triggerType: 'click'
}, slider__temp2);
slider_slider_Slider.displayName = 'Slider';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/slider/index.js





/* harmony default export */ var es_slider = (config_provider.config(slider_slider_Slider, {
    exportNames: ['resize'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('fade' in props) {
            deprecated('fade', 'animation', 'Slider');

            var _props = props,
                fade = _props.fade,
                others = objectWithoutProperties_default()(_props, ['fade']);

            if (fade) {
                props = extends_default()({ animation: 'fade' }, others);
            } else {
                props = others;
            }
        }
        if ('arrowPos' in props) {
            if (props.arrowPos === 'inline') {
                deprecated('arrowPos=inline', 'arrowPosition=inner', 'Slider');

                props.arrowPos = 'inner';
            } else {
                deprecated('arrowPos', 'arrowPosition', 'Slider');
            }

            var _props2 = props,
                arrowPos = _props2.arrowPos,
                _others = objectWithoutProperties_default()(_props2, ['arrowPos']);

            props = extends_default()({ arrowPosition: arrowPos }, _others);
        }
        ['arrowDirection', 'dotsDirection', 'slideDirection'].forEach(function (propName) {
            if (props[propName] === 'horizontal') {
                deprecated(propName + '=horizontal', propName + '=hoz', 'Slider');

                props[propName] = 'hoz';
            } else if (props[propName] === 'vertical') {
                deprecated(propName + '=vertical', propName + '=ver', 'Slider');

                props[propName] = 'ver';
            }
        });
        if ('initialSlide' in props) {
            deprecated('initialSlide', 'defaultActiveIndex', 'Slider');

            var _props3 = props,
                initialSlide = _props3.initialSlide,
                _others2 = objectWithoutProperties_default()(_props3, ['initialSlide']);

            props = extends_default()({ defaultActiveIndex: initialSlide }, _others2);
        }
        if ('slickGoTo' in props) {
            deprecated('slickGoTo', 'activeIndex', 'Slider');

            var _props4 = props,
                slickGoTo = _props4.slickGoTo,
                _others3 = objectWithoutProperties_default()(_props4, ['slickGoTo']);

            props = extends_default()({ activeIndex: slickGoTo }, _others3);
        }
        if ('afterChange' in props) {
            deprecated('afterChange', 'onChange', 'Slider');

            var _props5 = props,
                afterChange = _props5.afterChange,
                _others4 = objectWithoutProperties_default()(_props5, ['afterChange']);

            props = extends_default()({ onChange: afterChange }, _others4);
        }

        if ('beforeChange' in props) {
            deprecated('beforeChange', 'onBeforeChange', 'Slider');

            var _props6 = props,
                beforeChange = _props6.beforeChange,
                _others5 = objectWithoutProperties_default()(_props6, ['beforeChange']);

            props = extends_default()({ onBeforeChange: beforeChange }, _others5);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/split-button/index.js






var split_button__class, split_button__temp;













var split_button_Popup = next_es_overlay.Popup;

/**
 * SplitButton
 */

var split_button_SplitButton = (split_button__temp = split_button__class = function (_React$Component) {
    inherits_default()(SplitButton, _React$Component);

    function SplitButton(props, context) {
        classCallCheck_default()(this, SplitButton);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        _this.selectMenuItem = function (keys) {
            var _this$props;

            for (var _len = arguments.length, others = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                others[_key - 1] = arguments[_key];
            }

            if (!('selectedKeys' in _this.props)) {
                _this.setState({
                    selectedKeys: keys
                });
            }
            (_this$props = _this.props).onSelect.apply(_this$props, [keys].concat(others));
        };

        _this.clickMenuItem = function (key) {
            var _this$props2;

            for (var _len2 = arguments.length, others = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                others[_key2 - 1] = arguments[_key2];
            }

            (_this$props2 = _this.props).onItemClick.apply(_this$props2, [key].concat(others));
            _this.onVisibleChange(false, 'menuSelect');
        };

        _this.onPopupOpen = function () {
            if (_this.props.autoWidth && _this.wrapper && _this.menu) {
                util_dom.setStyle(_this.menu, {
                    width: _this.wrapper.offsetWidth
                });
            }
        };

        _this.onVisibleChange = function (visible, reason) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, reason);
        };

        _this._menuRefHandler = function (ref) {
            _this.menu = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(ref);

            var refFn = _this.props.menuProps.ref;
            if (typeof refFn === 'function') {
                refFn(ref);
            }
        };

        _this._wrapperRefHandler = function (ref) {
            _this.wrapper = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(ref);
        };

        _this.state = {
            selectedKeys: props.defaultSelectedKeys,
            visible: props.defaultVisible
        };
        return _this;
    }

    SplitButton.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var st = {};

        if ('visible' in props) {
            st.visible = props.visible;
        }

        if ('selectedKeys' in props) {
            st.selectedKeys = props.selectedKeys;
        }

        return st;
    };

    SplitButton.prototype.componentDidMount = function componentDidMount() {
        // 由于定位目标是 wrapper，如果弹层默认展开，wrapper 还未渲染，didMount 后强制再渲染一次，弹层重新定位
        if (this.state.visible) {
            this.forceUpdate();
        }
    };

    SplitButton.prototype.render = function render() {
        var _classnames,
            _classnames2,
            _classnames3,
            _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            label = _props.label,
            size = _props.size,
            type = _props.type,
            component = _props.component,
            ghost = _props.ghost,
            className = _props.className,
            style = _props.style,
            children = _props.children,
            triggerProps = _props.triggerProps,
            popupAlign = _props.popupAlign,
            popupTriggerType = _props.popupTriggerType,
            popupStyle = _props.popupStyle,
            popupClassName = _props.popupClassName,
            popupProps = _props.popupProps,
            popupContainer = _props.popupContainer,
            followTrigger = _props.followTrigger,
            selectMode = _props.selectMode,
            menuProps = _props.menuProps,
            leftButtonProps = _props.leftButtonProps,
            disabled = _props.disabled,
            others = objectWithoutProperties_default()(_props, ['prefix', 'label', 'size', 'type', 'component', 'ghost', 'className', 'style', 'children', 'triggerProps', 'popupAlign', 'popupTriggerType', 'popupStyle', 'popupClassName', 'popupProps', 'popupContainer', 'followTrigger', 'selectMode', 'menuProps', 'leftButtonProps', 'disabled']);

        var state = this.state;

        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'split-btn'] = true, _classnames), className);

        var sharedBtnProps = {
            type: type,
            size: size,
            component: component,
            ghost: ghost,
            disabled: disabled
        };

        var triggerClassNames = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'split-btn-trigger'] = true, _classnames2[prefix + 'expand'] = state.visible, _classnames2.opened = state.visible, _classnames2));

        var iconCls = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'split-btn-symbol-fold'] = true, _classnames3));

        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            extends_default()({}, sharedBtnProps, triggerProps, { className: triggerClassNames }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down', className: iconCls })
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button.Group,
            extends_default()({}, util_obj.pickOthers(SplitButton.propTypes, others), {
                className: classNames,
                style: style,
                size: size,
                ref: this._wrapperRefHandler
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                extends_default()({}, sharedBtnProps, leftButtonProps),
                label
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                split_button_Popup,
                extends_default()({}, popupProps, {
                    followTrigger: followTrigger,
                    visible: state.visible,
                    onVisibleChange: this.onVisibleChange,
                    trigger: trigger,
                    triggerType: popupTriggerType,
                    align: popupAlign,
                    container: popupContainer,
                    target: function target() {
                        return _this2.wrapper;
                    },
                    style: popupStyle,
                    shouldUpdatePosition: true,
                    className: popupClassName,
                    onOpen: this.onPopupOpen
                }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'split-btn-spacing-tb' },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        es_menu,
                        extends_default()({}, menuProps, {
                            selectMode: selectMode,
                            selectedKeys: state.selectedKeys,
                            onSelect: this.selectMenuItem,
                            onItemClick: this.clickMenuItem,
                            ref: this._menuRefHandler
                        }),
                        children
                    )
                )
            )
        );
    };

    return SplitButton;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), split_button__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 按钮的类型
     */
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'primary', 'secondary']),
    /**
     * 按钮组的尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 主按钮的文案
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.oneOf(['button', 'a']),
    /**
     * 是否为幽灵按钮
     */
    ghost: _prop_types_15_8_1_prop_types_default.a.oneOf(['light', 'dark', false, true]),
    /**
     * 默认激活的菜单项（用法同 Menu 非受控）
     */
    defaultSelectedKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 激活的菜单项（用法同 Menu 受控）
     */
    selectedKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 菜单的选择模式
     */
    selectMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple']),
    /**
     * 选择菜单项时的回调，参考 Menu
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击菜单项时的回调，参考 Menu
     */
    onItemClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 触发按钮的属性（支持 Button 的所有属性透传）
     */
    triggerProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层菜单的宽度是否与按钮组一致
     */
    autoWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层显示状态变化时的回调函数
     * @param {Boolean} visible 弹层显示状态
     * @param {String} type 触发弹层显示或隐藏的来源 menuSelect 表示由menu触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层的触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式, 详情见Overlay align
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 透传给弹层的属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层容器
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 透传给 Menu 的属性
     */
    menuProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 透传给 左侧按钮 的属性
     */
    leftButtonProps: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.any
}, split_button__class.defaultProps = {
    prefix: 'next-',
    type: 'normal',
    size: 'medium',
    autoWidth: true,
    popupTriggerType: 'click',
    onVisibleChange: func.noop,
    onItemClick: func.noop,
    onSelect: func.noop,
    defaultSelectedKeys: [],
    menuProps: {},
    leftButtonProps: {}
}, split_button__temp);
split_button_SplitButton.displayName = 'SplitButton';


split_button_SplitButton.Item = es_menu.Item;
split_button_SplitButton.Divider = es_menu.Divider;
split_button_SplitButton.Group = es_menu.Group;

/* harmony default export */ var split_button = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(split_button_SplitButton)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/step/view/step.js





var step__class, step__temp;









var step_getHeight = function getHeight(el) {
    return util_dom.getStyle(el, 'height');
};
var step_setHeight = function setHeight(el, height) {
    return util_dom.setStyle(el, 'height', height);
};

/** Step */
var step_Step = (step__temp = step__class = function (_Component) {
    inherits_default()(Step, _Component);

    Step.getDerivedStateFromProps = function getDerivedStateFromProps(newProps) {
        if ('current' in newProps) {
            return {
                current: newProps.current
            };
        }
    };

    function Step(props, context) {
        classCallCheck_default()(this, Step);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this._stepRefHandler = function (ref) {
            _this.step = ref;
        };

        _this.state = {
            parentWidth: 'auto',
            parentHeight: 'auto',
            currentfocus: 0
        };
        _this.resize = _this.resize.bind(_this);
        return _this;
    }

    Step.prototype.componentDidMount = function componentDidMount() {
        /* istanbul ignore if */
        if (!support.flex) {
            this.resize();
            util_events.on(window, 'resize', this.resize);
        }
        this.adjustHeight();
    };

    Step.prototype.componentDidUpdate = function componentDidUpdate() {
        this.adjustHeight();
    };

    Step.prototype.componentWillUnmount = function componentWillUnmount() {
        /* istanbul ignore if */
        if (!support.flex) {
            util_events.off(window, 'resize', this.resize);
        }
    };

    Step.prototype.adjustHeight = function adjustHeight() {
        var _props = this.props,
            shape = _props.shape,
            direction = _props.direction,
            prefix = _props.prefix,
            labelPlacement = _props.labelPlacement;

        var step = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.step);
        if (shape !== 'arrow' && (direction === 'horizontal' || direction === 'hoz') && (labelPlacement === 'vertical' || labelPlacement === 'ver')) {
            var height = Array.prototype.slice.call(step.getElementsByClassName(prefix + 'step-item')).reduce(function (ret, re) {
                var itemHeight = step_getHeight(re.getElementsByClassName(prefix + 'step-item-container')[0]) + step_getHeight(re.getElementsByClassName(prefix + 'step-item-body')[0]);
                return Math.max(itemHeight, ret);
            }, 0);
            step_setHeight(step, height);
        } else {
            step_setHeight(step, '');
        }
    };

    Step.prototype.resize = function resize() {
        if (this.step) {
            this.setState({
                parentWidth: this.step.offsetWidth || 0,
                parentHeight: this.step.offsetHeight || 0
            });
        }
    };

    // set dir key for aria handle
    // handleKeyDown = e => {
    //     const { shape, children } = this.props;
    //     const { length: max } = children;
    //     let { currentfocus } = this.state;
    //     const initPosition = currentfocus;
    //     switch (e.keyCode) {
    //         case KEYCODE.RIGHT:
    //         case KEYCODE.DOWN:
    //             currentfocus++;
    //             break;
    //         case KEYCODE.LEFT:
    //         case KEYCODE.UP:
    //             currentfocus--;
    //             break;
    //         default:
    //             break;
    //     }
    //     currentfocus =
    //         currentfocus >= max ? 0 : currentfocus < 0 ? max - 1 : currentfocus;
    //     this.setState({ currentfocus }, () => {
    //         const child = this.step.children[currentfocus];
    //         if (!child) return;
    //         const focusItem =
    //             shape === 'arrow'
    //                 ? child
    //                 : child.querySelector('.next-step-item-body');
    //         focusItem && focusItem.focus();
    //     });
    //     if (initPosition !== currentfocus) {
    //         e.preventDefault();
    //     }
    // };

    Step.prototype._getValidChildren = function _getValidChildren(children) {
        var result = [];
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(children, function (child) {
            if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
                result.push(child);
            }
        });
        return result;
    };

    Step.prototype.render = function render() {
        var _this2 = this,
            _classNames;

        // eslint-disable-next-line
        var _props2 = this.props,
            className = _props2.className,
            current = _props2.current,
            labelPlacement = _props2.labelPlacement,
            shape = _props2.shape,
            readOnly = _props2.readOnly,
            animation = _props2.animation,
            itemRender = _props2.itemRender,
            rtl = _props2.rtl,
            stretch = _props2.stretch;

        var others = util_obj.pickOthers(Step.propTypes, this.props);
        var _props3 = this.props,
            prefix = _props3.prefix,
            direction = _props3.direction,
            children = _props3.children;

        prefix = this.context.prefix || prefix;
        var _state = this.state,
            parentWidth = _state.parentWidth,
            parentHeight = _state.parentHeight;

        // type不同对应的direction不同

        direction = shape === 'arrow' ? 'hoz' : direction;

        // children去除null
        children = this._getValidChildren(children);

        // 修改子节点属性
        var cloneChildren = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child, index) {
            var status = index < current ? 'finish' : index === current ? 'process' : 'wait';

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                prefix: prefix,
                key: index,
                index: index,
                total: children.length,
                status: child.props.status || status,
                shape: shape,
                direction: direction,
                labelPlacement: labelPlacement,
                parentWidth: parentWidth,
                parentHeight: parentHeight,
                readOnly: readOnly,
                animation: animation,
                tabIndex: 0,
                // tabIndex: this.state.currentfocus === index ? '0' : '-1',
                'aria-current': status === 'process' ? 'step' : null,
                itemRender: child.props.itemRender ? child.props.itemRender : itemRender, // 优先使用Item的itemRender
                onResize: function onResize() {
                    _this2.step && _this2.adjustHeight();
                },
                stretch: stretch
            });
        });

        var _direction = direction === 'ver' || direction === 'vertical' ? 'vertical' : 'horizontal';
        var _labelPlacement = labelPlacement === 'ver' || labelPlacement === 'vertical' ? 'vertical' : 'horizontal';
        var stepCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'step'] = true, _classNames[prefix + 'step-' + shape] = shape, _classNames[prefix + 'step-' + _direction] = _direction, _classNames[prefix + 'step-label-' + _labelPlacement] = _labelPlacement, _classNames[className] = className, _classNames));

        if (rtl) {
            others.dir = 'rtl';
        }

        // others.onKeyDown = makeChain(this.handleKeyDown, others.onKeyDown);
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ol',
            extends_default()({}, others, { className: stepCls, ref: this._stepRefHandler }),
            cloneChildren
        );
    };

    return Step;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), step__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当前步骤
     */
    current: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 展示方向
     */
    direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    /**
     * 横向布局时( direction 为 hoz )的内容排列
     */
    labelPlacement: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    /**
     * 类型
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['circle', 'arrow', 'dot']),
    /**
     * 是否只读模式
     */
    readOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否开启动效
     */
    animation: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义样式名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * StepItem 的自定义渲染
     * @param {Number} index   节点索引
     * @param {String} status  节点状态
     * @returns {Node} 节点的渲染结果
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 宽度横向拉伸
     */
    stretch: _prop_types_15_8_1_prop_types_default.a.bool
}), step__class.defaultProps = {
    prefix: 'next-',
    current: 0,
    direction: 'hoz',
    labelPlacement: 'ver',
    shape: 'circle',
    animation: true,
    itemRender: null,
    stretch: false
}, step__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, step__temp);
step_Step.displayName = 'Step';


/* harmony default export */ var view_step = (Object(react_lifecycles_compat_es["polyfill"])(step_Step));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/step/view/step-item.js





var step_item__class, step_item__temp;











/** Step.Item */
var step_item_StepItem = (step_item__temp = step_item__class = function (_Component) {
    inherits_default()(StepItem, _Component);

    function StepItem(props) {
        classCallCheck_default()(this, StepItem);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.onClick = function () {
            var _this$props = _this.props,
                index = _this$props.index,
                disabled = _this$props.disabled,
                readOnly = _this$props.readOnly,
                animation = _this$props.animation;

            if (disabled || readOnly) {
                return false;
            }

            if (animation && _this.stepNode) {
                util_dom.hasClass(_this.stepNode, 'clicked') ? util_dom.removeClass(_this.stepNode, 'clicked') : util_dom.addClass(_this.stepNode, 'clicked');
            }
            _this.props.onClick(index);
        };

        _this.removeClickedCls = _this.removeClickedCls.bind(_this);
        _this._refHandlerCreator = _this._refHandlerCreator.bind(_this);
        _this.resize = _this.resize.bind(_this);
        _this.ro = new ResizeObserver_es["a" /* default */](function () {
            var _this$props2 = _this.props,
                shape = _this$props2.shape,
                direction = _this$props2.direction,
                onResize = _this$props2.onResize;

            if (!_this.body || shape === 'arrow') {
                return;
            }
            if (direction === 'vertical' || direction === 'ver') {
                _this.resize();
            } else {
                onResize && onResize();
            }
        });
        return _this;
    }

    StepItem.prototype.componentDidMount = function componentDidMount() {
        var _props = this.props,
            shape = _props.shape,
            direction = _props.direction,
            labelPlacement = _props.labelPlacement,
            index = _props.index,
            total = _props.total,
            stretch = _props.stretch;

        this.body && this.ro.observe(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this.body));
        if (shape === 'arrow') {
            return;
        }
        if (direction === 'vertical' || direction === 'ver') {
            this.resize();
            this.forceUpdate(); // 解决Step嵌套的情况下，嵌套节点宽度为0的问题
            this.eventHandler = util_events.on(window, 'resize', this.resize); // 调整垂直Step
        } else if ((direction === 'horizontal' || direction === 'hoz') && (labelPlacement === 'horizontal' || labelPlacement === 'hoz') && index !== total - 1) {
            // 调整横向Content
            this.adjustTail();
        }
        if (stretch && (direction === 'horizontal' || direction === 'hoz')) {
            this.adjustItemWidth();
        }
    };

    StepItem.prototype.componentDidUpdate = function componentDidUpdate() {
        var _this2 = this;

        var _props2 = this.props,
            shape = _props2.shape,
            direction = _props2.direction,
            labelPlacement = _props2.labelPlacement,
            index = _props2.index,
            total = _props2.total,
            rtl = _props2.rtl,
            stretch = _props2.stretch;

        if (shape === 'arrow') {
            return;
        }
        var resetTailStyle = function resetTailStyle() {
            util_dom.setStyle(_this2.tail, {
                width: '',
                top: '',
                height: ''
            });
        };

        if (direction === 'vertical' || direction === 'ver') {
            this.resize();
        } else if (direction === 'horizontal' || direction === 'hoz') {
            var _dom$setStyle;

            var pos = rtl ? 'right' : 'left';
            util_dom.setStyle(this.body, (_dom$setStyle = {
                width: ''
            }, _dom$setStyle[pos] = '', _dom$setStyle));
            if (shape === 'circle' && (labelPlacement === 'horizontal' || labelPlacement === 'hoz') && index !== total - 1) {
                // 调整横向Content
                this.adjustTail();
            } else {
                resetTailStyle();
            }
            if (stretch) {
                this.adjustItemWidth();
            }
        } else if (index !== total - 1) {
            resetTailStyle();
        }
    };

    StepItem.prototype.componentWillUnmount = function componentWillUnmount() {
        this.eventHandler && this.eventHandler.off();
    };

    StepItem.prototype.adjustItemWidth = function adjustItemWidth() {
        var _props3 = this.props,
            index = _props3.index,
            total = _props3.total,
            labelPlacement = _props3.labelPlacement;

        var lastNodeWidth = labelPlacement === 'horizontal' || labelPlacement === 'hoz' ? this.container.offsetWidth + this.body.offsetWidth : this.title.offsetWidth;
        var width = total - 1 !== index ? 'calc((100% - ' + lastNodeWidth + 'px)/' + (total - 1) + ')' : 'auto';
        util_dom.setStyle(this.step, {
            width: width
        });
    };

    StepItem.prototype.adjustTail = function adjustTail() {
        var width = this.container.offsetWidth + this.title.offsetWidth;
        util_dom.setStyle(this.tail, {
            width: 'calc(100% - ' + width + 'px)',
            top: util_dom.getStyle(this.container, 'height') / 2 + 'px'
        });
    };

    StepItem.prototype.resize = function resize() {
        var direction = this.props.direction;

        if (direction === 'vertical' || direction === 'ver') {
            var stepWidth = util_dom.getStyle(this.step, 'width');
            var stepHozWhitespace = util_dom.getNodeHozWhitespace(this.step.parentNode);
            var stepBodyHozWhitespace = util_dom.getNodeHozWhitespace(this.body);
            var rtl = this.props.rtl;

            rtl ? this.body.style.right = stepWidth + 'px' : this.body.style.left = stepWidth + 'px';
            util_dom.setStyle(this.body, {
                width: util_dom.getStyle(this.step.parentNode.parentNode, 'width') - stepWidth - stepHozWhitespace - stepBodyHozWhitespace
            });
            util_dom.setStyle(this.tail, 'height', util_dom.getStyle(this.body, 'height') - util_dom.getStyle(this.container, 'height'));
        }
    };

    StepItem.prototype._getNode = function _getNode() {
        var _props4 = this.props,
            prefix = _props4.prefix,
            index = _props4.index,
            status = _props4.status,
            icon = _props4.icon,
            shape = _props4.shape,
            percent = _props4.percent,
            itemRender = _props4.itemRender;

        var nodeElement = icon;
        if (shape === 'dot') {
            nodeElement = icon ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: icon }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'step-item-node-dot' },
                ' '
            );
        } else if (shape === 'circle' && percent) {
            nodeElement = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(progress, { shape: 'circle', percent: percent, className: prefix + 'step-item-progress' });
        } else if (shape === 'circle' && !!itemRender && typeof itemRender === 'function') {
            nodeElement = null; // 如果是需要自定义节点，则不处理，返回空
        } else {
            nodeElement = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'step-item-node-circle' },
                icon ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: icon }) : this._itemRender(index, status)
            );
        }

        return nodeElement;
    };

    StepItem.prototype.getNode = function getNode(args) {
        var _props5 = this.props,
            prefix = _props5.prefix,
            itemRender = _props5.itemRender,
            index = _props5.index,
            status = _props5.status,
            title = _props5.title,
            content = _props5.content,
            shape = _props5.shape;
        var others = args.others,
            stepCls = args.stepCls,
            overlayCls = args.overlayCls;

        var nodeElement = this._getNode();
        var containerStyle = shape === 'dot' && { fontSize: 'initial' } || {};
        var finalNodeElement = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                className: prefix + 'step-item-container',
                style: containerStyle,
                ref: this._refHandlerCreator('container')
            },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'step-item-node-placeholder', onClick: this.onClick },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        className: prefix + 'step-item-node',
                        ref: this._refHandlerCreator('stepNode'),
                        onTransitionEnd: this.removeClickedCls
                    },
                    nodeElement
                )
            )
        );

        if (!nodeElement) {
            // 需要自定义子节点
            finalNodeElement = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: prefix + 'step-item-container',
                    style: containerStyle,
                    ref: this._refHandlerCreator('container')
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'step-item-node-placeholder', onClick: this.onClick },
                    itemRender(index, status, title, content)
                )
            );
        }
        if (shape !== 'arrow') {
            delete others.tabIndex;
            delete others['aria-current'];
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            extends_default()({}, others, { style: this.getStyle(), className: stepCls, ref: this._refHandlerCreator('step') }),
            finalNodeElement,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: prefix + 'step-item-body',
                    ref: this._refHandlerCreator('body'),
                    tabIndex: this.props.tabIndex,
                    'aria-current': this.props['aria-current']
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'step-item-title', ref: this._refHandlerCreator('title') },
                    title
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'step-item-content' },
                    content
                )
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'step-item-tail', ref: this._refHandlerCreator('tail') },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'step-item-tail-underlay' },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'step-item-tail-overlay', style: overlayCls })
                )
            )
        );
    };

    StepItem.prototype.getStyle = function getStyle() {
        var _props6 = this.props,
            parentWidth = _props6.parentWidth,
            parentHeight = _props6.parentHeight,
            direction = _props6.direction,
            total = _props6.total,
            index = _props6.index,
            shape = _props6.shape;

        var width = 'auto';

        if (Number(parentWidth) && Number(parentHeight)) {
            if (!support.flex && shape === 'arrow') {
                width = Math.floor(parentWidth / total - parentHeight / 2 - parentHeight / 8);
            }
        }
        if (shape !== 'arrow' && (direction === 'horizontal' || direction === 'hoz')) {
            width = total - 1 !== index ? Math.floor(100 / total) + '%' : 'auto';
        }
        return {
            width: width
        };
    };

    StepItem.prototype.removeClickedCls = function removeClickedCls() {
        var animation = this.props.animation;

        if (animation && this.stepNode && util_dom.hasClass(this.stepNode, 'clicked')) {
            util_dom.removeClass(this.stepNode, 'clicked');
        }
    };

    // 节点的渲染方法


    StepItem.prototype._itemRender = function _itemRender(index, status) {
        var itemRender = this.props.itemRender;

        if (itemRender) {
            return itemRender(index, status);
        }
        return status === 'finish' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'select' }) : index + 1;
    };

    StepItem.prototype._refHandlerCreator = function _refHandlerCreator(refName) {
        var self = this;
        return function (ref) {
            self[refName] = ref;
        };
    };

    StepItem.prototype.render = function render() {
        var _classNames;

        // eslint-disable-next-line
        var _props7 = this.props,
            prefix = _props7.prefix,
            locale = _props7.locale,
            className = _props7.className,
            status = _props7.status,
            title = _props7.title,
            icon = _props7.icon,
            index = _props7.index,
            total = _props7.total,
            shape = _props7.shape,
            content = _props7.content,
            direction = _props7.direction,
            disabled = _props7.disabled,
            onClick = _props7.onClick,
            readOnly = _props7.readOnly,
            animation = _props7.animation,
            parentHeight = _props7.parentHeight,
            itemRender = _props7.itemRender,
            parentWidth = _props7.parentWidth,
            labelPlacement = _props7.labelPlacement,
            rtl = _props7.rtl,
            onResize = _props7.onResize;


        var others = util_obj.pickOthers(StepItem.propTypes, this.props);

        var stepCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'step-item'] = true, _classNames[prefix + 'step-item-' + status] = status, _classNames[prefix + 'step-item-first'] = index === 0, _classNames[prefix + 'step-item-last'] = index === total - 1, _classNames[prefix + 'step-item-disabled'] = disabled, _classNames[prefix + 'step-item-read-only'] = readOnly, _classNames[className] = className, _classNames));

        var overlayCls = status === 'finish' ? { width: '100%' } : null;
        var arrowElement = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            extends_default()({}, others, { style: this.getStyle(), className: stepCls, onClick: this.onClick }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'step-item-container' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'step-item-title' },
                    title
                )
            )
        );
        var otherElement = this.getNode({ others: others, stepCls: stepCls, overlayCls: overlayCls });

        return shape === 'arrow' ? arrowElement : otherElement;
    };

    return StepItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), step_item__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 步骤的状态，如不传，会根据外层的 Step 的 current 属性生成，可选值为 `wait`, `process`, `finish`
     */
    status: _prop_types_15_8_1_prop_types_default.a.oneOf(['wait', 'process', 'finish']),
    /**
     * 标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    labelPlacement: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['circle', 'arrow', 'dot']),
    /**
     * 图标
     */
    icon: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 内容填充, shape为 arrow 时无效
     */
    content: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * StepItem 的自定义渲染, 会覆盖父节点设置的itemRender
     * @param {Number} index   节点索引
     * @param {String} status  节点状态
     * @returns {Node} 节点的渲染结果
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 百分比
     */
    percent: _prop_types_15_8_1_prop_types_default.a.number,
    index: _prop_types_15_8_1_prop_types_default.a.number,
    total: _prop_types_15_8_1_prop_types_default.a.number,
    animation: _prop_types_15_8_1_prop_types_default.a.bool, // 是否开启动效，由父级传入
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    parentWidth: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    parentHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 点击步骤时的回调
     * @param {Number} index 节点索引
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义样式
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    readOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    onResize: _prop_types_15_8_1_prop_types_default.a.func,
    stretch: _prop_types_15_8_1_prop_types_default.a.bool
}), step_item__class.defaultProps = {
    shape: 'circle',
    index: 0,
    total: 1,
    onClick: function onClick() {},
    stretch: false
}, step_item__temp);
step_item_StepItem.displayName = 'StepItem';

/* harmony default export */ var step_item = (config_provider.config(step_item_StepItem));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/step/index.js






view_step.Item = step_item;

/* harmony default export */ var es_step = (config_provider.config(view_step, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'shape', 'Step');

            var _props = props,
                type = _props.type,
                direction = _props.direction,
                labelPlacement = _props.labelPlacement,
                others = objectWithoutProperties_default()(_props, ['type', 'direction', 'labelPlacement']);

            direction = direction === 'vertical' ? 'ver' : direction === 'horizontal' ? 'hoz' : direction;
            labelPlacement = labelPlacement === 'vertical' ? 'ver' : labelPlacement === 'horizontal' ? 'hoz' : labelPlacement;
            props = extends_default()({ shape: type, direction: direction, labelPlacement: labelPlacement }, others);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/switch/index.js






var switch__class, switch__temp;










/** Switch*/
var switch_Switch = (switch__temp = switch__class = function (_React$Component) {
    inherits_default()(Switch, _React$Component);

    function Switch(props, context) {
        classCallCheck_default()(this, Switch);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        var checked = props.checked || props.defaultChecked;
        _this.onChange = _this.onChange.bind(_this);
        _this.onKeyDown = _this.onKeyDown.bind(_this);
        _this.state = {
            checked: checked
        };
        return _this;
    }

    Switch.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if ('checked' in props && props.checked !== state.checked) {
            return {
                checked: !!props.checked
            };
        }

        return null;
    };

    Switch.prototype.onChange = function onChange(ev) {
        var checked = !this.state.checked;

        if (!('checked' in this.props)) {
            this.setState({
                checked: checked
            });
        }
        this.props.onChange(checked, ev);
        this.props.onClick && this.props.onClick(ev);
    };

    Switch.prototype.onKeyDown = function onKeyDown(e) {
        if (e.keyCode === KEYCODE.ENTER || e.keyCode === KEYCODE.SPACE) {
            this.onChange(e);
        }
        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    Switch.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            disabled = _props.disabled,
            readOnly = _props.readOnly,
            size = _props.size,
            loading = _props.loading,
            autoWidth = _props.autoWidth,
            checkedChildren = _props.checkedChildren,
            unCheckedChildren = _props.unCheckedChildren,
            rtl = _props.rtl,
            isPreview = _props.isPreview,
            renderPreview = _props.renderPreview,
            locale = _props.locale,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'disabled', 'readOnly', 'size', 'loading', 'autoWidth', 'checkedChildren', 'unCheckedChildren', 'rtl', 'isPreview', 'renderPreview', 'locale']);

        var checked = this.state.checked;

        var status = checked ? 'on' : 'off';
        var children = checked ? checkedChildren : unCheckedChildren;

        var _size = size;
        if (_size !== 'small' && _size !== 'medium') {
            _size = 'medium';
        }

        var classes = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'switch'] = true, _classNames[prefix + 'switch-loading'] = loading, _classNames[prefix + 'switch-' + status] = true, _classNames[prefix + 'switch-' + _size] = true, _classNames[prefix + 'switch-auto-width'] = autoWidth, _classNames[className] = className, _classNames));
        var attrs = void 0;
        var isDisabled = disabled || readOnly;

        if (!isDisabled) {
            attrs = {
                onClick: this.onChange,
                tabIndex: 0,
                onKeyDown: this.onKeyDown,
                disabled: false
            };
        } else {
            attrs = {
                disabled: true
            };
        }

        if (isPreview) {
            var _classNames2;

            var previewCls = _classnames_2_3_1_classnames_default()(className, (_classNames2 = {}, _classNames2[prefix + 'form-preview'] = true, _classNames2));

            if ('renderPreview' in this.props) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({ className: previewCls }, others),
                    renderPreview(checked, this.props)
                );
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                extends_default()({ className: previewCls }, others),
                children || locale[status]
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                role: 'switch',
                dir: rtl ? 'rtl' : undefined,
                tabIndex: '0'
            }, others, {
                className: classes
            }, attrs, {
                'aria-checked': checked
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'switch-btn' },
                loading && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'loading', className: prefix + 'switch-inner-icon' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'switch-children' },
                children
            )
        );
    };

    return Switch;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), switch__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, switch__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内敛样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 打开时的内容
     */
    checkedChildren: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 关闭时的内容
     */
    unCheckedChildren: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 开关状态改变是触发此事件
     * @param {Boolean} checked 是否为打开状态
     * @param {Event} e DOM事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 开关当前的值(针对受控组件)
     */
    checked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 开关默认值 (针对非受控组件)
     */
    defaultChecked: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 表示开关被禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * loading
     */
    loading: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * switch的尺寸
     * @enumdesc 正常大小, 缩小版大小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['medium', 'small']),
    /**
     * 鼠标点击事件
     * @param {Event} e DOM事件对象
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 键盘按键事件
     * @param {Event} e DOM事件对象
     */
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 开启后宽度根据内容自适应
     * @version 1.23
     */
    autoWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 国际化配置
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object
}, switch__class.defaultProps = {
    prefix: 'next-',
    size: 'medium',
    disabled: false,
    defaultChecked: false,
    isPreview: false,
    loading: false,
    readOnly: false,
    autoWidth: false,
    onChange: function onChange() {},
    locale: locale_zh_cn.Switch
}, switch__temp);
switch_Switch.displayName = 'Switch';


/* harmony default export */ var es_switch = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(switch_Switch)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tab/tabs/utils.js



var triggerEvents = {
    CLICK: 'click',
    HOVER: 'hover'
};

function getOffsetWH(node, tabPosition) {
    var prop = 'width';
    if (tabPosition === 'left' || tabPosition === 'right') {
        prop = 'height';
    }
    return node ? node.getBoundingClientRect()[prop] : 0;
}

function getOffsetLT(node, tabPosition) {
    var prop = 'left';
    if (tabPosition === 'left' || tabPosition === 'right') {
        prop = 'top';
    }
    return node.getBoundingClientRect()[prop];
}

function isTransformSupported(style) {
    return 'transform' in style || 'webkitTransform' in style || 'MozTransform' in style;
}

function toArray(children) {
    var ret = [];
    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(children, function (child, index) {
        if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
            ret.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                key: child.key || index,
                title: child.props.title || child.props.tab
            }));
        }
    });
    return ret;
}

/**
 * tab数组浅比较
 * @param  {Array} arrA   更新后的数组
 * @param  {Array} arrB   原数组
 * @return {Boolean}      数组浅比较是否相等
 * @example
 * arr.tabsArrayShallowEqual(['2','3','4'], ['2','5','4']); // false
 */

function tabsArrayShallowEqual(arrA, arrB) {
    // 相同地址的返回true，不需要更新数据（更新数据的基础是props数据与当前获取的值不同）
    if (arrA === arrB) {
        return true;
    }

    // 判断：调用的值/是否为数组/数组的长度
    if (!arrA || !arrB || (typeof arrA === 'undefined' ? 'undefined' : typeof_default()(arrA)) + (typeof arrB === 'undefined' ? 'undefined' : typeof_default()(arrB)) !== 'objectobject' || arrA.length !== arrB.length) {
        return false;
    }

    // 判断tabs的key与title是否更改
    for (var i = 0; i < arrA.length; i++) {
        if (arrA[i].key !== arrB[i].key || arrA[i].props.title !== arrB[i].props.title) {
            return false;
        }
    }
    return true;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tab/tabs/nav.js





var tabs_nav__class, tabs_nav__temp;












var floatRight = { float: 'right', zIndex: 1 };
var floatLeft = { float: 'left', zIndex: 1 };
var iconTypeMap = {
    dropdown: 'arrow-down',
    prev: 'arrow-left',
    next: 'arrow-right'
};
var nav_Popup = next_es_overlay.Popup;
var tabs_nav_Nav = (tabs_nav__temp = tabs_nav__class = function (_React$Component) {
    inherits_default()(Nav, _React$Component);

    function Nav(props, context) {
        classCallCheck_default()(this, Nav);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        _this.removeTab = function (key, e) {
            e && e.stopPropagation(); // stop bubble, so that it won't trigger upstream listener
            _this.props.onClose(key);
        };

        _this.onCloseKeyDown = function (key, e) {
            if (e.keyCode === KEYCODE.ENTER) {
                e.stopPropagation();
                e.preventDefault();
                _this.props.onClose(key);
            }
        };

        _this.defaultTabTemplateRender = function (key, _ref) {
            var title = _ref.title,
                closeable = _ref.closeable;
            var _this$props = _this.props,
                locale = _this$props.locale,
                prefix = _this$props.prefix;

            var tail = closeable ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                'aria-label': locale.closeAriaLabel,
                type: 'close',
                tabIndex: '0',
                onKeyDown: function onKeyDown(e) {
                    return _this.onCloseKeyDown(key, e);
                },
                onClick: function onClick(e) {
                    return _this.removeTab(key, e);
                },
                className: prefix + 'tabs-tab-close'
            }) : null;
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'tabs-tab-inner' },
                title,
                tail
            );
        };

        _this.scrollToActiveTab = function () {
            if (_this.activeTab && ['slide', 'dropdown'].includes(_this.props.excessMode)) {
                var activeTabWH = getOffsetWH(_this.activeTab);
                var wrapperWH = getOffsetWH(_this.wrapper);
                var activeTabOffset = getOffsetLT(_this.activeTab);
                var wrapperOffset = getOffsetLT(_this.wrapper);
                var target = _this.offset;

                if (activeTabOffset + activeTabWH >= wrapperOffset + wrapperWH || activeTabOffset < wrapperOffset) {
                    _this.setOffset(_this.offset + wrapperOffset - activeTabOffset, true, true);
                    return;
                }
                _this.setOffset(target, true, true);
            }
        };

        _this.onPrevClick = function () {
            var wrapperWH = getOffsetWH(_this.wrapper);
            _this.setOffset(_this.offset + wrapperWH, true, false);
        };

        _this.onNextClick = function () {
            var wrapperWH = getOffsetWH(_this.wrapper);
            _this.setOffset(_this.offset - wrapperWH, true, false);
        };

        _this.onSelectMenuItem = function (keys) {
            var _this$props2 = _this.props,
                onTriggerEvent = _this$props2.onTriggerEvent,
                triggerType = _this$props2.triggerType;

            onTriggerEvent(triggerType, keys[0]);
        };

        _this.onWindowResized = function () {
            if (_this.updateTimer) {
                clearTimeout(_this.updateTimer);
            }

            _this.updateTimer = setTimeout(function () {
                _this.setSlideBtn();
                _this.getDropdownItems(_this.props);
            }, 100);
        };

        _this.navRefHandler = function (ref) {
            _this.nav = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(ref);
        };

        _this.wrapperRefHandler = function (ref) {
            _this.wrapper = ref;
        };

        _this.navbarRefHandler = function (ref) {
            _this.navbar = ref;
        };

        _this.activeTabRefHandler = function (ref) {
            _this.activeTab = ref;
        };

        _this.prevBtnHandler = function (ref) {
            _this.prevBtn = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(ref);
        };

        _this.nextBtnHandler = function (ref) {
            _this.nextBtn = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(ref);
        };

        _this.state = {
            showBtn: false,
            dropdownTabs: []
        };
        _this.offset = 0;
        return _this;
    }

    Nav.prototype.componentDidMount = function componentDidMount() {
        if (!this.props.animation) {
            this.initialSettings();
        }

        util_events.on(window, 'resize', this.onWindowResized);
    };

    Nav.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var _this2 = this;

        // 此处通过延时处理，屏蔽动画带来的定位不准确问题（由于要支持ie9，因此无法使用transitionend）
        clearTimeout(this.scrollTimer);
        this.scrollTimer = setTimeout(function () {
            _this2.scrollToActiveTab();
        }, 410); // transition-duration is set to be .4s, wait for the transition finishes before re-calc

        clearTimeout(this.slideTimer);
        this.slideTimer = setTimeout(function () {
            _this2.setSlideBtn();
        }, 410);

        // 更改tabs后如果有dropdown属性，应该重新执行getDropdownItems函数更新dropdown数据
        if (this.props.excessMode === 'dropdown') {
            if (!tabsArrayShallowEqual(this.props.tabs, prevProps.tabs)) {
                this.getDropdownItems(this.props);
            }
        }
    };

    Nav.prototype.componentWillUnmount = function componentWillUnmount() {
        util_events.off(window, 'resize', this.onWindowResized);
    };

    Nav.prototype.initialSettings = function initialSettings() {
        this.setSlideBtn();
        this.getDropdownItems(this.props);
    };

    /**
     * The key method about move
     * @param {number} target position to slide to
     * @param {bool} checkSlideBtn need to check the slide button status or not
     * @param {bool} setActive need to check the active status or not
     */


    Nav.prototype.setOffset = function setOffset(target) {
        var checkSlideBtn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var setActive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        var _props = this.props,
            tabPosition = _props.tabPosition,
            rtl = _props.rtl;

        var navWH = getOffsetWH(this.nav, tabPosition);
        var wrapperWH = getOffsetWH(this.wrapper);

        // target should not be great than 0, i.e. should not over slide to left-most
        target = target >= 0 ? 0 : target;
        // when need to slide, should not slide to exceed right-most
        target = target <= wrapperWH - navWH && wrapperWH - navWH < 0 ? wrapperWH - navWH : target;

        var relativeOffset = target - this.offset;
        if (this.activeTab && this.props.excessMode === 'slide' && setActive) {
            var activeTabWH = getOffsetWH(this.activeTab);
            var activeTabOffset = getOffsetLT(this.activeTab) + relativeOffset;
            var wrapperOffset = getOffsetLT(this.wrapper);
            target = this._adjustTarget({
                wrapperOffset: wrapperOffset,
                wrapperWH: wrapperWH,
                activeTabWH: activeTabWH,
                activeTabOffset: activeTabOffset,
                rtl: rtl,
                target: target
            });
        }

        var scaleRate = 1;

        if (this.nav && this.nav.offsetWidth) {
            scaleRate = getOffsetWH(this.nav) / this.nav.offsetWidth;
        }

        var _ov = target / scaleRate;
        var offsetValue = isNaN(_ov) ? target : _ov;

        if (this.offset !== target && this.nav) {
            // needs move
            this.offset = target;
            var divScroll = this.nav.parentElement;

            if (tabPosition === 'left' || tabPosition === 'right') {
                divScroll.scrollTo({ top: -offsetValue, left: 0, behavior: 'smooth' });
            } else if (!this.props.rtl) {
                divScroll.scrollTo({ top: 0, left: -offsetValue, behavior: 'smooth' });
            } else {
                divScroll.scrollTo({ top: 0, left: offsetValue, behavior: 'smooth' });
            }

            if (checkSlideBtn) {
                this.setSlideBtn();
            }
        }
    };

    Nav.prototype._adjustTarget = function _adjustTarget(_ref2) {
        var wrapperOffset = _ref2.wrapperOffset,
            wrapperWH = _ref2.wrapperWH,
            activeTabWH = _ref2.activeTabWH,
            activeTabOffset = _ref2.activeTabOffset,
            rtl = _ref2.rtl,
            target = _ref2.target;

        if (
        // active tab covers wrapper right edge
        wrapperOffset + wrapperWH < activeTabOffset + activeTabWH && activeTabOffset < wrapperOffset + wrapperWH) {
            if (rtl) {
                target += activeTabOffset + activeTabWH - (wrapperOffset + wrapperWH); // Move more to make active tab totally in visible zone
            } else {
                target -= activeTabOffset + activeTabWH - (wrapperOffset + wrapperWH) + 1;
            }

            return target;
        }
        if (
        // active tab covers wrapper left edge
        wrapperOffset < activeTabOffset + activeTabWH && activeTabOffset < wrapperOffset) {
            if (rtl) {
                target -= wrapperOffset - activeTabOffset + 1;
            } else {
                target += wrapperOffset - activeTabOffset;
            }
            return target;
        }
        return target;
    };

    Nav.prototype._setBtnStyle = function _setBtnStyle(prev, next) {
        if (this.prevBtn && this.nextBtn) {
            var cls = 'disabled';
            this.prevBtn.disabled = !prev;
            this.nextBtn.disabled = !next;
            if (prev) {
                util_dom.removeClass(this.prevBtn, cls);
            } else {
                util_dom.addClass(this.prevBtn, cls);
            }
            if (next) {
                util_dom.removeClass(this.nextBtn, cls);
            } else {
                util_dom.addClass(this.nextBtn, cls);
            }
        }
    };

    Nav.prototype.setSlideBtn = function setSlideBtn() {
        var tabPosition = this.props.tabPosition;

        // TEMP: 这里会受 Animate 影响，re-render 过程中 this.nav 实际上指向的是上次的 tabList 元素，建议暂时关闭 animation 解决

        var navWH = getOffsetWH(this.nav, tabPosition);
        var wrapperWH = getOffsetWH(this.wrapper, tabPosition);
        var minOffset = wrapperWH - navWH;

        var next = void 0;
        var prev = void 0;
        if (minOffset >= 0 || navWH <= wrapperWH) {
            next = false;
            prev = false;
            this.setOffset(0, false); // no need to check slide again since this call is invoked from inside setSlideBtn
        } else if (this.offset < 0 && this.offset <= minOffset) {
            prev = true;
            next = false;
        } else if (this.offset >= 0) {
            prev = false;
            next = true;
        } else {
            prev = true;
            next = true;
        }

        if ((prev || next) !== this.state.showBtn) {
            this.setState({
                showBtn: prev || next
            });
        } else {
            this._setBtnStyle(prev, next);
        }
    };

    Nav.prototype.getDropdownItems = function getDropdownItems(_ref3) {
        var excessMode = _ref3.excessMode,
            tabs = _ref3.tabs;

        if (excessMode !== 'dropdown') {
            return;
        }

        var wrapperWidth = this.wrapper.offsetWidth;
        var childNodes = this.nav.childNodes;

        var index = void 0;
        var tabsWidth = 0;
        for (index = 0; index < tabs.length; index++) {
            tabsWidth += childNodes[index].offsetWidth;
            if (tabsWidth > wrapperWidth) {
                break;
            }
        }

        if (index === tabs.length) {
            this.setState({
                dropdownTabs: []
            });
        } else {
            this.setState({
                dropdownTabs: tabs
            });
        }
    };

    Nav.prototype.renderTabList = function renderTabList(props) {
        var _this3 = this;

        var prefix = props.prefix,
            tabs = props.tabs,
            activeKey = props.activeKey,
            tabRender = props.tabRender;

        var tabTemplateFn = tabRender || this.defaultTabTemplateRender;

        var rst = [];
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(tabs, function (child) {
            var _classnames;

            var _child$props = child.props,
                disabled = _child$props.disabled,
                className = _child$props.className,
                onClick = _child$props.onClick,
                onMouseEnter = _child$props.onMouseEnter,
                onMouseLeave = _child$props.onMouseLeave,
                style = _child$props.style;


            var active = activeKey === child.key;
            var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'tabs-tab'] = true, _classnames.disabled = disabled, _classnames.active = active, _classnames), className);

            var events = {};

            if (!disabled) {
                events = {
                    onClick: _this3.onNavItemClick.bind(_this3, child.key, onClick),
                    onMouseEnter: _this3.onNavItemMouseEnter.bind(_this3, child.key, onMouseEnter),
                    onMouseLeave: _this3.onNavItemMouseLeave.bind(_this3, child.key, onMouseLeave)
                };
            }

            var dataProps = util_obj.pickAttrsWith(child.props, 'data-');

            rst.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'li',
                extends_default()({}, dataProps, {
                    role: 'tab',
                    key: child.key,
                    ref: active ? _this3.activeTabRefHandler : null,
                    'aria-hidden': disabled ? 'true' : 'false',
                    'aria-selected': active ? 'true' : 'false',
                    tabIndex: active ? 0 : -1,
                    className: cls,
                    style: style
                }, events),
                tabTemplateFn(child.key, child.props)
            ));
        });
        return rst;
    };

    Nav.prototype.onNavItemClick = function onNavItemClick(key, callback, e) {
        this.props.onTriggerEvent(triggerEvents.CLICK, key);
        if (callback) {
            return callback(key, e);
        }
    };

    Nav.prototype.onNavItemMouseEnter = function onNavItemMouseEnter(key, callback, e) {
        this.props.onTriggerEvent(triggerEvents.HOVER, key);
        if (callback) {
            return callback(key, e);
        }
    };

    Nav.prototype.onNavItemMouseLeave = function onNavItemMouseLeave(key, callback, e) {
        if (callback) {
            return callback(key, e);
        }
    };

    Nav.prototype.getIcon = function getIcon(type) {
        var _props2 = this.props,
            prefix = _props2.prefix,
            icons = _props2.icons,
            rtl = _props2.rtl;

        var iconType = iconTypeMap[type];
        var icon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: iconType, rtl: rtl, className: prefix + 'tab-icon-' + type });
        if (icons[type]) {
            icon = typeof icons[type] === 'string' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { rtl: rtl, type: icons[type] }) : icons[type];
        }

        return icon;
    };

    Nav.prototype.renderDropdownTabs = function renderDropdownTabs() {
        var _this4 = this;

        var tabs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        if (!tabs.length) {
            return null;
        }

        var _props3 = this.props,
            prefix = _props3.prefix,
            activeKey = _props3.activeKey,
            triggerType = _props3.triggerType,
            popupProps = _props3.popupProps,
            rtl = _props3.rtl;

        var dropdownIcon = this.getIcon('dropdown');

        var trigger = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'button',
            { className: prefix + 'tabs-btn-down' },
            dropdownIcon
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            nav_Popup,
            extends_default()({
                rtl: rtl,
                triggerType: triggerType,
                trigger: trigger,
                container: function container(target) {
                    return target.parentNode;
                },
                className: prefix + 'tabs-bar-popup'
            }, popupProps),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_menu,
                { rtl: rtl, selectedKeys: [activeKey], onSelect: this.onSelectMenuItem, selectMode: 'single' },
                tabs.map(function (tab) {
                    var _tab$props = tab.props,
                        disabled = _tab$props.disabled,
                        onClick = _tab$props.onClick,
                        onMouseEnter = _tab$props.onMouseEnter,
                        onMouseLeave = _tab$props.onMouseLeave;

                    var events = {};
                    if (!disabled) {
                        events = {
                            onClick: _this4.onNavItemClick.bind(_this4, tab.key, onClick),
                            onMouseEnter: _this4.onNavItemMouseEnter.bind(_this4, tab.key, onMouseEnter),
                            onMouseLeave: _this4.onNavItemMouseLeave.bind(_this4, tab.key, onMouseLeave)
                        };
                    }
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        es_menu.Item,
                        extends_default()({ key: tab.key }, events),
                        tab.props.title
                    );
                })
            )
        );
    };

    Nav.prototype.render = function render() {
        var _classnames2;

        var _props4 = this.props,
            prefix = _props4.prefix,
            tabPosition = _props4.tabPosition,
            excessMode = _props4.excessMode,
            extra = _props4.extra,
            onKeyDown = _props4.onKeyDown,
            animation = _props4.animation,
            style = _props4.style,
            className = _props4.className,
            rtl = _props4.rtl;

        var state = this.state;
        var nextButton = void 0;
        var prevButton = void 0;
        var restButton = void 0;

        var showNextPrev = state.showBtn;

        if (excessMode === 'dropdown' && showNextPrev && state.dropdownTabs.length) {
            restButton = this.renderDropdownTabs(state.dropdownTabs);
            prevButton = null;
            nextButton = null;
        } else if (showNextPrev) {
            var prevIcon = this.getIcon('prev');
            prevButton = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    onClick: this.onPrevClick,
                    className: prefix + 'tabs-btn-prev',
                    ref: this.prevBtnHandler,
                    type: 'button'
                },
                prevIcon
            );

            var nextIcon = this.getIcon('next');

            nextButton = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'button',
                {
                    onClick: this.onNextClick,
                    className: prefix + 'tabs-btn-next',
                    ref: this.nextBtnHandler,
                    type: 'button'
                },
                nextIcon
            );
            restButton = null;
        } else {
            nextButton = null;
            prevButton = null;
            restButton = null;
        }

        var containerCls = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'tabs-nav-container'] = true, _classnames2[prefix + 'tabs-nav-container-scrolling'] = showNextPrev, _classnames2));

        var navCls = prefix + 'tabs-nav';
        var tabList = this.renderTabList(this.props);

        var container = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: containerCls, onKeyDown: onKeyDown, key: 'nav-container' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'tabs-nav-wrap', ref: this.wrapperRefHandler },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'tabs-nav-scroll' },
                    animation ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        es_animate,
                        {
                            role: 'tablist',
                            'aria-multiselectable': false,
                            component: 'ul',
                            className: navCls,
                            animation: navCls,
                            singleMode: false,
                            ref: this.navRefHandler,
                            afterAppear: this.initialSettings.bind(this)
                        },
                        tabList
                    ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'ul',
                        {
                            role: 'tablist',
                            className: navCls + ' ' + prefix + 'disable-animation',
                            ref: this.navRefHandler
                        },
                        tabList
                    )
                )
            ),
            prevButton,
            nextButton,
            restButton
        );

        var navChildren = [container];

        if (extra) {
            var extraProps = {
                className: prefix + 'tabs-nav-extra',
                key: 'nav-extra'
            };
            if (tabPosition === 'top' || tabPosition === 'bottom') {
                var _style = rtl ? floatLeft : floatRight;
                navChildren.unshift(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extends_default()({}, extraProps, { style: _style }),
                    extra
                ));
            } else {
                navChildren.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    extraProps,
                    extra
                ));
            }
        }

        var navbarCls = _classnames_2_3_1_classnames_default()(prefix + 'tabs-bar', className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: navbarCls, style: style, ref: this.navbarRefHandler },
            navChildren
        );
    };

    return Nav;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), tabs_nav__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    animation: _prop_types_15_8_1_prop_types_default.a.bool,
    activeKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    excessMode: _prop_types_15_8_1_prop_types_default.a.string,
    extra: _prop_types_15_8_1_prop_types_default.a.any,
    tabs: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.array, _prop_types_15_8_1_prop_types_default.a.object]),
    tabPosition: _prop_types_15_8_1_prop_types_default.a.string,
    tabRender: _prop_types_15_8_1_prop_types_default.a.func,
    triggerType: _prop_types_15_8_1_prop_types_default.a.string,
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    onTriggerEvent: _prop_types_15_8_1_prop_types_default.a.func,
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    icons: _prop_types_15_8_1_prop_types_default.a.object
}, tabs_nav__temp);
tabs_nav_Nav.displayName = 'Nav';


/* harmony default export */ var tabs_nav = (tabs_nav_Nav);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tab/tabs/content.js






var tabs_content__class, tabs_content__temp;





var content_TabContent = (tabs_content__temp = tabs_content__class = function (_PureComponent) {
    inherits_default()(TabContent, _PureComponent);

    function TabContent() {
        classCallCheck_default()(this, TabContent);

        return possibleConstructorReturn_default()(this, _PureComponent.apply(this, arguments));
    }

    TabContent.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            activeKey = _props.activeKey,
            lazyLoad = _props.lazyLoad,
            unmountInactiveTabs = _props.unmountInactiveTabs,
            children = _props.children,
            className = _props.className,
            others = objectWithoutProperties_default()(_props, ['prefix', 'activeKey', 'lazyLoad', 'unmountInactiveTabs', 'children', 'className']);

        var formatChildren = [];
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(children, function (child) {
            /* eslint-disable eqeqeq */
            var active = activeKey == child.key;
            formatChildren.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                prefix: prefix,
                active: active,
                lazyLoad: lazyLoad,
                unmountInactiveTabs: unmountInactiveTabs
            }));
        });

        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'tabs-content'] = true, _classnames), className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, others, { className: classNames }),
            formatChildren
        );
    };

    return TabContent;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["PureComponent"]), tabs_content__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    activeKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.number]),
    lazyLoad: _prop_types_15_8_1_prop_types_default.a.bool,
    children: _prop_types_15_8_1_prop_types_default.a.any
}, tabs_content__temp);


/* harmony default export */ var tabs_content = (content_TabContent);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tab/tab.js






var tab__class, tab__temp;











var tab_noop = function noop() {};

/** Tab */
var tab_Tab = (tab__temp = tab__class = function (_Component) {
    inherits_default()(Tab, _Component);

    function Tab(props, context) {
        classCallCheck_default()(this, Tab);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this.handleTriggerEvent = function (eventType, key) {
            var _this$props = _this.props,
                triggerType = _this$props.triggerType,
                onClick = _this$props.onClick,
                onChange = _this$props.onChange;

            if (triggerType === eventType) {
                onClick(key);
                _this.setActiveKey(key);
                if (_this.state.activeKey !== key) {
                    onChange(key);
                }
            }
        };

        _this.onNavKeyDown = function (e) {
            var keyCode = e.keyCode;
            var disableKeyboard = _this.props.disableKeyboard;


            if (disableKeyboard) {
                return;
            }

            if (keyCode >= KEYCODE.LEFT && keyCode <= KEYCODE.DOWN) {
                e.preventDefault();
            }

            var newKey = void 0;
            if (keyCode === KEYCODE.RIGHT || keyCode === KEYCODE.DOWN) {
                newKey = _this.getNextActiveKey(true);
                _this.handleTriggerEvent(_this.props.triggerType, newKey);
            } else if (keyCode === KEYCODE.LEFT || keyCode === KEYCODE.UP) {
                newKey = _this.getNextActiveKey(false);
                _this.handleTriggerEvent(_this.props.triggerType, newKey);
            }
        };

        _this.state = {
            activeKey: _this.getDefaultActiveKey(props)
        };
        return _this;
    }

    Tab.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.activeKey !== undefined && state.activeKey !== '' + props.activeKey) {
            return {
                activeKey: '' + props.activeKey
            };
        }

        return {};
    };

    Tab.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var preChildLen = prevProps.children && prevProps.children.length || 0;
        var curChildLen = this.props.children && this.props.children.length || 0;
        if (preChildLen !== 0 && curChildLen !== 0 && !('activeKey' in this.props) & !this.isActiveKeyExist(this.state.activeKey)) {
            var activeKey = this.getDefaultActiveKey(this.props);
            if (activeKey) {
                // eslint-disable-next-line react/no-did-update-set-state
                this.setState({
                    activeKey: activeKey
                });
            }
        }
    };

    Tab.prototype.getDefaultActiveKey = function getDefaultActiveKey(props) {
        var activeKey = props.activeKey === undefined ? props.defaultActiveKey : props.activeKey;

        if (activeKey === undefined) {
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(props.children, function (child, index) {
                if (activeKey !== undefined) return;
                if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
                    if (!child.props.disabled) {
                        activeKey = child.key || index;
                    }
                }
            });
        }

        return activeKey !== undefined ? '' + activeKey : undefined;
    };

    Tab.prototype.getNextActiveKey = function getNextActiveKey(isNext) {
        var _this2 = this;

        var children = [];
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(this.props.children, function (child) {
            if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
                if (!child.props.disabled) {
                    if (isNext) {
                        children.push(child);
                    } else {
                        children.unshift(child);
                    }
                }
            }
        });

        var length = children.length;
        var key = length && children[0].key;
        children.forEach(function (child, i) {
            if (child.key === _this2.state.activeKey) {
                if (i === length - 1) {
                    key = children[0].key;
                } else {
                    key = children[i + 1].key;
                }
            }
        });
        return key;
    };

    Tab.prototype.isActiveKeyExist = function isActiveKeyExist(activeKey) {
        var exist = false;
        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(this.props.children, function (child, index) {
            if (exist) return;
            if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
                if (!child.props.disabled) {
                    var key = child.key || index;
                    if (activeKey === '' + key) {
                        exist = true;
                    }
                }
            }
        });
        return exist;
    };

    Tab.prototype.setActiveKey = function setActiveKey(key) {
        var activeKey = this.state.activeKey;

        // 如果 key 没变，或者受控状态下，则跳过

        if (key === activeKey || 'activeKey' in this.props) {
            return;
        }
        this.setState({
            activeKey: key
        });
    };

    Tab.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            animation = _props.animation,
            shape = _props.shape,
            size = _props.size,
            extra = _props.extra,
            excessMode = _props.excessMode,
            tabPosition = _props.tabPosition,
            tabRender = _props.tabRender,
            triggerType = _props.triggerType,
            lazyLoad = _props.lazyLoad,
            unmountInactiveTabs = _props.unmountInactiveTabs,
            popupProps = _props.popupProps,
            navStyle = _props.navStyle,
            navClassName = _props.navClassName,
            contentStyle = _props.contentStyle,
            contentClassName = _props.contentClassName,
            className = _props.className,
            onClose = _props.onClose,
            children = _props.children,
            rtl = _props.rtl,
            device = _props.device,
            locale = _props.locale,
            icons = _props.icons,
            others = objectWithoutProperties_default()(_props, ['prefix', 'animation', 'shape', 'size', 'extra', 'excessMode', 'tabPosition', 'tabRender', 'triggerType', 'lazyLoad', 'unmountInactiveTabs', 'popupProps', 'navStyle', 'navClassName', 'contentStyle', 'contentClassName', 'className', 'onClose', 'children', 'rtl', 'device', 'locale', 'icons']);

        var activeKey = this.state.activeKey;


        var tabs = toArray(children);
        var newPosition = tabPosition;
        if (rtl && ['left', 'right'].indexOf(tabPosition) >= 0) {
            newPosition = tabPosition === 'left' ? 'right' : 'left';
        }
        var classNames = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'tabs'] = true, _classnames[prefix + 'tabs-' + shape] = shape, _classnames[prefix + 'tabs-vertical'] = shape === 'wrapped' && ['left', 'right'].indexOf(tabPosition) >= 0, _classnames[prefix + 'tabs-scrollable'] = true, _classnames[prefix + 'tabs-' + newPosition] = shape === 'wrapped', _classnames['' + (prefix + size)] = size, _classnames), className);

        var navProps = {
            prefix: prefix,
            rtl: rtl,
            animation: animation,
            activeKey: activeKey,
            excessMode: excessMode,
            extra: extra,
            tabs: tabs,
            tabPosition: tabPosition,
            tabRender: tabRender,
            triggerType: triggerType,
            popupProps: popupProps,
            onClose: onClose,
            onTriggerEvent: this.handleTriggerEvent,
            onKeyDown: this.onNavKeyDown,
            style: navStyle,
            className: navClassName,
            locale: locale,
            icons: icons
        };

        var contentProps = {
            prefix: prefix,
            activeKey: activeKey,
            lazyLoad: lazyLoad,
            unmountInactiveTabs: unmountInactiveTabs,
            style: contentStyle,
            className: contentClassName
        };

        var tabChildren = [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(tabs_nav, extends_default()({ key: 'tab-nav' }, navProps)), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            tabs_content,
            extends_default()({ key: 'tab-content' }, contentProps),
            tabs
        )];

        if (tabPosition === 'bottom') {
            tabChildren.reverse();
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ dir: rtl ? 'rtl' : undefined, className: classNames }, util_obj.pickOthers(Tab.propTypes, others)),
            tabChildren
        );
    };

    return Tab;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tab__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    device: _prop_types_15_8_1_prop_types_default.a.oneOf(['tablet', 'desktop', 'phone']),
    /**
     * 被激活的选项卡的 key, 赋值则tab为受控组件, 用户无法切换
     */
    activeKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 初始化时被激活的选项卡的 key
     */
    defaultActiveKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 外观形态
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['pure', 'wrapped', 'text', 'capsule']),
    /**
     * 是否开启动效
     */
    animation: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 选项卡过多时的滑动模式
     */
    excessMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['slide', 'dropdown']),
    /**
     * 导航选项卡的位置，只适用于包裹型（wrapped）选项卡
     */
    tabPosition: _prop_types_15_8_1_prop_types_default.a.oneOf(['top', 'bottom', 'left', 'right']),
    /**
     * 尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium']),
    /**
     * 激活选项卡的触发方式
     */
    triggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['hover', 'click']),
    /**
     * 是否延迟加载 TabItem 的内容, 默认开启, 即不提前渲染
     */
    lazyLoad: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否自动卸载未处于激活状态的选项卡
     */
    unmountInactiveTabs: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 导航条的自定义样式
     */
    navStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 导航条的自定义样式类
     */
    navClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 内容区容器的自定义样式
     */
    contentStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 内容区容器的自定义样式类
     */
    contentClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 导航栏附加内容
     */
    extra: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 禁止键盘事件，设置后无法通过键盘的上下左右按键，切换当前选中的tab
     */
    disableKeyboard: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 点击单个选项卡时触发的回调
     */
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选项卡发生切换时的事件回调
     * @param {String|Number} key 改变后的 key
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选项卡被关闭时的事件回调
     * @param {String|Number} key   关闭的选项卡的 key
     */
    onClose: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义选项卡模板渲染函数
     * @param {String} key 当前 Tab.Item 的 key 值
     * @param {Object} props 传给 Tab.Item 的所有属性键值对
     * @return {ReactNode} 返回自定义组件
     */
    tabRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层属性透传, 只有当 excessMode 为 dropdown 时生效
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义组件内 icon
     */
    icons: _prop_types_15_8_1_prop_types_default.a.shape({
        prev: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.string]),
        next: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.string]),
        dropdown: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.string])
    })
}, tab__class.defaultProps = {
    prefix: 'next-',
    shape: 'pure',
    size: 'medium',
    animation: true,
    tabPosition: 'top',
    excessMode: 'slide',
    triggerType: 'click',
    lazyLoad: true,
    unmountInactiveTabs: false,
    disableKeyboard: false,
    onClick: tab_noop,
    onChange: tab_noop,
    onClose: tab_noop,
    locale: locale_zh_cn.Tab,
    icons: {}
}, tab__temp);
tab_Tab.displayName = 'Tab';


/* harmony default export */ var tab_tab = (Object(react_lifecycles_compat_es["polyfill"])(tab_Tab));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tab/tabs/tab-item.js




var tab_item__class, tab_item__temp;






/** Tab.Item */
var tab_item_TabItem = (tab_item__temp = tab_item__class = function (_React$Component) {
    inherits_default()(TabItem, _React$Component);

    function TabItem() {
        classCallCheck_default()(this, TabItem);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    TabItem.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            active = _props.active,
            lazyLoad = _props.lazyLoad,
            unmountInactiveTabs = _props.unmountInactiveTabs,
            children = _props.children;


        this._actived = this._actived || active;
        if (lazyLoad && !this._actived) {
            return null;
        }

        if (unmountInactiveTabs && !active) {
            return null;
        }

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'tabs-tabpane'] = true, _classnames['' + (active ? 'active' : 'hidden')] = true, _classnames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                role: 'tabpanel',
                'aria-hidden': active ? 'false' : 'true',
                className: cls
            },
            children
        );
    };

    return TabItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), tab_item__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 选项卡标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 单个选项卡是否可关闭
     */
    closeable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 选项卡是否被禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    active: _prop_types_15_8_1_prop_types_default.a.bool,
    lazyLoad: _prop_types_15_8_1_prop_types_default.a.bool,
    unmountInactiveTabs: _prop_types_15_8_1_prop_types_default.a.bool,
    children: _prop_types_15_8_1_prop_types_default.a.any
}, tab_item__class.defaultProps = {
    prefix: 'next-',
    closeable: false
}, tab_item__temp);
tab_item_TabItem.displayName = 'TabItem';


/* harmony default export */ var tab_item = (Object(react_lifecycles_compat_es["polyfill"])(tab_item_TabItem));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tab/index.js






tab_tab.Item = tab_item;

tab_tab.TabPane = config_provider.config(tab_item, {
    transform: function transform(props, deprecated) {
        deprecated('Tab.TabPane', 'Tab.Item', 'Tab');
        return props;
    }
});

/* harmony default export */ var es_tab = (config_provider.config(tab_tab, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'shape', 'Tab');

            var _props = props,
                type = _props.type,
                others = objectWithoutProperties_default()(_props, ['type']);

            props = extends_default()({ shape: type }, others);
        }
        if ('resDirection' in props) {
            var _props2 = props,
                resDirection = _props2.resDirection,
                _others = objectWithoutProperties_default()(_props2, ['resDirection']);

            var excessMode = void 0;
            if (resDirection === 'horizontal') {
                deprecated('resDirection=horizontal', 'excessMode=slide', 'Tab');

                excessMode = 'slide';
            } else if (resDirection === 'vertical') {
                deprecated('resDirection=vertical', 'excessMode=dropdown', 'Tab');

                excessMode = 'dropdown';
            }
            props = extends_default()({ excessMode: excessMode }, _others);
        }
        if ('tabBarExtraContent' in props) {
            deprecated('tabBarExtraContent', 'extra', 'Tab');

            var _props3 = props,
                tabBarExtraContent = _props3.tabBarExtraContent,
                _others2 = objectWithoutProperties_default()(_props3, ['tabBarExtraContent']);

            props = extends_default()({ extra: tabBarExtraContent }, _others2);
        }

        return props;
    }
}));
// EXTERNAL MODULE: ./node_modules/_shallow-element-equals@1.0.1@shallow-element-equals/index.js
var _shallow_element_equals_1_0_1_shallow_element_equals = __webpack_require__(51);
var _shallow_element_equals_1_0_1_shallow_element_equals_default = /*#__PURE__*/__webpack_require__.n(_shallow_element_equals_1_0_1_shallow_element_equals);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/util.js




var blackList = ['defaultProps', 'propTypes', 'contextTypes', 'childContextTypes', 'displayName', 'getDerivedStateFromProps'];

var statics = function statics(Target, Component) {
    Object.keys(Component).forEach(function (property) {
        if (blackList.indexOf(property) === -1) {
            Target[property] = Component[property];
        }
    });
};

var util_fetchDataByPath = function fetchDataByPath(object, path) {
    if (!object || !path) {
        return false;
    }
    path = path.toString();
    var field = path.split('.');
    var val = void 0,
        key = void 0;
    if (field.length) {
        key = field[0];
        // lists[1].name
        if (key.indexOf('[') >= 0) {
            key = key.match(/(.*)\[(.*)\]/);
            if (key && typeof_default()(key[1]) === 'object' && typeof_default()(object[key[1]]) === 'object') {
                val = object[key[1]][key[2]];
            }
        } else {
            val = object[field[0]];
        }
        if (val) {
            for (var colIndex = 1; colIndex < field.length; colIndex++) {
                val = val[field[colIndex]];
                if (typeof val === 'undefined') {
                    break;
                }
            }
        }
    }
    return val;
};

/**
 * @param {Array} lockChildren
 * @param {String} dir 'left', 'right'
 */
var util_setStickyStyle = function setStickyStyle(lockChildren, flatenChildren, dir) {
    var offsetArr = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
    var prefix = arguments[4];

    var len = flatenChildren.length;

    flatenChildren.forEach(function (col, index) {
        var _classnames;

        var isLeftLast = dir === 'left' && index === len - 1;
        var isRightFirst = dir === 'right' && index === 0;
        var style = {
            position: 'sticky'
        };
        var offset = offsetArr[index];

        if (offset > -1) {
            style[dir] = offset;
        }

        col.className = _classnames_2_3_1_classnames_default()(col.className, (_classnames = {}, _classnames[prefix + 'table-fix-' + dir] = true, _classnames[prefix + 'table-fix-left-last'] = isLeftLast, _classnames[prefix + 'table-fix-right-first'] = isRightFirst, _classnames));
        col.style = extends_default()({}, col.style, style);
        col.cellStyle = style;
    });

    var setOffset = function setOffset(col, index, dir, isBorder) {
        var _classnames2;

        var style = {
            position: 'sticky'
        };
        var offset = offsetArr[index];

        if (offset > -1) {
            style[dir] = offset;
        }

        col.className = _classnames_2_3_1_classnames_default()(col.className, (_classnames2 = {}, _classnames2[prefix + 'table-fix-' + dir] = true, _classnames2[prefix + 'table-fix-left-last'] = dir === 'left' && isBorder, _classnames2[prefix + 'table-fix-right-first'] = dir === 'right' && isBorder, _classnames2));
        col.style = extends_default()({}, col.style, style);
        col.cellStyle = style;
    };

    // 查看当前元素的叶子结点数量
    var getLeafNodes = function getLeafNodes(node) {
        var nodesLen = 0;
        var arrLen = Array.isArray(node && node.children) && node.children.length || 0;
        if (arrLen > 0) {
            nodesLen = node.children.reduce(function (ret, item, idx) {
                return ret + getLeafNodes(item.children);
            }, 0);
        } else {
            nodesLen = 1;
        }
        return nodesLen;
    };

    var getPreNodes = function getPreNodes(arr, idx) {
        return arr.reduce(function (ret, item, i) {
            if (i < idx) {
                return ret + getLeafNodes(item);
            }
            return ret;
        }, 0);
    };

    // for multiple header
    // nodesLen 前序叶子结点数
    var loop = function loop(arr, i) {
        dir === 'right' && arr.reverse();
        arr.forEach(function (child, j) {
            var p = dir === 'right' ? i - getPreNodes(arr, j) : i + getPreNodes(arr, j);
            if (child.children) {
                // 合并单元格的节点
                loop(child.children, p);
                // 查询当前元素下的 前序叶子结点数 比如为n
                // const isBorder = (dir === 'right' && j === 0) || (dir === 'left' && j === (arr.length - 1));
                setOffset(child, p, dir, j === arr.length - 1);
            }
        });
        dir === 'right' && arr.reverse();
    };

    loop(lockChildren, dir === 'left' ? 0 : len - 1);
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/row.js






var base_row__class, row__temp2;








var row_noop = function noop() {};

var base_row_Row = (row__temp2 = base_row__class = function (_React$Component) {
    inherits_default()(Row, _React$Component);

    function Row() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Row);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onClick = function (e) {
            var _this$props = _this.props,
                record = _this$props.record,
                rowIndex = _this$props.rowIndex;

            _this.props.onClick(record, rowIndex, e);
        }, _this.onMouseEnter = function (e) {
            var _this$props2 = _this.props,
                record = _this$props2.record,
                rowIndex = _this$props2.rowIndex,
                __rowIndex = _this$props2.__rowIndex;

            var row = __rowIndex || rowIndex;
            _this.onRowHover(record, row, true, e);
        }, _this.onMouseLeave = function (e) {
            var _this$props3 = _this.props,
                record = _this$props3.record,
                rowIndex = _this$props3.rowIndex,
                __rowIndex = _this$props3.__rowIndex;

            var row = __rowIndex || rowIndex;
            _this.onRowHover(record, row, false, e);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Row.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        if (nextProps.pure) {
            var isEqual = util_obj.shallowEqual(this.props, nextProps);
            return !isEqual;
        }

        return true;
    };

    Row.prototype.onRowHover = function onRowHover(record, index, isEnter, e) {
        var _props = this.props,
            onMouseEnter = _props.onMouseEnter,
            onMouseLeave = _props.onMouseLeave,
            currentRow = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);

        if (isEnter) {
            onMouseEnter(record, index, e);
            currentRow && util_dom.addClass(currentRow, 'hovered');
        } else {
            onMouseLeave(record, index, e);
            currentRow && util_dom.removeClass(currentRow, 'hovered');
        }
    };

    Row.prototype.renderCells = function renderCells(record, rowIndex) {
        var _this2 = this;

        var _props2 = this.props,
            Cell = _props2.Cell,
            columns = _props2.columns,
            getCellProps = _props2.getCellProps,
            cellRef = _props2.cellRef,
            prefix = _props2.prefix,
            primaryKey = _props2.primaryKey,
            __rowIndex = _props2.__rowIndex,
            pure = _props2.pure,
            locale = _props2.locale,
            rtl = _props2.rtl;

        // use params first, it's for list

        rowIndex = rowIndex !== undefined ? rowIndex : this.props.rowIndex;

        var lockType = this.context.lockType;

        return columns.map(function (child, index) {
            var _classnames;

            /* eslint-disable no-unused-vars, prefer-const */
            var dataIndex = child.dataIndex,
                align = child.align,
                alignHeader = child.alignHeader,
                width = child.width,
                colSpan = child.colSpan,
                style = child.style,
                cellStyle = child.cellStyle,
                __colIndex = child.__colIndex,
                others = objectWithoutProperties_default()(child, ['dataIndex', 'align', 'alignHeader', 'width', 'colSpan', 'style', 'cellStyle', '__colIndex']);

            var colIndex = '__colIndex' in child ? __colIndex : index;
            // colSpan should show in body td by the way of <Table.Column colSpan={2} />
            // tbody's cell merge should only by the way of <Table cellProps={} />

            var value = util_fetchDataByPath(record, dataIndex);
            var attrs = getCellProps(rowIndex, colIndex, dataIndex, record) || {};

            if (_this2.context.notRenderCellIndex) {
                var matchCellIndex = _this2.context.notRenderCellIndex.map(function (cellIndex) {
                    return cellIndex.toString();
                }).indexOf([rowIndex, colIndex].toString());
                if (matchCellIndex > -1) {
                    _this2.context.notRenderCellIndex.splice(matchCellIndex, 1);
                    return null;
                }
            }
            if (attrs.colSpan && attrs.colSpan > 1 || attrs.rowSpan && attrs.rowSpan > 1) {
                _this2._getNotRenderCellIndex(colIndex, rowIndex, attrs.colSpan || 1, attrs.rowSpan || 1);
            }

            var cellClass = attrs.className;
            var className = _classnames_2_3_1_classnames_default()((_classnames = {
                first: lockType !== 'right' && colIndex === 0,
                last: lockType !== 'left' && (colIndex === columns.length - 1 || colIndex + attrs.colSpan === columns.length) }, _classnames[child.className] = child.className, _classnames[cellClass] = cellClass, _classnames));

            var newStyle = extends_default()({}, attrs.style, cellStyle);

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Cell, extends_default()({
                key: __rowIndex + '-' + colIndex
            }, others, attrs, {
                style: newStyle,
                'data-next-table-col': colIndex,
                'data-next-table-row': rowIndex,
                ref: function ref(cell) {
                    return cellRef(__rowIndex, colIndex, cell);
                },
                prefix: prefix,
                pure: pure,
                primaryKey: primaryKey,
                record: record,
                className: className,
                value: value,
                colIndex: colIndex,
                rowIndex: rowIndex,
                align: align,
                locale: locale,
                rtl: rtl,
                width: width
            }));
        });
    };

    Row.prototype._getNotRenderCellIndex = function _getNotRenderCellIndex(colIndex, rowIndex, colSpan, rowSpan) {
        var maxColIndex = colSpan;
        var maxRowIndex = rowSpan;
        var notRenderCellIndex = [];
        for (var i = 0; i < maxColIndex; i++) {
            for (var j = 0; j < maxRowIndex; j++) {
                notRenderCellIndex.push([rowIndex + j, colIndex + i]);
            }
        }
        [].push.apply(this.context.notRenderCellIndex, notRenderCellIndex);
    };

    Row.prototype.render = function render() {
        var _classnames2;

        /* eslint-disable no-unused-vars*/
        var _props3 = this.props,
            prefix = _props3.prefix,
            className = _props3.className,
            onClick = _props3.onClick,
            onMouseEnter = _props3.onMouseEnter,
            onMouseLeave = _props3.onMouseLeave,
            columns = _props3.columns,
            Cell = _props3.Cell,
            getCellProps = _props3.getCellProps,
            rowIndex = _props3.rowIndex,
            record = _props3.record,
            __rowIndex = _props3.__rowIndex,
            children = _props3.children,
            primaryKey = _props3.primaryKey,
            cellRef = _props3.cellRef,
            colGroup = _props3.colGroup,
            pure = _props3.pure,
            locale = _props3.locale,
            expandedIndexSimulate = _props3.expandedIndexSimulate,
            tableEl = _props3.tableEl,
            rtl = _props3.rtl,
            wrapper = _props3.wrapper,
            others = objectWithoutProperties_default()(_props3, ['prefix', 'className', 'onClick', 'onMouseEnter', 'onMouseLeave', 'columns', 'Cell', 'getCellProps', 'rowIndex', 'record', '__rowIndex', 'children', 'primaryKey', 'cellRef', 'colGroup', 'pure', 'locale', 'expandedIndexSimulate', 'tableEl', 'rtl', 'wrapper']);

        var cls = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'table-row'] = true, _classnames2[className] = className, _classnames2));

        var tr = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'tr',
            extends_default()({
                className: cls,
                role: 'row'
            }, others, {
                onClick: this.onClick,
                onMouseEnter: this.onMouseEnter,
                onMouseLeave: this.onMouseLeave
            }),
            this.renderCells(record),
            children
        );

        return wrapper(tr);
    };

    return Row;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), base_row__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    primaryKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.symbol, _prop_types_15_8_1_prop_types_default.a.string]),
    className: _prop_types_15_8_1_prop_types_default.a.string,
    columns: _prop_types_15_8_1_prop_types_default.a.array,
    record: _prop_types_15_8_1_prop_types_default.a.any,
    Cell: _prop_types_15_8_1_prop_types_default.a.func,
    rowIndex: _prop_types_15_8_1_prop_types_default.a.number,
    getCellProps: _prop_types_15_8_1_prop_types_default.a.func,
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    cellRef: _prop_types_15_8_1_prop_types_default.a.func,
    colGroup: _prop_types_15_8_1_prop_types_default.a.object,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    wrapper: _prop_types_15_8_1_prop_types_default.a.func
}, base_row__class.defaultProps = {
    prefix: 'next-',
    primaryKey: 'id',
    columns: [],
    record: {},
    getCellProps: row_noop,
    onClick: row_noop,
    onMouseEnter: row_noop,
    onMouseLeave: row_noop,
    cellRef: row_noop,
    colGroup: {},
    wrapper: function wrapper(row) {
        return row;
    }
}, base_row__class.contextTypes = {
    notRenderCellIndex: _prop_types_15_8_1_prop_types_default.a.array,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}, row__temp2);
base_row_Row.displayName = 'Row';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/cell.js






var base_cell__class, base_cell__temp;






var base_cell_Cell = (base_cell__temp = base_cell__class = function (_React$Component) {
    inherits_default()(Cell, _React$Component);

    function Cell() {
        classCallCheck_default()(this, Cell);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Cell.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        if (nextProps.pure) {
            var isEqual = util_obj.shallowEqual(this.props, nextProps);
            return !isEqual;
        }
        return true;
    };

    Cell.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            cell = _props.cell,
            value = _props.value,
            resizable = _props.resizable,
            asyncResizable = _props.asyncResizable,
            colIndex = _props.colIndex,
            rowIndex = _props.rowIndex,
            __colIndex = _props.__colIndex,
            record = _props.record,
            context = _props.context,
            align = _props.align,
            _props$style = _props.style,
            style = _props$style === undefined ? {} : _props$style,
            Tag = _props.component,
            children = _props.children,
            title = _props.title,
            width = _props.width,
            innerStyle = _props.innerStyle,
            primaryKey = _props.primaryKey,
            __normalized = _props.__normalized,
            filterMode = _props.filterMode,
            filterMenuProps = _props.filterMenuProps,
            filterProps = _props.filterProps,
            filters = _props.filters,
            sortable = _props.sortable,
            sortDirections = _props.sortDirections,
            lock = _props.lock,
            pure = _props.pure,
            locale = _props.locale,
            expandedIndexSimulate = _props.expandedIndexSimulate,
            rtl = _props.rtl,
            isIconLeft = _props.isIconLeft,
            type = _props.type,
            htmlTitle = _props.htmlTitle,
            wordBreak = _props.wordBreak,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'cell', 'value', 'resizable', 'asyncResizable', 'colIndex', 'rowIndex', '__colIndex', 'record', 'context', 'align', 'style', 'component', 'children', 'title', 'width', 'innerStyle', 'primaryKey', '__normalized', 'filterMode', 'filterMenuProps', 'filterProps', 'filters', 'sortable', 'sortDirections', 'lock', 'pure', 'locale', 'expandedIndexSimulate', 'rtl', 'isIconLeft', 'type', 'htmlTitle', 'wordBreak']);

        var tagStyle = extends_default()({}, style);
        var cellProps = { value: value, index: rowIndex, record: record, context: context };
        var content = cell;
        if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(content)) {
            content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(content, cellProps);
        } else if (typeof content === 'function') {
            content = content(value, rowIndex, record, context);
        }
        if (align) {
            tagStyle.textAlign = align;
            if (rtl) {
                tagStyle.textAlign = align === 'left' ? 'right' : align === 'right' ? 'left' : align;
            }
        }
        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-cell'] = true, _classnames[prefix + 'table-word-break-' + wordBreak] = !!wordBreak, _classnames[className] = className, _classnames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({}, pickAttrs(others), { className: cls, style: tagStyle, role: 'gridcell' }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                {
                    className: prefix + 'table-cell-wrapper',
                    ref: this.props.getCellDomRef,
                    style: innerStyle,
                    title: htmlTitle,
                    'data-next-table-col': __colIndex,
                    'data-next-table-row': rowIndex
                },
                isIconLeft ? children : content,
                isIconLeft ? content : children
            )
        );
    };

    return Cell;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), base_cell__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    primaryKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.symbol, _prop_types_15_8_1_prop_types_default.a.string]),
    className: _prop_types_15_8_1_prop_types_default.a.string,
    record: _prop_types_15_8_1_prop_types_default.a.any,
    value: _prop_types_15_8_1_prop_types_default.a.any,
    isIconLeft: _prop_types_15_8_1_prop_types_default.a.bool,
    colIndex: _prop_types_15_8_1_prop_types_default.a.number,
    rowIndex: _prop_types_15_8_1_prop_types_default.a.number,
    // 经过锁列调整后的列索引，lock right的列会从非0开始
    __colIndex: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    title: _prop_types_15_8_1_prop_types_default.a.any,
    width: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    context: _prop_types_15_8_1_prop_types_default.a.any,
    cell: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.element, _prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func]),
    align: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'center', 'right']),
    component: _prop_types_15_8_1_prop_types_default.a.oneOf(['td', 'th', 'div']),
    children: _prop_types_15_8_1_prop_types_default.a.any,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    innerStyle: _prop_types_15_8_1_prop_types_default.a.object,
    filterMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple']),
    filterMenuProps: _prop_types_15_8_1_prop_types_default.a.object,
    filterProps: _prop_types_15_8_1_prop_types_default.a.object,
    filters: _prop_types_15_8_1_prop_types_default.a.array,
    sortable: _prop_types_15_8_1_prop_types_default.a.bool,
    sortDirections: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOf(['desc', 'asc', 'default'])),
    lock: _prop_types_15_8_1_prop_types_default.a.any,
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['header', 'body']),
    resizable: _prop_types_15_8_1_prop_types_default.a.bool,
    asyncResizable: _prop_types_15_8_1_prop_types_default.a.bool,
    __normalized: _prop_types_15_8_1_prop_types_default.a.bool
}, base_cell__class.defaultProps = {
    component: 'td',
    type: 'body',
    isIconLeft: false,
    cell: function cell(value) {
        return value;
    },
    prefix: 'next-'
}, base_cell__temp);
base_cell_Cell.displayName = 'Cell';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/body.js







var body__class, body__temp2;








var body_noop = function noop() {};

var body_Body = (body__temp2 = body__class = function (_React$Component) {
    inherits_default()(Body, _React$Component);

    function Body() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Body);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getRowRef = function (i, row) {
            _this.props.rowRef(i, row);
        }, _this.onRowClick = function (record, index, e) {
            _this.props.onRowClick(record, index, e);
        }, _this.onRowMouseEnter = function (record, index, e) {
            _this.props.onRowMouseEnter(record, index, e);
        }, _this.onRowMouseLeave = function (record, index, e) {
            _this.props.onRowMouseLeave(record, index, e);
        }, _this.onBodyMouseOver = function (e) {
            _this.props.onBodyMouseOver(e);
        }, _this.onBodyMouseOut = function (e) {
            _this.props.onBodyMouseOut(e);
        }, _this.getEmptyNode = function (ref) {
            _this.emptyNode = ref;
        }, _this.setEmptyDomStyle = function () {
            var tableEl = _this.props.tableEl;
            // getboundingclientRect 获取的是除 margin 之外的内容区，可能带小数点，不四舍五入

            var borderLeftWidth = util_dom.getStyle(tableEl, 'borderLeftWidth');
            var tableWidth = tableEl && tableEl.getBoundingClientRect().width;
            var totalWidth = tableWidth - borderLeftWidth - 1 || '100%';

            util_dom.setStyle(_this.emptyNode, { width: totalWidth });
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Body.prototype.componentDidMount = function componentDidMount() {
        util_events.on(window, 'resize', this.setEmptyDomStyle);
    };

    Body.prototype.componentDidUpdate = function componentDidUpdate() {
        this.setEmptyDomStyle();
    };

    Body.prototype.componentWillUnmount = function componentWillUnmount() {
        util_events.off(window, 'resize', this.setEmptyDomStyle);
    };

    Body.prototype.render = function render() {
        var _this2 = this;

        /*eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            children = _props.children,
            Tag = _props.component,
            colGroup = _props.colGroup,
            loading = _props.loading,
            emptyContent = _props.emptyContent,
            components = _props.components,
            getCellProps = _props.getCellProps,
            primaryKey = _props.primaryKey,
            getRowProps = _props.getRowProps,
            dataSource = _props.dataSource,
            cellRef = _props.cellRef,
            columns = _props.columns,
            rowRef = _props.rowRef,
            onRowClick = _props.onRowClick,
            onRowMouseEnter = _props.onRowMouseEnter,
            onRowMouseLeave = _props.onRowMouseLeave,
            onBodyMouseOver = _props.onBodyMouseOver,
            onBodyMouseOut = _props.onBodyMouseOut,
            locale = _props.locale,
            pure = _props.pure,
            expandedIndexSimulate = _props.expandedIndexSimulate,
            tableEl = _props.tableEl,
            rtl = _props.rtl,
            crossline = _props.crossline,
            tableWidth = _props.tableWidth,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'children', 'component', 'colGroup', 'loading', 'emptyContent', 'components', 'getCellProps', 'primaryKey', 'getRowProps', 'dataSource', 'cellRef', 'columns', 'rowRef', 'onRowClick', 'onRowMouseEnter', 'onRowMouseLeave', 'onBodyMouseOver', 'onBodyMouseOut', 'locale', 'pure', 'expandedIndexSimulate', 'tableEl', 'rtl', 'crossline', 'tableWidth']);

        var totalWidth = +(tableEl && tableEl.clientWidth) - 1 || '100%';

        var _components$Row = components.Row,
            Row = _components$Row === undefined ? base_row_Row : _components$Row,
            _components$Cell = components.Cell,
            Cell = _components$Cell === undefined ? base_cell_Cell : _components$Cell;

        var empty = loading ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            null,
            '\xA0'
        ) : emptyContent || locale.empty;
        var rows = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'tr',
            null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'td',
                { colSpan: columns.length },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        ref: this.getEmptyNode,
                        className: prefix + 'table-empty',
                        style: { position: 'sticky', left: 0, overflow: 'hidden', width: totalWidth }
                    },
                    empty
                )
            )
        );
        if (Tag === 'div') {
            rows = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'table',
                { role: 'table' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'tbody',
                    null,
                    rows
                )
            );
        }
        if (dataSource.length) {
            rows = dataSource.map(function (record, index) {
                var _classnames;

                var rowProps = {};
                // record may be a string
                var rowIndex = (typeof record === 'undefined' ? 'undefined' : typeof_default()(record)) === 'object' && '__rowIndex' in record ? record.__rowIndex : index;

                if (expandedIndexSimulate) {
                    rowProps = record.__expanded ? {} : getRowProps(record, index / 2);
                } else {
                    rowProps = getRowProps(record, rowIndex);
                }

                rowProps = rowProps || {};

                var rowClass = rowProps.className;
                var className = _classnames_2_3_1_classnames_default()((_classnames = {
                    first: index === 0,
                    last: index === dataSource.length - 1
                }, _classnames[rowClass] = rowClass, _classnames));
                var expanded = record.__expanded ? 'expanded' : '';
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Row, extends_default()({
                    key: '' + (record[primaryKey] || (record[primaryKey] === 0 ? 0 : rowIndex)) + expanded
                }, rowProps, {
                    ref: _this2.getRowRef.bind(_this2, expanded ? rowIndex + '_expanded' : rowIndex),
                    colGroup: colGroup,
                    rtl: rtl,
                    columns: columns,
                    primaryKey: primaryKey,
                    record: record,
                    rowIndex: rowIndex,
                    __rowIndex: rowIndex,
                    prefix: prefix,
                    pure: pure,
                    cellRef: cellRef,
                    getCellProps: getCellProps,
                    className: className,
                    Cell: Cell,
                    tableEl: tableEl,
                    onClick: _this2.onRowClick,
                    locale: locale,
                    onMouseEnter: _this2.onRowMouseEnter,
                    onMouseLeave: _this2.onRowMouseLeave
                }));
            });
        } else {
            // 异步设置空数据时的宽度
            this.setEmptyDomStyle();
        }
        var event = crossline ? {
            onMouseOver: this.onBodyMouseOver,
            onMouseOut: this.onBodyMouseOut
        } : {};
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({ className: className }, others, event),
            rows,
            children
        );
    };

    return Body;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), body__class.propTypes = {
    loading: _prop_types_15_8_1_prop_types_default.a.bool,
    emptyContent: _prop_types_15_8_1_prop_types_default.a.any,
    tableEl: _prop_types_15_8_1_prop_types_default.a.any,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    components: _prop_types_15_8_1_prop_types_default.a.object,
    getCellProps: _prop_types_15_8_1_prop_types_default.a.func,
    cellRef: _prop_types_15_8_1_prop_types_default.a.func,
    primaryKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.symbol, _prop_types_15_8_1_prop_types_default.a.string]),
    getRowProps: _prop_types_15_8_1_prop_types_default.a.func,
    rowRef: _prop_types_15_8_1_prop_types_default.a.func,
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    component: _prop_types_15_8_1_prop_types_default.a.string,
    colGroup: _prop_types_15_8_1_prop_types_default.a.object,
    columns: _prop_types_15_8_1_prop_types_default.a.array,
    onRowClick: _prop_types_15_8_1_prop_types_default.a.func,
    onRowMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onRowMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    onBodyMouseOver: _prop_types_15_8_1_prop_types_default.a.func,
    onBodyMouseOut: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    crossline: _prop_types_15_8_1_prop_types_default.a.bool,
    tableWidth: _prop_types_15_8_1_prop_types_default.a.number
}, body__class.defaultProps = {
    loading: false,
    prefix: 'next-',
    components: {},
    getCellProps: body_noop,
    cellRef: body_noop,
    primaryKey: 'id',
    getRowProps: body_noop,
    rowRef: body_noop,
    dataSource: [],
    component: 'tbody',
    columns: []
}, body__temp2);
body_Body.displayName = 'Body';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/filter.js






var filter__class, filter__temp, filter__initialiseProps;











// 共享状态的组件需要变成非受控组件
var filter_Filter = (filter__temp = filter__class = function (_React$Component) {
    inherits_default()(Filter, _React$Component);

    function Filter(props) {
        classCallCheck_default()(this, Filter);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        filter__initialiseProps.call(_this);

        var filterParams = props.filterParams || {};
        var filterConfig = filterParams[props.dataIndex] || {};
        _this.state = {
            visible: filterConfig.visible || false,
            selectedKeys: filterConfig.selectedKeys || [],
            selectedKeysChangedByInner: true
        };
        _this._selectedKeys = [].concat(_this.state.selectedKeys);
        return _this;
    }

    Filter.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};
        if (nextProps.hasOwnProperty('filterParams') && typeof nextProps.filterParams !== 'undefined') {
            var dataIndex = nextProps.dataIndex || this.props.dataIndex;
            var filterParams = nextProps.filterParams || {};
            var filterConfig = filterParams[dataIndex] || {};
            var selectedKeys = void 0;
            if (prevState.selectedKeysChangedByInner) {
                selectedKeys = prevState.selectedKeys || [];
                state.selectedKeysChangedByInner = false;
            } else {
                selectedKeys = filterConfig.selectedKeys || [];
            }

            state.selectedKeys = selectedKeys;
        }

        return state;
    };

    Filter.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        var selectedKeys = prevState.selectedKeys;

        this._selectedKeys = [].concat(selectedKeys);
    };

    Filter.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3;

        var _props = this.props,
            filters = _props.filters,
            prefix = _props.prefix,
            locale = _props.locale,
            className = _props.className,
            filterMode = _props.filterMode,
            filterMenuProps = _props.filterMenuProps,
            filterProps = _props.filterProps,
            rtl = _props.rtl;


        var dropdownClassname = _classnames_2_3_1_classnames_default()(filterProps && filterProps.className, (_classnames = {}, _classnames[prefix + 'table-filter-menu'] = true, _classnames));
        var _state = this.state,
            visible = _state.visible,
            selectedKeys = _state.selectedKeys;

        var _ref = filterMenuProps || {},
            subMenuSelectable = _ref.subMenuSelectable,
            others = objectWithoutProperties_default()(_ref, ['subMenuSelectable']);

        function renderMenuItem(item) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_menu.Item,
                { key: item.value },
                item.label
            );
        }

        function renderSubMenu(parent, children) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_menu.SubMenu,
                { label: parent.label, key: parent.value, selectable: subMenuSelectable },
                renderMenuContent(children)
            );
        }

        function renderMenuContent(list) {
            return list.map(function (item) {
                if (item.children) {
                    return renderSubMenu(item, item.children);
                } else {
                    return renderMenuItem(item);
                }
            });
        }

        var content = renderMenuContent(filters),
            footer = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'table-filter-footer' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                { type: 'primary', onClick: this.onFilterConfirm },
                locale.ok
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                { onClick: this.onFilterClear },
                locale.reset
            )
        );

        var cls = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'table-filter'] = true, _classnames2[className] = className, _classnames2));

        var filterIconCls = _classnames_2_3_1_classnames_default()((_classnames3 = {}, _classnames3[prefix + 'table-filter-active'] = selectedKeys && selectedKeys.length > 0, _classnames3));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            dropdown,
            extends_default()({
                trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    {
                        role: 'button',
                        'aria-label': locale.filter,
                        onKeyDown: this.filterKeydown,
                        tabIndex: '0',
                        className: cls
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'filter', size: 'small', className: filterIconCls })
                ),
                triggerType: 'click',
                visible: visible,
                autoFocus: true,
                rtl: rtl,
                needAdjust: false,
                onVisibleChange: this.onFilterVisible,
                className: dropdownClassname
            }, filterProps),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_menu,
                extends_default()({
                    footer: footer,
                    rtl: rtl,
                    selectedKeys: selectedKeys,
                    selectMode: filterMode,
                    onSelect: this.onFilterSelect
                }, others),
                content
            )
        );
    };

    return Filter;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), filter__class.propTypes = {
    dataIndex: _prop_types_15_8_1_prop_types_default.a.string,
    filters: _prop_types_15_8_1_prop_types_default.a.array,
    filterMode: _prop_types_15_8_1_prop_types_default.a.string,
    filterParams: _prop_types_15_8_1_prop_types_default.a.object,
    filterMenuProps: _prop_types_15_8_1_prop_types_default.a.object,
    filterProps: _prop_types_15_8_1_prop_types_default.a.object,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    onFilter: _prop_types_15_8_1_prop_types_default.a.func,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, filter__class.defaultProps = {
    onFilter: function onFilter() {}
}, filter__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.filterKeydown = function (e) {
        e.preventDefault();
        e.stopPropagation();

        if (e.keyCode === KEYCODE.ENTER) {
            _this2.setState({
                visible: !_this2.state.visible
            });
        }
    };

    this.onFilterVisible = function (visible) {
        _this2.setState({
            visible: visible
        });

        if (!visible) {
            var selectedKeys = [].concat(_this2._selectedKeys);

            _this2.setState({
                selectedKeysChangedByInner: true,
                selectedKeys: selectedKeys
            });
        }
    };

    this.onFilterSelect = function (selectedKeys) {
        _this2.setState({
            visible: true,
            selectedKeysChangedByInner: true,
            selectedKeys: selectedKeys
        });
    };

    this.onFilterConfirm = function () {
        var selectedKeys = _this2.state.selectedKeys;
        var filterParams = {},
            dataIndex = _this2.props.dataIndex;


        filterParams[dataIndex] = {
            visible: false,
            selectedKeys: selectedKeys
        };
        _this2._selectedKeys = [].concat(selectedKeys);
        _this2.setState({
            visible: false,
            selectedKeysChangedByInner: true
        });
        // 兼容之前的格式
        _this2.props.onFilter(filterParams);
    };

    this.onFilterClear = function () {
        var filterParams = {},
            dataIndex = _this2.props.dataIndex;


        filterParams[dataIndex] = {
            visible: false,
            selectedKeys: []
        };
        _this2._selectedKeys = [];
        _this2.setState({
            selectedKeys: [],
            visible: false,
            selectedKeysChangedByInner: true
        });
        // 兼容之前的格式
        _this2.props.onFilter(filterParams);
    };
}, filter__temp);
filter_Filter.displayName = 'Filter';


/* harmony default export */ var base_filter = (Object(react_lifecycles_compat_es["polyfill"])(filter_Filter));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/sort.js




var sort__class, sort__temp2;







/* eslint-disable react/prefer-stateless-function */
var sort_Sort = (sort__temp2 = sort__class = function (_React$Component) {
    inherits_default()(Sort, _React$Component);

    function Sort() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Sort);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function () {
            var _this$props = _this.props,
                sort = _this$props.sort,
                dataIndex = _this$props.dataIndex,
                sortDirections = _this$props.sortDirections;


            var nextSortType = '';

            sortDirections.forEach(function (dir, i) {
                if (sort[dataIndex] === dir) {
                    nextSortType = sortDirections.length - 1 > i ? sortDirections[i + 1] : sortDirections[0];
                }
            });

            if (!sort[dataIndex]) {
                nextSortType = sortDirections[0];
            }

            _this.onSort(dataIndex, nextSortType);
        }, _this.keydownHandler = function (e) {
            e.preventDefault();
            e.stopPropagation();

            if (e.keyCode === KEYCODE.ENTER) {
                _this.handleClick();
            }
        }, _this.onSort = function (dataIndex, order) {
            var sort = {};
            sort[dataIndex] = order;

            _this.props.onSort(dataIndex, order, sort);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    // 渲染排序
    Sort.prototype.renderSort = function renderSort() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            sort = _props.sort,
            sortIcons = _props.sortIcons,
            className = _props.className,
            dataIndex = _props.dataIndex,
            locale = _props.locale,
            sortDirections = _props.sortDirections,
            rtl = _props.rtl,
            sortStatus = sort[dataIndex],
            map = {
            desc: 'descending',
            asc: 'ascending'
        };


        var icons = sortDirections.map(function (sortOrder) {
            return sortOrder === 'default' ? null : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'a',
                { key: sortOrder, className: sortStatus === sortOrder ? 'current' : '' },
                sortIcons ? sortIcons[sortOrder] : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { rtl: rtl, type: map[sortOrder], size: 'xs' })
            );
        });

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-sort'] = true, _classnames[className] = className, _classnames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            {
                role: 'button',
                tabIndex: '0',
                'aria-label': locale[sortStatus],
                className: cls,
                onClick: this.handleClick.bind(this),
                onKeyDown: this.keydownHandler
            },
            icons
        );
    };

    Sort.prototype.render = function render() {
        return this.renderSort();
    };

    return Sort;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), sort__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    sort: _prop_types_15_8_1_prop_types_default.a.object,
    sortIcons: _prop_types_15_8_1_prop_types_default.a.object,
    onSort: _prop_types_15_8_1_prop_types_default.a.func,
    sortDirections: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOf(['desc', 'asc', 'default'])),
    dataIndex: _prop_types_15_8_1_prop_types_default.a.string,
    locale: _prop_types_15_8_1_prop_types_default.a.object
}, sort__class.defaultProps = {
    sort: {},
    sortDirections: ['desc', 'asc']
}, sort__temp2);
sort_Sort.displayName = 'Sort';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/resize.js




var resize__class, resize__temp;






var resize_Resize = (resize__temp = resize__class = function (_React$Component) {
    inherits_default()(Resize, _React$Component);

    function Resize() {
        classCallCheck_default()(this, Resize);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this));

        _this.showResizeProxy = function () {
            _this.props.resizeProxyDomRef.style.cssText = 'display:block;left:' + _this.startLeft + 'px;';
        };

        _this.moveResizeProxy = function () {
            var moveLeft = _this.startLeft + _this.changedPageX;
            _this.props.resizeProxyDomRef.style.cssText = 'left:' + moveLeft + 'px;display:block;';
        };

        _this.resetResizeProxy = function () {
            // when the mouse was not moved,don't change cell width
            if (_this.asyncResizeFlag) {
                _this.props.onChange(_this.props.dataIndex, _this.changedPageX);
            }
            _this.changedPageX = 0;
            _this.tRight = 0;
            _this.asyncResizeFlag = false;
            _this.props.resizeProxyDomRef.style.cssText = 'display:none;';
        };

        _this.movingLimit = function () {
            // table right limit
            var moveLeft = _this.startLeft + _this.changedPageX;
            if (moveLeft > _this.tRight) {
                moveLeft = _this.tRight;
                _this.changedPageX = _this.tRight - _this.startLeft;
            }

            // cell left limit
            if (moveLeft - _this.cellLeft < _this.cellMinWidth) {
                _this.changedPageX = _this.cellLeft + _this.cellMinWidth - _this.startLeft;
            }

            // table left limit
            if (moveLeft < 0) {
                _this.changedPageX = 0 - _this.startLeft;
            }

            if (_this.props.col.width + _this.changedPageX < _this.cellMinWidth) {
                _this.changedPageX = _this.cellMinWidth - _this.props.col.width;
            }
        };

        _this.onMouseDown = function (e) {
            var _this$props$tableEl$g = _this.props.tableEl.getBoundingClientRect(),
                tableLeft = _this$props$tableEl$g.left,
                tableWidth = _this$props$tableEl$g.width;

            if (!_this.props.cellDomRef) {
                return;
            }

            var _this$props$cellDomRe = _this.props.cellDomRef.getBoundingClientRect(),
                cellDomLeft = _this$props$cellDomRe.left;

            _this.lastPageX = e.pageX;
            _this.tLeft = tableLeft;
            _this.tRight = tableWidth;
            _this.startLeft = e.pageX - tableLeft;
            _this.cellLeft = cellDomLeft - tableLeft;

            if (_this.props.asyncResizable) _this.showResizeProxy();
            util_events.on(document, 'mousemove', _this.onMouseMove);
            util_events.on(document, 'mouseup', _this.onMouseUp);
            _this.unSelect();
        };

        _this.onMouseMove = function (e) {
            var pageX = e.pageX;
            _this.changedPageX = pageX - _this.lastPageX;

            if (_this.props.rtl) {
                _this.changedPageX = -_this.changedPageX;
            }

            if (_this.props.hasLock) {
                if (!_this.props.asyncResizable) {
                    // when hasn't lock attribute, cellLeft will change
                    _this.cellLeft = _this.props.cellDomRef.getBoundingClientRect().left - _this.tLeft;
                }
            }
            _this.movingLimit();

            // stop at here when async
            if (_this.props.asyncResizable) {
                // asyncResizeFlag use to prevent just click without mouse move
                _this.asyncResizeFlag = true;
                _this.moveResizeProxy();
                return;
            }
            _this.props.onChange(_this.props.dataIndex, _this.changedPageX);
            _this.lastPageX = pageX;
        };

        _this.onMouseUp = function () {
            if (_this.props.asyncResizable) {
                _this.resetResizeProxy();
            }
            _this.startLeft = 0;
            _this.destory();
        };

        _this.cellMinWidth = 40;

        _this.lastPageX = 0;
        _this.tRight = 0;
        _this.tLeft = 0;
        _this.cellLeft = 0;
        _this.startLeft = 0;
        _this.changedPageX = 0;

        _this.asyncResizeFlag = false;
        return _this;
    }

    Resize.prototype.componentWillUnmount = function componentWillUnmount() {
        this.destory();
    };

    Resize.prototype.destory = function destory() {
        util_events.off(document, 'mousemove', this.onMouseMove);
        util_events.off(document, 'mouseup', this.onMouseUp);
        this.select();
    };

    Resize.prototype.unSelect = function unSelect() {
        util_dom.setStyle(document.body, {
            userSelect: 'none',
            cursor: 'ew-resize'
        });
        document.body.setAttribute('unselectable', 'on');
    };

    Resize.prototype.select = function select() {
        util_dom.setStyle(document.body, {
            userSelect: '',
            cursor: ''
        });
        document.body.removeAttribute('unselectable');
    };

    Resize.prototype.render = function render() {
        var prefix = this.props.prefix;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('a', { className: prefix + 'table-resize-handler', onMouseDown: this.onMouseDown });
    };

    return Resize;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), resize__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    dataIndex: _prop_types_15_8_1_prop_types_default.a.string,
    tableEl: _prop_types_15_8_1_prop_types_default.a.any,
    resizeProxyDomRef: _prop_types_15_8_1_prop_types_default.a.any,
    cellDomRef: _prop_types_15_8_1_prop_types_default.a.any,
    col: _prop_types_15_8_1_prop_types_default.a.any,
    hasLock: _prop_types_15_8_1_prop_types_default.a.bool,
    asyncResizable: _prop_types_15_8_1_prop_types_default.a.bool
}, resize__class.defaultProps = {
    onChange: function onChange() {}
}, resize__temp);
resize_Resize.displayName = 'Resize';


/* harmony default export */ var base_resize = (resize_Resize);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/header.js






var base_header__class, base_header__temp;









var header_noop = function noop() {};
var header_Header = (base_header__temp = base_header__class = function (_React$Component) {
    inherits_default()(Header, _React$Component);

    function Header() {
        classCallCheck_default()(this, Header);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this));

        _this.checkHasLock = function () {
            var columns = _this.props.columns;

            var hasLock = false;
            for (var i = 0; i < columns.length; i++) {
                var cols = columns[i];
                for (var j = 0; j < cols.length; j++) {
                    var col = cols[j];
                    if (col.lock) {
                        hasLock = true;
                        break;
                    }
                }
                if (hasLock) {
                    break;
                }
            }
            _this.hasLock = hasLock;
        };

        _this.getCellRef = function (i, j, cell) {
            _this.props.headerCellRef(i, j, cell);

            var columns = _this.props.columns;

            var columnProps = columns[i] && columns[i][j];
            if (columnProps && columnProps.ref && typeof columnProps.ref === 'function') {
                columnProps.ref(cell);
            }
        };

        _this.getCellDomRef = function (i, j, cellDom) {
            var cellRefKey = _this.getCellDomRefKey(i, j);
            _this[cellRefKey] = cellDom;
        };

        _this.getCellDomRefKey = function (i, j) {
            return 'header_cell_' + i + '_' + j;
        };

        _this.onSort = function (dataIndex, order, sort) {
            _this.props.onSort(dataIndex, order, sort);
        };

        _this.hasLock = false;
        return _this;
    }

    Header.prototype.render = function render() {
        var _this2 = this;

        /*eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            children = _props.children,
            Tag = _props.component,
            colGroup = _props.colGroup,
            columns = _props.columns,
            locale = _props.locale,
            filterParams = _props.filterParams,
            onFilter = _props.onFilter,
            components = _props.components,
            affixRef = _props.affixRef,
            headerCellRef = _props.headerCellRef,
            onSort = _props.onSort,
            sort = _props.sort,
            sortIcons = _props.sortIcons,
            onResizeChange = _props.onResizeChange,
            pure = _props.pure,
            rtl = _props.rtl,
            tableWidth = _props.tableWidth,
            tableEl = _props.tableEl,
            resizeProxyDomRef = _props.resizeProxyDomRef,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'children', 'component', 'colGroup', 'columns', 'locale', 'filterParams', 'onFilter', 'components', 'affixRef', 'headerCellRef', 'onSort', 'sort', 'sortIcons', 'onResizeChange', 'pure', 'rtl', 'tableWidth', 'tableEl', 'resizeProxyDomRef']);

        this.checkHasLock();

        var _components$Cell = components.Cell,
            Cell = _components$Cell === undefined ? base_cell_Cell : _components$Cell,
            _components$Filter = components.Filter,
            Filter = _components$Filter === undefined ? base_filter : _components$Filter,
            _components$Sort = components.Sort,
            Sort = _components$Sort === undefined ? sort_Sort : _components$Sort,
            _components$Resize = components.Resize,
            Resize = _components$Resize === undefined ? base_resize : _components$Resize;

        var rowSpan = columns.length;

        var header = columns.map(function (cols, index) {
            var col = cols.map(function (col, j) {
                var _classnames;

                var cellRefKey = _this2.getCellDomRefKey(index, j);
                /* eslint-disable no-unused-vars, prefer-const */

                var title = col.title,
                    colSpan = col.colSpan,
                    sortable = col.sortable,
                    sortDirections = col.sortDirections,
                    resizable = col.resizable,
                    asyncResizable = col.asyncResizable,
                    dataIndex = col.dataIndex,
                    filters = col.filters,
                    filterMode = col.filterMode,
                    filterMenuProps = col.filterMenuProps,
                    filterProps = col.filterProps,
                    width = col.width,
                    align = col.align,
                    alignHeader = col.alignHeader,
                    className = col.className,
                    __normalized = col.__normalized,
                    lock = col.lock,
                    cellStyle = col.cellStyle,
                    wordBreak = col.wordBreak,
                    others = objectWithoutProperties_default()(col, ['title', 'colSpan', 'sortable', 'sortDirections', 'resizable', 'asyncResizable', 'dataIndex', 'filters', 'filterMode', 'filterMenuProps', 'filterProps', 'width', 'align', 'alignHeader', 'className', '__normalized', 'lock', 'cellStyle', 'wordBreak']);

                var order = sort ? sort[dataIndex] : '';
                className = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-header-node'] = true, _classnames[prefix + 'table-header-resizable'] = resizable || asyncResizable, _classnames[prefix + 'table-word-break-' + wordBreak] = !!wordBreak, _classnames[prefix + 'table-header-sort-' + order] = sortable && order, _classnames[className] = className, _classnames));
                var attrs = {},
                    sortElement = void 0,
                    filterElement = void 0,
                    resizeElement = void 0;

                attrs.colSpan = colSpan;

                // column.group doesn't have sort resize filter
                if (!(col.children && col.children.length)) {
                    if (sortable) {
                        sortElement = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Sort, {
                            prefix: prefix,
                            className: prefix + 'table-header-icon',
                            dataIndex: dataIndex,
                            onSort: _this2.onSort,
                            sortDirections: sortDirections,
                            sortIcons: sortIcons,
                            sort: sort,
                            rtl: rtl,
                            locale: locale
                        });
                    }
                    if (asyncResizable || resizable) {
                        resizeElement = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Resize, {
                            asyncResizable: asyncResizable,
                            hasLock: _this2.hasLock,
                            col: col,
                            tableEl: tableEl,
                            prefix: prefix,
                            rtl: rtl,
                            dataIndex: dataIndex,
                            resizeProxyDomRef: resizeProxyDomRef,
                            cellDomRef: _this2[cellRefKey],
                            onChange: onResizeChange
                        });
                    }

                    if (filters) {
                        filterElement = filters.length ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Filter, {
                            dataIndex: dataIndex,
                            className: prefix + 'table-header-icon',
                            filters: filters,
                            prefix: prefix,
                            locale: locale,
                            rtl: rtl,
                            filterParams: filterParams,
                            filterMode: filterMode,
                            filterMenuProps: filterMenuProps,
                            filterProps: filterProps,
                            onFilter: onFilter
                        }) : null;
                    }
                    attrs.rowSpan = rowSpan - index;
                }

                if (+attrs.colSpan === 0) {
                    return null;
                }

                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    Cell,
                    extends_default()({}, others, attrs, {
                        key: j,
                        prefix: prefix,
                        pure: pure,
                        rtl: rtl,
                        cell: title,
                        component: 'th',
                        align: alignHeader ? alignHeader : align,
                        className: className,
                        ref: _this2.getCellRef.bind(_this2, index, j),
                        getCellDomRef: _this2.getCellDomRef.bind(_this2, index, j),
                        type: 'header'
                    }),
                    sortElement,
                    filterElement,
                    resizeElement
                );
            });
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                { key: index },
                col
            );
        });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({ className: className }, others),
            header,
            children
        );
    };

    return Header;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), base_header__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.any,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    component: _prop_types_15_8_1_prop_types_default.a.string,
    columns: _prop_types_15_8_1_prop_types_default.a.array,
    colGroup: _prop_types_15_8_1_prop_types_default.a.object,
    headerCellRef: _prop_types_15_8_1_prop_types_default.a.func,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    filterParams: _prop_types_15_8_1_prop_types_default.a.object,
    onFilter: _prop_types_15_8_1_prop_types_default.a.func,
    components: _prop_types_15_8_1_prop_types_default.a.object,
    sort: _prop_types_15_8_1_prop_types_default.a.object,
    sortIcons: _prop_types_15_8_1_prop_types_default.a.object,
    onSort: _prop_types_15_8_1_prop_types_default.a.func,
    onResizeChange: _prop_types_15_8_1_prop_types_default.a.func,
    tableWidth: _prop_types_15_8_1_prop_types_default.a.number,
    tableEl: _prop_types_15_8_1_prop_types_default.a.any
}, base_header__class.defaultProps = {
    component: 'thead',
    columns: [],
    headerCellRef: header_noop,
    onFilter: header_noop,
    components: {},
    onSort: header_noop,
    onResizeChange: header_noop
}, base_header__temp);
header_Header.displayName = 'Header';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base/wrapper.js




var wrapper__class, wrapper__temp;




/* eslint-disable react/prefer-stateless-function */
var wrapper_Wrapper = (wrapper__temp = wrapper__class = function (_Component) {
    inherits_default()(Wrapper, _Component);

    function Wrapper() {
        classCallCheck_default()(this, Wrapper);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Wrapper.prototype.render = function render() {
        var _props = this.props,
            colGroup = _props.colGroup,
            children = _props.children,
            tableWidth = _props.tableWidth,
            Tag = _props.component;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            { role: 'table', style: { width: tableWidth } },
            colGroup,
            children
        );
    };

    return Wrapper;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), wrapper__class.propTypes = {
    tableWidth: _prop_types_15_8_1_prop_types_default.a.number
}, wrapper__temp);
wrapper_Wrapper.displayName = 'Wrapper';



wrapper_Wrapper.defaultProps = {
    component: 'table'
};

wrapper_Wrapper.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.any,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    colGroup: _prop_types_15_8_1_prop_types_default.a.any,
    component: _prop_types_15_8_1_prop_types_default.a.string
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/column.js




var column__class, column__temp;




/**
 * Table.Column
 * @order 0
 **/
var column_Column = (column__temp = column__class = function (_React$Component) {
  inherits_default()(Column, _React$Component);

  function Column() {
    classCallCheck_default()(this, Column);

    return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
  }

  Column.prototype.render = function render() {
    return null;
  };

  return Column;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), column__class.propTypes = {
  /**
   * 指定列对应的字段，支持`a.b`形式的快速取值
   */
  dataIndex: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * 行渲染的逻辑
   * value, rowIndex, record, context四个属性只可读不可被更改
   * Function(value, index, record) => Element
   */
  cell: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.element, _prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func]),
  /**
   * 表头显示的内容
   */
  title: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.element, _prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func]),
  /**
   * 写到 header 单元格上的title属性
   */
  htmlTitle: _prop_types_15_8_1_prop_types_default.a.string,
  /**
   * 是否支持排序
   */
  sortable: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 排序的方向。
   * 设置 ['desc', 'asc']，表示降序、升序
   * 设置 ['desc', 'asc', 'default']，表示表示降序、升序、不排序
   * @version 1.23
   */
  sortDirections: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.oneOf(['desc', 'asc', 'default'])),
  /**
   * 列宽，注意在锁列的情况下一定需要配置宽度
   */
  width: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
  /**
   * 单元格的对齐方式
   */
  align: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'center', 'right']),
  /**
   * 单元格标题的对齐方式, 不配置默认读取align值
   */
  alignHeader: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'center', 'right']),
  /**
   * 生成标题过滤的菜单, 格式为`[{label:'xxx', value:'xxx'}]`
   */
  filters: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.shape({
    label: _prop_types_15_8_1_prop_types_default.a.string,
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.string])
  })),
  /**
   * 过滤的模式是单选还是多选
   */
  filterMode: _prop_types_15_8_1_prop_types_default.a.oneOf(['single', 'multiple']),
  /**
   * filter 模式下传递给 Menu 菜单的属性， 默认继承 `Menu` 组件的API
   * @property {Boolean} subMenuSelectable 默认为`false` subMenu是否可选择
   * @property {Boolean} isSelectIconRight 默认为`false` 是否将选中图标居右。注意：SubMenu 上的选中图标一直居左，不受此API控制
   */
  filterMenuProps: _prop_types_15_8_1_prop_types_default.a.object,
  filterProps: _prop_types_15_8_1_prop_types_default.a.object,
  /**
   * 是否支持锁列,可选值为`left`,`right`, `true`
   */
  lock: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.string]),
  /**
   * 是否支持列宽调整, 当该值设为true，table的布局方式会修改为fixed.
   */
  resizable: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * （推荐使用）是否支持异步列宽调整, 当该值设为true，table的布局方式会修改为fixed.
   * @version 1.24
   */
  asyncResizable: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * header cell 横跨的格数，设置为0表示不出现此 th
   */
  colSpan: _prop_types_15_8_1_prop_types_default.a.number,
  /**
   * 设置该列单元格的word-break样式，对于id类、中文类适合用all，对于英文句子适合用word
   * @enumdesc all, word
   * @default all
   * @version 1.23
   */
  wordBreak: _prop_types_15_8_1_prop_types_default.a.oneOf(['all', 'word'])
}, column__class.contextTypes = {
  parent: _prop_types_15_8_1_prop_types_default.a.any
}, column__class.defaultProps = {
  cell: function cell(value) {
    return value;
  },
  filterMode: 'multiple',
  filterMenuProps: {
    subMenuSelectable: false
  },
  filterProps: {},
  resizable: false,
  asyncResizable: false
}, column__class._typeMark = 'column', column__temp);
column_Column.displayName = 'Column';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/column-group.js




var column_group__class, column_group__temp;




/**
 * Table.ColumnGroup
 * @order 1
 **/
var column_group_ColumnGroup = (column_group__temp = column_group__class = function (_React$Component) {
    inherits_default()(ColumnGroup, _React$Component);

    function ColumnGroup() {
        classCallCheck_default()(this, ColumnGroup);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    ColumnGroup.prototype.getChildContext = function getChildContext() {
        return {
            parent: this
        };
    };

    ColumnGroup.prototype.render = function render() {
        return null;
    };

    return ColumnGroup;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), column_group__class.propTypes = {
    /**
     * 表头显示的内容
     */
    title: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.element, _prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func])
}, column_group__class.childContextTypes = {
    parent: _prop_types_15_8_1_prop_types_default.a.any
}, column_group__class.defaultProps = {
    title: 'column-group'
}, column_group__class._typeMark = 'columnGroup', column_group__temp);
column_group_ColumnGroup.displayName = 'ColumnGroup';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/base.js







var table_base__class, table_base__temp;





















var Children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children,
    table_base_noop = function noop() {};

//<Table>
//    <Table.Column/>
//    <Table.ColumnGroup>
//      <Table.Column/>
//      <Table.Column/>
//    </Table.ColumnGroup>
//</Table>

/** Table */
var base_Table = (table_base__temp = table_base__class = function (_React$Component) {
    inherits_default()(Table, _React$Component);

    function Table(props, context) {
        classCallCheck_default()(this, Table);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

        _this.state = {
            sort: _this.props.sort || {}
        };

        _this.onSort = function (dataIndex, order, sort) {
            if (typeof _this.props.sort === 'undefined') {
                _this.setState({
                    sort: sort
                }, function () {
                    _this.props.onSort(dataIndex, order, sort);
                });
            } else {
                _this.props.onSort(dataIndex, order, sort);
            }
        };

        _this.onFilter = function (filterParams) {
            _this.props.onFilter(filterParams);
        };

        _this.onResizeChange = function (dataIndex, value) {
            _this.props.onResizeChange(dataIndex, value);
        };

        _this.getResizeProxyDomRef = function (resizeProxyDom) {
            if (!resizeProxyDom) {
                return _this.resizeProxyDomRef;
            }
            _this.resizeProxyDomRef = resizeProxyDom;
        };

        _this.getWrapperRef = function (wrapper) {
            if (!wrapper) {
                return _this.wrapper;
            }
            _this.wrapper = wrapper;
        };

        _this.getAffixRef = function (affixRef) {
            if (!affixRef) {
                return _this.affixRef;
            }
            _this.affixRef = affixRef;
        };

        _this.getHeaderCellRef = function (i, j, cell) {
            var cellRef = 'header_cell_' + i + '_' + j;
            if (!cell) {
                return _this[cellRef];
            }
            _this[cellRef] = cell;
        };

        _this.getRowRef = function (i, row) {
            var rowRef = 'row_' + i;
            if (!row) {
                return _this[rowRef];
            }
            _this[rowRef] = row;
        };

        _this.getCellRef = function (i, j, cell) {
            var cellRef = 'cell_' + i + '_' + j;
            if (!cell) {
                return _this[cellRef];
            }
            _this[cellRef] = cell;
        };

        _this.handleColHoverClass = function (rowIndex, colIndex, isAdd) {
            var crossline = _this.props.crossline;

            var funcName = isAdd ? 'addClass' : 'removeClass';
            if (crossline) {
                _this.props.entireDataSource.forEach(function (val, index) {
                    try {
                        // in case of finding an unmounted component due to cached data
                        // need to clear refs of this.tableInc when dataSource Changed
                        // in virtual table
                        var currentCol = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(_this.getCellRef(index, colIndex));
                        currentCol && util_dom[funcName](currentCol, 'hovered');
                    } catch (error) {
                        return null;
                    }
                });
            }
        };

        _this.findEventTarget = function (e) {
            var prefix = _this.props.prefix;

            var target = util_dom.getClosest(e.target, 'td.' + prefix + 'table-cell');
            var colIndex = target && target.getAttribute('data-next-table-col');
            var rowIndex = target && target.getAttribute('data-next-table-row');

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of this.tableInc when dataSource Changed
                // in virtual table
                var currentCol = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(_this.getCellRef(rowIndex, colIndex));
                if (currentCol === target) {
                    return {
                        colIndex: colIndex,
                        rowIndex: rowIndex
                    };
                }
            } catch (error) {
                return {};
            }

            return {};
        };

        _this.onBodyMouseOver = function (e) {
            var crossline = _this.props.crossline;

            if (!crossline) {
                return;
            }

            var _this$findEventTarget = _this.findEventTarget(e),
                colIndex = _this$findEventTarget.colIndex,
                rowIndex = _this$findEventTarget.rowIndex;
            // colIndex, rowIndex are string


            if (!colIndex || !rowIndex) {
                return;
            }
            _this.handleColHoverClass(rowIndex, colIndex, true);
            _this.colIndex = colIndex;
            _this.rowIndex = rowIndex;
        };

        _this.onBodyMouseOut = function (e) {
            var crossline = _this.props.crossline;

            if (!crossline) {
                return;
            }

            var _this$findEventTarget2 = _this.findEventTarget(e),
                colIndex = _this$findEventTarget2.colIndex,
                rowIndex = _this$findEventTarget2.rowIndex;
            // colIndex, rowIndex are string


            if (!colIndex || !rowIndex) {
                return;
            }
            _this.handleColHoverClass(_this.rowIndex, _this.colIndex, false);
            _this.colIndex = -1;
            _this.rowIndex = -1;
        };

        _this.addColIndex = function (children) {
            var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            children.forEach(function (child, i) {
                child.__colIndex = start + i;
            });
        };

        _this.getTableEl = function (ref) {
            _this.tableEl = ref;
        };

        var _this$context = _this.context,
            getTableInstance = _this$context.getTableInstance,
            getTableInstanceForVirtual = _this$context.getTableInstanceForVirtual,
            getTableInstanceForFixed = _this$context.getTableInstanceForFixed,
            getTableInstanceForExpand = _this$context.getTableInstanceForExpand;

        getTableInstance && getTableInstance(props.lockType, _this);
        getTableInstanceForFixed && getTableInstanceForFixed(props.lockType, _this);
        getTableInstanceForVirtual && getTableInstanceForVirtual(props.lockType, _this);
        getTableInstanceForExpand && getTableInstanceForExpand(_this);
        _this.notRenderCellIndex = [];
        return _this;
    }

    Table.prototype.getChildContext = function getChildContext() {
        return {
            notRenderCellIndex: this.notRenderCellIndex || [],
            lockType: this.props.lockType
        };
    };

    Table.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
        var state = {};

        if (typeof nextProps.sort !== 'undefined') {
            state.sort = nextProps.sort;
        }

        return state;
    };

    Table.prototype.componentDidMount = function componentDidMount() {
        this.notRenderCellIndex = [];
    };

    Table.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
        if (nextProps.pure) {
            var isEqual = _shallow_element_equals_1_0_1_shallow_element_equals_default()(nextProps, this.props) && util_obj.shallowEqual(nextState, this.state) && util_obj.shallowEqual(nextContext, this.context);
            return !isEqual;
        }

        return true;
    };

    Table.prototype.componentDidUpdate = function componentDidUpdate() {
        this.notRenderCellIndex = [];
    };

    Table.prototype.normalizeChildrenState = function normalizeChildrenState(props) {
        var columns = props.columns;
        if (props.children) {
            columns = this.normalizeChildren(props);
        }
        return this.fetchInfoFromBinaryChildren(columns);
    };

    // 将React结构化数据提取props转换成数组


    Table.prototype.normalizeChildren = function normalizeChildren(props) {
        var columns = props.columns;

        var getChildren = function getChildren(children) {
            var ret = [];
            Children.forEach(children, function (child) {
                if (child) {
                    var _props = extends_default()({}, child.props);

                    if (child.ref) {
                        _props.ref = child.ref;
                    }

                    if (!(child && ['function', 'object'].indexOf(typeof_default()(child.type)) > -1 && (child.type._typeMark === 'column' || child.type._typeMark === 'columnGroup'))) {
                        log.warning('Use <Table.Column/>, <Table.ColumnGroup/> as child.');
                    }
                    ret.push(_props);
                    if (child.props.children) {
                        _props.children = getChildren(child.props.children);
                    }
                }
            });
            return ret;
        };
        if (props.children) {
            columns = getChildren(props.children);
        }
        return columns;
    };

    Table.prototype.fetchInfoFromBinaryChildren = function fetchInfoFromBinaryChildren(children) {
        var hasGroupHeader = false;
        var flatChildren = [],
            groupChildren = [],
            getChildren = function getChildren() {
            var propsChildren = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            var level = arguments[1];

            groupChildren[level] = groupChildren[level] || [];
            propsChildren.forEach(function (child) {
                if (child.children) {
                    hasGroupHeader = true;
                    getChildren(child.children, level + 1);
                } else {
                    flatChildren.push(child);
                }
                groupChildren[level].push(child);
            });
        },
            getColSpan = function getColSpan(children, colSpan) {
            colSpan = colSpan || 0;
            children.forEach(function (child) {
                if (child.children) {
                    colSpan = getColSpan(child.children, colSpan);
                } else {
                    colSpan += 1;
                }
            });
            return colSpan;
        };

        getChildren(children, 0);

        groupChildren.forEach(function (groupChild, i) {
            groupChild.forEach(function (child, j) {
                var colSpan = void 0;
                var children = child.children;

                if (children) {
                    colSpan = getColSpan(children);
                    child.colSpan = colSpan;
                    groupChildren[i][j] = child;
                }
            });
        });

        var _props2 = this.props,
            lockType = _props2.lockType,
            lengths = _props2.lengths;

        var start = lockType === 'right' ? lengths.origin - lengths.right : 0;
        this.addColIndex(flatChildren, start);

        return {
            flatChildren: flatChildren,
            groupChildren: groupChildren,
            hasGroupHeader: hasGroupHeader
        };
    };

    Table.prototype.renderColGroup = function renderColGroup(flatChildren) {
        var cols = flatChildren.map(function (col, index) {
            var width = col.width;
            var style = {};
            if (width) {
                style = {
                    width: width
                };
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('col', { style: style, key: index });
        });
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'colgroup',
            { key: 'table-colgroup' },
            cols
        );
    };

    // 通过头部和扁平的结构渲染表格
    Table.prototype.renderTable = function renderTable(groupChildren, flatChildren) {
        if (flatChildren.length || !flatChildren.length && !this.props.lockType) {
            var _props3 = this.props,
                hasHeader = _props3.hasHeader,
                components = _props3.components,
                prefix = _props3.prefix,
                wrapperContent = _props3.wrapperContent,
                filterParams = _props3.filterParams,
                locale = _props3.locale,
                dataSource = _props3.dataSource,
                emptyContent = _props3.emptyContent,
                loading = _props3.loading,
                primaryKey = _props3.primaryKey,
                cellProps = _props3.cellProps,
                rowProps = _props3.rowProps,
                onRowClick = _props3.onRowClick,
                onRowMouseEnter = _props3.onRowMouseEnter,
                onRowMouseLeave = _props3.onRowMouseLeave,
                expandedIndexSimulate = _props3.expandedIndexSimulate,
                pure = _props3.pure,
                rtl = _props3.rtl,
                crossline = _props3.crossline,
                sortIcons = _props3.sortIcons,
                tableWidth = _props3.tableWidth;
            var sort = this.state.sort;
            var _components$Header = components.Header,
                Header = _components$Header === undefined ? header_Header : _components$Header,
                _components$Wrapper = components.Wrapper,
                Wrapper = _components$Wrapper === undefined ? wrapper_Wrapper : _components$Wrapper,
                _components$Body = components.Body,
                Body = _components$Body === undefined ? body_Body : _components$Body;

            var colGroup = this.renderColGroup(flatChildren);

            return [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', {
                key: prefix + 'table-column-resize-proxy',
                ref: this.getResizeProxyDomRef,
                className: prefix + 'table-column-resize-proxy'
            }), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                Wrapper,
                {
                    key: prefix + 'table-wrapper',
                    colGroup: colGroup,
                    ref: this.getWrapperRef,
                    prefix: prefix,
                    tableWidth: tableWidth
                },
                hasHeader ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Header, {
                    prefix: prefix,
                    rtl: rtl,
                    pure: pure,
                    affixRef: this.getAffixRef,
                    colGroup: colGroup,
                    className: prefix + 'table-header',
                    filterParams: filterParams,
                    tableEl: this.tableEl,
                    columns: groupChildren,
                    locale: locale,
                    headerCellRef: this.getHeaderCellRef,
                    components: components,
                    onFilter: this.onFilter,
                    sort: sort,
                    onResizeChange: this.onResizeChange,
                    onSort: this.onSort,
                    sortIcons: sortIcons,
                    tableWidth: tableWidth,
                    resizeProxyDomRef: this.resizeProxyDomRef
                }) : null,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Body, {
                    prefix: prefix,
                    rtl: rtl,
                    pure: pure,
                    crossline: crossline,
                    colGroup: colGroup,
                    className: prefix + 'table-body',
                    components: components,
                    loading: loading,
                    emptyContent: emptyContent,
                    getCellProps: cellProps,
                    primaryKey: primaryKey,
                    getRowProps: rowProps,
                    columns: flatChildren,
                    rowRef: this.getRowRef,
                    cellRef: this.getCellRef,
                    onRowClick: onRowClick,
                    expandedIndexSimulate: expandedIndexSimulate,
                    tableEl: this.tableEl,
                    onRowMouseEnter: onRowMouseEnter,
                    onRowMouseLeave: onRowMouseLeave,
                    dataSource: dataSource,
                    locale: locale,
                    onBodyMouseOver: this.onBodyMouseOver,
                    onBodyMouseOut: this.onBodyMouseOut,
                    tableWidth: tableWidth
                }),
                wrapperContent
            )];
        } else {
            return null;
        }
    };

    /**
     * @param event
     * @returns {Object} { rowIndex: string; colIndex: string }
     */


    Table.prototype.render = function render() {
        var _classnames;

        var ret = this.normalizeChildrenState(this.props);
        this.groupChildren = ret.groupChildren;
        this.flatChildren = ret.flatChildren;
        /* eslint-disable no-unused-vars, prefer-const */
        var table = this.renderTable(ret.groupChildren, ret.flatChildren),
            _props4 = this.props,
            className = _props4.className,
            style = _props4.style,
            hasBorder = _props4.hasBorder,
            isZebra = _props4.isZebra,
            loading = _props4.loading,
            size = _props4.size,
            hasHeader = _props4.hasHeader,
            prefix = _props4.prefix,
            dataSource = _props4.dataSource,
            entireDataSource = _props4.entireDataSource,
            onSort = _props4.onSort,
            onResizeChange = _props4.onResizeChange,
            onRowClick = _props4.onRowClick,
            onRowMouseEnter = _props4.onRowMouseEnter,
            onRowMouseLeave = _props4.onRowMouseLeave,
            onFilter = _props4.onFilter,
            rowProps = _props4.rowProps,
            cellProps = _props4.cellProps,
            scrollToRow = _props4.scrollToRow,
            primaryKey = _props4.primaryKey,
            components = _props4.components,
            wrapperContent = _props4.wrapperContent,
            lockType = _props4.lockType,
            locale = _props4.locale,
            expandedIndexSimulate = _props4.expandedIndexSimulate,
            refs = _props4.refs,
            pure = _props4.pure,
            rtl = _props4.rtl,
            emptyContent = _props4.emptyContent,
            filterParams = _props4.filterParams,
            columns = _props4.columns,
            sortIcons = _props4.sortIcons,
            _props4$loadingCompon = _props4.loadingComponent,
            LoadingComponent = _props4$loadingCompon === undefined ? es_loading : _props4$loadingCompon,
            tableLayout = _props4.tableLayout,
            tableWidth = _props4.tableWidth,
            ref = _props4.ref,
            others = objectWithoutProperties_default()(_props4, ['className', 'style', 'hasBorder', 'isZebra', 'loading', 'size', 'hasHeader', 'prefix', 'dataSource', 'entireDataSource', 'onSort', 'onResizeChange', 'onRowClick', 'onRowMouseEnter', 'onRowMouseLeave', 'onFilter', 'rowProps', 'cellProps', 'scrollToRow', 'primaryKey', 'components', 'wrapperContent', 'lockType', 'locale', 'expandedIndexSimulate', 'refs', 'pure', 'rtl', 'emptyContent', 'filterParams', 'columns', 'sortIcons', 'loadingComponent', 'tableLayout', 'tableWidth', 'ref']),
            cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table'] = true, _classnames[prefix + 'table-' + size] = size, _classnames[prefix + 'table-layout-' + tableLayout] = tableLayout, _classnames['only-bottom-border'] = !hasBorder, _classnames['no-header'] = !hasHeader, _classnames.zebra = isZebra, _classnames[className] = className, _classnames));


        if (rtl) {
            others.dir = 'rtl';
        }

        var content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({
                className: cls,
                style: style,
                ref: ref || this.getTableEl
            }, util_obj.pickOthers(Object.keys(Table.propTypes), others)),
            table
        );
        if (loading) {
            var loadingClassName = prefix + 'table-loading';
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                LoadingComponent,
                { className: loadingClassName },
                content
            );
        }
        return content;
    };

    return Table;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), table_base__class.Column = column_Column, table_base__class.ColumnGroup = column_group_ColumnGroup, table_base__class.Header = header_Header, table_base__class.Body = body_Body, table_base__class.Wrapper = wrapper_Wrapper, table_base__class.Row = base_row_Row, table_base__class.Cell = base_cell_Cell, table_base__class.Filter = base_filter, table_base__class.Sort = sort_Sort, table_base__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 表格元素的 table-layout 属性，设为 fixed 表示内容不会影响列的布局
     */
    tableLayout: _prop_types_15_8_1_prop_types_default.a.oneOf(['fixed', 'auto']),
    /**
     * 表格的总长度，可以这么用：设置表格总长度 、设置部分列的宽度，这样表格会按照剩余空间大小，自动其他列分配宽度
     */
    tableWidth: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 尺寸 small为紧凑模式
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium']),
    /**
     * 表格展示的数据源
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    entireDataSource: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 点击表格每一行触发的事件
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @param {Event} e DOM事件对象
     */
    onRowClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 悬浮在表格每一行的时候触发的事件
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @param {Event} e DOM事件对象
     */
    onRowMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 离开表格每一行的时候触发的事件
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @param {Event} e DOM事件对象
     */
    onRowMouseLeave: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击列排序触发的事件
     * @param {String} dataIndex 指定的排序的字段
     * @param {String} order 排序对应的顺序, 有`desc`和`asc`两种
     */
    onSort: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击过滤确认按钮触发的事件
     * @param {Object} filterParams 过滤的字段信息
     */
    onFilter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 重设列尺寸的时候触发的事件
     * @param {String} dataIndex 指定重设的字段
     * @param {Number} value 列宽变动的数值
     */
    onResizeChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置每一行的属性，如果返回值和其他针对行操作的属性冲突则无效。
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Object} 需要设置的行属性
     */
    rowProps: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置单元格的属性，通过该属性可以进行合并单元格
     * @param {Number} rowIndex 该行所对应的序列
     * @param {Number} colIndex 该列所对应的序列
     * @param {String} dataIndex 该列所对应的字段名称
     * @param {Object} record 该行对应的记录
     * @returns {Object} 返回td元素的所支持的属性对象
     */
    cellProps: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 表格是否具有边框
     */
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 表格是否具有头部
     */
    hasHeader: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 表格是否是斑马线
     */
    isZebra: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 表格是否在加载中
     */
    loading: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义 Loading 组件
     * 请务必传递 props, 使用方式： loadingComponent={props => <Loading {...props}/>}
     * @param {LoadingProps} props 需要透传给组件的参数
     * @return {React.ReactNode} 展示的组件
     */
    loadingComponent: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 当前过滤的的keys,使用此属性可以控制表格的头部的过滤选项中哪个菜单被选中,格式为 {dataIndex: {selectedKeys:[]}}
     * 示例:
     * 假设要控制dataIndex为id的列的过滤菜单中key为one的菜单项选中
     * `<Table filterParams={{id: {selectedKeys: ['one']}}}/>`
     */
    filterParams: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 当前排序的字段,使用此属性可以控制表格的字段的排序,格式为{[dataIndex]: 'asc' | 'desc' } , 例如  {id: 'desc'}
     */
    sort: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义排序按钮，例如上下排布的: `{desc: <Icon style={{top: '6px', left: '4px'}} type={'arrow-down'} size="small" />, asc: <Icon style={{top: '-6px', left: '4px'}} type={'arrow-up'} size="small" />}`
     */
    sortIcons: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 自定义国际化文案对象
     * @property {String} ok 过滤器中确认按钮文案
     * @property {String} reset 过滤器中重置按钮文案
     * @property {String} empty 没有数据情况下 table内的文案
     * @property {String} asc 排序升序状态下的文案
     * @property {String} desc 排序将序状态下的文案
     * @property {String} expanded 可折叠行，展开状态下的文案
     * @property {String} folded 可折叠行，折叠状态下的文案
     * @property {String} filter 过滤器文案
     * @property {String} selectAll header里全选的按钮文案
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    components: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 等同于写子组件 Table.Column ，子组件优先级更高
     */
    columns: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 设置数据为空的时候的表格内容展现
     */
    emptyContent: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * dataSource当中数据的主键，如果给定的数据源中的属性不包含该主键，会造成选择状态全部选中
     */
    primaryKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.symbol, _prop_types_15_8_1_prop_types_default.a.string]),
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
    wrapperContent: _prop_types_15_8_1_prop_types_default.a.any,
    refs: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 额外渲染行的渲染函数
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Element} 渲染内容
     */
    expandedRowRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置行是否可展开，设置 false 为不可展开
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Boolean} 是否可展开
     */
    rowExpandable: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 额外渲染行的缩进
     */
    expandedRowIndent: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 是否显示点击展开额外渲染行的+号按钮
     */
    hasExpandedRowCtrl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 设置额外渲染行的属性
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Object} 额外渲染行的属性
     */
    getExpandedColProps: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 当前展开的 Expand行 或者 Tree行 , 传入此属性为受控状态，一般配合 onRowOpen 使用
     */
    openRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 默认情况下展开的 Expand行 或者 Tree行，非受控模式
     * @version 1.23.22
     */
    defaultOpenRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 在 Expand行 或者 Tree行 展开或者收起的时候触发的事件
     * @param {Array} openRowKeys 展开的渲染行的key
     * @param {String} currentRowKey 当前点击的渲染行的key
     * @param {Boolean} expanded 当前点击是展开还是收起
     * @param {Object} currentRecord 当前点击额外渲染行的记录
     */
    onRowOpen: _prop_types_15_8_1_prop_types_default.a.func,
    onExpandedRowClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 表头是否固定，该属性配合maxBodyHeight使用，当内容区域的高度超过maxBodyHeight的时候，在内容区域会出现滚动条
     */
    fixedHeader: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 最大内容区域的高度,在`fixedHeader`为`true`的时候,超过这个高度会出现滚动条
     */
    maxBodyHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 是否启用选择模式
     * @property {Function} getProps `Function(record, index)=>Object` 获取selection的默认属性
     * @property {Function} onChange `Function(selectedRowKeys:Array, records:Array)` 选择改变的时候触发的事件，**注意:** 其中records只会包含当前dataSource的数据，很可能会小于selectedRowKeys的长度。
     * @property {Function} onSelect `Function(selected:Boolean, record:Object, records:Array)` 用户手动选择/取消选择某行的回调
     * @property {Function} onSelectAll `Function(selected:Boolean, records:Array)` 用户手动选择/取消选择所有行的回调
     * @property {Array} selectedRowKeys 设置了此属性,将rowSelection变为受控状态,接收值为该行数据的primaryKey的值
     * @property {String} mode 选择selection的模式, 可选值为`single`, `multiple`，默认为`multiple`
     * @property {Function} columnProps `Function()=>Object` 选择列 的props，例如锁列、对齐等，可使用`Table.Column` 的所有参数
     * @property {Function} titleProps `Function()=>Object` 选择列 表头的props，仅在 `multiple` 模式下生效
     * @property {Function} titleAddons `Function()=>Node` 选择列 表头添加的元素，在`single` `multiple` 下都生效
     */
    rowSelection: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 表头是否是sticky
     */
    stickyHeader: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 距离窗口顶部达到指定偏移量后触发
     */
    offsetTop: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * affix组件的的属性
     */
    affixProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 在tree模式下的缩进尺寸， 仅在isTree为true时候有效
     */
    indent: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 开启Table的tree模式, 接收的数据格式中包含children则渲染成tree table
     */
    isTree: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    rowHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.func]),
    /**
     * 滚动到第几行，需要保证行高相同。1.22.15 版本之前仅在虚拟滚动场景下生效，之后在所有情况下生效
     * @version 1.22.15
     */
    scrollToRow: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 在内容区域滚动的时候触发的函数
     */
    onBodyScroll: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 开启时，getExpandedColProps() / rowProps() / expandedRowRender() 的第二个参数 index (该行所对应的序列) 将按照01,2,3,4...的顺序返回，否则返回真实index(0,2,4,6... / 1,3,5,7...)
     */
    expandedIndexSimulate: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 在 hover 时出现十字参考轴，适用于表头比较复杂，需要做表头分类的场景。
     */
    crossline: _prop_types_15_8_1_prop_types_default.a.bool,
    lengths: _prop_types_15_8_1_prop_types_default.a.object
}), table_base__class.defaultProps = {
    dataSource: [],
    onRowClick: table_base_noop,
    onRowMouseEnter: table_base_noop,
    onRowMouseLeave: table_base_noop,
    onSort: table_base_noop,
    onFilter: table_base_noop,
    onResizeChange: table_base_noop,
    size: 'medium',
    rowProps: table_base_noop,
    cellProps: table_base_noop,
    prefix: 'next-',
    hasBorder: true,
    hasHeader: true,
    isZebra: false,
    loading: false,
    expandedIndexSimulate: false,
    primaryKey: 'id',
    components: {},
    locale: locale_zh_cn.Table,
    crossline: false
}, table_base__class.childContextTypes = {
    notRenderCellIndex: _prop_types_15_8_1_prop_types_default.a.array,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}, table_base__class.contextTypes = {
    getTableInstance: _prop_types_15_8_1_prop_types_default.a.func,
    getTableInstanceForFixed: _prop_types_15_8_1_prop_types_default.a.func,
    getTableInstanceForVirtual: _prop_types_15_8_1_prop_types_default.a.func,
    getTableInstanceForExpand: _prop_types_15_8_1_prop_types_default.a.func
}, table_base__temp);
base_Table.displayName = 'Table';


/* harmony default export */ var table_base = (Object(react_lifecycles_compat_es["polyfill"])(base_Table));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/lock/row.js





var lock_row__class, lock_row__temp2;





var row_LockRow = (lock_row__temp2 = lock_row__class = function (_React$Component) {
    inherits_default()(LockRow, _React$Component);

    function LockRow() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, LockRow);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onMouseEnter = function (record, index, e) {
            var onRowMouseEnter = _this.context.onRowMouseEnter;
            var onMouseEnter = _this.props.onMouseEnter;

            onRowMouseEnter && onRowMouseEnter(record, index, e);
            onMouseEnter(record, index, e);
        }, _this.onMouseLeave = function (record, index, e) {
            var onRowMouseLeave = _this.context.onRowMouseLeave;
            var onMouseLeave = _this.props.onMouseLeave;

            onRowMouseLeave && onRowMouseLeave(record, index, e);
            onMouseLeave(record, index, e);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    LockRow.prototype.render = function render() {
        /* eslint-disable no-unused-vars*/
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(base_row_Row, extends_default()({}, this.props, {
            onMouseEnter: this.onMouseEnter,
            onMouseLeave: this.onMouseLeave
        }));
    };

    return LockRow;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), lock_row__class.propTypes = extends_default()({}, base_row_Row.propTypes), lock_row__class.contextTypes = {
    onRowMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
    onRowMouseLeave: _prop_types_15_8_1_prop_types_default.a.func
}, lock_row__class.defaultProps = extends_default()({}, base_row_Row.defaultProps), lock_row__temp2);
row_LockRow.displayName = 'LockRow';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/expanded/row.js






var expanded_row__class, expanded_row__temp2;






var row_ExpandedRow = (expanded_row__temp2 = expanded_row__class = function (_React$Component) {
    inherits_default()(ExpandedRow, _React$Component);

    function ExpandedRow() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, ExpandedRow);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getExpandedRow = function (parentKey, ref) {
            var getExpandedRowRef = _this.context.getExpandedRowRef;

            getExpandedRowRef && getExpandedRowRef(parentKey, ref);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    ExpandedRow.prototype.renderExpandedRow = function renderExpandedRow(record, rowIndex) {
        var _context = this.context,
            expandedRowRender = _context.expandedRowRender,
            expandedRowIndent = _context.expandedRowIndent,
            openRowKeys = _context.openRowKeys,
            lockType = _context.lockType,
            expandedIndexSimulate = _context.expandedIndexSimulate,
            expandedRowWidthEquals2Table = _context.expandedRowWidthEquals2Table;

        var expandedIndex = expandedIndexSimulate ? (rowIndex - 1) / 2 : rowIndex;

        var _props = this.props,
            columns = _props.columns,
            cellRef = _props.cellRef;

        var colSpan = columns.length;
        var expandedCols = columns[0] && columns[0].__colIndex || 0;

        if (expandedRowRender) {
            var _props2 = this.props,
                primaryKey = _props2.primaryKey,
                prefix = _props2.prefix,
                leftIndent = expandedRowIndent[0],
                rightIndent = expandedRowIndent[1],
                totalIndent = leftIndent + rightIndent,
                renderCols = function renderCols(number) {
                var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

                var ret = [];

                var _loop = function _loop(i) {
                    ret.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'td',
                        { key: i, ref: function ref(cell) {
                                return cellRef(rowIndex, i + start, cell);
                            } },
                        '\xA0'
                    ));
                };

                for (var i = 0; i < number; i++) {
                    _loop(i);
                }
                return ret;
            };

            var content = void 0;

            if (totalIndent > colSpan && !lockType) {
                log.warning("It's not allowed expandedRowIndent is more than the number of columns.");
            }
            if (leftIndent < columns.length && lockType === 'left') {
                log.warning('expandedRowIndent left is less than the number of left lock columns.');
            }
            if (rightIndent < columns.length && lockType === 'right') {
                log.warning('expandedRowIndent right is less than the number of right lock columns.');
            }
            if (lockType) {
                return openRowKeys.indexOf(record[primaryKey]) > -1 ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'tr',
                    { className: prefix + 'table-expanded-row', key: 'expanded-' + expandedIndex },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'td',
                        { colSpan: colSpan, ref: function ref(cell) {
                                return cellRef(rowIndex, expandedCols, cell);
                            } },
                        '\xA0'
                    )
                ) : null;
            }

            var expandedRowStyle = {
                position: 'sticky',
                left: 0
            };
            // 暴露给用户的index
            content = expandedRowRender(record, expandedIndex);
            if (!external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(content)) {
                content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        className: prefix + 'table-cell-wrapper',
                        ref: this.getExpandedRow.bind(this, record[primaryKey]),
                        style: expandedRowWidthEquals2Table && expandedRowStyle
                    },
                    content
                );
            } else {
                content = expandedRowWidthEquals2Table ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        className: prefix + 'table-expanded-area',
                        ref: this.getExpandedRow.bind(this, record[primaryKey]),
                        style: expandedRowStyle
                    },
                    content
                ) : content;
            }

            var rightStart = columns.length;
            columns.forEach(function (col) {
                col.lock === 'right' && rightStart--;
            });
            return openRowKeys.indexOf(record[primaryKey]) > -1 ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                { className: prefix + 'table-expanded-row', key: 'expanded-' + (record[primaryKey] || expandedIndex) },
                renderCols(leftIndent),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'td',
                    { colSpan: colSpan - totalIndent },
                    content
                ),
                renderCols(rightIndent, rightStart)
            ) : null;
        } else {
            return null;
        }
    };

    ExpandedRow.prototype.render = function render() {
        /* eslint-disable no-unused-vars*/
        var _props3 = this.props,
            record = _props3.record,
            rowIndex = _props3.rowIndex,
            columns = _props3.columns,
            others = objectWithoutProperties_default()(_props3, ['record', 'rowIndex', 'columns']);

        var expandedIndexSimulate = this.context.expandedIndexSimulate;


        if (record.__expanded) {
            return this.renderExpandedRow(record, rowIndex, columns);
        }

        var newRowIndex = expandedIndexSimulate ? rowIndex / 2 : rowIndex;
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(row_LockRow, extends_default()({}, others, { record: record, columns: columns, __rowIndex: rowIndex, rowIndex: newRowIndex }));
    };

    return ExpandedRow;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), expanded_row__class.propTypes = extends_default()({}, row_LockRow.propTypes), expanded_row__class.defaultProps = extends_default()({}, row_LockRow.defaultProps), expanded_row__class.contextTypes = {
    openRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
    expandedRowRender: _prop_types_15_8_1_prop_types_default.a.func,
    expandedRowIndent: _prop_types_15_8_1_prop_types_default.a.array,
    expandedIndexSimulate: _prop_types_15_8_1_prop_types_default.a.bool,
    expandedRowWidthEquals2Table: _prop_types_15_8_1_prop_types_default.a.bool,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
    getExpandedRowRef: _prop_types_15_8_1_prop_types_default.a.func
}, expanded_row__temp2);
row_ExpandedRow.displayName = 'ExpandedRow';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/selection/row.js





var selection_row__class, selection_row__temp;






/* eslint-disable react/prefer-stateless-function */
var row_SelectionRow = (selection_row__temp = selection_row__class = function (_React$Component) {
    inherits_default()(SelectionRow, _React$Component);

    function SelectionRow() {
        classCallCheck_default()(this, SelectionRow);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    SelectionRow.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            className = _props.className,
            record = _props.record,
            primaryKey = _props.primaryKey;
        var selectedRowKeys = this.context.selectedRowKeys;

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {
            selected: selectedRowKeys.indexOf(record[primaryKey]) > -1
        }, _classnames[className] = className, _classnames));
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(row_ExpandedRow, extends_default()({}, this.props, { className: cls }));
    };

    return SelectionRow;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), selection_row__class.propTypes = extends_default()({}, row_ExpandedRow.propTypes), selection_row__class.defaultProps = extends_default()({}, row_ExpandedRow.defaultProps), selection_row__class.contextTypes = {
    selectedRowKeys: _prop_types_15_8_1_prop_types_default.a.array
}, selection_row__temp);
row_SelectionRow.displayName = 'SelectionRow';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/tree/row.js






var tree_row__class, tree_row__temp;






/* eslint-disable react/prefer-stateless-function */
var row_TreeRow = (tree_row__temp = tree_row__class = function (_React$Component) {
    inherits_default()(TreeRow, _React$Component);

    function TreeRow() {
        classCallCheck_default()(this, TreeRow);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    TreeRow.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            className = _props.className,
            record = _props.record,
            primaryKey = _props.primaryKey,
            prefix = _props.prefix,
            others = objectWithoutProperties_default()(_props, ['className', 'record', 'primaryKey', 'prefix']);

        var _context = this.context,
            treeStatus = _context.treeStatus,
            openRowKeys = _context.openRowKeys;

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {
            hidden: !(treeStatus.indexOf(record[primaryKey]) > -1) && record.__level !== 0
        }, _classnames[prefix + 'table-row-level-' + record.__level] = true, _classnames.opened = openRowKeys.indexOf(record[primaryKey]) > -1, _classnames[className] = className, _classnames));
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(row_SelectionRow, extends_default()({}, others, {
            record: record,
            className: cls,
            primaryKey: primaryKey,
            prefix: prefix
        }));
    };

    return TreeRow;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), tree_row__class.propTypes = extends_default()({}, row_SelectionRow.propTypes), tree_row__class.defaultProps = extends_default()({}, row_SelectionRow.defaultProps), tree_row__class.contextTypes = {
    treeStatus: _prop_types_15_8_1_prop_types_default.a.array,
    openRowKeys: _prop_types_15_8_1_prop_types_default.a.array
}, tree_row__temp);
row_TreeRow.displayName = 'TreeRow';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/tree/cell.js





var tree_cell__class, cell__temp2;







var cell_TreeCell = (cell__temp2 = tree_cell__class = function (_React$Component) {
    inherits_default()(TreeCell, _React$Component);

    function TreeCell() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, TreeCell);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onTreeNodeClick = function (record, e) {
            e.stopPropagation();
            _this.context.onTreeNodeClick(record);
        }, _this.expandedKeydown = function (record, e) {
            e.preventDefault();
            e.stopPropagation();

            if (e.keyCode === KEYCODE.ENTER) {
                _this.onTreeNodeClick(record, e);
            }
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    TreeCell.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            colIndex = _props.colIndex,
            record = _props.record,
            prefix = _props.prefix,
            primaryKey = _props.primaryKey,
            locale = _props.locale,
            rtl = _props.rtl,
            children = _props.children;
        var _context = this.context,
            openRowKeys = _context.openTreeRowKeys,
            indent = _context.indent,
            isTree = _context.isTree,
            rowSelection = _context.rowSelection;

        var treeArrowNodeIndex = rowSelection ? 1 : 0;
        var firstCellStyle = void 0,
            treeArrowNode = void 0;
        if (colIndex === treeArrowNodeIndex) {
            var treeArrowType = void 0;
            if (isTree) {
                var _firstCellStyle;

                var paddingType = rtl ? 'paddingRight' : 'paddingLeft';
                firstCellStyle = (_firstCellStyle = {}, _firstCellStyle[paddingType] = indent * (record.__level + 1), _firstCellStyle);
                treeArrowNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    size: 'xs',
                    rtl: rtl,
                    className: prefix + 'table-tree-placeholder'
                });
                if (record.children && record.children.length) {
                    var hasExpanded = openRowKeys.indexOf(record[primaryKey]) > -1;

                    treeArrowType = hasExpanded ? 'arrow-down' : 'arrow-right';

                    treeArrowNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                        className: prefix + 'table-tree-arrow',
                        type: treeArrowType,
                        size: 'xs',
                        rtl: rtl,
                        onClick: function onClick(e) {
                            return _this2.onTreeNodeClick(record, e);
                        },
                        onKeyDown: function onKeyDown(e) {
                            return _this2.expandedKeydown(record, e);
                        },
                        role: 'button',
                        tabIndex: '0',
                        'aria-expanded': hasExpanded,
                        'aria-label': hasExpanded ? locale.expanded : locale.folded
                    });
                }
            }
        }
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            base_cell_Cell,
            extends_default()({}, this.props, {
                innerStyle: firstCellStyle,
                isIconLeft: !!treeArrowNode
            }),
            children,
            treeArrowNode
        );
    };

    return TreeCell;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), tree_cell__class.propTypes = extends_default()({
    indent: _prop_types_15_8_1_prop_types_default.a.number,
    locale: _prop_types_15_8_1_prop_types_default.a.object
}, base_cell_Cell.propTypes), tree_cell__class.defaultProps = extends_default()({}, base_cell_Cell.defaultProps, {
    component: 'td',
    indent: 20
}), tree_cell__class.contextTypes = {
    openTreeRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
    indent: _prop_types_15_8_1_prop_types_default.a.number,
    onTreeNodeClick: _prop_types_15_8_1_prop_types_default.a.func,
    isTree: _prop_types_15_8_1_prop_types_default.a.bool,
    rowSelection: _prop_types_15_8_1_prop_types_default.a.object
}, cell__temp2);
cell_TreeCell.displayName = 'TreeCell';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/tree.js












var tree_noop = function noop() {};

function tree(BaseComponent) {
    var _class, _temp;

    var TreeTable = (_temp = _class = function (_React$Component) {
        inherits_default()(TreeTable, _React$Component);

        function TreeTable(props, context) {
            classCallCheck_default()(this, TreeTable);

            var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

            _this.onTreeNodeClick = function (record) {
                var primaryKey = _this.props.primaryKey,
                    id = record[primaryKey],
                    dataSource = _this.ds,
                    openRowKeys = [].concat(_this.state.openRowKeys),
                    index = openRowKeys.indexOf(id),
                    getChildrenKeyById = function getChildrenKeyById(id) {
                    var ret = [id];
                    var loop = function loop(data) {
                        data.forEach(function (item) {
                            ret.push(item[primaryKey]);
                            if (item.children) {
                                loop(item.children);
                            }
                        });
                    };
                    dataSource.forEach(function (item) {
                        if (item[primaryKey] === id) {
                            if (item.children) {
                                loop(item.children);
                            }
                        }
                    });
                    return ret;
                };


                if (index > -1) {
                    // 不仅要删除当前的openRowKey，还需要删除关联子节点的openRowKey
                    var ids = getChildrenKeyById(id);
                    ids.forEach(function (id) {
                        var i = openRowKeys.indexOf(id);
                        if (i > -1) {
                            openRowKeys.splice(i, 1);
                        }
                    });
                } else {
                    openRowKeys.push(id);
                }

                if (!('openRowKeys' in _this.props)) {
                    _this.setState({
                        openRowKeys: openRowKeys
                    });
                }
                _this.props.onRowOpen(openRowKeys, id, index === -1, record);
            };

            _this.state = {
                openRowKeys: props.openRowKeys || props.defaultOpenRowKeys || []
            };
            return _this;
        }

        TreeTable.prototype.getChildContext = function getChildContext() {
            return {
                openTreeRowKeys: this.state.openRowKeys,
                indent: this.props.indent,
                treeStatus: this.getTreeNodeStatus(this.ds),
                onTreeNodeClick: this.onTreeNodeClick,
                isTree: this.props.isTree
            };
        };

        TreeTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
            if ('openRowKeys' in nextProps) {
                return {
                    openRowKeys: nextProps.openRowKeys || []
                };
            }

            return null;
        };

        TreeTable.prototype.normalizeDataSource = function normalizeDataSource(dataSource) {
            var openRowKeys = this.state.openRowKeys;
            var primaryKey = this.props.primaryKey;

            var ret = [],
                loop = function loop(dataSource, level) {
                var parentId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

                dataSource.forEach(function (item) {
                    item.__level = level;

                    if (level === 0 || openRowKeys.indexOf(parentId) > -1) {
                        item.hidden = false;
                    } else {
                        item.hidden = true;
                    }
                    ret.push(item);

                    if (item.children) {
                        loop(item.children, level + 1, item[primaryKey]);
                    }
                });
            };
            loop(dataSource, 0);
            this.ds = ret;
            return ret;
        };

        TreeTable.prototype.getTreeNodeStatus = function getTreeNodeStatus() {
            var dataSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            var openRowKeys = this.state.openRowKeys,
                primaryKey = this.props.primaryKey,
                ret = [];


            openRowKeys.forEach(function (openKey) {
                dataSource.forEach(function (item) {
                    if (item[primaryKey] === openKey) {
                        if (item.children) {
                            item.children.forEach(function (child) {
                                ret.push(child[primaryKey]);
                            });
                        }
                    }
                });
            });
            return ret;
        };

        TreeTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props = this.props,
                components = _props.components,
                isTree = _props.isTree,
                dataSource = _props.dataSource,
                indent = _props.indent,
                others = objectWithoutProperties_default()(_props, ['components', 'isTree', 'dataSource', 'indent']);

            if (isTree) {
                components = extends_default()({}, components);
                if (!components.Row) {
                    components.Row = row_TreeRow;
                }
                if (!components.Cell) {
                    components.Cell = cell_TreeCell;
                }

                dataSource = this.normalizeDataSource(dataSource);
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, { dataSource: dataSource, components: components }));
        };

        return TreeTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.TreeRow = row_TreeRow, _class.TreeCell = cell_TreeCell, _class.propTypes = extends_default()({
        /**
         * 默认情况下展开的树形表格，传入了此属性代表tree的展开为受控操作
         */
        openRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
        /**
         * 默认情况下展开的 Expand行 或者 Tree行，非受控模式
         * @version 1.23.22
         */
        defaultOpenRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
        /**
         * 点击tree展开或者关闭的时候触发的事件
         * @param {Array} openRowKeys tree模式下展开的key
         * @param {String} currentRowKey 当前点击行的key
         * @param {Boolean} opened 当前点击是展开还是收起
         * @param {Object} currentRecord 当前点击行的记录
         */
        onRowOpen: _prop_types_15_8_1_prop_types_default.a.func,
        /**
         * dataSource当中数据的主键，如果给定的数据源中的属性不包含该主键，会造成选择状态全部选中
         */
        primaryKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.symbol, _prop_types_15_8_1_prop_types_default.a.string]),
        /**
         * 在tree模式下的缩进尺寸， 仅在isTree为true时候有效
         */
        indent: _prop_types_15_8_1_prop_types_default.a.number,
        /**
         * 开启Table的tree模式, 接收的数据格式中包含children则渲染成tree table
         */
        isTree: _prop_types_15_8_1_prop_types_default.a.bool,
        locale: _prop_types_15_8_1_prop_types_default.a.object
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps, {
        primaryKey: 'id',
        onRowOpen: tree_noop,
        components: {},
        indent: 12
    }), _class.childContextTypes = {
        openTreeRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
        indent: _prop_types_15_8_1_prop_types_default.a.number,
        treeStatus: _prop_types_15_8_1_prop_types_default.a.array,
        onTreeNodeClick: _prop_types_15_8_1_prop_types_default.a.func,
        isTree: _prop_types_15_8_1_prop_types_default.a.bool
    }, _temp);
    TreeTable.displayName = 'TreeTable';

    statics(TreeTable, BaseComponent);
    return Object(react_lifecycles_compat_es["polyfill"])(TreeTable);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/fixed/header.js






var fixed_header__class, fixed_header__temp;






/* eslint-disable react/prefer-stateless-function */
var header_FixedHeader = (fixed_header__temp = fixed_header__class = function (_React$Component) {
    inherits_default()(FixedHeader, _React$Component);

    function FixedHeader() {
        classCallCheck_default()(this, FixedHeader);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    FixedHeader.prototype.componentDidMount = function componentDidMount() {
        this.context.getNode('header', Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this));
    };

    // 这里的 style={{overflow: 'unset'}} 可以删掉，只是为了解决用户js升级但是样式没升级的情况
    // 这里的 style={{position: 'absolute', right: 0}} 也可以删掉，是为了兼容用户js升级但是样式没升级的情况


    FixedHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            colGroup = _props.colGroup,
            tableWidth = _props.tableWidth,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'colGroup', 'tableWidth']);

        var _context = this.context,
            onFixedScrollSync = _context.onFixedScrollSync,
            lockType = _context.lockType;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: className, onScroll: onFixedScrollSync },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'table-header-inner', style: { overflow: 'unset' } },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'table',
                    { style: { width: tableWidth } },
                    colGroup,
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(header_Header, extends_default()({}, others, { prefix: prefix }))
                )
            ),
            !lockType && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: prefix + 'table-header-fixer', style: { position: 'absolute', right: 0 } })
        );
    };

    return FixedHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), fixed_header__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.any,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    colGroup: _prop_types_15_8_1_prop_types_default.a.any,
    tableWidth: _prop_types_15_8_1_prop_types_default.a.number
}, fixed_header__class.contextTypes = {
    getNode: _prop_types_15_8_1_prop_types_default.a.func,
    onFixedScrollSync: _prop_types_15_8_1_prop_types_default.a.func,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}, fixed_header__temp);
header_FixedHeader.displayName = 'FixedHeader';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/fixed/body.js






var fixed_body__class, fixed_body__temp2;






/* eslint-disable react/prefer-stateless-function */
var body_FixedBody = (fixed_body__temp2 = fixed_body__class = function (_React$Component) {
    inherits_default()(FixedBody, _React$Component);

    function FixedBody() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, FixedBody);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onBodyScroll = function (event) {
            var onFixedScrollSync = _this.context.onFixedScrollSync;
            // sync scroll left to header

            onFixedScrollSync && onFixedScrollSync(event);

            // sync scroll top/left to lock columns
            if ('onLockScroll' in _this.props && typeof _this.props.onLockScroll === 'function') {
                _this.props.onLockScroll(event);
            }
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    FixedBody.prototype.componentDidMount = function componentDidMount() {
        var getNode = this.context.getNode;

        getNode && getNode('body', Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this));
    };

    FixedBody.prototype.render = function render() {
        /*eslint-disable no-unused-vars */
        var _props = this.props,
            className = _props.className,
            colGroup = _props.colGroup,
            onLockScroll = _props.onLockScroll,
            tableWidth = _props.tableWidth,
            others = objectWithoutProperties_default()(_props, ['className', 'colGroup', 'onLockScroll', 'tableWidth']);

        var _context = this.context,
            maxBodyHeight = _context.maxBodyHeight,
            fixedHeader = _context.fixedHeader;

        var style = {};
        if (fixedHeader) {
            style.maxHeight = maxBodyHeight;
            style.position = 'relative';
        }
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                style: style,
                className: className,
                onScroll: this.onBodyScroll
            },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'table',
                { style: { width: tableWidth } },
                colGroup,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(body_Body, extends_default()({}, others, { colGroup: colGroup }))
            )
        );
    };

    return FixedBody;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), fixed_body__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.any,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    colGroup: _prop_types_15_8_1_prop_types_default.a.any,
    onLockScroll: _prop_types_15_8_1_prop_types_default.a.func,
    tableWidth: _prop_types_15_8_1_prop_types_default.a.number
}, fixed_body__class.contextTypes = {
    fixedHeader: _prop_types_15_8_1_prop_types_default.a.bool,
    maxBodyHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    onFixedScrollSync: _prop_types_15_8_1_prop_types_default.a.func,
    getNode: _prop_types_15_8_1_prop_types_default.a.func
}, fixed_body__temp2);
body_FixedBody.displayName = 'FixedBody';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/fixed/wrapper.js




var fixed_wrapper__class, fixed_wrapper__temp;




/* eslint-disable react/prefer-stateless-function */
var wrapper_FixedWrapper = (fixed_wrapper__temp = fixed_wrapper__class = function (_React$Component) {
    inherits_default()(FixedWrapper, _React$Component);

    function FixedWrapper() {
        classCallCheck_default()(this, FixedWrapper);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    FixedWrapper.prototype.render = function render() {
        var _props = this.props,
            children = _props.children,
            wrapperContent = _props.wrapperContent,
            prefix = _props.prefix;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'table-inner' },
            children,
            wrapperContent
        );
    };

    return FixedWrapper;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), fixed_wrapper__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.any,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    colGroup: _prop_types_15_8_1_prop_types_default.a.any,
    wrapperContent: _prop_types_15_8_1_prop_types_default.a.any
}, fixed_wrapper__temp);
wrapper_FixedWrapper.displayName = 'FixedWrapper';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/fixed.js















function fixed_fixed(BaseComponent, stickyLock) {
    var _class, _temp2;

    /** Table */
    var FixedTable = (_temp2 = _class = function (_React$Component) {
        inherits_default()(FixedTable, _React$Component);

        function FixedTable() {
            var _temp, _this, _ret;

            classCallCheck_default()(this, FixedTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.getNode = function (type, node, lockType) {
                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';
                _this['' + type + lockType + 'Node'] = node;
            }, _this.getTableInstance = function (type, instance) {
                type = '';
                _this['table' + type + 'Inc'] = instance;
            }, _this.onFixedScrollSync = function () {
                var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { currentTarget: {} };

                var currentTarget = current.currentTarget || {},
                    headerNode = _this.headerNode,
                    bodyNode = _this.bodyNode;

                var scrollLeft = currentTarget.scrollLeft,
                    scrollWidth = currentTarget.scrollWidth,
                    clientWidth = currentTarget.clientWidth;

                var scrollToRightEnd = !(scrollLeft < scrollWidth - clientWidth);
                var _this$props = _this.props,
                    prefix = _this$props.prefix,
                    loading = _this$props.loading;


                if (!loading && scrollToRightEnd !== _this.scrollToRightEnd) {
                    _this.scrollToRightEnd = scrollToRightEnd;
                    var table = _this.getTableNode();

                    var leftFunc = scrollToRightEnd ? 'removeClass' : 'addClass';
                    util_dom[leftFunc](table, prefix + 'table-scrolling-to-right');
                }
                if (current.currentTarget !== current.target) {
                    return;
                }
                if (currentTarget === bodyNode) {
                    if (headerNode && scrollLeft !== headerNode.scrollLeft) {
                        headerNode.scrollLeft = scrollLeft;
                    }
                } else if (currentTarget === headerNode) {
                    if (bodyNode && scrollLeft !== bodyNode.scrollLeft) {
                        bodyNode.scrollLeft = scrollLeft;
                    }
                }
            }, _temp), possibleConstructorReturn_default()(_this, _ret);
        }

        FixedTable.prototype.getChildContext = function getChildContext() {
            return {
                fixedHeader: this.props.fixedHeader,
                maxBodyHeight: this.props.maxBodyHeight,
                getTableInstanceForFixed: this.getTableInstance,
                onFixedScrollSync: this.onFixedScrollSync,
                getNode: this.getNode
            };
        };

        FixedTable.prototype.componentDidMount = function componentDidMount() {
            this.adjustFixedHeaderSize();
            this.scrollToRightEnd = undefined;
            this.onFixedScrollSync({ currentTarget: this.bodyNode, target: this.bodyNode });
        };

        FixedTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.adjustFixedHeaderSize();
            this.onFixedScrollSync({ currentTarget: this.bodyNode, target: this.bodyNode });
        };

        FixedTable.prototype.getTableNode = function getTableNode() {
            var table = this.tableInc;
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.tableEl);
            } catch (error) {
                return null;
            }
        };

        // for fixed header scroll left


        FixedTable.prototype.adjustFixedHeaderSize = function adjustFixedHeaderSize() {
            var _props = this.props,
                hasHeader = _props.hasHeader,
                rtl = _props.rtl,
                prefix = _props.prefix;

            var paddingName = rtl ? 'paddingLeft' : 'paddingRight';
            var marginName = rtl ? 'marginLeft' : 'marginRight';
            var body = this.bodyNode;
            var scrollBarSize = +util_dom.scrollbar().width || 0;

            if (hasHeader && !this.props.lockType && body) {
                var hasVerScroll = body.scrollHeight > body.clientHeight,
                    hasHozScroll = body.scrollWidth > body.clientWidth;
                var style = {};
                if (!hasVerScroll) {
                    style[paddingName] = 0;
                    style[marginName] = 0;
                }

                if (+scrollBarSize) {
                    style.marginBottom = -scrollBarSize;
                    if (hasHozScroll) {
                        style.paddingBottom = scrollBarSize;
                    } else {
                        style.paddingBottom = scrollBarSize;
                    }
                    if (hasVerScroll) {
                        style[marginName] = scrollBarSize;
                    }
                }

                util_dom.setStyle(this.headerNode, style);
            }

            if (hasHeader && !this.props.lockType && this.headerNode) {
                var fixer = this.headerNode.querySelector('.' + prefix + 'table-header-fixer');
                var height = util_dom.getStyle(this.headerNode, 'height');
                var paddingBottom = util_dom.getStyle(this.headerNode, 'paddingBottom');

                util_dom.setStyle(fixer, {
                    width: scrollBarSize,
                    height: height - paddingBottom
                });
            }
        };

        FixedTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props2 = this.props,
                components = _props2.components,
                className = _props2.className,
                prefix = _props2.prefix,
                fixedHeader = _props2.fixedHeader,
                lockType = _props2.lockType,
                dataSource = _props2.dataSource,
                maxBodyHeight = _props2.maxBodyHeight,
                others = objectWithoutProperties_default()(_props2, ['components', 'className', 'prefix', 'fixedHeader', 'lockType', 'dataSource', 'maxBodyHeight']);

            if (fixedHeader) {
                var _classnames;

                components = extends_default()({}, components);
                if (!components.Header) {
                    components.Header = header_FixedHeader;
                }
                if (!components.Body) {
                    components.Body = body_FixedBody;
                }
                if (!components.Wrapper) {
                    components.Wrapper = wrapper_FixedWrapper;
                }
                className = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-fixed'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                dataSource: dataSource,
                lockType: lockType,
                components: components,
                className: className,
                prefix: prefix
            }));
        };

        return FixedTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.FixedHeader = header_FixedHeader, _class.FixedBody = body_FixedBody, _class.FixedWrapper = wrapper_FixedWrapper, _class.propTypes = extends_default()({
        /**
         * 是否具有表头
         */
        hasHeader: _prop_types_15_8_1_prop_types_default.a.bool,
        /**
         * 表头是否固定，该属性配合maxBodyHeight使用，当内容区域的高度超过maxBodyHeight的时候，在内容区域会出现滚动条
         */
        fixedHeader: _prop_types_15_8_1_prop_types_default.a.bool,
        /**
         * 最大内容区域的高度,在`fixedHeader`为`true`的时候,超过这个高度会出现滚动条
         */
        maxBodyHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string])
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps, {
        hasHeader: true,
        fixedHeader: false,
        maxBodyHeight: 200,
        components: {},
        refs: {},
        prefix: 'next-'
    }), _class.childContextTypes = {
        fixedHeader: _prop_types_15_8_1_prop_types_default.a.bool,
        getNode: _prop_types_15_8_1_prop_types_default.a.func,
        onFixedScrollSync: _prop_types_15_8_1_prop_types_default.a.func,
        getTableInstanceForFixed: _prop_types_15_8_1_prop_types_default.a.func,
        maxBodyHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string])
    }, _temp2);
    FixedTable.displayName = 'FixedTable';

    statics(FixedTable, BaseComponent);
    return FixedTable;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/selection.js
















var selection_makeChain = func.makeChain;


var unique = function unique(arr) {
    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'this';

    var temp = {},
        ret = [];
    arr.forEach(function (item) {
        var value = void 0;
        if (key === 'this') {
            value = item;
        } else {
            value = item[key];
        }
        if (!temp[value]) {
            ret.push(item);
            temp[value] = true;
        }
    });
    return ret;
};

function selection(BaseComponent) {
    var _class, _temp;

    /** Table */
    var SelectionTable = (_temp = _class = function (_React$Component) {
        inherits_default()(SelectionTable, _React$Component);

        function SelectionTable(props, context) {
            classCallCheck_default()(this, SelectionTable);

            var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

            _this.addSelection = function (columns) {
                var _this$props = _this.props,
                    prefix = _this$props.prefix,
                    rowSelection = _this$props.rowSelection,
                    size = _this$props.size;

                var attrs = rowSelection.columnProps && rowSelection.columnProps() || {};

                if (!columns.find(function (record) {
                    return record.key === 'selection';
                })) {
                    columns.unshift(extends_default()({
                        key: 'selection',
                        title: _this.renderSelectionHeader.bind(_this),
                        cell: _this.renderSelectionBody.bind(_this),
                        width: size === 'small' ? 34 : 50,
                        className: prefix + 'table-selection ' + prefix + 'table-prerow',
                        __normalized: true
                    }, attrs));
                }
            };

            _this.renderSelectionHeader = function () {
                var onChange = _this.selectAllRow,
                    attrs = {},
                    _this$props2 = _this.props,
                    rowSelection = _this$props2.rowSelection,
                    primaryKey = _this$props2.primaryKey,
                    dataSource = _this$props2.dataSource,
                    entireDataSource = _this$props2.entireDataSource,
                    locale = _this$props2.locale,
                    selectedRowKeys = _this.state.selectedRowKeys,
                    mode = rowSelection.mode ? rowSelection.mode : 'multiple';


                var checked = !!selectedRowKeys.length;
                var indeterminate = false;

                var source = entireDataSource || dataSource;

                _this.flatDataSource(source).filter(function (record, index) {
                    if (!rowSelection.getProps) {
                        return true;
                    } else {
                        return !(rowSelection.getProps(record, index) || {}).disabled;
                    }
                }).map(function (record) {
                    return record[primaryKey];
                }).forEach(function (id) {
                    if (selectedRowKeys.indexOf(id) === -1) {
                        checked = false;
                    } else {
                        indeterminate = true;
                    }
                });
                attrs.onClick = selection_makeChain(function (e) {
                    e.stopPropagation();
                }, attrs.onClick);

                var userAttrs = rowSelection.titleProps && rowSelection.titleProps() || {};

                if (checked) {
                    indeterminate = false;
                }
                return [mode === 'multiple' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_checkbox, extends_default()({
                    key: '_total',
                    indeterminate: indeterminate,
                    'aria-label': locale.selectAll,
                    checked: checked,
                    onChange: onChange
                }, attrs, userAttrs)) : null, rowSelection.titleAddons && rowSelection.titleAddons()];
            };

            _this.renderSelectionBody = function (value, index, record) {
                var _this$props3 = _this.props,
                    rowSelection = _this$props3.rowSelection,
                    primaryKey = _this$props3.primaryKey;
                var selectedRowKeys = _this.state.selectedRowKeys;

                var mode = rowSelection.mode ? rowSelection.mode : 'multiple';
                var checked = selectedRowKeys.indexOf(record[primaryKey]) > -1;
                var onChange = _this.selectOneRow.bind(_this, index, record);
                var attrs = rowSelection.getProps ? rowSelection.getProps(record, index) || {} : {};

                attrs.onClick = selection_makeChain(function (e) {
                    e.stopPropagation();
                }, attrs.onClick);
                return mode === 'multiple' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_checkbox, extends_default()({ checked: checked, onChange: onChange }, attrs)) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_radio, extends_default()({ checked: checked, onChange: onChange }, attrs));
            };

            _this.selectAllRow = function (checked, e) {
                var ret = [].concat(_this.state.selectedRowKeys),
                    _this$props4 = _this.props,
                    rowSelection = _this$props4.rowSelection,
                    primaryKey = _this$props4.primaryKey,
                    dataSource = _this$props4.dataSource,
                    entireDataSource = _this$props4.entireDataSource,
                    selectedRowKeys = _this.state.selectedRowKeys,
                    getProps = rowSelection.getProps;

                var attrs = {},
                    records = [];

                var source = entireDataSource ? entireDataSource : dataSource;

                _this.flatDataSource(source).forEach(function (record, index) {
                    var id = record[primaryKey];
                    if (getProps) {
                        attrs = getProps(record, index) || {};
                    }
                    // 反选和全选的时候不要丢弃禁用项的选中状态
                    if (checked && (!attrs.disabled || selectedRowKeys.indexOf(id) > -1)) {
                        ret.push(id);
                        records.push(record);
                    } else if (attrs.disabled && selectedRowKeys.indexOf(id) > -1) {
                        ret.push(id);
                        records.push(record);
                    } else {
                        var i = ret.indexOf(id);
                        i > -1 && ret.splice(i, 1);
                    }
                });

                records = unique(records, primaryKey);
                if (typeof rowSelection.onSelectAll === 'function') {
                    rowSelection.onSelectAll(checked, records);
                }
                _this.triggerSelection(rowSelection, unique(ret), records);
                e.stopPropagation();
            };

            _this.state = {
                selectedRowKeys: props.rowSelection && 'selectedRowKeys' in props.rowSelection ? props.rowSelection.selectedRowKeys || [] : []
            };
            return _this;
        }

        SelectionTable.prototype.getChildContext = function getChildContext() {
            return {
                rowSelection: this.props.rowSelection,
                selectedRowKeys: this.state.selectedRowKeys
            };
        };

        SelectionTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
            if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {
                var selectedRowKeys = nextProps.rowSelection.selectedRowKeys || [];
                return {
                    selectedRowKeys: selectedRowKeys
                };
            }

            return null;
        };

        SelectionTable.prototype.normalizeChildren = function normalizeChildren(children) {
            var _props = this.props,
                prefix = _props.prefix,
                rowSelection = _props.rowSelection,
                size = _props.size;

            if (rowSelection) {
                children = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child, index) {
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                        key: index
                    });
                });

                var attrs = rowSelection.columnProps && rowSelection.columnProps() || {};

                children.unshift(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(column_Column, extends_default()({
                    key: 'selection',
                    title: this.renderSelectionHeader.bind(this),
                    cell: this.renderSelectionBody.bind(this),
                    width: size === 'small' ? 34 : 50,
                    className: prefix + 'table-selection ' + prefix + 'table-prerow',
                    __normalized: true
                }, attrs)));
                return children;
            }
            return children;
        };

        SelectionTable.prototype.selectOneRow = function selectOneRow(index, record, checked, e) {
            var selectedRowKeys = [].concat(this.state.selectedRowKeys),
                i = void 0;
            var _props2 = this.props,
                primaryKey = _props2.primaryKey,
                rowSelection = _props2.rowSelection,
                dataSource = _props2.dataSource,
                mode = rowSelection.mode ? rowSelection.mode : 'multiple',
                id = record[primaryKey];

            if (!id) {
                log.warning('Can\'t get value from record using given ' + primaryKey + ' as primaryKey.');
            }
            if (mode === 'multiple') {
                if (checked) {
                    selectedRowKeys.push(id);
                } else {
                    i = selectedRowKeys.indexOf(id);
                    selectedRowKeys.splice(i, 1);
                }
            } else if (checked) {
                selectedRowKeys = [id];
            }
            var records = unique(dataSource.filter(function (item) {
                return selectedRowKeys.indexOf(item[primaryKey]) > -1;
            }), primaryKey);
            if (typeof rowSelection.onSelect === 'function') {
                rowSelection.onSelect(checked, record, records);
            }

            this.triggerSelection(rowSelection, selectedRowKeys, records);

            e.stopPropagation();
        };

        SelectionTable.prototype.triggerSelection = function triggerSelection(rowSelection, selectedRowKeys, records) {
            if (!('selectedRowKeys' in rowSelection)) {
                this.setState({
                    selectedRowKeys: selectedRowKeys
                });
            }
            if (typeof rowSelection.onChange === 'function') {
                rowSelection.onChange(selectedRowKeys, records);
            }
        };

        SelectionTable.prototype.flatDataSource = function flatDataSource(dataSource) {
            var ret = dataSource;
            var listHeader = this.context.listHeader;


            if (listHeader) {
                ret = [];
                var hasChildrenSelection = listHeader.hasChildrenSelection,
                    hasSelection = listHeader.hasSelection;

                dataSource.forEach(function (item) {
                    var children = item.children;
                    // 如果需要渲染selection才将这条记录插入到dataSource
                    // 或者没有孩子节点
                    if (hasSelection) {
                        ret.push(item);
                    }
                    if (children && hasChildrenSelection) {
                        ret = ret.concat(children);
                    }
                });
            }
            return ret;
        };

        SelectionTable.prototype.render = function render() {
            /* eslint-disable prefer-const */
            var _props3 = this.props,
                rowSelection = _props3.rowSelection,
                components = _props3.components,
                children = _props3.children,
                columns = _props3.columns,
                others = objectWithoutProperties_default()(_props3, ['rowSelection', 'components', 'children', 'columns']);

            var useColumns = columns && !children;

            if (rowSelection) {
                if (useColumns) {
                    this.addSelection(columns);
                } else {
                    children = this.normalizeChildren(children || []);
                }
                components = extends_default()({}, components);
                components.Row = components.Row || row_SelectionRow;
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, { columns: columns, components: components, children: children }));
        };

        return SelectionTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.SelectionRow = row_SelectionRow, _class.propTypes = extends_default()({
        /**
         * 是否启用选择模式
         * @property {Function} getProps `Function(record, index)=>Object` 获取selection的默认属性
         * @property {Function} onChange `Function(selectedRowKeys:Array, records:Array)` 选择改变的时候触发的事件，**注意:** 其中records只会包含当前dataSource的数据，很可能会小于selectedRowKeys的长度。
         * @property {Function} onSelect `Function(selected:Boolean, record:Object, records:Array)` 用户手动选择/取消选择某行的回调
         * @property {Function} onSelectAll `Function(selected:Boolean, records:Array)` 用户手动选择/取消选择所有行的回调
         * @property {Array} selectedRowKeys 设置了此属性,将rowSelection变为受控状态,接收值为该行数据的primaryKey的值
         * @property {String} mode 选择selection的模式, 可选值为`single`, `multiple`，默认为`multiple`
         * @property {Function} columnProps `Function()=>Object` 选择列 的props，例如锁列、对齐等，可使用`Table.Column` 的所有参数
         * @property {Function} titleProps `Function()=>Object` 选择列 表头的props，仅在 `multiple` 模式下生效
         */
        rowSelection: _prop_types_15_8_1_prop_types_default.a.object,
        primaryKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.symbol, _prop_types_15_8_1_prop_types_default.a.string]),
        dataSource: _prop_types_15_8_1_prop_types_default.a.array,
        entireDataSource: _prop_types_15_8_1_prop_types_default.a.array
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps, {
        locale: locale_zh_cn.Table,
        primaryKey: 'id',
        prefix: 'next-'
    }), _class.contextTypes = {
        listHeader: _prop_types_15_8_1_prop_types_default.a.any
    }, _class.childContextTypes = {
        rowSelection: _prop_types_15_8_1_prop_types_default.a.object,
        selectedRowKeys: _prop_types_15_8_1_prop_types_default.a.array
    }, _temp);
    SelectionTable.displayName = 'SelectionTable';

    statics(SelectionTable, BaseComponent);
    return Object(react_lifecycles_compat_es["polyfill"])(SelectionTable);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/expanded.js
















var expanded_noop = function noop() {};

function expanded_expanded(BaseComponent, stickyLock) {
    var _class, _temp2;

    /** Table */
    var ExpandedTable = (_temp2 = _class = function (_React$Component) {
        inherits_default()(ExpandedTable, _React$Component);

        function ExpandedTable() {
            var _temp, _this, _ret;

            classCallCheck_default()(this, ExpandedTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
                openRowKeys: _this.props.openRowKeys || _this.props.defaultOpenRowKeys || []
            }, _this.saveExpandedRowRef = function (key, rowRef) {
                if (!_this.expandedRowRefs) {
                    _this.expandedRowRefs = {};
                }
                _this.expandedRowRefs[key] = rowRef;
            }, _this.setExpandedWidth = function () {
                var prefix = _this.props.prefix;

                var tableEl = _this.getTableNode();
                var totalWidth = +(tableEl && tableEl.clientWidth) - 1 || '100%';
                var bodyNode = tableEl && tableEl.querySelector('.' + prefix + 'table-body');

                Object.keys(_this.expandedRowRefs || {}).forEach(function (key) {
                    util_dom.setStyle(_this.expandedRowRefs[key], { width: bodyNode && bodyNode.clientWidth || totalWidth });
                });
            }, _this.getTableInstance = function (instance) {
                _this.tableInc = instance;
            }, _this.expandedKeydown = function (value, record, index, e) {
                e.preventDefault();
                e.stopPropagation();

                if (e.keyCode === KEYCODE.ENTER) {
                    _this.onExpandedClick(value, record, index, e);
                }
            }, _this.renderExpandedCell = function (value, index, record) {
                var _classnames;

                var _this$props = _this.props,
                    getExpandedColProps = _this$props.getExpandedColProps,
                    prefix = _this$props.prefix,
                    locale = _this$props.locale,
                    rowExpandable = _this$props.rowExpandable;


                if (typeof rowExpandable === 'function' && !rowExpandable(record, index)) {
                    return '';
                }

                var openRowKeys = _this.state.openRowKeys,
                    primaryKey = _this.props.primaryKey,
                    hasExpanded = openRowKeys.indexOf(record[primaryKey]) > -1,
                    switchNode = hasExpanded ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'minus', size: 'xs', className: prefix + 'table-expand-unfold' }) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'add', size: 'xs', className: prefix + 'table-expand-fold' }),
                    attrs = getExpandedColProps(record, index) || {};

                var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-expanded-ctrl'] = true, _classnames.disabled = attrs.disabled, _classnames[attrs.className] = attrs.className, _classnames));

                if (!attrs.disabled) {
                    attrs.onClick = _this.onExpandedClick.bind(_this, value, record, index);
                }
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    extends_default()({}, attrs, {
                        role: 'button',
                        tabIndex: '0',
                        onKeyDown: _this.expandedKeydown.bind(_this, value, record, index),
                        'aria-label': hasExpanded ? locale.expanded : locale.folded,
                        'aria-expanded': hasExpanded,
                        className: cls
                    }),
                    switchNode
                );
            }, _this.addExpandCtrl = function (columns) {
                var _this$props2 = _this.props,
                    prefix = _this$props2.prefix,
                    size = _this$props2.size;


                if (!columns.find(function (record) {
                    return record.key === 'expanded';
                })) {
                    columns.unshift({
                        key: 'expanded',
                        title: '',
                        cell: _this.renderExpandedCell.bind(_this),
                        width: size === 'small' ? 34 : 50,
                        className: prefix + 'table-expanded ' + prefix + 'table-prerow',
                        __normalized: true
                    });
                }
            }, _temp), possibleConstructorReturn_default()(_this, _ret);
        }

        ExpandedTable.prototype.getChildContext = function getChildContext() {
            return {
                openRowKeys: this.state.openRowKeys,
                expandedRowRender: this.props.expandedRowRender,
                expandedIndexSimulate: this.props.expandedIndexSimulate,
                expandedRowWidthEquals2Table: stickyLock,
                getExpandedRowRef: this.saveExpandedRowRef,
                getTableInstanceForExpand: this.getTableInstance,
                expandedRowIndent: stickyLock ? [0, 0] : this.props.expandedRowIndent
            };
        };

        ExpandedTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
            if ('openRowKeys' in nextProps) {
                return {
                    openRowKeys: nextProps.openRowKeys || []
                };
            }

            return null;
        };

        ExpandedTable.prototype.componentDidMount = function componentDidMount() {
            this.setExpandedWidth();
            util_events.on(window, 'resize', this.setExpandedWidth);
        };

        ExpandedTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.setExpandedWidth();
        };

        ExpandedTable.prototype.componentWillUnmount = function componentWillUnmount() {
            util_events.off(window, 'resize', this.setExpandedWidth);
        };

        ExpandedTable.prototype.getTableNode = function getTableNode() {
            var table = this.tableInc;
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.tableEl);
            } catch (error) {
                return null;
            }
        };

        ExpandedTable.prototype.onExpandedClick = function onExpandedClick(value, record, i, e) {
            var openRowKeys = [].concat(this.state.openRowKeys),
                primaryKey = this.props.primaryKey,
                id = record[primaryKey],
                index = openRowKeys.indexOf(id);

            if (index > -1) {
                openRowKeys.splice(index, 1);
            } else {
                openRowKeys.push(id);
            }
            if (!('openRowKeys' in this.props)) {
                this.setState({
                    openRowKeys: openRowKeys
                });
            }
            this.props.onRowOpen(openRowKeys, id, index === -1, record);
            e.stopPropagation();
        };

        ExpandedTable.prototype.normalizeChildren = function normalizeChildren(children) {
            var _props = this.props,
                prefix = _props.prefix,
                size = _props.size;

            var toArrayChildren = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child, index) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                    key: index
                });
            });
            toArrayChildren.unshift(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(column_Column, {
                title: '',
                key: 'expanded',
                cell: this.renderExpandedCell.bind(this),
                width: size === 'small' ? 34 : 50,
                className: prefix + 'table-expanded ' + prefix + 'table-prerow',
                __normalized: true
            }));
            return toArrayChildren;
        };

        ExpandedTable.prototype.normalizeDataSource = function normalizeDataSource(ds) {
            var ret = [];
            ds.forEach(function (item) {
                var itemCopy = extends_default()({}, item);
                itemCopy.__expanded = true;
                ret.push(item, itemCopy);
            });
            return ret;
        };

        ExpandedTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props2 = this.props,
                components = _props2.components,
                openRowKeys = _props2.openRowKeys,
                expandedRowRender = _props2.expandedRowRender,
                rowExpandable = _props2.rowExpandable,
                hasExpandedRowCtrl = _props2.hasExpandedRowCtrl,
                children = _props2.children,
                columns = _props2.columns,
                dataSource = _props2.dataSource,
                entireDataSource = _props2.entireDataSource,
                getExpandedColProps = _props2.getExpandedColProps,
                expandedRowIndent = _props2.expandedRowIndent,
                onRowOpen = _props2.onRowOpen,
                onExpandedRowClick = _props2.onExpandedRowClick,
                others = objectWithoutProperties_default()(_props2, ['components', 'openRowKeys', 'expandedRowRender', 'rowExpandable', 'hasExpandedRowCtrl', 'children', 'columns', 'dataSource', 'entireDataSource', 'getExpandedColProps', 'expandedRowIndent', 'onRowOpen', 'onExpandedRowClick']);

            if (expandedRowRender && !components.Row) {
                components = extends_default()({}, components);
                components.Row = row_ExpandedRow;
                dataSource = this.normalizeDataSource(dataSource);
                entireDataSource = this.normalizeDataSource(entireDataSource);
            }
            if (expandedRowRender && hasExpandedRowCtrl) {
                var useColumns = columns && !children;

                if (useColumns) {
                    this.addExpandCtrl(columns);
                } else {
                    children = this.normalizeChildren(children || []);
                }
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                BaseComponent,
                extends_default()({}, others, {
                    columns: columns,
                    dataSource: dataSource,
                    entireDataSource: entireDataSource,
                    components: components
                }),
                children
            );
        };

        return ExpandedTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.ExpandedRow = row_ExpandedRow, _class.propTypes = extends_default()({
        /**
         * 额外渲染行的渲染函数
         * @param {Object} record 该行所对应的数据
         * @param {Number} index 该行所对应的序列
         * @returns {Element}
         */
        expandedRowRender: _prop_types_15_8_1_prop_types_default.a.func,
        /**
         * 设置行是否可展开，设置 false 为不可展开
         * @param {Object} record 该行所对应的数据
         * @param {Number} index 该行所对应的序列
         * @returns {Boolean} 是否可展开
         * @version 1.21
         */
        rowExpandable: _prop_types_15_8_1_prop_types_default.a.func,
        /**
         * 额外渲染行的缩进
         */
        expandedRowIndent: _prop_types_15_8_1_prop_types_default.a.array,
        /**
         * 默认情况下展开的渲染行或者Tree, 传入此属性为受控状态
         */
        openRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
        /**
         * 默认情况下展开的 Expand行 或者 Tree行，非受控模式
         * @version 1.23.22
         */
        defaultOpenRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
        /**
         * 是否显示点击展开额外渲染行的+号按钮
         */
        hasExpandedRowCtrl: _prop_types_15_8_1_prop_types_default.a.bool,
        /**
         * 设置额外渲染行的属性
         */
        getExpandedColProps: _prop_types_15_8_1_prop_types_default.a.func,
        /**
         * 在额外渲染行或者Tree展开或者收起的时候触发的事件
         * @param {Array} openRowKeys 展开的渲染行的key
         * @param {String} currentRowKey 当前点击的渲染行的key
         * @param {Boolean} expanded 当前点击是展开还是收起
         * @param {Object} currentRecord 当前点击额外渲染行的记录
         */
        onRowOpen: _prop_types_15_8_1_prop_types_default.a.func,
        onExpandedRowClick: _prop_types_15_8_1_prop_types_default.a.func,
        locale: _prop_types_15_8_1_prop_types_default.a.object
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps, {
        getExpandedColProps: expanded_noop,
        onRowOpen: expanded_noop,
        hasExpandedRowCtrl: true,
        components: {},
        expandedRowIndent: stickyLock ? [0, 0] : [1, 0],
        prefix: 'next-'
    }), _class.childContextTypes = {
        openRowKeys: _prop_types_15_8_1_prop_types_default.a.array,
        expandedRowRender: _prop_types_15_8_1_prop_types_default.a.func,
        expandedIndexSimulate: _prop_types_15_8_1_prop_types_default.a.bool,
        expandedRowWidthEquals2Table: _prop_types_15_8_1_prop_types_default.a.bool,
        expandedRowIndent: _prop_types_15_8_1_prop_types_default.a.array,
        getExpandedRowRef: _prop_types_15_8_1_prop_types_default.a.func,
        getTableInstanceForExpand: _prop_types_15_8_1_prop_types_default.a.func
    }, _temp2);
    ExpandedTable.displayName = 'ExpandedTable';

    statics(ExpandedTable, BaseComponent);
    return Object(react_lifecycles_compat_es["polyfill"])(ExpandedTable);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/virtual/body.js






var virtual_body__class, virtual_body__temp2;






/* eslint-disable react/prefer-stateless-function */
var body_VirtualBody = (virtual_body__temp2 = virtual_body__class = function (_React$Component) {
    inherits_default()(VirtualBody, _React$Component);

    function VirtualBody() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, VirtualBody);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.tableRef = function (table) {
            _this.tableNode = table;
        }, _this.virtualScrollRef = function (virtualScroll) {
            _this.virtualScrollNode = virtualScroll;
        }, _this.onScroll = function (current) {
            // for fixed
            _this.context.onFixedScrollSync(current);
            // for lock
            _this.context.onLockBodyScroll(current);
            // for virtual
            _this.context.onVirtualScroll();
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    VirtualBody.prototype.componentDidMount = function componentDidMount() {
        var bodyNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);
        // // for fixed
        this.context.getNode('body', bodyNode);
        // for virtual
        this.context.getBodyNode(bodyNode, this.context.lockType);
        // for lock
        this.context.getLockNode('body', bodyNode, this.context.lockType);
    };

    VirtualBody.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            colGroup = _props.colGroup,
            tableWidth = _props.tableWidth,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'colGroup', 'tableWidth']);

        var _context = this.context,
            maxBodyHeight = _context.maxBodyHeight,
            bodyHeight = _context.bodyHeight,
            innerTop = _context.innerTop;

        var style = {
            width: tableWidth
        };
        var wrapperStyle = {
            position: 'relative'
        };
        // todo 2.0 ，这里最好自己画滚动条
        if (bodyHeight > maxBodyHeight) {
            wrapperStyle.height = bodyHeight;
        }
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { style: { maxHeight: maxBodyHeight }, className: className, onScroll: this.onScroll },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { style: wrapperStyle, ref: this.virtualScrollRef },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        style: {
                            position: 'relative',
                            transform: 'translateY(' + innerTop + 'px)',
                            willChange: 'transform'
                        }
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'table',
                        { ref: this.tableRef, style: style },
                        colGroup,
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(body_Body, extends_default()({}, others, { prefix: prefix }))
                    )
                )
            )
        );
    };

    return VirtualBody;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), virtual_body__class.propTypes = {
    children: _prop_types_15_8_1_prop_types_default.a.any,
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    colGroup: _prop_types_15_8_1_prop_types_default.a.any,
    tableWidth: _prop_types_15_8_1_prop_types_default.a.number
}, virtual_body__class.contextTypes = {
    maxBodyHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
    onBodyScroll: _prop_types_15_8_1_prop_types_default.a.func,
    onFixedScrollSync: _prop_types_15_8_1_prop_types_default.a.func,
    onVirtualScroll: _prop_types_15_8_1_prop_types_default.a.func,
    onLockBodyScroll: _prop_types_15_8_1_prop_types_default.a.func,
    bodyHeight: _prop_types_15_8_1_prop_types_default.a.number,
    innerTop: _prop_types_15_8_1_prop_types_default.a.number,
    getNode: _prop_types_15_8_1_prop_types_default.a.func,
    getBodyNode: _prop_types_15_8_1_prop_types_default.a.func,
    getLockNode: _prop_types_15_8_1_prop_types_default.a.func,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}, virtual_body__temp2);
body_VirtualBody.displayName = 'VirtualBody';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/virtual.js













var virtual_noop = function noop() {};
var THRESHOLD = 10;
function virtual(BaseComponent) {
    var _class, _temp;

    var VirtualTable = (_temp = _class = function (_React$Component) {
        inherits_default()(VirtualTable, _React$Component);

        function VirtualTable(props, context) {
            classCallCheck_default()(this, VirtualTable);

            var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

            _this.onScroll = function () {
                // 避免横向滚动带来的性能问题
                var scrollTop = _this.bodyNode.scrollTop;
                if (scrollTop === _this.lastScrollTop) {
                    return;
                }
                var start = _this.computeScrollToRow(scrollTop);
                if (!('scrollToRow' in _this.props)) {
                    _this.setState({
                        scrollToRow: start
                    });
                }
                _this.props.onBodyScroll(start);
                _this.lastScrollTop = scrollTop;
            };

            _this.getBodyNode = function (node, lockType) {
                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';
                _this['body' + lockType + 'Node'] = node;
            };

            _this.getTableInstance = function (type, instance) {
                type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
                _this['table' + type + 'Inc'] = instance;
            };

            var useVirtual = props.useVirtual,
                dataSource = props.dataSource;


            var hasVirtualData = useVirtual && dataSource && dataSource.length > 0;

            _this.state = {
                rowHeight: _this.props.rowHeight,
                scrollToRow: _this.props.scrollToRow,
                height: _this.props.maxBodyHeight,
                hasVirtualData: hasVirtualData
            };
            return _this;
        }

        VirtualTable.prototype.getChildContext = function getChildContext() {
            return {
                onVirtualScroll: this.onScroll,
                bodyHeight: this.computeBodyHeight(),
                innerTop: this.computeInnerTop(),
                getBodyNode: this.getBodyNode,
                getTableInstanceForVirtual: this.getTableInstance,
                rowSelection: this.rowSelection
            };
        };

        VirtualTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
            var state = {};

            if ('maxBodyHeight' in nextProps) {
                if (prevState.height !== nextProps.maxBodyHeight) {
                    state.height = nextProps.maxBodyHeight;
                }
            }

            if ('scrollToRow' in nextProps) {
                state.scrollToRow = nextProps.scrollToRow;
            }

            if (prevState.useVirtual !== nextProps.useVirtual || prevState.dataSource !== nextProps.dataSource) {
                state.hasVirtualData = nextProps.useVirtual && nextProps.dataSource && nextProps.dataSource.length > 0;
            }

            return state;
        };

        VirtualTable.prototype.componentDidMount = function componentDidMount() {
            if (this.state.hasVirtualData && this.bodyNode) {
                this.lastScrollTop = this.bodyNode.scrollTop;
            }

            this.adjustScrollTop();
            this.adjustSize();
            this.reComputeSize();
        };

        VirtualTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.adjustScrollTop();
            this.adjustSize();
            this.reComputeSize();
        };

        VirtualTable.prototype.reComputeSize = function reComputeSize() {
            var _state = this.state,
                rowHeight = _state.rowHeight,
                hasVirtualData = _state.hasVirtualData;

            if (typeof rowHeight === 'function' && hasVirtualData) {
                var row = this.getRowNode();
                var rowClientHeight = row && row.clientHeight;
                if (rowClientHeight !== this.state.rowHeight) {
                    this.setState({
                        rowHeight: rowClientHeight
                    });
                }
            }
        };

        VirtualTable.prototype.computeBodyHeight = function computeBodyHeight() {
            var rowHeight = this.state.rowHeight;
            var dataSource = this.props.dataSource;

            if (typeof rowHeight === 'function') {
                return 0;
            }
            var count = 0;
            dataSource.forEach(function (item) {
                if (!item.hidden) {
                    count += 1;
                }
            });
            return count * rowHeight;
        };

        VirtualTable.prototype.computeInnerTop = function computeInnerTop() {
            var rowHeight = this.state.rowHeight;

            if (typeof rowHeight === 'function') {
                return 0;
            }

            var start = Math.max(this.start - THRESHOLD, 0);

            return start * rowHeight;
        };

        VirtualTable.prototype.getVisibleRange = function getVisibleRange(ExpectStart) {
            var _state2 = this.state,
                height = _state2.height,
                rowHeight = _state2.rowHeight;

            var len = this.props.dataSource.length;

            var end = void 0,
                visibleCount = 0;
            var start = 0;
            if (typeof rowHeight === 'function') {
                // try get cell height;
                end = 1;
            } else {
                visibleCount = parseInt(util_dom.getPixels(height) / rowHeight, 10);

                if ('number' === typeof ExpectStart) {
                    start = ExpectStart < len ? ExpectStart : 0;
                }

                end = Math.min(+start + 1 + visibleCount + 10, len);
            }
            this.end = end;
            this.visibleCount = visibleCount;
            return {
                start: start,
                end: end
            };
        };

        VirtualTable.prototype.adjustScrollTop = function adjustScrollTop() {
            if (this.state.hasVirtualData && this.bodyNode) {
                this.bodyNode.scrollTop = this.lastScrollTop % this.state.rowHeight + this.state.rowHeight * this.state.scrollToRow;
            }
        };

        VirtualTable.prototype.adjustSize = function adjustSize() {
            if (this.state.hasVirtualData && this.bodyNode) {
                var body = this.bodyNode;
                var virtualScrollNode = body.querySelector('div');
                var clientHeight = body.clientHeight,
                    clientWidth = body.clientWidth;


                var tableInc = this.tableInc;
                var tableNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(tableInc);
                var prefix = this.props.prefix;

                var headerNode = tableNode.querySelector('.' + prefix + 'table-header table');
                var headerClientWidth = headerNode && headerNode.clientWidth;
                // todo 2.0 设置宽度这个可以去掉
                if (clientWidth < headerClientWidth) {
                    util_dom.setStyle(virtualScrollNode, 'min-width', headerClientWidth);
                    var leftNode = this.bodyLeftNode;
                    var rightNode = this.bodyRightNode;
                    leftNode && util_dom.setStyle(leftNode, 'max-height', clientHeight);
                    rightNode && util_dom.setStyle(rightNode, 'max-height', clientHeight);
                } else {
                    util_dom.setStyle(virtualScrollNode, 'min-width', 'auto');
                }
            }
        };

        VirtualTable.prototype.computeScrollToRow = function computeScrollToRow(offset) {
            var rowHeight = this.state.rowHeight;

            var start = parseInt(offset / rowHeight);
            this.start = start;
            return start;
        };

        VirtualTable.prototype.getRowNode = function getRowNode() {
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of this.tableInc when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.tableInc.getRowRef(0));
            } catch (error) {
                return null;
            }
        };

        VirtualTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props = this.props,
                useVirtual = _props.useVirtual,
                components = _props.components,
                dataSource = _props.dataSource,
                fixedHeader = _props.fixedHeader,
                rowHeight = _props.rowHeight,
                scrollToRow = _props.scrollToRow,
                onBodyScroll = _props.onBodyScroll,
                others = objectWithoutProperties_default()(_props, ['useVirtual', 'components', 'dataSource', 'fixedHeader', 'rowHeight', 'scrollToRow', 'onBodyScroll']);

            var entireDataSource = dataSource;
            var newDataSource = dataSource;

            this.rowSelection = this.props.rowSelection;
            if (this.state.hasVirtualData) {
                newDataSource = [];
                components = extends_default()({}, components);

                var _getVisibleRange = this.getVisibleRange(this.state.scrollToRow),
                    start = _getVisibleRange.start,
                    end = _getVisibleRange.end;

                var count = -1;
                dataSource.forEach(function (current, index, record) {
                    if (!current.hidden) {
                        count += 1;
                        if (count >= Math.max(start - THRESHOLD, 0) && count < end) {
                            newDataSource.push(current);
                        }
                    }
                    current.__rowIndex = index;
                });

                if (!components.Body) {
                    components.Body = body_VirtualBody;
                }
                fixedHeader = true;
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                scrollToRow: scrollToRow,
                dataSource: newDataSource,
                entireDataSource: entireDataSource,
                components: components,
                fixedHeader: fixedHeader
            }));
        };

        return VirtualTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.VirtualBody = body_VirtualBody, _class.propTypes = extends_default()({
        /**
         * 是否开启虚拟滚动
         */
        useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
        /**
         * 设置行高
         */
        rowHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.func]),
        maxBodyHeight: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.number, _prop_types_15_8_1_prop_types_default.a.string]),
        primaryKey: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.symbol, _prop_types_15_8_1_prop_types_default.a.string]),
        dataSource: _prop_types_15_8_1_prop_types_default.a.array,
        /**
         * 在内容区域滚动的时候触发的函数
         */
        onBodyScroll: _prop_types_15_8_1_prop_types_default.a.func
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps, {
        primaryKey: 'id',
        rowHeight: virtual_noop,
        maxBodyHeight: 200,
        components: {},
        prefix: 'next-',
        onBodyScroll: virtual_noop
    }), _class.childContextTypes = {
        onVirtualScroll: _prop_types_15_8_1_prop_types_default.a.func,
        bodyHeight: _prop_types_15_8_1_prop_types_default.a.number,
        innerTop: _prop_types_15_8_1_prop_types_default.a.number,
        getBodyNode: _prop_types_15_8_1_prop_types_default.a.func,
        getTableInstanceForVirtual: _prop_types_15_8_1_prop_types_default.a.func,
        rowSelection: _prop_types_15_8_1_prop_types_default.a.object
    }, _temp);
    VirtualTable.displayName = 'VirtualTable';

    statics(VirtualTable, BaseComponent);
    return Object(react_lifecycles_compat_es["polyfill"])(VirtualTable);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/lock/body.js





var lock_body__class, lock_body__temp2;






/* eslint-disable react/prefer-stateless-function */
var body_LockBody = (lock_body__temp2 = lock_body__class = function (_React$Component) {
    inherits_default()(LockBody, _React$Component);

    function LockBody() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, LockBody);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onBodyScroll = function (event) {
            _this.context.onLockBodyScroll(event);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    LockBody.prototype.componentDidMount = function componentDidMount() {
        this.context.getLockNode('body', Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this), this.context.lockType);
    };

    LockBody.prototype.render = function render() {
        var event = {
            onLockScroll: this.onBodyScroll
        };
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(body_FixedBody, extends_default()({}, this.props, event));
    };

    return LockBody;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), lock_body__class.propTypes = extends_default()({}, body_FixedBody.propTypes), lock_body__class.contextTypes = extends_default()({}, body_FixedBody.contextTypes, {
    getLockNode: _prop_types_15_8_1_prop_types_default.a.func,
    onLockBodyScroll: _prop_types_15_8_1_prop_types_default.a.func,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}), lock_body__temp2);
body_LockBody.displayName = 'LockBody';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/lock/header.js





var lock_header__class, lock_header__temp;





var header_LockHeader = (lock_header__temp = lock_header__class = function (_FixedHeader) {
    inherits_default()(LockHeader, _FixedHeader);

    function LockHeader() {
        classCallCheck_default()(this, LockHeader);

        return possibleConstructorReturn_default()(this, _FixedHeader.apply(this, arguments));
    }

    LockHeader.prototype.componentDidMount = function componentDidMount() {
        var _context = this.context,
            getNode = _context.getNode,
            getLockNode = _context.getLockNode;

        getNode && getNode('header', Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this), this.context.lockType);
        getLockNode && getLockNode('header', Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this), this.context.lockType);
    };

    return LockHeader;
}(header_FixedHeader), lock_header__class.propTypes = extends_default()({}, header_FixedHeader.propTypes), lock_header__class.contextTypes = extends_default()({}, header_FixedHeader.contextTypes, {
    getLockNode: _prop_types_15_8_1_prop_types_default.a.func,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}), lock_header__temp);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/lock.js


















var lock_ieVersion = util_env.ieVersion;

function lock_lock(BaseComponent) {
    var _class, _temp;

    /** Table */
    var LockTable = (_temp = _class = function (_React$Component) {
        inherits_default()(LockTable, _React$Component);

        function LockTable(props, context) {
            classCallCheck_default()(this, LockTable);

            var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props, context));

            _this.state = {};

            _this.getTableInstance = function (type, instance) {
                type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
                _this['table' + type + 'Inc'] = instance;
            };

            _this.getNode = function (type, node, lockType) {
                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';
                _this['' + type + lockType + 'Node'] = node;
                if (type === 'header' && !_this.innerHeaderNode && !lockType) {
                    _this.innerHeaderNode = _this.headerNode.querySelector('div');
                }
            };

            _this.onRowMouseEnter = function (record, index) {
                if (_this.isLock()) {
                    var row = _this.getRowNode(index);
                    var leftRow = _this.getRowNode(index, 'left');
                    var rightRow = _this.getRowNode(index, 'right');
                    [row, leftRow, rightRow].forEach(function (row) {
                        row && util_dom.addClass(row, 'hovered');
                    });
                }
            };

            _this.onRowMouseLeave = function (record, index) {
                if (_this.isLock()) {
                    var row = _this.getRowNode(index);
                    var leftRow = _this.getRowNode(index, 'left');
                    var rightRow = _this.getRowNode(index, 'right');
                    [row, leftRow, rightRow].forEach(function (row) {
                        row && util_dom.removeClass(row, 'hovered');
                    });
                }
            };

            _this.onLockBodyScrollTop = function (event) {
                // set scroll top for lock columns & main body
                var target = event.target;
                if (event.currentTarget !== target) {
                    return;
                }
                var distScrollTop = target.scrollTop;

                if (_this.isLock() && distScrollTop !== _this.lastScrollTop) {
                    var lockRightBody = _this.bodyRightNode,
                        lockLeftBody = _this.bodyLeftNode,
                        bodyNode = _this.bodyNode;

                    var arr = [lockLeftBody, lockRightBody, bodyNode];

                    arr.forEach(function (node) {
                        if (node && node.scrollTop !== distScrollTop) {
                            node.scrollTop = distScrollTop;
                        }
                    });

                    _this.lastScrollTop = distScrollTop;
                }
            };

            _this.onLockBodyScrollLeft = function () {
                // add shadow class for lock columns
                if (_this.isLock()) {
                    var rtl = _this.props.rtl;

                    var lockRightTable = rtl ? _this.getWrapperNode('left') : _this.getWrapperNode('right'),
                        lockLeftTable = rtl ? _this.getWrapperNode('right') : _this.getWrapperNode('left'),
                        shadowClassName = 'shadow';

                    var x = _this.bodyNode.scrollLeft;

                    if (x === 0) {
                        lockLeftTable && util_dom.removeClass(lockLeftTable, shadowClassName);
                        lockRightTable && util_dom.addClass(lockRightTable, shadowClassName);
                    } else if (x === _this.bodyNode.scrollWidth - _this.bodyNode.clientWidth) {
                        lockLeftTable && util_dom.addClass(lockLeftTable, shadowClassName);
                        lockRightTable && util_dom.removeClass(lockRightTable, shadowClassName);
                    } else {
                        lockLeftTable && util_dom.addClass(lockLeftTable, shadowClassName);
                        lockRightTable && util_dom.addClass(lockRightTable, shadowClassName);
                    }
                }
            };

            _this.onLockBodyScroll = function (event) {
                _this.onLockBodyScrollTop(event);
                _this.onLockBodyScrollLeft();
            };

            _this.adjustSize = function () {
                if (!_this.adjustIfTableNotNeedLock()) {
                    _this.adjustHeaderSize();
                    _this.adjustBodySize();
                    _this.adjustRowHeight();
                    _this.onLockBodyScrollLeft();
                }
            };

            _this.getFlatenChildrenLength = function () {
                var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

                var loop = function loop(arr) {
                    var newArray = [];
                    arr.forEach(function (child) {
                        if (child && child.children) {
                            newArray.push.apply(newArray, loop(child.children));
                        } else {
                            newArray.push(child);
                        }
                    });
                    return newArray;
                };

                return loop(children).length;
            };

            _this.saveLockLeftRef = function (ref) {
                _this.lockLeftEl = ref;
            };

            _this.saveLockRightRef = function (ref) {
                _this.lockRightEl = ref;
            };

            _this.lockLeftChildren = [];
            _this.lockRightChildren = [];
            return _this;
        }

        LockTable.prototype.getChildContext = function getChildContext() {
            return {
                getTableInstance: this.getTableInstance,
                getLockNode: this.getNode,
                onLockBodyScroll: this.onLockBodyScroll,
                onRowMouseEnter: this.onRowMouseEnter,
                onRowMouseLeave: this.onRowMouseLeave
            };
        };

        LockTable.prototype.componentDidMount = function componentDidMount() {
            util_events.on(window, 'resize', this.adjustSize);

            this.scroll();
            this.adjustSize();
            this.forceUpdate();
        };

        LockTable.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
            if (nextProps.pure) {
                var isEqual = _shallow_element_equals_1_0_1_shallow_element_equals_default()(nextProps, this.props);
                return !(isEqual && util_obj.shallowEqual(nextContext, this.context));
            }

            return true;
        };

        LockTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.adjustSize();
            this._isLock = false;
        };

        LockTable.prototype.componentWillUnmount = function componentWillUnmount() {
            util_events.off(window, 'resize', this.adjustSize);
        };

        LockTable.prototype.normalizeChildrenState = function normalizeChildrenState(props) {
            var columns = this.normalizeChildren(props);
            var splitChildren = this.splitFromNormalizeChildren(columns);
            var lockLeftChildren = splitChildren.lockLeftChildren,
                lockRightChildren = splitChildren.lockRightChildren;

            return {
                lockLeftChildren: lockLeftChildren,
                lockRightChildren: lockRightChildren,
                children: this.mergeFromSplitLockChildren(splitChildren)
            };
        };

        // 将React结构化数据提取props转换成数组


        LockTable.prototype.normalizeChildren = function normalizeChildren(props) {
            var children = props.children,
                columns = props.columns;

            var isLock = false,
                ret = void 0;
            var checkLock = function checkLock(col) {
                if ([true, 'left', 'right'].indexOf(col.lock) > -1) {
                    if (!('width' in col)) {
                        log.warning('Should config width for lock column named [ ' + col.dataIndex + ' ].');
                    }
                    isLock = true;
                }
            };
            if (columns && !children) {
                ret = columns;

                var getColumns = function getColumns(cols) {
                    cols.forEach(function () {
                        var col = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                        checkLock(col);

                        if (col.children) {
                            getColumns(col.children);
                        }
                    });
                };

                getColumns(columns);
            } else {
                var getChildren = function getChildren(children) {
                    var ret = [];
                    external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(children, function (child) {
                        if (child) {
                            var _props = extends_default()({}, child.props);
                            checkLock(_props);
                            ret.push(_props);
                            if (child.props.children) {
                                _props.children = getChildren(child.props.children);
                            }
                        }
                    });
                    return ret;
                };

                ret = getChildren(children);
            }

            ret.forEach(function (child) {
                // 为自定义的列特殊处理
                if (child.__normalized && isLock) {
                    // users can set lock type for column selection now, so its origin lock type comes first
                    child.lock = child.lock || 'left';
                    delete child.__normalized;
                }
            });
            this._isLock = isLock;
            return ret;
        };

        //从数组中分离出lock的列和正常的列


        LockTable.prototype.splitFromNormalizeChildren = function splitFromNormalizeChildren(children) {
            var originChildren = deepCopy(children);
            var lockLeftChildren = deepCopy(children);
            var lockRightChildren = deepCopy(children);
            var loop = function loop(lockChildren, condition) {
                var ret = [];
                lockChildren.forEach(function (child) {
                    if (child.children) {
                        var res = loop(child.children, condition);
                        if (!res.length) {
                            ret.push(child);
                        }
                    } else {
                        var order = condition(child);
                        if (!order) {
                            ret.push(child);
                        }
                    }
                });
                ret.forEach(function (res) {
                    var index = lockChildren.indexOf(res);
                    lockChildren.splice(index, 1);
                });
                return lockChildren;
            };
            loop(lockLeftChildren, function (child) {
                if (child.lock === true || child.lock === 'left') {
                    return 'left';
                }
            });
            loop(lockRightChildren, function (child) {
                if (child.lock === 'right') {
                    return 'right';
                }
            });
            loop(originChildren, function (child) {
                return child.lock !== true && child.lock !== 'left' && child.lock !== 'right';
            });
            return {
                lockLeftChildren: lockLeftChildren,
                lockRightChildren: lockRightChildren,
                originChildren: originChildren
            };
        };

        //将左侧的锁列树和中间的普通树及右侧的锁列树进行合并


        LockTable.prototype.mergeFromSplitLockChildren = function mergeFromSplitLockChildren(splitChildren) {
            var lockLeftChildren = splitChildren.lockLeftChildren,
                lockRightChildren = splitChildren.lockRightChildren;
            var originChildren = splitChildren.originChildren;

            Array.prototype.unshift.apply(originChildren, lockLeftChildren);
            originChildren = originChildren.concat(lockRightChildren);
            return originChildren;
        };

        LockTable.prototype.scroll = function scroll() {
            var _props2 = this.props,
                _props2$scrollToCol = _props2.scrollToCol,
                scrollToCol = _props2$scrollToCol === undefined ? 0 : _props2$scrollToCol,
                _props2$scrollToRow = _props2.scrollToRow,
                scrollToRow = _props2$scrollToRow === undefined ? 0 : _props2$scrollToRow;

            if (!scrollToCol && !scrollToRow || !this.bodyNode) {
                return;
            }
            var colCellNode = this.getCellNode(0, scrollToCol);
            var rowCellNode = this.getCellNode(scrollToRow, 0);
            var bodyNodeOffset = this.bodyNode.getBoundingClientRect() || {};
            if (colCellNode) {
                var cellNodeoffset = colCellNode.getBoundingClientRect();
                var scrollLeft = cellNodeoffset.left - bodyNodeOffset.left;
                this.bodyNode.scrollLeft = scrollLeft;
            }
            if (rowCellNode) {
                var _cellNodeoffset = rowCellNode.getBoundingClientRect();
                var scrollTop = _cellNodeoffset.top - bodyNodeOffset.top;
                this.bodyNode.scrollTop = scrollTop;
            }
        };

        // Table处理过后真实的lock状态
        LockTable.prototype.isLock = function isLock() {
            return this.lockLeftChildren.length || this.lockRightChildren.length;
        };

        // 用户设置的lock状态


        LockTable.prototype.isOriginLock = function isOriginLock() {
            return this._isLock;
        };

        LockTable.prototype.removeLockTable = function removeLockTable() {
            var lockLeftLen = this.lockLeftChildren.length;
            var lockRightLen = this.lockRightChildren.length;

            if (lockLeftLen) {
                this._notNeedAdjustLockLeft = true;
            }
            if (lockRightLen) {
                this._notNeedAdjustLockRight = true;
            }
            if (lockRightLen || lockLeftLen) {
                this.forceUpdate();
                return true;
            }
        };

        LockTable.prototype.adjustIfTableNotNeedLock = function adjustIfTableNotNeedLock() {
            var _this2 = this;

            if (this.isOriginLock()) {
                var widthObj = this.tableInc.flatChildren.map(function (item, index) {
                    var cell = _this2.getCellNode(0, index) || {};
                    var headerCell = _this2.getHeaderCellNode(0, index) || {};

                    // fix https://codesandbox.io/s/fusion-next-template-d9bu8
                    // close #1832
                    try {
                        return {
                            cellWidths: parseFloat(getComputedStyle(cell).width) || 0,
                            headerWidths: parseFloat(getComputedStyle(headerCell).width) || 0
                        };
                    } catch (error) {
                        return {
                            cellWidths: cell.clientWidth || 0,
                            headerWidths: headerCell.clientWidth || 0
                        };
                    }
                }).reduce(function (a, b) {
                    return {
                        cellWidths: a.cellWidths + b.cellWidths,
                        headerWidths: a.headerWidths + b.headerWidths
                    };
                }, {
                    cellWidths: 0,
                    headerWidths: 0
                });

                var node = void 0,
                    width = void 0;

                try {
                    node = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);
                    width = node.clientWidth;
                } catch (err) {
                    node = null;
                    width = 0;
                }

                // if the table doesn't exist, there is no need to adjust
                if (width === 0) {
                    return true;
                }

                var configWidths = parseInt(widthObj.cellWidths) || parseInt(widthObj.headerWidths);

                if (configWidths <= width && configWidths > 0) {
                    this.removeLockTable();
                } else if (this._notNeedAdjustLockLeft || this._notNeedAdjustLockRight) {
                    this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;
                    this.forceUpdate();
                } else {
                    this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;
                    return false;
                }
            }

            return false;
        };

        LockTable.prototype.adjustBodySize = function adjustBodySize() {
            var _style;

            var _props3 = this.props,
                rtl = _props3.rtl,
                hasHeader = _props3.hasHeader;

            var header = this.headerNode;
            var paddingName = rtl ? 'paddingLeft' : 'paddingRight';
            var marginName = rtl ? 'marginLeft' : 'marginRight';
            var scrollBarSize = +util_dom.scrollbar().width || 0;
            var style = (_style = {}, _style[paddingName] = scrollBarSize, _style[marginName] = scrollBarSize, _style);
            var body = this.bodyNode,
                hasVerScroll = body && body.scrollHeight > body.clientHeight;

            if (this.isLock()) {
                var lockLeftBody = this.bodyLeftNode,
                    lockRightBody = this.bodyRightNode,
                    lockRightBodyWrapper = this.getWrapperNode('right'),
                    bodyHeight = body.offsetHeight,
                    width = hasVerScroll ? scrollBarSize : 0,
                    lockBodyHeight = bodyHeight - scrollBarSize;

                if (!hasVerScroll) {
                    style[paddingName] = 0;
                    style[marginName] = 0;
                }
                if (+scrollBarSize) {
                    style.marginBottom = -scrollBarSize;
                    style.paddingBottom = scrollBarSize;
                } else {
                    style.marginBottom = -20;
                    style.paddingBottom = 20;
                }

                var lockStyle = {
                    'max-height': lockBodyHeight
                };
                if (!hasHeader && !+scrollBarSize) {
                    lockStyle[marginName] = 0;
                }
                if (+scrollBarSize) {
                    lockStyle[marginName] = -scrollBarSize;
                }
                lockLeftBody && util_dom.setStyle(lockLeftBody, lockStyle);
                lockRightBody && util_dom.setStyle(lockRightBody, lockStyle);
                lockRightBodyWrapper && +scrollBarSize && util_dom.setStyle(lockRightBodyWrapper, rtl ? 'left' : 'right', width + 'px');
            } else {
                style.marginBottom = -scrollBarSize;
                style.paddingBottom = scrollBarSize;
                style[marginName] = 0;
                if (!hasVerScroll) {
                    style[paddingName] = 0;
                }
            }

            header && util_dom.setStyle(header, style);
        };

        LockTable.prototype.adjustHeaderSize = function adjustHeaderSize() {
            var _this3 = this;

            if (this.isLock()) {
                this.tableInc.groupChildren.forEach(function (child, index) {
                    var lastIndex = _this3.tableInc.groupChildren[index].length - 1;
                    var headerRightRow = _this3.getHeaderCellNode(index, lastIndex),
                        headerLeftRow = _this3.getHeaderCellNode(index, 0),
                        headerRightLockRow = _this3.getHeaderCellNode(index, 0, 'right'),
                        headerLeftLockRow = _this3.getHeaderCellNode(index, 0, 'left');

                    if (headerRightRow && headerRightLockRow) {
                        var maxRightRowHeight = headerRightRow.offsetHeight;

                        util_dom.setStyle(headerRightLockRow, 'height', maxRightRowHeight);

                        setTimeout(function () {
                            var affixRef = _this3.tableRightInc.affixRef;
                            // if rendered then update postion of affix
                            return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();
                        });
                    }

                    if (headerLeftRow && headerLeftLockRow) {
                        var maxLeftRowHeight = headerLeftRow.offsetHeight;

                        util_dom.setStyle(headerLeftLockRow, 'height', maxLeftRowHeight);

                        setTimeout(function () {
                            var affixRef = _this3.tableLeftInc.affixRef;
                            // if rendered then update postion of affix
                            return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();
                        });
                    }
                });
            }
        };

        LockTable.prototype.adjustRowHeight = function adjustRowHeight() {
            var _this4 = this;

            if (this.isLock()) {
                this.tableInc.props.dataSource.forEach(function (item, index) {
                    // record may be a string
                    var rowIndex = '' + ((typeof item === 'undefined' ? 'undefined' : typeof_default()(item)) === 'object' && '__rowIndex' in item ? item.__rowIndex : index) + (item.__expanded ? '_expanded' : '');

                    // 同步左侧的锁列
                    _this4.setRowHeight(rowIndex, 'left');
                    // 同步右侧的锁列
                    _this4.setRowHeight(rowIndex, 'right');
                });
            }
        };

        LockTable.prototype.setRowHeight = function setRowHeight(rowIndex, dir) {
            var lockRow = this.getRowNode(rowIndex, dir),
                row = this.getRowNode(rowIndex),
                rowHeight = (lock_ieVersion ? row && row.offsetHeight : row && parseFloat(getComputedStyle(row).height)) || 'auto',
                lockHeight = (lock_ieVersion ? lockRow && lockRow.offsetHeight : lockRow && parseFloat(getComputedStyle(lockRow).height)) || 'auto';

            if (lockRow && rowHeight !== lockHeight) {
                util_dom.setStyle(lockRow, 'height', rowHeight);
            }
        };

        LockTable.prototype.getWrapperNode = function getWrapperNode(type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this['lock' + type + 'El']);
            } catch (error) {
                return null;
            }
        };

        // remove this in next major version, keep this for temperary incase of using it
        // getFirstNormalCellNode(index) {
        //     let i = 0;
        //     let row;
        //     do {
        //         row = this.getCellNode(index, i);
        //         i++;
        //     } while (
        //         (!row || (row && row.rowSpan && row.rowSpan > 1)) &&
        //         this.tableInc.flatChildren.length > i
        //     );

        //     return row;
        // }

        LockTable.prototype.getRowNode = function getRowNode(index, type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            var table = this['table' + type + 'Inc'];

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.getRowRef(index));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getHeaderCellNode = function getHeaderCellNode(index, i, type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            var table = this['table' + type + 'Inc'];

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.getHeaderCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getCellNode = function getCellNode(index, i, type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            var table = this['table' + type + 'Inc'];

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.getCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props4 = this.props,
                children = _props4.children,
                columns = _props4.columns,
                prefix = _props4.prefix,
                components = _props4.components,
                className = _props4.className,
                dataSource = _props4.dataSource,
                tableWidth = _props4.tableWidth,
                others = objectWithoutProperties_default()(_props4, ['children', 'columns', 'prefix', 'components', 'className', 'dataSource', 'tableWidth']);

            var _normalizeChildrenSta = this.normalizeChildrenState(this.props),
                lockLeftChildren = _normalizeChildrenSta.lockLeftChildren,
                lockRightChildren = _normalizeChildrenSta.lockRightChildren,
                normalizedChildren = _normalizeChildrenSta.children;

            var leftLen = this.getFlatenChildrenLength(lockLeftChildren);
            var rightLen = this.getFlatenChildrenLength(lockRightChildren);
            var originLen = this.getFlatenChildrenLength(normalizedChildren);

            var lengths = {
                left: leftLen,
                right: rightLen,
                origin: originLen
            };
            if (this._notNeedAdjustLockLeft) {
                lockLeftChildren = [];
            }
            if (this._notNeedAdjustLockRight) {
                lockRightChildren = [];
            }
            this.lockLeftChildren = lockLeftChildren;
            this.lockRightChildren = lockRightChildren;

            if (this.isOriginLock()) {
                var _classnames;

                components = extends_default()({}, components);
                components.Body = components.Body || body_LockBody;
                components.Header = components.Header || header_LockHeader;
                components.Wrapper = components.Wrapper || wrapper_FixedWrapper;
                components.Row = components.Row || row_LockRow;
                className = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-lock'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));
                var content = [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                    dataSource: dataSource,
                    key: 'lock-left',
                    columns: lockLeftChildren,
                    className: prefix + 'table-lock-left',
                    lengths: lengths,
                    prefix: prefix,
                    lockType: 'left',
                    components: components,
                    ref: this.saveLockLeftRef,
                    loading: false,
                    'aria-hidden': true
                })), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                    dataSource: dataSource,
                    key: 'lock-right',
                    columns: lockRightChildren,
                    className: prefix + 'table-lock-right',
                    lengths: lengths,
                    prefix: prefix,
                    lockType: 'right',
                    components: components,
                    ref: this.saveLockRightRef,
                    loading: false,
                    'aria-hidden': true
                }))];
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                    tableWidth: tableWidth,
                    dataSource: dataSource,
                    columns: normalizedChildren,
                    prefix: prefix,
                    lengths: lengths,
                    wrapperContent: content,
                    components: components,
                    className: className
                }));
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, this.props);
        };

        return LockTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.LockRow = row_LockRow, _class.LockBody = body_LockBody, _class.LockHeader = header_LockHeader, _class.propTypes = extends_default()({
        scrollToCol: _prop_types_15_8_1_prop_types_default.a.number,
        /**
         * 指定滚动到某一行，仅在`useVirtual`的时候生效
         */
        scrollToRow: _prop_types_15_8_1_prop_types_default.a.number
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps), _class.childContextTypes = {
        getTableInstance: _prop_types_15_8_1_prop_types_default.a.func,
        getLockNode: _prop_types_15_8_1_prop_types_default.a.func,
        onLockBodyScroll: _prop_types_15_8_1_prop_types_default.a.func,
        onRowMouseEnter: _prop_types_15_8_1_prop_types_default.a.func,
        onRowMouseLeave: _prop_types_15_8_1_prop_types_default.a.func
    }, _temp);
    LockTable.displayName = 'LockTable';

    statics(LockTable, BaseComponent);
    return LockTable;
}

function deepCopy(arr) {
    var copy = function copy(arr) {
        return arr.map(function (item) {
            var newItem = extends_default()({}, item);
            if (item.children) {
                item.children = copy(item.children);
            }
            return newItem;
        });
    };
    return copy(arr);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/new-lock.js

















function new_lock_stickyLock(BaseComponent) {
    var _class, _temp;

    /** Table */
    var LockTable = (_temp = _class = function (_React$Component) {
        inherits_default()(LockTable, _React$Component);

        function LockTable(props, context) {
            classCallCheck_default()(this, LockTable);

            var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

            _this.state = {};

            _this.updateOffsetArr = function () {
                var _ref = _this.splitChildren || {},
                    lockLeftChildren = _ref.lockLeftChildren,
                    lockRightChildren = _ref.lockRightChildren,
                    originChildren = _ref.originChildren;

                var leftLen = _this.getFlatenChildren(lockLeftChildren).length;
                var rightLen = _this.getFlatenChildren(lockRightChildren).length;
                var totalLen = leftLen + rightLen + _this.getFlatenChildren(originChildren).length;

                var hasLockLeft = leftLen > 0;
                var hasLockRight = rightLen > 0;

                var leftOffsetArr = _this.getStickyWidth(lockLeftChildren, 'left', totalLen);
                var rightOffsetArr = _this.getStickyWidth(lockRightChildren, 'right', totalLen);

                var state = {};

                if ('' + leftOffsetArr !== '' + _this.state.leftOffsetArr) {
                    state.leftOffsetArr = leftOffsetArr;
                }

                if ('' + rightOffsetArr !== '' + _this.state.rightOffsetArr) {
                    state.rightOffsetArr = rightOffsetArr;
                }

                if (hasLockLeft !== _this.state.hasLockLeft) {
                    state.hasLockLeft = hasLockLeft;
                }

                if (hasLockRight !== _this.state.hasLockRight) {
                    state.hasLockRight = hasLockRight;
                }

                if (Object.keys(state).length > 0) {
                    _this.setState(state);
                }
            };

            _this.onLockBodyScroll = function (e, forceSet) {
                var _ref2 = e.currentTarget || {},
                    scrollLeft = _ref2.scrollLeft,
                    scrollWidth = _ref2.scrollWidth,
                    clientWidth = _ref2.clientWidth;

                var pingRight = _this.pingRight,
                    pingLeft = _this.pingLeft;


                var pingLeftNext = scrollLeft > 0 && _this.state.hasLockLeft;
                var pingRightNext = scrollLeft < scrollWidth - clientWidth && _this.state.hasLockRight;

                if (forceSet || pingLeft !== pingLeftNext || pingRight !== pingRightNext) {
                    var prefix = _this.props.prefix;

                    var table = _this.getTableNode();

                    _this.pingLeft = pingLeftNext;
                    _this.pingRight = pingRightNext;

                    var leftFunc = pingLeftNext ? 'addClass' : 'removeClass';
                    util_dom[leftFunc](table, prefix + 'table-ping-left');
                    var rightFunc = pingRightNext ? 'addClass' : 'removeClass';
                    util_dom[rightFunc](table, prefix + 'table-ping-right');
                }
            };

            _this.getStickyWidth = function (lockChildren, dir, totalLen) {
                var _this$props = _this.props,
                    dataSource = _this$props.dataSource,
                    scrollToRow = _this$props.scrollToRow;

                var offsetArr = [];
                var flatenChildren = _this.getFlatenChildren(lockChildren);
                var len = flatenChildren.length;

                flatenChildren.reduce(function (ret, col, index) {
                    var tag = dir === 'left' ? index : len - 1 - index;
                    var tagNext = dir === 'left' ? tag - 1 : tag + 1;
                    var nodeToGetWidth = dir === 'left' ? tag - 1 : totalLen - index;

                    if (dir === 'left' && tag === 0) {
                        ret[0] = 0;
                        return ret;
                    } else if (dir === 'right' && tag === len - 1) {
                        ret[tag] = 0;
                        return ret;
                    }

                    // header with no dataSource
                    var isEmpty = !(dataSource && dataSource.length > 0);
                    // no header
                    var node = isEmpty ? _this.getHeaderCellNode(0, nodeToGetWidth) : _this.getCellNode(scrollToRow || dataSource[0] && dataSource[0].__rowIndex || 0, nodeToGetWidth);
                    var colWidth = node && parseFloat(getComputedStyle(node).width) || 0;

                    ret[tag] = (ret[tagNext] || 0) + colWidth;
                    return ret;
                }, offsetArr);

                return offsetArr;
            };

            _this.getTableInstance = function (type, instance) {
                type = '';
                _this['table' + type + 'Inc'] = instance;
            };

            _this.getNode = function (type, node) {
                _this[type + 'Node'] = node;
            };

            _this.getFlatenChildren = function () {
                var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

                var loop = function loop(arr) {
                    var newArray = [];
                    arr.forEach(function (child) {
                        if (child.children) {
                            newArray.push.apply(newArray, loop(child.children));
                        } else {
                            newArray.push(child);
                        }
                    });
                    return newArray;
                };

                return loop(children);
            };

            _this.state = {
                hasLockLeft: true,
                hasLockRight: true
            };

            _this.pingLeft = false;
            _this.pingRight = false;
            return _this;
        }

        LockTable.prototype.getChildContext = function getChildContext() {
            return {
                getTableInstance: this.getTableInstance,
                getLockNode: this.getNode,
                onLockBodyScroll: this.onLockBodyScroll
            };
        };

        LockTable.prototype.componentDidMount = function componentDidMount() {
            var dataSource = this.props.dataSource;

            var isEmpty = !(dataSource && dataSource.length > 0);

            this.updateOffsetArr();
            this.onLockBodyScroll(isEmpty ? { currentTarget: this.headerNode } : { currentTarget: this.bodyNode });
            this.forceUpdate();

            util_events.on(window, 'resize', this.updateOffsetArr);
        };

        LockTable.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
            if (nextProps.pure) {
                var isEqual = _shallow_element_equals_1_0_1_shallow_element_equals_default()(nextProps, this.props);
                return !(isEqual && util_obj.shallowEqual(nextContext, this.context));
            }

            return true;
        };

        LockTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.updateOffsetArr();
            this.onLockBodyScroll(this.bodyNode ? { currentTarget: this.bodyNode } : { currentTarget: this.headerNode }, true);
        };

        LockTable.prototype.componentWillUnmount = function componentWillUnmount() {
            this.pingLeft = false;
            this.pingRight = false;
            util_events.off(window, 'resize', this.updateOffsetArr);
        };

        LockTable.prototype.normalizeChildrenState = function normalizeChildrenState(props) {
            var columns = this.normalizeChildren(props);

            this.splitChildren = this.splitFromNormalizeChildren(columns);

            return this.mergeFromSplitLockChildren(this.splitChildren, props.prefix);
        };

        // 将React结构化数据提取props转换成数组


        LockTable.prototype.normalizeChildren = function normalizeChildren(props) {
            var children = props.children,
                columns = props.columns;

            var isLock = false,
                ret = void 0;
            var getChildren = function getChildren(children) {
                var ret = [];
                external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(children, function (child) {
                    if (child) {
                        var _props = extends_default()({}, child.props);
                        if ([true, 'left', 'right'].indexOf(_props.lock) > -1) {
                            isLock = true;
                            if (!('width' in _props)) {
                                log.warning('Should config width for lock column named [ ' + _props.dataIndex + ' ].');
                            }
                        }
                        ret.push(_props);
                        if (child.props.children) {
                            _props.children = getChildren(child.props.children);
                        }
                    }
                });
                return ret;
            };

            if (columns && !children) {
                ret = columns;
                isLock = columns.find(function (record) {
                    return [true, 'left', 'right'].indexOf(record.lock) > -1;
                });
            } else {
                ret = getChildren(children);
            }
            ret.forEach(function (child) {
                // 为自定义的列特殊处理
                if (child.__normalized && isLock) {
                    // users can set lock type for column selection now, so its origin lock type comes first
                    child.lock = child.lock || 'left';
                    delete child.__normalized;
                }
            });
            return ret;
        };

        /**
         * 从数组中分离出lock的列和正常的列
         * @param {Array} children
         * @return {Object} { lockLeftChildren, lockRightChildren, originChildren } 锁左列, 锁左列, 剩余列
         */


        LockTable.prototype.splitFromNormalizeChildren = function splitFromNormalizeChildren(children) {
            var originChildren = new_lock_deepCopy(children);
            var lockLeftChildren = new_lock_deepCopy(children);
            var lockRightChildren = new_lock_deepCopy(children);
            var loop = function loop(lockChildren, condition) {
                var ret = [];
                lockChildren.forEach(function (child) {
                    if (child.children) {
                        var res = loop(child.children, condition);
                        if (!res.length) {
                            ret.push(child);
                        }
                    } else {
                        var order = condition(child);
                        if (!order) {
                            ret.push(child);
                        }
                    }
                });
                ret.forEach(function (res) {
                    var index = lockChildren.indexOf(res);
                    lockChildren.splice(index, 1);
                });
                return lockChildren;
            };
            loop(lockLeftChildren, function (child) {
                if (child.lock === true || child.lock === 'left') {
                    return 'left';
                }
            });
            loop(lockRightChildren, function (child) {
                if (child.lock === 'right') {
                    return 'right';
                }
            });
            loop(originChildren, function (child) {
                return child.lock !== true && child.lock !== 'left' && child.lock !== 'right';
            });
            return {
                lockLeftChildren: lockLeftChildren,
                lockRightChildren: lockRightChildren,
                originChildren: originChildren
            };
        };

        /**
         * 将左侧的锁列树和中间的普通树及右侧的锁列树进行合并
         * 会在原始 originChildren 上做改动
         * @param {Object} splitChildren { lockLeftChildren, lockRightChildren, originChildren }
         * @return {Array} originChildren
         */


        LockTable.prototype.mergeFromSplitLockChildren = function mergeFromSplitLockChildren(splitChildren, prefix) {
            var lockLeftChildren = splitChildren.lockLeftChildren,
                lockRightChildren = splitChildren.lockRightChildren;
            var originChildren = splitChildren.originChildren;


            var flatenLeftChildren = this.getFlatenChildren(lockLeftChildren);
            var flatenRightChildren = this.getFlatenChildren(lockRightChildren);

            util_setStickyStyle(lockLeftChildren, flatenLeftChildren, 'left', this.state.leftOffsetArr, prefix);
            util_setStickyStyle(lockRightChildren, flatenRightChildren, 'right', this.state.rightOffsetArr, prefix);

            return [].concat(lockLeftChildren, originChildren, lockRightChildren);
        };

        LockTable.prototype.getCellNode = function getCellNode(index, i) {
            var table = this.tableInc;

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.getCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getTableNode = function getTableNode() {
            var table = this.tableInc;
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.tableEl);
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getHeaderCellNode = function getHeaderCellNode(index, i) {
            var table = this.tableInc;

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(table.getHeaderCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.render = function render() {
            var _classnames;

            /* eslint-disable no-unused-vars, prefer-const */
            var _props2 = this.props,
                children = _props2.children,
                columns = _props2.columns,
                prefix = _props2.prefix,
                components = _props2.components,
                scrollToRow = _props2.scrollToRow,
                className = _props2.className,
                dataSource = _props2.dataSource,
                others = objectWithoutProperties_default()(_props2, ['children', 'columns', 'prefix', 'components', 'scrollToRow', 'className', 'dataSource']);

            var normalizedChildren = this.normalizeChildrenState(this.props);

            components = extends_default()({}, components);
            components.Body = components.Body || body_LockBody;
            components.Header = components.Header || header_LockHeader;
            components.Wrapper = components.Wrapper || wrapper_FixedWrapper;
            components.Row = components.Row || row_LockRow;
            className = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-lock'] = true, _classnames[prefix + 'table-stickylock'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                dataSource: dataSource,
                columns: normalizedChildren,
                prefix: prefix,
                components: components,
                className: className
            }));
        };

        return LockTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.LockRow = row_LockRow, _class.LockBody = body_LockBody, _class.LockHeader = header_LockHeader, _class.propTypes = extends_default()({
        scrollToCol: _prop_types_15_8_1_prop_types_default.a.number,
        /**
         * 指定滚动到某一行，仅在`useVirtual`的时候生效
         */
        scrollToRow: _prop_types_15_8_1_prop_types_default.a.number
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps), _class.childContextTypes = {
        getTableInstance: _prop_types_15_8_1_prop_types_default.a.func,
        getLockNode: _prop_types_15_8_1_prop_types_default.a.func,
        onLockBodyScroll: _prop_types_15_8_1_prop_types_default.a.func
    }, _temp);
    LockTable.displayName = 'LockTable';

    statics(LockTable, BaseComponent);
    return LockTable;
}

function new_lock_deepCopy(arr) {
    var copy = function copy(arr) {
        return arr.map(function (item) {
            var newItem = extends_default()({}, item);
            if (item.children) {
                item.children = copy(item.children);
            }
            return newItem;
        });
    };
    return copy(arr);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/list-header.js




var list_header__class, list_header__temp;




/**
 * Table.GroupHeader
 * @order 2
 **/
var list_header_ListHeader = (list_header__temp = list_header__class = function (_React$Component) {
  inherits_default()(ListHeader, _React$Component);

  function ListHeader() {
    classCallCheck_default()(this, ListHeader);

    return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
  }

  ListHeader.prototype.render = function render() {
    return null;
  };

  return ListHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), list_header__class.propTypes = {
  /**
   * 行渲染的逻辑
   */
  cell: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.element, _prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func]),
  /**
   * 是否在Children上面渲染selection
   */
  hasChildrenSelection: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 是否在GroupHeader上面渲染selection
   */
  hasSelection: _prop_types_15_8_1_prop_types_default.a.bool,
  /**
   * 当 dataSouce 里没有 children 时，是否使用内容作为数据
   */
  useFirstLevelDataWhenNoChildren: _prop_types_15_8_1_prop_types_default.a.bool
}, list_header__class.defaultProps = {
  cell: function cell() {
    return '';
  },
  hasSelection: true,
  hasChildrenSelection: false,
  useFirstLevelDataWhenNoChildren: false
}, list_header__class._typeMark = 'listHeader', list_header__temp);
list_header_ListHeader.displayName = 'ListHeader';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/list-footer.js




var list_footer__class, list_footer__temp;




/* istanbul ignore file */
/**
 * Table.GroupFooter
 * @order 3
 **/
var list_footer_ListFooter = (list_footer__temp = list_footer__class = function (_React$Component) {
    inherits_default()(ListFooter, _React$Component);

    function ListFooter() {
        classCallCheck_default()(this, ListFooter);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    ListFooter.prototype.render = function render() {
        return null;
    };

    return ListFooter;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), list_footer__class.propTypes = {
    /**
     * 行渲染的逻辑
     */
    cell: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.element, _prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.func])
}, list_footer__class.defaultProps = {
    cell: function cell() {
        return '';
    }
}, list_footer__class._typeMark = 'listFooter', list_footer__temp);
list_footer_ListFooter.displayName = 'ListFooter';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/list/row.js






var list_row__class, list_row__temp;







var row_GroupListRow = (list_row__temp = list_row__class = function (_Row) {
    inherits_default()(GroupListRow, _Row);

    function GroupListRow() {
        classCallCheck_default()(this, GroupListRow);

        return possibleConstructorReturn_default()(this, _Row.apply(this, arguments));
    }

    GroupListRow.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            onClick = _props.onClick,
            onMouseEnter = _props.onMouseEnter,
            onMouseLeave = _props.onMouseLeave,
            columns = _props.columns,
            Cell = _props.Cell,
            rowIndex = _props.rowIndex,
            __rowIndex = _props.__rowIndex,
            record = _props.record,
            children = _props.children,
            primaryKey = _props.primaryKey,
            colGroup = _props.colGroup,
            cellRef = _props.cellRef,
            getCellProps = _props.getCellProps,
            locale = _props.locale,
            wrapper = _props.wrapper,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'onClick', 'onMouseEnter', 'onMouseLeave', 'columns', 'Cell', 'rowIndex', '__rowIndex', 'record', 'children', 'primaryKey', 'colGroup', 'cellRef', 'getCellProps', 'locale', 'wrapper', 'rtl']);

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-row'] = true, _classnames[className] = className, _classnames));

        // clear notRenderCellIndex, incase of cached data
        this.context.notRenderCellIndex = [];

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'table',
            extends_default()({
                className: cls,
                role: 'row'
            }, others, {
                onClick: this.onClick,
                onMouseEnter: this.onMouseEnter,
                onMouseLeave: this.onMouseLeave
            }),
            colGroup,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tbody',
                null,
                this.renderContent('header'),
                this.renderChildren(),
                this.renderContent('footer')
            )
        );
    };

    GroupListRow.prototype.isChildrenSelection = function isChildrenSelection() {
        return this.context.listHeader && this.context.listHeader.hasChildrenSelection;
    };

    GroupListRow.prototype.isFirstLevelDataWhenNoChildren = function isFirstLevelDataWhenNoChildren() {
        return this.context.listHeader && this.context.listHeader.useFirstLevelDataWhenNoChildren;
    };

    GroupListRow.prototype.isSelection = function isSelection() {
        return this.context.listHeader && this.context.listHeader.hasSelection;
    };

    GroupListRow.prototype.renderChildren = function renderChildren() {
        var _this2 = this;

        var _props2 = this.props,
            record = _props2.record,
            primaryKey = _props2.primaryKey;
        var children = record.children;


        var toRenderList = children;
        if (this.isFirstLevelDataWhenNoChildren()) {
            log.warning('useFirstLevelDataWhenNoChildren is deprecated, change your dataSource structure, make sure there is \'children\' in your dataSource.');

            toRenderList = children || [record];
        }

        if (toRenderList) {
            return toRenderList.map(function (child, index) {
                var cells = _this2.renderCells(child, index);
                if (_this2.isChildrenSelection()) {
                    if (!child[primaryKey]) {
                        log.warning('record.children/recored should contains primaryKey when childrenSelection is true.');
                    }
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'tr',
                        { key: child[primaryKey] },
                        cells
                    );
                }
                if (_this2.context.rowSelection) {
                    cells.shift();
                    cells[0] = cells[0] && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(cells[0], extends_default()({
                        colSpan: 2
                    }, cells[0].props));
                }
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'tr',
                    { key: index },
                    cells
                );
            });
        }
        return null;
    };

    GroupListRow.prototype.renderContent = function renderContent(type) {
        var _props3 = this.props,
            columns = _props3.columns,
            prefix = _props3.prefix,
            record = _props3.record,
            rowIndex = _props3.rowIndex;

        var cameType = type.charAt(0).toUpperCase() + type.substr(1);
        var list = this.context['list' + cameType];
        var listNode = void 0;
        if (list) {
            if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(list.cell)) {
                listNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(list.cell, {
                    record: record,
                    index: rowIndex
                });
            } else if (typeof list.cell === 'function') {
                listNode = list.cell(record, rowIndex);
            }
            if (listNode) {
                var cells = this.renderCells(record);
                if (type === 'header' && this.context.rowSelection && this.isSelection()) {
                    cells = cells.slice(0, 1);
                    cells.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'td',
                        { colSpan: columns.length - 1, key: 'listNode' },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'div',
                            { className: prefix + 'table-cell-wrapper' },
                            listNode
                        )
                    ));
                    listNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'tr',
                        { className: prefix + 'table-group-' + type },
                        cells
                    );
                } else {
                    listNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'tr',
                        { className: prefix + 'table-group-' + type },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'td',
                            { colSpan: columns.length },
                            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                                'div',
                                { className: prefix + 'table-cell-wrapper' },
                                listNode
                            )
                        )
                    );
                }
            }
        }
        return listNode;
    };

    return GroupListRow;
}(base_row_Row), list_row__class.contextTypes = {
    listHeader: _prop_types_15_8_1_prop_types_default.a.any,
    listFooter: _prop_types_15_8_1_prop_types_default.a.any,
    rowSelection: _prop_types_15_8_1_prop_types_default.a.object,
    notRenderCellIndex: _prop_types_15_8_1_prop_types_default.a.array,
    lockType: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}, list_row__temp);

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/list/body.js




function ListBody(props) {
    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(body_Body, extends_default()({ component: 'div' }, props));
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/list.js

















function list_list(BaseComponent) {
    var _class, _temp2;

    var ListTable = (_temp2 = _class = function (_React$Component) {
        inherits_default()(ListTable, _React$Component);

        function ListTable() {
            var _temp, _this, _ret;

            classCallCheck_default()(this, ListTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _temp), possibleConstructorReturn_default()(_this, _ret);
        }

        ListTable.prototype.getChildContext = function getChildContext() {
            return {
                listHeader: this.listHeader,
                listFooter: this.listFooter,
                rowSelection: this.rowSelection
            };
        };

        ListTable.prototype.normalizeDataSource = function normalizeDataSource(dataSource) {
            var ret = [];
            var loop = function loop(dataSource, level) {
                dataSource.forEach(function (item) {
                    item.__level = level;
                    ret.push(item);
                    if (item.children) {
                        loop(item.children, level + 1);
                    }
                });
            };
            loop(dataSource, 0);
            this.ds = ret;
            return ret;
        };

        ListTable.prototype.render = function render() {
            var _this2 = this;

            /* eslint-disable prefer-const */
            var _props = this.props,
                components = _props.components,
                children = _props.children,
                className = _props.className,
                prefix = _props.prefix,
                others = objectWithoutProperties_default()(_props, ['components', 'children', 'className', 'prefix']);

            var isList = false,
                ret = [];
            external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(children, function (child) {
                if (child) {
                    if (['function', 'object'].indexOf(typeof_default()(child.type)) > -1) {
                        if (child.type._typeMark === 'listHeader') {
                            _this2.listHeader = child.props;
                            isList = true;
                        } else if (child.type._typeMark === 'listFooter') {
                            _this2.listFooter = child.props;
                        } else {
                            ret.push(child);
                        }
                    } else {
                        ret.push(child);
                    }
                }
            });
            this.rowSelection = this.props.rowSelection;
            if (isList) {
                var _classnames;

                components = extends_default()({}, components);
                components.Row = components.Row || row_GroupListRow;
                components.Body = components.Body || ListBody;
                components.Header = components.Header || header_FixedHeader;
                components.Wrapper = components.Wrapper || wrapper_FixedWrapper;
                className = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-group'] = true, _classnames[className] = className, _classnames));
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                components: components,
                children: ret.length > 0 ? ret : undefined,
                className: className,
                prefix: prefix
            }));
        };

        return ListTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.ListHeader = list_header_ListHeader, _class.ListFooter = list_footer_ListFooter, _class.ListRow = row_GroupListRow, _class.ListBody = ListBody, _class.propTypes = extends_default()({}, BaseComponent.propTypes), _class.defaultProps = extends_default()({}, BaseComponent.defaultProps), _class.childContextTypes = {
        listHeader: _prop_types_15_8_1_prop_types_default.a.any,
        listFooter: _prop_types_15_8_1_prop_types_default.a.any,
        rowSelection: _prop_types_15_8_1_prop_types_default.a.object
    }, _temp2);
    ListTable.displayName = 'ListTable';

    statics(ListTable, BaseComponent);
    return ListTable;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/sticky/header.js






var sticky_header__class, header__temp2;






/* eslint-disable react/prefer-stateless-function*/
var header_StickHeader = (header__temp2 = sticky_header__class = function (_React$Component) {
    inherits_default()(StickHeader, _React$Component);

    function StickHeader() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, StickHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getAffixRef = function (ref) {
            _this.props.affixRef && _this.props.affixRef(ref);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    StickHeader.prototype.render = function render() {
        var _classnames;

        var prefix = this.props.prefix;
        var _context = this.context,
            Header = _context.Header,
            offsetTop = _context.offsetTop,
            affixProps = _context.affixProps;


        var newAffixProps = affixProps || {};

        var className = newAffixProps.className,
            others = objectWithoutProperties_default()(newAffixProps, ['className']);

        var cls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'table-affix'] = true, _classnames.className = className, _classnames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            affix,
            extends_default()({
                ref: this.getAffixRef
            }, others, {
                className: cls,
                offsetTop: offsetTop
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Header, this.props)
        );
    };

    return StickHeader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), sticky_header__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, sticky_header__class.contextTypes = {
    Header: _prop_types_15_8_1_prop_types_default.a.any,
    offsetTop: _prop_types_15_8_1_prop_types_default.a.number,
    affixProps: _prop_types_15_8_1_prop_types_default.a.object
}, header__temp2);
header_StickHeader.displayName = 'StickHeader';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/sticky.js











function sticky(BaseComponent) {
    var _class, _temp2;

    /** Table */
    var StickyTable = (_temp2 = _class = function (_React$Component) {
        inherits_default()(StickyTable, _React$Component);

        function StickyTable() {
            var _temp, _this, _ret;

            classCallCheck_default()(this, StickyTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _temp), possibleConstructorReturn_default()(_this, _ret);
        }

        StickyTable.prototype.getChildContext = function getChildContext() {
            return {
                Header: this.props.components.Header || header_FixedHeader,
                offsetTop: this.props.offsetTop,
                affixProps: this.props.affixProps
            };
        };

        StickyTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars */
            var _props = this.props,
                stickyHeader = _props.stickyHeader,
                offsetTop = _props.offsetTop,
                affixProps = _props.affixProps,
                others = objectWithoutProperties_default()(_props, ['stickyHeader', 'offsetTop', 'affixProps']);

            var _props2 = this.props,
                components = _props2.components,
                maxBodyHeight = _props2.maxBodyHeight,
                fixedHeader = _props2.fixedHeader;

            if (stickyHeader) {
                components = extends_default()({}, components);
                components.Header = header_StickHeader;
                fixedHeader = true;
                maxBodyHeight = Math.max(maxBodyHeight, 10000);
            }
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(BaseComponent, extends_default()({}, others, {
                components: components,
                fixedHeader: fixedHeader,
                maxBodyHeight: maxBodyHeight
            }));
        };

        return StickyTable;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), _class.StickyHeader = header_StickHeader, _class.propTypes = extends_default()({
        /**
         * 表头是否是sticky
         */
        stickyHeader: _prop_types_15_8_1_prop_types_default.a.bool,
        /**
         * 距离窗口顶部达到指定偏移量后触发
         */
        offsetTop: _prop_types_15_8_1_prop_types_default.a.number,
        /**
         * affix组件的的属性
         */
        affixProps: _prop_types_15_8_1_prop_types_default.a.object,
        components: _prop_types_15_8_1_prop_types_default.a.object
    }, BaseComponent.propTypes), _class.defaultProps = extends_default()({
        components: {}
    }, BaseComponent.defaultProps), _class.childContextTypes = {
        Header: _prop_types_15_8_1_prop_types_default.a.any,
        offsetTop: _prop_types_15_8_1_prop_types_default.a.number,
        affixProps: _prop_types_15_8_1_prop_types_default.a.object
    }, _temp2);
    StickyTable.displayName = 'StickyTable';

    statics(StickyTable, BaseComponent);
    return StickyTable;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/table/index.js

















var table_ieVersion = util_env.ieVersion;


var ORDER_LIST = [fixed_fixed, lock_lock, selection, expanded_expanded, virtual, tree, list_list, sticky];
var table_Table = ORDER_LIST.reduce(function (ret, current) {
    ret = current(ret);
    return ret;
}, table_base);

lock_lock._typeMark = 'lock';
expanded_expanded._typeMark = 'expanded';
fixed_fixed._typeMark = 'fixed';

var StickyLockTable = ORDER_LIST.reduce(function (ret, current) {
    var newLock = !table_ieVersion;
    if (current._typeMark === 'lock') {
        ret = newLock ? new_lock_stickyLock(ret) : lock_lock(ret);
    } else if (current._typeMark === 'expanded') {
        ret = newLock ? expanded_expanded(ret, true) : expanded_expanded(ret);
    } else if (current._typeMark === 'fixed') {
        ret = newLock ? fixed_fixed(ret, true) : fixed_fixed(ret);
    } else {
        ret = current(ret);
    }
    return ret;
}, table_base);

table_Table.Base = table_base;
table_Table.fixed = fixed_fixed;
table_Table.lock = lock_lock;
table_Table.selection = selection;
table_Table.expanded = expanded_expanded;
table_Table.tree = tree;
table_Table.virtual = virtual;
table_Table.list = list_list;
table_Table.sticky = sticky;

table_Table.GroupHeader = list_header_ListHeader;
table_Table.GroupFooter = list_footer_ListFooter;

table_Table.StickyLock = config_provider.config(StickyLockTable, {
    componentName: 'Table'
});

/* harmony default export */ var es_table = (config_provider.config(table_Table, {
    componentName: 'Table',
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('expandedRowKeys' in props) {
            deprecated('expandedRowKeys', 'openRowKeys', 'Table');

            var _props = props,
                expandedRowKeys = _props.expandedRowKeys,
                others = objectWithoutProperties_default()(_props, ['expandedRowKeys']);

            props = extends_default()({ openRowKeys: expandedRowKeys }, others);
        }
        if ('onExpandedChange' in props) {
            deprecated('onExpandedChange', 'onRowOpen', 'Table');

            var _props2 = props,
                onExpandedChange = _props2.onExpandedChange,
                _others = objectWithoutProperties_default()(_props2, ['onExpandedChange']);

            props = extends_default()({ onRowOpen: onExpandedChange }, _others);
        }
        if ('isLoading' in props) {
            deprecated('isLoading', 'loading', 'Table');

            var _props3 = props,
                isLoading = _props3.isLoading,
                _others2 = objectWithoutProperties_default()(_props3, ['isLoading']);

            props = extends_default()({ loading: isLoading }, _others2);
        }
        if ('indentSize' in props) {
            deprecated('indentSize', 'indent', 'Table');

            var _props4 = props,
                indentSize = _props4.indentSize,
                _others3 = objectWithoutProperties_default()(_props4, ['indentSize']);

            props = extends_default()({ indent: indentSize }, _others3);
        }
        if ('optimization' in props) {
            deprecated('optimization', 'pure', 'Table');

            var _props5 = props,
                optimization = _props5.optimization,
                _others4 = objectWithoutProperties_default()(_props5, ['optimization']);

            props = extends_default()({ pure: optimization }, _others4);
        }

        if ('getRowClassName' in props) {
            deprecated('getRowClassName', 'getRowProps', 'Table');

            var _props6 = props,
                getRowClassName = _props6.getRowClassName,
                getRowProps = _props6.getRowProps,
                _others5 = objectWithoutProperties_default()(_props6, ['getRowClassName', 'getRowProps']);

            if (getRowClassName) {
                var newGetRowProps = function newGetRowProps() {
                    return extends_default()({
                        className: getRowClassName.apply(undefined, arguments)
                    }, getRowProps ? getRowProps.apply(undefined, arguments) : {});
                };

                props = extends_default()({ getRowProps: newGetRowProps }, _others5);
            } else {
                props = extends_default()({ getRowProps: getRowProps }, _others5);
            }
        }

        if ('getRowProps' in props) {
            deprecated('getRowProps', 'rowProps', 'Table in 1.15.0');

            var _props7 = props,
                _getRowProps = _props7.getRowProps,
                _others6 = objectWithoutProperties_default()(_props7, ['getRowProps']);

            props = extends_default()({ rowProps: _getRowProps }, _others6);
        }

        if ('getCellProps' in props) {
            deprecated('getCellProps', 'cellProps', 'Table in 1.15.0');

            var _props8 = props,
                getCellProps = _props8.getCellProps,
                _others7 = objectWithoutProperties_default()(_props8, ['getCellProps']);

            props = extends_default()({ cellProps: getCellProps }, _others7);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker/time-picker.js






var time_picker__class, time_picker__temp, time_picker__initialiseProps;
















var time_picker_Popup = next_es_overlay.Popup;
var time_picker_noop = func.noop;

var timePickerLocale = locale_zh_cn.TimePicker;

/**
 * TimePicker
 */
var time_picker_TimePicker = (time_picker__temp = time_picker__class = function (_Component) {
    inherits_default()(TimePicker, _Component);

    function TimePicker(props, context) {
        classCallCheck_default()(this, TimePicker);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        time_picker__initialiseProps.call(_this);

        var value = utils_formatDateValue(props.value || props.defaultValue, props.format);
        _this.inputAsString = typeof (props.value || props.defaultValue) === 'string';
        _this.state = {
            value: value,
            inputStr: '',
            inputing: false,
            visible: props.visible || props.defaultVisible
        };
        return _this;
    }

    TimePicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var state = {};

        if ('value' in props) {
            state.value = utils_formatDateValue(props.value, props.format);
        }

        if ('visible' in props) {
            state.visible = props.visible;
        }

        return state;
    };

    TimePicker.prototype.onValueChange = function onValueChange(newValue) {
        var ret = this.inputAsString && newValue ? newValue.format(this.props.format) : newValue;
        this.props.onChange(ret);
    };

    TimePicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(value, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            label
        );
    };

    TimePicker.prototype.render = function render() {
        var _classnames, _classnames2;

        var _props2 = this.props,
            prefix = _props2.prefix,
            label = _props2.label,
            state = _props2.state,
            placeholder = _props2.placeholder,
            size = _props2.size,
            format = _props2.format,
            hasClear = _props2.hasClear,
            hourStep = _props2.hourStep,
            minuteStep = _props2.minuteStep,
            secondStep = _props2.secondStep,
            disabledHours = _props2.disabledHours,
            disabledMinutes = _props2.disabledMinutes,
            disabledSeconds = _props2.disabledSeconds,
            renderTimeMenuItems = _props2.renderTimeMenuItems,
            inputProps = _props2.inputProps,
            popupAlign = _props2.popupAlign,
            popupTriggerType = _props2.popupTriggerType,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            disabled = _props2.disabled,
            className = _props2.className,
            locale = _props2.locale,
            rtl = _props2.rtl,
            isPreview = _props2.isPreview,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'label', 'state', 'placeholder', 'size', 'format', 'hasClear', 'hourStep', 'minuteStep', 'secondStep', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'renderTimeMenuItems', 'inputProps', 'popupAlign', 'popupTriggerType', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'disabled', 'className', 'locale', 'rtl', 'isPreview']);

        var _state = this.state,
            value = _state.value,
            inputStr = _state.inputStr,
            inputing = _state.inputing,
            visible = _state.visible;


        var triggerCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefix + 'time-picker-trigger'] = true, _classnames));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(util_obj.pickOthers(others, TimePicker.PropTypes));
        }

        var inputValue = inputing ? inputStr : value && value.format(format) || '';
        var sharedInputProps = extends_default()({}, inputProps, {
            size: size,
            disabled: disabled,
            value: inputValue,
            hasClear: value && hasClear,
            onChange: this.onInputChange,
            onBlur: this.onInputBlur,
            onPressEnter: this.onInputBlur,
            onKeyDown: this.onKeyown,
            hint: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                type: 'clock',
                className: prefix + 'time-picker-symbol-clock-icon'
            })
        });

        var triggerInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: triggerCls },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                label: label,
                state: state,
                placeholder: placeholder || locale.placeholder,
                className: prefix + 'time-picker-input'
            }))
        );

        var panelProps = {
            prefix: prefix,
            locale: locale,
            value: value,
            disabled: disabled,
            showHour: format.indexOf('H') > -1,
            showSecond: format.indexOf('s') > -1,
            showMinute: format.indexOf('m') > -1,
            hourStep: hourStep,
            minuteStep: minuteStep,
            secondStep: secondStep,
            disabledHours: disabledHours,
            disabledMinutes: disabledMinutes,
            disabledSeconds: disabledSeconds,
            renderTimeMenuItems: renderTimeMenuItems,
            onSelect: this.onTimePanelSelect
        };

        var classNames = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2[prefix + 'time-picker'] = true, _classnames2[prefix + 'time-picker-' + size] = size, _classnames2[prefix + 'disabled'] = disabled, _classnames2), className);

        var PopupComponent = popupComponent ? popupComponent : time_picker_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(TimePicker.propTypes, others), {
                className: classNames
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComponent,
                extends_default()({
                    autoFocus: true,
                    align: popupAlign
                }, popupProps, {
                    followTrigger: followTrigger,
                    visible: visible,
                    onVisibleChange: this.onVisibleChange,
                    trigger: triggerInput,
                    container: popupContainer,
                    disabled: disabled,
                    triggerType: popupTriggerType,
                    style: popupStyle,
                    className: popupClassName
                }),
                popupContent ? popupContent : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    {
                        dir: others.dir,
                        className: prefix + 'time-picker-body'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        {
                            className: prefix + 'time-picker-panel-header'
                        },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedInputProps, {
                            placeholder: format,
                            className: prefix + 'time-picker-panel-input'
                        }))
                    ),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_picker_panel, panelProps)
                )
            )
        );
    };

    return TimePicker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), time_picker__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 按钮的文案
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'success']),
    /**
     * 输入框提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 时间值（moment 对象或时间字符串，受控状态使用）
     */
    value: checkDateValue,
    /**
     * 时间初值（moment 对象或时间字符串，非受控状态使用）
     */
    defaultValue: checkDateValue,
    /**
     * 时间选择框的尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否允许清空时间
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 时间的格式
     * https://momentjs.com/docs/#/parsing/string-format/
     */
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 小时选项步长
     */
    hourStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用秒钟函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {moment} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层是否显示（受控）
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示（非受控）
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层容器
     * @param {Object} target 目标节点
     * @return {ReactNode} 容器节点
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层对齐方式, 详情见Overlay 文档
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否隐藏和显示
     * @param {String} type 触发弹层显示和隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 时间
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 时间值改变时的回调
     * @param {Object|String} value 时间对象或时间字符串
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    name: _prop_types_15_8_1_prop_types_default.a.string,
    inputProps: _prop_types_15_8_1_prop_types_default.a.object,
    popupComponent: _prop_types_15_8_1_prop_types_default.a.elementType,
    popupContent: _prop_types_15_8_1_prop_types_default.a.node
}), time_picker__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    locale: timePickerLocale,
    size: 'medium',
    format: 'HH:mm:ss',
    hasClear: true,
    disabled: false,
    popupAlign: 'tl tl',
    popupTriggerType: 'click',
    onChange: time_picker_noop,
    onVisibleChange: time_picker_noop
}, time_picker__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onClearValue = function () {
        _this2.setState({
            value: null
        });
        if (_this2.state.value) {
            _this2.onValueChange(null);
        }
    };

    this.onInputChange = function (inputValue, e, eventType) {
        if (!('value' in _this2.props)) {
            if (eventType === 'clear' || !inputValue) {
                e.stopPropagation();
                _this2.onClearValue();
            }

            _this2.setState({
                inputStr: inputValue,
                inputing: true
            });
        } else if (eventType === 'clear') {
            // 受控状态下用户点击 clear
            e.stopPropagation();
            _this2.onValueChange(null);
        }
    };

    this.onInputBlur = function () {
        var inputStr = _this2.state.inputStr;

        if (inputStr) {
            var format = _this2.props.format;

            var parsed = external___root___moment___commonjs2___moment___commonjs___moment___amd___moment___default()(inputStr, format, true);
            if (parsed.isValid()) {
                _this2.setState({
                    value: parsed,
                    inputStr: ''
                });
                _this2.onValueChange(parsed);
            }
            _this2.setState({
                inputing: false
            });
        }
    };

    this.onKeyown = function (e) {
        var _state2 = _this2.state,
            value = _state2.value,
            inputStr = _state2.inputStr;
        var _props3 = _this2.props,
            format = _props3.format,
            _props3$hourStep = _props3.hourStep,
            hourStep = _props3$hourStep === undefined ? 1 : _props3$hourStep,
            _props3$minuteStep = _props3.minuteStep,
            minuteStep = _props3$minuteStep === undefined ? 1 : _props3$minuteStep,
            _props3$secondStep = _props3.secondStep,
            secondStep = _props3$secondStep === undefined ? 1 : _props3$secondStep,
            disabledMinutes = _props3.disabledMinutes,
            disabledSeconds = _props3.disabledSeconds;


        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }
        var timeStr = onTimeKeydown(e, {
            format: format,
            timeInputStr: inputStr,
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            },
            value: value
        }, unit);

        if (!timeStr) return;

        _this2.onInputChange(timeStr);
    };

    this.onTimePanelSelect = function (value) {
        if (!('value' in _this2.props)) {
            _this2.setState({
                value: value,
                inputing: false
            });
        }
        if (!_this2.state.value || value.valueOf() !== _this2.state.value.valueOf()) {
            _this2.onValueChange(value);
        }
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this2.props)) {
            _this2.setState({
                visible: visible
            });
        }
        _this2.props.onVisibleChange(visible, type);
    };
}, time_picker__temp);
time_picker_TimePicker.displayName = 'TimePicker';


/* harmony default export */ var time_picker = (Object(react_lifecycles_compat_es["polyfill"])(time_picker_TimePicker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker/index.js





/* harmony default export */ var es_time_picker = (config_provider.config(time_picker, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('defaultOpen' in props) {
            deprecated('defaultOpen', 'defaultVisible', 'TimePicker');

            var _props = props,
                defaultOpen = _props.defaultOpen,
                others = objectWithoutProperties_default()(_props, ['defaultOpen']);

            props = extends_default()({ defaultVisible: defaultOpen }, others);
        }
        if ('open' in props) {
            deprecated('open', 'visible', 'TimePicker');

            var _props2 = props,
                open = _props2.open,
                _others = objectWithoutProperties_default()(_props2, ['open']);

            props = extends_default()({ visible: open }, _others);
        }
        if ('onOpenChange' in props) {
            deprecated('onOpenChange', 'onVisibleChange', 'TimePicker');

            var _props3 = props,
                onOpenChange = _props3.onOpenChange,
                _others2 = objectWithoutProperties_default()(_props3, ['onOpenChange']);

            props = extends_default()({ onVisibleChange: onOpenChange }, _others2);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/timeline/view/timeline.js






var timeline__class, timeline__temp;










/** Timeline */
var timeline_Timeline = (timeline__temp = timeline__class = function (_Component) {
    inherits_default()(Timeline, _Component);

    function Timeline(props, context) {
        classCallCheck_default()(this, Timeline);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this.state = {
            fold: props.fold
        };
        return _this;
    }

    Timeline.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var innerUpdate = prevState.innerUpdate,
            fold = prevState.fold;


        if (innerUpdate) {
            return {
                fold: fold,
                innerUpdate: false
            };
        }

        if ('fold' in nextProps) {
            return {
                fold: nextProps.fold
            };
        }

        return null;
    };

    Timeline.prototype.toggleFold = function toggleFold(folderIndex, total) {
        var fold = this.state.fold.map(function (item) {
            return extends_default()({}, item);
        });

        if (folderIndex) {
            for (var i = 0; i < fold.length; i++) {
                var _fold$i = fold[i],
                    foldArea = _fold$i.foldArea,
                    foldShow = _fold$i.foldShow;


                if (foldArea[1] && folderIndex === foldArea[1] || !foldArea[1] && folderIndex === total - 1) {
                    fold[i].foldShow = !foldShow;
                }
            }

            this.setState({ fold: fold, innerUpdate: true });
        }
    };

    Timeline.prototype.render = function render() {
        var _this2 = this,
            _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            className = _props.className,
            children = _props.children,
            locale = _props.locale,
            animation = _props.animation,
            mode = _props.mode,
            others = objectWithoutProperties_default()(_props, ['prefix', 'rtl', 'className', 'children', 'locale', 'animation', 'mode']);

        var fold = this.state.fold;

        // 修改子节点属性

        var childrenCount = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.count(children);
        var isAlternateMode = mode === 'alternate';
        var getPositionCls = function getPositionCls(idx) {
            if (isAlternateMode) {
                return idx % 2 === 0 ? prefix + 'timeline-item-left' : prefix + 'timeline-item-right';
            }
            return prefix + 'timeline-item-left';
        };

        var cloneChildren = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child, i) {
            var folderIndex = null;
            var foldNodeShow = false;

            fold.forEach(function (item) {
                var foldArea = item.foldArea,
                    foldShow = item.foldShow;


                if (foldArea[0] && i >= foldArea[0] && (i <= foldArea[1] || !foldArea[1])) {
                    folderIndex = foldArea[1] || childrenCount - 1;
                    foldNodeShow = foldShow;
                }
            });

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, {
                prefix: prefix,
                locale: locale,
                total: childrenCount,
                className: getPositionCls(i),
                index: i,
                folderIndex: folderIndex,
                foldShow: foldNodeShow,
                toggleFold: folderIndex === i ? _this2.toggleFold.bind(_this2, folderIndex, childrenCount) : function () {},
                animation: animation
            });
        });

        var timelineCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'timeline'] = true, _classNames[prefix + 'alternate'] = isAlternateMode, _classNames), className);

        if (rtl) {
            others.dir = 'rtl';
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ul',
            extends_default()({}, util_obj.pickOthers(Timeline.propTypes, others), { className: timelineCls }),
            cloneChildren
        );
    };

    return Timeline;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), timeline__class.propTypes = extends_default()({}, config_provider.propTypes, {
    /**
     * 样式的品牌前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义折叠选项 示例`[{foldArea: [startIndex, endIndex], foldShow: boolean}]`
     */
    fold: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 自定义类名
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    animation: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 展示的模式
     * @enumdesc 左, 交错显示
     * @version 1.23.18
     */
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'alternate'])
}), timeline__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    fold: [],
    locale: locale_zh_cn.Timeline,
    animation: true,
    mode: 'left'
}, timeline__temp);
timeline_Timeline.displayName = 'Timeline';


/* harmony default export */ var timeline = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(timeline_Timeline)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/timeline/view/timeline-item.js






var timeline_item__class, timeline_item__temp2;










var timeline_item_Expand = es_animate.Expand;
/** Timeline.Item */

var timeline_item_TimelineItem = (timeline_item__temp2 = timeline_item__class = function (_Component) {
    inherits_default()(TimelineItem, _Component);

    function TimelineItem() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, TimelineItem);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.beforeEnter = function () {
            _this['timeline-item'].style['min-height'] = 'auto';
        }, _this.beforeLeave = function () {
            _this['timeline-item'].style['min-height'] = '48px'; // timeleft 节点最小高度
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    TimelineItem.prototype.toggleFold = function toggleFold(folderIndex) {
        this.props.toggleFold(folderIndex);
    };

    TimelineItem.prototype.render = function render() {
        var _classNames,
            _classNames2,
            _classNames3,
            _classNames4,
            _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            state = _props.state,
            icon = _props.icon,
            dot = _props.dot,
            time = _props.time,
            title = _props.title,
            timeLeft = _props.timeLeft,
            content = _props.content,
            index = _props.index,
            total = _props.total,
            folderIndex = _props.folderIndex,
            foldShow = _props.foldShow,
            locale = _props.locale,
            animation = _props.animation,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'state', 'icon', 'dot', 'time', 'title', 'timeLeft', 'content', 'index', 'total', 'folderIndex', 'foldShow', 'locale', 'animation']);

        var finalItemNode = dot ? dot : icon ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: prefix + 'timeline-item-icon' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: icon, size: 'xs' })
        ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: prefix + 'timeline-item-dot' });
        var itemCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'timeline-item'] = true, _classNames[prefix + 'timeline-item-first'] = index === 0, _classNames[prefix + 'timeline-item-last'] = index === total - 1, _classNames[prefix + 'timeline-item-' + state] = state, _classNames[prefix + 'timeline-item-folded'] = folderIndex, _classNames[prefix + 'timeline-item-unfolded'] = foldShow, _classNames[prefix + 'timeline-item-has-left-content'] = timeLeft, _classNames[className] = className, _classNames));
        var folderCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'timeline-item-folder'] = true, _classNames2[prefix + 'timeline-item-has-left-content'] = timeLeft, _classNames2));
        var itemNodeCls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'timeline-item-node'] = true, _classNames3[prefix + 'timeline-item-node-custom'] = dot, _classNames3));
        var dotTailCls = _classnames_2_3_1_classnames_default()((_classNames4 = {}, _classNames4[prefix + 'timeline-item-dot-tail'] = true, _classNames4[prefix + 'timeline-item-dot-tail-solid'] = foldShow, _classNames4[prefix + 'timeline-hide'] = index === total - 1 && foldShow, _classNames4));

        var renderTimeLineItemContent = function renderTimeLineItemContent(isLeft) {
            if (isLeft) return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                { className: prefix + 'timeline-item-body' },
                timeLeft
            );
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment,
                null,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'timeline-item-title' },
                    title
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'timeline-item-body' },
                    content
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'timeline-item-time' },
                    time
                )
            );
        };

        var buttonProps = {
            text: true,
            size: 'small',
            type: 'primary',
            onClick: this.toggleFold.bind(this, folderIndex, total)
        };
        var timelineNode = folderIndex && foldShow || !folderIndex ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(TimelineItem.propTypes, others), {
                className: itemCls,
                ref: function ref(e) {
                    _this2['timeline-item'] = e;
                }
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'timeline-item-left-content' },
                renderTimeLineItemContent(className.includes(prefix + 'timeline-item-left'))
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'timeline-item-timeline' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'timeline-item-tail' },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('i', null)
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: itemNodeCls },
                    finalItemNode
                )
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'timeline-item-content' },
                renderTimeLineItemContent(!className.includes(prefix + 'timeline-item-left'))
            )
        ) : null;
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            { tabIndex: '0' },
            animation && folderIndex ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                timeline_item_Expand,
                {
                    animationAppear: false,
                    beforeEnter: this.beforeEnter,
                    beforeLeave: this.beforeEnter,
                    afterEnter: this.beforeLeave
                },
                timelineNode
            ) : timelineNode,
            folderIndex === index ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: folderCls },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: dotTailCls }),
                foldShow ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    buttonProps,
                    locale.fold,
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-up' })
                ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    buttonProps,
                    locale.expand,
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'arrow-down' })
                )
            ) : null
        );
    };

    return TimelineItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), timeline_item__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    index: _prop_types_15_8_1_prop_types_default.a.number,
    total: _prop_types_15_8_1_prop_types_default.a.number,
    folderIndex: _prop_types_15_8_1_prop_types_default.a.number,
    foldShow: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 节点状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['done', 'process', 'error', 'success']),
    /**
     * 图标
     */
    icon: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义时间轴节点
     */
    dot: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 格式化后的时间
     */
    time: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 左侧时间
     */
    timeLeft: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 右侧内容
     */
    content: _prop_types_15_8_1_prop_types_default.a.node,
    toggleFold: _prop_types_15_8_1_prop_types_default.a.func,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 动画
     */
    animation: _prop_types_15_8_1_prop_types_default.a.bool
}), timeline_item__class.defaultProps = {
    prefix: 'next-',
    state: 'done',
    toggleFold: function toggleFold() {},
    animation: true
}, timeline_item__temp2);
timeline_item_TimelineItem.displayName = 'TimelineItem';

/* harmony default export */ var timeline_item = (timeline_item_TimelineItem);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/timeline/index.js



timeline.Item = timeline_item;

/* harmony default export */ var es_timeline = (timeline);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/transfer/view/transfer-item.js





var transfer_item__class, transfer_item__temp;







var transfer_item_Item = es_menu.Item,
    transfer_item_CheckboxItem = es_menu.CheckboxItem;
var transfer_item_bindCtx = func.bindCtx;
var transfer_item_pickOthers = util_obj.pickOthers;
var transfer_item_getOffset = util_dom.getOffset;
var transfer_item_TransferItem = (transfer_item__temp = transfer_item__class = function (_Component) {
    inherits_default()(TransferItem, _Component);

    function TransferItem(props) {
        classCallCheck_default()(this, TransferItem);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.state = {
            highlight: false
        };

        transfer_item_bindCtx(_this, ['getItemDOM', 'handleClick', 'handleDragStart', 'handleDragOver', 'handleDragEnd', 'handleDrop']);
        return _this;
    }

    TransferItem.prototype.componentDidMount = function componentDidMount() {
        var _this2 = this;

        if (this.props.needHighlight) {
            this.addHighlightTimer = setTimeout(function () {
                _this2.setState({
                    highlight: true
                });
            }, 1);
            this.removeHighlightTimer = setTimeout(function () {
                _this2.setState({
                    highlight: false
                });
            }, 201);
        }
    };

    TransferItem.prototype.componentWillUnmount = function componentWillUnmount() {
        clearTimeout(this.addHighlightTimer);
        clearTimeout(this.removeHighlightTimer);
    };

    TransferItem.prototype.getItemDOM = function getItemDOM(ref) {
        this.item = ref;
    };

    TransferItem.prototype.handleClick = function handleClick() {
        var _props = this.props,
            onClick = _props.onClick,
            panelPosition = _props.panelPosition,
            item = _props.item;

        onClick(panelPosition === 'left' ? 'right' : 'left', item.value);
    };

    TransferItem.prototype.handleDragStart = function handleDragStart(ev) {
        ev && ev.dataTransfer && typeof ev.dataTransfer.setData === 'function' && ev.dataTransfer.setData('text/plain', ev.target.id);
        var _props2 = this.props,
            onDragStart = _props2.onDragStart,
            panelPosition = _props2.panelPosition,
            item = _props2.item;

        onDragStart(panelPosition, item.value);
    };

    TransferItem.prototype.getDragGap = function getDragGap(e) {
        var referenceTop = transfer_item_getOffset(e.currentTarget).top;
        var referenceHeight = e.currentTarget.offsetHeight;
        return e.pageY <= referenceTop + referenceHeight / 2 ? 'before' : 'after';
    };

    TransferItem.prototype.handleDragOver = function handleDragOver(e) {
        var _props3 = this.props,
            panelPosition = _props3.panelPosition,
            dragPosition = _props3.dragPosition,
            onDragOver = _props3.onDragOver,
            item = _props3.item;

        if (panelPosition === dragPosition) {
            e.preventDefault();

            var dragGap = this.getDragGap(e);
            if (this.dragGap !== dragGap) {
                this.dragGap = dragGap;
                onDragOver(item.value);
            }
        }
    };

    TransferItem.prototype.handleDragEnd = function handleDragEnd() {
        var onDragEnd = this.props.onDragEnd;

        onDragEnd();
    };

    TransferItem.prototype.handleDrop = function handleDrop(e) {
        e.preventDefault();

        var _props4 = this.props,
            onDrop = _props4.onDrop,
            item = _props4.item,
            panelPosition = _props4.panelPosition,
            dragValue = _props4.dragValue;

        onDrop(panelPosition, dragValue, item.value, this.dragGap);
    };

    TransferItem.prototype.render = function render() {
        var _cx;

        var _props5 = this.props,
            prefix = _props5.prefix,
            mode = _props5.mode,
            checked = _props5.checked,
            disabled = _props5.disabled,
            item = _props5.item,
            onCheck = _props5.onCheck,
            itemRender = _props5.itemRender,
            draggable = _props5.draggable,
            dragOverValue = _props5.dragOverValue,
            panelPosition = _props5.panelPosition,
            dragPosition = _props5.dragPosition;

        var others = transfer_item_pickOthers(Object.keys(TransferItem.propTypes), this.props);
        var highlight = this.state.highlight;

        var isSimple = mode === 'simple';

        var classNames = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'transfer-panel-item'] = true, _cx[prefix + 'insert-' + this.dragGap] = dragOverValue === item.value && panelPosition === dragPosition, _cx[prefix + 'focused'] = highlight, _cx[prefix + 'simple'] = isSimple, _cx));

        var children = itemRender(item);
        var itemProps = extends_default()({
            ref: this.getItemDOM,
            className: classNames,
            children: children,
            disabled: disabled,
            draggable: draggable && !disabled,
            onDragStart: this.handleDragStart,
            onDragOver: this.handleDragOver,
            onDragEnd: this.handleDragEnd,
            onDrop: this.handleDrop
        }, others);
        var title = void 0;
        if (typeof children === 'string') {
            title = children;
        }
        if (isSimple) {
            if (!itemProps.disabled) {
                itemProps.onClick = this.handleClick;
            }

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(transfer_item_Item, extends_default()({ title: title }, itemProps));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(transfer_item_CheckboxItem, extends_default()({
            checked: checked,
            onChange: onCheck.bind(this, item.value),
            title: title
        }, itemProps));
    };

    return TransferItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), transfer_item__class.menuChildType = transfer_item_CheckboxItem.menuChildType, transfer_item__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'simple']),
    value: _prop_types_15_8_1_prop_types_default.a.array,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    item: _prop_types_15_8_1_prop_types_default.a.object,
    onCheck: _prop_types_15_8_1_prop_types_default.a.func,
    onClick: _prop_types_15_8_1_prop_types_default.a.func,
    needHighlight: _prop_types_15_8_1_prop_types_default.a.bool,
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    draggable: _prop_types_15_8_1_prop_types_default.a.bool,
    onDragStart: _prop_types_15_8_1_prop_types_default.a.func,
    onDragOver: _prop_types_15_8_1_prop_types_default.a.func,
    onDragEnd: _prop_types_15_8_1_prop_types_default.a.func,
    onDrop: _prop_types_15_8_1_prop_types_default.a.func,
    dragPosition: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
    dragValue: _prop_types_15_8_1_prop_types_default.a.string,
    dragOverValue: _prop_types_15_8_1_prop_types_default.a.string,
    panelPosition: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right'])
}, transfer_item__temp);
transfer_item_TransferItem.displayName = 'TransferItem';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/transfer/view/transfer-panel.js





var transfer_panel__class, transfer_panel__temp;











var transfer_panel_bindCtx = func.bindCtx;
var transfer_panel_TransferPanel = (transfer_panel__temp = transfer_panel__class = function (_Component) {
    inherits_default()(TransferPanel, _Component);

    function TransferPanel(props, context) {
        classCallCheck_default()(this, TransferPanel);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        _this.state = {
            searchedValue: '',
            dragValue: null,
            dragOverValue: null
        };
        _this.footerId = props.baseId ? htmlId.escapeForId(props.baseId + '-panel-footer-' + props.position) : '';
        _this.headerId = props.baseId ? htmlId.escapeForId(props.baseId + '-panel-header-' + props.position) : '';

        transfer_panel_bindCtx(_this, ['handleCheck', 'handleAllCheck', 'handleSearch', 'handleItemDragStart', 'handleItemDragOver', 'handleItemDragEnd', 'handleItemDrop', 'getListDOM']);
        _this.firstRender = true;
        return _this;
    }

    TransferPanel.prototype.componentDidMount = function componentDidMount() {
        this.firstRender = false;
    };

    TransferPanel.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (prevProps.dataSource.length !== this.props.dataSource.length && this.list) {
            if (this.list.scrollTop > 0) {
                this.list.scrollTop = 0;
            }
        }

        this.searched = false;
    };

    TransferPanel.prototype.getListDOM = function getListDOM(ref) {
        this.list = ref;
    };

    TransferPanel.prototype.getListData = function getListData(dataSource, disableHighlight) {
        var _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            position = _props.position,
            mode = _props.mode,
            value = _props.value,
            onMove = _props.onMove,
            disabled = _props.disabled,
            itemRender = _props.itemRender,
            sortable = _props.sortable;
        var _state = this.state,
            dragPosition = _state.dragPosition,
            dragValue = _state.dragValue,
            dragOverValue = _state.dragOverValue;

        return dataSource.map(function (item) {
            var others = 'title' in item ? {
                title: item.title
            } : {};

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(transfer_item_TransferItem, extends_default()({
                key: item.value,
                prefix: prefix,
                mode: mode,
                checked: value.indexOf(item.value) > -1,
                disabled: disabled || item.disabled,
                item: item,
                onCheck: _this2.handleCheck,
                onClick: onMove,
                needHighlight: !_this2.firstRender && !_this2.searched && !disableHighlight,
                itemRender: itemRender,
                draggable: sortable,
                onDragStart: _this2.handleItemDragStart,
                onDragOver: _this2.handleItemDragOver,
                onDragEnd: _this2.handleItemDragEnd,
                onDrop: _this2.handleItemDrop,
                dragPosition: dragPosition,
                dragValue: dragValue,
                dragOverValue: dragOverValue,
                panelPosition: position
            }, others));
        });
    };

    TransferPanel.prototype.handleAllCheck = function handleAllCheck(allChecked) {
        var _props2 = this.props,
            position = _props2.position,
            onChange = _props2.onChange,
            filter = _props2.filter;
        var searchedValue = this.state.searchedValue;


        var newValue = void 0;
        if (allChecked) {
            if (searchedValue) {
                newValue = this.enabledDatasource.filter(function (item) {
                    return filter(searchedValue, item);
                }).map(function (item) {
                    return item.value;
                });
            } else {
                newValue = this.enabledDatasource.map(function (item) {
                    return item.value;
                });
            }
        } else {
            newValue = [];
        }

        onChange && onChange(position, newValue);
    };

    TransferPanel.prototype.handleCheck = function handleCheck(itemValue, checked) {
        var _props3 = this.props,
            position = _props3.position,
            value = _props3.value,
            onChange = _props3.onChange;


        var newValue = [].concat(value);
        var index = value.indexOf(itemValue);
        if (checked && index === -1) {
            newValue.push(itemValue);
        } else if (!checked && index > -1) {
            newValue.splice(index, 1);
        }

        onChange && onChange(position, newValue);
    };

    TransferPanel.prototype.handleSearch = function handleSearch(searchedValue) {
        this.setState({
            searchedValue: searchedValue
        });
        this.searched = true;

        var _props4 = this.props,
            onSearch = _props4.onSearch,
            position = _props4.position;

        onSearch(searchedValue, position);
    };

    TransferPanel.prototype.handleItemDragStart = function handleItemDragStart(position, value) {
        this.setState({
            dragPosition: position,
            dragValue: value
        });
    };

    TransferPanel.prototype.handleItemDragOver = function handleItemDragOver(value) {
        this.setState({
            dragOverValue: value
        });
    };

    TransferPanel.prototype.handleItemDragEnd = function handleItemDragEnd() {
        this.setState({
            dragOverValue: null
        });
    };

    TransferPanel.prototype.handleItemDrop = function handleItemDrop() {
        var _props5;

        this.setState({
            dragOverValue: null
        });

        (_props5 = this.props).onSort.apply(_props5, arguments);
    };

    TransferPanel.prototype.renderHeader = function renderHeader() {
        var _props6 = this.props,
            title = _props6.title,
            prefix = _props6.prefix;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { id: this.headerId, className: prefix + 'transfer-panel-header' },
            title
        );
    };

    TransferPanel.prototype.renderSearch = function renderSearch() {
        var _props7 = this.props,
            prefix = _props7.prefix,
            searchPlaceholder = _props7.searchPlaceholder,
            locale = _props7.locale,
            _props7$searchProps = _props7.searchProps,
            searchProps = _props7$searchProps === undefined ? {} : _props7$searchProps;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(search, extends_default()({
            'aria-labelledby': this.headerId,
            shape: 'simple'
        }, searchProps, {
            className: prefix + 'transfer-panel-search',
            placeholder: searchPlaceholder || locale.searchPlaceholder,
            onChange: this.handleSearch
        }));
    };

    TransferPanel.prototype.renderList = function renderList(dataSource) {
        var _cx;

        var _props8 = this.props,
            prefix = _props8.prefix,
            listClassName = _props8.listClassName,
            listStyle = _props8.listStyle,
            customerList = _props8.customerList,
            useVirtual = _props8.useVirtual;

        var newClassName = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'transfer-panel-list'] = true, _cx[listClassName] = !!listClassName, _cx));

        var customerPanel = customerList && customerList(this.props);
        if (customerPanel) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: newClassName, style: listStyle, ref: this.getListDOM },
                customerPanel
            );
        }

        if (!dataSource.length) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: newClassName, style: listStyle },
                this.renderNotFoundContent()
            );
        }

        if (useVirtual) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: newClassName, style: extends_default()({ position: 'relative' }, listStyle) },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_virtual_list,
                    {
                        itemsRenderer: function itemsRenderer(items, ref) {
                            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                                es_menu,
                                { style: { border: 'none' }, ref: ref },
                                items
                            );
                        }
                    },
                    this.getListData(dataSource, true)
                )
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_menu,
            { className: newClassName, style: listStyle, ref: this.getListDOM },
            this.getListData(dataSource)
        );
    };

    TransferPanel.prototype.renderNotFoundContent = function renderNotFoundContent() {
        var _props9 = this.props,
            prefix = _props9.prefix,
            notFoundContent = _props9.notFoundContent;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'transfer-panel-not-found-container' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'transfer-panel-not-found' },
                notFoundContent
            )
        );
    };

    TransferPanel.prototype.renderFooter = function renderFooter() {
        var _props10 = this.props,
            prefix = _props10.prefix,
            position = _props10.position,
            mode = _props10.mode,
            disabled = _props10.disabled,
            locale = _props10.locale,
            showCheckAll = _props10.showCheckAll;

        if (mode === 'simple') {
            var _cx2;

            var onMoveAll = this.props.onMoveAll;

            var classNames = _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'transfer-panel-move-all'] = true, _cx2[prefix + 'disabled'] = disabled, _cx2));
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'transfer-panel-footer' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'a',
                    { className: classNames, onClick: onMoveAll.bind(this, position === 'left' ? 'right' : 'left') },
                    locale.moveAll
                )
            );
        }

        var _props11 = this.props,
            value = _props11.value,
            showSearch = _props11.showSearch,
            filter = _props11.filter,
            dataSource = _props11.dataSource;
        var searchedValue = this.state.searchedValue;

        var totalCount = dataSource.length;
        var _dataSource = dataSource;
        var checkedCount = value.length;
        var _checkedCount = checkedCount;
        if (showSearch && searchedValue) {
            _dataSource = dataSource.filter(function (item) {
                return filter(searchedValue, item);
            });
            totalCount = _dataSource.length;
            _checkedCount = _dataSource.filter(function (item) {
                return value.includes(item.value);
            }).length;
        }
        var totalEnabledCount = Math.min(totalCount, this.enabledDatasource.length);
        var checked = checkedCount > 0 && checkedCount >= totalEnabledCount;
        var indeterminate = checkedCount > 0 && _checkedCount >= 0 && _checkedCount < totalEnabledCount;
        var items = totalCount > 1 ? locale.items : locale.item;
        var countLabel = checkedCount === 0 ? totalCount + ' ' + items : checkedCount + '/' + totalCount + ' ' + items;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'transfer-panel-footer' },
            showCheckAll && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_checkbox, {
                disabled: disabled,
                checked: checked,
                indeterminate: indeterminate,
                onChange: this.handleAllCheck,
                'aria-labelledby': this.footerId
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'transfer-panel-count', id: this.footerId },
                countLabel
            )
        );
    };

    TransferPanel.prototype.render = function render() {
        var _props12 = this.props,
            prefix = _props12.prefix,
            title = _props12.title,
            showSearch = _props12.showSearch,
            filter = _props12.filter,
            dataSource = _props12.dataSource;
        var searchedValue = this.state.searchedValue;

        var _dataSource = this.props.dataSource;
        this.enabledDatasource = dataSource.filter(function (item) {
            return !item.disabled;
        });
        if (showSearch && searchedValue) {
            _dataSource = dataSource.filter(function (item) {
                return filter(searchedValue, item);
            });
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'transfer-panel' },
            title ? this.renderHeader() : null,
            showSearch ? this.renderSearch() : null,
            this.renderList(_dataSource),
            this.renderFooter()
        );
    };

    return TransferPanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), transfer_panel__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    position: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right']),
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'simple']),
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    value: _prop_types_15_8_1_prop_types_default.a.array,
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    onMove: _prop_types_15_8_1_prop_types_default.a.func,
    onMoveAll: _prop_types_15_8_1_prop_types_default.a.func,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    title: _prop_types_15_8_1_prop_types_default.a.node,
    showSearch: _prop_types_15_8_1_prop_types_default.a.bool,
    searchProps: _prop_types_15_8_1_prop_types_default.a.object,
    filter: _prop_types_15_8_1_prop_types_default.a.func,
    onSearch: _prop_types_15_8_1_prop_types_default.a.func,
    searchPlaceholder: _prop_types_15_8_1_prop_types_default.a.string,
    notFoundContent: _prop_types_15_8_1_prop_types_default.a.node,
    listClassName: _prop_types_15_8_1_prop_types_default.a.string,
    listStyle: _prop_types_15_8_1_prop_types_default.a.object,
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    sortable: _prop_types_15_8_1_prop_types_default.a.bool,
    onSort: _prop_types_15_8_1_prop_types_default.a.func,
    baseId: _prop_types_15_8_1_prop_types_default.a.string,
    customerList: _prop_types_15_8_1_prop_types_default.a.func,
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    showCheckAll: _prop_types_15_8_1_prop_types_default.a.bool
}, transfer_panel__temp);
transfer_panel_TransferPanel.displayName = 'TransferPanel';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/transfer/view/transfer.js





var transfer__class, transfer__temp;













var transfer_config = config_provider.config;
var transfer_bindCtx = func.bindCtx;
var transfer_pickOthers = util_obj.pickOthers;


var getLeftValue = function getLeftValue(dataSource, rightValue) {
    return dataSource.map(function (item) {
        return item.value;
    }).filter(function (itemValue) {
        return rightValue.indexOf(itemValue) === -1;
    });
};

var filterCheckedValue = function filterCheckedValue(left, right, dataSource) {
    var result = {
        left: [],
        right: []
    };

    if (left.length || right.length) {
        var value = dataSource.map(function (item) {
            return item.value;
        });
        value.forEach(function (itemValue) {
            if (left.indexOf(itemValue) > -1) {
                result.left.push(itemValue);
            } else if (right.indexOf(itemValue) > -1) {
                result.right.push(itemValue);
            }
        });
    }

    return result;
};

/**
 * Transfer
 */
var transfer_Transfer = (transfer__temp = transfer__class = function (_Component) {
    inherits_default()(Transfer, _Component);

    Transfer.normalizeValue = function normalizeValue(value) {
        if (value) {
            if (Array.isArray(value)) {
                return value;
            }
            /* istanbul ignore next */
            return [value];
        }

        return [];
    };

    Transfer.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var innerUpdate = prevState.innerUpdate,
            value = prevState.value,
            leftValue = prevState.leftValue;

        if (innerUpdate) {
            return {
                innerUpdate: false,
                value: value,
                leftValue: leftValue
            };
        }
        var st = {};

        var newValue = void 0;
        if ('value' in nextProps) {
            var _value = Transfer.normalizeValue(nextProps.value);
            st.value = _value;
            newValue = _value;
        } else {
            /* istanbul ignore next */
            newValue = prevState.value;
        }
        st.leftValue = getLeftValue(nextProps.dataSource, newValue);

        var _filterCheckedValue = filterCheckedValue(prevState.leftCheckedValue, prevState.rightCheckedValue, nextProps.dataSource),
            left = _filterCheckedValue.left,
            right = _filterCheckedValue.right;

        st.leftCheckedValue = left;
        st.rightCheckedValue = right;

        return st;
    };

    function Transfer(props, context) {
        classCallCheck_default()(this, Transfer);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        var value = props.value,
            defaultValue = props.defaultValue,
            defaultLeftChecked = props.defaultLeftChecked,
            defaultRightChecked = props.defaultRightChecked,
            dataSource = props.dataSource,
            rtl = props.rtl,
            operations = props.operations;

        if (operations.length === 0) {
            operations.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { rtl: rtl, type: 'arrow-right' }));
            operations.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { rtl: rtl, type: 'arrow-left' }));
        }

        var _filterCheckedValue2 = filterCheckedValue(Transfer.normalizeValue(defaultLeftChecked), Transfer.normalizeValue(defaultRightChecked), dataSource),
            left = _filterCheckedValue2.left,
            right = _filterCheckedValue2.right;

        var stValue = Transfer.normalizeValue('value' in props ? value : defaultValue);
        _this.state = {
            value: stValue,
            leftCheckedValue: left,
            rightCheckedValue: right,
            leftValue: getLeftValue(dataSource, stValue)
        };

        transfer_bindCtx(_this, ['handlePanelChange', 'handlePanelSort', 'handleMoveItem', 'handleSimpleMove', 'handleSimpleMoveAll']);
        return _this;
    }

    Transfer.prototype.groupDatasource = function groupDatasource(value, itemValues, dataSource) {
        return value.reduce(function (ret, itemValue) {
            var index = itemValues.indexOf(itemValue);
            if (index > -1) {
                ret.push(dataSource[index]);
            }
            return ret;
        }, []);
    };

    Transfer.prototype.handlePanelChange = function handlePanelChange(position, value) {
        var _setState;

        var _state = this.state,
            leftCheckedValue = _state.leftCheckedValue,
            rightCheckedValue = _state.rightCheckedValue;
        var onSelect = this.props.onSelect;

        var valuePropName = position === 'left' ? 'leftCheckedValue' : 'rightCheckedValue';
        // inner state changed
        this.setState((_setState = {
            innerUpdate: true
        }, _setState[valuePropName] = value, _setState));
        onSelect && onSelect(position === 'left' ? value : leftCheckedValue, position === 'left' ? rightCheckedValue : value, position === 'left' ? 'source' : 'target');
    };

    Transfer.prototype.handlePanelSort = function handlePanelSort(position, dragValue, referenceValue, dragGap) {
        var _this2 = this;

        var _state2 = this.state,
            value = _state2.value,
            leftValue = _state2.leftValue;

        var newValue = position === 'right' ? value : leftValue;
        var currentIndex = newValue.indexOf(dragValue);
        var referenceIndex = newValue.indexOf(referenceValue);
        var expectIndex = dragGap === 'before' ? referenceIndex : referenceIndex + 1;
        if (currentIndex === expectIndex) {
            return;
        }

        newValue.splice(currentIndex, 1);
        if (currentIndex < expectIndex) {
            expectIndex = expectIndex - 1;
        }
        newValue.splice(expectIndex, 0, dragValue);
        this.setState({
            innerUpdate: true,
            value: value,
            leftValue: leftValue
        }, function () {
            _this2.props.onSort(newValue, position);
        });
    };

    Transfer.prototype.handleMoveItem = function handleMoveItem(direction) {
        var _st;

        var rightValue = void 0;
        var newLeftValue = void 0;
        var movedValue = void 0;
        var valuePropName = void 0;

        var _state3 = this.state,
            value = _state3.value,
            leftValue = _state3.leftValue,
            leftCheckedValue = _state3.leftCheckedValue,
            rightCheckedValue = _state3.rightCheckedValue;


        if (direction === 'right') {
            rightValue = leftCheckedValue.concat(value);
            newLeftValue = leftValue.filter(function (itemValue) {
                return leftCheckedValue.indexOf(itemValue) === -1;
            });
            movedValue = leftCheckedValue;
            valuePropName = 'leftCheckedValue';
        } else {
            rightValue = value.filter(function (itemValue) {
                return rightCheckedValue.indexOf(itemValue) === -1;
            });
            newLeftValue = rightCheckedValue.concat(leftValue);
            movedValue = rightCheckedValue;
            valuePropName = 'rightCheckedValue';
        }

        var st = (_st = {}, _st[valuePropName] = [], _st);

        this.setValueState(st, rightValue, newLeftValue, movedValue, direction);
    };

    Transfer.prototype.handleSimpleMove = function handleSimpleMove(direction, v) {
        var rightValue = void 0;
        var newLeftValue = void 0;

        var _state4 = this.state,
            value = _state4.value,
            leftValue = _state4.leftValue;


        if (direction === 'right') {
            rightValue = [v].concat(value);
            newLeftValue = leftValue.filter(function (itemValue) {
                return itemValue !== v;
            });
        } else {
            rightValue = value.filter(function (itemValue) {
                return itemValue !== v;
            });
            newLeftValue = [v].concat(leftValue);
        }

        this.setValueState({}, rightValue, newLeftValue, [v], direction);
    };

    Transfer.prototype.handleSimpleMoveAll = function handleSimpleMoveAll(direction) {
        var rightValue = void 0;
        var newLeftValue = void 0;
        var movedValue = void 0;

        var dataSource = this.props.dataSource;
        var _state5 = this.state,
            value = _state5.value,
            leftValue = _state5.leftValue;

        var disabledValue = dataSource.reduce(function (ret, item) {
            if (item.disabled) {
                ret.push(item.value);
            }

            return ret;
        }, []);

        if (direction === 'right') {
            movedValue = leftValue.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) === -1;
            });
            rightValue = movedValue.concat(value);
            newLeftValue = leftValue.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) > -1;
            });
        } else {
            movedValue = value.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) === -1;
            });
            rightValue = value.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) > -1;
            });
            newLeftValue = movedValue.concat(leftValue);
        }

        this.setValueState({}, rightValue, newLeftValue, movedValue, direction);
    };

    // eslint-disable-next-line max-params


    Transfer.prototype.setValueState = function setValueState(st, rightValue, leftValue, movedValue, direction) {
        var _this3 = this;

        var dataSource = this.props.dataSource;

        var callback = function callback() {
            if ('onChange' in _this3.props) {
                var itemValues = dataSource.map(function (item) {
                    return item.value;
                });
                var rightData = _this3.groupDatasource(rightValue, itemValues, dataSource);
                var leftData = _this3.groupDatasource(leftValue, itemValues, dataSource);
                var movedData = _this3.groupDatasource(movedValue, itemValues, dataSource);

                _this3.props.onChange(rightValue, rightData, {
                    leftValue: leftValue,
                    leftData: leftData,
                    movedValue: movedValue,
                    movedData: movedData,
                    direction: direction
                });
            }
        };

        if (!('value' in this.props)) {
            st.value = rightValue;
            st.leftValue = leftValue;
        }

        if (Object.keys(st).length) {
            this.setState(st, callback);
        } else {
            // eslint-disable-next-line callback-return
            callback();
        }
    };

    Transfer.prototype.renderCenter = function renderCenter() {
        var _props = this.props,
            prefix = _props.prefix,
            mode = _props.mode,
            operations = _props.operations,
            disabled = _props.disabled,
            leftDisabled = _props.leftDisabled,
            rightDisabled = _props.rightDisabled,
            locale = _props.locale;
        var _state6 = this.state,
            leftCheckedValue = _state6.leftCheckedValue,
            rightCheckedValue = _state6.rightCheckedValue;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'transfer-operations' },
            mode === 'simple' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: prefix + 'transfer-move', size: 'large', type: 'switch' }) : [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                {
                    'aria-label': locale.moveToRight,
                    key: 'l2r',
                    className: prefix + 'transfer-operation',
                    type: leftCheckedValue.length ? 'primary' : 'normal',
                    disabled: leftDisabled || disabled || !leftCheckedValue.length,
                    onClick: this.handleMoveItem.bind(this, 'right')
                },
                operations[0]
            ), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                {
                    'aria-label': locale.moveToLeft,
                    key: 'r2l',
                    className: prefix + 'transfer-operation',
                    type: rightCheckedValue.length ? 'primary' : 'normal',
                    disabled: rightDisabled || disabled || !rightCheckedValue.length,
                    onClick: this.handleMoveItem.bind(this, 'left')
                },
                operations[1]
            )]
        );
    };

    Transfer.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            mode = _props2.mode,
            disabled = _props2.disabled,
            className = _props2.className,
            dataSource = _props2.dataSource,
            locale = _props2.locale,
            _props2$showSearch = _props2.showSearch,
            showSearch = _props2$showSearch === undefined ? false : _props2$showSearch,
            _props2$searchProps = _props2.searchProps,
            searchProps = _props2$searchProps === undefined ? {} : _props2$searchProps,
            filter = _props2.filter,
            onSearch = _props2.onSearch,
            leftDisabled = _props2.leftDisabled,
            rightDisabled = _props2.rightDisabled,
            searchPlaceholder = _props2.searchPlaceholder,
            notFoundContent = _props2.notFoundContent,
            titles = _props2.titles,
            listClassName = _props2.listClassName,
            listStyle = _props2.listStyle,
            itemRender = _props2.itemRender,
            sortable = _props2.sortable,
            useVirtual = _props2.useVirtual,
            rtl = _props2.rtl,
            id = _props2.id,
            children = _props2.children,
            showCheckAll = _props2.showCheckAll;
        var _state7 = this.state,
            value = _state7.value,
            leftValue = _state7.leftValue,
            leftCheckedValue = _state7.leftCheckedValue,
            rightCheckedValue = _state7.rightCheckedValue;

        var itemValues = dataSource.map(function (item) {
            return item.value;
        });
        var leftDatasource = this.groupDatasource(leftValue, itemValues, dataSource);
        var rightDatasource = this.groupDatasource(value, itemValues, dataSource);
        var panelProps = {
            prefix: prefix,
            mode: mode,
            locale: locale,
            filter: filter,
            onSearch: onSearch,
            searchPlaceholder: searchPlaceholder,
            listClassName: listClassName,
            listStyle: listStyle,
            itemRender: itemRender,
            onMove: this.handleSimpleMove,
            onMoveAll: this.handleSimpleMoveAll,
            onChange: this.handlePanelChange,
            sortable: sortable,
            useVirtual: useVirtual,
            onSort: this.handlePanelSort,
            baseId: id,
            customerList: children,
            showCheckAll: showCheckAll
        };
        var others = transfer_pickOthers(Object.keys(Transfer.propTypes), this.props);

        if (rtl) {
            others.dir = 'rtl';
        }
        var _showSearch = Array.isArray(showSearch) ? showSearch : [showSearch, showSearch];
        var _searchProps = Array.isArray(searchProps) ? searchProps : [searchProps, searchProps];
        var _notFoundContent = Array.isArray(notFoundContent) ? notFoundContent : [notFoundContent, notFoundContent];
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ className: _classnames_2_3_1_classnames_default()(prefix + 'transfer', className), id: id }, others),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(transfer_panel_TransferPanel, extends_default()({}, panelProps, {
                position: 'left',
                dataSource: leftDatasource,
                disabled: leftDisabled || disabled,
                value: leftCheckedValue,
                showSearch: _showSearch[0],
                searchProps: _searchProps[0],
                notFoundContent: _notFoundContent[0],
                title: titles[0]
            })),
            this.renderCenter(),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(transfer_panel_TransferPanel, extends_default()({}, panelProps, {
                position: 'right',
                dataSource: rightDatasource,
                disabled: rightDisabled || disabled,
                value: rightCheckedValue,
                showSearch: _showSearch[1],
                searchProps: _searchProps[1],
                notFoundContent: _notFoundContent[1],
                title: titles[1]
            }))
        );
    };

    return Transfer;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), transfer__class.contextTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, transfer__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 移动选项模式
     */
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['normal', 'simple']),
    /**
     * 数据源
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object),
    /**
     * （用于受控）当前值
     */
    value: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * （用于非受控）初始值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 值发生改变的时候触发的回调函数
     * @param {Array} value 右面板值
     * @param {Array} data 右面板数据
     * @param {Object} extra 额外参数
     * @param {Array} extra.leftValue 左面板值
     * @param {Array} extra.leftData 左面板数据
     * @param {Array} extra.movedValue 发生移动的值
     * @param {Object} extra.movedData 发生移动的数据
     * @param {String} extra.direction 移动的方向，值为'left'或'right'
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * Item 被选中的时候触发的回调函数
     * @param {Array} sourceSelectedValue 源面板选中的 Item 列表
     * @param {Array} targetSelectedValue 目标面板选中的 Item 列表
     * @param {String} trigger 触发面板，值为'source'或'target'
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用左侧面板
     */
    leftDisabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用右侧面板
     */
    rightDisabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 列表项渲染函数
     * @param {Object} data 数据
     * @return {ReactNode} 列表项内容
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义搜索函数
     * @param {String} searchedValue 搜索的内容
     * @param {Object} data 数据
     * @return {Boolean} 是否匹配到
     * @default 根据 label 属性匹配
     */
    filter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 搜索框输入时触发的回调函数
     * @param {String} searchedValue 搜索的内容
     * @param {String} position 搜索面板的位置
     */
    onSearch: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 搜索框占位符
     */
    searchPlaceholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 左右面板是否显示搜索框
     */
    showSearch: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.bool)]),
    /**
     * 左右面板搜索框配置项，同 Search 组件 props
     */
    searchProps: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object)]),
    /**
     * 列表为空显示内容
     */
    notFoundContent: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.node)]),
    /**
     * 左右面板标题
     */
    titles: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.node),
    /**
     * 向右向左移动按钮显示内容
     * @default [<Icon type="arrow-right" />, <Icon type="arrow-left" />]
     */
    operations: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.node),
    /**
     * 左面板默认选中值
     */
    defaultLeftChecked: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 右面板默认选中值
     */
    defaultRightChecked: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 左右面板列表自定义样式类名
     */
    listClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 左右面板列表自定义样式对象
     */
    listStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否允许拖拽排序
     */
    sortable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 拖拽排序时触发的回调函数
     * @param {Array} value 排序后的值
     * @param {String} position 拖拽的面板位置，值为：left 或 right
     */
    onSort: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义国际化文案对象
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 请设置 id 以保证transfer的可访问性
     */
    id: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 接收 children 自定义渲染列表
     */
    children: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示底部全选 checkbox
     */
    showCheckAll: _prop_types_15_8_1_prop_types_default.a.bool
}), transfer__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    mode: 'normal',
    dataSource: [],
    defaultValue: [],
    disabled: false,
    leftDisabled: false,
    rightDisabled: false,
    showCheckAll: true,
    itemRender: function itemRender(data) {
        return data.label;
    },
    showSearch: false,
    filter: function filter(searchedValue, data) {
        var labelString = '';
        var loop = function loop(arg) {
            if (external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(arg) && arg.props.children) {
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.forEach(arg.props.children, loop);
            } else if (typeof arg === 'string') {
                labelString += arg;
            }
        };
        loop(data.label);

        return labelString.length >= searchedValue.length && labelString.indexOf(searchedValue) > -1;
    },
    onSearch: function onSearch() {},
    notFoundContent: 'Not Found',
    titles: [],
    operations: [],
    defaultLeftChecked: [],
    defaultRightChecked: [],
    sortable: false,
    onSort: function onSort() {},
    locale: locale_zh_cn.Transfer
}, transfer__temp);
transfer_Transfer.displayName = 'Transfer';


/* harmony default export */ var transfer = (transfer_config(Object(react_lifecycles_compat_es["polyfill"])(transfer_Transfer)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/transfer/index.js


/* harmony default export */ var es_transfer = (transfer);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree/view/tree-node-input.js






var tree_node_input__class, tree_node_input__temp;






var tree_node_input_TreeNodeInput = (tree_node_input__temp = tree_node_input__class = function (_Component) {
    inherits_default()(TreeNodeInput, _Component);

    function TreeNodeInput() {
        classCallCheck_default()(this, TreeNodeInput);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    TreeNodeInput.prototype.componentDidMount = function componentDidMount() {
        var inputWrapperNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this);
        inputWrapperNode.querySelector('input').focus();
    };

    TreeNodeInput.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            others = objectWithoutProperties_default()(_props, ['prefix']);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({
            size: 'small',
            className: prefix + 'tree-node-input'
        }, others));
    };

    return TreeNodeInput;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tree_node_input__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, tree_node_input__temp);
tree_node_input_TreeNodeInput.displayName = 'TreeNodeInput';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree/view/tree-node-indent.js




var tree_node_indent__class, tree_node_indent__temp;





var tree_node_indent_TreeNodeIndent = (tree_node_indent__temp = tree_node_indent__class = function (_Component) {
    inherits_default()(TreeNodeIndent, _Component);

    function TreeNodeIndent() {
        classCallCheck_default()(this, TreeNodeIndent);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    TreeNodeIndent.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            level = _props.level,
            isLastChild = _props.isLastChild,
            showLine = _props.showLine;

        var indents = [];

        for (var i = 1; i < level; i++) {
            var _cx;

            var classNames = _classnames_2_3_1_classnames_default()(prefix + 'tree-node-indent-unit', (_cx = {}, _cx[prefix + 'line'] = !isLastChild[i - 1] && showLine, _cx));

            indents.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: classNames, key: i - 1 }));
        }

        return indents;
    };

    return TreeNodeIndent;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tree_node_indent__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    level: _prop_types_15_8_1_prop_types_default.a.number,
    isLastChild: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.bool),
    showLine: _prop_types_15_8_1_prop_types_default.a.bool
}, tree_node_indent__class.defaultProps = {
    isLastChild: []
}, tree_node_indent__temp);
tree_node_indent_TreeNodeIndent.displayName = 'TreeNodeIndent';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree/view/tree-node.js






var tree_node__class, tree_node__temp;













var tree_node_Expand = es_animate.Expand;
var tree_node_bindCtx = func.bindCtx;
var tree_node_isPromise = util_obj.isPromise,
    tree_node_pickOthers = util_obj.pickOthers,
    tree_node_pickAttrsWith = util_obj.pickAttrsWith;

var isRoot = function isRoot(pos) {
    return (/^0-(\d)+$/.test(pos)
    );
};

/**
 * Tree.Node
 */
var tree_node_TreeNode = (tree_node__temp = tree_node__class = function (_Component) {
    inherits_default()(TreeNode, _Component);

    function TreeNode(props) {
        classCallCheck_default()(this, TreeNode);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.saveRef = function (ref) {
            _this.nodeEl = ref;
        };

        _this.saveLabelWrapperRef = function (ref) {
            _this.labelWrapperEl = ref;
        };

        _this.state = {
            editing: false,
            loading: false,
            label: props.label
        };

        tree_node_bindCtx(_this, ['handleExpand', 'handleSelect', 'handleCheck', 'handleEditStart', 'handleEditFinish', 'handleRightClick', 'handleDragStart', 'handleDragEnter', 'handleDragOver', 'handleDragLeave', 'handleDragEnd', 'handleDrop', 'handleInputKeyDown', 'handleKeyDown']);
        return _this;
    }

    TreeNode.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        if ('label' in props) {
            return {
                label: props.label
            };
        }

        return null;
    };

    TreeNode.prototype.componentDidMount = function componentDidMount() {
        this.itemNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(this.nodeEl);
        this.setFocus();
    };

    TreeNode.prototype.componentDidUpdate = function componentDidUpdate() {
        this.setFocus();
    };

    TreeNode.prototype.getParentNode = function getParentNode() {
        return this.props.root.getParentNode(this.props.pos);
    };

    TreeNode.prototype.focusable = function focusable() {
        var _props = this.props,
            root = _props.root,
            disabled = _props.disabled;
        var focusable = root.props.focusable;

        return focusable && !disabled;
    };

    TreeNode.prototype.getFocused = function getFocused() {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root;
        var focusedKey = root.state.focusedKey;

        return focusedKey === _key;
    };

    TreeNode.prototype.setFocus = function setFocus() {
        var focused = this.getFocused();
        if (focused && this.focusable()) {
            this.itemNode.focus({ preventScroll: true });
        }
    };

    TreeNode.prototype.handleExpand = function handleExpand(e) {
        var _this2 = this;

        var _props3 = this.props,
            root = _props3.root,
            expanded = _props3.expanded,
            eventKey = _props3.eventKey;


        if (root.props.isNodeBlock) {
            e.stopPropagation();
        }

        var loading = this.state.loading;

        if (loading) {
            return;
        }

        var returnValue = root.handleExpand(!expanded, eventKey, this);
        if (tree_node_isPromise(returnValue)) {
            this.setLoading(true);
            return returnValue.then(function () {
                _this2.setLoading(false);
            }, function () {
                _this2.setLoading(false);
            });
        }
    };

    TreeNode.prototype.setLoading = function setLoading(loading) {
        this.setState({ loading: loading });
    };

    TreeNode.prototype.handleSelect = function handleSelect(e) {
        e.preventDefault();

        var _props4 = this.props,
            root = _props4.root,
            selected = _props4.selected,
            eventKey = _props4.eventKey;

        root.handleSelect(!selected, eventKey, this, e);
    };

    TreeNode.prototype.handleCheck = function handleCheck() {
        var _props5 = this.props,
            root = _props5.root,
            checked = _props5.checked,
            eventKey = _props5.eventKey;

        root.handleCheck(!checked, eventKey, this);
    };

    TreeNode.prototype.handleEditStart = function handleEditStart(e) {
        e.preventDefault();

        this.setState({
            editing: true
        });
    };

    TreeNode.prototype.handleEditFinish = function handleEditFinish(e) {
        var label = e.target.value;

        this.setState({
            editing: false
        });

        var _props6 = this.props,
            root = _props6.root,
            eventKey = _props6.eventKey;

        root.props.onEditFinish(eventKey, label, this);
    };

    TreeNode.prototype.handleRightClick = function handleRightClick(e) {
        this.props.root.props.onRightClick({
            event: e,
            node: this
        });
    };

    TreeNode.prototype.handleDragStart = function handleDragStart(e) {
        e.stopPropagation();

        this.props.root.handleDragStart(e, this);
    };

    TreeNode.prototype.handleDragEnter = function handleDragEnter(e) {
        e.preventDefault();
        e.stopPropagation();

        this.props.root.handleDragEnter(e, this);
    };

    TreeNode.prototype.handleDragOver = function handleDragOver(e) {
        if (this.props.root.canDrop(this)) {
            e.preventDefault();

            this.props.root.handleDragOver(e, this);
        }
        e.stopPropagation();
    };

    TreeNode.prototype.handleDragLeave = function handleDragLeave(e) {
        e.stopPropagation();

        this.props.root.handleDragLeave(e, this);
    };

    TreeNode.prototype.handleDragEnd = function handleDragEnd(e) {
        e.stopPropagation();

        this.props.root.handleDragEnd(e, this);
    };

    TreeNode.prototype.handleDrop = function handleDrop(e) {
        e.preventDefault();
        e.stopPropagation();

        this.props.root.handleDrop(e, this);
    };

    TreeNode.prototype.handleInputKeyDown = function handleInputKeyDown(e) {
        if (e.keyCode === KEYCODE.ENTER) {
            this.handleEditFinish(e);
        }
        e.stopPropagation();
    };

    TreeNode.prototype.handleKeyDown = function handleKeyDown(e) {
        var _props7 = this.props,
            _key = _props7._key,
            root = _props7.root,
            disabled = _props7.disabled;

        if (disabled) {
            return;
        }

        if (this.focusable()) {
            root.handleItemKeyDown(_key, this, e);
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    TreeNode.prototype.addCallbacks = function addCallbacks(props) {
        var _props8 = this.props,
            disabled = _props8.disabled,
            root = _props8.root;

        if (!disabled) {
            var selectable = typeof this.props.selectable !== 'undefined' ? this.props.selectable : root.props.selectable;
            if (selectable) {
                props.onClick = this.handleSelect;
            }
            var editable = typeof this.props.editable !== 'undefined' ? this.props.editable : root.props.editable;
            if (editable) {
                props.onDoubleClick = this.handleEditStart;
            }
            var draggable = typeof this.props.draggable !== 'undefined' ? this.props.draggable : root.props.draggable;
            if (draggable) {
                props.draggable = true;
                props.onDragStart = this.handleDragStart;
                props.onDragEnd = this.handleDragEnd;
            }
            props.onContextMenu = this.handleRightClick;
        }
    };

    TreeNode.prototype.renderSwitcher = function renderSwitcher(showLine) {
        var _cx, _cx2;

        var _props9 = this.props,
            prefix = _props9.prefix,
            disabled = _props9.disabled,
            expanded = _props9.expanded,
            root = _props9.root;
        var loadData = root.props.loadData;
        var loading = this.state.loading;


        var lineState = showLine ? 'line' : 'noline';
        var className = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'tree-switcher'] = true, _cx['' + prefix + lineState] = !loading, _cx[prefix + 'close'] = !loading && !showLine && !expanded, _cx[prefix + 'disabled'] = disabled, _cx[prefix + 'loading'] = loading, _cx[prefix + 'loading-' + lineState] = loading, _cx));
        var iconType = loadData && loading ? 'loading' : showLine ? expanded ? 'minus' : 'add' : 'arrow-down';
        var iconCls = _classnames_2_3_1_classnames_default()((_cx2 = {}, _cx2[prefix + 'tree-switcher-icon'] = true, _cx2[prefix + 'tree-fold-icon'] = iconType === 'arrow-down', _cx2[prefix + 'tree-switcher-fold-icon'] = showLine && !expanded, _cx2[prefix + 'tree-switcher-unfold-icon'] = showLine && expanded, _cx2));

        return (
            // eslint-disable-next-line jsx-a11y/click-events-have-key-events
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: className, onClick: disabled ? null : this.handleExpand },
                this.renderRightAngle(showLine),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { className: iconCls, type: iconType })
            )
        );
    };

    TreeNode.prototype.renderNoopSwitcher = function renderNoopSwitcher(showLine) {
        var _cx3;

        var _props10 = this.props,
            prefix = _props10.prefix,
            pos = _props10.pos;


        var lineState = showLine ? 'line' : 'noline';
        var className = _classnames_2_3_1_classnames_default()((_cx3 = {}, _cx3[prefix + 'tree-switcher'] = true, _cx3[prefix + 'noop-' + lineState] = true, _cx3[prefix + 'noop-line-noroot'] = showLine && !isRoot(pos), _cx3));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            { className: className },
            this.renderRightAngle(showLine)
        );
    };

    TreeNode.prototype.renderRightAngle = function renderRightAngle(showLine) {
        var _props11 = this.props,
            prefix = _props11.prefix,
            pos = _props11.pos;


        return showLine && !isRoot(pos) ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { className: prefix + 'tree-right-angle' }) : null;
    };

    TreeNode.prototype.renderCheckbox = function renderCheckbox() {
        var _props12 = this.props,
            checked = _props12.checked,
            indeterminate = _props12.indeterminate,
            disabled = _props12.disabled,
            checkboxDisabled = _props12.checkboxDisabled;
        var label = this.state.label;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_checkbox, {
            'aria-label': typeof label === 'string' ? label : null,
            checked: checked,
            tabIndex: -1,
            indeterminate: indeterminate,
            disabled: disabled || checkboxDisabled,
            onChange: this.handleCheck
        });
    };

    TreeNode.prototype.renderLabel = function renderLabel() {
        var _cx4;

        var _props13 = this.props,
            prefix = _props13.prefix,
            root = _props13.root,
            disabled = _props13.disabled,
            icon = _props13.icon;
        var isNodeBlock = root.props.isNodeBlock;
        var label = this.state.label;

        var selectable = typeof this.props.selectable !== 'undefined' ? this.props.selectable : root.props.selectable;
        var labelProps = {
            className: _classnames_2_3_1_classnames_default()((_cx4 = {}, _cx4[prefix + 'tree-node-label'] = true, _cx4[prefix + 'tree-node-label-selectable'] = selectable && !disabled, _cx4))
        };

        if (!isNodeBlock) {
            this.addCallbacks(labelProps);
        }

        var iconEl = typeof icon === 'string' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: icon }) : icon;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'tree-node-label-wrapper', ref: this.saveLabelWrapperRef },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                labelProps,
                iconEl,
                label
            )
        );
    };

    TreeNode.prototype.renderInput = function renderInput() {
        var prefix = this.props.prefix;
        var label = this.state.label;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: prefix + 'tree-node-label-wrapper', ref: this.saveLabelWrapperRef },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(tree_node_input_TreeNodeInput, {
                prefix: prefix,
                defaultValue: label,
                onBlur: this.handleEditFinish,
                onKeyDown: this.handleInputKeyDown
            })
        );
    };

    TreeNode.prototype.renderChildTree = function renderChildTree() {
        var _props14 = this.props,
            prefix = _props14.prefix,
            children = _props14.children;


        return children && this.addAnimationIfNeeded(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'ul',
            { role: 'group', className: prefix + 'tree-child-tree' },
            children
        ));
    };

    TreeNode.prototype.addAnimationIfNeeded = function addAnimationIfNeeded(node) {
        var root = this.props.root;


        return root && root.props.animation ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            tree_node_Expand,
            { animationAppear: false },
            node
        ) : node;
    };

    TreeNode.prototype.render = function render() {
        var _cx5, _cx6, _ref;

        var _props15 = this.props,
            prefix = _props15.prefix,
            rtl = _props15.rtl,
            className = _props15.className,
            isLeaf = _props15.isLeaf,
            level = _props15.level,
            root = _props15.root,
            selected = _props15.selected,
            checked = _props15.checked,
            disabled = _props15.disabled,
            dragOver = _props15.dragOver,
            dragOverGapTop = _props15.dragOverGapTop,
            dragOverGapBottom = _props15.dragOverGapBottom,
            _key = _props15._key,
            size = _props15.size,
            posinset = _props15.posinset,
            children = _props15.children,
            expanded = _props15.expanded,
            isLastChild = _props15.isLastChild;
        var _root$props = root.props,
            isNodeBlock = _root$props.isNodeBlock,
            showLine = _root$props.showLine,
            rootDraggable = _root$props.draggable,
            filterTreeNode = _root$props.filterTreeNode;
        var label = this.state.label;


        var ARIA_PREFIX = 'aria-';
        var ariaProps = tree_node_pickAttrsWith(this.props, ARIA_PREFIX);
        var others = tree_node_pickOthers(Object.keys(TreeNode.propTypes), this.props);

        var hasRenderChildNodes = root && root.props.renderChildNodes;
        var shouldShouldLine = !isNodeBlock && showLine && !hasRenderChildNodes;
        var useVirtual = root && root.props.useVirtual;

        // remove aria keys
        Object.keys(others).forEach(function (key) {
            if (key.match(ARIA_PREFIX)) {
                delete others[key];
            }
        });

        if (rootDraggable) {
            others.onDragEnter = this.handleDragEnter;
            others.onDragOver = this.handleDragOver;
            others.onDragLeave = this.handleDragLeave;
            others.onDrop = this.handleDrop;
        }
        var newClassName = _classnames_2_3_1_classnames_default()((_cx5 = {}, _cx5[prefix + 'tree-node'] = true, _cx5[prefix + 'filtered'] = !!filterTreeNode && !!root.filterTreeNode(this), _cx5[className] = !!className, _cx5));

        var innerClassName = _classnames_2_3_1_classnames_default()((_cx6 = {}, _cx6[prefix + 'tree-node-inner'] = true, _cx6[prefix + 'selected'] = selected, _cx6[prefix + 'disabled'] = disabled, _cx6[prefix + 'drag-over'] = dragOver, _cx6[prefix + 'drag-over-gap-top'] = dragOverGapTop, _cx6[prefix + 'drag-over-gap-bottom'] = dragOverGapBottom, _cx6));

        var defaultPaddingLeft = (typeof isNodeBlock === 'undefined' ? 'undefined' : typeof_default()(isNodeBlock)) === 'object' ? parseInt(isNodeBlock.defaultPaddingLeft || 0) : 0;
        var paddingLeftProp = rtl ? 'paddingRight' : 'paddingLeft';

        var indent = (typeof isNodeBlock === 'undefined' ? 'undefined' : typeof_default()(isNodeBlock)) === 'object' ? parseInt(isNodeBlock.indent || 24) : 24;
        var innerStyle = isNodeBlock ? (_ref = {}, _ref[paddingLeftProp] = (useVirtual ? 0 : indent * (level - 1)) + defaultPaddingLeft + 'px', _ref) : null;

        var innerProps = extends_default()({
            className: innerClassName,
            style: innerStyle,
            onKeyDown: this.handleKeyDown
        }, ariaProps);

        if (isNodeBlock) {
            this.addCallbacks(innerProps);
        }

        var checkable = typeof this.props.checkable !== 'undefined' ? this.props.checkable : root.props.checkable;

        var editing = this.state.editing;


        innerProps.tabIndex = root.tabbableKey === _key ? '0' : '-1';

        if (rtl) {
            others.dir = 'rtl';
        }

        return this.addAnimationIfNeeded(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            extends_default()({ role: 'presentation', className: newClassName }, others),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({
                    ref: this.saveRef,
                    role: 'treeitem',
                    'aria-selected': selected,
                    'aria-disabled': disabled,
                    'aria-checked': checked,
                    'aria-expanded': !isLeaf,
                    'aria-label': typeof label === 'string' ? label : null,
                    'aria-level': level,
                    'aria-posinset': posinset,
                    'aria-setsize': size
                }, innerProps),
                useVirtual && !hasRenderChildNodes && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(tree_node_indent_TreeNodeIndent, {
                    prefix: prefix,
                    level: level,
                    isLastChild: isLastChild,
                    showLine: shouldShouldLine
                }),
                isLeaf ? this.renderNoopSwitcher(shouldShouldLine) : this.renderSwitcher(shouldShouldLine),
                checkable ? this.renderCheckbox() : null,
                editing ? this.renderInput() : this.renderLabel()
            ),
            expanded && (hasRenderChildNodes ? children : this.renderChildTree(children))
        ));
    };

    return TreeNode;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tree_node__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    _key: _prop_types_15_8_1_prop_types_default.a.string,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 树节点
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 节点文本内容
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 单独设置是否支持选中，覆盖 Tree 的 selectable
     */
    selectable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 单独设置是否出现复选框，覆盖 Tree 的 checkable
     */
    checkable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 单独设置是否支持编辑，覆盖 Tree 的 editable
     */
    editable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 单独设置是否支持拖拽，覆盖 Tree 的 draggable
     */
    draggable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁止节点响应
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁止勾选节点复选框
     */
    checkboxDisabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否是叶子节点，设置loadData时生效
     */
    isLeaf: _prop_types_15_8_1_prop_types_default.a.bool,
    root: _prop_types_15_8_1_prop_types_default.a.object,
    eventKey: _prop_types_15_8_1_prop_types_default.a.string,
    pos: _prop_types_15_8_1_prop_types_default.a.string,
    expanded: _prop_types_15_8_1_prop_types_default.a.bool,
    selected: _prop_types_15_8_1_prop_types_default.a.bool,
    checked: _prop_types_15_8_1_prop_types_default.a.bool,
    indeterminate: _prop_types_15_8_1_prop_types_default.a.bool,
    dragOver: _prop_types_15_8_1_prop_types_default.a.bool,
    dragOverGapTop: _prop_types_15_8_1_prop_types_default.a.bool,
    dragOverGapBottom: _prop_types_15_8_1_prop_types_default.a.bool,
    parentNode: _prop_types_15_8_1_prop_types_default.a.object,
    onKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    // 无障碍化属性：aria-setsize
    size: _prop_types_15_8_1_prop_types_default.a.number,
    // 无障碍化属性：aria-posinset
    posinset: _prop_types_15_8_1_prop_types_default.a.number,
    // 是否是最后一个子节点，数组类型，包含对祖先节点的判断
    isLastChild: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.bool),
    /**
     * 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type="icon type" />`
     * @version 1.21
     */
    icon: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.node])
}, tree_node__class.defaultProps = {
    label: '---',
    rtl: false,
    disabled: false,
    checkboxDisabled: false,
    size: 1,
    posinset: 1
}, tree_node__temp);
tree_node_TreeNode.displayName = 'TreeNode';


/* harmony default export */ var tree_node = (Object(react_lifecycles_compat_es["polyfill"])(tree_node_TreeNode));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree/view/util.js




/* eslint-disable valid-jsdoc */
function util_normalizeToArray(keys) {
    if (keys !== undefined && keys !== null) {
        if (Array.isArray(keys)) {
            return [].concat(keys);
        }

        return [keys];
    }

    return [];
}

/**
 * 判断子节点是否是选中状态，如果 checkable={false} 则向下递归，
 * @param {Node} child
 * @param {Array} checkedKeys
 */
function util_isNodeChecked(node, checkedKeys) {
    if (node.disabled || node.checkboxDisabled) return true;
    /* istanbul ignore next */
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(function (c) {
            return util_isNodeChecked(c, checkedKeys);
        });
    }
    return checkedKeys.indexOf(node.key) > -1;
}

/**
 * 遍历所有可用的子节点
 * @param {Node}
 * @param {Function} callback
 */
function util_forEachEnableNode(node) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

    if (node.disabled || node.checkboxDisabled) return;
    // eslint-disable-next-line callback-return
    callback(node);
    if (node.children && node.children.length > 0) {
        node.children.forEach(function (child) {
            return util_forEachEnableNode(child, callback);
        });
    }
}
/**
 * 判断节点是否禁用checked
 * @param {Node} node
 * @returns {Boolean}
 */
function util_isNodeDisabledChecked(node) {
    if (node.disabled || node.checkboxDisabled) return true;
    /* istanbul ignore next */
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(util_isNodeDisabledChecked);
    }

    return false;
}

/**
 * 递归获取一个 checkable = {true} 的父节点，当 checkable={false} 时继续往上查找
 * @param {Node} node
 * @param {Map} _p2n
 * @return {Node}
 */
function util_getCheckableParentNode(node, _p2n) {
    var parentPos = node.pos.split(['-']);
    if (parentPos.length === 2) return node;
    parentPos.splice(parentPos.length - 1, 1);
    parentPos = parentPos.join('-');
    var parentNode = _p2n[parentPos];
    if (parentNode.disabled || parentNode.checkboxDisabled) return false;
    /* istanbul ignore next */
    if (parentNode.checkable === false) {
        return util_getCheckableParentNode(parentNode, _p2n);
    }

    return parentNode;
}
/**
 * 过滤子节点
 * @param {Array} keys
 * @param {Object} _k2n
 */
function filterChildKey(keys, _k2n, _p2n) {
    var newKeys = [];
    keys.forEach(function (key) {
        var node = util_getCheckableParentNode(_k2n[key], _p2n);
        if (!node || node.checkable === false || node === _k2n[key] || keys.indexOf(node.key) === -1) {
            newKeys.push(key);
        }
    });
    return newKeys;
}

function filterParentKey(keys, _k2n) {
    var newKeys = [];

    for (var i = 0; i < keys.length; i++) {
        var node = _k2n[keys[i]];
        if (!node.children || node.children.length === 0 || node.children.every(util_isNodeDisabledChecked)) {
            newKeys.push(keys[i]);
        }
    }

    return newKeys;
}

function util_isDescendantOrSelf(currentPos, targetPos) {
    if (!currentPos || !targetPos) {
        return false;
    }

    var currentNums = currentPos.split('-');
    var targetNums = targetPos.split('-');

    return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}

function util_isSiblingOrSelf(currentPos, targetPos) {
    var currentNums = currentPos.split('-').slice(0, -1);
    var targetNums = targetPos.split('-').slice(0, -1);

    return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}

// eslint-disable-next-line max-statements
function getAllCheckedKeys(checkedKeys, _k2n, _p2n) {
    checkedKeys = util_normalizeToArray(checkedKeys);
    var filteredKeys = checkedKeys.filter(function (key) {
        return !!_k2n[key];
    });
    var flatKeys = [].concat(filterChildKey(filteredKeys, _k2n, _p2n).filter(function (key) {
        return !(_k2n[key].disabled || _k2n[key].checkboxDisabled);
    }), filteredKeys.filter(function (key) {
        return _k2n[key].disabled || _k2n[key].checkboxDisabled;
    }));
    var removeKey = function removeKey(child) {
        if (child.disabled || child.checkboxDisabled) return;
        if (child.checkable === false && child.children && child.children.length > 0) {
            return child.children.forEach(removeKey);
        }
        flatKeys.splice(flatKeys.indexOf(child.key), 1);
    };

    var addParentKey = function addParentKey(i, parent) {
        return flatKeys.splice(i, 0, parent.key);
    };

    // 所有 child nodes 选中时，取 parent node，删除所有 child nodes
    var keys = [].concat(flatKeys);
    for (var i = 0; i < keys.length; i++) {
        var pos = _k2n[keys[i]].pos;
        var nums = pos.split('-');
        if (nums.length === 2) {
            continue;
        }
        for (var j = nums.length - 2; j > 0; j--) {
            var parentPos = nums.slice(0, j + 1).join('-');
            var parent = _p2n[parentPos];
            if (parent.checkable === false || parent.disabled || parent.checkboxDisabled) continue;
            var parentChecked = parent.children.every(function (child) {
                return util_isNodeChecked(child, flatKeys);
            });
            if (parentChecked) {
                parent.children.forEach(removeKey);
                addParentKey(i, parent);
            } else {
                break;
            }
        }
    }

    // 重新选中所有 child nodes
    var newKeys = new Set();
    flatKeys.forEach(function (key) {
        if (_k2n[key].disabled || _k2n[key].checkboxDisabled) {
            newKeys.add(key);
            return;
        }
        util_forEachEnableNode(_k2n[key], function (node) {
            if (node.checkable === false) return;
            newKeys.add(node.key);
        });
    });

    return Array.from(newKeys);
}

/**
 * Convert children of Tree into DataSource
 * @param  {React.ReactNode} children
 * @return {Array}
 */
function convertChildren2Data(children) {
    function convert(treeNodes) {
        treeNodes = util_normalizeToArray(treeNodes);

        return treeNodes.map(function (node) {
            if (node.type && node.type !== tree_node && node.type.target !== tree_node) {
                // 为了兼容之前的实现 保留非法节点
                return {
                    illegalFlag: true,
                    node: node
                };
            }

            var key = node.key,
                _node$props = node.props,
                children = _node$props.children,
                rest = objectWithoutProperties_default()(_node$props, ['children']);

            var nodeData = extends_default()({ key: key }, rest);

            if (children && !(Array.isArray(children) && !children.length)) {
                nodeData.children = convert(children);
            }

            return nodeData;
        }).filter(function (treeNodeData) {
            return treeNodeData;
        });
    }
    return convert(children);
}

/**
 * get all descendant`s keys of current node
 * @param  {Object} nodeData
 * @param  {Object} p2n
 * @return {Array}
 */
function getAllDescendantKeys(nodeData, p2n) {
    var posList = nodeData.pos.split('-');
    var keys = [];
    var pos = posList[0];

    for (var i = 1; i < posList.length - 1; i++) {
        pos = [pos, posList[i]].join('-');
        keys.push(p2n[pos].key);
    }

    return keys;
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree/view/tree.js






var tree__class, tree__temp;

/* eslint-disable max-depth */










var tree_bindCtx = func.bindCtx,
    view_tree_noop = func.noop;
var tree_getOffset = util_dom.getOffset;
var tree_pickOthers = util_obj.pickOthers,
    tree_pickProps = util_obj.pickProps,
    tree_isPlainObject = util_obj.isPlainObject;


var treeNodeProps = ['key', 'label', 'selectable', 'checkable', 'editable', 'draggable', 'disabled', 'checkboxDisabled', 'isLeaf', 'icon'];

var tree_getExpandedKeys = function getExpandedKeys(props, willReceiveProps, _k2n, _p2n) {
    var expandedKeys = void 0;

    if (!willReceiveProps && props.defaultExpandAll) {
        expandedKeys = Object.keys(_k2n).filter(function (key) {
            var children = _k2n[key].children;
            return children && children.length;
        });
    } else {
        expandedKeys = 'expandedKeys' in props ? props.expandedKeys : willReceiveProps ? [] : props.defaultExpandedKeys;
        expandedKeys = util_normalizeToArray(expandedKeys);

        if (props.autoExpandParent) {
            var newExpandedKeys = [];

            var expandedPoss = expandedKeys.reduce(function (ret, key) {
                var pos = _k2n[key] && _k2n[key].pos;
                if (pos) {
                    ret.push(pos);
                    newExpandedKeys.push(key);
                }
                return ret;
            }, []);

            expandedPoss.forEach(function (pos) {
                var nums = pos.split('-');
                if (nums.length === 2) {
                    return;
                }
                for (var i = 1; i <= nums.length - 2; i++) {
                    var ancestorPos = nums.slice(0, i + 1).join('-');
                    var ancestorKey = _p2n[ancestorPos].key;
                    if (newExpandedKeys.indexOf(ancestorKey) === -1) {
                        newExpandedKeys.push(ancestorKey);
                    }
                }
            });

            return newExpandedKeys;
        }
    }

    return expandedKeys;
};

var tree_getSelectedKeys = function getSelectedKeys(props, willReceiveProps, _k2n) {
    var selectedKeys = 'selectedKeys' in props ? props.selectedKeys : willReceiveProps ? [] : props.defaultSelectedKeys;
    selectedKeys = util_normalizeToArray(selectedKeys);

    return selectedKeys.filter(function (key) {
        return _k2n[key];
    });
};

var tree_getIndeterminateKeys = function getIndeterminateKeys(checkedKeys, checkStrictly, _k2n, _p2n) {
    if (checkStrictly) {
        return [];
    }

    var indeterminateKeys = [];

    var poss = filterChildKey(checkedKeys.filter(function (key) {
        return !!_k2n[key];
    }).filter(function (key) {
        return !_k2n[key].disabled && !_k2n[key].checkboxDisabled && _k2n[key].checkable !== false;
    }), _k2n, _p2n).map(function (key) {
        return _k2n[key].pos;
    });

    poss.forEach(function (pos) {
        var nums = pos.split('-');
        for (var i = nums.length; i > 2; i--) {
            var parentPos = nums.slice(0, i - 1).join('-');
            var parent = _p2n[parentPos];
            if (parent.disabled || parent.checkboxDisabled) break;
            var parentKey = parent.key;
            if (indeterminateKeys.indexOf(parentKey) === -1) {
                indeterminateKeys.push(parentKey);
            }
        }
    });

    return indeterminateKeys;
};

var tree_getCheckedKeys = function getCheckedKeys(props, willReceiveProps, _k2n, _p2n) {
    var checkedKeys = props.defaultCheckedKeys;
    var indeterminateKeys = void 0;

    if ('checkedKeys' in props) {
        checkedKeys = props.checkedKeys;
    } else if (willReceiveProps) {
        checkedKeys = [];
    }

    var checkStrictly = props.checkStrictly; // TODO TEST

    if (checkStrictly) {
        if (tree_isPlainObject(checkedKeys)) {
            var _checkedKeys = checkedKeys,
                checked = _checkedKeys.checked,
                indeterminate = _checkedKeys.indeterminate;

            checkedKeys = util_normalizeToArray(checked);
            indeterminateKeys = util_normalizeToArray(indeterminate);
        } else {
            checkedKeys = util_normalizeToArray(checkedKeys);
        }

        checkedKeys = checkedKeys.filter(function (key) {
            return !!_k2n[key];
        });
    } else {
        checkedKeys = getAllCheckedKeys(checkedKeys, _k2n, _p2n);
        checkedKeys = checkedKeys.filter(function (key) {
            return !!_k2n[key];
        });

        indeterminateKeys = tree_getIndeterminateKeys(checkedKeys, props.checkStrictly, _k2n, _p2n);
    }

    return { checkedKeys: checkedKeys, indeterminateKeys: indeterminateKeys };
};

var tree_preHandleData = function preHandleData(dataSource, props) {
    var k2n = {};
    var p2n = {};
    var keyList = [];

    var drill = function drill() {
        var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
        var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';
        var parent = arguments[3];
        return data.map(function (item, index) {
            // 为了兼容之前的实现 保留非法节点
            if (item.illegalFlag) {
                return item;
            }

            var children = item.children;

            var pos = prefix + '-' + index;
            var key = item.key;


            item.pos = pos;
            item.level = level;

            // 判断为叶子节点
            // - 指定isLeaf属性
            // - loadData模式下 没有指定isLeaf为true
            // - 存在children元素
            if (!('isLeaf' in item)) {
                item.isLeaf = !(children && children.length || props.loadData);
            }

            item.isLastChild = parent ? [].concat(parent.isLastChild || [], index === data.length - 1) : [];

            if (key === undefined || key === null) {
                item.key = key = pos;
            }
            keyList.push(key);
            !item.isLeaf && drill(children, level + 1, pos, item);

            k2n[key] = p2n[pos] = extends_default()({}, item);

            return item;
        });
    };

    return { dataSource: drill(dataSource), k2n: k2n, p2n: p2n, keyList: keyList };
};

var tree_preHandleChildren = function preHandleChildren(props) {
    var k2n = {};
    var p2n = {};
    var keyList = [];

    var loop = function loop(children) {
        var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
        var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
        return external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (node, index) {
            if (!external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(node)) {
                return;
            }
            var pos = prefix + '-' + index;
            var key = node.key;


            key = key || pos;

            var item = extends_default()({}, node.props, { key: key, pos: pos, level: level });
            var children = node.props.children;

            var hasChildren = children && external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].count(children);

            if (!('isLeaf' in item)) {
                item.isLeaf = !(hasChildren || props.loadData);
            }
            keyList.push(key);
            if (hasChildren) {
                item.children = loop(children, pos, level + 1);
            }

            k2n[key] = p2n[pos] = item;
            return item;
        });
    };
    loop(props.children);

    return { k2n: k2n, p2n: p2n, keyList: keyList };
};

var tree_getData = function getData(props) {
    var dataSource = props.dataSource,
        renderChildNodes = props.renderChildNodes,
        _props$children = props.children,
        children = _props$children === undefined ? [] : _props$children,
        useVirtual = props.useVirtual,
        immutable = props.immutable;

    var data = immutable ? _lodash_clonedeep_4_5_0_lodash_clonedeep_default()(dataSource) : dataSource;

    if ((renderChildNodes || useVirtual) && !('dataSource' in props)) {
        data = convertChildren2Data(children);
    }

    if (data) {
        try {
            return tree_preHandleData(data, props);
        } catch (err) {
            if ((err.message || '').match('object is not extensible')) {
                // eslint-disable-next-line no-console
                console.error(err.message, 'try to set immutable to true to allow immutable dataSource');
            } else {
                throw err;
            }
        }
    } else {
        return tree_preHandleChildren(props);
    }
};

/**
 * Tree
 */
var tree_Tree = (tree__temp = tree__class = function (_Component) {
    inherits_default()(Tree, _Component);

    function Tree(props) {
        classCallCheck_default()(this, Tree);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        var _getData = tree_getData(props),
            _getData$dataSource = _getData.dataSource,
            dataSource = _getData$dataSource === undefined ? [] : _getData$dataSource,
            k2n = _getData.k2n,
            p2n = _getData.p2n,
            keyList = _getData.keyList;

        var _this$props = _this.props,
            focusable = _this$props.focusable,
            autoFocus = _this$props.autoFocus,
            focusedKey = _this$props.focusedKey;

        var willReceiveProps = false;

        var _getCheckedKeys = tree_getCheckedKeys(props, willReceiveProps, k2n, p2n),
            checkedKeys = _getCheckedKeys.checkedKeys,
            _getCheckedKeys$indet = _getCheckedKeys.indeterminateKeys,
            indeterminateKeys = _getCheckedKeys$indet === undefined ? [] : _getCheckedKeys$indet;

        _this.state = {
            _k2n: k2n,
            _p2n: p2n,
            _keyList: keyList,
            dataSource: dataSource,
            willReceiveProps: willReceiveProps,
            expandedKeys: tree_getExpandedKeys(props, willReceiveProps, k2n, p2n),
            selectedKeys: tree_getSelectedKeys(props, willReceiveProps, k2n, p2n),
            checkedKeys: checkedKeys,
            indeterminateKeys: indeterminateKeys
        };

        if (focusable) {
            _this.tabbableKey = _this.getFirstAvaliablelChildKey('0');
        }

        _this.state.focusedKey = 'focusedKey' in props ? focusedKey : focusable && autoFocus ? _this.tabbableKey : null;

        if (focusable) {
            _this.tabbableKey = _this.getFirstAvaliablelChildKey('0');
        }

        tree_bindCtx(_this, ['handleExpand', 'handleSelect', 'handleCheck', 'handleBlur']);
        return _this;
    }

    Tree.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var _getData2 = tree_getData(props),
            _getData2$dataSource = _getData2.dataSource,
            dataSource = _getData2$dataSource === undefined ? [] : _getData2$dataSource,
            k2n = _getData2.k2n,
            p2n = _getData2.p2n,
            keyList = _getData2.keyList;

        var st = {};

        if (!state.willReceiveProps) {
            return {
                willReceiveProps: true,
                _k2n: k2n,
                _p2n: p2n,
                _keyList: keyList
            };
        }

        if ('expandedKeys' in props) {
            st.expandedKeys = tree_getExpandedKeys(props, state.willReceiveProps, k2n, p2n);
        }

        if ('selectedKeys' in props) {
            st.selectedKeys = tree_getSelectedKeys(props, state.willReceiveProps, k2n);
        }

        if ('checkedKeys' in props) {
            var _getCheckedKeys2 = tree_getCheckedKeys(props, state.willReceiveProps, k2n, p2n),
                checkedKeys = _getCheckedKeys2.checkedKeys;

            st.checkedKeys = checkedKeys;
        }

        st.indeterminateKeys = props.checkStrictly ? props.checkedKeys && props.checkedKeys.indeterminate || [] : tree_getIndeterminateKeys(st.checkedKeys || state.checkedKeys || [], props.checkStrictly, k2n, p2n);

        return extends_default()({}, st, {
            dataSource: dataSource,
            _k2n: k2n,
            _p2n: p2n
        });
    };

    Tree.prototype.setFocusKey = function setFocusKey() {
        var _state$selectedKeys = this.state.selectedKeys,
            selectedKeys = _state$selectedKeys === undefined ? [] : _state$selectedKeys;

        this.setState({
            focusedKey: selectedKeys.length > 0 ? selectedKeys[0] : this.getFirstAvaliablelChildKey('0')
        });
    };

    Tree.prototype.getAvailableKey = function getAvailableKey(pos, prev) {
        var _this2 = this;

        var ps = Object.keys(this.state._p2n).filter(function (p) {
            return _this2.isAvailablePos(pos, p);
        });
        if (ps.length > 1) {
            var index = ps.indexOf(pos);
            var targetIndex = void 0;
            if (prev) {
                targetIndex = index === 0 ? ps.length - 1 : index - 1;
            } else {
                targetIndex = index === ps.length - 1 ? 0 : index + 1;
            }

            return this.state._p2n[ps[targetIndex]].key;
        }

        return null;
    };

    Tree.prototype.getFirstAvaliablelChildKey = function getFirstAvaliablelChildKey(parentPos) {
        var _this3 = this;

        var pos = Object.keys(this.state._p2n).find(function (p) {
            return _this3.isAvailablePos(parentPos + '-0', p);
        });
        return pos ? this.state._p2n[pos].key : null;
    };

    Tree.prototype.isAvailablePos = function isAvailablePos(refPos, targetPos) {
        var disabled = this.state._p2n[targetPos].disabled;


        return this.isSibling(refPos, targetPos) && !disabled;
    };

    Tree.prototype.isSibling = function isSibling(currentPos, targetPos) {
        var currentNums = currentPos.split('-').slice(0, -1);
        var targetNums = targetPos.split('-').slice(0, -1);

        return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
            return num === targetNums[index];
        });
    };

    Tree.prototype.getParentKey = function getParentKey(pos) {
        return this.state._p2n[pos.slice(0, pos.length - 2)].key;
    };

    Tree.prototype.processKey = function processKey(keys, key, add) {
        var index = keys.indexOf(key);
        if (add && index === -1) {
            keys.push(key);
        } else if (!add && index > -1) {
            keys.splice(index, 1);
        }
        return keys;
    };

    /*eslint-disable max-statements*/


    Tree.prototype.handleItemKeyDown = function handleItemKeyDown(key, item, e) {
        if ([KEYCODE.UP, KEYCODE.DOWN, KEYCODE.RIGHT, KEYCODE.LEFT, KEYCODE.ENTER, KEYCODE.ESC, KEYCODE.SPACE].indexOf(e.keyCode) > -1) {
            e.preventDefault();
            e.stopPropagation();
        }

        var focusedKey = this.state.focusedKey;

        var node = this.state._k2n[key];
        var pos = this.state._k2n[key].pos;
        var level = pos.split('-').length - 1;
        switch (e.keyCode) {
            case KEYCODE.UP:
                {
                    var avaliableKey = this.getAvailableKey(pos, true);
                    if (avaliableKey) {
                        focusedKey = avaliableKey;
                    }
                    break;
                }
            case KEYCODE.DOWN:
                {
                    var _avaliableKey = this.getAvailableKey(pos, false);
                    if (_avaliableKey) {
                        focusedKey = _avaliableKey;
                    }
                    break;
                }
            case KEYCODE.RIGHT:
                {
                    this.handleExpand(true, key, node);
                    var _avaliableKey2 = this.getFirstAvaliablelChildKey(pos);
                    if (_avaliableKey2) {
                        focusedKey = _avaliableKey2;
                    }
                    break;
                }
            case KEYCODE.LEFT:
            case KEYCODE.ESC:
                {
                    if (level === 1) {
                        var _avaliableKey3 = this.getAvailableKey(pos, true);
                        if (_avaliableKey3) {
                            focusedKey = _avaliableKey3;
                        }
                    } else if (level > 1) {
                        var parentKey = this.getParentKey(pos);
                        this.handleExpand(false, parentKey, node);
                        focusedKey = parentKey;
                    }
                    break;
                }

            case KEYCODE.ENTER:
            case KEYCODE.SPACE:
                {
                    var checkable = 'checkable' in item.props ? item.props.checkable : this.props.checkable;
                    var selectable = 'selectable' in item.props ? item.props.selectable : this.props.selectable;

                    if (checkable) {
                        this.handleCheck(!item.props.checked, key, node);
                    } else if (selectable) {
                        this.handleSelect(!item.props.selected, key, node, e);
                    }
                    break;
                }
            case KEYCODE.TAB:
                focusedKey = null;
                break;
            default:
                break;
        }

        if (focusedKey !== this.state.focusedKey) {
            if (!('focusedKey' in this.props)) {
                this.setState({
                    focusedKey: focusedKey
                });
            }
        }

        this.props.onItemKeyDown(focusedKey, item, e);
        this.props.onItemFocus(focusedKey, e);
    };

    Tree.prototype.handleBlur = function handleBlur(e) {
        this.setState({
            focusedKey: null
        });

        this.props.onBlur && this.props.onBlur(e);
    };

    Tree.prototype.handleExpand = function handleExpand(expand, key, node) {
        var _this4 = this;

        var _props = this.props,
            onExpand = _props.onExpand,
            loadData = _props.loadData;

        var expandedKeys = this.state.expandedKeys; // 由于setState 是异步操作，所以去掉 [...this.state.expandedKeys]
        this.processKey(expandedKeys, key, expand);
        var setExpandedState = function setExpandedState() {
            if (!('expandedKeys' in _this4.props)) {
                _this4.setState({ expandedKeys: expandedKeys });
            }
            onExpand(expandedKeys, { expanded: expand, node: node });
        };

        if (expand && loadData) {
            return loadData(node).then(setExpandedState);
        } else {
            setExpandedState();
        }
    };

    Tree.prototype.handleSelect = function handleSelect(select, key, node, e) {
        var _props2 = this.props,
            multiple = _props2.multiple,
            onSelect = _props2.onSelect;

        var selectedKeys = [].concat(this.state.selectedKeys);
        if (multiple) {
            this.processKey(selectedKeys, key, select);
        } else {
            selectedKeys = select ? [key] : [];
        }

        if (!('selectedKeys' in this.props)) {
            this.setState({ selectedKeys: selectedKeys });
        }
        onSelect(selectedKeys, {
            selectedNodes: this.getNodes(selectedKeys),
            node: node,
            selected: select,
            event: e
        });
    };

    // eslint-disable-next-line max-statements


    Tree.prototype.handleCheck = function handleCheck(check, key, node) {
        var _this5 = this;

        var _props3 = this.props,
            checkStrictly = _props3.checkStrictly,
            checkedStrategy = _props3.checkedStrategy,
            onCheck = _props3.onCheck;
        var _state = this.state,
            _k2n = _state._k2n,
            _p2n = _state._p2n;

        var checkedKeys = [].concat(this.state.checkedKeys);

        if (checkStrictly) {
            this.processKey(checkedKeys, key, check);
            var _newCheckedKeys = tree_isPlainObject(this.props.checkedKeys) ? {
                checked: checkedKeys,
                indeterminate: this.state.indeterminateKeys
            } : checkedKeys;

            onCheck(_newCheckedKeys, {
                checkedNodes: this.getNodes(checkedKeys),
                checkedNodesPositions: checkedKeys.map(function (key) {
                    if (!_k2n[key]) return null;
                    var _k2n$key = _k2n[key],
                        node = _k2n$key.node,
                        pos = _k2n$key.pos;

                    return { node: node, pos: pos };
                }).filter(function (v) {
                    return !!v;
                }),
                node: node,
                indeterminateKeys: this.state.indeterminateKeys,
                checked: check,
                key: key
            });

            return;
        }

        var pos = _k2n[key].pos;

        util_forEachEnableNode(_k2n[key], function (node) {
            if (node.checkable === false) return;
            _this5.processKey(checkedKeys, node.key, check);
        });

        var ps = Object.keys(_p2n);

        var currentPos = pos;
        var nums = pos.split('-');

        for (var i = nums.length; i > 2; i--) {
            var parentCheck = true;

            var parentPos = nums.slice(0, i - 1).join('-');
            if (_p2n[parentPos].disabled || _p2n[parentPos].checkboxDisabled || _p2n[parentPos].checkable === false) {
                currentPos = parentPos;
                continue;
            }
            var parentKey = _p2n[parentPos].key;
            var parentChecked = checkedKeys.indexOf(parentKey) > -1;
            if (!check && !parentChecked) {
                break;
            }

            for (var j = 0; j < ps.length; j++) {
                var p = ps[j];
                var pnode = _p2n[p];
                if (util_isSiblingOrSelf(currentPos, p) && !pnode.disabled && !pnode.checkboxDisabled) {
                    var k = pnode.key;
                    if (pnode.checkable === false) {
                        // eslint-disable-next-line max-depth
                        if (!pnode.children || pnode.children.length === 0) continue;

                        // eslint-disable-next-line max-depth
                        for (var m = 0; m < pnode.children.length; m++) {
                            if (!pnode.children.every(function (child) {
                                return util_isNodeChecked(child, checkedKeys);
                            })) {
                                parentCheck = false;
                                break;
                            }
                        }
                    } else if (checkedKeys.indexOf(k) === -1) {
                        parentCheck = false;
                    }

                    if (!parentCheck) break;
                }
            }

            this.processKey(checkedKeys, parentKey, parentCheck);

            currentPos = parentPos;
        }

        var indeterminateKeys = tree_getIndeterminateKeys(checkedKeys, checkStrictly, _k2n, _p2n);
        if (!('checkedKeys' in this.props)) {
            this.setState({
                checkedKeys: checkedKeys,
                indeterminateKeys: indeterminateKeys
            });
        }

        var newCheckedKeys = void 0;
        switch (checkedStrategy) {
            case 'parent':
                newCheckedKeys = filterChildKey(checkedKeys, _k2n, _p2n);
                break;
            case 'child':
                newCheckedKeys = filterParentKey(checkedKeys, _k2n, _p2n);
                break;
            default:
                newCheckedKeys = checkedKeys;
                break;
        }

        onCheck(newCheckedKeys, {
            checkedNodes: this.getNodes(newCheckedKeys),
            checkedNodesPositions: newCheckedKeys.map(function (key) {
                if (!_k2n[key]) return null;
                var _k2n$key2 = _k2n[key],
                    node = _k2n$key2.node,
                    pos = _k2n$key2.pos;

                return { node: node, pos: pos };
            }).filter(function (v) {
                return !!v;
            }),
            node: node,
            indeterminateKeys: indeterminateKeys,
            checked: check,
            key: key
        });
    };

    Tree.prototype.getNodeProps = function getNodeProps(key) {
        var prefix = this.props.prefix;
        var _state2 = this.state,
            expandedKeys = _state2.expandedKeys,
            selectedKeys = _state2.selectedKeys,
            checkedKeys = _state2.checkedKeys,
            dragOverNodeKey = _state2.dragOverNodeKey,
            _k2n = _state2._k2n,
            indeterminateKeys = _state2.indeterminateKeys;
        var _k2n$key3 = _k2n[key],
            pos = _k2n$key3.pos,
            isLeaf = _k2n$key3.isLeaf,
            level = _k2n$key3.level;


        return {
            prefix: prefix,
            root: this,
            eventKey: key,
            pos: pos,
            isLeaf: isLeaf,
            level: level,
            expanded: expandedKeys.indexOf(key) > -1,
            selected: selectedKeys.indexOf(key) > -1,
            checked: checkedKeys.indexOf(key) > -1,
            indeterminate: indeterminateKeys.indexOf(key) > -1,
            dragOver: dragOverNodeKey === key && this.dropPosition === 0,
            dragOverGapTop: dragOverNodeKey === key && this.dropPosition === -1,
            dragOverGapBottom: dragOverNodeKey === key && this.dropPosition === 1
        };
    };

    Tree.prototype.getNodes = function getNodes(keys) {
        var _this6 = this;

        return keys.map(function (key) {
            return _this6.state._k2n[key] && _this6.state._k2n[key].node;
        }).filter(function (v) {
            return !!v;
        });
    };

    Tree.prototype.handleDragStart = function handleDragStart(e, node) {
        var _this7 = this;

        var dragNodeKey = node.props.eventKey;
        this.dragNode = node;
        this.dragNodesKeys = Object.keys(this.state._k2n).filter(function (k) {
            return util_isDescendantOrSelf(_this7.state._k2n[dragNodeKey].pos, _this7.state._k2n[k].pos);
        });

        var expandedKeys = this.processKey([].concat(this.state.expandedKeys), dragNodeKey, false);
        this.setState({ expandedKeys: expandedKeys });

        this.props.onDragStart({
            event: e,
            node: node,
            expandedKeys: expandedKeys
        });
    };

    Tree.prototype.handleDragEnter = function handleDragEnter(e, node) {
        var dragOverNodeKey = node.props.eventKey;
        this.dropPosition = this.getDropPosition(e, node);
        if (this.dragNode && this.dragNode.props.eventKey === dragOverNodeKey && this.dropPosition === 0) {
            this.setState({
                dragOverNodeKey: null
            });
            return;
        }

        var expandedKeys = this.processKey([].concat(this.state.expandedKeys), dragOverNodeKey, true);
        this.setState({
            dragOverNodeKey: dragOverNodeKey,
            expandedKeys: expandedKeys
        });

        this.props.onDragEnter({
            event: e,
            node: node,
            expandedKeys: expandedKeys
        });
    };

    Tree.prototype.getDropPosition = function getDropPosition(e, node) {
        var labelWrapperNode = node.labelWrapperEl;
        var offsetTop = tree_getOffset(labelWrapperNode).top;
        var offsetHeight = labelWrapperNode.offsetHeight;
        var pageY = e.pageY;
        var gapHeight = 2;

        if (pageY > offsetTop + offsetHeight - gapHeight) {
            return 1;
        }
        if (pageY < offsetTop + gapHeight) {
            return -1;
        }
        return 0;
    };

    Tree.prototype.handleDragOver = function handleDragOver(e, node) {
        var dragOverNodeKey = node.props.eventKey;
        if (this.state.dragOverNodeKey !== dragOverNodeKey) {
            this.setState({
                dragOverNodeKey: dragOverNodeKey
            });
        }

        this.props.onDragOver({ event: e, node: node });
    };

    Tree.prototype.handleDragLeave = function handleDragLeave(e, node) {
        var eventKey = node.props.eventKey;
        var _keyList = this.state._keyList;

        var firstKey = _keyList[0];
        var lastKey = _keyList[_keyList.length - 1];
        // 只针对树的边界节点（第一个和最后一个）做处理
        if (eventKey === firstKey || eventKey === lastKey) {
            this.setState({
                dragOverNodeKey: null
            });
        }
        this.props.onDragLeave({ event: e, node: node });
    };

    Tree.prototype.handleDragEnd = function handleDragEnd(e, node) {
        this.setState({
            dragOverNodeKey: null
        });

        this.props.onDragEnd({ event: e, node: node });
    };

    Tree.prototype.handleDrop = function handleDrop(e, node) {
        if (this.dragNode && util_isDescendantOrSelf(this.state._k2n[this.dragNode.props.eventKey].pos, this.state._k2n[node.props.eventKey].pos)) {
            return;
        }

        this.setState({
            dragOverNodeKey: null
        });

        var params = this.generateDropParams(node);
        this.props.onDrop(extends_default()({
            event: e
        }, params));
    };

    Tree.prototype.canDrop = function canDrop(node) {
        var params = this.generateDropParams(node);
        return this.props.canDrop(params);
    };

    Tree.prototype.generateDropParams = function generateDropParams(node) {
        return {
            dragNode: this.dragNode,
            dragNodesKeys: [].concat(this.dragNodesKeys),
            node: node,
            dropPosition: this.dropPosition
        };
    };

    Tree.prototype.filterTreeNode = function filterTreeNode(node) {
        return this.props.filterTreeNode.call(this, node);
    };

    Tree.prototype.shouldNodeShow = function shouldNodeShow(nodeData) {
        var _state3 = this.state,
            expandedKeys = _state3.expandedKeys,
            _p2n = _state3._p2n;


        return !(nodeData.style && nodeData.style.display === 'none') && getAllDescendantKeys(nodeData, _p2n).every(function (k) {
            return expandedKeys.includes(k);
        });
    };

    Tree.prototype.renderTreeNode = function renderTreeNode(props, childNodes) {
        var _props4 = this.props,
            rtl = _props4.rtl,
            labelRender = _props4.labelRender;
        var key = props.key;

        var nodeProps = extends_default()({
            _key: key
        }, props, this.getNodeProps(key));

        if (labelRender) {
            nodeProps.label = labelRender(tree_pickProps(treeNodeProps, props));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            tree_node,
            extends_default()({ rtl: rtl, key: key }, nodeProps),
            childNodes
        );
    };

    Tree.prototype.renderNodeList = function renderNodeList(dataSource) {
        var _this8 = this;

        var nodeList = [];
        var _k2n = this.state._k2n;

        var drill = function drill(list) {
            list.forEach(function (item) {
                // 为了兼容之前的实现 保留非法节点
                if (item.illegalFlag) {
                    nodeList.push(item);
                    return;
                }

                var children = item.children,
                    nodeProps = objectWithoutProperties_default()(item, ['children']);

                if (!_this8.shouldNodeShow(item)) {
                    return;
                }

                nodeList.push(nodeProps);
                children && children.length && drill(children);
            });
        };

        drill(dataSource);

        return nodeList.map(function (nodeProps, index) {
            // 为了兼容之前的实现 保留非法节点
            if (nodeProps.illegalFlag) {
                return nodeProps.node;
            }
            // aria props
            nodeProps.size = nodeList.length;
            nodeProps.posinset = index + 1;

            return _k2n[nodeProps.key].node = _this8.renderTreeNode(nodeProps);
        });
    };

    Tree.prototype.renderWithCustomChildNodes = function renderWithCustomChildNodes(dataSource) {
        var _this9 = this;

        var renderChildNodes = this.props.renderChildNodes;
        var _k2n = this.state._k2n;


        var drill = function drill(list) {
            return list.map(function (_ref, index) {
                var children = _ref.children,
                    nodeProps = objectWithoutProperties_default()(_ref, ['children']);

                var childNodes = void 0;

                if (children && children.length) {
                    childNodes = renderChildNodes(drill(children));
                }

                // aria props
                nodeProps.size = list.length;
                nodeProps.posinset = index + 1;

                return _k2n[nodeProps.key].node = _this9.renderTreeNode(nodeProps, childNodes);
            });
        };
        return drill(dataSource);
    };

    Tree.prototype.renderByDataSource = function renderByDataSource(dataSource) {
        var _this10 = this;

        var drill = function drill(data) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';

            return data.map(function (item, index) {
                // 为了兼容之前的实现 保留非法节点
                if (item.illegalFlag) {
                    return item.node;
                }
                var pos = prefix + '-' + index;

                var _item$key = item.key,
                    key = _item$key === undefined ? pos : _item$key,
                    children = item.children,
                    others = objectWithoutProperties_default()(item, ['key', 'children']);

                var props = extends_default()({
                    size: data.length
                }, others, _this10.getNodeProps('' + key), {
                    _key: key,
                    key: key
                });

                if (children && children.length) {
                    props.children = drill(children, pos);
                }

                var node = _this10.renderTreeNode(props, props.children);

                // eslint-disable-next-line
                _this10.state._k2n[key].node = node;
                return node;
            });
        };

        return drill(dataSource);
    };

    Tree.prototype.renderByChildren = function renderByChildren() {
        var _this11 = this;

        var rtl = this.props.rtl;
        var _k2n = this.state._k2n;


        var loop = function loop(children) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';

            return external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (child, index) {
                if (!external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(child)) {
                    return;
                }
                var pos = prefix + '-' + index;
                var key = child.key || pos;
                var props = _this11.getNodeProps('' + key);
                if (child.props.children) {
                    props.children = loop(child.props.children, pos);
                }

                props._key = key;
                props.rtl = rtl;
                props.size = external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].count(children);

                var node = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, props);
                _k2n[key].node = node;
                return node;
            });
        };

        return loop(this.props.children);
    };

    Tree.prototype.render = function render() {
        var _cx,
            _this12 = this;

        var _props5 = this.props,
            prefix = _props5.prefix,
            rtl = _props5.rtl,
            className = _props5.className,
            showLine = _props5.showLine,
            isNodeBlock = _props5.isNodeBlock,
            isLabelBlock = _props5.isLabelBlock,
            multiple = _props5.multiple,
            useVirtual = _props5.useVirtual,
            renderChildNodes = _props5.renderChildNodes;
        var dataSource = this.state.dataSource;

        var _pickOthers = tree_pickOthers(Object.keys(Tree.propTypes), this.props),
            style = _pickOthers.style,
            others = objectWithoutProperties_default()(_pickOthers, ['style']);

        if (rtl) {
            others.dir = 'rtl';
        }

        var newClassName = _classnames_2_3_1_classnames_default()((_cx = {}, _cx[prefix + 'tree'] = true, _cx[prefix + 'label-block'] = isLabelBlock, _cx[prefix + 'node-block'] = isNodeBlock, _cx[prefix + 'node-indent'] = !isNodeBlock, _cx[prefix + 'show-line'] = !isNodeBlock && showLine, _cx[className] = !!className, _cx));

        var treeRender = function treeRender(items, ref) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'ul',
                extends_default()({
                    role: 'tree',
                    ref: ref,
                    'aria-multiselectable': multiple,
                    onBlur: _this12.handleBlur,
                    className: newClassName,
                    style: useVirtual ? null : style
                }, others),
                items
            );
        };

        var virtualTreeRender = function virtualTreeRender(dataSource) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'virtual-tree-container', style: style },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_virtual_list,
                    { itemsRenderer: function itemsRenderer(items, ref) {
                            return treeRender(items, ref);
                        } },
                    _this12.renderNodeList(dataSource)
                )
            );
        };

        return useVirtual ? virtualTreeRender(dataSource) : renderChildNodes ? treeRender(this.renderWithCustomChildNodes(dataSource)) : !this.props.dataSource ? treeRender(this.renderByChildren()) : treeRender(this.renderByDataSource(dataSource));
    };

    return Tree;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tree__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 树节点
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 数据源，该属性优先级高于 children
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 是否显示树的线
     */
    showLine: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否支持选中节点
     */
    selectable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * （用于受控）当前选中节点 key 的数组
     */
    selectedKeys: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * （用于非受控）默认选中节点 key 的数组
     */
    defaultSelectedKeys: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 选中或取消选中节点时触发的回调函数
     * @param {Array} selectedKeys 选中节点key的数组
     * @param {Object} extra 额外参数
     * @param {Array} extra.selectedNodes 选中节点的数组
     * @param {Object} extra.node 当前操作的节点
     * @param {Boolean} extra.selected 当前操作是否是选中
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否支持多选
     */
    multiple: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否支持勾选节点的复选框
     */
    checkable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * （用于受控）当前勾选复选框节点 key 的数组或 `{checked: Array, indeterminate: Array}` 的对象
     */
    checkedKeys: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string), _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * （用于非受控）默认勾选复选框节点 key 的数组
     */
    defaultCheckedKeys: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 勾选节点复选框是否完全受控（父子节点选中状态不再关联）
     */
    checkStrictly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 定义选中时回填的方式
     * @enumdesc 返回所有选中的节点, 父子节点都选中时只返回父节点, 父子节点都选中时只返回子节点
     */
    checkedStrategy: _prop_types_15_8_1_prop_types_default.a.oneOf(['all', 'parent', 'child']),
    /**
     * 勾选或取消勾选复选框时触发的回调函数
     * @param {Array} checkedKeys 勾选复选框节点key的数组
     * @param {Object} extra 额外参数
     * @param {Array} extra.checkedNodes 勾选复选框节点的数组
     * @param {Array} extra.checkedNodesPositions 包含有勾选复选框节点和其位置的对象的数组
     * @param {Array} extra.indeterminateKeys 半选复选框节点 key 的数组
     * @param {Object} extra.node 当前操作的节点
     * @param {Boolean} extra.checked 当前操作是否是勾选
     */
    onCheck: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * （用于受控）当前展开的节点 key 的数组
     */
    expandedKeys: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * （用于非受控）默认展开的节点 key 的数组
     */
    defaultExpandedKeys: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 是否默认展开所有节点
     */
    defaultExpandAll: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否自动展开父节点，建议受控时设置为false
     */
    autoExpandParent: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 展开或收起节点时触发的回调函数
     * @param {Array} expandedKeys 展开的节点key的数组
     * @param {Object} extra 额外参数
     * @param {Object} extra.node 当前操作的节点
     * @param {Boolean} extra.expanded 当前操作是否是展开
     */
    onExpand: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否支持编辑节点内容
     */
    editable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 编辑节点内容完成时触发的回调函数
     * @param {String} key 编辑节点的 key
     * @param {String} label 编辑节点完成时节点的文本
     * @param {Object} node 当前编辑的节点
     */
    onEditFinish: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否支持拖拽节点
     */
    draggable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 开始拖拽节点时触发的回调函数
     * @param {Object} info 拖拽信息
     * @param {Object} info.event 事件对象
     * @param {Object} info.node 拖拽的节点
     */
    onDragStart: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽节点进入目标节点时触发的回调函数
     * @param {Object} info 拖拽信息
     * @param {Object} info.event 事件对象
     * @param {Object} info.node 目标节点
     * @param {Array} info.expandedKeys 当前展开的节点key的数组
     */
    onDragEnter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽节点在目标节点上移动的时候触发的回调函数
     * @param {Object} info 拖拽信息
     * @param {Object} info.event 事件对象
     * @param {Object} info.node 目标节点
     */
    onDragOver: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽节点离开目标节点时触发的回调函数
     * @param {Object} info 拖拽信息
     * @param {Object} info.event 事件对象
     * @param {Object} info.node 目标节点
     */
    onDragLeave: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽节点拖拽结束时触发的回调函数
     * @param {Object} info 拖拽信息
     * @param {Object} info.event 事件对象
     * @param {Object} info.node 目标节点
     */
    onDragEnd: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽节点放入目标节点内或前后触发的回调函数
     * @param {Object} info 拖拽信息
     * @param {Object} info.event 事件对象
     * @param {Object} info.node 目标节点
     * @param {Object} info.dragNode 拖拽的节点
     * @param {Array} info.dragNodesKeys 拖拽的节点和其子节点 key 的数组
     * @param {Number} info.dropPosition 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后
     */
    onDrop: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 节点是否可被作为拖拽的目标节点
     * @param {Object} info 拖拽信息
     * @param {Object} info.node 目标节点
     * @param {Object} info.dragNode 拖拽的节点
     * @param {Array} info.dragNodesKeys 拖拽的节点和其子节点 key 的数组
     * @param {Number} info.dropPosition 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后
     * @return {Boolean} 是否可以被当作目标节点
     */
    canDrop: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 异步加载数据的函数
     * @param {Object} node 被点击展开的节点
     */
    loadData: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 按需筛选高亮节点
     * @param {Object} node 待筛选的节点
     * @return {Boolean} 是否被筛选中
     */
    filterTreeNode: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 右键点击节点时触发的回调函数
     * @param {Object} info 信息对象
     * @param {Object} info.event 事件对象
     * @param {Object} info.node 点击的节点
     */
    onRightClick: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置节点是否占满剩余空间，一般用于统一在各节点右侧添加元素(借助 flex 实现，暂时只支持 ie10+)
     */
    isLabelBlock: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 设置节点是否占满一行
     */
    isNodeBlock: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.bool, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * 是否开启展开收起动画
     */
    animation: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当前获得焦点的子菜单或菜单项 key 值
     */
    focusedKey: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 渲染子节点
     * @param {Array<ReactNode>} nodes 所有的子节点
     * @return {ReactNode} 返回节点
     */
    renderChildNodes: _prop_types_15_8_1_prop_types_default.a.func,
    focusable: _prop_types_15_8_1_prop_types_default.a.bool,
    autoFocus: _prop_types_15_8_1_prop_types_default.a.bool,
    onItemFocus: _prop_types_15_8_1_prop_types_default.a.func,
    onBlur: _prop_types_15_8_1_prop_types_default.a.func,
    onItemKeyDown: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义渲染单个子节点
     * @param {Object} node 节点数据
     * @return {ReactNode} 返回节点
     * @version 1.25
     */
    labelRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否是不可变数据
     * @version 1.23
     */
    immutable: _prop_types_15_8_1_prop_types_default.a.bool
}, tree__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    pure: false,
    showLine: false,
    selectable: true,
    editable: false,
    multiple: false,
    checkable: false,
    checkStrictly: false,
    checkedStrategy: 'all',
    draggable: false,
    autoExpandParent: true,
    defaultExpandAll: false,
    defaultExpandedKeys: [],
    defaultCheckedKeys: [],
    defaultSelectedKeys: [],
    onExpand: view_tree_noop,
    onCheck: view_tree_noop,
    onSelect: view_tree_noop,
    onDragStart: view_tree_noop,
    onDragEnter: view_tree_noop,
    onDragOver: view_tree_noop,
    onDragLeave: view_tree_noop,
    onDragEnd: view_tree_noop,
    onDrop: view_tree_noop,
    canDrop: function canDrop() {
        return true;
    },
    onEditFinish: view_tree_noop,
    onRightClick: view_tree_noop,
    isLabelBlock: false,
    isNodeBlock: false,
    animation: true,
    focusable: true,
    autoFocus: false,
    onItemFocus: view_tree_noop,
    onItemKeyDown: view_tree_noop,
    useVirtual: false,
    immutable: false
}, tree__temp);
tree_Tree.displayName = 'Tree';


/* harmony default export */ var view_tree = (Object(react_lifecycles_compat_es["polyfill"])(tree_Tree));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree/index.js




view_tree.Node = tree_node;

/* harmony default export */ var es_tree = (config_provider.config(view_tree, {
    exportNames: ['setFocusKey']
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree-select/tree-select.js







var tree_select__class, tree_select__temp;












var tree_select_noop = function noop() {};
var tree_select_TreeNode = es_tree.Node;
var tree_select_bindCtx = func.bindCtx;


var tree_select_flatDataSource = function flatDataSource(props) {
    var _k2n = {};
    var _p2n = {};
    var _v2n = {};

    if ('dataSource' in props) {
        var loop = function loop(data) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
            return data.map(function (item, index) {
                var value = item.value,
                    children = item.children;

                var pos = prefix + '-' + index;
                var key = item.key || pos;

                var newItem = extends_default()({}, item, { key: key, pos: pos });
                if (children && children.length) {
                    newItem.children = loop(children, pos);
                }

                _k2n[key] = _p2n[pos] = _v2n[value] = newItem;
                return newItem;
            });
        };

        loop(props.dataSource);
    } else if ('children' in props) {
        var _loop = function _loop(children) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
            return external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].map(children, function (node, index) {
                if (!external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.isValidElement(node)) {
                    return;
                }

                var _node$props = node.props,
                    value = _node$props.value,
                    children = _node$props.children;

                var pos = prefix + '-' + index;
                var key = node.key || pos;
                var newItem = extends_default()({}, node.props, { key: key, pos: pos });
                if (children && external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].count(children)) {
                    newItem.children = _loop(children, pos);
                }

                _k2n[key] = _p2n[pos] = _v2n[value] = newItem;
                return newItem;
            });
        };
        _loop(props.children);
    }

    return { _k2n: _k2n, _p2n: _p2n, _v2n: _v2n };
};

var tree_select_isSearched = function isSearched(label, searchedValue) {
    var labelString = '';

    searchedValue = String(searchedValue);

    var loop = function loop(arg) {
        if (Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["isValidElement"])(arg) && arg.props.children) {
            external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(arg.props.children, loop);
        } else {
            labelString += arg;
        }
    };
    loop(label);

    if (labelString.length >= searchedValue.length && labelString.toLowerCase().indexOf(searchedValue.toLowerCase()) > -1) {
        return true;
    }

    return false;
};

var getSearchKeys = function getSearchKeys(searchedValue, _k2n, _p2n) {
    var searchedKeys = [];
    var retainedKeys = [];
    Object.keys(_k2n).forEach(function (k) {
        var _k2n$k = _k2n[k],
            label = _k2n$k.label,
            pos = _k2n$k.pos;


        if (tree_select_isSearched(label, searchedValue)) {
            searchedKeys.push(k);
            var posArr = pos.split('-');
            posArr.forEach(function (n, i) {
                if (i > 0) {
                    var p = posArr.slice(0, i + 1).join('-');
                    var kk = _p2n[p].key;
                    if (retainedKeys.indexOf(kk) === -1) {
                        retainedKeys.push(kk);
                    }
                }
            });
        }
    });

    return { searchedKeys: searchedKeys, retainedKeys: retainedKeys };
};

/**
 * TreeSelect
 */
var tree_select_TreeSelect = (tree_select__temp = tree_select__class = function (_Component) {
    inherits_default()(TreeSelect, _Component);

    function TreeSelect(props, context) {
        classCallCheck_default()(this, TreeSelect);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        var defaultVisible = props.defaultVisible,
            visible = props.visible,
            defaultValue = props.defaultValue,
            value = props.value;


        _this.state = extends_default()({
            visible: typeof visible === 'undefined' ? defaultVisible : visible,
            value: util_normalizeToArray(typeof value === 'undefined' ? defaultValue : value),
            searchedValue: '',
            expandedKeys: [],
            searchedKeys: [],
            retainedKeys: [],
            autoExpandParent: false,
            // map of value => item, includes value not exist in dataSource
            mapValueDS: {}
        }, tree_select_flatDataSource(props));

        // init value/mapValueDS when defaultValue is not undefined
        if (_this.state.value !== undefined) {
            _this.state.mapValueDS = getValueDataSource(_this.state.value, _this.state.mapValueDS).mapValueDS;
            _this.state.value = _this.state.value.map(function (v) {
                return valueToSelectKey(v);
            });
        }

        tree_select_bindCtx(_this, ['handleSelect', 'handleCheck', 'handleSearch', 'handleSearchClear', 'handleVisibleChange', 'handleChange', 'handleRemove', 'handleExpand', 'handleKeyDown', 'saveTreeRef', 'saveSelectRef', 'renderMaxTagPlaceholder']);
        return _this;
    }

    TreeSelect.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var st = {};

        if ('value' in props) {
            var valueArray = util_normalizeToArray(props.value);
            // convert value to string[]
            st.value = valueArray.map(function (v) {
                return valueToSelectKey(v);
            });
            // re-calculate map
            st.mapValueDS = getValueDataSource(props.value, state.mapValueDS).mapValueDS;
        }
        if ('visible' in props) {
            st.visible = props.visible;
        }

        var _flatDataSource = tree_select_flatDataSource(props),
            _k2n = _flatDataSource._k2n,
            _p2n = _flatDataSource._p2n,
            _v2n = _flatDataSource._v2n;

        if (props.showSearch && state.searchedValue) {
            var _getSearchKeys = getSearchKeys(state.searchedValue, _k2n, _p2n),
                searchedKeys = _getSearchKeys.searchedKeys,
                retainedKeys = _getSearchKeys.retainedKeys;

            st.searchedKeys = searchedKeys;
            st.retainedKeys = retainedKeys;
        }

        return extends_default()({}, st, {
            _k2n: _k2n,
            _p2n: _p2n,
            _v2n: _v2n
        });
    };

    TreeSelect.prototype.getKeysByValue = function getKeysByValue(value) {
        var _this2 = this;

        return value.reduce(function (ret, v) {
            var k = _this2.state._v2n[v] && _this2.state._v2n[v].key;
            if (k) {
                ret.push(k);
            }
            return ret;
        }, []);
    };

    TreeSelect.prototype.getValueByKeys = function getValueByKeys(keys) {
        var _this3 = this;

        return keys.map(function (k) {
            return _this3.state._k2n[k].value;
        });
    };

    TreeSelect.prototype.getValueForSelect = function getValueForSelect(value) {
        var treeCheckedStrategy = this.props.treeCheckedStrategy;

        var nonExistentValueKeys = this.getNonExistentValueKeys();

        var keys = this.getKeysByValue(value);
        keys = getAllCheckedKeys(keys, this.state._k2n, this.state._p2n);

        switch (treeCheckedStrategy) {
            case 'parent':
                keys = filterChildKey(keys, this.state._k2n, this.state._p2n);
                break;
            case 'child':
                keys = filterParentKey(keys, this.state._k2n, this.state._p2n);
                break;
            default:
                break;
        }

        var values = this.getValueByKeys(keys);

        return [].concat(values, nonExistentValueKeys);
    };

    TreeSelect.prototype.getData = function getData(value, forSelect) {
        var _this4 = this;

        var preserveNonExistentValue = this.props.preserveNonExistentValue;
        var mapValueDS = this.state.mapValueDS;


        var ret = value.reduce(function (ret, v) {
            var k = _this4.state._v2n[v] && _this4.state._v2n[v].key;
            if (k) {
                var _state$_k2n$k = _this4.state._k2n[k],
                    label = _state$_k2n$k.label,
                    pos = _state$_k2n$k.pos,
                    disabled = _state$_k2n$k.disabled,
                    checkboxDisabled = _state$_k2n$k.checkboxDisabled;

                var d = {
                    value: v,
                    label: label,
                    pos: pos
                };
                if (forSelect) {
                    d.disabled = disabled || checkboxDisabled;
                } else {
                    d.key = k;
                }
                ret.push(d);
            } else if (preserveNonExistentValue) {
                // 需要保留 dataSource 中不存在的 value
                var item = mapValueDS[v];
                if (item) {
                    ret.push(item);
                }
            }
            return ret;
        }, []);

        return ret;
    };

    TreeSelect.prototype.getNonExistentValues = function getNonExistentValues() {
        var _this5 = this;

        var preserveNonExistentValue = this.props.preserveNonExistentValue;
        var value = this.state.value;


        if (!preserveNonExistentValue) {
            return [];
        }
        var nonExistentValues = value.filter(function (v) {
            return !_this5.state._v2n[v];
        });
        return nonExistentValues;
    };

    TreeSelect.prototype.getNonExistentValueKeys = function getNonExistentValueKeys() {
        var nonExistentValues = this.getNonExistentValues();
        return nonExistentValues.map(function (v) {
            if ((typeof v === 'undefined' ? 'undefined' : typeof_default()(v)) === 'object' && v.hasOwnProperty('value')) {
                return v.value;
            }
            return v;
        });
    };

    TreeSelect.prototype.saveTreeRef = function saveTreeRef(ref) {
        this.tree = ref;
    };

    TreeSelect.prototype.saveSelectRef = function saveSelectRef(ref) {
        this.select = ref;
    };

    TreeSelect.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        if (['fromTree', 'keyboard'].indexOf(type) !== -1 && !visible) {
            this.select.focusInput();
        }

        this.props.onVisibleChange(visible, type);
    };

    TreeSelect.prototype.handleSelect = function handleSelect(selectedKeys, extra) {
        var _props = this.props,
            multiple = _props.multiple,
            onChange = _props.onChange;
        var selected = extra.selected;


        if (multiple || selected) {
            var value = this.getValueByKeys(selectedKeys);
            var nonExistentValues = this.getNonExistentValues();
            value = [].concat(nonExistentValues, value);

            if (!('value' in this.props)) {
                this.setState({
                    value: value
                });
            }
            if (!multiple) {
                this.handleVisibleChange(false, 'fromTree');
            }

            var data = this.getData(value);
            multiple ? onChange(value, data) : onChange(value[0], data[0]);

            // clear search value manually
            this.select.handleSearchClear('select');
        } else {
            this.handleVisibleChange(false, 'fromTree');
        }
    };

    TreeSelect.prototype.handleCheck = function handleCheck(checkedKeys) {
        var onChange = this.props.onChange;


        var value = this.getValueByKeys(checkedKeys);
        var nonExistentValues = this.getNonExistentValues();
        value = [].concat(nonExistentValues, value);

        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        onChange(value, this.getData(value));

        // clear search value manually
        this.select.handleSearchClear('select');
    };

    TreeSelect.prototype.handleRemove = function handleRemove(removedItem) {
        var _this6 = this;

        var removedValue = removedItem.value;
        var _props2 = this.props,
            treeCheckable = _props2.treeCheckable,
            treeCheckStrictly = _props2.treeCheckStrictly,
            treeCheckedStrategy = _props2.treeCheckedStrategy,
            onChange = _props2.onChange;


        var value = void 0;
        if (
        // there's linkage relationship among nodes
        treeCheckable && !treeCheckStrictly && ['parent', 'all'].indexOf(treeCheckedStrategy) !== -1 &&
        // value exits in datasource
        this.state._v2n[removedValue]) {
            var removedPos = this.state._v2n[removedValue].pos;
            value = this.state.value.filter(function (v) {
                var p = _this6.state._v2n[v].pos;
                return !util_isDescendantOrSelf(removedPos, p);
            });

            var nums = removedPos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentPos = nums.slice(0, i - 1).join('-');
                var parentValue = this.state._p2n[parentPos].value;
                var parentIndex = value.indexOf(parentValue);
                if (parentIndex > -1) {
                    value.splice(parentIndex, 1);
                } else {
                    break;
                }
            }
        } else {
            value = this.state.value.filter(function (v) {
                return v !== removedValue;
            });
        }

        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        var data = this.getData(value);
        onChange(value, data);
    };

    TreeSelect.prototype.handleSearch = function handleSearch(searchedValue) {
        var _state = this.state,
            _k2n = _state._k2n,
            _p2n = _state._p2n;

        var _getSearchKeys2 = getSearchKeys(searchedValue, _k2n, _p2n),
            searchedKeys = _getSearchKeys2.searchedKeys,
            retainedKeys = _getSearchKeys2.retainedKeys;

        this.setState({
            searchedValue: searchedValue,
            expandedKeys: searchedKeys,
            searchedKeys: searchedKeys,
            retainedKeys: retainedKeys,
            autoExpandParent: true
        });

        this.props.onSearch(searchedValue);
    };

    TreeSelect.prototype.handleSearchClear = function handleSearchClear(triggerType) {
        this.setState({
            searchedValue: '',
            expandedKeys: []
        });
        this.props.onSearchClear(triggerType);
    };

    TreeSelect.prototype.handleExpand = function handleExpand(expandedKeys) {
        this.setState({
            expandedKeys: expandedKeys,
            autoExpandParent: false
        });
    };

    TreeSelect.prototype.handleKeyDown = function handleKeyDown(e) {
        var onKeyDown = this.props.onKeyDown;
        var visible = this.state.visible;


        if (onKeyDown) {
            onKeyDown(e);
        }

        if (!visible) {
            return;
        }

        switch (e.keyCode) {
            case KEYCODE.UP:
            case KEYCODE.DOWN:
                this.tree.setFocusKey();
                e.preventDefault();
                break;
            default:
                break;
        }
    };

    TreeSelect.prototype.handleChange = function handleChange(value, triggerType) {
        if (this.props.hasClear && triggerType === 'clear') {
            if (!('value' in this.props)) {
                this.setState({
                    value: []
                });
            }

            this.props.onChange(null, null);
        }
    };

    TreeSelect.prototype.searchNodes = function searchNodes(children) {
        var _state2 = this.state,
            searchedKeys = _state2.searchedKeys,
            retainedKeys = _state2.retainedKeys;


        var loop = function loop(children) {
            var retainedNodes = [];
            external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].forEach(children, function (child) {
                if (searchedKeys.indexOf(child.key) > -1) {
                    retainedNodes.push(child);
                } else if (retainedKeys.indexOf(child.key) > -1) {
                    var retainedNode = child.props.children ? Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, {}, loop(child.props.children)) : child;
                    retainedNodes.push(retainedNode);
                } else {
                    var hideNode = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, {
                        style: { display: 'none' }
                    });
                    retainedNodes.push(hideNode);
                }
            });
            return retainedNodes;
        };

        return loop(children);
    };

    TreeSelect.prototype.createNodesByData = function createNodesByData(data, searching) {
        var _this7 = this;

        var _state3 = this.state,
            searchedKeys = _state3.searchedKeys,
            retainedKeys = _state3.retainedKeys;


        var loop = function loop(data, isParentMatched) {
            var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';

            var retainedNodes = [];

            data.forEach(function (item, index) {
                var children = item.children,
                    others = objectWithoutProperties_default()(item, ['children']);

                var pos = prefix + '-' + index;
                var key = _this7.state._p2n[pos].key;
                var addNode = function addNode(isParentMatched, hide) {
                    if (hide) {
                        others.style = { display: 'none' };
                    }

                    retainedNodes.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        tree_select_TreeNode,
                        extends_default()({}, others, { key: key }),
                        children && children.length ? loop(children, isParentMatched, pos) : null
                    ));
                };

                if (searching) {
                    if (searchedKeys.indexOf(key) > -1 || isParentMatched) {
                        addNode(true);
                    } else if (retainedKeys.indexOf(key) > -1) {
                        addNode(false);
                    } else {
                        addNode(false, true);
                    }
                } else {
                    addNode();
                }
            });

            return retainedNodes;
        };

        return loop(data, false);
    };

    /*eslint-disable max-statements*/


    TreeSelect.prototype.renderPopupContent = function renderPopupContent() {
        var prefix = this.props.prefix;
        var treeSelectPrefix = prefix + 'tree-select-';

        if (!this.state.visible) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { className: treeSelectPrefix + 'dropdown' });
        }

        var _props3 = this.props,
            multiple = _props3.multiple,
            treeCheckable = _props3.treeCheckable,
            treeCheckStrictly = _props3.treeCheckStrictly,
            treeCheckedStrategy = _props3.treeCheckedStrategy,
            treeDefaultExpandAll = _props3.treeDefaultExpandAll,
            treeDefaultExpandedKeys = _props3.treeDefaultExpandedKeys,
            treeLoadData = _props3.treeLoadData,
            _props3$treeProps = _props3.treeProps,
            customTreeProps = _props3$treeProps === undefined ? {} : _props3$treeProps,
            showSearch = _props3.showSearch,
            dataSource = _props3.dataSource,
            children = _props3.children,
            readOnly = _props3.readOnly,
            notFoundContent = _props3.notFoundContent,
            useVirtual = _props3.useVirtual;
        var _state4 = this.state,
            value = _state4.value,
            searchedValue = _state4.searchedValue,
            expandedKeys = _state4.expandedKeys,
            autoExpandParent = _state4.autoExpandParent,
            searchedKeys = _state4.searchedKeys;


        var treeProps = {
            multiple: multiple,
            ref: this.saveTreeRef,
            loadData: treeLoadData,
            defaultExpandAll: treeDefaultExpandAll,
            defaultExpandedKeys: treeDefaultExpandedKeys,
            useVirtual: useVirtual
        };

        // 使用虚拟滚动 设置默认高度
        if (useVirtual) {
            customTreeProps.style = extends_default()({
                maxHeight: '260px',
                overflow: 'auto',
                boxSizing: 'border-box'
            }, customTreeProps.style);
        }

        var keys = this.getKeysByValue(value);
        if (treeCheckable) {
            treeProps.checkable = treeCheckable;
            treeProps.checkStrictly = treeCheckStrictly;
            treeProps.checkedStrategy = treeCheckStrictly ? 'all' : treeCheckedStrategy;
            treeProps.checkedKeys = keys;
            if (!readOnly) {
                treeProps.onCheck = this.handleCheck;
            }
        } else {
            treeProps.selectedKeys = keys;
            if (!readOnly) {
                treeProps.onSelect = this.handleSelect;
            }
        }

        var notFound = false;
        var newChildren = void 0;
        if (showSearch && searchedValue) {
            treeProps.expandedKeys = expandedKeys;
            treeProps.autoExpandParent = autoExpandParent;
            treeProps.onExpand = this.handleExpand;
            treeProps.filterTreeNode = function (node) {
                return searchedKeys.indexOf(node.props.eventKey) > -1;
            };

            if (searchedKeys.length) {
                newChildren = dataSource ? this.createNodesByData(dataSource, true) : this.searchNodes(children);
            } else {
                notFound = true;
            }
        } else {
            // eslint-disable-next-line
            if (dataSource) {
                if (dataSource.length) {
                    newChildren = this.createNodesByData(dataSource);
                } else {
                    notFound = true;
                }
            } else {
                // eslint-disable-next-line
                if (external___root___React___commonjs2___react___commonjs___react___amd___react__["Children"].count(children)) {
                    newChildren = children;
                } else {
                    notFound = true;
                }
            }
        }
        var contentClass = treeSelectPrefix + 'dropdown-content';

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: treeSelectPrefix + 'dropdown' },
            notFound ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: treeSelectPrefix + 'not-found contentClass' },
                notFoundContent
            ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_tree,
                extends_default()({}, treeProps, customTreeProps, { className: contentClass }),
                newChildren
            )
        );
    };

    TreeSelect.prototype.renderPreview = function renderPreview(data, others) {
        var _props4 = this.props,
            prefix = _props4.prefix,
            className = _props4.className,
            renderPreview = _props4.renderPreview;


        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');
        var items = data && !Array.isArray(data) ? [data] : data;

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(items, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            items && items.map(function (_ref) {
                var label = _ref.label;
                return label;
            }).join(', ')
        );
    };

    /**
     * TreeSelect 无法直接使用 Select 的 maxTagPlaceholder 逻辑
     * Select 的 totalValue 是所有 leaf 节点，TreeSelect 的 totalValue 受 treeCheckedStrategy 和 treeCheckStrictly 影响
     *
     * treeCheckStrictly = true: totalValue 为所有节点
     *
     * treeCheckStrictly = false: 根据 treeCheckedStrategy 判断
     *   treeCheckedStrategy = 'all': totalValue 为所有节点
     *   treeCheckedStrategy = 'parent': totalValue 无意义，不返回
     *   treeCheckedStrategy = 'child': totalValue 为所有 leaf 节点
     */


    TreeSelect.prototype.renderMaxTagPlaceholder = function renderMaxTagPlaceholder(value, totalValue) {
        // 这里的 totalValue 为所有 leaf 节点
        var _props5 = this.props,
            treeCheckStrictly = _props5.treeCheckStrictly,
            maxTagPlaceholder = _props5.maxTagPlaceholder,
            treeCheckedStrategy = _props5.treeCheckedStrategy,
            locale = _props5.locale;
        var _v2n = this.state._v2n;


        var treeSelectTotalValue = totalValue; // all the leaf nodes

        // calculate total value
        if (treeCheckStrictly) {
            // all the nodes
            treeSelectTotalValue = util_obj.values(_v2n);
        } else if (treeCheckedStrategy === 'all') {
            // all
            treeSelectTotalValue = util_obj.values(_v2n);
        } else if (treeCheckedStrategy === 'parent') {
            // totalValue is pointless when treeCheckedStrategy = 'parent'
            treeSelectTotalValue = undefined;
        }

        // custom render function
        if (maxTagPlaceholder) {
            return maxTagPlaceholder(value, treeSelectTotalValue);
        }

        // default render function
        if (treeCheckedStrategy === 'parent') {
            // don't show totalValue when treeCheckedStrategy = 'parent'
            return '' + util_str.template(locale.shortMaxTagPlaceholder, {
                selected: value.length
            });
        }
        return '' + util_str.template(locale.maxTagPlaceholder, {
            selected: value.length,
            total: treeSelectTotalValue.length
        });
    };

    /*eslint-enable*/


    TreeSelect.prototype.render = function render() {
        var _props6 = this.props,
            prefix = _props6.prefix,
            size = _props6.size,
            placeholder = _props6.placeholder,
            disabled = _props6.disabled,
            hasArrow = _props6.hasArrow,
            hasBorder = _props6.hasBorder,
            hasClear = _props6.hasClear,
            label = _props6.label,
            readOnly = _props6.readOnly,
            autoWidth = _props6.autoWidth,
            popupStyle = _props6.popupStyle,
            popupClassName = _props6.popupClassName,
            showSearch = _props6.showSearch,
            multiple = _props6.multiple,
            treeCheckable = _props6.treeCheckable,
            treeCheckStrictly = _props6.treeCheckStrictly,
            className = _props6.className,
            popupContainer = _props6.popupContainer,
            popupProps = _props6.popupProps,
            followTrigger = _props6.followTrigger,
            isPreview = _props6.isPreview,
            dataSource = _props6.dataSource,
            tagInline = _props6.tagInline;

        var others = util_obj.pickOthers(Object.keys(TreeSelect.propTypes), this.props);
        var _state5 = this.state,
            value = _state5.value,
            visible = _state5.visible;

        // if (non-leaf 节点可选 & 父子节点选中状态需要联动)，需要额外计算父子节点间的联动关系

        var valueForSelect = treeCheckable && !treeCheckStrictly ? this.getValueForSelect(value) : value;

        var data = this.getData(valueForSelect, true);
        if (!multiple && !treeCheckable) {
            data = data[0];
        }

        if (isPreview) {
            return this.renderPreview(data, others);
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_select, extends_default()({
            prefix: prefix,
            className: className,
            size: size,
            hasBorder: hasBorder,
            hasArrow: hasArrow,
            hasClear: hasClear,
            placeholder: placeholder,
            disabled: disabled,
            autoWidth: autoWidth,
            label: label,
            readOnly: readOnly,
            ref: this.saveSelectRef,
            dataSource: dataSource,
            value: data,
            onChange: this.handleChange,
            visible: visible,
            onVisibleChange: this.handleVisibleChange,
            showSearch: showSearch,
            onSearch: this.handleSearch,
            onSearchClear: this.handleSearchClear,
            popupContainer: popupContainer,
            popupStyle: popupStyle,
            popupClassName: popupClassName,
            popupProps: popupProps,
            followTrigger: followTrigger,
            tagInline: tagInline,
            maxTagPlaceholder: this.renderMaxTagPlaceholder
        }, others, {
            onRemove: this.handleRemove,
            onKeyDown: this.handleKeyDown,
            popupContent: this.renderPopupContent(),
            mode: treeCheckable || multiple ? 'multiple' : 'single'
        }));
    };

    return TreeSelect;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), tree_select__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    pure: _prop_types_15_8_1_prop_types_default.a.bool,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 树节点
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 选择框大小
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 选择框占位符
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有下拉箭头
     */
    hasArrow: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有边框
     */
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否有清空按钮
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义内联 label
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否只读，只读模式下可以展开弹层但不能选择
     */
    readOnly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 下拉框是否与选择器对齐
     */
    autoWidth: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 数据源，该属性优先级高于 children
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.object),
    /**
     * value/defaultValue 在 dataSource 中不存在时，是否展示
     * @version 1.25
     */
    preserveNonExistentValue: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * （受控）当前值
     */
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.any)]),
    /**
     * （非受控）默认值
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.string, _prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.any)]),
    /**
     * 选中值改变时触发的回调函数
     * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组
     * @param {Object|Array} data 选中的数据，包括 value, label, pos, key属性，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否一行显示，仅在 multiple 和 treeCheckable 为 true 时生效
     * @version 1.25
     */
    tagInline: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 隐藏多余 tag 时显示的内容，在 tagInline 生效时起作用
     * @param {Object[]} selectedValues 当前已选中的元素
     * @param {Object[]} totalValues 总待选元素
     * @returns {reactNode}
     * @version 1.25
     */
    maxTagPlaceholder: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否显示搜索框
     */
    showSearch: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 在搜索框中输入时触发的回调函数
     * @param {String} keyword 输入的关键字
     */
    onSearch: _prop_types_15_8_1_prop_types_default.a.func,
    onSearchClear: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 无数据时显示内容
     */
    notFoundContent: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 是否支持多选
     */
    multiple: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 下拉框中的树是否支持勾选节点的复选框
     */
    treeCheckable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 下拉框中的树勾选节点复选框是否完全受控（父子节点选中状态不再关联）
     */
    treeCheckStrictly: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 定义选中时回填的方式
     * @enumdesc 返回所有选中的节点, 父子节点都选中时只返回父节点, 父子节点都选中时只返回子节点
     */
    treeCheckedStrategy: _prop_types_15_8_1_prop_types_default.a.oneOf(['all', 'parent', 'child']),
    /**
     * 下拉框中的树是否默认展开所有节点
     */
    treeDefaultExpandAll: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 下拉框中的树默认展开节点key的数组
     */
    treeDefaultExpandedKeys: _prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string),
    /**
     * 下拉框中的树异步加载数据的函数，使用请参考[Tree的异步加载数据Demo](https://fusion.design/pc/component/basic/tree#%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE)
     * @param {ReactElement} node 被点击展开的节点
     */
    treeLoadData: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 透传到 Tree 的属性对象
     */
    treeProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 初始下拉框是否显示
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 当前下拉框是否显示
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 下拉框显示或关闭时触发事件的回调函数
     * @param {Boolean} visible 是否显示
     * @param {String} type 触发显示关闭的操作类型
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 下拉框自定义样式对象
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 下拉框样式自定义类名
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 下拉框挂载的容器节点
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 透传到 Popup 的属性对象
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Array<data>} value 选择值 { label: , value:}
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否是不可变数据
     * @version 1.23
     */
    immutable: _prop_types_15_8_1_prop_types_default.a.bool
}, tree_select__class.defaultProps = {
    prefix: 'next-',
    pure: false,
    locale: locale_zh_cn.TreeSelect,
    size: 'medium',
    disabled: false,
    hasArrow: true,
    hasBorder: true,
    hasClear: false,
    autoWidth: true,
    defaultValue: null,
    onChange: tree_select_noop,
    tagInline: false,
    showSearch: false,
    onSearch: tree_select_noop,
    onSearchClear: tree_select_noop,
    notFoundContent: 'Not Found',
    multiple: false,
    treeCheckable: false,
    treeCheckStrictly: false,
    treeCheckedStrategy: 'parent',
    treeDefaultExpandAll: false,
    treeDefaultExpandedKeys: [],
    treeProps: {},
    defaultVisible: false,
    onVisibleChange: tree_select_noop,
    useVirtual: false,
    /**
     * TODO
     * 目前 select/cascade select 是默认支持的，在 2.x 版本中 tree-select 也将默认支持
     */
    preserveNonExistentValue: false
}, tree_select__temp);
tree_select_TreeSelect.displayName = 'TreeSelect';


tree_select_TreeSelect.Node = tree_select_TreeNode;

/* harmony default export */ var tree_select = (Object(react_lifecycles_compat_es["polyfill"])(tree_select_TreeSelect));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/tree-select/index.js





/* harmony default export */ var es_tree_select = (config_provider.config(tree_select, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('shape' in props) {
            deprecated('shape', 'hasBorder', 'TreeSelect');

            var _props = props,
                shape = _props.shape,
                others = objectWithoutProperties_default()(_props, ['shape']);

            props = extends_default()({ hasBorder: shape !== 'arrow-only' }, others);
        }

        if ('container' in props) {
            deprecated('container', 'popupContainer', 'TreeSelect');

            var _props2 = props,
                container = _props2.container,
                _others = objectWithoutProperties_default()(_props2, ['container']);

            props = extends_default()({ popupContainer: container }, _others);
        }

        return props;
    }
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/typography/text.js






var text__class, text__temp;




/**
 * Typography.Text
 * @order 3
 */
var text_Text = (text__temp = text__class = function (_Component) {
    inherits_default()(Text, _Component);

    function Text() {
        classCallCheck_default()(this, Text);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Text.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            component = _props.component,
            strong = _props.strong,
            underline = _props.underline,
            deleteProp = _props.delete,
            code = _props.code,
            mark = _props.mark,
            rtl = _props.rtl,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'component', 'strong', 'underline', 'delete', 'code', 'mark', 'rtl']);

        var Tag = component;
        var children = this.props.children;

        if (strong) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'strong',
                null,
                children
            );
        }

        if (underline) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'u',
                null,
                children
            );
        }

        if (deleteProp) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'del',
                null,
                children
            );
        }

        if (code) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'code',
                null,
                children
            );
        }

        if (mark) {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'mark',
                null,
                children
            );
        }

        if (rtl) {
            others.dir = 'rtl';
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            Tag,
            extends_default()({}, others, {
                className: (className || '') + ' ' + prefix + 'typography'
            }),
            children
        );
    };

    return Text;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), text__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 添加删除线样式
     */
    delete: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 添加标记样式
     */
    mark: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 添加下划线样式
     */
    underline: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否加粗
     */
    strong: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 添加代码样式
     */
    code: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool
}, text__class.defaultProps = {
    prefix: 'next-',
    delete: false,
    mark: false,
    underline: false,
    strong: false,
    code: false,
    component: 'span',
    rtl: false
}, text__temp);
text_Text.displayName = 'Text';


/* harmony default export */ var typography_text = (config_provider.config(text_Text));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/typography/typography.js




var typography__class, typography__temp;





/**
 * Typography
 * @description 继承 Typography.Text API
 * @order 0
 */
var typography_Typography = (typography__temp = typography__class = function (_Component) {
    inherits_default()(Typography, _Component);

    function Typography() {
        classCallCheck_default()(this, Typography);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Typography.prototype.render = function render() {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(typography_text, this.props);
    };

    return Typography;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), typography__class.propTypes = {
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType
}, typography__class.defaultProps = {
    component: 'article'
}, typography__temp);
typography_Typography.displayName = 'Typography';


/* harmony default export */ var typography = (typography_Typography);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/typography/paragraph.js






var typography_paragraph__class, typography_paragraph__temp;







/**
 * Typography.Paragraph
 * @description 继承 Typography.Text 的 API
 * @order 2
 */
var typography_paragraph_Paragraph = (typography_paragraph__temp = typography_paragraph__class = function (_React$Component) {
    inherits_default()(Paragraph, _React$Component);

    function Paragraph() {
        classCallCheck_default()(this, Paragraph);

        return possibleConstructorReturn_default()(this, _React$Component.apply(this, arguments));
    }

    Paragraph.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            component = _props.component,
            others = objectWithoutProperties_default()(_props, ['prefix', 'className', 'component']);

        var cls = _classnames_2_3_1_classnames_default()(prefix + 'typography-paragraph', className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(typography_text, extends_default()({}, others, { className: cls, component: component }));
    };

    return Paragraph;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), typography_paragraph__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 设置标签类型
     */
    component: _prop_types_15_8_1_prop_types_default.a.elementType
}, typography_paragraph__class.defaultProps = {
    prefix: 'next-',
    type: 'long',
    size: 'medium',
    component: 'p'
}, typography_paragraph__temp);
typography_paragraph_Paragraph.displayName = 'Paragraph';


/* harmony default export */ var typography_paragraph = (config_provider.config(typography_paragraph_Paragraph));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/typography/title.js










/* harmony default export */ var typography_title = (function (Tag) {
    var _class, _temp;

    /**
     * Typography.Title
     * @description 分为 H1, H2, H3, H4, H5, H6 不同的组件，表示不同层级，继承 Typography.Text API
     * @order 1
     */
    var Title = (_temp = _class = function (_Component) {
        inherits_default()(Title, _Component);

        function Title() {
            classCallCheck_default()(this, Title);

            return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
        }

        Title.prototype.render = function render() {
            var _props = this.props,
                prefix = _props.prefix,
                className = _props.className,
                others = objectWithoutProperties_default()(_props, ['prefix', 'className']);

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(typography_text, extends_default()({}, others, {
                component: Tag,
                className: (className || '') + ' ' + prefix + 'typography-title'
            }));
        };

        return Title;
    }(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), _class.propTypes = {
        prefix: _prop_types_15_8_1_prop_types_default.a.string
    }, _class.defaultProps = {
        prefix: 'next-'
    }, _temp);
    Title.displayName = 'Title';


    Title.displayName = Tag.toUpperCase();
    return config_provider.config(Title);
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/typography/index.js





typography.Paragraph = typography_paragraph;
typography.H1 = typography_title('h1');
typography.H2 = typography_title('h2');
typography.H3 = typography_title('h3');
typography.H4 = typography_title('h4');
typography.H5 = typography_title('h5');
typography.H6 = typography_title('h6');
typography.Text = typography_text;

/* harmony default export */ var es_typography = (typography);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/util.js
var util_now = +new Date();

/**
 * 生成唯一的id
 * @return {String} uid
 */
function util_uid() {
    return (util_now++).toString(36);
}

function fileToObject(file) {
    if (!file.uid) {
        file.uid = util_uid();
    }

    return {
        lastModified: file.lastModified,
        lastModifiedDate: file.lastModifiedDate,
        name: file.filename || file.name,
        size: file.size,
        type: file.type,
        uid: file.uid,
        error: file.error,
        percent: 0,
        originFileObj: file
    };
}

function getFileItem(file, fileList) {
    var matchKey = file.uid !== undefined ? 'uid' : 'name';
    return fileList.filter(function (item) {
        return item[matchKey] === file[matchKey];
    })[0];
}

function removeFileItem(file, fileList) {
    var matchKey = file.uid !== undefined ? 'uid' : 'name';
    var removed = fileList.filter(function (item) {
        return item[matchKey] !== file[matchKey];
    });
    if (removed.length === fileList.length) {
        return null;
    }
    return removed;
}

// https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL
function previewFile(file, callback) {
    var reader = new FileReader();
    reader.onloadend = function () {
        return callback(reader.result);
    };
    reader.readAsDataURL(file);
}

var errorCode = {
    EXCEED_LIMIT: 'EXCEED_LIMIT',
    BEFOREUPLOAD_REJECT: 'BEFOREUPLOAD_REJECT',
    RESPONSE_FAIL: 'RESPONSE_FAIL'
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/transform.js

// compatible with 0.x version
/* istanbul ignore next */
var transform_transform = function transform(props, deprecated) {
    var listType = props.listType,
        defaultFileList = props.defaultFileList,
        fileList = props.fileList,
        others = objectWithoutProperties_default()(props, ['listType', 'defaultFileList', 'fileList']);

    var newprops = others;

    if (listType === 'text-image') {
        deprecated('listType=text-image', 'listType=image', 'Upload');
        newprops.listType = 'image';
    } else if (listType === 'picture-card') {
        deprecated('listType=picture-card', 'listType=card', 'Upload');
        newprops.listType = 'card';
    } else {
        newprops.listType = listType;
    }

    if ('defaultFileList' in props) {
        deprecated('defaultFileList', 'defaultValue', 'Upload');
        newprops.defaultValue = defaultFileList;
    }

    if ('fileList' in props) {
        deprecated('fileList', 'value', 'Upload');
        newprops.value = fileList;
    }

    return newprops;
};

/* harmony default export */ var upload_transform = (transform_transform);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/base.js





var upload_base_Base = function (_Component) {
    inherits_default()(Base, _Component);

    function Base() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Base);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.saveUploaderRef = function (ref) {
            /* istanbul ignore if */
            if (ref && typeof ref.getInstance === 'function') {
                _this.uploaderRef = ref.getInstance();
            } else {
                _this.uploaderRef = ref;
            }
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    /* istanbul ignore next */
    Base.prototype.abort = function abort(file) {
        /* istanbul ignore next */
        this.uploaderRef.abort(file);
    };
    /* istanbul ignore next */


    Base.prototype.startUpload = function startUpload() {
        /* istanbul ignore next */
        this.uploaderRef.startUpload();
    };

    /* istanbul ignore next */
    Base.prototype.isUploading = function isUploading() {
        /* istanbul ignore next */
        return this.uploaderRef.isUploading();
    };

    return Base;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]);

upload_base_Base.displayName = 'Base';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/runtime/request.js
/**
 * clone from https://github.com/react-component/upload/blob/master/src/request.js
 */

function getError(option, xhr, msg) {
    msg = msg || 'cannot post ' + option.action + ' ' + xhr.status + '\'';
    var err = new Error(msg);
    err.status = xhr.status;
    err.method = option.method;
    err.url = option.action;
    return err;
}

function getBody(xhr) {
    var text = xhr.responseText || xhr.response;
    if (!text) {
        return text;
    }

    try {
        return JSON.parse(text);
    } catch (e) {
        return text;
    }
}

// option {
//  onProgress: (event: { percent: number }): void,
//  onError: (event: Error, body?: Object): void,
//  onSuccess: (body: Object): void,
//  data: Object,
//  filename: String,
//  file: File,
//  withCredentials: Boolean,
//  action: String,
//  headers: Object,
//  method: String
//  timeout: Number
// }
function request_upload(option) {
    var xhr = new XMLHttpRequest();

    if (option.onProgress && xhr.upload) {
        xhr.upload.onprogress = function progress(e) {
            if (e.total > 0) {
                e.percent = e.loaded / e.total * 100;
            }
            option.onProgress(e);
        };
    }

    var formData = new FormData();

    if (option.data) {
        Object.keys(option.data).forEach(function (key) {
            formData.append(key, option.data[key]);
        });
    }
    if (option.file instanceof Blob) {
        formData.append(option.filename, option.file, option.file.name);
    } else {
        formData.append(option.filename, option.file);
    }

    xhr.onerror = function error(e) {
        option.onError(e);
    };

    xhr.onload = function onload() {
        // allow success when 2xx status
        // see https://github.com/react-component/upload/issues/34
        if (xhr.status < 200 || xhr.status >= 300) {
            return option.onError(getError(option, xhr), getBody(xhr));
        }

        option.onSuccess(getBody(xhr), xhr);
    };

    option.method = option.method || 'POST';
    xhr.open(option.method, option.action, true);

    // In Internet Explorer, the timeout property may be set only after calling the open() method and before calling the send() method.
    // see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout
    var timeout = option.timeout;


    if (typeof timeout === 'number' && timeout > 0) {
        xhr.timeout = timeout;
        xhr.ontimeout = function () {
            var msg = 'Upload abort for exceeding time (timeout: ' + timeout + 'ms)';
            option.onError(getError(option, xhr, msg), getBody(xhr));
        };
    }

    // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179
    if (option.withCredentials && 'withCredentials' in xhr) {
        xhr.withCredentials = true;
    }

    var headers = option.headers || {};

    // when set headers['X-Requested-With'] = null , can close default XHR header
    // see https://github.com/react-component/upload/issues/33
    if (headers['X-Requested-With'] !== null) {
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    }

    for (var h in headers) {
        if (headers.hasOwnProperty(h) && headers[h] !== null) {
            xhr.setRequestHeader(h, headers[h]);
        }
    }
    xhr.send(formData);

    return {
        abort: function abort() {
            xhr.abort();
        }
    };
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/runtime/uploader.js






var uploader_noop = func.noop;

var uploader_Uploader = function () {
    function Uploader(options) {
        classCallCheck_default()(this, Uploader);

        this.options = extends_default()({
            beforeUpload: uploader_noop,
            onProgress: uploader_noop,
            onSuccess: uploader_noop,
            onError: uploader_noop,
            data: {},
            name: 'file',
            method: 'post'
        }, options);
        this.reqs = {};
    }

    Uploader.prototype.setOptions = function setOptions(options) {
        extends_default()(this.options, options);
    };

    Uploader.prototype.startUpload = function startUpload(files) {
        var _this = this;

        var filesArr = files.length ? Array.prototype.slice.call(files) : [files];
        filesArr.forEach(function (file) {
            file.uid = file.uid || util_uid();
            _this.upload(file);
        });
    };

    Uploader.prototype.abort = function abort(file) {
        var reqs = this.reqs;

        if (file) {
            var _uid = file;
            if (file && file.uid) {
                _uid = file.uid;
            }
            if (reqs[_uid]) {
                reqs[_uid].abort();
                delete reqs[_uid];
            }
        } else {
            Object.keys(reqs).forEach(function (uid) {
                if (reqs[uid] && reqs[uid].abort) {
                    reqs[uid].abort();
                }
                delete reqs[uid];
            });
        }
    };

    Uploader.prototype.upload = function upload(file) {
        var _this2 = this;

        var _options = this.options,
            beforeUpload = _options.beforeUpload,
            action = _options.action,
            name = _options.name,
            headers = _options.headers,
            timeout = _options.timeout,
            withCredentials = _options.withCredentials,
            method = _options.method,
            data = _options.data;

        var before = beforeUpload(file, {
            action: action,
            name: name,
            headers: headers,
            timeout: timeout,
            withCredentials: withCredentials,
            method: method,
            data: data
        });

        func.promiseCall(before, function (options) {
            if (options === false) {
                var err = new Error(errorCode.BEFOREUPLOAD_REJECT);
                err.code = errorCode.BEFOREUPLOAD_REJECT;
                return _this2.options.onError(err, null, file);
            }
            _this2.post(file, util_obj.isPlainObject(options) ? options : undefined);
        }, function (error) {
            var err = void 0;
            if (error) {
                err = error;
            } else {
                err = new Error(errorCode.BEFOREUPLOAD_REJECT);
                err.code = errorCode.BEFOREUPLOAD_REJECT;
            }
            _this2.options.onError(err, null, file);
        });
    };

    Uploader.prototype.post = function post(file) {
        var _this3 = this;

        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var requestOptions = extends_default()({}, this.options, options);
        var action = requestOptions.action,
            name = requestOptions.name,
            headers = requestOptions.headers,
            timeout = requestOptions.timeout,
            withCredentials = requestOptions.withCredentials,
            _onProgress = requestOptions.onProgress,
            _onSuccess = requestOptions.onSuccess,
            _onError = requestOptions.onError,
            method = requestOptions.method;


        var data = requestOptions.data;
        if (typeof data === 'function') {
            data = data(file);
        }

        var uid = file.uid;


        var request = typeof requestOptions.request === 'function' ? requestOptions.request : request_upload;
        this.reqs[uid] = request({
            action: action,
            filename: name,
            file: file,
            data: data,
            timeout: timeout,
            headers: headers,
            withCredentials: withCredentials,
            method: method,
            onProgress: function onProgress(e) {
                _onProgress(e, file);
            },
            onSuccess: function onSuccess(ret) {
                delete _this3.reqs[uid];
                _onSuccess(ret, file);
            },
            onError: function onError(err, ret) {
                delete _this3.reqs[uid];
                _onError(err, ret, file);
            }
        });
    };

    return Uploader;
}();


// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/runtime/selecter.js





var selecter__class, selecter__temp2;






var selecter_noop = func.noop;

/**
 * Upload.Selecter
 * @description [底层能力] 可自定义样式的文件选择器
 */

var selecter_Selecter = (selecter__temp2 = selecter__class = function (_React$Component) {
    inherits_default()(Selecter, _React$Component);

    function Selecter() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Selecter);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onSelect = function (e) {
            var files = e.target.files;
            var filesArr = files.length ? Array.prototype.slice.call(files) : [files];

            filesArr.forEach(function (file) {
                file.uid = util_uid();
            });

            _this.props.onSelect(filesArr);
        }, _this.onClick = function () {
            var el = _this.fileRef;
            if (!el) {
                return;
            }
            // NOTE: 在 IE 下，el.value = '' 在 el.click() 之后，会触发 input[type=file] 两次 onChange
            el.value = '';
            el.click();
        }, _this.onKeyDown = function (e) {
            if (e.key === 'Enter') {
                _this.onClick();
            }
        }, _this.onDrop = function (e) {
            e.preventDefault();

            var files = e.dataTransfer.files;
            var filesArr = Array.prototype.slice.call(files);

            _this.props.onDrop(filesArr);
        }, _this.onDragOver = function (e) {
            e.preventDefault();
            _this.props.onDragOver(e);
        }, _this.saveFileRef = function (ref) {
            _this.fileRef = ref;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    /**
     * 点击上传按钮
     * @return {void}
     */


    /**
     * 键盘事件
     * @param  {SyntheticEvent} e
     * @return {void}
     */


    /**
     * 拖拽
     * @param  {SyntheticEvent} e
     * @return {void}
     */


    Selecter.prototype.render = function render() {
        var _props = this.props,
            accept = _props.accept,
            multiple = _props.multiple,
            capture = _props.capture,
            webkitdirectory = _props.webkitdirectory,
            children = _props.children,
            id = _props.id,
            disabled = _props.disabled,
            dragable = _props.dragable,
            style = _props.style,
            className = _props.className,
            name = _props.name;


        var events = {};
        if (!disabled) {
            events = extends_default()({
                onClick: this.onClick,
                onKeyDown: this.onKeyDown,
                tabIndex: '0'
            }, dragable ? {
                onDrop: this.onDrop,
                onDragOver: this.onDragOver,
                onDragLeave: this.props.onDragLeave
            } : {});
        }

        var otherProps = {};
        if (webkitdirectory) {
            otherProps.webkitdirectory = '';
        }
        if (capture) {
            otherProps.capture = capture;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ role: 'application', style: style, className: className }, events),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('input', extends_default()({}, otherProps, {
                type: 'file',
                name: name,
                id: id,
                ref: this.saveFileRef,
                style: { display: 'none' },
                accept: accept,
                'aria-hidden': true,
                multiple: multiple,
                onChange: this.onSelect,
                disabled: disabled
            })),
            children
        );
    };

    return Selecter;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), selecter__class.propTypes = {
    id: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否禁用上传功能
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件
     */
    multiple: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否支持上传文件夹，仅在 chorme 下生效
     */
    webkitdirectory: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 调用系统设备媒体
     */
    capture: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否支持拖拽上传，`ie10+` 支持。
     */
    dragable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)
     */
    accept: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 文件选择回调
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽经过回调
     */
    onDragOver: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽离开回调
     */
    onDragLeave: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 拖拽完成回调
     */
    onDrop: _prop_types_15_8_1_prop_types_default.a.func,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    name: _prop_types_15_8_1_prop_types_default.a.string
}, selecter__class.defaultProps = {
    name: 'file',
    multiple: false,
    onSelect: selecter_noop,
    onDragOver: selecter_noop,
    onDragLeave: selecter_noop,
    onDrop: selecter_noop
}, selecter__temp2);
selecter_Selecter.displayName = 'Selecter';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/runtime/html5-uploader.js






var html5_uploader__class, html5_uploader__temp2;







var html5_uploader_Html5Uploader = (html5_uploader__temp2 = html5_uploader__class = function (_Component) {
    inherits_default()(Html5Uploader, _Component);

    function Html5Uploader() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Html5Uploader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.getUploadOptions = function (props) {
            return {
                action: props.action,
                name: props.name,
                timeout: props.timeout,
                method: props.method,
                beforeUpload: props.beforeUpload,
                onProgress: props.onProgress,
                onSuccess: props.onSuccess,
                onError: props.onError,
                withCredentials: props.withCredentials,
                headers: props.headers,
                data: props.data,
                request: props.request
            };
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Html5Uploader.prototype.componentDidMount = function componentDidMount() {
        var props = this.props;

        var options = this.getUploadOptions(props);
        this.uploader = new uploader_Uploader(options);
    };

    Html5Uploader.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var preOptions = this.getUploadOptions(prevProps);
        var options = this.getUploadOptions(this.props);

        var keys = Object.keys(options);

        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (options[key] !== preOptions[key]) {
                this.uploader.setOptions(options);
                return;
            }
        }
    };

    Html5Uploader.prototype.componentWillUnmount = function componentWillUnmount() {
        this.abort();
    };

    Html5Uploader.prototype.abort = function abort(file) {
        this.uploader.abort(file);
    };

    Html5Uploader.prototype.startUpload = function startUpload(fileList) {
        this.uploader.startUpload(fileList);
    };

    Html5Uploader.prototype.render = function render() {
        var _props = this.props,
            accept = _props.accept,
            multiple = _props.multiple,
            webkitdirectory = _props.webkitdirectory,
            children = _props.children,
            id = _props.id,
            disabled = _props.disabled,
            dragable = _props.dragable,
            style = _props.style,
            className = _props.className,
            onSelect = _props.onSelect,
            onDragOver = _props.onDragOver,
            onDragLeave = _props.onDragLeave,
            onDrop = _props.onDrop,
            name = _props.name,
            others = objectWithoutProperties_default()(_props, ['accept', 'multiple', 'webkitdirectory', 'children', 'id', 'disabled', 'dragable', 'style', 'className', 'onSelect', 'onDragOver', 'onDragLeave', 'onDrop', 'name']);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            selecter_Selecter,
            extends_default()({}, others, {
                id: id,
                accept: accept,
                multiple: multiple,
                webkitdirectory: webkitdirectory,
                dragable: dragable,
                disabled: disabled,
                className: className,
                style: style,
                onSelect: onSelect,
                onDragOver: onDragOver,
                onDragLeave: onDragLeave,
                onDrop: onDrop,
                name: name
            }),
            children
        );
    };

    return Html5Uploader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), html5_uploader__class.propTypes = extends_default()({}, selecter_Selecter.propTypes, {
    /**
     * 上传的地址
     */
    action: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)
     */
    accept: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 上传额外传参
     */
    data: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.func]),
    /**
     * 设置上传的请求头部
     */
    headers: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否允许请求携带 cookie
     */
    withCredentials: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 上传文件之前
     * @param {Object} file 文件对象
     * @return {Boolean} `false` 停止上传
     */
    beforeUpload: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 正在上传文件的钩子，参数为上传的事件以及文件
     */
    onProgress: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 上传成功回调函数，参数为请求下响应信息以及文件
     */
    onSuccess: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 上传失败回调函数，参数为上传失败的信息、响应信息以及文件
     */
    onError: _prop_types_15_8_1_prop_types_default.a.func,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 上传超时,单位ms
     */
    timeout: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 上传方法
     */
    method: _prop_types_15_8_1_prop_types_default.a.oneOf(['post', 'put']),
    request: _prop_types_15_8_1_prop_types_default.a.func
}), html5_uploader__class.defaultProps = extends_default()({}, selecter_Selecter.defaultProps, {
    name: 'file',
    multiple: false,
    withCredentials: true,
    beforeUpload: func.noop,
    onSelect: func.noop,
    onDragOver: func.noop,
    onDragLeave: func.noop,
    onDrop: func.noop,
    onProgress: func.noop,
    onSuccess: func.noop,
    onError: func.noop,
    onAbort: func.noop,
    method: 'post'
}), html5_uploader__temp2);
html5_uploader_Html5Uploader.displayName = 'Html5Uploader';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/runtime/iframe-uploader.js





var iframe_uploader__class, iframe_uploader__temp, iframe_uploader__initialiseProps;

/* istanbul ignore file */






var INPUT_STYLE = {
    position: 'absolute',
    top: 0,
    right: 0,
    fontSize: 9999,
    zIndex: 9999,
    opacity: 0,
    outline: 'none',
    cursor: 'pointer'
};

var iframe_uploader_IframeUploader = (iframe_uploader__temp = iframe_uploader__class = function (_React$Component) {
    inherits_default()(IframeUploader, _React$Component);

    function IframeUploader(props) {
        classCallCheck_default()(this, IframeUploader);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        iframe_uploader__initialiseProps.call(_this);

        _this.domain = typeof document !== 'undefined' && document.domain ? document.domain : '';
        _this.uid = util_uid();
        return _this;
    }

    IframeUploader.prototype.componentDidMount = function componentDidMount() {
        this.updateInputWH();
    };

    IframeUploader.prototype.componentDidUpdate = function componentDidUpdate() {
        this.updateInputWH();
    };

    IframeUploader.prototype.startUpload = function startUpload() {
        this.upload(this.file);
    };

    IframeUploader.prototype.upload = function upload(file) {
        var _this2 = this;

        if (!this.state.uploading) {
            // eslint-disable-next-line
            this.state.uploading = true;
            this.setState({ uploading: true });
        }

        var _props = this.props,
            beforeUpload = _props.beforeUpload,
            action = _props.action,
            name = _props.name,
            data = _props.data;

        if (!beforeUpload) {
            return this.post(file);
        }
        var requestData = {
            action: action,
            name: name,
            data: data
        };
        var before = beforeUpload(file, requestData);
        if (before && before.then) {
            before.then(function (data) {
                _this2.post(file, data);
            }, function () {
                _this2.endUpload();
            });
        } else if (before !== false) {
            this.post(file, util_obj.isPlainObject(before) ? before : undefined);
        } else {
            this.endUpload();
        }
    };

    IframeUploader.prototype.endUpload = function endUpload() {
        this.file = {};
        if (this.state.uploading) {
            // eslint-disable-next-line
            this.state.uploading = false;
            this.setState({ uploading: false });
        }
    };

    IframeUploader.prototype.updateInputWH = function updateInputWH() {
        var rootNode = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(this);
        var inputNode = this.inputEl;
        inputNode.style.height = rootNode.offsetHeight + 'px';
        inputNode.style.width = rootNode.offsetWidth + 'px';
    };

    IframeUploader.prototype.abort = function abort(file) {
        if (file) {
            var _uid = file;
            if (file && file.uid) {
                _uid = file.uid;
            }
            if (_uid === this.file.uid) {
                this.endUpload();
            }
        } else {
            this.endUpload();
        }
    };

    IframeUploader.prototype.post = function post(file) {
        var requestOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var formNode = this.formEl;
        var dataSpan = this.dataEl;
        var fileInput = this.inputEl;

        var propsData = this.props.data;
        if (typeof propsData === 'function') {
            propsData = propsData(file);
        }

        var action = requestOption.action,
            name = requestOption.name,
            data = requestOption.data;

        if (name) {
            fileInput.setAttribute('name', name);
        }

        if (action) {
            formNode.setAttribute('action', action);
        }

        if (data) {
            propsData = data;
        }

        var inputs = document.createDocumentFragment();
        for (var key in propsData) {
            if (data.hasOwnProperty(key)) {
                var input = document.createElement('input');
                input.setAttribute('name', key);
                input.value = propsData[key];
                inputs.appendChild(input);
            }
        }
        dataSpan.appendChild(inputs);
        formNode.submit();
        dataSpan.innerHTML = '';
        this.props.onStart(file);
    };

    IframeUploader.prototype.render = function render() {
        var _props2 = this.props,
            disabled = _props2.disabled,
            className = _props2.className,
            children = _props2.children,
            accept = _props2.accept,
            name = _props2.name,
            style = _props2.style;
        var uid = this.uid;

        var iframeName = name + '-' + uid + '-iframe';

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            {
                className: className,
                style: extends_default()({
                    position: 'relative',
                    zIndex: 0,
                    display: 'inline-block'
                }, style)
            },
            !disabled ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('iframe', {
                ref: this.saveIFrameRef,
                name: iframeName,
                onLoad: this.onLoad,
                style: { display: 'none' }
            }) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'form',
                {
                    ref: this.saveFormRef,
                    method: 'post',
                    action: this.props.action,
                    encType: 'multipart/form-data',
                    target: iframeName
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('input', { name: '_documentDomain', value: this.domain, type: 'hidden' }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('span', { ref: this.saveDataRef }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('input', {
                    ref: this.saveInputRef,
                    type: 'file',
                    accept: accept,
                    name: name,
                    onChange: this.onSelect,
                    style: INPUT_STYLE
                })
            ),
            children
        );
    };

    return IframeUploader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), iframe_uploader__class.propTypes = {
    style: _prop_types_15_8_1_prop_types_default.a.object,
    action: _prop_types_15_8_1_prop_types_default.a.string.isRequired,
    name: _prop_types_15_8_1_prop_types_default.a.string.isRequired,
    data: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.func]),
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    headers: _prop_types_15_8_1_prop_types_default.a.object,
    autoUpload: _prop_types_15_8_1_prop_types_default.a.bool,
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    beforeUpload: _prop_types_15_8_1_prop_types_default.a.func,
    onStart: _prop_types_15_8_1_prop_types_default.a.func,
    onSuccess: _prop_types_15_8_1_prop_types_default.a.func,
    onError: _prop_types_15_8_1_prop_types_default.a.func,
    accept: _prop_types_15_8_1_prop_types_default.a.string
}, iframe_uploader__class.defaultProps = {
    name: 'file',
    onSelect: func.noop,
    beforeUpload: func.noop,
    onStart: func.noop,
    onSuccess: func.noop,
    onError: func.noop,
    onAbort: func.noop
}, iframe_uploader__initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.state = {
        uploading: false
    };
    this.file = {};
    this.uid = '';

    this.onLoad = function () {
        if (!_this3.state.uploading) {
            return;
        }
        var props = _this3.props,
            file = _this3.file;

        var response = void 0;
        try {
            var doc = _this3.iFrameEl.contentDocument;
            var script = doc.getElementsByTagName('script')[0];
            if (script && script.parentNode === doc.body) {
                doc.body.removeChild(script);
            }
            response = doc.body.innerHTML;
            props.onSuccess(response, file);
        } catch (err) {
            log.warning('cross domain error for Upload. Maybe server should return document.domain script.');
            response = 'cross-domain';
            props.onError(err, null, file);
        }
        _this3.endUpload();
    };

    this.onSelect = function (e) {
        _this3.file = {
            uid: util_uid(),
            name: e.target.value
        };
        _this3.props.onSelect([_this3.file]);
    };

    this.saveIFrameRef = function (ref) {
        _this3.iFrameEl = ref;
    };

    this.saveFormRef = function (ref) {
        _this3.formEl = ref;
    };

    this.saveDataRef = function (ref) {
        _this3.dataEl = ref;
    };

    this.saveInputRef = function (ref) {
        _this3.inputEl = ref;
    };
}, iframe_uploader__temp);
iframe_uploader_IframeUploader.displayName = 'IframeUploader';


/* harmony default export */ var iframe_uploader = (iframe_uploader_IframeUploader);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/runtime/index.js








var runtime_Uploader = function (_React$Component) {
    inherits_default()(Uploader, _React$Component);

    function Uploader() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Uploader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            Component: html5_uploader_Html5Uploader
        }, _this.saveUploaderRef = function (ref) {
            _this.uploaderRef = ref;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Uploader.prototype.componentDidMount = function componentDidMount() {
        if (typeof File === 'undefined') {
            /* eslint react/no-did-mount-set-state:0 */
            this.setState({
                Component: iframe_uploader
            });
        }
    };

    Uploader.prototype.abort = function abort(file) {
        this.uploaderRef.abort(file);
    };

    Uploader.prototype.startUpload = function startUpload(files) {
        this.uploaderRef.startUpload(files);
    };

    Uploader.prototype.render = function render() {
        var Uploader = this.state.Component;
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(Uploader, extends_default()({}, this.props, { ref: this.saveUploaderRef }));
    };

    return Uploader;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component);

runtime_Uploader.displayName = 'Uploader';

// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/list.js





var list__class, list__temp2;















var list_isIE9 = util_env.ieVersion === 9;

var list_List = (list__temp2 = list__class = function (_Component) {
    inherits_default()(List, _Component);

    function List() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, List);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClose = function (file) {
            var _this$props = _this.props,
                onRemove = _this$props.onRemove,
                uploader = _this$props.uploader;


            var remove = onRemove(file);

            func.promiseCall(remove, function () {
                uploader && uploader.removeFile(file);
            });
        }, _this.handleCancel = function (file) {
            var _this$props2 = _this.props,
                onCancel = _this$props2.onCancel,
                uploader = _this$props2.uploader;

            var cancel = onCancel(file);

            func.promiseCall(cancel, function () {
                uploader && uploader.abort(file);
            });
        }, _this.onImageError = function (file, obj) {
            obj.onerror = null;
            _this.props.onImageError(obj, file);
        }, _this.onSelect = function (oldfile, files) {
            var uploader = _this.props.uploader;
            uploader && files.length && uploader.replaceWithNewFile(oldfile, files[0]);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    List.prototype.componentDidUpdate = function componentDidUpdate() {
        var _this2 = this;

        var _props = this.props,
            listType = _props.listType,
            useDataURL = _props.useDataURL,
            value = _props.value;

        if (listType !== 'image' && listType !== 'card') {
            return;
        }

        useDataURL && value.forEach(function (file) {
            if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File) || file.imgURL !== undefined) {
                return;
            }
            file.imgURL = '';
            previewFile(file.originFileObj, function (previewDataUrl) {
                file.imgURL = previewDataUrl;
                _this2.forceUpdate();
            });
        });
    };

    List.prototype.onPreview = function onPreview(file, e) {
        var onPreview = this.props.onPreview;


        if (!onPreview) {
            return;
        }
        // e.preventDefault();
        return onPreview(file, e);
    };

    List.prototype.getInfo = function getInfo(file) {
        var _classNames;

        var prefixCls = this.props.prefix + 'upload';
        var downloadURL = file.downloadURL || file.url;
        var imgURL = file.imgURL || file.url;
        var size = this.sizeCaculator(file.size);
        var itemCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefixCls + '-list-item'] = true, _classNames[prefixCls + '-list-item-' + file.state] = file.state, _classNames[prefixCls + '-list-item-error-with-msg'] = file.state === 'error' && file.errorMsg, _classNames));
        var alt = file.name || file.alt;
        return { prefixCls: prefixCls, downloadURL: downloadURL, imgURL: imgURL, size: size, itemCls: itemCls, alt: alt };
    };
    // transfer size from number to xx K/ XxxM / xxG


    List.prototype.sizeCaculator = function sizeCaculator(size) {
        var fileSize = parseFloat(size, 10);
        // fileSize为浮点数 用 < 0.000001 替代 === 0
        if (isNaN(fileSize) || fileSize < 0.0000001) {
            return 0;
        }
        var SIZE_SUFFIX = ['B', 'K', 'M', 'G', 'T', 'P'];
        var suffixIndex = 0;

        // 在Mac上实验发现 取1024造成显示的大小和实际大小不一致
        // 因为单位制不同 见 https://superuser.com/questions/938234/size-of-files-in-windows-os-its-kb-or-kb
        var BIT_NUMBER_SYSTEM = 1024;
        while (fileSize >= BIT_NUMBER_SYSTEM && suffixIndex < SIZE_SUFFIX.length) {
            suffixIndex++;
            fileSize /= BIT_NUMBER_SYSTEM;
        }

        var suffix = SIZE_SUFFIX[suffixIndex];
        fileSize = fileSize.toFixed(2);

        return '' + fileSize + suffix;
    };

    List.prototype.getTextList = function getTextList(file) {
        var _this3 = this;

        var _props2 = this.props,
            locale = _props2.locale,
            extraRender = _props2.extraRender,
            actionRender = _props2.actionRender,
            progressProps = _props2.progressProps,
            rtl = _props2.rtl,
            fileNameRender = _props2.fileNameRender,
            previewOnFileName = _props2.previewOnFileName;

        var _getInfo = this.getInfo(file),
            prefixCls = _getInfo.prefixCls,
            downloadURL = _getInfo.downloadURL,
            size = _getInfo.size,
            itemCls = _getInfo.itemCls;

        var onClick = function onClick() {
            return file.state === 'uploading' ? _this3.handleCancel(file) : _this3.handleClose(file);
        };
        var onKeyDown = function onKeyDown(e) {
            if (e.keyCode === KEYCODE.ENTER) {
                onClick();
            }
        };
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: itemCls, key: file.uid || file.name },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-name-wrap' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'a',
                    {
                        onClick: previewOnFileName ? this.onPreview.bind(this, file) : func.noop,
                        href: downloadURL,
                        target: '_blank',
                        style: { pointerEvents: downloadURL ? '' : 'none' },
                        className: prefixCls + '-list-item-name'
                    },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'span',
                        null,
                        fileNameRender(file)
                    ),
                    !!size && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'span',
                        { className: prefixCls + '-list-item-size', dir: rtl ? 'rtl' : undefined },
                        '(',
                        size,
                        ')'
                    ),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'span',
                        { className: prefixCls + '-extra' },
                        extraRender(file)
                    )
                )
            ),
            file.state === 'uploading' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-progress' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(progress, extends_default()({
                    size: 'medium',
                    percent: file.percent,
                    textRender: func.noop,
                    rtl: rtl
                }, progressProps))
            ) : null,
            file.state === 'error' && file.errorMsg ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-error-msg' },
                file.errorMsg
            ) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefixCls + '-list-item-op' },
                actionRender(file),
                this.props.closable ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    type: 'close',
                    size: 'large',
                    role: 'button',
                    'aria-label': locale.upload.delete,
                    tabIndex: '0',
                    onClick: onClick,
                    onKeyDown: onKeyDown
                }) : null
            )
        );
    };

    List.prototype.getImageList = function getImageList(file) {
        var _this4 = this;

        var _props3 = this.props,
            extraRender = _props3.extraRender,
            actionRender = _props3.actionRender,
            progressProps = _props3.progressProps,
            rtl = _props3.rtl,
            fileNameRender = _props3.fileNameRender,
            previewOnFileName = _props3.previewOnFileName;

        var _getInfo2 = this.getInfo(file),
            prefixCls = _getInfo2.prefixCls,
            downloadURL = _getInfo2.downloadURL,
            imgURL = _getInfo2.imgURL,
            size = _getInfo2.size,
            itemCls = _getInfo2.itemCls,
            alt = _getInfo2.alt;

        var img = null;

        var onClick = function onClick() {
            return file.state === 'uploading' ? _this4.handleCancel(file) : _this4.handleClose(file);
        };
        var onKeyDown = function onKeyDown(e) {
            if (e.keyCode === KEYCODE.ENTER) {
                onClick();
            }
        };

        if (file.state === 'uploading' || file.state === 'selected' && !imgURL) {
            img = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'picture' });
        } else if (file.state === 'error') {
            img = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'cry' });
        } else {
            img = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('img', {
                src: imgURL,
                onError: this.onImageError.bind(this, file),
                tabIndex: '0',
                alt: alt,
                onClick: this.onPreview.bind(this, file)
            });
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: itemCls, key: file.uid || file.name },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-thumbnail' },
                img
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefixCls + '-list-item-op' },
                actionRender(file),
                this.props.closable ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                    type: 'close',
                    size: 'large',
                    tabIndex: '0',
                    role: 'button',
                    onClick: onClick,
                    onKeyDown: onKeyDown
                }) : null
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'a',
                {
                    onClick: previewOnFileName ? this.onPreview.bind(this, file) : func.noop,
                    href: downloadURL,
                    target: '_blank',
                    style: { pointerEvents: downloadURL ? '' : 'none' },
                    className: prefixCls + '-list-item-name'
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    null,
                    fileNameRender(file)
                ),
                !!size && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { className: prefixCls + '-list-item-size', dir: rtl ? 'rtl' : undefined },
                    '(',
                    size,
                    ')'
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { className: prefixCls + '-extra' },
                    extraRender(file)
                )
            ),
            file.state === 'uploading' ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-progress' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(progress, extends_default()({ size: 'medium', percent: file.percent, textRender: func.noop }, progressProps))
            ) : null,
            file.state === 'error' && file.errorMsg ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-error-msg' },
                file.errorMsg
            ) : null
        );
    };

    List.prototype.getPictureCardList = function getPictureCardList(file, isPreview) {
        var _this5 = this;

        var _props4 = this.props,
            locale = _props4.locale,
            progressProps = _props4.progressProps,
            fileNameRender = _props4.fileNameRender,
            itemRender = _props4.itemRender,
            showDownload = _props4.showDownload;

        var _getInfo3 = this.getInfo(file),
            prefixCls = _getInfo3.prefixCls,
            downloadURL = _getInfo3.downloadURL,
            imgURL = _getInfo3.imgURL,
            itemCls = _getInfo3.itemCls,
            alt = _getInfo3.alt;

        var state = isPreview ? '' : file.state;

        var img = null;

        if (state === 'uploading' || state === 'selected' && !imgURL) {
            img = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-handler' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'picture' }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    { text: true, onClick: function onClick() {
                            return _this5.handleCancel(file);
                        } },
                    locale.card.cancel
                )
            );
        } else if (state === 'error') {
            img = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-handler' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'cry' })
            );
        } else {
            img = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('img', {
                src: imgURL,
                tabIndex: '0',
                alt: alt,
                onError: this.onImageError.bind(this, file),
                onClick: this.onPreview.bind(this, file)
            });
        }

        var onClose = function onClose() {
            return _this5.handleClose(file);
        };
        var onKeyDownClose = function onKeyDownClose(e) {
            if (e.keyCode === KEYCODE.ENTER) {
                onClose();
            }
        };

        var item = null;
        if (state === 'uploading') {
            item = [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-thumbnail', key: 'img' },
                img
            ), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-progress', key: 'progress' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(progress, extends_default()({ size: 'medium', percent: file.percent, textRender: func.noop }, progressProps))
            )];
        } else {
            /* eslint-disable no-lonely-if */
            if (typeof itemRender === 'function') {
                // 不处理上传态和选择态，太过复杂
                item = itemRender(file, { remove: onClose });
            } else {
                var Uploader = this.props.uploader || { props: {} };
                var UploaderProps = Uploader.props;

                // TODO: 2.x 中逻辑会修改为，只要有showDownload，那就有下载按钮（不管有没有downloadURL）
                item = [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefixCls + '-list-item-thumbnail', key: 'img' },
                    img
                ), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'span',
                    { key: 'tool', className: prefixCls + '-tool' },
                    state !== 'error' && showDownload && downloadURL ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'a',
                        {
                            href: downloadURL,
                            target: '_blank',
                            className: prefixCls + '-tool-item ' + prefixCls + '-tool-download-link'
                        },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                            type: 'download',
                            'aria-label': locale.card.download,
                            className: prefixCls + '-tool-download-icon'
                        })
                    ) : null,
                    this.props.reUpload && !isPreview && !list_isIE9 ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        selecter_Selecter,
                        {
                            className: prefixCls + '-tool-item ' + prefixCls + '-tool-reupload',
                            accept: UploaderProps.accept,
                            name: UploaderProps.fileKeyName,
                            onSelect: this.onSelect.bind(this, file)
                        },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'edit', className: prefixCls + '-tool-reupload-icon' })
                    ) : null,
                    this.props.closable && !isPreview ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'span',
                        { className: prefixCls + '-tool-item ' + prefixCls + '-tool-close' },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, {
                            type: 'ashbin',
                            'aria-label': locale.card.delete,
                            tabIndex: '0',
                            role: 'button',
                            onClick: onClose,
                            onKeyDown: onKeyDownClose
                        })
                    ) : null
                )];
            }
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: itemCls, key: file.uid || file.name },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-list-item-wrapper' },
                item
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefixCls + '-list-item-name' },
                fileNameRender(file)
            )
        );
    };

    List.prototype.render = function render() {
        var _this6 = this,
            _classNames3;

        var _props5 = this.props,
            listType = _props5.listType,
            children = _props5.children,
            prefix = _props5.prefix,
            rtl = _props5.rtl,
            className = _props5.className,
            isPreview = _props5.isPreview;

        var prefixCls = prefix + 'upload';

        var list = [];
        if (isPreview) {
            var _classNames2;

            var previewCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'form-preview'] = true, _classNames2[className] = !!className, _classNames2));
            list = this.props.value.map(function (file) {
                if (!file) {
                    return null;
                }

                var downloadURL = file.downloadURL,
                    imgURL = file.imgURL,
                    name = file.name;

                if (listType === 'text') {
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: previewCls },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'a',
                            { href: downloadURL, target: '_blank' },
                            name
                        )
                    );
                } else if (listType === 'image' || listType === 'card') {
                    return _this6.getPictureCardList(file, true);
                }
                return null;
            });
        } else {
            list = this.props.value.map(function (file) {
                if (!file) {
                    return null;
                }

                if (listType === 'text') {
                    return _this6.getTextList(file);
                } else if (listType === 'image') {
                    return _this6.getImageList(file);
                } else if (listType === 'card') {
                    return _this6.getPictureCardList(file);
                }
                return null;
            });
        }

        if (rtl && listType === 'card' && Array.isArray(list)) {
            list = list.reverse();
        }
        var _listType = isPreview && listType === 'image' ? 'card' : this.props.listType;
        var listclassNames = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefixCls + '-list'] = true, _classNames3[prefixCls + '-list-' + _listType] = true, _classNames3[prefixCls + '-ie9'] = list_isIE9, _classNames3), className);

        var others = util_obj.pickAttrsWith(this.props, 'data-');
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, others, { className: listclassNames, dir: rtl ? 'rtl' : undefined }),
            rtl ? children : list,
            rtl ? list : children
        );
    };

    return List;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), list__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 多语言
     */
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 文件列表，数据格式请参考 文件对象
     */
    listType: _prop_types_15_8_1_prop_types_default.a.oneOf(['text', 'image', 'card']),
    /**
     * 文件列表
     */
    value: _prop_types_15_8_1_prop_types_default.a.array,
    closable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 删除文件回调(支持Promise)
     */
    onRemove: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 取消上传回调(支持Promise)
     */
    onCancel: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 头像加载出错回调
     */
    onImageError: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击图片回调
     */
    onPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击文件名时触发 onPreview
     */
    previewOnFileName: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义额外渲染
     */
    extraRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义操作渲染
     */
    actionRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 卡片自定义渲染（目前只支持 Card)
     * @param {Object} file 文件对象
     * @param {Object} {remove} remove:删除回调
     * @retuns {ReactNode} React元素
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 透传给Progress props
     */
    progressProps: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    uploader: _prop_types_15_8_1_prop_types_default.a.any,
    showDownload: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 可选参数，是否本地预览
     */
    useDataURL: _prop_types_15_8_1_prop_types_default.a.bool,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    fileNameRender: _prop_types_15_8_1_prop_types_default.a.func
}, list__class.defaultProps = {
    prefix: 'next-',
    listType: 'text',
    value: [],
    locale: locale_zh_cn.Upload,
    closable: false,
    showDownload: true,
    onRemove: func.noop,
    onCancel: func.noop,
    extraRender: func.noop,
    actionRender: func.noop,
    onImageError: func.noop,
    progressProps: {},
    fileNameRender: function fileNameRender(file) {
        return file.name;
    },
    previewOnFileName: false
}, list__temp2);

// Wrap <List> with <ConfigProvider> to avoid context missing if it is
// referenced by other internal modules.
// https://github.com/alibaba-fusion/next/blob/build/1.13.9/src/upload/upload.jsx#L521

list_List.displayName = 'List';
/* harmony default export */ var upload_list = (config_provider.config(list_List, {
    componentName: 'Upload',
    transform: upload_transform
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/upload.js






var upload__class, upload__temp, upload__initialiseProps;














var upload_noop = func.noop;

/**
 * Upload
 */
var upload_Upload = (upload__temp = upload__class = function (_Base) {
    inherits_default()(Upload, _Base);

    function Upload(props) {
        classCallCheck_default()(this, Upload);

        var _this = possibleConstructorReturn_default()(this, _Base.call(this, props));

        upload__initialiseProps.call(_this);

        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: !Array.isArray(value) ? [] : value,
            uploading: false
        };
        return _this;
    }

    Upload.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        // 上传中不允许做受控修改
        if ('value' in nextProps && nextProps.value !== prevState.value && !prevState.uploading) {
            return {
                value: !Array.isArray(nextProps.value) ? [] : nextProps.value
            };
        }

        return null;
    };

    /**
     * 对外暴露API, 添加文件
     * @param files
     */
    Upload.prototype.selectFiles = function selectFiles(files) {
        var filesArr = files.length ? Array.prototype.slice.call(files) : [files];

        this.onSelect(filesArr);
    };

    Upload.prototype.uploadFiles = function uploadFiles(files) {
        // NOTE: drag上传，当鼠标松开的时候回执行 onDrop，但此时onChange还没出发所以 value=[], 必须提前标识上传中
        this.state.uploading = true;
        var fileList = files.filter(function (file) {
            if (file.state === 'selected') {
                file.state = 'uploading';
                return true;
            }
            return false;
        }).map(function (file) {
            return file.originFileObj;
        });

        fileList.length && this.uploaderRef.startUpload(fileList);
    };

    /**
     * 对外暴露api，控制文件上传
     */


    Upload.prototype.startUpload = function startUpload() {
        this.uploadFiles(this.state.value);
    };

    Upload.prototype.replaceFiles = function replaceFiles(old, current) {
        var targetItem = getFileItem(old, this.state.value);
        if (!targetItem) {
            return;
        }

        current.uid = old.uid;
        targetItem.originFileObj = current;
    };

    // 替换掉队列里面的文件


    Upload.prototype.isUploading = function isUploading() {
        return this.state.uploading;
    };

    /**
     * 删除文件
     * @param {File} file
     * @return {void}
     */


    /**
     * 取消上传
     * @param {File} file
     * @return {void}
     */


    Upload.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            listType = _props.listType,
            prefix = _props.prefix,
            dragable = _props.dragable,
            shape = _props.shape,
            className = _props.className,
            style = _props.style,
            useDataURL = _props.useDataURL,
            disabled = _props.disabled,
            limit = _props.limit,
            closable = _props.closable,
            beforeUpload = _props.beforeUpload,
            readonly = _props.readonly,
            onRemove = _props.onRemove,
            onCancel = _props.onCancel,
            onPreview = _props.onPreview,
            list = _props.list,
            extraRender = _props.extraRender,
            progressProps = _props.progressProps,
            rtl = _props.rtl,
            isPreview = _props.isPreview,
            renderPreview = _props.renderPreview,
            name = _props.name,
            _props$fileKeyName = _props.fileKeyName,
            fileKeyName = _props$fileKeyName === undefined ? name : _props$fileKeyName,
            fileNameRender = _props.fileNameRender,
            actionRender = _props.actionRender,
            previewOnFileName = _props.previewOnFileName,
            others = objectWithoutProperties_default()(_props, ['listType', 'prefix', 'dragable', 'shape', 'className', 'style', 'useDataURL', 'disabled', 'limit', 'closable', 'beforeUpload', 'readonly', 'onRemove', 'onCancel', 'onPreview', 'list', 'extraRender', 'progressProps', 'rtl', 'isPreview', 'renderPreview', 'name', 'fileKeyName', 'fileNameRender', 'actionRender', 'previewOnFileName']);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'upload'] = true, _classNames[prefix + 'upload-dragable'] = dragable, _classNames[prefix + 'disabled'] = disabled, _classNames[prefix + 'readonly'] = readonly, _classNames[className] = className, _classNames));

        var isExceedLimit = this.state.value.length >= limit;
        var innerCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'upload-inner'] = true, _classNames2[prefix + 'hidden'] = isExceedLimit, _classNames2));

        var children = this.props.children;
        if (shape === 'card') {
            var _classNames3;

            var cardCls = _classnames_2_3_1_classnames_default()((_classNames3 = {}, _classNames3[prefix + 'upload-card'] = true, _classNames3[prefix + 'disabled'] = disabled, _classNames3));
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: cardCls },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'large', type: 'add', className: prefix + 'upload-add-icon' }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { tabIndex: '0', role: 'button', className: prefix + 'upload-text' },
                    children
                )
            );
        }

        if (isPreview) {
            if (typeof renderPreview === 'function') {
                var _classNames4;

                var previewCls = _classnames_2_3_1_classnames_default()((_classNames4 = {}, _classNames4[prefix + 'form-preview'] = true, _classNames4[className] = !!className, _classNames4));
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { style: style, className: previewCls },
                    renderPreview(this.state.value, this.props)
                );
            }

            if (listType) {
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(upload_list, { isPreview: true, listType: listType, style: style, className: className, value: this.state.value });
            }

            return null;
        }

        // disabled 状态下把 remove函数替换成禁止 remove的函数
        var onRemoveFunc = disabled ? func.prevent : onRemove;
        var otherAttributes = util_obj.pickAttrsWith(this.props, 'data-');
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ className: cls, style: style }, otherAttributes),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                runtime_Uploader,
                extends_default()({}, others, {
                    name: fileKeyName,
                    beforeUpload: beforeUpload,
                    dragable: dragable,
                    disabled: disabled || isExceedLimit,
                    className: innerCls,
                    onSelect: this.onSelect,
                    onDrop: this.onDrop,
                    onProgress: this.onProgress,
                    onSuccess: this.onSuccess,
                    onError: this.onError,
                    ref: this.saveUploaderRef
                }),
                children
            ),
            listType || list ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(upload_list, {
                useDataURL: useDataURL,
                fileNameRender: fileNameRender,
                actionRender: actionRender,
                uploader: this,
                listType: listType,
                value: this.state.value,
                closable: closable,
                onRemove: onRemoveFunc,
                progressProps: progressProps,
                onCancel: onCancel,
                onPreview: onPreview,
                extraRender: extraRender,
                rtl: rtl,
                previewOnFileName: previewOnFileName
            }) : null
        );
    };

    return Upload;
}(upload_base_Base), upload__class.displayName = 'Upload', upload__class.propTypes = extends_default()({}, html5_uploader_Html5Uploader.propTypes, upload_list.propTypes, {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string.isRequired,
    /**
     * 上传的地址
     */
    action: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 文件列表
     */
    value: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 默认文件列表
     */
    defaultValue: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 上传按钮形状
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['card']),
    /**
     * 上传列表的样式
     * @enumdesc 文字, 图文, 卡片
     */
    listType: _prop_types_15_8_1_prop_types_default.a.oneOf(['text', 'image', 'card']),
    list: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 文件名字段
     */
    name: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 上传额外传参
     */
    data: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.object, _prop_types_15_8_1_prop_types_default.a.func]),
    /**
     * 数据格式化函数，配合自定义 action 使用，参数为服务器的响应数据，详见 [formatter](#formater)
     * @param {Object} response 返回
     * @param {File} file 文件对象
     */
    formatter: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 最大文件上传个数
     */
    limit: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 设置上传超时,单位ms
     */
    timeout: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 可选参数，是否支持拖拽上传，`ie10+` 支持。
     */
    dragable: _prop_types_15_8_1_prop_types_default.a.bool,
    closable: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 可选参数，是否本地预览
     */
    useDataURL: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 可选参数，是否禁用上传功能
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 选择文件回调
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 上传中
     */
    onProgress: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 上传文件改变时的状态
     * @param {Object} info 文件事件对象
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 可选参数，上传成功回调函数，参数为请求下响应信息以及文件
     * @param {Object} file 文件
     * @param {Array<Object>} value 值
     */
    onSuccess: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 可选参数, 用于校验文件,afterSelect仅在 autoUpload=false 的时候生效,autoUpload=true时,可以使用beforeUpload完全可以替代该功能.
     * @param {Object} file
     * @returns {Boolean} 返回false会阻止上传,其他则表示正常
     */
    afterSelect: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 移除文件回调函数
     * @param {Object} file 文件
     * @returns {Boolean|Promise} 返回 false、Promise.resolve(false)、 Promise.reject() 将阻止文件删除
     */
    onRemove: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 可选参数，上传失败回调函数，参数为上传失败的信息、响应信息以及文件
     * @param {Object} file 出错的文件
     * @param {Array} value 当前值
     */
    onError: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 可选参数, 详见 [beforeUpload](#beforeUpload)
     * @param {Object} file 所有文件
     * @param {Object} options 参数
     * @returns {Boolean|Object|Promise} 返回值作用见demo
     */
    beforeUpload: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 放文件
     */
    onDrop: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义class
     */
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 自定义内联样式
     */
    style: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 子元素
     */
    children: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 自动上传
     */
    autoUpload: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义上传方法
     * @param {Object} option
     * @return {Object} object with abort method
     */
    request: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 透传给Progress props
     */
    progressProps: _prop_types_15_8_1_prop_types_default.a.object,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 文件对象的 key name
     * @version 1.21
     */
    fileKeyName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * list 的自定义文件名渲染
     * @param {Object} file 文件
     * @return {Node} react node
     */
    fileNameRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 操作区域额外渲染
     * @param {Object} file 文件
     * @return {Node} react node
     */
    actionRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击文件名时触发 onPreview
     * @version 1.24
     */
    previewOnFileName: _prop_types_15_8_1_prop_types_default.a.bool
}), upload__class.defaultProps = extends_default()({}, html5_uploader_Html5Uploader.defaultProps, {
    prefix: 'next-',
    limit: Infinity,
    autoUpload: true,
    closable: true,
    onSelect: upload_noop,
    onProgress: upload_noop,
    onChange: upload_noop,
    onSuccess: upload_noop,
    onRemove: upload_noop,
    onError: upload_noop,
    onDrop: upload_noop,
    beforeUpload: upload_noop,
    afterSelect: upload_noop,
    previewOnFileName: false
}), upload__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onSelect = function (files) {
        var _props2 = _this2.props,
            autoUpload = _props2.autoUpload,
            afterSelect = _props2.afterSelect,
            onSelect = _props2.onSelect,
            limit = _props2.limit;
        // 总数

        var total = _this2.state.value.length + files.length;
        // 差额
        var less = limit - _this2.state.value.length;
        if (less <= 0) {
            // 差额不足 则不上传
            return;
        }

        var fileList = files.map(function (file) {
            var objFile = fileToObject(file);
            objFile.state = 'selected';
            return objFile;
        });

        // 默认全量上传
        var uploadFiles = fileList;
        var discardFiles = [];
        if (total > limit) {
            // 全量上传总数会超过limit 但是 还有差额
            uploadFiles = fileList.slice(0, less);
            discardFiles = fileList.slice(less);
        }

        var value = _this2.state.value.concat(fileList);

        /* eslint-disable-next */
        _this2.state.value = value;

        if (autoUpload) {
            _this2.uploadFiles(uploadFiles);
        }

        onSelect(uploadFiles, value);
        discardFiles.forEach(function (file) {
            // 丢弃的文件
            var err = new Error(errorCode.EXCEED_LIMIT);
            err.code = errorCode.EXCEED_LIMIT;
            _this2.onError(err, null, file);
        });

        if (!autoUpload) {
            uploadFiles.forEach(function (file) {
                var isPassed = afterSelect(file);
                func.promiseCall(isPassed, func.noop, function (error) {
                    _this2.onError(error, null, file); // TODO: handle error message
                });
            });
            _this2.onChange(value, uploadFiles);
        }
    };

    this.onDrop = function (files) {
        _this2.onSelect(files);
        _this2.props.onDrop(files);
    };

    this.replaceWithNewFile = function (old, current) {
        var newFile = fileToObject(current);
        newFile.state = 'selected';

        var matchKey = old.uid !== undefined ? 'uid' : 'name';

        var fileList = _this2.state.value;
        for (var i = 0; i < fileList.length; i++) {
            var item = fileList[i];
            if (item[matchKey] === old[matchKey]) {
                fileList.splice(i, 1, newFile);
                break;
            }
        }

        _this2.uploadFiles([newFile]);
        return newFile;
    };

    this.onProgress = function (e, file) {
        _this2.state.uploading = true;

        var value = _this2.state.value;
        var targetItem = getFileItem(file, value);

        if (!targetItem) {
            return;
        }

        extends_default()(targetItem, {
            state: 'uploading',
            percent: e.percent
        });

        _this2.setState({
            value: value
        });

        _this2.props.onProgress(value, targetItem);
    };

    this.onSuccess = function (response, file) {
        var formatter = _this2.props.formatter;


        if (formatter) {
            response = formatter(response, file);
        }

        try {
            if (typeof response === 'string') {
                response = JSON.parse(response);
            }
        } catch (e) {
            e.code = errorCode.RESPONSE_FAIL;
            return _this2.onError(e, response, file);
        }

        if (response.success === false) {
            var err = new Error(response.message || errorCode.RESPONSE_FAIL);
            err.code = errorCode.RESPONSE_FAIL;
            return _this2.onError(err, response, file);
        }

        var value = _this2.state.value;
        var targetItem = getFileItem(file, value);

        if (!targetItem) {
            return;
        }

        extends_default()(targetItem, {
            state: 'done',
            response: response,
            url: response.url,
            downloadURL: response.downloadURL || response.url // 下载地址(可选)
        });

        if (!_this2.props.useDataURL) {
            targetItem.imgURL = response.imgURL || response.url; // 缩略图地址(可选)
        }

        _this2.updateUploadingState();

        _this2.onChange(value, targetItem);
        _this2.props.onSuccess(targetItem, value);
    };

    this.onError = function (err, response, file) {
        var value = _this2.state.value;
        var targetItem = getFileItem(file, value);

        if (!targetItem) {
            return;
        }

        extends_default()(targetItem, {
            state: 'error',
            error: err,
            response: response
        });

        _this2.updateUploadingState();

        _this2.onChange(value, targetItem);
        _this2.props.onError(targetItem, value);
    };

    this.removeFile = function (file) {
        file.state = 'removed';
        _this2.uploaderRef.abort(file); // 删除组件时调用组件的 `abort` 方法中断上传

        var fileList = _this2.state.value;
        var targetItem = getFileItem(file, fileList);
        var index = fileList.indexOf(targetItem);
        if (index !== -1) {
            fileList.splice(index, 1);
            _this2.onChange(fileList, targetItem);
        }
    };

    this.updateUploadingState = function () {
        var inProgress = _this2.state.value.some(function (i) {
            return i.state === 'uploading';
        });
        if (!inProgress) {
            _this2.state.uploading = false;
        }
    };

    this.abort = function (file) {
        var fileList = _this2.state.value;
        var targetItem = getFileItem(file, fileList);
        var index = fileList.indexOf(targetItem);
        if (index !== -1) {
            fileList.splice(index, 1);
            _this2.onChange(fileList, targetItem);
        }
        _this2.uploaderRef.abort(file); // 取消上传时调用组件的 `abort` 方法中断上传
    };

    this.onChange = function (value, file) {
        _this2.setState({
            value: value
        });
        _this2.props.onChange(value, file);
    };
}, upload__temp);


/* harmony default export */ var upload_upload = (Object(react_lifecycles_compat_es["polyfill"])(upload_Upload));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/card.js





var upload_card__class, upload_card__temp, card__initialiseProps;












/**
 * Upload.Card
 * @description 继承 Upload 的 API，除非特别说明
 */
var upload_card_Card = (upload_card__temp = upload_card__class = function (_Base) {
    inherits_default()(Card, _Base);

    function Card(props) {
        classCallCheck_default()(this, Card);

        var _this = possibleConstructorReturn_default()(this, _Base.call(this, props));

        card__initialiseProps.call(_this);

        var value = void 0;
        /* istanbul ignore else */
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: !Array.isArray(value) ? [] : value,
            uploaderRef: _this.uploaderRef
        };
        return _this;
    }
    /* eslint react/no-did-mount-set-state: [0] */


    Card.prototype.componentDidMount = function componentDidMount() {
        this.setState({ uploaderRef: this.uploaderRef });
    };

    Card.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var isUploading = prevState.uploaderRef && prevState.uploaderRef.isUploading();
        if ('value' in nextProps && nextProps.value !== prevState.value && !isUploading) {
            return {
                value: !Array.isArray(nextProps.value) ? [] : [].concat(nextProps.value)
            };
        }

        return null;
    };

    Card.prototype.isUploading = function isUploading() {
        return this.state.uploaderRef.isUploading();
    };

    Card.prototype.saveRef = function saveRef(ref) {
        this.saveUploaderRef(ref);
    };

    Card.prototype.render = function render() {
        var _classNames,
            _this2 = this;

        var _props = this.props,
            action = _props.action,
            disabled = _props.disabled,
            prefix = _props.prefix,
            locale = _props.locale,
            className = _props.className,
            style = _props.style,
            limit = _props.limit,
            onPreview = _props.onPreview,
            onRemove = _props.onRemove,
            onCancel = _props.onCancel,
            timeout = _props.timeout,
            isPreview = _props.isPreview,
            renderPreview = _props.renderPreview,
            itemRender = _props.itemRender,
            reUpload = _props.reUpload,
            showDownload = _props.showDownload;


        var isExceedLimit = this.state.value.length >= limit;
        var uploadButtonCls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'upload-list-item'] = true, _classNames[prefix + 'hidden'] = isExceedLimit, _classNames));

        var children = this.props.children || locale.card.addPhoto;

        var onRemoveFunc = disabled ? func.prevent : onRemove;
        var othersForList = util_obj.pickOthers(Card.propTypes, this.props);
        var othersForUpload = util_obj.pickOthers(upload_list.propTypes, othersForList);

        if (isPreview) {
            if (typeof renderPreview === 'function') {
                var _classNames2;

                var previewCls = _classnames_2_3_1_classnames_default()((_classNames2 = {}, _classNames2[prefix + 'form-preview'] = true, _classNames2[className] = !!className, _classNames2));
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { style: style, className: previewCls },
                    renderPreview(this.state.value, this.props)
                );
            }
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            upload_list,
            extends_default()({
                className: className,
                style: style,
                listType: 'card',
                closable: true,
                locale: locale,
                value: this.state.value,
                onRemove: onRemoveFunc,
                onCancel: onCancel,
                onPreview: onPreview,
                itemRender: itemRender,
                isPreview: isPreview,
                uploader: this.state.uploaderRef,
                reUpload: reUpload,
                showDownload: showDownload
            }, othersForList),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                upload_upload,
                extends_default()({}, othersForUpload, {
                    shape: 'card',
                    prefix: prefix,
                    disabled: disabled,
                    action: action,
                    timeout: timeout,
                    isPreview: isPreview,
                    value: this.state.value,
                    onProgress: this.onProgress,
                    onChange: this.onChange,
                    ref: function ref(_ref) {
                        return _this2.saveRef(_ref);
                    },
                    className: uploadButtonCls
                }),
                children
            )
        );
    };

    return Card;
}(upload_base_Base), upload_card__class.displayName = 'Card', upload_card__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    children: _prop_types_15_8_1_prop_types_default.a.object,
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.array, _prop_types_15_8_1_prop_types_default.a.object]),
    defaultValue: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.array, _prop_types_15_8_1_prop_types_default.a.object]),
    /**
     * 点击图片回调
     */
    onPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 改变时候的回调
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 点击移除的回调
     */
    onRemove: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 取消上传的回调
     */
    onCancel: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 自定义成功和失败的列表渲染方式
     * @param {File} file 文件对象
     * @param {Object} obj {remove: 删除回调}
     * @retuns {ReactNode} React元素
     * @version 1.21
     */
    itemRender: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选择新文件上传并替换
     * @version 1.24
     */
    reUpload: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 展示下载按钮
     * @version 1.24
     */
    showDownload: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 上传中
     */
    onProgress: _prop_types_15_8_1_prop_types_default.a.func,
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func
}, upload_card__class.defaultProps = {
    prefix: 'next-',
    locale: locale_zh_cn.Upload,
    showDownload: true,
    onChange: func.noop,
    onPreview: func.noop,
    onProgress: func.noop
}, card__initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.onProgress = function (value, targetItem) {
        _this3.setState({
            value: value
        });

        _this3.props.onProgress(value, targetItem);
    };

    this.onChange = function (value, file) {
        if (!('value' in _this3.props)) {
            _this3.setState({
                value: value
            });
        }
        _this3.props.onChange(value, file);
    };
}, upload_card__temp);


/* harmony default export */ var upload_card = (Object(react_lifecycles_compat_es["polyfill"])(upload_card_Card));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/dragger.js






var dragger__class, dragger__temp2;









/**
 * Upload.Dragger
 * @description IE10+ 支持。继承 Upload 的 API，除非特别说明
 */
var dragger_Dragger = (dragger__temp2 = dragger__class = function (_React$Component) {
    inherits_default()(Dragger, _React$Component);

    function Dragger() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Dragger);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            dragOver: false
        }, _this.onDragOver = function (e) {
            if (!_this.state.dragOver) {
                _this.setState({
                    dragOver: true
                });
            }

            _this.props.onDragOver(e);
        }, _this.onDragLeave = function (e) {
            _this.setState({
                dragOver: false
            });
            _this.props.onDragLeave(e);
        }, _this.onDrop = function (e) {
            _this.setState({
                dragOver: false
            });
            _this.props.onDrop(e);
        }, _this.saveUploaderRef = function (ref) {
            /* istanbul ignore if */
            if (ref && typeof ref.getInstance === 'function') {
                _this.uploaderRef = ref.getInstance();
            } else {
                _this.uploaderRef = ref;
            }
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    /* istanbul ignore next */
    Dragger.prototype.abort = function abort(file) {
        /* istanbul ignore next */
        this.uploaderRef.abort(file);
    };
    /* istanbul ignore next */


    Dragger.prototype.startUpload = function startUpload() {
        /* istanbul ignore next */
        this.uploaderRef.startUpload();
    };

    Dragger.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            className = _props.className,
            style = _props.style,
            shape = _props.shape,
            locale = _props.locale,
            prefix = _props.prefix,
            listType = _props.listType,
            others = objectWithoutProperties_default()(_props, ['className', 'style', 'shape', 'locale', 'prefix', 'listType']);

        var prefixCls = prefix + 'upload-drag';
        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames['' + prefixCls] = true, _classNames[prefixCls + '-over'] = this.state.dragOver, _classNames[className] = !!className, _classNames));

        var children = this.props.children || external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: cls },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                { className: prefixCls + '-icon' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { size: 'large', className: prefixCls + '-upload-icon' })
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                { className: prefixCls + '-text' },
                locale.drag.text
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'p',
                { className: prefixCls + '-hint' },
                locale.drag.hint
            )
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            upload_upload,
            extends_default()({}, others, {
                prefix: prefix,
                shape: shape,
                listType: listType,
                dragable: true,
                style: style,
                onDragOver: this.onDragOver,
                onDragLeave: this.onDragLeave,
                onDrop: this.onDrop,
                ref: this.saveUploaderRef
            }),
            children
        );
    };

    return Dragger;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), dragger__class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    shape: _prop_types_15_8_1_prop_types_default.a.string,
    onDragOver: _prop_types_15_8_1_prop_types_default.a.func,
    onDragLeave: _prop_types_15_8_1_prop_types_default.a.func,
    onDrop: _prop_types_15_8_1_prop_types_default.a.func,
    limit: _prop_types_15_8_1_prop_types_default.a.number,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    style: _prop_types_15_8_1_prop_types_default.a.object,
    defaultValue: _prop_types_15_8_1_prop_types_default.a.array,
    children: _prop_types_15_8_1_prop_types_default.a.node,
    listType: _prop_types_15_8_1_prop_types_default.a.string,
    timeout: _prop_types_15_8_1_prop_types_default.a.number
}, dragger__class.defaultProps = {
    prefix: 'next-',
    onDragOver: func.noop,
    onDragLeave: func.noop,
    onDrop: func.noop,
    locale: locale_zh_cn.Upload
}, dragger__temp2);
dragger_Dragger.displayName = 'Dragger';


/* harmony default export */ var dragger = (dragger_Dragger);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/upload/index.js

















upload_upload.Card = config_provider.config(upload_card, { componentName: 'Upload' });
upload_upload.Dragger = config_provider.config(dragger, { componentName: 'Upload' });
upload_upload.Selecter = selecter_Selecter;
upload_upload.Uploader = uploader_Uploader;
upload_upload.ErrorCode = errorCode;

// compatible with 0.x version
upload_upload.ImageUpload = config_provider.config(upload_card, {
    componentName: 'Upload',
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        deprecated('Upload.ImageUpload', 'Upload.Card', 'Upload');
        var newprops = upload_transform(props, function () {});
        if (newprops.locale && newprops.locale.image) {
            newprops.locale.card = newprops.locale.image;
        }

        return newprops;
    }
});

// compatible with 0.x version
upload_upload.DragUpload = config_provider.config(dragger, {
    componentName: 'Upload',
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        deprecated('Upload.DragUpload', 'Upload.Dragger', 'Upload');
        var newprops = upload_transform(props, function () {});
        if (!newprops.listType) {
            newprops.listType = 'card';
        }

        return newprops;
    }
});

// compatible with 0.x version
/* istanbul ignore next */
upload_upload.Core = function (_React$Component) {
    inherits_default()(Core, _React$Component);

    function Core(props) {
        classCallCheck_default()(this, Core);

        // eslint-disable-next-line
        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.handleSelect = function (files) {
            _this.uploader.startUpload(files);
        };

        var _this$props = _this.props,
            action = _this$props.action,
            name = _this$props.name,
            method = _this$props.method,
            beforeUpload = _this$props.beforeUpload,
            onProgress = _this$props.onProgress,
            onError = _this$props.onError,
            withCredentials = _this$props.withCredentials,
            headers = _this$props.headers,
            data = _this$props.data,
            onSuccess = _this$props.onSuccess;


        _this.uploader = new uploader_Uploader({
            action: action,
            name: name,
            method: method,
            beforeUpload: beforeUpload,
            onProgress: onProgress,
            onError: onError,
            withCredentials: withCredentials,
            headers: headers,
            data: data,
            onSuccess: onSuccess
        });
        return _this;
    }

    Core.prototype.abort = function abort() {
        this.uploader.abort();
    };

    Core.prototype.render = function render() {
        log.deprecated('Upload.Core', 'Upload.Selecter and Upload.Uploader', 'Upload');

        // eslint-disable-next-line

        var _props = this.props,
            action = _props.action,
            name = _props.name,
            method = _props.method,
            beforeUpload = _props.beforeUpload,
            onProgress = _props.onProgress,
            onError = _props.onError,
            withCredentials = _props.withCredentials,
            headers = _props.headers,
            data = _props.data,
            onSuccess = _props.onSuccess,
            others = objectWithoutProperties_default()(_props, ['action', 'name', 'method', 'beforeUpload', 'onProgress', 'onError', 'withCredentials', 'headers', 'data', 'onSuccess']);

        var props = others;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(selecter_Selecter, extends_default()({}, upload_transform(props, function () {}), {
            onSelect: this.handleSelect
        }));
    };

    return Core;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component);

upload_upload.List = upload_list;

// compatible with 0.x version
/* istanbul ignore next */
upload_upload.CropUpload = function () {
    log.deprecated('Upload.CropUpload', '@alife/bc-next-crop-upload', 'Upload');
    return null;
};

/* harmony default export */ var es_upload = (config_provider.config(upload_upload, {
    transform: upload_transform
}));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/notification/config.js
/* harmony default export */ var notification_config = ({
    offset: [30, 30],
    maxCount: 0,
    size: 'large',
    placement: 'tr',
    duration: 4500,
    getContainer: function getContainer() {
        return document.body;
    }
});
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/notification/index.js






var notification__class, notification__temp;










var getAnimation = function getAnimation(placement) {
    switch (placement) {
        case 'tl':
        case 'bl':
            return 'slideInLeft';
        case 'tr':
        case 'br':
            return 'slideInRight';
        default:
            return null;
    }
};

var notification_Notification = (notification__temp = notification__class = function (_Component) {
    inherits_default()(Notification, _Component);

    function Notification(props) {
        classCallCheck_default()(this, Notification);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props));

        _this.close = function (key) {
            var notifications = _this.state.notifications;

            var index = notifications.findIndex(function (notification) {
                return notification.key === key;
            });

            if (index === -1) return;
            var _notifications$index = notifications[index],
                onClose = _notifications$index.onClose,
                timer = _notifications$index.timer;


            notifications.splice(index, 1);

            var timerIndex = _this.timers.findIndex(function (v) {
                return v === timer;
            });

            if (timerIndex !== -1) {
                _this.timers.splice(timerIndex, 1);
            }

            if (timer) {
                clearTimeout(timer);
            }

            _this.setState({
                notifications: notifications
            });

            if (onClose) {
                onClose();
            }
        };

        _this.open = function (_ref) {
            var key = _ref.key,
                duration = _ref.duration,
                others = objectWithoutProperties_default()(_ref, ['key', 'duration']);

            var notifications = [].concat(_this.state.notifications);
            if (!key) {
                key = guid('notification-');
            }

            var index = notifications.findIndex(function (notification) {
                return notification.key === key;
            });

            if (index !== -1) {
                notifications[index] = extends_default()({}, notifications[index], others);
            } else {
                var timer = void 0;

                if (duration > 0) {
                    timer = setTimeout(function () {
                        _this.close(key);
                    }, duration);
                    _this.timers.push(timer);
                }
                notifications.push(extends_default()({}, others, {
                    key: key,
                    timer: timer
                }));
            }

            if (notification_config.maxCount > 0 && notification_config.maxCount < notifications.length) {
                while (notifications.length > notification_config.maxCount) {
                    var _key = notifications[0].key;

                    _this.close(_key);
                    notifications.splice(0, 1);
                }
            }

            _this.setState({
                notifications: notifications
            });

            return key;
        };

        _this.state = {
            notifications: []
        };
        _this.timers = [];
        return _this;
    }

    Notification.prototype.componentWillUnmount = function componentWillUnmount() {
        this.timers.forEach(function (timer) {
            if (!timer) return;
            clearTimeout(timer);
        });
    };

    Notification.prototype.render = function render() {
        var _ref2;

        var prefix = this.props.prefix;
        var notifications = this.state.notifications;


        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            {
                className: prefix + 'notification',
                style: (_ref2 = {}, _ref2[notification_config.placement.indexOf('b') === 0 ? 'bottom' : 'top'] = notification_config.offset[1], _ref2[notification_config.placement.indexOf('l') !== -1 ? 'left' : 'right'] = notification_config.offset[0], _ref2)
            },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_animate,
                {
                    animationAppear: true,
                    animation: {
                        enter: getAnimation(notification_config.placement),
                        leave: prefix + 'notification-fade-leave'
                    },
                    singleMode: false
                },
                notifications.map(function (_ref3) {
                    var key = _ref3.key,
                        type = _ref3.type,
                        title = _ref3.title,
                        content = _ref3.content,
                        icon = _ref3.icon,
                        onClick = _ref3.onClick,
                        style = _ref3.style,
                        className = _ref3.className;
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        es_message,
                        {
                            key: key,
                            shape: 'toast',
                            type: type,
                            title: title,
                            iconType: icon,
                            closeable: true,
                            animation: false,
                            size: notification_config.size,
                            visible: true,
                            style: style,
                            className: className,
                            onClick: onClick,
                            onClose: function onClose() {
                                return notification_close(key);
                            }
                        },
                        content
                    );
                })
            )
        );
    };

    return Notification;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), notification__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string
}, notification__class.defaultProps = {
    prefix: 'next-'
}, notification__temp);
notification_Notification.displayName = 'Notification';


var ConfigedNotification = config_provider.config(notification_Notification, {
    exportNames: ['open', 'close']
});
var notification_instance = void 0;
var mounting = false;
var waitOpens = [];

function notification_open() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    if (!options.title && !options.content) return;

    var duration = !options.duration && options.duration !== 0 ? notification_config.duration : options.duration;

    if (!notification_instance) {
        if (!options.key) {
            options.key = guid('notification-');
        }

        waitOpens.push(extends_default()({}, options, {
            duration: duration
        }));

        if (!mounting) {
            mounting = true;
            var div = document.createElement('div');
            if (notification_config.getContainer) {
                var root = notification_config.getContainer();
                root.appendChild(div);
            } else {
                document.body.appendChild(div);
            }

            external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.render(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                config_provider,
                config_provider.getContext(),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigedNotification, {
                    ref: function ref(_ref4) {
                        notification_instance = _ref4;
                    }
                })
            ), div, function () {
                waitOpens.forEach(function (item) {
                    return notification_instance.open(item);
                });
                waitOpens = [];
                mounting = false;
            });
        }

        return options.key;
    }

    var key = notification_instance.open(extends_default()({}, options, {
        duration: duration
    }));

    return key;
}

function notification_close(key) {
    if (!notification_instance) {
        var index = waitOpens.findIndex(function (item) {
            return item.key === key;
        });
        waitOpens.splice(index, 1);
        return;
    }

    notification_instance.close(key);
}

function notification_destroy() {
    if (!notification_instance) return;
    var mountNode = external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.findDOMNode(notification_instance).parentNode;
    if (mountNode) {
        external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default.a.unmountComponentAtNode(mountNode);
        mountNode.parentNode.removeChild(mountNode);
    }
}

var levels = {};

['success', 'error', 'warning', 'notice', 'help'].forEach(function (type) {
    levels[type] = function () {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        return notification_open(extends_default()({}, options, {
            type: type
        }));
    };
});
/* harmony default export */ var notification = (extends_default()({
    config: function config() {
        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
            args[_key2] = arguments[_key2];
        }

        return extends_default.a.apply(undefined, [notification_config].concat(args));
    },

    open: notification_open,
    close: notification_close,
    destroy: notification_destroy
}, levels));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/divider/index.js





var es_divider__class, es_divider__temp;








/**
 * Divider
 */
var es_divider_Divider = (es_divider__temp = es_divider__class = function (_Component) {
    inherits_default()(Divider, _Component);

    function Divider() {
        classCallCheck_default()(this, Divider);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    Divider.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            dashed = _props.dashed,
            direction = _props.direction,
            orientation = _props.orientation,
            children = _props.children;

        var others = util_obj.pickOthers(Divider.propTypes, this.props);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'divider'] = true, _classNames[prefix + 'divider-dashed'] = !!dashed, _classNames[prefix + 'divider-' + direction] = !!direction, _classNames[prefix + 'divider-with-text-' + orientation] = !!orientation && children, _classNames), className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({ role: 'separator', className: cls }, others),
            children && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'span',
                { className: prefix + 'divider-inner-text' },
                children
            )
        );
    };

    return Divider;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), es_divider__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 是否为虚线
     */
    dashed: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 线是水平还是垂直类型
     */
    direction: _prop_types_15_8_1_prop_types_default.a.oneOf(['hoz', 'ver']),
    /**
     * 分割线标题的位置
     */
    orientation: _prop_types_15_8_1_prop_types_default.a.oneOf(['left', 'right', 'center'])
}, es_divider__class.defaultProps = {
    prefix: 'next-',
    direction: 'hoz',
    orientation: 'center',
    dashed: false
}, es_divider__temp);
es_divider_Divider.displayName = 'Divider';


/* harmony default export */ var es_divider = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(es_divider_Divider)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/avatar/index.js





var avatar__class, avatar__temp2;








/**
 * Avatar
 */
var avatar_Avatar = (avatar__temp2 = avatar__class = function (_Component) {
    inherits_default()(Avatar, _Component);

    function Avatar() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, Avatar);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
            isImgExist: true
        }, _this.handleImgLoadError = function () {
            var onError = _this.props.onError;

            var errorFlag = onError ? onError() : undefined;
            if (errorFlag !== false) {
                _this.setState({ isImgExist: false });
            }
        }, _this.getIconSize = function (avatarSize) {
            return typeof avatarSize === 'number' ? avatarSize / 2 : avatarSize;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    Avatar.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (prevProps.src !== this.props.src) {
            // eslint-disable-next-line react/no-did-update-set-state
            this.setState({ isImgExist: true });
        }
    };

    Avatar.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            style = _props.style,
            size = _props.size,
            icon = _props.icon,
            alt = _props.alt,
            srcSet = _props.srcSet,
            shape = _props.shape,
            src = _props.src;
        var isImgExist = this.state.isImgExist;
        var children = this.props.children;


        var others = util_obj.pickOthers(Avatar.propTypes, this.props);

        var cls = _classnames_2_3_1_classnames_default()((_classNames = {}, _classNames[prefix + 'avatar'] = true, _classNames[prefix + 'avatar-' + shape] = !!shape, _classNames[prefix + 'avatar-image'] = src && isImgExist, _classNames[prefix + 'avatar-' + size] = typeof size === 'string', _classNames), className);

        var sizeStyle = typeof size === 'number' ? {
            width: size,
            height: size,
            lineHeight: size + 'px',
            fontSize: icon ? size / 2 : 18
        } : {};

        var iconSize = this.getIconSize(size);
        if (src) {
            if (isImgExist) {
                children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('img', { src: src, srcSet: srcSet, onError: this.handleImgLoadError, alt: alt });
            } else {
                children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'picture', size: iconSize });
            }
        } else if (typeof icon === 'string') {
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: icon, size: iconSize });
        } else if (icon) {
            var newIconSize = 'size' in icon.props ? icon.props.size : iconSize;
            children = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(icon, { size: newIconSize });
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'span',
            extends_default()({ className: cls, style: extends_default()({}, sizeStyle, style) }, others),
            children
        );
    };

    return Avatar;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), avatar__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 头像的大小
     * @enumdesc 小,中,大
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']), _prop_types_15_8_1_prop_types_default.a.number]),
    /**
     * 头像的形状
     * @enumdesc 圆形,方形
     */
    shape: _prop_types_15_8_1_prop_types_default.a.oneOf(['circle', 'square']),
    /**
     * icon 类头像的图标类型，可设为 Icon 的 `type` 或 `ReactNode`
     */
    icon: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.node, _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 图片类头像的资源地址
     */
    src: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 图片加载失败的事件，返回 false 会关闭组件默认的 fallback 行为
     */
    onError: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 图像无法显示时的 alt 替代文本
     */
    alt: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 图片类头像响应式资源地址
     */
    srcSet: _prop_types_15_8_1_prop_types_default.a.string
}, avatar__class.defaultProps = {
    prefix: 'next-',
    size: 'medium',
    shape: 'circle'
}, avatar__temp2);
avatar_Avatar.displayName = 'Avatar';


/* harmony default export */ var avatar = (config_provider.config(avatar_Avatar));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/list/list.js






var list_list__class, list__temp;









/**
 * List
 */
var list_list_List = (list__temp = list_list__class = function (_Component) {
    inherits_default()(List, _Component);

    function List() {
        classCallCheck_default()(this, List);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    List.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            header = _props.header,
            footer = _props.footer,
            size = _props.size,
            divider = _props.divider,
            className = _props.className,
            children = _props.children,
            rtl = _props.rtl,
            dataSource = _props.dataSource,
            renderItem = _props.renderItem,
            locale = _props.locale,
            loading = _props.loading,
            _props$loadingCompone = _props.loadingComponent,
            LoadingComponent = _props$loadingCompone === undefined ? es_loading : _props$loadingCompone,
            emptyContent = _props.emptyContent,
            others = objectWithoutProperties_default()(_props, ['prefix', 'header', 'footer', 'size', 'divider', 'className', 'children', 'rtl', 'dataSource', 'renderItem', 'locale', 'loading', 'loadingComponent', 'emptyContent']);

        if (rtl) {
            others.dir = 'rtl';
        }

        var dSValid = Array.isArray(dataSource);

        var classes = _classnames_2_3_1_classnames_default()(prefix + 'list', (_classNames = {}, _classNames[prefix + 'list-' + size] = size, _classNames[prefix + 'list-divider'] = divider, _classNames), className);

        var customContent = dSValid && dataSource.map(function (one, index) {
            return renderItem(one, index);
        });

        var content = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, others, { className: classes }),
            header ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'list-header' },
                header
            ) : null,
            !(dSValid && dataSource.length > 0) && !children ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'list-empty' },
                emptyContent || locale.empty
            ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'ul',
                { key: 'list-body', className: prefix + 'list-items' },
                customContent,
                children
            ),
            footer ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'list-footer' },
                footer
            ) : null
        );

        if (loading) {
            var loadingClassName = prefix + 'list-loading';
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                LoadingComponent,
                { className: loadingClassName },
                content
            );
        }

        return content;
    };

    return List;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), list_list__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 列表头部
     */
    header: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 列表尾部
     */
    footer: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 列表尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['medium', 'small']),
    /**
     * 是否显示分割线
     */
    divider: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 列表数据源
     */
    dataSource: _prop_types_15_8_1_prop_types_default.a.array,
    /**
     * 当使用 dataSource 时，可以用 renderItem 自定义渲染列表项
     * @param {Any} current 当前遍历的项
     * @param {Number} index 当前遍历的项的索引
     */
    renderItem: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 是否在加载中
     */
    loading: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 自定义 Loading 组件
     * 请务必传递 props, 使用方式： loadingComponent={props => <Loading {...props}/>}
     * @param {LoadingProps} props 需要透传给组件的参数
     * @return {React.ReactNode} 展示的组件
     */
    loadingComponent: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 设置数据为空的时候的表格内容展现
     */
    emptyContent: _prop_types_15_8_1_prop_types_default.a.node,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    children: _prop_types_15_8_1_prop_types_default.a.any,
    locale: _prop_types_15_8_1_prop_types_default.a.object
}, list_list__class.defaultProps = {
    rtl: false,
    size: 'medium',
    divider: true,
    prefix: 'next-',
    locale: locale_zh_cn.List,
    renderItem: function renderItem(item) {
        return item;
    },
    loading: false
}, list__temp);
list_list_List.displayName = 'List';


/* harmony default export */ var es_list_list = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(list_list_List)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/list/item.js






var list_item__class, list_item__temp;







/**
 * List.Item
 */
var item_ListItem = (list_item__temp = list_item__class = function (_Component) {
    inherits_default()(ListItem, _Component);

    function ListItem() {
        classCallCheck_default()(this, ListItem);

        return possibleConstructorReturn_default()(this, _Component.apply(this, arguments));
    }

    ListItem.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            title = _props.title,
            description = _props.description,
            media = _props.media,
            extra = _props.extra,
            className = _props.className,
            children = _props.children,
            others = objectWithoutProperties_default()(_props, ['prefix', 'title', 'description', 'media', 'extra', 'className', 'children']);

        var classes = _classnames_2_3_1_classnames_default()(prefix + 'list-item', className);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'li',
            extends_default()({}, others, { className: classes }),
            media ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'list-item-media' },
                media
            ) : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'list-item-content' },
                title ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'list-item-title' },
                    title
                ) : null,
                description ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'list-item-description' },
                    description
                ) : null,
                children
            ),
            extra ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'list-item-extra' },
                extra
            ) : null
        );
    };

    return ListItem;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), list_item__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 列表元素的标题
     */
    title: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 列表元素的描述内容
     */
    description: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 列表元素的头像 / 图标 / 图片内容
     */
    media: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 额外内容
     */
    extra: _prop_types_15_8_1_prop_types_default.a.node,
    className: _prop_types_15_8_1_prop_types_default.a.any
}, list_item__class.defaultProps = {
    prefix: 'next-'
}, list_item__temp);
item_ListItem.displayName = 'ListItem';


/* harmony default export */ var list_item = (config_provider.config(Object(react_lifecycles_compat_es["polyfill"])(item_ListItem)));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/list/index.js



es_list_list.Item = list_item;

/* harmony default export */ var es_list = (es_list_list);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/utils/index.js


// 检查传入值是否为 dayjs 对象
function checkDayjsObj(props, propName, componentName) {
    if (props[propName] && !util_datejs.isSelf(props[propName])) {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a dayjs object.');
    }
}

// 检查传入值是否为 dayjs 对象
function utils_checkDateValue(props, propName, componentName) {
    if (props[propName] && !util_datejs.isSelf(props[propName]) && typeof props[propName] !== 'string') {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a dayjs object or format date string.');
    }
}

/**
 * 监听键盘事件，操作时间
 * @param {KeyboardEvent} e
 * @param {Object} param1
 * @param {String} type second hour minute
 */
function utils_onTimeKeydown(e, _ref, type) {
    var format = _ref.format,
        timeInputStr = _ref.timeInputStr,
        steps = _ref.steps,
        value = _ref.value;

    if ([KEYCODE.UP, KEYCODE.DOWN, KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) return;
    if (e.altKey && [KEYCODE.PAGE_UP, KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) return;

    var time = util_datejs(timeInputStr, format, true);

    if (time.isValid()) {
        var stepUnit = e.altKey ? 'hour' : 'minute';
        switch (e.keyCode) {
            case KEYCODE.UP:
                time = time.subtract(steps[type], type);
                break;
            case KEYCODE.DOWN:
                time = time.add(steps[type], type);
                break;
            case KEYCODE.PAGE_UP:
                time = time.subtract(steps[stepUnit], stepUnit);
                break;
            case KEYCODE.PAGE_DOWN:
                time = time.add(steps[stepUnit], stepUnit);
                break;
        }
    } else if (value) {
        time = value.clone();
    } else {
        time = util_datejs();
        time = time.hour(0).minute(0).second(0);
    }

    e.preventDefault();
    return time.format(format);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/module/time-menu.js




var module_time_menu__class, module_time_menu__temp2;






function time_menu_scrollTo(element, to, duration) {
    var requestAnimationFrame = window.requestAnimationFrame || function requestAnimationFrameTimeout() {
        return setTimeout(arguments.length <= 0 ? undefined : arguments[0], 10);
    };

    if (duration <= 0) {
        element.scrollTop = to;
        return;
    }

    var difference = to - element.scrollTop;
    var perTick = difference / duration * 10;

    requestAnimationFrame(function () {
        element.scrollTop = element.scrollTop + perTick;

        if (element.scrollTop === to) {
            return;
        }

        time_menu_scrollTo(element, to, duration - 10);
    });
}

var module_time_menu_noop = function noop() {};

var module_time_menu_TimeMenu = (module_time_menu__temp2 = module_time_menu__class = function (_React$Component) {
    inherits_default()(TimeMenu, _React$Component);

    function TimeMenu() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, TimeMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.prefixCls = _this.props.prefix + 'time-picker2', _this._menuRefHandler = function (ref) {
            _this.menu = ref;
        }, _this._menuWrapperRefHandler = function (ref) {
            _this.menuWrapper = ref;
        }, _this.createMenuItems = function (list) {
            var _this$props = _this.props,
                prefix = _this$props.prefix,
                mode = _this$props.mode,
                disabled = _this$props.disabled,
                disabledItems = _this$props.disabledItems,
                activeIndex = _this$props.activeIndex,
                onSelect = _this$props.onSelect,
                renderTimeMenuItems = _this$props.renderTimeMenuItems,
                timeValue = _this$props.value;

            list = renderTimeMenuItems(list, mode, timeValue) || list;

            return list.map(function (_ref) {
                var _classnames;

                var label = _ref.label,
                    value = _ref.value;

                var isDisabled = disabled || disabledItems(value);
                var itemCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[_this.prefixCls + '-menu-item'] = true, _classnames[prefix + 'disabled'] = isDisabled, _classnames[prefix + 'selected'] = value === activeIndex, _classnames));
                var onClick = isDisabled ? module_time_menu_noop : function () {
                    return onSelect(value, mode);
                };
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'li',
                    {
                        role: 'option',
                        'aria-selected': String(value === activeIndex),
                        key: value,
                        title: value,
                        className: itemCls,
                        onClick: onClick
                    },
                    label
                );
            });
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    TimeMenu.prototype.componentDidMount = function componentDidMount() {
        this.scrollToSelected(0);
    };

    TimeMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (prevProps.activeIndex !== this.props.activeIndex) {
            this.scrollToSelected(120);
        }
    };

    TimeMenu.prototype.scrollToSelected = function scrollToSelected() {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var _props = this.props,
            activeIndex = _props.activeIndex,
            step = _props.step;

        var targetIndex = Math.floor((activeIndex || 0) / step);
        var firstItem = this.menu.children[targetIndex];
        var offsetTo = firstItem.offsetTop;
        time_menu_scrollTo(this.menu, offsetTo, duration);
    };

    TimeMenu.prototype.render = function render() {
        var _props2 = this.props,
            mode = _props2.mode,
            step = _props2.step;

        var total = mode === 'hour' ? 24 : 60;
        var list = [];
        for (var i = 0; i < total; i++) {
            if (i % step === 0) {
                list.push({
                    label: i,
                    value: i
                });
            }
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: this.prefixCls + '-menu', ref: this._menuWrapperRefHandler },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'ul',
                { role: 'listbox', className: this.prefixCls + '-menu-' + mode, ref: this._menuRefHandler },
                this.createMenuItems(list)
            )
        );
    };

    return TimeMenu;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), module_time_menu__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    title: _prop_types_15_8_1_prop_types_default.a.node,
    mode: _prop_types_15_8_1_prop_types_default.a.oneOf(['hour', 'minute', 'second']),
    step: _prop_types_15_8_1_prop_types_default.a.number,
    activeIndex: _prop_types_15_8_1_prop_types_default.a.number,
    value: checkDayjsObj,
    disabledItems: _prop_types_15_8_1_prop_types_default.a.func,
    renderTimeMenuItems: _prop_types_15_8_1_prop_types_default.a.func,
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool
}, module_time_menu__class.defaultProps = {
    step: 1,
    disabledItems: function disabledItems() {
        return false;
    },
    renderTimeMenuItems: function renderTimeMenuItems(list) {
        return list;
    },
    onSelect: function onSelect() {},
    disabled: false
}, module_time_menu__temp2);
module_time_menu_TimeMenu.displayName = 'TimeMenu';


/* harmony default export */ var module_time_menu = (module_time_menu_TimeMenu);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/constant.js
var TIME_PICKER_TYPE = {
    TIME: 'time',
    RANGE: 'range'
};

var TIME_INPUT_TYPE = {
    BEGIN: 0,
    END: 1
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/prop-types.js





var prop_types_error = function error(propName, ComponentName) {
    return new Error('Invalid prop ' + propName + ' supplied to ' + ComponentName + '. Validation failed.');
};

function prop_types_checkType(type) {
    return function (props, propName, componentName) {
        var value = props[propName];
        if (value) {
            if (!Array.isArray(value)) {
                value = [value];
            }

            if (!Array.isArray(type)) {
                type = [type];
            }

            if (!value.every(function (v) {
                return type.includes(typeof v === 'undefined' ? 'undefined' : typeof_default()(v));
            })) {
                throw prop_types_error(propName, componentName);
            }
        }
    };
}

var SharedPT = {
    date: function date(props, propName, componentName) {
        if (propName in props && !util_datejs(props.propName).isValid()) {
            throw prop_types_error(propName, componentName);
        }
    },
    value: function value(props, propName, componentName) {
        if (props[propName]) {
            var value = props[propName];

            if (props.type === TIME_PICKER_TYPE.RANGE && !Array.isArray(value)) {
                throw prop_types_error(propName, componentName);
            } else if (!Array.isArray(value)) {
                value = [value];
            }

            if (!value.every(function (v) {
                return !v || util_datejs(v).isValid() || typeof v === 'string';
            })) {
                throw prop_types_error(propName, componentName);
            }
        }
    },

    format: prop_types_checkType(['string', 'function']),
    inputValue: prop_types_checkType('string'),
    placeholder: prop_types_checkType('string'),
    readOnly: prop_types_checkType('boolean'),
    disabled: prop_types_checkType('boolean'),

    render: _prop_types_15_8_1_prop_types["oneOfType"]([_prop_types_15_8_1_prop_types["node"], _prop_types_15_8_1_prop_types["func"]]),
    type: _prop_types_15_8_1_prop_types["oneOf"](Object.values(TIME_PICKER_TYPE)),
    inputType: _prop_types_15_8_1_prop_types["oneOf"](Object.values(TIME_INPUT_TYPE)),
    size: _prop_types_15_8_1_prop_types["oneOf"](['small', 'medium', 'large'])
};

/* harmony default export */ var prop_types = (SharedPT);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/panel.js






var time_picker2_panel__class, time_picker2_panel__temp2;









var time_picker2_panel_noop = func.noop;
var time_picker2_panel_TimePickerPanel = (time_picker2_panel__temp2 = time_picker2_panel__class = function (_Component) {
    inherits_default()(TimePickerPanel, _Component);

    function TimePickerPanel() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, TimePickerPanel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.prefixCls = _this.props.prefix + 'time-picker2', _this.onSelectMenuItem = function (panelType, index, type) {
            var _this$props = _this.props,
                value = _this$props.value,
                isRange = _this$props.isRange;

            var valueArr = Array.isArray(value) ? value : [value];
            var val = panelType === 'end' ? valueArr[1] : valueArr[0];

            var clonedValue = val ? val.clone() : util_datejs('00:00:00', 'HH:mm:ss', true);
            var newValue = void 0;
            switch (type) {
                case 'hour':
                    newValue = clonedValue.hour(index);
                    break;
                case 'minute':
                    newValue = clonedValue.minute(index);
                    break;
                case 'second':
                    newValue = clonedValue.second(index);
                    break;
            }

            if (isRange) {
                var nextValueArray = [];
                if (panelType === 'start') {
                    nextValueArray[0] = newValue;
                    nextValueArray[1] = value[1];
                } else if (panelType === 'end') {
                    nextValueArray[0] = value[0];
                    nextValueArray[1] = newValue;
                }

                _this.props.onSelect(nextValueArray, panelType);
            } else {
                _this.props.onSelect(newValue, 'panel');
            }
        }, _this.getDisabledItems = function () {
            var _this$props2 = _this.props,
                disabledHours = _this$props2.disabledHours,
                disabledMinutes = _this$props2.disabledMinutes,
                disabledSeconds = _this$props2.disabledSeconds,
                value = _this$props2.value,
                isRange = _this$props2.isRange;


            var disableds = {
                newDisabledHours: [disabledHours],
                newDisabledMinutes: [disabledMinutes],
                newDisabledSeconds: [disabledSeconds]
            };
            if (!isRange) {
                return disableds;
            }

            var dHours = disabledHours() || [];
            var dMinutes = disabledMinutes() || [];
            var dSeconds = disabledSeconds() || [];

            var v0 = value[0];
            var v1 = value[1];

            var hoursEqual = function hoursEqual() {
                return v0 && v1 && v0.hour() === v1.hour();
            };
            var minutesEqual = function minutesEqual() {
                return v0 && v1 && v0.hour() === v1.hour() && v0.minute() === v1.minute();
            };

            disableds.newDisabledHours[0] = function (h) {
                return v1 && h > v1.hour() || dHours.indexOf(h) > -1;
            };
            disableds.newDisabledMinutes[0] = function (m) {
                return v1 && hoursEqual() && m > v1.minute() || dMinutes.indexOf(m) > -1;
            };
            disableds.newDisabledSeconds[0] = function (s) {
                return v1 && minutesEqual() && s > v1.second() || dSeconds.indexOf(s) > -1;
            };

            disableds.newDisabledHours[1] = function (h) {
                return v0 && h < v0.hour() || dHours.indexOf(h) > -1;
            };
            disableds.newDisabledMinutes[1] = function (m) {
                return v0 && m < (hoursEqual() && v0.minute()) || dMinutes.indexOf(m) > -1;
            };
            disableds.newDisabledSeconds[1] = function (s) {
                return v0 && minutesEqual() && s < v0.second() || dSeconds.indexOf(s) > -1;
            };

            return disableds;
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    /**
     *
     * @param {enum} panelType 'start' | 'end' | 'panel'
     * @param {*} index
     * @param {*} type 'hour' | 'minute' | 'second'
     */


    TimePickerPanel.prototype.render = function render() {
        var _classnames,
            _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            isRange = _props.isRange,
            locale = _props.locale,
            className = _props.className,
            disabled = _props.disabled,
            showHour = _props.showHour,
            showMinute = _props.showMinute,
            showSecond = _props.showSecond,
            hourStep = _props.hourStep,
            minuteStep = _props.minuteStep,
            secondStep = _props.secondStep,
            renderTimeMenuItems = _props.renderTimeMenuItems,
            others = objectWithoutProperties_default()(_props, ['prefix', 'value', 'isRange', 'locale', 'className', 'disabled', 'showHour', 'showMinute', 'showSecond', 'hourStep', 'minuteStep', 'secondStep', 'renderTimeMenuItems']);

        var colLen = [showHour, showMinute, showSecond].filter(function (v) {
            return v;
        }).length;
        var classNames = _classnames_2_3_1_classnames_default()(this.prefixCls + '-panel', (_classnames = {}, _classnames[this.prefixCls + '-panel-col-' + colLen] = !isRange, _classnames[this.prefixCls + '-panel-range'] = isRange, _classnames), className);

        var activeHour = [];
        var activeMinute = [];
        var activeSecond = [];

        var valueArr = Array.isArray(value) ? value : [value];
        valueArr.forEach(function (val, i) {
            if (val && util_datejs.isSelf(val)) {
                activeHour[i] = val.hour();
                activeMinute[i] = val.minute();
                activeSecond[i] = val.second();
            }
        });

        var commonProps = {
            prefix: prefix,
            disabled: disabled,
            renderTimeMenuItems: renderTimeMenuItems
        };

        var _getDisabledItems = this.getDisabledItems(),
            newDisabledHours = _getDisabledItems.newDisabledHours,
            newDisabledMinutes = _getDisabledItems.newDisabledMinutes,
            newDisabledSeconds = _getDisabledItems.newDisabledSeconds;

        var generatePanel = function generatePanel(index) {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment,
                null,
                showHour ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(module_time_menu, extends_default()({}, commonProps, {
                    value: valueArr[index],
                    activeIndex: activeHour[index],
                    title: locale.hour,
                    mode: 'hour',
                    step: hourStep,
                    onSelect: _this2.onSelectMenuItem.bind(_this2, '' + (index === 0 ? 'start' : 'end')),
                    disabledItems: newDisabledHours[index]
                })) : null,
                showMinute ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(module_time_menu, extends_default()({}, commonProps, {
                    value: valueArr[index],
                    activeIndex: activeMinute[index],
                    title: locale.minute,
                    mode: 'minute',
                    step: minuteStep,
                    onSelect: _this2.onSelectMenuItem.bind(_this2, '' + (index === 0 ? 'start' : 'end')),
                    disabledItems: newDisabledMinutes[index]
                })) : null,
                showSecond ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(module_time_menu, extends_default()({}, commonProps, {
                    value: valueArr[index],
                    activeIndex: activeSecond[index],
                    title: locale.second,
                    step: secondStep,
                    mode: 'second',
                    onSelect: _this2.onSelectMenuItem.bind(_this2, '' + (index === 0 ? 'start' : 'end')),
                    disabledItems: newDisabledSeconds[index]
                })) : null
            );
        };

        var singlePanel = generatePanel(0);

        var panelClassNames = _classnames_2_3_1_classnames_default()(this.prefixCls + '-panel-col-' + colLen, this.prefixCls + '-panel-list');

        var doublePanel = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment,
            null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: panelClassNames },
                generatePanel(0)
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: panelClassNames },
                generatePanel(1)
            )
        );

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, pickAttrs(others), { className: classNames }),
            isRange ? doublePanel : singlePanel
        );
    };

    return TimePickerPanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), time_picker2_panel__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 时间值（dayjs 对象）
     */
    value: prop_types.value,
    /**
     * 是否显示小时
     */
    showHour: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示分钟
     */
    showMinute: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否显示秒
     */
    showSecond: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 小时选项步长
     */
    hourStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用秒函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {dayjs} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 选择某个日期值时的回调
     * @param {Object} 选中后的日期值
     */
    onSelect: _prop_types_15_8_1_prop_types_default.a.func,
    isRange: _prop_types_15_8_1_prop_types_default.a.bool,
    locale: _prop_types_15_8_1_prop_types_default.a.object,
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    className: _prop_types_15_8_1_prop_types_default.a.string
}, time_picker2_panel__class.defaultProps = {
    prefix: 'next-',
    showHour: true,
    showSecond: true,
    showMinute: true,
    disabledHours: time_picker2_panel_noop,
    disabledMinutes: time_picker2_panel_noop,
    disabledSeconds: time_picker2_panel_noop,
    onSelect: time_picker2_panel_noop,
    disabled: false,
    isRange: false,
    locale: locale_zh_cn.TimePicker
}, time_picker2_panel__temp2);
time_picker2_panel_TimePickerPanel.displayName = 'TimePickerPanel';


/* harmony default export */ var time_picker2_panel = (time_picker2_panel_TimePickerPanel);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/constant.js
var DATE_PICKER_TYPE = {
    DATE: 'date',
    RANGE: 'range'
};

var DATE_INPUT_TYPE = {
    BEGIN: 0,
    END: 1
};

var DATE_PICKER_MODE = {
    DATE: 'date',
    MONTH: 'month',
    WEEK: 'week',
    QUARTER: 'quarter',
    YEAR: 'year'
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/util.js



function setTime(targetVal, sourceVal) {
    if (sourceVal && targetVal) {
        return targetVal.hour(sourceVal.hour()).minute(sourceVal.minute()).second(sourceVal.second()).millisecond(sourceVal.millisecond());
    }
    return targetVal;
}

function switchInputType(inputType) {
    var BEGIN = DATE_INPUT_TYPE.BEGIN,
        END = DATE_INPUT_TYPE.END;

    return inputType === BEGIN ? END : BEGIN;
}

function mode2unit(mode) {
    return mode === 'date' ? 'day' : mode;
}

/**
 * 获取输入框值
 * @param {*} value 日期值
 * @param {string | funtion} format 日期格式
 * @returns {string | string[]}
 */
function fmtValue(value, fmt) {
    var formater = function formater(v, idx) {
        var _fmt = fmt;

        if (Array.isArray(fmt)) {
            _fmt = fmt[idx];
        }

        return v ? typeof _fmt === 'function' ? _fmt(v) : v.format(_fmt) : '';
    };

    return Array.isArray(value) ? value.map(function (v, idx) {
        return formater(v, idx);
    }) : formater(value);
}

/**
 * 判断值是否改变
 * @param {dayjs.ConfigType}} newValue
 * @param {dayjs.ConfigType} oldValue
 * @returns {boolean}
 */
function util_isValueChanged(newValue, oldValue) {
    return Array.isArray(newValue) ? util_isValueChanged(newValue[0], oldValue && oldValue[0]) || util_isValueChanged(newValue[1], oldValue && oldValue[1]) : newValue !== oldValue && !util_datejs(newValue).isSame(oldValue);
}
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/prop-types.js





var date_picker2_prop_types_error = function error(propName, ComponentName) {
    return new Error('Invalid prop ' + propName + ' supplied to ' + ComponentName + '. Validation failed.');
};

function date_picker2_prop_types_checkType(type) {
    return function (props, propName, componentName) {
        var value = props[propName];
        if (value) {
            if (!Array.isArray(value)) {
                value = [value];
            }

            if (!Array.isArray(type)) {
                type = [type];
            }

            if (!value.every(function (v) {
                return type.includes(typeof v === 'undefined' ? 'undefined' : typeof_default()(v));
            })) {
                throw date_picker2_prop_types_error(propName, componentName);
            }
        }
    };
}

var prop_types_SharedPT = {
    date: function date(props, propName, componentName) {
        if (propName in props && !util_datejs(props.propName).isValid()) {
            throw date_picker2_prop_types_error(propName, componentName);
        }
    },
    value: function value(props, propName, componentName) {
        if (props[propName]) {
            var value = props[propName];

            if (props.type === DATE_PICKER_TYPE.RANGE && !Array.isArray(value)) {
                throw date_picker2_prop_types_error(propName, componentName);
            } else if (!Array.isArray(value)) {
                value = [value];
            }

            if (!value.every(function (v) {
                return !v || util_datejs(v).isValid();
            })) {
                throw date_picker2_prop_types_error(propName, componentName);
            }
        }
    },

    format: date_picker2_prop_types_checkType(['string', 'function']),
    inputValue: date_picker2_prop_types_checkType('string'),
    placeholder: date_picker2_prop_types_checkType('string'),
    readOnly: date_picker2_prop_types_checkType('boolean'),
    disabled: date_picker2_prop_types_checkType('boolean'),
    disabledTime: date_picker2_prop_types_checkType(['object', 'function']),
    ariaLabel: date_picker2_prop_types_checkType('string'),

    render: _prop_types_15_8_1_prop_types["oneOfType"]([_prop_types_15_8_1_prop_types["node"], _prop_types_15_8_1_prop_types["func"]]),
    mode: _prop_types_15_8_1_prop_types["oneOf"](Object.values(DATE_PICKER_MODE)),
    type: _prop_types_15_8_1_prop_types["oneOf"](Object.values(DATE_PICKER_TYPE)),
    inputType: _prop_types_15_8_1_prop_types["oneOf"](Object.values(DATE_INPUT_TYPE)),
    size: _prop_types_15_8_1_prop_types["oneOf"](['small', 'medium', 'large'])
};

/* harmony default export */ var date_picker2_prop_types = (prop_types_SharedPT);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/panels/footer-panel.js






var footer_panel__class, footer_panel__temp;












var footer_panel_renderNode = func.renderNode;


function normalizePreset(preset) {
    if (Array.isArray(preset)) {
        return preset;
    } else {
        return Object.keys(preset).map(function (key) {
            return {
                label: key,
                value: preset[key]
            };
        });
    }
}

var footer_panel_FooterPanel = (footer_panel__temp = footer_panel__class = function (_React$PureComponent) {
    inherits_default()(FooterPanel, _React$PureComponent);

    function FooterPanel(props) {
        classCallCheck_default()(this, FooterPanel);

        var _this = possibleConstructorReturn_default()(this, _React$PureComponent.call(this, props));

        _this.renderRanges = function () {
            if (!_this.props.preset) {
                return null;
            }

            var preset = normalizePreset(_this.props.preset);

            return preset.map(function (_ref, index) {
                var label = _ref.label,
                    value = _ref.value,
                    restProps = objectWithoutProperties_default()(_ref, ['label', 'value']);

                var buttonProps = util_obj.pickProps(es_button.propTypes, restProps);

                var handleClick = function handleClick() {
                    var date = typeof value === 'function' ? value() : value;
                    _this.props.onChange(date, 'CLICK_PRESET');
                };
                return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_button,
                    extends_default()({
                        text: preset.length === 1,
                        size: 'small',
                        type: preset.length === 1 ? 'primary' : 'secondary',
                        key: label + '-' + index
                        // onClick={() =>
                        //     func.invoke(this.props, 'onChange', [
                        //         typeof value === 'function' ? value() : value,
                        //         'CLICK_PRESET',
                        //     ])
                        // }
                        , onClick: handleClick
                    }, buttonProps),
                    label
                );
            });
        };

        _this.prefixCls = props.prefix + 'date-picker2-footer';
        return _this;
    }

    FooterPanel.prototype.render = function render() {
        var _classnames, _classnames2;

        var prefixCls = this.prefixCls;
        var _props = this.props,
            showOk = _props.showOk,
            locale = _props.locale,
            onOk = _props.onOk,
            oKable = _props.oKable,
            extraRender = _props.extraRender,
            className = _props.className;


        var classNames = _classnames_2_3_1_classnames_default()(prefixCls, className, (_classnames = {}, _classnames[prefixCls + '-with-actions'] = showOk, _classnames));

        var extraNode = footer_panel_renderNode(extraRender);
        var rangeNode = this.renderRanges();
        var actionsNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            { size: 'small', disabled: !oKable, onClick: onOk, className: prefixCls + '-ok', type: 'primary' },
            locale.ok
        );

        var showFooter = showOk || extraNode || rangeNode;
        var rangesCls = _classnames_2_3_1_classnames_default()(prefixCls + '-preset', (_classnames2 = {}, _classnames2[prefixCls + '-preset-only'] = !showOk && !extraNode, _classnames2));

        return showFooter ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: classNames },
            extraNode ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-extra' },
                extraNode
            ) : null,
            rangeNode ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: rangesCls },
                rangeNode
            ) : null,
            showOk ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefixCls + '-actions' },
                actionsNode
            ) : null
        ) : null;
    };

    return FooterPanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent), footer_panel__class.propTypes = {
    rtl: _prop_types_15_8_1_prop_types["bool"],
    className: _prop_types_15_8_1_prop_types["string"],
    prefix: _prop_types_15_8_1_prop_types["string"],
    locale: _prop_types_15_8_1_prop_types["object"],
    showOk: _prop_types_15_8_1_prop_types["bool"],
    preset: _prop_types_15_8_1_prop_types["oneOfType"]([_prop_types_15_8_1_prop_types["array"], _prop_types_15_8_1_prop_types["object"]]),
    onOk: _prop_types_15_8_1_prop_types["func"],
    oKable: _prop_types_15_8_1_prop_types["bool"],
    extraRender: date_picker2_prop_types.render
}, footer_panel__class.defaultProps = {
    locale: locale_zh_cn.DatePicker
}, footer_panel__temp);


/* harmony default export */ var footer_panel = (Object(react_lifecycles_compat_es["polyfill"])(footer_panel_FooterPanel));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/module/date-input.js






var date_input__class, date_input__temp;













var date_input_DateInput = (date_input__temp = date_input__class = function (_React$Component) {
    inherits_default()(DateInput, _React$Component);

    function DateInput(props) {
        classCallCheck_default()(this, DateInput);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.setInputRef = function (el, index) {
            if (_this.props.isRange) {
                if (!_this.input) {
                    _this.input = [];
                }
                _this.input[index] = el;
            } else {
                _this.input = el;
            }
        };

        _this.setValue = function (v) {
            var _this$props = _this.props,
                isRange = _this$props.isRange,
                inputType = _this$props.inputType,
                value = _this$props.value;


            var newVal = v;

            if (isRange) {
                newVal = [].concat(value);
                newVal[inputType] = v;
            }

            return newVal;
        };

        _this.formatter = function (v) {
            var format = _this.props.format;

            return typeof format === 'function' ? format(v) : v.format(format);
        };

        _this.onInput = function (v, e, eventType) {
            v = _this.setValue(v);

            if (eventType === 'clear') {
                v = null;
                e.stopPropagation();
            }

            func.invoke(_this.props, 'onInput', [v, eventType]);
        };

        _this.handleTypeChange = function (inputType) {
            if (inputType !== _this.props.inputType) {
                func.invoke(_this.props, 'onInputTypeChange', [inputType]);
            }
        };

        _this.getPlaceholder = function () {
            var isRange = _this.props.isRange;

            var holder = _this.props.placeholder;

            if (isRange && !Array.isArray(holder)) {
                holder = Array(2).fill(holder);
            }

            return holder;
        };

        _this.getHtmlSize = function () {
            var _this$props2 = _this.props,
                isRange = _this$props2.isRange,
                format = _this$props2.format,
                hasBorder = _this$props2.hasBorder;

            var value = '12:12:12';
            var size = 0;

            if (isRange) {
                var fmtStr = fmtValue([value, value].map(util_datejs), format);
                size = Math.max.apply(Math, fmtStr.map(function (s) {
                    return s && s.length || 0;
                }));
            } else {
                var _fmtStr = fmtValue(util_datejs(value), format);
                size = _fmtStr && _fmtStr.length || 0;
            }

            return String(Math.max(size, hasBorder ? 12 : 8));
        };

        _this.prefixCls = props.prefix + 'time-picker2-input';
        return _this;
    }

    /**
     * 根据 format 计算输入框 htmlSize
     */


    DateInput.prototype.render = function render() {
        var _classnames2;

        var onInput = this.onInput,
            setInputRef = this.setInputRef,
            handleTypeChange = this.handleTypeChange,
            prefixCls = this.prefixCls;

        var _props = this.props,
            autoFocus = _props.autoFocus,
            readOnly = _props.readOnly,
            isRange = _props.isRange,
            value = _props.value,
            onBlur = _props.onBlur,
            hasClear = _props.hasClear,
            inputType = _props.inputType,
            size = _props.size,
            focus = _props.focus,
            prefix = _props.prefix,
            hasBorder = _props.hasBorder,
            separator = _props.separator,
            disabled = _props.disabled,
            inputProps = _props.inputProps,
            state = _props.state,
            label = _props.label,
            onClick = _props.onClick,
            onKeyDown = _props.onKeyDown,
            restProps = objectWithoutProperties_default()(_props, ['autoFocus', 'readOnly', 'isRange', 'value', 'onBlur', 'hasClear', 'inputType', 'size', 'focus', 'prefix', 'hasBorder', 'separator', 'disabled', 'inputProps', 'state', 'label', 'onClick', 'onKeyDown']);

        var placeholder = this.getPlaceholder();
        var htmlSize = this.getHtmlSize();

        var sharedProps = extends_default()({}, util_obj.pickProps(restProps, es_input), inputProps, {
            size: size,
            prefix: prefix,
            htmlSize: htmlSize,
            readOnly: readOnly,
            hasBorder: hasBorder,
            onBlur: onBlur,
            onChange: onInput,
            onClick: onClick,
            onKeyDown: onKeyDown
        });

        var rangeProps = void 0;
        if (isRange) {
            rangeProps = [TIME_INPUT_TYPE.BEGIN, TIME_INPUT_TYPE.END].map(function (idx) {
                var _classnames;

                var _disabled = Array.isArray(disabled) ? disabled[idx] : disabled;

                return extends_default()({}, sharedProps, {
                    autoFocus: autoFocus,
                    placeholder: placeholder[idx],
                    value: value[idx] || '',
                    disabled: _disabled,
                    ref: function ref(_ref) {
                        return setInputRef(_ref, idx);
                    },
                    onFocus: _disabled ? undefined : function () {
                        return handleTypeChange(idx);
                    },
                    className: _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefixCls + '-active'] = inputType === idx, _classnames))
                });
            });
        }

        var className = _classnames_2_3_1_classnames_default()([prefixCls, prefixCls + '-' + size, prefixCls + '-' + (isRange ? 'range' : 'time')], (_classnames2 = {}, _classnames2[prefixCls + '-focus'] = focus, _classnames2[prefixCls + '-noborder'] = !hasBorder, _classnames2[prefixCls + '-disabled'] = isRange && Array.isArray(disabled) ? disabled.every(function (v) {
            return v;
        }) : disabled, _classnames2));

        var calendarIcon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'clock', className: this.prefixCls + '-symbol-clock-icon' });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: className },
            isRange ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment,
                null,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, rangeProps[0], {
                    label: label,
                    hasBorder: false,
                    autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
                })),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefixCls + '-separator' },
                    separator
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, rangeProps[1], {
                    state: state,
                    hasBorder: false,
                    hasClear: !state && hasClear,
                    hint: state ? null : calendarIcon
                }))
            ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedProps, {
                label: label,
                state: state,
                disabled: disabled,
                hasClear: !state && hasClear,
                placeholder: placeholder,
                autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
                , ref: setInputRef,
                value: value || '',
                hint: state ? null : calendarIcon
            }))
        );
    };

    return DateInput;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), date_input__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types["string"],
    rtl: _prop_types_15_8_1_prop_types["bool"],
    locale: _prop_types_15_8_1_prop_types["object"],
    value: _prop_types_15_8_1_prop_types["oneOfType"]([_prop_types_15_8_1_prop_types["arrayOf"](_prop_types_15_8_1_prop_types["string"]), _prop_types_15_8_1_prop_types["string"]]),
    inputType: prop_types.inputType,
    format: prop_types.format,
    isRange: _prop_types_15_8_1_prop_types["bool"],
    hasClear: _prop_types_15_8_1_prop_types["bool"],
    onInputTypeChange: _prop_types_15_8_1_prop_types["func"],
    autoFocus: _prop_types_15_8_1_prop_types["bool"],
    readOnly: prop_types.readOnly,
    placeholder: prop_types.placeholder,
    size: prop_types.size,
    focus: _prop_types_15_8_1_prop_types["bool"],
    hasBorder: _prop_types_15_8_1_prop_types["bool"],
    onKeyDown: _prop_types_15_8_1_prop_types["func"],
    onClick: _prop_types_15_8_1_prop_types["func"],
    separator: _prop_types_15_8_1_prop_types["node"],
    disabled: prop_types.disabled,
    inputProps: _prop_types_15_8_1_prop_types["object"],
    label: _prop_types_15_8_1_prop_types["node"]
}, date_input__class.defaultProps = {
    autoFocus: false,
    readOnly: false,
    hasClear: true,
    separator: '-',
    hasBorder: true,
    size: 'medium'
}, date_input__temp);
date_input_DateInput.displayName = 'DateInput';


/* harmony default export */ var date_input = (Object(react_lifecycles_compat_es["polyfill"])(date_input_DateInput));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/time-picker.js






var time_picker2_time_picker__class, time_picker2_time_picker__temp, time_picker2_time_picker__initialiseProps;



















var time_picker2_time_picker_Popup = next_es_overlay.Popup;
var time_picker2_time_picker_noop = func.noop,
    time_picker_checkDate = func.checkDate,
    time_picker_checkRangeDate = func.checkRangeDate;

var time_picker_timePickerLocale = locale_zh_cn.TimePicker;

var presetPropType = _prop_types_15_8_1_prop_types_default.a.shape(extends_default()({
    label: _prop_types_15_8_1_prop_types_default.a.string,
    value: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.func, utils_checkDateValue])
}, es_button.propTypes));

var time_picker_TimePicker2 = (time_picker2_time_picker__temp = time_picker2_time_picker__class = function (_Component) {
    inherits_default()(TimePicker2, _Component);

    function TimePicker2(props, context) {
        classCallCheck_default()(this, TimePicker2);

        var _this = possibleConstructorReturn_default()(this, _Component.call(this, props, context));

        time_picker2_time_picker__initialiseProps.call(_this);

        var isRange = props.type === TIME_PICKER_TYPE.RANGE;

        _this.state = {};
        if (isRange) {
            var _this$getInitRangeInp = _this.getInitRangeInputState(),
                inputType = _this$getInitRangeInp.inputType,
                justBeginInput = _this$getInitRangeInp.justBeginInput;

            _this.state = {
                inputType: inputType,
                justBeginInput: justBeginInput
            };
        }

        var _this$props = _this.props,
            format = _this$props.format,
            visible = _this$props.visible,
            defaultVisible = _this$props.defaultVisible,
            prefix = _this$props.prefix;


        var value = _this.getInitValue();

        // const value = formatInputTimeValue(props.value || props.defaultValue, props.format, isRange);
        _this.state = extends_default()({}, _this.state, {
            isRange: isRange,
            inputStr: '', // 输入框的输入值， string类型
            value: value, // 确定值 dayjs类型
            curValue: value, // 临时值 dayjs类型
            preValue: value, // 上个值 dayjs类型
            inputValue: fmtValue(value, format),
            inputing: false,
            visible: 'visible' in _this.props ? visible : defaultVisible
        });
        _this.prefixCls = prefix + 'time-picker2';
        return _this;
    }

    TimePicker2.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var disabled = props.disabled,
            type = props.type,
            format = props.format,
            propsValue = props.value;

        var isRange = type === TIME_PICKER_TYPE.RANGE;
        var state = {
            isRange: isRange
        };

        if ('value' in props) {
            // checkDate function doesn't support hh:mm:ss format, convert to valid dayjs value in advance
            var formatter = function formatter(v) {
                return typeof v === 'string' ? util_datejs(v, format) : v;
            };
            var formattedValue = Array.isArray(propsValue) ? propsValue.map(function (v) {
                return formatter(v);
            }) : formatter(propsValue);
            var value = isRange ? time_picker_checkRangeDate(formattedValue, state.inputType, disabled) : time_picker_checkDate(formattedValue);
            if (util_isValueChanged(value, state.preValue)) {
                state = extends_default()({}, state, {
                    value: value,
                    preValue: value
                });
            }
        }

        if ('visible' in props) {
            state.visible = props.visible;
        }

        return state;
    };

    /**
     * 获取初始值
     */


    /**
     * 获取 RangePicker 输入框初始输入状态
     * @returns {Object} inputState
     * @returns {boolean} inputState.justBeginInput 是否初始输入
     * @returns {number} inputState.inputType 当前输入框
     */

    /**
     * 处理点击文档区域导致的弹层收起逻辑
     * @param {boolean} visible 是否可见
     * @param {string} type 事件类型
     */


    /**
     * 获取 `onChange` 和 `onOk` 方法的输出参数
     * @param {Dayjs} value
     * @returns 默认返回 `Dayjs` 实例和 `format` 格式化的值
     *          如果传了了 `outputFormat` 属性则返回 `outputFormat` 格式化的值
     */


    /**
     * 获取输入框的禁用状态
     * @param {Number} idx
     * @returns {Boolean}
     */


    TimePicker2.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                extends_default()({}, others, { className: previewCls }),
                renderPreview(value, this.props)
            );
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'p',
            extends_default()({}, others, { className: previewCls }),
            label
        );
    };

    TimePicker2.prototype.render = function render() {
        var _classnames,
            _this2 = this,
            _classnames2;

        var _props2 = this.props,
            prefix = _props2.prefix,
            label = _props2.label,
            state = _props2.state,
            placeholder = _props2.placeholder,
            size = _props2.size,
            format = _props2.format,
            hasClear = _props2.hasClear,
            hourStep = _props2.hourStep,
            minuteStep = _props2.minuteStep,
            secondStep = _props2.secondStep,
            disabledHours = _props2.disabledHours,
            disabledMinutes = _props2.disabledMinutes,
            disabledSeconds = _props2.disabledSeconds,
            renderTimeMenuItems = _props2.renderTimeMenuItems,
            inputProps = _props2.inputProps,
            popupAlign = _props2.popupAlign,
            popupTriggerType = _props2.popupTriggerType,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            followTrigger = _props2.followTrigger,
            disabled = _props2.disabled,
            hasBorder = _props2.hasBorder,
            className = _props2.className,
            locale = _props2.locale,
            rtl = _props2.rtl,
            isPreview = _props2.isPreview,
            preset = _props2.preset,
            others = objectWithoutProperties_default()(_props2, ['prefix', 'label', 'state', 'placeholder', 'size', 'format', 'hasClear', 'hourStep', 'minuteStep', 'secondStep', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'renderTimeMenuItems', 'inputProps', 'popupAlign', 'popupTriggerType', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'followTrigger', 'disabled', 'hasBorder', 'className', 'locale', 'rtl', 'isPreview', 'preset']);

        var _state = this.state,
            value = _state.value,
            inputStr = _state.inputStr,
            inputValue = _state.inputValue,
            curValue = _state.curValue,
            inputing = _state.inputing,
            visible = _state.visible,
            isRange = _state.isRange,
            inputType = _state.inputType;

        var triggerCls = _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[this.prefixCls + '-trigger'] = true, _classnames));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(util_obj.pickOthers(others, TimePicker2.PropTypes));
        }

        var sharedInputProps = extends_default()({
            prefix: prefix,
            locale: locale,
            label: label,
            state: state,
            placeholder: placeholder
        }, inputProps, {
            size: size,
            disabled: disabled,
            value: inputing ? inputStr : isRange ? inputValue : fmtValue(value, format) || '',
            hasClear: value && hasClear,
            inputType: inputType,
            isRange: isRange,
            onInputTypeChange: this.onInputTypeChange,
            onInput: this.handleInput,
            onKeyDown: this.onKeyDown,
            ref: function ref(el) {
                return _this2.dateInput = el;
            }
        });

        var triggerInput = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: triggerCls },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(date_input, extends_default()({}, sharedInputProps, {
                label: label,
                state: state,
                onClick: this.onClick,
                hasBorder: hasBorder,
                placeholder: placeholder || locale.placeholder,
                className: _classnames_2_3_1_classnames_default()(this.prefixCls + '-input')
            }))
        );

        var panelProps = {
            prefix: prefix,
            locale: locale,
            value: inputing ? this.checkValue(inputStr) : curValue,
            // value: curValue,
            isRange: isRange,
            disabled: disabled,
            showHour: format.indexOf('H') > -1,
            showSecond: format.indexOf('s') > -1,
            showMinute: format.indexOf('m') > -1,
            hourStep: hourStep,
            minuteStep: minuteStep,
            secondStep: secondStep,
            disabledHours: disabledHours,
            disabledMinutes: disabledMinutes,
            disabledSeconds: disabledSeconds,
            renderTimeMenuItems: renderTimeMenuItems,
            onSelect: this.handleChange
        };

        var classNames = _classnames_2_3_1_classnames_default()((_classnames2 = {}, _classnames2['' + this.prefixCls] = true, _classnames2[this.prefixCls + '-' + size] = size, _classnames2[prefix + 'disabled'] = disabled, _classnames2), className);

        var PopupComponent = popupComponent ? popupComponent : time_picker2_time_picker_Popup;
        var oKable = !!(isRange ? inputValue && inputValue[inputType] : inputValue);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, util_obj.pickOthers(TimePicker2.propTypes, others), { className: classNames }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComponent,
                extends_default()({
                    align: popupAlign
                }, popupProps, {
                    followTrigger: followTrigger,
                    visible: visible,
                    onVisibleChange: this.handleVisibleChange,
                    trigger: triggerInput,
                    container: popupContainer,
                    disabled: disabled,
                    triggerType: popupTriggerType,
                    style: popupStyle,
                    className: popupClassName
                }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { dir: others.dir, className: this.prefixCls + '-wrapper' },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: this.prefixCls + '-body' },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_picker2_panel, panelProps),
                        preset || isRange ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(footer_panel, {
                            prefix: prefix,
                            className: this.prefixCls + '-footer',
                            showTime: true,
                            oKable: oKable,
                            showOk: isRange,
                            onOk: this.onOk,
                            onChange: this.handleChange,
                            preset: preset
                        }) : null
                    )
                )
            )
        );
    };

    return TimePicker2;
}(external___root___React___commonjs2___react___commonjs___react___amd___react__["Component"]), time_picker2_time_picker__class.propTypes = extends_default()({}, config_provider.propTypes, {
    prefix: _prop_types_15_8_1_prop_types_default.a.string,
    rtl: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 按钮的文案
     */
    label: _prop_types_15_8_1_prop_types_default.a.node,
    /**
     * 输入框状态
     */
    state: _prop_types_15_8_1_prop_types_default.a.oneOf(['error', 'success']),
    /**
     * 输入框提示
     */
    placeholder: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(_prop_types_15_8_1_prop_types_default.a.string), _prop_types_15_8_1_prop_types_default.a.string]),
    /**
     * 时间值，dayjs格式或者2020-01-01字符串格式，受控状态使用
     */
    value: prop_types.value,
    /**
     * 时间初值，dayjs格式或者2020-01-01字符串格式，非受控状态使用
     */
    defaultValue: prop_types.value,
    /**
     * 时间选择框的尺寸
     */
    size: _prop_types_15_8_1_prop_types_default.a.oneOf(['small', 'medium', 'large']),
    /**
     * 是否允许清空时间
     */
    hasClear: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 时间的格式
     * https://dayjs.gitee.io/docs/zh-CN/display/format
     */
    format: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 小时选项步长
     */
    hourStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _prop_types_15_8_1_prop_types_default.a.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 禁用秒钟函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {dayjs} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层是否显示（受控）
     */
    visible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层默认是否显示（非受控）
     */
    defaultVisible: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 弹层容器
     * @param {Object} target 目标节点
     * @return {ReactNode} 容器节点
     */
    popupContainer: _prop_types_15_8_1_prop_types_default.a.any,
    /**
     * 弹层对齐方式, 详情见Overlay 文档
     */
    popupAlign: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _prop_types_15_8_1_prop_types_default.a.oneOf(['click', 'hover']),
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否隐藏和显示
     * @param {String} type 触发弹层显示和隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 弹层自定义样式
     */
    popupStyle: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 弹层属性
     */
    popupProps: _prop_types_15_8_1_prop_types_default.a.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否禁用
     */
    disabled: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 输入框是否有边框
     */
    hasBorder: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 是否为预览态
     */
    isPreview: _prop_types_15_8_1_prop_types_default.a.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {DayjsObject} value 时间
     */
    renderPreview: _prop_types_15_8_1_prop_types_default.a.func,
    /**
     * 时间值改变时的回调
     * @param {DayjsObject} date dayjs时间对象
     * @param {Object|String} dateString 时间对象或时间字符串
     */
    onChange: _prop_types_15_8_1_prop_types_default.a.func,
    className: _prop_types_15_8_1_prop_types_default.a.string,
    name: _prop_types_15_8_1_prop_types_default.a.string,
    /**
     * 预设值，会显示在时间面板下面
     */
    preset: _prop_types_15_8_1_prop_types_default.a.oneOfType([_prop_types_15_8_1_prop_types_default.a.arrayOf(presetPropType), presetPropType]),
    inputProps: _prop_types_15_8_1_prop_types_default.a.shape(es_input.propTypes),
    popupComponent: _prop_types_15_8_1_prop_types_default.a.elementType,
    type: _prop_types_15_8_1_prop_types_default.a.oneOf(['time', 'range'])
}), time_picker2_time_picker__class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    locale: time_picker_timePickerLocale,
    size: 'medium',
    format: 'HH:mm:ss',
    hasClear: true,
    disabled: false,
    hasBorder: true,
    type: 'time',
    popupAlign: 'tl bl',
    popupTriggerType: 'click',
    onChange: time_picker2_time_picker_noop,
    onVisibleChange: time_picker2_time_picker_noop
}, time_picker2_time_picker__initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.getInitValue = function () {
        var props = _this3.props;
        var type = props.type,
            value = props.value,
            defaultValue = props.defaultValue;


        var val = type === TIME_PICKER_TYPE.RANGE ? [null, null] : null;

        val = 'value' in props ? value : 'defaultValue' in props ? defaultValue : val;

        return _this3.checkValue(val);
    };

    this.getInitRangeInputState = function () {
        return {
            justBeginInput: _this3.isEnabled(),
            inputType: _this3.isEnabled(0) ? TIME_INPUT_TYPE.BEGIN : TIME_INPUT_TYPE.END
        };
    };

    this.onKeyDown = function (e) {
        if (e.keyCode === KEYCODE.ENTER) {
            var inputValue = _this3.state.inputValue;

            _this3.handleChange(inputValue, 'KEYDOWN_ENTER');
            _this3.onClick();
            return;
        }

        var _state2 = _this3.state,
            value = _state2.value,
            inputStr = _state2.inputStr,
            inputType = _state2.inputType,
            isRange = _state2.isRange;
        var _props3 = _this3.props,
            format = _props3.format,
            _props3$hourStep = _props3.hourStep,
            hourStep = _props3$hourStep === undefined ? 1 : _props3$hourStep,
            _props3$minuteStep = _props3.minuteStep,
            minuteStep = _props3$minuteStep === undefined ? 1 : _props3$minuteStep,
            _props3$secondStep = _props3.secondStep,
            secondStep = _props3$secondStep === undefined ? 1 : _props3$secondStep,
            disabledMinutes = _props3.disabledMinutes,
            disabledSeconds = _props3.disabledSeconds;


        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }

        var timeStr = utils_onTimeKeydown(e, {
            format: format,
            timeInputStr: isRange ? inputStr[inputType] : inputStr,
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            },
            value: value
        }, unit);

        if (!timeStr) return;
        var newInputStr = timeStr;
        if (isRange) {
            newInputStr = inputStr;
            newInputStr[inputType] = timeStr;
        }

        _this3.handleChange(newInputStr, 'KEYDOWN_CODE');
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this3.props)) {
            _this3.setState({
                visible: visible
            });
        }
        _this3.props.onVisibleChange(visible, type);
    };

    this.onClick = function () {
        var _state3 = _this3.state,
            visible = _state3.visible,
            inputType = _state3.inputType;


        if (!visible) {
            _this3.onVisibleChange(true);
            _this3.handleInputFocus(inputType);
        }
    };

    this.handleVisibleChange = function (visible, targetType) {
        if (targetType === 'docClick') {
            // 弹层收起 触发 Change 逻辑
            if (!visible) {
                _this3.handleChange(_this3.state.curValue, 'VISIBLE_CHANGE');
            }
            _this3.onVisibleChange(visible);
        }
    };

    this.handleInputFocus = function (inputType) {
        var inputEl = _this3.dateInput && _this3.dateInput.input;

        if (_this3.state.isRange) {
            inputEl = inputEl && inputEl[inputType];
        }

        inputEl && inputEl.focus();
    };

    this.onOk = function () {
        var curValue = _this3.state.curValue;

        var checkedValue = _this3.checkValue(curValue);

        func.invoke(_this3.props, 'onOk', _this3.getOutputArgs(checkedValue));

        _this3.setState({ value: checkedValue });
        _this3.handleChange(checkedValue, 'CLICK_OK');
    };

    this.onInputTypeChange = function (idx) {
        var _state4 = _this3.state,
            inputType = _state4.inputType,
            visible = _state4.visible;


        if (idx !== inputType) {
            _this3.setState({
                inputType: idx,
                justBeginInput: !(idx !== null && visible)
            });
        }
    };

    this.checkValue = function (value, strictly) {
        var inputType = _this3.state.inputType;

        var formatter = function formatter(v) {
            return typeof v === 'string' ? util_datejs(v, 'HH:mm:ss') : v;
        };
        var formattedValue = Array.isArray(value) ? value.map(function (v) {
            return formatter(v);
        }) : formatter(value);

        return _this3.props.type === TIME_PICKER_TYPE.RANGE ? time_picker_checkRangeDate(formattedValue, inputType, _this3.props.disabled, strictly) : time_picker_checkDate(formattedValue);
    };

    this.getOutputArgs = function (value) {
        var format = _this3.props.format;

        return [value, fmtValue(value, format)];
    };

    this.onChange = function (v) {
        var state = _this3.state,
            props = _this3.props;
        var format = props.format;


        var nextValue = v === undefined ? state.value : v;
        var value = _this3.checkValue(nextValue);

        _this3.setState({
            curValue: value,
            preValue: value,
            inputStr: fmtValue(value, format),
            inputValue: fmtValue(value, format)
        });

        func.invoke(_this3.props, 'onChange', _this3.getOutputArgs(nextValue));
    };

    this.shouldSwitchInput = function (value) {
        var _state5 = _this3.state,
            inputType = _state5.inputType,
            justBeginInput = _state5.justBeginInput;

        var idx = justBeginInput ? switchInputType(inputType) : value.indexOf(null);

        if (idx !== -1 && _this3.isEnabled(idx)) {
            _this3.onInputTypeChange(idx);
            _this3.handleInputFocus(idx);
            return true;
        }

        return false;
    };

    this.handleChange = function (v, eventType) {
        var format = _this3.props.format;
        var _state6 = _this3.state,
            isRange = _state6.isRange,
            value = _state6.value,
            preValue = _state6.preValue;

        var forceEvents = ['KEYDOWN_ENTER', 'CLICK_PRESET', 'CLICK_OK', 'INPUT_CLEAR', 'VISIBLE_CHANGE'];
        var isTemporary = isRange && !forceEvents.includes(eventType);

        // 面板收起时候，将值设置为确认值
        v = eventType === 'VISIBLE_CHANGE' ? value : _this3.checkValue(v, !isTemporary);

        var stringV = fmtValue(v, format);

        _this3.setState({
            curValue: v,
            inputStr: stringV,
            inputValue: stringV,
            inputing: false
        });

        if (!isTemporary) {
            _this3.setState({
                value: v
            }, function () {
                // 判断当前选择结束，收起面板：
                // 1. 非 Range 选择
                // 2. 非 选择预设时间、面板收起、清空输入 操作
                // 3. 不需要切换输入框
                var shouldHidePanel = ['CLICK_PRESET', 'VISIBLE_CHANGE', 'KEYDOWN_ENTER', 'INPUT_CLEAR', 'CLICK_OK'].includes(eventType) || isRange && !_this3.shouldSwitchInput(v);
                if (shouldHidePanel) {
                    _this3.onVisibleChange(false);
                }

                if (util_isValueChanged(v, preValue)) {
                    _this3.onChange(v);
                }
            });
        }
    };

    this.isEnabled = function (idx) {
        var disabled = _this3.props.disabled;


        return Array.isArray(disabled) ? idx === undefined ? !disabled[0] && !disabled[1] : !disabled[idx] : !disabled;
    };

    this.handleClear = function () {
        /**
         * 清空输入之后 input 组件内部会让第二个输入框获得焦点
         * 所以这里需要设置 setTimeout 才能让第一个 input 获得焦点
         */
        _this3.clearTimeoutId = setTimeout(function () {
            _this3.handleInputFocus(0);
        });

        _this3.setState({
            inputType: TIME_INPUT_TYPE.BEGIN,
            justBeginInput: _this3.isEnabled()
        });
    };

    this.handleInput = function (v, eventType) {
        var isRange = _this3.state.isRange;

        if (eventType === 'clear') {
            _this3.handleChange(v, 'INPUT_CLEAR');

            if (isRange) {
                _this3.handleClear();
            }
        } else {
            _this3.setState({
                inputStr: v,
                inputValue: v,
                curValue: _this3.checkValue(v),
                inputing: true,
                visible: true
            });
        }
    };
}, time_picker2_time_picker__temp);
time_picker_TimePicker2.displayName = 'TimePicker2';


/* harmony default export */ var time_picker2_time_picker = (Object(react_lifecycles_compat_es["polyfill"])(time_picker_TimePicker2));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/time-picker2/index.js





var ConfigTimePicker = config_provider.config(time_picker2_time_picker);

ConfigTimePicker.RangePicker = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.forwardRef(function (props, ref) {
  return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigTimePicker, extends_default()({ ref: ref }, props, { type: 'range' }));
});
ConfigTimePicker.RangePicker.displayName = 'RangePicker';

/* harmony default export */ var time_picker2 = (ConfigTimePicker);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/panels/date-input.js






var panels_date_input__class, panels_date_input__temp;













var date_input_DATE = DATE_PICKER_MODE.DATE,
    date_input_WEEK = DATE_PICKER_MODE.WEEK,
    date_input_MONTH = DATE_PICKER_MODE.MONTH,
    date_input_QUARTER = DATE_PICKER_MODE.QUARTER,
    date_input_YEAR = DATE_PICKER_MODE.YEAR;
var panels_date_input_DateInput = (panels_date_input__temp = panels_date_input__class = function (_React$Component) {
    inherits_default()(DateInput, _React$Component);

    function DateInput(props) {
        classCallCheck_default()(this, DateInput);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.setInputRef = function (el, index) {
            if (_this.props.isRange) {
                if (!_this.input) {
                    _this.input = [];
                }
                _this.input[index] = el;
            } else {
                _this.input = el;
            }
        };

        _this.setValue = function (v) {
            var _this$props = _this.props,
                isRange = _this$props.isRange,
                inputType = _this$props.inputType,
                value = _this$props.value;

            var newVal = v;

            if (isRange) {
                newVal = [].concat(value);
                newVal[inputType] = v;
            }

            return newVal;
        };

        _this.formatter = function (v) {
            var format = _this.props.format;

            return typeof format === 'function' ? format(v) : v.format(format);
        };

        _this.onInput = function (v, e, eventType) {
            v = _this.setValue(v);

            if (eventType === 'clear') {
                v = null;
                e.stopPropagation();
            }

            func.invoke(_this.props, 'onInput', [v, eventType]);
        };

        _this.handleTypeChange = function (inputType) {
            if (inputType !== _this.props.inputType) {
                func.invoke(_this.props, 'onInputTypeChange', [inputType]);
            }
        };

        _this.getPlaceholder = function () {
            var _mode2placeholder;

            var _this$props2 = _this.props,
                locale = _this$props2.locale,
                isRange = _this$props2.isRange,
                mode = _this$props2.mode;
            var placeholder = locale.placeholder,
                selectDate = locale.selectDate,
                monthPlaceholder = locale.monthPlaceholder,
                weekPlaceholder = locale.weekPlaceholder,
                yearPlaceholder = locale.yearPlaceholder,
                startPlaceholder = locale.startPlaceholder,
                quarterPlaceholder = locale.quarterPlaceholder,
                endPlaceholder = locale.endPlaceholder;

            var mode2placeholder = (_mode2placeholder = {}, _mode2placeholder[date_input_DATE] = selectDate, _mode2placeholder[date_input_WEEK] = weekPlaceholder, _mode2placeholder[date_input_MONTH] = monthPlaceholder, _mode2placeholder[date_input_QUARTER] = quarterPlaceholder, _mode2placeholder[date_input_YEAR] = yearPlaceholder, _mode2placeholder);

            var holder = _this.props.placeholder;

            holder = holder || (isRange ? [startPlaceholder, endPlaceholder] : mode2placeholder[mode] || placeholder);

            if (isRange && !Array.isArray(holder)) {
                holder = Array(2).fill(holder);
            }

            return holder;
        };

        _this.getHtmlSize = function () {
            var _this$props3 = _this.props,
                isRange = _this$props3.isRange,
                format = _this$props3.format,
                hasBorder = _this$props3.hasBorder;

            var value = '2020-12-12 12:12:12';
            var size = 0;

            if (isRange) {
                var fmtStr = fmtValue([value, value].map(util_datejs), format);
                size = Math.max.apply(Math, fmtStr.map(function (s) {
                    return s && s.length || 0;
                }));
            } else {
                var _fmtStr = fmtValue(util_datejs(value), format);
                fmtValue(util_datejs(value), format);
                size = _fmtStr && _fmtStr.length || 0;
            }

            return String(Math.max(size, hasBorder ? 12 : 8));
        };

        _this.prefixCls = props.prefix + 'date-picker2-input';
        return _this;
    }

    /**
     * 根据 format 计算输入框 htmlSize
     */


    DateInput.prototype.render = function render() {
        var _classnames2;

        var onInput = this.onInput,
            setInputRef = this.setInputRef,
            handleTypeChange = this.handleTypeChange,
            prefixCls = this.prefixCls;

        var _props = this.props,
            autoFocus = _props.autoFocus,
            readOnly = _props.readOnly,
            isRange = _props.isRange,
            value = _props.value,
            prefix = _props.prefix,
            hasClear = _props.hasClear,
            inputType = _props.inputType,
            size = _props.size,
            focus = _props.focus,
            hasBorder = _props.hasBorder,
            separator = _props.separator,
            disabled = _props.disabled,
            inputProps = _props.inputProps,
            dateInputAriaLabel = _props.dateInputAriaLabel,
            state = _props.state,
            label = _props.label,
            restProps = objectWithoutProperties_default()(_props, ['autoFocus', 'readOnly', 'isRange', 'value', 'prefix', 'hasClear', 'inputType', 'size', 'focus', 'hasBorder', 'separator', 'disabled', 'inputProps', 'dateInputAriaLabel', 'state', 'label']);

        var placeholder = this.getPlaceholder();
        var htmlSize = this.getHtmlSize();

        var sharedProps = extends_default()({}, util_obj.pickProps(restProps, es_input), inputProps, {
            size: size,
            htmlSize: htmlSize,
            readOnly: readOnly,
            hasBorder: false,
            onChange: onInput
        });

        var rangeProps = void 0;
        if (isRange) {
            rangeProps = [DATE_INPUT_TYPE.BEGIN, DATE_INPUT_TYPE.END].map(function (idx) {
                var _classnames;

                var _disabled = Array.isArray(disabled) ? disabled[idx] : disabled;

                return extends_default()({}, sharedProps, {
                    autoFocus: autoFocus,
                    placeholder: placeholder[idx],
                    value: value[idx] || '',
                    'aria-label': Array.isArray(dateInputAriaLabel) ? dateInputAriaLabel[idx] : dateInputAriaLabel,
                    disabled: _disabled,
                    ref: function ref(_ref) {
                        return setInputRef(_ref, idx);
                    },
                    onFocus: _disabled ? undefined : function () {
                        return handleTypeChange(idx);
                    },
                    className: _classnames_2_3_1_classnames_default()((_classnames = {}, _classnames[prefixCls + '-active'] = inputType === idx, _classnames))
                });
            });
        }

        var className = _classnames_2_3_1_classnames_default()([prefixCls, prefixCls + '-' + size, prefixCls + '-' + (isRange ? 'range' : 'date')], (_classnames2 = {}, _classnames2[prefixCls + '-focus'] = focus, _classnames2[prefixCls + '-noborder'] = !hasBorder, _classnames2[prefixCls + '-disabled'] = isRange && Array.isArray(disabled) ? disabled.every(function (v) {
            return v;
        }) : disabled, _classnames2));

        var calendarIcon = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: 'calendar', className: prefix + 'date-picker2-symbol-calendar-icon' });

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: className },
            isRange ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment,
                null,
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, rangeProps[0], {
                    label: label,
                    autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
                })),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefixCls + '-separator' },
                    separator
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, rangeProps[1], {
                    state: state,
                    hasClear: !state && hasClear,
                    hint: state ? null : calendarIcon
                }))
            ) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_input, extends_default()({}, sharedProps, {
                label: label,
                state: state,
                disabled: disabled,
                hasClear: !state && hasClear,
                placeholder: placeholder,
                autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
                , ref: setInputRef,
                'aria-label': dateInputAriaLabel,
                value: value || '',
                hint: state ? null : calendarIcon
            }))
        );
    };

    return DateInput;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), panels_date_input__class.propTypes = {
    prefix: _prop_types_15_8_1_prop_types["string"],
    rtl: _prop_types_15_8_1_prop_types["bool"],
    locale: _prop_types_15_8_1_prop_types["object"],
    value: date_picker2_prop_types.inputValue,
    inputType: date_picker2_prop_types.inputType,
    format: date_picker2_prop_types.format,
    isRange: _prop_types_15_8_1_prop_types["bool"],
    hasClear: _prop_types_15_8_1_prop_types["bool"],
    onInputTypeChange: _prop_types_15_8_1_prop_types["func"],
    autoFocus: _prop_types_15_8_1_prop_types["bool"],
    readOnly: date_picker2_prop_types.readOnly,
    placeholder: date_picker2_prop_types.placeholder,
    size: date_picker2_prop_types.size,
    focus: _prop_types_15_8_1_prop_types["bool"],
    hasBorder: _prop_types_15_8_1_prop_types["bool"],
    separator: _prop_types_15_8_1_prop_types["node"],
    disabled: date_picker2_prop_types.disabled,
    inputProps: _prop_types_15_8_1_prop_types["object"],
    dateInputAriaLabel: date_picker2_prop_types.ariaLabel,
    label: _prop_types_15_8_1_prop_types["node"]
}, panels_date_input__class.defaultProps = {
    autoFocus: false,
    readOnly: false,
    hasClear: true,
    separator: '-',
    hasBorder: true,
    size: 'medium'
}, panels_date_input__temp);
panels_date_input_DateInput.displayName = 'DateInput';


/* harmony default export */ var panels_date_input = (Object(react_lifecycles_compat_es["polyfill"])(panels_date_input_DateInput));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar2/constant.js
// 日历shape
var CALENDAR_SHAPE = {
    FULLSCREEN: 'fullscreen',
    CARD: 'card',
    PANEL: 'panel'
};

// 日历模式
var CALENDAR_MODE = {
    MONTH: 'month',
    YEAR: 'year'
};

// 日期面板的模式
var DATE_PANEL_MODE = {
    DATE: 'date',
    WEEK: 'week',
    MONTH: 'month',
    QUARTER: 'quarter',
    YEAR: 'year',
    DECADE: 'decade'
};

// 单元格选中状态
var CALENDAR_CELL_STATE = {
    UN_SELECTED: 0,
    SELECTED: 1,
    SELECTED_BEGIN: 2,
    SELECTED_END: 3
};
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar2/prop-types.js




var calendar2_prop_types_error = function error(propName, ComponentName) {
    return new Error('Invalid prop ' + propName + ' supplied to ' + ComponentName + '. Validation failed.');
};

var calendar2_prop_types_SharedPT = {
    shape: _prop_types_15_8_1_prop_types["oneOf"](Object.values(CALENDAR_SHAPE)),
    mode: _prop_types_15_8_1_prop_types["oneOf"](Object.values(CALENDAR_MODE)),
    panelMode: _prop_types_15_8_1_prop_types["oneOf"](Object.values(DATE_PANEL_MODE)),
    // 日期类型：
    //  @string: 2020-11-11
    //  @date: 日期对象
    //  @moment: moment对象
    //  @dayjs: dayjs对象
    date: function date(props, propName, componentName) {
        if (propName in props && !util_datejs(props.propName).isValid()) {
            throw calendar2_prop_types_error(propName, componentName);
        }
    }
};

/* harmony default export */ var calendar2_prop_types = (calendar2_prop_types_SharedPT);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar2/panels/header-panel.js





var header_panel__class, header_panel__temp;












var header_panel_renderNode = func.renderNode;
var header_panel_DATE = DATE_PANEL_MODE.DATE,
    header_panel_WEEK = DATE_PANEL_MODE.WEEK,
    header_panel_QUARTER = DATE_PANEL_MODE.QUARTER,
    header_panel_MONTH = DATE_PANEL_MODE.MONTH,
    header_panel_YEAR = DATE_PANEL_MODE.YEAR,
    header_panel_DECADE = DATE_PANEL_MODE.DECADE;
var header_panel_HeaderPanel = (header_panel__temp = header_panel__class = function (_React$PureComponent) {
    inherits_default()(HeaderPanel, _React$PureComponent);

    function HeaderPanel(props) {
        classCallCheck_default()(this, HeaderPanel);

        var _this = possibleConstructorReturn_default()(this, _React$PureComponent.call(this, props));

        _this.createPanelBtns = function (_ref) {
            var unit = _ref.unit,
                _ref$num = _ref.num,
                num = _ref$num === undefined ? 1 : _ref$num,
                _ref$isSuper = _ref.isSuper,
                isSuper = _ref$isSuper === undefined ? true : _ref$isSuper;

            var value = _this.props.panelValue.clone();
            var prefixCls = _this.prefixCls;

            var iconTypes = isSuper ? ['arrow-double-left', 'arrow-double-right'] : ['arrow-left', 'arrow-right'];

            return [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                {
                    text: true,
                    className: prefixCls + '-btn  ' + prefixCls + '-left-btn',
                    onClick: function onClick() {
                        return _this.handleClick(value, { num: num, unit: unit, isSuper: isSuper, isNext: false });
                    },
                    key: 'prev-btn-' + unit
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: iconTypes[0] })
            ), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_button,
                {
                    text: true,
                    className: prefixCls + '-btn ' + prefixCls + '-right-btn',
                    onClick: function onClick() {
                        return _this.handleClick(value, { num: num, unit: unit, isSuper: isSuper, isNext: true });
                    },
                    key: 'next-btn-' + unit
                },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_icon, { type: iconTypes[1] })
            )];
        };

        _this.renderModeSwitch = function () {
            var _this$props = _this.props,
                mode = _this$props.mode,
                locale = _this$props.locale,
                onModeChange = _this$props.onModeChange;


            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                es_radio.Group,
                { key: 'mode-switch', shape: 'button', value: mode, onChange: onModeChange },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_radio,
                    { value: CALENDAR_MODE.MONTH },
                    locale.month
                ),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    es_radio,
                    { value: CALENDAR_MODE.YEAR },
                    locale.year
                )
            );
        };

        _this.renderMonthSelect = function () {
            var prefixCls = _this.prefixCls;
            var _this$props2 = _this.props,
                panelValue = _this$props2.panelValue,
                onPanelValueChange = _this$props2.onPanelValueChange;


            var curMonth = panelValue.month();
            var dataSource = util_datejs.monthsShort().map(function (label, value) {
                return {
                    label: label,
                    value: value
                };
            });

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_select, {
                className: prefixCls + '-select-month',
                popupClassName: prefixCls + '-select-month-popup',
                defaultValue: curMonth,
                dataSource: dataSource,
                onChange: function onChange(v) {
                    return onPanelValueChange(panelValue.month(v));
                }
            });
        };

        _this.prefixCls = props.prefix + 'calendar2-header';
        return _this;
    }

    HeaderPanel.prototype.handleClick = function handleClick(value, _ref2) {
        var unit = _ref2.unit,
            num = _ref2.num,
            isSuper = _ref2.isSuper,
            isNext = _ref2.isNext;
        var _props = this.props,
            onPanelValueChange = _props.onPanelValueChange,
            onPrev = _props.onPrev,
            onSuperPrev = _props.onSuperPrev,
            onNext = _props.onNext,
            onSuperNext = _props.onSuperNext;


        var handler = void 0;

        if (isSuper) {
            handler = isNext ? onSuperNext : onSuperPrev;
        } else {
            handler = isNext ? onNext : onPrev;
        }

        if (handler) {
            handler(value, { unit: unit, num: num });
        } else {
            var m = isNext ? 'add' : 'subtract';
            onPanelValueChange(value[m](num, unit), 'PANEL');
        }
    };

    HeaderPanel.prototype.renderYearSelect = function renderYearSelect() {
        var prefixCls = this.prefixCls;
        var _props2 = this.props,
            validValue = _props2.validValue,
            panelValue = _props2.panelValue,
            onPanelValueChange = _props2.onPanelValueChange;

        var curYear = panelValue.year();

        var beginYear = void 0;
        var endYear = void 0;

        // TODO 有效区间
        if (validValue) {
            var begin = validValue[0],
                end = validValue[1];

            beginYear = begin.year();
            endYear = end.year();
        } else {
            for (var i = 0; i < 20; i++) {
                beginYear = curYear - 10;
                endYear = curYear + 10;
            }
        }
        var dataSource = [];
        for (var _i = beginYear; _i < endYear; _i++) {
            dataSource.push({ label: _i, value: _i });
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_select, {
            key: 'year-select',
            className: prefixCls + '-select-year',
            popupClassName: prefixCls + '-select-year-popup',
            defaultValue: curYear,
            dataSource: dataSource,
            onChange: function onChange(v) {
                return onPanelValueChange(panelValue.year(v));
            }
        });
    };

    HeaderPanel.prototype.renderTextField = function renderTextField() {
        var prefixCls = this.prefixCls;
        var _props3 = this.props,
            panelValue = _props3.panelValue,
            locale = _props3.locale,
            panelMode = _props3.panelMode,
            onPanelModeChange = _props3.onPanelModeChange;


        var monthBeforeYear = locale.monthBeforeYear || false;
        var localeData = util_datejs.localeData();

        var year = panelValue.year() + (locale && locale.year === '年' ? '年' : '');
        var month = localeData.monthsShort()[panelValue.month()];
        var DATE = DATE_PANEL_MODE.DATE,
            WEEK = DATE_PANEL_MODE.WEEK,
            QUARTER = DATE_PANEL_MODE.QUARTER,
            MONTH = DATE_PANEL_MODE.MONTH,
            YEAR = DATE_PANEL_MODE.YEAR,
            DECADE = DATE_PANEL_MODE.DECADE;


        var nodes = void 0;
        var yearNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            es_button,
            {
                text: true,
                key: 'year-btn',
                tabIndex: -1,
                className: prefixCls + '-btn',
                onClick: function onClick() {
                    return onPanelModeChange(YEAR);
                }
            },
            year
        );

        switch (panelMode) {
            case DATE:
            case WEEK:
                {
                    var monthNode = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        es_button,
                        {
                            text: true,
                            key: 'month-btn',
                            tabIndex: -1,
                            className: prefixCls + '-btn',
                            onClick: function onClick() {
                                return onPanelModeChange(MONTH);
                            }
                        },
                        month
                    );
                    nodes = monthBeforeYear ? [monthNode, yearNode] : [yearNode, monthNode];
                    break;
                }

            case MONTH:
            case QUARTER:
                {
                    nodes = yearNode;
                    break;
                }

            case YEAR:
                {
                    var curYear = panelValue.year();
                    var start = curYear - curYear % 10;
                    var end = start + 9;
                    nodes = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        es_button,
                        {
                            text: true,
                            key: 'decade-btn',
                            tabIndex: -1,
                            className: prefixCls + '-btn',
                            onClick: function onClick() {
                                return onPanelModeChange(DECADE);
                            }
                        },
                        this.props.rtl ? end + '-' + start : start + '-' + end
                    );
                    break;
                }
            case DECADE:
                {
                    var _curYear = panelValue.year();
                    var _start = _curYear - _curYear % 100;
                    var _end = _start + 99;

                    nodes = this.props.rtl ? _end + '-' + _start : _start + '-' + _end;
                    break;
                }
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { key: 'header-text-field', className: prefixCls + '-text-field' },
            nodes
        );
    };

    HeaderPanel.prototype.renderPanelHeader = function renderPanelHeader() {
        var createPanelBtns = this.createPanelBtns;
        var panelMode = this.props.panelMode;


        var nodes = [];

        var textFieldNode = this.renderTextField();

        switch (panelMode) {
            case header_panel_DATE:
            case header_panel_WEEK:
                {
                    var _createPanelBtns = createPanelBtns({
                        unit: 'month',
                        isSuper: false
                    }),
                        preMonthBtn = _createPanelBtns[0],
                        nextMonthBtn = _createPanelBtns[1];

                    var _createPanelBtns2 = createPanelBtns({
                        unit: 'year'
                    }),
                        preYearBtn = _createPanelBtns2[0],
                        nextYearBtn = _createPanelBtns2[1];

                    nodes = [preYearBtn, preMonthBtn, textFieldNode, nextMonthBtn, nextYearBtn];
                    break;
                }
            case header_panel_QUARTER:
            case header_panel_MONTH:
                {
                    var _createPanelBtns3 = createPanelBtns({
                        unit: 'year'
                    }),
                        _preYearBtn = _createPanelBtns3[0],
                        _nextYearBtn = _createPanelBtns3[1];

                    nodes = [_preYearBtn, textFieldNode, _nextYearBtn];
                    break;
                }
            case header_panel_YEAR:
                {
                    var _createPanelBtns4 = createPanelBtns({
                        unit: 'year',
                        num: 10
                    }),
                        preDecadeBtn = _createPanelBtns4[0],
                        nextDecadeBtn = _createPanelBtns4[1];

                    nodes = [preDecadeBtn, textFieldNode, nextDecadeBtn];
                    break;
                }
            case header_panel_DECADE:
                {
                    var _createPanelBtns5 = createPanelBtns({
                        unit: 'year',
                        num: 100
                    }),
                        preCenturyBtn = _createPanelBtns5[0],
                        nextCenturyBtn = _createPanelBtns5[1];

                    nodes = [preCenturyBtn, textFieldNode, nextCenturyBtn];
                    break;
                }
        }

        return nodes;
    };

    HeaderPanel.prototype.renderInner = function renderInner() {
        var prefixCls = this.prefixCls;
        var _props4 = this.props,
            shape = _props4.shape,
            showTitle = _props4.showTitle,
            value = _props4.value,
            mode = _props4.mode,
            showModeSwitch = _props4.showModeSwitch;


        var nodes = [];

        if (shape === CALENDAR_SHAPE.PANEL) {
            return this.renderPanelHeader();
        } else {
            if (showTitle) {
                nodes.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { key: 'title', className: prefixCls + '-title' },
                    header_panel_renderNode(this.props.titleRender, value.format(), [value])
                ));
            }
            nodes.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { key: 'actions', className: prefixCls + '-actions' },
                this.renderYearSelect(),
                mode !== CALENDAR_MODE.YEAR ? this.renderMonthSelect() : null,
                showModeSwitch ? this.renderModeSwitch() : null,
                this.props.renderHeaderExtra && this.props.renderHeaderExtra(extends_default()({}, this.props))
            ));
        }

        return nodes;
    };

    HeaderPanel.prototype.render = function render() {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: '' + this.prefixCls },
            header_panel_renderNode(this.props.headerRender, this.renderInner(), [].concat(this.props))
        );
    };

    return HeaderPanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent), header_panel__class.propTypes = {
    rtl: _prop_types_15_8_1_prop_types["bool"],
    prefix: _prop_types_15_8_1_prop_types["string"],
    locale: _prop_types_15_8_1_prop_types["object"],
    mode: _prop_types_15_8_1_prop_types["any"],
    shape: _prop_types_15_8_1_prop_types["string"],
    value: _prop_types_15_8_1_prop_types["any"],
    panelMode: _prop_types_15_8_1_prop_types["any"],
    panelValue: _prop_types_15_8_1_prop_types["any"],
    validValue: _prop_types_15_8_1_prop_types["any"],
    showTitle: _prop_types_15_8_1_prop_types["bool"],
    showModeSwitch: _prop_types_15_8_1_prop_types["bool"],
    onModeChange: _prop_types_15_8_1_prop_types["func"],
    onPanelValueChange: _prop_types_15_8_1_prop_types["func"],
    onPanelModeChange: _prop_types_15_8_1_prop_types["func"],
    onPrev: _prop_types_15_8_1_prop_types["func"],
    onNext: _prop_types_15_8_1_prop_types["func"],
    onSuperPrev: _prop_types_15_8_1_prop_types["func"],
    onSuperNext: _prop_types_15_8_1_prop_types["func"],
    titleRender: _prop_types_15_8_1_prop_types["func"],
    /**
     * 扩展操作区域渲染
     */
    renderHeaderExtra: _prop_types_15_8_1_prop_types["func"],
    /**
     * 自定义头部渲染
     */
    headerRender: _prop_types_15_8_1_prop_types["func"]
}, header_panel__class.defaultProps = {
    showTitle: false
}, header_panel__temp);


/* harmony default export */ var header_panel = (Object(react_lifecycles_compat_es["polyfill"])(header_panel_HeaderPanel));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar2/panels/date-table.js





var _mode2Rows, date_table__class, date_table__temp;









var date_table_bindCtx = func.bindCtx,
    date_table_renderNode = func.renderNode;
var date_table_DATE = DATE_PANEL_MODE.DATE,
    date_table_WEEK = DATE_PANEL_MODE.WEEK,
    date_table_MONTH = DATE_PANEL_MODE.MONTH,
    date_table_QUARTER = DATE_PANEL_MODE.QUARTER,
    date_table_YEAR = DATE_PANEL_MODE.YEAR,
    date_table_DECADE = DATE_PANEL_MODE.DECADE;

// 面板行数

var mode2Rows = (_mode2Rows = {}, _mode2Rows[date_table_DATE] = 7, _mode2Rows[date_table_WEEK] = 7, _mode2Rows[date_table_MONTH] = 4, _mode2Rows[date_table_QUARTER] = 4, _mode2Rows[date_table_YEAR] = 4, _mode2Rows[date_table_DECADE] = 3, _mode2Rows);

var panels_date_table_DateTable = (date_table__temp = date_table__class = function (_React$Component) {
    inherits_default()(DateTable, _React$Component);

    function DateTable(props) {
        classCallCheck_default()(this, DateTable);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        _this.getCustomRender = function (mode) {
            var _mode2RenderName;

            var mode2RenderName = (_mode2RenderName = {}, _mode2RenderName[date_table_DATE] = 'dateCellRender', _mode2RenderName[date_table_QUARTER] = 'quarterCellRender', _mode2RenderName[date_table_MONTH] = 'monthCellRender', _mode2RenderName[date_table_YEAR] = 'yearCellRender', _mode2RenderName);

            return _this.props[mode2RenderName[mode]];
        };

        _this.prefixCls = props.prefix + 'calendar2';

        date_table_bindCtx(_this, ['getDateCellData', 'getMonthCellData', 'getQuarterCellData', 'getYearCellData', 'getDecadeData', 'handleKeyDown', 'handleSelect', 'handleMouseEnter', 'handleMouseLeave']);

        _this.state = {
            hoverValue: null
        };
        return _this;
    }

    DateTable.prototype.handleSelect = function handleSelect(v, e, args) {
        func.invoke(this.props, 'onSelect', [v, e, args]);
    };

    DateTable.prototype.handleKeyDown = function handleKeyDown(v, e, args) {
        switch (e.keyCode) {
            case KEYCODE.ENTER:
                this.handleSelect(v, e, args);
                break;
            case KEYCODE.RIGHT:
                break;
        }
        // e.preventDefault();
    };

    DateTable.prototype.handleMouseEnter = function handleMouseEnter(v, e, args) {
        func.invoke(this.props.cellProps, 'onMouseEnter', [v, e, args]);
    };

    DateTable.prototype.handleMouseLeave = function handleMouseLeave(v, e, args) {
        func.invoke(this.props.cellProps, 'onMouseLeave', [v, e, args]);
    };

    DateTable.prototype.isSame = function isSame(curDate, date, mode) {
        switch (mode) {
            case date_table_DATE:
                return curDate.isSame(date, 'day');
            case date_table_WEEK:
                return curDate.isSame(date, 'week');
            case date_table_QUARTER:
                return curDate.isSame(date, 'quarter');
            case date_table_MONTH:
                return curDate.isSame(date, 'month');
            case date_table_YEAR:
                return curDate.isSame(date, 'year');
            case date_table_DECADE:
                {
                    var curYear = curDate.year();
                    var targetYear = date.year();
                    return curYear <= targetYear && targetYear < curYear + 10;
                }
        }
    };

    /**
     * 渲染日期面板
     * @param {Object[]} cellData - 单元格数据
     * @param {String}   cellData[].label - 单元格显示文本
     * @param {Object}   cellData[].value - 日期对象
     * @param {Boolean}  cellData[].isCurrent - 是否是当前面板时间范围内的值
     */
    DateTable.prototype.renderCellContent = function renderCellContent(cellData) {
        var _this2 = this;

        var props = this.props;
        var mode = props.mode,
            hoveredState = props.hoveredState,
            cellClassName = props.cellClassName;
        var hoverValue = this.state.hoverValue;


        var cellContent = [];
        var cellCls = this.prefixCls + '-cell';

        var now = util_datejs();
        var rowLen = mode2Rows[mode];

        for (var i = 0; i < cellData.length;) {
            var children = [];

            var isCurrentWeek = void 0;

            var _loop = function _loop(j) {
                var _extends2;

                var _cellData = cellData[i++],
                    label = _cellData.label,
                    value = _cellData.value,
                    key = _cellData.key,
                    isCurrent = _cellData.isCurrent;

                var v = value.startOf(mode);

                var isDisabled = props.disabledDate && props.disabledDate(v, mode);
                var hoverState = hoverValue && hoveredState && hoveredState(hoverValue);
                var className = _classnames_2_3_1_classnames_default()(cellCls, extends_default()((_extends2 = {}, _extends2[cellCls + '-current'] = isCurrent, _extends2[cellCls + '-today'] = mode === date_table_WEEK ? _this2.isSame(value, now, date_table_DATE) : _this2.isSame(v, now, mode), _extends2[cellCls + '-selected'] = _this2.isSame(v, props.value, mode), _extends2[cellCls + '-disabled'] = isDisabled, _extends2[cellCls + '-range-hover'] = hoverState, _extends2), cellClassName && cellClassName(v)));

                var onEvents = null;

                if (!isDisabled) {
                    onEvents = {
                        onClick: function onClick(e) {
                            return _this2.handleSelect(v, e, { isCurrent: isCurrent, label: label });
                        },
                        onKeyDown: function onKeyDown(e) {
                            return _this2.handleKeyDown(v, e, { isCurrent: isCurrent, label: label });
                        },
                        onMouseEnter: function onMouseEnter(e) {
                            return _this2.handleMouseEnter(v, e, { isCurrent: isCurrent, label: label });
                        },
                        onMouseLeave: function onMouseLeave(e) {
                            return _this2.handleMouseLeave(v, e, { isCurrent: isCurrent, label: label });
                        }
                    };
                }

                if (mode === date_table_WEEK && j === 0) {
                    var week = v.week();

                    children.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'td',
                        { key: 'w-' + week, className: '' + cellCls },
                        external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'div',
                            { className: cellCls + '-inner' },
                            week
                        )
                    ));
                    isCurrentWeek = isCurrent;
                }

                var customRender = _this2.getCustomRender(mode);

                children.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'td',
                    extends_default()({ key: key, title: key }, onEvents, { className: className }),
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { className: cellCls + '-inner' },
                        date_table_renderNode(customRender, external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                            'div',
                            { className: cellCls + '-value' },
                            label
                        ), [v])
                    )
                ));
            };

            for (var j = 0; j < rowLen; j++) {
                _loop(j);
            }

            var className = void 0;
            if (mode === date_table_WEEK) {
                var _classnames;

                className = _classnames_2_3_1_classnames_default()(this.prefixCls + '-week', (_classnames = {}, _classnames[this.prefixCls + '-week-current'] = isCurrentWeek, _classnames));
            }

            cellContent.push(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                { key: i, className: className },
                children
            ));
        }

        return cellContent;
    };

    // 星期几


    DateTable.prototype.renderWeekdaysHead = function renderWeekdaysHead() {
        var weekdaysMin = util_datejs.weekdaysMin();
        var firstDayOfWeek = util_datejs.localeData().firstDayOfWeek();

        // 默认一周的第一天是周日，否则需要调整
        if (firstDayOfWeek !== 0) {
            weekdaysMin = weekdaysMin.slice(firstDayOfWeek).concat(weekdaysMin.slice(0, firstDayOfWeek));
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'thead',
            null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tr',
                null,
                this.props.mode === date_table_WEEK ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('th', { className: this.prefixCls + '-cell-week' }) : null,
                weekdaysMin.map(function (d) {
                    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'th',
                        { key: d },
                        d
                    );
                })
            )
        );
    };

    DateTable.prototype.getDateCellData = function getDateCellData() {
        var _props = this.props,
            panelValue = _props.panelValue,
            colNum = _props.colNum;


        var firstDayOfMonth = panelValue.clone().startOf('month');
        var weekOfFirstDay = firstDayOfMonth.day(); // 当月第一天星期几
        var daysOfCurMonth = panelValue.endOf('month').date(); // 当月天数
        var firstDayOfWeek = util_datejs.localeData().firstDayOfWeek(); // 一周的第一天是星期几

        var cellData = [];
        var preDays = (weekOfFirstDay - firstDayOfWeek + 7) % 7;
        var nextDays = colNum ? colNum * mode2Rows[date_table_DATE] - preDays - daysOfCurMonth : (7 - (preDays + daysOfCurMonth) % 7) % 7;

        // 上个月日期
        for (var i = preDays; i > 0; i--) {
            cellData.push(firstDayOfMonth.clone().subtract(i, 'day'));
        }

        // 本月日期
        for (var _i = 0; _i < daysOfCurMonth; _i++) {
            cellData.push(firstDayOfMonth.clone().add(_i, 'day'));
        }

        // 下个月日期
        for (var _i2 = 0; _i2 < nextDays; _i2++) {
            cellData.push(firstDayOfMonth.clone().add(daysOfCurMonth + _i2, 'day'));
        }

        return cellData.map(function (value) {
            return {
                value: value,
                label: value.date(),
                isCurrent: value.isSame(firstDayOfMonth, 'month'),
                key: value.format('YYYY-MM-DD')
            };
        });
    };

    DateTable.prototype.getMonthCellData = function getMonthCellData() {
        var panelValue = this.props.panelValue;


        return util_datejs.monthsShort().map(function (label, index) {
            var value = panelValue.clone().month(index);

            return {
                label: label,
                value: value,
                isCurrent: true,
                key: value.format('YYYY-MM')
            };
        });
    };

    DateTable.prototype.getQuarterCellData = function getQuarterCellData() {
        var panelValue = this.props.panelValue;


        return [1, 2, 3, 4].map(function (i) {
            return {
                label: 'Q' + i,
                value: panelValue.clone().quarter(i),
                isCurrent: true,
                key: 'Q' + i
            };
        });
    };

    DateTable.prototype.getYearCellData = function getYearCellData() {
        var panelValue = this.props.panelValue;

        var curYear = panelValue.year();
        var startYear = curYear - curYear % 10 - 1;
        var cellData = [];

        for (var i = 0; i < 12; i++) {
            var y = startYear + i;

            cellData.push({
                value: panelValue.clone().year(y),
                label: y,
                isCurrent: i > 0 && i < 11,
                key: y
            });
        }

        return cellData;
    };

    DateTable.prototype.getDecadeData = function getDecadeData() {
        var panelValue = this.props.panelValue;

        var curYear = panelValue.year();
        var startYear = curYear - curYear % 100 - 10;
        var cellData = [];

        for (var i = 0; i < 12; i++) {
            var y = startYear + i * 10;

            cellData.push({
                value: panelValue.clone().year(y),
                label: y + '-' + (y + 9),
                isCurrent: i > 0 && i < 11,
                key: y + '-' + (y + 9)
            });
        }

        return cellData;
    };

    DateTable.prototype.render = function render() {
        var _mode2Data;

        var mode = this.props.mode;

        var mode2Data = (_mode2Data = {}, _mode2Data[date_table_DATE] = this.getDateCellData, _mode2Data[date_table_WEEK] = this.getDateCellData, _mode2Data[date_table_MONTH] = this.getMonthCellData, _mode2Data[date_table_QUARTER] = this.getQuarterCellData, _mode2Data[date_table_YEAR] = this.getYearCellData, _mode2Data[date_table_DECADE] = this.getDecadeData, _mode2Data);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'table',
            { className: this.prefixCls + '-table ' + this.prefixCls + '-table-' + mode },
            [date_table_DATE, date_table_WEEK].includes(mode) ? this.renderWeekdaysHead() : null,
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'tbody',
                null,
                this.renderCellContent(mode2Data[mode]())
            )
        );
    };

    return DateTable;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), date_table__class.propTypes = {
    mode: calendar2_prop_types.panelMode,
    value: calendar2_prop_types.date,
    panelValue: calendar2_prop_types.date,
    dateCellRender: _prop_types_15_8_1_prop_types["func"],
    quarterCellRender: _prop_types_15_8_1_prop_types["func"],
    monthCellRender: _prop_types_15_8_1_prop_types["func"],
    yearCellRender: _prop_types_15_8_1_prop_types["func"],
    disabledDate: _prop_types_15_8_1_prop_types["func"],
    selectedState: _prop_types_15_8_1_prop_types["func"],
    hoveredState: _prop_types_15_8_1_prop_types["func"],
    onSelect: _prop_types_15_8_1_prop_types["func"],
    onDateSelect: _prop_types_15_8_1_prop_types["func"],
    startOnSunday: _prop_types_15_8_1_prop_types["bool"],
    cellClassName: _prop_types_15_8_1_prop_types["oneOfType"]([_prop_types_15_8_1_prop_types["func"], _prop_types_15_8_1_prop_types["string"]]),
    colNum: _prop_types_15_8_1_prop_types["number"],
    cellProps: _prop_types_15_8_1_prop_types["object"]
}, date_table__temp);
panels_date_table_DateTable.displayName = 'DateTable';


/* harmony default export */ var panels_date_table = (Object(react_lifecycles_compat_es["polyfill"])(panels_date_table_DateTable));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar2/calendar.js






var calendar2_calendar__class, calendar2_calendar__temp, calendar2_calendar__initialiseProps;













var calendar_pickProps = util_obj.pickProps,
    calendar_pickOthers = util_obj.pickOthers;

// CALENDAR_MODE => DATE_PANEL_MODE

function getPanelMode(mode) {
    return mode && (mode === CALENDAR_MODE.YEAR ? DATE_PANEL_MODE.MONTH : DATE_PANEL_MODE.DATE);
}

function calendar2_calendar_isValueChanged(newVal, oldVal) {
    return newVal !== oldVal && !util_datejs(newVal).isSame(util_datejs(oldVal));
}

var calendar2_calendar_Calendar = (calendar2_calendar__temp = calendar2_calendar__class = function (_React$Component) {
    inherits_default()(Calendar, _React$Component);

    function Calendar(props) {
        classCallCheck_default()(this, Calendar);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        calendar2_calendar__initialiseProps.call(_this);

        var defaultValue = props.defaultValue,
            mode = props.mode;

        var value = 'value' in props ? props.value : defaultValue;
        var panelValue = util_datejs('panelValue' in props ? props.panelValue : value || props.defaultPanelValue);
        var panelMode = props.panelMode || getPanelMode(mode) || DATE_PANEL_MODE.DATE;

        _this.state = {
            mode: mode,
            value: value,
            panelMode: panelMode,
            panelValue: panelValue.isValid() ? panelValue : util_datejs()
        };
        return _this;
    }

    Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var newState = null;
        var value = void 0;
        var panelValue = void 0;

        if ('value' in props && calendar2_calendar_isValueChanged(props.value, state.value)) {
            value = props.value;
            panelValue = util_datejs(value);
        }

        if ('panelValue' in props) {
            panelValue = util_datejs(props.panelValue);
        }

        // panelValue不能是无效值
        if (panelValue) {
            panelValue = panelValue.isValid() ? panelValue : util_datejs();
            newState = {
                panelValue: panelValue
            };
        }
        if (value) {
            newState.value = value;
        }

        return newState;
    };

    Calendar.prototype.render = function render() {
        var value = 'value' in this.props ? util_datejs(this.props.value) : this.state.value;
        var _state = this.state,
            panelMode = _state.panelMode,
            mode = _state.mode,
            panelValue = _state.panelValue;

        var _props = this.props,
            prefix = _props.prefix,
            shape = _props.shape,
            rtl = _props.rtl,
            className = _props.className,
            restProps = objectWithoutProperties_default()(_props, ['prefix', 'shape', 'rtl', 'className']);

        var sharedProps = {
            rtl: rtl,
            prefix: prefix,
            shape: shape,
            value: value,
            panelValue: panelValue
        };

        var headerPanelProps = extends_default()({}, calendar_pickProps(header_panel.propTypes, restProps), sharedProps, {
            mode: mode,
            panelMode: panelMode,
            onPanelValueChange: this.onPanelValueChange,
            onModeChange: this.onModeChange,
            onPanelModeChange: this.onPanelModeChange,
            showModeSwitch: this.props.mode !== CALENDAR_MODE.YEAR
        });

        var dateTableProps = extends_default()({}, calendar_pickProps(panels_date_table.propTypes, restProps), sharedProps, {
            mode: panelMode,
            onSelect: this.onDateSelect
        });

        var classNames = _classnames_2_3_1_classnames_default()([prefix + 'calendar2', prefix + 'calendar2-' + shape, className]);

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, calendar_pickOthers(Calendar.propTypes, restProps), { dir: rtl ? 'rtl' : undefined, className: classNames }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(header_panel, headerPanelProps),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar2-body' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(panels_date_table, dateTableProps)
            )
        );
    };

    return Calendar;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), calendar2_calendar__class.propTypes = {
    rtl: _prop_types_15_8_1_prop_types["bool"],
    name: _prop_types_15_8_1_prop_types["string"],
    prefix: _prop_types_15_8_1_prop_types["string"],
    locale: _prop_types_15_8_1_prop_types["object"],
    /**
     * 展现形态
     */
    shape: calendar2_prop_types.shape,
    /*
     * 日期模式: month | year
     */
    mode: calendar2_prop_types.mode,
    /**
     * 默认选中的日期（受控）
     */
    value: calendar2_prop_types.date,
    /**
     * 默认选中的日期
     */
    defaultValue: calendar2_prop_types.date,
    /**
     * 面板显示的日期（受控）
     */
    panelValue: calendar2_prop_types.date,
    /**
     * 面板默认显示的日期
     */
    defaultPanelValue: calendar2_prop_types.date,
    /**
     * 不可选择的日期
     */
    disabledDate: _prop_types_15_8_1_prop_types["func"],
    /**
     * 可显示的日期范围
     */
    validRange: _prop_types_15_8_1_prop_types["arrayOf"](calendar2_prop_types.date),
    /**
     * 自定义日期渲染
     */
    dateCellRender: _prop_types_15_8_1_prop_types["func"],
    quarterCellRender: _prop_types_15_8_1_prop_types["func"],
    monthCellRender: _prop_types_15_8_1_prop_types["func"],
    yearCellRender: _prop_types_15_8_1_prop_types["func"],
    /**
     * 自定义头部渲染
     */
    headerRender: _prop_types_15_8_1_prop_types["func"],
    /**
     * 日期变化回调
     */
    onChange: _prop_types_15_8_1_prop_types["func"],
    /**
     * 点击选择日期回调
     */
    onSelect: _prop_types_15_8_1_prop_types["func"],
    /**
     * 日期面板变化回调
     */
    onPanelChange: _prop_types_15_8_1_prop_types["func"],
    cellProps: _prop_types_15_8_1_prop_types["object"],
    cellClassName: _prop_types_15_8_1_prop_types["oneOfType"]([_prop_types_15_8_1_prop_types["func"], _prop_types_15_8_1_prop_types["string"]]),
    panelMode: _prop_types_15_8_1_prop_types["any"],
    onPrev: _prop_types_15_8_1_prop_types["func"],
    onNext: _prop_types_15_8_1_prop_types["func"],
    onSuperPrev: _prop_types_15_8_1_prop_types["func"],
    onSuperNext: _prop_types_15_8_1_prop_types["func"],
    colNum: _prop_types_15_8_1_prop_types["number"]
}, calendar2_calendar__class.defaultProps = {
    rtl: false,
    prefix: 'next-',
    locale: locale_zh_cn.Calendar,
    shape: CALENDAR_SHAPE.FULLSCREEN,
    mode: CALENDAR_MODE.MONTH,
    defaultPanelValue: util_datejs()
}, calendar2_calendar__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.switchPanelMode = function (mode) {
        var MONTH = DATE_PANEL_MODE.MONTH,
            YEAR = DATE_PANEL_MODE.YEAR,
            DECADE = DATE_PANEL_MODE.DECADE;

        var originalPanelMode = _this2.props.panelMode || getPanelMode(mode);

        switch (mode) {
            case YEAR:
                return MONTH;
            case DECADE:
                return YEAR;
            default:
                return originalPanelMode;
        }
    };

    this.shouldSwitchPanelMode = function () {
        var _props2 = _this2.props,
            mode = _props2.mode,
            shape = _props2.shape;
        var panelMode = _this2.state.panelMode;

        var originalPanelMode = _this2.props.panelMode || getPanelMode(mode);
        return shape === CALENDAR_SHAPE.PANEL && panelMode !== originalPanelMode;
    };

    this.onDateSelect = function (value, _, _ref) {
        var isCurrent = _ref.isCurrent;
        var panelMode = _this2.state.panelMode;

        var unit = panelMode === 'date' ? 'day' : panelMode;

        if (_this2.shouldSwitchPanelMode()) {
            _this2.onPanelChange(value, _this2.switchPanelMode(panelMode), 'DATESELECT_VALUE_SWITCH_MODE');
        } else {
            isCurrent || _this2.onPanelValueChange(value, 'DATESELECT');
            value.isSame(_this2.state.value, unit) || _this2.onChange(value);

            func.invoke(_this2.props, 'onSelect', [value]);
        }
    };

    this.onModeChange = function (mode, reason) {
        _this2.setState({
            mode: mode
        });
        var panelMode = getPanelMode(mode);

        if (_this2.state.panelMode !== panelMode) {
            _this2.onPanelModeChange(panelMode, reason);
        }
    };

    this.onPanelValueChange = function (panelValue, reason) {
        _this2.onPanelChange(panelValue, _this2.state.panelMode, reason);
    };

    this.onPanelModeChange = function (panelMode, reason) {
        _this2.onPanelChange(_this2.state.panelValue, panelMode, reason);
    };

    this.onPanelChange = function (value, mode, reason) {
        _this2.setState({
            panelMode: mode,
            panelValue: value
        });

        func.invoke(_this2.props, 'onPanelChange', [value, mode, reason]);
    };

    this.onChange = function (value) {
        _this2.setState({
            value: value,
            panelValue: value
        });
        func.invoke(_this2.props, 'onChange', [value]);
    };
}, calendar2_calendar__temp);
calendar2_calendar_Calendar.displayName = 'Calendar';


/* harmony default export */ var calendar2_calendar = (Object(react_lifecycles_compat_es["polyfill"])(calendar2_calendar_Calendar));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/calendar2/index.js



/* harmony default export */ var calendar2 = (config_provider.config(calendar2_calendar));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/panels/time-panel.js





var time_panel__class, time_panel__temp2;








var DECADE_TIME_FORMAT = 'HH:mm:ss';

var time_panel_TimePanel = (time_panel__temp2 = time_panel__class = function (_React$PureComponent) {
    inherits_default()(TimePanel, _React$PureComponent);

    function TimePanel() {
        var _temp, _this, _ret;

        classCallCheck_default()(this, TimePanel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = possibleConstructorReturn_default()(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.formater = function (v) {
            var _this$props$timePanel = _this.props.timePanelProps,
                timePanelProps = _this$props$timePanel === undefined ? {} : _this$props$timePanel;

            var _this$getShow = _this.getShow(),
                showHour = _this$getShow.showHour,
                showMinute = _this$getShow.showMinute,
                showSecond = _this$getShow.showSecond;

            var fmt = void 0;
            if ('format' in timePanelProps) {
                fmt = timePanelProps.format;
            } else {
                var fmtArr = [];

                showHour && fmtArr.push('HH');
                showMinute && fmtArr.push('mm');
                showSecond && fmtArr.push('ss');

                fmt = fmtArr.join(':');
            }

            return typeof fmt === 'function' ? fmt(v) : v.format(fmt);
        }, _this.getShow = function () {
            var _this$props$timePanel2 = _this.props.timePanelProps,
                props = _this$props$timePanel2 === undefined ? {} : _this$props$timePanel2;


            var fmt = props.format || DECADE_TIME_FORMAT;

            var showHour = void 0;
            var showMinute = void 0;
            var showSecond = void 0;

            if (typeof fmt === 'string') {
                showHour = fmt.indexOf('H') > -1;
                showSecond = fmt.indexOf('s') > -1;
                showMinute = fmt.indexOf('m') > -1;
            }

            return {
                showHour: 'showHour' in props ? props.showHour : showHour,
                showMinute: 'showMinute' in props ? props.showMinute : showMinute,
                showSecond: 'showSecond' in props ? props.showSecond : showSecond
            };
        }, _this.onSelect = function (v) {
            func.invoke(_this.props, 'onSelect', [v]);
        }, _temp), possibleConstructorReturn_default()(_this, _ret);
    }

    TimePanel.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            locale = _props.locale,
            _props$timePanelProps = _props.timePanelProps,
            timePanelProps = _props$timePanelProps === undefined ? {} : _props$timePanelProps,
            value = _props.value;

        var _getShow = this.getShow(),
            showHour = _getShow.showHour,
            showMinute = _getShow.showMinute,
            showSecond = _getShow.showSecond;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { dir: rtl ? 'rtl' : undefined, className: prefix + 'date-time-picker-wrapper ' + prefix + 'calendar2-panel' },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: prefix + 'calendar2-header' },
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { className: prefix + 'calendar2-header-text-field' },
                    value ? this.formater(value) : null
                )
            ),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_picker2_panel, extends_default()({
                prefix: prefix,
                locale: locale,
                onSelect: this.onSelect,
                showHour: showHour,
                showSecond: showSecond,
                showMinute: showMinute
            }, timePanelProps, {
                value: value
            }))
        );
    };

    return TimePanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.PureComponent), time_panel__class.propTypes = {
    rtl: _prop_types_15_8_1_prop_types["bool"],
    prefix: _prop_types_15_8_1_prop_types["string"],
    locale: _prop_types_15_8_1_prop_types["object"],
    value: date_picker2_prop_types.date,
    timePanelProps: _prop_types_15_8_1_prop_types["object"],
    onSelect: _prop_types_15_8_1_prop_types["func"]
}, time_panel__temp2);


/* harmony default export */ var time_panel = (Object(react_lifecycles_compat_es["polyfill"])(time_panel_TimePanel));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/panels/date-panel.js







var date_panel__class, date_panel__temp, date_panel__initialiseProps;













var date_panel_DatePanel = (date_panel__temp = date_panel__class = function (_React$Component) {
    inherits_default()(DatePanel, _React$Component);

    function DatePanel(props) {
        classCallCheck_default()(this, DatePanel);

        // 默认时间
        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        date_panel__initialiseProps.call(_this);

        var _props$timePanelProps = props.timePanelProps,
            timePanelProps = _props$timePanelProps === undefined ? {} : _props$timePanelProps;

        var defaultTime = timePanelProps.defaultValue;

        if (defaultTime) {
            // fix: https://github.com/alibaba-fusion/next/issues/3203
            defaultTime = util_datejs(defaultTime, typeof defaultTime === 'string' ? timePanelProps.format || 'HH:mm:ss' : undefined);
        }

        _this.state = {
            defaultTime: defaultTime
        };
        return _this;
    }

    DatePanel.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            mode = _props.mode,
            panelMode = _props.panelMode,
            prefix = _props.prefix,
            showTime = _props.showTime,
            value = _props.value,
            disabledDate = _props.disabledDate,
            disabledTime = _props.disabledTime,
            timePanelProps = _props.timePanelProps,
            dateCellRender = _props.dateCellRender,
            restProps = objectWithoutProperties_default()(_props, ['mode', 'panelMode', 'prefix', 'showTime', 'value', 'disabledDate', 'disabledTime', 'timePanelProps', 'dateCellRender']);

        var className = _classnames_2_3_1_classnames_default()(prefix + 'date-picker2-panel', (_classnames = {}, _classnames[prefix + 'date-time-picker2-panel'] = showTime, _classnames));

        // 禁用时间
        var _disabledTime = void 0;
        if (showTime && mode === panelMode && disabledTime) {
            _disabledTime = typeof disabledTime === 'function' ? disabledTime(value) : disabledTime;
            if ((typeof _disabledTime === 'undefined' ? 'undefined' : typeof_default()(_disabledTime)) !== 'object') {
                _disabledTime = null;
            }
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { className: className },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(calendar2, extends_default()({}, util_obj.pickProps(calendar2.propTypes, restProps), {
                shape: 'panel',
                value: value,
                panelMode: mode,
                colNum: showTime ? 6 : undefined,
                onSelect: this.handleSelect,
                onPanelChange: this.handlePanelChange,
                disabledDate: disabledDate,
                dateCellRender: dateCellRender
            })),
            showTime && mode === panelMode ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_panel, extends_default()({}, util_obj.pickProps(time_panel.propTypes, restProps), {
                prefix: prefix,
                value: value || this.state.defaultTime,
                onSelect: this.onTimeSelect,
                disabledTime: disabledTime,
                timePanelProps: extends_default()({}, _disabledTime, timePanelProps)
            })) : null
        );
    };

    return DatePanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), date_panel__class.propTypes = {
    rtl: _prop_types_15_8_1_prop_types["bool"],
    prefix: _prop_types_15_8_1_prop_types["string"],
    locale: _prop_types_15_8_1_prop_types["object"],
    mode: date_picker2_prop_types.mode,
    panelMode: _prop_types_15_8_1_prop_types["any"],
    value: date_picker2_prop_types.date,
    disabledDate: _prop_types_15_8_1_prop_types["func"],
    showTime: _prop_types_15_8_1_prop_types["bool"],
    resetTime: _prop_types_15_8_1_prop_types["bool"],
    timePanelProps: _prop_types_15_8_1_prop_types["object"],
    disabledTime: date_picker2_prop_types.disabledTime,
    dateCellRender: _prop_types_15_8_1_prop_types["func"]
}, date_panel__class.defaultProps = {
    showTime: false,
    resetTime: false
}, date_panel__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onTimeSelect = function (v) {
        _this2.handleSelect(v, true);
    };

    this.handleSelect = function (v, fromTimeChange) {
        var defaultTime = _this2.state.defaultTime;


        var timeVal = null;

        if (!_this2.props.resetTime && !fromTimeChange) {
            timeVal = _this2.props.value || defaultTime || util_datejs();
        }

        v = setTime(v, timeVal);

        func.invoke(_this2.props, 'onSelect', [v]);
    };

    this.handlePanelChange = function (v, mode) {
        func.invoke(_this2.props, 'onPanelChange', [v, mode]);
    };
}, date_panel__temp);
date_panel_DatePanel.displayName = 'DatePanel';


/* harmony default export */ var date_panel = (Object(react_lifecycles_compat_es["polyfill"])(date_panel_DatePanel));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/panels/range-panel.js






var range_panel__class, range_panel__temp, range_panel__initialiseProps;















var range_panel_DATE = DATE_PANEL_MODE.DATE,
    range_panel_WEEK = DATE_PANEL_MODE.WEEK,
    range_panel_MONTH = DATE_PANEL_MODE.MONTH,
    range_panel_QUARTER = DATE_PANEL_MODE.QUARTER,
    range_panel_YEAR = DATE_PANEL_MODE.YEAR;
var UN_SELECTED = CALENDAR_CELL_STATE.UN_SELECTED,
    SELECTED = CALENDAR_CELL_STATE.SELECTED,
    SELECTED_BEGIN = CALENDAR_CELL_STATE.SELECTED_BEGIN,
    SELECTED_END = CALENDAR_CELL_STATE.SELECTED_END;
var range_panel_BEGIN = DATE_INPUT_TYPE.BEGIN,
    range_panel_END = DATE_INPUT_TYPE.END;


var operate = function operate(mode, value, operator) {
    var newVal = value.clone();

    switch (mode) {
        case range_panel_DATE:
        case range_panel_WEEK:
            return newVal[operator](1, 'month');
        case range_panel_QUARTER:
        case range_panel_MONTH:
            return newVal[operator](1, 'year');
        case range_panel_YEAR:
            return newVal[operator](10, 'year');
    }
};

var isSamePanel = function isSamePanel(a, b, mode) {
    switch (mode) {
        case range_panel_DATE:
        case range_panel_WEEK:
            return a.isSame(b, 'month');
        case range_panel_QUARTER:
        case range_panel_MONTH:
            return a.isSame(b, 'year');
        case range_panel_YEAR:
            {
                var begin = a.year() - a.year() % 20;
                var byear = b.year();

                return byear >= begin && byear < begin + 20;
            }
    }
};

// 计算 面板日期
var range_panel_getPanelValue = function getPanelValue(_ref, defaultValue) {
    var mode = _ref.mode,
        value = _ref.value,
        inputType = _ref.inputType,
        showTime = _ref.showTime;
    var begin = value[0],
        end = value[1];

    var otherType = inputType === range_panel_BEGIN ? range_panel_END : range_panel_BEGIN;
    var _inputType = inputType;

    if (!value[inputType] && value[otherType]) {
        _inputType = otherType;
    }

    var panelValue = value[_inputType] || util_datejs(defaultValue);

    // https://github.com/alibaba-fusion/next/issues/3186
    if (!showTime && _inputType === range_panel_END && end && (begin && !isSamePanel(begin, end, mode) || !begin)) {
        panelValue = operate(mode, panelValue, 'subtract');
    }

    return panelValue && panelValue.isValid() ? panelValue : util_datejs();
};

var range_panel_RangePanel = (range_panel__temp = range_panel__class = function (_React$Component) {
    inherits_default()(RangePanel, _React$Component);

    function RangePanel(props) {
        classCallCheck_default()(this, RangePanel);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        range_panel__initialiseProps.call(_this);

        var mode = props.mode,
            defaultPanelValue = props.defaultPanelValue,
            _props$timePanelProps = props.timePanelProps,
            timePanelProps = _props$timePanelProps === undefined ? {} : _props$timePanelProps;

        // 默认时间

        var defaultTime = timePanelProps.defaultValue || [];
        if (!Array.isArray(defaultTime)) {
            defaultTime = [defaultTime, defaultTime];
        }
        defaultTime = defaultTime.map(function (t) {
            return util_datejs(t, timePanelProps.format || 'HH:mm:ss');
        });

        _this.state = {
            mode: mode,
            panelValue: range_panel_getPanelValue(props, defaultPanelValue),
            inputType: props.inputType,
            curHoverValue: null,
            defaultTime: defaultTime
        };
        return _this;
    }

    RangePanel.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.inputType !== state.inputType) {
            return {
                inputType: props.inputType,
                panelValue: range_panel_getPanelValue(props, state.panelValue)
            };
        }
        return null;
    };

    RangePanel.prototype.componentWillUnmount = function componentWillUnmount() {
        this.currentRaf && window.cancelAnimationFrame(this.currentRaf);
    };

    // 日期面板显示的日期区间


    RangePanel.prototype.getRanges = function getRanges() {
        var mode = this.props.mode;
        var v = this.state.panelValue;


        var begin = v.clone();
        var end = operate(mode, v, 'add');

        return [begin, end];
    };

    // 日期cell状态
    RangePanel.prototype.handleCellState = function handleCellState(v, value) {
        var mode = this.props.mode;
        var begin = value[0],
            end = value[1];


        var unit = this.getUnitByMode(mode);

        return begin && begin.isSame(v, unit) ? SELECTED_BEGIN : end && end.isSame(v, unit) ? SELECTED_END : begin && end && v.isAfter(begin, unit) && v.isBefore(end, unit) ? SELECTED : UN_SELECTED;
    };

    RangePanel.prototype.getUnitByMode = function getUnitByMode(mode) {
        return mode === range_panel_DATE ? 'day' : mode;
    };

    // 头部面板日期切换点击事件


    RangePanel.prototype.renderRange = function renderRange(sharedProps) {
        var _classnames;

        var handlePanelChange = this.handlePanelChange,
            handleCanlendarClick = this.handleCanlendarClick,
            hasModeChanged = this.hasModeChanged;
        var _props = this.props,
            value = _props.value,
            prefix = _props.prefix;

        var ranges = this.getRanges();

        var calendarProps = function calendarProps(idx) {
            return extends_default()({}, sharedProps, {
                value: value[idx],
                panelValue: ranges[idx],
                onPanelChange: function onPanelChange(v, m) {
                    return handlePanelChange(v, m, idx);
                }
            });
        };

        var calendarNodes = [external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(calendar2, extends_default()({}, calendarProps(0), { className: prefix + 'range-picker-left', key: 'range-panel-calendar-left' })), external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(calendar2, extends_default()({}, calendarProps(1), {
            className: prefix + 'range-picker-right',
            key: 'range-panel-calendar-right',
            onNext: handleCanlendarClick,
            onSuperNext: handleCanlendarClick
        }))];

        var className = _classnames_2_3_1_classnames_default()(prefix + 'range-picker2-panel', (_classnames = {}, _classnames[prefix + 'range-picker2-panel-single'] = hasModeChanged, _classnames));

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { key: 'range-panel', className: className },
            !this.hasModeChanged ? calendarNodes : calendarNodes[this.state.calendarIdx]
        );
    };

    RangePanel.prototype.render = function render() {
        var handleSelect = this.handleSelect,
            getCellClassName = this.getCellClassName,
            handleMouseEnter = this.handleMouseEnter,
            handleMouseLeave = this.handleMouseLeave;

        var _props2 = this.props,
            mode = _props2.mode,
            justBeginInput = _props2.justBeginInput,
            dateCellRender = _props2.dateCellRender,
            restProps = objectWithoutProperties_default()(_props2, ['mode', 'justBeginInput', 'dateCellRender']);

        // 切换面板mode


        this.hasModeChanged = this.state.mode !== this.props.mode;

        var sharedProps = extends_default()({}, util_obj.pickProps(calendar2.propTypes, restProps), {
            shape: 'panel',
            panelMode: mode,
            dateCellRender: dateCellRender
        });

        sharedProps.disabledDate = justBeginInput ? this.props.disabledDate : this.disabledDate;

        // 日期面板固定列数 保证对齐
        if ([range_panel_DATE, range_panel_WEEK].includes(mode)) {
            sharedProps.colNum = 6;
        }

        if (!this.hasModeChanged) {
            sharedProps = extends_default()({}, sharedProps, {
                onSelect: handleSelect,
                cellClassName: getCellClassName,
                cellProps: {
                    onMouseEnter: handleMouseEnter,
                    onMouseLeave: handleMouseLeave
                }
            });
        }

        return this.props.showTime ? this.renderRangeTime(sharedProps) : this.renderRange(sharedProps);
    };

    return RangePanel;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), range_panel__class.propTypes = {
    rtl: _prop_types_15_8_1_prop_types["bool"],
    prefix: _prop_types_15_8_1_prop_types["string"],
    locale: _prop_types_15_8_1_prop_types["object"],
    mode: date_picker2_prop_types.mode,
    value: _prop_types_15_8_1_prop_types["arrayOf"](date_picker2_prop_types.date),
    inputType: date_picker2_prop_types.inputType,
    handleCellState: _prop_types_15_8_1_prop_types["func"],
    disabledDate: _prop_types_15_8_1_prop_types["func"],
    justBeginInput: _prop_types_15_8_1_prop_types["bool"],
    resetTime: _prop_types_15_8_1_prop_types["bool"],
    showTime: _prop_types_15_8_1_prop_types["bool"],
    timePanelProps: _prop_types_15_8_1_prop_types["object"],
    disabledTime: _prop_types_15_8_1_prop_types["object"],
    dateCellRender: _prop_types_15_8_1_prop_types["func"]
}, range_panel__class.defaultProps = {
    disabledDate: function disabledDate() {
        return false;
    },
    justBeginInput: true
}, range_panel__initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.disabledDate = function (v) {
        var _props3 = _this2.props,
            mode = _props3.mode,
            inputType = _props3.inputType,
            disabledDate = _props3.disabledDate,
            _props3$value = _props3.value,
            begin = _props3$value[0],
            end = _props3$value[1];


        var unit = mode2unit(mode);

        return disabledDate(v, mode) || inputType === range_panel_END && begin && begin.isAfter(v, unit) || inputType === range_panel_BEGIN && end && end.isBefore(v, unit);
    };

    this.onTimeSelect = function (v) {
        var _props4 = _this2.props,
            value = _props4.value,
            inputType = _props4.inputType;
        var begin = value[0],
            end = value[1];


        var curDateVal = value[inputType];
        if (!curDateVal) {
            curDateVal = inputType === range_panel_BEGIN && end ? end.subtract(1, 'day') : inputType === range_panel_END && begin ? begin.add(1, 'day') : util_datejs();
        }
        curDateVal = setTime(curDateVal, v);

        _this2.handleSelect(curDateVal, true);
    };

    this.handleSelect = function (v, fromTimeChange) {
        var _props5 = _this2.props,
            value = _props5.value,
            inputType = _props5.inputType,
            resetTime = _props5.resetTime;

        var otherType = switchInputType(inputType);
        var newValue = [].concat(value);

        var defaultTime = _this2.state.defaultTime[inputType];
        var timeVal = null;

        // 如果不是选择时间面板触发的时间改变或不需要重置时间
        // 则需要设置时间值，优先级如下：
        // - 目前这个日期时间
        // - 默认时间
        // - 另一日期时间
        // - 当前时间
        if (!fromTimeChange && !resetTime) {
            timeVal = value[inputType] || defaultTime || value[otherType] || util_datejs();
        }

        newValue[inputType === range_panel_BEGIN ? 0 : 1] = setTime(v, timeVal);

        func.invoke(_this2.props, 'onSelect', [newValue]);
    };

    this.handlePanelChange = function (v, mode, idx) {
        _this2.setState({
            mode: mode,
            panelValue: v,
            calendarIdx: idx
        });

        func.invoke(_this2.props, 'onPanelChange', [v, mode]);
    };

    this.handleMouseEnter = function (value) {
        _this2.currentRaf && window.cancelAnimationFrame(_this2.currentRaf);
        _this2.currentRaf = window.requestAnimationFrame(function () {
            _this2.setState({
                curHoverValue: value
            });
        });
    };

    this.handleMouseLeave = function () {
        _this2.currentRaf && window.cancelAnimationFrame(_this2.currentRaf);
        _this2.setState({
            curHoverValue: null
        });
    };

    this.handleEdgeState = function (value, mode) {
        var unit = _this2.getUnitByMode(mode);

        switch (mode) {
            case range_panel_DATE:
                {
                    var endDate = value.endOf('month');
                    var beginDate = value.startOf('month');
                    return beginDate.isSame(value, unit) ? 1 : endDate.isSame(value, unit) ? 2 : 0;
                }
            case range_panel_YEAR:
                {
                    var year = value.year();

                    var beginYear = value.year() - value.year() % 10;
                    var endYear = beginYear + 9;
                    return year === beginYear ? 1 : year === endYear ? 2 : 0;
                }
            default:
                return 0;
        }
    };

    this.getCellClassName = function (value) {
        var _extends2;

        var _props6 = _this2.props,
            prefix = _props6.prefix,
            inputType = _props6.inputType,
            mode = _props6.mode;
        var curHoverValue = _this2.state.curHoverValue;
        var _props$value = _this2.props.value,
            begin = _props$value[0],
            end = _props$value[1];

        var unit = _this2.getUnitByMode(mode);

        var state = _this2.handleCellState(value, _this2.props.value);
        var prefixCls = prefix + 'calendar2-cell';

        var hoverClassName = void 0;
        if (curHoverValue) {
            var hoverValue = [].concat(_this2.props.value);
            hoverValue[inputType] = curHoverValue;
            var hoverBegin = hoverValue[0],
                hoverEnd = hoverValue[1];


            if (hoverBegin && hoverEnd && hoverBegin.isBefore(hoverEnd, unit)) {
                var _hoverClassName;

                var hoverState = _this2.handleCellState(value, hoverValue);

                hoverClassName = (_hoverClassName = {}, _hoverClassName[prefixCls + '-hover'] = hoverState >= SELECTED, _hoverClassName[prefixCls + '-hover-begin'] = hoverState === SELECTED_BEGIN, _hoverClassName[prefixCls + '-hover-end'] = hoverState === SELECTED_END, _hoverClassName[prefixCls + '-hover-end'] = hoverState === SELECTED_END, _hoverClassName);
            }
        }

        var rangeClassName = void 0;
        if (!_this2.hasModeChanged) {
            var _ref2, _ref3;

            var edgeState = _this2.handleEdgeState(value, mode);
            var isIllegal = end && begin && begin.isAfter(end);

            rangeClassName = mode === range_panel_WEEK ? (_ref2 = {}, _ref2[prefixCls + '-week-range-begin'] = state === SELECTED_BEGIN, _ref2[prefixCls + '-week-range-end'] = state === SELECTED_END, _ref2) : (_ref3 = {}, _ref3[prefixCls + '-range-begin'] = state === SELECTED_BEGIN, _ref3[prefixCls + '-range-end'] = state === SELECTED_END, _ref3[prefixCls + '-range-begin-single'] = state >= SELECTED && (!end || end.isSame(begin, unit) || isIllegal), _ref3[prefixCls + '-range-end-single'] = state >= SELECTED && (!begin || begin.isSame(end, unit) || isIllegal), _ref3[prefixCls + '-edge-begin'] = edgeState === 1, _ref3[prefixCls + '-edge-end'] = edgeState === 2, _ref3);
        }

        return extends_default()((_extends2 = {}, _extends2[prefixCls + '-selected'] = state >= SELECTED, _extends2), rangeClassName, hoverClassName);
    };

    this.handleCanlendarClick = function (_, _ref4) {
        var unit = _ref4.unit,
            num = _ref4.num;

        _this2.setState({
            panelValue: _this2.state.panelValue.clone().add(num, unit)
        });
    };

    this.renderRangeTime = function (sharedProps) {
        var _classnames2;

        var _props7 = _this2.props,
            value = _props7.value,
            prefix = _props7.prefix,
            showTime = _props7.showTime,
            inputType = _props7.inputType,
            _props7$timePanelProp = _props7.timePanelProps,
            timePanelProps = _props7$timePanelProp === undefined ? {} : _props7$timePanelProp,
            disabledTime = _props7.disabledTime;


        var className = _classnames_2_3_1_classnames_default()(prefix + 'range-picker2-panel', (_classnames2 = {}, _classnames2[prefix + 'range-picker2-panel-single'] = _this2.hasModeChanged, _classnames2));

        // 禁用时间
        var _disabledTime = void 0;
        if (showTime && !_this2.hasModeChanged && disabledTime) {
            _disabledTime = typeof disabledTime === 'function' ? disabledTime(value, inputType) : disabledTime;
        }

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            { key: 'range-time-panel', className: className },
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(calendar2, extends_default()({
                panelValue: _this2.state.panelValue
            }, sharedProps, {
                value: value[inputType],
                onPanelChange: _this2.handlePanelChange
            })),
            showTime && !_this2.hasModeChanged ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(time_panel, {
                prefix: prefix,
                inputType: inputType,
                value: value[inputType] || _this2.state.defaultTime[inputType],
                onSelect: _this2.onTimeSelect,
                disabledTime: disabledTime,
                timePanelProps: extends_default()({}, _disabledTime, timePanelProps)
            }) : null
        );
    };
}, range_panel__temp);
range_panel_RangePanel.displayName = 'RangePanel';


/* harmony default export */ var range_panel = (Object(react_lifecycles_compat_es["polyfill"])(range_panel_RangePanel));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/picker.js






var picker__class, picker__temp, picker__initialiseProps;


















var picker_Popup = next_es_overlay.Popup;
var picker_pickProps = util_obj.pickProps,
    picker_pickOthers = util_obj.pickOthers;
var picker_renderNode = func.renderNode,
    picker_checkDate = func.checkDate,
    picker_checkRangeDate = func.checkRangeDate;
var picker_Picker = (picker__temp = picker__class = function (_React$Component) {
    inherits_default()(Picker, _React$Component);

    function Picker(props) {
        classCallCheck_default()(this, Picker);

        var _this = possibleConstructorReturn_default()(this, _React$Component.call(this, props));

        picker__initialiseProps.call(_this);

        var prefix = props.prefix,
            type = props.type,
            format = props.format,
            mode = props.mode,
            defaultVisible = props.defaultVisible;


        _this.state = {
            panelMode: mode,
            visible: defaultVisible
        };

        if (type === DATE_PICKER_TYPE.RANGE) {
            var _this$getInitRangeInp = _this.getInitRangeInputState(),
                inputType = _this$getInitRangeInp.inputType,
                justBeginInput = _this$getInitRangeInp.justBeginInput;

            _this.state = extends_default()({
                inputType: inputType,
                justBeginInput: justBeginInput
            }, _this.state);
        }

        var value = _this.getInitValue();

        _this.state = extends_default()({
            value: value, // 确定值
            curValue: value, // 临时值
            preValue: value, // 上个值
            inputValue: fmtValue(value, format)
        }, _this.state);

        _this.prefixCls = prefix + 'date-picker2';

        _this.popupRef = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createRef();
        return _this;
    }

    Picker.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var type = props.type,
            showTime = props.showTime,
            showOk = props.showOk,
            disabled = props.disabled,
            format = props.format;

        var isRange = type === DATE_PICKER_TYPE.RANGE;

        var newState = {
            isRange: isRange,
            showOk: !!(showOk || showTime)
        };

        /**
         * 如果当前输入框可能被 disabled
         * 且另一个输入框非 disabled 则切换到另一个输入框
         */
        if (isRange) {
            var inputType = state.inputType;


            var _disabled = Array.isArray(disabled) ? disabled : [disabled, disabled];

            if (_disabled[inputType]) {
                var otherType = switchInputType(state.inputType);

                if (!_disabled[otherType]) {
                    inputType = otherType;
                }
            }

            newState.inputType = inputType;
        }

        if ('value' in props) {
            var value = isRange ? picker_checkRangeDate(props.value, state.inputType, disabled) : picker_checkDate(props.value);

            if (util_isValueChanged(value, state.preValue)) {
                newState = extends_default()({}, newState, {
                    value: value,
                    curValue: value,
                    preValue: value,
                    inputValue: fmtValue(value, format)
                });
            }
        }

        return newState;
    };

    Picker.prototype.componentWillUnmount = function componentWillUnmount() {
        [this.clearTimeoutId, this.timeoutId].forEach(function (id) {
            return id && clearTimeout(id);
        });
    };

    /**
     * 获取初始值
     */


    /**
     * 获取 RangePicker 输入框初始输入状态
     * @returns {Object} inputState
     * @returns {boolean} inputState.justBeginInput 是否初始输入
     * @returns {number} inputState.inputType 当前输入框
     */


    /**
     * 处理点击文档区域导致的弹层收起逻辑
     * @param {boolean} visible 是否可见
     * @param {string} type 事件类型
     */


    Picker.prototype.onVisibleChange = function onVisibleChange(visible) {
        var _this2 = this;

        if (visible !== this.state.visible) {
            var callback = function callback() {
                _this2.setState({
                    visible: visible,
                    justBeginInput: _this2.isEnabled()
                });
            };

            if (this.timeoutId) {
                clearTimeout(this.timeoutId);
                this.timeoutId = null;
            }

            if (visible) {
                callback();
            } else {
                this.timeoutId = setTimeout(callback, 0);
            }

            func.invoke(this.props, 'onVisibleChange', [visible]);
        }
    };

    /**
     * 获取输入框的禁用状态
     * @param {Number} idx
     * @returns {Boolean}
     */


    /**
     * check if value has disabled value
     *
     * @param {string|string[]|Dayjs|Dayjs[]} val
     * @returns {Boolean}
     */


    /**
     * 获取 `onChange` 和 `onOk` 方法的输出参数
     * @param {Dayjs} value
     * @returns 默认返回 `Dayjs` 实例和 `format` 格式化的值
     *          如果传了了 `outputFormat` 属性则返回 `outputFormat` 格式化的值
     */


    Picker.prototype.render = function render() {
        var _this3 = this,
            _classnames;

        var prefixCls = this.prefixCls,
            handleChange = this.handleChange,
            handleMouseDown = this.handleMouseDown,
            handleVisibleChange = this.handleVisibleChange,
            onOk = this.onOk,
            onClick = this.onClick,
            handleInput = this.handleInput,
            onInputTypeChange = this.onInputTypeChange,
            onPanelChange = this.onPanelChange,
            onKeyDown = this.onKeyDown;

        var _props = this.props,
            rtl = _props.rtl,
            locale = _props.locale,
            prefix = _props.prefix,
            inputReadOnly = _props.inputReadOnly,
            showTime = _props.showTime,
            preset = _props.preset,
            mode = _props.mode,
            format = _props.format,
            trigger = _props.trigger,
            disabledDate = _props.disabledDate,
            extraFooterRender = _props.extraFooterRender,
            timePanelProps = _props.timePanelProps,
            resetTime = _props.resetTime,
            placeholder = _props.placeholder,
            disabledTime = _props.disabledTime,
            dateCellRender = _props.dateCellRender,
            disabled = _props.disabled,
            isPreview = _props.isPreview,
            className = _props.className,
            defaultPanelValue = _props.defaultPanelValue,
            renderPreview = _props.renderPreview,
            label = _props.label,
            restProps = objectWithoutProperties_default()(_props, ['rtl', 'locale', 'prefix', 'inputReadOnly', 'showTime', 'preset', 'mode', 'format', 'trigger', 'disabledDate', 'extraFooterRender', 'timePanelProps', 'resetTime', 'placeholder', 'disabledTime', 'dateCellRender', 'disabled', 'isPreview', 'className', 'defaultPanelValue', 'renderPreview', 'label']);

        var _state = this.state,
            isRange = _state.isRange,
            inputType = _state.inputType,
            justBeginInput = _state.justBeginInput,
            panelMode = _state.panelMode,
            showOk = _state.showOk,
            align = _state.align;
        var _state2 = this.state,
            inputValue = _state2.inputValue,
            curValue = _state2.curValue;

        var _getPopupOffsetLeft = this.getPopupOffsetLeft(),
            arrowLeft = _getPopupOffsetLeft.arrowLeft,
            panelLeft = _getPopupOffsetLeft.panelLeft;

        // 预览态


        if (isPreview) {
            var previewCls = _classnames_2_3_1_classnames_default()(className, prefix + 'form-preview');

            return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                'div',
                { className: previewCls },
                picker_renderNode(renderPreview, isRange ? inputValue.join('-') : inputValue, [curValue, this.props])
            );
        }

        var visible = 'visible' in this.props ? this.props.visible : this.state.visible;
        var allDisabled = isRange && Array.isArray(disabled) ? disabled.every(function (v) {
            return v;
        }) : disabled;
        var sharedProps = {
            rtl: rtl,
            prefix: prefix,
            locale: locale,
            mode: mode,
            format: format,
            showTime: showTime,
            inputType: inputType
        };

        // 输入框
        var inputProps = extends_default()({}, picker_pickProps(panels_date_input.propTypes, restProps), sharedProps, {
            value: inputValue,
            label: label,
            isRange: isRange,
            disabled: disabled,
            placeholder: placeholder,
            onInputTypeChange: onInputTypeChange,
            focus: visible,
            onInput: handleInput,
            readOnly: inputReadOnly,
            inputProps: this.props.inputProps,
            ref: function ref(el) {
                return _this3.dateInput = el;
            }
        });

        // 禁用状态下 不允许清空
        if (!this.isEnabled()) {
            inputProps.hasClear = false;
        }

        var triggerNode = picker_renderNode(trigger, external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(panels_date_input, inputProps));

        // 日期
        var panelProps = extends_default()({}, sharedProps, {
            panelMode: panelMode,
            value: curValue,
            disabledDate: disabledDate,
            onPanelChange: onPanelChange,
            timePanelProps: timePanelProps,
            disabledTime: disabledTime,
            resetTime: resetTime,
            dateCellRender: dateCellRender,
            defaultPanelValue: defaultPanelValue,
            onSelect: handleChange
        });

        var DateNode = isRange ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(range_panel, extends_default()({ justBeginInput: justBeginInput }, panelProps)) : external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(date_panel, panelProps);

        // 底部节点
        var oKable = !!(isRange ? inputValue && inputValue[inputType] : inputValue);
        var shouldShowFooter = showOk || preset || extraFooterRender;

        var footerNode = shouldShowFooter ? external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(footer_panel, {
            oKable: oKable,
            onOk: onOk,
            showOk: showOk,
            onChange: handleChange,
            preset: preset,
            locale: locale,
            prefix: prefix,
            extraRender: extraFooterRender
        }) : null;

        var triggerProps = void 0;
        if (!allDisabled) {
            triggerProps = { onKeyDown: onKeyDown, onClick: onClick };
        }

        // popup
        var _props2 = this.props,
            followTrigger = _props2.followTrigger,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupComponent = _props2.popupComponent,
            popupProps = _props2.popupProps;


        var popupCls = _classnames_2_3_1_classnames_default()(popupClassName || popupProps && popupProps.className, (_classnames = {}, _classnames[prefixCls + '-overlay'] = true, _classnames[prefixCls + '-' + (align || []).join('-')] = align, _classnames[prefixCls + '-overlay-range'] = isRange, _classnames));
        var PopupComp = popupComponent || picker_Popup;

        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
            'div',
            extends_default()({}, picker_pickOthers(Picker.propTypes, restProps), {
                dir: rtl ? 'rtl' : undefined,
                className: _classnames_2_3_1_classnames_default()(className, prefixCls),
                style: this.props.style
            }),
            external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                PopupComp,
                extends_default()({
                    rtl: rtl,
                    key: 'date-picker-popup',
                    visible: visible,
                    align: popupAlign,
                    container: popupContainer,
                    followTrigger: followTrigger,
                    triggerType: popupTriggerType,
                    style: popupStyle,
                    onVisibleChange: handleVisibleChange,
                    disabled: allDisabled,
                    trigger: external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        extends_default()({}, triggerProps, { role: 'button', tabIndex: '0', style: { width: '100%' } }),
                        triggerNode
                    ),
                    onPosition: this.getCurrentAlign,
                    canCloseByTrigger: false
                }, popupProps, {
                    className: popupCls
                }),
                external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                    'div',
                    { onMouseDown: handleMouseDown, style: { marginLeft: panelLeft } },
                    external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(
                        'div',
                        { dir: rtl ? 'rtl' : undefined, className: prefixCls + '-wrapper', ref: this.popupRef },
                        isRange ? this.renderArrow(arrowLeft) : null,
                        DateNode,
                        this.state.panelMode !== this.props.mode ? null : footerNode
                    )
                )
            )
        );
    };

    return Picker;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component), picker__class.propTypes = {
    rtl: _prop_types_15_8_1_prop_types["bool"],
    prefix: _prop_types_15_8_1_prop_types["string"],
    locale: _prop_types_15_8_1_prop_types["object"],
    name: _prop_types_15_8_1_prop_types["string"],

    // calendar
    mode: date_picker2_prop_types.mode,
    type: date_picker2_prop_types.type,
    value: date_picker2_prop_types.value,
    defaultValue: date_picker2_prop_types.value,
    defaultPanelValue: date_picker2_prop_types.date,
    disabledDate: _prop_types_15_8_1_prop_types["func"],
    visible: _prop_types_15_8_1_prop_types["bool"],
    defaultVisible: _prop_types_15_8_1_prop_types["bool"],
    dateCellRender: _prop_types_15_8_1_prop_types["func"],

    // event
    onOk: _prop_types_15_8_1_prop_types["func"],
    onChange: _prop_types_15_8_1_prop_types["func"],
    onVisibleChange: _prop_types_15_8_1_prop_types["func"],
    onPanelChange: _prop_types_15_8_1_prop_types["func"],

    // time
    showTime: _prop_types_15_8_1_prop_types["bool"],
    resetTime: _prop_types_15_8_1_prop_types["bool"],
    timePanelProps: _prop_types_15_8_1_prop_types["object"],
    disabledTime: _prop_types_15_8_1_prop_types["object"],

    // header
    titleRender: _prop_types_15_8_1_prop_types["func"],

    // footer
    preset: _prop_types_15_8_1_prop_types["oneOfType"]([_prop_types_15_8_1_prop_types["array"], _prop_types_15_8_1_prop_types["object"]]),
    extraFooterRender: date_picker2_prop_types.render,
    showOk: _prop_types_15_8_1_prop_types["bool"],

    // input
    trigger: date_picker2_prop_types.render,
    hasBorder: _prop_types_15_8_1_prop_types["bool"],
    inputProps: _prop_types_15_8_1_prop_types["object"],
    hasClear: _prop_types_15_8_1_prop_types["bool"],
    placeholder: date_picker2_prop_types.placeholder,
    disabled: date_picker2_prop_types.disabled,
    inputReadOnly: date_picker2_prop_types.readOnly,
    /**
     * 日期显示格式
     */
    format: date_picker2_prop_types.format,
    label: _prop_types_15_8_1_prop_types["node"],
    separator: _prop_types_15_8_1_prop_types["node"],
    /**
     * 输出格式：控制 onChange、onOk 事件的输出值格式
     *  - string 类型：根据时间格式进行转换
     *  - function 类型：((date: Dayjs, dateStr: string) => any)
     *
     * @version 1.23
     */
    outputFormat: date_picker2_prop_types.format,

    // popup
    followTrigger: _prop_types_15_8_1_prop_types["bool"],
    popupTriggerType: _prop_types_15_8_1_prop_types["oneOf"](['click', 'hover']),
    popupAlign: _prop_types_15_8_1_prop_types["string"],
    popupContainer: _prop_types_15_8_1_prop_types["any"],
    popupStyle: _prop_types_15_8_1_prop_types["object"],
    popupClassName: _prop_types_15_8_1_prop_types["string"],
    popupComponent: _prop_types_15_8_1_prop_types["elementType"],
    popupProps: _prop_types_15_8_1_prop_types["object"],

    // preview
    isPreview: _prop_types_15_8_1_prop_types["bool"],
    renderPreview: _prop_types_15_8_1_prop_types["func"],

    // ariaLabel
    dateInputAriaLabel: date_picker2_prop_types.ariaLabel
}, picker__class.defaultProps = {
    rtl: false,
    prefix: 'next-',
    popupTriggerType: 'click',
    locale: locale_zh_cn.DatePicker,
    defaultVisible: false,
    type: DATE_PICKER_TYPE.DATE,
    mode: DATE_PICKER_MODE.DATE,
    format: 'YYYY-MM-DD'
}, picker__initialiseProps = function _initialiseProps() {
    var _this4 = this;

    this.getInitValue = function () {
        var props = _this4.props;
        var type = props.type,
            value = props.value,
            defaultValue = props.defaultValue;


        var val = type === DATE_PICKER_TYPE.RANGE ? [null, null] : null;

        val = 'value' in props ? value : 'defaultValue' in props ? defaultValue : val;

        return _this4.checkValue(val);
    };

    this.getInitRangeInputState = function () {
        return {
            justBeginInput: _this4.isEnabled(),
            inputType: _this4.isEnabled(0) ? DATE_INPUT_TYPE.BEGIN : DATE_INPUT_TYPE.END
        };
    };

    this.handleVisibleChange = function (visible, targetType) {
        if (['docClick', 'fromTrigger'].indexOf(targetType) > -1) {
            // 弹层收起 触发 Change 逻辑
            if (!visible) {
                _this4.handleChange(_this4.state.curValue, 'VISIBLE_CHANGE');
            }
            _this4.onVisibleChange(visible);
        }
    };

    this.checkValue = function (value, strictly) {
        return _this4.props.type === DATE_PICKER_TYPE.RANGE ? picker_checkRangeDate(value, _this4.state.inputType, _this4.props.disabled, strictly) : picker_checkDate(value);
    };

    this.handleInputFocus = function (inputType) {
        var inputEl = _this4.dateInput && _this4.dateInput.input;

        if (_this4.state.isRange) {
            inputEl = inputEl && inputEl[inputType];
        }

        inputEl && inputEl.focus();
    };

    this.handleMouseDown = function (e) {
        e.preventDefault();
    };

    this.handleInput = function (v, eventType) {
        if (eventType === 'clear') {
            _this4.handleChange(v, 'INPUT_CLEAR');

            if (_this4.state.isRange) {
                _this4.handleClear();
            }
        } else {
            _this4.setState({
                inputValue: v,
                visible: true
            });
        }
    };

    this.onPanelChange = function (value, mode) {
        _this4.setState({
            panelMode: mode
        });
        func.invoke(_this4.props, 'onPanelChange', [value, mode]);
    };

    this.handleClear = function () {
        /**
         * 清空输入之后 input 组件内部会让第二个输入框获得焦点
         * 所以这里需要设置 setTimeout 才能让第一个 input 获得焦点
         */
        _this4.clearTimeoutId = setTimeout(function () {
            _this4.handleInputFocus(0);
        });

        _this4.setState({
            inputType: DATE_INPUT_TYPE.BEGIN,
            justBeginInput: _this4.isEnabled()
        });
    };

    this.shouldSwitchInput = function (value) {
        var _state3 = _this4.state,
            inputType = _state3.inputType,
            justBeginInput = _state3.justBeginInput;

        var idx = justBeginInput ? switchInputType(inputType) : value.indexOf(null);

        if (idx !== -1 && _this4.isEnabled(idx)) {
            _this4.onInputTypeChange(idx);
            _this4.handleInputFocus(idx);
            return true;
        }

        return false;
    };

    this.isEnabled = function (idx) {
        var disabled = _this4.props.disabled;


        return Array.isArray(disabled) ? idx === undefined ? !disabled[0] && !disabled[1] : !disabled[idx] : !disabled;
    };

    this.checkValueDisabled = function (val) {
        var disabledDate = _this4.props.disabledDate;
        var panelMode = _this4.state.panelMode;

        var values = (Array.isArray(val) ? val : [val]).map(function (value) {
            return picker_checkDate(value);
        });

        if (!disabledDate) {
            return false;
        }

        return values.some(function (value) {
            return disabledDate(value, panelMode);
        });
    };

    this.onKeyDown = function (e) {
        switch (e.keyCode) {
            case KEYCODE.ENTER:
                {
                    var inputValue = _this4.state.inputValue;

                    _this4.onClick();
                    if (_this4.checkValueDisabled(inputValue)) {
                        // reset inputValue when current inputValue is disabled
                        _this4.handleChange(inputValue, 'VISIBLE_CHANGE');
                        return;
                    }
                    _this4.handleChange(inputValue, 'KEYDOWN_ENTER');
                    break;
                }
            default:
                return;
        }
    };

    this.handleChange = function (v, eventType) {
        var format = _this4.props.format;
        var _state4 = _this4.state,
            isRange = _state4.isRange,
            showOk = _state4.showOk,
            value = _state4.value,
            preValue = _state4.preValue;

        var forceEvents = ['KEYDOWN_ENTER', 'CLICK_PRESET', 'CLICK_OK', 'INPUT_CLEAR', 'VISIBLE_CHANGE'];
        var isTemporary = showOk && !forceEvents.includes(eventType);

        // 面板收起时候，将值设置为确认值
        v = eventType === 'VISIBLE_CHANGE' ? value : _this4.checkValue(v, !isTemporary);

        _this4.setState({
            curValue: v,
            inputValue: fmtValue(v, format)
        });

        if (!isTemporary) {
            _this4.setState({
                value: v
            }, function () {
                // 判断当前选择结束，收起面板：
                // 1. 非 Range 选择
                // 2. 非 选择预设时间、面板收起、清空输入 操作
                // 3. 不需要切换输入框
                var shouldHidePanel = !isRange || ['CLICK_PRESET', 'VISIBLE_CHANGE', 'INPUT_CLEAR'].includes(eventType) || !_this4.shouldSwitchInput(v);

                if (shouldHidePanel) {
                    _this4.onVisibleChange(false);

                    if (util_isValueChanged(v, preValue)) {
                        _this4.onChange();
                    }
                }
            });
        }
    };

    this.onChange = function () {
        var state = _this4.state,
            props = _this4.props;
        var format = props.format;


        var value = _this4.checkValue('value' in props ? props.value : state.value);

        _this4.setState({
            curValue: value,
            preValue: value,
            inputValue: fmtValue(value, format)
        });

        func.invoke(_this4.props, 'onChange', _this4.getOutputArgs(state.value));
    };

    this.onOk = function () {
        var inputValue = _this4.state.inputValue;

        var checkedValue = _this4.checkValue(inputValue);

        func.invoke(_this4.props, 'onOk', _this4.getOutputArgs(checkedValue));

        _this4.setState({ value: checkedValue });
        _this4.handleChange(checkedValue, 'CLICK_OK');
    };

    this.onInputTypeChange = function (idx) {
        var _state5 = _this4.state,
            inputType = _state5.inputType,
            visible = _state5.visible;


        if (idx !== inputType) {
            _this4.setState({
                inputType: idx,
                justBeginInput: !(idx !== null && visible)
            });
        }
    };

    this.onClick = function () {
        var _state6 = _this4.state,
            visible = _state6.visible,
            inputType = _state6.inputType;


        if (!visible) {
            _this4.handleInputFocus(inputType);
        }
    };

    this.getOutputArgs = function (value) {
        var _props3 = _this4.props,
            outputFormat = _props3.outputFormat,
            format = _props3.format;


        if (outputFormat) {
            return [fmtValue(value, outputFormat)];
        }
        return [value, fmtValue(value, format)];
    };

    this.getCurrentAlign = function (_ref) {
        var align = _ref.align;

        _this4.setState({
            align: align
        });
    };

    this.getRangeInputOffsetLeft = function () {
        var left = _this4.dateInput && _this4.dateInput.input && _this4.dateInput.input[_this4.state.inputType] && _this4.dateInput.input[_this4.state.inputType].getInputNode().offsetLeft;

        return left;
    };

    this.getPopupOffsetLeft = function () {
        var inputOffsetLeft = _this4.getRangeInputOffsetLeft();
        var popupElement = _this4.popupRef.current;
        var popupElementWidth = popupElement ? popupElement.offsetWidth : 0;

        // 弹层宽度大于输入元素长度，只偏移 arrow
        if (popupElementWidth > 1.2 * inputOffsetLeft) {
            return {
                arrowLeft: inputOffsetLeft,
                panelLeft: 0
            };
        } else {
            // 否则 panel 整体偏移，arrow 随 panel 整体偏移
            return {
                arrowLeft: 0,
                panelLeft: inputOffsetLeft
            };
        }
    };

    this.renderArrow = function (left) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement('div', { key: 'arrow', className: _this4.props.prefix + 'range-picker2-arrow', style: { left: left } });
    };
}, picker__temp);
picker_Picker.displayName = 'Picker';


/* harmony default export */ var picker = (Object(react_lifecycles_compat_es["polyfill"])(picker_Picker));
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/date-picker2/index.js




var _MODE2FORMAT;






var date_picker2_DATE = DATE_PICKER_MODE.DATE,
    date_picker2_WEEK = DATE_PICKER_MODE.WEEK,
    date_picker2_MONTH = DATE_PICKER_MODE.MONTH,
    date_picker2_QUARTER = DATE_PICKER_MODE.QUARTER,
    date_picker2_YEAR = DATE_PICKER_MODE.YEAR;

var MODE2FORMAT = (_MODE2FORMAT = {}, _MODE2FORMAT[date_picker2_DATE] = 'YYYY-MM-DD', _MODE2FORMAT[date_picker2_WEEK] = 'YYYY-wo', _MODE2FORMAT[date_picker2_MONTH] = 'YYYY-MM', _MODE2FORMAT[date_picker2_QUARTER] = 'YYYY-[Q]Q', _MODE2FORMAT[date_picker2_YEAR] = 'YYYY', _MODE2FORMAT);

/* istanbul ignore next */
var date_picker2_transform = function transform(props, deprecated) {
    var footerRender = props.footerRender,
        onVisibleMonthChange = props.onVisibleMonthChange,
        defaultVisibleMonth = props.defaultVisibleMonth,
        ranges = props.ranges,
        newProps = objectWithoutProperties_default()(props, ['footerRender', 'onVisibleMonthChange', 'defaultVisibleMonth', 'ranges']);

    var mode = props.mode || date_picker2_DATE;

    if ('footerRender' in props) {
        deprecated('footerRender', 'extraFooterRender', 'DatePicker');
        newProps.extraFooterRender = footerRender;
    }

    if (onVisibleMonthChange) {
        deprecated('onVisibleMonthChange', 'onPanelChange', 'DatePicker');
        newProps.onPanelChange = onVisibleMonthChange;
    }

    if (defaultVisibleMonth) {
        deprecated('defaultVisibleMonth', 'defaultPanelValue', 'DatePicker');
        newProps.defaultPanelValue = onVisibleMonthChange;
    }

    if ('ranges' in props) {
        deprecated('ranges', 'preset: PT.oneOfType([PT.array, PT.object])', 'DatePicker');
        newProps.preset = ranges;
    }

    if ([date_picker2_WEEK, date_picker2_MONTH, date_picker2_QUARTER, date_picker2_YEAR].includes(mode)) {
        delete newProps.showTime;
    } else if (typeof_default()(props.showTime) === 'object') {
        deprecated('showTime: object', 'showTime && timePanelProps', 'DatePicker');
        newProps.timePanelProps = props.showTime;
        newProps.showTime = true;
    }

    if (!newProps.format) {
        newProps.format = MODE2FORMAT[mode] + (newProps.showTime ? ' HH:mm:ss' : '');
    }

    return newProps;
};

var ConfigPicker = config_provider.config(picker, {
    componentName: 'DatePicker2',
    transform: date_picker2_transform
});
var date_picker2_generatePicker = function generatePicker(mode) {
    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.forwardRef(function (props, ref) {
        return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigPicker, extends_default()({ ref: ref }, props, { mode: mode }));
    });
};

var DatePicker2 = date_picker2_generatePicker();
DatePicker2.displayName = 'DatePicker2';

DatePicker2.MonthPicker = date_picker2_generatePicker(date_picker2_MONTH);
DatePicker2.MonthPicker.displayName = 'MonthPicker2';

DatePicker2.YearPicker = date_picker2_generatePicker(date_picker2_YEAR);
DatePicker2.YearPicker.displayName = 'YearPicker2';

DatePicker2.WeekPicker = date_picker2_generatePicker(date_picker2_WEEK);
DatePicker2.WeekPicker.displayName = 'WeekPicker2';

DatePicker2.QuarterPicker = date_picker2_generatePicker(date_picker2_QUARTER);
DatePicker2.QuarterPicker.displayName = 'QuarterPicker2';

DatePicker2.RangePicker = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.forwardRef(function (props, ref) {
    return external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(ConfigPicker, extends_default()({ ref: ref }, props, { type: 'range' }));
});
DatePicker2.RangePicker.displayName = 'RangePicker2';

/* harmony default export */ var date_picker2 = (DatePicker2);
// CONCATENATED MODULE: ./node_modules/_@alifd_next@1.25.24@@alifd/next/es/index.js
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Affix", function() { return affix; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Animate", function() { return es_animate; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Badge", function() { return badge; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Balloon", function() { return es_balloon; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Breadcrumb", function() { return breadcrumb; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Button", function() { return es_button; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Calendar", function() { return es_calendar; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Card", function() { return card; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Cascader", function() { return es_cascader; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "CascaderSelect", function() { return es_cascader_select; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Checkbox", function() { return es_checkbox; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Collapse", function() { return es_collapse; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "ConfigProvider", function() { return config_provider; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "DatePicker", function() { return es_date_picker; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Dialog", function() { return dialog; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Dropdown", function() { return dropdown; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Drawer", function() { return drawer; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Field", function() { return es_field; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Form", function() { return es_form; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Grid", function() { return grid; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Icon", function() { return es_icon; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Input", function() { return es_input; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Loading", function() { return es_loading; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Menu", function() { return es_menu; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "MenuButton", function() { return menu_button; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Message", function() { return es_message; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Nav", function() { return es_nav; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "NumberPicker", function() { return es_number_picker; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Overlay", function() { return next_es_overlay; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Pagination", function() { return es_pagination; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Paragraph", function() { return paragraph; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Progress", function() { return progress; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Radio", function() { return es_radio; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Range", function() { return es_range; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Rating", function() { return es_rating; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Search", function() { return search; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Select", function() { return es_select; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Shell", function() { return shell; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Slider", function() { return es_slider; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "SplitButton", function() { return split_button; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Step", function() { return es_step; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Switch", function() { return es_switch; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Tab", function() { return es_tab; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Table", function() { return es_table; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Tag", function() { return es_tag; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "TimePicker", function() { return es_time_picker; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Timeline", function() { return es_timeline; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Transfer", function() { return es_transfer; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Tree", function() { return es_tree; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "TreeSelect", function() { return es_tree_select; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Typography", function() { return es_typography; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Upload", function() { return es_upload; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "VirtualList", function() { return es_virtual_list; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Notification", function() { return notification; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Divider", function() { return es_divider; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Avatar", function() { return avatar; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "ResponsiveGrid", function() { return responsive_grid; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Box", function() { return box; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "List", function() { return es_list; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "TimePicker2", function() { return time_picker2; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "DatePicker2", function() { return date_picker2; });
/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Calendar2", function() { return calendar2; });































































/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(77), __esModule: true };

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(78);
module.exports = __webpack_require__(13).Object.assign;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(18);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(80) });


/***/ }),
/* 79 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(14);
var getKeys = __webpack_require__(28);
var gOPS = __webpack_require__(40);
var pIE = __webpack_require__(31);
var toObject = __webpack_require__(41);
var IObject = __webpack_require__(56);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(26)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(21);
var toLength = __webpack_require__(82);
var toAbsoluteIndex = __webpack_require__(83);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(36);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(36);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(85), __esModule: true };

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(86);
__webpack_require__(92);
module.exports = __webpack_require__(45).f('iterator');


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(87)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(58)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(36);
var defined = __webpack_require__(35);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(43);
var descriptor = __webpack_require__(27);
var setToStringTag = __webpack_require__(44);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(19)(IteratorPrototype, __webpack_require__(22)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(15);
var anObject = __webpack_require__(25);
var getKeys = __webpack_require__(28);

module.exports = __webpack_require__(14) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(12).document;
module.exports = document && document.documentElement;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(16);
var toObject = __webpack_require__(41);
var IE_PROTO = __webpack_require__(37)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(93);
var global = __webpack_require__(12);
var hide = __webpack_require__(19);
var Iterators = __webpack_require__(42);
var TO_STRING_TAG = __webpack_require__(22)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(94);
var step = __webpack_require__(95);
var Iterators = __webpack_require__(42);
var toIObject = __webpack_require__(21);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(58)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(97), __esModule: true };

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(98);
__webpack_require__(103);
__webpack_require__(104);
__webpack_require__(105);
module.exports = __webpack_require__(13).Symbol;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(12);
var has = __webpack_require__(16);
var DESCRIPTORS = __webpack_require__(14);
var $export = __webpack_require__(18);
var redefine = __webpack_require__(59);
var META = __webpack_require__(99).KEY;
var $fails = __webpack_require__(26);
var shared = __webpack_require__(38);
var setToStringTag = __webpack_require__(44);
var uid = __webpack_require__(30);
var wks = __webpack_require__(22);
var wksExt = __webpack_require__(45);
var wksDefine = __webpack_require__(46);
var enumKeys = __webpack_require__(100);
var isArray = __webpack_require__(101);
var anObject = __webpack_require__(25);
var isObject = __webpack_require__(20);
var toObject = __webpack_require__(41);
var toIObject = __webpack_require__(21);
var toPrimitive = __webpack_require__(34);
var createDesc = __webpack_require__(27);
var _create = __webpack_require__(43);
var gOPNExt = __webpack_require__(102);
var $GOPD = __webpack_require__(61);
var $GOPS = __webpack_require__(40);
var $DP = __webpack_require__(15);
var $keys = __webpack_require__(28);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(60).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(31).f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(29)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(19)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(30)('meta');
var isObject = __webpack_require__(20);
var has = __webpack_require__(16);
var setDesc = __webpack_require__(15).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(26)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(28);
var gOPS = __webpack_require__(40);
var pIE = __webpack_require__(31);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(57);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(21);
var gOPN = __webpack_require__(60).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 103 */
/***/ (function(module, exports) {



/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('asyncIterator');


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('observable');


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(107), __esModule: true };

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(108);
module.exports = __webpack_require__(13).Object.setPrototypeOf;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(18);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(109).set });


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(20);
var anObject = __webpack_require__(25);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(52)(Function.call, __webpack_require__(61).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(111), __esModule: true };

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(112);
var $Object = __webpack_require__(13).Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(18);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(43) });


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(114);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_customParseFormat=e()}(this,(function(){"use strict";var t={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},e=/(\[[^[]*\])|([-:/.()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\d\d/,r=/\d\d?/,i=/\d*[^\s\d-_:/()]+/,o={},s=function(t){return(t=+t)+(t>68?1900:2e3)};var a=function(t){return function(e){this[t]=+e}},f=[/[+-]\d\d:?(\d\d)?|Z/,function(t){(this.zone||(this.zone={})).offset=function(t){if(!t)return 0;if("Z"===t)return 0;var e=t.match(/([+-]|\d\d)/g),n=60*e[1]+(+e[2]||0);return 0===n?0:"+"===e[0]?-n:n}(t)}],u=function(t){var e=o[t];return e&&(e.indexOf?e:e.s.concat(e.f))},h=function(t,e){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(t.indexOf(r(i,0,e))>-1){n=i>12;break}}else n=t===(e?"pm":"PM");return n},d={A:[i,function(t){this.afternoon=h(t,!1)}],a:[i,function(t){this.afternoon=h(t,!0)}],S:[/\d/,function(t){this.milliseconds=100*+t}],SS:[n,function(t){this.milliseconds=10*+t}],SSS:[/\d{3}/,function(t){this.milliseconds=+t}],s:[r,a("seconds")],ss:[r,a("seconds")],m:[r,a("minutes")],mm:[r,a("minutes")],H:[r,a("hours")],h:[r,a("hours")],HH:[r,a("hours")],hh:[r,a("hours")],D:[r,a("day")],DD:[n,a("day")],Do:[i,function(t){var e=o.ordinal,n=t.match(/\d+/);if(this.day=n[0],e)for(var r=1;r<=31;r+=1)e(r).replace(/\[|\]/g,"")===t&&(this.day=r)}],M:[r,a("month")],MM:[n,a("month")],MMM:[i,function(t){var e=u("months"),n=(u("monthsShort")||e.map((function(t){return t.substr(0,3)}))).indexOf(t)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(t){var e=u("months").indexOf(t)+1;if(e<1)throw new Error;this.month=e%12||e}],Y:[/[+-]?\d+/,a("year")],YY:[n,function(t){this.year=s(t)}],YYYY:[/\d{4}/,a("year")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(e,n,r){var o=r&&r.toUpperCase();return n||i[r]||t[r]||i[o].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(t,e,n){return e||n.slice(1)}))}))).match(e),a=s.length,f=0;f<a;f+=1){var u=s[f],h=d[u],c=h&&h[0],l=h&&h[1];s[f]=l?{regex:c,parser:l}:u.replace(/^\[|\]$/g,"")}return function(t){for(var e={},n=0,r=0;n<a;n+=1){var i=s[n];if("string"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,u=t.substr(r),h=o.exec(u)[0];f.call(e,h),t=t.replace(h,"")}}return function(t){var e=t.afternoon;if(void 0!==e){var n=t.hours;e?n<12&&(t.hours+=12):12===n&&(t.hours=0),delete t.afternoon}}(e),e}}return function(t,e,n){n.p.customParseFormat=!0,t&&t.parseTwoDigitYear&&(s=t.parseTwoDigitYear);var r=e.prototype,i=r.parse;r.parse=function(t){var e=t.date,r=t.utc,s=t.args;this.$u=r;var a=s[1];if("string"==typeof a){var f=!0===s[2],u=!0===s[3],h=f||u,d=s[2];u&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(t,e,n){try{if(["x","X"].indexOf(e)>-1)return new Date(("X"===e?1e3:1)*t);var r=c(e)(t),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,u=r.seconds,h=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=u||0,g=h||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(t){return new Date("")}}(e,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),h&&e!=this.format(a)&&(this.$d=new Date("")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(""))}else i.call(this,t)}}}));

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,n){ true?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_updateLocale=n()}(this,(function(){"use strict";return function(e,n,t){t.updateLocale=function(e,n){var o=t.Ls[e];if(o)return(n?Object.keys(n):[]).forEach((function(e){o[e]=n[e]})),o}}}));

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

!function(n,e){ true?module.exports=e():"function"==typeof define&&define.amd?define(e):(n="undefined"!=typeof globalThis?globalThis:n||self).dayjs_plugin_localeData=e()}(this,(function(){"use strict";return function(n,e,t){var r=e.prototype,o=function(n){return n&&(n.indexOf?n:n.s)},u=function(n,e,t,r,u){var i=n.name?n:n.$locale(),a=o(i[e]),s=o(i[t]),f=a||s.map((function(n){return n.substr(0,r)}));if(!u)return f;var d=i.weekStart;return f.map((function(n,e){return f[(e+(d||0))%7]}))},i=function(){return t.Ls[t.locale()]},a=function(n,e){return n.formats[e]||function(n){return n.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(n,e,t){return e||t.slice(1)}))}(n.formats[e.toUpperCase()])},s=function(){var n=this;return{months:function(e){return e?e.format("MMMM"):u(n,"months")},monthsShort:function(e){return e?e.format("MMM"):u(n,"monthsShort","months",3)},firstDayOfWeek:function(){return n.$locale().weekStart||0},weekdays:function(e){return e?e.format("dddd"):u(n,"weekdays")},weekdaysMin:function(e){return e?e.format("dd"):u(n,"weekdaysMin","weekdays",2)},weekdaysShort:function(e){return e?e.format("ddd"):u(n,"weekdaysShort","weekdays",3)},longDateFormat:function(e){return a(n.$locale(),e)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}};r.localeData=function(){return s.bind(this)()},t.localeData=function(){var n=i();return{firstDayOfWeek:function(){return n.weekStart||0},weekdays:function(){return t.weekdays()},weekdaysShort:function(){return t.weekdaysShort()},weekdaysMin:function(){return t.weekdaysMin()},months:function(){return t.months()},monthsShort:function(){return t.monthsShort()},longDateFormat:function(e){return a(n,e)},meridiem:n.meridiem,ordinal:n.ordinal}},t.months=function(){return u(i(),"months")},t.monthsShort=function(){return u(i(),"monthsShort","months",3)},t.weekdays=function(n){return u(i(),"weekdays",null,null,n)},t.weekdaysShort=function(n){return u(i(),"weekdaysShort","weekdays",3,n)},t.weekdaysMin=function(n){return u(i(),"weekdaysMin","weekdays",2,n)}}}));

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,n){ true?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_quarterOfYear=n()}(this,(function(){"use strict";var t="month",n="quarter";return function(e,i){var r=i.prototype;r.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var s=r.add;r.add=function(e,i){return e=Number(e),this.$utils().p(i)===n?this.add(3*e,t):s.bind(this)(e,i)};var u=r.startOf;r.startOf=function(e,i){var r=this.$utils(),s=!!r.u(i)||i;if(r.p(e)===n){var o=this.quarter()-1;return s?this.month(3*o).startOf(t).startOf("day"):this.month(3*o+2).endOf(t).endOf("day")}return u.bind(this)(e,i)}}}));

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){"use strict";return function(e,t,r){var n=t.prototype,s=n.format;r.en.ordinal=function(e){var t=["th","st","nd","rd"],r=e%100;return"["+e+(t[(r-20)%10]||t[r]||t[0])+"]"},n.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return s.bind(this)(e);var n=this.$utils(),a=(e||"YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case"Q":return Math.ceil((t.$M+1)/3);case"Do":return r.ordinal(t.$D);case"gggg":return t.weekYear();case"GGGG":return t.isoWeekYear();case"wo":return r.ordinal(t.week(),"W");case"w":case"ww":return n.s(t.week(),"w"===e?1:2,"0");case"W":case"WW":return n.s(t.isoWeek(),"W"===e?1:2,"0");case"k":case"kk":return n.s(String(0===t.$H?24:t.$H),"k"===e?1:2,"0");case"X":return Math.floor(t.$d.getTime()/1e3);case"x":return t.$d.getTime();case"z":return"["+t.offsetName()+"]";case"zzz":return"["+t.offsetName("long")+"]";default:return e}}));return s.bind(this)(a)}}}));

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){"use strict";var e="week",t="year";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),"day");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,"millisecond"),o=this.diff(a,e,!0);return o<0?r(this).startOf("week").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,_){ true?module.exports=_(__webpack_require__(63)):"function"==typeof define&&define.amd?define(["dayjs"],_):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_locale_zh_cn=_(e.dayjs)}(this,(function(e){"use strict";function _(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=_(e),d={name:"zh-cn",weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"周日_周一_周二_周三_周四_周五_周六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),ordinal:function(e,_){return"W"===_?e+"周":e+"日"},weekStart:1,yearStart:4,formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日Ah点mm分",LLLL:"YYYY年M月D日ddddAh点mm分",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},relativeTime:{future:"%s内",past:"%s前",s:"几秒",m:"1 分钟",mm:"%d 分钟",h:"1 小时",hh:"%d 小时",d:"1 天",dd:"%d 天",M:"1 个月",MM:"%d 个月",y:"1 年",yy:"%d 年"},meridiem:function(e,_){var t=100*e+_;return t<600?"凌晨":t<900?"早上":t<1100?"上午":t<1300?"中午":t<1800?"下午":"晚上"}};return t.default.locale(d,null,!0),d}));

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(123);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(124);
} else {
  module.exports = require('./cjs/react-is.development.js');
}


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(5));

var _addClass = _interopRequireDefault(__webpack_require__(126));

var _removeClass = _interopRequireDefault(__webpack_require__(128));

var _react = _interopRequireDefault(__webpack_require__(0));

var _Transition = _interopRequireDefault(__webpack_require__(64));

var _PropTypes = __webpack_require__(65);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass.default)(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass.default)(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
 * using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity: 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**.
 */


var CSSTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.onEnter = function (node, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node, 'exit');

      addClass(node, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node, appearing);
      }
    };

    _this.onEntering = function (node, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node, appearing);
      }
    };

    _this.onEntered = function (node, appearing) {
      var appearClassName = _this.getClassNames('appear').doneClassName;

      var enterClassName = _this.getClassNames('enter').doneClassName;

      var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;

      _this.removeClasses(node, appearing ? 'appear' : 'enter');

      addClass(node, doneClassName);

      if (_this.props.onEntered) {
        _this.props.onEntered(node, appearing);
      }
    };

    _this.onExit = function (node) {
      var _this$getClassNames3 = _this.getClassNames('exit'),
          className = _this$getClassNames3.className;

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      addClass(node, className);

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    };

    _this.onExiting = function (node) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames4.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    };

    _this.onExited = function (node) {
      var _this$getClassNames5 = _this.getClassNames('exit'),
          doneClassName = _this$getClassNames5.doneClassName;

      _this.removeClasses(node, 'exit');

      addClass(node, doneClassName);

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + '-' : '';
      var className = isStringClassNames ? prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];
      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];
      return {
        className: className,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$getClassNames6 = this.getClassNames(type),
        className = _this$getClassNames6.className,
        activeClassName = _this$getClassNames6.activeClassName,
        doneClassName = _this$getClassNames6.doneClassName;

    className && removeClass(node, className);
    activeClassName && removeClass(node, activeClassName);
    doneClassName && removeClass(node, doneClassName);
  };

  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    if (className) {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
      /* eslint-enable no-unused-expressions */

      addClass(node, className);
    }
  };

  _proto.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;
    return _react.default.createElement(_Transition.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react.default.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  false ? _extends({}, _Transition.default.propTypes, {
  /**
   * The animation classNames applied to the component as it enters, exits or
   * has finished the transition. A single name can be provided and it will be
   * suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
   *
   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
   * This allows you to define different behavior for when appearing is done and
   * when regular entering is done, using selectors like
   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
   * epic entrance animation when element first appears in the DOM using
   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   * simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: _PropTypes.classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: PropTypes.func
}) : {};
var _default = CSSTransition;
exports.default = _default;
module.exports = exports["default"];

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(17);

exports.__esModule = true;
exports.default = addClass;

var _hasClass = _interopRequireDefault(__webpack_require__(127));

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}

module.exports = exports["default"];

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = hasClass;

function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

module.exports = exports["default"];

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

module.exports = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(5));

var _react = _interopRequireDefault(__webpack_require__(0));

var _reactDom = __webpack_require__(9);

var _TransitionGroup = _interopRequireDefault(__webpack_require__(66));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */
var ReplaceTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;

    var child = _react.default.Children.toArray(children)[idx];

    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);

    var _React$Children$toArr = _react.default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : _react.default.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(_react.default.Component);

ReplaceTransition.propTypes =  false ? {
  in: _propTypes.default.bool.isRequired,
  children: function children(props, propName) {
    if (_react.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : {};
var _default = ReplaceTransition;
exports.default = _default;
module.exports = exports["default"];

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;
exports.getInitialChildMapping = getInitialChildMapping;
exports.getNextChildMapping = getNextChildMapping;

var _react = __webpack_require__(0);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) _react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */


function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0, _react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}

function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0, _react.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0, _react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(132);

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  setPrototypeOf(subClass, superClass);
}

module.exports = _inheritsLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 132 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(134), __esModule: true };

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(135);
var $Object = __webpack_require__(13).Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(18);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(14), 'Object', { defineProperty: __webpack_require__(15).f });


/***/ }),
/* 136 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(17);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(48));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(139));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(49));

var _typeof2 = _interopRequireDefault(__webpack_require__(23));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(50));

var _extends2 = _interopRequireDefault(__webpack_require__(33));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(70));

var _createClass2 = _interopRequireDefault(__webpack_require__(71));

var _validate2 = _interopRequireDefault(__webpack_require__(145));

var _utils = __webpack_require__(154);

var initMeta = {
  state: '',
  valueName: 'value',
  trigger: 'onChange',
  inputValues: []
};

var Field = /*#__PURE__*/function () {
  function Field(com) {
    var _this = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2.default)(this, Field);

    if (!com) {
      (0, _utils.warning)('`this` is missing in `Field`, you should use like `new Field(this)`');
    }

    this.com = com;
    this.fieldsMeta = {};
    this.cachedBind = {};
    this.instance = {};
    this.instanceCount = {}; // holds constructor values. Used for setting field defaults on init if no other value or initValue is passed.
    // Also used caching values when using `parseName: true` before a field is initialized

    this.values = (0, _extends2.default)({}, options.values);
    this.processErrorMessage = options.processErrorMessage;
    this.afterValidateRerender = options.afterValidateRerender;
    this.options = (0, _extends2.default)({
      parseName: false,
      forceUpdate: false,
      scrollToFirstError: true,
      first: false,
      onChange: function onChange() {},
      autoUnmount: true,
      autoValidate: true
    }, options);
    ['init', 'getValue', 'getValues', 'setValue', 'setValues', 'getError', 'getErrors', 'setError', 'setErrors', 'validateCallback', 'validatePromise', 'getState', 'reset', 'resetToDefault', 'remove', 'spliceArray', 'addArrayValue', 'deleteArrayValue', 'getNames'].forEach(function (m) {
      _this[m] = _this[m].bind(_this);
    });
  }

  (0, _createClass2.default)(Field, [{
    key: "setOptions",
    value: function setOptions(options) {
      (0, _extends2.default)(this.options, options);
    }
    /**
     * Controlled Component
     * @param {String} name
     * @param {Object} fieldOption
     * @returns {Object} {value, onChange}
     */

  }, {
    key: "init",
    value: function init(name) {
      var _this2 = this;

      var fieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var rprops = arguments.length > 2 ? arguments[2] : undefined;
      var id = fieldOption.id,
          initValue = fieldOption.initValue,
          _fieldOption$valueNam = fieldOption.valueName,
          valueName = _fieldOption$valueNam === void 0 ? 'value' : _fieldOption$valueNam,
          _fieldOption$trigger = fieldOption.trigger,
          trigger = _fieldOption$trigger === void 0 ? 'onChange' : _fieldOption$trigger,
          _fieldOption$rules = fieldOption.rules,
          rules = _fieldOption$rules === void 0 ? [] : _fieldOption$rules,
          _fieldOption$props = fieldOption.props,
          props = _fieldOption$props === void 0 ? {} : _fieldOption$props,
          _fieldOption$getValue = fieldOption.getValueFromEvent,
          getValueFromEvent = _fieldOption$getValue === void 0 ? null : _fieldOption$getValue,
          _fieldOption$getValue2 = fieldOption.getValueFormatter,
          getValueFormatter = _fieldOption$getValue2 === void 0 ? getValueFromEvent : _fieldOption$getValue2,
          setValueFormatter = fieldOption.setValueFormatter,
          _fieldOption$autoVali = fieldOption.autoValidate,
          autoValidate = _fieldOption$autoVali === void 0 ? true : _fieldOption$autoVali;
      var parseName = this.options.parseName;

      if (getValueFromEvent) {
        (0, _utils.warning)('`getValueFromEvent` has been deprecated in `Field`, use `getValueFormatter` instead of it');
      }

      var originalProps = (0, _extends2.default)({}, props, rprops);
      var defaultValueName = "default".concat(valueName[0].toUpperCase()).concat(valueName.slice(1));
      var defaultValue;

      if (typeof initValue !== 'undefined') {
        defaultValue = initValue;
      } else if (typeof originalProps[defaultValueName] !== 'undefined') {
        // here use typeof, in case of defaultValue={0}
        defaultValue = originalProps[defaultValueName];
      } // get field from this.fieldsMeta or new one


      var field = this._getInitMeta(name);

      (0, _extends2.default)(field, {
        valueName: valueName,
        initValue: defaultValue,
        disabled: 'disabled' in originalProps ? originalProps.disabled : false,
        getValueFormatter: getValueFormatter,
        setValueFormatter: setValueFormatter,
        rules: Array.isArray(rules) ? rules : [rules],
        ref: originalProps.ref
      }); // Controlled Component, should always equal props.value

      if (valueName in originalProps) {
        field.value = originalProps[valueName]; // When rerendering set the values from props.value

        if (parseName) {
          this.values = (0, _utils.setIn)(this.values, name, field.value);
        } else {
          this.values[name] = field.value;
        }
      }
      /**
       * first init field (value not in field)
       * should get field.value from this.values or defaultValue
       */


      if (!('value' in field)) {
        if (parseName) {
          var cachedValue = (0, _utils.getIn)(this.values, name);

          if (typeof cachedValue !== 'undefined') {
            field.value = cachedValue;
          } else {
            // save struct to this.values even defaultValue is undefiend
            field.value = defaultValue;
            this.values = (0, _utils.setIn)(this.values, name, field.value);
          }
        } else {
          var _cachedValue = this.values[name];

          if (typeof _cachedValue !== 'undefined') {
            field.value = _cachedValue;
          } else if (typeof defaultValue !== 'undefined') {
            // should be same with parseName, but compatible with old versions
            field.value = defaultValue;
            this.values[name] = field.value;
          }
        }
      } // Component props


      var inputProps = (0, _defineProperty2.default)({
        'data-meta': 'Field',
        id: id || name,
        ref: this._getCacheBind(name, "".concat(name, "__ref"), this._saveRef)
      }, valueName, setValueFormatter ? setValueFormatter(field.value, field.inputValues) : field.value);
      var rulesMap = {};

      if (this.options.autoValidate && autoValidate !== false) {
        // trigger map in rules,
        rulesMap = (0, _utils.mapValidateRules)(field.rules, trigger); // step1 : validate hooks

        var _loop = function _loop(action) {
          // skip default trigger, which will trigger in step2
          if (action === trigger) {
            return "continue";
          }

          var actionRule = rulesMap[action];

          inputProps[action] = function () {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            _this2._callNativePropsEvent.apply(_this2, [action, originalProps].concat(args));

            _this2._validate(name, actionRule, action);
          };
        };

        for (var action in rulesMap) {
          var _ret = _loop(action);

          if (_ret === "continue") continue;
        }
      } // step2: onChange(trigger=onChange by default) hack


      inputProps[trigger] = function () {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        _this2._updateFieldValue.apply(_this2, [name].concat(args)); // clear validate error


        _this2._resetError(name);

        _this2._callNativePropsEvent.apply(_this2, [trigger, originalProps].concat(args)); // call global onChange


        _this2.options.onChange(name, field.value); // validate while onChange


        var rule = rulesMap[trigger];
        rule && _this2._validate(name, rule, trigger);

        _this2._reRender();
      };

      delete originalProps[defaultValueName];
      return (0, _extends2.default)({}, originalProps, inputProps);
    }
    /**
     * call native event from props.onXx
     * eg: props.onChange props.onBlur props.onFocus
     */

  }, {
    key: "_callNativePropsEvent",
    value: function _callNativePropsEvent(action, props) {
      for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
        args[_key3 - 2] = arguments[_key3];
      }

      action in props && typeof props[action] === 'function' && props[action].apply(props, args);
    }
  }, {
    key: "_getInitMeta",
    value: function _getInitMeta(name) {
      if (!(name in this.fieldsMeta)) {
        this.fieldsMeta[name] = (0, _extends2.default)({}, initMeta);
      }

      return this.fieldsMeta[name];
    }
    /**
     * update field.value and validate
     */

  }, {
    key: "_updateFieldValue",
    value: function _updateFieldValue(name) {
      for (var _len4 = arguments.length, others = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        others[_key4 - 1] = arguments[_key4];
      }

      var e = others[0];

      var field = this._get(name);

      if (!field) {
        return;
      }

      field.value = field.getValueFormatter ? field.getValueFormatter.apply(this, others) : (0, _utils.getValueFromEvent)(e);
      field.inputValues = others;

      if (this.options.parseName) {
        this.values = (0, _utils.setIn)(this.values, name, field.value);
      } else {
        this.values[name] = field.value;
      }
    }
    /**
     * ref must always be the same function, or if not it will be triggerd every time.
     * @param {String} name name of component
     * @param {String} action key to find ref
     * @param {Function} fn saveRef
     */

  }, {
    key: "_getCacheBind",
    value: function _getCacheBind(name, action, fn) {
      var cache = this.cachedBind[name] = this.cachedBind[name] || {};

      if (!cache[action]) {
        cache[action] = fn.bind(this, name);
      }

      return cache[action];
    }
  }, {
    key: "_setCache",
    value: function _setCache(name, action, hander) {
      var cache = this.cachedBind[name] = this.cachedBind[name] || {};
      cache[action] = hander;
    }
  }, {
    key: "_getCache",
    value: function _getCache(name, action) {
      var cache = this.cachedBind[name] || {};
      return cache[action];
    }
    /**
     * NOTE: saveRef is async function. it will be called after render
     * @param {String} name name of component
     * @param {Function} component ref
     */

  }, {
    key: "_saveRef",
    value: function _saveRef(name, component) {
      var key = "".concat(name, "_field");
      var autoUnmount = this.options.autoUnmount;

      if (!component && autoUnmount) {
        // more than one component, do nothing
        this.instanceCount[name] && this.instanceCount[name]--;

        if (this.instanceCount[name] > 0) {
          return;
        } // component with same name (eg: type ? <A name="n"/>:<B name="n"/>)
        // while type changed, B will render before A unmount. so we should cached value for B
        // step: render -> B mount -> 1. _saveRef(A, null) -> 2. _saveRef(B, ref) -> render
        // 1. _saveRef(A, null)


        var cache = this.fieldsMeta[name];
        cache && this._setCache(name, key, cache); // after destroy, delete data

        delete this.instance[name];
        this.remove(name);
        return;
      } // 2. _saveRef(B, ref) (eg: same name but different compoent may be here)


      if (autoUnmount && !this.fieldsMeta[name] && this._getCache(name, key)) {
        this.fieldsMeta[name] = this._getCache(name, key);
        this.setValue(name, this.fieldsMeta[name] && this.fieldsMeta[name].value, false);
      } // only one time here


      var field = this._get(name);

      if (field) {
        var ref = field.ref;

        if (ref) {
          if (typeof ref === 'string') {
            throw new Error("can not set string ref for ".concat(name));
          } else if (typeof ref === 'function') {
            ref(component);
          } else if ((0, _typeof2.default)(ref) === 'object' && 'current' in ref) {
            // while ref = React.createRef() ref={ current: null}
            ref.current = component;
          }
        } // mount


        if (autoUnmount && component) {
          var cnt = this.instanceCount[name];

          if (!cnt) {
            cnt = 0;
          }

          this.instanceCount[name] = cnt + 1;
        }

        this.instance[name] = component;
      }
    }
    /**
     * validate one Component
     * @param {String} name name of Component
     * @param {Array} rule
     * @param {String} trigger onChange/onBlur/onItemClick/...
     */

  }, {
    key: "_validate",
    value: function _validate(name, rule, trigger) {
      var _this3 = this;

      var field = this._get(name);

      if (!field) {
        return;
      }

      var value = field.value;
      field.state = 'loading';

      var validate = this._getCache(name, trigger);

      if (validate && typeof validate.abort === 'function') {
        validate.abort();
      }

      validate = new _validate2.default((0, _defineProperty2.default)({}, name, rule), {
        messages: this.options.messages
      });

      this._setCache(name, trigger, validate);

      validate.validate((0, _defineProperty2.default)({}, name, value), function (errors) {
        var newErrors, newState;

        if (errors && errors.length) {
          newErrors = (0, _utils.getErrorStrs)(errors, _this3.processErrorMessage);
          newState = 'error';
        } else {
          newErrors = [];
          newState = 'success';
        }

        var reRender = false; // only status or errors changed, Rerender

        if (newState !== field.state || !field.errors || newErrors.length !== field.errors.length || newErrors.find(function (e, idx) {
          return e !== field.errors[idx];
        })) {
          reRender = true;
        }

        field.errors = newErrors;
        field.state = newState;
        reRender && _this3._reRender();
      });
    }
  }, {
    key: "getValue",
    value: function getValue(name) {
      if (this.options.parseName) {
        return (0, _utils.getIn)(this.values, name);
      }

      return this.values[name];
    }
    /**
     * 1. get values by names.
     * 2. If no names passed, return shallow copy of `field.values`
     * @param {Array} names
     */

  }, {
    key: "getValues",
    value: function getValues(names) {
      var _this4 = this;

      var allValues = {};

      if (names && names.length) {
        names.forEach(function (name) {
          allValues[name] = _this4.getValue(name);
        });
      } else {
        (0, _extends2.default)(allValues, this.values);
      }

      return allValues;
    }
  }, {
    key: "setValue",
    value: function setValue(name, value) {
      var reRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

      if (name in this.fieldsMeta) {
        this.fieldsMeta[name].value = value;
      }

      if (this.options.parseName) {
        this.values = (0, _utils.setIn)(this.values, name, value);
      } else {
        this.values[name] = value;
      }

      reRender && this._reRender();
    }
  }, {
    key: "setValues",
    value: function setValues() {
      var _this5 = this;

      var fieldsValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var reRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      if (!this.options.parseName) {
        Object.keys(fieldsValue).forEach(function (name) {
          _this5.setValue(name, fieldsValue[name], false);
        });
      } else {
        // NOTE: this is a shallow merge
        // Ex. we have two values a.b.c=1 ; a.b.d=2, and use setValues({a:{b:{c:3}}}) , then because of shallow merge a.b.d will be lost, we will get only {a:{b:{c:3}}}
        this.values = (0, _extends2.default)({}, this.values, fieldsValue);
        var fields = this.getNames();
        fields.forEach(function (name) {
          var value = (0, _utils.getIn)(_this5.values, name);

          if (value !== undefined) {
            // copy over values that are in this.values
            _this5.fieldsMeta[name].value = value;
          } else {
            // because of shallow merge
            // if no value then copy values from fieldsMeta to keep initialized component data
            _this5.values = (0, _utils.setIn)(_this5.values, name, _this5.fieldsMeta[name].value);
          }
        });
      }

      reRender && this._reRender();
    }
  }, {
    key: "setError",
    value: function setError(name, errors) {
      var err = Array.isArray(errors) ? errors : errors ? [errors] : [];

      if (name in this.fieldsMeta) {
        this.fieldsMeta[name].errors = err;
      } else {
        this.fieldsMeta[name] = {
          errors: err
        };
      }

      if (this.fieldsMeta[name].errors && this.fieldsMeta[name].errors.length > 0) {
        this.fieldsMeta[name].state = 'error';
      } else {
        this.fieldsMeta[name].state = '';
      }

      this._reRender();
    }
  }, {
    key: "setErrors",
    value: function setErrors() {
      var _this6 = this;

      var fieldsErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      Object.keys(fieldsErrors).forEach(function (name) {
        _this6.setError(name, fieldsErrors[name]);
      });
    }
  }, {
    key: "getError",
    value: function getError(name) {
      var field = this._get(name);

      if (field && field.errors && field.errors.length) {
        return field.errors;
      }

      return null;
    }
  }, {
    key: "getErrors",
    value: function getErrors(names) {
      var _this7 = this;

      var fields = names || this.getNames();
      var allErrors = {};
      fields.forEach(function (f) {
        allErrors[f] = _this7.getError(f);
      });
      return allErrors;
    }
  }, {
    key: "getState",
    value: function getState(name) {
      var field = this._get(name);

      if (field && field.state) {
        return field.state;
      }

      return '';
    }
    /**
     * Get errors using `getErrors` and format to match the structure of errors returned in field.validate
     * @param {Array} fieldNames
     * @return {Object || null} map of inputs and their errors
     */

  }, {
    key: "formatGetErrors",
    value: function formatGetErrors(fieldNames) {
      var errors = this.getErrors(fieldNames);
      var formattedErrors = null;

      for (var field in errors) {
        if (errors.hasOwnProperty(field) && errors[field]) {
          var errorsObj = errors[field];

          if (!formattedErrors) {
            formattedErrors = {};
          }

          formattedErrors[field] = {
            errors: errorsObj
          };
        }
      }

      return formattedErrors;
    }
    /**
     * validate by trigger
     * @param {Array} ns names
     * @param {Function} cb callback after validate
     */

  }, {
    key: "validateCallback",
    value: function validateCallback(ns, cb) {
      var _this8 = this;

      var _getParams = (0, _utils.getParams)(ns, cb),
          names = _getParams.names,
          callback = _getParams.callback;

      var fieldNames = names || this.getNames();
      var descriptor = {};
      var values = {};
      var hasRule = false;

      for (var i = 0; i < fieldNames.length; i++) {
        var name = fieldNames[i];

        var field = this._get(name);

        if (!field) {
          continue;
        }

        if (field.rules && field.rules.length) {
          descriptor[name] = field.rules;
          values[name] = this.getValue(name);
          hasRule = true; // clear error

          field.errors = [];
          field.state = '';
        }
      }

      if (!hasRule) {
        var errors = this.formatGetErrors(fieldNames);
        callback && callback(errors, this.getValues(names ? fieldNames : []));
        return;
      }

      var validate = new _validate2.default(descriptor, {
        first: this.options.first,
        messages: this.options.messages
      });
      validate.validate(values, function (errors) {
        var errorsGroup = null;

        if (errors && errors.length) {
          errorsGroup = {};
          errors.forEach(function (e) {
            var fieldName = e.field;

            if (!errorsGroup[fieldName]) {
              errorsGroup[fieldName] = {
                errors: []
              };
            }

            var fieldErrors = errorsGroup[fieldName].errors;
            fieldErrors.push(e.message);
          });
        }

        if (errorsGroup) {
          // update error in every Field
          Object.keys(errorsGroup).forEach(function (i) {
            var field = _this8._get(i);

            if (field) {
              field.errors = (0, _utils.getErrorStrs)(errorsGroup[i].errors, _this8.processErrorMessage);
              field.state = 'error';
            }
          });
        }

        var formattedGetErrors = _this8.formatGetErrors(fieldNames);

        if (formattedGetErrors) {
          errorsGroup = (0, _extends2.default)({}, formattedGetErrors, errorsGroup);
        } // update to success which has no error


        for (var _i = 0; _i < fieldNames.length; _i++) {
          var _name = fieldNames[_i];

          var _field = _this8._get(_name);

          if (_field && _field.rules && !(errorsGroup && _name in errorsGroup)) {
            _field.state = 'success';
          }
        } // eslint-disable-next-line callback-return


        callback && callback(errorsGroup, _this8.getValues(names ? fieldNames : []));

        _this8._reRender();

        if (typeof _this8.afterValidateRerender === 'function') {
          _this8.afterValidateRerender({
            errorsGroup: errorsGroup,
            options: _this8.options,
            instance: _this8.instance
          });
        }
      });
    }
    /**
     * validate by trigger - Promise version
     * NOTES:
     * - `afterValidateRerender` is not called in `validatePromise`. The rerender is called just before this function
     *      returns a promise, so use the returned promise to call any after rerender logic.
     *
     * @param {Array} ns names
     * @param {Function} cb (Optional) callback after validate, must return a promise or a value
     *                  - ({errors, values}) => Promise({errors, values}) | {errors, values}
     * @returns {Promise} - resolves with {errors, values}
     */

  }, {
    key: "validatePromise",
    value: function () {
      var _validatePromise = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(ns, cb) {
        var _getParams2, names, callback, fieldNames, descriptor, values, hasRule, i, name, field, _errors, validate, results, errors, errorsGroup, callbackResults;

        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _getParams2 = (0, _utils.getParams)(ns, cb), names = _getParams2.names, callback = _getParams2.callback;
                fieldNames = names || this.getNames();
                descriptor = {};
                values = {};
                hasRule = false;
                i = 0;

              case 6:
                if (!(i < fieldNames.length)) {
                  _context.next = 15;
                  break;
                }

                name = fieldNames[i];
                field = this._get(name);

                if (field) {
                  _context.next = 11;
                  break;
                }

                return _context.abrupt("continue", 12);

              case 11:
                if (field.rules && field.rules.length) {
                  descriptor[name] = field.rules;
                  values[name] = this.getValue(name);
                  hasRule = true; // clear error

                  field.errors = [];
                  field.state = '';
                }

              case 12:
                i++;
                _context.next = 6;
                break;

              case 15:
                if (hasRule) {
                  _context.next = 22;
                  break;
                }

                _errors = this.formatGetErrors(fieldNames);

                if (!callback) {
                  _context.next = 21;
                  break;
                }

                return _context.abrupt("return", callback({
                  errors: _errors,
                  values: this.getValues(names ? fieldNames : [])
                }));

              case 21:
                return _context.abrupt("return", {
                  errors: _errors,
                  values: this.getValues(names ? fieldNames : [])
                });

              case 22:
                validate = new _validate2.default(descriptor, {
                  first: this.options.first,
                  messages: this.options.messages
                });
                _context.next = 25;
                return validate.validatePromise(values);

              case 25:
                results = _context.sent;
                errors = results && results.errors || [];
                errorsGroup = this._getErrorsGroup({
                  errors: errors,
                  fieldNames: fieldNames
                });
                callbackResults = {
                  errors: errorsGroup,
                  values: this.getValues(names ? fieldNames : [])
                };
                _context.prev = 29;

                if (!callback) {
                  _context.next = 34;
                  break;
                }

                _context.next = 33;
                return callback(callbackResults);

              case 33:
                callbackResults = _context.sent;

              case 34:
                _context.next = 39;
                break;

              case 36:
                _context.prev = 36;
                _context.t0 = _context["catch"](29);
                return _context.abrupt("return", _context.t0);

              case 39:
                this._reRender();

                return _context.abrupt("return", callbackResults);

              case 41:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[29, 36]]);
      }));

      function validatePromise(_x, _x2) {
        return _validatePromise.apply(this, arguments);
      }

      return validatePromise;
    }()
  }, {
    key: "_getErrorsGroup",
    value: function _getErrorsGroup(_ref) {
      var _this9 = this;

      var errors = _ref.errors,
          fieldNames = _ref.fieldNames;
      var errorsGroup = null;

      if (errors && errors.length) {
        errorsGroup = {};
        errors.forEach(function (e) {
          var fieldName = e.field;

          if (!errorsGroup[fieldName]) {
            errorsGroup[fieldName] = {
              errors: []
            };
          }

          var fieldErrors = errorsGroup[fieldName].errors;
          fieldErrors.push(e.message);
        });
      }

      if (errorsGroup) {
        // update error in every Field
        Object.keys(errorsGroup).forEach(function (i) {
          var field = _this9._get(i);

          if (field) {
            field.errors = (0, _utils.getErrorStrs)(errorsGroup[i].errors, _this9.processErrorMessage);
            field.state = 'error';
          }
        });
      }

      var formattedGetErrors = this.formatGetErrors(fieldNames);

      if (formattedGetErrors) {
        errorsGroup = (0, _extends2.default)({}, formattedGetErrors, errorsGroup);
      } // update to success which has no error


      for (var i = 0; i < fieldNames.length; i++) {
        var name = fieldNames[i];

        var field = this._get(name);

        if (field && field.rules && !(errorsGroup && name in errorsGroup)) {
          field.state = 'success';
        }
      }

      return errorsGroup;
    }
  }, {
    key: "_reset",
    value: function _reset(ns, backToDefault) {
      var _this10 = this;

      if (typeof ns === 'string') {
        ns = [ns];
      }

      var changed = false;
      var names = ns || Object.keys(this.fieldsMeta);

      if (!ns) {
        this.values = {};
      }

      names.forEach(function (name) {
        var field = _this10._get(name);

        if (field) {
          changed = true;
          field.value = backToDefault ? field.initValue : undefined;
          field.state = '';
          delete field.errors;
          delete field.rules;
          delete field.rulesMap;

          if (_this10.options.parseName) {
            _this10.values = (0, _utils.setIn)(_this10.values, name, field.value);
          } else {
            _this10.values[name] = field.value;
          }
        }
      });

      if (changed) {
        this._reRender();
      }
    }
  }, {
    key: "reset",
    value: function reset(ns) {
      this._reset(ns, false);
    }
  }, {
    key: "resetToDefault",
    value: function resetToDefault(ns) {
      this._reset(ns, true);
    }
  }, {
    key: "getNames",
    value: function getNames() {
      var fieldsMeta = this.fieldsMeta;
      return Object.keys(fieldsMeta).filter(function () {
        return true;
      });
    }
  }, {
    key: "remove",
    value: function remove(ns) {
      var _this11 = this;

      if (typeof ns === 'string') {
        ns = [ns];
      }

      if (!ns) {
        this.values = {};
      }

      var names = ns || Object.keys(this.fieldsMeta);
      names.forEach(function (name) {
        if (name in _this11.fieldsMeta) {
          delete _this11.fieldsMeta[name];
        }

        if (_this11.options.parseName) {
          _this11.values = (0, _utils.deleteIn)(_this11.values, name);
        } else {
          delete _this11.values[name];
        }
      });
    }
  }, {
    key: "addArrayValue",
    value: function addArrayValue(key, index) {
      for (var _len5 = arguments.length, argv = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {
        argv[_key5 - 2] = arguments[_key5];
      }

      return this._spliceArrayValue.apply(this, [key, index, 0].concat(argv));
    }
  }, {
    key: "deleteArrayValue",
    value: function deleteArrayValue(key, index) {
      var howmany = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      return this._spliceArrayValue(key, index, howmany);
    }
    /**
     * splice array
     * @param {String} key
     * @param {Number} startIndex
     * @param {Number} howmany
     * @param {Array} argv
     * @param {*} value
     */

  }, {
    key: "_spliceArrayValue",
    value: function _spliceArrayValue(key, index, howmany) {
      var _this12 = this;

      for (var _len6 = arguments.length, argv = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {
        argv[_key6 - 3] = arguments[_key6];
      }

      var argc = argv.length;
      var offset = howmany - argc; // how the reset fieldMeta move

      var startIndex = index + howmany; // 计算起点

      /**
       * eg: call _spliceArrayValue('key', 1) to delete 'key.1':
       *   case 1: names=['key.0', 'key.1']; delete 'key.1';
       *   case 2: names=['key.0', 'key.1', 'key.2']; key.1= key.2; delete key.2;
       *   case 3: names=['key.0.name', 'key.0.email', 'key.1.name', 'key.1.email'], should delete 'key.1.name', 'key.1.email'
       * eg: call _spliceArrayValue('key', 1, item) to add 'key.1':
       *   case 1: names=['key.0']; add 'key.1' = item;
       *   case 2: names=['key.0', 'key.1']; key.2= key.1; delete key.1; add key.1 = item;
       */

      var listMap = {}; // eg: {1:[{from: 'key.2.name', to: 'key.1.name'}, {from: 'key.2.email', to: 'key.1.email'}]}

      var keyReg = new RegExp("^(".concat(key, ".)(\\d+)"));
      var replaceArgv = [];
      var names = this.getNames(); // logic of offset fix begin

      names.forEach(function (n) {
        var ret = keyReg.exec(n);

        if (ret) {
          var idx = parseInt(ret[2]); // get index of 'key.0.name'

          if (idx >= startIndex) {
            var l = listMap[idx];
            var item = {
              from: n,
              to: n.replace(keyReg, function (match, p1) {
                return "".concat(p1).concat(idx - offset);
              })
            };

            if (!l) {
              listMap[idx] = [item];
            } else {
              l.push(item);
            }
          } // in case of offsetList.length = 0, eg: delete last element


          if (offset > 0 && idx >= index && idx < index + howmany) {
            replaceArgv.push(n);
          }
        }
      }); // sort with index eg: [{index:1, list: [{from: 'key.2.name', to: 'key.1.name'}]}, {index:2, list: [...]}]

      var offsetList = Object.keys(listMap).map(function (i) {
        return {
          index: Number(i),
          list: listMap[i]
        };
      }).sort(function (a, b) {
        return offset > 0 ? a.index - b.index : b.index - a.index;
      });
      offsetList.forEach(function (l) {
        var list = l.list;
        list.forEach(function (i) {
          _this12.fieldsMeta[i.to] = _this12.fieldsMeta[i.from];
        });
      }); // delete copy data

      if (offsetList.length > 0) {
        var removeList = offsetList.slice(offsetList.length - (offset < 0 ? -offset : offset), offsetList.length);
        removeList.forEach(function (item) {
          item.list.forEach(function (i) {
            delete _this12.fieldsMeta[i.from];
          });
        });
      } else {
        // will get from this.values while rerender
        replaceArgv.forEach(function (i) {
          delete _this12.fieldsMeta[i];
        });
      }

      var p = this.getValue(key);

      if (p) {
        p.splice.apply(p, [index, howmany].concat(argv));
      }

      this._reRender();
    }
    /**
     * splice in a Array [deprecated]
     * @param {String} keyMatch like name.{index}
     * @param {Number} startIndex index
     */

  }, {
    key: "spliceArray",
    value: function spliceArray(keyMatch, startIndex, howmany) {
      var _this13 = this;

      if (keyMatch.match(/{index}$/) === -1) {
        (0, _utils.warning)('key should match /{index}$/');
        return;
      } // regex to match field names in the same target array


      var reg = keyMatch.replace('{index}', '(\\d+)');
      var keyReg = new RegExp("^".concat(reg));
      var listMap = {};
      /**
       * keyMatch='key.{index}'
       * case 1: names=['key.0', 'key.1'], should delete 'key.1'
       * case 2: names=['key.0.name', 'key.0.email', 'key.1.name', 'key.1.email'], should delete 'key.1.name', 'key.1.email'
       */

      var names = this.getNames();
      names.forEach(function (n) {
        // is name in the target array?
        var ret = keyReg.exec(n);

        if (ret) {
          var index = parseInt(ret[1]);

          if (index > startIndex) {
            var l = listMap[index];
            var item = {
              from: n,
              to: "".concat(keyMatch.replace('{index}', index - 1)).concat(n.replace(ret[0], ''))
            };

            if (!l) {
              listMap[index] = [item];
            } else {
              l.push(item);
            }
          }
        }
      });
      var idxList = Object.keys(listMap).map(function (i) {
        return {
          index: Number(i),
          list: listMap[i]
        };
      }).sort(function (a, b) {
        return a.index < b.index;
      }); // should be continuous array

      if (idxList.length > 0 && idxList[0].index === startIndex + 1) {
        idxList.forEach(function (l) {
          var list = l.list;
          list.forEach(function (i) {
            var v = _this13.getValue(i.from); // get index value


            _this13.setValue(i.to, v, false); // set value to index - 1

          });
        });
        var lastIdxList = idxList[idxList.length - 1];
        lastIdxList.list.forEach(function (i) {
          _this13.remove(i.from);
        });
        var parentName = keyMatch.replace('.{index}', '');
        parentName = parentName.replace('[{index}]', '');
        var parent = this.getValue(parentName);

        if (parent) {
          // if parseName=true then parent is an Array object but does not know an element was removed
          // this manually decrements the array length
          parent.length--;
        }
      }
    }
  }, {
    key: "_resetError",
    value: function _resetError(name) {
      var field = this._get(name);

      if (field) {
        delete field.errors; //清空错误

        field.state = '';
      }
    } //trigger rerender

  }, {
    key: "_reRender",
    value: function _reRender() {
      if (this.com) {
        if (!this.options.forceUpdate && this.com.setState) {
          this.com.setState({});
        } else if (this.com.forceUpdate) {
          this.com.forceUpdate(); //forceUpdate 对性能有较大的影响，成指数上升
        }
      }
    }
  }, {
    key: "_get",
    value: function _get(name) {
      return name in this.fieldsMeta ? this.fieldsMeta[name] : null;
    }
  }, {
    key: "get",
    value: function get(name) {
      if (name) {
        return this._get(name);
      } else {
        return this.fieldsMeta;
      }
    }
  }], [{
    key: "create",
    value: function create(com) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return new this(com, options);
    }
  }, {
    key: "getUseField",
    value: function getUseField(_ref2) {
      var _this14 = this;

      var useState = _ref2.useState,
          useMemo = _ref2.useMemo;
      return function () {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var _useState = useState(),
            _useState2 = (0, _slicedToArray2.default)(_useState, 2),
            setState = _useState2[1];

        var field = useMemo(function () {
          return _this14.create({
            setState: setState
          }, options);
        }, [setState]);
        return field;
      };
    }
  }]);
  return Field;
}();

var _default = Field;
exports.default = _default;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : {}
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(140);

var iterableToArrayLimit = __webpack_require__(141);

var unsupportedIterableToArray = __webpack_require__(142);

var nonIterableRest = __webpack_require__(144);

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 140 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 141 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(143);

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 143 */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 144 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(17);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(__webpack_require__(48));

var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(49));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(50));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(70));

var _createClass2 = _interopRequireDefault(__webpack_require__(71));

var _util = __webpack_require__(24);

var _messages2 = _interopRequireDefault(__webpack_require__(146));

var _validator = __webpack_require__(147);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function noop() {}
/**
 * @param {Object} source {name: value, name2: value2}
 * @param {Object} rules {name: [rule1, rule2]}
 * @returns {Object} {name:[{value,rule1},{value, rule2}]}
 */


function serializeRules(source, rules) {
  // serialize rules
  var arr;
  var value;
  var series = {};
  var names = Object.keys(rules);
  names.forEach(function (name) {
    arr = rules[name];
    value = source[name];

    if (!Array.isArray(arr)) {
      arr = [arr];
    }

    arr.forEach(function (rule) {
      rule.validator = (0, _validator.getValidationMethod)(rule);
      rule.field = name;

      if (!rule.validator) {
        return;
      }

      series[name] = series[name] || [];
      series[name].push({
        rule: rule,
        value: value,
        source: source,
        field: name
      });
    });
  });
  return series;
}

var Schema = /*#__PURE__*/function () {
  function Schema(rules) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2.default)(this, Schema);
    this._rules = rules;
    this._options = _objectSpread(_objectSpread({}, options), {}, {
      messages: _objectSpread(_objectSpread({}, _messages2.default), options.messages)
    });
    this.complete = [];
  }

  (0, _createClass2.default)(Schema, [{
    key: "abort",
    value: function abort() {
      for (var i = 0; i < this.complete.length; i++) {
        this.complete[i] = noop;
      }
    }
  }, {
    key: "messages",
    value: function messages(_messages) {
      this._options.messages = Object.assign({}, this._options.messages, _messages);
    }
    /**
     *
     * @param {Object} source - map of field names and values to use in validation
     * @param {Function} callback - OPTIONAL - callback to run after all
     * @returns {null | Promise}
     *          - { null } - if using callbacks
     *          - { Promise }
     *              - { errors: null } - if no rules or no errors
     *              - { errors: Array, fields: Object } - errors from validation and fields that have errors
     */

  }, {
    key: "validate",
    value: function validate(source, callback) {
      var _this = this;

      if (!callback) {
        return this.validatePromise(source);
      }

      if (!this._rules || Object.keys(this._rules).length === 0) {
        if (callback) {
          callback(null);
        }

        return;
      }

      var series = serializeRules(source, this._rules);

      if (Object.keys(series).length === 0) {
        callback(null);
      } // callback function for all rules return


      function complete(results) {
        var i;
        var field;
        var errors = [];
        var fields = {};

        function add(e) {
          if (Array.isArray(e)) {
            errors = errors.concat(e);
          } else {
            errors.push(e);
          }
        }

        for (i = 0; i < results.length; i++) {
          add(results[i]);
        }

        if (!errors.length) {
          errors = null;
          fields = null;
        } else {
          for (i = 0; i < errors.length; i++) {
            field = errors[i].field;
            fields[field] = fields[field] || [];
            fields[field].push(errors[i]);
          }
        }

        callback(errors, fields);
      } // 这里用数组的原因，是为了方便外部做 abort 调用
      // eg: input onChange 时调用有 异步 validator 被异步调用多次，我们只取最后一次调用。否则可能出现 前一个 validator 返回导致


      this.complete.push(complete);
      var idx = this.complete.length; // async validate

      (0, _util.asyncMap)(series, this._options, function (data, next) {
        var rule = data.rule;
        rule.field = data.field;

        function cb(e) {
          var errors = e; // fix e=/""/null/undefiend.
          // ignore e=true/false;

          if (typeof errors !== 'boolean' && !errors) {
            errors = [];
          }

          if (!Array.isArray(errors)) {
            errors = [errors];
          } // 自定义错误


          if (errors.length && rule.message) {
            errors = [].concat(rule.message);
          }

          errors = errors.map((0, _util.complementError)(rule));
          next(errors);
        }

        var res = rule.validator(rule, data.value, cb, _this._options);

        if (res && res.then) {
          res.then(function () {
            return cb();
          }, function (e) {
            return cb(e);
          });
        }
      }, function (results) {
        _this.complete[idx - 1](results);
      });
    }
    /**
     *
     * @param {Object} source - map of field names and values to use in validation
     * @returns {Promise}
     *          - { errors: null } if no rules or no errors
     *          - { errors: Array, fields: Object } - errors from validation and fields that have errors
     */

  }, {
    key: "validatePromise",
    value: function () {
      var _validatePromise = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(source) {
        var _this2 = this;

        var series, results;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(!this._rules || Object.keys(this._rules).length === 0)) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt("return", {
                  errors: null
                });

              case 2:
                series = serializeRules(source, this._rules);

                if (!(Object.keys(series).length === 0)) {
                  _context2.next = 5;
                  break;
                }

                return _context2.abrupt("return", {
                  errors: null
                });

              case 5:
                _context2.next = 7;
                return (0, _util.asyncMapPromise)(series, this._options, /*#__PURE__*/function () {
                  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(data) {
                    var rule, errors;
                    return _regenerator.default.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            rule = data.rule;
                            rule.field = data.field;
                            _context.prev = 2;
                            _context.next = 5;
                            return new Promise(function (resolve, reject) {
                              function cb(e) {
                                resolve(e);
                              }

                              var res = rule.validator(rule, data.value, cb, _this2._options);

                              if (res && res.then) {
                                res.then(function () {
                                  return cb();
                                }, function (e) {
                                  return cb(e);
                                });
                              }
                            });

                          case 5:
                            errors = _context.sent;
                            _context.next = 11;
                            break;

                          case 8:
                            _context.prev = 8;
                            _context.t0 = _context["catch"](2);
                            errors = _context.t0;

                          case 11:
                            if (!errors) {
                              _context.next = 18;
                              break;
                            }

                            // fix e=/""/null/undefiend.
                            // ignore e=true/false;
                            if (typeof errors !== 'boolean' && !errors) {
                              errors = [];
                            }

                            if (!Array.isArray(errors)) {
                              errors = [errors];
                            } // 自定义错误


                            // 自定义错误
                            if (errors.length && rule.message) {
                              errors = [].concat(rule.message);
                            }

                            return _context.abrupt("return", errors.map((0, _util.complementError)(rule)));

                          case 18:
                            return _context.abrupt("return", []);

                          case 19:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee, null, [[2, 8]]);
                  }));

                  return function (_x2) {
                    return _ref.apply(this, arguments);
                  };
                }());

              case 7:
                results = _context2.sent;
                return _context2.abrupt("return", (0, _util.processErrorResults)(results));

              case 9:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function validatePromise(_x) {
        return _validatePromise.apply(this, arguments);
      }

      return validatePromise;
    }()
  }]);
  return Schema;
}();

var _default = Schema;
exports.default = _default;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  default: '%s 校验失败',
  required: '%s 是必填字段',
  format: {
    number: '%s 不是合法的数字',
    email: '%s 不是合法的 email 地址',
    url: '%s 不是合法的 URL 地址',
    tel: '%s 不是合法的电话号码',
    IDNumber: '%s 不是合法的身份证号码'
  },
  number: {
    length: '%s 长度必须是 %s',
    min: '%s 字段数值不得小于 %s',
    max: '%s 字段数值不得大于 %s',
    minLength: '%s 字段字符长度不得少于 %s',
    maxLength: '%s 字段字符长度不得超过 %s'
  },
  string: {
    length: '%s 长度必须是 %s',
    min: '%s 字段数值不得小于 %s',
    max: '%s 字段数值不得大于 %s',
    minLength: '%s 字段字符长度不得少于 %s',
    maxLength: '%s 字段字符长度不得超过 %s'
  },
  array: {
    length: '%s 个数必须是 %s',
    minLength: '%s 个数不得少于 %s',
    maxLength: '%s 个数不得超过 %s'
  },
  pattern: '%s 字段数值 %s 不匹配正则 %s'
};
exports.default = _default;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(17);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getValidationMethod = getValidationMethod;
exports.validateFunc = validateFunc;

var _rules = _interopRequireDefault(__webpack_require__(148));

/* eslint-disable callback-return */

/**
 * {required, format} => format; {required} => required
 * If a promise is wanted from the validator, either return a promise from the callback,
 *      or do not pass a callback
 *
 * @param  {function} validator [description]
 * @param  {string} ruleType  [description]
 * @return {function}           [description]
 */
function validateFunc(validator, ruleType) {
  return function (rule, value, cb, options) {
    var errors = []; // 如果是非required校验

    if (ruleType !== 'required') {
      var _errors = [];

      _rules.default.required(rule, value, _errors, options); // 空数据


      if (_errors.length > 0) {
        if ('required' in rule && rule.required) {
          if (cb) {
            return cb(_errors);
          } else {
            return Promise.reject(_errors);
          }
        } else if (cb) {
          return cb([]); //空数据，并且没有require要求，则忽略
        } else {
          return Promise.resolve(null);
        }
      }
    }

    validator(rule, value, errors, options);

    if (cb) {
      return cb(errors);
    }

    if (Promise) {
      return Promise.resolve(errors);
    }
  };
}
/**
 * {required, format} => format; {required} => required
 * @param  {object} rule [description]
 * @return {function}      [description]
 */


function getValidationMethod(rule) {
  if (typeof rule.validator === 'function') {
    return rule.validator;
  }

  var keys = Object.keys(rule); //required和其他校验规则共存
  //{required, format} {required, unknown}

  for (var i = 0; i < keys.length; i++) {
    var ruleType = keys[i];

    if (ruleType === 'required') {
      continue;
    }

    if (ruleType in _rules.default) {
      return validateFunc(_rules.default[ruleType], ruleType);
    }
  } // 有其他位置参数


  if ('required' in rule && rule.required) {
    return validateFunc(_rules.default.required, 'required');
  }

  return null;
}

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(17);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _required = _interopRequireDefault(__webpack_require__(149));

var _format = _interopRequireDefault(__webpack_require__(150));

var _size = _interopRequireDefault(__webpack_require__(151));

var _length = _interopRequireDefault(__webpack_require__(152));

var _pattern = _interopRequireDefault(__webpack_require__(153));

var _default = {
  required: _required.default,
  format: _format.default,
  min: _size.default,
  max: _size.default,
  minLength: _length.default,
  maxLength: _length.default,
  length: _length.default,
  pattern: _pattern.default
};
exports.default = _default;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(23);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var util = _interopRequireWildcard(__webpack_require__(24));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 *  Rule for validating required fields.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function required(rule, value, errors, options) {
  if (value === undefined || value === null || value === '' || value.length === 0) {
    errors.push(util.format(options.messages.required, rule.aliasName || rule.field));
  }
}

var _default = required;
exports.default = _default;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(23);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var util = _interopRequireWildcard(__webpack_require__(24));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var pattern = {
  email: /[\w\u4E00-\u9FA5]+([-+.][\w\u4E00-\u9FA5]+)*@[\w\u4E00-\u9FA5]+([-.][\w\u4E00-\u9FA5]+)*\.[\w\u4E00-\u9FA5]+([-.][\w\u4E00-\u9FA5]+)*/,
  url: /^(?:(?:http|https|ftp):\/\/|\/\/)(?:(?:(?:[-\w\u00a1-\uffff]+)(?:\.[-\w\u00a1-\uffff]+)+|localhost)(?::\d{2,5})?(?:(?:\/|#)[^\s]*)?)$/,
  number: /\d*/,
  tel: /^(1\d{10})$|(((400)-(\d{3})-(\d{4}))|^((\d{7,8})|(\d{3,4})-(\d{7,8})|(\d{7,8})-(\d{1,4}))$)$|^([ ]?)$/
};
var types = {
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }

    return typeof value === 'number' || typeof value === 'string' && !!value.match(pattern.number);
  },
  email: function email(value) {
    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;
  },
  url: function url(value) {
    return typeof value === 'string' && !!value.match(pattern.url);
  },
  tel: function tel(value) {
    return typeof value === 'string' && !!value.match(pattern.tel);
  },
  IDNumber: function IDNumber(value) {
    return validatorIDNumber(value);
  }
};
/**
 *  Rule for validating the type of a value.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */

function format(rule, value, errors, options) {
  var custom = ['email', 'number', 'url', 'tel', 'IDNumber'];
  var ruleType = rule.format;

  if (custom.indexOf(ruleType) > -1 && !types[ruleType](value)) {
    errors.push(util.format(options.messages.format[ruleType], rule.aliasName || rule.field, rule.format));
  }
}
/**
 * @params {string} idcode
 *
 * 函数参数必须是字符串，因为二代身份证号码是十八位，而在javascript中，十八位的数值会超出计算范围，造成不精确的结果，
 * 导致最后两位和计算的值不一致，从而该函数出现错误（详情查看javascript的数值范围）。
 * 为了避免这一误差，idcode必须是字符串
 *
 * 正则思路：
 *   第一位不可能是0
 *   第二位到第六位可以是0-9
 *   第七位到第十位是年份，所以七八位为19或者20
 *   十一位和十二位是月份，这两位是01-12之间的数值
 *   十三位和十四位是日期，是从01-31之间的数值
 *   十五，十六，十七都是数字0-9
 *   十八位可能是数字0-9，也可能是X
 * */


function validatorIDNumber(idCode) {
  if (typeof idCode !== 'string') {
    return false;
  }

  var idCardPatter = /^[1-9][0-9]{5}([1][9][0-9]{2}|[2][0][0|1][0-9])([0][1-9]|[1][0|1|2])([0][1-9]|[1|2][0-9]|[3][0|1])[0-9]{3}([0-9]|[X])$/; // 判断格式是否正确

  var format = idCardPatter.test(idCode);

  if (!format) {
    return false;
  } // 加权因子


  var weightFactor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; // 校验码

  var checkCode = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];
  var last = idCode[17]; //最后一位

  var seventeen = idCode.substring(0, 17); // ISO 7064:1983.MOD 11-2
  // 判断最后一位校验码是否正确

  var arr = seventeen.split('');
  var len = arr.length;
  var num = 0;

  for (var i = 0; i < len; i++) {
    num += arr[i] * weightFactor[i];
  } // 获取余数


  var lastNo = checkCode[num % 11]; // 返回验证结果，校验码和格式同时正确才算是合法的身份证号码

  return last === lastNo;
}

var _default = format;
exports.default = _default;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(23);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var util = _interopRequireWildcard(__webpack_require__(24));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function size(rule, value, errors, options) {
  var key = null;
  var isNum = typeof value === 'number';
  var isStr = typeof value === 'string';

  if (isNum) {
    key = 'number';
  } else if (isStr) {
    key = 'string';
  }

  if (!key) {
    return false;
  } // TODO: 2.x change to typeof rule.min === 'number' || typeof rule.max === 'number'


  if (typeof rule.min !== 'undefined' || typeof rule.max !== 'undefined') {
    var val = value;
    var max = Number(rule.max);
    var min = Number(rule.min);

    if (isStr) {
      val = Number(val);
    }

    if (val < min) {
      errors.push(util.format(options.messages[key].min, rule.aliasName || rule.field, rule.min));
    } else if (val > max) {
      errors.push(util.format(options.messages[key].max, rule.aliasName || rule.field, rule.max));
    }
  }
}

var _default = size;
exports.default = _default;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(23);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var util = _interopRequireWildcard(__webpack_require__(24));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function length(rule, value, errors, options) {
  var key = null;
  var isNum = typeof value === 'number';
  var isStr = typeof value === 'string';
  var isArr = Array.isArray(value);

  if (isNum) {
    key = 'number';
  } else if (isStr) {
    key = 'string';
  } else if (isArr) {
    key = 'array';
  }

  if (!key) {
    return false;
  }

  var val = value;
  var length = Number(rule.length);
  var maxLength = Number(rule.maxLength);
  var minLength = Number(rule.minLength);

  if (minLength || maxLength || length) {
    if (isNum) {
      val = "".concat(val);
    }

    val = val.length;

    if (length && val !== rule.length) {
      errors.push(util.format(options.messages[key].length, rule.aliasName || rule.field, rule.length));
    } else if (val < minLength) {
      errors.push(util.format(options.messages[key].minLength, rule.aliasName || rule.field, rule.minLength));
    } else if (val > maxLength) {
      errors.push(util.format(options.messages[key].maxLength, rule.aliasName || rule.field, rule.maxLength));
    }
  }
}

var _default = length;
exports.default = _default;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = __webpack_require__(23);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var util = _interopRequireWildcard(__webpack_require__(24));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 *  Rule for validating a regular expression pattern.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern(rule, value, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      if (!rule.pattern.test(value)) {
        errors.push(util.format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));
      }
    } else if (typeof rule.pattern === 'string') {
      var _pattern = new RegExp(rule.pattern);

      if (!_pattern.test(value)) {
        errors.push(util.format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));
      }
    }
  }
}

var _default = pattern;
exports.default = _default;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var _interopRequireDefault = __webpack_require__(17);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getIn = getIn;
exports.setIn = setIn;
exports.deleteIn = deleteIn;
exports.getErrorStrs = getErrorStrs;
exports.getParams = getParams;
exports.getValueFromEvent = getValueFromEvent;
exports.mapValidateRules = mapValidateRules;
exports.warning = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(50));

var _extends3 = _interopRequireDefault(__webpack_require__(33));

function getIn(state, name) {
  if (!state) {
    return state;
  }

  var path = typeof name === 'string' ? name.replace(/\[/, '.').replace(/\]/, '').split('.') : '';
  var length = path.length;

  if (!length) {
    return undefined;
  }

  var result = state;

  for (var i = 0; i < length && !!result; ++i) {
    result = result[path[i]];
  }

  return result;
}

var setInWithPath = function setInWithPath(state, value, path, pathIndex) {
  if (pathIndex >= path.length) {
    return value;
  }

  var first = path[pathIndex];
  var next = setInWithPath(state && state[first], value, path, pathIndex + 1);

  if (!state) {
    var initialized = isNaN(first) ? {} : [];
    initialized[first] = next;
    return initialized;
  }

  if (Array.isArray(state)) {
    var copy = [].concat(state);
    copy[first] = next;
    return copy;
  }

  return (0, _extends3.default)({}, state, (0, _defineProperty2.default)({}, first, next));
};

function setIn(state, name, value) {
  return setInWithPath(state, value, typeof name === 'string' ? name.replace(/\[/, '.').replace(/\]/, '').split('.') : '', 0);
}

function deleteIn(state, name) {
  if (!state) {
    return;
  }

  var path = typeof name === 'string' ? name.replace(/\[/, '.').replace(/\]/, '').split('.') : '';
  var length = path.length;

  if (!length) {
    return state;
  }

  var result = state;

  for (var i = 0; i < length && !!result; ++i) {
    if (i === length - 1) {
      delete result[path[i]];
    } else {
      result = result[path[i]];
    }
  }

  return state;
}

function getErrorStrs(errors, processErrorMessage) {
  if (errors) {
    return errors.map(function (e) {
      var message = typeof e.message !== 'undefined' ? e.message : e;

      if (typeof processErrorMessage === 'function') {
        return processErrorMessage(message);
      }

      return message;
    });
  }

  return errors;
}

function getParams(ns, cb) {
  var names = typeof ns === 'string' ? [ns] : ns;
  var callback = cb;

  if (cb === undefined && typeof names === 'function') {
    callback = names;
    names = undefined;
  }

  return {
    names: names,
    callback: callback
  };
}
/**
 * 从组件事件中获取数据
 * @param e Event或者value
 * @returns value
 */


function getValueFromEvent(e) {
  // support custom element
  if (!e || !e.target) {
    return e;
  }

  var target = e.target;

  if (target.type === 'checkbox') {
    return target.checked;
  } else if (target.type === 'radio') {
    //兼容原生radioGroup
    if (target.value) {
      return target.value;
    } else {
      return target.checked;
    }
  }

  return target.value;
}

function validateMap(rulesMap, rule, defaultTrigger) {
  var nrule = (0, _extends3.default)({}, rule);

  if (!nrule.trigger) {
    nrule.trigger = [defaultTrigger];
  }

  if (typeof nrule.trigger === 'string') {
    nrule.trigger = [nrule.trigger];
  }

  for (var i = 0; i < nrule.trigger.length; i++) {
    var trigger = nrule.trigger[i];

    if (trigger in rulesMap) {
      rulesMap[trigger].push(nrule);
    } else {
      rulesMap[trigger] = [nrule];
    }
  }

  delete nrule.trigger;
}
/**
 * 提取rule里面的trigger并且做映射
 * @param  {Array} rules   规则
 * @param  {String} defaultTrigger 默认触发
 * @return {Object} {onChange:rule1, onBlur: rule2}
 */


function mapValidateRules(rules, defaultTrigger) {
  var rulesMap = {};
  rules.forEach(function (rule) {
    validateMap(rulesMap, rule, defaultTrigger);
  });
  return rulesMap;
}

var warn = function warn() {};

if (typeof process !== 'undefined' && process.env && "production" !== 'production' && typeof window !== 'undefined' && typeof document !== 'undefined') {
  warn = function warn() {
    /* eslint-disable no-console */
    if (typeof console !== 'undefined' && console.error) {
      var _console;

      (_console = console).error.apply(_console, arguments);
    }
  };
}

var warning = warn;
exports.warning = warning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(155)))

/***/ }),
/* 155 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;;(function (globalObject) {
  'use strict';

/*
 *      bignumber.js v9.0.2
 *      A JavaScript library for arbitrary-precision arithmetic.
 *      https://github.com/MikeMcl/bignumber.js
 *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>
 *      MIT Licensed.
 *
 *      BigNumber.prototype methods     |  BigNumber methods
 *                                      |
 *      absoluteValue            abs    |  clone
 *      comparedTo                      |  config               set
 *      decimalPlaces            dp     |      DECIMAL_PLACES
 *      dividedBy                div    |      ROUNDING_MODE
 *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT
 *      exponentiatedBy          pow    |      RANGE
 *      integerValue                    |      CRYPTO
 *      isEqualTo                eq     |      MODULO_MODE
 *      isFinite                        |      POW_PRECISION
 *      isGreaterThan            gt     |      FORMAT
 *      isGreaterThanOrEqualTo   gte    |      ALPHABET
 *      isInteger                       |  isBigNumber
 *      isLessThan               lt     |  maximum              max
 *      isLessThanOrEqualTo      lte    |  minimum              min
 *      isNaN                           |  random
 *      isNegative                      |  sum
 *      isPositive                      |
 *      isZero                          |
 *      minus                           |
 *      modulo                   mod    |
 *      multipliedBy             times  |
 *      negated                         |
 *      plus                            |
 *      precision                sd     |
 *      shiftedBy                       |
 *      squareRoot               sqrt   |
 *      toExponential                   |
 *      toFixed                         |
 *      toFormat                        |
 *      toFraction                      |
 *      toJSON                          |
 *      toNumber                        |
 *      toPrecision                     |
 *      toString                        |
 *      valueOf                         |
 *
 */


  var BigNumber,
    isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
    mathceil = Math.ceil,
    mathfloor = Math.floor,

    bignumberError = '[BigNumber Error] ',
    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',

    BASE = 1e14,
    LOG_BASE = 14,
    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1
    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
    SQRT_BASE = 1e7,

    // EDITABLE
    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
    // the arguments to toExponential, toFixed, toFormat, and toPrecision.
    MAX = 1E9;                                   // 0 to MAX_INT32


  /*
   * Create and return a BigNumber constructor.
   */
  function clone(configObject) {
    var div, convertBase, parseNumeric,
      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },
      ONE = new BigNumber(1),


      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------


      // The default values below must be integers within the inclusive ranges stated.
      // The values can also be changed at run-time using BigNumber.set.

      // The maximum number of decimal places for operations involving division.
      DECIMAL_PLACES = 20,                     // 0 to MAX

      // The rounding mode used when rounding to the above decimal places, and when using
      // toExponential, toFixed, toFormat and toPrecision, and round (default value).
      // UP         0 Away from zero.
      // DOWN       1 Towards zero.
      // CEIL       2 Towards +Infinity.
      // FLOOR      3 Towards -Infinity.
      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.
      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
      ROUNDING_MODE = 4,                       // 0 to 8

      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

      // The exponent value at and beneath which toString returns exponential notation.
      // Number type: -7
      TO_EXP_NEG = -7,                         // 0 to -MAX

      // The exponent value at and above which toString returns exponential notation.
      // Number type: 21
      TO_EXP_POS = 21,                         // 0 to MAX

      // RANGE : [MIN_EXP, MAX_EXP]

      // The minimum exponent value, beneath which underflow to zero occurs.
      // Number type: -324  (5e-324)
      MIN_EXP = -1e7,                          // -1 to -MAX

      // The maximum exponent value, above which overflow to Infinity occurs.
      // Number type:  308  (1.7976931348623157e+308)
      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
      MAX_EXP = 1e7,                           // 1 to MAX

      // Whether to use cryptographically-secure random number generation, if available.
      CRYPTO = false,                          // true or false

      // The modulo mode used when calculating the modulus: a mod n.
      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
      // The remainder (r) is calculated as: r = a - n * q.
      //
      // UP        0 The remainder is positive if the dividend is negative, else is negative.
      // DOWN      1 The remainder has the same sign as the dividend.
      //             This modulo mode is commonly known as 'truncated division' and is
      //             equivalent to (a % n) in JavaScript.
      // FLOOR     3 The remainder has the same sign as the divisor (Python %).
      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
      //             The remainder is always positive.
      //
      // The truncated division, floored division, Euclidian division and IEEE 754 remainder
      // modes are commonly used for the modulus operation.
      // Although the other rounding modes can also be used, they may not give useful results.
      MODULO_MODE = 1,                         // 0 to 9

      // The maximum number of significant digits of the result of the exponentiatedBy operation.
      // If POW_PRECISION is 0, there will be unlimited significant digits.
      POW_PRECISION = 0,                       // 0 to MAX

      // The format specification used by the BigNumber.prototype.toFormat method.
      FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',        // non-breaking space
        suffix: ''
      },

      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',
      // '-', '.', whitespace, or repeated character.
      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'
      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',
      alphabetHasNormalDecimalDigits = true;


    //------------------------------------------------------------------------------------------


    // CONSTRUCTOR


    /*
     * The BigNumber constructor and exported function.
     * Create and return a new instance of a BigNumber object.
     *
     * v {number|string|BigNumber} A numeric value.
     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.
     */
    function BigNumber(v, b) {
      var alphabet, c, caseChanged, e, i, isNum, len, str,
        x = this;

      // Enable constructor call without `new`.
      if (!(x instanceof BigNumber)) return new BigNumber(v, b);

      if (b == null) {

        if (v && v._isBigNumber === true) {
          x.s = v.s;

          if (!v.c || v.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (v.e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = v.e;
            x.c = v.c.slice();
          }

          return;
        }

        if ((isNum = typeof v == 'number') && v * 0 == 0) {

          // Use `1 / n` to handle minus zero also.
          x.s = 1 / v < 0 ? (v = -v, -1) : 1;

          // Fast path for integers, where n < 2147483648 (2**31).
          if (v === ~~v) {
            for (e = 0, i = v; i >= 10; i /= 10, e++);

            if (e > MAX_EXP) {
              x.c = x.e = null;
            } else {
              x.e = e;
              x.c = [v];
            }

            return;
          }

          str = String(v);
        } else {

          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);

          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
        }

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

        // Exponential form?
        if ((i = str.search(/e/i)) > 0) {

          // Determine exponent.
          if (e < 0) e = i;
          e += +str.slice(i + 1);
          str = str.substring(0, i);
        } else if (e < 0) {

          // Integer.
          e = str.length;
        }

      } else {

        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
        intCheck(b, 2, ALPHABET.length, 'Base');

        // Allow exponential notation to be used with base 10 argument, while
        // also rounding to DECIMAL_PLACES as with other bases.
        if (b == 10 && alphabetHasNormalDecimalDigits) {
          x = new BigNumber(v);
          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
        }

        str = String(v);

        if (isNum = typeof v == 'number') {

          // Avoid potential interpretation of Infinity and NaN as base 44+ values.
          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);

          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
          if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
            throw Error
             (tooManyDigits + v);
          }
        } else {
          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
        }

        alphabet = ALPHABET.slice(0, b);
        e = i = 0;

        // Check that str is a valid base b number.
        // Don't use RegExp, so alphabet can contain special characters.
        for (len = str.length; i < len; i++) {
          if (alphabet.indexOf(c = str.charAt(i)) < 0) {
            if (c == '.') {

              // If '.' is not the first character and it has not be found before.
              if (i > e) {
                e = len;
                continue;
              }
            } else if (!caseChanged) {

              // Allow e.g. hexadecimal 'FF' as well as 'ff'.
              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||
                  str == str.toLowerCase() && (str = str.toUpperCase())) {
                caseChanged = true;
                i = -1;
                e = 0;
                continue;
              }
            }

            return parseNumeric(x, String(v), isNum, b);
          }
        }

        // Prevent later check for length on converted number.
        isNum = false;
        str = convertBase(str, b, 10, x.s);

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');
        else e = str.length;
      }

      // Determine leading zeros.
      for (i = 0; str.charCodeAt(i) === 48; i++);

      // Determine trailing zeros.
      for (len = str.length; str.charCodeAt(--len) === 48;);

      if (str = str.slice(i, ++len)) {
        len -= i;

        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
        if (isNum && BigNumber.DEBUG &&
          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error
             (tooManyDigits + (x.s * v));
        }

         // Overflow?
        if ((e = e - i - 1) > MAX_EXP) {

          // Infinity.
          x.c = x.e = null;

        // Underflow?
        } else if (e < MIN_EXP) {

          // Zero.
          x.c = [x.e = 0];
        } else {
          x.e = e;
          x.c = [];

          // Transform base

          // e is the base 10 exponent.
          // i is where to slice str to get the first element of the coefficient array.
          i = (e + 1) % LOG_BASE;
          if (e < 0) i += LOG_BASE;  // i < 1

          if (i < len) {
            if (i) x.c.push(+str.slice(0, i));

            for (len -= LOG_BASE; i < len;) {
              x.c.push(+str.slice(i, i += LOG_BASE));
            }

            i = LOG_BASE - (str = str.slice(i)).length;
          } else {
            i -= len;
          }

          for (; i--; str += '0');
          x.c.push(+str);
        }
      } else {

        // Zero.
        x.c = [x.e = 0];
      }
    }


    // CONSTRUCTOR PROPERTIES


    BigNumber.clone = clone;

    BigNumber.ROUND_UP = 0;
    BigNumber.ROUND_DOWN = 1;
    BigNumber.ROUND_CEIL = 2;
    BigNumber.ROUND_FLOOR = 3;
    BigNumber.ROUND_HALF_UP = 4;
    BigNumber.ROUND_HALF_DOWN = 5;
    BigNumber.ROUND_HALF_EVEN = 6;
    BigNumber.ROUND_HALF_CEIL = 7;
    BigNumber.ROUND_HALF_FLOOR = 8;
    BigNumber.EUCLID = 9;


    /*
     * Configure infrequently-changing library-wide settings.
     *
     * Accept an object with the following optional properties (if the value of a property is
     * a number, it must be an integer within the inclusive range stated):
     *
     *   DECIMAL_PLACES   {number}           0 to MAX
     *   ROUNDING_MODE    {number}           0 to 8
     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]
     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]
     *   CRYPTO           {boolean}          true or false
     *   MODULO_MODE      {number}           0 to 9
     *   POW_PRECISION       {number}           0 to MAX
     *   ALPHABET         {string}           A string of two or more unique characters which does
     *                                       not contain '.'.
     *   FORMAT           {object}           An object with some of the following properties:
     *     prefix                 {string}
     *     groupSize              {number}
     *     secondaryGroupSize     {number}
     *     groupSeparator         {string}
     *     decimalSeparator       {string}
     *     fractionGroupSize      {number}
     *     fractionGroupSeparator {string}
     *     suffix                 {string}
     *
     * (The values assigned to the above FORMAT object properties are not checked for validity.)
     *
     * E.g.
     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
     *
     * Ignore properties/parameters set to null or undefined, except for ALPHABET.
     *
     * Return an object with the properties current values.
     */
    BigNumber.config = BigNumber.set = function (obj) {
      var p, v;

      if (obj != null) {

        if (typeof obj == 'object') {

          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            DECIMAL_PLACES = v;
          }

          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
            v = obj[p];
            intCheck(v, 0, 8, p);
            ROUNDING_MODE = v;
          }

          // EXPONENTIAL_AT {number|number[]}
          // Integer, -MAX to MAX inclusive or
          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].
          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, 0, p);
              intCheck(v[1], 0, MAX, p);
              TO_EXP_NEG = v[0];
              TO_EXP_POS = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
            }
          }

          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'
          if (obj.hasOwnProperty(p = 'RANGE')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, -1, p);
              intCheck(v[1], 1, MAX, p);
              MIN_EXP = v[0];
              MAX_EXP = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              if (v) {
                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
              } else {
                throw Error
                 (bignumberError + p + ' cannot be zero: ' + v);
              }
            }
          }

          // CRYPTO {boolean} true or false.
          // '[BigNumber Error] CRYPTO not true or false: {v}'
          // '[BigNumber Error] crypto unavailable'
          if (obj.hasOwnProperty(p = 'CRYPTO')) {
            v = obj[p];
            if (v === !!v) {
              if (v) {
                if (typeof crypto != 'undefined' && crypto &&
                 (crypto.getRandomValues || crypto.randomBytes)) {
                  CRYPTO = v;
                } else {
                  CRYPTO = !v;
                  throw Error
                   (bignumberError + 'crypto unavailable');
                }
              } else {
                CRYPTO = v;
              }
            } else {
              throw Error
               (bignumberError + p + ' not true or false: ' + v);
            }
          }

          // MODULO_MODE {number} Integer, 0 to 9 inclusive.
          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
            v = obj[p];
            intCheck(v, 0, 9, p);
            MODULO_MODE = v;
          }

          // POW_PRECISION {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            POW_PRECISION = v;
          }

          // FORMAT {object}
          // '[BigNumber Error] FORMAT not an object: {v}'
          if (obj.hasOwnProperty(p = 'FORMAT')) {
            v = obj[p];
            if (typeof v == 'object') FORMAT = v;
            else throw Error
             (bignumberError + p + ' not an object: ' + v);
          }

          // ALPHABET {string}
          // '[BigNumber Error] ALPHABET invalid: {v}'
          if (obj.hasOwnProperty(p = 'ALPHABET')) {
            v = obj[p];

            // Disallow if less than two characters,
            // or if it contains '+', '-', '.', whitespace, or a repeated character.
            if (typeof v == 'string' && !/^.?$|[+\-.\s]|(.).*\1/.test(v)) {
              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';
              ALPHABET = v;
            } else {
              throw Error
               (bignumberError + p + ' invalid: ' + v);
            }
          }

        } else {

          // '[BigNumber Error] Object expected: {v}'
          throw Error
           (bignumberError + 'Object expected: ' + obj);
        }
      }

      return {
        DECIMAL_PLACES: DECIMAL_PLACES,
        ROUNDING_MODE: ROUNDING_MODE,
        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
        RANGE: [MIN_EXP, MAX_EXP],
        CRYPTO: CRYPTO,
        MODULO_MODE: MODULO_MODE,
        POW_PRECISION: POW_PRECISION,
        FORMAT: FORMAT,
        ALPHABET: ALPHABET
      };
    };


    /*
     * Return true if v is a BigNumber instance, otherwise return false.
     *
     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.
     *
     * v {any}
     *
     * '[BigNumber Error] Invalid BigNumber: {v}'
     */
    BigNumber.isBigNumber = function (v) {
      if (!v || v._isBigNumber !== true) return false;
      if (!BigNumber.DEBUG) return true;

      var i, n,
        c = v.c,
        e = v.e,
        s = v.s;

      out: if ({}.toString.call(c) == '[object Array]') {

        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {

          // If the first element is zero, the BigNumber value must be zero.
          if (c[0] === 0) {
            if (e === 0 && c.length === 1) return true;
            break out;
          }

          // Calculate number of digits that c[0] should have, based on the exponent.
          i = (e + 1) % LOG_BASE;
          if (i < 1) i += LOG_BASE;

          // Calculate number of digits of c[0].
          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {
          if (String(c[0]).length == i) {

            for (i = 0; i < c.length; i++) {
              n = c[i];
              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
            }

            // Last element cannot be zero, unless it is the only element.
            if (n !== 0) return true;
          }
        }

      // Infinity/NaN
      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
        return true;
      }

      throw Error
        (bignumberError + 'Invalid BigNumber: ' + v);
    };


    /*
     * Return a new BigNumber whose value is the maximum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.maximum = BigNumber.max = function () {
      return maxOrMin(arguments, P.lt);
    };


    /*
     * Return a new BigNumber whose value is the minimum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.minimum = BigNumber.min = function () {
      return maxOrMin(arguments, P.gt);
    };


    /*
     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
     * zeros are produced).
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'
     * '[BigNumber Error] crypto unavailable'
     */
    BigNumber.random = (function () {
      var pow2_53 = 0x20000000000000;

      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
      // Check if Math.random() produces more than 32 bits of randomness.
      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff
       ? function () { return mathfloor(Math.random() * pow2_53); }
       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +
         (Math.random() * 0x800000 | 0); };

      return function (dp) {
        var a, b, e, k, v,
          i = 0,
          c = [],
          rand = new BigNumber(ONE);

        if (dp == null) dp = DECIMAL_PLACES;
        else intCheck(dp, 0, MAX);

        k = mathceil(dp / LOG_BASE);

        if (CRYPTO) {

          // Browsers supporting crypto.getRandomValues.
          if (crypto.getRandomValues) {

            a = crypto.getRandomValues(new Uint32Array(k *= 2));

            for (; i < k;) {

              // 53 bits:
              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
              // 11111 11111111 11111111 11111111 11100000 00000000 00000000
              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
              //                                     11111 11111111 11111111
              // 0x20000 is 2^21.
              v = a[i] * 0x20000 + (a[i + 1] >>> 11);

              // Rejection sampling:
              // 0 <= v < 9007199254740992
              // Probability that v >= 9e15, is
              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251
              if (v >= 9e15) {
                b = crypto.getRandomValues(new Uint32Array(2));
                a[i] = b[0];
                a[i + 1] = b[1];
              } else {

                // 0 <= v <= 8999999999999999
                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 2;
              }
            }
            i = k / 2;

          // Node.js supporting crypto.randomBytes.
          } else if (crypto.randomBytes) {

            // buffer
            a = crypto.randomBytes(k *= 7);

            for (; i < k;) {

              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
              // 0x100000000 is 2^32, 0x1000000 is 2^24
              // 11111 11111111 11111111 11111111 11111111 11111111 11111111
              // 0 <= v < 9007199254740992
              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +
                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +
                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

              if (v >= 9e15) {
                crypto.randomBytes(7).copy(a, i);
              } else {

                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 7;
              }
            }
            i = k / 7;
          } else {
            CRYPTO = false;
            throw Error
             (bignumberError + 'crypto unavailable');
          }
        }

        // Use Math.random.
        if (!CRYPTO) {

          for (; i < k;) {
            v = random53bitInt();
            if (v < 9e15) c[i++] = v % 1e14;
          }
        }

        k = c[--i];
        dp %= LOG_BASE;

        // Convert trailing digits to zeros according to dp.
        if (k && dp) {
          v = POWS_TEN[LOG_BASE - dp];
          c[i] = mathfloor(k / v) * v;
        }

        // Remove trailing elements which are zero.
        for (; c[i] === 0; c.pop(), i--);

        // Zero?
        if (i < 0) {
          c = [e = 0];
        } else {

          // Remove leading elements which are zero and adjust exponent accordingly.
          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);

          // Count the digits of the first element of c to determine leading zeros, and...
          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);

          // adjust the exponent accordingly.
          if (i < LOG_BASE) e -= LOG_BASE - i;
        }

        rand.e = e;
        rand.c = c;
        return rand;
      };
    })();


    /*
     * Return a BigNumber whose value is the sum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.sum = function () {
      var i = 1,
        args = arguments,
        sum = new BigNumber(args[0]);
      for (; i < args.length;) sum = sum.plus(args[i++]);
      return sum;
    };


    // PRIVATE FUNCTIONS


    // Called by BigNumber and BigNumber.prototype.toString.
    convertBase = (function () {
      var decimal = '0123456789';

      /*
       * Convert string of baseIn to an array of numbers of baseOut.
       * Eg. toBaseOut('255', 10, 16) returns [15, 15].
       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].
       */
      function toBaseOut(str, baseIn, baseOut, alphabet) {
        var j,
          arr = [0],
          arrL,
          i = 0,
          len = str.length;

        for (; i < len;) {
          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);

          arr[0] += alphabet.indexOf(str.charAt(i++));

          for (j = 0; j < arr.length; j++) {

            if (arr[j] > baseOut - 1) {
              if (arr[j + 1] == null) arr[j + 1] = 0;
              arr[j + 1] += arr[j] / baseOut | 0;
              arr[j] %= baseOut;
            }
          }
        }

        return arr.reverse();
      }

      // Convert a numeric string of baseIn to a numeric string of baseOut.
      // If the caller is toString, we are converting from base 10 to baseOut.
      // If the caller is BigNumber, we are converting from baseIn to base 10.
      return function (str, baseIn, baseOut, sign, callerIsToString) {
        var alphabet, d, e, k, r, x, xc, y,
          i = str.indexOf('.'),
          dp = DECIMAL_PLACES,
          rm = ROUNDING_MODE;

        // Non-integer.
        if (i >= 0) {
          k = POW_PRECISION;

          // Unlimited precision.
          POW_PRECISION = 0;
          str = str.replace('.', '');
          y = new BigNumber(baseIn);
          x = y.pow(str.length - i);
          POW_PRECISION = k;

          // Convert str as if an integer, then restore the fraction part by dividing the
          // result by its base raised to a power.

          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),
           10, baseOut, decimal);
          y.e = y.c.length;
        }

        // Convert the number as integer.

        xc = toBaseOut(str, baseIn, baseOut, callerIsToString
         ? (alphabet = ALPHABET, decimal)
         : (alphabet = decimal, ALPHABET));

        // xc now represents str as an integer and converted to baseOut. e is the exponent.
        e = k = xc.length;

        // Remove trailing zeros.
        for (; xc[--k] == 0; xc.pop());

        // Zero?
        if (!xc[0]) return alphabet.charAt(0);

        // Does str represent an integer? If so, no need for the division.
        if (i < 0) {
          --e;
        } else {
          x.c = xc;
          x.e = e;

          // The sign is needed for correct rounding.
          x.s = sign;
          x = div(x, y, dp, rm, baseOut);
          xc = x.c;
          r = x.r;
          e = x.e;
        }

        // xc now represents str converted to baseOut.

        // THe index of the rounding digit.
        d = e + dp + 1;

        // The rounding digit: the digit to the right of the digit that may be rounded up.
        i = xc[d];

        // Look at the rounding digits and mode to determine whether to round up.

        k = baseOut / 2;
        r = r || d < 0 || xc[d + 1] != null;

        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||
               rm == (x.s < 0 ? 8 : 7));

        // If the index of the rounding digit is not greater than zero, or xc represents
        // zero, then the result of the base conversion is zero or, if rounding up, a value
        // such as 0.00001.
        if (d < 1 || !xc[0]) {

          // 1^-dp or 0
          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
        } else {

          // Truncate xc to the required number of decimal places.
          xc.length = d;

          // Round up?
          if (r) {

            // Rounding up may mean the previous digit has to be rounded up and so on.
            for (--baseOut; ++xc[--d] > baseOut;) {
              xc[d] = 0;

              if (!d) {
                ++e;
                xc = [1].concat(xc);
              }
            }
          }

          // Determine trailing zeros.
          for (k = xc.length; !xc[--k];);

          // E.g. [4, 11, 15] becomes 4bf.
          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));

          // Add leading zeros, decimal point and trailing zeros as required.
          str = toFixedPoint(str, e, alphabet.charAt(0));
        }

        // The caller will add the sign.
        return str;
      };
    })();


    // Perform division in the specified base. Called by div and convertBase.
    div = (function () {

      // Assume non-zero x and k.
      function multiply(x, k, base) {
        var m, temp, xlo, xhi,
          carry = 0,
          i = x.length,
          klo = k % SQRT_BASE,
          khi = k / SQRT_BASE | 0;

        for (x = x.slice(); i--;) {
          xlo = x[i] % SQRT_BASE;
          xhi = x[i] / SQRT_BASE | 0;
          m = khi * xlo + xhi * klo;
          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;
          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
          x[i] = temp % base;
        }

        if (carry) x = [carry].concat(x);

        return x;
      }

      function compare(a, b, aL, bL) {
        var i, cmp;

        if (aL != bL) {
          cmp = aL > bL ? 1 : -1;
        } else {

          for (i = cmp = 0; i < aL; i++) {

            if (a[i] != b[i]) {
              cmp = a[i] > b[i] ? 1 : -1;
              break;
            }
          }
        }

        return cmp;
      }

      function subtract(a, b, aL, base) {
        var i = 0;

        // Subtract b from a.
        for (; aL--;) {
          a[aL] -= i;
          i = a[aL] < b[aL] ? 1 : 0;
          a[aL] = i * base + a[aL] - b[aL];
        }

        // Remove leading zeros.
        for (; !a[0] && a.length > 1; a.splice(0, 1));
      }

      // x: dividend, y: divisor.
      return function (x, y, dp, rm, base) {
        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,
          yL, yz,
          s = x.s == y.s ? 1 : -1,
          xc = x.c,
          yc = y.c;

        // Either NaN, Infinity or 0?
        if (!xc || !xc[0] || !yc || !yc[0]) {

          return new BigNumber(

           // Return NaN if either NaN, or both Infinity or 0.
           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :

            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
            xc && xc[0] == 0 || !yc ? s * 0 : s / 0
         );
        }

        q = new BigNumber(s);
        qc = q.c = [];
        e = x.e - y.e;
        s = dp + e + 1;

        if (!base) {
          base = BASE;
          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
          s = s / LOG_BASE | 0;
        }

        // Result exponent may be one less then the current value of e.
        // The coefficients of the BigNumbers from convertBase may have trailing zeros.
        for (i = 0; yc[i] == (xc[i] || 0); i++);

        if (yc[i] > (xc[i] || 0)) e--;

        if (s < 0) {
          qc.push(1);
          more = true;
        } else {
          xL = xc.length;
          yL = yc.length;
          i = 0;
          s += 2;

          // Normalise xc and yc so highest order digit of yc is >= base / 2.

          n = mathfloor(base / (yc[0] + 1));

          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.
          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {
          if (n > 1) {
            yc = multiply(yc, n, base);
            xc = multiply(xc, n, base);
            yL = yc.length;
            xL = xc.length;
          }

          xi = yL;
          rem = xc.slice(0, yL);
          remL = rem.length;

          // Add zeros to make remainder as long as divisor.
          for (; remL < yL; rem[remL++] = 0);
          yz = yc.slice();
          yz = [0].concat(yz);
          yc0 = yc[0];
          if (yc[1] >= base / 2) yc0++;
          // Not necessary, but to prevent trial digit n > base, when using base 3.
          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;

          do {
            n = 0;

            // Compare divisor and remainder.
            cmp = compare(yc, rem, yL, remL);

            // If divisor < remainder.
            if (cmp < 0) {

              // Calculate trial digit, n.

              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);

              // n is how many times the divisor goes into the current remainder.
              n = mathfloor(rem0 / yc0);

              //  Algorithm:
              //  product = divisor multiplied by trial digit (n).
              //  Compare product and remainder.
              //  If product is greater than remainder:
              //    Subtract divisor from product, decrement trial digit.
              //  Subtract product from remainder.
              //  If product was less than remainder at the last compare:
              //    Compare new remainder and divisor.
              //    If remainder is greater than divisor:
              //      Subtract divisor from remainder, increment trial digit.

              if (n > 1) {

                // n may be > base only when base is 3.
                if (n >= base) n = base - 1;

                // product = divisor * trial digit.
                prod = multiply(yc, n, base);
                prodL = prod.length;
                remL = rem.length;

                // Compare product and remainder.
                // If product > remainder then trial digit n too high.
                // n is 1 too high about 5% of the time, and is not known to have
                // ever been more than 1 too high.
                while (compare(prod, rem, prodL, remL) == 1) {
                  n--;

                  // Subtract divisor from product.
                  subtract(prod, yL < prodL ? yz : yc, prodL, base);
                  prodL = prod.length;
                  cmp = 1;
                }
              } else {

                // n is 0 or 1, cmp is -1.
                // If n is 0, there is no need to compare yc and rem again below,
                // so change cmp to 1 to avoid it.
                // If n is 1, leave cmp as -1, so yc and rem are compared again.
                if (n == 0) {

                  // divisor < remainder, so n must be at least 1.
                  cmp = n = 1;
                }

                // product = divisor
                prod = yc.slice();
                prodL = prod.length;
              }

              if (prodL < remL) prod = [0].concat(prod);

              // Subtract product from remainder.
              subtract(rem, prod, remL, base);
              remL = rem.length;

               // If product was < remainder.
              if (cmp == -1) {

                // Compare divisor and new remainder.
                // If divisor < new remainder, subtract divisor from remainder.
                // Trial digit n too low.
                // n is 1 too low about 5% of the time, and very rarely 2 too low.
                while (compare(yc, rem, yL, remL) < 1) {
                  n++;

                  // Subtract divisor from remainder.
                  subtract(rem, yL < remL ? yz : yc, remL, base);
                  remL = rem.length;
                }
              }
            } else if (cmp === 0) {
              n++;
              rem = [0];
            } // else cmp === 1 and n will be 0

            // Add the next digit, n, to the result array.
            qc[i++] = n;

            // Update the remainder.
            if (rem[0]) {
              rem[remL++] = xc[xi] || 0;
            } else {
              rem = [xc[xi]];
              remL = 1;
            }
          } while ((xi++ < xL || rem[0] != null) && s--);

          more = rem[0] != null;

          // Leading zero?
          if (!qc[0]) qc.splice(0, 1);
        }

        if (base == BASE) {

          // To calculate q.e, first get the number of digits of qc[0].
          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);

          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);

        // Caller is convertBase.
        } else {
          q.e = e;
          q.r = +more;
        }

        return q;
      };
    })();


    /*
     * Return a string representing the value of BigNumber n in fixed-point or exponential
     * notation rounded to the specified decimal places or significant digits.
     *
     * n: a BigNumber.
     * i: the index of the last digit required (i.e. the digit that may be rounded up).
     * rm: the rounding mode.
     * id: 1 (toExponential) or 2 (toPrecision).
     */
    function format(n, i, rm, id) {
      var c0, e, ne, len, str;

      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);

      if (!n.c) return n.toString();

      c0 = n.c[0];
      ne = n.e;

      if (i == null) {
        str = coeffToString(n.c);
        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)
         ? toExponential(str, ne)
         : toFixedPoint(str, ne, '0');
      } else {
        n = round(new BigNumber(n), i, rm);

        // n.e may have changed if the value was rounded up.
        e = n.e;

        str = coeffToString(n.c);
        len = str.length;

        // toPrecision returns exponential notation if the number of significant digits
        // specified is less than the number of digits necessary to represent the integer
        // part of the value in fixed-point notation.

        // Exponential notation.
        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {

          // Append zeros?
          for (; len < i; str += '0', len++);
          str = toExponential(str, e);

        // Fixed-point notation.
        } else {
          i -= ne;
          str = toFixedPoint(str, e, '0');

          // Append zeros?
          if (e + 1 > len) {
            if (--i > 0) for (str += '.'; i--; str += '0');
          } else {
            i += e - len;
            if (i > 0) {
              if (e + 1 == len) str += '.';
              for (; i--; str += '0');
            }
          }
        }
      }

      return n.s < 0 && c0 ? '-' + str : str;
    }


    // Handle BigNumber.max and BigNumber.min.
    function maxOrMin(args, method) {
      var n,
        i = 1,
        m = new BigNumber(args[0]);

      for (; i < args.length; i++) {
        n = new BigNumber(args[i]);

        // If any number is NaN, return NaN.
        if (!n.s) {
          m = n;
          break;
        } else if (method.call(m, n)) {
          m = n;
        }
      }

      return m;
    }


    /*
     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
     * Called by minus, plus and times.
     */
    function normalise(n, c, e) {
      var i = 1,
        j = c.length;

       // Remove trailing zeros.
      for (; !c[--j]; c.pop());

      // Calculate the base 10 exponent. First get the number of digits of c[0].
      for (j = c[0]; j >= 10; j /= 10, i++);

      // Overflow?
      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {

        // Infinity.
        n.c = n.e = null;

      // Underflow?
      } else if (e < MIN_EXP) {

        // Zero.
        n.c = [n.e = 0];
      } else {
        n.e = e;
        n.c = c;
      }

      return n;
    }


    // Handle values that fail the validity test in BigNumber.
    parseNumeric = (function () {
      var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
        dotAfter = /^([^.]+)\.$/,
        dotBefore = /^\.([^.]+)$/,
        isInfinityOrNaN = /^-?(Infinity|NaN)$/,
        whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;

      return function (x, str, isNum, b) {
        var base,
          s = isNum ? str : str.replace(whitespaceOrPlus, '');

        // No exception on ±Infinity or NaN.
        if (isInfinityOrNaN.test(s)) {
          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
        } else {
          if (!isNum) {

            // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
            s = s.replace(basePrefix, function (m, p1, p2) {
              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
              return !b || b == base ? p1 : m;
            });

            if (b) {
              base = b;

              // E.g. '1.' to '1', '.1' to '0.1'
              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
            }

            if (str != s) return new BigNumber(s, base);
          }

          // '[BigNumber Error] Not a number: {n}'
          // '[BigNumber Error] Not a base {b} number: {n}'
          if (BigNumber.DEBUG) {
            throw Error
              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);
          }

          // NaN
          x.s = null;
        }

        x.c = x.e = null;
      }
    })();


    /*
     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
     * If r is truthy, it is known that there are more digits after the rounding digit.
     */
    function round(x, sd, rm, r) {
      var d, i, j, k, n, ni, rd,
        xc = x.c,
        pows10 = POWS_TEN;

      // if x is not Infinity or NaN...
      if (xc) {

        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
        // n is a base 1e14 number, the value of the element of array x.c containing rd.
        // ni is the index of n within x.c.
        // d is the number of digits of n.
        // i is the index of rd within n including leading zeros.
        // j is the actual index of rd within n (if < 0, rd is a leading zero).
        out: {

          // Get the number of digits of the first element of xc.
          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);
          i = sd - d;

          // If the rounding digit is in the first element of xc...
          if (i < 0) {
            i += LOG_BASE;
            j = sd;
            n = xc[ni = 0];

            // Get the rounding digit at index j of n.
            rd = n / pows10[d - j - 1] % 10 | 0;
          } else {
            ni = mathceil((i + 1) / LOG_BASE);

            if (ni >= xc.length) {

              if (r) {

                // Needed by sqrt.
                for (; xc.length <= ni; xc.push(0));
                n = rd = 0;
                d = 1;
                i %= LOG_BASE;
                j = i - LOG_BASE + 1;
              } else {
                break out;
              }
            } else {
              n = k = xc[ni];

              // Get the number of digits of n.
              for (d = 1; k >= 10; k /= 10, d++);

              // Get the index of rd within n.
              i %= LOG_BASE;

              // Get the index of rd within n, adjusted for leading zeros.
              // The number of leading zeros of n is given by LOG_BASE - d.
              j = i - LOG_BASE + d;

              // Get the rounding digit at index j of n.
              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
            }
          }

          r = r || sd < 0 ||

          // Are there any non-zero digits after the rounding digit?
          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);

          r = rm < 4
           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&

            // Check whether the digit to the left of the rounding digit is odd.
            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||
             rm == (x.s < 0 ? 8 : 7));

          if (sd < 1 || !xc[0]) {
            xc.length = 0;

            if (r) {

              // Convert sd to decimal places.
              sd -= x.e + 1;

              // 1, 0.1, 0.01, 0.001, 0.0001 etc.
              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
              x.e = -sd || 0;
            } else {

              // Zero.
              xc[0] = x.e = 0;
            }

            return x;
          }

          // Remove excess digits.
          if (i == 0) {
            xc.length = ni;
            k = 1;
            ni--;
          } else {
            xc.length = ni + 1;
            k = pows10[LOG_BASE - i];

            // E.g. 56700 becomes 56000 if 7 is the rounding digit.
            // j > 0 means i > number of leading zeros of n.
            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
          }

          // Round up?
          if (r) {

            for (; ;) {

              // If the digit to be rounded up is in the first element of xc...
              if (ni == 0) {

                // i will be the length of xc[0] before k is added.
                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);
                j = xc[0] += k;
                for (k = 1; j >= 10; j /= 10, k++);

                // if i != k the length has increased.
                if (i != k) {
                  x.e++;
                  if (xc[0] == BASE) xc[0] = 1;
                }

                break;
              } else {
                xc[ni] += k;
                if (xc[ni] != BASE) break;
                xc[ni--] = 0;
                k = 1;
              }
            }
          }

          // Remove trailing zeros.
          for (i = xc.length; xc[--i] === 0; xc.pop());
        }

        // Overflow? Infinity.
        if (x.e > MAX_EXP) {
          x.c = x.e = null;

        // Underflow? Zero.
        } else if (x.e < MIN_EXP) {
          x.c = [x.e = 0];
        }
      }

      return x;
    }


    function valueOf(n) {
      var str,
        e = n.e;

      if (e === null) return n.toString();

      str = coeffToString(n.c);

      str = e <= TO_EXP_NEG || e >= TO_EXP_POS
        ? toExponential(str, e)
        : toFixedPoint(str, e, '0');

      return n.s < 0 ? '-' + str : str;
    }


    // PROTOTYPE/INSTANCE METHODS


    /*
     * Return a new BigNumber whose value is the absolute value of this BigNumber.
     */
    P.absoluteValue = P.abs = function () {
      var x = new BigNumber(this);
      if (x.s < 0) x.s = 1;
      return x;
    };


    /*
     * Return
     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
     *   0 if they have the same value,
     *   or null if the value of either is NaN.
     */
    P.comparedTo = function (y, b) {
      return compare(this, new BigNumber(y, b));
    };


    /*
     * If dp is undefined or null or true or false, return the number of decimal places of the
     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     *
     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.decimalPlaces = P.dp = function (dp, rm) {
      var c, n, v,
        x = this;

      if (dp != null) {
        intCheck(dp, 0, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), dp + x.e + 1, rm);
      }

      if (!(c = x.c)) return null;
      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;

      // Subtract the number of trailing zeros of the last number.
      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);
      if (n < 0) n = 0;

      return n;
    };


    /*
     *  n / 0 = I
     *  n / N = N
     *  n / I = 0
     *  0 / n = 0
     *  0 / 0 = N
     *  0 / N = N
     *  0 / I = 0
     *  N / n = N
     *  N / 0 = N
     *  N / N = N
     *  N / I = N
     *  I / n = I
     *  I / 0 = I
     *  I / N = N
     *  I / I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.dividedBy = P.div = function (y, b) {
      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
    };


    /*
     * Return a new BigNumber whose value is the integer part of dividing the value of this
     * BigNumber by the value of BigNumber(y, b).
     */
    P.dividedToIntegerBy = P.idiv = function (y, b) {
      return div(this, new BigNumber(y, b), 0, 1);
    };


    /*
     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.
     *
     * If m is present, return the result modulo m.
     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.
     *
     * The modular power operation works efficiently when x, n, and m are integers, otherwise it
     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.
     *
     * n {number|string|BigNumber} The exponent. An integer.
     * [m] {number|string|BigNumber} The modulus.
     *
     * '[BigNumber Error] Exponent not an integer: {n}'
     */
    P.exponentiatedBy = P.pow = function (n, m) {
      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,
        x = this;

      n = new BigNumber(n);

      // Allow NaN and ±Infinity, but not other non-integers.
      if (n.c && !n.isInteger()) {
        throw Error
          (bignumberError + 'Exponent not an integer: ' + valueOf(n));
      }

      if (m != null) m = new BigNumber(m);

      // Exponent of MAX_SAFE_INTEGER is 15.
      nIsBig = n.e > 14;

      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.
      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {

        // The sign of the result of pow when x is negative depends on the evenness of n.
        // If +n overflows to ±Infinity, the evenness of n would be not be known.
        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
        return m ? y.mod(m) : y;
      }

      nIsNeg = n.s < 0;

      if (m) {

        // x % m returns NaN if abs(m) is zero, or m is NaN.
        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);

        isModExp = !nIsNeg && x.isInteger() && m.isInteger();

        if (isModExp) x = x.mod(m);

      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.
      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.
      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0
        // [1, 240000000]
        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7
        // [80000000000000]  [99999750000000]
        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {

        // If x is negative and n is odd, k = -0, else k = 0.
        k = x.s < 0 && isOdd(n) ? -0 : 0;

        // If x >= 1, k = ±Infinity.
        if (x.e > -1) k = 1 / k;

        // If n is negative return ±0, else return ±Infinity.
        return new BigNumber(nIsNeg ? 1 / k : k);

      } else if (POW_PRECISION) {

        // Truncating each coefficient array to a length of k after each multiplication
        // equates to truncating significant digits to POW_PRECISION + [28, 41],
        // i.e. there will be a minimum of 28 guard digits retained.
        k = mathceil(POW_PRECISION / LOG_BASE + 2);
      }

      if (nIsBig) {
        half = new BigNumber(0.5);
        if (nIsNeg) n.s = 1;
        nIsOdd = isOdd(n);
      } else {
        i = Math.abs(+valueOf(n));
        nIsOdd = i % 2;
      }

      y = new BigNumber(ONE);

      // Performs 54 loop iterations for n of 9007199254740991.
      for (; ;) {

        if (nIsOdd) {
          y = y.times(x);
          if (!y.c) break;

          if (k) {
            if (y.c.length > k) y.c.length = k;
          } else if (isModExp) {
            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));
          }
        }

        if (i) {
          i = mathfloor(i / 2);
          if (i === 0) break;
          nIsOdd = i % 2;
        } else {
          n = n.times(half);
          round(n, n.e + 1, 1);

          if (n.e > 14) {
            nIsOdd = isOdd(n);
          } else {
            i = +valueOf(n);
            if (i === 0) break;
            nIsOdd = i % 2;
          }
        }

        x = x.times(x);

        if (k) {
          if (x.c && x.c.length > k) x.c.length = k;
        } else if (isModExp) {
          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));
        }
      }

      if (isModExp) return y;
      if (nIsNeg) y = ONE.div(y);

      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer
     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'
     */
    P.integerValue = function (rm) {
      var n = new BigNumber(this);
      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);
      return round(n, n.e + 1, rm);
    };


    /*
     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isEqualTo = P.eq = function (y, b) {
      return compare(this, new BigNumber(y, b)) === 0;
    };


    /*
     * Return true if the value of this BigNumber is a finite number, otherwise return false.
     */
    P.isFinite = function () {
      return !!this.c;
    };


    /*
     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isGreaterThan = P.gt = function (y, b) {
      return compare(this, new BigNumber(y, b)) > 0;
    };


    /*
     * Return true if the value of this BigNumber is greater than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;

    };


    /*
     * Return true if the value of this BigNumber is an integer, otherwise return false.
     */
    P.isInteger = function () {
      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
    };


    /*
     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isLessThan = P.lt = function (y, b) {
      return compare(this, new BigNumber(y, b)) < 0;
    };


    /*
     * Return true if the value of this BigNumber is less than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isLessThanOrEqualTo = P.lte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
    };


    /*
     * Return true if the value of this BigNumber is NaN, otherwise return false.
     */
    P.isNaN = function () {
      return !this.s;
    };


    /*
     * Return true if the value of this BigNumber is negative, otherwise return false.
     */
    P.isNegative = function () {
      return this.s < 0;
    };


    /*
     * Return true if the value of this BigNumber is positive, otherwise return false.
     */
    P.isPositive = function () {
      return this.s > 0;
    };


    /*
     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.
     */
    P.isZero = function () {
      return !!this.c && this.c[0] == 0;
    };


    /*
     *  n - 0 = n
     *  n - N = N
     *  n - I = -I
     *  0 - n = -n
     *  0 - 0 = 0
     *  0 - N = N
     *  0 - I = -I
     *  N - n = N
     *  N - 0 = N
     *  N - N = N
     *  N - I = N
     *  I - n = I
     *  I - 0 = I
     *  I - N = N
     *  I - I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber minus the value of
     * BigNumber(y, b).
     */
    P.minus = function (y, b) {
      var i, j, t, xLTy,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
      if (a != b) {
        y.s = -b;
        return x.plus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Either Infinity?
        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

        // Either zero?
        if (!xc[0] || !yc[0]) {

          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :

           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
           ROUNDING_MODE == 3 ? -0 : 0);
        }
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Determine which is the bigger number.
      if (a = xe - ye) {

        if (xLTy = a < 0) {
          a = -a;
          t = xc;
        } else {
          ye = xe;
          t = yc;
        }

        t.reverse();

        // Prepend zeros to equalise exponents.
        for (b = a; b--; t.push(0));
        t.reverse();
      } else {

        // Exponents equal. Check digit by digit.
        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

        for (a = b = 0; b < j; b++) {

          if (xc[b] != yc[b]) {
            xLTy = xc[b] < yc[b];
            break;
          }
        }
      }

      // x < y? Point xc to the array of the bigger number.
      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;

      b = (j = yc.length) - (i = xc.length);

      // Append zeros to xc if shorter.
      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
      if (b > 0) for (; b--; xc[i++] = 0);
      b = BASE - 1;

      // Subtract yc from xc.
      for (; j > a;) {

        if (xc[--j] < yc[j]) {
          for (i = j; i && !xc[--i]; xc[i] = b);
          --xc[i];
          xc[j] += BASE;
        }

        xc[j] -= yc[j];
      }

      // Remove leading zeros and adjust exponent accordingly.
      for (; xc[0] == 0; xc.splice(0, 1), --ye);

      // Zero?
      if (!xc[0]) {

        // Following IEEE 754 (2008) 6.3,
        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
        y.s = ROUNDING_MODE == 3 ? -1 : 1;
        y.c = [y.e = 0];
        return y;
      }

      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
      // for finite x and y.
      return normalise(y, xc, ye);
    };


    /*
     *   n % 0 =  N
     *   n % N =  N
     *   n % I =  n
     *   0 % n =  0
     *  -0 % n = -0
     *   0 % 0 =  N
     *   0 % N =  N
     *   0 % I =  0
     *   N % n =  N
     *   N % 0 =  N
     *   N % N =  N
     *   N % I =  N
     *   I % n =  N
     *   I % 0 =  N
     *   I % N =  N
     *   I % I =  N
     *
     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
     * BigNumber(y, b). The result depends on the value of MODULO_MODE.
     */
    P.modulo = P.mod = function (y, b) {
      var q, s,
        x = this;

      y = new BigNumber(y, b);

      // Return NaN if x is Infinity or NaN, or y is NaN or zero.
      if (!x.c || !y.s || y.c && !y.c[0]) {
        return new BigNumber(NaN);

      // Return x if y is Infinity or x is zero.
      } else if (!y.c || x.c && !x.c[0]) {
        return new BigNumber(x);
      }

      if (MODULO_MODE == 9) {

        // Euclidian division: q = sign(y) * floor(x / abs(y))
        // r = x - qy    where  0 <= r < abs(y)
        s = y.s;
        y.s = 1;
        q = div(x, y, 0, 3);
        y.s = s;
        q.s *= s;
      } else {
        q = div(x, y, 0, MODULO_MODE);
      }

      y = x.minus(q.times(y));

      // To match JavaScript %, ensure sign of zero is sign of dividend.
      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;

      return y;
    };


    /*
     *  n * 0 = 0
     *  n * N = N
     *  n * I = I
     *  0 * n = 0
     *  0 * 0 = 0
     *  0 * N = N
     *  0 * I = N
     *  N * n = N
     *  N * 0 = N
     *  N * N = N
     *  N * I = N
     *  I * n = I
     *  I * 0 = N
     *  I * N = N
     *  I * I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value
     * of BigNumber(y, b).
     */
    P.multipliedBy = P.times = function (y, b) {
      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,
        base, sqrtBase,
        x = this,
        xc = x.c,
        yc = (y = new BigNumber(y, b)).c;

      // Either NaN, ±Infinity or ±0?
      if (!xc || !yc || !xc[0] || !yc[0]) {

        // Return NaN if either is NaN, or one is 0 and the other is Infinity.
        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
          y.c = y.e = y.s = null;
        } else {
          y.s *= x.s;

          // Return ±Infinity if either is ±Infinity.
          if (!xc || !yc) {
            y.c = y.e = null;

          // Return ±0 if either is ±0.
          } else {
            y.c = [0];
            y.e = 0;
          }
        }

        return y;
      }

      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
      y.s *= x.s;
      xcL = xc.length;
      ycL = yc.length;

      // Ensure xc points to longer array and xcL to its length.
      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

      // Initialise the result array with zeros.
      for (i = xcL + ycL, zc = []; i--; zc.push(0));

      base = BASE;
      sqrtBase = SQRT_BASE;

      for (i = ycL; --i >= 0;) {
        c = 0;
        ylo = yc[i] % sqrtBase;
        yhi = yc[i] / sqrtBase | 0;

        for (k = xcL, j = i + k; j > i;) {
          xlo = xc[--k] % sqrtBase;
          xhi = xc[k] / sqrtBase | 0;
          m = yhi * xlo + xhi * ylo;
          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;
          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
          zc[j--] = xlo % base;
        }

        zc[j] = c;
      }

      if (c) {
        ++e;
      } else {
        zc.splice(0, 1);
      }

      return normalise(y, zc, e);
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber negated,
     * i.e. multiplied by -1.
     */
    P.negated = function () {
      var x = new BigNumber(this);
      x.s = -x.s || null;
      return x;
    };


    /*
     *  n + 0 = n
     *  n + N = N
     *  n + I = I
     *  0 + n = n
     *  0 + 0 = 0
     *  0 + N = N
     *  0 + I = I
     *  N + n = N
     *  N + 0 = N
     *  N + N = N
     *  N + I = N
     *  I + n = I
     *  I + 0 = I
     *  I + N = N
     *  I + I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber plus the value of
     * BigNumber(y, b).
     */
    P.plus = function (y, b) {
      var t,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
       if (a != b) {
        y.s = -b;
        return x.minus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Return ±Infinity if either ±Infinity.
        if (!xc || !yc) return new BigNumber(a / 0);

        // Either zero?
        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
      if (a = xe - ye) {
        if (a > 0) {
          ye = xe;
          t = yc;
        } else {
          a = -a;
          t = xc;
        }

        t.reverse();
        for (; a--; t.push(0));
        t.reverse();
      }

      a = xc.length;
      b = yc.length;

      // Point xc to the longer array, and b to the shorter length.
      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.
      for (a = 0; b;) {
        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
      }

      if (a) {
        xc = [a].concat(xc);
        ++ye;
      }

      // No need to check for zero, as +x + +y != 0 && -x + -y != 0
      // ye = MAX_EXP + 1 possible
      return normalise(y, xc, ye);
    };


    /*
     * If sd is undefined or null or true or false, return the number of significant digits of
     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     * If sd is true include integer-part trailing zeros in the count.
     *
     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.
     *                     boolean: whether to count integer-part trailing zeros: true or false.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.precision = P.sd = function (sd, rm) {
      var c, n, v,
        x = this;

      if (sd != null && sd !== !!sd) {
        intCheck(sd, 1, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), sd, rm);
      }

      if (!(c = x.c)) return null;
      v = c.length - 1;
      n = v * LOG_BASE + 1;

      if (v = c[v]) {

        // Subtract the number of trailing zeros of the last element.
        for (; v % 10 == 0; v /= 10, n--);

        // Add the number of digits of the first element.
        for (v = c[0]; v >= 10; v /= 10, n++);
      }

      if (sd && x.e + 1 > n) n = x.e + 1;

      return n;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
     *
     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'
     */
    P.shiftedBy = function (k) {
      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
      return this.times('1e' + k);
    };


    /*
     *  sqrt(-n) =  N
     *  sqrt(N) =  N
     *  sqrt(-I) =  N
     *  sqrt(I) =  I
     *  sqrt(0) =  0
     *  sqrt(-0) = -0
     *
     * Return a new BigNumber whose value is the square root of the value of this BigNumber,
     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.squareRoot = P.sqrt = function () {
      var m, n, r, rep, t,
        x = this,
        c = x.c,
        s = x.s,
        e = x.e,
        dp = DECIMAL_PLACES + 4,
        half = new BigNumber('0.5');

      // Negative/NaN/Infinity/zero?
      if (s !== 1 || !c || !c[0]) {
        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
      }

      // Initial estimate.
      s = Math.sqrt(+valueOf(x));

      // Math.sqrt underflow/overflow?
      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
      if (s == 0 || s == 1 / 0) {
        n = coeffToString(c);
        if ((n.length + e) % 2 == 0) n += '0';
        s = Math.sqrt(+n);
        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

        if (s == 1 / 0) {
          n = '5e' + e;
        } else {
          n = s.toExponential();
          n = n.slice(0, n.indexOf('e') + 1) + e;
        }

        r = new BigNumber(n);
      } else {
        r = new BigNumber(s + '');
      }

      // Check for zero.
      // r could be zero if MIN_EXP is changed after the this value was created.
      // This would cause a division by zero (x/t) and hence Infinity below, which would cause
      // coeffToString to throw.
      if (r.c[0]) {
        e = r.e;
        s = e + dp;
        if (s < 3) s = 0;

        // Newton-Raphson iteration.
        for (; ;) {
          t = r;
          r = half.times(t.plus(div(x, t, dp, 1)));

          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {

            // The exponent of r may here be one less than the final result exponent,
            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
            // are indexed correctly.
            if (r.e < e) --s;
            n = n.slice(s - 3, s + 1);

            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
            // iteration.
            if (n == '9999' || !rep && n == '4999') {

              // On the first iteration only, check to see if rounding up gives the
              // exact result as the nines may infinitely repeat.
              if (!rep) {
                round(t, t.e + DECIMAL_PLACES + 2, 0);

                if (t.times(t).eq(x)) {
                  r = t;
                  break;
                }
              }

              dp += 4;
              s += 4;
              rep = 1;
            } else {

              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
              // result. If not, then there are further digits and m will be truthy.
              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

                // Truncate to the first rounding digit.
                round(r, r.e + DECIMAL_PLACES + 2, 1);
                m = !r.times(r).eq(x);
              }

              break;
            }
          }
        }
      }

      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
    };


    /*
     * Return a string representing the value of this BigNumber in exponential notation and
     * rounded using ROUNDING_MODE to dp fixed decimal places.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toExponential = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp++;
      }
      return format(this, dp, rm, 1);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounding
     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
     * but e.g. (-0.00001).toFixed(0) is '-0'.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toFixed = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp = dp + this.e + 1;
      }
      return format(this, dp, rm);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounded
     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
     * of the format or FORMAT object (see BigNumber.set).
     *
     * The formatting object may contain some or all of the properties shown below.
     *
     * FORMAT = {
     *   prefix: '',
     *   groupSize: 3,
     *   secondaryGroupSize: 0,
     *   groupSeparator: ',',
     *   decimalSeparator: '.',
     *   fractionGroupSize: 0,
     *   fractionGroupSeparator: '\xA0',      // non-breaking space
     *   suffix: ''
     * };
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     * [format] {object} Formatting options. See FORMAT pbject above.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     * '[BigNumber Error] Argument not an object: {format}'
     */
    P.toFormat = function (dp, rm, format) {
      var str,
        x = this;

      if (format == null) {
        if (dp != null && rm && typeof rm == 'object') {
          format = rm;
          rm = null;
        } else if (dp && typeof dp == 'object') {
          format = dp;
          dp = rm = null;
        } else {
          format = FORMAT;
        }
      } else if (typeof format != 'object') {
        throw Error
          (bignumberError + 'Argument not an object: ' + format);
      }

      str = x.toFixed(dp, rm);

      if (x.c) {
        var i,
          arr = str.split('.'),
          g1 = +format.groupSize,
          g2 = +format.secondaryGroupSize,
          groupSeparator = format.groupSeparator || '',
          intPart = arr[0],
          fractionPart = arr[1],
          isNeg = x.s < 0,
          intDigits = isNeg ? intPart.slice(1) : intPart,
          len = intDigits.length;

        if (g2) i = g1, g1 = g2, g2 = i, len -= i;

        if (g1 > 0 && len > 0) {
          i = len % g1 || g1;
          intPart = intDigits.substr(0, i);
          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);
          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
          if (isNeg) intPart = '-' + intPart;
        }

        str = fractionPart
         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)
          ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'),
           '$&' + (format.fractionGroupSeparator || ''))
          : fractionPart)
         : intPart;
      }

      return (format.prefix || '') + str + (format.suffix || '');
    };


    /*
     * Return an array of two BigNumbers representing the value of this BigNumber as a simple
     * fraction with an integer numerator and an integer denominator.
     * The denominator will be a positive non-zero value less than or equal to the specified
     * maximum denominator. If a maximum denominator is not specified, the denominator will be
     * the lowest value necessary to represent the number exactly.
     *
     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.
     *
     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'
     */
    P.toFraction = function (md) {
      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,
        x = this,
        xc = x.c;

      if (md != null) {
        n = new BigNumber(md);

        // Throw if md is less than one or is not an integer, unless it is Infinity.
        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
          throw Error
            (bignumberError + 'Argument ' +
              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
        }
      }

      if (!xc) return new BigNumber(x);

      d = new BigNumber(ONE);
      n1 = d0 = new BigNumber(ONE);
      d1 = n0 = new BigNumber(ONE);
      s = coeffToString(xc);

      // Determine initial denominator.
      // d is a power of 10 and the minimum max denominator that specifies the value exactly.
      e = d.e = s.length - x.e - 1;
      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;

      exp = MAX_EXP;
      MAX_EXP = 1 / 0;
      n = new BigNumber(s);

      // n0 = d1 = 0
      n0.c[0] = 0;

      for (; ;)  {
        q = div(n, d, 0, 1);
        d2 = d0.plus(q.times(d1));
        if (d2.comparedTo(md) == 1) break;
        d0 = d1;
        d1 = d2;
        n1 = n0.plus(q.times(d2 = n1));
        n0 = d2;
        d = n.minus(q.times(d2 = d));
        n = d2;
      }

      d2 = div(md.minus(d0), d1, 0, 1);
      n0 = n0.plus(d2.times(n1));
      d0 = d0.plus(d2.times(d1));
      n0.s = n1.s = x.s;
      e = e * 2;

      // Determine which fraction is closer to x, n0/d0 or n1/d1
      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(
          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];

      MAX_EXP = exp;

      return r;
    };


    /*
     * Return the value of this BigNumber converted to a number primitive.
     */
    P.toNumber = function () {
      return +valueOf(this);
    };


    /*
     * Return a string representing the value of this BigNumber rounded to sd significant digits
     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
     * necessary to represent the integer part of the value in fixed-point notation, then use
     * exponential notation.
     *
     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.toPrecision = function (sd, rm) {
      if (sd != null) intCheck(sd, 1, MAX);
      return format(this, sd, rm, 2);
    };


    /*
     * Return a string representing the value of this BigNumber in base b, or base 10 if b is
     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
     * TO_EXP_NEG, return exponential notation.
     *
     * [b] {number} Integer, 2 to ALPHABET.length inclusive.
     *
     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
     */
    P.toString = function (b) {
      var str,
        n = this,
        s = n.s,
        e = n.e;

      // Infinity or NaN?
      if (e === null) {
        if (s) {
          str = 'Infinity';
          if (s < 0) str = '-' + str;
        } else {
          str = 'NaN';
        }
      } else {
        if (b == null) {
          str = e <= TO_EXP_NEG || e >= TO_EXP_POS
           ? toExponential(coeffToString(n.c), e)
           : toFixedPoint(coeffToString(n.c), e, '0');
        } else if (b === 10 && alphabetHasNormalDecimalDigits) {
          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
          str = toFixedPoint(coeffToString(n.c), n.e, '0');
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');
          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
        }

        if (s < 0 && n.c[0]) str = '-' + str;
      }

      return str;
    };


    /*
     * Return as toString, but do not accept a base argument, and include the minus sign for
     * negative zero.
     */
    P.valueOf = P.toJSON = function () {
      return valueOf(this);
    };


    P._isBigNumber = true;

    if (configObject != null) BigNumber.set(configObject);

    return BigNumber;
  }


  // PRIVATE HELPER FUNCTIONS

  // These functions don't need access to variables,
  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.


  function bitFloor(n) {
    var i = n | 0;
    return n > 0 || n === i ? i : i - 1;
  }


  // Return a coefficient array as a string of base 10 digits.
  function coeffToString(a) {
    var s, z,
      i = 1,
      j = a.length,
      r = a[0] + '';

    for (; i < j;) {
      s = a[i++] + '';
      z = LOG_BASE - s.length;
      for (; z--; s = '0' + s);
      r += s;
    }

    // Determine trailing zeros.
    for (j = r.length; r.charCodeAt(--j) === 48;);

    return r.slice(0, j + 1 || 1);
  }


  // Compare the value of BigNumbers x and y.
  function compare(x, y) {
    var a, b,
      xc = x.c,
      yc = y.c,
      i = x.s,
      j = y.s,
      k = x.e,
      l = y.e;

    // Either NaN?
    if (!i || !j) return null;

    a = xc && !xc[0];
    b = yc && !yc[0];

    // Either zero?
    if (a || b) return a ? b ? 0 : -j : i;

    // Signs differ?
    if (i != j) return i;

    a = i < 0;
    b = k == l;

    // Either Infinity?
    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;

    // Compare exponents.
    if (!b) return k > l ^ a ? 1 : -1;

    j = (k = xc.length) < (l = yc.length) ? k : l;

    // Compare digit by digit.
    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;

    // Compare lengths.
    return k == l ? 0 : k > l ^ a ? 1 : -1;
  }


  /*
   * Check that n is a primitive number, an integer, and in range, otherwise throw.
   */
  function intCheck(n, min, max, name) {
    if (n < min || n > max || n !== mathfloor(n)) {
      throw Error
       (bignumberError + (name || 'Argument') + (typeof n == 'number'
         ? n < min || n > max ? ' out of range: ' : ' not an integer: '
         : ' not a primitive number: ') + String(n));
    }
  }


  // Assumes finite n.
  function isOdd(n) {
    var k = n.c.length - 1;
    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
  }


  function toExponential(str, e) {
    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +
     (e < 0 ? 'e' : 'e+') + e;
  }


  function toFixedPoint(str, e, z) {
    var len, zs;

    // Negative exponent?
    if (e < 0) {

      // Prepend zeros.
      for (zs = z + '.'; ++e; zs += z);
      str = zs + str;

    // Positive exponent
    } else {
      len = str.length;

      // Append zeros.
      if (++e > len) {
        for (zs = z, e -= len; --e; zs += z);
        str += zs;
      } else if (e < len) {
        str = str.slice(0, e) + '.' + str.slice(e);
      }
    }

    return str;
  }


  // EXPORT


  BigNumber = clone();
  BigNumber['default'] = BigNumber.BigNumber = BigNumber;

  // AMD.
  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return BigNumber; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

  // Node.js and other environments that support module.exports.
  } else if (typeof module != 'undefined' && module.exports) {
    module.exports = BigNumber;

  // Browser.
  } else {
    if (!globalObject) {
      globalObject = typeof self != 'undefined' && self ? self : window;
    }

    globalObject.BigNumber = BigNumber;
  }
})(this);


/***/ }),
/* 157 */
/***/ (function(module, exports) {

var hasOwnProperty = Object.prototype.hasOwnProperty;

function transformEntryEqual(a, b) {
  for (var k in a) {
    if (hasOwnProperty.call(a, k)) {
      return a[k] === b[k];
    }
  }
  return false;
}

function transformEqual(a, b) {
  if ((!a && !b) || (a === b)) {
    return true;
  }
  if (!a !== !b) {
    return false;
  }
  if (a.length !== b.length) {
    return false;
  }
  for (var i = 0; i < a.length; i++) {
    if (!transformEntryEqual(a[i], b[i])) {
      return false;
    }
  }
  return true;
}

function shallowObjectEquals(a, b) {
  var k;
  var i = 0;
  var j = 0;
  for (k in a) {
    if (hasOwnProperty.call(a, k)) {
      switch (k) {
        case 'transform':
          if (!transformEqual(a[k], b[k])) {
            return false;
          }
          break;
        case 'shadowOffset':
          if (!shallowObjectEquals(a[k], b[k])) {
            return false;
          }
          break;
        default:
          if (a[k] !== b[k]) {
            return false;
          }
          break;
      }
      i++;
    }
  }
  for (k in b) {
    if (hasOwnProperty.call(b, k)) {
      j++;
    }
  }
  return i === j;
}

function styleEqual(a, b) {
  if ((!a && !b) || (a === b)) {
    return true;
  }
  if (!a !== !b) {
    return false;
  }
  switch (typeof a) {
    case 'object':
      if (a instanceof Array) {
        for (var i = 0; i < a.length; i++) {
          if (!styleEqual(a[i], b[i])) {
            return false;
          }
        }
        return a.length === b.length;
      } else {
        return shallowObjectEquals(a, b);
      }
      break;
    case 'number':
    default:
      return a === b;
  }
}

module.exports = styleEqual;


/***/ })
/******/ ]);
});