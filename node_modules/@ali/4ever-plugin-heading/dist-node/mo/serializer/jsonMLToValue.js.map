{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToValue.ts"],"names":["tagToFactory","h1","Heading","Heading1","create","h2","Heading2","h3","Heading3","h4","Heading4","h5","Heading5","h6","Heading6","match","node","tag","convert","data","ind","firstline","firstLine","list","hasInvalidLevel","level","test","String","factory","Paragraph"],"mappings":";;;;;;;;;AACA;;AACA;;AAKA;;AAEA,MAAMA,YAAiB,GAAG;AACxBC,EAAAA,EAAE,EAAEC,gBAAQC,QAAR,CAAiBC,MADG;AAExBC,EAAAA,EAAE,EAAEH,gBAAQI,QAAR,CAAiBF,MAFG;AAGxBG,EAAAA,EAAE,EAAEL,gBAAQM,QAAR,CAAiBJ,MAHG;AAIxBK,EAAAA,EAAE,EAAEP,gBAAQQ,QAAR,CAAiBN,MAJG;AAKxBO,EAAAA,EAAE,EAAET,gBAAQU,QAAR,CAAiBR,MALG;AAMxBS,EAAAA,EAAE,EAAEX,gBAAQY,QAAR,CAAiBV;AANG,CAA1B;eASe;AACbW,EAAAA,KAAK,EAAGC,IAAD,IAA2B;AAChC,UAAMC,GAAG,GAAG,2BAAWD,IAAX,CAAZ;AACA,WAAOhB,YAAY,CAACiB,GAAD,CAAnB;AACD,GAJY;AAMbC,EAAAA,OAAO,EAAGF,IAAD,IAAyB;AAChC,UAAMG,IAAmB,GAAG,8BAAcH,IAAd,KAAuB,EAAnD;;AACA,QAAIG,IAAI,CAACC,GAAL,IAAY,OAAQD,IAAI,CAACC,GAAN,CAAkBC,SAAzB,KAAuC,QAAvD,EAAiE;AAC/DF,MAAAA,IAAI,CAACC,GAAL,CAASE,SAAT,GAAsBH,IAAI,CAACC,GAAN,CAAkBC,SAAvC;AACA,aAAQF,IAAI,CAACC,GAAN,CAAkBC,SAAzB;AACD,KAL+B,CAMhC;;;AACA,QAAIF,IAAI,CAACI,IAAT,EAAe;AACb,YAAMC,eAAe,GAAID,IAAD,IAAe;AACrC,cAAM;AAAEE,UAAAA;AAAF,YAAYF,IAAlB;AACA,eAAO,CAAC,MAAMG,IAAN,CAAWC,MAAM,CAACF,KAAD,CAAjB,CAAD,IAA8BA,KAAK,GAAG,CAA7C;AACD,OAHD;;AAIA,UAAID,eAAe,CAACL,IAAI,CAACI,IAAN,CAAnB,EAAgC;AAC9BJ,QAAAA,IAAI,CAACI,IAAL,CAAUE,KAAV,GAAkB,CAAlB;AACD;AACF;;AACD,UAAMG,OAAO,GAAG5B,YAAY,CAAC,2BAAWgB,IAAX,CAAD,CAAZ,IAAkCa,+BAAUzB,MAA5D;;AACA,WAAOwB,OAAO,CAAC;AAAET,MAAAA;AAAF,KAAD,CAAd;AACD;AAxBY,C","sourcesContent":["import { Block } from '@ali/4ever-cangjie';\nimport { Paragraph, ParagraphData } from '@ali/4ever-plugin-paragraph';\nimport {\n  JsonML,\n  getTagName,\n  getAttributes,\n} from '@ali/4ever-utils';\nimport Heading from '../models';\n\nconst tagToFactory: any = {\n  h1: Heading.Heading1.create,\n  h2: Heading.Heading2.create,\n  h3: Heading.Heading3.create,\n  h4: Heading.Heading4.create,\n  h5: Heading.Heading5.create,\n  h6: Heading.Heading6.create,\n};\n\nexport default {\n  match: (node: JsonML): boolean => {\n    const tag = getTagName(node);\n    return tagToFactory[tag];\n  },\n\n  convert: (node: JsonML): Block => {\n    const data: ParagraphData = getAttributes(node) || {};\n    if (data.ind && typeof (data.ind as any).firstline === 'number') {\n      data.ind.firstLine = (data.ind as any).firstline;\n      delete (data.ind as any).firstline;\n    }\n    // 序列化时对不合法 level 进行矫正\n    if (data.list) {\n      const hasInvalidLevel = (list: any) => {\n        const { level } = list;\n        return !/\\d/g.test(String(level)) || level < 0;\n      };\n      if (hasInvalidLevel(data.list)) {\n        data.list.level = 0;\n      }\n    }\n    const factory = tagToFactory[getTagName(node)] || Paragraph.create;\n    return factory({ data });\n  },\n};\n"],"file":"jsonMLToValue.js"}