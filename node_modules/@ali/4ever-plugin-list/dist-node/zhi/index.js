"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = require("./styledComponents");

var _everPluginParagraph = require("@ali/4ever-plugin-paragraph");

var _mo = _interopRequireDefault(require("../mo"));

var _createListItem = _interopRequireDefault(require("./createListItem"));

var _utils = require("../utils");

const _createElement = /*#__PURE__*/React.createElement;
const Paragraph = (0, _createListItem.default)(_everPluginParagraph.ReadParagraph);

function createListPlugin(config) {
  const listConfig = config.list || {};
  const {
    getListItemOrder
  } = listConfig;
  return { ...(0, _mo.default)({}),

    renderEditable(_, controller, next) {
      return /*#__PURE__*/_createElement(_utils.ListSymbolWarmupWrapper, {
        controller: controller
      }, next());
    },

    injectToNode: (0, _utils.createInjectToNode)(listConfig),
    getNodeStyle: _utils.getNodeStyle,
    queries: {
      // list 和 paragraph 的 node.type 相同，提供 query 给 paragraph 渲染
      renderParagraph: (_, props) => {
        const {
          node
        } = props;

        if (!node.data?.list) {
          return null;
        }

        const {
          controller,
          attributes,
          children,
          visible
        } = props;
        const Component = (0, _styledComponents.styledComponents)(node.type);
        return /*#__PURE__*/_createElement(Paragraph, (0, _extends2.default)({}, attributes, {
          controller: controller,
          Component: Component,
          document: controller.value.document,
          getListItemOrder: getListItemOrder,
          node: node,
          step: node.data.step || '',
          visible: visible
        }), children());
      }
    }
  };
}

var _default = createListPlugin;
exports.default = _default;
//# sourceMappingURL=index.js.map