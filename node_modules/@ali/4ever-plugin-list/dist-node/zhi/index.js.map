{"version":3,"sources":["../../../src/zhi/index.tsx"],"names":["Paragraph","ReadParagraph","createListPlugin","config","listConfig","list","getListItemOrder","renderEditable","_","controller","next","injectToNode","getNodeStyle","queries","renderParagraph","props","node","data","attributes","children","visible","Component","type","value","document","step"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;uBAL4B,a;AAO5B,MAAMA,SAAS,GAAG,6BAAeC,kCAAf,CAAlB;;AAMA,SAASC,gBAAT,CAA0BC,MAA1B,EAAiE;AAC/D,QAAMC,UAAU,GAAGD,MAAM,CAACE,IAAP,IAAe,EAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAuBF,UAA7B;AAEA,SAAO,EACL,GAAG,iBAAU,EAAV,CADE;;AAELG,IAAAA,cAAc,CAACC,CAAD,EAAIC,UAAJ,EAA4BC,IAA5B,EAAkC;AAC9C,0BACE,eAAC,8BAAD;AAAyB,QAAA,UAAU,EAAED;AAArC,SACGC,IAAI,EADP,CADF;AAKD,KARI;;AASLC,IAAAA,YAAY,EAAE,+BAAmBP,UAAnB,CATT;AAULQ,IAAAA,YAAY,EAAZA,mBAVK;AAWLC,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,eAAe,EAAE,CAACN,CAAD,EAAIO,KAAJ,KAAsC;AACrD,cAAM;AAAEC,UAAAA;AAAF,YAAWD,KAAjB;;AACA,YAAI,CAACC,IAAI,CAACC,IAAL,EAAWZ,IAAhB,EAAsB;AACpB,iBAAO,IAAP;AACD;;AACD,cAAM;AAAEI,UAAAA,UAAF;AAAcS,UAAAA,UAAd;AAA0BC,UAAAA,QAA1B;AAAoCC,UAAAA;AAApC,YAAgDL,KAAtD;AACA,cAAMM,SAAS,GAAG,wCAAiBL,IAAI,CAACM,IAAtB,CAAlB;AACA,4BACE,eAAC,SAAD,6BACMJ,UADN;AAEE,UAAA,UAAU,EAAET,UAFd;AAGE,UAAA,SAAS,EAAEY,SAHb;AAIE,UAAA,QAAQ,EAAEZ,UAAU,CAACc,KAAX,CAAiBC,QAJ7B;AAKE,UAAA,gBAAgB,EAAElB,gBALpB;AAME,UAAA,IAAI,EAAEU,IANR;AAOE,UAAA,IAAI,EAAEA,IAAI,CAACC,IAAL,CAAUQ,IAAV,IAAkB,EAP1B;AAQE,UAAA,OAAO,EAAEL;AARX,YAUGD,QAAQ,EAVX,CADF;AAcD;AAvBM;AAXJ,GAAP;AAqCD;;eAEcjB,gB","sourcesContent":["import * as React from 'react';\nimport { Controller, Document, Block, RenderNodeProps, Plugin } from '@ali/4ever-cangjie';\nimport { styledComponents, TypeToComponentKeys } from './styledComponents';\nimport { ReadParagraph } from '@ali/4ever-plugin-paragraph';\nimport moFactory from '../mo';\nimport createListItem from './createListItem';\nimport { ListSymbolWarmupWrapper, createInjectToNode, getNodeStyle } from '../utils';\n\nconst Paragraph = createListItem(ReadParagraph);\n\nexport interface ListConfig {\n  getListItemOrder?: (document: Document, node: Block) => number;\n}\n\nfunction createListPlugin(config: { list?: ListConfig }): Plugin {\n  const listConfig = config.list || {};\n  const { getListItemOrder } = listConfig;\n\n  return {\n    ...moFactory({}),\n    renderEditable(_, controller: Controller, next) {\n      return (\n        <ListSymbolWarmupWrapper controller={controller}>\n          {next()}\n        </ListSymbolWarmupWrapper>\n      );\n    },\n    injectToNode: createInjectToNode(listConfig),\n    getNodeStyle,\n    queries: {\n      // list 和 paragraph 的 node.type 相同，提供 query 给 paragraph 渲染\n      renderParagraph: (_, props: RenderNodeProps<Block>) => {\n        const { node } = props;\n        if (!node.data?.list) {\n          return null;\n        }\n        const { controller, attributes, children, visible } = props;\n        const Component = styledComponents(node.type as TypeToComponentKeys);\n        return (\n          <Paragraph\n            {...attributes}\n            controller={controller}\n            Component={Component}\n            document={controller.value.document}\n            getListItemOrder={getListItemOrder}\n            node={node}\n            step={node.data.step || ''}\n            visible={visible}\n          >\n            {children()}\n          </Paragraph>\n        );\n      },\n    },\n  };\n}\n\nexport default createListPlugin;\n"],"file":"index.js"}