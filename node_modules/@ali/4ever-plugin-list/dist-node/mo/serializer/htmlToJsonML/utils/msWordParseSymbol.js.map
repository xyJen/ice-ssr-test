{"version":3,"sources":["../../../../../../src/mo/serializer/htmlToJsonML/utils/msWordParseSymbol.ts"],"names":["CHINESE_LIST","ARABIC_LIST","ROMAN_LIST","decsMap","msWordParseSymbol","symbol","numId","level","isOrdered","start","symbol_text_microsoft","symbol_type_miscrosoft","length","includes","DEFAULT_NUMBER_LIST_ARRAY","DEFAULT_BULLET_LIST_ARRAY","end","format","text","type","pointNum","match","symContent","slice","toLowerCase","LETTER_LIST"],"mappings":"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","sourcesContent":["import { arabic2Roma, LETTER_LIST } from '../../../../utils/transformNumber';\nimport {\n  DEFAULT_BULLET_LIST_ARRAY,\n  DEFAULT_NUMBER_LIST_ARRAY,\n  symbol_text_microsoft,\n  symbol_type_miscrosoft,\n} from '../../../../utils/listStyleMapping';\n \nconst CHINESE_LIST = '零一二三四五六七八九十百千万亿';\nconst ARABIC_LIST = '123456789';\nconst ROMAN_LIST = 'IVXLCDM';\nconst decsMap = {\n  1: '%1.',\n  2: '%1.%2',\n  0: '%1.%2.%3',\n};\n\nexport default function msWordParseSymbol(\n  symbol: string,\n  numId: number,\n  level: number,\n  isOrdered: boolean,\n) {\n  let start = symbol[0];\n  if (symbol_text_microsoft[symbol]) {\n    return [\n      'bullet',\n      symbol_text_microsoft[symbol],\n      symbol_type_miscrosoft[symbol],\n    ];\n  }\n  if (symbol.length === 1) {\n    if (ARABIC_LIST.includes(start)) {\n      return ['decimal', '%1.', DEFAULT_NUMBER_LIST_ARRAY[2]];\n    }\n    return ['bullet', '\\u25cf', DEFAULT_BULLET_LIST_ARRAY[0]];\n  }\n  const end = symbol[symbol.length - 1];\n  let format = 'decimal';\n  let text = '%1.';\n  let type = '';\n  const pointNum = symbol.match(/\\./g)?.length;\n  if (end === '.' && pointNum === 1) {\n    const symContent = symbol.slice(0, symbol.length - 1);\n    if (\n      ARABIC_LIST.includes(start) &&\n      arabic2Roma(numId, 'lower') === symContent\n    ) {\n      format = 'decimal';\n      type = DEFAULT_NUMBER_LIST_ARRAY[0];\n    } else if (\n      ROMAN_LIST.includes(start) &&\n      arabic2Roma(numId, 'upper') === symContent\n    ) {\n      format = 'upperRoman';\n      type = DEFAULT_NUMBER_LIST_ARRAY[4];\n    } else if (ROMAN_LIST.toLowerCase().includes(start)) {\n      format = 'lowerRoman';\n      type = DEFAULT_NUMBER_LIST_ARRAY[0];\n    } else if (LETTER_LIST.includes(start)) {\n      format = 'upperLetter';\n      type = DEFAULT_NUMBER_LIST_ARRAY[3];\n    } else if (LETTER_LIST.toLowerCase().includes(start)) {\n      format = 'lowerLetter';\n      type = DEFAULT_NUMBER_LIST_ARRAY[8];\n    }\n  } else if (\n    (start !== '(' && end === ')') ||\n    (start !== '（' && end === '）')\n  ) {\n    if (ARABIC_LIST.includes(start)) {\n      format = 'decimal';\n      type = DEFAULT_NUMBER_LIST_ARRAY[1];\n    } else if (LETTER_LIST.includes(start)) {\n      format = 'upperLetter';\n      type = DEFAULT_NUMBER_LIST_ARRAY[3];\n    } else if (LETTER_LIST.toLowerCase().includes(start)) {\n      format = 'lowerLetter';\n      type = DEFAULT_NUMBER_LIST_ARRAY[10];\n    }\n    text = '%1)';\n  } else if (\n    (start === '(' && end === ')') ||\n    (start === '（' && end === '）')\n  ) {\n    const symContent = symbol.slice(1, symbol.length - 1);\n    start = symContent[0];\n    if (ARABIC_LIST.includes(start)) {\n      format = 'decimal';\n      type = DEFAULT_NUMBER_LIST_ARRAY[9];\n    } else if (CHINESE_LIST.includes(start)) {\n      format = 'chineseCountingThousand';\n      type = DEFAULT_NUMBER_LIST_ARRAY[12];\n    }\n    text = '(%1)';\n  } else if (end === '、') {\n    if (CHINESE_LIST.includes(start)) {\n      format = 'chineseCountingThousand';\n      type = DEFAULT_NUMBER_LIST_ARRAY[13];\n    }\n    text = '%1、';\n  } else if (symbol.includes('.')) {\n    if (ARABIC_LIST.includes(start)) {\n      return ['decimal', decsMap[level % 3], DEFAULT_NUMBER_LIST_ARRAY[2]];\n    }\n  } else if (isOrdered !== null) {\n    format = 'bullet';\n    text = '\\u25cf';\n    type = DEFAULT_BULLET_LIST_ARRAY[0];\n  }\n  return [format, text, type];\n}\n"],"file":"msWordParseSymbol.js"}