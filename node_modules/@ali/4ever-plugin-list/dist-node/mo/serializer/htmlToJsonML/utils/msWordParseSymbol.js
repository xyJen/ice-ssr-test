"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = msWordParseSymbol;

var _transformNumber = require("../../../../utils/transformNumber");

var _listStyleMapping = require("../../../../utils/listStyleMapping");

const CHINESE_LIST = '零一二三四五六七八九十百千万亿';
const ARABIC_LIST = '123456789';
const ROMAN_LIST = 'IVXLCDM';
const decsMap = {
  1: '%1.',
  2: '%1.%2',
  0: '%1.%2.%3'
};

function msWordParseSymbol(symbol, numId, level, isOrdered) {
  let start = symbol[0];

  if (_listStyleMapping.symbol_text_microsoft[symbol]) {
    return ['bullet', _listStyleMapping.symbol_text_microsoft[symbol], _listStyleMapping.symbol_type_miscrosoft[symbol]];
  }

  if (symbol.length === 1) {
    if (ARABIC_LIST.includes(start)) {
      return ['decimal', '%1.', _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[2]];
    }

    return ['bullet', '\u25cf', _listStyleMapping.DEFAULT_BULLET_LIST_ARRAY[0]];
  }

  const end = symbol[symbol.length - 1];
  let format = 'decimal';
  let text = '%1.';
  let type = '';
  const pointNum = symbol.match(/\./g)?.length;

  if (end === '.' && pointNum === 1) {
    const symContent = symbol.slice(0, symbol.length - 1);

    if (ARABIC_LIST.includes(start) && (0, _transformNumber.arabic2Roma)(numId, 'lower') === symContent) {
      format = 'decimal';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[0];
    } else if (ROMAN_LIST.includes(start) && (0, _transformNumber.arabic2Roma)(numId, 'upper') === symContent) {
      format = 'upperRoman';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[4];
    } else if (ROMAN_LIST.toLowerCase().includes(start)) {
      format = 'lowerRoman';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[0];
    } else if (_transformNumber.LETTER_LIST.includes(start)) {
      format = 'upperLetter';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[3];
    } else if (_transformNumber.LETTER_LIST.toLowerCase().includes(start)) {
      format = 'lowerLetter';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[8];
    }
  } else if (start !== '(' && end === ')' || start !== '（' && end === '）') {
    if (ARABIC_LIST.includes(start)) {
      format = 'decimal';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[1];
    } else if (_transformNumber.LETTER_LIST.includes(start)) {
      format = 'upperLetter';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[3];
    } else if (_transformNumber.LETTER_LIST.toLowerCase().includes(start)) {
      format = 'lowerLetter';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[10];
    }

    text = '%1)';
  } else if (start === '(' && end === ')' || start === '（' && end === '）') {
    const symContent = symbol.slice(1, symbol.length - 1);
    start = symContent[0];

    if (ARABIC_LIST.includes(start)) {
      format = 'decimal';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[9];
    } else if (CHINESE_LIST.includes(start)) {
      format = 'chineseCountingThousand';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[12];
    }

    text = '(%1)';
  } else if (end === '、') {
    if (CHINESE_LIST.includes(start)) {
      format = 'chineseCountingThousand';
      type = _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[13];
    }

    text = '%1、';
  } else if (symbol.includes('.')) {
    if (ARABIC_LIST.includes(start)) {
      return ['decimal', decsMap[level % 3], _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[2]];
    }
  } else if (isOrdered !== null) {
    format = 'bullet';
    text = '\u25cf';
    type = _listStyleMapping.DEFAULT_BULLET_LIST_ARRAY[0];
  }

  return [format, text, type];
}
//# sourceMappingURL=msWordParseSymbol.js.map