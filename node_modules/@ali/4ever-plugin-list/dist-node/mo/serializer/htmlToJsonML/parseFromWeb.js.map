{"version":3,"sources":["../../../../../src/mo/serializer/htmlToJsonML/parseFromWeb.ts"],"names":["parseFromWeb","currentListType","nestDepth","idMap","name","onOpenTag","state","attr","listTags","style","styleObj","ind","listType","listStyleType","listStyle","type","wrapList","parent","peek","prevSibling","listData","list","currentListId","listId","currentListLevel","parseInt","start","isOrdered","isParentOrderedList","level","getListItemLevel","liListType","format","FORMAT_MAP","text","TEXT_MAP","align","marginLeft","left","unitsConverter","toPX","paddingLeft","indData","li","push","onCloseTag","unwrapList","pop","flattenedChildren","append","length"],"mappings":"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","sourcesContent":["import { MoState as State, MoAttributes as Attributes, HTMLToJsonMLRule } from '@ali/4ever-cangjie';\nimport {\n  getAttributes,\n  getChildren,\n  getLastChild,\n  JsonML,\n  unitsConverter,\n  normalizeJsonMLChildren,\n} from '@ali/4ever-utils';\nimport { isEmpty } from 'lodash-es';\nimport type { ParagraphData } from '@ali/4ever-plugin-paragraph';\n\nimport {\n  getFlattenedChildren,\n  getRandomId,\n  listTags,\n  shouldFlattenChildren,\n} from './utils';\nimport { FORMAT_MAP, TEXT_MAP } from './constants';\n\ntype IndentProperties = Required<ParagraphData>['ind'];\n\nfunction parseFromWeb(): HTMLToJsonMLRule {\n  let currentListType = '';\n  let nestDepth = 0;\n  const idMap = {};\n  return {\n    name: 'list',\n\n    onOpenTag: (state: State, name: string, attr: Attributes): boolean => {\n      if (!listTags[name]) return false;\n\n      const style = attr.styleObj;\n      const ind: IndentProperties = {};\n      const listType = style.listStyleType || style.listStyle || attr.type;\n\n      if (name === 'ol' || name === 'ul') {\n        // 兼容 list-style、list-style-type\n        state.wrapList(name === 'ol' ? 'ordered-list' : 'unordered-list');\n        /**\n         * 优先处理zhi的list\n         * 避免使用原来的listId, 导致页面出现不期望的连续段落列表, ol情况下\n         * 但是保留原来的level属性\n         * TODO\n         * 1. 如果复制到已有列表当中, 则需要拿到上下文数据.\n         * 2. 需要补全 Bi => ASL => Zhi => Copy HTML => Bi 的链路测试, 保证\n         * 预览模式下的插件复制到编辑模式下行为一致.\n         */\n        if (attr['data-listid']) {\n          const parent = state.peek();\n          const prevSibling = getLastChild(parent);\n          // @ts-ignore\n          const listData: any = getAttributes(prevSibling) || {};\n          if (prevSibling === null || !listData.list) {\n            state.currentListId = getRandomId(); // eslint-disable-line no-param-reassign\n          } else {\n            const currentListId = listData.list && listData.list.listId;\n            state.currentListId = currentListId;\n          }\n          state.currentListLevel = parseInt(attr['data-level'], 10);\n        } else if (attr.start && parseInt(attr.start) > 1) {\n          // 当前列表 start 大于 1时，就近继承所有样式相同的列表的 id\n          if (idMap[attr.style]) {\n            state.currentListId = idMap[attr.style];\n          }\n        } else if (!state.currentListId || attr.start === '1') {\n          state.currentListId = getRandomId(); // eslint-disable-line no-param-reassign\n        } else if (!nestDepth && !attr.start) {\n          state.currentListId = getRandomId();\n        }\n        idMap[attr.style] = state.currentListId;\n        if (listType) {\n          currentListType = listType;\n        } else {\n          currentListType = '';\n        }\n        nestDepth++;\n      }\n\n      if (name === 'li') {\n        const listData = {\n          listId: state.currentListId,\n          isOrdered: state.isParentOrderedList(),\n          level: state.currentListLevel || state.getListItemLevel(),\n        };\n        const liListType = listType || currentListType;\n        if (liListType) {\n          const format = FORMAT_MAP[liListType] || 'bullet';\n          const text = format !== 'bullet' ? '%1.' : (TEXT_MAP[liListType] || '\\u25cf');\n          // @ts-ignore\n          listData.listStyle = {\n            format,\n            text,\n            align: 'left',\n          };\n        }\n\n        if (style.marginLeft) {\n          ind.left = unitsConverter.toPX(style.marginLeft);\n        }\n\n        if (style.paddingLeft) {\n          ind.left = (ind.left || 0) + unitsConverter.toPX(style.marginLeft);\n        }\n        const indData = isEmpty(ind) ? {} : { ind };\n        const li: JsonML = [\n          'p',\n          {\n            ...indData,\n            list: listData,\n          },\n        ] as JsonML;\n        state.push(li);\n      }\n      return true;\n    },\n\n    onCloseTag: (state: State, name: string): boolean => {\n      if (!listTags[name]) return false;\n\n      if (name === 'ol' || name === 'ul') {\n        state.unwrapList();\n        nestDepth--;\n      }\n\n      if (name === 'li') {\n        const li = state.pop();\n        if (shouldFlattenChildren(li)) {\n          const flattenedChildren: JsonML[] = getFlattenedChildren(li);\n          state.append(...flattenedChildren);\n        } else if (getChildren(li).length) {\n          state.append(normalizeJsonMLChildren(li));\n        }\n      }\n      return true;\n    },\n  };\n}\n\nexport default parseFromWeb;\n"],"file":"parseFromWeb.js"}