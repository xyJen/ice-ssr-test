{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToHTML.tsx"],"names":["getListStyle","data","level","listStyleType","listStyle","listLevel","Math","max","styleTumple","mapping","length","getListStyleType","isOrdered","isTaskList","orderListStyleMap","get","format","bulletListStyleMap","Ul","props","key","children","node","attrs","Ol","start","undefined","Li","tagToComponent","ul","ol","li","rule","name","match","tagName","convert","Component","map","child","index","toString","hooks","before","normalizeJsonMl"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  JsonML,\n  getTagName,\n  getChildren,\n  getAttributes,\n} from '@ali/4ever-utils';\nimport type { JsonMLToHTMLRule } from '@ali/4ever-cangjie';\nimport { ConvertFunc } from '@ali/4ever-cangjie';\nimport { orderListStyleMap, bulletListStyleMap } from './constants';\nimport { normalizeJsonMl } from './normalizeJsonML';\nimport type { ListProperties } from '../../utils/types';\nimport { mapping } from '../../utils/listStyleMapping';\n\nfunction getListStyle (data: ListProperties) {\n  const { level = 0, listStyleType, listStyle } = data;\n  const listLevel = Math.max(0, level);\n\n  if (!listStyle && listStyleType) {\n    const styleTumple = mapping[listStyleType];\n    return styleTumple[listLevel % styleTumple.length] as ListProperties['listStyle'];\n  }\n\n  return listStyle;\n}\n\nfunction getListStyleType (data: ListProperties) {\n  const { isOrdered = false, level = 0, isTaskList } = data;\n  const listLevel = Math.max(0, level);\n  const listStyle = getListStyle(data);\n  let listStyleType: string | undefined\n\n  if (listStyle) {\n    listStyleType = isOrdered ? orderListStyleMap.get(listStyle.format) : bulletListStyleMap[listLevel % 3];\n  }\n\n  return isTaskList ? 'none' : listStyleType;\n}\n\ntype ListElementProps = {\n  key?: string;\n  node: JsonML;\n};\n\nconst Ul: React.FC<ListElementProps> = (props) => {\n  const { key, children, node } = props;\n  const attrs = getAttributes(node) || {};\n  const listStyleType = getListStyleType(attrs);\n  return (\n    <ul key={key} style={{ listStyleType }}>{children}</ul>\n  );\n};\n\nconst Ol: React.FC<ListElementProps> = (props) => {\n  const { key, children, node } = props;\n  const attrs = getAttributes(node) || {};\n  const { start } = attrs as { start?: number };\n  const listStyleType = getListStyleType(attrs);\n  return (\n    <ol\n      key={key}\n      start={start && start > 1 ? start : undefined}\n      style={{ listStyleType }}\n    >\n      {children}\n    </ol>\n  );\n};\n\nconst Li: React.FC<ListElementProps> = (props) => {\n  const { key, children } = props;\n  return (\n    <li key={key}>{children}</li>\n  );\n};\n\nconst tagToComponent: Record<string, React.FC<ListElementProps>> = {\n  ul: Ul,\n  ol: Ol,\n  li: Li,\n};\n\nconst rule: JsonMLToHTMLRule = {\n  name: 'list',\n\n  match(node: JsonML): boolean {\n    const tagName = getTagName(node);\n    return !!tagToComponent[tagName];\n  },\n\n  convert(node: JsonML, key: number[] = [], convert: ConvertFunc): React.ReactElement {\n    const tagName = getTagName(node);\n    const Component = tagToComponent[tagName];\n    const children = getChildren(node)\n      .map((child, index: number) => convert(child, [...key, index]));\n\n    return (\n      <Component key={key.toString()} node={node}>{children}</Component>\n    );\n  },\n\n  hooks: {\n    before: normalizeJsonMl,\n  },\n};\n\nexport default rule;\n"],"file":"jsonMLToHTML.js"}