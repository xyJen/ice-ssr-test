{"version":3,"sources":["../../../../src/utils/transformNumber/arabic2Roma.ts"],"names":["ROMA_LIST","ARABIC_LIST","arabic2Roma","number","type","map","item","toLowerCase","ret","num","i","length","y","Math","floor","m"],"mappings":";;;;;;;AAAO,MAAMA,SAAS,GAAG,CACvB,GADuB,EAEvB,IAFuB,EAGvB,GAHuB,EAIvB,IAJuB,EAKvB,GALuB,EAMvB,IANuB,EAOvB,GAPuB,EAQvB,IARuB,EASvB,GATuB,EAUvB,IAVuB,EAWvB,GAXuB,EAYvB,IAZuB,EAavB,GAbuB,CAAlB;;AAgBP,MAAMC,WAAW,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAApB;;AAEe,SAASC,WAAT,CAAqBC,MAArB,EAAqCC,IAArC,EAA2D;AACxE,QAAMC,GAAG,GAAGD,IAAI,KAAK,OAAT,GAAmBJ,SAAnB,GAA+BA,SAAS,CAACK,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACC,WAAL,EAAtB,CAA3C;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,GAAG,GAAGN,MAAV;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAID,GAAG,KAAK,CAAZ,EAAe;AACf,UAAMG,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAGR,WAAW,CAACS,CAAD,CAA5B,CAAV;AACAD,IAAAA,GAAG,IAAIR,WAAW,CAACS,CAAD,CAAX,GAAiBE,CAAxB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AAC1BP,MAAAA,GAAG,IAAIH,GAAG,CAACK,CAAD,CAAV;AACD;AACF;;AACD,SAAOF,GAAP;AACD","sourcesContent":["export const ROMA_LIST = [\n  'M',\n  'CM',\n  'D',\n  'CD',\n  'C',\n  'XC',\n  'L',\n  'XL',\n  'X',\n  'IX',\n  'V',\n  'IV',\n  'I',\n];\n\nconst ARABIC_LIST = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\nexport default function arabic2Roma(number: number, type: string): string {\n  const map = type === 'upper' ? ROMA_LIST : ROMA_LIST.map(item => item.toLowerCase());\n  let ret = '';\n  let num = number;\n  for (let i = 0; i < map.length; i++) {\n    if (num === 0) break;\n    const y = Math.floor(num / ARABIC_LIST[i]);\n    num -= ARABIC_LIST[i] * y;\n    for (let m = 0; m < y; m++) {\n      ret += map[i];\n    }\n  }\n  return ret;\n}\n"],"file":"arabic2Roma.js"}