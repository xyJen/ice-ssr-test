{"version":3,"sources":["../../../src/utils/generateSymbol.ts"],"names":["RELATIVE_LEVEL","REG_DEC_DEC_DEC","isContinuousDec","listStyle","format","test","text","getListSymbolTuple","isOrdered","relativeLevel","align","listTypeName","DEFAULT_NUMBER_LIST_ARRAY","DEFAULT_BULLET_LIST_ARRAY","all","generateSymbol","level","start","step","listStyleType","remainder","includes","listSymbolTuple","type","pattern","listSymbol","RegExp","replace"],"mappings":";;;;;;;;AAAA;;AAMA;;AAEO,MAAMA,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB;;AACP,MAAMC,eAAe,GAAG,YAAxB;;AAEA,MAAMC,eAAe,GAAIC,SAAD,IAAqC;AAC3D;AACA,SAAOA,SAAS,EAAEC,MAAX,KAAsB,SAAtB,IAAmCH,eAAe,CAACI,IAAhB,CAAqBF,SAAS,CAACG,IAA/B,CAA1C;AACD,CAHD;;AAKA,MAAMC,kBAAkB,GAAG,CACzBC,SADyB,EAEzBC,aAFyB,EAGzBN,SAHyB,KAIZ;AACb,MAAIA,SAAJ,EAAe;AACb,UAAM;AAAEC,MAAAA,MAAF;AAAUE,MAAAA,IAAV;AAAgBI,MAAAA;AAAhB,QAA0BP,SAAhC;AACA,WAAO,CAACC,MAAD,EAASE,IAAT,EAAeI,KAAf,CAAP;AACD,GAHD,MAGO;AACL,UAAMC,YAAY,GAAGH,SAAS,GAC1BI,4CAA0B,CAA1B,CAD0B,GAE1BC,4CAA0B,CAA1B,CAFJ;AAGA,WAAOC,0BAAIH,YAAJ,EAAkBF,aAAlB,CAAP;AACD;AACF,CAdD;;AAgBO,SAASM,cAAT,CACLC,KADK,EAELC,KAFK,EAGLC,IAHK,EAILV,SAJK,EAKLW,aALK,EAMLhB,SANK,EAOG;AACR,QAAMiB,SAAS,GAAGJ,KAAK,GAAG,CAA1B,CADQ,CAER;;AACA,QAAMP,aAAa,GAAGT,cAAc,CAACqB,QAAf,CAAwBD,SAAxB,IAAqCA,SAArC,GAAiD,CAAvE;AACA,QAAME,eAAe,GAAGf,kBAAkB,CACxCC,SADwC,EAExCC,aAFwC,EAGxCN,SAHwC,CAA1C;AAKA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBF,eAAxB;AACA,MAAIG,UAAU,GAAGD,OAAO,IAAI,EAA5B,CAVQ,CAWR;AACA;;AACA,MAAIL,aAAa,KAAKP,4CAA0B,CAA1B,CAAlB,IAAkDV,eAAe,CAACC,SAAD,CAArE,EAAkF;AAChF,WAAQ,GAAEe,IAAK,GAAf;AACD,GAFD,MAEO,IAAIQ,MAAM,CAAC,KAAD,CAAN,CAAcrB,IAAd,CAAmBoB,UAAnB,CAAJ,EAAoC;AACzCA,IAAAA,UAAU,GAAGA,UAAU,CAACE,OAAX,CAAmB,QAAnB,EAA6B,MAAM,sCAAgBV,KAAhB,EAAuBM,IAAvB,CAAnC,CAAb;AACD;;AACD,SAAOE,UAAP;AACD","sourcesContent":["import {\n  mapping as all,\n  DEFAULT_BULLET_LIST_ARRAY,\n  DEFAULT_NUMBER_LIST_ARRAY,\n} from './listStyleMapping';\nimport { ListStyleProperties } from './types';\nimport { transformNumber } from './transformNumber';\n\nexport const RELATIVE_LEVEL = [0, 1, 2];\nconst REG_DEC_DEC_DEC = /%\\d(.%\\d)+/;\n\nconst isContinuousDec = (listStyle?: ListStyleProperties) => {\n  // 处理导入没有 listStyleType 的 连续数字类型(如：2.1.1)的列表\n  return listStyle?.format === 'decimal' && REG_DEC_DEC_DEC.test(listStyle.text);\n};\n\nconst getListSymbolTuple = (\n  isOrdered: boolean,\n  relativeLevel: number,\n  listStyle?: ListStyleProperties,\n): string[] => {\n  if (listStyle) {\n    const { format, text, align } = listStyle;\n    return [format, text, align];\n  } else {\n    const listTypeName = isOrdered\n      ? DEFAULT_NUMBER_LIST_ARRAY[0]\n      : DEFAULT_BULLET_LIST_ARRAY[0];\n    return all[listTypeName][relativeLevel];\n  }\n};\n\nexport function generateSymbol(\n  level: number,\n  start: number,\n  step: string,\n  isOrdered: boolean,\n  listStyleType?: string,\n  listStyle?: ListStyleProperties,\n): string {\n  const remainder = level % 3;\n  // 旧列表的level存在负数跟小数会导致all[listTypeName][relativeLevel]返回的是undefined，数组结构失败，所以用RELATIVE_LEVEL处理\n  const relativeLevel = RELATIVE_LEVEL.includes(remainder) ? remainder : 0;\n  const listSymbolTuple = getListSymbolTuple(\n    isOrdered,\n    relativeLevel,\n    listStyle,\n  );\n  const [type, pattern] = listSymbolTuple;\n  let listSymbol = pattern || '';\n  // process number symbol, if match %number pattern\n  // TODO 暂时保留listStyleType字段，未来依赖上下文判断列表类型\n  if (listStyleType === DEFAULT_NUMBER_LIST_ARRAY[2] || isContinuousDec(listStyle)) {\n    return `${step}.`;\n  } else if (RegExp(/%\\d/).test(listSymbol)) {\n    listSymbol = listSymbol.replace(/(%\\d)/g, () => transformNumber(start, type));\n  }\n  return listSymbol;\n}"],"file":"generateSymbol.js"}