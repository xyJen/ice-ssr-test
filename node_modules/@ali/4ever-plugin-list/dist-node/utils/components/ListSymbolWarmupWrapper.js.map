{"version":3,"sources":["../../../../src/utils/components/ListSymbolWarmupWrapper.tsx"],"names":["ListSymbolWarmupWrapper","controller","children","React","useMemo","document","view","batch","forEachDescendant","node","Block","isBlock","listConfig","data","list","isTaskList","step","start","isOrdered","level","listStyle","listStyleType","symbolStyle","symbol","Number","style","i","length","char","CJK_REG","test","fontFamilies","fontFamily","SYMBOL_DEFAULT_FONT","Set","sizes","add","String","fontSize","SYMBOL_DEFAULT_SIZE","TextMeasure","warmup"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;uBAL4B,a;;AAWb,SAASA,uBAAT,CAAiC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAjC,EAAyF;AACtGC,EAAAA,KAAK,CAACC,OAAN,CAAc,MAAM;AAClB,UAAMC,QAAQ,GAAGJ,UAAU,CAACK,IAA5B;AACA,UAAMC,KAAkB,GAAG,EAA3B;AACAF,IAAAA,QAAQ,CAACG,iBAAT,CAA2BC,IAAI,IAAI;AACjC,UAAI,CAACC,mBAAMC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACxB;AACD;;AACD,YAAMG,UAAU,GAAGH,IAAI,CAACI,IAAL,CAAUC,IAA7B;;AACA,UAAI,CAACF,UAAD,IAAeA,UAAU,CAACG,UAA9B,EAA0C;AACxC;AACD;;AACD,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAK,GAAG;AAAhB,UAAsBR,IAAI,CAACI,IAAjC;AACA,YAAM;AACJK,QAAAA,SADI;AAEJC,QAAAA,KAAK,GAAG,CAFJ;AAGJC,QAAAA,SAHI;AAIJC,QAAAA,aAJI;AAKJC,QAAAA;AALI,UAMFV,UANJ;AAOA,YAAMW,MAAM,GAAG,oCACbJ,KADa,EAEbK,MAAM,CAACP,KAAD,CAFO,EAGbD,IAHa,EAIbE,SAJa,EAKbG,aALa,EAMbD,SANa,CAAf;AAQA,YAAMK,KAAK,GAAG,6CAAmBH,WAAnB,EAAgCJ,SAAhC,CAAd;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,cAAME,IAAI,GAAGC,iBAAQC,IAAR,CAAaP,MAAM,CAACG,CAAD,CAAnB,IAA0B,GAA1B,GAAgCH,MAAM,CAACG,CAAD,CAAnD;;AACA,YAAI,CAACnB,KAAK,CAACqB,IAAD,CAAV,EAAkB;AAChBrB,UAAAA,KAAK,CAACqB,IAAD,CAAL,GAAc,EAAd;AACD;;AACD,cAAMG,YAAY,GAAGxB,KAAK,CAACqB,IAAD,CAA1B;AACA,cAAMI,UAAU,GAAGP,KAAK,CAACO,UAAN,IAAoBC,wCAAvC;;AACA,YAAI,CAACF,YAAY,CAACC,UAAD,CAAjB,EAA+B;AAC7BD,UAAAA,YAAY,CAACC,UAAD,CAAZ,GAA2B,IAAIE,GAAJ,EAA3B;AACD;;AACD,cAAMC,KAAK,GAAGJ,YAAY,CAACC,UAAD,CAA1B;AACAG,QAAAA,KAAK,CAACC,GAAN,CAAUC,MAAM,CAACZ,KAAK,CAACa,QAAN,IAAkBC,wCAAnB,CAAhB;AACD;AACF,KAtCD;;AAuCAC,yBAAYC,MAAZ,CAAmBlC,KAAnB;AACD,GA3CD,EA2CG,EA3CH;AA4CA,sBAAO,qCAAGL,QAAH,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller, Block } from '@ali/4ever-cangjie';\nimport { TextMeasure, CJK_REG } from '../measure';\nimport type { WarmupBatch } from '../measure';\nimport { generateSymbol } from '../generateSymbol';\nimport { SYMBOL_DEFAULT_FONT, SYMBOL_DEFAULT_SIZE } from '../getSymbolRightSpace';\nimport { convertSymbolStyle } from '../getSymbolStyleByKey';\n\ninterface ListSymbolWarmupWrapperProps {\n  controller: Controller;\n  children: React.ReactNode;\n}\nexport default function ListSymbolWarmupWrapper({ controller, children }: ListSymbolWarmupWrapperProps) {\n  React.useMemo(() => {\n    const document = controller.view;\n    const batch: WarmupBatch = {};\n    document.forEachDescendant(node => {\n      if (!Block.isBlock(node)) {\n        return;\n      }\n      const listConfig = node.data.list;\n      if (!listConfig || listConfig.isTaskList) {\n        return;\n      }\n      const { step, start = 1 } = node.data;\n      const {\n        isOrdered,\n        level = 0,\n        listStyle,\n        listStyleType,\n        symbolStyle,\n      } = listConfig;\n      const symbol = generateSymbol(\n        level,\n        Number(start),\n        step,\n        isOrdered,\n        listStyleType,\n        listStyle,\n      );\n      const style = convertSymbolStyle(symbolStyle, isOrdered);\n      for (let i = 0; i < symbol.length; i += 1) {\n        const char = CJK_REG.test(symbol[i]) ? 'ä¸­' : symbol[i];\n        if (!batch[char]) {\n          batch[char] = {};\n        }\n        const fontFamilies = batch[char];\n        const fontFamily = style.fontFamily || SYMBOL_DEFAULT_FONT;\n        if (!fontFamilies[fontFamily]) {\n          fontFamilies[fontFamily] = new Set();\n        }\n        const sizes = fontFamilies[fontFamily];\n        sizes.add(String(style.fontSize || SYMBOL_DEFAULT_SIZE));\n      }\n    });\n    TextMeasure.warmup(batch);\n  }, []);\n  return <>{children}</>;\n}"],"file":"ListSymbolWarmupWrapper.js"}