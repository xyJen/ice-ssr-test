{"version":3,"sources":["../../../../src/bi/utils/selectSymbol.ts"],"names":["selectSymbol","controller","listItemSelected","isSelected","injections","data","value","allInjections","curInjections","curInjectionMap","Map","forEach","item","includes","key","push","set","result","length","map","inj","Injection","create","get","setInjections"],"mappings":";;;;;;;AAAA;;AAEe,SAASA,YAAT,CACbC,UADa,EAEbC,gBAFa,EAGbC,UAHa,EAIP;AACN,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAuBJ,UAAU,CAACK,KAAxC;AACA,QAAMC,aAA0B,GAAG,EAAnC;AACA,QAAMC,aAA0B,GAAG,EAAnC;AACA,QAAMC,eAAe,GAAG,IAAIC,GAAJ,EAAxB;AACAN,EAAAA,UAAU,CAACO,OAAX,CAAmBC,IAAI,IAAI;AACzB,QAAIV,gBAAgB,CAACW,QAAjB,CAA0BD,IAAI,CAACE,GAA/B,CAAJ,EAAyC;AACvCN,MAAAA,aAAa,CAACO,IAAd,CAAmBH,IAAnB;AACAH,MAAAA,eAAe,CAACO,GAAhB,CAAoBJ,IAAI,CAACE,GAAzB,EAA8B,IAA9B;AACD,KAHD,MAGO;AACLP,MAAAA,aAAa,CAACQ,IAAd,CAAmBH,IAAnB;AACD;AACF,GAPD;AAQA,MAAIK,MAAmB,GAAG,EAA1B;;AACA,MAAIT,aAAa,CAACU,MAAlB,EAA0B;AACxBD,IAAAA,MAAM,GAAGT,aAAa,CAACW,GAAd,CAAkBC,GAAG,IAAIC,uBAAUC,MAAV,CAAiB,EACjD,GAAGF,GAD8C;AAEjDf,MAAAA,IAAI,EAAE,EACJ,IAAIe,GAAG,CAACf,IAAJ,IAAY,EAAhB,CADI;AAEJF,QAAAA;AAFI;AAF2C,KAAjB,CAAzB,CAAT;AAOD;;AAEDD,EAAAA,gBAAgB,CAACS,OAAjB,CAAyBG,GAAG,IAAI;AAC9B,QAAI,CAACL,eAAe,CAACc,GAAhB,CAAoBT,GAApB,CAAL,EAA+B;AAC7BG,MAAAA,MAAM,CAACF,IAAP,CAAYM,uBAAUC,MAAV,CAAiB;AAC3BR,QAAAA,GAD2B;AAE3BT,QAAAA,IAAI,EAAE;AACJF,UAAAA;AADI;AAFqB,OAAjB,CAAZ;AAMD;AACF,GATD;AAWAF,EAAAA,UAAU,CAACuB,aAAX,CAAyB,CAAC,GAAGjB,aAAJ,EAAmB,GAAGU,MAAtB,CAAzB;AACD","sourcesContent":["import { Controller, Injection } from '@ali/4ever-cangjie';\n\nexport default function selectSymbol(\n  controller: Controller,\n  listItemSelected: string[],\n  isSelected: boolean,\n): void {\n  const { injections, data } = controller.value;\n  const allInjections: Injection[] = [];\n  const curInjections: Injection[] = [];\n  const curInjectionMap = new Map();\n  injections.forEach(item => {\n    if (listItemSelected.includes(item.key)) {\n      curInjections.push(item);\n      curInjectionMap.set(item.key, true);\n    } else {\n      allInjections.push(item);\n    }\n  });\n  let result: Injection[] = [];\n  if (curInjections.length) {\n    result = curInjections.map(inj => Injection.create({\n      ...inj,\n      data: {\n        ...(inj.data || {}),\n        isSelected,\n      },\n    }));\n  }\n\n  listItemSelected.forEach(key => {\n    if (!curInjectionMap.get(key)) {\n      result.push(Injection.create({\n        key,\n        data: {\n          isSelected,\n        },\n      }))\n    }\n  });\n\n  controller.setInjections([...allInjections, ...result]);\n}\n"],"file":"selectSymbol.js"}