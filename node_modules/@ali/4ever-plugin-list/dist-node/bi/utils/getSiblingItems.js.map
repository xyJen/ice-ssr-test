{"version":3,"sources":["../../../../src/bi/utils/getSiblingItems.ts"],"names":["value","currrentItem","key","currentList","data","list","listId","level","targetLevel","document","root","getParent","nodesLength","nodes","length","prevLevel","siblingsMap","findTarget","i","node","listConfig","push"],"mappings":";;;;;;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;eAEe,CAACA,KAAD,EAAeC,YAAf,KAAgD;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAUD,YAAhB;AACA,QAAME,WAAW,GAAGF,YAAY,CAACG,IAAb,CAAkBC,IAAtC;AACA,MAAI,CAACH,GAAD,IAAQ,CAACC,WAAb,EAA0B,OAAO,CAACF,YAAD,CAAP;AAC1B,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA,KAAK,EAAEC;AAAjB,MAAiCL,WAAvC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeT,KAArB;AACA,QAAMU,IAAI,GAAGD,QAAQ,CAACE,SAAT,CAAmBT,GAAnB,KAA2BO,QAAxC;AACA,QAAMG,WAAW,GAAGF,IAAI,EAAEG,KAAN,CAAYC,MAAZ,IAAsB,CAA1C;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,MAAIC,UAAU,GAAG,KAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,WAApB,EAAiCM,CAAC,EAAlC,EAAsC;AACpC,UAAMC,IAAI,GAAGT,IAAI,EAAEG,KAAN,CAAYK,CAAZ,CAAb;AACA,UAAME,UAAU,GAAGD,IAAI,CAACf,IAAL,CAAUC,IAA7B,CAFoC,CAIpC;;AACA,QAAI,CAAC,gCAAae,UAAb,EAAyBd,MAAzB,CAAL,EAAuC;AACrC;AACD,KAPmC,CASpC;;;AACA,QAAI,CAACU,WAAW,CAACI,UAAU,CAACb,KAAZ,CAAhB,EAAoC;AAClCS,MAAAA,WAAW,CAACI,UAAU,CAACb,KAAZ,CAAX,GAAgC,EAAhC;AACD,KAZmC,CAcpC;;;AACA,QAAIU,UAAU,IAAIG,UAAU,CAACb,KAAX,GAAmBC,WAArC,EAAkD;AAChD;AACD,KAjBmC,CAmBpC;;;AACA,QAAIY,UAAU,CAACb,KAAX,GAAmBQ,SAAvB,EAAkC;AAChCC,MAAAA,WAAW,CAACD,SAAD,CAAX,GAAyB,EAAzB;AACD;;AAED,QAAII,IAAI,CAACjB,GAAL,KAAaA,GAAjB,EAAsB;AACpBe,MAAAA,UAAU,GAAG,IAAb;AACD;;AAEDF,IAAAA,SAAS,GAAGK,UAAU,CAACb,KAAvB;AACAS,IAAAA,WAAW,CAACI,UAAU,CAACb,KAAZ,CAAX,CAA8Bc,IAA9B,CAAmCF,IAAnC;AACD;;AACD,SAAOH,WAAW,CAACR,WAAD,CAAX,IAA4B,EAAnC;AACD,C","sourcesContent":["import { Value, Block } from '@ali/4ever-cangjie';\nimport { isInSameList } from '../../utils/isInSameList';\n\n/**\n * @description 当光标在 钉钉文档2c 的列表项内容时,它的兄弟项就是 2a、2b、2c、2d\n *\n *   1. 钉钉文档1\n *      a. 钉钉文档1a\n *      b. 钉钉文档1b\n *         i. 钉钉文档1bi\n *        ii. 钉钉文档1bii\n *       iii. 钉钉文档1biii\n *      c. 钉钉文档1c\n *      d. 钉钉文档1d\n *   2. 钉钉文档2\n *     a. 钉钉文档2a\n *     b. 钉钉文档2b\n *         i. 钉钉文档2bi\n *        ii. 钉钉文档2bii\n *       iii. 钉钉文档2biii\n *     c. 钉钉文档2c\n *     d. 钉钉文档2d\n *   3. 钉钉文档3\n *\n * */\n\nexport default (value: Value, currrentItem: Block): Block[] => {\n  const { key } = currrentItem;\n  const currentList = currrentItem.data.list;\n  if (!key || !currentList) return [currrentItem];\n  const { listId, level: targetLevel } = currentList;\n  const { document } = value;\n  const root = document.getParent(key) || document;\n  const nodesLength = root?.nodes.length || 0;\n  let prevLevel = 0;\n  const siblingsMap = {};\n  let findTarget = false;\n  for (let i = 0; i < nodesLength; i++) {\n    const node = root?.nodes[i] as Block;\n    const listConfig = node.data.list;\n\n    // 当前节点不属于目标列表项，跳过遍历下个节点\n    if (!isInSameList(listConfig, listId)) {\n      continue;\n    }\n\n    // 初始化当前level在map中的初始值\n    if (!siblingsMap[listConfig.level]) {\n      siblingsMap[listConfig.level] = [];\n    }\n\n    // 已经找到目标节点, 当遍历到比目标节点level低的节点时，说明目标节点的兄弟节点已找完，结束遍历\n    if (findTarget && listConfig.level < targetLevel) {\n      break;\n    }\n\n    // 当前level比上一列表项低时，说明step重新从1开始了，清空map中上一层级数据\n    if (listConfig.level < prevLevel) {\n      siblingsMap[prevLevel] = [];\n    }\n\n    if (node.key === key) {\n      findTarget = true;\n    }\n\n    prevLevel = listConfig.level;\n    siblingsMap[listConfig.level].push(node);\n  }\n  return siblingsMap[targetLevel] || [];\n};\n"],"file":"getSiblingItems.js"}