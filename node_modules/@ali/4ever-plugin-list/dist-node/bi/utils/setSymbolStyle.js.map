{"version":3,"sources":["../../../../src/bi/utils/setSymbolStyle.ts"],"names":["isHeadingStyle","symbolStyle","Boolean","bold","undefined","setSymbolStyle","controller","document","data","selection","value","wholeListItemSelected","isHeadingAction","isCollapsed","listSelections","currentItems","forEach","item","push","key","length","map","block","firstSymbolStyle","index","entries","node","getNode","Block","isBlock","listSymbolStyle","list","newStyle","styleName","includes","firstText","getTextsAtRange","markValue","getMarks","find","mark","type","newData","JSON","stringify","command","Commands","setNodeByKey"],"mappings":"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","sourcesContent":["import { Commands, Controller, Block } from '@ali/4ever-cangjie';\nimport getCurrentItem from './getCurrentItem';\nimport getWholeListItemSelected from './getWholeListItemSelected';\nimport mergeListData from './mergeListData';\nimport isList from './isList';\nimport type { SymbolStyleProperties } from '../../utils/types';\n\nconst isHeadingStyle = (symbolStyle: SymbolStyleProperties): boolean => {\n  return Boolean('sz' in symbolStyle && (symbolStyle.bold !== undefined));\n};\n\nexport default function setSymbolStyle(\n  controller: Controller,\n  symbolStyle: SymbolStyleProperties,\n): void {\n  const { document, data, selection } = controller.value;\n  const wholeListItemSelected = getWholeListItemSelected(controller.value);\n  const isHeadingAction = isHeadingStyle(symbolStyle);\n  const { isCollapsed } = selection;\n  let listSelections = [...(data.listSelections || [])];\n  if (isHeadingAction) {\n    const currentItems = getCurrentItem(controller);\n    currentItems.forEach((item) => {\n      if (item && isList(item)) {\n        listSelections.push(item.key);\n      }\n    });\n  } else if (listSelections?.length === 0 && wholeListItemSelected.length > 0) {\n    listSelections = wholeListItemSelected.map((block) => block.key);\n  }\n  const firstSymbolStyle = {};\n  if (!listSelections) {\n    return;\n  }\n\n  for (const [index, key] of listSelections.entries()) {\n    const node = document.getNode(key);\n    if (!Block.isBlock(node)) {\n      continue;\n    }\n    const listSymbolStyle = {\n      ...node?.data?.list?.symbolStyle,\n    };\n    const newStyle: Record<string, any> = {};\n    for (const styleName in symbolStyle) {\n      if (\n        ['bold', 'italic', 'strike'].includes(styleName)\n      ) {\n        if (isCollapsed) {\n          // 项目符号选中设置样式，自动继承第一个 symbolStyle\n          newStyle[styleName] = firstSymbolStyle[styleName] || !listSymbolStyle[styleName];\n        } else {\n          const firstText = document.getTextsAtRange(selection)[0];\n          const markValue = firstText?.getMarks().find((mark) => mark.type === styleName);\n          newStyle[styleName] = Boolean(markValue);\n        }\n        if (!index) {\n          firstSymbolStyle[styleName] = newStyle[styleName];\n        }\n      } else if (symbolStyle[styleName] === undefined) {\n        // 允许显示声明 undefined 以清除指定属性\n        delete listSymbolStyle[styleName];\n      }\n    }\n    if (isHeadingAction) {\n      newStyle.bold = symbolStyle.bold;\n    }\n    const newData = mergeListData(node.data, {\n      symbolStyle: {\n        ...listSymbolStyle,\n        ...symbolStyle,\n        ...newStyle,\n      },\n    });\n    if (JSON.stringify(symbolStyle) === '{}') {\n      delete newData.data.list.symbolStyle;\n    }\n    controller.command(Commands.setNodeByKey, node.key, newData);\n  }\n}\n"],"file":"setSymbolStyle.js"}