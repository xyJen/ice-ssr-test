{"version":3,"sources":["../../../../src/bi/utils/mergeMabeGroupNode.ts"],"names":["isListGroupAvailable","getPreviousViewGroupNode","utils","mergeMabeGroupNode","node","controller","previousViewNode","userData","get","newNode","set","data","list","command","Commands","moveToEndOfNode","removeNodeByKey","key","insertBlock","moveToStartOfNode","fold"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAM;AAAEA,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,IAAqDC,0BAA3D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,kBAAT,CAA4BC,IAA5B,EAAyCC,UAAzC,EAAiE;AAC9E,QAAMC,gBAAgB,GACpBN,oBAAoB,CAACK,UAAD,CAApB,IACAJ,wBAAwB,CAACG,IAAD,EAAOC,UAAP,CAF1B;;AAGA,MAAIC,gBAAgB,IAAID,UAAU,CAACE,QAAX,CAAoBC,GAApB,CAAwBF,gBAAxB,EAA0C,MAA1C,CAAxB,EAA2E;AACzE,UAAMG,OAAO,GAAGL,IAAI,CAACM,GAAL,CAAS,MAAT,EAAiB,EAC/B,GAAG,kBAAKN,IAAI,CAACO,IAAV,EAAgB,CAAC,MAAD,CAAhB,CAD4B;AAE/BC,MAAAA,IAAI,EAAE,EACJ,GAAGN,gBAAgB,CAACK,IAAjB,CAAsBC;AADrB;AAFyB,KAAjB,CAAhB;AAMAP,IAAAA,UAAU,CACPQ,OADH,CACWC,sBAASC,eADpB,EACqCT,gBADrC,EAEGO,OAFH,CAEWC,sBAASE,eAFpB,EAEqCZ,IAAI,CAACa,GAF1C,EAGGJ,OAHH,CAGWC,sBAASI,WAHpB,EAGiCT,OAHjC,EAIGI,OAJH,CAIWC,sBAASK,iBAJpB,EAIuCf,IAJvC,EAPyE,CAYzE;;AACA,4CAAW;AAAEA,MAAAA,IAAI,EAAEK,OAAR;AAAiBW,MAAAA,IAAI,EAAE;AAAvB,KAAX;AACD;AACF","sourcesContent":["import { utils } from '@ali/4ever-plugin-list-group';\nimport { Block, Commands, Controller } from '@ali/4ever-cangjie';\nimport { toggleFold } from '@ali/4ever-plugin-heading-group';\nimport { omit } from 'lodash-es';\n\nconst { isListGroupAvailable, getPreviousViewGroupNode } = utils;\n\n/**\n * 若上一个可视节点是 GroupNode list 节点，做可视节点的合并\n * I -> 光标，在光标位置按 backspace 键\n *   \n * 场景一：列表 ddd 合并到列表 ccc\n * \n *   1. aaa             1. aaa\n *   |  a. bbb          |  a. bbb\n *   |    i. ccc   ->   |    i. cccIddd\n *   2. Iddd\n * \n * 场景二：段落 ddd 合并到列表 bbb\n * \n *   1. aaa             1. aaa \n *   | >a. bbb     ->   |  > a.bbbIddd\n *   Iddd\n * \n * 场景三：段落 ddd 合并到列表 aaa\n * \n *  >1. aaa        ->   >1. aaaIddd\n *   Iddd          \n */\nexport default function mergeMabeGroupNode(node: Block, controller: Controller) {\n  const previousViewNode =\n    isListGroupAvailable(controller) &&\n    getPreviousViewGroupNode(node, controller);\n  if (previousViewNode && controller.userData.get(previousViewNode, 'fold')) {\n    const newNode = node.set('data', {\n      ...omit(node.data, ['fold']),\n      list: {\n        ...previousViewNode.data.list,\n      },\n    });\n    controller\n      .command(Commands.moveToEndOfNode, previousViewNode)\n      .command(Commands.removeNodeByKey, node.key)\n      .command(Commands.insertBlock, newNode)\n      .command(Commands.moveToStartOfNode, node);\n    // 设置折叠状态\n    toggleFold({ node: newNode, fold: true });\n  }\n}\n"],"file":"mergeMabeGroupNode.js"}