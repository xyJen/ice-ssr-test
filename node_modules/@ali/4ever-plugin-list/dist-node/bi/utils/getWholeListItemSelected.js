"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getWholeListItemSelected;

var _everLogger = _interopRequireDefault(require("@ali/4ever-logger"));

var _isList = _interopRequireDefault(require("./isList"));

var _everPluginIndent = require("@ali/4ever-plugin-indent");

function getWholeListItemSelected(value) {
  const {
    document,
    startBlock,
    endBlock
  } = value;
  const {
    selection
  } = value;
  if (!selection || !startBlock || !endBlock) return [];
  const selectedBlocks = (0, _everPluginIndent.getHighestSelectedBlocks)(value);
  if (selectedBlocks.length === 0) return [];
  const startPoint = selection.getStart(document);
  const isAtStartofParagraph = startPoint.isAtStartOfNode(startBlock);
  const endPoint = selection.getEnd(document);
  const isAtEndofParagraph = endPoint.isAtEndOfNode(endBlock);
  const unWholeSelected = new Set();

  if (!isAtStartofParagraph) {
    unWholeSelected.add(selectedBlocks[0].key);
  }

  if (!isAtEndofParagraph) {
    try {
      unWholeSelected.add(selectedBlocks[selectedBlocks.length - 1].key);
    } catch (e) {
      _everLogger.default.error({
        type: 'listError',
        name: 'getWholeListItemSelected',
        value: selectedBlocks[selectedBlocks.length - 1]
      });

      return [];
    }
  }

  return selectedBlocks.filter(block => {
    return (0, _isList.default)(block) && !unWholeSelected.has(block.key);
  });
}
//# sourceMappingURL=getWholeListItemSelected.js.map