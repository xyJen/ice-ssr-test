"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isValidListStyleType = void 0;

var _regexp = require("../regexp");

var _listStyleMapping = require("../../utils/listStyleMapping");

const isValidListStyleType = type => {
  return !type || _listStyleMapping.mapping[type];
};

exports.isValidListStyleType = isValidListStyleType;

var _default = (isOrdered, listevel, type) => {
  const listStyleType = type || (isOrdered ? _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[0] : _listStyleMapping.DEFAULT_BULLET_LIST_ARRAY[0]);
  const styleTumple = _listStyleMapping.mapping[listStyleType];

  if (!styleTumple && _regexp.STICKER_CODE_REG.test(type)) {
    return {
      format: 'bullet',
      text: type,
      align: 'start'
    };
  }

  const level = listevel < 0 ? 0 : Math.floor(listevel);
  const listType = styleTumple[level % styleTumple.length]; // eslint-disable-next-line prefer-const

  let [format, text, align] = listType;

  if (isOrdered) {
    if (listStyleType === _listStyleMapping.DEFAULT_NUMBER_LIST_ARRAY[2]) {
      text = '';

      for (let i = 0; i <= level; i++) {
        text += `%${i + 1 + (i === level ? '' : '.')}`;
      }
    } else {
      text = text.replace(/\d/, level + 1);
    }
  }

  return {
    format,
    text,
    align
  };
};

exports.default = _default;
//# sourceMappingURL=getListStyle.js.map