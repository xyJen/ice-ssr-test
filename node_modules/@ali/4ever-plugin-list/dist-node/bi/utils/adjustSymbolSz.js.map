{"version":3,"sources":["../../../../src/bi/utils/adjustSymbolSz.ts"],"names":["adjustSymbolSz","controller","isIncreasingSz","document","data","value","wholeListItemSelected","listSelections","length","map","block","key","forEach","node","getNode","listSymbolStyle","list","symbolStyle","sz","query","direction","newSz","newStyle","newData","command","Commands","setNodeByKey"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEe,SAASA,cAAT,CAAwBC,UAAxB,EAAgDC,cAAhD,EAA+E;AAC5F,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBH,UAAU,CAACI,KAAtC;AACA,QAAMC,qBAAqB,GAAG,uCAAyBL,UAAU,CAACI,KAApC,CAA9B;AACA,MAAI;AAAEE,IAAAA,cAAc,GAAG;AAAnB,MAA0BH,IAA9B;;AACA,MAAIG,cAAc,EAAEC,MAAhB,KAA2B,CAA3B,IAAgCF,qBAAqB,CAACE,MAAtB,GAA+B,CAAnE,EAAsE;AACpED,IAAAA,cAAc,GAAGD,qBAAqB,CAACG,GAAtB,CAA2BC,KAAD,IAAWA,KAAK,CAACC,GAA3C,CAAjB;AACD;;AACDJ,EAAAA,cAAc,IAAIA,cAAc,CAACK,OAAf,CAAwBD,GAAD,IAAS;AAChD,UAAME,IAAI,GAAGV,QAAQ,CAACW,OAAT,CAAiBH,GAAjB,CAAb;AACA,UAAMI,eAAe,GAAG,EACtB,GAAGF,IAAI,EAAET,IAAN,EAAYY,IAAZ,EAAkBC;AADC,KAAxB;AAGA,UAAM;AAAEC,MAAAA,EAAE,GAAGjB,UAAU,CAACkB,KAAX,CAAiB,cAAjB,EAAiCR,GAAjC;AAAP,QAAiDI,eAAvD;AACA,UAAMK,SAAS,GAAGlB,cAAc,GAAG,OAAH,GAAa,MAA7C;AACA,UAAMmB,KAAK,GAAG,8BAAWH,EAAX,EAAeE,SAAf,CAAd;AACA,UAAME,QAAQ,GAAG;AACfJ,MAAAA,EAAE,EAAEG;AADW,KAAjB;AAGA,UAAME,OAAO,GAAG,4BAAcV,IAAI,CAACT,IAAnB,EAAyB;AACvCa,MAAAA,WAAW,EAAE,EACX,GAAGF,eADQ;AAEX,WAAGO;AAFQ;AAD0B,KAAzB,CAAhB;AAMArB,IAAAA,UAAU,CAACuB,OAAX,CAAmBC,sBAASC,YAA5B,EAA0Cb,IAAI,CAACF,GAA/C,EAAoDY,OAApD;AACD,GAlBiB,CAAlB;AAmBD","sourcesContent":["import { Commands, Controller, Block } from '@ali/4ever-cangjie';\nimport { findNextSz } from '@ali/4ever-plugin-sz';\nimport getWholeListItemSelected from './getWholeListItemSelected';\nimport mergeListData from './mergeListData';\n\nexport default function adjustSymbolSz(controller: Controller, isIncreasingSz: boolean): void {\n  const { document, data } = controller.value;\n  const wholeListItemSelected = getWholeListItemSelected(controller.value);\n  let { listSelections = [] } = data;\n  if (listSelections?.length === 0 && wholeListItemSelected.length > 0) {\n    listSelections = wholeListItemSelected.map((block) => block.key);\n  }\n  listSelections && listSelections.forEach((key) => {\n    const node = document.getNode(key) as Block;\n    const listSymbolStyle = {\n      ...node?.data?.list?.symbolStyle,\n    };\n    const { sz = controller.query('getDefaultSz', key) } = listSymbolStyle;\n    const direction = isIncreasingSz ? 'right' : 'left';\n    const newSz = findNextSz(sz, direction);\n    const newStyle = {\n      sz: newSz,\n    };\n    const newData = mergeListData(node.data, {\n      symbolStyle: {\n        ...listSymbolStyle,\n        ...newStyle,\n      },\n    });\n    controller.command(Commands.setNodeByKey, node.key, newData);\n  });\n}\n"],"file":"adjustSymbolSz.js"}