{"version":3,"sources":["../../../../src/bi/utils/getDepthItems.ts"],"names":["controller","value","document","depthItems","firstItem","data","list","listId","isTaskList","parents","getParent","key","nodes","firstItemData","find","n","Block","isBlock","level","hasFirstStart","allListItems","filter"],"mappings":";;;;;;;;;AAAA;;AACA;;eAGEA,UADa,IAKV;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAYD,UAAlB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,UAAU,GAAG,6BAAeH,UAAf,CAAnB;AACA,QAAMI,SAAS,GAAGD,UAAU,CAAC,CAAD,CAA5B;;AAEA,MAAIC,SAAS,IAAIA,SAAS,CAACC,IAAV,CAAeC,IAAhC,EAAsC;AACpC,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAyBJ,SAAS,CAACC,IAAV,CAAeC,IAA9C;AACA,UAAMG,OAAO,GAAGP,QAAQ,CAACQ,SAAT,CAAmBN,SAAS,CAACO,GAA7B,CAAhB;AACA,UAAMC,KAAK,GAAG,CAACH,OAAO,IAAIP,QAAZ,EAAsBU,KAApC;AACA,UAAMC,aAAa,GAAGD,KAAK,CAACE,IAAN,CAAYC,CAAD,IAAO;AACtC,UAAI,CAACC,mBAAMC,OAAN,CAAcF,CAAd,CAAD,IAAqB,CAACA,CAAC,CAACV,IAAF,CAAOC,IAAjC,EAAuC;AACrC,eAAO,KAAP;AACD;;AACD,aAAOS,CAAC,CAACV,IAAF,CAAOC,IAAP,CAAYC,MAAZ,KAAuBA,MAAvB,IAAiCQ,CAAC,CAACV,IAAF,CAAOC,IAAP,CAAYY,KAAZ,KAAsB,CAA9D;AACD,KALqB,CAAtB,CAJoC,CAUpC;AACA;;AACA,UAAMC,aAAa,GAAGN,aAAa,EAAEF,GAAf,KAAuBP,SAAS,CAACO,GAAvD;;AACA,QAAIQ,aAAJ,EAAmB;AACjB,YAAMC,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAcN,CAAD,IAAOC,mBAAMC,OAAN,CAAcF,CAAd,KAAoBA,CAAC,CAACV,IAAF,CAAOC,IAAP,EAAaC,MAAb,KAAwBA,MAAhE,CAArB;AACA,aAAO;AACLY,QAAAA,aADK;AAELhB,QAAAA,UAAU,EAAEK,UAAU,GAAGL,UAAH,GAAgBiB;AAFjC,OAAP;AAID;AACF;;AAED,SAAO;AACLjB,IAAAA,UADK;AAELgB,IAAAA,aAAa,EAAE;AAFV,GAAP;AAID,C","sourcesContent":["import { Block, Controller } from '@ali/4ever-cangjie';\nimport getCurrentItem from './getCurrentItem';\n\nexport default (\n  controller: Controller,\n): {\n  depthItems: Array<Block | null>;\n  hasFirstStart: boolean;\n} => {\n  const { value } = controller;\n  const { document } = value;\n  const depthItems = getCurrentItem(controller);\n  const firstItem = depthItems[0];\n\n  if (firstItem && firstItem.data.list) {\n    const { listId, isTaskList } = firstItem.data.list;\n    const parents = document.getParent(firstItem.key);\n    const nodes = (parents || document).nodes;\n    const firstItemData = nodes.find((n) => {\n      if (!Block.isBlock(n) || !n.data.list) {\n        return false;\n      }\n      return n.data.list.listId === listId && n.data.list.level === 0;\n    });\n    // 这里需要判断 firstItem 是否为列表中的第一项\n    // 第一项指的是 level 为 0 的第一个，如果列表中没有一项的 level 为 0，则没有第一项\n    const hasFirstStart = firstItemData?.key === firstItem.key;\n    if (hasFirstStart) {\n      const allListItems = nodes.filter((n) => Block.isBlock(n) && n.data.list?.listId === listId) as Block[];\n      return {\n        hasFirstStart,\n        depthItems: isTaskList ? depthItems : allListItems,\n      };\n    }\n  }\n\n  return {\n    depthItems,\n    hasFirstStart: false,\n  };\n};\n"],"file":"getDepthItems.js"}