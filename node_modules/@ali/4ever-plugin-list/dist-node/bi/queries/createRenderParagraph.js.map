{"version":3,"sources":["../../../../src/bi/queries/createRenderParagraph.tsx"],"names":["createRenderParagraph","configs","Paragraph","EditParagraph","_","props","children","node","data","list","paragraph"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;uBAF4B,a;;AAIrB,SAASA,qBAAT,CAA+BC,OAA/B,EAA6D;AAClE,QAAMC,SAAS,GAAG,6BAAeC,kCAAf,CAAlB;AAEA,SAAO,CAACC,CAAD,EAAIC,KAAJ,KAAsC;AAC3C,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqBF,KAA3B;;AACA,QAAI,CAACE,IAAI,CAACC,IAAL,EAAWC,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED,wBACE,eAAC,SAAD,6BAAeJ,KAAf,EAA0BJ,OAAO,CAACS,SAAlC,GACGJ,QAAQ,EADX,CADF;AAKD,GAXD;AAYD","sourcesContent":["import * as React from 'react';\nimport createListItem from '../components/createListItem';\nimport { Block, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { EditParagraph } from '@ali/4ever-plugin-paragraph';\n\nexport function createRenderParagraph(configs: Record<string, any>) {\n  const Paragraph = createListItem(EditParagraph);\n\n  return (_, props: RenderNodeProps<Block>) => {\n    const { children, node } = props;\n    if (!node.data?.list) {\n      return null;\n    }\n\n    return (\n      <Paragraph {...props} {...configs.paragraph}>\n        {children()}\n      </Paragraph>\n    );\n  };\n}\n"],"file":"createRenderParagraph.js"}