{"version":3,"sources":["../../../../src/bi/mobile/index.tsx"],"names":["mobileBiFactory","config","listConfig","list","renderEditable","props","controller","next","toolbar","commands","biCommands","queries","renderParagraph","actions","onAction","injectToNode","onCangjieInput","onCangjiePaste","onKeyDown","getNodeStyle","models","klass","type","data","ind","undefined","Object","spacing","jc","String","blockquote","Boolean","calloutPr","subjectPr","shd","placeholder"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAb4B,a;;AAe5B,MAAMA,eAA0B,GAAIC,MAAD,IAAY;AAC7C,QAAMC,UAAU,GAAGD,MAAM,CAACE,IAAP,IAAe,EAAlC;AACA,SAAO,EACL,GAAG,iBAAU,EAAV,CADE;;AAELC,IAAAA,cAAc,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,EAA0B;AACtC;AAAA;AACE;AACA,uBAAC,oBAAD,6BACMF,KADN;AAEE,UAAA,UAAU,EAAEC;AAFd,yBAIE,eAAC,8BAAD;AAAyB,UAAA,UAAU,EAAEA;AAArC,WACGC,IAAI,EADP,CAJF;AAFF;AAWD,KAdI;;AAeLC,IAAAA,OAAO,EAAE,sBAAQN,UAAR,CAfJ;AAgBLO,IAAAA,QAAQ,EAAEC,sBAhBL;AAiBLC,IAAAA,OAAO,EAAE,EACP,GAAGA,gBADI;AAEPC,MAAAA,eAAe,EAAE,kDAAsBX,MAAtB;AAFV,KAjBJ;AAqBLY,IAAAA,OAAO,EAAPA,gBArBK;AAsBLC,IAAAA,QAAQ,EAARA,iBAtBK;AAuBLC,IAAAA,YAAY,EAAE,+BAAmBb,UAAnB,CAvBT;AAwBLc,IAAAA,cAAc,EAAdA,uBAxBK;AAyBLC,IAAAA,cAAc,EAAE,8BAzBX;AA0BLC,IAAAA,SAAS,EAATA,kBA1BK;AA2BLC,IAAAA,YAAY,EAAZA,mBA3BK;AA4BLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,IAAI,EAAE,WAFA;AAGNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,GAAG,EAAE,CAACC,SAAD,EAAYC,MAAZ,CADD;AAEJC,QAAAA,OAAO,EAAE,CAACF,SAAD,EAAYC,MAAZ,CAFL;AAGJE,QAAAA,EAAE,EAAE,CAACH,SAAD,EAAYI,MAAZ,CAHA;AAIJC,QAAAA,UAAU,EAAE,CAACL,SAAD,EAAYM,OAAZ,CAJR;AAKJ5B,QAAAA,IAAI,EAAEuB,MALF;AAMJM,QAAAA,SAAS,EAAE,CAACP,SAAD,EAAYC,MAAZ,CANP;AAOJO,QAAAA,SAAS,EAAE,CAACR,SAAD,EAAYC,MAAZ,CAPP;AAQJQ,QAAAA,GAAG,EAAE,CAACT,SAAD,EAAYC,MAAZ;AARD;AAHA,KA5BH;AA0CLS,IAAAA,WAAW,EAAE,0BAAYjC,UAAZ;AA1CR,GAAP;AA4CD,CA9CD;;eAgDeF,e","sourcesContent":["import * as React from 'react';\nimport type { BiFactory } from '@ali/4ever-cangjie';\nimport toolbar from './toolbar';\nimport { queries } from '../queries';\nimport { actions } from '../actions';\nimport onAction from './onAction';\nimport onKeyDown from '../handlers/onKeyDown';\nimport ListWrapper from '../components/listWrapper';\nimport onCangjieInput from '../handlers/onCangjieInput';\nimport placeholder from '../placeholder';\nimport createOnCangjiePaste from '../handlers/onCangjiePaste';\nimport { createRenderParagraph } from '../queries/createRenderParagraph';\nimport { biCommands } from '../commands/biCommands';\nimport moFactory from '../../mo';\nimport { createInjectToNode, getNodeStyle, ListSymbolWarmupWrapper } from '../../utils';\n\nconst mobileBiFactory: BiFactory = (config) => {\n  const listConfig = config.list || {};\n  return {\n    ...moFactory({}),\n    renderEditable(props, controller, next) {\n      return (\n        // @ts-ignore\n        <ListWrapper\n          {...props}\n          controller={controller}\n        >\n          <ListSymbolWarmupWrapper controller={controller}>\n            {next()}\n          </ListSymbolWarmupWrapper>\n        </ListWrapper>\n      );\n    },\n    toolbar: toolbar(listConfig),\n    commands: biCommands,\n    queries: {\n      ...queries,\n      renderParagraph: createRenderParagraph(config),\n    },\n    actions,\n    onAction,\n    injectToNode: createInjectToNode(listConfig),\n    onCangjieInput,\n    onCangjiePaste: createOnCangjiePaste(),\n    onKeyDown,\n    getNodeStyle,\n    models: {\n      klass: 'block',\n      type: 'paragraph',\n      data: {\n        ind: [undefined, Object],\n        spacing: [undefined, Object],\n        jc: [undefined, String],\n        blockquote: [undefined, Boolean],\n        list: Object,\n        calloutPr: [undefined, Object],\n        subjectPr: [undefined, Object],\n        shd: [undefined, Object],\n      },\n    },\n    placeholder: placeholder(listConfig),\n  };\n};\n\nexport default mobileBiFactory;\n"],"file":"index.js"}