{"version":3,"sources":["../../../../src/bi/handlers/onBackspace.ts"],"names":["event","controller","next","value","selection","startBlock","command","Commands","deleteBackward","isExpanded","anchor","offset","currentItem","isAtBlockStart","isAtStartOfNode","preventDefault"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;eAEe,CAACA,KAAD,EAAQC,UAAR,EAAgCC,IAAhC,KAAyC;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAYF,UAAlB;AACA,QAAMG,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;;AAEA,MAAI,gCAAoBJ,UAApB,CAAJ,EAAqC;AACnC,WAAOA,UAAU,CAACK,OAAX,CAAmBC,sBAASC,cAA5B,EAA4C,CAA5C,CAAP;AACD;;AAED,MACE,CAACJ,SAAD,IACA,CAACC,UADD,IAEAD,SAAS,CAACK,UAFV,IAGCL,SAAS,CAACM,MAAX,CAAgCC,MAAhC,GAAyC,CAJ3C,EAKE,OAAOT,IAAI,EAAX;AAEF,QAAMU,WAAW,GAAGT,KAAK,CAACE,UAA1B;AACA,MAAI,CAACO,WAAL,EAAkB,OAAOV,IAAI,EAAX;AAElB,QAAMW,cAAc,GAAGT,SAAS,CAACM,MAAV,CAAiBI,eAAjB,CAAiCT,UAAjC,CAAvB;AACA,MAAI,CAAC,oBAAQO,WAAR,CAAD,IAAyB,CAACC,cAA9B,EAA8C,OAAOX,IAAI,EAAX;;AAE9C,MAAI,CAAC,mBAAOU,WAAP,CAAL,EAA0B;AACxB,mCAAmBA,WAAnB,EAAgCX,UAAhC;AACA,WAAOC,IAAI,EAAX;AACD;;AAAA;AACDF,EAAAA,KAAK,CAACe,cAAN;;AACA,MAAI,oBAAQH,WAAR,KAAwB,yBAAaA,WAAb,IAA4B,CAAxD,EAA2D;AACzD,WAAO,iCAAkBX,UAAlB,EAA8B,CAAC,CAA/B,CAAP;AACD;;AACD,SAAO,8BAAeA,UAAf,CAAP;AACD,C","sourcesContent":["import { Block, Controller, Selection, Text, Commands, TextPoint } from '@ali/4ever-cangjie';\nimport { increaseItemDepth, removeListNode } from '../commands';\nimport { getItemDepth, isEmpty, assertZeroCharacter, mergeMabeGroupNode, isList } from '../utils';\n\nexport default (event, controller: Controller, next) => {\n  const { value } = controller;\n  const selection = value.selection as Selection;\n  const startBlock = value.startBlock as Block;\n  \n  if (assertZeroCharacter(controller)) {\n    return controller.command(Commands.deleteBackward, 2);\n  }\n\n  if (\n    !selection ||\n    !startBlock ||\n    selection.isExpanded ||\n    (selection.anchor as TextPoint).offset > 0\n  ) return next();\n\n  const currentItem = value.startBlock;\n  if (!currentItem) return next();\n\n  const isAtBlockStart = selection.anchor.isAtStartOfNode(startBlock);\n  if (!isEmpty(currentItem) && !isAtBlockStart) return next();\n\n  if (!isList(currentItem)) {\n    mergeMabeGroupNode(currentItem, controller);\n    return next()\n  };\n  event.preventDefault();\n  if (isEmpty(currentItem) && getItemDepth(currentItem) > 0) {\n    return increaseItemDepth(controller, -1);\n  }\n  return removeListNode(controller);\n};\n"],"file":"onBackspace.js"}