{"version":3,"sources":["../../../../src/bi/handlers/onEnter.ts"],"names":["isEmptyNode","block","onlyOneChild","nodes","length","isTextNode","Text","isText","isEmpty","text","event","controller","next","value","selection","currentItem","startBlock","firstNode","getFirstNode","firstText","startsWith1","STATS_WITH_1","test","startsWitha","STATS_WITH_a","startsWithA","STATS_WITH_A","specialField","data","list","preventDefault","isCollapsed","anchor","isAtEndOfNode","command","Commands","removeTextByKey","key","DEFAULT_NUMBER_LIST_ARRAY","shiftKey"],"mappings":";;;;;;;AAAA;;AACA;;AAMA;;AACA;;AACA;;AAEA,SAASA,WAAT,CAAqBC,KAArB,EAA4C;AAC1C,QAAMC,YAAY,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,KAAuB,CAA5C;;AACA,QAAMC,UAAU,GAAGC,kBAAKC,MAAL,CAAYN,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAZ,CAAnB;;AACA,QAAMK,OAAO,GAAG,CAACP,KAAK,CAACQ,IAAvB;AACA,SAAOP,YAAY,IAAIG,UAAhB,IAA8BG,OAArC;AACD;;eAEc,CAACE,KAAD,EAAQC,UAAR,EAAgCC,IAAhC,KAAyC;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAYF,UAAlB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAgBD,KAAtB;AACA,QAAME,WAAW,GAAGF,KAAK,CAACG,UAA1B;AACA,MAAI,CAACD,WAAL,EAAkB,OAAOH,IAAI,EAAX;AAClB,QAAMK,SAAS,GAAGF,WAAW,CAACG,YAAZ,EAAlB;AACA,QAAMC,SAAS,GAAGF,SAAS,CAACR,IAAV,IAAkB,EAApC;;AACA,QAAMW,WAAW,GAAGC,qBAAaC,IAAb,CAAkBH,SAAlB,CAApB;;AACA,QAAMI,WAAW,GAAGC,qBAAaF,IAAb,CAAkBH,SAAlB,CAApB;;AACA,QAAMM,WAAW,GAAGC,qBAAaJ,IAAb,CAAkBH,SAAlB,CAApB;;AACA,QAAMQ,YAAY,GAAGP,WAAW,IAAIG,WAAf,IAA8BE,WAAnD;AACA,MAAI,CAAC,CAACV,WAAD,IAAgB,CAACA,WAAW,CAACa,IAAZ,CAAiBC,IAAnC,KAA4C,CAACF,YAAjD,EAA+D,OAAOf,IAAI,EAAX;AAC/DF,EAAAA,KAAK,CAACoB,cAAN;;AAGA,MAAI9B,WAAW,CAACe,WAAD,CAAf,EAA8B;AAC5B,QAAI,yBAAaA,WAAb,IAA4B,CAAhC,EAAmC;AACjC,aAAO,iCAAkBJ,UAAlB,EAA8B,CAAC,CAA/B,CAAP;AACD;;AACD,WAAO,8BAAeA,UAAf,CAAP;AACD;;AAED,MACE,CAAC,mBAAOI,WAAP,CADH,EAEE;AACA,QAAID,SAAS,CAACiB,WAAV,IACFjB,SAAS,CAACkB,MAAV,CAAiBC,aAAjB,CAA+BlB,WAA/B,CADF,EAC+C;AAC3C,UAAIK,WAAJ,EAAiB;AACfT,QAAAA,UAAU,CAACuB,OAAX,CAAmBC,sBAASC,eAA5B,EAA6CnB,SAAS,CAACoB,GAAvD,EAA4D,CAA5D,EAA+D,IAA/D;AACA,wCAAiB1B,UAAjB,EAA6B,OAA7B,EAAsC2B,4CAA0B,CAA1B,CAAtC;AACD,OAHD,MAGO,IAAIf,WAAJ,EAAiB;AACtBZ,QAAAA,UAAU,CAACuB,OAAX,CAAmBC,sBAASC,eAA5B,EAA6CnB,SAAS,CAACoB,GAAvD,EAA4D,CAA5D,EAA+D,IAA/D;AACA,wCAAiB1B,UAAjB,EAA6B,OAA7B,EAAsC2B,4CAA0B,CAA1B,CAAtC;AACD,OAHM,MAGA,IAAIb,WAAJ,EAAiB;AACtBd,QAAAA,UAAU,CAACuB,OAAX,CAAmBC,sBAASC,eAA5B,EAA6CnB,SAAS,CAACoB,GAAvD,EAA4D,CAA5D,EAA+D,IAA/D;AACA,wCAAiB1B,UAAjB,EAA6B,OAA7B,EAAsC2B,4CAA0B,CAA1B,CAAtC;AACD;AACJ,KAZD,MAYO;AACL,aAAO1B,IAAI,EAAX;AACD;AACF;;AACD,SAAO,6BAAcD,UAAd,EAA0BD,KAAK,CAAC6B,QAAhC,CAAP;AACD,C","sourcesContent":["import { Block, Commands, Controller, Text } from '@ali/4ever-cangjie';\nimport {\n  increaseItemDepth,\n  splitListItem,\n  removeListNode,\n  toggleWrapInList,\n} from '../commands';\nimport { getItemDepth, isList } from '../utils';\nimport { STATS_WITH_1, STATS_WITH_a, STATS_WITH_A } from '../regexp';\nimport { DEFAULT_NUMBER_LIST_ARRAY } from '../../utils/listStyleMapping';\n\nfunction isEmptyNode(block: Block): boolean {\n  const onlyOneChild = block.nodes.length === 1;\n  const isTextNode = Text.isText(block.nodes[0]);\n  const isEmpty = !block.text;\n  return onlyOneChild && isTextNode && isEmpty;\n}\n\nexport default (event, controller: Controller, next) => {\n  const { value } = controller;\n  const { selection } = value;\n  const currentItem = value.startBlock;\n  if (!currentItem) return next();\n  const firstNode = currentItem.getFirstNode();\n  const firstText = firstNode.text || '';\n  const startsWith1 = STATS_WITH_1.test(firstText);\n  const startsWitha = STATS_WITH_a.test(firstText);\n  const startsWithA = STATS_WITH_A.test(firstText);\n  const specialField = startsWith1 || startsWitha || startsWithA;\n  if ((!currentItem || !currentItem.data.list) && !specialField) return next();\n  event.preventDefault();\n\n\n  if (isEmptyNode(currentItem)) {\n    if (getItemDepth(currentItem) > 0) {\n      return increaseItemDepth(controller, -1);\n    }\n    return removeListNode(controller);\n  }\n\n  if (\n    !isList(currentItem)\n  ) {\n    if (selection.isCollapsed &&\n      selection.anchor.isAtEndOfNode(currentItem)) {\n        if (startsWith1) {\n          controller.command(Commands.removeTextByKey, firstNode.key, 0, '1.');\n          toggleWrapInList(controller, 'olist', DEFAULT_NUMBER_LIST_ARRAY[0]);\n        } else if (startsWitha) {\n          controller.command(Commands.removeTextByKey, firstNode.key, 0, 'a.');\n          toggleWrapInList(controller, 'olist', DEFAULT_NUMBER_LIST_ARRAY[8]);\n        } else if (startsWithA) {\n          controller.command(Commands.removeTextByKey, firstNode.key, 0, 'A.');\n          toggleWrapInList(controller, 'olist', DEFAULT_NUMBER_LIST_ARRAY[3]);\n        }\n    } else {\n      return next();\n    }\n  }\n  return splitListItem(controller, event.shiftKey);\n};\n"],"file":"onEnter.js"}