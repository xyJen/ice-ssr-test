{"version":3,"sources":["../../../../src/bi/handlers/onAction.ts"],"names":["onAction","action","controller","next","isHighlight","isActionFactory","isAdjustSz","isSetSz","isSetFonts","type","payload","LIST_TOGGLE_LIST","listType","listStyleType","LIST_TRANSFORM","LIST_REMOVE_LIST","LIST_SET_CHECK_STATUS","node","checked","key","LIST_SELECT_SYMBOL","listSelections","isSelected","CLEAR_RANGE_SELECTION","CLEAR_LIST_SELECTIONS","SELECT_LIST_SELECTIONS","sz","isIncreasingSz","fonts","COLOR_SET","color","highlight","shd","MARK_TOGGLE","mark","symbolStyle","HEADING_SET","heading","isParagraph","Paragraph","TYPE","undefined","SzUtil","fromHeadingType","bold","CONTINUE_NUMBERING","RESTART_NUMBERING"],"mappings":"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","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { SzUtil } from '@ali/4ever-utils';\nimport {\n  CONTINUE_NUMBERING,\n  CLEAR_LIST_SELECTIONS,\n  CLEAR_RANGE_SELECTION,\n  LIST_REMOVE_LIST,\n  LIST_SET_CHECK_STATUS,\n  LIST_SELECT_SYMBOL,\n  LIST_TOGGLE_LIST,\n  LIST_TRANSFORM,\n  RESTART_NUMBERING,\n  SELECT_LIST_SELECTIONS,\n} from '../actions';\nimport toggleWrapInList from '../commands/toggleWrapInList';\nimport transform from '../commands/transform';\nimport removeListNode from '../commands/removeListNode';\nimport toggleCheckStatus from '../commands/toggleCheckStatus';\nimport { COLOR_SET } from '@ali/4ever-plugin-color';\nimport { HEADING_SET } from '@ali/4ever-plugin-heading';\nimport { MARK_TOGGLE } from '@ali/4ever-plugin-marks';\nimport {\n  clearRangeSelection,\n  clearListSelections,\n  selectListSelections,\n  selectSymbol,\n  setSymbolStyle,\n  adjustSymbolSz,\n} from '../utils';\nimport { continueNumbering, restartNumbering } from '../commands';\n\nexport default function onAction(action, controller: Controller, next) {\n  const isHighlight = controller.isActionFactory('isHighlight');\n  const isAdjustSz = controller.isActionFactory('isAdjustSz');\n  const isSetSz = controller.isActionFactory('isSetSz');\n  const isSetFonts = controller.isActionFactory('isSetFonts');\n\n  const { type, payload } = action;\n  if (type === LIST_TOGGLE_LIST) {\n    const { listType, listStyleType } = payload;\n    return toggleWrapInList(controller, listType, listStyleType);\n  }\n  if (type === LIST_TRANSFORM) {\n    const { listType, listStyleType } = payload;\n    return transform(controller, listType, listStyleType);\n    // return controller.command(transform, listType, listStyleType);\n  }\n  if (type === LIST_REMOVE_LIST) {\n    return removeListNode(controller);\n  }\n  if (type === LIST_SET_CHECK_STATUS) {\n    const { node, checked } = payload;\n    return toggleCheckStatus(controller, node.key, checked);\n  }\n  if (type === LIST_SELECT_SYMBOL) {\n    const { listSelections, isSelected } = payload;\n    return selectSymbol(controller, listSelections, isSelected);\n  }\n  if (type === CLEAR_RANGE_SELECTION) {\n    const { node } = payload;\n    return clearRangeSelection(controller, node);\n  }\n  if (type === CLEAR_LIST_SELECTIONS) {\n    return clearListSelections(controller);\n  }\n  if (type === SELECT_LIST_SELECTIONS) {\n    const { listSelections } = payload;\n    return selectListSelections(controller, listSelections);\n  }\n  if (isSetSz?.(action)) {\n    const { sz } = payload;\n    setSymbolStyle(controller, { sz });\n  }\n  if (isAdjustSz?.(action)) {\n    const { isIncreasingSz } = payload;\n    adjustSymbolSz(controller, isIncreasingSz);\n  }\n  if (isSetFonts?.(action)) {\n    const { fonts } = payload;\n    setSymbolStyle(controller, { fonts });\n  }\n  if (type === COLOR_SET) {\n    const { color } = payload;\n    setSymbolStyle(controller, { color });\n  }\n  if (isHighlight?.(action)) {\n    const { highlight } = action.payload;\n    setSymbolStyle(controller, { shd: highlight });\n  }\n  if (type === MARK_TOGGLE) {\n    const { mark } = payload;\n    const symbolStyle = {};\n    symbolStyle[mark] = true;\n    setSymbolStyle(controller, symbolStyle);\n  }\n  if (type === HEADING_SET) {\n    const { heading } = payload;\n    const isParagraph = heading === Paragraph.TYPE;\n    setSymbolStyle(controller, {\n      // undefined 代表清除\n      sz: isParagraph ? undefined : SzUtil.fromHeadingType(heading),\n      bold: !isParagraph,\n    });\n  }\n  if (type === CONTINUE_NUMBERING) {\n    continueNumbering(controller);\n  }\n  if (type === RESTART_NUMBERING) {\n    restartNumbering(controller);\n  }\n  return next();\n}\n"],"file":"onAction.js"}