{"version":3,"sources":["../../../../src/bi/handlers/onIncrease.ts"],"names":["isTabHotKey","event","controller","offset","next","value","selection","currentItems","firstItem","isAtStartOfNode","anchor","isCollapsed","preventDefault","blocks","document","getLeafBlocksAtRange","length"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AAEA,MAAMA,WAAW,GAAG,2BAAY,KAAZ,CAApB;;eAEe,CACbC,KADa,EAEbC,UAFa,EAGbC,MAHa,EAIbC,IAJa,KAKE;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAgBD,KAAtB;AACA,QAAME,YAAY,GAAG,2BAAeL,UAAf,CAArB;AACA,MAAI,CAACI,SAAD,IAAc,CAACC,YAAf,IAA+B,CAAC,mCAAuBL,UAAvB,CAApC,EAAwE,OAAOE,IAAI,EAAX;;AACxE,MAAIJ,WAAW,CAACC,KAAD,CAAf,EAAwB;AACtB,UAAMO,SAAS,GAAGD,YAAY,CAAC,CAAD,CAA9B;AACA,UAAME,eAAe,GACnBD,SAAS,IAAIF,SAAS,CAACI,MAAV,CAAiBD,eAAjB,CAAiCD,SAAjC,CADf;AAEA,QAAI,CAACC,eAAD,IAAoBH,SAAS,CAACK,WAAlC,EAA+C,OAAOP,IAAI,EAAX;AAChD;;AACD,MAAIE,SAAS,CAACK,WAAd,EAA2B;AACzBV,IAAAA,KAAK,IAAIA,KAAK,CAACW,cAAN,EAAT;AACA,WAAO,iCAAkBV,UAAlB,EAA8BC,MAA9B,CAAP;AACD;AACD;;;AACA,QAAMU,MAAM,GAAGR,KAAK,CAACS,QAAN,CAAeC,oBAAf,CAAoCT,SAApC,CAAf;;AACA,MAAI,CAACA,SAAS,CAACK,WAAX,IAA0BE,MAAM,CAACG,MAAP,GAAgB,CAA9C,EAAiD;AAC/Cf,IAAAA,KAAK,IAAIA,KAAK,CAACW,cAAN,EAAT;AACA,WAAO,iCAAkBV,UAAlB,EAA8BC,MAA9B,CAAP;AACD;;AACD,SAAOC,IAAI,EAAX;AACD,C","sourcesContent":["import { KeyboardEvent } from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { isKeyHotkey } from 'is-hotkey';\nimport { increaseItemDepth } from '../commands';\nimport { getCurrentItem, getSelectionInListItem } from '../utils';\n\nconst isTabHotKey = isKeyHotkey('tab');\n\nexport default (\n  event: KeyboardEvent,\n  controller: Controller,\n  offset: 1 | -1,\n  next: Function,\n): Controller => {\n  const { value } = controller;\n  const { selection } = value;\n  const currentItems = getCurrentItem(controller);\n  if (!selection || !currentItems || !getSelectionInListItem(controller)) return next();\n  if (isTabHotKey(event)) {\n    const firstItem = currentItems[0];\n    const isAtStartOfNode =\n      firstItem && selection.anchor.isAtStartOfNode(firstItem);\n    if (!isAtStartOfNode && selection.isCollapsed) return next();\n  }\n  if (selection.isCollapsed) {\n    event && event.preventDefault();\n    return increaseItemDepth(controller, offset);\n  }\n  /* 判断选中多行时再批量操作 */\n  const blocks = value.document.getLeafBlocksAtRange(selection);\n  if (!selection.isCollapsed && blocks.length > 0) {\n    event && event.preventDefault();\n    return increaseItemDepth(controller, offset);\n  }\n  return next();\n};\n"],"file":"onIncrease.js"}