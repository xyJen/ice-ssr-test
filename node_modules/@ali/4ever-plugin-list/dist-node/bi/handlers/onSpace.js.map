{"version":3,"sources":["../../../../src/bi/handlers/onSpace.ts"],"names":["getListStyleType","symbol","DEFAULT_BULLET_LIST_ARRAY","getListType","chars","isLowerLetter","LOWER_LETTER_REG","test","isUpperLetter","UPPER_LETTER_REG","isNumAllBracket","EN_NUM_BRACKET","ZH_NUM_BRACKET","isNumHalfBracket","EN_NUM_HALF_BRACKET","ZH_NUM_HALF_BRACKET","isLetHalfBracket","EN_LET_HALF_BRACKET","ZH_LET_HALF_BRACKET","listType","DEFAULT_NUMBER_LIST_ARRAY","isMatchClosestList","isNumber","closestListItem","currentItem","listStyleType","data","list","typeObj","mapping","level","remainder","relativeLevel","RELATIVE_LEVEL","includes","type","format","replace","event","editor","next","value","Block","isBlock","selection","isExpanded","blockquote","query","startBlock","document","startText","getFirstText","startOffset","anchor","offset","undefined","text","slice","types","composing","ARABIC_REG","isNumberDon","NUMBER_DON","listId","matchChars","Number","inputNumber","restart","prevBlock","isOrdered","nextBlock","getNextBlock","key","blockItem","isConnect","isConnectPrevClosestList","isConnectNextClosestList","find","result","isChecked","preventDefault","command","Commands","moveFocusToStartOfNode","del","dispatch","mdType"],"mappings":"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","sourcesContent":["import { Block, Controller, Commands, TextPoint, CangjieInputEvent } from '@ali/4ever-cangjie';\nimport toggleList from '../commands/toggleList';\nimport {\n  isConnectPrevClosestList,\n  isConnectNextClosestList,\n  shortcutTypes,\n  getCurrentItem,\n  getListData,\n  getListId,\n  getMatchLevel,\n  getPrevClosestListItem,\n} from '../utils';\nimport {\n  LOWER_LETTER_REG,\n  UPPER_LETTER_REG,\n  ARABIC_REG,\n  EN_NUM_BRACKET,\n  ZH_NUM_BRACKET,\n  EN_NUM_HALF_BRACKET,\n  ZH_NUM_HALF_BRACKET,\n  EN_LET_HALF_BRACKET,\n  ZH_LET_HALF_BRACKET,\n  NUMBER_DON,\n} from '../regexp';\nimport {\n  DEFAULT_BULLET_LIST_ARRAY,\n  DEFAULT_NUMBER_LIST_ARRAY,\n  mapping,\n} from '../../utils/listStyleMapping';\nimport { RELATIVE_LEVEL } from '../../utils/generateSymbol';\nimport { transformString } from '../../utils/transformNumber';\n\nconst getListStyleType = (symbol: string): string | null => {\n  if (symbol === '*') return DEFAULT_BULLET_LIST_ARRAY[0];\n  if (symbol === '-') return DEFAULT_BULLET_LIST_ARRAY[6];\n  if (symbol === '+') return DEFAULT_BULLET_LIST_ARRAY[7];\n  return null;\n};\n\nconst getListType = (chars) => {\n  const isLowerLetter = LOWER_LETTER_REG.test(chars);\n  const isUpperLetter = UPPER_LETTER_REG.test(chars);\n  const isNumAllBracket = EN_NUM_BRACKET.test(chars) || ZH_NUM_BRACKET.test(chars);\n  const isNumHalfBracket = EN_NUM_HALF_BRACKET.test(chars) || ZH_NUM_HALF_BRACKET.test(chars);\n  const isLetHalfBracket = EN_LET_HALF_BRACKET.test(chars) || ZH_LET_HALF_BRACKET.test(chars);\n  let listType;\n  if (isLowerLetter) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[8];\n  } else if (isUpperLetter) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[3];\n  } else if (isNumAllBracket) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[9];\n  } else if (isNumHalfBracket) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[1];\n  } else if (isLetHalfBracket) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[10];\n  }\n  return listType;\n};\n\n/**\n * 列表类型是否匹配\n * @description 根据输入字段预判的列表类型跟最近的列表项的类型是否一致\n */\nconst isMatchClosestList = (\n  {\n    isNumber,\n    isLowerLetter,\n    isUpperLetter,\n    isNumAllBracket,\n    isNumHalfBracket,\n    isLetHalfBracket,\n  },\n  closestListItem: Block,\n  currentItem: Block,\n): boolean => {\n  const listStyleType = closestListItem?.data?.list?.listStyleType;\n  const typeObj = mapping[listStyleType];\n  const level = getMatchLevel(currentItem);\n  if (typeObj) {\n    const remainder = level % 3;\n    const relativeLevel = RELATIVE_LEVEL.includes(remainder) ? remainder : 0;\n    const type = typeObj[relativeLevel][0];\n    const format = typeObj[relativeLevel][1].replace(/\\d+/, '');\n    if (\n      (isNumber && type === 'decimal' && format === '%.') ||\n      (isLowerLetter && type === 'lowerLetter' && format === '%.') ||\n      (isUpperLetter && type === 'upperLetter' && format === '%.') ||\n      (isNumAllBracket && type === 'decimal' && format === '(%)') ||\n      (isNumHalfBracket && type === 'decimal' && format === '%)') ||\n      (isLetHalfBracket && type === 'lowerLetter' && format === '%1)')\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default (event: InputEvent | CangjieInputEvent, editor: Controller, next: () => void) => {\n  const { value } = editor;\n  const currentItem = getCurrentItem(editor)[0];\n  if (\n    !Block.isBlock(currentItem) ||\n    value.selection?.isExpanded ||\n    currentItem?.data.list ||\n    currentItem?.data.blockquote ||\n    editor.query('isSelectionInHeading')\n  ) {\n    return next();\n  }\n\n  const { startBlock, selection, document } = value;\n  // 只有在段落开头时，才允许插入列表\n  if (value.startText !== value.startBlock?.getFirstText()) {\n    return next();\n  }\n  const startOffset = (selection?.anchor as TextPoint).offset;\n  const chars =\n    (startOffset !== undefined &&\n      startBlock?.text.slice(0, startOffset).replace(/\\s*/g, '')) ||\n    '';\n  const types = shortcutTypes(chars);\n\n  if (!startBlock || !types || value.composing) return next();\n  const isNumber = ARABIC_REG.test(chars);\n  const isNumberDon = NUMBER_DON.test(chars);\n  const isLowerLetter = LOWER_LETTER_REG.test(chars);\n  const isUpperLetter = UPPER_LETTER_REG.test(chars);\n  const isNumAllBracket = EN_NUM_BRACKET.test(chars) || ZH_NUM_BRACKET.test(chars);\n  const isNumHalfBracket = EN_NUM_HALF_BRACKET.test(chars) || ZH_NUM_HALF_BRACKET.test(chars);\n  const isLetHalfBracket = EN_LET_HALF_BRACKET.test(chars) || ZH_LET_HALF_BRACKET.test(chars);\n  if (chars === '*' || chars === '-' || chars === '+') {\n    const listStyleType = getListStyleType(chars) || undefined;\n    const data = getListData({\n      listId: getListId({ value, listType: listStyleType }),\n      type: 'ul',\n      level: 0,\n      listStyleType,\n    });\n    toggleList(editor, data, 'ulist');\n  } else if (\n    isNumber ||\n    isLowerLetter ||\n    isUpperLetter ||\n    isNumAllBracket ||\n    isNumHalfBracket ||\n    isLetHalfBracket\n  ) {\n    let type = '';\n    if (isUpperLetter || isLowerLetter || isLetHalfBracket) {\n      type = 'letter';\n    }\n    const matchChars = chars.slice(Number(isNumAllBracket), -1);\n    const inputNumber = transformString(matchChars, type);\n    const listId = getListId({ value, restart: inputNumber === 1 });\n    let listType = getListType(chars);\n    if (isNumberDon) {\n      listType = DEFAULT_NUMBER_LIST_ARRAY[11];\n    } else if (isNumber) {\n      listType = DEFAULT_NUMBER_LIST_ARRAY[0];\n    }\n    let data = getListData({\n      listId,\n      type: 'ol',\n      level: 0,\n      listStyleType: listType,\n    });\n    const prevBlock = getPrevClosestListItem(value, currentItem as Block, {\n      isOrdered: true,\n    }) as Block;\n    const nextBlock = document.getNextBlock(currentItem.key) as Block;\n    const closestListItem = [\n      { blockItem: prevBlock, isConnect: isConnectPrevClosestList },\n      { blockItem: nextBlock, isConnect: isConnectNextClosestList },\n    ].find(({ blockItem, isConnect }) => {\n      const result = (\n        blockItem &&\n        Block.isBlock(currentItem) &&\n        isMatchClosestList(\n          {\n            isNumber,\n            isLowerLetter,\n            isUpperLetter,\n            isNumAllBracket,\n            isNumHalfBracket,\n            isLetHalfBracket,\n          },\n          blockItem,\n          currentItem,\n        ) &&\n        isConnect(value, blockItem, inputNumber)\n      );\n      return result;\n    });\n    if (closestListItem) {\n      data = {\n        list: {\n          // @ts-ignore\n          ...closestListItem.blockItem.data.list,\n        },\n      };\n    } else if (inputNumber !== 1) {\n      return next();\n    }\n\n    toggleList(editor, data, 'olist');\n  } else if (chars === '[]') {\n    const data = getListData({\n      listId: getListId({ value }),\n      type: 'tlist',\n      level: 0,\n    });\n    toggleList(editor, data);\n  } else if (chars === '[x]') {\n    const data = getListData({\n      listId: getListId({ value }),\n      type: 'tlist',\n      level: 0,\n    });\n    data.list.isChecked = true;\n    toggleList(editor, data);\n  } else {\n    return next();\n  }\n  event.preventDefault();\n  editor\n    .command(Commands.moveFocusToStartOfNode, startBlock)\n    .command(Commands.del);\n  editor.dispatch('createTriggerMarkdownAction', { mdType: types });\n  return editor;\n};\n"],"file":"onSpace.js"}