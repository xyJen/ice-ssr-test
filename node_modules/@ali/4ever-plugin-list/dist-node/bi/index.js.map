{"version":3,"sources":["../../../src/bi/index.tsx"],"names":["biFactory","config","listConfig","list","contextMenu","renderEditable","props","controller","next","toolbar","menubar","commands","biCommands","queries","renderParagraph","actions","renderToolbar","onAction","injectToNode","onCangjiePaste","onKeyDown","onCangjieInput","getNodeStyle","models","klass","type","data","ind","undefined","Object","spacing","jc","String","blockquote","Boolean","calloutPr","subjectPr","shd","placeholder"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAhB4B,a;;AAmB5B,MAAMA,SAAoB,GAAIC,MAAD,IAAY;AACvC,QAAMC,UAAU,GAAGD,MAAM,CAACE,IAAP,IAAe,EAAlC;AACA,QAAMC,WAAW,GAAG,iCAApB;AAEA,SAAO,EACL,GAAG,oBAAU,EAAV,CADE;;AAELC,IAAAA,cAAc,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,EAA0B;AACtC;AAAA;AACE;AACA,uBAAC,oBAAD,6BACMF,KADN;AAEE,UAAA,UAAU,EAAEC;AAFd,yBAIE,eAAC,8BAAD;AAAyB,UAAA,UAAU,EAAEA;AAArC,WACGC,IAAI,EADP,CAJF;AAFF;AAWD,KAdI;;AAeLC,IAAAA,OAAO,EAAE,sBAAQP,UAAR,CAfJ;AAgBLQ,IAAAA,OAAO,EAAE,uBAhBJ;AAiBLC,IAAAA,QAAQ,EAAEC,sBAjBL;AAkBLC,IAAAA,OAAO,EAAE,EACP,GAAGA,gBADI;AAEPC,MAAAA,eAAe,EAAE,kDAAsBb,MAAtB;AAFV,KAlBJ;AAsBLc,IAAAA,OAAO,EAAPA,gBAtBK;AAuBLX,IAAAA,WAAW,EAAEA,WAAW,CAACF,UAAD,CAvBnB;AAwBLc,IAAAA,aAAa,EAAE,kCAAoBd,UAApB,CAxBV;AAyBLe,IAAAA,QAAQ,EAARA,iBAzBK;AA0BLC,IAAAA,YAAY,EAAE,+BAAmBhB,UAAnB,CA1BT;AA2BLiB,IAAAA,cAAc,EAAE,8BA3BX;AA4BLC,IAAAA,SAAS,EAATA,kBA5BK;AA6BLC,IAAAA,cAAc,EAAdA,uBA7BK;AA8BLC,IAAAA,YAAY,EAAZA,mBA9BK;AA+BLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,IAAI,EAAE,WAFA;AAGNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,GAAG,EAAE,CAACC,SAAD,EAAYC,MAAZ,CADD;AAEJC,QAAAA,OAAO,EAAE,CAACF,SAAD,EAAYC,MAAZ,CAFL;AAGJE,QAAAA,EAAE,EAAE,CAACH,SAAD,EAAYI,MAAZ,CAHA;AAIJC,QAAAA,UAAU,EAAE,CAACL,SAAD,EAAYM,OAAZ,CAJR;AAKJ/B,QAAAA,IAAI,EAAE0B,MALF;AAMJM,QAAAA,SAAS,EAAE,CAACP,SAAD,EAAYC,MAAZ,CANP;AAOJO,QAAAA,SAAS,EAAE,CAACR,SAAD,EAAYC,MAAZ,CAPP;AAQJQ,QAAAA,GAAG,EAAE,CAACT,SAAD,EAAYC,MAAZ;AARD;AAHA,KA/BH;AA6CLS,IAAAA,WAAW,EAAE,0BAAYpC,UAAZ;AA7CR,GAAP;AA+CD,CAnDD;;eAqDeF,S","sourcesContent":["import * as React from 'react';\nimport toolbar from './toolbar';\nimport menubar from './menubar';\nimport { queries } from './queries';\nimport { actions } from './actions';\nimport onAction from './handlers/onAction';\nimport onKeyDown from './handlers/onKeyDown';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport ListWrapper from './components/listWrapper';\nimport createContextMenu from './createContextMenu';\nimport placeholder from './placeholder';\nimport type { BiFactory } from '@ali/4ever-cangjie';\nimport createOnCangjiePaste from './handlers/onCangjiePaste';\nimport { createRenderParagraph } from './queries/createRenderParagraph';\nimport { biCommands } from './commands/biCommands';\nimport createRenderToolbar from './createRenderToolbar';\nimport moFactory from '../mo/index';\nimport { ListSymbolWarmupWrapper, createInjectToNode, getNodeStyle } from '../utils';\n\n\nconst biFactory: BiFactory = (config) => {\n  const listConfig = config.list || {};\n  const contextMenu = createContextMenu();\n\n  return {\n    ...moFactory({}),\n    renderEditable(props, controller, next) {\n      return (\n        // @ts-ignore\n        <ListWrapper\n          {...props}\n          controller={controller}\n        >\n          <ListSymbolWarmupWrapper controller={controller}>\n            {next()}\n          </ListSymbolWarmupWrapper>\n        </ListWrapper>\n      );\n    },\n    toolbar: toolbar(listConfig),\n    menubar: menubar(),\n    commands: biCommands,\n    queries: {\n      ...queries,\n      renderParagraph: createRenderParagraph(config),\n    },\n    actions,\n    contextMenu: contextMenu(listConfig),\n    renderToolbar: createRenderToolbar(listConfig),\n    onAction,\n    injectToNode: createInjectToNode(listConfig),\n    onCangjiePaste: createOnCangjiePaste(),\n    onKeyDown,\n    onCangjieInput,\n    getNodeStyle,\n    models: {\n      klass: 'block',\n      type: 'paragraph',\n      data: {\n        ind: [undefined, Object],\n        spacing: [undefined, Object],\n        jc: [undefined, String],\n        blockquote: [undefined, Boolean],\n        list: Object,\n        calloutPr: [undefined, Object],\n        subjectPr: [undefined, Object],\n        shd: [undefined, Object],\n      },\n    },\n    placeholder: placeholder(listConfig),\n  };\n};\n\nexport default biFactory;\n"],"file":"index.js"}