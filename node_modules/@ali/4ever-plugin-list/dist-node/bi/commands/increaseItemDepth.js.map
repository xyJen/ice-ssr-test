{"version":3,"sources":["../../../../src/bi/commands/increaseItemDepth.ts"],"names":["increaseItemByNode","controller","offset","element","data","key","list","listStyleType","level","isOrdered","isTaskList","MAX_LEVEL","newLevel","Math","max","baseData","listStyle","prevLevelItem","value","inheritListStyle","prevLevelItemData","prevLevelItemList","ind","forEach","attr","newData","command","Commands","setNodeByKey","userData","delete","increaseItemBySelection","editor","depthItems","hasFirstStart","undefined","indLeft","left","INDENT_SIZE","min","MAX_INDENT_SIZE"],"mappings":"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","sourcesContent":["import { Block, Controller, Commands } from '@ali/4ever-cangjie';\nimport { INDENT_SIZE } from '@ali/4ever-utils';\nimport { omit } from 'lodash-es';\nimport {\n  getDepthItems,\n  getListStyle,\n  getPrevLevelItem,\n  mergeListData,\n} from '../utils';\nimport { MAX_LEVEL } from '../constants';\nimport { MAX_INDENT_SIZE } from '@ali/4ever-plugin-indent';\n\nexport function increaseItemByNode(\n  controller: Controller,\n  offset: 1 | -1,\n  element: Block,\n) {\n  if (!element) return controller;\n  const { data, key } = element as Block;\n  if (!data.list) return controller;\n  const { listStyleType, level, isOrdered, isTaskList } = data.list;\n  // 最大深度不超过9\n  if (offset > 0 && data.list.level >= MAX_LEVEL - 1) return controller;\n  const newLevel = Math.max(level + offset, 0);\n  let baseData = data;\n  let listStyle = getListStyle(isOrdered, newLevel, listStyleType);\n  const prevLevelItem = getPrevLevelItem(controller.value, element, offset) as Block;\n  const inheritListStyle = prevLevelItem?.data?.list?.listStyle;\n  if (inheritListStyle) {\n    listStyle = inheritListStyle;\n  }\n  if (prevLevelItem?.data && !isTaskList) {\n    const prevLevelItemData = prevLevelItem.data;\n    const prevLevelItemList = prevLevelItemData.list;\n    baseData = {\n      ...omit(data, ['fold']),\n      ind: prevLevelItemData.ind,\n      list: {\n        ...data.list,\n      },\n    };\n    [\n      'listId',\n      'level',\n      'hideSymbol',\n      'isOrdered',\n      'isTaskList',\n      'listStyle',\n      'listStyleType',\n    ].forEach((attr) => {\n      baseData.list[attr] = prevLevelItemList[attr];\n    });\n  }\n  const newData = mergeListData(baseData, {\n    level: newLevel,\n    listStyle,\n  });\n\n  return controller\n    .command(Commands.setNodeByKey, key, newData)\n    .userData.delete(element, ['fold']);\n}\n\nexport default function increaseItemBySelection(\n  editor: Controller,\n  offset: 1 | -1,\n) {\n  const { depthItems, hasFirstStart } = getDepthItems(editor);\n  depthItems.forEach((element) => {\n    if (!element) return undefined;\n\n    const { data, key } = element as Block;\n    if (!data.list) return undefined;\n    const { isTaskList } = data.list;\n    // 最大深度不超过9\n    if (offset > 0 && data.list.level >= MAX_LEVEL - 1) return editor;\n    let newData;\n    if (hasFirstStart && !isTaskList) {\n      const indLeft = Math.max(\n        (data.ind?.left || 0) + offset * INDENT_SIZE,\n        0,\n      );\n      newData = {\n        data: {\n          ...omit(data, ['fold']),\n          ind: {\n            ...data.ind,\n            left: Math.min(indLeft, MAX_INDENT_SIZE),\n          },\n        },\n      };\n      editor\n        .command(Commands.setNodeByKey, key, newData)\n        .userData.delete(element, ['fold']);\n    } else {\n      increaseItemByNode(editor, offset, element);\n    }\n    return undefined;\n  });\n  return editor;\n}\n"],"file":"increaseItemDepth.js"}