{"version":3,"sources":["../../../../src/bi/commands/toggleList.ts"],"names":["createSymbolStyle","controller","element","value","document","firstText","getFirstText","lastText","getLastText","undefined","activeMarks","getActiveMarksAtRange","Selection","create","anchor","TextPoint","key","offset","focus","text","length","reduce","prev","curMark","toggleList","newData","type","blocks","selection","listSelections","data","currentList","newDataContent","firstItem","list","isTaskList","target","e","logger","error","name","extendListItem","withoutNormalizing","forEach","elementListConfig","level","MoHeading","isHeading","symbolStyle","sz","SzUtil","fromHeadingType","baseLeft","ind","left","itemLeft","firstLine","diffValue","Math","max","floor","INDENT_SIZE","listStyleType","extraData","docTaskId","slice","hideSymbol","isChecked","isOrdered","listStyle","blockType","command","Commands","setNodeByKey","parent","lastList","lastBlockOfParent","nodes","insertPoint","EdgePoint","edge","AFTER","insertEmptyBlock","select"],"mappings":"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","sourcesContent":["import {\n  Block,\n  Controller,\n  Commands,\n  EdgePoint,\n  Selection,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport { INDENT_SIZE, SzUtil } from '@ali/4ever-utils';\nimport logger from '@ali/4ever-logger';\nimport { Heading as MoHeading } from '@ali/4ever-plugin-heading';\nimport { v4 as uuid } from 'uuid';\nimport { omit } from 'lodash-es';\nimport {\n  findFirstListItemById,\n  getCurrentItem,\n  getListStyle,\n  getListItemsBySelection,\n  getSiblingItems,\n  mergeListData,\n  isValidListStyleType,\n} from '../utils';\nimport { convertMarkToSymbolStyle } from '../../utils/getSymbolStyleByKey';\nimport type { SymbolStyleProperties } from '../../utils/types';\n\nfunction createSymbolStyle(controller: Controller, element: Block) {\n  const { value } = controller;\n  const { document } = value;\n  const firstText = element.getFirstText();\n  const lastText = element.getLastText();\n\n  if (!firstText || !lastText) {\n    return undefined;\n  }\n\n  const activeMarks = document.getActiveMarksAtRange(\n    Selection.create({\n      anchor: TextPoint.create({ key: firstText.key, offset: 0 }),\n      focus: TextPoint.create({\n        key: lastText.key,\n        offset: lastText.text.length,\n      }),\n    }),\n  );\n\n  return activeMarks.reduce<SymbolStyleProperties>((prev, curMark) => {\n    return { ...prev, ...convertMarkToSymbolStyle(curMark) };\n  }, {});\n}\n\n/**\n *\n * @param controller\n * @param newData\n * @param type 可选，要转的列表类型\n * @param blocks 可选，要转为列表的块节点\n * @returns\n */\nexport default function toggleList(\n  controller: Controller,\n  newData,\n  type?,\n  blocks?: Block[],\n) {\n  const { value } = controller;\n  const { document, selection } = value;\n  const { listSelections } = value.data;\n\n  let currentList = listSelections?.length\n    ? getListItemsBySelection(controller)\n    : blocks || getCurrentItem(controller);\n  let newDataContent = {\n    data: newData,\n  };\n\n  if (!(currentList && currentList[0])) return controller;\n  let firstItem: Block | null = currentList[0];\n  if (\n    currentList.length === 1 &&\n    type !== 'tlist' &&\n    !currentList[0].data?.list?.isTaskList\n  ) {\n    const target = currentList[0];\n\n    // 选中列表符号时，对选中的列表做 toggle\n    if (!listSelections?.length && target) {\n      currentList = getSiblingItems(value, target);\n    }\n    try {\n      firstItem = currentList[0];\n    } catch (e) {\n      logger.error({\n        type: 'listError',\n        name: 'toggleList',\n        value: {\n          listSelections,\n          target,\n          currentList,\n        },\n      });\n      return controller;\n    }\n  }\n\n  const extendListItem =\n    firstItem && (findFirstListItemById(firstItem, value.document) as Block);\n\n  controller.withoutNormalizing(() => {\n    currentList?.forEach((element) => {\n      if (!element) return;\n      const { data } = mergeListData(element.data, newData.list);\n\n      if (element.data) {\n        if (element.data.list) {\n          const elementListConfig = element.data.list;\n          data.list.level = elementListConfig?.level || 0;\n          // 若标题代办转为列表，符号大小自动继承\n          if (MoHeading.isHeading(element)) {\n            data.list.symbolStyle = {\n              ...elementListConfig.symbolStyle,\n              sz: SzUtil.fromHeadingType(element.type),\n            };\n          }\n          if (elementListConfig.symbolStyle) {\n            data.list.symbolStyle = elementListConfig.symbolStyle;\n          }\n        } else {\n          const baseLeft = extendListItem?.data?.ind?.left || 0;\n          const itemLeft =\n            (element?.data?.ind?.left || 0) +\n            (element?.data?.ind?.firstLine || 0);\n          const diffValue = Math.max(itemLeft - baseLeft, 0);\n          data.list.level = Math.floor(diffValue / INDENT_SIZE);\n          data.list.symbolStyle = createSymbolStyle(controller, element);\n          data.ind = {\n            ...omit(data.ind, 'firstLine'),\n            left: Math.max(baseLeft, 0),\n          };\n        }\n      }\n\n      const { level, listStyleType } = data.list;\n\n      /* 切换为任务列表 */\n      if (type === 'tlist') {\n        data.list.extraData = data.list.extraData || {};\n        if (!data.list.extraData.docTaskId) {\n          data.list.extraData = {\n            ...data.list.extraData,\n            docTaskId: uuid().slice(0, 8),\n          };\n        }\n        newDataContent = mergeListData(data, {\n          isTaskList: true,\n          hideSymbol: false,\n          isChecked: false,\n          isOrdered: false,\n        });\n      } else if (isValidListStyleType(listStyleType)) {\n        data.list.listStyle = getListStyle(\n          type === 'olist',\n          level,\n          listStyleType,\n        );\n      }\n      /* 切换为无序列表 */\n      if (type === 'ulist') {\n        newDataContent = mergeListData(data, {\n          isTaskList: false,\n          isOrdered: false,\n          hideSymbol: false,\n        });\n      }\n      /* 切换为有序列表 */\n      if (type === 'olist') {\n        newDataContent = mergeListData(data, {\n          isTaskList: false,\n          isOrdered: true,\n          hideSymbol: false,\n        });\n      }\n      let blockType = 'paragraph';\n      if (MoHeading.isHeading(element)) {\n        blockType = element.type;\n      }\n      controller.command(Commands.setNodeByKey, element.key, {\n        type: blockType,\n        ...newDataContent,\n      });\n    });\n  });\n\n  const parent = document;\n  const lastList = currentList[currentList.length - 1];\n  const lastBlockOfParent = parent.nodes[parent.nodes.length - 1];\n  // 插入代办时，如果当前段落是父节点的最后一个段落，那么需要在后面插入一个空段路\n  if (\n    newDataContent.data.list.isTaskList &&\n    lastList?.key === lastBlockOfParent.key\n  ) {\n    const insertPoint = EdgePoint.create({\n      key: lastList.key,\n      edge: EdgePoint.AFTER,\n    });\n\n    controller\n      .command(Commands.insertEmptyBlock, insertPoint)\n      .command(Commands.select, selection);\n  }\n\n  return controller;\n}\n"],"file":"toggleList.js"}