"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toggleList = toggleList;
exports.transformList = transformList;
exports.removeList = removeList;
exports.setCheckStatus = setCheckStatus;
exports.selectSymbol = selectSymbol;
exports.clearRangeSelection = clearRangeSelection;
exports.selectListSelections = selectListSelections;
exports.clearListSelections = clearListSelections;
exports.restartNumbering = restartNumbering;
exports.continueNumbering = continueNumbering;
exports.actions = exports.DEPRECATED_ACTIONS = exports.CONTINUE_NUMBERING = exports.RESTART_NUMBERING = exports.CLEAR_LIST_SELECTIONS = exports.SELECT_LIST_SELECTIONS = exports.CLEAR_RANGE_SELECTION = exports.LIST_SELECT_SYMBOL = exports.LIST_PUT_LIST_ORDER = exports.LIST_SET_CHECK_STATUS = exports.LIST_REMOVE_LIST = exports.LIST_TRANSFORM = exports.LIST_TOGGLE_LIST = void 0;

var _utils = require("../utils");

const LIST_TOGGLE_LIST = Symbol('LIST_TOGGLE_LIST');
exports.LIST_TOGGLE_LIST = LIST_TOGGLE_LIST;
const LIST_TRANSFORM = Symbol('LIST_TRANSFORM');
exports.LIST_TRANSFORM = LIST_TRANSFORM;
const LIST_REMOVE_LIST = Symbol('LIST_REMOVE_LIST');
exports.LIST_REMOVE_LIST = LIST_REMOVE_LIST;
const LIST_SET_CHECK_STATUS = Symbol('LIST_SET_CHECK_STATUS');
exports.LIST_SET_CHECK_STATUS = LIST_SET_CHECK_STATUS;
const LIST_PUT_LIST_ORDER = Symbol('LIST_PUT_LIST_ORDER');
exports.LIST_PUT_LIST_ORDER = LIST_PUT_LIST_ORDER;
const LIST_SELECT_SYMBOL = Symbol('LIST_SELECT_SYMBOL');
exports.LIST_SELECT_SYMBOL = LIST_SELECT_SYMBOL;
const CLEAR_RANGE_SELECTION = Symbol('CLEAR_RANGE_SELECTION');
exports.CLEAR_RANGE_SELECTION = CLEAR_RANGE_SELECTION;
const SELECT_LIST_SELECTIONS = Symbol('SELECT_LIST_SELECTIONS');
exports.SELECT_LIST_SELECTIONS = SELECT_LIST_SELECTIONS;
const CLEAR_LIST_SELECTIONS = Symbol('CLEAR_LIST_SELECTIONS');
exports.CLEAR_LIST_SELECTIONS = CLEAR_LIST_SELECTIONS;
const RESTART_NUMBERING = Symbol('ACTION_RESTART_NUMBERING');
exports.RESTART_NUMBERING = RESTART_NUMBERING;
const CONTINUE_NUMBERING = Symbol('ACTION_CONTINUE_NUMBERING');
exports.CONTINUE_NUMBERING = CONTINUE_NUMBERING;

function toggleList(listType, styleType) {
  // TODO 全量后默认值移至mobileNativeToolbar/utils中
  let listStyleType;

  if (!styleType) {
    if (listType === 'olist') {
      listStyleType = _utils.DEFAULT_NUMBER_LIST_ARRAY[0];
    } else if (listType === 'ulist') {
      listStyleType = _utils.DEFAULT_BULLET_LIST_ARRAY[0];
    }
  } else {
    listStyleType = styleType;
  }

  return {
    type: LIST_TOGGLE_LIST,
    payload: {
      listType,
      listStyleType
    }
  };
}

function transformList(listType) {
  let listStyleType;

  if (listType === 'olist') {
    listStyleType = _utils.DEFAULT_NUMBER_LIST_ARRAY[0];
  } else if (listType === 'ulist') {
    listStyleType = _utils.DEFAULT_BULLET_LIST_ARRAY[0];
  }

  return {
    type: LIST_TRANSFORM,
    payload: {
      listType,
      listStyleType
    }
  };
}

function removeList() {
  return {
    type: LIST_REMOVE_LIST
  };
}

function setCheckStatus(node, checked) {
  return {
    type: LIST_SET_CHECK_STATUS,
    payload: {
      node,
      checked
    }
  };
}

function selectSymbol(listSelections, isSelected) {
  return {
    type: LIST_SELECT_SYMBOL,
    payload: {
      listSelections,
      isSelected
    }
  };
}

function clearRangeSelection(node) {
  return {
    type: CLEAR_RANGE_SELECTION,
    payload: {
      node
    }
  };
}

function selectListSelections(listSelections) {
  return {
    type: SELECT_LIST_SELECTIONS,
    payload: {
      listSelections
    }
  };
}

function clearListSelections() {
  return {
    type: CLEAR_LIST_SELECTIONS
  };
}

function restartNumbering() {
  return {
    type: RESTART_NUMBERING
  };
}

function continueNumbering() {
  return {
    type: CONTINUE_NUMBERING
  };
}
/** @deprecated */


const DEPRECATED_ACTIONS = {
  CONTINUE_NUMBERING,
  CLEAR_LIST_SELECTIONS,
  CLEAR_RANGE_SELECTION,
  LIST_REMOVE_LIST,
  LIST_SET_CHECK_STATUS,
  LIST_SELECT_SYMBOL,
  LIST_TOGGLE_LIST,
  LIST_TRANSFORM,
  RESTART_NUMBERING,
  SELECT_LIST_SELECTIONS,
  LIST_PUT_LIST_ORDER,
  selectSymbol,
  clearListSelections,
  toggleList,
  transformList,
  removeList,
  setCheckStatus,
  clearRangeSelection,
  selectListSelections,
  restartNumbering,
  continueNumbering
};
exports.DEPRECATED_ACTIONS = DEPRECATED_ACTIONS;
const actions = {
  selectSymbol,
  clearListSelections,
  toggleList,
  transformList,
  removeList,
  setCheckStatus,
  clearRangeSelection,
  selectListSelections,
  restartNumbering,
  continueNumbering
};
exports.actions = actions;
//# sourceMappingURL=actions.js.map