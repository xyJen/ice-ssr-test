{"version":3,"sources":["../../../../src/bi/components/orderedListButton.tsx"],"names":["isMobile","environment","IS_MOBILE","MemoListSet","React","memo","ListSet","OrderedListButton","props","controller","locale","simple","rest","listStyleType","isCollapsedAtEdge","value","selection","isDisabled","query","isActive","handleClick","listType","run","numberLists","undefined","orderedList","OLLIST_HOT_KEY_TIP","space","ListRole","listOrdered","needRender"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAT4B,a;AAW5B,MAAMA,QAAQ,GAAGC,yBAAYC,SAA7B;;AACA,MAAMC,WAAW,gBAAGC,eAAMC,IAAN,CAAWC,kBAAX,CAApB;;wBAqCY,eAAC,gCAAD,O;;AA7BG,SAASC,iBAAT,CAA2BC,KAA3B,EAA0D;AACvE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,MAAtB;AAA8B,OAAGC;AAAjC,MAA0CJ,KAAhD;AACA,QAAMK,aAAa,GAAG,6BAAiBJ,UAAjB,CAAtB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAwBL,UAAU,CAACM,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GACdH,iBAAiB,IACjBL,UAAU,CAACS,KAAX,CAAiB,iBAAjB,CADA,IAEA;AACAT,EAAAA,UAAU,CAACS,KAAX,CAAiB,6BAAjB,CAJF;AAKA,QAAMC,QAAQ,GAAG,4BAAcV,UAAd,CAAjB;AAEA,QAAMW,WAAW,GAAG,wBACjBC,QAAD,IAAyC;AACvCZ,IAAAA,UAAU,CAACa,GAAX,CACE,UADF,EAEE,yBACE,OADF,EAEEtB,QAAQ,IAAIuB,4CAAYF,QAAZ,MAAoCG,SAAhD,GACID,4CAAY,CAAZ,CADJ,GAEIF,QAJN,CAFF;AASD,GAXiB,EAYlB,CAACZ,UAAD,CAZkB,CAApB;;AAcA,MAAIE,MAAJ,EAAY;AACV,wBAAQ,eAAC,qBAAD,6BACFC,IADE;AAEN,MAAA,MAAM,EAAC,mBAFD;AAGN,MAAA,IAAI,MAHE;AAIN,MAAA,KAAK,EAAEF,MAAM,CAACe,WAJR;AAKN,MAAA,YAAY,EAAEC,yBALR;AAMN,MAAA,OAAO,eACL,eAAC,iCAAD;AACE,QAAA,KAAK,EAAEhB,MAAM,CAACe,WADhB;AAEE,QAAA,QAAQ,EAAEC,yBAFZ;AAGE,QAAA,WAAW,EAAE,oBAAoBhB,MAAM,EAAEiB,KAA5B,IAAqC;AAHpD,QAPI;AAaN,MAAA,MAAM,EAAER,QAbF;AAcN,MAAA,QAAQ,EAAE,CAAC,CAACF,UAdN;AAeN,MAAA,OAAO,EAAEG,WAfH;AAgBN,MAAA,IAAI,EAAEQ,eAASC;AAhBT,OAAR;AAkBD;;AACD,sBACE,eAAC,WAAD,6BACMjB,IADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,MAAM,EAAEO,QAHV;AAIE,IAAA,YAAY,EAAEO,yBAJhB;AAKE,IAAA,MAAM,EAAC,mBALT;AAME,IAAA,QAAQ,EAAE,CAAC,CAACT,UANd;AAOE,IAAA,gBAAgB,EAAEJ,aAPpB;AAQE,IAAA,QAAQ,EAAEO,WARZ;AASE,IAAA,OAAO,EAAEA,WATX;AAUE,IAAA,IAAI,EAAEQ,eAASC;AAVjB,KADF;AAcD;;AAEDtB,iBAAiB,CAACuB,UAAlB,GAA+B,UAAUrB,UAAV,EAA2C;AACxE,SAAO,sCAAwBA,UAAU,CAACM,KAAnC,CAAP;AACD,CAFD","sourcesContent":["import React, { useCallback } from 'react';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport { ToolbarOrderListNormal } from '@ali/we-design';\nimport { IconButtonShortcut } from '@ali/4ever-component';\nimport { ListSet, IconButton } from '@ali/we-toolbar';\nimport isOrderedList from '../queries/isOrderedList';\nimport { getListStyleType, OLLIST_HOT_KEY_TIP } from '../utils';\nimport { toggleList } from '../actions';\nimport isSelectionInListSymbol from '../utils/isSelectionInListSymbol';\nimport { ListRole } from '../../utils/role';\nimport { DEFAULT_NUMBER_LIST_ARRAY as numberLists } from '../../utils/listStyleMapping';\n\nconst isMobile = environment.IS_MOBILE;\nconst MemoListSet = React.memo(ListSet);\n\nexport interface OrderedListButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  simple?: boolean;\n}\n\nexport default function OrderedListButton(props: OrderedListButtonProps) {\n  const { controller, locale, simple, ...rest } = props;\n  const listStyleType = getListStyleType(controller);\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled =\n    isCollapsedAtEdge ||\n    controller.query('isSelectionInHr') ||\n    // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506\n    controller.query('isSelectionInSubjectHeading');\n  const isActive = isOrderedList(controller);\n\n  const handleClick = useCallback(\n    (listType: string | React.MouseEvent) => {\n      controller.run(\n        'onAction',\n        toggleList(\n          'olist',\n          isMobile || numberLists[listType as string] === undefined\n            ? numberLists[0]\n            : listType,\n        ),\n      );\n    },\n    [controller],\n  );\n  if (simple) {\n    return (<IconButton\n      {...rest}\n      testid=\"bi-toolbar-ollist\"\n      icon={<ToolbarOrderListNormal />}\n      title={locale.orderedList}\n      shortcutText={OLLIST_HOT_KEY_TIP}\n      tooltip={\n        <IconButtonShortcut\n          title={locale.orderedList}\n          shortcut={OLLIST_HOT_KEY_TIP}\n          description={'Markdown: 1. + ' + locale?.space || 'Space'}\n        />\n      }\n      active={isActive}\n      disabled={!!isDisabled}\n      onClick={handleClick}\n      role={ListRole.listOrdered}\n    />);\n  }\n  return (\n    <MemoListSet\n      {...rest}\n      mode=\"ol\"\n      active={isActive}\n      shortcutText={OLLIST_HOT_KEY_TIP}\n      testid=\"bi-toolbar-ollist\"\n      disabled={!!isDisabled}\n      defaultListStyle={listStyleType}\n      onChange={handleClick}\n      onClick={handleClick}\n      role={ListRole.listOrdered}\n    />\n  );\n}\n\nOrderedListButton.needRender = function (controller: Controller): boolean {\n  return isSelectionInListSymbol(controller.value);\n};\n"],"file":"orderedListButton.js"}