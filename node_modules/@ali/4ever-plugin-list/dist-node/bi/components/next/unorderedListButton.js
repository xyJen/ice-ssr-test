"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UnorderedListButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _everComponent = require("@ali/4ever-component");

var _isUnorderedList = _interopRequireDefault(require("../../queries/isUnorderedList"));

var _actions = require("../../actions");

var _utils = require("../../utils");

var _role = require("../../../utils/role");

var _listStyleMapping = require("../../../utils/listStyleMapping");

const _createElement = /*#__PURE__*/_react.default.createElement;
const isMobile = _everCangjie.environment.IS_MOBILE;

function UnorderedListButton(props) {
  const {
    controller,
    locale,
    enableSticker = false,
    ...rest
  } = props;
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInHr') || // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506
  controller.query('isSelectionInSubjectHeading');
  const listStyleType = (0, _utils.getListStyleType)(controller);
  const isActive = (0, _isUnorderedList.default)(controller);
  const handleClick = (0, _react.useCallback)(listType => controller.run('onAction', (0, _actions.toggleList)('ulist', isMobile || _listStyleMapping.DEFAULT_BULLET_LIST_ARRAY[listType] === undefined ? _listStyleMapping.DEFAULT_BULLET_LIST_ARRAY[0] : listType)), [controller]);

  const tooltip = _react.default.useMemo(() => ({
    title: locale.unorderedList,
    shortCut: _utils.ULLIST_HOT_KEY_TIP,
    description: 'Markdown: * ' + (locale?.space || 'Space')
  }), []);

  return /*#__PURE__*/_createElement(_everComponent.ListSet, (0, _extends2.default)({
    mode: "ul",
    active: isActive,
    testid: "bi-toolbar-ullist",
    disabled: !!isDisabled,
    defaultListStyle: listStyleType,
    onChange: handleClick,
    onClick: handleClick,
    enableSticker: enableSticker,
    role: _role.ListRole.listUnordered,
    title: locale.unorderedList,
    tooltip: tooltip
  }, rest));
}
//# sourceMappingURL=unorderedListButton.js.map