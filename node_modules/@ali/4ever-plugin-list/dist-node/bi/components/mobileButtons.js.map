{"version":3,"sources":["../../../../src/bi/components/mobileButtons.tsx"],"names":["getOListButton","type","MobileOListButton","props","controller","Wrapper","item","isCollapsedAtEdge","value","selection","isDisabled","isActive","handleClick","run","numberLists","getUListButton","MobileUListButton","bulletLists","MobileTaskButton","React","useCallback","MobileTaskInsertButton","locale","command","Commands","insertBlock","Paragraph","create","nodes","Text","taskList"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { Commands, Text } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport isOrderedList from '../queries/isOrderedList';\nimport isUnorderedList from '../queries/isUnorderedList';\nimport { toggleList } from '../actions';\nimport type { MobileToolbarButtonProps } from '@ali/4ever-component';\nimport {\n  DEFAULT_NUMBER_LIST_ARRAY as numberLists,\n  DEFAULT_BULLET_LIST_ARRAY as bulletLists,\n} from '../../utils/listStyleMapping';\n\nexport function getOListButton(type: 'big' | 'horiz') {\n  return function MobileOListButton(props: MobileToolbarButtonProps) {\n    const { controller, Wrapper, item } = props;\n    const { isCollapsedAtEdge } = controller.value.selection;\n    const isDisabled = isCollapsedAtEdge;\n    const isActive = isOrderedList(controller);\n    const handleClick = useCallback(\n      () => controller.run('onAction', toggleList('olist', numberLists[0])),\n      [controller],\n    );\n\n    return (\n      <Wrapper\n        item={item}\n        type={type}\n        icon=\"list\"\n        isFocused={isActive}\n        isDisabled={isDisabled}\n        onClick={handleClick}\n      />\n    );\n  };\n}\n\nexport function getUListButton(type: 'big' | 'horiz') {\n  return function MobileUListButton(props: MobileToolbarButtonProps) {\n    const { controller, Wrapper, item } = props;\n    const { isCollapsedAtEdge } = controller.value.selection;\n    const isDisabled = isCollapsedAtEdge;\n    const isActive = isUnorderedList(controller);\n    const handleClick = useCallback(\n      () => controller.run('onAction', toggleList('ulist', bulletLists[0])),\n      [controller],\n    );\n\n    return (\n      <Wrapper\n        item={item}\n        type={type}\n        icon=\"uList\"\n        isFocused={isActive}\n        isDisabled={isDisabled}\n        onClick={handleClick}\n      />\n    );\n  };\n}\n\nexport function MobileTaskButton(props: MobileToolbarButtonProps) {\n  const { controller, Wrapper, item } = props;\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge;\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', toggleList('tlist')),\n    [controller],\n  );\n\n  return (\n    <Wrapper\n      item={item}\n      type=\"big\"\n      icon=\"checked\"\n      isDisabled={isDisabled}\n      onClick={handleClick}\n    />\n  );\n}\n\nexport function MobileTaskInsertButton(props: MobileToolbarButtonProps) {\n  const { controller, Wrapper, item, locale } = props;\n  const handleClick = React.useCallback(() => {\n    controller.command(\n      Commands.insertBlock,\n      Paragraph.create({\n        nodes: [Text.create('')],\n      }),\n    );\n    controller.run('onAction', toggleList('tlist'));\n  }, [controller]);\n\n  return (\n    <Wrapper\n      item={item}\n      type=\"line\"\n      icon=\"checked\"\n      onClick={handleClick}\n      lineText={locale?.taskList}\n    />\n  );\n}\n"],"file":"mobileButtons.js"}