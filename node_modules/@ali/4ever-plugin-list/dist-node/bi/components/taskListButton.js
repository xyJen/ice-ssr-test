"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TaskListButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _everComponent = require("@ali/4ever-component");

var _isTaskList = _interopRequireDefault(require("../queries/isTaskList"));

var _actions = require("../actions");

var _utils = require("../utils");

var _role = require("../../utils/role");

const _createElement = /*#__PURE__*/React.createElement;

const isDisabled = controller => {
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInHr') || // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506
  controller.query('isSelectionInSubjectHeading');
  return Boolean(isDisabled);
};

function TaskListButton(props) {
  const {
    controller,
    locale,
    ...rest
  } = props;
  const isActive = (0, _isTaskList.default)(controller);
  const handleClick = React.useCallback(() => controller.run('onAction', (0, _actions.toggleList)('tlist')), [controller]);
  return /*#__PURE__*/_createElement(_weToolbar.TaskListButton, (0, _extends2.default)({}, rest, {
    testid: "bi-toolbar-tasklist",
    shortcutText: _utils.TASKLIST_HOT_KEY_TIP // @ts-ignore 组件不存在 bordered 属性
    ,
    bordered: false,
    active: isActive,
    disabled: isDisabled(controller),
    onClick: handleClick,
    role: _role.ListRole.listTask,
    tooltip: /*#__PURE__*/_createElement(_everComponent.IconButtonShortcut, {
      title: locale?.taskList,
      shortcut: _utils.TASKLIST_HOT_KEY_TIP,
      description: ' Markdown: [] ' + (locale?.space || 'Space')
    })
  }));
}
//# sourceMappingURL=taskListButton.js.map