{"version":3,"sources":["../../../../src/bi/components/createListItem.tsx"],"names":["BorderStyleEnum","MoCommon","isListGroupAvailable","isNormalGroupNode","isInUnlistGroupContainer","ListGroupPluginUtils","DEFAULT_BORDER_COLOR","INDENT_SIZE","theme","indent","size","DEFAULT_SHD_STYLES","createListItem","Paragraph","extraProps","allowCustomCheck","ListItem","React","Component","handleChange","checked","controller","node","onChange","props","run","getGroupListStyle","shd","data","display","paddingLeft","symbolAlign","ROMAN_EXTRA_INDENT","backgroundColor","ShdUtil","transformShd","width","paddingRight","justifyContent","align","onSelectSymbol","context","listConfig","listId","key","jc","isList","list","listStyle","includes","format","isSymbolSelected","isSelected","blockquote","getStyle","customStyle","visible","isTaskList","level","pi","bdr","ind","paddingSpace","firstLine","left","IndUtil","fromBlock","isTaskSelected","styleObj","undefined","borderRadius","box","height","margin","top","bottom","marginTop","marginBottom","val","Single","sz","color","bdrColor","space","borderStyle","borderColor","borderTop","paddingTop","borderBottom","paddingBottom","borderLeft","right","borderRight","Number","EXTRA_PADDING","renderParagraph","children","nodeRef","rest","renderListItem","className","contentStyle","listItemRef","step","start","isOrdered","isChecked","listStyleType","hideSymbol","symbolStyle","SYMBOL_STYLE","listSymbol","taskListConfig","render","contextType","ListContext","forwardRef","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  IndUtil,\n  ShdUtil,\n  theme,\n} from '@ali/4ever-utils';\nimport { MoCommon } from '@ali/4ever-cangjie';\nimport type { ParagraphData } from '@ali/4ever-plugin-paragraph';\nimport { EXTRA_PADDING, utils as ListGroupPluginUtils } from '@ali/4ever-plugin-list-group';\nimport { setCheckStatus } from '../actions';\nimport { ListContext } from '../../component/context';\nimport type { ListItemProps, TaskListProps } from '../../utils/types';\nimport { ROMAN_EXTRA_INDENT, SYMBOL_STYLE } from '../../utils/constant';\nimport getJustifyContent from '../../utils/getJustifyContent';\nimport { generateSymbol } from '../../utils/generateSymbol';\nimport { GroupListContainer, ListItemWrapper } from '../../utils/styled';\nimport { convertSymbolStyle } from '../../utils/getSymbolStyleByKey';\nimport { RenderStyledListItem } from '../../utils/renderStyledListItem';\n\nconst { BorderStyleEnum } = MoCommon;\nconst {\n  isListGroupAvailable,\n  isNormalGroupNode,\n  isInUnlistGroupContainer,\n} = ListGroupPluginUtils;\n\nconst DEFAULT_BORDER_COLOR = '#000000';\n\nconst INDENT_SIZE = theme.indent.size;\nconst { DEFAULT_SHD_STYLES } = theme;\n\nexport default function createListItem(Paragraph, extraProps?: TaskListProps) {\n  const { allowCustomCheck = false } = extraProps || {};\n  class ListItem extends React.Component<ListItemProps> {\n    static contextType = ListContext;\n\n    get align() {\n      const { node } = this.props;\n      return node.data.jc || 'left';\n    }\n\n    get isList() {\n      const { node } = this.props;\n      const listConfig = node.data.list;\n      return !!listConfig;\n    }\n\n    get symbolAlign() {\n      const { listStyle } = this.listConfig;\n      if (\n        listStyle &&\n        ['upperRoman', 'lowerRoman'].includes(listStyle.format)\n      ) {\n        return 'right';\n      } else {\n        return 'left';\n      }\n    }\n\n    get listConfig() {\n      return this.isList ? this.props.node.data.list : null;\n    }\n\n    get isSymbolSelected() {\n      const { node } = this.props;\n      return node.data.isSelected;\n    }\n\n    get isListGroupAvailable() {\n      const { node, controller } = this.props;\n      return isListGroupAvailable(controller) && !node.data.blockquote;\n    }\n\n    handleChange = (checked) => {\n      const { controller, node, onChange } = this.props;\n      onChange && onChange(checked);\n      controller.run('onAction', setCheckStatus(node, checked));\n    };\n\n    getStyle() {\n      const { isSelected, customStyle, node, controller, visible } = this.props;\n      const { isTaskList, level = 0, listStyle } = this.listConfig;\n      const { pi, bdr = {} } = this.props.node.data as ParagraphData;\n      const { shd, ind } = node.data;\n      let paddingSpace = level * INDENT_SIZE;\n      if (ind) {\n        const { firstLine = 0, left = 0 } = IndUtil.fromBlock(node);\n        paddingSpace += firstLine + left;\n      }\n      // 罗马数字统一右侧对齐\n      if (\n        listStyle &&\n        ['upperRoman', 'lowerRoman'].includes(listStyle.format)\n      ) {\n        // 根据字体大小，动态计算罗马数字预留空间的宽度\n        paddingSpace += this.isListGroupAvailable && shd ? 0 : ROMAN_EXTRA_INDENT;\n      }\n      const isTaskSelected = isTaskList && isSelected && !allowCustomCheck;\n      const styleObj: React.CSSProperties = {\n        paddingLeft: paddingSpace,\n        backgroundColor: isTaskSelected && node.data.shd === undefined ? '#f4f4f4' : '',\n        borderRadius: isTaskSelected ? '3px' : '',\n        ...customStyle,\n      };\n\n      // Pi-2.0：列表高度有时会被项目符号莫名撑高，且边距需要渲染在列表处才可以生效\n      if (pi && pi.box) {\n        const { height, margin = {} } = pi.box;\n        const { top = 0, bottom = 0 } = margin;\n        styleObj.height = height;\n        styleObj.marginTop = top;\n        styleObj.marginBottom = bottom;\n      }\n\n      // 列表的边框需要挂载外围的 DOM 上\n      if (bdr.top) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.top;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderTop = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingTop = space;\n      }\n      if (bdr.bottom) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.bottom;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderBottom = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingBottom = space;\n      }\n      if (bdr.left) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.left;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderLeft = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingLeft = space + paddingSpace;\n      }\n      if (bdr.right) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.right;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderRight = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingRight = space;\n      }\n\n      if (isInUnlistGroupContainer(node, controller)) {\n        styleObj.paddingLeft = (Number(styleObj.paddingLeft) || 0 ) + EXTRA_PADDING;\n      }\n\n      if (shd && !this.isListGroupAvailable) {\n        for (const key in DEFAULT_SHD_STYLES) {\n          if (typeof styleObj[key] === 'number') {\n            styleObj[key] += DEFAULT_SHD_STYLES[key];\n          } else {\n            styleObj[key] = DEFAULT_SHD_STYLES[key];\n          }\n        }\n        styleObj.backgroundColor = ShdUtil.transformShd(shd);\n      }\n\n      if (visible === false) {\n        styleObj.display = 'none';\n      }\n\n      return styleObj;\n    }\n\n    getGroupListStyle = () => {\n      const { node, controller } = this.props;\n      const { shd } = node.data;\n      if (!this.isListGroupAvailable || !shd) {\n        return {\n          display: 'contents',\n        };\n      }\n      //@ts-ignore\n      const paddingLeft = DEFAULT_SHD_STYLES.paddingLeft + (this.symbolAlign === 'right' ? ROMAN_EXTRA_INDENT : 0);\n      const backgroundColor = isNormalGroupNode(node, controller) ? ShdUtil.transformShd(shd) : 'unset';\n      const width = `calc(100% + ${(DEFAULT_SHD_STYLES.paddingLeft || 0) + (DEFAULT_SHD_STYLES.paddingRight || 0)}px)`;\n      const justifyContent = getJustifyContent(this.align);\n      return {\n        ...DEFAULT_SHD_STYLES,\n        backgroundColor,\n        paddingLeft,\n        width,\n        display: 'flex',\n        justifyContent,\n      };\n    };\n\n    onSelectSymbol = () => {\n      const { node } = this.props;\n      const { onSelectSymbol } = this.context;\n      onSelectSymbol && onSelectSymbol(this.listConfig.listId, node.key);\n    };\n\n    renderParagraph() {\n      const { node, children, isSelected, customStyle, nodeRef, ...rest } = this.props;\n      return (\n        <Paragraph\n          {...rest}\n          ref={nodeRef}\n          node={node}\n          isList={this.isList}\n          isSelected={isSelected}\n        >\n          {children}\n        </Paragraph>\n      );\n    }\n\n    renderListItem() {\n      const { node, className, contentStyle, listItemRef } = this.props;\n      const { step, start = 1 } = node.data;\n      const {\n        listId,\n        isOrdered,\n        isTaskList,\n        isChecked,\n        level = 0,\n        listStyle,\n        listStyleType,\n        hideSymbol,\n        symbolStyle = SYMBOL_STYLE,\n      } = this.listConfig;\n      const listSymbol = isTaskList\n        ? ''\n        : generateSymbol(\n          level,\n          Number(start),\n          step,\n          isOrdered,\n          listStyleType,\n          listStyle,\n        );\n      const taskListConfig = {\n        isTaskList,\n        isChecked,\n        isOrdered,\n        handleChange: this.handleChange,\n      };\n      return (\n        <ListItemWrapper\n          align={this.align}\n          className={className}\n          ref={listItemRef}\n          style={this.getStyle()}\n          contentStyle={contentStyle}\n          data-testid=\"list\"\n          data-start={start}\n          data-listid={listId}\n          data-level={level}\n          data-isordered={isOrdered}\n          data-istasklist={isTaskList}\n          data-ischecked={isChecked}\n        >\n          <GroupListContainer style={this.getGroupListStyle()}>\n            <RenderStyledListItem\n              hideSymbol={hideSymbol}\n              listSymbol={listSymbol}\n              symbolStyle={convertSymbolStyle(symbolStyle, isOrdered)}\n              isSelect={this.isSymbolSelected}\n              symbolAlign={this.symbolAlign}\n              onSelectSymbol={this.onSelectSymbol}\n              taskListConfig={taskListConfig}\n            >\n              {this.renderParagraph()}\n            </RenderStyledListItem>\n          </GroupListContainer>\n        </ListItemWrapper>\n      );\n    }\n\n    render() {\n      return this.isList ? this.renderListItem() : this.renderParagraph();\n    }\n  };\n  return React.forwardRef<HTMLElement, ListItemProps>((props, ref) => {\n    return <ListItem {...props} nodeRef={ref} />;\n  });\n}\n"],"file":"createListItem.js"}