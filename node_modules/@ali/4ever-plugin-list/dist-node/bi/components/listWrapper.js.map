{"version":3,"sources":["../../../../src/bi/components/listWrapper.tsx"],"names":["ListWrapper","props","children","controller","handleClearSelection","data","value","listSelections","length","run","handleSelectSymbol","listId","key","document","currentList","getNode","siblings","onClickOutSide","event","target","inCangjie","closest","cls","className","isListSymbol","includes","addEventListener","removeEventListener","contextValue","onSelectSymbol","clearSelection"],"mappings":";;;;;;;;;AAAA;;AAMA;;AACA;;AACA;;uBAP4B,a;;AAW5B,MAAMA,WAAuC,GAC3CC,KAD8C,IAE3C;AACH,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BF,KAAjC;AACA,QAAMG,oBAAoB,GAAG,wBAAY,MAAM;AAC7C,UAAM;AAAEC,MAAAA;AAAF,QAAWF,UAAU,CAACG,KAA5B;;AACA,QAAID,IAAI,CAACE,cAAL,IAAuBF,IAAI,CAACE,cAAL,CAAoBC,MAA/C,EAAuD;AACrDL,MAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,2BAAaJ,IAAI,CAACE,cAAlB,EAAkC,KAAlC,CAA3B;AACAJ,MAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,mCAA3B;AACD;AACF,GAN4B,EAM1B,CAACN,UAAD,CAN0B,CAA7B;AAQA,QAAMO,kBAAkB,GAAG,wBACzB,CAACC,MAAD,EAASC,GAAT,KAAiB;AACf,UAAM;AAAEC,MAAAA;AAAF,QAAeV,UAAU,CAACG,KAAhC;AACA,UAAMQ,WAAW,GAAGD,QAAQ,CAACE,OAAT,CAAiBH,GAAjB,CAApB;AACA,UAAMI,QAAQ,GAAG,kCAAsBb,UAAU,CAACG,KAAjC,EAAwCQ,WAAxC,CAAjB;AACAV,IAAAA,oBAAoB;AACpBD,IAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,mCAAqBO,QAArB,CAA3B;AACAb,IAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,kCAAoBK,WAApB,CAA3B;AACAX,IAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,2BAAaO,QAAb,EAAuB,IAAvB,CAA3B;AACD,GATwB,EAUzB,CAACb,UAAD,EAAaC,oBAAb,CAVyB,CAA3B;AAaA,QAAMa,cAAc,GAAG,wBACrBC,KAAK,IAAI;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAnB;AACA,UAAME,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAe,+BAAf,CAAlB;AACA,UAAM;AAAEd,MAAAA;AAAF,QAAqBJ,UAAU,CAACG,KAAX,CAAiBD,IAA5C;AACA,UAAMiB,GAAG,GAAGH,MAAM,CAACI,SAAnB;AACA,UAAMC,YAAY,GAChB,OAAOF,GAAP,KAAe,QAAf,KACCA,GAAG,CAACG,QAAJ,CAAa,eAAb,KAAiCH,GAAG,CAACG,QAAJ,CAAa,aAAb,CADlC,CADF;;AAGA,QAAIL,SAAS,IAAI,CAACI,YAAd,IAA8BjB,cAAc,EAAEC,MAAhB,GAAyB,CAA3D,EAA8D;AAC5DJ,MAAAA,oBAAoB;AACrB;AACF,GAZoB,EAarB,CAACD,UAAU,CAACG,KAAX,CAAiBD,IAAlB,EAAwBD,oBAAxB,CAbqB,CAAvB;AAgBA,wBAAU,MAAM;AACdS,IAAAA,QAAQ,CAACa,gBAAT,CAA0B,OAA1B,EAAmCT,cAAnC,EAAmD,KAAnD;AACA,WAAO,MAAM;AACXJ,MAAAA,QAAQ,CAACc,mBAAT,CAA6B,OAA7B,EAAsCV,cAAtC,EAAsD,KAAtD;AACD,KAFD;AAGD,GALD,EAKG,CAACA,cAAD,CALH;AAOA,QAAMW,YAAY,GAAG,oBAAQ,MAAM;AACjC,WAAO;AACLC,MAAAA,cAAc,EAAEnB,kBADX;AAELoB,MAAAA,cAAc,EAAE1B;AAFX,KAAP;AAID,GALoB,EAKlB,CAACA,oBAAD,EAAuBM,kBAAvB,CALkB,CAArB;AAOA,sBACE,eAAC,oBAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEkB;AAA7B,KACG1B,QADH,CADF;AAKD,CA5DD;;eA8DeF,W","sourcesContent":["import React, {\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { clearListSelections, clearRangeSelection, selectListSelections, selectSymbol } from '../actions';\nimport { ListContext } from '../../component/context';\nimport { getSameGroupListItems } from '../utils';\n\nimport { ListWrapperProps } from '../types';\n\nconst ListWrapper: React.FC<ListWrapperProps> = (\n  props: PropsWithChildren<ListWrapperProps>,\n) => {\n  const { children, controller } = props;\n  const handleClearSelection = useCallback(() => {\n    const { data } = controller.value;\n    if (data.listSelections && data.listSelections.length) {\n      controller.run('onAction', selectSymbol(data.listSelections, false));\n      controller.run('onAction', clearListSelections());\n    }\n  }, [controller]);\n\n  const handleSelectSymbol = useCallback(\n    (listId, key) => {\n      const { document } = controller.value;\n      const currentList = document.getNode(key);\n      const siblings = getSameGroupListItems(controller.value, currentList);\n      handleClearSelection();\n      controller.run('onAction', selectListSelections(siblings));\n      controller.run('onAction', clearRangeSelection(currentList));\n      controller.run('onAction', selectSymbol(siblings, true));\n    },\n    [controller, handleClearSelection],\n  );\n\n  const onClickOutSide = useCallback(\n    event => {\n      const { target } = event;\n      const inCangjie = target.closest('[data-cangjie-content=\"true\"]');\n      const { listSelections } = controller.value.data;\n      const cls = target.className;\n      const isListSymbol =\n        typeof cls === 'string' &&\n        (cls.includes('symbol-align-') || cls.includes('list-symbol'));\n      if (inCangjie && !isListSymbol && listSelections?.length > 0) {\n        handleClearSelection();\n      }\n    },\n    [controller.value.data, handleClearSelection],\n  );\n\n  useEffect(() => {\n    document.addEventListener('click', onClickOutSide, false);\n    return () => {\n      document.removeEventListener('click', onClickOutSide, false);\n    };\n  }, [onClickOutSide]);\n\n  const contextValue = useMemo(() => {\n    return {\n      onSelectSymbol: handleSelectSymbol,\n      clearSelection: handleClearSelection,\n    };\n  }, [handleClearSelection, handleSelectSymbol]);\n\n  return (\n    <ListContext.Provider value={contextValue}>\n      {children}\n    </ListContext.Provider>\n  );\n};\n\nexport default ListWrapper;\n"],"file":"listWrapper.js"}