{"version":3,"sources":["../../../src/zhi/index.tsx"],"names":["React","styledComponents","ReadParagraph","moFactory","createListItem","ListSymbolWarmupWrapper","createInjectToNode","getNodeStyle","Paragraph","createListPlugin","config","listConfig","list","getListItemOrder","renderEditable","_","controller","next","injectToNode","queries","renderParagraph","props","node","data","attributes","children","visible","Component","type","value","document","step"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,gBAAT;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AACA,SAASC,uBAAT,EAAkCC,kBAAlC,EAAsDC,YAAtD;AAEA,IAAMC,SAAS,GAAGJ,cAAc,CAACF,aAAD,CAAhC;;AAMA,SAASO,gBAAT,CAA0BC,MAA1B,EAAiE;AAC/D,MAAMC,UAAU,GAAGD,MAAM,CAACE,IAAP,IAAe,EAAlC;AAD+D,MAEvDC,gBAFuD,GAElCF,UAFkC,CAEvDE,gBAFuD;AAI/D,sBACKV,SAAS,CAAC,EAAD,CADd;AAEEW,IAAAA,cAFF,0BAEiBC,CAFjB,EAEoBC,UAFpB,EAE4CC,IAF5C,EAEkD;AAC9C,0BACE,eAAC,uBAAD;AAAyB,QAAA,UAAU,EAAED;AAArC,SACGC,IAAI,EADP,CADF;AAKD,KARH;AASEC,IAAAA,YAAY,EAAEZ,kBAAkB,CAACK,UAAD,CATlC;AAUEJ,IAAAA,YAAY,EAAZA,YAVF;AAWEY,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,eAAe,EAAE,yBAACL,CAAD,EAAIM,KAAJ,EAAsC;AAAA;;AAAA,YAC7CC,IAD6C,GACpCD,KADoC,CAC7CC,IAD6C;;AAErD,YAAI,gBAACA,IAAI,CAACC,IAAN,aAAC,WAAWX,IAAZ,CAAJ,EAAsB;AACpB,iBAAO,IAAP;AACD;;AAJoD,YAK7CI,UAL6C,GAKCK,KALD,CAK7CL,UAL6C;AAAA,YAKjCQ,UALiC,GAKCH,KALD,CAKjCG,UALiC;AAAA,YAKrBC,QALqB,GAKCJ,KALD,CAKrBI,QALqB;AAAA,YAKXC,OALW,GAKCL,KALD,CAKXK,OALW;AAMrD,YAAMC,SAAS,GAAG1B,gBAAgB,CAACqB,IAAI,CAACM,IAAN,CAAlC;AACA,4BACE,eAAC,SAAD,eACMJ,UADN;AAEE,UAAA,UAAU,EAAER,UAFd;AAGE,UAAA,SAAS,EAAEW,SAHb;AAIE,UAAA,QAAQ,EAAEX,UAAU,CAACa,KAAX,CAAiBC,QAJ7B;AAKE,UAAA,gBAAgB,EAAEjB,gBALpB;AAME,UAAA,IAAI,EAAES,IANR;AAOE,UAAA,IAAI,EAAEA,IAAI,CAACC,IAAL,CAAUQ,IAAV,IAAkB,EAP1B;AAQE,UAAA,OAAO,EAAEL;AARX,YAUGD,QAAQ,EAVX,CADF;AAcD;AAvBM;AAXX;AAqCD;;AAED,eAAehB,gBAAf","sourcesContent":["import * as React from 'react';\nimport { Controller, Document, Block, RenderNodeProps, Plugin } from '@ali/4ever-cangjie';\nimport { styledComponents, TypeToComponentKeys } from './styledComponents';\nimport { ReadParagraph } from '@ali/4ever-plugin-paragraph';\nimport moFactory from '../mo';\nimport createListItem from './createListItem';\nimport { ListSymbolWarmupWrapper, createInjectToNode, getNodeStyle } from '../utils';\n\nconst Paragraph = createListItem(ReadParagraph);\n\nexport interface ListConfig {\n  getListItemOrder?: (document: Document, node: Block) => number;\n}\n\nfunction createListPlugin(config: { list?: ListConfig }): Plugin {\n  const listConfig = config.list || {};\n  const { getListItemOrder } = listConfig;\n\n  return {\n    ...moFactory({}),\n    renderEditable(_, controller: Controller, next) {\n      return (\n        <ListSymbolWarmupWrapper controller={controller}>\n          {next()}\n        </ListSymbolWarmupWrapper>\n      );\n    },\n    injectToNode: createInjectToNode(listConfig),\n    getNodeStyle,\n    queries: {\n      // list 和 paragraph 的 node.type 相同，提供 query 给 paragraph 渲染\n      renderParagraph: (_, props: RenderNodeProps<Block>) => {\n        const { node } = props;\n        if (!node.data?.list) {\n          return null;\n        }\n        const { controller, attributes, children, visible } = props;\n        const Component = styledComponents(node.type as TypeToComponentKeys);\n        return (\n          <Paragraph\n            {...attributes}\n            controller={controller}\n            Component={Component}\n            document={controller.value.document}\n            getListItemOrder={getListItemOrder}\n            node={node}\n            step={node.data.step || ''}\n            visible={visible}\n          >\n            {children()}\n          </Paragraph>\n        );\n      },\n    },\n  };\n}\n\nexport default createListPlugin;\n"],"file":"index.js"}