{"version":3,"sources":["../../../src/zhi/createListItem.tsx"],"names":["React","MoCommon","IndUtil","ShdUtil","theme","INDENT_SIZE","utils","ListGroupUtils","constants","ListGroupConstants","convertSymbolStyle","generateSymbol","RenderStyledListItem","ROMAN_EXTRA_INDENT","SYMBOL_STYLE","ListItemWrapper","GroupListContainer","getJustifyContent","BorderStyleEnum","isListGroupAvailable","isInUnlistGroupContainer","isNormalGroupNode","EXTRA_PADDING","DEFAULT_BORDER_COLOR","DEFAULT_SHD_MARGIN_BOTTOM","DEFAULT_SHD_STYLES","createListItem","Paragraph","ListItem","getGroupListStyle","props","node","controller","shd","data","display","paddingLeft","symbolAlign","backgroundColor","transformShd","width","paddingRight","justifyContent","align","getStyle","visible","listConfig","list","bdr","ind","pi","level","listStyle","paddingSpace","fromBlock","firstLine","left","includes","format","styleObj","textAlign","box","height","margin","padding","top","bottom","marginTop","marginBottom","val","Single","sz","color","bdrColor","space","borderStyle","borderColor","borderTop","paddingTop","borderBottom","paddingBottom","borderLeft","right","borderRight","key","Number","render","step","propStep","nodeRef","isList","paragraph","isOrdered","isTaskList","isChecked","listId","listStyleType","hideSymbol","symbolStyle","stepArray","split","propStart","length","start","listSymbol","taskListConfig","text","jc","Component","forwardRef","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Block, Controller, Document, MoCommon } from '@ali/4ever-cangjie';\nimport { IndUtil, ShdUtil, theme, INDENT_SIZE } from '@ali/4ever-utils';\nimport { utils as ListGroupUtils, constants as ListGroupConstants } from '@ali/4ever-plugin-list-group';\nimport { ParagraphData } from '@ali/4ever-plugin-paragraph';\nimport { StyledComponent } from 'styled-components';\nimport {\n  convertSymbolStyle,\n  generateSymbol,\n  RenderStyledListItem,\n  ROMAN_EXTRA_INDENT,\n  SYMBOL_STYLE,\n  ListItemWrapper,\n  GroupListContainer,\n  getJustifyContent,\n} from '../utils';\n\nconst { BorderStyleEnum } = MoCommon;\n\nconst {\n  isListGroupAvailable,\n  isInUnlistGroupContainer,\n  isNormalGroupNode,\n} = ListGroupUtils;\nconst { EXTRA_PADDING } = ListGroupConstants;\nconst DEFAULT_BORDER_COLOR = '#000000';\nconst DEFAULT_SHD_MARGIN_BOTTOM = 1;\nconst { DEFAULT_SHD_STYLES } = theme;\n\ninterface PiListProperties extends ParagraphData {\n  pi: {\n    box: any;\n  }\n}\n\nexport interface IListItemProps {\n  node: Block;\n  controller: Controller;\n  // 通过 attributes ref 转发到 paragragph 节点的 ref\n  nodeRef?: React.MutableRefObject<HTMLElement | null> | ((instance: HTMLElement | null) => void) | null;\n  step?: string;\n  children?: React.ReactNode;\n  Component?: StyledComponent<any, any>;\n  document?: Document;\n  getListItemOrder?: (document: Document, node: Block) => void;\n  visible?: boolean;\n}\n\nexport interface IProps {\n  allowCustomCheck?: boolean;\n}\n\nexport default function createListItem(Paragraph) {\n  class ListItem extends React.Component<IListItemProps> {\n    get align() {\n      const { node } = this.props;\n      return node.data.jc || 'left';\n    }\n\n    get symbolAlign() {\n      const listConfig = this.props.node.data.list;\n      const { listStyle } = listConfig;\n      if (\n        listStyle &&\n        ['upperRoman', 'lowerRoman'].includes(listStyle.format)) {\n        return 'right';\n      } else {\n        return 'left';\n      }\n    }\n\n    get isListGroupAvailable() {\n      return isListGroupAvailable(this.props.controller);\n    }\n\n    getGroupListStyle = () => {\n      const { node, controller } = this.props;\n      const { shd } = node.data;\n      if (!this.isListGroupAvailable || !shd) {\n        return {\n          display: 'contents',\n        };\n      }\n      //@ts-ignore\n      const paddingLeft = DEFAULT_SHD_STYLES.paddingLeft + (this.symbolAlign === 'right' ? ROMAN_EXTRA_INDENT : 0);\n      const backgroundColor = isNormalGroupNode(node, controller) ? ShdUtil.transformShd(shd) : 'unset';\n      const width = `calc(100% + ${(DEFAULT_SHD_STYLES.paddingLeft || 0) + (DEFAULT_SHD_STYLES.paddingRight || 0)}px)`;\n      const justifyContent = getJustifyContent(this.align);\n      return {\n        ...DEFAULT_SHD_STYLES,\n        backgroundColor,\n        paddingLeft,\n        width,\n        display: 'flex',\n        justifyContent,\n      };\n    };\n\n    /**\n     * @TODO 列表的缩进完全由 ind 来排版，不由 level 而定\n     */\n    getStyle() {\n      const { node, controller, visible } = this.props;\n      const { list: listConfig, bdr = {}, ind = {}, pi, shd } = node.data as PiListProperties;\n      const {\n        level = 0,\n        listStyle,\n      } = listConfig!;\n      let paddingSpace = level * INDENT_SIZE;\n      if (ind) {\n        const { firstLine = 0, left = 0 } = IndUtil.fromBlock(node);\n        paddingSpace += firstLine + left;\n      }\n      // 罗马数字统一右侧对齐\n      if (listStyle && ['upperRoman', 'lowerRoman'].includes(listStyle.format)) {\n        // TODO 根据字体大小，动态计算罗马数字预留空间的宽度\n        paddingSpace += this.isListGroupAvailable && shd ? 0 : ROMAN_EXTRA_INDENT;\n      }\n      const styleObj: React.CSSProperties = {\n        paddingLeft: paddingSpace,\n        textAlign: this.align === 'distribute' ? 'justify' : this.align,\n      };\n\n      // Pi-2.0：列表高度有时会被项目符号莫名撑高，且边距需要渲染在列表处才可以生效\n      if (pi && pi.box) {\n        const { height, margin = {}, padding = {} } = pi.box as any;\n        const { top = 0, bottom = 0 } = margin;\n        styleObj.height = height;\n        styleObj.marginTop = top;\n        styleObj.marginBottom = bottom;\n      }\n\n      // 列表的边框需要挂载外围的 DOM 上\n      if (bdr.top) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.top;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderTop = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingTop = space;\n      }\n      if (bdr.bottom) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.bottom;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderBottom = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingBottom = space;\n      }\n      if (bdr.left) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.left;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderLeft = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingLeft = space + paddingSpace;\n      }\n      if (bdr.right) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.right;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderRight = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingRight = space;\n      }\n\n      if (shd && !this.isListGroupAvailable) {\n        for (const key in DEFAULT_SHD_STYLES) {\n          if (typeof styleObj[key] === 'number') {\n            styleObj[key] += DEFAULT_SHD_STYLES[key];\n          } else {\n            styleObj[key] = DEFAULT_SHD_STYLES[key];\n          }\n        }\n        styleObj.backgroundColor = ShdUtil.transformShd(shd);\n        styleObj.marginBottom = DEFAULT_SHD_MARGIN_BOTTOM;\n      }\n\n      if (isInUnlistGroupContainer(node, controller)) {\n        styleObj.paddingLeft = (Number(styleObj.paddingLeft) || 0 ) + EXTRA_PADDING;\n      }\n\n      if (visible === false) {\n        styleObj.display = 'none';\n      }\n\n      return styleObj;\n    }\n\n    render() {\n      const { node, step: propStep = '', nodeRef } = this.props;\n      const listConfig = node.data.list;\n      const isList = !!listConfig;\n      const paragraph = <Paragraph isList={isList} ref={nodeRef} {...this.props} />;\n\n      if (!isList) {\n        return paragraph;\n      }\n      const {\n        isOrdered,\n        isTaskList,\n        isChecked,\n        level = 0,\n        listId,\n        listStyle,\n        listStyleType,\n        hideSymbol,\n        symbolStyle = SYMBOL_STYLE,\n      } = listConfig;\n      const stepArray = propStep.split('.');\n      const propStart = stepArray[stepArray.length - 1] || '1';\n      const { start = propStart, step = propStep } = node.data;\n      const listSymbol = isTaskList\n        ? ''\n        : generateSymbol(\n          level,\n          Number(start),\n          step,\n          isOrdered,\n          listStyleType,\n          listStyle,\n        );\n      const taskListConfig = {\n        isTaskList,\n        isChecked,\n        isOrdered,\n      };\n      return (\n        <ListItemWrapper\n          align={this.align}\n          style={this.getStyle()}\n          data-testid=\"list\"\n          data-start={start}\n          data-listid={listId}\n          data-level={level}\n          data-isordered={isOrdered}\n          data-istasklist={isTaskList}\n          data-ischecked={isChecked}\n          data-format={listStyleType?.format}\n          data-text={listStyleType?.text}\n          data-align={listStyleType?.align}\n        >\n          <GroupListContainer style={this.getGroupListStyle()}>\n            <RenderStyledListItem\n              hideSymbol={hideSymbol}\n              listSymbol={listSymbol}\n              symbolAlign={this.symbolAlign}\n              symbolStyle={convertSymbolStyle(symbolStyle, isOrdered)}\n              taskListConfig={taskListConfig}\n            >\n              {paragraph}\n            </RenderStyledListItem>\n          </GroupListContainer>\n        </ListItemWrapper>\n      );\n    }\n  };\n  return React.forwardRef<HTMLElement, IListItemProps>((props, ref) => {\n    return <ListItem {...props} nodeRef={ref} />;\n  });\n}\n"],"file":"createListItem.js"}