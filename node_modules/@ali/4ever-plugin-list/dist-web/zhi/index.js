import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { styledComponents } from "./styledComponents";
import { ReadParagraph } from '@ali/4ever-plugin-paragraph';
import moFactory from "../mo";
import createListItem from "./createListItem";
import { ListSymbolWarmupWrapper, createInjectToNode, getNodeStyle } from "../utils";
var Paragraph = createListItem(ReadParagraph);

function createListPlugin(config) {
  var listConfig = config.list || {};
  var getListItemOrder = listConfig.getListItemOrder;
  return _extends({}, moFactory({}), {
    renderEditable: function renderEditable(_, controller, next) {
      return /*#__PURE__*/_createElement(ListSymbolWarmupWrapper, {
        controller: controller
      }, next());
    },
    injectToNode: createInjectToNode(listConfig),
    getNodeStyle: getNodeStyle,
    queries: {
      // list 和 paragraph 的 node.type 相同，提供 query 给 paragraph 渲染
      renderParagraph: function renderParagraph(_, props) {
        var _node$data;

        var node = props.node;

        if (!((_node$data = node.data) != null && _node$data.list)) {
          return null;
        }

        var controller = props.controller,
            attributes = props.attributes,
            children = props.children,
            visible = props.visible;
        var Component = styledComponents(node.type);
        return /*#__PURE__*/_createElement(Paragraph, _extends({}, attributes, {
          controller: controller,
          Component: Component,
          document: controller.value.document,
          getListItemOrder: getListItemOrder,
          node: node,
          step: node.data.step || '',
          visible: visible
        }), children());
      }
    }
  });
}

export default createListPlugin;
//# sourceMappingURL=index.js.map