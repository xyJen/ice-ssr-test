{"version":3,"sources":["../../../../../src/mo/serializer/htmlToJsonML/parseFromMsWord.ts"],"names":["getChildren","unitsConverter","normalizeJsonMLChildren","toStyleObject","msWordParseSymbol","getFlattenedChildren","isMsWordList","removeSymbolText","shouldFlattenChildren","transfromIndLeft","MSO_LIST","parseFromMsWord","listData","msoListMap","temp","wordList","fromStart","preTxt","preStyle","lastLevel","isOrdered","name","onOpenTag","state","attr","inlineStyle","style","includes","fontSize","list","symbolStyle","sz","parseInt","color","wrapList","mso","split","level","Math","max","slice","listId","type","indLeft","marginLeft","textIndent","toPX","currentListId","currentListLevel","undefined","isParentOrderedList","ind","left","jc","textAlign","bold","li","push","onText","txt","trim","format","text","unwrapList","listStyleType","listStyle","length","onCloseTag","pop","flattenedChildren","append"],"mappings":"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","sourcesContent":["import { JsonML, getChildren, unitsConverter, normalizeJsonMLChildren } from '@ali/4ever-utils';\nimport { toStyleObject } from '@ali/4ever-cangjie';\nimport msWordParseSymbol from './utils/msWordParseSymbol';\nimport type { MoAttributes as Attributes, HTMLToJsonMLRule, MoState as State } from '@ali/4ever-cangjie';\nimport {\n  getFlattenedChildren,\n  isMsWordList,\n  removeSymbolText,\n  shouldFlattenChildren,\n  transfromIndLeft,\n} from './utils';\n\nconst MSO_LIST = 'msoList';\n\nfunction parseFromMsWord(): HTMLToJsonMLRule {\n  let listData;\n  const msoListMap = {};\n  const temp = {\n    // 是否在列表中\n    wordList: false,\n\n    // 是否是开始位置\n    fromStart: true,\n\n    // 上一个新增text内容\n    preTxt: '',\n\n    preStyle: '',\n\n    // 上一个列表level\n    lastLevel: 0,\n    isOrdered: null as any,\n  };\n  return {\n    name: 'list',\n    onOpenTag: (state: State, name: string, attr: Attributes): boolean => {\n      let inlineStyle;\n      if (name === 'ol' || name === 'ul') {\n        temp.isOrdered = name === 'ol';\n      }\n      if (isMsWordList(temp.preStyle) && attr.style?.includes('mso')) {\n        inlineStyle = toStyleObject(attr.style);\n        if (inlineStyle.fontSize) {\n          listData.list.symbolStyle = {\n            ...listData.list.symbolStyle,\n            sz: parseInt(inlineStyle.fontSize),\n          };\n        }\n        if (inlineStyle.color) {\n          listData.list.symbolStyle = {\n            ...listData.list.symbolStyle,\n            color: inlineStyle.color,\n          };\n        }\n        temp.preStyle = '';\n      }\n      if (!isMsWordList(attr?.style)) {\n        return false;\n      }\n      temp.preStyle = attr.style;\n      inlineStyle = inlineStyle || toStyleObject(attr.style);\n      if (!inlineStyle[MSO_LIST]) {\n        return false;\n      }\n      state.wrapList('ordered-list');\n      temp.wordList = true;\n      const mso = inlineStyle[MSO_LIST].split(' ');\n      const level = Math.max(parseInt(mso[1].slice(5)) - 1, 0);\n      const listId = mso[2];\n      const type = name.includes('h') ? name : 'p';\n      let indLeft = transfromIndLeft(inlineStyle.marginLeft || '', level);\n\n      if (inlineStyle.textIndent) {\n        const textIndent = unitsConverter.toPX(inlineStyle.textIndent);\n        if (textIndent > 0) {\n          indLeft += textIndent;\n        }\n      }\n\n      state.currentListId = listId;\n      state.currentListLevel = level;\n      if (!msoListMap[listId]) {\n        msoListMap[listId] = {};\n      }\n      if (msoListMap[listId][level] === undefined || level > temp.lastLevel) {\n        msoListMap[listId][level] = 1;\n      } else {\n        msoListMap[listId][level]++;\n      }\n      listData = {\n        list: {\n          listId,\n          isOrdered: state.isParentOrderedList(),\n          level,\n        },\n        ind: {\n          left: indLeft,\n        },\n        jc: inlineStyle.textAlign || 'left',\n      };\n      if (name.includes('h')) {\n        listData.list.symbolStyle = {\n          bold: true,\n        };\n      }\n      const li: JsonML = [type, listData] as JsonML;\n      state.push(li);\n      return true;\n    },\n\n    onText: (state: State, txt: string) => {\n      if (!temp.wordList) return false;\n      if (temp.fromStart && txt.trim() !== '') {\n        // 通过解析text内容，获取列表类型，更新列表信息\n        temp.fromStart = false;\n        const listId = state.currentListId;\n        const level = state.currentListLevel;\n        if (!listId || level === undefined || level === null) return false;\n        const [format, text, type] = msWordParseSymbol(\n          txt,\n          msoListMap[listId][level],\n          level,\n          temp.isOrdered,\n        );\n        if (format !== 'bullet') {\n          state.unwrapList();\n          state.wrapList('ordered-list');\n        }\n        listData.list.isOrdered = format !== 'bullet';\n        listData.list.listStyleType = type;\n        listData.list.listStyle = {\n          ...listData.list.listStyle,\n          format,\n          text,\n        };\n      }\n      if (\n        temp.preTxt.trim() !== '' &&\n        !(!listData.list.isOrdered && temp.preTxt.length !== 1)\n      ) {\n        // 删除项目符号相关text，仅保留列表内容\n        removeSymbolText(state, temp.preTxt);\n      }\n      temp.preTxt += txt;\n      return false;\n    },\n\n    onCloseTag: (state: State, name: string, attr: Attributes): boolean => {\n      if (name === 'ol' || name === 'ul') {\n        temp.isOrdered = null;\n      }\n      if (!isMsWordList(attr?.style)) {\n        return false;\n      }\n      temp.wordList = false;\n      temp.fromStart = true;\n      state.unwrapList();\n      const li = state.pop();\n      if (shouldFlattenChildren(li)) {\n        const flattenedChildren: JsonML[] = getFlattenedChildren(li);\n        state.append(...flattenedChildren);\n      } else if (getChildren(li).length) {\n        state.append(normalizeJsonMLChildren(li));\n      }\n      temp.preTxt = '';\n      return true;\n    },\n  };\n}\n\nexport default parseFromMsWord;\n"],"file":"parseFromMsWord.js"}