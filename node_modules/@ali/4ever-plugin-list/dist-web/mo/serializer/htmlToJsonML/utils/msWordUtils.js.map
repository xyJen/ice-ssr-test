{"version":3,"sources":["../../../../../../src/mo/serializer/htmlToJsonML/utils/msWordUtils.ts"],"names":["getLastChild","unitsConverter","indent","isElement","ele","Array","isArray","WORD_INDENT","transfromIndLeft","marginLeft","level","INDENT_SIZE","size","indLeft","toPT","Math","round","removeSymbolText","state","preTxt","parent","peek","prevSibling","asl","find","item","symbolTextTrimed","symbolTxt","indexOf","slice","length","trim","isMsWordList","style","includes"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,MAAvC,QAAqD,kBAArD;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,SAASC,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsB,OAAOA,GAAG,CAAC,CAAD,CAAV,KAAkB,QAAjD;AAAA,CAAlB,C,CAEA;;;AACA,IAAMG,WAAW,GAAG,EAApB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,UAA1B,EAA8CC,KAA9C,EAAqE;AAC1E,MAAMC,WAAW,GAAGT,MAAM,CAACU,IAA3B;AACA,MAAMC,OAAO,GAAGZ,cAAc,CAACa,IAAf,CAAoBL,UAApB,CAAhB;AACA,SACEM,IAAI,CAACC,KAAL,CAAW,CAACH,OAAO,GAAG,CAACH,KAAK,GAAG,CAAT,IAAcH,WAAzB,IAAwCA,WAAnD,IACAI,WAFF;AAID;AAED;AACA;AACA;;AACA,OAAO,SAASM,gBAAT,CAA0BC,KAA1B,EAAwCC,MAAxC,EAAwD;AAC7D,MAAMC,MAAM,GAAGF,KAAK,CAACG,IAAN,EAAf;AACA,MAAMC,WAAW,GAAGtB,YAAY,CAACoB,MAAD,CAAhC;;AACA,MAAIE,WAAJ,EAAiB;AACf,QAAMC,GAAG,GAAGD,WAAW,CAACE,IAAZ,CAAiB,UAACC,IAAD;AAAA,aAAUtB,SAAS,CAACsB,IAAD,CAAnB;AAAA,KAAjB,CAAZ;AACA,QAAIC,gBAAgB,GAAG,EAAvB;AACA,QAAMC,SAAS,GAAG,OAAOJ,GAAG,CAAC,CAAD,CAAV,KAAkB,QAAlB,GAA6BA,GAAG,CAAC,CAAD,CAAhC,GAAsCA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAxD;;AACA,QAAII,SAAS,CAACC,OAAV,CAAkBT,MAAlB,MAA8B,CAAlC,EAAqC;AACnCO,MAAAA,gBAAgB,GAAGC,SAAS,CAACE,KAAV,CAAgBV,MAAM,CAACW,MAAvB,EAA+BC,IAA/B,EAAnB;AACD,KAFD,MAEO;AACLL,MAAAA,gBAAgB,GAAGC,SAAS,CAACI,IAAV,EAAnB;AACD;;AACD,QAAI,OAAOR,GAAG,CAAC,CAAD,CAAV,KAAkB,QAAtB,EAAgC;AAC9BA,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASG,gBAAT;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAYG,gBAAZ;AACD;AACF;AACF;AAED;AACA;AACA;;AACA,OAAO,SAASM,YAAT,CAAsBC,KAAtB,EAA8C;AACnD,MAAI,CAACA,KAAL,EAAY,OAAO,KAAP;AACZ,SAAO,CAAAA,KAAK,QAAL,YAAAA,KAAK,CAAEC,QAAP,CAAgB,UAAhB,MAA+BD,KAAK,CAACC,QAAN,CAAe,OAAf,CAA/B,IAA0DD,KAAK,CAACC,QAAN,CAAe,KAAf,CAAjE;AACD","sourcesContent":["import { getLastChild, unitsConverter, indent } from '@ali/4ever-utils';\nimport type { MoState as State } from '@ali/4ever-cangjie';\n\nconst isElement = (ele) => Array.isArray(ele) && typeof ele[0] === 'string';\n\n// word一个level的缩进单位\nconst WORD_INDENT = 21;\n\n/**\n * @description word缩进单位与仓颉的缩进单位不同，此函数做单位转换\n * */\nexport function transfromIndLeft(marginLeft: string, level: number): number {\n  const INDENT_SIZE = indent.size;\n  const indLeft = unitsConverter.toPT(marginLeft);\n  return (\n    Math.round((indLeft - (level + 1) * WORD_INDENT) / WORD_INDENT) *\n    INDENT_SIZE\n  );\n}\n\n/**\n * @description 移除掉word 节点中项目符号相关的文本，只保留列表内容\n * */\nexport function removeSymbolText(state: State, preTxt: string) {\n  const parent = state.peek();\n  const prevSibling = getLastChild(parent);\n  if (prevSibling) {\n    const asl = prevSibling.find((item) => isElement(item));\n    let symbolTextTrimed = '';\n    const symbolTxt = typeof asl[2] === 'string' ? asl[2] : asl[2][2];\n    if (symbolTxt.indexOf(preTxt) === 0) {\n      symbolTextTrimed = symbolTxt.slice(preTxt.length).trim();\n    } else {\n      symbolTextTrimed = symbolTxt.trim();\n    }\n    if (typeof asl[2] === 'string') {\n      asl[2] = symbolTextTrimed;\n    } else {\n      asl[2][2] = symbolTextTrimed;\n    }\n  }\n}\n\n/**\n * @description 通过style判断是否为word列表项\n * */\nexport function isMsWordList(style: string): boolean {\n  if (!style) return false;\n  return style?.includes('mso-list') && style.includes('level') && style.includes('lfo');\n}\n"],"file":"msWordUtils.js"}