{"version":3,"sources":["../../../../src/mo/serializer/valueToText.ts"],"names":["Block","Paragraph","generateSymbol","injectToValue","CHECK_LIST_CHECKED_SYMBOL","CHECK_LIST_UNCHECKED_SYMBOL","INDENT","SPACE","BREAK","valueToText","name","match","node","isParagraph","data","list","convert","isBlock","text","nodes","map","child","join","start","step","level","isOrdered","isTaskList","isChecked","listStyle","listStyleType","safeLevel","indent","Array","fill","listSymbol","hooks","before"],"mappings":"AAAA,SAASA,KAAT,QAAuC,oBAAvC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,cAAT;AAEA,OAAOC,aAAP;AAEA;AACA;AACA;;AACA,OAAO,IAAMC,yBAAyB,GAAG,QAAlC;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,2BAA2B,GAAG,QAApC;AAEP,IAAMC,MAAM,GAAG,IAAf;AAEA,IAAMC,KAAK,GAAG,GAAd;AAEA,IAAMC,KAAK,GAAG,IAAd;AAEA;AACA;AACA;AACA;;AACA,IAAMC,WAA4B,GAAG;AACnCC,EAAAA,IAAI,EAAE,MAD6B;AAGnCC,EAAAA,KAHmC,iBAG7BC,IAH6B,EAGvB;AACV,WAAOX,SAAS,CAACY,WAAV,CAAsBD,IAAtB,KAA+B,CAAC,CAACA,IAAI,CAACE,IAAL,CAAUC,IAAlD;AACD,GALkC;AAOnCC,EAAAA,OAPmC,mBAO3BJ,IAP2B,EAOrBI,QAPqB,EAOZ;AACrB,QAAI,CAAChB,KAAK,CAACiB,OAAN,CAAcL,IAAd,CAAL,EAA0B;AACxB,aAAOA,IAAI,CAACM,IAAZ;AACD;;AACD,QAAMA,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAe,UAACC,KAAD;AAAA,aAAWL,QAAO,CAACK,KAAD,CAAlB;AAAA,KAAf,EAA0CC,IAA1C,CAA+C,EAA/C,CAAb;;AAJqB,eAKwBV,IAAI,CAACE,IAAL,IAAmC,EAL3D;AAAA,yBAKbC,IALa;AAAA,QAKbA,IALa,0BAKN,EALM;AAAA,0BAKFQ,KALE;AAAA,QAKFA,KALE,2BAKM,CALN;AAAA,yBAKSC,IALT;AAAA,QAKSA,IALT,0BAKgB,GALhB;;AAAA,sBAajBT,IAbiB,CAOnBU,KAPmB;AAAA,QAOnBA,KAPmB,4BAOX,CAPW;AAAA,0BAajBV,IAbiB,CAQnBW,SARmB;AAAA,QAQnBA,SARmB,gCAQP,KARO;AAAA,2BAajBX,IAbiB,CASnBY,UATmB;AAAA,QASnBA,UATmB,iCASN,KATM;AAAA,0BAajBZ,IAbiB,CAUnBa,SAVmB;AAAA,QAUnBA,SAVmB,gCAUP,KAVO;AAAA,QAWnBC,SAXmB,GAajBd,IAbiB,CAWnBc,SAXmB;AAAA,QAYnBC,aAZmB,GAajBf,IAbiB,CAYnBe,aAZmB,EAcrB;;AACA,QAAMC,SAAS,GAAGN,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoB,CAAtC;AACA,QAAMO,MAAM,GAAGC,KAAK,CAACF,SAAD,CAAL,CAAiBG,IAAjB,CAAsB5B,MAAtB,EAA8BgB,IAA9B,CAAmC,EAAnC,CAAf;AACA,QAAIa,UAAU,GAAG,EAAjB;;AACA,QAAIR,UAAJ,EAAgB;AACd;AACAQ,MAAAA,UAAU,GAAGP,SAAS,GAAGxB,yBAAH,GAA+BC,2BAArD;AACD,KAHD,MAGO;AACL;AACA8B,MAAAA,UAAU,GAAGjC,cAAc,CAACuB,KAAD,EAAQF,KAAR,EAAeC,IAAf,EAAqBE,SAArB,EAAgCI,aAAhC,EAA+CD,SAA/C,CAA3B;AACD;;AACD,WAAOG,MAAM,GAAGG,UAAT,GAAsB5B,KAAtB,GAA8BW,IAA9B,GAAqCV,KAA5C;AACD,GAjCkC;AAmCnC4B,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAElC;AADH;AAnC4B,CAArC;AAwCA,eAAeM,WAAf","sourcesContent":["import { Block, ValueToTextRule } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { generateSymbol } from '../../utils/generateSymbol';\nimport type { ListDataProperties } from '../../utils/types';\nimport injectToValue from './injectToValue';\n\n/**\n * 任务列表 checked 状态: ☑\n */\nexport const CHECK_LIST_CHECKED_SYMBOL = '\\u2611';\n\n/**\n * 任务列表 unchecked 状态: ☐\n */\nexport const CHECK_LIST_UNCHECKED_SYMBOL = '\\u2610';\n\nconst INDENT = '\\t';\n\nconst SPACE = ' ';\n\nconst BREAK = '\\n';\n\n/**\n * 列表转换成纯文本\n * 目前支持导出的符号有三种：无序列表、有序列表、任务列表，且有序列表的符号会预先设置好 injection 的等级\n */\nconst valueToText: ValueToTextRule = {\n  name: 'list',\n\n  match(node) {\n    return Paragraph.isParagraph(node) && !!node.data.list;\n  },\n\n  convert(node, convert) {\n    if (!Block.isBlock(node)) {\n      return node.text;\n    }\n    const text = node.nodes.map((child) => convert(child)).join('');\n    const { list = {}, start = 1, step = '1' } = node.data as ListDataProperties || {};\n    const {\n      level = 0,\n      isOrdered = false,\n      isTaskList = false,\n      isChecked = false,\n      listStyle,\n      listStyleType,\n    } = list;\n    // level 为负值会抛错\n    const safeLevel = level > 0 ? level : 0;\n    const indent = Array(safeLevel).fill(INDENT).join('');\n    let listSymbol = '';\n    if (isTaskList) {\n      // 任务列表用 Unicode 字符\n      listSymbol = isChecked ? CHECK_LIST_CHECKED_SYMBOL : CHECK_LIST_UNCHECKED_SYMBOL;\n    } else {\n      // 普通列表计算 symbol\n      listSymbol = generateSymbol(level, start, step, isOrdered, listStyleType, listStyle);\n    }\n    return indent + listSymbol + SPACE + text + BREAK;\n  },\n\n  hooks: {\n    before: injectToValue,\n  },\n};\n\nexport default valueToText;\n"],"file":"valueToText.js"}