import styled from 'styled-components';
import getJustifyContent from "./getJustifyContent";
// TODO: 插件迁移  list 不能对 heading 产生依赖(否则会有循环依赖)，这里先拷贝一份 HeadingTypes，待确认为什么 list 的组件需要有 heading 的 css 设置
var HeadingTypes;

(function (HeadingTypes) {
  HeadingTypes["Heading1"] = "heading-1";
  HeadingTypes["Heading2"] = "heading-2";
  HeadingTypes["Heading3"] = "heading-3";
  HeadingTypes["Heading4"] = "heading-4";
  HeadingTypes["Heading5"] = "heading-5";
  HeadingTypes["Heading6"] = "heading-6";
})(HeadingTypes || (HeadingTypes = {}));

export var ListItemWrapper = /*#__PURE__*/styled.div(["display:flex;align-items:baseline;justify-content:", ";& [data-type='paragraph'],", "{overflow:hidden;}", " ", ""], function (props) {
  return getJustifyContent(props.align);
}, Object.keys(HeadingTypes).map(function (key) {
  return "[data-type='" + HeadingTypes[key] + "']";
}).join(','), function (props) {
  var isChecked = props['data-ischecked'];
  return isChecked ? 'span { text-decoration: line-through; } ' : '';
}, function (props) {
  var contentStyle = props.contentStyle;

  if (!contentStyle) {
    return '';
  }

  return "& [data-type=\"paragraph\"] { width: " + contentStyle.width + "; flex: " + contentStyle.flex + "  }";
});
export var GroupListContainer = /*#__PURE__*/styled.div(["display:flex;width:100%;align-items:baseline;"]);
//# sourceMappingURL=styled.js.map