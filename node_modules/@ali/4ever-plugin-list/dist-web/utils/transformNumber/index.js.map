{"version":3,"sources":["../../../../src/utils/transformNumber/index.ts"],"names":["arabic2Chinese","CHINESE_NUMBER_LIST","CHINESE_UNIT_LIST","arabic2Letter","LETTER_LIST","arabic2Roma","ROMA_LIST","arabic2Darabic","chinese2Arabic","roman2Arabic","letter2Arabic","transformNumber","num","type","result","slice","String","transformString","str","parseInt"],"mappings":"AAAA,OAAOA,cAAP,IAAyBC,mBAAzB,EAA8CC,iBAA9C;AACA,OAAOC,aAAP,IAAwBC,WAAxB;AACA,OAAOC,WAAP,IAAsBC,SAAtB;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAcC,IAAd,EAAuC;AAC7D,MAAIC,MAAM,GAAG,EAAb;;AACA,UAAQD,IAAR;AACE,SAAK,aAAL;AACEC,MAAAA,MAAM,GAAGP,cAAc,CAACK,GAAD,CAAvB;AACA;;AACF,SAAK,yBAAL;AACA,SAAK,iBAAL;AACA,SAAK,kBAAL;AACEE,MAAAA,MAAM,GAAGd,cAAc,CAACY,GAAD,CAAvB;AACA;;AACF,SAAK,aAAL;AACA,SAAK,aAAL;AACEE,MAAAA,MAAM,GAAGX,aAAa,CAACS,GAAD,EAAMC,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAd,CAAN,CAAtB;AACA;;AACF,SAAK,YAAL;AACA,SAAK,YAAL;AACED,MAAAA,MAAM,GAAGT,WAAW,CAACO,GAAD,EAAMC,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAd,CAAN,CAApB;AACA;;AACF;AACED,MAAAA,MAAM,GAAGE,MAAM,CAACJ,GAAD,CAAf;AACA;AAnBJ;;AAqBA,SAAOE,MAAP;AACD,CAxBD;;AA0BA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAcL,IAAd,EAAuC;AAC7D,MAAIC,MAAM,GAAG,CAAb;;AACA,UAAQD,IAAR;AACE,SAAK,SAAL;AACEC,MAAAA,MAAM,GAAGN,cAAc,CAACU,GAAD,CAAvB;AACA;;AACF,SAAK,OAAL;AACEJ,MAAAA,MAAM,GAAGL,YAAY,CAACS,GAAD,CAArB;AACA;;AACF,SAAK,QAAL;AACEJ,MAAAA,MAAM,GAAGJ,aAAa,CAACQ,GAAD,CAAtB;AACA;;AACF;AACE,aAAOC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAf;AAXJ;;AAaA,SAAOJ,MAAP;AACD,CAhBD;;AAkBA,SACEd,cADF,EAEEO,cAFF,EAGEJ,aAHF,EAIEE,WAJF,EAKEM,eALF,EAMEM,eANF,EAOEhB,mBAPF,EAQEC,iBARF,EASEE,WATF,EAUEE,SAVF","sourcesContent":["import arabic2Chinese, { CHINESE_NUMBER_LIST, CHINESE_UNIT_LIST } from './arabic2Chinese';\nimport arabic2Letter, { LETTER_LIST } from './arabic2Letter';\nimport arabic2Roma, { ROMA_LIST } from './arabic2Roma';\nimport arabic2Darabic from './arabic2Darabic';\nimport chinese2Arabic from './chinese2Arabic';\nimport roman2Arabic from './roma2Arabic';\nimport letter2Arabic from './letter2Arabic';\n\nconst transformNumber = (num: number, type: string): string => {\n  let result = '';\n  switch (type) {\n    case 'decimalZero':\n      result = arabic2Darabic(num);\n      break;\n    case 'chineseCountingThousand':\n    case 'chineseCounting':\n    case 'japaneseCounting':\n      result = arabic2Chinese(num);\n      break;\n    case 'upperLetter':\n    case 'lowerLetter':\n      result = arabic2Letter(num, type.slice(0, 5));\n      break;\n    case 'upperRoman':\n    case 'lowerRoman':\n      result = arabic2Roma(num, type.slice(0, 5));\n      break;\n    default:\n      result = String(num);\n      break;\n  }\n  return result;\n};\n\nconst transformString = (str: string, type: string): number => {\n  let result = 0;\n  switch (type) {\n    case 'chinese':\n      result = chinese2Arabic(str);\n      break;\n    case 'roman':\n      result = roman2Arabic(str);\n      break;\n    case 'letter':\n      result = letter2Arabic(str);\n      break;\n    default:\n      return parseInt(str, 10);\n  }\n  return result;\n};\n\nexport {\n  arabic2Chinese,\n  arabic2Darabic,\n  arabic2Letter,\n  arabic2Roma,\n  transformNumber,\n  transformString,\n  CHINESE_NUMBER_LIST,\n  CHINESE_UNIT_LIST,\n  LETTER_LIST,\n  ROMA_LIST\n};\n"],"file":"index.js"}