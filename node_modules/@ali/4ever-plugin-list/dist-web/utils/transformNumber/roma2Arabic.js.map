{"version":3,"sources":["../../../../src/utils/transformNumber/roma2Arabic.ts"],"names":["roman2Arabic","roman","map","I","IV","V","IX","X","XL","L","XC","C","CD","D","CM","M","ans","toUpperCase","i","length","substring"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6C;AAC1D,MAAMC,GAAG,GAAG;AACVC,IAAAA,CAAC,EAAE,CADO;AAEVC,IAAAA,EAAE,EAAE,CAFM;AAGVC,IAAAA,CAAC,EAAE,CAHO;AAIVC,IAAAA,EAAE,EAAE,CAJM;AAKVC,IAAAA,CAAC,EAAE,EALO;AAMVC,IAAAA,EAAE,EAAE,EANM;AAOVC,IAAAA,CAAC,EAAE,EAPO;AAQVC,IAAAA,EAAE,EAAE,EARM;AASVC,IAAAA,CAAC,EAAE,GATO;AAUVC,IAAAA,EAAE,EAAE,GAVM;AAWVC,IAAAA,CAAC,EAAE,GAXO;AAYVC,IAAAA,EAAE,EAAE,GAZM;AAaVC,IAAAA,CAAC,EAAE;AAbO,GAAZ;AAeA,MAAIC,GAAG,GAAG,CAAV;AACAf,EAAAA,KAAK,GAAGA,KAAK,CAACgB,WAAN,EAAR;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,KAAK,CAACkB,MAA1B,GAAmC;AACjC,QAAID,CAAC,GAAG,CAAJ,GAAQjB,KAAK,CAACkB,MAAd,IAAwBjB,GAAG,CAACD,KAAK,CAACmB,SAAN,CAAgBF,CAAhB,EAAmBA,CAAC,GAAG,CAAvB,CAAD,CAA/B,EAA4D;AAC1DF,MAAAA,GAAG,IAAId,GAAG,CAACD,KAAK,CAACmB,SAAN,CAAgBF,CAAhB,EAAmBA,CAAC,GAAG,CAAvB,CAAD,CAAV;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD,KAHD,MAGO;AACLF,MAAAA,GAAG,IAAId,GAAG,CAACD,KAAK,CAACmB,SAAN,CAAgBF,CAAhB,EAAmBA,CAAC,GAAG,CAAvB,CAAD,CAAV;AACAA,MAAAA,CAAC;AACF;AACF;;AACD,SAAOF,GAAP;AACD","sourcesContent":["export default function roman2Arabic(roman: string): number {\n  const map = {\n    I: 1,\n    IV: 4,\n    V: 5,\n    IX: 9,\n    X: 10,\n    XL: 40,\n    L: 50,\n    XC: 90,\n    C: 100,\n    CD: 400,\n    D: 500,\n    CM: 900,\n    M: 1000,\n  };\n  let ans = 0;\n  roman = roman.toUpperCase();\n  for (let i = 0; i < roman.length;) {\n    if (i + 1 < roman.length && map[roman.substring(i, i + 2)]) {\n      ans += map[roman.substring(i, i + 2)];\n      i += 2;\n    } else {\n      ans += map[roman.substring(i, i + 1)];\n      i++;\n    }\n  }\n  return ans;\n}\n"],"file":"roma2Arabic.js"}