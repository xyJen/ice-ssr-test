{"version":3,"sources":["../../../../src/utils/components/ListSymbolWarmupWrapper.tsx"],"names":["React","Block","TextMeasure","CJK_REG","generateSymbol","SYMBOL_DEFAULT_FONT","SYMBOL_DEFAULT_SIZE","convertSymbolStyle","ListSymbolWarmupWrapper","controller","children","useMemo","document","view","batch","forEachDescendant","node","isBlock","listConfig","data","list","isTaskList","step","start","isOrdered","level","listStyle","listStyleType","symbolStyle","symbol","Number","style","i","length","char","test","fontFamilies","fontFamily","Set","sizes","add","String","fontSize","warmup"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAqBC,KAArB,QAAkC,oBAAlC;AACA,SAASC,WAAT,EAAsBC,OAAtB;AAEA,SAASC,cAAT;AACA,SAASC,mBAAT,EAA8BC,mBAA9B;AACA,SAASC,kBAAT;AAMA,eAAe,SAASC,uBAAT,OAAyF;AAAA,MAAtDC,UAAsD,QAAtDA,UAAsD;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AACtGV,EAAAA,KAAK,CAACW,OAAN,CAAc,YAAM;AAClB,QAAMC,QAAQ,GAAGH,UAAU,CAACI,IAA5B;AACA,QAAMC,KAAkB,GAAG,EAA3B;AACAF,IAAAA,QAAQ,CAACG,iBAAT,CAA2B,UAAAC,IAAI,EAAI;AACjC,UAAI,CAACf,KAAK,CAACgB,OAAN,CAAcD,IAAd,CAAL,EAA0B;AACxB;AACD;;AACD,UAAME,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUC,IAA7B;;AACA,UAAI,CAACF,UAAD,IAAeA,UAAU,CAACG,UAA9B,EAA0C;AACxC;AACD;;AAPgC,uBAQLL,IAAI,CAACG,IARA;AAAA,UAQzBG,IARyB,cAQzBA,IARyB;AAAA,wCAQnBC,KARmB;AAAA,UAQnBA,KARmB,iCAQX,CARW;AAAA,UAU/BC,SAV+B,GAe7BN,UAf6B,CAU/BM,SAV+B;AAAA,8BAe7BN,UAf6B,CAW/BO,KAX+B;AAAA,UAW/BA,KAX+B,kCAWvB,CAXuB;AAAA,UAY/BC,SAZ+B,GAe7BR,UAf6B,CAY/BQ,SAZ+B;AAAA,UAa/BC,aAb+B,GAe7BT,UAf6B,CAa/BS,aAb+B;AAAA,UAc/BC,WAd+B,GAe7BV,UAf6B,CAc/BU,WAd+B;AAgBjC,UAAMC,MAAM,GAAGzB,cAAc,CAC3BqB,KAD2B,EAE3BK,MAAM,CAACP,KAAD,CAFqB,EAG3BD,IAH2B,EAI3BE,SAJ2B,EAK3BG,aAL2B,EAM3BD,SAN2B,CAA7B;AAQA,UAAMK,KAAK,GAAGxB,kBAAkB,CAACqB,WAAD,EAAcJ,SAAd,CAAhC;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,YAAME,KAAI,GAAG/B,OAAO,CAACgC,IAAR,CAAaN,MAAM,CAACG,CAAD,CAAnB,IAA0B,GAA1B,GAAgCH,MAAM,CAACG,CAAD,CAAnD;;AACA,YAAI,CAAClB,KAAK,CAACoB,KAAD,CAAV,EAAkB;AAChBpB,UAAAA,KAAK,CAACoB,KAAD,CAAL,GAAc,EAAd;AACD;;AACD,YAAME,YAAY,GAAGtB,KAAK,CAACoB,KAAD,CAA1B;AACA,YAAMG,UAAU,GAAGN,KAAK,CAACM,UAAN,IAAoBhC,mBAAvC;;AACA,YAAI,CAAC+B,YAAY,CAACC,UAAD,CAAjB,EAA+B;AAC7BD,UAAAA,YAAY,CAACC,UAAD,CAAZ,GAA2B,IAAIC,GAAJ,EAA3B;AACD;;AACD,YAAMC,KAAK,GAAGH,YAAY,CAACC,UAAD,CAA1B;AACAE,QAAAA,KAAK,CAACC,GAAN,CAAUC,MAAM,CAACV,KAAK,CAACW,QAAN,IAAkBpC,mBAAnB,CAAhB;AACD;AACF,KAtCD;AAuCAJ,IAAAA,WAAW,CAACyC,MAAZ,CAAmB7B,KAAnB;AACD,GA3CD,EA2CG,EA3CH;AA4CA,sBAAO,qCAAGJ,QAAH,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller, Block } from '@ali/4ever-cangjie';\nimport { TextMeasure, CJK_REG } from '../measure';\nimport type { WarmupBatch } from '../measure';\nimport { generateSymbol } from '../generateSymbol';\nimport { SYMBOL_DEFAULT_FONT, SYMBOL_DEFAULT_SIZE } from '../getSymbolRightSpace';\nimport { convertSymbolStyle } from '../getSymbolStyleByKey';\n\ninterface ListSymbolWarmupWrapperProps {\n  controller: Controller;\n  children: React.ReactNode;\n}\nexport default function ListSymbolWarmupWrapper({ controller, children }: ListSymbolWarmupWrapperProps) {\n  React.useMemo(() => {\n    const document = controller.view;\n    const batch: WarmupBatch = {};\n    document.forEachDescendant(node => {\n      if (!Block.isBlock(node)) {\n        return;\n      }\n      const listConfig = node.data.list;\n      if (!listConfig || listConfig.isTaskList) {\n        return;\n      }\n      const { step, start = 1 } = node.data;\n      const {\n        isOrdered,\n        level = 0,\n        listStyle,\n        listStyleType,\n        symbolStyle,\n      } = listConfig;\n      const symbol = generateSymbol(\n        level,\n        Number(start),\n        step,\n        isOrdered,\n        listStyleType,\n        listStyle,\n      );\n      const style = convertSymbolStyle(symbolStyle, isOrdered);\n      for (let i = 0; i < symbol.length; i += 1) {\n        const char = CJK_REG.test(symbol[i]) ? 'ä¸­' : symbol[i];\n        if (!batch[char]) {\n          batch[char] = {};\n        }\n        const fontFamilies = batch[char];\n        const fontFamily = style.fontFamily || SYMBOL_DEFAULT_FONT;\n        if (!fontFamilies[fontFamily]) {\n          fontFamilies[fontFamily] = new Set();\n        }\n        const sizes = fontFamilies[fontFamily];\n        sizes.add(String(style.fontSize || SYMBOL_DEFAULT_SIZE));\n      }\n    });\n    TextMeasure.warmup(batch);\n  }, []);\n  return <>{children}</>;\n}"],"file":"ListSymbolWarmupWrapper.js"}