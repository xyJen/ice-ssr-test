{"version":3,"sources":["../../../../src/bi/mobile/onAction.ts"],"names":["LIST_REMOVE_LIST","LIST_SET_CHECK_STATUS","LIST_TOGGLE_LIST","LIST_TRANSFORM","toggleWrapInList","transform","removeListNode","toggleCheckStatus","onAction","action","controller","next","type","payload","listType","listStyleType","node","checked","key"],"mappings":"AACA,SACEA,gBADF,EAEEC,qBAFF,EAGEC,gBAHF,EAIEC,cAJF;AAMA,SACEC,gBADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,iBAJF;AAOA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAkDC,IAAlD,EAAwD;AAAA,MAC7DC,IAD6D,GAC3CH,MAD2C,CAC7DG,IAD6D;AAAA,MACvDC,OADuD,GAC3CJ,MAD2C,CACvDI,OADuD;;AAErE,MAAID,IAAI,KAAKV,gBAAb,EAA+B;AAAA,QACrBY,QADqB,GACOD,OADP,CACrBC,QADqB;AAAA,QACXC,aADW,GACOF,OADP,CACXE,aADW;AAE7B,WAAOX,gBAAgB,CAACM,UAAD,EAAaI,QAAb,EAAuBC,aAAvB,CAAvB;AACD;;AACD,MAAIH,IAAI,KAAKT,cAAb,EAA6B;AAAA,QACnBW,SADmB,GACSD,OADT,CACnBC,QADmB;AAAA,QACTC,cADS,GACSF,OADT,CACTE,aADS;AAE3B,WAAOV,SAAS,CAACK,UAAD,EAAaI,SAAb,EAAuBC,cAAvB,CAAhB,CAF2B,CAG3B;AACD;;AACD,MAAIH,IAAI,KAAKZ,gBAAb,EAA+B;AAC7B,WAAOM,cAAc,CAACI,UAAD,CAArB;AACD;;AACD,MAAIE,IAAI,KAAKX,qBAAb,EAAoC;AAAA,QAC1Be,IAD0B,GACRH,OADQ,CAC1BG,IAD0B;AAAA,QACpBC,OADoB,GACRJ,OADQ,CACpBI,OADoB;AAElC,WAAOV,iBAAiB,CAACG,UAAD,EAAaM,IAAI,CAACE,GAAlB,EAAuBD,OAAvB,CAAxB;AACD;;AACD,SAAON,IAAI,EAAX;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport {\n  LIST_REMOVE_LIST,\n  LIST_SET_CHECK_STATUS,\n  LIST_TOGGLE_LIST,\n  LIST_TRANSFORM,\n} from '../actions';\nimport {\n  toggleWrapInList,\n  transform,\n  removeListNode,\n  toggleCheckStatus,\n} from '../commands';\n\nexport default function onAction(action, controller: Controller, next) {\n  const { type, payload } = action;\n  if (type === LIST_TOGGLE_LIST) {\n    const { listType, listStyleType } = payload;\n    return toggleWrapInList(controller, listType, listStyleType);\n  }\n  if (type === LIST_TRANSFORM) {\n    const { listType, listStyleType } = payload;\n    return transform(controller, listType, listStyleType);\n    // return controller.command(transform, listType, listStyleType);\n  }\n  if (type === LIST_REMOVE_LIST) {\n    return removeListNode(controller);\n  }\n  if (type === LIST_SET_CHECK_STATUS) {\n    const { node, checked } = payload;\n    return toggleCheckStatus(controller, node.key, checked);\n  }\n  return next();\n}\n"],"file":"onAction.js"}