{"version":3,"sources":["../../../../../src/bi/components/next/taskListButton.tsx"],"names":["React","TaskListButton","Button","isTaskList","toggleList","TASKLIST_HOT_KEY_TIP","ListRole","isDisabled","controller","isCollapsedAtEdge","value","selection","query","Boolean","props","locale","disabled","tooltipProp","tooltip","rest","isActive","handleClick","useCallback","run","useMemo","title","taskList","shortCut","description","space","listTask"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAA+BC,cAAc,IAAIC,MAAjD,QAA+D,sBAA/D;AACA,OAAOC,UAAP;AACA,SAASC,UAAT;AACA,SAASC,oBAAT;AACA,SAASC,QAAT;;AAOA,IAAMC,UAAU,GAAG,oBAACC,UAAD,EAA4B;AAAA,MACrCC,iBADqC,GACfD,UAAU,CAACE,KAAX,CAAiBC,SADF,CACrCF,iBADqC;AAE7C,MAAMF,UAAU,GACdE,iBAAiB,IACjBD,UAAU,CAACI,KAAX,CAAiB,iBAAjB,CADA,IAEA;AACAJ,EAAAA,UAAU,CAACI,KAAX,CAAiB,6BAAjB,CAJF;AAKA,SAAOC,OAAO,CAACN,UAAD,CAAd;AACD,CARD;;AAUA,eAAe,SAASN,cAAT,CAAwBa,KAAxB,EAAoD;AAAA,MACzDN,UADyD,GACOM,KADP,CACzDN,UADyD;AAAA,MAC7CO,MAD6C,GACOD,KADP,CAC7CC,MAD6C;AAAA,MACrCC,QADqC,GACOF,KADP,CACrCE,QADqC;AAAA,MAClBC,WADkB,GACOH,KADP,CAC3BI,OAD2B;AAAA,MACFC,IADE,iCACOL,KADP;;AAEjE,MAAMM,QAAQ,GAAGjB,UAAU,CAACK,UAAD,CAA3B;AAEA,MAAMa,WAAW,GAAGrB,KAAK,CAACsB,WAAN,CAClB;AAAA,WAAMd,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2BnB,UAAU,CAAC,OAAD,CAArC,CAAN;AAAA,GADkB,EAElB,CAACI,UAAD,CAFkB,CAApB;AAKA,MAAMU,OAAO,GAAGlB,KAAK,CAACwB,OAAN,CAAc;AAAA;AAC5BC,MAAAA,KAAK,EAAEV,MAAF,oBAAEA,MAAM,CAAEW,QADa;AAE5BC,MAAAA,QAAQ,EAAEtB,oBAFkB;AAG5BuB,MAAAA,WAAW,EAAE,oBAAoB,CAAAb,MAAM,QAAN,YAAAA,MAAM,CAAEc,KAAR,KAAiB,OAArC;AAHe,OAIzBZ,WAJyB;AAAA,GAAd,EAKZ,CAACA,WAAD,CALY,CAAhB;AAOA,sBACE,eAAC,MAAD;AACE,IAAA,MAAM,EAAC,qBADT,CAEE;AAFF;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,MAAM,EAAEG,QAJV;AAKE,IAAA,QAAQ,EAAEJ,QAAQ,IAAIT,UAAU,CAACC,UAAD,CALlC;AAME,IAAA,OAAO,EAAEa,WANX;AAOE,IAAA,IAAI,EAAEf,QAAQ,CAACwB,QAPjB;AAQE,IAAA,KAAK,EAAEf,MAAF,oBAAEA,MAAM,CAAEW,QARjB;AASE,IAAA,OAAO,EAAER;AATX,KAUMC,IAVN,EADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { IToolbarButtonConfig, TaskListButton as Button } from '@ali/4ever-component';\nimport isTaskList from '../../queries/isTaskList';\nimport { toggleList } from '../../actions';\nimport { TASKLIST_HOT_KEY_TIP } from '../../utils';\nimport { ListRole } from '../../../utils/role';\n\nexport interface TaskListButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nconst isDisabled = (controller: Controller) => {\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled =\n    isCollapsedAtEdge ||\n    controller.query('isSelectionInHr') ||\n    // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506\n    controller.query('isSelectionInSubjectHeading');\n  return Boolean(isDisabled);\n};\n\nexport default function TaskListButton(props: TaskListButtonProps) {\n  const { controller, locale, disabled, tooltip: tooltipProp, ...rest } = props;\n  const isActive = isTaskList(controller);\n\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', toggleList('tlist')),\n    [controller],\n  );\n\n  const tooltip = React.useMemo(() => ({\n    title: locale?.taskList,\n    shortCut: TASKLIST_HOT_KEY_TIP,\n    description: ' Markdown: [] ' + (locale?.space || 'Space'),\n    ...tooltipProp,\n  }), [tooltipProp]);\n\n  return (\n    <Button\n      testid=\"bi-toolbar-tasklist\"\n      // @ts-ignore 组件不存在 bordered 属性\n      bordered={false}\n      active={isActive}\n      disabled={disabled || isDisabled(controller)}\n      onClick={handleClick}\n      role={ListRole.listTask}\n      title={locale?.taskList}\n      tooltip={tooltip}\n      {...rest}\n    />\n  );\n}\n"],"file":"taskListButton.js"}