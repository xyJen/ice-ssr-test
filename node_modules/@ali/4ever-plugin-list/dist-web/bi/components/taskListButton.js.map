{"version":3,"sources":["../../../../src/bi/components/taskListButton.tsx"],"names":["React","TaskListButton","Button","IconButtonShortcut","isTaskList","toggleList","TASKLIST_HOT_KEY_TIP","ListRole","isDisabled","controller","isCollapsedAtEdge","value","selection","query","Boolean","props","locale","rest","isActive","handleClick","useCallback","run","listTask","taskList","space"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,cAAc,IAAIC,MAA3B,QAAyC,iBAAzC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAOC,UAAP;AACA,SAASC,UAAT;AACA,SAASC,oBAAT;AACA,SAASC,QAAT;;AAOA,IAAMC,UAAU,GAAG,oBAACC,UAAD,EAA4B;AAAA,MACrCC,iBADqC,GACfD,UAAU,CAACE,KAAX,CAAiBC,SADF,CACrCF,iBADqC;AAE7C,MAAMF,UAAU,GACdE,iBAAiB,IACjBD,UAAU,CAACI,KAAX,CAAiB,iBAAjB,CADA,IAEA;AACAJ,EAAAA,UAAU,CAACI,KAAX,CAAiB,6BAAjB,CAJF;AAKA,SAAOC,OAAO,CAACN,UAAD,CAAd;AACD,CARD;;AAUA,eAAe,SAASP,cAAT,CAAwBc,KAAxB,EAAoD;AAAA,MACzDN,UADyD,GACzBM,KADyB,CACzDN,UADyD;AAAA,MAC7CO,MAD6C,GACzBD,KADyB,CAC7CC,MAD6C;AAAA,MAClCC,IADkC,iCACzBF,KADyB;;AAEjE,MAAMG,QAAQ,GAAGd,UAAU,CAACK,UAAD,CAA3B;AAEA,MAAMU,WAAW,GAAGnB,KAAK,CAACoB,WAAN,CAClB;AAAA,WAAMX,UAAU,CAACY,GAAX,CAAe,UAAf,EAA2BhB,UAAU,CAAC,OAAD,CAArC,CAAN;AAAA,GADkB,EAElB,CAACI,UAAD,CAFkB,CAApB;AAKA,sBACE,eAAC,MAAD,eACMQ,IADN;AAEE,IAAA,MAAM,EAAC,qBAFT;AAGE,IAAA,YAAY,EAAEX,oBAHhB,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAE,KALZ;AAME,IAAA,MAAM,EAAEY,QANV;AAOE,IAAA,QAAQ,EAAEV,UAAU,CAACC,UAAD,CAPtB;AAQE,IAAA,OAAO,EAAEU,WARX;AASE,IAAA,IAAI,EAAEZ,QAAQ,CAACe,QATjB;AAUE,IAAA,OAAO,eACL,eAAC,kBAAD;AACE,MAAA,KAAK,EAAEN,MAAF,oBAAEA,MAAM,CAAEO,QADjB;AAEE,MAAA,QAAQ,EAAEjB,oBAFZ;AAGE,MAAA,WAAW,EAAE,oBAAoB,CAAAU,MAAM,QAAN,YAAAA,MAAM,CAAEQ,KAAR,KAAiB,OAArC;AAHf;AAXJ,KADF;AAoBD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { TaskListButton as Button } from '@ali/we-toolbar';\nimport { IconButtonShortcut } from '@ali/4ever-component';\nimport isTaskList from '../queries/isTaskList';\nimport { toggleList } from '../actions';\nimport { TASKLIST_HOT_KEY_TIP } from '../utils';\nimport { ListRole } from '../../utils/role';\n\nexport interface TaskListButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nconst isDisabled = (controller: Controller) => {\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled =\n    isCollapsedAtEdge ||\n    controller.query('isSelectionInHr') ||\n    // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506\n    controller.query('isSelectionInSubjectHeading');\n  return Boolean(isDisabled);\n};\n\nexport default function TaskListButton(props: TaskListButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const isActive = isTaskList(controller);\n\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', toggleList('tlist')),\n    [controller],\n  );\n\n  return (\n    <Button\n      {...rest}\n      testid=\"bi-toolbar-tasklist\"\n      shortcutText={TASKLIST_HOT_KEY_TIP}\n      // @ts-ignore 组件不存在 bordered 属性\n      bordered={false}\n      active={isActive}\n      disabled={isDisabled(controller)}\n      onClick={handleClick}\n      role={ListRole.listTask}\n      tooltip={\n        <IconButtonShortcut\n          title={locale?.taskList}\n          shortcut={TASKLIST_HOT_KEY_TIP}\n          description={' Markdown: [] ' + (locale?.space || 'Space')}\n        />\n      }\n    />\n  );\n}\n"],"file":"taskListButton.js"}