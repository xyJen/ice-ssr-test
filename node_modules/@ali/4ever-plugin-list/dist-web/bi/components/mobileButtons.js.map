{"version":3,"sources":["../../../../src/bi/components/mobileButtons.tsx"],"names":["React","useCallback","Commands","Text","Paragraph","isOrderedList","isUnorderedList","toggleList","DEFAULT_NUMBER_LIST_ARRAY","numberLists","DEFAULT_BULLET_LIST_ARRAY","bulletLists","getOListButton","type","MobileOListButton","props","controller","Wrapper","item","isCollapsedAtEdge","value","selection","isDisabled","isActive","handleClick","run","getUListButton","MobileUListButton","MobileTaskButton","MobileTaskInsertButton","locale","command","insertBlock","create","nodes","taskList"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { Commands, Text } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport isOrderedList from '../queries/isOrderedList';\nimport isUnorderedList from '../queries/isUnorderedList';\nimport { toggleList } from '../actions';\nimport type { MobileToolbarButtonProps } from '@ali/4ever-component';\nimport {\n  DEFAULT_NUMBER_LIST_ARRAY as numberLists,\n  DEFAULT_BULLET_LIST_ARRAY as bulletLists,\n} from '../../utils/listStyleMapping';\n\nexport function getOListButton(type: 'big' | 'horiz') {\n  return function MobileOListButton(props: MobileToolbarButtonProps) {\n    const { controller, Wrapper, item } = props;\n    const { isCollapsedAtEdge } = controller.value.selection;\n    const isDisabled = isCollapsedAtEdge;\n    const isActive = isOrderedList(controller);\n    const handleClick = useCallback(\n      () => controller.run('onAction', toggleList('olist', numberLists[0])),\n      [controller],\n    );\n\n    return (\n      <Wrapper\n        item={item}\n        type={type}\n        icon=\"list\"\n        isFocused={isActive}\n        isDisabled={isDisabled}\n        onClick={handleClick}\n      />\n    );\n  };\n}\n\nexport function getUListButton(type: 'big' | 'horiz') {\n  return function MobileUListButton(props: MobileToolbarButtonProps) {\n    const { controller, Wrapper, item } = props;\n    const { isCollapsedAtEdge } = controller.value.selection;\n    const isDisabled = isCollapsedAtEdge;\n    const isActive = isUnorderedList(controller);\n    const handleClick = useCallback(\n      () => controller.run('onAction', toggleList('ulist', bulletLists[0])),\n      [controller],\n    );\n\n    return (\n      <Wrapper\n        item={item}\n        type={type}\n        icon=\"uList\"\n        isFocused={isActive}\n        isDisabled={isDisabled}\n        onClick={handleClick}\n      />\n    );\n  };\n}\n\nexport function MobileTaskButton(props: MobileToolbarButtonProps) {\n  const { controller, Wrapper, item } = props;\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge;\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', toggleList('tlist')),\n    [controller],\n  );\n\n  return (\n    <Wrapper\n      item={item}\n      type=\"big\"\n      icon=\"checked\"\n      isDisabled={isDisabled}\n      onClick={handleClick}\n    />\n  );\n}\n\nexport function MobileTaskInsertButton(props: MobileToolbarButtonProps) {\n  const { controller, Wrapper, item, locale } = props;\n  const handleClick = React.useCallback(() => {\n    controller.command(\n      Commands.insertBlock,\n      Paragraph.create({\n        nodes: [Text.create('')],\n      }),\n    );\n    controller.run('onAction', toggleList('tlist'));\n  }, [controller]);\n\n  return (\n    <Wrapper\n      item={item}\n      type=\"line\"\n      icon=\"checked\"\n      onClick={handleClick}\n      lineText={locale?.taskList}\n    />\n  );\n}\n"],"file":"mobileButtons.js"}