{"version":3,"sources":["../../../../src/bi/components/createListMenu.tsx"],"names":["React","MenuItem","InlineMenuItem","toggleList","isOrderedList","isTaskList","isUnorderedList","ListRole","ListTypeEnum","getActiveState","controller","type","olist","tlist","ulist","createListMenu","Component","listType","ListMenu","props","menuItem","action","title","rest","handleClick","run","isActive","isDisabled","query","getRole","listOrdered","listUnordered","listTask","undefined","ulistInline","olistInline","tlistInline"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { MenuItem, InlineMenuItem } from '@ali/we-design';\nimport { MenuItemInnerProps } from '@ali/4ever-component';\nimport { toggleList } from '../actions';\nimport isOrderedList from '../queries/isOrderedList';\nimport isTaskList from '../queries/isTaskList';\nimport isUnorderedList from '../queries/isUnorderedList';\nimport { ListRole } from '../../utils/role';\n\nexport enum ListTypeEnum {\n  ulist = 'ulist',\n  olist = 'olist',\n  tlist = 'tlist',\n}\n\nexport const getActiveState = (controller, type: ListTypeEnum) => {\n  if (type === ListTypeEnum.olist) return isOrderedList(controller);\n  if (type === ListTypeEnum.tlist) return isTaskList(controller);\n  if (type === ListTypeEnum.ulist) return isUnorderedList(controller);\n  return false;\n};\n\nfunction createListMenu(Component: React.FC<any>, listType: ListTypeEnum) {\n  return function ListMenu(props: MenuItemInnerProps) {\n    const { menuItem, controller } = props;\n    const { action, title, ...rest } = menuItem;\n\n    const handleClick = () => {\n      // 转换逻辑不再是单向强制转换了，不再使用，避免以后逻辑更改暂时保留注释\n      // if (action === 'format') {\n      //   return controller.run('onAction', transformList(listType));\n      // }\n      controller.run('onAction', toggleList(listType));\n    };\n    const isActive = getActiveState(controller, listType);\n    const isDisabled = controller.query('isSelectionInSubjectHeading');\n\n    const getRole = () => {\n      if (listType === ListTypeEnum.olist) return ListRole.listOrdered;\n      if (listType === ListTypeEnum.ulist) return ListRole.listUnordered;\n      if (listType === ListTypeEnum.tlist) return ListRole.listTask;\n      return undefined;\n    };\n\n    return (\n      <Component disabled={isDisabled} {...rest} onClick={handleClick} selected={isActive} role={getRole()}>\n        {title}\n      </Component>\n    );\n  };\n}\n\nexport const ulist = createListMenu(MenuItem, ListTypeEnum.ulist);\nexport const olist = createListMenu(MenuItem, ListTypeEnum.olist);\nexport const tlist = createListMenu(MenuItem, ListTypeEnum.tlist);\nexport const ulistInline = createListMenu(InlineMenuItem, ListTypeEnum.ulist);\nexport const olistInline = createListMenu(InlineMenuItem, ListTypeEnum.olist);\nexport const tlistInline = createListMenu(InlineMenuItem, ListTypeEnum.tlist);\n"],"file":"createListMenu.js"}