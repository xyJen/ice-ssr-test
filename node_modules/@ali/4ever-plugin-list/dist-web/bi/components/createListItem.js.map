{"version":3,"sources":["../../../../src/bi/components/createListItem.tsx"],"names":["React","IndUtil","ShdUtil","theme","MoCommon","EXTRA_PADDING","utils","ListGroupPluginUtils","setCheckStatus","ListContext","ROMAN_EXTRA_INDENT","SYMBOL_STYLE","getJustifyContent","generateSymbol","GroupListContainer","ListItemWrapper","convertSymbolStyle","RenderStyledListItem","BorderStyleEnum","isListGroupAvailable","isNormalGroupNode","isInUnlistGroupContainer","DEFAULT_BORDER_COLOR","INDENT_SIZE","indent","size","DEFAULT_SHD_STYLES","createListItem","Paragraph","extraProps","allowCustomCheck","ListItem","handleChange","checked","props","controller","node","onChange","run","getGroupListStyle","shd","data","display","paddingLeft","symbolAlign","backgroundColor","transformShd","width","paddingRight","justifyContent","align","onSelectSymbol","context","listConfig","listId","key","getStyle","isSelected","customStyle","visible","isTaskList","level","listStyle","pi","bdr","ind","paddingSpace","fromBlock","firstLine","left","includes","format","isTaskSelected","styleObj","undefined","borderRadius","box","height","margin","top","bottom","marginTop","marginBottom","val","Single","sz","color","bdrColor","space","borderStyle","borderColor","borderTop","paddingTop","borderBottom","paddingBottom","borderLeft","right","borderRight","Number","renderParagraph","children","nodeRef","rest","isList","renderListItem","className","contentStyle","listItemRef","step","start","isOrdered","isChecked","listStyleType","hideSymbol","symbolStyle","listSymbol","taskListConfig","isSymbolSelected","render","jc","list","blockquote","Component","contextType","forwardRef","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  IndUtil,\n  ShdUtil,\n  theme,\n} from '@ali/4ever-utils';\nimport { MoCommon } from '@ali/4ever-cangjie';\nimport type { ParagraphData } from '@ali/4ever-plugin-paragraph';\nimport { EXTRA_PADDING, utils as ListGroupPluginUtils } from '@ali/4ever-plugin-list-group';\nimport { setCheckStatus } from '../actions';\nimport { ListContext } from '../../component/context';\nimport type { ListItemProps, TaskListProps } from '../../utils/types';\nimport { ROMAN_EXTRA_INDENT, SYMBOL_STYLE } from '../../utils/constant';\nimport getJustifyContent from '../../utils/getJustifyContent';\nimport { generateSymbol } from '../../utils/generateSymbol';\nimport { GroupListContainer, ListItemWrapper } from '../../utils/styled';\nimport { convertSymbolStyle } from '../../utils/getSymbolStyleByKey';\nimport { RenderStyledListItem } from '../../utils/renderStyledListItem';\n\nconst { BorderStyleEnum } = MoCommon;\nconst {\n  isListGroupAvailable,\n  isNormalGroupNode,\n  isInUnlistGroupContainer,\n} = ListGroupPluginUtils;\n\nconst DEFAULT_BORDER_COLOR = '#000000';\n\nconst INDENT_SIZE = theme.indent.size;\nconst { DEFAULT_SHD_STYLES } = theme;\n\nexport default function createListItem(Paragraph, extraProps?: TaskListProps) {\n  const { allowCustomCheck = false } = extraProps || {};\n  class ListItem extends React.Component<ListItemProps> {\n    static contextType = ListContext;\n\n    get align() {\n      const { node } = this.props;\n      return node.data.jc || 'left';\n    }\n\n    get isList() {\n      const { node } = this.props;\n      const listConfig = node.data.list;\n      return !!listConfig;\n    }\n\n    get symbolAlign() {\n      const { listStyle } = this.listConfig;\n      if (\n        listStyle &&\n        ['upperRoman', 'lowerRoman'].includes(listStyle.format)\n      ) {\n        return 'right';\n      } else {\n        return 'left';\n      }\n    }\n\n    get listConfig() {\n      return this.isList ? this.props.node.data.list : null;\n    }\n\n    get isSymbolSelected() {\n      const { node } = this.props;\n      return node.data.isSelected;\n    }\n\n    get isListGroupAvailable() {\n      const { node, controller } = this.props;\n      return isListGroupAvailable(controller) && !node.data.blockquote;\n    }\n\n    handleChange = (checked) => {\n      const { controller, node, onChange } = this.props;\n      onChange && onChange(checked);\n      controller.run('onAction', setCheckStatus(node, checked));\n    };\n\n    getStyle() {\n      const { isSelected, customStyle, node, controller, visible } = this.props;\n      const { isTaskList, level = 0, listStyle } = this.listConfig;\n      const { pi, bdr = {} } = this.props.node.data as ParagraphData;\n      const { shd, ind } = node.data;\n      let paddingSpace = level * INDENT_SIZE;\n      if (ind) {\n        const { firstLine = 0, left = 0 } = IndUtil.fromBlock(node);\n        paddingSpace += firstLine + left;\n      }\n      // 罗马数字统一右侧对齐\n      if (\n        listStyle &&\n        ['upperRoman', 'lowerRoman'].includes(listStyle.format)\n      ) {\n        // 根据字体大小，动态计算罗马数字预留空间的宽度\n        paddingSpace += this.isListGroupAvailable && shd ? 0 : ROMAN_EXTRA_INDENT;\n      }\n      const isTaskSelected = isTaskList && isSelected && !allowCustomCheck;\n      const styleObj: React.CSSProperties = {\n        paddingLeft: paddingSpace,\n        backgroundColor: isTaskSelected && node.data.shd === undefined ? '#f4f4f4' : '',\n        borderRadius: isTaskSelected ? '3px' : '',\n        ...customStyle,\n      };\n\n      // Pi-2.0：列表高度有时会被项目符号莫名撑高，且边距需要渲染在列表处才可以生效\n      if (pi && pi.box) {\n        const { height, margin = {} } = pi.box;\n        const { top = 0, bottom = 0 } = margin;\n        styleObj.height = height;\n        styleObj.marginTop = top;\n        styleObj.marginBottom = bottom;\n      }\n\n      // 列表的边框需要挂载外围的 DOM 上\n      if (bdr.top) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.top;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderTop = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingTop = space;\n      }\n      if (bdr.bottom) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.bottom;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderBottom = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingBottom = space;\n      }\n      if (bdr.left) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.left;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderLeft = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingLeft = space + paddingSpace;\n      }\n      if (bdr.right) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.right;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        styleObj.borderRight = `${sz}px ${borderStyle} ${borderColor}`;\n        styleObj.paddingRight = space;\n      }\n\n      if (isInUnlistGroupContainer(node, controller)) {\n        styleObj.paddingLeft = (Number(styleObj.paddingLeft) || 0 ) + EXTRA_PADDING;\n      }\n\n      if (shd && !this.isListGroupAvailable) {\n        for (const key in DEFAULT_SHD_STYLES) {\n          if (typeof styleObj[key] === 'number') {\n            styleObj[key] += DEFAULT_SHD_STYLES[key];\n          } else {\n            styleObj[key] = DEFAULT_SHD_STYLES[key];\n          }\n        }\n        styleObj.backgroundColor = ShdUtil.transformShd(shd);\n      }\n\n      if (visible === false) {\n        styleObj.display = 'none';\n      }\n\n      return styleObj;\n    }\n\n    getGroupListStyle = () => {\n      const { node, controller } = this.props;\n      const { shd } = node.data;\n      if (!this.isListGroupAvailable || !shd) {\n        return {\n          display: 'contents',\n        };\n      }\n      //@ts-ignore\n      const paddingLeft = DEFAULT_SHD_STYLES.paddingLeft + (this.symbolAlign === 'right' ? ROMAN_EXTRA_INDENT : 0);\n      const backgroundColor = isNormalGroupNode(node, controller) ? ShdUtil.transformShd(shd) : 'unset';\n      const width = `calc(100% + ${(DEFAULT_SHD_STYLES.paddingLeft || 0) + (DEFAULT_SHD_STYLES.paddingRight || 0)}px)`;\n      const justifyContent = getJustifyContent(this.align);\n      return {\n        ...DEFAULT_SHD_STYLES,\n        backgroundColor,\n        paddingLeft,\n        width,\n        display: 'flex',\n        justifyContent,\n      };\n    };\n\n    onSelectSymbol = () => {\n      const { node } = this.props;\n      const { onSelectSymbol } = this.context;\n      onSelectSymbol && onSelectSymbol(this.listConfig.listId, node.key);\n    };\n\n    renderParagraph() {\n      const { node, children, isSelected, customStyle, nodeRef, ...rest } = this.props;\n      return (\n        <Paragraph\n          {...rest}\n          ref={nodeRef}\n          node={node}\n          isList={this.isList}\n          isSelected={isSelected}\n        >\n          {children}\n        </Paragraph>\n      );\n    }\n\n    renderListItem() {\n      const { node, className, contentStyle, listItemRef } = this.props;\n      const { step, start = 1 } = node.data;\n      const {\n        listId,\n        isOrdered,\n        isTaskList,\n        isChecked,\n        level = 0,\n        listStyle,\n        listStyleType,\n        hideSymbol,\n        symbolStyle = SYMBOL_STYLE,\n      } = this.listConfig;\n      const listSymbol = isTaskList\n        ? ''\n        : generateSymbol(\n          level,\n          Number(start),\n          step,\n          isOrdered,\n          listStyleType,\n          listStyle,\n        );\n      const taskListConfig = {\n        isTaskList,\n        isChecked,\n        isOrdered,\n        handleChange: this.handleChange,\n      };\n      return (\n        <ListItemWrapper\n          align={this.align}\n          className={className}\n          ref={listItemRef}\n          style={this.getStyle()}\n          contentStyle={contentStyle}\n          data-testid=\"list\"\n          data-start={start}\n          data-listid={listId}\n          data-level={level}\n          data-isordered={isOrdered}\n          data-istasklist={isTaskList}\n          data-ischecked={isChecked}\n        >\n          <GroupListContainer style={this.getGroupListStyle()}>\n            <RenderStyledListItem\n              hideSymbol={hideSymbol}\n              listSymbol={listSymbol}\n              symbolStyle={convertSymbolStyle(symbolStyle, isOrdered)}\n              isSelect={this.isSymbolSelected}\n              symbolAlign={this.symbolAlign}\n              onSelectSymbol={this.onSelectSymbol}\n              taskListConfig={taskListConfig}\n            >\n              {this.renderParagraph()}\n            </RenderStyledListItem>\n          </GroupListContainer>\n        </ListItemWrapper>\n      );\n    }\n\n    render() {\n      return this.isList ? this.renderListItem() : this.renderParagraph();\n    }\n  };\n  return React.forwardRef<HTMLElement, ListItemProps>((props, ref) => {\n    return <ListItem {...props} nodeRef={ref} />;\n  });\n}\n"],"file":"createListItem.js"}