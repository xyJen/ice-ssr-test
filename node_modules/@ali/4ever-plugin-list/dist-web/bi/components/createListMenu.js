import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { MenuItem, InlineMenuItem } from '@ali/we-design';
import { toggleList } from "../actions";
import isOrderedList from "../queries/isOrderedList";
import isTaskList from "../queries/isTaskList";
import isUnorderedList from "../queries/isUnorderedList";
import { ListRole } from "../../utils/role";
export var ListTypeEnum;

(function (ListTypeEnum) {
  ListTypeEnum["ulist"] = "ulist";
  ListTypeEnum["olist"] = "olist";
  ListTypeEnum["tlist"] = "tlist";
})(ListTypeEnum || (ListTypeEnum = {}));

export var getActiveState = function getActiveState(controller, type) {
  if (type === ListTypeEnum.olist) return isOrderedList(controller);
  if (type === ListTypeEnum.tlist) return isTaskList(controller);
  if (type === ListTypeEnum.ulist) return isUnorderedList(controller);
  return false;
};

function createListMenu(Component, listType) {
  return function ListMenu(props) {
    var menuItem = props.menuItem,
        controller = props.controller;

    var action = menuItem.action,
        title = menuItem.title,
        rest = _objectWithoutPropertiesLoose(menuItem, ["action", "title"]);

    var handleClick = function handleClick() {
      // 转换逻辑不再是单向强制转换了，不再使用，避免以后逻辑更改暂时保留注释
      // if (action === 'format') {
      //   return controller.run('onAction', transformList(listType));
      // }
      controller.run('onAction', toggleList(listType));
    };

    var isActive = getActiveState(controller, listType);
    var isDisabled = controller.query('isSelectionInSubjectHeading');

    var getRole = function getRole() {
      if (listType === ListTypeEnum.olist) return ListRole.listOrdered;
      if (listType === ListTypeEnum.ulist) return ListRole.listUnordered;
      if (listType === ListTypeEnum.tlist) return ListRole.listTask;
      return undefined;
    };

    return /*#__PURE__*/_createElement(Component, _extends({
      disabled: isDisabled
    }, rest, {
      onClick: handleClick,
      selected: isActive,
      role: getRole()
    }), title);
  };
}

export var ulist = createListMenu(MenuItem, ListTypeEnum.ulist);
export var olist = createListMenu(MenuItem, ListTypeEnum.olist);
export var tlist = createListMenu(MenuItem, ListTypeEnum.tlist);
export var ulistInline = createListMenu(InlineMenuItem, ListTypeEnum.ulist);
export var olistInline = createListMenu(InlineMenuItem, ListTypeEnum.olist);
export var tlistInline = createListMenu(InlineMenuItem, ListTypeEnum.tlist);
//# sourceMappingURL=createListMenu.js.map