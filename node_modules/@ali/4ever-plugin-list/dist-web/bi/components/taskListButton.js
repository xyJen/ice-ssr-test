import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { TaskListButton as Button } from '@ali/we-toolbar';
import { IconButtonShortcut } from '@ali/4ever-component';
import isTaskList from "../queries/isTaskList";
import { toggleList } from "../actions";
import { TASKLIST_HOT_KEY_TIP } from "../utils";
import { ListRole } from "../../utils/role";

var isDisabled = function isDisabled(controller) {
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInHr') || // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506
  controller.query('isSelectionInSubjectHeading');
  return Boolean(isDisabled);
};

export default function TaskListButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var isActive = isTaskList(controller);
  var handleClick = React.useCallback(function () {
    return controller.run('onAction', toggleList('tlist'));
  }, [controller]);
  return /*#__PURE__*/_createElement(Button, _extends({}, rest, {
    testid: "bi-toolbar-tasklist",
    shortcutText: TASKLIST_HOT_KEY_TIP // @ts-ignore 组件不存在 bordered 属性
    ,
    bordered: false,
    active: isActive,
    disabled: isDisabled(controller),
    onClick: handleClick,
    role: ListRole.listTask,
    tooltip: /*#__PURE__*/_createElement(IconButtonShortcut, {
      title: locale == null ? void 0 : locale.taskList,
      shortcut: TASKLIST_HOT_KEY_TIP,
      description: ' Markdown: [] ' + ((locale == null ? void 0 : locale.space) || 'Space')
    })
  }));
}
//# sourceMappingURL=taskListButton.js.map