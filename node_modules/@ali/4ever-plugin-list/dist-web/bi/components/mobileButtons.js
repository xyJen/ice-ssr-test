import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Commands, Text } from '@ali/4ever-cangjie';
import { Paragraph } from '@ali/4ever-plugin-paragraph';
import isOrderedList from "../queries/isOrderedList";
import isUnorderedList from "../queries/isUnorderedList";
import { toggleList } from "../actions";
import { DEFAULT_NUMBER_LIST_ARRAY as numberLists, DEFAULT_BULLET_LIST_ARRAY as bulletLists } from "../../utils/listStyleMapping";
export function getOListButton(type) {
  return function MobileOListButton(props) {
    var controller = props.controller,
        Wrapper = props.Wrapper,
        item = props.item;
    var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
    var isDisabled = isCollapsedAtEdge;
    var isActive = isOrderedList(controller);
    var handleClick = useCallback(function () {
      return controller.run('onAction', toggleList('olist', numberLists[0]));
    }, [controller]);
    return /*#__PURE__*/_createElement(Wrapper, {
      item: item,
      type: type,
      icon: "list",
      isFocused: isActive,
      isDisabled: isDisabled,
      onClick: handleClick
    });
  };
}
export function getUListButton(type) {
  return function MobileUListButton(props) {
    var controller = props.controller,
        Wrapper = props.Wrapper,
        item = props.item;
    var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
    var isDisabled = isCollapsedAtEdge;
    var isActive = isUnorderedList(controller);
    var handleClick = useCallback(function () {
      return controller.run('onAction', toggleList('ulist', bulletLists[0]));
    }, [controller]);
    return /*#__PURE__*/_createElement(Wrapper, {
      item: item,
      type: type,
      icon: "uList",
      isFocused: isActive,
      isDisabled: isDisabled,
      onClick: handleClick
    });
  };
}
export function MobileTaskButton(props) {
  var controller = props.controller,
      Wrapper = props.Wrapper,
      item = props.item;
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge;
  var handleClick = React.useCallback(function () {
    return controller.run('onAction', toggleList('tlist'));
  }, [controller]);
  return /*#__PURE__*/_createElement(Wrapper, {
    item: item,
    type: "big",
    icon: "checked",
    isDisabled: isDisabled,
    onClick: handleClick
  });
}
export function MobileTaskInsertButton(props) {
  var controller = props.controller,
      Wrapper = props.Wrapper,
      item = props.item,
      locale = props.locale;
  var handleClick = React.useCallback(function () {
    controller.command(Commands.insertBlock, Paragraph.create({
      nodes: [Text.create('')]
    }));
    controller.run('onAction', toggleList('tlist'));
  }, [controller]);
  return /*#__PURE__*/_createElement(Wrapper, {
    item: item,
    type: "line",
    icon: "checked",
    onClick: handleClick,
    lineText: locale == null ? void 0 : locale.taskList
  });
}
//# sourceMappingURL=mobileButtons.js.map