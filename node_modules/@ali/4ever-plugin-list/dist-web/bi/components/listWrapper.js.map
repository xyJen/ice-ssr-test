{"version":3,"sources":["../../../../src/bi/components/listWrapper.tsx"],"names":["React","useCallback","useEffect","useMemo","clearListSelections","clearRangeSelection","selectListSelections","selectSymbol","ListContext","getSameGroupListItems","ListWrapper","props","children","controller","handleClearSelection","data","value","listSelections","length","run","handleSelectSymbol","listId","key","document","currentList","getNode","siblings","onClickOutSide","event","target","inCangjie","closest","cls","className","isListSymbol","includes","addEventListener","removeEventListener","contextValue","onSelectSymbol","clearSelection"],"mappings":"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","sourcesContent":["import React, {\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { clearListSelections, clearRangeSelection, selectListSelections, selectSymbol } from '../actions';\nimport { ListContext } from '../../component/context';\nimport { getSameGroupListItems } from '../utils';\n\nimport { ListWrapperProps } from '../types';\n\nconst ListWrapper: React.FC<ListWrapperProps> = (\n  props: PropsWithChildren<ListWrapperProps>,\n) => {\n  const { children, controller } = props;\n  const handleClearSelection = useCallback(() => {\n    const { data } = controller.value;\n    if (data.listSelections && data.listSelections.length) {\n      controller.run('onAction', selectSymbol(data.listSelections, false));\n      controller.run('onAction', clearListSelections());\n    }\n  }, [controller]);\n\n  const handleSelectSymbol = useCallback(\n    (listId, key) => {\n      const { document } = controller.value;\n      const currentList = document.getNode(key);\n      const siblings = getSameGroupListItems(controller.value, currentList);\n      handleClearSelection();\n      controller.run('onAction', selectListSelections(siblings));\n      controller.run('onAction', clearRangeSelection(currentList));\n      controller.run('onAction', selectSymbol(siblings, true));\n    },\n    [controller, handleClearSelection],\n  );\n\n  const onClickOutSide = useCallback(\n    event => {\n      const { target } = event;\n      const inCangjie = target.closest('[data-cangjie-content=\"true\"]');\n      const { listSelections } = controller.value.data;\n      const cls = target.className;\n      const isListSymbol =\n        typeof cls === 'string' &&\n        (cls.includes('symbol-align-') || cls.includes('list-symbol'));\n      if (inCangjie && !isListSymbol && listSelections?.length > 0) {\n        handleClearSelection();\n      }\n    },\n    [controller.value.data, handleClearSelection],\n  );\n\n  useEffect(() => {\n    document.addEventListener('click', onClickOutSide, false);\n    return () => {\n      document.removeEventListener('click', onClickOutSide, false);\n    };\n  }, [onClickOutSide]);\n\n  const contextValue = useMemo(() => {\n    return {\n      onSelectSymbol: handleSelectSymbol,\n      clearSelection: handleClearSelection,\n    };\n  }, [handleClearSelection, handleSelectSymbol]);\n\n  return (\n    <ListContext.Provider value={contextValue}>\n      {children}\n    </ListContext.Provider>\n  );\n};\n\nexport default ListWrapper;\n"],"file":"listWrapper.js"}