import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { environment } from '@ali/4ever-cangjie';
import { ToolbarOrderListNormal } from '@ali/we-design';
import { IconButtonShortcut } from '@ali/4ever-component';
import { ListSet, IconButton } from '@ali/we-toolbar';
import isOrderedList from "../queries/isOrderedList";
import { getListStyleType, OLLIST_HOT_KEY_TIP } from "../utils";
import { toggleList } from "../actions";
import isSelectionInListSymbol from "../utils/isSelectionInListSymbol";
import { ListRole } from "../../utils/role";
import { DEFAULT_NUMBER_LIST_ARRAY as numberLists } from "../../utils/listStyleMapping";
var isMobile = environment.IS_MOBILE;
var MemoListSet = /*#__PURE__*/React.memo(ListSet);

var _ref = /*#__PURE__*/_createElement(ToolbarOrderListNormal, null);

export default function OrderedListButton(props) {
  var controller = props.controller,
      locale = props.locale,
      simple = props.simple,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale", "simple"]);

  var listStyleType = getListStyleType(controller);
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInHr') || // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506
  controller.query('isSelectionInSubjectHeading');
  var isActive = isOrderedList(controller);
  var handleClick = useCallback(function (listType) {
    controller.run('onAction', toggleList('olist', isMobile || numberLists[listType] === undefined ? numberLists[0] : listType));
  }, [controller]);

  if (simple) {
    return /*#__PURE__*/_createElement(IconButton, _extends({}, rest, {
      testid: "bi-toolbar-ollist",
      icon: _ref,
      title: locale.orderedList,
      shortcutText: OLLIST_HOT_KEY_TIP,
      tooltip: /*#__PURE__*/_createElement(IconButtonShortcut, {
        title: locale.orderedList,
        shortcut: OLLIST_HOT_KEY_TIP,
        description: 'Markdown: 1. + ' + (locale == null ? void 0 : locale.space) || 'Space'
      }),
      active: isActive,
      disabled: !!isDisabled,
      onClick: handleClick,
      role: ListRole.listOrdered
    }));
  }

  return /*#__PURE__*/_createElement(MemoListSet, _extends({}, rest, {
    mode: "ol",
    active: isActive,
    shortcutText: OLLIST_HOT_KEY_TIP,
    testid: "bi-toolbar-ollist",
    disabled: !!isDisabled,
    defaultListStyle: listStyleType,
    onChange: handleClick,
    onClick: handleClick,
    role: ListRole.listOrdered
  }));
}

OrderedListButton.needRender = function (controller) {
  return isSelectionInListSymbol(controller.value);
};
//# sourceMappingURL=orderedListButton.js.map