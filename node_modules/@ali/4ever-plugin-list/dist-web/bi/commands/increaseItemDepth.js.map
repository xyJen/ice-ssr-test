{"version":3,"sources":["../../../../src/bi/commands/increaseItemDepth.ts"],"names":["Commands","INDENT_SIZE","omit","getDepthItems","getListStyle","getPrevLevelItem","mergeListData","MAX_LEVEL","MAX_INDENT_SIZE","increaseItemByNode","controller","offset","element","data","key","list","listStyleType","level","isOrdered","isTaskList","newLevel","Math","max","baseData","listStyle","prevLevelItem","value","inheritListStyle","prevLevelItemData","prevLevelItemList","ind","forEach","attr","newData","command","setNodeByKey","userData","increaseItemBySelection","editor","depthItems","hasFirstStart","undefined","indLeft","left","min"],"mappings":";AAAA,SAA4BA,QAA5B,QAA4C,oBAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,gBAHF,EAIEC,aAJF;AAMA,SAASC,SAAT;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAO,SAASC,kBAAT,CACLC,UADK,EAELC,MAFK,EAGLC,OAHK,EAIL;AAAA;;AACA,MAAI,CAACA,OAAL,EAAc,OAAOF,UAAP;AADd,aAEsBE,OAFtB;AAAA,MAEQC,IAFR,QAEQA,IAFR;AAAA,MAEcC,GAFd,QAEcA,GAFd;AAGA,MAAI,CAACD,IAAI,CAACE,IAAV,EAAgB,OAAOL,UAAP;AAHhB,mBAIwDG,IAAI,CAACE,IAJ7D;AAAA,MAIQC,aAJR,cAIQA,aAJR;AAAA,MAIuBC,KAJvB,cAIuBA,KAJvB;AAAA,MAI8BC,SAJ9B,cAI8BA,SAJ9B;AAAA,MAIyCC,UAJzC,cAIyCA,UAJzC,EAKA;;AACA,MAAIR,MAAM,GAAG,CAAT,IAAcE,IAAI,CAACE,IAAL,CAAUE,KAAV,IAAmBV,SAAS,GAAG,CAAjD,EAAoD,OAAOG,UAAP;AACpD,MAAMU,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAGN,MAAjB,EAAyB,CAAzB,CAAjB;AACA,MAAIY,QAAQ,GAAGV,IAAf;AACA,MAAIW,SAAS,GAAGpB,YAAY,CAACc,SAAD,EAAYE,QAAZ,EAAsBJ,aAAtB,CAA5B;AACA,MAAMS,aAAa,GAAGpB,gBAAgB,CAACK,UAAU,CAACgB,KAAZ,EAAmBd,OAAnB,EAA4BD,MAA5B,CAAtC;AACA,MAAMgB,gBAAgB,GAAGF,aAAH,2CAAGA,aAAa,CAAEZ,IAAlB,8CAAG,oBAAqBE,IAAxB,qBAAG,sBAA2BS,SAApD;;AACA,MAAIG,gBAAJ,EAAsB;AACpBH,IAAAA,SAAS,GAAGG,gBAAZ;AACD;;AACD,MAAIF,aAAa,QAAb,IAAAA,aAAa,CAAEZ,IAAf,IAAuB,CAACM,UAA5B,EAAwC;AACtC,QAAMS,iBAAiB,GAAGH,aAAa,CAACZ,IAAxC;AACA,QAAMgB,iBAAiB,GAAGD,iBAAiB,CAACb,IAA5C;AACAQ,IAAAA,QAAQ,gBACHrB,IAAI,CAACW,IAAD,EAAO,CAAC,MAAD,CAAP,CADD;AAENiB,MAAAA,GAAG,EAAEF,iBAAiB,CAACE,GAFjB;AAGNf,MAAAA,IAAI,eACCF,IAAI,CAACE,IADN;AAHE,MAAR;AAOA,KACE,QADF,EAEE,OAFF,EAGE,YAHF,EAIE,WAJF,EAKE,YALF,EAME,WANF,EAOE,eAPF,EAQEgB,OARF,CAQU,UAACC,IAAD,EAAU;AAClBT,MAAAA,QAAQ,CAACR,IAAT,CAAciB,IAAd,IAAsBH,iBAAiB,CAACG,IAAD,CAAvC;AACD,KAVD;AAWD;;AACD,MAAMC,OAAO,GAAG3B,aAAa,CAACiB,QAAD,EAAW;AACtCN,IAAAA,KAAK,EAAEG,QAD+B;AAEtCI,IAAAA,SAAS,EAATA;AAFsC,GAAX,CAA7B;AAKA,SAAOd,UAAU,CACdwB,OADI,CACIlC,QAAQ,CAACmC,YADb,EAC2BrB,GAD3B,EACgCmB,OADhC,EAEJG,QAFI,WAEYxB,OAFZ,EAEqB,CAAC,MAAD,CAFrB,CAAP;AAGD;AAED,eAAe,SAASyB,uBAAT,CACbC,MADa,EAEb3B,MAFa,EAGb;AAAA,uBACsCR,aAAa,CAACmC,MAAD,CADnD;AAAA,MACQC,UADR,kBACQA,UADR;AAAA,MACoBC,aADpB,kBACoBA,aADpB;;AAEAD,EAAAA,UAAU,CAACR,OAAX,CAAmB,UAACnB,OAAD,EAAa;AAC9B,QAAI,CAACA,OAAL,EAAc,OAAO6B,SAAP;AADgB,gBAGR7B,OAHQ;AAAA,QAGtBC,IAHsB,SAGtBA,IAHsB;AAAA,QAGhBC,GAHgB,SAGhBA,GAHgB;AAI9B,QAAI,CAACD,IAAI,CAACE,IAAV,EAAgB,OAAO0B,SAAP;AAJc,QAKtBtB,UALsB,GAKPN,IAAI,CAACE,IALE,CAKtBI,UALsB,EAM9B;;AACA,QAAIR,MAAM,GAAG,CAAT,IAAcE,IAAI,CAACE,IAAL,CAAUE,KAAV,IAAmBV,SAAS,GAAG,CAAjD,EAAoD,OAAO+B,MAAP;AACpD,QAAIL,OAAJ;;AACA,QAAIO,aAAa,IAAI,CAACrB,UAAtB,EAAkC;AAAA;;AAChC,UAAMuB,OAAO,GAAGrB,IAAI,CAACC,GAAL,CACd,CAAC,cAAAT,IAAI,CAACiB,GAAL,+BAAUa,IAAV,KAAkB,CAAnB,IAAwBhC,MAAM,GAAGV,WADnB,EAEd,CAFc,CAAhB;AAIAgC,MAAAA,OAAO,GAAG;AACRpB,QAAAA,IAAI,eACCX,IAAI,CAACW,IAAD,EAAO,CAAC,MAAD,CAAP,CADL;AAEFiB,UAAAA,GAAG,eACEjB,IAAI,CAACiB,GADP;AAEDa,YAAAA,IAAI,EAAEtB,IAAI,CAACuB,GAAL,CAASF,OAAT,EAAkBlC,eAAlB;AAFL;AAFD;AADI,OAAV;AASA8B,MAAAA,MAAM,CACHJ,OADH,CACWlC,QAAQ,CAACmC,YADpB,EACkCrB,GADlC,EACuCmB,OADvC,EAEGG,QAFH,WAEmBxB,OAFnB,EAE4B,CAAC,MAAD,CAF5B;AAGD,KAjBD,MAiBO;AACLH,MAAAA,kBAAkB,CAAC6B,MAAD,EAAS3B,MAAT,EAAiBC,OAAjB,CAAlB;AACD;;AACD,WAAO6B,SAAP;AACD,GA9BD;AA+BA,SAAOH,MAAP;AACD","sourcesContent":["import { Block, Controller, Commands } from '@ali/4ever-cangjie';\nimport { INDENT_SIZE } from '@ali/4ever-utils';\nimport { omit } from 'lodash-es';\nimport {\n  getDepthItems,\n  getListStyle,\n  getPrevLevelItem,\n  mergeListData,\n} from '../utils';\nimport { MAX_LEVEL } from '../constants';\nimport { MAX_INDENT_SIZE } from '@ali/4ever-plugin-indent';\n\nexport function increaseItemByNode(\n  controller: Controller,\n  offset: 1 | -1,\n  element: Block,\n) {\n  if (!element) return controller;\n  const { data, key } = element as Block;\n  if (!data.list) return controller;\n  const { listStyleType, level, isOrdered, isTaskList } = data.list;\n  // 最大深度不超过9\n  if (offset > 0 && data.list.level >= MAX_LEVEL - 1) return controller;\n  const newLevel = Math.max(level + offset, 0);\n  let baseData = data;\n  let listStyle = getListStyle(isOrdered, newLevel, listStyleType);\n  const prevLevelItem = getPrevLevelItem(controller.value, element, offset) as Block;\n  const inheritListStyle = prevLevelItem?.data?.list?.listStyle;\n  if (inheritListStyle) {\n    listStyle = inheritListStyle;\n  }\n  if (prevLevelItem?.data && !isTaskList) {\n    const prevLevelItemData = prevLevelItem.data;\n    const prevLevelItemList = prevLevelItemData.list;\n    baseData = {\n      ...omit(data, ['fold']),\n      ind: prevLevelItemData.ind,\n      list: {\n        ...data.list,\n      },\n    };\n    [\n      'listId',\n      'level',\n      'hideSymbol',\n      'isOrdered',\n      'isTaskList',\n      'listStyle',\n      'listStyleType',\n    ].forEach((attr) => {\n      baseData.list[attr] = prevLevelItemList[attr];\n    });\n  }\n  const newData = mergeListData(baseData, {\n    level: newLevel,\n    listStyle,\n  });\n\n  return controller\n    .command(Commands.setNodeByKey, key, newData)\n    .userData.delete(element, ['fold']);\n}\n\nexport default function increaseItemBySelection(\n  editor: Controller,\n  offset: 1 | -1,\n) {\n  const { depthItems, hasFirstStart } = getDepthItems(editor);\n  depthItems.forEach((element) => {\n    if (!element) return undefined;\n\n    const { data, key } = element as Block;\n    if (!data.list) return undefined;\n    const { isTaskList } = data.list;\n    // 最大深度不超过9\n    if (offset > 0 && data.list.level >= MAX_LEVEL - 1) return editor;\n    let newData;\n    if (hasFirstStart && !isTaskList) {\n      const indLeft = Math.max(\n        (data.ind?.left || 0) + offset * INDENT_SIZE,\n        0,\n      );\n      newData = {\n        data: {\n          ...omit(data, ['fold']),\n          ind: {\n            ...data.ind,\n            left: Math.min(indLeft, MAX_INDENT_SIZE),\n          },\n        },\n      };\n      editor\n        .command(Commands.setNodeByKey, key, newData)\n        .userData.delete(element, ['fold']);\n    } else {\n      increaseItemByNode(editor, offset, element);\n    }\n    return undefined;\n  });\n  return editor;\n}\n"],"file":"increaseItemDepth.js"}