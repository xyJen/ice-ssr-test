import { getListData, getListId, getSelectionInListItem } from "../utils";
import list2Paragraph from "./list2Paragraph";
import toggleList from "./toggleList";
import { DEFAULT_BULLET_LIST_ARRAY, DEFAULT_NUMBER_LIST_ARRAY } from "../../utils/listStyleMapping"; // 兼容旧列表切换新列表

var getListItemSelected = function getListItemSelected(controller) {
  var _result;

  var result = getSelectionInListItem(controller);

  if ((_result = result) != null && _result.listId && !result.listStyleType && !result.isTaskList) {
    var listStyleType = result.isOrdered ? DEFAULT_NUMBER_LIST_ARRAY[0] : DEFAULT_BULLET_LIST_ARRAY[0];
    result = Object.assign({
      listStyleType: listStyleType
    }, result);
  }

  return result;
};

export default function toggleWrapInList(controller, type, listType, restart) {
  var value = controller.value;
  var item = getListItemSelected(controller);
  var data = getListData({
    type: type,
    listId: (item == null ? void 0 : item.listId) || getListId({
      value: value,
      listType: listType,
      restart: restart,
      type: type,
      controller: controller
    }),
    level: 0,
    listStyleType: listType
  });

  if (item) {
    var _item$listStyle;

    if (type === 'tlist' && item.isTaskList || type !== 'tlist' && item.listStyleType === listType || type === 'ulist' && ((_item$listStyle = item.listStyle) == null ? void 0 : _item$listStyle.text) === listType) {
      // 列表切换为普通段落
      list2Paragraph(controller);
      return controller;
    } else {
      // 不同类型列表间切换
      toggleList(controller, data, type);
      return controller;
    }
  } else if (listType) {
    // 普通段落切换有序或无序
    toggleList(controller, data, type);
    return controller;
  } else {
    // 普通段落切换任务列表
    toggleList(controller, data, type);
    return controller;
  }
}
//# sourceMappingURL=toggleWrapInList.js.map