{"version":3,"sources":["../../../../src/bi/commands/toggleWrapInList.ts"],"names":["getListData","getListId","getSelectionInListItem","list2Paragraph","toggleList","DEFAULT_BULLET_LIST_ARRAY","DEFAULT_NUMBER_LIST_ARRAY","getListItemSelected","controller","result","listId","listStyleType","isTaskList","isOrdered","Object","assign","toggleWrapInList","type","listType","restart","value","item","data","level","listStyle","text"],"mappings":"AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,sBAAjC;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,SACEC,yBADF,EAEEC,yBAFF,uC,CAKA;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,UAAD,EAAgB;AAAA;;AAC1C,MAAIC,MAAM,GAAGP,sBAAsB,CAACM,UAAD,CAAnC;;AACA,MAAI,WAAAC,MAAM,SAAN,YAAQC,MAAR,IAAkB,CAACD,MAAM,CAACE,aAA1B,IAA2C,CAACF,MAAM,CAACG,UAAvD,EAAmE;AACjE,QAAMD,aAAa,GAAGF,MAAM,CAACI,SAAP,GAClBP,yBAAyB,CAAC,CAAD,CADP,GAElBD,yBAAyB,CAAC,CAAD,CAF7B;AAGAI,IAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAc;AAAEJ,MAAAA,aAAa,EAAbA;AAAF,KAAd,EAAiCF,MAAjC,CAAT;AACD;;AACD,SAAOA,MAAP;AACD,CATD;;AAWA,eAAe,SAASO,gBAAT,CAA0BR,UAA1B,EAAkDS,IAAlD,EAAgEC,QAAhE,EAAmFC,OAAnF,EAAsG;AAAA,MAC3GC,KAD2G,GACjGZ,UADiG,CAC3GY,KAD2G;AAEnH,MAAMC,IAAI,GAAGd,mBAAmB,CAACC,UAAD,CAAhC;AACA,MAAMc,IAAI,GAAGtB,WAAW,CAAC;AACvBiB,IAAAA,IAAI,EAAEA,IADiB;AAEvBP,IAAAA,MAAM,EAAE,CAAAW,IAAI,QAAJ,YAAAA,IAAI,CAAEX,MAAN,KAAgBT,SAAS,CAAC;AAAEmB,MAAAA,KAAK,EAALA,KAAF;AAASF,MAAAA,QAAQ,EAARA,QAAT;AAAmBC,MAAAA,OAAO,EAAPA,OAAnB;AAA4BF,MAAAA,IAAI,EAAJA,IAA5B;AAAkCT,MAAAA,UAAU,EAAVA;AAAlC,KAAD,CAFV;AAGvBe,IAAAA,KAAK,EAAE,CAHgB;AAIvBZ,IAAAA,aAAa,EAAEO;AAJQ,GAAD,CAAxB;;AAMA,MAAIG,IAAJ,EAAU;AAAA;;AACR,QACGJ,IAAI,KAAK,OAAT,IAAoBI,IAAI,CAACT,UAA1B,IACCK,IAAI,KAAK,OAAT,IAAoBI,IAAI,CAACV,aAAL,KAAuBO,QAD5C,IAECD,IAAI,KAAK,OAAT,IAAoB,oBAAAI,IAAI,CAACG,SAAL,qCAAgBC,IAAhB,MAAyBP,QAHhD,EAIE;AACA;AACAf,MAAAA,cAAc,CAACK,UAAD,CAAd;AACA,aAAOA,UAAP;AACD,KARD,MAQO;AACL;AACAJ,MAAAA,UAAU,CAACI,UAAD,EAAac,IAAb,EAAmBL,IAAnB,CAAV;AACA,aAAOT,UAAP;AACD;AACF,GAdD,MAcO,IAAIU,QAAJ,EAAc;AACnB;AACAd,IAAAA,UAAU,CAACI,UAAD,EAAac,IAAb,EAAmBL,IAAnB,CAAV;AACA,WAAOT,UAAP;AACD,GAJM,MAIA;AACL;AACAJ,IAAAA,UAAU,CAACI,UAAD,EAAac,IAAb,EAAmBL,IAAnB,CAAV;AACA,WAAOT,UAAP;AACD;AACF","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { getListData, getListId, getSelectionInListItem } from '../utils';\nimport list2Paragraph from './list2Paragraph';\nimport toggleList from './toggleList';\nimport {\n  DEFAULT_BULLET_LIST_ARRAY,\n  DEFAULT_NUMBER_LIST_ARRAY,\n} from '../../utils/listStyleMapping';\n\n// 兼容旧列表切换新列表\nconst getListItemSelected = (controller) => {\n  let result = getSelectionInListItem(controller);\n  if (result?.listId && !result.listStyleType && !result.isTaskList) {\n    const listStyleType = result.isOrdered\n      ? DEFAULT_NUMBER_LIST_ARRAY[0]\n      : DEFAULT_BULLET_LIST_ARRAY[0];\n    result = Object.assign({ listStyleType }, result);\n  }\n  return result;\n};\n\nexport default function toggleWrapInList(controller: Controller, type: string, listType?: string, restart?: boolean) {\n  const { value } = controller;\n  const item = getListItemSelected(controller);\n  const data = getListData({\n    type: type as 'ul' | 'ol' | 'tlist',\n    listId: item?.listId || getListId({ value, listType, restart, type, controller }),\n    level: 0,\n    listStyleType: listType,\n  });\n  if (item) {\n    if (\n      (type === 'tlist' && item.isTaskList) ||\n      (type !== 'tlist' && item.listStyleType === listType) ||\n      (type === 'ulist' && item.listStyle?.text === listType)\n    ) {\n      // 列表切换为普通段落\n      list2Paragraph(controller);\n      return controller;\n    } else {\n      // 不同类型列表间切换\n      toggleList(controller, data, type);\n      return controller;\n    }\n  } else if (listType) {\n    // 普通段落切换有序或无序\n    toggleList(controller, data, type);\n    return controller;\n  } else {\n    // 普通段落切换任务列表\n    toggleList(controller, data, type);\n    return controller;\n  }\n}\n"],"file":"toggleWrapInList.js"}