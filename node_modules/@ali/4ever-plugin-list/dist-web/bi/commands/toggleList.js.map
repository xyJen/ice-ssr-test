{"version":3,"sources":["../../../../src/bi/commands/toggleList.ts"],"names":["Commands","EdgePoint","Selection","TextPoint","INDENT_SIZE","SzUtil","logger","Heading","MoHeading","v4","uuid","omit","findFirstListItemById","getCurrentItem","getListStyle","getListItemsBySelection","getSiblingItems","mergeListData","isValidListStyleType","convertMarkToSymbolStyle","createSymbolStyle","controller","element","value","document","firstText","getFirstText","lastText","getLastText","undefined","activeMarks","getActiveMarksAtRange","create","anchor","key","offset","focus","text","length","reduce","prev","curMark","toggleList","newData","type","blocks","selection","listSelections","data","currentList","newDataContent","firstItem","list","isTaskList","target","e","error","name","extendListItem","withoutNormalizing","forEach","elementListConfig","level","isHeading","symbolStyle","sz","fromHeadingType","baseLeft","ind","left","itemLeft","firstLine","diffValue","Math","max","floor","listStyleType","extraData","docTaskId","slice","hideSymbol","isChecked","isOrdered","listStyle","blockType","command","setNodeByKey","parent","lastList","lastBlockOfParent","nodes","insertPoint","edge","AFTER","insertEmptyBlock","select"],"mappings":"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","sourcesContent":["import {\n  Block,\n  Controller,\n  Commands,\n  EdgePoint,\n  Selection,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport { INDENT_SIZE, SzUtil } from '@ali/4ever-utils';\nimport logger from '@ali/4ever-logger';\nimport { Heading as MoHeading } from '@ali/4ever-plugin-heading';\nimport { v4 as uuid } from 'uuid';\nimport { omit } from 'lodash-es';\nimport {\n  findFirstListItemById,\n  getCurrentItem,\n  getListStyle,\n  getListItemsBySelection,\n  getSiblingItems,\n  mergeListData,\n  isValidListStyleType,\n} from '../utils';\nimport { convertMarkToSymbolStyle } from '../../utils/getSymbolStyleByKey';\nimport type { SymbolStyleProperties } from '../../utils/types';\n\nfunction createSymbolStyle(controller: Controller, element: Block) {\n  const { value } = controller;\n  const { document } = value;\n  const firstText = element.getFirstText();\n  const lastText = element.getLastText();\n\n  if (!firstText || !lastText) {\n    return undefined;\n  }\n\n  const activeMarks = document.getActiveMarksAtRange(\n    Selection.create({\n      anchor: TextPoint.create({ key: firstText.key, offset: 0 }),\n      focus: TextPoint.create({\n        key: lastText.key,\n        offset: lastText.text.length,\n      }),\n    }),\n  );\n\n  return activeMarks.reduce<SymbolStyleProperties>((prev, curMark) => {\n    return { ...prev, ...convertMarkToSymbolStyle(curMark) };\n  }, {});\n}\n\n/**\n *\n * @param controller\n * @param newData\n * @param type 可选，要转的列表类型\n * @param blocks 可选，要转为列表的块节点\n * @returns\n */\nexport default function toggleList(\n  controller: Controller,\n  newData,\n  type?,\n  blocks?: Block[],\n) {\n  const { value } = controller;\n  const { document, selection } = value;\n  const { listSelections } = value.data;\n\n  let currentList = listSelections?.length\n    ? getListItemsBySelection(controller)\n    : blocks || getCurrentItem(controller);\n  let newDataContent = {\n    data: newData,\n  };\n\n  if (!(currentList && currentList[0])) return controller;\n  let firstItem: Block | null = currentList[0];\n  if (\n    currentList.length === 1 &&\n    type !== 'tlist' &&\n    !currentList[0].data?.list?.isTaskList\n  ) {\n    const target = currentList[0];\n\n    // 选中列表符号时，对选中的列表做 toggle\n    if (!listSelections?.length && target) {\n      currentList = getSiblingItems(value, target);\n    }\n    try {\n      firstItem = currentList[0];\n    } catch (e) {\n      logger.error({\n        type: 'listError',\n        name: 'toggleList',\n        value: {\n          listSelections,\n          target,\n          currentList,\n        },\n      });\n      return controller;\n    }\n  }\n\n  const extendListItem =\n    firstItem && (findFirstListItemById(firstItem, value.document) as Block);\n\n  controller.withoutNormalizing(() => {\n    currentList?.forEach((element) => {\n      if (!element) return;\n      const { data } = mergeListData(element.data, newData.list);\n\n      if (element.data) {\n        if (element.data.list) {\n          const elementListConfig = element.data.list;\n          data.list.level = elementListConfig?.level || 0;\n          // 若标题代办转为列表，符号大小自动继承\n          if (MoHeading.isHeading(element)) {\n            data.list.symbolStyle = {\n              ...elementListConfig.symbolStyle,\n              sz: SzUtil.fromHeadingType(element.type),\n            };\n          }\n          if (elementListConfig.symbolStyle) {\n            data.list.symbolStyle = elementListConfig.symbolStyle;\n          }\n        } else {\n          const baseLeft = extendListItem?.data?.ind?.left || 0;\n          const itemLeft =\n            (element?.data?.ind?.left || 0) +\n            (element?.data?.ind?.firstLine || 0);\n          const diffValue = Math.max(itemLeft - baseLeft, 0);\n          data.list.level = Math.floor(diffValue / INDENT_SIZE);\n          data.list.symbolStyle = createSymbolStyle(controller, element);\n          data.ind = {\n            ...omit(data.ind, 'firstLine'),\n            left: Math.max(baseLeft, 0),\n          };\n        }\n      }\n\n      const { level, listStyleType } = data.list;\n\n      /* 切换为任务列表 */\n      if (type === 'tlist') {\n        data.list.extraData = data.list.extraData || {};\n        if (!data.list.extraData.docTaskId) {\n          data.list.extraData = {\n            ...data.list.extraData,\n            docTaskId: uuid().slice(0, 8),\n          };\n        }\n        newDataContent = mergeListData(data, {\n          isTaskList: true,\n          hideSymbol: false,\n          isChecked: false,\n          isOrdered: false,\n        });\n      } else if (isValidListStyleType(listStyleType)) {\n        data.list.listStyle = getListStyle(\n          type === 'olist',\n          level,\n          listStyleType,\n        );\n      }\n      /* 切换为无序列表 */\n      if (type === 'ulist') {\n        newDataContent = mergeListData(data, {\n          isTaskList: false,\n          isOrdered: false,\n          hideSymbol: false,\n        });\n      }\n      /* 切换为有序列表 */\n      if (type === 'olist') {\n        newDataContent = mergeListData(data, {\n          isTaskList: false,\n          isOrdered: true,\n          hideSymbol: false,\n        });\n      }\n      let blockType = 'paragraph';\n      if (MoHeading.isHeading(element)) {\n        blockType = element.type;\n      }\n      controller.command(Commands.setNodeByKey, element.key, {\n        type: blockType,\n        ...newDataContent,\n      });\n    });\n  });\n\n  const parent = document;\n  const lastList = currentList[currentList.length - 1];\n  const lastBlockOfParent = parent.nodes[parent.nodes.length - 1];\n  // 插入代办时，如果当前段落是父节点的最后一个段落，那么需要在后面插入一个空段路\n  if (\n    newDataContent.data.list.isTaskList &&\n    lastList?.key === lastBlockOfParent.key\n  ) {\n    const insertPoint = EdgePoint.create({\n      key: lastList.key,\n      edge: EdgePoint.AFTER,\n    });\n\n    controller\n      .command(Commands.insertEmptyBlock, insertPoint)\n      .command(Commands.select, selection);\n  }\n\n  return controller;\n}\n"],"file":"toggleList.js"}