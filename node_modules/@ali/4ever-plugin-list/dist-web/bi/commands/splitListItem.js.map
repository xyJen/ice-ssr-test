{"version":3,"sources":["../../../../src/bi/commands/splitListItem.ts"],"names":["v4","uuid","Commands","utils","omit","getCurrentItem","mergeListData","uniqueId","LINE_BREAK","ZERO_CHAR","isFoldGroupNode","getNextViewGroupNode","controller","isShift","value","document","selection","startInline","currentItem","data","list","command","insertText","splitOffset","anchor","offset","startKey","key","isSelectInlineVoid","isCollapsed","query","nextViewNode","isFoldNode","userData","get","splitDescendantsByKey","newItem","extraData","isTaskList","docTaskId","slice","assignData","setNodeByKey","isChecked","hideSymbol","getNode","removeNodeByKey","text","previous","getPreviousBlock","moveToEndOfNode","moveToStartOfNode","parent","getParent","lastNode","nodes","length","insertBlock"],"mappings":"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","sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { Block, Controller, Commands, TextPoint } from '@ali/4ever-cangjie';\nimport { utils } from '@ali/4ever-plugin-list-group';\nimport { omit } from 'lodash-es';\nimport { getCurrentItem, mergeListData } from '../utils';\nimport { uniqueId }  from '@ali/4ever-utils';\nimport { LINE_BREAK, ZERO_CHAR } from '../constants';\n\nconst { isFoldGroupNode, getNextViewGroupNode } = utils;\nexport default (controller: Controller, isShift?: boolean) => {\n  const { value } = controller;\n  const { document, selection, startInline } = value;\n\n  const currentItem = getCurrentItem(controller);\n  if (!currentItem) return controller;\n  if (!currentItem[0] || !currentItem[0].data.list) return controller;\n\n  if (isShift) {\n    // 插入的文本由 \\n(回车) 与 零宽连字 组成, 保证光标可以随之换行\n    return controller.command(Commands.insertText, LINE_BREAK + ZERO_CHAR);\n  }\n\n  const splitOffset = (selection?.anchor as TextPoint).offset;\n  const startKey = selection?.anchor.key;\n  const isSelectInlineVoid = startInline &&\n    selection.isCollapsed && controller.query('isVoid', startInline);\n\n  if (!isSelectInlineVoid) {\n    let nextViewNode;\n    const isFoldNode =\n      isFoldGroupNode(currentItem[0], controller) && controller.userData.get(currentItem[0], 'fold');\n    if (isFoldNode) {\n      nextViewNode = getNextViewGroupNode(currentItem[0], controller);\n    }\n\n    startKey &&\n      controller.command(\n        Commands.splitDescendantsByKey,\n        currentItem[0].key,\n        startKey,\n        splitOffset,\n      );\n\n    /* 将 enter 生成的 item 勾选状态设为 false */\n    let newItem = getCurrentItem(controller)[0];\n    const data = newItem?.data;\n    if (!data?.list) return controller;\n    const extraData: Record<string, string> = {};\n    if (data.list.isTaskList) {\n      extraData.docTaskId = uuid().slice(0, 8);\n    }\n    const assignData: Record<string, string> = {};\n    if (data.uuid) {\n      assignData.uuid = uniqueId();\n    }\n\n    if (newItem) {\n      controller.command(\n        Commands.setNodeByKey,\n        newItem.key,\n        mergeListData(\n          { ...omit(data, 'fold'), ...assignData },\n          { extraData, isChecked: false, hideSymbol: false },\n        ),\n      )\n      /**\n       * 若当前节点是 GroupNode list 节点，做可视节点的切割\n       *  I -> 光标坐在位置，在光标位置按 Enter 键\n       * \n       * 场景一: 列表 aaa 拆为列表 aaa 和 空列表\n       * \n       *   1. aaaI            1. aaa\n       *   |  a. bbb          2. I\n       *   |    i. ccc   ->   |   a. bbb\n       *                      |      i. ccc\n       * \n       * 场景二：列表 aaa 拆为列表 aa 和 列表 a\n       * \n       *   1. aaIa            1. aaa\n       *   |  a. bbb          2. Ia\n       *   |    i. ccc   ->   |   a. bbb\n       *                      |      i. ccc\n       * \n       * 场景三：折叠列表 aaa 拆为列表 aaa 和可视紧邻的空列表\n       * \n       *  >1. aaaI           >1. aaa\n       *   2. bbb        ->   2. I\n       *                      3. bbb\n       * \n       * 场景三：后边无节点的折叠列表 aaa 拆为列表 aaa 和可视紧邻的空列表\n       * \n       *  >1. aaaI       ->  >1. aaa\n       *                      2. I\n       */\n      if (isFoldNode) {\n        newItem = controller.value.document.getNode(newItem.key) as Block;\n        if (!newItem) {\n          return controller;\n        }\n        controller.command(Commands.removeNodeByKey, newItem.key);\n        if (nextViewNode) {\n          if (nextViewNode.text === '') {\n            const previous = document.getPreviousBlock(nextViewNode.key);\n            previous && controller.command(Commands.moveToEndOfNode, previous);\n          } else {\n            controller.command(Commands.moveToStartOfNode, nextViewNode);\n          }\n        } else {\n          const parent = controller.value.document.getParent(currentItem[0].key);\n          const lastNode = parent?.nodes[parent?.nodes.length - 1];\n          lastNode && controller.command(Commands.moveToEndOfNode, lastNode);\n        }\n        controller.command(Commands.insertBlock, newItem).command(Commands.moveToStartOfNode, newItem);\n      }\n    }\n  }\n\n  return controller;\n};\n"],"file":"splitListItem.js"}