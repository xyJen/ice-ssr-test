import _extends from "@babel/runtime/helpers/extends";
import { utils } from '@ali/4ever-plugin-list-group';
import { Commands } from '@ali/4ever-cangjie';
import { toggleFold } from '@ali/4ever-plugin-heading-group';
import { omit } from 'lodash-es';
var isListGroupAvailable = utils.isListGroupAvailable,
    getPreviousViewGroupNode = utils.getPreviousViewGroupNode;
/**
 * 若上一个可视节点是 GroupNode list 节点，做可视节点的合并
 * I -> 光标，在光标位置按 backspace 键
 *   
 * 场景一：列表 ddd 合并到列表 ccc
 * 
 *   1. aaa             1. aaa
 *   |  a. bbb          |  a. bbb
 *   |    i. ccc   ->   |    i. cccIddd
 *   2. Iddd
 * 
 * 场景二：段落 ddd 合并到列表 bbb
 * 
 *   1. aaa             1. aaa 
 *   | >a. bbb     ->   |  > a.bbbIddd
 *   Iddd
 * 
 * 场景三：段落 ddd 合并到列表 aaa
 * 
 *  >1. aaa        ->   >1. aaaIddd
 *   Iddd          
 */

export default function mergeMabeGroupNode(node, controller) {
  var previousViewNode = isListGroupAvailable(controller) && getPreviousViewGroupNode(node, controller);

  if (previousViewNode && controller.userData.get(previousViewNode, 'fold')) {
    var newNode = node.set('data', _extends({}, omit(node.data, ['fold']), {
      list: _extends({}, previousViewNode.data.list)
    }));
    controller.command(Commands.moveToEndOfNode, previousViewNode).command(Commands.removeNodeByKey, node.key).command(Commands.insertBlock, newNode).command(Commands.moveToStartOfNode, node); // 设置折叠状态

    toggleFold({
      node: newNode,
      fold: true
    });
  }
}
//# sourceMappingURL=mergeMabeGroupNode.js.map