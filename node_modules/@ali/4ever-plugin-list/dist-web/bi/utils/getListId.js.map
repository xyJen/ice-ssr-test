{"version":3,"sources":["../../../../src/bi/utils/getListId.ts"],"names":["getRandomId","isList","isEmpty","getCurrentItem","getListIdByStartBlock","block","data","list","listId","getListId","props","value","restart","listType","type","controller","document","startBlock","prevSibling","getPreviousSibling","key","listStyleType","nextSibling","getNextSibling","selection","isExpanded","listItems","nextKey","length"],"mappings":"AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,cAAP;;AAUA;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAiC;AAC7D,SAAOJ,MAAM,CAACI,KAAD,CAAN,GAAgBA,KAAhB,oBAAgBA,KAAK,CAAEC,IAAP,CAAYC,IAAZ,CAAiBC,MAAjC,GAA0CR,WAAW,EAA5D;AACD,CAFD;;AAIA,eAAe,SAASS,SAAT,CAAmBC,KAAnB,EAAmD;AAAA;;AAAA,MACxDC,KADwD,GACTD,KADS,CACxDC,KADwD;AAAA,MACjDC,OADiD,GACTF,KADS,CACjDE,OADiD;AAAA,MACxCC,QADwC,GACTH,KADS,CACxCG,QADwC;AAAA,MAC9BC,IAD8B,GACTJ,KADS,CAC9BI,IAD8B;AAAA,MACxBC,UADwB,GACTL,KADS,CACxBK,UADwB;AAEhE,MAAIH,OAAO,IAAI,CAACD,KAAhB,EAAuB,OAAOX,WAAW,EAAlB;AAFyC,MAGxDgB,QAHwD,GAG/BL,KAH+B,CAGxDK,QAHwD;AAAA,MAG9CC,UAH8C,GAG/BN,KAH+B,CAG9CM,UAH8C;AAIhE,MAAIC,WAAW,GAAGD,UAAU,KAAID,QAAJ,oBAAIA,QAAQ,CAAEG,kBAAV,CAA6BF,UAAU,CAACG,GAAxC,CAAJ,CAA5B;;AACA,SAAOF,WAAP,EAAoB;AAClB,QAAIjB,MAAM,CAACiB,WAAD,CAAV,EAAyB;AACvB,UAAIL,QAAQ,KAAKK,WAAW,CAACZ,IAAZ,CAAiBC,IAAjB,CAAsBc,aAAvC,EAAsD;AACpD,eAAOrB,WAAW,EAAlB;AACD;;AACD,aAAOkB,WAAW,CAACZ,IAAZ,CAAiBC,IAAjB,CAAsBC,MAA7B;AACD;;AACD,QAAI,CAACN,OAAO,CAACgB,WAAD,CAAZ,EAA2B;AACzB;AACD;;AACDA,IAAAA,WAAW,GAAGF,QAAH,oBAAGA,QAAQ,CAAEG,kBAAV,CAA6BD,WAAW,CAACE,GAAzC,CAAd;AACD;;AAED,MAAIE,WAAW,GAAGL,UAAU,KAAID,QAAJ,oBAAIA,QAAQ,CAAEO,cAAV,CAAyBN,UAAU,CAACG,GAApC,CAAJ,CAA5B;;AACA,MAAIL,UAAJ,YAAIA,UAAU,CAAEJ,KAAZ,CAAkBa,SAAlB,CAA4BC,UAAhC,EAA4C;AAAA;;AAC1C,QAAMC,SAAS,GAAGvB,cAAc,CAACY,UAAD,CAAhC;AACA,QAAMY,OAAO,iBAAGD,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAAZ,qBAAG,WAAiCR,GAAjD;;AACA,QAAIO,OAAJ,EAAa;AACXL,MAAAA,WAAW,GAAGN,QAAH,oBAAGA,QAAQ,CAAEO,cAAV,CAAyBI,OAAzB,CAAd;AACD;AACF;;AACD,MACEL,WAAW,IACXrB,MAAM,CAACqB,WAAD,CADN,IAEAT,QAAQ,sBAAKS,WAAL,0CAAK,aAAahB,IAAlB,8CAAK,kBAAmBC,IAAxB,qBAAK,sBAAyBc,aAA9B,CAHV,EAIE;AACA,WAAOC,WAAW,CAAChB,IAAZ,IAAoBgB,WAAW,CAAChB,IAAZ,CAAiBC,IAAjB,CAAsBC,MAAjD;AACD;;AAED,MAAIM,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAOd,WAAW,EAAlB;AACD;;AAED,SAAOI,qBAAqB,CAACa,UAAD,CAA5B;AACD","sourcesContent":["import { Block, Controller, Value } from '@ali/4ever-cangjie';\nimport { getRandomId } from '@ali/4ever-utils';\nimport isList from './isList';\nimport isEmpty from './isEmpty';\nimport getCurrentItem from './getCurrentItem';\n\ninterface IGetListIdProps {\n  value?: Value;\n  restart?: boolean;\n  listType?: string;\n  type?: string;\n  controller?: Controller;\n}\n\n// 如果当前项已是列表类型，且不需要前后序号连接时，直接使用当前项的listId，保持整个list group的listId一致\nconst getListIdByStartBlock = (block: Block | null): string => {\n  return isList(block) ? block?.data.list.listId : getRandomId();\n};\n\nexport default function getListId(props: IGetListIdProps): string {\n  const { value, restart, listType, type, controller } = props;\n  if (restart || !value) return getRandomId();\n  const { document, startBlock } = value;\n  let prevSibling = startBlock && document?.getPreviousSibling(startBlock.key) as Block;\n  while (prevSibling) {\n    if (isList(prevSibling)) {\n      if (listType !== prevSibling.data.list.listStyleType) {\n        return getRandomId();\n      }\n      return prevSibling.data.list.listId;\n    }\n    if (!isEmpty(prevSibling)) {\n      break;\n    }\n    prevSibling = document?.getPreviousSibling(prevSibling.key) as Block;\n  }\n\n  let nextSibling = startBlock && document?.getNextSibling(startBlock.key) as Block;\n  if (controller?.value.selection.isExpanded) {\n    const listItems = getCurrentItem(controller);\n    const nextKey = listItems[listItems.length - 1]?.key;\n    if (nextKey) {\n      nextSibling = document?.getNextSibling(nextKey) as Block;\n    }\n  }\n  if (\n    nextSibling &&\n    isList(nextSibling) &&\n    listType === nextSibling?.data?.list?.listStyleType\n  ) {\n    return nextSibling.data && nextSibling.data.list.listId;\n  }\n\n  if (type === 'tlist') {\n    return getRandomId();\n  }\n\n  return getListIdByStartBlock(startBlock);\n}\n"],"file":"getListId.js"}