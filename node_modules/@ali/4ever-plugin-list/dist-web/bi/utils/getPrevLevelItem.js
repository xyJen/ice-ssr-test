export default (function (value, currentItem, offset) {
  var _currentItem$data;

  var document = value.document;
  var curListConfig = currentItem == null ? void 0 : (_currentItem$data = currentItem.data) == null ? void 0 : _currentItem$data.list;
  if (!curListConfig) return null;
  var curListId = curListConfig.listId,
      curLevel = curListConfig.level;
  if (!curListId) return null;
  var prevBlock = document.getPreviousNode(currentItem.key);

  while (prevBlock) {
    var _prevBlock, _prevBlock$data;

    var listConfig = (_prevBlock = prevBlock) == null ? void 0 : (_prevBlock$data = _prevBlock.data) == null ? void 0 : _prevBlock$data.list;

    if (listConfig) {
      var listId = listConfig.listId,
          level = listConfig.level; // 当增加缩进，列表项前边无可继承样式的节点时，使用当前列表项的样式

      if (offset > 0 && level <= curLevel) return null;

      if (listId === curListId && level === curLevel + offset) {
        // 继承离当前项最近，且listId相同的列表项样式
        return prevBlock;
      }
    }

    prevBlock = document.getPreviousNode(prevBlock.key);
  }

  return null;
});
//# sourceMappingURL=getPrevLevelItem.js.map