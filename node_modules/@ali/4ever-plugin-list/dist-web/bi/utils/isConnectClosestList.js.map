{"version":3,"sources":["../../../../src/bi/utils/isConnectClosestList.ts"],"names":["Block","getListOrderDataById","isConnectClosestList","value","closestListItem","inputNum","dir","isBlock","closeFormat","data","list","listStyle","format","parent","document","getParent","key","lists","nodes","listId","inectionList","find","i","diff","start","isConnectNextClosestList","isConnectPrevClosestList"],"mappings":"AAAA,SAAsBA,KAAtB,QAAmC,oBAAnC;AACA,SAASC,oBAAT;;AAEA,SAASC,oBAAT,CACEC,KADF,EAEEC,eAFF,EAGEC,QAHF,EAIEC,GAJF,EAKE;AAAA;;AACA,MAAI,CAACF,eAAD,IAAoB,CAACJ,KAAK,CAACO,OAAN,CAAcH,eAAd,CAAzB,EAAyD;AACvD,WAAO,KAAP;AACD;;AACD,MAAMI,WAAW,4BAAGJ,eAAe,CAACK,IAAhB,CAAqBC,IAAxB,+CAAG,sBAA2BC,SAA9B,qBAAG,uBAAsCC,MAA1D;;AACA,MAAIJ,WAAJ,EAAiB;AACf,QAAMK,MAAM,GAAGV,KAAK,CAACW,QAAN,CAAeC,SAAf,CAAyBX,eAAe,CAACY,GAAzC,CAAf;;AACA,QAAI,CAACH,MAAL,EAAa;AACX,aAAO,KAAP;AACD;;AACD,QAAMI,KAAK,GAAGhB,oBAAoB,CAACY,MAAM,CAACK,KAAR,EAAed,eAAe,CAACK,IAAhB,CAAqBC,IAArB,CAA0BS,MAAzC,CAAlC;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAW,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACN,GAAF,KAAUZ,eAAe,CAACY,GAA9B;AAAA,KAAZ,CAArB;;AACA,QAAI,CAACI,YAAL,EAAmB;AACjB,aAAO,KAAP;AACD;;AACD,QAAMG,IAAI,GAAGlB,QAAQ,GAAGe,YAAY,CAACX,IAAb,CAAkBe,KAA1C;AACA,WAAOD,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAKjB,GAA9B;AACD;;AACD,SAAO,KAAP;AACD;;AAED,OAAO,SAASmB,wBAAT,CACLtB,KADK,EAELC,eAFK,EAGLC,QAHK,EAII;AACT,SAAOH,oBAAoB,CAACC,KAAD,EAAQC,eAAR,EAAyBC,QAAzB,EAAmC,CAAC,CAApC,CAA3B;AACD;AAED,OAAO,SAASqB,wBAAT,CACLvB,KADK,EAELC,eAFK,EAGLC,QAHK,EAII;AACT,MAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAClB,WAAO,KAAP;AACD;;AACD,SAAOH,oBAAoB,CAACC,KAAD,EAAQC,eAAR,EAAyBC,QAAzB,EAAmC,CAAnC,CAA3B;AACD","sourcesContent":["import { Value, Node, Block } from '@ali/4ever-cangjie';\nimport { getListOrderDataById } from '../../utils/putListOrder';\n\nfunction isConnectClosestList(\n  value: Value,\n  closestListItem: Node | null,\n  inputNum: number,\n  dir: 1 | -1,\n) {\n  if (!closestListItem || !Block.isBlock(closestListItem)) {\n    return false;\n  }\n  const closeFormat = closestListItem.data.list?.listStyle?.format;\n  if (closeFormat) {\n    const parent = value.document.getParent(closestListItem.key);\n    if (!parent) {\n      return false;\n    }\n    const lists = getListOrderDataById(parent.nodes, closestListItem.data.list.listId);\n    const inectionList = lists.find(i => i.key === closestListItem.key);\n    if (!inectionList) {\n      return false;\n    }\n    const diff = inputNum - inectionList.data.start;\n    return diff === 0 || diff === dir;\n  }\n  return false;\n}\n\nexport function isConnectNextClosestList(\n  value: Value,\n  closestListItem: Node | null,\n  inputNum: number,\n): boolean {\n  return isConnectClosestList(value, closestListItem, inputNum, -1);\n}\n\nexport function isConnectPrevClosestList(\n  value: Value,\n  closestListItem: Node | null,\n  inputNum: number,\n): boolean {\n  if (inputNum === 1) {\n    return false;\n  }\n  return isConnectClosestList(value, closestListItem, inputNum, 1);\n}\n"],"file":"isConnectClosestList.js"}