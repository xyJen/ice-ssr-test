{"version":3,"sources":["../../../../src/bi/utils/shortcutTypes.ts"],"names":["NUMBER_DON","NUMBER_POINT","EN_NUM_BRACKET","ZH_NUM_BRACKET","EN_NUM_HALF_BRACKET","ZH_NUM_HALF_BRACKET","EN_LET_HALF_BRACKET","ZH_LET_HALF_BRACKET","chars","typeChar","test"],"mappings":"AAAA,SACEA,UADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,mBAPF,EAQEC,mBARF;AAWA,gBAAe,UAACC,KAAD,EAAW;AACxB,MAAIC,QAAQ,GAAGD,KAAf;;AACA,MACER,UAAU,CAACU,IAAX,CAAgBF,KAAhB,KACAP,YAAY,CAACS,IAAb,CAAkBF,KAAlB,CADA,IAEAN,cAAc,CAACQ,IAAf,CAAoBF,KAApB,CAFA,IAGAL,cAAc,CAACO,IAAf,CAAoBF,KAApB,CAHA,IAIAJ,mBAAmB,CAACM,IAApB,CAAyBF,KAAzB,CAJA,IAKAH,mBAAmB,CAACK,IAApB,CAAyBF,KAAzB,CALA,IAMAF,mBAAmB,CAACI,IAApB,CAAyBF,KAAzB,CANA,IAOAD,mBAAmB,CAACG,IAApB,CAAyBF,KAAzB,CARF,EASE;AACAC,IAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,UAAQA,QAAR;AACE,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACE,aAAO,OAAP;;AACF,SAAK,IAAL;AACE,aAAO,OAAP;;AACF,SAAK,IAAL;AACA,SAAK,KAAL;AACE,aAAO,OAAP;;AACF;AACE,aAAO,IAAP;AAXJ;AAaD,CA3BD","sourcesContent":["import {\n  NUMBER_DON,\n  NUMBER_POINT,\n  EN_NUM_BRACKET,\n  ZH_NUM_BRACKET,\n  EN_NUM_HALF_BRACKET,\n  ZH_NUM_HALF_BRACKET,\n  EN_LET_HALF_BRACKET,\n  ZH_LET_HALF_BRACKET,\n} from '../regexp';\n\nexport default (chars) => {\n  let typeChar = chars;\n  if (\n    NUMBER_DON.test(chars) ||\n    NUMBER_POINT.test(chars) ||\n    EN_NUM_BRACKET.test(chars) ||\n    ZH_NUM_BRACKET.test(chars) ||\n    EN_NUM_HALF_BRACKET.test(chars) ||\n    ZH_NUM_HALF_BRACKET.test(chars) ||\n    EN_LET_HALF_BRACKET.test(chars) ||\n    ZH_LET_HALF_BRACKET.test(chars)\n  ) {\n    typeChar = '1.';\n  }\n  switch (typeChar) {\n    case '*':\n    case '+':\n    case '-':\n      return 'ulist';\n    case '1.':\n      return 'olist';\n    case '[]':\n    case '[x]':\n      return 'tlist';\n    default:\n      return null;\n  }\n};\n"],"file":"shortcutTypes.js"}