import _extends from "@babel/runtime/helpers/extends";
import { Injection } from '@ali/4ever-cangjie';
export default function selectSymbol(controller, listItemSelected, isSelected) {
  var _controller$value = controller.value,
      injections = _controller$value.injections,
      data = _controller$value.data;
  var allInjections = [];
  var curInjections = [];
  var curInjectionMap = new Map();
  injections.forEach(function (item) {
    if (listItemSelected.includes(item.key)) {
      curInjections.push(item);
      curInjectionMap.set(item.key, true);
    } else {
      allInjections.push(item);
    }
  });
  var result = [];

  if (curInjections.length) {
    result = curInjections.map(function (inj) {
      return Injection.create(_extends({}, inj, {
        data: _extends({}, inj.data || {}, {
          isSelected: isSelected
        })
      }));
    });
  }

  listItemSelected.forEach(function (key) {
    if (!curInjectionMap.get(key)) {
      result.push(Injection.create({
        key: key,
        data: {
          isSelected: isSelected
        }
      }));
    }
  });
  controller.setInjections([].concat(allInjections, result));
}
//# sourceMappingURL=selectSymbol.js.map