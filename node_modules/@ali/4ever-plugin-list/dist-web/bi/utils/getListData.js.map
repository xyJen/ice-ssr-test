{"version":3,"sources":["../../../../src/bi/utils/getListData.ts"],"names":["STICKER_CODE_REG","mapping","getListData","type","level","listId","isChecked","listStyleType","symbolStyle","data","isOrdered","isTaskList","undefined","format","text","align","listStyle","test","list"],"mappings":"AAAA,SAASA,gBAAT;AAEA,SAASC,OAAT;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAT,OAOiC;AAAA,MAN9CC,IAM8C,QAN9CA,IAM8C;AAAA,MAL9CC,KAK8C,QAL9CA,KAK8C;AAAA,MAJ9CC,MAI8C,QAJ9CA,MAI8C;AAAA,MAH9CC,SAG8C,QAH9CA,SAG8C;AAAA,MAF9CC,aAE8C,QAF9CA,aAE8C;AAAA,MAD9CC,WAC8C,QAD9CA,WAC8C;AAC9C,MAAMC,IAAoB,GAAG;AAC3BJ,IAAAA,MAAM,EAANA,MAD2B;AAE3BD,IAAAA,KAAK,EAALA,KAF2B;AAG3BM,IAAAA,SAAS,EAAEP,IAAI,KAAK,IAHO;AAI3BQ,IAAAA,UAAU,EAAER,IAAI,KAAK,OAJM;AAK3BG,IAAAA,SAAS,EAAEH,IAAI,KAAK,OAAT,GAAmB,CAAC,CAACG,SAArB,GAAiCM,SALjB;AAM3BL,IAAAA,aAAa,EAAbA,aAN2B;AAO3BC,IAAAA,WAAW,EAAXA;AAP2B,GAA7B;;AASA,MAAID,aAAJ,EAAmB;AACjB,QAAIN,OAAO,CAACM,aAAD,CAAX,EAA4B;AAAA,kCACIN,OAAO,CAACM,aAAD,CAAP,CAAuB,CAAvB,CADJ;AAAA,UACnBM,MADmB;AAAA,UACXC,IADW;AAAA,UACLC,KADK,6BAC+B;;AACzDN,MAAAA,IAAI,CAACO,SAAL,GAAiB;AACfH,QAAAA,MAAM,EAANA,MADe;AAEfC,QAAAA,IAAI,EAAJA,IAFe;AAGfC,QAAAA,KAAK,EAALA;AAHe,OAAjB;AAKD,KAPD,MAOO,IAAIf,gBAAgB,CAACiB,IAAjB,CAAsBV,aAAtB,CAAJ,EAA0C;AAC/CE,MAAAA,IAAI,CAACO,SAAL,GAAiB;AACfH,QAAAA,MAAM,EAAE,QADO;AAEfC,QAAAA,IAAI,EAAEP,aAFS;AAGfQ,QAAAA,KAAK,EAAE;AAHQ,OAAjB;AAKD;AACF;;AAED,SAAO;AACLG,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD","sourcesContent":["import { STICKER_CODE_REG } from '../regexp';\nimport { SymbolStyleProperties, ListProperties } from '../../utils/types';\nimport { mapping } from '../../utils/listStyleMapping';\n\nexport interface GetListDataParams {\n  type: 'ul' | 'ol' | 'tlist';\n  level: number;\n  listId: string;\n  isChecked?: boolean;\n  listStyleType?: string;\n  symbolStyle?: SymbolStyleProperties;\n}\n\n/**\n * 根据指定的参数生成合法的 list 数据\n *\n * @export\n * @param {GetListDataParams} { type, level, listId, isChecked, listStyleType, symbolStyle }\n * @returns {{ list: ListProperties }}\n */\nexport default function getListData({\n  type,\n  level,\n  listId,\n  isChecked,\n  listStyleType,\n  symbolStyle,\n}: GetListDataParams): { list: ListProperties } {\n  const data: ListProperties = {\n    listId,\n    level,\n    isOrdered: type === 'ol',\n    isTaskList: type === 'tlist',\n    isChecked: type === 'tlist' ? !!isChecked : undefined,\n    listStyleType,\n    symbolStyle,\n  };\n  if (listStyleType) {\n    if (mapping[listStyleType]) {\n      const [format, text, align] = mapping[listStyleType][0]; // 默认取第一组\n      data.listStyle = {\n        format,\n        text,\n        align,\n      };\n    } else if (STICKER_CODE_REG.test(listStyleType)) {\n      data.listStyle = {\n        format: 'bullet',\n        text: listStyleType,\n        align: 'start',\n      };\n    }\n  }\n\n  return {\n    list: data,\n  };\n}\n"],"file":"getListData.js"}