{"version":3,"sources":["../../../../src/bi/utils/setSymbolStyle.ts"],"names":["Commands","Block","getCurrentItem","getWholeListItemSelected","mergeListData","isList","isHeadingStyle","symbolStyle","Boolean","bold","undefined","setSymbolStyle","controller","value","document","data","selection","wholeListItemSelected","isHeadingAction","isCollapsed","listSelections","currentItems","forEach","item","push","key","length","map","block","firstSymbolStyle","entries","index","node","getNode","isBlock","listSymbolStyle","list","newStyle","styleName","includes","firstText","getTextsAtRange","markValue","getMarks","find","mark","type","newData","JSON","stringify","command","setNodeByKey"],"mappings":"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","sourcesContent":["import { Commands, Controller, Block } from '@ali/4ever-cangjie';\nimport getCurrentItem from './getCurrentItem';\nimport getWholeListItemSelected from './getWholeListItemSelected';\nimport mergeListData from './mergeListData';\nimport isList from './isList';\nimport type { SymbolStyleProperties } from '../../utils/types';\n\nconst isHeadingStyle = (symbolStyle: SymbolStyleProperties): boolean => {\n  return Boolean('sz' in symbolStyle && (symbolStyle.bold !== undefined));\n};\n\nexport default function setSymbolStyle(\n  controller: Controller,\n  symbolStyle: SymbolStyleProperties,\n): void {\n  const { document, data, selection } = controller.value;\n  const wholeListItemSelected = getWholeListItemSelected(controller.value);\n  const isHeadingAction = isHeadingStyle(symbolStyle);\n  const { isCollapsed } = selection;\n  let listSelections = [...(data.listSelections || [])];\n  if (isHeadingAction) {\n    const currentItems = getCurrentItem(controller);\n    currentItems.forEach((item) => {\n      if (item && isList(item)) {\n        listSelections.push(item.key);\n      }\n    });\n  } else if (listSelections?.length === 0 && wholeListItemSelected.length > 0) {\n    listSelections = wholeListItemSelected.map((block) => block.key);\n  }\n  const firstSymbolStyle = {};\n  if (!listSelections) {\n    return;\n  }\n\n  for (const [index, key] of listSelections.entries()) {\n    const node = document.getNode(key);\n    if (!Block.isBlock(node)) {\n      continue;\n    }\n    const listSymbolStyle = {\n      ...node?.data?.list?.symbolStyle,\n    };\n    const newStyle: Record<string, any> = {};\n    for (const styleName in symbolStyle) {\n      if (\n        ['bold', 'italic', 'strike'].includes(styleName)\n      ) {\n        if (isCollapsed) {\n          // 项目符号选中设置样式，自动继承第一个 symbolStyle\n          newStyle[styleName] = firstSymbolStyle[styleName] || !listSymbolStyle[styleName];\n        } else {\n          const firstText = document.getTextsAtRange(selection)[0];\n          const markValue = firstText?.getMarks().find((mark) => mark.type === styleName);\n          newStyle[styleName] = Boolean(markValue);\n        }\n        if (!index) {\n          firstSymbolStyle[styleName] = newStyle[styleName];\n        }\n      } else if (symbolStyle[styleName] === undefined) {\n        // 允许显示声明 undefined 以清除指定属性\n        delete listSymbolStyle[styleName];\n      }\n    }\n    if (isHeadingAction) {\n      newStyle.bold = symbolStyle.bold;\n    }\n    const newData = mergeListData(node.data, {\n      symbolStyle: {\n        ...listSymbolStyle,\n        ...symbolStyle,\n        ...newStyle,\n      },\n    });\n    if (JSON.stringify(symbolStyle) === '{}') {\n      delete newData.data.list.symbolStyle;\n    }\n    controller.command(Commands.setNodeByKey, node.key, newData);\n  }\n}\n"],"file":"setSymbolStyle.js"}