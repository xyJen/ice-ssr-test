import { getRandomId } from '@ali/4ever-utils';
import isList from "./isList";
import isEmpty from "./isEmpty";
import getCurrentItem from "./getCurrentItem";

// 如果当前项已是列表类型，且不需要前后序号连接时，直接使用当前项的listId，保持整个list group的listId一致
var getListIdByStartBlock = function getListIdByStartBlock(block) {
  return isList(block) ? block == null ? void 0 : block.data.list.listId : getRandomId();
};

export default function getListId(props) {
  var _nextSibling, _nextSibling$data, _nextSibling$data$lis;

  var value = props.value,
      restart = props.restart,
      listType = props.listType,
      type = props.type,
      controller = props.controller;
  if (restart || !value) return getRandomId();
  var document = value.document,
      startBlock = value.startBlock;
  var prevSibling = startBlock && (document == null ? void 0 : document.getPreviousSibling(startBlock.key));

  while (prevSibling) {
    if (isList(prevSibling)) {
      if (listType !== prevSibling.data.list.listStyleType) {
        return getRandomId();
      }

      return prevSibling.data.list.listId;
    }

    if (!isEmpty(prevSibling)) {
      break;
    }

    prevSibling = document == null ? void 0 : document.getPreviousSibling(prevSibling.key);
  }

  var nextSibling = startBlock && (document == null ? void 0 : document.getNextSibling(startBlock.key));

  if (controller != null && controller.value.selection.isExpanded) {
    var _listItems;

    var listItems = getCurrentItem(controller);
    var nextKey = (_listItems = listItems[listItems.length - 1]) == null ? void 0 : _listItems.key;

    if (nextKey) {
      nextSibling = document == null ? void 0 : document.getNextSibling(nextKey);
    }
  }

  if (nextSibling && isList(nextSibling) && listType === ((_nextSibling = nextSibling) == null ? void 0 : (_nextSibling$data = _nextSibling.data) == null ? void 0 : (_nextSibling$data$lis = _nextSibling$data.list) == null ? void 0 : _nextSibling$data$lis.listStyleType)) {
    return nextSibling.data && nextSibling.data.list.listId;
  }

  if (type === 'tlist') {
    return getRandomId();
  }

  return getListIdByStartBlock(startBlock);
}
//# sourceMappingURL=getListId.js.map