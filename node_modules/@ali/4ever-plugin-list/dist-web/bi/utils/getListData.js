import { STICKER_CODE_REG } from "../regexp";
import { mapping } from "../../utils/listStyleMapping";

/**
 * 根据指定的参数生成合法的 list 数据
 *
 * @export
 * @param {GetListDataParams} { type, level, listId, isChecked, listStyleType, symbolStyle }
 * @returns {{ list: ListProperties }}
 */
export default function getListData(_ref) {
  var type = _ref.type,
      level = _ref.level,
      listId = _ref.listId,
      isChecked = _ref.isChecked,
      listStyleType = _ref.listStyleType,
      symbolStyle = _ref.symbolStyle;
  var data = {
    listId: listId,
    level: level,
    isOrdered: type === 'ol',
    isTaskList: type === 'tlist',
    isChecked: type === 'tlist' ? !!isChecked : undefined,
    listStyleType: listStyleType,
    symbolStyle: symbolStyle
  };

  if (listStyleType) {
    if (mapping[listStyleType]) {
      var _mapping$listStyleTyp = mapping[listStyleType][0],
          format = _mapping$listStyleTyp[0],
          text = _mapping$listStyleTyp[1],
          align = _mapping$listStyleTyp[2]; // 默认取第一组

      data.listStyle = {
        format: format,
        text: text,
        align: align
      };
    } else if (STICKER_CODE_REG.test(listStyleType)) {
      data.listStyle = {
        format: 'bullet',
        text: listStyleType,
        align: 'start'
      };
    }
  }

  return {
    list: data
  };
}
//# sourceMappingURL=getListData.js.map