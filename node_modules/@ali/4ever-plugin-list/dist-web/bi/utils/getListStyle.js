import { STICKER_CODE_REG } from "../regexp";
import { mapping, DEFAULT_BULLET_LIST_ARRAY, DEFAULT_NUMBER_LIST_ARRAY } from "../../utils/listStyleMapping";
export var isValidListStyleType = function isValidListStyleType(type) {
  return !type || mapping[type];
};
export default (function (isOrdered, listevel, type) {
  var listStyleType = type || (isOrdered ? DEFAULT_NUMBER_LIST_ARRAY[0] : DEFAULT_BULLET_LIST_ARRAY[0]);
  var styleTumple = mapping[listStyleType];

  if (!styleTumple && STICKER_CODE_REG.test(type)) {
    return {
      format: 'bullet',
      text: type,
      align: 'start'
    };
  }

  var level = listevel < 0 ? 0 : Math.floor(listevel);
  var listType = styleTumple[level % styleTumple.length]; // eslint-disable-next-line prefer-const

  var format = listType[0],
      text = listType[1],
      align = listType[2];

  if (isOrdered) {
    if (listStyleType === DEFAULT_NUMBER_LIST_ARRAY[2]) {
      text = '';

      for (var i = 0; i <= level; i++) {
        text += "%" + (i + 1 + (i === level ? '' : '.'));
      }
    } else {
      text = text.replace(/\d/, level + 1);
    }
  }

  return {
    format: format,
    text: text,
    align: align
  };
});
//# sourceMappingURL=getListStyle.js.map