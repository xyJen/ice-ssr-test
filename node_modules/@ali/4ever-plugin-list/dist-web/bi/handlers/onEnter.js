import { Commands, Text } from '@ali/4ever-cangjie';
import { increaseItemDepth, splitListItem, removeListNode, toggleWrapInList } from "../commands";
import { getItemDepth, isList } from "../utils";
import { STATS_WITH_1, STATS_WITH_a, STATS_WITH_A } from "../regexp";
import { DEFAULT_NUMBER_LIST_ARRAY } from "../../utils/listStyleMapping";

function isEmptyNode(block) {
  var onlyOneChild = block.nodes.length === 1;
  var isTextNode = Text.isText(block.nodes[0]);
  var isEmpty = !block.text;
  return onlyOneChild && isTextNode && isEmpty;
}

export default (function (event, controller, next) {
  var value = controller.value;
  var selection = value.selection;
  var currentItem = value.startBlock;
  if (!currentItem) return next();
  var firstNode = currentItem.getFirstNode();
  var firstText = firstNode.text || '';
  var startsWith1 = STATS_WITH_1.test(firstText);
  var startsWitha = STATS_WITH_a.test(firstText);
  var startsWithA = STATS_WITH_A.test(firstText);
  var specialField = startsWith1 || startsWitha || startsWithA;
  if ((!currentItem || !currentItem.data.list) && !specialField) return next();
  event.preventDefault();

  if (isEmptyNode(currentItem)) {
    if (getItemDepth(currentItem) > 0) {
      return increaseItemDepth(controller, -1);
    }

    return removeListNode(controller);
  }

  if (!isList(currentItem)) {
    if (selection.isCollapsed && selection.anchor.isAtEndOfNode(currentItem)) {
      if (startsWith1) {
        controller.command(Commands.removeTextByKey, firstNode.key, 0, '1.');
        toggleWrapInList(controller, 'olist', DEFAULT_NUMBER_LIST_ARRAY[0]);
      } else if (startsWitha) {
        controller.command(Commands.removeTextByKey, firstNode.key, 0, 'a.');
        toggleWrapInList(controller, 'olist', DEFAULT_NUMBER_LIST_ARRAY[8]);
      } else if (startsWithA) {
        controller.command(Commands.removeTextByKey, firstNode.key, 0, 'A.');
        toggleWrapInList(controller, 'olist', DEFAULT_NUMBER_LIST_ARRAY[3]);
      }
    } else {
      return next();
    }
  }

  return splitListItem(controller, event.shiftKey);
});
//# sourceMappingURL=onEnter.js.map