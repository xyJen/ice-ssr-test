import { isKeyHotkey } from 'is-hotkey';
import onEnter from "./onEnter";
import onBackspace from "./onBackspace";
import onIncrease from "./onIncrease";
import { toggleWrapInList } from "../commands";
import { DEFAULT_BULLET_LIST_ARRAY, DEFAULT_NUMBER_LIST_ARRAY } from "../../utils/listStyleMapping";
var isBackspaceHotKey = isKeyHotkey('backspace');
var isDeleteHotKey = isKeyHotkey('delete');
var isEnterHotKey = isKeyHotkey('shift?+enter');
var isTabHotKey = isKeyHotkey('shift?+tab');
var isUlHotKey = isKeyHotkey(['mod+shift+7', 'mod+shift+&']);
var isOlHotKey = isKeyHotkey(['mod+shift+8', 'mod+shift+*']);
var isIncreaseHotKey = isKeyHotkey('mod+]');
var isDecreaseHotKey = isKeyHotkey('mod+[');
var isTlHotKey = isKeyHotkey('mod+shift+y');
export default (function (event, controller, next) {
  if (controller.query('isSelectionInTableEdge')) {
    return next();
  }

  if (isEnterHotKey(event)) {
    return onEnter(event, controller, next);
  }

  if (isTabHotKey(event)) {
    var offset = event.shiftKey ? -1 : 1;
    return onIncrease(event, controller, offset, next);
  }

  if (isIncreaseHotKey(event)) {
    return onIncrease(event, controller, 1, next);
  }

  if (isDecreaseHotKey(event)) {
    return onIncrease(event, controller, -1, next);
  }

  if (isBackspaceHotKey(event) || isDeleteHotKey(event)) {
    return onBackspace(event, controller, next);
  }

  if (isUlHotKey(event)) {
    event.preventDefault();
    return toggleWrapInList(controller, 'ulist', DEFAULT_BULLET_LIST_ARRAY[0], true);
  }

  if (isOlHotKey(event)) {
    event.preventDefault();
    return toggleWrapInList(controller, 'olist', DEFAULT_NUMBER_LIST_ARRAY[0], true);
  }

  if (isTlHotKey(event)) {
    event.preventDefault();
    return toggleWrapInList(controller, 'tlist');
  }

  return next();
});
//# sourceMappingURL=onKeyDown.js.map