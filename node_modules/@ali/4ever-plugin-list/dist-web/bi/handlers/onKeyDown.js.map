{"version":3,"sources":["../../../../src/bi/handlers/onKeyDown.ts"],"names":["isKeyHotkey","onEnter","onBackspace","onIncrease","toggleWrapInList","DEFAULT_BULLET_LIST_ARRAY","DEFAULT_NUMBER_LIST_ARRAY","isBackspaceHotKey","isDeleteHotKey","isEnterHotKey","isTabHotKey","isUlHotKey","isOlHotKey","isIncreaseHotKey","isDecreaseHotKey","isTlHotKey","event","controller","next","query","offset","shiftKey","preventDefault"],"mappings":"AACA,SAASA,WAAT,QAA4B,WAA5B;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,SAASC,gBAAT;AACA,SACEC,yBADF,EAEEC,yBAFF;AAKA,IAAMC,iBAAiB,GAAGP,WAAW,CAAC,WAAD,CAArC;AACA,IAAMQ,cAAc,GAAGR,WAAW,CAAC,QAAD,CAAlC;AACA,IAAMS,aAAa,GAAGT,WAAW,CAAC,cAAD,CAAjC;AACA,IAAMU,WAAW,GAAGV,WAAW,CAAC,YAAD,CAA/B;AACA,IAAMW,UAAU,GAAGX,WAAW,CAAC,CAAC,aAAD,EAAgB,aAAhB,CAAD,CAA9B;AACA,IAAMY,UAAU,GAAGZ,WAAW,CAAC,CAAC,aAAD,EAAgB,aAAhB,CAAD,CAA9B;AACA,IAAMa,gBAAgB,GAAGb,WAAW,CAAC,OAAD,CAApC;AACA,IAAMc,gBAAgB,GAAGd,WAAW,CAAC,OAAD,CAApC;AACA,IAAMe,UAAU,GAAGf,WAAW,CAAC,aAAD,CAA9B;AAEA,gBAAe,UAACgB,KAAD,EAAQC,UAAR,EAAgCC,IAAhC,EAAyC;AACtD,MAAID,UAAU,CAACE,KAAX,CAAiB,wBAAjB,CAAJ,EAAgD;AAC9C,WAAOD,IAAI,EAAX;AACD;;AAED,MAAIT,aAAa,CAACO,KAAD,CAAjB,EAA0B;AACxB,WAAOf,OAAO,CAACe,KAAD,EAAQC,UAAR,EAAoBC,IAApB,CAAd;AACD;;AAED,MAAIR,WAAW,CAACM,KAAD,CAAf,EAAwB;AACtB,QAAMI,MAAM,GAAGJ,KAAK,CAACK,QAAN,GAAiB,CAAC,CAAlB,GAAsB,CAArC;AACA,WAAOlB,UAAU,CAACa,KAAD,EAAQC,UAAR,EAAoBG,MAApB,EAA4BF,IAA5B,CAAjB;AACD;;AAED,MAAIL,gBAAgB,CAACG,KAAD,CAApB,EAA6B;AAC3B,WAAOb,UAAU,CAACa,KAAD,EAAQC,UAAR,EAAoB,CAApB,EAAuBC,IAAvB,CAAjB;AACD;;AAED,MAAIJ,gBAAgB,CAACE,KAAD,CAApB,EAA6B;AAC3B,WAAOb,UAAU,CAACa,KAAD,EAAQC,UAAR,EAAoB,CAAC,CAArB,EAAwBC,IAAxB,CAAjB;AACD;;AAED,MAAIX,iBAAiB,CAACS,KAAD,CAAjB,IAA4BR,cAAc,CAACQ,KAAD,CAA9C,EAAuD;AACrD,WAAOd,WAAW,CAACc,KAAD,EAAQC,UAAR,EAAoBC,IAApB,CAAlB;AACD;;AAED,MAAIP,UAAU,CAACK,KAAD,CAAd,EAAuB;AACrBA,IAAAA,KAAK,CAACM,cAAN;AACA,WAAOlB,gBAAgB,CACrBa,UADqB,EAErB,OAFqB,EAGrBZ,yBAAyB,CAAC,CAAD,CAHJ,EAIrB,IAJqB,CAAvB;AAMD;;AAED,MAAIO,UAAU,CAACI,KAAD,CAAd,EAAuB;AACrBA,IAAAA,KAAK,CAACM,cAAN;AACA,WAAOlB,gBAAgB,CACrBa,UADqB,EAErB,OAFqB,EAGrBX,yBAAyB,CAAC,CAAD,CAHJ,EAIrB,IAJqB,CAAvB;AAMD;;AAED,MAAIS,UAAU,CAACC,KAAD,CAAd,EAAuB;AACrBA,IAAAA,KAAK,CAACM,cAAN;AACA,WAAOlB,gBAAgB,CAACa,UAAD,EAAa,OAAb,CAAvB;AACD;;AAED,SAAOC,IAAI,EAAX;AACD,CApDD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { isKeyHotkey } from 'is-hotkey';\nimport onEnter from './onEnter';\nimport onBackspace from './onBackspace';\nimport onIncrease from './onIncrease';\nimport { toggleWrapInList } from '../commands';\nimport {\n  DEFAULT_BULLET_LIST_ARRAY,\n  DEFAULT_NUMBER_LIST_ARRAY,\n} from '../../utils/listStyleMapping';\n\nconst isBackspaceHotKey = isKeyHotkey('backspace');\nconst isDeleteHotKey = isKeyHotkey('delete');\nconst isEnterHotKey = isKeyHotkey('shift?+enter');\nconst isTabHotKey = isKeyHotkey('shift?+tab');\nconst isUlHotKey = isKeyHotkey(['mod+shift+7', 'mod+shift+&']);\nconst isOlHotKey = isKeyHotkey(['mod+shift+8', 'mod+shift+*']);\nconst isIncreaseHotKey = isKeyHotkey('mod+]');\nconst isDecreaseHotKey = isKeyHotkey('mod+[');\nconst isTlHotKey = isKeyHotkey('mod+shift+y');\n\nexport default (event, controller: Controller, next) => {\n  if (controller.query('isSelectionInTableEdge')) {\n    return next();\n  }\n\n  if (isEnterHotKey(event)) {\n    return onEnter(event, controller, next);\n  }\n\n  if (isTabHotKey(event)) {\n    const offset = event.shiftKey ? -1 : 1;\n    return onIncrease(event, controller, offset, next);\n  }\n\n  if (isIncreaseHotKey(event)) {\n    return onIncrease(event, controller, 1, next);\n  }\n\n  if (isDecreaseHotKey(event)) {\n    return onIncrease(event, controller, -1, next);\n  }\n\n  if (isBackspaceHotKey(event) || isDeleteHotKey(event)) {\n    return onBackspace(event, controller, next);\n  }\n\n  if (isUlHotKey(event)) {\n    event.preventDefault();\n    return toggleWrapInList(\n      controller,\n      'ulist',\n      DEFAULT_BULLET_LIST_ARRAY[0],\n      true,\n    );\n  }\n\n  if (isOlHotKey(event)) {\n    event.preventDefault();\n    return toggleWrapInList(\n      controller,\n      'olist',\n      DEFAULT_NUMBER_LIST_ARRAY[0],\n      true,\n    );\n  }\n\n  if (isTlHotKey(event)) {\n    event.preventDefault();\n    return toggleWrapInList(controller, 'tlist');\n  }\n\n  return next();\n};\n"],"file":"onKeyDown.js"}