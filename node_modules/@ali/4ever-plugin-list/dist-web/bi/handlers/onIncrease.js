import { isKeyHotkey } from 'is-hotkey';
import { increaseItemDepth } from "../commands";
import { getCurrentItem, getSelectionInListItem } from "../utils";
var isTabHotKey = isKeyHotkey('tab');
export default (function (event, controller, offset, next) {
  var value = controller.value;
  var selection = value.selection;
  var currentItems = getCurrentItem(controller);
  if (!selection || !currentItems || !getSelectionInListItem(controller)) return next();

  if (isTabHotKey(event)) {
    var firstItem = currentItems[0];
    var isAtStartOfNode = firstItem && selection.anchor.isAtStartOfNode(firstItem);
    if (!isAtStartOfNode && selection.isCollapsed) return next();
  }

  if (selection.isCollapsed) {
    event && event.preventDefault();
    return increaseItemDepth(controller, offset);
  }
  /* 判断选中多行时再批量操作 */


  var blocks = value.document.getLeafBlocksAtRange(selection);

  if (!selection.isCollapsed && blocks.length > 0) {
    event && event.preventDefault();
    return increaseItemDepth(controller, offset);
  }

  return next();
});
//# sourceMappingURL=onIncrease.js.map