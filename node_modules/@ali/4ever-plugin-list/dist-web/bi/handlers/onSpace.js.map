{"version":3,"sources":["../../../../src/bi/handlers/onSpace.ts"],"names":["Block","Commands","toggleList","isConnectPrevClosestList","isConnectNextClosestList","shortcutTypes","getCurrentItem","getListData","getListId","getMatchLevel","getPrevClosestListItem","LOWER_LETTER_REG","UPPER_LETTER_REG","ARABIC_REG","EN_NUM_BRACKET","ZH_NUM_BRACKET","EN_NUM_HALF_BRACKET","ZH_NUM_HALF_BRACKET","EN_LET_HALF_BRACKET","ZH_LET_HALF_BRACKET","NUMBER_DON","DEFAULT_BULLET_LIST_ARRAY","DEFAULT_NUMBER_LIST_ARRAY","mapping","RELATIVE_LEVEL","transformString","getListStyleType","symbol","getListType","chars","isLowerLetter","test","isUpperLetter","isNumAllBracket","isNumHalfBracket","isLetHalfBracket","listType","isMatchClosestList","closestListItem","currentItem","isNumber","listStyleType","data","list","typeObj","level","remainder","relativeLevel","includes","type","format","replace","event","editor","next","value","isBlock","selection","isExpanded","blockquote","query","startBlock","document","startText","getFirstText","startOffset","anchor","offset","undefined","text","slice","types","composing","isNumberDon","listId","matchChars","Number","inputNumber","restart","prevBlock","isOrdered","nextBlock","getNextBlock","key","blockItem","isConnect","find","result","isChecked","preventDefault","command","moveFocusToStartOfNode","del","dispatch","mdType"],"mappings":"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","sourcesContent":["import { Block, Controller, Commands, TextPoint, CangjieInputEvent } from '@ali/4ever-cangjie';\nimport toggleList from '../commands/toggleList';\nimport {\n  isConnectPrevClosestList,\n  isConnectNextClosestList,\n  shortcutTypes,\n  getCurrentItem,\n  getListData,\n  getListId,\n  getMatchLevel,\n  getPrevClosestListItem,\n} from '../utils';\nimport {\n  LOWER_LETTER_REG,\n  UPPER_LETTER_REG,\n  ARABIC_REG,\n  EN_NUM_BRACKET,\n  ZH_NUM_BRACKET,\n  EN_NUM_HALF_BRACKET,\n  ZH_NUM_HALF_BRACKET,\n  EN_LET_HALF_BRACKET,\n  ZH_LET_HALF_BRACKET,\n  NUMBER_DON,\n} from '../regexp';\nimport {\n  DEFAULT_BULLET_LIST_ARRAY,\n  DEFAULT_NUMBER_LIST_ARRAY,\n  mapping,\n} from '../../utils/listStyleMapping';\nimport { RELATIVE_LEVEL } from '../../utils/generateSymbol';\nimport { transformString } from '../../utils/transformNumber';\n\nconst getListStyleType = (symbol: string): string | null => {\n  if (symbol === '*') return DEFAULT_BULLET_LIST_ARRAY[0];\n  if (symbol === '-') return DEFAULT_BULLET_LIST_ARRAY[6];\n  if (symbol === '+') return DEFAULT_BULLET_LIST_ARRAY[7];\n  return null;\n};\n\nconst getListType = (chars) => {\n  const isLowerLetter = LOWER_LETTER_REG.test(chars);\n  const isUpperLetter = UPPER_LETTER_REG.test(chars);\n  const isNumAllBracket = EN_NUM_BRACKET.test(chars) || ZH_NUM_BRACKET.test(chars);\n  const isNumHalfBracket = EN_NUM_HALF_BRACKET.test(chars) || ZH_NUM_HALF_BRACKET.test(chars);\n  const isLetHalfBracket = EN_LET_HALF_BRACKET.test(chars) || ZH_LET_HALF_BRACKET.test(chars);\n  let listType;\n  if (isLowerLetter) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[8];\n  } else if (isUpperLetter) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[3];\n  } else if (isNumAllBracket) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[9];\n  } else if (isNumHalfBracket) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[1];\n  } else if (isLetHalfBracket) {\n    listType = DEFAULT_NUMBER_LIST_ARRAY[10];\n  }\n  return listType;\n};\n\n/**\n * 列表类型是否匹配\n * @description 根据输入字段预判的列表类型跟最近的列表项的类型是否一致\n */\nconst isMatchClosestList = (\n  {\n    isNumber,\n    isLowerLetter,\n    isUpperLetter,\n    isNumAllBracket,\n    isNumHalfBracket,\n    isLetHalfBracket,\n  },\n  closestListItem: Block,\n  currentItem: Block,\n): boolean => {\n  const listStyleType = closestListItem?.data?.list?.listStyleType;\n  const typeObj = mapping[listStyleType];\n  const level = getMatchLevel(currentItem);\n  if (typeObj) {\n    const remainder = level % 3;\n    const relativeLevel = RELATIVE_LEVEL.includes(remainder) ? remainder : 0;\n    const type = typeObj[relativeLevel][0];\n    const format = typeObj[relativeLevel][1].replace(/\\d+/, '');\n    if (\n      (isNumber && type === 'decimal' && format === '%.') ||\n      (isLowerLetter && type === 'lowerLetter' && format === '%.') ||\n      (isUpperLetter && type === 'upperLetter' && format === '%.') ||\n      (isNumAllBracket && type === 'decimal' && format === '(%)') ||\n      (isNumHalfBracket && type === 'decimal' && format === '%)') ||\n      (isLetHalfBracket && type === 'lowerLetter' && format === '%1)')\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default (event: InputEvent | CangjieInputEvent, editor: Controller, next: () => void) => {\n  const { value } = editor;\n  const currentItem = getCurrentItem(editor)[0];\n  if (\n    !Block.isBlock(currentItem) ||\n    value.selection?.isExpanded ||\n    currentItem?.data.list ||\n    currentItem?.data.blockquote ||\n    editor.query('isSelectionInHeading')\n  ) {\n    return next();\n  }\n\n  const { startBlock, selection, document } = value;\n  // 只有在段落开头时，才允许插入列表\n  if (value.startText !== value.startBlock?.getFirstText()) {\n    return next();\n  }\n  const startOffset = (selection?.anchor as TextPoint).offset;\n  const chars =\n    (startOffset !== undefined &&\n      startBlock?.text.slice(0, startOffset).replace(/\\s*/g, '')) ||\n    '';\n  const types = shortcutTypes(chars);\n\n  if (!startBlock || !types || value.composing) return next();\n  const isNumber = ARABIC_REG.test(chars);\n  const isNumberDon = NUMBER_DON.test(chars);\n  const isLowerLetter = LOWER_LETTER_REG.test(chars);\n  const isUpperLetter = UPPER_LETTER_REG.test(chars);\n  const isNumAllBracket = EN_NUM_BRACKET.test(chars) || ZH_NUM_BRACKET.test(chars);\n  const isNumHalfBracket = EN_NUM_HALF_BRACKET.test(chars) || ZH_NUM_HALF_BRACKET.test(chars);\n  const isLetHalfBracket = EN_LET_HALF_BRACKET.test(chars) || ZH_LET_HALF_BRACKET.test(chars);\n  if (chars === '*' || chars === '-' || chars === '+') {\n    const listStyleType = getListStyleType(chars) || undefined;\n    const data = getListData({\n      listId: getListId({ value, listType: listStyleType }),\n      type: 'ul',\n      level: 0,\n      listStyleType,\n    });\n    toggleList(editor, data, 'ulist');\n  } else if (\n    isNumber ||\n    isLowerLetter ||\n    isUpperLetter ||\n    isNumAllBracket ||\n    isNumHalfBracket ||\n    isLetHalfBracket\n  ) {\n    let type = '';\n    if (isUpperLetter || isLowerLetter || isLetHalfBracket) {\n      type = 'letter';\n    }\n    const matchChars = chars.slice(Number(isNumAllBracket), -1);\n    const inputNumber = transformString(matchChars, type);\n    const listId = getListId({ value, restart: inputNumber === 1 });\n    let listType = getListType(chars);\n    if (isNumberDon) {\n      listType = DEFAULT_NUMBER_LIST_ARRAY[11];\n    } else if (isNumber) {\n      listType = DEFAULT_NUMBER_LIST_ARRAY[0];\n    }\n    let data = getListData({\n      listId,\n      type: 'ol',\n      level: 0,\n      listStyleType: listType,\n    });\n    const prevBlock = getPrevClosestListItem(value, currentItem as Block, {\n      isOrdered: true,\n    }) as Block;\n    const nextBlock = document.getNextBlock(currentItem.key) as Block;\n    const closestListItem = [\n      { blockItem: prevBlock, isConnect: isConnectPrevClosestList },\n      { blockItem: nextBlock, isConnect: isConnectNextClosestList },\n    ].find(({ blockItem, isConnect }) => {\n      const result = (\n        blockItem &&\n        Block.isBlock(currentItem) &&\n        isMatchClosestList(\n          {\n            isNumber,\n            isLowerLetter,\n            isUpperLetter,\n            isNumAllBracket,\n            isNumHalfBracket,\n            isLetHalfBracket,\n          },\n          blockItem,\n          currentItem,\n        ) &&\n        isConnect(value, blockItem, inputNumber)\n      );\n      return result;\n    });\n    if (closestListItem) {\n      data = {\n        list: {\n          // @ts-ignore\n          ...closestListItem.blockItem.data.list,\n        },\n      };\n    } else if (inputNumber !== 1) {\n      return next();\n    }\n\n    toggleList(editor, data, 'olist');\n  } else if (chars === '[]') {\n    const data = getListData({\n      listId: getListId({ value }),\n      type: 'tlist',\n      level: 0,\n    });\n    toggleList(editor, data);\n  } else if (chars === '[x]') {\n    const data = getListData({\n      listId: getListId({ value }),\n      type: 'tlist',\n      level: 0,\n    });\n    data.list.isChecked = true;\n    toggleList(editor, data);\n  } else {\n    return next();\n  }\n  event.preventDefault();\n  editor\n    .command(Commands.moveFocusToStartOfNode, startBlock)\n    .command(Commands.del);\n  editor.dispatch('createTriggerMarkdownAction', { mdType: types });\n  return editor;\n};\n"],"file":"onSpace.js"}