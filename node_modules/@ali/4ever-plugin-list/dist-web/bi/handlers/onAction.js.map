{"version":3,"sources":["../../../../src/bi/handlers/onAction.ts"],"names":["Paragraph","SzUtil","CONTINUE_NUMBERING","CLEAR_LIST_SELECTIONS","CLEAR_RANGE_SELECTION","LIST_REMOVE_LIST","LIST_SET_CHECK_STATUS","LIST_SELECT_SYMBOL","LIST_TOGGLE_LIST","LIST_TRANSFORM","RESTART_NUMBERING","SELECT_LIST_SELECTIONS","toggleWrapInList","transform","removeListNode","toggleCheckStatus","COLOR_SET","HEADING_SET","MARK_TOGGLE","clearRangeSelection","clearListSelections","selectListSelections","selectSymbol","setSymbolStyle","adjustSymbolSz","continueNumbering","restartNumbering","onAction","action","controller","next","isHighlight","isActionFactory","isAdjustSz","isSetSz","isSetFonts","type","payload","listType","listStyleType","node","checked","key","listSelections","isSelected","sz","isIncreasingSz","fonts","color","highlight","shd","mark","symbolStyle","heading","isParagraph","TYPE","undefined","fromHeadingType","bold"],"mappings":"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","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { SzUtil } from '@ali/4ever-utils';\nimport {\n  CONTINUE_NUMBERING,\n  CLEAR_LIST_SELECTIONS,\n  CLEAR_RANGE_SELECTION,\n  LIST_REMOVE_LIST,\n  LIST_SET_CHECK_STATUS,\n  LIST_SELECT_SYMBOL,\n  LIST_TOGGLE_LIST,\n  LIST_TRANSFORM,\n  RESTART_NUMBERING,\n  SELECT_LIST_SELECTIONS,\n} from '../actions';\nimport toggleWrapInList from '../commands/toggleWrapInList';\nimport transform from '../commands/transform';\nimport removeListNode from '../commands/removeListNode';\nimport toggleCheckStatus from '../commands/toggleCheckStatus';\nimport { COLOR_SET } from '@ali/4ever-plugin-color';\nimport { HEADING_SET } from '@ali/4ever-plugin-heading';\nimport { MARK_TOGGLE } from '@ali/4ever-plugin-marks';\nimport {\n  clearRangeSelection,\n  clearListSelections,\n  selectListSelections,\n  selectSymbol,\n  setSymbolStyle,\n  adjustSymbolSz,\n} from '../utils';\nimport { continueNumbering, restartNumbering } from '../commands';\n\nexport default function onAction(action, controller: Controller, next) {\n  const isHighlight = controller.isActionFactory('isHighlight');\n  const isAdjustSz = controller.isActionFactory('isAdjustSz');\n  const isSetSz = controller.isActionFactory('isSetSz');\n  const isSetFonts = controller.isActionFactory('isSetFonts');\n\n  const { type, payload } = action;\n  if (type === LIST_TOGGLE_LIST) {\n    const { listType, listStyleType } = payload;\n    return toggleWrapInList(controller, listType, listStyleType);\n  }\n  if (type === LIST_TRANSFORM) {\n    const { listType, listStyleType } = payload;\n    return transform(controller, listType, listStyleType);\n    // return controller.command(transform, listType, listStyleType);\n  }\n  if (type === LIST_REMOVE_LIST) {\n    return removeListNode(controller);\n  }\n  if (type === LIST_SET_CHECK_STATUS) {\n    const { node, checked } = payload;\n    return toggleCheckStatus(controller, node.key, checked);\n  }\n  if (type === LIST_SELECT_SYMBOL) {\n    const { listSelections, isSelected } = payload;\n    return selectSymbol(controller, listSelections, isSelected);\n  }\n  if (type === CLEAR_RANGE_SELECTION) {\n    const { node } = payload;\n    return clearRangeSelection(controller, node);\n  }\n  if (type === CLEAR_LIST_SELECTIONS) {\n    return clearListSelections(controller);\n  }\n  if (type === SELECT_LIST_SELECTIONS) {\n    const { listSelections } = payload;\n    return selectListSelections(controller, listSelections);\n  }\n  if (isSetSz?.(action)) {\n    const { sz } = payload;\n    setSymbolStyle(controller, { sz });\n  }\n  if (isAdjustSz?.(action)) {\n    const { isIncreasingSz } = payload;\n    adjustSymbolSz(controller, isIncreasingSz);\n  }\n  if (isSetFonts?.(action)) {\n    const { fonts } = payload;\n    setSymbolStyle(controller, { fonts });\n  }\n  if (type === COLOR_SET) {\n    const { color } = payload;\n    setSymbolStyle(controller, { color });\n  }\n  if (isHighlight?.(action)) {\n    const { highlight } = action.payload;\n    setSymbolStyle(controller, { shd: highlight });\n  }\n  if (type === MARK_TOGGLE) {\n    const { mark } = payload;\n    const symbolStyle = {};\n    symbolStyle[mark] = true;\n    setSymbolStyle(controller, symbolStyle);\n  }\n  if (type === HEADING_SET) {\n    const { heading } = payload;\n    const isParagraph = heading === Paragraph.TYPE;\n    setSymbolStyle(controller, {\n      // undefined 代表清除\n      sz: isParagraph ? undefined : SzUtil.fromHeadingType(heading),\n      bold: !isParagraph,\n    });\n  }\n  if (type === CONTINUE_NUMBERING) {\n    continueNumbering(controller);\n  }\n  if (type === RESTART_NUMBERING) {\n    restartNumbering(controller);\n  }\n  return next();\n}\n"],"file":"onAction.js"}