{"version":3,"sources":["../../../src/bi/createContextMenu.ts"],"names":["getCurrentItem","restartNumbering","continueNumbering","createContextMenu","contextMenuPlugin","pluginConfig","locale","contextMenu","controller","next","menus","selection","value","isCollapsed","currentItem","listConfig","data","list","isOrdered","push","name","action","key","options","mobile","group","others","concat"],"mappings":"AAIA,SAASA,cAAT;AACA,SAASC,gBAAT,EAA2BC,iBAA3B;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,SAAO,SAASC,iBAAT,CAA2BC,YAA3B,EAAyC;AAC9C,QAAMC,MAAM,GAAGD,YAAY,CAACC,MAAb,IAAuB,EAAtC;AACA,WAAO,SAASC,WAAT,CACLC,UADK,EAELC,IAFK,EAGL;AACA,UAAMC,KAAwB,GAAG,EAAjC;AADA,UAEQC,SAFR,GAEsBH,UAAU,CAACI,KAFjC,CAEQD,SAFR;;AAGA,UAAIA,SAAJ,YAAIA,SAAS,CAAEE,WAAf,EAA4B;AAAA;;AAC1B,YAAMC,WAAW,GAAGd,cAAc,CAACQ,UAAD,CAAd,CAA2B,CAA3B,CAApB;AACA,YAAMO,UAAU,GAAGD,WAAH,yCAAGA,WAAW,CAAEE,IAAhB,qBAAG,kBAAmBC,IAAtC;;AACA,YAAIF,UAAU,IAAIA,UAAU,CAACG,SAA7B,EAAwC;AAAE;AACxCR,UAAAA,KAAK,CAACS,IAAN,CAAW;AACTC,YAAAA,IAAI,EAAEd,MAAM,CAACL,gBADJ;AAEToB,YAAAA,MAAM,EAAEpB,gBAAgB,EAFf;AAGTqB,YAAAA,GAAG,EAAE,wBAHI;AAITC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,KADD;AAEPC,cAAAA,KAAK,EAAE;AAFA;AAJA,WAAX,EAQG;AACDL,YAAAA,IAAI,EAAEd,MAAM,CAACJ,iBADZ;AAEDmB,YAAAA,MAAM,EAAEnB,iBAAiB,EAFxB;AAGDoB,YAAAA,GAAG,EAAE,yBAHJ;AAIDC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,KADD;AAEPC,cAAAA,KAAK,EAAE;AAFA;AAJR,WARH;AAiBD;AACF;;AACD,UAAMC,MAAM,GAAGjB,IAAI,MAAM,EAAzB;AACA,aAAOC,KAAK,CAACiB,MAAN,CAAaD,MAAb,CAAP;AACD,KA/BD;AAgCD,GAlCD;AAmCD","sourcesContent":["import {\n  Controller,\n  ContextMenuItem,\n} from '@ali/4ever-cangjie';\nimport { getCurrentItem } from './utils';\nimport { restartNumbering, continueNumbering } from './actions';\n\nexport default function createContextMenu() {\n  return function contextMenuPlugin(pluginConfig) {\n    const locale = pluginConfig.locale || {};\n    return function contextMenu(\n      controller: Controller,\n      next: () => ContextMenuItem[] | null,\n    ) {\n      const menus: ContextMenuItem[] = [];\n      const { selection } = controller.value;\n      if (selection?.isCollapsed) {\n        const currentItem = getCurrentItem(controller)[0];\n        const listConfig = currentItem?.data?.list;\n        if (listConfig && listConfig.isOrdered) { // 有序列表才有下列选项\n          menus.push({\n            name: locale.restartNumbering,\n            action: restartNumbering(),\n            key: 'list-restart-numbering',\n            options: {\n              mobile: false,\n              group: 2,\n            },\n          }, {\n            name: locale.continueNumbering,\n            action: continueNumbering(),\n            key: 'list-continue-numbering',\n            options: {\n              mobile: false,\n              group: 2,\n            },\n          });\n        }\n      }\n      const others = next() || [];\n      return menus.concat(others);\n    };\n  };\n}\n"],"file":"createContextMenu.js"}