/**
 * @description 当光标在 列表项 2 时,它的子项就是 2、2a、2b、2bi、2c
 *
 *   1. 钉钉文档1
 *   2. 钉钉文档2
 *     a. 钉钉文档2a
 *     b. 钉钉文档2b
 *         i. 钉钉文档2bi
 *     c. 钉钉文档2c
 *   3. 钉钉文档3
 *
 * */
export var getListChildItems = function getListChildItems(controller, currrentItem) {
  var document = controller.value.document;
  var key = currrentItem.key;
  var currentList = currrentItem.data.list; // 传入的可能是 renderNode 中的 node，这里 getNode 一次

  var currrentItemNode = document.getNode(key);
  if (!key || !currentList || !currrentItemNode) return [];
  var childItems = [currrentItem];
  var targetLevel = currentList.level; // 排版下为当前 page

  var root = document.getParent(key) || document;
  var nodesLength = root.nodes.length;
  var curIndex = Math.max(0, root.nodes.indexOf(currrentItemNode));
  var foundSelf;

  for (var i = curIndex; i < nodesLength; i++) {
    var targetNode = root.nodes[i];
    foundSelf = foundSelf || targetNode.key === currrentItem.key;
    if (!foundSelf || targetNode.key === currrentItem.key) continue;
    var listConfig = targetNode.data.list;

    if (!listConfig) {
      // 当前节点不是列表项：终止
      return childItems;
    } else if (listConfig.level > targetLevel) {
      // 仅根据 level 判断，允许不同 listId 的列表项被拖拽
      childItems.push(targetNode);
    } else {
      // 只要不是子节点，直接返回
      return childItems;
    }
  }

  return childItems;
};
//# sourceMappingURL=getListChildItems.js.map