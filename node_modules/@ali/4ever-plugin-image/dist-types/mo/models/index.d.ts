import { Inline, InlineProperties, Data } from '@ali/4ever-cangjie';
import type { MoInterfaces } from '@ali/4ever-cangjie';
export interface ImageData extends Data {
    readonly src?: string;
    readonly width?: number;
    readonly height?: number;
    readonly outline?: {
        readonly width?: number;
        readonly type?: string;
        readonly color?: string;
    };
    readonly rectClip?: {
        readonly right?: number;
        readonly left?: number;
        readonly top?: number;
        readonly bottom?: number;
    };
    readonly rotation?: number;
    readonly radius?: number;
    readonly shadow?: string;
    readonly extraData?: any;
    readonly name?: string;
    readonly size?: number;
    readonly opacity?: number;
    readonly lockRatio?: number;
    readonly wrap?: MoInterfaces.WrapPr.WrapPr;
}
export interface ImageProperties {
    data?: ImageData;
    nodes?: InlineProperties['nodes'];
}
export default class Image extends Inline {
    static TYPE: string;
    static create(properties: Image | ImageProperties | string): Image;
    static isImage(maybeImage: any): maybeImage is Image;
}
