import React from 'react';
import type { Controller } from '@ali/4ever-cangjie';
import { useScrollableContainer, useZoom } from '@ali/4ever-cangjie';
import Image from '../../../mo/models';
import type { ImagePluginConfig } from '../../types';
import ImageManager from '../../imageManager';
import { Status } from '../types';
export interface IImageProps {
    controller: Controller;
    node: Image;
    imageConfig: ImagePluginConfig;
    isMobile?: boolean;
    style?: React.CSSProperties;
    uploadProgress?: number;
    uploadPlaceholder?: string;
    isTransferring?: boolean;
    isInserting?: boolean;
    onLoad?: (src: string) => void;
    onClick?: React.MouseEventHandler;
    onContextMenu?: React.MouseEventHandler;
    onDoubleClick?: React.MouseEventHandler;
    onMouseDown?: React.MouseEventHandler;
    onTouchStart?: React.TouchEventHandler;
    onTouchMove?: React.TouchEventHandler;
    onTouchEnd?: React.TouchEventHandler;
}
export interface IImageInnerProps extends IImageProps {
    imageManager: ImageManager | null;
    isInStickyTableRow: boolean;
    onRef: React.ForwardedRef<HTMLImageElement>;
    scale: ReturnType<typeof useZoom>;
    scrollableContainer: ReturnType<typeof useScrollableContainer>;
}
export interface IImageState {
    renderSrc: string;
    status: Status;
}
declare const ImageComp: React.ForwardRefExoticComponent<IImageProps & React.RefAttributes<HTMLImageElement>>;
export default ImageComp;
