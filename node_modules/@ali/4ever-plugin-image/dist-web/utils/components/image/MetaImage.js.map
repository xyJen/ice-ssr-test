{"version":3,"sources":["../../../../../src/utils/components/image/MetaImage.tsx"],"names":["React","styled","Status","Loading","getReloadSrc","getBorder","isValidSize","ImageBorder","IMAGE_HOVER_BORDER","Img","img","HoverOutline","span","MetaImage","props","style","data","imgSrc","onStatusChange","isMobile","onImgRef","onWrapperRef","disableLoading","forceLoading","restProps","useState","status","setStatus","width","height","imageDataSrc","src","outline","radius","shadow","imgRef","useRef","handleLoad","useCallback","Success","handleError","Error","borderStyle","border","borderRadius","boxShadow","onReload","current","reloadSrc","onRef","elem","isStatic","isUploading","startsWith"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { IMetaImageProps, Status } from './types';\nimport Loading from '../loading';\nimport getReloadSrc from '../../utils/getReloadSrc';\nimport getBorder from '../../utils/getBorder';\nimport { isValidSize } from '../../utils/aslService';\nimport ImageBorder from '../imageBorder';\nimport { IMAGE_HOVER_BORDER } from '../../constants';\n\nconst Img = styled.img`\n  display: inline-block;\n  vertical-align: initial;\n  user-select: none;\n  image-orientation: from-image;\n`;\n\nexport const HoverOutline = styled.span`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  border-color: transparent;\n  transition: border-color 0.3s ease-in-out;\n  pointer-events: none;\n`;\n\nexport const MetaImage: React.FC<IMetaImageProps> = (props) => {\n  const { style, data, imgSrc, onStatusChange, isMobile, onImgRef, onWrapperRef, disableLoading, forceLoading, ...restProps } = props;\n  const [status, setStatus] = React.useState(Status.Loading);\n  const { width, height, src: imageDataSrc, outline, radius, shadow } = data;\n  const imgRef = React.useRef<HTMLImageElement>();\n\n  const handleLoad = React.useCallback(() => {\n    setStatus(Status.Success);\n    onStatusChange(Status.Success);\n  }, [imageDataSrc]);\n\n  const handleError = React.useCallback(() => {\n    setStatus(Status.Error);\n    onStatusChange(Status.Error);\n  }, []);\n\n  const borderStyle = {\n    border: getBorder(outline),\n    borderRadius: radius,\n    boxShadow: shadow,\n  }\n\n  const onReload = () => {\n    if (!imgRef.current) {\n      return;\n    }\n    setStatus(Status.Loading);\n    const reloadSrc = getReloadSrc(imgSrc);\n    imgRef.current.src = reloadSrc;\n  }\n\n  const onRef = React.useCallback((elem) => {\n    imgRef.current = elem;\n    if (typeof onImgRef === 'function') {\n      onImgRef(elem)\n    } else if (onImgRef) {\n      onImgRef.current = elem;\n    }\n  }, []);\n\n  const isStatic = status === Status.Success && !isValidSize(width, height);\n  const isUploading = !imageDataSrc && imgSrc.startsWith('blob:');\n  return (\n    <>\n      <ImageBorder style={borderStyle} onRef={onWrapperRef} isStatic={isStatic}>\n        {\n          imgSrc && \n          <Img\n            style={style}\n            src={imgSrc}\n            data-src={imageDataSrc}\n            data-width={width}\n            data-height={height}\n            data-type=\"image\"\n            data-status={status}\n            onLoad={handleLoad}\n            onError={handleError}\n            ref={onRef}\n            data-testid=\"cangjie-image\"\n            {...restProps}\n          />\n        }\n        {\n          !isUploading && ((!imgSrc) || (status !== Status.Success && !disableLoading)) && (\n            <Loading\n              status={status}\n              src={imageDataSrc}\n              renderSrc={imgSrc}\n              isMobile={isMobile}\n              onReload={onReload}\n              forceLoading={forceLoading}\n              enableBlink={!!imgSrc}\n            />\n          )\n        }\n      </ImageBorder>\n      <HoverOutline\n        className={IMAGE_HOVER_BORDER}\n        style={{\n          borderRadius: radius,\n        }}\n      />\n    </>\n  );\n}\n"],"file":"MetaImage.js"}