{"version":3,"sources":["../../../../../src/utils/components/image/index.tsx"],"names":["React","useScrollableContainer","useZoom","useRowIsSticky","sanitizeUrl","useImageManager","Uploading","ROOT_MARGIN","Image","ImgComp","Status","isNodeInTable","require","getRenderSrcInitVal","node","config","imageManager","src","data","forceRenderDirectly","enableLazyLoad","isImgSrcRegistered","getTransformedURL","ImageInnerComp","props","logFlag","loadStartTime","observer","wrapperRef","createRef","isInTable","startLoadImage","register","then","renderSrc","setState","onStatusChange","status","imageConfig","onLoad","state","configOnError","onError","configOnLoad","Error","error","errorSrc","extraData","Success","load","time","Date","now","Loading","componentDidMount","uploadPlaceholder","isTransferring","isInStickyTableRow","scrollableContainer","controller","onInit","isUploading","disableLazyLoad","current","root","Window","window","document","documentElement","IntersectionObserver","entries","forEach","entry","intersectionRatio","isIntersecting","disconnect","threshold","rootMargin","observe","value","componentDidUpdate","prevProps","prevState","snapshot","prevSrc","preloadImg","decode","componentWillUnmount","render","uploadProgress","onRef","isMobile","isInserting","style","onClick","onDoubleClick","onMouseDown","onContextMenu","onTouchStart","onTouchMove","onTouchEnd","disableNativeDownload","disableStretchMode","protocolAllowList","showUploadPlaceholder","disableTouchCallout","metaStyle","opacity","WebkitTouchCallout","isAutoFit","imgSrc","forceLoading","Component","ImageComp","forwardRef","ref","scale"],"mappings":"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","sourcesContent":["import React from 'react';\nimport type { Controller } from '@ali/4ever-cangjie';\nimport { useScrollableContainer, useZoom } from '@ali/4ever-cangjie';\nimport { useRowIsSticky } from '@ali/4ever-plugin-table';\nimport { sanitizeUrl } from '@ali/4ever-utils';\nimport Image from '../../../mo/models';\nimport type { ImagePluginConfig } from '../../types';\nimport ImageManager from '../../imageManager';\nimport { useImageManager } from '../../hooks';\nimport Uploading from '../uploading';\nimport { ROOT_MARGIN } from './constants';\nimport { Image as ImgComp } from './Image';\nimport { Status } from '../types';\nimport { isNodeInTable } from '../../utils/isNodeInTable';\nrequire('intersection-observer');\n\nexport interface IImageProps {\n  controller: Controller;\n  node: Image;\n  imageConfig: ImagePluginConfig;\n  isMobile?: boolean;\n  style?: React.CSSProperties;\n  uploadProgress?: number;\n  uploadPlaceholder?: string;\n  isTransferring?: boolean;\n  isInserting?: boolean;\n  onLoad?: (src: string) => void;\n  onClick?: React.MouseEventHandler;\n  onContextMenu?: React.MouseEventHandler;\n  onDoubleClick?: React.MouseEventHandler;\n  onMouseDown?: React.MouseEventHandler;\n  onTouchStart?: React.TouchEventHandler;\n  onTouchMove?: React.TouchEventHandler;\n  onTouchEnd?: React.TouchEventHandler;\n}\n\nexport interface IImageInnerProps extends IImageProps {\n  imageManager: ImageManager | null;\n  isInStickyTableRow: boolean;\n  onRef: React.ForwardedRef<HTMLImageElement>;\n  scale: ReturnType<typeof useZoom>;\n  scrollableContainer: ReturnType<typeof useScrollableContainer>;\n}\n\nexport interface IImageState {\n  renderSrc: string; // 实际渲染的图片地址\n  status: Status;\n}\n\nfunction getRenderSrcInitVal (node: Image, config: ImagePluginConfig, imageManager: ImageManager | null) {\n  const { src } = node.data;\n  const { forceRenderDirectly, enableLazyLoad } = config;\n  if (src && typeof forceRenderDirectly === 'function') {\n    return forceRenderDirectly(src, node);\n  }\n  // 没有设置 transformImageURL 且不开启懒加载，就直接渲染图片\n  if (!src || (!imageManager && !enableLazyLoad)) {\n    return src;\n  }\n  if (imageManager && imageManager.isImgSrcRegistered(src)) {\n    return imageManager.getTransformedURL(src);\n  }\n  return '';\n}\n\nclass ImageInnerComp extends React.Component<IImageInnerProps, IImageState> {\n  private logFlag: {\n    init?: boolean;\n    load?: boolean;\n    error?: boolean;\n  } = {};\n  private loadStartTime?: number;\n  private observer: IntersectionObserver | null = null;\n  constructor(props: IImageInnerProps) {\n    super(props);\n    const { imageConfig, imageManager, node } = props;\n    this.state = {\n      renderSrc: getRenderSrcInitVal(node, imageConfig, imageManager),\n      status: Status.Loading,\n    }\n  }\n\n  private wrapperRef = React.createRef<HTMLSpanElement>();\n\n  private isInTable: boolean = false;\n\n  componentDidMount() {\n    const { imageConfig, node, uploadPlaceholder, isTransferring, isInStickyTableRow, scrollableContainer, controller, imageManager } = this.props;\n    const { onInit, enableLazyLoad } = imageConfig;\n    const { src } = node.data;\n    onInit && onInit(node.data.src);\n    const isUploading = !src && typeof uploadPlaceholder === 'string';\n    const disableLazyLoad = isUploading || isTransferring || isInStickyTableRow;\n    if (!disableLazyLoad && enableLazyLoad && this.wrapperRef.current) {\n      const root = (scrollableContainer instanceof Window || scrollableContainer === window.document.documentElement)\n        ? null\n        : scrollableContainer || null;\n      this.observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.intersectionRatio > 0 || entry.isIntersecting) {\n            this.startLoadImage();\n            observer.disconnect();\n          }\n        });\n      }, {\n        threshold: [0],\n        rootMargin: ROOT_MARGIN,\n        root,\n      });\n      this.observer.observe(this.wrapperRef.current);\n    }\n    // 未开启懒加载，需要触发图片转换\n    if (!enableLazyLoad && !this.state.renderSrc) {\n      this.startLoadImage();\n    }\n    this.isInTable = isNodeInTable(node, controller.value.document);\n  }\n\n  componentDidUpdate(prevProps: Readonly<IImageInnerProps>, prevState: Readonly<IImageState>, snapshot?: any): void {\n    const { src: prevSrc } = prevProps.node.data;\n    const { src } = this.props.node.data;\n    if (!prevSrc && src) {\n      const { uploadPlaceholder } = this.props;\n      // 上传\n      if (uploadPlaceholder) {\n        const preloadImg = new window.Image();\n        preloadImg.src = src;\n        if (preloadImg.decode) {\n          preloadImg.decode().then(() => {\n            this.startLoadImage();\n          }).catch(() => {\n            this.startLoadImage();\n          });\n        } else {\n          this.startLoadImage();\n        }\n        return;\n      }\n      // 转存 or 移动端插入图片\n      this.startLoadImage();\n    }\n  }\n\n  componentWillUnmount() {\n    this.observer?.disconnect();\n  }\n\n  startLoadImage = () => {\n    const { imageManager, node } = this.props;\n    if (imageManager) {\n      imageManager?.register(node.data.src, node).then((renderSrc) => {\n        this.setState({\n          renderSrc,\n        });\n      });\n    } else {\n      this.setState({\n        renderSrc: node.data.src,\n      });\n    }\n  }\n\n  onStatusChange = (status: Status) => {\n    const { imageConfig = {}, node, onLoad } = this.props;\n    const { renderSrc } = this.state;\n    const { onError: configOnError, onLoad: configOnLoad } = imageConfig;\n    renderSrc && this.setState({\n      status,\n    });\n    if (status === Status.Error) {\n      if (typeof configOnError === 'function' && !this.logFlag.error) {\n        this.logFlag.error = true;\n        const errorSrc = configOnError(renderSrc, node.data.extraData);\n        if (typeof errorSrc === 'string' && errorSrc) {\n          this.setState({\n            renderSrc: errorSrc,\n          });\n        }\n      }\n      return;\n    }\n    if (status === Status.Success && node.data.src && renderSrc) {\n      if (typeof configOnLoad === 'function' && !this.logFlag.load) {\n        const time = this.loadStartTime ? Date.now() - this.loadStartTime : 0;\n        configOnLoad(renderSrc, time, node.data);\n      }\n      onLoad && onLoad(renderSrc);\n    }\n  }\n\n  render () {\n    const {\n      node,\n      uploadPlaceholder,\n      uploadProgress,\n      onRef,\n      isMobile,\n      imageConfig, \n      isTransferring,\n      isInserting,\n      style,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onContextMenu,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n    } = this.props;\n    const { renderSrc, status } = this.state;\n    const { data } = node;\n    const { disableNativeDownload, disableStretchMode, protocolAllowList, forceRenderDirectly } = imageConfig;\n    const showUploadPlaceholder = !renderSrc && typeof uploadPlaceholder === 'string' && !!uploadPlaceholder;\n    const isUploading = status === Status.Loading && typeof uploadPlaceholder === 'string';\n    const disableTouchCallout = isMobile && disableNativeDownload && disableNativeDownload();\n\n    const metaStyle: React.CSSProperties = {\n      ...style,\n      opacity: isUploading ? 0.2 : 1,\n      WebkitTouchCallout: disableTouchCallout ? 'none' : 'unset',\n    }\n    const isAutoFit = isMobile || !(typeof disableStretchMode === 'function' && disableStretchMode()) || this.isInTable;\n    const imgSrc = showUploadPlaceholder ? uploadPlaceholder : sanitizeUrl(renderSrc, protocolAllowList);\n    // 以下情况不会因为 data.src 为空就渲染图裂，而是加载状态\n    // 1. 转存图片\n    // 2. 移动端插入图片\n    // 3. 上传当前浏览器不支持的图片格式，无法在上传过程预览，但是上传后可通过格式转换渲染出来\n    const forceLoading = !data.src && (isTransferring || isInserting || uploadPlaceholder === '');\n\n    if (!this.loadStartTime && !!renderSrc) {\n      this.loadStartTime = Date.now();\n    }\n    return (\n      <React.Fragment>\n        {\n          <ImgComp\n            data={data}\n            imgSrc={imgSrc}\n            style={metaStyle}\n            onStatusChange={this.onStatusChange}\n            onImgRef={onRef}\n            onWrapperRef={this.wrapperRef}\n            isMobile={isMobile}\n            disableLoading={!!forceRenderDirectly}\n            forceLoading={forceLoading}\n            onClick={onClick}\n            onDoubleClick={onDoubleClick}\n            onMouseDown={onMouseDown}\n            onContextMenu={onContextMenu}\n            onTouchStart={onTouchStart}\n            onTouchMove={onTouchMove}\n            onTouchEnd={onTouchEnd}\n            isAutoFit={isAutoFit}\n            />\n        }\n        {\n          isUploading && <Uploading progress={uploadProgress || 0}/>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nconst ImageComp = React.forwardRef<HTMLImageElement, IImageProps>((props, ref) => {\n  const imageManager = useImageManager();\n  const [isInStickyTableRow] = useRowIsSticky();\n  const scrollableContainer = useScrollableContainer();\n  const scale = useZoom();\n  return (\n    <ImageInnerComp\n      {...props}\n      imageManager={imageManager}\n      isInStickyTableRow={isInStickyTableRow}\n      scrollableContainer={scrollableContainer}\n      scale={scale}\n      onRef={ref}\n    />\n  );\n});\n\nexport default ImageComp;\n\n"],"file":"index.js"}