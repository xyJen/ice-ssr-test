import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { DEFAULT_WIDTH, IMAGE_DATA_WRAPPER_CLASS_NAME, IMAGE_EDIT_BORDER } from "../../constants";
import { isValidSize } from "../../utils/aslService";
import { Status } from "../types";
import { MetaImage } from "./MetaImage";
var Wrapper = /*#__PURE__*/styled.span(["display:inline-block;vertical-align:bottom;&::after{position:absolute;width:100%;height:100%;left:0;top:0;border:transparent;pointer-events:none;content:'';}"]);

var getStyle = function getStyle(data, isAutoFit, status) {
  var imageStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%'
  };
  var wrapperStyle = {
    position: 'relative'
  };

  if (isAutoFit) {
    wrapperStyle.maxWidth = '100%';
  }

  var width = data.width,
      height = data.height;
  var isSizeValid = isValidSize(width, height);

  if (isSizeValid) {
    var proportion = height / width;
    wrapperStyle.width = width;
    wrapperStyle.height = 0;
    wrapperStyle.paddingTop = "calc(100% * " + proportion + ")";
  } else if (status === Status.Success) {
    // 宽高未落库时，不再使用绝对定位，因为无法确定外面的容器的尺寸。
    imageStyle.height = 'auto';
    imageStyle.width = 'auto';
    imageStyle.position = 'static';
    imageStyle.maxWidth = wrapperStyle.maxWidth;
    wrapperStyle.boxSizing = 'border-box';
  } else {
    wrapperStyle.width = DEFAULT_WIDTH;
    wrapperStyle.height = 0;
    wrapperStyle.paddingTop = '100%';
  }

  return {
    wrapperStyle: wrapperStyle,
    imageStyle: imageStyle
  };
};

export var SimpleImage = function SimpleImage(props) {
  var data = props.data,
      isAutoFit = props.isAutoFit,
      onStatusChangeProp = props.onStatusChange,
      styleProp = props.style,
      rest = _objectWithoutPropertiesLoose(props, ["data", "isAutoFit", "onStatusChange", "style"]);

  var _React$useState = React.useState(Status.Loading),
      status = _React$useState[0],
      setStatus = _React$useState[1];

  var _getStyle = getStyle(data, isAutoFit, status),
      wrapperStyle = _getStyle.wrapperStyle,
      imageStyle = _getStyle.imageStyle;

  var onStatusChange = function onStatusChange(status) {
    setStatus(status);
    onStatusChangeProp && onStatusChangeProp(status);
  };

  return /*#__PURE__*/_createElement(Wrapper, {
    style: wrapperStyle,
    className: IMAGE_DATA_WRAPPER_CLASS_NAME + " " + IMAGE_EDIT_BORDER + " cangjie-image-wrapper cangjie-image-simple-wrapper"
  }, /*#__PURE__*/_createElement(MetaImage, _extends({
    data: data,
    onStatusChange: onStatusChange,
    style: _extends({}, styleProp, imageStyle)
  }, rest)));
};
//# sourceMappingURL=SimpleImage.js.map