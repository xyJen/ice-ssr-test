import { calcRotationObj, normalizeAngle } from '@ali/4ever-utils';
import getBorder from "./getBorder";
import { DEFAULT_RADIUS } from "../constants";
export default (function (data, isAutoFit) {
  var rotationObj;
  var _ref = data,
      width = _ref.width,
      height = _ref.height,
      opacity = _ref.opacity,
      outline = _ref.outline,
      _ref$rectClip = _ref.rectClip,
      rectClip = _ref$rectClip === void 0 ? {} : _ref$rectClip,
      _ref$radius = _ref.radius,
      radius = _ref$radius === void 0 ? DEFAULT_RADIUS : _ref$radius;
  var rotation = normalizeAngle((data == null ? void 0 : data.rotation) || 0);
  var border;
  var outlineWidth = 0;

  if (outline && outline.width) {
    border = getBorder(outline);
    outlineWidth = outline.width;
  }

  if (rotation !== 0 && width > 0 && height > 0) {
    rotationObj = calcRotationObj(width, height, rotation);
  }

  var frameStyle = {
    width: width,
    height: height,
    opacity: opacity,
    transform: undefined
  };
  var borderStyle = {
    border: border,
    borderRadius: radius
  };

  if (rotationObj) {
    frameStyle.transform = "translate(" + rotationObj.translateX + "px, " + rotationObj.translateY + "px) rotate(" + rotation + "deg)";
  }

  var rotateStyle = {
    width: rotationObj ? rotationObj.rWidth : width,
    height: rotationObj ? rotationObj.rHeight : height
  };
  var l = rectClip.left || 0;
  var r = rectClip.right || 0;
  var t = rectClip.top || 0;
  var b = rectClip.bottom || 0;
  var imgStyle = {
    left: -l - outlineWidth,
    top: -t - outlineWidth,
    width: typeof width === 'number' ? width + l + r : width,
    height: typeof height === 'number' ? height + t + b : height,
    position: 'absolute',
    // 解决 iPad 上 overflow 不生效的问题
    clipPath: "inset(" + (t + outlineWidth) + "px " + (r + outlineWidth) + "px " + (b + outlineWidth) + "px " + (l + outlineWidth) + "px)",
    WebkitClipPath: "inset(" + (t + outlineWidth) + "px " + (r + outlineWidth) + "px " + (b + outlineWidth) + "px " + (l + outlineWidth) + "px)"
  };

  if (isAutoFit) {
    var proportion = Number((rotateStyle.height / rotateStyle.width).toFixed(5));

    if (!Number.isNaN(proportion) && typeof width === 'number' && typeof height === 'number') {
      var imgWidth = width + l + r;
      var imgHeight = height + t + b;
      imgStyle.left = "calc(100% * " + -l / width + ")";
      imgStyle.top = "calc(100% * " + -t / height + ")";
      imgStyle.width = "calc(100% * " + imgWidth / width + ")";
      imgStyle.height = "calc(100% * " + imgHeight / height + ")";
      var clipPath = "inset(calc(100% * " + t / imgHeight + ") calc(100% * " + r / imgWidth + ") calc(100% * " + b / imgHeight + ") calc(100% * " + l / imgWidth + "))";
      imgStyle.clipPath = clipPath;
      imgStyle.WebkitClipPath = clipPath;

      if (rotationObj) {
        frameStyle.transform = "rotate(" + rotation + "deg)";
        frameStyle.left = "calc(100% * " + rotationObj.translateX / rotateStyle.width + ")";
        frameStyle.top = "calc(100% * " + rotationObj.translateY / rotateStyle.height + ")";
        frameStyle.width = "calc(100% * " + width / rotateStyle.width + ")";
        frameStyle.height = "calc(100% * " + height / rotateStyle.height + ")";
      } else {
        frameStyle.left = 0;
        frameStyle.top = 0;
        frameStyle.width = '100%';
        frameStyle.height = '100%';
      }

      rotateStyle.maxWidth = '100%';
      rotateStyle.paddingTop = "calc(100% * " + proportion + ")";
      rotateStyle.height = 0;
    }
  }

  return {
    rotateStyle: rotateStyle,
    frameStyle: frameStyle,
    imgStyle: imgStyle,
    borderStyle: borderStyle,
    outlineWidth: outlineWidth
  };
});
//# sourceMappingURL=calcComplexImage.js.map