{"version":3,"sources":["../../../../src/utils/utils/base64ToArrayBuffer.ts"],"names":["base64","substr","indexOf","binaryString","window","atob","length","bytes","Uint8Array","i","charCodeAt","buffer"],"mappings":"AAAA,gBAAc,UAACA,MAAD,EAAoB;AAChC,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC,OAAO,IAAP;AAEhCA,EAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,OAAP,CAAe,GAAf,IAAsB,CAApC,CAAT;AACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAArB;AAJgC,MAKxBM,MALwB,GAKbH,YALa,CAKxBG,MALwB;AAMhC,MAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAd;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,IAAI,CAAjC,EAAoC;AAClCF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAWN,YAAY,CAACO,UAAb,CAAwBD,CAAxB,CAAX;AACD;;AACD,SAAOF,KAAK,CAACI,MAAb;AACD,CAXD","sourcesContent":["export default(base64: string) => {\n  if (typeof base64 !== 'string') return null;\n\n  base64 = base64.substr(base64.indexOf(',') + 1);\n  const binaryString = window.atob(base64);\n  const { length } = binaryString;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; i += 1) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n"],"file":"base64ToArrayBuffer.js"}