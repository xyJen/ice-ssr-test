{"version":3,"sources":["../../../../src/utils/utils/calcComplexImage.ts"],"names":["calcRotationObj","normalizeAngle","getBorder","DEFAULT_RADIUS","data","isAutoFit","rotationObj","width","height","opacity","outline","rectClip","radius","rotation","border","outlineWidth","frameStyle","transform","undefined","borderStyle","borderRadius","translateX","translateY","rotateStyle","rWidth","rHeight","l","left","r","right","t","top","b","bottom","imgStyle","position","clipPath","WebkitClipPath","proportion","Number","toFixed","isNaN","imgWidth","imgHeight","maxWidth","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { calcRotationObj, normalizeAngle } from '@ali/4ever-utils';\nimport getBorder from './getBorder';\nimport type { ImageData } from '../../mo/models';\nimport { DEFAULT_RADIUS } from '../constants';\n\nexport default (data: ImageData, isAutoFit?: boolean) => {\n  let rotationObj;\n\n  const { width, height, opacity, outline, rectClip = {}, radius = DEFAULT_RADIUS } = data!;\n  const rotation = normalizeAngle(data?.rotation || 0);\n  let border: string | undefined;\n  let outlineWidth = 0;\n  if (outline && outline.width) {\n    border = getBorder(outline);\n    outlineWidth = outline.width;\n  }\n\n  if (rotation !== 0 && width! > 0 && height! > 0) {\n    rotationObj = calcRotationObj(width, height, rotation);\n  }\n\n  const frameStyle: React.CSSProperties = {\n    width,\n    height,\n    opacity,\n    transform: undefined,\n  };\n\n  const borderStyle: React.CSSProperties = {\n    border,\n    borderRadius: radius,\n  };\n\n  if (rotationObj) {\n    frameStyle.transform = `translate(${rotationObj.translateX}px, ${rotationObj.translateY}px) rotate(${rotation}deg)`;\n  }\n\n  const rotateStyle: { width: number; height: number; maxWidth?: string; paddingTop?: string; } = {\n    width: rotationObj ? rotationObj.rWidth : width,\n    height: rotationObj ? rotationObj.rHeight : height,\n  };\n  const l = rectClip.left || 0;\n  const r = rectClip.right || 0;\n  const t = rectClip.top || 0;\n  const b = rectClip.bottom || 0;\n\n  const imgStyle: React.CSSProperties = {\n    left: -l - outlineWidth,\n    top: -t - outlineWidth,\n    width: typeof width === 'number' ? (width + l + r) : width,\n    height: typeof height === 'number' ? (height + t + b) : height,\n    position: 'absolute',\n    // 解决 iPad 上 overflow 不生效的问题\n    clipPath: `inset(${t + outlineWidth}px ${r + outlineWidth}px ${b + outlineWidth}px ${l + outlineWidth}px)`,\n    WebkitClipPath: `inset(${t + outlineWidth}px ${r + outlineWidth}px ${b + outlineWidth}px ${l + outlineWidth}px)`,\n  };\n\n  if (isAutoFit) {\n    const proportion = Number((rotateStyle.height! / rotateStyle.width!).toFixed(5));\n    if (!Number.isNaN(proportion) && typeof width === 'number' && typeof height === 'number') {\n      const imgWidth = width + l + r;\n      const imgHeight = height + t + b;\n      imgStyle.left = `calc(100% * ${-l / width})`;\n      imgStyle.top = `calc(100% * ${-t / height})`;\n      imgStyle.width = `calc(100% * ${imgWidth / width})`;\n      imgStyle.height = `calc(100% * ${imgHeight / height})`;\n      const clipPath = `inset(calc(100% * ${t / imgHeight}) calc(100% * ${r / imgWidth}) calc(100% * ${b / imgHeight}) calc(100% * ${l / imgWidth}))`;\n      imgStyle.clipPath = clipPath;\n      imgStyle.WebkitClipPath = clipPath;\n\n\n      if (rotationObj) {\n        frameStyle.transform = `rotate(${rotation}deg)`;\n        frameStyle.left = `calc(100% * ${rotationObj.translateX / rotateStyle.width})`;\n        frameStyle.top = `calc(100% * ${rotationObj.translateY / rotateStyle.height})`;\n        frameStyle.width = `calc(100% * ${width / rotateStyle.width})`;\n        frameStyle.height = `calc(100% * ${height / rotateStyle.height})`;\n      } else {\n        frameStyle.left = 0;\n        frameStyle.top = 0;\n        frameStyle.width = '100%';\n        frameStyle.height = '100%';\n      }\n\n      rotateStyle.maxWidth = '100%';\n      rotateStyle.paddingTop = `calc(100% * ${proportion})`;\n      rotateStyle.height = 0;\n    }\n  }\n\n  return {\n    rotateStyle,\n    frameStyle,\n    imgStyle,\n    borderStyle,\n    outlineWidth,\n  };\n};\n"],"file":"calcComplexImage.js"}