{"version":3,"sources":["../../../../src/utils/utils/getImageType.ts"],"names":["ImageTypeEnum","getTypeFromMagicNumber","signature","GIF","JPEG","PNG","WEBP","TIFF","TIF","UNCERTAIN","getImageTypeFromBuffer","buffer","uint","Uint8Array","bytes","forEach","byte","char","toString","slice","push","magicNumber","join","toUpperCase","typeFromMagicNumber","getImageTypeFromBlob","blob","Promise","resolve","subBlob","reader","FileReader","onload","event","fileStart","target","result","type","onerror","readAsArrayBuffer"],"mappings":"AAAA,WAAYA,aAAZ,C,CAUA;;WAVYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AAWZ,SAASC,sBAAT,CAAgCC,SAAhC,EAA2C;AACzC,UAAQA,SAAR;AACE,SAAK,UAAL;AACE,aAAOF,aAAa,CAACG,GAArB;;AACF,SAAK,UAAL;AACA,SAAK,UAAL;AACA,SAAK,UAAL;AACA,SAAK,UAAL;AACE,aAAOH,aAAa,CAACI,IAArB;;AACF,SAAK,UAAL;AACE,aAAOJ,aAAa,CAACK,GAArB;;AACF,SAAK,UAAL;AACE,aAAOL,aAAa,CAACM,IAArB;;AACF,SAAK,UAAL;AACE,aAAON,aAAa,CAACO,IAArB;AAA2B;;AAC7B,SAAK,UAAL;AACE,aAAOP,aAAa,CAACQ,GAArB;AAA0B;;AAC5B;AACE,aAAOR,aAAa,CAACS,SAArB;AAjBJ;AAmBD;;AAED,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,MAAD,EAAyB;AAC7D,MAAMC,IAAI,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAb;AACA,MAAMG,KAAe,GAAG,EAAxB;AACAF,EAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,KAAD,EAAU;AACrB;AACA,QAAMC,KAAI,GAAG,OAAKD,KAAI,CAACE,QAAL,CAAc,EAAd,CAAL,EAA0BC,KAA1B,CAAgC,CAAC,CAAjC,CAAb;;AACAL,IAAAA,KAAK,CAACM,IAAN,CAAWH,KAAX;AACD,GAJD;AAKA,MAAMI,WAAW,GAAGP,KAAK,CAACQ,IAAN,CAAW,EAAX,EAAeC,WAAf,EAApB;AACA,MAAMC,mBAAmB,GAAGvB,sBAAsB,CAACoB,WAAD,CAAlD;AACA,SAAOG,mBAAP;AACD,CAXM;AAaP,OAAO,IAAMC,oBAA4D,GAAG,SAA/DA,oBAA+D,CAACC,IAAD,EAAU;AACpF,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,QAAMC,OAAO,GAAGH,IAAI,CAACP,KAAL,CAAW,CAAX,EAAc,CAAd,CAAhB;AACA,QAAMW,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,KAAD,EAAW;AACzB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAcC,MAAhC;AACA,UAAMC,IAAI,GAAG3B,sBAAsB,CAACwB,SAAD,CAAnC;AACAN,MAAAA,OAAO,CAACS,IAAD,CAAP;AACD,KAJD;;AAKAP,IAAAA,MAAM,CAACQ,OAAP,GAAiB,YAAM;AACrBV,MAAAA,OAAO,CAAC5B,aAAa,CAACS,SAAf,CAAP;AACD,KAFD;;AAGAqB,IAAAA,MAAM,CAACS,iBAAP,CAAyBV,OAAzB;AACD,GAZM,CAAP;AAaD,CAdM","sourcesContent":["export enum ImageTypeEnum {\n  GIF = 'gif',\n  JPEG = 'jpeg',\n  PNG = 'png',\n  WEBP = 'webp',\n  TIFF = 'tiff',\n  TIF = 'tif',\n  SVG = 'svg',\n  UNCERTAIN = 'uncertain_type',\n}\n// (List_of_file_signatures)[https://en.wikipedia.org/wiki/List_of_file_signatures]\nfunction getTypeFromMagicNumber(signature) {\n  switch (signature) {\n    case '47494638':\n      return ImageTypeEnum.GIF;\n    case 'FFD8FFDB':\n    case 'FFD8FFE0':\n    case 'FFD8FFE1':\n    case 'FFD8FFEE':\n      return ImageTypeEnum.JPEG;\n    case '89504E47':\n      return ImageTypeEnum.PNG;\n    case '52494646':\n      return ImageTypeEnum.WEBP;\n    case '4D4D002A':\n      return ImageTypeEnum.TIFF; // // TIFF, big-endian type\n    case '49492A00':\n      return ImageTypeEnum.TIF; // TIFF, little-endian type\n    default:\n      return ImageTypeEnum.UNCERTAIN;\n  }\n}\n\nexport const getImageTypeFromBuffer = (buffer: ArrayBuffer) => {\n  const uint = new Uint8Array(buffer);\n  const bytes: string[] = [];\n  uint.forEach((byte) => {\n    // byte = 0 ~ 15 时，其十六进制数前需补0\n    const char = (`0${byte.toString(16)}`).slice(-2);\n    bytes.push(char);\n  });\n  const magicNumber = bytes.join('').toUpperCase();\n  const typeFromMagicNumber = getTypeFromMagicNumber(magicNumber);\n  return typeFromMagicNumber;\n};\n\nexport const getImageTypeFromBlob: (blob: Blob) => Promise<ImageTypeEnum> = (blob) => {\n  return new Promise((resolve) => {\n    const subBlob = blob.slice(0, 4);\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const fileStart = event.target!.result as ArrayBuffer;\n      const type = getImageTypeFromBuffer(fileStart);\n      resolve(type);\n    };\n    reader.onerror = () => {\n      resolve(ImageTypeEnum.UNCERTAIN);\n    };\n    reader.readAsArrayBuffer(subBlob);\n  });\n};\n"],"file":"getImageType.js"}