import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import { getTagName, isEmojiClsName, paragraphTags } from '@ali/4ever-utils';
import { pick } from 'lodash-es';
import { createEmptyText } from '@ali/4ever-cangjie';
export default {
  name: 'img',
  onOpenTag: function onOpenTag(state, name, attrs) {
    // 防止误解析来自 IM 的表情
    if (name !== 'img' || isEmojiClsName(attrs == null ? void 0 : attrs["class"])) return false;

    var attrStyle = attrs.style,
        style = attrs.styleObj,
        attrWidth = attrs.width,
        attrHeight = attrs.height,
        dataWidth = attrs['data-width'],
        dataHeight = attrs['data-height'],
        bambooSrc = attrs['data-4ever-bamboo-src'],
        restAttrs = _objectWithoutPropertiesLoose(attrs, ["style", "styleObj", "width", "height", "data-width", "data-height", "data-4ever-bamboo-src"]);

    var styleWidth = style.width,
        styleHeight = style.height; // 宽度取值优先级：dataWidth(存在 boambooSrc 时) > styleWidth > attrWidth
    // 高度同理

    var isBamboo = !!bambooSrc;
    var width = isBamboo && dataWidth || styleWidth || attrWidth;
    var height = isBamboo && dataHeight || styleHeight || attrHeight;

    var rawAttrs = _extends({}, pick(restAttrs, ['width', 'height', 'src', 'style', 'title', 'alt']), {
      width: parseInt(width, 10),
      height: parseInt(height, 10),
      src: bambooSrc || attrs.src || ''
    });

    if (style.opacity) {
      rawAttrs.opacity = +style.opacity;
    }

    var img = ['img', rawAttrs, createEmptyText()];
    state.push(img);
    return true;
  },
  onCloseTag: function onCloseTag(state, name, attrs) {
    if (name !== 'img' || isEmojiClsName(attrs == null ? void 0 : attrs["class"])) return false;
    var img = state.pop();
    var parent = state.peek();
    var parentTagName = getTagName(parent);

    if (!paragraphTags[parentTagName] && parentTagName !== 'a') {
      state.append(['p', createEmptyText(), img, createEmptyText()]);
    } else {
      state.append(img);
    }

    return true;
  }
};
//# sourceMappingURL=htmlToJsonML.js.map