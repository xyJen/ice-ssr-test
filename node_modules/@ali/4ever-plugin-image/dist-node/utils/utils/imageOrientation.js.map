{"version":3,"sources":["../../../../src/utils/utils/imageOrientation.ts"],"names":["isMobileSafari","test","navigator","userAgent","isNativeSupport","document","createElement","style","Orientations","orientationToAngle","orientation","String","getStringFromCharCode","dataView","start","length","str","i","fromCharCode","getUint8","getOrientation","buffer","DataView","byteLength","exifIDCode","tiffOffset","firstIFDOffset","littleEndian","endianness","app1Start","ifdStart","offset","getUint16","getUint32"],"mappings":"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","sourcesContent":["export function isMobileSafari() {\n  return /(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent);\n}\n\nexport function isNativeSupport() {\n  return (\n    isMobileSafari() ||\n    \"imageOrientation\" in document.createElement(\"image\").style\n  );\n}\n\nexport type OrientationType = 1 | 3 | 6 | 8;\n\nexport const Orientations: { [name: string]: number } = {\n  [\"1\"]: 0,\n  [\"3\"]: 180,\n  [\"6\"]: 90,\n  [\"8\"]: -90\n};\n\nexport function orientationToAngle(orientation: OrientationType) {\n  return Orientations[String(orientation)] || 0;\n}\n\nexport function getStringFromCharCode(\n  dataView: DataView,\n  start: number,\n  length: number\n) {\n  let str = \"\",\n    i;\n  for (i = start, length += start; i < length; i++) {\n    str += String.fromCharCode(dataView.getUint8(i));\n  }\n  return str;\n}\n\nexport function getOrientation(buffer: ArrayBuffer): OrientationType {\n  if (isNativeSupport()) {\n    return 1;\n  }\n  let dataView = new DataView(buffer);\n  let length = dataView.byteLength;\n  let orientation;\n  let exifIDCode;\n  let tiffOffset;\n  let firstIFDOffset;\n  let littleEndian;\n  let endianness;\n  let app1Start;\n  let ifdStart;\n  let offset;\n  let i;\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xff && dataView.getUint8(1) === 0xd8) {\n    offset = 2;\n    while (offset < length) {\n      if (\n        dataView.getUint8(offset) === 0xff &&\n        dataView.getUint8(offset + 1) === 0xe1\n      ) {\n        app1Start = offset;\n        break;\n      }\n      offset++;\n    }\n  }\n  if (app1Start) {\n    exifIDCode = app1Start + 4;\n    tiffOffset = app1Start + 10;\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === \"Exif\") {\n      endianness = dataView.getUint16(tiffOffset);\n      littleEndian = endianness === 0x4949;\n      if (littleEndian || endianness === 0x4d4d /* bigEndian */) {\n        if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002a) {\n          firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n          if (firstIFDOffset >= 0x00000008) {\n            ifdStart = tiffOffset + firstIFDOffset;\n          }\n        }\n      }\n    }\n  }\n  if (ifdStart) {\n    length = dataView.getUint16(ifdStart, littleEndian);\n    for (i = 0; i < length; i++) {\n      offset = ifdStart + i * 12 + 2;\n      if (\n        dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */\n      ) {\n        // 8 is the offset of the current tag's value\n        offset += 8;\n        // Get the original orientation value\n        orientation = dataView.getUint16(offset, littleEndian);\n        break;\n      }\n    }\n  }\n  return orientation as OrientationType;\n}\n"],"file":"imageOrientation.js"}