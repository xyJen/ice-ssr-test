"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMobileSafari = isMobileSafari;
exports.isNativeSupport = isNativeSupport;
exports.orientationToAngle = orientationToAngle;
exports.getStringFromCharCode = getStringFromCharCode;
exports.getOrientation = getOrientation;
exports.Orientations = void 0;

function isMobileSafari() {
  return /(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent);
}

function isNativeSupport() {
  return isMobileSafari() || "imageOrientation" in document.createElement("image").style;
}

const Orientations = {
  ["1"]: 0,
  ["3"]: 180,
  ["6"]: 90,
  ["8"]: -90
};
exports.Orientations = Orientations;

function orientationToAngle(orientation) {
  return Orientations[String(orientation)] || 0;
}

function getStringFromCharCode(dataView, start, length) {
  let str = "",
      i;

  for (i = start, length += start; i < length; i++) {
    str += String.fromCharCode(dataView.getUint8(i));
  }

  return str;
}

function getOrientation(buffer) {
  if (isNativeSupport()) {
    return 1;
  }

  let dataView = new DataView(buffer);
  let length = dataView.byteLength;
  let orientation;
  let exifIDCode;
  let tiffOffset;
  let firstIFDOffset;
  let littleEndian;
  let endianness;
  let app1Start;
  let ifdStart;
  let offset;
  let i; // Only handle JPEG image (start by 0xFFD8)

  if (dataView.getUint8(0) === 0xff && dataView.getUint8(1) === 0xd8) {
    offset = 2;

    while (offset < length) {
      if (dataView.getUint8(offset) === 0xff && dataView.getUint8(offset + 1) === 0xe1) {
        app1Start = offset;
        break;
      }

      offset++;
    }
  }

  if (app1Start) {
    exifIDCode = app1Start + 4;
    tiffOffset = app1Start + 10;

    if (getStringFromCharCode(dataView, exifIDCode, 4) === "Exif") {
      endianness = dataView.getUint16(tiffOffset);
      littleEndian = endianness === 0x4949;

      if (littleEndian || endianness === 0x4d4d
      /* bigEndian */
      ) {
          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002a) {
            firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);

            if (firstIFDOffset >= 0x00000008) {
              ifdStart = tiffOffset + firstIFDOffset;
            }
          }
        }
    }
  }

  if (ifdStart) {
    length = dataView.getUint16(ifdStart, littleEndian);

    for (i = 0; i < length; i++) {
      offset = ifdStart + i * 12 + 2;

      if (dataView.getUint16(offset, littleEndian) === 0x0112
      /* Orientation */
      ) {
          // 8 is the offset of the current tag's value
          offset += 8; // Get the original orientation value

          orientation = dataView.getUint16(offset, littleEndian);
          break;
        }
    }
  }

  return orientation;
}
//# sourceMappingURL=imageOrientation.js.map