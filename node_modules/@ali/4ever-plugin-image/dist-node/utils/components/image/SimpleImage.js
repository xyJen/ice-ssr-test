"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleImage = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("../../constants");

var _aslService = require("../../utils/aslService");

var _types = require("../types");

var _MetaImage = require("./MetaImage");

const _createElement = /*#__PURE__*/_react.default.createElement;

const Wrapper = /*#__PURE__*/_styledComponents.default.span(["display:inline-block;vertical-align:bottom;&::after{position:absolute;width:100%;height:100%;left:0;top:0;border:transparent;pointer-events:none;content:'';}"]);

const getStyle = (data, isAutoFit, status) => {
  const imageStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%'
  };
  const wrapperStyle = {
    position: 'relative'
  };

  if (isAutoFit) {
    wrapperStyle.maxWidth = '100%';
  }

  const {
    width,
    height
  } = data;
  const isSizeValid = (0, _aslService.isValidSize)(width, height);

  if (isSizeValid) {
    const proportion = height / width;
    wrapperStyle.width = width;
    wrapperStyle.height = 0;
    wrapperStyle.paddingTop = `calc(100% * ${proportion})`;
  } else if (status === _types.Status.Success) {
    // 宽高未落库时，不再使用绝对定位，因为无法确定外面的容器的尺寸。
    imageStyle.height = 'auto';
    imageStyle.width = 'auto';
    imageStyle.position = 'static';
    imageStyle.maxWidth = wrapperStyle.maxWidth;
    wrapperStyle.boxSizing = 'border-box';
  } else {
    wrapperStyle.width = _constants.DEFAULT_WIDTH;
    wrapperStyle.height = 0;
    wrapperStyle.paddingTop = '100%';
  }

  return {
    wrapperStyle,
    imageStyle
  };
};

const SimpleImage = props => {
  const {
    data,
    isAutoFit,
    onStatusChange: onStatusChangeProp,
    style: styleProp,
    ...rest
  } = props;

  const [status, setStatus] = _react.default.useState(_types.Status.Loading);

  const {
    wrapperStyle,
    imageStyle
  } = getStyle(data, isAutoFit, status);

  const onStatusChange = status => {
    setStatus(status);
    onStatusChangeProp && onStatusChangeProp(status);
  };

  return /*#__PURE__*/_createElement(Wrapper, {
    style: wrapperStyle,
    className: `${_constants.IMAGE_DATA_WRAPPER_CLASS_NAME} ${_constants.IMAGE_EDIT_BORDER} cangjie-image-wrapper cangjie-image-simple-wrapper`
  }, /*#__PURE__*/_createElement(_MetaImage.MetaImage, (0, _extends2.default)({
    data: data,
    onStatusChange: onStatusChange,
    style: { ...styleProp,
      ...imageStyle
    }
  }, rest)));
};

exports.SimpleImage = SimpleImage;
//# sourceMappingURL=SimpleImage.js.map