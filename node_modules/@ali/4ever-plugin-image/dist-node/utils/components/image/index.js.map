{"version":3,"sources":["../../../../../src/utils/components/image/index.tsx"],"names":["require","getRenderSrcInitVal","node","config","imageManager","src","data","forceRenderDirectly","enableLazyLoad","isImgSrcRegistered","getTransformedURL","ImageInnerComp","React","Component","constructor","props","logFlag","loadStartTime","observer","wrapperRef","createRef","isInTable","startLoadImage","register","then","renderSrc","setState","onStatusChange","status","imageConfig","onLoad","state","onError","configOnError","configOnLoad","Status","Error","error","errorSrc","extraData","Success","load","time","Date","now","Loading","componentDidMount","uploadPlaceholder","isTransferring","isInStickyTableRow","scrollableContainer","controller","onInit","isUploading","disableLazyLoad","current","root","Window","window","document","documentElement","IntersectionObserver","entries","forEach","entry","intersectionRatio","isIntersecting","disconnect","threshold","rootMargin","ROOT_MARGIN","observe","value","componentDidUpdate","prevProps","prevState","snapshot","prevSrc","preloadImg","Image","decode","catch","componentWillUnmount","render","uploadProgress","onRef","isMobile","isInserting","style","onClick","onDoubleClick","onMouseDown","onContextMenu","onTouchStart","onTouchMove","onTouchEnd","disableNativeDownload","disableStretchMode","protocolAllowList","showUploadPlaceholder","disableTouchCallout","metaStyle","opacity","WebkitTouchCallout","isAutoFit","imgSrc","forceLoading","ImageComp","forwardRef","ref","scale"],"mappings":"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","sourcesContent":["import React from 'react';\nimport type { Controller } from '@ali/4ever-cangjie';\nimport { useScrollableContainer, useZoom } from '@ali/4ever-cangjie';\nimport { useRowIsSticky } from '@ali/4ever-plugin-table';\nimport { sanitizeUrl } from '@ali/4ever-utils';\nimport Image from '../../../mo/models';\nimport type { ImagePluginConfig } from '../../types';\nimport ImageManager from '../../imageManager';\nimport { useImageManager } from '../../hooks';\nimport Uploading from '../uploading';\nimport { ROOT_MARGIN } from './constants';\nimport { Image as ImgComp } from './Image';\nimport { Status } from '../types';\nimport { isNodeInTable } from '../../utils/isNodeInTable';\nrequire('intersection-observer');\n\nexport interface IImageProps {\n  controller: Controller;\n  node: Image;\n  imageConfig: ImagePluginConfig;\n  isMobile?: boolean;\n  style?: React.CSSProperties;\n  uploadProgress?: number;\n  uploadPlaceholder?: string;\n  isTransferring?: boolean;\n  isInserting?: boolean;\n  onLoad?: (src: string) => void;\n  onClick?: React.MouseEventHandler;\n  onContextMenu?: React.MouseEventHandler;\n  onDoubleClick?: React.MouseEventHandler;\n  onMouseDown?: React.MouseEventHandler;\n  onTouchStart?: React.TouchEventHandler;\n  onTouchMove?: React.TouchEventHandler;\n  onTouchEnd?: React.TouchEventHandler;\n}\n\nexport interface IImageInnerProps extends IImageProps {\n  imageManager: ImageManager | null;\n  isInStickyTableRow: boolean;\n  onRef: React.ForwardedRef<HTMLImageElement>;\n  scale: ReturnType<typeof useZoom>;\n  scrollableContainer: ReturnType<typeof useScrollableContainer>;\n}\n\nexport interface IImageState {\n  renderSrc: string; // 实际渲染的图片地址\n  status: Status;\n}\n\nfunction getRenderSrcInitVal (node: Image, config: ImagePluginConfig, imageManager: ImageManager | null) {\n  const { src } = node.data;\n  const { forceRenderDirectly, enableLazyLoad } = config;\n  if (src && typeof forceRenderDirectly === 'function') {\n    return forceRenderDirectly(src, node);\n  }\n  // 没有设置 transformImageURL 且不开启懒加载，就直接渲染图片\n  if (!src || (!imageManager && !enableLazyLoad)) {\n    return src;\n  }\n  if (imageManager && imageManager.isImgSrcRegistered(src)) {\n    return imageManager.getTransformedURL(src);\n  }\n  return '';\n}\n\nclass ImageInnerComp extends React.Component<IImageInnerProps, IImageState> {\n  private logFlag: {\n    init?: boolean;\n    load?: boolean;\n    error?: boolean;\n  } = {};\n  private loadStartTime?: number;\n  private observer: IntersectionObserver | null = null;\n  constructor(props: IImageInnerProps) {\n    super(props);\n    const { imageConfig, imageManager, node } = props;\n    this.state = {\n      renderSrc: getRenderSrcInitVal(node, imageConfig, imageManager),\n      status: Status.Loading,\n    }\n  }\n\n  private wrapperRef = React.createRef<HTMLSpanElement>();\n\n  private isInTable: boolean = false;\n\n  componentDidMount() {\n    const { imageConfig, node, uploadPlaceholder, isTransferring, isInStickyTableRow, scrollableContainer, controller, imageManager } = this.props;\n    const { onInit, enableLazyLoad } = imageConfig;\n    const { src } = node.data;\n    onInit && onInit(node.data.src);\n    const isUploading = !src && typeof uploadPlaceholder === 'string';\n    const disableLazyLoad = isUploading || isTransferring || isInStickyTableRow;\n    if (!disableLazyLoad && enableLazyLoad && this.wrapperRef.current) {\n      const root = (scrollableContainer instanceof Window || scrollableContainer === window.document.documentElement)\n        ? null\n        : scrollableContainer || null;\n      this.observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.intersectionRatio > 0 || entry.isIntersecting) {\n            this.startLoadImage();\n            observer.disconnect();\n          }\n        });\n      }, {\n        threshold: [0],\n        rootMargin: ROOT_MARGIN,\n        root,\n      });\n      this.observer.observe(this.wrapperRef.current);\n    }\n    // 未开启懒加载，需要触发图片转换\n    if (!enableLazyLoad && !this.state.renderSrc) {\n      this.startLoadImage();\n    }\n    this.isInTable = isNodeInTable(node, controller.value.document);\n  }\n\n  componentDidUpdate(prevProps: Readonly<IImageInnerProps>, prevState: Readonly<IImageState>, snapshot?: any): void {\n    const { src: prevSrc } = prevProps.node.data;\n    const { src } = this.props.node.data;\n    if (!prevSrc && src) {\n      const { uploadPlaceholder } = this.props;\n      // 上传\n      if (uploadPlaceholder) {\n        const preloadImg = new window.Image();\n        preloadImg.src = src;\n        if (preloadImg.decode) {\n          preloadImg.decode().then(() => {\n            this.startLoadImage();\n          }).catch(() => {\n            this.startLoadImage();\n          });\n        } else {\n          this.startLoadImage();\n        }\n        return;\n      }\n      // 转存 or 移动端插入图片\n      this.startLoadImage();\n    }\n  }\n\n  componentWillUnmount() {\n    this.observer?.disconnect();\n  }\n\n  startLoadImage = () => {\n    const { imageManager, node } = this.props;\n    if (imageManager) {\n      imageManager?.register(node.data.src, node).then((renderSrc) => {\n        this.setState({\n          renderSrc,\n        });\n      });\n    } else {\n      this.setState({\n        renderSrc: node.data.src,\n      });\n    }\n  }\n\n  onStatusChange = (status: Status) => {\n    const { imageConfig = {}, node, onLoad } = this.props;\n    const { renderSrc } = this.state;\n    const { onError: configOnError, onLoad: configOnLoad } = imageConfig;\n    renderSrc && this.setState({\n      status,\n    });\n    if (status === Status.Error) {\n      if (typeof configOnError === 'function' && !this.logFlag.error) {\n        this.logFlag.error = true;\n        const errorSrc = configOnError(renderSrc, node.data.extraData);\n        if (typeof errorSrc === 'string' && errorSrc) {\n          this.setState({\n            renderSrc: errorSrc,\n          });\n        }\n      }\n      return;\n    }\n    if (status === Status.Success && node.data.src && renderSrc) {\n      if (typeof configOnLoad === 'function' && !this.logFlag.load) {\n        const time = this.loadStartTime ? Date.now() - this.loadStartTime : 0;\n        configOnLoad(renderSrc, time, node.data);\n      }\n      onLoad && onLoad(renderSrc);\n    }\n  }\n\n  render () {\n    const {\n      node,\n      uploadPlaceholder,\n      uploadProgress,\n      onRef,\n      isMobile,\n      imageConfig, \n      isTransferring,\n      isInserting,\n      style,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onContextMenu,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n    } = this.props;\n    const { renderSrc, status } = this.state;\n    const { data } = node;\n    const { disableNativeDownload, disableStretchMode, protocolAllowList, forceRenderDirectly } = imageConfig;\n    const showUploadPlaceholder = !renderSrc && typeof uploadPlaceholder === 'string' && !!uploadPlaceholder;\n    const isUploading = status === Status.Loading && typeof uploadPlaceholder === 'string';\n    const disableTouchCallout = isMobile && disableNativeDownload && disableNativeDownload();\n\n    const metaStyle: React.CSSProperties = {\n      ...style,\n      opacity: isUploading ? 0.2 : 1,\n      WebkitTouchCallout: disableTouchCallout ? 'none' : 'unset',\n    }\n    const isAutoFit = isMobile || !(typeof disableStretchMode === 'function' && disableStretchMode()) || this.isInTable;\n    const imgSrc = showUploadPlaceholder ? uploadPlaceholder : sanitizeUrl(renderSrc, protocolAllowList);\n    // 以下情况不会因为 data.src 为空就渲染图裂，而是加载状态\n    // 1. 转存图片\n    // 2. 移动端插入图片\n    // 3. 上传当前浏览器不支持的图片格式，无法在上传过程预览，但是上传后可通过格式转换渲染出来\n    const forceLoading = !data.src && (isTransferring || isInserting || uploadPlaceholder === '');\n\n    if (!this.loadStartTime && !!renderSrc) {\n      this.loadStartTime = Date.now();\n    }\n    return (\n      <React.Fragment>\n        {\n          <ImgComp\n            data={data}\n            imgSrc={imgSrc}\n            style={metaStyle}\n            onStatusChange={this.onStatusChange}\n            onImgRef={onRef}\n            onWrapperRef={this.wrapperRef}\n            isMobile={isMobile}\n            disableLoading={!!forceRenderDirectly}\n            forceLoading={forceLoading}\n            onClick={onClick}\n            onDoubleClick={onDoubleClick}\n            onMouseDown={onMouseDown}\n            onContextMenu={onContextMenu}\n            onTouchStart={onTouchStart}\n            onTouchMove={onTouchMove}\n            onTouchEnd={onTouchEnd}\n            isAutoFit={isAutoFit}\n            />\n        }\n        {\n          isUploading && <Uploading progress={uploadProgress || 0}/>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nconst ImageComp = React.forwardRef<HTMLImageElement, IImageProps>((props, ref) => {\n  const imageManager = useImageManager();\n  const [isInStickyTableRow] = useRowIsSticky();\n  const scrollableContainer = useScrollableContainer();\n  const scale = useZoom();\n  return (\n    <ImageInnerComp\n      {...props}\n      imageManager={imageManager}\n      isInStickyTableRow={isInStickyTableRow}\n      scrollableContainer={scrollableContainer}\n      scale={scale}\n      onRef={ref}\n    />\n  );\n});\n\nexport default ImageComp;\n\n"],"file":"index.js"}