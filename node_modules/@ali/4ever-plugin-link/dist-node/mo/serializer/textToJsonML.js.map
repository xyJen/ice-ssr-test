{"version":3,"sources":["../../../../src/mo/serializer/textToJsonML.ts"],"names":["linkify","name","match","line","convert","matches","children","lastIndex","forEach","index","push","substring","href","url","length"],"mappings":";;;;;;;AAAA;;AACA;;AAQA,MAAMA,OAAO,GAAG,+BAAhB;eAEe;AACbC,EAAAA,IAAI,EAAE,MADO;AAGbC,EAAAA,KAAK,EAAGC,IAAD,IAA2B;AAChC,WAAO,CAAC,CAAC,4BAAYH,OAAZ,EAAqBG,IAArB,CAAT;AACD,GALY;AAObC,EAAAA,OAAO,EAAGD,IAAD,IAA4B;AACnC,UAAME,OAAkB,GAAG,4BAAYL,OAAZ,EAAqBG,IAArB,CAA3B;AACA,UAAMG,QAAkB,GAAG,EAA3B;AACA,QAAIC,SAAS,GAAG,CAAhB;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAgBN,KAAK,IAAI;AACvB,UAAIA,KAAK,CAACO,KAAN,GAAcF,SAAlB,EAA6B;AAC3BD,QAAAA,QAAQ,CAACI,IAAT,CACE,uCAAqBP,IAAI,CAACQ,SAAL,CAAeJ,SAAf,EAA0BL,KAAK,CAACO,KAAhC,CAArB,CADF;AAGD;;AACD,UAAIP,KAAK,CAACO,KAAN,KAAgB,CAApB,EAAuB;AACrBH,QAAAA,QAAQ,CAACI,IAAT,CAAc,uCAAqB,EAArB,CAAd;AACD;;AACDJ,MAAAA,QAAQ,CAACI,IAAT,CAAc,CACZ,GADY,EAEZ;AAAEE,QAAAA,IAAI,EAAEV,KAAK,CAACW;AAAd,OAFY,EAGZ,uCAAqBV,IAAI,CAACQ,SAAL,CAAeT,KAAK,CAACO,KAArB,EAA4BP,KAAK,CAACK,SAAlC,CAArB,CAHY,CAAd;;AAMA,UAAIL,KAAK,CAACK,SAAN,KAAoBJ,IAAI,CAACW,MAA7B,EAAqC;AACnCR,QAAAA,QAAQ,CAACI,IAAT,CAAc,uCAAqB,EAArB,CAAd;AACD;;AACDH,MAAAA,SAAS,GAAGL,KAAK,CAACK,SAAlB;AACD,KAnBD;;AAoBA,QAAIA,SAAS,GAAGJ,IAAI,CAACW,MAArB,EAA6B;AAC3BR,MAAAA,QAAQ,CAACI,IAAT,CAAc,uCAAqBP,IAAI,CAACQ,SAAL,CAAeJ,SAAf,CAArB,CAAd;AACD;;AACD,WAAOD,QAAP;AACD;AAnCY,C","sourcesContent":["import { createTextWithString } from '@ali/4ever-cangjie';\nimport { JsonML, createLinkify, matchesLink } from '@ali/4ever-utils';\n\nexport type Matched = {\n  index: number;\n  lastIndex: number;\n  url: string;\n};\n\nconst linkify = createLinkify();\n\nexport default {\n  name: 'link',\n\n  match: (line: string): boolean => {\n    return !!matchesLink(linkify, line);\n  },\n\n  convert: (line: string): JsonML[] => {\n    const matches: Matched[] = matchesLink(linkify, line)!;\n    const children: JsonML[] = [];\n    let lastIndex = 0;\n    matches.forEach(match => {\n      if (match.index > lastIndex) {\n        children.push(\n          createTextWithString(line.substring(lastIndex, match.index)),\n        );\n      }\n      if (match.index === 0) {\n        children.push(createTextWithString(''));\n      }\n      children.push([\n        'a',\n        { href: match.url },\n        createTextWithString(line.substring(match.index, match.lastIndex)),\n      ]);\n\n      if (match.lastIndex === line.length) {\n        children.push(createTextWithString(''));\n      }\n      lastIndex = match.lastIndex;\n    });\n    if (lastIndex < line.length) {\n      children.push(createTextWithString(line.substring(lastIndex)));\n    }\n    return children;\n  },\n};\n"],"file":"textToJsonML.js"}