import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { Inline } from '@ali/4ever-cangjie';
import { ELEMENT_TYPE } from "../../utils/meta";

var Link = /*#__PURE__*/function (_Inline) {
  _inheritsLoose(Link, _Inline);

  function Link() {
    return _Inline.apply(this, arguments) || this;
  }

  Link.create = function create(properties) {
    if (typeof properties === 'string') {
      throw new Error('`Link.create` does not accept string');
    }

    if (Link.isLink(properties)) {
      return properties;
    }

    return _Inline.create.call(this, _extends({}, properties, {
      type: Link.TYPE
    }));
  };

  Link.isLink = function isLink(maybeLink) {
    return Inline.isInline(maybeLink) && maybeLink.type === Link.TYPE;
  };

  Link.isVoid = function isVoid(_, node) {
    var _node$data, _node$data$cardInfo;

    return Link.isLink(node) && ((_node$data = node.data) == null ? void 0 : (_node$data$cardInfo = _node$data.cardInfo) == null ? void 0 : _node$data$cardInfo.displayType) === 'card';
  };

  return Link;
}(Inline);

Link.TYPE = ELEMENT_TYPE;
export { Link as default };
//# sourceMappingURL=index.js.map