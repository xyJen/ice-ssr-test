import { setStyleWithMark } from '@ali/4ever-plugin-marks';
import { SzUtil } from '@ali/4ever-utils';
export function getLinkSz(controller, _ref) {
  var node = _ref.node;
  var document = controller.value.document;
  var text = node.getFirstText();

  if (text) {
    var marks = document.getMarksAtPosition(text.key, 1);

    if (marks && Array.isArray(marks)) {
      var sizes = marks.filter(function (m) {
        return m.type === 'sz';
      });

      if (sizes.length > 0) {
        return setStyleWithMark({}, sizes[0]);
      }
    }
  }

  return {};
}
export function getLinkMaxSz(controller, _ref2) {
  var node = _ref2.node;
  var _controller$value = controller.value,
      document = _controller$value.document,
      selection = _controller$value.selection;
  var text = node.getFirstText();

  if (text) {
    var range = selection.moveAnchorToStartOfNode(node, controller).moveFocusToEndOfNode(node, controller);
    var marks = document.getMarksAtRange(range);

    if (marks && Array.isArray(marks)) {
      var sizes = marks.filter(function (m) {
        return m.type === 'sz';
      });

      if (sizes.length > 0) {
        var maxSz = sizes[0];
        var maxPt = 0;
        sizes.forEach(function (sz) {
          var pt = SzUtil.fromMark(sz);

          if (pt > maxPt) {
            maxPt = pt;
            maxSz = sz;
          }
        });
        return setStyleWithMark({}, maxSz);
      }
    }
  }

  return {};
}
//# sourceMappingURL=getLinkSz.js.map