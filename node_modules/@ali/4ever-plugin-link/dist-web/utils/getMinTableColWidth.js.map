{"version":3,"sources":["../../../src/utils/getMinTableColWidth.ts"],"names":["theme","isLinkCardNode","Card","link","width","margin","minWidth","tablePadding","BlockLinkCardType","getMinTableColWidthForBlockLinkCard","_","node","isCard","data","cardType","undefined","getMinTableColWidth","controller","injections","value","isLinkCard","getMinTableColWidthForMobile"],"mappings":"AACA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,cAAT;AACA,SAAmBC,IAAnB,QAA+B,wBAA/B;kBAEkDF,KAAK,CAACG,I;IAAhDC,K,eAAAA,K;IAAOC,M,eAAAA,M;IAAQC,Q,eAAAA,Q;IAAUC,Y,eAAAA,Y;AASjC,IAAMC,iBAAiB,GAAG,MAA1B;AAEA,OAAO,SAASC,mCAAT,CAA6CC,CAA7C,QAAqF;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;;AAC1F,MAAIT,IAAI,CAACU,MAAL,CAAYD,IAAZ,KAAqBA,IAAI,CAACE,IAAL,CAAUC,QAAV,KAAuBN,iBAAhD,EAAmE;AACjE,WAAOF,QAAQ,GAAG,KAAKD,MAAM,GAAGE,YAAd,CAAlB;AACD;;AACD,SAAOQ,SAAP;AACD;AAED,eAAe,SAASC,mBAAT,CAA6BC,UAA7B,SAAqF;AAAA,MAA9BN,IAA8B,SAA9BA,IAA8B;AAAA,MAC1FO,UAD0F,GAC3ED,UAAU,CAACE,KADgE,CAC1FD,UAD0F;AAElG,MAAME,UAAU,GAAGnB,cAAc,CAACU,IAAD,EAAOO,UAAP,CAAjC;;AACA,MAAIE,UAAJ,EAAgB;AACd,WAAOhB,KAAK,GAAG,KAAKC,MAAM,GAAGE,YAAd,CAAf;AACD;;AACD,SAAOQ,SAAP;AACD;AAED,OAAO,SAASM,4BAAT,CAAsCJ,UAAtC,SAA8F;AAAA,MAA9BN,IAA8B,SAA9BA,IAA8B;AAAA,MAC3FO,UAD2F,GAC5ED,UAAU,CAACE,KADiE,CAC3FD,UAD2F;AAEnG,MAAME,UAAU,GAAGnB,cAAc,CAACU,IAAD,EAAOO,UAAP,CAAjC;;AACA,MAAIE,UAAJ,EAAgB;AACd,WAAOd,QAAQ,GAAG,KAAKD,MAAM,GAAGE,YAAd,CAAlB;AACD;;AACD,SAAOQ,SAAP;AACD","sourcesContent":["import { Controller, Node, Block } from '@ali/4ever-cangjie';\nimport { theme } from '@ali/4ever-utils';\nimport { isLinkCardNode } from './isLinkCard';\nimport { CardData, Card } from '@ali/4ever-plugin-card';\n\nconst { width, margin, minWidth, tablePadding } = theme.link;\nexport interface IsLinkCardQueryProps {\n  node: Node;\n}\n\nexport interface IsBlockLinkCardQueryProps {\n  node: Block<CardData>;\n}\n\nconst BlockLinkCardType = 'link';\n\nexport function getMinTableColWidthForBlockLinkCard(_, { node }: IsBlockLinkCardQueryProps) {\n  if (Card.isCard(node) && node.data.cardType === BlockLinkCardType) {\n    return minWidth + 2 * (margin + tablePadding);\n  }\n  return undefined;\n}\n\nexport default function getMinTableColWidth(controller: Controller, { node }: IsLinkCardQueryProps) {\n  const { injections } = controller.value;\n  const isLinkCard = isLinkCardNode(node, injections);\n  if (isLinkCard) {\n    return width + 2 * (margin + tablePadding);\n  }\n  return undefined;\n}\n\nexport function getMinTableColWidthForMobile(controller: Controller, { node }: IsLinkCardQueryProps) {\n  const { injections } = controller.value;\n  const isLinkCard = isLinkCardNode(node, injections);\n  if (isLinkCard) {\n    return minWidth + 2 * (margin + tablePadding);\n  }\n  return undefined;\n}\n"],"file":"getMinTableColWidth.js"}