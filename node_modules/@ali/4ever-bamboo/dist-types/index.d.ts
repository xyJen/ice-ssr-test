import { H1, H2, H3, H4, H5, H6 } from '@ali/4ever-plugin-heading';
import { P } from '@ali/4ever-plugin-paragraph';
import { TD } from '@ali/4ever-plugin-table';
import { BlockquoteWrapper } from '@ali/4ever-plugin-blockquote';
export { BambooPlaceholder as Placeholder, PlaceholderWrapper, InlinePlaceholder, ErrorBoundary, Select, InputNumberItem, CustomInputNumberItem } from '@ali/4ever-component';
export type { StyleSelectItemProps } from '@ali/4ever-component';
export { useScrollableContainer, useScrollableContent } from '@ali/4ever-cangjie';
export { useContainerWidthResize } from '@ali/4ever-plugin-table';
export * from './plugins';
export { getHeadings, createHeadingId } from '@ali/4ever-plugin-heading';
export type { IHeadingItem } from '@ali/4ever-plugin-heading';
export { marksToStyle as convertMarks } from '@ali/4ever-plugin-marks';
export { isPureTableNode, isTableNode } from '@ali/4ever-plugin-table';
export { throttleByIdleCallback, copyToClipboard, UnitConvert, isFirstPart, addDefaultUnit, transformThemeObjToCssString, isNaN, ptToPx, unitsConverter, sample, Sample, SimpleMapCache, fontRenderFallback, ShdUtil, UnderlineUtil, calculatedPluginSize, SpacingUtil, IndUtil, SzUtil, CommonFormatUtil, GradientUtil, isEmptyParagraph, zIndex, isSingleTableCell, unwrapSingleTableCell, fontSize, lineHeight, blockMarginStyleInContainer, theme, } from '@ali/4ever-utils';
export type { EmbedNode, VideoErrorMessage, VideoMaskParams } from '@ali/4ever-plugin-embed';
export type { ReferenceItem, RefBlockLocale } from '@ali/4ever-plugin-refblock';
export type { RowsHeight, UpdateRowHeight } from '@ali/4ever-plugin-table';
export declare const List: {
    Ul: import("styled-components").StyledComponent<"ul", any, import("@ali/4ever-plugin-list/src/component/list").ListProps, never>;
    Ol: import("styled-components").StyledComponent<"ol", any, import("@ali/4ever-plugin-list/src/component/list").ListProps, never>;
    Li: import("styled-components").StyledComponent<"li", any, {}, never>;
};
export { H1, H2, H3, H4, H5, H6, P, TD, BlockquoteWrapper };
declare const typeToComponent: {
    'table-cell': import("styled-components").StyledComponent<"td", any, {}, never>;
    'heading-1': import("styled-components").StyledComponent<"h1", any, {}, never>;
    'heading-2': import("styled-components").StyledComponent<"h2", any, {}, never>;
    'heading-3': import("styled-components").StyledComponent<"h3", any, {}, never>;
    'heading-4': import("styled-components").StyledComponent<"h4", any, {}, never>;
    'heading-5': import("styled-components").StyledComponent<"h5", any, {}, never>;
    'heading-6': import("styled-components").StyledComponent<"h6", any, {}, never>;
    paragraph: import("styled-components").StyledComponent<"div", any, {}, never>;
};
declare type TypeToComponent = typeof typeToComponent;
export declare type TypeToComponentKeys = keyof TypeToComponent;
export declare function styledComponents<K extends keyof TypeToComponent>(type: K): TypeToComponent[K];
