{"version":3,"sources":["../../../src/Placeholder/bambooPlaceholder.tsx"],"names":["React","styled","transformThemeObjToCssString","theme","PlaceholderWrapper","div","placeholder","props","isSelected","BambooPlaceholder","renderText","node","name","data","placeholderText","render","attributes","text","PureComponent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,4BAAT,EAAuCC,KAAvC,QAAoD,kBAApD;AAGA,OAAO,IAAMC,kBAAkB,gBAAGH,MAAM,CAACI,GAAV,iMAC3BH,4BAA4B,CAACC,KAAK,CAACG,WAAP,CADD,EAGb,UAACC,KAAD;AAAA,SAAYA,KAAK,CAACC,UAAN,GAAmB,SAAnB,GAA+B,SAA3C;AAAA,CAHa,CAAxB;AAoBP,WAAaC,iBAAb;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,UADF,GACe,YAAM;AAAA,wBACY,MAAKH,KADjB;AAAA,UACTG,UADS,eACTA,UADS;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UAETC,IAFS,GAEAD,IAAI,CAACE,IAFL,CAETD,IAFS;AAGjB,UAAIE,eAAe,GAAG,EAAtB;;AACA,UAAI,OAAOJ,UAAP,KAAsB,UAA1B,EAAsC;AACpCI,QAAAA,eAAe,GAAGJ,UAAU,CAACE,IAAD,CAA5B;AACD;;AACD,aAAOE,eAAe,KAAOF,IAAI,IAAI,EAAf,oCAAtB;AACD,KATH;;AAAA;AAAA;;AAAA;;AAAA,SAWEG,MAXF,GAWE,kBAAS;AAAA,QACCC,UADD,GACgB,KAAKT,KADrB,CACCS,UADD;AAEP,QAAMC,IAAI,GAAG,KAAKP,UAAL,EAAb;AACA,wBACE,eAAC,kBAAD,eAAwBM,UAAxB;AAAoC,MAAA,KAAK,EAAEC;AAA3C,QACGA,IADH,CADF;AAKD,GAnBH;;AAAA;AAAA,EAAuCjB,KAAK,CAACkB,aAA7C","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { transformThemeObjToCssString, theme } from '@ali/4ever-utils';\n\n\nexport const PlaceholderWrapper = styled.div<{isSelected?: boolean}>`\n  ${transformThemeObjToCssString(theme.placeholder)}\n  border-style: solid;\n  border-color: ${(props) => (props.isSelected ? '#D9DBDD' : '#ECEDEF')};\n  background-color: #F2F4F5;\n  color: #A0A5AB;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: 48px;\n  line-height: 48px;\n  text-align: center;\n`;\n\ninterface IProps {\n  renderText?: (name: string) => string;\n  node: any;\n  attributes: any;\n}\n\nexport class BambooPlaceholder extends React.PureComponent<IProps> {\n  renderText = () => {\n    const { renderText, node } = this.props;\n    const { name } = node.data;\n    let placeholderText = '';\n    if (typeof renderText === 'function') {\n      placeholderText = renderText(name);\n    }\n    return placeholderText || `${name || ''}暂无法解析`;\n  };\n\n  render() {\n    const { attributes } = this.props;\n    const text = this.renderText();\n    return (\n      <PlaceholderWrapper {...attributes} title={text}>\n        {text}\n      </PlaceholderWrapper>\n    );\n  }\n}\n"],"file":"bambooPlaceholder.js"}