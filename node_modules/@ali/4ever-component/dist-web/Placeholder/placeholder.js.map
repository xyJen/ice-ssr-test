{"version":3,"sources":["../../../src/Placeholder/placeholder.tsx"],"names":["React","PlaceholderInlineToolbar","isEqual","PlaceholderWrapper","Placeholder","props","placeholderRef","isSelected","editor","isCollapsed","value","selection","renderText","node","name","data","placeholderText","createRef","shouldComponentUpdate","nextProps","isChange","render","attributes","handleRemoveNode","text","isCurrSelected","current","Component"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;qBAA4B,a;AAC5B,OAAOC,wBAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,kBAAT;AAaA,WAAaC,WAAb;AAAA;;AAGE,uBAAYC,KAAZ,EAAmB;AAAA;;AACjB,wCAAMA,KAAN;AADiB,UAFnBC,cAEmB;;AAAA,UAwBnBC,UAxBmB,GAwBN,YAAM;AAAA,wBACc,MAAKF,KADnB;AAAA,UACTE,UADS,eACTA,UADS;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UAETC,WAFS,GAEOD,MAAM,CAACE,KAAP,CAAaC,SAFpB,CAETF,WAFS;AAGjB,aAAOF,UAAU,IAAIE,WAArB;AACD,KA5BkB;;AAAA,UA8BnBG,UA9BmB,GA8BN,YAAM;AAAA,yBACY,MAAKP,KADjB;AAAA,UACTO,UADS,gBACTA,UADS;AAAA,UACGC,IADH,gBACGA,IADH;AAAA,UAETC,IAFS,GAEAD,IAAI,CAACE,IAFL,CAETD,IAFS;AAGjB,UAAIE,eAAe,GAAG,EAAtB;;AACA,UAAI,OAAOJ,UAAP,KAAsB,UAA1B,EAAsC;AACpCI,QAAAA,eAAe,GAAGJ,UAAU,CAACE,IAAD,CAA5B;AACD;;AACD,aAAOE,eAAe,KAAOF,IAAI,IAAI,EAAf,oCAAtB;AACD,KAtCkB;;AAEjB,UAAKR,cAAL,gBAAsBN,KAAK,CAACiB,SAAN,EAAtB;AAFiB;AAGlB;;AANH;;AAAA,SAQEC,qBARF,GAQE,+BAAsBC,SAAtB,EAAmD;AAAA,QACzCd,KADyC,GAC/B,IAD+B,CACzCA,KADyC;AAEjD,QAAMe,QAAQ,GAAG,CAAClB,OAAO,CACvB;AACEK,MAAAA,UAAU,EAAEY,SAAS,CAACZ,UADxB;AAEEE,MAAAA,WAAW,EAAEU,SAAS,CAACX,MAAV,CAAiBE,KAAjB,CAAuBC,SAAvB,CAAiCF,WAFhD;AAGEG,MAAAA,UAAU,EAAEO,SAAS,CAACP,UAHxB;AAIEC,MAAAA,IAAI,EAAEM,SAAS,CAACN;AAJlB,KADuB,EAOvB;AACEN,MAAAA,UAAU,EAAEF,KAAK,CAACE,UADpB;AAEEE,MAAAA,WAAW,EAAEJ,KAAK,CAACG,MAAN,CAAaE,KAAb,CAAmBC,SAAnB,CAA6BF,WAF5C;AAGEG,MAAAA,UAAU,EAAEP,KAAK,CAACO,UAHpB;AAIEC,MAAAA,IAAI,EAAER,KAAK,CAACQ;AAJd,KAPuB,CAAzB;AAcA,WAAOO,QAAP;AACD,GAzBH;;AAAA,SA2CEC,MA3CF,GA2CE,kBAAS;AAAA,uBAC8C,KAAKhB,KADnD;AAAA,QACCiB,UADD,gBACCA,UADD;AAAA,QACaf,UADb,gBACaA,UADb;AAAA,QACyBgB,gBADzB,gBACyBA,gBADzB;AAEP,QAAMC,IAAI,GAAG,KAAKZ,UAAL,EAAb;AACA,QAAMa,cAAc,GAAG,KAAKlB,UAAL,EAAvB;AACA,wBACE,eAAC,KAAD,CAAO,QAAP,QACGkB,cAAc,gBACb,eAAC,wBAAD;AACE,MAAA,uBAAuB,EAAEF,gBAD3B;AAEE,MAAA,WAAW,EAAE,KAAKjB,cAAL,CAAoBoB;AAFnC,MADa,GAIR,IALT,eAME,eAAC,kBAAD;AACE,MAAA,GAAG,EAAE,KAAKpB;AADZ,OAEMgB,UAFN;AAGE,MAAA,UAAU,EAAEf,UAHd;AAIE,MAAA,KAAK,EAAEiB;AAJT,QAMGA,IANH,CANF,CADF;AAiBD,GAhEH;;AAAA;AAAA,EAAiCxB,KAAK,CAAC2B,SAAvC","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport React from 'react';\nimport PlaceholderInlineToolbar from './PlaceholderInlineToolbar';\nimport { isEqual } from 'lodash-es';\nimport { PlaceholderWrapper } from './bambooPlaceholder';\n\ninterface IProps {\n  handleRemoveNode: () => void;\n  editor: Controller;\n  renderText?: (name: string) => string;\n  node: any;\n  attributes: any;\n  isSelected: boolean;\n  scrollableContainer?: HTMLElement;\n  locale?: Record<string, any>;\n}\n\nexport class Placeholder extends React.Component<IProps> {\n  placeholderRef: React.RefObject<any>;\n\n  constructor(props) {\n    super(props);\n    this.placeholderRef = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<IProps>) {\n    const { props } = this;\n    const isChange = !isEqual(\n      {\n        isSelected: nextProps.isSelected,\n        isCollapsed: nextProps.editor.value.selection.isCollapsed,\n        renderText: nextProps.renderText,\n        node: nextProps.node,\n      },\n      {\n        isSelected: props.isSelected,\n        isCollapsed: props.editor.value.selection.isCollapsed,\n        renderText: props.renderText,\n        node: props.node,\n      },\n    );\n    return isChange;\n  }\n\n  isSelected = () => {\n    const { isSelected, editor } = this.props;\n    const { isCollapsed } = editor.value.selection;\n    return isSelected && isCollapsed;\n  };\n\n  renderText = () => {\n    const { renderText, node } = this.props;\n    const { name } = node.data;\n    let placeholderText = '';\n    if (typeof renderText === 'function') {\n      placeholderText = renderText(name);\n    }\n    return placeholderText || `${name || ''}暂无法解析`;\n  };\n\n  render() {\n    const { attributes, isSelected, handleRemoveNode } = this.props;\n    const text = this.renderText();\n    const isCurrSelected = this.isSelected();\n    return (\n      <React.Fragment>\n        {isCurrSelected ?\n          <PlaceholderInlineToolbar\n            handleRemovePlaceholder={handleRemoveNode}\n            triggerNode={this.placeholderRef.current}\n          /> : null}\n        <PlaceholderWrapper\n          ref={this.placeholderRef}\n          {...attributes}\n          isSelected={isSelected}\n          title={text}\n        >\n          {text}\n        </PlaceholderWrapper>\n      </React.Fragment>\n    );\n  }\n}\n"],"file":"placeholder.js"}