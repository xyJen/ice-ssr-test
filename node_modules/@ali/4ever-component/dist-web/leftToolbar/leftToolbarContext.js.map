{"version":3,"sources":["../../../src/leftToolbar/leftToolbarContext.tsx"],"names":["React","ActiveInteractionHooks","reducer","clearPrevent","updateHoverBlock","preventMouseMove","initData","initDispatch","useActiveInteraction","LeftToolbarContext","createContext","useLeftToolbar","useContext","LeftToolbarProvider","props","useReducer","state","dispatch","activeType","activeRef","useRef","current","actions","useMemo","block","value","children"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,sBAAT;AACA,OAAOC,OAAP,IAAkBC,YAAY,IAAZA,aAAlB,EAAgCC,gBAAgB,IAAhBA,iBAAhC,EAAkDC,gBAAgB,IAAhBA,iBAAlD;AAUA,IAAMC,QAA0B,GAAG;AACjCD,EAAAA,gBAAgB,EAAE;AADe,CAAnC;AAIA,IAAME,YAAY,GAAG;AACnBH,EAAAA,gBAAgB,EAAE,4BAAM,CAAG,CADR;AAEnBD,EAAAA,YAAY,EAAE,wBAAM,CAAG,CAFJ;AAGnBE,EAAAA,gBAAgB,EAAE,4BAAM,CAAG;AAHR,CAArB;IAMQG,oB,GAAyBP,sB,CAAzBO,oB;AAER,OAAO,IAAMC,kBAAkB,gBAAGT,KAAK,CAACU,aAAN,CAEhC,CAACJ,QAAD,EAAWC,YAAX,CAFgC,CAA3B;AAIP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAOX,KAAK,CAACY,UAAN,CAAiBH,kBAAjB,CAAP;AACD,CAFM;AAIP,OAAO,IAAMI,mBAAkC,GAAG,SAArCA,mBAAqC,CAACC,KAAD,EAAW;AAAA,0BACjCd,KAAK,CAACe,UAAN,CAAiBb,OAAjB,EAA0BI,QAA1B,CADiC;AAAA,MACpDU,KADoD;AAAA,MAC7CC,QAD6C;;AAAA,8BAGtCT,oBAAoB,EAHkB;AAAA,MAGpDU,UAHoD;;AAI3D,MAAMC,SAAS,GAAGnB,KAAK,CAACoB,MAAN,CAAa,EAAb,CAAlB;AACAD,EAAAA,SAAS,CAACE,OAAV,GAAoBH,UAApB;AAEA,MAAMI,OAA2B,GAAGtB,KAAK,CAACuB,OAAN,CAClC;AAAA,WAAO;AACLnB,MAAAA,gBAAgB,EAAE,0BAACoB,KAAD,EAAW;AAC3BP,QAAAA,QAAQ,CAACb,iBAAgB,CAACoB,KAAD,CAAjB,CAAR;AACD,OAHI;AAILrB,MAAAA,YAAY,EAAE,wBAAM;AAClBc,QAAAA,QAAQ,CAACd,aAAY,EAAb,CAAR;AACD,OANI;AAOLE,MAAAA,gBAAgB,EAAE,4BAAM;AACtBY,QAAAA,QAAQ,CAACZ,iBAAgB,EAAjB,CAAR;AACD;AATI,KAAP;AAAA,GADkC,EAYlC,CAACY,QAAD,CAZkC,CAApC;AAeA,MAAMQ,KAAK,GAAGzB,KAAK,CAACuB,OAAN,CAAc;AAAA,WAAM,CAACP,KAAD,EAAQM,OAAR,CAAN;AAAA,GAAd,EAAsC,CAACN,KAAD,EAAQM,OAAR,CAAtC,CAAd;AAEA,sBACE,eAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEG;AAApC,KACGX,KAAK,CAACY,QADT,CADF;AAKD,CA7BM","sourcesContent":["import * as React from 'react';\nimport { Block } from '@ali/4ever-cangjie';\nimport { ActiveInteractionHooks } from '../HoverBlock/ActiveInteractionContext';\nimport reducer, { clearPrevent, updateHoverBlock, preventMouseMove } from './reducer';\nimport type { LeftToolbarProps } from './types';\n\n\nexport interface LeftToolbarActions {\n  updateHoverBlock: (block?: Block) => void;\n  clearPrevent: () => void;\n  preventMouseMove: () => void;\n}\n\nconst initData: LeftToolbarProps = {\n  preventMouseMove: false,\n};\n\nconst initDispatch = {\n  updateHoverBlock: () => { },\n  clearPrevent: () => { },\n  preventMouseMove: () => { },\n};\n\nconst { useActiveInteraction } = ActiveInteractionHooks;\n\nexport const LeftToolbarContext = React.createContext<\n[LeftToolbarProps, LeftToolbarActions]\n>([initData, initDispatch]);\n\nexport const useLeftToolbar = () => {\n  return React.useContext(LeftToolbarContext);\n};\n\nexport const LeftToolbarProvider: React.FC<any> = (props) => {\n  const [state, dispatch] = React.useReducer(reducer, initData);\n\n  const [activeType] = useActiveInteraction();\n  const activeRef = React.useRef('');\n  activeRef.current = activeType;\n\n  const actions: LeftToolbarActions = React.useMemo(\n    () => ({\n      updateHoverBlock: (block) => {\n        dispatch(updateHoverBlock(block));\n      },\n      clearPrevent: () => {\n        dispatch(clearPrevent());\n      },\n      preventMouseMove: () => {\n        dispatch(preventMouseMove());\n      },\n    }),\n    [dispatch],\n  );\n\n  const value = React.useMemo(() => [state, actions], [state, actions]) as [LeftToolbarProps, LeftToolbarActions];\n\n  return (\n    <LeftToolbarContext.Provider value={value}>\n      {props.children}\n    </LeftToolbarContext.Provider>\n  );\n};\n"],"file":"leftToolbarContext.js"}