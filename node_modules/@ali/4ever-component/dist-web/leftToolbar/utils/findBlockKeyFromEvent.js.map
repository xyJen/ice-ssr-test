{"version":3,"sources":["../../../../src/leftToolbar/utils/findBlockKeyFromEvent.ts"],"names":["Block","constants","HOT_AREA","Selector","leafBlockKey","leafBlock","cangjieKey","key","edgeSelectable","contentKey","content","editable","DRAG_BAR_KEY","COLUMN_SELECTOR","RIGHT_OFFSET","getParentByAttributes","attribute","target","parentElement","attributes","Array","isArray","found","result","getAttribute","window","document","body","documentElement","i","length","checkIsWrapperBlock","querySelector","checkIsListWrapperBlock","findBlockKeyFromEvent","event","container","controller","oriTarget","blockKey","edgeKey","parentDragBar","closest","selfKey","editableNode","rect","getBoundingClientRect","clientX","clientY","elementFromPoint","left","finnalBlock","blockEle","edgeEle","edgeNode","value","getNode","isBlock","type","groupMapKey","mapBlock","eventY","y","firstBlock","finalKey"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Block, constants, Controller } from '@ali/4ever-cangjie';\n\nconst HOT_AREA = 100;\nconst { leafBlock: leafBlockKey, key: cangjieKey, edgeSelectable, content: contentKey, editable } = constants.Selector;\n\nconst DRAG_BAR_KEY = 'data-drag-handler-key';\nconst COLUMN_SELECTOR = 'data-columns';\n\n// 如果鼠标在 content 左侧，则往右侧偏移一部分，取新的元素。\nconst RIGHT_OFFSET = 20;\n\n/** dom getParentByAttributes */\nexport function getParentByAttributes(attribute: string | string[], target: HTMLElement | null) {\n  if (!target || !target.parentElement) return null;\n\n  const attributes = Array.isArray(attribute) ? attribute : [attribute];\n  let found: HTMLElement | null = target.parentElement;\n  let result: HTMLElement | null = null;\n  while (\n    found &&\n    !found.getAttribute(contentKey) &&\n    found !== window.document.body &&\n    found !== window.document.documentElement &&\n    !found.getAttribute(COLUMN_SELECTOR) &&\n    // 容器节点不再继续往上找\n    !found.getAttribute('data-container-block')\n  ) {\n    for (let i = 0; i < attributes.length; i++) {\n      if (found.getAttribute(attributes[i])) {\n        result = found;\n      }\n    }\n    found = found.parentElement;\n  }\n  return result;\n}\n\n/**\n * 用于检查那种 data-leaf-block 被一层 wrapper 包裹的段落节点\n * 比如：列表\n */\nconst checkIsWrapperBlock = (target: HTMLElement | null) => {\n  if (!target) {\n    return false;\n  }\n  return !!(\n    target.querySelector('[data-callout-group]')\n    || target.getAttribute('data-testid') === 'refblock-container'\n  );\n};\n\nconst checkIsListWrapperBlock = (target: HTMLElement | null) => {\n  if (!target) {\n    return false;\n  }\n  return !!(\n    target.getAttribute('data-testid') === 'list'\n  );\n};\n\n/**\n * 根据鼠标移动事件查找文档 key\n * 策略：一直查找到文档内容根节点或 body/html\n * 优先使用支持\n * 其次使用 列表/leafBlock 节点\n * @param event\n * @param container\n */\nexport default function findBlockKeyFromEvent(event: MouseEvent, container: Element | null, controller: Controller): string {\n  let oriTarget = event.target as HTMLElement | null;\n  let blockKey = '';\n  let edgeKey = '';\n\n  // 如果落在了拖拽栏上，直接返回对应的 key\n  const parentDragBar = oriTarget?.closest(`[${DRAG_BAR_KEY}]`);\n  const selfKey =\n    parentDragBar?.getAttribute(DRAG_BAR_KEY) ||\n    oriTarget?.getAttribute(DRAG_BAR_KEY);\n  if (selfKey) {\n    return selfKey;\n  }\n\n  const editableNode = container?.querySelector(`[${editable}]`);\n  if (editableNode) {\n    const rect = editableNode.getBoundingClientRect();\n    const { clientX, clientY } = event;\n    // 兼容在左边 padding 区域也可以识别\n    // @ts-ignore\n    if (window.document.elementFromPoint && clientX >= rect.left - HOT_AREA && clientX <= rect.left) {\n      // @ts-ignore\n      oriTarget = window.document.elementFromPoint(rect.left + RIGHT_OFFSET, clientY);\n    }\n  }\n\n\n  let target = oriTarget as HTMLElement | null;\n  let finnalBlock: HTMLElement | null = null;\n  // 1. 先尝试找 列表 或 leafBlock\n  const blockEle = target?.getAttribute(leafBlockKey) ? target : getParentByAttributes([leafBlockKey], target);\n  if (blockEle) {\n    blockKey = blockEle.getAttribute(cangjieKey) || leafBlockKey;\n    finnalBlock = blockEle;\n  } else {\n    target = oriTarget as HTMLElement | null;\n  }\n\n  // 2. 遍历找到最上层的 edgeBlock（例如表格里的 edge block）\n  const edgeEle = getParentByAttributes(edgeSelectable, target);\n  if (edgeEle) {\n    edgeKey = edgeEle.getAttribute(cangjieKey) || edgeKey;\n    finnalBlock = edgeEle;\n  }\n\n  const edgeNode = controller.value.document.getNode(edgeKey);\n  // TODO: 这里与 table 耦合，先写死，待改造\n  if (Block.isBlock(edgeNode) && edgeNode.type === 'table') {\n    edgeKey = '';\n  }\n\n  let groupMapKey = '';\n\n  if (!edgeKey && !blockKey && target && checkIsListWrapperBlock(target)) {\n    const mapBlock = target.querySelector(`[${cangjieKey}]`) as HTMLElement;\n    if (mapBlock) {\n      groupMapKey = mapBlock.getAttribute(cangjieKey) || '';\n      finnalBlock = mapBlock;\n    }\n  } else if (!edgeKey && !blockKey && target && checkIsWrapperBlock(target)) {\n    groupMapKey = target.getAttribute(cangjieKey) || '';\n    finnalBlock = target;\n  }\n\n  if (finnalBlock && checkIsWrapperBlock(finnalBlock)) {\n    // 需要对这里的key进行一次重新定位\n    const { y: eventY } = event;\n    const firstBlock = finnalBlock.querySelector(`[${cangjieKey}]`);\n    if (firstBlock) {\n      const { y } = firstBlock?.getBoundingClientRect();\n      if (eventY - y > 0) {\n        return '';\n      }\n    }\n  }\n\n  // 优先级：edgeKey > leafBlockKey（比如在表格中）\n  const finalKey = edgeKey || blockKey || groupMapKey;\n\n  return finalKey || '';\n}\n"],"file":"findBlockKeyFromEvent.js"}