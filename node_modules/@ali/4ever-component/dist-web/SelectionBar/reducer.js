import _extends from "@babel/runtime/helpers/extends";
export var MOUNT_SELECTION_TOOLBAR = Symbol('MOUNT_SELECTION_TOOLBAR');
export var UPDATE_LAST_COLOR = Symbol('UPDATE_LAST_COLOR');
export var UPDATE_LAST_HIGHLIGHT = Symbol('UPDATE_LAST_HIGHLIGHT');
export var UPDATE_LAST_FILL = Symbol('UPDATE_LAST_FILL');
export var UPDATE_CAN_HIDE = Symbol('UPDATE_CAN_HIDE');

var selectionBarReducer = function selectionBarReducer(state, action) {
  if (action.type === UPDATE_LAST_COLOR) {
    return _extends({}, state, {
      lastColor: action.payload
    });
  }

  if (action.type === UPDATE_LAST_HIGHLIGHT) {
    return _extends({}, state, {
      lastHighlight: action.payload
    });
  }

  if (action.type === UPDATE_LAST_FILL) {
    return _extends({}, state, {
      lastFill: action.payload
    });
  }

  if (action.type === UPDATE_CAN_HIDE) {
    return _extends({}, state, {
      canHide: action.payload
    });
  }

  return state;
};

export function mountSelectionToolbar() {
  return {
    type: MOUNT_SELECTION_TOOLBAR
  };
}
export default selectionBarReducer;
//# sourceMappingURL=reducer.js.map