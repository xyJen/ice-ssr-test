{"version":3,"sources":["../../../src/SelectionBar/context.tsx"],"names":["React","selectionBarReducer","UPDATE_CAN_HIDE","UPDATE_LAST_COLOR","UPDATE_LAST_FILL","UPDATE_LAST_HIGHLIGHT","DEFAULT_COLOR","INITIAL_HIGHLIGHT","INITIAL_FILL","INITIAL_CAN_HIDE","SelectionBarContext","createContext","useSelectionBarContext","context","useContext","Error","SelectionBarProvider","props","useReducer","lastColor","lastHighlight","lastFill","canHide","state","dispatch","actions","useMemo","updateLastColor","color","type","payload","updateLastHighlight","highlight","updateLastFill","fill","updateCanHide","contextValue","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,OAAOC,mBAAP,IACEC,eADF,EAEEC,iBAFF,EAGEC,gBAHF,EAIEC,qBAJF;IAQEC,a,GAKA,S;IAJAC,iB,GAKA,S;IAJAC,Y,GAKA,S;IAJAC,gB,GAKA,I;AAWF,OAAO,IAAMC,mBAAmB,gBAAGV,KAAK,CAACW,aAAN,CAEjC,IAFiC,CAA5B;AAIP,OAAO,SAASC,sBAAT,GAAkC;AACvC,MAAMC,OAAO,GAAGb,KAAK,CAACc,UAAN,CAAiBJ,mBAAjB,CAAhB;;AAEA,MAAI,CAACG,OAAL,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,SAAOF,OAAP;AACD;AAED,OAAO,IAAMG,oBAAmC,GAAG,SAAtCA,oBAAsC,CAACC,KAAD,EAAW;AAAA,0BAClCjB,KAAK,CAACkB,UAAN,CAAiBjB,mBAAjB,EAAsC;AAC9DkB,IAAAA,SAAS,EAAEb,aADmD;AAE9Dc,IAAAA,aAAa,EAAEb,iBAF+C;AAG9Dc,IAAAA,QAAQ,EAAEb,YAHoD;AAI9Dc,IAAAA,OAAO,EAAEb;AAJqD,GAAtC,CADkC;AAAA,MACrDc,KADqD;AAAA,MAC9CC,QAD8C;;AAQ5D,MAAMC,OAA2B,GAAGzB,KAAK,CAAC0B,OAAN,CAClC;AAAA,WAAO;AACLC,MAAAA,eAAe,EAAE,yBAACC,KAAD,EAAW;AAC1BJ,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE1B,iBAAR;AAA2B2B,UAAAA,OAAO,EAAEF;AAApC,SAAD,CAAR;AACD,OAHI;AAILG,MAAAA,mBAAmB,EAAE,6BAACC,SAAD,EAAe;AAClCR,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAExB,qBAAR;AAA+ByB,UAAAA,OAAO,EAAEE;AAAxC,SAAD,CAAR;AACD,OANI;AAOLC,MAAAA,cAAc,EAAE,wBAACC,IAAD,EAAU;AACxBV,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAEzB,gBAAR;AAA0B0B,UAAAA,OAAO,EAAEI;AAAnC,SAAD,CAAR;AACD,OATI;AAULC,MAAAA,aAAa,EAAE,uBAACb,OAAD,EAAa;AAC1BE,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAE3B,eAAR;AAAyB4B,UAAAA,OAAO,EAAER;AAAlC,SAAD,CAAR;AACD;AAZI,KAAP;AAAA,GADkC,EAelC,EAfkC,CAApC;AAkBA,MAAMc,YAGL,GAAGpC,KAAK,CAAC0B,OAAN,CAAc;AAAA,WAAM,CAACH,KAAD,EAAQE,OAAR,CAAN;AAAA,GAAd,EAAsC,CAACA,OAAD,EAAUF,KAAV,CAAtC,CAHJ;AAKA,sBACE,eAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEa;AAArC,KACGnB,KAAK,CAACoB,QADT,CADF;AAKD,CApCM","sourcesContent":["import React from 'react';\nimport selectionBarReducer, {\n  UPDATE_CAN_HIDE,\n  UPDATE_LAST_COLOR,\n  UPDATE_LAST_FILL,\n  UPDATE_LAST_HIGHLIGHT,\n} from './reducer';\nimport type { SelectionBarContextInterface } from './types';\nconst [\n  DEFAULT_COLOR,\n  INITIAL_HIGHLIGHT,\n  INITIAL_FILL,\n  INITIAL_CAN_HIDE,\n ] = [\n  '#404040',\n  '#FBF3DC',\n  '#FDBE3D',\n  true,\n ]\n\n\nexport interface SelectionBarAction {\n  updateLastColor: (color: string) => void;\n  updateLastHighlight: (highlight: string) => void;\n  updateLastFill: (fill: string) => void;\n  updateCanHide: (canHide: boolean) => void;\n}\n\nexport const SelectionBarContext = React.createContext<\n[SelectionBarContextInterface, SelectionBarAction] | null\n>(null);\n\nexport function useSelectionBarContext() {\n  const context = React.useContext(SelectionBarContext);\n\n  if (!context) {\n    throw new Error('SelectionBarContext not found.');\n  }\n\n  return context;\n}\n\nexport const SelectionBarProvider: React.FC<any> = (props) => {\n  const [state, dispatch] = React.useReducer(selectionBarReducer, {\n    lastColor: DEFAULT_COLOR,\n    lastHighlight: INITIAL_HIGHLIGHT,\n    lastFill: INITIAL_FILL,\n    canHide: INITIAL_CAN_HIDE,\n  });\n\n  const actions: SelectionBarAction = React.useMemo(\n    () => ({\n      updateLastColor: (color) => {\n        dispatch({ type: UPDATE_LAST_COLOR, payload: color });\n      },\n      updateLastHighlight: (highlight) => {\n        dispatch({ type: UPDATE_LAST_HIGHLIGHT, payload: highlight });\n      },\n      updateLastFill: (fill) => {\n        dispatch({ type: UPDATE_LAST_FILL, payload: fill });\n      },\n      updateCanHide: (canHide) => {\n        dispatch({ type: UPDATE_CAN_HIDE, payload: canHide });\n      },\n    }),\n    [],\n  );\n\n  const contextValue: [\n    SelectionBarContextInterface,\n    SelectionBarAction,\n  ] = React.useMemo(() => [state, actions], [actions, state]);\n\n  return (\n    <SelectionBarContext.Provider value={contextValue}>\n      {props.children}\n    </SelectionBarContext.Provider>\n  );\n};\n"],"file":"context.js"}