import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Controller, useScrollableContent } from '@ali/4ever-cangjie';
import { Dropdown } from '@ali/we-design';
import { ToolbarMode } from "./interface";
import Toolbar from "./toolbarRenderNext";
import { usePlugins } from "../PluginsContext";
/**
 * 使用dropdown包装一层toolbar，防止toolbar被其它元素遮挡
 * @param props
 */

export var InlineToolbar = function InlineToolbar(props) {
  var controller = Controller.useController();
  var plugins = usePlugins();

  var triggerNode = props.triggerNode,
      visible = props.visible,
      children = props.children,
      getDropdwonContainer = props.getDropdwonContainer,
      inlineLayout = props.inlineLayout,
      customToolButtons = props.customToolButtons,
      hiddenToolButtons = props.hiddenToolButtons,
      style = props.style,
      overlayStyle = props.overlayStyle,
      overlayClassName = props.overlayClassName,
      testid = props.testid,
      rest = _objectWithoutPropertiesLoose(props, ["triggerNode", "visible", "children", "getDropdwonContainer", "inlineLayout", "customToolButtons", "hiddenToolButtons", "style", "overlayStyle", "overlayClassName", "testid"]);

  var scrollableContent = useScrollableContent();
  var getScrollableContent = React.useCallback(function () {
    return scrollableContent || window.document.body;
  }, [scrollableContent]);
  var overlay = visible ? /*#__PURE__*/_createElement(Toolbar, {
    style: style,
    controller: controller,
    plugins: plugins,
    toolbarMode: ToolbarMode.inline,
    inlineLayout: inlineLayout,
    customToolButtons: customToolButtons,
    hiddenToolButtons: hiddenToolButtons,
    testid: testid ? "inline-toolbar-" + testid : undefined
  }) : null;
  return /*#__PURE__*/_createElement(Dropdown, _extends({
    visible: visible,
    placement: "topLeft",
    trigger: "click",
    offsetY: -6,
    triggerNode: triggerNode,
    getContainer: getDropdwonContainer || getScrollableContent,
    overlayStyle: overlayStyle,
    overlayClassName: overlayClassName
  }, rest, {
    overlay: overlay
  }), children);
};
//# sourceMappingURL=inlineToolbar.js.map