{"version":3,"sources":["../../../src/Toolbar/toolbarRenderNext.tsx"],"names":["React","useState","useCallback","useRef","DoubleLineToolbar","EToolbarMode","SingleLineToolbar","Toolbar","ToolbarDivider","ToolBox","ToolGroup","ToolLine","ToolbarWrapper","InlineToolbarWrapper","idleRender","ToolbarMode","ToolBoxLayoutMode","renderToolArray","judgeShouldShow","ToolbarConfig","ToolbarRenderNext","props","controller","plugins","inlineLayout","singleLayout","doubleLayout","hiddenToolButtons","toolbarMode","customToolButtons","disableTargets","style","alignment","autoFolding","defaultToolbarMode","testid","defaultMode","doubleLine","singleLine","uiToolbarMode","setUiToolbarMode","inlinetoolbarWrapperRef","handleModeChange","mode","getContainer","current","window","document","body","realToolbarMode","realAutoFolding","undefined","inline","target","useMemo","pluginsArray","array","i","length","tgt","plugin","getTarget","toolbar","renderTool","item","index","isValidElement","name","boxLayout","verticalKey","hideTargets","showTargets","verticalText","rest","CustomComponent","split","pluginName","buttonName","hash","buttons","Component","shouldShow","locale","toolBoxName","vertical","isDoubleMode","toolBoxLayout","single","console","warn","renderLine","lineProps","contents","renderGroup","groupProps","renderSingleToolbar","singleLineLayout","layout","defaultSingleLayout","tls","map","lines","idx","filter","renderDoubleToolbar","doubleLineLayout","defaultDoubleLayout","tgs","group","handleMouseDown","ev","tagName","toLocaleLowerCase","preventDefault","stopPropagation","fTgts","defaultDisableTargets","shouldDisableWholeToolbar","classes","wrapperStyle","opacity","pointerEvents","defaultInlineLayout","process","env","NODE_ENV","leading"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,OAArD;qBAF4B,a;AAI5B,SACEC,iBADF,EAEEC,YAFF,EAIEC,iBAJF,EAKEC,OALF,EAMEC,cANF,EAOEC,OAPF,EAQEC,SARF,EASEC,QATF,QAUO,YAVP;AAYA,SACEC,cADF,EAEEC,oBAFF;AAIA,SAASC,UAAT;AACA,SAKEC,WALF,EAMEC,iBANF;AAQA,SAASC,eAAT,EAA0BC,eAA1B;AACA,OAAOC,aAAP;;wBAkEU,eAAC,cAAD,O;;AA/DV,IAAMC,iBAAwD,GAAG,SAA3DA,iBAA2D,CAACC,KAAD,EAAW;AAAA,MAExEC,UAFwE,GAgBtED,KAhBsE,CAExEC,UAFwE;AAAA,MAGxEC,OAHwE,GAgBtEF,KAhBsE,CAGxEE,OAHwE;AAAA,MAIxEC,YAJwE,GAgBtEH,KAhBsE,CAIxEG,YAJwE;AAAA,MAKxEC,YALwE,GAgBtEJ,KAhBsE,CAKxEI,YALwE;AAAA,MAMxEC,YANwE,GAgBtEL,KAhBsE,CAMxEK,YANwE;AAAA,8BAgBtEL,KAhBsE,CAOxEM,iBAPwE;AAAA,MAOxEA,iBAPwE,sCAOpD,EAPoD;AAAA,MAQxEC,WARwE,GAgBtEP,KAhBsE,CAQxEO,WARwE;AAAA,8BAgBtEP,KAhBsE,CASxEQ,iBATwE;AAAA,MASxEA,iBATwE,sCASpD,EAToD;AAAA,MAUxEC,cAVwE,GAgBtET,KAhBsE,CAUxES,cAVwE;AAAA,MAWxEC,KAXwE,GAgBtEV,KAhBsE,CAWxEU,KAXwE;AAAA,MAYxEC,SAZwE,GAgBtEX,KAhBsE,CAYxEW,SAZwE;AAAA,MAaxEC,WAbwE,GAgBtEZ,KAhBsE,CAaxEY,WAbwE;AAAA,MAcxEC,kBAdwE,GAgBtEb,KAhBsE,CAcxEa,kBAdwE;AAAA,MAexEC,MAfwE,GAgBtEd,KAhBsE,CAexEc,MAfwE;AAiB1E,MAAMC,WAAW,GAAGF,kBAAkB,KAAKnB,WAAW,UAAlC,GAA4CV,YAAY,CAACgC,UAAzD,GAAsEhC,YAAY,CAACiC,UAAvG;;AAjB0E,kBAkBhCrC,QAAQ,CAAemC,WAAf,CAlBwB;AAAA,MAkBnEG,aAlBmE;AAAA,MAkBpDC,gBAlBoD;;AAmB1E,MAAMC,uBAAuB,GAAGtC,MAAM,CAAiB,IAAjB,CAAtC;AACA,MAAMuC,gBAAgB,GAAGxC,WAAW,CAAC,UAACyC,IAAD,EAAwB;AAC3DH,IAAAA,gBAAgB,CAACG,IAAD,CAAhB;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAGA,MAAMC,YAAY,GAAG1C,WAAW,CAAC;AAAA,WAAMuC,uBAAuB,CAACI,OAAxB,IAAmCC,MAAM,CAACC,QAAP,CAAgBC,IAAzD;AAAA,GAAD,EAAgE,EAAhE,CAAhC;AACA,MAAMC,eAAe,GAAG,iBAAiB5B,KAAjB,GAAyBO,WAAzB,GAAuCW,aAA/D;AACA,MAAMW,eAAe,GAAGjB,WAAW,KAAKkB,SAAhB,GAA4BlB,WAA5B,GAA0CgB,eAAe,KAAKlC,WAAW,CAACqC,MAAlG;AACA;AACF;AACA;AACA;;AACE,MAAMC,MAAM,GAAGrD,KAAK,CAACsD,OAAN,CAAc,YAAM;AACjC,QAAMC,YAAY,GAAGhC,OAAO,CAACiC,KAA7B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/C,UAAIE,GAAG,SAAP;AACA,UAAMC,MAAM,GAAGL,YAAY,CAACE,CAAD,CAA3B;AACA,UAAMI,SAAS,GAAGD,MAAM,CAACE,OAAP,IAAkBF,MAAM,CAACE,OAAP,CAAeD,SAAnD;;AACA,UAAIA,SAAJ,EAAe;AACbF,QAAAA,GAAG,GAAGE,SAAS,CAACvC,UAAD,CAAf;AACD;;AACD,UAAIqC,GAAJ,EAAS;AACP,eAAOA,GAAP;AACD;AACF;AACF,GAbc,EAaZ,CAACrC,UAAD,EAAaC,OAAO,CAACiC,KAArB,CAbY,CAAf;AAeA;AACF;AACA;AACA;AACA;;AACE,MAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAA6CC,KAA7C,EAA+D;AAAA;;AAChF,sBAAIjE,KAAK,CAACkE,cAAN,CAAqBF,IAArB,CAAJ,EAAgC;AAC9B,0BACE,eAAC,OAAD;AAAS,QAAA,GAAG,EAAEC;AAAd,SACGD,IADH,CADF;AAKD;;AAP+E,QAQxEG,IARwE,GAQUH,IARV,CAQxEG,IARwE;AAAA,QAQlEC,SARkE,GAQUJ,IARV,CAQlEI,SARkE;AAAA,QAQvDC,WARuD,GAQUL,IARV,CAQvDK,WARuD;AAAA,QAQ1CC,WAR0C,GAQUN,IARV,CAQ1CM,WAR0C;AAAA,QAQ7BC,WAR6B,GAQUP,IARV,CAQ7BO,WAR6B;AAAA,QAQhBC,YARgB,GAQUR,IARV,CAQhBQ,YARgB;AAAA,QAQCC,IARD,iCAQUT,IARV,uFAShF;;;AACA,QAAIG,IAAI,KAAK,gBAAb,EAA+B;AAC7B,0BACE,eAAC,OAAD;AAAS,QAAA,GAAG,EAAEF;AAAd,cADF;AAKD,KAhB+E,CAkBhF;;;AACA,QAAItC,iBAAiB,CAACwC,IAAD,CAArB,EAA6B,OAAO,IAAP,CAnBmD,CAqBhF;;AACA,QAAMO,eAAe,GAAG7C,iBAAiB,CAACsC,IAAD,CAAzC;;AAtBgF,sBAwBnCA,IAAI,CAACQ,KAAL,CAAW,GAAX,CAxBmC;AAAA,QAwBzEC,UAxByE;AAAA;AAAA,QAwB7DC,UAxB6D,6BAwBhD,SAxBgD;;AAyBhF,QAAMjB,MAAM,GAAGrC,OAAO,CAACuD,IAAR,CAAaF,UAAb,CAAf;;AACA,QAAI,CAAChB,MAAD,IAAW,CAACc,eAAhB,EAAiC;AAC/B,aAAO,IAAP;AACD;;AAED,QAAMK,OAAO,GAAG,CAAAnB,MAAM,QAAN,YAAAA,MAAM,CAAEE,OAAR,MAAmBF,MAAnB,uCAAmBA,MAAM,CAAEE,OAA3B,qBAAmB,gBAAiBiB,OAApC,CAAhB;AACA,QAAMC,SAAS,GAAGN,eAAe,IAAKK,OAAO,IAAIA,OAAO,CAACF,UAAD,CAAxD;;AAEA,QAAI,CAACG,SAAL,EAAgB;AACd,aAAO,IAAP;AACD;;AAED,QAAIpB,MAAJ,YAAIA,MAAM,CAAEE,OAAZ,EAAqB;AACnB;AACA,UAAMmB,UAAU,GAAG/D,eAAe,CAACmC,MAAD,EAASkB,WAAT,EAAsBD,WAAtB,CAAlC;AACA,UAAI,CAACW,UAAL,EAAiB,OAAO,IAAP;AAClB,KAzC+E,CA2ChF;;;AACA,QAAMC,MAAM,GAAGtB,MAAH,wCAAGA,MAAM,CAAEE,OAAX,qBAAG,iBAAiBoB,MAAhC;AACA,QAAIC,WAAJ;;AACA,QAAIf,SAAS,KAAKpD,iBAAiB,CAACoE,QAAhC,IAA4CF,MAAhD,EAAwD;AACtD;AACAC,MAAAA,WAAW,GAAGD,MAAM,CAACb,WAAW,IAAI,aAAhB,CAApB;AACD;;AACDc,IAAAA,WAAW,GAAGX,YAAY,IAAIW,WAA9B;AAEA,QAAME,YAAY,GAAGpC,eAAe,KAAKlC,WAAW,UAApD;AACA,QAAIuE,aAAa,GAAGlB,SAApB;;AACA,QAAI,CAACiB,YAAD,IAAiBjB,SAAS,KAAKpD,iBAAiB,CAACoE,QAArD,EAA+D;AAC7D;AACAE,MAAAA,aAAa,GAAGtE,iBAAiB,CAACuE,MAAlC;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,0DAAb;AACD,KA1D+E,CA4DhF;;;AACA,wBACE,eAAC,OAAD;AACE,MAAA,IAAI,EAAEN,WADR;AAEE,MAAA,MAAM,EAAEG,aAFV;AAGE,MAAA,GAAG,EAAErB;AAHP,oBAKE,eAAC,SAAD,eACMQ,IADN;AAEE,MAAA,UAAU,EAAEnD,UAFd;AAGE,MAAA,WAAW,EAAE2B,eAHf;AAIE,MAAA,MAAM,EAAEiC,MAJV;AAKE,MAAA,IAAI,EAAEG,YAAY,GAAG,OAAH,GAAa,QALjC;AAME,MAAA,YAAY,EAAEzD,WAAW,KAAKb,WAAW,CAACqC,MAA5B,GAAqCR,YAArC,GAAoDO;AANpE,OALF,CADF;AAgBD,GA7ED;;AA+EA,MAAMuC,UAAU,GAAG,SAAbA,UAAa,CAACC,SAAD,EAA0B1B,KAA1B,EAA4C;AAC7D,QAAM2B,QAAQ,GAAG3E,eAAe,CAAC0E,SAAD,EAAY,aAAZ,EAA2BtC,MAA3B,EAAmCU,UAAnC,CAAhC;AACA,QAAI,CAAC6B,QAAL,EAAe,OAAO,IAAP;AACf,wBACE,eAAC,QAAD;AAAU,MAAA,GAAG,EAAE3B;AAAf,OACG2B,QADH,CADF;AAKD,GARD;;AAUA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAA6B7B,KAA7B,EAA+C;AACjE,QAAM2B,QAAQ,GAAG3E,eAAe,CAAC6E,UAAD,EAAa,UAAb,EAAyBzC,MAAzB,EAAiCqC,UAAjC,CAAhC;AACA,QAAI,CAACE,QAAL,EAAe,OAAO,IAAP;AACf,wBACE,eAAC,SAAD;AAAW,MAAA,GAAG,EAAE3B;AAAhB,OACG2B,QADH,CADF;AAKD,GARD;AAUA;AACF;AACA;AACA;;;AACE,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,gBAAD,EAAgG;AAC1H,QAAI/C,eAAe,KAAK5C,YAAY,CAACgC,UAArC,EAAiD,OAAO,IAAP;AACjD,QAAM4D,MAAM,GAAGD,gBAAgB,IAAI7E,aAAa,CAAC+E,mBAAjD,CAF0H,CAG1H;;AACA,QAAMC,GAAQ,GAAGF,MAAM,CAACG,GAAP,CAAW,UAACC,KAAD,EAAQC,GAAR;AAAA,aAAgBZ,UAAU,CAACW,KAAD,EAAQC,GAAR,CAA1B;AAAA,KAAX,EAAmDC,MAAnD,CAA0D,UAACvC,IAAD;AAAA,aAAUA,IAAV;AAAA,KAA1D,CAAjB;AACA,QAAI,CAACmC,GAAG,CAACzC,MAAT,EAAiB,OAAO,IAAP;AACjB,wBACE,eAAC,iBAAD;AACE,MAAA,SAAS,EAAE1B,SADb;AAEE,MAAA,WAAW,EAAEkB;AAFf,OAIGiD,GAJH,CADF;AAQD,GAdD;AAgBA;AACF;AACA;AACA;;;AACE,MAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,gBAAD,EAAkG;AAC5H,QAAIxD,eAAe,KAAK5C,YAAY,CAACiC,UAArC,EAAiD,OAAO,IAAP;AACjD,QAAM2D,MAAM,GAAGQ,gBAAgB,IAAItF,aAAa,CAACuF,mBAAjD,CAF4H,CAG5H;;AACA,QAAMC,GAAQ,GAAGV,MAAM,CAACG,GAAP,CAAW,UAACQ,KAAD,EAAQ3C,KAAR;AAAA,aAAkB4B,WAAW,CAACe,KAAD,EAAQ3C,KAAR,CAA7B;AAAA,KAAX,EAAwDsC,MAAxD,CAA+D,UAACvC,IAAD;AAAA,aAAUA,IAAV;AAAA,KAA/D,CAAjB;AACA,QAAI,CAAC2C,GAAG,CAACjD,MAAT,EAAiB,OAAO,IAAP;AACjB,wBACE,eAAC,iBAAD;AACE,MAAA,SAAS,EAAE1B,SADb;AAEE,MAAA,WAAW,EAAEkB;AAFf,OAIGyD,GAJH,CADF;AAQD,GAdD;AAgBA;AACF;AACA;;;AACE,MAAME,eAAe,GAAG3G,WAAW,CAAC,UAAC4G,EAAD,EAAQ;AAAA;;AAC1C,QAAI,eAAAA,EAAE,CAACzD,MAAH,gCAAW0D,OAAX,CAAmBC,iBAAnB,QAA2C,OAA/C,EAAwD;AACtD;AACAF,MAAAA,EAAE,CAACG,cAAH,IAAqBH,EAAE,CAACG,cAAH,EAArB;AACAH,MAAAA,EAAE,CAACI,eAAH,IAAsBJ,EAAE,CAACI,eAAH,EAAtB;AACD;AACF,GANkC,EAMhC,EANgC,CAAnC;AAQA,MAAMC,KAAK,GAAGrF,cAAc,IAAIX,aAAa,CAACiG,qBAA9C;AACA,MAAMC,yBAAyB,GAAGpE,eAAe,KAAKlC,WAAW,CAACqC,MAAhC,IAA0C+D,KAAK,CAAC9D,MAAD,CAAjF;AAEA,MAAIiE,OAAO,GAAG,YAAd;AACA,MAAIC,YAAiC,GAAG,EAAxC;;AACA,MAAIF,yBAAJ,EAA+B;AAC7BE,IAAAA,YAAY,GAAG;AACbC,MAAAA,OAAO,EAAE,GADI;AAEbC,MAAAA,aAAa,EAAE;AAFF,KAAf;AAID;;AACD,MAAIxE,eAAe,KAAK5C,YAAY,CAACgC,UAArC,EAAiD;AAC/CiF,IAAAA,OAAO,IAAI,SAAX;AACD,GAFD,MAEO;AACLA,IAAAA,OAAO,IAAI,SAAX;AACD;;AAED,MAAI1F,WAAW,KAAKb,WAAW,CAACqC,MAAhC,EAAwC;AACtC,QAAM6C,MAAM,GAAGzE,YAAY,IAAIL,aAAa,CAACuG,mBAA7C;AACA,wBACE,eAAC,oBAAD;AAAsB,MAAA,KAAK,EAAE3F,KAA7B;AAAoC,MAAA,GAAG,EAAEU,uBAAzC;AAAkE,qBAAaN,MAAb,WAAaA,MAAb,GAAuBgB;AAAzF,OACG4C,mBAAmB,CAACE,MAAD,CADtB,CADF;AAKD;;AAED,MAAIrE,WAAW,KAAKb,WAAW,CAACwE,MAAhC,EAAwC;AACtC,wBACE,eAAC,cAAD;AACE,MAAA,KAAK,eAAOgC,YAAP,EAAwBxF,KAAxB,CADP;AAEE,MAAA,SAAS,EAAEuF,OAFb;AAGE,MAAA,WAAW,EAAET,eAHf;AAIE,qBAAa1E,MAAb,WAAaA,MAAb,GAAuBgB;AAJzB,OAMI4C,mBAAmB,CAACtE,YAAD,CANvB,CADF;AAUD;;AAED,MAAIG,WAAW,KAAKb,WAAW,UAA/B,EAAwC;AACtC,WAAOyF,mBAAmB,CAAC9E,YAAD,CAA1B;AACD;;AAED,sBACE,eAAC,cAAD;AACE,IAAA,KAAK,eAAO6F,YAAP,EAAwBxF,KAAxB,CADP;AAEE,IAAA,SAAS,EAAEuF,OAFb;AAGE,IAAA,WAAW,EAAET,eAHf;AAIE,mBAAa1E,MAAb,WAAaA,MAAb,GAAuBgB;AAJzB,kBAME,eAAC,OAAD;AACE,IAAA,IAAI,EAAEF,eADR;AAEE,IAAA,YAAY,EAAEP,gBAFhB;AAGE,IAAA,iBAAiB,EAAEqD,mBAAmB,CAACtE,YAAD,CAAnB,IAAqC0B,SAH1D;AAIE,IAAA,iBAAiB,EAAEqD,mBAAmB,CAAC9E,YAAD,CAAnB,IAAqCyB,SAJ1D;AAKE,IAAA,WAAW,EAAED;AALf,IANF,CADF;AAeD,CAlQD;;AAoQA,eAAeyE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,GACXzG,iBADW,GAEXN,UAAU,CAACM,iBAAD,EAAoB,GAApB,EAAyB;AAAE0G,EAAAA,OAAO,EAAE;AAAX,CAAzB,CAFd","sourcesContent":["/**\n * 编辑器自带toolbar组件\n */\nimport React, { useState, useCallback, useRef } from 'react';\n\nimport {\n  DoubleLineToolbar,\n  EToolbarMode,\n  EToolBoxLayout,\n  SingleLineToolbar,\n  Toolbar,\n  ToolbarDivider,\n  ToolBox,\n  ToolGroup,\n  ToolLine,\n} from '@ali/we-ui';\n\nimport {\n  ToolbarWrapper,\n  InlineToolbarWrapper,\n} from './styled';\nimport { idleRender } from '../idleRender';\nimport {\n  ToolbarRenderNextInnerProps,\n  ToolButtonProps,\n  ToolRowProps,\n  ToolGroupProps,\n  ToolbarMode,\n  ToolBoxLayoutMode,\n} from './interface';\nimport { renderToolArray, judgeShouldShow } from './util';\nimport ToolbarConfig from './config';\n\n\nconst ToolbarRenderNext: React.FC<ToolbarRenderNextInnerProps> = (props) => {\n  const {\n    controller,\n    plugins,\n    inlineLayout,\n    singleLayout,\n    doubleLayout,\n    hiddenToolButtons = {},\n    toolbarMode,\n    customToolButtons = {},\n    disableTargets,\n    style,\n    alignment,\n    autoFolding,\n    defaultToolbarMode,\n    testid,\n  } = props;\n  const defaultMode = defaultToolbarMode === ToolbarMode.double ? EToolbarMode.doubleLine : EToolbarMode.singleLine;\n  const [uiToolbarMode, setUiToolbarMode] = useState<EToolbarMode>(defaultMode);\n  const inlinetoolbarWrapperRef = useRef<HTMLDivElement>(null);\n  const handleModeChange = useCallback((mode: EToolbarMode) => {\n    setUiToolbarMode(mode);\n  }, []);\n  const getContainer = useCallback(() => inlinetoolbarWrapperRef.current || window.document.body, []);\n  const realToolbarMode = 'toolbarMode' in props ? toolbarMode : uiToolbarMode;\n  const realAutoFolding = autoFolding !== undefined ? autoFolding : realToolbarMode !== ToolbarMode.inline;\n  /**\n   * 从插件查询哪个插件被选中（暂不支持多个插件同时识别）\n   * 通过调用插件 getTarget 实现\n   */\n  const target = React.useMemo(() => {\n    const pluginsArray = plugins.array;\n    for (let i = 0; i < pluginsArray.length; i += 1) {\n      let tgt;\n      const plugin = pluginsArray[i];\n      const getTarget = plugin.toolbar && plugin.toolbar.getTarget;\n      if (getTarget) {\n        tgt = getTarget(controller);\n      }\n      if (tgt) {\n        return tgt;\n      }\n    }\n  }, [controller, plugins.array]);\n\n  /**\n   * 渲染单个 toolButton\n   * @param toolButton配置，支持直接传一个react元素\n   * @param index\n   */\n  const renderTool = (item: ToolButtonProps | React.ReactElement, index: number) => {\n    if (React.isValidElement(item)) {\n      return (\n        <ToolBox key={index}>\n          {item}\n        </ToolBox>\n      );\n    }\n    const { name, boxLayout, verticalKey, hideTargets, showTargets, verticalText, ...rest } = item;\n    // 支持分割线\n    if (name === 'ToolbarDivider') {\n      return (\n        <ToolBox key={index}>\n          <ToolbarDivider />\n        </ToolBox>\n      );\n    }\n\n    // hiddenToolButtons 优先\n    if (hiddenToolButtons[name]) return null;\n\n    // 优先从自定义组件里匹配\n    const CustomComponent = customToolButtons[name];\n\n    const [pluginName, buttonName = 'default'] = name.split('.');\n    const plugin = plugins.hash[pluginName];\n    if (!plugin && !CustomComponent) {\n      return null;\n    }\n\n    const buttons = plugin?.toolbar && plugin?.toolbar?.buttons;\n    const Component = CustomComponent || (buttons && buttons[buttonName]);\n\n    if (!Component) {\n      return null;\n    }\n\n    if (plugin?.toolbar) {\n      // 判断是否隐藏\n      const shouldShow = judgeShouldShow(target, showTargets, hideTargets);\n      if (!shouldShow) return null;\n    }\n\n    // 优先取自定义国际化文案\n    const locale = plugin?.toolbar?.locale;\n    let toolBoxName;\n    if (boxLayout === ToolBoxLayoutMode.vertical && locale) {\n      // 双行模式默认用 locale.buttonTitle 作为文案\n      toolBoxName = locale[verticalKey || 'buttonTitle'];\n    }\n    toolBoxName = verticalText || toolBoxName;\n\n    const isDoubleMode = realToolbarMode === ToolbarMode.double;\n    let toolBoxLayout = boxLayout;\n    if (!isDoubleMode && boxLayout === ToolBoxLayoutMode.vertical) {\n      // TODO: 非双行模式下忽略vertical（脏）\n      toolBoxLayout = ToolBoxLayoutMode.single;\n      console.warn('do not support vertical layout when tolbarMode is single');\n    }\n\n    // normal 属于 we-ui 用法，medium 属于 we-design 用法\n    return (\n      <ToolBox\n        name={toolBoxName}\n        layout={toolBoxLayout as unknown as EToolBoxLayout}\n        key={index}\n      >\n        <Component\n          {...rest}\n          controller={controller}\n          toolbarMode={realToolbarMode}\n          locale={locale}\n          size={isDoubleMode ? 'small' : 'medium'}\n          getContainer={toolbarMode === ToolbarMode.inline ? getContainer : undefined}\n        />\n      </ToolBox>\n    );\n  };\n\n  const renderLine = (lineProps: ToolRowProps, index: number) => {\n    const contents = renderToolArray(lineProps, 'toolButtons', target, renderTool);\n    if (!contents) return null;\n    return (\n      <ToolLine key={index}>\n        {contents}\n      </ToolLine>\n    );\n  };\n\n  const renderGroup = (groupProps: ToolGroupProps, index: number) => {\n    const contents = renderToolArray(groupProps, 'toolRows', target, renderLine);\n    if (!contents) return null;\n    return (\n      <ToolGroup key={index}>\n        {contents}\n      </ToolGroup>\n    );\n  };\n\n  /**\n   * 渲染单行工具栏\n   * @param singleLineLayout\n   */\n  const renderSingleToolbar = (singleLineLayout: ToolRowProps[] | undefined): React.ReactElement<SingleLineToolbar> | null => {\n    if (realToolbarMode === EToolbarMode.doubleLine) return null;\n    const layout = singleLineLayout || ToolbarConfig.defaultSingleLayout;\n    // @ts-ignore\n    const tls: any = layout.map((lines, idx) => renderLine(lines, idx)).filter((item) => item);\n    if (!tls.length) return null;\n    return (\n      <SingleLineToolbar\n        alignType={alignment}\n        autoFolding={realAutoFolding}\n      >\n        {tls}\n      </SingleLineToolbar>\n    );\n  };\n\n  /**\n   * 渲染双行工具栏\n   * @param doubleLineLayout\n   */\n  const renderDoubleToolbar = (doubleLineLayout: ToolGroupProps[] | undefined): React.ReactElement<DoubleLineToolbar> | null => {\n    if (realToolbarMode === EToolbarMode.singleLine) return null;\n    const layout = doubleLineLayout || ToolbarConfig.defaultDoubleLayout;\n    // @ts-ignore\n    const tgs: any = layout.map((group, index) => renderGroup(group, index)).filter((item) => item);\n    if (!tgs.length) return null;\n    return (\n      <DoubleLineToolbar\n        alignType={alignment}\n        autoFolding={realAutoFolding}\n      >\n        {tgs}\n      </DoubleLineToolbar>\n    );\n  };\n\n  /**\n   * 阻止默认事件，防止文档区域失焦\n   */\n  const handleMouseDown = useCallback((ev) => {\n    if (ev.target?.tagName.toLocaleLowerCase() !== 'input') {\n      // 放过input，以便输入地方可以正常输入\n      ev.preventDefault && ev.preventDefault();\n      ev.stopPropagation && ev.stopPropagation();\n    }\n  }, []);\n\n  const fTgts = disableTargets || ToolbarConfig.defaultDisableTargets;\n  const shouldDisableWholeToolbar = realToolbarMode !== ToolbarMode.inline && fTgts[target];\n\n  let classes = 'bi-toolbar';\n  let wrapperStyle: React.CSSProperties = {};\n  if (shouldDisableWholeToolbar) {\n    wrapperStyle = {\n      opacity: 0.4,\n      pointerEvents: 'none',\n    };\n  }\n  if (realToolbarMode === EToolbarMode.doubleLine) {\n    classes += ' double';\n  } else {\n    classes += ' single';\n  }\n\n  if (toolbarMode === ToolbarMode.inline) {\n    const layout = inlineLayout || ToolbarConfig.defaultInlineLayout;\n    return (\n      <InlineToolbarWrapper style={style} ref={inlinetoolbarWrapperRef} data-testid={testid ?? undefined}>\n        {renderSingleToolbar(layout)}\n      </InlineToolbarWrapper>\n    );\n  }\n\n  if (toolbarMode === ToolbarMode.single) {\n    return (\n      <ToolbarWrapper\n        style={{ ...wrapperStyle, ...style }}\n        className={classes}\n        onMouseDown={handleMouseDown}\n        data-testid={testid ?? undefined}\n      >\n        { renderSingleToolbar(singleLayout) }\n      </ToolbarWrapper>\n    );\n  }\n\n  if (toolbarMode === ToolbarMode.double) {\n    return renderDoubleToolbar(doubleLayout);\n  }\n\n  return (\n    <ToolbarWrapper\n      style={{ ...wrapperStyle, ...style }}\n      className={classes}\n      onMouseDown={handleMouseDown}\n      data-testid={testid ?? undefined}\n    >\n      <Toolbar\n        mode={realToolbarMode as EToolbarMode}\n        onModeChange={handleModeChange}\n        singleLineToolbar={renderSingleToolbar(singleLayout) || undefined}\n        doubleLineToolbar={renderDoubleToolbar(doubleLayout) || undefined}\n        autoFolding={realAutoFolding}\n      />\n    </ToolbarWrapper>);\n};\n\nexport default process.env.NODE_ENV === 'test'\n  ? ToolbarRenderNext\n  : idleRender(ToolbarRenderNext, 400, { leading: true });\n"],"file":"toolbarRenderNext.js"}