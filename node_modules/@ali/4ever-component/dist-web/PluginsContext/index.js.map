{"version":3,"sources":["../../../src/PluginsContext/index.tsx"],"names":["React","PluginsContext","createContext","usePlugins","useContext","connectPlugins","Component","props","plugins"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAW5B,OAAO,IAAMC,cAAc,gBAAGD,KAAK,CAACE,aAAN,CAAoC,IAApC,CAAvB;AAEP,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAOH,KAAK,CAACI,UAAN,CAAiBH,cAAjB,CAAP;AACD;AAED,OAAO,SAASI,cAAT,CACLC,SADK,EAEL;AACA,SAAO,UAACC,KAAD,EAA+B;AACpC,QAAMC,OAAO,GAAGL,UAAU,EAA1B,CADoC,CAEpC;;AACA,wBAAO,eAAC,SAAD,eAAeI,KAAf;AAAsB,MAAA,OAAO,EAAEC;AAA/B,OAAP;AACD,GAJD;AAKD","sourcesContent":["import * as React from 'react';\nimport type { Plugin } from '@ali/4ever-cangjie';\n\nexport interface Plugins {\n  array: Plugin[];\n  hash: Record<string, Plugin>;\n}\n\nexport interface PluginsInjectedProps {\n  plugins: Plugins;\n}\n\nexport const PluginsContext = React.createContext<Plugins | null>(null);\n\nexport function usePlugins() {\n  return React.useContext(PluginsContext);\n}\n\nexport function connectPlugins<P extends PluginsInjectedProps>(\n  Component: React.ComponentType<P>,\n) {\n  return (props: Omit<P, 'plugins'>) => {\n    const plugins = usePlugins();\n    // @ts-ignore\n    return <Component {...props} plugins={plugins} />;\n  };\n}\n"],"file":"index.js"}