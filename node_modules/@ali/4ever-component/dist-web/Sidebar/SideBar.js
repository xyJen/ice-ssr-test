import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Controller } from '@ali/4ever-cangjie';
import { connectPlugins } from "../PluginsContext";
import { LazyRenderer } from "./LazyRenderer";

var Sidebar = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Sidebar, _React$Component);

  function Sidebar() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.renderSidebar = function () {
      var _this$props = _this.props,
          type = _this$props.type,
          plugins = _this$props.plugins,
          controller = _this$props.controller;

      var _type$split = type.split('.'),
          pluginName = _type$split[0],
          _type$split$ = _type$split[1],
          toolName = _type$split$ === void 0 ? 'sidebar' : _type$split$;

      var plugin = plugins.hash[pluginName];

      if (!plugin || !plugin.sidebar) {
        return null;
      } // lazy render


      if (typeof plugin.sidebar === 'function') {
        return /*#__PURE__*/_createElement(LazyRenderer, {
          loader: {
            fn: function fn() {
              return plugin.sidebar();
            }
          },
          render: function render(sidebar) {
            var Component = sidebar[toolName];

            if (!Component) {
              return null;
            }

            return /*#__PURE__*/_createElement(Component, {
              controller: controller,
              locale: sidebar.locale || {},
              config: sidebar.config || {}
            });
          }
        });
      } else {
        var s = plugin.sidebar;
        var Component = s[toolName];

        if (!Component) {
          return null;
        }

        return /*#__PURE__*/_createElement(Component, {
          controller: controller,
          locale: s.locale || {},
          config: s.config || {}
        });
      }
    };

    return _this;
  }

  var _proto = Sidebar.prototype;

  _proto.render = function render() {
    return /*#__PURE__*/_createElement(React.Fragment, null, this.renderSidebar());
  };

  return Sidebar;
}(React.Component);

export default Controller.connectController(connectPlugins(Sidebar));
//# sourceMappingURL=SideBar.js.map