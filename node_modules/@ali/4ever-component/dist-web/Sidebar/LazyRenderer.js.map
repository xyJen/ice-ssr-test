{"version":3,"sources":["../../../src/Sidebar/LazyRenderer.tsx"],"names":["React","useEffect","useState","useMemo","useCallback","useRef","LazyRenderer","render","loader","fn","fallback","renderRef","loadFnRef","current","loaded","error","setError","loadFn","undefined","then","rst","setEl","e","console","placeholder","fallbackJsx","retry","el"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,WAA9C,EAA2DC,MAA3D,QAAyE,OAAzE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;qBAT4B,a;AAU5B,OAAO,SAASC,YAAT,OAWJ;AAAA,MAX+BC,MAW/B,QAX+BA,MAW/B;AAAA,MAXuCC,MAWvC,QAXuCA,MAWvC;;AAAA,cAGGA,MAAM,IAAI,EAHb;AAAA,MAECC,EAFD,SAECA,EAFD;AAAA,MAEKC,QAFL,SAEKA,QAFL,EAKD;;;AACA,MAAMC,SAAS,GAAGN,MAAM,CAACE,MAAD,CAAxB;AACA,MAAMK,SAAS,GAAGP,MAAM,CAACI,EAAD,CAAxB;AACAE,EAAAA,SAAS,CAACE,OAAV,GAAoBN,MAApB;AACAK,EAAAA,SAAS,CAACC,OAAV,GAAoBJ,EAApB,CATC,CAWD;;AACA,MAAMK,MAAM,GAAGT,MAAM,EAArB,CAZC,CAcD;;AAdC,kBAeyBH,QAAQ,EAfjC;AAAA,MAeMa,KAfN;AAAA,MAeaC,QAfb,iBAiBD;;;AACA,MAAMC,MAAM,GAAGb,WAAW,CACxB,YAAM;AACJ;AACA,QAAMK,EAAE,GAAGG,SAAS,CAACC,OAArB;;AACA,QAAIJ,EAAJ,EAAQ;AACNO,MAAAA,QAAQ,CAACE,SAAD,CAAR;AACAT,MAAAA,EAAE,GAAGU,IAAL,CAAU,UAACC,GAAD,EAAS;AACjBN,QAAAA,MAAM,CAACD,OAAP,GAAiBO,GAAjB;AACAC,QAAAA,KAAK,CAACV,SAAS,CAACE,OAAV,CAAkBO,GAAlB,CAAD,CAAL;AACD,OAHD,WAGS,UAACE,CAAD,EAAO;AACdC,QAAAA,OAAO,CAACR,KAAR,CAAc,2BAAd,EAA2CO,CAA3C;AACAN,QAAAA,QAAQ,CAACM,CAAD,CAAR;AACD,OAND;AAOD;AACF,GAduB,EAexB,EAfwB,CAA1B,CAlBC,CAoCD;;AACA,MAAME,WAAW,GAAGrB,OAAO,CAAC,YAAM;AAChC,QAAI,CAACK,MAAL,EAAa;AACX,aAAO,IAAP;AACD;;AAED,QAAMiB,WAAW,GAAG,CAAAf,QAAQ,QAAR,YAAAA,QAAQ,CAAG;AAC7BK,MAAAA,KAAK,EAALA,KAD6B;AAE7BW,MAAAA,KAAK,EAAE;AAAA,eAAMT,MAAM,EAAZ;AAAA;AAFsB,KAAH,CAAR,KAGd,IAHN;AAKA,wBACE,qCACGQ,WADH,CADF,CAVgC,CAgBhC;AACD,GAjB0B,EAiBxB,CAACV,KAAD,CAjBwB,CAA3B,CArCC,CAwDD;;AAxDC,mBAyDmBb,QAAQ,CAAqBsB,WAArB,CAzD3B;AAAA,MAyDMG,EAzDN;AAAA,MAyDUN,KAzDV;;AA2DDpB,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,KAAK,CAACG,WAAD,CAAL;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CA3DC,CA+DD;;AACAvB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,MAAM,GADQ,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAOH,MAAM,CAACD,OAAP,GAAiBN,MAAM,CAACO,MAAM,CAACD,OAAR,CAAvB,GAA0Cc,EAAjD;AACD","sourcesContent":["\nimport React, { useEffect, useState, useMemo, useCallback, useRef } from 'react';\n\n/**\n * 懒加载组件\n * \n * @param loader.fn 加载组件的函数。返回的结果会传给 render\n * @param loader.fallback 懒加载时的 placeholder。\n * @param render 渲染函数\n * @returns \n */\nexport function LazyRenderer<T>({ render, loader }: {\n  loader: {\n    // loader fn\n    fn: () => Promise<T>;\n    // fallback fn\n    fallback?: (props: {\n      error?: Error;\n      retry: () => void;\n    }) => JSX.Element;\n  };\n  render: (result?: T) => JSX.Element | null;\n}) {\n  const {\n    fn, fallback,\n  } = loader || {};\n\n  // loader 加载过程 render 可能会变，取最新一次\n  const renderRef = useRef(render);\n  const loadFnRef = useRef(fn);\n  renderRef.current = render;\n  loadFnRef.current = fn;\n\n  // 记录 loaded\n  const loaded = useRef<T | undefined>();\n\n  // 错误信息\n  const [error, setError] = useState<Error>();\n\n  // 加载函数\n  const loadFn = useCallback(\n    () => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const fn = loadFnRef.current;\n      if (fn) {\n        setError(undefined);\n        fn().then((rst) => {\n          loaded.current = rst;\n          setEl(renderRef.current(rst));\n        }).catch((e) => {\n          console.error('sidebar lazy render error', e);\n          setError(e);\n        });\n      }\n    },\n    [],\n  );\n\n  // placeholder\n  const placeholder = useMemo(() => {\n    if (!loader) {\n      return null;\n    }\n\n    const fallbackJsx = fallback?.({\n      error,\n      retry: () => loadFn(),\n    }) || null;\n\n    return (\n      <>\n        {fallbackJsx}\n      </>\n    );\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  // 加载完成的 jsx\n  const [el, setEl] = useState<JSX.Element | null>(placeholder);\n\n  useEffect(() => {\n    setEl(placeholder);\n  }, [placeholder]);\n\n  // 加载\n  useEffect(() => {\n    loadFn();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return loaded.current ? render(loaded.current) : el;\n}\n"],"file":"LazyRenderer.js"}