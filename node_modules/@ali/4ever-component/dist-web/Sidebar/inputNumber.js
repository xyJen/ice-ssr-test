import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { InputNumber } from '@ali/we-design';
import { isNumber } from 'lodash-es';
var Wrapper = /*#__PURE__*/styled.div(["display:grid;grid-template-columns:1fr 28px;justify-content:space-between;"]);
var Title = /*#__PURE__*/styled.div(["font-size:12px;margin-bottom:4px;"]);
var InputWrapper = /*#__PURE__*/styled.div(["grid-column-start:1;grid-column-end:2;.image-sidebar-common-input{flex:1;}"]);
var InputUnit = /*#__PURE__*/styled.span(["display:inline-block;width:28px;line-height:28px;margin-left:4px;"]);
export var InputNumberItem = function InputNumberItem(props) {
  var title = props.title,
      unit = props.unit,
      onChange = props.onChange,
      value = props.value,
      max = props.max,
      min = props.min,
      _props$step = props.step,
      step = _props$step === void 0 ? 1 : _props$step,
      style = props.style,
      name = props.name,
      disabled = props.disabled,
      _props$precision = props.precision,
      precision = _props$precision === void 0 ? 2 : _props$precision,
      testid = props.testid,
      role = props.role;
  var ref = React.useRef();

  var _React$useState = React.useState(value),
      displayValue = _React$useState[0],
      setDisplayValue = _React$useState[1];

  var handleChange = React.useCallback(function (change) {
    setDisplayValue(change);
  }, []);
  var handleBlur = React.useCallback(function () {
    if (!isNumber(displayValue) || isNaN(displayValue) || isNumber(max) && displayValue > max || isNumber(min) && displayValue < min) {
      setDisplayValue(value);
      return;
    }

    onChange(displayValue);
  }, [displayValue, onChange, value, max, min]);
  var handlePressEnter = React.useCallback(function () {
    var _ref$current;

    ref == null ? void 0 : (_ref$current = ref.current) == null ? void 0 : _ref$current.blur();
  }, []);
  var handleStep = React.useCallback(function (value, info) {
    onChange(value);
  }, [onChange]);
  React.useEffect(function () {
    setDisplayValue(value);
  }, [value]);
  return /*#__PURE__*/_createElement(Wrapper, {
    style: style
  }, /*#__PURE__*/_createElement(Title, null, title), /*#__PURE__*/_createElement(InputWrapper, {
    "data-role": role
  }, /*#__PURE__*/_createElement(InputNumber, {
    precision: precision,
    onChange: handleChange,
    onBlur: handleBlur,
    onPressEnter: handlePressEnter,
    onStep: handleStep,
    value: Number.isNaN(displayValue) ? undefined : displayValue,
    max: max,
    min: min,
    step: step,
    className: "image-sidebar-common-input",
    ref: ref,
    name: name,
    disabled: disabled,
    testid: testid
  })), unit && /*#__PURE__*/_createElement(InputUnit, null, unit));
};
export var CustomInputNumberItem = function CustomInputNumberItem(props) {
  var title = props.title,
      content = props.content,
      style = props.style;
  return /*#__PURE__*/_createElement(Wrapper, {
    style: style
  }, /*#__PURE__*/_createElement(Title, null, title), /*#__PURE__*/_createElement(InputWrapper, null, content));
};
//# sourceMappingURL=inputNumber.js.map