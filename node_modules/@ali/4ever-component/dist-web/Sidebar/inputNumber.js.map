{"version":3,"sources":["../../../src/Sidebar/inputNumber.tsx"],"names":["React","styled","InputNumber","isNumber","Wrapper","div","Title","InputWrapper","InputUnit","span","InputNumberItem","props","title","unit","onChange","value","max","min","step","style","name","disabled","precision","testid","role","ref","useRef","useState","displayValue","setDisplayValue","handleChange","useCallback","change","handleBlur","isNaN","handlePressEnter","current","blur","handleStep","info","useEffect","Number","undefined","CustomInputNumberItem","content"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { InputNumber } from '@ali/we-design';\nimport { isNumber } from 'lodash-es';\n\ninterface IInputNumberProps {\n  name: string;\n  title?: string;\n  unit?: string;\n  onChange: (value: number | string) => void;\n  min?: number;\n  max?: number;\n  value: number;\n  step?: number;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  disabled?: boolean;\n  precision?: number;\n  testid?: string;\n  role?: string;\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 28px;\n  justify-content: space-between;\n`;\nconst Title = styled.div`\n  font-size: 12px;\n  margin-bottom: 4px;\n`;\n\nconst InputWrapper = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 2;\n  .image-sidebar-common-input {\n    flex: 1;\n  }\n`;\n\nconst InputUnit = styled.span`\n  display: inline-block;\n  width: 28px;\n  line-height: 28px;\n  margin-left: 4px;\n`;\n\nexport const InputNumberItem: React.FC<IInputNumberProps> = (props) => {\n  const { title, unit, onChange, value, max, min, step = 1, style, name, disabled, precision = 2, testid, role } = props;\n  const ref = React.useRef<any>();\n  const [displayValue, setDisplayValue] = React.useState(value);\n  const handleChange = React.useCallback((change) => {\n    setDisplayValue(change);\n  }, []);\n\n  const handleBlur = React.useCallback(() => {\n    if (!isNumber(displayValue) || isNaN(displayValue) || (isNumber(max) && displayValue > max) || (isNumber(min) && displayValue < min)) {\n      setDisplayValue(value);\n      return;\n    }\n    onChange(displayValue);\n  }, [displayValue, onChange, value, max, min]);\n\n  const handlePressEnter = React.useCallback(() => {\n    ref?.current?.blur();\n  }, []);\n\n  const handleStep = React.useCallback((value, info) => {\n    onChange(value);\n  }, [onChange]);\n\n  React.useEffect(() => {\n    setDisplayValue(value);\n  }, [value]);\n\n  return (\n    <Wrapper style={style}>\n      <Title>{title}</Title>\n      <InputWrapper data-role={role}>\n        <InputNumber\n          precision={precision}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onPressEnter={handlePressEnter}\n          onStep={handleStep}\n          value={Number.isNaN(displayValue) ? undefined : displayValue}\n          max={max}\n          min={min}\n          step={step}\n          className=\"image-sidebar-common-input\"\n          ref={ref}\n          name={name}\n          disabled={disabled}\n          testid={testid}\n        />\n      </InputWrapper>\n      {\n        unit && (\n          <InputUnit>\n            {unit}\n          </InputUnit>\n        )\n      }\n    </Wrapper>\n  );\n};\n\nexport interface ICustomInputNumberItemProps {\n  title: string;\n  content: React.ReactNode;\n  style: React.CSSProperties;\n}\n\nexport const CustomInputNumberItem: React.FC<ICustomInputNumberItemProps> = (props) => {\n  const { title, content, style } = props;\n  return (\n    <Wrapper style={style}>\n      <Title>{title}</Title>\n      <InputWrapper>\n        { content }\n      </InputWrapper>\n    </Wrapper>\n  )\n }\n"],"file":"inputNumber.js"}