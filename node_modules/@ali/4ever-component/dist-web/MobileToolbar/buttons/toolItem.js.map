{"version":3,"sources":["../../../../src/MobileToolbar/buttons/toolItem.tsx"],"names":["React","useSubline","usePanel","useItemClick","useSide","icons","Boxes","Outers","ImageIcon","itemToKey","ToolItemButton","props","item","style","onClick","type","width","children","isActive","isFocused","isDisabled","icon","lineText","openSubLine","subLine","closeSubLine","openPanel","panelItem","closePanel","controller","isStart","isEnd","onItemClick","useState","isTouched","setIsTouched","startTouch","useCallback","event","stopPropagation","endTouch","handleClick","preventDefault","target","closest","closePanelOnClick","hideToolbarOnClick","run","dataKey","useMemo","OuterBox","Box","isIconKey","BaseIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useSubline, usePanel, useItemClick } from '../hooks';\nimport { useSide } from '../hooks/buttonSide';\nimport { ButtonWrapperProps } from '../types';\nimport * as icons from '../icons';\nimport { Boxes, Outers, ImageIcon } from './styled';\nimport { itemToKey } from '../constant';\n\nexport default function ToolItemButton(props: ButtonWrapperProps) {\n  const {\n    item,\n    style,\n    onClick,\n    type,\n    width,\n    children,\n    isActive = false,\n    isFocused = false,\n    isDisabled,\n    icon,\n    lineText,\n  } = props;\n  const { openSubLine, item: subLine, closeSubLine } = useSubline();\n  const { openPanel, item: panelItem, closePanel, controller } = usePanel();\n  const { isStart, isEnd } = useSide();\n  const onItemClick = useItemClick();\n  const [isTouched, setIsTouched] = React.useState(false);\n\n  const startTouch = React.useCallback(\n    (event: React.MouseEvent | React.TouchEvent) => {\n      event.stopPropagation();\n      setIsTouched(true);\n    },\n    [],\n  );\n  const endTouch = React.useCallback(\n    (event: React.MouseEvent | React.TouchEvent) => {\n      event.stopPropagation();\n      setIsTouched(false);\n    },\n    [],\n  );\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      setIsTouched(false);\n      if (isDisabled) {\n        return;\n      }\n\n      // 如果点到了引导等无关的内容，这里忽略掉\n      if (\n        // @ts-ignore\n        typeof event.target.closest === 'function' &&\n        // @ts-ignore\n        event.target.closest('.highIndexPopover')\n      ) {\n        return;\n      }\n      // 全局的 onClick\n      onItemClick && onItemClick(item);\n\n      // 如果有 closePanelOnClick / hideToolbarOnClick 标记，先处理一下\n      if (typeof item !== 'string') {\n        // 关闭底部 panel 并 show 键盘\n        if (item.closePanelOnClick) {\n          panelItem && closePanel && closePanel(true);\n        }\n        // 关闭底部 panel 并 blur 键盘\n        if (item.hideToolbarOnClick) {\n          panelItem && closePanel && closePanel(false);\n          controller?.run('onCangjieBlur');\n        }\n      }\n\n      // 如果定义了自己的 onClick，开始回调\n      if (typeof item !== 'string' && item.onClick) {\n        item.onClick();\n      }\n\n      // 处理二级浮窗\n      if (subLine && subLine === item) {\n        closeSubLine && closeSubLine();\n      } else if (panelItem && panelItem === item) {\n        closePanel && closePanel();\n      } else if (typeof item === 'object' && item.children) {\n        openSubLine && openSubLine(item);\n      } else {\n        openPanel && openPanel(item);\n      }\n\n      // 处理标准的 onClick\n      onClick && onClick(item);\n    },\n    [\n      isDisabled,\n      onItemClick,\n      item,\n      subLine,\n      panelItem,\n      onClick,\n      closePanel,\n      controller,\n      closeSubLine,\n      openSubLine,\n      openPanel,\n    ],\n  );\n\n  const dataKey = React.useMemo(() => itemToKey(item), [item]);\n\n  const OuterBox = Outers[type];\n  const Box = Boxes[type];\n  const isIconKey = typeof icon === 'string' && icons[icon];\n  const BaseIcon = isIconKey ? icons[icon] : icon;\n\n  return (\n    <OuterBox\n      flexWidth={width || 1}\n      onTouchStart={startTouch}\n      onTouchEnd={endTouch}\n      onTouchCancel={endTouch}\n      onMouseDown={handleClick}\n      isTouched={isTouched}\n      isActive={isActive}\n      isFocused={isFocused}\n    >\n      <Box\n        data-toolbar-box\n        data-toolbar-key={dataKey}\n        style={style}\n        isActive={isActive}\n        isFocused={isFocused}\n        isDisabled={isDisabled}\n        isStart={isStart}\n        isEnd={isEnd}\n      >\n        {typeof BaseIcon === 'string' && <ImageIcon src={BaseIcon} />}\n        {typeof BaseIcon === 'function' && <BaseIcon />}\n        {!!children && children}\n        {!!lineText && <div>{lineText}</div>}\n      </Box>\n    </OuterBox>\n  );\n}\n"],"file":"toolItem.js"}