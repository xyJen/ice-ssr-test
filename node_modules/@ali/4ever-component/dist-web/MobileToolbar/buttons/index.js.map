{"version":3,"sources":["../../../../src/MobileToolbar/buttons/index.tsx"],"names":["React","DIVIDER","DIVIDER_VERT","NEW_LINE","ALIGN_PLACEHOLDER","DIVIDER_NONE","ToolItemButton","SideContext","usePanel","useSubline","NewLine","Divider","AlignIcon","GroupTitle","DividerVert","keyboard","name","Component","Wrapper","closePanel","controller","panelShowing","rest","item","handleClick","useCallback","run","style","useMemo","transition","transform","PluginButton","props","plugins","isStart","isEnd","split","pluginName","buttonName","plugin","hash","toolbar","buttons","locale","sideValue","value","selection","ItemView","rawItem","parsedItem","openPanel","panelItem","subLineItem","subLineShowing","title"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\n\nimport { MobileToolbarItem, MobileToolbarButtonProps, Plugins } from '../types';\nimport {\n  DIVIDER,\n  DIVIDER_VERT,\n  NEW_LINE,\n  ALIGN_PLACEHOLDER,\n  DIVIDER_NONE,\n} from '../constant';\nimport ToolItemButton from './toolItem';\nimport { SideContext } from '../hooks/buttonSide';\nimport { usePanel, useSubline } from '../hooks/index';\nimport { NewLine, Divider, AlignIcon, GroupTitle } from './styled';\nimport { Divider as DividerVert } from '../components/styled';\n\ninterface CommonProps {\n  controller: Controller;\n  plugins: Plugins;\n  isStart?: boolean;\n  isEnd?: boolean;\n}\n\ninterface PluginToolbarProps extends CommonProps {\n  item: MobileToolbarItem;\n  closePanel: MobileToolbarButtonProps['closePanel'];\n}\n\ninterface ItemViewProps extends CommonProps {\n  item: MobileToolbarItem;\n}\n\nconst keyboard: MobileToolbarItem = {\n  name: 'keyboard',\n  Component: ({ Wrapper, closePanel, controller, panelShowing, ...rest }) => {\n    const { item } = usePanel();\n    const handleClick = React.useCallback(() => {\n      if (item) {\n        closePanel && closePanel();\n      } else {\n        controller.run('onCangjieBlur');\n      }\n    }, [item, closePanel, controller]);\n    const style: React.CSSProperties = React.useMemo(() => {\n      return item\n        ? { transition: 'transform 0.3s' }\n        : { transition: 'transform 0.3s', transform: 'scale(1, -1)' };\n    }, [item]);\n    return (\n      <Wrapper\n        style={style}\n        onClick={handleClick}\n        type=\"big\"\n        {...rest}\n        icon=\"keybrdUp\"\n      />\n    );\n  },\n};\n\n/**\n * toolbar 按钮的逻辑，和 PC 端保持一致，从插件里拿 toolbar 字段\n *\n * 如果仅有 name，没有 Component，会被视为「插件按钮」\n */\nfunction PluginButton(props: PluginToolbarProps) {\n  const { item, plugins, controller, isStart, isEnd, closePanel } = props;\n  const name = typeof item === 'string' ? item : item.name;\n  const [pluginName, buttonName = 'mobile'] = name.split('.');\n  const plugin = plugins.hash[pluginName];\n  const { buttons = {}, locale = {} } = plugin?.toolbar || {};\n  const Component = buttons[\n    buttonName\n  ] as React.ComponentType<MobileToolbarButtonProps>;\n\n  const sideValue = React.useMemo(\n    () => ({\n      isStart,\n      isEnd,\n    }),\n    [isStart, isEnd],\n  );\n\n  if (!Component) {\n    return null;\n  }\n  return (\n    <SideContext.Provider value={sideValue}>\n      <Component\n        controller={controller}\n        locale={locale}\n        item={item}\n        panelShowing={false}\n        subLineShowing={false}\n        closePanel={closePanel}\n        Wrapper={ToolItemButton}\n        selection={controller.value.selection}\n      />\n    </SideContext.Provider>\n  );\n}\n\n/**\n * toolbar 按钮渲染逻辑，这里会处理分割线、新行等逻辑\n */\nexport default function ItemView(props: ItemViewProps) {\n  const { item: rawItem, controller } = props;\n  const item = React.useMemo(() => {\n    const parsedItem = rawItem === 'keyboard' ? keyboard : rawItem;\n    return typeof parsedItem === 'string' ? { name: parsedItem } : parsedItem;\n  }, [rawItem]);\n  const { Component } = item;\n  const { closePanel, openPanel, item: panelItem } = usePanel();\n  const { item: subLineItem } = useSubline();\n  const panelShowing = panelItem === rawItem;\n  const subLineShowing = subLineItem === rawItem;\n\n  if (item.name === DIVIDER_NONE || !item.name) {\n    return null;\n  }\n\n  if (item.name === DIVIDER) {\n    return <Divider />;\n  }\n\n  if (item.name === DIVIDER_VERT) {\n    return <DividerVert />;\n  }\n\n  if (item.name === NEW_LINE) {\n    return <NewLine />;\n  }\n\n  if (item.name === ALIGN_PLACEHOLDER) {\n    return <AlignIcon />;\n  }\n\n  if (item.title) {\n    return <GroupTitle>{item.title}</GroupTitle>;\n  }\n\n  if (Component) {\n    return (\n      <Component\n        item={item}\n        panelItem={panelItem}\n        subLineItem={subLineItem}\n        panelShowing={panelShowing}\n        subLineShowing={subLineShowing}\n        closePanel={closePanel}\n        openPanel={openPanel}\n        Wrapper={ToolItemButton}\n        controller={controller}\n        selection={controller.value.selection}\n      />\n    );\n  }\n  return <PluginButton {...props} item={item} closePanel={closePanel} />;\n}\n"],"file":"index.js"}