import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { usePanel } from "../hooks";
import { blockEvent } from "../utils";
import { close as CloseIcon } from "../icons";
import Line from "../components/line";
import Header from "./header";
import { BottomPanelWrapper, PanelContentWrapper, CloseButtonWrapper, HEADER_BG } from "./styled";
var PANEL_TRANSITION_SHORT = 'none';
var PANEL_TRANSITION_LONG = 'opacity 350ms, transform 350ms';
var HEADER_BG_FADING = '#ffa39e';

var _ref2 = /*#__PURE__*/_createElement(CloseIcon, null);

function CloseButton(_ref) {
  var onClick = _ref.onClick;

  var _React$useState = React.useState(false),
      isTouched = _React$useState[0],
      setIsTouched = _React$useState[1];

  var startTouch = React.useCallback(function (event) {
    event.stopPropagation();
    setIsTouched(true);
  }, []);
  var endTouch = React.useCallback(function (event) {
    event.stopPropagation();
    setIsTouched(false);
  }, []);
  return /*#__PURE__*/_createElement(CloseButtonWrapper, {
    onTouchStart: startTouch,
    onTouchEnd: endTouch,
    onTouchCancel: endTouch,
    onMouseDown: onClick,
    isTouched: isTouched
  }, _ref2);
}

function BottomPanel(props) {
  var children = props.children,
      title = props.title,
      icon = props.icon,
      height = props.height,
      layout = props.layout,
      controller = props.controller,
      plugins = props.plugins;

  var _usePanel = usePanel(),
      closePanel = _usePanel.closePanel;

  var ref = React.useRef(null);
  var offsetRef = React.useRef(0);
  var isFadingRef = React.useRef(false);

  var handleDragStatusChange = function handleDragStatusChange(isDragging) {
    var domNode = ref.current;

    if (!domNode) {
      return;
    }

    var transition = isDragging ? PANEL_TRANSITION_SHORT : PANEL_TRANSITION_LONG;
    domNode.style.transition = transition;
    isFadingRef.current = false;
    requestAnimationFrame(function () {
      if (offsetRef.current < 100) {
        domNode.style.transform = 'translate3d(0,0,0)';
      } else {
        closePanel && closePanel();
      }
    });
  };

  var handleDragOffsetChange = function handleDragOffsetChange(rawOffset) {
    var domNode = ref.current;

    if (!domNode) {
      return;
    }

    var offset = rawOffset > 0 ? rawOffset : 0;
    domNode.style.transform = "translate3d(0," + offset + "px,0)";
    offsetRef.current = offset;
    var isFading = offset >= 100;

    if (isFading !== isFadingRef.current) {
      isFadingRef.current = isFading;
      var color = isFading ? HEADER_BG_FADING : HEADER_BG;
      var headerNode = domNode.querySelector('[data-panel-header]');

      if (headerNode) {// headerNode.style.background = color;
      }
    }
  };

  return /*#__PURE__*/_createElement(BottomPanelWrapper, {
    "data-toobar-subpanel": true,
    height: height,
    ref: ref,
    onMouseDown: blockEvent
  }, /*#__PURE__*/_createElement(CloseButton, {
    onClick: closePanel
  }), !title && /*#__PURE__*/_createElement(Line, {
    layout: layout,
    controller: controller,
    plugins: plugins
  }), !!title && /*#__PURE__*/_createElement(Header, {
    title: title,
    Icon: icon,
    onDragOffsetChange: handleDragOffsetChange,
    onDragStatusChange: handleDragStatusChange
  }), /*#__PURE__*/_createElement(PanelContentWrapper, null, children));
}

export default BottomPanel;
//# sourceMappingURL=index.js.map