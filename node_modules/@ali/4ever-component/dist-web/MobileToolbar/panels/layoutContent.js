/* eslint-disable @typescript-eslint/consistent-type-definitions */
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import ItemView from "../buttons";
import { DIVIDER, NEW_LINE, DIVIDER_NONE } from "../constant";
import { GroupWrapper, ContentWrapper, SectionDivider } from "./styled";

function Group(_ref) {
  var items = _ref.items,
      controller = _ref.controller,
      plugins = _ref.plugins,
      borderless = _ref.borderless;
  return /*#__PURE__*/_createElement(GroupWrapper, {
    borderless: borderless
  }, items.map(function (item, index) {
    var isStart = index === 0 || items[index - 1] === DIVIDER || items[index - 1] === DIVIDER_NONE || items[index - 1] === NEW_LINE;
    var isEnd = index === items.length - 1 || items[index + 1] === DIVIDER || items[index + 1] === DIVIDER_NONE || items[index + 1] === NEW_LINE;
    return /*#__PURE__*/_createElement(ItemView, {
      key: typeof item === 'string' ? item + "_" + index : item.name,
      item: item,
      isStart: isStart,
      isEnd: isEnd,
      controller: controller,
      plugins: plugins
    });
  }));
}

var _ref3 = /*#__PURE__*/_createElement(SectionDivider, null);

function LayoutPanel(_ref2) {
  var controller = _ref2.controller,
      plugins = _ref2.plugins,
      layout = _ref2.layout;
  return /*#__PURE__*/_createElement(ContentWrapper, {
    "data-toolbar-panel-layout": true
  }, layout.map(function (group, index) {
    return /*#__PURE__*/_createElement(React.Fragment, {
      key: group.key
    }, index !== 0 && _ref3, /*#__PURE__*/_createElement(Group, {
      items: group.items,
      borderless: group.borderless,
      controller: controller,
      plugins: plugins
    }));
  }));
}

export default LayoutPanel;
//# sourceMappingURL=layoutContent.js.map