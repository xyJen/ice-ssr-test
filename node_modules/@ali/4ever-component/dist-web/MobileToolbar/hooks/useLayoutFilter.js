import React from 'react';
import { debounce } from 'lodash-es';
export default function useResizer(allLayout) {
  var _React$useState = React.useState(Math.round(window.innerWidth)),
      width = _React$useState[0],
      setWidth = _React$useState[1];

  React.useEffect(function () {
    var handleResize = debounce(function () {
      var w = Math.round(window.innerWidth);
      setWidth(w);
    }, 100);
    window.addEventListener('resize', handleResize);
    return function () {
      handleResize.cancel();
      window.removeEventListener('resize', handleResize);
    };
  }, []);
  var layout = React.useMemo(function () {
    var newLayout = allLayout.filter(function (_ref) {
      var widthRange = _ref.widthRange;

      if (!widthRange) {
        return true;
      }

      var start = widthRange[0],
          _widthRange$ = widthRange[1],
          end = _widthRange$ === void 0 ? Number.MAX_SAFE_INTEGER : _widthRange$;

      if (width >= start && width < end) {
        return true;
      }

      return false;
    });
    return newLayout;
  }, [allLayout, width]);
  return layout;
}
//# sourceMappingURL=useLayoutFilter.js.map