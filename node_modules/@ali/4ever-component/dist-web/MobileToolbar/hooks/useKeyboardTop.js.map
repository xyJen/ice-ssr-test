{"version":3,"sources":["../../../../src/MobileToolbar/hooks/useKeyboardTop.ts"],"names":["React","BOTTOM_BAR_SIZE","MAX_HEIGHT","IPAD_KEYBOARD_DELAY","IOS_KEYBOARD_DELAY","PANEL_MIN_HEIGHT","INPUT_ELEMENTS","HTMLInputElement","HTMLTextAreaElement","useKeyboardTop","isPanelShowing","panelOpsRef","wrapperRef","useMemo","activeElement","window","document","innerHeight","Math","round","isFocused","some","E","fullHeight","sqHeight","initFocus","initFullHeight","initSqHeight","useState","setFullHeight","squeezedHeight","setSqueezedHeight","useEffect","timer","focusedNow","width","innerWidth","delayUpdator","time","clearTimeout","setTimeout","ele","current","safeAreaTop","parseInt","getComputedStyle","getPropertyValue","item","closePanel","focusUpdator","resizeUpdator","handleFocus","handleBlur","addEventListener","capture","removeEventListener","actualHeight","min","top"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BOTTOM_BAR_SIZE } from '../constant';\n\n// 未知高度时，找个很大值来表示\nconst MAX_HEIGHT = 10000;\n// iPad 接 keyboard 时，focus 后隔很久（约 600ms）才会发 resize 事件，这里取 700 避免闪烁\nconst IPAD_KEYBOARD_DELAY = 700;\n// iOS keyboard 事件。在 IM 场景里，实时汇报的 window.innerHeight 不正确，因此 delay 一下\nconst IOS_KEYBOARD_DELAY = 300;\n// 底部面板的最小高度\nconst PANEL_MIN_HEIGHT = 220;\n\nconst INPUT_ELEMENTS = [HTMLInputElement, HTMLTextAreaElement];\n\nexport default function useKeyboardTop(\n  isPanelShowing: boolean,\n  panelOpsRef: React.RefObject<{\n    item?: any;\n    closePanel: Function;\n  }>,\n  wrapperRef: React.RefObject<HTMLDivElement | null>,\n) {\n  const [initFocus, initFullHeight, initSqHeight] = React.useMemo(() => {\n    const { activeElement } = window.document;\n    const innerHeight = Math.round(window.innerHeight);\n    const isFocused = INPUT_ELEMENTS.some((E) => activeElement instanceof E);\n    const fullHeight = isFocused ? MAX_HEIGHT : innerHeight;\n    const sqHeight = isFocused ? innerHeight : MAX_HEIGHT;\n    return [isFocused, fullHeight, sqHeight];\n  }, []);\n  const [fullHeight, setFullHeight] = React.useState(initFullHeight);\n  const [squeezedHeight, setSqueezedHeight] = React.useState(initSqHeight);\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const { activeElement } = window.document;\n    let focusedNow = INPUT_ELEMENTS.some((E) => activeElement instanceof E);\n    let width = Math.round(window.innerWidth);\n    const delayUpdator =\n      (time = 0) =>\n      () => {\n        timer && clearTimeout(timer);\n        timer = setTimeout(() => {\n          const innerHeight = Math.round(window.innerHeight);\n          const innerWidth = Math.round(window.innerWidth);\n          if (focusedNow) {\n            const ele = wrapperRef.current;\n            const safeAreaTop = ele\n              ? parseInt(\n                  window.getComputedStyle(ele).getPropertyValue('--sab'),\n                  10,\n                ) || 0\n              : 0;\n            setSqueezedHeight(innerHeight - safeAreaTop);\n          } else {\n            setFullHeight(innerHeight);\n          }\n          if (innerWidth !== width && panelOpsRef.current) {\n            width = innerWidth;\n            panelOpsRef.current.item && panelOpsRef.current.closePanel();\n          }\n        }, time);\n      };\n\n    /**\n     * 默认只需要 resize 时 setHeight，focus 时取消 timer 就好\n     * 但是这个依赖浏览器的时机，需要 focus 先触发、resize 后触发。\n     *\n     * 为了避免兼容问题，在 focus 时也加了 setHeight 来兜底\n     */\n    const focusUpdator = delayUpdator(IPAD_KEYBOARD_DELAY);\n    const resizeUpdator = delayUpdator(IOS_KEYBOARD_DELAY);\n\n    if (focusedNow !== initFocus) {\n      resizeUpdator();\n    }\n\n    const handleFocus = () => {\n      focusedNow = true;\n      focusUpdator();\n    };\n    const handleBlur = () => {\n      focusedNow = false;\n      focusUpdator();\n    };\n    window.addEventListener('focus', handleFocus, { capture: true });\n    window.addEventListener('blur', handleBlur, { capture: true });\n    window.addEventListener('resize', resizeUpdator, { capture: true });\n    return () => {\n      timer && clearTimeout(timer);\n      window.removeEventListener('focus', handleFocus, { capture: true });\n      window.removeEventListener('blur', handleBlur, { capture: true });\n      window.removeEventListener('resize', resizeUpdator, { capture: true });\n    };\n  }, [initFocus, panelOpsRef, wrapperRef]);\n\n  // iPad 外接键盘场景，toolbar 在最底部。这里保障有一个最小高度\n  const actualHeight = isPanelShowing\n    ? Math.min(squeezedHeight, fullHeight - PANEL_MIN_HEIGHT)\n    : squeezedHeight;\n\n  const top = actualHeight - BOTTOM_BAR_SIZE;\n  return top;\n}\n"],"file":"useKeyboardTop.js"}