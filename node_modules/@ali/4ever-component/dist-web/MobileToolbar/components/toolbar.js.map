{"version":3,"sources":["../../../../src/MobileToolbar/components/toolbar.tsx"],"names":["React","ReactDOM","styled","Commands","ACTION_CLEAR_MOBILE_MENU","Line","LayoutContent","PanelContext","ItemClickContext","SublineContext","useVisualboxTransfrom","enterFocusMode","exitFocusMode","useKeyboardTop","useExternalClick","ContentWrapper","BottomSafeArea","ToolbarWrapper","usePrev","useContentScroll","defaultVisualBoxDisabled","test","location","host","blockEvent","event","stopPropagation","preventDefault","ToolbarRender","props","layout","controller","plugins","onItemClick","onPanelOps","onBottomPanelChange","useVisualBox","isFocused","value","useState","panelItem","setPanelItem","toolbarWrapperRef","useRef","measureRef","isVisualBoxDisabled","subLine","setSubline","subLineOps","useMemo","openSubLine","item","newSubLine","children","length","undefined","closeSubLine","panelOpsRef","panelOps","ops","openPanel","rawItem","run","type","name","panel","setTimeout","command","moveToFocus","closePanel","autoFocus","current","useEffect","prev","useCallback","closeAllPopup","PanelContent","content","panelObj","top","Boolean","MeasureFullSize","div","MesaureBlock","forwardRef","_","ref","createPortal","window","document","body"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport {\n  Controller,\n  Commands,\n  ACTION_CLEAR_MOBILE_MENU,\n} from '@ali/4ever-cangjie';\n\nimport { MobileToolbarItem, MobileToolbarProps, Plugins } from '../types';\nimport Line from './line';\nimport LayoutContent from '../panels/layoutContent';\nimport { PanelContext, ItemClickContext, SublineContext } from '../hooks';\nimport { useVisualboxTransfrom } from '../adapter/visualViewport';\nimport { enterFocusMode, exitFocusMode } from '../adapter/focusUtil';\nimport useKeyboardTop from '../hooks/useKeyboardTop';\nimport { useExternalClick } from '../hooks/useExternalClick';\nimport { ContentWrapper } from '../panels/styled';\nimport { BottomSafeArea, ToolbarWrapper } from './styled';\nimport usePrev from '../hooks/usePrev';\nimport useContentScroll from '../hooks/useContentScroll';\n\nconst defaultVisualBoxDisabled = /docs\\.dingtalk\\.com/.test(location.host);\n\nexport interface IProps extends MobileToolbarProps {\n  controller: Controller;\n  plugins: Plugins;\n}\n\nconst blockEvent = (event: React.MouseEvent) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n\nexport default function ToolbarRender(props: IProps) {\n  const {\n    layout,\n    controller,\n    plugins,\n    onItemClick,\n    onPanelOps,\n    onBottomPanelChange,\n    useVisualBox,\n  } = props;\n  const { isFocused } = controller.value;\n  const [panelItem, setPanelItem] = React.useState<MobileToolbarItem>();\n  const toolbarWrapperRef = React.useRef<HTMLDivElement | null>(null);\n  const measureRef = React.useRef<HTMLDivElement | null>(null);\n  const isVisualBoxDisabled =\n    typeof useVisualBox === 'boolean'\n      ? !useVisualBox\n      : defaultVisualBoxDisabled;\n\n  const [subLine, setSubline] = React.useState<MobileToolbarItem | undefined>();\n  const subLineOps = React.useMemo(() => {\n    return {\n      openSubLine: (item: MobileToolbarItem) => {\n        const newSubLine =\n          typeof item !== 'string' && item.children?.length && item !== subLine\n            ? item\n            : undefined;\n        if (newSubLine !== subLine) {\n          setSubline(newSubLine);\n        }\n      },\n      closeSubLine: () => {\n        setSubline(undefined);\n      },\n      item: subLine,\n    };\n  }, [subLine]);\n\n  const panelOpsRef = React.useRef<{ closePanel: Function } | null>(null);\n  const panelOps = React.useMemo(() => {\n    const ops = {\n      openPanel: (rawItem: MobileToolbarItem) => {\n        controller.run('onAction', { type: ACTION_CLEAR_MOBILE_MENU });\n        const item = typeof rawItem === 'string' ? { name: rawItem } : rawItem;\n        if (item.panel) {\n          // fake blur mode - on\n          setPanelItem(item);\n          // 过一阵子再收键盘，不然会透出底部的内容、看起来闪烁一下\n          setTimeout(() => {\n            enterFocusMode(controller);\n          }, 0);\n        } else if (item.name === 'keyboard') {\n          controller.command(Commands.moveToFocus).run('onCangjieBlur');\n        }\n      },\n      controller,\n      closePanel: (autoFocus = true) => {\n        // fake blur mode - off\n        setPanelItem(undefined);\n        exitFocusMode(controller, autoFocus);\n      },\n      item: panelItem,\n    };\n    panelOpsRef.current = ops;\n    return ops;\n  }, [controller, panelItem]);\n  React.useEffect(() => {\n    onPanelOps && onPanelOps(panelOps);\n  }, [onPanelOps, panelOps]);\n\n  const prev = usePrev({ panelItem, subLine });\n  React.useEffect(() => {\n    if (subLine && panelItem) {\n      if (prev.panelItem) {\n        panelOps.closePanel();\n      } else {\n        subLineOps.closeSubLine();\n      }\n    }\n  }, [panelItem, panelOps, prev.panelItem, subLine, subLineOps]);\n\n  React.useEffect(() => {\n    onBottomPanelChange &&\n      onBottomPanelChange(panelOps.item, panelOps.closePanel);\n  }, [onBottomPanelChange, panelOps]);\n\n  const closePanel = React.useCallback(() => {\n    panelOps.item && panelOps.closePanel();\n  }, [panelOps]);\n  const closeSubLine = React.useCallback(() => {\n    subLineOps.item && subLineOps.closeSubLine();\n  }, [subLineOps]);\n  const closeAllPopup = React.useCallback(() => {\n    closePanel();\n    closeSubLine();\n  }, [closePanel, closeSubLine]);\n  useExternalClick(toolbarWrapperRef, closeAllPopup);\n  useVisualboxTransfrom(toolbarWrapperRef, measureRef, isVisualBoxDisabled);\n\n  React.useEffect(() => {\n    if (!isFocused && panelOps.item) {\n      panelOps.closePanel(false);\n    }\n  }, [isFocused, panelOps]);\n\n  const panel =\n    panelItem && typeof panelItem !== 'string' ? panelItem.panel : undefined;\n  const { content: PanelContent } = panel || {};\n  const panelObj = typeof PanelContent === 'object' ? PanelContent : null;\n  const top = useKeyboardTop(\n    Boolean(panelItem),\n    panelOpsRef,\n    toolbarWrapperRef,\n  );\n  useContentScroll(subLine, panelItem, controller, top);\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <PanelContext.Provider value={panelOps}>\n      <SublineContext.Provider value={subLineOps}>\n        <ItemClickContext.Provider value={onItemClick}>\n          <ToolbarWrapper\n            data-toolbar-wrapper\n            style={{ top }}\n            onMouseDown={blockEvent}\n            onMouseUp={blockEvent}\n            ref={toolbarWrapperRef}\n          >\n            <Line layout={layout} controller={controller} plugins={plugins} />\n            {panelObj && (\n              <LayoutContent\n                layout={panelObj}\n                controller={controller}\n                plugins={plugins}\n              />\n            )}\n            {PanelContent && typeof PanelContent !== 'object' && (\n              <ContentWrapper data-toolbar-panel-custom>\n                <PanelContent controller={controller} />\n              </ContentWrapper>\n            )}\n            {isVisualBoxDisabled && <BottomSafeArea />}\n            {!isVisualBoxDisabled && <MesaureBlock ref={measureRef} />}\n          </ToolbarWrapper>\n        </ItemClickContext.Provider>\n      </SublineContext.Provider>\n    </PanelContext.Provider>\n  );\n}\n\nconst MeasureFullSize = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  pointer-events: none;\n`;\n\nconst MesaureBlock = React.forwardRef<HTMLDivElement>((_, ref) => {\n  return ReactDOM.createPortal(\n    <MeasureFullSize ref={ref} />,\n    window.document.body,\n  );\n});\n"],"file":"toolbar.js"}