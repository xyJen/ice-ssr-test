{"version":3,"sources":["../../../../src/MobileToolbar/components/subline.tsx"],"names":["React","itemToKey","SUBLINE_MIN_LEFT","ItemView","SubLineWrapper","SubLine","subLine","item","plugins","controller","children","ref","useRef","useState","left","setLeft","name","useEffect","wrapper","current","line","closest","HTMLElement","itemKey","target","querySelector","getBoundingClientRect","sourceLeft","right","sourceRight","sourceCenter","selfWidth","width","offsetLeft","Math","max","map"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAE5B,SAASC,SAAT,EAAoBC,gBAApB;AACA,OAAOC,QAAP;AACA,SAASC,cAAT;;AAQA,SAASC,OAAT,OAA2E;AAAA,MAAlDC,OAAkD,QAAxDC,IAAwD;AAAA,MAAzCC,OAAyC,QAAzCA,OAAyC;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;AACzE,MAAMC,QAAQ,GAAI,OAAOJ,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAACI,QAAxC,IAAqD,EAAtE;AACA,MAAMC,GAAG,GAAGX,KAAK,CAACY,MAAN,CAAoC,IAApC,CAAZ;;AAFyE,wBAGjDZ,KAAK,CAACa,QAAN,CAAe,CAAf,CAHiD;AAAA,MAGlEC,IAHkE;AAAA,MAG5DC,OAH4D;;AAIzE,MAAMC,IAAI,GAAG,OAAOV,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwCA,OAAO,CAACU,IAA7D;AACAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AAAA,QACHC,OADG,GACSP,GADT,CACZQ,OADY;AAEpB,QAAMC,IAAI,GAAGF,OAAH,oBAAGA,OAAO,CAAEG,OAAT,CAAiB,qBAAjB,CAAb;;AACA,QAAI,CAACH,OAAD,IAAY,CAACE,IAAb,IAAqB,EAAEA,IAAI,YAAYE,WAAlB,CAAzB,EAAyD;AACvD;AACD;;AACD,QAAMC,OAAO,GAAGtB,SAAS,CAACe,IAAD,CAAzB;AACA,QAAMQ,MAAM,GAAGJ,IAAH,oBAAGA,IAAI,CAAEK,aAAN,wBAAyCF,OAAzC,OAAf;;AAPoB,gBASlB,CAAAC,MAAM,QAAN,YAAAA,MAAM,CAAEE,qBAAR,OAAmC,EATjB;AAAA,2BAQZZ,IARY;AAAA,QAQNa,UARM,2BAQO,CARP;AAAA,4BAQUC,KARV;AAAA,QAQiBC,WARjB,4BAQ+B,CAR/B;;AAUpB,QAAMC,YAAY,GAAG,CAACH,UAAU,GAAGE,WAAd,IAA6B,CAAlD;;AAVoB,gCAWSX,OAAO,CAACQ,qBAAR,EAXT;AAAA,QAWLK,SAXK,yBAWZC,KAXY;;AAYpB,QAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASL,YAAY,GAAGC,SAAS,GAAG,CAApC,EAAuC7B,gBAAvC,CAAnB;AACAa,IAAAA,OAAO,CAACkB,UAAD,CAAP;AACD,GAdD,EAcG,CAACjB,IAAD,CAdH;AAeA,sBACE,eAAC,cAAD;AAAgB,IAAA,GAAG,EAAEL,GAArB;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAJA;AAAF;AAAjC,KACGJ,QAAQ,CAAC0B,GAAT,CAAa,UAAC7B,IAAD;AAAA,wBACZ,eAAC,QAAD;AACE,MAAA,GAAG,EAAE,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACS,IAD9C;AAEE,MAAA,IAAI,EAAET,IAFR;AAGE,MAAA,UAAU,EAAEE,UAHd;AAIE,MAAA,OAAO,EAAED;AAJX,MADY;AAAA,GAAb,CADH,CADF;AAYD;;AAED,eAAeH,OAAf","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { MobileToolbarItem, Plugins } from '../types';\nimport { itemToKey, SUBLINE_MIN_LEFT } from '../constant';\nimport ItemView from '../buttons/index';\nimport { SubLineWrapper } from './styled';\n\ninterface SubLineViewProps {\n  item: MobileToolbarItem;\n  controller: Controller;\n  plugins: Plugins;\n}\n\nfunction SubLine({ item: subLine, plugins, controller }: SubLineViewProps) {\n  const children = (typeof subLine !== 'string' && subLine.children) || [];\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [left, setLeft] = React.useState(0);\n  const name = typeof subLine === 'string' ? subLine : subLine.name;\n  React.useEffect(() => {\n    const { current: wrapper } = ref;\n    const line = wrapper?.closest('[data-toolbar-line]');\n    if (!wrapper || !line || !(line instanceof HTMLElement)) {\n      return;\n    }\n    const itemKey = itemToKey(name);\n    const target = line?.querySelector(`[data-toolbar-key=${itemKey}]`);\n    const { left: sourceLeft = 0, right: sourceRight = 0 } =\n      target?.getBoundingClientRect() || {};\n    const sourceCenter = (sourceLeft + sourceRight) / 2;\n    const { width: selfWidth } = wrapper.getBoundingClientRect();\n    const offsetLeft = Math.max(sourceCenter - selfWidth / 2, SUBLINE_MIN_LEFT);\n    setLeft(offsetLeft);\n  }, [name]);\n  return (\n    <SubLineWrapper ref={ref} style={{ left }}>\n      {children.map((item) => (\n        <ItemView\n          key={typeof item === 'string' ? item : item.name}\n          item={item}\n          controller={controller}\n          plugins={plugins}\n        />\n      ))}\n    </SubLineWrapper>\n  );\n}\n\nexport default SubLine;\n"],"file":"subline.js"}