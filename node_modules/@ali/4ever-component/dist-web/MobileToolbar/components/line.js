import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useSubline } from "../hooks";
import ItemView from "../buttons/index";
import SubLine from "./subline";
import { LineWrapper, ScrollableWrapper, Divider, KeyboardShadow, KeyboardWrapper } from "./styled";
import useLayoutFilter from "../hooks/useLayoutFilter";

var _ref2 = /*#__PURE__*/_createElement(Divider, null);

var _ref3 = /*#__PURE__*/_createElement(KeyboardShadow, null);

function Line(_ref) {
  var allLayout = _ref.layout,
      plugins = _ref.plugins,
      controller = _ref.controller;

  var _useSubline = useSubline(),
      subLine = _useSubline.item;

  var layout = useLayoutFilter(allLayout);
  var flexLayout = React.useMemo(function () {
    return layout.filter(function (g) {
      return !g.fixedOnRight;
    });
  }, [layout]);
  var fixedGroup = React.useMemo(function () {
    return layout.find(function (g) {
      return g.fixedOnRight;
    });
  }, [layout]);
  var subLineKey = typeof subLine === 'object' ? subLine.name : subLine;
  return /*#__PURE__*/_createElement(LineWrapper, {
    "data-toolbar-line": true
  }, /*#__PURE__*/_createElement(ScrollableWrapper, null, flexLayout.map(function (group, gindex) {
    return /*#__PURE__*/_createElement(React.Fragment, {
      key: group.key
    }, gindex !== 0 && _ref2, group.items.map(function (item, index) {
      return /*#__PURE__*/_createElement(ItemView, {
        key: (typeof item === 'string' ? item : item.name) + "_" + index,
        item: item,
        controller: controller,
        plugins: plugins
      });
    }));
  })), subLine && /*#__PURE__*/_createElement(SubLine, {
    key: String(subLineKey),
    item: subLine,
    plugins: plugins,
    controller: controller
  }), !!fixedGroup && /*#__PURE__*/_createElement(KeyboardWrapper, null, _ref3, fixedGroup.items.map(function (item) {
    return /*#__PURE__*/_createElement(ItemView, {
      key: typeof item === 'string' ? item : item.name,
      item: item,
      controller: controller,
      plugins: plugins
    });
  })));
}

export default Line;
//# sourceMappingURL=line.js.map