{"version":3,"sources":["../../../src/HoverBlock/ActiveInteractionContext.tsx"],"names":["React","UPDATE_ACTIVE_INTERACTION","Symbol","updateActiveInteraction","type","payload","reducer","state","action","initState","initUpdate","ActiveInteractionContext","createContext","useActiveInteraction","useContext","ActiveInteractionHooks","ActiveInteractionProvider","props","children","useReducer","dispatch","updateType","useCallback","value","useMemo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAM5B,IAAMC,yBAAyB,GAAGC,MAAM,CAAC,2BAAD,CAAxC;;AAEA,SAASC,uBAAT,CAAkCC,IAAlC,EAAgD;AAC9C,SAAO;AACLA,IAAAA,IAAI,EAAEH,yBADD;AAELI,IAAAA,OAAO,EAAE;AACPD,MAAAA,IAAI,EAAJA;AADO;AAFJ,GAAP;AAMD;;AAED,SAASE,OAAT,CAAiBC,KAAjB,EAAiDC,MAAjD,EAAyD;AAAA,MAC/CJ,IAD+C,GAC7BI,MAD6B,CAC/CJ,IAD+C;AAAA,MACzCC,OADyC,GAC7BG,MAD6B,CACzCH,OADyC;;AAEvD,MAAID,IAAI,KAAKH,yBAAb,EAAwC;AACtC,WAAO;AACLG,MAAAA,IAAI,EAAEC,OAAO,CAACD;AADT,KAAP;AAGD;;AACD,SAAOG,KAAP;AACD;;AAED,IAAME,SAAS,GAAG,EAAlB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACN,IAAD,EAAkB,CAAE,CAAvC;;AAEA,IAAMO,wBAAwB,gBAAGX,KAAK,CAACY,aAAN,CAAqE,CAACH,SAAD,EAAYC,UAAZ,CAArE,CAAjC;;AAEA,SAASG,oBAAT,GAAgC;AAC9B,SAAOb,KAAK,CAACc,UAAN,CAAiBH,wBAAjB,CAAP;AACD;;AAED,OAAO,IAAMI,sBAAsB,GAAG;AACpCF,EAAAA,oBAAoB,EAApBA;AADoC,CAA/B;AAIP,OAAO,IAAMG,yBAAmC,GAAG,SAAtCA,yBAAsC,CAACC,KAAD,EAAW;AAAA,MACpDC,QADoD,GACvCD,KADuC,CACpDC,QADoD;;AAAA,0BAElClB,KAAK,CAACmB,UAAN,CAAiBb,OAAjB,EAA0B;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAA1B,CAFkC;AAAA,MAErDG,KAFqD;AAAA,MAE9Ca,QAF8C;;AAI5D,MAAMC,UAAU,GAAGrB,KAAK,CAACsB,WAAN,CAAkB,UAAClB,IAAD,EAAkB;AACrDgB,IAAAA,QAAQ,CAACjB,uBAAuB,CAACC,IAAD,CAAxB,CAAR;AACD,GAFkB,EAEhB,CAACgB,QAAD,CAFgB,CAAnB;AAIA,MAAMG,KAAK,GAAGvB,KAAK,CAACwB,OAAN,CAAc;AAAA,WAAM,CAACjB,KAAK,CAACH,IAAP,EAAaiB,UAAb,CAAN;AAAA,GAAd,EAAkF,CAACd,KAAK,CAACH,IAAP,EAAaiB,UAAb,CAAlF,CAAd;AACA,sBACE,eAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAEE;AAA1C,KACGL,QADH,CADF;AAKD,CAdM","sourcesContent":["import React from 'react';\n\ntype ActiveInteractionType = 'insertMenu' | 'quickInsertMenu' | 'contextMenu' | 'leftMenu' | 'selectionBar' | 'newLineMenu' | string;\ninterface IActiveInteractionState {\n  type: ActiveInteractionType;\n}\n\nconst UPDATE_ACTIVE_INTERACTION = Symbol('UPDATE_ACTIVE_INTERACTION');\n\nfunction updateActiveInteraction (type: string) {\n  return {\n    type: UPDATE_ACTIVE_INTERACTION,\n    payload: {\n      type,\n    }\n  };\n}\n\nfunction reducer(state: IActiveInteractionState, action) {\n  const { type, payload } = action;\n  if (type === UPDATE_ACTIVE_INTERACTION) {\n    return {\n      type: payload.type,\n    };\n  }\n  return state;\n}\n\nconst initState = '';\nconst initUpdate = (type: string) => {};\n\nconst ActiveInteractionContext = React.createContext<[ActiveInteractionType, (type: string) => void]>([initState, initUpdate]);\n\nfunction useActiveInteraction() {\n  return React.useContext(ActiveInteractionContext);\n}\n\nexport const ActiveInteractionHooks = {\n  useActiveInteraction,\n}\n\nexport const ActiveInteractionProvider: React.FC = (props) => {\n  const { children } = props;\n  const [state, dispatch] = React.useReducer(reducer, { type: '' });\n\n  const updateType = React.useCallback((type: string) => {\n    dispatch(updateActiveInteraction(type));\n  }, [dispatch]);\n\n  const value = React.useMemo(() => [state.type, updateType] as [string, (type: string) => void], [state.type, updateType]);\n  return (\n    <ActiveInteractionContext.Provider value={value}>\n      {children}\n    </ActiveInteractionContext.Provider>\n  );\n}"],"file":"ActiveInteractionContext.js"}