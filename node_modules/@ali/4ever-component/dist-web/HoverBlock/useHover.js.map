{"version":3,"sources":["../../../src/HoverBlock/useHover.ts"],"names":["React","clearerRef","current","useHover","enableHover","callbacks","useState","isHover","setHover","onMouseLeave","onMouseOut","onMouseOver","handleMouseOver","useCallback","e","stopPropagation","handleMouseOut","currentTarget","target","Node","contains","handleMouseLeave","useEffect","handlers","useMemo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,IAAMC,UAA4D,GAAG;AACnEC,EAAAA,OAAO,EAAE;AAD0D,CAArE;AAIA,eAAe,SAASC,QAAT,CAAkBC,WAAlB,EAAyCC,SAAzC,EAAyE;AAAA,wBAC1DL,KAAK,CAACM,QAAN,CAAe,KAAf,CAD0D;AAAA,MAC/EC,OAD+E;AAAA,MACtEC,QADsE;;AAAA,aAEpCH,SAAS,IAAI,EAFuB;AAAA,MAE9EI,YAF8E,QAE9EA,YAF8E;AAAA,MAEhEC,UAFgE,QAEhEA,UAFgE;AAAA,MAEpDC,WAFoD,QAEpDA,WAFoD;;AAGtF,MAAMC,eAAe,GAAGZ,KAAK,CAACa,WAAN,CAAkB,UAACC,CAAD,EAAyB;AACjEH,IAAAA,WAAW,IAAIA,WAAW,CAACG,CAAD,CAA1B;;AACA,QAAIV,WAAJ,EAAiB;AACfU,MAAAA,CAAC,CAACC,eAAF,GADe,CAEf;AACA;;AACAd,MAAAA,UAAU,CAACC,OAAX,IAAsBD,UAAU,CAACC,OAAX,CAAmB,KAAnB,CAAtB;AACAM,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAP,MAAAA,UAAU,CAACC,OAAX,GAAqBM,QAArB;AACD;AACF,GAVuB,EAUrB,CAACG,WAAD,EAAcP,WAAd,CAVqB,CAAxB;AAYA,MAAMY,cAAc,GAAGhB,KAAK,CAACa,WAAN,CAAkB,UAACC,CAAD,EAAyB;AAAA,QACxDG,aADwD,GAC9BH,CAD8B,CACxDG,aADwD;AAAA,QACzCC,MADyC,GAC9BJ,CAD8B,CACzCI,MADyC;AAEhER,IAAAA,UAAU,IAAIA,UAAU,CAACI,CAAD,CAAxB;;AACA,QAAIV,WAAJ,EAAiB;AACf,UAAIc,MAAM,YAAYC,IAAlB,IAA0BF,aAAa,CAACG,QAAd,CAAuBF,MAAvB,CAA9B,EAA8D;AAC5D;AACD;;AACDV,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GATsB,EASpB,CAACE,UAAD,EAAaN,WAAb,CAToB,CAAvB;AAWA,MAAMiB,gBAAgB,GAAGrB,KAAK,CAACa,WAAN,CAAkB,UAACC,CAAD,EAAyB;AAClEL,IAAAA,YAAY,IAAIA,YAAY,CAACK,CAAD,CAA5B;;AACA,QAAIV,WAAJ,EAAiB;AACfI,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GALwB,EAKtB,CAACC,YAAD,EAAeL,WAAf,CALsB,CAAzB;AAOAJ,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AACpB,WAAO,YAAM;AACX,UAAIrB,UAAU,CAACC,OAAX,KAAuBM,QAA3B,EAAqC;AACnCP,QAAAA,UAAU,CAACC,OAAX,GAAqB,IAArB;AACD;AACF,KAJD;AAKD,GAND,EAMG,EANH;AAQA,MAAMqB,QAAQ,GAAIvB,KAAK,CAACwB,OAAN,CAAc;AAAA,WAAO;AACrCd,MAAAA,UAAU,EAAEM,cADyB;AAErCL,MAAAA,WAAW,EAAEC,eAFwB;AAGrCH,MAAAA,YAAY,EAAEY;AAHuB,KAAP;AAAA,GAAd,EAId,CAACT,eAAD,EAAkBI,cAAlB,EAAkCK,gBAAlC,CAJc,CAAlB;AAMA,SAAO,CAACd,OAAD,EAAUgB,QAAV,CAAP;AACD","sourcesContent":["import React from 'react';\n\ntype IHandlers = {\n  onMouseOut: React.MouseEventHandler;\n  onMouseOver: React.MouseEventHandler;\n  onMouseLeave: React.MouseEventHandler;\n}\n\nconst clearerRef: { current: null | ((visible: boolean) => void) } = {\n  current: null,\n};\n\nexport default function useHover(enableHover?: boolean, callbacks?: Partial<IHandlers>) {\n  const [isHover, setHover] = React.useState(false);\n  const { onMouseLeave, onMouseOut, onMouseOver } = callbacks || {};\n  const handleMouseOver = React.useCallback((e: React.MouseEvent) => {\n    onMouseOver && onMouseOver(e);\n    if (enableHover) {\n      e.stopPropagation();\n      // 为避免在具有 hover状态的元素里移动鼠标时hover 边框闪烁，在 mouseOut 里如果是 target 是当前hover 元素的子元素则放行，\n      // 带来新的问题，如果移动到的子元素中也有hover 态，就会出现重复的hover 元素，所以需要主动清理上一次的hover 状态\n      clearerRef.current && clearerRef.current(false);\n      setHover(true);\n      clearerRef.current = setHover;\n    }\n  }, [onMouseOver, enableHover]);\n\n  const handleMouseOut = React.useCallback((e: React.MouseEvent) => {\n    const { currentTarget, target } = e;\n    onMouseOut && onMouseOut(e);\n    if (enableHover) {\n      if (target instanceof Node && currentTarget.contains(target)) {\n        return;\n      }\n      setHover(false);\n    }\n  }, [onMouseOut, enableHover]);\n\n  const handleMouseLeave = React.useCallback((e: React.MouseEvent) => {\n    onMouseLeave && onMouseLeave(e);\n    if (enableHover) {\n      setHover(false);\n    }\n  }, [onMouseLeave, enableHover]);\n\n  React.useEffect(() => {\n    return () => {\n      if (clearerRef.current === setHover) {\n        clearerRef.current = null;\n      }\n    }\n  }, []);\n\n  const handlers =  React.useMemo(() => ({\n    onMouseOut: handleMouseOut,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n  }), [handleMouseOver, handleMouseOut, handleMouseLeave]);\n\n  return [isHover, handlers] as [boolean, IHandlers];\n}"],"file":"useHover.js"}