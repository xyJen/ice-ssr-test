{"version":3,"sources":["../../../src/ToolbarNext/buildToolbarItem.tsx"],"names":["React","IconButton","ItemSlot","SlotType","isValidItem","item","displayName","String","type","props","display","iconButton","iconMenu","iconSelect","splitButton","textSelect","custom","buildToolbarItem","plugins","controller","buttonName","customButtons","extraProps","customButton","CustomComponent","renderComponent","split","pluginName","plugin","hash","Component","renderToolbar","isValidElement","Error","key","BasicButton","icon","onClick","rest","handleClick","useCallback"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { Controller, BiPlugin } from '@ali/4ever-cangjie';\nimport { IBasicButton, IToolbarButtonConfig, IToolBar } from './interface';\nimport type { Plugins } from '../PluginsContext';\nimport { IconButton, ItemSlot, SlotType } from './basicComponents';\n\nfunction isValidItem(item: React.ReactElement) {\n  let displayName: string;\n  if (String((item.type as any).displayName) === 'toolbarSlot') {\n    displayName = item.props.display;\n  } else {\n    displayName = String((item.type as any).displayName)\n  }\n  switch (displayName) {\n    case SlotType.iconButton:\n    case SlotType.iconMenu:\n    case SlotType.iconSelect:\n    case SlotType.splitButton:\n    case SlotType.textSelect:\n    case SlotType.custom:\n      return true;\n    default:\n      return false;\n  }\n}\n\n\nexport function buildToolbarItem(plugins: Plugins | null, controller: Controller, buttonName: string, customButtons: IToolBar['customButtons'], extraProps: { disabled?: true, key: string } & IToolbarButtonConfig) {\n\n  const customButton = customButtons?.[buttonName]\n  // 自定义按钮优先\n  if (customButton && typeof customButton === 'function') {\n    const CustomComponent = customButton({ extraProps }, controller);\n    return renderComponent(controller, extraProps, CustomComponent);\n  }\n\n  const [pluginName] = buttonName.split('.');\n  const plugin = plugins?.hash[pluginName] as BiPlugin;\n  if (!plugin) {\n    return null;\n  }\n\n  const Component = plugin?.renderToolbar?.({ buttonName, extraProps }, controller);\n\n  return renderComponent(controller, extraProps, Component);\n\n}\n\nfunction renderComponent(controller: Controller, extraProps: { disabled?: true, key: string }, Component: IBasicButton | React.ReactElement<IToolbarButtonConfig> | null | undefined) {\n  if (!Component) {\n    return null;\n  }\n\n  if (React.isValidElement(Component)) {\n    if (!isValidItem(Component)) {\n      throw new Error(`Component with key:${extraProps.key} must wrapped by ItemSlot`);\n    }\n    return Component;\n  }\n\n  return (\n    <ItemSlot display={SlotType.iconButton}>\n      <BasicButton\n        {...Component}\n        {...extraProps}\n        controller={controller}\n      />\n    </ItemSlot>\n  )\n\n}\n\n\nconst BasicButton: React.FC<IBasicButton & { controller: Controller }> = (props) => {\n\n  const { icon, onClick, controller, ...rest } = props;\n\n\n  const handleClick = React.useCallback(() => {\n    if (onClick && typeof onClick === 'function') {\n      onClick(controller);\n    }\n  }, [onClick, controller]);\n\n  return (\n    <IconButton\n      {...rest}\n      icon={icon}\n      onClick={handleClick}\n    />\n  )\n}\n"],"file":"buildToolbarItem.js"}