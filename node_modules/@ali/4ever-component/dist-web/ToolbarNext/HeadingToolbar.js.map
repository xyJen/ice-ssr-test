{"version":3,"sources":["../../../src/ToolbarNext/HeadingToolbar.tsx"],"names":["React","HeaderToolbarMode","Controller","usePlugins","BasicToolbar","defaultDisableTargets","defaultDoubleLayout","defaultSingleLayout","HeadingToolbar","props","disableTargets","doubleLayout","propDoubleLayout","singleLayout","propSingleLayout","propStyle","style","allowSwitch","onSwitchModeClick","propMode","mode","rest","controller","useController","maxPending","plugins","useMemo","padding","useState","single","innerMode","setInnerMode","undefined","handleSwitch","useCallback","modeType"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,iBAAT;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,EAAqDC,mBAArD;AAMA,OAAO,IAAMC,cAAyC,GAAG,SAA5CA,cAA4C,CAACC,KAAD,EAAW;AAAA,8BAU9DA,KAV8D,CAEhEC,cAFgE;AAAA,MAEhEA,cAFgE,sCAE/CL,qBAF+C;AAAA,4BAU9DI,KAV8D,CAGhEE,YAHgE;AAAA,MAGlDC,gBAHkD,oCAG/BN,mBAH+B;AAAA,4BAU9DG,KAV8D,CAIhEI,YAJgE;AAAA,MAIlDC,gBAJkD,oCAI/BP,mBAJ+B;AAAA,MAKzDQ,SALyD,GAU9DN,KAV8D,CAKhEO,KALgE;AAAA,2BAU9DP,KAV8D,CAMhEQ,WANgE;AAAA,MAMhEA,WANgE,mCAMlD,IANkD;AAAA,MAOhEC,iBAPgE,GAU9DT,KAV8D,CAOhES,iBAPgE;AAAA,MAQ1DC,QAR0D,GAU9DV,KAV8D,CAQhEW,IARgE;AAAA,MAS7DC,IAT6D,iCAU9DZ,KAV8D;;AAYlE,MAAMa,UAAU,GAAGpB,UAAU,CAACqB,aAAX,CAAyB;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAzB,CAAnB;AACA,MAAMC,OAAO,GAAGtB,UAAU,EAA1B;AACA,MAAMa,KAAK,GAAGhB,KAAK,CAAC0B,OAAN,CAAc;AAAA;AAC1BC,MAAAA,OAAO,EAAE;AADiB,OAEvBZ,SAFuB;AAAA,GAAd,EAGV,CAACA,SAAD,CAHU,CAAd;;AAdkE,wBAmBhCf,KAAK,CAAC4B,QAAN,CAAiC3B,iBAAiB,CAAC4B,MAAnD,CAnBgC;AAAA,MAmB3DC,SAnB2D;AAAA,MAmBhDC,YAnBgD;;AAqBlE,MAAMX,IAAI,GAAGD,QAAQ,IAAIW,SAAzB;AAEA,MAAMnB,YAAY,GAAGM,WAAW,GAAGL,gBAAH,GAAuBQ,IAAI,KAAKnB,iBAAiB,UAA1B,GAAoCW,gBAApC,GAAuDoB,SAA9G;AACA,MAAMnB,YAAY,GAAGI,WAAW,GAAGH,gBAAH,GAAuBM,IAAI,KAAKnB,iBAAiB,CAAC4B,MAA3B,GAAoCf,gBAApC,GAAuDkB,SAA9G;AAEA,MAAMC,YAAY,GAAGjC,KAAK,CAACkC,WAAN,CAAkB,UAACC,QAAD,EAA6C;AAClFJ,IAAAA,YAAY,CAACI,QAAD,CAAZ;;AACA,QAAIjB,iBAAJ,EAAuB;AACrBA,MAAAA,iBAAiB,CAACiB,QAAD,CAAjB;AACD;AACF,GALoB,EAKlB,CAACjB,iBAAD,CALkB,CAArB;AAOA,sBACE,eAAC,YAAD;AACE,IAAA,cAAc,EAAER,cADlB;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,YAAY,EAAEE,YAHhB;AAIE,IAAA,KAAK,EAAEG,KAJT;AAKE,IAAA,IAAI,EAAEI,IALR;AAME,IAAA,iBAAiB,EAAEa;AANrB,KAOMZ,IAPN;AAQE,IAAA,UAAU,EAAEC,UARd;AASE,IAAA,OAAO,EAAEG;AATX,KADF;AAaD,CA9CM","sourcesContent":["import * as React from 'react';\nimport { HeaderToolbarMode, IToolBar } from './interface';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { usePlugins } from '../PluginsContext';\nimport { BasicToolbar } from './BasicToolbar';\nimport { defaultDisableTargets, defaultDoubleLayout, defaultSingleLayout } from './config';\n\nexport interface IHeadingToolbar extends Partial<IToolBar> {\n  allowSwitch?: boolean;\n}\n\nexport const HeadingToolbar: React.FC<IHeadingToolbar> = (props) => {\n  const {\n    disableTargets = defaultDisableTargets,\n    doubleLayout: propDoubleLayout = defaultDoubleLayout,\n    singleLayout: propSingleLayout = defaultSingleLayout,\n    style: propStyle,\n    allowSwitch = true,\n    onSwitchModeClick,\n    mode: propMode,\n    ...rest\n  } = props;\n\n  const controller = Controller.useController({ maxPending: 10 });\n  const plugins = usePlugins();\n  const style = React.useMemo(() => ({\n    padding: '4px 24px',\n    ...propStyle\n  }), [propStyle]);\n\n  const [innerMode, setInnerMode] = React.useState<IToolBar['mode']>(HeaderToolbarMode.single);\n\n  const mode = propMode || innerMode\n\n  const doubleLayout = allowSwitch ? propDoubleLayout : (mode === HeaderToolbarMode.double ? propDoubleLayout : undefined);\n  const singleLayout = allowSwitch ? propSingleLayout : (mode === HeaderToolbarMode.single ? propSingleLayout : undefined);\n\n  const handleSwitch = React.useCallback((modeType: NonNullable<IToolBar['mode']>) => {\n    setInnerMode(modeType)\n    if (onSwitchModeClick) {\n      onSwitchModeClick(modeType);\n    }\n  }, [onSwitchModeClick]);\n\n  return (\n    <BasicToolbar\n      disableTargets={disableTargets}\n      doubleLayout={doubleLayout}\n      singleLayout={singleLayout}\n      style={style}\n      mode={mode}\n      onSwitchModeClick={handleSwitch}\n      {...rest}\n      controller={controller}\n      plugins={plugins}\n    />\n  )\n}\n"],"file":"HeadingToolbar.js"}