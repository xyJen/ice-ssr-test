{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/TableThemeButton.tsx"],"names":["React","ColorPanel","IconPalette","IconMenu","TableThemeButton","props","tableBgColor","defaultTableBgColor","onTableBgColorChange","tableBorderColor","defaultTableBorderColor","onTableBorderColorChange","restProps","useState","overlayVisible","setOverlayVisible","handleReset"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT;AACA,SAASC,QAAT;;wBAqCY,eAAC,WAAD,O;;AArBZ,OAAO,IAAMC,gBAA6C,GAAG,SAAhDA,gBAAgD,CAACC,KAAD,EAAW;AAAA,MAEpEC,YAFoE,GASlED,KATkE,CAEpEC,YAFoE;AAAA,8BASlED,KATkE,CAGpEE,mBAHoE;AAAA,MAGpEA,mBAHoE,sCAG9C,EAH8C;AAAA,MAIpEC,oBAJoE,GASlEH,KATkE,CAIpEG,oBAJoE;AAAA,MAKpEC,gBALoE,GASlEJ,KATkE,CAKpEI,gBALoE;AAAA,8BASlEJ,KATkE,CAMpEK,uBANoE;AAAA,MAMpEA,uBANoE,sCAM1C,EAN0C;AAAA,MAOpEC,wBAPoE,GASlEN,KATkE,CAOpEM,wBAPoE;AAAA,MAQjEC,SARiE,iCASlEP,KATkE;;AAAA,wBAU1BL,KAAK,CAACa,QAAN,CAAe,KAAf,CAV0B;AAAA,MAU/DC,cAV+D;AAAA,MAU/CC,iBAV+C;;AAYtE,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBR,IAAAA,oBAAoB,CAACD,mBAAD,CAApB;AACAI,IAAAA,wBAAwB,CAACD,uBAAD,CAAxB;AACAK,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,WAAO,KAAP;AACD,GALD;;AAOA,sBACE,eAAC,QAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,OAAO,eACL,eAAC,UAAD;AACE,MAAA,eAAe,EAAET,YADnB;AAEE,MAAA,sBAAsB,EAAEE,oBAF1B;AAGE,MAAA,WAAW,EAAEC,gBAHf;AAIE,MAAA,kBAAkB,EAAEE,wBAJtB;AAKE,MAAA,iBAAiB,MALnB;AAME,MAAA,kBAAkB,EAAEK;AANtB,MAHJ;AAYE,IAAA,cAAc,EAAEF,cAZlB;AAaE,IAAA,eAAe,EAAEC,iBAbnB;AAcE,IAAA,MAAM,EAAC;AAdT,KAeMH,SAfN,EADF;AAmBD,CAtCM","sourcesContent":["import React from 'react';\nimport { ColorPanel } from '@ali/we-design';\nimport { IconPalette } from '../icons';\nimport { IconMenu } from './Basics';\n\nexport interface ITableThemeButton extends\n  Pick<Partial<React.ComponentProps<typeof IconMenu>>, 'onVisibleChange' | 'title' | 'tooltip' | 'icon' | 'disabled' | 'testid' | 'role'> {\n  tableBorderColor: string;\n  defaultTableBorderColor?: string;\n  onTableBorderColorChange: (c: string) => void;\n  tableBgColor: string;\n  defaultTableBgColor?: string;\n  onTableBgColorChange: (c: string) => void;\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n}\n\nexport const TableThemeButton: React.FC<ITableThemeButton> = (props) => {\n  const {\n    tableBgColor,\n    defaultTableBgColor = '',\n    onTableBgColorChange,\n    tableBorderColor,\n    defaultTableBorderColor = '',\n    onTableBorderColorChange,\n    ...restProps\n  } = props;\n  const [overlayVisible, setOverlayVisible] = React.useState(false);\n\n  const handleReset = () => {\n    onTableBgColorChange(defaultTableBgColor);\n    onTableBorderColorChange(defaultTableBorderColor);\n    setOverlayVisible(false);\n    return false;\n  }\n\n  return (\n    <IconMenu\n      icon={<IconPalette />}\n      overlay={\n        <ColorPanel\n          backgroundColor={tableBgColor}\n          onBackgroundColorClick={onTableBgColorChange}\n          borderColor={tableBorderColor}\n          onBorderColorClick={onTableBorderColorChange}\n          enableResetButton\n          onResetButtonClick={handleReset}\n        />\n      }\n      overlayVisible={overlayVisible}\n      onVisibleChange={setOverlayVisible}\n      testid=\"bi-toolbar-table-theme\"\n      {...restProps}\n    />\n  );\n};\n\n"],"file":"TableThemeButton.js"}