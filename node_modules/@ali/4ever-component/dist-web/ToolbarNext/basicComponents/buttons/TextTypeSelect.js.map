{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/TextTypeSelect.tsx"],"names":["React","useCallback","styled","TextSelect","TextTypeSingleLineDefaultWidth","SelectOption","Item","span","p","fontSize","fontWeight","TitleWrapper","div","optionsMap","paragraph","title","TextTypeSelect","props","onChange","disabled","testid","value","role","options","tooltip","handleChange","v","key","find","op"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { TextSelect, TextTypeSingleLineDefaultWidth, SelectOption } from './Basics';\n\n\nexport interface ITextTypeSelectOption {\n  key: TextType;\n  title: string;\n}\n\nexport type TextType =\n  | 'paragraph'\n  | 'heading-1'\n  | 'heading-2'\n  | 'heading-3'\n  | 'heading-4';\n\nexport const Item = styled.span<{ fontSize: string; fontWeight: number }>`\n  font-size: ${(p) => p.fontSize};\n  font-weight:  ${(p) => p.fontWeight}; \n  line-height: 1.45;\n`;\n\nconst TitleWrapper = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  white-space: nowrap;\n`;\n\ntype ExtendsTextSelectProps = Omit<React.ComponentProps<typeof TextSelect>, 'value' | 'onChange' | 'options' | 'width' | 'tooltip'>;\n\nexport interface ITextTypeSelectProps extends ExtendsTextSelectProps {\n  /**\n   * 文本类型\n   */\n  value?: TextType;\n  /**\n   * 文本类型变化回调函数，type TextType\n   */\n  onChange?: (type: TextType) => void;\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n\n  options: ITextTypeSelectOption[];\n\n  testid?: string;\n\n  role?: string;\n\n  tooltip: {\n    title: string;\n    shortCut?: string;\n    description?: string;\n  };\n}\n\nconst optionsMap: Record<TextType, (title: string) => React.ReactElement> = {\n  paragraph: (title) => <Item fontSize=\"14px\" fontWeight={400} >{title}</Item>,\n  'heading-1': (title) => <Item fontSize=\"20pt\" fontWeight={500} >{title}</Item>,\n  'heading-2': (title) => <Item fontSize=\"16pt\" fontWeight={500} >{title}</Item>,\n  'heading-3': (title) => <Item fontSize=\"14pt\" fontWeight={500} >{title}</Item>,\n  'heading-4': (title) => <Item fontSize=\"12pt\" fontWeight={500} >{title}</Item>,\n};\n\nexport const TextTypeSelect: React.FC<ITextTypeSelectProps> = (props) => {\n  const {\n    onChange,\n    disabled,\n    testid,\n    value,\n    role,\n    options,\n    tooltip,\n  } = props;\n\n  const handleChange = useCallback((v) => {\n    if (onChange) {\n      onChange(v);\n    }\n  }, [onChange]);\n\n\n  return (\n    <TextSelect\n      value={value}\n      disabled={disabled}\n      renderOption={({ key }) => {\n        const { title } = options.find((op) => op.key === key) || {};\n        return (\n          <SelectOption>\n            {optionsMap[key]?.(title) || title}\n          </SelectOption>\n        );\n      }}\n      renderValue={() => (\n        <TitleWrapper>{tooltip.title}</TitleWrapper>\n      )}\n      testid={testid || 'TextTypeSelect'}\n      role={role}\n      width={TextTypeSingleLineDefaultWidth}\n      options={options}\n      onChange={handleChange}\n      tooltip={tooltip}\n    />\n  );\n};\n"],"file":"TextTypeSelect.js"}