{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/FontSizeSelect.tsx"],"names":["React","useMemo","useCallback","FontSizeSelectSingleLineDefaultWidth","TextSelect","szList","FontSizeSelect","props","onChange","disabled","testid","value","role","tooltip","options","szOptions","optionsInNumber","map","option","key","String","title","handleChange","num","Number","isNaN"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;qBAC4B,a;AAA5B,SAASC,oCAAT,EAA+CC,UAA/C;AAGA,OAAO,IAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,EAA5D,CAAf;AAwBP,OAAO,IAAMC,cAA8C,GAAG,SAAjDA,cAAiD,CAACC,KAAD,EAAW;AAAA,MAErEC,QAFqE,GASnED,KATmE,CAErEC,QAFqE;AAAA,MAGrEC,QAHqE,GASnEF,KATmE,CAGrEE,QAHqE;AAAA,MAIrEC,MAJqE,GASnEH,KATmE,CAIrEG,MAJqE;AAAA,qBASnEH,KATmE,CAKrEI,KALqE;AAAA,MAKrEA,KALqE,6BAK7D,EAL6D;AAAA,MAMrEC,IANqE,GASnEL,KATmE,CAMrEK,IANqE;AAAA,MAOrEC,OAPqE,GASnEN,KATmE,CAOrEM,OAPqE;AAAA,MAQrEC,OARqE,GASnEP,KATmE,CAQrEO,OARqE;AAYvE,MAAMC,SAAS,GAAGd,OAAO,CAAC,YAAM;AAC9B,QAAMe,eAAe,GAAGF,OAAO,IAAIT,MAAnC;AACA,WAAOW,eAAe,CAACC,GAAhB,CAAoB,UAACC,MAAD;AAAA,aAAa;AACtCC,QAAAA,GAAG,EAAEC,MAAM,CAACF,MAAD,CAD2B;AAEtCG,QAAAA,KAAK,EAAED,MAAM,CAACF,MAAD,CAFyB;AAGtCR,QAAAA,MAAM,cAAYQ;AAHoB,OAAb;AAAA,KAApB,CAAP;AAKD,GAPwB,EAOtB,CAACJ,OAAD,CAPsB,CAAzB;AAUA,MAAMQ,YAAY,GAAGpB,WAAW,CAAC,UAACS,KAAD,EAAW;AAC1C,QAAI;AACF,UAAMY,GAAG,GAAGC,MAAM,CAACb,KAAD,CAAlB;;AACA,UAAI,CAACa,MAAM,CAACC,KAAP,CAAaF,GAAb,CAAL,EAAwB;AACtB,YAAIf,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACe,GAAD,CAAR;AACD;AACF;AACF,KAPD,CAOE,gBAAM,CAEP;AAEF,GAZ+B,EAY7B,CAACf,QAAD,CAZ6B,CAAhC;AAcA,sBACE,eAAC,UAAD;AACE,IAAA,KAAK,EAAEG,KAAK,GAAG,CAAR,GAAYS,MAAM,CAACT,KAAD,CAAlB,GAA4B,GADrC;AAEE,IAAA,QAAQ,EAAEF,QAFZ;AAGE,IAAA,IAAI,EAAEG,IAHR;AAIE,IAAA,KAAK,EAAET,oCAJT;AAKE,IAAA,OAAO,EAAEY,SALX;AAME,IAAA,QAAQ,EAAEO,YANZ;AAOE,IAAA,IAAI,EAAE,OAPR;AAQE,IAAA,MAAM,EAAEZ,MAAM,IAAI,gBARpB;AASE,IAAA,OAAO,EAAEG,OATX;AAUE,iBAAWD,IAAI,IAAI;AAVrB,IADF;AAcD,CAlDM","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { FontSizeSelectSingleLineDefaultWidth, TextSelect } from './Basics';\n\n\nexport const szList = [9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 42, 48, 72];\n\nexport interface IFontSizeSelectProps extends Omit<React.ComponentProps<typeof TextSelect>,\n  'onChange' | 'options' | 'overlayVisible' | 'onVisibleChange' | 'width' | 'value'> {\n  /**\n   * 字号\n   */\n  value?: number;\n  /**\n   * 字号变化回调函数\n   */\n  onChange?: (type: number) => void;\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n\n  options?: number[];\n\n  testid?: string;\n\n  role?: string;\n}\n\nexport const FontSizeSelect: React.FC<IFontSizeSelectProps> = (props) => {\n  const {\n    onChange,\n    disabled,\n    testid,\n    value = 12,\n    role,\n    tooltip,\n    options\n  } = props;\n\n\n  const szOptions = useMemo(() => {\n    const optionsInNumber = options || szList;\n    return optionsInNumber.map((option) => ({\n      key: String(option),\n      title: String(option),\n      testid: `option-${option}`,\n    }));\n  }, [options])\n\n\n  const handleChange = useCallback((value) => {\n    try {\n      const num = Number(value);\n      if (!Number.isNaN(num)) {\n        if (onChange) {\n          onChange(num);\n        }\n      }\n    } catch {\n\n    }\n\n  }, [onChange])\n\n  return (\n    <TextSelect\n      value={value > 0 ? String(value) : '0'}\n      disabled={disabled}\n      role={role}\n      width={FontSizeSelectSingleLineDefaultWidth}\n      options={szOptions}\n      onChange={handleChange}\n      mode={'input'}\n      testid={testid || 'FontSizeSelect'}\n      tooltip={tooltip}\n      data-role={role || 'font_size_select'}\n    />\n  );\n};\n"],"file":"FontSizeSelect.js"}