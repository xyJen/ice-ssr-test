{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/TabBarTabsNode.tsx"],"names":["React","useRef","warning","classnames","TabBarTab","TabBarWrapper","TabBarTabsNode","props","saveRef","panes","activeKey","testid","rst","onTabClicks","Children","forEach","child","key","isActived","current","onTabClick","e","id","node","disabled","actived","undefined","tab","push"],"mappings":"AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;qBAD4B,a;AAE5B,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,SAAT,EAAoBC,aAApB;;AASA,IAAMC,cAA8C,GAAG,SAAjDA,cAAiD,CAACC,KAAD,EAAW;AAAA,MAE9DC,OAF8D,GAM5DD,KAN4D,CAE9DC,OAF8D;AAAA,MAG9DC,KAH8D,GAM5DF,KAN4D,CAG9DE,KAH8D;AAAA,MAI9DC,SAJ8D,GAM5DH,KAN4D,CAI9DG,SAJ8D;AAAA,MAK9DC,MAL8D,GAM5DJ,KAN4D,CAK9DI,MAL8D;AAOhE,MAAMC,GAAyB,GAAG,EAAlC,CAPgE,CAQhE;AACA;;AACA,MAAMC,WAAW,GAAGZ,MAAM,CAAM,EAAN,CAA1B,CAVgE,CAYhE;;AACAD,EAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBN,KAAvB,EAAsD,UAACO,KAAD,EAAgB;AACpE,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,QAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,QAAMC,SAAS,GAAGR,SAAS,KAAKO,GAAhC;;AAEA,QACE,CAACJ,WAAW,CAACM,OAAZ,CAAoBF,GAApB,CAAD,IACAJ,WAAW,CAACM,OAAZ,CAAoBF,GAApB,MAA6BV,KAAK,CAACa,UAFrC,EAGE;AACAP,MAAAA,WAAW,CAACM,OAAZ,CAAoBF,GAApB,IAA2B,UAACI,CAAD,EAAyC;AAClE,YAAId,KAAK,CAACa,UAAV,EAAsB;AACpBb,UAAAA,KAAK,CAACa,UAAN,CAAiBH,GAAjB,EAAsBI,CAAtB;AACD;AACF,OAJD;AAKD;;AAEDnB,IAAAA,OAAO,CACL,SAASc,KAAK,CAACT,KADV,EAEL,mDAFK,CAAP;AAKA,QAAMe,EAAE,GAAGf,KAAK,CAACe,EAAN,GAAcL,GAAd,SAAqBV,KAAK,CAACe,EAA3B,GAAkCL,GAA7C;;AAEA,QAAMM,IAAI,gBACR,eAAC,SAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,uBAAeP,KAAK,CAACT,KAAN,CAAYiB,QAAZ,GAAuB,MAAvB,GAAgC,OAFjD;AAGE,uBAAeN,SAAS,GAAG,MAAH,GAAY,OAHtC;AAIE,oCAA0BI,EAJ5B;AAKE,MAAA,QAAQ,EAAEJ,SAAS,GAAG,CAAH,GAAO,CAAC,CAL7B;AAME,MAAA,GAAG,EAAED,GANP;AAOE,MAAA,EAAE,WAASK,EAPb;AAQE,MAAA,SAAS,EAAEnB,UAAU,CACnB;AACEqB,QAAAA,QAAQ,EAAE,CAAC,CAACR,KAAK,CAACT,KAAN,CAAYiB,QAD1B;AAEEC,QAAAA,OAAO,EAAEP;AAFX,OADmB,CARvB;AAcE,MAAA,GAAG,EAAEA,SAAS,GAAGV,OAAO,CAAC,WAAD,CAAV,GAA0BA,OAAO,UAAQS,GAAR,CAdjD;AAeE,MAAA,OAAO,EACL,CAACC,SAAD,IAAc,CAACF,KAAK,CAACT,KAAN,CAAYiB,QAA3B,GACIX,WAAW,CAACM,OAAZ,CAAoBF,GAApB,CADJ,GAEIS,SAlBR;AAoBE,qBAAgBf,MAAhB,SAA0BW;AApB5B,OAsBKN,KAAK,CAACT,KAAN,CAAYoB,GAtBjB,CADF;;AA2BAf,IAAAA,GAAG,CAACgB,IAAJ,CAASL,IAAT;AACD,GArDD;AAuDA,sBACE,eAAC,aAAD,QACGX,GADH,CADF;AAKD,CAzED;;AA2EA,eAAeN,cAAf","sourcesContent":["/* eslint-disable max-lines-per-function */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React, { useRef } from 'react';\nimport warning from 'tiny-warning';\nimport classnames from 'classnames';\nimport { ISaveRef } from './utils';\nimport { TabBarTab, TabBarWrapper } from './style';\nimport { ITabBarProps } from './utils';\n\ninterface ITabBarTabsNodeProps extends ITabBarProps {\n  saveRef: ISaveRef;\n  panes: React.ReactNode;\n  id?: string;\n}\n\nconst TabBarTabsNode: React.FC<ITabBarTabsNodeProps> = (props) => {\n  const {\n    saveRef,\n    panes,\n    activeKey,\n    testid\n  } = props;\n  const rst: React.ReactElement[] = [];\n  // 下面两个ref是为了缓存函数引用，根据key进行缓存\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onTabClicks = useRef<any>({});\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  React.Children.forEach(panes as React.ReactElement[], (child: any) => {\n    if (!child) {\n      return;\n    }\n    const key = child.key as string;\n    const isActived = activeKey === key;\n\n    if (\n      !onTabClicks.current[key] ||\n      onTabClicks.current[key] !== props.onTabClick\n    ) {\n      onTabClicks.current[key] = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (props.onTabClick) {\n          props.onTabClick(key, e);\n        }\n      };\n    }\n\n    warning(\n      'tab' in child.props,\n      'There must be `tab` property on children of Tabs.',\n    );\n\n    const id = props.id ? `${key}-${props.id}` : key;\n\n    const node = (\n      <TabBarTab\n        role=\"tab\"\n        aria-disabled={child.props.disabled ? 'true' : 'false'}\n        aria-selected={isActived ? 'true' : 'false'}\n        aria-controls={`tabpane-${id}`}\n        tabIndex={isActived ? 0 : -1}\n        key={key}\n        id={`tab-${id}`}\n        className={classnames(\n          {\n            disabled: !!child.props.disabled,\n            actived: isActived,\n          },\n        )}\n        ref={isActived ? saveRef('activeTab') : saveRef(`tab_${key}`)}\n        onClick={\n          !isActived && !child.props.disabled\n            ? onTabClicks.current[key]\n            : undefined\n        }\n        data-testid={`${testid}_${id}`}\n      >\n          {child.props.tab}\n      </TabBarTab>\n    );\n\n    rst.push(node);\n  });\n\n  return (\n    <TabBarWrapper>\n      {rst}\n    </TabBarWrapper>\n  );\n};\n\nexport default TabBarTabsNode;\n"],"file":"TabBarTabsNode.js"}