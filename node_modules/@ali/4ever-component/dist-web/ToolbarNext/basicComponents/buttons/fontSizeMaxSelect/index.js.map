{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/index.tsx"],"names":["React","useCallback","useMemo","useState","useRef","classnames","DisableWrap","ContainerMenuDown","DesWrap","GalleryWrap","IconWrapper","TableButton","TableStyleSet","TextWrap","TitleWrap","Popover","ArrowIconDown","Tabs","TabPane","FontSizeButton","FontSizeMaxSelect","memo","props","locale","onChange","value","defaultValue","disabled","testid","width","length","showArrowDown","setShowArrowDown","overlayVisible","setOverlayVisible","selfRef","sizeComputedRef","minFontSize","maxtFontSize","options","title","toolbarHeading1","type","des","fontWeight","lineHeight","toolbarHeading2","toolbarHeading3","toolbarHeading4","toolbarParagraph","dropdownReference","handleChange","e","handleMenuChange","getOverlay","map","option","active","fontSize","Math","min","max","textOverflow","maxWidth","height","overflow","dropdownDefaultFont","tabsStyle","current","transition","position","background","borderRadius","visibility","backgroundColor","boxShadow","border","vi","transform","transformOrigin"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useMemo,\n  useState,\n  useRef,\n} from 'react';\nimport classnames from 'classnames';\nimport {\n  DisableWrap,\n  ContainerMenuDown,\n  DesWrap,\n  GalleryWrap,\n  IconWrapper,\n  TableButton,\n  TableStyleSet,\n  TextWrap,\n  TitleWrap,\n} from './style';\nimport { Popover } from '@ali/we-design-next';\nimport { ArrowIconDown } from './icon';\nimport { Tabs } from './Tabs';\nimport { TabPane } from './TabPane';\nimport FontSizeButton, { ITextTypeSelectOption } from './FontSizeButton';\n\nexport interface GalleryContainerProps {\n  onChange?: (nextKey: string) => void;\n  value?: string | null;\n  defaultValue?: string;\n  testid?: string;\n  width?: number;\n  disabled?: boolean;\n  disabledTip?: string;\n  role?: string;\n  locale?: Record<string, string>;\n}\n\nexport const FontSizeMaxSelect: React.FC<GalleryContainerProps> = React.memo(\n  (props) => {\n    const {\n      locale,\n      onChange,\n      value,\n      defaultValue,\n      disabled,\n      testid,\n      width,\n    } = props;\n    const length = width || 490;\n    const [showArrowDown, setShowArrowDown] = useState(false);\n    const [overlayVisible, setOverlayVisible] = useState(false);\n    const selfRef = useRef<HTMLElement>();\n    const sizeComputedRef = useRef<boolean>(false);\n\n    const minFontSize = 9;\n    const maxtFontSize = 13.5;\n    // 文字类型列表：正文、标题1-6\n    const options = useMemo<ITextTypeSelectOption[]>(\n      () => [\n        {\n          title: locale?.toolbarHeading1 || 'Heading 1',\n          type: 'heading-1',\n          des: 'Heading 1',\n          default: 20,\n          fontWeight: 500,\n          lineHeight: '1.45',\n        },\n        {\n          title: locale?.toolbarHeading2 || 'Heading 2',\n          type: 'heading-2',\n          des: 'Heading 2',\n          default: 16,\n          fontWeight: 500,\n          lineHeight: '1.45',\n        },\n        {\n          title: locale?.toolbarHeading3 || 'Heading 3',\n          type: 'heading-3',\n          des: 'Heading 3',\n          default: 14,\n          fontWeight: 500,\n          lineHeight: '1.45',\n        },\n        {\n          title: locale?.toolbarHeading4 || 'Heading 4',\n          type: 'heading-4',\n          des: 'Heading 4',\n          default: 12,\n          fontWeight: 500,\n          lineHeight: '1.45',\n        },\n        {\n          title: locale?.toolbarParagraph || 'Paragraph',\n          type: 'paragraph',\n          des: 'Paragraph',\n          default: 11,\n          fontWeight: 400,\n          lineHeight: '1.45',\n        },\n        {\n          title: locale?.dropdownReference || 'Blockquote',\n          type: 'blockquote',\n          des: 'Blockquote',\n          default: 11,\n          fontWeight: 400,\n          lineHeight: '1.45',\n        },\n      ], [locale],\n    );\n\n    const handleChange = useCallback(\n      (e: string) => {\n        if (onChange) {\n          onChange(e);\n        }\n      },\n      [onChange],\n    );\n\n    const handleMenuChange = useCallback(\n      (e: string) => {\n        if (onChange) {\n          onChange(e);\n        }\n      },\n      [onChange],\n    );\n\n    const getOverlay = () => {\n      return (\n        <TableStyleSet\n          data-testid={`fontSizeMaxSelect_overlay_${testid}`}\n        >\n          {options.map((option) => {\n            return (\n              <TableButton\n                key={option.type}\n                value={option.type}\n                active={option.type === (value || defaultValue)}\n                className={classnames({\n                  active: option.type === (value || defaultValue),\n                })}\n                testid={option.type}\n                onClick={() => {\n                  if (option.type !== (value || defaultValue)) {\n                    handleMenuChange(option.type);\n                  }\n                }}\n              >\n                <TitleWrap\n                  type={option.type}\n                  style={{\n                    fontSize: `${Math.min(\n                      Math.max(option.default * 0.75, minFontSize),\n                      maxtFontSize,\n                    )}pt`,\n                    fontWeight: option.fontWeight,\n                    textOverflow: 'clip',\n                    maxWidth: '65px',\n                    lineHeight: '29px',\n                    height: '29px',\n                    overflow: 'hidden',\n                  }}\n                >\n                  {option.title}\n                </TitleWrap>\n                <DesWrap>\n                  <TextWrap>\n                    {option.title === 'AaBbCcDdEe'\n                      ? option.des\n                      : `${locale?.dropdownDefaultFont || 'Default font'} ${\n                        option.type === 'blockquote' ? '-' : option.default\n                      }`}\n                  </TextWrap>\n                </DesWrap>\n              </TableButton>\n            );\n          })}\n        </TableStyleSet>\n      );\n    };\n\n    const tabsStyle: React.CSSProperties = {\n      width: length,\n      height: '100%',\n    };\n\n    if (!sizeComputedRef.current) {\n      tabsStyle.transition = 'none';\n    }\n\n    return (\n      <DisableWrap\n        className=\"font-size-max-select-layout\"\n        disabled={disabled}\n      >\n        <div\n          style={{\n            position: 'relative',\n            background: 'white',\n            borderRadius: '4px',\n          }}\n          onMouseEnter={() => setShowArrowDown(true)}\n          onMouseLeave={() => setShowArrowDown(false)}\n          data-testid={testid}\n        >\n          <GalleryWrap ref={selfRef}>\n            <Tabs\n              style={tabsStyle}\n              onChange={handleChange}\n              activeKey={value || defaultValue}\n            >\n              {options.map((option) => {\n                return (\n                  <TabPane\n                    tab={\n                      <FontSizeButton\n                        option={option}\n                        maxFontSize={maxtFontSize}\n                        minFontSize={minFontSize}\n                        value={value || defaultValue}\n                        defaultFontFamily={locale?.dropdownDefaultFont || 'Default font'}\n                      />\n                          }\n                    key={option.type}\n                  />\n                );\n              })}\n            </Tabs>\n            <ContainerMenuDown\n              data-testid={`fontSizeMaxSelect_showDown_${testid}`}\n              style={\n                      showArrowDown\n                        ? { visibility: 'visible' }\n                        : { visibility: 'hidden' }\n                    }\n            >\n              <Popover\n                content={getOverlay()}\n                style={{\n                  backgroundColor: 'transparent',\n                  boxShadow: 'none',\n                  border: 'none',\n                }}\n                onVisibleChange={(vi) => {\n                  setOverlayVisible(vi);\n                }}\n                placement=\"bottom\"\n                visible={overlayVisible}\n              >\n                <IconWrapper\n                  onClick={() => {\n                    setOverlayVisible(!overlayVisible);\n                  }}\n                  active={showArrowDown || overlayVisible}\n                  left={length / 2}\n                  style={{\n                    transform: overlayVisible ? 'rotate(180deg)' : 'unset',\n                    transformOrigin: 'center center',\n                  }}\n                >\n                  <ArrowIconDown />\n                </IconWrapper>\n              </Popover>\n            </ContainerMenuDown>\n          </GalleryWrap>\n        </div>\n      </DisableWrap>\n    );\n  },\n);\n"],"file":"index.js"}