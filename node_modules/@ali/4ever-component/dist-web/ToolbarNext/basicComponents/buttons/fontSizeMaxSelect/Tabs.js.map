{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/Tabs.tsx"],"names":["React","TabsWrap","getDataAttr","omit","TabBar","getDefaultActiveKey","props","activeKey","Children","forEach","children","child","disabled","key","activeKeyIsValid","keys","map","indexOf","Tabs","onTabClick","e","setActiveKey","onScroll","target","currentTarget","scrollLeft","nextActiveKey","onChange","setState","getNextActiveKey","next","state","c","push","unshift","length","ret","i","defaultActiveKey","getDerivedStateFromProps","newState","Object","render","restProps","style","testid","Component","defaultProps","destroyInactiveTabPane"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,SAASC,QAAT;AACA,SAASC,WAAT,EAAsBC,IAAtB;AACA,OAAOC,MAAP;;AAGA,SAASC,mBAAT,CAA6BC,KAA7B,EAAiD;AAC/C,MAAIC,SAAJ;AACAP,EAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBH,KAAK,CAACI,QAA7B,EAAuC,UAACC,KAAD,EAAW;AAChD,QAAIA,KAAK,IAAI,CAACJ,SAAV,IAAuB,CAACI,KAAK,CAACL,KAAN,CAAYM,QAAxC,EAAkD;AAChDL,MAAAA,SAAS,GAAGI,KAAK,CAACE,GAAlB;AACD;AACF,GAJD;AAKA,SAAON,SAAP;AACD;;AAED,SAASO,gBAAT,CAA0BR,KAA1B,EAAsCO,GAAtC,EAA4D;AAC1D,MAAME,IAAI,GAAGf,KAAK,CAACQ,QAAN,CAAeQ,GAAf,CACXV,KAAK,CAACI,QADK,EAEX,UAACC,KAAD;AAAA,WAAWA,KAAK,IAAIA,KAAK,CAACE,GAA1B;AAAA,GAFW,CAAb;AAIA,SAAOE,IAAI,CAACE,OAAL,CAAaJ,GAAb,KAAqB,CAA5B;AACD;;AAMD,WAAaK,IAAb;AAAA;;AAQE,gBAAYZ,KAAZ,EAA+B;AAAA;;AAC7B,wCAAMA,KAAN;;AAD6B,UA8B/Ba,UA9B+B,GA8BlB,UAACZ,SAAD,EAAoBa,CAApB,EAA6D;AAAA,UAChED,UADgE,GACjD,MAAKb,KAD4C,CAChEa,UADgE;;AAExE,UAAIA,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACZ,SAAD,EAAYa,CAAZ,CAAV;AACD;;AACD,YAAKC,YAAL,CAAkBd,SAAlB;AACD,KApC8B;;AAAA,UAsC/Be,QAtC+B,GAsCpB,gBAAoC;AAAA,UAAjCC,MAAiC,QAAjCA,MAAiC;AAAA,UAAzBC,aAAyB,QAAzBA,aAAyB;;AAC7C,UAAID,MAAM,KAAKC,aAAX,IAA4BD,MAAM,CAACE,UAAP,GAAoB,CAApD,EAAuD;AACrDF,QAAAA,MAAM,CAACE,UAAP,GAAoB,CAApB;AACD;AACF,KA1C8B;;AAAA,UA4C/BJ,YA5C+B,GA4ChB,UAACK,aAAD,EAA2B;AAAA,wBACR,MAAKpB,KADG;AAAA,UAChCC,SADgC,eAChCA,SADgC;AAAA,UACrBoB,QADqB,eACrBA,QADqB;;AAExC,UAAIpB,SAAS,KAAKmB,aAAlB,EAAiC;AAC/B,YAAI,CAACnB,SAAL,EAAgB;AACd,gBAAKqB,QAAL,CAAc;AACZrB,YAAAA,SAAS,EAAEmB;AADC,WAAd;AAGD;;AACD,YAAIC,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACD,aAAD,CAAR;AACD;AACF;AACF,KAxD8B;;AAAA,UA8D/BG,gBA9D+B,GA8DZ,UAACC,IAAD,EAAmB;AAAA,UAC5BvB,SAD4B,GACd,MAAKwB,KADS,CAC5BxB,SAD4B;AAEpC,UAAMG,QAAe,GAAG,EAAxB;AACAV,MAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuB,MAAKH,KAAL,CAAWI,QAAlC,EAA4C,UAACsB,CAAD,EAAY;AACtD,YAAIA,CAAC,IAAI,CAACA,CAAC,CAAC1B,KAAF,CAAQM,QAAlB,EAA4B;AAC1B,cAAIkB,IAAJ,EAAU;AACRpB,YAAAA,QAAQ,CAACuB,IAAT,CAAcD,CAAd;AACD,WAFD,MAEO;AACLtB,YAAAA,QAAQ,CAACwB,OAAT,CAAiBF,CAAjB;AACD;AACF;AACF,OARD;AAHoC,UAY5BG,MAZ4B,GAYjBzB,QAZiB,CAY5ByB,MAZ4B;AAapC,UAAIC,GAAG,GAAGD,MAAM,IAAIzB,QAAQ,CAAC,CAAD,CAAR,CAAYG,GAAhC;AACAH,MAAAA,QAAQ,CAACD,OAAT,CAAiB,UAACE,KAAD,EAAQ0B,CAAR,EAAc;AAC7B,YAAI1B,KAAK,CAACE,GAAN,KAAcN,SAAlB,EAA6B;AAC3B,cAAI8B,CAAC,KAAKF,MAAM,GAAG,CAAnB,EAAsB;AACpBC,YAAAA,GAAG,GAAG1B,QAAQ,CAAC,CAAD,CAAR,CAAYG,GAAlB;AACD,WAFD,MAEO;AACLuB,YAAAA,GAAG,GAAG1B,QAAQ,CAAC2B,CAAC,GAAG,CAAL,CAAR,CAAgBxB,GAAtB;AACD;AACF;AACF,OARD;AASA,aAAOuB,GAAP;AACD,KAtF8B;;AAG7B,QAAI7B,UAAJ;;AACA,QAAID,KAAK,CAACC,SAAV,EAAqB;AACnBA,MAAAA,UAAS,GAAGD,KAAK,CAACC,SAAlB;AACD,KAFD,MAEO,IAAID,KAAK,CAACgC,gBAAV,EAA4B;AACjC/B,MAAAA,UAAS,GAAGD,KAAK,CAACgC,gBAAlB;AACD,KAFM,MAEA;AACL/B,MAAAA,UAAS,GAAGF,mBAAmB,CAACC,KAAD,CAA/B;AACD;;AAED,UAAKyB,KAAL,GAAa;AACXxB,MAAAA,SAAS,EAAEA;AADA,KAAb;AAZ6B;AAe9B;;AAvBH,OAyBSgC,wBAzBT,GAyBE,kCAAgCjC,KAAhC,EAAmDyB,KAAnD,EAAsE;AACpE,QAAMS,QAAQ,GAAG,EAAjB;;AACA,QAAIlC,KAAK,CAACC,SAAV,EAAqB;AACnBiC,MAAAA,QAAQ,CAACjC,SAAT,GAAqBD,KAAK,CAACC,SAA3B;AACD,KAFD,MAEO,IAAI,CAACO,gBAAgB,CAACR,KAAD,EAAQyB,KAAK,CAACxB,SAAd,CAArB,EAA+C;AACpDiC,MAAAA,QAAQ,CAACjC,SAAT,GAAqBF,mBAAmB,CAACC,KAAD,CAAxC;AACD;;AACD,QAAImC,MAAM,CAAC1B,IAAP,CAAYyB,QAAZ,EAAsBL,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,aAAOK,QAAP;AACD;;AACD,WAAO,IAAP;AACD,GApCH;;AAAA;;AAAA,SAgGEE,MAhGF,GAgGE,kBAAS;AAAA,QACCpC,KADD,GACkB,IADlB,CACCA,KADD;AAAA,QACQyB,KADR,GACkB,IADlB,CACQA,KADR;;AAAA,QAECrB,QAFD,GAE4BJ,KAF5B,CAECI,QAFD;AAAA,QAEciC,SAFd,iCAE4BrC,KAF5B;;AAIP,wBACE,eAAC,QAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACsC;AADf,OAEM1C,WAAW,CAACyC,SAAD,CAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKrB;AAHjB,qBAKE,eAAC,MAAD,eACMnB,IAAI,CAACG,KAAD,EAAQ,CAAC,WAAD,CAAR,CADV;AAEE,MAAA,KAAK,EAAEI,QAFT;AAGE,MAAA,KAAK,EAAEJ,KAAK,CAACsC,KAHf;AAIE,MAAA,SAAS,EAAEb,KAAK,CAACxB,SAJnB;AAKE,MAAA,UAAU,EAAE,KAAKY,UALnB;AAME,MAAA,MAAM,EAAEb,KAAK,CAACuC;AANhB,OALF,CADF;AAgBD,GApHH;;AAAA;AAAA,EAA0B7C,KAAK,CAAC8C,SAAhC;AAAa5B,I,CACJ6B,Y,GAAe;AACpBpB,EAAAA,QAAQ,EAAE,oBAAY,CAAE,CADJ;AAEpBjB,EAAAA,QAAQ,EAAE,IAFU;AAGpBkC,EAAAA,KAAK,EAAE,EAHa;AAIpBI,EAAAA,sBAAsB,EAAE;AAJJ,C","sourcesContent":["import React from 'react';\nimport { TabsWrap } from './style';\nimport { getDataAttr, omit} from './utils';\nimport TabBar from './TabBar';\nimport { ITabsProps } from './utils';\n\nfunction getDefaultActiveKey(props: any): string {\n  let activeKey: string | undefined;\n  React.Children.forEach(props.children, (child) => {\n    if (child && !activeKey && !child.props.disabled) {\n      activeKey = child.key;\n    }\n  });\n  return activeKey as string;\n}\n\nfunction activeKeyIsValid(props: any, key: string): boolean {\n  const keys = React.Children.map(\n    props.children,\n    (child) => child && child.key,\n  );\n  return keys.indexOf(key) >= 0;\n}\n\ninterface ITabsState {\n  activeKey: string;\n}\n\nexport class Tabs extends React.Component<ITabsProps, ITabsState> {\n  static defaultProps = {\n    onChange: (): void => {},\n    children: null,\n    style: {},\n    destroyInactiveTabPane: false,\n  };\n\n  constructor(props: ITabsProps) {\n    super(props);\n\n    let activeKey;\n    if (props.activeKey) {\n      activeKey = props.activeKey;\n    } else if (props.defaultActiveKey) {\n      activeKey = props.defaultActiveKey;\n    } else {\n      activeKey = getDefaultActiveKey(props);\n    }\n\n    this.state = {\n      activeKey: activeKey as string,\n    };\n  }\n\n  static getDerivedStateFromProps(props: ITabsProps, state: ITabsState) {\n    const newState = {} as ITabsState;\n    if (props.activeKey) {\n      newState.activeKey = props.activeKey as string;\n    } else if (!activeKeyIsValid(props, state.activeKey)) {\n      newState.activeKey = getDefaultActiveKey(props);\n    }\n    if (Object.keys(newState).length > 0) {\n      return newState;\n    }\n    return null;\n  }\n\n  onTabClick = (activeKey: string, e?: React.MouseEvent<HTMLDivElement>) => {\n    const { onTabClick } = this.props;\n    if (onTabClick) {\n      onTabClick(activeKey, e);\n    }\n    this.setActiveKey(activeKey);\n  };\n\n  onScroll = ({ target, currentTarget }: any) => {\n    if (target === currentTarget && target.scrollLeft > 0) {\n      target.scrollLeft = 0;\n    }\n  };\n\n  setActiveKey = (nextActiveKey: string) => {\n    const { activeKey, onChange } = this.props;\n    if (activeKey !== nextActiveKey) {\n      if (!activeKey) {\n        this.setState({\n          activeKey: nextActiveKey,\n        });\n      }\n      if (onChange) {\n        onChange(nextActiveKey);\n      }\n    }\n  };\n\n  /**\n   * 传入 true 获得 activeKey 的下一个未被禁用的 key\n   * 传入 false 获得上一个\n   */\n  getNextActiveKey = (next: boolean) => {\n    const { activeKey } = this.state;\n    const children: any[] = [];\n    React.Children.forEach(this.props.children, (c: any) => {\n      if (c && !c.props.disabled) {\n        if (next) {\n          children.push(c);\n        } else {\n          children.unshift(c);\n        }\n      }\n    });\n    const { length } = children;\n    let ret = length && children[0].key;\n    children.forEach((child, i) => {\n      if (child.key === activeKey) {\n        if (i === length - 1) {\n          ret = children[0].key;\n        } else {\n          ret = children[i + 1].key;\n        }\n      }\n    });\n    return ret;\n  };\n\n  render() {\n    const { props, state } = this;\n    const { children, ...restProps } = props;\n\n    return (\n      <TabsWrap\n        style={props.style}\n        {...getDataAttr(restProps)}\n        onScroll={this.onScroll}\n      >\n        <TabBar\n          {...omit(props, ['className'])}\n          panes={children}\n          style={props.style}\n          activeKey={state.activeKey}\n          onTabClick={this.onTabClick}\n          testid={props.testid}\n        />\n      </TabsWrap>\n    );\n  }\n}\n"],"file":"Tabs.js"}