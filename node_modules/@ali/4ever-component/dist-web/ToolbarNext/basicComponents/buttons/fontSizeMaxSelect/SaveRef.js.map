{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/SaveRef.tsx"],"names":["Component","SaveRef","getRef","name","saveRef","node","render","children","props","defaultProps"],"mappings":";AAAA,SAAuBA,SAAvB,QAAwC,OAAxC;;IAOqBC,O;;;;;;;;;;;;UAKnBC,M,GAAS,UAACC,IAAD;AAAA,aAAuB,MAAKA,IAAL,CAAvB;AAAA,K;;UAETC,O,GAAU,UAACD,IAAD;AAAA,aAAkB,UAACE,IAAD,EAAe;AACzC,YAAIA,IAAJ,EAAU;AACR,gBAAKF,IAAL,IAAaE,IAAb;AACD;AACF,OAJS;AAAA,K;;;;;;;SAQVC,M,GAAA,kBAAS;AAAA,QACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,WAAOA,QAAQ,CAAC,KAAKH,OAAN,EAAe,KAAKF,MAApB,CAAf;AACD,G;;;EAlBkCF,S;;AAAhBC,O,CACZQ,Y,GAAe;AACpBF,EAAAA,QAAQ,EAAE;AAAA,WAAM,IAAN;AAAA;AADU,C;SADHN,O","sourcesContent":["import { ReactElement, Component } from 'react';\nimport { IGetRef, ISaveRef } from './utils';\n\ninterface ISaveRefProps {\n  children: (saveRef: ISaveRef, getRef: IGetRef) => ReactElement | null;\n}\n\nexport default class SaveRef extends Component<ISaveRefProps> {\n  static defaultProps = {\n    children: () => null,\n  };\n\n  getRef = (name: string): any => this[name];\n\n  saveRef = (name: string) => (node: any) => {\n    if (node) {\n      this[name] = node;\n    }\n  };\n\n  [x: string]: any;\n\n  render() {\n    const { children } = this.props;\n    return children(this.saveRef, this.getRef) as ReactElement;\n  }\n}\n"],"file":"SaveRef.js"}