{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/TabPane.tsx"],"names":["React","useRef","classnames","TabPaneWrap","getDataAttr","TabPane","props","className","actived","forceRender","key","id","children","restProps","isActived","current","shouldRender","tabKeyExists","String","length","uuid","defaultProps","disabled"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAAiD,OAAjD;qBAC4B,a;AAA5B,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AA8BA,OAAO,IAAMC,OAAgC,GAAG,SAAnCA,OAAmC,CAACC,KAAD,EAAW;AAAA,aASrDA,KATqD;AAAA,MAEvDC,SAFuD,QAEvDA,SAFuD;AAAA,MAGvDC,OAHuD,QAGvDA,OAHuD;AAAA,MAIvDC,WAJuD,QAIvDA,WAJuD;AAAA,MAKvDC,GALuD,QAKvDA,GALuD;AAAA,MAMvDC,EANuD,QAMvDA,EANuD;AAAA,MAOvDC,QAPuD,QAOvDA,QAPuD;AAAA,MAQpDC,SARoD,0GAUzD;;;AACA,MAAMC,SAAS,GAAGb,MAAM,CAAU,CAAC,CAACO,OAAZ,CAAxB;AACAM,EAAAA,SAAS,CAACC,OAAV,GAAoBD,SAAS,CAACC,OAAV,IAAqB,CAAC,CAACP,OAA3C;AAEA,MAAMQ,YAAY,GAAGF,SAAS,CAACC,OAAV,IAAqBN,WAA1C;AAEA,MAAMQ,YAAY,GAAGP,GAAG,IAAIQ,MAAM,CAACR,GAAD,CAAN,CAAYS,MAAZ,GAAqB,CAAjD;AACA,MAAMC,IAAI,GAAGH,YAAY,KAAKN,EAAE,GAAMD,GAAN,SAAaC,EAAb,QAAuBD,GAA9B,CAAzB;AAEA,sBACE,eAAC,WAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,mBAAaF,OAAO,GAAG,OAAH,GAAa,MAFnC;AAGE,IAAA,QAAQ,EAAEA,OAAO,GAAG,CAAH,GAAO,CAAC,CAH3B;AAIE,IAAA,SAAS,EAAEN,UAAU,CAACK,SAAD,EAAY;AAC/BC,MAAAA,OAAO,EAAPA;AAD+B,KAAZ,CAJvB;AAOE,IAAA,EAAE,EAAEY,IAAI,iBAAeA,IAPzB;AAQE,uBAAiBA,IAAI,aAAWA;AARlC,KASMhB,WAAW,CAACS,SAAD,CATjB,GAWGG,YAAY,GAAGJ,QAAH,GAAc,IAX7B,CADF;AAeD,CAlCM;AAoCPP,OAAO,CAACgB,YAAR,GAAuB;AACrBC,EAAAA,QAAQ,EAAE;AADW,CAAvB","sourcesContent":["import React, { useRef, PropsWithChildren } from 'react';\nimport classnames from 'classnames';\nimport { TabPaneWrap } from './style';\nimport { getDataAttr } from './utils';\n\nexport interface ITabPaneProps {\n  /**\n   * TabPane的ID\n   */\n  id?: string;\n  /**\n   * TabPane的唯一key\n   */\n  key: string;\n  /**\n   * tab名称\n   */\n  tab?: React.ReactNode;\n  /**\n   * TabPane的根节点类名\n   */\n  className?: string;\n  /**\n   * 当前TabPane不是激活态的时候是否强制渲染内容，默认值：false\n   */\n  forceRender?: boolean;\n  /**\n   * 能不能被选中，默认：false\n   */\n  disabled?: boolean;\n  actived?: boolean;\n}\n\nexport const TabPane: React.FC<ITabPaneProps> = (props) => {\n  const {\n    className,\n    actived,\n    forceRender,\n    key,\n    id,\n    children,\n    ...restProps\n  } = props as PropsWithChildren<ITabPaneProps>;\n  // 此缓存是为了让最近显示过的tab项不销毁\n  const isActived = useRef<boolean>(!!actived);\n  isActived.current = isActived.current || !!actived;\n\n  const shouldRender = isActived.current || forceRender;\n\n  const tabKeyExists = key && String(key).length > 0;\n  const uuid = tabKeyExists && (id ? `${key}-${id}` : `${key}`);\n\n  return (\n    <TabPaneWrap\n      role=\"tabpanel\"\n      aria-hidden={actived ? 'false' : 'true'}\n      tabIndex={actived ? 0 : -1}\n      className={classnames(className, {\n        actived\n      })}\n      id={uuid && `tabpane-${uuid}`}\n      aria-labelledby={uuid && `tab-${uuid}`}\n      {...getDataAttr(restProps)}\n    >\n      {shouldRender ? children : null}\n    </TabPaneWrap>\n  );\n};\n\nTabPane.defaultProps = {\n  disabled: false,\n};\n"],"file":"TabPane.js"}