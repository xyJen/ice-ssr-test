{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/TranslationSelect.tsx"],"names":["IconTranslate","React","useCallback","useMemo","IconMenu","Menu","TranslationSelect","props","onChange","testid","menuItems","restProps","useState","overlayVisible","setOverlayVisible","items","options","map","key","title","String","handleSelect","v"],"mappings":";;AAAA,SAASA,aAAT;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;qBAA4B,a;AAC5B,SAASC,QAAT,EAAmBC,IAAnB;;yBA8CY,eAAC,aAAD,O;;AAzBZ,OAAO,IAAMC,iBAAoD,GAAG,SAAvDA,iBAAuD,CAACC,KAAD,EAAW;AAAA,MACrEC,QADqE,GACvBD,KADuB,CACrEC,QADqE;AAAA,MAC3DC,MAD2D,GACvBF,KADuB,CAC3DE,MAD2D;AAAA,MACnDC,SADmD,GACvBH,KADuB,CACnDG,SADmD;AAAA,MACrCC,SADqC,iCACvBJ,KADuB;;AAAA,wBAEjCN,KAAK,CAACW,QAAN,CAAe,KAAf,CAFiC;AAAA,MAEtEC,cAFsE;AAAA,MAEtDC,iBAFsD;;AAI7E,MAAMC,KAAK,GAAGZ,OAAO,CAAC,YAAM;AAC1B,QAAMa,OAAmD,GAAGN,SAAS,CAACO,GAAV,CAC1D;AAAA,UAAGC,GAAH,QAAGA,GAAH;AAAA,UAAQC,KAAR,QAAQA,KAAR;AAAA,aAAqB;AACnBD,QAAAA,GAAG,EAAEE,MAAM,CAACF,GAAD,CADQ;AAEnBC,QAAAA,KAAK,EAAEC,MAAM,CAACD,KAAD,CAFM;AAGnBV,QAAAA,MAAM,cAAYS;AAHC,OAArB;AAAA,KAD0D,CAA5D;AAOA,WAAOF,OAAP;AACD,GAToB,EASlB,CAACN,SAAD,CATkB,CAArB;AAWA,MAAMW,YAAY,GAAGnB,WAAW,CAC9B,iBAAS;AAAA,QAAPoB,CAAO;AACPd,IAAAA,QAAQ,IAAIA,QAAQ,CAACc,CAAD,CAApB;AACAR,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAJ6B,EAK9B,CAACN,QAAD,CAL8B,CAAhC;AAQA,sBACE,eAAC,QAAD;AACE,IAAA,IAAI,OADN;AAEE,IAAA,OAAO,eACL,eAAC,IAAD;AACE,qBAAgBC,MAAhB,aADF;AAEE,MAAA,KAAK,EAAEM,KAFT;AAGE,MAAA,QAAQ,EAAEM;AAHZ,MAHJ;AASE,IAAA,cAAc,EAAER,cATlB;AAUE,IAAA,eAAe,EAAEC,iBAVnB;AAWE,IAAA,MAAM,EAAEL;AAXV,KAYME,SAZN,EADF;AAgBD,CAvCM","sourcesContent":["import { IconTranslate } from '../icons';\nimport React, { useCallback, useMemo } from 'react';\nimport { IconMenu, Menu } from './Basics';\n\nexport interface ITranslationSelectProps\n  extends Pick<\n  Partial<React.ComponentProps<typeof IconMenu>>,\n  | 'onVisibleChange'\n  | 'title'\n  | 'tooltip'\n  | 'icon'\n  | 'disabled'\n  | 'testid'\n  | 'role'\n  > {\n  onChange?: (lineHeight: string) => void;\n  disabled?: boolean;\n  menuItems: Array<{\n    key: string;\n    title: string;\n  }>;\n}\n\nexport const TranslationSelect: React.FC<ITranslationSelectProps> = (props) => {\n  const { onChange, testid, menuItems, ...restProps } = props;\n  const [overlayVisible, setOverlayVisible] = React.useState(false);\n\n  const items = useMemo(() => {\n    const options: React.ComponentProps<typeof Menu>['items'] = menuItems.map(\n      ({ key, title }) => ({\n        key: String(key),\n        title: String(title),\n        testid: `option-${key}`,\n      }),\n    );\n    return options;\n  }, [menuItems]);\n\n  const handleSelect = useCallback(\n    ([v]) => {\n      onChange && onChange(v);\n      setOverlayVisible(false);\n    },\n    [onChange],\n  );\n\n  return (\n    <IconMenu\n      icon={<IconTranslate />}\n      overlay={\n        <Menu\n          data-testid={`${testid}-options`}\n          items={items}\n          onSelect={handleSelect}\n        />\n      }\n      overlayVisible={overlayVisible}\n      onVisibleChange={setOverlayVisible}\n      testid={testid}\n      {...restProps}\n    />\n  );\n};\n"],"file":"TranslationSelect.js"}