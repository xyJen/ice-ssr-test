{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/LineHeightSelect.tsx"],"names":["IconLineHeight","React","useCallback","useMemo","IconMenu","Menu","LINE_HEIGHT_DEFAULT_VALUES","CUSTOMIZE_KEY","LineHeightSelect","props","lineHeightValues","disabled","onChange","onCustomize","title","value","customButtonTitle","testid","restProps","useState","overlayVisible","setOverlayVisible","items","options","map","key","String","selected","push","handleSelect","v","data","Number","isNaN"],"mappings":"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","sourcesContent":["import { IconLineHeight } from '../icons';\nimport React, { useCallback, useMemo } from 'react';\nimport { IconMenu, Menu } from './Basics';\n\n\n\nexport const LINE_HEIGHT_DEFAULT_VALUES = [1, 1.15, 1.5, 2, 2.5, 3];\n\nexport interface ILineHeightSelectProps extends\n  Pick<Partial<React.ComponentProps<typeof IconMenu>>, 'onVisibleChange' | 'title' | 'tooltip' | 'icon' | 'disabled' | 'testid' | 'role'> {\n\n  /**\n   * 行高\n   */\n  value: number;\n  /**\n   * 行高值列表\n   */\n  lineHeightValues?: number[];\n  /**\n   * 设置国际化语言\n   */\n  customButtonTitle?: string;\n  /**\n   * 对齐方式修改时的回调函数\n   */\n  onChange?: (lineHeight: number) => void;\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n\n  /**\n   * 选中 “自定义行高” 项的回调函数， 不传（或传入的不是函数）则无 “自定义行高” 选项\n   */\n  onCustomize?: () => void;\n}\n\nconst CUSTOMIZE_KEY = 'CUSTOMIZE_KEY';\n\nexport const LineHeightSelect: React.FC<ILineHeightSelectProps> = (props) => {\n  const {\n    lineHeightValues = LINE_HEIGHT_DEFAULT_VALUES,\n    disabled,\n    onChange,\n    onCustomize,\n    title,\n    value,\n    customButtonTitle,\n    testid,\n    ...restProps\n  } = props;\n  const [overlayVisible, setOverlayVisible] = React.useState(false);\n\n  const items = useMemo(() => {\n    const options: React.ComponentProps<typeof Menu>['items'] = lineHeightValues.map((key) => ({\n      key: String(key),\n      selected: value === key,\n      title: String(key),\n      testid: `option-${key}`,\n    }));\n    if (onCustomize) {\n      options.push('divider');\n      options.push(\n        {\n          key: CUSTOMIZE_KEY,\n          title: customButtonTitle || '',\n        }\n      )\n    }\n    return options;\n  }, [value, lineHeightValues, customButtonTitle, onCustomize]);\n\n\n  const handleSelect = useCallback(([v]) => {\n\n    try {\n      if (v === CUSTOMIZE_KEY && onCustomize) {\n        onCustomize();\n      } else {\n        const data = Number(v);\n        if (!Number.isNaN(data) && onChange) {\n          onChange(data);\n        }\n      }\n      setOverlayVisible(false);\n    } catch {\n\n    }\n\n  }, [onChange, onCustomize]);\n\n\n  return (\n    <IconMenu\n      icon={<IconLineHeight />}\n      overlay={\n        <Menu\n          data-testid={`${testid}-options`}\n          items={items}\n          onSelect={handleSelect}\n        />\n      }\n      overlayVisible={overlayVisible}\n      onVisibleChange={setOverlayVisible}\n      testid={testid}\n      {...restProps}\n    />\n  );\n};\n\n"],"file":"LineHeightSelect.js"}