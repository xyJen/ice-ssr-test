import React, { useMemo, useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { FontSizeSelectSingleLineDefaultWidth, TextSelect } from "./Basics";
export var szList = [9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 42, 48, 72];
export var FontSizeSelect = function FontSizeSelect(props) {
  var onChange = props.onChange,
      disabled = props.disabled,
      testid = props.testid,
      _props$value = props.value,
      value = _props$value === void 0 ? 12 : _props$value,
      role = props.role,
      tooltip = props.tooltip,
      options = props.options;
  var szOptions = useMemo(function () {
    var optionsInNumber = options || szList;
    return optionsInNumber.map(function (option) {
      return {
        key: String(option),
        title: String(option),
        testid: "option-" + option
      };
    });
  }, [options]);
  var handleChange = useCallback(function (value) {
    try {
      var num = Number(value);

      if (!Number.isNaN(num)) {
        if (onChange) {
          onChange(num);
        }
      }
    } catch (_unused) {}
  }, [onChange]);
  return /*#__PURE__*/_createElement(TextSelect, {
    value: value > 0 ? String(value) : '0',
    disabled: disabled,
    role: role,
    width: FontSizeSelectSingleLineDefaultWidth,
    options: szOptions,
    onChange: handleChange,
    mode: 'input',
    testid: testid || 'FontSizeSelect',
    tooltip: tooltip,
    "data-role": role || 'font_size_select'
  });
};
//# sourceMappingURL=FontSizeSelect.js.map