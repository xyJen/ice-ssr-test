{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/hooks.tsx"],"names":["React","useRecentColors","RECENT_COLOR_STORAGE_KEY","recentColorsStorage","localStorage","getItem","initRecentColors","JSON","parse","useState","recentColors","setRecentColors","useEffect","setItem","stringify","e","console","error","addRecentColor","color","newRecentColors","Array","from","Set","splice"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,MAAMC,wBAAwB,GAAG,sBAAjC;AACA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqBH,wBAArB,CAA5B;AAEA,MAAII,gBAAJ;;AACA,MAAI;AACFA,IAAAA,gBAAgB,GAAGH,mBAAmB,GAAGI,IAAI,CAACC,KAAL,CAAWL,mBAAX,CAAH,GAAqC,EAA3E;AACD,GAFD,CAEE,gBAAM;AACNG,IAAAA,gBAAgB,GAAG,EAAnB;AACD;;AATkC,wBAWKN,KAAK,CAACS,QAAN,CAAyBH,gBAAzB,CAXL;AAAA,MAW5BI,YAX4B;AAAA,MAWdC,eAXc;;AAanCX,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpB,QAAI;AACFR,MAAAA,YAAY,CAACS,OAAb,CAAqBX,wBAArB,EAA+CK,IAAI,CAACO,SAAL,CAAeJ,YAAf,CAA/C;AACD,KAFD,CAEE,OAAMK,CAAN,EAAS;AACT;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GAPD,EAOG,CAACL,YAAD,CAPH;AASAV,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpBD,IAAAA,eAAe,CAACL,gBAAD,CAAf;AACD,GAFD,EAEG,CAACH,mBAAD,CAFH;;AAIA,MAAMe,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAmB;AACxC,QAAMC,eAAe,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,EAASJ,KAAT,SAAmBT,YAAnB,EAAX,EAA8Cc,MAA9C,CAAqD,CAArD,EAAwD,EAAxD,CAAxB;AACAb,IAAAA,eAAe,CAACS,eAAD,CAAf;AACD,GAHD;;AAMA,SAAO,CAACV,YAAD,EAAeQ,cAAf,CAAP;AACD,CAjCM","sourcesContent":["import React from 'react';\n\nexport const useRecentColors = () => {\n  const RECENT_COLOR_STORAGE_KEY = 'toolbar-recent-color';\n  const recentColorsStorage = localStorage.getItem(RECENT_COLOR_STORAGE_KEY);\n\n  let initRecentColors: string[];\n  try {\n    initRecentColors = recentColorsStorage ? JSON.parse(recentColorsStorage) : [];\n  } catch {\n    initRecentColors = [];\n  }\n\n  const [recentColors, setRecentColors] = React.useState<string[]>(initRecentColors);\n\n  React.useEffect(() => {\n    try {\n      localStorage.setItem(RECENT_COLOR_STORAGE_KEY, JSON.stringify(recentColors));\n    } catch(e) {\n      // 空间不足\n      console.error(e);\n    }\n  }, [recentColors]);\n\n  React.useEffect(() => {\n    setRecentColors(initRecentColors);\n  }, [recentColorsStorage]);\n\n  const addRecentColor = (color: string) => {\n    const newRecentColors = Array.from(new Set([color, ...recentColors])).splice(0, 10);\n    setRecentColors(newRecentColors);\n  };\n\n\n  return [recentColors, addRecentColor] as [string[], (color: string) => void];\n};"],"file":"hooks.js"}