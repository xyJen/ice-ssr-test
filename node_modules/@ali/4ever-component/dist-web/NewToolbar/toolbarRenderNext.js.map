{"version":3,"sources":["../../../src/NewToolbar/toolbarRenderNext.tsx"],"names":["React","useState","useCallback","ButtonSize","ToolbarMode","judgeShouldShow","ToolbarConfig","ToolbarWrapper","ToolbarGroupWrapper","GroupWrapper","ToolbarRowWrapper","RowWrapper","ToolbarColumnWrapper","ColumnWrapper","ToolbarLayout","renderToolArray","idleRender","disabledStyle","opacity","pointerEvents","ToolbarRenderNext","props","controller","plugins","singleLayout","doubleLayout","hiddenToolButtons","toolbarMode","customToolButtons","disableTargets","fineAdaptation","defaultToolbarMode","backgroundColor","onToolbarModeChange","value","uiToolbarMode","setUiToolbarMode","handleModeChange","mode","realToolbarMode","target","useMemo","pluginsArray","array","i","length","tgt","plugin","getTarget","toolbar","renderTool","item","index","isValidElement","name","hideTargets","showTargets","size","rest","CustomComponent","split","pluginName","buttonName","hash","buttons","Component","shouldShow","locale","isDoubleMode","realSize","small","medium","showTitle","large","renderLine","line","layoutMode","contents","Wrapper","renderGroup","group","hideBorder","clearPadding","groupFineAdaptation","realFineAdaption","single","undefined","toString","renderSingleToolbar","singleLineLayout","layout","defaultSingleLayout","tls","map","idx","toolLines","filter","display","renderDoubleToolbar","doubleLineLayout","defaultDoubleLayout","tgs","handleMouseDown","ev","activeElement","window","document","closest","tagName","toLocaleLowerCase","preventDefault","stopPropagation","fTgts","defaultDisableTargets","shouldDisableWholeToolbar","hideSwitchBtn","classes","wrapperStyle","process","env","NODE_ENV","leading"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport React, { useState, useCallback } from 'react';\nimport {\n  ButtonSize,\n  ToolbarRenderNextProps,\n  ToolButtonProps,\n  ToolGroupProps,\n  ToolLineProps,\n  LayoutType,\n  ToolbarMode,\n} from './interface';\nimport { judgeShouldShow } from '../Toolbar/util';\nimport ToolbarConfig from './config';\nimport { ToolbarWrapper } from './styled';\nimport {\n  ToolbarGroupWrapper as GroupWrapper,\n  ToolbarRowWrapper as RowWrapper,\n  ToolbarColumnWrapper as ColumnWrapper,\n  ToolbarLayout,\n} from '@ali/we-toolbar';\nimport { renderToolArray } from './util';\nimport { idleRender } from '../idleRender';\n\nexport const disabledStyle: React.CSSProperties = {\n  opacity: 0.35,\n  pointerEvents: 'none',\n};\n\nconst ToolbarRenderNext: React.FC<ToolbarRenderNextProps> = (props) => {\n  const {\n    controller,\n    plugins,\n    singleLayout,\n    doubleLayout,\n    hiddenToolButtons = {},\n    toolbarMode,\n    customToolButtons = {},\n    disableTargets,\n    fineAdaptation,\n    defaultToolbarMode,\n    backgroundColor,\n    onToolbarModeChange,\n  } = props;\n  const { value } = controller;\n  const [uiToolbarMode, setUiToolbarMode] = useState(defaultToolbarMode);\n  const handleModeChange = useCallback((mode: ToolbarMode) => {\n    setUiToolbarMode(mode);\n    onToolbarModeChange && onToolbarModeChange(mode);\n  }, []);\n  const realToolbarMode = 'toolbarMode' in props ? toolbarMode : uiToolbarMode;\n  /**\n   * 从插件查询哪个插件被选中（暂不支持多个插件同时识别）\n   * 通过调用插件 getTarget 实现\n   */\n  const target = React.useMemo(() => {\n    const pluginsArray = plugins.array;\n    for (let i = 0; i < pluginsArray.length; i += 1) {\n      let tgt;\n      const plugin = pluginsArray[i];\n      const getTarget = plugin.toolbar && plugin.toolbar.getTarget;\n      if (getTarget) {\n        tgt = getTarget(controller);\n      }\n      if (tgt) {\n        return tgt;\n      }\n    }\n  }, [plugins.array, value]);\n\n  /**\n   * 渲染单个 toolButton\n   * @param toolButton配置，支持直接传一个react元素\n   * @param index\n   */\n  const renderTool = (item: ToolButtonProps | React.ReactElement, index: number) => {\n    if (React.isValidElement(item)) {\n      return item;\n    }\n    const { name, hideTargets, showTargets, size, ...rest } = item;\n\n    // hiddenToolButtons 优先\n    if (hiddenToolButtons[name]) return null;\n\n    // 优先从自定义组件里匹配\n    const CustomComponent = customToolButtons[name];\n\n    const [pluginName, buttonName = 'default'] = name.split('.');\n    const plugin = plugins.hash[pluginName];\n    if (!plugin && !CustomComponent) {\n      return null;\n    }\n\n    const buttons = plugin?.toolbar && plugin?.toolbar?.buttons;\n    const Component = CustomComponent || (buttons && buttons[buttonName]);\n\n    if (!Component) {\n      return null;\n    }\n\n    if (plugin?.toolbar) {\n      // 判断是否隐藏\n      const shouldShow = judgeShouldShow(target, showTargets, hideTargets);\n      if (!shouldShow) return null;\n    }\n\n    // 优先取自定义国际化文案\n    const locale = plugin?.toolbar?.locale;\n    const isDoubleMode = realToolbarMode === ToolbarMode.double;\n    const realSize = size || (isDoubleMode ? ButtonSize.small : ButtonSize.medium);\n    const showTitle = realSize === ButtonSize.large;\n\n    return (\n      <Component\n        controller={controller}\n        toolbarMode={realToolbarMode}\n        locale={locale}\n        size={realSize}\n        key={index}\n        showTitle={showTitle}\n        {...rest}\n      />\n    );\n  };\n\n  const renderLine = (line: ToolLineProps, index: number, layoutMode: LayoutType = 'row') => {\n    const contents = renderToolArray(line, 'toolButtons', target, renderTool);\n    if (!contents) return null;\n    const Wrapper = layoutMode === 'row' ? RowWrapper : ColumnWrapper;\n    return (\n      <Wrapper key={index}>\n        {contents}\n      </Wrapper>\n    );\n  };\n\n  const renderGroup = (group: ToolGroupProps, index: number, toolbarMode: ToolbarMode) => {\n    const { layoutMode, hideBorder, clearPadding, fineAdaptation: groupFineAdaptation } = group;\n    const contents = renderToolArray(group, 'toolLines', target, renderLine, layoutMode);\n\n    // 单行默认精细化控制，双行默认按组收缩\n    let realFineAdaption = toolbarMode === ToolbarMode.single;\n    if (groupFineAdaptation !== undefined) {\n      realFineAdaption = groupFineAdaptation;\n    } else if (fineAdaptation !== undefined) {\n      realFineAdaption = fineAdaptation;\n    }\n    if (!contents) return null;\n    return (\n      <GroupWrapper\n        layoutType=\"row\"\n        groupKey={index.toString()}\n        fineAdaptation={realFineAdaption}\n        key={index}\n        hideBorder={hideBorder}\n        clearPadding={clearPadding}\n      >\n        {contents}\n      </GroupWrapper>\n    );\n  };\n\n  const renderSingleToolbar = (singleLineLayout?: ToolLineProps[]) => {\n    const layout = singleLineLayout || ToolbarConfig.defaultSingleLayout;\n    // @ts-ignore\n    const tls = layout.map((line, idx) => {\n      const group = {\n        toolLines: [\n          line,\n        ],\n      };\n      return renderGroup(group, idx, ToolbarMode.single);\n    }).filter(item => item);\n    if (!tls.length) return null;\n    return (\n      <div style={{ display: 'flex' }}>\n        {tls}\n      </div>\n    );\n  };\n\n  const renderDoubleToolbar = (doubleLineLayout?: ToolGroupProps[]) => {\n    const layout = doubleLineLayout || ToolbarConfig.defaultDoubleLayout;\n    const tgs = layout.map((group, idx) => renderGroup(group, idx, ToolbarMode.double)).filter(item => item);\n    if (!tgs.length) return null;\n    return (\n      <div style={{ display: 'flex' }} >\n        {tgs}\n      </div>\n    );\n  };\n\n  /**\n   * 阻止默认事件，防止文档区域失焦\n   */\n  const handleMouseDown = useCallback(ev => {\n    const { activeElement } = window.document;\n\n    // 对于有自定义输入域的不可编辑对象，不阻止其失焦行为\n    if (activeElement && activeElement.closest('[data-cangjie-not-editable]')) {\n      return;\n    }\n\n    if (ev.target?.tagName.toLocaleLowerCase() !== 'input') {\n      // 放过input，以便输入地方可以正常输入\n      ev.preventDefault && ev.preventDefault();\n      ev.stopPropagation && ev.stopPropagation();\n    }\n  }, []);\n\n  const fTgts = disableTargets || ToolbarConfig.defaultDisableTargets;\n  const shouldDisableWholeToolbar = fTgts[target];\n  const hideSwitchBtn = !singleLayout || !doubleLayout;\n\n  let classes = 'bi-toolbar';\n  let wrapperStyle: React.CSSProperties = {};\n  if (shouldDisableWholeToolbar) {\n    wrapperStyle = disabledStyle;\n  }\n  if (realToolbarMode === ToolbarMode.double) {\n    classes += ' double';\n  } else {\n    classes += ' single';\n  }\n\n  // @ts-ignore\n  return (\n    <ToolbarWrapper\n      style={wrapperStyle}\n      className={classes}\n      onMouseDown={handleMouseDown}\n      data-role={'toolbar'}\n    >\n      <ToolbarLayout\n        mode={realToolbarMode as ToolbarMode}\n        /*\n        // @ts-ignore */\n        onModeChange={handleModeChange}\n        /*\n        // @ts-ignore */\n        singleLineToolbar={renderSingleToolbar(singleLayout) || undefined}\n        /*\n        // @ts-ignore */\n        doubleLineToolbar={renderDoubleToolbar(doubleLayout) || undefined}\n        hideSwitchBtn={hideSwitchBtn}\n        // @ts-ignore\n        fineAdaptation={fineAdaptation}\n        backgroundColor={backgroundColor}\n      />\n    </ToolbarWrapper>\n  );\n};\n\nexport default process.env.NODE_ENV === 'test'\n  ? ToolbarRenderNext\n  : idleRender(ToolbarRenderNext, 400, { leading: true });\n"],"file":"toolbarRenderNext.js"}