{"version":3,"sources":["../../../src/SelectionBar/reducer.ts"],"names":["MOUNT_SELECTION_TOOLBAR","Symbol","UPDATE_LAST_COLOR","UPDATE_LAST_HIGHLIGHT","UPDATE_LAST_FILL","UPDATE_CAN_HIDE","selectionBarReducer","state","action","type","lastColor","payload","lastHighlight","lastFill","canHide","mountSelectionToolbar"],"mappings":";;;;;;;AAEO,MAAMA,uBAAuB,GAAGC,MAAM,CAAC,yBAAD,CAAtC;;AAEA,MAAMC,iBAAiB,GAAGD,MAAM,CAAC,mBAAD,CAAhC;;AAMA,MAAME,qBAAqB,GAAGF,MAAM,CAAC,uBAAD,CAApC;;AAMA,MAAMG,gBAAgB,GAAGH,MAAM,CAAC,kBAAD,CAA/B;;AAMA,MAAMI,eAAe,GAAGJ,MAAM,CAAC,iBAAD,CAA9B;;;AAYP,MAAMK,mBAAmB,GAAG,CAC1BC,KAD0B,EAE1BC,MAF0B,KAGvB;AACH,MAAIA,MAAM,CAACC,IAAP,KAAgBP,iBAApB,EAAuC;AACrC,WAAO,EACL,GAAGK,KADE;AAELG,MAAAA,SAAS,EAAEF,MAAM,CAACG;AAFb,KAAP;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBN,qBAApB,EAA2C;AACzC,WAAO,EACL,GAAGI,KADE;AAELK,MAAAA,aAAa,EAAEJ,MAAM,CAACG;AAFjB,KAAP;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBL,gBAApB,EAAsC;AACpC,WAAO,EACL,GAAGG,KADE;AAELM,MAAAA,QAAQ,EAAEL,MAAM,CAACG;AAFZ,KAAP;AAID;;AACD,MAAIH,MAAM,CAACC,IAAP,KAAgBJ,eAApB,EAAqC;AACnC,WAAO,EACL,GAAGE,KADE;AAELO,MAAAA,OAAO,EAAEN,MAAM,CAACG;AAFX,KAAP;AAID;;AACD,SAAOJ,KAAP;AACD,CA7BD;;AA+BO,SAASQ,qBAAT,GAAiC;AACtC,SAAO;AACLN,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD;;eAEcM,mB","sourcesContent":["import type { SelectionBarContextInterface } from './types';\n\nexport const MOUNT_SELECTION_TOOLBAR = Symbol('MOUNT_SELECTION_TOOLBAR');\n\nexport const UPDATE_LAST_COLOR = Symbol('UPDATE_LAST_COLOR');\nexport interface UpdateLastColorAction {\n  type: typeof UPDATE_LAST_COLOR;\n  payload: string;\n}\n\nexport const UPDATE_LAST_HIGHLIGHT = Symbol('UPDATE_LAST_HIGHLIGHT');\nexport interface UpdateLastHighlightAction {\n  type: typeof UPDATE_LAST_HIGHLIGHT;\n  payload: string;\n}\n\nexport const UPDATE_LAST_FILL = Symbol('UPDATE_LAST_FILL');\nexport interface UpdateLastFillAction {\n  type: typeof UPDATE_LAST_FILL;\n  payload: string;\n}\n\nexport const UPDATE_CAN_HIDE = Symbol('UPDATE_CAN_HIDE');\nexport interface UpdateCanHideAction {\n  type: typeof UPDATE_CAN_HIDE;\n  payload: boolean;\n}\n\nexport type SelectionBarActionType =\n  | UpdateLastColorAction\n  | UpdateLastHighlightAction\n  | UpdateLastFillAction\n  | UpdateCanHideAction;\n\nconst selectionBarReducer = (\n  state: SelectionBarContextInterface,\n  action: SelectionBarActionType,\n) => {\n  if (action.type === UPDATE_LAST_COLOR) {\n    return {\n      ...state,\n      lastColor: action.payload,\n    };\n  }\n  if (action.type === UPDATE_LAST_HIGHLIGHT) {\n    return {\n      ...state,\n      lastHighlight: action.payload,\n    };\n  }\n  if (action.type === UPDATE_LAST_FILL) {\n    return {\n      ...state,\n      lastFill: action.payload,\n    };\n  }\n  if (action.type === UPDATE_CAN_HIDE) {\n    return {\n      ...state,\n      canHide: action.payload,\n    }\n  }\n  return state;\n};\n\nexport function mountSelectionToolbar() {\n  return {\n    type: MOUNT_SELECTION_TOOLBAR,\n  };\n}\n\nexport default selectionBarReducer;\n"],"file":"reducer.js"}