"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSelectionBarContext = useSelectionBarContext;
exports.SelectionBarProvider = exports.SelectionBarContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _reducer = _interopRequireWildcard(require("./reducer"));

const _createElement = /*#__PURE__*/_react.default.createElement;
const [DEFAULT_COLOR, INITIAL_HIGHLIGHT, INITIAL_FILL, INITIAL_CAN_HIDE] = ['#404040', '#FBF3DC', '#FDBE3D', true];

const SelectionBarContext = /*#__PURE__*/_react.default.createContext(null);

exports.SelectionBarContext = SelectionBarContext;

function useSelectionBarContext() {
  const context = _react.default.useContext(SelectionBarContext);

  if (!context) {
    throw new Error('SelectionBarContext not found.');
  }

  return context;
}

const SelectionBarProvider = props => {
  const [state, dispatch] = _react.default.useReducer(_reducer.default, {
    lastColor: DEFAULT_COLOR,
    lastHighlight: INITIAL_HIGHLIGHT,
    lastFill: INITIAL_FILL,
    canHide: INITIAL_CAN_HIDE
  });

  const actions = _react.default.useMemo(() => ({
    updateLastColor: color => {
      dispatch({
        type: _reducer.UPDATE_LAST_COLOR,
        payload: color
      });
    },
    updateLastHighlight: highlight => {
      dispatch({
        type: _reducer.UPDATE_LAST_HIGHLIGHT,
        payload: highlight
      });
    },
    updateLastFill: fill => {
      dispatch({
        type: _reducer.UPDATE_LAST_FILL,
        payload: fill
      });
    },
    updateCanHide: canHide => {
      dispatch({
        type: _reducer.UPDATE_CAN_HIDE,
        payload: canHide
      });
    }
  }), []);

  const contextValue = _react.default.useMemo(() => [state, actions], [actions, state]);

  return /*#__PURE__*/_createElement(SelectionBarContext.Provider, {
    value: contextValue
  }, props.children);
};

exports.SelectionBarProvider = SelectionBarProvider;
//# sourceMappingURL=context.js.map