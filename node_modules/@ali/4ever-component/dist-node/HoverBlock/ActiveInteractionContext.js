"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActiveInteractionProvider = exports.ActiveInteractionHooks = void 0;

var _react = _interopRequireDefault(require("react"));

const _createElement = /*#__PURE__*/_react.default.createElement;
const UPDATE_ACTIVE_INTERACTION = Symbol('UPDATE_ACTIVE_INTERACTION');

function updateActiveInteraction(type) {
  return {
    type: UPDATE_ACTIVE_INTERACTION,
    payload: {
      type
    }
  };
}

function reducer(state, action) {
  const {
    type,
    payload
  } = action;

  if (type === UPDATE_ACTIVE_INTERACTION) {
    return {
      type: payload.type
    };
  }

  return state;
}

const initState = '';

const initUpdate = type => {};

const ActiveInteractionContext = /*#__PURE__*/_react.default.createContext([initState, initUpdate]);

function useActiveInteraction() {
  return _react.default.useContext(ActiveInteractionContext);
}

const ActiveInteractionHooks = {
  useActiveInteraction
};
exports.ActiveInteractionHooks = ActiveInteractionHooks;

const ActiveInteractionProvider = props => {
  const {
    children
  } = props;

  const [state, dispatch] = _react.default.useReducer(reducer, {
    type: ''
  });

  const updateType = _react.default.useCallback(type => {
    dispatch(updateActiveInteraction(type));
  }, [dispatch]);

  const value = _react.default.useMemo(() => [state.type, updateType], [state.type, updateType]);

  return /*#__PURE__*/_createElement(ActiveInteractionContext.Provider, {
    value: value
  }, children);
};

exports.ActiveInteractionProvider = ActiveInteractionProvider;
//# sourceMappingURL=ActiveInteractionContext.js.map