{"version":3,"sources":["../../../src/HoverBlock/ActiveInteractionContext.tsx"],"names":["UPDATE_ACTIVE_INTERACTION","Symbol","updateActiveInteraction","type","payload","reducer","state","action","initState","initUpdate","ActiveInteractionContext","React","createContext","useActiveInteraction","useContext","ActiveInteractionHooks","ActiveInteractionProvider","props","children","dispatch","useReducer","updateType","useCallback","value","useMemo"],"mappings":";;;;;;;;;AAAA;;uBAC4B,a;AAM5B,MAAMA,yBAAyB,GAAGC,MAAM,CAAC,2BAAD,CAAxC;;AAEA,SAASC,uBAAT,CAAkCC,IAAlC,EAAgD;AAC9C,SAAO;AACLA,IAAAA,IAAI,EAAEH,yBADD;AAELI,IAAAA,OAAO,EAAE;AACPD,MAAAA;AADO;AAFJ,GAAP;AAMD;;AAED,SAASE,OAAT,CAAiBC,KAAjB,EAAiDC,MAAjD,EAAyD;AACvD,QAAM;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBG,MAA1B;;AACA,MAAIJ,IAAI,KAAKH,yBAAb,EAAwC;AACtC,WAAO;AACLG,MAAAA,IAAI,EAAEC,OAAO,CAACD;AADT,KAAP;AAGD;;AACD,SAAOG,KAAP;AACD;;AAED,MAAME,SAAS,GAAG,EAAlB;;AACA,MAAMC,UAAU,GAAIN,IAAD,IAAkB,CAAE,CAAvC;;AAEA,MAAMO,wBAAwB,gBAAGC,eAAMC,aAAN,CAAqE,CAACJ,SAAD,EAAYC,UAAZ,CAArE,CAAjC;;AAEA,SAASI,oBAAT,GAAgC;AAC9B,SAAOF,eAAMG,UAAN,CAAiBJ,wBAAjB,CAAP;AACD;;AAEM,MAAMK,sBAAsB,GAAG;AACpCF,EAAAA;AADoC,CAA/B;;;AAIA,MAAMG,yBAAmC,GAAIC,KAAD,IAAW;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;;AACA,QAAM,CAACX,KAAD,EAAQa,QAAR,IAAoBR,eAAMS,UAAN,CAAiBf,OAAjB,EAA0B;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAA1B,CAA1B;;AAEA,QAAMkB,UAAU,GAAGV,eAAMW,WAAN,CAAmBnB,IAAD,IAAkB;AACrDgB,IAAAA,QAAQ,CAACjB,uBAAuB,CAACC,IAAD,CAAxB,CAAR;AACD,GAFkB,EAEhB,CAACgB,QAAD,CAFgB,CAAnB;;AAIA,QAAMI,KAAK,GAAGZ,eAAMa,OAAN,CAAc,MAAM,CAAClB,KAAK,CAACH,IAAP,EAAakB,UAAb,CAApB,EAAkF,CAACf,KAAK,CAACH,IAAP,EAAakB,UAAb,CAAlF,CAAd;;AACA,sBACE,eAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAEE;AAA1C,KACGL,QADH,CADF;AAKD,CAdM","sourcesContent":["import React from 'react';\n\ntype ActiveInteractionType = 'insertMenu' | 'quickInsertMenu' | 'contextMenu' | 'leftMenu' | 'selectionBar' | 'newLineMenu' | string;\ninterface IActiveInteractionState {\n  type: ActiveInteractionType;\n}\n\nconst UPDATE_ACTIVE_INTERACTION = Symbol('UPDATE_ACTIVE_INTERACTION');\n\nfunction updateActiveInteraction (type: string) {\n  return {\n    type: UPDATE_ACTIVE_INTERACTION,\n    payload: {\n      type,\n    }\n  };\n}\n\nfunction reducer(state: IActiveInteractionState, action) {\n  const { type, payload } = action;\n  if (type === UPDATE_ACTIVE_INTERACTION) {\n    return {\n      type: payload.type,\n    };\n  }\n  return state;\n}\n\nconst initState = '';\nconst initUpdate = (type: string) => {};\n\nconst ActiveInteractionContext = React.createContext<[ActiveInteractionType, (type: string) => void]>([initState, initUpdate]);\n\nfunction useActiveInteraction() {\n  return React.useContext(ActiveInteractionContext);\n}\n\nexport const ActiveInteractionHooks = {\n  useActiveInteraction,\n}\n\nexport const ActiveInteractionProvider: React.FC = (props) => {\n  const { children } = props;\n  const [state, dispatch] = React.useReducer(reducer, { type: '' });\n\n  const updateType = React.useCallback((type: string) => {\n    dispatch(updateActiveInteraction(type));\n  }, [dispatch]);\n\n  const value = React.useMemo(() => [state.type, updateType] as [string, (type: string) => void], [state.type, updateType]);\n  return (\n    <ActiveInteractionContext.Provider value={value}>\n      {children}\n    </ActiveInteractionContext.Provider>\n  );\n}"],"file":"ActiveInteractionContext.js"}