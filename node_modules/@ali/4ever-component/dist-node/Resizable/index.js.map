{"version":3,"sources":["../../../src/Resizable/index.tsx"],"names":["isInRange","num","range","showHandle","axisName","axis","showYHandle","showXHandle","getRelatives","event","ref","mouseEvent","window","TouchEvent","touches","Resizable","props","children","className","onResize","onResizeStart","noop","onResizeStop","widthRange","Infinity","heightRange","width","height","visible","style","speed","zoomContainer","innerRef","handleStyle","onClick","autoHeight","isActive","enableBorderHighlight","dragging","React","useRef","startPoint","heightRef","widthRef","isHover","hoverHandlers","handleDragging","current","preventDefault","stopPropagation","relativeX","relativeY","startX","startY","startHeight","newWidth","newHeight","handleDragStop","unbindEvents","handleDragStart","nativeEvent","getBoundingClientRect","bindEvents","document","removeEventListener","addEventListener","useEffect","resizableStyle","position"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport { noop } from 'lodash-es';\nimport { getRelativeMouseEvent } from '@ali/4ever-utils';\nimport { useHover } from '../HoverBlock';\nimport { XHandle, YHandle, Mask, ResizableWrapper } from './styled';\nimport HandleIcon from './icon';\n\ninterface Size {\n  width: number;\n  height: number;\n}\n\ntype DragEvent = MouseEvent | TouchEvent;\n\ntype Range = [number, number];\n\nexport interface ResizableProps {\n  /** classname */\n  className?: string;\n  /** 高度 */\n  height: number;\n  /** 宽度 */\n  width: number;\n  /** 缩放坐标轴 */\n  axis: 'y' | 'x' | 'all';\n  /** 缩放回调 */\n  onResize: (event: DragEvent, size: Size) => void;\n  /** 缩放开始回调 */\n  onResizeStart?: (event: DragEvent) => void;\n  /** 缩放结束回调 */\n  onResizeStop?: (event: DragEvent, size: Size) => void;\n  /** 跟元素事件回调 */\n  onClick?: (event: React.MouseEvent) => void;\n  /** 宽度区间 */\n  widthRange?: Range;\n  /** 高度区间 */\n  heightRange?: Range;\n  /** 是否可见 */\n  visible?: boolean;\n  /** 样式 */\n  style?: React.CSSProperties;\n  /** 速度 */\n  speed?: number;\n  /** zoom container */\n  zoomContainer: HTMLElement | null;\n  /** innerRef */\n  innerRef?: React.RefObject<HTMLDivElement>;\n  /** handle style */\n  handleStyle?: React.CSSProperties;\n  /** 高度是否自适应内容 */\n  autoHeight?: boolean;\n  isActive: boolean;\n  enableBorderHighlight?: boolean;\n}\n\nconst isInRange = (num: number, range: Range) => {\n  return num >= range[0] && num <= range[1];\n};\n\nconst showHandle = (axisName) => {\n  return (axis) => {\n    return axis === axisName || axis === 'all';\n  };\n};\nconst showYHandle = showHandle('y');\nconst showXHandle = showHandle('x');\n\nconst getRelatives = (event: DragEvent, ref: HTMLElement) => {\n  let mouseEvent;\n  if (window.TouchEvent && event instanceof window.TouchEvent) {\n    mouseEvent = (event as TouchEvent).touches[0] as Touch;\n  } else {\n    mouseEvent = event as MouseEvent;\n  }\n  return getRelativeMouseEvent(mouseEvent, ref);\n};\n\nconst Resizable: React.FC<ResizableProps> = (props) => {\n  const {\n    children,\n    axis,\n    className = 'resizable',\n    onResize,\n    onResizeStart = noop,\n    onResizeStop = noop,\n    widthRange = [0, Infinity] as Range,\n    heightRange = [0, Infinity] as Range,\n    width,\n    height,\n    visible,\n    style = {},\n    speed = 1.0,\n    zoomContainer,\n    innerRef = null,\n    handleStyle = {},\n    onClick,\n    autoHeight,\n    isActive,\n    enableBorderHighlight,\n  } = props;\n  const dragging = React.useRef<boolean>(false);\n  const startPoint = React.useRef<[number, number, number]>([0, 0, height]);\n  const heightRef = React.useRef<number>(height);\n  const widthRef = React.useRef<number>(width);\n  const [isHover, hoverHandlers] = useHover(enableBorderHighlight);\n\n  function handleDragging(event: DragEvent) {\n    if (dragging.current) {\n      event.preventDefault();\n      event.stopPropagation();\n      const { relativeX, relativeY } = getRelatives(event, zoomContainer!);\n      const [startX, startY, startHeight] = startPoint.current;\n      const newWidth = (relativeX - startX) * speed + width;\n      const newHeight = (relativeY - startY) * speed + startHeight;\n      if (showYHandle(axis) && isInRange(newHeight, heightRange)) {\n        heightRef.current = newHeight;\n        onResize(event, { width, height: newHeight });\n      } else if (showXHandle(axis) && isInRange(newWidth, widthRange)) {\n        widthRef.current = newWidth;\n        onResize(event, { width: newWidth, height: startHeight });\n      }\n    }\n  }\n\n  function handleDragStop(event: DragEvent) {\n    if (\n      dragging.current &&\n      isInRange(heightRef.current, heightRange) &&\n      isInRange(widthRef.current, widthRange)\n    ) {\n      dragging.current = false;\n      unbindEvents();\n      onResizeStop(event, {\n        height: heightRef.current,\n        width: widthRef.current,\n      });\n    }\n  }\n\n  function handleDragStart(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    const { relativeX, relativeY } = getRelatives(\n      event.nativeEvent,\n      zoomContainer!,\n    );\n    dragging.current = true;\n    const startHeight = autoHeight && innerRef ? innerRef.current!.getBoundingClientRect().height : height;\n    heightRef.current = startHeight;\n    startPoint.current = [relativeX, relativeY, startHeight];\n    bindEvents();\n    onResizeStart(event.nativeEvent);\n  }\n\n  function unbindEvents() {\n    document.removeEventListener('mousemove', handleDragging);\n    document.removeEventListener('touchmove', handleDragging);\n    document.removeEventListener('mouseup', handleDragStop);\n    document.removeEventListener('touchend', handleDragStop);\n  }\n\n  function bindEvents() {\n    document.addEventListener('mousemove', handleDragging);\n    document.addEventListener('touchmove', handleDragging);\n    document.addEventListener('mouseup', handleDragStop);\n    document.addEventListener('touchend', handleDragStop);\n  }\n\n  React.useEffect(() => {\n    return unbindEvents;\n  }, []);\n\n  const resizableStyle: React.CSSProperties = {\n    width: `${width}px`,\n    position: 'relative',\n    ...style,\n  };\n  // autoHeight 模式下，不需要每次换行都重新计算高度，避免产生抖动\n  if (!autoHeight) {\n    resizableStyle.height = `${height}px`;\n  }\n\n  return (\n    <ResizableWrapper\n      className={className}\n      style={resizableStyle}\n      ref={innerRef}\n      onClick={onClick}\n      {...hoverHandlers}\n      isHover={isHover}\n      isActive={isActive}\n      data-hover-box=\"borderBox\"\n    >\n      <Mask visible={dragging.current} />\n      {children}\n      {showYHandle(axis) && visible && (\n        <YHandle\n          style={handleStyle}\n          dragging={dragging.current}\n        >\n          <HandleIcon\n            onMouseDown={handleDragStart}\n            onTouchStart={handleDragStart}\n          />\n        </YHandle>\n      )}\n      {showXHandle(axis) && visible && (\n        <XHandle\n          onMouseDown={handleDragStart}\n          onTouchStart={handleDragStart}\n          style={handleStyle}\n          dragging={dragging.current}\n        >\n          <HandleIcon />\n        </XHandle>\n      )}\n    </ResizableWrapper>\n  );\n};\n\nexport default Resizable;\n"],"file":"index.js"}