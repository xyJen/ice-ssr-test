{"version":3,"sources":["../../../src/Menu/interface.ts"],"names":["TYPE_GROUP","Symbol","TYPE_SUB_MENU","TYPE_MENU_ITEM","TYPE_INLINE_MENU_GROUP","TYPE_INLINE_MENU_WRAPPER","TYPE_INLINE_MENU_ITEM","TYPE_QUERY_ONLY_INLINE_MENU_ITEM"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA;AACA;AACA;AACO,MAAMA,UAAU,GAAGC,MAAM,CAAC,YAAD,CAAzB;AACP;AACA;AACA;;;AACO,MAAMC,aAAa,GAAGD,MAAM,CAAC,eAAD,CAA5B;AACP;AACA;AACA;;;AACO,MAAME,cAAc,GAAGF,MAAM,CAAC,gBAAD,CAA7B;AACP;AACA;AACA;;;AACO,MAAMG,sBAAsB,GAAGH,MAAM,CAAC,wBAAD,CAArC;AAEP;AACA;AACA;;;AACO,MAAMI,wBAAwB,GAAGJ,MAAM,CAAC,0BAAD,CAAvC;AACP;AACA;AACA;;;AACO,MAAMK,qBAAqB,GAAGL,MAAM,CAAC,uBAAD,CAApC;AACP;AACA;AACA;;;AACO,MAAMM,gCAAgC,GAAGN,MAAM,CACpD,kCADoD,CAA/C;AAGP;AACA;AACA","sourcesContent":["/**\n * bi内置的菜单栏组件\n * 菜单栏呈横向排布，MenuBar 是菜单栏入口，Menu是嵌套的菜单\n * **********************************************\n * 数据结构：\n * <MenuBar menus=[{\n *  title: '文档',\n *  children: (<Menu menus={[{\n *    type: TYPE_MENU_ITEM,\n *    title: '文档菜单项1'\n *  }]} />)\n * }, {\n *  title: '插入'\n *  children: (<Menu menus={[{\n *    type: TYPE_SUB_MENU,\n *    title: '文件',\n *    menus: [{\n *      type: TYPE_MENU_ITEM,\n *      title: '本地文件',\n *    }, {\n *      type: TYPE_MENU_ITEM,\n *      title: '在线文件',\n *    }]\n *  }]} />)\n * }] />\n * **********************************************\n * 效果：\n * |-         文档         |         插入          -|\n *            |- 文档菜单项1 - |      |- 文件 - |\n *                                     |- 本地文件 -|\n *                                     |- 在线文件 -|\n */\nimport {\n  IMenuItemProps,\n  ISubMenuProps,\n  IInlineMenuItemProps,\n} from '@ali/we-design';\n\nimport { Controller } from '@ali/4ever-cangjie';\nimport { MatchItemResult } from '@ali/4ever-utils';\nimport {  Plugins } from '../PluginsContext';\n\n/**\n * 菜单组（title + 支持的菜单类型）\n */\nexport const TYPE_GROUP = Symbol('TYPE_GROUP');\n/**\n * 子菜单（可以嵌套任意支持的菜单类型）\n */\nexport const TYPE_SUB_MENU = Symbol('TYPE_SUB_MENU');\n/**\n * 菜单项（最小的菜单粒度）\n */\nexport const TYPE_MENU_ITEM = Symbol('TYPE_MENU_ITEM');\n/**\n * 行内菜单\n */\nexport const TYPE_INLINE_MENU_GROUP = Symbol('TYPE_INLINE_MENU_GROUP');\n\n/**\n * 行内菜单分组\n */\nexport const TYPE_INLINE_MENU_WRAPPER = Symbol('TYPE_INLINE_MENU_WRAPPER');\n/**\n * 菜单横向排列的按钮组件\n */\nexport const TYPE_INLINE_MENU_ITEM = Symbol('TYPE_INLINE_MENU_ITEM');\n/**\n * 仅在 query 场景显示的菜单按钮组件\n */\nexport const TYPE_QUERY_ONLY_INLINE_MENU_ITEM = Symbol(\n  'TYPE_QUERY_ONLY_INLINE_MENU_ITEM',\n);\n/**\n * 支持的菜单类型\n */\nexport type MENU_ITEM_TYPE =\n  | MenuItemProps\n  | SubMenuProps\n  | MenuGroupProps\n  | InlineMenuGroupProps\n  | InlineMenuItemProps\n  | QueryOnlyInlineMenuItemProps\n  | InlineMenuWrapperProps;\n/**\n * 传给menu组件data的菜单类型数组\n */\nexport type TYPE_MENU_DATA = MENU_ITEM_TYPE[];\n\n/**\n * MenuBar组件\n */\nexport interface MenuBarProps {\n  /**\n   * MenuBar 接受的菜单配置\n   */\n  menus: MenuBarItemProps[];\n  /**\n   * 样式\n   */\n  style?: React.CSSProperties;\n  /**\n   * 点击菜单项的钩子\n   */\n  onClick?: (menuKey: string, e: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport interface MenuBarItemProps {\n  /**\n   * 菜单标题\n   */\n  title: React.ReactNode;\n  /**\n   * 组件，一般是传入 Menu 组件\n   */\n  children: React.ReactElement;\n  /**\n   * 测试用id\n   */\n  testid?: string;\n  role?: string;\n}\n\n/**\n * MenuItem props\n */\nexport interface MenuItemProps extends IMenuItemProps {\n  type: typeof TYPE_MENU_ITEM;\n  /**\n   * 菜单项的key\n   */\n  menuKey: string;\n  /**\n   * 菜单项的文案（支持react组件）\n   */\n  title?: React.ReactNode;\n  /**\n   * 是否隐藏\n   */\n  hidden?: boolean;\n  MenuContentWrapper?: React.ComponentType;\n  /**\n   * finalMenuKey = menuKey + (menuExtraKey || '')\n   * 用于需要多个相同 menuKey 共存的情况\n   */\n  menuExtraKey?: string;\n  /**\n   * menu 搜索能力\n   */\n  query?: string | string[];\n  /**\n   * 是否删除原格式\n   */\n  action?: string;\n}\n\n/**\n * SubMenu props\n */\nexport interface SubMenuProps extends ISubMenuProps {\n  type: typeof TYPE_SUB_MENU;\n  /**\n   * 子菜单项的文案\n   */\n  title: React.ReactNode;\n  /**\n   * 是否隐藏\n   */\n  hidden?: boolean;\n  /**\n   * 菜单配置\n   */\n  menus: TYPE_MENU_DATA;\n  /**\n   * 角色\n   */\n  role?: string;\n  /**\n   * menu 搜索能力\n   */\n  query?: string | string[];\n}\n\n/**\n * MenuGroup props\n */\nexport interface MenuGroupProps {\n  type: typeof TYPE_GROUP;\n  /**\n   * 菜单组title\n   */\n  title?: React.ReactNode;\n  /**\n   * 是否隐藏\n   */\n  hidden?: boolean;\n  /**\n   * 菜单配置\n   */\n  menus: TYPE_MENU_DATA;\n  /**\n   * 角色\n   */\n  role?: string;\n  /**\n   * menu 搜索能力\n   */\n  query?: string | string[];\n}\n\nexport interface InlineMenuGroupProps {\n  type: typeof TYPE_INLINE_MENU_GROUP;\n  /**\n   * 标题\n   */\n  title?: React.ReactNode;\n  /**\n   * 是否隐藏\n   */\n  hidden?: boolean;\n  /**\n   * 菜单配置\n   */\n  menus: Array<InlineMenuItemProps | InlineMenuWrapperProps>;\n}\n\nexport interface InlineMenuWrapperProps {\n  type: typeof TYPE_INLINE_MENU_WRAPPER;\n  /**\n   * 菜单配置\n   */\n  menus: Array<InlineMenuItemProps | QueryOnlyInlineMenuItemProps>;\n}\n\nexport interface InlineMenuItemProps extends IInlineMenuItemProps {\n  type: typeof TYPE_INLINE_MENU_ITEM;\n  /**\n   * 菜单项的key\n   */\n  menuKey: string;\n  /**\n   * 菜单项的文案（支持react组件）\n   */\n  tooltip?: React.ReactNode;\n  /**\n   * 是否隐藏\n   */\n  hidden?: boolean;\n  /**\n   * finalMenuKey = menuKey + (menuExtraKey || '')\n   * 用于需要多个相同 menuKey 共存的情况\n   */\n  menuExtraKey?: string;\n  /**\n   * menu 搜索能力\n   */\n  query?: string | string[];\n}\n\nexport type QueryOnlyInlineMenuItemProps = Omit<InlineMenuItemProps, 'type'> & {\n  type: typeof TYPE_QUERY_ONLY_INLINE_MENU_ITEM;\n};\n\n/**\n * MenuBar 中放置的Menu组件\n */\nexport interface MenuProps {\n  /**\n   * 菜单配置\n   */\n  menus: TYPE_MENU_DATA;\n  /**\n   * 菜单搜索\n   */\n  query?: string;\n  /**\n   * 菜单搜索结果回调\n   */\n  onQuery?: (results: Array<MatchItemResult<{}>>) => void;\n}\n\n/**\n * @ignore\n */\nexport interface MenuItemInnerProps {\n  controller: Controller;\n  plugins: Plugins;\n  menuItem: MenuItemProps;\n  locale: any;\n}\n\n/**\n * @ignore\n */\nexport interface SubMenuInnerProps {\n  controller: Controller;\n  plugins: Plugins;\n  menuItem: SubMenuProps & {\n    // 这里很 hack，原因由于配置基于 MenuItemProps，但是消费使用 SubMenuProps\n    MenuContentWrapper?: React.ComponentType;\n  };\n  locale: any;\n}\n"],"file":"interface.js"}