{"version":3,"sources":["../../../src/Toolbar/inlineToolbar.tsx"],"names":["InlineToolbar","props","controller","Controller","useController","plugins","triggerNode","visible","children","getDropdwonContainer","inlineLayout","customToolButtons","hiddenToolButtons","style","overlayStyle","overlayClassName","testid","rest","scrollableContent","getScrollableContent","React","useCallback","window","document","body","overlay","ToolbarMode","inline","undefined"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAJ4B,a;;AAM5B;AACA;AACA;AACA;AACO,MAAMA,aAAiD,GAAIC,KAAD,IAAW;AAC1E,QAAMC,UAAU,GAAGC,wBAAWC,aAAX,EAAnB;;AACA,QAAMC,OAAO,GAAG,iCAAhB;AACA,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,oBAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,iBANI;AAOJC,IAAAA,iBAPI;AAQJC,IAAAA,KARI;AASJC,IAAAA,YATI;AAUJC,IAAAA,gBAVI;AAWJC,IAAAA,MAXI;AAYJ,OAAGC;AAZC,MAaFhB,KAbJ;AAeA,QAAMiB,iBAAiB,GAAG,wCAA1B;AACA,QAAMC,oBAAoB,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAM;AACnD,WAAOH,iBAAiB,IAAII,MAAM,CAACC,QAAP,CAAgBC,IAA5C;AACD,GAF4B,EAE1B,CAACN,iBAAD,CAF0B,CAA7B;AAIA,QAAMO,OAAO,GAAGlB,OAAO,gBACrB,eAAC,0BAAD;AACE,IAAA,KAAK,EAAEM,KADT;AAEE,IAAA,UAAU,EAAEX,UAFd;AAGE,IAAA,OAAO,EAAEG,OAHX;AAIE,IAAA,WAAW,EAAEqB,uBAAYC,MAJ3B;AAKE,IAAA,YAAY,EAAEjB,YALhB;AAME,IAAA,iBAAiB,EAAEC,iBANrB;AAOE,IAAA,iBAAiB,EAAEC,iBAPrB;AAQE,IAAA,MAAM,EAAEI,MAAM,GAAI,kBAAiBA,MAAO,EAA5B,GAAgCY;AARhD,IADqB,GAWnB,IAXJ;AAaA,sBACE,eAAC,kBAAD;AACE,IAAA,OAAO,EAAErB,OADX;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,OAAO,EAAE,CAAC,CAJZ;AAKE,IAAA,WAAW,EAAED,WALf;AAME,IAAA,YAAY,EAAEG,oBAAoB,IAAIU,oBANxC;AAOE,IAAA,YAAY,EAAEL,YAPhB;AAQE,IAAA,gBAAgB,EAAEC;AARpB,KASME,IATN;AAUE,IAAA,OAAO,EAAEQ;AAVX,MAYGjB,QAZH,CADF;AAgBD,CApDM","sourcesContent":["import * as React from 'react';\nimport { Controller, useScrollableContent } from '@ali/4ever-cangjie';\nimport { Dropdown } from '@ali/we-design';\nimport { InlineToolbarRenderProps, ToolbarMode } from './interface';\nimport Toolbar from './toolbarRenderNext';\nimport { usePlugins } from '../PluginsContext';\n\n/**\n * 使用dropdown包装一层toolbar，防止toolbar被其它元素遮挡\n * @param props\n */\nexport const InlineToolbar: React.FC<InlineToolbarRenderProps> = (props) => {\n  const controller = Controller.useController();\n  const plugins = usePlugins();\n  const {\n    triggerNode,\n    visible,\n    children,\n    getDropdwonContainer,\n    inlineLayout,\n    customToolButtons,\n    hiddenToolButtons,\n    style,\n    overlayStyle,\n    overlayClassName,\n    testid,\n    ...rest\n  } = props;\n\n  const scrollableContent = useScrollableContent();\n  const getScrollableContent = React.useCallback(() => {\n    return scrollableContent || window.document.body;\n  }, [scrollableContent]);\n\n  const overlay = visible ? (\n    <Toolbar\n      style={style}\n      controller={controller}\n      plugins={plugins}\n      toolbarMode={ToolbarMode.inline}\n      inlineLayout={inlineLayout}\n      customToolButtons={customToolButtons}\n      hiddenToolButtons={hiddenToolButtons}\n      testid={testid ? `inline-toolbar-${testid}` : undefined}\n    />\n  ) : null;\n\n  return (\n    <Dropdown\n      visible={visible}\n      placement=\"topLeft\"\n      trigger=\"click\"\n      offsetY={-6}\n      triggerNode={triggerNode}\n      getContainer={getDropdwonContainer || getScrollableContent}\n      overlayStyle={overlayStyle}\n      overlayClassName={overlayClassName}\n      {...rest}\n      overlay={overlay}\n    >\n      {children}\n    </Dropdown>\n  );\n};\n\n"],"file":"inlineToolbar.js"}