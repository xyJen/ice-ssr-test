"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToolbarMode = exports.ToolBoxLayoutMode = void 0;

var _weUi = require("@ali/we-ui");

/**
 * 编辑器提供的默认工具栏interface
 * 数据结构参照 we-ui toolbar：
 * https://pds.alibaba-inc.com/alidocs/we-ui/?path=/docs/toolbar-%E7%A4%BA%E4%BE%8B--resize
 * 单行配置(嵌套数组)：
 * SingleToolbarProps: [{
 *    toolButtons: [{
 *      name: 'aaa'
 *    }, {
 *      name: 'bbb'
 *    }]
 *  }, {
 *    toolButtons: [{
 *      name: 'ccc'
 *    }]
 *  }]
 * 显示效果：|- 工具栏 -|
 * |- aaa bbb | ccc -|
 * **********************************************
 * 双行配置(2层嵌套数组)：
 * DoubleToolbarProps: [{
 *    toolRows: [{
 *      toolButtons: [{
 *        name: 'aaa'
 *      }, {
 *        name: 'bbb'
 *      }]
 *    }, {
 *      toolButtons: [{
 *        name: 'ccc'
 *      }, {
 *        name: 'ddd'
 *      }]
 *    }]
 *  }, {
 *    toolRows: [{
 *      toolButtons: [{
 *        name: 'eee',
 *        boxLayout: ToolBoxLayoutMode.vertical
 *      }]
 *    }]
 *  }]
 * 显示效果：|- 工具栏 -|
 * |- aaa bbb |     -|
 * |-         | eee -|
 * |- ccc ddd |     -|
 */

/**
 * 工具栏按钮布局枚举
 */
let ToolBoxLayoutMode;
/**
 * 单个工具栏组件配置
 */

exports.ToolBoxLayoutMode = ToolBoxLayoutMode;

(function (ToolBoxLayoutMode) {
  ToolBoxLayoutMode[ToolBoxLayoutMode["vertical"] = _weUi.EToolBoxLayout.Vertical] = "vertical";
  ToolBoxLayoutMode[ToolBoxLayoutMode["single"] = _weUi.EToolBoxLayout.Single] = "single";
  ToolBoxLayoutMode[ToolBoxLayoutMode["horizontal"] = _weUi.EToolBoxLayout.Horizontal] = "horizontal";
})(ToolBoxLayoutMode || (exports.ToolBoxLayoutMode = ToolBoxLayoutMode = {}));

/**
 * 工具栏显示模式
 */
let ToolbarMode;
exports.ToolbarMode = ToolbarMode;

(function (ToolbarMode) {
  ToolbarMode[ToolbarMode["double"] = _weUi.EToolbarMode.doubleLine] = "double";
  ToolbarMode[ToolbarMode["single"] = _weUi.EToolbarMode.singleLine] = "single";
  ToolbarMode[ToolbarMode["inline"] = 2] = "inline";
})(ToolbarMode || (exports.ToolbarMode = ToolbarMode = {}));
//# sourceMappingURL=interface.js.map