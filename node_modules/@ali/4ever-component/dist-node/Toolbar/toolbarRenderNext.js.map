{"version":3,"sources":["../../../src/Toolbar/toolbarRenderNext.tsx"],"names":["ToolbarRenderNext","props","controller","plugins","inlineLayout","singleLayout","doubleLayout","hiddenToolButtons","toolbarMode","customToolButtons","disableTargets","style","alignment","autoFolding","defaultToolbarMode","testid","defaultMode","ToolbarMode","double","EToolbarMode","doubleLine","singleLine","uiToolbarMode","setUiToolbarMode","inlinetoolbarWrapperRef","handleModeChange","mode","getContainer","current","window","document","body","realToolbarMode","realAutoFolding","undefined","inline","target","React","useMemo","pluginsArray","array","i","length","tgt","plugin","getTarget","toolbar","renderTool","item","index","isValidElement","name","boxLayout","verticalKey","hideTargets","showTargets","verticalText","rest","CustomComponent","pluginName","buttonName","split","hash","buttons","Component","shouldShow","locale","toolBoxName","ToolBoxLayoutMode","vertical","isDoubleMode","toolBoxLayout","single","console","warn","renderLine","lineProps","contents","renderGroup","groupProps","renderSingleToolbar","singleLineLayout","layout","ToolbarConfig","defaultSingleLayout","tls","map","lines","idx","filter","renderDoubleToolbar","doubleLineLayout","defaultDoubleLayout","tgs","group","handleMouseDown","ev","tagName","toLocaleLowerCase","preventDefault","stopPropagation","fTgts","defaultDisableTargets","shouldDisableWholeToolbar","classes","wrapperStyle","opacity","pointerEvents","defaultInlineLayout","process","env","NODE_ENV","leading"],"mappings":"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","sourcesContent":["/**\n * 编辑器自带toolbar组件\n */\nimport React, { useState, useCallback, useRef } from 'react';\n\nimport {\n  DoubleLineToolbar,\n  EToolbarMode,\n  EToolBoxLayout,\n  SingleLineToolbar,\n  Toolbar,\n  ToolbarDivider,\n  ToolBox,\n  ToolGroup,\n  ToolLine,\n} from '@ali/we-ui';\n\nimport {\n  ToolbarWrapper,\n  InlineToolbarWrapper,\n} from './styled';\nimport { idleRender } from '../idleRender';\nimport {\n  ToolbarRenderNextInnerProps,\n  ToolButtonProps,\n  ToolRowProps,\n  ToolGroupProps,\n  ToolbarMode,\n  ToolBoxLayoutMode,\n} from './interface';\nimport { renderToolArray, judgeShouldShow } from './util';\nimport ToolbarConfig from './config';\n\n\nconst ToolbarRenderNext: React.FC<ToolbarRenderNextInnerProps> = (props) => {\n  const {\n    controller,\n    plugins,\n    inlineLayout,\n    singleLayout,\n    doubleLayout,\n    hiddenToolButtons = {},\n    toolbarMode,\n    customToolButtons = {},\n    disableTargets,\n    style,\n    alignment,\n    autoFolding,\n    defaultToolbarMode,\n    testid,\n  } = props;\n  const defaultMode = defaultToolbarMode === ToolbarMode.double ? EToolbarMode.doubleLine : EToolbarMode.singleLine;\n  const [uiToolbarMode, setUiToolbarMode] = useState<EToolbarMode>(defaultMode);\n  const inlinetoolbarWrapperRef = useRef<HTMLDivElement>(null);\n  const handleModeChange = useCallback((mode: EToolbarMode) => {\n    setUiToolbarMode(mode);\n  }, []);\n  const getContainer = useCallback(() => inlinetoolbarWrapperRef.current || window.document.body, []);\n  const realToolbarMode = 'toolbarMode' in props ? toolbarMode : uiToolbarMode;\n  const realAutoFolding = autoFolding !== undefined ? autoFolding : realToolbarMode !== ToolbarMode.inline;\n  /**\n   * 从插件查询哪个插件被选中（暂不支持多个插件同时识别）\n   * 通过调用插件 getTarget 实现\n   */\n  const target = React.useMemo(() => {\n    const pluginsArray = plugins.array;\n    for (let i = 0; i < pluginsArray.length; i += 1) {\n      let tgt;\n      const plugin = pluginsArray[i];\n      const getTarget = plugin.toolbar && plugin.toolbar.getTarget;\n      if (getTarget) {\n        tgt = getTarget(controller);\n      }\n      if (tgt) {\n        return tgt;\n      }\n    }\n  }, [controller, plugins.array]);\n\n  /**\n   * 渲染单个 toolButton\n   * @param toolButton配置，支持直接传一个react元素\n   * @param index\n   */\n  const renderTool = (item: ToolButtonProps | React.ReactElement, index: number) => {\n    if (React.isValidElement(item)) {\n      return (\n        <ToolBox key={index}>\n          {item}\n        </ToolBox>\n      );\n    }\n    const { name, boxLayout, verticalKey, hideTargets, showTargets, verticalText, ...rest } = item;\n    // 支持分割线\n    if (name === 'ToolbarDivider') {\n      return (\n        <ToolBox key={index}>\n          <ToolbarDivider />\n        </ToolBox>\n      );\n    }\n\n    // hiddenToolButtons 优先\n    if (hiddenToolButtons[name]) return null;\n\n    // 优先从自定义组件里匹配\n    const CustomComponent = customToolButtons[name];\n\n    const [pluginName, buttonName = 'default'] = name.split('.');\n    const plugin = plugins.hash[pluginName];\n    if (!plugin && !CustomComponent) {\n      return null;\n    }\n\n    const buttons = plugin?.toolbar && plugin?.toolbar?.buttons;\n    const Component = CustomComponent || (buttons && buttons[buttonName]);\n\n    if (!Component) {\n      return null;\n    }\n\n    if (plugin?.toolbar) {\n      // 判断是否隐藏\n      const shouldShow = judgeShouldShow(target, showTargets, hideTargets);\n      if (!shouldShow) return null;\n    }\n\n    // 优先取自定义国际化文案\n    const locale = plugin?.toolbar?.locale;\n    let toolBoxName;\n    if (boxLayout === ToolBoxLayoutMode.vertical && locale) {\n      // 双行模式默认用 locale.buttonTitle 作为文案\n      toolBoxName = locale[verticalKey || 'buttonTitle'];\n    }\n    toolBoxName = verticalText || toolBoxName;\n\n    const isDoubleMode = realToolbarMode === ToolbarMode.double;\n    let toolBoxLayout = boxLayout;\n    if (!isDoubleMode && boxLayout === ToolBoxLayoutMode.vertical) {\n      // TODO: 非双行模式下忽略vertical（脏）\n      toolBoxLayout = ToolBoxLayoutMode.single;\n      console.warn('do not support vertical layout when tolbarMode is single');\n    }\n\n    // normal 属于 we-ui 用法，medium 属于 we-design 用法\n    return (\n      <ToolBox\n        name={toolBoxName}\n        layout={toolBoxLayout as unknown as EToolBoxLayout}\n        key={index}\n      >\n        <Component\n          {...rest}\n          controller={controller}\n          toolbarMode={realToolbarMode}\n          locale={locale}\n          size={isDoubleMode ? 'small' : 'medium'}\n          getContainer={toolbarMode === ToolbarMode.inline ? getContainer : undefined}\n        />\n      </ToolBox>\n    );\n  };\n\n  const renderLine = (lineProps: ToolRowProps, index: number) => {\n    const contents = renderToolArray(lineProps, 'toolButtons', target, renderTool);\n    if (!contents) return null;\n    return (\n      <ToolLine key={index}>\n        {contents}\n      </ToolLine>\n    );\n  };\n\n  const renderGroup = (groupProps: ToolGroupProps, index: number) => {\n    const contents = renderToolArray(groupProps, 'toolRows', target, renderLine);\n    if (!contents) return null;\n    return (\n      <ToolGroup key={index}>\n        {contents}\n      </ToolGroup>\n    );\n  };\n\n  /**\n   * 渲染单行工具栏\n   * @param singleLineLayout\n   */\n  const renderSingleToolbar = (singleLineLayout: ToolRowProps[] | undefined): React.ReactElement<SingleLineToolbar> | null => {\n    if (realToolbarMode === EToolbarMode.doubleLine) return null;\n    const layout = singleLineLayout || ToolbarConfig.defaultSingleLayout;\n    // @ts-ignore\n    const tls: any = layout.map((lines, idx) => renderLine(lines, idx)).filter((item) => item);\n    if (!tls.length) return null;\n    return (\n      <SingleLineToolbar\n        alignType={alignment}\n        autoFolding={realAutoFolding}\n      >\n        {tls}\n      </SingleLineToolbar>\n    );\n  };\n\n  /**\n   * 渲染双行工具栏\n   * @param doubleLineLayout\n   */\n  const renderDoubleToolbar = (doubleLineLayout: ToolGroupProps[] | undefined): React.ReactElement<DoubleLineToolbar> | null => {\n    if (realToolbarMode === EToolbarMode.singleLine) return null;\n    const layout = doubleLineLayout || ToolbarConfig.defaultDoubleLayout;\n    // @ts-ignore\n    const tgs: any = layout.map((group, index) => renderGroup(group, index)).filter((item) => item);\n    if (!tgs.length) return null;\n    return (\n      <DoubleLineToolbar\n        alignType={alignment}\n        autoFolding={realAutoFolding}\n      >\n        {tgs}\n      </DoubleLineToolbar>\n    );\n  };\n\n  /**\n   * 阻止默认事件，防止文档区域失焦\n   */\n  const handleMouseDown = useCallback((ev) => {\n    if (ev.target?.tagName.toLocaleLowerCase() !== 'input') {\n      // 放过input，以便输入地方可以正常输入\n      ev.preventDefault && ev.preventDefault();\n      ev.stopPropagation && ev.stopPropagation();\n    }\n  }, []);\n\n  const fTgts = disableTargets || ToolbarConfig.defaultDisableTargets;\n  const shouldDisableWholeToolbar = realToolbarMode !== ToolbarMode.inline && fTgts[target];\n\n  let classes = 'bi-toolbar';\n  let wrapperStyle: React.CSSProperties = {};\n  if (shouldDisableWholeToolbar) {\n    wrapperStyle = {\n      opacity: 0.4,\n      pointerEvents: 'none',\n    };\n  }\n  if (realToolbarMode === EToolbarMode.doubleLine) {\n    classes += ' double';\n  } else {\n    classes += ' single';\n  }\n\n  if (toolbarMode === ToolbarMode.inline) {\n    const layout = inlineLayout || ToolbarConfig.defaultInlineLayout;\n    return (\n      <InlineToolbarWrapper style={style} ref={inlinetoolbarWrapperRef} data-testid={testid ?? undefined}>\n        {renderSingleToolbar(layout)}\n      </InlineToolbarWrapper>\n    );\n  }\n\n  if (toolbarMode === ToolbarMode.single) {\n    return (\n      <ToolbarWrapper\n        style={{ ...wrapperStyle, ...style }}\n        className={classes}\n        onMouseDown={handleMouseDown}\n        data-testid={testid ?? undefined}\n      >\n        { renderSingleToolbar(singleLayout) }\n      </ToolbarWrapper>\n    );\n  }\n\n  if (toolbarMode === ToolbarMode.double) {\n    return renderDoubleToolbar(doubleLayout);\n  }\n\n  return (\n    <ToolbarWrapper\n      style={{ ...wrapperStyle, ...style }}\n      className={classes}\n      onMouseDown={handleMouseDown}\n      data-testid={testid ?? undefined}\n    >\n      <Toolbar\n        mode={realToolbarMode as EToolbarMode}\n        onModeChange={handleModeChange}\n        singleLineToolbar={renderSingleToolbar(singleLayout) || undefined}\n        doubleLineToolbar={renderDoubleToolbar(doubleLayout) || undefined}\n        autoFolding={realAutoFolding}\n      />\n    </ToolbarWrapper>);\n};\n\nexport default process.env.NODE_ENV === 'test'\n  ? ToolbarRenderNext\n  : idleRender(ToolbarRenderNext, 400, { leading: true });\n"],"file":"toolbarRenderNext.js"}