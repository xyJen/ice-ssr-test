"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _interface = require("./interface");

const defaultInlineLayout = [];
const defaultDisableTargets = {
  hr: true,
  code: true
};
const singleLayout = [{
  toolButtons: [{
    name: 'history.undo'
  }, {
    name: 'history.redo'
  }, {
    name: 'formatPainter',
    hideTargets: ['listSymbol']
  }, {
    name: 'clearStyle'
  }]
}, {
  toolButtons: [{
    name: 'heading',
    hideTargets: ['listSymbol']
  }, {
    name: 'fonts'
  }, {
    name: 'sz'
  }]
}, {
  toolButtons: [{
    name: 'bold'
  }, {
    name: 'italic'
  }, {
    name: 'strike',
    hideTargets: ['listSymbol']
  }, {
    name: 'underline',
    hideTargets: ['listSymbol']
  }, {
    name: 'color'
  }, {
    name: 'highlight'
  }]
}, {
  toolButtons: [{
    name: 'table.fill'
  }, {
    name: 'table.border'
  }, {
    name: 'table.merge'
  }, {
    name: 'table.vAlign'
  }],
  showTargets: ['table']
}, {
  toolButtons: [{
    name: 'list.ulist'
  }, {
    name: 'list.olist'
  }, {
    name: 'list.tlist',
    hideTargets: ['listSymbol']
  }, {
    name: 'alignment',
    hideTargets: ['listSymbol']
  }, {
    name: 'indent',
    hideTargets: ['table', 'listSymbol']
  }, {
    name: 'lineheight',
    hideTargets: ['table', 'listSymbol']
  }]
}, {
  toolButtons: [{
    name: 'sticker',
    hideTargets: ['listSymbol']
  }, {
    name: 'image',
    hideTargets: ['listSymbol']
  }, {
    name: 'embed',
    hideTargets: ['listSymbol']
  }, {
    name: 'video',
    hideTargets: ['listSymbol']
  }, {
    name: 'table.picker',
    hideTargets: ['table', 'listSymbol']
  }, {
    name: 'link',
    hideTargets: ['listSymbol']
  }, {
    name: 'blockquote',
    hideTargets: ['table', 'listSymbol']
  }]
}, {
  toolButtons: [{
    name: 'findAndReplace'
  }, {
    name: 'translate',
    hideTargets: ['listSymbol']
  }]
}];
const doubleLayout = [{
  toolRows: [{
    toolButtons: [{
      name: 'history.undo'
    }]
  }, {
    toolButtons: [{
      name: 'history.redo'
    }]
  }]
}, {
  toolRows: [{
    toolButtons: [{
      name: 'formatPainter',
      hideTargets: ['listSymbol']
    }]
  }, {
    toolButtons: [{
      name: 'clearStyle'
    }]
  }]
}, {
  toolRows: [{
    toolButtons: [{
      name: 'heading',
      hideTargets: ['listSymbol']
    }, {
      name: 'fonts'
    }, {
      name: 'sz'
    }, {
      name: 'sz.bigger'
    }, {
      name: 'sz.smaller'
    }]
  }, {
    toolButtons: [{
      name: 'bold'
    }, {
      name: 'italic'
    }, {
      name: 'underline',
      hideTargets: ['listSymbol']
    }, {
      name: 'strike',
      hideTargets: ['listSymbol']
    }, {
      name: 'vertAlign',
      hideTargets: ['listSymbol']
    }, {
      name: 'color'
    }, {
      name: 'highlight'
    }]
  }]
}, {
  toolRows: [{
    toolButtons: [{
      name: 'table.border'
    }, {
      name: 'table.vAlign'
    }]
  }, {
    toolButtons: [{
      name: 'table.fill'
    }, {
      name: 'table.merge'
    }]
  }],
  showTargets: ['table']
}, {
  toolRows: [{
    toolButtons: [{
      name: 'list.ulist'
    }, {
      name: 'list.olist'
    }, {
      name: 'list.tlist',
      hideTargets: ['listSymbol']
    }, {
      name: 'indent.left',
      hideTargets: ['table', 'listSymbol']
    }, {
      name: 'indent.right',
      hideTargets: ['table', 'listSymbol']
    }]
  }, {
    toolButtons: [{
      name: 'alignment.left'
    }, {
      name: 'alignment.center'
    }, {
      name: 'alignment.right'
    }, {
      name: 'alignment.justify'
    }, {
      name: 'lineheight',
      hideTargets: ['table', 'listSymbol']
    }]
  }]
}, {
  toolRows: [{
    toolButtons: [{
      name: 'sticker',
      hideTargets: ['listSymbol'],
      boxLayout: _interface.ToolBoxLayoutMode.vertical,
      verticalKey: 'quickInsertTitle'
    }, {
      name: 'image',
      hideTargets: ['listSymbol'],
      boxLayout: _interface.ToolBoxLayoutMode.vertical,
      verticalKey: 'quickInsertTitle'
    }, {
      name: 'embed',
      hideTargets: ['listSymbol'],
      boxLayout: _interface.ToolBoxLayoutMode.vertical
    }, {
      name: 'video',
      hideTargets: ['listSymbol'],
      boxLayout: _interface.ToolBoxLayoutMode.vertical
    }, {
      name: 'table.picker',
      hideTargets: ['table', 'listSymbol'],
      boxLayout: _interface.ToolBoxLayoutMode.vertical,
      verticalKey: 'quickInsertTitle'
    }, {
      name: 'link',
      hideTargets: ['listSymbol'],
      boxLayout: _interface.ToolBoxLayoutMode.vertical,
      verticalKey: 'quickInsertTitle'
    }, {
      name: 'blockquote',
      hideTargets: ['table', 'listSymbol'],
      boxLayout: _interface.ToolBoxLayoutMode.vertical,
      verticalKey: 'quickInsertTitle'
    }]
  }]
}, {
  toolRows: [{
    toolButtons: [{
      name: 'findAndReplace',
      boxLayout: _interface.ToolBoxLayoutMode.vertical
    }]
  }]
}, {
  toolRows: [{
    toolButtons: [{
      name: 'translate',
      boxLayout: _interface.ToolBoxLayoutMode.vertical,
      verticalKey: 'title'
    }, {
      name: 'comment',
      boxLayout: _interface.ToolBoxLayoutMode.vertical
    }, {
      name: 'voiceTranslation',
      boxLayout: _interface.ToolBoxLayoutMode.vertical
    }]
  }]
}];
const ToolbarConfig = {
  defaultInlineLayout,
  defaultSingleLayout: singleLayout,
  defaultDoubleLayout: doubleLayout,
  defaultDisableTargets,
  mode: _interface.ToolbarMode,
  buttonLayout: _interface.ToolBoxLayoutMode
};
var _default = ToolbarConfig;
exports.default = _default;
//# sourceMappingURL=config.js.map