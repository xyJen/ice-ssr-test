"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _weIcon = require("@ali/we-icon");

var _everUtils = require("@ali/4ever-utils");

var _CollapseContent = _interopRequireDefault(require("./CollapseContent"));

const _createElement = /*#__PURE__*/_react.default.createElement;

const CollapseWrapper = /*#__PURE__*/_styledComponents.default.div([""]);

const CommonContent = /*#__PURE__*/_styledComponents.default.div(["margin-bottom:12px;"]);

const CollapseTitleWrapper = /*#__PURE__*/_styledComponents.default.div(["position:relative;display:flex;align-items:center;cursor:", ";font-weight:500;font-size:14px;margin-bottom:12px;color:rgb(23,26,29);user-select:none;"], p => p.clickable ? 'pointer' : 'auto');

const CollapseTitleContent = /*#__PURE__*/_styledComponents.default.div(["flex:1;line-height:22px;"]);

const CollapseTitleFoldIconWrapper = /*#__PURE__*/_styledComponents.default.div(["display:flex;align-items:center;margin-right:6px;.collapse-arrow-icon{transform-origin:center center;transform:", ";transition:transform 0.3 ease;}"], p => !p.fold ? 'rotate(90deg)' : 'none');

var _ref = /*#__PURE__*/_createElement(_weIcon.ArrowRightNormal, {
  className: "collapse-arrow-icon"
});

const Collapse = props => {
  const {
    renderTitle,
    defaultFold = true,
    useCollapse = false
  } = props;

  const [fold, setFold] = _react.default.useState(useCollapse && defaultFold);

  const handleClickTitle = _react.default.useCallback(e => {
    if (!useCollapse) {
      return;
    }

    e.stopPropagation();
    e.preventDefault();
    setFold(!fold);
  }, [fold, useCollapse]);

  return /*#__PURE__*/_createElement(CollapseWrapper, null, /*#__PURE__*/_createElement(CollapseTitleWrapper, {
    onClick: handleClickTitle,
    onMouseDown: _everUtils.blockEvent,
    clickable: useCollapse
  }, useCollapse && /*#__PURE__*/_createElement(CollapseTitleFoldIconWrapper, {
    fold: fold
  }, _ref), /*#__PURE__*/_createElement(CollapseTitleContent, null, renderTitle())), useCollapse ? /*#__PURE__*/_createElement(_CollapseContent.default, {
    fold: fold,
    animate: true,
    style: {
      marginBottom: 12
    }
  }, props.children) : /*#__PURE__*/_createElement(CommonContent, null, props.children));
};

var _default = Collapse;
exports.default = _default;
//# sourceMappingURL=Collapse.js.map