{"version":3,"sources":["../../../src/Sidebar/SideBar.tsx"],"names":["Sidebar","React","Component","renderSidebar","type","plugins","controller","props","pluginName","toolName","split","plugin","hash","sidebar","fn","locale","config","s","render","Controller","connectController"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;;AAc5B,MAAMA,OAAN,SAAsBC,KAAK,CAACC,SAA5B,CAAoD;AAAA;AAAA;;AAAA,SAClDC,aADkD,GAClC,MAAM;AACpB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAgC,KAAKC,KAA3C;AACA,YAAM,CAACC,UAAD,EAAaC,QAAQ,GAAG,SAAxB,IAAqCL,IAAI,CAACM,KAAL,CAAW,GAAX,CAA3C;AACA,YAAMC,MAAM,GAAGN,OAAO,CAACO,IAAR,CAAaJ,UAAb,CAAf;;AACA,UAAI,CAACG,MAAD,IAAW,CAACA,MAAM,CAACE,OAAvB,EAAgC;AAC9B,eAAO,IAAP;AACD,OANmB,CAQpB;;;AACA,UAAI,OAAOF,MAAM,CAACE,OAAd,KAA0B,UAA9B,EAA0C;AACxC,4BACE,eAAC,0BAAD;AACE,UAAA,MAAM,EAAE;AACNC,YAAAA,EAAE,EAAE,MAAOH,MAAM,CAACE,OAAR;AADJ,WADV;AAIE,UAAA,MAAM,EAAGA,OAAD,IAAkB;AACxB,kBAAMX,SAAS,GAAGW,OAAO,CAACJ,QAAD,CAAzB;;AACA,gBAAI,CAACP,SAAL,EAAgB;AACd,qBAAO,IAAP;AACD;;AAED,gCACE,eAAC,SAAD;AAAW,cAAA,UAAU,EAAEI,UAAvB;AAAmC,cAAA,MAAM,EAAEO,OAAO,CAACE,MAAR,IAAkB,EAA7D;AAAiE,cAAA,MAAM,EAAEF,OAAO,CAACG,MAAR,IAAkB;AAA3F,cADF;AAGD;AAbH,UADF;AAiBD,OAlBD,MAkBO;AACL,cAAMC,CAAC,GAAGN,MAAM,CAACE,OAAjB;AACA,cAAMX,SAAS,GAAGe,CAAC,CAACR,QAAD,CAAnB;;AACA,YAAI,CAACP,SAAL,EAAgB;AACd,iBAAO,IAAP;AACD;;AAED,4BACE,eAAC,SAAD;AAAW,UAAA,UAAU,EAAEI,UAAvB;AAAmC,UAAA,MAAM,EAAEW,CAAC,CAACF,MAAF,IAAY,EAAvD;AAA2D,UAAA,MAAM,EAAEE,CAAC,CAACD,MAAF,IAAY;AAA/E,UADF;AAGD;AACF,KAvCiD;AAAA;;AAyClDE,EAAAA,MAAM,GAAG;AACP,wBAAO,eAAC,KAAD,CAAO,QAAP,QAAiB,KAAKf,aAAL,EAAjB,CAAP;AACD;;AA3CiD;;eA8CrCgB,wBAAWC,iBAAX,CAA6B,oCAAepB,OAAf,CAA7B,C","sourcesContent":["import * as React from 'react';\nimport { BiPlugin, Controller } from '@ali/4ever-cangjie';\nimport {  Plugins, connectPlugins } from '../PluginsContext';\nimport { LazyRenderer } from './LazyRenderer';\n\ninterface IContextType {\n  controller?: Controller;\n}\n\nexport interface SidebarProps extends IContextType {\n  type: string; // 插件名称\n  controller: Controller;\n  plugins: Plugins;\n}\n\nclass Sidebar extends React.Component<SidebarProps> {\n  renderSidebar = () => {\n    const { type, plugins, controller } = this.props;\n    const [pluginName, toolName = 'sidebar'] = type.split('.');\n    const plugin = plugins.hash[pluginName] as BiPlugin;\n    if (!plugin || !plugin.sidebar) {\n      return null;\n    }\n\n    // lazy render\n    if (typeof plugin.sidebar === 'function') {\n      return (\n        <LazyRenderer\n          loader={{\n            fn: () => (plugin.sidebar as any)(),\n          }}\n          render={(sidebar: any) => {\n            const Component = sidebar[toolName];\n            if (!Component) {\n              return null;\n            }\n\n            return (\n              <Component controller={controller} locale={sidebar.locale || {}} config={sidebar.config || {}} />\n            );\n          }}\n        />\n      )\n    } else {\n      const s = plugin.sidebar as any;\n      const Component = s[toolName];\n      if (!Component) {\n        return null;\n      }\n\n      return (\n        <Component controller={controller} locale={s.locale || {}} config={s.config || {}} />\n      );\n    }\n  };\n\n  render() {\n    return <React.Fragment>{this.renderSidebar()}</React.Fragment>;\n  }\n}\n\nexport default Controller.connectController(connectPlugins(Sidebar));\n"],"file":"SideBar.js"}