{"version":3,"sources":["../../../src/Sidebar/SidebarItems.tsx"],"names":["SplitLine","styled","div","SidebarItems","props","layout","plugins","controller","sortedLayout","React","useMemo","sort","a","b","index","renderItem","useCallback","item","pluginName","itemName","split","plugin","hash","sidebar","fn","Component","items","locale","config","s","renderGroup","group","isLast","renderTitle","defaultFold","useCollapse","key","map","lastIndex","length","Controller","connectController"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { BiPlugin, Controller } from '@ali/4ever-cangjie';\nimport {  Plugins, connectPlugins } from '../PluginsContext';\nimport Collapse from './Collapse';\nimport { LazyRenderer } from './LazyRenderer';\nexport interface ISidebarItemsLayoutGroup {\n  renderTitle: () => React.ReactNode;\n  items: string[];\n  index?: number;\n  defaultFold?: boolean;\n  useCollapse?: boolean;\n  key: string;\n}\n\nexport type ISidebarItemsLayout = ISidebarItemsLayoutGroup[];\n\nexport interface ISidebarItemsProps {\n  layout: ISidebarItemsLayout; // sidebar 布局配置\n  controller: Controller;\n  plugins: Plugins;\n}\n\nexport const SplitLine = styled.div`\n  padding-bottom: 12px;\n  border-top: 1px solid rgba(126, 134, 142, 0.16);\n`;\n\nconst SidebarItems = (props: ISidebarItemsProps) => {\n  const { layout = [], plugins, controller } = props;\n  const sortedLayout = React.useMemo(() => layout.sort((a, b) => (a.index || 0) - (b.index || 0)), [layout]);\n  const renderItem = React.useCallback((item: string) => {\n    const [pluginName, itemName = 'default'] = item.split('.');\n    const plugin = plugins.hash[pluginName] as BiPlugin;\n    if (!plugin || !plugin.sidebar) {\n      return null;\n    }\n\n    // lazy render\n    if (typeof plugin.sidebar === 'function') {\n      return (\n        <LazyRenderer\n          loader={{\n            fn: () => (plugin.sidebar as any)(),\n          }}\n          render={(sidebar: any) => {\n            const Component = sidebar.items?.[itemName];\n            if (!Component) {\n              return null;\n            }\n\n            return (\n              <Component controller={controller} locale={sidebar.locale || {}} config={sidebar.config || {}} />\n            );\n          }}\n        />\n      )\n    } else {\n      // TODO：待所有插件的 sidebar 迁移为异步后删除\n      const s = plugin.sidebar as any;\n      const Component = s.items?.[itemName];\n      if (!Component) {\n        return null;\n      }\n\n      return (\n        <Component controller={controller} locale={s.locale || {}} config={s.config || {}} />\n      );\n    }\n  }, [plugins, controller]);\n\n  const renderGroup = React.useCallback((group: ISidebarItemsLayoutGroup, isLast: boolean) => {\n    const { renderTitle, items, defaultFold, useCollapse, key } = group;\n    return (\n      <React.Fragment key={key}>\n        <Collapse renderTitle={renderTitle} defaultFold={defaultFold} useCollapse={useCollapse}>\n          {\n            items.map((item) => renderItem(item))\n          }\n        </Collapse>\n        { !isLast && <SplitLine />}\n      </React.Fragment>\n    );\n  }, [renderItem]);\n\n  const lastIndex = sortedLayout.length - 1;\n\n  return (\n    <React.Fragment>\n      {\n        sortedLayout.map((group, index) => renderGroup(group, index === lastIndex))\n      }\n    </React.Fragment>\n  );\n};\nexport default Controller.connectController(connectPlugins(SidebarItems));\n\n"],"file":"SidebarItems.js"}