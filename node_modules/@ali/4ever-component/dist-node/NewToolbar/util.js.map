{"version":3,"sources":["../../../src/NewToolbar/util.ts"],"names":["renderToolArray","props","key","target","renderFunc","option","showTargets","hideTargets","shouldShow","contents","map","tb","idx","filter","item","length"],"mappings":";;;;;;;AAIA;;AAEO,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAwCC,GAAxC,EAAqDC,MAArD,EAA6DC,UAA7D,EAAmFC,MAAnF,KAAoG;AACjI,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BN,KAArC;AACA,QAAMO,UAAU,GAAG,2BAAgBL,MAAhB,EAAwBG,WAAxB,EAAqCC,WAArC,CAAnB;AACA,MAAI,CAACC,UAAL,EAAiB,OAAO,IAAP;AACjB,QAAMC,QAAQ,GAAG,CAACR,KAAK,CAACC,GAAD,CAAL,IAAc,EAAf,EAAmBQ,GAAnB,CAAuB,CAACC,EAAD,EAAKC,GAAL,KAAaR,UAAU,CAACO,EAAD,EAAKC,GAAL,EAAUP,MAAV,CAA9C,EAAiEQ,MAAjE,CAAwEC,IAAI,IAAIA,IAAhF,CAAjB;AACA,MAAI,CAACL,QAAQ,CAACM,MAAd,EAAsB,OAAO,IAAP;AACtB,SAAON,QAAP;AACD,CAPM","sourcesContent":["import {\n  ToolLineProps,\n  ToolGroupProps,\n} from './interface';\nimport { judgeShouldShow } from '../Toolbar/util';\n\nexport const renderToolArray = (props: ToolLineProps | ToolGroupProps, key: string, target, renderFunc: Function, option?: any) => {\n  const { showTargets, hideTargets } = props;\n  const shouldShow = judgeShouldShow(target, showTargets, hideTargets);\n  if (!shouldShow) return null;\n  const contents = (props[key] || []).map((tb, idx) => renderFunc(tb, idx, option)).filter(item => item);\n  if (!contents.length) return null;\n  return contents;\n};\n"],"file":"util.js"}