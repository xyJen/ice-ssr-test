"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _interface = require("./interface");

const defaultDisableTargets = {
  hr: true,
  code: true
};
const singleLayout = [{
  toolButtons: [{
    name: 'history.undo'
  }, {
    name: 'history.redo'
  }, {
    name: 'formatPainter'
  }, {
    name: 'clearStyle'
  }]
}, {
  toolButtons: [{
    name: 'heading'
  }, {
    name: 'fonts'
  }, {
    name: 'sz'
  }]
}, {
  toolButtons: [{
    name: 'bold'
  }, {
    name: 'italic'
  }, {
    name: 'strike'
  }, {
    name: 'underline'
  }, {
    name: 'inlineCode'
  }, {
    name: 'color'
  }, {
    name: 'highlight'
  }]
}, {
  toolButtons: [{
    name: 'table.fill'
  }, {
    name: 'table.border'
  }, {
    name: 'table.merge'
  }, {
    name: 'table.vAlign'
  }],
  showTargets: ['table'],
  hideTargets: ['columns']
}, {
  toolButtons: [{
    name: 'table.fill'
  }, {
    name: 'table.vAlign'
  }],
  showTargets: ['columns']
}, {
  toolButtons: [{
    name: 'list.ulist'
  }, {
    name: 'list.olist'
  }, {
    name: 'list.tlist'
  }, {
    name: 'alignment'
  }, {
    name: 'indent',
    hideTargets: ['table']
  }, {
    name: 'lineheight',
    hideTargets: ['table']
  }]
}, {
  toolButtons: [{
    name: 'sticker'
  }, {
    name: 'image'
  }, {
    name: 'table.picker',
    hideTargets: ['table']
  }, {
    name: 'link'
  }, {
    name: 'blockquote',
    hideTargets: ['table']
  }, {
    name: 'hr'
  }]
}, {
  toolButtons: [{
    name: 'findAndReplace'
  }, {
    name: 'translate'
  }]
}];
const doubleLayout = [{
  toolLines: [{
    toolButtons: [{
      name: 'history.undo'
    }]
  }, {
    toolButtons: [{
      name: 'history.redo'
    }]
  }],
  fineAdaptation: true
}, {
  toolLines: [{
    toolButtons: [{
      name: 'formatPainter'
    }]
  }, {
    toolButtons: [{
      name: 'clearStyle'
    }]
  }],
  fineAdaptation: true
}, {
  toolLines: [{
    toolButtons: [{
      name: 'fonts'
    }, {
      name: 'sz'
    }, {
      name: 'sz.bigger'
    }, {
      name: 'sz.smaller'
    }]
  }, {
    toolButtons: [{
      name: 'bold'
    }, {
      name: 'italic'
    }, {
      name: 'underline'
    }, {
      name: 'strike'
    }, {
      name: 'vertAlign.supMark'
    }, {
      name: 'vertAlign.subMark'
    }, {
      name: 'color'
    }, {
      name: 'highlight'
    }]
  }]
}, {
  toolLines: [{
    toolButtons: [{
      name: 'table.border'
    }, {
      name: 'table.vAlign'
    }]
  }, {
    toolButtons: [{
      name: 'table.fill'
    }, {
      name: 'table.merge'
    }]
  }],
  showTargets: ['table'],
  hideTargets: ['columns']
}, {
  toolLines: [{
    toolButtons: [{
      name: 'table.fill'
    }, {
      name: 'table.vAlign'
    }]
  }],
  showTargets: ['columns']
}, {
  toolLines: [{
    toolButtons: [{
      name: 'list.ulist'
    }, {
      name: 'list.olist'
    }, {
      name: 'list.tlist'
    }, {
      name: 'indent.left',
      hideTargets: ['table']
    }, {
      name: 'indent.right',
      hideTargets: ['table']
    }]
  }, {
    toolButtons: [{
      name: 'alignment.left'
    }, {
      name: 'alignment.center'
    }, {
      name: 'alignment.right'
    }, {
      name: 'alignment.justify'
    }, {
      name: 'lineheight',
      hideTargets: ['table']
    }]
  }],
  hideBorder: true
}, {
  toolLines: [{
    toolButtons: [{
      name: 'heading.group',
      size: _interface.ButtonSize.large
    }]
  }],
  hideBorder: true,
  clearPadding: true
}, {
  toolLines: [{
    toolButtons: [{
      name: 'sticker',
      size: _interface.ButtonSize.large
    }, {
      name: 'image',
      size: _interface.ButtonSize.large
    }, {
      name: 'table.picker',
      hideTargets: ['table'],
      size: _interface.ButtonSize.large
    }, {
      name: 'link',
      size: _interface.ButtonSize.large
    }]
  }]
}, {
  toolLines: [{
    toolButtons: [{
      name: 'findAndReplace',
      size: _interface.ButtonSize.large
    }]
  }]
}, {
  toolLines: [{
    toolButtons: [{
      name: 'translate',
      size: _interface.ButtonSize.large
    }, {
      name: 'comment',
      size: _interface.ButtonSize.large
    }, {
      name: 'voiceTranslation',
      size: _interface.ButtonSize.large
    }]
  }]
}];
const ToolbarConfig = {
  defaultSingleLayout: singleLayout,
  defaultDoubleLayout: doubleLayout,
  defaultDisableTargets
};
var _default = ToolbarConfig;
exports.default = _default;
//# sourceMappingURL=config.js.map