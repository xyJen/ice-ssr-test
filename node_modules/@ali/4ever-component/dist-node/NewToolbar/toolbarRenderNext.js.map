{"version":3,"sources":["../../../src/NewToolbar/toolbarRenderNext.tsx"],"names":["disabledStyle","opacity","pointerEvents","ToolbarRenderNext","props","controller","plugins","singleLayout","doubleLayout","hiddenToolButtons","toolbarMode","customToolButtons","disableTargets","fineAdaptation","defaultToolbarMode","backgroundColor","onToolbarModeChange","value","uiToolbarMode","setUiToolbarMode","handleModeChange","mode","realToolbarMode","target","React","useMemo","pluginsArray","array","i","length","tgt","plugin","getTarget","toolbar","renderTool","item","index","isValidElement","name","hideTargets","showTargets","size","rest","CustomComponent","pluginName","buttonName","split","hash","buttons","Component","shouldShow","locale","isDoubleMode","ToolbarMode","double","realSize","ButtonSize","small","medium","showTitle","large","renderLine","line","layoutMode","contents","Wrapper","RowWrapper","ColumnWrapper","renderGroup","group","hideBorder","clearPadding","groupFineAdaptation","realFineAdaption","single","undefined","toString","renderSingleToolbar","singleLineLayout","layout","ToolbarConfig","defaultSingleLayout","tls","map","idx","toolLines","filter","display","renderDoubleToolbar","doubleLineLayout","defaultDoubleLayout","tgs","handleMouseDown","ev","activeElement","window","document","closest","tagName","toLocaleLowerCase","preventDefault","stopPropagation","fTgts","defaultDisableTargets","shouldDisableWholeToolbar","hideSwitchBtn","classes","wrapperStyle","process","env","NODE_ENV","leading"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport React, { useState, useCallback } from 'react';\nimport {\n  ButtonSize,\n  ToolbarRenderNextProps,\n  ToolButtonProps,\n  ToolGroupProps,\n  ToolLineProps,\n  LayoutType,\n  ToolbarMode,\n} from './interface';\nimport { judgeShouldShow } from '../Toolbar/util';\nimport ToolbarConfig from './config';\nimport { ToolbarWrapper } from './styled';\nimport {\n  ToolbarGroupWrapper as GroupWrapper,\n  ToolbarRowWrapper as RowWrapper,\n  ToolbarColumnWrapper as ColumnWrapper,\n  ToolbarLayout,\n} from '@ali/we-toolbar';\nimport { renderToolArray } from './util';\nimport { idleRender } from '../idleRender';\n\nexport const disabledStyle: React.CSSProperties = {\n  opacity: 0.35,\n  pointerEvents: 'none',\n};\n\nconst ToolbarRenderNext: React.FC<ToolbarRenderNextProps> = (props) => {\n  const {\n    controller,\n    plugins,\n    singleLayout,\n    doubleLayout,\n    hiddenToolButtons = {},\n    toolbarMode,\n    customToolButtons = {},\n    disableTargets,\n    fineAdaptation,\n    defaultToolbarMode,\n    backgroundColor,\n    onToolbarModeChange,\n  } = props;\n  const { value } = controller;\n  const [uiToolbarMode, setUiToolbarMode] = useState(defaultToolbarMode);\n  const handleModeChange = useCallback((mode: ToolbarMode) => {\n    setUiToolbarMode(mode);\n    onToolbarModeChange && onToolbarModeChange(mode);\n  }, []);\n  const realToolbarMode = 'toolbarMode' in props ? toolbarMode : uiToolbarMode;\n  /**\n   * 从插件查询哪个插件被选中（暂不支持多个插件同时识别）\n   * 通过调用插件 getTarget 实现\n   */\n  const target = React.useMemo(() => {\n    const pluginsArray = plugins.array;\n    for (let i = 0; i < pluginsArray.length; i += 1) {\n      let tgt;\n      const plugin = pluginsArray[i];\n      const getTarget = plugin.toolbar && plugin.toolbar.getTarget;\n      if (getTarget) {\n        tgt = getTarget(controller);\n      }\n      if (tgt) {\n        return tgt;\n      }\n    }\n  }, [plugins.array, value]);\n\n  /**\n   * 渲染单个 toolButton\n   * @param toolButton配置，支持直接传一个react元素\n   * @param index\n   */\n  const renderTool = (item: ToolButtonProps | React.ReactElement, index: number) => {\n    if (React.isValidElement(item)) {\n      return item;\n    }\n    const { name, hideTargets, showTargets, size, ...rest } = item;\n\n    // hiddenToolButtons 优先\n    if (hiddenToolButtons[name]) return null;\n\n    // 优先从自定义组件里匹配\n    const CustomComponent = customToolButtons[name];\n\n    const [pluginName, buttonName = 'default'] = name.split('.');\n    const plugin = plugins.hash[pluginName];\n    if (!plugin && !CustomComponent) {\n      return null;\n    }\n\n    const buttons = plugin?.toolbar && plugin?.toolbar?.buttons;\n    const Component = CustomComponent || (buttons && buttons[buttonName]);\n\n    if (!Component) {\n      return null;\n    }\n\n    if (plugin?.toolbar) {\n      // 判断是否隐藏\n      const shouldShow = judgeShouldShow(target, showTargets, hideTargets);\n      if (!shouldShow) return null;\n    }\n\n    // 优先取自定义国际化文案\n    const locale = plugin?.toolbar?.locale;\n    const isDoubleMode = realToolbarMode === ToolbarMode.double;\n    const realSize = size || (isDoubleMode ? ButtonSize.small : ButtonSize.medium);\n    const showTitle = realSize === ButtonSize.large;\n\n    return (\n      <Component\n        controller={controller}\n        toolbarMode={realToolbarMode}\n        locale={locale}\n        size={realSize}\n        key={index}\n        showTitle={showTitle}\n        {...rest}\n      />\n    );\n  };\n\n  const renderLine = (line: ToolLineProps, index: number, layoutMode: LayoutType = 'row') => {\n    const contents = renderToolArray(line, 'toolButtons', target, renderTool);\n    if (!contents) return null;\n    const Wrapper = layoutMode === 'row' ? RowWrapper : ColumnWrapper;\n    return (\n      <Wrapper key={index}>\n        {contents}\n      </Wrapper>\n    );\n  };\n\n  const renderGroup = (group: ToolGroupProps, index: number, toolbarMode: ToolbarMode) => {\n    const { layoutMode, hideBorder, clearPadding, fineAdaptation: groupFineAdaptation } = group;\n    const contents = renderToolArray(group, 'toolLines', target, renderLine, layoutMode);\n\n    // 单行默认精细化控制，双行默认按组收缩\n    let realFineAdaption = toolbarMode === ToolbarMode.single;\n    if (groupFineAdaptation !== undefined) {\n      realFineAdaption = groupFineAdaptation;\n    } else if (fineAdaptation !== undefined) {\n      realFineAdaption = fineAdaptation;\n    }\n    if (!contents) return null;\n    return (\n      <GroupWrapper\n        layoutType=\"row\"\n        groupKey={index.toString()}\n        fineAdaptation={realFineAdaption}\n        key={index}\n        hideBorder={hideBorder}\n        clearPadding={clearPadding}\n      >\n        {contents}\n      </GroupWrapper>\n    );\n  };\n\n  const renderSingleToolbar = (singleLineLayout?: ToolLineProps[]) => {\n    const layout = singleLineLayout || ToolbarConfig.defaultSingleLayout;\n    // @ts-ignore\n    const tls = layout.map((line, idx) => {\n      const group = {\n        toolLines: [\n          line,\n        ],\n      };\n      return renderGroup(group, idx, ToolbarMode.single);\n    }).filter(item => item);\n    if (!tls.length) return null;\n    return (\n      <div style={{ display: 'flex' }}>\n        {tls}\n      </div>\n    );\n  };\n\n  const renderDoubleToolbar = (doubleLineLayout?: ToolGroupProps[]) => {\n    const layout = doubleLineLayout || ToolbarConfig.defaultDoubleLayout;\n    const tgs = layout.map((group, idx) => renderGroup(group, idx, ToolbarMode.double)).filter(item => item);\n    if (!tgs.length) return null;\n    return (\n      <div style={{ display: 'flex' }} >\n        {tgs}\n      </div>\n    );\n  };\n\n  /**\n   * 阻止默认事件，防止文档区域失焦\n   */\n  const handleMouseDown = useCallback(ev => {\n    const { activeElement } = window.document;\n\n    // 对于有自定义输入域的不可编辑对象，不阻止其失焦行为\n    if (activeElement && activeElement.closest('[data-cangjie-not-editable]')) {\n      return;\n    }\n\n    if (ev.target?.tagName.toLocaleLowerCase() !== 'input') {\n      // 放过input，以便输入地方可以正常输入\n      ev.preventDefault && ev.preventDefault();\n      ev.stopPropagation && ev.stopPropagation();\n    }\n  }, []);\n\n  const fTgts = disableTargets || ToolbarConfig.defaultDisableTargets;\n  const shouldDisableWholeToolbar = fTgts[target];\n  const hideSwitchBtn = !singleLayout || !doubleLayout;\n\n  let classes = 'bi-toolbar';\n  let wrapperStyle: React.CSSProperties = {};\n  if (shouldDisableWholeToolbar) {\n    wrapperStyle = disabledStyle;\n  }\n  if (realToolbarMode === ToolbarMode.double) {\n    classes += ' double';\n  } else {\n    classes += ' single';\n  }\n\n  // @ts-ignore\n  return (\n    <ToolbarWrapper\n      style={wrapperStyle}\n      className={classes}\n      onMouseDown={handleMouseDown}\n      data-role={'toolbar'}\n    >\n      <ToolbarLayout\n        mode={realToolbarMode as ToolbarMode}\n        /*\n        // @ts-ignore */\n        onModeChange={handleModeChange}\n        /*\n        // @ts-ignore */\n        singleLineToolbar={renderSingleToolbar(singleLayout) || undefined}\n        /*\n        // @ts-ignore */\n        doubleLineToolbar={renderDoubleToolbar(doubleLayout) || undefined}\n        hideSwitchBtn={hideSwitchBtn}\n        // @ts-ignore\n        fineAdaptation={fineAdaptation}\n        backgroundColor={backgroundColor}\n      />\n    </ToolbarWrapper>\n  );\n};\n\nexport default process.env.NODE_ENV === 'test'\n  ? ToolbarRenderNext\n  : idleRender(ToolbarRenderNext, 400, { leading: true });\n"],"file":"toolbarRenderNext.js"}