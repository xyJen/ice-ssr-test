{"version":3,"sources":["../../../src/leftToolbar/leftToolbarContext.tsx"],"names":["initData","preventMouseMove","initDispatch","updateHoverBlock","clearPrevent","useActiveInteraction","ActiveInteractionHooks","LeftToolbarContext","React","createContext","useLeftToolbar","useContext","LeftToolbarProvider","props","state","dispatch","useReducer","reducer","activeType","activeRef","useRef","current","actions","useMemo","block","value","children"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;uBAF4B,a;AAY5B,MAAMA,QAA0B,GAAG;AACjCC,EAAAA,gBAAgB,EAAE;AADe,CAAnC;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,MAAM,CAAG,CADR;AAEnBC,EAAAA,YAAY,EAAE,MAAM,CAAG,CAFJ;AAGnBH,EAAAA,gBAAgB,EAAE,MAAM,CAAG;AAHR,CAArB;AAMA,MAAM;AAAEI,EAAAA;AAAF,IAA2BC,gDAAjC;AAEO,MAAMC,kBAAkB,gBAAGC,KAAK,CAACC,aAAN,CAEhC,CAACT,QAAD,EAAWE,YAAX,CAFgC,CAA3B;;;AAIA,MAAMQ,cAAc,GAAG,MAAM;AAClC,SAAOF,KAAK,CAACG,UAAN,CAAiBJ,kBAAjB,CAAP;AACD,CAFM;;;;AAIA,MAAMK,mBAAkC,GAAIC,KAAD,IAAW;AAC3D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,UAAN,CAAiBC,gBAAjB,EAA0BjB,QAA1B,CAA1B;AAEA,QAAM,CAACkB,UAAD,IAAeb,oBAAoB,EAAzC;AACA,QAAMc,SAAS,GAAGX,KAAK,CAACY,MAAN,CAAa,EAAb,CAAlB;AACAD,EAAAA,SAAS,CAACE,OAAV,GAAoBH,UAApB;AAEA,QAAMI,OAA2B,GAAGd,KAAK,CAACe,OAAN,CAClC,OAAO;AACLpB,IAAAA,gBAAgB,EAAGqB,KAAD,IAAW;AAC3BT,MAAAA,QAAQ,CAAC,+BAAiBS,KAAjB,CAAD,CAAR;AACD,KAHI;AAILpB,IAAAA,YAAY,EAAE,MAAM;AAClBW,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACD,KANI;AAOLd,IAAAA,gBAAgB,EAAE,MAAM;AACtBc,MAAAA,QAAQ,CAAC,gCAAD,CAAR;AACD;AATI,GAAP,CADkC,EAYlC,CAACA,QAAD,CAZkC,CAApC;AAeA,QAAMU,KAAK,GAAGjB,KAAK,CAACe,OAAN,CAAc,MAAM,CAACT,KAAD,EAAQQ,OAAR,CAApB,EAAsC,CAACR,KAAD,EAAQQ,OAAR,CAAtC,CAAd;AAEA,sBACE,eAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEG;AAApC,KACGZ,KAAK,CAACa,QADT,CADF;AAKD,CA7BM","sourcesContent":["import * as React from 'react';\nimport { Block } from '@ali/4ever-cangjie';\nimport { ActiveInteractionHooks } from '../HoverBlock/ActiveInteractionContext';\nimport reducer, { clearPrevent, updateHoverBlock, preventMouseMove } from './reducer';\nimport type { LeftToolbarProps } from './types';\n\n\nexport interface LeftToolbarActions {\n  updateHoverBlock: (block?: Block) => void;\n  clearPrevent: () => void;\n  preventMouseMove: () => void;\n}\n\nconst initData: LeftToolbarProps = {\n  preventMouseMove: false,\n};\n\nconst initDispatch = {\n  updateHoverBlock: () => { },\n  clearPrevent: () => { },\n  preventMouseMove: () => { },\n};\n\nconst { useActiveInteraction } = ActiveInteractionHooks;\n\nexport const LeftToolbarContext = React.createContext<\n[LeftToolbarProps, LeftToolbarActions]\n>([initData, initDispatch]);\n\nexport const useLeftToolbar = () => {\n  return React.useContext(LeftToolbarContext);\n};\n\nexport const LeftToolbarProvider: React.FC<any> = (props) => {\n  const [state, dispatch] = React.useReducer(reducer, initData);\n\n  const [activeType] = useActiveInteraction();\n  const activeRef = React.useRef('');\n  activeRef.current = activeType;\n\n  const actions: LeftToolbarActions = React.useMemo(\n    () => ({\n      updateHoverBlock: (block) => {\n        dispatch(updateHoverBlock(block));\n      },\n      clearPrevent: () => {\n        dispatch(clearPrevent());\n      },\n      preventMouseMove: () => {\n        dispatch(preventMouseMove());\n      },\n    }),\n    [dispatch],\n  );\n\n  const value = React.useMemo(() => [state, actions], [state, actions]) as [LeftToolbarProps, LeftToolbarActions];\n\n  return (\n    <LeftToolbarContext.Provider value={value}>\n      {props.children}\n    </LeftToolbarContext.Provider>\n  );\n};\n"],"file":"leftToolbarContext.js"}