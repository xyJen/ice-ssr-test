{"version":3,"sources":["../../../src/Placeholder/bambooPlaceholder.tsx"],"names":["PlaceholderWrapper","styled","div","theme","placeholder","props","isSelected","BambooPlaceholder","React","PureComponent","renderText","node","name","data","placeholderText","render","attributes","text"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAIrB,MAAMA,kBAAkB,gBAAGC,0BAAOC,GAAV,iMAC3B,6CAA6BC,iBAAMC,WAAnC,CAD2B,EAGZC,KAAD,IAAYA,KAAK,CAACC,UAAN,GAAmB,SAAnB,GAA+B,SAH9B,CAAxB;;;;AAoBA,MAAMC,iBAAN,SAAgCC,eAAMC,aAAtC,CAA4D;AAAA;AAAA;;AAAA,SACjEC,UADiE,GACpD,MAAM;AACjB,YAAM;AAAEA,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAuB,KAAKN,KAAlC;AACA,YAAM;AAAEO,QAAAA;AAAF,UAAWD,IAAI,CAACE,IAAtB;AACA,UAAIC,eAAe,GAAG,EAAtB;;AACA,UAAI,OAAOJ,UAAP,KAAsB,UAA1B,EAAsC;AACpCI,QAAAA,eAAe,GAAGJ,UAAU,CAACE,IAAD,CAA5B;AACD;;AACD,aAAOE,eAAe,IAAK,GAAEF,IAAI,IAAI,EAAG,OAAxC;AACD,KATgE;AAAA;;AAWjEG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKX,KAA5B;AACA,UAAMY,IAAI,GAAG,KAAKP,UAAL,EAAb;AACA,wBACE,eAAC,kBAAD,6BAAwBM,UAAxB;AAAoC,MAAA,KAAK,EAAEC;AAA3C,QACGA,IADH,CADF;AAKD;;AAnBgE","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { transformThemeObjToCssString, theme } from '@ali/4ever-utils';\n\n\nexport const PlaceholderWrapper = styled.div<{isSelected?: boolean}>`\n  ${transformThemeObjToCssString(theme.placeholder)}\n  border-style: solid;\n  border-color: ${(props) => (props.isSelected ? '#D9DBDD' : '#ECEDEF')};\n  background-color: #F2F4F5;\n  color: #A0A5AB;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: 48px;\n  line-height: 48px;\n  text-align: center;\n`;\n\ninterface IProps {\n  renderText?: (name: string) => string;\n  node: any;\n  attributes: any;\n}\n\nexport class BambooPlaceholder extends React.PureComponent<IProps> {\n  renderText = () => {\n    const { renderText, node } = this.props;\n    const { name } = node.data;\n    let placeholderText = '';\n    if (typeof renderText === 'function') {\n      placeholderText = renderText(name);\n    }\n    return placeholderText || `${name || ''}暂无法解析`;\n  };\n\n  render() {\n    const { attributes } = this.props;\n    const text = this.renderText();\n    return (\n      <PlaceholderWrapper {...attributes} title={text}>\n        {text}\n      </PlaceholderWrapper>\n    );\n  }\n}\n"],"file":"bambooPlaceholder.js"}