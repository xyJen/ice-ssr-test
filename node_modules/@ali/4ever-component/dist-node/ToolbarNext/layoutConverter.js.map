{"version":3,"sources":["../../../src/ToolbarNext/layoutConverter.ts"],"names":["convertSingleLayout","layout","context","toolbarConfig","map","line","convertLine","items","filter","config","length","result","index","item","push","convertDoubleLayout","group","convertGroup","itemArray","hideTargets","disableTargets","blocks","targets","shouldHide","shouldDisable","blockConfigs","block","isDoubleLine","convertDoubleLine","lineOrDoubleLine","Array","isArray","disable","lines","lineConfigs","itemConfigs","convertItem","React","isValidElement","controller","plugins","customButtons","name","disabled","disabledFromConfig","rest","extroProps","key"],"mappings":"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","sourcesContent":["import type { Controller } from '@ali/4ever-cangjie';\nimport type { IToolbarItem, IToolbarItemGroup, IToolbarItemLine, ISingleLineLayout, IDoubleLineLayout, IToolBar, IToolbarItemDoubleLine } from './interface';\nimport type { Plugins } from '../PluginsContext';\n\nimport { areArraysIntersected } from './utils';\nimport { buildToolbarItem } from './buildToolbarItem';\nimport React from 'react';\n\n\nexport interface IConvertContext {\n  targets: string[],\n  controller: Controller,\n  plugins: Plugins | null,\n  customButtons: IToolBar['customButtons']\n}\n\n\nexport function convertSingleLayout(layout: ISingleLineLayout, context: IConvertContext) {\n  const toolbarConfig = layout.map(line => convertLine(line, false, context));\n\n  const items = toolbarConfig.filter(config => config?.length > 0);\n\n  const result: (JSX.Element[] | 'divider')[] = []\n\n  for (let index = 0; index < items.length; index++) {\n    const item = items[index];\n    result.push(item);\n    if (index < items.length - 1) {\n      result.push('divider');\n    }\n  }\n\n  return result;\n}\n\n\nexport function convertDoubleLayout(layout: IDoubleLineLayout, context: IConvertContext) {\n\n  const toolbarConfig = layout.map(group => convertGroup(group, context));\n\n  const items = toolbarConfig.filter(config => config?.length > 0);\n\n  const result: ([JSX.Element[], JSX.Element[]] | JSX.Element[] | 'divider')[] = []\n\n  for (let index = 0; index < items.length; index++) {\n    const itemArray = items[index];\n    for (const item of itemArray) {\n      result.push(item);\n    }\n    if (index < items.length - 1) {\n      result.push('divider');\n    }\n  }\n\n  return result;\n}\n\nexport function convertGroup(group: IToolbarItemGroup, context: IConvertContext) {\n  const { hideTargets = [], disableTargets = [], blocks } = group;\n\n  const { targets } = context;\n\n  const shouldHide = areArraysIntersected(targets, hideTargets);\n  if (shouldHide) {\n    return [];\n  }\n  const shouldDisable = areArraysIntersected(targets, disableTargets);\n\n\n  const blockConfigs = blocks.map(block => {\n    if (isDoubleLine(block)) {\n      return convertDoubleLine(block, shouldDisable, context);\n    }\n    return convertLine(block, shouldDisable, context);\n  });\n\n  return blockConfigs.filter(config => config?.length > 0);\n\n}\n\nfunction isDoubleLine(lineOrDoubleLine: IToolbarItemDoubleLine | IToolbarItemLine): lineOrDoubleLine is IToolbarItemDoubleLine {\n  return Array.isArray(lineOrDoubleLine['lines'])\n}\n\n\nexport function convertDoubleLine(block: IToolbarItemDoubleLine, disable: boolean, context: IConvertContext): [JSX.Element[], JSX.Element[]] | [] {\n\n  const { hideTargets = [], disableTargets = [], lines } = block;\n\n  const { targets } = context;\n\n  const shouldHide = disable || areArraysIntersected(targets, hideTargets);\n  if (shouldHide) {\n    return [];\n  }\n  const shouldDisable = areArraysIntersected(targets, disableTargets);\n\n  const lineConfigs = lines.map(line => convertLine(line, shouldDisable, context))\n\n  return lineConfigs as [JSX.Element[], JSX.Element[]];\n\n}\n\nexport function convertLine(line: IToolbarItemLine, disable: boolean, context: IConvertContext): JSX.Element[] {\n\n  const { targets } = context;\n  const { hideTargets = [], disableTargets = [], items } = line;\n  const shouldHide = areArraysIntersected(targets, hideTargets);\n  if (shouldHide) {\n    return [];\n  }\n  const shouldDisable = disable || areArraysIntersected(targets, disableTargets);\n\n  const itemConfigs = items.map(item => convertItem(item, shouldDisable, context))\n\n  return itemConfigs.filter(React.isValidElement);\n\n}\n\nexport function convertItem(item: IToolbarItem, disable: boolean, context: IConvertContext): JSX.Element | null {\n\n  const { targets, controller, plugins, customButtons } = context;\n  const { hideTargets = [], disableTargets = [], name, disabled: disabledFromConfig, ...rest } = item;\n  const shouldHide = areArraysIntersected(targets, hideTargets);\n  if (shouldHide) {\n    return null;\n  }\n\n  const shouldDisable = disabledFromConfig || disable || areArraysIntersected(targets, disableTargets);\n\n  const extroProps = shouldDisable ? { disabled: shouldDisable, key: name, ...rest } : { key: name, ...rest };\n\n  return buildToolbarItem(plugins, controller, name, customButtons, extroProps);\n}\n"],"file":"layoutConverter.js"}