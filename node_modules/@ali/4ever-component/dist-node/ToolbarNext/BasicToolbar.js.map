{"version":3,"sources":["../../../src/ToolbarNext/BasicToolbar.tsx"],"names":["ToolbarWrapper","styled","div","convertToolbarMode","mode","HeaderToolbarMode","double","convertBackToolbarMode","single","disabledStyle","opacity","pointerEvents","BasicToolbar","props","controller","plugins","singleLayout","doubleLayout","disableTargets","hideTargets","customButtons","onSwitchModeClick","rest","value","selection","pluginsArray","array","currentTarget","setCurrentTargets","React","useState","targets","useMemo","results","i","length","plugin","getTarget","toolbar","tgt","includes","push","useEffect","singleLineToolbar","doubleLineToolbar","shouldDisable","style","handleMouseDown","useCallback","ev","activeElement","window","document","closest","target","tagName","toLocaleLowerCase","preventDefault","handleModeChange","modeType","type"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { ToolbarLayout } from '@ali/we-design-next';\nimport type { IToolbarLayoutProps } from '@ali/we-design-next';\nimport { IToolBar, HeaderToolbarMode } from './interface';\nimport type { Controller, BiPlugin } from '@ali/4ever-cangjie';\nimport type { Plugins } from '../PluginsContext';\nimport { areArraysContentEqual, areArraysIntersected } from './utils';\nimport { convertSingleLayout, convertDoubleLayout } from './layoutConverter';\n\n\nconst ToolbarWrapper = styled.div`\n  position: relative;\n`;\n\n\nexport interface IBasicToolbarProps extends IToolBar {\n  plugins: Plugins | null,\n  controller: Controller,\n}\n\nfunction convertToolbarMode(mode: HeaderToolbarMode): NonNullable<IToolbarLayoutProps['mode']> {\n\n  if (mode === HeaderToolbarMode.double) {\n    return 'doubleLine';\n  }\n\n  return 'singleLine';\n}\n\nfunction convertBackToolbarMode(mode: IToolbarLayoutProps['mode']): HeaderToolbarMode {\n\n  if (mode === 'doubleLine') {\n    return HeaderToolbarMode.double;\n  }\n  return HeaderToolbarMode.single;\n}\n\nconst disabledStyle: React.CSSProperties = {\n  opacity: 0.35,\n  pointerEvents: 'none',\n};\n\n\nexport const BasicToolbar: React.FC<IBasicToolbarProps> = (props) => {\n  const {\n    controller,\n    plugins,\n    singleLayout,\n    doubleLayout,\n    mode,\n    disableTargets = [],\n    hideTargets = [],\n    customButtons = {},\n    onSwitchModeClick,\n    ...rest\n  } = props;\n  const { value } = controller;\n  const { selection } = value;\n  const pluginsArray = plugins?.array || [];\n\n  const [currentTarget, setCurrentTargets] = React.useState<string[]>([]);\n\n  /**\n   * 从插件查询哪个插件被选中（暂不支持多个插件同时识别）\n   * 通过调用插件 getTarget 实现\n   */\n  const targets = React.useMemo(() => {\n    const results: string[] = [];\n    for (let i = 0; i < pluginsArray.length; i += 1) {\n      const plugin = pluginsArray[i] as BiPlugin;\n      const getTarget = plugin.toolbar?.getTarget;\n      if (getTarget && typeof getTarget === 'function') {\n        const tgt = getTarget(controller);\n        if (tgt && !results.includes(tgt)) {\n          results.push(tgt);\n        }\n      }\n    }\n    return results;\n  }, [pluginsArray, selection]);\n\n  React.useEffect(() => {\n    if (currentTarget !== targets && !areArraysContentEqual(currentTarget, targets)) {\n      setCurrentTargets(targets);\n    }\n\n  }, [currentTarget, targets])\n\n\n  const singleLineToolbar = singleLayout && convertSingleLayout(singleLayout, { controller, plugins, targets: currentTarget, customButtons });\n\n  const doubleLineToolbar = doubleLayout && convertDoubleLayout(doubleLayout, { controller, plugins, targets: currentTarget, customButtons });\n\n\n  if (areArraysIntersected(currentTarget, hideTargets)) {\n    return null;\n  }\n\n  const shouldDisable = areArraysIntersected(currentTarget, disableTargets);\n\n  const style = React.useMemo(() => {\n    if (shouldDisable) {\n      return disabledStyle;\n    }\n\n    return {};\n  }, [shouldDisable]);\n\n  const handleMouseDown = React.useCallback((ev: React.MouseEvent) => {\n    const { activeElement } = window.document;\n\n    // 对于有自定义输入域的不可编辑对象，不阻止其失焦行为\n    if (activeElement && activeElement.closest('[data-cangjie-not-editable]')) {\n      return;\n    }\n\n    if ((ev.target as Element)?.tagName?.toLocaleLowerCase() !== 'input') {\n      // 放过input，以便输入地方可以正常输入\n      ev.preventDefault && ev.preventDefault();\n      // 允许工具栏子节点上元素点击冒泡，避免下拉菜单无法收起\n      // ev.stopPropagation && ev.stopPropagation();\n    }\n  }, []);\n\n  const handleModeChange = React.useCallback((modeType: NonNullable<IToolbarLayoutProps['mode']>) => {\n    if (onSwitchModeClick) {\n      const type = convertBackToolbarMode(modeType)\n      onSwitchModeClick(type);\n    }\n  }, [onSwitchModeClick]);\n\n\n  return (\n    <ToolbarWrapper\n      style={style}\n      onMouseDown={handleMouseDown}\n      data-role={'toolbar'}\n      className={`bi-toolbar ${mode === HeaderToolbarMode.double ? 'double' : 'single'}`}\n    >\n      <ToolbarLayout\n        mode={convertToolbarMode(mode)}\n        singleLineToolbar={singleLineToolbar}\n        doubleLineToolbar={doubleLineToolbar}\n        onModeChange={handleModeChange}\n        {...rest}\n      />\n    </ToolbarWrapper>\n  );\n\n}\n\n"],"file":"BasicToolbar.js"}