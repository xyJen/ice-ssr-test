"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComplexColorIconMenu = void 0;

var _react = _interopRequireDefault(require("react"));

var _weDesignNext = require("@ali/we-design-next");

var _icons = require("../icons");

var _colorPanel = require("./colorPanel");

const _createElement = /*#__PURE__*/_react.default.createElement;

var _ref = /*#__PURE__*/_createElement(_icons.IconPalette, null);

const ComplexColorIconMenu = props => {
  const {
    getContainer,
    onOverlayVisibleChange: onOverlayVisibleChangeProp,
    isOverlayVisible: isOverlayVisibleProp,
    tooltip,
    role,
    ...rest
  } = props;

  const [isOverLayoutVisibleState, onOverLayoutVisibleChangeState] = _react.default.useState(false);

  const onOverLayoutVisibleChange = _react.default.useCallback(v => {
    if (isOverlayVisibleProp === undefined) {
      onOverLayoutVisibleChangeState(v);
    }

    onOverlayVisibleChangeProp && onOverlayVisibleChangeProp(v);
  }, [isOverlayVisibleProp, onOverlayVisibleChangeProp]);

  const isOverLayoutVisible = isOverlayVisibleProp !== undefined ? isOverlayVisibleProp : isOverLayoutVisibleState;
  return /*#__PURE__*/_createElement(_weDesignNext.Popover, {
    visible: isOverLayoutVisible,
    onVisibleChange: onOverLayoutVisibleChange,
    content: /*#__PURE__*/_createElement(_colorPanel.ColorPanel, rest),
    getContainer: getContainer,
    placement: "bottomLeft"
  }, /*#__PURE__*/_createElement(_weDesignNext.TBIconButton, {
    onClick: () => {
      onOverLayoutVisibleChange(!isOverLayoutVisible);
    },
    icon: _ref,
    tooltip: isOverLayoutVisible ? undefined : tooltip,
    role: role,
    active: isOverLayoutVisible
  }));
};

exports.ComplexColorIconMenu = ComplexColorIconMenu;
//# sourceMappingURL=complexColorIconMenu.js.map