{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/VerticalAlignSelect.tsx"],"names":["VerticalAlignSelect","props","onChange","options","value","rest","normalizeOptions","title","top","key","icon","testid","middle","bottom","handleChange","e"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAMA;;uBAN4B,a;;wBA+CM,eAAC,2BAAD,O;;yBAOG,eAAC,8BAAD,O;;yBAOA,eAAC,8BAAD,O;;AA7B9B,MAAMA,mBAAwD,GAAIC,KAAD,IAAW;AACjF,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,KAHI;AAIJ,OAAGC;AAJC,MAKFJ,KALJ,CADiF,CAQjF;;AACA,QAAMK,gBAAiC,GAAG,oBACxC,MAAM,CACJ;AACEC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAYD,KADrB;AAEEH,IAAAA,KAAK,EAAE,KAFT;AAGEK,IAAAA,GAAG,EAAE,KAHP;AAIEC,IAAAA,IAAI,EAAEP,OAAO,CAACK,GAAR,CAAYE,IAAZ,QAJR;AAKEC,IAAAA,MAAM,EAAE;AALV,GADI,EAQJ;AACEJ,IAAAA,KAAK,EAAEJ,OAAO,CAACS,MAAR,CAAeL,KADxB;AAEEH,IAAAA,KAAK,EAAE,QAFT;AAGEK,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,IAAI,EAAEP,OAAO,CAACS,MAAR,CAAeF,IAAf,SAJR;AAKEC,IAAAA,MAAM,EAAE;AALV,GARI,EAeJ;AACEJ,IAAAA,KAAK,EAAEJ,OAAO,CAACU,MAAR,CAAeN,KADxB;AAEEH,IAAAA,KAAK,EAAE,QAFT;AAGEK,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,IAAI,EAAEP,OAAO,CAACU,MAAR,CAAeH,IAAf,SAJR;AAKEC,IAAAA,MAAM,EAAE;AALV,GAfI,CADkC,EAwBxC,CAACR,OAAD,CAxBwC,CAA1C;AA6BA,QAAMW,YAAY,GAAG,wBAClBC,CAAD,IAAO;AACL,QAAIb,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACa,CAAD,CAAR;AACD;AACF,GALkB,EAMnB,CAACb,QAAD,CANmB,CAArB;AASA,sBACE,eAAC,kBAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,QAAQ,EAAEU,YAFZ;AAGE,IAAA,MAAM,EAAC,qBAHT;AAIE,IAAA,OAAO,EAAER,gBAJX,CAKE;;AALF,KAMMD,IANN,EADF;AAUD,CAzDM","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport {\n  IconVerticalAlignBottom,\n  IconVerticalAlignMiddle,\n  IconVerticalAlignTop,\n} from '../icons';\n\nimport { IconSelect, IconSelectSingleLineDefaultWidth } from './Basics';\n\nexport type VerticalAlign = 'middle' | 'top' | 'bottom';\n\nexport interface IVerticalAlignSelectProps\n  extends Omit<React.ComponentProps<typeof IconSelect>,\n  'onChange' | 'options' | 'overlayVisible' | 'onVisibleChange' | 'width' | 'value'> {\n  /**\n   * 对齐方式修改时的回调函数\n   */\n  onChange: (align: VerticalAlign) => void;\n  /**\n   * 选项的tooltip提示\n   */\n  options: Record<VerticalAlign, { title: string, icon?: React.ReactElement }>;\n\n  value: VerticalAlign;\n}\n\ninterface ISelectOption {\n  title: string;\n  key: string;\n  value: VerticalAlign;\n  icon: React.ReactElement;\n}\n\nexport const VerticalAlignSelect: React.FC<IVerticalAlignSelectProps> = (props) => {\n  const {\n    onChange,\n    options,\n    value,\n    ...rest\n  } = props;\n\n  // 垂直对齐的选项\n  const normalizeOptions: ISelectOption[] = useMemo(\n    () => [\n      {\n        title: options.top.title,\n        value: 'top',\n        key: 'top',\n        icon: options.top.icon || <IconVerticalAlignTop />,\n        testid: 'option-top',\n      },\n      {\n        title: options.middle.title,\n        value: 'middle',\n        key: 'middle',\n        icon: options.middle.icon || <IconVerticalAlignMiddle />,\n        testid: 'option-middle',\n      },\n      {\n        title: options.bottom.title,\n        value: 'bottom',\n        key: 'bottom',\n        icon: options.bottom.icon || <IconVerticalAlignBottom />,\n        testid: 'option-bottom',\n      },\n    ],\n    [options]\n  );\n\n\n\n  const handleChange = useCallback(\n    (e) => {\n      if (onChange) {\n        onChange(e);\n      }\n    },\n    [onChange]\n  );\n\n  return (\n    <IconSelect\n      value={value}\n      onChange={handleChange}\n      testid='VerticalAlignSelect'\n      options={normalizeOptions}\n      // width={IconSelectSingleLineDefaultWidth}\n      {...rest}\n    />\n  );\n};\n\n"],"file":"VerticalAlignSelect.js"}