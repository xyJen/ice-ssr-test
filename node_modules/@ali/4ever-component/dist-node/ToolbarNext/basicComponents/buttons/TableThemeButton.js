"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableThemeButton = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _weDesign = require("@ali/we-design");

var _icons = require("../icons");

var _Basics = require("./Basics");

const _createElement = /*#__PURE__*/_react.default.createElement;

var _ref = /*#__PURE__*/_createElement(_icons.IconPalette, null);

const TableThemeButton = props => {
  const {
    tableBgColor,
    defaultTableBgColor = '',
    onTableBgColorChange,
    tableBorderColor,
    defaultTableBorderColor = '',
    onTableBorderColorChange,
    ...restProps
  } = props;

  const [overlayVisible, setOverlayVisible] = _react.default.useState(false);

  const handleReset = () => {
    onTableBgColorChange(defaultTableBgColor);
    onTableBorderColorChange(defaultTableBorderColor);
    setOverlayVisible(false);
    return false;
  };

  return /*#__PURE__*/_createElement(_Basics.IconMenu, (0, _extends2.default)({
    icon: _ref,
    overlay: /*#__PURE__*/_createElement(_weDesign.ColorPanel, {
      backgroundColor: tableBgColor,
      onBackgroundColorClick: onTableBgColorChange,
      borderColor: tableBorderColor,
      onBorderColorClick: onTableBorderColorChange,
      enableResetButton: true,
      onResetButtonClick: handleReset
    }),
    overlayVisible: overlayVisible,
    onVisibleChange: setOverlayVisible,
    testid: "bi-toolbar-table-theme"
  }, restProps));
};

exports.TableThemeButton = TableThemeButton;
//# sourceMappingURL=TableThemeButton.js.map