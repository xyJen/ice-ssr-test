"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextTypeSelect = exports.Item = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Basics = require("./Basics");

const _createElement = /*#__PURE__*/_react.default.createElement;

const Item = /*#__PURE__*/_styledComponents.default.span(["font-size:", ";font-weight:", ";line-height:1.45;"], p => p.fontSize, p => p.fontWeight);

exports.Item = Item;

const TitleWrapper = /*#__PURE__*/_styledComponents.default.div(["overflow:hidden;text-overflow:ellipsis;overflow-wrap:normal;white-space:nowrap;"]);

const optionsMap = {
  paragraph: title => /*#__PURE__*/_createElement(Item, {
    fontSize: "14px",
    fontWeight: 400
  }, title),
  'heading-1': title => /*#__PURE__*/_createElement(Item, {
    fontSize: "20pt",
    fontWeight: 500
  }, title),
  'heading-2': title => /*#__PURE__*/_createElement(Item, {
    fontSize: "16pt",
    fontWeight: 500
  }, title),
  'heading-3': title => /*#__PURE__*/_createElement(Item, {
    fontSize: "14pt",
    fontWeight: 500
  }, title),
  'heading-4': title => /*#__PURE__*/_createElement(Item, {
    fontSize: "12pt",
    fontWeight: 500
  }, title)
};

const TextTypeSelect = props => {
  const {
    onChange,
    disabled,
    testid,
    value,
    role,
    options,
    tooltip
  } = props;
  const handleChange = (0, _react.useCallback)(v => {
    if (onChange) {
      onChange(v);
    }
  }, [onChange]);
  return /*#__PURE__*/_createElement(_Basics.TextSelect, {
    value: value,
    disabled: disabled,
    renderOption: ({
      key
    }) => {
      const {
        title
      } = options.find(op => op.key === key) || {};
      return /*#__PURE__*/_createElement(_Basics.SelectOption, null, optionsMap[key]?.(title) || title);
    },
    renderValue: () => /*#__PURE__*/_createElement(TitleWrapper, null, tooltip.title),
    testid: testid || 'TextTypeSelect',
    role: role,
    width: _Basics.TextTypeSingleLineDefaultWidth,
    options: options,
    onChange: handleChange,
    tooltip: tooltip
  });
};

exports.TextTypeSelect = TextTypeSelect;
//# sourceMappingURL=TextTypeSelect.js.map