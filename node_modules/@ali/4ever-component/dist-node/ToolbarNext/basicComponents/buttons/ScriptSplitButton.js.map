{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/ScriptSplitButton.tsx"],"names":["ScriptSplit","props","onVisibleChange","curScript","onScriptChange","disabled","testid","subItem","supItem","icon","rest","overlayVisible","setOverlayVisible","React","useState","handleOverlayVisible","useCallback","v","splitButtonIcon","handleClick","items","key","map","title","shortCut","description","content","e","tooltip"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;wBAyC6B,eAAC,oBAAD,O;;yBAAoB,eAAC,sBAAD,O;;yBAiBzC,eAAC,sBAAD,O;;yBAAsB,eAAC,oBAAD,O;;yBACpB,eAAC,mBAAD,O;;AAtC/B,MAAMA,WAAW,GAAIC,KAAD,IAAoC;AAE7D,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,OAAO,GAAG,EANN;AAOJC,IAAAA,OAAO,GAAG,EAPN;AAQJC,IAAAA,IARI;AASJ,OAAGC;AATC,MAUFT,KAVJ;;AAWA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCC,eAAMC,QAAN,CAAe,KAAf,CAA5C;;AAEA,QAAMC,oBAAoB,GAAGF,eAAMG,WAAN,CAAmBC,CAAD,IAAgB;AAC7DL,IAAAA,iBAAiB,CAACK,CAAD,CAAjB;AACAf,IAAAA,eAAe,IAAIA,eAAe,CAACe,CAAD,CAAlC;AACD,GAH4B,EAG1B,CAACf,eAAD,CAH0B,CAA7B;;AAKA,QAAMgB,eAAe,GAAGT,IAAI,KAAKN,SAAS,KAAK,KAAd,eAAL,CAA5B;;AAEA,QAAMgB,WAAW,GAAGN,eAAMG,WAAN,CAAkB,MAAM;AAC1CZ,IAAAA,cAAc,CAACD,SAAS,IAAI,OAAd,CAAd;AACAY,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAHmB,EAGjB,CAACZ,SAAD,EAAYY,oBAAZ,CAHiB,CAApB;;AAKA,QAAMK,KAA0B,GAAG,CAAC;AAAEC,IAAAA,GAAG,EAAE,OAAP;AAAgB,OAAGb;AAAnB,GAAD,EAA+B;AAAEa,IAAAA,GAAG,EAAE,KAAP;AAAc,OAAGd;AAAjB,GAA/B,EAA2De,GAA3D,CAA+D,CAAC;AAACD,IAAAA,GAAD;AAAME,IAAAA,KAAN;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,GAAD,MAA0C;AAC1IJ,IAAAA,GAD0I;AAE1IK,IAAAA,OAAO,eACL,eAAC,eAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,KAAK,EAAG,GAAEH,KAAM,IAAGC,QAAS,GAF9B;AAGE,MAAA,WAAW,EAAEC;AAHf,oBAKE,eAAC,YAAD,CAAM,IAAN;AACE,MAAA,GAAG,EAAEJ,GADP;AAEE,MAAA,MAAM,EAAEA,GAAG,KAAK,OAAR,gBAFV;AAGE,MAAA,MAAM,EAAElB,SAAS,KAAKkB,GAAd,WAAuC,IAHjD;AAIE,MAAA,OAAO,EAAGM,CAAD,IAAO;AACdvB,QAAAA,cAAc,CAACiB,GAAD,CAAd;AACAN,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AAPH,OASGQ,KATH,CALF;AAHwI,GAA1C,CAA/D,CAAnC;AAuBA,QAAMK,OAAO,GAAGzB,SAAS,KAAK,KAAd,GAAsBI,OAAtB,GAAgCC,OAAhD;AAEA,sBACE,eAAC,mBAAD;AACE,IAAA,OAAO,EAAEW,WADX;AAEE,IAAA,cAAc,EAAER,cAFlB;AAGE,IAAA,eAAe,EAAEI,oBAHnB;AAIE,IAAA,IAAI,EAAEG,eAJR;AAKE,IAAA,QAAQ,EAAEb,QALZ;AAME,IAAA,OAAO,eACL,eAAC,YAAD;AACE,MAAA,KAAK,EAAEe;AADT,MAPJ;AAWE,IAAA,SAAS,EAAE,KAXb;AAYE,IAAA,MAAM,EAAEd,MAZV;AAaE,IAAA,MAAM,EAAE,CAAC,CAACH,SAbZ;AAcE,IAAA,OAAO,EAAEyB;AAdX,KAeMlB,IAfN,EADF;AAmBD,CAvEM","sourcesContent":["import React from 'react';\nimport { SplitButton, List, Tooltip } from './Basics';\nimport { IconSubscript, IconSuperscript, IconSelected } from '../icons';\n\ntype ScriptType = 'super' | 'sub';\n\ntype ScriptItem = {\n  title?: string;\n  shortCut?: string;\n  description?: string;\n}\n\nexport interface IScriptSplitButtonProps extends\n  Pick<Partial<React.ComponentProps<typeof SplitButton>>, 'onVisibleChange' | 'disabled' | 'testid' | 'role' | 'icon'> {\n  subItem?: ScriptItem;\n  supItem?: ScriptItem;\n  onScriptChange: (script: ScriptType) => void;\n  curScript?: ScriptType;\n}\n\ntype IListProps = React.ComponentProps<typeof List>;\n\nexport const ScriptSplit = (props: IScriptSplitButtonProps) => {\n\n  const {\n    onVisibleChange,\n    curScript,\n    onScriptChange,\n    disabled,\n    testid,\n    subItem = {},\n    supItem = {},\n    icon,\n    ...rest\n  } = props;\n  const [overlayVisible, setOverlayVisible] = React.useState(false);\n\n  const handleOverlayVisible = React.useCallback((v: boolean) => {\n    setOverlayVisible(v);\n    onVisibleChange && onVisibleChange(v);\n  }, [onVisibleChange]);\n\n  const splitButtonIcon = icon || (curScript === 'sub' ? <IconSubscript /> : <IconSuperscript />);\n\n  const handleClick = React.useCallback(() => {\n    onScriptChange(curScript || 'super');\n    handleOverlayVisible(false);\n  }, [curScript, handleOverlayVisible]);\n\n  const items: IListProps['items'] = [{ key: 'super', ...supItem }, { key: 'sub', ...subItem }].map(({key, title, shortCut, description}) => ({\n    key,\n    content: (\n      <Tooltip\n        placement=\"right\"\n        title={`${title}(${shortCut})`}\n        description={description}\n      >\n        <List.Item\n          key={key}\n          prefix={key === 'super' ? <IconSuperscript /> : <IconSubscript />}\n          suffix={curScript === key ? <IconSelected /> : null}\n          onClick={(e) => {\n            onScriptChange(key as ScriptType);\n            handleOverlayVisible(false);\n          }}\n        >\n          {title}\n        </List.Item>\n      </Tooltip>\n    )\n  }));\n\n  const tooltip = curScript === 'sub' ? subItem : supItem;\n\n  return (\n    <SplitButton\n      onClick={handleClick}\n      overlayVisible={overlayVisible}\n      onVisibleChange={handleOverlayVisible}\n      icon={splitButtonIcon}\n      disabled={disabled}\n      overlay={\n        <List\n          items={items}\n        />\n      }\n      autoClose={false}\n      testid={testid}\n      active={!!curScript}\n      tooltip={tooltip}\n      {...rest}\n    />\n  )\n}\n"],"file":"ScriptSplitButton.js"}