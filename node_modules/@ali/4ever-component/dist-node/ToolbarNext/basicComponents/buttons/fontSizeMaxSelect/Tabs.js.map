{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/Tabs.tsx"],"names":["getDefaultActiveKey","props","activeKey","React","Children","forEach","children","child","disabled","key","activeKeyIsValid","keys","map","indexOf","Tabs","Component","constructor","onTabClick","e","setActiveKey","onScroll","target","currentTarget","scrollLeft","nextActiveKey","onChange","setState","getNextActiveKey","next","state","c","push","unshift","length","ret","i","defaultActiveKey","getDerivedStateFromProps","newState","Object","render","restProps","style","testid","defaultProps","destroyInactiveTabPane"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TabsWrap } from './style';\nimport { getDataAttr, omit} from './utils';\nimport TabBar from './TabBar';\nimport { ITabsProps } from './utils';\n\nfunction getDefaultActiveKey(props: any): string {\n  let activeKey: string | undefined;\n  React.Children.forEach(props.children, (child) => {\n    if (child && !activeKey && !child.props.disabled) {\n      activeKey = child.key;\n    }\n  });\n  return activeKey as string;\n}\n\nfunction activeKeyIsValid(props: any, key: string): boolean {\n  const keys = React.Children.map(\n    props.children,\n    (child) => child && child.key,\n  );\n  return keys.indexOf(key) >= 0;\n}\n\ninterface ITabsState {\n  activeKey: string;\n}\n\nexport class Tabs extends React.Component<ITabsProps, ITabsState> {\n  static defaultProps = {\n    onChange: (): void => {},\n    children: null,\n    style: {},\n    destroyInactiveTabPane: false,\n  };\n\n  constructor(props: ITabsProps) {\n    super(props);\n\n    let activeKey;\n    if (props.activeKey) {\n      activeKey = props.activeKey;\n    } else if (props.defaultActiveKey) {\n      activeKey = props.defaultActiveKey;\n    } else {\n      activeKey = getDefaultActiveKey(props);\n    }\n\n    this.state = {\n      activeKey: activeKey as string,\n    };\n  }\n\n  static getDerivedStateFromProps(props: ITabsProps, state: ITabsState) {\n    const newState = {} as ITabsState;\n    if (props.activeKey) {\n      newState.activeKey = props.activeKey as string;\n    } else if (!activeKeyIsValid(props, state.activeKey)) {\n      newState.activeKey = getDefaultActiveKey(props);\n    }\n    if (Object.keys(newState).length > 0) {\n      return newState;\n    }\n    return null;\n  }\n\n  onTabClick = (activeKey: string, e?: React.MouseEvent<HTMLDivElement>) => {\n    const { onTabClick } = this.props;\n    if (onTabClick) {\n      onTabClick(activeKey, e);\n    }\n    this.setActiveKey(activeKey);\n  };\n\n  onScroll = ({ target, currentTarget }: any) => {\n    if (target === currentTarget && target.scrollLeft > 0) {\n      target.scrollLeft = 0;\n    }\n  };\n\n  setActiveKey = (nextActiveKey: string) => {\n    const { activeKey, onChange } = this.props;\n    if (activeKey !== nextActiveKey) {\n      if (!activeKey) {\n        this.setState({\n          activeKey: nextActiveKey,\n        });\n      }\n      if (onChange) {\n        onChange(nextActiveKey);\n      }\n    }\n  };\n\n  /**\n   * 传入 true 获得 activeKey 的下一个未被禁用的 key\n   * 传入 false 获得上一个\n   */\n  getNextActiveKey = (next: boolean) => {\n    const { activeKey } = this.state;\n    const children: any[] = [];\n    React.Children.forEach(this.props.children, (c: any) => {\n      if (c && !c.props.disabled) {\n        if (next) {\n          children.push(c);\n        } else {\n          children.unshift(c);\n        }\n      }\n    });\n    const { length } = children;\n    let ret = length && children[0].key;\n    children.forEach((child, i) => {\n      if (child.key === activeKey) {\n        if (i === length - 1) {\n          ret = children[0].key;\n        } else {\n          ret = children[i + 1].key;\n        }\n      }\n    });\n    return ret;\n  };\n\n  render() {\n    const { props, state } = this;\n    const { children, ...restProps } = props;\n\n    return (\n      <TabsWrap\n        style={props.style}\n        {...getDataAttr(restProps)}\n        onScroll={this.onScroll}\n      >\n        <TabBar\n          {...omit(props, ['className'])}\n          panes={children}\n          style={props.style}\n          activeKey={state.activeKey}\n          onTabClick={this.onTabClick}\n          testid={props.testid}\n        />\n      </TabsWrap>\n    );\n  }\n}\n"],"file":"Tabs.js"}