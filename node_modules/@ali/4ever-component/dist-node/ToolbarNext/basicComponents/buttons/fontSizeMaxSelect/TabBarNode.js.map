{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/TabBarNode.tsx"],"names":["TabBarNode","Component","constructor","props","offset","lastNextPrevShown","lastWheelDirection","tabList","tabSizeMap","wrapperOffsetWH","wrapperScrollWH","prevTransitionEnd","e","propertyName","container","getRef","scrollToActiveTab","target","currentTarget","activeTab","navWrap","needToScroll","isNextPrevShown","activeTabWH","getScrollWH","navWrapNodeWH","getOffsetWH","wrapOffset","getOffsetLT","activeTabOffset","setOffset","setNextPrev","minOffset","maxOffset","newOffset","Math","min","max","prev","onPrevClick","navWrapNode","next","onNextClick","handleWheel","deltaX","deltaY","mixed","absX","abs","absY","preventDefault","handleResize","fastdom","measure","wrapper","tabs","offsetWidth","scrollWidth","getTabList","panes","React","Children","forEach","child","isValidElement","push","key","tab","updateTabSizes","activeKey","Map","Promise","resolve","btnNode","set","width","height","offsetHeight","left","offsetLeft","top","offsetTop","getPrevNext","state","testid","showNextPrev","prevCallback","nextCallback","prevButton","undefined","disabled","show","transform","transformOrigin","nextButton","excessTabsHelper","visibleStart","visibleEnd","componentDidMount","componentDidUpdate","navWrapper","addEventListener","prevProps","then","nextPrev","setState","componentWillUnmount","removeEventListener","navNode","navNodeWH","containerWH","mutate","realOffset","setNext","setPrev","node","getBoundingClientRect","navOffset","navStyle","style","value","v","render","children","saveRef","scrolling","defaultProps","prefixCls","noop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fastdom from 'fastdom';\nimport { ArrowIconDown } from './icon';\nimport classnames from 'classnames';\nimport { setTransform, noop, ITabsProps, ISaveRef, IGetRef } from './utils';\nimport {\n  NavContainer,\n  NavWrap,\n  Nav,\n  PrevButton,\n  NextButton,\n} from './style';\nimport { ITabPaneProps } from './TabPane';\n\ninterface ITabBarNodeProps extends ITabsProps {\n  saveRef: ISaveRef;\n  getRef: IGetRef;\n  panes: React.ReactNode;\n}\n\ninterface ITabBarNodeState {\n  next: boolean;\n  prev: boolean;\n  visibleStart: number;\n  visibleEnd: number;\n}\n\ninterface TabSize {\n  width: number;\n  height: number;\n  left: number;\n  top: number;\n}\n\ntype TabSizeMap = Map<React.Key, TabSize>;\n\nexport default class TabBarNode extends Component<\nITabBarNodeProps,\nITabBarNodeState\n> {\n  static defaultProps = {\n    prefixCls: '',\n    onPrevClick: noop,\n    onNextClick: noop,\n  };\n\n  private offset: number;\n\n  private lastNextPrevShown: any;\n\n  private lastWheelDirection: 'x' | 'y' | undefined;\n\n  private readonly tabList: Array<{ key: React.Key; tab: React.ReactNode }>;\n\n  private tabSizeMap: TabSizeMap;\n\n  private wrapperOffsetWH = 0;\n  private wrapperScrollWH = 0;\n\n  constructor(props: ITabBarNodeProps) {\n    super(props);\n    this.offset = 0;\n    this.tabList = [];\n    this.tabSizeMap = new Map();\n    this.state = {\n      next: false,\n      prev: false,\n      visibleStart: 0,\n      visibleEnd: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { getRef } = this.props;\n    this.componentDidUpdate();\n    const navWrapper = getRef('navWrap');\n    if (navWrapper) {\n      navWrapper.addEventListener('wheel', this.handleWheel);\n    }\n  }\n\n  componentDidUpdate(prevProps?: any) {\n    const { props } = this;\n    this.setNextPrev().then((nextPrev: any) => {\n      // wait next, prev show hide\n      if (this.isNextPrevShown(this.state) !== this.isNextPrevShown(nextPrev)) {\n        this.setState({}, this.scrollToActiveTab);\n      } else if (!prevProps || props.activeKey !== prevProps.activeKey) {\n        this.scrollToActiveTab();\n      }\n    });\n\n    if (!prevProps) {\n      this.updateTabSizes().then(() => {\n        this.handleResize();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const { getRef } = this.props;\n    const navWrapper = getRef('navWrap');\n    if (navWrapper) {\n      navWrapper.removeEventListener('wheel', this.handleWheel);\n    }\n  }\n\n  /**\n   * 检测左右按钮的激活状态，并调整 offset\n   */\n  setNextPrev() {\n    return new Promise((resolve) => {\n      fastdom.measure(() => {\n        const { getRef } = this.props;\n        const navNode = getRef('nav');\n        const navNodeWH = this.getScrollWH(navNode);\n        // Add 1px to fix `offsetWidth` with decimal in Chrome not correct handle\n        const containerWH = this.getOffsetWH(getRef('container')) + 1;\n        const navWrapNodeWH = this.getOffsetWH(getRef('navWrap'));\n\n        fastdom.mutate(() => {\n          let { offset } = this;\n          const minOffset = containerWH - navNodeWH;\n          let { next, prev } = this.state;\n\n          if (minOffset >= 0) {\n            next = false;\n            this.setOffset(0);\n            offset = 0;\n          } else if (minOffset < offset) {\n            next = true;\n          } else {\n            next = false;\n            const realOffset = navWrapNodeWH - navNodeWH;\n            this.setOffset(realOffset);\n            offset = realOffset;\n          }\n\n          if (offset < 0) {\n            prev = true;\n          } else {\n            prev = false;\n          }\n\n          this.setNext(next);\n          this.setPrev(prev);\n          resolve({\n            next,\n            prev,\n          });\n        });\n      });\n    });\n  }\n\n  /**\n   * 获取节点的宽度\n   *\n   * @param {HTMLElement} node\n   * @return {number} offsetWidth\n   */\n  getOffsetWH(node: HTMLElement) {\n    return node.offsetWidth;\n  }\n\n  /**\n   * 获取节点的滚动宽度\n   *\n   * @param {HTMLElement} node\n   * @return {number} scrollWidth\n   */\n  getScrollWH(node: HTMLElement) {\n    return node.scrollWidth;\n  }\n\n  /**\n   * 获取节点的偏移量\n   *\n   * @param {HTMLElement} node\n   * @return {number} clientRect.left\n   */\n  getOffsetLT(node: HTMLElement) {\n    return node.getBoundingClientRect().left;\n  }\n\n  /**\n   * 设置偏移量\n   *\n   */\n  setOffset(offset: number) {\n    const { getRef } = this.props;\n    const target: number = Math.min(0, offset);\n    if (this.offset !== target) {\n      this.offset = target;\n      let navOffset: any = {};\n      const navStyle = getRef('nav').style;\n      navOffset = {\n        value: `translate3d(${target}px,0,0)`,\n      };\n      setTransform(navStyle, navOffset.value);\n    }\n  }\n\n  setPrev(v: boolean) {\n    if (this.state.prev !== v) {\n      this.setState({\n        prev: v,\n      });\n    }\n  }\n\n  setNext(v: boolean) {\n    if (this.state.next !== v) {\n      this.setState({\n        next: v,\n      });\n    }\n  }\n\n  prevTransitionEnd = (e: React.TransitionEvent<HTMLElement>) => {\n    if (e.propertyName !== 'opacity') {\n      return;\n    }\n    const container = this.props.getRef('container');\n    this.scrollToActiveTab({\n      target: container,\n      currentTarget: container,\n    });\n  };\n\n  scrollToActiveTab = (e?: any) => {\n    const { getRef } = this.props;\n    const activeTab = getRef('activeTab');\n    const navWrap = getRef('navWrap');\n    if ((e && e.target !== e.currentTarget) || !activeTab) {\n      return;\n    }\n\n    // when not scrollable or enter scrollable first time, don't emit scrolling\n    const needToScroll = this.isNextPrevShown() && this.lastNextPrevShown;\n    this.lastNextPrevShown = this.isNextPrevShown();\n    if (!needToScroll) {\n      return;\n    }\n\n    const activeTabWH = this.getScrollWH(activeTab);\n    const navWrapNodeWH = this.getOffsetWH(navWrap);\n    let { offset } = this;\n    const wrapOffset = this.getOffsetLT(navWrap);\n    const activeTabOffset = this.getOffsetLT(activeTab);\n    if (wrapOffset > activeTabOffset) {\n      // activeTab 在 wrap 的可见区域左侧\n      offset += wrapOffset - activeTabOffset;\n      this.setOffset(offset);\n      this.setNextPrev();\n    } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {\n      // activeTab 在 wrap 的可见区域右侧\n      offset -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);\n      const minOffset = this.wrapperOffsetWH - this.wrapperScrollWH;\n      const maxOffset = 0;\n      const newOffset = Math.min(\n        Math.max(offset, minOffset),\n        maxOffset,\n      );\n      this.setOffset(newOffset);\n      this.setNextPrev();\n    }\n  };\n\n  /** 点击左箭头的事件处理函数 */\n  prev = (e: React.MouseEvent<HTMLElement>) => {\n    const { onPrevClick, getRef } = this.props;\n    if (onPrevClick) {\n      onPrevClick(e);\n    }\n    const navWrapNode = getRef('navWrap');\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset + navWrapNodeWH);\n    this.setNextPrev();\n  };\n\n  /** 点击右箭头的事件处理函数 */\n  next = (e: React.MouseEvent<HTMLElement>) => {\n    const { onNextClick, getRef } = this.props;\n    if (onNextClick) {\n      onNextClick(e);\n    }\n    const navWrapNode = getRef('navWrap');\n    const navWrapNodeWH = this.getOffsetWH(navWrapNode);\n    const { offset } = this;\n    this.setOffset(offset - navWrapNodeWH);\n    this.setNextPrev();\n  };\n\n  /**\n   * 判断左右的按钮是否显示\n   */\n  isNextPrevShown(state?: { next: boolean; prev: boolean }) {\n    if (state) {\n      return state.next || state.prev;\n    }\n    const { next, prev } = this.state;\n    return next || prev;\n  }\n\n  handleWheel = (e: WheelEvent) => {\n    if (e) {\n      const { wrapperOffsetWH, wrapperScrollWH } = this;\n      if (wrapperOffsetWH >= wrapperScrollWH) {\n        return false;\n      }\n      const { deltaX, deltaY } = e;\n      // Convert both to x & y since wheel only happened on PC\n      let mixed = 0;\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      if (absX === absY) {\n        mixed = this.lastWheelDirection === 'x' ? deltaX : deltaY;\n      } else if (absX > absY) {\n        mixed = deltaX;\n        this.lastWheelDirection = 'x';\n      } else {\n        mixed = deltaY;\n        this.lastWheelDirection = 'y';\n      }\n      const minOffset = wrapperOffsetWH - wrapperScrollWH;\n      const maxOffset = 0;\n      const newOffset = Math.min(\n        Math.max(-mixed + this.offset, minOffset),\n        maxOffset,\n      );\n      this.setOffset(newOffset);\n      e.preventDefault();\n      return true;\n    } else { return false; }\n  };\n\n  handleResize = () => {\n    fastdom.measure(() => {\n      const { getRef } = this.props;\n      const wrapper = getRef('navWrap');\n      const tabs = getRef('nav');\n      this.wrapperOffsetWH = wrapper.offsetWidth || 0;\n      this.wrapperScrollWH = tabs.scrollWidth || 0;\n    });\n  };\n\n  getTabList = (panes: React.ReactNode) => {\n    const tabList: Array<{ key: React.Key; tab: React.ReactNode }> = [];\n    React.Children.forEach(\n      panes as React.ReactElement[],\n      (child: React.ReactElement<ITabPaneProps>) => {\n        if (child && React.isValidElement(child)) {\n          tabList.push({\n            key: child.key as React.Key,\n            tab: child.props.tab,\n          });\n        }\n      },\n    );\n    return tabList;\n  };\n\n  updateTabSizes = () => {\n    const { getRef, activeKey } = this.props;\n    const tabSizeMap: TabSizeMap = new Map();\n    return new Promise<void>((resolve) => {\n      fastdom.measure(() => {\n        this.tabList.forEach(({ key }) => {\n          let btnNode;\n          if (activeKey === key) {\n            btnNode = getRef('activeTab');\n          } else {\n            btnNode = getRef(`tab_${key}`);\n          }\n          if (btnNode) {\n            tabSizeMap.set(key, {\n              width: btnNode.offsetWidth || 0,\n              height: btnNode.offsetHeight || 0,\n              left: btnNode.offsetLeft || 0,\n              top: btnNode.offsetTop || 0,\n            });\n          }\n        });\n        this.tabSizeMap = tabSizeMap;\n        resolve();\n      });\n    });\n  };\n\n  getPrevNext = () => {\n    const { prev, next } = this.state;\n    const { testid } = this.props;\n    const showNextPrev = prev || next;\n    const { prev: prevCallback, next: nextCallback, prevTransitionEnd } = this;\n    const prevButton = (\n      <PrevButton\n        style={{\n          left: 0,\n        }}\n        onClick={prev ? prevCallback : undefined}\n        className={classnames('prevbutton', {\n          disabled: !prev,\n          show: showNextPrev,\n        })}\n        onTransitionEnd={prevTransitionEnd}\n        data-testid={`${testid || ''}_pre`}\n      >\n        <div\n          style={{\n            transform: 'rotate(90deg)',\n            transformOrigin: 'center center',\n          }}\n        >\n          <ArrowIconDown />\n        </div>\n      </PrevButton>\n    );\n\n    const nextButton = (\n      <NextButton\n        onClick={next ? nextCallback : undefined}\n        className={classnames('nextbutton', {\n          disabled: !next,\n          show: showNextPrev,\n        })}\n        data-testid={`${testid || ''}_next`}\n      >\n        <div\n          style={{\n            transform: 'rotate(-90deg)',\n            transformOrigin: 'center center',\n          }}\n        >\n          <ArrowIconDown />\n        </div>\n      </NextButton>\n    );\n\n    return (\n      <>\n        {prevButton}\n        {nextButton}\n      </>\n    );\n  };\n\n  excessTabsHelper = (showNextPrev: Boolean) => {\n    return showNextPrev ? this.getPrevNext() : null;\n  };\n\n\n  render() {\n    const { prev, next } = this.state;\n    const {\n      children,\n      saveRef,\n    } = this.props;\n    const showNextPrev = prev || next;\n\n    return (\n      <NavContainer\n        className={classnames({\n          scrolling: showNextPrev,\n        })}\n        ref={saveRef('container')}\n      >\n        <NavWrap\n          ref={saveRef('navWrap')}\n        >\n          <Nav\n            ref={saveRef('nav')}\n          >\n            {children}\n          </Nav>\n        </NavWrap>\n        {this.excessTabsHelper(showNextPrev)}\n      </NavContainer>\n    );\n  }\n}\n"],"file":"TabBarNode.js"}