{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/TabBarTabsNode.tsx"],"names":["TabBarTabsNode","props","saveRef","panes","activeKey","testid","rst","onTabClicks","React","Children","forEach","child","key","isActived","current","onTabClick","e","id","node","disabled","actived","undefined","tab","push"],"mappings":";;;;;;;;;;;AAEA;;AACA;;AACA;;AAEA;;AANA;;AACA;uBAA4B,a;;AAc5B,MAAMA,cAA8C,GAAIC,KAAD,IAAW;AAChE,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAMA,QAAMK,GAAyB,GAAG,EAAlC,CAPgE,CAQhE;AACA;;AACA,QAAMC,WAAW,GAAG,mBAAY,EAAZ,CAApB,CAVgE,CAYhE;;AACAC,iBAAMC,QAAN,CAAeC,OAAf,CAAuBP,KAAvB,EAAuDQ,KAAD,IAAgB;AACpE,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,UAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,UAAMC,SAAS,GAAGT,SAAS,KAAKQ,GAAhC;;AAEA,QACE,CAACL,WAAW,CAACO,OAAZ,CAAoBF,GAApB,CAAD,IACAL,WAAW,CAACO,OAAZ,CAAoBF,GAApB,MAA6BX,KAAK,CAACc,UAFrC,EAGE;AACAR,MAAAA,WAAW,CAACO,OAAZ,CAAoBF,GAApB,IAA4BI,CAAD,IAAyC;AAClE,YAAIf,KAAK,CAACc,UAAV,EAAsB;AACpBd,UAAAA,KAAK,CAACc,UAAN,CAAiBH,GAAjB,EAAsBI,CAAtB;AACD;AACF,OAJD;AAKD;;AAED,8BACE,SAASL,KAAK,CAACV,KADjB,EAEE,mDAFF;AAKA,UAAMgB,EAAE,GAAGhB,KAAK,CAACgB,EAAN,GAAY,GAAEL,GAAI,IAAGX,KAAK,CAACgB,EAAG,EAA9B,GAAkCL,GAA7C;;AAEA,UAAMM,IAAI,gBACR,eAAC,gBAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,uBAAeP,KAAK,CAACV,KAAN,CAAYkB,QAAZ,GAAuB,MAAvB,GAAgC,OAFjD;AAGE,uBAAeN,SAAS,GAAG,MAAH,GAAY,OAHtC;AAIE,uBAAgB,WAAUI,EAAG,EAJ/B;AAKE,MAAA,QAAQ,EAAEJ,SAAS,GAAG,CAAH,GAAO,CAAC,CAL7B;AAME,MAAA,GAAG,EAAED,GANP;AAOE,MAAA,EAAE,EAAG,OAAMK,EAAG,EAPhB;AAQE,MAAA,SAAS,EAAE,yBACT;AACEE,QAAAA,QAAQ,EAAE,CAAC,CAACR,KAAK,CAACV,KAAN,CAAYkB,QAD1B;AAEEC,QAAAA,OAAO,EAAEP;AAFX,OADS,CARb;AAcE,MAAA,GAAG,EAAEA,SAAS,GAAGX,OAAO,CAAC,WAAD,CAAV,GAA0BA,OAAO,CAAE,OAAMU,GAAI,EAAZ,CAdjD;AAeE,MAAA,OAAO,EACL,CAACC,SAAD,IAAc,CAACF,KAAK,CAACV,KAAN,CAAYkB,QAA3B,GACIZ,WAAW,CAACO,OAAZ,CAAoBF,GAApB,CADJ,GAEIS,SAlBR;AAoBE,qBAAc,GAAEhB,MAAO,IAAGY,EAAG;AApB/B,OAsBKN,KAAK,CAACV,KAAN,CAAYqB,GAtBjB,CADF;;AA2BAhB,IAAAA,GAAG,CAACiB,IAAJ,CAASL,IAAT;AACD,GArDD;;AAuDA,sBACE,eAAC,oBAAD,QACGZ,GADH,CADF;AAKD,CAzED;;eA2EeN,c","sourcesContent":["/* eslint-disable max-lines-per-function */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React, { useRef } from 'react';\nimport warning from 'tiny-warning';\nimport classnames from 'classnames';\nimport { ISaveRef } from './utils';\nimport { TabBarTab, TabBarWrapper } from './style';\nimport { ITabBarProps } from './utils';\n\ninterface ITabBarTabsNodeProps extends ITabBarProps {\n  saveRef: ISaveRef;\n  panes: React.ReactNode;\n  id?: string;\n}\n\nconst TabBarTabsNode: React.FC<ITabBarTabsNodeProps> = (props) => {\n  const {\n    saveRef,\n    panes,\n    activeKey,\n    testid\n  } = props;\n  const rst: React.ReactElement[] = [];\n  // 下面两个ref是为了缓存函数引用，根据key进行缓存\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const onTabClicks = useRef<any>({});\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  React.Children.forEach(panes as React.ReactElement[], (child: any) => {\n    if (!child) {\n      return;\n    }\n    const key = child.key as string;\n    const isActived = activeKey === key;\n\n    if (\n      !onTabClicks.current[key] ||\n      onTabClicks.current[key] !== props.onTabClick\n    ) {\n      onTabClicks.current[key] = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (props.onTabClick) {\n          props.onTabClick(key, e);\n        }\n      };\n    }\n\n    warning(\n      'tab' in child.props,\n      'There must be `tab` property on children of Tabs.',\n    );\n\n    const id = props.id ? `${key}-${props.id}` : key;\n\n    const node = (\n      <TabBarTab\n        role=\"tab\"\n        aria-disabled={child.props.disabled ? 'true' : 'false'}\n        aria-selected={isActived ? 'true' : 'false'}\n        aria-controls={`tabpane-${id}`}\n        tabIndex={isActived ? 0 : -1}\n        key={key}\n        id={`tab-${id}`}\n        className={classnames(\n          {\n            disabled: !!child.props.disabled,\n            actived: isActived,\n          },\n        )}\n        ref={isActived ? saveRef('activeTab') : saveRef(`tab_${key}`)}\n        onClick={\n          !isActived && !child.props.disabled\n            ? onTabClicks.current[key]\n            : undefined\n        }\n        data-testid={`${testid}_${id}`}\n      >\n          {child.props.tab}\n      </TabBarTab>\n    );\n\n    rst.push(node);\n  });\n\n  return (\n    <TabBarWrapper>\n      {rst}\n    </TabBarWrapper>\n  );\n};\n\nexport default TabBarTabsNode;\n"],"file":"TabBarTabsNode.js"}