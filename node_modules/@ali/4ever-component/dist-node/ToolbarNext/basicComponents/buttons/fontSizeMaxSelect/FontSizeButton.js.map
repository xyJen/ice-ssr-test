{"version":3,"sources":["../../../../../../src/ToolbarNext/basicComponents/buttons/fontSizeMaxSelect/FontSizeButton.tsx"],"names":["FontSizeButton","option","value","minFontSize","maxFontSize","defaultFontFamily","type","active","fontSize","Math","min","max","default","fontWeight","lineHeight","height","textOverflow","maxWidth","overflow","title","des"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAoB5B,MAAMA,cAA6C,GAAG,CAAC;AACrDC,EAAAA,MADqD;AAErDC,EAAAA,KAFqD;AAGrDC,EAAAA,WAHqD;AAIrDC,EAAAA,WAJqD;AAKrDC,EAAAA;AALqD,CAAD,KAMhD;AACJ,sBACE,eAAC,oBAAD;AACE,IAAA,GAAG,EAAEJ,MAAM,CAACK,IADd;AAEE,IAAA,KAAK,EAAEL,MAAM,CAACK,IAFhB;AAGE,IAAA,MAAM,EAAEL,MAAM,CAACK,IAHjB;AAIE,IAAA,MAAM,EAAEL,MAAM,CAACK,IAAP,KAAgBJ,KAJ1B;AAKE,IAAA,SAAS,EAAE,yBAAW;AACpBK,MAAAA,MAAM,EAAEN,MAAM,CAACK,IAAP,KAAgBJ;AADJ,KAAX;AALb,kBASE,eAAC,gBAAD;AACE,IAAA,IAAI,EAAED,MAAM,CAACK,IADf;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,QAAQ,EAAG,GAAEC,IAAI,CAACC,GAAL,CACXD,IAAI,CAACE,GAAL,CAASV,MAAM,CAACW,OAAP,GAAiB,IAA1B,EAAgCT,WAAhC,CADW,EAEXC,WAFW,CAGX,IAJG;AAKLS,MAAAA,UAAU,EAAEZ,MAAM,CAACY,UALd;AAMLC,MAAAA,UAAU,EAAE,MANP;AAOLC,MAAAA,MAAM,EAAE,MAPH;AAQLC,MAAAA,YAAY,EAAE,MART;AASLC,MAAAA,QAAQ,EAAE,MATL;AAULC,MAAAA,QAAQ,EAAE;AAVL;AAFT,KAeGjB,MAAM,CAACkB,KAfV,CATF,eA0BE,eAAC,cAAD,qBACE,eAAC,eAAD,QACGlB,MAAM,CAACkB,KAAP,KAAiB,YAAjB,GACGlB,MAAM,CAACmB,GADV,GAEI,GAAEf,iBAAkB,IACnBJ,MAAM,CAACK,IAAP,KAAgB,YAAhB,GAA+B,GAA/B,GAAqCL,MAAM,CAACW,OAC7C,EALP,CADF,CA1BF,CADF;AAsCD,CA7CD;;eA+CeZ,c","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { DesWrap, GalleryButton, TextWrap, TitleWrap } from './style';\n\nexport interface ITextTypeSelectOption {\n  title: string;\n  type: string;\n  default: number;\n  fontWeight: number;\n  lineHeight: number | string;\n  des: string;\n}\n\nexport interface FontSizeButtonProps {\n  option: ITextTypeSelectOption;\n  value?: string;\n  minFontSize: number;\n  maxFontSize: number;\n  defaultFontFamily: string;\n}\n\nconst FontSizeButton: React.FC<FontSizeButtonProps> = ({\n  option,\n  value,\n  minFontSize,\n  maxFontSize,\n  defaultFontFamily,\n}) => {\n  return (\n    <GalleryButton\n      key={option.type}\n      value={option.type}\n      testid={option.type}\n      active={option.type === value}\n      className={classnames({\n        active: option.type === value,\n      })}\n    >\n      <TitleWrap\n        type={option.type}\n        style={{\n          fontSize: `${Math.min(\n            Math.max(option.default * 0.75, minFontSize),\n            maxFontSize,\n          )}pt`,\n          fontWeight: option.fontWeight,\n          lineHeight: '29px',\n          height: '29px',\n          textOverflow: 'clip',\n          maxWidth: '65px',\n          overflow: 'hidden',\n        }}\n      >\n        {option.title}\n      </TitleWrap>\n      <DesWrap>\n        <TextWrap>\n          {option.title === 'AaBbCcDdEe'\n            ? option.des\n            : `${defaultFontFamily} ${\n                option.type === 'blockquote' ? '-' : option.default\n              }`}\n        </TextWrap>\n      </DesWrap>\n    </GalleryButton>\n  );\n};\n\nexport default FontSizeButton;\n"],"file":"FontSizeButton.js"}