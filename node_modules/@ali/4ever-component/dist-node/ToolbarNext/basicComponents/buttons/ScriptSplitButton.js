"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScriptSplit = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _Basics = require("./Basics");

var _icons = require("../icons");

const _createElement = /*#__PURE__*/_react.default.createElement;

var _ref = /*#__PURE__*/_createElement(_icons.IconSubscript, null);

var _ref2 = /*#__PURE__*/_createElement(_icons.IconSuperscript, null);

var _ref3 = /*#__PURE__*/_createElement(_icons.IconSuperscript, null);

var _ref4 = /*#__PURE__*/_createElement(_icons.IconSubscript, null);

var _ref5 = /*#__PURE__*/_createElement(_icons.IconSelected, null);

const ScriptSplit = props => {
  const {
    onVisibleChange,
    curScript,
    onScriptChange,
    disabled,
    testid,
    subItem = {},
    supItem = {},
    icon,
    ...rest
  } = props;

  const [overlayVisible, setOverlayVisible] = _react.default.useState(false);

  const handleOverlayVisible = _react.default.useCallback(v => {
    setOverlayVisible(v);
    onVisibleChange && onVisibleChange(v);
  }, [onVisibleChange]);

  const splitButtonIcon = icon || (curScript === 'sub' ? _ref : _ref2);

  const handleClick = _react.default.useCallback(() => {
    onScriptChange(curScript || 'super');
    handleOverlayVisible(false);
  }, [curScript, handleOverlayVisible]);

  const items = [{
    key: 'super',
    ...supItem
  }, {
    key: 'sub',
    ...subItem
  }].map(({
    key,
    title,
    shortCut,
    description
  }) => ({
    key,
    content: /*#__PURE__*/_createElement(_Basics.Tooltip, {
      placement: "right",
      title: `${title}(${shortCut})`,
      description: description
    }, /*#__PURE__*/_createElement(_Basics.List.Item, {
      key: key,
      prefix: key === 'super' ? _ref3 : _ref4,
      suffix: curScript === key ? _ref5 : null,
      onClick: e => {
        onScriptChange(key);
        handleOverlayVisible(false);
      }
    }, title))
  }));
  const tooltip = curScript === 'sub' ? subItem : supItem;
  return /*#__PURE__*/_createElement(_Basics.SplitButton, (0, _extends2.default)({
    onClick: handleClick,
    overlayVisible: overlayVisible,
    onVisibleChange: handleOverlayVisible,
    icon: splitButtonIcon,
    disabled: disabled,
    overlay: /*#__PURE__*/_createElement(_Basics.List, {
      items: items
    }),
    autoClose: false,
    testid: testid,
    active: !!curScript,
    tooltip: tooltip
  }, rest));
};

exports.ScriptSplit = ScriptSplit;
//# sourceMappingURL=ScriptSplitButton.js.map