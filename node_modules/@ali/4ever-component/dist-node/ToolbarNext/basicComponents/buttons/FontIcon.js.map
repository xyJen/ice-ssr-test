{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/FontIcon.tsx"],"names":["GRADIENT_FLAG","isGradientColor","color","includes","transferGradientColor","split","FontColorIcon","props","GradientColorFontIcon","startColor","endColor"],"mappings":";;;;;;;;;AAAA;;AACA;;uBAA4B,a;AAE5B,MAAMA,aAAa,GAAG,IAAtB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAwC;AACtC;AACA,SAAOA,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeH,aAAf,CAAhB;AACD;;AAAA,C,CAED;;AACA,SAASI,qBAAT,CAA+BF,KAA/B,EAA8C;AAC5C,MAAI,CAACD,eAAe,CAACC,KAAD,CAApB,EAA6B;AAC3B,WAAO,EAAP;AACD;;AACD,SAAOA,KAAK,CAACG,KAAN,CAAYL,aAAZ,CAAP;AACD;;AAOD,MAAMM,aAAkC,GAAIC,KAAD,IAAW;AACpD,QAAM;AAAEL,IAAAA;AAAF,MAAYK,KAAlB;AAEA,SAAON,eAAe,CAACC,KAAD,CAAf,gBACL,eAAC,qBAAD;AAAuB,IAAA,KAAK,EAAEA;AAA9B,IADK,gBAGL,eAAC,oBAAD;AAAe,IAAA,QAAQ,EAAEA;AAAzB,IAHF;AAKD,CARD;;wBA0BM;AACE,EAAA,CAAC,EAAC,6IADJ;AAEE,EAAA,IAAI,EAAC;AAFP,E;;AAhBN,MAAMM,qBAA0C,GAAID,KAAD,IAAW;AAC5D,QAAM;AAAEL,IAAAA;AAAF,MAAYK,KAAlB;AACA,QAAM,CAACE,UAAD,EAAaC,QAAb,IAAyBN,qBAAqB,CAACF,KAAD,CAApD;AACA,sBACE;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,IAAI,EAAC,cAHP;AAIE,mBAAY,MAJd;AAKE,IAAA,SAAS,EAAC,OALZ;AAME,IAAA,OAAO,EAAC;AANV,kBAQE;AACE,IAAA,CAAC,EAAC,oBADJ;AAEE,IAAA,IAAI,EAAG,sBAAqBO,UAAW,IAAGC,QAAS;AAFrD,IARF,qBAgBE,0CACE;AACE,IAAA,EAAE,EAAG,iBAAgBD,UAAW,IAAGC,QAAS,EAD9C;AAEE,IAAA,EAAE,EAAC,GAFL;AAGE,IAAA,EAAE,EAAC,KAHL;AAIE,IAAA,EAAE,EAAC,IAJL;AAKE,IAAA,EAAE,EAAC,KALL;AAME,IAAA,aAAa,EAAC;AANhB,kBAQE;AAAM,IAAA,SAAS,EAAED;AAAjB,IARF,eASE;AAAM,IAAA,MAAM,EAAC,GAAb;AAAiB,IAAA,SAAS,EAAEC;AAA5B,IATF,CADF,CAhBF,CADF;AAgCD,CAnCD;;eAqCeJ,a","sourcesContent":["import React from 'react';\nimport { IconFontColor } from '../icons';\n\nconst GRADIENT_FLAG = '__';\n\nfunction isGradientColor(color: string) {\n  // 判断是否为渐变色，渐变色格式为 ‘#color1__#color2’\n  return color && color.includes(GRADIENT_FLAG);\n};\n\n// 将 #color1_#color2 转换为 [color1, color2]\nfunction transferGradientColor(color: string) {\n  if (!isGradientColor(color)) {\n    return [];\n  }\n  return color.split(GRADIENT_FLAG);\n}\n\n\ninterface IFontIcon {\n  color: string;\n}\n\nconst FontColorIcon: React.FC<IFontIcon> = (props) => {\n  const { color } = props;\n\n  return isGradientColor(color) ? (\n    <GradientColorFontIcon color={color} />\n  ) : (\n    <IconFontColor subColor={color}/>\n  );\n};\n\nconst GradientColorFontIcon: React.FC<IFontIcon> = (props) => {\n  const { color } = props;\n  const [startColor, endColor] = transferGradientColor(color);\n  return (\n    <svg\n      width=\"20px\"\n      height=\"20px\"\n      fill=\"currentColor\"\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      viewBox=\"0 0 20 20\"\n    >\n      <path\n        d=\"M19 20H1V17H19V20Z\"\n        fill={`url(#paint0_linear_${startColor}:${endColor})`}\n      ></path>\n      <path\n        d=\"M7.53848 11L5.93848 15H4.86145L9.53573 3.3143H10.4642L15.1385 15H14.0615L12.4615 11H7.53848ZM7.93848 10H12.0615L9.99997 4.84629L7.93848 10Z\"\n        fill=\"inherit\"\n      />\n      <defs>\n        <linearGradient\n          id={`paint0_linear_${startColor}:${endColor}`}\n          x1=\"4\"\n          y1=\"9.5\"\n          x2=\"16\"\n          y2=\"9.5\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor={startColor} />\n          <stop offset=\"1\" stopColor={endColor} />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default FontColorIcon;\n"],"file":"FontIcon.js"}