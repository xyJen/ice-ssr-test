{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/TableThemeButton.tsx"],"names":["TableThemeButton","props","tableBgColor","defaultTableBgColor","onTableBgColorChange","tableBorderColor","defaultTableBorderColor","onTableBorderColorChange","restProps","overlayVisible","setOverlayVisible","React","useState","handleReset"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;;wBAuChB,eAAC,kBAAD,O;;AArBL,MAAMA,gBAA6C,GAAIC,KAAD,IAAW;AACtE,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,mBAAmB,GAAG,EAFlB;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,uBAAuB,GAAG,EALtB;AAMJC,IAAAA,wBANI;AAOJ,OAAGC;AAPC,MAQFP,KARJ;;AASA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCC,eAAMC,QAAN,CAAe,KAAf,CAA5C;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBT,IAAAA,oBAAoB,CAACD,mBAAD,CAApB;AACAI,IAAAA,wBAAwB,CAACD,uBAAD,CAAxB;AACAI,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,WAAO,KAAP;AACD,GALD;;AAOA,sBACE,eAAC,gBAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,OAAO,eACL,eAAC,oBAAD;AACE,MAAA,eAAe,EAAER,YADnB;AAEE,MAAA,sBAAsB,EAAEE,oBAF1B;AAGE,MAAA,WAAW,EAAEC,gBAHf;AAIE,MAAA,kBAAkB,EAAEE,wBAJtB;AAKE,MAAA,iBAAiB,MALnB;AAME,MAAA,kBAAkB,EAAEM;AANtB,MAHJ;AAYE,IAAA,cAAc,EAAEJ,cAZlB;AAaE,IAAA,eAAe,EAAEC,iBAbnB;AAcE,IAAA,MAAM,EAAC;AAdT,KAeMF,SAfN,EADF;AAmBD,CAtCM","sourcesContent":["import React from 'react';\nimport { ColorPanel } from '@ali/we-design';\nimport { IconPalette } from '../icons';\nimport { IconMenu } from './Basics';\n\nexport interface ITableThemeButton extends\n  Pick<Partial<React.ComponentProps<typeof IconMenu>>, 'onVisibleChange' | 'title' | 'tooltip' | 'icon' | 'disabled' | 'testid' | 'role'> {\n  tableBorderColor: string;\n  defaultTableBorderColor?: string;\n  onTableBorderColorChange: (c: string) => void;\n  tableBgColor: string;\n  defaultTableBgColor?: string;\n  onTableBgColorChange: (c: string) => void;\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n}\n\nexport const TableThemeButton: React.FC<ITableThemeButton> = (props) => {\n  const {\n    tableBgColor,\n    defaultTableBgColor = '',\n    onTableBgColorChange,\n    tableBorderColor,\n    defaultTableBorderColor = '',\n    onTableBorderColorChange,\n    ...restProps\n  } = props;\n  const [overlayVisible, setOverlayVisible] = React.useState(false);\n\n  const handleReset = () => {\n    onTableBgColorChange(defaultTableBgColor);\n    onTableBorderColorChange(defaultTableBorderColor);\n    setOverlayVisible(false);\n    return false;\n  }\n\n  return (\n    <IconMenu\n      icon={<IconPalette />}\n      overlay={\n        <ColorPanel\n          backgroundColor={tableBgColor}\n          onBackgroundColorClick={onTableBgColorChange}\n          borderColor={tableBorderColor}\n          onBorderColorClick={onTableBorderColorChange}\n          enableResetButton\n          onResetButtonClick={handleReset}\n        />\n      }\n      overlayVisible={overlayVisible}\n      onVisibleChange={setOverlayVisible}\n      testid=\"bi-toolbar-table-theme\"\n      {...restProps}\n    />\n  );\n};\n\n"],"file":"TableThemeButton.js"}