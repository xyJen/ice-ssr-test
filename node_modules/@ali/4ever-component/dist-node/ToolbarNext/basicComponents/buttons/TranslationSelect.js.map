{"version":3,"sources":["../../../../../src/ToolbarNext/basicComponents/buttons/TranslationSelect.tsx"],"names":["TranslationSelect","props","onChange","testid","menuItems","restProps","overlayVisible","setOverlayVisible","React","useState","items","options","map","key","title","String","handleSelect","v"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;wBA+ChB,eAAC,oBAAD,O;;AAzBL,MAAMA,iBAAoD,GAAIC,KAAD,IAAW;AAC7E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,SAApB;AAA+B,OAAGC;AAAlC,MAAgDJ,KAAtD;;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCC,eAAMC,QAAN,CAAe,KAAf,CAA5C;;AAEA,QAAMC,KAAK,GAAG,oBAAQ,MAAM;AAC1B,UAAMC,OAAmD,GAAGP,SAAS,CAACQ,GAAV,CAC1D,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,MAAqB;AACnBD,MAAAA,GAAG,EAAEE,MAAM,CAACF,GAAD,CADQ;AAEnBC,MAAAA,KAAK,EAAEC,MAAM,CAACD,KAAD,CAFM;AAGnBX,MAAAA,MAAM,EAAG,UAASU,GAAI;AAHH,KAArB,CAD0D,CAA5D;AAOA,WAAOF,OAAP;AACD,GATa,EASX,CAACP,SAAD,CATW,CAAd;AAWA,QAAMY,YAAY,GAAG,wBACnB,CAAC,CAACC,CAAD,CAAD,KAAS;AACPf,IAAAA,QAAQ,IAAIA,QAAQ,CAACe,CAAD,CAApB;AACAV,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAJkB,EAKnB,CAACL,QAAD,CALmB,CAArB;AAQA,sBACE,eAAC,gBAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,OAAO,eACL,eAAC,YAAD;AACE,qBAAc,GAAEC,MAAO,UADzB;AAEE,MAAA,KAAK,EAAEO,KAFT;AAGE,MAAA,QAAQ,EAAEM;AAHZ,MAHJ;AASE,IAAA,cAAc,EAAEV,cATlB;AAUE,IAAA,eAAe,EAAEC,iBAVnB;AAWE,IAAA,MAAM,EAAEJ;AAXV,KAYME,SAZN,EADF;AAgBD,CAvCM","sourcesContent":["import { IconTranslate } from '../icons';\nimport React, { useCallback, useMemo } from 'react';\nimport { IconMenu, Menu } from './Basics';\n\nexport interface ITranslationSelectProps\n  extends Pick<\n  Partial<React.ComponentProps<typeof IconMenu>>,\n  | 'onVisibleChange'\n  | 'title'\n  | 'tooltip'\n  | 'icon'\n  | 'disabled'\n  | 'testid'\n  | 'role'\n  > {\n  onChange?: (lineHeight: string) => void;\n  disabled?: boolean;\n  menuItems: Array<{\n    key: string;\n    title: string;\n  }>;\n}\n\nexport const TranslationSelect: React.FC<ITranslationSelectProps> = (props) => {\n  const { onChange, testid, menuItems, ...restProps } = props;\n  const [overlayVisible, setOverlayVisible] = React.useState(false);\n\n  const items = useMemo(() => {\n    const options: React.ComponentProps<typeof Menu>['items'] = menuItems.map(\n      ({ key, title }) => ({\n        key: String(key),\n        title: String(title),\n        testid: `option-${key}`,\n      }),\n    );\n    return options;\n  }, [menuItems]);\n\n  const handleSelect = useCallback(\n    ([v]) => {\n      onChange && onChange(v);\n      setOverlayVisible(false);\n    },\n    [onChange],\n  );\n\n  return (\n    <IconMenu\n      icon={<IconTranslate />}\n      overlay={\n        <Menu\n          data-testid={`${testid}-options`}\n          items={items}\n          onSelect={handleSelect}\n        />\n      }\n      overlayVisible={overlayVisible}\n      onVisibleChange={setOverlayVisible}\n      testid={testid}\n      {...restProps}\n    />\n  );\n};\n"],"file":"TranslationSelect.js"}