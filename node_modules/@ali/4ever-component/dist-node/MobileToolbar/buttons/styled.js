"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageIcon = exports.Boxes = exports.Outers = exports.GroupTitle = exports.AlignIcon = exports.Divider = exports.NewLine = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constant = require("../constant");

/* eslint-disable @typescript-eslint/consistent-type-definitions */

/* eslint-disable no-confusing-arrow */
const NewLine = /*#__PURE__*/_styledComponents.default.div(["height:0;width:100%;"]);

exports.NewLine = NewLine;

const Divider = /*#__PURE__*/_styledComponents.default.div(["width:12px;"]);

exports.Divider = Divider;

const AlignIcon = /*#__PURE__*/_styledComponents.default.div(["flex:1;height:0;min-width:", "px;"], _constant.ICON_BUTOTN_WIDTH);

exports.AlignIcon = AlignIcon;

const GroupTitle = /*#__PURE__*/_styledComponents.default.div(["width:100%;margin-bottom:8px;line-height:18px;font-size:12px;color:rgba(23,26,29,0.4);"]);

exports.GroupTitle = GroupTitle;

// 底部一级大按钮
const BoxBig = /*#__PURE__*/_styledComponents.default.div(["width:32px;height:32px;border-radius:4px;display:flex;align-items:center;position:relative;justify-content:center;opacity:", ";& > span{font-size:24px;}& path{transition:fill 0.2s;}&::after{content:'';position:absolute;left:4px;bottom:-3px;width:24px;height:3px;background:transparent;transition:background 0.2s;border-radius:1.5px;}", ""], props => props.isDisabled ? '0.24' : '1', props => props.isActive && !props.isFocused ? `
  & path {
    fill: #0089FF !important;
  }
  &::after {
    content: '';
    position: absolute;
    left: 4px;
    bottom: -3px;
    width: 24px;
    height: 3px;
    background: #0089FF;
    transition: background 0.2s;
    border-radius: 1.5px;
  }
  ` : ''); // Panel 的上下图标结构。


const BoxIcon = /*#__PURE__*/_styledComponents.default.div(["display:flex;flex-direction:column;justify-content:center;align-items:center;width:", "px;opacity:", ";& > div:first-of-type{width:44px;height:44px;display:flex;justify-content:center;background:rgba(126,134,142,0.12);align-items:center;border-radius:6px;& > span{font-size:24px;}}& > div:last-of-type{line-height:20px;margin-top:4px;color:#171a1d;font-size:14px;}"], _constant.ICON_BUTOTN_WIDTH, props => props.isDisabled ? '0.5' : '1');

const BoxLine = /*#__PURE__*/_styledComponents.default.div(["height:100%;display:flex;flex-direction:row;justify-content:flex-start;align-items:center;font-size:17px;color:#171a1d;position:relative;&::after{content:'';position:absolute;right:0;bottom:0;width:calc(100% - 40px);height:1px;background:rgba(126,134,142,0.16);}& >:first-child{width:24px;height:24px;font-size:0;display:flex;justify-content:center;align-items:center;margin-right:16px;& > span{font-size:24px;}}"]); // Panel 的按钮。加粗、斜体之类


const BoxHoriz = /*#__PURE__*/_styledComponents.default.div(["width:100%;height:100%;transition:background 0.2s;border-radius:", ";display:flex;flex-direction:row;justify-content:center;align-items:center;background:", ";opacity:", ";& > span{font-size:20px;}"], props => {
  if (props.isStart && props.isEnd) {
    return '4px';
  }

  if (props.isStart) {
    return '4px 0 0 4px';
  }

  if (props.isEnd) {
    return '0 4px 4px 0';
  }

  return '0';
}, props => props.isActive ? 'rgba(0, 137, 255, 0.12)' : 'rgba(126, 134, 142, 0.12)', props => props.isDisabled ? '0.5' : '1');

const OuterBig = /*#__PURE__*/_styledComponents.default.div(["cursor:pointer;height:", "px;width:", "px;min-width:", "px;display:flex;align-items:center;justify-content:center;", ""], _constant.BOTTOM_BAR_SIZE, _constant.BOTTOM_BAR_SIZE, _constant.BOTTOM_BAR_SIZE, props => props.isTouched || props.isFocused ? `
  & ${BoxBig} {
   background: rgba(126, 134, 142, 0.16);
  }
  ` : '');

const OuterIcon = /*#__PURE__*/_styledComponents.default.div(["flex:", ";cursor:pointer;margin-right:1px;margin-bottom:12px;display:flex;align-items:center;justify-content:center;", ""], props => props.flexWidth, props => props.isTouched ? `
  & ${BoxHoriz} {
   background: rgba(126, 134, 142, 0.24);
  }
  & ${BoxIcon} > div:first-of-type {
    background: rgba(126, 134, 142, 0.24);
  }
  ` : '');

const OuterLine = /*#__PURE__*/_styledComponents.default.div(["cursor:pointer;width:100%;height:56px;padding-left:16px;transition:background 0.2s;", ""], props => props.isTouched ? `
    background: rgba(126, 134, 142, 0.12);
` : '');

const OuterHoriz = /*#__PURE__*/(0, _styledComponents.default)(OuterIcon)(["height:44px;"]);
const Outers = {
  big: OuterBig,
  horiz: OuterHoriz,
  line: OuterLine,
  icon: OuterIcon
};
exports.Outers = Outers;
const Boxes = {
  big: BoxBig,
  horiz: BoxHoriz,
  line: BoxLine,
  icon: BoxIcon
};
exports.Boxes = Boxes;

const ImageIcon = /*#__PURE__*/_styledComponents.default.img(["width:24px;height:24px;"]);

exports.ImageIcon = ImageIcon;
//# sourceMappingURL=styled.js.map