{"version":3,"sources":["../../../src/MobileToolbar/constant.ts"],"names":["BOTTOM_BAR_SIZE","BOTOTM_PANEL_HEIGHT","Z_INDEX","PANEL_HEADER_SIZE","ICON_BUTOTN_WIDTH","DIVIDER_NONE","NEW_LINE","DIVIDER","DIVIDER_VERT","ALIGN_PLACEHOLDER","THREED_TRAMSFORM","SUBLINE_MIN_LEFT","SUBLINE_MARGIN_BOTTOM","itemToKey","item","name","String","replace","toLowerCase"],"mappings":";;;;;;AAEO,MAAMA,eAAe,GAAG,EAAxB;;AACA,MAAMC,mBAAmB,GAAG,GAA5B;;AAEA,MAAMC,OAAO,GAAG,IAAhB;;AAEA,MAAMC,iBAAiB,GAAG,EAA1B,C,CAEP;;;AACO,MAAMC,iBAAiB,GAAG,EAA1B,C,CAEP;;;AACO,MAAMC,YAAY,GAAG,6BAArB,C,CAEP;;;AACO,MAAMC,QAAQ,GAAG,uBAAjB,C,CAEP;;;AACO,MAAMC,OAAO,GAAG,uBAAhB,C,CAEP;;;AACO,MAAMC,YAAY,GAAG,4BAArB,C,CAEP;;;AACO,MAAMC,iBAAiB,GAAG,yBAA1B;;AAEA,MAAMC,gBAAgB,GAAG,sBAAzB,C,CAEP;;;AACO,MAAMC,gBAAgB,GAAG,EAAzB,C,CACP;;;AACO,MAAMC,qBAAqB,GAAG,CAA9B,C,CAEP;;;;AACO,MAAMC,SAAS,GAAIC,IAAD,IAA6B;AACpD,QAAMC,IAAI,GAAG,OAAOD,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAACC,IAAhC,GAAuCD,IAApD;AACA,SAAOE,MAAM,CAACD,IAAD,CAAN,CAAaE,OAAb,CAAqB,SAArB,EAAgC,GAAhC,EAAqCC,WAArC,EAAP;AACD,CAHM;;;eAKQ;AACbX,EAAAA,OADa;AAEbF,EAAAA,YAFa;AAGbG,EAAAA,YAHa;AAIbF,EAAAA;AAJa,C","sourcesContent":["import { MobileToolbarItem } from './types';\n\nexport const BOTTOM_BAR_SIZE = 44;\nexport const BOTOTM_PANEL_HEIGHT = 400;\n\nexport const Z_INDEX = 1900;\n\nexport const PANEL_HEADER_SIZE = 56;\n\n// icon 类的 button 宽度\nexport const ICON_BUTOTN_WIDTH = 68;\n\n// 无渲染内容的分割，用户区别两个连续的按钮，做 round border 的效果\nexport const DIVIDER_NONE = 'mobileToolbar_tinySeperator';\n\n// 新行\nexport const NEW_LINE = 'mobileToolbar_newLine';\n\n// 小分割（约 12px）\nexport const DIVIDER = 'mobileToolbar_divider';\n\n// 小分割（竖向）\nexport const DIVIDER_VERT = 'mobileToolbar_divider_vert';\n\n// 空白的 icon，用于最后一行的左对齐\nexport const ALIGN_PLACEHOLDER = 'mobileToolbar_emptyIcon';\n\nexport const THREED_TRAMSFORM = 'translate3d(0, 0, 0)';\n\n// 浮出二级菜单的最小左侧距离\nexport const SUBLINE_MIN_LEFT = 24;\n// 浮出二级菜单和底部的 margin\nexport const SUBLINE_MARGIN_BOTTOM = 8;\n\n// name -> itemKey。移除 [. 空格 -]，转小写\nexport const itemToKey = (item: MobileToolbarItem) => {\n  const name = typeof item === 'object' ? item.name : item;\n  return String(name).replace(/ |\\.|-/g, '_').toLowerCase();\n};\n\nexport default {\n  DIVIDER,\n  DIVIDER_NONE,\n  DIVIDER_VERT,\n  NEW_LINE,\n};\n"],"file":"constant.js"}