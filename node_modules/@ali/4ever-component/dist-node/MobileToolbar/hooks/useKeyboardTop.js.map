{"version":3,"sources":["../../../../src/MobileToolbar/hooks/useKeyboardTop.ts"],"names":["MAX_HEIGHT","IPAD_KEYBOARD_DELAY","IOS_KEYBOARD_DELAY","PANEL_MIN_HEIGHT","INPUT_ELEMENTS","HTMLInputElement","HTMLTextAreaElement","useKeyboardTop","isPanelShowing","panelOpsRef","wrapperRef","initFocus","initFullHeight","initSqHeight","React","useMemo","activeElement","window","document","innerHeight","Math","round","isFocused","some","E","fullHeight","sqHeight","setFullHeight","useState","squeezedHeight","setSqueezedHeight","useEffect","timer","focusedNow","width","innerWidth","delayUpdator","time","clearTimeout","setTimeout","ele","current","safeAreaTop","parseInt","getComputedStyle","getPropertyValue","item","closePanel","focusUpdator","resizeUpdator","handleFocus","handleBlur","addEventListener","capture","removeEventListener","actualHeight","min","top","BOTTOM_BAR_SIZE"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;AACA,MAAMA,UAAU,GAAG,KAAnB,C,CACA;;AACA,MAAMC,mBAAmB,GAAG,GAA5B,C,CACA;;AACA,MAAMC,kBAAkB,GAAG,GAA3B,C,CACA;;AACA,MAAMC,gBAAgB,GAAG,GAAzB;AAEA,MAAMC,cAAc,GAAG,CAACC,gBAAD,EAAmBC,mBAAnB,CAAvB;;AAEe,SAASC,cAAT,CACbC,cADa,EAEbC,WAFa,EAMbC,UANa,EAOb;AACA,QAAM,CAACC,SAAD,EAAYC,cAAZ,EAA4BC,YAA5B,IAA4CC,eAAMC,OAAN,CAAc,MAAM;AACpE,UAAM;AAAEC,MAAAA;AAAF,QAAoBC,MAAM,CAACC,QAAjC;AACA,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACE,WAAlB,CAApB;AACA,UAAMG,SAAS,GAAGlB,cAAc,CAACmB,IAAf,CAAqBC,CAAD,IAAOR,aAAa,YAAYQ,CAApD,CAAlB;AACA,UAAMC,UAAU,GAAGH,SAAS,GAAGtB,UAAH,GAAgBmB,WAA5C;AACA,UAAMO,QAAQ,GAAGJ,SAAS,GAAGH,WAAH,GAAiBnB,UAA3C;AACA,WAAO,CAACsB,SAAD,EAAYG,UAAZ,EAAwBC,QAAxB,CAAP;AACD,GAPiD,EAO/C,EAP+C,CAAlD;;AAQA,QAAM,CAACD,UAAD,EAAaE,aAAb,IAA8Bb,eAAMc,QAAN,CAAehB,cAAf,CAApC;;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsChB,eAAMc,QAAN,CAAef,YAAf,CAA5C;;AAEAC,iBAAMiB,SAAN,CAAgB,MAAM;AACpB,QAAIC,KAA2C,GAAG,IAAlD;AACA,UAAM;AAAEhB,MAAAA;AAAF,QAAoBC,MAAM,CAACC,QAAjC;AACA,QAAIe,UAAU,GAAG7B,cAAc,CAACmB,IAAf,CAAqBC,CAAD,IAAOR,aAAa,YAAYQ,CAApD,CAAjB;AACA,QAAIU,KAAK,GAAGd,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACkB,UAAlB,CAAZ;;AACA,UAAMC,YAAY,GAChB,CAACC,IAAI,GAAG,CAAR,KACA,MAAM;AACJL,MAAAA,KAAK,IAAIM,YAAY,CAACN,KAAD,CAArB;AACAA,MAAAA,KAAK,GAAGO,UAAU,CAAC,MAAM;AACvB,cAAMpB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACE,WAAlB,CAApB;AACA,cAAMgB,UAAU,GAAGf,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACkB,UAAlB,CAAnB;;AACA,YAAIF,UAAJ,EAAgB;AACd,gBAAMO,GAAG,GAAG9B,UAAU,CAAC+B,OAAvB;AACA,gBAAMC,WAAW,GAAGF,GAAG,GACnBG,QAAQ,CACN1B,MAAM,CAAC2B,gBAAP,CAAwBJ,GAAxB,EAA6BK,gBAA7B,CAA8C,OAA9C,CADM,EAEN,EAFM,CAAR,IAGK,CAJc,GAKnB,CALJ;AAMAf,UAAAA,iBAAiB,CAACX,WAAW,GAAGuB,WAAf,CAAjB;AACD,SATD,MASO;AACLf,UAAAA,aAAa,CAACR,WAAD,CAAb;AACD;;AACD,YAAIgB,UAAU,KAAKD,KAAf,IAAwBzB,WAAW,CAACgC,OAAxC,EAAiD;AAC/CP,UAAAA,KAAK,GAAGC,UAAR;AACA1B,UAAAA,WAAW,CAACgC,OAAZ,CAAoBK,IAApB,IAA4BrC,WAAW,CAACgC,OAAZ,CAAoBM,UAApB,EAA5B;AACD;AACF,OAnBiB,EAmBfV,IAnBe,CAAlB;AAoBD,KAxBH;AA0BA;AACJ;AACA;AACA;AACA;AACA;;;AACI,UAAMW,YAAY,GAAGZ,YAAY,CAACnC,mBAAD,CAAjC;AACA,UAAMgD,aAAa,GAAGb,YAAY,CAAClC,kBAAD,CAAlC;;AAEA,QAAI+B,UAAU,KAAKtB,SAAnB,EAA8B;AAC5BsC,MAAAA,aAAa;AACd;;AAED,UAAMC,WAAW,GAAG,MAAM;AACxBjB,MAAAA,UAAU,GAAG,IAAb;AACAe,MAAAA,YAAY;AACb,KAHD;;AAIA,UAAMG,UAAU,GAAG,MAAM;AACvBlB,MAAAA,UAAU,GAAG,KAAb;AACAe,MAAAA,YAAY;AACb,KAHD;;AAIA/B,IAAAA,MAAM,CAACmC,gBAAP,CAAwB,OAAxB,EAAiCF,WAAjC,EAA8C;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAA9C;AACApC,IAAAA,MAAM,CAACmC,gBAAP,CAAwB,MAAxB,EAAgCD,UAAhC,EAA4C;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAA5C;AACApC,IAAAA,MAAM,CAACmC,gBAAP,CAAwB,QAAxB,EAAkCH,aAAlC,EAAiD;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAAjD;AACA,WAAO,MAAM;AACXrB,MAAAA,KAAK,IAAIM,YAAY,CAACN,KAAD,CAArB;AACAf,MAAAA,MAAM,CAACqC,mBAAP,CAA2B,OAA3B,EAAoCJ,WAApC,EAAiD;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAAjD;AACApC,MAAAA,MAAM,CAACqC,mBAAP,CAA2B,MAA3B,EAAmCH,UAAnC,EAA+C;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAA/C;AACApC,MAAAA,MAAM,CAACqC,mBAAP,CAA2B,QAA3B,EAAqCL,aAArC,EAAoD;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAApD;AACD,KALD;AAMD,GA7DD,EA6DG,CAAC1C,SAAD,EAAYF,WAAZ,EAAyBC,UAAzB,CA7DH,EAZA,CA2EA;;;AACA,QAAM6C,YAAY,GAAG/C,cAAc,GAC/BY,IAAI,CAACoC,GAAL,CAAS3B,cAAT,EAAyBJ,UAAU,GAAGtB,gBAAtC,CAD+B,GAE/B0B,cAFJ;AAIA,QAAM4B,GAAG,GAAGF,YAAY,GAAGG,yBAA3B;AACA,SAAOD,GAAP;AACD","sourcesContent":["import React from 'react';\nimport { BOTTOM_BAR_SIZE } from '../constant';\n\n// 未知高度时，找个很大值来表示\nconst MAX_HEIGHT = 10000;\n// iPad 接 keyboard 时，focus 后隔很久（约 600ms）才会发 resize 事件，这里取 700 避免闪烁\nconst IPAD_KEYBOARD_DELAY = 700;\n// iOS keyboard 事件。在 IM 场景里，实时汇报的 window.innerHeight 不正确，因此 delay 一下\nconst IOS_KEYBOARD_DELAY = 300;\n// 底部面板的最小高度\nconst PANEL_MIN_HEIGHT = 220;\n\nconst INPUT_ELEMENTS = [HTMLInputElement, HTMLTextAreaElement];\n\nexport default function useKeyboardTop(\n  isPanelShowing: boolean,\n  panelOpsRef: React.RefObject<{\n    item?: any;\n    closePanel: Function;\n  }>,\n  wrapperRef: React.RefObject<HTMLDivElement | null>,\n) {\n  const [initFocus, initFullHeight, initSqHeight] = React.useMemo(() => {\n    const { activeElement } = window.document;\n    const innerHeight = Math.round(window.innerHeight);\n    const isFocused = INPUT_ELEMENTS.some((E) => activeElement instanceof E);\n    const fullHeight = isFocused ? MAX_HEIGHT : innerHeight;\n    const sqHeight = isFocused ? innerHeight : MAX_HEIGHT;\n    return [isFocused, fullHeight, sqHeight];\n  }, []);\n  const [fullHeight, setFullHeight] = React.useState(initFullHeight);\n  const [squeezedHeight, setSqueezedHeight] = React.useState(initSqHeight);\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    const { activeElement } = window.document;\n    let focusedNow = INPUT_ELEMENTS.some((E) => activeElement instanceof E);\n    let width = Math.round(window.innerWidth);\n    const delayUpdator =\n      (time = 0) =>\n      () => {\n        timer && clearTimeout(timer);\n        timer = setTimeout(() => {\n          const innerHeight = Math.round(window.innerHeight);\n          const innerWidth = Math.round(window.innerWidth);\n          if (focusedNow) {\n            const ele = wrapperRef.current;\n            const safeAreaTop = ele\n              ? parseInt(\n                  window.getComputedStyle(ele).getPropertyValue('--sab'),\n                  10,\n                ) || 0\n              : 0;\n            setSqueezedHeight(innerHeight - safeAreaTop);\n          } else {\n            setFullHeight(innerHeight);\n          }\n          if (innerWidth !== width && panelOpsRef.current) {\n            width = innerWidth;\n            panelOpsRef.current.item && panelOpsRef.current.closePanel();\n          }\n        }, time);\n      };\n\n    /**\n     * 默认只需要 resize 时 setHeight，focus 时取消 timer 就好\n     * 但是这个依赖浏览器的时机，需要 focus 先触发、resize 后触发。\n     *\n     * 为了避免兼容问题，在 focus 时也加了 setHeight 来兜底\n     */\n    const focusUpdator = delayUpdator(IPAD_KEYBOARD_DELAY);\n    const resizeUpdator = delayUpdator(IOS_KEYBOARD_DELAY);\n\n    if (focusedNow !== initFocus) {\n      resizeUpdator();\n    }\n\n    const handleFocus = () => {\n      focusedNow = true;\n      focusUpdator();\n    };\n    const handleBlur = () => {\n      focusedNow = false;\n      focusUpdator();\n    };\n    window.addEventListener('focus', handleFocus, { capture: true });\n    window.addEventListener('blur', handleBlur, { capture: true });\n    window.addEventListener('resize', resizeUpdator, { capture: true });\n    return () => {\n      timer && clearTimeout(timer);\n      window.removeEventListener('focus', handleFocus, { capture: true });\n      window.removeEventListener('blur', handleBlur, { capture: true });\n      window.removeEventListener('resize', resizeUpdator, { capture: true });\n    };\n  }, [initFocus, panelOpsRef, wrapperRef]);\n\n  // iPad 外接键盘场景，toolbar 在最底部。这里保障有一个最小高度\n  const actualHeight = isPanelShowing\n    ? Math.min(squeezedHeight, fullHeight - PANEL_MIN_HEIGHT)\n    : squeezedHeight;\n\n  const top = actualHeight - BOTTOM_BAR_SIZE;\n  return top;\n}\n"],"file":"useKeyboardTop.js"}