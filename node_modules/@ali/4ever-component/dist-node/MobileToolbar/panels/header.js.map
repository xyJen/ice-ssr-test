{"version":3,"sources":["../../../../src/MobileToolbar/panels/header.tsx"],"names":["Header","onDragOffsetChange","onDragStatusChange","title","Title","Icon","ref","React","useRef","dragOffset","isDragging","handleTouchStart","useCallback","event","current","clientY","touchY","touches","handleTouchMove","handleTouchEnd","useEffect","domNode","undefined","addEventListener","passive","removeEventListener"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { blockEvent } from '../utils';\nimport { HeaderWrapper, IconWrapper, HeaderText } from './styled';\n\ninterface HeaderProps {\n  title: string | React.ComponentType;\n  onDragOffsetChange: (yOffset: number) => void;\n  onDragStatusChange: (isDragging: boolean) => void;\n  Icon?: React.ComponentType;\n}\n\nexport default function Header({\n  onDragOffsetChange,\n  onDragStatusChange,\n  title: Title,\n  Icon,\n}: HeaderProps) {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const dragOffset = React.useRef(0);\n  const isDragging = React.useRef(false);\n  const handleTouchStart = React.useCallback((event: TouchEvent) => {\n    blockEvent(event);\n    isDragging.current = true;\n    onDragStatusChange(true);\n    const { clientY: touchY } = event.touches[0];\n    dragOffset.current = touchY;\n  }, []);\n  const handleTouchMove = React.useCallback((event: TouchEvent) => {\n    blockEvent(event);\n    if (!isDragging.current) {\n      return;\n    }\n    const { clientY: touchY } = event.touches[0];\n    onDragOffsetChange(touchY - dragOffset.current!);\n  }, []);\n  const handleTouchEnd = React.useCallback((event: TouchEvent) => {\n    blockEvent(event);\n    isDragging.current = false;\n    onDragStatusChange(false);\n  }, []);\n  React.useEffect(() => {\n    const domNode = ref.current;\n    if (!domNode) {\n      return undefined;\n    }\n\n    domNode.addEventListener('touchstart', handleTouchStart, {\n      passive: false,\n    });\n    domNode.addEventListener('touchmove', handleTouchMove, { passive: false });\n    domNode.addEventListener('touchend', handleTouchEnd, { passive: false });\n    domNode.addEventListener('touchcancel', handleTouchEnd, { passive: false });\n\n    return () => {\n      domNode.removeEventListener('touchstart', handleTouchStart);\n      domNode.removeEventListener('touchmove', handleTouchMove);\n      domNode.removeEventListener('touchend', handleTouchEnd);\n      domNode.removeEventListener('touchcancel', handleTouchEnd);\n    };\n  }, [handleTouchStart, handleTouchMove, handleTouchEnd]);\n  return (\n    <HeaderWrapper data-panel-header ref={ref}>\n      {typeof Title === 'string' ? (\n        <React.Fragment>\n          {!!Icon && (\n            <IconWrapper>\n              <Icon />\n            </IconWrapper>\n          )}\n          <HeaderText hasIcon={!!Icon}>{Title}</HeaderText>\n        </React.Fragment>\n      ) : (\n        <Title />\n      )}\n    </HeaderWrapper>\n  );\n}\n"],"file":"header.js"}