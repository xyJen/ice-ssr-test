{"version":3,"sources":["../../../../src/MobileToolbar/components/subline.tsx"],"names":["SubLine","item","subLine","plugins","controller","children","ref","React","useRef","left","setLeft","useState","name","useEffect","current","wrapper","line","closest","HTMLElement","itemKey","target","querySelector","sourceLeft","right","sourceRight","getBoundingClientRect","sourceCenter","width","selfWidth","offsetLeft","Math","max","SUBLINE_MIN_LEFT","map"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;uBAJ4B,a;;AAY5B,SAASA,OAAT,CAAiB;AAAEC,EAAAA,IAAI,EAAEC,OAAR;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAjB,EAA2E;AACzE,QAAMC,QAAQ,GAAI,OAAOH,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAACG,QAAxC,IAAqD,EAAtE;AACA,QAAMC,GAAG,GAAGC,KAAK,CAACC,MAAN,CAAoC,IAApC,CAAZ;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,CAAf,CAAxB;AACA,QAAMC,IAAI,GAAG,OAAOV,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwCA,OAAO,CAACU,IAA7D;AACAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAM;AAAEC,MAAAA,OAAO,EAAEC;AAAX,QAAuBT,GAA7B;AACA,UAAMU,IAAI,GAAGD,OAAO,EAAEE,OAAT,CAAiB,qBAAjB,CAAb;;AACA,QAAI,CAACF,OAAD,IAAY,CAACC,IAAb,IAAqB,EAAEA,IAAI,YAAYE,WAAlB,CAAzB,EAAyD;AACvD;AACD;;AACD,UAAMC,OAAO,GAAG,yBAAUP,IAAV,CAAhB;AACA,UAAMQ,MAAM,GAAGJ,IAAI,EAAEK,aAAN,CAAqB,qBAAoBF,OAAQ,GAAjD,CAAf;AACA,UAAM;AAAEV,MAAAA,IAAI,EAAEa,UAAU,GAAG,CAArB;AAAwBC,MAAAA,KAAK,EAAEC,WAAW,GAAG;AAA7C,QACJJ,MAAM,EAAEK,qBAAR,MAAmC,EADrC;AAEA,UAAMC,YAAY,GAAG,CAACJ,UAAU,GAAGE,WAAd,IAA6B,CAAlD;AACA,UAAM;AAAEG,MAAAA,KAAK,EAAEC;AAAT,QAAuBb,OAAO,CAACU,qBAAR,EAA7B;AACA,UAAMI,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASL,YAAY,GAAGE,SAAS,GAAG,CAApC,EAAuCI,0BAAvC,CAAnB;AACAtB,IAAAA,OAAO,CAACmB,UAAD,CAAP;AACD,GAdD,EAcG,CAACjB,IAAD,CAdH;AAeA,sBACE,eAAC,sBAAD;AAAgB,IAAA,GAAG,EAAEN,GAArB;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF;AAAjC,KACGJ,QAAQ,CAAC4B,GAAT,CAAchC,IAAD,iBACZ,eAAC,cAAD;AACE,IAAA,GAAG,EAAE,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACW,IAD9C;AAEE,IAAA,IAAI,EAAEX,IAFR;AAGE,IAAA,UAAU,EAAEG,UAHd;AAIE,IAAA,OAAO,EAAED;AAJX,IADD,CADH,CADF;AAYD;;eAEcH,O","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { MobileToolbarItem, Plugins } from '../types';\nimport { itemToKey, SUBLINE_MIN_LEFT } from '../constant';\nimport ItemView from '../buttons/index';\nimport { SubLineWrapper } from './styled';\n\ninterface SubLineViewProps {\n  item: MobileToolbarItem;\n  controller: Controller;\n  plugins: Plugins;\n}\n\nfunction SubLine({ item: subLine, plugins, controller }: SubLineViewProps) {\n  const children = (typeof subLine !== 'string' && subLine.children) || [];\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [left, setLeft] = React.useState(0);\n  const name = typeof subLine === 'string' ? subLine : subLine.name;\n  React.useEffect(() => {\n    const { current: wrapper } = ref;\n    const line = wrapper?.closest('[data-toolbar-line]');\n    if (!wrapper || !line || !(line instanceof HTMLElement)) {\n      return;\n    }\n    const itemKey = itemToKey(name);\n    const target = line?.querySelector(`[data-toolbar-key=${itemKey}]`);\n    const { left: sourceLeft = 0, right: sourceRight = 0 } =\n      target?.getBoundingClientRect() || {};\n    const sourceCenter = (sourceLeft + sourceRight) / 2;\n    const { width: selfWidth } = wrapper.getBoundingClientRect();\n    const offsetLeft = Math.max(sourceCenter - selfWidth / 2, SUBLINE_MIN_LEFT);\n    setLeft(offsetLeft);\n  }, [name]);\n  return (\n    <SubLineWrapper ref={ref} style={{ left }}>\n      {children.map((item) => (\n        <ItemView\n          key={typeof item === 'string' ? item : item.name}\n          item={item}\n          controller={controller}\n          plugins={plugins}\n        />\n      ))}\n    </SubLineWrapper>\n  );\n}\n\nexport default SubLine;\n"],"file":"subline.js"}