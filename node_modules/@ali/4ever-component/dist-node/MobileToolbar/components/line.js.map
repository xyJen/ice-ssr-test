{"version":3,"sources":["../../../../src/MobileToolbar/components/line.tsx"],"names":["Line","layout","allLayout","plugins","controller","item","subLine","flexLayout","React","useMemo","filter","g","fixedOnRight","fixedGroup","find","subLineKey","name","map","group","gindex","key","items","index","String"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;AAOA;;uBAZ4B,a;;wBAsCC,eAAC,eAAD,O;;yBAsBnB,eAAC,sBAAD,O;;AAxCV,SAASA,IAAT,CAAc;AAAEC,EAAAA,MAAM,EAAEC,SAAV;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA;AAA9B,CAAd,EAAyE;AACvE,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAoB,wBAA1B;AACA,QAAML,MAAM,GAAG,8BAAgBC,SAAhB,CAAf;AACA,QAAMK,UAAU,GAAGC,KAAK,CAACC,OAAN,CACjB,MAAMR,MAAM,CAACS,MAAP,CAAeC,CAAD,IAAO,CAACA,CAAC,CAACC,YAAxB,CADW,EAEjB,CAACX,MAAD,CAFiB,CAAnB;AAIA,QAAMY,UAAU,GAAGL,KAAK,CAACC,OAAN,CACjB,MAAMR,MAAM,CAACa,IAAP,CAAaH,CAAD,IAAOA,CAAC,CAACC,YAArB,CADW,EAEjB,CAACX,MAAD,CAFiB,CAAnB;AAIA,QAAMc,UAAU,GAAG,OAAOT,OAAP,KAAmB,QAAnB,GAA8BA,OAAO,CAACU,IAAtC,GAA6CV,OAAhE;AAEA,sBACE,eAAC,mBAAD;AAAa;AAAb,kBACE,eAAC,yBAAD,QACGC,UAAU,CAACU,GAAX,CAAe,CAACC,KAAD,EAAQC,MAAR,kBACd,eAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAED,KAAK,CAACE;AAA3B,KACGD,MAAM,KAAK,CAAX,QADH,EAEGD,KAAK,CAACG,KAAN,CAAYJ,GAAZ,CAAgB,CAACZ,IAAD,EAAOiB,KAAP,kBACf,eAAC,cAAD;AACE,IAAA,GAAG,EAAG,GAAE,OAAOjB,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACW,IAAK,IAAGM,KAAM,EAD/D;AAEE,IAAA,IAAI,EAAEjB,IAFR;AAGE,IAAA,UAAU,EAAED,UAHd;AAIE,IAAA,OAAO,EAAED;AAJX,IADD,CAFH,CADD,CADH,CADF,EAgBGG,OAAO,iBACN,eAAC,gBAAD;AACE,IAAA,GAAG,EAAEiB,MAAM,CAACR,UAAD,CADb;AAEE,IAAA,IAAI,EAAET,OAFR;AAGE,IAAA,OAAO,EAAEH,OAHX;AAIE,IAAA,UAAU,EAAEC;AAJd,IAjBJ,EAwBG,CAAC,CAACS,UAAF,iBACC,eAAC,uBAAD,eAEGA,UAAU,CAACQ,KAAX,CAAiBJ,GAAjB,CAAsBZ,IAAD,iBACpB,eAAC,cAAD;AACE,IAAA,GAAG,EAAE,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACW,IAD9C;AAEE,IAAA,IAAI,EAAEX,IAFR;AAGE,IAAA,UAAU,EAAED,UAHd;AAIE,IAAA,OAAO,EAAED;AAJX,IADD,CAFH,CAzBJ,CADF;AAwCD;;eAEcH,I","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { MobileToolbarGroup, Plugins } from '../types';\nimport { useSubline } from '../hooks';\nimport ItemView from '../buttons/index';\nimport SubLine from './subline';\nimport {\n  LineWrapper,\n  ScrollableWrapper,\n  Divider,\n  KeyboardShadow,\n  KeyboardWrapper,\n} from './styled';\nimport useLayoutFilter from '../hooks/useLayoutFilter';\n\ninterface LineViewProps {\n  layout: MobileToolbarGroup[];\n  controller: Controller;\n  plugins: Plugins;\n}\n\nfunction Line({ layout: allLayout, plugins, controller }: LineViewProps) {\n  const { item: subLine } = useSubline();\n  const layout = useLayoutFilter(allLayout);\n  const flexLayout = React.useMemo(\n    () => layout.filter((g) => !g.fixedOnRight),\n    [layout],\n  );\n  const fixedGroup = React.useMemo(\n    () => layout.find((g) => g.fixedOnRight),\n    [layout],\n  );\n  const subLineKey = typeof subLine === 'object' ? subLine.name : subLine;\n\n  return (\n    <LineWrapper data-toolbar-line>\n      <ScrollableWrapper>\n        {flexLayout.map((group, gindex) => (\n          <React.Fragment key={group.key}>\n            {gindex !== 0 && <Divider />}\n            {group.items.map((item, index) => (\n              <ItemView\n                key={`${typeof item === 'string' ? item : item.name}_${index}`}\n                item={item}\n                controller={controller}\n                plugins={plugins}\n              />\n            ))}\n          </React.Fragment>\n        ))}\n      </ScrollableWrapper>\n      {subLine && (\n        <SubLine\n          key={String(subLineKey)}\n          item={subLine}\n          plugins={plugins}\n          controller={controller}\n        />\n      )}\n      {!!fixedGroup && (\n        <KeyboardWrapper>\n          <KeyboardShadow />\n          {fixedGroup.items.map((item) => (\n            <ItemView\n              key={typeof item === 'string' ? item : item.name}\n              item={item}\n              controller={controller}\n              plugins={plugins}\n            />\n          ))}\n        </KeyboardWrapper>\n      )}\n    </LineWrapper>\n  );\n}\n\nexport default Line;\n"],"file":"line.js"}