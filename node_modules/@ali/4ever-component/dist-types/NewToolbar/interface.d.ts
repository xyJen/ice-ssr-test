import { Controller } from '@ali/4ever-cangjie';
import { ModeType } from '@ali/we-toolbar';
export declare enum ButtonSize {
    small = "small",
    medium = "medium",
    large = "large"
}
export declare enum ToolbarMode {
    double = "doubleLine",
    single = "singleLine"
}
export declare type LayoutType = 'column' | 'row';
export interface ToolButtonProps {
    /**
     * 组件唯一标识，按照 pluginName[.buttonName] 命名
     */
    name: string;
    /**
     * 限定在特定插件选中时出现
     */
    showTargets?: string[];
    /**
     * 限定在特定插件选中时消失，优先级高于 showTargets
     */
    hideTargets?: string[];
    /**
     * 特殊限定条件，暂时仅在 inlineToolbar
     */
    hideConditions?: string[];
    /**
     * 限定在特定插件选中时置灰
     */
    disableTargets?: string[];
    /**
     * 尺寸
     */
    size?: ButtonSize;
}
/**
 * 一行或者一列工具栏
 */
export interface ToolLineProps {
    /**
     * toolButton 数组
     */
    toolButtons: ToolButtonProps[];
    /**
     * 限定整行在特定插件选中时显示，优先级高于 toolButton.showTargets
     */
    showTargets?: string[];
    /**
     * 限定整行在特定插件选中时隐藏，优先级高于 toolButton.hideTargets
     */
    hideTargets?: string[];
}
/**
 * 一组工具栏
 */
export interface ToolGroupProps {
    /**
     * 一组可包含多列或者多行
     */
    toolLines: ToolLineProps[];
    /**
     * 限定整组在特定插件选中时显示，优先级高于 toolLine.showTargets
     */
    showTargets?: string[];
    /**
     * 限定整组在特定插件选中时隐藏，优先级高于 toolLine.hideTargets
     */
    hideTargets?: string[];
    /**
     * 一组布局的方向
     */
    layoutMode?: LayoutType;
    /**
     * 是否隐藏右边边框
     */
    hideBorder?: boolean;
    /**
     * 是否清除分组的内间距
     */
    clearPadding?: boolean;
    /**
     * 控制该group是否精细自适应（按个）缩进，若否整个 group 缩进
     */
    fineAdaptation?: boolean;
}
export interface ToolbarRenderProps {
    /**
     * 单行工具栏配置
     */
    singleLayout?: ToolLineProps[];
    /**
     * 双行工具栏配置
     */
    doubleLayout?: ToolGroupProps[];
    /**
     * 自定义组件
     */
    customToolButtons?: Record<string, any>;
    /**
     * 隐藏组件（用于灰度）
     */
    hiddenToolButtons?: Record<string, boolean>;
    /**
     * 工具栏模式：single、double
     */
    toolbarMode?: ToolbarMode;
    /**
     * 默认模式
     */
    defaultToolbarMode?: ToolbarMode;
    /**
     * 选中后让 toolbar disable 的targets
     */
    disableTargets?: Record<string, boolean>;
    /**
     * 整体控制是否精细自适应（按个）缩进，若否整个 group 缩进
     */
    fineAdaptation?: boolean;
    /**
     * 背景色值
    */
    backgroundColor?: string;
    /**
     * 工具栏模式发生变化时回调
     */
    onToolbarModeChange?: (mode: ModeType) => void;
}
export interface ToolbarRenderNextProps extends ToolbarRenderProps {
    controller: Controller;
    plugins: any;
}
