/// <reference types="react" />
import { TYPE_MENU_DATA, TYPE_MENU_ITEM, TYPE_SUB_MENU, TYPE_GROUP } from './interface';
export declare const filterMenuByQuery: (query: string, menus: TYPE_MENU_DATA) => ({
    menus: TYPE_MENU_DATA;
    priority: any;
    type: typeof TYPE_SUB_MENU;
    title: import("react").ReactNode;
    hidden?: boolean | undefined;
    role?: string | undefined;
    query?: string | string[] | undefined;
    icon?: import("react").ReactNode;
    menuKey?: string | undefined;
    showArrow?: boolean | undefined;
    overlayClassName?: string | undefined;
    overlayStyle?: import("react").CSSProperties | undefined;
    disabled?: boolean | undefined;
    disabledTip?: string | undefined;
    tooltipZIndex?: number | undefined;
    testid?: string | undefined;
    showSelect?: boolean | undefined;
    maxHeight?: string | number | undefined;
    forceUnfoldByClick?: boolean | undefined;
    style?: import("react").CSSProperties | undefined;
} | {
    menus: TYPE_MENU_DATA;
    priority: any;
    type: typeof TYPE_GROUP;
    title?: import("react").ReactNode;
    hidden?: boolean | undefined;
    role?: string | undefined;
    query?: string | string[] | undefined;
} | {
    priority: number;
    type: typeof TYPE_MENU_ITEM;
    menuKey: string;
    title?: import("react").ReactNode;
    hidden?: boolean | undefined;
    MenuContentWrapper?: import("react").ComponentType<{}> | undefined;
    menuExtraKey?: string | undefined;
    query?: string | string[] | undefined;
    action?: string | undefined;
    selected?: boolean | undefined;
    icon?: import("react").ReactNode;
    disabled?: boolean | undefined;
    disabledTip?: string | undefined;
    tooltipZIndex?: number | undefined;
    style?: import("react").CSSProperties | undefined;
    onClick?: ((menuKey: string, e: import("react").MouseEvent<HTMLElement, MouseEvent>) => void) | undefined;
    autoClose?: boolean | undefined;
    height?: number | "auto" | undefined;
    hoverable?: boolean | undefined;
    testid?: string | undefined;
    extra?: import("react").ReactNode;
    description?: import("react").ReactNode;
    showSelect?: boolean | undefined;
    role?: string | undefined;
} | null)[];
