import * as React from 'react';
interface Size {
    width: number;
    height: number;
}
declare type DragEvent = MouseEvent | TouchEvent;
declare type Range = [number, number];
export interface ResizableProps {
    /** classname */
    className?: string;
    /** 高度 */
    height: number;
    /** 宽度 */
    width: number;
    /** 缩放坐标轴 */
    axis: 'y' | 'x' | 'all';
    /** 缩放回调 */
    onResize: (event: DragEvent, size: Size) => void;
    /** 缩放开始回调 */
    onResizeStart?: (event: DragEvent) => void;
    /** 缩放结束回调 */
    onResizeStop?: (event: DragEvent, size: Size) => void;
    /** 跟元素事件回调 */
    onClick?: (event: React.MouseEvent) => void;
    /** 宽度区间 */
    widthRange?: Range;
    /** 高度区间 */
    heightRange?: Range;
    /** 是否可见 */
    visible?: boolean;
    /** 样式 */
    style?: React.CSSProperties;
    /** 速度 */
    speed?: number;
    /** zoom container */
    zoomContainer: HTMLElement | null;
    /** innerRef */
    innerRef?: React.RefObject<HTMLDivElement>;
    /** handle style */
    handleStyle?: React.CSSProperties;
    /** 高度是否自适应内容 */
    autoHeight?: boolean;
    isActive: boolean;
    enableBorderHighlight?: boolean;
}
declare const Resizable: React.FC<ResizableProps>;
export default Resizable;
