import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["defaultValue", "value", "onChange", "min", "max", "step", "bordered", "digits", "control", "onBlur", "onEnter", "disabled"];
import React, { useState, useRef } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Input } from "../input/Input";
import { useDefaultProp, useEventCallback, mergeRestProps } from "../../common";
import { ArrowUpIcon, ArrowDownIcon, NumberControlWrap } from "./styled";
var isValidNumber = function isValidNumber(text) {
  return !isNaN(parseFloat(text));
};
var toValidNumber = function toValidNumber(text) {
  return parseFloat(text);
};

// 是否是合法的数字，或者是形如 '-' 或 '1.' 这样输入到一半的片段
var isValidNumberFragment = function isValidNumberFragment(text) {
  return text !== '' && /^-?(\d+(\.\d*)?)?$/.test(text);
};

// 小数位数仅支持大于等于 0 的整数
var normalizeDigits = function normalizeDigits(d) {
  return Math.floor(Math.max(d, 0));
};
var setDelayInterval = function setDelayInterval(fn, delay, interval) {
  var it = 0;
  var timeout = setTimeout(function () {
    it = setInterval(fn, interval);
    timeout = null;
  }, delay);
  return function () {
    if (timeout) {
      clearTimeout(timeout);
    } else {
      clearInterval(it);
    }
  };
};
export var InputNumber = /*#__PURE__*/React.memo(function (props) {
  var defaultValue = props.defaultValue,
    value = props.value,
    onChange = props.onChange,
    _props$min = props.min,
    min = _props$min === void 0 ? -Infinity : _props$min,
    _props$max = props.max,
    max = _props$max === void 0 ? Infinity : _props$max,
    _props$step = props.step,
    step = _props$step === void 0 ? 1 : _props$step,
    _props$bordered = props.bordered,
    bordered = _props$bordered === void 0 ? true : _props$bordered,
    digits = props.digits,
    _props$control = props.control,
    control = _props$control === void 0 ? true : _props$control,
    onBlur = props.onBlur,
    onEnter = props.onEnter,
    disabled = props.disabled,
    rest = _objectWithoutPropertiesLoose(props, _excluded);
  var _useDefaultProp = useDefaultProp(defaultValue, value, onChange),
    v = _useDefaultProp[0],
    setV = _useDefaultProp[1];
  var _useState = useState(undefined),
    t = _useState[0],
    setT = _useState[1];
  var handleIncrease = useEventCallback(function () {
    if (typeof v === 'number') {
      setT(undefined);
      setV(Math.min(v + step, max));
    }
  });
  var handleDecrease = useEventCallback(function () {
    if (typeof v === 'number') {
      setT(undefined);
      setV(Math.max(v - step, min));
    }
  });
  var timingRef = useRef(undefined);
  var handleIncreasingStart = useEventCallback(function () {
    if (timingRef.current === undefined) {
      timingRef.current = setDelayInterval(handleIncrease, 800, 60);
    }
  });
  var handleDecreasingStart = useEventCallback(function () {
    if (timingRef.current === undefined) {
      timingRef.current = setDelayInterval(handleDecrease, 800, 60);
    }
  });
  var handleIncreasingDecreasingEnd = useEventCallback(function () {
    if (typeof timingRef.current === 'function') {
      timingRef.current();
      timingRef.current = undefined;
    }
  });
  var handleChange = useEventCallback(function (e) {
    var text = e.target.value;
    if (text === '') {
      setT(undefined);
      setV(undefined);
    } else if (isValidNumber(text)) {
      setT(text);
      setV(Math.max(Math.min(toValidNumber(text), max), min));
    } else if (isValidNumberFragment(text)) {
      setT(text);
    }
  });
  var handleEnter = useEventCallback(function (e) {
    setT(undefined);
    onEnter && onEnter(e);
  });
  var handleBlur = useEventCallback(function (e) {
    setT(undefined);
    onBlur && onBlur(e);
  });
  return /*#__PURE__*/_createElement(Input, _extends({
    value: typeof t === 'string' ? t : typeof v === 'number' ? typeof digits === 'number' ? v.toFixed(normalizeDigits(digits)) : v.toString() : '',
    onChange: handleChange,
    disabled: disabled,
    bordered: bordered,
    onEnter: handleEnter,
    suffix: control ? /*#__PURE__*/_createElement(NumberControlWrap, null, /*#__PURE__*/_createElement(ArrowUpIcon, {
      disabled: !!disabled || typeof v !== 'number' || (control === 'flip' ? v <= min : v >= max),
      onClick: control === 'flip' ? handleDecrease : handleIncrease,
      onMouseDown: control === 'flip' ? handleDecreasingStart : handleIncreasingStart,
      onMouseUp: handleIncreasingDecreasingEnd,
      onMouseLeave: handleIncreasingDecreasingEnd
    }), /*#__PURE__*/_createElement(ArrowDownIcon, {
      disabled: !!disabled || typeof v !== 'number' || (control === 'flip' ? v >= max : v <= min),
      onClick: control === 'flip' ? handleIncrease : handleDecrease,
      onMouseDown: control === 'flip' ? handleIncreasingStart : handleDecreasingStart,
      onMouseUp: handleIncreasingDecreasingEnd,
      onMouseLeave: handleIncreasingDecreasingEnd
    })) : undefined
  }, mergeRestProps(rest, 'wdn_input_number', {
    paddingRight: 0,
    overflow: 'hidden'
  }), {
    onBlur: handleBlur
  }));
});
//# sourceMappingURL=InputNumber.js.map