import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { Component, PureComponent } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import reactCSS from 'reactcss';
import * as alpha from "../helpers/alpha";
import CheckBoardHelper from "./Checkboard";
export var Alpha = /*#__PURE__*/function (_ref) {
  _inheritsLoose(Alpha, _ref);
  function Alpha() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _ref.call.apply(_ref, [this].concat(args)) || this;
    _this.handleChange = function (e) {
      var change = alpha.calculateChange(e, _this.props.hsl, _this.props.direction, _this.props.a, _this.container);
      change && typeof _this.props.onChange === 'function' && _this.props.onChange(change, e);
    };
    _this.handleMouseDown = function (e) {
      _this.handleChange(e);
      window.addEventListener('mousemove', _this.handleChange);
      window.addEventListener('mouseup', _this.handleMouseUp);
    };
    _this.handleMouseUp = function () {
      _this.unbindEventListeners();
    };
    _this.unbindEventListeners = function () {
      window.removeEventListener('mousemove', _this.handleChange);
      window.removeEventListener('mouseup', _this.handleMouseUp);
    };
    return _this;
  }
  var _proto = Alpha.prototype;
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.unbindEventListeners();
  };
  _proto.render = function render() {
    var _this2 = this;
    var rgb = this.props.rgb;
    var styles = reactCSS({
      "default": {
        alpha: {
          absolute: '0px 0px 0px 0px',
          borderRadius: this.props.radius
        },
        checkboard: {
          absolute: '0px 0px 0px 0px',
          overflow: 'hidden',
          borderRadius: this.props.radius
        },
        gradient: {
          absolute: '0px 0px 0px 0px',
          background: "linear-gradient(to right, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)",
          boxShadow: this.props.shadow,
          borderRadius: this.props.radius
        },
        container: {
          position: 'relative',
          height: '100%',
          margin: '0 3px'
        },
        pointer: {
          position: 'absolute',
          left: rgb.a * 100 + "%"
        },
        slider: {
          width: '4px',
          borderRadius: '1px',
          height: '8px',
          boxShadow: '0 0 2px rgba(0, 0, 0, .6)',
          background: '#fff',
          marginTop: '1px',
          transform: 'translateX(-2px)'
        }
      },
      vertical: {
        gradient: {
          background: "linear-gradient(to bottom, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)"
        },
        pointer: {
          left: 0,
          top: rgb.a * 100 + "%"
        }
      },
      overwrite: _extends({}, this.props.style)
    }, {
      vertical: this.props.direction === 'vertical',
      overwrite: true
    });
    return /*#__PURE__*/_createElement("div", {
      style: styles.alpha
    }, /*#__PURE__*/_createElement("div", {
      style: styles.checkboard
    }, /*#__PURE__*/_createElement(CheckBoardHelper, {
      renderers: this.props.renderers
    })), /*#__PURE__*/_createElement("div", {
      style: styles.gradient
    }), /*#__PURE__*/_createElement("div", {
      className: "alpha",
      style: styles.container,
      ref: function ref(container) {
        _this2.container = container;
      },
      onMouseDown: this.handleMouseDown,
      onTouchMove: this.handleChange,
      onTouchStart: this.handleChange
    }, /*#__PURE__*/_createElement("div", {
      style: styles.pointer
    }, this.props.pointer ? /*#__PURE__*/_createElement(this.props.pointer, this.props) : /*#__PURE__*/_createElement("div", {
      style: styles.slider
    }))));
  };
  return Alpha;
}(PureComponent || Component);
export default Alpha;
//# sourceMappingURL=Alpha.js.map