{"version":3,"file":"ColorPickerGradientRow.js","names":["React","COLORS","Row","ColorSquareWrap","isWhite","gradients","PresetGradient","memo","props","value","onSelect","map","g","i","style","indexOf","background","border","OTHERS","BORDER","split","c1","c2","backgroundImage","backgroundOrigin"],"sources":["../../../../src/form/color-picker/ColorPickerGradientRow.tsx"],"sourcesContent":["import React from 'react';\nimport { CSSProperties } from 'styled-components';\nimport { COLORS } from '../../common';\nimport { Row, ColorSquareWrap } from './styled';\nimport { isWhite } from './isWhite';\n\ntype IGradientRowProps = {\n  value: string;\n  onSelect: (gradient: string) => void;\n}\n\n\nconst gradients = [\n  '#FFFFFF',\n  '#28B4BE__#3935DD',\n  '#2449FE__#CA4BA7',\n  '#FF7100__#F300AD',\n  '#B16A4D__#D5A638',\n  '#1890FF__#4FF3E0',\n  '#F3AA00__#E43E29',\n  '#EB47FF__#F95101',\n  '#10CCF7__#AB44FB',\n  '#F55B2D__#510101',\n];\n\n\nexport const PresetGradient = React.memo(\n  (props: IGradientRowProps) => {\n\n    const {\n      value,\n      onSelect,\n    } = props;\n\n    return <Row>\n      {\n        gradients.map(\n          (g, i) => {\n            const style: CSSProperties = {};\n            if (g.indexOf('__') === -1) {\n              style.background = g;\n              if (isWhite(g)) {\n                style.border = `2px solid ${COLORS.OTHERS.BORDER}`;\n              }\n            } else {\n              const [c1, c2] = g.split('__');\n              style.backgroundImage = `linear-gradient(90deg, ${c1}, ${c2})`;\n              style.backgroundOrigin = 'border-box';\n            }\n            return <ColorSquareWrap onClick={() => onSelect(g)} style={style} >\n              {\n                g === value ?\n                  <svg width=\"14\" height=\"10\" viewBox=\"0 0 16 12\" fill=\"none\">\n                    <path d=\"M13.965 2.15533L5.63499 10.485L1.46999 6.32034\" stroke={i === 0 ? '#000000' : '#ffffff'} strokeOpacity=\"0.6\" strokeWidth=\"2.38\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\n                  </svg> : null\n              }\n            </ColorSquareWrap>;\n          }\n        )\n      }\n    </Row>;\n  }\n);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,qBACE;AAC5B,SAASC,MAAM;AACf,SAASC,GAAG,EAAEC,eAAe;AAC7B,SAASC,OAAO;AAQhB,IAAMC,SAAS,GAAG,CAChB,SAAS,EACT,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,CACnB;AAGD,OAAO,IAAMC,cAAc,gBAAGN,KAAK,CAACO,IAAI,CACtC,UAACC,KAAwB,EAAK;EAE5B,IACEC,KAAK,GAEHD,KAAK,CAFPC,KAAK;IACLC,QAAQ,GACNF,KAAK,CADPE,QAAQ;EAGV,oBAAO,eAAC,GAAG,QAEPL,SAAS,CAACM,GAAG,CACX,UAACC,CAAC,EAAEC,CAAC,EAAK;IACR,IAAMC,KAAoB,GAAG,CAAC,CAAC;IAC/B,IAAIF,CAAC,CAACG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1BD,KAAK,CAACE,UAAU,GAAGJ,CAAC;MACpB,IAAIR,OAAO,CAACQ,CAAC,CAAC,EAAE;QACdE,KAAK,CAACG,MAAM,kBAAgBhB,MAAM,CAACiB,MAAM,CAACC,MAAQ;MACpD;IACF,CAAC,MAAM;MACL,eAAiBP,CAAC,CAACQ,KAAK,CAAC,IAAI,CAAC;QAAvBC,EAAE;QAAEC,EAAE;MACbR,KAAK,CAACS,eAAe,+BAA6BF,EAAE,UAAKC,EAAE,MAAG;MAC9DR,KAAK,CAACU,gBAAgB,GAAG,YAAY;IACvC;IACA,oBAAO,eAAC,eAAe;MAAC,OAAO,EAAE;QAAA,OAAMd,QAAQ,CAACE,CAAC,CAAC;MAAA,CAAC;MAAC,KAAK,EAAEE;IAAM,GAE7DF,CAAC,KAAKH,KAAK,gBACT;MAAK,KAAK,EAAC,IAAI;MAAC,MAAM,EAAC,IAAI;MAAC,OAAO,EAAC,WAAW;MAAC,IAAI,EAAC;IAAM,gBACzD;MAAM,CAAC,EAAC,gDAAgD;MAAC,MAAM,EAAEI,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,SAAU;MAAC,aAAa,EAAC,KAAK;MAAC,WAAW,EAAC,MAAM;MAAC,aAAa,EAAC,OAAO;MAAC,cAAc,EAAC;IAAO,EAAQ,CACzL,GAAG,IAAI,CAED;EACpB,CAAC,CACF,CAEC;AACR,CAAC,CACF"}