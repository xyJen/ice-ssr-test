import React, { useRef, useLayoutEffect, useEffect } from "react";
var _createElement = /*#__PURE__*/React.createElement;
import { mergeClassName } from "../../../../common";
import { UlWrapper, LiWrapper, NumberWrapper, TitleLiWrapper, TitleWrapper, LI_HEIGHT } from "./styled";
import { leftPad } from "../../date-util";
import Animation from "./Animation";
export var generateUnits = function generateUnits(start, end, step) {
  if (step === void 0) {
    step = 1;
  }
  var units = [];
  for (var i = start; i <= end; i += step) {
    units.push({
      label: leftPad(i, 2),
      value: i
    });
  }
  return units;
};
export var TimeColumn = /*#__PURE__*/React.memo(function (props) {
  var _props$value = props.value,
    value = _props$value === void 0 ? 0 : _props$value,
    units = props.units,
    onSelect = props.onSelect,
    title = props.title,
    showNow = props.showNow;
  var ulRef = useRef(null);
  useLayoutEffect(function () {
    if (!ulRef.current) {
      return;
    }
    var targetValue = LI_HEIGHT * value;
    var currentValue = ulRef.current.scrollTop;
    var animation = new Animation({
      duration: 240,
      progress: function progress(p) {
        if (ulRef.current) {
          ulRef.current.scrollTop = p * (targetValue - currentValue) + currentValue;
        }
      },
      done: function done() {
        if (ulRef.current) {
          ulRef.current.scrollTop = targetValue;
        }
      }
    }).start();
    return function () {
      animation.clear();
    };
  }, [value]);
  useEffect(function () {
    var dom = ulRef && ulRef.current;
    var stopPropagation = function stopPropagation(e) {
      return e.stopPropagation();
    };
    dom == null ? void 0 : dom.addEventListener('mousewheel', stopPropagation);
    return function () {
      return dom == null ? void 0 : dom.removeEventListener('mousewheel', stopPropagation);
    };
  }, []);
  return /*#__PURE__*/_createElement(UlWrapper, {
    ref: ulRef,
    showNow: showNow
  }, title ? /*#__PURE__*/_createElement(TitleLiWrapper, null, /*#__PURE__*/_createElement(TitleWrapper, null, title)) : null, units.map(function (unit) {
    return /*#__PURE__*/_createElement(LiWrapper, {
      key: unit.value,
      onClick: function onClick() {
        return onSelect == null ? void 0 : onSelect(unit.value);
      },
      className: mergeClassName(value === unit.value ? "selected" : undefined)
    }, /*#__PURE__*/_createElement(NumberWrapper, null, unit.label));
  }));
});
//# sourceMappingURL=TimeColumn.js.map