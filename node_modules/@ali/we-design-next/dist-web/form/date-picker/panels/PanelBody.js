import React from "react";
var _createElement = /*#__PURE__*/React.createElement;
import { mergeClassName } from "../../../common";
import { getCellDateDisabled } from "../date-util";
import { CalendarTable, Td, Cell, TableWrapper } from "./styled";
export var PanelBody = /*#__PURE__*/React.memo(function (props) {
  var headerCells = props.headerCells,
    rowNum = props.rowNum,
    colNum = props.colNum,
    baseDate = props.baseDate,
    viewDate = props.viewDate,
    mode = props.mode,
    getCellDate = props.getCellDate,
    getCellText = props.getCellText,
    onSelect = props.onSelect,
    disabledDate = props.disabledDate,
    getCellClassName = props.getCellClassName;
  var rows = [];
  for (var i = 0; i < rowNum; i++) {
    var row = [];
    var _loop = function _loop(j) {
      var offset = i * colNum + j;
      var currentDate = getCellDate(baseDate, offset);
      var disabled = getCellDateDisabled({
        cellDate: currentDate,
        mode: mode,
        disabledDate: disabledDate
      });
      var curDate = getCellText(currentDate);
      row.push( /*#__PURE__*/_createElement(Td, {
        key: j,
        onClick: function onClick() {
          return !disabled && onSelect(currentDate);
        }
      }, /*#__PURE__*/_createElement(Cell, {
        className: mergeClassName.apply(void 0, [disabled ? "disabled" : undefined].concat(getCellClassName(currentDate)))
      }, curDate)));
    };
    for (var j = 0; j < colNum; j++) {
      _loop(j);
    }
    rows.push( /*#__PURE__*/_createElement("tr", {
      key: i
    }, row));
  }
  return /*#__PURE__*/_createElement(TableWrapper, null, /*#__PURE__*/_createElement(CalendarTable, null, headerCells && /*#__PURE__*/_createElement("thead", null, /*#__PURE__*/_createElement("tr", null, headerCells)), /*#__PURE__*/_createElement("tbody", null, rows)));
});
//# sourceMappingURL=PanelBody.js.map