import React, { useMemo } from "react";
var _createElement = /*#__PURE__*/React.createElement;
import { useDayjsLocale } from "../../../../locale";
import { DateController, isSameMonth } from "../../date-util";
import { PanelBody } from "../PanelBody";
var MONTH_COL_COUNT = 3;
var MONTH_ROW_COUNT = 4;
export var MonthBody = /*#__PURE__*/React.memo(function (props) {
  var value = props.value,
    viewDate = props.viewDate,
    onSelect = props.onSelect,
    disabledDate = props.disabledDate;
  var dayjsLocale = useDayjsLocale();
  var months = useMemo(function () {
    return DateController.locale.getShortMonths(dayjsLocale);
  }, [dayjsLocale]);
  var baseMonth = DateController.setMonth(viewDate, 0);
  return /*#__PURE__*/_createElement(PanelBody, {
    viewDate: viewDate,
    rowNum: MONTH_ROW_COUNT,
    colNum: MONTH_COL_COUNT,
    baseDate: baseMonth,
    getCellDate: DateController.addMonth,
    getCellText: function getCellText(date) {
      return months[DateController.getMonth(date)];
    },
    onSelect: onSelect,
    disabledDate: disabledDate,
    mode: "month",
    getCellClassName: function getCellClassName(curDate) {
      return ['month', value && isSameMonth(curDate, value) ? 'selected' : undefined];
    }
  });
});
//# sourceMappingURL=MonthBody.js.map