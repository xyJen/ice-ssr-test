import React, { useCallback } from "react";
var _createElement = /*#__PURE__*/React.createElement;
import { PanelWrapper } from "../DatePanel/styled";
import { Header } from "../Header";
import { PanelBody } from "../PanelBody";
import { DateController, isSameYear } from "../../date-util";
var YEAR_DECADE_COUNT = 10;
var YEAR_COL_COUNT = 3;
var YEAR_ROW_COUNT = 4;
export var YearPanel = /*#__PURE__*/React.memo(function (props) {
  var viewDate = props.viewDate,
    value = props.value,
    onPanelChange = props.onPanelChange,
    onSelect = props.onSelect,
    disabledDate = props.disabledDate,
    showNow = props.showNow,
    nowNode = props.nowNode;
  var yearNumber = DateController.getYear(viewDate);
  var startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;
  var endYear = startYear + YEAR_DECADE_COUNT - 1;
  var baseYear = DateController.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));
  var handleSelect = useCallback(function (value) {
    onSelect(value);
    onPanelChange('year', "date");
  }, [onSelect]);
  var onDecadeChange = useCallback(function (diff) {
    var newDate = DateController.addYear(viewDate, diff * 10);
    onSelect(newDate);
  }, [viewDate, onSelect]);
  return /*#__PURE__*/_createElement(PanelWrapper, {
    showNow: showNow
  }, /*#__PURE__*/_createElement(Header, {
    onPrev: function onPrev() {
      return onDecadeChange(-1);
    },
    onNext: function onNext() {
      return onDecadeChange(1);
    }
  }, /*#__PURE__*/_createElement("span", null, startYear, "-", endYear)), /*#__PURE__*/_createElement(PanelBody, {
    viewDate: viewDate,
    rowNum: YEAR_ROW_COUNT,
    colNum: YEAR_COL_COUNT,
    baseDate: baseYear,
    getCellDate: DateController.addYear,
    getCellText: DateController.getYear,
    onSelect: handleSelect,
    disabledDate: disabledDate,
    mode: "year",
    getCellClassName: function getCellClassName(curDate) {
      return ['year', value && isSameYear(curDate, value) ? 'selected' : undefined, DateController.getYear(curDate) < startYear || DateController.getYear(curDate) > endYear ? 'notCurrentPeriod' : undefined];
    }
  }), nowNode);
});
//# sourceMappingURL=YearPanel.js.map