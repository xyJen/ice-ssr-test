{"version":3,"file":"DatePicker.js","names":["React","useState","useCallback","useEffect","useRef","useMemo","dayjs","useTranslate","useDefaultProp","mergeRestProps","renderReactNode","DateTimePanel","TimePanel","DatePickerFooter","DateController","isEqual","DatePickerWrapper","NowWrapper","SpaceBar","SwitchOptionWrapper","Button","Checkbox","DatePicker","memo","props","defaultValue","_value","value","onChange","mode","timeFormat","clearable","confirmable","disabledDate","footer","showNow","rest","setValue","selectedValue","setSelectedValue","curPanel","setCurPanel","prePanelRef","showTimeOption","defaultShowTime","showTime","setShowTime","t","handleDisabledDate","toDate","handleSelect","date","handlePanelChange","origin","target","current","now","getNow","disabled","nowNode","defaultFooter","e","checked","undefined","panelSharedProps","onSelect"],"sources":["../../../../src/form/date-picker/DatePicker.tsx"],"sourcesContent":["import React, { ReactElement, useState, useCallback, useEffect, useRef, useMemo } from \"react\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport { useTranslate } from '../../locale';\nimport { useDefaultProp, IRestProps, mergeRestProps, IRenderReactNode, renderReactNode } from \"../../common\";\nimport { DateTimePanel, TimePanel, DatePickerFooter } from \"./panels\";\nimport { PanelMode, DateController, isEqual } from \"./date-util\";\nimport { DatePickerWrapper, NowWrapper, SpaceBar, SwitchOptionWrapper } from \"./styled\";\nimport { Button } from \"../../basic/button\";\nimport { Checkbox } from '../checkbox';\n\ntype RawMode = 'date' | 'datetime';\n\nexport type IDatePickerProps = {\n  /**\n   * 日期值\n   */\n  value?: Date | null;\n  /**\n   * 默认的日期值\n   */\n  defaultValue?: Date | null;\n  /**\n   * 值发生变化\n   */\n  onChange?: (value: Date | null, options: { showTime: boolean }) => void;\n  /**\n   * 展示面板类型，默认是date; auto时展示时间开关，开关默认关闭\n   */\n  mode?: RawMode | 'time' | 'auto' | ['auto', { default: RawMode }];\n  /**\n   * 时间面板展示类型，默认HM（只展示时分面板），只在有时间面板时生效\n   */\n  timeFormat?: 'hm' | 'hms';\n  /**\n   * 是否可清除，为true显示清除按钮，默认false\n   */\n  clearable?: boolean;\n  /**\n   * 是否只有点确定才生效，为true显示确定按钮，默认true\n   */\n  confirmable?: boolean;\n  /**\n   * 不可选择的日期\n   */\n  disabledDate?: (date: Date) => boolean;\n  /**\n   * 自定义底部\n   */\n  footer?: IRenderReactNode<void>;\n  /**\n   * 是否显示今天或现在, 默认true\n   */\n  showNow?: boolean;\n} & IRestProps;\n\nexport const DatePicker: React.FC<IDatePickerProps> = React.memo(\n  (props) => {\n    const {\n      defaultValue,\n      value: _value,\n      onChange,\n      mode = 'date',\n      timeFormat = 'hm',\n      clearable = false,\n      confirmable = false,\n      disabledDate,\n      footer,\n      showNow = true,\n      ...rest\n    } = props;\n\n    const [value, setValue] = useDefaultProp(defaultValue, _value, onChange);\n    const [selectedValue, setSelectedValue] = useState<Dayjs | null>(\n      value ? dayjs(value) : null\n    );\n    const [curPanel, setCurPanel] = useState<PanelMode>(\"date\");\n    const prePanelRef = useRef<PanelMode>();\n\n    const showTimeOption: boolean = useMemo(() => mode === 'auto' || typeof mode === 'object', [mode]);\n    const defaultShowTime: boolean = useMemo(() => mode === 'datetime' || (typeof mode === 'object' && mode[1].default === 'datetime'), [mode]);\n    const [showTime, setShowTime] = useState<boolean>(defaultShowTime);\n\n    const t = useTranslate();\n\n    useEffect(() => {\n      setShowTime(defaultShowTime);\n    }, [mode]);\n\n    useEffect(() => {\n      // 受控模式下，使selectedValue和value同步\n      setSelectedValue(value ? dayjs(value) : null);\n    }, [value]);\n\n    const handleDisabledDate = useCallback(\n      (value: Dayjs) => disabledDate?.(value.toDate()) || false,\n      [disabledDate]\n    );\n\n    const handleSelect = useCallback(\n      (date: Dayjs) => {\n        setSelectedValue(date);\n\n        if (\n          !confirmable &&\n          !isEqual(selectedValue, date) &&\n          !handleDisabledDate(date)\n        ) {\n          setValue(date.toDate(), { showTime });\n        }\n      },\n      [confirmable, selectedValue, setValue, handleDisabledDate, showTime]\n    );\n\n    const handlePanelChange = useCallback(\n      (origin: PanelMode, target: PanelMode) => {\n        if (prePanelRef.current === \"month\" && origin === \"year\" && target === \"date\") {\n          setCurPanel(\"month\");\n        } else {\n          setCurPanel(target);\n        }\n        prePanelRef.current = origin;\n      },\n      []\n    );\n\n    const now = DateController.getNow();\n    const disabled = handleDisabledDate(now);\n    const nowNode = showNow ? (\n      <NowWrapper>\n        <Button type=\"text\" disabled={disabled} onClick={() => handleSelect(now)}>\n          {showTime ? t(\"wdn_date_picker_now\") : t(\"wdn_date_picker_today\")}\n        </Button>\n      </NowWrapper>\n    ) : <SpaceBar />;\n\n    let defaultFooter: React.ReactElement = <></>;\n    if (curPanel === \"date\") {\n      defaultFooter = (\n        <DatePickerFooter\n          timeSwitch={\n            showTimeOption ? (\n              <SwitchOptionWrapper>\n                <Checkbox\n                  checked={showTime}\n                  onChange={(e) => setShowTime(e.target.checked)}\n                >\n                  {t(\"wdn_date_picker_time\")}\n                </Checkbox>\n              </SwitchOptionWrapper>\n            ) : null\n          }\n          clear={\n            clearable ? (\n              <Button\n                disabled={!value}\n                onClick={() => {\n                  setSelectedValue(null);\n                  !confirmable && setValue(null, { showTime });\n                }}\n              >\n                {t(\"wdn_date_picker_clear\")}\n              </Button>\n            ) : undefined\n          }\n          confirm={\n            confirmable ? (\n              <Button\n                disabled={!selectedValue}\n                onClick={() => {\n                  if (!disabled && selectedValue) {\n                    setValue(selectedValue.toDate(), { showTime });\n                  }\n                }}\n              >\n                {t(\"wdn_ok\")}\n              </Button>\n            ) : undefined\n          }\n        />\n      );\n    }\n\n    const panelSharedProps = {\n      value: selectedValue,\n      onSelect: handleSelect,\n      showNow: showNow,\n      timeFormat: timeFormat,\n    };\n\n    return (\n      <DatePickerWrapper {...mergeRestProps(rest, \"wdn-date-picker\")}>\n        {mode === \"time\" ? (\n          <TimePanel showHeader={false} {...panelSharedProps} />\n        ) : (\n          <DateTimePanel\n            showTime={showTime}\n            disabledDate={handleDisabledDate}\n            curPanel={curPanel}\n            onPanelChange={handlePanelChange}\n            nowNode={nowNode}\n            {...panelSharedProps}\n          />\n        )}\n        {renderReactNode(footer, defaultFooter, undefined)}\n      </DatePickerWrapper>\n    );\n  }\n);\n"],"mappings":"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"}