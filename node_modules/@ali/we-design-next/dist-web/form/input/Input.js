import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["value", "suffix", "prefix", "allowClear", "disabled", "size", "bordered", "onEnter", "onKeyDown", "defaultValue", "onChange", "error", "children", "style", "className", "id", "data-testid", "data-role"];
import React, { useCallback, memo, forwardRef } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useDefaultProp } from "../../common/react/useDefaultProp";
import { IconCloseFill } from "../../basic/icon";
import { InputEle, InputWrap, InputErrorMessage } from "./styled";
import { KEY_CODES } from "../../common/consts";
import { mergeRestProps } from "../../common/";
function blockEvent(e) {
  e.stopPropagation();
  e.preventDefault();
}
export var Input = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (props, ref) {
  var _mergeRestProps;
  var _value = props.value,
    suffix = props.suffix,
    prefix = props.prefix,
    allowClear = props.allowClear,
    disabled = props.disabled,
    _props$size = props.size,
    size = _props$size === void 0 ? 'normal' : _props$size,
    _props$bordered = props.bordered,
    bordered = _props$bordered === void 0 ? true : _props$bordered,
    onEnter = props.onEnter,
    onKeyDown = props.onKeyDown,
    _props$defaultValue = props.defaultValue,
    defaultValue = _props$defaultValue === void 0 ? '' : _props$defaultValue,
    onChange = props.onChange,
    error = props.error,
    children = props.children,
    style = props.style,
    className = props.className,
    id = props.id,
    testid = props['data-testid'],
    role = props['data-role'],
    rest = _objectWithoutPropertiesLoose(props, _excluded);
  var _useDefaultProp = useDefaultProp(defaultValue, _value, onChange, function (e) {
      return e.target.value;
    }),
    value = _useDefaultProp[0],
    setValue = _useDefaultProp[1];
  var handlerClear = useCallback(function () {
    setValue({
      target: {
        value: ''
      }
    });
  }, [setValue]);
  var handleKeyDown = useCallback(function (e) {
    if (onKeyDown) {
      onKeyDown(e);
    }
    if (e.which === KEY_CODES.ENTER && onEnter) {
      onEnter(e);
    }
  }, [onKeyDown, onEnter]);
  return /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(InputWrap, _extends({
    size: size,
    bordered: bordered,
    disabled: !!disabled,
    error: !!error,
    tabIndex: -1 /** 目的：使得在对前后缀图标点击时，在 mouse-down 的瞬间即进入 focus 状态（而不是 mouse-up 之后）*/
  }, mergeRestProps((_mergeRestProps = {
    className: className,
    style: style,
    id: id
  }, _mergeRestProps['data-testid'] = testid, _mergeRestProps['data-role'] = role, _mergeRestProps), 'wdn-input')), prefix ? /*#__PURE__*/React.cloneElement(prefix, {
    style: {
      cursor: 'default'
    }
  }) : null, /*#__PURE__*/_createElement(InputEle, _extends({
    ref: ref,
    value: value,
    onChange: setValue,
    disabled: !!disabled,
    onKeyDown: handleKeyDown
  }, rest)), allowClear && !!value ? /*#__PURE__*/_createElement(IconCloseFill, {
    className: "icon-close",
    onClick: handlerClear,
    onMouseDown: blockEvent
  }) : null, !!suffix && !allowClear ? /*#__PURE__*/React.cloneElement(suffix, {
    style: {
      cursor: 'default'
    }
  }) : null), error ? /*#__PURE__*/_createElement(InputErrorMessage, null, error) : null);
}));
//# sourceMappingURL=Input.js.map