{"version":3,"file":"styled.js","names":["styled","css","COLORS","CSS_CURSOR_DISABLE","CSS_BORDER_BOX","CSS_TRANSITION","CSS_DISABLE_SELECT","TEXT_CSS","CheckboxInput","input","CheckboxIconWrap","span","indeterminate","CSS_INDETERMINATE","checked","disabled","CSS_UNCHECK_ENABLED","CSS_CHECK_ENABLED","CSS_CHECK_DISABLED","CSS_UNCHECK_DISABLED","TRANSPARENT","COMMON","BLUE1_COLOR","BLUE1_HOVER_COLOR","LINE_HARD_COLOR","OVERLAY_COLOR","WHITE","CheckboxText","CheckboxWrap","label","TEXT","LIGHT","LEVEL1_BASE_COLOR"],"sources":["../../../../src/form/checkbox/styled.tsx"],"sourcesContent":["/**\n *   CheckboxWrap (label)\n *     CheckboxInput (input transparent)\n *     CheckboxIconWrap (span)\n *       svg (svg)\n *     CheckboxText (span)\n */\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { COLORS, CSS_CURSOR_DISABLE, CSS_BORDER_BOX, CSS_TRANSITION, CSS_DISABLE_SELECT } from '../../common';\nimport { TEXT_CSS } from '../../basic/text';\nimport { ICheckboxProps } from './Checkbox';\n\n\nexport const CheckboxInput = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  z-index: 1;\n`;\n\ntype ICheckboxIconWrapProps = Required<Pick<ICheckboxProps, 'disabled' | 'checked' | 'indeterminate'>>;\n\nexport const CheckboxIconWrap = styled.span<ICheckboxIconWrapProps>`\n  ${CSS_BORDER_BOX}\n  ${CSS_TRANSITION('all')}\n\n  position: relative;\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 1px solid;\n  border-radius: 2px;\n\n  ${({ indeterminate }) => indeterminate ? CSS_INDETERMINATE : null}\n  ${({ checked, disabled }) => (!checked && !disabled) ? CSS_UNCHECK_ENABLED : null}\n  ${({ checked, disabled }) => (checked && !disabled) ? CSS_CHECK_ENABLED : null}\n  ${({ checked, disabled }) => (checked && disabled) ? CSS_CHECK_DISABLED : null}\n  ${({ checked, disabled }) => (!checked && disabled) ? CSS_UNCHECK_DISABLED : null}\n\n  ${({ checked, indeterminate }) => (checked && !indeterminate) ? `\n  & > svg{\n    display: inline-block;\n    position: absolute;\n    top: -1px;\n    left: -1px;\n  }\n  ` : `\n  & > svg{\n    display: none;\n  }\n  `}\n`;\n\nconst CSS_CHECK_ENABLED = css`\n  border-color: ${COLORS.TRANSPARENT};\n  background-color: ${COLORS.COMMON.BLUE1_COLOR};\n  &:hover {\n    background-color: ${COLORS.COMMON.BLUE1_HOVER_COLOR};\n  }\n`;\n\nconst CSS_CHECK_DISABLED = css`\n  border-color: ${COLORS.TRANSPARENT};\n  background-color: ${COLORS.COMMON.LINE_HARD_COLOR};\n`;\n\nconst CSS_UNCHECK_ENABLED = css`\n  border-color: ${COLORS.COMMON.OVERLAY_COLOR};\n  background-color: ${COLORS.WHITE};\n  &:hover {\n    border-color: ${COLORS.COMMON.BLUE1_HOVER_COLOR};\n  }\n`;\n\nconst CSS_UNCHECK_DISABLED = css`\n  border-color: ${COLORS.COMMON.LINE_HARD_COLOR};\n  background-color: ${COLORS.WHITE};\n`;\n\nconst CSS_INDETERMINATE = css`\n  &:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    height: 2px;\n    left: 2px;\n    right: 2px;\n    top: 6px;\n    background-color: ${COLORS.WHITE};\n  }\n`;\n\nexport const CheckboxText = styled.span`\n  padding: 0 8px;\n`;\n\ntype ICheckboxWrapProps = Pick<ICheckboxProps, 'disabled' | 'checked'>;\n\nexport const CheckboxWrap = styled.label<ICheckboxWrapProps>`\n  ${TEXT_CSS.TEXT}\n  ${CSS_CURSOR_DISABLE}\n  ${CSS_DISABLE_SELECT}\n  position: relative;\n  display: inline-block;\n  color: ${({ disabled }) => disabled ? COLORS.COMMON.LINE_HARD_COLOR : COLORS.LIGHT.LEVEL1_BASE_COLOR};\n  & > * {\n    vertical-align: middle;\n  }\n`;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAC/C,SAASC,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,cAAc,EAAEC,kBAAkB;AACvF,SAASC,QAAQ;AAIjB,OAAO,IAAMC,aAAa,gBAAGR,MAAM,CAACS,KAAK,0EAQxC;AAID,OAAO,IAAMC,gBAAgB,gBAAGV,MAAM,CAACW,IAAI,+IACvCP,cAAc,EACdC,cAAc,CAAC,KAAK,CAAC,EASrB;EAAA,IAAGO,aAAa,QAAbA,aAAa;EAAA,OAAOA,aAAa,GAAGC,iBAAiB,GAAG,IAAI;AAAA,GAC/D;EAAA,IAAGC,OAAO,SAAPA,OAAO;IAAEC,QAAQ,SAARA,QAAQ;EAAA,OAAQ,CAACD,OAAO,IAAI,CAACC,QAAQ,GAAIC,mBAAmB,GAAG,IAAI;AAAA,GAC/E;EAAA,IAAGF,OAAO,SAAPA,OAAO;IAAEC,QAAQ,SAARA,QAAQ;EAAA,OAAQD,OAAO,IAAI,CAACC,QAAQ,GAAIE,iBAAiB,GAAG,IAAI;AAAA,GAC5E;EAAA,IAAGH,OAAO,SAAPA,OAAO;IAAEC,QAAQ,SAARA,QAAQ;EAAA,OAAQD,OAAO,IAAIC,QAAQ,GAAIG,kBAAkB,GAAG,IAAI;AAAA,GAC5E;EAAA,IAAGJ,OAAO,SAAPA,OAAO;IAAEC,QAAQ,SAARA,QAAQ;EAAA,OAAQ,CAACD,OAAO,IAAIC,QAAQ,GAAII,oBAAoB,GAAG,IAAI;AAAA,GAE/E;EAAA,IAAGL,OAAO,SAAPA,OAAO;IAAEF,aAAa,SAAbA,aAAa;EAAA,OAAQE,OAAO,IAAI,CAACF,aAAa,8JAW3D;AAAA,EACF;AAED,IAAMK,iBAAiB,gBAAGhB,GAAG,8EACXC,MAAM,CAACkB,WAAW,EACdlB,MAAM,CAACmB,MAAM,CAACC,WAAW,EAEvBpB,MAAM,CAACmB,MAAM,CAACE,iBAAiB,CAEtD;AAED,IAAML,kBAAkB,gBAAGjB,GAAG,+CACZC,MAAM,CAACkB,WAAW,EACdlB,MAAM,CAACmB,MAAM,CAACG,eAAe,CAClD;AAED,IAAMR,mBAAmB,gBAAGf,GAAG,0EACbC,MAAM,CAACmB,MAAM,CAACI,aAAa,EACvBvB,MAAM,CAACwB,KAAK,EAEdxB,MAAM,CAACmB,MAAM,CAACE,iBAAiB,CAElD;AAED,IAAMJ,oBAAoB,gBAAGlB,GAAG,+CACdC,MAAM,CAACmB,MAAM,CAACG,eAAe,EACzBtB,MAAM,CAACwB,KAAK,CACjC;AAED,IAAMb,iBAAiB,gBAAGZ,GAAG,yHASLC,MAAM,CAACwB,KAAK,CAEnC;AAED,OAAO,IAAMC,YAAY,gBAAG3B,MAAM,CAACW,IAAI,oBAEtC;AAID,OAAO,IAAMiB,YAAY,gBAAG5B,MAAM,CAAC6B,KAAK,qGACpCtB,QAAQ,CAACuB,IAAI,EACb3B,kBAAkB,EAClBG,kBAAkB,EAGX;EAAA,IAAGS,QAAQ,SAARA,QAAQ;EAAA,OAAOA,QAAQ,GAAGb,MAAM,CAACmB,MAAM,CAACG,eAAe,GAAGtB,MAAM,CAAC6B,KAAK,CAACC,iBAAiB;AAAA,EAIrG"}