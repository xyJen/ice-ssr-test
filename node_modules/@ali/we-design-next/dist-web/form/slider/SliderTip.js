import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["point", "isMove", "formatter", "bgColor", "textColor", "style"];
import React, { memo, useMemo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { COLORS, mergeRestProps } from "../../common";
import { PointTip } from "./styled";
export var SliderTip = /*#__PURE__*/memo(function (props) {
  var _props$point = props.point,
    point = _props$point === void 0 ? 0 : _props$point,
    isMove = props.isMove,
    formatter = props.formatter,
    _props$bgColor = props.bgColor,
    bgColor = _props$bgColor === void 0 ? 'rgba(22, 22, 22, 0.88)' : _props$bgColor,
    _props$textColor = props.textColor,
    textColor = _props$textColor === void 0 ? COLORS.WHITE : _props$textColor,
    style = props.style,
    rest = _objectWithoutPropertiesLoose(props, _excluded);
  var tipStyle = useMemo(function () {
    return {
      backgroundColor: bgColor,
      color: textColor
    };
  }, [bgColor, textColor]);
  return /*#__PURE__*/_createElement(PointTip, _extends({}, mergeRestProps(_extends({}, rest, {
    style: tipStyle
  }), ''), {
    role: isMove ? 'move' : 'hide'
  }), formatter ? formatter(point) : point);
});
SliderTip.displayName = 'sliderTip';
//# sourceMappingURL=SliderTip.js.map