import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["start", "end", "sliderLength", "disable", "lineBgColor", "lineBgColorDisabled", "lineColor", "lineColorDisabled", "style"];
import React, { memo, useMemo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { COLORS, mergeRestProps } from "../../common";
import { StyledSliderLine, LineContent } from "./styled";
export var SliderLine = /*#__PURE__*/memo(function (props) {
  var _props$start = props.start,
    start = _props$start === void 0 ? 0 : _props$start,
    _props$end = props.end,
    end = _props$end === void 0 ? 0 : _props$end,
    _props$sliderLength = props.sliderLength,
    sliderLength = _props$sliderLength === void 0 ? 0 : _props$sliderLength,
    disable = props.disable,
    _props$lineBgColor = props.lineBgColor,
    lineBgColor = _props$lineBgColor === void 0 ? COLORS.COMMON.LINE_HARD_COLOR : _props$lineBgColor,
    _props$lineBgColorDis = props.lineBgColorDisabled,
    lineBgColorDisabled = _props$lineBgColorDis === void 0 ? COLORS.COMMON.LINE_HARD_COLOR : _props$lineBgColorDis,
    _props$lineColor = props.lineColor,
    lineColor = _props$lineColor === void 0 ? COLORS.DING_BLUR : _props$lineColor,
    _props$lineColorDisab = props.lineColorDisabled,
    lineColorDisabled = _props$lineColorDisab === void 0 ? COLORS.LIGHT.LEVEL3_BASE_COLOR : _props$lineColorDisab,
    style = props.style,
    rest = _objectWithoutPropertiesLoose(props, _excluded);
  var left = start > end ? end : start;
  var length = Math.abs(start - end);
  var bgLineStyle = useMemo(function () {
    return _extends({
      background: disable ? lineBgColorDisabled : lineBgColor
    }, style);
  }, [disable, lineBgColorDisabled, lineBgColor, style]);
  return /*#__PURE__*/_createElement(StyledSliderLine, mergeRestProps(_extends({}, rest, {
    style: bgLineStyle
  }), ''), /*#__PURE__*/_createElement(LineContent, {
    role: "content",
    style: {
      background: disable ? lineColorDisabled : lineColor,
      left: left / sliderLength * 100 + "%",
      width: length / sliderLength * 100 + "%"
    }
  }));
});
SliderLine.displayName = 'sliderLine';
//# sourceMappingURL=SliderLine.js.map