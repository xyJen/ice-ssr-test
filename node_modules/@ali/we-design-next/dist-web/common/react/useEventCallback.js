/**
 * 生成固定的 event callback 函数，替代 useCallback，避免因 state/props 变化而频繁更新事件，提高性能
 * 源自 UseEvent 提案中提到的「足够接近(close enough)的实现」
 * 
 * 提案：https://github.com/reactjs/rfcs/pull/220
 * 实现：https://github.com/Volune/use-event-callback/blob/master/src/index.ts
 */

import { useLayoutEffect, useMemo, useRef } from 'react';
export var useEventCallback = function useEventCallback(fn) {
  var fnRef = useRef(fn);
  useLayoutEffect(function () {
    fnRef.current = fn;
  });
  return useMemo(function () {
    return function () {
      var current = fnRef.current;
      return current.apply(void 0, arguments);
    };
  }, []);
};
//# sourceMappingURL=useEventCallback.js.map