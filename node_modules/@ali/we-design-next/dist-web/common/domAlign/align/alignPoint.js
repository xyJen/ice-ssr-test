import _extends from "@babel/runtime/helpers/extends";
import { utils } from "../utils/utils";
import { domUtils } from "../utils/dom-utils";
import { getRectOfSource, getDestinationRect, alignRect } from "./alignRect";
/**
 * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.
 * If client position provided, will internal convert to page position.
 */

function alignPoint(el, tgtPoint, align) {
  var pageX;
  var pageY;
  var doc = utils.getDocument(el);
  // 根据 quirksmode，IE 9 以下版本不支持 defaultView.
  var win = doc.defaultView || doc.parentWindow;
  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = domUtils.viewportWidth(win);
  var viewportHeight = domUtils.viewportHeight(win);
  if ('pageX' in tgtPoint) {
    pageX = tgtPoint.pageX;
  } else {
    pageX = scrollX + tgtPoint.clientX;
  }
  if ('pageY' in tgtPoint) {
    pageY = tgtPoint.pageY;
  } else {
    pageY = scrollY + tgtPoint.clientY;
  }
  var tgtRegion = {
    left: pageX,
    top: pageY,
    width: 0,
    height: 0
  };
  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;

  // Provide default target point
  var points = [align.points[0], 'cc'];
  var newAlign = _extends({}, align, {
    points: points
  });
  var srcInfo = getRectOfSource(el, newAlign);
  var tgtInfo = [tgtRegion, pointInView];
  var destInfo = getDestinationRect(srcInfo, tgtInfo, newAlign);
  alignRect(el, destInfo, newAlign);
  return destInfo;
}
export default alignPoint;
//# sourceMappingURL=alignPoint.js.map