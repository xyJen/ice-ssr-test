import '@testing-library/jest-dom';
import { getDestinationRect } from "../";
var alignOptions = [
// ['tl','tl'],
// ['tl','cl'],
['tl', 'bl'],
// ['tl','tc'],
// ['tl','cc'],
// ['tl','bc'],
['tl', 'tr'],
// ['tl','cr'],
// ['tl','br'],

// ['tc','tl'],
// ['tc','cl'],
// ['tc','bl'],
// ['tc','tc'],
// ['tc','cc'],
['tc', 'bc']
// ['tc','tr'],
// ['tc','cr'],
// ['tc','br'],

// ['tr','tl'],
// ['tr','cl'],
// ['tr','bl'],
// ['tr','tc'],
// ['tr','cc'],
// ['tr','bc'],
// ['tr','tr'],
// ['tr','cr'],
// ['tr','br'],

// ['cl','tl'],
// ['cl','cl'],
// ['cl','bl'],
// ['cl','tc'],
// ['cl','cc'],
// ['cl','bc'],
// ['cl','tr'],
// ['cl','cr'],
// ['cl','br'],

// ['cc','tl'],
// ['cc','cl'],
// ['cc','bl'],
// ['cc','tc'],
// ['cc','cc'],
// ['cc','bc'],
// ['cc','tr'],
// ['cc','cr'],
// ['cc','br'],

// ['cr','tl'],
// ['cr','cl'],
// ['cr','bl'],
// ['cr','tc'],
// ['cr','cc'],
// ['cr','bc'],
// ['cr','tr'],
// ['cr','cr'],
// ['cr','br'],

// ['bl','tl'],
// ['bl','cl'],
// ['bl','bl'],
// ['bl','tc'],
// ['bl','cc'],
// ['bl','bc'],
// ['bl','tr'],
// ['bl','cr'],
// ['bl','br'],

// ['bc','tl'],
// ['bc','cl'],
// ['bc','bl'],
// ['bc','tc'],
// ['bc','cc'],
// ['bc','bc'],
// ['bc','tr'],
// ['bc','cr'],
// ['bc','br'],

// ['br','tl'],
// ['br','cl'],
// ['br','bl'],
// ['br','tc'],
// ['br','cc'],
// ['br','bc'],
// ['br','tr'],
// ['br','cr'],
// ['br','br'],
];

var alignOptionsLen = alignOptions.length;
var overflowOptions = [{
  adjustX: false,
  adjustY: false,
  resizeWidth: false,
  resizeHeight: false
}, {
  adjustX: true,
  adjustY: true,
  resizeWidth: false,
  resizeHeight: false
}, {
  adjustX: true,
  adjustY: true,
  resizeWidth: true,
  resizeHeight: true
}];
var overflowOptionsLen = overflowOptions.length;
var contentCanBeAccommodatedResult = [[{
  left: 56,
  top: 106,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 56,
  top: 106,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 56,
  top: 106,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}], [{
  left: 156,
  top: 56,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 156,
  top: 56,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 156,
  top: 56,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}], [{
  left: 61,
  top: 106,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 61,
  top: 106,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 61,
  top: 106,
  width: 90,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}]];
test('DomAlign: target in visibleRect, content can be accommodated ', function () {
  var srcInfo = [{
    left: 56,
    top: 156,
    width: 90,
    height: 40
  }, {
    left: 0,
    right: 700,
    top: 0,
    bottom: 500
  }, 90, 40];
  var tgtInfo = [{
    left: 56,
    top: 56,
    width: 100,
    height: 50
  }, true];
  for (var i = 0; i < alignOptionsLen; i++) {
    for (var j = 0; j < overflowOptionsLen; j++) {
      var align = {
        points: alignOptions[i],
        overflow: overflowOptions[j]
      };
      var destRect = getDestinationRect(srcInfo, tgtInfo, align);
      expect(destRect).toEqual(contentCanBeAccommodatedResult[i][j]);
    }
  }
});
var contentCannotBeAccommodatedButFlipDoesResult = [[{
  left: 556,
  top: 476,
  width: 200,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 456,
  top: 386,
  width: 200,
  height: 40,
  hasAdjustedX: true,
  hasAdjustedY: true,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 456,
  top: 386,
  width: 200,
  height: 40,
  hasAdjustedX: true,
  hasAdjustedY: true,
  hasResizedWidth: false,
  hasResizedHeight: false
}], [{
  left: 656,
  top: 426,
  width: 200,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 356,
  top: 426,
  width: 200,
  height: 40,
  hasAdjustedX: true,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 356,
  top: 426,
  width: 200,
  height: 40,
  hasAdjustedX: true,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}], [{
  left: 506,
  top: 476,
  width: 200,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: false,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 506,
  top: 386,
  width: 200,
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: true,
  hasResizedWidth: false,
  hasResizedHeight: false
}, {
  left: 506,
  top: 386,
  width: 200,
  // 这里实际上可能需要resize，但是因为tc bc不是主轴，可以忽略，不处理
  height: 40,
  hasAdjustedX: false,
  hasAdjustedY: true,
  hasResizedWidth: false,
  hasResizedHeight: false
}]];
test('DomAlign: target in visibleRect, content cannot be accommodated but flip does', function () {
  var srcInfo = [{
    left: 56,
    top: 56,
    width: 200,
    height: 40
  }, {
    left: 0,
    right: 700,
    top: 0,
    bottom: 500
  }, 200, 40];
  var tgtInfo = [{
    left: 556,
    top: 426,
    width: 100,
    height: 50
  }, true];
  for (var i = 0; i < alignOptionsLen; i++) {
    for (var j = 0; j < overflowOptionsLen; j++) {
      var align = {
        points: alignOptions[i],
        overflow: overflowOptions[j]
      };
      var destRect = getDestinationRect(srcInfo, tgtInfo, align);
      expect(destRect).toEqual(contentCannotBeAccommodatedButFlipDoesResult[i][j]);
    }
  }
});

/**
 * 原来算法的翻转逻辑后面可能需要改动，这个case目前跑不通，先不考虑
 */
// const contentCannotBeAccommodatedAndViceVersaResult = [
//   [
//     {
//       left: 56,
//       top: 96,
//       width: 200,
//       height: 60,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: false,
//       hasResizedHeight: false
//     },
//     {
//       left: 56,
//       top: 96,
//       width: 200,
//       height: 60,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: false,
//       hasResizedHeight: false
//     },
//     {
//       left: 56,
//       top: 96,
//       width: 144,
//       height: 4,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: true,
//       hasResizedHeight: true
//     },
//   ],
//   [
//     {
//       left: 156,
//       top: 46,
//       width: 200,
//       height: 60,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: false,
//       hasResizedHeight: false
//     },
//     {
//       left: 156,
//       top: 46,
//       width: 200,
//       height: 60,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: false,
//       hasResizedHeight: false
//     },
//     {
//       left: 156,
//       top: 46,
//       width: 44,
//       height: 54,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: true,
//       hasResizedHeight: true
//     },
//   ],
//   [
//     {
//       left: 6,
//       top: 96,
//       width: 200,
//       height: 60,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: false,
//       hasResizedHeight: false
//     },
//     {
//       left: 6,
//       top: 96,
//       width: 200,
//       height: 60,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: false,
//       hasResizedHeight: false
//     },
//     {
//       left: 506,
//       top: 586,
//       width: 194,
//       height: 4,
//       hasAdjustedX: false,
//       hasAdjustedY: false,
//       hasResizedWidth: true,
//       hasResizedHeight: true
//     },
//   ]
// ];

// test('DomAlign: target in visibleRect, content cannot be accommodated and vice versa', () => {
//   const srcInfo: SourceInfo = [
//     { left: 56, top: 156, width: 200, height: 60 },
//     { left: 0, right: 200, top: 0, bottom: 100 },
//     200,
//     60,
//   ];
//   const tgtInfo: TargetInfo = [{left: 56, top: 46, width: 100, height: 50}, true];

//   for (let i = 0; i < alignOptionsLen; i++) {
//     for (let j = 0; j < overflowOptionsLen; j++) {
//       const align: IAlign = {
//         points: alignOptions[i],
//         overflow: overflowOptions[j],
//       }
//       const destRect = getDestinationRect(srcInfo, tgtInfo, align);
//       expect(destRect).toEqual(contentCannotBeAccommodatedAndViceVersaResult[i][j]);
//     }
//   }
// });
//# sourceMappingURL=DomAlign.test.js.map