{"version":3,"file":"index.js","names":["React","useRef","useState","useEffect","useCallback","useContext","useMemo","throttle","noop","ToolbarContextProvider","ToolbarContext","DoubleLineRowContext","SingleLineWrapper","DoubleLineWrapper","ResizeObserver","splitDoubleLineItemByLength","splitSingleLineItemByLength","BaseIconButton","IconMore","Popover","IS_NODE","IS_UITEST","TOOLBAR_WIDTH_FOR_UITEST","useTranslate","noopElements","overLayStyle","padding","width","borderRadius","useSplitItems","items","splitFun","fold","onLayoutRender","ref","undefined","itemNodes","setItemNodes","resetNodes","setResetNodes","flagRef","setToolbarWidth","dom","current","domClientWidth","clientWidth","currentItems","resetItems","resizeHandle","currentWidth","setTimeout","resizeObserver","observe","cancel","disconnect","MoreBtn","memo","props","t","visible","setVisible","visibleRef","document","body","onClick","trailing","content","size","renderSingleLineGroupItems","res","i","length","group","push","SingLineItemLayoutContent","align","autoFold","background","nodes","restItems","overLayWrapperStyle","SingLineItemLayout","renderDoubleLineGroupItems","isBeforeWithDivider","Array","isArray","DoubleLineItemLayoutContent","DoubleLineItemLayout"],"sources":["../../../../../../../src/navigator/toolbar/layout/toolbarLayout/itemLayout/index.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect, ReactElement, useCallback, useContext, useMemo } from 'react';\nimport { throttle, noop } from 'lodash-es';\nimport { ToolbarContextProvider, ToolbarContext, DoubleLineRowContext  } from '../../contexts';\nimport { SingleLineWrapper, DoubleLineWrapper } from './style';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport type { ISingLineItems, IDoubleLineItems, DoubleLineGroup } from '../interface';\nimport { splitDoubleLineItemByLength, splitSingleLineItemByLength } from './splitItemByLength';\nimport { BaseIconButton } from '../../../baseItem/iconButton/BaseIconButton';\nimport { IconMore } from '../../../../../basic/icon';\nimport { Popover } from '../../../../../display/popover';\nimport { IS_NODE, IS_UITEST, TOOLBAR_WIDTH_FOR_UITEST } from '../constants';\nimport { useTranslate } from '../../../../../locale';\n\nconst noopElements: any[] = [];\n\nconst overLayStyle: React.CSSProperties = { padding: 4, width: 'max-content', borderRadius: 4 };\n\nconst useSplitItems = <T, >(\n  items: T,\n  splitFun: (item: T, length: number) => ([T] | [T, T]),\n  fold: boolean,\n  onLayoutRender: () => void,\n): [React.RefObject<HTMLDivElement>, T | undefined, T | undefined] => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [itemNodes, setItemNodes] = useState<T | undefined>((!IS_NODE && fold) ? undefined : items);\n  const [resetNodes, setResetNodes] = useState<T | undefined>(undefined);\n  const flagRef = useRef({ width: 0 });\n\n  const { setToolbarWidth } = useContext(ToolbarContext);\n\n  useEffect(() => {\n    if (!fold) {\n      setItemNodes(items);\n      return;\n    }\n    const dom = ref.current;\n    if (!dom) { return; }\n    const domClientWidth = (IS_NODE || IS_UITEST) ? TOOLBAR_WIDTH_FOR_UITEST : dom.clientWidth;\n    setToolbarWidth(domClientWidth);\n    const [currentItems, resetItems] = splitFun(items, domClientWidth);\n    flagRef.current.width = domClientWidth;\n\n    setItemNodes(currentItems);\n    setResetNodes(resetItems);\n    \n    const resizeHandle = throttle(() => {\n      \n      const currentWidth = ref.current?.clientWidth;\n\n      if (!currentWidth) { return; }\n      if (currentWidth === flagRef.current.width) { return; }\n      flagRef.current.width = currentWidth;\n      setToolbarWidth(currentWidth);\n      const [currentItems, resetItems] = splitFun(items, currentWidth);\n      setItemNodes(currentItems);\n      setResetNodes(resetItems);\n      setTimeout(onLayoutRender, 0);\n    }, 0);\n\n \n    const resizeObserver = new ResizeObserver(() => {  resizeHandle(); });\n\n    resizeObserver.observe(ref.current);\n\n    return () => {\n      resizeHandle.cancel();\n      resizeObserver.disconnect();\n    };\n\n  }, [items, setToolbarWidth]);\n\n  useEffect(() => {\n    if ((onLayoutRender !== noop) && itemNodes) {\n      onLayoutRender();\n    }\n  }, [itemNodes, resetNodes]);\n\n  return [ref, itemNodes, resetNodes];\n};\n\nconst MoreBtn = React.memo<{\n  content: ReactElement;\n  size: 'large' | 'normal';\n}>((props) => {\n\n  const t = useTranslate();\n\n  const [visible, setVisible] = useState(false);\n  const visibleRef = useRef(false);\n  visibleRef.current = visible;\n\n  useEffect(() => {\n \n    const resizeObserver = new ResizeObserver(() => {  setVisible(false); });\n\n    resizeObserver.observe(document.body);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n\n  }, []);\n\n  const onClick = useCallback(throttle(() => {\n    setVisible(!visibleRef.current);\n  }, 500, { trailing: false }), []);\n\n  return (\n    <Popover\n      content={props.content}\n      placement=\"bottomRight\"\n      visible={visible}\n      onVisibleChange={setVisible}\n      animation\n    >\n      <div className='wdn-toolbar-more'>\n        <BaseIconButton\n          onClick={onClick}\n          active={visible}\n          icon={<IconMore />}\n          title={t('wdn_more')}\n          size={props.size}\n        />\n      </div>\n    </Popover>\n  );\n});\n\nfunction renderSingleLineGroupItems(items: ISingLineItems, ) {\n  const res: React.ReactElement[] = [];\n  for (let i = 0; i < items.length; i++) {\n    const group = items[i];\n    if (group === 'divider') { continue; }\n    res.push(\n      <div className={(items[i + 1] === 'divider') ? 'wdn-toolbar-group divider' : 'wdn-toolbar-group'}>\n        {group}\n      </div>\n    );\n  }\n  return res;\n}\n\ninterface ILayoutProps {\n  onLayoutRender: () => void;\n  background?: string | number;\n  align: 'left' | 'center',  autoFold: boolean;\n}\n\nexport const SingLineItemLayoutContent = React.memo<{ items: ISingLineItems } & ILayoutProps>((props) => {\n  const { items, align, autoFold, onLayoutRender, background } = props;\n\n  const [ref, itemNodes, resetNodes] = useSplitItems(items, splitSingleLineItemByLength, autoFold, onLayoutRender);\n\n  const nodes = itemNodes && renderSingleLineGroupItems(itemNodes);\n\n  const restItems = resetNodes && renderSingleLineGroupItems(resetNodes);\n\n  const overLayWrapperStyle: React.CSSProperties = useMemo(() => {\n    return background ? ({ ...overLayStyle, background }) : overLayStyle;\n  }, [background]);\n\n  return  (\n    <SingleLineWrapper className={`${align} toolbar-left single`} ref={ref}>\n      {nodes}\n      {restItems && <MoreBtn size=\"normal\" content={<SingleLineWrapper style={overLayWrapperStyle}>{restItems}</SingleLineWrapper>} />}\n    </SingleLineWrapper>\n  );\n});\n\nexport const SingLineItemLayout = React.memo<{ items: ISingLineItems } & ILayoutProps>((props) => {\n  return  (\n    <ToolbarContextProvider mode=\"singleLine\">\n      <SingLineItemLayoutContent {...props} />\n    </ToolbarContextProvider>\n  );\n});\n\nfunction renderDoubleLineGroupItems(items: IDoubleLineItems) {\n  const res: ReactElement[] = [];\n  for (let i = 0; i < items.length; i++) {\n    const group = items[i];\n    if (group === 'divider') { continue; }\n    const isBeforeWithDivider = (items[i + 1] === 'divider');\n    if (Array.isArray(group[0])) {\n      res.push(\n        <div className={isBeforeWithDivider ? 'wdn-toolbar-row-group divider' : 'wdn-toolbar-row-group' }>\n          <DoubleLineRowContext.Provider value>\n            <div className='wdn-toolbar-row'>{group[0]}</div>\n            <div className='wdn-toolbar-row'>{group[1]}</div>\n          </DoubleLineRowContext.Provider>\n        </div>\n      );\n    } else {\n      res.push(\n        <div className={isBeforeWithDivider ? 'wdn-toolbar-group divider' : 'wdn-toolbar-group'}>\n          {group}\n        </div>\n      );\n    }\n  }\n  return res;\n}\n\nconst DoubleLineItemLayoutContent: React.FC<{items: IDoubleLineItems } & ILayoutProps> = (props) => {\n  const { items, align, autoFold, onLayoutRender, background } = props;\n\n  const [ref, itemNodes, resetNodes] = useSplitItems<IDoubleLineItems>(items, splitDoubleLineItemByLength, autoFold, onLayoutRender);\n\n  const nodes = itemNodes && renderDoubleLineGroupItems(itemNodes);\n\n  const resetItems = resetNodes && renderDoubleLineGroupItems(resetNodes);\n  \n  const overLayWrapperStyle: React.CSSProperties = useMemo(() => {\n    return background ? ({ ...overLayStyle, background }) : overLayStyle;\n  }, [background]);\n\n  return  (\n    <DoubleLineWrapper className={`${align} toolbar-left double`} ref={ref}>\n      {nodes}\n      {resetNodes && <MoreBtn size=\"large\" content={<DoubleLineWrapper style={overLayWrapperStyle}>{resetItems}</DoubleLineWrapper>} />}\n    </DoubleLineWrapper>\n  );\n}\n\nexport const DoubleLineItemLayout = React.memo<{ items: IDoubleLineItems } & ILayoutProps>((props) => {\n\n  return  (\n    <ToolbarContextProvider mode=\"doubleLine\">\n      <DoubleLineItemLayoutContent {...props} />\n    </ToolbarContextProvider>\n  );\n});\n\n"],"mappings":"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"}