import React, { useCallback } from "react";
var _createElement = /*#__PURE__*/React.createElement;
import styled from "styled-components";
import { useTranslate } from "../../../../locale";
var DownloadTip = /*#__PURE__*/styled.span(["&.downloading{cursor:unt-allowed;:hover{color:unset;}}cursor:pointer;:hover{color:rgba(17,31,44,1);}"]);
export var DownloadButton = function DownloadButton(props) {
  var status = props.status,
    fontFamily = props.fontFamily;
  var t = useTranslate();
  var handleDownload = useCallback(function (e) {
    if (status === 'unDownload') {
      props.handleDownload(fontFamily);
    }
    e.stopPropagation();
  }, [props.handleDownload]);
  var downloading = status === 'downloading';
  return /*#__PURE__*/_createElement(DownloadTip, {
    id: "1",
    status: status,
    onClick: handleDownload,
    className: downloading ? 'downloading' : undefined
  }, downloading ? t('wdn_downloading') : t('wdn_download'));
};
//# sourceMappingURL=DownloadButton.js.map