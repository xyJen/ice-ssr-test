{"version":3,"file":"BaseTextSelect.js","names":["React","useMemo","Select","styled","ToolbarHoverTip","useDefaultProp","COLORS","mergeClassName","SelectWrapper","TRANSPARENT","renderValue","title","overflow","textOverflow","overflowWrap","whiteSpace","BseIconSelect","memo","props","tooltip","mode","disabled","size","options","overlayVisible_","overlayVisible","onVisibleChange","width","value","onChange","renderOption","renderValue_","testid","role","keyboard","setOverlayVisible","style","s","height","i","length","t","key","undefined"],"sources":["../../../../../../src/navigator/toolbar/baseItem/textSelect/BaseTextSelect.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Select } from '../../../../form/select';\nimport type { IBaseSelectProps } from './interface';\nimport styled from 'styled-components';\nimport { ToolbarHoverTip } from '../../toolbarHoverTip';\nimport { useDefaultProp, COLORS, mergeClassName } from '../../../../common';\n\n\nconst SelectWrapper = styled(Select)`\n  &.normal .wdn-select-normal,&.normal  .wdn-select-input {\n    height: 28px;\n    background: ${COLORS.TRANSPARENT};\n    &:hover{ background: rgba(25, 31, 37, 0.08) };\n  }\n\n  &.small .wdn-select-normal,&.small .wdn-select-input {\n    height: 24px;\n    background: rgb(255, 255, 255);\n    border: 1px solid rgb(17, 31, 44, 0.12)!important;\n    box-shadow: unset!important;\n    /* &:hover{ background: rgba(25, 31, 37, 0.08) }; */\n  }\n    \n  input {\n    background: ${COLORS.TRANSPARENT};\n  }\n  span:not(.wdn-toolbar-select-value) {\n    margin: 0;\n    svg {\n      transition: transform 500ms;\n      transform: rotate(0deg);\n      width: 8px;\n      height: 8px;\n    }\n  }\n`\n\nfunction renderValue (title?: React.ReactNode | string): IBaseSelectProps['renderValue'] {\n  return <div\n    style={{ overflow: 'hidden', textOverflow: 'ellipsis', overflowWrap: 'normal', whiteSpace: 'nowrap' }}\n  >\n    {title || ''}\n  </div>;\n};\n\nexport const BseIconSelect = React.memo((props: IBaseSelectProps) => {\n  const {\n    tooltip,\n    mode,\n    disabled,\n    size,\n    options,\n    overlayVisible: overlayVisible_,\n    onVisibleChange,\n    width,\n    value,\n    onChange,\n    renderOption,\n    renderValue: renderValue_,\n    testid,\n    role,\n    keyboard,\n  } = props;\n\n  const [overlayVisible, setOverlayVisible] = useDefaultProp(false, overlayVisible_, onVisibleChange);\n\n  const style = useMemo(() => {\n    const s: React.CSSProperties = size === 'normal' ? { height: 28, width } : { height: 24, width };\n    return s;\n  }, [size, width]);\n\n  const title = useMemo(() => {\n    if (value && options) {\n      for (let i = 0; i < options.length; i++) {\n        const t = options[i];\n        if (t === value) {\n          return t;\n        } else if ((typeof t === 'object') && ('key' in t) && (t.key === value)) {\n          // @ts-ignore\n          return (t.title as React.ReactNode | string ) || '';\n        }\n\n      }\n    }\n    return undefined;\n  }, [value, options]);\n\n  return (\n    <ToolbarHoverTip tooltip={tooltip} disabled={disabled} overlayVisible={overlayVisible}>\n      <SelectWrapper\n        className={mergeClassName('wdn-toolbar-item-select', 'wdn-toolbar-item', size, disabled && 'disabled')}\n        style={style}\n        disabled={disabled}\n        mode={mode}\n        bordered={false}\n        value={value}\n        onChange={onChange}\n        options={options}\n        visible={overlayVisible}\n        onVisibleChange={setOverlayVisible}\n        renderOption={renderOption}\n        renderValue={renderValue_ ? renderValue_ : (() => { return renderValue(title)})}\n        data-testid={testid}\n        data-role={role}\n        keyboard={keyboard}\n      />\n    </ToolbarHoverTip>\n\n  );\n});"],"mappings":"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"}