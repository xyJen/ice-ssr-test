{"version":3,"file":"BaseIconSelect.js","names":["React","useMemo","useCallback","Select","styled","ToolbarHoverTip","useDefaultProp","COLORS","mergeClassName","Tooltip","SelectWrapper","LIGHT","DAVINCI_BLUE_LIGHT_HOVER","DAVINCI_BLUE_LIGHT_ACTIVE","getSelectOptions","tbOption","key","prefix","icon","title","disabled","testid","renderValueByOPt","needTitle","node","BseIconSelect","memo","props","tooltip","size","options","overlayVisible_","overlayVisible","onVisibleChange","width","value","onChange","getContainer","role","keyboard","validOptMap","Map","validOptions","forEach","opt","push","group","items","item","set","optMap","opts","isNormal","style","s","height","Math","max","renderValue","get","a","renderOption","restOPt","optNode","option","setOverlayVisible"],"sources":["../../../../../../src/navigator/toolbar/baseItem/iconSelect/BaseIconSelect.tsx"],"sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { Select } from '../../../../form/select';\nimport type { ISelectProps, ISelectOption } from '../../../../form/select/Select';\nimport type { IBaseSelectProps, IOption } from './interface';\nimport styled from 'styled-components';\nimport { ToolbarHoverTip } from '../../toolbarHoverTip';\nimport { useDefaultProp } from '../../../../common/react/useDefaultProp';\nimport { COLORS, mergeClassName } from '../../../../common';\nimport { Tooltip } from '../../../../display/tooltip';\n\nexport type ISelectOptionGroup = {\n  title: string;\n  items: Array<ISelectOption>;\n};\n\nconst SelectWrapper = styled(Select)`\n  &.normal .wdn-select-normal,.wdn-select-input { height: 28px; padding-left: 0 }\n  &.small .wdn-select-normal,.wdn-select-input { height: 24px }\n\n  .wdn-select-normal {\n    padding-left: 2px;\n    :hover {\n      background: ${COLORS.LIGHT.DAVINCI_BLUE_LIGHT_HOVER};\n    }\n  }\n  &.active .wdn-select-normal {\n    background: ${COLORS.LIGHT.DAVINCI_BLUE_LIGHT_ACTIVE};\n  }\n\n  .wdn-toolbar-select-value {\n    display: flex;\n    line-height: 20px;\n    font-size: 12px;\n    align-items: center;\n    &>:not(:last-child){\n      flex-shrink: 0;\n    }\n    .title {\n      flex-shrink: 1;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n  span:not(.wdn-toolbar-select-value *) {\n    margin: 0;  \n    svg {\n      margin-right: -4px;\n      transition: transform 500ms;\n      transform: rotate(0deg);\n      width: 8px;\n      height: 8px;\n    }\n  }\n\n  &.disabled {\n    opacity: 0.35;\n  }\n  &.disabled * {\n    color: unset;\n  }\n`\n\nfunction getSelectOptions(tbOption: IOption) {\n  return {\n    key: tbOption.key,\n    prefix: tbOption.icon,\n    title: tbOption.title,\n    disabled: tbOption.disabled,\n    testid: tbOption.testid,\n  };\n}\n\nfunction renderValueByOPt(tbOption: IOption, needTitle: boolean): React.ReactElement {\n  const node = (\n    <div\n      className='wdn-toolbar-select-value'\n    >\n      {tbOption.icon}\n      {needTitle && <span className=\"title\">{tbOption.title}</span>}\n    </div>\n  );\n  return node;\n}\n\nexport const BseIconSelect = React.memo((props: IBaseSelectProps) => {\n  const {\n    tooltip,\n    disabled,\n    size,\n    options,\n    overlayVisible: overlayVisible_,\n    onVisibleChange,\n    width,\n    value,\n    onChange,\n    getContainer,\n    testid,\n    role,\n    keyboard,\n  } = props;\n\n  const [optMap, opts] = useMemo(() => {\n    const validOptMap = new Map<string, IOption>();\n    const validOptions: ISelectProps['options'] = [];\n    options.forEach((opt) => {\n      if (opt === 'divider') {\n        validOptions.push(opt);\n      } else if ('items' in opt) {\n        const group: ISelectOptionGroup = { items: [], title: opt.title };\n        opt.items.forEach((item) => {\n          validOptMap.set(item.key, item);\n          group.items.push(getSelectOptions(item));\n        });\n        validOptions.push(group);\n      } else {\n        validOptions.push(getSelectOptions(opt));\n        validOptMap.set(opt.key, opt);\n      }\n    });\n    return [validOptMap, validOptions];\n  }, [options]);\n\n  const isNormal = (size === 'normal') ;\n\n  const style = useMemo(() => {\n    const s: React.CSSProperties = isNormal ? { height: 28 } : { height: 24 };\n    if (isNormal) {\n      s.width = 37;\n    } else {\n      s.width = width ? Math.max(37, width) : 37;\n    }\n    return s;\n  }, [size, width]);\n\n  const renderValue = useCallback(() => {\n    const opt = value && optMap.get(value);\n    const a = opt ? renderValueByOPt(opt, isNormal ? false : (!!style.width && style.width > 37)) : null;\n    return a;\n  }, [value, optMap, isNormal, style]);\n\n  const renderOption = useCallback(({ key }: { key: string }) => {\n    const opt = optMap.get(key);\n    if (!opt) { return null; }\n    const { tooltip, title, ...restOPt } = opt;\n    const optNode = <Select.Option children={title} {...restOPt} />;\n    const option = tooltip ? <Tooltip placement=\"left\" title={tooltip}>{optNode}</Tooltip> : tooltip;\n    return option;\n  }, [value, optMap, isNormal]);\n\n  const [overlayVisible, setOverlayVisible] = useDefaultProp(false, overlayVisible_, onVisibleChange);\n\n  return (\n    <ToolbarHoverTip disabled={disabled} overlayVisible={overlayVisible} tooltip={tooltip}>\n      <SelectWrapper\n        renderValue={renderValue}\n        className={mergeClassName('wdn-toolbar-item-select wdn-toolbar-item', overlayVisible && 'active' , size, disabled && 'disabled')}\n        style={style}\n        renderOption={renderOption}\n        disabled={disabled}\n        bordered={false}\n        value={value}\n        onChange={onChange}\n        options={opts}\n        visible={overlayVisible}\n        onVisibleChange={setOverlayVisible}\n        getContainer={getContainer}\n        data-testid={testid}\n        data-role={role}\n        keyboard={keyboard}\n      />\n    </ToolbarHoverTip>\n  );\n});"],"mappings":"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"}