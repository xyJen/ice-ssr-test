{"version":3,"file":"LocationBar.js","names":["React","useEffect","useState","useRef","useMemo","isValidElement","LocationBarSlot","Slot","Priority","LocationBarWrap","LocationBarItemWrap","LocationBarGrower","SPACE_BWETEEN","ResizeObserver","sum","throttle","useEventCallback","isSlotEle","child","type","isSlotFixedEle","props","mode","isSlotDiscreteEle","isSlotDynamicEle","isSlotNonDynamicEle","extractAlignedSlots","children","p","align","widths","extractSlot","priority","key","width","i","length","map","filter","Boolean","extractStaticMeasureEles","res","push","staticMeasure","LocationBar","memo","_children","min","leftLevel","setLeftLevel","rightLevel","setRightLevel","undefined","leftDynamicWidth","setLeftDynamicWidth","rightDynamicWidth","setRightDynamicWidth","widthsRef","leftEles","current","rightEles","leftDynamicEle","find","rightDynamicEle","ref","leftDynamicMeasureRef","rightDynamicMeasureRef","onResize","getBoundingClientRect","leftWidth","Math","floor","rightWidth","compute","maxWidth","dynamicEle","dynamicMeasureRef","getStaticWidth","dw","hasDynamic","isControlled","expandedWidth","max","staticWidth","next","_","n","lp","ldw","rp","rdw","throttledOnResize","obs","observe","disconnect","staticMesaureEles","staticMeasureIdPrefix","Date","now","random","toString","isRenderingStaticEles","setIsRenderingStaticEles","k","div","document","getElementById","toMeasureSlots","sort","join","e","ele","isLeft","position","top","fn","left"],"sources":["../../../../src/navigator/location-bar/LocationBar.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, ReactElement, useMemo, isValidElement } from 'react';\nimport { LocationBarSlot as Slot } from './LocationBarSlot';\nimport { IPriority, Priority } from './LocationBarSlot';\nimport { LocationBarWrap, LocationBarItemWrap, LocationBarGrower, SPACE_BWETEEN } from './styled';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { sum, throttle } from 'lodash-es';\nimport { useEventCallback } from '../../common';\n\ntype ILocationBarProps = {\n  children: React.ReactNode[];\n};\n\ntype SlotEle = ReactElement<React.ComponentProps<typeof Slot>> & { key: string };\ntype SlotFixedEle = SlotEle & { props: { mode: 'fixed' } };\ntype SlotDiscreteEle = SlotEle & { props: { mode: 'discrete' } };\ntype SlotDynamicEle = SlotEle & { props: { mode: 'dynamic' } };\n\nconst isSlotEle = (child: React.ReactNode): child is SlotEle => React.isValidElement(child) && child.type === Slot;\nconst isSlotFixedEle = (child: SlotEle): child is SlotFixedEle => child.props.mode === 'fixed';\nconst isSlotDiscreteEle = (child: SlotEle): child is SlotDiscreteEle => child.props.mode === 'discrete';\nconst isSlotDynamicEle = (child: SlotEle): child is SlotDynamicEle => child.props.mode === 'dynamic';\nconst isSlotNonDynamicEle = (child: SlotEle): child is SlotFixedEle | SlotDiscreteEle => isSlotFixedEle(child) || isSlotDiscreteEle(child);\n\nconst extractAlignedSlots = (children: React.ReactNode[], p: IPriority, align: 'left' | 'right', mode: 'static' | 'dynamic' | 'both', widths: Record<string, number>): Array<[string, number, React.ReactElement] | 'left-dynamic' | 'right-dynamic'> => {\n\n  const extractSlot = (child: SlotFixedEle | SlotDiscreteEle, p: IPriority): [string, number, React.ReactElement] | null => {\n    if (isSlotFixedEle(child)) {\n      if (child.props.priority >= p) {\n        const key = child.key;\n        const width = typeof child.props.width === 'number' ? child.props.width : widths[key];\n        if (typeof width === 'number') {\n          return [key, width, child.props.children];\n        } else {\n          return null;\n        }\n      }\n      return null;\n    }\n    if (isSlotDiscreteEle(child)) {\n      const priority = child.props.priority;\n      for (let i = 0; i < priority.length; i++) {\n        if (priority[i] >= p) {\n          const key = child.key;\n          const width = typeof child.props.width[i] === 'number' ? child.props.width[i] : widths[key + '_' + priority[i]];\n          if (typeof width === 'number') {\n            return [key, width, child.props.children[i]];\n          } else {\n            return null;\n          }\n        }\n      }\n      return null;\n    }\n    return null;\n  };\n\n  return children.map(\n    (child, i) => {\n      if (isSlotEle(child) && child.props.align === align) {\n        if (isSlotNonDynamicEle(child)) {\n          return mode === 'dynamic' ? null : extractSlot(child, p);\n        } else if (isSlotDynamicEle(child)) {\n          return mode === 'static' ? null : child.props.align + '-dynamic';\n        }\n      }\n      return null;\n    }\n  ).filter(Boolean) as any;\n};\n\nconst extractStaticMeasureEles = (children: React.ReactNode[],): Array<[string, () => React.ReactNode]> => {\n\n  const res: Array<[string, () => React.ReactNode]> = [];\n\n  for (const child of children) {\n    if (isSlotEle(child) && isSlotNonDynamicEle(child)) {\n      if (isSlotFixedEle(child)) {\n        if (typeof child.props.width !== 'number') {\n          res.push([child.key, child.props.width.staticMeasure]);\n        }\n      } else if (isSlotDiscreteEle(child)) {\n        for (let i = 0; i < child.props.priority.length; i++) {\n          const p = child.props.priority[i];\n          const width = child.props.width[i];\n          if (typeof width !== 'number') {\n            res.push([child.key + '_' + p, width.staticMeasure]);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n};\n\nexport const LocationBar = React.memo(\n  (props: ILocationBarProps) => {\n\n    const {\n      children: _children\n    } = props;\n\n    const children = _children.filter(child => isValidElement(child) && child.type === Slot && typeof (child as any).key === 'string');\n\n    const [leftLevel, setLeftLevel] = useState<IPriority>(Priority.min());\n    const [rightLevel, setRightLevel] = useState<IPriority>(Priority.min());\n    const [leftDynamicWidth, setLeftDynamicWidth] = useState<number | undefined>(undefined);\n    const [rightDynamicWidth, setRightDynamicWidth] = useState<number | undefined>(undefined);\n\n    const widthsRef = useRef<Record<string, number>>({});\n\n    const leftEles = extractAlignedSlots(children, leftLevel, 'left', 'both', widthsRef.current);\n    const rightEles = extractAlignedSlots(children, rightLevel, 'right', 'both', widthsRef.current);\n\n    const leftDynamicEle = children.find(child => isSlotEle(child) && child.props.align === 'left' && isSlotDynamicEle(child)) as (SlotDynamicEle | undefined);\n    const rightDynamicEle = children.find(child => isSlotEle(child) && child.props.align === 'right' && isSlotDynamicEle(child)) as (SlotDynamicEle | undefined);\n\n    const ref = useRef<HTMLDivElement>(null);\n    const leftDynamicMeasureRef = useRef<HTMLDivElement>(null);\n    const rightDynamicMeasureRef = useRef<HTMLDivElement>(null);\n\n    // Handle Resize\n    const onResize = useEventCallback(() => {\n\n      if (ref.current) {\n\n        const width = ref.current.getBoundingClientRect().width;\n\n        const leftWidth = Math.floor(width * 0.5);\n        const rightWidth = Math.floor(width * 0.4);\n\n        const compute = (\n          maxWidth: number,\n          dynamicEle: SlotDynamicEle | undefined,\n          dynamicMeasureRef: React.RefObject<HTMLDivElement>,\n          getStaticWidth: (p: IPriority) => number,\n        ): [IPriority, number | undefined] => {\n\n          let p = Priority.min();\n          let dw: number | undefined = undefined;\n\n          const hasDynamic = dynamicEle && dynamicMeasureRef.current;\n          const isControlled = hasDynamic && dynamicEle.props.width === 'controlled';\n          const expandedWidth = hasDynamic ? dynamicMeasureRef.current.getBoundingClientRect().width : 0;\n\n          while (p !== Priority.max()) {\n            const staticWidth = getStaticWidth(p);\n\n            // 如果 maxWidth 大于 staticWidth\n            // 如果有动态组件\n            //    如果 isAutoWidth\n            //      动态组件优先级高：尝试全部撑开，失败则升高优先级，continue\n            //      动态组件优先级低：计算动态组件宽度，break\n            //    如果非 isAutoWidth\n            //      尝试全部撑开，失败则升高优先级，continue\n            // 如果没有动态组件，break(undefined)\n\n            if (maxWidth > staticWidth) {\n              if (hasDynamic) {\n                if (isControlled) {\n                  if (dynamicEle.props.priority >= p) {\n                    if (maxWidth > staticWidth + expandedWidth + SPACE_BWETEEN) {\n                      // 全部撑开成功\n                      dw = undefined;\n                      break;\n                    } else {\n                      // 全部撑开失败\n                      // dont break\n                    }\n                  } else {\n                    // 计算动态组件宽度\n                    dw = maxWidth - staticWidth - SPACE_BWETEEN;\n                    break;\n                  }\n                } else {\n                  if (maxWidth > staticWidth + expandedWidth + SPACE_BWETEEN) {\n                    // 全部撑开成功\n                    dw = expandedWidth;\n                    break;\n                  } else {\n                    // 全部撑开失败\n                    // dont break\n                  }\n                }\n              } else {\n                dw = undefined;\n                break;\n              }\n            }\n            p = Priority.next(p);\n          }\n          return [p, dw];\n        }\n\n        const [lp, ldw] = compute(\n          leftWidth,\n          leftDynamicEle,\n          leftDynamicMeasureRef,\n          p => sum(extractAlignedSlots(children, p, 'left', 'static', widthsRef.current).map(([_, n]) => n))\n        );\n        const [rp, rdw] = compute(\n          rightWidth,\n          rightDynamicEle,\n          rightDynamicMeasureRef,\n          p => sum(extractAlignedSlots(children, p, 'right', 'static', widthsRef.current).map(([_, n]) => n))\n        );\n\n        if (lp !== leftLevel) {\n          setLeftLevel(lp);\n        }\n        if (rp !== rightLevel) {\n          setRightLevel(rp);\n        }\n        if (ldw !== leftDynamicWidth) {\n          setLeftDynamicWidth(ldw);\n        }\n        if (rdw !== rightDynamicWidth) {\n          setRightDynamicWidth(rdw);\n        }\n      }\n    });\n    const throttledOnResize = useMemo(() => throttle(onResize, 500), [onResize]);\n    useEffect(() => {\n      if (ref.current) {\n        const obs = new ResizeObserver(throttledOnResize);\n        obs.observe(ref.current);\n        if (leftDynamicMeasureRef.current) {\n          obs.observe(leftDynamicMeasureRef.current);\n        }\n        if (rightDynamicMeasureRef.current) {\n          obs.observe(rightDynamicMeasureRef.current);\n        }\n        return () => {\n          obs.disconnect();\n        };\n      }\n    }, []);\n\n    const staticMesaureEles = extractStaticMeasureEles(children);\n    const staticMeasureIdPrefix = useMemo(() => (Date.now() % (1000 * 3600 * 24) * 10000 + Math.floor(Math.random() * 10000)).toString(32) + '_', []);\n    const [isRenderingStaticEles, setIsRenderingStaticEles] = useState<boolean>(staticMesaureEles.length > 0);\n\n    useEffect(() => {\n      if (isRenderingStaticEles) {\n        for (const [k] of staticMesaureEles) {\n          const div = document.getElementById(staticMeasureIdPrefix + k);\n          if (div) {\n            const { width } = div.getBoundingClientRect();\n            widthsRef.current[k] = width;\n          }\n          setIsRenderingStaticEles(false);\n        }\n      } else {\n        const toMeasureSlots = staticMesaureEles.filter(([k]) => widthsRef.current[k] === undefined);\n        if (toMeasureSlots.length > 0) {\n          setIsRenderingStaticEles(true);\n        }\n      }\n    }, [\n      isRenderingStaticEles,\n      [...staticMesaureEles].sort().map(([k]) => k).join(','),\n    ]);\n\n    return <LocationBarWrap ref={ref}>\n      {\n        [...leftEles, null, ...rightEles].map((e, i) => {\n          if (e === 'left-dynamic') {\n            return (leftDynamicEle && leftDynamicWidth !== -1) ?\n              <LocationBarItemWrap key={leftDynamicEle.key} align='left'>\n                {leftDynamicEle.props.children(leftDynamicWidth)}\n              </LocationBarItemWrap> :\n              null\n          } else if (e === 'right-dynamic') {\n            return (rightDynamicEle && rightDynamicWidth !== -1) ?\n              <LocationBarItemWrap key={rightDynamicEle.key} align='left'>\n                {rightDynamicEle.props.children(rightDynamicWidth)}\n              </LocationBarItemWrap>\n              : null\n          } else if (e === null) {\n            return <LocationBarGrower key=\"__wdn_locationbar_grower\"/>;\n          } else {\n            const [key, width, ele] = e;\n            const isLeft = i <= leftEles.length;\n            return <LocationBarItemWrap key={key} align={isLeft ? 'left' : 'right'} style={{ width }}>{ele}</LocationBarItemWrap>;\n          }\n        })\n      }\n      <div key=\"__wdn_locationbar_left_dynamic_measure\" ref={leftDynamicMeasureRef} style={{ position: 'absolute', top: -9999 }}>\n        {leftDynamicEle ? leftDynamicEle.props.children() : null}\n      </div>\n      <div key=\"__wdn_locationbar_right_dynamic_measure\" ref={rightDynamicMeasureRef} style={{ position: 'absolute', top: -9999 }}>\n        {rightDynamicEle ? rightDynamicEle.props.children() : null}\n      </div>\n      {\n        isRenderingStaticEles ?\n          staticMesaureEles\n            .filter(\n              ([k]) => widthsRef.current[k] === undefined\n            )\n            .map(\n              ([k, fn], p) => <div key={k} style={{ position: 'absolute', left: -9999, top: -9999 }} id={staticMeasureIdPrefix + k}>{fn()}</div>\n            )\n          : null\n      }\n    </LocationBarWrap>;\n  }\n);\n"],"mappings":"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"}