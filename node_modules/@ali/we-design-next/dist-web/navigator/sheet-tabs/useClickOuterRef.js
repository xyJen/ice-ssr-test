import { useRef, useEffect } from 'react';
export var contains = function contains(box, target) {
  if (!box || !target) {
    return false;
  }
  if (typeof box.contains === 'function') {
    return box.contains(target);
  }
  while (target) {
    if (target === box) return true;
    // eslint-disable-next-line no-param-reassign
    target = target.parentElement;
  }
  return false;
};
var noopCallback = function noopCallback() {};
export var useClickOuterRef = function useClickOuterRef(handler, on, eventName) {
  if (on === void 0) {
    on = true;
  }
  if (eventName === void 0) {
    eventName = 'click';
  }
  var ref = useRef(null);
  var callback = useRef(function () {});
  callback.current = handler || noopCallback;
  useEffect(function () {
    /**
     * 点击处理
     */
    var handleClickBody = function handleClickBody(event) {
      var isOuter = !ref.current || !event.target || !contains(ref.current, event.target);
      if (isOuter) {
        callback.current(event);
      }
    };
    if (on) {
      document.body.addEventListener(eventName, handleClickBody);
    }
    return function () {
      if (on) {
        document.body.removeEventListener(eventName, handleClickBody);
      }
    };
  }, [on, eventName]);
  return ref;
};
//# sourceMappingURL=useClickOuterRef.js.map