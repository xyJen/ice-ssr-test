{"version":3,"file":"InlineTab.js","names":["React","IconSelected","mergeClassName","HighlightText","ItemWrapper","ItemLeftWrapper","HideIcon","Tooltip","SearchHighlightItem","memo","props","searchValue","title","index","toLowerCase","indexOf","slice","length","InlineTab","disabled","tab","hidden","selected","onClick","tooltipTitle","className","rest","content","undefined"],"sources":["../../../../src/navigator/sheet-tabs/InlineTab.tsx"],"sourcesContent":["import React from \"react\";\nimport { IconSelected } from \"../../basic/icon\";\nimport { mergeClassName, IRestProps } from \"../../common\";\nimport { HighlightText, ItemWrapper, ItemLeftWrapper, HideIcon } from \"./styled\";\nimport type { TabInfo } from './SheetTabs';\nimport { Tooltip } from '../../display/tooltip/Tooltip';\n\ninterface ISearchHighlightItem {\n  searchValue?: string;\n  title: string;\n}\n\nconst SearchHighlightItem = React.memo((props: ISearchHighlightItem) => {\n  const { searchValue, title } = props;\n\n  if (!searchValue) {\n    return <>{title}</>;\n  }\n\n  const index = title.toLowerCase().indexOf(searchValue.toLowerCase());\n  if (index < 0) {\n    return <>{title}</>;\n  }\n\n  return (\n    <>\n      {title.slice(0, index)}\n      <HighlightText>\n        {title.slice(index, index + searchValue.length)}\n      </HighlightText>\n      {title.slice(index + searchValue.length)}\n    </>\n  );\n});\n\ntype IInlineTabProps = Omit<TabInfo, 'key'> & {\n  tab?: string;\n  disabled?: boolean;\n  searchValue?: string;\n  selected?: boolean;\n  onClick?: (key: string) => void;\n  tooltipTitle?: string | React.ReactNode;\n} & IRestProps;\n\nexport const InlineTab = React.memo((props: IInlineTabProps) => {\n  const { disabled, searchValue, tab = '', title, hidden, selected, onClick, tooltipTitle, className, ...rest } = props;\n\n  const content = (\n    <ItemWrapper\n      onClick={() => onClick?.(tab)}\n      className={mergeClassName(disabled ? \"disabled\" : undefined, className)}\n      {...rest}\n    >\n      <ItemLeftWrapper>\n        <SearchHighlightItem searchValue={searchValue} title={title} />\n        {hidden ? <HideIcon /> : null}\n      </ItemLeftWrapper>\n      {selected ? <IconSelected /> : null}\n    </ItemWrapper>\n  );\n\n  return tooltipTitle ? (\n    <Tooltip placement=\"top\" title={tooltipTitle}>\n      {content}\n    </Tooltip>\n  ) : content;\n});\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,qBACE;AAA5B,SAASC,YAAY;AACrB,SAASC,cAAc;AACvB,SAASC,aAAa,EAAEC,WAAW,EAAEC,eAAe,EAAEC,QAAQ;AAE9D,SAASC,OAAO;AAOhB,IAAMC,mBAAmB,gBAAGR,KAAK,CAACS,IAAI,CAAC,UAACC,KAA2B,EAAK;EACtE,IAAQC,WAAW,GAAYD,KAAK,CAA5BC,WAAW;IAAEC,KAAK,GAAKF,KAAK,CAAfE,KAAK;EAE1B,IAAI,CAACD,WAAW,EAAE;IAChB,oBAAO,qCAAGC,KAAK,CAAI;EACrB;EAEA,IAAMC,KAAK,GAAGD,KAAK,CAACE,WAAW,EAAE,CAACC,OAAO,CAACJ,WAAW,CAACG,WAAW,EAAE,CAAC;EACpE,IAAID,KAAK,GAAG,CAAC,EAAE;IACb,oBAAO,qCAAGD,KAAK,CAAI;EACrB;EAEA,oBACE,qCACGA,KAAK,CAACI,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,eACtB,eAAC,aAAa,QACXD,KAAK,CAACI,KAAK,CAACH,KAAK,EAAEA,KAAK,GAAGF,WAAW,CAACM,MAAM,CAAC,CACjC,EACfL,KAAK,CAACI,KAAK,CAACH,KAAK,GAAGF,WAAW,CAACM,MAAM,CAAC,CACvC;AAEP,CAAC,CAAC;AAWF,OAAO,IAAMC,SAAS,gBAAGlB,KAAK,CAACS,IAAI,CAAC,UAACC,KAAsB,EAAK;EAC9D,IAAQS,QAAQ,GAAgGT,KAAK,CAA7GS,QAAQ;IAAER,WAAW,GAAmFD,KAAK,CAAnGC,WAAW;IAAA,aAAmFD,KAAK,CAAtFU,GAAG;IAAHA,GAAG,2BAAG,EAAE;IAAER,KAAK,GAAkEF,KAAK,CAA5EE,KAAK;IAAES,MAAM,GAA0DX,KAAK,CAArEW,MAAM;IAAEC,QAAQ,GAAgDZ,KAAK,CAA7DY,QAAQ;IAAEC,QAAO,GAAuCb,KAAK,CAAnDa,OAAO;IAAEC,YAAY,GAAyBd,KAAK,CAA1Cc,YAAY;IAAEC,SAAS,GAAcf,KAAK,CAA5Be,SAAS;IAAKC,IAAI,iCAAKhB,KAAK;EAErH,IAAMiB,OAAO,gBACX,eAAC,WAAW;IACV,OAAO,EAAE;MAAA,OAAMJ,QAAO,oBAAPA,QAAO,CAAGH,GAAG,CAAC;IAAA,CAAC;IAC9B,SAAS,EAAElB,cAAc,CAACiB,QAAQ,GAAG,UAAU,GAAGS,SAAS,EAAEH,SAAS;EAAE,GACpEC,IAAI,gBAER,eAAC,eAAe,qBACd,eAAC,mBAAmB;IAAC,WAAW,EAAEf,WAAY;IAAC,KAAK,EAAEC;EAAM,EAAG,EAC9DS,MAAM,0CAAG,eAAC,QAAQ,OAAG,IAAG,IAAI,CACb,EACjBC,QAAQ,kDAAG,eAAC,YAAY,OAAG,IAAG,IAAI,CAEtC;EAED,OAAOE,YAAY,gBACjB,eAAC,OAAO;IAAC,SAAS,EAAC,KAAK;IAAC,KAAK,EAAEA;EAAa,GAC1CG,OAAO,CACA,GACRA,OAAO;AACb,CAAC,CAAC"}