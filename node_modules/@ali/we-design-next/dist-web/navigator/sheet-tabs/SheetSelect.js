var _ListIcon;
import React, { useState, useMemo, useCallback } from "react";
var _createElement = /*#__PURE__*/React.createElement;
import { Popover } from "../../display/popover";
import { Tooltip } from "../../display/tooltip";
import { Input } from "../../form/input";
import { mergeClassName, renderReactNode } from "../../common";
import { useTranslate } from "../../locale";
import { InlineTab } from "./InlineTab";
import { ListIcon, IconWrapper, SelectOverlay, ListWrapper, EmptyWrapper, InputWrapper } from "./styled";
var SHOW_SEARCH_INPUT_NUM = 10; // 超过10个工作表显示搜索框

export var SheetSelect = /*#__PURE__*/React.memo(function (props) {
  var tabs = props.tabs,
    tab = props.tab,
    setActiveTab = props.setActiveTab,
    disabled = props.disabled,
    renderInlineTab = props.renderInlineTab;
  var _useState = useState(false),
    visible = _useState[0],
    setVisible = _useState[1];
  var _useState2 = useState(""),
    searchValue = _useState2[0],
    setSearchValue = _useState2[1];
  var t = useTranslate();
  var searchedList = useMemo(function () {
    return tabs.filter(function (item) {
      return item.title.toLowerCase().includes(searchValue.toLowerCase());
    });
  }, [tabs, searchValue]);
  var onVisibleChange = useCallback(function (e) {
    if (disabled || e && visible) {
      setVisible(false);
      setSearchValue("");
    } else {
      setVisible(e);
      !e && setSearchValue("");
    }
  }, [visible, disabled]);
  var listButton = /*#__PURE__*/_createElement(IconWrapper, {
    className: mergeClassName(visible ? "active" : undefined, disabled ? "disabled" : undefined)
  }, _ListIcon || (_ListIcon = /*#__PURE__*/_createElement(ListIcon, null)));
  return /*#__PURE__*/_createElement(Popover, {
    trigger: "click",
    placement: "topLeft",
    animation: true,
    content: /*#__PURE__*/_createElement(SelectOverlay, null, tabs.length > SHOW_SEARCH_INPUT_NUM ? /*#__PURE__*/_createElement(InputWrapper, null, /*#__PURE__*/_createElement(Input, {
      placeholder: t('wdn_sheet_tabs_search'),
      value: searchValue,
      onChange: function onChange(e) {
        return setSearchValue(e.target.value);
      }
    })) : null, /*#__PURE__*/_createElement(ListWrapper, {
      className: mergeClassName(!!searchValue ? "searching" : undefined)
    }, searchedList.length > 0 ? searchedList.map(function (_tab) {
      return renderReactNode(renderInlineTab, /*#__PURE__*/_createElement(InlineTab, {
        key: _tab.key,
        tab: _tab.key,
        title: _tab.title,
        hidden: _tab.hidden,
        searchValue: searchValue,
        selected: _tab.key === tab,
        onClick: function onClick() {
          if (_tab.key === tab) return;
          setActiveTab(_tab.key);
          setVisible(false);
        }
      }), {
        key: _tab.key
      });
    }) : /*#__PURE__*/_createElement(EmptyWrapper, null, t('wdn_sheet_tabs_search_empty')))),
    visible: visible,
    onVisibleChange: onVisibleChange
  }, /*#__PURE__*/_createElement("div", {
    style: {
      height: '100%'
    }
  }, disabled ? listButton : /*#__PURE__*/_createElement(Tooltip, {
    title: t('wdn_sheet_tabs_all'),
    placement: "top"
  }, listButton)));
});
//# sourceMappingURL=SheetSelect.js.map