import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["separator", "routes", "children", "renderItem", "onBreadcrumbItemClick", "renderLastItem", "getOrCreateRef"];
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { cloneElement, useContext } from 'react';
import { toArray } from 'lodash-es';
import BreadcrumbItem from "./BreadcrumbItem";
import { Container, OverlayWrap } from "./styles";
import { SingleLineRowContext } from "./contexts";
import { Tooltip } from "../../display/tooltip";
function defaultRenderItem(route, routes, options) {
  var index = routes.indexOf(route);
  var isLastItem = index === routes.length - 1;
  var isEllipsis = (options == null ? void 0 : options.ellipisisIndex) === index;
  if (isLastItem && options != null && options.renderLastItem) {
    return options == null ? void 0 : options.renderLastItem(route, {
      maxWidth: isEllipsis ? options == null ? void 0 : options.ellipisisWidth : -1
    });
  }
  var ellipsisStyle = isEllipsis ? {
    maxWidth: options == null ? void 0 : options.ellipisisWidth,
    display: 'inline-block',
    overflow: 'hidden',
    textOverflow: 'ellipsis'
  } : {};
  var handleClick = function handleClick(e) {
    e.preventDefault();
    options == null ? void 0 : options.onBreadcrumbItemClick(route == null ? void 0 : route.path);
  };
  return isLastItem || options != null && options.hasOverlay || route.path === '' ? isEllipsis ? /*#__PURE__*/_createElement(Tooltip, {
    title: route == null ? void 0 : route.name,
    placement: 'top'
  }, /*#__PURE__*/_createElement("span", {
    style: ellipsisStyle
  }, route == null ? void 0 : route.name)) : /*#__PURE__*/_createElement("span", {
    style: ellipsisStyle
  }, route == null ? void 0 : route.name) : isEllipsis ? /*#__PURE__*/_createElement(Tooltip, {
    title: isEllipsis ? route == null ? void 0 : route.name : '',
    placement: 'top'
  }, /*#__PURE__*/_createElement("a", {
    href: "!#",
    onClick: handleClick,
    style: ellipsisStyle
  }, route == null ? void 0 : route.name)) : /*#__PURE__*/_createElement("a", {
    href: "!#",
    onClick: handleClick,
    style: ellipsisStyle
  }, route == null ? void 0 : route.name);
}
export var Breadcrumb = function Breadcrumb(_ref) {
  var _ref$separator = _ref.separator,
    separator = _ref$separator === void 0 ? '/' : _ref$separator,
    routes = _ref.routes,
    children = _ref.children,
    _ref$renderItem = _ref.renderItem,
    renderItem = _ref$renderItem === void 0 ? defaultRenderItem : _ref$renderItem,
    onBreadcrumbItemClick = _ref.onBreadcrumbItemClick,
    renderLastItem = _ref.renderLastItem,
    _ref$getOrCreateRef = _ref.getOrCreateRef,
    getOrCreateRef = _ref$getOrCreateRef === void 0 ? null : _ref$getOrCreateRef,
    restProps = _objectWithoutPropertiesLoose(_ref, _excluded);
  var _useContext = useContext(SingleLineRowContext),
    ellipisisIndex = _useContext.ellipisisIndex,
    ellipisisWidth = _useContext.ellipisisWidth;
  var crumbs;
  if (routes && routes.length > 0) {
    // generated by route
    var paths = [];
    crumbs = routes.map(function (route, index) {
      var path = route.path;
      if (path) {
        paths.push(path);
      }
      // generated overlay by route.children
      var overlay;
      var hasOverlay = route.children && route.children.length;
      if (route.children && route.children.length) {
        overlay = /*#__PURE__*/_createElement(OverlayWrap, null, /*#__PURE__*/_createElement(Container, null, /*#__PURE__*/_createElement("ol", null, route.children.map(function (child) {
          return /*#__PURE__*/_createElement(BreadcrumbItem, {
            separator: separator,
            key: path || child.name
          }, renderItem(child, routes, {
            renderLastItem: renderLastItem,
            onBreadcrumbItemClick: onBreadcrumbItemClick
          }));
        }))));
      }
      return getOrCreateRef ? /*#__PURE__*/_createElement(BreadcrumbItem, {
        getOrCreateRef: getOrCreateRef,
        overlay: overlay,
        separator: separator,
        key: path || route.name,
        index: index
      }, renderItem(route, routes, {
        renderLastItem: renderLastItem
      })) : /*#__PURE__*/_createElement(BreadcrumbItem, {
        overlay: overlay,
        separator: separator,
        key: path || route.name
      }, renderItem(route, routes, {
        ellipisisIndex: ellipisisIndex,
        ellipisisWidth: ellipisisWidth,
        hasOverlay: hasOverlay,
        renderLastItem: renderLastItem,
        onBreadcrumbItemClick: onBreadcrumbItemClick
      }));
    });
  } else if (children) {
    crumbs = toArray(children).map(function (element, index) {
      if (!element) {
        return element;
      }
      return /*#__PURE__*/cloneElement(element, {
        separator: separator,
        // eslint-disable-next-line react/no-array-index-key
        key: "separator-" + index
      });
    });
  }
  var breadcrumbClassName = 'bread';
  return /*#__PURE__*/_createElement("nav", _extends({
    className: breadcrumbClassName
  }, restProps), /*#__PURE__*/_createElement("ol", null, crumbs));
};
//# sourceMappingURL=Breadcrumb.js.map