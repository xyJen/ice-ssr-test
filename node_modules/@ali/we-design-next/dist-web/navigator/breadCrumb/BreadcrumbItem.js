import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "separator", "children", "overlay", "getOrCreateRef", "index"];
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useEffect } from 'react';
import { Popover } from "../../display/popover";
var BreadcrumbItem = /*#__PURE__*/React.memo(function (props) {
  var _props$prefixCls = props.prefixCls,
    prefixCls = _props$prefixCls === void 0 ? 'bread' : _props$prefixCls,
    _props$separator = props.separator,
    separator = _props$separator === void 0 ? '/' : _props$separator,
    children = props.children,
    overlay = props.overlay,
    getOrCreateRef = props.getOrCreateRef,
    index = props.index,
    restProps = _objectWithoutPropertiesLoose(props, _excluded);
  var localRef = React.useRef(null);
  useEffect(function () {
    index !== undefined && getOrCreateRef && getOrCreateRef(index, localRef);
  }, [index, getOrCreateRef]);

  /** If overlay is have Wrap a Dropdown */
  var renderBreadcrumbNode = function renderBreadcrumbNode(breadcrumbItem) {
    if (overlay) {
      return /*#__PURE__*/_createElement(Popover, {
        style: {
          marginTop: 16
        },
        content: overlay,
        placement: "bottomLeft",
        trigger: "mouse-enter"
      }, /*#__PURE__*/_createElement("span", {
        className: prefixCls + "-overlay-link"
      }, breadcrumbItem));
    }
    return breadcrumbItem;
  };
  var link;
  if ('href' in restProps) {
    link = /*#__PURE__*/_createElement("a", _extends({
      className: prefixCls + "-link"
    }, restProps), children);
  } else {
    link = /*#__PURE__*/_createElement("span", _extends({
      className: prefixCls + "-link"
    }, restProps), children);
  }

  // wrap to dropDown
  link = renderBreadcrumbNode(link);
  if (children) {
    return /*#__PURE__*/_createElement("li", {
      ref: localRef
    }, link, separator && /*#__PURE__*/_createElement("span", {
      className: prefixCls + "-separator"
    }, separator));
  }
  return null;
});
export default BreadcrumbItem;
//# sourceMappingURL=BreadcrumbItem.js.map