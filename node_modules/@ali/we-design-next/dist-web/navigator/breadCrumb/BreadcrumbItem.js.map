{"version":3,"file":"BreadcrumbItem.js","names":["React","useEffect","Popover","BreadcrumbItem","memo","props","prefixCls","separator","children","overlay","getOrCreateRef","index","restProps","localRef","useRef","undefined","renderBreadcrumbNode","breadcrumbItem","marginTop","link"],"sources":["../../../../src/navigator/breadCrumb/BreadcrumbItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Popover } from '../../display/popover';\n\nexport interface BreadcrumbItemProps {\n  prefixCls?: string;\n  separator?: React.ReactNode;\n  href?: string;\n  overlay?: React.ReactElement;\n  onClick?: React.MouseEventHandler<HTMLAnchorElement | HTMLSpanElement>;\n  className?: string;\n  children?: React.ReactNode;\n  getOrCreateRef?: (id: number, ref: React.MutableRefObject<HTMLLIElement | null>) => void;\n  index?: number;\n}\n\nconst BreadcrumbItem = React.memo((\n  (props: BreadcrumbItemProps) => {\n  const { \n    prefixCls = 'bread',\n    separator = '/',\n    children,\n    overlay,\n    getOrCreateRef,\n    index,\n    ...restProps\n  } = props;\n  const localRef = React.useRef<HTMLLIElement | null>(null);\n\n  useEffect(() => {\n    index !== undefined && getOrCreateRef && getOrCreateRef(index, localRef)\n  },[index, getOrCreateRef])\n\n  /** If overlay is have Wrap a Dropdown */\n  const renderBreadcrumbNode = (breadcrumbItem: React.ReactNode) => {\n    if (overlay) {\n      return (\n        <Popover \n          style={{ marginTop: 16}} \n          content={overlay} \n          placement=\"bottomLeft\" \n          trigger=\"mouse-enter\"\n         >\n          <span className={`${prefixCls}-overlay-link`}>\n            {breadcrumbItem}\n          </span>\n        </Popover>\n      );\n    }\n    return breadcrumbItem;\n  };\n\n  let link;\n  if ('href' in restProps) {\n    link = (\n      <a className={`${prefixCls}-link`} {...restProps}>\n        {children}\n      </a>\n    );\n  } else {\n    link = (\n      <span className={`${prefixCls}-link`} {...restProps}>\n        {children}\n      </span>\n    );\n  }\n\n  // wrap to dropDown\n  link = renderBreadcrumbNode(link);\n  if (children) {\n    return (\n      <li ref={localRef}>\n        {link}\n        {separator && <span className={`${prefixCls}-separator`}>{separator}</span>}\n      </li>\n    );\n  }\n  return null;\n}\n));\n\nexport default BreadcrumbItem;\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,qBACH;AAA5B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO;AAchB,IAAMC,cAAc,gBAAGH,KAAK,CAACI,IAAI,CAC/B,UAACC,KAA0B,EAAK;EAChC,uBAQIA,KAAK,CAPPC,SAAS;IAATA,SAAS,iCAAG,OAAO;IAAA,mBAOjBD,KAAK,CANPE,SAAS;IAATA,SAAS,iCAAG,GAAG;IACfC,QAAQ,GAKNH,KAAK,CALPG,QAAQ;IACRC,OAAO,GAILJ,KAAK,CAJPI,OAAO;IACPC,cAAc,GAGZL,KAAK,CAHPK,cAAc;IACdC,KAAK,GAEHN,KAAK,CAFPM,KAAK;IACFC,SAAS,iCACVP,KAAK;EACT,IAAMQ,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAAuB,IAAI,CAAC;EAEzDb,SAAS,CAAC,YAAM;IACdU,KAAK,KAAKI,SAAS,IAAIL,cAAc,IAAIA,cAAc,CAACC,KAAK,EAAEE,QAAQ,CAAC;EAC1E,CAAC,EAAC,CAACF,KAAK,EAAED,cAAc,CAAC,CAAC;;EAE1B;EACA,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIC,cAA+B,EAAK;IAChE,IAAIR,OAAO,EAAE;MACX,oBACE,eAAC,OAAO;QACN,KAAK,EAAE;UAAES,SAAS,EAAE;QAAE,CAAE;QACxB,OAAO,EAAET,OAAQ;QACjB,SAAS,EAAC,YAAY;QACtB,OAAO,EAAC;MAAa,gBAErB;QAAM,SAAS,EAAKH,SAAS;MAAgB,GAC1CW,cAAc,CACV,CACC;IAEd;IACA,OAAOA,cAAc;EACvB,CAAC;EAED,IAAIE,IAAI;EACR,IAAI,MAAM,IAAIP,SAAS,EAAE;IACvBO,IAAI,gBACF;MAAG,SAAS,EAAKb,SAAS;IAAQ,GAAKM,SAAS,GAC7CJ,QAAQ,CAEZ;EACH,CAAC,MAAM;IACLW,IAAI,gBACF;MAAM,SAAS,EAAKb,SAAS;IAAQ,GAAKM,SAAS,GAChDJ,QAAQ,CAEZ;EACH;;EAEA;EACAW,IAAI,GAAGH,oBAAoB,CAACG,IAAI,CAAC;EACjC,IAAIX,QAAQ,EAAE;IACZ,oBACE;MAAI,GAAG,EAAEK;IAAS,GACfM,IAAI,EACJZ,SAAS,iBAAI;MAAM,SAAS,EAAKD,SAAS;IAAa,GAAEC,SAAS,CAAQ,CACxE;EAET;EACA,OAAO,IAAI;AACb,CAAC,CACC;AAEF,eAAeJ,cAAc"}