{"version":3,"file":"BreadcrumbLayout.js","names":["React","memo","useCallback","useEffect","useMemo","useRef","useState","debounce","ResizeObserver","useEventCallback","Breadcrumb","BreadcrumbContext","SingleLineRowContext","Container","ELLIPSISPATH","ELLIPSISNAME","BreadcrumbLayout","props","routes","onClick","renderFileName","renderFilename","width","containerWidth","maxWidth","ref","liRef","spanRef","singleLineRoutes","setsingleLineRoutes","references","ellipsisBreadCrumbMaxWidth","setEllipsisBreadCrumbMaxWidth","ellipsisBreadCrumbIndex","setEllipsisBreadCrumbIndex","onResize","current","Object","keys","length","ELLIPSISWIDTH","getBoundingClientRect","SEPARATORWIDTH","ELLIPSISMINWIDTH","Math","ceil","lastItemWidth","firstItemWidth","totalWidth","reduce","pre","cur","Number","floor","path","name","children","slice","secontItemWidth","reduceRight","_","index","curWidth","curEllipisisWidth","ellipsisWidth","ellipsisIndex","throttledOnResize","obs","observe","disconnect","getOrCreateRef","id","mode","isSingleLine","padding","ellipisisIndex","ellipisisWidth"],"sources":["../../../../src/navigator/breadCrumb/BreadcrumbLayout.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { debounce } from 'lodash-es';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { useEventCallback } from '../../common';\nimport { Breadcrumb } from './Breadcrumb';\nimport { BreadcrumbContext, SingleLineRowContext } from './contexts';\nimport { Container } from './styles';\n\nexport interface Route {\n  // 点击跳转的路由\n  path: string;\n  // 节点展示内容\n  name: string;\n}\n\nexport interface BreadcrumbLayoutProps {\n  routes: Route[];\n  maxWidth?: number;\n  width?: number;\n  renderFilename?: (\n    route: Route,\n    options: {\n      maxWidth: number\n    }\n  ) => React.ReactNode;\n  onClick?: (path: string) => void;\n}\n// .../ 的 path\nconst ELLIPSISPATH = '';\n// .../ 的 name\nconst ELLIPSISNAME = '...';\n\nexport const BreadcrumbLayout = memo((props: BreadcrumbLayoutProps) => {\n  const { routes, onClick, renderFilename: renderFileName, width: containerWidth = -1, maxWidth = -1 } = props; \n  // 组件 测量 ref\n  const ref = useRef<HTMLDivElement>(null);\n  // ../ 测量 ref\n  const liRef = useRef<HTMLLIElement>(null);\n  // 分隔符测量 ref\n  const spanRef = useRef<HTMLSpanElement>(null);\n  // 响应式节点\n  const [singleLineRoutes, setsingleLineRoutes] = useState<Route[]>(routes);\n  // mirror 上节点的 refs\n  const [references] = useState<Record<number, any>>({})\n  // 计算需要 ellipsis 节点的宽度\n  const [ellipsisBreadCrumbMaxWidth, setEllipsisBreadCrumbMaxWidth] = useState(-1)\n  // 计算需要 ellipsis 节点的位置 \n  const [ellipsisBreadCrumbIndex, setEllipsisBreadCrumbIndex] = useState(-1)\n\n  const onResize = useEventCallback(() => {\n    if (ref?.current && Object.keys(references).length >= routes.length && liRef?.current && spanRef?.current && containerWidth !== -1) {\n      // .../ 的宽度\n      const ELLIPSISWIDTH = liRef.current.getBoundingClientRect()?.width;\n      // separator 的宽度\n      const SEPARATORWIDTH = spanRef.current.getBoundingClientRect()?.width;\n      // 节点由 ellipsis 变为收起的临界点\n      const ELLIPSISMINWIDTH = SEPARATORWIDTH + 10;\n      const width = Math.ceil(ref.current.getBoundingClientRect().width) - 1;\n      // mirror 最右边的节点\n      const lastItemWidth = references[routes.length - 1].current?.getBoundingClientRect()?.width;\n      // mirror 最左边的节点\n      const firstItemWidth = references[0].current?.getBoundingClientRect()?.width;\n      // mirror 宽度\n      const totalWidth = Math.ceil(Object.keys(references).reduce((pre, cur) => \n         references[Number(cur)]?.current \n          ? pre + references[Number(cur)]?.current?.getBoundingClientRect()?.width\n          : pre\n          , -1)\n      );\n      \n      // lastBreadcrumb...\n      if (routes.length === 1) {\n        setEllipsisBreadCrumbIndex(0);\n        setEllipsisBreadCrumbMaxWidth(Math.floor(width));\n        return setsingleLineRoutes(routes);\n      }\n      // ... / lastBreadcrumb\n      if (Math.floor(lastItemWidth + ELLIPSISWIDTH + ELLIPSISMINWIDTH) >= width) {\n        setEllipsisBreadCrumbIndex(1);\n        setEllipsisBreadCrumbMaxWidth(width - Math.floor(ELLIPSISWIDTH));\n        return setsingleLineRoutes([{path: ELLIPSISPATH, name: ELLIPSISNAME, children: routes.slice(0, -1)} as Route, ...routes.slice(-1)]);\n      }\n      // firstBreadcrumb... / lastBreadcrumb\n      if(routes.length === 2) {\n        setEllipsisBreadCrumbIndex(0);\n        setEllipsisBreadCrumbMaxWidth(width - Math.floor(lastItemWidth + SEPARATORWIDTH));\n        return setsingleLineRoutes(routes);\n      }\n      // firstBreadcrumb / ... / lastBreadcrumb\n      if (Math.floor(firstItemWidth + lastItemWidth + ELLIPSISWIDTH + ELLIPSISMINWIDTH) >= width) {\n        setEllipsisBreadCrumbIndex(0);\n        setEllipsisBreadCrumbMaxWidth(width - Math.floor(lastItemWidth + ELLIPSISWIDTH + SEPARATORWIDTH));\n        return setsingleLineRoutes([\n          ...routes.slice(0, 1), {path: ELLIPSISPATH, name: ELLIPSISNAME, children: routes.slice(1, -1)} as Route, ...routes.slice(-1)\n        ]);\n       }\n\n      // firstBreadcrumb / ellipsisBreadcrumb... / lastBreadcrumb \n      if (width < totalWidth && routes.length >= 3) {\n        const secontItemWidth = Math.floor(references[1].current?.getBoundingClientRect()?.width);\n        if (totalWidth - secontItemWidth + ELLIPSISMINWIDTH <= width){\n          setEllipsisBreadCrumbIndex(1);\n          setEllipsisBreadCrumbMaxWidth(width - totalWidth + (Math.floor(references[1]?.current?.getBoundingClientRect()?.width - SEPARATORWIDTH)));\n          return(routes);\n        }\n      }\n      // firstBreadcrumb / ... / ellipsisBreadcrumb... / lastBreadcrumb\n      if (width < totalWidth && routes.length > 3){\n        // routes 掐头去尾累加宽度，找到 ellipsisBreadcrumb\n        const { width: ellipsisWidth, index: ellipsisIndex } = Object.keys(references).slice(1, routes.length - 1).reduceRight(\n          (pre, _, index) => {\n            if (pre.width > width) {\n              return pre;\n            }\n            // 从右向左累加下一个 breadcrumb + separator\n            const curWidth: number = pre.width + references[index + 1]?.current?.getBoundingClientRect()?.width;\n            // 从右向左累加从 ellipsis 到 ... 里面时的临界值 \n            const curEllipisisWidth = pre.width + ELLIPSISMINWIDTH;\n            // index + 1 所在的位置为 ellipsisBreadcrumb\n            if (curEllipisisWidth <= width && curWidth > width) {\n              return {\n                width: curWidth,\n                index: index + 1,\n              }\n            }\n            // index + 2 所在的位置为 ellipsisBreadcrumb \n            if (curEllipisisWidth > width && curWidth > width) {\n              return {\n                width: width + 1,\n                index: index + 2,\n              } \n            }\n            return {\n              width: curWidth,\n              index: index,\n            }\n          }, \n          {\n            // 初始值为 firstBreadcrumb / ... / lastBreadcrumb 宽度之和\n            width: firstItemWidth + lastItemWidth + ELLIPSISWIDTH,\n            index: -1,\n          }\n        );\n\n        // firstBreadcrumb / ellipsisBreadcrumb... / lastBreadcrumb \n        if (ellipsisIndex === 1) {\n          setEllipsisBreadCrumbIndex(1);\n          setEllipsisBreadCrumbMaxWidth(width - totalWidth + (Math.floor(references[ellipsisIndex]?.current?.getBoundingClientRect()?.width - SEPARATORWIDTH + ELLIPSISWIDTH)));\n          return(routes);\n        }\n        \n        setEllipsisBreadCrumbIndex(2);\n        // 总宽度 - 不包含 ellipsisBreadcrumb 总宽度 - 分割线宽度 = ellipsisBreadcrumb 能显示的最大宽度 \n        setEllipsisBreadCrumbMaxWidth(width - (Math.floor(ellipsisWidth - references[ellipsisIndex]?.current?.getBoundingClientRect()?.width + SEPARATORWIDTH)));\n        return setsingleLineRoutes([\n          ...routes.slice(0, 1), {path: ELLIPSISPATH, name: ELLIPSISNAME, children: routes.slice(1, ellipsisIndex)} as Route, ...routes.slice(ellipsisIndex)\n        ]);\n      }\n      // default\n      setEllipsisBreadCrumbIndex(-1);\n      setsingleLineRoutes(routes);\n    }\n  });\n\n  const throttledOnResize = useMemo(() => debounce(onResize, 550), [onResize]);\n\n  // routes 更新时 resize\n  useEffect(\n    () => {\n      setsingleLineRoutes(routes);\n    }, \n    [routes]\n  );\n\n  // 没有 width 时 resize\n  useEffect(\n    () => {\n      if (containerWidth === -1) {\n          setEllipsisBreadCrumbIndex(-1);\n          setsingleLineRoutes(routes);\n      }\n    }, \n    [routes, containerWidth]\n  );\n\n  useEffect(\n    () => {\n      if (ref.current) {\n        const obs = new ResizeObserver(throttledOnResize);\n        obs.observe(ref.current);\n\n        return () => {\n          obs.disconnect();\n        };\n      }\n    }, \n    [routes]\n  );\n\n  // mirror 测量 ref\n  const getOrCreateRef = useCallback(\n    (id: number, ref: React.MutableRefObject<HTMLLIElement | null>) => {\n      references[id] = ref;\n    }, \n    [],\n  )\n\n  return (\n    <BreadcrumbContext.Provider value={{ mode: 'singleLine' }}>\n      <Container>\n        <SingleLineRowContext.Provider value={{ isSingleLine: false }}>\n          <div className=\"mirror-breadcrumb\">\n            <Breadcrumb\n                routes={routes}\n                renderLastItem={renderFileName}\n                getOrCreateRef={getOrCreateRef}\n            />\n            <ol>\n              <li ref={liRef}>\n                <span className='mirror-link'>{ELLIPSISNAME}</span>\n                <span className='mirror-separator' ref={spanRef} style={{ padding: 4 }}>/</span>\n              </li>\n            </ol>\n          </div> \n        </SingleLineRowContext.Provider>\n        <SingleLineRowContext.Provider \n          value={{ \n            isSingleLine: true,  \n            ellipisisIndex: ellipsisBreadCrumbIndex,\n            ellipisisWidth: ellipsisBreadCrumbMaxWidth,\n          }}\n        >\n          <div className=\"single-line-breadcrumb\" ref={ref} style={{ width: containerWidth === -1 ? '100%' : containerWidth, maxWidth }}>\n            <Breadcrumb\n              routes={singleLineRoutes}\n              renderLastItem={renderFileName}\n              onBreadcrumbItemClick={onClick}\n            />\n          </div>\n        </SingleLineRowContext.Provider>\n      </Container>\n    </BreadcrumbContext.Provider>\n  );\n});"],"mappings":"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"}