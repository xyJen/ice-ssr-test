{"version":3,"file":"BorderPicker.js","names":["React","useState","useRef","useDefaultProp","Divider","COLORS","Text","TextInline","Select","Popover","ColorPicker","IconBorderAll","IconBorderNone","IconBorderOuter","IconBorderInner","IconBorderInnerHorizon","IconBorderInnerVertical","IconBorderTop","IconBorderBottom","IconBorderLeft","IconBorderRight","BorderPickerWrapper","BorderPickerMain","BorderPickerFooter","BorderPickerLayoutWrapper","BorderPickerLayoutIconWrapper","BorderPickerColorWrap","BorderPickerColorButton","BorderPickerColorRect","BorderPickerStyleWrap","DEFAULT_PRESET","useTranslate","BORDER_LAYOUTES","DEFAULT_BORDER","layout","color","style","BorderPicker","memo","props","defaultBorder","_border","border","onBorderChange","preset","setBorder","t","marginLeft","marginTop","flexGrow","BorderPickerLayout","onChange","map","key","icon","cloneElement","size","BorderPickerColor","visible","setVisible","ref","marginRight","current","document","body","e","backgroundColor","BorderPickerStyle","it","op","find","p","BorderStyleDisplay","lineStyle","params","linearGradientSteps","units","colors","makeUpForRepeat","start","currenPosition","res","maxIndex","length","i","nextPosition","endPosition","width","angle","inclination","indent","repeatFrom","WHITE","direction","height","renderColors","concat","startColors","slice","repeatColors","startUnits","repeatUnits","startLinear","repeatLinear","repeatStartPosition","steps","both","linear","backgroundImage","segs","seg","minWidth"],"sources":["../../../../src/office/border-picker/BorderPicker.tsx"],"sourcesContent":["import React, { ReactElement, useState, useRef } from 'react';\nimport { useDefaultProp, RowItem, Divider, COLORS } from '../../common';\nimport { Text, TextInline } from '../../basic/text';\nimport { Select } from '../../form/select';\nimport { Popover } from '../../display/popover';\nimport { ColorPicker } from '../../form/color-picker';\nimport {\n  IconBorderAll,\n  IconBorderNone,\n  IconBorderOuter,\n  IconBorderInner,\n  IconBorderInnerHorizon,\n  IconBorderInnerVertical,\n  IconBorderTop,\n  IconBorderBottom,\n  IconBorderLeft,\n  IconBorderRight,\n} from '../../basic/icon';\nimport {\n  BorderPickerWrapper,\n  BorderPickerMain,\n  BorderPickerFooter,\n  BorderPickerLayoutWrapper,\n  BorderPickerLayoutIconWrapper,\n  BorderPickerColorWrap,\n  BorderPickerColorButton,\n  BorderPickerColorRect,\n  BorderPickerStyleWrap,\n} from './styled';\nimport { DEFAULT_PRESET } from './presets';\nimport { useTranslate } from '../../locale';\n\ntype IBorderLayout = 'top' | 'bottom' | 'left' | 'right' | 'none' | 'outer' | 'inner' | 'horizon' | 'vertical' | 'all' | 'unselected';\n\nconst BORDER_LAYOUTES: Array<[IBorderLayout, ReactElement]> = [\n  ['outer', <IconBorderOuter />],\n  ['inner', <IconBorderInner />],\n  ['all', <IconBorderAll />],\n  ['left', <IconBorderLeft />],\n  ['vertical', <IconBorderInnerVertical />],\n  ['right', <IconBorderRight />],\n  ['top', <IconBorderTop />],\n  ['horizon', <IconBorderInnerHorizon />],\n  ['bottom', <IconBorderBottom />],\n];\n\ntype IBorderSegment = {\n  width: number;\n  units: number[];\n  inclination?: number;\n};\n\ntype IBorderStyle = IBorderSegment | Array<IBorderSegment | null>;\n\ntype IBorder = {\n  layout: IBorderLayout;\n  color: string;\n  style: string;\n};\n\nexport type IBorderStylePreset = Array<{ key: string, style: IBorderStyle }>;\n\ntype IBorderPickerProps = {\n\n  defaultBorder?: IBorder;\n\n  border?: IBorder;\n\n  onBorderChange?: (value: IBorder) => void;\n\n  preset?: IBorderStylePreset;\n\n};\n\nconst DEFAULT_BORDER: IBorder = {\n  layout: 'all',\n  color: '#000000',\n  style: 'Thin'\n};\n\nexport const BorderPicker = React.memo(\n  (props: IBorderPickerProps) => {\n\n    const {\n      defaultBorder = DEFAULT_BORDER,\n      border: _border,\n      onBorderChange,\n      preset = DEFAULT_PRESET,\n    } = props;\n\n    const [border, setBorder] = useDefaultProp(defaultBorder, _border, onBorderChange);\n\n    const t = useTranslate();\n\n    return <BorderPickerWrapper>\n      <BorderPickerMain>\n        <BorderPickerLayout color={border.color} layout={border.layout} onChange={layout => setBorder({ ...border, layout })} />\n        <div style={{ marginLeft: 16, marginTop: 0 }}>\n          <BorderPickerColor color={border.color} onChange={(color) => setBorder({ ...border, color })} />\n          <BorderPickerStyle color={border.color} preset={preset} style={border.style} onChange={style => { setBorder({ ...border, style }); }} />\n        </div>\n      </BorderPickerMain>\n      <Divider />\n      <BorderPickerFooter onClick={() => setBorder({ ...border, layout: 'none' })}>\n        <IconBorderNone />\n        <Text style={{ flexGrow: 1, marginLeft: 8 }}>{t('wdn_border_picker_no_border')}</Text>\n      </BorderPickerFooter>\n    </BorderPickerWrapper>\n  }\n);\n\nconst BorderPickerLayout = React.memo(\n  (props: { layout: string, color: string, onChange: (layout: IBorderLayout) => void }) => {\n\n    const { color, layout, onChange } = props;\n\n    return <BorderPickerLayoutWrapper style={{ color: color }}>{\n      BORDER_LAYOUTES.map(([key, icon]) => <BorderPickerLayoutIconWrapper onClick={() => onChange(key)} active={key === layout}>\n        {React.cloneElement(icon, { size: 20 })}\n      </BorderPickerLayoutIconWrapper>)\n    }</BorderPickerLayoutWrapper>;\n  }\n)\n\nconst BorderPickerColor = React.memo(\n  (props: { color: string, onChange: (color: string) => void }) => {\n\n    const {\n      color, onChange\n    } = props;\n\n    const [visible, setVisible] = useState<boolean>(false);\n\n    const t = useTranslate();\n\n    const ref = useRef<HTMLDivElement>(null);\n\n    return <BorderPickerColorWrap ref={ref}>\n      <TextInline style={{ marginRight: 8 }}>{t('wdn_color')}</TextInline>\n      <Popover\n        trigger='click'\n        placement='bottomLeft'\n        onVisibleChange={setVisible}\n        visible={visible}\n        getContainer={() => ref.current || document.body}\n        content={\n          <ColorPicker autoColor='#000000' color={color} onColorChange={(e) => {\n            e && onChange(e);\n            setVisible(false);\n          }} />\n        }\n      >\n        <BorderPickerColorButton>\n          <BorderPickerColorRect style={{ backgroundColor: color }} />\n        </BorderPickerColorButton>\n      </Popover>\n    </BorderPickerColorWrap>;\n  }\n);\n\nconst BorderPickerStyle = React.memo(\n  (props: { color: string, style: string, preset: IBorderStylePreset, onChange: (style: string) => void }) => {\n\n    const { color, style, preset, onChange } = props;\n\n    const t = useTranslate();\n\n    return <BorderPickerStyleWrap>\n      <TextInline style={{ marginRight: 8 }}>{t('wdn_border_picker_line_type')}</TextInline>\n      <Select\n        size='small'\n        value={style}\n        options={preset.map(it => it.key)}\n        renderOption={op => {\n          const border = preset.find(p => p.key === op.key);\n          if (border) {\n            return <Select.Option children={<BorderStyleDisplay color={color} style={border.style} />} />;\n          } else {\n            return <Select.Option />;\n          }\n        }}\n        renderValue={({ key }) => {\n          const border = preset.find(p => p.key === key);\n          if (border) {\n            return <BorderStyleDisplay color={color} style={border.style} />;\n          } else {\n            return null;\n          }\n        }}\n        onChange={(e) => onChange(e)}\n      />\n    </BorderPickerStyleWrap>;\n  }\n);\n\nconst BorderStyleDisplay = React.memo(\n  (props: { color: string, style: IBorderStyle }) => {\n    const { color, style } = props;\n\n    const lineStyle = (params: IBorderSegment, color: string): React.CSSProperties => {\n\n      const linearGradientSteps = (\n        units: number[],\n        colors: string[],\n        makeUpForRepeat: boolean,\n        start = 0\n      ) => {\n        let currenPosition = start;\n        let res = '';\n        const maxIndex = units.length - 1;\n        if (makeUpForRepeat && start > 0) {\n          res += `transparent 0px, transparent ${start}px,`;\n        }\n        for (let i = 0; i < maxIndex; i++) {\n          const nextPosition = currenPosition + units[i];\n          res += `${colors[i]} ${currenPosition}px, ${colors[i]} ${nextPosition}px,`;\n          currenPosition = nextPosition;\n        }\n        const endPosition = currenPosition + units[maxIndex];\n        res += `${colors[maxIndex]} ${currenPosition}px, ${colors[maxIndex]} ${endPosition}px`;\n        return [res, endPosition] as const;\n      };\n\n      const {\n        units,\n        width: size = 1,\n        inclination: angle,\n      } = params;\n\n      const [indent, repeatFrom] = [0, 0];\n\n      const colors = [color, COLORS.WHITE];\n\n      const direction = angle ? `${angle}deg` : 'to right';\n      const style: React.CSSProperties = {};\n      style.height = size;\n\n      if ((units.length === 0) || (colors.length === 0)) {\n        return style;\n      }\n\n      if (units.length === 1) {\n        style.backgroundColor = colors[0];\n        return style;\n      }\n\n      let renderColors = colors.concat();\n\n      while (renderColors.length < units.length) {\n        renderColors = renderColors.concat(renderColors);\n      }\n\n      const startColors = renderColors.slice(0, repeatFrom);\n      const repeatColors = renderColors.slice(repeatFrom);\n      const startUnits = units.slice(0, repeatFrom);\n      const repeatUnits = units.slice(repeatFrom);\n\n      let startLinear = '';\n      let repeatLinear = '';\n      let repeatStartPosition = indent;\n      if (startUnits.length !== 0) {\n        const [steps, endPosition] = linearGradientSteps(startUnits, startColors, true, indent);\n        startLinear = `linear-gradient(${direction},${steps})`;\n        repeatStartPosition = endPosition;\n      }\n      if (repeatUnits.length !== 0) {\n        const [steps] = linearGradientSteps(repeatUnits, repeatColors, false, repeatStartPosition);\n        repeatLinear = `repeating-linear-gradient(${direction},${steps})`;\n      }\n\n      const both = startLinear && repeatLinear\n      const linear = both ? `${startLinear}, ${repeatLinear}` : `${startLinear} ${repeatLinear}`;\n      style.backgroundImage = linear;\n      return style;\n    }\n\n    const segs = ('length' in style) ? style : [style];\n    return <>\n      {\n        segs.map(seg => seg ? <div style={{ width: 50, minWidth: '60px', height: 16, ...lineStyle(seg, color) }}></div> : <div style={{ width: 50, height: 2 }} />)\n      }\n    </>\n  }\n);\n"],"mappings":"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"}