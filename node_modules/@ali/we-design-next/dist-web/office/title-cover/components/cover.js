import { noop } from 'lodash-es';
import React, { useState, useEffect } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { PositionedImage } from "./positionedImage";
import loadImage from "../utils";
export var Cover = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var src = props.src,
    thumbSrc = props.thumbSrc,
    position = props.position,
    _props$onMouseDown = props.onMouseDown,
    onMouseDown = _props$onMouseDown === void 0 ? noop : _props$onMouseDown,
    renderError = props.renderError;
  var _useState = useState(thumbSrc),
    renderSrc = _useState[0],
    setRenderSrc = _useState[1];
  var _useState2 = useState(false),
    isLoadError = _useState2[0],
    setIsLoadError = _useState2[1];
  useEffect(function () {
    if (renderSrc === src) {
      return;
    }
    loadImage(src).then(function () {
      setRenderSrc(src);
      setIsLoadError(false);
    })["catch"](function () {
      setIsLoadError(true);
    });
  }, [src, renderSrc]);
  useEffect(function () {
    setRenderSrc(thumbSrc || src);
  }, [src, thumbSrc]);
  var shouldShowError = isLoadError && renderError;
  return shouldShowError ? /*#__PURE__*/_createElement(React.Fragment, null, renderError()) : /*#__PURE__*/_createElement(PositionedImage, {
    ref: ref,
    src: renderSrc,
    onMouseDown: onMouseDown,
    position: position
  });
});
//# sourceMappingURL=cover.js.map