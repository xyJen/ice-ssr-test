var _IconUndoMobile, _IconRedoMobile, _IconDeleteMobile;
import React, { useRef, useState, useImperativeHandle } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { COLORS } from "../../common/consts/colors";
import { IconUndoMobile, IconRedoMobile, IconDeleteMobile } from "../../basic/icon";
export var DrawboardControlPanelMobile = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (props, ref) {
  var drawBoardRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      attach: function attach(drawBoard) {
        drawBoardRef.current = drawBoard;
        return drawBoard.onChange(function (_ref) {
          var undoAble = _ref.undoAble,
            redoAble = _ref.redoAble,
            clearAble = _ref.clearAble;
          setUndoAble(undoAble);
          setRedoAble(redoAble);
          setClearAble(clearAble);
        });
      }
    };
  });
  var _useState = useState(false),
    undoAble = _useState[0],
    setUndoAble = _useState[1];
  var _useState2 = useState(false),
    redoAble = _useState2[0],
    setRedoAble = _useState2[1];
  var _useState3 = useState(false),
    clearAble = _useState3[0],
    setClearAble = _useState3[1];
  return /*#__PURE__*/_createElement(IconsWrap, null, /*#__PURE__*/_createElement(IconWrap, {
    onTouchStart: undoAble ? function () {
      var _drawBoardRef$current;
      return (_drawBoardRef$current = drawBoardRef.current) == null ? void 0 : _drawBoardRef$current.undo();
    } : undefined,
    disabled: !undoAble
  }, _IconUndoMobile || (_IconUndoMobile = /*#__PURE__*/_createElement(IconUndoMobile, null))), /*#__PURE__*/_createElement(IconWrap, {
    onTouchStart: redoAble ? function () {
      var _drawBoardRef$current2;
      return (_drawBoardRef$current2 = drawBoardRef.current) == null ? void 0 : _drawBoardRef$current2.redo();
    } : undefined,
    disabled: !redoAble
  }, _IconRedoMobile || (_IconRedoMobile = /*#__PURE__*/_createElement(IconRedoMobile, null))), /*#__PURE__*/_createElement(IconWrap, {
    onTouchStart: clearAble ? function () {
      var _drawBoardRef$current3;
      return (_drawBoardRef$current3 = drawBoardRef.current) == null ? void 0 : _drawBoardRef$current3.clear();
    } : undefined,
    disabled: !clearAble
  }, _IconDeleteMobile || (_IconDeleteMobile = /*#__PURE__*/_createElement(IconDeleteMobile, null))));
}));
var IconsWrap = /*#__PURE__*/styled.div(["display:flex;padding:0 10px;"]);
var IconWrap = /*#__PURE__*/styled.div(["display:flex;justify-content:center;align-items:center;width:40px;height:48px;color:", ";& > svg{vertical-align:middle;}"], function (_ref2) {
  var disabled = _ref2.disabled;
  return disabled ? COLORS.LIGHT.LEVEL4_BASE_COLOR : COLORS.LIGHT.LEVEL1_BASE_COLOR;
});
//# sourceMappingURL=DrawBoardControlPanelMobile.js.map