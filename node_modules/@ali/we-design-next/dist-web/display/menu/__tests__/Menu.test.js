import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { render, fireEvent, screen } from '@testing-library/react';
import '@testing-library/jest-dom';
import { Menu } from "../index";
import { KEY_CODES } from "../../../common";
test('Menu: should render items.', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
  return _regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          render( /*#__PURE__*/_createElement(Menu, {
            items: ['Item1', 'Item2', 'Item3']
          }));
          expect(screen.queryByText('Item1')).toBeInTheDocument();
          expect(screen.queryByText('Item2')).toBeInTheDocument();
          expect(screen.queryByText('Item3')).toBeInTheDocument();
          expect(screen.queryByText('Item4')).toBeNull();
        case 5:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));
test('Menu: should render custom items (normalized).', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
  return _regeneratorRuntime.wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          render( /*#__PURE__*/_createElement(Menu, {
            items: ['Item1', 'Item2', 'Item3'],
            renderItem: function renderItem(k) {
              return /*#__PURE__*/_createElement(Menu.Item, null, k.key + '-C');
            }
          }));
          expect(screen.queryByText('Item1-C')).toBeInTheDocument();
          expect(screen.queryByText('Item2-C')).toBeInTheDocument();
          expect(screen.queryByText('Item3-C')).toBeInTheDocument();
        case 4:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2);
})));
test('Menu: should expand Menu when mouse hover', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
  return _regeneratorRuntime.wrap(function _callee3$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          render( /*#__PURE__*/_createElement(Menu, {
            items: ['Item1', {
              key: 'Item2',
              title: 'Item2',
              subMenu: ['Item21', 'Item22']
            }, 'Item3']
          }));
          expect(screen.queryByText('Item1')).toBeInTheDocument();
          expect(screen.queryByText('Item2')).toBeInTheDocument();
          expect(screen.queryByText('Item3')).toBeInTheDocument();
          expect(screen.queryByText('Item21')).toBeNull();
          expect(screen.queryByText('Item22')).toBeNull();
          fireEvent.mouseEnter(screen.getByText('Item2'));
          expect(screen.queryByText('Item21')).toBeInTheDocument();
          expect(screen.queryByText('Item22')).toBeInTheDocument();
          fireEvent.mouseEnter(screen.getByText('Item1'));
          expect(screen.queryByText('Item21')).toBeNull();
          expect(screen.queryByText('Item22')).toBeNull();
        case 12:
        case "end":
          return _context3.stop();
      }
    }
  }, _callee3);
})));
test('Menu: should expand Menu for keyborad entering arrow right', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
  var m, menu;
  return _regeneratorRuntime.wrap(function _callee4$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          m = render( /*#__PURE__*/_createElement(Menu, {
            items: ['Item1', {
              key: 'Item2',
              title: 'Item2',
              subMenu: ['Item21', 'Item22']
            }, 'Item3']
          }));
          expect(screen.queryByText('Item1')).toBeInTheDocument();
          expect(screen.queryByText('Item2')).toBeInTheDocument();
          expect(screen.queryByText('Item3')).toBeInTheDocument();
          expect(screen.queryByText('Item21')).toBeNull();
          expect(screen.queryByText('Item22')).toBeNull();
          fireEvent.mouseEnter(screen.getByText('Item1'));
          menu = m.container.querySelector('.wdn-menu');
          fireEvent.keyDown(menu, {
            keyCode: KEY_CODES.DOWN
          });
          expect(screen.queryByText('Item21')).toBeNull();
          expect(screen.queryByText('Item22')).toBeNull();
          fireEvent.keyDown(menu, {
            keyCode: KEY_CODES.RIGHT
          });
          expect(screen.queryByText('Item21')).toBeInTheDocument();
          expect(screen.queryByText('Item22')).toBeInTheDocument();
          fireEvent.keyDown(menu, {
            keyCode: KEY_CODES.LEFT
          });
          expect(screen.queryByText('Item21')).toBeNull();
          expect(screen.queryByText('Item22')).toBeNull();
          fireEvent.keyDown(menu, {
            keyCode: KEY_CODES.ENTER
          });
          _context4.next = 20;
          return new Promise(function (resolve) {
            return setTimeout(resolve, 1000);
          });
        case 20:
          expect(screen.queryByText('Item21')).toBeInTheDocument();
          expect(screen.queryByText('Item22')).toBeInTheDocument();
          fireEvent.keyDown(menu, {
            keyCode: KEY_CODES.LEFT
          });
          expect(screen.queryByText('Item21')).toBeNull();
          expect(screen.queryByText('Item22')).toBeNull();
        case 25:
        case "end":
          return _context4.stop();
      }
    }
  }, _callee4);
})));
//# sourceMappingURL=Menu.test.js.map