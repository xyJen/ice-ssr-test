import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _i, _i2, _i3;
var _excluded = ["collaborators", "max", "onClick", "highlight", "renderMenu", "renderCollaboratorMenu"];
/* eslint-disable max-lines-per-function */
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Popover } from "../../display/popover";
import { AvatarCollaboratorsWrap, GroupAvatarItem, GroupAvatarList, GroupMoreItem, GroupMoreItemSpan, OverlayWrap, CountWrap } from "./styled";
import { mergeClassName, mergeRestProps } from "../../common";
import { AvatarWithPopover } from "./AvatarWithPopover";
import { AvatarMoreList } from "./AvatarMoreList";
import { COLOR_SCHEME, COLOR_SCHEME_LEN, DEFAULT_MAX_COLLABORATOR } from "./constants";
import { useTranslate } from "../../locale";
var PLACEMENT_OFFSET = [4, 0];
export var AvatarCollaborators = /*#__PURE__*/React.memo(function (props) {
  var _props$collaborators = props.collaborators,
    items = _props$collaborators === void 0 ? [] : _props$collaborators,
    _props$max = props.max,
    max = _props$max === void 0 ? DEFAULT_MAX_COLLABORATOR : _props$max,
    _onClick = props.onClick,
    isMoreButtonHighlight = props.highlight,
    customMorePanelTitle = props.renderMenu,
    renderCollaboratorMenu = props.renderCollaboratorMenu,
    rest = _objectWithoutPropertiesLoose(props, _excluded);
  var _React$useState = React.useState(-1),
    visibleAvatarIndex = _React$useState[0],
    setVisibleAvatarIndex = _React$useState[1];

  // 数量
  var avatarCount = items.length;
  var isOverflowing = avatarCount > max;
  var t = useTranslate();
  var sortedItems = React.useMemo(function () {
    return items.map(function (item, index) {
      return _extends({}, item, {
        index: index
      });
    }).sort(function (a, b) {
      var aValue = a.highlight ? 0 : 1;
      var bValue = b.highlight ? 0 : 1;
      return aValue - bValue;
    });
  }, [items]);
  return /*#__PURE__*/_createElement(AvatarCollaboratorsWrap, mergeRestProps(rest, 'wdn-collaborator-avatars'), /*#__PURE__*/_createElement(GroupAvatarList, null, sortedItems.slice(0, isOverflowing ? max - 1 : max).map(function (item) {
    var idx = item.index,
      key = item.key;
    return /*#__PURE__*/_createElement(GroupAvatarItem, {
      className: "avatar-item",
      key: key
    }, /*#__PURE__*/_createElement(AvatarWithPopover, _extends({}, item, {
      renderMenu: renderCollaboratorMenu ? function () {
        return renderCollaboratorMenu(item);
      } : undefined,
      color: item.color || COLOR_SCHEME[idx % COLOR_SCHEME_LEN],
      onClick: function onClick() {
        return _onClick == null ? void 0 : _onClick(item.key);
      },
      isPopoverVisible: visibleAvatarIndex === idx,
      onPopoverVisibleChange: function onPopoverVisibleChange(visible) {
        if (visible) {
          setVisibleAvatarIndex(idx);
        } else {
          setVisibleAvatarIndex(function (visibleAvatarIndex) {
            return visibleAvatarIndex === idx ? -1 : visibleAvatarIndex;
          });
        }
      }
    })));
  }), isOverflowing && /*#__PURE__*/_createElement(GroupAvatarItem, null, /*#__PURE__*/_createElement(Popover, {
    animation: true,
    onVisibleChange: function onVisibleChange(v) {
      if (v) {
        setVisibleAvatarIndex('more');
      } else if (visibleAvatarIndex === 'more') {
        setVisibleAvatarIndex(-1);
      }
    },
    visible: visibleAvatarIndex === 'more',
    trigger: "click",
    placement: "bottomRight",
    placementOffset: PLACEMENT_OFFSET,
    content: /*#__PURE__*/_createElement(OverlayWrap, null, /*#__PURE__*/_createElement(CountWrap, null, !!customMorePanelTitle ? customMorePanelTitle() : t('wdn_avatar_group_total-collab-people', {
      value: avatarCount
    })), /*#__PURE__*/_createElement(AvatarMoreList, {
      items: sortedItems,
      onClick: _onClick
    }))
  }, /*#__PURE__*/_createElement(GroupMoreItem, {
    className: mergeClassName(visibleAvatarIndex === 'more' ? 'wdn-more-box-active' : '', isMoreButtonHighlight ? 'wdn-more-btn-highlight' : '')
  }, Number(avatarCount) < 999 ? /*#__PURE__*/_createElement(GroupMoreItemSpan, null, "" + avatarCount) : /*#__PURE__*/_createElement(React.Fragment, null, _i || (_i = /*#__PURE__*/_createElement("i", null)), _i2 || (_i2 = /*#__PURE__*/_createElement("i", null)), _i3 || (_i3 = /*#__PURE__*/_createElement("i", null))))))));
});
//# sourceMappingURL=AvatarCollaborators.js.map