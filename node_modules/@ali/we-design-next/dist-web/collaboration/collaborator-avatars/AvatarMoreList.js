import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { ListWrap, OverlayAvatarItem, OverlayAvatarWrap, OverlayAvatarName, Dot } from "./styled";
import { AvatarWithPopover } from "./AvatarWithPopover";
import { COLOR_SCHEME, COLOR_SCHEME_LEN } from "./constants";
export var AvatarMoreList = function AvatarMoreList(props) {
  var items = props.items,
    onClickProp = props.onClick;
  // avatar popover 面板互斥
  var _React$useState = React.useState(-1),
    visibleIndex = _React$useState[0],
    setVisibleAvatarIndex = _React$useState[1];
  return /*#__PURE__*/_createElement(ListWrap, null, items.map(function (item) {
    var name = item.name,
      color = item.color,
      index = item.index,
      onClick = item.onClick,
      key = item.key;
    var avatarColor = color || COLOR_SCHEME[index % COLOR_SCHEME_LEN];
    return /*#__PURE__*/_createElement(OverlayAvatarItem, {
      key: key
    }, /*#__PURE__*/_createElement(OverlayAvatarWrap, null, /*#__PURE__*/_createElement(AvatarWithPopover, _extends({}, item, {
      color: avatarColor,
      highlight: false,
      isPopoverVisible: index === visibleIndex,
      onPopoverVisibleChange: function onPopoverVisibleChange(visible) {
        if (visible) {
          setVisibleAvatarIndex(index);
        } else {
          setVisibleAvatarIndex(function (visibleAvatarIndex) {
            return visibleAvatarIndex === index ? -1 : visibleAvatarIndex;
          });
        }
      },
      onClick: onClick || function () {
        onClickProp && onClickProp(item.key);
      }
    }))), /*#__PURE__*/_createElement(OverlayAvatarName, null, name || ''), /*#__PURE__*/_createElement(Dot, {
      style: {
        background: avatarColor
      }
    }));
  }));
};
//# sourceMappingURL=AvatarMoreList.js.map