{"version":3,"file":"offset-utils.js","names":["flipOffset","offset","index","convertOffset","str","offsetLen","n","test","parseInt","substring","length","normalizeOffset","el","String","width","height"],"sources":["../../../../../src/common/domAlign/utils/offset-utils.tsx"],"sourcesContent":["import type { IFullRegion, IOffsets } from '../interface';\n\nfunction flipOffset(offset: IOffsets, index: number) {\n  offset[index] = -offset[index];\n  return offset;\n}\n\nfunction convertOffset(str: string, offsetLen: number) {\n  let n;\n  if (/%$/.test(str)) {\n    n = (parseInt(str.substring(0, str.length - 1), 10) / 100) * offsetLen;\n  } else {\n    n = parseInt(str, 10);\n  }\n  return n || 0;\n}\n\nfunction normalizeOffset(offset: IOffsets, el: IFullRegion) {\n  offset[0] = convertOffset(String(offset[0]), el.width);\n  offset[1] = convertOffset(String(offset[1]), el.height);\n}\n\nexport {\n  flipOffset,\n  normalizeOffset\n};"],"mappings":";;;;;;;AAEA,SAASA,UAAU,CAACC,MAAgB,EAAEC,KAAa,EAAE;EACnDD,MAAM,CAACC,KAAK,CAAC,GAAG,CAACD,MAAM,CAACC,KAAK,CAAC;EAC9B,OAAOD,MAAM;AACf;AAEA,SAASE,aAAa,CAACC,GAAW,EAAEC,SAAiB,EAAE;EACrD,IAAIC,CAAC;EACL,IAAI,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC,EAAE;IAClBE,CAAC,GAAIE,QAAQ,CAACJ,GAAG,CAACK,SAAS,CAAC,CAAC,EAAEL,GAAG,CAACM,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAIL,SAAS;EACxE,CAAC,MAAM;IACLC,CAAC,GAAGE,QAAQ,CAACJ,GAAG,EAAE,EAAE,CAAC;EACvB;EACA,OAAOE,CAAC,IAAI,CAAC;AACf;AAEA,SAASK,eAAe,CAACV,MAAgB,EAAEW,EAAe,EAAE;EAC1DX,MAAM,CAAC,CAAC,CAAC,GAAGE,aAAa,CAACU,MAAM,CAACZ,MAAM,CAAC,CAAC,CAAC,CAAC,EAAEW,EAAE,CAACE,KAAK,CAAC;EACtDb,MAAM,CAAC,CAAC,CAAC,GAAGE,aAAa,CAACU,MAAM,CAACZ,MAAM,CAAC,CAAC,CAAC,CAAC,EAAEW,EAAE,CAACG,MAAM,CAAC;AACzD"}