{"version":3,"file":"getElFuturePos.js","names":["getElFuturePos","elRegion","refNodeRegion","points","offset","targetOffset","p1","getAlignOffset","p2","diff","left","top","Math","round"],"sources":["../../../../../src/common/domAlign/calc/getElFuturePos.tsx"],"sourcesContent":["import getAlignOffset from './getAlignOffset';\nimport type { IFullRegion, IPoints, IOffsets, IPos } from '../interface';\n\n/**\n * 获取source即将被放置的位置\n * @param elRegion: source 元素占据的区域 {left, top , width, height}\n * @param refNodeRegion: target 元素占据的区域 {left, top , width, height}\n * @param points  ['tr','cc'] align source t[op] r[ight] with target c[enter] c[enter]\n * @param offset\n * @param targetOffset\n */\nfunction getElFuturePos(elRegion: IFullRegion, refNodeRegion: IFullRegion, points: IPoints, offset: IOffsets, targetOffset: IOffsets): IPos {\n  const p1 = getAlignOffset(refNodeRegion, points[1]); // 获取target的对齐点的坐标\n  const p2 = getAlignOffset(elRegion, points[0]); // 获取source的对齐点的坐标\n  const diff = [p2.left - p1.left, p2.top - p1.top]; // 两者之差即source元素需要移动的距离\n\n  return {\n    left: Math.round(elRegion.left - diff[0] + offset[0] - targetOffset[0]),\n    top: Math.round(elRegion.top - diff[1] + offset[1] - targetOffset[1]),\n  };\n}\n\nexport default getElFuturePos;\n"],"mappings":";;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,CAACC,QAAqB,EAAEC,aAA0B,EAAEC,MAAe,EAAEC,MAAgB,EAAEC,YAAsB,EAAQ;EAC1I,MAAMC,EAAE,GAAG,IAAAC,uBAAc,EAACL,aAAa,EAAEC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAMK,EAAE,GAAG,IAAAD,uBAAc,EAACN,QAAQ,EAAEE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMM,IAAI,GAAG,CAACD,EAAE,CAACE,IAAI,GAAGJ,EAAE,CAACI,IAAI,EAAEF,EAAE,CAACG,GAAG,GAAGL,EAAE,CAACK,GAAG,CAAC,CAAC,CAAC;;EAEnD,OAAO;IACLD,IAAI,EAAEE,IAAI,CAACC,KAAK,CAACZ,QAAQ,CAACS,IAAI,GAAGD,IAAI,CAAC,CAAC,CAAC,GAAGL,MAAM,CAAC,CAAC,CAAC,GAAGC,YAAY,CAAC,CAAC,CAAC,CAAC;IACvEM,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACZ,QAAQ,CAACU,GAAG,GAAGF,IAAI,CAAC,CAAC,CAAC,GAAGL,MAAM,CAAC,CAAC,CAAC,GAAGC,YAAY,CAAC,CAAC,CAAC;EACtE,CAAC;AACH;AAAC,eAEcL,cAAc;AAAA"}