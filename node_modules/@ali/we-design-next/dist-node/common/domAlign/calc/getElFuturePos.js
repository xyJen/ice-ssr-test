"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _getAlignOffset = _interopRequireDefault(require("./getAlignOffset"));
/**
 * 获取source即将被放置的位置
 * @param elRegion: source 元素占据的区域 {left, top , width, height}
 * @param refNodeRegion: target 元素占据的区域 {left, top , width, height}
 * @param points  ['tr','cc'] align source t[op] r[ight] with target c[enter] c[enter]
 * @param offset
 * @param targetOffset
 */
function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
  const p1 = (0, _getAlignOffset.default)(refNodeRegion, points[1]); // 获取target的对齐点的坐标
  const p2 = (0, _getAlignOffset.default)(elRegion, points[0]); // 获取source的对齐点的坐标
  const diff = [p2.left - p1.left, p2.top - p1.top]; // 两者之差即source元素需要移动的距离

  return {
    left: Math.round(elRegion.left - diff[0] + offset[0] - targetOffset[0]),
    top: Math.round(elRegion.top - diff[1] + offset[1] - targetOffset[1])
  };
}
var _default = getElFuturePos;
exports.default = _default;
//# sourceMappingURL=getElFuturePos.js.map