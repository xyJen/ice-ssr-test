"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OverlayWrap = exports.Container = void 0;
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _common = require("../../common");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const commonLiStyle = /*#__PURE__*/(0, _styledComponents.css)([".bread-separator{margin:4px;color:", ";}li{display:flex;}li .bread-link{height:32px;display:flex;align-items:center;}li .bread-link a{text-decoration:none;white-space:nowrap;color:", ";&:hover{color:", ";}}li .bread-link span{text-decoration:none;white-space:nowrap;color:", ";}li:last-child{.bread-link span{color:", ";font-weight:600;}.bread-separator{display:none;}}"], _common.COLORS.LIGHT.LEVEL3_BASE_COLOR, _common.COLORS.LIGHT.LEVEL2_BASE_COLOR, _common.COLORS.LIGHT.LEVEL1_BASE_COLOR, _common.COLORS.LIGHT.LEVEL2_BASE_COLOR, _common.COLORS.LIGHT.LEVEL1_BASE_COLOR);
const Container = /*#__PURE__*/_styledComponents.default.div(["ol{display:flex;flex-wrap:wrap;margin:0;padding:0;list-style:none;", "}.mirror-breadcrumb{position:absolute;width:100%;height:0;overflow-y:hidden;}.single-line-breadcrumb{ol{width:100%;flex-wrap:nowrap;overflow:hidden;li{display:inline-flex;align-items:center;}}}"], commonLiStyle);
exports.Container = Container;
const OverlayWrap = /*#__PURE__*/_styledComponents.default.div(["padding:6px 16px;background:", ";box-shadow:0px 1px 4px ", ";border-radius:4px;ol{li:last-child{.bread-link span{font-weight:400;color:", ";}}}"], _common.COLORS.WHITE, _common.COLORS.COMMON.OVERLAY_COLOR, _common.COLORS.LIGHT.LEVEL2_BASE_COLOR);
exports.OverlayWrap = OverlayWrap;
//# sourceMappingURL=styles.js.map