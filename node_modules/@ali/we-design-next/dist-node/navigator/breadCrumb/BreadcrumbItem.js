"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var React = _interopRequireWildcard(require("react"));
var _popover = require("../../display/popover");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/React.createElement;
const BreadcrumbItem = /*#__PURE__*/React.memo(props => {
  const {
    prefixCls = 'bread',
    separator = '/',
    children,
    overlay,
    getOrCreateRef,
    index,
    ...restProps
  } = props;
  const localRef = React.useRef(null);
  (0, React.useEffect)(() => {
    index !== undefined && getOrCreateRef && getOrCreateRef(index, localRef);
  }, [index, getOrCreateRef]);

  /** If overlay is have Wrap a Dropdown */
  const renderBreadcrumbNode = breadcrumbItem => {
    if (overlay) {
      return /*#__PURE__*/_createElement(_popover.Popover, {
        style: {
          marginTop: 16
        },
        content: overlay,
        placement: "bottomLeft",
        trigger: "mouse-enter"
      }, /*#__PURE__*/_createElement("span", {
        className: `${prefixCls}-overlay-link`
      }, breadcrumbItem));
    }
    return breadcrumbItem;
  };
  let link;
  if ('href' in restProps) {
    link = /*#__PURE__*/_createElement("a", (0, _extends2.default)({
      className: `${prefixCls}-link`
    }, restProps), children);
  } else {
    link = /*#__PURE__*/_createElement("span", (0, _extends2.default)({
      className: `${prefixCls}-link`
    }, restProps), children);
  }

  // wrap to dropDown
  link = renderBreadcrumbNode(link);
  if (children) {
    return /*#__PURE__*/_createElement("li", {
      ref: localRef
    }, link, separator && /*#__PURE__*/_createElement("span", {
      className: `${prefixCls}-separator`
    }, separator));
  }
  return null;
});
var _default = BreadcrumbItem;
exports.default = _default;
//# sourceMappingURL=BreadcrumbItem.js.map