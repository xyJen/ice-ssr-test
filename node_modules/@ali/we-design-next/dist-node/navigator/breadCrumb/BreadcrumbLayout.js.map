{"version":3,"file":"BreadcrumbLayout.js","names":["ELLIPSISPATH","ELLIPSISNAME","BreadcrumbLayout","memo","props","routes","onClick","renderFilename","renderFileName","width","containerWidth","maxWidth","ref","useRef","liRef","spanRef","singleLineRoutes","setsingleLineRoutes","useState","references","ellipsisBreadCrumbMaxWidth","setEllipsisBreadCrumbMaxWidth","ellipsisBreadCrumbIndex","setEllipsisBreadCrumbIndex","onResize","useEventCallback","current","Object","keys","length","ELLIPSISWIDTH","getBoundingClientRect","SEPARATORWIDTH","ELLIPSISMINWIDTH","Math","ceil","lastItemWidth","firstItemWidth","totalWidth","reduce","pre","cur","Number","floor","path","name","children","slice","secontItemWidth","ellipsisWidth","index","ellipsisIndex","reduceRight","_","curWidth","curEllipisisWidth","throttledOnResize","useMemo","debounce","useEffect","obs","ResizeObserver","observe","disconnect","getOrCreateRef","useCallback","id","mode","isSingleLine","padding","ellipisisIndex","ellipisisWidth"],"sources":["../../../../src/navigator/breadCrumb/BreadcrumbLayout.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { debounce } from 'lodash-es';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { useEventCallback } from '../../common';\nimport { Breadcrumb } from './Breadcrumb';\nimport { BreadcrumbContext, SingleLineRowContext } from './contexts';\nimport { Container } from './styles';\n\nexport interface Route {\n  // 点击跳转的路由\n  path: string;\n  // 节点展示内容\n  name: string;\n}\n\nexport interface BreadcrumbLayoutProps {\n  routes: Route[];\n  maxWidth?: number;\n  width?: number;\n  renderFilename?: (\n    route: Route,\n    options: {\n      maxWidth: number\n    }\n  ) => React.ReactNode;\n  onClick?: (path: string) => void;\n}\n// .../ 的 path\nconst ELLIPSISPATH = '';\n// .../ 的 name\nconst ELLIPSISNAME = '...';\n\nexport const BreadcrumbLayout = memo((props: BreadcrumbLayoutProps) => {\n  const { routes, onClick, renderFilename: renderFileName, width: containerWidth = -1, maxWidth = -1 } = props; \n  // 组件 测量 ref\n  const ref = useRef<HTMLDivElement>(null);\n  // ../ 测量 ref\n  const liRef = useRef<HTMLLIElement>(null);\n  // 分隔符测量 ref\n  const spanRef = useRef<HTMLSpanElement>(null);\n  // 响应式节点\n  const [singleLineRoutes, setsingleLineRoutes] = useState<Route[]>(routes);\n  // mirror 上节点的 refs\n  const [references] = useState<Record<number, any>>({})\n  // 计算需要 ellipsis 节点的宽度\n  const [ellipsisBreadCrumbMaxWidth, setEllipsisBreadCrumbMaxWidth] = useState(-1)\n  // 计算需要 ellipsis 节点的位置 \n  const [ellipsisBreadCrumbIndex, setEllipsisBreadCrumbIndex] = useState(-1)\n\n  const onResize = useEventCallback(() => {\n    if (ref?.current && Object.keys(references).length >= routes.length && liRef?.current && spanRef?.current && containerWidth !== -1) {\n      // .../ 的宽度\n      const ELLIPSISWIDTH = liRef.current.getBoundingClientRect()?.width;\n      // separator 的宽度\n      const SEPARATORWIDTH = spanRef.current.getBoundingClientRect()?.width;\n      // 节点由 ellipsis 变为收起的临界点\n      const ELLIPSISMINWIDTH = SEPARATORWIDTH + 10;\n      const width = Math.ceil(ref.current.getBoundingClientRect().width) - 1;\n      // mirror 最右边的节点\n      const lastItemWidth = references[routes.length - 1].current?.getBoundingClientRect()?.width;\n      // mirror 最左边的节点\n      const firstItemWidth = references[0].current?.getBoundingClientRect()?.width;\n      // mirror 宽度\n      const totalWidth = Math.ceil(Object.keys(references).reduce((pre, cur) => \n         references[Number(cur)]?.current \n          ? pre + references[Number(cur)]?.current?.getBoundingClientRect()?.width\n          : pre\n          , -1)\n      );\n      \n      // lastBreadcrumb...\n      if (routes.length === 1) {\n        setEllipsisBreadCrumbIndex(0);\n        setEllipsisBreadCrumbMaxWidth(Math.floor(width));\n        return setsingleLineRoutes(routes);\n      }\n      // ... / lastBreadcrumb\n      if (Math.floor(lastItemWidth + ELLIPSISWIDTH + ELLIPSISMINWIDTH) >= width) {\n        setEllipsisBreadCrumbIndex(1);\n        setEllipsisBreadCrumbMaxWidth(width - Math.floor(ELLIPSISWIDTH));\n        return setsingleLineRoutes([{path: ELLIPSISPATH, name: ELLIPSISNAME, children: routes.slice(0, -1)} as Route, ...routes.slice(-1)]);\n      }\n      // firstBreadcrumb... / lastBreadcrumb\n      if(routes.length === 2) {\n        setEllipsisBreadCrumbIndex(0);\n        setEllipsisBreadCrumbMaxWidth(width - Math.floor(lastItemWidth + SEPARATORWIDTH));\n        return setsingleLineRoutes(routes);\n      }\n      // firstBreadcrumb / ... / lastBreadcrumb\n      if (Math.floor(firstItemWidth + lastItemWidth + ELLIPSISWIDTH + ELLIPSISMINWIDTH) >= width) {\n        setEllipsisBreadCrumbIndex(0);\n        setEllipsisBreadCrumbMaxWidth(width - Math.floor(lastItemWidth + ELLIPSISWIDTH + SEPARATORWIDTH));\n        return setsingleLineRoutes([\n          ...routes.slice(0, 1), {path: ELLIPSISPATH, name: ELLIPSISNAME, children: routes.slice(1, -1)} as Route, ...routes.slice(-1)\n        ]);\n       }\n\n      // firstBreadcrumb / ellipsisBreadcrumb... / lastBreadcrumb \n      if (width < totalWidth && routes.length >= 3) {\n        const secontItemWidth = Math.floor(references[1].current?.getBoundingClientRect()?.width);\n        if (totalWidth - secontItemWidth + ELLIPSISMINWIDTH <= width){\n          setEllipsisBreadCrumbIndex(1);\n          setEllipsisBreadCrumbMaxWidth(width - totalWidth + (Math.floor(references[1]?.current?.getBoundingClientRect()?.width - SEPARATORWIDTH)));\n          return(routes);\n        }\n      }\n      // firstBreadcrumb / ... / ellipsisBreadcrumb... / lastBreadcrumb\n      if (width < totalWidth && routes.length > 3){\n        // routes 掐头去尾累加宽度，找到 ellipsisBreadcrumb\n        const { width: ellipsisWidth, index: ellipsisIndex } = Object.keys(references).slice(1, routes.length - 1).reduceRight(\n          (pre, _, index) => {\n            if (pre.width > width) {\n              return pre;\n            }\n            // 从右向左累加下一个 breadcrumb + separator\n            const curWidth: number = pre.width + references[index + 1]?.current?.getBoundingClientRect()?.width;\n            // 从右向左累加从 ellipsis 到 ... 里面时的临界值 \n            const curEllipisisWidth = pre.width + ELLIPSISMINWIDTH;\n            // index + 1 所在的位置为 ellipsisBreadcrumb\n            if (curEllipisisWidth <= width && curWidth > width) {\n              return {\n                width: curWidth,\n                index: index + 1,\n              }\n            }\n            // index + 2 所在的位置为 ellipsisBreadcrumb \n            if (curEllipisisWidth > width && curWidth > width) {\n              return {\n                width: width + 1,\n                index: index + 2,\n              } \n            }\n            return {\n              width: curWidth,\n              index: index,\n            }\n          }, \n          {\n            // 初始值为 firstBreadcrumb / ... / lastBreadcrumb 宽度之和\n            width: firstItemWidth + lastItemWidth + ELLIPSISWIDTH,\n            index: -1,\n          }\n        );\n\n        // firstBreadcrumb / ellipsisBreadcrumb... / lastBreadcrumb \n        if (ellipsisIndex === 1) {\n          setEllipsisBreadCrumbIndex(1);\n          setEllipsisBreadCrumbMaxWidth(width - totalWidth + (Math.floor(references[ellipsisIndex]?.current?.getBoundingClientRect()?.width - SEPARATORWIDTH + ELLIPSISWIDTH)));\n          return(routes);\n        }\n        \n        setEllipsisBreadCrumbIndex(2);\n        // 总宽度 - 不包含 ellipsisBreadcrumb 总宽度 - 分割线宽度 = ellipsisBreadcrumb 能显示的最大宽度 \n        setEllipsisBreadCrumbMaxWidth(width - (Math.floor(ellipsisWidth - references[ellipsisIndex]?.current?.getBoundingClientRect()?.width + SEPARATORWIDTH)));\n        return setsingleLineRoutes([\n          ...routes.slice(0, 1), {path: ELLIPSISPATH, name: ELLIPSISNAME, children: routes.slice(1, ellipsisIndex)} as Route, ...routes.slice(ellipsisIndex)\n        ]);\n      }\n      // default\n      setEllipsisBreadCrumbIndex(-1);\n      setsingleLineRoutes(routes);\n    }\n  });\n\n  const throttledOnResize = useMemo(() => debounce(onResize, 550), [onResize]);\n\n  // routes 更新时 resize\n  useEffect(\n    () => {\n      setsingleLineRoutes(routes);\n    }, \n    [routes]\n  );\n\n  // 没有 width 时 resize\n  useEffect(\n    () => {\n      if (containerWidth === -1) {\n          setEllipsisBreadCrumbIndex(-1);\n          setsingleLineRoutes(routes);\n      }\n    }, \n    [routes, containerWidth]\n  );\n\n  useEffect(\n    () => {\n      if (ref.current) {\n        const obs = new ResizeObserver(throttledOnResize);\n        obs.observe(ref.current);\n\n        return () => {\n          obs.disconnect();\n        };\n      }\n    }, \n    [routes]\n  );\n\n  // mirror 测量 ref\n  const getOrCreateRef = useCallback(\n    (id: number, ref: React.MutableRefObject<HTMLLIElement | null>) => {\n      references[id] = ref;\n    }, \n    [],\n  )\n\n  return (\n    <BreadcrumbContext.Provider value={{ mode: 'singleLine' }}>\n      <Container>\n        <SingleLineRowContext.Provider value={{ isSingleLine: false }}>\n          <div className=\"mirror-breadcrumb\">\n            <Breadcrumb\n                routes={routes}\n                renderLastItem={renderFileName}\n                getOrCreateRef={getOrCreateRef}\n            />\n            <ol>\n              <li ref={liRef}>\n                <span className='mirror-link'>{ELLIPSISNAME}</span>\n                <span className='mirror-separator' ref={spanRef} style={{ padding: 4 }}>/</span>\n              </li>\n            </ol>\n          </div> \n        </SingleLineRowContext.Provider>\n        <SingleLineRowContext.Provider \n          value={{ \n            isSingleLine: true,  \n            ellipisisIndex: ellipsisBreadCrumbIndex,\n            ellipisisWidth: ellipsisBreadCrumbMaxWidth,\n          }}\n        >\n          <div className=\"single-line-breadcrumb\" ref={ref} style={{ width: containerWidth === -1 ? '100%' : containerWidth, maxWidth }}>\n            <Breadcrumb\n              routes={singleLineRoutes}\n              renderLastItem={renderFileName}\n              onBreadcrumbItemClick={onClick}\n            />\n          </div>\n        </SingleLineRowContext.Provider>\n      </Container>\n    </BreadcrumbContext.Provider>\n  );\n});"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAqC;AAAA;AAAA;AAAA,uBALT;AA0B5B;AACA,MAAMA,YAAY,GAAG,EAAE;AACvB;AACA,MAAMC,YAAY,GAAG,KAAK;AAEnB,MAAMC,gBAAgB,gBAAG,IAAAC,WAAI,EAAEC,KAA4B,IAAK;EACrE,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,cAAc,EAAEC,cAAc;IAAEC,KAAK,EAAEC,cAAc,GAAG,CAAC,CAAC;IAAEC,QAAQ,GAAG,CAAC;EAAE,CAAC,GAAGP,KAAK;EAC5G;EACA,MAAMQ,GAAG,GAAG,IAAAC,aAAM,EAAiB,IAAI,CAAC;EACxC;EACA,MAAMC,KAAK,GAAG,IAAAD,aAAM,EAAgB,IAAI,CAAC;EACzC;EACA,MAAME,OAAO,GAAG,IAAAF,aAAM,EAAkB,IAAI,CAAC;EAC7C;EACA,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG,IAAAC,eAAQ,EAAUb,MAAM,CAAC;EACzE;EACA,MAAM,CAACc,UAAU,CAAC,GAAG,IAAAD,eAAQ,EAAsB,CAAC,CAAC,CAAC;EACtD;EACA,MAAM,CAACE,0BAA0B,EAAEC,6BAA6B,CAAC,GAAG,IAAAH,eAAQ,EAAC,CAAC,CAAC,CAAC;EAChF;EACA,MAAM,CAACI,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG,IAAAL,eAAQ,EAAC,CAAC,CAAC,CAAC;EAE1E,MAAMM,QAAQ,GAAG,IAAAC,wBAAgB,EAAC,MAAM;IACtC,IAAIb,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEc,OAAO,IAAIC,MAAM,CAACC,IAAI,CAACT,UAAU,CAAC,CAACU,MAAM,IAAIxB,MAAM,CAACwB,MAAM,IAAIf,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEY,OAAO,IAAIX,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEW,OAAO,IAAIhB,cAAc,KAAK,CAAC,CAAC,EAAE;MAAA;MAClI;MACA,MAAMoB,aAAa,4BAAGhB,KAAK,CAACY,OAAO,CAACK,qBAAqB,EAAE,0DAArC,sBAAuCtB,KAAK;MAClE;MACA,MAAMuB,cAAc,4BAAGjB,OAAO,CAACW,OAAO,CAACK,qBAAqB,EAAE,0DAAvC,sBAAyCtB,KAAK;MACrE;MACA,MAAMwB,gBAAgB,GAAGD,cAAc,GAAG,EAAE;MAC5C,MAAMvB,KAAK,GAAGyB,IAAI,CAACC,IAAI,CAACvB,GAAG,CAACc,OAAO,CAACK,qBAAqB,EAAE,CAACtB,KAAK,CAAC,GAAG,CAAC;MACtE;MACA,MAAM2B,aAAa,0BAAGjB,UAAU,CAACd,MAAM,CAACwB,MAAM,GAAG,CAAC,CAAC,CAACH,OAAO,iFAArC,oBAAuCK,qBAAqB,EAAE,0DAA9D,sBAAgEtB,KAAK;MAC3F;MACA,MAAM4B,cAAc,4BAAGlB,UAAU,CAAC,CAAC,CAAC,CAACO,OAAO,oFAArB,sBAAuBK,qBAAqB,EAAE,2DAA9C,uBAAgDtB,KAAK;MAC5E;MACA,MAAM6B,UAAU,GAAGJ,IAAI,CAACC,IAAI,CAACR,MAAM,CAACC,IAAI,CAACT,UAAU,CAAC,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG;QAAA;QAAA,OAClE,sBAAAtB,UAAU,CAACuB,MAAM,CAACD,GAAG,CAAC,CAAC,+CAAvB,mBAAyBf,OAAO,GAC7Bc,GAAG,2BAAGrB,UAAU,CAACuB,MAAM,CAACD,GAAG,CAAC,CAAC,iFAAvB,oBAAyBf,OAAO,oFAAhC,sBAAkCK,qBAAqB,EAAE,2DAAzD,uBAA2DtB,KAAK,IACtE+B,GAAG;MAAA,GACH,CAAC,CAAC,CAAC,CACR;;MAED;MACA,IAAInC,MAAM,CAACwB,MAAM,KAAK,CAAC,EAAE;QACvBN,0BAA0B,CAAC,CAAC,CAAC;QAC7BF,6BAA6B,CAACa,IAAI,CAACS,KAAK,CAAClC,KAAK,CAAC,CAAC;QAChD,OAAOQ,mBAAmB,CAACZ,MAAM,CAAC;MACpC;MACA;MACA,IAAI6B,IAAI,CAACS,KAAK,CAACP,aAAa,GAAGN,aAAa,GAAGG,gBAAgB,CAAC,IAAIxB,KAAK,EAAE;QACzEc,0BAA0B,CAAC,CAAC,CAAC;QAC7BF,6BAA6B,CAACZ,KAAK,GAAGyB,IAAI,CAACS,KAAK,CAACb,aAAa,CAAC,CAAC;QAChE,OAAOb,mBAAmB,CAAC,CAAC;UAAC2B,IAAI,EAAE5C,YAAY;UAAE6C,IAAI,EAAE5C,YAAY;UAAE6C,QAAQ,EAAEzC,MAAM,CAAC0C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAAC,CAAC,EAAW,GAAG1C,MAAM,CAAC0C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrI;MACA;MACA,IAAG1C,MAAM,CAACwB,MAAM,KAAK,CAAC,EAAE;QACtBN,0BAA0B,CAAC,CAAC,CAAC;QAC7BF,6BAA6B,CAACZ,KAAK,GAAGyB,IAAI,CAACS,KAAK,CAACP,aAAa,GAAGJ,cAAc,CAAC,CAAC;QACjF,OAAOf,mBAAmB,CAACZ,MAAM,CAAC;MACpC;MACA;MACA,IAAI6B,IAAI,CAACS,KAAK,CAACN,cAAc,GAAGD,aAAa,GAAGN,aAAa,GAAGG,gBAAgB,CAAC,IAAIxB,KAAK,EAAE;QAC1Fc,0BAA0B,CAAC,CAAC,CAAC;QAC7BF,6BAA6B,CAACZ,KAAK,GAAGyB,IAAI,CAACS,KAAK,CAACP,aAAa,GAAGN,aAAa,GAAGE,cAAc,CAAC,CAAC;QACjG,OAAOf,mBAAmB,CAAC,CACzB,GAAGZ,MAAM,CAAC0C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;UAACH,IAAI,EAAE5C,YAAY;UAAE6C,IAAI,EAAE5C,YAAY;UAAE6C,QAAQ,EAAEzC,MAAM,CAAC0C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAAC,CAAC,EAAW,GAAG1C,MAAM,CAAC0C,KAAK,CAAC,CAAC,CAAC,CAAC,CAC7H,CAAC;MACH;;MAED;MACA,IAAItC,KAAK,GAAG6B,UAAU,IAAIjC,MAAM,CAACwB,MAAM,IAAI,CAAC,EAAE;QAAA;QAC5C,MAAMmB,eAAe,GAAGd,IAAI,CAACS,KAAK,0BAACxB,UAAU,CAAC,CAAC,CAAC,CAACO,OAAO,oFAArB,sBAAuBK,qBAAqB,EAAE,2DAA9C,uBAAgDtB,KAAK,CAAC;QACzF,IAAI6B,UAAU,GAAGU,eAAe,GAAGf,gBAAgB,IAAIxB,KAAK,EAAC;UAAA;UAC3Dc,0BAA0B,CAAC,CAAC,CAAC;UAC7BF,6BAA6B,CAACZ,KAAK,GAAG6B,UAAU,GAAIJ,IAAI,CAACS,KAAK,CAAC,iBAAAxB,UAAU,CAAC,CAAC,CAAC,yEAAb,aAAeO,OAAO,kFAAtB,qBAAwBK,qBAAqB,EAAE,0DAA/C,sBAAiDtB,KAAK,IAAGuB,cAAc,CAAE,CAAC;UACzI,OAAO3B,MAAM;QACf;MACF;MACA;MACA,IAAII,KAAK,GAAG6B,UAAU,IAAIjC,MAAM,CAACwB,MAAM,GAAG,CAAC,EAAC;QAAA;QAC1C;QACA,MAAM;UAAEpB,KAAK,EAAEwC,aAAa;UAAEC,KAAK,EAAEC;QAAc,CAAC,GAAGxB,MAAM,CAACC,IAAI,CAACT,UAAU,CAAC,CAAC4B,KAAK,CAAC,CAAC,EAAE1C,MAAM,CAACwB,MAAM,GAAG,CAAC,CAAC,CAACuB,WAAW,CACpH,CAACZ,GAAG,EAAEa,CAAC,EAAEH,KAAK,KAAK;UAAA;UACjB,IAAIV,GAAG,CAAC/B,KAAK,GAAGA,KAAK,EAAE;YACrB,OAAO+B,GAAG;UACZ;UACA;UACA,MAAMc,QAAgB,GAAGd,GAAG,CAAC/B,KAAK,mBAAGU,UAAU,CAAC+B,KAAK,GAAG,CAAC,CAAC,wEAArB,YAAuBxB,OAAO,kFAA9B,qBAAgCK,qBAAqB,EAAE,0DAAvD,sBAAyDtB,KAAK;UACnG;UACA,MAAM8C,iBAAiB,GAAGf,GAAG,CAAC/B,KAAK,GAAGwB,gBAAgB;UACtD;UACA,IAAIsB,iBAAiB,IAAI9C,KAAK,IAAI6C,QAAQ,GAAG7C,KAAK,EAAE;YAClD,OAAO;cACLA,KAAK,EAAE6C,QAAQ;cACfJ,KAAK,EAAEA,KAAK,GAAG;YACjB,CAAC;UACH;UACA;UACA,IAAIK,iBAAiB,GAAG9C,KAAK,IAAI6C,QAAQ,GAAG7C,KAAK,EAAE;YACjD,OAAO;cACLA,KAAK,EAAEA,KAAK,GAAG,CAAC;cAChByC,KAAK,EAAEA,KAAK,GAAG;YACjB,CAAC;UACH;UACA,OAAO;YACLzC,KAAK,EAAE6C,QAAQ;YACfJ,KAAK,EAAEA;UACT,CAAC;QACH,CAAC,EACD;UACE;UACAzC,KAAK,EAAE4B,cAAc,GAAGD,aAAa,GAAGN,aAAa;UACrDoB,KAAK,EAAE,CAAC;QACV,CAAC,CACF;;QAED;QACA,IAAIC,aAAa,KAAK,CAAC,EAAE;UAAA;UACvB5B,0BAA0B,CAAC,CAAC,CAAC;UAC7BF,6BAA6B,CAACZ,KAAK,GAAG6B,UAAU,GAAIJ,IAAI,CAACS,KAAK,CAAC,0BAAAxB,UAAU,CAACgC,aAAa,CAAC,oFAAzB,sBAA2BzB,OAAO,qFAAlC,uBAAoCK,qBAAqB,EAAE,2DAA3D,uBAA6DtB,KAAK,IAAGuB,cAAc,GAAGF,aAAa,CAAE,CAAC;UACrK,OAAOzB,MAAM;QACf;QAEAkB,0BAA0B,CAAC,CAAC,CAAC;QAC7B;QACAF,6BAA6B,CAACZ,KAAK,GAAIyB,IAAI,CAACS,KAAK,CAACM,aAAa,8BAAG9B,UAAU,CAACgC,aAAa,CAAC,qFAAzB,uBAA2BzB,OAAO,qFAAlC,uBAAoCK,qBAAqB,EAAE,2DAA3D,uBAA6DtB,KAAK,IAAGuB,cAAc,CAAE,CAAC;QACxJ,OAAOf,mBAAmB,CAAC,CACzB,GAAGZ,MAAM,CAAC0C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;UAACH,IAAI,EAAE5C,YAAY;UAAE6C,IAAI,EAAE5C,YAAY;UAAE6C,QAAQ,EAAEzC,MAAM,CAAC0C,KAAK,CAAC,CAAC,EAAEI,aAAa;QAAC,CAAC,EAAW,GAAG9C,MAAM,CAAC0C,KAAK,CAACI,aAAa,CAAC,CACnJ,CAAC;MACJ;MACA;MACA5B,0BAA0B,CAAC,CAAC,CAAC,CAAC;MAC9BN,mBAAmB,CAACZ,MAAM,CAAC;IAC7B;EACF,CAAC,CAAC;EAEF,MAAMmD,iBAAiB,GAAG,IAAAC,cAAO,EAAC,MAAM,IAAAC,gBAAQ,EAAClC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAE5E;EACA,IAAAmC,gBAAS,EACP,MAAM;IACJ1C,mBAAmB,CAACZ,MAAM,CAAC;EAC7B,CAAC,EACD,CAACA,MAAM,CAAC,CACT;;EAED;EACA,IAAAsD,gBAAS,EACP,MAAM;IACJ,IAAIjD,cAAc,KAAK,CAAC,CAAC,EAAE;MACvBa,0BAA0B,CAAC,CAAC,CAAC,CAAC;MAC9BN,mBAAmB,CAACZ,MAAM,CAAC;IAC/B;EACF,CAAC,EACD,CAACA,MAAM,EAAEK,cAAc,CAAC,CACzB;EAED,IAAAiD,gBAAS,EACP,MAAM;IACJ,IAAI/C,GAAG,CAACc,OAAO,EAAE;MACf,MAAMkC,GAAG,GAAG,IAAIC,+BAAc,CAACL,iBAAiB,CAAC;MACjDI,GAAG,CAACE,OAAO,CAAClD,GAAG,CAACc,OAAO,CAAC;MAExB,OAAO,MAAM;QACXkC,GAAG,CAACG,UAAU,EAAE;MAClB,CAAC;IACH;EACF,CAAC,EACD,CAAC1D,MAAM,CAAC,CACT;;EAED;EACA,MAAM2D,cAAc,GAAG,IAAAC,kBAAW,EAChC,CAACC,EAAU,EAAEtD,GAAiD,KAAK;IACjEO,UAAU,CAAC+C,EAAE,CAAC,GAAGtD,GAAG;EACtB,CAAC,EACD,EAAE,CACH;EAED,oBACE,eAAC,2BAAiB,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEuD,IAAI,EAAE;IAAa;EAAE,gBACxD,eAAC,iBAAS,qBACR,eAAC,8BAAoB,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM;EAAE,gBAC5D;IAAK,SAAS,EAAC;EAAmB,gBAChC,eAAC,sBAAU;IACP,MAAM,EAAE/D,MAAO;IACf,cAAc,EAAEG,cAAe;IAC/B,cAAc,EAAEwD;EAAe,EACjC,eACF,wCACE;IAAI,GAAG,EAAElD;EAAM,kCACb;IAAM,SAAS,EAAC;EAAa,GAAEb,YAAY,CAAQ,gBACnD;IAAM,SAAS,EAAC,kBAAkB;IAAC,GAAG,EAAEc,OAAQ;IAAC,KAAK,EAAE;MAAEsD,OAAO,EAAE;IAAE;EAAE,OAAS,CAC7E,CACF,CACD,CACwB,eAChC,eAAC,8BAAoB,CAAC,QAAQ;IAC5B,KAAK,EAAE;MACLD,YAAY,EAAE,IAAI;MAClBE,cAAc,EAAEhD,uBAAuB;MACvCiD,cAAc,EAAEnD;IAClB;EAAE,gBAEF;IAAK,SAAS,EAAC,wBAAwB;IAAC,GAAG,EAAER,GAAI;IAAC,KAAK,EAAE;MAAEH,KAAK,EAAEC,cAAc,KAAK,CAAC,CAAC,GAAG,MAAM,GAAGA,cAAc;MAAEC;IAAS;EAAE,gBAC5H,eAAC,sBAAU;IACT,MAAM,EAAEK,gBAAiB;IACzB,cAAc,EAAER,cAAe;IAC/B,qBAAqB,EAAEF;EAAQ,EAC/B,CACE,CACwB,CACtB,CACe;AAEjC,CAAC,CAAC;AAAC"}