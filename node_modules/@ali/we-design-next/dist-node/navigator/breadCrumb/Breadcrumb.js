"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Breadcrumb = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var React = _interopRequireWildcard(require("react"));
var _lodash = require("lodash");
var _BreadcrumbItem = _interopRequireDefault(require("./BreadcrumbItem"));
var _styles = require("./styles");
var _contexts = require("./contexts");
var _tooltip = require("../../display/tooltip");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/React.createElement;
function defaultRenderItem(route, routes, options) {
  const index = routes.indexOf(route);
  const isLastItem = index === routes.length - 1;
  const isEllipsis = (options === null || options === void 0 ? void 0 : options.ellipisisIndex) === index;
  if (isLastItem && options !== null && options !== void 0 && options.renderLastItem) {
    return options === null || options === void 0 ? void 0 : options.renderLastItem(route, {
      maxWidth: isEllipsis ? options === null || options === void 0 ? void 0 : options.ellipisisWidth : -1
    });
  }
  const ellipsisStyle = isEllipsis ? {
    maxWidth: options === null || options === void 0 ? void 0 : options.ellipisisWidth,
    display: 'inline-block',
    overflow: 'hidden',
    textOverflow: 'ellipsis'
  } : {};
  const handleClick = e => {
    e.preventDefault();
    options === null || options === void 0 ? void 0 : options.onBreadcrumbItemClick(route === null || route === void 0 ? void 0 : route.path);
  };
  return isLastItem || options !== null && options !== void 0 && options.hasOverlay || route.path === '' ? isEllipsis ? /*#__PURE__*/_createElement(_tooltip.Tooltip, {
    title: route === null || route === void 0 ? void 0 : route.name,
    placement: 'top'
  }, /*#__PURE__*/_createElement("span", {
    style: ellipsisStyle
  }, route === null || route === void 0 ? void 0 : route.name)) : /*#__PURE__*/_createElement("span", {
    style: ellipsisStyle
  }, route === null || route === void 0 ? void 0 : route.name) : isEllipsis ? /*#__PURE__*/_createElement(_tooltip.Tooltip, {
    title: isEllipsis ? route === null || route === void 0 ? void 0 : route.name : '',
    placement: 'top'
  }, /*#__PURE__*/_createElement("a", {
    href: "!#",
    onClick: handleClick,
    style: ellipsisStyle
  }, route === null || route === void 0 ? void 0 : route.name)) : /*#__PURE__*/_createElement("a", {
    href: "!#",
    onClick: handleClick,
    style: ellipsisStyle
  }, route === null || route === void 0 ? void 0 : route.name);
}
const Breadcrumb = ({
  separator = '/',
  routes,
  children,
  renderItem = defaultRenderItem,
  onBreadcrumbItemClick,
  renderLastItem,
  getOrCreateRef = null,
  ...restProps
}) => {
  const {
    ellipisisIndex,
    ellipisisWidth
  } = (0, React.useContext)(_contexts.SingleLineRowContext);
  let crumbs;
  if (routes && routes.length > 0) {
    // generated by route
    const paths = [];
    crumbs = routes.map((route, index) => {
      const path = route.path;
      if (path) {
        paths.push(path);
      }
      // generated overlay by route.children
      let overlay;
      const hasOverlay = route.children && route.children.length;
      if (route.children && route.children.length) {
        overlay = /*#__PURE__*/_createElement(_styles.OverlayWrap, null, /*#__PURE__*/_createElement(_styles.Container, null, /*#__PURE__*/_createElement("ol", null, route.children.map(child => /*#__PURE__*/_createElement(_BreadcrumbItem.default, {
          separator: separator,
          key: path || child.name
        }, renderItem(child, routes, {
          renderLastItem,
          onBreadcrumbItemClick
        }))))));
      }
      return getOrCreateRef ? /*#__PURE__*/_createElement(_BreadcrumbItem.default, {
        getOrCreateRef: getOrCreateRef,
        overlay: overlay,
        separator: separator,
        key: path || route.name,
        index: index
      }, renderItem(route, routes, {
        renderLastItem
      })) : /*#__PURE__*/_createElement(_BreadcrumbItem.default, {
        overlay: overlay,
        separator: separator,
        key: path || route.name
      }, renderItem(route, routes, {
        ellipisisIndex,
        ellipisisWidth,
        hasOverlay,
        renderLastItem,
        onBreadcrumbItemClick
      }));
    });
  } else if (children) {
    crumbs = (0, _lodash.toArray)(children).map((element, index) => {
      if (!element) {
        return element;
      }
      return /*#__PURE__*/(0, React.cloneElement)(element, {
        separator,
        // eslint-disable-next-line react/no-array-index-key
        key: `separator-${index}`
      });
    });
  }
  const breadcrumbClassName = 'bread';
  return /*#__PURE__*/_createElement("nav", (0, _extends2.default)({
    className: breadcrumbClassName
  }, restProps), /*#__PURE__*/_createElement("ol", null, crumbs));
};
exports.Breadcrumb = Breadcrumb;
//# sourceMappingURL=Breadcrumb.js.map