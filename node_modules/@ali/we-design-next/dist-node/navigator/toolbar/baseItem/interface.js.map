{"version":3,"file":"interface.js","names":[],"sources":["../../../../../src/navigator/toolbar/baseItem/interface.ts"],"sourcesContent":["import type React from 'react';\n// import type {\n//   TOptionTitle,\n//   SelectRule as Rule,\n// } from '../../../';\n\nexport interface ICommonComponentProps {\n  /**\n   * 是否禁用\n   */\n  disabled?: boolean;\n  /**\n   * 工具的 title 文案\n   */\n  title?: string;\n  /**\n   * 工具的 tooltip 文案\n   */\n  tooltip?: string | React.ReactNode | {\n    title: string;\n    description?: string;\n    shortCut?: string\n    image: string;\n  } | {\n    title: string;\n    shortCut?: string\n    description?: string;\n  };\n\n  /**\n   * 单测Id\n   */\n  testid?: string;\n  /**\n   * 声明角色\n   */\n  role?: string;\n}\ninterface IOverLayProps {\n  overlayVisible?: boolean;\n  onOverlayVisibleChange?: (e: boolean) => void;\n  autoClose?: boolean;\n}\n\n\nexport interface ITBMenuProps extends IOverLayProps {\n  /**\n   * 按钮是否被选中\n   */\n  active?: boolean;\n\n  overlay: React.ReactElement | null;\n}\n\nexport interface ITBSelectProps<T> extends IOverLayProps {\n  /**\n   * Select 工作模式\n   */\n  mode?: 'default' | 'search' | 'input';\n  /**\n   * 选项是否在选中时显示选中态\n   */\n  selectable?: boolean;\n  onSelect: (id: string) => void;\n  /**\n   * 是否有边框\n   */\n  bordered?: boolean;\n  /**\n * 传入的校验规则\n */\n  // rules?: Array<Rule<T>>;\n  /**\n   * 是否错误\n   */\n  errored?: boolean;\n  /**\n   * 定制宽度\n   */\n  width?: number;\n  /**\n   * 自定义显示区的函数\n   */\n  renderTrigger?: (value?: T) => JSX.Element;\n  /**\n   * 选项的tooltip提示\n   */\n  // titles?: Record<string, TOptionTitle>;\n}\n\n"],"mappings":""}