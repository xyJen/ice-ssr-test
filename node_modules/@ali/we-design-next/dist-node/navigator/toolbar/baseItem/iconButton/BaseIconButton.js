"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BaseIconButton = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _toolbarHoverTip = require("../../toolbarHoverTip");
var _styled = require("./styled");
var _badge = require("../../../../basic/badge");
var _common = require("../../../../common");
var _lodash = require("lodash");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const BaseIconButton = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef((props, ref) => {
  const {
    icon,
    title,
    tooltip,
    disabled,
    size,
    active,
    onClick = _lodash.noop,
    onDoubleClick,
    badgeDot,
    testid,
    role,
    ...restProps
  } = props;
  const [click, doubleClick] = (0, _react.useMemo)(() => {
    if (!onDoubleClick) {
      return [onClick, undefined];
    } else {
      return sepreateDoubleClicks(onClick, onDoubleClick);
    }
  }, [onClick, onDoubleClick]);
  const showTitle = size === 'large';
  return /*#__PURE__*/_createElement(_styled.Wrapper, (0, _extends2.default)({
    ref: ref,
    className: (0, _common.mergeClassName)('wdn-toolbar-item', size, active && 'active', disabled && 'disabled'),
    "data-testid": testid,
    "data-role": role,
    onClick: disabled ? undefined : click,
    onDoubleClick: disabled ? undefined : doubleClick
  }, restProps), /*#__PURE__*/_createElement(_toolbarHoverTip.ToolbarHoverTip, {
    overlayVisible: false,
    disabled: disabled,
    tooltip: tooltip || !showTitle && !disabled && title
  }, /*#__PURE__*/_createElement("div", {
    className: "wdn-toolbar-icon"
  }, /*#__PURE__*/_react.default.cloneElement(icon, {
    size: size === 'large' ? 'large' : 'normal'
  }), badgeDot && (typeof badgeDot === 'boolean' ? /*#__PURE__*/_createElement(_badge.BadgeDot, {
    style: {
      position: 'absolute',
      top: 0,
      right: 0
    }
  }) : /*#__PURE__*/_createElement(_badge.BadgeDot, {
    style: {
      position: 'absolute',
      top: badgeDot.top,
      right: badgeDot.right
    }
  })))), showTitle && /*#__PURE__*/_createElement("div", {
    className: "wdn-toolbar-title"
  }, /*#__PURE__*/_createElement("div", {
    className: "wdn-tb-title-content"
  }, title)));
}));
exports.BaseIconButton = BaseIconButton;
const sepreateDoubleClicks = (onClick, onDoubleClick) => {
  let lastSingleClick = null;
  return [e => {
    if (lastSingleClick === null) {
      const last = lastSingleClick = Date.now();
      setTimeout(() => {
        if (lastSingleClick === last) {
          onClick(e);
          lastSingleClick = null;
        }
      }, 300);
    }
  }, e => {
    lastSingleClick = null;
    onDoubleClick(e);
  }];
};
//# sourceMappingURL=BaseIconButton.js.map