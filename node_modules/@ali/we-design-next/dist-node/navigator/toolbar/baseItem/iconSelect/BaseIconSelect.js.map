{"version":3,"file":"BaseIconSelect.js","names":["SelectWrapper","styled","Select","COLORS","LIGHT","DAVINCI_BLUE_LIGHT_HOVER","DAVINCI_BLUE_LIGHT_ACTIVE","getSelectOptions","tbOption","key","prefix","icon","title","disabled","testid","renderValueByOPt","needTitle","node","BseIconSelect","React","memo","props","tooltip","size","options","overlayVisible","overlayVisible_","onVisibleChange","width","value","onChange","getContainer","role","keyboard","optMap","opts","useMemo","validOptMap","Map","validOptions","forEach","opt","push","group","items","item","set","isNormal","style","s","height","Math","max","renderValue","useCallback","get","a","renderOption","restOPt","optNode","option","setOverlayVisible","useDefaultProp","mergeClassName"],"sources":["../../../../../../src/navigator/toolbar/baseItem/iconSelect/BaseIconSelect.tsx"],"sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { Select } from '../../../../form/select';\nimport type { ISelectProps, ISelectOption } from '../../../../form/select/Select';\nimport type { IBaseSelectProps, IOption } from './interface';\nimport styled from 'styled-components';\nimport { ToolbarHoverTip } from '../../toolbarHoverTip';\nimport { useDefaultProp } from '../../../../common/react/useDefaultProp';\nimport { COLORS, mergeClassName } from '../../../../common';\nimport { Tooltip } from '../../../../display/tooltip';\n\nexport type ISelectOptionGroup = {\n  title: string;\n  items: Array<ISelectOption>;\n};\n\nconst SelectWrapper = styled(Select)`\n  &.normal .wdn-select-normal,.wdn-select-input { height: 28px; padding-left: 0 }\n  &.small .wdn-select-normal,.wdn-select-input { height: 24px }\n\n  .wdn-select-normal {\n    padding-left: 2px;\n    :hover {\n      background: ${COLORS.LIGHT.DAVINCI_BLUE_LIGHT_HOVER};\n    }\n  }\n  &.active .wdn-select-normal {\n    background: ${COLORS.LIGHT.DAVINCI_BLUE_LIGHT_ACTIVE};\n  }\n\n  .wdn-toolbar-select-value {\n    display: flex;\n    line-height: 20px;\n    font-size: 12px;\n    align-items: center;\n    &>:not(:last-child){\n      flex-shrink: 0;\n    }\n    .title {\n      flex-shrink: 1;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n  span:not(.wdn-toolbar-select-value *) {\n    margin: 0;  \n    svg {\n      margin-right: -4px;\n      transition: transform 500ms;\n      transform: rotate(0deg);\n      width: 8px;\n      height: 8px;\n    }\n  }\n\n  &.disabled {\n    opacity: 0.35;\n  }\n  &.disabled * {\n    color: unset;\n  }\n`\n\nfunction getSelectOptions(tbOption: IOption) {\n  return {\n    key: tbOption.key,\n    prefix: tbOption.icon,\n    title: tbOption.title,\n    disabled: tbOption.disabled,\n    testid: tbOption.testid,\n  };\n}\n\nfunction renderValueByOPt(tbOption: IOption, needTitle: boolean): React.ReactElement {\n  const node = (\n    <div\n      className='wdn-toolbar-select-value'\n    >\n      {tbOption.icon}\n      {needTitle && <span className=\"title\">{tbOption.title}</span>}\n    </div>\n  );\n  return node;\n}\n\nexport const BseIconSelect = React.memo((props: IBaseSelectProps) => {\n  const {\n    tooltip,\n    disabled,\n    size,\n    options,\n    overlayVisible: overlayVisible_,\n    onVisibleChange,\n    width,\n    value,\n    onChange,\n    getContainer,\n    testid,\n    role,\n    keyboard,\n  } = props;\n\n  const [optMap, opts] = useMemo(() => {\n    const validOptMap = new Map<string, IOption>();\n    const validOptions: ISelectProps['options'] = [];\n    options.forEach((opt) => {\n      if (opt === 'divider') {\n        validOptions.push(opt);\n      } else if ('items' in opt) {\n        const group: ISelectOptionGroup = { items: [], title: opt.title };\n        opt.items.forEach((item) => {\n          validOptMap.set(item.key, item);\n          group.items.push(getSelectOptions(item));\n        });\n        validOptions.push(group);\n      } else {\n        validOptions.push(getSelectOptions(opt));\n        validOptMap.set(opt.key, opt);\n      }\n    });\n    return [validOptMap, validOptions];\n  }, [options]);\n\n  const isNormal = (size === 'normal') ;\n\n  const style = useMemo(() => {\n    const s: React.CSSProperties = isNormal ? { height: 28 } : { height: 24 };\n    if (isNormal) {\n      s.width = 37;\n    } else {\n      s.width = width ? Math.max(37, width) : 37;\n    }\n    return s;\n  }, [size, width]);\n\n  const renderValue = useCallback(() => {\n    const opt = value && optMap.get(value);\n    const a = opt ? renderValueByOPt(opt, isNormal ? false : (!!style.width && style.width > 37)) : null;\n    return a;\n  }, [value, optMap, isNormal, style]);\n\n  const renderOption = useCallback(({ key }: { key: string }) => {\n    const opt = optMap.get(key);\n    if (!opt) { return null; }\n    const { tooltip, title, ...restOPt } = opt;\n    const optNode = <Select.Option children={title} {...restOPt} />;\n    const option = tooltip ? <Tooltip placement=\"left\" title={tooltip}>{optNode}</Tooltip> : tooltip;\n    return option;\n  }, [value, optMap, isNormal]);\n\n  const [overlayVisible, setOverlayVisible] = useDefaultProp(false, overlayVisible_, onVisibleChange);\n\n  return (\n    <ToolbarHoverTip disabled={disabled} overlayVisible={overlayVisible} tooltip={tooltip}>\n      <SelectWrapper\n        renderValue={renderValue}\n        className={mergeClassName('wdn-toolbar-item-select wdn-toolbar-item', overlayVisible && 'active' , size, disabled && 'disabled')}\n        style={style}\n        renderOption={renderOption}\n        disabled={disabled}\n        bordered={false}\n        value={value}\n        onChange={onChange}\n        options={opts}\n        visible={overlayVisible}\n        onVisibleChange={setOverlayVisible}\n        getContainer={getContainer}\n        data-testid={testid}\n        data-role={role}\n        keyboard={keyboard}\n      />\n    </ToolbarHoverTip>\n  );\n});"],"mappings":"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"}