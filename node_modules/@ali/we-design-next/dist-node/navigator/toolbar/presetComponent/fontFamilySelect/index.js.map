{"version":3,"file":"index.js","names":["fontSet","Set","fontFamilies","getFontDetector","fontDetectorMap","Map","fonts","fontDetector","get","FontDetector","useFontFamily","t","options","useMemo","getFontFamily","s","temp","TBFontFamilySelect","React","memo","props","value","value_","onChange","onChange_","overlayVisible","overlayVisible_","onVisibleChange","onVisibleChange_","downloadFontInfos","handleDownload","enableUnSupportFont","restProps","useTranslate","setValue","useDefaultProp","installedRecord","setInstalledRecord","useState","default","fontDetectedRef","useRef","fontDetected","current","fontFamiliesInfo","res","forEach","installable","push","key","title","disabled","status","extendOptions","some","opt","detectFont","useCallback","font","detect","then","hasFont","newInstalledRecord","results","result","index","useEffect","useLayoutEffect","renderOption","family","find","o","display","justifyContent","titleNode","undefined","fontFamily","fontValue","has","displayName"],"sources":["../../../../../../src/navigator/toolbar/presetComponent/fontFamilySelect/index.tsx"],"sourcesContent":["import React, { useMemo, useState, useCallback, useLayoutEffect, useRef, useEffect } from 'react';\nimport { TBTextSelect } from '../../baseItem/textSelect';\nimport { ISelectProps, Select } from '../../../../form/select';\nimport type { ITBTextSelectProps } from '../../baseItem/textSelect';\nimport { Tooltip } from '../../../../display/tooltip/Tooltip';\nimport { getFontFamily, fontFamilies } from './getFontFamily';\nimport { useTranslate } from '../../../../locale';\nimport { useDefaultProp } from '../../../../common';\nimport { FontDetector } from './FontDetector';\nimport { DownloadButton } from './DownloadButton';\n\nconst fontSet = new Set(fontFamilies);\n\nconst getFontDetector = (() => {\n  let fontDetectorMap = new Map<string[] | string, FontDetector>();\n  return function (fonts: (string[] | string) = fontFamilies) {\n    let fontDetector = fontDetectorMap.get(fonts);\n    if (fontDetector) { return fontDetector; }\n    if (typeof fonts === 'string') { }\n    fontDetector = new FontDetector(\n      (typeof fonts === 'string') ? [fonts] : fonts,\n    );\n    return fontDetector;\n  }\n})();\n\nconst useFontFamily = (t: (v: string) => string) => {\n\n  // 字体列表选项\n  const options = useMemo(() => {\n    const fontFamilies = getFontFamily((s) => t(s));\n    return fontFamilies;\n  }, [t]);\n\n  return options;\n};\n\nexport interface DownloadFontInfo {\n  status: 'unDownload' | 'downloading' | 'downloaded';\n}\n\nexport interface ITBFontFamilySelectProps extends Omit<ITBTextSelectProps, 'renderOption'> {\n  downloadFontInfos?: Record<string, DownloadFontInfo>;\n  handleDownload?: (font: string) => void;\n  // 可否接受传入不支持的字体\n  enableUnSupportFont?: boolean;\n}\n\nconst temp: Record<string, DownloadFontInfo> = {};\n\nexport const TBFontFamilySelect = React.memo<ITBFontFamilySelectProps>((props) => {\n  const {\n    value: value_,\n    onChange: onChange_,\n    overlayVisible: overlayVisible_,\n    onVisibleChange: onVisibleChange_,\n    downloadFontInfos = temp,\n    handleDownload,\n    enableUnSupportFont = true,\n    ...restProps\n  } = props;\n  const t = useTranslate();\n  const [value, setValue] = useDefaultProp('default', value_, onChange_);\n  const [overlayVisible, onVisibleChange] = useDefaultProp(false, overlayVisible_, onVisibleChange_);\n\n  const [installedRecord, setInstalledRecord] = useState<\n    Record<string, boolean>\n  >({ default: true });\n  // font detected\n  const fontDetectedRef = useRef({ fontDetected: false, installedRecord });\n  fontDetectedRef.current.installedRecord = installedRecord;\n\n  // @ts-ignore\n  const fontFamiliesInfo = useFontFamily(t);\n\n  const options = useMemo(() => {\n    const res: Array<{ key: string, title: string, disabled: boolean }> = [];\n    fontFamiliesInfo.forEach((t) => {\n      if (installedRecord[t.value] || t.installable) {\n        res.push({\n          key: t.value,\n          title: t.title,\n          disabled: !installedRecord[t.value] && downloadFontInfos[t.value]?.status !== 'downloaded',\n        });\n      }\n    });\n    return res;\n  }, [fontFamilies, installedRecord, downloadFontInfos]);\n\n  // 单测环境下这里需要依赖浏览器 API 获取已安装字体然后显示，所以只有那些可安装的字体会显示。\n  // 这里即使字体不可安装，也应该显示出来，作为列表一项\n  const extendOptions = (!enableUnSupportFont || options.some((opt) => opt.key === value)) ? options : [\n    ...options,\n    {\n      key: value,\n      title: value,\n      disabled: true,\n    }\n  ]\n\n\n  const detectFont = useCallback((font?: string) => {\n    if (fontDetectedRef.current.fontDetected) {\n      return;\n    }\n    if (font && !fontDetectedRef.current.installedRecord[font]) {\n      getFontDetector(font).detect().then(([hasFont]) => {\n        const newInstalledRecord = fontDetectedRef.current.installedRecord;\n        setInstalledRecord({ ...newInstalledRecord, [font]: hasFont });\n      });\n      return;\n    }\n    getFontDetector().detect().then((results) => {\n\n      const newInstalledRecord: Record<string, boolean> = {};\n      results.forEach((result: boolean, index: number) => {\n        if (index !== 0) {\n          newInstalledRecord[fontFamilies[index]] = result;\n        }\n      });\n      newInstalledRecord.default = true;\n      setInstalledRecord(newInstalledRecord);\n      fontDetectedRef.current.fontDetected = true;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (fontDetectedRef.current.fontDetected) {\n      return;\n    }\n    if (value !== 'default') {\n      detectFont(value);\n    }\n  }, [value]);\n\n  useLayoutEffect(() => {\n    if (overlayVisible) {\n      detectFont();\n    }\n  }, [overlayVisible]);\n\n  const renderOption: ISelectProps['renderOption'] = useCallback(({ key }: { key: string }) => {\n\n    const { title, disabled, key: family } = extendOptions.find(o => o.key === key) || { title: '' };\n\n    if (handleDownload && disabled && downloadFontInfos[key]) {\n      return (\n        <Select.Option\n          key={key}\n          children={\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Tooltip title={t('wdn_font_UninstallFonts')} placement=\"top\" ><div>{title}</div></Tooltip>\n              <DownloadButton handleDownload={handleDownload} status={downloadFontInfos[key].status} fontFamily={key} />\n            </div>\n          }\n        />\n      );\n    }\n    const titleNode = <div style={disabled ? undefined : { fontFamily: family }}>{title}</div>;\n\n    return (\n      <Select.Option\n        key={key}\n        children={disabled ? <Tooltip title={t('wdn_font_UninstallFonts')} placement=\"top\" >{titleNode}</Tooltip> : titleNode}\n      />\n    );\n  }, [installedRecord, handleDownload, downloadFontInfos]);\n\n  let fontValue = value;\n  if (!enableUnSupportFont) {\n    fontValue = fontSet.has(value) ? value : 'default';\n  }\n\n  return (\n    <TBTextSelect\n      {...restProps}\n      value={fontValue}\n      overlayVisible={overlayVisible}\n      onVisibleChange={onVisibleChange}\n      onChange={setValue}\n      options={extendOptions}\n      renderOption={renderOption}\n    />\n  );\n});\nTBFontFamilySelect.displayName = 'textSelect'\n"],"mappings":"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"}