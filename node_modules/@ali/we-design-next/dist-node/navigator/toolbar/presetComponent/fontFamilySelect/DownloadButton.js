"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DownloadButton = void 0;
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _locale = require("../../../../locale");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const DownloadTip = /*#__PURE__*/_styledComponents.default.span(["&.downloading{cursor:unt-allowed;:hover{color:unset;}}cursor:pointer;:hover{color:rgba(17,31,44,1);}"]);
const DownloadButton = props => {
  const {
    status,
    fontFamily
  } = props;
  const t = (0, _locale.useTranslate)();
  const handleDownload = (0, _react.useCallback)(e => {
    if (status === 'unDownload') {
      props.handleDownload(fontFamily);
    }
    e.stopPropagation();
  }, [props.handleDownload]);
  const downloading = status === 'downloading';
  return /*#__PURE__*/_createElement(DownloadTip, {
    id: "1",
    status: status,
    onClick: handleDownload,
    className: downloading ? 'downloading' : undefined
  }, downloading ? t('wdn_downloading') : t('wdn_download'));
};
exports.DownloadButton = DownloadButton;
//# sourceMappingURL=DownloadButton.js.map