{"version":3,"file":"index.js","names":["noopElements","overLayStyle","padding","width","borderRadius","useSplitItems","items","splitFun","fold","onLayoutRender","ref","useRef","itemNodes","setItemNodes","useState","IS_NODE","undefined","resetNodes","setResetNodes","flagRef","setToolbarWidth","useContext","ToolbarContext","useEffect","dom","current","domClientWidth","IS_UITEST","TOOLBAR_WIDTH_FOR_UITEST","clientWidth","currentItems","resetItems","resizeHandle","throttle","currentWidth","setTimeout","resizeObserver","ResizeObserver","observe","cancel","disconnect","noop","MoreBtn","React","memo","props","t","useTranslate","visible","setVisible","visibleRef","document","body","onClick","useCallback","trailing","content","size","renderSingleLineGroupItems","res","i","length","group","push","SingLineItemLayoutContent","align","autoFold","background","splitSingleLineItemByLength","nodes","restItems","overLayWrapperStyle","useMemo","SingLineItemLayout","renderDoubleLineGroupItems","isBeforeWithDivider","Array","isArray","DoubleLineItemLayoutContent","splitDoubleLineItemByLength","DoubleLineItemLayout"],"sources":["../../../../../../../src/navigator/toolbar/layout/toolbarLayout/itemLayout/index.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect, ReactElement, useCallback, useContext, useMemo } from 'react';\nimport { throttle, noop } from 'lodash-es';\nimport { ToolbarContextProvider, ToolbarContext, DoubleLineRowContext  } from '../../contexts';\nimport { SingleLineWrapper, DoubleLineWrapper } from './style';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport type { ISingLineItems, IDoubleLineItems, DoubleLineGroup } from '../interface';\nimport { splitDoubleLineItemByLength, splitSingleLineItemByLength } from './splitItemByLength';\nimport { BaseIconButton } from '../../../baseItem/iconButton/BaseIconButton';\nimport { IconMore } from '../../../../../basic/icon';\nimport { Popover } from '../../../../../display/popover';\nimport { IS_NODE, IS_UITEST, TOOLBAR_WIDTH_FOR_UITEST } from '../constants';\nimport { useTranslate } from '../../../../../locale';\n\nconst noopElements: any[] = [];\n\nconst overLayStyle: React.CSSProperties = { padding: 4, width: 'max-content', borderRadius: 4 };\n\nconst useSplitItems = <T, >(\n  items: T,\n  splitFun: (item: T, length: number) => ([T] | [T, T]),\n  fold: boolean,\n  onLayoutRender: () => void,\n): [React.RefObject<HTMLDivElement>, T | undefined, T | undefined] => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [itemNodes, setItemNodes] = useState<T | undefined>((!IS_NODE && fold) ? undefined : items);\n  const [resetNodes, setResetNodes] = useState<T | undefined>(undefined);\n  const flagRef = useRef({ width: 0 });\n\n  const { setToolbarWidth } = useContext(ToolbarContext);\n\n  useEffect(() => {\n    if (!fold) {\n      setItemNodes(items);\n      return;\n    }\n    const dom = ref.current;\n    if (!dom) { return; }\n    const domClientWidth = (IS_NODE || IS_UITEST) ? TOOLBAR_WIDTH_FOR_UITEST : dom.clientWidth;\n    setToolbarWidth(domClientWidth);\n    const [currentItems, resetItems] = splitFun(items, domClientWidth);\n    flagRef.current.width = domClientWidth;\n\n    setItemNodes(currentItems);\n    setResetNodes(resetItems);\n    \n    const resizeHandle = throttle(() => {\n      \n      const currentWidth = ref.current?.clientWidth;\n\n      if (!currentWidth) { return; }\n      if (currentWidth === flagRef.current.width) { return; }\n      flagRef.current.width = currentWidth;\n      setToolbarWidth(currentWidth);\n      const [currentItems, resetItems] = splitFun(items, currentWidth);\n      setItemNodes(currentItems);\n      setResetNodes(resetItems);\n      setTimeout(onLayoutRender, 0);\n    }, 0);\n\n \n    const resizeObserver = new ResizeObserver(() => {  resizeHandle(); });\n\n    resizeObserver.observe(ref.current);\n\n    return () => {\n      resizeHandle.cancel();\n      resizeObserver.disconnect();\n    };\n\n  }, [items, setToolbarWidth]);\n\n  useEffect(() => {\n    if ((onLayoutRender !== noop) && itemNodes) {\n      onLayoutRender();\n    }\n  }, [itemNodes, resetNodes]);\n\n  return [ref, itemNodes, resetNodes];\n};\n\nconst MoreBtn = React.memo<{\n  content: ReactElement;\n  size: 'large' | 'normal';\n}>((props) => {\n\n  const t = useTranslate();\n\n  const [visible, setVisible] = useState(false);\n  const visibleRef = useRef(false);\n  visibleRef.current = visible;\n\n  useEffect(() => {\n \n    const resizeObserver = new ResizeObserver(() => {  setVisible(false); });\n\n    resizeObserver.observe(document.body);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n\n  }, []);\n\n  const onClick = useCallback(throttle(() => {\n    setVisible(!visibleRef.current);\n  }, 500, { trailing: false }), []);\n\n  return (\n    <Popover\n      content={props.content}\n      placement=\"bottomRight\"\n      visible={visible}\n      onVisibleChange={setVisible}\n      animation\n    >\n      <div className='wdn-toolbar-more'>\n        <BaseIconButton\n          onClick={onClick}\n          active={visible}\n          icon={<IconMore />}\n          title={t('wdn_more')}\n          size={props.size}\n        />\n      </div>\n    </Popover>\n  );\n});\n\nfunction renderSingleLineGroupItems(items: ISingLineItems, ) {\n  const res: React.ReactElement[] = [];\n  for (let i = 0; i < items.length; i++) {\n    const group = items[i];\n    if (group === 'divider') { continue; }\n    res.push(\n      <div className={(items[i + 1] === 'divider') ? 'wdn-toolbar-group divider' : 'wdn-toolbar-group'}>\n        {group}\n      </div>\n    );\n  }\n  return res;\n}\n\ninterface ILayoutProps {\n  onLayoutRender: () => void;\n  background?: string | number;\n  align: 'left' | 'center',  autoFold: boolean;\n}\n\nexport const SingLineItemLayoutContent = React.memo<{ items: ISingLineItems } & ILayoutProps>((props) => {\n  const { items, align, autoFold, onLayoutRender, background } = props;\n\n  const [ref, itemNodes, resetNodes] = useSplitItems(items, splitSingleLineItemByLength, autoFold, onLayoutRender);\n\n  const nodes = itemNodes && renderSingleLineGroupItems(itemNodes);\n\n  const restItems = resetNodes && renderSingleLineGroupItems(resetNodes);\n\n  const overLayWrapperStyle: React.CSSProperties = useMemo(() => {\n    return background ? ({ ...overLayStyle, background }) : overLayStyle;\n  }, [background]);\n\n  return  (\n    <SingleLineWrapper className={`${align} toolbar-left single`} ref={ref}>\n      {nodes}\n      {restItems && <MoreBtn size=\"normal\" content={<SingleLineWrapper style={overLayWrapperStyle}>{restItems}</SingleLineWrapper>} />}\n    </SingleLineWrapper>\n  );\n});\n\nexport const SingLineItemLayout = React.memo<{ items: ISingLineItems } & ILayoutProps>((props) => {\n  return  (\n    <ToolbarContextProvider mode=\"singleLine\">\n      <SingLineItemLayoutContent {...props} />\n    </ToolbarContextProvider>\n  );\n});\n\nfunction renderDoubleLineGroupItems(items: IDoubleLineItems) {\n  const res: ReactElement[] = [];\n  for (let i = 0; i < items.length; i++) {\n    const group = items[i];\n    if (group === 'divider') { continue; }\n    const isBeforeWithDivider = (items[i + 1] === 'divider');\n    if (Array.isArray(group[0])) {\n      res.push(\n        <div className={isBeforeWithDivider ? 'wdn-toolbar-row-group divider' : 'wdn-toolbar-row-group' }>\n          <DoubleLineRowContext.Provider value>\n            <div className='wdn-toolbar-row'>{group[0]}</div>\n            <div className='wdn-toolbar-row'>{group[1]}</div>\n          </DoubleLineRowContext.Provider>\n        </div>\n      );\n    } else {\n      res.push(\n        <div className={isBeforeWithDivider ? 'wdn-toolbar-group divider' : 'wdn-toolbar-group'}>\n          {group}\n        </div>\n      );\n    }\n  }\n  return res;\n}\n\nconst DoubleLineItemLayoutContent: React.FC<{items: IDoubleLineItems } & ILayoutProps> = (props) => {\n  const { items, align, autoFold, onLayoutRender, background } = props;\n\n  const [ref, itemNodes, resetNodes] = useSplitItems<IDoubleLineItems>(items, splitDoubleLineItemByLength, autoFold, onLayoutRender);\n\n  const nodes = itemNodes && renderDoubleLineGroupItems(itemNodes);\n\n  const resetItems = resetNodes && renderDoubleLineGroupItems(resetNodes);\n  \n  const overLayWrapperStyle: React.CSSProperties = useMemo(() => {\n    return background ? ({ ...overLayStyle, background }) : overLayStyle;\n  }, [background]);\n\n  return  (\n    <DoubleLineWrapper className={`${align} toolbar-left double`} ref={ref}>\n      {nodes}\n      {resetNodes && <MoreBtn size=\"large\" content={<DoubleLineWrapper style={overLayWrapperStyle}>{resetItems}</DoubleLineWrapper>} />}\n    </DoubleLineWrapper>\n  );\n}\n\nexport const DoubleLineItemLayout = React.memo<{ items: IDoubleLineItems } & ILayoutProps>((props) => {\n\n  return  (\n    <ToolbarContextProvider mode=\"doubleLine\">\n      <DoubleLineItemLayoutContent {...props} />\n    </ToolbarContextProvider>\n  );\n});\n\n"],"mappings":"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"}