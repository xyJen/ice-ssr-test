{"version":3,"file":"InlineTab.js","names":["SearchHighlightItem","React","memo","props","searchValue","title","index","toLowerCase","indexOf","slice","length","InlineTab","disabled","tab","hidden","selected","onClick","tooltipTitle","className","rest","content","mergeClassName","undefined"],"sources":["../../../../src/navigator/sheet-tabs/InlineTab.tsx"],"sourcesContent":["import React from \"react\";\nimport { IconSelected } from \"../../basic/icon\";\nimport { mergeClassName, IRestProps } from \"../../common\";\nimport { HighlightText, ItemWrapper, ItemLeftWrapper, HideIcon } from \"./styled\";\nimport type { TabInfo } from './SheetTabs';\nimport { Tooltip } from '../../display/tooltip/Tooltip';\n\ninterface ISearchHighlightItem {\n  searchValue?: string;\n  title: string;\n}\n\nconst SearchHighlightItem = React.memo((props: ISearchHighlightItem) => {\n  const { searchValue, title } = props;\n\n  if (!searchValue) {\n    return <>{title}</>;\n  }\n\n  const index = title.toLowerCase().indexOf(searchValue.toLowerCase());\n  if (index < 0) {\n    return <>{title}</>;\n  }\n\n  return (\n    <>\n      {title.slice(0, index)}\n      <HighlightText>\n        {title.slice(index, index + searchValue.length)}\n      </HighlightText>\n      {title.slice(index + searchValue.length)}\n    </>\n  );\n});\n\ntype IInlineTabProps = Omit<TabInfo, 'key'> & {\n  tab?: string;\n  disabled?: boolean;\n  searchValue?: string;\n  selected?: boolean;\n  onClick?: (key: string) => void;\n  tooltipTitle?: string | React.ReactNode;\n} & IRestProps;\n\nexport const InlineTab = React.memo((props: IInlineTabProps) => {\n  const { disabled, searchValue, tab = '', title, hidden, selected, onClick, tooltipTitle, className, ...rest } = props;\n\n  const content = (\n    <ItemWrapper\n      onClick={() => onClick?.(tab)}\n      className={mergeClassName(disabled ? \"disabled\" : undefined, className)}\n      {...rest}\n    >\n      <ItemLeftWrapper>\n        <SearchHighlightItem searchValue={searchValue} title={title} />\n        {hidden ? <HideIcon /> : null}\n      </ItemLeftWrapper>\n      {selected ? <IconSelected /> : null}\n    </ItemWrapper>\n  );\n\n  return tooltipTitle ? (\n    <Tooltip placement=\"top\" title={tooltipTitle}>\n      {content}\n    </Tooltip>\n  ) : content;\n});\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAwD;AAAA,uBAJ5B;AAW5B,MAAMA,mBAAmB,gBAAGC,cAAK,CAACC,IAAI,CAAEC,KAA2B,IAAK;EACtE,MAAM;IAAEC,WAAW;IAAEC;EAAM,CAAC,GAAGF,KAAK;EAEpC,IAAI,CAACC,WAAW,EAAE;IAChB,oBAAO,8CAAGC,KAAK,CAAI;EACrB;EAEA,MAAMC,KAAK,GAAGD,KAAK,CAACE,WAAW,EAAE,CAACC,OAAO,CAACJ,WAAW,CAACG,WAAW,EAAE,CAAC;EACpE,IAAID,KAAK,GAAG,CAAC,EAAE;IACb,oBAAO,8CAAGD,KAAK,CAAI;EACrB;EAEA,oBACE,8CACGA,KAAK,CAACI,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,eACtB,eAAC,qBAAa,QACXD,KAAK,CAACI,KAAK,CAACH,KAAK,EAAEA,KAAK,GAAGF,WAAW,CAACM,MAAM,CAAC,CACjC,EACfL,KAAK,CAACI,KAAK,CAACH,KAAK,GAAGF,WAAW,CAACM,MAAM,CAAC,CACvC;AAEP,CAAC,CAAC;AAWK,MAAMC,SAAS,gBAAGV,cAAK,CAACC,IAAI,CAAEC,KAAsB,IAAK;EAC9D,MAAM;IAAES,QAAQ;IAAER,WAAW;IAAES,GAAG,GAAG,EAAE;IAAER,KAAK;IAAES,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,YAAY;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGhB,KAAK;EAErH,MAAMiB,OAAO,gBACX,eAAC,mBAAW;IACV,OAAO,EAAE,MAAMJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGH,GAAG,CAAE;IAC9B,SAAS,EAAE,IAAAQ,sBAAc,EAACT,QAAQ,GAAG,UAAU,GAAGU,SAAS,EAAEJ,SAAS;EAAE,GACpEC,IAAI,gBAER,eAAC,uBAAe,qBACd,eAAC,mBAAmB;IAAC,WAAW,EAAEf,WAAY;IAAC,KAAK,EAAEC;EAAM,EAAG,EAC9DS,MAAM,0CAAG,eAAC,gBAAQ,OAAG,IAAG,IAAI,CACb,EACjBC,QAAQ,kDAAG,eAAC,kBAAY,OAAG,IAAG,IAAI,CAEtC;EAED,OAAOE,YAAY,gBACjB,eAAC,gBAAO;IAAC,SAAS,EAAC,KAAK;IAAC,KAAK,EAAEA;EAAa,GAC1CG,OAAO,CACA,GACRA,OAAO;AACb,CAAC,CAAC;AAAC"}