"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlineTab = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _icon = require("../../basic/icon");
var _common = require("../../common");
var _styled = require("./styled");
var _Tooltip = require("../../display/tooltip/Tooltip");
var _HideIcon, _IconSelected;
const _createElement = /*#__PURE__*/_react.default.createElement;
const SearchHighlightItem = /*#__PURE__*/_react.default.memo(props => {
  const {
    searchValue,
    title
  } = props;
  if (!searchValue) {
    return /*#__PURE__*/_createElement(_react.default.Fragment, null, title);
  }
  const index = title.toLowerCase().indexOf(searchValue.toLowerCase());
  if (index < 0) {
    return /*#__PURE__*/_createElement(_react.default.Fragment, null, title);
  }
  return /*#__PURE__*/_createElement(_react.default.Fragment, null, title.slice(0, index), /*#__PURE__*/_createElement(_styled.HighlightText, null, title.slice(index, index + searchValue.length)), title.slice(index + searchValue.length));
});
const InlineTab = /*#__PURE__*/_react.default.memo(props => {
  const {
    disabled,
    searchValue,
    tab = '',
    title,
    hidden,
    selected,
    onClick,
    tooltipTitle,
    className,
    ...rest
  } = props;
  const content = /*#__PURE__*/_createElement(_styled.ItemWrapper, (0, _extends2.default)({
    onClick: () => onClick === null || onClick === void 0 ? void 0 : onClick(tab),
    className: (0, _common.mergeClassName)(disabled ? "disabled" : undefined, className)
  }, rest), /*#__PURE__*/_createElement(_styled.ItemLeftWrapper, null, /*#__PURE__*/_createElement(SearchHighlightItem, {
    searchValue: searchValue,
    title: title
  }), hidden ? _HideIcon || (_HideIcon = /*#__PURE__*/_createElement(_styled.HideIcon, null)) : null), selected ? _IconSelected || (_IconSelected = /*#__PURE__*/_createElement(_icon.IconSelected, null)) : null);
  return tooltipTitle ? /*#__PURE__*/_createElement(_Tooltip.Tooltip, {
    placement: "top",
    title: tooltipTitle
  }, content) : content;
});
exports.InlineTab = InlineTab;
//# sourceMappingURL=InlineTab.js.map