"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavigationBarMobile = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _mergeRestProps = require("../../common/react/mergeRestProps");
var _NavBarItem = require("./NavBarItem");
var _styled = require("./styled");
var _NavigationBarMobileI;
const _createElement = /*#__PURE__*/_react.default.createElement;
const NavigationBarMobile = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef((props, ref) => {
  const {
    children,
    ...rest
  } = props;
  const mergedProps = (0, _mergeRestProps.mergeRestProps)(rest, 'wdn-navbar');
  if (!children || !children.length) return /*#__PURE__*/_createElement(_styled.NavBarBox, (0, _extends2.default)({
    ref: ref
  }, mergedProps));

  // 过滤非 NavBarItem 的元素
  const elements = children.filter(child => /*#__PURE__*/_react.default.isValidElement(child) && child.type === _NavBarItem.NavigationBarMobileItem);
  const leftElements = [];
  const rightElements = [];
  const centerElements = [];
  elements.forEach(child => {
    const {
      align
    } = child.props;
    if (align === 'center') {
      centerElements.push(child);
    } else if (align === 'right') {
      rightElements.push(child);
    } else {
      leftElements.push(child);
    }
  });

  // 居中元素只能有且只有一个
  const centerElement = centerElements[0] || _NavigationBarMobileI || (_NavigationBarMobileI = /*#__PURE__*/_createElement(_NavBarItem.NavigationBarMobileItem, {
    key: "wdn-navbat-item-center",
    align: "center"
  }));
  return /*#__PURE__*/_createElement(_styled.NavBarBox, (0, _extends2.default)({
    ref: ref
  }, (0, _mergeRestProps.mergeRestProps)(rest, 'wdn-navbar')), [...leftElements, centerElement, ...rightElements]);
}));
exports.NavigationBarMobile = NavigationBarMobile;
//# sourceMappingURL=NavBar.js.map