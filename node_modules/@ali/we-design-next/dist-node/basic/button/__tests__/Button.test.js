"use strict";

var React = _interopRequireWildcard(require("react"));
var _react2 = require("@testing-library/react");
require("@testing-library/jest-dom");
var _Button4 = require("../Button");
var _index = require("../../../index");
var _Button, _Button2, _Button3;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/React.createElement;
test('Button: should render content.', () => {
  (0, _react2.render)(_Button || (_Button = /*#__PURE__*/_createElement(_Button4.Button, null, "Hello")));
  expect(_react2.screen.queryByText('Hello')).toBeInTheDocument();
});
test('Button: should render icon.', () => {
  const r1 = (0, _react2.render)(_Button2 || (_Button2 = /*#__PURE__*/_createElement(_Button4.Button, null, "Hello")));
  expect(r1.container.querySelector('svg')).toBeNull();
  const r2 = (0, _react2.render)(_Button3 || (_Button3 = /*#__PURE__*/_createElement(_Button4.Button, {
    icon: /*#__PURE__*/_createElement(_index.IconMail, null)
  }, "Hello")));
  expect(r2.container.querySelector('svg')).toBeInTheDocument();
});
test('Button: should trigger onClick event.', () => {
  const fn = jest.fn();
  (0, _react2.render)( /*#__PURE__*/_createElement(_Button4.Button, {
    onClick: fn
  }, "Hello"));
  expect(fn).not.toHaveBeenCalled();
  _react2.fireEvent.click(_react2.screen.getByText('Hello'));
  expect(fn).toHaveBeenCalled();
  expect(fn).toHaveBeenCalledTimes(1);
});
test('Button: disabled button should not trigger onClick event.', () => {
  const fn = jest.fn();
  (0, _react2.render)( /*#__PURE__*/_createElement(_Button4.Button, {
    disabled: true,
    onClick: fn
  }, "Hello"));
  expect(fn).not.toBeCalled();
  _react2.fireEvent.click(_react2.screen.getByText('Hello'));
  expect(fn).not.toBeCalled();
});
//# sourceMappingURL=Button.test.js.map