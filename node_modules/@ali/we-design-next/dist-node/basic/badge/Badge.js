"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BadgeNew = exports.BadgeDot = exports.BadgeBeta = void 0;
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("../../common/react");
var _styled = require("./styled");
var _span, _span2;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const now = Date.now();
const checkExpired = (expiration = false) => {
  if (typeof expiration === 'boolean') {
    return expiration;
  } else {
    return now >= expiration.valueOf();
  }
};
const BadgeDot = /*#__PURE__*/(0, _react.memo)(props => {
  const {
    expiration,
    children,
    ...rest
  } = props;
  const expired = checkExpired(expiration);
  if (expired) {
    return children || null;
  }
  return children ? /*#__PURE__*/_createElement(_styled.DotWrapper, null, children) : /*#__PURE__*/_createElement(_styled.Dot, (0, _react2.mergeRestProps)(rest, 'wdn-badge-dot'));
});
exports.BadgeDot = BadgeDot;
BadgeDot.displayName = 'BadgeDot';
const BadgeNew = /*#__PURE__*/(0, _react.memo)(props => {
  const {
    expiration,
    ...rest
  } = props;
  const expired = checkExpired(expiration);
  return expired ? null : /*#__PURE__*/_createElement(_styled.New, (0, _react2.mergeRestProps)(rest, 'wdn-badge-new'), _span || (_span = /*#__PURE__*/_createElement("span", null, "NEW")));
});
exports.BadgeNew = BadgeNew;
BadgeNew.displayName = 'BadgeNew';
const BadgeBeta = /*#__PURE__*/(0, _react.memo)(props => {
  const {
    expiration,
    ...rest
  } = props;
  const expired = checkExpired(expiration);
  return expired ? null : /*#__PURE__*/_createElement(_styled.Beta, (0, _react2.mergeRestProps)(rest, 'wdn-badge-beta'), _span2 || (_span2 = /*#__PURE__*/_createElement("span", null, "BETA")));
});
exports.BadgeBeta = BadgeBeta;
BadgeBeta.displayName = 'BadgeBeta';
//# sourceMappingURL=Badge.js.map