"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AvatarMoreList = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _styled = require("./styled");
var _AvatarWithPopover = require("./AvatarWithPopover");
var _constants = require("./constants");
const _createElement = /*#__PURE__*/_react.default.createElement;
const AvatarMoreList = props => {
  const {
    items,
    onClick: onClickProp
  } = props;
  // avatar popover 面板互斥
  const [visibleIndex, setVisibleAvatarIndex] = _react.default.useState(-1);
  return /*#__PURE__*/_createElement(_styled.ListWrap, null, items.map(item => {
    const {
      name,
      color,
      index,
      onClick,
      key
    } = item;
    const avatarColor = color || _constants.COLOR_SCHEME[index % _constants.COLOR_SCHEME_LEN];
    return /*#__PURE__*/_createElement(_styled.OverlayAvatarItem, {
      key: key
    }, /*#__PURE__*/_createElement(_styled.OverlayAvatarWrap, null, /*#__PURE__*/_createElement(_AvatarWithPopover.AvatarWithPopover, (0, _extends2.default)({}, item, {
      color: avatarColor,
      highlight: false,
      isPopoverVisible: index === visibleIndex,
      onPopoverVisibleChange: visible => {
        if (visible) {
          setVisibleAvatarIndex(index);
        } else {
          setVisibleAvatarIndex(visibleAvatarIndex => {
            return visibleAvatarIndex === index ? -1 : visibleAvatarIndex;
          });
        }
      },
      onClick: onClick || (() => {
        onClickProp && onClickProp(item.key);
      })
    }))), /*#__PURE__*/_createElement(_styled.OverlayAvatarName, null, name || ''), /*#__PURE__*/_createElement(_styled.Dot, {
      style: {
        background: avatarColor
      }
    }));
  }));
};
exports.AvatarMoreList = AvatarMoreList;
//# sourceMappingURL=AvatarMoreList.js.map