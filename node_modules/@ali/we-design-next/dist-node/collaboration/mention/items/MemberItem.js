"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MentionItem = void 0;
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _locale = require("../../../locale");
var _common = require("../../../common");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const LAST_CHAR_NUM = 8;
const MiddleEllipsisText = props => {
  const [isTextOverflow, setTextOverflow] = (0, _react.useState)(false);
  const subTitleRf = (0, _react.useRef)(null);
  const [divideIndex, setDivideIndex] = _react.default.useState(0);
  const {
    text
  } = props;
  (0, _react.useEffect)(() => {
    if (subTitleRf.current) {
      const rect = subTitleRf.current.getBoundingClientRect();
      const containerWidth = rect.width;
      const textWidth = subTitleRf.current.scrollWidth;
      if (containerWidth > 0 && textWidth > containerWidth) {
        setTextOverflow(true);
        // 一行展示不下时，中间省略，截取最后X个字符最后显示
        const lastLen = Math.min(text === null || text === void 0 ? void 0 : text.length, LAST_CHAR_NUM);
        const diIndex = (text === null || text === void 0 ? void 0 : text.length) - lastLen;
        setDivideIndex(diIndex);
      }
    }
  }, [text]);
  if (!text) return null;
  const preText = text === null || text === void 0 ? void 0 : text.slice(0, divideIndex);
  const nextText = text === null || text === void 0 ? void 0 : text.slice(divideIndex);
  return /*#__PURE__*/_createElement(SubTitleWrapper, {
    ref: subTitleRf
  }, isTextOverflow ? /*#__PURE__*/_createElement(_react.default.Fragment, null, /*#__PURE__*/_createElement("p", null, preText), /*#__PURE__*/_createElement("p", null, nextText)) : /*#__PURE__*/_createElement("span", null, text));
};
const MemberItemName = /*#__PURE__*/_react.default.memo(props => {
  const {
    name
  } = props;
  if (name.indexOf('<red>') === -1 || name.indexOf('</red>') === -1) {
    return /*#__PURE__*/_createElement("span", null, name);
  }
  try {
    const arr = name.split(/<red>/g).map(v => {
      const ret = v.split(/<\/red>/);
      if (ret.length > 1) {
        return [[ret[0], {
          bold: true
        }], [ret[1]]];
      }
      return [[ret[0]]];
    });
    const titleArr = arr.reduce((pre, cur) => pre.concat(cur), []);
    return /*#__PURE__*/_createElement("span", null, titleArr.map(v => {
      if (v[1] && v[1].bold) {
        return /*#__PURE__*/_createElement("span", {
          style: {
            color: _common.COLORS.COMMON.LINK_COLOR
          }
        }, v[0]);
      }
      return v[0];
    }));
  } catch (e) {
    return /*#__PURE__*/_createElement("span", null, name.replace(/(<red>|<\/red>)/g, ''));
  }
});
const MentionItemInner = /*#__PURE__*/_react.default.memo(props => {
  const {
    avatar,
    name,
    description
  } = props;
  const descriptionText = !description ? '' : typeof description === 'string' ? description : description.outside ? '组织外' : description.department;
  return /*#__PURE__*/_createElement(MentionItemInnerWrapper, null, /*#__PURE__*/_createElement("div", null, avatar ? /*#__PURE__*/_createElement("img", {
    src: avatar
  }) : /*#__PURE__*/_createElement("span", null, name.replace(/(<red>|<\/red>)/g, ''))), /*#__PURE__*/_createElement("div", null, /*#__PURE__*/_createElement("div", null, /*#__PURE__*/_createElement(MemberItemName, {
    name: name
  })), /*#__PURE__*/_createElement("span", null, descriptionText)));
});
const MentionItemInnerWrapper = /*#__PURE__*/_styledComponents.default.div(["display:flex;cursor:pointer;width:100%;overflow:hidden;& > div{&:first-child{width:36px;display:flex;align-items:center;img{width:28px;height:28px;border-radius:4px;}span{width:28px;height:28px;line-height:26px;border-radius:4px;overflow:hidden;color:rgb(255,255,255);padding:2px;font-size:12px;text-align:center;background-color:rgb(0,137,255);}}&:nth-child(2){flex:1;overflow:hidden;& > div:first-child{height:20px;line-height:20px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-family:sans-serif;& > span{color:#191f25;&:first-child{font-size:14px;line-height:20px;}&.sub-title{display:inline-block;font-size:12px;margin-left:2px;}}&:only-child{height:38px;line-height:38px;}}& > span{display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:last-child{font-size:12px;line-height:17px;color:rgba(17,31,44,0.4);}}}&:last-child{display:flex;flex-direction:column;justify-content:flex-end;font-size:12px;line-height:15px;color:rgba(17,31,44,0.4);}}"]);
const MentionItem = /*#__PURE__*/_react.default.memo(props => {
  const {
    index,
    data,
    style
  } = props;
  const t = (0, _locale.useTranslate)();
  const item = data.items[index];
  const handleMouseEnter = () => data.onMouseEnter(index);
  const handleClick = e => {
    data.onClick(index);
    e.stopPropagation();
  };
  return /*#__PURE__*/_createElement(MemberItemWrapper, {
    key: `${index}`,
    style: style,
    active: data.active === index,
    onMouseEnter: handleMouseEnter,
    onClick: handleClick
  }, /*#__PURE__*/_createElement(MentionItemInner, {
    avatar: item.avatar,
    name: item.name,
    description: item.description
  }));
});
exports.MentionItem = MentionItem;
const MemberItemWrapper = /*#__PURE__*/_styledComponents.default.div(["", " display:flex;padding:8px 6px;border-radius:4px;", ";"], _common.CSS_BORDER_BOX, ({
  active
}) => active && `background: ${_common.COLORS.OTHERS.DAO_HOVER_BG_COLOR};`);
const SubTitleWrapper = /*#__PURE__*/_styledComponents.default.div(["display:flex;flex-direction:row;width:fit-content;max-width:100%;& > span,& > p{font-size:12px;color:rgba(17,31,44,0.4);line-height:17px;}& > span{&:only-child{white-space:nowrap;width:fit-content;}}& > p{margin:0;&:first-child{flex:1;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}&:last-child{width:fit-content;}}"]);
//# sourceMappingURL=MemberItem.js.map