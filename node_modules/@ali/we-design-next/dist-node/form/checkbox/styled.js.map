{"version":3,"file":"styled.js","names":["CheckboxInput","styled","input","CheckboxIconWrap","span","CSS_BORDER_BOX","CSS_TRANSITION","indeterminate","CSS_INDETERMINATE","checked","disabled","CSS_UNCHECK_ENABLED","CSS_CHECK_ENABLED","CSS_CHECK_DISABLED","CSS_UNCHECK_DISABLED","css","COLORS","TRANSPARENT","COMMON","BLUE1_COLOR","BLUE1_HOVER_COLOR","LINE_HARD_COLOR","OVERLAY_COLOR","WHITE","CheckboxText","CheckboxWrap","label","TEXT_CSS","TEXT","CSS_CURSOR_DISABLE","CSS_DISABLE_SELECT","LIGHT","LEVEL1_BASE_COLOR"],"sources":["../../../../src/form/checkbox/styled.tsx"],"sourcesContent":["/**\n *   CheckboxWrap (label)\n *     CheckboxInput (input transparent)\n *     CheckboxIconWrap (span)\n *       svg (svg)\n *     CheckboxText (span)\n */\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { COLORS, CSS_CURSOR_DISABLE, CSS_BORDER_BOX, CSS_TRANSITION, CSS_DISABLE_SELECT } from '../../common';\nimport { TEXT_CSS } from '../../basic/text';\nimport { ICheckboxProps } from './Checkbox';\n\n\nexport const CheckboxInput = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  z-index: 1;\n`;\n\ntype ICheckboxIconWrapProps = Required<Pick<ICheckboxProps, 'disabled' | 'checked' | 'indeterminate'>>;\n\nexport const CheckboxIconWrap = styled.span<ICheckboxIconWrapProps>`\n  ${CSS_BORDER_BOX}\n  ${CSS_TRANSITION('all')}\n\n  position: relative;\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 1px solid;\n  border-radius: 2px;\n\n  ${({ indeterminate }) => indeterminate ? CSS_INDETERMINATE : null}\n  ${({ checked, disabled }) => (!checked && !disabled) ? CSS_UNCHECK_ENABLED : null}\n  ${({ checked, disabled }) => (checked && !disabled) ? CSS_CHECK_ENABLED : null}\n  ${({ checked, disabled }) => (checked && disabled) ? CSS_CHECK_DISABLED : null}\n  ${({ checked, disabled }) => (!checked && disabled) ? CSS_UNCHECK_DISABLED : null}\n\n  ${({ checked, indeterminate }) => (checked && !indeterminate) ? `\n  & > svg{\n    display: inline-block;\n    position: absolute;\n    top: -1px;\n    left: -1px;\n  }\n  ` : `\n  & > svg{\n    display: none;\n  }\n  `}\n`;\n\nconst CSS_CHECK_ENABLED = css`\n  border-color: ${COLORS.TRANSPARENT};\n  background-color: ${COLORS.COMMON.BLUE1_COLOR};\n  &:hover {\n    background-color: ${COLORS.COMMON.BLUE1_HOVER_COLOR};\n  }\n`;\n\nconst CSS_CHECK_DISABLED = css`\n  border-color: ${COLORS.TRANSPARENT};\n  background-color: ${COLORS.COMMON.LINE_HARD_COLOR};\n`;\n\nconst CSS_UNCHECK_ENABLED = css`\n  border-color: ${COLORS.COMMON.OVERLAY_COLOR};\n  background-color: ${COLORS.WHITE};\n  &:hover {\n    border-color: ${COLORS.COMMON.BLUE1_HOVER_COLOR};\n  }\n`;\n\nconst CSS_UNCHECK_DISABLED = css`\n  border-color: ${COLORS.COMMON.LINE_HARD_COLOR};\n  background-color: ${COLORS.WHITE};\n`;\n\nconst CSS_INDETERMINATE = css`\n  &:after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    height: 2px;\n    left: 2px;\n    right: 2px;\n    top: 6px;\n    background-color: ${COLORS.WHITE};\n  }\n`;\n\nexport const CheckboxText = styled.span`\n  padding: 0 8px;\n`;\n\ntype ICheckboxWrapProps = Pick<ICheckboxProps, 'disabled' | 'checked'>;\n\nexport const CheckboxWrap = styled.label<ICheckboxWrapProps>`\n  ${TEXT_CSS.TEXT}\n  ${CSS_CURSOR_DISABLE}\n  ${CSS_DISABLE_SELECT}\n  position: relative;\n  display: inline-block;\n  color: ${({ disabled }) => disabled ? COLORS.COMMON.LINE_HARD_COLOR : COLORS.LIGHT.LEVEL1_BASE_COLOR};\n  & > * {\n    vertical-align: middle;\n  }\n`;\n"],"mappings":";;;;;;AASA;AACA;AACA;AAA4C;AAAA;AAX5C;AACA;AACA;AACA;AACA;AACA;AACA;;AASO,MAAMA,aAAa,gBAAGC,yBAAM,CAACC,KAAK,0EAQxC;AAAC;AAIK,MAAMC,gBAAgB,gBAAGF,yBAAM,CAACG,IAAI,+IACvCC,sBAAc,EACd,IAAAC,sBAAc,EAAC,KAAK,CAAC,EASrB,CAAC;EAAEC;AAAc,CAAC,KAAKA,aAAa,GAAGC,iBAAiB,GAAG,IAAI,EAC/D,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAM,CAACD,OAAO,IAAI,CAACC,QAAQ,GAAIC,mBAAmB,GAAG,IAAI,EAC/E,CAAC;EAAEF,OAAO;EAAEC;AAAS,CAAC,KAAMD,OAAO,IAAI,CAACC,QAAQ,GAAIE,iBAAiB,GAAG,IAAI,EAC5E,CAAC;EAAEH,OAAO;EAAEC;AAAS,CAAC,KAAMD,OAAO,IAAIC,QAAQ,GAAIG,kBAAkB,GAAG,IAAI,EAC5E,CAAC;EAAEJ,OAAO;EAAEC;AAAS,CAAC,KAAM,CAACD,OAAO,IAAIC,QAAQ,GAAII,oBAAoB,GAAG,IAAI,EAE/E,CAAC;EAAEL,OAAO;EAAEF;AAAc,CAAC,KAAME,OAAO,IAAI,CAACF,aAAa,GAAK;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAI;AACP;AACA;AACA;AACA,GAAG,CACF;AAAC;AAEF,MAAMK,iBAAiB,oBAAGG,qBAAG,+EACXC,cAAM,CAACC,WAAW,EACdD,cAAM,CAACE,MAAM,CAACC,WAAW,EAEvBH,cAAM,CAACE,MAAM,CAACE,iBAAiB,CAEtD;AAED,MAAMP,kBAAkB,oBAAGE,qBAAG,gDACZC,cAAM,CAACC,WAAW,EACdD,cAAM,CAACE,MAAM,CAACG,eAAe,CAClD;AAED,MAAMV,mBAAmB,oBAAGI,qBAAG,2EACbC,cAAM,CAACE,MAAM,CAACI,aAAa,EACvBN,cAAM,CAACO,KAAK,EAEdP,cAAM,CAACE,MAAM,CAACE,iBAAiB,CAElD;AAED,MAAMN,oBAAoB,oBAAGC,qBAAG,gDACdC,cAAM,CAACE,MAAM,CAACG,eAAe,EACzBL,cAAM,CAACO,KAAK,CACjC;AAED,MAAMf,iBAAiB,oBAAGO,qBAAG,0HASLC,cAAM,CAACO,KAAK,CAEnC;AAEM,MAAMC,YAAY,gBAAGvB,yBAAM,CAACG,IAAI,oBAEtC;AAAC;AAIK,MAAMqB,YAAY,gBAAGxB,yBAAM,CAACyB,KAAK,qGACpCC,cAAQ,CAACC,IAAI,EACbC,0BAAkB,EAClBC,0BAAkB,EAGX,CAAC;EAAEpB;AAAS,CAAC,KAAKA,QAAQ,GAAGM,cAAM,CAACE,MAAM,CAACG,eAAe,GAAGL,cAAM,CAACe,KAAK,CAACC,iBAAiB,CAIrG;AAAC"}