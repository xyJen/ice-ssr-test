"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadioWrap = exports.RadioText = exports.RadioInput = exports.RadioIcon = void 0;
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _common = require("../../common");
var _text = require("../../basic/text");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 *   RadioWrap (label)
 *     RadioInput (input transparent)
 *     RadioIcon (span)
 *     RadioText (span)
 */

const CSS_ENABLED_CHECKED = /*#__PURE__*/(0, _styledComponents.css)(["border-width:4px;border-color:", ";&:hover{border-color:", ";}"], _common.COLORS.COMMON.BLUE1_COLOR, _common.COLORS.COMMON.BLUE1_HOVER_COLOR);
const CSS_ENABLED_UNCHECKED = /*#__PURE__*/(0, _styledComponents.css)(["border-width:2px;border-color:", ";&:hover{border-color:", ";}"], _common.COLORS.COMMON.OVERLAY_COLOR, _common.COLORS.COMMON.BLUE1_HOVER_COLOR);
const CSS_DISABLED_CHECKED = /*#__PURE__*/(0, _styledComponents.css)(["border-width:4px;border-color:", ";background-color:", ";"], _common.COLORS.TRANSPARENT, _common.COLORS.COMMON.LINE_HARD_COLOR);
const CSS_DISABLED_UNCHECKED = /*#__PURE__*/(0, _styledComponents.css)(["border-width:2px;border-color:", ";"], _common.COLORS.COMMON.LINE_HARD_COLOR);
const RadioIcon = /*#__PURE__*/_styledComponents.default.span(["", " ", " display:inline-block;position:relative;width:16px;height:16px;border-style:solid;border-radius:50%;background-color:", ";", ""], _common.CSS_BORDER_BOX, (0, _common.CSS_TRANSITION)('all'), _common.COLORS.WHITE, ({
  disabled,
  checked
}) => disabled ? checked ? CSS_DISABLED_CHECKED : CSS_DISABLED_UNCHECKED : checked ? CSS_ENABLED_CHECKED : CSS_ENABLED_UNCHECKED);
exports.RadioIcon = RadioIcon;
const RadioWrap = /*#__PURE__*/_styledComponents.default.label(["", " ", " ", " position:relative;display:inline-block;color:", ";& > *{vertical-align:middle;}"], _text.TEXT_CSS.TEXT, _common.CSS_CURSOR_DISABLE, _common.CSS_DISABLE_SELECT, ({
  disabled
}) => disabled ? _common.COLORS.COMMON.LINE_HARD_COLOR : _common.COLORS.LIGHT.LEVEL1_BASE_COLOR);
exports.RadioWrap = RadioWrap;
const RadioText = /*#__PURE__*/_styledComponents.default.span(["padding:0 8px;"]);
exports.RadioText = RadioText;
const RadioInput = /*#__PURE__*/_styledComponents.default.input(["position:absolute;top:0;left:0;width:0;height:0;opacity:0;z-index:1;"]);
exports.RadioInput = RadioInput;
//# sourceMappingURL=styled.js.map