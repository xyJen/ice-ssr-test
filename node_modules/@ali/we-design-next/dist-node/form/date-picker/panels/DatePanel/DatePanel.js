"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DatePanel = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _locale = require("../../../../locale");
var _dateUtil = require("../../date-util");
var _MonthPanel = require("../MonthPanel");
var _YearPanel = require("../YearPanel");
var _Header = require("../Header");
var _DateBody = require("./DateBody");
var _styled = require("./styled");
var _React$Fragment;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const DatePanel = /*#__PURE__*/_react.default.memo(props => {
  const {
    value,
    onSelect,
    disabledDate,
    curPanel,
    onPanelChange,
    showTime,
    showNow,
    nowNode
  } = props;
  const dayjsLocale = (0, _locale.useDayjsLocale)();
  const t = (0, _locale.useTranslate)();
  const [viewDate, setViewDate] = (0, _react.useState)(value || _dateUtil.DateController.getNow());
  (0, _react.useEffect)(() => {
    // 受控模式下，value直接变化时，viewDate保持同步
    value && setViewDate(value);
  }, [value]);
  const handleSelectViewDate = (0, _react.useCallback)(value => {
    setViewDate(value);
  }, [setViewDate]);
  const onMonthChange = (0, _react.useCallback)(diff => {
    const newDate = _dateUtil.DateController.addMonth(viewDate, diff);
    setViewDate(newDate);
  }, [viewDate, setViewDate]);
  const panelSharedProps = {
    value,
    viewDate,
    disabledDate,
    showNow: showNow && curPanel === "date",
    nowNode: curPanel === "date" ? nowNode : null
  };
  const months = (0, _react.useMemo)(() => _dateUtil.DateController.locale.getShortMonths(dayjsLocale), [dayjsLocale]);
  const yearNode = /*#__PURE__*/_createElement("span", {
    key: "yearNode",
    onClick: () => onPanelChange("date", "year")
  }, _dateUtil.DateController.locale.format(dayjsLocale, viewDate, t('wdn_date_picker_year_format')));
  const monthNode = /*#__PURE__*/_createElement("span", {
    key: "monthNode",
    onClick: () => onPanelChange("date", "month")
  }, months[_dateUtil.DateController.getMonth(viewDate)]);
  const spaceNode = _React$Fragment || (_React$Fragment = /*#__PURE__*/_createElement(_react.default.Fragment, {
    key: "spaceNode"
  }, "\xA0"));
  const monthYearNodes = _dateUtil.dayjsLocaleMonthBeforeYearConfig[dayjsLocale] ? [monthNode, spaceNode, yearNode] : [yearNode, spaceNode, monthNode];
  return /*#__PURE__*/_createElement(_react.default.Fragment, null, curPanel === "date" ? /*#__PURE__*/_createElement(_styled.PanelWrapper, {
    showNow: showNow
  }, /*#__PURE__*/_createElement(_Header.Header, {
    onPrev: () => onMonthChange(-1),
    onNext: () => onMonthChange(1),
    className: showTime ? "header-border" : undefined
  }, monthYearNodes), /*#__PURE__*/_createElement(_DateBody.DateBody, (0, _extends2.default)({
    onSelect: onSelect
  }, panelSharedProps)), nowNode) : null, curPanel === "month" ? /*#__PURE__*/_createElement(_MonthPanel.MonthPanel, (0, _extends2.default)({
    onPanelChange: onPanelChange,
    onSelect: handleSelectViewDate
  }, panelSharedProps)) : null, curPanel === "year" ? /*#__PURE__*/_createElement(_YearPanel.YearPanel, (0, _extends2.default)({
    onPanelChange: onPanelChange,
    onSelect: handleSelectViewDate
  }, panelSharedProps)) : null);
});
exports.DatePanel = DatePanel;
//# sourceMappingURL=DatePanel.js.map