"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SketchPresetColors = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactcss = _interopRequireDefault(require("reactcss"));
var _common = require("./common");
const _createElement = /*#__PURE__*/_react.default.createElement;
const SketchPresetColors = ({
  colors,
  onClick = () => {},
  onSwatchHover
}) => {
  const styles = (0, _reactcss.default)({
    default: {
      colors: {
        margin: '0 -10px',
        padding: '10px 0 0 10px',
        borderTop: '1px solid #eee',
        display: 'flex',
        flexWrap: 'wrap',
        position: 'relative'
      },
      swatchWrap: {
        width: '16px',
        height: '16px',
        margin: '0 10px 10px 0'
      },
      swatch: {
        borderRadius: '3px',
        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15)'
      }
    },
    'no-presets': {
      colors: {
        display: 'none'
      }
    }
  }, {
    'no-presets': !colors || !colors.length
  });
  const handleClick = (hex, e) => {
    onClick({
      hex,
      source: 'hex'
    }, e);
  };
  return /*#__PURE__*/_createElement("div", {
    style: styles.colors,
    className: "flexbox-fix"
  }, colors.map(colorObjOrString => {
    const c = typeof colorObjOrString === 'string' ? {
      color: colorObjOrString
    } : colorObjOrString;
    const key = `${c.color}${c.title || ''}`;
    return /*#__PURE__*/_createElement("div", {
      key: key,
      style: styles.swatchWrap
    }, /*#__PURE__*/_createElement(_common.Swatch, (0, _extends2.default)({}, c, {
      style: styles.swatch,
      onClick: handleClick,
      onHover: onSwatchHover,
      focusStyle: {
        boxShadow: `inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ${c.color}`
      }
    })));
  }));
};
exports.SketchPresetColors = SketchPresetColors;
SketchPresetColors.propTypes = {
  colors: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
    color: _propTypes.default.string,
    title: _propTypes.default.string
  })])).isRequired
};
var _default = SketchPresetColors;
exports.default = _default;
//# sourceMappingURL=SketchPresetColors.js.map