"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Sketch = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactcss = _interopRequireDefault(require("reactcss"));
var _common = require("./common");
var _SketchFields = _interopRequireDefault(require("./SketchFields"));
var _SketchPresetColors = _interopRequireDefault(require("./SketchPresetColors"));
var _Checkboard;
const _createElement = /*#__PURE__*/_react.default.createElement;
const Sketch = ({
  width,
  rgb,
  hex,
  hsv,
  hsl,
  onChange,
  onSwatchHover,
  disableAlpha,
  presetColors,
  renderers,
  styles: passedStyles = {},
  className = ''
}) => {
  const defaultStyles = {
    default: {
      picker: {
        width,
        padding: '10px 10px 0',
        boxSizing: 'initial',
        background: '#fff',
        borderRadius: '4px',
        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.2)',
        border: '1px solid rgba(17, 31, 44, 0.08)'
      },
      saturation: {
        width: '100%',
        paddingBottom: '75%',
        position: 'relative',
        overflow: 'hidden'
      },
      Saturation: {
        radius: '3px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      controls: {
        display: 'flex'
      },
      sliders: {
        padding: '4px 0',
        flex: '1'
      },
      color: {
        width: '24px',
        height: '24px',
        position: 'relative',
        marginTop: '4px',
        marginLeft: '4px',
        borderRadius: '3px'
      },
      activeColor: {
        absolute: '0px 0px 0px 0px',
        borderRadius: '2px',
        background: `rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`,
        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      hue: {
        position: 'relative',
        height: '10px',
        overflow: 'hidden'
      },
      Hue: {
        radius: '2px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      alpha: {
        position: 'relative',
        height: '10px',
        marginTop: '4px',
        overflow: 'hidden'
      },
      Alpha: {
        radius: '2px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      ...passedStyles
    },
    disableAlpha: {
      color: {
        height: '10px'
      },
      hue: {
        height: '10px'
      },
      alpha: {
        display: 'none'
      }
    }
  };
  const mergedStyles = passedStyles ? Object.assign({}, defaultStyles, passedStyles) : defaultStyles;
  const styles = (0, _reactcss.default)(mergedStyles, {
    disableAlpha
  });
  return /*#__PURE__*/_createElement("div", {
    style: styles.picker,
    className: `sketch-picker ${className}`
  }, /*#__PURE__*/_createElement("div", {
    style: styles.saturation
  }, /*#__PURE__*/_createElement(_common.Saturation, {
    style: styles.Saturation,
    hsl: hsl,
    hsv: hsv,
    onChange: onChange
  })), /*#__PURE__*/_createElement("div", {
    style: styles.controls,
    className: "flexbox-fix"
  }, /*#__PURE__*/_createElement("div", {
    style: styles.sliders
  }, /*#__PURE__*/_createElement("div", {
    style: styles.hue
  }, /*#__PURE__*/_createElement(_common.Hue, {
    style: styles.Hue,
    hsl: hsl,
    onChange: onChange
  })), /*#__PURE__*/_createElement("div", {
    style: styles.alpha
  }, /*#__PURE__*/_createElement(_common.Alpha, {
    style: styles.Alpha,
    rgb: rgb,
    hsl: hsl,
    renderers: renderers,
    onChange: onChange
  }))), /*#__PURE__*/_createElement("div", {
    style: styles.color
  }, _Checkboard || (_Checkboard = /*#__PURE__*/_createElement(_common.Checkboard, null)), /*#__PURE__*/_createElement("div", {
    style: styles.activeColor
  }))), /*#__PURE__*/_createElement(_SketchFields.default, {
    rgb: rgb,
    hsl: hsl,
    hex: hex,
    onChange: onChange,
    disableAlpha: disableAlpha
  }), /*#__PURE__*/_createElement(_SketchPresetColors.default, {
    colors: presetColors,
    onClick: onChange,
    onSwatchHover: onSwatchHover
  }));
};

// todo
// Sketch.propTypes = {
//   disableAlpha: PropTypes.bool,
//   width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
//   styles: PropTypes.object,
// };
exports.Sketch = Sketch;
Sketch.defaultProps = {
  disableAlpha: false,
  width: 200,
  styles: {},
  presetColors: ['#D0021B', '#F5A623', '#F8E71C', '#8B572A', '#7ED321', '#417505', '#BD10E0', '#9013FE', '#4A90E2', '#50E3C2', '#B8E986', '#000000', '#4A4A4A', '#9B9B9B', '#FFFFFF']
};
var _default = (0, _common.ColorWrap)(Sketch);
exports.default = _default;
//# sourceMappingURL=Sketch.js.map