"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Alpha = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactcss = _interopRequireDefault(require("reactcss"));
var alpha = _interopRequireWildcard(require("../helpers/alpha"));
var _Checkboard = _interopRequireDefault(require("./Checkboard"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
class Alpha extends (_react.PureComponent || _react.Component) {
  constructor(...args) {
    super(...args);
    this.handleChange = e => {
      const change = alpha.calculateChange(e, this.props.hsl, this.props.direction, this.props.a, this.container);
      change && typeof this.props.onChange === 'function' && this.props.onChange(change, e);
    };
    this.handleMouseDown = e => {
      this.handleChange(e);
      window.addEventListener('mousemove', this.handleChange);
      window.addEventListener('mouseup', this.handleMouseUp);
    };
    this.handleMouseUp = () => {
      this.unbindEventListeners();
    };
    this.unbindEventListeners = () => {
      window.removeEventListener('mousemove', this.handleChange);
      window.removeEventListener('mouseup', this.handleMouseUp);
    };
  }
  componentWillUnmount() {
    this.unbindEventListeners();
  }
  render() {
    const {
      rgb
    } = this.props;
    const styles = (0, _reactcss.default)({
      default: {
        alpha: {
          absolute: '0px 0px 0px 0px',
          borderRadius: this.props.radius
        },
        checkboard: {
          absolute: '0px 0px 0px 0px',
          overflow: 'hidden',
          borderRadius: this.props.radius
        },
        gradient: {
          absolute: '0px 0px 0px 0px',
          background: `linear-gradient(to right, rgba(${rgb.r},${rgb.g},${rgb.b}, 0) 0%,
           rgba(${rgb.r},${rgb.g},${rgb.b}, 1) 100%)`,
          boxShadow: this.props.shadow,
          borderRadius: this.props.radius
        },
        container: {
          position: 'relative',
          height: '100%',
          margin: '0 3px'
        },
        pointer: {
          position: 'absolute',
          left: `${rgb.a * 100}%`
        },
        slider: {
          width: '4px',
          borderRadius: '1px',
          height: '8px',
          boxShadow: '0 0 2px rgba(0, 0, 0, .6)',
          background: '#fff',
          marginTop: '1px',
          transform: 'translateX(-2px)'
        }
      },
      vertical: {
        gradient: {
          background: `linear-gradient(to bottom, rgba(${rgb.r},${rgb.g},${rgb.b}, 0) 0%,
           rgba(${rgb.r},${rgb.g},${rgb.b}, 1) 100%)`
        },
        pointer: {
          left: 0,
          top: `${rgb.a * 100}%`
        }
      },
      overwrite: {
        ...this.props.style
      }
    }, {
      vertical: this.props.direction === 'vertical',
      overwrite: true
    });
    return /*#__PURE__*/_createElement("div", {
      style: styles.alpha
    }, /*#__PURE__*/_createElement("div", {
      style: styles.checkboard
    }, /*#__PURE__*/_createElement(_Checkboard.default, {
      renderers: this.props.renderers
    })), /*#__PURE__*/_createElement("div", {
      style: styles.gradient
    }), /*#__PURE__*/_createElement("div", {
      className: "alpha",
      style: styles.container,
      ref: container => {
        this.container = container;
      },
      onMouseDown: this.handleMouseDown,
      onTouchMove: this.handleChange,
      onTouchStart: this.handleChange
    }, /*#__PURE__*/_createElement("div", {
      style: styles.pointer
    }, this.props.pointer ? /*#__PURE__*/_createElement(this.props.pointer, this.props) : /*#__PURE__*/_createElement("div", {
      style: styles.slider
    }))));
  }
}
exports.Alpha = Alpha;
var _default = Alpha;
exports.default = _default;
//# sourceMappingURL=Alpha.js.map