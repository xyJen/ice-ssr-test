"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Saturation = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactcss = _interopRequireDefault(require("reactcss"));
var _lodash = require("lodash");
var saturation = _interopRequireWildcard(require("../helpers/saturation"));
var _style;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
class Saturation extends (_react.PureComponent || _react.Component) {
  constructor(props) {
    super(props);

    // todo
    // this.throttle = throttle((fn, data, e) => {
    //   fn(data, e);
    // }, 50);
    this.handleChange = e => {
      typeof this.props.onChange === 'function' && this.throttle(this.props.onChange, saturation.calculateChange(e, this.props.hsl, this.container), e);
    };
    this.handleMouseDown = e => {
      this.handleChange(e);
      window.addEventListener('mousemove', this.handleChange);
      window.addEventListener('mouseup', this.handleMouseUp);
    };
    this.handleMouseUp = () => {
      this.unbindEventListeners();
    };
    this.throttle = (0, _lodash.debounce)((fn, data, e) => {
      fn(data, e);
    }, 5);
  }
  componentWillUnmount() {
    // this.throttle.cancel();
    this.unbindEventListeners();
  }
  unbindEventListeners() {
    window.removeEventListener('mousemove', this.handleChange);
    window.removeEventListener('mouseup', this.handleMouseUp);
  }
  render() {
    const {
      color,
      white,
      black,
      pointer,
      circle
    } = this.props.style || {};
    const styles = (0, _reactcss.default)({
      default: {
        color: {
          absolute: '0px 0px 0px 0px',
          background: `hsl(${this.props.hsl.h},100%, 50%)`,
          borderRadius: this.props.radius
        },
        white: {
          absolute: '0px 0px 0px 0px',
          borderRadius: this.props.radius
        },
        black: {
          absolute: '0px 0px 0px 0px',
          boxShadow: this.props.shadow,
          borderRadius: this.props.radius
        },
        pointer: {
          position: 'absolute',
          top: `${-(this.props.hsv.v * 100) + 100}%`,
          left: `${this.props.hsv.s * 100}%`,
          cursor: 'default'
        },
        circle: {
          width: '4px',
          height: '4px',
          boxShadow: `0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)`,
          borderRadius: '50%',
          cursor: 'hand',
          transform: 'translate(-2px, -2px)'
        }
      },
      custom: {
        color,
        white,
        black,
        pointer,
        circle
      }
    }, {
      custom: !!this.props.style
    });
    return /*#__PURE__*/_createElement("div", {
      style: styles.color,
      ref: container => {
        this.container = container;
      },
      onMouseDown: this.handleMouseDown,
      onTouchMove: this.handleChange,
      onTouchStart: this.handleChange
    }, _style || (_style = /*#__PURE__*/_createElement("style", null, `
          .saturation-white {
            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));
            background: linear-gradient(to right, #fff, rgba(255,255,255,0));
          }
          .saturation-black {
            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));
            background: linear-gradient(to top, #000, rgba(0,0,0,0));
          }
        `)), /*#__PURE__*/_createElement("div", {
      style: styles.white,
      className: "saturation-white"
    }, /*#__PURE__*/_createElement("div", {
      style: styles.black,
      className: "saturation-black"
    }), /*#__PURE__*/_createElement("div", {
      style: styles.pointer
    }, this.props.pointer ? /*#__PURE__*/_createElement(this.props.pointer, this.props) : /*#__PURE__*/_createElement("div", {
      style: styles.circle
    }))));
  }
}
exports.Saturation = Saturation;
var _default = Saturation;
exports.default = _default;
//# sourceMappingURL=Saturation.js.map