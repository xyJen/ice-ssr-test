"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorPicker = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _common = require("../../common");
var _locale = require("../../locale");
var _presets2 = require("./presets");
var _text = require("../../basic/text");
var _select = require("../select");
var _ColorSquare = require("./ColorSquare");
var _popover = require("../../display/popover");
var _styled = require("./styled");
var _ColorPickerSketch = require("./ColorPickerSketch");
var _Divider, _Divider2, _ArrowRight;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const PRESETS = [_presets2.DEFAULT, _presets2.ART];
const PRESET_KEY = 'wdn_color_picker_';
const PRESET_TITLE = (title, t) => title.startsWith(PRESET_KEY) ? t(title) : title;
const ColorPicker = /*#__PURE__*/_react.default.memo(props => {
  const {
    color,
    defaultColor,
    onColorChange,
    currentPreset: _currentPreset,
    onCurrentPresetChange: _onCurrentPresetChange,
    autoColor,
    recentColors,
    advance,
    hoverMode = 'square',
    presets: _presets = PRESETS,
    ...rest
  } = props;
  const [value, setValue] = (0, _common.useDefaultProp)(defaultColor, color, onColorChange);
  const [advancePickerVisible, setAdvancePickerVisible] = (0, _react.useState)(false);
  const t = (0, _locale.useTranslate)();
  const presets = (0, _react.useMemo)(() => _presets.map(p => ({
    ...p,
    title: PRESET_TITLE(p.title, t)
  })), [_presets, t]);
  const [currentPreset, setCurrentPreset] = (0, _common.useDefaultProp)(presets[0].key, _currentPreset, _onCurrentPresetChange);
  const ref = (0, _react.useRef)(null);
  const advanceGroupRef = (0, _react.useRef)(null);
  return /*#__PURE__*/_createElement(_styled.ColorPickerWrapper, (0, _extends2.default)({
    ref: ref
  }, (0, _common.mergeRestProps)(rest, 'wdn-color-picker')), /*#__PURE__*/_createElement(_styled.HeaderGroup, null, autoColor ? /*#__PURE__*/_createElement(_styled.AutoColorWrapper, null, /*#__PURE__*/_createElement(_ColorSquare.ColorSquare, {
    color: autoColor,
    active: value === autoColor,
    onClick: () => setValue(autoColor, {
      fromSketch: false,
      intermediate: false
    }),
    mode: hoverMode
  }), /*#__PURE__*/_createElement(_text.Text, {
    style: {
      marginLeft: 4,
      flexGrow: 1
    },
    onClick: () => setValue(autoColor, {
      fromSketch: false,
      intermediate: false
    })
  }, t('wdn_color_picker_auto_color'))) : /*#__PURE__*/_createElement(_styled.NoColorWrapper, null, /*#__PURE__*/_createElement(_ColorSquare.ColorSquare, {
    color: null,
    active: value === null,
    onClick: () => setValue(undefined, {
      fromSketch: false,
      intermediate: false
    }),
    mode: 'square'
  }), /*#__PURE__*/_createElement(_text.Text, {
    style: {
      marginLeft: 4,
      flexGrow: 1
    },
    onClick: () => setValue(undefined, {
      fromSketch: false,
      intermediate: false
    })
  }, t('wdn_color_picker_no_color'))), presets.length > 1 ? /*#__PURE__*/_createElement(_select.Select, {
    size: "small",
    bordered: false,
    options: presets.map(p => ({
      key: p.key,
      title: p.title
    })),
    value: currentPreset,
    onChange: setCurrentPreset,
    getContainer: () => ref.current || document.body
  }) : null), /*#__PURE__*/_createElement(_styled.Group, null, (presets.find(p => p.key === currentPreset) || presets[0]).colors.map((colors, i) => {
    return /*#__PURE__*/(0, _react.isValidElement)(colors) ? colors : /*#__PURE__*/_createElement(_styled.Row, {
      key: `${colors[0]}-${i}`
    }, colors.map((color, j) => /*#__PURE__*/_createElement(_ColorSquare.ColorSquare, {
      key: `${color}-${j}`,
      color: color,
      active: color === value,
      onClick: () => {
        setValue(color, {
          fromSketch: false,
          intermediate: false
        });
      },
      mode: hoverMode
    })));
  })), recentColors && recentColors.length > 0 ? /*#__PURE__*/_createElement(_react.default.Fragment, null, _Divider || (_Divider = /*#__PURE__*/_createElement(_styled.Divider, null)), /*#__PURE__*/_createElement(_styled.RecentGroup, null, /*#__PURE__*/_createElement(_text.Text, {
    style: {
      color: _common.COLORS.LIGHT.LEVEL2_BASE_COLOR,
      marginBottom: 4
    }
  }, t('wdn_color_picker_recent_colors')), /*#__PURE__*/_createElement(_styled.Row, null, recentColors.map((color, j) => /*#__PURE__*/_createElement(_ColorSquare.ColorSquare, {
    key: `${color}-${j}`,
    color: color,
    active: color === value,
    onClick: () => {
      setValue(color, {
        fromSketch: false,
        intermediate: false
      });
    },
    mode: hoverMode
  }))))) : null, advance ? /*#__PURE__*/_createElement(_react.default.Fragment, null, _Divider2 || (_Divider2 = /*#__PURE__*/_createElement(_styled.Divider, null)), /*#__PURE__*/_createElement(_popover.Popover, {
    placement: "rightBottom",
    placementOffset: [12, -6],
    trigger: "mouse-enter",
    visible: advancePickerVisible,
    onVisibleChange: setAdvancePickerVisible,
    animation: true,
    getContainer: () => advanceGroupRef.current || document.body,
    content: /*#__PURE__*/_createElement(_styled.SketchPickerWrap, null, /*#__PURE__*/_createElement(_ColorPickerSketch.ColorPickerSketch, {
      color: value || _common.COLORS.WHITE,
      onChange: e => setValue(e, {
        fromSketch: true,
        intermediate: true
      }),
      onChangeComplete: e => setValue(e, {
        fromSketch: true,
        intermediate: false
      })
    }))
  }, /*#__PURE__*/_createElement(_styled.AdvanceGroup, {
    style: {
      background: advancePickerVisible ? _common.COLORS.OTHERS.DAO_HOVER_BG_COLOR : undefined
    },
    ref: advanceGroupRef
  }, iconAdvanceColorPicker, /*#__PURE__*/_createElement(_text.Text, {
    style: {
      marginLeft: 8,
      flexGrow: 1
    }
  }, t('wdn_color_picker_more_colors')), _ArrowRight || (_ArrowRight = /*#__PURE__*/_createElement(_styled.ArrowRight, null))))) : null);
});
exports.ColorPicker = ColorPicker;
const iconAdvanceColorPicker = /*#__PURE__*/_createElement("svg", {
  width: "20",
  height: "20",
  viewBox: "0 0 1024 1024"
}, /*#__PURE__*/_createElement("path", {
  d: "M512 512m-448 0a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z",
  fill: "#FDD66F"
}), /*#__PURE__*/_createElement("path", {
  d: "M512 64v448L96.106667 345.173333C162.261333 180.352 323.541333 64 512 64z",
  fill: "#FB9855"
}), /*#__PURE__*/_createElement("path", {
  d: "M512 512l283.52 346.901333A446.144 446.144 0 0 1 512 960a445.952 445.952 0 0 1-259.498667-82.773333L512 512z",
  fill: "#4897DA"
}), /*#__PURE__*/_createElement("path", {
  d: "M101.162667 333.077333L512 510.250667 259.52 882.133333C141.482667 801.450667 64 665.770667 64 512c0-63.616 13.248-124.117333 37.162667-178.922667z",
  fill: "#DA625A"
}), /*#__PURE__*/_createElement("path", {
  d: "M922.837333 333.077333A446.506667 446.506667 0 0 1 960 512c0 153.770667-77.482667 289.450667-195.52 370.133333L512 510.250667z",
  fill: "#69B763"
}));
//# sourceMappingURL=ColorPicker.js.map