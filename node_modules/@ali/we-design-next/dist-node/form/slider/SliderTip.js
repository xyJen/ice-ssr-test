"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SliderTip = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _common = require("../../common");
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const SliderTip = /*#__PURE__*/(0, _react.memo)(props => {
  const {
    point = 0,
    isMove,
    formatter,
    bgColor = 'rgba(22, 22, 22, 0.88)',
    textColor = _common.COLORS.WHITE,
    style,
    ...rest
  } = props;
  const tipStyle = (0, _react.useMemo)(() => ({
    backgroundColor: bgColor,
    color: textColor
  }), [bgColor, textColor]);
  return /*#__PURE__*/_createElement(_styled.PointTip, (0, _extends2.default)({}, (0, _common.mergeRestProps)({
    ...rest,
    style: tipStyle
  }, ''), {
    role: isMove ? 'move' : 'hide'
  }), formatter ? formatter(point) : point);
});
exports.SliderTip = SliderTip;
SliderTip.displayName = 'sliderTip';
//# sourceMappingURL=SliderTip.js.map