"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SliderPoint = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _common = require("../../common");
var _SliderTip = require("./SliderTip");
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const SliderPoint = /*#__PURE__*/(0, _react.memo)(props => {
  const {
    handleMouseDownOnPoint,
    point = 0,
    sliderLength = 0,
    isMove,
    formatter,
    moveStart,
    isStart,
    disable,
    tip,
    pointBgColor = _common.COLORS.WHITE,
    pointBgColorDisabled = '#D6D6D6',
    pointBorderColor = _common.COLORS.WHITE,
    pointBorderColorDisabled = _common.COLORS.LIGHT.LEVEL3_BASE_COLOR,
    style,
    ...rest
  } = props;
  const renderTip = (0, _react.useMemo)(() => {
    const pointProps = {
      point,
      isMove,
      formatter
    };
    return (0, _common.renderReactNode)(tip, /*#__PURE__*/_createElement(_SliderTip.SliderTip, pointProps), undefined);
  }, [tip, point, isMove, formatter]);
  const pointStyle = (0, _react.useMemo)(() => {
    return {
      backgroundColor: disable ? pointBgColorDisabled : pointBgColor,
      border: `1px solid ${disable ? pointBorderColorDisabled : pointBorderColor}`,
      boxShadow: disable ? 'none' : `0 0 1px 1px ${_common.COLORS.LIGHT.LEVEL3_BASE_COLOR}`,
      cursor: disable ? 'initial' : 'pointer',
      ...style,
      left: `${point / sliderLength * 100}%`
    };
  }, [disable, point, style, sliderLength, pointBgColorDisabled, pointBgColor, pointBorderColor, pointBorderColorDisabled]);
  return /*#__PURE__*/_createElement(_styled.StyledSliderPoint, (0, _extends2.default)({
    disable: disable,
    isMove: isMove,
    onMouseDown: () => {
      moveStart && (moveStart.current = isStart);
      handleMouseDownOnPoint === null || handleMouseDownOnPoint === void 0 ? void 0 : handleMouseDownOnPoint();
    }
  }, (0, _common.mergeRestProps)({
    ...rest,
    style: pointStyle
  }, '')), renderTip);
});
exports.SliderPoint = SliderPoint;
//# sourceMappingURL=SliderPoint.js.map