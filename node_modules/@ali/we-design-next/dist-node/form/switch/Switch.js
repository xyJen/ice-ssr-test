"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Switch = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _styled = require("./styled");
var _consts = require("../../common/consts");
var _common = require("../../common");
var _useDefaultProp = require("../../common/react/useDefaultProp");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/* eslint-disable no-param-reassign */
const _createElement = /*#__PURE__*/_react.default.createElement;
const Switch = /*#__PURE__*/(0, _react.memo)(props => {
  const {
    defaultChecked,
    checked,
    onChange,
    size = 'normal',
    disabled,
    ...rest
  } = props;
  const [ck, setCk] = (0, _useDefaultProp.useDefaultProp)(defaultChecked || false, checked, onChange);
  const onKeyDown = (0, _react.useCallback)(e => {
    if (e.keyCode === _consts.KEY_CODES.LEFT) {
      setCk(false);
    } else if (e.keyCode === _consts.KEY_CODES.RIGHT) {
      setCk(true);
    }
  }, [setCk]);
  return /*#__PURE__*/_createElement(_styled.SwitchButton, (0, _extends2.default)({
    checked: ck,
    size: size,
    onClick: () => setCk(!ck),
    onKeyDown: onKeyDown,
    disabled: disabled
  }, (0, _common.mergeRestProps)(rest, 'wdn-switch')), /*#__PURE__*/_createElement(_styled.SwitchInner, {
    size: size,
    checked: ck
  }));
});
exports.Switch = Switch;
//# sourceMappingURL=Switch.js.map