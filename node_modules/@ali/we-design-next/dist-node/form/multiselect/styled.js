"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TagContentWrap = exports.SuffixWrap = exports.SingleTagWrap = exports.OverlayWrap = exports.OverflowWrap = exports.MultiSelectInputWrap = exports.ItemWrap = exports.ErrorTip = exports.DisableMask = exports.ClearIcon = exports.ArrowUp = exports.ArrowDown = void 0;
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _common = require("../../common");
var _path;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const CSS_BORDERED_ENABLED = /*#__PURE__*/(0, _styledComponents.css)(["&:hover{border-color:", ";}&:active{border-color:", ";}&:focus-within{border-color:", ";}"], _common.COLORS.OTHERS.PRIMARY_HOVER, _common.COLORS.COMMON.BLUE1_ACTIVE_COLOR, _common.COLORS.DING_BLUR);
const CSS_BORDERED_DISABLED = /*#__PURE__*/(0, _styledComponents.css)(["border-color:", ";"], _common.COLORS.COMMON.OVERLAY_COLOR);
const CSS_BORDERED_ERRORED = /*#__PURE__*/(0, _styledComponents.css)(["border-color:", ";&:focus-within{border-color:", ";}"], _common.COLORS.COMMON.DANGER1_COLOR, _common.COLORS.DING_BLUR);
const CSS_VISIBLE = /*#__PURE__*/(0, _styledComponents.css)(["border-color:", ";box-shadow:0px 0px 0px 2px rgba(0,106,254,0.12);"], _common.COLORS.DING_BLUR);
const COLOR_DISABLED = 'rgba(17, 31, 44, 0.24)';
const MultiSelectInputWrap = /*#__PURE__*/_styledComponents.default.div(["", ";position:relative;display:flex;align-items:center;width:100%;height:", ";padding-left:4px;border-radius:4px;border:1px solid ", ";", ";cursor:", ";", ";outline:none;color:", ";background-color:", ";", " &:focus-within{", "}.input{height:", ";max-width:100%;min-width:40px;padding-left:1px;background-color:", ";> input{padding-left:0;}}"], _common.CSS_BORDER_BOX, ({
  size
}) => size === 'normal' ? '32px' : '28px', _common.COLORS.COMMON.OVERLAY_COLOR, ({
  disabled,
  error
}) => disabled ? CSS_BORDERED_DISABLED : error ? CSS_BORDERED_ERRORED : CSS_BORDERED_ENABLED, ({
  disabled
}) => disabled ? 'not-allowed' : 'text', _common.CSS_DISABLE_SELECT, ({
  disabled
}) => disabled ? COLOR_DISABLED : _common.COLORS.LIGHT.LEVEL1_BASE_COLOR, ({
  disabled
}) => disabled ? '#F7F6F6' : 'unset', ({
  visible
}) => visible ? CSS_VISIBLE : null, ({
  disabled
}) => !disabled ? 'box-shadow: 0px 0px 0px 2px rgba(0, 106, 254, 0.12)' : null, ({
  size
}) => size === 'normal' ? '30px' : '26px', ({
  disabled
}) => disabled ? '#F7F6F6' : 'unset');
exports.MultiSelectInputWrap = MultiSelectInputWrap;
const OverflowWrap = /*#__PURE__*/_styledComponents.default.div(["display:flex;flex:auto;max-width:100%;"]);
exports.OverflowWrap = OverflowWrap;
const SuffixWrap = /*#__PURE__*/_styledComponents.default.span(["display:flex;margin-left:4px;margin-right:4px;line-height:0;cursor:default;"]);
exports.SuffixWrap = SuffixWrap;
const OverlayWrap = /*#__PURE__*/_styledComponents.default.div(["max-height:400px;overflow-y:overlay;", ";"], _common.CSS_SCROLLBAR);
exports.OverlayWrap = OverlayWrap;
const ErrorTip = /*#__PURE__*/_styledComponents.default.div(["position:absolute;top:", ";left:0;margin-top:4px;font-size:12px;line-height:18px;color:", ";"], ({
  size
}) => size === 'normal' ? '32px' : '28px', _common.COLORS.COMMON.DANGER1_COLOR);
exports.ErrorTip = ErrorTip;
const DisableMask = /*#__PURE__*/_styledComponents.default.div(["position:absolute;top:0px;left:0px;width:100%;height:100%;cursor:no-drop;"]);
exports.DisableMask = DisableMask;
const SingleTagWrap = /*#__PURE__*/_styledComponents.default.span(["", ";display:flex;align-items:center;height:", ";margin:3px 3px 3px 0;padding:4px;font-size:13px;background:#EBECED;border-radius:4px;", ";cursor:default;.wdn-icon{color:", ";.hover{color:unset;}}"], _common.CSS_BORDER_BOX, ({
  size
}) => size === 'normal' ? '26px' : '22px', _common.CSS_DISABLE_SELECT, _common.COLORS.LIGHT.LEVEL3_BASE_COLOR);
exports.SingleTagWrap = SingleTagWrap;
const TagContentWrap = /*#__PURE__*/_styledComponents.default.span(["margin-right:3px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;"]);
exports.TagContentWrap = TagContentWrap;
const ItemWrap = /*#__PURE__*/_styledComponents.default.div(["flex:none;align-self:center;max-width:100%;"]);
exports.ItemWrap = ItemWrap;
const ArrowDown = /*#__PURE__*/_react.default.memo(props => /*#__PURE__*/_createElement("svg", {
  width: "12",
  height: "12",
  viewBox: "0 0 12 12",
  stroke: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, /*#__PURE__*/_createElement("path", {
  d: "M6.00004 7.79293L1.85359 3.64648L1.14648 4.35359L6.00004 9.20714L10.8536 4.35359L10.1465 3.64648L6.00004 7.79293Z",
  fill: props.disabled ? COLOR_DISABLED : _common.COLORS.LIGHT.LEVEL1_BASE_COLOR
})));
exports.ArrowDown = ArrowDown;
const ArrowUp = /*#__PURE__*/_react.default.memo(props => /*#__PURE__*/_createElement("svg", {
  width: "12",
  height: "12",
  viewBox: "0 0 12 12",
  stroke: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, /*#__PURE__*/_createElement("path", {
  d: "M5.99996 4.20707L10.1464 8.35352L10.8535 7.64641L5.99996 2.79286L1.14641 7.64641L1.85352 8.35351L5.99996 4.20707Z",
  fill: props.disabled ? COLOR_DISABLED : _common.COLORS.LIGHT.LEVEL1_BASE_COLOR
})));
exports.ArrowUp = ArrowUp;
const ClearIcon = /*#__PURE__*/_react.default.memo(() => /*#__PURE__*/_createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 12 12",
  fill: "none"
}, /*#__PURE__*/_createElement("path", {
  d: "M12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6Z",
  fill: _common.COLORS.LIGHT.LEVEL1_BASE_COLOR,
  "fill-opacity": "0.24"
}), _path || (_path = /*#__PURE__*/_createElement("path", {
  d: "M5.29294 5.99996L3.14651 3.85353L3.85361 3.14642L6.00005 5.29286L8.14646 3.14644L8.85357 3.85355L6.70715 5.99996L8.85359 8.1464L8.14648 8.85351L6.00005 6.70707L3.85359 8.85353L3.14648 8.14642L5.29294 5.99996Z",
  fill: "${COLORS.LIGHT.LEVEL1_BASE_COLOR}",
  "fill-opacity": "0.6"
}))));
exports.ClearIcon = ClearIcon;
//# sourceMappingURL=styled.js.map