"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TagMore = exports.Tag = exports.Item = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _styled = require("./styled");
var _icon = require("../../basic/icon");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const Tag = /*#__PURE__*/_react.default.memo(props => {
  const {
    label,
    closable = true,
    onClose,
    size
  } = props;
  return /*#__PURE__*/_createElement(_styled.SingleTagWrap, {
    size: size
  }, /*#__PURE__*/_createElement(_styled.TagContentWrap, null, label), closable && /*#__PURE__*/_createElement(_icon.IconClose, {
    size: 12,
    onClick: onClose
  }));
});
exports.Tag = Tag;
const TagMore = /*#__PURE__*/_react.default.memo(props => {
  const {
    omittedTags,
    size
  } = props;
  const len = omittedTags.length;
  return /*#__PURE__*/_createElement(_styled.SingleTagWrap, {
    size: size
  }, /*#__PURE__*/_createElement(_styled.TagContentWrap, null, "+", len, "..."));
});
exports.TagMore = TagMore;
const Item = /*#__PURE__*/_react.default.memo(props => {
  const {
    children,
    registerSize,
    itemKey,
    display,
    order,
    style
  } = props;
  const ref = (0, _react.useRef)(null);
  const mergedHidden = !display;
  const internalRegisterSize = width => {
    registerSize(itemKey, width);
  };
  (0, _react.useEffect)(() => {
    if (ref.current) {
      internalRegisterSize(ref.current.offsetWidth);
      return () => {
        internalRegisterSize(null);
      };
    }
  }, []);
  let overflowStyle = {
    opacity: mergedHidden ? 0 : 1,
    height: mergedHidden ? 0 : undefined,
    overflowY: mergedHidden ? 'hidden' : undefined,
    order: order,
    pointerEvents: mergedHidden ? 'none' : undefined,
    position: mergedHidden ? 'absolute' : undefined
  };
  const overflowProps = {};
  if (mergedHidden) {
    overflowProps['aria-hidden'] = true;
  }
  return /*#__PURE__*/_createElement(_styled.ItemWrap, (0, _extends2.default)({
    ref: ref
  }, overflowProps, {
    style: {
      ...overflowStyle,
      ...style
    }
  }), children);
});
exports.Item = Item;
//# sourceMappingURL=Tag.js.map