"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.visibleStyle = exports.errorStyle = exports.SuffixWrap = exports.SelectNormalValuePlaceholder = exports.SelectNormalValue = exports.SelectNormal = exports.InputWrap = exports.ErrorTip = void 0;
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _common = require("../../common");
var _text = require("../../basic/text");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const CSS_BORDERED_ENABLED = /*#__PURE__*/(0, _styledComponents.css)(["&:hover{border-color:", ";}&:active{border-color:", ";}&:focus-within{border-color:", ";}"], _common.COLORS.OTHERS.PRIMARY_HOVER, _common.COLORS.COMMON.BLUE1_ACTIVE_COLOR, _common.COLORS.DING_BLUR);
const CSS_BORDERED_DISABLED = /*#__PURE__*/(0, _styledComponents.css)(["border-color:", ";"], _common.COLORS.COMMON.OVERLAY_COLOR);
const CSS_BORDERED_ERRORED = /*#__PURE__*/(0, _styledComponents.css)(["border-color:", ";"], _common.COLORS.COMMON.DANGER1_COLOR);
const CSS_VISIBLE = /*#__PURE__*/(0, _styledComponents.css)(["border-color:", ";box-shadow:0px 0px 0px 2px rgba(0,106,254,0.12);"], _common.COLORS.DING_BLUR);
const visibleStyle = {
  borderColor: _common.COLORS.DING_BLUR,
  boxShadow: '0px 0px 0px 2px rgba(0, 106, 254, 0.12)'
};
exports.visibleStyle = visibleStyle;
const HOVER_TRANSITION_BG = /*#__PURE__*/(0, _styledComponents.css)(["&:hover{background:", ";}&:active{background:", ";}transition:background-color 0.1s ease-in-out;"], _common.COLORS.OTHERS.DAO_HOVER_BG_COLOR, _common.COLORS.OTHERS.BG_ACTIVE);
const CSS_VISIBLE_BG = /*#__PURE__*/(0, _styledComponents.css)(["background:", ";transition:background-color 0.1s ease-in-out;"], _common.COLORS.OTHERS.BG_FOCUS);
const InputWrap = /*#__PURE__*/_styledComponents.default.div(["position:relative;border-radius:4px;height:", ";"], ({
  size
}) => size === 'normal' ? '32px' : '28px');
exports.InputWrap = InputWrap;
const SelectNormal = /*#__PURE__*/_styledComponents.default.div(["", " ", " ", ";display:flex;align-items:center;width:100%;height:", ";padding:4px 4px 4px 8px;border-radius:4px;", ";outline:none;color:", ";background-color:", ";border:", ";", ";", ";&:focus-within{", "}"], _common.CSS_BORDER_BOX, _text.TEXT_CSS.TEXT, _common.CSS_CURSOR_DISABLE, ({
  size
}) => size === 'normal' ? '32px' : '28px', _common.CSS_DISABLE_SELECT, ({
  disabled
}) => disabled ? _common.COLORS.LIGHT.LEVEL4_BASE_COLOR : _common.COLORS.LIGHT.LEVEL1_BASE_COLOR, ({
  disabled,
  bordered,
  visible
}) => bordered ? disabled ? '#F7F6F6' : 'unset' : visible ? _common.COLORS.OTHERS.BG_FOCUS : 'unset', ({
  bordered
}) => bordered ? `1px solid ${_common.COLORS.COMMON.OVERLAY_COLOR}` : '1px solid transparent', ({
  disabled,
  bordered,
  hasError,
  visible
}) => !bordered ? disabled ? null : visible ? CSS_VISIBLE_BG : HOVER_TRANSITION_BG : disabled ? CSS_BORDERED_DISABLED : hasError ? CSS_BORDERED_ERRORED : CSS_BORDERED_ENABLED, ({
  visible,
  bordered
}) => visible && bordered ? CSS_VISIBLE : null, ({
  disabled,
  bordered
}) => !disabled && bordered ? 'box-shadow: 0px 0px 0px 2px rgba(0, 106, 254, 0.12)' : null);
exports.SelectNormal = SelectNormal;
const SelectNormalValue = /*#__PURE__*/_styledComponents.default.div(["flex-grow:1;min-width:10px;"]);
exports.SelectNormalValue = SelectNormalValue;
const SelectNormalValuePlaceholder = /*#__PURE__*/_styledComponents.default.span(["margin:0 4px;color:", ";"], _common.COLORS.LIGHT.LEVEL4_BASE_COLOR);
exports.SelectNormalValuePlaceholder = SelectNormalValuePlaceholder;
const SuffixWrap = /*#__PURE__*/_styledComponents.default.span(["display:inline-block;margin-left:4px;margin-right:4px;line-height:0;cursor:default;"]);
exports.SuffixWrap = SuffixWrap;
const errorStyle = {
  borderColor: _common.COLORS.COMMON.DANGER1_COLOR
};
exports.errorStyle = errorStyle;
const ErrorTip = /*#__PURE__*/_styledComponents.default.div(["position:absolute;top:", ";left:0;margin-top:4px;font-size:12px;line-height:18px;color:", ";"], ({
  size
}) => size === 'normal' ? '32px' : '28px', _common.COLORS.COMMON.DANGER1_COLOR);
exports.ErrorTip = ErrorTip;
//# sourceMappingURL=styled.js.map