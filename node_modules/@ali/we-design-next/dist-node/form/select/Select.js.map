{"version":3,"file":"Select.js","names":["Select","React","memo","forwardRef","props","ref","options","value","_value","defaultValue","onChange","visible","_visible","defaultVisible","onVisibleChange","size","mode","placeholder","disabled","error","bordered","getContainer","children","renderValue","renderOption","autoWidth","keyboard","rest","flattenOptions","useMemo","flattenNested","setValue","useDefaultProp","inputValue","setInputValue","useState","undefined","active","setActive","setVisible","wrapRef","useRef","listRef","useLayoutEffect","current","style","minWidth","clientWidth","focusTargetId","focusTarget","focusOwner","useFocusTarget","onOptionClick","k","updateValueByInputValue","res","filter","isNormalized","find","op","title","toString","includes","key","handleEsc","handleKeyDown","e","which","KEY_CODES","ENTER","nativeEvent","stopImmediatePropagation","DOWN","ESC","handleValueChange","target","currentOpt","renderListItem","p","ele","cloneElement","suffix","renderReactNode","maxHeight","proxyRestProps","fn","document","body","mergeRestProps","visibleStyle","errorStyle","Option","List","Item"],"sources":["../../../../src/form/select/Select.tsx"],"sourcesContent":["import React, { useMemo, useState, useLayoutEffect, useRef, ReactElement, cloneElement } from 'react';\nimport { Popover } from '../../display/popover';\nimport { useDefaultProp, IRestProps, mergeRestProps, proxyRestProps, KEY_CODES, useFocusTarget, renderReactNode, IRenderReactNode } from '../../common';\nimport { List } from '../../basic/list';\nimport { IListItemNormalized, IListItemCustomized, INestedItems, flattenNested, isNormalized } from '../../basic/list/nested';\nimport { Input } from '../../form/input';\nimport { SuffixWrap, ErrorTip, SelectNormal, SelectNormalValue, SelectNormalValuePlaceholder, InputWrap, visibleStyle, errorStyle } from './styled';\nimport { ArrowUpDown12 } from '../../common/';\nimport { IconSelected } from '../../basic/icon';\n\nexport type ISelectOptionNormalized = IListItemNormalized;\n\nexport type ISelectOptionCustomized = IListItemCustomized;\n\nexport type ISelectOption = ISelectOptionNormalized | ISelectOptionCustomized;\n\nexport type ISelectProps = {\n  /**\n   * 选中值\n   */\n  value?: string;\n  /**\n   * 默认值\n   */\n  defaultValue?: string;\n  /**\n   * 选中值变化时的回调\n   */\n  onChange?: (value: string) => void;\n  /**\n   * 下拉列表的选项\n   */\n  options?: INestedItems<ISelectOption>;\n  /**\n   * 自定义渲染\n   */\n  renderValue?: IRenderReactNode<{ key: string }>; // (value: ISelectOptionNormalized | string) => React.ReactElement | null;\n  /**\n   * 自定义渲染\n   */\n  renderOption?: IRenderReactNode<{ key: string }>;\n  /**\n   * 模式，默认为不可输入\n   */\n  mode?: 'normal' | 'input';\n  /**\n   * 下拉弹层可见性\n   */\n  visible?: boolean;\n  /**\n   * 下拉弹层默认可见性\n   */\n  defaultVisible?: boolean;\n  /**\n   * 弹层可见性变化时的回调\n   */\n  onVisibleChange?: (visible: boolean) => void;\n  /**\n   * 禁用态\n   */\n  disabled?: boolean;\n  /**\n   * 占位提示\n   */\n  placeholder?: string;\n  /**\n   * 组件尺寸，默认为small 28px\n   */\n  size?: 'small' | 'normal';\n  /**\n   * 弹层挂载的容器元素\n   */\n  getContainer?: () => HTMLElement;\n  /**\n   * 错误提示\n   */\n  error?: string;\n  /**\n   * 是否有边框，默认为 true\n   */\n  bordered?: boolean;\n  /**\n   * 如果为 true，那么下拉面板中的内容将自适应宽度；否则将至少与输入框同宽。\n   */\n  autoWidth?: boolean;\n  /**\n   * 是否响应键盘事件\n   */\n  keyboard?: boolean;\n} & IRestProps;\n\nexport const Select = React.memo(\n\n  React.forwardRef<HTMLInputElement, ISelectProps>(\n    (props, ref) => {\n      const {\n        options = [],\n        value: _value,\n        defaultValue = '',\n        onChange,\n        visible: _visible,\n        defaultVisible = false,\n        onVisibleChange,\n        size = 'small',\n        mode = 'normal',\n        placeholder,\n        disabled,\n        error,\n        bordered = true,\n        getContainer,\n        children,\n        renderValue,\n        renderOption,\n        autoWidth = false,\n        keyboard = true,\n        ...rest\n      } = props;\n\n      const flattenOptions = useMemo(() => flattenNested(options), [options]);\n\n      const [value, setValue] = useDefaultProp<string>(defaultValue, _value, onChange);\n      const [inputValue, setInputValue] = useState<string | undefined>(undefined);\n      const [active, setActive] = useState<string | null>(null);\n      const [visible, setVisible] = useDefaultProp<boolean>(defaultVisible, _visible, onVisibleChange);\n\n      const wrapRef = useRef<HTMLDivElement>(null);\n      const listRef = useRef<HTMLDivElement>(null);\n\n      // 需要在dom更新后，渲染之前更新宽度，否则会影响dom align获取content的宽度\n      useLayoutEffect(() => {\n        if (visible && wrapRef.current && listRef.current) {\n          listRef.current.style.minWidth = autoWidth ? 'auto' : wrapRef.current.clientWidth + 'px';\n        }\n      }, [visible, autoWidth]);\n\n      const [focusTargetId, focusTarget, focusOwner] = useFocusTarget(wrapRef);\n\n      const onOptionClick = (k: string) => {\n        setValue(k);\n        setInputValue(undefined);\n        setVisible(false);\n      };\n\n      const updateValueByInputValue = () => {\n        if (typeof inputValue === 'string') {\n          const res = flattenOptions.filter(isNormalized).find(op => op.title?.toString().includes(inputValue));\n          if (res) {\n            setValue(res.key);\n          } else {\n            setValue(inputValue);\n          }\n          setInputValue(undefined);\n        }\n      };\n\n      const handleEsc = () => {\n        focusOwner(() => {\n          setActive(null);\n          setVisible(false);\n        });\n      };\n\n      const handleKeyDown = keyboard ? (e: React.KeyboardEvent<HTMLInputElement>) => {\n        switch (e.which) {\n          case KEY_CODES.ENTER:\n            !visible && setVisible(true);\n            mode === 'input' && updateValueByInputValue();\n            e.nativeEvent.stopImmediatePropagation();\n            break;\n          case KEY_CODES.DOWN:\n            break;\n          case KEY_CODES.ESC:\n            handleEsc();\n            break;\n          default: break;\n        }\n      } : undefined;\n\n      const handleValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n      };\n\n      const currentOpt = flattenOptions.find(k => k.key === value);\n\n      const renderListItem: React.ComponentProps<typeof List>['renderItem'] = ({ key }) => (p: ReactElement) => {\n        const props = p.props as any;\n        const ele = key === value ? cloneElement(p as ReactElement, { suffix: <IconSelected /> }) :\n          !props.suffix ? cloneElement(p as ReactElement, { suffix: null }) :\n            p;\n        return renderReactNode(\n          renderOption,\n          ele,\n          { key }\n        );\n      };\n\n      return <Popover\n        placement=\"bottomLeft\"\n        placementOffset={[4, 0]}\n        animation\n        content={\n          <List\n            items={options}\n            id={focusTargetId}\n            style={{ minWidth: 'auto', maxHeight: 400 }}\n            keyboard={keyboard}\n            active={active}\n            onActiveChange={setActive}\n            onSelect={onOptionClick}\n            renderItem={renderListItem}\n            {...proxyRestProps(rest, 'list')}\n            ref={listRef}\n          />\n        }\n        visible={visible}\n        trigger={disabled ? undefined : \"click\"}\n        onVisibleChange={(e) => {\n          if (e) {\n            if (!visible) {\n              const fn = () => setVisible(e);\n              if (keyboard && mode === 'normal') {\n                focusTarget(fn);\n              } else {\n                fn();\n              }\n            }\n          } else {\n            visible && setVisible(e);\n            setActive(null);\n          }\n        }}\n        getContainer={getContainer || (() => wrapRef.current || document.body)}\n        onKeyDown={(e) => { e.which === KEY_CODES.ESC && handleEsc() }}\n        data-testid={`overlay-${props['data-testid']}`}\n      >\n        <InputWrap\n          ref={wrapRef}\n          size={size}\n          onKeyDown={handleKeyDown}\n          {...mergeRestProps(rest, 'wdn-select')}\n        >\n          {mode === 'normal' ?\n            <SelectNormal\n              ref={ref}\n              className='wdn-select-normal'\n              tabIndex={-1}\n              hasError={!!error}\n              disabled={!!disabled}\n              size={size}\n              bordered={bordered}\n              visible={visible}\n              onClick={() => visible && setVisible(false)}\n            >\n              <SelectNormalValue>\n                {\n                  (() => {\n\n                    if (currentOpt) {\n                      if (isNormalized(currentOpt)) {\n                        return renderReactNode(\n                          renderValue,\n                          currentOpt.title,\n                          { key: currentOpt.key }\n                        );\n                      } else {\n                        return currentOpt.key;\n                      }\n                    } else {\n                      return (\n                        value\n                          ? renderReactNode(renderValue, value, { key: value })\n                          : <SelectNormalValuePlaceholder>{placeholder}</SelectNormalValuePlaceholder>\n                      );\n                    }\n                  })()\n                }\n              </SelectNormalValue>\n              <SuffixWrap>\n                <ArrowUpDown12 dir={visible ? 'up' : 'down'} />\n              </SuffixWrap>\n            </SelectNormal>\n            :\n            <Input\n              ref={ref}\n              className='wdn-select-input'\n              size={size}\n              value={typeof inputValue === 'string' ? inputValue : currentOpt ? isNormalized(currentOpt) ? currentOpt.title?.toString() : currentOpt.key : value}\n              disabled={!!disabled}\n              bordered={!!bordered}\n              placeholder={placeholder}\n              onBlur={updateValueByInputValue}\n              onChange={handleValueChange}\n              style={visible && bordered ? visibleStyle : (error ? errorStyle : undefined)}\n              suffix={\n                <SuffixWrap>\n                  {<ArrowUpDown12 dir={visible ? 'up' : 'down'} />}\n                </SuffixWrap>\n              }\n            />}\n          {error && <ErrorTip>{error}</ErrorTip>}\n        </InputWrap>\n      </Popover>;\n    })\n);\n\nexport const Option = List.Item;\n"],"mappings":"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"}