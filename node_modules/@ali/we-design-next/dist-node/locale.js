"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LocaleProvider = exports.LocaleContext = void 0;
exports.defineLocale = defineLocale;
exports.globalLang = void 0;
exports.useDayjsLocale = useDayjsLocale;
exports.useLocale = useLocale;
exports.useTranslate = useTranslate;
var _react = _interopRequireWildcard(require("react"));
var _i18next = _interopRequireDefault(require("i18next"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const resources = {};
const defaultLocale = 'zh-CN';
const LocaleContext = /*#__PURE__*/(0, _react.createContext)(defaultLocale);
exports.LocaleContext = LocaleContext;
const LocaleProvider = props => {
  (0, _react.useLayoutEffect)(() => {
    globalLang.lang = props.value;
    return () => globalLang.lang = undefined;
  }, [props.value]);
  return /*#__PURE__*/_createElement(LocaleContext.Provider, {
    value: props.value
  }, props.children);
};
exports.LocaleProvider = LocaleProvider;
function defineLocale(lang, res) {
  resources[lang] = {
    translation: {
      ...(resources[lang] ? resources[lang].translation : {}),
      ...res
    }
  };
}
function useLocale() {
  return (0, _react.useContext)(LocaleContext);
}
function useTranslate(locale) {
  const contextLocale = (0, _react.useContext)(LocaleContext);
  const l = locale || contextLocale || defaultLocale;
  return getT(l);
}
const cacheT = {};
function getT(locale) {
  if (cacheT[locale]) {
    return cacheT[locale];
  }
  const inst = _i18next.default.createInstance();
  inst.init({
    fallbackLng: defaultLocale,
    lng: locale,
    resources
  });
  cacheT[locale] = inst.t.bind(inst);
  return cacheT[locale];
}
function useDayjsLocale(locale) {
  const contextLocale = (0, _react.useContext)(LocaleContext);
  const l = locale || contextLocale || defaultLocale;
  const DAYJS_LOCALE_MAP = {
    'zh-CN': 'zh-cn',
    zh_CN: 'zh-cn',
    'zh-TW': 'zh-tw',
    zh_TW: 'zh-tw',
    'zh-HK': 'zh-hk',
    zh_HK: 'zh-hk',
    ja: 'ja',
    ja_JP: 'ja',
    'ja-JP': 'ja',
    'en-US': 'en',
    en_US: 'en'
  };
  return DAYJS_LOCALE_MAP[l];
}
const globalLang = {
  lang: undefined
};
exports.globalLang = globalLang;
//# sourceMappingURL=locale.js.map