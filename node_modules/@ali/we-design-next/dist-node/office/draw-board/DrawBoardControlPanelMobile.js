"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrawboardControlPanelMobile = void 0;
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _colors = require("../../common/consts/colors");
var _icon = require("../../basic/icon");
var _IconUndoMobile, _IconRedoMobile, _IconDeleteMobile;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/_react.default.createElement;
const DrawboardControlPanelMobile = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef((props, ref) => {
  const drawBoardRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, () => ({
    attach: drawBoard => {
      drawBoardRef.current = drawBoard;
      return drawBoard.onChange(({
        undoAble,
        redoAble,
        clearAble
      }) => {
        setUndoAble(undoAble);
        setRedoAble(redoAble);
        setClearAble(clearAble);
      });
    }
  }));
  const [undoAble, setUndoAble] = (0, _react.useState)(false);
  const [redoAble, setRedoAble] = (0, _react.useState)(false);
  const [clearAble, setClearAble] = (0, _react.useState)(false);
  return /*#__PURE__*/_createElement(IconsWrap, null, /*#__PURE__*/_createElement(IconWrap, {
    onTouchStart: undoAble ? () => {
      var _drawBoardRef$current;
      return (_drawBoardRef$current = drawBoardRef.current) === null || _drawBoardRef$current === void 0 ? void 0 : _drawBoardRef$current.undo();
    } : undefined,
    disabled: !undoAble
  }, _IconUndoMobile || (_IconUndoMobile = /*#__PURE__*/_createElement(_icon.IconUndoMobile, null))), /*#__PURE__*/_createElement(IconWrap, {
    onTouchStart: redoAble ? () => {
      var _drawBoardRef$current2;
      return (_drawBoardRef$current2 = drawBoardRef.current) === null || _drawBoardRef$current2 === void 0 ? void 0 : _drawBoardRef$current2.redo();
    } : undefined,
    disabled: !redoAble
  }, _IconRedoMobile || (_IconRedoMobile = /*#__PURE__*/_createElement(_icon.IconRedoMobile, null))), /*#__PURE__*/_createElement(IconWrap, {
    onTouchStart: clearAble ? () => {
      var _drawBoardRef$current3;
      return (_drawBoardRef$current3 = drawBoardRef.current) === null || _drawBoardRef$current3 === void 0 ? void 0 : _drawBoardRef$current3.clear();
    } : undefined,
    disabled: !clearAble
  }, _IconDeleteMobile || (_IconDeleteMobile = /*#__PURE__*/_createElement(_icon.IconDeleteMobile, null))));
}));
exports.DrawboardControlPanelMobile = DrawboardControlPanelMobile;
const IconsWrap = /*#__PURE__*/_styledComponents.default.div(["display:flex;padding:0 10px;"]);
const IconWrap = /*#__PURE__*/_styledComponents.default.div(["display:flex;justify-content:center;align-items:center;width:40px;height:48px;color:", ";& > svg{vertical-align:middle;}"], ({
  disabled
}) => disabled ? _colors.COLORS.LIGHT.LEVEL4_BASE_COLOR : _colors.COLORS.LIGHT.LEVEL1_BASE_COLOR);
//# sourceMappingURL=DrawBoardControlPanelMobile.js.map