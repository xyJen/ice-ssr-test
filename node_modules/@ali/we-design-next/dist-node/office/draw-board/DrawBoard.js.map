{"version":3,"file":"DrawBoard.js","names":["getCroppedImage","canvas","vCanvas","padding","getLeftBorder","data","width","height","i","j","index","hasColor","getRightBorder","getTopBorder","getBottomBorder","imageData","ctx","getContext","getImageData","fns","left","right","top","bottom","map","fn","w","h","newImageData","vCtx","putImageData","dataUrl","toDataURL","BOARD_WIDTH","BOARD_HEIGHT","PAINT_COLOR","LINE_CAP","DPR","window","devicePixelRatio","MAX_UNDO_STEP","DrawBoard","React","memo","forwardRef","props","ref","paintColor","backgroundColor","placeholder","onPaint","rest","hasStartedPainting","setHasStartedPainting","useState","canvasRef","useRef","controllerRef","undo","noop","redo","clear","destroy","exportToImage","useEffect","current","ele","removeEventListener","addEventListener","onChangeFnsRef","onPaintCallback","useEventCallback","style","Math","floor","controller","createController","opt","useImperativeHandle","onChange","push","indexOf","splice","mergeRestProps","options","scale","lineCap","strokeStyle","fillStyle","fillRect","isPainting","points","lastSpeed","lastLineWidth","undoStack","redoStack","document","createElement","change","undoAble","length","redoAble","clearAble","toPoint","event","e","touches","getBoundingClientRect","x","clientX","y","clientY","t","Date","now","clearRect","snapshot","restoreSnapshot","handleStart","draw","getMidPoint","p1","p2","getTransferredSpeed","startPoint","endPoint","x1","y1","t1","x2","y2","t2","trueSpeed","pow","transferredSpeed","getLineWidthBySpeed","speed","currLineWidth","max","transferredLineWidth","p3","currentLineWidth","lineWidth","beginPath","moveTo","quadraticCurveTo","stroke","closePath","handleMove","preventDefault","shift","handleEnd","sh","attachHandlers","isIOS","attachHandlersWithTouch","attachHandlersWithPointer","detachHandlers","detachHandlersWithTouch","detachHandlersWithPointer","sp","pop","type","cropPadding"],"sources":["../../../../src/office/draw-board/DrawBoard.tsx"],"sourcesContent":["import React, { useEffect, useImperativeHandle, useRef, useState, ReactNode, DOMAttributes } from 'react';\nimport { noop } from 'lodash-es';\nimport { BoardWrapper, BoardPlaceholderWrapper, BoardPlaceholder, Canvas } from './styled';\nimport { useEventCallback } from '../../common/react/useEventCallback';\nimport { mergeRestProps, IRestProps } from '../../common/react/mergeRestProps';\nimport { isIOS } from '../../common/env/isMobile';\n\nexport type IDrawBoardProps = {\n  /**\n   * 宽度，默认为 500px\n   */\n  width?: number;\n  /**\n   * 高度, 默认为 309px\n   */\n  height?: number;\n  /**\n   * 画笔颜色，默认为黑色\n   */\n  paintColor?: string;\n  /**\n   * 背景颜色，默认为透明色（此颜色会成为导出图片的背景色）\n   */\n  backgroundColor?: string;\n  /**\n   * 自定义 placeholder 文案\n   */\n  placeholder?: ReactNode;\n  /**\n   * 每次画完一笔后回调\n   */\n  onPaint?: () => void;\n} & IRestProps & DOMAttributes<HTMLDivElement>;\n\n// 获取 canvas 最小有效图像\nconst getCroppedImage = (canvas: HTMLCanvasElement, vCanvas: HTMLCanvasElement, padding = 0) => {\n  const getLeftBorder = (\n    data: Uint8ClampedArray,\n    width: number,\n    height: number,\n  ) => {\n    for (let i = 0; i < width; i++) {\n      for (let j = 0; j < height; j++) {\n        const index = j * width + i;\n        const hasColor = data[index * 4 + 3] > 0;\n        if (hasColor) {\n          return i + 1;\n        }\n      }\n    }\n    return 0;\n  };\n\n  const getRightBorder = (\n    data: Uint8ClampedArray,\n    width: number,\n    height: number,\n  ) => {\n    for (let i = width - 1; i >= 0; i--) {\n      for (let j = 0; j < height; j++) {\n        const index = j * width + i;\n        const hasColor = data[index * 4 + 3] > 0;\n        if (hasColor) {\n          return i + 1;\n        }\n      }\n    }\n    return 0;\n  };\n\n  const getTopBorder = (\n    data: Uint8ClampedArray,\n    width: number,\n    height: number,\n  ) => {\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const index = i * width + j;\n        const hasColor = data[index * 4 + 3] > 0;\n        if (hasColor) {\n          return i + 1;\n        }\n      }\n    }\n    return 0;\n  };\n\n  const getBottomBorder = (\n    imageData: Uint8ClampedArray,\n    width: number,\n    height: number,\n  ) => {\n    for (let i = height - 1; i >= 0; i--) {\n      for (let j = 0; j < width; j++) {\n        const index = i * width + j;\n        const hasColor = imageData[index * 4 + 3] > 0;\n        if (hasColor) {\n          return i + 1;\n        }\n      }\n    }\n    return 0;\n  };\n\n  const ctx = canvas.getContext('2d')!;\n  const width = canvas.width;\n  const height = canvas.height;\n  const { data } = ctx.getImageData(0, 0, width, height);\n\n  const fns = [getLeftBorder, getRightBorder, getTopBorder, getBottomBorder];\n  const [left, right, top, bottom] = fns.map((fn) =>\n    fn(data, width, height)\n  );\n\n  const w = right - left + 1;\n  const h = bottom - top + 1;\n\n  const newImageData = ctx.getImageData(left, top, w, h);\n\n  vCanvas.width = w + padding * 2;\n  vCanvas.height = h + padding * 2;\n  const vCtx = vCanvas.getContext('2d')!;\n  vCtx.putImageData(newImageData, padding, padding);\n  const dataUrl = vCanvas.toDataURL('image/png', 1);\n  return { dataUrl, width: vCanvas.width, height: vCanvas.height };\n};\n\ntype IDrawBoardHandlers = Omit<IController, 'destroy'> & {\n  onChange: (fn: (option: IChangeOption) => void) => () => void,\n};\n\nconst BOARD_WIDTH = 500;\nconst BOARD_HEIGHT = 309;\nconst PAINT_COLOR = '#000000';\nconst LINE_CAP =  'round';\nconst DPR = window.devicePixelRatio;\nconst MAX_UNDO_STEP = 10;\n\nexport const DrawBoard = React.memo(\n  React.forwardRef<IDrawBoardHandlers, IDrawBoardProps>(\n    (props, ref) => {\n      const {\n        width = BOARD_WIDTH,\n        height = BOARD_HEIGHT,\n        paintColor = PAINT_COLOR,\n        backgroundColor,\n        placeholder,\n        onPaint,\n        ...rest\n      } = props;\n\n      const [hasStartedPainting, setHasStartedPainting] = useState<boolean>(false);\n\n      const canvasRef = useRef<HTMLCanvasElement>(null);\n      const controllerRef = useRef<IController>({\n        undo: noop,\n        redo: noop,\n        clear: noop,\n        destroy: noop,\n        exportToImage: () => null,\n      });\n\n      useEffect(() => {\n        if (canvasRef.current) {\n          const ele = canvasRef.current;\n          const fn = () => {\n            setHasStartedPainting(true);\n            ele.removeEventListener('pointerdown', fn);\n          }\n          ele.addEventListener('pointerdown', fn);\n        }\n      }, [canvasRef.current]);\n\n      const onChangeFnsRef = useRef<Array<(option: IChangeOption) => void>>([]);\n\n      const onPaintCallback = useEventCallback(() => onPaint && onPaint());\n\n      useEffect(() => {\n        if (canvasRef.current) {\n          const ele = canvasRef.current;\n\n          ele.style.width = width + 'px';\n          ele.style.height = height + 'px';\n\n          ele.width = Math.floor(width * DPR);\n          ele.height = Math.floor(height * DPR);\n\n          const controller = createController(\n            canvasRef.current,\n            (opt) => {\n              for (const fn of onChangeFnsRef.current) {\n                fn(opt)\n              }\n              onPaintCallback();\n            },\n            {\n              paintColor,\n              backgroundColor,\n            }\n          );\n          controllerRef.current = controller;\n          return () => {\n            onChangeFnsRef.current = [];\n            controller.destroy();\n          }\n        }\n      }, []);\n\n      useImperativeHandle(ref, () => ({\n        onChange: (fn: (option: IChangeOption) => void) => {\n          onChangeFnsRef.current.push(fn);\n          return () => {\n            const i = onChangeFnsRef.current.indexOf(fn);\n            if (i !== -1) {\n              onChangeFnsRef.current.splice(i, 1);\n            }\n          }\n        },\n        undo: () => controllerRef.current.undo(),\n        redo: () => controllerRef.current.redo(),\n        clear: () => controllerRef.current.clear(),\n        exportToImage: controllerRef.current.exportToImage,\n      }));\n\n      return (\n        <BoardWrapper {...mergeRestProps(rest, 'wdn-drawboard', { width, height })}>\n          {\n            !hasStartedPainting && placeholder ?\n              <BoardPlaceholderWrapper style={{ width, height }}>\n                <BoardPlaceholder>{placeholder}</BoardPlaceholder>\n              </BoardPlaceholderWrapper> :\n              null\n          }\n          <Canvas style={{ backgroundColor }} ref={canvasRef} />\n        </BoardWrapper>\n      );\n    }\n  )\n);\n\n\ntype IDrawPoint = {\n  x: number;\n  y: number;\n  t: number;\n}\n\ntype IChangeOption = { undoAble: boolean, redoAble: boolean, clearAble: boolean };\ntype IController = {\n  undo: () => void,\n  redo: () => void,\n  clear: () => void,\n  exportToImage: (type?: 'dataUrl', options?: { cropPadding?: number }) => {\n    dataUrl: string;\n    width: number;\n    height: number;\n  } | null,\n  destroy: () => void;\n}\n\nconst createController = (\n  canvas: HTMLCanvasElement,\n  onChange: (options: IChangeOption) => void,\n  options: {\n    paintColor: string,\n    backgroundColor?: string,\n  }\n): IController => {\n  \n  const { paintColor, backgroundColor } = options;\n\n  const ctx = canvas.getContext('2d')!;\n\n  ctx.scale(DPR, DPR);\n  ctx.lineCap = LINE_CAP;\n  ctx.strokeStyle = paintColor;\n  if (backgroundColor) {\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }\n\n  let isPainting = false;\n  let points: IDrawPoint[] = [];\n  let lastSpeed = 0;\n  let lastLineWidth = 5;\n\n  let undoStack: Array<ImageData | null> = [];\n  let redoStack: Array<ImageData | null> = [];\n\n  const vCanvas = document.createElement('canvas');\n\n  const change = () => onChange({\n    undoAble: undoStack.length > 1,\n    redoAble: redoStack.length > 0,\n    clearAble: undoStack[undoStack.length - 1] !== null\n  });\n\n  const toPoint = (event: MouseEvent | TouchEvent): IDrawPoint => {\n\n    const e = 'clientX' in event ? event : event.touches[0];\n    const { left, top } = canvas.getBoundingClientRect();\n\n    return {\n      x: e.clientX - left,\n      y: e.clientY - top,\n      t: Date.now(),\n    };\n  };\n\n  const clear = () => {\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (backgroundColor) {\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n  };\n\n  const snapshot = () => {\n    return ctx.getImageData(0, 0, canvas.width, canvas.height);\n  };\n\n  const restoreSnapshot = (imageData: ImageData | null) => {\n    if (imageData === null) {\n      clear();\n    } else {\n      clear();\n      ctx.putImageData(imageData, 0, 0);\n    }\n  };\n\n  const handleStart = (event: MouseEvent | TouchEvent) => {\n    isPainting = true;\n    points.push(toPoint(event));\n  };\n\n  const draw = () => {\n\n    if (points.length < 3) {\n      return;\n    }\n\n    const getMidPoint = (p1: IDrawPoint, p2: IDrawPoint): IDrawPoint => {\n      return {\n        x: (p1.x + p2.x) / 2,\n        y: (p1.y + p2.y) / 2,\n        t: (p1.t + p2.t) / 2,\n      };\n    };\n\n    const getTransferredSpeed = (startPoint: IDrawPoint, endPoint: IDrawPoint) => {\n      const { x: x1, y: y1, t: t1 } = startPoint;\n      const { x: x2, y: y2, t: t2 } = endPoint;\n      const trueSpeed = (Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)) / (t2 - t1);\n      const transferredSpeed =\n        0.7 * trueSpeed +\n        (1 - 0.7) * lastSpeed;\n      lastSpeed = transferredSpeed;\n      return transferredSpeed;\n    };\n\n    const getLineWidthBySpeed = (speed: number) => {\n      const currLineWidth = Math.max(5 - speed, 2);\n      const transferredLineWidth = (lastLineWidth + currLineWidth) / 2;\n      lastLineWidth = transferredLineWidth;\n      return transferredLineWidth;\n    };\n\n    const [p1, p2, p3] = points;\n    const startPoint = getMidPoint(p1, p2);\n    const endPoint = getMidPoint(p2, p3);\n\n    const { x: x2, y: y2 } = p2;\n\n    if (startPoint.x === endPoint.x && startPoint.y === endPoint.y) return;\n\n    const speed = getTransferredSpeed(startPoint, endPoint);\n    const currentLineWidth = getLineWidthBySpeed(speed);\n\n    ctx.lineWidth = currentLineWidth;\n    ctx.beginPath();\n    ctx.moveTo(startPoint.x, startPoint.y);\n\n    // p2 作为控制点, p1 与 p2 的中点作为起始点, p2 与 p3 的中点作为终止点\n    ctx.quadraticCurveTo(x2, y2, endPoint.x, endPoint.y);\n    ctx.stroke();\n    ctx.closePath();\n  };\n\n  const handleMove = (event: MouseEvent | TouchEvent) => {\n    // 解决移动端滚动穿透问题\n    event.preventDefault();\n\n    if (isPainting) {\n      if (points.length === 3) {\n        points.shift();\n      }\n      points.push(toPoint(event));\n\n      draw();\n    }\n  };\n\n  const handleEnd = () => {\n    if (isPainting) {\n      isPainting = false;\n      points = [];\n      lastSpeed = 0;\n      lastLineWidth = 5;\n\n      const sh = snapshot();\n      if (sh) {\n        while (undoStack.length > MAX_UNDO_STEP) {\n          undoStack.shift();\n        }\n        undoStack.push(sh);\n        redoStack = [];\n        change();\n      }\n    }\n  };\n\n  const attachHandlers = () => {\n    if (isIOS) {\n      attachHandlersWithTouch();\n    } else {\n      attachHandlersWithPointer();\n    }\n  };\n\n  const attachHandlersWithTouch = () => {\n    canvas.addEventListener('touchstart', handleStart);\n    canvas.addEventListener('touchmove', handleMove);\n    canvas.addEventListener('touchend', handleEnd);\n    canvas.addEventListener('touchcancel', handleEnd);\n  }\n\n  const attachHandlersWithPointer = () => {\n    canvas.addEventListener('pointerdown', handleStart);\n    canvas.addEventListener('pointermove', handleMove);\n    canvas.addEventListener('pointerup', handleEnd);\n    canvas.addEventListener('pointercancel', handleEnd);\n  }\n\n  const detachHandlers = () => {\n    if (isIOS) {\n      detachHandlersWithTouch();\n    } else {\n      detachHandlersWithPointer();\n    }\n  };\n\n  const detachHandlersWithTouch = () => {\n    canvas.removeEventListener('touchstart', handleStart);\n    canvas.removeEventListener('touchmove', handleMove);\n    canvas.removeEventListener('touchend', handleEnd);\n    canvas.removeEventListener('touchcancel', handleEnd);\n  }\n\n  const detachHandlersWithPointer = () => {\n    canvas.removeEventListener('pointerdown', handleStart);\n    canvas.removeEventListener('pointermove', handleMove);\n    canvas.removeEventListener('pointerup', handleEnd);\n    canvas.removeEventListener('pointercancel', handleEnd);\n  }\n\n  attachHandlers();\n\n  undoStack.push(null);\n\n  return {\n\n    undo: () => {\n      if (undoStack.length > 1) {\n        const sp = undoStack.pop()!;\n        redoStack.push(sp);\n        restoreSnapshot(undoStack[undoStack.length - 1]);\n        change();\n      }\n    },\n\n    redo: () => {\n      if (redoStack.length > 0) {\n        const sp = redoStack.pop()!;\n        restoreSnapshot(sp);\n        undoStack.push(sp);\n        change();\n      }\n    },\n\n    clear: () => {\n      clear();\n\n      undoStack.push(null);\n      redoStack = [];\n\n      change();\n    },\n\n    exportToImage: (type = 'dataUrl', options) => {\n      if (!canvas) return null;\n      if (type === 'dataUrl') {\n        const { cropPadding } = options || {};\n        if (cropPadding) {\n          return getCroppedImage(canvas, vCanvas, cropPadding);\n        }\n        return {\n          dataUrl: canvas.toDataURL('image/png', 1),\n          width: canvas.width,\n          height: canvas.height\n        };\n      }\n      return null;\n    },\n\n    destroy: () => {\n      detachHandlers();\n    }\n  }\n};\n"],"mappings":"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"}