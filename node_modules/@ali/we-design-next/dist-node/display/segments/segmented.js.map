{"version":3,"file":"segmented.js","names":["normalizeOptions","options","map","opt","value","label","Segmented","props","defaultValue","onChange","_options","_value","block","useMemo","setValue","useDefaultProp","optionRefs","React","useRef","updateInk","useEventCallback","optionWrapper","current","inkRef","style","left","offsetLeft","width","offsetWidth","useEffect","ref","observer","ResizeObserver","observe","disconnect","option","optionValue","icon","disabled","isCustom","isValidElement","handleClick","mergeClassName"],"sources":["../../../../src/display/segments/segmented.tsx"],"sourcesContent":["import React, { useMemo, useRef, useEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { SegmentsWrapper, SegmentsContent, SegmentsOption, SegmentsInk, SegmentsOptionIcon, SegmentsOptionLabel } from './styled';\nimport { useDefaultProp, useEventCallback, mergeClassName } from '../../common';\n\ntype ISegmentedOption = {\n  label: React.ReactNode;\n  value: string;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n}\n\ntype ISegmentedProps = {\n  /**\n   * 默认选中值\n   */\n  defaultValue?: string;\n  /**\n   * 选项变化时的回调\n   */\n  onChange?: (value: string) => void;\n  /**\n   * 数据化配置选项内容\n   */\n  options?: Array<string> | Array<ISegmentedOption>;\n  /**\n   * 当前选中的值\n   */\n  value?: string;\n  /**\n   * 将宽度调整为父元素宽度的选项\n   */\n  block?: boolean;\n}\n\n\nconst normalizeOptions = (\n  options: Required<ISegmentedProps>['options']\n): Array<ISegmentedOption> => options.map(\n  opt => typeof opt === 'string' ? { value: opt, label: opt } : opt\n);\n\n\nexport const Segmented: React.FC<ISegmentedProps> = (props) => {\n  const {\n    defaultValue,\n    onChange,\n    options: _options = [],\n    value: _value,\n    block,\n  } = props;\n\n  const options = useMemo(() => normalizeOptions(_options), [_options]);\n  const [value, setValue] = useDefaultProp(defaultValue || options[0].value, _value, onChange);\n  const optionRefs = React.useRef<Record<string, HTMLDivElement | null>>({});\n\n  const updateInk = useEventCallback(() => {\n    const optionWrapper = optionRefs.current[value];\n    if (optionWrapper && inkRef.current) {\n      inkRef.current.style.left = optionWrapper.offsetLeft + 'px';\n      inkRef.current.style.width = optionWrapper.offsetWidth + 'px';\n    }\n  });\n\n  useEffect(() => {\n    updateInk();\n  }, [value, options]);\n\n  useEffect(() => {\n    if (ref.current) {\n      const observer = new ResizeObserver(updateInk);\n      observer.observe(ref.current);\n      return () => observer.disconnect();\n    }\n  }, [updateInk]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const inkRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <SegmentsWrapper ref={ref} className=\"wdn-segments-wrapper\" isBlock={block} >\n      <SegmentsContent>\n        <SegmentsInk\n          ref={inkRef}\n        />\n        {\n          options.map((option) => {\n            const { label, value: optionValue, icon, disabled } = option;\n            const isCustom = React.isValidElement(label);\n\n            const handleClick = () => {\n              if (disabled) {\n                return;\n              }\n              setValue(optionValue);\n            }\n            return (\n              <SegmentsOption\n                key={optionValue}\n                className={mergeClassName(disabled ? 'wdn-segments-option-disabled' : '')}\n                onClick={handleClick}\n                ref={(ref) => { optionRefs.current[optionValue] = ref }}\n                isCustom={isCustom}\n                isBlock={block}\n                isActive={value === optionValue}\n              >\n                {\n                  icon && <SegmentsOptionIcon>{icon}</SegmentsOptionIcon>\n                }\n                <SegmentsOptionLabel>{label}</SegmentsOptionLabel>\n              </SegmentsOption>\n            )\n          })\n        }\n      </SegmentsContent>\n    </SegmentsWrapper>\n  );\n};\n"],"mappings":"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"}