"use strict";

var React = _interopRequireWildcard(require("react"));
var _react2 = require("@testing-library/react");
require("@testing-library/jest-dom");
var _index = require("../index");
var _common = require("../../../common");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/React.createElement;
test('Menu: should render items.', async () => {
  (0, _react2.render)( /*#__PURE__*/_createElement(_index.Menu, {
    items: ['Item1', 'Item2', 'Item3']
  }));
  expect(_react2.screen.queryByText('Item1')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item2')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item3')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item4')).toBeNull();
});
test('Menu: should render custom items (normalized).', async () => {
  (0, _react2.render)( /*#__PURE__*/_createElement(_index.Menu, {
    items: ['Item1', 'Item2', 'Item3'],
    renderItem: k => /*#__PURE__*/_createElement(_index.Menu.Item, null, k.key + '-C')
  }));
  expect(_react2.screen.queryByText('Item1-C')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item2-C')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item3-C')).toBeInTheDocument();
});
test('Menu: should expand Menu when mouse hover', async () => {
  (0, _react2.render)( /*#__PURE__*/_createElement(_index.Menu, {
    items: ['Item1', {
      key: 'Item2',
      title: 'Item2',
      subMenu: ['Item21', 'Item22']
    }, 'Item3']
  }));
  expect(_react2.screen.queryByText('Item1')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item2')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item3')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item21')).toBeNull();
  expect(_react2.screen.queryByText('Item22')).toBeNull();
  _react2.fireEvent.mouseEnter(_react2.screen.getByText('Item2'));
  expect(_react2.screen.queryByText('Item21')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item22')).toBeInTheDocument();
  _react2.fireEvent.mouseEnter(_react2.screen.getByText('Item1'));
  expect(_react2.screen.queryByText('Item21')).toBeNull();
  expect(_react2.screen.queryByText('Item22')).toBeNull();
});
test('Menu: should expand Menu for keyborad entering arrow right', async () => {
  const m = (0, _react2.render)( /*#__PURE__*/_createElement(_index.Menu, {
    items: ['Item1', {
      key: 'Item2',
      title: 'Item2',
      subMenu: ['Item21', 'Item22']
    }, 'Item3']
  }));
  expect(_react2.screen.queryByText('Item1')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item2')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item3')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item21')).toBeNull();
  expect(_react2.screen.queryByText('Item22')).toBeNull();
  _react2.fireEvent.mouseEnter(_react2.screen.getByText('Item1'));
  const menu = m.container.querySelector('.wdn-menu');
  _react2.fireEvent.keyDown(menu, {
    keyCode: _common.KEY_CODES.DOWN
  });
  expect(_react2.screen.queryByText('Item21')).toBeNull();
  expect(_react2.screen.queryByText('Item22')).toBeNull();
  _react2.fireEvent.keyDown(menu, {
    keyCode: _common.KEY_CODES.RIGHT
  });
  expect(_react2.screen.queryByText('Item21')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item22')).toBeInTheDocument();
  _react2.fireEvent.keyDown(menu, {
    keyCode: _common.KEY_CODES.LEFT
  });
  expect(_react2.screen.queryByText('Item21')).toBeNull();
  expect(_react2.screen.queryByText('Item22')).toBeNull();
  _react2.fireEvent.keyDown(menu, {
    keyCode: _common.KEY_CODES.ENTER
  });
  await new Promise(resolve => setTimeout(resolve, 1000));
  expect(_react2.screen.queryByText('Item21')).toBeInTheDocument();
  expect(_react2.screen.queryByText('Item22')).toBeInTheDocument();
  _react2.fireEvent.keyDown(menu, {
    keyCode: _common.KEY_CODES.LEFT
  });
  expect(_react2.screen.queryByText('Item21')).toBeNull();
  expect(_react2.screen.queryByText('Item22')).toBeNull();
});
//# sourceMappingURL=Menu.test.js.map