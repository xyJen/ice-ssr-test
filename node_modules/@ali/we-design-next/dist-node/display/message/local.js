"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showLocalMessage = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactDom = _interopRequireDefault(require("react-dom"));
var _lodash = require("lodash");
var _MessageBox = require("./MessageBox");
var _common = require("../../common");
const _createElement = /*#__PURE__*/_react.default.createElement;
const FlagAttributeName = 'data-elemType';
const FlagAttributeValue = '_localeMessageWrapper_';
const rootElemSelector = `[${FlagAttributeName}="${FlagAttributeValue}"]`;
const createRootElement = () => {
  const root = document.createElement('div');
  root.setAttribute(FlagAttributeName, FlagAttributeValue);
  Object.assign(root.style, {
    left: '0px',
    top: '0px',
    position: 'absolute',
    width: '100%',
    background: 'transparent',
    pointerEvents: 'none',
    transition: 'all 0.24s',
    display: 'flex',
    justifyContent: 'center',
    zIndex: String(_common.Z_INDEX.MESSAGE)
  });
  return root;
};
const MsgStyle = {
  pointerEvents: 'fill',
  transform: 'unset'
};
const closeTimerMap = new Map();
const showLocalMessage = opt => {
  const {
    top = '28px',
    container,
    ...restProps
  } = opt;
  if (!document.body.contains(container)) {
    return;
  }
  let root = container.querySelector(rootElemSelector);
  if (!root) {
    root = createRootElement();
  }
  Object.assign(root.style, {
    top
  });
  container.appendChild(root);
  _reactDom.default.unmountComponentAtNode(root);
  root.style.opacity = '0';
  root.style.transform = 'translate(0, -40px)';
  _reactDom.default.render( /*#__PURE__*/_createElement(_MessageBox.MessageBox, restProps), root);
  const timerId = closeTimerMap.get(root);
  if (timerId) {
    window.clearTimeout(timerId);
  }
  setTimeout(() => {
    root && (root.style.opacity = '1');
    root && (root.style.transform = 'translate(0, 0)');
  }, 0);
  const close = (0, _lodash.once)(() => closeLocalMessage(container));
  return close;
};
exports.showLocalMessage = showLocalMessage;
function closeLocalMessage(container) {
  const root = container === null || container === void 0 ? void 0 : container.querySelector(rootElemSelector);
  if (!root) {
    return;
  }
  setTimeout(() => {
    root.style.opacity = '0';
    root.style.transform = 'translate(0, -40px)';
  }, 0);
  const timerId = setTimeout(() => {
    if (document.body.contains(root)) {
      _reactDom.default.unmountComponentAtNode(root);
    }
    closeTimerMap.delete(root);
  }, 300);
  closeTimerMap.set(root, timerId);
}
;
//# sourceMappingURL=local.js.map