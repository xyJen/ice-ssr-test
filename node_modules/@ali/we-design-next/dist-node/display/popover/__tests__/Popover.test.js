"use strict";

var React = _interopRequireWildcard(require("react"));
var _react2 = require("@testing-library/react");
require("@testing-library/jest-dom");
var _index = require("../index");
var _Popover, _div, _div2, _div3, _div4;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const _createElement = /*#__PURE__*/React.createElement;
test('Popover: should render content.', async () => {
  (0, _react2.render)(_Popover || (_Popover = /*#__PURE__*/_createElement(_index.Popover, {
    visible: true,
    content: /*#__PURE__*/_createElement("div", null, "World")
  }, /*#__PURE__*/_createElement("div", null, "Hello"))));
  expect(_react2.screen.queryByText('Hello')).toBeInTheDocument();
  expect(_react2.screen.queryByText('World')).toBeInTheDocument();
});
test('Popover: should trigger visible change for hover trigger.', async () => {
  const fn = jest.fn();
  (0, _react2.render)( /*#__PURE__*/_createElement(_index.Popover, {
    trigger: "hover",
    onVisibleChange: fn,
    content: _div || (_div = /*#__PURE__*/_createElement("div", null, "World"))
  }, _div2 || (_div2 = /*#__PURE__*/_createElement("div", null, "Hello"))));
  expect(_react2.screen.queryByText('Hello')).toBeInTheDocument();
  expect(_react2.screen.queryByText('World')).toBeNull();
  const divHello = _react2.screen.queryByText('Hello');
  _react2.fireEvent.mouseEnter(divHello);
  expect(fn).toHaveBeenLastCalledWith(true);
  expect(_react2.screen.queryByText('World')).toBeInTheDocument();
  _react2.fireEvent.mouseLeave(divHello);
  expect(fn).toHaveBeenLastCalledWith(false);
  expect(_react2.screen.queryByText('World')).toBeNull();
});
test('Popover: should trigger visible change for mouse-enter trigger.', async () => {
  const fn = jest.fn();
  (0, _react2.render)( /*#__PURE__*/_createElement(_index.Popover, {
    trigger: "mouse-enter",
    onVisibleChange: fn,
    content: _div3 || (_div3 = /*#__PURE__*/_createElement("div", null, "World"))
  }, _div4 || (_div4 = /*#__PURE__*/_createElement("div", null, "Hello"))));
  expect(_react2.screen.queryByText('Hello')).toBeInTheDocument();
  expect(_react2.screen.queryByText('World')).toBeNull();
  const divHello = _react2.screen.queryByText('Hello');
  _react2.fireEvent.mouseEnter(divHello);
  await (0, _react2.waitFor)(() => {
    expect(fn).toHaveBeenLastCalledWith(true);
    expect(_react2.screen.queryByText('World')).toBeInTheDocument();
  });
  const divWorld = _react2.screen.queryByText('World');
  _react2.fireEvent.mouseLeave(divHello);
  await new Promise(r => setTimeout(r, 50));
  expect(_react2.screen.queryByText('World')).toBeInTheDocument();
  _react2.fireEvent.mouseEnter(divWorld);
  await new Promise(r => setTimeout(r, 1000));
  _react2.fireEvent.mouseLeave(divWorld);
  await (0, _react2.waitFor)(() => {
    expect(fn).toHaveBeenLastCalledWith(false);
    expect(_react2.screen.queryByText('World')).toBeNull();
  });
});
//# sourceMappingURL=Popover.test.js.map