"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabsBarTab = void 0;
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _icon = require("../../basic/icon");
var _constants = require("./constants");
var _common = require("../../common");
const _createElement = /*#__PURE__*/_react.default.createElement;
const TabsTabWrapper = /*#__PURE__*/_styledComponents.default.div(["position:relative;padding-right:", "px;margin-bottom:", "px;cursor:default;font-size:14px;line-height:20px;font-weight:400;user-select:none;color:", ";&:hover{color:", ";.wdn-tabs-tab-close-wrapper{display:block;cursor:pointer;}}&.wdn-tabs-tab-active{color:", ";text-shadow:0 0 .25px currentcolor;}&.wdn-tabs-tab-disabled{color:rgba(23,26,29,0.24) !important;cursor:not-allowed !important;}"], _constants.TAB_MARGIN, _constants.TAB_BOTTOM_MARGIN, _common.COLORS.LIGHT.LEVEL2_BASE_COLOR, _common.COLORS.LIGHT.LEVEL1_BASE_COLOR, _common.COLORS.LIGHT.LEVEL1_BASE_COLOR);
const TitleWrapper = /*#__PURE__*/_styledComponents.default.span(["display:inline-block;"]);
const TabsTabContent = /*#__PURE__*/_styledComponents.default.div(["display:flex;align-items:center;padding:8px 0;"]);
const CloseWrapper = /*#__PURE__*/_styledComponents.default.div(["display:none;position:absolute;top:50%;right:", "px;transform:translate(100%,-50%);font-size:0;line-height:0;.wdn-icon{width:16px;height:16px;}"], _constants.TAB_MARGIN);
const TabsTabPrefix = /*#__PURE__*/_styledComponents.default.div(["display:flex;align-items:center;margin-right:6px;"]);
const TabsBarTab = props => {
  const {
    activeKey,
    onClose,
    title,
    tabKey,
    prefix,
    onClick,
    onRef,
    disabled
  } = props;
  const isActive = activeKey === tabKey;
  const handleClick = _react.default.useCallback(e => {
    if (disabled) {
      return;
    }
    onClick(tabKey);
  }, [tabKey, disabled]);
  const handleRef = _react.default.useCallback(elem => {
    onRef(tabKey, elem);
  }, [tabKey]);
  return /*#__PURE__*/_createElement(TabsTabWrapper, {
    className: (0, _common.mergeClassName)(isActive ? 'wdn-tabs-tab-active' : '', disabled ? 'wdn-tabs-tab-disabled' : '', 'wdn-tabs-tab-wrapper')
  }, /*#__PURE__*/_createElement(TabsTabContent, {
    onClick: handleClick,
    ref: handleRef,
    "data-tab-key": tabKey
  }, prefix && /*#__PURE__*/_createElement(TabsTabPrefix, null, prefix), /*#__PURE__*/_createElement(TitleWrapper, null, title)), onClose && /*#__PURE__*/_createElement(CloseWrapper, {
    className: "wdn-tabs-tab-close-wrapper",
    onClick: onClose
  }, /*#__PURE__*/_createElement(_icon.IconClose, {
    style: {
      fontSize: 8
    }
  })));
};
exports.TabsBarTab = TabsBarTab;
//# sourceMappingURL=TabsBarTab.js.map