import type React from 'react';
import type { ISelectProps } from '../../../../form/select/Select';
import type { ICommonComponentProps } from '../interface';
export interface IOption {
    key: string;
    /**
   * 单测Id
   */
    testid?: string;
    icon: React.ReactElement;
    title: string;
    tooltip?: string;
    disabled?: boolean;
}
interface IOptionGroup {
    title: string;
    items: Array<IOption>;
}
export interface IIconSelectProps extends Omit<ICommonComponentProps, 'title'> {
    value?: string;
    options: Array<IOption | IOptionGroup | 'divider'>;
    onChange?: (v: string) => void;
    getContainer?: ISelectProps['getContainer'];
    /**
     * 弹层可见性
     */
    overlayVisible?: boolean;
    /**
      * 弹层可见性变化处理函数
      */
    onVisibleChange?: (e: boolean) => void;
    /**
     *
     */
    width?: number;
    /**
     *
     */
    keyboard?: boolean;
}
export interface IBaseSelectProps extends IIconSelectProps {
    size: 'normal' | 'small';
}
export {};
