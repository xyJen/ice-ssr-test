import React from 'react';
export interface IPos {
    left: number;
    top: number;
}
export interface IRegion {
    left: number;
    top: number;
    width?: number;
    height?: number;
}
export interface IFullRegion {
    left: number;
    top: number;
    width: number;
    height: number;
}
export interface IOffset {
    left?: number;
    top?: number;
    right?: number;
    bottom?: number;
}
export declare type IDir = keyof IOffset;
export interface IOption {
    ignoreShake?: boolean;
    useCssBottom?: boolean;
    useCssRight?: boolean;
    useCssTransform?: boolean;
}
export interface IOverflowConfig {
    adjustX?: boolean;
    adjustY?: boolean;
    alwaysByViewport?: boolean;
    resizeWidth?: boolean;
    resizeHeight?: boolean;
}
/**
 * b: bottom; t: top; l: left; r: right; c: center;
 * IPoints是tl、tc、tr、cl、cr、bl、bc、br除自身外的特定组合
 * eg. ['tl', 'tr'], 是将source元素的 `top - left` 与 target 元素的 `top - right` 对齐
 */
export declare type IAlignType = 'tl' | 'cl' | 'bl' | 'tc' | 'cc' | 'bc' | 'tr' | 'cr' | 'br';
export declare type IPoints = [IAlignType, IAlignType];
export declare type IOffsets = [number, number];
export interface IAlign extends IOption {
    points: IPoints;
    offset?: IOffsets;
    targetOffset?: IOffsets;
    overflow: IOverflowConfig;
}
export declare type ICssPropertyName = keyof React.CSSProperties;
export interface IVisibleRect {
    left: number;
    top: number;
    right: number;
    bottom: number;
}
/**
 * alignRect得到的中间产物
 */
export interface IRect extends IFullRegion {
    hasAdjustedX: boolean;
    hasAdjustedY: boolean;
    hasResizedWidth: boolean;
    hasResizedHeight: boolean;
}
