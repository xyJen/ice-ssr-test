import React, { ReactElement } from 'react';
import { IRestProps } from '../../common';
declare type SliderLegalValue = number | [number, number];
export interface SliderBaseProps<T extends SliderLegalValue> {
    /**
     * 是否禁用
     */
    disable?: boolean;
    /**
     * 是否只能拖拽到刻度上
     */
    attachToMarksOnly?: boolean;
    /**
     * 标记刻度（吸附效果），并且必须在 min 和 max 之间
     */
    marks?: number[];
    /**
     * 最大值，默认 100
     */
    max?: number;
    /**
     * 最小值，默认 0
     */
    min?: number;
    /**
     * 步长，取值大于 0，且必须能被 (max - min) 整除
     */
    step?: number;
    /**
     * 双滑块模式	默认为false
     */
    range?: boolean;
    /**
     * 格式化文本
     */
    formatter?: (value: React.ReactText) => string;
    /**
     * 自定义渲染滑块，可指定style和class或设置颜色
     */
    point?: React.ReactElement;
    /**
     * 自定义渲染标记点，可指定style和class或设置颜色
     */
    mark?: React.ReactElement;
    /**
     * 自定义渲染滚动条，可指定style和class或设置颜色
     */
    line?: React.ReactElement;
    /**
     * 自定义tooltip，可指定style和class或设置颜色
     */
    tip?: React.ReactElement;
    /**
     * 受控 value
     */
    value?: T;
    /**
     * 初始值
     */
    defaultValue?: T;
    /**
     * 监听滑动条 value 的改变
     */
    onChange?: (value: T) => void;
}
export declare const Slider: <T extends SliderLegalValue>(props: IRestProps & SliderBaseProps<T>) => ReactElement;
export {};
