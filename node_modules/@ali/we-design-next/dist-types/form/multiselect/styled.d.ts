import React from 'react';
import { IMultiSelectProps } from './MultiSelect';
declare type IInputWrapProps = Pick<IMultiSelectProps, 'size' | 'disabled' | 'error' | 'visible'>;
export declare const MultiSelectInputWrap: import("styled-components").StyledComponent<"div", any, IInputWrapProps, never>;
export declare const OverflowWrap: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const SuffixWrap: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const OverlayWrap: import("styled-components").StyledComponent<"div", any, {}, never>;
declare type IErrorProps = Pick<IMultiSelectProps, 'size'>;
export declare const ErrorTip: import("styled-components").StyledComponent<"div", any, IErrorProps, never>;
export declare const DisableMask: import("styled-components").StyledComponent<"div", any, {}, never>;
declare type ITagProps = Pick<IMultiSelectProps, 'size'>;
export declare const SingleTagWrap: import("styled-components").StyledComponent<"span", any, ITagProps, never>;
export declare const TagContentWrap: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const ItemWrap: import("styled-components").StyledComponent<"div", any, {}, never>;
interface IIconProps {
    disabled?: boolean;
}
export declare const ArrowDown: React.MemoExoticComponent<(props: IIconProps) => JSX.Element>;
export declare const ArrowUp: React.MemoExoticComponent<(props: IIconProps) => JSX.Element>;
export declare const ClearIcon: React.MemoExoticComponent<() => JSX.Element>;
export {};
