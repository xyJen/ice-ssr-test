import React, { ReactNode } from 'react';
import { IRestProps } from '../../common';
import { IListItemNormalized, IListItemCustomized, INestedItems } from '../../basic/list/nested';
export declare type INormalizedMultiSelectOption = IListItemNormalized;
export declare type ICustomizedMultiSelectOption = IListItemCustomized;
export declare type IMultiSelectOption = INormalizedMultiSelectOption | ICustomizedMultiSelectOption;
export declare type IMultiSelectOptionGroup = {
    title: string;
    items: Array<IMultiSelectOption>;
};
export declare type IMultiSelectProps = {
    /**
     * 选中值
     */
    value?: string[];
    /**
     * 默认值
     */
    defaultValue?: string[];
    /**
     * 选中值变化时的回调
     */
    onChange?: (value: string[]) => void;
    /**
     * 下拉列表的选项
     */
    options?: INestedItems<IMultiSelectOption>;
    /**
     * 下拉弹层可见性
     */
    visible?: boolean;
    /**
     * 下拉弹层默认可见性
     */
    defaultVisible?: boolean;
    /**
     * 弹层可见性变化时的回调
     */
    onVisibleChange?: (visible: boolean) => void;
    /**
     * 禁用态
     */
    disabled?: boolean;
    /**
     * 占位提示
     */
    placeholder?: string;
    /**
     * 组件尺寸
     */
    size?: 'small' | 'normal';
    /**
     * 弹层挂载的容器元素
     */
    getContainer?: () => HTMLElement;
    /**
     * 错误提示
     */
    error?: string;
    /**
     * 输入框的值
     */
    inputValue?: string;
    /**
     * 输入框值变化时的回调
     */
    onInputValueChange?: (value: string) => void;
    /**
     * 标签自定义样式函数
     */
    renderTag?: (label: string, value: string, closable?: boolean, onClose?: (e: React.MouseEvent) => void) => React.ReactNode;
    /**
     * 更多标签的自定义样式函数
     */
    renderTagMore?: (omittedValues: string[]) => React.ReactNode;
} & IRestProps;
export declare const LEFT_PADDING = 4;
export declare const MultiSelect: React.MemoExoticComponent<React.ForwardRefExoticComponent<{
    /**
     * 选中值
     */
    value?: string[] | undefined;
    /**
     * 默认值
     */
    defaultValue?: string[] | undefined;
    /**
     * 选中值变化时的回调
     */
    onChange?: ((value: string[]) => void) | undefined;
    /**
     * 下拉列表的选项
     */
    options?: INestedItems<IMultiSelectOption> | undefined;
    /**
     * 下拉弹层可见性
     */
    visible?: boolean | undefined;
    /**
     * 下拉弹层默认可见性
     */
    defaultVisible?: boolean | undefined;
    /**
     * 弹层可见性变化时的回调
     */
    onVisibleChange?: ((visible: boolean) => void) | undefined;
    /**
     * 禁用态
     */
    disabled?: boolean | undefined;
    /**
     * 占位提示
     */
    placeholder?: string | undefined;
    /**
     * 组件尺寸
     */
    size?: "small" | "normal" | undefined;
    /**
     * 弹层挂载的容器元素
     */
    getContainer?: (() => HTMLElement) | undefined;
    /**
     * 错误提示
     */
    error?: string | undefined;
    /**
     * 输入框的值
     */
    inputValue?: string | undefined;
    /**
     * 输入框值变化时的回调
     */
    onInputValueChange?: ((value: string) => void) | undefined;
    /**
     * 标签自定义样式函数
     */
    renderTag?: ((label: string, value: string, closable?: boolean, onClose?: ((e: React.MouseEvent) => void) | undefined) => React.ReactNode) | undefined;
    /**
     * 更多标签的自定义样式函数
     */
    renderTagMore?: ((omittedValues: string[]) => React.ReactNode) | undefined;
} & IRestProps & React.RefAttributes<HTMLInputElement>>>;
