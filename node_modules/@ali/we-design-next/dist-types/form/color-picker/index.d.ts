/// <reference types="react" />
export { ColorSquare } from './ColorSquare';
export declare const ColorPicker: import("react").NamedExoticComponent<{
    color?: string | null | undefined;
    defaultColor?: string | undefined;
    onColorChange?: ((color: string | null, options: {
        intermediate: boolean;
        fromSketch: boolean;
    }) => void) | undefined;
    presets?: {
        key: string;
        title: string;
        colors: (string[] | import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>)[];
    }[] | undefined;
    currentPreset?: string | undefined;
    onCurrentPresetChange?: ((v: string) => void) | undefined;
    autoColor?: string | undefined;
    recentColors?: string[] | undefined;
    advance?: boolean | undefined;
    hoverMode?: "text" | "square" | undefined;
} & import("../../common").IRestProps & import("react").DOMAttributes<HTMLDivElement>> & {
    readonly type: (props: import("./ColorPicker").IColorPickerProps) => JSX.Element;
} & {
    PRESETS: {
        DEFAULT: {
            key: string;
            title: string;
            colors: string[][];
        };
        ART: {
            key: string;
            title: string;
            colors: string[][];
        };
    };
    PresetGradient: import("react").MemoExoticComponent<(props: {
        value: string;
        onSelect: (gradient: string) => void;
    }) => JSX.Element>;
    Divider: import("styled-components").StyledComponent<"div", any, {}, never>;
};
