/// <reference types="react" />
export type { ISelectProps } from './Select';
export declare const Select: import("react").NamedExoticComponent<{
    value?: string | undefined;
    defaultValue?: string | undefined;
    onChange?: ((value: string) => void) | undefined;
    options?: import("../../basic/list/nested").INestedItems<import("./Select").ISelectOption> | undefined;
    renderValue?: import("../../common").IRenderReactNode<{
        key: string;
    }>;
    renderOption?: import("../../common").IRenderReactNode<{
        key: string;
    }>;
    mode?: "input" | "normal" | undefined;
    visible?: boolean | undefined;
    defaultVisible?: boolean | undefined;
    onVisibleChange?: ((visible: boolean) => void) | undefined;
    disabled?: boolean | undefined;
    placeholder?: string | undefined;
    size?: "small" | "normal" | undefined;
    getContainer?: (() => HTMLElement) | undefined;
    error?: string | undefined;
    bordered?: boolean | undefined;
    autoWidth?: boolean | undefined;
    keyboard?: boolean | undefined;
} & import("../../common").IRestProps & import("react").RefAttributes<HTMLInputElement>> & {
    readonly type: import("react").ForwardRefExoticComponent<{
        value?: string | undefined;
        defaultValue?: string | undefined;
        onChange?: ((value: string) => void) | undefined;
        options?: import("../../basic/list/nested").INestedItems<import("./Select").ISelectOption> | undefined;
        renderValue?: import("../../common").IRenderReactNode<{
            key: string;
        }>;
        renderOption?: import("../../common").IRenderReactNode<{
            key: string;
        }>;
        mode?: "input" | "normal" | undefined;
        visible?: boolean | undefined;
        defaultVisible?: boolean | undefined;
        onVisibleChange?: ((visible: boolean) => void) | undefined;
        disabled?: boolean | undefined;
        placeholder?: string | undefined;
        size?: "small" | "normal" | undefined;
        getContainer?: (() => HTMLElement) | undefined;
        error?: string | undefined;
        bordered?: boolean | undefined;
        autoWidth?: boolean | undefined;
        keyboard?: boolean | undefined;
    } & import("../../common").IRestProps & import("react").RefAttributes<HTMLInputElement>>;
} & {
    Option: import("react").MemoExoticComponent<import("react").ForwardRefExoticComponent<{
        children?: import("react").ReactNode;
        active?: boolean | undefined;
        prefix?: import("react").ReactNode;
        suffix?: import("react").ReactNode;
        disabled?: boolean | undefined;
    } & import("../../common").IRestProps & Omit<import("react").HTMLAttributes<HTMLDivElement>, "children" | keyof import("../../common").IRestProps | "prefix" | "disabled" | "active" | "suffix"> & import("react").RefAttributes<HTMLDivElement>>>;
};
