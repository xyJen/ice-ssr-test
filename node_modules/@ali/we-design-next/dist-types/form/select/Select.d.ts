import React from 'react';
import { IRestProps, IRenderReactNode } from '../../common';
import { IListItemNormalized, IListItemCustomized, INestedItems } from '../../basic/list/nested';
export declare type ISelectOptionNormalized = IListItemNormalized;
export declare type ISelectOptionCustomized = IListItemCustomized;
export declare type ISelectOption = ISelectOptionNormalized | ISelectOptionCustomized;
export declare type ISelectProps = {
    /**
     * 选中值
     */
    value?: string;
    /**
     * 默认值
     */
    defaultValue?: string;
    /**
     * 选中值变化时的回调
     */
    onChange?: (value: string) => void;
    /**
     * 下拉列表的选项
     */
    options?: INestedItems<ISelectOption>;
    /**
     * 自定义渲染
     */
    renderValue?: IRenderReactNode<{
        key: string;
    }>;
    /**
     * 自定义渲染
     */
    renderOption?: IRenderReactNode<{
        key: string;
    }>;
    /**
     * 模式，默认为不可输入
     */
    mode?: 'normal' | 'input';
    /**
     * 下拉弹层可见性
     */
    visible?: boolean;
    /**
     * 下拉弹层默认可见性
     */
    defaultVisible?: boolean;
    /**
     * 弹层可见性变化时的回调
     */
    onVisibleChange?: (visible: boolean) => void;
    /**
     * 禁用态
     */
    disabled?: boolean;
    /**
     * 占位提示
     */
    placeholder?: string;
    /**
     * 组件尺寸，默认为small 28px
     */
    size?: 'small' | 'normal';
    /**
     * 弹层挂载的容器元素
     */
    getContainer?: () => HTMLElement;
    /**
     * 错误提示
     */
    error?: string;
    /**
     * 是否有边框，默认为 true
     */
    bordered?: boolean;
    /**
     * 如果为 true，那么下拉面板中的内容将自适应宽度；否则将至少与输入框同宽。
     */
    autoWidth?: boolean;
    /**
     * 是否响应键盘事件
     */
    keyboard?: boolean;
} & IRestProps;
export declare const Select: React.MemoExoticComponent<React.ForwardRefExoticComponent<{
    /**
     * 选中值
     */
    value?: string | undefined;
    /**
     * 默认值
     */
    defaultValue?: string | undefined;
    /**
     * 选中值变化时的回调
     */
    onChange?: ((value: string) => void) | undefined;
    /**
     * 下拉列表的选项
     */
    options?: INestedItems<ISelectOption> | undefined;
    /**
     * 自定义渲染
     */
    renderValue?: IRenderReactNode<{
        key: string;
    }>;
    /**
     * 自定义渲染
     */
    renderOption?: IRenderReactNode<{
        key: string;
    }>;
    /**
     * 模式，默认为不可输入
     */
    mode?: "input" | "normal" | undefined;
    /**
     * 下拉弹层可见性
     */
    visible?: boolean | undefined;
    /**
     * 下拉弹层默认可见性
     */
    defaultVisible?: boolean | undefined;
    /**
     * 弹层可见性变化时的回调
     */
    onVisibleChange?: ((visible: boolean) => void) | undefined;
    /**
     * 禁用态
     */
    disabled?: boolean | undefined;
    /**
     * 占位提示
     */
    placeholder?: string | undefined;
    /**
     * 组件尺寸，默认为small 28px
     */
    size?: "small" | "normal" | undefined;
    /**
     * 弹层挂载的容器元素
     */
    getContainer?: (() => HTMLElement) | undefined;
    /**
     * 错误提示
     */
    error?: string | undefined;
    /**
     * 是否有边框，默认为 true
     */
    bordered?: boolean | undefined;
    /**
     * 如果为 true，那么下拉面板中的内容将自适应宽度；否则将至少与输入框同宽。
     */
    autoWidth?: boolean | undefined;
    /**
     * 是否响应键盘事件
     */
    keyboard?: boolean | undefined;
} & IRestProps & React.RefAttributes<HTMLInputElement>>>;
export declare const Option: React.MemoExoticComponent<React.ForwardRefExoticComponent<{
    children?: React.ReactNode;
    active?: boolean | undefined;
    prefix?: React.ReactNode;
    suffix?: React.ReactNode;
    disabled?: boolean | undefined;
} & IRestProps & Omit<React.HTMLAttributes<HTMLDivElement>, "children" | keyof IRestProps | "prefix" | "disabled" | "active" | "suffix"> & React.RefAttributes<HTMLDivElement>>>;
