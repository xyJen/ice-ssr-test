/// <reference types="react" />
export declare const BorderPicker: import("react").NamedExoticComponent<{
    defaultBorder?: {
        layout: "none" | "left" | "right" | "top" | "bottom" | "all" | "vertical" | "outer" | "inner" | "horizon" | "unselected";
        color: string;
        style: string;
    } | undefined;
    border?: {
        layout: "none" | "left" | "right" | "top" | "bottom" | "all" | "vertical" | "outer" | "inner" | "horizon" | "unselected";
        color: string;
        style: string;
    } | undefined;
    onBorderChange?: ((value: {
        layout: "none" | "left" | "right" | "top" | "bottom" | "all" | "vertical" | "outer" | "inner" | "horizon" | "unselected";
        color: string;
        style: string;
    }) => void) | undefined;
    preset?: import("./BorderPicker").IBorderStylePreset | undefined;
}> & {
    readonly type: (props: {
        defaultBorder?: {
            layout: "none" | "left" | "right" | "top" | "bottom" | "all" | "vertical" | "outer" | "inner" | "horizon" | "unselected";
            color: string;
            style: string;
        } | undefined;
        border?: {
            layout: "none" | "left" | "right" | "top" | "bottom" | "all" | "vertical" | "outer" | "inner" | "horizon" | "unselected";
            color: string;
            style: string;
        } | undefined;
        onBorderChange?: ((value: {
            layout: "none" | "left" | "right" | "top" | "bottom" | "all" | "vertical" | "outer" | "inner" | "horizon" | "unselected";
            color: string;
            style: string;
        }) => void) | undefined;
        preset?: import("./BorderPicker").IBorderStylePreset | undefined;
    }) => JSX.Element;
} & {
    PRESETS: {
        DEFAULT: import("./BorderPicker").IBorderStylePreset;
    };
};
