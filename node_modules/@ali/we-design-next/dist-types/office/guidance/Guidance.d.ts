import { ReactNode } from 'react';
declare type IGuideItemFixed = {
    key: string;
    title: string;
    description?: ReactNode;
    image?: string;
};
declare type IGuideModalFixedProps = {
    guides?: Array<IGuideItemFixed>;
    onClose?: () => void;
    onCurrentChange?: (key: string) => void;
    onAction?: (key: string) => void;
};
declare type Dir = 'top' | 'bottom' | 'left' | 'right';
declare type AnchorTarget = HTMLElement | [HTMLElement, [number, number]];
declare type IGuideItemFollowing = {
    key: string;
    title: string;
    description?: ReactNode;
    image?: string;
    anchor: () => AnchorTarget | Promise<AnchorTarget>;
    placement?: Dir | [Dir, number] | [Dir, [number, number]];
};
declare type IGuidanceModalFollowingProps = {
    guides?: Array<IGuideItemFollowing>;
    onClose?: () => void;
    onCurrentChange?: (current: number) => void;
};
declare type IGuidanceOptions = ({
    type: 'fixed';
} & IGuideModalFixedProps) | ({
    type: 'following';
} & IGuidanceModalFollowingProps);
export declare const Guidance: {
    open: (opt: IGuidanceOptions) => {
        container: HTMLDivElement;
    };
    close: () => void;
};
export {};
