import React from 'react';
import { IRenderReactNode } from '../../common';
import { IListItem, INestedItems } from './nested';
export declare const List: React.MemoExoticComponent<React.ForwardRefExoticComponent<{
    /**
     * 列表项
     */
    items?: INestedItems<IListItem> | undefined;
    /**
     * 当前激活列表项（悬浮或键盘导航至的项）
     */
    active?: string | null | undefined;
    /**
     * 当前激活菜单项
     */
    onActiveChange?: ((key: string | null, options: {
        from: 'mouse' | 'keyboard';
    }) => void) | undefined;
    /**
     * 选中菜单项
     */
    onSelect?: ((key: string) => void) | undefined;
    /**
     * 响应键盘事件
     */
    keyboard?: boolean | undefined;
    /**
     * 自定义菜单项渲染
     */
    renderItem?: IRenderReactNode<{
        key: string;
    }>;
} & import("../../common").IRestProps & Omit<React.HTMLAttributes<HTMLDivElement>, "onSelect" | keyof import("../../common").IRestProps | "active" | "items" | "keyboard" | "onActiveChange" | "renderItem"> & React.RefAttributes<HTMLDivElement>>>;
export declare const ListItem: React.MemoExoticComponent<React.ForwardRefExoticComponent<{
    /**
     * 列表项的内容
     */
    children?: React.ReactNode;
    /**
     * 是否激活
     */
    active?: boolean | undefined;
    /**
     * 前缀
     */
    prefix?: React.ReactNode;
    /**
     * 后缀
     */
    suffix?: React.ReactNode;
    /**
     * 禁用
     */
    disabled?: boolean | undefined;
} & import("../../common").IRestProps & Omit<React.HTMLAttributes<HTMLDivElement>, "children" | keyof import("../../common").IRestProps | "prefix" | "disabled" | "active" | "suffix"> & React.RefAttributes<HTMLDivElement>>>;
