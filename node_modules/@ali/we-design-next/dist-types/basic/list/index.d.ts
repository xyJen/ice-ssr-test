/// <reference types="react" />
export declare const List: import("react").NamedExoticComponent<{
    items?: import("./nested").INestedItems<import("./nested").IListItem> | undefined;
    active?: string | null | undefined;
    onActiveChange?: ((key: string | null, options: {
        from: "mouse" | "keyboard";
    }) => void) | undefined;
    onSelect?: ((key: string) => void) | undefined;
    keyboard?: boolean | undefined;
    renderItem?: import("../../common").IRenderReactNode<{
        key: string;
    }>;
} & import("../../common").IRestProps & Omit<import("react").HTMLAttributes<HTMLDivElement>, "onSelect" | keyof import("../../common").IRestProps | "active" | "items" | "keyboard" | "onActiveChange" | "renderItem"> & import("react").RefAttributes<HTMLDivElement>> & {
    readonly type: import("react").ForwardRefExoticComponent<{
        items?: import("./nested").INestedItems<import("./nested").IListItem> | undefined;
        active?: string | null | undefined;
        onActiveChange?: ((key: string | null, options: {
            from: "mouse" | "keyboard";
        }) => void) | undefined;
        onSelect?: ((key: string) => void) | undefined;
        keyboard?: boolean | undefined;
        renderItem?: import("../../common").IRenderReactNode<{
            key: string;
        }>;
    } & import("../../common").IRestProps & Omit<import("react").HTMLAttributes<HTMLDivElement>, "onSelect" | keyof import("../../common").IRestProps | "active" | "items" | "keyboard" | "onActiveChange" | "renderItem"> & import("react").RefAttributes<HTMLDivElement>>;
} & {
    Item: import("react").MemoExoticComponent<import("react").ForwardRefExoticComponent<{
        children?: import("react").ReactNode;
        active?: boolean | undefined;
        prefix?: import("react").ReactNode;
        suffix?: import("react").ReactNode;
        disabled?: boolean | undefined;
    } & import("../../common").IRestProps & Omit<import("react").HTMLAttributes<HTMLDivElement>, "children" | keyof import("../../common").IRestProps | "prefix" | "disabled" | "active" | "suffix"> & import("react").RefAttributes<HTMLDivElement>>>;
};
