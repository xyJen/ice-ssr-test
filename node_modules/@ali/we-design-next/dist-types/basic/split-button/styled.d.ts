/// <reference types="react" />
import { IButtonProps } from '../button/Button';
export declare const Button: import("styled-components").StyledComponent<import("react").MemoExoticComponent<import("react").ForwardRefExoticComponent<{
    type?: "text" | "normal" | "primary" | "danger" | "davinci" | "sunk" | "ghost" | undefined;
    size?: "small" | "normal" | undefined;
    icon?: import("react").ReactNode;
    disabled?: boolean | undefined;
} & import("../../common").IRestProps & Omit<import("react").ButtonHTMLAttributes<HTMLButtonElement>, "type" | keyof import("../../common").IRestProps | "disabled" | "size" | "icon"> & import("react").RefAttributes<HTMLButtonElement>>>, any, {}, never>;
export declare const Main: import("styled-components").StyledComponent<"div", any, Required<{
    btnType: IButtonProps['type'];
    size: IButtonProps['size'];
}>, never>;
export declare const Secondary: import("styled-components").StyledComponent<"div", any, Required<{
    btnType: IButtonProps['type'];
    size: IButtonProps['size'];
}>, never>;
