import React, { ReactNode } from 'react';
import { MergePropsType } from '../../common';
export declare type IPlacement = 'topLeft' | 'top' | 'topRight' | 'leftTop' | 'rightTop' | 'left' | 'right' | 'leftBottom' | 'rightBottom' | 'bottom' | 'bottomLeft' | 'bottomRight';
export declare type IPopoverProps = MergePropsType<{
    /**
     * 弹层内容
     */
    content?: ReactNode;
    /**
     * 弹层相对触发元素的对齐方向
     */
    placement?: IPlacement;
    /**
     * 对齐方向上的位移（主轴和副轴，取决于对齐方向）
     */
    placementOffset?: [number, number];
    /**
     * 弹层是否打开
     */
    visible?: boolean;
    /**
     * 弹层打开状态变化
     */
    onVisibleChange?: (visible: boolean) => void;
    /**
     * 触发弹层打开的方式
     */
    trigger?: 'hover' | 'click' | 'mouse-enter';
    /**
     * 启用动画
     */
    animation?: boolean;
    /**
     * 保持弹层内容和触发元素对齐（窗口尺寸发生变化时）
     */
    keepAlign?: boolean;
    /**
     * 弹层关闭时，保持其中的内容不被从 DOM 上卸载
     */
    keepMounted?: boolean;
    /**
     * 挂载容器元素
     */
    getContainer?: () => HTMLElement | undefined;
    /**
     * 当屏幕可视区域放不下内容时是否自动调整内容的宽高
     */
    resize?: boolean;
}, React.HTMLAttributes<HTMLDivElement>>;
export declare const Popover: React.MemoExoticComponent<(props: IPopoverProps) => JSX.Element | null>;
