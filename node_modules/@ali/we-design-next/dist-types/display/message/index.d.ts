/// <reference types="react" />
export declare const Message: Omit<{
    open(itemProps: import("./interface").IMessageItemProps): (...args: any[]) => void;
    close(key: string): void;
    closeAll(): void;
    info(content: string, options?: import("./interface").IMessageOptions | undefined): (...args: any[]) => void;
    success(content: string, options?: import("./interface").IMessageOptions | undefined): (...args: any[]) => void;
    warning(content: string, options?: import("./interface").IMessageOptions | undefined): (...args: any[]) => void;
    error(content: string, options?: import("./interface").IMessageOptions | undefined): (...args: any[]) => void;
    loading(content: string, options?: import("./interface").IMessageOptions | undefined): (...args: any[]) => void;
    message(content: string | import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>, options?: import("./interface").IMessageOptions | undefined): (...args: any[]) => void;
}, "open">;
