/// <reference types="react" />
export declare const Menu: import("react").NamedExoticComponent<{
    items?: import("../../basic/list/nested").INestedItems<import("./Menu").IMenuItem> | undefined;
    path?: (string | undefined)[] | undefined;
    onPathChange?: ((path: (string | undefined)[]) => void) | undefined;
    onSelect?: ((path: string[]) => void) | undefined;
    keyboard?: boolean | undefined;
    renderItem?: import("../../common").IRenderReactNode<{
        key: string;
    }>;
} & import("../../common").IRestProps & Omit<import("react").DOMAttributes<HTMLDivElement>, "onSelect"> & import("react").RefAttributes<HTMLDivElement>> & {
    readonly type: import("react").ForwardRefExoticComponent<{
        items?: import("../../basic/list/nested").INestedItems<import("./Menu").IMenuItem> | undefined;
        path?: (string | undefined)[] | undefined;
        onPathChange?: ((path: (string | undefined)[]) => void) | undefined;
        onSelect?: ((path: string[]) => void) | undefined;
        keyboard?: boolean | undefined;
        renderItem?: import("../../common").IRenderReactNode<{
            key: string;
        }>;
    } & import("../../common").IRestProps & Omit<import("react").DOMAttributes<HTMLDivElement>, "onSelect"> & import("react").RefAttributes<HTMLDivElement>>;
} & {
    Item: import("react").MemoExoticComponent<import("react").ForwardRefExoticComponent<{
        children?: import("react").ReactNode;
        active?: boolean | undefined;
        prefix?: import("react").ReactNode;
        suffix?: import("react").ReactNode;
        disabled?: boolean | undefined;
    } & import("../../common").IRestProps & Omit<import("react").HTMLAttributes<HTMLDivElement>, "children" | keyof import("../../common").IRestProps | "prefix" | "disabled" | "active" | "suffix"> & import("react").RefAttributes<HTMLDivElement>>>;
};
