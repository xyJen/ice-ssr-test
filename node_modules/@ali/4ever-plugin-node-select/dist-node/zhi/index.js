"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zhiFactory = void 0;

var _createRenderContent = _interopRequireDefault(require("../common/createRenderContent"));

var _createRenderNode = _interopRequireDefault(require("../common/createRenderNode"));

var _SelectManager = require("../common/utils/SelectManager");

var _createOnAction = _interopRequireDefault(require("../common/handlers/createOnAction"));

var _createGetNodeSelectToolbarItems = require("./createGetNodeSelectToolbarItems");

var _createOnCangjieFocus = require("../common/handlers/createOnCangjieFocus");

var _createOnCangjieSelect = require("../common/handlers/createOnCangjieSelect");

var _createQueries = require("../common/createQueries");

var _actions = require("../common/actions");

const zhiFactory = configs => {
  const {
    nodeSelect: nodeSelectConfigs = {}
  } = configs;
  const manager = new _SelectManager.SelectManager({
    onSelectingChange: nodeSelectConfigs?.onSelectingChange,
    onNodeSelectedChange: nodeSelectConfigs?.onNodeSelectedChange
  });
  configs.nodeSelect?.onManagerCallback?.(manager);
  return {
    key: 'nodeSelect',
    queries: (0, _createQueries.createQueries)(manager),
    actions: {
      copySelectedNodes: _actions.actions.copySelectedNodes,
      cancelSelectNode: _actions.actions.cancelSelectNode
    },
    renderContent: (0, _createRenderContent.default)(nodeSelectConfigs, manager),
    renderNode: (0, _createRenderNode.default)(nodeSelectConfigs, manager),
    onAction: (0, _createOnAction.default)(nodeSelectConfigs, manager),
    getNodeSelectToolbarItems: (0, _createGetNodeSelectToolbarItems.createGetNodeSelectToolbarItems)(configs.nodeSelect.locale || {}),
    onCangjieFocus: (0, _createOnCangjieFocus.createOnCangjieFocus)(manager),
    onCangjieSelect: (0, _createOnCangjieSelect.createOnCangjieSelect)(manager)
  };
};

exports.zhiFactory = zhiFactory;
//# sourceMappingURL=index.js.map