{"version":3,"sources":["../../../src/zhi/index.ts"],"names":["zhiFactory","configs","nodeSelect","nodeSelectConfigs","manager","SelectManager","onSelectingChange","onNodeSelectedChange","onManagerCallback","key","queries","actions","copySelectedNodes","cancelSelectNode","renderContent","renderNode","onAction","getNodeSelectToolbarItems","locale","onCangjieFocus","onCangjieSelect"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGO,MAAMA,UAAsB,GAAIC,OAAD,IAAa;AACjD,QAAM;AAAEC,IAAAA,UAAU,EAAEC,iBAAiB,GAAG;AAAlC,MAAyCF,OAA/C;AACA,QAAMG,OAAO,GAAG,IAAIC,4BAAJ,CAAkB;AAChCC,IAAAA,iBAAiB,EAAEH,iBAAiB,EAAEG,iBADN;AAEhCC,IAAAA,oBAAoB,EAAEJ,iBAAiB,EAAEI;AAFT,GAAlB,CAAhB;AAIAN,EAAAA,OAAO,CAACC,UAAR,EAAoBM,iBAApB,GAAwCJ,OAAxC;AACA,SAAO;AACLK,IAAAA,GAAG,EAAE,YADA;AAELC,IAAAA,OAAO,EAAE,kCAAcN,OAAd,CAFJ;AAGLO,IAAAA,OAAO,EAAE;AACPC,MAAAA,iBAAiB,EAAED,iBAAQC,iBADpB;AAEPC,MAAAA,gBAAgB,EAAEF,iBAAQE;AAFnB,KAHJ;AAOLC,IAAAA,aAAa,EAAE,kCAAoBX,iBAApB,EAAuCC,OAAvC,CAPV;AAQLW,IAAAA,UAAU,EAAE,+BAAiBZ,iBAAjB,EAAoCC,OAApC,CARP;AASLY,IAAAA,QAAQ,EAAE,6BAAeb,iBAAf,EAAkCC,OAAlC,CATL;AAULa,IAAAA,yBAAyB,EAAE,sEAAgChB,OAAO,CAACC,UAAR,CAAmBgB,MAAnB,IAA6B,EAA7D,CAVtB;AAWLC,IAAAA,cAAc,EAAE,gDAAqBf,OAArB,CAXX;AAYLgB,IAAAA,eAAe,EAAE,kDAAsBhB,OAAtB;AAZZ,GAAP;AAcD,CArBM","sourcesContent":["import type { ZhiFactory } from '@ali/4ever-cangjie';\nimport createRenderContent from '../common/createRenderContent';\nimport createRenderNode from '../common/createRenderNode';\nimport { SelectManager } from '../common/utils/SelectManager';\nimport createOnAction from '../common/handlers/createOnAction';\nimport { createGetNodeSelectToolbarItems } from './createGetNodeSelectToolbarItems';\nimport { createOnCangjieFocus } from '../common/handlers/createOnCangjieFocus';\nimport { createOnCangjieSelect } from '../common/handlers/createOnCangjieSelect';\nimport { createQueries } from '../common/createQueries';\nimport { actions } from '../common/actions';\n\n\nexport const zhiFactory: ZhiFactory = (configs) => {\n  const { nodeSelect: nodeSelectConfigs = {} } = configs;\n  const manager = new SelectManager({\n    onSelectingChange: nodeSelectConfigs?.onSelectingChange,\n    onNodeSelectedChange: nodeSelectConfigs?.onNodeSelectedChange,\n  });\n  configs.nodeSelect?.onManagerCallback?.(manager);\n  return {\n    key: 'nodeSelect',\n    queries: createQueries(manager),\n    actions: {\n      copySelectedNodes: actions.copySelectedNodes,\n      cancelSelectNode: actions.cancelSelectNode,\n    },\n    renderContent: createRenderContent(nodeSelectConfigs, manager),\n    renderNode: createRenderNode(nodeSelectConfigs, manager),\n    onAction: createOnAction(nodeSelectConfigs, manager),\n    getNodeSelectToolbarItems: createGetNodeSelectToolbarItems(configs.nodeSelect.locale || {}),\n    onCangjieFocus: createOnCangjieFocus(manager),\n    onCangjieSelect: createOnCangjieSelect(manager),\n  };\n};\n"],"file":"index.js"}