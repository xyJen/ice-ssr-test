{"version":3,"sources":["../../../src/bi/index.ts"],"names":["biFactory","configs","nodeSelect","nodeSelectConfigs","manager","SelectManager","onSelectingChange","onNodeSelectedChange","onManagerCallback","key","actions","queries","renderContent","renderNode","onAction","getNodeSelectToolbarItems","locale","onCangjieFocus","onCangjieSelect"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAMA,SAAoB,GAAIC,OAAD,IAAa;AAC/C,QAAM;AAAEC,IAAAA,UAAU,EAAEC,iBAAiB,GAAG;AAAlC,MAAyCF,OAA/C;AACA,QAAMG,OAAO,GAAG,IAAIC,4BAAJ,CAAkB;AAChCC,IAAAA,iBAAiB,EAAEH,iBAAiB,EAAEG,iBADN;AAEhCC,IAAAA,oBAAoB,EAAEJ,iBAAiB,EAAEI;AAFT,GAAlB,CAAhB;AAIAN,EAAAA,OAAO,CAACC,UAAR,EAAoBM,iBAApB,GAAwCJ,OAAxC;AACA,SAAO;AACLK,IAAAA,GAAG,EAAE,YADA;AAELC,IAAAA,OAAO,EAAPA,gBAFK;AAGLC,IAAAA,OAAO,EAAE,kCAAcP,OAAd,CAHJ;AAILQ,IAAAA,aAAa,EAAE,kCAAoBT,iBAApB,EAAuCC,OAAvC,CAJV;AAKLS,IAAAA,UAAU,EAAE,+BAAiBV,iBAAjB,EAAoCC,OAApC,CALP;AAMLU,IAAAA,QAAQ,EAAE,6BAAeX,iBAAf,EAAkCC,OAAlC,CANL;AAOLW,IAAAA,yBAAyB,EAAE,sEAAgCZ,iBAAiB,CAACa,MAAlB,IAA4B,EAA5D,CAPtB;AAQLC,IAAAA,cAAc,EAAE,gDAAqBb,OAArB,CARX;AASLc,IAAAA,eAAe,EAAE,kDAAsBd,OAAtB;AATZ,GAAP;AAWD,CAlBM","sourcesContent":["import type { BiFactory } from '@ali/4ever-cangjie';\nimport createRenderContent from '../common/createRenderContent';\nimport createRenderNode from '../common/createRenderNode';\nimport { SelectManager } from '../common/utils/SelectManager';\nimport createOnAction from '../common/handlers/createOnAction';\nimport { createOnCangjieFocus } from '../common/handlers/createOnCangjieFocus';\nimport { createOnCangjieSelect } from '../common/handlers/createOnCangjieSelect';\nimport { createGetNodeSelectToolbarItems } from './createGetNodeSelectToolbarItems';\nimport { createQueries } from '../common/createQueries';\nimport { actions } from '../common/actions';\n\nexport const biFactory: BiFactory = (configs) => {\n  const { nodeSelect: nodeSelectConfigs = {} } = configs;\n  const manager = new SelectManager({\n    onSelectingChange: nodeSelectConfigs?.onSelectingChange,\n    onNodeSelectedChange: nodeSelectConfigs?.onNodeSelectedChange,\n  });\n  configs.nodeSelect?.onManagerCallback?.(manager);\n  return {\n    key: 'nodeSelect',\n    actions,\n    queries: createQueries(manager),\n    renderContent: createRenderContent(nodeSelectConfigs, manager),\n    renderNode: createRenderNode(nodeSelectConfigs, manager),\n    onAction: createOnAction(nodeSelectConfigs, manager),\n    getNodeSelectToolbarItems: createGetNodeSelectToolbarItems(nodeSelectConfigs.locale || {}),\n    onCangjieFocus: createOnCangjieFocus(manager),\n    onCangjieSelect: createOnCangjieSelect(manager),\n  };\n};\n"],"file":"index.js"}