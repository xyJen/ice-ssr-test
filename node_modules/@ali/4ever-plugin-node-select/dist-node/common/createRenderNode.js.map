{"version":3,"sources":["../../../src/common/createRenderNode.tsx"],"names":["createRenderNode","config","manager","isNodeSelectable","props","controller","next","node","isSelectableNode","Block","isBlock"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;uBAJ4B,a;;AAMb,SAASA,gBAAT,CAA0BC,MAA1B,EAA4DC,OAA5D,EAAoF;AACjG,QAAM;AAAEC,IAAAA;AAAF,MAAuBF,MAA7B;AACA,SAAO,CAACG,KAAD,EAA+BC,UAA/B,EAAuDC,IAAvD,KAAgE;AACrE,UAAM;AAAEC,MAAAA;AAAF,QAAWH,KAAjB;AACA,UAAMI,gBAAgB,GAAGL,gBAAgB,GAAGA,gBAAgB,CAACI,IAAD,CAAnB,GAA4B,sDAAwBA,IAAxB,EAA8BF,UAA9B,CAArE;;AACA,QAAIG,gBAAgB,IAAIC,mBAAMC,OAAN,CAAcH,IAAd,CAAxB,EAA6C;AAC3C,0BACE,eAAC,8BAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,OAAO,EAAEL,OAFX;AAGE,QAAA,UAAU,EAAEG;AAHd,SAKGC,IAAI,EALP,CADF;AASD;;AACD,WAAOA,IAAI,EAAX;AACD,GAfD;AAgBD","sourcesContent":["import * as React from 'react';\nimport { Controller, Node, RenderNodeProps, Block } from '@ali/4ever-cangjie';\nimport type { SelectManager } from './utils/SelectManager';\nimport { BlockSelectBox } from './components/BlockSelectBox';\nimport { INodeSelectPluginConfigs } from './types';\nimport { defaultIsNodeSelectable } from './configs/defaultIsNodeSelectable';\n\nexport default function createRenderNode(config: INodeSelectPluginConfigs, manager: SelectManager) {\n  const { isNodeSelectable } = config;\n  return (props: RenderNodeProps<Node>, controller: Controller, next) => {\n    const { node } = props;\n    const isSelectableNode = isNodeSelectable ? isNodeSelectable(node) : defaultIsNodeSelectable(node, controller);\n    if (isSelectableNode && Block.isBlock(node)) {\n      return (\n        <BlockSelectBox\n          node={node}\n          manager={manager}\n          controller={controller}\n        >\n          {next()}\n        </BlockSelectBox>\n      );\n    }\n    return next();\n  };\n}\n"],"file":"createRenderNode.js"}