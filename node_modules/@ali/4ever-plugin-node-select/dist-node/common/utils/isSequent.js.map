{"version":3,"sources":["../../../../src/common/utils/isSequent.ts"],"names":["isSequent","keys","controller","document","value","sortedNodeKeys","length","every","key","index","nextKey","path","getPath","nextPath","Path","isSibling","at","node","getNode","nextNode","isColumnsChild","query","isNextNodeColumnsChild","nextColumnsPath","parent","columnsRowPath","columnsPath","columnsNum","getNodeByPath","nodes"],"mappings":"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","sourcesContent":["import type { Block, Controller } from '@ali/4ever-cangjie';\nimport { Path } from '@ali/4ever-cangjie';\nimport { sortNodeKeys } from './sortNodeKeys';\n\nexport function isSequent(keys: string[], controller: Controller) {\n  const { document } = controller.value;\n  const sortedNodeKeys = sortNodeKeys(keys, document);\n  const { length } = sortedNodeKeys;\n  return sortedNodeKeys.every((key, index) => {\n    if (index < length - 1) {\n      const nextKey = sortedNodeKeys[index + 1];\n      const path = document.getPath(key);\n      const nextPath = document.getPath(nextKey);\n      if (path && nextPath) {\n        if (Path.isSibling(path, nextPath) && ((path.at(-1) || 0) - (nextPath.at(-1) || 0) === -1)) {\n          return true;\n        }\n        const node = document.getNode(key);\n        const nextNode = document.getNode(sortedNodeKeys[index + 1]);\n        const isColumnsChild = controller.query('isColumnsChild', node);\n        const isNextNodeColumnsChild = controller.query('isColumnsChild', nextNode);\n        if (isColumnsChild || isNextNodeColumnsChild) {\n          if (!isColumnsChild) {\n            const nextColumnsPath = Path.parent(Path.parent(nextPath));\n            if (Path.isSibling(path, nextColumnsPath) && nextPath.at(-1) === 0 && (path.at(-1)! - nextColumnsPath.at(-1)!) === -1) {\n              return true;\n            }\n          } else if (!isNextNodeColumnsChild) {\n            const columnsRowPath = Path.parent(path);\n            const columnsPath = Path.parent(Path.parent(path));\n            const columnsNum = (document.getNodeByPath(columnsRowPath) as Block).nodes.length;\n            return Path.isSibling(columnsPath, nextPath)\n              && (path.at(-1) === columnsNum - 1)\n              && ((columnsPath.at(-1)! - nextPath.at(-1)!) === -1);\n          } else {\n            const nextColumnsPath = Path.parent(Path.parent(nextPath));\n            const columnsRowPath = Path.parent(path);\n            const columnsPath = Path.parent(Path.parent(path));\n            const columnsNum = (document.getNodeByPath(columnsRowPath) as Block).nodes.length;\n            return Path.isSibling(columnsPath, nextColumnsPath)\n              && (path.at(-1) === columnsNum - 1)\n              && nextPath.at(-1) === 0\n              && (columnsPath.at(-1)! - nextColumnsPath.at(-1)!) === -1;\n          }\n        }\n        return false;\n      }\n    }\n    return true;\n  });\n}\n"],"file":"isSequent.js"}