{"version":3,"sources":["../../../../../src/common/components/MultipleSelectToolbar/index.tsx"],"names":["NODE_SELECTING_ATTRIBUTE","ToolbarWrapper","styled","div","ToolbarBtnsWrapper","ToolbarDropDownIconWrapper","Drawer","DrawerMobile","MultipleSelectToolbar","props","controller","manager","toolbarItemsPriority","isVisible","setVisible","React","useState","layout","setLayout","handleClose","useCallback","selectedNodeKeys","getSelectedNodeKeys","selectedNodes","map","key","value","document","getNode","filter","node","dispatch","type","reason","closeSelect","useEffect","handleHide","timer","handleShow","isExpanded","selection","command","Commands","moveToFocus","setTimeout","run","on","off","clearTimeout","handleSelectedNodeChange","sequent","toolbarItems","isSequent","selectedNodeTypes","sortedLayout","item","priority","sort","item1","item2","item1Priority","item2Priority","oldLayout","handleClick","btn","find","action","keys","sortedNodeKeys","sortedNodes","nodeKey","handleClickOutside","e","target","closest","NODE_SELECT_CLICKABLE_BOX_CLASS_NAME","body","addEventListener","removeEventListener","window","setAttribute","removeAttribute","title","icon","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { isEqual } from 'lodash-es';\nimport { DrawerMobile } from '@ali/we-design-next';\nimport { Commands, Controller, NodeSelectToolbarItem } from '@ali/4ever-cangjie';\nimport { MobileIconBack } from '@ali/4ever-component';\nimport type { SelectManager } from '../../utils/SelectManager';\nimport { isSequent } from '../../utils/isSequent';\nimport { sortNodeKeys } from '../../utils/sortNodeKeys';\nimport { ToolbarItem } from './ToolbarItem';\nimport { NODE_SELECT_CLICKABLE_BOX_CLASS_NAME } from '../constants';\nimport { INodeSelectPluginConfigs } from '../../types';\n\nconst NODE_SELECTING_ATTRIBUTE = 'data-node-selecting';\nexport interface IMultipleSelectToolbarProps {\n  controller: Controller;\n  manager: SelectManager;\n  toolbarItemsPriority?: INodeSelectPluginConfigs['toolbarItemsPriority'];\n}\n\nconst ToolbarWrapper = styled.div`\n  position: relative;\n  margin: 0 auto;\n  width: min-content;\n  background: #ffffff;\n  box-shadow: 0px 0px 1px rgba(126,134,142,0.18), 0px 12px 32px 0px rgba(53, 64, 90, 0.18);\n  border-radius: 8px;\n  padding: 34px 6px 6px 6px;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ToolbarBtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ToolbarDropDownIconWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%) rotate(-90deg);\n  top: 0px;\n  font-size: 0;\n  padding: 4px;\n`;\n\nconst Drawer = styled(DrawerMobile)`\n  & > div {\n    pointer-events: none;\n  }\n  & .wdn-drawer-mobile-drawer-box {\n    background: transparent;\n    height: auto;\n    box-shadow: unset;\n    border-radius: 0;\n    padding: 0;\n    padding-bottom: 40px;\n  }\n  & .wdn-drawer-mobile-drawer-box > .node-select-clickable-box {\n    pointer-events: auto;\n  }\n`;\n\nexport const MultipleSelectToolbar: React.FC<IMultipleSelectToolbarProps> = (props) => {\n  const { controller, manager, toolbarItemsPriority } = props;\n  const [isVisible, setVisible] = React.useState(false);\n  const [layout, setLayout] = React.useState<NodeSelectToolbarItem[]>([]);\n\n  const handleClose = React.useCallback(() => {\n    const selectedNodeKeys = manager.getSelectedNodeKeys();\n    const selectedNodes = selectedNodeKeys\n      .map((key) => controller.value.document.getNode(key))\n      .filter((node) => !!node);\n    // 清除掉高亮效果\n    controller.dispatch('removeHighlight', {\n      node: selectedNodes,\n      type: 'hover',\n      reason: 'blockSelect',\n    });\n    manager.closeSelect();\n  }, [manager, controller]);\n\n  React.useEffect(() => {\n    const handleHide = () => {\n      setVisible(false);\n    };\n    let timer: any = null;\n    const handleShow = () => {\n      setVisible(true);\n      const { isExpanded } = controller.value.selection;\n      if (isExpanded) {\n        controller.command(Commands.moveToFocus);\n      }\n      timer = setTimeout(() => {\n        controller.run('onCangjieBlur');\n      });\n    };\n\n    manager.on('showSelect', handleShow);\n    manager.on('hideSelect', handleHide);\n    return () => {\n      manager.off('showSelect', handleShow);\n      manager.off('hideSelect', handleHide);\n      timer && clearTimeout(timer);\n      timer = null;\n    };\n  }, [manager, controller]);\n\n  React.useEffect(() => {\n    const handleSelectedNodeChange = (selectedNodeKeys: string[]) => {\n      const sequent = isSequent(selectedNodeKeys, controller);\n      const toolbarItems = controller.run('getNodeSelectToolbarItems', {\n        isSequent: sequent,\n        // TODO\n        selectedNodeTypes: [],\n      }) || [];\n      const sortedLayout = toolbarItems\n        .filter((item) => {\n          return !!item &&\n            (typeof toolbarItemsPriority?.[item.key] === 'number' ? toolbarItemsPriority?.[item.key] > 0 : item.priority > 0);\n        }).sort((item1, item2) => {\n          const item1Priority = typeof toolbarItemsPriority?.[item1.key] === 'number'\n            ? toolbarItemsPriority?.[item1.key]\n            : (item1.priority || 0);\n          const item2Priority = typeof toolbarItemsPriority?.[item2.key] === 'number'\n            ? toolbarItemsPriority?.[item2.key]\n            : (item2.priority || 0);\n          return item1Priority - item2Priority;\n        });\n      setLayout((oldLayout) => {\n        if (!isEqual(oldLayout, sortedLayout)) {\n          return sortedLayout;\n        }\n        return oldLayout;\n      });\n    };\n    manager.on('selectedNodeChange', handleSelectedNodeChange);\n    return () => {\n      manager.off('selectedNodeChange', handleSelectedNodeChange);\n    };\n  }, [controller, manager, toolbarItemsPriority]);\n\n  const handleClick = React.useCallback((key: string) => {\n    const btn = layout.find((item) => item.key === key);\n    if (btn && btn.action) {\n      const keys = manager.getSelectedNodeKeys();\n      // @ts-ignore\n      const sortedNodeKeys = sortNodeKeys(keys, controller.value.document);\n      const sortedNodes = sortedNodeKeys.map((nodeKey) => {\n        return controller.value.document.getNode(nodeKey);\n      }).filter((node) => !!node);\n      controller.dispatch(btn.action, { selectedNodes: sortedNodes });\n    }\n  }, [layout, controller, manager]);\n\n  React.useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      const { target } = e;\n      if (!(target as HTMLElement).closest(`.${NODE_SELECT_CLICKABLE_BOX_CLASS_NAME}`)) {\n        handleClose();\n      }\n    };\n    if (isVisible) {\n      document.body.addEventListener('click', handleClickOutside);\n    }\n    return () => {\n      if (isVisible) {\n        document.body.removeEventListener('click', handleClickOutside);\n      }\n    };\n  }, [handleClose, isVisible]);\n\n  React.useEffect(() => {\n    if (isVisible) {\n      window.document.body.setAttribute(NODE_SELECTING_ATTRIBUTE, '');\n    } else {\n      window.document.body.removeAttribute(NODE_SELECTING_ATTRIBUTE);\n    }\n    return () => {\n      window.document.body.removeAttribute(NODE_SELECTING_ATTRIBUTE);\n    };\n  }, [isVisible]);\n\n  return (\n    <Drawer\n      content={\n        <ToolbarWrapper className={NODE_SELECT_CLICKABLE_BOX_CLASS_NAME}>\n          <ToolbarDropDownIconWrapper onClick={handleClose}>\n            <MobileIconBack color=\"rgba(53, 64, 90, 0.48)\" />\n          </ToolbarDropDownIconWrapper>\n          <ToolbarBtnsWrapper>\n            {\n              layout.map((item) => (\n                <ToolbarItem\n                  onClick={() => handleClick(item.key)}\n                  title={item.title}\n                  key={item.key}\n                  icon={item.icon}\n                  disabled={item.disabled}\n                />\n              ))\n            }\n          </ToolbarBtnsWrapper>\n        </ToolbarWrapper>\n      }\n      height={'auto'}\n      visible={isVisible}\n      onClose={handleClose}\n      getContainer={() => document.body}\n    />\n  );\n};\n"],"file":"index.js"}