{"version":3,"sources":["../../../../../src/common/components/BlockSelectBox/Swiper.ts"],"names":["getStartAndCurrentTouch","changedTouches","touches","length","i","identifier","j","item","start","current","isScrollingHorizontally","elem","scrollRight","root","document","body","scrollableContainer","closest","contains","scrollLeft","scrollWidth","clientWidth","isScrolling","parentElement","Swiper","constructor","getDomRef","handlers","status","isPressingTimer","startTouches","enableClick","canScrollingHorizontally","undefined","initZIndex","setEnableClick","flag","onPress","touch","onSwipeEnd","dom","style","transition","transform","zIndex","onTouchStart","e","setTimeout","PRESS_TIMEOUT","getComputedStyle","addEventListener","onTouchMove","passive","capture","onTouchEnd","onTouchCancel","swipeX","clientX","swipeY","clientY","Math","abs","clearTimeout","SWIPE_THRESHOLD","target","cancelable","preventDefault","stopPropagation","realSwipeX","min","log2","MAX_SWIPE_DISTANCE","reset","removeEventListener","onEnd","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PRESS_TIMEOUT, SWIPE_THRESHOLD, MAX_SWIPE_DISTANCE } from './constants';\n\ninterface Handlers {\n  onPress: (touch: React.Touch) => void;\n  onSwipeEnd: () => void;\n  onClick?: () => void;\n}\n\nfunction getStartAndCurrentTouch(changedTouches: React.TouchList | TouchList, touches: React.TouchList | TouchList) {\n  const { length } = changedTouches;\n  for (let i = 0; i < length; i++) {\n    const { identifier } = changedTouches[i];\n    for (let j = 0; j < touches.length; j++) {\n      if (touches.item(j)?.identifier === identifier) {\n        return {\n          start: touches.item(j),\n          current: changedTouches.item(i),\n        };\n      }\n    }\n  }\n  return {};\n}\n\n// 子元素是否在水平滚动\nfunction isScrollingHorizontally(elem: HTMLElement, scrollRight: boolean, root: HTMLElement = document.body) {\n  const scrollableContainer = elem.closest('[data-plugin-scrollable]') as HTMLElement;\n  if (scrollableContainer && root.contains(scrollableContainer)) {\n    const { scrollLeft, scrollWidth, clientWidth } = scrollableContainer;\n    const isScrolling = !scrollRight ? scrollLeft + clientWidth < scrollWidth : scrollLeft > 0;\n    if (isScrolling) {\n      return true;\n    }\n    const { parentElement } = scrollableContainer;\n    return parentElement ? isScrollingHorizontally(parentElement, scrollRight, root) : false;\n  }\n  return false;\n}\n\ntype Status = 'isPressing' | 'isSwiping' | 'init' | 'isScroll';\n\nexport class Swiper {\n  constructor(getDomRef: () => HTMLElement | null, handlers: Handlers) {\n    this.getDomRef = getDomRef;\n    this.handlers = handlers;\n  }\n  private readonly getDomRef: () => HTMLElement | null;\n  private status: Status = 'init';\n  private isPressingTimer: ReturnType<typeof setTimeout> | null = null;\n  private readonly handlers: Handlers;\n  private startTouches: TouchList | null = null;\n  // 是否响应 click 事件\n  private enableClick = false;\n  private canScrollingHorizontally: boolean | undefined = undefined;\n  private initZIndex: string = '';\n\n  setEnableClick = (flag: boolean) => {\n    this.enableClick = flag;\n  };\n\n  private readonly onPress = (touch: React.Touch) => {\n    this.status = 'isPressing';\n    this.handlers.onPress?.(touch);\n  };\n\n  private readonly onSwipeEnd = () => {\n    const dom = this.getDomRef();\n    if (dom) {\n      dom.style.transition = 'transform 0.2s';\n      dom.style.transform = 'translateX(0)';\n      dom.style.zIndex = this.initZIndex;\n      this.initZIndex = '';\n    }\n    this.handlers.onSwipeEnd?.();\n  };\n\n  onTouchStart = (e: TouchEvent) => {\n    const { touches } = e;\n    this.startTouches = touches;\n    this.isPressingTimer = setTimeout(() => {\n      this.onPress(touches[0]);\n    }, PRESS_TIMEOUT);\n    this.canScrollingHorizontally = undefined;\n    this.status = 'init';\n    const dom = this.getDomRef();\n    this.initZIndex = dom ? getComputedStyle(dom).zIndex : '';\n    document.body.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n      capture: true,\n    });\n    document.body.addEventListener('touchend', this.onTouchEnd, true);\n    document.body.addEventListener('touchcancel', this.onTouchCancel, true);\n  };\n\n  private readonly onTouchMove = (e: React.TouchEvent | TouchEvent) => {\n    if (!this.startTouches) {\n      return;\n    }\n    // 处理阈值\n    // 如果已经识别成长按或者垂直方向滚动，则后续的 swipe 不执行\n    if (this.status === 'isPressing' || this.status === 'isScroll') {\n      return;\n    }\n    const { changedTouches } = e;\n    const dom = this.getDomRef();\n    const { start, current } = getStartAndCurrentTouch(changedTouches, this.startTouches);\n    if (start && current && dom && this.startTouches) {\n      const swipeX = current.clientX - start.clientX;\n      const swipeY = current.clientY - start.clientY;\n      // 纵向滚动忽略不计\n      if (Math.abs(swipeY) > Math.abs(swipeX) && this.status === 'init') {\n        this.status = 'isScroll';\n        this.isPressingTimer && clearTimeout(this.isPressingTimer);\n        return;\n      }\n      if (Math.abs(swipeX) > SWIPE_THRESHOLD) {\n        this.isPressingTimer && clearTimeout(this.isPressingTimer);\n        this.canScrollingHorizontally = this.canScrollingHorizontally === undefined\n          ? isScrollingHorizontally((current.target) as HTMLElement, swipeX > 0, dom)\n          : this.canScrollingHorizontally;\n        if (this.canScrollingHorizontally === false) {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n          this.status = 'isSwiping';\n          // TODO @miaomiao! 阻尼感\n          const realSwipeX = Math.min(Math.log2(Math.abs(swipeX)) * (swipeX > 0 ? 1 : -1) * 5, MAX_SWIPE_DISTANCE);\n          dom.style.transform = `translateX(${realSwipeX}px)`;\n          dom.style.zIndex = '1';\n        }\n        if (this.canScrollingHorizontally === true) {\n          this.status = 'isScroll';\n        }\n      }\n    }\n  };\n\n  private readonly reset = () => {\n    this.status = 'init';\n    this.startTouches = null;\n    this.isPressingTimer && clearTimeout(this.isPressingTimer);\n    document.body.removeEventListener('touchmove', this.onTouchMove);\n    document.body.removeEventListener('touchcancel', this.onTouchCancel, true);\n    document.body.removeEventListener('touchend', this.onTouchEnd, true);\n  };\n\n  private readonly onEnd = () => {\n    if (this.status === 'isSwiping') {\n      this.onSwipeEnd();\n    }\n    this.reset();\n  };\n\n  private readonly onTouchEnd = (e: TouchEvent) => {\n    if (this.enableClick && this.status === 'init' && this.handlers.onClick) {\n      const touch = getStartAndCurrentTouch(e.changedTouches, this.startTouches!);\n      if (touch && touch.start?.target === touch.current?.target) {\n        this.handlers.onClick();\n      }\n    }\n    this.onEnd();\n  };\n\n  private readonly onTouchCancel = () => {\n    this.onEnd();\n  };\n}\n"],"file":"Swiper.js"}