{"version":3,"sources":["../../../../../src/common/components/BlockSelectBox/Swiper.ts"],"names":["PRESS_TIMEOUT","SWIPE_THRESHOLD","MAX_SWIPE_DISTANCE","getStartAndCurrentTouch","changedTouches","touches","length","i","identifier","j","item","start","current","isScrollingHorizontally","elem","scrollRight","root","document","body","scrollableContainer","closest","contains","scrollLeft","scrollWidth","clientWidth","isScrolling","parentElement","Swiper","getDomRef","handlers","status","isPressingTimer","startTouches","enableClick","canScrollingHorizontally","undefined","initZIndex","setEnableClick","flag","onPress","touch","onSwipeEnd","dom","style","transition","transform","zIndex","onTouchStart","e","setTimeout","getComputedStyle","addEventListener","onTouchMove","passive","capture","onTouchEnd","onTouchCancel","swipeX","clientX","swipeY","clientY","Math","abs","clearTimeout","target","cancelable","preventDefault","stopPropagation","realSwipeX","min","log2","reset","removeEventListener","onEnd","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PRESS_TIMEOUT, SWIPE_THRESHOLD, MAX_SWIPE_DISTANCE } from './constants';\n\ninterface Handlers {\n  onPress: (touch: React.Touch) => void;\n  onSwipeEnd: () => void;\n  onClick?: () => void;\n}\n\nfunction getStartAndCurrentTouch(changedTouches: React.TouchList | TouchList, touches: React.TouchList | TouchList) {\n  const { length } = changedTouches;\n  for (let i = 0; i < length; i++) {\n    const { identifier } = changedTouches[i];\n    for (let j = 0; j < touches.length; j++) {\n      if (touches.item(j)?.identifier === identifier) {\n        return {\n          start: touches.item(j),\n          current: changedTouches.item(i),\n        };\n      }\n    }\n  }\n  return {};\n}\n\n// 子元素是否在水平滚动\nfunction isScrollingHorizontally(elem: HTMLElement, scrollRight: boolean, root: HTMLElement = document.body) {\n  const scrollableContainer = elem.closest('[data-plugin-scrollable]') as HTMLElement;\n  if (scrollableContainer && root.contains(scrollableContainer)) {\n    const { scrollLeft, scrollWidth, clientWidth } = scrollableContainer;\n    const isScrolling = !scrollRight ? scrollLeft + clientWidth < scrollWidth : scrollLeft > 0;\n    if (isScrolling) {\n      return true;\n    }\n    const { parentElement } = scrollableContainer;\n    return parentElement ? isScrollingHorizontally(parentElement, scrollRight, root) : false;\n  }\n  return false;\n}\n\ntype Status = 'isPressing' | 'isSwiping' | 'init' | 'isScroll';\n\nexport class Swiper {\n  constructor(getDomRef: () => HTMLElement | null, handlers: Handlers) {\n    this.getDomRef = getDomRef;\n    this.handlers = handlers;\n  }\n  private readonly getDomRef: () => HTMLElement | null;\n  private status: Status = 'init';\n  private isPressingTimer: ReturnType<typeof setTimeout> | null = null;\n  private readonly handlers: Handlers;\n  private startTouches: TouchList | null = null;\n  // 是否响应 click 事件\n  private enableClick = false;\n  private canScrollingHorizontally: boolean | undefined = undefined;\n  private initZIndex: string = '';\n\n  setEnableClick = (flag: boolean) => {\n    this.enableClick = flag;\n  };\n\n  private readonly onPress = (touch: React.Touch) => {\n    this.status = 'isPressing';\n    this.handlers.onPress?.(touch);\n  };\n\n  private readonly onSwipeEnd = () => {\n    const dom = this.getDomRef();\n    if (dom) {\n      dom.style.transition = 'transform 0.2s';\n      dom.style.transform = 'translateX(0)';\n      dom.style.zIndex = this.initZIndex;\n      this.initZIndex = '';\n    }\n    this.handlers.onSwipeEnd?.();\n  };\n\n  onTouchStart = (e: TouchEvent) => {\n    const { touches } = e;\n    this.startTouches = touches;\n    this.isPressingTimer = setTimeout(() => {\n      this.onPress(touches[0]);\n    }, PRESS_TIMEOUT);\n    this.canScrollingHorizontally = undefined;\n    this.status = 'init';\n    const dom = this.getDomRef();\n    this.initZIndex = dom ? getComputedStyle(dom).zIndex : '';\n    document.body.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n      capture: true,\n    });\n    document.body.addEventListener('touchend', this.onTouchEnd, true);\n    document.body.addEventListener('touchcancel', this.onTouchCancel, true);\n  };\n\n  private readonly onTouchMove = (e: React.TouchEvent | TouchEvent) => {\n    if (!this.startTouches) {\n      return;\n    }\n    // 处理阈值\n    // 如果已经识别成长按或者垂直方向滚动，则后续的 swipe 不执行\n    if (this.status === 'isPressing' || this.status === 'isScroll') {\n      return;\n    }\n    const { changedTouches } = e;\n    const dom = this.getDomRef();\n    const { start, current } = getStartAndCurrentTouch(changedTouches, this.startTouches);\n    if (start && current && dom && this.startTouches) {\n      const swipeX = current.clientX - start.clientX;\n      const swipeY = current.clientY - start.clientY;\n      // 纵向滚动忽略不计\n      if (Math.abs(swipeY) > Math.abs(swipeX) && this.status === 'init') {\n        this.status = 'isScroll';\n        this.isPressingTimer && clearTimeout(this.isPressingTimer);\n        return;\n      }\n      if (Math.abs(swipeX) > SWIPE_THRESHOLD) {\n        this.isPressingTimer && clearTimeout(this.isPressingTimer);\n        this.canScrollingHorizontally = this.canScrollingHorizontally === undefined\n          ? isScrollingHorizontally((current.target) as HTMLElement, swipeX > 0, dom)\n          : this.canScrollingHorizontally;\n        if (this.canScrollingHorizontally === false) {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n          this.status = 'isSwiping';\n          // TODO @miaomiao! 阻尼感\n          const realSwipeX = Math.min(Math.log2(Math.abs(swipeX)) * (swipeX > 0 ? 1 : -1) * 5, MAX_SWIPE_DISTANCE);\n          dom.style.transform = `translateX(${realSwipeX}px)`;\n          dom.style.zIndex = '1';\n        }\n        if (this.canScrollingHorizontally === true) {\n          this.status = 'isScroll';\n        }\n      }\n    }\n  };\n\n  private readonly reset = () => {\n    this.status = 'init';\n    this.startTouches = null;\n    this.isPressingTimer && clearTimeout(this.isPressingTimer);\n    document.body.removeEventListener('touchmove', this.onTouchMove);\n    document.body.removeEventListener('touchcancel', this.onTouchCancel, true);\n    document.body.removeEventListener('touchend', this.onTouchEnd, true);\n  };\n\n  private readonly onEnd = () => {\n    if (this.status === 'isSwiping') {\n      this.onSwipeEnd();\n    }\n    this.reset();\n  };\n\n  private readonly onTouchEnd = (e: TouchEvent) => {\n    if (this.enableClick && this.status === 'init' && this.handlers.onClick) {\n      const touch = getStartAndCurrentTouch(e.changedTouches, this.startTouches!);\n      if (touch && touch.start?.target === touch.current?.target) {\n        this.handlers.onClick();\n      }\n    }\n    this.onEnd();\n  };\n\n  private readonly onTouchCancel = () => {\n    this.onEnd();\n  };\n}\n"],"file":"Swiper.js"}