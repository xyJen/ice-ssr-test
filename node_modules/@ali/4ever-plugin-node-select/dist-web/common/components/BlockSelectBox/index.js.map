{"version":3,"sources":["../../../../../src/common/components/BlockSelectBox/index.tsx"],"names":["React","styled","MobileIconCheck","Swiper","NODE_SELECT_CLICKABLE_BOX_CLASS_NAME","Box","div","CHECKBOX_SIZE","CHECKBOX_HOT_SIZE","InnerCheckbox","p","isSelected","Checkbox","blockEvent","e","stopPropagation","preventDefault","BlockSelectBox","props","children","node","manager","controller","style","className","key","ref","useRef","useState","isNodeSelected","setSelected","isSelecting","selectBox","setSelectBox","swiper","current","onPress","v","isExpanded","value","selection","dispatch","type","reason","setNodeSelected","onSwipeEnd","onClick","useEffect","handleShowSelect","on","off","setEnableClick","handleHideSelect","handleClickCheckBox","onRef","useCallback","elem","addEventListener","onTouchStart","handleTouchBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Block, Controller } from '@ali/4ever-cangjie';\nimport { MobileIconCheck } from '@ali/4ever-component';\nimport type { SelectManager } from '../../utils/SelectManager';\nimport { Swiper } from './Swiper';\nimport { NODE_SELECT_CLICKABLE_BOX_CLASS_NAME } from '../constants';\n\nconst Box = styled.div`\n  position: relative;\n`;\n\nconst CHECKBOX_SIZE = 20;\nconst CHECKBOX_HOT_SIZE = 4;\n\nconst InnerCheckbox = styled.div<{ isSelected: boolean }>`\n  width: ${CHECKBOX_SIZE}px;\n  height: ${CHECKBOX_SIZE}px;\n  box-sizing: border-box;\n  border-radius: 50%;\n  background: ${(p) => (p.isSelected ? '#0089FF' : '#FFFFFF')};\n  border: ${(p) => (p.isSelected ? '1.5px solid #0089FF' : '1.5px solid rgba(126, 134, 142, 0.24)')};\n  transition: 0.2s background, 0.2s border;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Checkbox = styled.div`\n  position: absolute;\n  right: 0;\n  top: 50%;\n  transform: translate3d(50%, -50%, 0);\n  width: ${CHECKBOX_SIZE + CHECKBOX_HOT_SIZE * 2}px;\n  height: ${CHECKBOX_SIZE + CHECKBOX_HOT_SIZE * 2}px;\n  box-sizing: border-box;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n  .icon, ${InnerCheckbox} {\n    pointer-events: none;\n  }\n`;\n\nfunction blockEvent(e: React.TouchEvent) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nexport interface IBlockSelectBoxProps {\n  node: Block;\n  manager: SelectManager;\n  controller: Controller;\n  style?: React.CSSProperties;\n  className?: string;\n}\n\nexport const BlockSelectBox: React.FC<IBlockSelectBoxProps> = (props) => {\n  const { children, node, manager, controller, style, className } = props;\n  const { key } = node;\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [isSelected, setSelected] = React.useState(manager.isNodeSelected(key));\n  const [selectBox, setSelectBox] = React.useState(manager.isSelecting);\n\n  const swiper = React.useRef(new Swiper(() => ref.current, {\n    onPress: () => {\n      setSelected((v) => {\n        const { isExpanded } = controller.value.selection;\n        // 若不在多选状态，长按后选区为 isExpanded 状态，表示触发了右键菜单，状态保持不变\n        if (!manager.isSelecting && isExpanded) {\n          return v;\n        }\n        // 已经在多选状态，长按一定会切换节点的选择状态\n        controller.dispatch(!v ? 'updateHighlight' : 'removeHighlight', {\n          node,\n          type: 'hover',\n          reason: 'blockSelect',\n        });\n        manager.setNodeSelected(node.key, !v);\n        return !v;\n      });\n    },\n    onSwipeEnd: () => {\n      setSelected((v) => {\n        controller.dispatch(!v ? 'updateHighlight' : 'removeHighlight', {\n          node,\n          type: 'hover',\n          reason: 'blockSelect',\n        });\n        manager.setNodeSelected(node.key, !v);\n        return !v;\n      });\n    },\n    onClick: () => {\n      setSelected((v) => {\n        controller.dispatch(!v ? 'updateHighlight' : 'removeHighlight', {\n          node,\n          type: 'hover',\n          reason: 'blockSelect',\n        });\n        manager.setNodeSelected(node.key, !v);\n        return !v;\n      });\n    },\n  }));\n\n  React.useEffect(() => {\n    // 处理渲染多选 checkbox\n    const handleShowSelect = () => {\n      setSelectBox(true);\n    };\n    manager.on('showSelect', handleShowSelect);\n    return () => {\n      manager.off('showSelect', handleShowSelect);\n    };\n  }, [manager]);\n\n  React.useEffect(() => {\n    swiper.current.setEnableClick(selectBox);\n  }, [selectBox]);\n\n  React.useEffect(() => {\n    const handleHideSelect = () => {\n      setSelectBox(false);\n      setSelected(false);\n    };\n    manager.on('hideSelect', handleHideSelect);\n    return () => {\n      manager.off('hideSelect', handleHideSelect);\n    };\n  }, [manager]);\n\n  const handleClickCheckBox = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSelected((v) => {\n      controller.dispatch(!v ? 'updateHighlight' : 'removeHighlight', {\n        node,\n        type: 'hover',\n        reason: 'blockSelect',\n      });\n      manager.setNodeSelected(node.key, !v);\n      return !v;\n    });\n  };\n\n  const onRef = React.useCallback((elem: HTMLDivElement) => {\n    // @ts-ignore\n    ref.current = elem;\n    if (elem) {\n      elem.addEventListener('touchstart', swiper.current.onTouchStart);\n    }\n  }, []);\n\n  const handleTouchBox = React.useCallback((e: React.TouchEvent) => {\n    if (selectBox) {\n      e.preventDefault();\n    }\n  }, [selectBox]);\n\n  React.useEffect(() => {\n    return () => {\n      if (manager.isNodeSelected(key)) {\n        manager.setNodeSelected(key, false);\n      }\n    };\n  }, [key, manager]);\n\n  return (\n    <Box\n      ref={onRef}\n      className={`${NODE_SELECT_CLICKABLE_BOX_CLASS_NAME} ${className ?? ''}`}\n      onTouchStart={handleTouchBox}\n      onTouchEnd={handleTouchBox}\n      style={style}\n    >\n      {children}\n      { selectBox && (\n        <Checkbox\n          onClick={handleClickCheckBox}\n          onTouchEnd={blockEvent}\n          className=\"node-select-checkbox\"\n        >\n          <InnerCheckbox className=\"node-select-visible-checkbox\" isSelected={isSelected}>\n            {\n              isSelected && <MobileIconCheck color=\"#ffffff\" />\n            }\n          </InnerCheckbox>\n        </Checkbox>\n      )}\n    </Box>\n  );\n};\n"],"file":"index.js"}