{"version":3,"sources":["../../../../../src/common/components/MultipleSelectToolbar/ToolbarItem.tsx"],"names":["React","styled","COLORS","Wrapper","div","Title","p","disabled","LIGHT","LEVEL4_BASE_COLOR","ToolbarItem","props","title","key","icon","onClick","handleClick","useCallback","e","stopPropagation","preventDefault","cloneElement","color"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAOA,IAAMC,OAAO,gBAAGF,MAAM,CAACG,GAAV,0IAAb;AAYA,IAAMC,KAAK,gBAAGJ,MAAM,CAACG,GAAV,mGAMA,UAACE,CAAD;AAAA,SAAQA,CAAC,CAACC,QAAF,GAAaL,MAAM,CAACM,KAAP,CAAaC,iBAA1B,GAA8C,SAAtD;AAAA,CANA,CAAX;AASA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA8B;AAAA,MAC/CC,KAD+C,GACPD,KADO,CAC/CC,KAD+C;AAAA,MACxCL,QADwC,GACPI,KADO,CACxCJ,QADwC;AAAA,MAC9BM,GAD8B,GACPF,KADO,CAC9BE,GAD8B;AAAA,MACzBC,IADyB,GACPH,KADO,CACzBG,IADyB;AAAA,MACnBC,OADmB,GACPJ,KADO,CACnBI,OADmB;AAGvD,MAAMC,WAAW,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,UAACC,CAAD,EAAyB;AAC7DA,IAAAA,CAAC,CAACC,eAAF;AACAD,IAAAA,CAAC,CAACE,cAAF;AACA,QAAIb,QAAJ,EAAc;AACdQ,IAAAA,OAAO,CAACF,GAAD,CAAP;AACD,GALmB,EAKjB,CAACE,OAAD,EAAUR,QAAV,EAAoBM,GAApB,CALiB,CAApB;AAOA,sBACE,eAAC,OAAD;AAAS,IAAA,OAAO,EAAEG;AAAlB,KAEIT,QAAQ,gBAAGP,KAAK,CAACqB,YAAN,CAAmBP,IAAnB,EAA+C;AACxDQ,IAAAA,KAAK,EAAEpB,MAAM,CAACM,KAAP,CAAaC;AADoC,GAA/C,CAAH,GAEHK,IAJT,eAME,eAAC,KAAD;AAAO,IAAA,QAAQ,EAAEP;AAAjB,KACGK,KADH,CANF,CADF;AAYD,CAtBM","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { COLORS } from '@ali/4ever-component';\nimport type { NodeSelectToolbarItem } from '@ali/4ever-cangjie';\n\nexport interface IToolbarItemProps extends Omit<NodeSelectToolbarItem, 'action' | 'priority'> {\n  onClick: (key: string) => void;\n}\n\nconst Wrapper = styled.div`\n  width: 72px;\n  padding: 8px 0 10px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  & + & {\n    margin-left: 4px;\n  }\n`;\n\nconst Title = styled.div<{disabled?: boolean}>`\n  margin-top: 8px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n  color: ${(p) => (p.disabled ? COLORS.LIGHT.LEVEL4_BASE_COLOR : '#35405A')};\n`;\n\nexport const ToolbarItem = (props: IToolbarItemProps) => {\n  const { title, disabled, key, icon, onClick } = props;\n\n  const handleClick = React.useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (disabled) return;\n    onClick(key);\n  }, [onClick, disabled, key]);\n\n  return (\n    <Wrapper onClick={handleClick}>\n      {\n        disabled ? React.cloneElement(icon as React.ReactElement, {\n          color: COLORS.LIGHT.LEVEL4_BASE_COLOR,\n        }) : icon\n      }\n      <Title disabled={disabled}>\n        {title}\n      </Title>\n    </Wrapper>\n  );\n};\n"],"file":"ToolbarItem.js"}