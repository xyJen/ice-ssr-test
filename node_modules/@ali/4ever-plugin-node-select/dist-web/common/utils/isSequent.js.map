{"version":3,"sources":["../../../../src/common/utils/isSequent.ts"],"names":["Path","sortNodeKeys","isSequent","keys","controller","document","value","sortedNodeKeys","length","every","key","index","nextKey","path","getPath","nextPath","isSibling","at","node","getNode","nextNode","isColumnsChild","query","isNextNodeColumnsChild","nextColumnsPath","parent","columnsRowPath","columnsPath","columnsNum","getNodeByPath","nodes"],"mappings":"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","sourcesContent":["import type { Block, Controller } from '@ali/4ever-cangjie';\nimport { Path } from '@ali/4ever-cangjie';\nimport { sortNodeKeys } from './sortNodeKeys';\n\nexport function isSequent(keys: string[], controller: Controller) {\n  const { document } = controller.value;\n  const sortedNodeKeys = sortNodeKeys(keys, document);\n  const { length } = sortedNodeKeys;\n  return sortedNodeKeys.every((key, index) => {\n    if (index < length - 1) {\n      const nextKey = sortedNodeKeys[index + 1];\n      const path = document.getPath(key);\n      const nextPath = document.getPath(nextKey);\n      if (path && nextPath) {\n        if (Path.isSibling(path, nextPath) && ((path.at(-1) || 0) - (nextPath.at(-1) || 0) === -1)) {\n          return true;\n        }\n        const node = document.getNode(key);\n        const nextNode = document.getNode(sortedNodeKeys[index + 1]);\n        const isColumnsChild = controller.query('isColumnsChild', node);\n        const isNextNodeColumnsChild = controller.query('isColumnsChild', nextNode);\n        if (isColumnsChild || isNextNodeColumnsChild) {\n          if (!isColumnsChild) {\n            const nextColumnsPath = Path.parent(Path.parent(nextPath));\n            if (Path.isSibling(path, nextColumnsPath) && nextPath.at(-1) === 0 && (path.at(-1)! - nextColumnsPath.at(-1)!) === -1) {\n              return true;\n            }\n          } else if (!isNextNodeColumnsChild) {\n            const columnsRowPath = Path.parent(path);\n            const columnsPath = Path.parent(Path.parent(path));\n            const columnsNum = (document.getNodeByPath(columnsRowPath) as Block).nodes.length;\n            return Path.isSibling(columnsPath, nextPath)\n              && (path.at(-1) === columnsNum - 1)\n              && ((columnsPath.at(-1)! - nextPath.at(-1)!) === -1);\n          } else {\n            const nextColumnsPath = Path.parent(Path.parent(nextPath));\n            const columnsRowPath = Path.parent(path);\n            const columnsPath = Path.parent(Path.parent(path));\n            const columnsNum = (document.getNodeByPath(columnsRowPath) as Block).nodes.length;\n            return Path.isSibling(columnsPath, nextColumnsPath)\n              && (path.at(-1) === columnsNum - 1)\n              && nextPath.at(-1) === 0\n              && (columnsPath.at(-1)! - nextColumnsPath.at(-1)!) === -1;\n          }\n        }\n        return false;\n      }\n    }\n    return true;\n  });\n}\n"],"file":"isSequent.js"}