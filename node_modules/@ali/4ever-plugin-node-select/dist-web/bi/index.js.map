{"version":3,"sources":["../../../src/bi/index.ts"],"names":["createRenderContent","createRenderNode","SelectManager","createOnAction","createOnCangjieFocus","createOnCangjieSelect","createGetNodeSelectToolbarItems","createQueries","actions","biFactory","configs","nodeSelect","nodeSelectConfigs","manager","onSelectingChange","onNodeSelectedChange","onManagerCallback","key","queries","renderContent","renderNode","onAction","getNodeSelectToolbarItems","locale","onCangjieFocus","onCangjieSelect"],"mappings":"AACA,OAAOA,mBAAP;AACA,OAAOC,gBAAP;AACA,SAASC,aAAT;AACA,OAAOC,cAAP;AACA,SAASC,oBAAT;AACA,SAASC,qBAAT;AACA,SAASC,+BAAT;AACA,SAASC,aAAT;AACA,SAASC,OAAT;AAEA,OAAO,IAAMC,SAAoB,GAAG,SAAvBA,SAAuB,CAACC,OAAD,EAAa;AAAA;;AAAA,4BACAA,OADA,CACvCC,UADuC;AAAA,MAC3BC,iBAD2B,oCACP,EADO;AAE/C,MAAMC,OAAO,GAAG,IAAIX,aAAJ,CAAkB;AAChCY,IAAAA,iBAAiB,EAAEF,iBAAF,oBAAEA,iBAAiB,CAAEE,iBADN;AAEhCC,IAAAA,oBAAoB,EAAEH,iBAAF,oBAAEA,iBAAiB,CAAEG;AAFT,GAAlB,CAAhB;AAIA,0BAAAL,OAAO,CAACC,UAAR,0CAAoBK,iBAApB,yCAAoBA,iBAApB,CAAwCH,OAAxC;AACA,SAAO;AACLI,IAAAA,GAAG,EAAE,YADA;AAELT,IAAAA,OAAO,EAAPA,OAFK;AAGLU,IAAAA,OAAO,EAAEX,aAAa,CAACM,OAAD,CAHjB;AAILM,IAAAA,aAAa,EAAEnB,mBAAmB,CAACY,iBAAD,EAAoBC,OAApB,CAJ7B;AAKLO,IAAAA,UAAU,EAAEnB,gBAAgB,CAACW,iBAAD,EAAoBC,OAApB,CALvB;AAMLQ,IAAAA,QAAQ,EAAElB,cAAc,CAACS,iBAAD,EAAoBC,OAApB,CANnB;AAOLS,IAAAA,yBAAyB,EAAEhB,+BAA+B,CAACM,iBAAiB,CAACW,MAAlB,IAA4B,EAA7B,CAPrD;AAQLC,IAAAA,cAAc,EAAEpB,oBAAoB,CAACS,OAAD,CAR/B;AASLY,IAAAA,eAAe,EAAEpB,qBAAqB,CAACQ,OAAD;AATjC,GAAP;AAWD,CAlBM","sourcesContent":["import type { BiFactory } from '@ali/4ever-cangjie';\nimport createRenderContent from '../common/createRenderContent';\nimport createRenderNode from '../common/createRenderNode';\nimport { SelectManager } from '../common/utils/SelectManager';\nimport createOnAction from '../common/handlers/createOnAction';\nimport { createOnCangjieFocus } from '../common/handlers/createOnCangjieFocus';\nimport { createOnCangjieSelect } from '../common/handlers/createOnCangjieSelect';\nimport { createGetNodeSelectToolbarItems } from './createGetNodeSelectToolbarItems';\nimport { createQueries } from '../common/createQueries';\nimport { actions } from '../common/actions';\n\nexport const biFactory: BiFactory = (configs) => {\n  const { nodeSelect: nodeSelectConfigs = {} } = configs;\n  const manager = new SelectManager({\n    onSelectingChange: nodeSelectConfigs?.onSelectingChange,\n    onNodeSelectedChange: nodeSelectConfigs?.onNodeSelectedChange,\n  });\n  configs.nodeSelect?.onManagerCallback?.(manager);\n  return {\n    key: 'nodeSelect',\n    actions,\n    queries: createQueries(manager),\n    renderContent: createRenderContent(nodeSelectConfigs, manager),\n    renderNode: createRenderNode(nodeSelectConfigs, manager),\n    onAction: createOnAction(nodeSelectConfigs, manager),\n    getNodeSelectToolbarItems: createGetNodeSelectToolbarItems(nodeSelectConfigs.locale || {}),\n    onCangjieFocus: createOnCangjieFocus(manager),\n    onCangjieSelect: createOnCangjieSelect(manager),\n  };\n};\n"],"file":"index.js"}