{"version":3,"sources":["../../../src/zhi/index.ts"],"names":["createRenderContent","createRenderNode","SelectManager","createOnAction","createGetNodeSelectToolbarItems","createOnCangjieFocus","createOnCangjieSelect","createQueries","actions","zhiFactory","configs","nodeSelect","nodeSelectConfigs","manager","onSelectingChange","onNodeSelectedChange","onManagerCallback","key","queries","copySelectedNodes","cancelSelectNode","renderContent","renderNode","onAction","getNodeSelectToolbarItems","locale","onCangjieFocus","onCangjieSelect"],"mappings":"AACA,OAAOA,mBAAP;AACA,OAAOC,gBAAP;AACA,SAASC,aAAT;AACA,OAAOC,cAAP;AACA,SAASC,+BAAT;AACA,SAASC,oBAAT;AACA,SAASC,qBAAT;AACA,SAASC,aAAT;AACA,SAASC,OAAT;AAGA,OAAO,IAAMC,UAAsB,GAAG,SAAzBA,UAAyB,CAACC,OAAD,EAAa;AAAA;;AAAA,4BACFA,OADE,CACzCC,UADyC;AAAA,MAC7BC,iBAD6B,oCACT,EADS;AAEjD,MAAMC,OAAO,GAAG,IAAIX,aAAJ,CAAkB;AAChCY,IAAAA,iBAAiB,EAAEF,iBAAF,oBAAEA,iBAAiB,CAAEE,iBADN;AAEhCC,IAAAA,oBAAoB,EAAEH,iBAAF,oBAAEA,iBAAiB,CAAEG;AAFT,GAAlB,CAAhB;AAIA,0BAAAL,OAAO,CAACC,UAAR,0CAAoBK,iBAApB,yCAAoBA,iBAApB,CAAwCH,OAAxC;AACA,SAAO;AACLI,IAAAA,GAAG,EAAE,YADA;AAELC,IAAAA,OAAO,EAAEX,aAAa,CAACM,OAAD,CAFjB;AAGLL,IAAAA,OAAO,EAAE;AACPW,MAAAA,iBAAiB,EAAEX,OAAO,CAACW,iBADpB;AAEPC,MAAAA,gBAAgB,EAAEZ,OAAO,CAACY;AAFnB,KAHJ;AAOLC,IAAAA,aAAa,EAAErB,mBAAmB,CAACY,iBAAD,EAAoBC,OAApB,CAP7B;AAQLS,IAAAA,UAAU,EAAErB,gBAAgB,CAACW,iBAAD,EAAoBC,OAApB,CARvB;AASLU,IAAAA,QAAQ,EAAEpB,cAAc,CAACS,iBAAD,EAAoBC,OAApB,CATnB;AAULW,IAAAA,yBAAyB,EAAEpB,+BAA+B,CAACM,OAAO,CAACC,UAAR,CAAmBc,MAAnB,IAA6B,EAA9B,CAVrD;AAWLC,IAAAA,cAAc,EAAErB,oBAAoB,CAACQ,OAAD,CAX/B;AAYLc,IAAAA,eAAe,EAAErB,qBAAqB,CAACO,OAAD;AAZjC,GAAP;AAcD,CArBM","sourcesContent":["import type { ZhiFactory } from '@ali/4ever-cangjie';\nimport createRenderContent from '../common/createRenderContent';\nimport createRenderNode from '../common/createRenderNode';\nimport { SelectManager } from '../common/utils/SelectManager';\nimport createOnAction from '../common/handlers/createOnAction';\nimport { createGetNodeSelectToolbarItems } from './createGetNodeSelectToolbarItems';\nimport { createOnCangjieFocus } from '../common/handlers/createOnCangjieFocus';\nimport { createOnCangjieSelect } from '../common/handlers/createOnCangjieSelect';\nimport { createQueries } from '../common/createQueries';\nimport { actions } from '../common/actions';\n\n\nexport const zhiFactory: ZhiFactory = (configs) => {\n  const { nodeSelect: nodeSelectConfigs = {} } = configs;\n  const manager = new SelectManager({\n    onSelectingChange: nodeSelectConfigs?.onSelectingChange,\n    onNodeSelectedChange: nodeSelectConfigs?.onNodeSelectedChange,\n  });\n  configs.nodeSelect?.onManagerCallback?.(manager);\n  return {\n    key: 'nodeSelect',\n    queries: createQueries(manager),\n    actions: {\n      copySelectedNodes: actions.copySelectedNodes,\n      cancelSelectNode: actions.cancelSelectNode,\n    },\n    renderContent: createRenderContent(nodeSelectConfigs, manager),\n    renderNode: createRenderNode(nodeSelectConfigs, manager),\n    onAction: createOnAction(nodeSelectConfigs, manager),\n    getNodeSelectToolbarItems: createGetNodeSelectToolbarItems(configs.nodeSelect.locale || {}),\n    onCangjieFocus: createOnCangjieFocus(manager),\n    onCangjieSelect: createOnCangjieSelect(manager),\n  };\n};\n"],"file":"index.js"}