declare type EventType = 'showSelect' | 'hideSelect' | 'selectedNodeChange';
interface SelectManagerParams {
    onSelectingChange?: (selecting: boolean) => void;
    onNodeSelectedChange?: (visible: boolean, key: string) => void;
}
export declare class SelectManager {
    private readonly selectedNodeKetSet;
    private handlers;
    private readonly onSelectingChange?;
    private readonly onNodeSelectedChange?;
    constructor(params: SelectManagerParams);
    get isSelecting(): boolean;
    closeSelect(): void;
    emitter(type: EventType, ...args: any[]): void;
    on(type: EventType, callback: Function): void;
    off(type: EventType, callback: Function): void;
    setNodeSelected(key: string, flag: boolean): void;
    isNodeSelected(key: string): boolean;
    getSelectedNodeKeys(): string[];
}
export {};
