import { getLastChild, isJsonMLText } from '@ali/4ever-utils';
import { createEmptyParagraph } from '@ali/4ever-cangjie';

var isTextNode = function isTextNode(node) {
  var _node;

  if (node && isJsonMLText(node) && (_node = node[node.length - 1]) != null && _node[2]) {
    return true;
  }

  return false;
};

export default {
  name: 'br',
  onOpenTag: function onOpenTag(state, name) {
    if (name !== 'br') return false; // ref: src/plugins/text/htmlToJsonML.js

    var parent = state.peek();
    var prevSibling = getLastChild(parent);

    if (isTextNode(prevSibling)) {
      // 前一个兄弟节点是文本类型，直接在前一个节点内容尾插入 \n, 防止产生 unnormalized 数据结构
      var lastTextChild = prevSibling == null ? void 0 : prevSibling[prevSibling.length - 1]; // @ts-ignore

      lastTextChild[2] += '\n';
      return true;
    }

    var phantom = createEmptyParagraph();
    phantom.isPhantom = true;
    state.push(phantom);
    return true;
  },
  onCloseTag: function onCloseTag(state, name) {
    if (name !== 'br') return false;
    var parent = state.peek();
    var prevSibling = getLastChild(parent);

    if (isTextNode(prevSibling)) {
      return true;
    }

    var br = state.pop();
    state.append(br);
    return true;
  }
};
//# sourceMappingURL=htmlToJsonML.js.map