"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everUtils = require("@ali/4ever-utils");

var _everCangjie = require("@ali/4ever-cangjie");

const isTextNode = node => {
  if (node && (0, _everUtils.isJsonMLText)(node) && node[node.length - 1]?.[2]) {
    return true;
  }

  return false;
};

var _default = {
  name: 'br',
  onOpenTag: (state, name) => {
    if (name !== 'br') return false; // ref: src/plugins/text/htmlToJsonML.js

    const parent = state.peek();
    const prevSibling = (0, _everUtils.getLastChild)(parent);

    if (isTextNode(prevSibling)) {
      // 前一个兄弟节点是文本类型，直接在前一个节点内容尾插入 \n, 防止产生 unnormalized 数据结构
      const lastTextChild = prevSibling?.[prevSibling.length - 1]; // @ts-ignore

      lastTextChild[2] += '\n';
      return true;
    }

    const phantom = (0, _everCangjie.createEmptyParagraph)();
    phantom.isPhantom = true;
    state.push(phantom);
    return true;
  },
  onCloseTag: (state, name) => {
    if (name !== 'br') return false;
    const parent = state.peek();
    const prevSibling = (0, _everUtils.getLastChild)(parent);

    if (isTextNode(prevSibling)) {
      return true;
    }

    const br = state.pop();
    state.append(br);
    return true;
  }
};
exports.default = _default;
//# sourceMappingURL=htmlToJsonML.js.map