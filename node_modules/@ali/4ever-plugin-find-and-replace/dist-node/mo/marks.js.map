{"version":3,"sources":["../../../src/mo/marks.ts"],"names":["MATCH_MARK_TYPE","MatchMark","TYPE","create","selected","Mark","type","data","isMatchMark","maybeMark","isMark"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,eAAe,GAAG,OAAxB;AAQO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAEF,eADiB;;AAGvBG,EAAAA,MAAM,CAACC,QAAD,EAAoB;AACxB,WAAOC,kBAAKF,MAAL,CAA2B;AAChCG,MAAAA,IAAI,EAAEN,eAD0B;AAEhCO,MAAAA,IAAI,EAAE;AAAEH,QAAAA;AAAF;AAF0B,KAA3B,CAAP;AAID,GARsB;;AAUvBI,EAAAA,WAAW,CAACC,SAAD,EAA0C;AACnD,WAAOJ,kBAAKK,MAAL,CAAYD,SAAZ,KAA0BA,SAAS,CAACH,IAAV,KAAmBN,eAApD;AACD;;AAZsB,CAAlB","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nconst MATCH_MARK_TYPE = 'match';\n\ninterface MatchMarkData extends Data {\n  selected: boolean;\n}\n\nexport type IMatchMark = Mark<MatchMarkData>;\n\nexport const MatchMark = {\n  TYPE: MATCH_MARK_TYPE,\n\n  create(selected: boolean) {\n    return Mark.create<MatchMarkData>({\n      type: MATCH_MARK_TYPE,\n      data: { selected },\n    });\n  },\n\n  isMatchMark(maybeMark: any): maybeMark is IMatchMark {\n    return Mark.isMark(maybeMark) && maybeMark.type === MATCH_MARK_TYPE;\n  },\n};\n"],"file":"marks.js"}