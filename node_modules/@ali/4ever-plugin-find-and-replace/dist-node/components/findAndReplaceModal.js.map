{"version":3,"sources":["../../../src/components/findAndReplaceModal.tsx"],"names":["DEFAULT_TAB_KEY","DEFAULT_REPLACE_TEXT","FindAndReplaceModal","props","draggableArea","initialPosition","isFindOnly","mainController","locale","ctlManager","onScrollIntoFocus","onFilter","onCustomScroll","findText","setFindText","focused","setFocused","modalRef","domRef","matches","run","ctl","data","query","value","searchResult","length","push","matchedCount","visible","findAndReplaceVisible","findFragment","focusIndex","isInit","idx","findIndex","match","selected","focusMatch","disableReplace","disableReplaceAll","every","isReadonlyMatch","container","window","debouncedUpdateFindText","text","runWithSchedule","handleFindInputChange","event","target","ctls","handleKeyDown","isFindHotKey","preventDefault","stopPropagation","fragment","current","querySelector","focus","handleMouseDown","dom","isFocus","Boolean","contains","document","addEventListener","removeEventListener","Promise","resolve","then","selectInput","handleFocusIndexChange","index","newFocusIndex","newFocusMatch","type","key","handleReplaceCurrent","targetText","handleReplaceAll","canReplaceMatches","filter","forEach","m","noSupportSearchCount","noSupportLeft","noSupportRight","message","info","handleVisibleChange","v"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Controller, useScrollableContainer } from '@ali/4ever-cangjie';\nimport { FindAndReplacePortal, message } from '@ali/we-design';\nimport type { FindAndReplace } from '@ali/we-design';\nimport { debounce } from 'lodash-es';\nimport { isKeyHotkey } from 'is-hotkey';\nimport {\n  toggleFindAndReplace,\n  replaceText,\n  updateFindText,\n  updateSearchResult,\n  updateFindFragment,\n} from '../common/actions';\nimport { isReadonlyMatch, scrollIntoFocus } from '../utils';\nimport type { ControllerManager } from '../utils';\nimport { IMatch } from '../utils/types';\n\nconst DEFAULT_TAB_KEY = 'find';\nconst DEFAULT_REPLACE_TEXT = '';\ninterface IFindAndReplaceModal {\n  mainController: Controller;\n  draggableArea: { top: number; bottom: number; right: number; left: number };\n  initialPosition: { marginTop: number; marginRight: number };\n  isFindOnly: boolean;\n  locale: Record<string, any>;\n  ctlManager: ControllerManager;\n  onScrollIntoFocus?: (role: string) => void;\n  onFilter?: (result: IMatch[]) => IMatch[];\n  onCustomScroll?: (dom: HTMLElement) => void;\n}\n\nconst FindAndReplaceModal: React.FC<IFindAndReplaceModal> = (props) => {\n  const {\n    draggableArea,\n    initialPosition,\n    isFindOnly,\n    mainController,\n    locale,\n    ctlManager,\n    onScrollIntoFocus,\n    onFilter,\n    onCustomScroll,\n  } = props;\n  const [findText, setFindText] = useState('');\n  const [focused, setFocused] = useState(true);\n\n  const modalRef = useRef<FindAndReplace>(null);\n  const domRef = useRef<HTMLDivElement>(null);\n\n  let matches: IMatch[] = [];\n  ctlManager.run((ctl) => {\n    const { data } = ctl.query('getDataValue') || ctl.value;\n    const { searchResult } = data;\n    if (searchResult?.length > 0) {\n      matches.push(...searchResult);\n    }\n  });\n\n  if (onFilter) {\n    matches = onFilter(matches);\n  }\n\n  const matchedCount = matches.length;\n\n  const { data } = mainController.value;\n  const visible = data.findAndReplaceVisible || false;\n  const { findFragment = '' } = data;\n\n  let focusIndex = 0;\n  let isInit = false;\n  if (matches.length > 0) {\n    const idx = matches.findIndex((match) => match.selected);\n    if (idx === -1) {\n      // 当存在 「匹配项」 但没有 「选中项」时初始化第一项为选中项\n      focusIndex = 1;\n      isInit = true;\n    } else {\n      focusIndex = idx + 1;\n    }\n  }\n\n  const focusMatch = matches[focusIndex - 1];\n  const disableReplace = isReadonlyMatch(focusMatch);\n  const disableReplaceAll = matches.every(isReadonlyMatch);\n\n  const container = useScrollableContainer() || window;\n\n  const debouncedUpdateFindText = useCallback(\n    debounce((text) => {\n      ctlManager.runWithSchedule((ctl) => {\n        ctl.run('onAction', updateFindText(text));\n      });\n    }, 200),\n    [ctlManager],\n  );\n\n  const handleFindInputChange = useCallback(\n    (event) => {\n      const text = typeof event === 'string' ? event : event.target.value;\n\n      debouncedUpdateFindText(text);\n      if (findFragment) {\n        mainController.run('onAction', updateFindFragment(''));\n      }\n      setFindText(text);\n    },\n    [debouncedUpdateFindText, findFragment, mainController],\n  );\n\n  // 新增实例时更新下搜索结果\n  useEffect(() => {\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', updateFindText(findText));\n    });\n  }, [ctlManager.ctls[ctlManager.ctls.length - 1]]);\n\n  // 绑定监听\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const isFindHotKey = isKeyHotkey('mod+f');\n      if (isFindHotKey(event)) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { findAndReplaceVisible } = mainController.value.data;\n\n        let fragment = '';\n        ctlManager.run((ctl) => {\n          const text = ctl.value.fragment?.text;\n          if (text) {\n            fragment = text;\n          }\n        });\n\n        if (!findAndReplaceVisible) {\n          mainController.run('onAction', toggleFindAndReplace(true));\n        } else {\n          // 查找替换组件没有提供设置 input focus 的方法，这里临时处理下\n          (domRef.current?.querySelector('[aria-hidden=\"false\"] input[data-testid=\"J_findValueInput\"]') as HTMLInputElement)?.focus();\n        }\n\n        if (fragment) {\n          mainController.run('onAction', updateFindFragment(fragment));\n        }\n      }\n    };\n\n    const handleMouseDown = (event) => {\n      const dom = domRef.current;\n      if (!dom) {\n        return;\n      }\n      const isFocus = Boolean(dom.contains(event.target));\n      setFocused(isFocus);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('mousedown', handleMouseDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('mousedown', handleMouseDown);\n    };\n  }, [ctlManager, mainController]);\n\n  // 从选区初始化 findText\n  useEffect(() => {\n    if (findFragment) {\n      handleFindInputChange(findFragment);\n\n      // 这里延迟一下，等输入框有内容后再选中\n      Promise.resolve().then(() => {\n        if (modalRef.current) {\n          modalRef.current.selectInput();\n        }\n      });\n      setFocused(true);\n    }\n  }, [findFragment, handleFindInputChange]);\n\n  const handleFocusIndexChange = (index: number) => {\n    const newFocusIndex = (matchedCount + index - 1) % matchedCount;\n    const newFocusMatch = matches[newFocusIndex];\n\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', updateSearchResult(newFocusMatch));\n      if (newFocusMatch) {\n        onScrollIntoFocus && onScrollIntoFocus(newFocusMatch.type);\n        scrollIntoFocus(newFocusMatch.key, ctl, container, findText, onCustomScroll);\n      }\n    });\n  };\n\n  const handleReplaceCurrent = (targetText: string) => {\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', replaceText(focusMatch, targetText));\n    });\n\n    const newFocusIndex =\n      focusIndex === matchedCount ? focusIndex - 2 : focusIndex;\n    const newFocusMatch = matches[newFocusIndex];\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', updateSearchResult(newFocusMatch));\n      if (newFocusMatch) {\n        onScrollIntoFocus && onScrollIntoFocus(newFocusMatch.type);\n        scrollIntoFocus(newFocusMatch.key, ctl, container, findText, onCustomScroll);\n      }\n    });\n  };\n\n  const handleReplaceAll = (targetText: string) => {\n    const canReplaceMatches = matches.filter(\n      (match) => !isReadonlyMatch(match),\n    );\n    canReplaceMatches.forEach((m) =>\n      ctlManager.runWithSchedule((ctl) => {\n        ctl.run('onAction', replaceText(m, targetText));\n      }));\n\n    // 提示不支持替换的元素个数\n    const noSupportSearchCount = matchedCount - canReplaceMatches.length;\n    if (noSupportSearchCount) {\n      const { noSupportLeft, noSupportRight } = locale;\n      message.info(\n        `${noSupportLeft} ${noSupportSearchCount} ${noSupportRight}`,\n        2,\n      );\n    }\n  };\n\n  const handleVisibleChange = (v: boolean) => {\n    mainController.run('onAction', toggleFindAndReplace(v));\n  };\n\n  // 关闭时清除搜索\n  useEffect(() => {\n    if (!visible) {\n      handleFindInputChange('');\n    }\n  }, [visible, handleFindInputChange]);\n\n  // 初始化第一个匹配项为选中项\n  useEffect(() => {\n    if (isInit) {\n      ctlManager.runWithSchedule((ctl) => {\n        ctl.run('onAction', updateSearchResult(focusMatch));\n        onScrollIntoFocus && onScrollIntoFocus(focusMatch.type);\n        scrollIntoFocus(focusMatch.key, ctl, container, findText, onCustomScroll);\n      });\n    }\n  }, [ctlManager, focusMatch, isInit]);\n\n  return (\n    <FindAndReplacePortal\n      visible={visible}\n      focused={focused}\n      isFindOnly={isFindOnly}\n      defaultTabKey={DEFAULT_TAB_KEY}\n      disableReplace={disableReplace}\n      disableReplaceAll={disableReplaceAll}\n      zIndex={1000}\n      draggableArea={draggableArea}\n      initialPosition={initialPosition}\n      testid=\"FindAndReplacePortal\"\n      findText={findText}\n      focusIndex={focusIndex}\n      matchedCount={matchedCount}\n      defaultReplaceText={DEFAULT_REPLACE_TEXT}\n      wrappedRef={modalRef}\n      domRef={domRef}\n      onFindInputChange={handleFindInputChange}\n      onFocusIndexChange={handleFocusIndexChange}\n      onReplaceCurrent={handleReplaceCurrent}\n      onReplaceAll={handleReplaceAll}\n      onVisibleChange={handleVisibleChange}\n    />\n  );\n};\n\nexport default FindAndReplaceModal;\n"],"file":"findAndReplaceModal.js"}