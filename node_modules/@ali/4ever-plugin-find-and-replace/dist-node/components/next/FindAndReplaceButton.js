"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FindAndReplaceButton = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _actions = require("../../common/actions");

var _everCangjie = require("@ali/4ever-cangjie");

var _everComponent = require("@ali/4ever-component");

const _createElement = /*#__PURE__*/React.createElement;
const MOD = _everCangjie.environment.IS_MAC ? 'âŒ˜' : 'Ctrl';
const SHORTCUT = `${MOD}+F`;

const FindAndReplaceButton = props => {
  const {
    controller,
    disabled,
    ctlManager,
    locale,
    tooltip: tooltipProp,
    ...rest
  } = props;
  const {
    data = {}
  } = controller.value;
  const isVisible = data.findAndReplaceVisible || false;
  const isDisabled = disabled || controller.query('isDisableFindAndReplace');
  const handleClick = React.useCallback(() => {
    const {
      mainController
    } = ctlManager;

    if (!mainController) {
      return;
    }

    mainController.run('onAction', (0, _actions.toggleFindAndReplace)());
    let fragment = '';
    ctlManager.run(ctl => {
      const text = ctl.value.fragment?.text;

      if (text) {
        fragment = text;
      }
    });

    if (fragment) {
      mainController.run('onAction', (0, _actions.updateFindFragment)(fragment));
    }
  }, []);
  const tooltip = React.useMemo(() => ({
    title: locale?.buttonTitle || 'Search',
    shortCut: SHORTCUT,
    ...tooltipProp
  }), []);
  return /*#__PURE__*/_createElement(_everComponent.SearchButton, (0, _extends2.default)({
    testid: "bi-toolbar-search",
    active: isVisible,
    onClick: handleClick,
    title: locale?.buttonTitle,
    disabled: isDisabled,
    role: 'findandreplace',
    tooltip: tooltip
  }, rest));
};

exports.FindAndReplaceButton = FindAndReplaceButton;
//# sourceMappingURL=FindAndReplaceButton.js.map