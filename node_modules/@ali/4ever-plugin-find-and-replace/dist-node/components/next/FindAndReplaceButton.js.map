{"version":3,"sources":["../../../../src/components/next/FindAndReplaceButton.tsx"],"names":["MOD","environment","IS_MAC","SHORTCUT","FindAndReplaceButton","props","controller","disabled","ctlManager","locale","tooltip","tooltipProp","rest","data","value","isVisible","findAndReplaceVisible","isDisabled","query","handleClick","React","useCallback","mainController","run","fragment","ctl","text","useMemo","title","buttonTitle","shortCut"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;uBAH4B,a;AAK5B,MAAMA,GAAG,GAAGC,yBAAYC,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;AACA,MAAMC,QAAQ,GAAI,GAAEH,GAAI,IAAxB;;AAQO,MAAMI,oBAAsC,GAAIC,KAAD,IAAW;AAC/D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA,MAApC;AAA4CC,IAAAA,OAAO,EAAEC,WAArD;AAAkE,OAAGC;AAArE,MAA8EP,KAApF;AACA,QAAM;AAAEQ,IAAAA,IAAI,GAAG;AAAT,MAAgBP,UAAU,CAACQ,KAAjC;AAEA,QAAMC,SAAS,GAAGF,IAAI,CAACG,qBAAL,IAA8B,KAAhD;AACA,QAAMC,UAAU,GAAGV,QAAQ,IAAID,UAAU,CAACY,KAAX,CAAiB,yBAAjB,CAA/B;AAEA,QAAMC,WAAW,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAM;AAC1C,UAAM;AAAEC,MAAAA;AAAF,QAAqBd,UAA3B;;AACA,QAAI,CAACc,cAAL,EAAqB;AACnB;AACD;;AAEDA,IAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,oCAA/B;AAEA,QAAIC,QAAQ,GAAG,EAAf;AACAhB,IAAAA,UAAU,CAACe,GAAX,CAAgBE,GAAD,IAAS;AACtB,YAAMC,IAAI,GAAGD,GAAG,CAACX,KAAJ,CAAUU,QAAV,EAAoBE,IAAjC;;AACA,UAAIA,IAAJ,EAAU;AACRF,QAAAA,QAAQ,GAAGE,IAAX;AACD;AACF,KALD;;AAMA,QAAIF,QAAJ,EAAc;AACZF,MAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,iCAAmBC,QAAnB,CAA/B;AACD;AACF,GAlBmB,EAkBjB,EAlBiB,CAApB;AAoBA,QAAMd,OAAO,GAAGU,KAAK,CAACO,OAAN,CAAc,OAAO;AACnCC,IAAAA,KAAK,EAAEnB,MAAM,EAAEoB,WAAR,IAAuB,QADK;AAEnCC,IAAAA,QAAQ,EAAE3B,QAFyB;AAGnC,OAAGQ;AAHgC,GAAP,CAAd,EAIZ,EAJY,CAAhB;AAMA,sBACE,eAAC,2BAAD;AACE,IAAA,MAAM,EAAC,mBADT;AAEE,IAAA,MAAM,EAAEI,SAFV;AAGE,IAAA,OAAO,EAAEI,WAHX;AAIE,IAAA,KAAK,EAAEV,MAAM,EAAEoB,WAJjB;AAKE,IAAA,QAAQ,EAAEZ,UALZ;AAME,IAAA,IAAI,EAAE,gBANR;AAOE,IAAA,OAAO,EAAEP;AAPX,KAQME,IARN,EADF;AAYD,CA7CM","sourcesContent":["import * as React from 'react';\nimport { toggleFindAndReplace, updateFindFragment } from '../../common/actions';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport type { ControllerManager } from '../../utils';\nimport { SearchButton, IToolbarButtonConfig } from '@ali/4ever-component';\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\nconst SHORTCUT = `${MOD}+F`;\n\nexport interface Iprops extends IToolbarButtonConfig {\n  controller: Controller;\n  ctlManager: ControllerManager;\n  locale?: Record<string, string>;\n}\n\nexport const FindAndReplaceButton: React.FC<Iprops> = (props) => {\n  const { controller, disabled, ctlManager, locale, tooltip: tooltipProp, ...rest } = props;\n  const { data = {} } = controller.value;\n\n  const isVisible = data.findAndReplaceVisible || false;\n  const isDisabled = disabled || controller.query('isDisableFindAndReplace');\n\n  const handleClick = React.useCallback(() => {\n    const { mainController } = ctlManager;\n    if (!mainController) {\n      return;\n    }\n\n    mainController.run('onAction', toggleFindAndReplace());\n\n    let fragment = '';\n    ctlManager.run((ctl) => {\n      const text = ctl.value.fragment?.text;\n      if (text) {\n        fragment = text;\n      }\n    });\n    if (fragment) {\n      mainController.run('onAction', updateFindFragment(fragment));\n    }\n  }, []);\n\n  const tooltip = React.useMemo(() => ({\n    title: locale?.buttonTitle || 'Search',\n    shortCut: SHORTCUT,\n    ...tooltipProp,\n  }), []);\n\n  return (\n    <SearchButton\n      testid=\"bi-toolbar-search\"\n      active={isVisible}\n      onClick={handleClick}\n      title={locale?.buttonTitle}\n      disabled={isDisabled}\n      role={'findandreplace'}\n      tooltip={tooltip}\n      {...rest}\n    />\n  );\n};\n\n"],"file":"FindAndReplaceButton.js"}