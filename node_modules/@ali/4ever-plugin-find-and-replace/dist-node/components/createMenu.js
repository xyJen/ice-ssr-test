"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createMenu;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _actions = require("../common/actions");

const _createElement = /*#__PURE__*/React.createElement;

function createMenu(ctlManager) {
  return function FindAndReplaceMenuItem(props) {
    const {
      menuItem,
      controller
    } = props;
    const {
      title,
      ...rest
    } = menuItem;
    const isDisabled = controller.query('isDisableFindAndReplace');
    const handleClick = React.useCallback(() => {
      const {
        mainController
      } = ctlManager;

      if (!mainController) {
        return;
      }

      mainController.run('onAction', (0, _actions.toggleFindAndReplace)());
      let fragment = '';
      ctlManager.run(ctl => {
        const text = ctl.value.fragment?.text;

        if (text) {
          fragment = text;
        }
      });

      if (fragment) {
        mainController.run('onAction', (0, _actions.updateFindFragment)(fragment));
      }
    }, []);
    return /*#__PURE__*/_createElement(_weDesign.MenuItem, (0, _extends2.default)({}, rest, {
      menuKey: "findAndReplace",
      onClick: handleClick,
      disabled: isDisabled
    }), title || '');
  };
}
//# sourceMappingURL=createMenu.js.map