{"version":3,"sources":["../../../src/components/createMenu.tsx"],"names":["createMenu","ctlManager","FindAndReplaceMenuItem","props","menuItem","controller","title","rest","isDisabled","query","handleClick","React","useCallback","mainController","run","fragment","ctl","text","value"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAIb,SAASA,UAAT,CAAoBC,UAApB,EAAmD;AAChE,SAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAC5C,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA2BF,KAAjC;AACA,UAAM;AAAEG,MAAAA,KAAF;AAAS,SAAGC;AAAZ,QAAqBH,QAA3B;AACA,UAAMI,UAAU,GAAGH,UAAU,CAACI,KAAX,CAAiB,yBAAjB,CAAnB;AAEA,UAAMC,WAAW,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAM;AAC1C,YAAM;AAAEC,QAAAA;AAAF,UAAqBZ,UAA3B;;AACA,UAAI,CAACY,cAAL,EAAqB;AACnB;AACD;;AAEDA,MAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,oCAA/B;AAEA,UAAIC,QAAQ,GAAG,EAAf;AACAd,MAAAA,UAAU,CAACa,GAAX,CAAgBE,GAAD,IAAS;AACtB,cAAMC,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAUH,QAAV,EAAoBE,IAAjC;;AACA,YAAIA,IAAJ,EAAU;AACRF,UAAAA,QAAQ,GAAGE,IAAX;AACD;AACF,OALD;;AAMA,UAAIF,QAAJ,EAAc;AACZF,QAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,iCAAmBC,QAAnB,CAA/B;AACD;AACF,KAlBmB,EAkBjB,EAlBiB,CAApB;AAoBA,wBACE,eAAC,kBAAD,6BAAcR,IAAd;AAAoB,MAAA,OAAO,EAAC,gBAA5B;AAA6C,MAAA,OAAO,EAAEG,WAAtD;AAAmE,MAAA,QAAQ,EAAEF;AAA7E,QACGF,KAAK,IAAI,EADZ,CADF;AAKD,GA9BD;AA+BD","sourcesContent":["import * as React from 'react';\nimport { MenuItem } from '@ali/we-design';\nimport { toggleFindAndReplace, updateFindFragment } from '../common/actions';\nimport type { ControllerManager } from '../utils';\n\nexport default function createMenu(ctlManager: ControllerManager) {\n  return function FindAndReplaceMenuItem(props) {\n    const { menuItem, controller } = props;\n    const { title, ...rest } = menuItem;\n    const isDisabled = controller.query('isDisableFindAndReplace');\n\n    const handleClick = React.useCallback(() => {\n      const { mainController } = ctlManager;\n      if (!mainController) {\n        return;\n      }\n\n      mainController.run('onAction', toggleFindAndReplace());\n\n      let fragment = '';\n      ctlManager.run((ctl) => {\n        const text = ctl.value.fragment?.text;\n        if (text) {\n          fragment = text;\n        }\n      });\n      if (fragment) {\n        mainController.run('onAction', updateFindFragment(fragment));\n      }\n    }, []);\n\n    return (\n      <MenuItem {...rest} menuKey=\"findAndReplace\" onClick={handleClick} disabled={isDisabled}>\n        {title || ''}\n      </MenuItem>\n    );\n  };\n}\n"],"file":"createMenu.js"}