{"version":3,"sources":["../../../src/components/createButton.tsx"],"names":["MOD","environment","IS_MAC","SHORTCUT","createButton","ctlManager","FindAndReplaceButton","props","controller","locale","rest","data","value","isVisible","findAndReplaceVisible","isDisabled","query","handleClick","React","useCallback","mainController","run","fragment","ctl","text"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;AAK5B,MAAMA,GAAG,GAAGC,yBAAYC,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;AACA,MAAMC,QAAQ,GAAI,GAAEH,GAAI,IAAxB;;AAEe,SAASI,YAAT,CAAsBC,UAAtB,EAAqD;AAClE,SAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,MAAd;AAAsB,SAAGC;AAAzB,QAAkCH,KAAxC;AACA,UAAM;AAAEI,MAAAA,IAAI,GAAG;AAAT,QAAgBH,UAAU,CAACI,KAAjC;AAEA,UAAMC,SAAS,GAAGF,IAAI,CAACG,qBAAL,IAA8B,KAAhD;AACA,UAAMC,UAAU,GAAGP,UAAU,CAACQ,KAAX,CAAiB,yBAAjB,CAAnB;AAEA,UAAMC,WAAW,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAM;AAC1C,YAAM;AAAEC,QAAAA;AAAF,UAAqBf,UAA3B;;AACA,UAAI,CAACe,cAAL,EAAqB;AACnB;AACD;;AAEDA,MAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,oCAA/B;AAEA,UAAIC,QAAQ,GAAG,EAAf;AACAjB,MAAAA,UAAU,CAACgB,GAAX,CAAgBE,GAAD,IAAS;AACtB,cAAMC,IAAI,GAAGD,GAAG,CAACX,KAAJ,CAAUU,QAAV,EAAoBE,IAAjC;;AACA,YAAIA,IAAJ,EAAU;AACRF,UAAAA,QAAQ,GAAGE,IAAX;AACD;AACF,OALD;;AAMA,UAAIF,QAAJ,EAAc;AACZF,QAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,iCAAmBC,QAAnB,CAA/B;AACD;AACF,KAlBmB,EAkBjB,EAlBiB,CAApB;AAoBA,wBACE,eAAC,uBAAD,6BACMZ,IADN;AAEE,MAAA,MAAM,EAAC,mBAFT;AAGE,MAAA,MAAM,EAAEG,SAHV;AAIE,MAAA,OAAO,EAAEI,WAJX;AAKE,MAAA,YAAY,EAAEd,QALhB;AAME,MAAA,QAAQ,EAAEY,UANZ;AAOE,MAAA,IAAI,EAAE;AAPR,OADF;AAWD,GAtCD;AAuCD","sourcesContent":["import * as React from 'react';\nimport { SearchButton as Button } from '@ali/we-toolbar';\nimport { toggleFindAndReplace, updateFindFragment } from '../common/actions';\nimport { environment } from '@ali/4ever-cangjie';\nimport type { ControllerManager } from '../utils';\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\nconst SHORTCUT = `${MOD}+F`;\n\nexport default function createButton(ctlManager: ControllerManager) {\n  return function FindAndReplaceButton(props) {\n    const { controller, locale, ...rest } = props;\n    const { data = {} } = controller.value;\n\n    const isVisible = data.findAndReplaceVisible || false;\n    const isDisabled = controller.query('isDisableFindAndReplace');\n\n    const handleClick = React.useCallback(() => {\n      const { mainController } = ctlManager;\n      if (!mainController) {\n        return;\n      }\n\n      mainController.run('onAction', toggleFindAndReplace());\n\n      let fragment = '';\n      ctlManager.run((ctl) => {\n        const text = ctl.value.fragment?.text;\n        if (text) {\n          fragment = text;\n        }\n      });\n      if (fragment) {\n        mainController.run('onAction', updateFindFragment(fragment));\n      }\n    }, []);\n\n    return (\n      <Button\n        {...rest}\n        testid=\"bi-toolbar-search\"\n        active={isVisible}\n        onClick={handleClick}\n        shortcutText={SHORTCUT}\n        disabled={isDisabled}\n        role={'findandreplace'}\n      />\n    );\n  };\n}\n"],"file":"createButton.js"}