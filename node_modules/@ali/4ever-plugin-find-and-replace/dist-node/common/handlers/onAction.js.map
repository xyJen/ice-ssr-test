{"version":3,"sources":["../../../../src/common/handlers/onAction.ts"],"names":["onAction","action","controller","next","type","payload","FIND_AND_REPLACE_TOGGLE","visible","REPLACE_TEXT_AT_DECORATION","focus","text","UPDATE_FIND_TEXT","findText","UPDATE_SEARCH_RESULT","UPDATE_FIND_FRAGMENT","findFragment"],"mappings":";;;;;;;;;AACA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AAEe,SAASA,QAAT,CACbC,MADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAO,GAAG;AAAlB,MAAyBJ,MAA/B;;AACA,MAAIG,IAAI,KAAKE,gCAAb,EAAsC;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAcF,OAApB;AACA,WAAO,mCAAqBH,UAArB,EAAiCK,OAAjC,CAAP;AACD,GAHD,MAGO,IAAIH,IAAI,KAAKI,mCAAb,EAAyC;AAC9C,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBL,OAAxB;AACA,WAAO,0BAAYH,UAAZ,EAAwBO,KAAxB,EAA+BC,IAA/B,CAAP;AACD,GAHM,MAGA,IAAIN,IAAI,KAAKO,yBAAb,EAA+B;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAeP,OAArB;AACA,WAAO,6BAAeH,UAAf,EAA2BU,QAA3B,CAAP;AACD,GAHM,MAGA,IAAIR,IAAI,KAAKS,6BAAb,EAAmC;AACxC,UAAM;AAAEJ,MAAAA;AAAF,QAAYJ,OAAlB;AACA,WAAO,iCAAmBH,UAAnB,EAA+BO,KAA/B,CAAP;AACD,GAHM,MAGA,IAAIL,IAAI,KAAKU,6BAAb,EAAmC;AACxC,UAAM;AAAEC,MAAAA;AAAF,QAAmBV,OAAzB;AACA,WAAO,iCAAmBH,UAAnB,EAA+Ba,YAA/B,CAAP;AACD;;AACD,SAAOZ,IAAI,EAAX;AACD","sourcesContent":["import { Action, Controller } from '@ali/4ever-cangjie';\nimport {\n  FIND_AND_REPLACE_TOGGLE,\n  REPLACE_TEXT_AT_DECORATION,\n  UPDATE_FIND_TEXT,\n  UPDATE_SEARCH_RESULT,\n  UPDATE_FIND_FRAGMENT,\n} from '../actions';\n\nimport toggleFindAndReplace from '../commands/toggleFindAndReplace';\nimport replaceText from '../commands/replaceText';\nimport updateFindText from '../commands/updateFindText';\nimport updateSearchResult from '../commands/updateSearchResult';\nimport updateFindFragment from '../commands/updateFindFragment';\n\nexport default function onAction(\n  action: Action,\n  controller: Controller,\n  next: () => void,\n) {\n  const { type, payload = {} } = action;\n  if (type === FIND_AND_REPLACE_TOGGLE) {\n    const { visible } = payload;\n    return toggleFindAndReplace(controller, visible);\n  } else if (type === REPLACE_TEXT_AT_DECORATION) {\n    const { focus, text } = payload;\n    return replaceText(controller, focus, text);\n  } else if (type === UPDATE_FIND_TEXT) {\n    const { findText } = payload;\n    return updateFindText(controller, findText);\n  } else if (type === UPDATE_SEARCH_RESULT) {\n    const { focus } = payload;\n    return updateSearchResult(controller, focus);\n  } else if (type === UPDATE_FIND_FRAGMENT) {\n    const { findFragment } = payload;\n    return updateFindFragment(controller, findFragment);\n  }\n  return next();\n}\n"],"file":"onAction.js"}