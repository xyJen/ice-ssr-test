"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onAction;

var _actions = require("../actions");

var _toggleFindAndReplace = _interopRequireDefault(require("../commands/toggleFindAndReplace"));

var _replaceText = _interopRequireDefault(require("../commands/replaceText"));

var _updateFindText = _interopRequireDefault(require("../commands/updateFindText"));

var _updateSearchResult = _interopRequireDefault(require("../commands/updateSearchResult"));

var _updateFindFragment = _interopRequireDefault(require("../commands/updateFindFragment"));

function onAction(action, controller, next) {
  const {
    type,
    payload = {}
  } = action;

  if (type === _actions.FIND_AND_REPLACE_TOGGLE) {
    const {
      visible
    } = payload;
    return (0, _toggleFindAndReplace.default)(controller, visible);
  } else if (type === _actions.REPLACE_TEXT_AT_DECORATION) {
    const {
      focus,
      text
    } = payload;
    return (0, _replaceText.default)(controller, focus, text);
  } else if (type === _actions.UPDATE_FIND_TEXT) {
    const {
      findText
    } = payload;
    return (0, _updateFindText.default)(controller, findText);
  } else if (type === _actions.UPDATE_SEARCH_RESULT) {
    const {
      focus
    } = payload;
    return (0, _updateSearchResult.default)(controller, focus);
  } else if (type === _actions.UPDATE_FIND_FRAGMENT) {
    const {
      findFragment
    } = payload;
    return (0, _updateFindFragment.default)(controller, findFragment);
  }

  return next();
}
//# sourceMappingURL=onAction.js.map