{"version":3,"sources":["../../../src/common/createContextMenu.ts"],"names":["crateContextMenu","config","ctlManager","locale","controller","next","menus","selection","value","tableSelection","query","handleClick","mainController","run","fragment","ctl","text","isExpanded","push","name","buttonTitle","onClick","key","options","hotKey","group","others"],"mappings":";;;;;;;AAEA;;AAIe,SAASA,gBAAT,CAA0BC,MAA1B,EAAwDC,UAAxD,EAAuF;AACpG,QAAM;AAAEC,IAAAA;AAAF,MAAaF,MAAM,IAAI,EAA7B;AAEA,SAAO,UAAUG,UAAV,EAAkCC,IAAlC,EAAwC;AAC7C,UAAMC,KAAK,GAAG,EAAd;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAgBH,UAAU,CAACI,KAAjC;AACA,UAAMC,cAAc,GAAGL,UAAU,CAACM,KAAX,CAAiB,gBAAjB,CAAvB;;AAEA,UAAMC,WAAW,GAAG,MAAM;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAqBV,UAA3B;;AACA,UAAI,CAACU,cAAL,EAAqB;AACnB;AACD;;AAEDA,MAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,oCAA/B;AAEA,UAAIC,QAAQ,GAAG,EAAf;AACAZ,MAAAA,UAAU,CAACW,GAAX,CAAgBE,GAAD,IAAS;AACtB,cAAMC,IAAI,GAAGD,GAAG,CAACP,KAAJ,CAAUM,QAAV,EAAoBE,IAAjC;;AACA,YAAIA,IAAJ,EAAU;AACRF,UAAAA,QAAQ,GAAGE,IAAX;AACD;AACF,OALD;;AAMA,UAAIF,QAAJ,EAAc;AACZF,QAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,iCAAmBC,QAAnB,CAA/B;AACD;AACF,KAlBD;;AAoBA,QAAIP,SAAS,IAAIA,SAAS,CAACU,UAAvB,IAAqC,CAACR,cAA1C,EAA0D;AACxDH,MAAAA,KAAK,CAACY,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAEhB,MAAM,EAAEiB,WADL;AAETC,QAAAA,OAAO,EAAEV,WAFA;AAGTW,QAAAA,GAAG,EAAE,MAHI;AAITC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,OADD;AAEPC,UAAAA,KAAK,EAAE;AAFA;AAJA,OAAX;AASD;;AACD,UAAMC,MAAM,GAAGrB,IAAI,MAAM,EAAzB;AACA,WAAO,CAAC,GAAGC,KAAJ,EAAW,GAAGoB,MAAd,CAAP;AACD,GAtCD;AAuCD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\n\nimport { toggleFindAndReplace, updateFindFragment } from './actions';\nimport { FindAndReplaceConfig } from '../utils/types';\nimport type { ControllerManager } from '../utils';\n\nexport default function crateContextMenu(config: FindAndReplaceConfig, ctlManager: ControllerManager) {\n  const { locale } = config || {};\n\n  return function (controller: Controller, next) {\n    const menus = [] as any;\n    const { selection } = controller.value;\n    const tableSelection = controller.query('tableSelection');\n\n    const handleClick = () => {\n      const { mainController } = ctlManager;\n      if (!mainController) {\n        return;\n      }\n\n      mainController.run('onAction', toggleFindAndReplace());\n\n      let fragment = '';\n      ctlManager.run((ctl) => {\n        const text = ctl.value.fragment?.text;\n        if (text) {\n          fragment = text;\n        }\n      });\n      if (fragment) {\n        mainController.run('onAction', updateFindFragment(fragment));\n      }\n    };\n\n    if (selection && selection.isExpanded && !tableSelection) {\n      menus.push({\n        name: locale?.buttonTitle,\n        onClick: handleClick,\n        key: 'find',\n        options: {\n          hotKey: 'mod+f',\n          group: 6,\n        },\n      });\n    }\n    const others = next() || [];\n    return [...menus, ...others];\n  };\n}\n"],"file":"createContextMenu.js"}