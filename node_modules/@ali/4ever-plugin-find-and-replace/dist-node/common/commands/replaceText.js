"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = replaceText;

var _everCangjie = require("@ali/4ever-cangjie");

function getFirstCharRangeAfterStart(startPoint) {
  return _everCangjie.RangeSelection.create({
    anchor: startPoint,
    focus: startPoint.moveForward()
  });
}

function normalizeSelection(controller) {
  const {
    selection
  } = controller.value;
  return controller.command(_everCangjie.Commands.moveBackward, 1).command(_everCangjie.Commands.userSelect, selection);
}

function replaceText(controller, focus, text) {
  const {
    value
  } = controller;
  const {
    document,
    decorations
  } = value;
  const focusDecoration = decorations.find(({
    mark,
    start
  }) => mark.type === 'match' && start.key === focus.key);

  if (!focusDecoration) {
    return controller;
  }

  const firstCharRange = getFirstCharRangeAfterStart(focusDecoration.start);
  const marks = document.getMarksAtRange(firstCharRange);
  return controller.command(_everCangjie.Commands.select, _everCangjie.RangeSelection.create({
    anchor: focusDecoration.start,
    focus: focusDecoration.end
  })).command(_everCangjie.Commands.del) // 在修订模式下，删除文字之后，需要校正选区位置
  .command(normalizeSelection).command(_everCangjie.Commands.insertText, text, marks);
}
//# sourceMappingURL=replaceText.js.map