{"version":3,"sources":["../../../src/mo/marks.ts"],"names":["Mark","MATCH_MARK_TYPE","MatchMark","TYPE","create","selected","type","data","isMatchMark","maybeMark","isMark"],"mappings":"AAAA,SAASA,IAAT,QAA2B,oBAA3B;AAEA,IAAMC,eAAe,GAAG,OAAxB;AAQA,OAAO,IAAMC,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAEF,eADiB;AAGvBG,EAAAA,MAHuB,kBAGhBC,QAHgB,EAGG;AACxB,WAAOL,IAAI,CAACI,MAAL,CAA2B;AAChCE,MAAAA,IAAI,EAAEL,eAD0B;AAEhCM,MAAAA,IAAI,EAAE;AAAEF,QAAAA,QAAQ,EAARA;AAAF;AAF0B,KAA3B,CAAP;AAID,GARsB;AAUvBG,EAAAA,WAVuB,uBAUXC,SAVW,EAU8B;AACnD,WAAOT,IAAI,CAACU,MAAL,CAAYD,SAAZ,KAA0BA,SAAS,CAACH,IAAV,KAAmBL,eAApD;AACD;AAZsB,CAAlB","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nconst MATCH_MARK_TYPE = 'match';\n\ninterface MatchMarkData extends Data {\n  selected: boolean;\n}\n\nexport type IMatchMark = Mark<MatchMarkData>;\n\nexport const MatchMark = {\n  TYPE: MATCH_MARK_TYPE,\n\n  create(selected: boolean) {\n    return Mark.create<MatchMarkData>({\n      type: MATCH_MARK_TYPE,\n      data: { selected },\n    });\n  },\n\n  isMatchMark(maybeMark: any): maybeMark is IMatchMark {\n    return Mark.isMark(maybeMark) && maybeMark.type === MATCH_MARK_TYPE;\n  },\n};\n"],"file":"marks.js"}