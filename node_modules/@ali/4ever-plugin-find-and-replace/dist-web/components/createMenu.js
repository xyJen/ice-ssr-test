import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { MenuItem } from '@ali/we-design';
import { toggleFindAndReplace, updateFindFragment } from "../common/actions";
export default function createMenu(ctlManager) {
  return function FindAndReplaceMenuItem(props) {
    var menuItem = props.menuItem,
        controller = props.controller;

    var title = menuItem.title,
        rest = _objectWithoutPropertiesLoose(menuItem, ["title"]);

    var isDisabled = controller.query('isDisableFindAndReplace');
    var handleClick = React.useCallback(function () {
      var mainController = ctlManager.mainController;

      if (!mainController) {
        return;
      }

      mainController.run('onAction', toggleFindAndReplace());
      var fragment = '';
      ctlManager.run(function (ctl) {
        var _ctl$value$fragment;

        var text = (_ctl$value$fragment = ctl.value.fragment) == null ? void 0 : _ctl$value$fragment.text;

        if (text) {
          fragment = text;
        }
      });

      if (fragment) {
        mainController.run('onAction', updateFindFragment(fragment));
      }
    }, []);
    return /*#__PURE__*/_createElement(MenuItem, _extends({}, rest, {
      menuKey: "findAndReplace",
      onClick: handleClick,
      disabled: isDisabled
    }), title || '');
  };
}
//# sourceMappingURL=createMenu.js.map