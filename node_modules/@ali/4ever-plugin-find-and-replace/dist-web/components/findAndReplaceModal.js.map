{"version":3,"sources":["../../../src/components/findAndReplaceModal.tsx"],"names":["React","useCallback","useEffect","useRef","useState","useScrollableContainer","FindAndReplacePortal","message","debounce","isKeyHotkey","toggleFindAndReplace","replaceText","updateFindText","updateSearchResult","updateFindFragment","isReadonlyMatch","scrollIntoFocus","DEFAULT_TAB_KEY","DEFAULT_REPLACE_TEXT","FindAndReplaceModal","props","draggableArea","initialPosition","isFindOnly","mainController","locale","ctlManager","onScrollIntoFocus","onFilter","onCustomScroll","findText","setFindText","focused","setFocused","modalRef","domRef","matches","run","ctl","query","value","data","searchResult","length","push","matchedCount","visible","findAndReplaceVisible","findFragment","focusIndex","isInit","idx","findIndex","match","selected","focusMatch","disableReplace","disableReplaceAll","every","container","window","debouncedUpdateFindText","text","runWithSchedule","handleFindInputChange","event","target","ctls","handleKeyDown","isFindHotKey","preventDefault","stopPropagation","fragment","current","querySelector","focus","handleMouseDown","dom","isFocus","Boolean","contains","document","addEventListener","removeEventListener","Promise","resolve","then","selectInput","handleFocusIndexChange","index","newFocusIndex","newFocusMatch","type","key","handleReplaceCurrent","targetText","handleReplaceAll","canReplaceMatches","filter","forEach","m","noSupportSearchCount","noSupportLeft","noSupportRight","info","handleVisibleChange","v"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Controller, useScrollableContainer } from '@ali/4ever-cangjie';\nimport { FindAndReplacePortal, message } from '@ali/we-design';\nimport type { FindAndReplace } from '@ali/we-design';\nimport { debounce } from 'lodash-es';\nimport { isKeyHotkey } from 'is-hotkey';\nimport {\n  toggleFindAndReplace,\n  replaceText,\n  updateFindText,\n  updateSearchResult,\n  updateFindFragment,\n} from '../common/actions';\nimport { isReadonlyMatch, scrollIntoFocus } from '../utils';\nimport type { ControllerManager } from '../utils';\nimport { IMatch } from '../utils/types';\n\nconst DEFAULT_TAB_KEY = 'find';\nconst DEFAULT_REPLACE_TEXT = '';\ninterface IFindAndReplaceModal {\n  mainController: Controller;\n  draggableArea: { top: number; bottom: number; right: number; left: number };\n  initialPosition: { marginTop: number; marginRight: number };\n  isFindOnly: boolean;\n  locale: Record<string, any>;\n  ctlManager: ControllerManager;\n  onScrollIntoFocus?: (role: string) => void;\n  onFilter?: (result: IMatch[]) => IMatch[];\n  onCustomScroll?: (dom: HTMLElement) => void;\n}\n\nconst FindAndReplaceModal: React.FC<IFindAndReplaceModal> = (props) => {\n  const {\n    draggableArea,\n    initialPosition,\n    isFindOnly,\n    mainController,\n    locale,\n    ctlManager,\n    onScrollIntoFocus,\n    onFilter,\n    onCustomScroll,\n  } = props;\n  const [findText, setFindText] = useState('');\n  const [focused, setFocused] = useState(true);\n\n  const modalRef = useRef<FindAndReplace>(null);\n  const domRef = useRef<HTMLDivElement>(null);\n\n  let matches: IMatch[] = [];\n  ctlManager.run((ctl) => {\n    const { data } = ctl.query('getDataValue') || ctl.value;\n    const { searchResult } = data;\n    if (searchResult?.length > 0) {\n      matches.push(...searchResult);\n    }\n  });\n\n  if (onFilter) {\n    matches = onFilter(matches);\n  }\n\n  const matchedCount = matches.length;\n\n  const { data } = mainController.value;\n  const visible = data.findAndReplaceVisible || false;\n  const { findFragment = '' } = data;\n\n  let focusIndex = 0;\n  let isInit = false;\n  if (matches.length > 0) {\n    const idx = matches.findIndex((match) => match.selected);\n    if (idx === -1) {\n      // 当存在 「匹配项」 但没有 「选中项」时初始化第一项为选中项\n      focusIndex = 1;\n      isInit = true;\n    } else {\n      focusIndex = idx + 1;\n    }\n  }\n\n  const focusMatch = matches[focusIndex - 1];\n  const disableReplace = isReadonlyMatch(focusMatch);\n  const disableReplaceAll = matches.every(isReadonlyMatch);\n\n  const container = useScrollableContainer() || window;\n\n  const debouncedUpdateFindText = useCallback(\n    debounce((text) => {\n      ctlManager.runWithSchedule((ctl) => {\n        ctl.run('onAction', updateFindText(text));\n      });\n    }, 200),\n    [ctlManager],\n  );\n\n  const handleFindInputChange = useCallback(\n    (event) => {\n      const text = typeof event === 'string' ? event : event.target.value;\n\n      debouncedUpdateFindText(text);\n      if (findFragment) {\n        mainController.run('onAction', updateFindFragment(''));\n      }\n      setFindText(text);\n    },\n    [debouncedUpdateFindText, findFragment, mainController],\n  );\n\n  // 新增实例时更新下搜索结果\n  useEffect(() => {\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', updateFindText(findText));\n    });\n  }, [ctlManager.ctls[ctlManager.ctls.length - 1]]);\n\n  // 绑定监听\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const isFindHotKey = isKeyHotkey('mod+f');\n      if (isFindHotKey(event)) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { findAndReplaceVisible } = mainController.value.data;\n\n        let fragment = '';\n        ctlManager.run((ctl) => {\n          const text = ctl.value.fragment?.text;\n          if (text) {\n            fragment = text;\n          }\n        });\n\n        if (!findAndReplaceVisible) {\n          mainController.run('onAction', toggleFindAndReplace(true));\n        } else {\n          // 查找替换组件没有提供设置 input focus 的方法，这里临时处理下\n          (domRef.current?.querySelector('[aria-hidden=\"false\"] input[data-testid=\"J_findValueInput\"]') as HTMLInputElement)?.focus();\n        }\n\n        if (fragment) {\n          mainController.run('onAction', updateFindFragment(fragment));\n        }\n      }\n    };\n\n    const handleMouseDown = (event) => {\n      const dom = domRef.current;\n      if (!dom) {\n        return;\n      }\n      const isFocus = Boolean(dom.contains(event.target));\n      setFocused(isFocus);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('mousedown', handleMouseDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('mousedown', handleMouseDown);\n    };\n  }, [ctlManager, mainController]);\n\n  // 从选区初始化 findText\n  useEffect(() => {\n    if (findFragment) {\n      handleFindInputChange(findFragment);\n\n      // 这里延迟一下，等输入框有内容后再选中\n      Promise.resolve().then(() => {\n        if (modalRef.current) {\n          modalRef.current.selectInput();\n        }\n      });\n      setFocused(true);\n    }\n  }, [findFragment, handleFindInputChange]);\n\n  const handleFocusIndexChange = (index: number) => {\n    const newFocusIndex = (matchedCount + index - 1) % matchedCount;\n    const newFocusMatch = matches[newFocusIndex];\n\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', updateSearchResult(newFocusMatch));\n      if (newFocusMatch) {\n        onScrollIntoFocus && onScrollIntoFocus(newFocusMatch.type);\n        scrollIntoFocus(newFocusMatch.key, ctl, container, findText, onCustomScroll);\n      }\n    });\n  };\n\n  const handleReplaceCurrent = (targetText: string) => {\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', replaceText(focusMatch, targetText));\n    });\n\n    const newFocusIndex =\n      focusIndex === matchedCount ? focusIndex - 2 : focusIndex;\n    const newFocusMatch = matches[newFocusIndex];\n    ctlManager.runWithSchedule((ctl) => {\n      ctl.run('onAction', updateSearchResult(newFocusMatch));\n      if (newFocusMatch) {\n        onScrollIntoFocus && onScrollIntoFocus(newFocusMatch.type);\n        scrollIntoFocus(newFocusMatch.key, ctl, container, findText, onCustomScroll);\n      }\n    });\n  };\n\n  const handleReplaceAll = (targetText: string) => {\n    const canReplaceMatches = matches.filter(\n      (match) => !isReadonlyMatch(match),\n    );\n    canReplaceMatches.forEach((m) =>\n      ctlManager.runWithSchedule((ctl) => {\n        ctl.run('onAction', replaceText(m, targetText));\n      }));\n\n    // 提示不支持替换的元素个数\n    const noSupportSearchCount = matchedCount - canReplaceMatches.length;\n    if (noSupportSearchCount) {\n      const { noSupportLeft, noSupportRight } = locale;\n      message.info(\n        `${noSupportLeft} ${noSupportSearchCount} ${noSupportRight}`,\n        2,\n      );\n    }\n  };\n\n  const handleVisibleChange = (v: boolean) => {\n    mainController.run('onAction', toggleFindAndReplace(v));\n  };\n\n  // 关闭时清除搜索\n  useEffect(() => {\n    if (!visible) {\n      handleFindInputChange('');\n    }\n  }, [visible, handleFindInputChange]);\n\n  // 初始化第一个匹配项为选中项\n  useEffect(() => {\n    if (isInit) {\n      ctlManager.runWithSchedule((ctl) => {\n        ctl.run('onAction', updateSearchResult(focusMatch));\n        onScrollIntoFocus && onScrollIntoFocus(focusMatch.type);\n        scrollIntoFocus(focusMatch.key, ctl, container, findText, onCustomScroll);\n      });\n    }\n  }, [ctlManager, focusMatch, isInit]);\n\n  return (\n    <FindAndReplacePortal\n      visible={visible}\n      focused={focused}\n      isFindOnly={isFindOnly}\n      defaultTabKey={DEFAULT_TAB_KEY}\n      disableReplace={disableReplace}\n      disableReplaceAll={disableReplaceAll}\n      zIndex={1000}\n      draggableArea={draggableArea}\n      initialPosition={initialPosition}\n      testid=\"FindAndReplacePortal\"\n      findText={findText}\n      focusIndex={focusIndex}\n      matchedCount={matchedCount}\n      defaultReplaceText={DEFAULT_REPLACE_TEXT}\n      wrappedRef={modalRef}\n      domRef={domRef}\n      onFindInputChange={handleFindInputChange}\n      onFocusIndexChange={handleFocusIndexChange}\n      onReplaceCurrent={handleReplaceCurrent}\n      onReplaceAll={handleReplaceAll}\n      onVisibleChange={handleVisibleChange}\n    />\n  );\n};\n\nexport default FindAndReplaceModal;\n"],"file":"findAndReplaceModal.js"}