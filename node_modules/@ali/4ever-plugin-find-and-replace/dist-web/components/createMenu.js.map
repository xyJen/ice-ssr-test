{"version":3,"sources":["../../../src/components/createMenu.tsx"],"names":["React","MenuItem","toggleFindAndReplace","updateFindFragment","createMenu","ctlManager","FindAndReplaceMenuItem","props","menuItem","controller","title","rest","isDisabled","query","handleClick","useCallback","mainController","run","fragment","ctl","text","value"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,oBAAT,EAA+BC,kBAA/B;AAGA,eAAe,SAASC,UAAT,CAAoBC,UAApB,EAAmD;AAChE,SAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA,QACpCC,QADoC,GACXD,KADW,CACpCC,QADoC;AAAA,QAC1BC,UAD0B,GACXF,KADW,CAC1BE,UAD0B;;AAAA,QAEpCC,KAFoC,GAEjBF,QAFiB,CAEpCE,KAFoC;AAAA,QAE1BC,IAF0B,iCAEjBH,QAFiB;;AAG5C,QAAMI,UAAU,GAAGH,UAAU,CAACI,KAAX,CAAiB,yBAAjB,CAAnB;AAEA,QAAMC,WAAW,GAAGd,KAAK,CAACe,WAAN,CAAkB,YAAM;AAAA,UAClCC,cADkC,GACfX,UADe,CAClCW,cADkC;;AAE1C,UAAI,CAACA,cAAL,EAAqB;AACnB;AACD;;AAEDA,MAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+Bf,oBAAoB,EAAnD;AAEA,UAAIgB,QAAQ,GAAG,EAAf;AACAb,MAAAA,UAAU,CAACY,GAAX,CAAe,UAACE,GAAD,EAAS;AAAA;;AACtB,YAAMC,IAAI,0BAAGD,GAAG,CAACE,KAAJ,CAAUH,QAAb,qBAAG,oBAAoBE,IAAjC;;AACA,YAAIA,IAAJ,EAAU;AACRF,UAAAA,QAAQ,GAAGE,IAAX;AACD;AACF,OALD;;AAMA,UAAIF,QAAJ,EAAc;AACZF,QAAAA,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+Bd,kBAAkB,CAACe,QAAD,CAAjD;AACD;AACF,KAlBmB,EAkBjB,EAlBiB,CAApB;AAoBA,wBACE,eAAC,QAAD,eAAcP,IAAd;AAAoB,MAAA,OAAO,EAAC,gBAA5B;AAA6C,MAAA,OAAO,EAAEG,WAAtD;AAAmE,MAAA,QAAQ,EAAEF;AAA7E,QACGF,KAAK,IAAI,EADZ,CADF;AAKD,GA9BD;AA+BD","sourcesContent":["import * as React from 'react';\nimport { MenuItem } from '@ali/we-design';\nimport { toggleFindAndReplace, updateFindFragment } from '../common/actions';\nimport type { ControllerManager } from '../utils';\n\nexport default function createMenu(ctlManager: ControllerManager) {\n  return function FindAndReplaceMenuItem(props) {\n    const { menuItem, controller } = props;\n    const { title, ...rest } = menuItem;\n    const isDisabled = controller.query('isDisableFindAndReplace');\n\n    const handleClick = React.useCallback(() => {\n      const { mainController } = ctlManager;\n      if (!mainController) {\n        return;\n      }\n\n      mainController.run('onAction', toggleFindAndReplace());\n\n      let fragment = '';\n      ctlManager.run((ctl) => {\n        const text = ctl.value.fragment?.text;\n        if (text) {\n          fragment = text;\n        }\n      });\n      if (fragment) {\n        mainController.run('onAction', updateFindFragment(fragment));\n      }\n    }, []);\n\n    return (\n      <MenuItem {...rest} menuKey=\"findAndReplace\" onClick={handleClick} disabled={isDisabled}>\n        {title || ''}\n      </MenuItem>\n    );\n  };\n}\n"],"file":"createMenu.js"}