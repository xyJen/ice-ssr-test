import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { toggleFindAndReplace, updateFindFragment } from "../../common/actions";
import { environment } from '@ali/4ever-cangjie';
import { SearchButton } from '@ali/4ever-component';
var MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';
var SHORTCUT = MOD + "+F";
export var FindAndReplaceButton = function FindAndReplaceButton(props) {
  var controller = props.controller,
      disabled = props.disabled,
      ctlManager = props.ctlManager,
      locale = props.locale,
      tooltipProp = props.tooltip,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "disabled", "ctlManager", "locale", "tooltip"]);

  var _controller$value$dat = controller.value.data,
      data = _controller$value$dat === void 0 ? {} : _controller$value$dat;
  var isVisible = data.findAndReplaceVisible || false;
  var isDisabled = disabled || controller.query('isDisableFindAndReplace');
  var handleClick = React.useCallback(function () {
    var mainController = ctlManager.mainController;

    if (!mainController) {
      return;
    }

    mainController.run('onAction', toggleFindAndReplace());
    var fragment = '';
    ctlManager.run(function (ctl) {
      var _ctl$value$fragment;

      var text = (_ctl$value$fragment = ctl.value.fragment) == null ? void 0 : _ctl$value$fragment.text;

      if (text) {
        fragment = text;
      }
    });

    if (fragment) {
      mainController.run('onAction', updateFindFragment(fragment));
    }
  }, []);
  var tooltip = React.useMemo(function () {
    return _extends({
      title: (locale == null ? void 0 : locale.buttonTitle) || 'Search',
      shortCut: SHORTCUT
    }, tooltipProp);
  }, []);
  return /*#__PURE__*/_createElement(SearchButton, _extends({
    testid: "bi-toolbar-search",
    active: isVisible,
    onClick: handleClick,
    title: locale == null ? void 0 : locale.buttonTitle,
    disabled: isDisabled,
    role: 'findandreplace',
    tooltip: tooltip
  }, rest));
};
//# sourceMappingURL=FindAndReplaceButton.js.map