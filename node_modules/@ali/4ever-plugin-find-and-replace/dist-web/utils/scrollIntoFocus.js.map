{"version":3,"sources":["../../../src/utils/scrollIntoFocus.ts"],"names":["domUtils","createPerfLazyRenderPlugin","setAncestorsUnfold","isPi","transferKey","calcPageOffsetTop","document","pageIndex","scale","gap","data","pagesInfo","pages","nodes","slice","pageOffsetTop","reduce","top","page","rect","pi","currentHeight","height","calcPageOffsetTopOfKey","key","getFurthestAncestor","path","getPath","scrollToTop","target","Window","scrollTo","scrollX","scrollTop","scrollIntoVirtualPage","controller","container","value","virtualMap","isVirtual","offsetTop","scrollIntoFocus","findText","onCustomScroll","window","transferredKey","enableVirtualize","scrollToNodeByKey","closestBlock","getClosestBlock","selectedDom","findDOMNodeSafely","getParent","showPrunedElements","scrollIntoView","block","inline","behavior"],"mappings":"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","sourcesContent":["import {\n  Controller,\n  domUtils,\n  createPerfLazyRenderPlugin,\n  Document,\n} from '@ali/4ever-cangjie';\n\nimport setAncestorsUnfold from './setAncestorsUnfold';\nimport isPi from './isPi';\nimport transferKey from './transferKey';\n\nconst calcPageOffsetTop = (\n  document: Document,\n  pageIndex: number,\n  scale = 1.0,\n): number => {\n  const gap = document.data?.pagesInfo?.gap || 0;\n  // 计算页面的整体 offset 高度\n  const pages = document.nodes.slice(0, pageIndex);\n  const pageOffsetTop = pages.reduce((top, page) => {\n    const { rect } = page.data.pi;\n    const currentHeight = (rect.height + gap) * scale;\n    return top + currentHeight;\n  }, 0);\n\n  return pageOffsetTop;\n};\n\nconst calcPageOffsetTopOfKey = (document: Document, key: string): number => {\n  // 找到锚点所在的 page\n  const page = document.getFurthestAncestor(key);\n  const path = document.getPath(page!.key);\n  // 当前 page 的页数\n  const pageIndex = path![0];\n  return calcPageOffsetTop(document, pageIndex);\n};\n\nconst scrollToTop = (target: HTMLElement | Window, top: number) => {\n  if (target instanceof Window) {\n    target.scrollTo(target.scrollX, top);\n  } else {\n    target.scrollTop = top;\n  }\n};\n\nconst scrollIntoVirtualPage = (\n  key: string,\n  controller: Controller,\n  container: HTMLElement | Window,\n) => {\n  const { document } = controller.value;\n  const virtualMap: Record<string, boolean> = document.data.virtualMap || {};\n\n  // 找到锚点所在的 page\n  const page = document.getFurthestAncestor(key);\n\n  // 是否虚拟化\n  const isVirtual = page ? !!virtualMap[page.key] : false;\n  if (isVirtual && container) {\n    const offsetTop = calcPageOffsetTopOfKey(document, key);\n    scrollToTop(container, offsetTop);\n  }\n};\n\nconst scrollIntoFocus = async (\n  key: string,\n  controller: Controller,\n  container: HTMLElement | Window = window,\n  findText?: string,\n  onCustomScroll?: (dom: HTMLElement) => void,\n) => {\n  const { document } = controller.value;\n  const transferredKey = transferKey(key, controller, findText);\n\n  if (isPi(controller)) {\n    // 如果页面有虚拟化, 先滚动到虚拟化页面\n    scrollIntoVirtualPage(transferredKey, controller, container);\n  } else {\n    // 如果内容在标题折叠内，自动展开标题折叠\n    try {\n      if (controller.enableVirtualize) {\n        await domUtils.scrollToNodeByKey(transferredKey, controller);\n      }\n      const closestBlock = document.getClosestBlock(transferredKey);\n      if (closestBlock) {\n        setAncestorsUnfold(controller, closestBlock);\n      }\n    } catch {\n      // 不存在标题折叠\n    }\n  }\n\n  const selectedDom =\n    domUtils.findDOMNodeSafely(transferredKey) ||\n    domUtils.findDOMNodeSafely(document.getParent(transferredKey)?.key || '');\n\n  if (selectedDom) {\n    createPerfLazyRenderPlugin.showPrunedElements(selectedDom);\n    if (onCustomScroll) {\n      onCustomScroll(selectedDom);\n    } else {\n      selectedDom.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'auto',\n      });\n    }\n  }\n  return controller;\n};\n\nexport default scrollIntoFocus;\n"],"file":"scrollIntoFocus.js"}