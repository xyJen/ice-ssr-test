{"version":3,"sources":["../../../../src/common/handlers/createOnChange.ts"],"names":["Document","Text","Decoration","Path","TextPoint","Injection","equal","mergeData","isTextMatch","getNoMatchedDecorations","isDel","MatchMark","emptyDocument","create","isPathAboveOrSame","path","target","isAncestor","compare","getFocusIndex","searchResult","findIndex","match","selected","diffNodes","prevNodes","currentNodes","controller","prevDocument","currentDocument","insert","remove","forEach","currentNode","focusIndex","prevNodeAtIndex","key","push","getPath","isContentSame","isText","leaves","nodes","ret","prevNode","idx","currentNodeAtIndex","diffDocument","document","searchInNodeContent","node","content","findText","role","result","keywords","toLowerCase","indexOf","endOffset","startOffset","length","type","extraData","searchInTextNode","text","createDecorationWithMatch","start","offset","end","mark","applyTextMatches","textMatches","decorations","value","matchedDecorations","map","noMatchedDecorations","setDecorations","concat","dispatchNoTextMatches","noTextMatches","injections","matchedInjections","data","searchMatch","otherInjections","filter","setInjections","search","getClosestByPath","query","queryResult","readonly","forEachDescendant","n","patch","patcher","appliedRemoveResult","nodePath","some","inserted","getNodeByPath","prevResult","sort","a","b","isBefore","dispatchSearchResults","unifiedSearchResults","reduce","matches","otherMatches","createOnChange","config","cache","isFindOnly","onFilter","next","prevFindText","pi","undefined","isFindTextChanged","prevFocusIndex","isFocusIndexChanged","roleWithAbility","newSearchResult","newIndex","Math","min","newSearchResultWithSelected","s","index","filteredSearchResult"],"mappings":"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","sourcesContent":["import { Inline } from '@ali/4ever-cangjie';\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport {\n  Document,\n  Text,\n  Decoration,\n  Path,\n  Controller,\n  Node,\n  TextPoint,\n  Injection,\n  Block,\n} from '@ali/4ever-cangjie';\nimport equal from 'fast-deep-equal';\nimport {\n  mergeData,\n  isTextMatch,\n  getNoMatchedDecorations,\n  isDel,\n} from '../../utils';\nimport { FindAndReplaceConfig, ICache, IMatch } from '../../utils/types';\nimport { MatchMark } from '../../mo/marks';\n\nconst emptyDocument = Document.create();\n\nconst isPathAboveOrSame = (path: Path, target: Path) => {\n  return Path.isAncestor(path, target) || Path.compare(path, target) === 0;\n};\n\nconst getFocusIndex = (searchResult: IMatch[]) =>\n  searchResult.findIndex((match) => match.selected);\n\nconst diffNodes = (\n  prevNodes: Node[],\n  currentNodes: Node[],\n  {\n    prevDocument,\n    currentDocument,\n  }: { prevDocument: Document; currentDocument: Document },\n  controller: Controller,\n) => {\n  let insert: Path[] = [];\n  let remove: Path[] = [];\n\n  currentNodes.forEach((currentNode, focusIndex) => {\n    const prevNodeAtIndex = prevNodes[focusIndex];\n    if (!prevNodeAtIndex || prevNodeAtIndex.key !== currentNode.key) {\n      insert.push(currentDocument.getPath(currentNode.key)!);\n      return;\n    }\n\n    // 编辑器中，不存在修改节点类型的行为，所以 key 相等，必然同时(不)为 Text\n    const isContentSame = Text.isText(currentNode)\n      ? // PERFORMANCE: 不使用 node.text 是为了避免遍历 leaves 以生成 text\n    // @ts-ignore\n      equal(currentNode.leaves, prevNodeAtIndex.leaves)\n      : // @ts-ignore\n      equal(currentNode.nodes, prevNodeAtIndex.nodes);\n    if (isContentSame) {\n      return;\n    }\n    if (Text.isText(currentNode)) {\n      // update = remove + insert\n      remove.push(prevDocument.getPath(prevNodeAtIndex.key)!);\n      insert.push(currentDocument.getPath(currentNode.key)!);\n\n      return;\n    }\n\n    const ret = diffNodes(\n      // @ts-ignore\n      prevNodeAtIndex.nodes,\n      // @ts-ignore\n      currentNode.nodes,\n      { prevDocument, currentDocument },\n      controller,\n    );\n    insert = [...insert, ...ret.insert];\n    remove = [...remove, ...ret.remove];\n  });\n\n  prevNodes.forEach((prevNode, idx) => {\n    const currentNodeAtIndex = currentNodes[idx];\n    if (!currentNodeAtIndex || currentNodeAtIndex.key !== prevNode.key) {\n      remove.push(prevDocument.getPath(prevNode.key)!);\n    }\n  });\n\n  return { insert, remove };\n};\n\nconst diffDocument = (\n  prevDocument: Document,\n  document: Document,\n  controller: Controller,\n) => {\n  return diffNodes(\n    prevDocument.nodes,\n    document.nodes,\n    {\n      prevDocument,\n      currentDocument: document,\n    },\n    controller,\n  );\n};\n\nconst searchInNodeContent = (\n  node: Text,\n  content: string,\n  findText: string,\n  role: string,\n) => {\n  const result: any[] = [];\n  const keywords = findText.toLowerCase();\n  content = content.toLowerCase();\n\n  if (content.indexOf(keywords) === -1) {\n    return result;\n  }\n  let endOffset = 0;\n  do {\n    const startOffset = content.indexOf(keywords, endOffset);\n    if (startOffset === -1) {\n      break;\n    }\n\n    endOffset = startOffset + keywords.length;\n    result.push({\n      type: `${role}text`,\n      selected: false,\n      key: node.key,\n      extraData: { startOffset, endOffset },\n    });\n  } while (endOffset <= content.length);\n\n  return result;\n};\n\nconst searchInTextNode = (node: Text, findText: string, role: string) => {\n  const content = node.text;\n  const result = searchInNodeContent(node, content, findText, role);\n  return result;\n};\n\nconst createDecorationWithMatch = (match: IMatch) => {\n  const { key, selected, extraData } = match;\n\n  const start = TextPoint.create({ key, offset: extraData?.startOffset });\n  const end = TextPoint.create({ key, offset: extraData?.endOffset });\n  const mark = MatchMark.create(selected || false);\n\n  return Decoration.create({ start, end, mark });\n};\n\nconst applyTextMatches = (textMatches: IMatch[], controller: Controller) => {\n  const { decorations } = controller.value;\n  const matchedDecorations = textMatches.map(createDecorationWithMatch);\n  const noMatchedDecorations = getNoMatchedDecorations(decorations);\n  controller.setDecorations(matchedDecorations.concat(noMatchedDecorations));\n};\n\nconst dispatchNoTextMatches = (\n  noTextMatches: IMatch[],\n  controller: Controller,\n) => {\n  const { injections } = controller.value;\n  const matchedInjections = noTextMatches.map((match) => {\n    const { key } = match;\n    return Injection.create({ key, data: { searchMatch: match } });\n  });\n  const otherInjections = injections.filter(({ data }) => !data.searchMatch);\n  controller.setInjections([...matchedInjections, ...otherInjections]);\n};\n\nconst search = (\n  node: Node,\n  controller: Controller,\n  role: string,\n  result: IMatch[] = [],\n) => {\n  const {\n    data: { findText },\n    document,\n  } = controller.value;\n  if (Text.isText(node)) {\n    // 防止修订模式下被替换多次\n    if (document.getClosestByPath(document.getPath(node.key), isDel)) {\n      return result;\n    }\n    result = [...result, ...searchInTextNode(node, findText, role)];\n  } else if (controller.query('isSupportSearch', node as Inline)) {\n    const queryResult = controller.query('getSearchResult', findText, node as Inline);\n    if (queryResult) {\n      result.push({ ...queryResult, type: `${role}${queryResult.readonly ? 'readonly_' : ''}${queryResult.type}` });\n    }\n  } else {\n    (node as Block).forEachDescendant((n) => {\n      if (Text.isText(n) || controller.query('isSupportSearch', n as Inline)) {\n        result = search(n, controller, role, result);\n      }\n    });\n  }\n  return result;\n};\n\nconst patch = (\n  searchResult: IMatch[],\n  patcher: { remove: Path[]; insert: Path[] },\n  controller: Controller,\n  role: string,\n) => {\n  const { document } = controller.value;\n  const { remove, insert } = patcher;\n  const appliedRemoveResult = searchResult.filter(({ key }) => {\n    const nodePath = document.getPath(key);\n    if (!nodePath) return false;\n    return !remove.some((path) => isPathAboveOrSame(path, nodePath));\n  });\n\n  let inserted = [] as any[];\n  insert.forEach((path) => {\n    const node = document.getNodeByPath(path);\n    if (!node) {\n      return;\n    }\n    inserted = [...inserted, ...search(node, controller, role)];\n  });\n  inserted = inserted.filter((result) => {\n    return (\n      appliedRemoveResult.findIndex((prevResult) =>\n        equal(prevResult, result)) === -1\n    );\n  });\n  return appliedRemoveResult.concat(inserted).sort((a, b) => {\n    if (a.key === b.key) {\n      return a.extraData?.endOffset - b.extraData?.endOffset;\n    }\n    return Path.isBefore(document.getPath(a.key)!, document.getPath(b.key)!)\n      ? -1\n      : 1;\n  });\n};\n\n// 分发统一查找替换结果\n// text 类型由查找替换插件处理\n// 其他类型通过 injections 注入 globalSearchMatches 到对应节点 data\nconst dispatchSearchResults = (\n  unifiedSearchResults: IMatch[],\n  controller: Controller,\n) => {\n  const [textMatches, otherMatches] = unifiedSearchResults.reduce(\n    (matches, match) => {\n      isTextMatch(match) ? matches[0].push(match) : matches[1].push(match);\n      return matches;\n    },\n    [[], []] as IMatch[][],\n  );\n  applyTextMatches(textMatches, controller);\n  dispatchNoTextMatches(otherMatches, controller);\n};\nconst createOnChange = (config: FindAndReplaceConfig, cache: ICache) => {\n  const { role = '', isFindOnly, onFilter } = config;\n  return (controller: Controller, next: Function) => {\n    const { data, document } = controller.value;\n    const { findText, prevFindText } = data;\n    let { searchResult = [] } = data;\n\n    // 不响应非查找替换变更\n    if (!prevFindText && !findText) {\n      return next();\n    }\n\n    if (document.data.pi) {\n      return next();\n    }\n\n    // 查找文本为空，清除\n    if (!findText) {\n      dispatchSearchResults([], controller);\n      mergeData(controller, { searchResult: [], prevFindText: undefined });\n      return next();\n    }\n\n    const isFindTextChanged = findText !== prevFindText;\n    const focusIndex = getFocusIndex(searchResult);\n    if (isFindTextChanged) {\n      cache.prevFocusIndex = -1;\n    }\n    const isFocusIndexChanged = focusIndex !== cache.prevFocusIndex;\n\n    const prevDocument = isFindTextChanged\n      ? emptyDocument\n      : cache.prevDocument || emptyDocument;\n\n    // 查找文本和文档都没有变化\n    if (!isFindTextChanged && equal(document, prevDocument)) {\n      // 只有索引变化\n      if (isFocusIndexChanged) {\n        dispatchSearchResults(searchResult, controller);\n        cache.prevFocusIndex = focusIndex;\n      }\n      return next();\n    }\n\n    if (isFindTextChanged) {\n      searchResult = [];\n    }\n\n    const patcher = diffDocument(prevDocument, document, controller);\n\n    const roleWithAbility = `${role}_${isFindOnly ? 'readonly_' : ''}`;\n\n    const newSearchResult = patch(\n      searchResult,\n      patcher,\n      controller,\n      roleWithAbility,\n    );\n\n    // 如果之前有选中项，document 变更时维持选中项不变\n    // fix: 修改选中项所在行文本, 选中项丢失\n    const idx = cache.prevFocusIndex;\n    const newIndex = Math.min(idx, newSearchResult.length - 1);\n    const newSearchResultWithSelected = newSearchResult.map((s, index) => {\n      if (index === newIndex) {\n        return { ...s, selected: true };\n      }\n      return s;\n    });\n\n    const filteredSearchResult = onFilter ? onFilter(newSearchResultWithSelected) : newSearchResultWithSelected;\n    dispatchSearchResults(filteredSearchResult, controller);\n\n    mergeData(controller, {\n      prevFindText: findText,\n      searchResult: filteredSearchResult,\n    });\n    cache.prevDocument = document;\n\n    return next();\n  };\n};\n\nexport default createOnChange;\n"],"file":"createOnChange.js"}