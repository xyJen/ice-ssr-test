import { FIND_AND_REPLACE_TOGGLE, REPLACE_TEXT_AT_DECORATION, UPDATE_FIND_TEXT, UPDATE_SEARCH_RESULT, UPDATE_FIND_FRAGMENT } from "../actions";
import toggleFindAndReplace from "../commands/toggleFindAndReplace";
import replaceText from "../commands/replaceText";
import updateFindText from "../commands/updateFindText";
import updateSearchResult from "../commands/updateSearchResult";
import updateFindFragment from "../commands/updateFindFragment";
export default function onAction(action, controller, next) {
  var type = action.type,
      _action$payload = action.payload,
      payload = _action$payload === void 0 ? {} : _action$payload;

  if (type === FIND_AND_REPLACE_TOGGLE) {
    var visible = payload.visible;
    return toggleFindAndReplace(controller, visible);
  } else if (type === REPLACE_TEXT_AT_DECORATION) {
    var focus = payload.focus,
        text = payload.text;
    return replaceText(controller, focus, text);
  } else if (type === UPDATE_FIND_TEXT) {
    var findText = payload.findText;
    return updateFindText(controller, findText);
  } else if (type === UPDATE_SEARCH_RESULT) {
    var _focus = payload.focus;
    return updateSearchResult(controller, _focus);
  } else if (type === UPDATE_FIND_FRAGMENT) {
    var findFragment = payload.findFragment;
    return updateFindFragment(controller, findFragment);
  }

  return next();
}
//# sourceMappingURL=onAction.js.map