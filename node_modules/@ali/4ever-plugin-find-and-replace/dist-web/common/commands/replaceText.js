import { RangeSelection, Commands } from '@ali/4ever-cangjie';

function getFirstCharRangeAfterStart(startPoint) {
  return RangeSelection.create({
    anchor: startPoint,
    focus: startPoint.moveForward()
  });
}

function normalizeSelection(controller) {
  var selection = controller.value.selection;
  return controller.command(Commands.moveBackward, 1).command(Commands.userSelect, selection);
}

export default function replaceText(controller, focus, text) {
  var value = controller.value;
  var document = value.document,
      decorations = value.decorations;
  var focusDecoration = decorations.find(function (_ref) {
    var mark = _ref.mark,
        start = _ref.start;
    return mark.type === 'match' && start.key === focus.key;
  });

  if (!focusDecoration) {
    return controller;
  }

  var firstCharRange = getFirstCharRangeAfterStart(focusDecoration.start);
  var marks = document.getMarksAtRange(firstCharRange);
  return controller.command(Commands.select, RangeSelection.create({
    anchor: focusDecoration.start,
    focus: focusDecoration.end
  })).command(Commands.del) // 在修订模式下，删除文字之后，需要校正选区位置
  .command(normalizeSelection).command(Commands.insertText, text, marks);
}
//# sourceMappingURL=replaceText.js.map