{"version":3,"sources":["../../../../src/common/commands/replaceText.ts"],"names":["RangeSelection","Commands","getFirstCharRangeAfterStart","startPoint","create","anchor","focus","moveForward","normalizeSelection","controller","selection","value","command","moveBackward","userSelect","replaceText","text","document","decorations","focusDecoration","find","mark","start","type","key","firstCharRange","marks","getMarksAtRange","select","end","del","insertText"],"mappings":"AAAA,SACEA,cADF,EAEEC,QAFF,QAKO,oBALP;;AAQA,SAASC,2BAAT,CAAqCC,UAArC,EAA4D;AAC1D,SAAOH,cAAc,CAACI,MAAf,CAAsB;AAC3BC,IAAAA,MAAM,EAAEF,UADmB;AAE3BG,IAAAA,KAAK,EAAEH,UAAU,CAACI,WAAX;AAFoB,GAAtB,CAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,UAA5B,EAAoD;AAAA,MAC1CC,SAD0C,GAC5BD,UAAU,CAACE,KADiB,CAC1CD,SAD0C;AAElD,SAAOD,UAAU,CACdG,OADI,CACIX,QAAQ,CAACY,YADb,EAC2B,CAD3B,EAEJD,OAFI,CAEIX,QAAQ,CAACa,UAFb,EAEyBJ,SAFzB,CAAP;AAGD;;AAED,eAAe,SAASK,WAAT,CACbN,UADa,EAEbH,KAFa,EAGbU,IAHa,EAIb;AAAA,MACQL,KADR,GACkBF,UADlB,CACQE,KADR;AAAA,MAEQM,QAFR,GAEkCN,KAFlC,CAEQM,QAFR;AAAA,MAEkBC,WAFlB,GAEkCP,KAFlC,CAEkBO,WAFlB;AAIA,MAAMC,eAAe,GAAGD,WAAW,CAACE,IAAZ,CACtB;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,KAAT,QAASA,KAAT;AAAA,WAAqBD,IAAI,CAACE,IAAL,KAAc,OAAd,IAAyBD,KAAK,CAACE,GAAN,KAAclB,KAAK,CAACkB,GAAlE;AAAA,GADsB,CAAxB;;AAIA,MAAI,CAACL,eAAL,EAAsB;AACpB,WAAOV,UAAP;AACD;;AAED,MAAMgB,cAAc,GAAGvB,2BAA2B,CAACiB,eAAe,CAACG,KAAjB,CAAlD;AACA,MAAMI,KAAK,GAAGT,QAAQ,CAACU,eAAT,CAAyBF,cAAzB,CAAd;AAEA,SACEhB,UAAU,CACPG,OADH,CAEIX,QAAQ,CAAC2B,MAFb,EAGI5B,cAAc,CAACI,MAAf,CAAsB;AACpBC,IAAAA,MAAM,EAAEc,eAAe,CAACG,KADJ;AAEpBhB,IAAAA,KAAK,EAAEa,eAAe,CAACU;AAFH,GAAtB,CAHJ,EAQGjB,OARH,CAQWX,QAAQ,CAAC6B,GARpB,EASE;AATF,GAUGlB,OAVH,CAUWJ,kBAVX,EAWGI,OAXH,CAWWX,QAAQ,CAAC8B,UAXpB,EAWgCf,IAXhC,EAWsCU,KAXtC,CADF;AAcD","sourcesContent":["import {\n  RangeSelection,\n  Commands,\n  Controller,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport { IMatch } from '../../utils/types';\n\nfunction getFirstCharRangeAfterStart(startPoint: TextPoint) {\n  return RangeSelection.create({\n    anchor: startPoint,\n    focus: startPoint.moveForward(),\n  });\n}\n\nfunction normalizeSelection(controller: Controller) {\n  const { selection } = controller.value;\n  return controller\n    .command(Commands.moveBackward, 1)\n    .command(Commands.userSelect, selection);\n}\n\nexport default function replaceText(\n  controller: Controller,\n  focus: IMatch,\n  text: string,\n) {\n  const { value } = controller;\n  const { document, decorations } = value;\n\n  const focusDecoration = decorations.find(\n    ({ mark, start }) => mark.type === 'match' && start.key === focus.key,\n  );\n\n  if (!focusDecoration) {\n    return controller;\n  }\n\n  const firstCharRange = getFirstCharRangeAfterStart(focusDecoration.start);\n  const marks = document.getMarksAtRange(firstCharRange);\n\n  return (\n    controller\n      .command(\n        Commands.select,\n        RangeSelection.create({\n          anchor: focusDecoration.start,\n          focus: focusDecoration.end,\n        }),\n      )\n      .command(Commands.del)\n      // 在修订模式下，删除文字之后，需要校正选区位置\n      .command(normalizeSelection)\n      .command(Commands.insertText, text, marks)\n  );\n}\n"],"file":"replaceText.js"}