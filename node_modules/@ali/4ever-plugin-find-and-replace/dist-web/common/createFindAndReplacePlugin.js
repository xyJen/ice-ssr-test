import createButton from "../components/createButton";
import createMenu from "../components/createMenu";
import onAction from "./handlers/onAction";
import createOnChange from "./handlers/createOnChange";
import createRenderContent from "./createRenderContent";
import createContextMenu from "./createContextMenu";
import renderMark from "./renderMark";
import { DEFAULT_CONFIG } from "../utils/constants";
import * as actions from "./actions";
import { ControllerManager } from "../utils";
import createRenderToolbar from "./createRenderToolbar";
import { key } from "../utils/meta";
var ctlManager = new ControllerManager();
export var factory = function factory(config) {
  var cache = {
    prevDocument: null,
    prevFocusIndex: -1
  };
  var _config$findAndReplac = config.findAndReplace,
      findAndReplace = _config$findAndReplac === void 0 ? DEFAULT_CONFIG : _config$findAndReplac;
  var renderContent = createRenderContent(findAndReplace, ctlManager);
  var onChange = createOnChange(findAndReplace, cache);
  return {
    key: key,
    contextMenu: createContextMenu(findAndReplace, ctlManager),
    toolbar: {
      buttons: {
        "default": createButton(ctlManager)
      },
      locale: (findAndReplace == null ? void 0 : findAndReplace.locale) || {}
    },
    menubar: {
      menu: createMenu(ctlManager)
    },
    renderMark: renderMark,
    renderContent: renderContent,
    renderToolbar: createRenderToolbar((findAndReplace == null ? void 0 : findAndReplace.locale) || {}, ctlManager),
    onAction: onAction,
    onChange: onChange,
    onCleanup: function onCleanup() {
      // @ts-ignore 清理缓存
      cache = null;
    }
  };
};
export var createFindAndReplacePlugin = function createFindAndReplacePlugin(config) {
  return factory(config);
};
createFindAndReplacePlugin.actions = actions;
//# sourceMappingURL=createFindAndReplacePlugin.js.map