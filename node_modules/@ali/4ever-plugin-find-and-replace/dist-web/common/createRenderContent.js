import React, { useEffect } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import FindAndReplaceModal from "../components/findAndReplaceModal";
import { DEFAULT_DRAGGABLE_AREA, DEFAULT_INITIAL_POSITION } from "../utils/constants";
export default function createRenderContent(config, ctlManager) {
  return function (props, controller, next) {
    var _config$draggableArea = config.draggableArea,
        draggableArea = _config$draggableArea === void 0 ? DEFAULT_DRAGGABLE_AREA : _config$draggableArea,
        _config$initialPositi = config.initialPosition,
        initialPosition = _config$initialPositi === void 0 ? DEFAULT_INITIAL_POSITION : _config$initialPositi,
        _config$isFindOnly = config.isFindOnly,
        isFindOnly = _config$isFindOnly === void 0 ? false : _config$isFindOnly,
        _config$forbidden = config.forbidden,
        forbidden = _config$forbidden === void 0 ? false : _config$forbidden,
        _config$locale = config.locale,
        locale = _config$locale === void 0 ? {} : _config$locale,
        role = config.role,
        onScrollIntoFocus = config.onScrollIntoFocus,
        onCustomScroll = config.onCustomScroll,
        onFilter = config.onFilter;

    if (forbidden) {
      return next();
    } // 收集所有实例


    ctlManager.push(controller, role);
    useEffect(function () {
      return function () {
        ctlManager.remove(controller);
      };
    }, [controller, role]);

    if (ctlManager.isMainController(controller)) {
      return /*#__PURE__*/_createElement(React.Fragment, null, next(), /*#__PURE__*/_createElement(FindAndReplaceModal, {
        mainController: controller,
        draggableArea: draggableArea,
        initialPosition: initialPosition,
        isFindOnly: isFindOnly,
        locale: locale,
        ctlManager: ctlManager,
        onScrollIntoFocus: onScrollIntoFocus,
        onFilter: onFilter,
        onCustomScroll: onCustomScroll
      }));
    } else {
      return next();
    }
  };
}
//# sourceMappingURL=createRenderContent.js.map