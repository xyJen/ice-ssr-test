import { toggleFindAndReplace, updateFindFragment } from "./actions";
export default function crateContextMenu(config, ctlManager) {
  var _ref = config || {},
      locale = _ref.locale;

  return function (controller, next) {
    var menus = [];
    var selection = controller.value.selection;
    var tableSelection = controller.query('tableSelection');

    var handleClick = function handleClick() {
      var mainController = ctlManager.mainController;

      if (!mainController) {
        return;
      }

      mainController.run('onAction', toggleFindAndReplace());
      var fragment = '';
      ctlManager.run(function (ctl) {
        var _ctl$value$fragment;

        var text = (_ctl$value$fragment = ctl.value.fragment) == null ? void 0 : _ctl$value$fragment.text;

        if (text) {
          fragment = text;
        }
      });

      if (fragment) {
        mainController.run('onAction', updateFindFragment(fragment));
      }
    };

    if (selection && selection.isExpanded && !tableSelection) {
      menus.push({
        name: locale == null ? void 0 : locale.buttonTitle,
        onClick: handleClick,
        key: 'find',
        options: {
          hotKey: 'mod+f',
          group: 6
        }
      });
    }

    var others = next() || [];
    return [].concat(menus, others);
  };
}
//# sourceMappingURL=createContextMenu.js.map