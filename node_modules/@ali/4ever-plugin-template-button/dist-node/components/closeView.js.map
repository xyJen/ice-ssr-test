{"version":3,"sources":["../../../src/components/closeView.tsx"],"names":["CloseView","props","isOnce","direction","isOpen","title","node","controller","placeholder","isSelected","editable","config","key","nodeKey","enable","locale","handleClick","nodes","value","document","getNode","length","fragment","Document","create","dispatch","data","editTooltip"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;uBAJ4B,a;;AAmB5B,MAAMA,SAA0B,GAAIC,KAAD,IAAW;AAC5C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,IAApC;AAA0CC,IAAAA,UAA1C;AAAsDC,IAAAA,WAAtD;AAAmEC,IAAAA,UAAnE;AAA+EC,IAAAA,QAA/E;AAAyFC,IAAAA,MAAM,GAAG;AAAlG,MAAyGV,KAA/G;AACA,QAAM;AAAEW,IAAAA,GAAG,EAAEC;AAAP,MAAmBP,IAAzB;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBJ,MAA3B;AAEA,QAAMK,WAAW,GAAG,wBAAY,MAAM;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAYV,UAAU,CAACW,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCP,OAAlC,CAAlB,CADoC,CAEpC;;AACA,QAAII,KAAK,CAACI,MAAN,KAAiB,CAAjB,IAAsB,wBAAYd,UAAZ,EAAwBU,KAAK,CAAC,CAAD,CAA7B,CAAtB,IAA2D,CAAC,mBAAOA,KAAK,CAAC,CAAD,CAAZ,CAAhE,EAAkF;AAChF;AACD;;AACD,UAAMK,QAAQ,GAAGC,sBAASC,MAAT,CAAgB;AAC/BP,MAAAA;AAD+B,KAAhB,CAAjB;;AAGAV,IAAAA,UAAU,CAACkB,QAAX,CAAoB,8BAApB,EAAoD;AAAEb,MAAAA,GAAG,EAAEC,OAAP;AAAgBa,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,QAAF;AAAYnB,QAAAA,SAAZ;AAAuBD,QAAAA;AAAvB;AAAtB,KAApD;AACD,GAVmB,EAUjB,CAACK,UAAD,EAAaJ,SAAb,EAAwBD,MAAxB,EAAgCW,OAAhC,CAViB,CAApB;AAYA,sBACE,eAAC,eAAD;AACE,IAAA,WAAW,EAAEE,MAAM,EAAEY,WADvB;AAEE,IAAA,UAAU,EAAEpB,UAFd;AAGE,IAAA,OAAO,EAAEM,OAHX;AAIE,IAAA,SAAS,EAAEC,MAAM,EAAEX,SAAR,IAAqB,IAArB,GAA4BA,SAA5B,GAAwC,IAJrD;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,UAAU,EAAEK,UANd;AAOE,IAAA,KAAK,EAAEJ,KAAK,IAAIG,WAPlB;AAQE,IAAA,QAAQ,EAAEQ,WARZ;AASE,IAAA,QAAQ,EAAEN;AATZ,IADF;AAaD,CA9BD;;eAgCeV,S","sourcesContent":["import React, { useCallback } from 'react';\nimport { Controller, Document, Block } from '@ali/4ever-cangjie';\nimport { isEmptyNode, isList } from '../bi/utils';\nimport { TemplateButtonConfig } from '../type';\nimport { TemplateButton } from '../mo';\nimport Button from './button';\n\ninterface Props {\n  direction: 'top' | 'bottom';\n  controller: Controller;\n  isOpen?: boolean;\n  isOnce: boolean;\n  title: string;\n  node: Block<any, any>;\n  placeholder: string;\n  isSelected: boolean;\n  editable: boolean;\n  config?: TemplateButtonConfig;\n}\n\nconst CloseView: React.FC<Props> = (props) => {\n  const { isOnce, direction, isOpen, title, node, controller, placeholder, isSelected, editable, config = {} } = props;\n  const { key: nodeKey } = node;\n  const { enable, locale } = config;\n\n  const handleClick = useCallback(() => {\n    const { nodes } = controller.value.document.getNode(nodeKey) as TemplateButton;\n    // 模板无内容，无需响应\n    if (nodes.length === 1 && isEmptyNode(controller, nodes[0]) && !isList(nodes[0])) {\n      return;\n    }\n    const fragment = Document.create({\n      nodes,\n    });\n    controller.dispatch('insertTemplateButtonFragment', { key: nodeKey, data: { fragment, direction, isOnce } });\n  }, [controller, direction, isOnce, nodeKey]);\n\n  return (\n    <Button\n      editTooltip={locale?.editTooltip}\n      controller={controller}\n      nodeKey={nodeKey}\n      direction={enable?.direction ?? true ? direction : null}\n      isOpen={isOpen}\n      isSelected={isSelected}\n      title={title || placeholder}\n      onInsert={handleClick}\n      editable={editable}\n    />\n  );\n};\n\nexport default CloseView;\n"],"file":"closeView.js"}