{"version":3,"sources":["../../../src/components/openView.tsx"],"names":["OpenView","props","direction","isOpen","isOnce","title","child","controller","nodeKey","placeholder","editable","config","isSelected","locale","enable","inputRef","compositingRef","compositing","setCompositing","innerTitle","setInnerTitle","innerTitleRef","current","enableBorderHighlight","query","isHover","hoverHandlers","focus","handleInputChange","e","value","target","dispatch","key","data","handleCompositionStart","handleCompositionEnd","handleDirectionChange","handleIsOnceChange","handleOnSave","editTooltip","nameTitle","contentTile","insertBottom","insertTop","insertOnce","save"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;uBAJ4B,a;;AA6B5B,MAAMA,QAAyB,GAAIC,KAAD,IAAW;AAC3C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,KAApC;AAA2CC,IAAAA,UAA3C;AAAuDC,IAAAA,OAAvD;AAAgEC,IAAAA,WAAhE;AAA6EC,IAAAA,QAA7E;AAAuFC,IAAAA,MAAM,GAAG,EAAhG;AAAoGC,IAAAA;AAApG,MAAmHX,KAAzH;AACA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBH,MAA3B;AAEA,QAAMI,QAAQ,GAAG,mBAAyB,IAAzB,CAAjB;AACA,QAAMC,cAAc,GAAG,mBAAO,KAAP,CAAvB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,qBAAS,KAAT,CAAtC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,qBAAS,MAAMf,KAAf,CAApC;AACA,QAAMgB,aAAa,GAAG,mBAAO,EAAP,CAAtB;AACAA,EAAAA,aAAa,CAACC,OAAd,GAAwBH,UAAxB;AACAH,EAAAA,cAAc,CAACM,OAAf,GAAyBL,WAAzB;AAEA,QAAMM,qBAAqB,GAAGhB,UAAU,CAACiB,KAAX,CAAiB,uBAAjB,CAA9B;AACA,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2B,6BAASH,qBAAT,CAAjC;AAEA,wBAAU,MAAM;AACd,QAAI,CAACN,WAAL,EAAkB;AAChBG,MAAAA,aAAa,CAACf,KAAD,CAAb;AACD;AACF,GAJD,EAIG,CAACY,WAAD,EAAcZ,KAAd,CAJH;AAMA,wBAAU,MAAM;AACd;AACAU,IAAAA,QAAQ,CAACO,OAAT,EAAkBK,KAAlB;AACD,GAHD,EAGG,EAHH;AAKA,QAAMC,iBAAiB,GAAG,wBACvBC,CAAD,IAA4C;AAC1C,UAAM;AAAEC,MAAAA;AAAF,QAAYD,CAAC,CAACE,MAApB;AACAX,IAAAA,aAAa,CAACU,KAAD,CAAb,CAF0C,CAG1C;;AACA,QAAI,CAACd,cAAc,CAACM,OAApB,EAA6B;AAC3Bf,MAAAA,UAAU,CAACyB,QAAX,CAAoB,mBAApB,EAAyC;AAAEC,QAAAA,GAAG,EAAEzB,OAAP;AAAgB0B,QAAAA,IAAI,EAAE;AAAE7B,UAAAA,KAAK,EAAEyB;AAAT;AAAtB,OAAzC;AACD;AACF,GARuB,EASxB,CAACvB,UAAD,EAAaC,OAAb,CATwB,CAA1B;AAYA,QAAM2B,sBAAsB,GAAG,wBAAY,MAAM;AAC/CjB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,QAAMkB,oBAAoB,GAAG,wBAAY,MAAM;AAC7ClB,IAAAA,cAAc,CAAC,KAAD,CAAd,CAD6C,CAE7C;;AACAX,IAAAA,UAAU,CAACyB,QAAX,CAAoB,mBAApB,EAAyC;AAAEC,MAAAA,GAAG,EAAEzB,OAAP;AAAgB0B,MAAAA,IAAI,EAAE;AAAE7B,QAAAA,KAAK,EAAEgB,aAAa,CAACC;AAAvB;AAAtB,KAAzC;AACD,GAJ4B,EAI1B,CAACf,UAAD,EAAaC,OAAb,CAJ0B,CAA7B;AAOA,QAAM6B,qBAAqB,GAAG,wBAC3BP,KAAD,IAAmB;AACjBvB,IAAAA,UAAU,CAACyB,QAAX,CAAoB,mBAApB,EAAyC;AAAEC,MAAAA,GAAG,EAAEzB,OAAP;AAAgB0B,MAAAA,IAAI,EAAE;AAAEhC,QAAAA,SAAS,EAAE4B;AAAb;AAAtB,KAAzC;AACD,GAH2B,EAI5B,CAACvB,UAAD,EAAaC,OAAb,CAJ4B,CAA9B;AAOA,QAAM8B,kBAAkB,GAAG,wBACxBR,KAAD,IAAoB;AAClBvB,IAAAA,UAAU,CAACyB,QAAX,CAAoB,mBAApB,EAAyC;AAAEC,MAAAA,GAAG,EAAEzB,OAAP;AAAgB0B,MAAAA,IAAI,EAAE;AAAE9B,QAAAA,MAAM,EAAE0B;AAAV;AAAtB,KAAzC;AACD,GAHwB,EAIzB,CAACvB,UAAD,EAAaC,OAAb,CAJyB,CAA3B;AAOA,QAAM+B,YAAY,GAAG,wBAAY,MAAM;AACrChC,IAAAA,UAAU,CAACyB,QAAX,CAAoB,sBAApB,EAA4C;AAAEC,MAAAA,GAAG,EAAEzB;AAAP,KAA5C;AACD,GAFoB,EAElB,CAACD,UAAD,EAAaC,OAAb,CAFkB,CAArB;AAIA,sBACE,eAAC,mBAAD;AAAa,mBAAY,yBAAzB;AAAmD,IAAA,OAAO,EAAEiB,OAA5D;AAAqE,IAAA,QAAQ,EAAEb;AAA/E,KAA+Fc,aAA/F;AAA8G,sBAAe;AAA7H,mBACE,eAAC,eAAD;AACE,IAAA,WAAW,EAAEb,MAAM,EAAE2B,WADvB;AAEE,IAAA,SAAS,EAAE1B,MAAM,EAAEZ,SAAR,IAAqB,IAArB,GAA4BA,SAA5B,GAAwC,IAFrD;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,KAAK,EAAEE,KAAK,IAAII,WAJlB;AAKE,IAAA,UAAU,EAAEF,UALd;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,QAAQ,EAAEE;AAPZ,IADF,eAUE,eAAC,yBAAD,qBAIE,eAAC,uBAAD,qBACE,eAAC,4BAAD,qBACE,2BAAKG,MAAM,EAAE4B,SAAR,IAAqB,eAA1B,CADF,eAEE,eAAC,qBAAD;AACE,IAAA,GAAG,EAAE1B,QADP;AAEE,IAAA,KAAK,EAAEI,UAFT;AAGE,IAAA,WAAW,EAAEV,WAHf;AAIE,IAAA,QAAQ,EAAEmB,iBAJZ;AAKE,IAAA,kBAAkB,EAAEO,sBALtB;AAME,IAAA,gBAAgB,EAAEC,oBANpB;AAOE,qCAPF;AAQE,IAAA,IAAI,EAAC,MARP;AASE,IAAA,SAAS,EAAE;AATb,IAFF,CADF,eAeE,eAAC,4BAAD,qBACE,2BAAKvB,MAAM,EAAE6B,WAAR,IAAuB,kBAA5B,CADF,eAEE,eAAC,yBAAD;AAAmB;AAAnB,KAAyCpC,KAAK,EAA9C,CAFF,CAfF,EAmBGQ,MAAM,EAAEZ,SAAR,KAAsB,KAAtB,GAA8B,IAA9B,gBACC,eAAC,4BAAD,qBACE,2BAAKW,MAAM,EAAEX,SAAR,IAAqB,WAA1B,CADF,eAEE,eAAC,oBAAD;AAAY,IAAA,KAAK,EAAEA,SAAnB;AAA8B,IAAA,QAAQ,EAAEmC;AAAxC,kBACE,eAAC,eAAD;AAAO,IAAA,KAAK,EAAC;AAAb,KAAuBxB,MAAM,EAAE8B,YAAR,IAAwB,OAA/C,CADF,eAEE,eAAC,eAAD;AAAO,IAAA,KAAK,EAAC;AAAb,KAAoB9B,MAAM,EAAE+B,SAAR,IAAqB,QAAzC,CAFF,CAFF,CApBJ,EA4BG9B,MAAM,EAAEV,MAAR,KAAmB,KAAnB,GAA2B,IAA3B,gBACC,eAAC,4BAAD,qBACE,2BAAKS,MAAM,EAAEgC,UAAR,IAAsB,YAA3B,CADF,eAEE,eAAC,gBAAD;AAAQ,IAAA,OAAO,EAAEzC,MAAjB;AAAyB,IAAA,QAAQ,EAAEkC;AAAnC,IAFF,CA7BJ,CAJF,eAuCE,eAAC,sBAAD,qBACE,eAAC,gBAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEC,YAAhC;AAA8C,mBAAY;AAA1D,KACG1B,MAAM,EAAEiC,IAAR,IAAgB,MADnB,CADF,CAvCF,CAVF,CADF;AA0DD,CA7HD;;eA+He9C,Q","sourcesContent":["import React, { useCallback, useRef, useEffect, useState } from 'react';\nimport { Radio, RadioGroup, Switch, Button } from '@ali/we-design';\nimport { useHover } from '@ali/4ever-component';\nimport { Controller } from '@ali/4ever-cangjie';\nimport TemplateButton from './button';\nimport {\n  OpenViewContainer,\n  OpenViewContent,\n  OpenViewFooter,\n  TemplateInput,\n  TemplateInputArea,\n  OpenViewContentGroup,\n  ViewWrapper,\n} from './styled';\nimport { TemplateButtonConfig } from '../type';\n\ninterface Props {\n  direction: 'top' | 'bottom';\n  controller: Controller;\n  isOpen?: boolean;\n  isOnce: boolean;\n  title: string;\n  nodeKey: string;\n  placeholder: string;\n  config?: TemplateButtonConfig;\n  child: () => React.ReactNode;\n  editable: boolean;\n  isSelected: boolean;\n}\n\nconst OpenView: React.FC<Props> = (props) => {\n  const { direction, isOpen, isOnce, title, child, controller, nodeKey, placeholder, editable, config = {}, isSelected } = props;\n  const { locale, enable } = config;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const compositingRef = useRef(false);\n  const [compositing, setCompositing] = useState(false);\n  const [innerTitle, setInnerTitle] = useState(() => title);\n  const innerTitleRef = useRef('');\n  innerTitleRef.current = innerTitle;\n  compositingRef.current = compositing;\n\n  const enableBorderHighlight = controller.query('enableBorderHighlight');\n  const [isHover, hoverHandlers] = useHover(enableBorderHighlight);\n\n  useEffect(() => {\n    if (!compositing) {\n      setInnerTitle(title);\n    }\n  }, [compositing, title]);\n\n  useEffect(() => {\n    // 每次展开，自动 focus 到 input\n    inputRef.current?.focus();\n  }, []);\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      setInnerTitle(value);\n      // 处理普通输入\n      if (!compositingRef.current) {\n        controller.dispatch('setTemplateButton', { key: nodeKey, data: { title: value }});\n      }\n    },\n    [controller, nodeKey],\n  );\n\n  const handleCompositionStart = useCallback(() => {\n    setCompositing(true);\n  }, []);\n\n  const handleCompositionEnd = useCallback(() => {\n    setCompositing(false);\n    // 输入法输入\n    controller.dispatch('setTemplateButton', { key: nodeKey, data: { title: innerTitleRef.current }});\n  }, [controller, nodeKey]);\n\n\n  const handleDirectionChange = useCallback(\n    (value: string) => {\n      controller.dispatch('setTemplateButton', { key: nodeKey, data: { direction: value as Props['direction'] }});\n    },\n    [controller, nodeKey],\n  );\n\n  const handleIsOnceChange = useCallback(\n    (value: boolean) => {\n      controller.dispatch('setTemplateButton', { key: nodeKey, data: { isOnce: value }});\n    },\n    [controller, nodeKey],\n  );\n\n  const handleOnSave = useCallback(() => {\n    controller.dispatch('toggleTemplateButton', { key: nodeKey });\n  }, [controller, nodeKey]);\n\n  return (\n    <ViewWrapper data-testid=\"templateButton-openView\" isHover={isHover} isActive={isSelected} {...hoverHandlers} data-hover-box=\"borderBox\">\n      <TemplateButton\n        editTooltip={locale?.editTooltip}\n        direction={enable?.direction ?? true ? direction : null}\n        isOpen={isOpen}\n        title={title || placeholder}\n        controller={controller}\n        nodeKey={nodeKey}\n        editable={editable}\n      />\n      <OpenViewContainer>\n        {/* <OpenViewHeader>\n          <span>{locale?.title || 'Edit Template Button'}</span>\n        </OpenViewHeader> */}\n        <OpenViewContent>\n          <OpenViewContentGroup>\n            <h4>{locale?.nameTitle || 'Template Name'}</h4>\n            <TemplateInput\n              ref={inputRef}\n              value={innerTitle}\n              placeholder={placeholder}\n              onChange={handleInputChange}\n              onCompositionStart={handleCompositionStart}\n              onCompositionEnd={handleCompositionEnd}\n              data-cangjie-not-editable\n              type=\"text\"\n              maxLength={100}\n            />\n          </OpenViewContentGroup>\n          <OpenViewContentGroup>\n            <h4>{locale?.contentTile || 'Template Content'}</h4>\n            <TemplateInputArea data-container-block>{child()}</TemplateInputArea>\n          </OpenViewContentGroup>\n          {enable?.direction === false ? null : (\n            <OpenViewContentGroup>\n              <h4>{locale?.direction || 'Insert To'}</h4>\n              <RadioGroup value={direction} onChange={handleDirectionChange}>\n                <Radio value=\"bottom\">{locale?.insertBottom || 'After'}</Radio>\n                <Radio value=\"top\">{locale?.insertTop || 'Before'}</Radio>\n              </RadioGroup>\n            </OpenViewContentGroup>\n          )}\n          {enable?.isOnce === false ? null : (\n            <OpenViewContentGroup>\n              <h4>{locale?.insertOnce || 'Disposable'}</h4>\n              <Switch checked={isOnce} onChange={handleIsOnceChange} />\n            </OpenViewContentGroup>\n          )}\n        </OpenViewContent>\n        <OpenViewFooter>\n          <Button type=\"primary\" onClick={handleOnSave} data-testid=\"templateButton-save\">\n            {locale?.save || 'Save'}\n          </Button>\n        </OpenViewFooter>\n      </OpenViewContainer>\n    </ViewWrapper>\n  );\n};\n\nexport default OpenView;\n"],"file":"openView.js"}