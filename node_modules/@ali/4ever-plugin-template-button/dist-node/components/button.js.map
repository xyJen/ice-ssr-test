{"version":3,"sources":["../../../src/components/button.tsx"],"names":["Button","props","onInsert","isOpen","nodeKey","controller","direction","isSelected","title","editTooltip","editable","moreToolbarWrapperRef","enableBorderHighlight","query","isHover","hoverHandlers","getContainer","current","window","document","body","tooltip","handleInsert","handleToggleOpen","e","preventDefault","stopPropagation","dispatch","key","edge","EdgePoint","create","command","Commands","select","Selection","anchor","focus","handleDelete","handleCopy","handleCut","moreMenuConfig","options","name","onClick","testId","hasHoverToolbar","paddingRight","cursor"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useEffect, useRef } from 'react';\nimport { Controller, Commands, Selection, EdgePoint } from '@ali/4ever-cangjie';\nimport { AddallNormal, ArrowLeftBackNormal, EditNormal } from '@ali/we-icon';\nimport { InlineToolbar, IconButton } from '@ali/we-toolbar';\nimport { useHover } from '@ali/4ever-component';\nimport { Wrapper, Left, Right, Title } from './styled';\n\n\ninterface Props {\n  direction: 'top' | 'bottom' | null;\n  isOpen?: boolean;\n  title: string;\n  nodeKey: string;\n  controller: Controller;\n  onInsert?: () => void;\n  isSelected?: boolean;\n  editable?: boolean;\n  editTooltip?: string;\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const {\n    onInsert,\n    isOpen,\n    nodeKey,\n    controller,\n    direction,\n    isSelected,\n    title,\n    editTooltip,\n    editable = true,\n  } = props;\n\n  const moreToolbarWrapperRef = useRef<HTMLDivElement>(null);\n  const enableBorderHighlight = !isOpen && controller.query('enableBorderHighlight');\n  const [isHover, hoverHandlers] = useHover(enableBorderHighlight);\n\n  const getContainer = useCallback(() => {\n    return moreToolbarWrapperRef.current || window.document.body;\n  }, []);\n\n  const tooltip = useMemo(() => {\n    if (!editable) return '';\n    return editTooltip || 'Configure template';\n  }, [editable, editTooltip]);\n\n  const handleInsert = useCallback(() => {\n    onInsert?.();\n  }, [onInsert]);\n\n  const handleToggleOpen = useCallback((e?: React.MouseEvent<HTMLElement>) => {\n    e?.preventDefault();\n    e?.stopPropagation();\n    // 未处理排版问题，暂不允许在排版模式下编辑\n    if (e && !editable) return;\n    controller.dispatch('toggleTemplateButton', { key: nodeKey });\n    if (isOpen) {\n      // 当前是打开状态，防止内容区域有选区，收起后选区异常，这里统一收到按钮后面\n      const edge = EdgePoint.create({ key: nodeKey, edge: 'after' });\n      controller.command(\n        Commands.select,\n        Selection.create({\n          anchor: edge,\n          focus: edge,\n        }),\n      );\n    }\n  }, [nodeKey, controller, editable, isOpen]);\n\n  const handleDelete = useCallback(() => {\n    controller.dispatch('deleteTemplateButton', { key: nodeKey });\n  }, [controller, nodeKey]);\n\n  const handleCopy = useCallback(() => {\n    controller.dispatch('copyTemplateButton', { key: nodeKey });\n  }, [controller, nodeKey]);\n\n  const handleCut = useCallback(() => {\n    controller.dispatch('cutTemplateButton', { key: nodeKey });\n  }, [controller, nodeKey]);\n\n  useEffect(() => {\n    // 由非排版模式下切换到排版模式\n    // 如果当前是打开状态，则收起\n    if (isOpen && !editable) {\n      handleToggleOpen();\n    }\n  }, [editable, handleToggleOpen, isOpen]);\n\n  const moreMenuConfig: any = useMemo(() => {\n    return {\n      options: [\n        [\n          { name: 'delete', onClick: handleDelete, testId: 'templateButton-delete' },\n          { name: 'copy', onClick: handleCopy, testId: 'templateButton-copy' },\n          { name: 'cut', onClick: handleCut, testId: 'templateButton-cut' }\n        ],\n      ],\n    };\n  }, [handleCopy, handleCut, handleDelete]);\n\n  const hasHoverToolbar = controller.query('hasHoverToolbar', 'templateButton');\n\n  return (\n    <Wrapper\n      isOpen={isOpen}\n      onClick={handleInsert}\n      isSelected={isSelected}\n      data-testid=\"templateButton-button\"\n      className='templateButton-wrapper' // className 便于其他插件覆盖样式（激光笔添加高亮效果）\n      data-hover-box=\"noBorderBox\"\n      isHover={isHover}\n      enableBorderHighlight={enableBorderHighlight}\n      {...hoverHandlers}\n    >\n      <Left direction={direction} isOpen={isOpen}>\n        <AddallNormal />\n        <Title>\n          <span className=\"templateButton-title\" style={{ paddingRight: direction ? 0 : '8px' }}>{title}</span>\n        </Title>\n        {direction ? <ArrowLeftBackNormal /> : null}\n      </Left>\n      {\n        !hasHoverToolbar && (\n          <Right ref={moreToolbarWrapperRef}>\n            <InlineToolbar\n              getContainer={getContainer}\n              moreMenuConfig={moreMenuConfig}\n              width={400}\n            >\n              <IconButton\n                tooltip={tooltip}\n                onClick={handleToggleOpen}\n                icon={\n                  <EditNormal\n                    style={{ cursor: editable ? 'default' : 'not-allowed' }}\n                    data-testid=\"templateButton-edit\"\n                  />\n                }\n              />\n            </InlineToolbar>\n          </Right>\n        )\n      }\n    </Wrapper>\n  );\n};\n\nexport default Button;\n"],"file":"button.js"}