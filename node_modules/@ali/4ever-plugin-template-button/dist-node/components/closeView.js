"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _utils = require("../bi/utils");

var _button = _interopRequireDefault(require("./button"));

const _createElement = /*#__PURE__*/_react.default.createElement;

const CloseView = props => {
  const {
    isOnce,
    direction,
    isOpen,
    title,
    node,
    controller,
    placeholder,
    isSelected,
    editable,
    config = {}
  } = props;
  const {
    key: nodeKey
  } = node;
  const {
    enable,
    locale
  } = config;
  const handleClick = (0, _react.useCallback)(() => {
    const {
      nodes
    } = controller.value.document.getNode(nodeKey); // 模板无内容，无需响应

    if (nodes.length === 1 && (0, _utils.isEmptyNode)(controller, nodes[0]) && !(0, _utils.isList)(nodes[0])) {
      return;
    }

    const fragment = _everCangjie.Document.create({
      nodes
    });

    controller.dispatch('insertTemplateButtonFragment', {
      key: nodeKey,
      data: {
        fragment,
        direction,
        isOnce
      }
    });
  }, [controller, direction, isOnce, nodeKey]);
  return /*#__PURE__*/_createElement(_button.default, {
    editTooltip: locale?.editTooltip,
    controller: controller,
    nodeKey: nodeKey,
    direction: enable?.direction ?? true ? direction : null,
    isOpen: isOpen,
    isSelected: isSelected,
    title: title || placeholder,
    onInsert: handleClick,
    editable: editable
  });
};

var _default = CloseView;
exports.default = _default;
//# sourceMappingURL=closeView.js.map