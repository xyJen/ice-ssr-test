{"version":3,"sources":["../../../../src/bi/handlers/createRenderNode.tsx"],"names":["createRenderNode","config","props","controller","next","children","node","attributes","TemplateButton","isTemplateButton"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;uBAH4B,a;;AAKrB,SAASA,gBAAT,CAA0BC,MAA1B,EAAiF;AACtF,SAAO,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,KAA6B;AAClC,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAAiCL,KAAvC;AACA,QAAI,CAACM,mBAAeC,gBAAf,CAAgCH,IAAhC,CAAL,EAA4C,OAAOF,IAAI,EAAX;AAC5C,wBACE,sBAASG,UAAT,eACE,eAAC,oBAAD,6BACML,KADN;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,KAAK,EAAEE,QAHT;AAIE,MAAA,MAAM,EAAEJ;AAJV,OADF,CADF;AAUD,GAbD;AAcD;;AAAA","sourcesContent":["import React from \"react\";\nimport type { ZhiPlugin, RenderNodeProps } from \"@ali/4ever-cangjie\";\nimport { Container } from \"../../components/container\";\nimport { TemplateButtonConfig } from '../../type';\nimport { TemplateButton } from '../../mo';\n\nexport function createRenderNode(config: TemplateButtonConfig): ZhiPlugin['renderNode'] {\n  return (props, controller, next) => {\n    const { children, node, attributes } = props;\n    if (!TemplateButton.isTemplateButton(node)) return next();\n    return (\n      <div {...attributes}>\n        <Container\n          {...props as RenderNodeProps<TemplateButton>}\n          controller={controller}\n          child={children}\n          config={config}\n        />\n      </div>\n    );\n  };\n};\n"],"file":"createRenderNode.js"}