{"version":3,"sources":["../../../src/bi/variable.ts"],"names":["localeDateOptions","year","month","day","createVariables","i18n","variable","DATE","Date","toLocaleDateString","DATE1","replace","TOMORROW","date","setDate","getDate","YESTERDAY","TIME0","TIME","padding0","getHours","getMinutes","YEAR","getFullYear","MONTH","getMonth","MONTH0","DAY","DAY0","QUARTER","WEEK","firstDay","pastDays","getTime","Math","ceil","getDay","WEEK0","DAYOFWEEK","weekday","str","weeks","split","origin","digit","length","repeat"],"mappings":"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","sourcesContent":["import type { Locale, Variables } from '../type';\n\n// 默认提供补零版本\n// ref https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#parameters\nconst localeDateOptions: Record<string, any> = {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n};\n\nexport function createVariables(i18n?: Locale) {\n  /**\n   * 模板内容替换函数\n   * 比如：模板内容中的 %XX% 会被如下 key 为 XX 的函数求值并替换\n   */\n  const variable: Variables = {\n    DATE: () => {\n      return new Date().toLocaleDateString([], localeDateOptions);\n    },\n    DATE1: () => {\n      return (variable.DATE() as string).replace(/\\//g, '-');\n    },\n    TOMORROW: () => {\n      const date = new Date();\n      date.setDate(date.getDate() + 1);\n      return date.toLocaleDateString([], localeDateOptions);\n    },\n    YESTERDAY: () => {\n      const date = new Date();\n      date.setDate(date.getDate() - 1);\n      return date.toLocaleDateString([], localeDateOptions);\n    },\n    TIME0: () => {\n      return variable.TIME();\n    },\n    TIME: () => {\n      const date = new Date();\n      return `${padding0(`${date.getHours()}`, 2)}:${ padding0(`${date.getMinutes()}`, 2)}`;\n    },\n    YEAR: () => {\n      return new Date().getFullYear();\n    },\n    MONTH: () => {\n      return new Date().getMonth() + 1;\n    },\n    MONTH0: () => {\n      return padding0(`${variable.MONTH()}`, 2);\n    },\n    DAY: () => {\n      return new Date().getDate();\n    },\n    DAY0: () => {\n      return padding0(`${variable.DAY()}`, 2);\n    },\n    QUARTER: () => {\n      const month = new Date().getMonth() + 1;\n      if (month <= 3) {\n        return 1;\n      } else if (month <= 6) {\n        return 2;\n      } else if (month <= 9) {\n        return 3;\n      } else {\n        return 4;\n      }\n    },\n    // 今天为当前的第几自然周\n    WEEK: () => {\n      const date = new Date();\n      const year = date.getFullYear();\n      const firstDay = new Date(year, 0, 1);\n      const pastDays = (date.getTime() - firstDay.getTime()) / 86400000;\n      return Math.ceil((pastDays + firstDay.getDay() + 1) / 7);\n    },\n    WEEK0: () => {\n      return padding0(`${variable.WEEK()}`, 2);\n    },\n    DAYOFWEEK: () => {\n      const weekday = new Date().getDay();\n      const str = i18n?.weeks || 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday';\n      return str.split(',')[weekday];\n    },\n  };\n  return variable;\n}\n\n\nfunction padding0(origin: string, digit: number) {\n  if (origin.length >= digit) return origin;\n  return '0'.repeat(digit - origin.length) + origin;\n}\n"],"file":"variable.js"}