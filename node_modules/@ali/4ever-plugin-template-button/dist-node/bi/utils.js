"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildReplacer = buildReplacer;
exports.replaceTemplate = exports.isInlineCode = exports.isList = exports.isEmptyNode = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

/**
 * 判断节点是否是空节点
 * @param node
 * @returns
 */
const isEmptyNode = (controller, node) => {
  if (node.type !== 'paragraph') {
    return undefined;
  }

  return node.nodes.length === 0 || node.nodes.length === 1 && _everCangjie.Text.isEmptyText(node.nodes[0]);
};
/**
 * 判断一个 node 是否是 list
 * @param node
 * @returns
 */


exports.isEmptyNode = isEmptyNode;

const isList = node => {
  return node.type === 'paragraph' && node.data?.list;
};
/**
 * 判断当前光标是否在 inline code 中
 * @param controller
 * @returns
 */


exports.isList = isList;

const isInlineCode = controller => {
  return controller.query('isInlineCode');
};

exports.isInlineCode = isInlineCode;

function buildReplacer(replaceFns) {
  // /%TODY%|%ME%.../g
  const replaceExp = new RegExp(`${Object.keys(replaceFns).map(i => `%${i}%`).join('|')}`, 'g');
  return str => {
    return str.replace(replaceExp, match => {
      return `${replaceFns[match.slice(1, -1)]()}`;
    });
  };
}

const replaceTemplate = (fragment, replacer) => {
  return fragment.mapDescendants(node => {
    if (_everCangjie.Text.isText(node)) {
      const leafs = node.getLeaves().map(leaf => {
        const newText = replacer(leaf.text);
        return leaf.set('text', newText);
      });
      return node.set('leaves', leafs);
    } else {
      return node;
    }
  });
};

exports.replaceTemplate = replaceTemplate;
//# sourceMappingURL=utils.js.map