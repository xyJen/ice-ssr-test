{"version":3,"sources":["../../../src/components/openView.tsx"],"names":["React","useCallback","useRef","useEffect","useState","Radio","RadioGroup","Switch","Button","useHover","TemplateButton","OpenViewContainer","OpenViewContent","OpenViewFooter","TemplateInput","TemplateInputArea","OpenViewContentGroup","ViewWrapper","OpenView","props","direction","isOpen","isOnce","title","child","controller","nodeKey","placeholder","editable","config","isSelected","locale","enable","inputRef","compositingRef","compositing","setCompositing","innerTitle","setInnerTitle","innerTitleRef","current","enableBorderHighlight","query","isHover","hoverHandlers","focus","handleInputChange","e","value","target","dispatch","key","data","handleCompositionStart","handleCompositionEnd","handleDirectionChange","handleIsOnceChange","handleOnSave","editTooltip","nameTitle","contentTile","insertBottom","insertTop","insertOnce","save"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useEffect, useState } from 'react';\nimport { Radio, RadioGroup, Switch, Button } from '@ali/we-design';\nimport { useHover } from '@ali/4ever-component';\nimport { Controller } from '@ali/4ever-cangjie';\nimport TemplateButton from './button';\nimport {\n  OpenViewContainer,\n  OpenViewContent,\n  OpenViewFooter,\n  TemplateInput,\n  TemplateInputArea,\n  OpenViewContentGroup,\n  ViewWrapper,\n} from './styled';\nimport { TemplateButtonConfig } from '../type';\n\ninterface Props {\n  direction: 'top' | 'bottom';\n  controller: Controller;\n  isOpen?: boolean;\n  isOnce: boolean;\n  title: string;\n  nodeKey: string;\n  placeholder: string;\n  config?: TemplateButtonConfig;\n  child: () => React.ReactNode;\n  editable: boolean;\n  isSelected: boolean;\n}\n\nconst OpenView: React.FC<Props> = (props) => {\n  const { direction, isOpen, isOnce, title, child, controller, nodeKey, placeholder, editable, config = {}, isSelected } = props;\n  const { locale, enable } = config;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const compositingRef = useRef(false);\n  const [compositing, setCompositing] = useState(false);\n  const [innerTitle, setInnerTitle] = useState(() => title);\n  const innerTitleRef = useRef('');\n  innerTitleRef.current = innerTitle;\n  compositingRef.current = compositing;\n\n  const enableBorderHighlight = controller.query('enableBorderHighlight');\n  const [isHover, hoverHandlers] = useHover(enableBorderHighlight);\n\n  useEffect(() => {\n    if (!compositing) {\n      setInnerTitle(title);\n    }\n  }, [compositing, title]);\n\n  useEffect(() => {\n    // 每次展开，自动 focus 到 input\n    inputRef.current?.focus();\n  }, []);\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      setInnerTitle(value);\n      // 处理普通输入\n      if (!compositingRef.current) {\n        controller.dispatch('setTemplateButton', { key: nodeKey, data: { title: value }});\n      }\n    },\n    [controller, nodeKey],\n  );\n\n  const handleCompositionStart = useCallback(() => {\n    setCompositing(true);\n  }, []);\n\n  const handleCompositionEnd = useCallback(() => {\n    setCompositing(false);\n    // 输入法输入\n    controller.dispatch('setTemplateButton', { key: nodeKey, data: { title: innerTitleRef.current }});\n  }, [controller, nodeKey]);\n\n\n  const handleDirectionChange = useCallback(\n    (value: string) => {\n      controller.dispatch('setTemplateButton', { key: nodeKey, data: { direction: value as Props['direction'] }});\n    },\n    [controller, nodeKey],\n  );\n\n  const handleIsOnceChange = useCallback(\n    (value: boolean) => {\n      controller.dispatch('setTemplateButton', { key: nodeKey, data: { isOnce: value }});\n    },\n    [controller, nodeKey],\n  );\n\n  const handleOnSave = useCallback(() => {\n    controller.dispatch('toggleTemplateButton', { key: nodeKey });\n  }, [controller, nodeKey]);\n\n  return (\n    <ViewWrapper data-testid=\"templateButton-openView\" isHover={isHover} isActive={isSelected} {...hoverHandlers} data-hover-box=\"borderBox\">\n      <TemplateButton\n        editTooltip={locale?.editTooltip}\n        direction={enable?.direction ?? true ? direction : null}\n        isOpen={isOpen}\n        title={title || placeholder}\n        controller={controller}\n        nodeKey={nodeKey}\n        editable={editable}\n      />\n      <OpenViewContainer>\n        {/* <OpenViewHeader>\n          <span>{locale?.title || 'Edit Template Button'}</span>\n        </OpenViewHeader> */}\n        <OpenViewContent>\n          <OpenViewContentGroup>\n            <h4>{locale?.nameTitle || 'Template Name'}</h4>\n            <TemplateInput\n              ref={inputRef}\n              value={innerTitle}\n              placeholder={placeholder}\n              onChange={handleInputChange}\n              onCompositionStart={handleCompositionStart}\n              onCompositionEnd={handleCompositionEnd}\n              data-cangjie-not-editable\n              type=\"text\"\n              maxLength={100}\n            />\n          </OpenViewContentGroup>\n          <OpenViewContentGroup>\n            <h4>{locale?.contentTile || 'Template Content'}</h4>\n            <TemplateInputArea data-container-block>{child()}</TemplateInputArea>\n          </OpenViewContentGroup>\n          {enable?.direction === false ? null : (\n            <OpenViewContentGroup>\n              <h4>{locale?.direction || 'Insert To'}</h4>\n              <RadioGroup value={direction} onChange={handleDirectionChange}>\n                <Radio value=\"bottom\">{locale?.insertBottom || 'After'}</Radio>\n                <Radio value=\"top\">{locale?.insertTop || 'Before'}</Radio>\n              </RadioGroup>\n            </OpenViewContentGroup>\n          )}\n          {enable?.isOnce === false ? null : (\n            <OpenViewContentGroup>\n              <h4>{locale?.insertOnce || 'Disposable'}</h4>\n              <Switch checked={isOnce} onChange={handleIsOnceChange} />\n            </OpenViewContentGroup>\n          )}\n        </OpenViewContent>\n        <OpenViewFooter>\n          <Button type=\"primary\" onClick={handleOnSave} data-testid=\"templateButton-save\">\n            {locale?.save || 'Save'}\n          </Button>\n        </OpenViewFooter>\n      </OpenViewContainer>\n    </ViewWrapper>\n  );\n};\n\nexport default OpenView;\n"],"file":"openView.js"}