{"version":3,"sources":["../../../src/components/container.tsx"],"names":["React","CloseView","OpenView","Container","props","node","controller","child","config","isSelected","editable","metadata","data","placeholder","locale","namePlaceholder","isOpen","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAG5B,OAAOC,SAAP;AACA,OAAOC,QAAP;;AAUA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,CAACC,KAAD,EAAW;AAAA;;AAAA,MAEnDC,IAFmD,GAQjDD,KARiD,CAEnDC,IAFmD;AAAA,MAGnDC,UAHmD,GAQjDF,KARiD,CAGnDE,UAHmD;AAAA,MAInDC,KAJmD,GAQjDH,KARiD,CAInDG,KAJmD;AAAA,MAKnDC,MALmD,GAQjDJ,KARiD,CAKnDI,MALmD;AAAA,MAMnDC,UANmD,GAQjDL,KARiD,CAMnDK,UANmD;AAAA,wBAQjDL,KARiD,CAOnDM,QAPmD;AAAA,MAOnDA,QAPmD,gCAOxC,IAPwC;AAAA,MASrCC,QATqC,GAStBN,IATsB,CAS7CO,IAT6C,CASrCD,QATqC;AAUrD,MAAME,WAAW,GAAG,CAAAL,MAAM,QAAN,8BAAAA,MAAM,CAAEM,MAAR,oCAAgBC,eAAhB,KAAmC,gBAAvD;;AACA,MAAIJ,QAAQ,CAACK,MAAb,EAAqB;AACnB,wBACE,eAAC,QAAD,eACML,QADN;AAEE,MAAA,WAAW,EAAEE,WAFf;AAGE,MAAA,UAAU,EAAEP,UAHd;AAIE,MAAA,OAAO,EAAED,IAAI,CAACY,GAJhB;AAKE,MAAA,KAAK,EAAEV,KALT;AAME,MAAA,MAAM,EAAEC,MANV;AAOE,MAAA,QAAQ,EAAEE,QAPZ;AAQE,MAAA,UAAU,EAAED;AARd,OADF;AAYD,GAbD,MAaO;AACL,wBACE,eAAC,SAAD,eACME,QADN;AAEE,MAAA,WAAW,EAAEE,WAFf;AAGE,MAAA,UAAU,EAAEP,UAHd;AAIE,MAAA,IAAI,EAAED,IAJR;AAKE,MAAA,UAAU,EAAEI,UALd;AAME,MAAA,QAAQ,EAAEC,QANZ;AAOE,MAAA,MAAM,EAAEF;AAPV,OADF;AAWD;AACF,CArCD;;AAuCA,SAASL,SAAT","sourcesContent":["import React from 'react';\nimport { RenderNodeProps, Controller } from '@ali/4ever-cangjie';\nimport { TemplateButtonConfig } from '../type';\nimport { TemplateButton } from '../mo';\nimport CloseView from './closeView';\nimport OpenView from './openView';\n\ninterface ContainerProps extends RenderNodeProps<TemplateButton> {\n  config?: TemplateButtonConfig;\n  editable?: boolean;\n  isSelected: boolean;\n  controller: Controller;\n  child: () => React.ReactNode;\n}\n\nconst Container: React.FC<ContainerProps> = (props) => {\n  const {\n    node,\n    controller,\n    child,\n    config,\n    isSelected,\n    editable = true,\n  } = props;\n  const { data: { metadata } } = node;\n  const placeholder = config?.locale?.namePlaceholder || 'Add a new item';\n  if (metadata.isOpen) {\n    return (\n      <OpenView\n        {...metadata}\n        placeholder={placeholder}\n        controller={controller}\n        nodeKey={node.key}\n        child={child}\n        config={config}\n        editable={editable}\n        isSelected={isSelected}\n      />\n    );\n  } else {\n    return (\n      <CloseView\n        {...metadata}\n        placeholder={placeholder}\n        controller={controller}\n        node={node}\n        isSelected={isSelected}\n        editable={editable}\n        config={config}\n      />\n    );\n  }\n};\n\nexport { Container };\n"],"file":"container.js"}