{"version":3,"sources":["../../../src/components/closeView.tsx"],"names":["React","useCallback","Document","isEmptyNode","isList","Button","CloseView","props","isOnce","direction","isOpen","title","node","controller","placeholder","isSelected","editable","config","nodeKey","key","enable","locale","handleClick","value","document","getNode","nodes","length","fragment","create","dispatch","data","editTooltip"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;qBAC4B,a;AAA5B,SAAqBC,QAArB,QAA4C,oBAA5C;AACA,SAASC,WAAT,EAAsBC,MAAtB;AAGA,OAAOC,MAAP;;AAeA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,CAACC,KAAD,EAAW;AAAA;;AAAA,MACpCC,MADoC,GACmED,KADnE,CACpCC,MADoC;AAAA,MAC5BC,SAD4B,GACmEF,KADnE,CAC5BE,SAD4B;AAAA,MACjBC,MADiB,GACmEH,KADnE,CACjBG,MADiB;AAAA,MACTC,KADS,GACmEJ,KADnE,CACTI,KADS;AAAA,MACFC,IADE,GACmEL,KADnE,CACFK,IADE;AAAA,MACIC,UADJ,GACmEN,KADnE,CACIM,UADJ;AAAA,MACgBC,WADhB,GACmEP,KADnE,CACgBO,WADhB;AAAA,MAC6BC,UAD7B,GACmER,KADnE,CAC6BQ,UAD7B;AAAA,MACyCC,QADzC,GACmET,KADnE,CACyCS,QADzC;AAAA,sBACmET,KADnE,CACmDU,MADnD;AAAA,MACmDA,MADnD,8BAC4D,EAD5D;AAAA,MAE/BC,OAF+B,GAEnBN,IAFmB,CAEpCO,GAFoC;AAAA,MAGpCC,MAHoC,GAGjBH,MAHiB,CAGpCG,MAHoC;AAAA,MAG5BC,MAH4B,GAGjBJ,MAHiB,CAG5BI,MAH4B;AAK5C,MAAMC,WAAW,GAAGrB,WAAW,CAAC,YAAM;AAAA,eAClBY,UAAU,CAACU,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCP,OAAlC,CADkB;AAAA,QAC5BQ,KAD4B,QAC5BA,KAD4B,EAEpC;;;AACA,QAAIA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsBxB,WAAW,CAACU,UAAD,EAAaa,KAAK,CAAC,CAAD,CAAlB,CAAjC,IAA2D,CAACtB,MAAM,CAACsB,KAAK,CAAC,CAAD,CAAN,CAAtE,EAAkF;AAChF;AACD;;AACD,QAAME,QAAQ,GAAG1B,QAAQ,CAAC2B,MAAT,CAAgB;AAC/BH,MAAAA,KAAK,EAALA;AAD+B,KAAhB,CAAjB;AAGAb,IAAAA,UAAU,CAACiB,QAAX,CAAoB,8BAApB,EAAoD;AAAEX,MAAAA,GAAG,EAAED,OAAP;AAAgBa,MAAAA,IAAI,EAAE;AAAEH,QAAAA,QAAQ,EAARA,QAAF;AAAYnB,QAAAA,SAAS,EAATA,SAAZ;AAAuBD,QAAAA,MAAM,EAANA;AAAvB;AAAtB,KAApD;AACD,GAV8B,EAU5B,CAACK,UAAD,EAAaJ,SAAb,EAAwBD,MAAxB,EAAgCU,OAAhC,CAV4B,CAA/B;AAYA,sBACE,eAAC,MAAD;AACE,IAAA,WAAW,EAAEG,MAAF,oBAAEA,MAAM,CAAEW,WADvB;AAEE,IAAA,UAAU,EAAEnB,UAFd;AAGE,IAAA,OAAO,EAAEK,OAHX;AAIE,IAAA,SAAS,EAAE,sBAAAE,MAAM,QAAN,YAAAA,MAAM,CAAEX,SAAR,gCAAqB,IAArB,IAA4BA,SAA5B,GAAwC,IAJrD;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,UAAU,EAAEK,UANd;AAOE,IAAA,KAAK,EAAEJ,KAAK,IAAIG,WAPlB;AAQE,IAAA,QAAQ,EAAEQ,WARZ;AASE,IAAA,QAAQ,EAAEN;AATZ,IADF;AAaD,CA9BD;;AAgCA,eAAeV,SAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Controller, Document, Block } from '@ali/4ever-cangjie';\nimport { isEmptyNode, isList } from '../bi/utils';\nimport { TemplateButtonConfig } from '../type';\nimport { TemplateButton } from '../mo';\nimport Button from './button';\n\ninterface Props {\n  direction: 'top' | 'bottom';\n  controller: Controller;\n  isOpen?: boolean;\n  isOnce: boolean;\n  title: string;\n  node: Block<any, any>;\n  placeholder: string;\n  isSelected: boolean;\n  editable: boolean;\n  config?: TemplateButtonConfig;\n}\n\nconst CloseView: React.FC<Props> = (props) => {\n  const { isOnce, direction, isOpen, title, node, controller, placeholder, isSelected, editable, config = {} } = props;\n  const { key: nodeKey } = node;\n  const { enable, locale } = config;\n\n  const handleClick = useCallback(() => {\n    const { nodes } = controller.value.document.getNode(nodeKey) as TemplateButton;\n    // 模板无内容，无需响应\n    if (nodes.length === 1 && isEmptyNode(controller, nodes[0]) && !isList(nodes[0])) {\n      return;\n    }\n    const fragment = Document.create({\n      nodes,\n    });\n    controller.dispatch('insertTemplateButtonFragment', { key: nodeKey, data: { fragment, direction, isOnce } });\n  }, [controller, direction, isOnce, nodeKey]);\n\n  return (\n    <Button\n      editTooltip={locale?.editTooltip}\n      controller={controller}\n      nodeKey={nodeKey}\n      direction={enable?.direction ?? true ? direction : null}\n      isOpen={isOpen}\n      isSelected={isSelected}\n      title={title || placeholder}\n      onInsert={handleClick}\n      editable={editable}\n    />\n  );\n};\n\nexport default CloseView;\n"],"file":"closeView.js"}