import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Document } from '@ali/4ever-cangjie';
import { isEmptyNode, isList } from "../bi/utils";
import Button from "./button";

var CloseView = function CloseView(props) {
  var _enable$direction;

  var isOnce = props.isOnce,
      direction = props.direction,
      isOpen = props.isOpen,
      title = props.title,
      node = props.node,
      controller = props.controller,
      placeholder = props.placeholder,
      isSelected = props.isSelected,
      editable = props.editable,
      _props$config = props.config,
      config = _props$config === void 0 ? {} : _props$config;
  var nodeKey = node.key;
  var enable = config.enable,
      locale = config.locale;
  var handleClick = useCallback(function () {
    var _ref = controller.value.document.getNode(nodeKey),
        nodes = _ref.nodes; // 模板无内容，无需响应


    if (nodes.length === 1 && isEmptyNode(controller, nodes[0]) && !isList(nodes[0])) {
      return;
    }

    var fragment = Document.create({
      nodes: nodes
    });
    controller.dispatch('insertTemplateButtonFragment', {
      key: nodeKey,
      data: {
        fragment: fragment,
        direction: direction,
        isOnce: isOnce
      }
    });
  }, [controller, direction, isOnce, nodeKey]);
  return /*#__PURE__*/_createElement(Button, {
    editTooltip: locale == null ? void 0 : locale.editTooltip,
    controller: controller,
    nodeKey: nodeKey,
    direction: ((_enable$direction = enable == null ? void 0 : enable.direction) != null ? _enable$direction : true) ? direction : null,
    isOpen: isOpen,
    isSelected: isSelected,
    title: title || placeholder,
    onInsert: handleClick,
    editable: editable
  });
};

export default CloseView;
//# sourceMappingURL=closeView.js.map