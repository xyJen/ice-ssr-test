{"version":3,"sources":["../../../../src/bi/handlers/onCangjieCopyOrCut.ts"],"names":["constants","transferUtils","Document","isSelectionInTemplateButton","TemplateButton","MIME_TYPES","onCangjieCopyOrCut","event","controller","next","clipboardData","tableSelection","query","templateSelection","value","document","selection","button","getClosest","anchor","key","isTemplateButton","fragment","getFragmentAtRange","isOpen","create","nodes","setData","FRAGMENT","encodeFragment"],"mappings":"AAAA,SAAgCA,SAAhC,EAA2CC,aAA3C,EAAsEC,QAAtE,QAAiG,oBAAjG;AACA,OAAOC,2BAAP;AACA,SAASC,cAAT;IAEQC,U,GAAeL,S,CAAfK,U;AAER,OAAO,IAAMC,kBAA8C,GAAG,SAAjDA,kBAAiD,CAACC,KAAD,EAA+BC,UAA/B,EAAuDC,IAAvD,EAAgE;AAC5H,MAAI,CAACF,KAAK,CAACG,aAAX,EAA0B;AACxB,WAAOD,IAAI,EAAX;AACD,GAH2H,CAK5H;AACA;;;AACA,MAAME,cAAc,GAAGH,UAAU,CAACI,KAAX,CAAiB,gBAAjB,CAAvB,CAP4H,CAQ5H;;AACA,MAAID,cAAJ,EAAoB;AAClB,WAAOF,IAAI,EAAX;AACD;;AAED,MAAMI,iBAAiB,GAAGV,2BAA2B,CAACK,UAAD,CAArD,CAb4H,CAc5H;;AACA,MAAIK,iBAAiB,KAAK,KAA1B,EAAiC;AAC/B,WAAOJ,IAAI,EAAX;AACD;;AAjB2H,0BAmB5FD,UAAU,CAACM,KAnBiF;AAAA,MAmBpHC,QAnBoH,qBAmBpHA,QAnBoH;AAAA,MAmB1GC,SAnB0G,qBAmB1GA,SAnB0G,EAqB5H;;AACA,MAAMC,MAAM,GAAGT,UAAU,CAACM,KAAX,CAAiBC,QAAjB,CAA0BG,UAA1B,CACbF,SAAS,CAACG,MAAV,CAAiBC,GADJ,EAEbhB,cAAc,CAACiB,gBAFF,CAAf,CAtB4H,CA2B5H;;AACA,MAAIC,QAAQ,GAAGP,QAAQ,CAACQ,kBAAT,CAA4BP,SAA5B,EAAuCR,UAAvC,CAAf;AACA,MAAMgB,MAAM,GAAGpB,cAAc,CAACoB,MAAf,CAAsBhB,UAAtB,EAAkCS,MAAM,CAACG,GAAzC,CAAf,CA7B4H,CA+B5H;;AACA,MAAII,MAAJ,EAAY;AACV;AACAF,IAAAA,QAAQ,GAAGpB,QAAQ,CAACuB,MAAT,CAAgB;AAAEC,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkBA;AAA3B,KAAhB,CAAX;AACD;;AACDnB,EAAAA,KAAK,CAACG,aAAN,CAAoBiB,OAApB,CAA4BtB,UAAU,CAACuB,QAAvC,EAAiD3B,aAAa,CAAC4B,cAAd,CAA6BP,QAA7B,CAAjD;AACA,SAAOb,IAAI,EAAX;AACD,CAtCM","sourcesContent":["import { CangjieClipboardEvent, constants, transferUtils, Controller, Document, ZhiPlugin } from '@ali/4ever-cangjie';\nimport isSelectionInTemplateButton from '../queries/isSelectionInTemplateButton';\nimport { TemplateButton } from '../../mo';\n\nconst { MIME_TYPES } = constants;\n\nexport const onCangjieCopyOrCut: ZhiPlugin['onCangjieCopy'] = (event: CangjieClipboardEvent, controller: Controller, next) => {\n  if (!event.clipboardData) {\n    return next();\n  }\n\n  // 增加类似表格特性的 plugin 时，依然需要在这里感知\n  // 特性： copy 部分选区时需要携带容器\n  const tableSelection = controller.query('tableSelection');\n  // 如果是表格选区，则不处理\n  if (tableSelection) {\n    return next();\n  }\n\n  const templateSelection = isSelectionInTemplateButton(controller);\n  // 选区不全在模板按钮内，走默认行为\n  if (templateSelection !== 'all') {\n    return next();\n  }\n\n  const { document, selection } = controller.value;\n\n  // 找到最近的 templateButton\n  const button = controller.value.document.getClosest(\n    selection.anchor.key,\n    TemplateButton.isTemplateButton,\n  ) as TemplateButton;\n\n  // @ts-ignore\n  let fragment = document.getFragmentAtRange(selection, controller);\n  const isOpen = TemplateButton.isOpen(controller, button.key);\n\n  // Open 的情况下，不需要 copy 整个模板按钮，取出其 nodes\n  if (isOpen) {\n    // @ts-ignore\n    fragment = Document.create({ nodes: fragment.nodes[0].nodes });\n  }\n  event.clipboardData.setData(MIME_TYPES.FRAGMENT, transferUtils.encodeFragment(fragment));\n  return next();\n}\n"],"file":"onCangjieCopyOrCut.js"}