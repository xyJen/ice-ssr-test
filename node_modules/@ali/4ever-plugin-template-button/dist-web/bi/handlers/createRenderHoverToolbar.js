import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { IconEdit } from '@ali/4ever-component';
import { TemplateButtonRole } from "../../utils/role";
import { TemplateButton } from "../../mo";

var _ref2 = /*#__PURE__*/_createElement(IconEdit, null);

export var createRenderHoverToolbar = function createRenderHoverToolbar(config) {
  var _ref = config || {},
      locale = _ref.locale;

  return function (props, controller, getNode) {
    var buttonName = props.buttonName;

    switch (buttonName) {
      case 'edit':
        return {
          title: (locale == null ? void 0 : locale.editTooltip) || 'Configuration Template',
          tooltip: (locale == null ? void 0 : locale.editTooltip) || 'Configuration Template',
          icon: _ref2,
          onClick: function onClick() {
            var node = getNode();
            if (!TemplateButton.isTemplateButton(node)) return;
            controller.dispatch('toggleTemplateButton', {
              key: node.key
            });
          },
          testid: 'templateButton-edit',
          role: TemplateButtonRole.templateButton
        };

      default:
        return null;
    }
  };
};
//# sourceMappingURL=createRenderHoverToolbar.js.map