import { constants, transferUtils, Document } from '@ali/4ever-cangjie';
import isSelectionInTemplateButton from "../queries/isSelectionInTemplateButton";
import { TemplateButton } from "../../mo";
var MIME_TYPES = constants.MIME_TYPES;
export var onCangjieCopyOrCut = function onCangjieCopyOrCut(event, controller, next) {
  if (!event.clipboardData) {
    return next();
  } // 增加类似表格特性的 plugin 时，依然需要在这里感知
  // 特性： copy 部分选区时需要携带容器


  var tableSelection = controller.query('tableSelection'); // 如果是表格选区，则不处理

  if (tableSelection) {
    return next();
  }

  var templateSelection = isSelectionInTemplateButton(controller); // 选区不全在模板按钮内，走默认行为

  if (templateSelection !== 'all') {
    return next();
  }

  var _controller$value = controller.value,
      document = _controller$value.document,
      selection = _controller$value.selection; // 找到最近的 templateButton

  var button = controller.value.document.getClosest(selection.anchor.key, TemplateButton.isTemplateButton); // @ts-ignore

  var fragment = document.getFragmentAtRange(selection, controller);
  var isOpen = TemplateButton.isOpen(controller, button.key); // Open 的情况下，不需要 copy 整个模板按钮，取出其 nodes

  if (isOpen) {
    // @ts-ignore
    fragment = Document.create({
      nodes: fragment.nodes[0].nodes
    });
  }

  event.clipboardData.setData(MIME_TYPES.FRAGMENT, transferUtils.encodeFragment(fragment));
  return next();
};
//# sourceMappingURL=onCangjieCopyOrCut.js.map