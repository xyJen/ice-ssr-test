{"version":3,"sources":["../../../../src/bi/actions/index.ts"],"names":["createActionHandlers","TOGGLE_TEMPLATE_BUTTON_OPEN","Symbol","SET_TEMPLATE_BUTTON_DATA","INSERT_TEMPLATE_BUTTON","INSERT_FRAGMENT","DELETE_BUTTON","COPY_BUTTON","CUT_BUTTON","insertTemplateButton","isInsertTemplateButton","toggleTemplateButton","isToggleTemplateButton","setTemplateButton","isSetTemplateButton","insertTemplateButtonFragment","isInsertTemplateButtonFragment","deleteTemplateButton","isDeleteTemplateButton","copyTemplateButton","isCopyTemplateButton","cutTemplateButton","isCutTemplateButton","actions","isActions"],"mappings":"AAAA,SAASA,oBAAT,QAA+C,oBAA/C;AAGA,IAAMC,2BAA2B,GAAGC,MAAM,CAAC,6BAAD,CAA1C;AACA,IAAMC,wBAAwB,GAAGD,MAAM,CAAC,0BAAD,CAAvC;AACA,IAAME,sBAAsB,GAAGF,MAAM,CAAC,wBAAD,CAArC;AACA,IAAMG,eAAe,GAAGH,MAAM,CAAC,iBAAD,CAA9B;AACA,IAAMI,aAAa,GAAGJ,MAAM,CAAC,eAAD,CAA5B;AACA,IAAMK,WAAW,GAAGL,MAAM,CAAC,aAAD,CAA1B;AACA,IAAMM,UAAU,GAAGN,MAAM,CAAC,YAAD,CAAzB;;4BAMIF,oBAAoB,CAAeI,sBAAf,C;IADtBK,oB;IAAsBC,sB;;6BAKpBV,oBAAoB,CAAkBC,2BAAlB,C;IADtBU,oB;IAAsBC,sB;;6BAKpBZ,oBAAoB,CAAsCG,wBAAtC,C;IADtBU,iB;IAAmBC,mB;;6BASjBd,oBAAoB,CAA6CK,eAA7C,C;IADtBU,4B;IAA8BC,8B;;6BAK5BhB,oBAAoB,CAAkBM,aAAlB,C;IADtBW,oB;IAAsBC,sB;;6BAKpBlB,oBAAoB,CAAkBO,WAAlB,C;IADtBY,kB;IAAoBC,oB;;6BAKlBpB,oBAAoB,CAAkBQ,UAAlB,C;IADtBa,iB;IAAmBC,mB;;AAIrB,OAAO,IAAMC,OAAO,GAAG;AACrBd,EAAAA,oBAAoB,EAApBA,oBADqB;AAErBE,EAAAA,oBAAoB,EAApBA,oBAFqB;AAGrBE,EAAAA,iBAAiB,EAAjBA,iBAHqB;AAIrBE,EAAAA,4BAA4B,EAA5BA,4BAJqB;AAKrBE,EAAAA,oBAAoB,EAApBA,oBALqB;AAMrBE,EAAAA,kBAAkB,EAAlBA,kBANqB;AAOrBE,EAAAA,iBAAiB,EAAjBA;AAPqB,CAAhB;AAUP,OAAO,IAAMG,SAAS,GAAG;AACvBd,EAAAA,sBAAsB,EAAtBA,sBADuB;AAEvBE,EAAAA,sBAAsB,EAAtBA,sBAFuB;AAGvBE,EAAAA,mBAAmB,EAAnBA,mBAHuB;AAIvBE,EAAAA,8BAA8B,EAA9BA,8BAJuB;AAKvBE,EAAAA,sBAAsB,EAAtBA,sBALuB;AAMvBE,EAAAA,oBAAoB,EAApBA,oBANuB;AAOvBE,EAAAA,mBAAmB,EAAnBA;AAPuB,CAAlB","sourcesContent":["import { createActionHandlers, Document } from \"@ali/4ever-cangjie\";\nimport { TemplateButtonData } from '../../mo';\n\nconst TOGGLE_TEMPLATE_BUTTON_OPEN = Symbol('TOGGLE_TEMPLATE_BUTTON_OPEN');\nconst SET_TEMPLATE_BUTTON_DATA = Symbol('SET_TEMPLATE_BUTTON_DATA');\nconst INSERT_TEMPLATE_BUTTON = Symbol('INSERT_TEMPLATE_BUTTON');\nconst INSERT_FRAGMENT = Symbol('INSERT_FRAGMENT');\nconst DELETE_BUTTON = Symbol('DELETE_BUTTON');\nconst COPY_BUTTON = Symbol('COPY_BUTTON');\nconst CUT_BUTTON = Symbol('CUT_BUTTON');\n\nexport type SetDataProps = Partial<Omit<TemplateButtonData['metadata'], 'isOpen'>>;\n\nconst [\n  insertTemplateButton, isInsertTemplateButton,\n] = createActionHandlers<SetDataProps>(INSERT_TEMPLATE_BUTTON);\n\nconst [\n  toggleTemplateButton, isToggleTemplateButton,\n] = createActionHandlers<{ key: string }>(TOGGLE_TEMPLATE_BUTTON_OPEN);\n\nconst [\n  setTemplateButton, isSetTemplateButton,\n] = createActionHandlers<{ key: string, data: SetDataProps }>(SET_TEMPLATE_BUTTON_DATA);\n\ninterface InsertFragmentProps extends Required<Omit<SetDataProps, 'title'>>{\n  fragment: Document;\n}\n\nconst [\n  insertTemplateButtonFragment, isInsertTemplateButtonFragment,\n] = createActionHandlers<{ key: string, data: InsertFragmentProps }>(INSERT_FRAGMENT);\n\nconst [\n  deleteTemplateButton, isDeleteTemplateButton,\n] = createActionHandlers<{ key: string }>(DELETE_BUTTON);\n\nconst [\n  copyTemplateButton, isCopyTemplateButton,\n] = createActionHandlers<{ key: string }>(COPY_BUTTON);\n\nconst [\n  cutTemplateButton, isCutTemplateButton,\n] = createActionHandlers<{ key: string }>(CUT_BUTTON);\n\n\nexport const actions = {\n  insertTemplateButton,\n  toggleTemplateButton,\n  setTemplateButton,\n  insertTemplateButtonFragment,\n  deleteTemplateButton,\n  copyTemplateButton,\n  cutTemplateButton,\n}\n\nexport const isActions = {\n  isInsertTemplateButton,\n  isToggleTemplateButton,\n  isSetTemplateButton,\n  isInsertTemplateButtonFragment,\n  isDeleteTemplateButton,\n  isCopyTemplateButton,\n  isCutTemplateButton,\n}"],"file":"index.js"}