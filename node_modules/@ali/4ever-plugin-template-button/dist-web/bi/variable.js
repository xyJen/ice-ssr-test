// 默认提供补零版本
// ref https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#parameters
var localeDateOptions = {
  year: 'numeric',
  month: '2-digit',
  day: '2-digit'
};
export function createVariables(i18n) {
  /**
   * 模板内容替换函数
   * 比如：模板内容中的 %XX% 会被如下 key 为 XX 的函数求值并替换
   */
  var variable = {
    DATE: function DATE() {
      return new Date().toLocaleDateString([], localeDateOptions);
    },
    DATE1: function DATE1() {
      return variable.DATE().replace(/\//g, '-');
    },
    TOMORROW: function TOMORROW() {
      var date = new Date();
      date.setDate(date.getDate() + 1);
      return date.toLocaleDateString([], localeDateOptions);
    },
    YESTERDAY: function YESTERDAY() {
      var date = new Date();
      date.setDate(date.getDate() - 1);
      return date.toLocaleDateString([], localeDateOptions);
    },
    TIME0: function TIME0() {
      return variable.TIME();
    },
    TIME: function TIME() {
      var date = new Date();
      return padding0("" + date.getHours(), 2) + ":" + padding0("" + date.getMinutes(), 2);
    },
    YEAR: function YEAR() {
      return new Date().getFullYear();
    },
    MONTH: function MONTH() {
      return new Date().getMonth() + 1;
    },
    MONTH0: function MONTH0() {
      return padding0("" + variable.MONTH(), 2);
    },
    DAY: function DAY() {
      return new Date().getDate();
    },
    DAY0: function DAY0() {
      return padding0("" + variable.DAY(), 2);
    },
    QUARTER: function QUARTER() {
      var month = new Date().getMonth() + 1;

      if (month <= 3) {
        return 1;
      } else if (month <= 6) {
        return 2;
      } else if (month <= 9) {
        return 3;
      } else {
        return 4;
      }
    },
    // 今天为当前的第几自然周
    WEEK: function WEEK() {
      var date = new Date();
      var year = date.getFullYear();
      var firstDay = new Date(year, 0, 1);
      var pastDays = (date.getTime() - firstDay.getTime()) / 86400000;
      return Math.ceil((pastDays + firstDay.getDay() + 1) / 7);
    },
    WEEK0: function WEEK0() {
      return padding0("" + variable.WEEK(), 2);
    },
    DAYOFWEEK: function DAYOFWEEK() {
      var weekday = new Date().getDay();
      var str = (i18n == null ? void 0 : i18n.weeks) || 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday';
      return str.split(',')[weekday];
    }
  };
  return variable;
}

function padding0(origin, digit) {
  if (origin.length >= digit) return origin;
  return '0'.repeat(digit - origin.length) + origin;
}
//# sourceMappingURL=variable.js.map