import _extends from "@babel/runtime/helpers/extends";
import { queries } from "./queries";
import { createCommands } from "./commands";
import { actions, isActions } from "./actions";
import { onKeyDown } from "./handlers/onKeyDown";
import { TemplateButton, moFactory } from "../mo";
import { createOnAction } from "./handlers/onAction";
import { createMenubar } from "./handlers/createMenubar";
import { createToolbar } from "./handlers/createToolbar";
import { onCangjieSelect } from "./handlers/onCangjieSelect";
import { createRenderNode } from "./handlers/createRenderNode";
import { onCangjieCopyOrCut } from "./handlers/onCangjieCopyOrCut";
import { createNormalizeNode } from "./handlers/createNormalizeNode";
import { createRenderToolbar } from "./handlers/createRenderToolbar";
import { createRenderHoverToolbar } from "./handlers/createRenderHoverToolbar";
export var biFactory = function biFactory(configs) {
  var config = configs['templateButton'] || {};
  return _extends({}, moFactory({}), {
    queries: queries,
    actions: actions,
    isActions: isActions,
    models: {
      klass: 'block',
      type: TemplateButton.TYPE
    },
    onKeyDown: onKeyDown,
    menubar: createMenubar(),
    onCangjieSelect: onCangjieSelect,
    onCangjieCut: onCangjieCopyOrCut,
    onCangjieCopy: onCangjieCopyOrCut,
    normalizeNode: createNormalizeNode(),
    toolbar: createToolbar(config),
    commands: createCommands(config),
    onAction: createOnAction(config),
    renderNode: createRenderNode(config),
    renderToolbar: createRenderToolbar(config),
    renderHoverToolbar: createRenderHoverToolbar(config)
  });
};
//# sourceMappingURL=index.js.map