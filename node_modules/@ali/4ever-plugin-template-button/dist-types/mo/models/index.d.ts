import { Block, Controller, Node } from '@ali/4ever-cangjie';
import { Container, ContainerData } from '@ali/4ever-plugin-container';
export interface TemplateButtonData extends ContainerData<'templateButton'> {
    readonly metadata: {
        direction: 'top' | 'bottom';
        isOnce: boolean;
        isOpen?: boolean;
        title: string;
    };
}
export declare class TemplateButton extends Container<TemplateButtonData> {
    static SUB_TYPE: string;
    static isTemplateButton(node: any): node is TemplateButton;
    static isOpen(controller: Controller, key: string): boolean;
    static isVoid(controller: Controller, node: Node): boolean;
    static createTemplateButton(metadata?: Partial<Omit<TemplateButtonData['metadata'], 'isOpen'>>, listId?: string): Block<{
        subType: string;
    }, import("@ali/4ever-cangjie").BlockChildren> | Block<ContainerData<string, Record<string, any>>, import("@ali/4ever-cangjie").BlockChildren>;
}
