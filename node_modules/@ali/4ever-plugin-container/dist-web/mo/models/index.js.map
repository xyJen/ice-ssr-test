{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Block","ELEMENT_TYPE","Container","createContainer","properties","create","type","TYPE","data","subType","isContainer","maybeContainer","isBlock","matchSubType","isVoid","controller","node","isTemplateButton","injections","value","isTemplateButtonOpen","find","inj","metadata","isOpen","undefined","key"],"mappings":";;AAAA,SAASA,KAAT,QAA6D,oBAA7D;AACA,SAASC,YAAT;AAcA,WAAsBC,SAAtB;AAAA;;AAAA;AAAA;AAAA;;AAAA,YAGSC,eAHT,GAGE,yBACEC,UADF,EAEE;AACA,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,oBAAaC,MAAb,YAAoB;AAClBC,QAAAA,IAAI,EAAEJ,SAAS,CAACK,IADE;AAElBC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAEL;AADL;AAFY,OAApB;AAMD;;AACD,kBAAaC,MAAb,yBACKD,UADL;AAEEE,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AAFlB;AAID,GAlBH;;AAAA,YAoBSG,WApBT,GAoBE,qBACEC,cADF,EAEEF,OAFF,EAGkC;AAChC,QAAI,CAACT,KAAK,CAACY,OAAN,CAAcD,cAAd,CAAL,EAAoC;AAClC,aAAO,KAAP;AACD;;AACD,QAAME,YAAY,GAAGJ,OAAO,GACxBE,cAAc,CAACH,IAAf,CAAoBC,OAApB,KAAgCA,OADR,GAExB,IAFJ;AAGA,WACEE,cAAc,CAACL,IAAf,KAAwBJ,SAAS,CAACK,IAAlC,IACAM,YAFF;AAID;AAED;AACF;AACA;AACA;AAvCA;;AAAA,YAwCSC,MAxCT,GAwCE,gBAAcC,UAAd,EAAsCC,IAAtC,EAAkD;AAAA;;AAChD,QAAMC,gBAAgB,GAAGf,SAAS,CAACQ,WAAV,CAAsBM,IAAtB,EAA4B,gBAA5B,CAAzB;AADgD,QAExCE,UAFwC,GAEzBH,UAAU,CAACI,KAFc,CAExCD,UAFwC;AAGhD,QAAME,oBAAoB,gDAAIF,UAAU,CAACG,IAAX,CAAgB,UAAAC,GAAG;AAAA;;AAAA,aAAI,cAAAA,GAAG,CAACd,IAAJ,qDAAUe,QAAV,wCAAoBC,MAApB,MAA+BC,SAA/B,IAA4CH,GAAG,CAACI,GAAJ,KAAYV,IAAI,CAACU,GAAjE;AAAA,KAAnB,CAAJ,+CAAI,iBAA0FlB,IAA9F,+CAAI,uBAAgGe,QAApG,qBAAI,uBAA0GC,MAA9G,oCAAwH,KAAlJ;AACA,WAAOP,gBAAgB,IAAI,CAACG,oBAA5B;AACD,GA7CH;;AAAA;AAAA,EAAiGpB,KAAjG;AAAsBE,S,CACbK,I,GAAON,Y","sourcesContent":["import { Block, Data, BlockChildren, Controller, Node } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\nexport interface ContainerData<T, M = Record<string, any>> extends Data {\n  readonly subType: T;\n  readonly metadata?: M;\n}\n\nexport type ContainerChildren = BlockChildren;\n\ninterface ContainerProperties<D extends ContainerData<string> = ContainerData<string>, N extends BlockChildren = ContainerChildren> {\n  data: D;\n  nodes?: N;\n}\n\nexport abstract class Container<T extends ContainerData<string> = ContainerData<string>> extends Block<T, Block[]> {\n  static TYPE = ELEMENT_TYPE;\n  \n  static createContainer(\n    properties: ContainerProperties | string,\n  ) {\n    if (typeof properties === 'string') {\n      return super.create({\n        type: Container.TYPE,\n        data: {\n          subType: properties,\n        },\n      });\n    }\n    return super.create({\n      ...properties,\n      type: Container.TYPE,\n    });\n  }\n\n  static isContainer<D extends ContainerData<string> = ContainerData<string>>(\n    maybeContainer: any,\n    subType?: D['subType'],\n  ): maybeContainer is Container<D> {\n    if (!Block.isBlock(maybeContainer)) {\n      return false;\n    }\n    const matchSubType = subType\n      ? maybeContainer.data.subType === subType\n      : true;\n    return (\n      maybeContainer.type === Container.TYPE &&\n      matchSubType\n    );\n  }\n\n  /**\n   * @deprecated\n   * 临时冗余，待 container 迁移为 cangjie 内置插件后移除\n   */\n  static isVoid(controller: Controller, node: Node) {\n    const isTemplateButton = Container.isContainer(node, 'templateButton');\n    const { injections } = controller.value;\n    const isTemplateButtonOpen =  injections.find(inj => inj.data?.metadata?.isOpen !== undefined && inj.key === node.key)?.data?.metadata?.isOpen ?? false;\n    return isTemplateButton && !isTemplateButtonOpen;\n  }\n}\n"],"file":"index.js"}