{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Card","Block","create","properties","Error","isCard","type","TYPE","maybeCard","isBlock","ELEMENT_TYPE"],"mappings":";;;;;;;AAAA;;AACA;;AAmBe,MAAMA,IAAN,SAAmBC,kBAAnB,CAAiD;AAG9D,SAAOC,MAAP,CACEC,UADF,EAEE;AACA,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,QAAIJ,IAAI,CAACK,MAAL,CAAYF,UAAZ,CAAJ,EAA6B;AAC3B,aAAOA,UAAP;AACD;;AACD,WAAO,MAAMD,MAAN,CAAqB,EAC1B,GAAGC,UADuB;AAE1BG,MAAAA,IAAI,EAAEN,IAAI,CAACO;AAFe,KAArB,CAAP;AAID;;AAED,SAAOF,MAAP,CAAcG,SAAd,EAAiD;AAC/C,WAAOP,mBAAMQ,OAAN,CAAcD,SAAd,KAA4BA,SAAS,CAACF,IAAV,KAAmBN,IAAI,CAACO,IAA3D;AACD;;AApB6D;;;AAA3CP,I,CACZO,I,GAAOG,kB","sourcesContent":["import { Block, BlockChildren, Data } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\nexport interface CardData<T = Record<string, any>> extends Data {\n  readonly cardType?: string;\n  readonly height?: number;\n  readonly spacing?: {\n    readonly before?: number;\n    readonly after?: number;\n  };\n  readonly metadata?: T;\n}\n\ntype CardChildren = BlockChildren;\n\nexport interface CardProperties<D = CardData, N extends BlockChildren = CardChildren> {\n  data?: D;\n  nodes?: N;\n}\n\nexport default class Card extends Block<CardData, CardChildren> {\n  static TYPE = ELEMENT_TYPE;\n\n  static create<SD = CardData, SN extends BlockChildren = CardChildren>(\n    properties: Card | CardProperties<SD, SN> | string,\n  ) {\n    if (typeof properties === 'string') {\n      throw new Error('`Card.create` does not accept string');\n    }\n    if (Card.isCard(properties)) {\n      return properties as Block<SD, SN>;\n    }\n    return super.create<SD, SN>({\n      ...properties,\n      type: Card.TYPE,\n    });\n  }\n\n  static isCard(maybeCard: any): maybeCard is Card {\n    return Block.isBlock(maybeCard) && maybeCard.type === Card.TYPE;\n  }\n}\n"],"file":"index.js"}