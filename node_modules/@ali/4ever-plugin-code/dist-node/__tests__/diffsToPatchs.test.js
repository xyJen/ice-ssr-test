"use strict";

var _diffMatch = require("../components/Codemirror/diffMatch");

const testCases = [{
  name: 'insert',
  input: ['const a = ', 'const a = 1'],
  output: [{
    type: 'insert',
    value: '1',
    offset: 10
  }]
}, {
  name: 'multiInsert',
  input: ['a\nb', ' a\n b'],
  output: [{
    type: 'insert',
    value: ' ',
    offset: 0
  }, {
    type: 'insert',
    value: ' ',
    offset: 3
  }]
}, {
  name: 'delete',
  input: ['const a = 1', 'const a = '],
  output: [{
    type: 'delete',
    value: '1',
    offset: 10
  }]
}, {
  name: 'multiDelete',
  input: [' a\n b', 'a\nb'],
  output: [{
    type: 'delete',
    value: ' ',
    offset: 0
  }, {
    type: 'delete',
    value: ' ',
    offset: 2
  }]
}];
describe('test IndUtil.fromBlock', () => {
  testCases.forEach(testCase => {
    const {
      name,
      input,
      output
    } = testCase;
    it(`code diffMatch: ${name}`, () => {
      expect((0, _diffMatch.diffsToPatchs)(input[0], input[1])).toEqual(output);
    });
  });
});
//# sourceMappingURL=diffsToPatchs.test.js.map