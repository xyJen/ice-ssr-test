{"version":3,"sources":["../../../src/bi/index.ts"],"names":["handleEvent","event","controller","next","commands","insertCode","removeCode","updateCode","biFactory","configs","codeConfig","code","queries","lazyRenderStrategy","onKeyDown","onAction","onBeforeInput","onCompositionStart","onCompositionEnd","renderNode","renderHoverToolbar","locale","toolbar","menubar","quickInsert","onCangjieSelect","getSnippetConfig","models","klass","type"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AAEA,SAASA,WAAT,CACEC,KADF,EAEEC,UAFF,EAGEC,IAHF,EAIE;AACA,MAAI,iCAAmBF,KAAnB,EAA0BC,UAA1B,CAAJ,EAA2C;AACzC,WAAOA,UAAP;AACD;;AACD,SAAOC,IAAI,EAAX;AACD;;AAED,MAAMC,QAAQ,GAAG;AACfC,EAAAA,UAAU,EAAE,0BADG;AAEfC,EAAAA,UAAU,EAAVA,mBAFe;AAGfC,EAAAA,UAAU,EAAVA;AAHe,CAAjB;;AAOO,MAAMC,SAAoB,GAAIC,OAAD,IAAa;AAC/C,QAAMC,UAAU,GAAGD,OAAO,CAACE,IAAR,IAAgB,EAAnC;AAEA,SAAO,EACL,GAAG,oBAAU,EAAV,CADE;AAELP,IAAAA,QAFK;AAGLQ,IAAAA,OAAO,EAAE;AACPC,MAAAA,kBAAkB,EAAlBA;AADO,KAHJ;AAMLC,IAAAA,SAAS,EAAE,8BAAgBJ,UAAhB,CANN;AAOLK,IAAAA,QAAQ,EAAE,6BAAeL,UAAf,CAPL;AAQLM,IAAAA,aAAa,EAAEhB,WARV;AASLiB,IAAAA,kBAAkB,EAAEjB,WATf;AAULkB,IAAAA,gBAAgB,EAAElB,WAVb;AAWLmB,IAAAA,UAAU,EAAE,gCAAkBT,UAAlB,CAXP;AAYLU,IAAAA,kBAAkB,EAAE,uCAAyBV,UAAzB,CAZf;AAaLW,IAAAA,MAAM,EAAEX,UAAU,CAACW,MAbd;AAcLC,IAAAA,OAAO,EAAE,4BAAcZ,UAAd,CAdJ;AAeLa,IAAAA,OAAO,EAAPA,gBAfK;AAgBLC,IAAAA,WAAW,EAAXA,0BAhBK;AAiBLC,IAAAA,eAAe,EAAE,qCAjBZ;AAkBLC,IAAAA,gBAAgB,EAAhBA,yBAlBK;AAmBLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,IAAI,EAAE;AAFA;AAnBH,GAAP;AAwBD,CA3BM","sourcesContent":["import { Controller, BiFactory } from '@ali/4ever-cangjie';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport createOnAction from './handlers/createOnAction';\nimport createRenderBlock from './createRenderBlock';\nimport createToolbar from './createToolbar';\nimport shouldPreventEvent from './queries/shouldPreventEvent';\nimport lazyRenderStrategy from '../common/queries/lazyRenderStrategy';\nimport insertCode from './commands/insertCode';\nimport removeCode from './commands/removeCode';\nimport updateCode from './commands/updateCode';\nimport quickInsert from './quickInsertConfig';\nimport menubar from './menubar';\nimport createOnCangjieSelect from './handlers/createOnCangjieSelect';\nimport CodeModel from '../mo/models';\nimport moFactory from '../mo/index';\nimport type { CodePluginConfig } from './types'\nimport createRenderHoverToolbar from './createRenderHoverToolbar';\nimport getSnippetConfig from './getSnippetConfig';\n\nfunction handleEvent(\n  event: React.SyntheticEvent,\n  controller: Controller,\n  next: () => void,\n) {\n  if (shouldPreventEvent(event, controller)) {\n    return controller;\n  }\n  return next();\n}\n\nconst commands = {\n  insertCode: insertCode(),\n  removeCode,\n  updateCode,\n};\n\n\nexport const biFactory: BiFactory = (configs) => {\n  const codeConfig = configs.code || {} as CodePluginConfig;\n\n  return {\n    ...moFactory({}),\n    commands,\n    queries: {\n      lazyRenderStrategy,\n    },\n    onKeyDown: createOnKeyDown(codeConfig),\n    onAction: createOnAction(codeConfig),\n    onBeforeInput: handleEvent,\n    onCompositionStart: handleEvent,\n    onCompositionEnd: handleEvent,\n    renderNode: createRenderBlock(codeConfig),\n    renderHoverToolbar: createRenderHoverToolbar(codeConfig),\n    locale: codeConfig.locale,\n    toolbar: createToolbar(codeConfig),\n    menubar,\n    quickInsert,\n    onCangjieSelect: createOnCangjieSelect(),\n    getSnippetConfig,\n    models: {\n      klass: 'block',\n      type: 'code',\n    },\n  };\n};\n"],"file":"index.js"}