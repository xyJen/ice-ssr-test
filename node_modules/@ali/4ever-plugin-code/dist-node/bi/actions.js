"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.changeCode = changeCode;
exports.changeCodeData = changeCodeData;
exports.focusToCodeEditor = focusToCodeEditor;
exports.focusToTextEditor = focusToTextEditor;
exports.removeCode = removeCode;
exports.insertCode = insertCode;
exports.transformCode = transformCode;
exports.cancelCode = cancelCode;
exports.blurCode = blurCode;
exports.CODE_TRANSFORM = exports.CODE_BLUR = exports.CODE_CHANGE_DATA = exports.CODE_INSERT = exports.CODE_REMOVE = exports.CODE_FOCUS_TO_TEXT_EDITOR = exports.CODE_FOCUS_TO_CODE_EDITOR = exports.CODE_CHANGE = void 0;
const CODE_CHANGE = Symbol('change-code');
exports.CODE_CHANGE = CODE_CHANGE;
const CODE_FOCUS_TO_CODE_EDITOR = Symbol('focus-to-code-editor');
exports.CODE_FOCUS_TO_CODE_EDITOR = CODE_FOCUS_TO_CODE_EDITOR;
const CODE_FOCUS_TO_TEXT_EDITOR = Symbol('focus-to-text-editor');
exports.CODE_FOCUS_TO_TEXT_EDITOR = CODE_FOCUS_TO_TEXT_EDITOR;
const CODE_REMOVE = Symbol('remove-code-block');
exports.CODE_REMOVE = CODE_REMOVE;
const CODE_INSERT = Symbol('insert-code-block');
exports.CODE_INSERT = CODE_INSERT;
const CODE_CHANGE_DATA = Symbol('change-code-data');
exports.CODE_CHANGE_DATA = CODE_CHANGE_DATA;
const CODE_BLUR = Symbol('blur-code');
exports.CODE_BLUR = CODE_BLUR;
const CODE_TRANSFORM = Symbol('code-transform');
exports.CODE_TRANSFORM = CODE_TRANSFORM;

function changeCode(payload) {
  return {
    type: CODE_CHANGE,
    payload
  };
}

function changeCodeData(node, data) {
  return {
    type: CODE_CHANGE_DATA,
    payload: {
      data,
      node
    }
  };
}

function focusToCodeEditor(node) {
  return {
    type: CODE_FOCUS_TO_CODE_EDITOR,
    payload: {
      node
    }
  };
}

function focusToTextEditor(node, direction) {
  return {
    type: CODE_FOCUS_TO_TEXT_EDITOR,
    payload: {
      direction,
      node
    }
  };
}

function removeCode(node) {
  return {
    type: CODE_REMOVE,
    payload: {
      node
    }
  };
}

function insertCode(payload = {}) {
  return {
    type: CODE_INSERT,
    payload
  };
}

function transformCode() {
  return {
    type: CODE_TRANSFORM,
    payload: {}
  };
}

function cancelCode() {
  return {
    type: CODE_TRANSFORM,
    payload: {}
  };
}

function blurCode() {
  return {
    type: CODE_BLUR,
    payload: {}
  };
}
//# sourceMappingURL=actions.js.map