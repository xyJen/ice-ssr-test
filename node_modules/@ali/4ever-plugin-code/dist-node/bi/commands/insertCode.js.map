{"version":3,"sources":["../../../../src/bi/commands/insertCode.ts"],"names":["createInsertCode","config","insertCode","controller","id","code","syntax","theme","focusBlock","selection","blocks","document","value","type","command","Commands","insertBlock","isCollapsed","focus","isAtEndOfNode","moveToEndOfBlock","codeSetting","getDefaultSetting","closestSyntax","DEFAULT_LANGUAGE","closestTheme","DEFAULT_THEME","defaultTheme","defaultSyntax","data","height","text","isExpanded","map","block","join","codeNode","Block","create","nodes","Text","run","basicActions","createInsertBlockWithoutExtraBlankAction","node","createMergeDataAction","FOCUSED_CODE","key"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEe,SAASA,gBAAT,CAA2BC,MAA3B,EAAsD;AACnE,SAAO,SAASC,UAAT,CACLC,UADK,EAELC,EAFK,EAGLC,IAHK,EAILC,MAJK,EAKLC,KALK,EAML;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA,MAAzB;AAAiCC,MAAAA;AAAjC,QAA8CR,UAAU,CAACS,KAA/D;;AACA,QAAI,CAACH,SAAD,IAAc,CAACD,UAAnB,EAA+B;AAC7B,aAAOL,UAAP;AACD,KAJD,CAMA;;;AACA,QAAIK,UAAU,CAACK,IAAX,KAAoB,MAAxB,EAAgC;AAC9BV,MAAAA,UAAU,CAACW,OAAX,CAAmBC,sBAASC,WAA5B,EAAyC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAzC;AACD,KATD,CAWA;;;AACA,QACEJ,SAAS,CAACQ,WAAV,IACA,CAACR,SAAS,CAACS,KAAV,CAAgBC,aAAhB,CAA8BX,UAA9B,CAFH,EAGE;AACAL,MAAAA,UAAU,CAACW,OAAX,CAAmBC,sBAASK,gBAA5B;AACD;;AAED,UAAMC,WAAW,GAAGpB,MAAM,EAAEqB,iBAAR,IAA6BrB,MAAM,CAACqB,iBAAP,EAAjD;AACA,UAAM;AACJhB,MAAAA,MAAM,EAAEiB,aAAa,GAAGC,2BADpB;AAEJjB,MAAAA,KAAK,EAAEkB,YAAY,GAAGC;AAFlB,QAGF,qCAAuBf,QAAvB,EAAiCH,UAAjC,EAA6CF,MAA7C,KAAwD,EAH5D;AAIA,UAAMqB,YAAY,GAAGN,WAAW,EAAEd,KAAb,GAAqBc,WAAW,CAACd,KAAjC,GAAyCkB,YAA9D;AACA,UAAMG,aAAa,GAAGP,WAAW,EAAEf,MAAb,GAAsBe,WAAW,CAACf,MAAlC,GAA2CiB,aAAjE;AAEA,UAAMM,IAAuB,GAAG;AAC9BvB,MAAAA,MAAM,EAAE,mBAAMA,MAAN,IAAgBsB,aAAhB,GAAgCtB,MADV;AAE9BC,MAAAA,KAAK,EAAE,mBAAMA,KAAN,IAAeoB,YAAf,GAA8BpB,KAFP;AAG9BuB,MAAAA,MAAM,EAAE,IAHsB;AAI9B1B,MAAAA;AAJ8B,KAAhC;AAOA,QAAI2B,IAAY,GAAG1B,IAAnB;;AACA,QAAI,mBAAMA,IAAN,CAAJ,EAAiB;AACf0B,MAAAA,IAAI,GAAGtB,SAAS,CAACuB,UAAV,GACHtB,MAAM,CAACuB,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACH,IAA5B,EAAkCI,IAAlC,CAAuC,IAAvC,CADG,GAEH,EAFJ;AAGD;;AAED,UAAMC,QAAQ,GAAGC,mBAAMC,MAAN,CAAa;AAC5BzB,MAAAA,IAAI,EAAE,MADsB;AAE5BgB,MAAAA,IAF4B;AAG5BU,MAAAA,KAAK,EAAE,CAACC,kBAAKF,MAAL,CAAYP,IAAZ,CAAD;AAHqB,KAAb,CAAjB;;AAMA5B,IAAAA,UAAU,CAACsC,GAAX,CAAe,UAAf,EAA2BC,2BAAaC,wCAAb,CAAsD;AAC/EC,MAAAA,IAAI,EAAER;AADyE,KAAtD,CAA3B;AAGAjC,IAAAA,UAAU,CAACsC,GAAX,CAAe,UAAf,EAA2BC,2BAAaG,qBAAb,CAAmC;AAC5D,OAACC,mBAAD,GAAgBV,QAAQ,CAACW;AADmC,KAAnC,CAA3B;AAIA,WAAO5C,UAAP;AACD,GA7DD;AA8DD","sourcesContent":["import { Controller, Commands, Block, Text } from '@ali/4ever-cangjie';\nimport { isNil } from 'lodash-es';\nimport { biActions as basicActions } from '@ali/4ever-plugin-basic';\nimport { FOCUSED_CODE } from '../constants/value';\nimport { CodeData, CodePluginConfig } from '../types';\nimport findClosestCodeSetting from '../utils/findClosestCodeSetting';\nimport { DEFAULT_LANGUAGE } from '../../utils/constants/languages';\nimport { DEFAULT_THEME } from '../../utils/constants/themes';\n\nexport default function createInsertCode (config?: CodePluginConfig) {\n  return function insertCode(\n    controller: Controller,\n    id: string,\n    code?: string,\n    syntax?: string,\n    theme?: string,\n  ) {\n    const { focusBlock, selection, blocks, document } = controller.value;\n    if (!selection || !focusBlock) {\n      return controller;\n    }\n\n    // 代码行之间保证有空行\n    if (focusBlock.type === 'code') {\n      controller.command(Commands.insertBlock, { type: 'paragraph' });\n    }\n\n    // 防止段落被 split\n    if (\n      selection.isCollapsed &&\n      !selection.focus.isAtEndOfNode(focusBlock)\n    ) {\n      controller.command(Commands.moveToEndOfBlock);\n    }\n\n    const codeSetting = config?.getDefaultSetting && config.getDefaultSetting();\n    const {\n      syntax: closestSyntax = DEFAULT_LANGUAGE,\n      theme: closestTheme = DEFAULT_THEME,\n    } = findClosestCodeSetting(document, focusBlock, syntax) || {};\n    const defaultTheme = codeSetting?.theme ? codeSetting.theme : closestTheme;\n    const defaultSyntax = codeSetting?.syntax ? codeSetting.syntax : closestSyntax;\n\n    const data: Partial<CodeData> = {\n      syntax: isNil(syntax) ? defaultSyntax : syntax,\n      theme: isNil(theme) ? defaultTheme : theme,\n      height: null,\n      id,\n    };\n\n    let text: string = code!;\n    if (isNil(code)) {\n      text = selection.isExpanded\n        ? blocks.map((block) => block.text).join('\\n')\n        : '';\n    }\n\n    const codeNode = Block.create({\n      type: 'code',\n      data,\n      nodes: [Text.create(text)],\n    });\n\n    controller.run('onAction', basicActions.createInsertBlockWithoutExtraBlankAction({\n      node: codeNode,\n    }));\n    controller.run('onAction', basicActions.createMergeDataAction({\n      [FOCUSED_CODE]: codeNode.key,\n    }));\n\n    return controller;\n  }\n}\n"],"file":"insertCode.js"}