{"version":3,"sources":["../../../../src/bi/mobile/createRenderBlock.tsx"],"names":["createRenderBlock","config","renderBlock","props","controller","next","attributes","node","isSelected","type","Block","isBlock","locale"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAIb,SAASA,iBAAT,CAA2BC,MAA3B,EAA6C;AAC1D,SAAO,SAASC,WAAT,CACLC,KADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,QAAmCL,KAAzC;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAWF,IAAjB;;AACA,QAAIG,mBAAMC,OAAN,CAAcJ,IAAd,KAAuBE,IAAI,KAAK,MAApC,EAA4C;AAC1C,0BACE,eAAC,sBAAD;AACE,QAAA,UAAU,EAAEL,UADd;AAEE,QAAA,UAAU,EAAEE,UAFd;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,MAAM,EAAEN,MAAM,CAACW,MAJjB;AAKE,QAAA,UAAU,EAAEJ;AALd,QADF;AASD;;AACD,WAAOH,IAAI,EAAX;AACD,GAnBD;AAoBD","sourcesContent":["import * as React from 'react';\nimport { Controller, Block, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { MobileCode } from './MobileCode';\nimport { BiConfig } from '../types';\n\nexport default function createRenderBlock(config: BiConfig) {\n  return function renderBlock(\n    props: RenderNodeProps,\n    controller: Controller,\n    next: () => JSX.Element,\n  ) {\n    const { attributes, node, isSelected } = props;\n    const { type } = node as Block;\n    if (Block.isBlock(node) && type === 'code') {\n      return (\n        <MobileCode\n          controller={controller}\n          attributes={attributes}\n          node={node}\n          locale={config.locale}\n          isSelected={isSelected}\n        />\n      );\n    }\n    return next();\n  };\n}\n"],"file":"createRenderBlock.js"}