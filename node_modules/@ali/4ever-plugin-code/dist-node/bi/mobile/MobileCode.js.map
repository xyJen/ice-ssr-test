{"version":3,"sources":["../../../../src/bi/mobile/MobileCode.tsx"],"names":["MobileCode","locale","attributes","node","controller"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;uBAH4B,a;;AAarB,MAAMA,UAA4B,GAAG,CAAC;AAC3CC,EAAAA,MAD2C;AAE3CC,EAAAA,UAF2C;AAG3CC,EAAAA,IAH2C;AAI3CC,EAAAA;AAJ2C,CAAD,KAKtC;AACJ,sBACE,eAAC,mBAAD,6BACMF,UADN;AAEE,mBAAY,aAFd;AAGE,iBAAU;AAHZ,mBAIE,eAAC,yBAAD;AACE,IAAA,UAAU,EAAEE,UADd;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,MAAM,EAAEF;AAHV,IAJF,CADF;AAYD,CAlBM","sourcesContent":["import React from 'react';\nimport { Controller, Block, RenderNodeProps } from '@ali/4ever-cangjie';\nimport MobileCodeEditor from '../components/MobileCodeEditor';\nimport { CodeLocale } from '../types';\nimport { CodeWrapper } from '../../utils/constants/themes';\n\ninterface IProps {\n  controller: Controller;\n  node: RenderNodeProps<Block>['node'];\n  attributes: RenderNodeProps<Block>['attributes'];\n  locale: CodeLocale;\n  isSelected: boolean;\n}\n\nexport const MobileCode: React.FC<IProps> = ({\n  locale,\n  attributes,\n  node,\n  controller,\n}) => {\n  return (\n    <CodeWrapper \n      {...attributes} \n      data-testid=\"code-editor\" \n      data-type=\"code\">\n      <MobileCodeEditor\n        controller={controller}\n        node={node}\n        locale={locale}\n      />\n    </CodeWrapper>\n  );\n};\n"],"file":"MobileCode.js"}