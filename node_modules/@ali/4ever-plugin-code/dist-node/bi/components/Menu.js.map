{"version":3,"sources":["../../../../src/bi/components/Menu.tsx"],"names":["CODE_MENU_STYLE","whiteSpace","WithCodeMenu","Component","CodeMenu","props","menuItem","controller","action","title","extra","rest","value","handleClick","run","isDisabled","React","useMemo","query","undefined","CODE_INSERT_HOT_KEY_TIP","CodeRole","code","menu","MenuItem","inlineMenu","InlineMenuItem"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;uBAL4B,a;AAG5B;AAIA,MAAMA,eAAoC,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAA7C;;AAEA,SAASC,YAAT,CAAsBC,SAAtB,EAAgD;AAC9C,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAA6C;AAClD,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA2BF,KAAjC;AACA,UAAM;AAAEG,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA,KAAjB;AAAwB,SAAGC;AAA3B,QAAoCL,QAA1C;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAYL,UAAlB;;AAEA,UAAMM,WAAW,GAAG,MAAM;AACxB,UAAIL,MAAM,IAAIA,MAAM,KAAK,QAAzB,EAAmC;AACjC,eAAOD,UAAU,CAACO,GAAX,CAAe,UAAf,EAA2B,6BAA3B,CAAP;AACD;;AACDP,MAAAA,UAAU,CAACO,GAAX,CAAe,UAAf,EAA2B,0BAA3B;AACD,KALD;;AAOA,UAAMC,UAAU,GAAGC,KAAK,CAACC,OAAN,CACjB,MAAMV,UAAU,CAACW,KAAX,CAAiB,uBAAjB,KAA6CX,UAAU,CAACW,KAAX,CAAiB,6BAAjB,CADlC,EAEjB,CAACN,KAAD,CAFiB,CAAnB;AAKA,wBACE,eAAC,SAAD;AAAW,MAAA,QAAQ,EAAEG,UAArB;AAAiC,MAAA,KAAK,EAAEf,eAAxC;AAAyD,MAAA,KAAK,EAAEU,KAAK,KAAKS,SAAV,GAAsBT,KAAtB,GAA8BU;AAA9F,OAA2HT,IAA3H;AAAiI,MAAA,OAAO,EAAEE,WAA1I;AAAwJ,MAAA,IAAI,EAAEQ,eAASC;AAAvK,QACGb,KAAK,IAAI,EADZ,CADF;AAKD,GAtBD;AAuBD;;AAEM,MAAMc,IAAI,GAAGrB,YAAY,CAACsB,kBAAD,CAAzB;;AAEA,MAAMC,UAAU,GAAGvB,YAAY,CAACwB,wBAAD,CAA/B","sourcesContent":["import * as React from 'react';\nimport { MenuItem, InlineMenuItem } from '@ali/we-design';\nimport { MenuItemInnerProps } from '@ali/4ever-component';\nimport { insertCode, transformCode } from '../actions';\n;\nimport { CODE_INSERT_HOT_KEY_TIP } from '../utils/hotKeyTips';\nimport { CodeRole } from '../../utils/role';\n\nconst CODE_MENU_STYLE: React.CSSProperties = { whiteSpace: 'nowrap' };\n\nfunction WithCodeMenu(Component: React.FC<any>) {\n  return function CodeMenu(props: MenuItemInnerProps) {\n    const { menuItem, controller } = props;\n    const { action, title, extra, ...rest } = menuItem;\n    const { value } = controller;\n\n    const handleClick = () => {\n      if (action && action === 'format') {\n        return controller.run('onAction', transformCode());\n      }\n      controller.run('onAction', insertCode());\n    };\n\n    const isDisabled = React.useMemo(\n      () => controller.query('isSelectionInLinkCard') || controller.query('isSelectionInSubjectHeading'),\n      [value],\n    );\n\n    return (\n      <Component disabled={isDisabled} style={CODE_MENU_STYLE} extra={extra !== undefined ? extra : CODE_INSERT_HOT_KEY_TIP} {...rest} onClick={handleClick}  role={CodeRole.code}>\n        {title || ''}\n      </Component>\n    );\n  };\n}\n\nexport const menu = WithCodeMenu(MenuItem);\n\nexport const inlineMenu = WithCodeMenu(InlineMenuItem);\n"],"file":"Menu.js"}