{"version":3,"sources":["../../../../src/bi/components/CodeInlineToolbar.tsx"],"names":["codeMobileLayout","toolButtons","name","CodeInlineToolbar","props","locale","controller","node","isMobile","focusedCodeKey","triggerNode","handleCopy","React","useCallback","event","preventDefault","stopPropagation","text","handleDel","run","CopyCodeButton","copy","DelCodeButton","customToolButtons","undefined","moreToolButtons","nodeKey","query","unshift","codeToolbarLayout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { copyToClipboard } from '@ali/4ever-utils';\nimport { Button, DeleteNormal } from '@ali/we-design';\nimport { ToolbarCopyNormal } from '@ali/we-icon';\nimport {\n  Block,\n  Controller,\n} from '@ali/4ever-cangjie';\nimport {\n  InlineToolbar,\n} from '@ali/4ever-component';\nimport { removeCode } from '../actions';\nimport { IconButton } from '@ali/we-toolbar';\n;\n\nconst codeMobileLayout = [{\n  toolButtons: [{\n    name: 'code.del',\n  }],\n}];\n\ninterface InlineToolbarProps {\n  controller: Controller;\n  node: Block;\n  locale: Record<string, any>;\n  isMobile?: boolean;\n  focusedCodeKey?: string;\n  triggerNode: HTMLDivElement | null;\n}\n\nconst CodeInlineToolbar: React.FC<InlineToolbarProps> = (props) => {\n  const {\n    locale,\n    controller,\n    node,\n    isMobile,\n    focusedCodeKey,\n    triggerNode,\n  } = props;\n\n  const handleCopy = React.useCallback((event: React.MouseEvent | React.TouchEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    copyToClipboard(node.text || '');\n  }, [node]);\n\n  const handleDel = React.useCallback((event: React.MouseEvent | React.TouchEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    controller.run('onAction', removeCode(node));\n  }, [controller, node]);\n\n  const CopyCodeButton = () => {\n    return (\n      <IconButton testid=\"code-block-copy\" onClick={handleCopy} title={locale.copy} icon={<ToolbarCopyNormal />} />\n    );\n  };\n\n  const DelCodeButton = () => {\n    // 加上 title，二次点击 onClick 才生效\n    return <Button testid=\"code-block-remove\" onClick={handleDel} bordered={false} icon={<DeleteNormal />} />;\n  };\n\n  const customToolButtons = {\n    'code.copy': CopyCodeButton,\n    'code.del': DelCodeButton,\n  };\n\n  if (isMobile) {\n    return (\n      <InlineToolbar\n        visible\n        triggerNode={triggerNode || undefined}\n        inlineLayout={codeMobileLayout}\n        customToolButtons={{\n          'code.del': DelCodeButton,\n        }}\n      />\n    );\n  }\n\n  const moreToolButtons: any = [\n    //{\n    //  name: 'code.copy',\n    //}, \n    {\n      name: 'code.more',\n      nodeKey: focusedCodeKey,\n    }];\n  if (controller.query('canComment')) {\n    moreToolButtons.unshift({\n      name: 'comment',\n    });\n  }\n\n  const codeToolbarLayout = [{\n    toolButtons: [{\n      name: 'code.theme',\n      focusedCodeKey,\n    }],\n  }, {\n    toolButtons: [{\n      name: 'code.syntax',\n      focusedCodeKey,\n    }, {\n      name: 'code.wrap',\n      focusedCodeKey,\n    }],\n  }, {\n    toolButtons: moreToolButtons,\n  }];\n\n  return (\n    <InlineToolbar\n      visible\n      triggerNode={triggerNode || undefined}\n      inlineLayout={codeToolbarLayout}\n      customToolButtons={customToolButtons}\n      overlayClassName=\"code-toolbar-overlay\"\n    />\n  );\n};\n\nexport default CodeInlineToolbar;\n"],"file":"CodeInlineToolbar.js"}