{"version":3,"sources":["../../../../src/bi/components/ToolbarButton.tsx"],"names":["iconStyle","width","height","ToolbarButton","props","controller","locale","rest","handleClick","React","useCallback","run","buttonTitle","CodeRole","code","memo"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;uBAJ4B,a;AAa5B,MAAMA,SAA8B,GAAG;AACrCC,EAAAA,KAAK,EAAE,EAD8B;AAErCC,EAAAA,MAAM,EAAE;AAF6B,CAAvC;;wBAmBY,eAAC,yBAAD;AAAmB,EAAA,KAAK,EAAEF;AAA1B,E;;AAdZ,MAAMG,aAA2C,GAAIC,KAAD,IAAW;AAC7D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AAEA,QAAMI,WAAW,GAAGC,KAAK,CAACC,WAAN,CAClB,MAAML,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,0BAA3B,CADY,EAElB,CAACN,UAAD,CAFkB,CAApB;AAKA,sBACE,eAAC,qBAAD,6BACME,IADN;AAEE,IAAA,KAAK,EAAED,MAAM,CAACM,WAFhB;AAGE,IAAA,OAAO,EAAEN,MAAM,CAACM,WAHlB;AAIE,IAAA,MAAM,EAAC,uBAJT;AAKE,IAAA,IAAI,MALN;AAME,IAAA,OAAO,EAAEJ,WANX;AAOE,IAAA,IAAI,EAAEK,eAASC;AAPjB,KADF;AAWD,CAnBD;;4BAqBeL,KAAK,CAACM,IAAN,CAAWZ,aAAX,C","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { IconButton as Button } from '@ali/we-toolbar';\nimport { ToolbarCodeNormal } from '@ali/we-icon';\nimport { insertCode } from '../actions';\nimport { CodeRole } from '../../utils/role';\n\nexport interface ToolbarButtonProps {\n  controller: Controller;\n  locale: {\n    buttonTitle: string;\n  };\n}\n\nconst iconStyle: React.CSSProperties = {\n  width: 20,\n  height: 20,\n};\n\nconst ToolbarButton: React.FC<ToolbarButtonProps> = (props) => {\n  const { controller, locale, ...rest } = props;\n\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', insertCode()),\n    [controller],\n  );\n\n  return (\n    <Button\n      {...rest}\n      title={locale.buttonTitle}\n      tooltip={locale.buttonTitle}\n      testid=\"bi-toolbar-code-block\"\n      icon={<ToolbarCodeNormal style={iconStyle} />}\n      onClick={handleClick}\n      role={CodeRole.code}\n    />\n  );\n};\n\nexport default React.memo(ToolbarButton);\n"],"file":"ToolbarButton.js"}