{"version":3,"sources":["../../../../../src/bi/components/next/ToolbarLineWrapSelect.tsx"],"names":["ToolbarLineWrapSelect","props","locale","focusedCodeKey","controller","onOverlayVisibleChange","code","value","setValue","React","useState","data","wrap","getContainer","HoverToolbarHooks","useGetContainer","isOverlayVisible","setOverlayVisible","usePopoverVisible","options","useMemo","key","title","wrapOpen","icon","testid","wrapClose","handleChange","useCallback","val","codeBlock","run","wrapTitle","CodeRole","codeWrap"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;uBAN4B,a;;wBAyBlB,eAAC,2BAAD,O;;yBAKA,eAAC,2BAAD,O;;AAfH,MAAMA,qBAA4D,GAAIC,KAAD,IAAW;AACrF,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA;AAAtC,MAAiEJ,KAAvE;AACA,QAAMK,IAAI,GAAG,6BAAeF,UAAU,CAACG,KAA1B,EAAiCJ,cAAjC,CAAb;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBC,eAAMC,QAAN,CAAeJ,IAAI,EAAEK,IAAN,EAAYC,IAAZ,GAAmB,IAAnB,GAA0B,KAAzC,CAA1B;;AACA,QAAMC,YAAY,GAAGC,iCAAkBC,eAAlB,EAArB;;AACA,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCH,iCAAkBI,iBAAlB,CAAoC,eAApC,EAAqDb,sBAArD,CAA9C;;AAEA,QAAMc,OAAO,GAAGV,eAAMW,OAAN,CAAc,MAAM,CAAC;AACnCC,IAAAA,GAAG,EAAE,IAD8B;AAEnCC,IAAAA,KAAK,EAAEpB,MAAM,CAACqB,QAFqB;AAGnCC,IAAAA,IAAI,MAH+B;AAInCC,IAAAA,MAAM,EAAE;AAJ2B,GAAD,EAKjC;AACDJ,IAAAA,GAAG,EAAE,KADJ;AAEDC,IAAAA,KAAK,EAAEpB,MAAM,CAACwB,SAFb;AAGDF,IAAAA,IAAI,OAHH;AAIDC,IAAAA,MAAM,EAAE;AAJP,GALiC,CAApB,EAUZ,EAVY,CAAhB;;AAYA,QAAME,YAAY,GAAGlB,eAAMmB,WAAN,CAClBC,GAAD,IAAiB;AACf,UAAMC,SAAS,GAAG,6BAAe1B,UAAU,CAACG,KAA1B,EAAiCJ,cAAjC,CAAlB;;AACA,QAAI2B,SAAJ,EAAe;AACb1B,MAAAA,UAAU,CAAC2B,GAAX,CACE,UADF,EAEE,6BAAeD,SAAf,EAA0B;AACxBlB,QAAAA,IAAI,EAAEiB,GAAG,KAAK;AADU,OAA1B,CAFF;AAMArB,MAAAA,QAAQ,CAACqB,GAAD,CAAR;AACD;AACF,GAZkB,EAanB,CAACzB,UAAD,EAAaD,cAAb,CAbmB,CAArB;;AAgBA,sBACE,eAAC,0BAAD;AACE,IAAA,KAAK,EAAEI,KADT;AAEE,IAAA,OAAO,EAAEY,OAFX;AAGE,IAAA,QAAQ,EAAEQ,YAHZ;AAIE,IAAA,eAAe,EAAEV,iBAJnB;AAKE,IAAA,cAAc,EAAED,gBALlB;AAME,IAAA,YAAY,EAAEH,YANhB;AAOE,IAAA,OAAO,EAAEX,MAAM,CAAC8B,SAPlB;AAQE,IAAA,MAAM,EAAC,sBART;AASE,IAAA,IAAI,EAAEC,eAASC;AATjB,IADF;AAaD,CAhDM","sourcesContent":["import React from 'react';\nimport { TBIconSelect } from '@ali/we-design-next';\nimport { IconAutoWrap, IconOverflow, HoverToolbarHooks } from '@ali/4ever-component';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { CodeRole } from '../../../utils/role';\nimport { CodePluginConfig } from '../../types';\nimport getCurrentCode from '../../queries/getCurrentCode';\nimport { changeCodeData } from '../../actions';\n\nexport interface IToolbarLineWrapSelectProps {\n  controller: Controller;\n  locale: CodePluginConfig['locale'];\n  focusedCodeKey?: string;\n  onOverlayVisibleChange: (v: boolean) => void;\n}\n\nexport const ToolbarLineWrapSelect: React.FC<IToolbarLineWrapSelectProps> = (props) => {\n  const { locale, focusedCodeKey, controller, onOverlayVisibleChange } = props;\n  const code = getCurrentCode(controller.value, focusedCodeKey);\n  const [value, setValue] = React.useState(code?.data?.wrap ? 'on' : 'off');\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isOverlayVisible, setOverlayVisible] = HoverToolbarHooks.usePopoverVisible('code.lineWrap', onOverlayVisibleChange);\n\n  const options = React.useMemo(() => [{\n    key: 'on',\n    title: locale.wrapOpen,\n    icon: <IconAutoWrap />,\n    testid: 'option-on',\n  }, {\n    key: 'off',\n    title: locale.wrapClose,\n    icon: <IconOverflow />,\n    testid: 'option-off',\n  }], []);\n\n  const handleChange = React.useCallback(\n    (val: string) => {\n      const codeBlock = getCurrentCode(controller.value, focusedCodeKey);\n      if (codeBlock) {\n        controller.run(\n          'onAction',\n          changeCodeData(codeBlock, {\n            wrap: val === 'on',\n          }),\n        );\n        setValue(val);\n      }\n    },\n    [controller, focusedCodeKey],\n  );\n\n  return (\n    <TBIconSelect\n      value={value}\n      options={options}\n      onChange={handleChange}\n      onVisibleChange={setOverlayVisible}\n      overlayVisible={isOverlayVisible}\n      getContainer={getContainer}\n      tooltip={locale.wrapTitle}\n      testid=\"bi-toolbar-code-wrap\"\n      role={CodeRole.codeWrap}\n    />\n  )\n}"],"file":"ToolbarLineWrapSelect.js"}