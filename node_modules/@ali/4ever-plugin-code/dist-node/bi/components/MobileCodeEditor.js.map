{"version":3,"sources":["../../../../src/bi/components/MobileCodeEditor.tsx"],"names":["CodeEditor","props","locale","node","controller","data","theme","DEFAULT_THEME","height","wrap","codeRef","React","useRef","wrapperRef","selected","setSelected","useState","isPreviewing","query","handleClickOutside","useCallback","setTimeout","handleSelect","event","preventDefault","stopPropagation","handleCursor","leftPoint","EdgePoint","create","key","edge","run","selection","Selection","anchor","focus","target","document","querySelector","contains","position","text","memo"],"mappings":";;;;;;;;;;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAPA;uBAC4B,a;;AAc5B,MAAMA,UAAqC,GAAIC,KAAD,IAAW;AACvD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA+BH,KAArC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWF,IAAjB;AACA,QAAM;AAAEG,IAAAA,KAAK,GAAGC,qBAAV;AAAyBC,IAAAA,MAAzB;AAAiCC,IAAAA,IAAI,GAAG;AAAxC,MAAkDJ,IAAxD;AAEA,QAAMK,OAAO,GAAGC,KAAK,CAACC,MAAN,CAA6B,IAA7B,CAAhB;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACC,MAAN,CAA6B,IAA7B,CAAnB;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAhC;AACA,QAAMC,YAAY,GAAGb,UAAU,CAACc,KAAX,CAAiB,gBAAjB,CAArB;AAEA,QAAMC,kBAAkB,GAAGR,KAAK,CAACS,WAAN,CAAkB,MAAM;AACjD;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAL0B,EAKxB,EALwB,CAA3B;AAOA,QAAMO,YAAY,GAAGX,KAAK,CAACS,WAAN,CAClBG,KAAD,IAAgD;AAC9CA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GALkB,EAMnB,EANmB,CAArB;AASA,QAAMW,YAAY,GAAGf,KAAK,CAACS,WAAN,CAAkB,MAAM;AAC3C;AACA,UAAMO,SAAS,GAAGC,uBAAUC,MAAV,CAAiB;AACjCC,MAAAA,GAAG,EAAE3B,IAAI,CAAC2B,GADuB;AAEjCC,MAAAA,IAAI,EAAE;AAF2B,KAAjB,CAAlB;;AAIA3B,IAAAA,UAAU,CAAC4B,GAAX,CACE,iBADF,EAEE,qCAAmB;AACjBC,MAAAA,SAAS,EAAEC,uBAAUL,MAAV,CAAiB;AAC1BM,QAAAA,MAAM,EAAER,SADkB;AAE1BS,QAAAA,KAAK,EAAET;AAFmB,OAAjB;AADM,KAAnB,CAFF;AASD,GAfoB,EAelB,CAACvB,UAAD,EAAaD,IAAb,CAfkB,CAArB;AAiBA,wCAAkBO,OAAlB,EAA2BS,kBAA3B,EAA+C,KAA/C,EAAuDkB,MAAD,IAAY;AAChE;AACA,WAAOC,QAAQ,CAACC,aAAT,CAAuB,sCAAvB,GAAgEC,QAAhE,CAAyEH,MAAzE,KAAoF,KAA3F;AACD,GAHD;AAIA,sBACE;AAAK,IAAA,GAAG,EAAExB,UAAV;AAAsB,IAAA,KAAK,EAAE;AAAE4B,MAAAA,QAAQ,EAAE;AAAZ;AAA7B,kBACE,eAAC,mBAAD;AACE,IAAA,GAAG,EAAE/B,OADP;AAEE,IAAA,IAAI,EAAEP,IAAI,CAACuC,IAFb;AAGE,IAAA,KAAK,EAAEpC,KAHT;AAIE,IAAA,MAAM,EAAEE,MAJV;AAKE,IAAA,IAAI,EAAEL,IALR;AAME,IAAA,YAAY,EAAEmB,YANhB;AAOE,IAAA,WAAW,EAAEA,YAPf;AAQE,IAAA,OAAO,EAAEI,YARX;AASE,IAAA,YAAY,EAAEjB;AAThB,IADF,CADF;AAeD,CA9DD;;4BAgEeE,KAAK,CAACgC,IAAN,CAAW3C,UAAX,C","sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport * as React from 'react';\nimport { Controller, Block, CangjieSelectEvent, Selection, EdgePoint } from '@ali/4ever-cangjie';\n\nimport { CodePluginConfig } from '../types';\nimport { useOnClickOutside } from '@ali/4ever-component';\nimport { DEFAULT_THEME } from '../../utils/constants/themes';\nimport SimpleCode from '../../components/SimpleCode';\n\nexport interface CodeEditorProps {\n  controller: Controller;\n  node: Block;\n  locale: CodePluginConfig['locale'];\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = (props) => {\n  const { locale, node, controller } = props;\n  const { data } = node;\n  const { theme = DEFAULT_THEME, height, wrap = false } = data;\n\n  const codeRef = React.useRef<HTMLPreElement>(null);\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const [selected, setSelected] = React.useState(false);\n  const isPreviewing = controller.query('isQuickPreview');\n\n  const handleClickOutside = React.useCallback(() => {\n    // 延迟让toolbar消失，避免组件销毁导致无法删除，400是toolbar逻辑防抖时间\n    setTimeout(() => {\n      setSelected(false);\n    }, 400);\n  }, []);\n\n  const handleSelect = React.useCallback(\n    (event: React.MouseEvent | React.TouchEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      setSelected(true);\n    },\n    [],\n  );\n\n  const handleCursor = React.useCallback(() => {\n    // 移动端不知道为什么无法 focus 在 code 元素上，若不处理，光标会回到上一个地方，导致页面跳动。先 hack, click 后光标移动到代码块左端\n    const leftPoint = EdgePoint.create({\n      key: node.key,\n      edge: 'before',\n    });\n    controller.run(\n      'onCangjieSelect',\n      CangjieSelectEvent({\n        selection: Selection.create({\n          anchor: leftPoint,\n          focus: leftPoint,\n        }),\n      }),\n    );\n  }, [controller, node]);\n\n  useOnClickOutside(codeRef, handleClickOutside, false, (target) => {\n    // 目前难以获取整个 toolbar 的 dom ref，先临时处理 delete button 解决无法删除的 bug；后续改造成基于 isSelected 判断是否展示 toolbar\n    return document.querySelector('div[data-testid=\"code-block-remove\"]')?.contains(target) || false;\n  });\n  return (\n    <div ref={wrapperRef} style={{ position: 'relative' }}>\n      <SimpleCode\n        ref={codeRef}\n        code={node.text}\n        theme={theme}\n        height={height}\n        node={node}\n        onTouchStart={handleSelect}\n        onMouseDown={handleSelect}\n        onClick={handleCursor}\n        lineWrapping={wrap}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(CodeEditor);\n"],"file":"MobileCodeEditor.js"}