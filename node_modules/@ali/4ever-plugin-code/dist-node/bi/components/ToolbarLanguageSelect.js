"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _LanguageSelect = _interopRequireDefault(require("./LanguageSelect"));

var _getCurrentCode = _interopRequireDefault(require("../queries/getCurrentCode"));

var _actions = require("../actions");

var _languages = require("../../utils/constants/languages");

const _createElement = /*#__PURE__*/React.createElement;

const ToolbarLanguageSelect = props => {
  const {
    controller,
    locale,
    focusedCodeKey
  } = props;
  const code = (0, _getCurrentCode.default)(controller.value, focusedCodeKey);
  const handleChange = React.useCallback(syntax => {
    const codeBlock = (0, _getCurrentCode.default)(controller.value, focusedCodeKey);
    controller.run('onAction', (0, _actions.changeCodeData)(codeBlock, {
      syntax
    }));
  }, [controller, focusedCodeKey]);
  const languages = React.useMemo(() => (0, _languages.createCodeLanguages)(), []);
  const filterOptions = React.useCallback((search, option) => {
    return `${option.props?.children}`.toLowerCase().includes(search.toLowerCase());
  }, []);
  const inputTriggerText = React.useCallback(value => {
    const lang = languages.find(l => l.key === value)?.title || value;
    return lang;
  }, [languages]);
  return /*#__PURE__*/_createElement(_LanguageSelect.default, {
    locale: locale,
    value: code ? code.data.syntax : _languages.DEFAULT_LANGUAGE,
    onChange: handleChange,
    tip: locale.languageTitle,
    showArrow: true,
    style: {
      width: '110px'
    },
    filterOption: filterOptions,
    inputTriggerText: inputTriggerText
  });
};

var _default = ToolbarLanguageSelect;
exports.default = _default;
//# sourceMappingURL=ToolbarLanguageSelect.js.map