{"version":3,"sources":["../../../../src/bi/components/createSelect.tsx"],"names":["createSelect","options","createList","name","search","Select","props","onChange","tip","value","locale","renderTrigger","showArrow","style","filterOption","inputTriggerText","onVisibleChange","visible","selected","setSelected","React","useState","useEffect","handleChange","useCallback","val","onStopPropagation","evt","stopPropagation","scrollableContent","getScrollableContent","window","document","body","list","useMemo","filter","l","show","undefined","map","key","title","memo"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as React from 'react';\nimport { Select as SelectButton, SelectOption as Option } from '@ali/we-design';\nimport { capitalize } from 'lodash-es';\nimport {\n  useScrollableContent,\n} from '@ali/4ever-cangjie';\nimport { CodePluginConfig } from '../types';\n\nexport interface SelectOptions {\n  name: string;\n  createList: (\n    locale: CodePluginConfig['locale'],\n  ) => Array<{ title: React.ReactNode; key: string; show?: boolean; }>;\n  search?: boolean;\n}\n\nexport interface SelectProps {\n  value: string;\n  tip: string;\n  onChange: (value: string) => void;\n  locale: CodePluginConfig['locale'];\n  renderTrigger?: (value: any) => JSX.Element;\n  showArrow?: boolean;\n  style?: React.CSSProperties;\n  filterOption?: boolean | ((search: string, option: React.ReactNode) => boolean);\n  inputTriggerText?: (value: string) => string;\n  visible?: boolean;\n  onVisibleChange?: (v: boolean) => void;\n}\n\nexport default function createSelect(options: SelectOptions) {\n  const { createList, name, search } = options;\n  const Select: React.FC<SelectProps> = (props) => {\n    const { onChange, tip, value, locale, renderTrigger, showArrow, style, filterOption, inputTriggerText, onVisibleChange, visible } = props;\n    const [selected, setSelected] = React.useState(value);\n\n    React.useEffect(() => {\n      setSelected(value);\n    }, [value]);\n\n    const handleChange = React.useCallback(\n      (val: string) => {\n        onChange(val);\n      },\n      [onChange],\n    );\n\n    // code 不是 void，需要手动屏蔽事件传递\n    const onStopPropagation = React.useCallback((evt: any) => {\n      evt.stopPropagation();\n    }, []);\n\n    const scrollableContent = useScrollableContent();\n    const getScrollableContent = React.useCallback(() => {\n      return scrollableContent || window.document.body;\n    }, [scrollableContent]);\n\n    const list = React.useMemo(() => createList(locale).filter((l) => l.show !== false), [locale]);\n    return (\n      // onKeyDown 不阻止传递会导致删除、光标移动等操作影响编辑器\n      // onMouseDown 不阻止传递会导致首次点击时，搜索框不会聚焦\n      <div data-select-value={selected} onKeyDown={onStopPropagation} onClick={onStopPropagation} onMouseDown={onStopPropagation}>\n        <SelectButton\n          className={`code-block-${name}-select`}\n          testid={`code-block-${name}-select`}\n          title={tip}\n          value={selected}\n          onChange={handleChange}\n          style={style}\n          renderTrigger={renderTrigger}\n          showArrow={!!showArrow}\n          role={`code${capitalize(name)}`}\n          mode={ search ? 'search' : undefined }\n          filterOption={filterOption}\n          inputTriggerText={inputTriggerText}\n          getContainer={getScrollableContent}\n          placement=\"bottomLeft\"\n          // @ts-ignore we-design upgrade\n          disableDomAlign\n          onVisibleChange={onVisibleChange}\n          visible={visible}\n        >\n          {\n              list.map(l => (\n                <Option\n                  value={l.key}\n                  key={l.key}\n                  testid={l.key}\n                  role={`code${capitalize(name)}${capitalize(l.key)}`}\n                >\n                  <span>{l.title}</span>\n                </Option>\n              ))\n            }\n        </SelectButton>\n      </div>\n    );\n  };\n  return React.memo(Select);\n}\n"],"file":"createSelect.js"}