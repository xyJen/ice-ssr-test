"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.diffsToPatchs = diffsToPatchs;

var _diffMatchPatch = require("diff-match-patch");

const diffMatchPatchInstance = new _diffMatchPatch.diff_match_patch();

function diffsToPatchs(oldValue, newValue) {
  const result = [];
  const patches = diffMatchPatchInstance.patch_make(oldValue, newValue);
  Object.keys(patches).forEach(i => {
    const patch = patches[i];
    let offset = patch.start1;
    patch.diffs.forEach(([type, value]) => {
      switch (type) {
        case _diffMatchPatch.DIFF_DELETE:
          result.push({
            type: 'delete',
            value,
            offset
          });
          break;

        case _diffMatchPatch.DIFF_INSERT:
          result.push({
            type: 'insert',
            value,
            offset
          });
          offset += value.length;
          break;

        case _diffMatchPatch.DIFF_EQUAL:
          offset += value.length;
          break;

        default:
          throw Error(`Unsupported operation type: ${type}`);
      }
    });
  });
  return result;
}
//# sourceMappingURL=diffMatch.js.map