{"version":3,"sources":["../../../../../src/mo/serializer/htmlToJsonML/parseFromYuQue.ts"],"names":["parseFromYuQue","index","name","onOpenTag","state","attr","DATA_LAKE_CARD","CODEBLOCK","push","syntax","DATA_LANGUAGE","PLAIN_TEXT","theme","THEME_DEFAULT","onCloseTag","pop","codeBlockDom","htmlDom","querySelectorAll","append","textContent"],"mappings":";;;;;;;AACA;;AACA;;AAQA,SAASA,cAAT,GAA4C;AAC1C,MAAIC,KAAK,GAAG,CAAZ;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE,MADD;;AAGLC,IAAAA,SAAS,CAACC,KAAD,EAAeF,IAAf,EAA6BG,IAA7B,EAAwD;AAC/D,UAAIA,IAAI,CAACC,yBAAD,CAAJ,KAAyBC,oBAA7B,EAAwC,OAAO,KAAP;AAExCH,MAAAA,KAAK,CAACI,IAAN,CAAW,CACT,MADS,EAET;AACEC,QAAAA,MAAM,EAAEJ,IAAI,CAACK,wBAAD,CAAJ,IAAuBC,qBADjC;AAEEC,QAAAA,KAAK,EAAEC;AAFT,OAFS,CAAX;AAOA,aAAO,IAAP;AACD,KAdI;;AAgBLC,IAAAA,UAAU,CAACV,KAAD,EAAeF,IAAf,EAA6BG,IAA7B,EAAwD;AAChE,UAAIA,IAAI,CAACC,yBAAD,CAAJ,KAAyBC,oBAA7B,EAAwC,OAAO,KAAP;AACxCH,MAAAA,KAAK,CAACW,GAAN;AAEA,YAAMC,YAAY,GAAGZ,KAAK,CAACa,OAAN,CAAcC,gBAAd,CAClB,IAAGZ,yBAAe,IAAGC,oBAAU,GADb,EAEnBN,KAFmB,CAArB;AAIAG,MAAAA,KAAK,CAACe,MAAN,CAAa,CACX,MADW,EAEX;AACEV,QAAAA,MAAM,EAAEJ,IAAI,CAACK,wBAAD,CAAJ,IAAuBC,qBADjC;AAEEC,QAAAA,KAAK,EAAEC;AAFT,OAFW,EAMX,uCAAqBG,YAAY,EAAEI,WAAd,IAA6B,EAAlD,CANW,CAAb;AAQAnB,MAAAA,KAAK;AACL,aAAO,IAAP;AACD;;AAlCI,GAAP;AAoCD;;eAEcD,c","sourcesContent":["\nimport { MoState as State, MoAttributes as Attributes, HTMLToJsonMLRule, createTextWithString } from '@ali/4ever-cangjie';\nimport {\n  CODEBLOCK,\n  DATA_LAKE_CARD,\n  DATA_LANGUAGE,\n  PLAIN_TEXT,\n  THEME_DEFAULT,\n} from './constants';\n\nfunction parseFromYuQue(): HTMLToJsonMLRule {\n  let index = 0;\n  return {\n    name: 'code',\n\n    onOpenTag(state: State, name: string, attr: Attributes): boolean {\n      if (attr[DATA_LAKE_CARD] !== CODEBLOCK) return false;\n\n      state.push([\n        'code',\n        {\n          syntax: attr[DATA_LANGUAGE] || PLAIN_TEXT,\n          theme: THEME_DEFAULT,\n        },\n      ] as any);\n      return true;\n    },\n\n    onCloseTag(state: State, name: string, attr: Attributes): boolean {\n      if (attr[DATA_LAKE_CARD] !== CODEBLOCK) return false;\n      state.pop();\n\n      const codeBlockDom = state.htmlDom.querySelectorAll(\n        `[${DATA_LAKE_CARD}=${CODEBLOCK}]`,\n      )[index];\n\n      state.append([\n        'code',\n        {\n          syntax: attr[DATA_LANGUAGE] || PLAIN_TEXT,\n          theme: THEME_DEFAULT,\n        },\n        createTextWithString(codeBlockDom?.textContent || ''),\n      ]);\n      index++;\n      return true;\n    },\n  };\n}\n\nexport default parseFromYuQue;\n"],"file":"parseFromYuQue.js"}