{"version":3,"sources":["../../../../../src/mo/serializer/htmlToJsonML/utils.ts"],"names":["getSyntax","codeBlockDom","PLAIN_TEXT","className","includes","SYNTAX_PREFIX","getElementsByTagName","classList","Array","apply","syntaxClass","find","clsname","slice","length","getTextContent","codeBlock","testDom","document","createElement","innerHTML","replace","REG_BR_TAG","textContent"],"mappings":";;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACO,SAASA,SAAT,CAAmBC,YAAnB,EAAkD;AACvD,MAAI,CAACA,YAAL,EAAmB;AACjB,WAAOC,qBAAP;AACD;;AACD,MAAI,CAACD,YAAY,CAACE,SAAb,CAAuBC,QAAvB,CAAgCC,wBAAhC,CAAL,EAAqD;AACnDJ,IAAAA,YAAY,GAAGA,YAAY,CAACK,oBAAb,CAAkC,MAAlC,EAA0C,CAA1C,CAAf;;AACA,QAAI,CAACL,YAAL,EAAmB;AACjB,aAAOC,qBAAP;AACD;AACF,GATsD,CAUvD;;;AACA,QAAMK,SAAmB,GAAGC,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBR,YAAY,CAACM,SAA/B,CAA5B;AACA,QAAMG,WAAW,GAAGH,SAAS,CAACI,IAAV,CAAgBC,OAAD,IACjCA,OAAO,CAACR,QAAR,CAAiBC,wBAAjB,CADkB,CAApB;AAEA,SAAOK,WAAW,GAAGA,WAAW,CAACG,KAAZ,CAAkBR,yBAAcS,MAAhC,CAAH,GAA6CZ,qBAA/D;AACD;AAED;AACA;AACA;;;AACO,MAAMa,cAAc,GAAIC,SAAD,IAAoC;AAChE,QAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACAF,EAAAA,OAAO,CAACG,SAAR,GAAoBJ,SAAS,CAACI,SAAV,CAAoBC,OAApB,CAA4BC,qBAA5B,EAAwC,IAAxC,CAApB;AACA,SAAOL,OAAO,CAACM,WAAR,IAAuB,EAA9B;AACD,CAJM","sourcesContent":["import { PLAIN_TEXT, SYNTAX_PREFIX, REG_BR_TAG } from './constants';\n\n/**\n * @description 获取代码块语言类型\n * @param {Element} codeBlockDom - 粘贴的代码块节点元素\n * */\nexport function getSyntax(codeBlockDom: Element): string {\n  if (!codeBlockDom) {\n    return PLAIN_TEXT;\n  }\n  if (!codeBlockDom.className.includes(SYNTAX_PREFIX)) {\n    codeBlockDom = codeBlockDom.getElementsByTagName('code')[0];\n    if (!codeBlockDom) {\n      return PLAIN_TEXT;\n    }\n  }\n  // @ts-ignore\n  const classList: string[] = Array.apply(null, codeBlockDom.classList);\n  const syntaxClass = classList.find((clsname) =>\n    clsname.includes(SYNTAX_PREFIX));\n  return syntaxClass ? syntaxClass.slice(SYNTAX_PREFIX.length) : PLAIN_TEXT;\n}\n\n/**\n * @description 获取代码块节点元素的内容\n * */\nexport const getTextContent = (codeBlock: HTMLElement): string => {\n  const testDom = document.createElement('div');\n  testDom.innerHTML = codeBlock.innerHTML.replace(REG_BR_TAG, '\\n');\n  return testDom.textContent || '';\n};\n"],"file":"utils.js"}