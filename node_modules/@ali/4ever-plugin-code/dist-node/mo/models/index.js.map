{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Code","Block","create","properties","Error","isCode","type","TYPE","maybeCode","isBlock"],"mappings":";;;;;;;AAAA;;AAgBe,MAAMA,IAAN,SAAmBC,kBAAnB,CAAiD;AAG9D,SAAOC,MAAP,CACEC,UADF,EAEE;AACA,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,QAAIJ,IAAI,CAACK,MAAL,CAAYF,UAAZ,CAAJ,EAA6B;AAC3B,aAAOA,UAAP;AACD;;AACD,WAAO,MAAMD,MAAN,CAAqB,EAC1B,GAAGC,UADuB;AAE1BG,MAAAA,IAAI,EAAEN,IAAI,CAACO;AAFe,KAArB,CAAP;AAID;;AAED,SAAOF,MAAP,CAAcG,SAAd,EAAiD;AAC/C,WAAOP,mBAAMQ,OAAN,CAAcD,SAAd,KAA4BA,SAAS,CAACF,IAAV,KAAmBN,IAAI,CAACO,IAA3D;AACD;;AApB6D;;;AAA3CP,I,CACZO,I,GAAO,M","sourcesContent":["import { Block, BlockChildren, Data } from '@ali/4ever-cangjie';\n\ninterface CodeData extends Data {\n  readonly id?: string;\n  readonly syntax?: string;\n  readonly theme?: string;\n  readonly height?: number;\n}\n\ntype CodeChildren = BlockChildren;\n\nexport interface CodeProperties<D = CodeData, N extends BlockChildren = CodeChildren> {\n  data?: D;\n  nodes?: N;\n}\n\nexport default class Code extends Block<CodeData, CodeChildren> {\n  static TYPE = 'code';\n\n  static create<SD = CodeData, SN extends BlockChildren = CodeChildren>(\n    properties: Code | CodeProperties<SD, SN> | string,\n  ) {\n    if (typeof properties === 'string') {\n      throw new Error('`Code.create` does not accept string');\n    }\n    if (Code.isCode(properties)) {\n      return properties as Block<SD, SN>;\n    }\n    return super.create<SD, SN>({\n      ...properties,\n      type: Code.TYPE,\n    });\n  }\n\n  static isCode(maybeCode: any): maybeCode is Code {\n    return Block.isBlock(maybeCode) && maybeCode.type === Code.TYPE;\n  }\n}\n"],"file":"index.js"}