import { Commands } from '@ali/4ever-cangjie';
import { Paragraph } from '@ali/4ever-plugin-paragraph';
import createInsertCode from "./insertCode";
;
export var code2Code = function code2Code(controller, block) {
  var lineArr = block.text.split('\n');
  controller.command(Commands.removeNodeByKey, block.key).command(Commands.deleteLineForward);
  controller.withoutNormalizing(function () {
    lineArr.forEach(function (line) {
      controller.command(Commands.insertBlock, {
        type: Paragraph.TYPE
      }).command(Commands.insertText, line);
    });
  });
};
export var transform = function transform(controller, config, id) {
  var blocks = controller.query('getTransformNodes');
  var array = [];

  if (Array.isArray(blocks) && blocks.length > 0) {
    // 创建空段落聚焦
    controller.command(Commands.moveToStartOfNode, blocks[0]).command(Commands.insertBlock, Paragraph.TYPE).command(Commands.blur);
    controller.withoutNormalizing(function () {
      blocks.forEach(function (block) {
        if (block.type === 'code') {
          return code2Code(controller, block);
        } else {
          array.push(block.text);
          controller.command(Commands.removeNodeByKey, block.key);
        }
      });

      if (array.length > 0) {
        var text = array.join('\n');
        return controller.command(createInsertCode(config), id, text);
      }

      return undefined;
    });
  }

  return controller.command(Commands.focus);
};
//# sourceMappingURL=transform.js.map