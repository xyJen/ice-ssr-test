import CodeModel from "../../mo/models/index";

var getCodeDataSetting = function getCodeDataSetting(code, targetSyntax) {
  var _ref = code.data,
      syntax = _ref.syntax,
      theme = _ref.theme;

  if (targetSyntax && targetSyntax === syntax) {
    return {
      syntax: syntax,
      theme: theme
    };
  } else if (!targetSyntax) {
    return {
      syntax: syntax,
      theme: theme
    };
  }

  return null;
};

var findClosestCodeSetting = function findClosestCodeSetting(document, anchorNode, targetSyntax) {
  function findClosest(dire) {
    var findCodeFun = function findCodeFun(key) {
      return dire === 'prev' ? document.getPreviousBlock(key) : document.getNextBlock(key);
    };

    var maybeCode = findCodeFun(anchorNode.key);

    while (maybeCode) {
      if (CodeModel.isCode(maybeCode)) {
        var result = getCodeDataSetting(maybeCode, targetSyntax);
        if (result) return result;
      }

      maybeCode = findCodeFun(maybeCode.key);
    }

    return null;
  }

  return findClosest('prev') || findClosest('next');
};

export default findClosestCodeSetting;
//# sourceMappingURL=findClosestCodeSetting.js.map