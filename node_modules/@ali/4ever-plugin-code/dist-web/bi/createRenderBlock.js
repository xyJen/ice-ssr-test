import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import CodeEditor from "./components/CodeEditor";
import { CodeWrapper } from "../utils/constants/themes";
export default function createRenderBlock(config) {
  return {
    code: function code(props, controller) {
      var attributes = props.attributes,
          isSelected = props.isSelected;
      var node = props.node;
      var _node$data$cursorPos = node.data.cursorPos,
          cursorPos = _node$data$cursorPos === void 0 ? 'end' : _node$data$cursorPos;
      return /*#__PURE__*/_createElement(CodeWrapper, _extends({}, attributes, {
        "data-testid": "code-editor",
        "data-type": "code"
      }), /*#__PURE__*/_createElement(CodeEditor, {
        cursorPos: cursorPos,
        onSave: config.onSave,
        isSelected: isSelected,
        controller: controller,
        node: node,
        locale: config.locale
      }));
    }
  };
}
//# sourceMappingURL=createRenderBlock.js.map