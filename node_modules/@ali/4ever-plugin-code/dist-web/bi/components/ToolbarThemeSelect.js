import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import getCurrentCode from "../queries/getCurrentCode";
import { IconButton } from '@ali/we-toolbar';
import { PaletteNormal } from '@ali/we-icon';
import { changeCodeData } from "../actions";
import ThemeSelect from "./ThemeSelect";
import { DEFAULT_THEME } from "../../utils/constants/themes";

var _ref = /*#__PURE__*/_createElement(IconButton, {
  icon: /*#__PURE__*/_createElement(PaletteNormal, null)
});

var ToolbarThemeSelect = function ToolbarThemeSelect(props) {
  var controller = props.controller,
      locale = props.locale,
      focusedCodeKey = props.focusedCodeKey;
  var code = getCurrentCode(controller.value, focusedCodeKey);
  var handleChange = React.useCallback(function (theme) {
    var codeBlock = getCurrentCode(controller.value, focusedCodeKey);
    controller.run('onAction', changeCodeData(codeBlock, {
      theme: theme
    }));
  }, [controller, focusedCodeKey]);
  return /*#__PURE__*/_createElement(ThemeSelect, {
    value: code ? code.data.theme : DEFAULT_THEME,
    onChange: handleChange,
    tip: locale.themeTitle,
    locale: locale,
    renderTrigger: function renderTrigger() {
      return _ref;
    }
  });
};

export default ToolbarThemeSelect;
//# sourceMappingURL=ToolbarThemeSelect.js.map