import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import getCurrentCode from "../queries/getCurrentCode";
import { changeCodeData } from "../actions";
import createSelect from "./createSelect";
import { IconButton } from '@ali/we-toolbar';
import { ToolbarAutoWrapNormal, ToolbarOverflowNormal } from '@ali/we-icon';

var _ref = /*#__PURE__*/_createElement(ToolbarAutoWrapNormal, null);

var _ref2 = /*#__PURE__*/_createElement(ToolbarOverflowNormal, null);

function WrapIcon(props) {
  var on = props.on,
      showTitle = props.showTitle,
      locale = props.locale;

  if (on) {
    return /*#__PURE__*/_createElement(IconButton, {
      icon: _ref,
      showTitle: showTitle,
      title: locale.wrapOpen
    });
  } else {
    return /*#__PURE__*/_createElement(IconButton, {
      icon: _ref2,
      showTitle: showTitle,
      title: locale.wrapClose
    });
  }
}

var WrapSelect = createSelect({
  name: 'wrap',
  createList: function createList(locale) {
    return [{
      title: /*#__PURE__*/_createElement(WrapIcon, {
        showTitle: true,
        locale: locale,
        on: true
      }),
      key: 'on'
    }, {
      title: /*#__PURE__*/_createElement(WrapIcon, {
        showTitle: true,
        locale: locale,
        on: false
      }),
      key: 'off'
    }];
  }
});

var ToolbarLineWrap = function ToolbarLineWrap(props) {
  var controller = props.controller,
      locale = props.locale,
      focusedCodeKey = props.focusedCodeKey;
  var code = getCurrentCode(controller.value, focusedCodeKey);
  var handleChange = React.useCallback(function (val) {
    var codeBlock = getCurrentCode(controller.value, focusedCodeKey);
    controller.run('onAction', changeCodeData(codeBlock, {
      wrap: val === 'on'
    }));
  }, [controller, focusedCodeKey]);
  return /*#__PURE__*/_createElement(WrapSelect, {
    locale: locale,
    value: code != null && code.data.wrap ? 'on' : 'off',
    onChange: handleChange,
    tip: "",
    renderTrigger: function renderTrigger() {
      return /*#__PURE__*/_createElement(WrapIcon, {
        locale: locale,
        on: code == null ? void 0 : code.data.wrap
      });
    },
    showArrow: true,
    style: {
      width: '48px'
    }
  });
};

export default ToolbarLineWrap;
//# sourceMappingURL=ToolbarLineWrap.js.map