{"version":3,"sources":["../../../../src/bi/components/ToolbarButton.tsx"],"names":["React","IconButton","Button","ToolbarCodeNormal","insertCode","CodeRole","iconStyle","width","height","ToolbarButton","props","controller","locale","rest","handleClick","useCallback","run","buttonTitle","code","memo"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,UAAU,IAAIC,MAAvB,QAAqC,iBAArC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,UAAT;AACA,SAASC,QAAT;AASA,IAAMC,SAA8B,GAAG;AACrCC,EAAAA,KAAK,EAAE,EAD8B;AAErCC,EAAAA,MAAM,EAAE;AAF6B,CAAvC;;wBAmBY,eAAC,iBAAD;AAAmB,EAAA,KAAK,EAAEF;AAA1B,E;;AAdZ,IAAMG,aAA2C,GAAG,SAA9CA,aAA8C,CAACC,KAAD,EAAW;AAAA,MACrDC,UADqD,GACrBD,KADqB,CACrDC,UADqD;AAAA,MACzCC,MADyC,GACrBF,KADqB,CACzCE,MADyC;AAAA,MAC9BC,IAD8B,iCACrBH,KADqB;;AAG7D,MAAMI,WAAW,GAAGd,KAAK,CAACe,WAAN,CAClB;AAAA,WAAMJ,UAAU,CAACK,GAAX,CAAe,UAAf,EAA2BZ,UAAU,EAArC,CAAN;AAAA,GADkB,EAElB,CAACO,UAAD,CAFkB,CAApB;AAKA,sBACE,eAAC,MAAD,eACME,IADN;AAEE,IAAA,KAAK,EAAED,MAAM,CAACK,WAFhB;AAGE,IAAA,OAAO,EAAEL,MAAM,CAACK,WAHlB;AAIE,IAAA,MAAM,EAAC,uBAJT;AAKE,IAAA,IAAI,MALN;AAME,IAAA,OAAO,EAAEH,WANX;AAOE,IAAA,IAAI,EAAET,QAAQ,CAACa;AAPjB,KADF;AAWD,CAnBD;;AAqBA,4BAAelB,KAAK,CAACmB,IAAN,CAAWV,aAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { IconButton as Button } from '@ali/we-toolbar';\nimport { ToolbarCodeNormal } from '@ali/we-icon';\nimport { insertCode } from '../actions';\nimport { CodeRole } from '../../utils/role';\n\nexport interface ToolbarButtonProps {\n  controller: Controller;\n  locale: {\n    buttonTitle: string;\n  };\n}\n\nconst iconStyle: React.CSSProperties = {\n  width: 20,\n  height: 20,\n};\n\nconst ToolbarButton: React.FC<ToolbarButtonProps> = (props) => {\n  const { controller, locale, ...rest } = props;\n\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', insertCode()),\n    [controller],\n  );\n\n  return (\n    <Button\n      {...rest}\n      title={locale.buttonTitle}\n      tooltip={locale.buttonTitle}\n      testid=\"bi-toolbar-code-block\"\n      icon={<ToolbarCodeNormal style={iconStyle} />}\n      onClick={handleClick}\n      role={CodeRole.code}\n    />\n  );\n};\n\nexport default React.memo(ToolbarButton);\n"],"file":"ToolbarButton.js"}