{"version":3,"sources":["../../../src/bi/actions.ts"],"names":["CODE_CHANGE","Symbol","CODE_FOCUS_TO_CODE_EDITOR","CODE_FOCUS_TO_TEXT_EDITOR","CODE_REMOVE","CODE_INSERT","CODE_CHANGE_DATA","CODE_BLUR","CODE_TRANSFORM","changeCode","payload","type","changeCodeData","node","data","focusToCodeEditor","focusToTextEditor","direction","removeCode","insertCode","transformCode","cancelCode","blurCode"],"mappings":"AAGA,OAAO,IAAMA,WAAW,GAAGC,MAAM,CAAC,aAAD,CAA1B;AACP,OAAO,IAAMC,yBAAyB,GAAGD,MAAM,CAAC,sBAAD,CAAxC;AACP,OAAO,IAAME,yBAAyB,GAAGF,MAAM,CAAC,sBAAD,CAAxC;AACP,OAAO,IAAMG,WAAW,GAAGH,MAAM,CAAC,mBAAD,CAA1B;AACP,OAAO,IAAMI,WAAW,GAAGJ,MAAM,CAAC,mBAAD,CAA1B;AACP,OAAO,IAAMK,gBAAgB,GAAGL,MAAM,CAAC,kBAAD,CAA/B;AACP,OAAO,IAAMM,SAAS,GAAGN,MAAM,CAAC,WAAD,CAAxB;AACP,OAAO,IAAMO,cAAc,GAAGP,MAAM,CAAC,gBAAD,CAA7B;AAqCP,OAAO,SAASQ,UAAT,CACLC,OADK,EAEsB;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEX,WADD;AAELU,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,cAAT,CACLC,IADK,EAELC,IAFK,EAG0B;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAEL,gBADD;AAELI,IAAAA,OAAO,EAAE;AAAEI,MAAAA,IAAI,EAAJA,IAAF;AAAQD,MAAAA,IAAI,EAAJA;AAAR;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,iBAAT,CACLF,IADK,EAE6B;AAClC,SAAO;AACLF,IAAAA,IAAI,EAAET,yBADD;AAELQ,IAAAA,OAAO,EAAE;AACPG,MAAAA,IAAI,EAAJA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASG,iBAAT,CACLH,IADK,EAELI,SAFK,EAG6B;AAClC,SAAO;AACLN,IAAAA,IAAI,EAAER,yBADD;AAELO,IAAAA,OAAO,EAAE;AACPO,MAAAA,SAAS,EAATA,SADO;AAEPJ,MAAAA,IAAI,EAAJA;AAFO;AAFJ,GAAP;AAOD;AAED,OAAO,SAASK,UAAT,CAAoBL,IAApB,EAA4D;AACjE,SAAO;AACLF,IAAAA,IAAI,EAAEP,WADD;AAELM,IAAAA,OAAO,EAAE;AACPG,MAAAA,IAAI,EAAJA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASM,UAAT,CACLT,OADK,EAEsB;AAAA,MAD3BA,OAC2B;AAD3BA,IAAAA,OAC2B,GADE,EACF;AAAA;;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEN,WADD;AAELK,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,SAASU,aAAT,GACsB;AAC3B,SAAO;AACLT,IAAAA,IAAI,EAAEH,cADD;AAELE,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID;AAED,OAAO,SAASW,UAAT,GACsB;AAC3B,SAAO;AACLV,IAAAA,IAAI,EAAEH,cADD;AAELE,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID;AAED,OAAO,SAASY,QAAT,GAAgC;AACrC,SAAO;AACLX,IAAAA,IAAI,EAAEJ,SADD;AAELG,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID","sourcesContent":["import { Block, Action } from '@ali/4ever-cangjie';\nimport { CodeData } from './types';\n\nexport const CODE_CHANGE = Symbol('change-code');\nexport const CODE_FOCUS_TO_CODE_EDITOR = Symbol('focus-to-code-editor');\nexport const CODE_FOCUS_TO_TEXT_EDITOR = Symbol('focus-to-text-editor');\nexport const CODE_REMOVE = Symbol('remove-code-block');\nexport const CODE_INSERT = Symbol('insert-code-block');\nexport const CODE_CHANGE_DATA = Symbol('change-code-data');\nexport const CODE_BLUR = Symbol('blur-code');\nexport const CODE_TRANSFORM = Symbol('code-transform');\n\nexport type ChangeCodePayload = {\n  node: Block;\n  patches: Array<{\n    type: 'insert' | 'delete';\n    value: string;\n    offset: number;\n  }>;\n};\n\nexport interface RemoveCodePayload {\n  node: Block;\n}\n\n// TODO：【多鱼】是否还会有 right？ 需要调研 CM 确认，后续希望能优化一下。\nexport type FocusDirection = 'up' | 'down' | 'left';\nexport interface FocusToTextEditorPayload {\n  direction?: FocusDirection;\n  node: Block;\n}\n\nexport interface FocusToCodeEditorPayload {\n  node: Block;\n}\n\nexport interface InsertCodePayload {\n  code?: string;\n  theme?: string;\n  syntax?: string;\n}\n\nexport interface ChangeCodeDataPayload {\n  data: Partial<CodeData>;\n  node: Block;\n}\n\nexport function changeCode(\n  payload: ChangeCodePayload,\n): Action<ChangeCodePayload> {\n  return {\n    type: CODE_CHANGE,\n    payload,\n  };\n}\n\nexport function changeCodeData(\n  node: Block,\n  data: Partial<CodeData>,\n): Action<ChangeCodeDataPayload> {\n  return {\n    type: CODE_CHANGE_DATA,\n    payload: { data, node },\n  };\n}\n\nexport function focusToCodeEditor(\n  node: Block,\n): Action<FocusToCodeEditorPayload> {\n  return {\n    type: CODE_FOCUS_TO_CODE_EDITOR,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function focusToTextEditor(\n  node: Block,\n  direction?: FocusDirection,\n): Action<FocusToTextEditorPayload> {\n  return {\n    type: CODE_FOCUS_TO_TEXT_EDITOR,\n    payload: {\n      direction,\n      node,\n    },\n  };\n}\n\nexport function removeCode(node: Block): Action<RemoveCodePayload> {\n  return {\n    type: CODE_REMOVE,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function insertCode(\n  payload: InsertCodePayload = {},\n): Action<InsertCodePayload> {\n  return {\n    type: CODE_INSERT,\n    payload,\n  };\n}\n\nexport function transformCode(\n): Action<InsertCodePayload> {\n  return {\n    type: CODE_TRANSFORM,\n    payload: {},\n  };\n}\n\nexport function cancelCode(\n): Action<InsertCodePayload> {\n  return {\n    type: CODE_TRANSFORM,\n    payload: {},\n  };\n}\n\nexport function blurCode(): Action<{}> {\n  return {\n    type: CODE_BLUR,\n    payload: {},\n  };\n}\n"],"file":"actions.js"}