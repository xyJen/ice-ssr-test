{"version":3,"sources":["../../../../src/bi/handlers/createOnAction.ts"],"names":["Commands","RangeSelection","TextPoint","CODE_CHANGE","CODE_FOCUS_TO_CODE_EDITOR","CODE_FOCUS_TO_TEXT_EDITOR","CODE_REMOVE","CODE_BLUR","CODE_INSERT","CODE_CHANGE_DATA","CODE_TRANSFORM","updateCode","removeCode","createInsertCode","transform","biActions","basicActions","resetFocusedCode","FOCUSED_CODE","generateKey","setFocusState","createOnAction","config","onAction","action","controller","next","document","value","type","payload","node","patches","textNode","getFirstText","opts","map","patch","selection","fromJSON","anchor","key","offset","focus","length","content","withoutPending","editor","forEach","opt","command","insertTextAtRange","data","codeAnchor","create","getFirstNode","range","select","withoutNormalizing","run","createMergeDataAction","blur","direction","moveToStartOfNode","previousBlock","getPreviousBlock","moveToEndOfNode","flush","nextBlock","getNextBlock","code","theme","syntax","id"],"mappings":"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","sourcesContent":["import {\n  Text,\n  Controller,\n  Commands,\n  Action,\n  RangeSelection,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport {\n  CODE_CHANGE,\n  ChangeCodePayload,\n  CODE_FOCUS_TO_CODE_EDITOR,\n  CODE_FOCUS_TO_TEXT_EDITOR,\n  CODE_REMOVE,\n  CODE_BLUR,\n  CODE_INSERT,\n  CODE_CHANGE_DATA,\n  CODE_TRANSFORM,\n  RemoveCodePayload,\n  FocusToTextEditorPayload,\n  FocusToCodeEditorPayload,\n  InsertCodePayload,\n  ChangeCodeDataPayload,\n} from '../actions';\nimport updateCode from '../commands/updateCode';\nimport removeCode from '../commands/removeCode';\nimport createInsertCode from '../commands/insertCode';\nimport { transform } from '../commands/transform';\nimport { biActions as basicActions } from '@ali/4ever-plugin-basic';\nimport resetFocusedCode from '../commands/resetFocusedCode';\nimport { FOCUSED_CODE } from '../constants/value';\nimport { generateKey} from '@ali/4ever-utils';\nimport { setFocusState } from '../store';\nimport { CodePluginConfig } from '../types';\n\nexport default function createOnAction(config: CodePluginConfig) {\n  return function onAction(\n    action: Action,\n    controller: Controller,\n    next: () => void,\n  ) {\n    const { document } = controller.value;\n    const { type, payload } = action;\n\n    if (type === CODE_CHANGE) {\n      const { node, patches } = payload as ChangeCodePayload;\n      const textNode: Text = node.getFirstText()!;\n\n      const opts = patches.map((patch) => {\n        return {\n          selection: RangeSelection.fromJSON({\n            anchor: {\n              key: textNode.key,\n              offset: patch.offset,\n            },\n            focus: {\n              key: textNode.key,\n              offset: patch.type === 'insert' ? patch.offset : patch.offset + patch.value.length,\n            },\n          }),\n          content: patch.type === 'delete' ? '' : patch.value,\n        };\n      });\n\n      controller.withoutPending((editor) => {\n        opts.forEach((opt) => {\n          editor.command(\n            Commands.insertTextAtRange,\n            opt.selection,\n            opt.content,\n          );\n        });\n      });\n    }\n\n    if (type === CODE_CHANGE_DATA) {\n      const { node, data } = payload as ChangeCodeDataPayload;\n      if (node) {\n        return controller.command(updateCode, node, data);\n      }\n      return controller.command(resetFocusedCode);\n    }\n\n    if (type === CODE_FOCUS_TO_CODE_EDITOR) {\n      const { node } = payload as FocusToCodeEditorPayload;\n      // 代码块focus === 仓颉失焦，这时候手动更改选区到代码块\n      const codeAnchor = TextPoint.create({\n        key: node.getFirstNode().key,\n        offset: 0,\n      });\n      const range = RangeSelection.create({\n        anchor: codeAnchor,\n        focus: codeAnchor,\n      });\n      controller.command(Commands.select, range);\n\n      return controller.withoutNormalizing(() => {\n        controller.run('onAction', basicActions.createMergeDataAction({ [FOCUSED_CODE]: node.key }));\n        controller.command(\n          Commands.blur,\n        )\n      })\n    }\n\n    if (type === CODE_FOCUS_TO_TEXT_EDITOR) {\n      const { direction = 'down', node } = payload as FocusToTextEditorPayload;\n      controller.withoutNormalizing(() => {\n        controller.command(Commands.focus);\n\n        if (direction === 'left') {\n          controller.command(Commands.moveToStartOfNode, node);\n        }\n\n        // 回到代码块的上个段落\n        if (direction === 'up') {\n          const previousBlock = document.getPreviousBlock(node.key);\n          if (previousBlock) {\n            controller.command(Commands.moveToEndOfNode, previousBlock).flush();\n          } else {\n            controller.command(Commands.moveToStartOfNode, node);\n          }\n        }\n\n        // 回到代码块的下个段落\n        if (direction === 'down') {\n          const nextBlock = document.getNextBlock(node.key);\n          if (nextBlock) {\n            controller.command(Commands.moveToStartOfNode, nextBlock);\n          } else {\n            controller.command(Commands.moveToEndOfNode, node);\n          }\n        }\n\n        controller.run('onAction', basicActions.createMergeDataAction({ [FOCUSED_CODE]: null }));\n      });\n\n      return controller;\n    }\n\n    if (type === CODE_REMOVE) {\n      const { node } = payload as RemoveCodePayload;\n      return controller.command(removeCode, node.key).command(Commands.focus);\n    }\n\n    if (type === CODE_INSERT) {\n      const { code, theme, syntax } = payload as InsertCodePayload;\n      const id = generateKey();\n      // eslint-disable-next-line no-param-reassign\n      setFocusState(id, true);\n      return controller.command(createInsertCode(config), id, code, syntax, theme);\n    }\n\n    if (type === CODE_TRANSFORM) {\n      const id = generateKey();\n      setFocusState(id, true);\n      return controller.command(transform, config, id);\n    }\n\n    if (type === CODE_BLUR) {\n      controller.run('onAction', basicActions.createMergeDataAction({ [FOCUSED_CODE]: null }));\n      return controller;\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnAction.js"}