{"version":3,"sources":["../../../src/bi/index.ts"],"names":["createOnKeyDown","createOnAction","createRenderBlock","createToolbar","shouldPreventEvent","lazyRenderStrategy","insertCode","removeCode","updateCode","quickInsert","menubar","createOnCangjieSelect","moFactory","createRenderHoverToolbar","getSnippetConfig","handleEvent","event","controller","next","commands","biFactory","configs","codeConfig","code","queries","onKeyDown","onAction","onBeforeInput","onCompositionStart","onCompositionEnd","renderNode","renderHoverToolbar","locale","toolbar","onCangjieSelect","models","klass","type"],"mappings":";AACA,OAAOA,eAAP;AACA,OAAOC,cAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,OAAP;AACA,OAAOC,qBAAP;AAEA,OAAOC,SAAP;AAEA,OAAOC,wBAAP;AACA,OAAOC,gBAAP;;AAEA,SAASC,WAAT,CACEC,KADF,EAEEC,UAFF,EAGEC,IAHF,EAIE;AACA,MAAId,kBAAkB,CAACY,KAAD,EAAQC,UAAR,CAAtB,EAA2C;AACzC,WAAOA,UAAP;AACD;;AACD,SAAOC,IAAI,EAAX;AACD;;AAED,IAAMC,QAAQ,GAAG;AACfb,EAAAA,UAAU,EAAEA,UAAU,EADP;AAEfC,EAAAA,UAAU,EAAVA,UAFe;AAGfC,EAAAA,UAAU,EAAVA;AAHe,CAAjB;AAOA,OAAO,IAAMY,SAAoB,GAAG,SAAvBA,SAAuB,CAACC,OAAD,EAAa;AAC/C,MAAMC,UAAU,GAAGD,OAAO,CAACE,IAAR,IAAgB,EAAnC;AAEA,sBACKX,SAAS,CAAC,EAAD,CADd;AAEEO,IAAAA,QAAQ,EAARA,QAFF;AAGEK,IAAAA,OAAO,EAAE;AACPnB,MAAAA,kBAAkB,EAAlBA;AADO,KAHX;AAMEoB,IAAAA,SAAS,EAAEzB,eAAe,CAACsB,UAAD,CAN5B;AAOEI,IAAAA,QAAQ,EAAEzB,cAAc,CAACqB,UAAD,CAP1B;AAQEK,IAAAA,aAAa,EAAEZ,WARjB;AASEa,IAAAA,kBAAkB,EAAEb,WATtB;AAUEc,IAAAA,gBAAgB,EAAEd,WAVpB;AAWEe,IAAAA,UAAU,EAAE5B,iBAAiB,CAACoB,UAAD,CAX/B;AAYES,IAAAA,kBAAkB,EAAElB,wBAAwB,CAACS,UAAD,CAZ9C;AAaEU,IAAAA,MAAM,EAAEV,UAAU,CAACU,MAbrB;AAcEC,IAAAA,OAAO,EAAE9B,aAAa,CAACmB,UAAD,CAdxB;AAeEZ,IAAAA,OAAO,EAAPA,OAfF;AAgBED,IAAAA,WAAW,EAAXA,WAhBF;AAiBEyB,IAAAA,eAAe,EAAEvB,qBAAqB,EAjBxC;AAkBEG,IAAAA,gBAAgB,EAAhBA,gBAlBF;AAmBEqB,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,IAAI,EAAE;AAFA;AAnBV;AAwBD,CA3BM","sourcesContent":["import { Controller, BiFactory } from '@ali/4ever-cangjie';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport createOnAction from './handlers/createOnAction';\nimport createRenderBlock from './createRenderBlock';\nimport createToolbar from './createToolbar';\nimport shouldPreventEvent from './queries/shouldPreventEvent';\nimport lazyRenderStrategy from '../common/queries/lazyRenderStrategy';\nimport insertCode from './commands/insertCode';\nimport removeCode from './commands/removeCode';\nimport updateCode from './commands/updateCode';\nimport quickInsert from './quickInsertConfig';\nimport menubar from './menubar';\nimport createOnCangjieSelect from './handlers/createOnCangjieSelect';\nimport CodeModel from '../mo/models';\nimport moFactory from '../mo/index';\nimport type { CodePluginConfig } from './types'\nimport createRenderHoverToolbar from './createRenderHoverToolbar';\nimport getSnippetConfig from './getSnippetConfig';\n\nfunction handleEvent(\n  event: React.SyntheticEvent,\n  controller: Controller,\n  next: () => void,\n) {\n  if (shouldPreventEvent(event, controller)) {\n    return controller;\n  }\n  return next();\n}\n\nconst commands = {\n  insertCode: insertCode(),\n  removeCode,\n  updateCode,\n};\n\n\nexport const biFactory: BiFactory = (configs) => {\n  const codeConfig = configs.code || {} as CodePluginConfig;\n\n  return {\n    ...moFactory({}),\n    commands,\n    queries: {\n      lazyRenderStrategy,\n    },\n    onKeyDown: createOnKeyDown(codeConfig),\n    onAction: createOnAction(codeConfig),\n    onBeforeInput: handleEvent,\n    onCompositionStart: handleEvent,\n    onCompositionEnd: handleEvent,\n    renderNode: createRenderBlock(codeConfig),\n    renderHoverToolbar: createRenderHoverToolbar(codeConfig),\n    locale: codeConfig.locale,\n    toolbar: createToolbar(codeConfig),\n    menubar,\n    quickInsert,\n    onCangjieSelect: createOnCangjieSelect(),\n    getSnippetConfig,\n    models: {\n      klass: 'block',\n      type: 'code',\n    },\n  };\n};\n"],"file":"index.js"}