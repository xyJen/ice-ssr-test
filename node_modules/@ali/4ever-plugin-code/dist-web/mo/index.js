import { Block, Commands, Text } from '@ali/4ever-cangjie';
import createSerializer from "./serializer";
import { ELEMENT_TYPE } from "./meta";

var factory = function factory() {
  return {
    key: 'code',
    schemas: {
      type: ELEMENT_TYPE,
      isBlock: true,
      isEdgeSelectable: true
    },
    normalizeNode: function normalizeNode(node, controller, next) {
      if (Block.isBlock(node) && node.type === 'code') {
        if (node.nodes.length !== 1 || !Text.isText(node.nodes[0]) || node.nodes[0].leaves.length !== 1) {
          return function () {
            var newLeaf = Text.create(node.text); // 删除之前的节点

            var length = node.nodes.length;

            for (var i = 0; i < length; i += 1) {
              var child = node.nodes[i];
              controller.command(Commands.removeNodeByKey, child.key);
            } // 插入 text 节点


            controller.command(Commands.insertNodeByKey, node.key, 0, newLeaf);
          };
        }
      }

      return next();
    },
    serializer: createSerializer(),
    models: {
      klass: 'block',
      type: ELEMENT_TYPE,
      data: {
        ind: [undefined, Object],
        blockquote: [undefined, Boolean],
        spacing: [undefined, Object],
        jc: [undefined, String],
        calloutPr: [undefined, Object],
        subjectPr: [undefined, Object],
        uuid: [undefined, String],
        shd: [undefined, Object]
      }
    }
  };
};

export default factory;
//# sourceMappingURL=index.js.map