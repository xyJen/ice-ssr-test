{"version":3,"sources":["../../../../../src/mo/serializer/htmlToJsonML/parseFromWeb.ts"],"names":["createTextWithString","PLAIN_TEXT","THEME_DEFAULT","getTextContent","getSyntax","parseFromWeb","index","name","onOpenTag","state","push","syntax","theme","onCloseTag","pop","codeBlockDom","htmlDom","getElementsByTagName","append"],"mappings":"AAAA,SAA2BA,oBAA3B,QAAyE,oBAAzE;AACA,SAASC,UAAT,EAAqBC,aAArB;AACA,SAASC,cAAT,EAAyBC,SAAzB,kB,CAEA;AACA;AACA;;AACA,SAASC,YAAT,GAA0C;AACxC,MAAIC,KAAK,GAAG,CAAZ;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE,MADD;AAGLC,IAAAA,SAHK,qBAGKC,KAHL,EAGmBF,IAHnB,EAG0C;AAC7C,UAAIA,IAAI,KAAK,KAAb,EAAoB,OAAO,KAAP;AAEpBE,MAAAA,KAAK,CAACC,IAAN,CAAW,CAAC,MAAD,EAAS;AAAEC,QAAAA,MAAM,EAAEV,UAAV;AAAsBW,QAAAA,KAAK,EAAEV;AAA7B,OAAT,CAAX;AACA,aAAO,IAAP;AACD,KARI;AAULW,IAAAA,UAVK,sBAUMJ,KAVN,EAUoBF,IAVpB,EAU2C;AAC9C,UAAIA,IAAI,KAAK,KAAb,EAAoB,OAAO,KAAP;AACpBE,MAAAA,KAAK,CAACK,GAAN;AAEA,UAAMC,YAAY,GAAGN,KAAK,CAACO,OAAN,CAAcC,oBAAd,CAAmC,KAAnC,EAA0CX,KAA1C,CAArB;AAEAG,MAAAA,KAAK,CAACS,MAAN,CAAa,CACX,MADW,EAEX;AAAEP,QAAAA,MAAM,EAAEP,SAAS,CAACW,YAAD,CAAnB;AAAmCH,QAAAA,KAAK,EAAEV;AAA1C,OAFW,EAGXF,oBAAoB,CAACG,cAAc,CAACY,YAAD,CAAd,IAAgC,EAAjC,CAHT,CAAb;AAKAT,MAAAA,KAAK;AACL,aAAO,IAAP;AACD;AAvBI,GAAP;AAyBD;;AAED,eAAeD,YAAf","sourcesContent":["import { MoState as State, createTextWithString, HTMLToJsonMLRule } from '@ali/4ever-cangjie';\nimport { PLAIN_TEXT, THEME_DEFAULT } from './constants';\nimport { getTextContent, getSyntax } from './utils';\n\n// 识别如下两种结构作为代码块\n// <pre><code>xxxxx</code></pre>\n// <pre>xxxx</pre>\nfunction parseFromWeb(): HTMLToJsonMLRule {\n  let index = 0;\n  return {\n    name: 'code',\n\n    onOpenTag(state: State, name: string): boolean {\n      if (name !== 'pre') return false;\n\n      state.push(['code', { syntax: PLAIN_TEXT, theme: THEME_DEFAULT }] as any);\n      return true;\n    },\n\n    onCloseTag(state: State, name: string): boolean {\n      if (name !== 'pre') return false;\n      state.pop();\n\n      const codeBlockDom = state.htmlDom.getElementsByTagName('pre')[index];\n\n      state.append([\n        'code',\n        { syntax: getSyntax(codeBlockDom), theme: THEME_DEFAULT },\n        createTextWithString(getTextContent(codeBlockDom) || ''),\n      ]);\n      index++;\n      return true;\n    },\n  };\n}\n\nexport default parseFromWeb;\n"],"file":"parseFromWeb.js"}