{"version":3,"sources":["../../../src/zhi/index.tsx"],"names":["React","getData","moFactory","lazyRenderStrategy","CodeComponent","DEFAULT_THEME","DEFAULT_LANGUAGE","zhiFactory","configs","queries","renderNode","props","controller","next","node","attributes","ref","rest","type","text","data","code","print","undefined"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,aAAP;AACA,SAASC,aAAT;AACA,SAASC,gBAAT;AAGA,OAAO,IAAMC,UAAsB,GAAG,SAAzBA,UAAyB,CAACC,OAAD,EAAa;AACjD,sBACKN,SAAS,CAAC,EAAD,CADd;AAEEO,IAAAA,OAAO,EAAE;AACPN,MAAAA,kBAAkB,EAAlBA;AADO,KAFX;AAKEO,IAAAA,UALF,sBAKaC,KALb,EAKoBC,UALpB,EAKgCC,IALhC,EAKsC;AAAA,UAC1BC,IAD0B,GACLH,KADK,CAC1BG,IAD0B;AAAA,UACpBC,UADoB,GACLJ,KADK,CACpBI,UADoB;;AAAA,UAE1BC,GAF0B,GAETD,UAFS,CAE1BC,GAF0B;AAAA,UAElBC,IAFkB,iCAETF,UAFS;;AAAA,iBAGLD,IAHK;AAAA,UAG1BI,IAH0B,QAG1BA,IAH0B;AAAA,UAGpBC,IAHoB,QAGpBA,IAHoB;AAAA,UAGdC,IAHc,QAGdA,IAHc;;AAIlC,UAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,eAAOL,IAAI,EAAX;AACD;;AANiC,kBAQRL,OAAO,CAACa,IAAR,IAAgB,EARR;AAAA,8BAQ1BC,KAR0B;AAAA,UAQ1BA,KAR0B,4BAQlB,KARkB;;AAUlC,0BACE,eAAC,aAAD,eACML,IADN;AAEE,QAAA,UAAU,EAAEL,UAFd;AAGE,QAAA,IAAI,EAAEO,IAHR;AAIE,QAAA,IAAI,EAAEL,IAJR;AAKE,QAAA,KAAK,EAAEb,OAAO,CAACmB,IAAD,EAAO,OAAP,EAAgBf,aAAhB,CALhB;AAME,QAAA,MAAM,EAAEJ,OAAO,CAACmB,IAAD,EAAO,QAAP,EAAiBd,gBAAjB,CANjB;AAOE,QAAA,MAAM,EAAEL,OAAO,CAACmB,IAAD,EAAO,QAAP,EAAiBG,SAAjB,CAPjB;AAQE,QAAA,YAAY,EAAE,CAAC,CAACtB,OAAO,CAACmB,IAAD,EAAO,MAAP,EAAe,KAAf,CARzB;AASE,QAAA,KAAK,EAAEE;AATT,SADF;AAaD;AA5BH;AA8BD,CA/BM","sourcesContent":["import * as React from 'react';\nimport type { ZhiFactory } from '@ali/4ever-cangjie';\nimport { getData } from '@ali/4ever-utils';\nimport moFactory from '../mo/index';\nimport lazyRenderStrategy from '../common/queries/lazyRenderStrategy';\nimport CodeComponent from '../components/ZhiCode';\nimport { DEFAULT_THEME } from '../utils/constants/themes';\nimport { DEFAULT_LANGUAGE } from '../utils/constants/languages';\nimport type CodeModel from '../mo/models';\n\nexport const zhiFactory: ZhiFactory = (configs) => {\n  return {\n    ...moFactory({}),\n    queries: {\n      lazyRenderStrategy,\n    },\n    renderNode(props, controller, next) {\n      const { node, attributes } = props;\n      const { ref, ...rest } = attributes;\n      const { type, text, data } = node as CodeModel;\n      if (type !== 'code') {\n        return next();\n      }\n\n      const { print = false } = configs.code || {};\n\n      return (\n        <CodeComponent\n          {...rest}\n          controller={controller}\n          code={text}\n          node={node as CodeModel}\n          theme={getData(data, 'theme', DEFAULT_THEME)}\n          syntax={getData(data, 'syntax', DEFAULT_LANGUAGE)}\n          height={getData(data, 'height', undefined)}\n          lineWrapping={!!getData(data, 'wrap', false)}\n          print={print}\n        />\n      );\n    },\n  }\n};\n"],"file":"index.js"}