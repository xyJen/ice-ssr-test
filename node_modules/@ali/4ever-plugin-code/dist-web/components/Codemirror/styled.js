/* eslint-disable import/prefer-default-export */
import styled, { css } from 'styled-components';
import { codeTheme } from '@ali/4ever-utils';
import { MAX_HEIGHT } from "../../utils/constants/dimension";
var defaultBgColor = '#f5f6f7';
var darkBgColor = '#282a36';
export var Wrapper = /*#__PURE__*/styled.div(["display:flex;flex-direction:column;outline:none;line-height:", ";", " ", " height:100%;border-radius:8px;user-select:auto;&,& *{box-sizing:border-box;}.CodeMirror{height:100%;", " border-radius:8px;z-index:0;padding:1px;border:1px solid transparent !important;}.CodeMirror pre.CodeMirror-line,.CodeMirror pre.CodeMirror-line-like{font-size:1em;font-family:\"SFMono-Regular\",Consolas,\"Liberation Mono\",Menlo,Courier,monospace !important;}.CodeMirror .collab-selection{background-color:rgba(243,155,53,.7) !important;color:white;}.CodeMirror .find-and-replace{background-color:#FFE62E !important;}.CodeMirror .CodeMirror-sizer{box-sizing:content-box;}.CodeMirror .find-and-replace-selected{background-color:#FF9933!important;}.CodeMirror.cm-s-default{color:rgba(17,31,44,0.56);}.CodeMirror.cm-s-default .CodeMirror-gutters{border-right:none;background-color:", ";}.CodeMirror .CodeMirror-scroll{", "}.CodeMirror-scroll::-webkit-scrollbar{display:none;}.CodeMirror-overlayscroll-horizontal,.CodeMirror-overlayscroll-vertical{background:transparent;}.CodeMirror-overlayscroll-horizontal div,.CodeMirror-overlayscroll-vertical div{background:#d9dbdd;cursor:auto;}.CodeMirror-overlayscroll-horizontal div:hover,.CodeMirror-overlayscroll-vertical div:hover{background:#c6c9cd;}.CodeMirror.cm-s-dracula{.CodeMirror-overlayscroll-horizontal div,.CodeMirror-overlayscroll-vertical div{background:#70737a;}.CodeMirror-scrollbar-filler{background-color:inherit;}}.CodeMirror-linenumber{user-select:none;}.CodeMirror-cursor{border-width:2px !important;}.CodeMirror-cursors{position:relative;left:-1px;", "}"], codeTheme['line-height'], function (props) {
  return !props.print && css(["max-height:", "px;"], MAX_HEIGHT);
}, function (props) {
  return "\n    background-color: " + (props.theme === 'default' ? defaultBgColor : darkBgColor) + ";\n  ";
}, function (props) {
  return "\n      background-color: " + (props.theme === 'default' ? defaultBgColor : darkBgColor) + ";\n    ";
}, defaultBgColor, function (props) {
  return !props.print && css(["max-height:", "px;"], MAX_HEIGHT);
}, function (_ref) {
  var readOnly = _ref.readOnly;
  return readOnly ? 'display: none;' : '';
});
//# sourceMappingURL=styled.js.map