import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled, { css } from 'styled-components';
import { noop } from 'lodash-es';
import { SpacingUtil, codeTheme } from '@ali/4ever-utils';
import { MAX_HEIGHT } from "../utils/constants/dimension";
var Code = /*#__PURE__*/styled.pre(["background-color:", ";border-color:", ";padding:10px;border-radius:5px;height:", ";line-height:", ";overflow:auto;-webkit-overflow-scrolling:touch;", " ", " code{color:", ";}"], function (_ref) {
  var theme = _ref.theme;
  return theme === 'default' ? 'rgba(246,248,249,0.8)' : '#282a36';
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme === 'default' ? 'rgba(17, 31, 44, 0.08)' : 'rgba(17, 31, 44, 1)';
}, function (_ref3) {
  var height = _ref3.height;
  return height ? height + "px" : 'inherit';
}, codeTheme['line-height'], function (props) {
  return props.lineWrapping && css(["word-wrap:break-word;white-space:pre-wrap;word-break:normal;"]);
}, function (props) {
  return !props.lineWrapping && css(["word-wrap:normal;"]);
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme === 'default' ? 'rgba(17, 31, 44, 0.56)' : '#FFFFFF';
});
var SimpleCode = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var code = props.code,
      height = props.height,
      theme = props.theme,
      _props$onTouchStart = props.onTouchStart,
      onTouchStart = _props$onTouchStart === void 0 ? noop : _props$onTouchStart,
      _props$onMouseDown = props.onMouseDown,
      onMouseDown = _props$onMouseDown === void 0 ? noop : _props$onMouseDown,
      _props$onClick = props.onClick,
      onClick = _props$onClick === void 0 ? noop : _props$onClick,
      node = props.node,
      lineWrapping = props.lineWrapping,
      print = props.print;
  return /*#__PURE__*/_createElement(Code, {
    style: _extends({
      marginLeft: codeTheme['margin-left'],
      marginRight: codeTheme['margin-right'],
      marginTop: codeTheme['margin-top'],
      marginBottom: codeTheme['margin-bottom'],
      maxHeight: !print ? MAX_HEIGHT : 'none'
    }, SpacingUtil.toStyle(node)),
    ref: ref,
    height: height,
    theme: theme,
    lineWrapping: lineWrapping,
    onTouchStart: onTouchStart,
    onMouseDown: onMouseDown,
    onClick: onClick,
    "data-hover-box": "borderBox",
    "data-plugin-scrollable": true
  }, /*#__PURE__*/_createElement("code", null, code));
});
export default SimpleCode;
//# sourceMappingURL=SimpleCode.js.map