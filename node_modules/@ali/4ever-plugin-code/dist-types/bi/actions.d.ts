import { Block, Action } from '@ali/4ever-cangjie';
import { CodeData } from './types';
export declare const CODE_CHANGE: unique symbol;
export declare const CODE_FOCUS_TO_CODE_EDITOR: unique symbol;
export declare const CODE_FOCUS_TO_TEXT_EDITOR: unique symbol;
export declare const CODE_REMOVE: unique symbol;
export declare const CODE_INSERT: unique symbol;
export declare const CODE_CHANGE_DATA: unique symbol;
export declare const CODE_BLUR: unique symbol;
export declare const CODE_TRANSFORM: unique symbol;
export declare type ChangeCodePayload = {
    node: Block;
    patches: Array<{
        type: 'insert' | 'delete';
        value: string;
        offset: number;
    }>;
};
export interface RemoveCodePayload {
    node: Block;
}
export declare type FocusDirection = 'up' | 'down' | 'left';
export interface FocusToTextEditorPayload {
    direction?: FocusDirection;
    node: Block;
}
export interface FocusToCodeEditorPayload {
    node: Block;
}
export interface InsertCodePayload {
    code?: string;
    theme?: string;
    syntax?: string;
}
export interface ChangeCodeDataPayload {
    data: Partial<CodeData>;
    node: Block;
}
export declare function changeCode(payload: ChangeCodePayload): Action<ChangeCodePayload>;
export declare function changeCodeData(node: Block, data: Partial<CodeData>): Action<ChangeCodeDataPayload>;
export declare function focusToCodeEditor(node: Block): Action<FocusToCodeEditorPayload>;
export declare function focusToTextEditor(node: Block, direction?: FocusDirection): Action<FocusToTextEditorPayload>;
export declare function removeCode(node: Block): Action<RemoveCodePayload>;
export declare function insertCode(payload?: InsertCodePayload): Action<InsertCodePayload>;
export declare function transformCode(): Action<InsertCodePayload>;
export declare function cancelCode(): Action<InsertCodePayload>;
export declare function blurCode(): Action<{}>;
