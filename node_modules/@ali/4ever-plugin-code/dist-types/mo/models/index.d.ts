import { Block, BlockChildren, Data } from '@ali/4ever-cangjie';
interface CodeData extends Data {
    readonly id?: string;
    readonly syntax?: string;
    readonly theme?: string;
    readonly height?: number;
}
declare type CodeChildren = BlockChildren;
export interface CodeProperties<D = CodeData, N extends BlockChildren = CodeChildren> {
    data?: D;
    nodes?: N;
}
export default class Code extends Block<CodeData, CodeChildren> {
    static TYPE: string;
    static create<SD = CodeData, SN extends BlockChildren = CodeChildren>(properties: Code | CodeProperties<SD, SN> | string): Block<SD, SN>;
    static isCode(maybeCode: any): maybeCode is Code;
}
export {};
