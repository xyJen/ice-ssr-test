import { Block, BlockChildren, Data } from '@ali/4ever-cangjie';
interface ColorData extends Data {
    checked: boolean;
}
declare type ColorChildren = BlockChildren;
export interface ColorProperties<D = ColorData, N extends BlockChildren = ColorChildren> {
    data?: D;
    nodes?: N;
}
export default class Color extends Block<ColorData, ColorChildren> {
    static TYPE: string;
    static create<SD = ColorData, SN extends BlockChildren = ColorChildren>(properties: Color | ColorProperties<SD, SN> | string): Block<SD, SN>;
    static isColor(maybeCode: any): maybeCode is Color;
}
export {};
