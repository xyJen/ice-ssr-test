"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Fonts = Fonts;
exports.Backgrounds = Backgrounds;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _actions = require("../actions");

/* eslint-disable no-confusing-arrow */

/* eslint-disable max-len */
const _createElement = /*#__PURE__*/React.createElement;
const defaultFontColorList = ['#171A1D', '#9B9A97', '#E03E3E', '#D9730D', '#DFAB01', '#0F7B6C', '#408BFB', '#64473A', '#6940A5', '#AD1A72'];
const defaultBackgroundColorList = ['#CBCCCD', '#EE7268', '#FFA726', '#FFEE58', '#4DAB9A', '#72B7EF', '#222328', '#C0A9A1', '#9C79D9', '#EB6793'];

var _ref = /*#__PURE__*/_createElement("svg", {
  viewBox: "0 0 1024 1024",
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  "p-id": "4102",
  width: "24",
  height: "24"
}, /*#__PURE__*/_createElement("defs", null), /*#__PURE__*/_createElement("path", {
  d: "M756.224 780.117333L245.077333 266.453333a362.666667 362.666667 0 0 0 511.146667 513.621334z m43.392-47.146666A362.666667 362.666667 0 0 0 292.437333 223.317333L799.616 733.013333zM938.666667 512c0 235.648-191.018667 426.666667-426.666667 426.666667S85.333333 747.648 85.333333 512 276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667z",
  "p-id": "4103",
  fill: "#a2a3a5"
}));

const ColorBlockIcon = () => _ref;

var _ref2 = /*#__PURE__*/_createElement("svg", {
  viewBox: "0 0 1024 1024",
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  "p-id": "3754",
  width: "24",
  height: "24"
}, /*#__PURE__*/_createElement("path", {
  d: "M934.784 256.170667a21.333333 21.333333 0 0 1 1.536 30.122666L452.821333 821.546667a64 64 0 0 1-92.757333 2.389333l-251.562667-251.605333a21.333333 21.333333 0 0 1 0-30.165334l60.330667-60.330666a21.333333 21.333333 0 0 1 30.165333 0L387.114667 669.866667a21.333333 21.333333 0 0 0 30.890666-0.768l423.296-468.650667a21.333333 21.333333 0 0 1 30.165334-1.536l63.317333 57.173333z",
  "p-id": "3755",
  fill: "#ffffff"
}));

const ColorCheckIcon = () => _ref2;

const HorizScroller = /*#__PURE__*/_styledComponents.default.div(["display:flex;flex-direction:row;align-items:center;justify-content:flex-start;margin:-2px -16px 0 -16px;padding:2px 0 12px 16px;overflow-x:scroll;-ms-overflow-style:none;scrollbar-width:none;&::-webkit-scrollbar{display:none;}"]);

const BlockBase = /*#__PURE__*/_styledComponents.default.div(["display:flex;align-items:center;justify-content:center;margin-right:8px;min-width:40px;width:40px;height:40px;border-radius:4px;@media only screen and (min-width:580px){min-width:80px;width:80px;}"]);

const FontIcon = /*#__PURE__*/(0, _styledComponents.default)(BlockBase)(["background:", ";"], props => props.isFocused ? '#E0F0FF' : 'rgba(126, 134, 142, 0.12)');
const BgIconClear = /*#__PURE__*/(0, _styledComponents.default)(BlockBase)(["box-shadow:0px 0px 1px rgba(0,0,0,0.5);background:", ";"], props => props.isFocused ? '#E0F0FF' : 'inherit'); // flex + 滚动似乎会触发某一些优化，在 Android、iOS 上 trim 掉无用的空间
// height 是 0 时，也会触发这个优化

const RightAlign = /*#__PURE__*/_styledComponents.default.div(["min-width:8px;width:8px;height:1px;"]);

const BgIcon = /*#__PURE__*/(0, _styledComponents.default)(BgIconClear)(["background:", ";"], props => props.color);

const AFont = ({
  color
}) => {
  return /*#__PURE__*/_createElement("svg", {
    width: "17",
    height: "17",
    viewBox: "0 0 16 17",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    "data-role": "fontColor"
  }, /*#__PURE__*/_createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.77021 0.0934877H6.39978L0.161163 15.69H3.46301L5.05626 11.525H10.1231L11.707 15.69H15.0088L8.77021 0.0934877ZM8.98419 8.55003H6.19513L7.58501 4.98003L8.98419 8.55003Z",
    fill: color
  }));
};

var _ref3 = /*#__PURE__*/_createElement(RightAlign, null);

function Fonts(props) {
  const {
    controller
  } = props;
  const currentColor = controller.query('getColor');
  const handleColorChange = React.useCallback(color => {
    controller.run('onAction', (0, _actions.setColor)(color));
  }, [controller]);
  return /*#__PURE__*/_createElement(HorizScroller, null, defaultFontColorList.map(color => {
    return /*#__PURE__*/_createElement(FontIcon, {
      key: color,
      onClick: () => handleColorChange(color),
      isFocused: color === currentColor
    }, /*#__PURE__*/_createElement(AFont, {
      color: color
    }));
  }), _ref3);
}

var _ref4 = /*#__PURE__*/_createElement(ColorBlockIcon, null);

var _ref5 = /*#__PURE__*/_createElement(ColorCheckIcon, null);

var _ref6 = /*#__PURE__*/_createElement(RightAlign, null);

function Backgrounds(props) {
  const {
    controller
  } = props;
  const currentHighlight = controller.query('getHighlight');
  const handleBgColorChange = React.useCallback(highlight => {
    controller.dispatch('setHighlight', highlight);
  }, [controller]);
  return /*#__PURE__*/_createElement(HorizScroller, null, /*#__PURE__*/_createElement(BgIconClear, {
    isFocused: !currentHighlight,
    onClick: () => handleBgColorChange('')
  }, _ref4), defaultBackgroundColorList.map(color => {
    return /*#__PURE__*/_createElement(BgIcon, {
      key: color,
      isFocused: false,
      onClick: () => handleBgColorChange(color),
      color: color
    }, currentHighlight === color && _ref5);
  }), _ref6);
}
//# sourceMappingURL=colorMobile.js.map