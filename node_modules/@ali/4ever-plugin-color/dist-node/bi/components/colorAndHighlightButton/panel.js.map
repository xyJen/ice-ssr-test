{"version":3,"sources":["../../../../../src/bi/components/colorAndHighlightButton/panel.tsx"],"names":["TextColorIcon","color","ColorAndHighlightPanel","props","locale","currentColor","currentHighlight","onColorAndHighlightChange","onClose","colorBoxRef","React","useRef","highlightBoxRef","handleClear","useCallback","DEFAULT_COLOR","highlight","DEFAUL_HIGHLIGHT","handleColorBoxClick","e","target","Element","current","getAttribute","parentNode","handleHighlightBoxClick","buttonTitle","SIMPLE_COLORS","map","bgColorText","SIMPLE_HIGHLIGHTS","clearText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ColorAndHighlightPanelWrapper,\n  PanelSection,\n  SectionTitle,\n  ColorBox,\n  ColorBoxItem,\n  ClearBox,\n  TextColorItem,\n  ClearItem,\n} from './styled';\nimport {\n  SIMPLE_COLORS,\n  SIMPLE_HIGHLIGHTS,\n  DEFAULT_COLOR,\n  DEFAUL_HIGHLIGHT,\n} from '../../constants';\nimport { ColorToolbarLocale } from '../../../utils/types';\n\ninterface TextColorIconProps {\n  color: string;\n}\n\nconst TextColorIcon: React.FC<TextColorIconProps> = ({ color }) => {\n  return color !== '#FFFFFF' ?\n    (\n      <svg\n        width=\"11px\"\n        height=\"13px\"\n        viewBox=\"0 0 11 13\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M4.84254 9.15527e-05H6.15746L11 12.1064H9.30237L7.72567 8.16467H3.27433L1.69763 12.1064H0L4.84254 9.15527e-05ZM5.5 2.6005L3.90482 6.58846H7.09518L5.5 2.6005Z\"\n          fill={color}\n        />\n      </svg>\n    ) : (\n      <svg\n        width=\"13\"\n        height=\"14\"\n        viewBox=\"0 0 13 14\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.84254 1H7.15746L12 13.1063H10.3024L8.72567 9.16458H4.27433L2.69763 13.1063H1L5.84254 1ZM6.5 3.60041L4.90482 7.58837H8.09518L6.5 3.60041Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M5.84254 0.75H5.67328L5.61042 0.907152L0.767881 13.0135L0.630742 13.3563H1H2.69763H2.86689L2.92975 13.1992L4.44359 9.41458H8.55641L10.0703 13.1992L10.1331 13.3563H10.3024H12H12.3693L12.2321 13.0135L7.38958 0.907152L7.32672 0.75H7.15746H5.84254ZM7.72592 7.33837H5.27407L6.5 4.27355L7.72592 7.33837Z\"\n          stroke=\"#171A1D\"\n          strokeOpacity=\"0.24\"\n          strokeWidth=\"0.5\"\n        />\n      </svg>\n    );\n};\n\nexport type ColorAndHighlightChangeHandler = (props: {\n  color?: string;\n  highlight?: string;\n}) => void;\n\ninterface ColorAndHighlightPanelProps {\n  locale?: ColorToolbarLocale;\n  currentColor: string;\n  currentHighlight: string;\n  onColorAndHighlightChange: ColorAndHighlightChangeHandler;\n  onClose: () => void;\n}\n\nconst ColorAndHighlightPanel: React.FC<ColorAndHighlightPanelProps> = (\n  props,\n) => {\n  const {\n    locale,\n    currentColor,\n    currentHighlight,\n    onColorAndHighlightChange,\n    onClose,\n  } = props;\n\n  const colorBoxRef = React.useRef<HTMLDivElement>(null);\n  const highlightBoxRef = React.useRef<HTMLDivElement>(null);\n\n  const handleClear = React.useCallback(() => {\n    onColorAndHighlightChange({\n      color: DEFAULT_COLOR,\n      highlight: DEFAUL_HIGHLIGHT,\n    });\n    onClose();\n  }, [onClose, onColorAndHighlightChange]);\n\n  const handleColorBoxClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      let { target } = e;\n      while (target instanceof Element && target !== colorBoxRef.current) {\n        const color = target.getAttribute('data-color');\n        if (typeof color === 'string') {\n          onColorAndHighlightChange({ color });\n          break;\n        }\n        target = target.parentNode!;\n      }\n    },\n    [onColorAndHighlightChange],\n  );\n\n  const handleHighlightBoxClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      let { target } = e;\n      while (target instanceof Element && target !== highlightBoxRef.current) {\n        const highlight = target.getAttribute('data-highlight');\n        if (typeof highlight === 'string') {\n          onColorAndHighlightChange({ highlight });\n          break;\n        }\n        target = target.parentNode!;\n      }\n    },\n    [onColorAndHighlightChange],\n  );\n\n  return (\n    <ColorAndHighlightPanelWrapper>\n      <PanelSection>\n        <SectionTitle>{locale?.buttonTitle}</SectionTitle>\n        <ColorBox ref={colorBoxRef} onClick={handleColorBoxClick}>\n          {SIMPLE_COLORS.map((color) => (\n            <ColorBoxItem\n              data-color={color}\n              key={color}\n              isSelected={color === currentColor}\n            >\n              <TextColorItem color={color} isSelected={color === currentColor}>\n                <TextColorIcon color={color} />\n              </TextColorItem>\n            </ColorBoxItem>\n          ))}\n        </ColorBox>\n      </PanelSection>\n      <PanelSection>\n        <SectionTitle>{locale?.bgColorText}</SectionTitle>\n        <ColorBox ref={highlightBoxRef} onClick={handleHighlightBoxClick}>\n          <ColorBoxItem\n            data-highlight={DEFAUL_HIGHLIGHT}\n            isSelected={!currentHighlight}\n          >\n            <ClearItem isSelected={!currentHighlight} />\n          </ColorBoxItem>\n          {SIMPLE_HIGHLIGHTS.map((highlight) => (\n            <ColorBoxItem\n              key={highlight}\n              bgColor={highlight}\n              data-highlight={highlight}\n              isSelected={highlight === currentHighlight}\n            />\n          ))}\n        </ColorBox>\n      </PanelSection>\n      <ClearBox onClick={handleClear}>{locale?.clearText}</ClearBox>\n    </ColorAndHighlightPanelWrapper>\n  );\n};\n\nexport default ColorAndHighlightPanel;\n"],"file":"panel.js"}