{"version":3,"sources":["../../../src/bi/createRenderToolbar.tsx"],"names":["React","ItemKey","ItemSlot","SlotType","ColorButton","createRenderToolbar","locale","props","controller","buttonName","extraProps","color","splitButton"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,QAA3C,QAA2D,sBAA3D;AACA,OAAOC,WAAP;AAEA,eAAe,SAASC,mBAAT,CACbC,MADa,EAEE;AAEf,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAuB;AAAA,QAEpBC,UAFoB,GAEOF,KAFP,CAEpBE,UAFoB;AAAA,QAERC,UAFQ,GAEOH,KAFP,CAERG,UAFQ;;AAI5B,QAAID,UAAU,KAAKR,OAAO,CAACU,KAA3B,EAAkC;AAChC,0BACE,eAAC,QAAD;AAAU,QAAA,OAAO,EAAER,QAAQ,CAACS;AAA5B,sBACE,eAAC,WAAD;AACE,QAAA,UAAU,EAAEJ,UADd;AAEE,QAAA,MAAM,EAAEF;AAFV,SAGMI,UAHN,EADF,CADF;AASD;;AAED,WAAO,IAAP;AACD,GAjBD;AAkBD","sourcesContent":["import * as React from 'react';\nimport { RenderToolbar, ItemKey, ItemSlot, SlotType } from '@ali/4ever-component';\nimport ColorButton from './components/next/colorButton';\n\nexport default function createRenderToolbar(\n  locale: Record<string, string>,\n): RenderToolbar {\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    if (buttonName === ItemKey.color) {\n      return (\n        <ItemSlot display={SlotType.splitButton}>\n          <ColorButton\n            controller={controller}\n            locale={locale}\n            {...extraProps}\n          />\n        </ItemSlot>\n      )\n    }\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}