{"version":3,"sources":["../../../../src/bi/components/colorButton.tsx"],"names":["React","ColorPicker","EColorPickerIcon","setColor","DEFAULT_COLOR","setColorPanelMode","ColorButton","props","controller","locale","rest","color","query","isCollapsedAtEdge","value","selection","handleChange","useCallback","colorValue","run","isDisabled","getColorPanelMode","mode","handleSelectValueChange","font","buttonTitle"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,WAAT,EAAuCC,gBAAvC,QAA+D,iBAA/D;AACA,SAASC,QAAT;AACA,SAASC,aAAT;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AAOA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA8C;AAAA,MACnDC,UADmD,GACnBD,KADmB,CACnDC,UADmD;AAAA,MACvCC,MADuC,GACnBF,KADmB,CACvCE,MADuC;AAAA,MAC5BC,IAD4B,iCACnBH,KADmB;;AAE3D,MAAMI,KAAK,GAAGH,UAAU,CAACI,KAAX,CAAiB,UAAjB,CAAd;AAF2D,MAGnDC,iBAHmD,GAG7BL,UAAU,CAACM,KAAX,CAAiBC,SAHY,CAGnDF,iBAHmD;AAI3D,MAAMG,YAAY,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,UAACC,UAAD;AAAA,WAAwBV,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2BhB,QAAQ,CAACe,UAAD,CAAnC,CAAxB;AAAA,GAAlB,EAA4F,CAACV,UAAD,CAA5F,CAArB;AACA,MAAMY,UAAU,GAAGP,iBAAiB,IAC/BL,UAAU,CAACI,KAAX,CAAiB,oBAAjB,CADc,IAEdJ,UAAU,CAACI,KAAX,CAAiB,iBAAjB,CAFc,IAGdJ,UAAU,CAACI,KAAX,CAAiB,uBAAjB,CAHL;AAKA,MAAMS,iBAAiB,GACrBrB,KAAK,CAACiB,WAAN,CAAkB;AAAA;;AAAA,gCAAMT,UAAU,CAACI,KAAX,CAAiB,mBAAjB,CAAN,qBAAM,kBAAuCU,IAA7C;AAAA,GAAlB,EAAqE,CAACd,UAAD,CAArE,CADF;AAGA,MAAMe,uBAAuB,GAAGvB,KAAK,CAACiB,WAAN,CAAkB,UAACK,IAAD,EAA2B;AAC3Ed,IAAAA,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2Bd,iBAAiB,CAAC;AAAEiB,MAAAA,IAAI,EAAJA;AAAF,KAAD,CAA5C;AACD,GAF+B,EAE7B,CAACd,UAAD,CAF6B,CAAhC;AAIA,sBACE,eAAC,WAAD,eACME,IADN;AAEE,IAAA,MAAM,EAAC,kBAFT;AAGE,IAAA,OAAO,EAAER,gBAAgB,CAACsB,IAH5B;AAIE,IAAA,QAAQ,EAAE,CAAC,CAACJ,UAJd;AAKE,IAAA,KAAK,EAAET,KALT;AAME,IAAA,aAAa,EAAEK,YANjB;AAOE,IAAA,YAAY,EAAEZ,aAPhB;AAQE,IAAA,cAAc,EAAC,SARjB;AASE,IAAA,YAAY,EAAEK,MAAM,CAACgB,WATvB;AAUE,IAAA,gBAAgB,MAVlB;AAWE,IAAA,YAAY,MAXd;AAYE,IAAA,iBAAiB,EAAEJ,iBAZrB;AAaE,IAAA,mBAAmB,EAAEE;AAbvB,KADF;AAiBD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { ColorPicker, EColorPanelMode, EColorPickerIcon } from '@ali/we-toolbar';\nimport { setColor } from '../actions';\nimport { DEFAULT_COLOR } from '../constants';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\n\nexport interface ColorButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function ColorButton(props: ColorButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const color = controller.query('getColor');\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const handleChange = React.useCallback((colorValue: string) => controller.run('onAction', setColor(colorValue)), [controller]);\n  const isDisabled = isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInLinkCard');\n\n  const getColorPanelMode =\n    React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);\n\n  const handleSelectValueChange = React.useCallback((mode: EColorPanelMode) => {\n    controller.run('onAction', setColorPanelMode({ mode }));\n  }, [controller]);\n\n  return (\n    <ColorPicker\n      {...rest}\n      testid=\"bi-toolbar-color\"\n      btnType={EColorPickerIcon.font}\n      disabled={!!isDisabled}\n      color={color}\n      onColorPicker={handleChange}\n      defaultColor={DEFAULT_COLOR}\n      automaticColor=\"#404040\"\n      shortcutText={locale.buttonTitle}\n      showToggleSelect\n      showGradient\n      getColorPanelMode={getColorPanelMode}\n      onSelectValueChange={handleSelectValueChange}\n    />\n  );\n}\n"],"file":"colorButton.js"}