{"version":3,"sources":["../../../../src/bi/components/colorMobile.tsx"],"names":["React","styled","setColor","defaultFontColorList","defaultBackgroundColorList","ColorBlockIcon","ColorCheckIcon","HorizScroller","div","BlockBase","FontIcon","props","isFocused","BgIconClear","RightAlign","BgIcon","color","AFont","Fonts","controller","currentColor","query","handleColorChange","useCallback","run","map","Backgrounds","currentHighlight","handleBgColorChange","highlight","dispatch"],"mappings":"AAAA;;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAD4B,a;AAE5B,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT;AAEA,IAAMC,oBAAoB,GAAG,CAC3B,SAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAI3B,SAJ2B,EAK3B,SAL2B,EAM3B,SAN2B,EAO3B,SAP2B,EAQ3B,SAR2B,EAS3B,SAT2B,EAU3B,SAV2B,CAA7B;AAYA,IAAMC,0BAA0B,GAAG,CACjC,SADiC,EAEjC,SAFiC,EAGjC,SAHiC,EAIjC,SAJiC,EAKjC,SALiC,EAMjC,SANiC,EAOjC,SAPiC,EAQjC,SARiC,EASjC,SATiC,EAUjC,SAViC,CAAnC;;wBAeE;AACE,EAAA,OAAO,EAAC,eADV;AAEE,EAAA,OAAO,EAAC,KAFV;AAGE,EAAA,KAAK,EAAC,4BAHR;AAIE,UAAK,MAJP;AAKE,EAAA,KAAK,EAAC,IALR;AAME,EAAA,MAAM,EAAC;AANT,gBAQE,4BARF,eASE;AACE,EAAA,CAAC,EAAC,wWADJ;AAEE,UAAK,MAFP;AAGE,EAAA,IAAI,EAAC;AAHP,EATF,C;;AADF,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA,CAAvB;;yBAmBE;AACE,EAAA,OAAO,EAAC,eADV;AAEE,EAAA,OAAO,EAAC,KAFV;AAGE,EAAA,KAAK,EAAC,4BAHR;AAIE,UAAK,MAJP;AAKE,EAAA,KAAK,EAAC,IALR;AAME,EAAA,MAAM,EAAC;AANT,gBAQE;AACE,EAAA,CAAC,EAAC,6XADJ;AAEE,UAAK,MAFP;AAGE,EAAA,IAAI,EAAC;AAHP,EARF,C;;AADF,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA,CAAvB;;AAiBA,IAAMC,aAAa,gBAAGN,MAAM,CAACO,GAAV,wOAAnB;AAeA,IAAMC,SAAS,gBAAGR,MAAM,CAACO,GAAV,0MAAf;AAeA,IAAME,QAAQ,gBAAGT,MAAM,CAACQ,SAAD,CAAT,uBACE,UAACE,KAAD;AAAA,SACZA,KAAK,CAACC,SAAN,GAAkB,SAAlB,GAA8B,2BADlB;AAAA,CADF,CAAd;AAKA,IAAMC,WAAW,gBAAGZ,MAAM,CAACQ,SAAD,CAAT,8DAED,UAACE,KAAD;AAAA,SAAYA,KAAK,CAACC,SAAN,GAAkB,SAAlB,GAA8B,SAA1C;AAAA,CAFC,CAAjB,C,CAKA;AACA;;AACA,IAAME,UAAU,gBAAGb,MAAM,CAACO,GAAV,yCAAhB;AAMA,IAAMO,MAAM,gBAAGd,MAAM,CAACY,WAAD,CAAT,uBACI,UAACF,KAAD;AAAA,SAAWA,KAAK,CAACK,KAAjB;AAAA,CADJ,CAAZ;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,QAAkC;AAAA,MAA/BD,KAA+B,SAA/BA,KAA+B;AAC9C,sBACE;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAC,4BALR;AAME,iBAAU;AANZ,kBAQE;AACE,IAAA,QAAQ,EAAC,SADX;AAEE,IAAA,QAAQ,EAAC,SAFX;AAGE,IAAA,CAAC,EAAC,2KAHJ;AAIE,IAAA,IAAI,EAAEA;AAJR,IARF,CADF;AAiBD,CAlBD;;yBA0CM,eAAC,UAAD,O;;AAtBN,OAAO,SAASE,KAAT,CAAeP,KAAf,EAAgD;AAAA,MAC7CQ,UAD6C,GAC9BR,KAD8B,CAC7CQ,UAD6C;AAErD,MAAMC,YAAY,GAAGD,UAAU,CAACE,KAAX,CAAiB,UAAjB,CAArB;AACA,MAAMC,iBAAiB,GAAGtB,KAAK,CAACuB,WAAN,CACxB,UAACP,KAAD,EAAmB;AACjBG,IAAAA,UAAU,CAACK,GAAX,CAAe,UAAf,EAA2BtB,QAAQ,CAACc,KAAD,CAAnC;AACD,GAHuB,EAIxB,CAACG,UAAD,CAJwB,CAA1B;AAMA,sBACE,eAAC,aAAD,QACGhB,oBAAoB,CAACsB,GAArB,CAAyB,UAACT,KAAD,EAAW;AACnC,wBACE,eAAC,QAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMM,iBAAiB,CAACN,KAAD,CAAvB;AAAA,OAFX;AAGE,MAAA,SAAS,EAAEA,KAAK,KAAKI;AAHvB,oBAKE,eAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ;AAAd,MALF,CADF;AASD,GAVA,CADH,QADF;AAgBD;;yBAiBO,eAAC,cAAD,O;;yBAWM,eAAC,cAAD,O;;yBAKR,eAAC,UAAD,O;;AA/BN,OAAO,SAASU,WAAT,CAAqBf,KAArB,EAAsD;AAAA,MACnDQ,UADmD,GACpCR,KADoC,CACnDQ,UADmD;AAE3D,MAAMQ,gBAAgB,GAAGR,UAAU,CAACE,KAAX,CAAiB,cAAjB,CAAzB;AACA,MAAMO,mBAAmB,GAAG5B,KAAK,CAACuB,WAAN,CAC1B,UAACM,SAAD,EAAuB;AACrBV,IAAAA,UAAU,CAACW,QAAX,CAAoB,cAApB,EAAoCD,SAApC;AACD,GAHyB,EAI1B,CAACV,UAAD,CAJ0B,CAA5B;AAMA,sBACE,eAAC,aAAD,qBACE,eAAC,WAAD;AACE,IAAA,SAAS,EAAE,CAACQ,gBADd;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,mBAAmB,CAAC,EAAD,CAAzB;AAAA;AAFX,WADF,EAOGxB,0BAA0B,CAACqB,GAA3B,CAA+B,UAACT,KAAD,EAAW;AACzC,wBACE,eAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAE,KAFb;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMY,mBAAmB,CAACZ,KAAD,CAAzB;AAAA,OAHX;AAIE,MAAA,KAAK,EAAEA;AAJT,OAMGW,gBAAgB,KAAKX,KAArB,SANH,CADF;AAYD,GAbA,CAPH,QADF;AAyBD","sourcesContent":["/* eslint-disable no-confusing-arrow */\n/* eslint-disable max-len */\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport type { MobileToolbarButtonProps } from '@ali/4ever-component';\nimport { setColor } from '../actions';\n\nconst defaultFontColorList = [\n  '#171A1D',\n  '#9B9A97',\n  '#E03E3E',\n  '#D9730D',\n  '#DFAB01',\n  '#0F7B6C',\n  '#408BFB',\n  '#64473A',\n  '#6940A5',\n  '#AD1A72',\n];\nconst defaultBackgroundColorList = [\n  '#CBCCCD',\n  '#EE7268',\n  '#FFA726',\n  '#FFEE58',\n  '#4DAB9A',\n  '#72B7EF',\n  '#222328',\n  '#C0A9A1',\n  '#9C79D9',\n  '#EB6793',\n];\n\n\nconst ColorBlockIcon = () => (\n  <svg\n    viewBox=\"0 0 1024 1024\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    p-id=\"4102\"\n    width=\"24\"\n    height=\"24\"\n  >\n    <defs></defs>\n    <path\n      d=\"M756.224 780.117333L245.077333 266.453333a362.666667 362.666667 0 0 0 511.146667 513.621334z m43.392-47.146666A362.666667 362.666667 0 0 0 292.437333 223.317333L799.616 733.013333zM938.666667 512c0 235.648-191.018667 426.666667-426.666667 426.666667S85.333333 747.648 85.333333 512 276.352 85.333333 512 85.333333s426.666667 191.018667 426.666667 426.666667z\"\n      p-id=\"4103\"\n      fill=\"#a2a3a5\"\n    ></path>\n  </svg>\n);\n\nconst ColorCheckIcon = () => (\n  <svg\n    viewBox=\"0 0 1024 1024\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    p-id=\"3754\"\n    width=\"24\"\n    height=\"24\"\n  >\n    <path\n      d=\"M934.784 256.170667a21.333333 21.333333 0 0 1 1.536 30.122666L452.821333 821.546667a64 64 0 0 1-92.757333 2.389333l-251.562667-251.605333a21.333333 21.333333 0 0 1 0-30.165334l60.330667-60.330666a21.333333 21.333333 0 0 1 30.165333 0L387.114667 669.866667a21.333333 21.333333 0 0 0 30.890666-0.768l423.296-468.650667a21.333333 21.333333 0 0 1 30.165334-1.536l63.317333 57.173333z\"\n      p-id=\"3755\"\n      fill=\"#ffffff\"\n    ></path>\n  </svg>\n);\n\nconst HorizScroller = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin: -2px -16px 0 -16px;\n  padding: 2px 0 12px 16px;\n  overflow-x: scroll;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst BlockBase = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  min-width: 40px;\n  width: 40px;\n  height: 40px;\n  border-radius: 4px;\n  @media only screen and (min-width: 580px) {\n    min-width: 80px;\n    width: 80px;\n  }\n`;\n\nconst FontIcon = styled(BlockBase)<{ isFocused: boolean }>`\n  background: ${(props) =>\n    props.isFocused ? '#E0F0FF' : 'rgba(126, 134, 142, 0.12)'};\n`;\n\nconst BgIconClear = styled(BlockBase)<{ isFocused: boolean }>`\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.5);\n  background: ${(props) => (props.isFocused ? '#E0F0FF' : 'inherit')};\n`;\n\n// flex + 滚动似乎会触发某一些优化，在 Android、iOS 上 trim 掉无用的空间\n// height 是 0 时，也会触发这个优化\nconst RightAlign = styled.div`\n  min-width: 8px;\n  width: 8px;\n  height: 1px;\n`;\n\nconst BgIcon = styled(BgIconClear)<{ color: string }>`\n  background: ${(props) => props.color};\n`;\n\nconst AFont = ({ color }: { color: string }) => {\n  return (\n    <svg\n      width=\"17\"\n      height=\"17\"\n      viewBox=\"0 0 16 17\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-role=\"fontColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.77021 0.0934877H6.39978L0.161163 15.69H3.46301L5.05626 11.525H10.1231L11.707 15.69H15.0088L8.77021 0.0934877ZM8.98419 8.55003H6.19513L7.58501 4.98003L8.98419 8.55003Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport function Fonts(props: MobileToolbarButtonProps) {\n  const { controller } = props;\n  const currentColor = controller.query('getColor') as string;\n  const handleColorChange = React.useCallback(\n    (color: string) => {\n      controller.run('onAction', setColor(color));\n    },\n    [controller],\n  );\n  return (\n    <HorizScroller>\n      {defaultFontColorList.map((color) => {\n        return (\n          <FontIcon\n            key={color}\n            onClick={() => handleColorChange(color)}\n            isFocused={color === currentColor}\n          >\n            <AFont color={color} />\n          </FontIcon>\n        );\n      })}\n      <RightAlign />\n    </HorizScroller>\n  );\n}\n\nexport function Backgrounds(props: MobileToolbarButtonProps) {\n  const { controller } = props;\n  const currentHighlight = controller.query('getHighlight') as string;\n  const handleBgColorChange = React.useCallback(\n    (highlight: string) => {\n      controller.dispatch('setHighlight', highlight);\n    },\n    [controller],\n  );\n  return (\n    <HorizScroller>\n      <BgIconClear\n        isFocused={!currentHighlight}\n        onClick={() => handleBgColorChange('')}\n      >\n        <ColorBlockIcon />\n      </BgIconClear>\n      {defaultBackgroundColorList.map((color) => {\n        return (\n          <BgIcon\n            key={color}\n            isFocused={false}\n            onClick={() => handleBgColorChange(color)}\n            color={color}\n          >\n            {currentHighlight === color && (\n              <ColorCheckIcon />\n            )}\n          </BgIcon>\n        );\n      })}\n      <RightAlign />\n    </HorizScroller>\n  );\n}\n"],"file":"colorMobile.js"}