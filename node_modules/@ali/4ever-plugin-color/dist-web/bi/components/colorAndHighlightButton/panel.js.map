{"version":3,"sources":["../../../../../src/bi/components/colorAndHighlightButton/panel.tsx"],"names":["React","ColorAndHighlightPanelWrapper","PanelSection","SectionTitle","ColorBox","ColorBoxItem","ClearBox","TextColorItem","ClearItem","SIMPLE_COLORS","SIMPLE_HIGHLIGHTS","DEFAULT_COLOR","DEFAUL_HIGHLIGHT","TextColorIcon","color","ColorAndHighlightPanel","props","locale","currentColor","currentHighlight","onColorAndHighlightChange","onClose","colorBoxRef","useRef","highlightBoxRef","handleClear","useCallback","highlight","handleColorBoxClick","e","target","Element","current","getAttribute","parentNode","handleHighlightBoxClick","buttonTitle","map","bgColorText","clearText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ColorAndHighlightPanelWrapper,\n  PanelSection,\n  SectionTitle,\n  ColorBox,\n  ColorBoxItem,\n  ClearBox,\n  TextColorItem,\n  ClearItem,\n} from './styled';\nimport {\n  SIMPLE_COLORS,\n  SIMPLE_HIGHLIGHTS,\n  DEFAULT_COLOR,\n  DEFAUL_HIGHLIGHT,\n} from '../../constants';\nimport { ColorToolbarLocale } from '../../../utils/types';\n\ninterface TextColorIconProps {\n  color: string;\n}\n\nconst TextColorIcon: React.FC<TextColorIconProps> = ({ color }) => {\n  return color !== '#FFFFFF' ?\n    (\n      <svg\n        width=\"11px\"\n        height=\"13px\"\n        viewBox=\"0 0 11 13\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M4.84254 9.15527e-05H6.15746L11 12.1064H9.30237L7.72567 8.16467H3.27433L1.69763 12.1064H0L4.84254 9.15527e-05ZM5.5 2.6005L3.90482 6.58846H7.09518L5.5 2.6005Z\"\n          fill={color}\n        />\n      </svg>\n    ) : (\n      <svg\n        width=\"13\"\n        height=\"14\"\n        viewBox=\"0 0 13 14\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.84254 1H7.15746L12 13.1063H10.3024L8.72567 9.16458H4.27433L2.69763 13.1063H1L5.84254 1ZM6.5 3.60041L4.90482 7.58837H8.09518L6.5 3.60041Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M5.84254 0.75H5.67328L5.61042 0.907152L0.767881 13.0135L0.630742 13.3563H1H2.69763H2.86689L2.92975 13.1992L4.44359 9.41458H8.55641L10.0703 13.1992L10.1331 13.3563H10.3024H12H12.3693L12.2321 13.0135L7.38958 0.907152L7.32672 0.75H7.15746H5.84254ZM7.72592 7.33837H5.27407L6.5 4.27355L7.72592 7.33837Z\"\n          stroke=\"#171A1D\"\n          strokeOpacity=\"0.24\"\n          strokeWidth=\"0.5\"\n        />\n      </svg>\n    );\n};\n\nexport type ColorAndHighlightChangeHandler = (props: {\n  color?: string;\n  highlight?: string;\n}) => void;\n\ninterface ColorAndHighlightPanelProps {\n  locale?: ColorToolbarLocale;\n  currentColor: string;\n  currentHighlight: string;\n  onColorAndHighlightChange: ColorAndHighlightChangeHandler;\n  onClose: () => void;\n}\n\nconst ColorAndHighlightPanel: React.FC<ColorAndHighlightPanelProps> = (\n  props,\n) => {\n  const {\n    locale,\n    currentColor,\n    currentHighlight,\n    onColorAndHighlightChange,\n    onClose,\n  } = props;\n\n  const colorBoxRef = React.useRef<HTMLDivElement>(null);\n  const highlightBoxRef = React.useRef<HTMLDivElement>(null);\n\n  const handleClear = React.useCallback(() => {\n    onColorAndHighlightChange({\n      color: DEFAULT_COLOR,\n      highlight: DEFAUL_HIGHLIGHT,\n    });\n    onClose();\n  }, [onClose, onColorAndHighlightChange]);\n\n  const handleColorBoxClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      let { target } = e;\n      while (target instanceof Element && target !== colorBoxRef.current) {\n        const color = target.getAttribute('data-color');\n        if (typeof color === 'string') {\n          onColorAndHighlightChange({ color });\n          break;\n        }\n        target = target.parentNode!;\n      }\n    },\n    [onColorAndHighlightChange],\n  );\n\n  const handleHighlightBoxClick = React.useCallback(\n    (e: React.MouseEvent) => {\n      let { target } = e;\n      while (target instanceof Element && target !== highlightBoxRef.current) {\n        const highlight = target.getAttribute('data-highlight');\n        if (typeof highlight === 'string') {\n          onColorAndHighlightChange({ highlight });\n          break;\n        }\n        target = target.parentNode!;\n      }\n    },\n    [onColorAndHighlightChange],\n  );\n\n  return (\n    <ColorAndHighlightPanelWrapper>\n      <PanelSection>\n        <SectionTitle>{locale?.buttonTitle}</SectionTitle>\n        <ColorBox ref={colorBoxRef} onClick={handleColorBoxClick}>\n          {SIMPLE_COLORS.map((color) => (\n            <ColorBoxItem\n              data-color={color}\n              key={color}\n              isSelected={color === currentColor}\n            >\n              <TextColorItem color={color} isSelected={color === currentColor}>\n                <TextColorIcon color={color} />\n              </TextColorItem>\n            </ColorBoxItem>\n          ))}\n        </ColorBox>\n      </PanelSection>\n      <PanelSection>\n        <SectionTitle>{locale?.bgColorText}</SectionTitle>\n        <ColorBox ref={highlightBoxRef} onClick={handleHighlightBoxClick}>\n          <ColorBoxItem\n            data-highlight={DEFAUL_HIGHLIGHT}\n            isSelected={!currentHighlight}\n          >\n            <ClearItem isSelected={!currentHighlight} />\n          </ColorBoxItem>\n          {SIMPLE_HIGHLIGHTS.map((highlight) => (\n            <ColorBoxItem\n              key={highlight}\n              bgColor={highlight}\n              data-highlight={highlight}\n              isSelected={highlight === currentHighlight}\n            />\n          ))}\n        </ColorBox>\n      </PanelSection>\n      <ClearBox onClick={handleClear}>{locale?.clearText}</ClearBox>\n    </ColorAndHighlightPanelWrapper>\n  );\n};\n\nexport default ColorAndHighlightPanel;\n"],"file":"panel.js"}