import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { ColorAndHighlightPanelWrapper, PanelSection, SectionTitle, ColorBox, ColorBoxItem, ClearBox, TextColorItem, ClearItem } from "./styled";
import { SIMPLE_COLORS, SIMPLE_HIGHLIGHTS, DEFAULT_COLOR, DEFAUL_HIGHLIGHT } from "../../constants";

var _ref2 = /*#__PURE__*/_createElement("svg", {
  width: "13",
  height: "14",
  viewBox: "0 0 13 14",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, /*#__PURE__*/_createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M5.84254 1H7.15746L12 13.1063H10.3024L8.72567 9.16458H4.27433L2.69763 13.1063H1L5.84254 1ZM6.5 3.60041L4.90482 7.58837H8.09518L6.5 3.60041Z",
  fill: "white"
}), /*#__PURE__*/_createElement("path", {
  d: "M5.84254 0.75H5.67328L5.61042 0.907152L0.767881 13.0135L0.630742 13.3563H1H2.69763H2.86689L2.92975 13.1992L4.44359 9.41458H8.55641L10.0703 13.1992L10.1331 13.3563H10.3024H12H12.3693L12.2321 13.0135L7.38958 0.907152L7.32672 0.75H7.15746H5.84254ZM7.72592 7.33837H5.27407L6.5 4.27355L7.72592 7.33837Z",
  stroke: "#171A1D",
  strokeOpacity: "0.24",
  strokeWidth: "0.5"
}));

var TextColorIcon = function TextColorIcon(_ref) {
  var color = _ref.color;
  return color !== '#FFFFFF' ? /*#__PURE__*/_createElement("svg", {
    width: "11px",
    height: "13px",
    viewBox: "0 0 11 13",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_createElement("path", {
    d: "M4.84254 9.15527e-05H6.15746L11 12.1064H9.30237L7.72567 8.16467H3.27433L1.69763 12.1064H0L4.84254 9.15527e-05ZM5.5 2.6005L3.90482 6.58846H7.09518L5.5 2.6005Z",
    fill: color
  })) : _ref2;
};

var ColorAndHighlightPanel = function ColorAndHighlightPanel(props) {
  var locale = props.locale,
      currentColor = props.currentColor,
      currentHighlight = props.currentHighlight,
      onColorAndHighlightChange = props.onColorAndHighlightChange,
      onClose = props.onClose;
  var colorBoxRef = React.useRef(null);
  var highlightBoxRef = React.useRef(null);
  var handleClear = React.useCallback(function () {
    onColorAndHighlightChange({
      color: DEFAULT_COLOR,
      highlight: DEFAUL_HIGHLIGHT
    });
    onClose();
  }, [onClose, onColorAndHighlightChange]);
  var handleColorBoxClick = React.useCallback(function (e) {
    var target = e.target;

    while (target instanceof Element && target !== colorBoxRef.current) {
      var color = target.getAttribute('data-color');

      if (typeof color === 'string') {
        onColorAndHighlightChange({
          color: color
        });
        break;
      }

      target = target.parentNode;
    }
  }, [onColorAndHighlightChange]);
  var handleHighlightBoxClick = React.useCallback(function (e) {
    var target = e.target;

    while (target instanceof Element && target !== highlightBoxRef.current) {
      var highlight = target.getAttribute('data-highlight');

      if (typeof highlight === 'string') {
        onColorAndHighlightChange({
          highlight: highlight
        });
        break;
      }

      target = target.parentNode;
    }
  }, [onColorAndHighlightChange]);
  return /*#__PURE__*/_createElement(ColorAndHighlightPanelWrapper, null, /*#__PURE__*/_createElement(PanelSection, null, /*#__PURE__*/_createElement(SectionTitle, null, locale == null ? void 0 : locale.buttonTitle), /*#__PURE__*/_createElement(ColorBox, {
    ref: colorBoxRef,
    onClick: handleColorBoxClick
  }, SIMPLE_COLORS.map(function (color) {
    return /*#__PURE__*/_createElement(ColorBoxItem, {
      "data-color": color,
      key: color,
      isSelected: color === currentColor
    }, /*#__PURE__*/_createElement(TextColorItem, {
      color: color,
      isSelected: color === currentColor
    }, /*#__PURE__*/_createElement(TextColorIcon, {
      color: color
    })));
  }))), /*#__PURE__*/_createElement(PanelSection, null, /*#__PURE__*/_createElement(SectionTitle, null, locale == null ? void 0 : locale.bgColorText), /*#__PURE__*/_createElement(ColorBox, {
    ref: highlightBoxRef,
    onClick: handleHighlightBoxClick
  }, /*#__PURE__*/_createElement(ColorBoxItem, {
    "data-highlight": DEFAUL_HIGHLIGHT,
    isSelected: !currentHighlight
  }, /*#__PURE__*/_createElement(ClearItem, {
    isSelected: !currentHighlight
  })), SIMPLE_HIGHLIGHTS.map(function (highlight) {
    return /*#__PURE__*/_createElement(ColorBoxItem, {
      key: highlight,
      bgColor: highlight,
      "data-highlight": highlight,
      isSelected: highlight === currentHighlight
    });
  }))), /*#__PURE__*/_createElement(ClearBox, {
    onClick: handleClear
  }, locale == null ? void 0 : locale.clearText));
};

export default ColorAndHighlightPanel;
//# sourceMappingURL=panel.js.map