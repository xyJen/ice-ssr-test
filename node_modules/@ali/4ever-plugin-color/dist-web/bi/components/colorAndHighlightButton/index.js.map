{"version":3,"sources":["../../../../../src/bi/components/colorAndHighlightButton/index.tsx"],"names":["React","useState","useCallback","Commands","SplitButton","ColorPanel","setColor","useSelectionBarContext","DEFAULT_COLOR","DEFAUL_HIGHLIGHT","FontIcon","ColorRole","ColorAndHighlightButton","props","controller","locale","rest","active","setActive","context","actions","lastColor","lastHighlight","currentColor","query","currentHighlight","isCollapsedAtEdge","value","selection","isDisabled","handleColorAndHighlightChange","color","highlight","run","dispatch","updateLastColor","updateLastHighlight","handleButtonClick","handleColorClick","handleBgColorClick","handleCustomVisibleChange","visible","isBlurred","canHide","command","moveToFocus","handleMouseEnter","updateCanHide","handleMouseLeave","colorAndHighlightTooltip","colorCombined","displayName"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Controller, Commands } from '@ali/4ever-cangjie';\nimport { SplitButton } from '@ali/we-toolbar';\nimport { ColorPanel } from '@ali/we-design';\n\nimport { setColor } from '../../actions';\nimport { ColorAndHighlightChangeHandler } from './panel';\nimport { useSelectionBarContext } from '@ali/4ever-component';\nimport { DEFAULT_COLOR, DEFAUL_HIGHLIGHT } from '../../constants';\nimport { ColorToolbarLocale } from '../../../utils/types';\nimport FontIcon from './FontIcon';\nimport { ColorRole } from '../../../utils/role';\nexport interface ColorAndHighlightButtonProps {\n  controller: Controller;\n  locale?: ColorToolbarLocale;\n}\n\nconst ColorAndHighlightButton: React.FC<ColorAndHighlightButtonProps> = (\n  props,\n) => {\n  const { controller, locale, ...rest } = props;\n\n  const [active, setActive] = useState(false);\n\n  const [context, actions] = useSelectionBarContext();\n  const {\n    lastColor = DEFAULT_COLOR,\n    lastHighlight = DEFAUL_HIGHLIGHT,\n  } = context;\n\n  let currentColor = controller.query('getColor') as string;\n  let currentHighlight = (controller.query('getHighlight') as string);\n\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled =\n    isCollapsedAtEdge ||\n    controller.query('isSelectionInImage') ||\n    controller.query('isSelectionInHr') ||\n    controller.query('isSelectionInLinkCard');\n\n  const handleColorAndHighlightChange: ColorAndHighlightChangeHandler = useCallback(\n    ({ color = '', highlight = '' }) => {\n      controller.run('onAction', setColor(color));\n      controller.dispatch('setHighlight', highlight);\n      actions.updateLastColor(color);\n      actions.updateLastHighlight(highlight);\n    },\n    [actions, controller],\n  );\n\n  const handleButtonClick = useCallback(\n    () =>\n      handleColorAndHighlightChange({\n        color: lastColor,\n        highlight: lastHighlight,\n      }),\n    [handleColorAndHighlightChange, lastColor, lastHighlight],\n  );\n\n  const handleColorClick = useCallback((color: string) => {\n    controller.run('onAction', setColor(color));\n\n    actions.updateLastColor(color);\n\n    currentHighlight = controller.query('getHighlight');\n    actions.updateLastHighlight(currentHighlight);\n  }, [controller, actions]);\n\n  const handleBgColorClick = useCallback((color: string) => {\n    controller.dispatch('setHighlight', color);\n\n    actions.updateLastHighlight(color);\n\n    currentColor = controller.query('getColor') as string;\n    actions.updateLastColor(currentColor);\n  }, [controller, actions]);\n\n  const handleCustomVisibleChange = (visible: boolean) => {\n    const { isBlurred } = controller.value;\n    if (isBlurred && !visible) {\n      // fix: focus 到自定义色板输入框然后关闭色板后行内工具栏立即消失\n      controller.run('onCangjieFocus');\n      if (context.canHide) {\n        // fix: focus 到自定义色板输入框然后点击其他区域时行内工具栏不消失\n        controller.command(Commands.moveToFocus);\n      }\n    }\n  };\n\n  // fix: focus 到自定义色板输入框后行内工具栏消失\n  const handleMouseEnter = React.useCallback(\n    () => actions.updateCanHide(false),\n    [actions],\n  );\n\n  const handleMouseLeave = React.useCallback(\n    () => actions.updateCanHide(true),\n    [actions],\n  );\n\n  return (\n    <SplitButton\n      {...rest}\n      testid=\"bi-toolbar-combined-color\"\n      disabled={isDisabled}\n      icon={<FontIcon color={lastColor} backgroundColor={lastHighlight} />}\n      active={active}\n      onActiveChange={setActive}\n      tooltip={locale?.colorAndHighlightTooltip}\n      overlay={(\n        <ColorPanel\n          color={currentColor}\n          onColorClick={handleColorClick}\n          backgroundColor={currentHighlight}\n          onBackgroundColorClick={handleBgColorClick}\n          enableResetButton\n          isFontBgColor\n          shouldShowPreview\n          onCustomVisibleChange={handleCustomVisibleChange}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n        />\n      )}\n      onClickLeft={handleButtonClick}\n      role={ColorRole.colorCombined}\n    />\n  );\n};\n\nColorAndHighlightButton.displayName = 'ColorAndHighlightButton';\n\nexport default ColorAndHighlightButton;\n"],"file":"index.js"}