{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Block","ELEMENT_TYPE","Color","create","properties","Error","isColor","type","TYPE","maybeCode","isBlock"],"mappings":";;AAAA,SAASA,KAAT,QAA2C,oBAA3C;AACA,SAASC,YAAT,2B,CAEA;;IAYqBC,K;;;;;;;QAGZC,M,GAAP,gBACEC,UADF,EAEE;AACA,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACD;;AACD,QAAI,KAAKC,OAAL,CAAaF,UAAb,CAAJ,EAA8B;AAC5B,aAAQA,UAAR;AACD;;AACD,kBAAaD,MAAb,yBACKC,UADL;AAEEG,MAAAA,IAAI,EAAEL,KAAK,CAACM;AAFd;AAID,G;;QAEMF,O,GAAP,iBAAeG,SAAf,EAAmD;AACjD,WAAOT,KAAK,CAACU,OAAN,CAAcD,SAAd,KAA4BA,SAAS,CAACF,IAAV,KAAmBL,KAAK,CAACM,IAA5D;AACD,G;;;EApBgCR,K;;AAAdE,K,CACZM,I,GAAOP,Y;SADKC,K","sourcesContent":["import { Block, BlockChildren, Data } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\n// 定义元素的 data 类型\ninterface ColorData extends Data {\n  checked: boolean;\n}\n\ntype ColorChildren = BlockChildren;\n\nexport interface ColorProperties<D = ColorData, N extends BlockChildren = ColorChildren> {\n  data?: D;\n  nodes?: N;\n}\n\nexport default class Color extends Block<ColorData, ColorChildren> {\n  static TYPE = ELEMENT_TYPE;\n\n  static create<SD = ColorData, SN extends BlockChildren = ColorChildren>(\n    properties: Color | ColorProperties<SD, SN> | string,\n  ) {\n    if (typeof properties === 'string') {\n      throw new Error('`create` does not accept string');\n    }\n    if (this.isColor(properties)) {\n      return (properties as unknown) as Block<SD, SN>;\n    }\n    return super.create<SD, SN>({\n      ...properties,\n      type: Color.TYPE,\n    });\n  }\n\n  static isColor(maybeCode: any): maybeCode is Color {\n    return Block.isBlock(maybeCode) && maybeCode.type === Color.TYPE;\n  }\n}\n"],"file":"index.js"}