"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = RedoButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _role = require("../../../utils/role");

var _everComponent = require("@ali/4ever-component");

var _actions = require("../../actions");

const _createElement = /*#__PURE__*/React.createElement;
const SHORTCUTKEY = _everCangjie.environment.IS_MAC ? 'âŒ˜+Shift+Z' : 'Ctrl+Shift+Z / Ctrl+Y';

function RedoButton(props) {
  const {
    controller,
    locale,
    disabled,
    tooltip: tooltipProp,
    ...rest
  } = props;
  const isDisabled = disabled || !controller.query('canRedo');
  const handleClick = React.useCallback(() => controller.run('onAction', (0, _actions.redo)()), [controller]);
  const tooltip = React.useMemo(() => ({
    title: locale?.redo || 'Redo',
    shortCut: SHORTCUTKEY,
    ...tooltipProp
  }), [tooltipProp]);
  return /*#__PURE__*/_createElement(_everComponent.RedoButton, (0, _extends2.default)({
    testid: "bi-toolbar-redo",
    disabled: isDisabled,
    onClick: handleClick,
    role: _role.HistoryRole.redo,
    title: locale?.redo || 'Redo',
    tooltip: tooltip
  }, rest));
}
//# sourceMappingURL=redoButton.js.map