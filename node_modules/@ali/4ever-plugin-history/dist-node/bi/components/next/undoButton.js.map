{"version":3,"sources":["../../../../../src/bi/components/next/undoButton.tsx"],"names":["SHORTCUTKEY","environment","IS_MAC","UndoButton","props","controller","locale","disabled","tooltip","tooltipProp","rest","isDisabled","query","handleClick","React","useCallback","run","useMemo","title","undo","shortCut","HistoryRole"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;uBAH4B,a;AAK5B,MAAMA,WAAW,GAAGC,yBAAYC,MAAZ,GAAqB,KAArB,GAA6B,QAAjD;;AAOe,SAASC,UAAT,CAAoBC,KAApB,EAA4C;AACzD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA,OAAO,EAAEC,WAAzC;AAAsD,OAAGC;AAAzD,MAAkEN,KAAxE;AACA,QAAMO,UAAU,GAAGJ,QAAQ,IAAI,CAACF,UAAU,CAACO,KAAX,CAAiB,SAAjB,CAAhC;AACA,QAAMC,WAAW,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAMV,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2B,oBAA3B,CAAxB,EAA4D,CAACX,UAAD,CAA5D,CAApB;AAEA,QAAMG,OAAO,GAAGM,KAAK,CAACG,OAAN,CAAc,OAAO;AACnCC,IAAAA,KAAK,EAAEZ,MAAM,EAAEa,IAAR,IAAgB,MADY;AAEnCC,IAAAA,QAAQ,EAAEpB,WAFyB;AAGnC,OAAGS;AAHgC,GAAP,CAAd,EAIZ,CAACA,WAAD,CAJY,CAAhB;AAMA,sBACE,eAAC,yBAAD;AACE,IAAA,MAAM,EAAC,iBADT;AAEE,IAAA,QAAQ,EAAEE,UAFZ;AAGE,IAAA,OAAO,EAAEE,WAHX;AAIE,IAAA,IAAI,EAAEQ,kBAAYF,IAJpB;AAKE,IAAA,KAAK,EAAEb,MAAM,EAAEa,IAAR,IAAgB,MALzB;AAME,IAAA,OAAO,EAAEX;AANX,KAOME,IAPN,EADF;AAWD","sourcesContent":["import * as React from 'react';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport { HistoryRole } from '../../../utils/role';\nimport { IToolbarButtonConfig, UndoButton as Button } from '@ali/4ever-component';\nimport { undo } from '../../actions';\n\nconst SHORTCUTKEY = environment.IS_MAC ? 'âŒ˜+Z' : 'Ctrl+Z';\n\nexport interface UndoButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function UndoButton(props: UndoButtonProps) {\n  const { controller, locale, disabled, tooltip: tooltipProp, ...rest } = props;\n  const isDisabled = disabled || !controller.query('canUndo');\n  const handleClick = React.useCallback(() => controller.run('onAction', undo()), [controller]);\n\n  const tooltip = React.useMemo(() => ({\n    title: locale?.undo || 'Undo',\n    shortCut: SHORTCUTKEY,\n    ...tooltipProp,\n  }), [tooltipProp]);\n\n  return (\n    <Button\n      testid=\"bi-toolbar-undo\"\n      disabled={isDisabled}\n      onClick={handleClick}\n      role={HistoryRole.undo}\n      title={locale?.undo || 'Undo'}\n      tooltip={tooltip}\n      {...rest}\n    />\n  );\n}\n"],"file":"undoButton.js"}