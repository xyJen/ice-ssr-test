{"version":3,"sources":["../../../src/bi/createRenderToolbar.tsx"],"names":["React","DefaultUndoButton","DefaultRedoButton","ItemSlot","SlotType","createRenderToolbar","historyConfig","locale","UndoButton","RedoButton","buttons","props","controller","buttonName","extraProps","Component","iconButton"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,OAAOC,iBAAP;AACA,OAAOC,iBAAP;AACA,SAAmBC,QAAnB,EAA4CC,QAA5C,QAA4D,sBAA5D;AAGA,eAAe,SAASC,mBAAT,CACbC,aADa,EAEE;AACf,MAAMC,MAAM,GAAGD,aAAa,CAACC,MAAd,IAAwB,EAAvC;AAEA,MAAMC,UAAU,GAAGF,aAAa,CAACE,UAAd,IAA4BP,iBAA/C;AACA,MAAMQ,UAAU,GAAGH,aAAa,CAACG,UAAd,IAA4BP,iBAA/C;AAEA,MAAMQ,OAA0F,GAAG;AACjG;AACA,oBAAgBD,UAFiF;AAGjG;AACA,oBAAgBD;AAJiF,GAAnG;AAQA,SAAO,UAACG,KAAD,EAAQC,UAAR,EAAuB;AAAA,QACpBC,UADoB,GACOF,KADP,CACpBE,UADoB;AAAA,QACRC,UADQ,GACOH,KADP,CACRG,UADQ;AAG5B,QAAMC,SAAS,GAAGL,OAAO,CAACG,UAAD,CAAzB;;AACA,QAAIE,SAAJ,EAAe;AACb,0BACE,eAAC,QAAD;AAAU,QAAA,OAAO,EAAEX,QAAQ,CAACY;AAA5B,sBACE,eAAC,SAAD;AACE,QAAA,UAAU,EAAEJ,UADd;AAEE,QAAA,MAAM,EAAEL;AAFV,SAGMO,UAHN,EADF,CADF;AASD;;AAED,WAAO,IAAP;AACD,GAjBD;AAkBD","sourcesContent":["import * as React from 'react';\nimport type { HistoryPluginConfig } from './types';\nimport DefaultUndoButton, { UndoButtonProps } from './components/next/undoButton';\nimport DefaultRedoButton, { RedoButtonProps } from './components/next/redoButton';\nimport { ItemKeys, ItemSlot, RenderToolbar, SlotType } from '@ali/4ever-component';\n\n\nexport default function createRenderToolbar(\n  historyConfig: HistoryPluginConfig,\n): RenderToolbar {\n  const locale = historyConfig.locale || {};\n\n  const UndoButton = historyConfig.UndoButton || DefaultUndoButton;\n  const RedoButton = historyConfig.RedoButton || DefaultRedoButton;\n\n  const buttons: Partial<Record<ItemKeys, React.ComponentType<UndoButtonProps | RedoButtonProps>>> = {\n    // @ts-ignore to fix\n    'history.redo': RedoButton,\n    // @ts-ignore to fix\n    'history.undo': UndoButton,\n  };\n\n\n  return (props, controller) => {\n    const { buttonName, extraProps } = props;\n\n    const Component = buttons[buttonName] as React.ComponentType<UndoButtonProps | RedoButtonProps>;\n    if (Component) {\n      return (\n        <ItemSlot display={SlotType.iconButton}>\n          <Component\n            controller={controller}\n            locale={locale}\n            {...extraProps}\n          />\n        </ItemSlot>\n      );\n    }\n\n    return null;\n  };\n}\n"],"file":"createRenderToolbar.js"}