{"version":3,"sources":["../../../../src/bi/components/mobileButton.tsx"],"names":["React","MobileUndoButton","props","controller","Wrapper","item","isDisabled","query","handleClick","useCallback","dispatch","MobileRedoButton"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAE5B,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAA2D;AAAA,MACxDC,UADwD,GAC1BD,KAD0B,CACxDC,UADwD;AAAA,MAC5CC,OAD4C,GAC1BF,KAD0B,CAC5CE,OAD4C;AAAA,MACnCC,IADmC,GAC1BH,KAD0B,CACnCG,IADmC;AAEhE,MAAMC,UAAU,GAAG,CAACH,UAAU,CAACI,KAAX,CAAiB,SAAjB,CAApB;AACA,MAAMC,WAAW,GAAGR,KAAK,CAACS,WAAN,CAClB;AAAA,WAAMN,UAAU,CAACO,QAAX,CAAoB,MAApB,CAAN;AAAA,GADkB,EAElB,CAACP,UAAD,CAFkB,CAApB;AAKA,sBACE,eAAC,OAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,OAAO,EAAEE;AALX,IADF;AASD;AACD,OAAO,SAASG,gBAAT,CAA0BT,KAA1B,EAA2D;AAAA,MACxDC,UADwD,GAC1BD,KAD0B,CACxDC,UADwD;AAAA,MAC5CC,OAD4C,GAC1BF,KAD0B,CAC5CE,OAD4C;AAAA,MACnCC,IADmC,GAC1BH,KAD0B,CACnCG,IADmC;AAEhE,MAAMC,UAAU,GAAG,CAACH,UAAU,CAACI,KAAX,CAAiB,SAAjB,CAApB;AACA,MAAMC,WAAW,GAAGR,KAAK,CAACS,WAAN,CAClB;AAAA,WAAMN,UAAU,CAACO,QAAX,CAAoB,MAApB,CAAN;AAAA,GADkB,EAElB,CAACP,UAAD,CAFkB,CAApB;AAKA,sBACE,eAAC,OAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,OAAO,EAAEE;AALX,IADF;AASD","sourcesContent":["import React from 'react';\nimport type { MobileToolbarButtonProps } from '@ali/4ever-component';\n\nexport function MobileUndoButton(props: MobileToolbarButtonProps) {\n  const { controller, Wrapper, item } = props;\n  const isDisabled = !controller.query('canUndo');\n  const handleClick = React.useCallback(\n    () => controller.dispatch('undo'),\n    [controller],\n  );\n\n  return (\n    <Wrapper\n      item={item}\n      type=\"big\"\n      icon=\"undo\"\n      isDisabled={isDisabled}\n      onClick={handleClick}\n    />\n  );\n}\nexport function MobileRedoButton(props: MobileToolbarButtonProps) {\n  const { controller, Wrapper, item } = props;\n  const isDisabled = !controller.query('canRedo');\n  const handleClick = React.useCallback(\n    () => controller.dispatch('redo'),\n    [controller],\n  );\n\n  return (\n    <Wrapper\n      item={item}\n      type=\"big\"\n      icon=\"redo\"\n      isDisabled={isDisabled}\n      onClick={handleClick}\n    />\n  );\n}\n"],"file":"mobileButton.js"}