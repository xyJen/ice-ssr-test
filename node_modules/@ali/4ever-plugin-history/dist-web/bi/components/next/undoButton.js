import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { environment } from '@ali/4ever-cangjie';
import { HistoryRole } from "../../../utils/role";
import { UndoButton as Button } from '@ali/4ever-component';
import { undo } from "../../actions";
var SHORTCUTKEY = environment.IS_MAC ? 'âŒ˜+Z' : 'Ctrl+Z';
export default function UndoButton(props) {
  var controller = props.controller,
      locale = props.locale,
      disabled = props.disabled,
      tooltipProp = props.tooltip,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale", "disabled", "tooltip"]);

  var isDisabled = disabled || !controller.query('canUndo');
  var handleClick = React.useCallback(function () {
    return controller.run('onAction', undo());
  }, [controller]);
  var tooltip = React.useMemo(function () {
    return _extends({
      title: (locale == null ? void 0 : locale.undo) || 'Undo',
      shortCut: SHORTCUTKEY
    }, tooltipProp);
  }, [tooltipProp]);
  return /*#__PURE__*/_createElement(Button, _extends({
    testid: "bi-toolbar-undo",
    disabled: isDisabled,
    onClick: handleClick,
    role: HistoryRole.undo,
    title: (locale == null ? void 0 : locale.undo) || 'Undo',
    tooltip: tooltip
  }, rest));
}
//# sourceMappingURL=undoButton.js.map