{"version":3,"sources":["../../../../../src/bi/components/next/undoButton.tsx"],"names":["React","environment","HistoryRole","UndoButton","Button","undo","SHORTCUTKEY","IS_MAC","props","controller","locale","disabled","tooltipProp","tooltip","rest","isDisabled","query","handleClick","useCallback","run","useMemo","title","shortCut"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAqBC,WAArB,QAAwC,oBAAxC;AACA,SAASC,WAAT;AACA,SAA+BC,UAAU,IAAIC,MAA7C,QAA2D,sBAA3D;AACA,SAASC,IAAT;AAEA,IAAMC,WAAW,GAAGL,WAAW,CAACM,MAAZ,GAAqB,KAArB,GAA6B,QAAjD;AAOA,eAAe,SAASJ,UAAT,CAAoBK,KAApB,EAA4C;AAAA,MACjDC,UADiD,GACeD,KADf,CACjDC,UADiD;AAAA,MACrCC,MADqC,GACeF,KADf,CACrCE,MADqC;AAAA,MAC7BC,QAD6B,GACeH,KADf,CAC7BG,QAD6B;AAAA,MACVC,WADU,GACeJ,KADf,CACnBK,OADmB;AAAA,MACMC,IADN,iCACeN,KADf;;AAEzD,MAAMO,UAAU,GAAGJ,QAAQ,IAAI,CAACF,UAAU,CAACO,KAAX,CAAiB,SAAjB,CAAhC;AACA,MAAMC,WAAW,GAAGjB,KAAK,CAACkB,WAAN,CAAkB;AAAA,WAAMT,UAAU,CAACU,GAAX,CAAe,UAAf,EAA2Bd,IAAI,EAA/B,CAAN;AAAA,GAAlB,EAA4D,CAACI,UAAD,CAA5D,CAApB;AAEA,MAAMI,OAAO,GAAGb,KAAK,CAACoB,OAAN,CAAc;AAAA;AAC5BC,MAAAA,KAAK,EAAE,CAAAX,MAAM,QAAN,YAAAA,MAAM,CAAEL,IAAR,KAAgB,MADK;AAE5BiB,MAAAA,QAAQ,EAAEhB;AAFkB,OAGzBM,WAHyB;AAAA,GAAd,EAIZ,CAACA,WAAD,CAJY,CAAhB;AAMA,sBACE,eAAC,MAAD;AACE,IAAA,MAAM,EAAC,iBADT;AAEE,IAAA,QAAQ,EAAEG,UAFZ;AAGE,IAAA,OAAO,EAAEE,WAHX;AAIE,IAAA,IAAI,EAAEf,WAAW,CAACG,IAJpB;AAKE,IAAA,KAAK,EAAE,CAAAK,MAAM,QAAN,YAAAA,MAAM,CAAEL,IAAR,KAAgB,MALzB;AAME,IAAA,OAAO,EAAEQ;AANX,KAOMC,IAPN,EADF;AAWD","sourcesContent":["import * as React from 'react';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport { HistoryRole } from '../../../utils/role';\nimport { IToolbarButtonConfig, UndoButton as Button } from '@ali/4ever-component';\nimport { undo } from '../../actions';\n\nconst SHORTCUTKEY = environment.IS_MAC ? 'âŒ˜+Z' : 'Ctrl+Z';\n\nexport interface UndoButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function UndoButton(props: UndoButtonProps) {\n  const { controller, locale, disabled, tooltip: tooltipProp, ...rest } = props;\n  const isDisabled = disabled || !controller.query('canUndo');\n  const handleClick = React.useCallback(() => controller.run('onAction', undo()), [controller]);\n\n  const tooltip = React.useMemo(() => ({\n    title: locale?.undo || 'Undo',\n    shortCut: SHORTCUTKEY,\n    ...tooltipProp,\n  }), [tooltipProp]);\n\n  return (\n    <Button\n      testid=\"bi-toolbar-undo\"\n      disabled={isDisabled}\n      onClick={handleClick}\n      role={HistoryRole.undo}\n      title={locale?.undo || 'Undo'}\n      tooltip={tooltip}\n      {...rest}\n    />\n  );\n}\n"],"file":"undoButton.js"}