import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { RedoButton as Button } from '@ali/we-toolbar';
import { environment } from '@ali/4ever-cangjie';
import { HistoryRole } from "../../utils/role";
var SHORTCUTKEY = environment.IS_MAC ? 'âŒ˜+Shift+Z' : 'Ctrl+Shift+Z / Ctrl+Y';
export default function RedoButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var isDisabled = !controller.query('canRedo');
  var handleClick = React.useCallback(function () {
    return controller.dispatch('redo');
  }, [controller]);
  return /*#__PURE__*/_createElement(Button, _extends({}, rest, {
    testid: "bi-toolbar-redo",
    disabled: isDisabled,
    onClick: handleClick,
    shortcutText: SHORTCUTKEY,
    role: HistoryRole.redo
  }));
}
//# sourceMappingURL=redoButton.js.map