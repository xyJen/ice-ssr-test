import { ConvertToPluginActionCreators, ConvertToPluginActionPredicates } from '@ali/4ever-cangjie';
export declare const HISTORY_UNDO: unique symbol;
export declare const undo: (payload?: {} | undefined) => import("@ali/4ever-cangjie").Action<{}>, isUndo: (action: import("@ali/4ever-cangjie").Action<any>) => action is import("@ali/4ever-cangjie").Action<{}>;
export declare const HISTORY_REDO: unique symbol;
export declare const redo: (payload?: {} | undefined) => import("@ali/4ever-cangjie").Action<{}>, isRedo: (action: import("@ali/4ever-cangjie").Action<any>) => action is import("@ali/4ever-cangjie").Action<{}>;
export declare const actions: {
    undo: (payload?: {} | undefined) => import("@ali/4ever-cangjie").Action<{}>;
    redo: (payload?: {} | undefined) => import("@ali/4ever-cangjie").Action<{}>;
};
export declare const isActions: {
    isUndo: (action: import("@ali/4ever-cangjie").Action<any>) => action is import("@ali/4ever-cangjie").Action<{}>;
    isRedo: (action: import("@ali/4ever-cangjie").Action<any>) => action is import("@ali/4ever-cangjie").Action<{}>;
};
/** @deprecated */
export declare const DEPRECATED_ACTIONS: {
    HISTORY_REDO: symbol;
    HISTORY_UNDO: symbol;
    undo: (payload?: {} | undefined) => import("@ali/4ever-cangjie").Action<{}>;
    redo: (payload?: {} | undefined) => import("@ali/4ever-cangjie").Action<{}>;
};
declare module '@ali/4ever-cangjie' {
    interface PluginActionCreators extends ConvertToPluginActionCreators<typeof actions> {
    }
    interface PluginActionPredicates extends ConvertToPluginActionPredicates<typeof isActions> {
    }
}
