import _extends from '@babel/runtime/helpers/extends';
import React, { useContext, useRef, useState, useEffect } from 'react';
import dayjs from 'dayjs';
import localeData from 'dayjs/plugin/localeData';
import i18next from 'i18next';
import '@ali/dingtalk-jsapi/entry/union';
import { devConfig as devConfig$1, env as env$1, compareVersion as compareVersion$1, on as on$1, off as off$1 } from '@ali/dingtalk-jsapi/core';
import { ddSdk as ddSdk$1 } from '@ali/dingtalk-jsapi/lib/ddSdk';
import { getENV as getENV$1, ENV_ENUM } from '@ali/dingtalk-jsapi/lib/env';
import { checkJsApi as checkJsApi$1 } from '@ali/dingtalk-jsapi/plugin/checkJsApi';
import { getChannel as getChannel$1 } from '@ali/dingtalk-jsapi/plugin/uniEvent';
import toast$1 from '@ali/dingtalk-jsapi/api/device/notification/toast';
import confirm$1 from '@ali/dingtalk-jsapi/api/device/notification/confirm';
import alert$1 from '@ali/dingtalk-jsapi/api/device/notification/alert';
import openLink$1 from '@ali/dingtalk-jsapi/api/biz/util/openLink';
import _taggedTemplateLiteralLoose from '@babel/runtime/helpers/taggedTemplateLiteralLoose';
import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';
import styled from 'styled-components';
import classnames from 'classnames';

dayjs.extend(localeData);
var resources = {};
var defaultLocale = 'zh-CN';
var LocaleContext = /*#__PURE__*/React.createContext(defaultLocale);
var LocaleProvider = LocaleContext.Provider;
function defineLocale(lang, res) {
  resources[lang] = {
    translation: _extends({}, resources[lang] ? resources[lang].translation : {}, res)
  };
}
function useTranslate(locale) {
  var contextLocale = useContext(LocaleContext);
  var l = locale || contextLocale || defaultLocale;
  return getT(l);
}
function useGetContextLocale() {
  return useContext(LocaleContext);
}
var cacheT = {};

function getT(locale) {
  if (cacheT[locale]) {
    return cacheT[locale];
  }

  var inst = i18next.createInstance();
  inst.init({
    fallbackLng: defaultLocale,
    lng: locale,
    resources: resources
  });
  cacheT[locale] = inst.t.bind(inst);
  return cacheT[locale];
}

function useDayjsLocale(locale) {
  var contextLocale = useContext(LocaleContext);
  var l = locale || contextLocale || defaultLocale;
  var DAYJS_LOCALE_MAP = {
    'zh-CN': 'zh-cn',
    zh_CN: 'zh-cn',
    'zh-TW': 'zh-tw',
    zh_TW: 'zh-tw',
    'zh-HK': 'zh-hk',
    zh_HK: 'zh-hk',
    ja: 'ja',
    ja_JP: 'ja',
    'ja-JP': 'ja',
    'en-US': 'en',
    en_US: 'en'
  };
  return DAYJS_LOCALE_MAP[l];
}

/** 用于class组件 */
var TranslateComp = /*#__PURE__*/React.memo(function (props) {
  var locale = props.locale,
      textKey = props.textKey;
  var t = useTranslate(locale);
  return t(textKey);
});

var TranslateProvider = /*#__PURE__*/React.memo(function (props) {
  var children = props.children;
  var translate = useTranslate(props.locale);
  return children(translate);
});

var ddJsApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  devConfig: devConfig$1,
  env: env$1,
  compareVersion: compareVersion$1,
  on: on$1,
  off: off$1,
  ddSdk: ddSdk$1,
  getENV: getENV$1,
  checkJsApi: checkJsApi$1,
  getChannel: getChannel$1,
  toast: toast$1,
  confirm: confirm$1,
  alert: alert$1,
  openLink: openLink$1
});

/** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * !important: 注意，注意，这里是个大坑
 * 由于容器的bug，在iframe里面的页面，没有联通jsbridge，所以iframe里面无法调用到jsapi
 * - iframe只能从「顶层」window上去拿jsapi
 * - 「当前应用」需要给we-web提供必要的jsapi，挂载到window上
 * - 如果「当前应用」被嵌套到iframe中，jsapi需要父窗口提供
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

if (/dingtalk.com/.test(document.domain)) {
  /* 设置为同域，才能从windown上读值 */
  document.domain = 'dingtalk.com';
}

if (/dingtalk.test/.test(document.domain)) {
  // 日常环境
  try {
    document.domain = 'dingtalk.test';
  } catch (err) {
    console.error('日常环境中无法设置document.domain，原因未找到！', err);
  }
}

/* 当前的顶层窗口 */
var topWin = window.top;
/* 当前窗口是否在顶层（不在iframe里面） */

var isThisTopWindow = window === topWin;
/* 当前是否在钉钉容器中 */

var nowInDingTalk = (navigator.appVersion || '').includes('DingTalk');
/* 当前是否在钉钉容器中 */

var isDingTalk = function isDingTalk() {
  return nowInDingTalk;
};
/* 父子窗口约定在window上存放jsapi的地方 */

var FIELD = 'dd_jspi';
/* 顶层窗口的api集合 */

var JsApiFromTop = {
  isDingTalk: isDingTalk
};

try {
  JsApiFromTop = topWin[FIELD] || {};
  topWin[FIELD] = JsApiFromTop;
} catch (e) {
  console.warn(e);
}
/**
 * 初始化jsapi集合，通过包装能做到
 * - 如果是在iframe中，就从顶层窗口去取api
 * - 保留api原来的类型
 */


function initJsApi(collection) {
  if (isThisTopWindow) {
    var _getENV = getENV$1(),
        platform = _getENV.platform;

    nowInDingTalk = nowInDingTalk || platform !== ENV_ENUM.notInDingTalk;
    /* 把api集合与已有的集合做合并（非覆盖） */

    Object.assign(JsApiFromTop, collection);
  } else {
    var judger = JsApiFromTop.isDingTalk;

    if (typeof judger === 'function') {
      nowInDingTalk = judger();
    }
  }

  /* 默认兜底空api */
  var fallback = function fallback(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _opts = opts,
        onFail = _opts.onFail,
        name = _opts.name;
    var err = new Error("\u672A\u627E\u5230\u5BF9\u5E94\u7684jsapi " + name);
    if (typeof onFail === 'function') onFail(err);
    return Promise.reject(err);
  };
  /* 提取一个api（保留了api原来的类型） */


  function api(name) {
    var target = JsApiFromTop[name];
    if (target) return target; // Todo 判断如果容器能在ifame成功接通jsbridge，则依然返回 collection[name];

    return function () {
      return fallback({
        name: name
      });
    };
  }

  return api;
}

var getApi = initJsApi(ddJsApi);
var devConfig = getApi('devConfig');
var ddSdk = getApi('ddSdk');
var getENV = getApi('getENV');
var getChannel = getApi('getChannel');
var env = getApi('env');
var compareVersion = getApi('compareVersion');
var on = getApi('on');
var off = getApi('off');
var alert = getApi('alert');
var toast = getApi('toast');
var confirm = getApi('confirm');
var checkJsApi = getApi('checkJsApi');
var openLink = getApi('openLink');

/* \
|*|
|*|  Base64 / binary data / UTF-8 strings utilities (#2)
|*|
|*|  https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding
|*|
|*|  Author: madmurphy
|*|
\ */

var b64ToUint6 = function b64ToUint6(nChr) {
  var result = 0;

  if (nChr > 64 && nChr < 91) {
    result = nChr - 65;
  } else if (nChr > 96 && nChr < 123) {
    result = nChr - 71;
  } else if (nChr > 47 && nChr < 58) {
    result = nChr + 4;
  } else if (nChr === 43) {
    result = 62;
  } else if (nChr === 47) {
    result = 63;
  } else {
    result = 0;
  }

  return result;
};

var uint6ToB64 = function uint6ToB64(nUint6) {
  var result = 0;

  if (nUint6 < 26) {
    result = nUint6 + 65;
  } else if (nUint6 < 52) {
    result = nUint6 + 71;
  } else if (nUint6 < 62) {
    result = nUint6 - 4;
  } else if (nUint6 === 62) {
    result = 43;
  } else if (nUint6 === 63) {
    result = 47;
  } else {
    result = 65;
  }

  return result;
};

var strToUTF8Arr = function strToUTF8Arr(sDOMStr) {
  var nStrLen = sDOMStr.length; // nChr 8位的字节数

  var nArrLen = 0;
  var nChr = 0;
  /* mapping... */

  for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {
    nChr = sDOMStr.charCodeAt(nMapIdx);

    if (nChr < 0x80) {
      nArrLen += 1;
    } else if (nChr < 0x800) {
      nArrLen += 2;
    } else if (nChr < 0x10000) {
      nArrLen += 3;
    } else if (nChr < 0x200000) {
      nArrLen += 4;
    } else if (nChr < 0x4000000) {
      nArrLen += 5;
    } else {
      nArrLen += 6;
    }
  } // 初始化字节数组


  var aBytes = new Uint8Array(nArrLen); // 将JS的字符串转换成UTF-8的字节数组

  for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {
    nChr = sDOMStr.charCodeAt(nChrIdx);

    if (nChr < 128) {
      /* one byte */
      aBytes[nIdx++] = nChr;
    } else if (nChr < 0x800) {
      /* two bytes */
      aBytes[nIdx++] = 192 + (nChr >>> 6);
      aBytes[nIdx++] = 128 + (nChr & 63);
    } else if (nChr < 0x10000) {
      /* three bytes */
      aBytes[nIdx++] = 224 + (nChr >>> 12);
      aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);
      aBytes[nIdx++] = 128 + (nChr & 63);
    } else if (nChr < 0x200000) {
      /* four bytes */
      aBytes[nIdx++] = 240 + (nChr >>> 18);
      aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);
      aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);
      aBytes[nIdx++] = 128 + (nChr & 63);
    } else if (nChr < 0x4000000) {
      /* five bytes */
      aBytes[nIdx++] = 248 + (nChr >>> 24);
      aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);
      aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);
      aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);
      aBytes[nIdx++] = 128 + (nChr & 63);
    } else
      /* if (nChr <= 0x7fffffff) */
      {
        /* six bytes */
        aBytes[nIdx++] = 252 + (nChr >>> 30);
        aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);
        aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);
        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);
        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);
        aBytes[nIdx++] = 128 + (nChr & 63);
      }
  }

  return aBytes;
};
var base64EncArr = function base64EncArr(aBytes) {
  var eqLen = (3 - aBytes.length % 3) % 3;
  var sB64Enc = ''; // base64编码

  for (var nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {
    nMod3 = nIdx % 3;
    /* Uncomment the following line in order to split the output in lines 76-character long: */

    /*
    if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += "\r\n"; }
    */

    nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);

    if (nMod3 === 2 || aBytes.length - nIdx === 1) {
      sB64Enc += String.fromCharCode(uint6ToB64(nUint24 >>> 18 & 63), uint6ToB64(nUint24 >>> 12 & 63), uint6ToB64(nUint24 >>> 6 & 63), uint6ToB64(nUint24 & 63));
      nUint24 = 0;
    }
  }

  return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? '=' : '==');
}; // base64解码成utf-8字符串

var base64DecToArr = function base64DecToArr(sBase64, nBlockSize) {
  // 过滤无效字符
  var sB64Enc = sBase64.replace(/[^A-Za-z0-9+/]/g, '');
  var nInLen = sB64Enc.length; // 初始化输出的utf-8数组

  var nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;
  var aBytes = new Uint8Array(nOutLen); // base64解析成utf-8数组

  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
    nMod4 = nInIdx & 3;
    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;

    if (nMod4 === 3 || nInLen - nInIdx === 1) {
      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
        aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
      }

      nUint24 = 0;
    }
  }

  return aBytes;
}; // utf-8字符数组转换成JS字符串

var UTF8ArrToStr = function UTF8ArrToStr(aBytes) {
  var nLen = aBytes.length;
  var sView = '';

  for (var nPart, nIdx = 0; nIdx < nLen; nIdx++) {
    nPart = aBytes[nIdx];
    var chr = 0;

    if (nPart > 251 && nPart < 254 && nIdx + 5 < nLen) {
      /* six bytes */

      /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */
      chr = (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128;
    } else if (nPart > 247 && nPart < 252 && nIdx + 4 < nLen) {
      /* five bytes */
      chr = (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128;
    } else if (nPart > 239 && nPart < 248 && nIdx + 3 < nLen) {
      /* four bytes */
      chr = (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128;
    } else if (nPart > 223 && nPart < 240 && nIdx + 2 < nLen) {
      /* three bytes */
      chr = (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128;
    } else if (nPart > 191 && nPart < 224 && nIdx + 1 < nLen) {
      /* two bytes */
      chr = (nPart - 192 << 6) + aBytes[++nIdx] - 128;
    } else {
      /* nPart < 127 ? */

      /* one byte */
      chr = nPart;
    }

    sView += String.fromCharCode(chr);
  }

  return sView;
}; // UTF-8的字符串转Base64编码

var textToBase64 = function textToBase64(text) {
  var encode = '';

  try {
    encode = base64EncArr(strToUTF8Arr(text));
  } catch (err) {
    console.error('textToBase64 error:', err);
  }

  return encode;
}; // Base64编码转UTF-8的字符串

var base64ToText = function base64ToText(data) {
  var decode = '';

  try {
    decode = UTF8ArrToStr(base64DecToArr(data));
  } catch (err) {
    console.error('textToBase64 error:', err);
  }

  return decode;
};

var parseErrObj = function parseErrObj(err) {
  if (!err) {
    return '';
  }

  var obj = err instanceof Error ? err.message : err;
  var result = '';

  try {
    result = JSON.stringify(obj);
  } catch (error) {
    console.error('parseErrObj error');
  }

  return result;
};

var noop = function noop() {};

var delay = function delay(n) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, n);
  });
};

var cancellablePromise = function cancellablePromise(promise) {
  var isCanceled = false;
  var wrappedPromise = new Promise(function (resolve, reject) {
    promise.then(function (value) {
      return isCanceled ? reject({
        isCanceled: isCanceled,
        value: value
      }) : resolve(value);
    }, function (error) {
      return reject({
        isCanceled: isCanceled,
        error: error
      });
    });
  });
  return {
    promise: wrappedPromise,
    cancel: function cancel() {
      return isCanceled = true;
    }
  };
};

var useCancellablePromises = function useCancellablePromises() {
  var pendingPromises = useRef([]);

  var appendPendingPromise = function appendPendingPromise(promise) {
    return pendingPromises.current = [].concat(pendingPromises.current, [promise]);
  };

  var removePendingPromise = function removePendingPromise(promise) {
    return pendingPromises.current = pendingPromises.current.filter(function (p) {
      return p !== promise;
    });
  };

  var clearPendingPromises = function clearPendingPromises() {
    return pendingPromises.current.map(function (p) {
      return p.cancel();
    });
  };

  var api = {
    appendPendingPromise: appendPendingPromise,
    removePendingPromise: removePendingPromise,
    clearPendingPromises: clearPendingPromises
  };
  return api;
};

var useClickPreventionOnDoubleClick = function useClickPreventionOnDoubleClick(onClick, onDoubleClick) {
  if (!onDoubleClick) return [onClick || noop, noop];
  var api = useCancellablePromises();

  var handleClick = function handleClick(e) {
    api.clearPendingPromises();
    var waitForClick = cancellablePromise(delay(300));
    api.appendPendingPromise(waitForClick);
    return waitForClick.promise.then(function () {
      api.removePendingPromise(waitForClick);
      onClick && onClick(e);
    })["catch"](function (errorInfo) {
      api.removePendingPromise(waitForClick);

      if (!errorInfo.isCanceled) {
        throw errorInfo.error;
      }
    });
  };

  var handleDoubleClick = function handleDoubleClick(e) {
    api.clearPendingPromises();
    onDoubleClick(e);
  };

  return [handleClick, handleDoubleClick];
};

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  useClickPreventionOnDoubleClick: useClickPreventionOnDoubleClick
});

var _templateObject;
var _createElement = /*#__PURE__*/React.createElement;
var SHOW_TIME = 100;
var ORG_SCALE = 0.8;
var DropdownAnimation = /*#__PURE__*/React.memo(function (props) {
  var _el$current;

  var children = props.children,
      visible = props.visible,
      maxHeight = props.maxHeight,
      overlayStyle = props.overlayStyle,
      placement = props.placement,
      className = props.className,
      reps = _objectWithoutPropertiesLoose(props, ["children", "visible", "maxHeight", "overlayStyle", "placement", "className"]);

  var _useState = useState(false),
      show = _useState[0],
      setShow = _useState[1];

  var _useState2 = useState(false),
      hide = _useState2[0],
      setHide = _useState2[1];

  var el = useRef(null);
  var parentEl = (_el$current = el.current) == null ? void 0 : _el$current.closest('.popup-overlay-wrap');

  if (parentEl) {
    parentEl.style.padding = '0';
    parentEl.style.border = 'none';
    parentEl.style.boxShadow = 'none';
    parentEl.style.backgroundColor = 'transparent';
  }

  useEffect(function () {
    if (el.current && maxHeight) {
      el.current.style.overflow = 'hidden';
    }

    setShow(visible);
    var timer = setTimeout(function () {
      if (visible) setShow(false);

      if (el.current) {
        el.current.style.boxShadow = '0px 0px 1px rgba(0,0,0,0.24), 0px 8px 24px rgba(10,30,65,0.16)';

        if (maxHeight) {
          el.current.style.overflow = 'auto';
        }
      }
    }, SHOW_TIME);
    return function () {
      clearTimeout(timer);
      setHide(true);
    };
  }, [el, visible, maxHeight]);

  var placementClassName = function placementClassName() {
    if (!el.current) return '';

    if (placement === 'topLeft') {
      var popup = el.current.closest('.popup-overlay-wrap');

      if (popup) {
        var position = popup.getAttribute('position') || 'tl,bl';
        if (position === 'bl,tl') return 'bottomLeft';
        if (position === 'tl,bl') return 'topLeft';
        if (position === 'bc,tc') return 'bottom';
        if (position === 'tc,bc') return 'top';
        if (position === 'tr,br') return 'topRight';
        if (position === 'br,tr') return 'bottomRight';
        if (position === 'cr,cl') return 'right';
        if (position === 'tr,tl') return 'rightTop';
        if (position === 'tl,tr') return 'leftTop';
        if (position === 'bl,br') return 'leftBottom';
        if (position === 'cl,cr') return 'left';
        if (position === 'br,bl') return 'rightBottom';
        return 'topLeft';
      }
    } else {
      return placement;
    }
  };

  return /*#__PURE__*/_createElement(Overlay, _extends({
    ref: el,
    style: _extends({}, overlayStyle, {
      maxHeight: maxHeight
    }),
    className: classnames({
      show: show,
      hide: hide
    }, className, placementClassName())
  }, reps), children);
});
DropdownAnimation.defaultProps = {
  placement: 'topLeft'
};
var DropdownAnimationContext = /*#__PURE__*/React.createContext([]);
var Overlay = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["\n  width: 100%;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.24),\n    0px 8px 24px rgba(10, 30, 65, 0.16);\n  border-radius: 4px;\n  background-color: #fff;\n  &.show {\n    &.top {\n      animation: ", " ", "ms cubic-bezier(0.39, 0.575, 0.565, 1)\n        forwards;\n    }\n    &.left {\n      animation: ", " ", "ms cubic-bezier(0.39, 0.575, 0.565, 1)\n        forwards;\n    }\n    &.right {\n      animation: ", " ", "ms cubic-bezier(0.39, 0.575, 0.565, 1)\n        forwards;\n    }\n    &.bottom {\n      animation: ", " ", "ms cubic-bezier(0.39, 0.575, 0.565, 1)\n        forwards;\n    }\n    &.topLeft {\n      animation: ", " ", "ms cubic-bezier(0.39, 0.575, 0.565, 1)\n        forwards;\n    }\n    &.topRight {\n      animation: ", " ", "ms\n        cubic-bezier(0.39, 0.575, 0.565, 1) forwards;\n    }\n    &.bottomLeft {\n      animation: ", " ", "ms\n        cubic-bezier(0.39, 0.575, 0.565, 1) forwards;\n    }\n    &.bottomRight {\n      animation: ", " ", "ms\n        cubic-bezier(0.39, 0.575, 0.565, 1) forwards;\n    }\n    &.leftTop {\n      animation: ", " ", "ms cubic-bezier(0.39, 0.575, 0.565, 1)\n        forwards;\n    }\n    &.leftBottom {\n      animation: ", " ", "ms\n        cubic-bezier(0.39, 0.575, 0.565, 1) forwards;\n    }\n    &.rightTop {\n      animation: ", " ", "ms\n        cubic-bezier(0.39, 0.575, 0.565, 1) forwards;\n    }\n    &.rightBottom {\n      animation: ", " ", "ms\n        cubic-bezier(0.39, 0.575, 0.565, 1) forwards;\n    }\n  }\n\n  @keyframes topLeft {\n    0% {\n      transform: scale(", ");\n      opacity: 0;\n      transform-origin: 0% 0%;\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n      transform-origin: 0% 0%;\n    }\n  }\n  @keyframes leftTop {\n    0% {\n      transform: scale(", ");\n      opacity: 0;\n      transform-origin: 0% 0%;\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n      transform-origin: 0% 0%;\n    }\n  }\n  @keyframes top {\n    0% {\n      transform: translateY(-12px);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n  @keyframes topRight {\n    0% {\n      transform: scale(", ");\n      transform-origin: 100% 0%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 100% 0%;\n    }\n  }\n  @keyframes rightTop {\n    0% {\n      transform: scale(", ");\n      transform-origin: 100% 0%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 100% 0%;\n    }\n  }\n  @keyframes right {\n    0% {\n      transform: scale(", ");\n      transform-origin: 100% 50%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 100% 50%;\n    }\n  }\n  @keyframes rightBottom {\n    0% {\n      transform: scale(", ");\n      transform-origin: 100% 100%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 100% 100%;\n    }\n  }\n  @keyframes bottomRight {\n    0% {\n      transform: scale(", ");\n      transform-origin: 100% 100%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 100% 100%;\n    }\n  }\n  @keyframes bottom {\n    0% {\n      transform: translateY(12px);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n  @keyframes bottomLeft {\n    0% {\n      transform: scale(", ");\n      transform-origin: 0% 100%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 0% 100%;\n    }\n  }\n  @keyframes leftBottom {\n    0% {\n      transform: scale(", ");\n      transform-origin: 0% 100%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 0% 100%;\n    }\n  }\n  @keyframes left {\n    0% {\n      transform: scale(", ");\n      transform-origin: 0% 50%;\n    }\n    100% {\n      transform: scale(1);\n      transform-origin: 0% 50%;\n    }\n  }\n"])), 'top', SHOW_TIME, 'left', SHOW_TIME, 'right', SHOW_TIME, 'bottom', SHOW_TIME, 'topLeft', SHOW_TIME, 'topRight', SHOW_TIME, 'bottomLeft', SHOW_TIME, 'bottomRight', SHOW_TIME, 'leftTop', SHOW_TIME, 'leftBottom', SHOW_TIME, 'rightTop', SHOW_TIME, 'rightBottom', SHOW_TIME, ORG_SCALE, ORG_SCALE, ORG_SCALE, ORG_SCALE, ORG_SCALE, ORG_SCALE, ORG_SCALE, ORG_SCALE, ORG_SCALE, ORG_SCALE);

export { DropdownAnimation, DropdownAnimationContext, LocaleProvider, TranslateComp, TranslateProvider, UTF8ArrToStr, alert, base64DecToArr, base64EncArr, base64ToText, checkJsApi, compareVersion, confirm, ddSdk, defineLocale, devConfig, env, getChannel, getENV, index as hooks, isDingTalk, off, on, openLink, parseErrObj, strToUTF8Arr, textToBase64, toast, useDayjsLocale, useGetContextLocale, useTranslate };
//# sourceMappingURL=index.js.map
