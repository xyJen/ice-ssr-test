import * as ddJsApi from './ddJsApi';
import type { IUNCore } from '@ali/dingtalk-jsapi/lib/sdk/index';
export declare class ISdk {
    getExportSdk: () => IUNCore;
}
export { isDingTalk } from './init';
export declare const devConfig: ((devConfigParams: import("@ali/dingtalk-jsapi/lib/sdk/sdkLib").IDevConfigParams) => void) | (() => any);
export declare const ddSdk: ISdk;
export declare const getENV: (() => import("@ali/dingtalk-jsapi/lib/sdk/sdkLib").IENV) | (() => any);
export declare const getChannel: ((namespace: string) => import("@ali/dingtalk-jsapi/plugin/uniEvent").Channel) | (() => any);
export declare const env: import("@ali/dingtalk-jsapi/lib/sdk/sdkLib").IENV | (() => any);
export declare const compareVersion: ((oldVersion: string, newVersion: string, containEqual: boolean) => boolean) | (() => any);
export declare const on: ((methodName: string, listener: (e: any) => void) => void) | (() => any);
export declare const off: ((methodName: string, listener: (e: any) => void) => void) | (() => any);
export declare const alert: typeof ddJsApi.alert | (() => any);
export declare const toast: typeof ddJsApi.toast | (() => any);
export declare const confirm: typeof ddJsApi.confirm | (() => any);
export declare const checkJsApi: ((params: {
    jsApiList: string[];
}) => Promise<{
    [api: string]: boolean;
}>) | (() => any);
export declare const openLink: typeof ddJsApi.openLink | (() => any);
