import { key } from "./utils/meta";
import { commands } from "./commands";
import { actions, isActions } from "./actions";
import { onAction } from "./handlers/onAction";
import { createRenderEditable } from "./createRenderEditable";
import { createOnKeyUp } from "./handlers/onKeyUp";
import { createOnKeyDown } from "./handlers/onKeyDown";
import SnippetManager from "./snippetManager";
import { createQueries } from "./queries";
export var biFactory = function biFactory(config) {
  var _config$snippets;

  var manager = new SnippetManager();
  var enabled = (_config$snippets = config.snippets) == null ? void 0 : _config$snippets.enabled;

  if (!enabled) {
    return {
      key: key
    };
  }

  return {
    key: key,
    commands: commands,
    actions: actions,
    isActions: isActions,
    queries: createQueries(manager),
    onAction: onAction,
    onConstruct: function onConstruct(controller, next) {
      var cfgs = controller.run('getSnippetConfig');
      manager.setConfigs(cfgs);
      return next();
    },
    onCangjieSelect: function onCangjieSelect(event, controller, next) {
      // 在 panel 打开状态下进行选区操作，panel 消失
      if (manager.getSnippet().trigger) {
        manager.setCurrentSnippet();
      }

      return next();
    },
    onKeyDown: createOnKeyDown(manager),
    onKeyUp: createOnKeyUp(manager),
    renderEditable: createRenderEditable(config.snippets, manager)
  };
};
//# sourceMappingURL=index.js.map