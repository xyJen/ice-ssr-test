{"version":3,"sources":["../../../src/bi/index.tsx"],"names":["key","commands","actions","isActions","onAction","createRenderEditable","createOnKeyUp","createOnKeyDown","SnippetManager","createQueries","biFactory","config","manager","enabled","snippets","queries","onConstruct","controller","next","cfgs","run","setConfigs","onCangjieSelect","event","getSnippet","trigger","setCurrentSnippet","onKeyDown","onKeyUp","renderEditable"],"mappings":"AACA,SAASA,GAAT;AACA,SAASC,QAAT;AACA,SAASC,OAAT,EAAkBC,SAAlB;AACA,SAASC,QAAT;AACA,SAASC,oBAAT;AACA,SAASC,aAAT;AACA,SAASC,eAAT;AACA,OAAOC,cAAP;AACA,SAASC,aAAT;AAEA,OAAO,IAAMC,SAAoB,GAAG,SAAvBA,SAAuB,CAACC,MAAD,EAAY;AAAA;;AAC9C,MAAMC,OAAO,GAAG,IAAIJ,cAAJ,EAAhB;AACA,MAAMK,OAAO,uBAAGF,MAAM,CAACG,QAAV,qBAAG,iBAAiBD,OAAjC;;AAEA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO;AAAEb,MAAAA,GAAG,EAAHA;AAAF,KAAP;AACD;;AAED,SAAO;AACLA,IAAAA,GAAG,EAAHA,GADK;AAELC,IAAAA,QAAQ,EAARA,QAFK;AAGLC,IAAAA,OAAO,EAAPA,OAHK;AAILC,IAAAA,SAAS,EAATA,SAJK;AAKLY,IAAAA,OAAO,EAAEN,aAAa,CAACG,OAAD,CALjB;AAMLR,IAAAA,QAAQ,EAARA,QANK;AAOLY,IAAAA,WAAW,EAAE,qBAACC,UAAD,EAAyBC,IAAzB,EAAkC;AAC7C,UAAMC,IAAI,GAAGF,UAAU,CAACG,GAAX,CAAe,kBAAf,CAAb;AACAR,MAAAA,OAAO,CAACS,UAAR,CAAmBF,IAAnB;AACA,aAAOD,IAAI,EAAX;AACD,KAXI;AAYLI,IAAAA,eAZK,2BAYWC,KAZX,EAYkBN,UAZlB,EAY8BC,IAZ9B,EAYoC;AACvC;AACA,UAAIN,OAAO,CAACY,UAAR,GAAqBC,OAAzB,EAAkC;AAChCb,QAAAA,OAAO,CAACc,iBAAR;AACD;;AACD,aAAOR,IAAI,EAAX;AACD,KAlBI;AAmBLS,IAAAA,SAAS,EAAEpB,eAAe,CAACK,OAAD,CAnBrB;AAoBLgB,IAAAA,OAAO,EAAEtB,aAAa,CAACM,OAAD,CApBjB;AAqBLiB,IAAAA,cAAc,EAAExB,oBAAoB,CAACM,MAAM,CAACG,QAAR,EAAkBF,OAAlB;AArB/B,GAAP;AAuBD,CA/BM","sourcesContent":["import type { BiFactory, Controller } from '@ali/4ever-cangjie';\nimport { key } from './utils/meta';\nimport { commands } from './commands';\nimport { actions, isActions } from './actions';\nimport { onAction } from './handlers/onAction';\nimport { createRenderEditable } from './createRenderEditable';\nimport { createOnKeyUp } from './handlers/onKeyUp';\nimport { createOnKeyDown } from './handlers/onKeyDown';\nimport SnippetManager from './snippetManager';\nimport { createQueries } from './queries';\n\nexport const biFactory: BiFactory = (config) => {\n  const manager = new SnippetManager();\n  const enabled = config.snippets?.enabled;\n\n  if (!enabled) {\n    return { key };\n  }\n\n  return {\n    key,\n    commands,\n    actions,\n    isActions,\n    queries: createQueries(manager),\n    onAction,\n    onConstruct: (controller: Controller, next) => {\n      const cfgs = controller.run('getSnippetConfig');\n      manager.setConfigs(cfgs);\n      return next();\n    },\n    onCangjieSelect(event, controller, next) {\n      // 在 panel 打开状态下进行选区操作，panel 消失\n      if (manager.getSnippet().trigger) {\n        manager.setCurrentSnippet();\n      }\n      return next();\n    },\n    onKeyDown: createOnKeyDown(manager),\n    onKeyUp: createOnKeyUp(manager),\n    renderEditable: createRenderEditable(config.snippets, manager),\n  };\n};\n"],"file":"index.js"}