{"version":3,"sources":["../../../../src/bi/components/Menu.tsx"],"names":["ListWrapper","styled","div","isUpHotKey","isDownHotKey","isEnterHotKey","SnippetsMenu","props","items","controller","onItemSelected","onEnterDirectly","selectedIndex","setSelectedIndex","React","useState","listRef","useRef","itemsMap","useMemo","reduce","record","current","index","key","item","handleActiveChange","useCallback","_opt","undefined","handleSelected","handleKeyDown","event","value","composing","length","preventDefault","children","scrollIntoViewIfNeeded","useEffect","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { isKeyHotkey } from 'is-hotkey';\nimport { List } from '@ali/we-design-next';\nimport { Controller, SnippetItemBase } from '@ali/4ever-cangjie';\nimport styled from 'styled-components';\n\nconst ListWrapper = styled.div`\n  max-height: 280px;\n  overflow-y: scroll;\n`;\n\ninterface SnippetsMenuProps<T extends SnippetItemBase = SnippetItemBase> {\n  items: T[];\n  controller: Controller;\n  onItemSelected: (item?: T) => void;\n  /**\n   * 未选中任何选项时按 enter 的行为\n   */\n  onEnterDirectly: (event: KeyboardEvent) => void;\n}\n\nconst isUpHotKey = isKeyHotkey('up');\nconst isDownHotKey = isKeyHotkey('down');\nconst isEnterHotKey = isKeyHotkey('enter');\n\nexport function SnippetsMenu<T extends SnippetItemBase>(props: SnippetsMenuProps<T>) {\n  const { items, controller, onItemSelected, onEnterDirectly } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState<number | undefined>();\n  const listRef = React.useRef<HTMLDivElement | null>(null);\n\n  const itemsMap: Record<string, { item: T; index: number }> = React.useMemo(() => (\n    items.reduce((record, current, index) => ({\n      ...record,\n      [current.key]: { item: current, index },\n    }), {})\n  ), [items]);\n\n  const handleActiveChange = React.useCallback((key: string | null, _opt) => {\n    if (typeof key !== 'string') {\n      setSelectedIndex(undefined);\n    } else {\n      setSelectedIndex(itemsMap[key || ''].index);\n    }\n  }, [itemsMap]);\n\n  const handleSelected = React.useCallback((key: string) => {\n    onItemSelected(itemsMap[key].item)\n  }, [itemsMap]);\n\n  const handleKeyDown = React.useCallback((event: KeyboardEvent) => {\n    // composing 过程中的 keydown 不予处理\n    if (controller.value.composing.length > 0) {\n      return;\n    }\n    if (isUpHotKey(event)) {\n      event.preventDefault();\n      const index = typeof selectedIndex === 'number' && selectedIndex > 0 ? selectedIndex - 1 : items.length - 1\n      setSelectedIndex(index);\n      // @ts-ignore\n      listRef.current?.children[index].scrollIntoViewIfNeeded(false);\n    } else if (isDownHotKey(event)) {\n      event.preventDefault();\n      const index = (\n        typeof selectedIndex === 'undefined'\n          ? 0\n          : (selectedIndex < items.length - 1 ? selectedIndex + 1 : undefined)\n      );\n      setSelectedIndex(index);\n      // Ref: [兼容性](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoViewIfNeeded#%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%AF%E6%8C%81)\n      // @ts-ignore\n      listRef.current?.children[index || 0].scrollIntoViewIfNeeded(false);\n    } else if (isEnterHotKey(event)) {\n      if (typeof selectedIndex === 'number') {\n        event.preventDefault();\n        onItemSelected(items[selectedIndex]);\n      } else {\n        // 未选中选项，按 enter 则走原本编辑器的逻辑\n        onEnterDirectly(event);\n      }\n    }\n  }, [selectedIndex, items]);\n\n  React.useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  React.useEffect(() => {\n    // reset active item\n    setSelectedIndex(undefined);\n  }, [items]);\n\n  return (\n    <ListWrapper>\n      <List\n        ref={listRef}\n        items={items}\n        active={typeof selectedIndex === 'undefined' ? undefined : items[selectedIndex]?.key}\n        onActiveChange={handleActiveChange}\n        onSelect={handleSelected}\n      />\n    </ListWrapper>\n  );\n}\n"],"file":"Menu.js"}