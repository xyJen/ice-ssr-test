"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createOnKeyDown = createOnKeyDown;

var _isHotkey = require("is-hotkey");

const isUpDownHotKey = (0, _isHotkey.isKeyHotkey)(['up', 'down']);
const isEnterHotKey = (0, _isHotkey.isKeyHotkey)('enter');

function createOnKeyDown(manager) {
  return function onKeyDown(event, _controller, next) {
    if (!manager.getSnippet().trigger) {
      return next();
    }

    if (isUpDownHotKey(event) || isEnterHotKey(event)) {
      // 若已经设置了 trigger，且 panel 已显示出来，这时再输入的事件需要拦截
      if (manager.isShowingPanel()) {
        event.preventDefault();
        return;
      } // 若已经设置了 trigger，但还未显示出来，这时再输入的需要走原有逻辑，且重置 snippet


      manager.setCurrentSnippet();
    }

    return next();
  };
}
//# sourceMappingURL=onKeyDown.js.map