"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.biFactory = void 0;

var _meta = require("./utils/meta");

var _commands = require("./commands");

var _actions = require("./actions");

var _onAction = require("./handlers/onAction");

var _createRenderEditable = require("./createRenderEditable");

var _onKeyUp = require("./handlers/onKeyUp");

var _onKeyDown = require("./handlers/onKeyDown");

var _snippetManager = _interopRequireDefault(require("./snippetManager"));

var _queries = require("./queries");

const biFactory = config => {
  const manager = new _snippetManager.default();
  const enabled = config.snippets?.enabled;

  if (!enabled) {
    return {
      key: _meta.key
    };
  }

  return {
    key: _meta.key,
    commands: _commands.commands,
    actions: _actions.actions,
    isActions: _actions.isActions,
    queries: (0, _queries.createQueries)(manager),
    onAction: _onAction.onAction,
    onConstruct: (controller, next) => {
      const cfgs = controller.run('getSnippetConfig');
      manager.setConfigs(cfgs);
      return next();
    },

    onCangjieSelect(event, controller, next) {
      // 在 panel 打开状态下进行选区操作，panel 消失
      if (manager.getSnippet().trigger) {
        manager.setCurrentSnippet();
      }

      return next();
    },

    onKeyDown: (0, _onKeyDown.createOnKeyDown)(manager),
    onKeyUp: (0, _onKeyUp.createOnKeyUp)(manager),
    renderEditable: (0, _createRenderEditable.createRenderEditable)(config.snippets, manager)
  };
};

exports.biFactory = biFactory;
//# sourceMappingURL=index.js.map