{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Hr","Block","create","properties","Error","isHr","type","TYPE","maybeHr","isBlock","ELEMENT_TYPE"],"mappings":";;;;;;;AAAA;;AACA;;AAgBe,MAAMA,EAAN,SAAiBC,kBAAjB,CAA2C;AAGxD,SAAOC,MAAP,CAAkEC,UAAlE,EAAkH;AAChH,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,QAAIJ,EAAE,CAACK,IAAH,CAAQF,UAAR,CAAJ,EAAyB;AACvB,aAAOA,UAAP;AACD;;AACD,WAAO,MAAMD,MAAN,CAAqB,EAC1B,GAAGC,UADuB;AAE1BG,MAAAA,IAAI,EAAEN,EAAE,CAACO;AAFiB,KAArB,CAAP;AAID;;AAED,SAAOF,IAAP,CAAYG,OAAZ,EAAyC;AACvC,WAAOP,mBAAMQ,OAAN,CAAcD,OAAd,KAA0BA,OAAO,CAACF,IAAR,KAAiBN,EAAE,CAACO,IAArD;AACD;;AAlBuD;;;AAArCP,E,CACZO,I,GAAOG,kB","sourcesContent":["import { Block, BlockChildren, Data } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\nexport interface HrData extends Data {\n  width?: number;\n  type?: string;\n  sz?: number;\n  color?: string;\n}\n\ntype HrChildren = BlockChildren;\n\nexport interface HrProperties<D = HrData, N extends BlockChildren = HrChildren> {\n  data?: D;\n  nodes?: N;\n}\n\nexport default class Hr extends Block<HrData, HrChildren> {\n  static TYPE = ELEMENT_TYPE;\n\n  static create<SD = HrData, SN extends BlockChildren = HrChildren>(properties: Hr | HrProperties<SD, SN> | string) {\n    if (typeof properties === 'string') {\n      throw new Error('`Hr.create` does not accept string');\n    }\n    if (Hr.isHr(properties)) {\n      return properties as Block<SD, SN>;\n    }\n    return super.create<SD, SN>({\n      ...properties,\n      type: Hr.TYPE,\n    });\n  }\n\n  static isHr(maybeHr: any): maybeHr is Hr {\n    return Block.isBlock(maybeHr) && maybeHr.type === Hr.TYPE;\n  }\n}\n"],"file":"index.js"}