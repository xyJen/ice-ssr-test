{"version":3,"sources":["../../../../../src/mo/serializer/htmlToJsonML/parseFromWeb.ts"],"names":["parseFromWeb","name","onOpenTag","state","attrs","styleObj","lineStyle","borderTop","borderBottom","lineStyleObj","sz","type","color","push","width","onCloseTag","hr","pop","append"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,SAASA,YAAT,GAA0C;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAE,IADD;;AAGLC,IAAAA,SAAS,CAACC,KAAD,EAAeF,IAAf,EAA6BG,KAA7B,EAAyD;AAChE,UAAIH,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;AACnB,YAAM;AAAEI,QAAAA;AAAF,UAAeD,KAArB;AACA,YAAME,SAAS,GAAGD,QAAQ,CAACE,SAAT,GAAqBF,QAAQ,CAACE,SAA9B,GAA0CF,QAAQ,CAACG,YAArE;;AACA,UAAIF,SAAJ,EAAe;AACb,cAAMG,YAAY,GAAG,wBAAYH,SAAZ,CAArB;AACA,cAAM;AAAEI,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA;AAAZ,YAAsBH,YAA5B;AACAN,QAAAA,KAAK,CAACU,IAAN,CAAW,CACT,IADS,EAET;AAAEF,UAAAA,IAAF;AAAQD,UAAAA,EAAR;AAAYE,UAAAA,KAAZ;AAAmBE,UAAAA,KAAK,EAAE;AAA1B,SAFS,EAGT,mCAHS,CAAX;AAKD,OARD,MAQO;AACLX,QAAAA,KAAK,CAACU,IAAN,CAAW,CAAC,IAAD,EAAO,mCAAP,CAAX;AACD;;AAED,aAAO,IAAP;AACD,KApBI;;AAsBLE,IAAAA,UAAU,CAACZ,KAAD,EAAeF,IAAf,EAAsC;AAC9C,UAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;AAEnB,YAAMe,EAAE,GAAGb,KAAK,CAACc,GAAN,EAAX;AACAd,MAAAA,KAAK,CAACe,MAAN,CAAaF,EAAb;AACA,aAAO,IAAP;AACD;;AA5BI,GAAP;AA8BD;;eAEchB,Y","sourcesContent":["import { MoState as State, MoAttributes as Attributes, HTMLToJsonMLRule, createEmptyText } from '@ali/4ever-cangjie';\nimport { parseBorder } from './utils';\n\nfunction parseFromWeb(): HTMLToJsonMLRule {\n  return {\n    name: 'hr',\n\n    onOpenTag(state: State, name: string, attrs: Attributes): boolean {\n      if (name !== 'hr') return false;\n      const { styleObj } = attrs;\n      const lineStyle = styleObj.borderTop ? styleObj.borderTop : styleObj.borderBottom;\n      if (lineStyle) {\n        const lineStyleObj = parseBorder(lineStyle);\n        const { sz, type, color } = lineStyleObj;\n        state.push([\n          'hr',\n          { type, sz, color, width: '100%' },\n          createEmptyText(),\n        ]);\n      } else {\n        state.push(['hr', createEmptyText()]);\n      }\n\n      return true;\n    },\n\n    onCloseTag(state: State, name: string): boolean {\n      if (name !== 'hr') return false;\n\n      const hr = state.pop();\n      state.append(hr);\n      return true;\n    },\n  };\n}\n\nexport default parseFromWeb;\n"],"file":"parseFromWeb.js"}