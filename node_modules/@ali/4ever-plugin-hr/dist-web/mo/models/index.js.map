{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Block","ELEMENT_TYPE","Hr","create","properties","Error","isHr","type","TYPE","maybeHr","isBlock"],"mappings":";;AAAA,SAASA,KAAT,QAA2C,oBAA3C;AACA,SAASC,YAAT;;IAgBqBC,E;;;;;;;KAGZC,M,GAAP,gBAAkEC,UAAlE,EAAkH;AAChH,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AACD,QAAIH,EAAE,CAACI,IAAH,CAAQF,UAAR,CAAJ,EAAyB;AACvB,aAAOA,UAAP;AACD;;AACD,kBAAaD,MAAb,yBACKC,UADL;AAEEG,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFX;AAID,G;;KAEMF,I,GAAP,cAAYG,OAAZ,EAAyC;AACvC,WAAOT,KAAK,CAACU,OAAN,CAAcD,OAAd,KAA0BA,OAAO,CAACF,IAAR,KAAiBL,EAAE,CAACM,IAArD;AACD,G;;;EAlB6BR,K;;AAAXE,E,CACZM,I,GAAOP,Y;SADKC,E","sourcesContent":["import { Block, BlockChildren, Data } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\nexport interface HrData extends Data {\n  width?: number;\n  type?: string;\n  sz?: number;\n  color?: string;\n}\n\ntype HrChildren = BlockChildren;\n\nexport interface HrProperties<D = HrData, N extends BlockChildren = HrChildren> {\n  data?: D;\n  nodes?: N;\n}\n\nexport default class Hr extends Block<HrData, HrChildren> {\n  static TYPE = ELEMENT_TYPE;\n\n  static create<SD = HrData, SN extends BlockChildren = HrChildren>(properties: Hr | HrProperties<SD, SN> | string) {\n    if (typeof properties === 'string') {\n      throw new Error('`Hr.create` does not accept string');\n    }\n    if (Hr.isHr(properties)) {\n      return properties as Block<SD, SN>;\n    }\n    return super.create<SD, SN>({\n      ...properties,\n      type: Hr.TYPE,\n    });\n  }\n\n  static isHr(maybeHr: any): maybeHr is Hr {\n    return Block.isBlock(maybeHr) && maybeHr.type === Hr.TYPE;\n  }\n}\n"],"file":"index.js"}