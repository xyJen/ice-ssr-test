import { camelCase } from 'lodash-es';
import { createEmptyText, toStyleObject } from '@ali/4ever-cangjie';
import { hrLines } from "../../../utils/lineConfig";
var HR_WIDTH = '100%';
var WORD_HR_REG = /mso-border-(bottom|top)-alt/;

function parseFromWord() {
  return {
    name: 'hr',
    onOpenTag: function onOpenTag(state, name, attrs) {
      if (name === 'hr') {
        state.push(['hr', createEmptyText()]);
        return true;
      }

      if (!WORD_HR_REG.test(attrs.style || '') || attrs["class"] !== 'MsoNormal') {
        return false;
      }

      var style = toStyleObject(attrs.style); // @ts-ignore

      var borderBottom = style.msoBorderBottomAlt || style.borderBottom; // @ts-ignore

      var borderTop = style.msoBorderTopAlt || style.borderTop;
      var borders = [borderBottom, borderTop];

      if (borders.every(function (bor) {
        return !bor || bor.includes('none');
      })) {
        return false;
      }

      for (var _i = 0, _borders = borders; _i < _borders.length; _i++) {
        var border = _borders[_i];

        if (border) {
          (function () {
            // eslint-disable-next-line prefer-const
            var typeAndSz = border.split(' ').filter(function (i) {
              return i !== 'windowtext';
            });
            var ordered = /^\d+/.test(typeAndSz[0]) ? typeAndSz.reverse() : typeAndSz;
            var type = camelCase(ordered[0]);
            var matchHr = hrLines.find(function (line) {
              return line.lineType === type;
            });
            var sz = 1;

            if (matchHr) {
              sz = matchHr.size;
            } else {
              type = 'solid';
            }

            state.push(['hr', {
              type: type,
              sz: sz,
              color: 'black',
              width: HR_WIDTH
            }, createEmptyText()]);
          })();
        }
      }

      return true;
    },
    onCloseTag: function onCloseTag(state, name, attrs) {
      if (name === 'hr') {
        var hr = state.pop();
        state.append(hr);
        return true;
      }

      if (!WORD_HR_REG.test(attrs.style || '') || attrs["class"] !== 'MsoNormal') {
        return false;
      }

      var style = toStyleObject(attrs.style);
      var hrs = []; // @ts-ignore

      var borderBottom = style.msoBorderBottomAlt || style.borderBottom; // @ts-ignore

      var borderTop = style.msoBorderTopAlt || style.borderTop;
      var borders = [borderBottom, borderTop];

      if (borders.every(function (bor) {
        return !bor || bor.includes('none');
      })) {
        return false;
      }

      for (var _i2 = 0, _borders2 = borders; _i2 < _borders2.length; _i2++) {
        var border = _borders2[_i2];

        if (border) {
          // @ts-ignore
          hrs.push(state.pop());
        }
      }

      state.append.apply(state, hrs.reverse());
      return true;
    }
  };
}

export default parseFromWord;
//# sourceMappingURL=parseFromWord.js.map