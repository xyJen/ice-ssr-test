import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { Block } from '@ali/4ever-cangjie';
import { ELEMENT_TYPE } from "../../utils/meta";

var Placeholder = /*#__PURE__*/function (_Block) {
  _inheritsLoose(Placeholder, _Block);

  function Placeholder() {
    return _Block.apply(this, arguments) || this;
  }

  Placeholder.create = function create(properties) {
    if (typeof properties === 'string') {
      throw new Error('`Placeholder.create` does not accept string');
    }

    if (Placeholder.isPlaceholder(properties)) {
      return properties;
    }

    return _Block.create.call(this, _extends({}, properties, {
      type: Placeholder.TYPE
    }));
  };

  Placeholder.isPlaceholder = function isPlaceholder(maybePlaceholder) {
    return Block.isBlock(maybePlaceholder) && maybePlaceholder.type === Placeholder.TYPE;
  };

  return Placeholder;
}(Block);

Placeholder.TYPE = ELEMENT_TYPE;
export { Placeholder as default };
//# sourceMappingURL=index.js.map