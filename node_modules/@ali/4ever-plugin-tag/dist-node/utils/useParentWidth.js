"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useResetWidthByParentWidth = void 0;

var _react = require("react");

var _everCangjie = require("@ali/4ever-cangjie");

var _everUtils = require("@ali/4ever-utils");

const useResetWidthByParentWidth = (controller, node, currElement) => {
  const value = controller.value;
  const [parentWidth, setParentWidth] = (0, _react.useState)(Number.MAX_SAFE_INTEGER);
  (0, _react.useEffect)(() => {
    const parentNode = value.document.getClosest(node.key, maybeBlock => _everCangjie.Block.isBlock(maybeBlock)); // list 下宽度不要约束
    // @ts-ignore node.data

    const extra = parentNode?.data?.pi?.extra || {};
    const inList = extra.inList || extra.inTaskList || parentNode?.type === 'paragraph' && parentNode?.data?.list;
    if (inList) return; // isList

    if (parentNode?.data?.list) return; // FIX: 避免多实例渲染时定位到非目标节点

    const root = currElement?.closest('div[data-cangjie-content]');
    const innerWidth = parentNode ? (0, _everUtils.getInnerWidth)(parentNode, root || undefined) : null;

    if (innerWidth === null) {
      setParentWidth(Number.MAX_SAFE_INTEGER);
      return;
    }

    setParentWidth(innerWidth);
  }, [value, node.key]);
  return [parentWidth];
};

exports.useResetWidthByParentWidth = useResetWidthByParentWidth;
//# sourceMappingURL=useParentWidth.js.map