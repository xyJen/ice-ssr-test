{"version":3,"sources":["../../../src/utils/useParentWidth.tsx"],"names":["useState","useEffect","Block","getInnerWidth","useResetWidthByParentWidth","controller","node","currElement","value","Number","MAX_SAFE_INTEGER","parentWidth","setParentWidth","parentNode","document","getClosest","key","maybeBlock","isBlock","extra","data","pi","inList","inTaskList","type","list","root","closest","innerWidth","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAA2BC,KAA3B,QAAwC,oBAAxC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,UAAD,EAAyBC,IAAzB,EAAqCC,WAArC,EAAwF;AAChI,MAAMC,KAAK,GAAGH,UAAU,CAACG,KAAzB;;AADgI,kBAE1FR,QAAQ,CAASS,MAAM,CAACC,gBAAhB,CAFkF;AAAA,MAEzHC,WAFyH;AAAA,MAE5GC,cAF4G;;AAIhIX,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAMY,UAAU,GAAGL,KAAK,CAACM,QAAN,CAAeC,UAAf,CAA0BT,IAAI,CAACU,GAA/B,EAAoC,UAACC,UAAD;AAAA,aAAgBf,KAAK,CAACgB,OAAN,CAAcD,UAAd,CAAhB;AAAA,KAApC,CAAnB,CADc,CAEd;AACA;;AACA,QAAME,KAAK,GAAG,CAAAN,UAAU,QAAV,gCAAAA,UAAU,CAAEO,IAAZ,6DAAkBC,EAAlB,yCAAsBF,KAAtB,KAA+B,EAA7C;AACA,QAAMG,MAAM,GAAGH,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACI,UAAtB,IAAqC,CAAAV,UAAU,QAAV,YAAAA,UAAU,CAAEW,IAAZ,MAAqB,WAArB,KAAoCX,UAApC,yCAAoCA,UAAU,CAAEO,IAAhD,qBAAoC,kBAAkBK,IAAtD,CAApD;AACA,QAAIH,MAAJ,EAAY,OANE,CAOd;;AACA,QAAIT,UAAJ,iCAAIA,UAAU,CAAEO,IAAhB,aAAI,kBAAkBK,IAAtB,EAA4B,OARd,CASd;;AACA,QAAMC,IAAI,GAAGnB,WAAH,oBAAGA,WAAW,CAAEoB,OAAb,CAAqB,2BAArB,CAAb;AACA,QAAMC,UAAU,GAAGf,UAAU,GAAGV,aAAa,CAACU,UAAD,EAAaa,IAAI,IAAIG,SAArB,CAAhB,GAAkD,IAA/E;;AACA,QAAID,UAAU,KAAK,IAAnB,EAAyB;AACvBhB,MAAAA,cAAc,CAACH,MAAM,CAACC,gBAAR,CAAd;AACA;AACD;;AACDE,IAAAA,cAAc,CAACgB,UAAD,CAAd;AACD,GAjBQ,EAiBN,CAACpB,KAAD,EAAQF,IAAI,CAACU,GAAb,CAjBM,CAAT;AAmBA,SAAO,CAACL,WAAD,CAAP;AACD,CAxBM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Controller, Node, Block } from '@ali/4ever-cangjie';\nimport { getInnerWidth } from '@ali/4ever-utils';\n\nexport const useResetWidthByParentWidth = (controller: Controller, node: Node, currElement?: HTMLSpanElement | null): [number] => {\n  const value = controller.value;\n  const [parentWidth, setParentWidth] = useState<number>(Number.MAX_SAFE_INTEGER);\n\n  useEffect(() => {\n    const parentNode = value.document.getClosest(node.key, (maybeBlock) => Block.isBlock(maybeBlock)) as Block | null;\n    // list 下宽度不要约束\n    // @ts-ignore node.data\n    const extra = parentNode?.data?.pi?.extra || {};\n    const inList = extra.inList || extra.inTaskList || (parentNode?.type === 'paragraph' && parentNode?.data?.list);\n    if (inList) return;\n    // isList\n    if (parentNode?.data?.list) return;\n    // FIX: 避免多实例渲染时定位到非目标节点\n    const root = currElement?.closest('div[data-cangjie-content]');\n    const innerWidth = parentNode ? getInnerWidth(parentNode, root || undefined) : null;\n    if (innerWidth === null) {\n      setParentWidth(Number.MAX_SAFE_INTEGER);\n      return;\n    }\n    setParentWidth(innerWidth);\n  }, [value, node.key]);\n\n  return [parentWidth];\n};\n"],"file":"useParentWidth.js"}