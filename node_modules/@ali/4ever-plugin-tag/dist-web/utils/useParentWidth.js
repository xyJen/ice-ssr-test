import { useState, useEffect } from 'react';
import { Block } from '@ali/4ever-cangjie';
import { getInnerWidth } from '@ali/4ever-utils';
export var useResetWidthByParentWidth = function useResetWidthByParentWidth(controller, node, currElement) {
  var value = controller.value;

  var _useState = useState(Number.MAX_SAFE_INTEGER),
      parentWidth = _useState[0],
      setParentWidth = _useState[1];

  useEffect(function () {
    var _parentNode$data, _parentNode$data$pi, _parentNode$data2, _parentNode$data3;

    var parentNode = value.document.getClosest(node.key, function (maybeBlock) {
      return Block.isBlock(maybeBlock);
    }); // list 下宽度不要约束
    // @ts-ignore node.data

    var extra = (parentNode == null ? void 0 : (_parentNode$data = parentNode.data) == null ? void 0 : (_parentNode$data$pi = _parentNode$data.pi) == null ? void 0 : _parentNode$data$pi.extra) || {};
    var inList = extra.inList || extra.inTaskList || (parentNode == null ? void 0 : parentNode.type) === 'paragraph' && (parentNode == null ? void 0 : (_parentNode$data2 = parentNode.data) == null ? void 0 : _parentNode$data2.list);
    if (inList) return; // isList

    if (parentNode != null && (_parentNode$data3 = parentNode.data) != null && _parentNode$data3.list) return; // FIX: 避免多实例渲染时定位到非目标节点

    var root = currElement == null ? void 0 : currElement.closest('div[data-cangjie-content]');
    var innerWidth = parentNode ? getInnerWidth(parentNode, root || undefined) : null;

    if (innerWidth === null) {
      setParentWidth(Number.MAX_SAFE_INTEGER);
      return;
    }

    setParentWidth(innerWidth);
  }, [value, node.key]);
  return [parentWidth];
};
//# sourceMappingURL=useParentWidth.js.map