import * as React from 'react';
export declare type CellItem = {
    key: string;
    width: number;
};
declare type ProviderConfigs = {
    cells: CellItem[];
    alignKey: string;
    isDragging: boolean;
    handleDragging: (cellKey: string, clientX: number) => void;
    handleDraggingChange: (dragging: boolean) => void;
};
export declare const ColumnsProvider: React.Provider<ProviderConfigs>;
export declare const useCellConfigs: (key: string) => {
    index: number;
    isDragging: boolean;
    dragBarAligned: boolean;
    percentAligned: boolean;
    percent: number;
    count: number;
    handleDragging: (cellKey: string, clientX: number) => void;
    handleDraggingChange: (dragging: boolean) => void;
} | null;
export declare function correctWidths(items: CellItem[], totalWidth: number): {
    width: number;
    key: string;
}[];
declare type MoveResult = {
    items: CellItem[];
    isAligned?: boolean;
};
declare type MoveParams = {
    offsetX: number;
    key: string;
    items: CellItem[];
    totalWidth: number;
    rectWidth: number;
    prefPercents?: number[];
};
export declare function moveWidths(params: MoveParams): MoveResult;
export {};
