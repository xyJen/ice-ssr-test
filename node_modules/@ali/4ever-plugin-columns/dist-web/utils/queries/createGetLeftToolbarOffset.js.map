{"version":3,"sources":["../../../../src/utils/queries/createGetLeftToolbarOffset.ts"],"names":["Table","TableCell","TableRow","OldBambooPlugin","isFoldGroupNode","utils","createGetLeftToolbarOffset","isDisabled","controller","data","undefined","document","value","node","parent","getParent","key","isTableCell","row","table","isTableRow","isColumns","isTable","sr","isFirstLineList","list","level","x","y"],"mappings":"AACA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,yBAA3C;AAEA,SAASC,eAAT,QAAgC,8BAAhC;IAEQC,e,GAAoBD,eAAe,CAACE,K,CAApCD,e;AAER,eAAe,SAASE,0BAAT,CAAoCC,UAApC,EAA2D;AACxE,SAAO,UAACC,UAAD,EAAyBC,IAAzB,EAAmD;AAAA;;AACxD,QAAIF,UAAU,IAAIA,UAAU,EAA5B,EAAgC;AAC9B,aAAOG,SAAP;AACD;;AAHuD,QAKhDC,QALgD,GAKnCH,UAAU,CAACI,KALwB,CAKhDD,QALgD;AAAA,QAMhDE,IANgD,GAMvCJ,IANuC,CAMhDI,IANgD;AAOxD,QAAMC,MAAM,GAAGN,UAAU,CAACI,KAAX,CAAiBD,QAAjB,CAA0BI,SAA1B,CAAoCF,IAAI,CAACG,GAAzC,CAAf;;AAEA,QAAI,CAACf,SAAS,CAACgB,WAAV,CAAsBH,MAAtB,CAAL,EAAoC;AAClC,aAAOJ,SAAP;AACD;;AAED,QAAMQ,GAAG,GAAGP,QAAQ,CAACI,SAAT,CAAmBD,MAAM,CAACE,GAA1B,CAAZ;AACA,QAAMG,KAAK,GAAGjB,QAAQ,CAACkB,UAAT,CAAoBF,GAApB,KAA4BP,QAAQ,CAACI,SAAT,CAAmBG,GAAG,CAACF,GAAvB,CAA1C;AACA,QAAMK,SAAS,GAAGrB,KAAK,CAACsB,OAAN,CAAcH,KAAd,KAAwB,CAAC,CAACA,KAAK,CAACV,IAAN,CAAWc,EAAvD;AACA,QAAMC,eAAe,GAAG,CAAAX,IAAI,QAAJ,0BAAAA,IAAI,CAAEJ,IAAN,mDAAYgB,IAAZ,qCAAkBC,KAAlB,MAA4B,CAA5B,IAAiCtB,eAAe,CAACS,IAAD,EAAOL,UAAP,CAAxE;;AACA,QAAIa,SAAS,IAAI,CAACG,eAAlB,EAAmC;AACjC,aAAO;AACLG,QAAAA,CAAC,EAAE,CAAC,CADC;AAELC,QAAAA,CAAC,EAAE;AAFE,OAAP;AAID;;AAED,WAAOlB,SAAP;AACD,GAzBD;AA0BD","sourcesContent":["import { Controller, Block } from '@ali/4ever-cangjie';\nimport { Table, TableCell, TableRow } from '@ali/4ever-plugin-table';\nimport { List } from '@ali/4ever-plugin-list';\nimport { OldBambooPlugin } from '@ali/4ever-plugin-list-group';\n\nconst { isFoldGroupNode } = OldBambooPlugin.utils;\n\nexport default function createGetLeftToolbarOffset(isDisabled?: Function) {\n  return (controller: Controller, data: { node: Block }) => {\n    if (isDisabled && isDisabled()) {\n      return undefined;\n    }\n\n    const { document } = controller.value;\n    const { node } = data;\n    const parent = controller.value.document.getParent(node.key);\n\n    if (!TableCell.isTableCell(parent)) {\n      return undefined;\n    }\n\n    const row = document.getParent(parent.key) as TableRow;\n    const table = TableRow.isTableRow(row) && document.getParent(row.key);\n    const isColumns = Table.isTable(table) && !!table.data.sr;\n    const isFirstLineList = node?.data?.list?.level === 0 && isFoldGroupNode(node, controller);\n    if (isColumns && !isFirstLineList) {\n      return {\n        x: -5,\n        y: 0,\n      };\n    }\n\n    return undefined;\n  }\n}\n"],"file":"createGetLeftToolbarOffset.js"}