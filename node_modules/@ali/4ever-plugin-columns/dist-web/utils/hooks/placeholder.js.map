{"version":3,"sources":["../../../../src/utils/hooks/placeholder.ts"],"names":["Block","Table","TableCell","isEmptyParagraph","placeholder","configs","locale","insertText1","insertText2","text","controller","node","document","value","block","getClosestBlock","key","path","getPath","index","length","when","isBlock","maybeCell","getParent","isTableCell","nodes","row","table","isTable","data","sr"],"mappings":"AAAA,SAAeA,KAAf,QAAwC,oBAAxC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,yBAAjC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAGA,eAAe,SAASC,WAAT,CAAqBC,OAArB,EAA+C;AAC5D,MAAMC,MAAM,GAAG,CAAAD,OAAO,QAAP,YAAAA,OAAO,CAAEC,MAAT,KAAmB,EAAlC;AAD4D,2BAEHA,MAFG,CAEpDC,WAFoD;AAAA,MAEpDA,WAFoD,mCAEtC,YAFsC;AAAA,4BAEHD,MAFG,CAExBE,WAFwB;AAAA,MAExBA,WAFwB,oCAEV,EAFU;AAG5D,SAAO,CACL;AACEC,IAAAA,IAAI,EAAE,cAACC,UAAD,EAAyBC,IAAzB,EAAwC;AAAA,UACpCC,QADoC,GACvBF,UAAU,CAACG,KADY,CACpCD,QADoC;AAE5C,UAAME,KAAK,GAAGF,QAAQ,CAACG,eAAT,CAAyBJ,IAAI,CAACK,GAA9B,CAAd;AACA,UAAMC,IAAI,GAAGH,KAAK,IAAIF,QAAQ,CAACM,OAAT,CAAiBJ,KAAK,CAACE,GAAvB,CAAtB;AACA,UAAMG,KAAK,GAAGF,IAAI,IAAIA,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAA1B;;AACA,UAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,eAAO,EAAP;AACD;;AACD,aAAUZ,WAAV,UAAyBY,KAAK,GAAG,CAAjC,UAAsCX,WAAtC;AACD,KAVH;AAWEa,IAAAA,IAAI,EAAE,cAACX,UAAD,EAAyBI,KAAzB,EAAyC;AAC7C,UAAI,CAACd,KAAK,CAACsB,OAAN,CAAcR,KAAd,CAAL,EAA2B;AACzB,eAAO,KAAP;AACD;;AAH4C,UAIrCF,QAJqC,GAIxBF,UAAU,CAACG,KAJa,CAIrCD,QAJqC;AAK7C,UAAMW,SAAS,GAAGX,QAAQ,CAACY,SAAT,CAAmBV,KAAK,CAACE,GAAzB,CAAlB;;AACA,UAAI,CAACd,SAAS,CAACuB,WAAV,CAAsBF,SAAtB,CAAD,IAAqCA,SAAS,CAACG,KAAV,CAAgBN,MAAhB,KAA2B,CAApE,EAAuE;AACrE,eAAO,KAAP;AACD;;AAED,UAAMO,GAAG,GAAGf,QAAQ,CAACY,SAAT,CAAmBD,SAAS,CAACP,GAA7B,CAAZ;AACA,UAAMY,KAAK,GAAGhB,QAAQ,CAACY,SAAT,CAAmB,CAAAG,GAAG,QAAH,YAAAA,GAAG,CAAEX,GAAL,KAAY,EAA/B,CAAd;;AACA,UAAI,CAACf,KAAK,CAAC4B,OAAN,CAAcD,KAAd,CAAD,IAAyB,CAACA,KAAK,CAACE,IAAN,CAAWC,EAAzC,EAA6C;AAC3C,eAAO,KAAP;AACD;;AACD,aAAO5B,gBAAgB,CAACW,KAAD,CAAvB;AACD;AA3BH,GADK,CAAP;AA+BD","sourcesContent":["import { Node, Block, Controller } from '@ali/4ever-cangjie';\nimport { Table, TableCell } from '@ali/4ever-plugin-table';\nimport { isEmptyParagraph } from '@ali/4ever-utils';\nimport { ColumnsConfigs } from '../types';\n\nexport default function placeholder(configs?: ColumnsConfigs) {\n  const locale = configs?.locale || {};\n  const { insertText1 = 'New Column', insertText2 = '' } = locale;\n  return [\n    {\n      text: (controller: Controller, node: Node) => {\n        const { document } = controller.value;\n        const block = document.getClosestBlock(node.key);\n        const path = block && document.getPath(block.key);\n        const index = path && path[path.length - 2];\n        if (typeof index !== 'number') {\n          return '';\n        }\n        return `${insertText1} ${index + 1} ${insertText2}`;\n      },\n      when: (controller: Controller, block: Node) => {\n        if (!Block.isBlock(block)) {\n          return false;\n        }\n        const { document } = controller.value;\n        const maybeCell = document.getParent(block.key);\n        if (!TableCell.isTableCell(maybeCell) || maybeCell.nodes.length !== 1) {\n          return false;\n        }\n\n        const row = document.getParent(maybeCell.key);\n        const table = document.getParent(row?.key || '');\n        if (!Table.isTable(table) || !table.data.sr) {\n          return false;\n        }\n        return isEmptyParagraph(block);\n      },\n    },\n  ];\n}\n"],"file":"placeholder.js"}