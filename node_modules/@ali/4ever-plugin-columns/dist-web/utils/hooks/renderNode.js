import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Table, TableRow, TableCell } from '@ali/4ever-plugin-table';
import TableView from "../components/Table";
import Column from "../components/Column";
import TopBar from "../components/TopBar";

function isColumnsTable(node) {
  return Table.isTable(node) && node.data.sr;
}

function isColumnsRow(document, key) {
  if (key === void 0) {
    key = '';
  }

  var parent = document.getParent(key);
  return Table.isTable(parent) && parent.data.sr;
}

function isColumnsCell(document, key) {
  var parent = document.getParent(key);
  return isColumnsRow(document, parent == null ? void 0 : parent.key);
}

export default function createRenderNode(configs) {
  var _ref4;

  return _ref4 = {}, _ref4[Table.TYPE] = function (_ref, controller, next) {
    var node = _ref.node,
        children = _ref.children,
        attributes = _ref.attributes;

    if (configs != null && configs.isDisabled && configs.isDisabled()) {
      return next();
    }

    if (isColumnsTable(node)) {
      return /*#__PURE__*/_createElement(TableView, {
        controller: controller,
        configs: configs,
        table: node,
        attributes: attributes,
        TopBar: TopBar
      }, children());
    }

    return next();
  }, _ref4[TableRow.TYPE] = function (_ref2, controller, next) {
    var node = _ref2.node,
        children = _ref2.children;

    if (configs != null && configs.isDisabled && configs.isDisabled()) {
      return next();
    }

    var document = controller.value.document;
    var key = node.key;

    if (isColumnsRow(document, key)) {
      return children();
    }

    return next();
  }, _ref4[TableCell.TYPE] = function (_ref3, controller, next) {
    var node = _ref3.node,
        children = _ref3.children;

    if (configs != null && configs.isDisabled && configs.isDisabled()) {
      return next();
    }

    var document = controller.value.document;
    var key = node.key;

    if (isColumnsCell(document, key)) {
      return /*#__PURE__*/_createElement(Column, {
        controller: controller,
        cell: node,
        configs: configs
      }, children());
    }

    return next();
  }, _ref4;
}
//# sourceMappingURL=renderNode.js.map