{"version":3,"sources":["../../../../src/utils/hooks/renderNode.tsx"],"names":["React","Table","TableRow","TableCell","TableView","Column","TopBar","isColumnsTable","node","isTable","data","sr","isColumnsRow","document","key","parent","getParent","isColumnsCell","createRenderNode","configs","TYPE","controller","next","children","attributes","isDisabled","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller, RenderNodeProps, Document } from '@ali/4ever-cangjie';\nimport { Table, TableRow, TableCell } from '@ali/4ever-plugin-table';\n\nimport TableView from '../components/Table';\nimport Column from '../components/Column';\nimport { ColumnsConfigs } from '../types';\nimport TopBar from '../components/TopBar';\n\nfunction isColumnsTable(node: any) {\n  return Table.isTable(node) && node.data.sr;\n}\n\nfunction isColumnsRow(document: Document, key = '') {\n  const parent = document.getParent(key);\n  return Table.isTable(parent) && parent.data.sr;\n}\n\nfunction isColumnsCell(document: Document, key: string) {\n  const parent = document.getParent(key);\n  return isColumnsRow(document, parent?.key);\n}\n\nexport default function createRenderNode(configs?: ColumnsConfigs) {\n  return {\n    [Table.TYPE]: (\n      { node, children, attributes }: RenderNodeProps,\n      controller: Controller,\n      next: any,\n    ) => {\n      if (configs?.isDisabled && configs.isDisabled()) {\n        return next();\n      }\n      if (isColumnsTable(node)) {\n        return (\n          <TableView\n            controller={controller}\n            configs={configs}\n            table={node as Table}\n            attributes={attributes}\n            TopBar={TopBar}\n          >\n            {children()}\n          </TableView>\n        );\n      }\n      return next();\n    },\n    [TableRow.TYPE]: (\n      { node, children }: RenderNodeProps,\n      controller: Controller,\n      next: any,\n    ) => {\n      if (configs?.isDisabled && configs.isDisabled()) {\n        return next();\n      }\n      const { document } = controller.value;\n      const { key } = node;\n      if (isColumnsRow(document, key)) {\n        return children();\n      }\n      return next();\n    },\n    [TableCell.TYPE]: (\n      { node, children }: RenderNodeProps,\n      controller: Controller,\n      next: any,\n    ) => {\n      if (configs?.isDisabled && configs.isDisabled()) {\n        return next();\n      }\n      const { document } = controller.value;\n      const { key } = node;\n      if (isColumnsCell(document, key)) {\n        return (\n          <Column\n            controller={controller}\n            cell={node as TableCell}\n            configs={configs}\n          >\n            {children()}\n          </Column>\n        );\n      }\n      return next();\n    },\n  };\n}\n"],"file":"renderNode.js"}