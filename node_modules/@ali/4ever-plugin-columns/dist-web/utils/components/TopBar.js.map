{"version":3,"sources":["../../../../src/utils/components/TopBar.tsx"],"names":["React","styled","useZoom","Controller","environment","ToolbarTablePlusNormal","Tooltip","COLUMN_SPACE","insertCol","useIpadActiveBarIndex","IS_IPAD","Wrapper","div","Space","ItemWrapper","emptySpace","Holder","InsertOuterWrapper","isVisible","SvgIcon","svg","IconWrapper","span","Dot","VertBar","height","ICON_SIZE","ICON_COLOR","DotIcon","InsertBar","insertTitle","targetKey","offset","index","ref","useRef","controller","useController","useState","setIsVisible","setHeight","zoom","activeIndex","setActiveIndex","ipadBarVisible","useEffect","current","closest","getBoundingClientRect","barHeight","handleMouseEnter","useCallback","handleMouseLeave","handleClick","run","fontSize","Item","configs","TopBar","items","totalWidth","reduce","a","i","width","fixedSize","length","map","key","locale"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { useZoom, Controller, environment } from '@ali/4ever-cangjie';\nimport { ToolbarTablePlusNormal, Tooltip } from '@ali/we-design';\n\nimport { COLUMN_SPACE } from '../constants';\nimport { insertCol } from '../actions';\nimport { CellItem } from '../utils/ColumnsProvider';\nimport { ColumnsConfigs } from '../types';\nimport { useIpadActiveBarIndex } from '../utils/useIpadActiveIndex';\n\nconst { IS_IPAD } = environment;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  height: 0;\n  width: 100%;\n  left: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  [data-node-selecting] &[data-column-topbar] {\n    display: none;\n  }\n`;\n\nconst Space = styled.div``;\n\nconst ItemWrapper = styled.div<{ emptySpace: boolean }>`\n  width: ${({ emptySpace }) => (emptySpace ? 0 : COLUMN_SPACE)}px;\n  height: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Holder = styled.div`\n  width: 0;\n  height: 0;\n  position: relative;\n  z-index: 99;\n`;\n\nconst InsertOuterWrapper = styled.div<{ isVisible: boolean }>`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  font-size: 20px;\n  line-height: 20px;\n  border-radius: 50%;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.24);\n  box-sizing: border-box;\n  position: relative;\n  transform: ${({ isVisible }) => `scale(${isVisible ? 1 : 0.8})`};\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: transform 250ms, opacity 250ms;\n  color: white;\n  background-color: rgb(45, 132, 250);\n`;\n\nconst SvgIcon = styled.svg`\n  position: absolute;\n  left: 10px;\n  top: 18px;\n`;\n\nconst IconWrapper = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Dot = styled.div`\n  position: absolute;\n  left: -12px;\n  top: -24px;\n  width: 24px;\n  height: 24px;\n`;\n\nconst VertBar = styled.div<{ height: number; isVisible: boolean }>`\n  width: 2px;\n  height: ${({ height }) => `${height}px`};\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  background: #3296fa;\n  position: absolute;\n  transition: opacity 250ms;\n  left: 11px;\n  top: 24px;\n  pointer-events: none;\n`;\n\ninterface ItemProps {\n  // eslint-disable-next-line react/no-unused-prop-types\n  emptySpace: boolean;\n  insertTitle?: string;\n  targetKey: string;\n  offset: 0 | 1;\n  index: number;\n}\n\ninterface IProps {\n  items: CellItem[];\n  configs?: ColumnsConfigs;\n}\n\nconst ICON_SIZE = 3;\nconst ICON_COLOR = 'rgba(23, 26, 29, 0.24)';\nconst DotIcon = () => {\n  return (\n    <SvgIcon\n      width={ICON_SIZE}\n      height={ICON_SIZE}\n      viewBox={`0 0 ${ICON_SIZE} ${ICON_SIZE}`}\n      fill=\"none\"\n    >\n      <circle\n        cx={ICON_SIZE / 2}\n        cy={ICON_SIZE / 2}\n        r={ICON_SIZE / 2}\n        fill={ICON_COLOR}\n      />\n    </SvgIcon>\n  );\n};\n\nfunction InsertBar({ insertTitle, targetKey, offset, index }: ItemProps) {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const controller = Controller.useController();\n  const [isVisible, setIsVisible] = React.useState(false);\n  const [height, setHeight] = React.useState(0);\n  const zoom = useZoom();\n  const [activeIndex, setActiveIndex] = useIpadActiveBarIndex();\n  const ipadBarVisible = activeIndex === index;\n\n  React.useEffect(() => {\n    if (!isVisible && !ipadBarVisible) {\n      return;\n    }\n    const { height: barHeight } =\n      ref.current?.closest('[data-columns]')?.getBoundingClientRect() || {};\n    setHeight((barHeight || 0) / zoom);\n  }, [isVisible, zoom, ipadBarVisible]);\n\n  const handleMouseEnter = React.useCallback(() => {\n    setIsVisible(true);\n\n    // ipad 使用键盘的触控板 hover 时会走这里\n    if (IS_IPAD) {\n      setActiveIndex(index);\n    }\n  }, [index, setActiveIndex]);\n\n  const handleMouseLeave = React.useCallback(() => {\n    setIsVisible(false);\n    if (IS_IPAD && activeIndex !== -1) {\n      setActiveIndex(-1);\n    }\n  }, [activeIndex, setActiveIndex]);\n\n  const handleClick = React.useCallback(() => {\n    if (IS_IPAD) {\n      if (ipadBarVisible) {\n        setActiveIndex(-1);\n      } else {\n        setActiveIndex(index);\n        return;\n      }\n    }\n    controller.run('onAction', insertCol({ targetKey, offset }));\n  }, [controller, targetKey, offset, ipadBarVisible, index, setActiveIndex]);\n\n  return (\n    <>\n      <InsertOuterWrapper\n        ref={ref}\n        onMouseDown={handleClick}\n        isVisible={isVisible || ipadBarVisible}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <Tooltip\n          placement={'top'}\n          title={insertTitle || 'Insert'}\n          disabled={IS_IPAD}\n        >\n          <IconWrapper>\n            <ToolbarTablePlusNormal style={{ fontSize: 20 }} />\n          </IconWrapper>\n        </Tooltip>\n      </InsertOuterWrapper>\n      <VertBar height={height} isVisible={isVisible || ipadBarVisible} />\n    </>\n  );\n}\n\nfunction Item(configs: ItemProps) {\n  return (\n    <ItemWrapper emptySpace={configs.emptySpace}>\n      <Holder>\n        <Dot>\n          <DotIcon />\n          <InsertBar {...configs} />\n        </Dot>\n      </Holder>\n    </ItemWrapper>\n  );\n}\n\nexport default function TopBar({ items, configs }: IProps) {\n  const totalWidth = items.reduce((a, i) => a + i.width, 0);\n  const fixedSize = (items.length - 1) * COLUMN_SPACE;\n  return (\n    <Wrapper data-column-topbar>\n      {items.map(({ key, width }, index) => {\n        return (\n          <React.Fragment key={`${key}_${index}_${items.length}`}>\n            {index === 0 && (\n              <Item\n                emptySpace\n                insertTitle={configs?.locale?.insertCol}\n                targetKey={key}\n                offset={0}\n                index={0}\n              />\n            )}\n            <Space\n              style={{\n                width: `calc((100% - ${fixedSize}px) * ${width / totalWidth})`,\n              }}\n            />\n            <Item\n              emptySpace={index === items.length - 1}\n              insertTitle={configs?.locale?.insertCol}\n              targetKey={key}\n              offset={1}\n              index={index + 1}\n            />\n          </React.Fragment>\n        );\n      })}\n    </Wrapper>\n  );\n}\n"],"file":"TopBar.js"}