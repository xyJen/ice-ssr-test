{"version":3,"sources":["../../../../src/utils/components/Table.tsx"],"names":["React","styled","Commands","environment","Table","TableRow","correctWidths","moveWidths","ColumnsProvider","useWidth","COLUMN_SPACE","CURSOR_SIZE","cleanUpColumns","IpadActiveBarProvider","IS_MOBILE","IS_IPAD","IS_PC_OR_IPAD","Wrapper","div","writeToData","items","controller","document","value","table","getClosest","key","isTable","command","setNodeByKey","data","colsWidth","map","i","width","isFocused","selection","focusKey","focus","hasNode","TableView","TopBar","configs","onDragChange","children","attributes","ref","useRef","parentRect","isDragging","useReducer","s","forceRender","useState","alignKey","setAlignKey","activeIndex","setActiveIndex","stateCellsRef","refWidth","propsCells","useMemo","row","nodes","isTableRow","reduce","ws","cell","index","push","isHover","setIsHover","hasFocus","handleDraggingChange","useCallback","dragging","current","getBoundingClientRect","moveToFocus","blur","useEffect","length","run","totalWidth","handleDragging","cellKey","clientX","offsetX","Math","round","left","rectWidth","newItems","isAligned","cells","providerConfigs","renderTopBar","Boolean","readOnly","handleMouseEnter","handleMousseLeave"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Controller, Commands, environment } from '@ali/4ever-cangjie';\nimport { Table, TableRow } from '@ali/4ever-plugin-table';\nimport {\n  correctWidths,\n  moveWidths,\n  CellItem,\n  ColumnsProvider,\n} from '../utils/ColumnsProvider';\nimport useWidth from '../utils/useWidth';\nimport { COLUMN_SPACE, CURSOR_SIZE } from '../constants';\nimport { cleanUpColumns } from '../actions';\nimport { OnDragChange, ColumnsConfigs } from '../types';\nimport { IpadActiveBarProvider } from '../utils/useIpadActiveIndex';\n\nconst { IS_MOBILE, IS_IPAD } = environment;\nconst IS_PC_OR_IPAD = !IS_MOBILE || IS_IPAD;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n  flex-direction: row;\n  position: relative;\n  touch-action: pan-y pinch-zoom;\n  ${IS_MOBILE && !IS_IPAD &&\n    `\n      @media (max-width: 500px) {\n        flex-direction: column;\n      }\n    `}\n`;\n\ninterface IProps {\n  table: Table;\n  onDragChange?: OnDragChange;\n  controller: Controller;\n  configs?: ColumnsConfigs;\n  TopBar?: React.ComponentType<any>;\n  attributes?: Record<string, any>;\n}\n\nfunction writeToData(items: CellItem[], controller: Controller) {\n  const { document } = controller.value;\n  const table = document.getClosest(\n    items[0].key,\n    Table.isTable,\n  ) as Table | null;\n  if (!table) {\n    return;\n  }\n  controller.command(Commands.setNodeByKey, table.key, {\n    data: {\n      ...table.data,\n      colsWidth: items.map((i) => i.width),\n    },\n  });\n}\n\nconst isFocused = (controller: Controller, table: Table) => {\n  const { selection } = controller.value;\n  const { key: focusKey } = selection.focus;\n  return focusKey === table.key || table.hasNode(focusKey);\n};\n\nexport default function TableView({\n  table,\n  controller,\n  TopBar,\n  configs,\n  onDragChange,\n  children,\n  attributes,\n}: React.PropsWithChildren<IProps>) {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const parentRect = React.useRef<DOMRect | undefined>();\n  const isDragging = React.useRef<boolean | undefined>();\n  const [, forceRender] = React.useReducer((s: number) => s + 1, 0);\n  const [alignKey, setAlignKey] = React.useState('');\n  /**\n   * iPad 交互\n   * 1. 分栏中间的点 常显\n   * 2. 分栏中间的插入按钮和拖拽杆，点击后一起显示\n   */\n  const [activeIndex, setActiveIndex] = React.useState(-1);\n  const stateCellsRef = React.useRef<CellItem[] | undefined>();\n  const refWidth = useWidth(ref);\n  const propsCells = React.useMemo(() => {\n    const colsWidth = table.data.colsWidth || [];\n    const row = table.nodes[0];\n    if (!TableRow.isTableRow(row)) {\n      return [];\n    }\n    return row.nodes.reduce<CellItem[]>((ws, cell, index) => {\n      const width = colsWidth[index] || 100;\n      ws.push({ key: cell.key, width });\n      return ws;\n    }, []);\n  }, [table, refWidth]);\n  const [isHover, setIsHover] = React.useState(false);\n\n  const hasFocus = isFocused(controller, table);\n\n  const handleDraggingChange = React.useCallback(\n    (dragging: boolean) => {\n      isDragging.current = dragging;\n      onDragChange && onDragChange(dragging, controller);\n      if (dragging) {\n        parentRect.current = ref.current?.getBoundingClientRect();\n        controller.command(Commands.moveToFocus).command(Commands.blur);\n      } else if (stateCellsRef.current) {\n        writeToData(stateCellsRef.current, controller);\n        controller.command(Commands.focus);\n      }\n      setAlignKey('');\n      forceRender();\n    },\n    [controller, onDragChange],\n  );\n\n  React.useEffect(() => {\n    const row = table.nodes[0];\n    if (!TableRow.isTableRow(row)) {\n      return;\n    }\n    if (row && row.nodes.length <= 0) {\n      controller.run('onAction', cleanUpColumns());\n    }\n  }, [controller, table]);\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    parentRect.current = ref.current?.getBoundingClientRect();\n    const totalWidth =\n      parentRect.current.width - (propsCells.length - 1) * COLUMN_SPACE;\n    stateCellsRef.current = correctWidths(propsCells, totalWidth);\n    forceRender();\n  }, [propsCells]);\n\n  const handleDragging = React.useCallback(\n    (cellKey: string, clientX: number) => {\n      if (!parentRect.current || !stateCellsRef.current) {\n        return;\n      }\n      const offsetX = Math.round(\n        clientX - parentRect.current.left - CURSOR_SIZE,\n      );\n      const items = stateCellsRef.current;\n      const totalWidth =\n        parentRect.current.width - (items.length - 1) * COLUMN_SPACE;\n      const { items: newItems, isAligned } = moveWidths({\n        offsetX,\n        key: cellKey,\n        items,\n        totalWidth,\n        rectWidth: parentRect.current.width,\n      });\n      stateCellsRef.current = newItems;\n      setAlignKey(isAligned ? cellKey : '');\n      forceRender();\n    },\n    [],\n  );\n  const dragging = isDragging.current || false;\n  const cells = dragging ? stateCellsRef.current : propsCells;\n\n  const providerConfigs = React.useMemo(() => {\n    return {\n      cells: cells!,\n      alignKey,\n      isDragging: dragging,\n      handleDragging,\n      handleDraggingChange,\n    };\n  }, [cells, handleDragging, handleDraggingChange, dragging, alignKey]);\n\n  const renderTopBar = Boolean(\n    (isHover || hasFocus || IS_IPAD) && !controller.readOnly && IS_PC_OR_IPAD && !dragging,\n  );\n\n  const handleMouseEnter = React.useCallback(() => {\n    setIsHover(true);\n  }, [setIsHover]);\n\n  const handleMousseLeave = React.useCallback(() => {\n    setIsHover(false);\n  }, [setIsHover]);\n\n  if (!cells?.length) {\n    return null;\n  }\n\n  return (\n    <Wrapper\n      {...attributes}\n      data-columns\n      data-columns-key={table.key}\n      data-cangjie-key={table.key}\n      ref={ref}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMousseLeave}\n    >\n      <IpadActiveBarProvider value={[activeIndex, setActiveIndex]}>\n        {renderTopBar && !!TopBar && <TopBar items={cells} configs={configs} />}\n        <ColumnsProvider value={providerConfigs}>{children}</ColumnsProvider>\n      </IpadActiveBarProvider>\n    </Wrapper>\n  );\n}\n"],"file":"Table.js"}