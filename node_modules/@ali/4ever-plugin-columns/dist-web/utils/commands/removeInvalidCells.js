import { Commands } from '@ali/4ever-cangjie';
import { Table, TableCell } from '@ali/4ever-plugin-table';
export default function removeInvalidCells(controller) {
  var document = controller.value.document;
  var aloneTable = document.nodes.find( // try to find invalid cells (row.nodes.some)
  function (n) {
    var _n$nodes$, _n$nodes$$nodes;

    return Table.isTable(n) && n.data.sr && ((_n$nodes$ = n.nodes[0]) == null ? void 0 : (_n$nodes$$nodes = _n$nodes$.nodes) == null ? void 0 : _n$nodes$$nodes.some(function (c) {
      return !TableCell.isTableCell(c);
    }));
  });

  if (!aloneTable) {
    return controller;
  }

  var row = aloneTable.nodes[0];
  var keys = row.nodes.reduce(function (arr, node) {
    if (!TableCell.isTableCell(node)) {
      arr.push(node.key);
    }

    return arr;
  }, []);
  controller.withoutNormalizing(function () {
    keys.forEach(function (k) {
      controller.command(Commands.removeNodeByKey, k);
    });
  });
  return removeInvalidCells(controller);
}
//# sourceMappingURL=removeInvalidCells.js.map