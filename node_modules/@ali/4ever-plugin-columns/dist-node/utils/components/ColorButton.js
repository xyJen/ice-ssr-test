"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _weDesign = require("@ali/we-design");

var _weUtil = require("@ali/we-util");

var _everCangjie = require("@ali/4ever-cangjie");

var _weToolbar = require("@ali/we-toolbar");

var _weIcon = require("@ali/we-icon");

var _actions = require("../actions");

const _createElement = /*#__PURE__*/_react.default.createElement;
const DEFAULTS = {
  color: '',
  border: '',
  bgcolor: ''
};

const PaddingHolder = /*#__PURE__*/_styledComponents.default.div(["display:", ";opacity:", ";flex-direction:row;padding:0;position:absolute;z-index:200;top:3px;right:3px;"], props => props.showInnerToolbar ? 'flex' : 'none', props => props.visibile ? '1' : '0');

const Wrapper = /*#__PURE__*/_styledComponents.default.div(["padding:", ";border-radius:4px;transition:background-color 250ms;background-color:", ";"], ({
  bgcolor
}) => bgcolor === 'white' ? '0' : '1px', ({
  bgcolor
}) => bgcolor);

const ToolbarWrapper = /*#__PURE__*/_styledComponents.default.div(["cursor:pointer;border-radius:4px;transition:background-color 250ms;background-color:rgba(126,134,142,0.15);&:hover{background-color:rgba(126,134,142,0.12);}& div .icon-button{cursor:pointer;}"]);

const ColorPanelWrapper = /*#__PURE__*/_styledComponents.default.div(["background:white;padding:8px;border-radius:4px;"]);

const blockEvent = event => {
  event.stopPropagation();
  event.preventDefault();
};

const colorToWhite = color => {
  return (color || 'white').replace('transparent', 'white');
};

function NewPanel({
  controller,
  node
}) {
  const {
    color,
    fill: bgcolor,
    border
  } = node.data;

  const handleChange = key => value => {
    const data = {
      [key]: value
    };
    controller.run('onCangjieBlur');
    controller.run('onAction', (0, _actions.setCellData)({
      node,
      data
    }));
  };

  return /*#__PURE__*/_createElement(ColorPanelWrapper, {
    onMouseDown: blockEvent,
    onClick: blockEvent
  }, /*#__PURE__*/_createElement(_weDesign.ColorPanel, {
    color: color,
    defaultColor: DEFAULTS.color,
    onColorClick: handleChange('color'),
    borderColor: border,
    defaultBorderColor: DEFAULTS.border,
    onBorderColorClick: handleChange('border'),
    backgroundColor: bgcolor,
    defaultBackgroundColor: DEFAULTS.bgcolor,
    onBackgroundColorClick: handleChange('fill'),
    enableResetButton: true
  }));
}

var _ref = /*#__PURE__*/_createElement(_weToolbar.IconButton, {
  icon: /*#__PURE__*/_createElement(_weIcon.PaletteNormal, null)
});

const Toolbar = props => {
  const {
    showInnerToolbar,
    bgcolor,
    node
  } = props;

  const [overlayVisible, setOverlayVisible] = _react.default.useState(false);

  const [visible, setVisible] = _react.default.useState(!showInnerToolbar);

  const scrollContent = (0, _everCangjie.useScrollableContent)() || window.document.body; // 加 EmptyContainer 是因为 IconButton 未监听 onMouseEnter 等， trigger="hover" 无法生效

  _react.default.useEffect(() => {
    if (!showInnerToolbar) {
      setOverlayVisible(false);
    }

    setVisible(showInnerToolbar);
  }, [showInnerToolbar]);

  return /*#__PURE__*/_createElement(PaddingHolder, {
    showInnerToolbar: showInnerToolbar,
    visibile: visible
  }, /*#__PURE__*/_createElement(Wrapper, {
    bgcolor: colorToWhite(bgcolor)
  }, /*#__PURE__*/_createElement(ToolbarWrapper, null, /*#__PURE__*/_createElement(_weDesign.Dropdown, {
    trigger: "click",
    overlay: /*#__PURE__*/_createElement(_weUtil.DropdownAnimation, {
      visible: overlayVisible
    }, /*#__PURE__*/_createElement(NewPanel, props)),
    overlayStyle: {
      backgroundColor: 'transparent',
      border: 'none'
    },
    onVisibleChange: vi => {
      setOverlayVisible(vi);
    },
    placement: "topRight",
    visible: overlayVisible,
    getContainer: () => scrollContent
  }, _ref))));
};

var _default = Toolbar;
exports.default = _default;
//# sourceMappingURL=ColorButton.js.map