{"version":3,"sources":["../../../../src/utils/hooks/onAction.ts"],"names":["createOnAction","configs","onAction","action","controller","next","isDisabled","type","payload","ACTION_INERT_COLUMNS","ACTION_INERT_COL","targetKey","offset","rowOffset","keys","isCopy","ACTION_DELETE_COLUMN","ACTION_CLEANUP_COLUMN","ACTION_REMOVE_INVALID_CELLS","ACTION_SET_CELL_DATA","node","data","command","key","dragFragment","dropHolder","dropPosition","fragment","map","b","result","document","value","parentKey","parentNode","getNode","nodes","length","isLeft","isInline"],"mappings":"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","sourcesContent":["import { Action, Controller } from '@ali/4ever-cangjie';\nimport { isEmptyParagraph } from '@ali/4ever-utils';\nimport { TableCell } from '@ali/4ever-plugin-table';\n\nimport {\n  ColumnsConfigs,\n  InsertColumnsParams,\n  InsertColParams,\n  SetCellDataParams,\n  DeleteColumnsParams,\n} from '../types';\n\nimport clearAloneTables from '../commands/clearAloneTables';\nimport mergeColumns from '../commands/mergeColumns';\nimport insertColumns from '../commands/insertColumns';\nimport deleteColumn from '../commands/deleteColumn';\nimport removeInvalidCells from '../commands/removeInvalidCells';\nimport {\n  ACTION_INERT_COLUMNS,\n  ACTION_INERT_COL,\n  ACTION_DELETE_COLUMN,\n  ACTION_CLEANUP_COLUMN,\n  ACTION_SET_CELL_DATA,\n  ACTION_REMOVE_INVALID_CELLS,\n} from '../actions/index';\nimport { isColumnsCell } from '../utils/isColumns';\n\nexport default function createOnAction(configs?: ColumnsConfigs) {\n  return function onAction(action: Action, controller: Controller, next) {\n    if (configs?.isDisabled && configs.isDisabled()) {\n      return next();\n    }\n    const { type, payload } = action;\n    if (type === ACTION_INERT_COLUMNS) {\n      return insertColumns(controller, payload as InsertColumnsParams);\n    }\n    if (type === ACTION_INERT_COL) {\n      const { targetKey, offset } = payload as InsertColParams;\n      return mergeColumns(controller, {\n        targetKey,\n        rowOffset: offset,\n        keys: [],\n        isCopy: false,\n      });\n    }\n    if (type === ACTION_DELETE_COLUMN) {\n      return deleteColumn(controller, payload as DeleteColumnsParams);\n    }\n    if (type === ACTION_CLEANUP_COLUMN) {\n      return clearAloneTables(controller);\n    }\n    if (type === ACTION_REMOVE_INVALID_CELLS) {\n      return removeInvalidCells(controller);\n    }\n    if (type === ACTION_SET_CELL_DATA) {\n      const { node, data } = payload as SetCellDataParams;\n      return controller.command('setColumnsItemData', node.key, data);\n    }\n    if (\n      type === 'DROP_FRAGMENT' &&\n      payload?.dragFragment &&\n      payload?.dropHolder\n    ) {\n      const { dragFragment, dropHolder } = payload;\n      const { type } = dragFragment;\n      const { key: targetKey, dropPosition, isCopy } = dropHolder;\n      const keys = type === 0 ? dragFragment.fragment.map((b) => b.key) : [dragFragment.fragment.key];\n\n      if (dropPosition === 0 || dropPosition === 1) {\n        const result = next();\n\n        // 若分栏的某个栏有且仅有一个段落，当这个段落被拖拽走后删除这个栏\n        const { document } = controller.value;\n        const parentKey = dragFragment.fragment[0]?.parentKey;\n        if (isColumnsCell(document, parentKey)) {\n          const parentNode = document.getNode(parentKey) as TableCell;\n          if (parentNode.nodes.length === 1 && isEmptyParagraph(parentNode.nodes[0])) {\n            deleteColumn(controller, { key: parentNode.key});\n          }\n        }\n\n        clearAloneTables(controller);\n        return result;\n      }\n\n      const isLeft = dropPosition === 2;\n      mergeColumns(controller, {\n        keys,\n        targetKey,\n        rowOffset: isLeft ? 0 : 1,\n        isCopy,\n        isInline: type === 1,\n      });\n      return controller;\n    }\n    return next();\n  };\n}\n"],"file":"onAction.js"}