{"version":3,"sources":["../../../../src/utils/hooks/onKeyDown.ts"],"names":["tryRemoveColumn","controller","closestBlock","selection","document","value","key","focus","maybeTableCell","getParent","table","getClosest","Table","isTable","data","sr","TableCell","isTableCell","nodes","length","run","createOnKeyDown","onKeyDown","event","next","isExpanded","hotkeys","isDeleteBackward","focusKey","getClosestBlock","procceed","Heading","isHeading","text"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,SAASA,eAAT,CAAyBC,UAAzB,EAAiDC,YAAjD,EAAsE;AACpE,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BH,UAAU,CAACI,KAA3C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUH,SAAS,CAACI,KAA1B;AACA,QAAMC,cAAc,GAAGJ,QAAQ,CAACK,SAAT,CAAmBP,YAAY,CAACI,GAAhC,CAAvB;AACA,QAAMI,KAAK,GAAGN,QAAQ,CAACO,UAAT,CAAoBL,GAApB,EAAyBM,uBAAMC,OAA/B,CAAd;;AACA,OACE;AACAH,EAAAA,KAAK,IACLA,KAAK,CAACI,IAAN,CAAWC,EADX,IAEA;AACAC,6BAAUC,WAAV,CAAsBT,cAAtB,CAHA,IAIAA,cAAc,CAACU,KAAf,CAAqBC,MAArB,KAAgC,CANlC,EAOE;AACAlB,IAAAA,UAAU,CAACmB,GAAX,CAAe,UAAf,EAA2B,2BAAa;AAAEd,MAAAA,GAAG,EAAEE,cAAc,CAACF;AAAtB,KAAb,CAA3B;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAEc,SAASe,eAAT,GAA2B;AACxC,SAAO,SAASC,SAAT,CACLC,KADK,EAELtB,UAFK,EAGLuB,IAHK,EAIL;AACA,UAAM;AAAErB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0BH,UAAU,CAACI,KAA3C;;AACA,QAAIF,SAAS,CAACsB,UAAV,IAAwB,CAACC,qBAAQC,gBAAR,CAAyBJ,KAAzB,CAA7B,EAA8D;AAC5D,aAAOC,IAAI,EAAX;AACD;;AAED,UAAM;AAAElB,MAAAA,GAAG,EAAEsB;AAAP,QAAoBzB,SAAS,CAACI,KAApC;AACA,UAAML,YAAY,GAAGE,QAAQ,CAACyB,eAAT,CAAyBD,QAAzB,CAArB;;AACA,QAAI,CAAC1B,YAAL,EAAmB;AACjB,aAAOsB,IAAI,EAAX;AACD;;AAED,QAAIM,QAAQ,GAAG,KAAf,CAZA,CAaA;;AACA,QAAI,iCAAiB5B,YAAjB,CAAJ,EAAoC;AAClC4B,MAAAA,QAAQ,GAAG9B,eAAe,CAACC,UAAD,EAAaC,YAAb,CAA1B;AACD,KAFD,MAEO,IAAI6B,2BAAQC,SAAR,CAAkB9B,YAAlB,KAAmC,CAACA,YAAY,CAAC+B,IAArD,EAA2D;AAChEH,MAAAA,QAAQ,GAAG9B,eAAe,CAACC,UAAD,EAAaC,YAAb,CAA1B;AACD;;AACD,QAAI4B,QAAJ,EAAc;AACZ,aAAO7B,UAAP;AACD;;AAED,WAAOuB,IAAI,EAAX;AACD,GA5BD;AA6BD","sourcesContent":["import * as React from 'react';\nimport { Controller, hotkeys, Block } from '@ali/4ever-cangjie';\nimport { Table, TableCell } from '@ali/4ever-plugin-table';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { deleteColumn } from '../actions';\nimport { isEmptyParagraph } from '@ali/4ever-utils';\n\nfunction tryRemoveColumn(controller: Controller, closestBlock: Block) {\n  const { selection, document } = controller.value;\n  const { key } = selection.focus;\n  const maybeTableCell = document.getParent(closestBlock.key);\n  const table = document.getClosest(key, Table.isTable) as Table | undefined;\n  if (\n    // inside a column\n    table &&\n    table.data.sr &&\n    // only block\n    TableCell.isTableCell(maybeTableCell) &&\n    maybeTableCell.nodes.length === 1\n  ) {\n    controller.run('onAction', deleteColumn({ key: maybeTableCell.key }));\n    return true;\n  }\n  return false;\n}\n\nexport default function createOnKeyDown() {\n  return function onKeyDown(\n    event: React.KeyboardEvent,\n    controller: Controller,\n    next,\n  ) {\n    const { selection, document } = controller.value;\n    if (selection.isExpanded || !hotkeys.isDeleteBackward(event)) {\n      return next();\n    }\n\n    const { key: focusKey } = selection.focus;\n    const closestBlock = document.getClosestBlock(focusKey);\n    if (!closestBlock) {\n      return next();\n    }\n\n    let procceed = false;\n    // 如果在分栏里没有内容，再按下了删除：就删除掉整个分栏\n    if (isEmptyParagraph(closestBlock)) {\n      procceed = tryRemoveColumn(controller, closestBlock);\n    } else if (Heading.isHeading(closestBlock) && !closestBlock.text) {\n      procceed = tryRemoveColumn(controller, closestBlock);\n    }\n    if (procceed) {\n      return controller;\n    }\n\n    return next();\n  };\n}\n"],"file":"onKeyDown.js"}