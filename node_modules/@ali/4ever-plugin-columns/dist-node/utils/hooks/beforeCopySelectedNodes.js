"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everPluginTable = require("@ali/4ever-plugin-table");

const DEFAULT_WIDTH = 650;

function createColumns(cells) {
  const tableRow = _everPluginTable.TableRow.create({
    nodes: cells
  });

  const {
    length: size
  } = cells;
  const colsWidth = new Array(size).fill(Math.round(DEFAULT_WIDTH / size));

  const table = _everPluginTable.Table.create({
    nodes: [tableRow],
    data: {
      sr: true,
      colsWidth
    }
  });

  return table;
}

const beforeCopySelectedNodes = (selectedNodes, controller, next) => {
  const newNodes = [];
  const {
    length
  } = selectedNodes;
  const {
    document
  } = controller.value;
  let prevColumnsRow = null;
  let columnsRowNodes = null;

  for (let i = 0; i < length; i++) {
    if (controller.query('isColumnsChild', selectedNodes[i])) {
      if (!columnsRowNodes) {
        prevColumnsRow = document.getParent(selectedNodes[i].key);
        columnsRowNodes = [selectedNodes[i]];
      } else {
        const curColumnsRow = document.getParent(selectedNodes[i].key);

        if (curColumnsRow?.key === prevColumnsRow?.key) {
          columnsRowNodes.push(selectedNodes[i]);
        } else {
          const columns = createColumns(columnsRowNodes);
          newNodes.push(columns);
          prevColumnsRow = document.getParent(selectedNodes[i].key);
          columnsRowNodes = [selectedNodes[i]];
        }
      }
    } else {
      if (columnsRowNodes) {
        const columns = createColumns(columnsRowNodes);
        newNodes.push(columns);
        prevColumnsRow = null;
        columnsRowNodes = null;
      }

      newNodes.push(selectedNodes[i]);
    }
  }

  if (columnsRowNodes) {
    const columns = createColumns(columnsRowNodes);
    newNodes.push(columns);
    prevColumnsRow = null;
    columnsRowNodes = null;
  }

  return newNodes;
};

var _default = beforeCopySelectedNodes;
exports.default = _default;
//# sourceMappingURL=beforeCopySelectedNodes.js.map