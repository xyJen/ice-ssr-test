"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useWidth;

var React = _interopRequireWildcard(require("react"));

var _resizeObserverPolyfill = _interopRequireDefault(require("resize-observer-polyfill"));

const TIMEOUT = 300;
/**
 * 在 ref 尺寸变动时，调用 updator
 */

function useWidth(ref) {
  const [stateWidth, setWidth] = React.useState(0);
  React.useEffect(() => {
    const node = ref.current;

    if (!node) {
      return undefined;
    }

    let {
      width
    } = node.getBoundingClientRect();
    width = Math.round(width);
    let timer;

    const callback = () => {
      timer && window.clearTimeout(timer); // timeout 出于性能考虑，模拟 debounce 效果
      // 已添加清除逻辑

      timer = window.setTimeout(() => {
        let {
          width: newWidth
        } = node.getBoundingClientRect();
        newWidth = Math.round(newWidth);

        if (newWidth !== width) {
          width = newWidth;
          setWidth(width);
        }
      }, TIMEOUT);
    };

    const observer = new _resizeObserverPolyfill.default(callback);
    observer.observe(node);
    return () => {
      timer && window.clearTimeout(timer);
      observer.unobserve(node);
    };
  }, [setWidth, ref]);
  return stateWidth;
}
//# sourceMappingURL=useWidth.js.map