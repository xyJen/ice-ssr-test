"use strict";

var _cssUtils = require("../cssUtils");

describe('Test parseCSSAbsoluteLength', () => {
  it('Test valid units', () => {
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1px', 'px')).toBe('1px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1pt', 'px')).toBe('1.3333333333333333px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1pc', 'px')).toBe('16px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1in', 'px')).toBe('96px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1Q', 'px')).toBe('0.9448818897637795px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1mm', 'px')).toBe('3.779527559055118px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1cm', 'px')).toBe('37.79527559055118px');
  });
  it('Test incomplete units', () => {
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1.', 'px')).toBe('1px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('.1', 'px')).toBe('0.1px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('.1pt', 'px')).toBe('0.13333333333333333px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('.1px', 'px')).toBe('0.1px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('.1pc', 'px')).toBe('1.6px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1.pt', 'px')).toBe('1.3333333333333333px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1.px', 'px')).toBe('1px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1.pc', 'px')).toBe('16px');
  });
  it('Test invalid units', () => {
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1..', 'px')).toBe('0px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('..1', 'px')).toBe('0px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1..1', 'px')).toBe('0px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('xyz', 'px')).toBe('0px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('', 'px')).toBe('0px');
    expect((0, _cssUtils.parseCSSAbsoluteLength)('1em', 'px')).toBe('0px');
  });
});
//# sourceMappingURL=cssUtils.test.js.map