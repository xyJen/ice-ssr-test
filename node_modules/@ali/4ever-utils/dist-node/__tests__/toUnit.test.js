"use strict";

var _toUnits = require("../utils/toUnits");

describe('Test toUnits', () => {
  it('Test absolute units', () => {
    expect(_toUnits.unitsConverter.toPX('0')).toBe(0);
    expect(_toUnits.unitsConverter.toPX('0px')).toBe(0);
    expect(_toUnits.unitsConverter.toPX('1px')).toBe(1);
    expect(_toUnits.unitsConverter.toPX('1pt')).toBe(1.3333333333333333);
    expect(_toUnits.unitsConverter.toPX('-1pt')).toBe(-1.3333333333333333);
    expect(_toUnits.unitsConverter.toPX('1pc')).toBe(16);
    expect(_toUnits.unitsConverter.toPX('1in')).toBe(96);
    expect(_toUnits.unitsConverter.toPX('1Q')).toBe(0.9448818897637795);
    expect(_toUnits.unitsConverter.toPX('1mm')).toBe(3.779527559055118);
    expect(_toUnits.unitsConverter.toPX('1cm')).toBe(37.79527559055118);
  });
  it('Test units method', () => {
    expect(_toUnits.unitsConverter.toPX('1px')).toBe(1);
    expect(_toUnits.unitsConverter.toPT('0')).toBe(0);
    expect(_toUnits.unitsConverter.toPT('0pt')).toBe(0);
    expect(_toUnits.unitsConverter.toPT('1pt')).toBe(1);
    expect(_toUnits.unitsConverter.toPC('1pc')).toBe(1);
    expect(_toUnits.unitsConverter.toIN('1in')).toBe(1); // 精度丢失，可以容忍

    expect(_toUnits.unitsConverter.toQ('1Q')).toBe(0.9999999999999999);
    expect(_toUnits.unitsConverter.toMM('1mm')).toBe(0.9999999999999999);
    expect(_toUnits.unitsConverter.toCM('1cm')).toBe(0.9999999999999999);
  });
  it('Test relative units', () => {
    expect(_toUnits.unitsConverter.toPX('1')).toBe(14.666666666666668);
    expect(_toUnits.unitsConverter.toPX('0em')).toBe(0);
    expect(_toUnits.unitsConverter.toPX('1em')).toBe(14.666666666666668);
    expect(_toUnits.unitsConverter.toPX('0%')).toBe(0);
    expect(_toUnits.unitsConverter.toPX('100%')).toBe(14.666666666666668);
  });
  it('Test incomplete units', () => {
    expect(_toUnits.unitsConverter.toPX('1.')).toBe(14.666666666666668);
    expect(_toUnits.unitsConverter.toPX('.1')).toBe(1.4666666666666668);
    expect(_toUnits.unitsConverter.toPX('.1pt')).toBe(0.13333333333333333);
    expect(_toUnits.unitsConverter.toPX('.1px')).toBe(0.1);
    expect(_toUnits.unitsConverter.toPX('.1pc')).toBe(1.6);
    expect(_toUnits.unitsConverter.toPX('-.1pc')).toBe(-1.6);
    expect(_toUnits.unitsConverter.toPX('1.pt')).toBe(1.3333333333333333);
    expect(_toUnits.unitsConverter.toPX('1.px')).toBe(1);
    expect(_toUnits.unitsConverter.toPX('1.pc')).toBe(16);
  });
  it('Test invalid units', () => {
    expect(_toUnits.unitsConverter.toPX('1..')).toBe(NaN);
    expect(_toUnits.unitsConverter.toPX('..1')).toBe(NaN);
    expect(_toUnits.unitsConverter.toPX('1..1')).toBe(NaN);
    expect(_toUnits.unitsConverter.toPX('xyz')).toBe(NaN);
    expect(_toUnits.unitsConverter.toPX('')).toBe(NaN);
  });
  it('Test with second params', () => {
    expect(_toUnits.unitsConverter.toPX('1', 'cm')).toBe(37.79527559055118);
    expect(_toUnits.unitsConverter.toPX('1', 'cm')).toBe(37.79527559055118);
    expect(_toUnits.unitsConverter.toPX('100', '%')).toBe(14.666666666666668);
    expect(_toUnits.unitsConverter.toPX('1.', 'pc')).toBe(16);
  });
});
//# sourceMappingURL=toUnit.test.js.map