{"version":3,"sources":["../../../src/__tests__/spacing.test.ts"],"names":["testCases","name","input","Block","create","output","after","before","line","describe","forEach","testCase","it","expect","SpacingUtil","fromBlock","toEqual","toStyle","type","data","spacing","beforeAutospacing","marginTop","defaultBeforeAutospacing","afterLines","marginBottom","defaultLinePitch"],"mappings":";;AAAA;;AACA;;AACA;;AAGA,MAAMA,SAAS,GAAG,CAAC;AACjBC,EAAAA,IAAI,EAAE,WADW;AAEjBC,EAAAA,KAAK,EAAEC,mBAAMC,MAAN,CAAa,WAAb,CAFU;AAGjBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,kBAFF;AAGNC,IAAAA,IAAI,EAAE;AAHA;AAHS,CAAD,EAQf;AACDP,EAAAA,IAAI,EAAE,WADL;AAEDC,EAAAA,KAAK,EAAEC,mBAAMC,MAAN,CAAa,WAAb,CAFN;AAGDC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,kBAFF;AAGNC,IAAAA,IAAI,EAAE;AAHA;AAHP,CARe,EAgBf;AACDP,EAAAA,IAAI,EAAE,WADL;AAEDC,EAAAA,KAAK,EAAEC,mBAAMC,MAAN,CAAa,WAAb,CAFN;AAGDC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,kBAFF;AAGNC,IAAAA,IAAI,EAAE;AAHA;AAHP,CAhBe,EAwBf;AACDP,EAAAA,IAAI,EAAE,WADL;AAEDC,EAAAA,KAAK,EAAEC,mBAAMC,MAAN,CAAa,WAAb,CAFN;AAGDC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,IAAI,EAAE;AAHA;AAHP,CAxBe,CAAlB;AAkCAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BT,EAAAA,SAAS,CAACU,OAAV,CAAmBC,QAAD,IAAc;AAC9B,UAAM;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeG,MAAAA;AAAf,QAA0BM,QAAhC;AACAC,IAAAA,EAAE,CAAE,GAAEX,IAAK,EAAT,EAAY,MAAM;AAClBY,MAAAA,MAAM,CAACC,qBAAYC,SAAZ,CAAsBb,KAAtB,CAAD,CAAN,CAAqCc,OAArC,CAA6CX,MAA7C;AACD,KAFC,CAAF;AAGD,GALD;AAOAO,EAAAA,EAAE,CAAC,YAAD,EAAe,MAAM;AACrBC,IAAAA,MAAM,CAACC,qBAAYG,OAAZ,CAAoBd,mBAAMC,MAAN,CAAa;AACtCc,MAAAA,IAAI,EAAE,WADgC;AAEtCC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AACPC,UAAAA,iBAAiB,EAAE;AADZ;AADL;AAFgC,KAAb,CAApB,CAAD,CAAN,CAOKL,OAPL,CAOa;AACXM,MAAAA,SAAS,EAAEF,eAAQG;AADR,KAPb;AAUD,GAXC,CAAF;AAaAX,EAAAA,EAAE,CAAC,OAAD,EAAU,MAAM;AAChBC,IAAAA,MAAM,CAACC,qBAAYG,OAAZ,CAAoBd,mBAAMC,MAAN,CAAa;AACtCc,MAAAA,IAAI,EAAE,WADgC;AAEtCC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AACPI,UAAAA,UAAU,EAAE;AADL;AADL;AAFgC,KAAb,CAApB,CAAD,CAAN,CAOKR,OAPL,CAOa;AACXS,MAAAA,YAAY,EAAEL,eAAQM;AADX,KAPb;AAUD,GAXC,CAAF;AAYD,CAjCO,CAAR","sourcesContent":["import { Block } from '@ali/4ever-cangjie';\nimport { spacing } from '../theme';\nimport { SpacingUtil } from '../utils/formats/spacing';\n\n\nconst testCases = [{\n  name: 'heading-1',\n  input: Block.create('heading-1'),\n  output: {\n    after: 12,\n    before: 26.666666666666668,\n    line: 0.8529411764705882,\n  },\n}, {\n  name: 'heading-2',\n  input: Block.create('heading-2'),\n  output: {\n    after: 12,\n    before: 21.333333333333332,\n    line: 0.8529411764705882,\n  },\n}, {\n  name: 'heading-3',\n  input: Block.create('heading-3'),\n  output: {\n    after: 12,\n    before: 18.666666666666668,\n    line: 0.8529411764705882,\n  },\n}, {\n  name: 'heading-4',\n  input: Block.create('heading-4'),\n  output: {\n    after: 12,\n    before: 16,\n    line: 0.8529411764705882,\n  },\n}];\n\ndescribe('test spacing', () => {\n  testCases.forEach((testCase) => {\n    const { name, input, output } = testCase;\n    it(`${name}`, () => {\n      expect(SpacingUtil.fromBlock(input)).toEqual(output);\n    });\n  });\n\n  it('autoSpcing', () => {\n    expect(SpacingUtil.toStyle(Block.create({\n      type: 'paragraph',\n      data: {\n        spacing: {\n          beforeAutospacing: true,\n        },\n      },\n    }))).toEqual({\n      marginTop: spacing.defaultBeforeAutospacing,\n    });\n  });\n\n  it('lines', () => {\n    expect(SpacingUtil.toStyle(Block.create({\n      type: 'paragraph',\n      data: {\n        spacing: {\n          afterLines: 1,\n        },\n      },\n    }))).toEqual({\n      marginBottom: spacing.defaultLinePitch,\n    });\n  });\n});\n"],"file":"spacing.test.js"}