{"version":3,"sources":["../../../src/__tests__/jsonml.test.js"],"names":["jsonPath","path","join","__dirname","outputPath1","outputPath2","example1","JSON","parse","fs","readFileSync","toString","example2","describe","it","result","expect","toEqual","maxParagraph","ignore"],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { getDescription, getTexts, getImages } from '../jsonml';\n\nconst jsonPath = path.join(__dirname, 'jsonml');\nconst outputPath1 = path.join(jsonPath, 'image-from-shimo.json');\nconst outputPath2 = path.join(jsonPath, 'table-from-yuque.json');\n\nconst example1 = JSON.parse(fs.readFileSync(outputPath1).toString());\nconst example2 = JSON.parse(fs.readFileSync(outputPath2).toString());\n\ndescribe('Utils.jsonml', () => {\n  it('getTexts转换文件1', () => {\n    const result = getTexts(example1);\n    expect(result).toEqual(['111', '222333444555666', '777']);\n  });\n\n  it('getTexts转换文件2，限制段落三段', () => {\n    const result = getTexts(getDescription(example2, { maxParagraph: 3 }));\n    // 第二段因为非文字段落已被去除\n    expect(result).toEqual(['aaa', '666']);\n  });\n\n  it('getImages转换文件1', () => {\n    const result = getImages(example1);\n    expect(result).toEqual(['https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538923763410&di=6a65e1c2dd84f0077e889eee5b62bf57&imgtype=0&src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F07%2F01%2F146735430694741807.GIF']);\n  });\n\n  it('getImages转换文件2', () => {\n    const result = getImages(example2);\n    expect(result).toEqual([]);\n  });\n\n  it('getTexts转换文件1，限制段落篇幅为2段，排除a', () => {\n    const result = getTexts(getDescription(example1, { maxParagraph: 2, ignore: ['a'] }));\n    expect(result).toEqual(['111', '222666']);\n  });\n\n  it('getDescription转换文件1，排除p与table', () => {\n    const result = getDescription(example1, { ignore: ['p', 'table'] });\n    expect(result).toEqual(['root']);\n  });\n\n  it('getDescription转换文件2，限制段落篇幅为3段，排除p与table', () => {\n    const result = getDescription(example2,\n      { maxParagraph: 3, ignore: ['p', 'table'] });\n    expect(result).toEqual(\n      ['root', ['h1', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'aaa']]]],\n    );\n  });\n});\n"],"file":"jsonml.test.js"}