{"version":3,"sources":["../../../../src/__tests__/keywords/Matcher.test.ts"],"names":["describe","it","matcher","Matcher","lang","items","keywords","data","key","rs0","match","expect","toHaveProperty","rs1","rs2","rs3","subItems","rs","toHaveLength","enableFuzzy"],"mappings":";;;;AAAA;;AAEAA,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BC,EAAAA,EAAE,CAAC,sBAAD,EAAyB,MAAM;AAC/B,UAAMC,OAAO,GAAG,IAAIC,gBAAJ,CAAY;AAC1BC,MAAAA,IAAI,EAAE,OADoB;AAE1BC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,CAAC,OAAD,CADZ;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD;AAFR,OADK,EAOL;AACEF,QAAAA,QAAQ,EAAE,CAAC,UAAD,CADZ;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD;AAFR,OAPK,EAaL;AACEF,QAAAA,QAAQ,EAAE,CAAC,QAAD,CADZ;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD;AAFR,OAbK;AAFmB,KAAZ,CAAhB;AAwBA,UAAMC,GAAG,GAAGP,OAAO,CAACQ,KAAR,CAAc,GAAd,CAAZ;AAEAC,IAAAA,MAAM,CAACF,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeG,cAAf,CAA8B,UAA9B,EAA0C,OAA1C;AACAD,IAAAA,MAAM,CAACF,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeG,cAAf,CAA8B,UAA9B,EAA0C,UAA1C;AACAD,IAAAA,MAAM,CAACF,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeG,cAAf,CAA8B,UAA9B,EAA0C,QAA1C;AAEA,UAAMC,GAAG,GAAGX,OAAO,CAACQ,KAAR,CAAc,OAAd,CAAZ;AAEAC,IAAAA,MAAM,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeD,cAAf,CAA8B,UAA9B,EAA0C,UAA1C;AACAD,IAAAA,MAAM,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeD,cAAf,CAA8B,UAA9B,EAA0C,QAA1C;AAEA,UAAME,GAAG,GAAGZ,OAAO,CAACQ,KAAR,CAAc,GAAd,CAAZ;AAEAC,IAAAA,MAAM,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeF,cAAf,CAA8B,UAA9B,EAA0C,UAA1C;AACAD,IAAAA,MAAM,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeF,cAAf,CAA8B,UAA9B,EAA0C,QAA1C;AACAD,IAAAA,MAAM,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeF,cAAf,CAA8B,UAA9B,EAA0C,OAA1C;AAEA,UAAMG,GAAG,GAAGb,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAZ;AACAC,IAAAA,MAAM,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeH,cAAf,CAA8B,UAA9B,EAA0C,OAA1C;AACAD,IAAAA,MAAM,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeH,cAAf,CAA8B,UAA9B,EAA0C,QAA1C;AACD,GA7CC,CAAF;AA+CAX,EAAAA,EAAE,CAAC,mBAAD,EAAsB,MAAM;AAC5B,UAAMC,OAAO,GAAG,IAAIC,gBAAJ,CAAY;AAC1BC,MAAAA,IAAI,EAAE,OADoB;AAE1BC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,CAAC,SAAD,CADZ;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD,SAFR;AAKEQ,QAAAA,QAAQ,EAAE,CACR;AACEV,UAAAA,QAAQ,EAAE,CAAC,WAAD,CADZ;AAEEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE;AADD;AAFR,SADQ,EAOR;AACEF,UAAAA,QAAQ,EAAE,CAAC,UAAD,CADZ;AAEEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE;AADD;AAFR,SAPQ,EAaR;AACEF,UAAAA,QAAQ,EAAE,CAAC,UAAD,CADZ;AAEEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE;AADD;AAFR,SAbQ,EAmBR;AACEF,UAAAA,QAAQ,EAAE,CAAC,UAAD,CADZ;AAEEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE;AADD;AAFR,SAnBQ;AALZ,OADK,EAiCL;AACED,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD,SADR;AAIEF,QAAAA,QAAQ,EAAE,CAAC,MAAD,CAJZ;AAKEU,QAAAA,QAAQ,EAAE,CACR;AACET,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE;AADD,WADR;AAIEF,UAAAA,QAAQ,EAAE,CAAC,OAAD;AAJZ,SADQ,EAOR;AACEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE;AADD,WADR;AAIEF,UAAAA,QAAQ,EAAE,CAAC,UAAD;AAJZ,SAPQ,EAaR;AACEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE;AADD,WADR;AAIEF,UAAAA,QAAQ,EAAE,CAAC,UAAD;AAJZ,SAbQ;AALZ,OAjCK;AAFmB,KAAZ,CAAhB;AAgEA,UAAMW,EAAE,GAAGf,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAX;AAEAC,IAAAA,MAAM,CAACM,EAAE,CAAC,CAAD,CAAH,CAAN,CAAcL,cAAd,CAA6B,UAA7B,EAAyC,SAAzC;AACAD,IAAAA,MAAM,CAACM,EAAE,CAAC,CAAD,CAAF,EAAOD,QAAR,CAAN,CAAwBE,YAAxB,CAAqC,CAArC;AAEA,UAAML,GAAG,GAAGX,OAAO,CAACQ,KAAR,CAAc,IAAd,CAAZ;AAEAC,IAAAA,MAAM,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeD,cAAf,CAA8B,UAA9B,EAA0C,MAA1C;AACAD,IAAAA,MAAM,CAACE,GAAG,CAAC,CAAD,CAAH,CAAOG,QAAR,CAAN,CAAwBE,YAAxB,CAAqC,CAArC;AACAP,IAAAA,MAAM,CAACE,GAAG,CAAC,CAAD,CAAH,CAAOG,QAAP,CAAiB,CAAjB,CAAD,CAAN,CAA4BJ,cAA5B,CAA2C,UAA3C,EAAuD,UAAvD;AACD,GA3EC,CAAF;AA6EAX,EAAAA,EAAE,CAAC,oBAAD,EAAuB,MAAM;AAC7B,UAAMC,OAAO,GAAG,IAAIC,gBAAJ,CAAY;AAC1BC,MAAAA,IAAI,EAAE,OADoB;AAE1Be,MAAAA,WAAW,EAAE,IAFa;AAG1Bd,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,CAAC,OAAD,CADZ;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD;AAFR,OADK,EAOL;AACEF,QAAAA,QAAQ,EAAE,CAAC,UAAD,CADZ;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD;AAFR,OAPK,EAaL;AACEF,QAAAA,QAAQ,EAAE,CAAC,QAAD,CADZ;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE;AADD;AAFR,OAbK;AAHmB,KAAZ,CAAhB;AAyBA,UAAMC,GAAG,GAAGP,OAAO,CAACQ,KAAR,CAAc,OAAd,CAAZ;AAEAC,IAAAA,MAAM,CAACF,GAAD,CAAN,CAAYS,YAAZ,CAAyB,CAAzB;AACAP,IAAAA,MAAM,CAACF,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeG,cAAf,CAA8B,UAA9B,EAA0C,OAA1C;AAEA,UAAMC,GAAG,GAAGX,OAAO,CAACQ,KAAR,CAAc,QAAd,CAAZ;AACAC,IAAAA,MAAM,CAACE,GAAD,CAAN,CAAYK,YAAZ,CAAyB,CAAzB;AACAP,IAAAA,MAAM,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeD,cAAf,CAA8B,UAA9B,EAA0C,UAA1C;AACAD,IAAAA,MAAM,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAN,CAAeD,cAAf,CAA8B,UAA9B,EAA0C,QAA1C;AACD,GAnCC,CAAF;AAoCD,CAjKO,CAAR","sourcesContent":["import Matcher from '../../matcher/Matcher';\n\ndescribe('Test Matcher', () => {\n  it('Test match substring', () => {\n    const matcher = new Matcher({\n      lang: 'en-US',\n      items: [\n        {\n          keywords: ['Table'],\n          data: {\n            key: 'table',\n          },\n        },\n        {\n          keywords: ['Template'],\n          data: {\n            key: 'template',\n          },\n        },\n        {\n          keywords: ['Temple'],\n          data: {\n            key: 'temple',\n          },\n        },\n      ],\n    });\n\n    const rs0 = matcher.match('t');\n\n    expect(rs0[0]).toHaveProperty('data.key', 'table');\n    expect(rs0[1]).toHaveProperty('data.key', 'template');\n    expect(rs0[2]).toHaveProperty('data.key', 'temple');\n\n    const rs1 = matcher.match('templ');\n\n    expect(rs1[0]).toHaveProperty('data.key', 'template');\n    expect(rs1[1]).toHaveProperty('data.key', 'temple');\n\n    const rs2 = matcher.match('e');\n\n    expect(rs2[0]).toHaveProperty('data.key', 'template');\n    expect(rs2[1]).toHaveProperty('data.key', 'temple');\n    expect(rs2[2]).toHaveProperty('data.key', 'table');\n\n    const rs3 = matcher.match('le');\n    expect(rs3[0]).toHaveProperty('data.key', 'table');\n    expect(rs3[1]).toHaveProperty('data.key', 'temple');\n  });\n\n  it('Test group search', () => {\n    const matcher = new Matcher({\n      lang: 'en-US',\n      items: [\n        {\n          keywords: ['General'],\n          data: {\n            key: 'general',\n          },\n          subItems: [\n            {\n              keywords: ['paragraph'],\n              data: {\n                key: 'paragraph',\n              },\n            },\n            {\n              keywords: ['heading1'],\n              data: {\n                key: 'heading-1',\n              },\n            },\n            {\n              keywords: ['heading2'],\n              data: {\n                key: 'heading-2',\n              },\n            },\n            {\n              keywords: ['heading3'],\n              data: {\n                key: 'heading-3',\n              },\n            },\n          ],\n        },\n        {\n          data: {\n            key: 'data',\n          },\n          keywords: ['data'],\n          subItems: [\n            {\n              data: {\n                key: 'table',\n              },\n              keywords: ['Table'],\n            },\n            {\n              data: {\n                key: 'database',\n              },\n              keywords: ['Database'],\n            },\n            {\n              data: {\n                key: 'timeline',\n              },\n              keywords: ['Timeline'],\n            },\n          ],\n        },\n      ],\n    });\n\n    const rs = matcher.match('en');\n\n    expect(rs[0]).toHaveProperty('data.key', 'general');\n    expect(rs[0]?.subItems).toHaveLength(4);\n\n    const rs1 = matcher.match('me');\n\n    expect(rs1[0]).toHaveProperty('data.key', 'data');\n    expect(rs1[0].subItems).toHaveLength(1);\n    expect(rs1[0].subItems![0]).toHaveProperty('data.key', 'timeline');\n  });\n\n  it('Test fuzzily match', () => {\n    const matcher = new Matcher({\n      lang: 'en-US',\n      enableFuzzy: true,\n      items: [\n        {\n          keywords: ['Table'],\n          data: {\n            key: 'table',\n          },\n        },\n        {\n          keywords: ['Template'],\n          data: {\n            key: 'template',\n          },\n        },\n        {\n          keywords: ['Temple'],\n          data: {\n            key: 'temple',\n          },\n        },\n      ],\n    });\n\n    const rs0 = matcher.match('teble');\n\n    expect(rs0).toHaveLength(1);\n    expect(rs0[0]).toHaveProperty('data.key', 'table');\n\n    const rs1 = matcher.match('templa');\n    expect(rs1).toHaveLength(2);\n    expect(rs1[0]).toHaveProperty('data.key', 'template');\n    expect(rs1[1]).toHaveProperty('data.key', 'temple');\n  });\n});\n"],"file":"Matcher.test.js"}