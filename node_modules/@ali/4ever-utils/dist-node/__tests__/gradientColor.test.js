"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _gradientColor = _interopRequireDefault(require("../utils/formats/gradientColor"));

const {
  GRADIENT_COLOR_STYLE,
  isGradientColor,
  transferGradientColor,
  setGradientStyle,
  notSupportClipText,
  shouldDegradeGradient
} = _gradientColor.default;
const GRADIENT_COLOR = '#F3AA00__#E43E29';
const style = {};
const styleWithTextLineDecoration = {
  WebkitBackgroundClip: 'text',
  textDecorationLine: 'line-through'
};
const styleWithTransparentBgColor = {
  WebkitBackgroundClip: 'text',
  backgroundColor: 'transparent'
};
const styleWithBackgroundColor = {
  WebkitBackgroundClip: 'text',
  backgroundColor: '#BFA'
};
describe('test isGradientColor', () => {
  it(`判断渐变色: ${GRADIENT_COLOR}`, () => {
    expect(isGradientColor(GRADIENT_COLOR)).toBeTruthy();
  });
});
describe('test transferGradientColor', () => {
  it(`格式化渐变色: ${GRADIENT_COLOR}`, () => {
    expect(transferGradientColor(GRADIENT_COLOR)).toEqual(['#F3AA00', '#E43E29']);
  });
});
describe('test setGradientStyle', () => {
  it(`设置渐变色样式: ${GRADIENT_COLOR}`, () => {
    setGradientStyle(GRADIENT_COLOR, style);

    if (notSupportClipText()) {
      expect(style).toEqual({ ...GRADIENT_COLOR_STYLE,
        backgroundImage: 'linear-gradient(90deg, #F3AA00, #E43E29)',
        color: '#F3AA00',
        WebkitBoxDecorationBreak: 'clone'
      });
    } else {
      expect(style).toEqual({ ...GRADIENT_COLOR_STYLE,
        backgroundImage: 'linear-gradient(90deg, #F3AA00, #E43E29)',
        color: '#F3AA00'
      });
    }
  });
});
describe('test shouldDegradeGradient', () => {
  it('存在删除线时，渐变色应退化为第一个颜色', () => {
    expect(shouldDegradeGradient(styleWithTextLineDecoration)).toBeTruthy();
  });
  it('存在非透明背景色时，渐变色应退化为第一个颜色', () => {
    expect(shouldDegradeGradient(styleWithBackgroundColor)).toBeTruthy();
  });
  it('存在透明背景色时，渐变色不退化', () => {
    expect(shouldDegradeGradient(styleWithTransparentBgColor)).toBeFalsy();
  });
});
//# sourceMappingURL=gradientColor.test.js.map