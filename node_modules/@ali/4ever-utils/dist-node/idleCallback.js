"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cancelIdleCallback = exports.requestIdleCallback = void 0;
const isNativeRequestIdleCallback = typeof window !== 'undefined' && typeof window.requestIdleCallback === 'function';

const now = () => {
  return Date.now();
};

class IdleDeadline {
  constructor(initTime) {
    this.initTime = void 0;
    this.initTime = initTime;
  }

  get didTimeout() {
    return false;
  }

  timeRemaining() {
    return Math.max(0, 50 - (now() - this.initTime));
  }

}

const requestIdleCallbackShim = callback => {
  const deadline = new IdleDeadline(now());
  // * Push callback into task queue.
  return window.setTimeout(() => callback(deadline), 0);
};

const cancelIdleCallbackShim = handle => {
  window.clearTimeout(handle);
};

const requestIdleCallback = isNativeRequestIdleCallback ? window.requestIdleCallback : requestIdleCallbackShim;
exports.requestIdleCallback = requestIdleCallback;
const cancelIdleCallback = isNativeRequestIdleCallback ? window.cancelIdleCallback : cancelIdleCallbackShim;
exports.cancelIdleCallback = cancelIdleCallback;
//# sourceMappingURL=idleCallback.js.map