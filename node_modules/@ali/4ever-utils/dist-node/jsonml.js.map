{"version":3,"sources":["../../src/jsonml.ts"],"names":["JsonML2textsAndImages","array","texts","images","currParagraph","isTop","childIsTop","text","src","push","childArray","index","Array","isArray","res","jsonMLGetImages","asl","jsonMLGetTexts","filter","v","jsonMLIsInline","node","tagName","jsonMLNormalizeChildren","attrs","children","normalized","isPrevText","forEach","child","length"],"mappings":"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","sourcesContent":["import type {\n  JsonMLWithAttrs,\n  JsonMLWithoutAttrs,\n  JsonML,\n} from '@ali/4ever-cangjie';\n\nimport {\n  jsonMLIsText,\n  jsonMLGetChildren,\n  jsonMLGetTagName,\n  jsonMLGetAttributes,\n  createTextWithString,\n} from '@ali/4ever-cangjie';\n\nexport type {\n  JsonMLWithAttrs,\n  JsonMLWithoutAttrs,\n  JsonML,\n};\n\n// 扩展插件相关的 jsonML helper 方法\n\nfunction JsonML2textsAndImages(array: JsonML, texts: string[] = [], images: string[] = [],\n  currParagraph = -1, isTop = false) {\n  const childIsTop = array[0] === 'root';\n\n  if (isTop) {\n    currParagraph++;\n  }\n\n  if (array[0] === 'span' && array[1]['data-type'] === 'leaf') {\n    const text = array[2] || '';\n    if (!texts[currParagraph]) {\n      texts[currParagraph] = text as string;\n    } else {\n      texts[currParagraph] += text as string;\n    }\n  } else if (array[0] === 'img') {\n    // @ts-ignore\n    if (array[1] && array[1].src) {\n      // @ts-ignore\n      images.push(array[1].src);\n    }\n  }\n  if (array[0] !== 'table') {\n    const childArray = jsonMLGetChildren(array);\n    for (const index in childArray) {\n      if (Array.isArray(childArray[index])) {\n        const res = JsonML2textsAndImages(childArray[index], texts, images,\n          currParagraph, childIsTop);\n        currParagraph = res.currParagraph;\n      }\n    }\n  }\n  return { texts, images, currParagraph };\n}\n\nexport function jsonMLGetImages(asl: JsonML) {\n  return JsonML2textsAndImages(asl).images;\n}\n\nexport function jsonMLGetTexts(asl: JsonML) {\n  return JsonML2textsAndImages(asl).texts\n    .filter((v) => typeof v === 'string');\n}\n\nexport function jsonMLIsInline(node: JsonML): boolean {\n  const tagName = jsonMLGetTagName(node);\n  return tagName === 'a' || tagName === 'img';\n}\n\nexport function jsonMLNormalizeChildren(node: JsonML): JsonML {\n  const tagName = jsonMLGetTagName(node);\n  const attrs = jsonMLGetAttributes(node);\n  const children = jsonMLGetChildren(node);\n\n  const normalized: JsonML = attrs ? [tagName, attrs] : [tagName];\n  let isPrevText = false;\n  children.forEach((child: JsonML, index: number): void => {\n    // inline 节点前后添加空文本\n    if (!isPrevText && jsonMLIsInline(child)) {\n      normalized.push(createTextWithString('') as JsonML);\n    }\n    normalized.push(child);\n    isPrevText = jsonMLIsText(child);\n    if (index === children.length - 1 && jsonMLIsInline(child)) {\n      normalized.push(createTextWithString('') as JsonML);\n    }\n  });\n\n  return normalized;\n}\n\n// utils API 向前兼容\nexport {\n  /** @deprecated use jsonMLGetImages instead */\n  jsonMLGetImages as getImages,\n  /** @deprecated use jsonMLGetTexts instead */\n  jsonMLGetTexts as getTexts,\n  /** @deprecated use jsonMLIsInline instead */\n  jsonMLIsInline as isJsonMLInline,\n    /** @deprecated use jsonMLNormalizeChildren instead */\n  jsonMLNormalizeChildren as normalizeJsonMLChildren,\n}\n\nexport {\n  /** @deprecated use jsonMLAppend in cangjie instead */\n  jsonMLAppend as append,\n  /** @deprecated use jsonMLAppendAt in cangjie instead */\n  jsonMLAppendAt as appendAt,\n  /** @deprecated use jsonMLGetAttributes in cangjie instead */\n  jsonMLGetAttributes as getAttributes,\n  /** @deprecated use jsonMLGetChildren in cangjie instead */\n  jsonMLGetChildren as getChildren,\n  /** @deprecated use jsonMLGetTagName in cangjie instead */\n  jsonMLGetTagName as getTagName,\n  /** @deprecated use jsonMLGetDescription in cangjie instead */\n  jsonMLGetDescription as getDescription,\n  /** @deprecated use jsonMLGetLastChild in cangjie instead */\n  jsonMLGetLastChild as getLastChild,\n  /** @deprecated use jsonMLGetText in cangjie instead */\n  jsonMLGetText as getText,\n  /** @deprecated use JsonMLHasAttributes in cangjie instead */\n  JsonMLHasAttributes as hasAttributes,\n  /** @deprecated use jsonMLIsEmptyContent in cangjie instead */\n  jsonMLIsEmptyContent as isEmptyContent,\n  /** @deprecated use jsonMLIsText in cangjie instead */\n  jsonMLIsText as isJsonMLText,\n} from '@ali/4ever-cangjie';\n"],"file":"jsonml.js"}