{"version":3,"sources":["../../src/getClosestContainerBlock.ts"],"names":["containerTypeMap","paragraph","page","section","viewModelContainerTypeMap","getClosestContainerBlock","value","node","document","startText","closest","getClosest","key","n","type","getNode","isElement","getClosestContainerBlockFromViewModel","getClosestContainerBlockFromNative","elementNode","selector","nodeType","Node","ELEMENT_NODE","selection","window","getSelection","anchorNode","parentElement"],"mappings":"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","sourcesContent":["import { Value, Element, Document, Node as CangjieNode } from '@ali/4ever-cangjie';\nimport { createDict } from './objectUtils';\n\nconst containerTypeMap = createDict({\n  paragraph: true,\n  'heading-1': true,\n  'heading-2': true,\n  'heading-3': true,\n  'heading-4': true,\n  'heading-5': true,\n  'heading-6': true,\n  'table-cell': true,\n  page: true,\n  section: true,\n});\n\n// viewModel下可以当作容器节点的 data-type\nconst viewModelContainerTypeMap = createDict({\n  ...containerTypeMap,\n  'paragraph-group': true,\n  'hey-group': true,\n  'callout-group': true,\n  'subject-group': true,\n  'heading-1-group': true,\n  'heading-2-group': true,\n  'heading-3-group': true,\n  'heading-4-group': true,\n  'heading-5-group': true,\n  'heading-6-group': true,\n});\n\nexport function getClosestContainerBlock(value: Value, node?: CangjieNode): Element | null {\n  if (!value) return null;\n\n  const { document, startText } = value;\n  if (!node) {\n    if (!startText) {\n      return null;\n    }\n    // @ts-ignore\n    node = startText;\n  }\n\n  const closest = document.getClosest(node.key, (n: CangjieNode) => containerTypeMap[(n as Element).type]);\n\n  // 这个node确实归属这个document\n  if (closest === null && document.getNode(node.key)) {\n    return document;\n  }\n\n  return closest?.isElement() ? closest : null;\n}\n\n/**\n * 基于controller的view来寻找node的最近容器节点\n * @param document\n * @param node\n * @returns\n */\nexport function getClosestContainerBlockFromViewModel(document: Document, node: CangjieNode): Element | null {\n  if (!document) return null;\n\n  const closest = document.getClosest(node.key, (n: CangjieNode) => viewModelContainerTypeMap[(n as Element).type]);\n\n  // 如果找不到node的包裹节点，就返回document这个最外层节点\n  if (closest === null && document.getNode(node.key)) {\n    return document;\n  }\n\n  return closest?.isElement() ? closest : null;\n}\n\nexport function getClosestContainerBlockFromNative(elementNode?: HTMLElement | null, selector?: string): HTMLElement | null | undefined {\n  if (!(elementNode && elementNode.nodeType === Node.ELEMENT_NODE)) {\n    const selection = window.getSelection();\n    const anchorNode = selection?.anchorNode;\n    if (!anchorNode) {\n      return null;\n    }\n\n    // @ts-ignore\n    if (anchorNode.nodeType !== Node.ELEMENT_NODE) {\n      elementNode = anchorNode.parentElement;\n    } else {\n      elementNode = anchorNode as HTMLElement;\n    }\n\n    // @ts-ignore\n    if (elementNode.nodeType !== Node.ELEMENT_NODE) {\n      return null;\n    }\n  }\n\n  if (!selector) {\n    selector = '[data-type=page],[data-type=paragraph],[data-type=heading-1],[data-type=heading-2],[data-type=heading-3],[data-type=heading-4],[data-type=heading-5],[data-type=heading-6],[data-type=table-cell],[data-cangjie-content=true]';\n  }\n\n  return elementNode?.closest(selector);\n}\n"],"file":"getClosestContainerBlock.js"}