{"version":3,"sources":["../../../src/utils/sample.ts"],"names":["sample","fn","options","divisor","threshold","_sample","args","Math","random","apply","Sample","deco","target","propertyKey","descriptor","value","TypeError","String"],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACO,SAASA,MAAT,CAAoCC,EAApC,EAA2CC,OAA3C,EAAsE;AAC3E,QAAM;AAAEF,IAAAA,MAAM,EAAEG;AAAV,MAAsBD,OAA5B;AACA,QAAME,SAAS,GAAG,IAAID,OAAtB;AACA,SAAO,SAASE,OAAT,CAA4B,GAAGC,IAA/B,EAA0C;AAC/C,QAAIC,IAAI,CAACC,MAAL,KAAgBJ,SAApB,EAA+B;AAC7BH,MAAAA,EAAE,CAACQ,KAAH,CAAS,IAAT,EAAeH,IAAf;AACD;AACF,GAJD;AAKD;AAED;AACA;AACA;AACA;;;AACO,SAASI,MAAT,CAAgBR,OAAhB,EAAyD;AAC9D,SAAO,SAASS,IAAT,CACLC,MADK,EAELC,WAFK,EAGLC,UAHK,EAIuB;AAC5B,QAAI,CAACA,UAAD,IAAgB,OAAOA,UAAU,CAACC,KAAlB,KAA4B,UAAhD,EAA6D;AAC3D,YAAM,IAAIC,SAAJ,CAAe,gDAA+CC,MAAM,CAACJ,WAAD,CAAc,oBAAlF,CAAN;AACD;;AACD,WAAO,EACL,GAAGC,UADE;AAELC,MAAAA,KAAK,EAAEf,MAAM,CAACc,UAAU,CAACC,KAAZ,EAAmBb,OAAnB;AAFR,KAAP;AAID,GAZD;AAaD","sourcesContent":["\nexport interface SampleOptions {\n  /**\n   * 采样除数，采样率为 1/sample\n   */\n  sample: number;\n}\n\n/**\n * 装饰函数对齐进行采样\n * @param fn 采样函数\n * @param options 采样配置\n */\nexport function sample<T extends Function>(fn: T, options: SampleOptions): T {\n  const { sample: divisor } = options;\n  const threshold = 1 / divisor;\n  return function _sample(this: any, ...args: any) {\n    if (Math.random() < threshold) {\n      fn.apply(this, args);\n    }\n  } as unknown as T;\n}\n\n/**\n * 函数采样装饰器\n * @param options\n */\nexport function Sample(options: SampleOptions): MethodDecorator {\n  return function deco<F>(\n    target: object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<F>,\n  ): TypedPropertyDescriptor<F> {\n    if (!descriptor || (typeof descriptor.value !== 'function')) {\n      throw new TypeError(`Only methods can be decorated with @Sample. <${String(propertyKey)}> is not a method!`);\n    }\n    return {\n      ...descriptor,\n      value: sample(descriptor.value, options) as any,\n    };\n  };\n}\n"],"file":"sample.js"}