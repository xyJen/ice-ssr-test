"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatchCustomEvent = exports.getCustomEvent = exports.LEGAL_EVENT = void 0;

/**
 * 由于文字中工具栏相关的组件比较多，比如行工具栏，左侧工具栏，部分插件还有自定义工具栏
 * 所以这里抽离出一个公用状态管理的工具，便于组件间共享一些状态
 */
const LEGAL_EVENT = {
  leftToolbarEnable: 'leftToolbarEnable',
  // 浮动工具栏显示到时候需要隐藏掉左侧工具栏按钮, 表格插入行按钮展示的时候也需要将其隐藏掉
  hoverMenuVisible: 'hoverMenuVisible',
  contextMenuVisible: 'contextMenuVisible',
  // 右键菜单显示的时候，浮动工具栏不能显示
  // 加号或斜杠唤起的 快捷插入菜单显示 or 隐藏
  quickInsertMenuVisible: 'quickInsertMenuVisible'
};
exports.LEGAL_EVENT = LEGAL_EVENT;

const getCustomEvent = (eventName, data, bubbles = true) => {
  const customeEvent = new CustomEvent(eventName, {
    bubbles,
    detail: data
  });
  return customeEvent;
};

exports.getCustomEvent = getCustomEvent;

const dispatchCustomEvent = (eventName, data, source, bubbles = true) => {
  const customeEvent = getCustomEvent(eventName, data, bubbles);

  if (source && source?.dispatchEvent) {
    source?.dispatchEvent(customeEvent);
  }

  document.body.dispatchEvent(customeEvent);
};

exports.dispatchCustomEvent = dispatchCustomEvent;
//# sourceMappingURL=customEventUtils.js.map