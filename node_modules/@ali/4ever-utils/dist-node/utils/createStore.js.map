{"version":3,"sources":["../../../src/utils/createStore.ts"],"names":["GLOBAL_MAP","createStore","namespace","getValue","key","mergeValue","mergeData","data"],"mappings":";;;;;;AAAA,MAAMA,UAAqD,GAAG,EAA9D;;AAOO,MAAMC,WAAW,GAAWC,SAAR,IAA6C;AACtE,QAAMC,QAAQ,GAA2BC,GAAxB,IAAoD;AACnE,WAAQ,CAACJ,UAAU,CAACE,SAAD,CAAV,IAAyB,EAA1B,EAA8BE,GAA9B,CAAD,IAAoD,IAA3D;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,CACjBD,GADiB,EAEjBE,SAFiB,KAGd;AACH,UAAMC,IAAI,GAAGP,UAAU,CAACE,SAAD,CAAV,IAAyB,EAAtC;AACAK,IAAAA,IAAI,CAACH,GAAD,CAAJ,GAAY,EAAE,GAAGG,IAAI,CAACH,GAAD,CAAT;AAAgB,SAAGE;AAAnB,KAAZ;AACAN,IAAAA,UAAU,CAACE,SAAD,CAAV,GAAwBK,IAAxB;AACD,GAPD;;AAQA,SAAO;AACLJ,IAAAA,QADK;AAELE,IAAAA;AAFK,GAAP;AAID,CAjBM","sourcesContent":["const GLOBAL_MAP: Record<string, Record<string | any, any>> = {};\n\nexport interface IStore<State> {\n  getValue: <K extends keyof State>(key: K) => State[K] | null;\n  mergeValue: <K extends keyof State>(key: K, mergeData: State[K]) => void;\n}\n\nexport const createStore = <State>(namespace: string): IStore<State> => {\n  const getValue = <K extends keyof State>(key: K): State[K] | null => {\n    return ((GLOBAL_MAP[namespace] || {})[key] as State[K]) || null;\n  };\n\n  const mergeValue = <K extends keyof State>(\n    key: K,\n    mergeData: State[K],\n  ) => {\n    const data = GLOBAL_MAP[namespace] || {};\n    data[key] = { ...data[key], ...mergeData };\n    GLOBAL_MAP[namespace] = data;\n  };\n  return {\n    getValue,\n    mergeValue,\n  };\n};\n"],"file":"createStore.js"}