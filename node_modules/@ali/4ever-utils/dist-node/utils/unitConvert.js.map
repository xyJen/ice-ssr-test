{"version":3,"sources":["../../../src/utils/unitConvert.ts"],"names":["INC_TO_CM","INC_TO_PT","PT_TO_PIX","cm2pix","value","inc2pix","pix2cm","pix2mm","pix2inc"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG,IAAlB;AACA,MAAMC,SAAS,GAAG,EAAlB;AACO,MAAMC,SAAS,GAAG,IAAE,CAApB;;;AAEP,MAAMC,MAAM,GAAGC,KAAK,IAAIA,KAAK,GAAGJ,SAAR,GAAoBC,SAApB,GAAgCC,SAAxD;;AACA,MAAMG,OAAO,GAAGD,KAAK,IAAIA,KAAK,GAAGH,SAAR,GAAoBC,SAA7C;;AACA,MAAMI,MAAM,GAAGF,KAAK,IAAIA,KAAK,GAAGF,SAAR,GAAoBD,SAApB,GAAgCD,SAAxD;;AACA,MAAMO,MAAM,GAAGH,KAAK,IAAIE,MAAM,CAACF,KAAD,CAAN,GAAgB,EAAxC;;AACA,MAAMI,OAAO,GAAGJ,KAAK,IAAIA,KAAK,GAAGF,SAAR,GAAoBD,SAA7C;;eAEe;AAAEE,EAAAA,MAAF;AAAUE,EAAAA,OAAV;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA;AAAnC,C","sourcesContent":["const INC_TO_CM = 2.54;\nconst INC_TO_PT = 72;\nexport const PT_TO_PIX = 4/3;\n\nconst cm2pix = value => value / INC_TO_CM * INC_TO_PT * PT_TO_PIX;\nconst inc2pix = value => value * INC_TO_PT * PT_TO_PIX;\nconst pix2cm = value => value / PT_TO_PIX / INC_TO_PT * INC_TO_CM;\nconst pix2mm = value => pix2cm(value) * 10;\nconst pix2inc = value => value / PT_TO_PIX / INC_TO_PT;\n\nexport default { cm2pix, inc2pix, pix2cm, pix2mm, pix2inc };"],"file":"unitConvert.js"}