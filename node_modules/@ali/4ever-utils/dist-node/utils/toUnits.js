"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNaN = isNaN;
exports.ptToPx = ptToPx;
exports.unitsConverter = void 0;

var _theme = require("../theme");

/**
 * 绝对值单位转换公式：
 * unit a -> unit b = unit a -> 英寸(in) -> unit b
 * 1in = 72pt
 * 1in = 2.54cm
 * 1in = 10 * 2.54mm
 * 1in = 40 * 2.54q
 * 1in = 1in
 * 1in = 6pc
 * 1in = 96px
 */
const INCHE_TO_UNIT = {
  pt: 72,
  cm: 2.54,
  mm: 10 * 2.54,
  q: 40 * 2.54,
  in: 1,
  pc: 6,
  px: 96,
  ptToPx: 72 / 96
};
const ABSOLUTE_UNIT_REG = /^(-?\d*\.?\d*)(pt|cm|mm|q|in|pc|px)$/i;
const PT_PX_REG = /^(-?\d*\.?\d*)(pt|px)$/i;
const RELATIVE_UNIT_REG = /^(-?\d*\.?\d*)(em|%)?$/i;
const NUM_REG = /^\d*\.?\d*$/;

function isNaN(value) {
  if (Number.isNaN) {
    return Number.isNaN(value);
  } // https://eslint.org/docs/rules/no-self-compare


  return typeof value === 'number' && window.isNaN(value);
}

function matchUnit(value, reg) {
  const match = `${value}`.match(reg);

  if (match && match[2]) {
    return match[2];
  }

  return '';
}
/**
 * 绝对值单位之间互转
 * @param value
 * @param unitTo
 */


function absoluteUnitConverter(value, unitTo, unitFrom) {
  const unit = unitFrom || matchUnit(value, ABSOLUTE_UNIT_REG);
  if (!unit) return NaN;
  const num = parseFloat(`${value}`); // 单位换算一步到位

  return num / INCHE_TO_UNIT[unit.toLowerCase()] * INCHE_TO_UNIT[unitTo];
}
/**
 * 将em、%和纯数字转换为绝对值
 * 策略：以默认的字号为基础计算 @word
 * @param value
 * @param unitTo value 要转换成为的单位
 * @param unitFrom 传入 value 的单位
 */


function relativeUnitConverter(value, unitTo, unitFrom) {
  const unit = unitFrom || matchUnit(value, RELATIVE_UNIT_REG); // 数字字符串以外不识别

  if (!unit && !NUM_REG.test(`${value}`)) return NaN;
  let num = parseFloat(`${value}`);

  if (unit === '%') {
    num /= 100;
  } // 先转换为 pt 再转换为指定单位


  return num * _theme.fontSize.DEFAULT / INCHE_TO_UNIT.pt * INCHE_TO_UNIT[unitTo];
}
/**
 * 将支持的任意单位转换为指定绝对单位
 * 支持px等绝对单位，以及em、%、数字等相对单位
 * @param unitTo
 * @see https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#Lengths
 */


function converterFactory(unitTo) {
  return (value, unitFrom = '') => {
    // undefined || '' || 0 || NaN || null
    if (!value) return NaN;
    const absoluteUnit = absoluteUnitConverter(value, unitTo, unitFrom);

    if (ABSOLUTE_UNIT_REG.test(unitFrom) || !isNaN(absoluteUnit)) {
      return absoluteUnit;
    }

    return relativeUnitConverter(value, unitTo, unitFrom);
  };
} // 提前生成转换函数


const converter = {};
Object.keys(INCHE_TO_UNIT).forEach(unit => {
  converter[`to${unit.toUpperCase()}`] = converterFactory(unit);
});
/**
 * 将 pt 转换为 px（pt 组成应为 11pt ）
 * PERF: 运行 10000次 相比 unitsConverter.toPX 从 6ms 下降到 2ms 左右
 */

function ptToPx(value) {
  if (!value) return NaN;
  if (typeof value === 'number') return value;

  if (PT_PX_REG.test(value)) {
    // 确定组成为 xxpt 的情况下使用 parseFloat 提高性能
    return parseFloat(value) / INCHE_TO_UNIT.ptToPx;
  }

  return converter.toPX(value);
}

const unitsConverter = converter;
exports.unitsConverter = unitsConverter;
//# sourceMappingURL=toUnits.js.map