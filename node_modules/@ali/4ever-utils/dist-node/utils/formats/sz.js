"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SzUtil = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

var _heading = require("../../heading/heading");

var _theme = require("../../theme");

var _toUnits = require("../toUnits");

const FONTSIZE_BIGGER = _everCangjie.environment.IS_MOBILE ? 1.06 : 1;

function formatUnit(num) {
  if ((0, _toUnits.isNaN)(num)) return _theme.fontSize.DEFAULT; // 按最小粒度四舍五入取整

  num = _theme.fontSize.PARTICLE * Math.round(num / _theme.fontSize.PARTICLE);
  return Math.min(Math.max(_theme.fontSize.MIN, num), _theme.fontSize.MAX);
}
/**
 * 从mark中获取sz
 * @param mark
 */


function fromMark(mark) {
  if (mark && mark.data && mark.data.value) {
    // 兼容新老数据: 没有szUnit表示是以前的px单位
    const unit = mark.data.szUnit || 'px';

    if (unit === 'pt') {
      // word等转换的pt数据依然需要格式化
      return formatUnit(mark.data.value);
    } else if (unit === 'px' && mark.data.value === 14) {
      // 特殊处理默认字号：稍微放大至11pt(14.667px)
      return _theme.fontSize.DEFAULT;
    }

    return formatUnit(_toUnits.unitsConverter.toPT(mark.data.value + unit));
  }

  return _theme.fontSize.DEFAULT;
}
/**
 * 转换为pt并格式化
 * @param value
 */


function toPt(value, unit) {
  return formatUnit(_toUnits.unitsConverter.toPT(value, unit));
}
/**
 * 转换为px并格式化
 * @param value
 */


function toPx(value, unit) {
  return formatUnit(_toUnits.unitsConverter.toPX(value, unit));
}

function fromHeadingType(type, defaultParagraphSz) {
  const headStyle = _heading.headDefaultStyle[type];
  if (!headStyle) return defaultParagraphSz || _theme.fontSize.DEFAULT; // PERF：确定数据来自 内部预置 时直接使用 parseFloat

  return formatUnit(parseFloat(headStyle['font-size']));
}

const SzUtil = {
  fromHeadingType,
  fromMark,
  toPx,
  toPt,
  FONTSIZE_BIGGER
};
exports.SzUtil = SzUtil;
//# sourceMappingURL=sz.js.map