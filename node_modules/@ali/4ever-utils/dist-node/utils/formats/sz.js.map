{"version":3,"sources":["../../../../src/utils/formats/sz.ts"],"names":["FONTSIZE_BIGGER","environment","IS_MOBILE","formatUnit","num","fsCfg","DEFAULT","PARTICLE","Math","round","min","max","MIN","MAX","fromMark","mark","data","value","unit","szUnit","unitsConverter","toPT","toPt","toPx","toPX","fromHeadingType","type","defaultParagraphSz","headStyle","headDefaultStyle","parseFloat","SzUtil"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAMA,eAAe,GAAGC,yBAAYC,SAAZ,GAAwB,IAAxB,GAA+B,CAAvD;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyC;AACvC,MAAI,oBAAMA,GAAN,CAAJ,EAAgB,OAAOC,gBAAMC,OAAb,CADuB,CAGvC;;AACAF,EAAAA,GAAG,GAAGC,gBAAME,QAAN,GAAiBC,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAGC,gBAAME,QAAvB,CAAvB;AACA,SAAOC,IAAI,CAACE,GAAL,CAASF,IAAI,CAACG,GAAL,CAASN,gBAAMO,GAAf,EAAoBR,GAApB,CAAT,EAAmCC,gBAAMQ,GAAzC,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAyC;AACvC,MAAIA,IAAI,IAAIA,IAAI,CAACC,IAAb,IAAqBD,IAAI,CAACC,IAAL,CAAUC,KAAnC,EAA0C;AACxC;AACA,UAAMC,IAAI,GAAGH,IAAI,CAACC,IAAL,CAAUG,MAAV,IAAoB,IAAjC;;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB;AACjB;AACA,aAAOf,UAAU,CAACY,IAAI,CAACC,IAAL,CAAUC,KAAX,CAAjB;AACD,KAHD,MAGO,IAAIC,IAAI,KAAK,IAAT,IAAiBH,IAAI,CAACC,IAAL,CAAUC,KAAV,KAAoB,EAAzC,EAA6C;AAClD;AACA,aAAOZ,gBAAMC,OAAb;AACD;;AAED,WAAOH,UAAU,CAACiB,wBAAeC,IAAf,CAAoBN,IAAI,CAACC,IAAL,CAAUC,KAAV,GAAkBC,IAAtC,CAAD,CAAjB;AACD;;AACD,SAAOb,gBAAMC,OAAb;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASgB,IAAT,CAAcL,KAAd,EAA+BC,IAA/B,EAA8C;AAC5C,SAAOf,UAAU,CAACiB,wBAAeC,IAAf,CAAoBJ,KAApB,EAA2BC,IAA3B,CAAD,CAAjB;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASK,IAAT,CAAcN,KAAd,EAA+BC,IAA/B,EAA8C;AAC5C,SAAOf,UAAU,CAACiB,wBAAeI,IAAf,CAAoBP,KAApB,EAA2BC,IAA3B,CAAD,CAAjB;AACD;;AAED,SAASO,eAAT,CAAyBC,IAAzB,EAAuCC,kBAAvC,EAAoE;AAClE,QAAMC,SAAS,GAAGC,0BAAiBH,IAAjB,CAAlB;AACA,MAAI,CAACE,SAAL,EAAgB,OAAOD,kBAAkB,IAAItB,gBAAMC,OAAnC,CAFkD,CAGlE;;AACA,SAAOH,UAAU,CAAC2B,UAAU,CAACF,SAAS,CAAC,WAAD,CAAV,CAAX,CAAjB;AACD;;AAEM,MAAMG,MAAM,GAAG;AACpBN,EAAAA,eADoB;AAEpBX,EAAAA,QAFoB;AAGpBS,EAAAA,IAHoB;AAIpBD,EAAAA,IAJoB;AAKpBtB,EAAAA;AALoB,CAAf","sourcesContent":["import { environment, MarkProperties } from '@ali/4ever-cangjie';\nimport { headDefaultStyle } from '../../heading/heading';\nimport { fontSize as fsCfg } from '../../theme';\nimport { unitsConverter, UnitType, isNaN } from '../toUnits';\n\nconst FONTSIZE_BIGGER = environment.IS_MOBILE ? 1.06 : 1;\n\nfunction formatUnit(num: number): number {\n  if (isNaN(num)) return fsCfg.DEFAULT;\n\n  // 按最小粒度四舍五入取整\n  num = fsCfg.PARTICLE * Math.round(num / fsCfg.PARTICLE);\n  return Math.min(Math.max(fsCfg.MIN, num), fsCfg.MAX);\n}\n\n/**\n * 从mark中获取sz\n * @param mark\n */\nfunction fromMark(mark?: MarkProperties) {\n  if (mark && mark.data && mark.data.value) {\n    // 兼容新老数据: 没有szUnit表示是以前的px单位\n    const unit = mark.data.szUnit || 'px';\n    if (unit === 'pt') {\n      // word等转换的pt数据依然需要格式化\n      return formatUnit(mark.data.value);\n    } else if (unit === 'px' && mark.data.value === 14) {\n      // 特殊处理默认字号：稍微放大至11pt(14.667px)\n      return fsCfg.DEFAULT;\n    }\n\n    return formatUnit(unitsConverter.toPT(mark.data.value + unit));\n  }\n  return fsCfg.DEFAULT;\n}\n\n/**\n * 转换为pt并格式化\n * @param value\n */\nfunction toPt(value: UnitType, unit?: string) {\n  return formatUnit(unitsConverter.toPT(value, unit));\n}\n\n/**\n * 转换为px并格式化\n * @param value\n */\nfunction toPx(value: UnitType, unit?: string) {\n  return formatUnit(unitsConverter.toPX(value, unit));\n}\n\nfunction fromHeadingType(type: string, defaultParagraphSz?: number) {\n  const headStyle = headDefaultStyle[type];\n  if (!headStyle) return defaultParagraphSz || fsCfg.DEFAULT;\n  // PERF：确定数据来自 内部预置 时直接使用 parseFloat\n  return formatUnit(parseFloat(headStyle['font-size']));\n}\n\nexport const SzUtil = {\n  fromHeadingType,\n  fromMark,\n  toPx,\n  toPt,\n  FONTSIZE_BIGGER,\n};\n"],"file":"sz.js"}