{"version":3,"sources":["../../../../src/utils/formats/ind.ts"],"names":["ONE_CHAR_PX","charsToPx","char","pxToChars","px","getFirstTextPxSz","node","firstText","getFirstText","fsCfg","DEFAULT","PT_TO_PIX","szMark","marks","find","m","type","data","szUnit","value","test","headStyle","unitsConverter","toPX","fromBlock","inheritedData","nodeData","ind","newInd","firstLine","hanging","originalHanging","firstLineChars","hangingChars","left","leftChars","right","rightChars","firstTextPxSz","IndUtil","IndentTrigger","IndentType","DEFAULT_INDENT"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA,MAAMA,WAAW,GAAG,EAApB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAiC;AAC/B;AACA,SAAOA,IAAI,GAAG,GAAP,GAAaF,WAApB;AACD;;AAED,SAASG,SAAT,CAAmBC,EAAnB,EAA+B;AAC7B,SAAOA,EAAE,GAAGJ,WAAL,GAAmB,GAA1B;AACD;;AAED,SAASK,gBAAT,CAA0BC,IAA1B,EAA+C;AAC7C,QAAMC,SAAS,GAAGD,IAAI,CAACE,YAAL,EAAlB;AACA,MAAI,CAACD,SAAL,EAAgB,OAAOE,gBAAMC,OAAN,GAAgBC,sBAAvB;AAEhB,QAAMC,MAAM,GAAGL,SAAS,CAACM,KAAV,CAAgBC,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,IAAvC,CAAf;;AAEA,MAAIJ,MAAJ,EAAY;AACV,QAAIA,MAAM,CAACK,IAAP,CAAYC,MAAZ,KAAuB,IAA3B,EAAiC;AAC/B,aAAON,MAAM,CAACK,IAAP,CAAYE,KAAnB;AACD;;AACD,WAAOP,MAAM,CAACK,IAAP,CAAYE,KAAZ,GAAoBR,sBAA3B;AACD;;AAED,MAAI,cAAcS,IAAd,CAAmBd,IAAI,CAACU,IAAxB,CAAJ,EAAmC;AACjC,UAAMK,SAAS,GAAG,iCAAoBf,IAAI,CAACU,IAAzB,CAAlB;AACA,WAAOM,wBAAeC,IAAf,CAAoBF,SAAS,CAAC,WAAD,CAA7B,CAAP;AACD;;AAED,SAAOZ,gBAAMC,OAAN,GAAgBC,sBAAvB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASa,SAAT,CAAmBlB,IAAnB,EAAgCmB,aAAhC,EAAqE;AACnE;AACA,QAAMC,QAAQ,GAAGD,aAAa,IAAInB,IAAI,CAACW,IAAvC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAUD,QAAhB;AACA,QAAME,MAAwB,GAAG,EAC/B,GAAGD;AAD4B,GAAjC;AAGA,MAAI,CAACA,GAAL,EAAU,OAAOC,MAAP;AAEV,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,OAAO,EAAEC,eAFL;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,KAPI;AAQJC,IAAAA;AARI,MASFV,GATJ;AAUA,MAAIW,aAAa,GAAG,CAApB;AAEA,MAAIR,OAAO,GAAGC,eAAd;;AAEA,MAAI,CAACD,OAAD,IAAYD,SAAS,GAAG,CAA5B,EAA+B;AAC7B;AACAC,IAAAA,OAAO,GAAG,CAACD,SAAX;AACAD,IAAAA,MAAM,CAACE,OAAP,GAAiBA,OAAjB;AACD;;AAED,MAAIE,cAAc,IAAIC,YAAtB,EAAoC;AAClCK,IAAAA,aAAa,GAAGjC,gBAAgB,CAACC,IAAD,CAAhC;AACD,GA/BkE,CAiCnE;;;AACA,MAAIwB,OAAO,IAAIG,YAAf,EAA6B;AAC3B,WAAOL,MAAM,CAACC,SAAd;AACA,WAAOD,MAAM,CAACI,cAAd;AACD;;AAED,MAAIA,cAAJ,EAAoB;AAClBJ,IAAAA,MAAM,CAACC,SAAP,GAAmBS,aAAa,GAAGN,cAAhB,GAAiC,GAAjC,IAAwCH,SAAxC,IAAqD,CAAxE;AACD;;AAED,MAAII,YAAJ,EAAkB;AAChB;AACAL,IAAAA,MAAM,CAACM,IAAP,GAAc,CAAd;AACAN,IAAAA,MAAM,CAACE,OAAP,GAAiBQ,aAAa,GAAGL,YAAhB,GAA+B,GAA/B,IAAsCH,OAAtC,IAAiD,CAAlE;AACD;;AAED,MAAIK,SAAJ,EAAe;AACb;AACAP,IAAAA,MAAM,CAACM,IAAP,GAAcjC,SAAS,CAACkC,SAAD,CAAT,IAAwBD,IAAxB,IAAgC,CAA9C;AACD;;AACD,MAAIG,UAAJ,EAAgB;AACdT,IAAAA,MAAM,CAACQ,KAAP,GAAenC,SAAS,CAACoC,UAAD,CAAT,IAAyBD,KAAzB,IAAkC,CAAjD;AACD;;AAED,SAAOR,MAAP;AACD;;AAEM,MAAMW,OAAO,GAAG;AACrBf,EAAAA,SADqB;AAErBvB,EAAAA,SAFqB;AAGrBE,EAAAA;AAHqB,CAAhB;;IAMKqC,a;;;WAAAA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;GAAAA,a,6BAAAA,a;;IAKAC,U;;;WAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,0BAAAA,U;;AAML,MAAMC,cAAoI,GAAG;AAClJb,EAAAA,SAAS,EAAE,CADuI;AAElJG,EAAAA,cAAc,EAAE,CAFkI;AAGlJE,EAAAA,IAAI,EAAE,CAH4I;AAIlJC,EAAAA,SAAS,EAAE,CAJuI;AAKlJL,EAAAA,OAAO,EAAE,CALyI;AAMlJG,EAAAA,YAAY,EAAE;AANoI,CAA7I","sourcesContent":["import { Block } from '@ali/4ever-cangjie';\nimport { IndentProperties } from '../modelData';\nimport { fontSize as fsCfg } from '../../theme';\nimport { unitsConverter } from '../toUnits';\nimport { getDefaultHeadStyle } from './common';\nimport { PT_TO_PIX } from '../unitConvert';\n\nconst ONE_CHAR_PX = 14;\n\nfunction charsToPx(char: number) {\n  // 按照 10.5pt/char 转换（导入数据未作单位转换需除以100）\n  return char / 100 * ONE_CHAR_PX;\n}\n\nfunction pxToChars(px: number) {\n  return px / ONE_CHAR_PX * 100;\n}\n\nfunction getFirstTextPxSz(node: Block): number {\n  const firstText = node.getFirstText();\n  if (!firstText) return fsCfg.DEFAULT * PT_TO_PIX;\n\n  const szMark = firstText.marks.find((m) => m.type === 'sz');\n\n  if (szMark) {\n    if (szMark.data.szUnit !== 'pt') {\n      return szMark.data.value;\n    }\n    return szMark.data.value * PT_TO_PIX;\n  }\n\n  if (/heading-\\d/i.test(node.type)) {\n    const headStyle = getDefaultHeadStyle(node.type);\n    return unitsConverter.toPX(headStyle['font-size']);\n  }\n\n  return fsCfg.DEFAULT * PT_TO_PIX;\n}\n\n/**\n * 解析 block indent 数据\n * leftChars/rightChars/firstLineChars/hangingChars 将覆盖对应不带单位的字段，并被转换为 px 单位\n * 会处理悬挂和首行缩进冲突，并根据第一个字的字号动态计算缩进值\n * @param node BLock\n * @param inheritedData 继承数据\n * @returns IndentProperties\n */\nfunction fromBlock(node: Block, inheritedData?: Record<string, any>) {\n  // 优先级：自身 > 继承\n  const nodeData = inheritedData || node.data;\n  const { ind } = nodeData;\n  const newInd: IndentProperties = {\n    ...ind,\n  };\n  if (!ind) return newInd;\n\n  const {\n    firstLine,\n    hanging: originalHanging,\n    firstLineChars,\n    hangingChars,\n    left,\n    leftChars,\n    right,\n    rightChars,\n  } = ind;\n  let firstTextPxSz = 0;\n\n  let hanging = originalHanging;\n\n  if (!hanging && firstLine < 0) {\n    // 兼容编辑器老数据（用 firstLine < 0 表示悬挂缩进）\n    hanging = -firstLine;\n    newInd.hanging = hanging;\n  }\n\n  if (firstLineChars || hangingChars) {\n    firstTextPxSz = getFirstTextPxSz(node);\n  }\n\n  // first 和 hanging 互斥，且 hanging 优先级更高\n  if (hanging || hangingChars) {\n    delete newInd.firstLine;\n    delete newInd.firstLineChars;\n  }\n\n  if (firstLineChars) {\n    newInd.firstLine = firstTextPxSz * firstLineChars / 100 || firstLine || 0;\n  }\n\n  if (hangingChars) {\n    // hangingChars 存在时忽略 left 的值\n    newInd.left = 0;\n    newInd.hanging = firstTextPxSz * hangingChars / 100 || hanging || 0;\n  }\n\n  if (leftChars) {\n    // left 视为兜底\n    newInd.left = charsToPx(leftChars) || left || 0;\n  }\n  if (rightChars) {\n    newInd.right = charsToPx(rightChars) || right || 0;\n  }\n\n  return newInd;\n}\n\nexport const IndUtil = {\n  fromBlock,\n  charsToPx,\n  pxToChars,\n};\n\nexport enum IndentTrigger {\n  keyboard,\n  toolbar,\n}\n\nexport enum IndentType {\n  none='noe',\n  hang='hang',\n  firstLine='firstLine',\n}\n\nexport const DEFAULT_INDENT: Required<Pick<IndentProperties, 'firstLine' | 'firstLineChars' | 'left' | 'leftChars' | 'hanging' | 'hangingChars'>> = {\n  firstLine: 0,\n  firstLineChars: 0,\n  left: 0,\n  leftChars: 0,\n  hanging: 0,\n  hangingChars: 0,\n};\n"],"file":"ind.js"}