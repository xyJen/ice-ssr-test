{"version":3,"sources":["../../src/fuzzyQuery.ts"],"names":["specialChars","getFuzzyQuery","text","RegExp","Array","from","map","c","indexOf","toLowerCase","join","fuzzySearch","items","query","options","fuzzy","filter"],"mappings":";;;;;;;;;;;;AAEA,MAAMA,YAAY,GAAG,yBAArB;AAEA;AACA;AACA;AACA;AACA;;AACO,MAAMC,aAAa,GAAIC,IAAD,IAAkB,IAAIC,MAAJ,CAC7CC,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiBI,GAAjB,CAAsBC,CAAD,IAAOP,YAAY,CAACQ,OAAb,CAAqBD,CAArB,MAA4B,CAAC,CAA7B,GAAkC,KAAIA,CAAE,EAAxC,GAA4CA,CAAC,CAACE,WAAF,EAAxE,EAAyFC,IAAzF,CAA8F,OAA9F,CAD6C,CAAxC;;;;AAIA,eAAeC,WAAf,CAAwDC,KAAxD,EAAoEC,KAApE,EAAmFC,OAAnF,EAA6G;AAClH,QAAMC,KAAK,GAAG,iFAAa,iBAAb,GAAd;AACA,SAAOA,KAAK,CAACC,MAAN,CAAaJ,KAAb,EAAoBC,KAApB,EAA2BC,OAA3B,CAAP;AACD","sourcesContent":["import type { IFilterOptions } from 'fuzzaldrin-plus';\n\nconst specialChars = '\\\\/[]{}()+-*?|,^$.<>:&`';\n\n/**\n * 获取模糊搜索的正则表达式\n * @param text 模糊匹配的目标对象字符串\n * @returns 用于模糊匹配 text 的正则\n */\nexport const getFuzzyQuery = (text: string) => new RegExp(\n  Array.from(text).map((c) => specialChars.indexOf(c) !== -1 ? `\\\\${c}` : c.toLowerCase()).join('(.*?)')\n);\n\nexport async function fuzzySearch<T extends (string | object)>(items: T[], query: string, options?: IFilterOptions) {\n  const fuzzy = await import('fuzzaldrin-plus');\n  return fuzzy.filter(items, query, options);\n}"],"file":"fuzzyQuery.js"}