{"version":3,"sources":["../../src/relativePosition.ts"],"names":["getBoundingRelativeRect","el","refEl","ref","document","body","elRect","getBoundingClientRect","refElRect","left","top","width","height","right","bottom","getRelativeMouseEvent","event","clientX","clientY","relativeX","relativeY","getRelativeTouchEvent","touch"],"mappings":";;;;;;;;;AAAO,SAASA,uBAAT,CAAiCC,EAAjC,EAAkDC,KAAlD,EAA8E;AACnF,QAAMC,GAAG,GAAGD,KAAK,IAAIE,QAAQ,CAACC,IAA9B;AACA,QAAMC,MAAM,GAAGL,EAAE,CAACM,qBAAH,EAAf;AACA,QAAMC,SAAS,GAAGL,GAAG,CAACI,qBAAJ,EAAlB;AACA,QAAME,IAAI,GAAGH,MAAM,CAACG,IAAP,GAAcD,SAAS,CAACC,IAArC;AACA,QAAMC,GAAG,GAAGJ,MAAM,CAACI,GAAP,GAAaF,SAAS,CAACE,GAAnC;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBN,MAA1B;AAEA,SAAO;AACLG,IAAAA,IADK;AAELC,IAAAA,GAFK;AAGLG,IAAAA,KAAK,EAAEJ,IAAI,GAAGE,KAHT;AAILG,IAAAA,MAAM,EAAEJ,GAAG,GAAGE,MAJT;AAKLD,IAAAA,KALK;AAMLC,IAAAA;AANK,GAAP;AAQD;;AAEM,SAASG,qBAAT,CACLC,KADK,EAELd,KAFK,EAGL;AACA,QAAM;AAAEe,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBF,KAA7B;AACA,QAAMR,SAAS,GAAGN,KAAK,CAACK,qBAAN,EAAlB;AACA,QAAMY,SAAS,GAAGF,OAAO,GAAGT,SAAS,CAACC,IAAtC;AACA,QAAMW,SAAS,GAAGF,OAAO,GAAGV,SAAS,CAACE,GAAtC;AAEA,SAAO,EACL,GAAGM,KADE;AAELC,IAAAA,OAFK;AAGLC,IAAAA,OAHK;AAILC,IAAAA,SAJK;AAKLC,IAAAA;AALK,GAAP;AAOD;;AAEM,SAASC,qBAAT,CAA+BC,KAA/B,EAA2DpB,KAA3D,EAA+E;AACpF,QAAM;AAAEe,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBI,KAA7B;AACA,QAAMd,SAAS,GAAGN,KAAK,CAACK,qBAAN,EAAlB;AACA,QAAMY,SAAS,GAAGF,OAAO,GAAGT,SAAS,CAACC,IAAtC;AACA,QAAMW,SAAS,GAAGF,OAAO,GAAGV,SAAS,CAACE,GAAtC;AACA,SAAO;AACLO,IAAAA,OADK;AAELC,IAAAA,OAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA;AAJK,GAAP;AAMD","sourcesContent":["export function getBoundingRelativeRect(el: HTMLElement, refEl?: HTMLElement | null) {\n  const ref = refEl || document.body;\n  const elRect = el.getBoundingClientRect();\n  const refElRect = ref.getBoundingClientRect();\n  const left = elRect.left - refElRect.left;\n  const top = elRect.top - refElRect.top;\n  const { width, height } = elRect;\n\n  return {\n    left,\n    top,\n    right: left + width,\n    bottom: top + height,\n    width,\n    height,\n  };\n}\n\nexport function getRelativeMouseEvent(\n  event: React.MouseEvent | MouseEvent,\n  refEl: HTMLElement,\n) {\n  const { clientX, clientY } = event;\n  const refElRect = refEl.getBoundingClientRect();\n  const relativeX = clientX - refElRect.left;\n  const relativeY = clientY - refElRect.top;\n\n  return {\n    ...event,\n    clientX,\n    clientY,\n    relativeX,\n    relativeY,\n  };\n}\n\nexport function getRelativeTouchEvent(touch: React.Touch | Touch, refEl: HTMLElement) {\n  const { clientX, clientY } = touch;\n  const refElRect = refEl.getBoundingClientRect();\n  const relativeX = clientX - refElRect.left;\n  const relativeY = clientY - refElRect.top;\n  return {\n    clientX,\n    clientY,\n    relativeX,\n    relativeY,\n  };\n}\n\nexport type RelativeEventType = ReturnType<typeof getRelativeMouseEvent> | ReturnType<typeof getRelativeTouchEvent>;\n"],"file":"relativePosition.js"}