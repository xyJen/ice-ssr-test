"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.regenerateUuid = regenerateUuid;

var _everCangjie = require("@ali/4ever-cangjie");

var _uniqueId = require("./utils/uniqueId");

var _lodash = require("lodash");

/**
 * 重新生成 fragment 中的 uuid，并替换用户数据
 * @param fragment 
 * @param generateUuid 
 * @returns 
 */
function regenerateUuid(fragment, generateUuid = _uniqueId.uniqueId) {
  const {
    userData = {}
  } = fragment.data || {};
  const uids = Object.keys(userData);
  let nextData = userData;
  fragment = fragment.mapDescendants(node => {
    if (_everCangjie.Block.isBlock(node) && node.data.uuid) {
      // 重新生成 uuid
      const oldUuid = node.data.uuid;
      const newUuid = node.data.refblockUUID || generateUuid(); // 修改 userData 中的 uuid

      if (oldUuid) {
        uids.forEach(uid => {
          nextData = { ...nextData,
            [uid]: { ...(0, _lodash.omit)(nextData[uid], oldUuid),
              [newUuid]: userData[uid][oldUuid]
            }
          };
        });
      }

      node = node.set('data', { ...node.data,
        uuid: newUuid
      });
    }

    return node;
  });

  if (nextData !== userData) {
    return fragment.set('data', (0, _everCangjie.omitEmptyObj)({ ...fragment.data,
      userData: nextData
    }));
  }

  return fragment;
}
//# sourceMappingURL=regenerateUuid.js.map