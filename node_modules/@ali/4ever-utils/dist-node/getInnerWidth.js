"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getInnerWidth = getInnerWidth;
exports.getInnerFullWidth = getInnerFullWidth;
exports.getInnerWidthFromDOM = getInnerWidthFromDOM;
exports.isUnorderedList = exports.isTaskList = exports.isOrderedList = exports.isList = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

const isList = node => !!node?.data?.list;

exports.isList = isList;

const isOrderedList = node => !!node.data?.list?.isOrdered;

exports.isOrderedList = isOrderedList;

const isTaskList = node => node.data?.list && !node.data.list.isOrdered && node.data.list.isTaskList;

exports.isTaskList = isTaskList;

const isUnorderedList = node => node.data?.list && !isOrderedList(node) && !isTaskList(node);

exports.isUnorderedList = isUnorderedList;

function getInnerWidth(node, root) {
  if (!node) {
    return null;
  }

  let domNode = null; // HACK: 排版模式通过key-0获取dom元素

  try {
    domNode = _everCangjie.domUtils.findDOMNode(node.key, root);
  } catch (e) {// do nothing
  }

  if (!domNode) {
    try {
      domNode = _everCangjie.domUtils.findDOMNode(`${node.key}-0`, root);
    } catch (e) {// do nothing
    }
  }

  if (!domNode) {
    return null;
  }

  return getInnerWidthFromDOM(domNode);
} // 获取内部撑开的宽度，主要处理依赖父元素宽度切默认宽度是 100% 的节点(如图片、表格)


function getInnerFullWidth(node, document, root) {
  if (!node) return null;
  let innerWidth = getInnerWidth(node, root);

  if (isOrderedList(node) || isUnorderedList(node)) {
    const parentNode = document.getParent(node.key);

    if (parentNode) {
      const parentWidth = getInnerWidth(parentNode, root); // 列表节点在无内容时宽度为零，则宽度以它的父节点为准
      // 内容为空时，由于 placeholder 存在，所以 inner width 不为 0，但是未被完全撑开

      if (innerWidth === 0 || (innerWidth || 0) < (parentWidth || 0)) {
        innerWidth = parentWidth;
      }
    }

    return innerWidth;
  }

  if (innerWidth === 0) {
    const parentNode = document.getParent(node.key);
    if (!parentNode) return null;
    innerWidth = getInnerWidth(parentNode, root);
  }

  return innerWidth;
}

function getInnerWidthFromDOM(domNode) {
  // TODO: 排版模式下 document 节点的宽度计算偏大，会导致空列表中插入的图片尺寸偏大溢出
  if (domNode.getAttribute('data-type') === 'page') {
    domNode = domNode.childNodes[0];
  }

  const computedStyle = window.getComputedStyle(domNode, null);
  const offsetWidth = domNode.offsetWidth;
  const paddingLeft = parseInt(computedStyle["padding-left"], 10) || 0;
  const paddingRight = parseInt(computedStyle["padding-right"], 10) || 0;
  const width = offsetWidth - paddingLeft - paddingRight;
  return width;
}
//# sourceMappingURL=getInnerWidth.js.map