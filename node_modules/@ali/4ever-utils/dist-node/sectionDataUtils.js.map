{"version":3,"sources":["../../src/sectionDataUtils.ts"],"names":["defaultSectPr","pgSz","h","w","orient","pgMar","top","bottom","left","right","header","footer","gutter","getSectPrFromJson","data","sectPr","defaultFooterId","defaultHeaderId","footerRefs","defaultRefId","headerRefs","getSectPr","documentData","field","result","getMaxPageWidth","document","sectPrPgSz","sectPrPageWidth","nodes","filter","node","type","reduce","maxWidth","Math","max","getMaxPageWidthSection"],"mappings":"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","sourcesContent":["import { Document } from '@ali/4ever-cangjie';\n/**\n * 纸张的属性\n */\nexport interface SectionPr {\n  type?: string;\n  effectiveType?: string;\n  background?: {\n    color: string;\n  };\n  defaultFooterId?: string;\n  defaultHeaderId?: string;\n  pgMar: {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n    header: number;\n    footer: number;\n    gutter: number;\n  };\n  pgSz: {\n    h: number;\n    w: number;\n    orient: string;\n  };\n}\n\nconst defaultSectPr: SectionPr = {\n  pgSz: {\n    h: 1122.67,\n    w: 793.33,\n    orient: 'portrait',\n  },\n  pgMar: {\n    top: 96,\n    bottom: 96,\n    left: 72,\n    right: 72,\n    header: 56.73,\n    footer: 66.13,\n    gutter: 0,\n  },\n};\n\n/**\n * Pi-1.0 使用\n * @returns\n * @deprecated\n */\nexport const getSectPrFromJson = (data: Record<string, any>): SectionPr => {\n  if (!data.sectPr) return defaultSectPr;\n  const { pgMar } = defaultSectPr;\n  const { pgSz } = defaultSectPr;\n  const { w = pgSz.w, h = pgSz.h, orient = pgSz.orient } =\n    data.sectPr.pgSz || {};\n  const {\n    header = pgMar.header,\n    footer = pgMar.footer,\n    top = pgMar.top,\n    bottom = pgMar.bottom,\n    left = pgMar.left,\n    right = pgMar.right,\n    gutter = pgMar.gutter,\n  } = data.sectPr.pgMar || {};\n\n  let defaultFooterId;\n  let defaultHeaderId;\n  if (data.sectPr.footerRefs) {\n    defaultFooterId = data.sectPr.footerRefs.defaultRefId;\n  }\n  if (data.sectPr.headerRefs) {\n    defaultHeaderId = data.sectPr.headerRefs.defaultRefId;\n  }\n\n  return {\n    defaultHeaderId,\n    defaultFooterId,\n    pgMar: { header, footer, top, bottom, left, right, gutter },\n    pgSz: { w, h, orient },\n  };\n};\n\n// Get sectPr from document.data\nexport const getSectPr = (\n  documentData: Record<string, any>,\n  field = '',\n): Record<string, any> => {\n  const { sectPr } = documentData;\n  if (!sectPr) {\n    if (field && defaultSectPr[field]) {\n      return defaultSectPr[field];\n    }\n    return defaultSectPr;\n  }\n\n  let { pgSz, pgMar } = defaultSectPr;\n  if (sectPr.pgSz) {\n    const { w = pgSz.w, h = pgSz.h, orient = pgSz.orient } = sectPr.pgSz;\n    pgSz = { w, h, orient };\n  }\n  if (sectPr.pgMar) {\n    const {\n      top = pgMar.top,\n      bottom = pgMar.bottom,\n      left = pgMar.left,\n      right = pgMar.right,\n      header = pgMar.header,\n      footer = pgMar.footer,\n      gutter = pgMar.gutter,\n    } = sectPr.pgMar;\n    pgMar = { header, footer, top, bottom, left, right, gutter };\n  }\n\n  const result = {\n    ...sectPr,\n    pgSz,\n    pgMar,\n  };\n  if (field && result[field]) {\n    return result[field];\n  }\n  return result;\n};\n\nexport function getMaxPageWidth(document: Document) {\n  const sectPr = getSectPr(document.data);\n  const sectPrPgSz = sectPr.pgSz;\n  const sectPrPageWidth: number = sectPrPgSz.w;\n  return document.nodes.filter((node) => {\n    return node && node.type === 'sectionBr';\n  }).reduce((maxWidth, node) => {\n    if (node.data.pgSz?.w) {\n      return Math.max(node.data.pgSz.w, maxWidth);\n    }\n    return maxWidth;\n  }, sectPrPageWidth);\n}\n\n// FIX: 重命名 getMaxPageWidthSection 导致 we-word 中无法找到该方法 to @白昱\nexport const getMaxPageWidthSection = getMaxPageWidth;\n"],"file":"sectionDataUtils.js"}