{"version":3,"sources":["../../../src/pluginTmp/actions.ts"],"names":["SET_NODE_UUID","Symbol","setNodeUUID","node","uuid","type","payload","TOGGLE_FOLD","toggleFold"],"mappings":";;;;;;;;;;;;;;;AAeA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAfA;AACO,MAAMA,aAAa,GAAGC,MAAM,CAAC,eAAD,CAA5B;;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAAiCC,IAAjC,EAA+C;AACpD,SAAO;AACLC,IAAAA,IAAI,EAAEL,aADD;AAELM,IAAAA,OAAO,EAAE;AACPH,MAAAA,IADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD;AAED;;;AAYO,MAAMG,WAAW,GAAGN,MAAM,CAAC,aAAD,CAA1B;;;AAEA,SAASO,UAAT,CAAoBF,OAApB,EAAgD;AACrD,SAAO;AACLD,IAAAA,IAAI,EAAEE,WADD;AAELD,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { Block, Node } from '@ali/4ever-cangjie';\n\n/** uuid */\nexport const SET_NODE_UUID = Symbol('SET_NODE_UUID');\nexport function setNodeUUID(node: Node, uuid: string) {\n  return {\n    type: SET_NODE_UUID,\n    payload: {\n      node,\n      uuid,\n    },\n  };\n}\n\n/** newlineguide */\nexport * from './newlineGuide';\n/** blockquote */\nexport * from './blockquote';\n\n\n/** headingGroup */\nexport interface ToggleFoldPayload {\n  node: Block;\n  fold: boolean;\n}\n\nexport const TOGGLE_FOLD = Symbol('TOGGLE_FOLD');\n\nexport function toggleFold(payload: ToggleFoldPayload) {\n  return {\n    type: TOGGLE_FOLD,\n    payload,\n  };\n}\n\n"],"file":"actions.js"}