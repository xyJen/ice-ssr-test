{"version":3,"sources":["../../src/getClosestDom.ts"],"names":["key","cangjieKey","constants","Selector","findDOMNodeByKey","window","document","body","querySelector","isListNode","node","Block","isBlock","data","list","pi","extra","inList","getClosestDom","nodeDom","Inline","isInline","type","closest","leafBlock","blockquote","calloutPr","e"],"mappings":";;;;;;;;;AAAA;;AAEA,MAAM;AAAEA,EAAAA,GAAG,EAAEC;AAAP,IAAsBC,uBAAUC,QAAtC;;AAEO,SAASC,gBAAT,CAA0BJ,GAA1B,EAAuC;AAC5C,SAAOK,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,aAArB,CAAoC,IAAGP,UAAW,KAAID,GAAI,IAA1D,CAAP;AACD;;AAEM,SAASS,UAAT,CAAoBC,IAApB,EAAgC;AACrC,MAAIC,mBAAMC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACvB;AACA,WAAOA,IAAI,CAACG,IAAL,CAAUC,IAAV,IAAkBJ,IAAI,CAACG,IAAL,CAAUE,EAAV,EAAcC,KAAd,EAAqBC,MAA9C;AACD;;AAED,SAAO,KAAP;AACD;;AAEM,SAASC,aAAT,CAAuBR,IAAvB,EAA6D;AAClE,MAAIS,OAAuB,GAAG,IAA9B;AACA,MAAI,CAACT,IAAI,EAAEV,GAAX,EAAgB,OAAOmB,OAAP;;AAChB,MAAI;AACFA,IAAAA,OAAO,GAAGf,gBAAgB,CAACM,IAAI,CAACV,GAAN,CAA1B;AACA,QAAI,CAACmB,OAAL,EAAc,OAAO,IAAP;;AACd,QAAIC,oBAAOC,QAAP,CAAgBX,IAAhB,KAAyBA,IAAI,CAACY,IAAL,KAAc,OAA3C,EAAoD;AAClDH,MAAAA,OAAO,GAAGA,OAAO,CAACX,aAAR,CAAsB,KAAtB,CAAV;AACD,KAFD,MAEO,IAAIG,mBAAMC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AAC9BS,MAAAA,OAAO,GAAGA,OAAO,CAACI,OAAR,CAAiB,IAAGrB,uBAAUC,QAAV,CAAmBqB,SAAU,GAAjD,KAAwDL,OAAlE;AACD;;AACD,QAAIA,OAAO,IAAIT,IAAI,CAACG,IAAL,CAAUY,UAAzB,EAAqC;AACnC;AACAN,MAAAA,OAAO,GAAGA,OAAO,CAACI,OAAR,CAAgB,YAAhB,KAAiCJ,OAA3C;AACD,KAHD,MAGO,IAAIA,OAAO,IAAIV,UAAU,CAACC,IAAD,CAAzB,EAAiC;AACtC;AACAS,MAAAA,OAAO,GAAGA,OAAO,CAACI,OAAR,CAAgB,sBAAhB,KAA2CJ,OAArD;AACD,KAHM,MAGA,IAAIA,OAAO,IAAIT,IAAI,CAACG,IAAL,CAAUa,SAAzB,EAAoC;AACzCP,MAAAA,OAAO,GAAGA,OAAO,CAACI,OAAR,CAAgB,4BAAhB,KAAiDJ,OAA3D;AACD;;AACD,WAAOA,OAAP;AACD,GAlBD,CAkBE,OAAOQ,CAAP,EAAU,CACV;AACD;;AACD,SAAOR,OAAP;AACD","sourcesContent":["import { Block, Inline, Node, constants } from '@ali/4ever-cangjie';\n\nconst { key: cangjieKey } = constants.Selector;\n\nexport function findDOMNodeByKey(key: string) {\n  return window.document.body.querySelector(`[${cangjieKey}=\"${key}\"]`);\n}\n\nexport function isListNode(node: Node) {\n  if (Block.isBlock(node)) {\n    // 排版模式下 data.list 未下放到 nodes.nodes 中\n    return node.data.list || node.data.pi?.extra?.inList;\n  }\n\n  return false;\n}\n\nexport function getClosestDom(node: Block | Inline): Element | null {\n  let nodeDom: Element | null = null;\n  if (!node?.key) return nodeDom;\n  try {\n    nodeDom = findDOMNodeByKey(node.key);\n    if (!nodeDom) return null;\n    if (Inline.isInline(node) && node.type === 'image') {\n      nodeDom = nodeDom.querySelector('img');\n    } else if (Block.isBlock(node)) {\n      nodeDom = nodeDom.closest(`[${constants.Selector.leafBlock}]`) || nodeDom;\n    }\n    if (nodeDom && node.data.blockquote) {\n      // 引用\n      nodeDom = nodeDom.closest('blockquote') || nodeDom;\n    } else if (nodeDom && isListNode(node)) {\n      // 列表和任务\n      nodeDom = nodeDom.closest('[data-testid=\"list\"]') || nodeDom;\n    } else if (nodeDom && node.data.calloutPr) {\n      nodeDom = nodeDom.closest('[data-cangjie-group-block]') || nodeDom;\n    }\n    return nodeDom;\n  } catch (e) {\n    // do nothing\n  }\n  return nodeDom;\n}\n"],"file":"getClosestDom.js"}