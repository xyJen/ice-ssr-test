{"version":3,"sources":["../../src/isParagraph.ts"],"names":["getPointAndBlockOnSelection","controller","rangeSelection","document","value","startPoint","getStart","startBlock","getNode","key","endPoint","getEnd","endBlock","isSelectionAtSameBlock","isAtStartOfParagraph","isAtStartOfNode","isAtEndOfParagraph","isAtEndOfNode"],"mappings":";;;;;;;;;;AASA;AACA;AACA;AACO,SAASA,2BAAT,CAAqCC,UAArC,EAAkF;AACvF,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA+BF,UAAU,CAACG,KAAhD;AACA,QAAMC,UAAU,GAAGH,cAAc,CAACI,QAAf,CAAwBH,QAAxB,CAAnB;AACA,QAAMI,UAAU,GAAGJ,QAAQ,CAACK,OAAT,CAAiBH,UAAU,CAACI,GAA5B,CAAnB;AACA,QAAMC,QAAQ,GAAGR,cAAc,CAACS,MAAf,CAAsBR,QAAtB,CAAjB;AACA,QAAMS,QAAQ,GAAGT,QAAQ,CAACK,OAAT,CAAiBE,QAAQ,CAACD,GAA1B,CAAjB;AACA,SAAO;AACLJ,IAAAA,UADK;AAELE,IAAAA,UAFK;AAGLG,IAAAA,QAHK;AAILE,IAAAA;AAJK,GAAP;AAMD;AAED;AACA;AACA;;;AACO,SAASC,sBAAT,CAAgCZ,UAAhC,EAAiE;AACtE,QAAM;AAAEM,IAAAA,UAAF;AAAcK,IAAAA;AAAd,MAA2BZ,2BAA2B,CAACC,UAAD,CAA5D;AACA,SAAOM,UAAU,KAAKK,QAAtB;AACD;AAED;AACA;AACA;;;AACO,SAASE,oBAAT,CAA8Bb,UAA9B,EAA+D;AACpE,QAAM;AAAEM,IAAAA,UAAF;AAAcF,IAAAA;AAAd,MAA6BL,2BAA2B,CAACC,UAAD,CAA9D;AACA,SAAO,CAAC,EAAEM,UAAU,IAAIF,UAAU,CAACU,eAAX,CAA2BR,UAA3B,CAAhB,CAAR;AACD;AAED;AACA;AACA;;;AACO,SAASS,kBAAT,CAA4Bf,UAA5B,EAA6D;AAClE,QAAM;AAAEW,IAAAA,QAAF;AAAYF,IAAAA;AAAZ,MAAyBV,2BAA2B,CAACC,UAAD,CAA1D;AACA,SAAO,CAAC,EAAEW,QAAQ,IAAIF,QAAQ,CAACO,aAAT,CAAuBL,QAAvB,CAAd,CAAR;AACD","sourcesContent":["import { Controller, EdgePoint, Node, TextPoint } from '@ali/4ever-cangjie';\n\nexport interface IRangeSelectionInfo {\n  startPoint: TextPoint | EdgePoint;\n  endPoint: TextPoint | EdgePoint;\n  startBlock: Node | null;\n  endBlock: Node | null;\n}\n\n/**\n * @description 获取选区开始与结束位置信息\n */\nexport function getPointAndBlockOnSelection(controller: Controller): IRangeSelectionInfo {\n  const { rangeSelection, document } = controller.value;\n  const startPoint = rangeSelection.getStart(document);\n  const startBlock = document.getNode(startPoint.key);\n  const endPoint = rangeSelection.getEnd(document);\n  const endBlock = document.getNode(endPoint.key);\n  return {\n    startPoint,\n    startBlock,\n    endPoint,\n    endBlock,\n  };\n}\n\n/**\n * @description 获取选区是否在同个节点上\n */\nexport function isSelectionAtSameBlock(controller: Controller): boolean {\n  const { startBlock, endBlock } = getPointAndBlockOnSelection(controller);\n  return startBlock === endBlock;\n}\n\n/**\n * @description 获取选区是否在段落开始位置\n */\nexport function isAtStartOfParagraph(controller: Controller): boolean {\n  const { startBlock, startPoint } = getPointAndBlockOnSelection(controller);\n  return !!(startBlock && startPoint.isAtStartOfNode(startBlock));\n}\n\n/**\n * @description 获取选区是否在段落结束位置\n */\nexport function isAtEndOfParagraph(controller: Controller): boolean {\n  const { endBlock, endPoint } = getPointAndBlockOnSelection(controller);\n  return !!(endBlock && endPoint.isAtEndOfNode(endBlock));\n}\n"],"file":"isParagraph.js"}