"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortPlugins = sortPlugins;

function findAllDeps(runAfter) {
  const array = runAfter || [];
  const children = [...array];

  while (children.length) {
    const child = children.pop();
    const deps = child?.runAfter || [];
    deps.forEach(d => {
      if (!array.some(a => a === d)) {
        array.push(d);
        children.push(d);
      }
    });
  }

  return array;
}

function sortPlugins(pluginsFactoryMap) {
  const items = [];
  const factories = [];

  if (!pluginsFactoryMap) {
    return items;
  }

  Object.keys(pluginsFactoryMap).forEach(key => {
    const factory = pluginsFactoryMap[key];

    if (!factory) {
      console.error(`plugin ${key} is undefined`);
      return;
    }

    factories.unshift(factory);
    items.push({
      key,
      factory
    });
  });
  factories.forEach(f => {
    const itemIndex = items.findIndex(({
      factory
    }) => factory === f);
    const item = items[itemIndex];

    if (item?.factory.runAfter?.length) {
      const allDeps = findAllDeps(item.factory.runAfter);
      const depsIndexes = allDeps.map(dep => items.findIndex(i => i.factory === dep));
      const maxIndex = Math.max(...depsIndexes);

      if (maxIndex > itemIndex) {
        items.splice(itemIndex, 1);
        items.splice(maxIndex, 0, item);
      }
    }
  });
  return items;
}
//# sourceMappingURL=sortPlugins.js.map