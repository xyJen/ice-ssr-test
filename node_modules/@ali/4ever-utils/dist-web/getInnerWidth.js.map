{"version":3,"sources":["../../src/getInnerWidth.ts"],"names":["domUtils","isList","node","data","list","isOrderedList","isOrdered","isTaskList","isUnorderedList","getInnerWidth","root","domNode","findDOMNode","key","e","getInnerWidthFromDOM","getInnerFullWidth","document","innerWidth","parentNode","getParent","parentWidth","getAttribute","childNodes","computedStyle","window","getComputedStyle","offsetWidth","paddingLeft","parseInt","paddingRight","width"],"mappings":"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","sourcesContent":["import { Document, Element, domUtils, Block } from '@ali/4ever-cangjie';\n\nexport const isList = (node: Block | null) => !!node?.data?.list;\nexport const isOrderedList = (node: Block) => !!node.data?.list?.isOrdered;\nexport const isTaskList = (node: Block) => node.data?.list && !node.data.list.isOrdered && node.data.list.isTaskList;\nexport const isUnorderedList = (node: Block) => node.data?.list && !isOrderedList(node) && !isTaskList(node);\n\nexport function getInnerWidth(node: Element | null, root?: globalThis.Element): number | null {\n  if (!node) {\n    return null;\n  }\n  let domNode: HTMLElement | null = null;\n\n  // HACK: 排版模式通过key-0获取dom元素\n  try {\n    domNode = domUtils.findDOMNode(node.key, root) as HTMLElement;\n  } catch (e) {\n    // do nothing\n  }\n\n  if (!domNode) {\n    try {\n      domNode = domUtils.findDOMNode(`${node.key}-0`, root) as HTMLElement;\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  if (!domNode) {\n    return null;\n  }\n  return getInnerWidthFromDOM(domNode);\n}\n\n// 获取内部撑开的宽度，主要处理依赖父元素宽度切默认宽度是 100% 的节点(如图片、表格)\nexport function getInnerFullWidth(\n  node: Element | null,\n  document: Document,\n  root?: globalThis.Element,\n): number | null {\n  if (!node) return null;\n  let innerWidth = getInnerWidth(node, root);\n  if (isOrderedList(node as Block) || isUnorderedList(node as Block)) {\n    const parentNode = document.getParent(node.key);\n    if (parentNode) {\n      const parentWidth = getInnerWidth(parentNode, root);\n      // 列表节点在无内容时宽度为零，则宽度以它的父节点为准\n      // 内容为空时，由于 placeholder 存在，所以 inner width 不为 0，但是未被完全撑开\n      if (innerWidth === 0 || (innerWidth || 0) < (parentWidth || 0)) {\n        innerWidth = parentWidth;\n      }\n    }\n    return innerWidth;\n  }\n  if (innerWidth === 0) {\n    const parentNode = document.getParent(node.key);\n    if (!parentNode) return null;\n    innerWidth = getInnerWidth(parentNode, root);\n  }\n  return innerWidth;\n}\n\nexport function getInnerWidthFromDOM(domNode: HTMLElement) {\n  // TODO: 排版模式下 document 节点的宽度计算偏大，会导致空列表中插入的图片尺寸偏大溢出\n  if (domNode.getAttribute('data-type') === 'page') {\n    domNode = domNode.childNodes[0] as HTMLElement;\n  }\n\n  const computedStyle = window.getComputedStyle(domNode, null);\n  const offsetWidth = domNode.offsetWidth;\n  const paddingLeft = parseInt(computedStyle[\"padding-left\"], 10) || 0;\n  const paddingRight = parseInt(computedStyle[\"padding-right\"], 10) || 0;\n  const width = offsetWidth - paddingLeft - paddingRight;\n  return width;\n}\n"],"file":"getInnerWidth.js"}