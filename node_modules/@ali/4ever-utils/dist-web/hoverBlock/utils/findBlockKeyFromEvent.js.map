{"version":3,"sources":["../../../../src/hoverBlock/utils/findBlockKeyFromEvent.ts"],"names":["constants","leftThrottle","rightThrottle","Selector","leafBlockKey","leafBlock","cangjieKey","key","edgeSelectable","contentKey","content","DRAG_BAR_KEY","COLUMNS_KEY","COLUMN_BAR_KEY","COLUMN_SELECTOR","RIGHT_OFFSET","getParentByAttributes","attribute","target","attributes","Array","isArray","found","getAttribute","window","document","body","documentElement","i","length","parentElement","findBlockKeyFromEvent","event","container","options","zoom","filterColumn","eventTarget","oriTarget","blockKey","edgeKey","scale","paddingLeft","parseInt","getComputedStyle","rect","getBoundingClientRect","clientX","clientY","left","elementFromPoint","right","width","selfKeyElems","closest","push","selfKey","map","e","find","Boolean","blockEle","querySelector","dragBarKey","columnKey","columnEle","edgeEle","finalKey"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,aAAa,GAAG,EAAtB;0BAC0FF,SAAS,CAACG,Q;IAAjFC,Y,uBAAXC,S;IAA8BC,U,uBAALC,G;IAAiBC,c,uBAAAA,c;IAAyBC,U,uBAATC,O;AAElE,IAAMC,YAAY,GAAG,uBAArB;AACA,IAAMC,WAAW,GAAG,kBAApB;AACA,IAAMC,cAAc,GAAG,qBAAvB;AACA,IAAMC,eAAe,GAAG,aAAxB,C,CAEA;;AACA,IAAMC,YAAY,GAAG,EAArB;AAEA;AACA;AACA;;AACA,SAASC,qBAAT,CAA+BC,SAA/B,EAA6DC,MAA7D,EAAyF;AACvF,MAAMC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcJ,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAA1D;AACA,MAAIK,KAAyB,GAAGJ,MAAhC;;AACA,SACEI,KAAK,IACL,CAACA,KAAK,CAACC,YAAN,CAAmBd,UAAnB,CADD,IAEAa,KAAK,KAAKE,MAAM,CAACC,QAAP,CAAgBC,IAF1B,IAGAJ,KAAK,KAAKE,MAAM,CAACC,QAAP,CAAgBE,eAJ5B,EAKE;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,UAAU,CAACU,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAIN,KAAK,CAACC,YAAN,CAAmBJ,UAAU,CAACS,CAAD,CAA7B,CAAJ,EAAuC,OAAON,KAAP;AACxC;;AACDA,IAAAA,KAAK,GAAGA,KAAK,CAACQ,aAAd;AACD;;AACD,SAAO,IAAP;AACD;;AAOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAkDC,SAAlD,EAA6EC,OAA7E,EAAiH;AAAA,aAC/FA,OAAO,IAAI,EADoF;AAAA,MACtHC,IADsH,QACtHA,IADsH;AAAA,MAChHC,YADgH,QAChHA,YADgH;;AAE9H,MAAMC,WAAW,GAAGL,KAAK,CAACd,MAA1B;;AACA,MAAI,CAACmB,WAAL,EAAkB;AAChB,WAAO,EAAP;AACD;;AACD,MAAIC,SAAkB,GAAGD,WAAzB;AACA,MAAIE,QAAQ,GAAG,EAAf;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAIP,SAAJ,EAAe;AACb,QAAMQ,KAAK,GAAGN,IAAI,IAAI,CAAtB;AACA,QAAMO,WAAW,GAAGC,QAAQ,CAACC,gBAAgB,CAACX,SAAD,CAAhB,CAA4BS,WAA7B,EAA0C,EAA1C,CAAR,IAAyDzC,YAA7E;AACA,QAAM4C,IAAI,GAAGZ,SAAS,CAACa,qBAAV,EAAb;AAHa,QAILC,OAJK,GAIgBf,KAJhB,CAILe,OAJK;AAAA,QAIIC,OAJJ,GAIgBhB,KAJhB,CAIIgB,OAJJ,EAKb;;AACA,QAAID,OAAO,GAAGF,IAAI,CAACI,IAAf,IAAuBF,OAAO,GAAGF,IAAI,CAACI,IAAL,GAAYP,WAAW,GAAGD,KAA/D,EAAsE;AACpEH,MAAAA,SAAS,GAAGd,MAAM,CAACC,QAAP,CAAgByB,gBAAhB,CAAiCL,IAAI,CAACI,IAAL,GAAYP,WAAW,GAAGD,KAA1B,GAAkC1B,YAAnE,EAAiFiC,OAAjF,KAA6FX,WAAzG;AACD;;AACD,QAAIU,OAAO,GAAGF,IAAI,CAACM,KAAf,IAAwBJ,OAAO,GAAGF,IAAI,CAACM,KAAL,GAAajD,aAAnD,EAAkE;AAChEoC,MAAAA,SAAS,GAAGd,MAAM,CAACC,QAAP,CAAgByB,gBAAhB,CAAiCL,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACO,KAAL,GAAa,CAA3D,EAA8DJ,OAA9D,KAA0EX,WAAtF;AACD;AACF,GAtB6H,CAwB9H;;;AACA,MAAMgB,YAAY,GAAG,CAACf,SAAD,EAAYA,SAAS,CAACgB,OAAV,OAAsB3C,YAAtB,OAAZ,CAArB;;AACA,MAAI2B,SAAS,KAAKD,WAAlB,EAA+B;AAC7BgB,IAAAA,YAAY,CAACE,IAAb,CAAkBjB,SAAlB;AACAe,IAAAA,YAAY,CAACE,IAAb,CAAkBlB,WAAW,CAACiB,OAAZ,OAAwB3C,YAAxB,OAAlB;AACD;;AACD,MAAM6C,OAAO,GAAGH,YAAY,CAACI,GAAb,CAAiB,UAAAC,CAAC;AAAA,WAAIA,CAAJ,oBAAIA,CAAC,CAAEnC,YAAH,CAAgBZ,YAAhB,CAAJ;AAAA,GAAlB,EAAqDgD,IAArD,CAA0DC,OAA1D,CAAhB;;AACA,MAAIJ,OAAJ,EAAa;AACX,WAAOA,OAAP;AACD;;AAED,MAAItC,MAAM,GAAGoB,SAAb,CAnC8H,CAqC9H;;AACA,MAAMuB,QAAQ,GAAG7C,qBAAqB,CAAC,CAAC,aAAD,EAAgBZ,YAAhB,CAAD,EAAgCc,MAAhC,CAAtC;;AACA,MAAI2C,QAAJ,EAAc;AAAA;;AACZtB,IAAAA,QAAQ,GACNsB,QAAQ,CAACtC,YAAT,CAAsBjB,UAAtB,+BACAuD,QAAQ,CAACC,aAAT,OAA2BxD,UAA3B,OADA,qBACA,sBAA2CiB,YAA3C,CAAwDjB,UAAxD,CADA,KAEA,EAHF;AAID,GALD,MAKO;AACLY,IAAAA,MAAM,GAAGoB,SAAT;AACD,GA9C6H,CAgD9H;AACA;;;AACA,MAAIF,YAAJ,EAAkB;AAAA;;AAChB,QAAM2B,UAAU,cAAG7C,MAAH,qBAAG,QAAQK,YAAR,CAAqBV,cAArB,CAAnB;;AACA,QAAIkD,UAAJ,EAAgB;AACd,aAAO,EAAP;AACD;;AACD,oBAAI7C,MAAJ,aAAI,SAAQK,YAAR,CAAqBT,eAArB,CAAJ,EAA2C;AACzC,aAAOI,MAAM,CAACK,YAAP,CAAoBjB,UAApB,CAAP;AACD;;AACD,QAAI0D,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAGjD,qBAAqB,CAACF,eAAD,EAAkBI,MAAlB,CAArC;;AACA,WAAO+C,SAAP,EAAkB;AAChBD,MAAAA,SAAS,GAAGC,SAAS,CAAC1C,YAAV,CAAuBjB,UAAvB,KAAsC0D,SAAlD;AACAC,MAAAA,SAAS,GAAGjD,qBAAqB,CAACF,eAAD,EAAkBmD,SAAS,CAACnC,aAA5B,CAAjC;AACD;;AACD,QAAIkC,SAAJ,EAAe;AACb,aAAOA,SAAP;AACD,KAFD,MAEO,gBAAI9C,MAAJ,aAAI,SAAQoC,OAAR,OAAoB1C,WAApB,OAAJ,EAAyC;AAC9C,aAAO,EAAP;AACD;AACF,GArE6H,CAuE9H;;;AACA,MAAIsD,OAAO,GAAGlD,qBAAqB,CAACR,cAAD,EAAiBU,MAAjB,CAAnC;;AACA,SAAOgD,OAAP,EAAgB;AACd1B,IAAAA,OAAO,GAAG0B,OAAO,CAAC3C,YAAR,CAAqBjB,UAArB,KAAoCkC,OAA9C;AACA0B,IAAAA,OAAO,GAAGlD,qBAAqB,CAACR,cAAD,EAAiB0D,OAAO,CAACpC,aAAzB,CAA/B;AACD,GA5E6H,CA8E9H;;;AACA,MAAMqC,QAAQ,GAAG3B,OAAO,IAAID,QAA5B;AAEA,SAAO4B,QAAQ,IAAI,EAAnB;AACD","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { constants } from '@ali/4ever-cangjie';\n\nconst leftThrottle = 100;\nconst rightThrottle = 30;\nconst { leafBlock: leafBlockKey, key: cangjieKey, edgeSelectable, content: contentKey } = constants.Selector;\n\nconst DRAG_BAR_KEY = 'data-drag-handler-key';\nconst COLUMNS_KEY = 'data-columns-key';\nconst COLUMN_BAR_KEY = 'data-column-dragkey';\nconst COLUMN_SELECTOR = 'data-column';\n\n// 如果鼠标在 content 左侧，则往右侧偏移一部分，取新的元素。\nconst RIGHT_OFFSET = 20;\n\n/**\n * 从 target 开始，往 parent 找，一直找到并返回满足 attribute 的元素\n */\nfunction getParentByAttributes(attribute: string | string[], target: HTMLElement | null) {\n  const attributes = Array.isArray(attribute) ? attribute : [attribute];\n  let found: HTMLElement | null = target;\n  while (\n    found &&\n    !found.getAttribute(contentKey) &&\n    found !== window.document.body &&\n    found !== window.document.documentElement\n  ) {\n    for (let i = 0; i < attributes.length; i++) {\n      if (found.getAttribute(attributes[i])) return found;\n    }\n    found = found.parentElement;\n  }\n  return null;\n}\n\ntype FindBlockOptions = {\n  zoom?: number;\n  filterColumn?: boolean;\n};\n\n/**\n * 根据鼠标移动事件查找文档 key\n * 策略：一直查找到文档内容根节点或 body/html\n * 优先使用支持边缘选区的节点\n * 其次使用 列表/leafBlock 节点\n * @param event\n * @param container\n */\nexport default function findBlockKeyFromEvent(event: MouseEvent, container: Element | null, options?: FindBlockOptions): string {\n  const { zoom, filterColumn } = options || {};\n  const eventTarget = event.target as HTMLElement | null;\n  if (!eventTarget) {\n    return '';\n  }\n  let oriTarget: Element = eventTarget;\n  let blockKey = '';\n  let edgeKey = '';\n\n  if (container) {\n    const scale = zoom || 1;\n    const paddingLeft = parseInt(getComputedStyle(container).paddingLeft, 10) || leftThrottle;\n    const rect = container.getBoundingClientRect();\n    const { clientX, clientY } = event;\n    // 兼容在左边 padding 区域也可以识别（放大时 padding也会一并变大）\n    if (clientX > rect.left && clientX < rect.left + paddingLeft * scale) {\n      oriTarget = window.document.elementFromPoint(rect.left + paddingLeft * scale + RIGHT_OFFSET, clientY) || eventTarget;\n    }\n    if (clientX > rect.right && clientX < rect.right + rightThrottle) {\n      oriTarget = window.document.elementFromPoint(rect.right - rect.width / 2, clientY) || eventTarget;\n    }\n  }\n\n  // 如果落在了自带 key 的元素上，直接返回对应的 key\n  const selfKeyElems = [oriTarget, oriTarget.closest(`[${DRAG_BAR_KEY}]`)];\n  if (oriTarget !== eventTarget) {\n    selfKeyElems.push(oriTarget);\n    selfKeyElems.push(eventTarget.closest(`[${DRAG_BAR_KEY}]`))\n  }\n  const selfKey = selfKeyElems.map(e => e?.getAttribute(DRAG_BAR_KEY)).find(Boolean);\n  if (selfKey) {\n    return selfKey;\n  }\n\n  let target = oriTarget as HTMLElement | null;\n\n  // 1. 先尝试找 列表 或 leafBlock\n  const blockEle = getParentByAttributes(['data-listid', leafBlockKey], target);\n  if (blockEle) {\n    blockKey =\n      blockEle.getAttribute(cangjieKey) ||\n      blockEle.querySelector(`[${cangjieKey}]`)?.getAttribute(cangjieKey) ||\n      '';\n  } else {\n    target = oriTarget as HTMLElement | null;\n  }\n\n  // 2. 如果有设置 column 标记，尝试定位到分栏\n  // 20220316: 这里暂时下线了，不允许拖拽分栏的每一个栏。代码保留、PD 后续很可能再加回来\n  if (filterColumn) {\n    const dragBarKey = target?.getAttribute(COLUMN_BAR_KEY);\n    if (dragBarKey) {\n      return '';\n    }\n    if (target?.getAttribute(COLUMN_SELECTOR)) {\n      return target.getAttribute(cangjieKey)!;\n    }\n    let columnKey = '';\n    let columnEle = getParentByAttributes(COLUMN_SELECTOR, target);\n    while (columnEle) {\n      columnKey = columnEle.getAttribute(cangjieKey) || columnKey;\n      columnEle = getParentByAttributes(COLUMN_SELECTOR, columnEle.parentElement);\n    }\n    if (columnKey) {\n      return columnKey;\n    } else if (target?.closest(`[${COLUMNS_KEY}]`)) {\n      return '';\n    }\n  }\n\n  // 3. 遍历找到最上层的 edgeBlock（例如表格里的 edge block）\n  let edgeEle = getParentByAttributes(edgeSelectable, target);\n  while (edgeEle) {\n    edgeKey = edgeEle.getAttribute(cangjieKey) || edgeKey;\n    edgeEle = getParentByAttributes(edgeSelectable, edgeEle.parentElement);\n  }\n\n  // 优先级：edgeKey > leafBlockKey（比如在表格中）\n  const finalKey = edgeKey || blockKey;\n\n  return finalKey || '';\n}\n"],"file":"findBlockKeyFromEvent.js"}