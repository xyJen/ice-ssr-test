import _createClass from "@babel/runtime/helpers/createClass";
var isNativeRequestIdleCallback = typeof window !== 'undefined' && typeof window.requestIdleCallback === 'function';

var now = function now() {
  return Date.now();
};

var IdleDeadline = /*#__PURE__*/function () {
  function IdleDeadline(initTime) {
    this.initTime = void 0;
    this.initTime = initTime;
  }

  var _proto = IdleDeadline.prototype;

  _proto.timeRemaining = function timeRemaining() {
    return Math.max(0, 50 - (now() - this.initTime));
  };

  _createClass(IdleDeadline, [{
    key: "didTimeout",
    get: function get() {
      return false;
    }
  }]);

  return IdleDeadline;
}();

var requestIdleCallbackShim = function requestIdleCallbackShim(callback) {
  var deadline = new IdleDeadline(now());
  // * Push callback into task queue.
  return window.setTimeout(function () {
    return callback(deadline);
  }, 0);
};

var cancelIdleCallbackShim = function cancelIdleCallbackShim(handle) {
  window.clearTimeout(handle);
};

var requestIdleCallback = isNativeRequestIdleCallback ? window.requestIdleCallback : requestIdleCallbackShim;
var cancelIdleCallback = isNativeRequestIdleCallback ? window.cancelIdleCallback : cancelIdleCallbackShim;
export { requestIdleCallback, cancelIdleCallback };
//# sourceMappingURL=idleCallback.js.map