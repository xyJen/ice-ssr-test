{"version":3,"sources":["../../src/cssUtils.ts"],"names":["TinyColor","assertNever","x","console","warn","isCssLength","str","length","zero","test","isWidth","isBorderStyle","value","checkCssBorder","val","isValid","cssBorderParse","split","ret","forEach","v","prop","isValidBorder","convertBorderToData","parsed","sz","width","w","parseFloat","parseCSSAbsoluteLength","Math","round","ceil","style","color","toHex","praseCSSBackground","values","reduce","prev","backgroundColor","parseCSSSides","sides","replace","side","top","right","bottom","left","vertical","horizontal","parseCSSMargin","marginTop","marginRight","marginBottom","marginLeft","parseCSSPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","isNumeric","num","isNaN","Number","inchesToUnit","to","unitToInches","from","ABS_L_REG","isCSSAbsoluteLength","unit","match","_","n","u","PERCENT_REG","isCSSPercent","parseCSSPercent","NaN"],"mappings":"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","sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\n\nfunction assertNever(x: never) {\n  console.warn('Unexpected value:', x);\n}\n\n/**\n * 效验是否符合 css 长度单位标准\n * @param str\n */\nexport function isCssLength(str: string): boolean {\n  const length = /^(\\+|-)?([0-9]*\\.)?[0-9]+(em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc|%)$/i;\n  const zero = /^(\\+|-)?(0*\\.)?0+$/;\n\n  return length.test(str) || zero.test(str);\n}\n\n/**\n * 效验是否服务 css width 值标准\n * @param str\n */\nexport function isWidth(str: string): boolean {\n  return isCssLength(str) || str === 'thin' || str === 'medium' || str === 'thick';\n}\n\n/**\n * 效验是否是 css border style\n * @param str\n */\nexport function isBorderStyle(str: string): boolean {\n  const value = /^(none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset)$/i;\n  return value.test(str);\n}\n\nfunction checkCssBorder(val: string) {\n  if ((new TinyColor(val)).isValid) return 'color';\n  if (isWidth(val)) return 'width';\n  if (isBorderStyle(val)) return 'style';\n\n  return null;\n}\n\nexport interface SingleBorderProperties {\n  width?: string;\n  color?: string;\n  style?: string;\n}\n\nexport function cssBorderParse(str: string): SingleBorderProperties {\n  const value = str.split(' ');\n  const ret = {};\n  value.forEach((v) => {\n    const prop = checkCssBorder(v);\n    if (prop) {\n      ret[prop] = v;\n    }\n  });\n  return ret;\n}\n\nexport interface BorderData {\n  val: string;\n  sz: number;\n  color: string\n}\n\nexport type ValidBorderStyle = 'single' | 'dashed';\n\nfunction isValidBorder(value?: string): value is ValidBorderStyle {\n  if (value === 'single') return true;\n  if (value === 'dashed') return true;\n  return false;\n}\n\nexport function convertBorderToData(parsed: SingleBorderProperties): BorderData {\n  let sz = 1;\n  if (parsed.width) {\n    const w = parseFloat(parseCSSAbsoluteLength(parsed.width));\n    sz = Math.round(w) || Math.ceil(w);\n  }\n  return {\n    val: isValidBorder(parsed.style) ? parsed.style : 'single',\n    sz,\n    color: `#${new TinyColor(parsed.color).toHex()}`,\n  };\n}\n\n/**\n * 解析 css 的 background 属性（目前只支持 color）\n * @param value\n */\nexport function praseCSSBackground(value: string): Partial<Pick<CSSStyleDeclaration, 'backgroundColor'>> {\n  const values = value.split(' ');\n  return values.reduce((prev, val) => {\n    if ((new TinyColor(val)).isValid) {\n      return {\n        ...prev,\n        backgroundColor: val,\n      };\n    }\n    return prev;\n  }, {});\n}\n\nexport interface CSSSides {\n  top: string;\n  right: string;\n  bottom: string;\n  left: string;\n}\n\n/**\n * 解析 css 边距单位\n * @param value\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/padding\n */\nexport function parseCSSSides(value: string): CSSSides {\n  // 解析前先去除多余的空白符\n  const sides = value.replace(/\\s+/g, ' ').split(' ');\n  if (sides.length === 1) {\n    const [side] = sides;\n    return {\n      top: side,\n      right: side,\n      bottom: side,\n      left: side,\n    };\n  }\n  if (sides.length === 2) {\n    const [vertical, horizontal] = sides;\n    return {\n      top: vertical,\n      right: horizontal,\n      bottom: vertical,\n      left: horizontal,\n    };\n  }\n  if (sides.length === 3) {\n    const [top, horizontal, bottom] = sides;\n    return {\n      top,\n      right: horizontal,\n      bottom,\n      left: horizontal,\n    };\n  }\n  if (sides.length === 4) {\n    const [top, right, bottom, left] = sides;\n    return { top, right, bottom, left };\n  }\n  return {\n    top: '',\n    right: '',\n    bottom: '',\n    left: '',\n  };\n}\n\n/**\n * 解析 css margin 参数\n * @param value\n */\nexport function parseCSSMargin(value: string): Pick<CSSStyleDeclaration, 'marginTop' | 'marginRight' | 'marginBottom' | 'marginLeft'> {\n  const sides = parseCSSSides(value);\n  const { top, right, bottom, left } = sides;\n  return {\n    marginTop: top,\n    marginRight: right,\n    marginBottom: bottom,\n    marginLeft: left,\n  };\n}\n\n/**\n * 解析 css padding 参数\n * @param value\n */\nexport function parseCSSPadding(value: string): Pick<CSSStyleDeclaration, 'paddingTop' | 'paddingRight' | 'paddingBottom' | 'paddingLeft'> {\n  const sides = parseCSSSides(value);\n  const { top, right, bottom, left } = sides;\n  return {\n    paddingTop: top,\n    paddingRight: right,\n    paddingBottom: bottom,\n    paddingLeft: left,\n  };\n}\n\n/**\n * 效验一个值是否符合数字规范\n * @param num 效验值\n * @see https://stackoverflow.com/questions/175739/built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number\n * @description 注意一下 lodash 的 isNaN 和浏览器 API 有点不同，12px 这个值在 lodash 中会认为不是 NaN\n */\nexport function isNumeric(num: string | number): boolean {\n  return !isNaN(Number(num));\n}\n\nexport type CSSAbsoluteLengthUnit = 'cm' | 'mm' | 'Q' | 'in' | 'pc' | 'pt' | 'px';\n\nfunction inchesToUnit(num: number, to: CSSAbsoluteLengthUnit) {\n  switch (to) {\n    case 'cm':\n      return num * 2.54;\n    case 'mm':\n      return num * 10 * 2.54;\n    case 'Q':\n      return num * 40 * 2.54;\n    case 'in':\n      return num;\n    case 'pc':\n      return num * 6;\n    case 'pt':\n      return num * 72;\n    case 'px':\n      return num * 96;\n    default:\n      assertNever(to);\n      break;\n  }\n  return num;\n}\n\nfunction unitToInches(num: number, from: CSSAbsoluteLengthUnit) {\n  switch (from) {\n    case 'cm':\n      return num / 2.54;\n    case 'mm':\n      return num / 10 / 2.54;\n    case 'Q':\n      return num / 40 / 2.54;\n    case 'in':\n      return num;\n    case 'pc':\n      return num / 6;\n    case 'pt':\n      return num / 72;\n    case 'px':\n      return num / 96;\n    default:\n      assertNever(from);\n      break;\n  }\n  return num;\n}\n\nconst ABS_L_REG = /^(\\d*\\.?\\d*)(cm|mm|Q|in|pc|pt|px)$/;\n\n/**\n * 测试一个值是否是绝对单位\n * @param value\n */\nexport function isCSSAbsoluteLength(value?: string | number): boolean {\n  const length = isNumeric(value || '') ? `${value}px` : `${value}`;\n  return ABS_L_REG.test(`${length}`);\n}\n\n\n/**\n * 解析 CSS 绝对长度单位，默认的目标单位是 px，value 值若为 number 则断言为 px 单位\n * @param value 原始值\n * @param unit 目标单位\n * @see https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#Lengths\n * @example 1in = 2.54cm = 96px\n *\n * Unit |  Name                 | Equivalent to\n *  cm  |  Centimeters          | 1cm = 96px/2.54\n *  mm  |  Millimeters          | 1mm = 1/10th of 1cm\n *  Q   |  Quarter-millimeters  | 1Q  = 1/40th of 1cm\n *  in  |  Inches               | 1in = 2.54cm = 96px\n *  pc  |  Picas                | 1pc = 1/6th of 1in\n *  pt  |  Points               | 1pt = 1/72th of 1in\n *  px  |  Pixels               | 1px = 1/96th of 1in\n */\nexport function parseCSSAbsoluteLength(value: string | number, unit: CSSAbsoluteLengthUnit = 'px'): string {\n  const length = isNumeric(value) ? `${value}px` : `${value}`;\n  const match = length.match(ABS_L_REG);\n  if (match) {\n    // [原始值, 数字组, 单位组]\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, n, u] = match as [string, string, CSSAbsoluteLengthUnit];\n    const num = parseFloat(n);\n    if (!isNaN(num)) {\n      return inchesToUnit(unitToInches(num, u), unit) + unit;\n    }\n  }\n  return 0 + unit;\n}\n\nconst PERCENT_REG = /^(\\d*\\.?\\d*)(%)$/;\n\n/**\n * 测试一个值是否是 css 百分比单位\n * @param value\n */\nexport function isCSSPercent(value: string): boolean {\n  return PERCENT_REG.test(value);\n}\n\n/**\n * 解析 css 百分比单位\n * @param value\n */\nexport function parseCSSPercent(value: string): number {\n  const match = value.match(PERCENT_REG);\n  if (match) {\n    // [原始值, 数字组, 百分号]\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, n] = match as [string, string, '%'];\n    const num = parseFloat(n);\n    if (!isNaN(num)) {\n      return num / 100;\n    }\n  }\n  return NaN;\n}\n"],"file":"cssUtils.js"}