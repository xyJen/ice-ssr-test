import { Block } from "@ali/4ever-cangjie";
/**
 * 生成 group type
 * @param type
 * @returns
 */

export function generateHeadingGroupType(type) {
  return type + "-group";
}
/**
 * 生成 group key
 * @param key
 * @returns
 */

export function generateHeadingGroupKey(key) {
  return key + "-group";
}

function defaultPass() {
  return false;
}
/**
 * 聚合一组节点
 * @param nodes 节点组
 * @param type group type
 * @param until 停止 group 条件
 * @param pass 跳过节点
 * @returns
 */


export function groupHeading(_ref, parent, type, until, pass) {
  var start = _ref[0],
      end = _ref[1];

  if (pass === void 0) {
    pass = defaultPass;
  }

  var first = parent.nodes[start];
  var i = start + 1;

  while (i < end) {
    var _node = parent.nodes[i];

    if (until(_node, first) && !pass(_node)) {
      break;
    }

    i += 1;
  }

  var children = parent.nodes.slice(start, i);
  var result = Block.create({
    type: generateHeadingGroupType(type),
    data: first.data,
    key: generateHeadingGroupKey(first.key),
    nodes: children
  });
  return {
    node: result,
    remainedRange: [i, end]
  };
}
//# sourceMappingURL=group.js.map