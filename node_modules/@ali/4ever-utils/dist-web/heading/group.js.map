{"version":3,"sources":["../../../src/heading/group.ts"],"names":["Block","generateHeadingGroupType","type","generateHeadingGroupKey","key","defaultPass","groupHeading","parent","until","pass","start","end","first","nodes","i","node","children","slice","result","create","data","remainedRange"],"mappings":"AAAA,SAASA,KAAT,QAAwC,oBAAxC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,IAAlC,EAAwD;AAC7D,SAAUA,IAAV;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,GAAjC,EAAsD;AAC3D,SAAUA,GAAV;AACD;;AAED,SAASC,WAAT,GAAuB;AACrB,SAAO,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,YAAT,OAELC,MAFK,EAGLL,IAHK,EAILM,KAJK,EAKLC,IALK,EAMuC;AAAA,MAL3CC,KAK2C;AAAA,MALpCC,GAKoC;;AAAA,MAD5CF,IAC4C;AAD5CA,IAAAA,IAC4C,GADXJ,WACW;AAAA;;AAC5C,MAAMO,KAAK,GAAGL,MAAM,CAACM,KAAP,CAAaH,KAAb,CAAd;AACA,MAAII,CAAC,GAAGJ,KAAK,GAAG,CAAhB;;AACA,SAAOI,CAAC,GAAGH,GAAX,EAAgB;AACd,QAAMI,KAAI,GAAGR,MAAM,CAACM,KAAP,CAAaC,CAAb,CAAb;;AACA,QAAIN,KAAK,CAACO,KAAD,EAAgBH,KAAhB,CAAL,IAA+B,CAACH,IAAI,CAACM,KAAD,CAAxC,EAAyD;AACvD;AACD;;AACDD,IAAAA,CAAC,IAAI,CAAL;AACD;;AAED,MAAME,QAAQ,GAAGT,MAAM,CAACM,KAAP,CAAaI,KAAb,CAAmBP,KAAnB,EAA0BI,CAA1B,CAAjB;AAEA,MAAMI,MAAM,GAAGlB,KAAK,CAACmB,MAAN,CAAa;AAC1BjB,IAAAA,IAAI,EAAED,wBAAwB,CAACC,IAAD,CADJ;AAE1BkB,IAAAA,IAAI,EAAER,KAAK,CAACQ,IAFc;AAG1BhB,IAAAA,GAAG,EAAED,uBAAuB,CAACS,KAAK,CAACR,GAAP,CAHF;AAI1BS,IAAAA,KAAK,EAAEG;AAJmB,GAAb,CAAf;AAOA,SAAO;AACLD,IAAAA,IAAI,EAAEG,MADD;AAELG,IAAAA,aAAa,EAAE,CAACP,CAAD,EAAIH,GAAJ;AAFV,GAAP;AAID","sourcesContent":["import { Block, Document, Plugin } from \"@ali/4ever-cangjie\";\n\n/**\n * 生成 group type\n * @param type\n * @returns\n */\nexport function generateHeadingGroupType(type: string): string {\n  return `${type}-group`;\n}\n\n/**\n * 生成 group key\n * @param key\n * @returns\n */\nexport function generateHeadingGroupKey(key: string): string {\n  return `${key}-group`;\n}\n\nfunction defaultPass() {\n  return false;\n}\n\n/**\n * 聚合一组节点\n * @param nodes 节点组\n * @param type group type\n * @param until 停止 group 条件\n * @param pass 跳过节点\n * @returns\n */\nexport function groupHeading(\n  [start, end]: [number, number],\n  parent: Document | Block,\n  type: string,\n  until: (node: Block, first: Block) => boolean,\n  pass: (node: Block) => boolean = defaultPass,\n): ReturnType<Required<Plugin>['groupNodes']> {\n  const first = parent.nodes[start] as Block;\n  let i = start + 1;\n  while (i < end) {\n    const node = parent.nodes[i];\n    if (until(node as Block, first) && !pass(node as Block)) {\n      break;\n    }\n    i += 1;\n  }\n\n  const children = parent.nodes.slice(start, i);\n\n  const result = Block.create({\n    type: generateHeadingGroupType(type),\n    data: first.data,\n    key: generateHeadingGroupKey(first.key),\n    nodes: children,\n  });\n\n  return {\n    node: result,\n    remainedRange: [i, end],\n  };\n}\n"],"file":"group.js"}