{"version":3,"sources":["../../../src/aspect/latency.ts"],"names":["Debug","debug","onLatency","key","cost","success","status","connect","speed","reporter","latency","fn","options","callback","_latency","start","Date","now","args","rs","apply","Promise","then","res","err","Latency","deco","target","propertyKey","descriptor","value","TypeError","String","onFrameCallback","type","frameMap","Map","latencyCurrentFrame","leading","has","set","frameEnd","get","isNaN","Error","window","requestAnimationFrame","resolve","setTimeout","console","warn","latencyFrame","LatencyFrame","onTotalCallback","total","latencyTotal","counting","_latencyTotal","onceCost","LatencyTotal"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Debug from 'debug';\n\nconst debug = Debug('EDITOR:UTIL:ASPECT:LATENCY');\n\nexport type Callback = (key: string, cost: number, success?: boolean) => void;\n\nexport interface LatencyOptions {\n  callback?: Callback;\n}\n\nfunction onLatency(key: string, cost: number, success = true) {\n  const status = success ? 'success' : 'failed';\n  debug('Latency %s %c%s: %c%dms', status, 'color: dodgerblue', key, 'color: orange', cost);\n}\n\nexport function connect(speed: (key: string, value?: number) => void): Callback {\n  return function reporter(key, cost, success = true) {\n    onLatency(key, cost, success);\n    const status = success ? 'success' : 'failed';\n    speed(`latency_${key}_${status}`, cost);\n  };\n}\n\n/**\n * 函数计时打点，支持同步函数和异步函数计时\n * @param key 打点的 key\n * @param fn 装饰的函数\n * @param callback 自定义打点\n */\nexport function latency<T extends Function>(key: string, fn: T, options: LatencyOptions = {}): T {\n  const { callback = onLatency } = options;\n  return function _latency(this: any, ...args: any[]) {\n    const start = Date.now();\n    const rs = fn.apply(this, args);\n    // 如果函数是 async 函数\n    if (rs instanceof Promise && rs.then && (rs as any).catch) {\n      return rs.then((res) => {\n        callback(key, Date.now() - start, true);\n        return res;\n      }).catch((err) => {\n        callback(key, Date.now() - start, false);\n        throw err;\n      });\n    }\n    callback(key, Date.now() - start);\n    return rs;\n  } as unknown as T;\n}\n\n\n/**\n * 函数计时装饰器，支持同步函数和异步函数计时\n * @param key 打点计时 key\n */\nexport function Latency(key: string, options?: LatencyOptions): MethodDecorator {\n  return function deco<F>(\n    target: object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<F>,\n  ): TypedPropertyDescriptor<F> {\n    if (!descriptor || (typeof descriptor.value !== 'function')) {\n      throw new TypeError(`Only methods can be decorated with @Latency. <${String(propertyKey)}> is not a method!`);\n    }\n    return {\n      ...descriptor,\n      value: latency(key, descriptor.value, options) as any,\n    };\n  };\n}\n\n\nexport type FrameCallback = (key: string, cost: number, type: LatencyFrameType) => void;\n\nexport type LatencyFrameType = 'frame' | 'microtask' | 'macrotask';\n\nfunction onFrameCallback(key: string, cost: number, type: LatencyFrameType) {\n  debug('Latency %s %c%s: %c%dms', type, 'color: dodgerblue', key, 'color: orange', cost);\n}\n\nexport interface LatencyFrameOptions {\n  /**\n   * Frame 类型\n   * frame - 探测一帧的延迟时间，延迟方法为 window.requestAnimationFrame()\n   * microtask - 探测一个 microtask 的延迟时间，延迟方法为 Promise.resolve().then()\n   * macrotask - 探测一个 macrotask 的延迟时间，延迟方法为 window.setTimeout()\n   * @default 'frame'\n   * @description 注意 macrotask 不一定能保证是仅有一个 Event Loop\n   */\n  type?: LatencyFrameType;\n  /**\n   * 若在当前 Exec Stack 中多次触发，起始点取值是否为第一次，false 则取最后一次\n   * @default true\n   */\n  leading?: boolean;\n  callback?: FrameCallback;\n}\n\ntype Timestamp = number;\n\n// 计时器缓存\nconst frameMap = new Map<string, Timestamp>();\n\n/**\n * 记录当前执行点至下一帧的耗时，帧类型支持三种 frame | microtask | macrotask\n * @param key 计时 key\n * @param options\n */\nexport function latencyCurrentFrame(key: string, options: LatencyFrameOptions = {}) {\n  const {\n    leading = true,\n    callback = onFrameCallback,\n    type = 'frame' as LatencyFrameType,\n  } = options;\n\n  // 如果缓存中有 key，则直接 return\n  if (frameMap.has(key)) {\n    // 非 leading 模式重置计时\n    if (!leading) {\n      frameMap.set(key, Date.now());\n    }\n    return;\n  }\n\n  // 计时结束\n  function frameEnd() {\n    const start = frameMap.get(key);\n    frameMap.delete(key);\n    if (typeof start !== 'number' || isNaN(start)) {\n      throw new Error(`Cannot find start timer for key: ${key}`);\n    }\n    const cost = Date.now() - start;\n    callback(key, cost, type);\n  }\n\n  // 设置计时起始点\n  frameMap.set(key, Date.now());\n  if (type === 'frame') {\n    window.requestAnimationFrame(frameEnd);\n  } else if (type === 'microtask') {\n    Promise.resolve().then(frameEnd);\n  } else if (type === 'macrotask') {\n    window.setTimeout(frameEnd);\n  } else {\n    console.warn('Unexpected frame type: ', type);\n    frameMap.delete(key);\n  }\n}\n\n/**\n * 装饰函数，记录从函数执行开始至下一帧的耗时\n * @param key 计时 key\n * @param fn 装饰的函数\n * @param options\n */\nexport function latencyFrame<T extends Function>(key: string, fn: T, options?: LatencyFrameOptions) {\n  return function _latency(this: any, ...args: any[]) {\n    latencyCurrentFrame(key, options);\n    return fn.apply(this, args);\n  } as unknown as T;\n}\n\n/**\n * 装饰方法，记录从函数执行开始至下一帧的耗时\n * @param key 计时 key\n * @param options\n */\nexport function LatencyFrame(key: string, options?: LatencyFrameOptions): MethodDecorator {\n  return function deco<F>(\n    target: object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<F>,\n  ): TypedPropertyDescriptor<F> {\n    if (!descriptor || (typeof descriptor.value !== 'function')) {\n      throw new TypeError(`Only methods can be decorated with @LatencyFrame. <${String(propertyKey)}> is not a method!`);\n    }\n    return {\n      ...descriptor,\n      value: latencyFrame(key, descriptor.value, options) as any,\n    };\n  };\n}\n\nexport type TotalCallback = (key: string, cost: number, total: number) => void;\n\nconst onTotalCallback: TotalCallback = (key, cost, total) => {\n  debug('Latency total %c%s: %c%d/time %c%dms', 'color: dodgerblue', key, 'color: tomato', total, 'color: orange', cost);\n};\n\nexport interface LatencyTotalOptions {\n  callback?: TotalCallback;\n}\n\n/**\n * 记录一个函数在一个 task 内总共执行的次数以及耗时\n * @param key 计时 key\n * @param fn 计时函数\n * @param options\n */\nexport function latencyTotal<T extends Function>(key: string, fn: T, options: LatencyTotalOptions = {}): T {\n  const { callback = onTotalCallback } = options;\n  let counting = false;\n  let total = 0;\n  let cost = 0;\n  return function _latencyTotal(this: any, ...args: any[]) {\n    const start = Date.now();\n    const res = fn.apply(this, args);\n    const onceCost = Date.now() - start;\n    total += 1;\n    cost += onceCost;\n    if (!counting) {\n      counting = true;\n      Promise.resolve().then(() => {\n        try {\n          callback(key, cost, total);\n        } finally {\n          counting = false;\n          total = 0;\n          cost = 0;\n        }\n      });\n    }\n    return res;\n  } as unknown as T;\n}\n\n/**\n * 记录一个函数在一个 task 内总共执行的次数以及耗时\n * @param key 计时 key\n * @param options\n */\nexport function LatencyTotal(key: string, options?: LatencyTotalOptions): MethodDecorator {\n  return function deco<F>(\n    target: object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<F>,\n  ): TypedPropertyDescriptor<F> {\n    if (!descriptor || (typeof descriptor.value !== 'function')) {\n      throw new TypeError(`Only methods can be decorated with @LatencyTotal. <${String(propertyKey)}> is not a method!`);\n    }\n    return {\n      ...descriptor,\n      value: latencyTotal(key, descriptor.value, options) as any,\n    };\n  };\n}\n"],"file":"latency.js"}