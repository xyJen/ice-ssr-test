{"version":3,"sources":["../../../../src/utils/editor/generateRangesFromTableSelection.ts"],"names":["Selection","Point","generateRangesFromTableSelection","controller","tableSelections","document","value","ranges","undefined","forEach","tableSelection","key","startRowIndex","startColIndex","endRowIndex","endColIndex","table","getNode","rowIndex","row","nodes","colIndex","cell","anchorText","getFirstText","focusText","getLastText","push","create","anchor","offset","focus","text","length"],"mappings":"AAAA,SAAgBA,SAAhB,EAA2BC,KAA3B,QAAoD,oBAApD;AAEA,eAAe,SAASC,gCAAT,CAA0CC,UAA1C,EAAkEC,eAAlE,EAAmF;AAAA,MACxFC,QADwF,GAC3EF,UAAU,CAACG,KADgE,CACxFD,QADwF;AAEhG,MAAME,MAAmB,GAAG,EAA5B;AACA,MAAI,CAACH,eAAL,EAAsB,OAAOI,SAAP;AACtBJ,EAAAA,eAAe,CAACK,OAAhB,CAAwB,UAAAC,cAAc,EAAI;AACxC,QAAI,CAACA,cAAL,EAAqB;AACnB,aAAOF,SAAP;AACD;;AAHuC,QAKtCG,GALsC,GAMpCD,cANoC,CAKtCC,GALsC;AAAA,QAKjCC,aALiC,GAMpCF,cANoC,CAKjCE,aALiC;AAAA,QAKlBC,aALkB,GAMpCH,cANoC,CAKlBG,aALkB;AAAA,QAKHC,WALG,GAMpCJ,cANoC,CAKHI,WALG;AAAA,QAKUC,WALV,GAMpCL,cANoC,CAKUK,WALV;AAQxC,QAAMC,KAAK,GAAGX,QAAQ,CAACY,OAAT,CAAiBN,GAAjB,CAAd;;AACA,QAAI,CAACK,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AAED,SAAK,IAAIE,QAAQ,GAAGN,aAApB,EAAmCM,QAAQ,IAAIJ,WAA/C,EAA4DI,QAAQ,IAAI,CAAxE,EAA2E;AACzE,UAAMC,GAAG,GAAGH,KAAK,CAACI,KAAN,CAAYF,QAAZ,CAAZ;;AACA,UAAI,CAACC,GAAL,EAAU;AACR,eAAOX,SAAP;AACD;;AAED,WAAK,IAAIa,QAAQ,GAAGR,aAApB,EAAmCQ,QAAQ,IAAIN,WAA/C,EAA4DM,QAAQ,IAAI,CAAxE,EAA2E;AACzE,YAAMC,IAAI,GAAGH,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAb;;AACA,YAAI,CAACC,IAAL,EAAW;AACT;AACD;;AAED,YAAMC,UAAU,GAAGD,IAAI,CAACE,YAAL,EAAnB;AACA,YAAMC,SAAS,GAAGH,IAAI,CAACI,WAAL,EAAlB;;AACA,YAAI,CAACH,UAAD,IAAe,CAACE,SAApB,EAA+B;AAC7B;AACD;;AACDlB,QAAAA,MAAM,CAACoB,IAAP,CACE3B,SAAS,CAAC4B,MAAV,CAAiB;AACfC,UAAAA,MAAM,EAAE5B,KAAK,CAAC2B,MAAN,CAAa;AACnBjB,YAAAA,GAAG,EAAEY,UAAU,CAACZ,GADG;AAEnB;AACAmB,YAAAA,MAAM,EAAE;AAHW,WAAb,CADO;AAMfC,UAAAA,KAAK,EAAE9B,KAAK,CAAC2B,MAAN,CAAa;AAClBjB,YAAAA,GAAG,EAAEc,SAAS,CAACd,GADG;AAElB;AACAmB,YAAAA,MAAM,EAAEL,SAAS,CAACO,IAAV,CAAeC;AAHL,WAAb;AANQ,SAAjB,CADF;AAcD;AACF;;AAED,WAAOzB,SAAP;AACD,GAhDD;AAiDA,SAAOD,MAAP;AACD","sourcesContent":["import { Block, Selection, Point, Controller } from '@ali/4ever-cangjie';\n\nexport default function generateRangesFromTableSelection(controller: Controller, tableSelections) {\n  const { document } = controller.value;\n  const ranges: Selection[] = [];\n  if (!tableSelections) return undefined;\n  tableSelections.forEach(tableSelection => {\n    if (!tableSelection) {\n      return undefined;\n    }\n    const {\n      key, startRowIndex, startColIndex, endRowIndex, endColIndex,\n    } = tableSelection;\n\n    const table = document.getNode(key) as Block;\n    if (!table) {\n      return [];\n    }\n\n    for (let rowIndex = startRowIndex; rowIndex <= endRowIndex; rowIndex += 1) {\n      const row = table.nodes[rowIndex] as Block;\n      if (!row) {\n        return undefined;\n      }\n\n      for (let colIndex = startColIndex; colIndex <= endColIndex; colIndex += 1) {\n        const cell = row.nodes[colIndex];\n        if (!cell) {\n          continue;\n        }\n\n        const anchorText = cell.getFirstText();\n        const focusText = cell.getLastText();\n        if (!anchorText || !focusText) {\n          break;\n        }\n        ranges.push(\n          Selection.create({\n            anchor: Point.create({\n              key: anchorText.key,\n              // @ts-ignore\n              offset: 0,\n            }),\n            focus: Point.create({\n              key: focusText.key,\n              // @ts-ignore\n              offset: focusText.text.length,\n            }),\n          }),\n        );\n      }\n    }\n\n    return undefined;\n  });\n  return ranges;\n}\n"],"file":"generateRangesFromTableSelection.js"}