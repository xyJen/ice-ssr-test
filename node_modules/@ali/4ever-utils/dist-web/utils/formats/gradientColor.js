import { environment } from '@ali/4ever-cangjie';
export var GRADIENT_FLAG = '__';
export var GRADIENT_COLOR_STYLE = {
  // chrome 会自动去掉 webkit 前缀，需在 snapshot 和 全局 手动处理
  // https://github.com/facebook/react/issues/14200
  WebkitBackgroundClip: 'text',
  backgroundClip: 'text',
  WebkitTextFillColor: 'transparent',
  backgroundImage: 'linear-gradient(90deg, #404040, #404040)'
};
export var GRADIENT_STYLE_FLAG = 'WebkitBackgroundClip';
var CHROME_VERSION_DIVIDE = 72;
export var isGradientColor = function isGradientColor(color) {
  // 判断是否为渐变色，渐变色格式为 ‘#color1__#color2’
  return color && color.includes(GRADIENT_FLAG);
}; // 将 #color1_#color2 转换为 [color1, color2]

export var transferGradientColor = function transferGradientColor(color) {
  if (!isGradientColor(color)) {
    return [];
  }

  return color.split(GRADIENT_FLAG);
}; // safari 和 低版本(72-) chrome 对 -webkit-text-clip 支持有问题, 导致渐变色换行不显示，需特殊处理

export var notSupportClipText = function notSupportClipText() {
  var getChromeVersion = environment.getChromeVersion,
      IS_SAFARI = environment.IS_SAFARI;
  var chromeVersion = getChromeVersion();
  var isOldChrome = chromeVersion !== -1 && chromeVersion < CHROME_VERSION_DIVIDE;
  return isOldChrome || IS_SAFARI;
};
export var setGradientStyle = function setGradientStyle(color, style) {
  // 渐变色
  var _transferGradientColo = transferGradientColor(color),
      startColor = _transferGradientColo[0],
      endColor = _transferGradientColo[1];

  Object.keys(GRADIENT_COLOR_STYLE).forEach(function (key) {
    style[key] = GRADIENT_COLOR_STYLE[key];
  });
  style.backgroundImage = "linear-gradient(90deg, " + startColor + ", " + endColor + ")"; // 使用第一个颜色兜底

  style.color = startColor; // safari 和 低版本(72-) chrome 渐变色换行不显示，需添加一个属性

  if (notSupportClipText()) {
    style.WebkitBoxDecorationBreak = 'clone';
  }
}; // 存在下划线/删除线/非透明背景时，渐变色降级为第一个颜色

export var shouldDegradeGradient = function shouldDegradeGradient(style) {
  if (!(GRADIENT_STYLE_FLAG in style)) {
    return false;
  }

  var hasLineDecoration = ('textDecorationLine' in style);
  var hasBackground = style.backgroundColor && style.backgroundColor !== 'transparent';
  return hasLineDecoration || hasBackground;
};
export default {
  GRADIENT_COLOR_STYLE: GRADIENT_COLOR_STYLE,
  GRADIENT_STYLE_FLAG: GRADIENT_STYLE_FLAG,
  isGradientColor: isGradientColor,
  transferGradientColor: transferGradientColor,
  setGradientStyle: setGradientStyle,
  notSupportClipText: notSupportClipText,
  shouldDegradeGradient: shouldDegradeGradient
};
//# sourceMappingURL=gradientColor.js.map