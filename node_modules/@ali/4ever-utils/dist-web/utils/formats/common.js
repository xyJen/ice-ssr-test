import { cloneDeep } from 'lodash-es';
import { Block, Mark } from '@ali/4ever-cangjie';
import { headTypeConvert, headDefaultStyle } from "../../heading/heading";
import { SzUtil } from "./sz";
export function getDefaultHeadStyle(type) {
  return headDefaultStyle[headTypeConvert(type)];
}
export function getDefaultMarks(node, defaultParagraphSz) {
  if (!Block.isBlock(node)) return [];
  var defaultMarks = [Mark.create({
    type: 'sz',
    data: {
      value: SzUtil.fromHeadingType(node.type, defaultParagraphSz),
      szUnit: 'pt'
    }
  })];

  if (getDefaultHeadStyle(node.type)) {
    defaultMarks.push(Mark.create({
      type: 'bold'
    }));
  }

  return defaultMarks;
}
export var replaceObject = function replaceObject(obj, val, pathes) {
  var stack = pathes.split('.'); // PERF: 避免引用的对象更改，性能不好

  var copyed = cloneDeep(obj);
  if (stack.length < 1) return copyed;
  var target = copyed;

  while (stack.length > 1) {
    var key = stack.shift() || '';
    target[key] = target[key] || {};
    target = target[key];
  }

  target[stack.shift() || ''] = val;
  return copyed;
};
export var CommonFormatUtil = {
  getDefaultHeadStyle: getDefaultHeadStyle,
  getDefaultMarks: getDefaultMarks,
  replaceObject: replaceObject
};
//# sourceMappingURL=common.js.map