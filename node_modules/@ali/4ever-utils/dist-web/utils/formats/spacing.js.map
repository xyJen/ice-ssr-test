{"version":3,"sources":["../../../../src/utils/formats/spacing.ts"],"names":["headDefaultStyle","theme","fontSize","fsCfg","lineHeight","lineCfg","unitsConverter","ptToPx","linesToPx","lines","linePitch","pitch","spacing","defaultLinePitch","pxToLines","px","timesToPx","times","pxToTimes","ASL_LINE_HEIGHT","Object","keys","ACTUAL_MAP","map","h","parseFloat","sort","a","b","ASL_LINE_HEIGHT_LEN","length","PER_REG","findClosestLineHeight","target","height","DEFAULT","min","Infinity","i","newMin","Math","abs","fromHeadingType","type","headStyle","before","after","line","fromHtml","value","sz","toPT","NaN","test","fromBlock","paragraph","inheritedData","nodeSpacing","data","inheritedSpacing","defaultThemeSpacing","beforeAutospacing","defaultBeforeAutospacing","beforeLines","toPX","afterAutospacing","defaultAfterAutospacing","afterLines","lineRule","max","toStyle","block","style","marginTop","marginBottom","getLineHeightFromSpacing","defaultLineHeight","klass","SpacingUtil"],"mappings":"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","sourcesContent":["import { Block, BlockJSON } from '@ali/4ever-cangjie';\nimport { headDefaultStyle } from '../../heading/heading';\nimport type { SpacingProperties } from '../modelData';\nimport { theme, fontSize as fsCfg, lineHeight as lineCfg } from '../../theme';\nimport { unitsConverter, ptToPx } from '../toUnits';\n\n/**\n * 将行单位转换为 px 单位\n * @param lines\n * @param linePitch 网格系统相关参数\n * @returns\n */\nfunction linesToPx(lines: number, linePitch?: number) {\n  // 默认 linePitch 为 15.6 pt\n  const pitch = linePitch || theme.spacing.defaultLinePitch;\n  // px = lines * pitch\n  return lines * pitch;\n}\n\nfunction pxToLines(px: number, linePitch?: number) {\n  const pitch = linePitch || theme.spacing.defaultLinePitch;\n  // px = lines * pitch\n  return px / pitch;\n}\n\n/**\n * 将倍数的行距转换为 px\n * 倍数在导入时会被：\n * 原始数据：480，代表24pt\n * 480 / 240 = 2，变为倍数（实际上应该除以 20 转换为 pt，都是为了兼容老数据）\n * 所以：\n * px = times * 12 * 4 / 3\n */\nfunction timesToPx(times: number) {\n  return times * 16;\n}\n\n/**\n * 将 px 单位的行距转换为倍数\n * @param times\n * @returns\n */\nfunction pxToTimes(times: number) {\n  return times / 16;\n}\n\n// 提前排序便于快速查找\nconst ASL_LINE_HEIGHT = Object.keys(lineCfg.ACTUAL_MAP)\n  .map((h) => parseFloat(h))\n  .sort((a, b) => a - b);\nconst ASL_LINE_HEIGHT_LEN = ASL_LINE_HEIGHT.length;\nconst PER_REG = /^\\d*\\.?\\d*%$/;\n\n/**\n * 从默认的行高列表中找出最接近的行高\n */\nfunction findClosestLineHeight(target: number) {\n  let height = lineCfg.DEFAULT;\n  let min = Infinity;\n  // fast than some\n  for (let i = 0; i < ASL_LINE_HEIGHT_LEN; i++) {\n    const newMin = Math.abs(target - ASL_LINE_HEIGHT[i]);\n    if (newMin > min) {\n      break;\n    }\n    height = ASL_LINE_HEIGHT[i];\n    min = newMin;\n  }\n\n  return height;\n}\n\nfunction fromHeadingType(type: string): SpacingProperties {\n  const headStyle = headDefaultStyle[type];\n  if (!headStyle) return {};\n  return {\n    // 转换为绝对值单位 px\n    before: ptToPx(headStyle['margin-top']),\n    after: ptToPx(headStyle['margin-bottom']),\n    line: headStyle['line-height'] / lineCfg.DEFAULT,\n  };\n}\n\n/**\n * 从html解析行高并强制转换为接近的行高（倍数）\n * 支持 2、200%、20px等\n * 策略：尽量靠近原格式视觉\n * @param value\n * @param fontSize\n */\nfunction fromHtml(\n  value: string,\n  fontSize?: string | number,\n) {\n  if (!value) return ASL_LINE_HEIGHT[0];\n  const sz = unitsConverter.toPT(fontSize) || fsCfg.DEFAULT;\n  let height = NaN;\n\n  if (PER_REG.test(value)) {\n    // 特别处理 %，兼容：@word @shimo @tengxun\n    height = parseFloat(value) / 100;\n  } else {\n    // other: 转换为固定值 除以 字号 除以 1.7\n    height = unitsConverter.toPT(value) / sz / lineCfg.DEFAULT;\n  }\n\n  if (!height) return ASL_LINE_HEIGHT[0];\n\n  return findClosestLineHeight(height);\n}\n\n/**\n * 从节点数据解析 spacing\n * before 和 after 会被转换为 px 单位（与存量 asl 一致）\n * line 则转换为：\n * px 单位（lineRule !== auto）\n * 倍数 单位（lineRule === auto）\n * @param paragraph 块级元素\n * @param inheritedData 继承值\n * @param linePitch docGrid.linePitch pt 单位\n * @returns SpacingProperties\n */\nfunction fromBlock(paragraph: Block | BlockJSON, inheritedData?: Record<string, any>, linePitch?: number): SpacingProperties {\n  const { type } = paragraph;\n  const nodeSpacing = paragraph.data?.spacing;\n  const inheritedSpacing = inheritedData?.spacing;\n\n  let spacing: SpacingProperties = {};\n  if (inheritedSpacing) {\n    // 有继承数据的时候忽略编辑器默认的 spacing\n    spacing = {\n      ...inheritedSpacing,\n      ...nodeSpacing,\n    };\n  } else {\n    const defaultThemeSpacing = fromHeadingType(type);\n    spacing = {\n      ...defaultThemeSpacing,\n      ...nodeSpacing,\n    };\n  }\n\n  if (spacing.beforeAutospacing) {\n    spacing.before = theme.spacing.defaultBeforeAutospacing;\n    // 删除无效字段避免影响提取公共属性\n    delete spacing.beforeLines;\n  } else if (spacing.beforeLines) {\n    spacing.before = linesToPx(spacing.beforeLines, linePitch);\n  } else if (typeof spacing.before === 'string') {\n    // 默认单位转换为 px（word导出数据含xxpx、xxpt）\n    spacing.before = unitsConverter.toPX(spacing.before);\n  }\n\n  if (spacing.afterAutospacing) {\n    spacing.after = theme.spacing.defaultAfterAutospacing;\n    delete spacing.afterLines;\n  } else if (spacing.afterLines) {\n    spacing.after = linesToPx(spacing.afterLines, linePitch);\n  } else if (typeof spacing.after === 'string') {\n    spacing.after = unitsConverter.toPX(spacing.after);\n  }\n\n  if ('line' in spacing) {\n    const { line, lineRule = 'auto' } = spacing;\n    // 存量数据中存在字符串类型的 line: 1.46667px（脏）,18px（正确）\n    // 这里转换为倍数，同时防止 line 过小\n    // word px 到 行高 公式：line = px / 16\n    if (typeof line === 'string') {\n      spacing.line = pxToTimes(unitsConverter.toPX(spacing.line)) || 1;\n    }\n    if (spacing.line && lineRule !== 'auto') {\n      // 固定值也需要做最小限制（24 * 0.6 = 14）\n      spacing.line = Math.max(14, timesToPx(spacing.line));\n    }\n    if (lineRule === 'auto') {\n      // 对极小值多倍做限制，避免粘连（1/1.7 = 0.6）\n      spacing.line = Math.max(0.6, spacing.line || 0);\n    }\n  }\n\n  return spacing;\n}\n\n/**\n * 将节点的 spacing 数据转换为 css 样式\n * 优先走 userSet to actualSet 隐射表，否则按照 * 1.7 计算行高\n */\nfunction toStyle(block: Block | BlockJSON, inheritedData?: Record<string, any>, linePitch?: number): React.CSSProperties {\n  const style: React.CSSProperties = {};\n\n  // PERF: 提前 return 提升性能\n  if (!block.data?.spacing && !inheritedData?.spacing && !headDefaultStyle[block.type]) {\n    return style;\n  }\n\n  const spacing = fromBlock(block, inheritedData, linePitch);\n  if (spacing.before) {\n    style.marginTop = spacing.before;\n  }\n\n  if (spacing.after) {\n    style.marginBottom = spacing.after;\n  }\n\n  if (spacing.line) {\n    const { lineRule = 'auto' } = spacing;\n    if (lineRule === 'auto') {\n      // 倍数\n      style.lineHeight = `${lineCfg.ACTUAL_MAP[spacing.line] || spacing.line * lineCfg.DEFAULT}`;\n    } else if (lineRule === 'exact') {\n      style.lineHeight = `${spacing.line}px`;\n    } else if (lineRule === 'atLeast') {\n      // 最小值降级\n      style.lineHeight = 'normal';\n    }\n  }\n\n  return style;\n}\n\nfunction getLineHeightFromSpacing(spacing?: SpacingProperties) {\n  const defaultLineHeight = `${lineCfg.DEFAULT}`;\n  if (!spacing?.line) return defaultLineHeight;\n  return `${toStyle({\n    klass: 'block',\n    type: 'paragraph',\n    data: {\n      spacing,\n    },\n  }).lineHeight || defaultLineHeight}`;\n}\n\nexport const SpacingUtil = {\n  fromBlock,\n  fromHtml,\n  fromHeadingType,\n  toStyle,\n  getLineHeightFromSpacing,\n  linesToPx,\n  pxToLines,\n  timesToPx,\n  pxToTimes,\n};\n"],"file":"spacing.js"}