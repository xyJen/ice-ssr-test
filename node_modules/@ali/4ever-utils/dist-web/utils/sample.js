import _extends from "@babel/runtime/helpers/extends";

/**
 * 装饰函数对齐进行采样
 * @param fn 采样函数
 * @param options 采样配置
 */
export function sample(fn, options) {
  var divisor = options.sample;
  var threshold = 1 / divisor;
  return function _sample() {
    if (Math.random() < threshold) {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      fn.apply(this, args);
    }
  };
}
/**
 * 函数采样装饰器
 * @param options
 */

export function Sample(options) {
  return function deco(target, propertyKey, descriptor) {
    if (!descriptor || typeof descriptor.value !== 'function') {
      throw new TypeError("Only methods can be decorated with @Sample. <" + String(propertyKey) + "> is not a method!");
    }

    return _extends({}, descriptor, {
      value: sample(descriptor.value, options)
    });
  };
}
//# sourceMappingURL=sample.js.map