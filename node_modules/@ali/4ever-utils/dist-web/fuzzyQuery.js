import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
var specialChars = '\\/[]{}()+-*?|,^$.<>:&`';
/**
 * 获取模糊搜索的正则表达式
 * @param text 模糊匹配的目标对象字符串
 * @returns 用于模糊匹配 text 的正则
 */

export var getFuzzyQuery = function getFuzzyQuery(text) {
  return new RegExp(Array.from(text).map(function (c) {
    return specialChars.indexOf(c) !== -1 ? "\\" + c : c.toLowerCase();
  }).join('(.*?)'));
};
export function fuzzySearch(_x, _x2, _x3) {
  return _fuzzySearch.apply(this, arguments);
}

function _fuzzySearch() {
  _fuzzySearch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(items, query, options) {
    var fuzzy;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return import('fuzzaldrin-plus');

          case 2:
            fuzzy = _context.sent;
            return _context.abrupt("return", fuzzy.filter(items, query, options));

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _fuzzySearch.apply(this, arguments);
}
//# sourceMappingURL=fuzzyQuery.js.map