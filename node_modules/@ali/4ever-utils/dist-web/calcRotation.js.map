{"version":3,"sources":["../../src/calcRotation.ts"],"names":["calcRotationObj","w","h","r","Math","PI","diag","sqrt","pow","tlX","cos","atan","tlY","sin","trX","trY","blX","blY","brX","brY","width","round","max","abs","height","translateX","min","translateY","rWidth","rHeight","calcXAfterRotation","x","y","rotation","calcYAfterRotation","normalizeAngle","angle","ceil"],"mappings":"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","sourcesContent":["export function calcRotationObj(w: any, h: any, r: any) {\n  r = r * Math.PI / 180;\n  const diag = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n  const tlX = - ((Math.cos(Math.atan(h / w) + r) * diag) / 2);\n  const tlY = - ((Math.sin(Math.atan(h / w) + r) * diag) / 2);\n  const trX = ((Math.cos(Math.atan(h / w) - r) * diag) / 2);\n  const trY = - ((Math.sin(Math.atan(h / w) - r) * diag) / 2);\n  const blX = - trX;\n  const blY = - trY;\n  const brX = - tlX;\n  const brY = - tlY;\n  const width = Math.round(Math.max(Math.abs(tlX), Math.abs(trX)) * 2);\n  const height = Math.round(Math.max(Math.abs(tlY), Math.abs(trY)) * 2);\n  const translateX = - Math.round(Math.min(tlX, trX, blX, brX) + w / 2);\n  const translateY = - Math.round(Math.min(tlY, trY, blY, brY) + h / 2);\n  return {\n    rWidth: width,\n    rHeight: height,\n    translateX,\n    translateY,\n    tlX,\n    tlY,\n    trX,\n    trY,\n  };\n}\n\nexport function calcXAfterRotation(x: any, y: any, rotation: any, translateX: any = 0) {\n  return x * Math.cos(rotation / 180 * Math.PI) - y * Math.sin(rotation / 180 * Math.PI) + translateX;\n}\n\nexport function calcYAfterRotation(x: any, y: any, rotation: any, translateY: any = 0) {\n  return x * Math.sin(rotation / 180 * Math.PI) + y * Math.cos(rotation / 180 * Math.PI) + translateY;\n}\n\nexport function normalizeAngle(angle: any, round: boolean = false) {\n  // normalize to 0 - 360\n  if (round) {\n    angle = Math.round(angle);\n  }\n  return angle + Math.ceil(-angle / 360) * 360\n}\n"],"file":"calcRotation.js"}