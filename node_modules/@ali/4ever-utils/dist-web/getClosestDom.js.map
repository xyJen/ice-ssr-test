{"version":3,"sources":["../../src/getClosestDom.ts"],"names":["Block","Inline","constants","cangjieKey","Selector","key","findDOMNodeByKey","window","document","body","querySelector","isListNode","node","isBlock","data","list","pi","extra","inList","getClosestDom","nodeDom","isInline","type","closest","leafBlock","blockquote","calloutPr","e"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAA8BC,SAA9B,QAA+C,oBAA/C;IAEaC,U,GAAeD,SAAS,CAACE,Q,CAA9BC,G;AAER,OAAO,SAASC,gBAAT,CAA0BD,GAA1B,EAAuC;AAC5C,SAAOE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,aAArB,OAAuCP,UAAvC,WAAsDE,GAAtD,SAAP;AACD;AAED,OAAO,SAASM,UAAT,CAAoBC,IAApB,EAAgC;AACrC,MAAIZ,KAAK,CAACa,OAAN,CAAcD,IAAd,CAAJ,EAAyB;AAAA;;AACvB;AACA,WAAOA,IAAI,CAACE,IAAL,CAAUC,IAAV,sBAAkBH,IAAI,CAACE,IAAL,CAAUE,EAA5B,4CAAkB,cAAcC,KAAhC,qBAAkB,oBAAqBC,MAAvC,CAAP;AACD;;AAED,SAAO,KAAP;AACD;AAED,OAAO,SAASC,aAAT,CAAuBP,IAAvB,EAA6D;AAClE,MAAIQ,OAAuB,GAAG,IAA9B;AACA,MAAI,EAACR,IAAD,YAACA,IAAI,CAAEP,GAAP,CAAJ,EAAgB,OAAOe,OAAP;;AAChB,MAAI;AACFA,IAAAA,OAAO,GAAGd,gBAAgB,CAACM,IAAI,CAACP,GAAN,CAA1B;AACA,QAAI,CAACe,OAAL,EAAc,OAAO,IAAP;;AACd,QAAInB,MAAM,CAACoB,QAAP,CAAgBT,IAAhB,KAAyBA,IAAI,CAACU,IAAL,KAAc,OAA3C,EAAoD;AAClDF,MAAAA,OAAO,GAAGA,OAAO,CAACV,aAAR,CAAsB,KAAtB,CAAV;AACD,KAFD,MAEO,IAAIV,KAAK,CAACa,OAAN,CAAcD,IAAd,CAAJ,EAAyB;AAC9BQ,MAAAA,OAAO,GAAGA,OAAO,CAACG,OAAR,OAAoBrB,SAAS,CAACE,QAAV,CAAmBoB,SAAvC,WAAwDJ,OAAlE;AACD;;AACD,QAAIA,OAAO,IAAIR,IAAI,CAACE,IAAL,CAAUW,UAAzB,EAAqC;AACnC;AACAL,MAAAA,OAAO,GAAGA,OAAO,CAACG,OAAR,CAAgB,YAAhB,KAAiCH,OAA3C;AACD,KAHD,MAGO,IAAIA,OAAO,IAAIT,UAAU,CAACC,IAAD,CAAzB,EAAiC;AACtC;AACAQ,MAAAA,OAAO,GAAGA,OAAO,CAACG,OAAR,CAAgB,sBAAhB,KAA2CH,OAArD;AACD,KAHM,MAGA,IAAIA,OAAO,IAAIR,IAAI,CAACE,IAAL,CAAUY,SAAzB,EAAoC;AACzCN,MAAAA,OAAO,GAAGA,OAAO,CAACG,OAAR,CAAgB,4BAAhB,KAAiDH,OAA3D;AACD;;AACD,WAAOA,OAAP;AACD,GAlBD,CAkBE,OAAOO,CAAP,EAAU,CACV;AACD;;AACD,SAAOP,OAAP;AACD","sourcesContent":["import { Block, Inline, Node, constants } from '@ali/4ever-cangjie';\n\nconst { key: cangjieKey } = constants.Selector;\n\nexport function findDOMNodeByKey(key: string) {\n  return window.document.body.querySelector(`[${cangjieKey}=\"${key}\"]`);\n}\n\nexport function isListNode(node: Node) {\n  if (Block.isBlock(node)) {\n    // 排版模式下 data.list 未下放到 nodes.nodes 中\n    return node.data.list || node.data.pi?.extra?.inList;\n  }\n\n  return false;\n}\n\nexport function getClosestDom(node: Block | Inline): Element | null {\n  let nodeDom: Element | null = null;\n  if (!node?.key) return nodeDom;\n  try {\n    nodeDom = findDOMNodeByKey(node.key);\n    if (!nodeDom) return null;\n    if (Inline.isInline(node) && node.type === 'image') {\n      nodeDom = nodeDom.querySelector('img');\n    } else if (Block.isBlock(node)) {\n      nodeDom = nodeDom.closest(`[${constants.Selector.leafBlock}]`) || nodeDom;\n    }\n    if (nodeDom && node.data.blockquote) {\n      // 引用\n      nodeDom = nodeDom.closest('blockquote') || nodeDom;\n    } else if (nodeDom && isListNode(node)) {\n      // 列表和任务\n      nodeDom = nodeDom.closest('[data-testid=\"list\"]') || nodeDom;\n    } else if (nodeDom && node.data.calloutPr) {\n      nodeDom = nodeDom.closest('[data-cangjie-group-block]') || nodeDom;\n    }\n    return nodeDom;\n  } catch (e) {\n    // do nothing\n  }\n  return nodeDom;\n}\n"],"file":"getClosestDom.js"}