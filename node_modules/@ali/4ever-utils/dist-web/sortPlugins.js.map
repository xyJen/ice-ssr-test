{"version":3,"sources":["../../src/sortPlugins.ts"],"names":["findAllDeps","runAfter","array","children","length","child","pop","deps","forEach","d","some","a","push","sortPlugins","pluginsFactoryMap","items","factories","Object","keys","key","factory","console","error","unshift","f","itemIndex","findIndex","item","allDeps","depsIndexes","map","dep","i","maxIndex","Math","max","splice"],"mappings":"AAaA,SAASA,WAAT,CAAwBC,QAAxB,EAAsD;AACpD,MAAMC,KAAK,GAAGD,QAAQ,IAAI,EAA1B;AACA,MAAME,QAAQ,aAAOD,KAAP,CAAd;;AACA,SAAOC,QAAQ,CAACC,MAAhB,EAAwB;AACtB,QAAMC,KAAK,GAAGF,QAAQ,CAACG,GAAT,EAAd;AACA,QAAMC,IAAI,GAAG,CAAAF,KAAK,QAAL,YAAAA,KAAK,CAAEJ,QAAP,KAAmB,EAAhC;AACAM,IAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,CAAD,EAAO;AAClB,UAAI,CAACP,KAAK,CAACQ,IAAN,CAAW,UAACC,CAAD;AAAA,eAAOA,CAAC,KAAKF,CAAb;AAAA,OAAX,CAAL,EAAiC;AAC/BP,QAAAA,KAAK,CAACU,IAAN,CAAWH,CAAX;AACAN,QAAAA,QAAQ,CAACS,IAAT,CAAcH,CAAd;AACD;AACF,KALD;AAMD;;AACD,SAAOP,KAAP;AACD;;AAED,OAAO,SAASW,WAAT,CACLC,iBADK,EAEL;AACA,MAAMC,KAA2B,GAAG,EAApC;AACA,MAAMC,SAAqB,GAAG,EAA9B;;AACA,MAAI,CAACF,iBAAL,EAAwB;AACtB,WAAOC,KAAP;AACD;;AACDE,EAAAA,MAAM,CAACC,IAAP,CAAYJ,iBAAZ,EAA+BN,OAA/B,CAAuC,UAACW,GAAD,EAAS;AAC9C,QAAMC,OAAO,GAAGN,iBAAiB,CAACK,GAAD,CAAjC;;AACA,QAAI,CAACC,OAAL,EAAc;AACZC,MAAAA,OAAO,CAACC,KAAR,aAAwBH,GAAxB;AACA;AACD;;AACDH,IAAAA,SAAS,CAACO,OAAV,CAAkBH,OAAlB;AACAL,IAAAA,KAAK,CAACH,IAAN,CAAW;AAAEO,MAAAA,GAAG,EAAHA,GAAF;AAAOC,MAAAA,OAAO,EAAPA;AAAP,KAAX;AACD,GARD;AAUAJ,EAAAA,SAAS,CAACR,OAAV,CAAkB,UAACgB,CAAD,EAAO;AAAA;;AACvB,QAAMC,SAAS,GAAGV,KAAK,CAACW,SAAN,CAAgB;AAAA,UAAGN,OAAH,QAAGA,OAAH;AAAA,aAAiBA,OAAO,KAAKI,CAA7B;AAAA,KAAhB,CAAlB;AACA,QAAMG,IAAI,GAAGZ,KAAK,CAACU,SAAD,CAAlB;;AACA,QAAIE,IAAJ,qCAAIA,IAAI,CAAEP,OAAN,CAAcnB,QAAlB,aAAI,sBAAwBG,MAA5B,EAAoC;AAClC,UAAMwB,OAAO,GAAG5B,WAAW,CAAC2B,IAAI,CAACP,OAAL,CAAanB,QAAd,CAA3B;AACA,UAAM4B,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,UAACC,GAAD;AAAA,eAC9BhB,KAAK,CAACW,SAAN,CAAgB,UAACM,CAAD;AAAA,iBAAOA,CAAC,CAACZ,OAAF,KAAcW,GAArB;AAAA,SAAhB,CAD8B;AAAA,OAAZ,CAApB;AAGA,UAAME,QAAQ,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,EAAQL,WAAR,CAArB;;AACA,UAAII,QAAQ,GAAGR,SAAf,EAA0B;AACxBV,QAAAA,KAAK,CAACqB,MAAN,CAAaX,SAAb,EAAwB,CAAxB;AACAV,QAAAA,KAAK,CAACqB,MAAN,CAAaH,QAAb,EAAuB,CAAvB,EAA0BN,IAA1B;AACD;AACF;AACF,GAdD;AAgBA,SAAOZ,KAAP;AACD","sourcesContent":["import { Plugin } from '@ali/4ever-cangjie';\n\ntype RunSequence<P> = {\n  runAfter?: Array<Factory<P>>;\n};\n\nexport type Factory<P> = ((...args: any) => P) & RunSequence<P>;\n\ntype PluginItem<P> = {\n  key: string;\n  factory: Factory<P>;\n};\n\nfunction findAllDeps<P>(runAfter?: Array<Factory<P>>) {\n  const array = runAfter || [];\n  const children = [...array];\n  while (children.length) {\n    const child = children.pop();\n    const deps = child?.runAfter || [];\n    deps.forEach((d) => {\n      if (!array.some((a) => a === d)) {\n        array.push(d);\n        children.push(d);\n      }\n    });\n  }\n  return array;\n}\n\nexport function sortPlugins<P = Plugin>(\n  pluginsFactoryMap: Record<string, Factory<P>>,\n) {\n  const items: Array<PluginItem<P>> = [];\n  const factories: Function[] = [];\n  if (!pluginsFactoryMap) {\n    return items;\n  }\n  Object.keys(pluginsFactoryMap).forEach((key) => {\n    const factory = pluginsFactoryMap[key];\n    if (!factory) {\n      console.error(`plugin ${key} is undefined`);\n      return;\n    }\n    factories.unshift(factory);\n    items.push({ key, factory });\n  });\n\n  factories.forEach((f) => {\n    const itemIndex = items.findIndex(({ factory }) => factory === f);\n    const item = items[itemIndex];\n    if (item?.factory.runAfter?.length) {\n      const allDeps = findAllDeps(item.factory.runAfter);\n      const depsIndexes = allDeps.map((dep) =>\n        items.findIndex((i) => i.factory === dep),\n      );\n      const maxIndex = Math.max(...depsIndexes);\n      if (maxIndex > itemIndex) {\n        items.splice(itemIndex, 1);\n        items.splice(maxIndex, 0, item);\n      }\n    }\n  });\n\n  return items;\n}\n"],"file":"sortPlugins.js"}