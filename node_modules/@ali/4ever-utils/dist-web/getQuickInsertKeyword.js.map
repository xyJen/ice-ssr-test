{"version":3,"sources":["../../src/getQuickInsertKeyword.ts"],"names":["injectComposing","txt","composing","startOffset","pointOffset","offset","length","startTxt","slice","endTxt","getKeyword","controller","type","value","document","decorations","selection","deco","find","item","mark","start","end","key","text","getNode","point","anchor","isCollapsed","isTextPoint"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAT,CAAyBC,GAAzB,EAAsCC,SAAtC,EAAyDC,WAAzD,EAA8EC,WAA9E,EAAmG;AACjG,MAAMC,MAAM,GAAGD,WAAW,GAAGD,WAA7B;;AACA,MAAIE,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAGJ,GAAG,CAACK,MAA/B,EAAuC;AACrC,WAAOL,GAAP;AACD;;AACD,MAAMM,QAAQ,GAAGN,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAaH,MAAb,CAAjB;AACA,MAAMI,MAAM,GAAGR,GAAG,CAACO,KAAJ,CAAUH,MAAV,CAAf;AACA,SAAOE,QAAQ,GAAGL,SAAX,GAAuBO,MAA9B;AACD;;AAED,OAAO,SAASC,UAAT,CAAoBC,UAApB,QAAwE;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,0BAGzED,UAAU,CAACE,KAH8D;AAAA,MAE3EC,QAF2E,qBAE3EA,QAF2E;AAAA,MAEjEC,WAFiE,qBAEjEA,WAFiE;AAAA,MAEpDb,SAFoD,qBAEpDA,SAFoD;AAAA,MAEzCc,SAFyC,qBAEzCA,SAFyC;AAI7E,MAAMC,IAAI,GAAGF,WAAW,CAACG,IAAZ,CAAiB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,IAAL,CAAUR,IAAV,KAAmBA,IAA7B;AAAA,GAAjB,CAAb;;AAEA,MAAI,CAACK,IAAL,EAAW;AACT,WAAO,EAAP;AACD;;AAR4E,MAUrEI,KAVqE,GAUtDJ,IAVsD,CAUrEI,KAVqE;AAAA,MAU9DC,GAV8D,GAUtDL,IAVsD,CAU9DK,GAV8D,EAW7E;;AACA,MAAID,KAAK,CAACE,GAAN,KAAcD,GAAG,CAACC,GAAtB,EAA2B;AACzB,QAAMC,IAAI,GAAGV,QAAQ,CAACW,OAAT,CAAiBJ,KAAK,CAACE,GAAvB,CAAb;AACA,QAAItB,GAAG,GAAGuB,IAAI,GAAGA,IAAI,CAACA,IAAL,CAAUhB,KAAV,CAAgBa,KAAK,CAAChB,MAAtB,EAA8BiB,GAAG,CAACjB,MAAlC,CAAH,GAA+C,EAA7D;AAFyB,QAGTqB,KAHS,GAGCV,SAHD,CAGjBW,MAHiB,EAIzB;;AACA,QAAIzB,SAAS,IAAIc,SAAS,CAACY,WAAvB,IAAsCF,KAAK,CAACG,WAAN,EAAtC,IAA6DH,KAAK,CAACH,GAAN,KAAcF,KAAK,CAACE,GAArF,EAA0F;AACxFtB,MAAAA,GAAG,GAAGD,eAAe,CAACC,GAAD,EAAMC,SAAN,EAAiBmB,KAAK,CAAChB,MAAvB,EAA+BqB,KAAK,CAACrB,MAArC,CAArB;AACD;;AACD,WAAOJ,GAAP;AACD,GArB4E,CAuB7E;;;AACA,SAAO,EAAP;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\n\n/**\n * 注入 composing 至文本中\n * @param txt 阶段后的文本\n * @param composing\n * @param startOffset 截断的起始位置\n * @param pointOffset composing 位置\n */\nfunction injectComposing(txt: string, composing: string, startOffset: number, pointOffset: number) {\n  const offset = pointOffset - startOffset;\n  if (offset < 0 || offset > txt.length) {\n    return txt;\n  }\n  const startTxt = txt.slice(0, offset);\n  const endTxt = txt.slice(offset);\n  return startTxt + composing + endTxt;\n}\n\nexport function getKeyword(controller: Controller, { type }: { type: string }) {\n  const {\n    document, decorations, composing, selection,\n  } = controller.value;\n  const deco = decorations.find((item) => item.mark.type === type);\n\n  if (!deco) {\n    return '';\n  }\n\n  const { start, end } = deco;\n  // 同一个 text 节点\n  if (start.key === end.key) {\n    const text = document.getNode(start.key);\n    let txt = text ? text.text.slice(start.offset, end.offset) : '';\n    const { anchor: point } = selection;\n    // 若存在 composing，则给文本注入\n    if (composing && selection.isCollapsed && point.isTextPoint() && point.key === start.key) {\n      txt = injectComposing(txt, composing, start.offset, point.offset);\n    }\n    return txt;\n  }\n\n  // 目前暂时不存在 Text 被分割的情况\n  return '';\n}\n"],"file":"getQuickInsertKeyword.js"}