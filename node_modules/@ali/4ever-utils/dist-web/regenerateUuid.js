import _extends from "@babel/runtime/helpers/extends";
import { Block, omitEmptyObj } from '@ali/4ever-cangjie';
import { uniqueId } from "./utils/uniqueId";
import { omit } from 'lodash-es';
/**
 * 重新生成 fragment 中的 uuid，并替换用户数据
 * @param fragment 
 * @param generateUuid 
 * @returns 
 */

export function regenerateUuid(fragment, generateUuid) {
  if (generateUuid === void 0) {
    generateUuid = uniqueId;
  }

  var _ref = fragment.data || {},
      _ref$userData = _ref.userData,
      userData = _ref$userData === void 0 ? {} : _ref$userData;

  var uids = Object.keys(userData);
  var nextData = userData;
  fragment = fragment.mapDescendants(function (node) {
    if (Block.isBlock(node) && node.data.uuid) {
      // 重新生成 uuid
      var oldUuid = node.data.uuid;
      var newUuid = node.data.refblockUUID || generateUuid(); // 修改 userData 中的 uuid

      if (oldUuid) {
        uids.forEach(function (uid) {
          var _extends2, _extends3;

          nextData = _extends({}, nextData, (_extends3 = {}, _extends3[uid] = _extends({}, omit(nextData[uid], oldUuid), (_extends2 = {}, _extends2[newUuid] = userData[uid][oldUuid], _extends2)), _extends3));
        });
      }

      node = node.set('data', _extends({}, node.data, {
        uuid: newUuid
      }));
    }

    return node;
  });

  if (nextData !== userData) {
    return fragment.set('data', omitEmptyObj(_extends({}, fragment.data, {
      userData: nextData
    })));
  }

  return fragment;
}
//# sourceMappingURL=regenerateUuid.js.map