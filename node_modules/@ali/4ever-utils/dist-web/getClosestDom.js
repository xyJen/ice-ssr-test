import { Block, Inline, constants } from '@ali/4ever-cangjie';
var cangjieKey = constants.Selector.key;
export function findDOMNodeByKey(key) {
  return window.document.body.querySelector("[" + cangjieKey + "=\"" + key + "\"]");
}
export function isListNode(node) {
  if (Block.isBlock(node)) {
    var _node$data$pi, _node$data$pi$extra;

    // 排版模式下 data.list 未下放到 nodes.nodes 中
    return node.data.list || ((_node$data$pi = node.data.pi) == null ? void 0 : (_node$data$pi$extra = _node$data$pi.extra) == null ? void 0 : _node$data$pi$extra.inList);
  }

  return false;
}
export function getClosestDom(node) {
  var nodeDom = null;
  if (!(node != null && node.key)) return nodeDom;

  try {
    nodeDom = findDOMNodeByKey(node.key);
    if (!nodeDom) return null;

    if (Inline.isInline(node) && node.type === 'image') {
      nodeDom = nodeDom.querySelector('img');
    } else if (Block.isBlock(node)) {
      nodeDom = nodeDom.closest("[" + constants.Selector.leafBlock + "]") || nodeDom;
    }

    if (nodeDom && node.data.blockquote) {
      // 引用
      nodeDom = nodeDom.closest('blockquote') || nodeDom;
    } else if (nodeDom && isListNode(node)) {
      // 列表和任务
      nodeDom = nodeDom.closest('[data-testid="list"]') || nodeDom;
    } else if (nodeDom && node.data.calloutPr) {
      nodeDom = nodeDom.closest('[data-cangjie-group-block]') || nodeDom;
    }

    return nodeDom;
  } catch (e) {// do nothing
  }

  return nodeDom;
}
//# sourceMappingURL=getClosestDom.js.map