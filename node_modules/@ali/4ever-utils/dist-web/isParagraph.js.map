{"version":3,"sources":["../../src/isParagraph.ts"],"names":["getPointAndBlockOnSelection","controller","value","rangeSelection","document","startPoint","getStart","startBlock","getNode","key","endPoint","getEnd","endBlock","isSelectionAtSameBlock","isAtStartOfParagraph","isAtStartOfNode","isAtEndOfParagraph","isAtEndOfNode"],"mappings":"AASA;AACA;AACA;AACA,OAAO,SAASA,2BAAT,CAAqCC,UAArC,EAAkF;AAAA,0BAClDA,UAAU,CAACC,KADuC;AAAA,MAC/EC,cAD+E,qBAC/EA,cAD+E;AAAA,MAC/DC,QAD+D,qBAC/DA,QAD+D;AAEvF,MAAMC,UAAU,GAAGF,cAAc,CAACG,QAAf,CAAwBF,QAAxB,CAAnB;AACA,MAAMG,UAAU,GAAGH,QAAQ,CAACI,OAAT,CAAiBH,UAAU,CAACI,GAA5B,CAAnB;AACA,MAAMC,QAAQ,GAAGP,cAAc,CAACQ,MAAf,CAAsBP,QAAtB,CAAjB;AACA,MAAMQ,QAAQ,GAAGR,QAAQ,CAACI,OAAT,CAAiBE,QAAQ,CAACD,GAA1B,CAAjB;AACA,SAAO;AACLJ,IAAAA,UAAU,EAAVA,UADK;AAELE,IAAAA,UAAU,EAAVA,UAFK;AAGLG,IAAAA,QAAQ,EAARA,QAHK;AAILE,IAAAA,QAAQ,EAARA;AAJK,GAAP;AAMD;AAED;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,CAAgCZ,UAAhC,EAAiE;AAAA,8BACrCD,2BAA2B,CAACC,UAAD,CADU;AAAA,MAC9DM,UAD8D,yBAC9DA,UAD8D;AAAA,MAClDK,QADkD,yBAClDA,QADkD;;AAEtE,SAAOL,UAAU,KAAKK,QAAtB;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASE,oBAAT,CAA8Bb,UAA9B,EAA+D;AAAA,+BACjCD,2BAA2B,CAACC,UAAD,CADM;AAAA,MAC5DM,UAD4D,0BAC5DA,UAD4D;AAAA,MAChDF,UADgD,0BAChDA,UADgD;;AAEpE,SAAO,CAAC,EAAEE,UAAU,IAAIF,UAAU,CAACU,eAAX,CAA2BR,UAA3B,CAAhB,CAAR;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASS,kBAAT,CAA4Bf,UAA5B,EAA6D;AAAA,+BACnCD,2BAA2B,CAACC,UAAD,CADQ;AAAA,MAC1DW,QAD0D,0BAC1DA,QAD0D;AAAA,MAChDF,QADgD,0BAChDA,QADgD;;AAElE,SAAO,CAAC,EAAEE,QAAQ,IAAIF,QAAQ,CAACO,aAAT,CAAuBL,QAAvB,CAAd,CAAR;AACD","sourcesContent":["import { Controller, EdgePoint, Node, TextPoint } from '@ali/4ever-cangjie';\n\nexport interface IRangeSelectionInfo {\n  startPoint: TextPoint | EdgePoint;\n  endPoint: TextPoint | EdgePoint;\n  startBlock: Node | null;\n  endBlock: Node | null;\n}\n\n/**\n * @description 获取选区开始与结束位置信息\n */\nexport function getPointAndBlockOnSelection(controller: Controller): IRangeSelectionInfo {\n  const { rangeSelection, document } = controller.value;\n  const startPoint = rangeSelection.getStart(document);\n  const startBlock = document.getNode(startPoint.key);\n  const endPoint = rangeSelection.getEnd(document);\n  const endBlock = document.getNode(endPoint.key);\n  return {\n    startPoint,\n    startBlock,\n    endPoint,\n    endBlock,\n  };\n}\n\n/**\n * @description 获取选区是否在同个节点上\n */\nexport function isSelectionAtSameBlock(controller: Controller): boolean {\n  const { startBlock, endBlock } = getPointAndBlockOnSelection(controller);\n  return startBlock === endBlock;\n}\n\n/**\n * @description 获取选区是否在段落开始位置\n */\nexport function isAtStartOfParagraph(controller: Controller): boolean {\n  const { startBlock, startPoint } = getPointAndBlockOnSelection(controller);\n  return !!(startBlock && startPoint.isAtStartOfNode(startBlock));\n}\n\n/**\n * @description 获取选区是否在段落结束位置\n */\nexport function isAtEndOfParagraph(controller: Controller): boolean {\n  const { endBlock, endPoint } = getPointAndBlockOnSelection(controller);\n  return !!(endBlock && endPoint.isAtEndOfNode(endBlock));\n}\n"],"file":"isParagraph.js"}