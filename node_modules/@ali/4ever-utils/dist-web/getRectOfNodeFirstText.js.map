{"version":3,"sources":["../../src/getRectOfNodeFirstText.ts"],"names":["Block","getClosestDom","HEADING_TYPE","Set","isHeading","node","isBlock","has","type","isParagraph","getRectOfNodeFirstText","rect","nodeDom","nodeDomRect","getBoundingClientRect","top","left","firstTextChild","querySelector","range","document","createRange","setStart","setEnd","textRect","getClientRects","height","e","console","error"],"mappings":"AAAA,SAASA,KAAT,QAAsB,oBAAtB;AACA,SAASC,aAAT;AASA,IAAMC,YAAY,GAAG,IAAIC,GAAJ,CAAQ,CAC3B,WAD2B,EAE3B,WAF2B,EAG3B,WAH2B,EAI3B,WAJ2B,EAK3B,WAL2B,EAM3B,WAN2B,CAAR,CAArB;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAgC;AAC9B,SAAOL,KAAK,CAACM,OAAN,CAAcD,IAAd,KAAuBH,YAAY,CAACK,GAAb,CAAiBF,IAAI,CAACG,IAAtB,CAA9B;AACD;;AAED,SAASC,WAAT,CAAqBJ,IAArB,EAAkC;AAChC,SAAOL,KAAK,CAACM,OAAN,CAAcD,IAAd,KAAuBA,IAAI,CAACG,IAAL,KAAc,WAA5C;AACD;AAED;AACA;AACA;AACA;;;AACA,eAAe,SAASE,sBAAT,CAAgCL,IAAhC,EAA6C;AAC1D,MAAIM,IAAJ;;AACA,MAAI;AACF,QAAMC,OAAO,GAAGX,aAAa,CAACI,IAAD,CAA7B;AACA,QAAI,CAACO,OAAL,EAAc,OAAOD,IAAP;AAEd,QAAME,WAAW,GAAGD,OAAO,CAACE,qBAAR,EAApB;;AACA,QAAI,CAACD,WAAL,EAAkB;AAChB,aAAO,IAAP;AACD;;AACDF,IAAAA,IAAI,GAAG;AACLI,MAAAA,GAAG,EAAEF,WAAW,CAACE,GADZ;AAELC,MAAAA,IAAI,EAAEH,WAAW,CAACG;AAFb,KAAP;;AAKA,QAAIZ,SAAS,CAACC,IAAD,CAAT,IAAmBI,WAAW,CAACJ,IAAD,CAAlC,EAA0C;AACxC;AACA,UAAMY,cAAc,GAAGL,OAAO,CAACM,aAAR,CAAsB,qBAAtB,CAAvB;;AAEA,UAAID,cAAJ,EAAoB;AAClB,YAAME,KAAK,GAAGC,QAAQ,CAACC,WAAT,EAAd;AACAF,QAAAA,KAAK,CAACG,QAAN,CAAeL,cAAf,EAA+B,CAA/B;AACAE,QAAAA,KAAK,CAACI,MAAN,CAAaN,cAAb,EAA6B,CAA7B;AACA,YAAMO,QAAQ,GAAGL,KAAK,CAACM,cAAN,GAAuB,CAAvB,CAAjB;AAEAd,QAAAA,IAAI,GAAG;AACLI,UAAAA,GAAG,EAAES,QAAQ,CAACT,GADT;AAELC,UAAAA,IAAI,EAAEH,WAAW,CAACG,IAFb;AAGLU,UAAAA,MAAM,EAAEF,QAAQ,CAACE;AAHZ,SAAP;AAKD;AACF;AACF,GA9BD,CA8BE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AACD,SAAOhB,IAAP;AACD","sourcesContent":["import { Block } from '@ali/4ever-cangjie';\nimport { getClosestDom } from './getClosestDom';\n\ninterface Rect {\n  left: number;\n  top: number;\n  width?: number;\n  height?: number;\n}\n\nconst HEADING_TYPE = new Set([\n  'heading-1',\n  'heading-2',\n  'heading-3',\n  'heading-4',\n  'heading-5',\n  'heading-6',\n]);\n\nfunction isHeading(node: Block) {\n  return Block.isBlock(node) && HEADING_TYPE.has(node.type);\n}\n\nfunction isParagraph(node: Block) {\n  return Block.isBlock(node) && node.type === 'paragraph';\n}\n\n/**\n * 获取 node 节点中第一个文本节点位置，找不到则返回 node 位置\n * @param node\n */\nexport default function getRectOfNodeFirstText(node: Block) {\n  let rect: Rect | undefined;\n  try {\n    const nodeDom = getClosestDom(node);\n    if (!nodeDom) return rect;\n\n    const nodeDomRect = nodeDom.getBoundingClientRect();\n    if (!nodeDomRect) {\n      return null;\n    }\n    rect = {\n      top: nodeDomRect.top,\n      left: nodeDomRect.left,\n    };\n\n    if (isHeading(node) || isParagraph(node)) {\n      // 找到第一个文字子节点 dom\n      const firstTextChild = nodeDom.querySelector('[data-cangjie-leaf]');\n\n      if (firstTextChild) {\n        const range = document.createRange();\n        range.setStart(firstTextChild, 0);\n        range.setEnd(firstTextChild, 1);\n        const textRect = range.getClientRects()[0];\n\n        rect = {\n          top: textRect.top,\n          left: nodeDomRect.left,\n          height: textRect.height,\n        };\n      }\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  return rect;\n}\n"],"file":"getRectOfNodeFirstText.js"}