/**
 * @deprecated we-editor 内没有找到其他依赖这处的地方，但由于 export 出去了，暂时先保留，后续没问题可以删掉
 * 行内对象正则
 */
export declare const re: {
    bold: RegExp;
    italic: RegExp;
    strike: RegExp;
    subscript: RegExp;
    superscript: RegExp;
    underline: RegExp;
    link: RegExp;
    mention: RegExp;
    inlineCode: RegExp;
};
/**
 * 匹配行内对象
 */
export declare const getMatches: (value: any, regex: any) => any;
export interface OffsetInfo {
    start: number;
    end: number;
    total: number;
}
/**
 * 获取字符的位置信息
 */
export declare const getOffset: (snippetEnd: any, snippet: any, borderSize: any) => OffsetInfo;
export interface Delimiter {
    character: string;
    size: number;
    disableIntraword?: boolean;
}
/**
 * 获取 mark text 的 match 信息
 * 若符合 mark 规则，则返回 offset，否则返回 null
 * 规则：标识符前后无相同标识字符 + 允许 intraword（_ 除外） + 标识符内侧无空白（可配置）
 * 例如：
 * 以 bold 为例，insideWhitespace 为 false
 * * valid: [**abc**] [a**bc**] [a **bc**] [**a b c**] [a **b**c**](c 为加粗)
 * * invalid: [*abc_] [*abc*] [** abc **] [a__bc__]
 *
 * @param {string} text 待检测的字符串
 * @param {Delimiter} delimiter 标识符定义
 * @param {boolean} insideWhitespace 是否允许标识符内侧无空白
 */
export declare function getMarkTextMatchInfo(text: string, delimiter: Delimiter, insideWhitespace?: boolean): OffsetInfo | null;
