/**
 * 一般 K/V Cache 类型
 */
export interface Cache<K, V> {
    get(key: K): V | null;
    set(key: K, value: V): void;
    has(key: K): boolean;
    remove(key: K): V | null;
    clear(): void;
}
/**
 * 简单 K/V cache 缓存
 * @param capacity 容量 - (真实的缓存容量会大 1 位)
 */
export default class SimpleCache<T> implements Cache<string, T> {
    /**
     * 缓存池容量
     */
    private readonly capacity;
    /**
     * 当前缓存池的大小
     */
    private size;
    /**
     * 备份缓存池
     */
    private backup;
    /**
     * 当前缓存池
     */
    private cache;
    constructor(capacity?: number);
    private update;
    get(key: string): T | null;
    set(key: string, value: T): void;
    has(key: string): boolean;
    remove(key: string): T | null;
    clear(): void;
}
