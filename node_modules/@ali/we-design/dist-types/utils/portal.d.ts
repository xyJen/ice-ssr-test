import * as React from 'react';
export interface ITriggerRect {
    left: number;
    top: number;
    width: number;
    height: number;
}
interface IPortalProps {
    /**
     * 挂载的内容
     */
    overlay: React.ReactElement;
    /**
     * 是否显示
     */
    visible?: boolean;
    /**
     * css类名
     */
    className?: string;
    /**
     * 最小宽度与触发点保持相同
     */
    portalMatchTrigger: boolean;
    /**
     * 触发点的矩形位置
     */
    triggerRect?: ITriggerRect;
    /**
     * 偏移位置
     */
    offset: number[];
    /**
     * 位置
     */
    position?: {
        top: number;
        left: number;
    };
    /**
     * 挂载容器
     */
    getContainer?: () => HTMLElement;
}
export declare class Portal extends React.Component<IPortalProps> {
    triggerRef: React.RefObject<HTMLDivElement>;
    portalRef: React.RefObject<HTMLDivElement>;
    portal: HTMLDivElement | null;
    oContainer: HTMLElement;
    hasAppended: boolean;
    constructor(props: IPortalProps);
    updatePortalPosition: () => void;
    static defaultProps: {
        offset: number[];
        portalMatchTrigger: boolean;
        className: string;
        visible: boolean;
    };
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    appendIfVisible(): void;
    render(): JSX.Element;
}
export {};
