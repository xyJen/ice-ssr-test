import React from 'react';
import { useForm } from './Form';
import type { FormInstance, FormProps } from './Form';
import FormItemMain from './FormItem';
import { Meta } from 'rc-field-form/es/interface';
declare const OurForm: <Values = any>(props: FormProps & {
    children?: React.ReactNode;
} & {
    ref?: React.Ref<FormInstance<Values>> | undefined;
}) => React.ReactElement;
declare type OurForm = typeof OurForm;
interface ExportedForm extends OurForm {
    Item: typeof FormItemMain;
    useForm: typeof useForm;
}
declare const ExportedForm: ExportedForm;
/**
 * 能在 Form.Item 中使用的组件需要继承的接口
 */
interface FormItemInterface<T> {
    /**
     * 国际化语言
     */
    locale?: string;
    /**
     * 数值
     */
    value?: T;
    /**
     * 数值变化时的回调
     */
    onChange?: (e: any) => void;
    /**
     * 用于测试
     */
    testid?: string;
    /**
     * 在 Form.Item 中接收 errors 等参数
     */
    meta?: Meta;
}
export { ExportedForm as Form, FormItemMain as FormItem, useForm };
export type { FormProps, FormInstance, FormItemInterface };
