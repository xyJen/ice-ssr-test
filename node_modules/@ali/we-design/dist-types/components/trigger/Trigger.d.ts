import React from 'react';
export declare type ITriggerAction = 'hover' | 'click' | 'focus' | 'contextMenu';
export declare type IPlacement = 'top' | 'bottom' | 'left' | 'right' | 'topLeft' | 'bottomLeft' | 'topRight' | 'bottomRight' | 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom';
export interface ITriggerProps {
    /**
     * 触发动作
     */
    action: ITriggerAction[];
    overlay: React.ReactElement | null;
    type?: 'popup' | 'popover';
    children?: React.ReactElement;
    getContainer?: () => HTMLElement;
    onVisibleChange?: (e: boolean) => void;
    placement?: IPlacement;
    visible?: boolean;
    defaultVisible?: boolean;
    overlayStyle?: React.CSSProperties;
    zIndex?: number;
    offsetX?: number;
    offsetY?: number;
    pageX?: number;
    pageY?: number;
    maskColor?: string;
    overlayClassName?: string;
    backgroundColor?: string;
    mask?: boolean;
    /**
     * trigger节点手动传入
     */
    triggerNode?: HTMLElement;
    /**
     * tooltip消息
     */
    title?: string | React.ReactNode;
    /**
     * 延时出现，默认值 = 0
     */
    delayShow?: number;
    /**
     * 延时隐藏，默认值 = 200
     */
    delayHide?: number;
    /**
     * 延迟销毁
     */
    delayDestroy?: number;
    /**
     * 暴露 data-testid, 用于测试
     */
    testid?: string;
    /**
     * 禁止根据视口自适应展开位置
     */
    disableDomAlign?: boolean;
    /**
     * 监听overlay的宽高变化自适应位置
     */
    overlayAutoAlign?: boolean;
    /**
     * overlayAutoAlign 执行延时
     * 默认 100ms
     */
    overlayAutoAlignDelay?: number;
    /**
     * 定义角色
     */
    role?: string;
}
export declare const Trigger: React.FC<ITriggerProps>;
