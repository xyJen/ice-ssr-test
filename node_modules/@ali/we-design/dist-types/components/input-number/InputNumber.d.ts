import React from 'react';
import { Meta } from 'rc-field-form/es/interface';
import { FormItemInterface } from '../form';
export declare type InputNumberSize = 'small' | 'large';
/**
 * InputNumber 接受的 props
 */
export interface IInputNumberProps extends FormItemInterface<number | string | undefined> {
    /**
     * 国际化语言
     */
    locale?: string;
    /**
     * 提示文本
     */
    placeholder?: string;
    /**
     * 可设最小数值
     */
    min?: number;
    /**
     * 可设最大数值
     */
    max?: number;
    /**
     * 当前数值
     */
    value?: number;
    /**
     * 步进数值
     */
    step?: number | string;
    /**
     * 默认数值
     */
    defaultValue?: number;
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * 是否只读
     */
    readOnly?: boolean;
    /**
     * InputNumber的size，默认为small28px, large为32px
     */
    size?: InputNumberSize;
    /**
     * 自定义样式
     */
    style?: React.CSSProperties;
    /**
     * 自定义类名
     */
    className?: string;
    /**
     * 组件实例的名称
     */
    name?: string;
    /**
     * 组件实例的 id
     */
    id?: string;
    /**
     * 数值精确度
     */
    precision?: number;
    /**
     * 对value的格式化函数
     */
    formatter?: (value: number | string) => string;
    /**
     * 按下回车时的回调
     */
    onPressEnter?: React.KeyboardEventHandler<HTMLInputElement>;
    /**
     * 步进时的回调
     */
    onStep?: (value: number, info: {
        offset: number;
        type: 'up' | 'down';
    }) => void;
    /**
     * 输入文本变化时的回调
     */
    onChange?: (value: number | string | undefined) => void;
    /**
     * 失焦时的回调
     */
    onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;
    /**
     * 在 Form.Item 中接收 errors 等参数
     */
    meta?: Meta;
    /**
     * 用于测试
     */
    testid?: string;
    /**
     * 是否自动获取焦点
     */
    autoFocus?: boolean;
}
/**
 * 外部通过 ref 能获取的属性和方法
 */
export interface IInputNumberHandle {
    focus: () => void;
    select: () => void;
    blur: () => void;
    inputRef: HTMLInputElement;
    setValue: (v: any, callback: any) => any;
}
export declare const InputNumber: React.ForwardRefExoticComponent<IInputNumberProps & React.RefAttributes<IInputNumberHandle>>;
