import * as React from 'react';
import { ITriggerRect } from '../../utils';
export interface ILinkPortalProps {
    /**
     * 链接文本
     */
    text: string;
    /**
     * 链接url
     */
    href: string;
    /**
     * 本地语言的类型,如zh_CN
     */
    locale?: string;
    /**
     * 保存链接
     */
    onSave?: (text: string, href: string) => void;
    /**
     * 移除链接
     */
    onRemove?: () => void;
    /**
     * 拷贝成功
     */
    onCopied?: (href: string) => void;
    /**
     * 打开链接
     */
    onOpenLink: (url: string) => void;
    /**
     * 是否为编辑模式的初始值，非受控模式
     */
    defaultEditMode?: boolean;
    /**
     * 默认的初始显示状态,非受控模式
     */
    defaultVisible?: boolean;
    /**
     * 是否显示，受控模式
     */
    visible?: boolean;
    /**
     * visible变化时的回调，受控模式
     */
    onVisibleChange?: (visible: boolean) => void;
    /**
     * 触发点的矩形位置
     */
    triggerRect?: ITriggerRect;
    /**
     * 挂载容器
     */
    getContainer?: () => HTMLElement;
    /**
     * 是否只读
     */
    readOnly?: boolean;
}
interface IState {
    editMode: boolean;
    innerVisible: boolean;
}
export declare class LinkPortal extends React.PureComponent<ILinkPortalProps, IState> {
    static defaultProps: {
        visible: boolean;
        readOnly: boolean;
    };
    portalRef: React.RefObject<HTMLDivElement>;
    constructor(props: ILinkPortalProps);
    handleLinkMouseDown: () => void;
    handleSave: (text: string, href: string) => void;
    handleRemove: () => void;
    onVisibleChange(v: boolean): void;
    handleHide: () => void;
    getOverlay: () => JSX.Element;
    render(): JSX.Element;
}
export {};
