import React from 'react';
export declare enum BorderType {
    top = "top",
    bottom = "bottom",
    left = "left",
    right = "right",
    none = "none",
    outer = "outer",
    inner = "inner",
    horizon = "horizon",
    vertical = "vertical",
    all = "all",
    unselected = "unselected"
}
export interface IBorderTypePanelProps {
    /**
     * 选中的边框类型
     */
    borderType?: BorderType;
    /**
     * 边框图标的大小
     */
    borderIconSize?: number;
    /**
     * 图标中边框部分的颜色
     */
    borderSelectedColor?: string;
    /**
     * BorderTypeWrapper 的样式
     */
    style?: React.CSSProperties;
    /**
     * 边框类型变化时的回调函数
     */
    onBorderTypeChange: (type: BorderType) => void;
    /**
     * tooltip的层级
     */
    tooltipZIndex?: number;
}
declare type TypeUnselected = 'unselected';
export declare class BorderTypePanel extends React.PureComponent<IBorderTypePanelProps, {
    currentBorderType: BorderType | TypeUnselected;
}> {
    static defaultProps: {
        borderIconSize: number;
    };
    constructor(props: IBorderTypePanelProps);
    handleBorderTypeChange: (borderType: BorderType) => void;
    render(): JSX.Element;
}
export {};
