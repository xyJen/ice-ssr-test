import React from 'react';
import { CSSProp } from 'styled-components';
declare type MessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';
export interface IMessageConfig {
    key?: string;
    duration?: number;
    onClose?: () => void;
    content: string | React.ReactElement;
    type: MessageType;
    animated?: boolean;
    node?: React.ReactElement;
}
export interface IMessageProps {
    messages: Array<Required<IMessageConfig>>;
    style?: CSSProp;
}
export declare const Message: React.FC<IMessageProps>;
export declare const message: {
    open(config: IMessageConfig): void;
    custom(node: React.ReactElement, duration?: number | undefined, config?: Omit<IMessageConfig, "node"> | undefined): void;
    close(key?: string | undefined): void;
    success(config: string | IMessageConfig, duration?: number | undefined): void;
    error(config: string | IMessageConfig, duration?: number | undefined): void;
    warning(config: string | IMessageConfig, duration?: number | undefined): void;
    loading(config: string | IMessageConfig, duration?: number | undefined): void;
    info(config: string | IMessageConfig, duration?: number | undefined): void;
};
export {};
