import React, { TextareaHTMLAttributes } from 'react';
export declare type ITextAreaProps = TextareaHTMLAttributes<any> & {
    /**
     * 文本编辑框的样式
     */
    style?: React.CSSProperties;
    /**
     * 最外层容器的样式
     */
    className?: string;
    /**
     * rows表示初始时显示的行数。（和原生textarea组件一致）
     */
    /**
     * maxRows表示最多显示多少行，超过这个行数出滚动条
     */
    maxRows?: number;
    /**
     * 显示多少行时，可设置的偏移量，例如显示2行再多一些。单位是px
     */
    offsetRowHeight?: number;
    /**
     * 是否显示error样式
     */
    errored?: boolean;
    /**
     * 错误提示的文字，显示在组件下方。errored为true时才生效
     */
    errorTip?: string;
    /**
     * 只读状态
     */
    readOnly?: boolean;
};
/**
 * 外部通过 ref 能获取的属性和方法
 */
export interface ITextareaHandle {
    focus: () => void;
    select: () => void;
    blur: () => void;
}
declare const TextArea: React.MemoExoticComponent<React.ForwardRefExoticComponent<React.TextareaHTMLAttributes<any> & {
    /**
     * 文本编辑框的样式
     */
    style?: React.CSSProperties | undefined;
    /**
     * 最外层容器的样式
     */
    className?: string | undefined;
    /**
     * rows表示初始时显示的行数。（和原生textarea组件一致）
     */
    /**
     * maxRows表示最多显示多少行，超过这个行数出滚动条
     */
    maxRows?: number | undefined;
    /**
     * 显示多少行时，可设置的偏移量，例如显示2行再多一些。单位是px
     */
    offsetRowHeight?: number | undefined;
    /**
     * 是否显示error样式
     */
    errored?: boolean | undefined;
    /**
     * 错误提示的文字，显示在组件下方。errored为true时才生效
     */
    errorTip?: string | undefined;
    /**
     * 只读状态
     */
    readOnly?: boolean | undefined;
} & React.RefAttributes<ITextareaHandle>>>;
export { TextArea };
