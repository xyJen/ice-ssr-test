import React from 'react';
import type { IDropdownProps } from '../dropdown';
export interface IFileMenuContext {
    setVisible: (e: boolean) => void;
    setInitialContent: (key: string, content: React.ReactNode, autoClose: boolean) => void;
    updateContent: (key: string, content: React.ReactNode, autoClose: boolean) => void;
    onClick?: (key: string, e: React.MouseEvent<HTMLElement>) => boolean | void | undefined;
    currentMenuKey: string;
    onMenuItemUnmount: (key: string) => void;
}
declare type IDropdownPropsPicked = Pick<IDropdownProps, 'overlayStyle' | 'zIndex' | 'visible' | 'onVisibleChange' | 'trigger'>;
export declare type IFileMenuProps = IDropdownPropsPicked & {
    style?: React.CSSProperties;
    contentStyle?: React.CSSProperties;
    text?: string;
    locale?: string;
    defaultVisible?: boolean;
    onClick?: (key: string, e: React.MouseEvent<HTMLElement>) => boolean | void | undefined;
};
export interface IFileMenuItemProps {
    /**
     * 是否自动关闭
     */
    autoClose?: boolean;
    /**
     * 标题
     */
    title: React.ReactNode;
    /**
     * 右侧节点
     */
    suffix?: React.ReactNode;
    /**
     * key
     */
    menuKey: string;
    /**
     * 是否禁止
     */
    disabled?: boolean;
    /**
     * 样式
     */
    style?: React.CSSProperties;
    /**
     * 测试ID
     */
    testid?: string;
    /**
     * 点击回调
     */
    onClick?: (menuKey: string, e: React.MouseEvent<HTMLElement>) => boolean | void | undefined;
}
export {};
