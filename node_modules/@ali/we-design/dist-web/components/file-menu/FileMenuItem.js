import React, { useCallback, useEffect } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { usePrevious } from "../../hooks";
import { classnames, uuid } from "../../utils";
import { useController } from "./hooks";
import { ArrowRightNormal } from "../icons";
import { MenuItemWrap, MenuItemTitle, SuffixWrapper } from "./styled";
export var FileMenuItem = /*#__PURE__*/React.memo(function (props) {
  var children = props.children,
      menuKey = props.menuKey,
      disabled = props.disabled,
      style = props.style,
      testid = props.testid,
      title = props.title,
      suffix = props.suffix,
      onClick = props.onClick,
      autoClose = props.autoClose;
  var withChildren = !!children;
  var prevChildren = usePrevious(children);
  var prevAutoClose = usePrevious(autoClose);
  var ctrl = useController('FileMenuItem');

  if (typeof prevChildren === 'undefined' && !disabled) {
    ctrl.setInitialContent(menuKey, children, !!autoClose);
  }

  if ((prevChildren !== children || prevAutoClose !== autoClose) && ctrl.currentMenuKey === menuKey) {
    ctrl.updateContent(menuKey, children, !!autoClose);
  }

  var handleClick = useCallback(function (e) {
    var clickReturned;

    if (!disabled) {
      if (onClick) {
        clickReturned = onClick(menuKey, e);
      }

      if (ctrl.onClick) {
        ctrl.onClick(menuKey, e);
      }

      if (ctrl.currentMenuKey !== menuKey && withChildren) {
        ctrl.updateContent(menuKey, children, !!autoClose);
      }
    }

    if (clickReturned !== false && autoClose && !withChildren) {
      ctrl.setVisible(false);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [ctrl.currentMenuKey, ctrl.setVisible, ctrl.updateContent, ctrl.onClick, menuKey, withChildren, onClick, autoClose, children, disabled]);
  useEffect(function () {
    return function () {
      ctrl.onMenuItemUnmount(menuKey);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [menuKey]);
  return /*#__PURE__*/_createElement(MenuItemWrap, {
    className: classnames({
      disabled: disabled,
      active: ctrl.currentMenuKey === menuKey
    }),
    onClick: handleClick,
    style: style,
    "data-testid": testid ? "file-menu-item-" + testid : undefined
  }, /*#__PURE__*/_createElement(MenuItemTitle, null, title), /*#__PURE__*/_createElement(ArrowRightNormal, {
    className: classnames('icon arrow-icon', {
      disabled: disabled
    }),
    style: {
      display: withChildren ? 'inline-block' : 'none'
    }
  }), /*#__PURE__*/_createElement(SuffixWrapper, {
    style: {
      display: !withChildren ? 'inline-block' : 'none'
    }
  }, suffix));
});
FileMenuItem.defaultProps = {
  autoClose: true,
  disabled: false,
  menuKey: "file-menu-item-" + uuid()
};