var _br, _br2, _br3;

import React, { useMemo, useRef, useLayoutEffect, useState } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useTranslate } from '@ali/we-util';
import { ColorPreviewWrapper, BackgroundLayout, ColorLayout, ColorPreviewContent, Text, Tip } from "./styled";
// 共有五组文案可选,从中随机选一组
var RANDOM_TOTAL = 5;

var ColorPreview = function ColorPreview(props) {
  var color = props.color,
      backgroundColor = props.backgroundColor,
      shouldShowTip = props.shouldShowTip,
      colorPanelRef = props.colorPanelRef;
  var previewBoxRef = useRef(null);

  var _useState = useState({}),
      offsetStyles = _useState[0],
      setOffsetStyles = _useState[1];

  var _useState2 = useState(false),
      isNoSpace = _useState2[0],
      setIsNoSpace = _useState2[1];

  var t = useTranslate('');
  useLayoutEffect(function () {
    var colorPanel = colorPanelRef.current;
    var previewBox = previewBoxRef.current;

    if (colorPanel === null || previewBox === null) {
      return;
    }

    var _colorPanel$getBoundi = colorPanel.getBoundingClientRect(),
        left = _colorPanel$getBoundi.left,
        width = _colorPanel$getBoundi.width;

    var _previewBox$getBoundi = previewBox.getBoundingClientRect(),
        previewBoxWidth = _previewBox$getBoundi.width;

    var rightSpace = window.innerWidth - left - width;

    if (rightSpace > previewBoxWidth) {
      var showAtRightStyles = {
        left: '100%',
        marginLeft: '3px'
      };
      setOffsetStyles(showAtRightStyles);
    } else {
      if (left < previewBoxWidth) {
        // 当左右都没有足够空间时, 不显示预览
        setIsNoSpace(true);
      }

      var showAtLeftStyles = {
        left: "-" + (previewBoxWidth + 3) + "px"
      };
      setOffsetStyles(showAtLeftStyles);
    }
  }, []);
  var paragraphs = useMemo(function () {
    var randomIndex = Math.round(Math.random() * (RANDOM_TOTAL - 1)) + 1;
    var text = [t("we_ui_paragraph_" + randomIndex + "_1"), t("we_ui_paragraph_" + randomIndex + "_2"), t("we_ui_paragraph_" + randomIndex + "_3")];
    return text;
  }, []);
  var paragraph1 = paragraphs[0],
      paragraph2 = paragraphs[1],
      paragraph3 = paragraphs[2];

  if (isNoSpace) {
    return null;
  }

  return /*#__PURE__*/_createElement(ColorPreviewWrapper, {
    ref: previewBoxRef,
    style: offsetStyles
  }, /*#__PURE__*/_createElement(ColorPreviewContent, null, /*#__PURE__*/_createElement(Text, null, paragraph1), _br || (_br = /*#__PURE__*/_createElement("br", null)), /*#__PURE__*/_createElement(BackgroundLayout, {
    backgroundColor: backgroundColor
  }, /*#__PURE__*/_createElement(ColorLayout, {
    color: color
  }, paragraph2)), _br2 || (_br2 = /*#__PURE__*/_createElement("br", null)), /*#__PURE__*/_createElement(Text, null, paragraph3), _br3 || (_br3 = /*#__PURE__*/_createElement("br", null))), shouldShowTip && /*#__PURE__*/_createElement(Tip, null, t('we_ui_recommend_white_color')));
};

export default ColorPreview;