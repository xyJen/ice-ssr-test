import _extends from "@babel/runtime/helpers/extends";

/* eslint-disable @typescript-eslint/explicit-function-return-type */

/* eslint-disable react/prefer-stateless-function */
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import InkTabBarNodeTop from "./InkTabBarNodeTop";
import TabBarTabsNode from "./TabBarTabsNode";
import TabBarRootNode from "./TabBarRootNode";
import TabBarNode from "./TabBarNode";
import SaveRef from "./SaveRef";
import InkTabBarNodeLeft from "./InkTabBarNodeLeft";
import { NavBarDivider } from "./styled";
import { classnames } from "../../utils";

var getInkTabBarNodeStyles = function getInkTabBarNodeStyles(type) {
  if (type === 'd-design') {
    return null;
  }

  return type === 'editable-biz' ? {
    inkBar: {
      width: '28px'
    }
  } : {
    inkBar: {
      height: '32px',
      width: '24px'
    }
  };
}; // tab额外元素包裹组件


var ExtraContent = function ExtraContent(_ref) {
  var _ref$position = _ref.position,
      position = _ref$position === void 0 ? 'right' : _ref$position,
      extra = _ref.extra;
  if (!extra) return null;
  var content = null;
  var assertExtra = extra;

  if (position === 'right') {
    content = assertExtra.right || !assertExtra.left && assertExtra || null;
  } else if (position === 'left') {
    content = assertExtra.left || null;
  }

  return content && /*#__PURE__*/_createElement("div", {
    className: "extra-content",
    style: {
      flex: 'none'
    }
  }, content);
};

var TabBar = function TabBar(props) {
  var _ExtraContent, _ExtraContent2;

  var panes = props.panes,
      type = props.type,
      tabBarExtraContent = props.tabBarExtraContent;
  var singleTab = React.Children.count(panes) === 1;
  var inkTabBarNodeStyles = React.useMemo(function () {
    return getInkTabBarNodeStyles(type);
  }, [type]);
  var hasInk = React.useMemo(function () {
    return type === 'line' || type === 'editable-line' || type === 'biz' || type === 'editable-biz' || type === 'd-design';
  }, [type]);
  return /*#__PURE__*/_createElement(SaveRef, null, function (saveRef, getRef) {
    return /*#__PURE__*/_createElement(TabBarRootNode, _extends({}, props, {
      saveRef: saveRef,
      getRef: getRef
    }), _ExtraContent || (_ExtraContent = /*#__PURE__*/_createElement(ExtraContent, {
      position: "left",
      extra: tabBarExtraContent
    })), /*#__PURE__*/_createElement(TabBarNode, _extends({}, props, {
      getRef: getRef,
      saveRef: saveRef,
      testid: props.testid
    }), /*#__PURE__*/_createElement(TabBarTabsNode, _extends({
      saveRef: saveRef
    }, props, {
      className: singleTab ? 'single-tab' : undefined,
      singleTab: singleTab
    })), hasInk && !singleTab && ((props == null ? void 0 : props.tabPosition) === 'left' ? /*#__PURE__*/_createElement(InkTabBarNodeLeft, _extends({}, props, {
      saveRef: saveRef,
      getRef: getRef,
      styles: inkTabBarNodeStyles
    })) : /*#__PURE__*/_createElement(InkTabBarNodeTop, _extends({}, props, {
      saveRef: saveRef,
      getRef: getRef,
      styles: inkTabBarNodeStyles
    })))), _ExtraContent2 || (_ExtraContent2 = /*#__PURE__*/_createElement(ExtraContent, {
      extra: tabBarExtraContent
    })), (props == null ? void 0 : props.tabPosition) !== 'left' && /*#__PURE__*/_createElement(NavBarDivider, {
      className: classnames('nav-bar-divider', type)
    }));
  });
};

export default TabBar;