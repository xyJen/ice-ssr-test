import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { useRef } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { classnames } from "../../utils";
import { TabPaneWrap } from "./styled";
import { getDataAttr } from "./utils";
export var TabPane = function TabPane(props) {
  var _ref = props,
      className = _ref.className,
      actived = _ref.actived,
      forceRender = _ref.forceRender,
      key = _ref.key,
      id = _ref.id,
      children = _ref.children,
      destroyInactiveTabPane = _ref.destroyInactiveTabPane,
      animated = _ref.animated,
      restProps = _objectWithoutPropertiesLoose(_ref, ["className", "actived", "forceRender", "key", "id", "children", "destroyInactiveTabPane", "animated"]); // 此缓存是为了让最近显示过的tab项不销毁


  var isActived = useRef(!!actived);
  isActived.current = isActived.current || !!actived;
  var isRender = destroyInactiveTabPane ? actived : isActived.current;
  var shouldRender = isRender || forceRender;
  var tabKeyExists = key && String(key).length > 0;
  var uuid = tabKeyExists && (id ? key + "-" + id : "" + key);
  return /*#__PURE__*/_createElement(TabPaneWrap, _extends({
    role: "tabpanel",
    "aria-hidden": actived ? 'false' : 'true',
    tabIndex: actived ? 0 : -1,
    className: classnames(className, {
      actived: actived,
      animated: animated
    }),
    id: uuid && "tabpane-" + uuid,
    "aria-labelledby": uuid && "tab-" + uuid
  }, getDataAttr(restProps)), shouldRender ? children : null);
};
TabPane.defaultProps = {
  disabled: false
};