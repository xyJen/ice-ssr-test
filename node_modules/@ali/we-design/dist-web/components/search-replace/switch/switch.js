var _SplitLine, _SplitLine2;

import React, { useCallback, useEffect, useState } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Button } from "../../../components/button";
import { ArrowLeftNormal, ArrowRightNormal } from "../../../components/icons";
import { Container, ModalText, SplitLine } from "./styled";
export var SearchSwitch = function SearchSwitch(props) {
  var _props$index = props.index,
      index = _props$index === void 0 ? 0 : _props$index,
      count = props.count,
      pre = props.pre,
      _props$next = props.next,
      next = _props$next === void 0 ? 0 : _props$next,
      className = props.className;

  var _useState = useState(index),
      focusIndex = _useState[0],
      setIndex = _useState[1];

  useEffect(function () {
    setIndex(Number(index));
  }, [index]);
  /**
   * 切换至前一个
   */

  var handlePre = useCallback(function (e) {
    // eslint-disable-next-line no-nested-ternary
    var preIndex = focusIndex - 1 <= 0 ? count : focusIndex - 1;
    setIndex(preIndex);
    pre && pre(preIndex);
    e.preventDefault();
  }, [count, focusIndex, pre]);
  /**
   * 切换至后一个
   */

  var handleNext = useCallback(function (e) {
    // eslint-disable-next-line no-nested-ternary
    var nextIndex = focusIndex + 1 > count ? count ? 1 : 0 : focusIndex + 1;
    setIndex(nextIndex);
    next && next(nextIndex);
    e.preventDefault();
  }, [count, focusIndex, next]);
  var gray = {
    color: 'rgba(17,31,44,0.56)'
  };
  return /*#__PURE__*/_createElement(Container, {
    className: className
  }, /*#__PURE__*/_createElement(Button, {
    type: "text",
    size: "small",
    icon: /*#__PURE__*/_createElement(ArrowLeftNormal, {
      style: !focusIndex ? gray : {}
    }),
    tabIndex: "-1",
    onMouseDown: handlePre
  }), _SplitLine || (_SplitLine = /*#__PURE__*/_createElement(SplitLine, null)), /*#__PURE__*/_createElement(ModalText, {
    style: {
      wordBreak: 'keep-all',
      whiteSpace: 'nowrap'
    }
  }, /*#__PURE__*/_createElement("span", null, focusIndex + "/" + count)), _SplitLine2 || (_SplitLine2 = /*#__PURE__*/_createElement(SplitLine, null)), /*#__PURE__*/_createElement(Button, {
    type: "text",
    size: "small",
    icon: /*#__PURE__*/_createElement(ArrowRightNormal, {
      style: focusIndex === count ? gray : {}
    }),
    tabIndex: "-1",
    onMouseDown: handleNext
  }));
};