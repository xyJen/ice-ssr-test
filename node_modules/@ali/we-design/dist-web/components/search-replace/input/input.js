var _IconBox;

import React, { useEffect, useState, useCallback, useRef } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { InputWrapper, Input, IconBox } from "./styled";
import { SearchBetaNormal, RoundcloseFillBetaNormal } from "../../../components/icons";
var defaultIconStyle = {
  color: 'rgba(17, 31, 44, 0.40)'
};
export var InputComponent = function InputComponent(props) {
  var ref = useRef();
  var _props$text = props.text,
      text = _props$text === void 0 ? '' : _props$text,
      onChange = props.onChange,
      _props$prefix = props.prefix,
      prefix = _props$prefix === void 0 ? true : _props$prefix;

  var _useState = useState(''),
      value = _useState[0],
      setValue = _useState[1];
  /**
   * value是否为空
   */


  var isEmptyValue = function isEmptyValue() {
    return String(value) === '';
  };
  /**
   * input change处理
   */


  var handleChange = useCallback(function (e) {
    setValue(e.target.value);
    onChange(e.target.value);
  }, [onChange]);
  var handleClear = useCallback(function (e) {
    setValue('');
    onChange('');
    e.preventDefault();
  }, [onChange]);
  useEffect(function () {
    var _ref$current;

    (_ref$current = ref.current) == null ? void 0 : _ref$current.focus();
  }, []);
  useEffect(function () {
    setValue(String(text));
  }, [text]);
  return /*#__PURE__*/_createElement(InputWrapper, null, prefix && (_IconBox || (_IconBox = /*#__PURE__*/_createElement(IconBox, {
    className: "left"
  }, /*#__PURE__*/_createElement(SearchBetaNormal, {
    style: defaultIconStyle
  })))), /*#__PURE__*/_createElement(IconBox, {
    className: "right"
  }, !isEmptyValue() && /*#__PURE__*/_createElement(RoundcloseFillBetaNormal, {
    style: defaultIconStyle,
    onMouseDown: handleClear
  })), /*#__PURE__*/_createElement(Input, {
    value: value,
    onChange: handleChange,
    ref: ref,
    placeholder: props.placeholder
  }));
};