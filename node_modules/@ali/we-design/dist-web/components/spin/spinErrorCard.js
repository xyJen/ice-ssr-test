var _SpinNetworkErrorIcon;

import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import classnames from 'classnames';
import { useTranslate } from '@ali/we-util';
import { SpinNetworkErrorIcon } from "./icons";
import { SpinErrorWrapper, SpinErrorIcon, SpinErrorTitle, SpinErrorTip, SpinErrorRefresh, SpinErrorInlineWrapper, SpinErrorInlineRightWrapper, SpinErrorText } from "./styled";
export var SpinErrorCard = function SpinErrorCard(props) {
  var style = props.style,
      icon = props.icon,
      highlightIcon = props.highlightIcon,
      title = props.title,
      tip = props.tip,
      onRefresh = props.onRefresh,
      transparent = props.transparent,
      _props$refreshPlaceme = props.refreshPlacement,
      refreshPlacement = _props$refreshPlaceme === void 0 ? 'right' : _props$refreshPlaceme,
      onClick = props.onClick,
      testid = props.testid,
      role = props.role;
  var t = useTranslate('');
  var refreshText = t('we_ui_refresh');
  var showRefreshAtRight = onRefresh && refreshPlacement === 'right';
  return /*#__PURE__*/_createElement(SpinErrorWrapper, {
    style: style,
    transparent: transparent,
    onClick: onClick,
    "data-testid": testid,
    "data-role": role
  }, /*#__PURE__*/_createElement(SpinErrorIcon, {
    className: classnames({
      'highlight-icon': highlightIcon
    })
  }, icon || _SpinNetworkErrorIcon || (_SpinNetworkErrorIcon = /*#__PURE__*/_createElement(SpinNetworkErrorIcon, null))), title && /*#__PURE__*/_createElement(SpinErrorTitle, null, title), (tip || showRefreshAtRight) && /*#__PURE__*/_createElement(SpinErrorTip, null, tip && /*#__PURE__*/_createElement(SpinErrorText, {
    className: classnames({
      'with-r-gap': showRefreshAtRight
    })
  }, tip), showRefreshAtRight && /*#__PURE__*/_createElement(SpinErrorRefresh, {
    onClick: onRefresh
  }, refreshText)), onRefresh && refreshPlacement === 'bottom' ? /*#__PURE__*/_createElement(SpinErrorRefresh, {
    onClick: onRefresh
  }, refreshText) : null);
};
export var SpinErrorInlineCard = function SpinErrorInlineCard(props) {
  var style = props.style,
      icon = props.icon,
      title = props.title,
      tip = props.tip,
      onRefresh = props.onRefresh,
      transparent = props.transparent,
      highlightIcon = props.highlightIcon,
      onClick = props.onClick,
      testid = props.testid,
      role = props.role;
  var t = useTranslate('');
  var refreshText = t('we_ui_refresh');
  return /*#__PURE__*/_createElement(SpinErrorInlineWrapper, {
    style: style,
    transparent: transparent,
    onClick: onClick,
    "data-testid": testid,
    "data-role": role
  }, icon && /*#__PURE__*/_createElement(SpinErrorIcon, {
    className: classnames({
      'highlight-icon': highlightIcon
    }),
    style: {
      marginRight: 8
    }
  }, icon), /*#__PURE__*/_createElement(SpinErrorInlineRightWrapper, null, title && /*#__PURE__*/_createElement(SpinErrorTitle, {
    style: {
      marginTop: 0
    }
  }, title), (tip || onRefresh) && /*#__PURE__*/_createElement(SpinErrorTip, {
    style: {
      margin: !title ? 0 : '4px 0 0 0'
    }
  }, tip && /*#__PURE__*/_createElement(SpinErrorText, {
    className: classnames({
      'with-r-gap': onRefresh
    })
  }, tip), onRefresh && /*#__PURE__*/_createElement(SpinErrorRefresh, {
    onClick: onRefresh
  }, refreshText))));
};
SpinErrorCard.defaultProps = {
  refreshPlacement: 'right'
};