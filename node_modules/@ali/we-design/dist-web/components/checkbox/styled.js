/* eslint-disable arrow-body-style */

/* eslint-disable @typescript-eslint/explicit-function-return-type */

/* eslint-disable @typescript-eslint/no-explicit-any */
import styled from 'styled-components';
import { SelectIcon } from "./SelectIcon";
import { resetComponent } from "../../utils/styled.mixin";
import { withTheme } from "../theme";
var grayColor = 'rgba(126, 134, 142, 0.24)';
var hoverColor = '#39A3FF';
var activeColor = '#0065D5';
export var CheckboxSelect = /*#__PURE__*/styled(SelectIcon)(["display:none;&.checked{display:inline-block;position:absolute;top:-1px;left:-1px;}"]);
export var CheckboxInner = withTheme(styled.span(["", " display:inline-block;vertical-align:middle;width:16px;height:16px;border:1px solid ", ";background-color:", ";transition:all 0.24s ease-in;border-radius:2px;position:relative;&.disabled{background-color:", ";}"], resetComponent, grayColor, function (_ref) {
  var theme = _ref.theme;
  return theme.ui.colorGray1;
}, grayColor));
export var CheckboxWrap = withTheme(styled.label(["", " cursor:", ";display:inline-block;", ";", ""], resetComponent, function (_ref2) {
  var disabled = _ref2.disabled;
  return disabled ? 'not-allowed' : 'pointer';
}, function (_ref3) {
  var disabled = _ref3.disabled,
      theme = _ref3.theme;
  return disabled ? '' : "\n      " + CheckboxInner + " {\n        &:hover { \n          border-color: rgba(0, 137, 255, 0.48);\n        }\n        &:active {\n          border-color: " + theme.ui.primaryColor + ";\n        }\n      }\n    ";
}, function (_ref4) {
  var checked = _ref4.checked,
      ui = _ref4.theme.ui,
      disabled = _ref4.disabled,
      indeterminate = _ref4.indeterminate;

  if (indeterminate) {
    return "\n      " + CheckboxInner + " {\n        border-color: " + ui.primaryColor + ";\n        background-color: " + ui.primaryColor + ";\n        &:after {\n          content: \"\";\n          position: absolute;\n          display: block;\n          background-color: #fff;\n          height: 2px;\n          transform: scale(.5);\n          left: 0;\n          right: 0;\n          top: 6px;\n        }\n        &:hover { \n          border-color: " + hoverColor + ";\n          background-color: " + hoverColor + ";\n        }\n        &:active { \n          border-color: " + activeColor + ";\n          background-color: " + activeColor + ";\n        }\n      }\n      ";
  }

  return checked ? "\n      " + CheckboxInner + " {\n        border-color: " + (disabled ? grayColor : ui.primaryColor) + ";\n        background-color: " + (disabled ? grayColor : ui.primaryColor) + ";\n      }\n      " + (disabled ? '' : "\n        " + CheckboxInner + " {\n          &:hover { \n            border-color: " + hoverColor + ";\n            background-color: " + hoverColor + ";\n          }\n          &:active { \n            border-color: " + activeColor + ";\n            background-color: " + activeColor + ";\n          }\n        }") + "\n    " : '';
}));
export var CheckboxText = withTheme(styled.span(["", " display:inline-block;vertical-align:middle;padding:0 ", ";color:", ";font-size:", ";"], resetComponent, function (_ref5) {
  var theme = _ref5.theme;
  return theme.ui.paddingMedium;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.ui.commonActionIconColor;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.ui.fontSizeMenu;
}));
export var CheckboxContent = withTheme(styled.span(["", " position:relative;input{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;width:0;height:0;cursor:pointer;opacity:0;}"], resetComponent));
export var CheckboxGroupWrap = withTheme(styled.div(["", ""], resetComponent));