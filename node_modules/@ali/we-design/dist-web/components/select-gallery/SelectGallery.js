import _extends from "@babel/runtime/helpers/extends";

var _GroupDivider, _GroupSpacer;

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled, { css } from 'styled-components';
var GroupDivider = /*#__PURE__*/styled.div(["height:1px;background-color:rgba(126,134,142,0.16);margin:8px 0;"]);
var GroupSpacer = /*#__PURE__*/styled.div(["height:8px;"]);
var GroupTitle = /*#__PURE__*/styled.div(["font-size:12px;color:rgba(17,31,44,0.56);padding-top:8px;padding-bottom:12px;padding-left:8px;"]);
var GroupWrapper = /*#__PURE__*/styled.div([""]);
var GroupContent = /*#__PURE__*/styled.div(["display:grid;grid-template-rows:repeat( ", ",", "px );grid-template-columns:repeat(", ",", "px);grid-column-gap:8px;grid-row-gap:8px;"], function (p) {
  return p.rowCount;
}, function (p) {
  return p.height + 2;
}, function (p) {
  return p.colCount;
}, function (p) {
  return p.width + 2;
});
var ItemWrapper = /*#__PURE__*/styled.div(["border-radius:4px;> *{border-radius:4px;}border:1px solid transparent;", ""], function (p) {
  return p.active && css(["border-color:#006afe;box-shadow:0px 0px 0px 3px rgba(0,106,254,0.12);"]);
});

var SelectGroup = function SelectGroup(_ref) {
  var group = _ref.group,
      itemsPerRow = _ref.itemsPerRow,
      width = _ref.width,
      height = _ref.height,
      value = _ref.value,
      onChange = _ref.onChange;
  var title = group.title,
      items = group.items;
  var rowCount = Math.ceil(items.length / itemsPerRow);
  return /*#__PURE__*/_createElement(GroupWrapper, null, title && /*#__PURE__*/_createElement("div", null, /*#__PURE__*/_createElement(GroupTitle, null, title)), /*#__PURE__*/_createElement(GroupContent, {
    width: width,
    height: height,
    rowCount: rowCount,
    colCount: itemsPerRow
  }, items.map(function (item, index) {
    return /*#__PURE__*/_createElement(ItemWrapper, {
      key: index,
      active: item.id === value,
      "data-testid": item.testID,
      onClick: function onClick() {
        return onChange == null ? void 0 : onChange(item.id);
      }
    }, item.node);
  })));
};

var GalleryWrapper = /*#__PURE__*/styled.div(["padding:12px;background:white;box-shadow:0px 8px 24px 0px rgba(0,0,0,0.16),0px 0px 1px 0px rgba(0,0,0,0.24);border-radius:4px;"]);
export var SelectGallery = function SelectGallery(_ref2) {
  var _SelectGroup;

  var groups = _ref2.groups,
      _ref2$width = _ref2.width,
      width = _ref2$width === void 0 ? 100 : _ref2$width,
      _ref2$height = _ref2.height,
      height = _ref2$height === void 0 ? 100 : _ref2$height,
      _ref2$itemsPerRow = _ref2.itemsPerRow,
      itemsPerRow = _ref2$itemsPerRow === void 0 ? 4 : _ref2$itemsPerRow,
      value = _ref2.value,
      onChange = _ref2.onChange,
      style = _ref2.style;
  var nodes = [];

  for (var _iterator = _createForOfIteratorHelperLoose(groups.entries()), _step; !(_step = _iterator()).done;) {
    var _step$value = _step.value,
        index = _step$value[0],
        group = _step$value[1];
    var title = group.title,
        _group$showDivider = group.showDivider,
        showDivider = _group$showDivider === void 0 ? true : _group$showDivider;

    if (title == null && index !== 0) {
      if (showDivider) {
        nodes.push(_GroupDivider || (_GroupDivider = /*#__PURE__*/_createElement(GroupDivider, null)));
      } else {
        nodes.push(_GroupSpacer || (_GroupSpacer = /*#__PURE__*/_createElement(GroupSpacer, null)));
      }
    }

    nodes.push(_SelectGroup || (_SelectGroup = /*#__PURE__*/_createElement(SelectGroup, {
      key: index,
      value: value,
      onChange: onChange,
      group: group,
      itemsPerRow: itemsPerRow,
      width: width,
      height: height
    })));
  }

  return /*#__PURE__*/_createElement(GalleryWrapper, {
    style: _extends({}, style)
  }, nodes);
};