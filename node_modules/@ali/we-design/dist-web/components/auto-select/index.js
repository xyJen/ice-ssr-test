var _SelectArrowDownNorma;

import React, { useCallback, useState } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Dropdown } from '..';
import styled, { css } from 'styled-components';
import { DropdownAnimation } from '@ali/we-util';
import classname from 'classnames';
import { SelectArrowDownNormalNormal } from '@ali/we-icon';
var SelectWapper = /*#__PURE__*/styled.div(["", " width:", ";border:1px solid rgba(0,0,0,0.16);border-radius:4px;padding:6px 4px 6px 8px;display:flex;align-items:center;:hover{border:1px solid #0089ff;}&.showOverlay,&.auto-select-selected{border:1px solid #0089ff;box-shadow:0px 0px 0px 3px rgba(0,106,254,0.12);}&.auto-select-disabled{background:rgba(246,246,246,1);border:1px solid rgba(0,0,0,0.16);cursor:not-allowed;:hover{border:1px solid rgba(0,0,0,0.16);}.select-wapper{color:rgba(23,26,29,0.24);}.arrow-cell .weicon{color:rgba(23,26,29,0.24);}}.select-wapper{flex:1;padding-right:4px;height:20px;line-height:20px;}.arrow-cell{display:flex;justify-content:center;transform:rotate(180deg);.weicon{font-size:20px;color:rgba(23,26,29,0.6);}&.showOverlay .weicon{transform:rotate(180deg);}}"], function (_ref) {
  var size = _ref.size;
  return size === 'small' ? css(["height:28px;"]) : css(["height:32px;"]);
}, function (_ref2) {
  var width = _ref2.width;
  return width + "px";
}); // box-shadow: 0px 0px 0px 3px rgba(0, 106, 254, 0.12);

export var AutoSelect = /*#__PURE__*/React.memo(function (props) {
  var children = props.children,
      size = props.size,
      onVisibleChange = props.onVisibleChange,
      autoClose = props.autoClose,
      overlay = props.overlay,
      _props$width = props.width,
      width = _props$width === void 0 ? 200 : _props$width,
      selected = props.selected,
      disabled = props.disabled,
      testid = props.testid;

  var _useState = useState(false),
      showOverlay = _useState[0],
      setShowOverlay = _useState[1];

  var handleVisibleChange = useCallback(function (e) {
    if (disabled) return;
    setShowOverlay(e);
    onVisibleChange && onVisibleChange(e);
  }, [onVisibleChange]);
  var hideOverlay = useCallback(function () {
    if (autoClose) {
      setShowOverlay(false);
      onVisibleChange && onVisibleChange(false);
    }
  }, [autoClose]);
  return /*#__PURE__*/_createElement(Dropdown, {
    overlay: /*#__PURE__*/_createElement(DropdownAnimation, {
      visible: showOverlay,
      onClick: hideOverlay
    }, /*#__PURE__*/_createElement("div", {
      "data-testid": (testid || '') + "_overlay"
    }, overlay)),
    onVisibleChange: handleVisibleChange,
    visible: showOverlay
  }, /*#__PURE__*/_createElement(SelectWapper, {
    width: width,
    size: size,
    "data-testid": testid,
    className: classname(size, {
      showOverlay: showOverlay,
      'auto-select-selected': selected,
      'auto-select-disabled': disabled
    })
  }, /*#__PURE__*/_createElement("div", {
    className: "select-wapper"
  }, children), /*#__PURE__*/_createElement("div", {
    className: classname('arrow-cell', {
      showOverlay: showOverlay
    })
  }, _SelectArrowDownNorma || (_SelectArrowDownNorma = /*#__PURE__*/_createElement(SelectArrowDownNormalNormal, null)))));
});
AutoSelect.defaultProps = {
  size: 'medium',
  autoClose: true,
  width: 200
};