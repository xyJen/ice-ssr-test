import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";

var _svg, _svg2, _ArrowUpIcon, _ArrowDownIcon;

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useTranslate } from '@ali/we-util';
import { IRcInputNumber, IRcInputNumberWrap } from "./styled";

var ArrowUpIcon = function ArrowUpIcon() {
  return _svg || (_svg = /*#__PURE__*/_createElement("svg", {
    className: "we-input-number-handler-icon",
    width: "12",
    height: "12",
    viewBox: "0 0 12 12",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_createElement("path", {
    d: "M9 7L6.04273 4L3 7",
    stroke: "#171A1D"
  })));
};

var ArrowDownIcon = function ArrowDownIcon() {
  return _svg2 || (_svg2 = /*#__PURE__*/_createElement("svg", {
    className: "we-input-number-handler-icon",
    width: "12",
    height: "12",
    viewBox: "0 0 12 12",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/_createElement("path", {
    d: "M3 5L5.95727 8L9 5",
    stroke: "#171A1D"
  })));
};

export var InputNumber = /*#__PURE__*/forwardRef(function (props, ref) {
  var locale = props.locale,
      IPlaceholder = props.placeholder,
      meta = props.meta,
      className = props.className,
      disabled = props.disabled,
      _props$size = props.size,
      size = _props$size === void 0 ? 'small' : _props$size,
      testid = props.testid,
      restProps = _objectWithoutPropertiesLoose(props, ["locale", "placeholder", "meta", "className", "disabled", "size", "testid"]);

  var inputNumberRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      focus: function focus() {
        inputNumberRef.current.focus();
      },
      select: function select() {
        inputNumberRef.current.select();
      },
      blur: function blur() {
        inputNumberRef.current.blur();
      },
      inputRef: inputNumberRef.current.input,
      setValue: inputNumberRef.current.setValue.bind(inputNumberRef.current)
    };
  });
  var t = useTranslate(locale);
  var placeholder = typeof IPlaceholder === 'string' ? IPlaceholder : t('we_ui_input_placeholder');
  return /*#__PURE__*/_createElement(IRcInputNumberWrap, {
    disabled: disabled,
    size: size
  }, /*#__PURE__*/_createElement(IRcInputNumber, _extends({
    className: "" + (className || '') + (meta != null && meta.errors && meta.errors.length > 0 ? ' we-input-number-error' : ''),
    testid: testid,
    size: size,
    disabled: disabled,
    ref: inputNumberRef,
    prefixCls: "we-input-number",
    placeholder: placeholder,
    upHandler: _ArrowUpIcon || (_ArrowUpIcon = /*#__PURE__*/_createElement(ArrowUpIcon, null)),
    downHandler: _ArrowDownIcon || (_ArrowDownIcon = /*#__PURE__*/_createElement(ArrowDownIcon, null))
  }, restProps)));
});
InputNumber.defaultProps = {
  size: 'small',
  autoFocus: false,
  step: 1,
  disabled: false,
  readOnly: false
};