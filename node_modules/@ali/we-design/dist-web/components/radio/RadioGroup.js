import React, { useCallback, useMemo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { RadioGroupWrap } from "./styled";
import useControlledValue from "../../hooks/useControlledValue";
import { RadioContext } from "./RadioContext";
import { Radio } from "./Radio";
var RadioGroup = /*#__PURE__*/React.memo(function (props) {
  var children = props.children,
      disabled = props.disabled,
      onChange = props.onChange,
      options = props.options;

  var _useControlledValue = useControlledValue(props.value, props.defaultValue),
      value = _useControlledValue[0],
      setValue = _useControlledValue[1];
  /**
   * 选中切换
   *
   * @param {string} e
   * @return {void}
   */


  var handleToggleValue = useCallback(function (e) {
    var newValue = e.value;

    if (onChange) {
      onChange(newValue);
    }

    setValue(newValue);
  }, [onChange, setValue]);
  /**
   * 透传给Radio组件的属性
   *
   * @return {IRadioContext} context
   */

  var provider = useMemo(function () {
    return {
      disabled: !!disabled,
      onToggleValue: handleToggleValue,
      checkedValue: value
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [!!disabled, handleToggleValue, value]);
  return /*#__PURE__*/_createElement(RadioGroupWrap, null, /*#__PURE__*/_createElement(RadioContext.Provider, {
    value: provider
  }, options ? options.map(function (option) {
    var item = typeof option === 'string' ? {
      value: option,
      label: option
    } : option;
    return /*#__PURE__*/_createElement(Radio, {
      key: item.value,
      value: item.value,
      disabled: item.disabled
    }, item.label);
  }) : children));
});
RadioGroup.defaultProps = {
  defaultValue: ''
};
RadioGroup.displayName = 'RadioGroup';
export { RadioGroup };