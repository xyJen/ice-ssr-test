import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Wrapper, Line, Single } from "./styled";
import { CustomLine } from "./customLine";
import { commonLineMap } from "./common";
var defaultLineColor = '#000';

function repeatContent(content, times) {
  if (!content || !times) return '';
  var res = content.repeat(times);
  return res;
}

var ICONFONT_CSS = "\n@font-face {\n  font-family: 'commonLineIconfont';  /* project id 1679878 */\n  src: url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.eot');\n  src: url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.eot?#iefix') format('embedded-opentype'),\n  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.woff2') format('woff2'),\n  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.woff') format('woff'),\n  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.ttf') format('truetype'),\n  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.svg#iconfont') format('svg');\n}\n";
var ICONFONT_ID = 'common-line-font-styles';

var inject = function inject() {
  var styleSheet = document.getElementById(ICONFONT_ID);

  if (!styleSheet) {
    styleSheet = document.createElement('style');
    styleSheet.setAttribute('type', 'text/css');
    styleSheet.id = ICONFONT_ID;
    styleSheet.innerHTML = ICONFONT_CSS;
    var head = document.getElementsByTagName('head')[0];

    if (head) {
      head.appendChild(styleSheet);
    }
  }
};

export var CommonLine = function CommonLine(props) {
  var size = props.size,
      length = props.length,
      color = props.color,
      lineStyle = props.lineType,
      value = props.value;

  if (lineStyle === 'custom') {
    return /*#__PURE__*/_createElement(React.Fragment, null, value && /*#__PURE__*/_createElement(CustomLine, {
      value: value,
      width: length
    }));
  } // 注入全局 iconfont 样式


  inject();
  var finalColor = color; // 解决css color 无auto的问题

  if (color === undefined || color === '' || color === 'auto') {
    finalColor = defaultLineColor;
  }

  var finalLineStyle = lineStyle; // 加入最小单位高度, 用于做transform的scale比例计算

  var unitHeight = 8;
  var scale = 1;
  var selectedLine = commonLineMap[lineStyle];
  var content = commonLineMap.single && commonLineMap.single.content;

  if (selectedLine) {
    content = repeatContent(selectedLine.content, selectedLine.repeat);
    unitHeight = selectedLine.unitHeight;
    scale = selectedLine.scale || 1;
  } else {
    // 如果未找到, 则single 代替
    finalLineStyle = 'single';
  }
  /* eslint-disable */


  return /*#__PURE__*/_createElement(Wrapper, null, finalLineStyle === 'single' ? /*#__PURE__*/_createElement(Single, {
    length: length,
    bgColor: finalColor,
    size: size,
    color: finalColor
  }) : /*#__PURE__*/_createElement(Line, {
    length: length,
    lineContent: content,
    size: size,
    color: color,
    unitHeight: unitHeight,
    scale: scale
  }));
};
CommonLine.defaultProps = {
  lineType: 'single',
  size: 1,
  // 默认值 兼容之前hr颜色和厚度方案
  color: defaultLineColor
}; // export default CommonLine;