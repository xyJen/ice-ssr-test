import _extends from "@babel/runtime/helpers/extends";

var _LoadingNormal;

import React, { memo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useTranslate } from '@ali/we-util';
import { Title, Content, Footer, Header, Body, CloseButton, FooterWrap, CancelButton, ConfirmButton } from "./styled";
import { LoadingNormal } from "../../components/icons";
import { TemplateCloseNormal } from "../../components/icons-toolbar";

var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};

export var ModalContent = /*#__PURE__*/memo(function (props) {
  var title = props.title,
      children = props.children,
      width = props.width,
      footer = props.footer,
      bodyStyle = props.bodyStyle,
      style = props.style,
      closable = props.closable,
      testid = props.testid,
      confirmLoading = props.confirmLoading,
      _props$okButtonProps = props.okButtonProps,
      okButtonProps = _props$okButtonProps === void 0 ? {} : _props$okButtonProps,
      _props$cancelButtonPr = props.cancelButtonProps,
      cancelButtonProps = _props$cancelButtonPr === void 0 ? {} : _props$cancelButtonPr,
      contentRef = props.contentRef,
      onOk = props.onOk,
      onCancel = props.onCancel,
      onMouseDown = props.onMouseDown; // 国际化

  var t = useTranslate(props.locale);
  var _props$okText = props.okText,
      okText = _props$okText === void 0 ? t('we_ui_ok_text') : _props$okText,
      _props$cancelText = props.cancelText,
      cancelText = _props$cancelText === void 0 ? t('we_ui_cancel_text') : _props$cancelText;
  return /*#__PURE__*/_createElement(Content, {
    ref: contentRef,
    width: width,
    style: style,
    onMouseDown: onMouseDown,
    "data-testid": testid ? "Modal_content_" + testid : undefined
  }, !!title && /*#__PURE__*/_createElement(Header, null, /*#__PURE__*/_createElement(Title, null, title)), /*#__PURE__*/_createElement(Body, {
    style: bodyStyle
  }, children), footer !== null && /*#__PURE__*/_createElement(Footer, {
    onMouseDown: stopPropagation
  }, footer || /*#__PURE__*/_createElement(FooterWrap, null, cancelText !== '' && /*#__PURE__*/_createElement(CancelButton, _extends({
    shape: "round",
    onClick: onCancel,
    testid: testid ? testid + "_close" : undefined
  }, cancelButtonProps), cancelText), /*#__PURE__*/_createElement(ConfirmButton, _extends({
    shape: "round",
    type: "primary",
    icon: confirmLoading ? _LoadingNormal || (_LoadingNormal = /*#__PURE__*/_createElement(LoadingNormal, {
      spin: true
    })) : undefined,
    onClick: onOk,
    testid: testid ? testid + "_confirm" : undefined
  }, okButtonProps), okText))), !!closable && /*#__PURE__*/_createElement(CloseButton, {
    onClick: onCancel
  }, /*#__PURE__*/_createElement(TemplateCloseNormal, {
    className: "close-icon",
    testid: testid ? testid + "_CloseButton" : undefined
  })));
});