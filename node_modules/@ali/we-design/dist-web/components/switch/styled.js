/* eslint-disable arrow-body-style */

/* eslint-disable @typescript-eslint/no-explicit-any */

/* eslint-disable @typescript-eslint/explicit-function-return-type */
import styled from 'styled-components';
import { resetComponent } from "../../utils/styled.mixin";
import { withTheme } from "../theme";
export var SwitchButton = withTheme(styled.button(["", " border:0;display:inline-block;position:relative;outline:none;transition:all .36s cubic-bezier(.78,.14,.15,.86);", " border-radius:", ";background-color:", ";overflow:hidden;cursor:pointer;", " ", ""], resetComponent, function (_ref) {
  var size = _ref.size,
      theme = _ref.theme;

  if (size === 'small') {
    return "\n        width: " + theme.ui.switchWidthSmall + ";\n        height: " + theme.ui.switchHeightSmall + ";\n      ";
  }

  return "\n      width: " + theme.ui.switchWidth + ";\n      height: " + theme.ui.switchHeight + ";\n    ";
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.ui.switchHeight;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.ui.colorText1;
}, function (_ref4) {
  var checked = _ref4.checked,
      theme = _ref4.theme;
  return checked ? "\n      background-color: " + theme.ui.primaryColor + ";\n    " : '';
}, function (_ref5) {
  var disabled = _ref5.disabled,
      checked = _ref5.checked,
      theme = _ref5.theme;
  return disabled ? "\n      cursor: not-allowed;\n      background-color: " + (checked ? theme.ui.primaryDisabledColor : theme.ui.disabledBackgroundColor) + ";\n    " : '';
}));
export var SwitchInner = withTheme(styled.span(["", " display:block;left:2px;top:2px;transition:all .36s cubic-bezier(.78,.14,.15,.86);", " border-radius:50%;position:absolute;background-color:", ";", ""], resetComponent, function (_ref6) {
  var checked = _ref6.checked,
      size = _ref6.size,
      theme = _ref6.theme;
  var height = size === 'small' ? parseInt(theme.ui.switchHeightSmall, 10) : parseInt(theme.ui.switchHeight, 10);
  return checked ? "\n      left: calc(100% - " + (height - 2) + "px);\n    " : '';
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.ui.colorGray1;
}, function (_ref8) {
  var size = _ref8.size,
      theme = _ref8.theme;

  if (size === 'small') {
    return "\n        width: " + (parseInt(theme.ui.switchHeightSmall, 10) - 4) + "px;\n        height: " + (parseInt(theme.ui.switchHeightSmall, 10) - 4) + "px;\n      ";
  }

  return "\n      width: " + (parseInt(theme.ui.switchHeight, 10) - 4) + "px;\n      height: " + (parseInt(theme.ui.switchHeight, 10) - 4) + "px;\n    ";
}));