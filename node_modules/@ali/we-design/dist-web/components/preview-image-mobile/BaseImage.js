var _AlignCenterWrapper, _AlignCenterWrapper2;

// 图片基本组件，图片加载状态以及
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { LoadingNormalNormal, CloseBigNormal } from '@ali/we-icon';
var Img = /*#__PURE__*/styled.img(["width:100%;opacity:1;background:#fff;transition:opacity .3s ease;"]);
var ImgWrapper = /*#__PURE__*/styled.div(["position:relative;&.is-unloaded{height:100%;", "{opacity:0;}}"], Img);
var AlignCenterWrapper = /*#__PURE__*/styled.div(["position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);font-size:0;"]);
var iconStyle = {
  fontSize: 48,
  color: '#fff'
};
var pathColors = ['#fff'];

var BaseImage = function BaseImage(props) {
  var src = props.src,
      onError = props.onError,
      onLoad = props.onLoad,
      style = props.style;

  var _React$useState = React.useState(false),
      isLoaded = _React$useState[0],
      setLoaded = _React$useState[1];

  var _React$useState2 = React.useState(false),
      isError = _React$useState2[0],
      setError = _React$useState2[1];

  var handleError = React.useCallback(function (e) {
    setError(true);
    onError && onError(src, e);
  }, []);
  var handleLoad = React.useCallback(function (e) {
    setLoaded(true);
    onLoad && onLoad(e);
  }, [onLoad]);
  var content = isError || !src ? _AlignCenterWrapper || (_AlignCenterWrapper = /*#__PURE__*/_createElement(AlignCenterWrapper, null, /*#__PURE__*/_createElement(CloseBigNormal, {
    style: iconStyle
  }))) : /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(Img, {
    src: src,
    onError: handleError,
    onLoad: handleLoad,
    style: style
  }), !isLoaded && (_AlignCenterWrapper2 || (_AlignCenterWrapper2 = /*#__PURE__*/_createElement(AlignCenterWrapper, null, /*#__PURE__*/_createElement(LoadingNormalNormal, {
    style: iconStyle,
    pathColors: pathColors
  })))));
  return /*#__PURE__*/_createElement(ImgWrapper, {
    className: !isLoaded ? 'is-unloaded' : ''
  }, content);
};

export default BaseImage;