import { Commands } from '@ali/4ever-cangjie';
import { isFocusToNodeAction, isInsertBlockWithoutExtraBlankAction, isValidateLastNodeAction, isMergeDataAction } from "../actions/index";
import validateLastParagraph from "../commands/validateLastParagraph";
import insertBlockWithoutExtraBlank from "../commands/insertBlockWithoutExtraBlank";
import mergeData from "../commands/mergeData";
export default function onAction(action, controller, next) {
  if (isFocusToNodeAction(action)) {
    var _ref = action.payload,
        node = _ref.node;
    return controller.command(Commands.moveToStartOfNode, node).command(Commands.focus);
  } else if (isValidateLastNodeAction(action)) {
    return controller.command(validateLastParagraph);
  } else if (isInsertBlockWithoutExtraBlankAction(action)) {
    return controller.command(insertBlockWithoutExtraBlank, action.payload.node);
  } else if (isMergeDataAction(action)) {
    return controller.command(mergeData, action.payload);
  }

  return next();
}
//# sourceMappingURL=onAction.js.map