{"version":3,"sources":["../../../../src/bi/handlers/onAction.ts"],"names":["Commands","isFocusToNodeAction","isInsertBlockWithoutExtraBlankAction","isValidateLastNodeAction","isMergeDataAction","validateLastParagraph","insertBlockWithoutExtraBlank","mergeData","onAction","action","controller","next","payload","node","command","moveToStartOfNode","focus"],"mappings":"AAAA,SAAqBA,QAArB,QAAqD,oBAArD;AACA,SAASC,mBAAT,EAA8BC,oCAA9B,EAAoEC,wBAApE,EAA8FC,iBAA9F;AACA,OAAOC,qBAAP;AACA,OAAOC,4BAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAkDC,IAAlD,EAAwD;AACrE,MAAIV,mBAAmB,CAACQ,MAAD,CAAvB,EAAiC;AAAA,eACdA,MAAM,CAACG,OADO;AAAA,QACvBC,IADuB,QACvBA,IADuB;AAE/B,WAAOH,UAAU,CACdI,OADI,CACId,QAAQ,CAACe,iBADb,EACgCF,IADhC,EAEJC,OAFI,CAEId,QAAQ,CAACgB,KAFb,CAAP;AAGD,GALD,MAKO,IAAIb,wBAAwB,CAACM,MAAD,CAA5B,EAAsC;AAC3C,WAAOC,UAAU,CAACI,OAAX,CAAmBT,qBAAnB,CAAP;AACD,GAFM,MAEA,IAAIH,oCAAoC,CAACO,MAAD,CAAxC,EAAkD;AACvD,WAAOC,UAAU,CAACI,OAAX,CAAmBR,4BAAnB,EAAiDG,MAAM,CAACG,OAAP,CAAgBC,IAAjE,CAAP;AACD,GAFM,MAEA,IAAIT,iBAAiB,CAACK,MAAD,CAArB,EAA+B;AACpC,WAAOC,UAAU,CAACI,OAAX,CAAmBP,SAAnB,EAA8BE,MAAM,CAACG,OAArC,CAAP;AACD;;AAED,SAAOD,IAAI,EAAX;AACD","sourcesContent":["import { Controller, Commands, BiPluginConfig } from '@ali/4ever-cangjie';\nimport { isFocusToNodeAction, isInsertBlockWithoutExtraBlankAction, isValidateLastNodeAction, isMergeDataAction, isTriggerMarkdownAction } from '../actions/index';\nimport validateLastParagraph from '../commands/validateLastParagraph';\nimport insertBlockWithoutExtraBlank from '../commands/insertBlockWithoutExtraBlank';\nimport mergeData from '../commands/mergeData';\n\nexport default function onAction(action, controller: Controller, next) {\n  if (isFocusToNodeAction(action)) {\n    const { node } = action.payload!;\n    return controller\n      .command(Commands.moveToStartOfNode, node)\n      .command(Commands.focus);\n  } else if (isValidateLastNodeAction(action)) {\n    return controller.command(validateLastParagraph);\n  } else if (isInsertBlockWithoutExtraBlankAction(action)) {\n    return controller.command(insertBlockWithoutExtraBlank, action.payload!.node)\n  } else if (isMergeDataAction(action)) {\n    return controller.command(mergeData, action.payload!);\n  }\n\n  return next();\n}"],"file":"onAction.js"}