{"version":3,"sources":["../../../../src/bi/handlers/onEnter.ts"],"names":["Commands","getClosestParagraph","uniqueId","onEnter","event","controller","next","value","startBlock","selection","focusInline","closestParagraphBlock","data","uuid","preventDefault","command","splitBlock","newDocument","document","newSelection","currentBlock","getClosestBlock","anchor","key","setNodeByKey"],"mappings":";AACA,SAAqBA,QAArB,QAA4C,oBAA5C;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,QAAT,QAA0B,kBAA1B;AAEA,eAAe,SAASC,OAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AAAA,MACQC,KADR,GACkBF,UADlB,CACQE,KADR;AAAA,MAEQC,UAFR,GAE+CD,KAF/C,CAEQC,UAFR;AAAA,MAEoBC,SAFpB,GAE+CF,KAF/C,CAEoBE,SAFpB;AAAA,MAE+BC,WAF/B,GAE+CH,KAF/C,CAE+BG,WAF/B;AAGA,MAAI,CAACF,UAAD,IAAe,CAACC,SAApB,EAA+B,OAAOH,IAAI,EAAX,CAH/B,CAKA;;AACA,MAAII,WAAJ,EAAiB,OAAOJ,IAAI,EAAX;AAEjB,MAAMK,qBAAmC,GAAGV,mBAAmB,CAACM,KAAD,CAA/D;AACA,MAAI,CAACI,qBAAL,EAA4B,OAAOL,IAAI,EAAX,CAT5B,CAWA;;AACA,MAAI,CAACK,qBAAqB,CAACC,IAAtB,CAA2BC,IAAhC,EAAsC,OAAOP,IAAI,EAAX;AAEtCF,EAAAA,KAAK,CAACU,cAAN;AACAT,EAAAA,UAAU,CAACU,OAAX,CAAmBf,QAAQ,CAACgB,UAA5B;AAfA,0BAiB2DX,UAAU,CAACE,KAjBtE;AAAA,MAiBkBU,WAjBlB,qBAiBQC,QAjBR;AAAA,MAiB0CC,YAjB1C,qBAiB+BV,SAjB/B;AAkBA,MAAMW,YAAY,GAAGH,WAAW,CAACI,eAAZ,CAA4BF,YAAY,CAACG,MAAb,CAAoBC,GAAhD,CAArB;;AAEA,MAAIH,YAAJ,EAAkB;AAChB,WAAOf,UAAU,CAACU,OAAX,CAAmBf,QAAQ,CAACwB,YAA5B,EAA0CJ,YAAY,CAACG,GAAvD,EAA4D;AACjEX,MAAAA,IAAI,eACCQ,YADD,oBACCA,YAAY,CAAER,IADf;AAEFC,QAAAA,IAAI,EAAEX,QAAQ;AAFZ;AAD6D,KAA5D,CAAP;AAMD;;AAED,SAAOG,UAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller, Commands, Block } from '@ali/4ever-cangjie';\nimport { getClosestParagraph } from '@ali/4ever-utils';\nimport { uniqueId }  from '@ali/4ever-utils';\n\nexport default function onEnter(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: Function,\n) {\n  const { value } = controller;\n  const { startBlock, selection, focusInline } = value;\n  if (!startBlock || !selection) return next();\n\n  // 如果当前有 inline 节点 focus 状态 不处理\n  if (focusInline) return next();\n\n  const closestParagraphBlock: Block | null = getClosestParagraph(value);\n  if (!closestParagraphBlock) return next();\n\n  // 如果原始段落本身没有id，暂不处理，生成锚点的时候自然会生成id\n  if (!closestParagraphBlock.data.uuid) return next();\n\n  event.preventDefault();\n  controller.command(Commands.splitBlock);\n\n  const { document: newDocument, selection: newSelection } = controller.value;\n  const currentBlock = newDocument.getClosestBlock(newSelection.anchor.key);\n\n  if (currentBlock) {\n    return controller.command(Commands.setNodeByKey, currentBlock.key, {\n      data: {\n        ...currentBlock?.data,\n        uuid: uniqueId(),\n      },\n    });\n  }\n\n  return controller;\n}\n"],"file":"onEnter.js"}