"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "createFocusToNodeAction", {
  enumerable: true,
  get: function () {
    return _focusToNode.createFocusToNodeAction;
  }
});
Object.defineProperty(exports, "isFocusToNodeAction", {
  enumerable: true,
  get: function () {
    return _focusToNode.isFocusToNodeAction;
  }
});
Object.defineProperty(exports, "createValidateLastNodeAction", {
  enumerable: true,
  get: function () {
    return _validateLastNode.createValidateLastNodeAction;
  }
});
Object.defineProperty(exports, "isValidateLastNodeAction", {
  enumerable: true,
  get: function () {
    return _validateLastNode.isValidateLastNodeAction;
  }
});
Object.defineProperty(exports, "createInsertBlockWithoutExtraBlankAction", {
  enumerable: true,
  get: function () {
    return _insertBlockWithoutExtraBlank.createInsertBlockWithoutExtraBlankAction;
  }
});
Object.defineProperty(exports, "isInsertBlockWithoutExtraBlankAction", {
  enumerable: true,
  get: function () {
    return _insertBlockWithoutExtraBlank.isInsertBlockWithoutExtraBlankAction;
  }
});
Object.defineProperty(exports, "createMergeDataAction", {
  enumerable: true,
  get: function () {
    return _mergeData.createMergeDataAction;
  }
});
Object.defineProperty(exports, "isMergeDataAction", {
  enumerable: true,
  get: function () {
    return _mergeData.isMergeDataAction;
  }
});
Object.defineProperty(exports, "createTriggerMarkdownAction", {
  enumerable: true,
  get: function () {
    return _triggerMarkdown.createTriggerMarkdownAction;
  }
});
Object.defineProperty(exports, "isTriggerMarkdownAction", {
  enumerable: true,
  get: function () {
    return _triggerMarkdown.isTriggerMarkdownAction;
  }
});
exports.isActions = exports.actions = void 0;

var _focusToNode = require("./focusToNode");

var _validateLastNode = require("./validateLastNode");

var _insertBlockWithoutExtraBlank = require("./insertBlockWithoutExtraBlank");

var _mergeData = require("./mergeData");

var _triggerMarkdown = require("./triggerMarkdown");

const actions = {
  createFocusToNodeAction: _focusToNode.createFocusToNodeAction,
  createValidateLastNodeAction: _validateLastNode.createValidateLastNodeAction,
  createInsertBlockWithoutExtraBlankAction: _insertBlockWithoutExtraBlank.createInsertBlockWithoutExtraBlankAction,
  createMergeDataAction: _mergeData.createMergeDataAction,
  createTriggerMarkdownAction: _triggerMarkdown.createTriggerMarkdownAction
};
exports.actions = actions;
const isActions = {
  isFocusToNodeAction: _focusToNode.isFocusToNodeAction,
  isInsertBlockWithoutExtraBlankAction: _insertBlockWithoutExtraBlank.isInsertBlockWithoutExtraBlankAction,
  isValidateLastNodeAction: _validateLastNode.isValidateLastNodeAction,
  isMergeDataAction: _mergeData.isMergeDataAction,
  isTriggerMarkdownAction: _triggerMarkdown.isTriggerMarkdownAction
};
exports.isActions = isActions;
//# sourceMappingURL=index.js.map