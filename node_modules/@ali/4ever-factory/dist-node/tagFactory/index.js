"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tagFactory = tagFactory;
Object.defineProperty(exports, "removeTag", {
  enumerable: true,
  get: function () {
    return _actions.removeTag;
  }
});
Object.defineProperty(exports, "setTagData", {
  enumerable: true,
  get: function () {
    return _actions.setTagData;
  }
});
Object.defineProperty(exports, "insertTag", {
  enumerable: true,
  get: function () {
    return _actions.insertTag;
  }
});

var _createRenderElement = _interopRequireDefault(require("./createRenderElement"));

var _createRenderContent = _interopRequireDefault(require("./createRenderContent"));

var _createOnKeyDown = _interopRequireDefault(require("./handlers/createOnKeyDown"));

var _createOnAction = _interopRequireDefault(require("./handlers/createOnAction"));

var _actions = require("./actions");

var _insertTag = _interopRequireDefault(require("./command/insertTag"));

var _createOnCangjiePaste = _interopRequireDefault(require("./handlers/createOnCangjiePaste"));

function tagFactory(createPlugin, moFactory) {
  return function createTagPlugin(bizConfig) {
    const myPlugin = createPlugin(bizConfig);
    const {
      menubar,
      toolbar,
      onAction,
      onCangjiePaste,
      actions,
      renderHoverToolbar
    } = myPlugin;
    return { ...moFactory?.({}),
      key: myPlugin.tagType,
      tagType: myPlugin.tagType,
      menubar,
      // @ts-ignore
      toolbar,
      renderContent: (0, _createRenderContent.default)(myPlugin),
      renderNode: (0, _createRenderElement.default)(myPlugin, bizConfig),
      onKeyDown: (0, _createOnKeyDown.default)(),
      onAction: (0, _createOnAction.default)(onAction),
      onCangjiePaste: (0, _createOnCangjiePaste.default)(onCangjiePaste),
      commands: {
        insertTag: _insertTag.default
      },
      actions,
      queries: myPlugin.queries || {},
      models: {
        klass: 'inline',
        type: 'tag'
      },
      renderHoverToolbar
    };
  };
}
//# sourceMappingURL=index.js.map