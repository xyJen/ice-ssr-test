"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeCard = removeCard;
exports.insertCard = insertCard;
exports.setCardData = setCardData;
exports.setCardInjection = setCardInjection;
exports.CARD_SET_INJECTION = exports.CARD_SET_DATA = exports.CARD_REMOVE = exports.CARD_INSERT = void 0;

var _everLogger = _interopRequireDefault(require("@ali/4ever-logger"));

const CARD_INSERT = Symbol('card-insert');
exports.CARD_INSERT = CARD_INSERT;
const CARD_REMOVE = Symbol('card-remove');
exports.CARD_REMOVE = CARD_REMOVE;
const CARD_SET_DATA = Symbol('card-set-data');
exports.CARD_SET_DATA = CARD_SET_DATA;
const CARD_SET_INJECTION = Symbol('card-set-injection');
exports.CARD_SET_INJECTION = CARD_SET_INJECTION;

function removeCard(node) {
  return {
    type: CARD_REMOVE,
    payload: {
      node
    }
  };
}

function insertCard(payload) {
  return {
    type: CARD_INSERT,
    payload
  };
}

function setCardData(node, mergeData) {
  return {
    type: CARD_SET_DATA,
    payload: {
      node,
      mergeData
    }
  };
}

function setCardInjection(node, injection) {
  if (!node) {
    _everLogger.default.error(`Invalid node! injection is ${JSON.stringify(injection)}`);
  }

  return {
    type: CARD_SET_INJECTION,
    payload: {
      node,
      injection
    }
  };
}
//# sourceMappingURL=actions.js.map