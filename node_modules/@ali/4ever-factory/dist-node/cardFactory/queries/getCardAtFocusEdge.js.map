{"version":3,"sources":["../../../../src/cardFactory/queries/getCardAtFocusEdge.ts"],"names":["getCardAtFocusEdge","controller","dire","selection","focusBlock","document","value","focus","anchor","isEdgePoint","key","type","start","getStart","isAtStartOfNode","preNode","getPreviousSibling","Block","isBlock","isAtEndOfNode","nextNode","getNextSibling"],"mappings":";;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,kBAAT,CAA4BC,UAA5B,EAAoDC,IAApD,EAAkG;AAC/G,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAAsCJ,UAAU,CAACK,KAAvD;AACA,MAAI,CAACH,SAAD,IAAc,CAACC,UAAnB,EAA+B,OAAO,IAAP;AAC/B,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBL,SAA1B;AACA,MAAII,KAAK,CAACE,WAAN,MAAuBD,MAAM,CAACC,WAAP,EAAvB,IAA+CF,KAAK,CAACG,GAAN,KAAcF,MAAM,CAACE,GAApE,IAA2EN,UAAU,CAACO,IAAX,KAAoB,MAAnG,EAA2G,OAAOP,UAAP;AAC3G,QAAMQ,KAAK,GAAGT,SAAS,CAACU,QAAV,CAAmBR,QAAnB,CAAd;;AACA,MAAIH,IAAI,KAAK,UAAT,IAAuBU,KAAK,CAACE,eAAN,CAAsBV,UAAtB,CAA3B,EAA8D;AAC5D,UAAMW,OAAO,GAAGV,QAAQ,CAACW,kBAAT,CAA4BZ,UAAU,CAACM,GAAvC,CAAhB;AACA,QAAIK,OAAO,IAAIE,mBAAMC,OAAN,CAAcH,OAAd,CAAX,IAAqCA,OAAO,CAACJ,IAAR,KAAiB,MAA1D,EAAkE,OAAOI,OAAP;AACnE,GAHD,MAGO,IAAIb,IAAI,KAAK,SAAT,IAAsBU,KAAK,CAACO,aAAN,CAAoBf,UAApB,CAA1B,EAA2D;AAChE,UAAMgB,QAAQ,GAAGf,QAAQ,CAACgB,cAAT,CAAwBjB,UAAU,CAACM,GAAnC,CAAjB;AACA,QAAIU,QAAQ,IAAIH,mBAAMC,OAAN,CAAcE,QAAd,CAAZ,IAAuCA,QAAQ,CAACT,IAAT,KAAkB,MAA7D,EAAqE,OAAOS,QAAP;AACtE;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { Controller, Element, Block } from '@ali/4ever-cangjie';\n/**\n * 获取focus边缘的card节点\n * @param controller\n * @param dire 方向\n */\nexport default function getCardAtFocusEdge(controller: Controller, dire: 'Backward' | 'Forward'): Element | null {\n  const { selection, focusBlock, document } = controller.value;\n  if (!selection || !focusBlock) return null;\n  const { focus, anchor } = selection;\n  if (focus.isEdgePoint() && anchor.isEdgePoint() && focus.key === anchor.key && focusBlock.type === 'card') return focusBlock;\n  const start = selection.getStart(document);\n  if (dire === 'Backward' && start.isAtStartOfNode(focusBlock)) {\n    const preNode = document.getPreviousSibling(focusBlock.key);\n    if (preNode && Block.isBlock(preNode) && preNode.type === 'card') return preNode;\n  } else if (dire === 'Forward' && start.isAtEndOfNode(focusBlock)) {\n    const nextNode = document.getNextSibling(focusBlock.key);\n    if (nextNode && Block.isBlock(nextNode) && nextNode.type === 'card') return nextNode;\n  }\n  return null;\n}"],"file":"getCardAtFocusEdge.js"}