{"version":3,"sources":["../../../../../src/cardFactory/components/cardContainer/index.tsx"],"names":["Container","props","children","cardStyle","node","attributes","isMobile","isSelected","restrictSize","controller","cardType","height","spacing","data","isFocused","value","realHeight","style","React","useMemo","cssHeight","overflow","calcStyle","width","className","selected","Boolean","Card","TYPE"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;uBAH4B,a;;AAiB5B,MAAMA,SAA4C,GAAIC,KAAD,IAAW;AAC9D,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,SAAS,GAAG,EAFR;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,YAPI;AAQJC,IAAAA;AARI,MASFR,KATJ;AAUA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAAgCR,IAAI,CAACS,IAA3C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBL,UAAU,CAACM,KAAjC;AAEA,QAAMC,UAAU,GAAGV,QAAQ,GAAG,MAAH,GAAYK,MAAvC;;AACA,QAAMM,KAAoB,GAAGC,eAAMC,OAAN,CAAc,MAAM;AAC/C,QAAIC,SAAc,GAAG,MAArB;AACA,QAAIC,QAAQ,GAAG,SAAf;;AACA,QAAIb,YAAJ,EAAkB;AAChBY,MAAAA,SAAS,GAAG,sBAASJ,UAAT,IAAwB,GAAEA,UAAW,IAArC,GAA2CA,UAAvD;AACAK,MAAAA,QAAQ,GAAG,QAAX;AACD;;AACD,UAAMC,SAAwB,GAAG;AAC/BX,MAAAA,MAAM,EAAES,SADuB;AAE/BG,MAAAA,KAAK,EAAE,MAFwB;AAG/BF,MAAAA,QAH+B;AAI/B,SAAGlB;AAJ4B,KAAjC;AAMA,WAAOmB,SAAP;AACD,GAd4B,EAc1B,CAACN,UAAD,EAAaJ,OAAb,EAAsBJ,YAAtB,CAd0B,CAA7B;;AAgBA,QAAMgB,SAAiB,GAAGN,eAAMC,OAAN,CAAc,MAAM,yBAAW;AACvDM,IAAAA,QAAQ,EAAEC,OAAO,CAACnB,UAAU,IAAIO,SAAf;AADsC,GAAX,CAApB,EAEtB,CAACP,UAAD,EAAaO,SAAb,CAFsB,CAA1B;;AAIA,sBACE,eAAC,2BAAD;AACE,IAAA,KAAK,EAAEG;AADT,KAEMZ,UAFN;AAGE,mBAAaK,QAHf;AAIE,iBAAWiB,qBAAKC,IAJlB;AAKE,IAAA,SAAS,EAAEJ;AALb,MAOGtB,QAPH,CADF;AAUD,CA7CD;;eA+CeF,S","sourcesContent":["import React, { CSSProperties } from 'react';\nimport { isNumber } from 'lodash-es';\nimport classnames from 'classnames';\nimport { RenderNodeProps } from '@ali/4ever-cangjie';\nimport { Card, CardWrapper } from '@ali/4ever-plugin-card';\nimport { CardLocale } from '../../type';\nimport type { BiPluginConfig } from '@ali/4ever-cangjie';\n\ninterface RenderCardChildrenProps extends Omit<RenderNodeProps<Card>, 'children'> {\n  locale?: CardLocale;\n  isMobile?: boolean;\n  children: JSX.Element;\n  config: BiPluginConfig;\n  restrictSize?: boolean;\n  disableSelected?: boolean;\n  cardStyle?: React.CSSProperties;\n}\n\nconst Container: React.FC<RenderCardChildrenProps> = (props) => {\n  const {\n    children,\n    cardStyle = {},\n    node,\n    attributes,\n    isMobile,\n    isSelected,\n    restrictSize,\n    controller,\n  } = props;\n  const { cardType, height, spacing } = node.data;\n  const { isFocused } = controller.value;\n\n  const realHeight = isMobile ? 'auto' : height;\n  const style: CSSProperties = React.useMemo(() => {\n    let cssHeight: any = 'auto';\n    let overflow = 'initial';\n    if (restrictSize) {\n      cssHeight = isNumber(realHeight) ? `${realHeight}px` : realHeight;\n      overflow = 'hidden';\n    }\n    const calcStyle: CSSProperties = {\n      height: cssHeight,\n      width: '100%',\n      overflow,\n      ...cardStyle,\n    };\n    return calcStyle;\n  }, [realHeight, spacing, restrictSize]);\n\n  const className: string = React.useMemo(() => classnames({\n    selected: Boolean(isSelected && isFocused),\n  }), [isSelected, isFocused]);\n\n  return (\n    <CardWrapper\n      style={style}\n      {...attributes}\n      data-testid={cardType}\n      data-type={Card.TYPE}\n      className={className}\n    >\n      {children}\n    </CardWrapper>);\n};\n\nexport default Container;\n"],"file":"index.js"}