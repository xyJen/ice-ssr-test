{"version":3,"sources":["../../../../../src/zhi/groupFactory/handlers/createOnAction.ts"],"names":["createOnAction","customizedAction","handleCommentShow","onAutoUnfold","controller","node","command","injectFold","inject","onAction","action","next","type","payload","TOGGLE_FOLD","fold","ACTION_COMMENT_SHOW"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AAEA,SAASA,cAAT,CAAwBC,gBAAxB,EAAmF;AACjF,QAAMC,iBAAiB,GAAG,+CAAkB;AAC1CC,IAAAA,YAAY,EAAE,CAACC,UAAD,EAAaC,IAAb,KAAsBD,UAAU,CAACE,OAAX,CAAmBC,gBAAnB,EAA+BF,IAA/B,EAAqC,KAArC,CADM;AAE1CG,IAAAA,MAAM,EAAE;AAFkC,GAAlB,CAA1B;AAKA,SAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BN,UAA1B,EAAsCO,IAAtC,EAA4C;AACjD,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBH,MAA1B;;AAEA,QAAIE,IAAI,KAAKE,mCAAb,EAA0B;AACxB,YAAM;AAAET,QAAAA,IAAF;AAAQU,QAAAA;AAAR,UAAiBF,OAAvB;AACA,aAAOT,UAAU,CAACE,OAAX,CAAmBC,gBAAnB,EAA+BF,IAA/B,EAAqCU,IAArC,CAAP;AACD;;AAED,QAAIH,IAAI,KAAKI,sCAAT,IAAgCH,OAApC,EAA6C;AAC3CX,MAAAA,iBAAiB,CAACE,UAAD,EAAaS,OAAb,CAAjB;AACD;;AAED,WAAOZ,gBAAgB,GAAGA,gBAAgB,CAACS,MAAD,EAASN,UAAT,EAAqBO,IAArB,CAAnB,GAAgDA,IAAI,EAA3E;AACD,GAbD;AAcD;;eAEcX,c","sourcesContent":["import { Plugin } from '@ali/4ever-cangjie';\nimport { ACTION_COMMENT_SHOW } from '@ali/4ever-plugin-comment';\nimport { TOGGLE_FOLD, createCommentShow } from '@ali/4ever-plugin-heading-group';\nimport type { ToggleFoldPayload } from '@ali/4ever-plugin-heading-group';\nimport { injectFold } from '../commands/fold';\n\nfunction createOnAction(customizedAction?: Plugin['onAction']): Plugin['onAction'] {\n  const handleCommentShow = createCommentShow({\n    onAutoUnfold: (controller, node) => controller.command(injectFold, node, false),\n    inject: true,\n  });\n\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n\n    if (type === TOGGLE_FOLD) {\n      const { node, fold } = payload as ToggleFoldPayload;\n      return controller.command(injectFold, node, fold);\n    }\n\n    if (type === ACTION_COMMENT_SHOW && payload) {\n      handleCommentShow(controller, payload as any);\n    }\n\n    return customizedAction ? customizedAction(action, controller, next) : next();\n  };\n}\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}