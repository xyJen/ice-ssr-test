{"version":3,"sources":["../../../src/embedFactory/mobileEmbedPluginFactory.ts"],"names":["mobileEmbedPluginFactory","params","moFactory","createRenderNode","commands","configName","actions","customActions","config","pluginConfig","uploadFile","enableFilePreview","insertCommandName","key","renderNode","insertFile","onAction","models","klass","type"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;AAMe,SAASA,wBAAT,CAAkCC,MAAlC,EAA8DC,SAA9D,EAAoF;AACjG,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,UAA9B;AAA0CC,IAAAA,OAAO,EAAEC,aAAa,GAAG;AAAnE,MAA0EN,MAAhF;AACA,SAAO,UAAUO,MAAV,EAA4B;AACjC,UAAMC,YAAY,GAAGD,MAAM,CAACH,UAAD,CAAN,IAAsB,EAA3C;AACA,UAAM;AAAEK,MAAAA,UAAF;AAAcC,MAAAA,iBAAiB,GAAG;AAAlC,QAA4CF,YAAlD,CAFiC,CAIjC;;AACA,UAAMG,iBAAiB,GAAI,SAAQ,wBAAWP,UAAX,CAAuB,EAA1D;AAEA,WAAO,EACL,GAAGH,SAAS,CAAC,EAAD,CADP;AAELW,MAAAA,GAAG,EAAER,UAFA;AAGLS,MAAAA,UAAU,EAAEX,gBAAgB,CAACK,MAAD,CAHvB;AAILJ,MAAAA,QAAQ,EAAE;AACR,SAACQ,iBAAD,GAAqB,0BAAYF,UAAZ,EAAwBC,iBAAxB,EAA2CN,UAA3C,CADb;AAERU,QAAAA,UAAU,EAAVA,mBAFQ;AAGR,WAAGX;AAHK,OAJL;AASLY,MAAAA,QAAQ,EAARA,iBATK;AAULC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,IAAI,EAAE;AAFA;AAVH,KAAP;AAeD,GAtBD;AAuBD","sourcesContent":["import { upperFirst } from 'lodash-es';\nimport insertEmbed from './commands/insertEmbed';\nimport insertFile from './commands/insertFile';\nimport * as actions from './actions';\nimport onAction from './handlers/onAction';\nimport { EmbedFactoryParams } from './types';\nimport { BiPlugin, MoFactory } from '@ali/4ever-cangjie';\n\nexport { actions };\n\nexport default function mobileEmbedPluginFactory(params: EmbedFactoryParams, moFactory: MoFactory) {\n  const { createRenderNode, commands, configName, actions: customActions = {} } = params;\n  return function (config): BiPlugin {\n    const pluginConfig = config[configName] || {};\n    const { uploadFile, enableFilePreview = false } = pluginConfig;\n\n    // 目前存在 insertVideo, insertAudio, insertEmbed 三个 command\n    const insertCommandName = `insert${upperFirst(configName)}`;\n\n    return {\n      ...moFactory({}),\n      key: configName,\n      renderNode: createRenderNode(config),\n      commands: {\n        [insertCommandName]: insertEmbed(uploadFile, enableFilePreview, configName),\n        insertFile,\n        ...commands,\n      },\n      onAction,\n      models: {\n        klass: 'block',\n        type: 'embed',\n      },\n    };\n  };\n}\n"],"file":"mobileEmbedPluginFactory.js"}