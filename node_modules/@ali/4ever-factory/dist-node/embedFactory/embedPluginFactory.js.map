{"version":3,"sources":["../../../src/embedFactory/embedPluginFactory.ts"],"names":["embedPluginFactory","params","moFactory","createRenderNode","commands","menubar","toolbar","quickInsert","configName","actions","pluginActions","createPlugin","config","pluginConfig","uploadFile","enableFilePreview","autoPreview","insertCommandName","key","insertFile","renderNode","onAction","onDrop","models","klass","type"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAEe,SAASA,kBAAT,CAA4BC,MAA5B,EAAwDC,SAAxD,EAA8E;AAC3F,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA,OAAvC;AAAgDC,IAAAA,WAAhD;AAA6DC,IAAAA,UAA7D;AAAyEC,IAAAA,OAAO,EAAEC;AAAlF,MAAoGT,MAA1G;;AACA,WAASU,YAAT,CAAsBC,MAAtB,EAAwC;AACtC,UAAMC,YAAY,GAAGD,MAAM,CAACJ,UAAD,CAAN,IAAsB,EAA3C;AACA,UAAM;AAAEM,MAAAA,UAAF;AAAcC,MAAAA,iBAAiB,GAAG,IAAlC;AAAwCC,MAAAA,WAAW,GAAG;AAAtD,QAA+DH,YAArE,CAFsC,CAItC;;AACA,UAAMI,iBAAiB,GAAI,SAAQ,wBAAWT,UAAX,CAAuB,EAA1D;AAEA,WAAO,EACL,GAAGN,SAAS,CAAC,EAAD,CADP;AAELgB,MAAAA,GAAG,EAAEV,UAFA;AAGLH,MAAAA,OAHK;AAIL;AACAC,MAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAO,CAACM,MAAD,CAAV,GAAqB,IALhC;AAMLR,MAAAA,QAAQ,EAAE;AACR;AACA,SAACa,iBAAD,GAAqB,0BAAYH,UAAZ,EAAwBC,iBAAiB,IAAIC,WAA7C,EAA0DR,UAA1D,CAFb;AAGRW,QAAAA,UAAU,EAAVA,mBAHQ;AAIR,WAAGf;AAJK,OANL;AAYLgB,MAAAA,UAAU,EAAEjB,gBAAgB,CAACS,MAAD,CAZvB;AAaLS,MAAAA,QAAQ,EAARA,iBAbK;AAcLC,MAAAA,MAAM,EAAE,qBAAOR,UAAP,EAAmBC,iBAAnB,CAdH;AAeLR,MAAAA,WAfK;AAgBLgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,IAAI,EAAE;AAFA;AAhBH,KAAP;AAqBD;;AAEDd,EAAAA,YAAY,CAACF,OAAb,GAAuBC,aAAa,IAAID,OAAxC;AAEA,SAAOE,YAAP;AACD","sourcesContent":["import { upperFirst } from 'lodash-es';\nimport insertEmbed from './commands/insertEmbed';\nimport insertFile from './commands/insertFile';\nimport onAction from './handlers/onAction';\nimport onDrop from './handlers/onDrop';\nimport { EmbedFactoryParams } from './types';\nimport type { BiPlugin, MoFactory } from '@ali/4ever-cangjie';\nimport * as actions from './actions';\n\nexport default function embedPluginFactory(params: EmbedFactoryParams, moFactory: MoFactory) {\n  const { createRenderNode, commands, menubar, toolbar, quickInsert, configName, actions: pluginActions } = params;\n  function createPlugin(config): BiPlugin {\n    const pluginConfig = config[configName] || {};\n    const { uploadFile, enableFilePreview = true, autoPreview = true } = pluginConfig;\n\n    // 目前存在 insertVideo, insertAudio, insertEmbed 三个 command\n    const insertCommandName = `insert${upperFirst(configName)}`;\n\n    return {\n      ...moFactory({}),\n      key: configName,\n      menubar,\n      // @ts-ignore\n      toolbar: toolbar ? toolbar(config) : null,\n      commands: {\n        // TODO insertEmbed 的第二个参数 enableFilePreview 并不适用于所有的子插件，目前视频始终允许预览\n        [insertCommandName]: insertEmbed(uploadFile, enableFilePreview && autoPreview, configName),\n        insertFile,\n        ...commands,\n      },\n      renderNode: createRenderNode(config),\n      onAction,\n      onDrop: onDrop(uploadFile, enableFilePreview),\n      quickInsert,\n      models: {\n        klass: 'block',\n        type: 'embed',\n      },\n    };\n  }\n\n  createPlugin.actions = pluginActions || actions;\n\n  return createPlugin;\n}\n"],"file":"embedPluginFactory.js"}