{"version":3,"sources":["../../../../src/embedFactory/handlers/onAction.ts"],"names":["onAction","action","controller","next","type","payload","FILE_UPDATE","node","data","FILE_REMOVE"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEe,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4C;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,MAA1B;;AACA,MAAIG,IAAI,KAAKE,oBAAb,EAA0B;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiBH,OAAvB;AACA,WAAO,yBAAWH,UAAX,EAAuBK,IAAvB,EAA6BC,IAA7B,CAAP;AACD;;AACD,MAAIJ,IAAI,KAAKK,oBAAb,EAA0B;AACxB,UAAM;AAAEF,MAAAA;AAAF,QAAWF,OAAjB;AACA,WAAO,yBAAWH,UAAX,EAAuBK,IAAvB,CAAP;AACD;;AAED,SAAOJ,IAAI,EAAX;AACD","sourcesContent":["import { FILE_UPDATE, FILE_REMOVE } from '../actions';\nimport updateFile from '../commands/updateFile';\nimport removeFile from '../commands/removeFile';\n\nexport default function onAction(action, controller, next) {\n  const { type, payload } = action;\n  if (type === FILE_UPDATE) {\n    const { node, data } = payload;\n    return updateFile(controller, node, data);\n  }\n  if (type === FILE_REMOVE) {\n    const { node } = payload;\n    return removeFile(controller, node);\n  }\n\n  return next();\n}\n"],"file":"onAction.js"}