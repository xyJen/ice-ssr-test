{"version":3,"sources":["../../../../src/embedFactory/components/EmbedInlineToolbar.tsx"],"names":["embedInlineLayout","toolButtons","name","EmbedInlineToolbar","props","locale","controller","node","onSwitchViewType","isMoreButtonShown","triggerNode","isBlurred","value","isExpanded","rangeSelection","data","shouldShowModeButtons","CanPreviewFileTypes","includes","handleSwitchView","e","type","preventDefault","stopPropagation","handlePreviewMode","handleCardMode","handleDel","React","useCallback","event","run","EmbedCardButton","cardView","EmbedPreviewButton","previewView","DelEmbedButton","delete","customToolButtons","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, DeleteBetaNormal, EmbedCardBetaNormal, Preview1BetaNormal } from '@ali/we-design';\nimport {\n  Controller,\n} from '@ali/4ever-cangjie';\nimport {\n  InlineToolbar,\n} from '@ali/4ever-component';\nimport { removeFile } from '../actions';\nimport { EmbedNode, getFileTypeForRead, CanPreviewFileTypes } from '@ali/4ever-plugin-embed';\n\ninterface InlineToolbarProps {\n  controller: Controller;\n  node: EmbedNode;\n  locale: Record<string, any>;\n  onSwitchViewType?: Function;\n  isMoreButtonShown?: boolean;\n  triggerNode?: HTMLDivElement | null;\n}\n\nconst embedInlineLayout = [{\n  toolButtons: [{\n    name: 'embed.cardMode',\n  }, {\n    name: 'embed.previewMode',\n  }, {\n    name: 'embed.del',\n  }],\n}];\n\nconst EmbedInlineToolbar: React.FC<InlineToolbarProps> = (props) => {\n  const {\n    locale,\n    controller,\n    node,\n    onSwitchViewType,\n    isMoreButtonShown,\n    triggerNode,\n  } = props;\n\n  const { isBlurred } = controller.value;\n  const { isExpanded } = controller.value.rangeSelection;\n  const { data } = node;\n  const { name } = data;\n  const shouldShowModeButtons = (\n    CanPreviewFileTypes.includes(getFileTypeForRead(name)) &&\n    isMoreButtonShown);\n\n  const handleSwitchView = (e: MouseEvent, type: 'card' | 'preview') => {\n    e.preventDefault();\n    e.stopPropagation();\n    onSwitchViewType && onSwitchViewType(type);\n  };\n\n  const handlePreviewMode = (e) => {\n    handleSwitchView(e, 'preview');\n  };\n\n  const handleCardMode = (e) => {\n    handleSwitchView(e, 'card');\n  };\n\n  const handleDel = React.useCallback((event: React.MouseEvent | React.TouchEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    controller.run('onAction', removeFile(node));\n  }, [controller, node]);\n\n  const EmbedCardButton = () => {\n    return (\n      <Button\n        bordered={false}\n        onClick={handleCardMode}\n        title={locale.cardView}\n        icon={<EmbedCardBetaNormal />}\n        testid=\"embed-toolbar-card\"\n      />\n    );\n  };\n\n  const EmbedPreviewButton = () => {\n    return (\n      <Button\n        bordered={false}\n        onClick={handlePreviewMode}\n        title={locale.previewView}\n        icon={<Preview1BetaNormal />}\n        testid=\"embed-toolbar-previewView\"\n      />\n    );\n  };\n\n  const DelEmbedButton = () => {\n    return <Button bordered={false} onClick={handleDel} title={locale.delete} icon={<DeleteBetaNormal />} testid=\"embed-toolbar-delete\" />;\n  };\n\n  const customToolButtons = {\n    'embed.cardMode': shouldShowModeButtons ? EmbedCardButton : null,\n    'embed.previewMode': shouldShowModeButtons ? EmbedPreviewButton : null,\n    'embed.del': DelEmbedButton,\n  };\n\n  if (isExpanded || isBlurred) {\n    return null;\n  }\n\n  return (\n    <InlineToolbar\n      visible\n      inlineLayout={embedInlineLayout}\n      customToolButtons={customToolButtons}\n      triggerNode={triggerNode || undefined}\n    />\n  );\n};\n\nexport default EmbedInlineToolbar;\n"],"file":"EmbedInlineToolbar.js"}