import { Plugin } from '@ali/4ever-cangjie';
export interface CustomizedZhiGroupPluginType extends Plugin {
    groupType: string;
}
export declare function groupFactory(createPlugin: (zhiConfig: any) => CustomizedZhiGroupPluginType): (zhiConfig: any) => {
    shouldNodeComponentUpdate: ((prevProps: import("@ali/4ever-cangjie/src/interfaces/nodeProps").default, nextProps: import("@ali/4ever-cangjie/src/interfaces/nodeProps").default, controller: import("@ali/4ever-cangjie").Controller, next: import("@ali/4ever-cangjie/src/interfaces/next").default<boolean | null>) => boolean | null) | undefined;
    renderNode: import("@ali/4ever-cangjie/src/interfaces/renderNode").default<import("@ali/4ever-cangjie").Node> | Record<string, import("@ali/4ever-cangjie/src/interfaces/renderNode").default<import("@ali/4ever-cangjie").Node>> | undefined;
    renderMark: ((props: import("@ali/4ever-cangjie").RenderMarkProps, controller: import("@ali/4ever-cangjie").Controller, next: import("@ali/4ever-cangjie/src/interfaces/next").default<JSX.Element>) => JSX.Element) | undefined;
    groupNodes: ((remainedRange: [number, number], context: {
        parent: import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren> | import("@ali/4ever-cangjie").Document;
        groups: import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren>[];
    }, controller: import("@ali/4ever-cangjie").Controller, next: import("@ali/4ever-cangjie/src/interfaces/next").default<{
        node: import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren>;
        remainedRange: [number, number];
    }>) => {
        node: import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren>;
        remainedRange: [number, number];
    }) | undefined;
    onAction: ((action: import("@ali/4ever-cangjie").Action<Record<string, any>>, controller: import("@ali/4ever-cangjie").Controller, next: import("@ali/4ever-cangjie/src/interfaces/next").default<void>) => void) | undefined;
    onCangjieSelect: ((event: import("@ali/4ever-cangjie/src/events/cangjieSelect").default, controller: import("@ali/4ever-cangjie").Controller, next: import("@ali/4ever-cangjie/src/interfaces/next").default<void>) => void) | undefined;
    commands: {
        injectFold(controller: import("@ali/4ever-cangjie").Controller, node: import("@ali/4ever-cangjie").Element<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").Node[]>, fold: boolean): import("@ali/4ever-cangjie").Controller;
    };
    queries: Record<string, import("@ali/4ever-cangjie").Query> | undefined;
};
