import { CSSProperties } from 'react';
import { RenderNodeProps, Controller, Element, Plugin, Inline, MoFactory } from '@ali/4ever-cangjie';
export declare type TagRenderNodeType = (props: RenderNodeProps, controller: Controller) => JSX.Element;
export interface CustomizedZhiTagPluginType {
    tagType: string;
    verticalAlign?: CSSProperties['verticalAlign'] | ((node: Element) => CSSProperties['verticalAlign']);
    renderNode: TagRenderNodeType;
    onAction?: Plugin['onAction'];
    renderText?: (name: string) => string;
}
/**
 * factory 内的 RenderTagProps
 */
export interface RenderTagProps extends RenderNodeProps<Inline> {
    /**
     * 是否约束尺寸
     * 比如，在排版模式下，需要手动设置 wrapper 尺寸
     */
    restrictSize?: boolean;
}
export interface ZhiTagPluginType extends Omit<Plugin, 'renderNode'> {
    key?: string;
    renderNode: ((props: RenderTagProps, controller: Controller, next: Function) => JSX.Element) | Record<string, Function>;
    tagType: string;
}
export declare function tagFactory(createPlugin: (config: any) => CustomizedZhiTagPluginType, moFactory?: MoFactory): (config: Record<string, any>) => ZhiTagPluginType;
