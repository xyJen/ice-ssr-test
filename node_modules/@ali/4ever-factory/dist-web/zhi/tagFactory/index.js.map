{"version":3,"sources":["../../../../src/zhi/tagFactory/index.tsx"],"names":["React","logger","TagWrapper","ErrorBoundary","InlinePlaceholder","createOnAction","isNumber","ChildrenComponent","childProps","controller","plugin","tagType","renderNode","verticalAlign","node","attributes","restrictSize","height","data","width","refWrapper","useRef","finalVerticalAlign","cssHeight","cssWidth","tagStyle","overflow","textOverflow","whiteSpace","maxWidth","tagFactory","createPlugin","moFactory","createTagPlugin","config","myPlugin","onAction","key","tag","props","next","errorTitle","fallback","renderText","error"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react';\nimport logger from '@ali/4ever-logger';\nimport { TagWrapper } from '@ali/4ever-plugin-tag';\nimport { ErrorBoundary, InlinePlaceholder } from '@ali/4ever-component';\nimport { RenderNodeProps, Controller, Element, Plugin, Inline, MoFactory } from '@ali/4ever-cangjie';\nimport createOnAction from './handlers/createOnAction';\nimport { isNumber } from 'lodash-es';\n\nexport type TagRenderNodeType = (props: RenderNodeProps, controller: Controller) => JSX.Element;\n\nexport interface CustomizedZhiTagPluginType {\n  tagType: string;\n  verticalAlign?: CSSProperties['verticalAlign'] | ((node: Element) => CSSProperties['verticalAlign']);\n  renderNode: TagRenderNodeType;\n  onAction?: Plugin['onAction'];\n  renderText?: (name: string) => string;\n}\n\n/**\n * factory 内的 RenderTagProps\n */\nexport interface RenderTagProps extends RenderNodeProps<Inline> {\n  /**\n   * 是否约束尺寸\n   * 比如，在排版模式下，需要手动设置 wrapper 尺寸\n   */\n  restrictSize?: boolean;\n}\n\nexport interface ZhiTagPluginType extends Omit<Plugin, 'renderNode'>{\n  key?: string;\n  renderNode: ((props: RenderTagProps, controller: Controller, next: Function) => JSX.Element) | Record<string, Function>;\n  tagType: string;\n}\n\ninterface RenderChildrenProps {\n  childProps: RenderNodeProps<Element> & { restrictSize?: boolean };\n  controller: Controller;\n  plugin: CustomizedZhiTagPluginType;\n  config: Record<string, any>;\n}\n\nconst ChildrenComponent: React.FC<RenderChildrenProps> = ({\n  childProps,\n  controller,\n  plugin,\n}) => {\n  const { tagType, renderNode, verticalAlign } = plugin;\n  const { node, attributes, restrictSize } = childProps;\n  const { height } = node.data;\n  const { width } = node.data;\n  const refWrapper = React.useRef<HTMLSpanElement | null>(null);\n\n  // @ts-ignore\n  const finalVerticalAlign = typeof verticalAlign === 'function' ? verticalAlign(node) : verticalAlign;\n\n  let cssHeight: any = 'auto';\n  let cssWidth: any = 'auto';\n  if (restrictSize) {\n    cssHeight = isNumber(height) && height > 0 ? `${height}px` : height;\n    cssWidth = isNumber(width) && width > 0 ? `${width}px` : width;\n  }\n\n  const tagStyle: React.CSSProperties = {\n    height: cssHeight,\n    width: cssWidth,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    verticalAlign: finalVerticalAlign,\n    maxWidth: '100%',\n  };\n  return (\n    <TagWrapper\n      ref={refWrapper}\n      {...attributes}\n      data-testid={tagType}\n      data-type=\"tag\"\n      style={tagStyle}\n    >\n      {renderNode ? renderNode(childProps, controller) : null}\n    </TagWrapper>\n  );\n};\n\nexport function tagFactory(\n  createPlugin: (config) => CustomizedZhiTagPluginType,\n  moFactory?: MoFactory,\n) {\n  return function createTagPlugin(config: Record<string, any>): ZhiTagPluginType {\n    const myPlugin = createPlugin(config);\n    const { onAction } = myPlugin;\n    return {\n      ...moFactory?.({}),\n      key: myPlugin.tagType,\n      tagType: myPlugin.tagType,\n      onAction: createOnAction(onAction),\n      renderNode: {\n        tag: (props: RenderNodeProps<Inline>, controller: Controller, next: Function) => {\n          const { node } = props;\n          const { tagType } = node.data;\n\n          if (myPlugin.tagType !== tagType) {\n            return next();\n          }\n\n          const errorTitle = `ZHI:TAG:${tagType}`;\n          const fallback = (<InlinePlaceholder {...props} renderText={myPlugin.renderText} />);\n          try {\n            return (\n              <ErrorBoundary\n                errorTitle={errorTitle}\n                fallback={fallback}\n              >\n                <ChildrenComponent childProps={props} controller={controller} plugin={myPlugin} config={config} />\n              </ErrorBoundary>\n            );\n          } catch (error: any) {\n            // ErrorBoundary 只能捕获子组件错误，这里对组件本身加一层兜底处理\n            logger.error(errorTitle, error);\n            return fallback;\n          }\n        },\n      },\n    };\n  };\n}\n"],"file":"index.js"}