{"version":3,"sources":["../../../../../src/zhi/groupFactory/handlers/createOnAction.ts"],"names":["ACTION_COMMENT_SHOW","TOGGLE_FOLD","createCommentShow","injectFold","createOnAction","customizedAction","handleCommentShow","onAutoUnfold","controller","node","command","inject","onAction","action","next","type","payload","fold"],"mappings":"AACA,SAASA,mBAAT,QAAoC,2BAApC;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,iCAA/C;AAEA,SAASC,UAAT;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAAmF;AACjF,MAAMC,iBAAiB,GAAGJ,iBAAiB,CAAC;AAC1CK,IAAAA,YAAY,EAAE,sBAACC,UAAD,EAAaC,IAAb;AAAA,aAAsBD,UAAU,CAACE,OAAX,CAAmBP,UAAnB,EAA+BM,IAA/B,EAAqC,KAArC,CAAtB;AAAA,KAD4B;AAE1CE,IAAAA,MAAM,EAAE;AAFkC,GAAD,CAA3C;AAKA,SAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BL,UAA1B,EAAsCM,IAAtC,EAA4C;AAAA,QACzCC,IADyC,GACvBF,MADuB,CACzCE,IADyC;AAAA,QACnCC,OADmC,GACvBH,MADuB,CACnCG,OADmC;;AAGjD,QAAID,IAAI,KAAKd,WAAb,EAA0B;AAAA,iBACDe,OADC;AAAA,UAChBP,IADgB,QAChBA,IADgB;AAAA,UACVQ,IADU,QACVA,IADU;AAExB,aAAOT,UAAU,CAACE,OAAX,CAAmBP,UAAnB,EAA+BM,IAA/B,EAAqCQ,IAArC,CAAP;AACD;;AAED,QAAIF,IAAI,KAAKf,mBAAT,IAAgCgB,OAApC,EAA6C;AAC3CV,MAAAA,iBAAiB,CAACE,UAAD,EAAaQ,OAAb,CAAjB;AACD;;AAED,WAAOX,gBAAgB,GAAGA,gBAAgB,CAACQ,MAAD,EAASL,UAAT,EAAqBM,IAArB,CAAnB,GAAgDA,IAAI,EAA3E;AACD,GAbD;AAcD;;AAED,eAAeV,cAAf","sourcesContent":["import { Plugin } from '@ali/4ever-cangjie';\nimport { ACTION_COMMENT_SHOW } from '@ali/4ever-plugin-comment';\nimport { TOGGLE_FOLD, createCommentShow } from '@ali/4ever-plugin-heading-group';\nimport type { ToggleFoldPayload } from '@ali/4ever-plugin-heading-group';\nimport { injectFold } from '../commands/fold';\n\nfunction createOnAction(customizedAction?: Plugin['onAction']): Plugin['onAction'] {\n  const handleCommentShow = createCommentShow({\n    onAutoUnfold: (controller, node) => controller.command(injectFold, node, false),\n    inject: true,\n  });\n\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n\n    if (type === TOGGLE_FOLD) {\n      const { node, fold } = payload as ToggleFoldPayload;\n      return controller.command(injectFold, node, fold);\n    }\n\n    if (type === ACTION_COMMENT_SHOW && payload) {\n      handleCommentShow(controller, payload as any);\n    }\n\n    return customizedAction ? customizedAction(action, controller, next) : next();\n  };\n}\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}