import _extends from "@babel/runtime/helpers/extends";
import { createShouldComponentUpdate, createRenderNode } from '@ali/4ever-plugin-group-factory';
import { createRenderMark } from '@ali/4ever-plugin-heading-group';
import createOnAction from "./handlers/createOnAction";
import createOnCangjieSelect from "./handlers/createOnCangjieSelect";
import * as factoryCommands from "./commands";
export function groupFactory(createPlugin) {
  return function createGroupPlugin(zhiConfig) {
    var myPlugin = createPlugin(zhiConfig);
    var commands = myPlugin.commands,
        onAction = myPlugin.onAction,
        queries = myPlugin.queries,
        groupNodes = myPlugin.groupNodes,
        renderNode = myPlugin.renderNode,
        renderMark = myPlugin.renderMark,
        groupType = myPlugin.groupType;
    var config = zhiConfig[groupType] || {};
    return {
      shouldNodeComponentUpdate: createShouldComponentUpdate(),
      renderNode: renderNode || createRenderNode(groupType),
      renderMark: renderMark || createRenderMark(config),
      groupNodes: groupNodes,
      onAction: createOnAction(onAction),
      onCangjieSelect: createOnCangjieSelect(config),
      commands: _extends({}, factoryCommands, commands),
      queries: queries
    };
  };
}
//# sourceMappingURL=index.js.map