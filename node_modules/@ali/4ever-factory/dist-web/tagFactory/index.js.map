{"version":3,"sources":["../../../src/tagFactory/index.ts"],"names":["createRenderElement","createRenderContent","createOnKeyDown","createOnAction","removeTag","setTagData","insertTag","default","insertTagCommand","createOnCangjiePaste","tagFactory","createPlugin","moFactory","createTagPlugin","bizConfig","myPlugin","menubar","toolbar","onAction","onCangjiePaste","actions","renderHoverToolbar","key","tagType","renderContent","renderNode","onKeyDown","commands","queries","models","klass","type"],"mappings":";AAAA,OAAOA,mBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,SAAhC;AACA,SAASC,OAAO,IAAIC,gBAApB;AAEA,OAAOC,oBAAP;;AAUA,SAASC,UAAT,CACEC,YADF,EAEEC,SAFF,EAGgB;AACd,SAAO,SAASC,eAAT,CAAyBC,SAAzB,EAAmE;AACxE,QAAMC,QAAQ,GAAGJ,YAAY,CAACG,SAAD,CAA7B;AADwE,QAEhEE,OAFgE,GAEYD,QAFZ,CAEhEC,OAFgE;AAAA,QAEvDC,OAFuD,GAEYF,QAFZ,CAEvDE,OAFuD;AAAA,QAE9CC,QAF8C,GAEYH,QAFZ,CAE9CG,QAF8C;AAAA,QAEpCC,cAFoC,GAEYJ,QAFZ,CAEpCI,cAFoC;AAAA,QAEpBC,OAFoB,GAEYL,QAFZ,CAEpBK,OAFoB;AAAA,QAEXC,kBAFW,GAEYN,QAFZ,CAEXM,kBAFW;AAIxE,wBACKT,SADL,oBACKA,SAAS,CAAG,EAAH,CADd;AAEEU,MAAAA,GAAG,EAAEP,QAAQ,CAACQ,OAFhB;AAGEA,MAAAA,OAAO,EAAER,QAAQ,CAACQ,OAHpB;AAIEP,MAAAA,OAAO,EAAPA,OAJF;AAKE;AACAC,MAAAA,OAAO,EAAPA,OANF;AAOEO,MAAAA,aAAa,EAAEvB,mBAAmB,CAACc,QAAD,CAPpC;AAQEU,MAAAA,UAAU,EAAEzB,mBAAmB,CAACe,QAAD,EAAWD,SAAX,CARjC;AASEY,MAAAA,SAAS,EAAExB,eAAe,EAT5B;AAUEgB,MAAAA,QAAQ,EAAEf,cAAc,CAACe,QAAD,CAV1B;AAWEC,MAAAA,cAAc,EAAEV,oBAAoB,CAACU,cAAD,CAXtC;AAYEQ,MAAAA,QAAQ,EAAE;AACRrB,QAAAA,SAAS,EAAEE;AADH,OAZZ;AAeEY,MAAAA,OAAO,EAAPA,OAfF;AAgBEQ,MAAAA,OAAO,EAAEb,QAAQ,CAACa,OAAT,IAAoB,EAhB/B;AAiBEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,QADD;AAENC,QAAAA,IAAI,EAAE;AAFA,OAjBV;AAqBEV,MAAAA,kBAAkB,EAAlBA;AArBF;AAuBD,GA3BD;AA4BD;;AAED,SACEX,UADF,EAEEN,SAFF,EAGEC,UAHF,EAIEC,SAJF","sourcesContent":["import createRenderElement from './createRenderElement';\nimport createRenderContent from './createRenderContent';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport createOnAction from './handlers/createOnAction';\nimport { removeTag, setTagData, insertTag } from './actions';\nimport { default as insertTagCommand } from './command/insertTag';\nimport { CustomizedBiTagPluginType, TagPluginType } from './type';\nimport createOnCangjiePaste from './handlers/createOnCangjiePaste';\nimport type { BiPluginConfig, MoFactory } from '@ali/4ever-cangjie';\n\nexport type { TagLocale, TagPluginType, CustomizedBiTagPluginType, RenderTagProps, TagRenderNodeType } from './type';\n\ninterface TagPlugin<T> {\n  (bizConfig: BiPluginConfig): TagPluginType;\n  components?: T;\n}\n\nfunction tagFactory<T = any>(\n  createPlugin: (bizConfig: BiPluginConfig) => CustomizedBiTagPluginType,\n  moFactory?: MoFactory,\n): TagPlugin<T> {\n  return function createTagPlugin(bizConfig: BiPluginConfig): TagPluginType {\n    const myPlugin = createPlugin(bizConfig);\n    const { menubar, toolbar, onAction, onCangjiePaste, actions, renderHoverToolbar } = myPlugin;\n\n    return {\n      ...moFactory?.({}),\n      key: myPlugin.tagType,\n      tagType: myPlugin.tagType,\n      menubar,\n      // @ts-ignore\n      toolbar,\n      renderContent: createRenderContent(myPlugin),\n      renderNode: createRenderElement(myPlugin, bizConfig),\n      onKeyDown: createOnKeyDown(),\n      onAction: createOnAction(onAction),\n      onCangjiePaste: createOnCangjiePaste(onCangjiePaste),\n      commands: {\n        insertTag: insertTagCommand,\n      },\n      actions,\n      queries: myPlugin.queries || {},\n      models: {\n        klass: 'inline',\n        type: 'tag',\n      },\n      renderHoverToolbar,\n    };\n  };\n}\n\nexport {\n  tagFactory,\n  removeTag,\n  setTagData,\n  insertTag,\n};\n"],"file":"index.js"}