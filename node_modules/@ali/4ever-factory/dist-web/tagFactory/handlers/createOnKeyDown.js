import { isKeyHotkey } from 'is-hotkey';
import { hotkeys, Commands } from '@ali/4ever-cangjie';
import getTagAtFocusEdge from "../queries/getTagAtFocusEdge";
var isArrowRightHotKey = isKeyHotkey('right');
var isArrowLeftHotKey = isKeyHotkey('left');
export default function createKeyDown(customizedKeyDown) {
  return function onKeyDown(event, controller, next) {
    var selection = controller.value.selection;

    if (selection && selection.isCollapsed) {
      var tagElement = hotkeys.isDeleteBackward(event) || hotkeys.isDeleteForward(event) ? getTagAtFocusEdge(controller, hotkeys.isDeleteBackward(event) ? 'Backward' : 'Forward') : null;
      if (!tagElement) tagElement = isArrowLeftHotKey(event) ? getTagAtFocusEdge(controller, isArrowLeftHotKey(event) ? 'Backward' : 'Forward') : null;
      if (!tagElement) tagElement = isArrowRightHotKey(event) ? getTagAtFocusEdge(controller, isArrowRightHotKey(event) ? 'Forward' : 'Backward') : null;

      if (tagElement) {
        event.preventDefault();
        return controller.command(Commands.moveAnchorToStartOfNode, tagElement).command(Commands.moveFocusToEndOfNode, tagElement);
      }
    }

    return customizedKeyDown ? customizedKeyDown(event, controller, next) : next();
  };
}
//# sourceMappingURL=createOnKeyDown.js.map