import _extends from "@babel/runtime/helpers/extends";
import createRenderElement from "./createRenderElement";
import createRenderContent from "./createRenderContent";
import createOnKeyDown from "./handlers/createOnKeyDown";
import createOnAction from "./handlers/createOnAction";
import { removeTag, setTagData, insertTag } from "./actions";
import { default as insertTagCommand } from "./command/insertTag";
import createOnCangjiePaste from "./handlers/createOnCangjiePaste";

function tagFactory(createPlugin, moFactory) {
  return function createTagPlugin(bizConfig) {
    var myPlugin = createPlugin(bizConfig);
    var menubar = myPlugin.menubar,
        toolbar = myPlugin.toolbar,
        onAction = myPlugin.onAction,
        onCangjiePaste = myPlugin.onCangjiePaste,
        actions = myPlugin.actions,
        renderHoverToolbar = myPlugin.renderHoverToolbar;
    return _extends({}, moFactory == null ? void 0 : moFactory({}), {
      key: myPlugin.tagType,
      tagType: myPlugin.tagType,
      menubar: menubar,
      // @ts-ignore
      toolbar: toolbar,
      renderContent: createRenderContent(myPlugin),
      renderNode: createRenderElement(myPlugin, bizConfig),
      onKeyDown: createOnKeyDown(),
      onAction: createOnAction(onAction),
      onCangjiePaste: createOnCangjiePaste(onCangjiePaste),
      commands: {
        insertTag: insertTagCommand
      },
      actions: actions,
      queries: myPlugin.queries || {},
      models: {
        klass: 'inline',
        type: 'tag'
      },
      renderHoverToolbar: renderHoverToolbar
    });
  };
}

export { tagFactory, removeTag, setTagData, insertTag };
//# sourceMappingURL=index.js.map