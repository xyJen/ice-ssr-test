{"version":3,"sources":["../../../../../src/tagFactory/components/Container/index.tsx"],"names":["React","classnames","Tag","TagWrapper","isNumber","Container","props","children","verticalAlign","isSelected","restrictSize","node","data","height","tagType","width","refWrapper","useRef","cssHeight","cssWidth","tagStyle","overflow","textOverflow","whiteSpace","maxWidth","className","useMemo","selected","TYPE"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;qBAC4B,a;AAA5B,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAAkBC,GAAlB,EAAuBC,UAAvB,QAAyC,uBAAzC;AAEA,SAASC,QAAT,QAAyB,WAAzB;;AASA,IAAMC,SAA2C,GAAG,SAA9CA,SAA8C,CAACC,KAAD,EAAW;AAAA,MACrDC,QADqD,GACCD,KADD,CACrDC,QADqD;AAAA,MAC3CC,aAD2C,GACCF,KADD,CAC3CE,aAD2C;AAAA,MAC5BC,UAD4B,GACCH,KADD,CAC5BG,UAD4B;AAAA,MAChBC,YADgB,GACCJ,KADD,CAChBI,YADgB;AAE7D,MAAMC,IAAI,GAAGL,KAAK,CAACK,IAAnB;AAF6D,aAGjCA,IAAI,CAACC,IAH4B;AAAA,MAGrDC,MAHqD,QAGrDA,MAHqD;AAAA,MAG7CC,OAH6C,QAG7CA,OAH6C;AAAA,cAI3CH,IAAI,CAACC,IAJsC;AAAA,MAIrDG,KAJqD,SAIrDA,KAJqD;AAK7D,MAAMC,UAAU,GAAGhB,KAAK,CAACiB,MAAN,CAAqC,IAArC,CAAnB;AAEA,MAAIC,SAAc,GAAG,MAArB;AACA,MAAIC,QAAa,GAAG,MAApB;;AAEA,MAAIT,YAAJ,EAAkB;AAChBQ,IAAAA,SAAS,GAAGd,QAAQ,CAACS,MAAD,CAAR,IAAoBA,MAAM,GAAG,CAA7B,GAAoCA,MAApC,UAAiDA,MAA7D;AACAM,IAAAA,QAAQ,GAAGf,QAAQ,CAACW,KAAD,CAAR,IAAmBA,KAAK,GAAG,CAA3B,GAAkCA,KAAlC,UAA8CA,KAAzD;AACD;;AAED,MAAMK,QAA6B,GAAG;AACpCP,IAAAA,MAAM,EAAEK,SAD4B;AAEpCH,IAAAA,KAAK,EAAEI,QAF6B;AAGpCX,IAAAA,aAAa,EAAbA,aAHoC;AAIpCa,IAAAA,QAAQ,EAAE,QAJ0B;AAKpCC,IAAAA,YAAY,EAAE,UALsB;AAMpCC,IAAAA,UAAU,EAAE,QANwB;AAOpCC,IAAAA,QAAQ,EAAE;AAP0B,GAAtC;AAUA,MAAMC,SAAiB,GAAGzB,KAAK,CAAC0B,OAAN,CACxB;AAAA,WACEzB,UAAU,CAAC;AACT0B,MAAAA,QAAQ,EAAElB;AADD,KAAD,CADZ;AAAA,GADwB,EAKxB,CAACA,UAAD,CALwB,CAA1B;AAQA,sBACE,eAAC,UAAD;AACE,IAAA,GAAG,EAAEO,UADP;AAEE,mBAAaF,OAFf;AAGE,iBAAWZ,GAAG,CAAC0B,IAHjB;AAIE,IAAA,KAAK,EAAER,QAJT;AAKE,IAAA,SAAS,EAAEK;AALb,KAOGlB,QAPH,CADF;AAWD,CA5CD;;AA6CA,eAAeF,SAAf","sourcesContent":["import React, { CSSProperties } from 'react';\nimport classnames from 'classnames';\nimport { Inline, BiPluginConfig } from '@ali/4ever-cangjie';\nimport { TagData, Tag, TagWrapper } from '@ali/4ever-plugin-tag';\nimport { TagLocale, RenderTagProps } from '../../type';\nimport { isNumber } from 'lodash-es';\n\ninterface RenderTagChildrenProps extends Omit<RenderTagProps, 'children'> {\n  locale: TagLocale;\n  verticalAlign?: CSSProperties['verticalAlign'];\n  children: JSX.Element;\n  config: BiPluginConfig;\n}\n\nconst Container: React.FC<RenderTagChildrenProps> = (props) => {\n  const { children, verticalAlign, isSelected, restrictSize } = props;\n  const node = props.node as Inline;\n  const { height, tagType } = node.data as TagData;\n  const { width } = node.data as TagData;\n  const refWrapper = React.useRef<HTMLSpanElement | null>(null);\n\n  let cssHeight: any = 'auto';\n  let cssWidth: any = 'auto';\n\n  if (restrictSize) {\n    cssHeight = isNumber(height) && height > 0 ? `${height}px` : height;\n    cssWidth = isNumber(width) && width > 0 ? `${width}px` : width;\n  }\n\n  const tagStyle: React.CSSProperties = {\n    height: cssHeight,\n    width: cssWidth,\n    verticalAlign,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    maxWidth: '100%',\n  };\n\n  const className: string = React.useMemo(\n    () =>\n      classnames({\n        selected: isSelected,\n      }),\n    [isSelected],\n  );\n\n  return (\n    <TagWrapper\n      ref={refWrapper}\n      data-testid={tagType}\n      data-type={Tag.TYPE}\n      style={tagStyle}\n      className={className}\n    >\n      {children}\n    </TagWrapper>\n  );\n};\nexport default Container;\n"],"file":"index.js"}