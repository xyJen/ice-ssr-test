import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import classnames from 'classnames';
import { Tag, TagWrapper } from '@ali/4ever-plugin-tag';
import { isNumber } from 'lodash-es';

var Container = function Container(props) {
  var children = props.children,
      verticalAlign = props.verticalAlign,
      isSelected = props.isSelected,
      restrictSize = props.restrictSize;
  var node = props.node;
  var _ref = node.data,
      height = _ref.height,
      tagType = _ref.tagType;
  var _ref2 = node.data,
      width = _ref2.width;
  var refWrapper = React.useRef(null);
  var cssHeight = 'auto';
  var cssWidth = 'auto';

  if (restrictSize) {
    cssHeight = isNumber(height) && height > 0 ? height + "px" : height;
    cssWidth = isNumber(width) && width > 0 ? width + "px" : width;
  }

  var tagStyle = {
    height: cssHeight,
    width: cssWidth,
    verticalAlign: verticalAlign,
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    maxWidth: '100%'
  };
  var className = React.useMemo(function () {
    return classnames({
      selected: isSelected
    });
  }, [isSelected]);
  return /*#__PURE__*/_createElement(TagWrapper, {
    ref: refWrapper,
    "data-testid": tagType,
    "data-type": Tag.TYPE,
    style: tagStyle,
    className: className
  }, children);
};

export default Container;
//# sourceMappingURL=index.js.map