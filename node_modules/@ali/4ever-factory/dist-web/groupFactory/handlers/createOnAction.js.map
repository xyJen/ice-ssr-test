{"version":3,"sources":["../../../../src/groupFactory/handlers/createOnAction.ts"],"names":["GroupPlugin","TOGGLE_FOLD","createCommentShow","ACTION_COMMENT_SHOW","CLEAR_IMMEDIATELY","toggleFold","createOnAction","customizedAction","handleCommentShow","onAutoUnfold","controller","node","value","data","immediatelyUnfoldMap","command","setData","key","onAction","action","next","type","payload","fold","withoutSaving","run","actions","expand","toggleGroupFold"],"mappings":";AAAA,SAA6BA,WAA7B,QAAwD,oBAAxD;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAAkCC,iBAAlC;AACA,SAASC,UAAT;;AAKA,SAASC,cAAT,CAAwBC,gBAAxB,EAA2E;AACzE,MAAMC,iBAAiB,GAAGN,iBAAiB,CAAC;AAC1CO,IAAAA,YAAY,EAAE,sBAACC,UAAD,EAAaC,IAAb,EAAsB;AAAA;;AAAA,kCACID,UAAU,CAACE,KAAX,CAAiBC,IADrB,CAC1BC,oBAD0B;AAAA,UAC1BA,oBAD0B,sCACH,EADG;AAElCJ,MAAAA,UAAU,CACR;AADQ,OAEPK,OAFH,CAEWV,UAFX,EAEuBM,IAFvB,EAE6B,KAF7B,EAGE;AAHF,OAIGK,OAJH,cAKON,UAAU,CAACE,KAAX,CAAiBC,IALxB;AAMIC,QAAAA,oBAAoB,eACfA,oBADe,6BAEjBH,IAAI,CAACM,GAFY,IAEN,IAFM;AANxB;AAWD;AAdyC,GAAD,CAA3C;AAiBA,SAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BT,UAA1B,EAAsCU,IAAtC,EAA4C;AAAA,QACzCC,IADyC,GACvBF,MADuB,CACzCE,IADyC;AAAA,QACnCC,OADmC,GACvBH,MADuB,CACnCG,OADmC;;AAGjD,QAAID,IAAI,KAAKpB,WAAb,EAA0B;AAAA,iBACDqB,OADC;AAAA,UAChBX,IADgB,QAChBA,IADgB;AAAA,UACVY,IADU,QACVA,IADU;AAExB,aAAOb,UAAU,CAACc,aAAX,CAAyB,YAAM;AACpCd,QAAAA,UAAU,CAACK,OAAX,CAAmBV,UAAnB,EAA+BM,IAA/B,EAAqCY,IAArC;;AACA,YAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBb,UAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2BzB,WAAW,CAAC0B,OAAZ,CAAoBC,MAApB,CAA2BhB,IAAI,CAACM,GAAhC,CAA3B;AACD,SAFD,MAEO,IAAIM,IAAI,KAAK,IAAb,EAAmB;AACxBb,UAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2BzB,WAAW,CAAC0B,OAAZ,CAAoBH,IAApB,CAAyBZ,IAAI,CAACM,GAA9B,CAA3B;AACD,SAFM,MAEA;AACLP,UAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2BzB,WAAW,CAAC0B,OAAZ,CAAoBE,eAApB,CAAoCjB,IAAI,CAACM,GAAzC,CAA3B;AACD;;AACD,eAAOP,UAAP;AACD,OAVM,CAAP;AAWD;;AAED,QAAIW,IAAI,KAAKjB,iBAAb,EAAgC;AAAA,kBACbkB,OADa;AAAA,UACtBX,KADsB,SACtBA,IADsB;;AAE9B,UAAMG,oBAAoB,gBACrBJ,UAAU,CAACE,KAAX,CAAiBC,IAAjB,CAAsBC,oBADD,CAA1B;;AAGA,aAAOA,oBAAoB,CAACH,KAAI,CAACM,GAAN,CAA3B;AACA,aAAOP,UAAU,CAACM,OAAX,cACFN,UAAU,CAACE,KAAX,CAAiBC,IADf;AAELC,QAAAA,oBAAoB,EAApBA;AAFK,SAAP;AAID;;AAED,QAAIO,IAAI,KAAKlB,mBAAT,IAAgCmB,OAApC,EAA6C;AAC3Cd,MAAAA,iBAAiB,CAACE,UAAD,EAAaY,OAAb,CAAjB;AACD;;AAED,WAAOf,gBAAgB,GAAGA,gBAAgB,CAACY,MAAD,EAAST,UAAT,EAAqBU,IAArB,CAAnB,GAAgDA,IAAI,EAA3E;AACD,GAnCD;AAoCD;;AAED,eAAed,cAAf","sourcesContent":["import { Action, Controller, GroupPlugin, Plugin } from '@ali/4ever-cangjie';\nimport { TOGGLE_FOLD } from '@ali/4ever-plugin-group-factory';\nimport { createCommentShow } from '@ali/4ever-plugin-heading-group';\nimport type { ToggleFoldPayload } from '@ali/4ever-plugin-heading-group';\nimport { ACTION_COMMENT_SHOW } from '@ali/4ever-plugin-comment';\nimport { ClearImmediatelyPayload, CLEAR_IMMEDIATELY } from '../actions';\nimport { toggleFold } from '../commands/fold';\n\n\ntype ActionType = (action: Action, controller: Controller, next: () => void) => void;\n\nfunction createOnAction(customizedAction?: ActionType): Plugin['onAction'] {\n  const handleCommentShow = createCommentShow({\n    onAutoUnfold: (controller, node) => {\n      const { immediatelyUnfoldMap = {} } = controller.value.data;\n      controller\n        // 自动展开折叠标题\n        .command(toggleFold, node, false)\n        // 立即展开不使用动画\n        .setData({\n          ...controller.value.data,\n          immediatelyUnfoldMap: {\n            ...immediatelyUnfoldMap,\n            [node.key]: true,\n          },\n        });\n    },\n  });\n\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n\n    if (type === TOGGLE_FOLD) {\n      const { node, fold } = payload as ToggleFoldPayload;\n      return controller.withoutSaving(() => {\n        controller.command(toggleFold, node, fold);\n        if (fold === false) {\n          controller.run('onAction', GroupPlugin.actions.expand(node.key));\n        } else if (fold === true) {\n          controller.run('onAction', GroupPlugin.actions.fold(node.key));\n        } else {\n          controller.run('onAction', GroupPlugin.actions.toggleGroupFold(node.key));\n        }\n        return controller;\n      });\n    }\n\n    if (type === CLEAR_IMMEDIATELY) {\n      const { node } = payload as ClearImmediatelyPayload;\n      const immediatelyUnfoldMap = {\n        ...controller.value.data.immediatelyUnfoldMap,\n      };\n      delete immediatelyUnfoldMap[node.key];\n      return controller.setData({\n        ...controller.value.data,\n        immediatelyUnfoldMap,\n      });\n    }\n\n    if (type === ACTION_COMMENT_SHOW && payload) {\n      handleCommentShow(controller, payload as any);\n    }\n\n    return customizedAction ? customizedAction(action, controller, next) : next();\n  };\n}\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}