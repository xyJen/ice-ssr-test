import _extends from "@babel/runtime/helpers/extends";
import { createShouldComponentUpdate, createRenderNode, createOnKeyDown, createOnCangjieSelect, actions } from '@ali/4ever-plugin-group-factory';
import { createRenderMark } from '@ali/4ever-plugin-heading-group';
import createOnAction from "./handlers/createOnAction";
import * as factoryCommands from "./commands";
export function groupFactory(createPlugin) {
  return function createGroupPlugin(bizConfig) {
    var myPlugin = createPlugin(bizConfig);
    var onAction = myPlugin.onAction,
        onKeyDown = myPlugin.onKeyDown,
        queries = myPlugin.queries,
        commands = myPlugin.commands,
        groupNodes = myPlugin.groupNodes,
        renderNode = myPlugin.renderNode,
        renderMark = myPlugin.renderMark,
        groupType = myPlugin.groupType;
    var config = bizConfig[groupType] || {};
    return {
      shouldNodeComponentUpdate: createShouldComponentUpdate(),
      renderNode: renderNode || createRenderNode(groupType),
      // @ts-ignore
      renderMark: renderMark || createRenderMark(config),
      groupNodes: groupNodes,
      onAction: createOnAction(onAction),
      onKeyDown: onKeyDown || createOnKeyDown(),
      onCangjieSelect: createOnCangjieSelect(config),
      commands: _extends({}, factoryCommands, commands),
      queries: queries
    };
  };
}
groupFactory.actions = actions;
groupFactory.commands = factoryCommands;
//# sourceMappingURL=index.js.map