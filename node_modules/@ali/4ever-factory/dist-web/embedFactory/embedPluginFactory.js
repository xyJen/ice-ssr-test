import _extends from "@babel/runtime/helpers/extends";
import { upperFirst } from 'lodash-es';
import insertEmbed from "./commands/insertEmbed";
import insertFile from "./commands/insertFile";
import onAction from "./handlers/onAction";
import onDrop from "./handlers/onDrop";
import * as actions from "./actions";
export default function embedPluginFactory(params, moFactory) {
  var createRenderNode = params.createRenderNode,
      commands = params.commands,
      menubar = params.menubar,
      toolbar = params.toolbar,
      quickInsert = params.quickInsert,
      configName = params.configName,
      pluginActions = params.actions;

  function createPlugin(config) {
    var _extends2;

    var pluginConfig = config[configName] || {};
    var uploadFile = pluginConfig.uploadFile,
        _pluginConfig$enableF = pluginConfig.enableFilePreview,
        enableFilePreview = _pluginConfig$enableF === void 0 ? true : _pluginConfig$enableF,
        _pluginConfig$autoPre = pluginConfig.autoPreview,
        autoPreview = _pluginConfig$autoPre === void 0 ? true : _pluginConfig$autoPre; // 目前存在 insertVideo, insertAudio, insertEmbed 三个 command

    var insertCommandName = "insert" + upperFirst(configName);
    return _extends({}, moFactory({}), {
      key: configName,
      menubar: menubar,
      // @ts-ignore
      toolbar: toolbar ? toolbar(config) : null,
      commands: _extends((_extends2 = {}, _extends2[insertCommandName] = insertEmbed(uploadFile, enableFilePreview && autoPreview, configName), _extends2.insertFile = insertFile, _extends2), commands),
      renderNode: createRenderNode(config),
      onAction: onAction,
      onDrop: onDrop(uploadFile, enableFilePreview),
      quickInsert: quickInsert,
      models: {
        klass: 'block',
        type: 'embed'
      }
    });
  }

  createPlugin.actions = pluginActions || actions;
  return createPlugin;
}
//# sourceMappingURL=embedPluginFactory.js.map