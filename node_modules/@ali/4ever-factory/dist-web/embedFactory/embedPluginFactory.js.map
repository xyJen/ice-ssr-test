{"version":3,"sources":["../../../src/embedFactory/embedPluginFactory.ts"],"names":["upperFirst","insertEmbed","insertFile","onAction","onDrop","actions","embedPluginFactory","params","moFactory","createRenderNode","commands","menubar","toolbar","quickInsert","configName","pluginActions","createPlugin","config","pluginConfig","uploadFile","enableFilePreview","autoPreview","insertCommandName","key","renderNode","models","klass","type"],"mappings":";AAAA,SAASA,UAAT,QAA2B,WAA3B;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AAGA,OAAO,KAAKC,OAAZ;AAEA,eAAe,SAASC,kBAAT,CAA4BC,MAA5B,EAAwDC,SAAxD,EAA8E;AAAA,MACnFC,gBADmF,GACeF,MADf,CACnFE,gBADmF;AAAA,MACjEC,QADiE,GACeH,MADf,CACjEG,QADiE;AAAA,MACvDC,OADuD,GACeJ,MADf,CACvDI,OADuD;AAAA,MAC9CC,OAD8C,GACeL,MADf,CAC9CK,OAD8C;AAAA,MACrCC,WADqC,GACeN,MADf,CACrCM,WADqC;AAAA,MACxBC,UADwB,GACeP,MADf,CACxBO,UADwB;AAAA,MACHC,aADG,GACeR,MADf,CACZF,OADY;;AAE3F,WAASW,YAAT,CAAsBC,MAAtB,EAAwC;AAAA;;AACtC,QAAMC,YAAY,GAAGD,MAAM,CAACH,UAAD,CAAN,IAAsB,EAA3C;AADsC,QAE9BK,UAF8B,GAE+BD,YAF/B,CAE9BC,UAF8B;AAAA,gCAE+BD,YAF/B,CAElBE,iBAFkB;AAAA,QAElBA,iBAFkB,sCAEE,IAFF;AAAA,gCAE+BF,YAF/B,CAEQG,WAFR;AAAA,QAEQA,WAFR,sCAEsB,IAFtB,0BAItC;;AACA,QAAMC,iBAAiB,cAAYtB,UAAU,CAACc,UAAD,CAA7C;AAEA,wBACKN,SAAS,CAAC,EAAD,CADd;AAEEe,MAAAA,GAAG,EAAET,UAFP;AAGEH,MAAAA,OAAO,EAAPA,OAHF;AAIE;AACAC,MAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAO,CAACK,MAAD,CAAV,GAAqB,IALvC;AAMEP,MAAAA,QAAQ,sCAELY,iBAFK,IAEerB,WAAW,CAACkB,UAAD,EAAaC,iBAAiB,IAAIC,WAAlC,EAA+CP,UAA/C,CAF1B,YAGNZ,UAHM,GAGNA,UAHM,cAIHQ,QAJG,CANV;AAYEc,MAAAA,UAAU,EAAEf,gBAAgB,CAACQ,MAAD,CAZ9B;AAaEd,MAAAA,QAAQ,EAARA,QAbF;AAcEC,MAAAA,MAAM,EAAEA,MAAM,CAACe,UAAD,EAAaC,iBAAb,CAdhB;AAeEP,MAAAA,WAAW,EAAXA,WAfF;AAgBEY,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,IAAI,EAAE;AAFA;AAhBV;AAqBD;;AAEDX,EAAAA,YAAY,CAACX,OAAb,GAAuBU,aAAa,IAAIV,OAAxC;AAEA,SAAOW,YAAP;AACD","sourcesContent":["import { upperFirst } from 'lodash-es';\nimport insertEmbed from './commands/insertEmbed';\nimport insertFile from './commands/insertFile';\nimport onAction from './handlers/onAction';\nimport onDrop from './handlers/onDrop';\nimport { EmbedFactoryParams } from './types';\nimport type { BiPlugin, MoFactory } from '@ali/4ever-cangjie';\nimport * as actions from './actions';\n\nexport default function embedPluginFactory(params: EmbedFactoryParams, moFactory: MoFactory) {\n  const { createRenderNode, commands, menubar, toolbar, quickInsert, configName, actions: pluginActions } = params;\n  function createPlugin(config): BiPlugin {\n    const pluginConfig = config[configName] || {};\n    const { uploadFile, enableFilePreview = true, autoPreview = true } = pluginConfig;\n\n    // 目前存在 insertVideo, insertAudio, insertEmbed 三个 command\n    const insertCommandName = `insert${upperFirst(configName)}`;\n\n    return {\n      ...moFactory({}),\n      key: configName,\n      menubar,\n      // @ts-ignore\n      toolbar: toolbar ? toolbar(config) : null,\n      commands: {\n        // TODO insertEmbed 的第二个参数 enableFilePreview 并不适用于所有的子插件，目前视频始终允许预览\n        [insertCommandName]: insertEmbed(uploadFile, enableFilePreview && autoPreview, configName),\n        insertFile,\n        ...commands,\n      },\n      renderNode: createRenderNode(config),\n      onAction,\n      onDrop: onDrop(uploadFile, enableFilePreview),\n      quickInsert,\n      models: {\n        klass: 'block',\n        type: 'embed',\n      },\n    };\n  }\n\n  createPlugin.actions = pluginActions || actions;\n\n  return createPlugin;\n}\n"],"file":"embedPluginFactory.js"}