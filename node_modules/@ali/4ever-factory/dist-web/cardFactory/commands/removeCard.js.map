{"version":3,"sources":["../../../../src/cardFactory/commands/removeCard.ts"],"names":["Block","Commands","isContainerOnlyHasOneCard","controller","node","document","value","container","getParent","key","nodes","length","paramNode","getNode","containerOnlyContainOneCard","command","replaceNodeByKey","create","removeNodeByKey"],"mappings":"AAAA,SAAqBA,KAArB,EAAqCC,QAArC,QAA2D,oBAA3D;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,UAAD,EAAyBC,IAAzB,EAAwC;AAAA,MAChEC,QADgE,GACnDF,UAAU,CAACG,KADwC,CAChED,QADgE,EAExE;;AACA,MAAME,SAAS,GAAGF,QAAQ,CAACG,SAAT,CAAmBJ,IAAI,CAACK,GAAxB,CAAlB,CAHwE,CAIxE;AACA;;AACA,SAAOF,SAAS,IAAI,CAAAA,SAAS,QAAT,YAAAA,SAAS,CAAEG,KAAX,CAAiBC,MAAjB,MAA4B,CAAzC,IAA8CJ,SAAS,CAACG,KAAV,CAAgB,CAAhB,MAAuBN,IAA5E;AACD,CAPD;;AASA,gBAAe,UAACD,UAAD,EAAyBS,SAAzB,EAAgD;AAC7D;AACA;AACA,MAAI,CAACA,SAAL,EAAgB,OAAOT,UAAP;AAH6C,MAIrDE,QAJqD,GAIxCF,UAAU,CAACG,KAJ6B,CAIrDD,QAJqD;AAK7D,MAAMD,IAAI,GAAGC,QAAQ,CAACQ,OAAT,CAAiBD,SAAS,CAACH,GAA3B,CAAb,CAL6D,CAM7D;;AACA,MAAMK,2BAA2B,GAAGZ,yBAAyB,CAACC,UAAD,EAAaC,IAAb,CAA7D,CAP6D,CAS7D;;AACA,MAAIU,2BAAJ,EAAiC;AAC/B,WAAOX,UAAU,CAACY,OAAX,CAAmBd,QAAQ,CAACe,gBAA5B,EAA8CZ,IAAI,CAACK,GAAnD,EAAwDT,KAAK,CAACiB,MAAN,CAAa,WAAb,CAAxD,CAAP;AACD;;AACD,SAAOd,UAAU,CAACY,OAAX,CAAmBd,QAAQ,CAACiB,eAA5B,EAA6Cd,IAAI,CAACK,GAAlD,CAAP;AACD,CAdD","sourcesContent":["import { Controller, Block, Element, Commands, Node } from '@ali/4ever-cangjie';\n\n/**\n * 表格中是否只包含一个河图卡片，无其他任何内容\n * @param value\n * @param nodeKey\n * @returns\n */\nconst isContainerOnlyHasOneCard = (controller: Controller, node: Node) => {\n  const { document } = controller.value;\n  // 获取包含该河图卡片的表格容器节点\n  const container = document.getParent(node.key);\n  // 如果当前河图卡片是在表格中，并且该表格中仅包含该河图卡片，无其他内容\n  // @ts-ignore\n  return container && container?.nodes.length === 1 && container.nodes[0] === node;\n};\n\nexport default (controller: Controller, paramNode: Element) => {\n  // 线上监控到个别 NPE 错误为 paramNode 为 null\n  // 但由于中间件机制调用栈太深，找不到是那个业务方发起的调用，这里做个兜底\n  if (!paramNode) return controller;\n  const { document } = controller.value;\n  const node = document.getNode(paramNode.key)!;\n  // 否则仓颉的默认removeNode会导致table-cell结构出现错误，即td下面本该有的paragraph被删掉，然后normolize会将该td用一个div包裹\n  const containerOnlyContainOneCard = isContainerOnlyHasOneCard(controller, node);\n\n  // 如果当前容器里面只有一个河图卡片，那么删除操作需要通过一个空的paragraph来替代当前河图卡片来达到删除效果,其余情况采用默认逻辑即可\n  if (containerOnlyContainOneCard) {\n    return controller.command(Commands.replaceNodeByKey, node.key, Block.create('paragraph'));\n  }\n  return controller.command(Commands.removeNodeByKey, node.key);\n};\n"],"file":"removeCard.js"}