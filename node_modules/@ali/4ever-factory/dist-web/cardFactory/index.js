import _extends from "@babel/runtime/helpers/extends";
import createRenderNode from "./createRenderNode";
import createOnKeyDown from "./handlers/createOnKeyDown";
import createOnAction from "./handlers/createOnAction";
import { removeCard, setCardData, setCardInjection, insertCard } from "./actions";
import { insertCardCommand, removeCardCommand, setCardDataCommand, setCardInjectionCommand } from "./commands";
import createOnCangjieCopy from "./handlers/createOnCangjieCopy";
import createOnCangjiePaste from "./handlers/createOnCangjiePaste";
import { Placeholder } from '@ali/4ever-component';
import { moFactory } from '@ali/4ever-plugin-card';
export function cardFactory(createPlugin) {
  return function createCardPlugin(bizConfig) {
    var myPlugin = createPlugin(bizConfig);
    var menubar = myPlugin.menubar,
        toolbar = myPlugin.toolbar,
        onAction = myPlugin.onAction,
        onCangjiePaste = myPlugin.onCangjiePaste,
        queries = myPlugin.queries,
        onCangjieCopy = myPlugin.onCangjieCopy,
        renderHoverToolbar = myPlugin.renderHoverToolbar;
    return _extends({}, moFactory({}), {
      key: myPlugin.cardType,
      cardType: myPlugin.cardType,
      menubar: menubar,
      // @ts-ignore
      toolbar: toolbar,
      renderNode: createRenderNode(myPlugin, bizConfig, Placeholder),
      onKeyDown: createOnKeyDown(),
      onAction: createOnAction(onAction),
      onCangjieCopy: createOnCangjieCopy(onCangjieCopy),
      onCangjiePaste: createOnCangjiePaste(onCangjiePaste),
      commands: {
        insertCard: insertCardCommand,
        removeCard: removeCardCommand,
        setCardData: setCardDataCommand,
        setCardInjection: setCardInjectionCommand
      },
      queries: _extends({}, queries, {
        lazyRenderStrategy: function lazyRenderStrategy(_, node) {
          return node.type === 'card' && typeof node.data.height === 'number' ? {
            size: {
              height: node.data.height
            }
          } : undefined;
        }
      }),
      models: {
        klass: 'block',
        type: 'card'
      },
      renderHoverToolbar: renderHoverToolbar
    });
  };
}
export { removeCard, setCardData, setCardInjection, insertCard };
//# sourceMappingURL=index.js.map