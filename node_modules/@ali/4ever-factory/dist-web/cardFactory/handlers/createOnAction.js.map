{"version":3,"sources":["../../../../src/cardFactory/handlers/createOnAction.ts"],"names":["CARD_INSERT","CARD_REMOVE","CARD_SET_DATA","CARD_SET_INJECTION","insertCard","removeCard","setCardData","setCardInjection","customizedAction","onAction","action","controller","next","type","payload","node","command","mergeData","injection"],"mappings":"AACA,SACEA,WADF,EAEEC,WAFF,EAIEC,aAJF,EAMEC,kBANF;AASA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,gBAAP;AAKA,gBAAe,UAACC,gBAAD,EAAmC;AAChD,SAAO,SAASC,QAAT,CACLC,MADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AAAA,QACQC,IADR,GAC0BH,MAD1B,CACQG,IADR;AAAA,QACcC,OADd,GAC0BJ,MAD1B,CACcI,OADd;;AAEA,QAAID,IAAI,KAAKZ,WAAb,EAA0B;AAAA,iBACPa,OADO;AAAA,UAChBC,IADgB,QAChBA,IADgB;AAGxB,aAAOJ,UAAU,CAACK,OAAX,CAAmBX,UAAnB,EAA+BU,IAA/B,CAAP;AACD;;AACD,QAAIF,IAAI,KAAKX,aAAb,EAA4B;AAAA,kBACEY,OADF;AAAA,UAClBC,KADkB,SAClBA,IADkB;AAAA,UACZE,SADY,SACZA,SADY;AAE1B,aAAON,UAAU,CAACK,OAAX,CAAmBV,WAAnB,EAAgCS,KAAhC,EAAsCE,SAAtC,CAAP;AACD;;AACD,QAAIJ,IAAI,KAAKV,kBAAb,EAAiC;AAAA,kBACHW,OADG;AAAA,UACvBC,MADuB,SACvBA,IADuB;AAAA,UACjBG,SADiB,SACjBA,SADiB;AAE/B,aAAOP,UAAU,CAACK,OAAX,CAAmBT,gBAAnB,EAAqCQ,MAArC,EAA2CG,SAA3C,CAAP;AACD;;AACD,QAAIL,IAAI,KAAKb,WAAb,EAA0B;AACxB,aAAOW,UAAU,CAACK,OAAX,CAAmBZ,UAAnB,EAA+BU,OAA/B,CAAP;AACD;;AACD,WAAON,gBAAgB,GAAGA,gBAAgB,CAACE,MAAD,EAASC,UAAT,EAAqBC,IAArB,CAAnB,GAAgDA,IAAI,EAA3E;AACD,GAvBD;AAwBD,CAzBD","sourcesContent":["import { Action, Controller } from '@ali/4ever-cangjie';\nimport {\n  CARD_INSERT,\n  CARD_REMOVE,\n  RemoveCardPayload,\n  CARD_SET_DATA,\n  SetCardDataPayload,\n  CARD_SET_INJECTION,\n  SetCardInjectionPayload,\n} from '../actions';\nimport insertCard, { CardDataJSON } from '../commands/insertCard';\nimport removeCard from '../commands/removeCard';\nimport setCardData from '../commands/setCardData';\nimport setCardInjection from '../commands/setCardInjection';\n\ntype ActionType = (action: Action, controller: Controller, next: () => void) => void;\n\n\nexport default (customizedAction?: ActionType) => {\n  return function onAction(\n    action: Action,\n    controller: Controller,\n    next: () => void,\n  ) {\n    const { type, payload } = action;\n    if (type === CARD_REMOVE) {\n      const { node } = payload as RemoveCardPayload;\n\n      return controller.command(removeCard, node);\n    }\n    if (type === CARD_SET_DATA) {\n      const { node, mergeData } = payload as SetCardDataPayload;\n      return controller.command(setCardData, node, mergeData);\n    }\n    if (type === CARD_SET_INJECTION) {\n      const { node, injection } = payload as SetCardInjectionPayload;\n      return controller.command(setCardInjection, node, injection);\n    }\n    if (type === CARD_INSERT) {\n      return controller.command(insertCard, payload as CardDataJSON);\n    }\n    return customizedAction ? customizedAction(action, controller, next) : next();\n  };\n};"],"file":"createOnAction.js"}