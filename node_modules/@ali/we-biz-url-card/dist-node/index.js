'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var reactTransitionGroup = require('react-transition-group');
var styled = require('styled-components');
var weDesign = require('@ali/we-design');
var weToolbar = require('@ali/we-toolbar');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

const Container = styled__default['default'].div`
  height: ${p => p.height}px;
  box-sizing: border-box;
  white-space: normal;
  cursor: auto;
`;
const InputWrapper = styled__default['default'].div``;
const InputContent = styled__default['default'].div`
  display: flex;
  align-items: center;
`;
const InputInput = styled__default['default'].input`
  opacity: 0.3;
  flex: 1;
  border: 1px solid rgba(126, 134, 142, 0.24);
  box-sizing: border-box;
  border-radius: 4px;
  padding: 7px 6px;
  min-width: 0;
  font-size: 14px;
  font-family: PingFang SC;
  height: 32px;

  &:focus::placeholder {
    color: rgba(23, 26, 29, 0.24);
  }

  &:focus {
    outline: none;
    opacity: 1;
    border-color: #2d84fa;
    color: 171a1d;
  }

  &[data-error] {
    opacity: 1;
    border-color: #fb602d;
  }
`; // 占位符的输入组件

const MainInput = ({
  style,
  disabled = false,
  placeholder,
  value,
  showError,
  btnText,
  onChange,
  onConfirm,
  onFocus,
  onBlur,
  isLoading
}, ref) => {
  const [showButton, setShowButton] = React.useState(false);

  const handleInput = evt => {
    const value = evt.target.value; // 出现按钮

    if (value.length > 0) {
      setShowButton(true);
    } else {
      setShowButton(false);
    }

    onChange(value);
  }; // Press enter to submit


  const handleKeyDown = evt => {
    if (evt.key === 'Enter') {
      onConfirm();
    }
  };

  return /*#__PURE__*/React__default['default'].createElement(InputWrapper, {
    style: style
  }, /*#__PURE__*/React__default['default'].createElement(InputContent, null, /*#__PURE__*/React__default['default'].createElement(InputInput, {
    ref: ref,
    disabled: disabled ? true : undefined,
    value: value,
    type: "string",
    placeholder: placeholder,
    "data-error": showError ? true : null,
    onChange: handleInput,
    onKeyDown: handleKeyDown,
    onFocus: onFocus,
    onBlur: onBlur
  }), showButton && /*#__PURE__*/React__default['default'].createElement(weDesign.Button, {
    onClick: onConfirm,
    size: "large",
    type: "primary",
    disabled: showError,
    style: {
      marginLeft: '12px',
      overflow: 'hidden'
    }
  }, isLoading ? /*#__PURE__*/React__default['default'].createElement(weDesign.LoadingNormal, {
    style: {
      marginLeft: '2px'
    }
  }) : btnText)));
};
const Input = /*#__PURE__*/React__default['default'].forwardRef(MainInput);

const getIframeURL = html => {
  try {
    const div = document.createElement('div');
    div.innerHTML = html;
    return div.children[0].src;
  } catch (err) {
    return '';
  }
}; // ‒ https://ditu.amap.com/place/B0FFFKOO8E 直接从地址栏复制
const youkuURLRegexp = /^https?:\/\/v\.youku\.com\/v_show\/id_(.+?)\.html(\?.*)?$/;
const youkuPlayerURLRegexp = /^https?:\/\/player\.youku\.com\/embed\/.+$/; // 将输入的内容转换为优酷 iframe 的 URL 格式，如果不能转换，返回空
// 输入格式：
// - https://player.youku.com/embed/XMTY1MjYwODYzNg==
// - https://v.youku.com/v_show/id_XNDk0MTAzNTc5Ng==.html?spm=a2hbt.13141534.1_3.d_1_2&s=cafe37eba40744ba9ca9
// - https://v.youku.com/v_show/id_XNDk0MTAzNTc5Ng==.html
// - <iframe height=498 width=510 src='https://player.youku.com/embed/XNDk0MTAzNTc5Ng==' frameborder=0 'allowfullscreen'></iframe>
// 输出格式： https://player.youku.com/embed/XNDgzNDM2NTM1Ng==

const transformYoukuInput = input => {
  // iframe
  if (input.startsWith('<iframe ')) {
    const url = getIframeURL(input);
    return youkuPlayerURLRegexp.test(url) ? url : '';
  }

  if (youkuPlayerURLRegexp.test(input)) {
    return input;
  }

  const match = input.match(youkuURLRegexp);
  if (match == null) return '';
  return `https://player.youku.com/embed/${match[1]}`;
};

const BG_URL = 'https://img.alicdn.com/imgextra/i2/O1CN01Ww89xd1uCVRWYin5T_!!6000000006001-2-tps-1324-800.png';
const config = {
  bg: BG_URL,
  gif: 'https://img.alicdn.com/imgextra/i3/O1CN015Bwpd21hh6tcGbTED_!!6000000004308-1-tps-400-400.gif',
  url: 'https://www.youku.com/',
  transform: transformYoukuInput,
  gifWidth: {
    pc: 200,
    mobile: 80
  }
};
const GifContainer = styled__default['default'].div`
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: space-around;

  img {
    width: ${p => p.gifWidth}px;
  }
`;
const WithNumberPrefixWrapper = styled__default['default'].div`
  display: flex;
  align-items: center;
  position: relative; // 盖过竖线
`;
const WithNumberPrefixContent = styled__default['default'].div`
  width: 24px;
  height: 24px;
  border-radius: 50%;
  text-align: center;
  font-size: 13px;
  line-height: 24px;
  margin-right: 10px;
  color: white;
  flex-shrink: 0;
  background: ${p => p.active ? '#007aff' : '#E5E5EA'};
`;

const WithNumberPrefix = ({
  num,
  children,
  style,
  active = false
}) => {
  return /*#__PURE__*/React__default['default'].createElement(WithNumberPrefixWrapper, {
    style: style
  }, /*#__PURE__*/React__default['default'].createElement(WithNumberPrefixContent, {
    active: active
  }, num), children);
};

const ContentWrapper = styled__default['default'].div`
  padding: ${p => !p.isMobile ? `20px 20px 0px 20px` : '9px 6px 0 6px'};

  &.tran-enter {
    transform: scale(0.8);
  }

  &.tran-enter-active {
    transform: scale(1);
    transition: transform 200ms;
  }

  &.tran-enter-done {
    transform: scale(1);
  }
`;
const Content = styled__default['default'].div`
  border-radius: 8px;
  background: white;
  box-shadow: 0px 5px 15px rgba(17, 31, 44, 0.1);
  padding: ${p => !p.isMobile ? '18px 16px 16px 16px' : '10px 12px'};
  position: relative;
`; // 竖线

const VerticalLine = styled__default['default'].div`
  background: linear-gradient(
    180deg,
    rgba(17, 31, 44, 0) 0%,
    rgba(17, 31, 44, 0.12) 24.48%,
    rgba(17, 31, 44, 0.12) 79.69%,
    rgba(17, 31, 44, 0) 100%
  );
  position: absolute;
  left: ${p => !p.isMobile ? 28 : 24}px;
  top: 1px;
  width: 1px;
  height: 100%;
`;
const Wrapper = styled__default['default'].div`
  height: 100%;
  background-image: url('${p => p.bgURL}');
  background-position: 50% 50%;
  font-size: 14px;
  display: flex;
  flex-direction: column;

  &.tran-enter {
    background-size: ${p => !p.isMobile ? 'auto 200%' : '200%'};
  }

  &.tran-enter-active {
    background-size: ${p => !p.isMobile ? 'auto 100%' : '100%'};
    transition: background-size 2000ms;
  }

  &.tran-enter-done {
    background-size: cover;
  }
`;
const FirstLineWrapper = styled__default['default'].div`
  display: flex;
  align-items: center;
  min-width: 0;
  flex: 1;
  color: rgba(23, 26, 29, 1);
  // 文字会设置 line-height，这里重置，否则对齐会有问题
  line-height: normal;
`;
const PopupOverlayWrapper = styled__default['default'].div`
  width: 260px;
  background: #ffffff;
  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.24), 0px 8px 24px rgba(0, 0, 0, 0.16);
  padding: 12px;
  border-radius: 4px;

  > img {
    max-width: 100%;
    display: block;
  }
`;

var _ref = /*#__PURE__*/React__default['default'].createElement("img", {
  src: "https://img.alicdn.com/imgextra/i1/O1CN01NHjF2q1wOzTMdYO73_!!6000000006299-2-tps-484-224.png"
});

const PopupOverlay = ({
  title,
  desc,
  textAtTop
}) => {
  const textNode = /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      fontSize: '16px',
      lineHeight: '160%',
      color: '#171A1D',
      marginTop: textAtTop ? 0 : '12px',
      marginBottom: '3px'
    }
  }, title), /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      fontSize: '14px',
      lineHeight: '20px',
      color: 'rgba(23, 26, 29, 0.6)',
      marginBottom: textAtTop ? '12px' : '0px'
    }
  }, desc));
  return /*#__PURE__*/React__default['default'].createElement(PopupOverlayWrapper, null, textAtTop && textNode, _ref, !textAtTop && textNode);
};

var _ref2 = /*#__PURE__*/React__default['default'].createElement("div", null, "\u4F18\u9177\u89C6\u9891\u6682\u4E0D\u652F\u6301\u624B\u673A\u7AEF\u63D2\u5165");

var _ref3 = /*#__PURE__*/React__default['default'].createElement(weDesign.FooterHelpNormal, null);

const YoukuPlaceholder = ({
  readonly,
  onURLChange,
  openURLInBrowser,
  onGoToSite,
  isMobile = false,
  locale
}) => {
  const [step, setStep] = React.useState(1);
  const [inputStr, setInputStr] = React.useState('');
  const [showError, setShowError] = React.useState(false);
  const inputRef = React.useRef(null); // 用于保持 GIF 图地址唯一，否则第二次插入时不会播放

  const timeStr = React.useRef(Date.now().toString());
  const [inProp, setInProp] = React.useState(false);
  React.useEffect(() => {
    setInProp(true);
  }, []); // 一旦点击以后，就 activate step 2

  const toURL = () => {
    openURLInBrowser === null || openURLInBrowser === void 0 ? void 0 : openURLInBrowser(config.url);
    onGoToSite === null || onGoToSite === void 0 ? void 0 : onGoToSite();

    if (!readonly) {
      var _inputRef$current;

      setStep(2);
      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
    }
  };

  const onInputChange = newValue => {
    setStep(2);
    setInputStr(newValue);

    if (showError) {
      setShowError(false);
    }
  };

  const onConfirm = () => {
    const result = config.transform(inputStr); // 输入的值无效

    if (result === '') {
      var _inputRef$current2;

      setShowError(true);
      inputRef && ((_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.select());
    } else {
      onURLChange === null || onURLChange === void 0 ? void 0 : onURLChange(result);
    }
  };

  const handleFocus = () => {
    setStep(2);

    if (showError && inputRef && inputRef.current) {
      inputRef.current.select();
    }
  };

  const handleBlur = () => {
    setShowError(false);
  };

  return /*#__PURE__*/React__default['default'].createElement(reactTransitionGroup.CSSTransition, {
    timeout: 2000,
    in: inProp,
    classNames: "tran"
  }, /*#__PURE__*/React__default['default'].createElement(Wrapper, {
    isMobile: isMobile,
    bgURL: config.bg
  }, /*#__PURE__*/React__default['default'].createElement(reactTransitionGroup.CSSTransition, {
    in: inProp,
    timeout: 200,
    classNames: "tran"
  }, /*#__PURE__*/React__default['default'].createElement(ContentWrapper, {
    isMobile: isMobile
  }, /*#__PURE__*/React__default['default'].createElement(Content, {
    isMobile: isMobile
  }, /*#__PURE__*/React__default['default'].createElement(VerticalLine, {
    isMobile: isMobile
  }), /*#__PURE__*/React__default['default'].createElement(WithNumberPrefix, {
    num: "1",
    active: step === 1,
    style: {
      marginBottom: (isMobile ? 8 : 16) + 'px'
    }
  }, /*#__PURE__*/React__default['default'].createElement(FirstLineWrapper, null, isMobile ? _ref2 : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("span", null, locale.open), "\u2009", /*#__PURE__*/React__default['default'].createElement(weDesign.Button, {
    type: "text",
    onClick: toURL
  }, locale.name), "\u2009", /*#__PURE__*/React__default['default'].createElement("span", null, locale.actionText), /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      marginLeft: 'auto'
    }
  }, /*#__PURE__*/React__default['default'].createElement(weDesign.Dropdown, {
    overlayStyle: {
      border: 'none',
      boxShadow: 'none'
    },
    overlay:
    /*#__PURE__*/

    /**
     * TODO(xunyi): 这里包装了一层，否则会有 warning
     * figure out why
     */
    React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(PopupOverlay, {
      title: locale.copyTitle,
      desc: locale.copyDesc,
      textAtTop: false
    })),
    trigger: "click",
    placement: "bottomRight",
    offsetY: 4
  }, /*#__PURE__*/React__default['default'].createElement(weToolbar.IconButton, {
    icon: _ref3,
    showTitle: true,
    title: locale.linkText
  })))))), /*#__PURE__*/React__default['default'].createElement(WithNumberPrefix, {
    num: "2",
    active: step === 2
  }, /*#__PURE__*/React__default['default'].createElement(weDesign.Dropdown, {
    visible: showError,
    offsetY: 4,
    overlayStyle: {
      border: 'none',
      boxShadow: 'none'
    },
    overlay:
    /*#__PURE__*/

    /**
     * TODO(xunyi): 这里包装了一层，否则会有 warning
     * figure out why
     */
    React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(PopupOverlay, {
      textAtTop: true,
      title: locale.linkError,
      desc: locale.linkErrorDesc
    }))
  }, /*#__PURE__*/React__default['default'].createElement(Input, {
    ref: inputRef,
    value: inputStr,
    disabled: isMobile,
    onChange: onInputChange,
    onConfirm: onConfirm,
    onFocus: handleFocus,
    onBlur: handleBlur,
    showError: showError,
    btnText: locale.confirm,
    isLoading: false,
    style: {
      minWidth: 0,
      flex: '1'
    },
    placeholder: isMobile ? '' : locale.placeholder
  })))))), /*#__PURE__*/React__default['default'].createElement(GifContainer, {
    gifWidth: isMobile ? config.gifWidth.mobile : config.gifWidth.pc
  }, /*#__PURE__*/React__default['default'].createElement("img", {
    src: config.gif + `?_id=${timeStr.current}`
  }))));
};

var _ref2$1 = /*#__PURE__*/React__default['default'].createElement("svg", {
  width: "25",
  height: "25",
  viewBox: "0 0 25 25",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, /*#__PURE__*/React__default['default'].createElement("path", {
  d: "M17.353 8.62731C16.2273 7.1644 14.459 6.22168 12.4704 6.22168C9.07003 6.22168 6.31348 8.97823 6.31348 12.3786C6.31348 15.779 9.07003 18.5355 12.4704 18.5355C14.8695 18.5355 16.9481 17.1633 17.9643 15.161",
  stroke: "#111F2C",
  strokeOpacity: "0.85"
}), /*#__PURE__*/React__default['default'].createElement("path", {
  d: "M17.308 5.34229V8.42075H14.2295",
  stroke: "#111F2C",
  strokeOpacity: "0.85"
}));

const RefreshIcon = () => {
  return _ref2$1;
};

var _ref3$1 = /*#__PURE__*/React__default['default'].createElement("svg", {
  width: "25",
  height: "25",
  viewBox: "0 0 25 25",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, /*#__PURE__*/React__default['default'].createElement("circle", {
  cx: "12.6166",
  cy: "12.3788",
  r: "6.53648",
  stroke: "#111F2C",
  strokeOpacity: "0.85"
}), /*#__PURE__*/React__default['default'].createElement("path", {
  fillRule: "evenodd",
  clipRule: "evenodd",
  d: "M12.7362 10.8675C12.301 10.8582 11.8811 11.0274 11.5739 11.3358C11.2656 11.643 11.0965 12.0629 11.1056 12.4981L9.53809 15.6325L12.6725 14.0653C13.1078 14.0746 13.5279 13.9054 13.8351 13.597C14.1434 13.2898 14.3125 12.8698 14.3034 12.4347L15.8706 9.30029L12.7362 10.8675ZM12.0846 12.4664C12.0846 12.1208 12.359 11.8376 12.7044 11.8267C13.0498 11.8376 13.3242 12.1208 13.3242 12.4664C13.3242 12.812 13.0498 13.0951 12.7044 13.1061C12.359 13.0951 12.0846 12.812 12.0846 12.4664Z",
  fill: "#111F2C",
  fillOpacity: "0.85"
}));

const BrowserIcon = () => {
  return _ref3$1;
};

const ContentWrapper$1 = styled__default['default'].div`
  position: relative;
  height: 100%;
  border-radius: 8px;
  overflow: hidden;
`;
const Content$1 = styled__default['default'].div`
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;

  &.tran-enter {
    opacity: 0;
  }

  &.tran-enter-active {
    opacity: 1;
    transition: opacity 200ms ease-in-out;
  }

  &.tran-exit {
    opacity: 1;
  }

  &.tran-exit-active {
    opacity: 0;
    transition: opacity 200ms ease-in-out;
  }
`;
const ToolbarItemWrapper = styled__default['default'].div`
  padding: 2px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  cursor: pointer;

  > div {
    width: 24px;
    height: 24px;
    border-radius: 4px;
    &:hover {
      background-color: rgba(25, 31, 37, 0.08);
    }
    > svg {
      width: 100%;
      height: 100%;
    }
  }
`;

const ToolbarItem = ({
  children,
  onClick
}) => {
  return /*#__PURE__*/React__default['default'].createElement(ToolbarItemWrapper, {
    onClick: onClick
  }, /*#__PURE__*/React__default['default'].createElement("div", null, children));
}; // 底部留出一段距离，这样鼠标划出以后，toolbar 不会消失


const ToolbarWrapper = styled__default['default'].div`
  padding-bottom: 10px;
  position: absolute;
  left: 0;
  top: -35px;
  z-index: 9999;
`;
const ToolbarContent = styled__default['default'].div`
  border: 1px solid rgba(17, 31, 44, 0.08);
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.12);
  border-radius: 4px;
  display: flex;
  align-items: center;
  background: white;
`;

var _ref$1 = /*#__PURE__*/React__default['default'].createElement(RefreshIcon, null);

var _ref2$2 = /*#__PURE__*/React__default['default'].createElement(BrowserIcon, null);

const Toolbar = ({
  onRefresh,
  onOpenURL
}) => {
  return /*#__PURE__*/React__default['default'].createElement(ToolbarWrapper, null, /*#__PURE__*/React__default['default'].createElement(ToolbarContent, null, /*#__PURE__*/React__default['default'].createElement(ToolbarItem, {
    onClick: onRefresh
  }, _ref$1), /*#__PURE__*/React__default['default'].createElement(ToolbarItem, {
    onClick: onOpenURL
  }, _ref2$2)));
};
const getHeight = ({
  isMobile
}) => {
  return isMobile ? 200 : 400;
};
const YoukuContentWrapper = styled__default['default'].div`
  height: 100%;
  display: flex;
  align-items: center;
  background: white;
`;
const YoukuContent = /*#__PURE__*/React__default['default'].forwardRef(({
  url
}, ref) => {
  const iframeRef = React.useRef(null);
  React__default['default'].useImperativeHandle(ref, () => ({
    refresh: () => {
      if (iframeRef.current) {
        iframeRef.current.src += '';
      }
    }
  }));
  return /*#__PURE__*/React__default['default'].createElement(YoukuContentWrapper, null, /*#__PURE__*/React__default['default'].createElement("iframe", {
    onLoad: e => e.target.blur(),
    sandbox: "allow-forms allow-scripts allow-same-origin",
    allowFullScreen: true,
    ref: iframeRef,
    style: {
      border: 'none',
      width: '100%',
      height: '100%'
    },
    src: url
  }));
});
const YoukuCard = ({
  isMobile = false,
  readonly = false,
  url,
  locale,
  onURLChange,
  onGoToSite,
  openURLInBrowser
}) => {
  const height = getHeight({
    isMobile
  });
  const [showToolbar, setShowToolbar] = React.useState(false);
  const showPlaceholder = url === '';
  const contentRef = React.useRef(null);

  const toolbarVisible = (() => {
    if (readonly) return false;
    if (showPlaceholder) return false;
    if (isMobile) return false;
    return showToolbar;
  })();

  const handleRefresh = () => {
    var _contentRef$current;

    (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.refresh();
  };

  const handleOpenURL = () => {
    openURLInBrowser === null || openURLInBrowser === void 0 ? void 0 : openURLInBrowser(url);
  };

  return /*#__PURE__*/React__default['default'].createElement(Container, {
    onMouseEnter: () => setShowToolbar(true),
    onMouseLeave: () => setShowToolbar(false),
    height: height
  }, /*#__PURE__*/React__default['default'].createElement(ContentWrapper$1, null, /*#__PURE__*/React__default['default'].createElement(reactTransitionGroup.TransitionGroup, null, /*#__PURE__*/React__default['default'].createElement(reactTransitionGroup.CSSTransition, {
    key: showPlaceholder.toString(),
    timeout: 500,
    classNames: "tran"
  }, /*#__PURE__*/React__default['default'].createElement(Content$1, null, showPlaceholder ? /*#__PURE__*/React__default['default'].createElement(YoukuPlaceholder, {
    isMobile: isMobile,
    onURLChange: onURLChange,
    onGoToSite: onGoToSite,
    openURLInBrowser: openURLInBrowser,
    readonly: readonly,
    locale: locale
  }) : /*#__PURE__*/React__default['default'].createElement(YoukuContent, {
    url: url,
    ref: contentRef
  }))))), toolbarVisible && /*#__PURE__*/React__default['default'].createElement(Toolbar, {
    onRefresh: handleRefresh,
    onOpenURL: handleOpenURL
  }));
};

const Exported = YoukuCard;
Exported.getHeight = getHeight;
Exported.bgURL = BG_URL;

var _ref$2 = /*#__PURE__*/React__default['default'].createElement("span", null, "\u6682\u4E0D\u652F\u6301\u5BFC\u51FA");

const NoSupportPlaceholder = /*#__PURE__*/React__default['default'].memo(() => {
  return /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      height: '100%',
      minHeight: ' 200px',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'white',
      border: '1px solid rgba(17, 31, 44, 0.08)',
      borderRadius: 8
    } //TODO 服务端ssl 不支持国际化，暂时不做

  }, /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      display: 'flex',
      justifyContent: 'center'
    }
  }, /*#__PURE__*/React__default['default'].createElement(weDesign.ExclamationCircleBetaNormal, {
    style: {
      fontSize: 23,
      marginRight: 4
    }
  }), _ref$2));
});

exports.NoSupportPlaceholder = NoSupportPlaceholder;
exports.YoukuCard = Exported;
//# sourceMappingURL=index.js.map
