import type { JsonML, Document } from '@ali/4ever-cangjie';
export interface BaseMigration<T extends Function = any> {
    /** prev model version */
    prevVersion: number;
    /** next model version */
    nextVersion: number;
    /** upgrade model */
    upgrade: T;
    /** downgrade model */
    downgrade: T;
}
declare type MigrateFunc = (m: Document) => Document;
export declare type BaseCorrection<T = any> = (model: any) => T;
export declare type Migration = BaseMigration<MigrateFunc>;
export declare type Correction = BaseCorrection<JsonML>;
export declare type MigrateAlg = {
    upgrade: MigrateFunc;
    downgrade: MigrateFunc;
};
export declare enum MigrateErrorCode {
    /** 未知错误 */
    Unknown = 0,
    /** 缺少迁移脚本 */
    MissingMigration = 1
}
export interface MigrateError {
    /** 迁移错误码 */
    code: MigrateErrorCode;
    /** 错误消息 */
    message: string;
}
export interface BaseMigrateOptions<M extends BaseMigration, C extends BaseCorrection> {
    /** 迁移源 */
    src: any;
    /** 自定义迁移脚本，默认为当前 Package 导出的迁移脚本 */
    migrations?: M[];
    /** 自定义矫正脚本，默认为当前 Package 导出的矫正脚本 */
    corrections?: C[];
    /** 迁移到的目标版本，默认为当前 Package 声明的版本 */
    targetVersion?: number;
    /** 错误回调 */
    onError?: (e: MigrateError) => void;
}
export declare type MigrateOptions = BaseMigrateOptions<Migration, Correction>;
export {};
