import _extends from "@babel/runtime/helpers/extends";
import schema, { moPlugins } from "./schema";
import { createStrictSchema } from '@ali/4ever-cangjie';
export var blockTypes = Object.keys(schema.blocks);
export var inlineTypes = Object.keys(schema.inlines);
/** @deprecated use controller.strictSchema instead  */

var strictSchema = createStrictSchema(moPlugins);
export default strictSchema;
/**
 * @deprecated use controller.strictSchema instead
 *
 * 这个方法 pi 里面还在用，先兼容
 */

export var createStrictSchemaOld = function createStrictSchemaOld(opts) {
  var _opts$blockTypes = opts.blockTypes,
      blockTypes = _opts$blockTypes === void 0 ? [] : _opts$blockTypes,
      _opts$inlineTypes = opts.inlineTypes,
      inlineTypes = _opts$inlineTypes === void 0 ? [] : _opts$inlineTypes,
      _opts$inTableBlockTyp = opts.inTableBlockTypes,
      inTableBlockTypes = _opts$inTableBlockTyp === void 0 ? [] : _opts$inTableBlockTyp;

  var s = _extends({}, strictSchema, {
    document: _extends({}, strictSchema.document, {
      nodes: [{
        match: blockTypes.map(function (t) {
          return {
            type: t
          };
        }),
        min: 1
      }]
    }),
    blocks: _extends({}, strictSchema.blocks, {
      'table-cell': _extends({}, strictSchema.blocks['table-cell'], {
        nodes: [{
          match: inTableBlockTypes.map(function (t) {
            return {
              type: t
            };
          }),
          min: 1
        }]
      })
    })
  });

  return s;
};
//# sourceMappingURL=strictSchema.js.map