{"version":3,"sources":["../../../src/utils/nodeTypes.ts"],"names":["isPureParagraphValue","Paragraph","Mention","Table","TableRow","TableCell","List","isListValue","node","isList","isMentionValue","isMention","isParagraphValue","isParagraph","isTableValue","isTable","isTableRowValue","isTableRow","isTableCellValue","isTableCell"],"mappings":"AACA,SAASA,oBAAT,EAA+BC,SAA/B,QAAgD,6BAAhD;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,yBAA3C;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAAgD;AACrD;AACA,SAAOF,IAAI,CAACG,MAAL,CAAYD,IAAZ,CAAP;AACD;AAED,OAAO,SAASE,cAAT,CAAwBF,IAAxB,EAAoD;AACzD,SAAON,OAAO,CAACS,SAAR,CAAkBH,IAAlB,CAAP;AACD;AAED,OAAO,SAASI,gBAAT,CAA0BJ,IAA1B,EAAqD;AAC1D,SAAOP,SAAS,CAACY,WAAV,CAAsBL,IAAtB,CAAP;AACD;AAED,SAASR,oBAAT;AAEA,OAAO,SAASc,YAAT,CAAsBN,IAAtB,EAAiD;AACtD,SAAOL,KAAK,CAACY,OAAN,CAAcP,IAAd,CAAP;AACD;AAED,OAAO,SAASQ,eAAT,CAAyBR,IAAzB,EAAoD;AACzD,SAAOJ,QAAQ,CAACa,UAAT,CAAoBT,IAApB,CAAP;AACD;AAED,OAAO,SAASU,gBAAT,CAA0BV,IAA1B,EAAqD;AAC1D,SAAOH,SAAS,CAACc,WAAV,CAAsBX,IAAtB,CAAP;AACD","sourcesContent":["import { Node, Inline, Block } from '@ali/4ever-cangjie';\nimport { isPureParagraphValue, Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { Mention } from '@ali/4ever-plugin-mention';\nimport { Table, TableRow, TableCell } from '@ali/4ever-plugin-table';\nimport { List } from '@ali/4ever-plugin-list';\n\nexport function isListValue(node: Node): node is Block {\n  // list 数据类型为 paragraph，区别在于 data 中存在 list 字段\n  return List.isList(node);\n}\n\nexport function isMentionValue(node: Node): node is Inline {\n  return Mention.isMention(node);\n}\n\nexport function isParagraphValue(node: Node): node is Block {\n  return Paragraph.isParagraph(node);\n}\n\nexport { isPureParagraphValue };\n\nexport function isTableValue(node: Node): node is Block {\n  return Table.isTable(node);\n}\n\nexport function isTableRowValue(node: Node): node is Block {\n  return TableRow.isTableRow(node);\n}\n\nexport function isTableCellValue(node: Node): node is Block {\n  return TableCell.isTableCell(node);\n}\n"],"file":"nodeTypes.js"}