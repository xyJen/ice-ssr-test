{"version":3,"sources":["../../src/strictSchema.ts"],"names":["schema","moPlugins","createStrictSchema","blockTypes","Object","keys","blocks","inlineTypes","inlines","strictSchema","createStrictSchemaOld","opts","inTableBlockTypes","s","document","nodes","match","map","t","type","min"],"mappings":";AAAA,OAAOA,MAAP,IAAiBC,SAAjB;AACA,SAASC,kBAAT,QAA2C,oBAA3C;AAEA,OAAO,IAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,MAAnB,CAAnB;AACP,OAAO,IAAMC,WAAW,GAAGH,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACQ,OAAnB,CAApB;AAEP;;AACA,IAAMC,YAAY,GAAGP,kBAAkB,CAACD,SAAD,CAAvC;AAEA,eAAeQ,YAAf;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAIvB;AAAA,yBAC0DA,IAD1D,CACJR,UADI;AAAA,MACJA,UADI,iCACS,EADT;AAAA,0BAC0DQ,IAD1D,CACaJ,WADb;AAAA,MACaA,WADb,kCAC2B,EAD3B;AAAA,8BAC0DI,IAD1D,CAC+BC,iBAD/B;AAAA,MAC+BA,iBAD/B,sCACmD,EADnD;;AAGZ,MAAMC,CAAS,gBACVJ,YADU;AAEbK,IAAAA,QAAQ,eACHL,YAAY,CAACK,QADV;AAENC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEb,UAAU,CAACc,GAAX,CAAe,UAACC,CAAD;AAAA,iBAAQ;AAAEC,YAAAA,IAAI,EAAED;AAAR,WAAR;AAAA,SAAf,CAAT;AAA+CE,QAAAA,GAAG,EAAE;AAApD,OAAD;AAFD,MAFK;AAMbd,IAAAA,MAAM,eACDG,YAAY,CAACH,MADZ;AAEJ,iCACKG,YAAY,CAACH,MAAb,CAAqB,YAArB,CADL;AAEES,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEJ,iBAAiB,CAACK,GAAlB,CAAsB,UAACC,CAAD;AAAA,mBAAQ;AAAEC,cAAAA,IAAI,EAAED;AAAR,aAAR;AAAA,WAAtB,CAAT;AAAsDE,UAAAA,GAAG,EAAE;AAA3D,SAAD;AAFT;AAFI;AANO,IAAf;;AAcA,SAAOP,CAAP;AACD,CAtBM","sourcesContent":["import schema, { moPlugins } from './schema';\nimport { createStrictSchema, Schema } from '@ali/4ever-cangjie';\n\nexport const blockTypes = Object.keys(schema.blocks!);\nexport const inlineTypes = Object.keys(schema.inlines!);\n\n/** @deprecated use controller.strictSchema instead  */\nconst strictSchema = createStrictSchema(moPlugins);\n\nexport default strictSchema;\n\n/**\n * @deprecated use controller.strictSchema instead\n *\n * 这个方法 pi 里面还在用，先兼容\n */\nexport const createStrictSchemaOld = (opts: {\n  blockTypes?: string[];\n  inTableBlockTypes?: string[];\n  inlineTypes?: string[];\n}): Schema => {\n  const { blockTypes = [], inlineTypes = [], inTableBlockTypes = [] } = opts;\n\n  const s: Schema = {\n    ...strictSchema,\n    document: {\n      ...strictSchema.document!,\n      nodes: [{ match: blockTypes.map((t) => ({ type: t })), min: 1 }],\n    },\n    blocks: {\n      ...strictSchema.blocks,\n      'table-cell': {\n        ...strictSchema.blocks!['table-cell'],\n        nodes: [{ match: inTableBlockTypes.map((t) => ({ type: t })), min: 1 }],\n      },\n    },\n  };\n  return s;\n};\n"],"file":"strictSchema.js"}