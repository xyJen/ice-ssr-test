{"version":3,"sources":["../../src/schema.ts"],"names":["Tab","key","schemas","type","isVoid","isBlock","moPlugins","Paragraph","Heading","Code","Hr","OnlineVideo","Placeholder","Table","Card","Embed","TemplateButton","Colorblocks","Container","RefBlock","Br","InlinePlaceholder","Image","Link","Mention","Refer","Sticker","InlineCode","Tag","map","f","schema"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAvBA;AA0BA;AACA,MAAMA,GAAc,GAAG,OAAO;AAC5BC,EAAAA,GAAG,EAAE,KADuB;AAE5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,KADC;AAEPC,IAAAA,MAAM,EAAE,IAFD;AAGPC,IAAAA,OAAO,EAAE;AAHF;AAFmB,CAAP,CAAvB,C,CASA;;;AACO,MAAMC,SAAS,GAAG,CACvB;AACAC,8BAFuB,EAGvBC,4BAHuB,EAIvBC,yBAJuB,EAKvBC,uBALuB,EAMvBC,gCANuB,EAOvBC,gCAPuB,EAQvBC,0BARuB,EASvBC,yBATuB,EAUvBC,0BAVuB,EAWvBC,mCAXuB,EAYvBC,gCAZuB,EAavBC,8BAbuB,EAcvBC,6BAduB,EAgBvB;AACAC,uBAjBuB,EAkBvBC,sCAlBuB,EAmBvBC,0BAnBuB,EAoBvBC,yBApBuB,EAqBvBC,4BArBuB,EAsBvBC,0BAtBuB,EAuBvBC,4BAvBuB,EAwBvBC,+BAxBuB,EAyBvBC,wBAzBuB,EA0BvB5B,GA1BuB,EA2BvB6B,GA3BuB,CA2BnBC,CAAC,IAAIA,CAAC,CAAC,EAAD,CA3Ba,CAAlB;AA6BP;;;AACA,MAAMC,MAAc,GAAG,+BAAazB,SAAb,CAAvB;eAEeyB,M","sourcesContent":["// [IMPORTANT] 本文件任何修改均必须通知文字团队全员，并通过架构师与 TL Review\nimport { Schema, createSchema, MoFactory } from '@ali/4ever-cangjie';\nimport { moFactory as Code } from '@ali/4ever-plugin-code';\nimport { moFactory as Hr } from '@ali/4ever-plugin-hr';\nimport { moFactory as Image } from '@ali/4ever-plugin-image';\nimport { moFactory as InlinePlaceholder } from '@ali/4ever-plugin-inline-placeholder';\nimport { moFactory as Link } from '@ali/4ever-plugin-link';\nimport { moFactory as Mention } from '@ali/4ever-plugin-mention';\nimport { moFactory as OnlineVideo } from '@ali/4ever-plugin-online-video';\nimport { moFactory as Placeholder } from '@ali/4ever-plugin-placeholder';\nimport { moFactory as Refer } from '@ali/4ever-plugin-refer';\nimport { moFactory as Sticker } from '@ali/4ever-plugin-sticker';\nimport { moFactory as Table } from '@ali/4ever-plugin-table';\nimport { moFactory as Card } from '@ali/4ever-plugin-card';\nimport { moFactory as Tag } from '@ali/4ever-plugin-tag';\nimport { moFactory as Embed } from '@ali/4ever-plugin-embed';\nimport { moFactory as Container } from '@ali/4ever-plugin-container';\nimport { moFactory as Colorblocks } from '@ali/4ever-plugin-color-blocks';\nimport { moFactory as RefBlock } from '@ali/4ever-plugin-refblock';\nimport { moFactory as InlineCode } from '@ali/4ever-plugin-inline-code';\nimport { moFactory as Br } from '@ali/4ever-plugin-br';\nimport { moFactory as Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { moFactory as Heading } from '@ali/4ever-plugin-heading';\nimport { moFactory as TemplateButton } from '@ali/4ever-plugin-template-button';\n\n\n// tab 插件不在 we-editor 中\nconst Tab: MoFactory = () => ({\n  key: 'tab',\n  schemas: {\n    type: 'tab',\n    isVoid: true,\n    isBlock: false,\n  }\n})\n\n// mo 里 schema 针对的规则是写死的, 标记为废弃态, 后续使用 controller.schema 和 controller.strictSchema\nexport const moPlugins = [\n  // blocks\n  Paragraph,\n  Heading,\n  Code,\n  Hr,\n  OnlineVideo,\n  Placeholder,\n  Table,\n  Card,\n  Embed,\n  TemplateButton,\n  Colorblocks,\n  Container,\n  RefBlock,\n\n  // inlines\n  Br,\n  InlinePlaceholder,\n  Image,\n  Link,\n  Mention,\n  Refer,\n  Sticker,\n  InlineCode,\n  Tag,\n  Tab,\n].map(f => f({}));\n\n/** @deprecated use controller.schema instead  */\nconst schema: Schema = createSchema(moPlugins);\n\nexport default schema;\n"],"file":"schema.js"}