{"version":3,"sources":["../../../src/type/index.ts"],"names":["isText","isJsonMLText","isInline","isJsonMLInline"],"mappings":";;;;;;;;;;;AAIA;;AAaA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnBA;AACA;AACA;AACA;AAIA,MAAMA,MAAM,GAAGC,uBAAf;;AACA,MAAMC,QAAQ,GAAGC,yBAAjB;;eAIe;AACbH,EAAAA,MADa;AAEbE,EAAAA;AAFa,C","sourcesContent":["/**\n * @packageDocumentation\n * @module Serializer\n */\nimport { isJsonMLInline, isJsonMLText } from '@ali/4ever-utils';\nimport type { Phantom } from '@ali/4ever-utils';\n\nconst isText = isJsonMLText;\nconst isInline = isJsonMLInline;\nexport type { Phantom }\n\nexport { isText, isInline };\nexport default {\n  isText,\n  isInline,\n};\n\nexport * from './migrations';\nexport * from './mo';\nexport * from './config';\n\nexport type {\n  HTMLToJsonMLRule,\n  JsonMLToHTMLRule,\n\n  ValueToJsonMLRule,\n  JsonMLToValueRule,\n  TextToJsonMLRule,\n  ValueToTextRule,\n  MarkdownToHTMLRule,\n  MoSerializationPlugin as Plugin,\n  MoSerializationPluginFactory as PluginFactory,\n  MoState as State,\n  MoAttributes as Attributes,\n  ConvertFunc,\n} from '@ali/4ever-cangjie';\n"],"file":"index.js"}