{"version":3,"sources":["../../src/createCustomizedMoPlugins.ts"],"names":["createCustomizedMoPlugins","plugins","createMoPlugins","configs","result","forEach","factory","plugin","push"],"mappings":";;;;;;;AAIA;;AAJA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA,SAASA,yBAAT,CAAmCC,OAAnC,EAA2E;AACzE,SAAO,SAASC,eAAT,CAAyBC,OAAiB,GAAG,EAA7C,EAA2D;AAChE,UAAMC,MAAgB,GAAG,EAAzB;AACA,gCAAoBH,OAApB,EAA6BI,OAA7B,CAAqC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAuB;AAC1D,YAAMC,MAAM,GAAGD,OAAO,CAACH,OAAD,CAAtB;AACAC,MAAAA,MAAM,CAACI,IAAP,CAAYD,MAAZ;AACD,KAHD;AAIA,WAAOH,MAAP;AACD,GAPD;AAQD;;eAEcJ,yB","sourcesContent":["/**\n * @packageDocumentation\n * @module Serializer\n */\nimport { sortPlugins } from '@ali/4ever-utils';\nimport { MoConfig } from './type';\nimport type {\n  MoSerializationPluginFactory as PluginFactory,\n  MoSerializationPlugin as Plugin,\n} from '@ali/4ever-cangjie';\n\n/**\n * 创建自定义插件。传入自定义的插件 Map，返回一个插件创建函数（createMoPlugins）。\n * 传入内容格式：{ PluginName: PluginFactory }\n */\nfunction createCustomizedMoPlugins(plugins: Record<string, PluginFactory>) {\n  return function createMoPlugins(configs: MoConfig = {}): Plugin[] {\n    const result: Plugin[] = [];\n    sortPlugins<Plugin>(plugins).forEach(({ factory }): void => {\n      const plugin = factory(configs);\n      result.push(plugin);\n    });\n    return result;\n  };\n}\n\nexport default createCustomizedMoPlugins;\n"],"file":"createCustomizedMoPlugins.js"}