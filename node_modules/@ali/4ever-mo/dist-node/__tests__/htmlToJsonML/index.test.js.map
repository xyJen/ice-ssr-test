{"version":3,"sources":["../../../../src/__tests__/htmlToJsonML/index.test.ts"],"names":["expect","extend","toMatchFile","fixturesPath","path","join","__dirname","fixtures","fs","readdirSync","describe","forEach","fixture","fixturePath","endsWith","inputPath","outputPath","configPath","isConfigExists","existsSync","moConfig","JSON","parse","readFileSync","toString","mo","plugins","input","it","jsonML","htmlToJsonML","snapshot","stringify","valueJsonWithoutNormalize","jsonMLToValue","normalize","toJSON","toEqual","strict"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,MAAM,CAACC,MAAP,CAAc;AAAEC,EAAAA,WAAW,EAAXA;AAAF,CAAd;AAEA,MAAMC,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAArB;AACA,MAAMC,QAAQ,GAAGC,EAAE,CAACC,WAAH,CAAeN,YAAf,CAAjB;AAEAO,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCH,EAAAA,QAAQ,CAACI,OAAT,CAAkBC,OAAD,IAAa;AAC5B,UAAMC,WAAW,GAAGT,IAAI,CAACC,IAAL,CAAUF,YAAV,EAAwBS,OAAxB,CAApB,CAD4B,CAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIC,WAAW,CAACC,QAAZ,CAAqB,OAArB,CAAJ,EAAmC;AACnC,UAAMC,SAAS,GAAGX,IAAI,CAACC,IAAL,CAAUQ,WAAV,EAAuB,YAAvB,CAAlB;AACA,UAAMG,UAAU,GAAGZ,IAAI,CAACC,IAAL,CAAUQ,WAAV,EAAuB,aAAvB,CAAnB;AACA,UAAMI,UAAU,GAAGb,IAAI,CAACC,IAAL,CAAUQ,WAAV,EAAuB,aAAvB,CAAnB;AACA,UAAMK,cAAc,GAAGV,EAAE,CAACW,UAAH,CAAcF,UAAd,CAAvB;AACA,QAAIG,QAAJ;;AACA,QAAIF,cAAJ,EAAoB;AAClBE,MAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWd,EAAE,CAACe,YAAH,CAAgBN,UAAhB,EAA4BO,QAA5B,EAAX,CAAX;AACD;;AACD,UAAMC,EAAE,GAAG,uBAAG;AAAEC,MAAAA,OAAO,EAAE,4BAAgBN,QAAhB;AAAX,KAAH,CAAX;AAEA,UAAMO,KAAK,GAAGnB,EAAE,CAACe,YAAH,CAAgBR,SAAhB,EAA2BS,QAA3B,EAAd;AAEAI,IAAAA,EAAE,CAAChB,OAAD,EAAU,MAAM;AAChB;AACA,YAAMiB,MAAM,GAAGJ,EAAE,CAACK,YAAH,CAAgBH,KAAhB,CAAf;AACA,YAAMI,QAAQ,GAAGV,IAAI,CAACW,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAjB;AACA7B,MAAAA,MAAM,CAAC+B,QAAD,CAAN,CAAiB7B,WAAjB,CAA6Bc,UAA7B;AAEA,YAAMiB,yBAAyB,GAAGR,EAAE,CACjCS,aAD+B,CACjBL,MADiB,EACT;AAAEM,QAAAA,SAAS,EAAE;AAAb,OADS,EAE/BC,MAF+B,EAAlC,CANgB,CAUhB;;AACApC,MAAAA,MAAM,CAACyB,EAAE,CAACS,aAAH,CAAiBL,MAAjB,EAAyBO,MAAzB,EAAD,CAAN,CAA0CC,OAA1C,CACEJ,yBADF,EAXgB,CAehB;;AACAjC,MAAAA,MAAM,CAACyB,EAAE,CAACS,aAAH,CAAiBL,MAAjB,EAAyB;AAAES,QAAAA,MAAM,EAAE;AAAV,OAAzB,EAA2CF,MAA3C,EAAD,CAAN,CAA4DC,OAA5D,CACEJ,yBADF;AAGD,KAnBC,CAAF;AAoBD,GA1CD;AA2CD,CA5CO,CAAR","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { toMatchFile } from 'jest-file-snapshot';\nimport { Serializer as Mo, createMoPlugins } from '../../index';\n\nexpect.extend({ toMatchFile });\n\nconst fixturesPath = path.join(__dirname, 'fixtures');\nconst fixtures = fs.readdirSync(fixturesPath);\n\ndescribe('Mo.htmlToJsonML', () => {\n  fixtures.forEach((fixture) => {\n    const fixturePath = path.join(fixturesPath, fixture);\n    // Inline Code灰度过程中，需跳过含有<code>标签的单测，全量后改回\n    // 1.alignment-from-github\n    // 2.code-from-html-jianshu\n    // 3.inlineCode-from-yuque\n    // 4.list-from-ata\n    // 5.list-ul-from-blog\n    // 如果ut文件夹文件夹以_skip结尾，则跳过该单测\n    if (fixturePath.endsWith('_skip')) return;\n    const inputPath = path.join(fixturePath, 'input.html');\n    const outputPath = path.join(fixturePath, 'output.json');\n    const configPath = path.join(fixturePath, 'config.json');\n    const isConfigExists = fs.existsSync(configPath);\n    let moConfig;\n    if (isConfigExists) {\n      moConfig = JSON.parse(fs.readFileSync(configPath).toString());\n    }\n    const mo = Mo({ plugins: createMoPlugins(moConfig) });\n\n    const input = fs.readFileSync(inputPath).toString();\n\n    it(fixture, () => {\n      // Match snapshot\n      const jsonML = mo.htmlToJsonML(input);\n      const snapshot = JSON.stringify(jsonML, null, 2);\n      expect(snapshot).toMatchFile(outputPath);\n\n      const valueJsonWithoutNormalize = mo\n        .jsonMLToValue(jsonML, { normalize: false })\n        .toJSON();\n\n      // Should be normalized.\n      expect(mo.jsonMLToValue(jsonML).toJSON()).toEqual(\n        valueJsonWithoutNormalize,\n      );\n\n      // Should be strictly validated.\n      expect(mo.jsonMLToValue(jsonML, { strict: true }).toJSON()).toEqual(\n        valueJsonWithoutNormalize,\n      );\n    });\n  });\n});\n"],"file":"index.test.js"}