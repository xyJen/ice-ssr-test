{"version":3,"sources":["../../../../../../src/__tests__/valueToJsonML/fixtures/inline-text-with-marks2/input.js"],"names":["Value","create","document","Document","nodes","ascii","hAnsi","cs","eastAsia","map","type","val","Paragraph","Text","leaves","Leaf","text","marks","Mark","data","value"],"mappings":";;;;;;;AAAA;;AACA;;eAEeA,mBAAMC,MAAN,CAAa;AAC1BC,EAAAA,QAAQ,EAAEC,sBAASF,MAAT,CAAgB;AACxBG,IAAAA,KAAK,EAAE,CACL,CAAC,WAAD,EAAc,OAAd,CADK,EAEL,CAAC,OAAD,EAAU,OAAV,CAFK,EAGL,CAAC,WAAD,EAAc,OAAd,CAHK,EAIL,CAAC,WAAD,EAAc,OAAd,CAJK,EAKL,CAAC,IAAD,EAAO,OAAP,CALK,EAML,CACE,OADF,EAEE;AACEC,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE,OAFT;AAGEC,MAAAA,EAAE,EAAE,OAHN;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAFF,CANK,EAeL,CAAC,WAAD,EAAc,EAAd,CAfK,EAgBL,CAAC,OAAD,EAAU,EAAV,CAhBK,EAiBL,CAAC,WAAD,EAAc,EAAd,CAjBK,EAkBL,CAAC,WAAD,EAAc,EAAd,CAlBK,EAmBL,CAAC,IAAD,EAAO,EAAP,CAnBK,EAoBL,CAAC,WAAD,EAAc,KAAd,CApBK,EAqBL,CAAC,OAAD,EAAU,KAAV,CArBK,EAsBL,CAAC,WAAD,EAAc,KAAd,CAtBK,EAuBL,CAAC,WAAD,EAAc,KAAd,CAvBK,EAwBL,CAAC,IAAD,EAAO,KAAP,CAxBK,EAyBLC,GAzBK,CAyBD,CAAC,CAACC,IAAD,EAAOC,GAAP,CAAD,KAAiB;AACrB,aAAOC,+BAAUX,MAAV,CAAiB;AACtBG,QAAAA,KAAK,EAAE,CACLS,kBAAKZ,MAAL,CAAY;AACVa,UAAAA,MAAM,EAAE,CACNC,kBAAKd,MAAL,CAAY;AACVe,YAAAA,IAAI,EAAEN,IADI;AAEVO,YAAAA,KAAK,EAAE,CACLC,kBAAKjB,MAAL,CAAY;AACVS,cAAAA,IADU;AAEVS,cAAAA,IAAI,EAAET,IAAI,KAAK,OAAT,GAAmBC,GAAnB,GAAyB;AAAES,gBAAAA,KAAK,EAAET;AAAT;AAFrB,aAAZ,CADK;AAFG,WAAZ,CADM;AADE,SAAZ,CADK;AADe,OAAjB,CAAP;AAiBD,KA3CM;AADiB,GAAhB;AADgB,CAAb,C","sourcesContent":["import { Document, Leaf, Mark, Text, Value } from '@ali/4ever-cangjie';\nimport{ Paragraph } from '@ali/4ever-plugin-paragraph';\n\nexport default Value.create({\n  document: Document.create({\n    nodes: [\n      ['underline', 'value'],\n      ['color', 'value'],\n      ['highlight', 'value'],\n      ['vertAlign', 'value'],\n      ['sz', 'value'],\n      [\n        'fonts',\n        {\n          ascii: 'value',\n          hAnsi: 'value',\n          cs: 'value',\n          eastAsia: 'value',\n        },\n      ],\n      ['underline', ''],\n      ['color', ''],\n      ['highlight', ''],\n      ['vertAlign', ''],\n      ['sz', ''],\n      ['underline', false],\n      ['color', false],\n      ['highlight', false],\n      ['vertAlign', false],\n      ['sz', false],\n    ].map(([type, val]) => {\n      return Paragraph.create({\n        nodes: [\n          Text.create({\n            leaves: [\n              Leaf.create({\n                text: type,\n                marks: [\n                  Mark.create({\n                    type,\n                    data: type === 'fonts' ? val : { value: val },\n                  }),\n                ],\n              }),\n            ],\n          }),\n        ],\n      });\n    }),\n  }),\n});\n"],"file":"input.js"}