"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var fs = _interopRequireWildcard(require("fs"));

var path = _interopRequireWildcard(require("path"));

var _jestFileSnapshot = require("jest-file-snapshot");

const {
  Mo
} = require("../../../dist/server-mo.production.min.js");

expect.extend({
  toMatchFile: _jestFileSnapshot.toMatchFile
});
const fixturesPath = path.join(__dirname, 'fixtures');
const fixtures = fs.readdirSync(fixturesPath);
describe('Mo.valueToJsonML', () => {
  fixtures.forEach(fixture => {
    it(fixture, () => {
      const fixturePath = path.join(fixturesPath, fixture);
      const inputPath = path.join(fixturePath, 'input.js');
      const outputPath = path.join(fixturePath, 'output.json');
      let value;

      try {
        value = require(inputPath).default;
      } catch (error) {
        console.error('import input error', error);
      }

      if (!value) {
        return;
      }

      const expected = JSON.parse(fs.readFileSync(outputPath).toString());
      const jsonml = Mo.valueToJsonML(value);
      expect(jsonml).toEqual(expected);
      const jsonml2 = Mo.valueToJsonML(Mo.jsonMLToValue(jsonml));
      expect(jsonml).toEqual(jsonml2);
    });
  });
});
//# sourceMappingURL=index.node.test.js.map