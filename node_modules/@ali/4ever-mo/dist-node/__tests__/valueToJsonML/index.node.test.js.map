{"version":3,"sources":["../../../../src/__tests__/valueToJsonML/index.node.test.ts"],"names":["Mo","require","expect","extend","toMatchFile","fixturesPath","path","join","__dirname","fixtures","fs","readdirSync","describe","forEach","fixture","it","fixturePath","inputPath","outputPath","value","default","error","console","expected","JSON","parse","readFileSync","toString","jsonml","valueToJsonML","toEqual","jsonml2","jsonMLToValue"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAASC,OAAO,6CAAtB;;AAEAC,MAAM,CAACC,MAAP,CAAc;AAAEC,EAAAA,WAAW,EAAXA;AAAF,CAAd;AAEA,MAAMC,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAArB;AACA,MAAMC,QAAQ,GAAGC,EAAE,CAACC,WAAH,CAAeN,YAAf,CAAjB;AAEAO,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCH,EAAAA,QAAQ,CAACI,OAAT,CAAkBC,OAAD,IAAa;AAC5BC,IAAAA,EAAE,CAACD,OAAD,EAAU,MAAM;AAChB,YAAME,WAAW,GAAGV,IAAI,CAACC,IAAL,CAAUF,YAAV,EAAwBS,OAAxB,CAApB;AACA,YAAMG,SAAS,GAAGX,IAAI,CAACC,IAAL,CAAUS,WAAV,EAAuB,UAAvB,CAAlB;AACA,YAAME,UAAU,GAAGZ,IAAI,CAACC,IAAL,CAAUS,WAAV,EAAuB,aAAvB,CAAnB;AACA,UAAIG,KAAJ;;AACA,UAAI;AACFA,QAAAA,KAAK,GAAGlB,OAAO,CAACgB,SAAD,CAAP,CAAmBG,OAA3B;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC;AACD;;AAED,UAAI,CAACF,KAAL,EAAY;AAEV;AACD;;AAED,YAAMI,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWf,EAAE,CAACgB,YAAH,CAAgBR,UAAhB,EAA4BS,QAA5B,EAAX,CAAjB;AACA,YAAMC,MAAM,GAAG5B,EAAE,CAAC6B,aAAH,CAAiBV,KAAjB,CAAf;AACAjB,MAAAA,MAAM,CAAC0B,MAAD,CAAN,CAAeE,OAAf,CAAuBP,QAAvB;AAEA,YAAMQ,OAAO,GAAG/B,EAAE,CAAC6B,aAAH,CAAiB7B,EAAE,CAACgC,aAAH,CAAiBJ,MAAjB,CAAjB,CAAhB;AACA1B,MAAAA,MAAM,CAAC0B,MAAD,CAAN,CAAeE,OAAf,CAAuBC,OAAvB;AACD,KAtBC,CAAF;AAuBD,GAxBD;AAyBD,CA1BO,CAAR","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { toMatchFile } from 'jest-file-snapshot';\n\nconst { Mo } = require('../../../dist/server-mo.production.min.js');\n\nexpect.extend({ toMatchFile });\n\nconst fixturesPath = path.join(__dirname, 'fixtures');\nconst fixtures = fs.readdirSync(fixturesPath);\n\ndescribe('Mo.valueToJsonML', () => {\n  fixtures.forEach((fixture) => {\n    it(fixture, () => {\n      const fixturePath = path.join(fixturesPath, fixture);\n      const inputPath = path.join(fixturePath, 'input.js');\n      const outputPath = path.join(fixturePath, 'output.json');\n      let value;\n      try {\n        value = require(inputPath).default;\n      } catch (error) {\n        console.error('import input error', error);\n      }\n\n      if (!value) {\n        console.log(`[test skipped]${fixture}`)\n        return;\n      }\n\n      const expected = JSON.parse(fs.readFileSync(outputPath).toString());\n      const jsonml = Mo.valueToJsonML(value);\n      expect(jsonml).toEqual(expected);\n\n      const jsonml2 = Mo.valueToJsonML(Mo.jsonMLToValue(jsonml));\n      expect(jsonml).toEqual(jsonml2);\n    });\n  });\n});\n"],"file":"index.node.test.js"}