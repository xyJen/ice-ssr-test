"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var fs = _interopRequireWildcard(require("fs"));

var path = _interopRequireWildcard(require("path"));

var _jestFileSnapshot = require("jest-file-snapshot");

var _serializer = _interopRequireDefault(require("../serializer"));

var _helper = require("../helper");

expect.extend({
  toMatchFile: _jestFileSnapshot.toMatchFile
});
const fixturesPath = path.join(__dirname, 'fixtures');
const fixtures = fs.readdirSync(fixturesPath);
describe('Mo.valueToJsonML', () => {
  fixtures.forEach(fixture => {
    it(fixture, () => {
      const fixturePath = path.join(fixturesPath, fixture);
      const inputPath = path.join(fixturePath, 'input.js');
      const outputPath = path.join(fixturePath, 'output.json');
      let value;

      try {
        value = require(inputPath).default;
      } catch (error) {// do nothing;
      }

      const expected = JSON.parse(fs.readFileSync(outputPath).toString());

      const jsonml = _serializer.default.valueToJsonML(value);

      expect(jsonml).toEqual(expected);
      const jsonml2 = (0, _helper.regenerateJsonML)(jsonml);
      expect(jsonml).toEqual(jsonml2);
    });
  });
});
//# sourceMappingURL=index.test.js.map