"use strict";

var _everDevTest = require("@ali/4ever-dev-test");

var _everCangjie = require("@ali/4ever-cangjie");

var _index = require("../index");

/** @jsx jsx */
describe('Mo.markdownToJsonML', () => {
  test('公式', async () => {
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "testAsync",
      data: {
        count: 0
      }
    })));

    const controller = _everCangjie.Controller.create({
      value
    });

    const createMoPlugins = (0, _index.createCustomizedMoPlugins)({
      testAsync: () => {
        return {
          valueToJsonML: {
            match: node => {
              // @ts-ignore
              return node.type === 'testAsync';
            },
            convert: () => {
              throw Error('should not be called');
            },
            asyncConvert: async node => {
              return new Promise(resolve => {
                setTimeout(() => {
                  // @ts-ignore
                  resolve(['testAsync', {
                    count: 1
                  }]);
                }, 50);
              });
            }
          }
        };
      }
    });
    const mo = (0, _index.Serializer)({
      plugins: createMoPlugins()
    });
    const jsonml = await mo.asyncValueToJsonML(controller.value);
    expect(jsonml).toEqual(['root', {}, ['testAsync', {
      count: 1
    }, ['span', {
      'data-type': 'text'
    }, ['span', {
      'data-type': 'leaf'
    }, '']]]]);
  });
});
//# sourceMappingURL=asyncValueToJsonML.test.js.map