{"version":3,"sources":["../../../../src/__tests__/migrations/index.test.ts"],"names":["fixturesPath","path","join","__dirname","migrations","fs","readdirSync","describe","forEach","migration","migrationPath","algs","alg","algPath","downgradeAndUpgrade","downgradeOrUpgrade","test","dest","inputPath","outputPath","default","src","expected","migr","from","to","split","map","n","Number","targetVersion","actual","corrections","onError","e","console","error","expect","toEqual"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,YAAY,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAArB;;AACA,MAAMC,UAAU,GAAGC,YAAGC,WAAH,CAAeN,YAAf,CAAnB;;AAEAO,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BH,EAAAA,UAAU,CAACI,OAAX,CAAoBC,SAAD,IAAe;AAChC,UAAMC,aAAa,GAAGT,cAAKC,IAAL,CAAUF,YAAV,EAAwBS,SAAxB,CAAtB;;AACA,UAAME,IAAI,GAAGN,YAAGC,WAAH,CAAeI,aAAf,CAAb;;AACAC,IAAAA,IAAI,CAACH,OAAL,CAAcI,GAAD,IAAS;AACpB,YAAMC,OAAO,GAAGZ,cAAKC,IAAL,CAAUQ,aAAV,EAAyBE,GAAzB,CAAhB;;AACA,YAAME,mBAAmB,GAAGT,YAAGC,WAAH,CAAeO,OAAf,CAA5B;;AAEAN,MAAAA,QAAQ,CAAE,GAAEE,SAAU,EAAd,EAAiB,MAAM;AAC7BF,QAAAA,QAAQ,CAAE,GAAEK,GAAI,EAAR,EAAW,MAAM;AACvBE,UAAAA,mBAAmB,CAACN,OAApB,CAA6BO,kBAAD,IAAwB;AAClDC,YAAAA,IAAI,CAAE,GAAED,kBAAmB,EAAvB,EAA0B,YAAY;AACxC,oBAAME,IAAI,GAAGhB,cAAKC,IAAL,CAAUW,OAAV,EAAmBE,kBAAnB,CAAb;;AACA,oBAAMG,SAAS,GAAGjB,cAAKC,IAAL,CAAUe,IAAV,EAAgB,YAAhB,CAAlB;;AACA,oBAAME,UAAU,GAAGlB,cAAKC,IAAL,CAAUe,IAAV,EAAgB,aAAhB,CAAnB;;AAEA,oBAAM;AAAEG,gBAAAA,OAAO,EAAEC;AAAX,kBAAmB,yBAAaH,SAAb,gEAAzB;AACA,oBAAM;AAAEE,gBAAAA,OAAO,EAAEE;AAAX,kBAAwB,yBAAaH,UAAb,gEAA9B;AACA,oBAAM;AAAEC,gBAAAA,OAAO,EAAEG;AAAX,kBAAoB,yBACxBtB,cAAKC,IAAL,CAAUC,SAAV,EAAsB,oBAAmBM,SAAU,EAAnD,CADwB,gEAA1B;AAGA,oBAAM,CAACe,IAAD,EAAOC,EAAP,IAAahB,SAAS,CAACiB,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,CAA0BC,CAAD,IAAOC,MAAM,CAACD,CAAD,CAAtC,CAAnB;AACA,oBAAME,aAAa,GACjBf,kBAAkB,KAAK,SAAvB,GAAmCU,EAAnC,GAAwCD,IAD1C;AAGA,oBAAMO,MAAM,GAAG,sBAAQ;AACrBV,gBAAAA,GADqB;AAErBjB,gBAAAA,UAAU,EAAE,CAACmB,IAAD,CAFS;AAGrBS,gBAAAA,WAAW,EAAE,EAHQ;AAIrBF,gBAAAA,aAJqB;AAKrBG,gBAAAA,OAAO,EAAGC,CAAD,IAAO;AACdC,kBAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AAPoB,eAAR,CAAf;AAUAG,cAAAA,MAAM,CAACN,MAAD,CAAN,CAAeO,OAAf,CAAuBhB,QAAvB;AACD,aAzBG,CAAJ;AA0BD,WA3BD;AA4BD,SA7BO,CAAR;AA8BD,OA/BO,CAAR;AAgCD,KApCD;AAqCD,GAxCD;AAyCD,CA1CO,CAAR","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport migrate from '../../migrate';\n\nconst fixturesPath = path.join(__dirname, 'fixtures');\nconst migrations = fs.readdirSync(fixturesPath);\n\ndescribe('migrations', () => {\n  migrations.forEach((migration) => {\n    const migrationPath = path.join(fixturesPath, migration);\n    const algs = fs.readdirSync(migrationPath);\n    algs.forEach((alg) => {\n      const algPath = path.join(migrationPath, alg);\n      const downgradeAndUpgrade = fs.readdirSync(algPath);\n\n      describe(`${migration}`, () => {\n        describe(`${alg}`, () => {\n          downgradeAndUpgrade.forEach((downgradeOrUpgrade) => {\n            test(`${downgradeOrUpgrade}`, async () => {\n              const dest = path.join(algPath, downgradeOrUpgrade);\n              const inputPath = path.join(dest, 'input.json');\n              const outputPath = path.join(dest, 'output.json');\n\n              const { default: src } = await import(inputPath);\n              const { default: expected } = await import(outputPath);\n              const { default: migr } = await import(\n                path.join(__dirname, `../../migrations/${migration}`)\n              );\n              const [from, to] = migration.split('_').map((n) => Number(n));\n              const targetVersion =\n                downgradeOrUpgrade === 'upgrade' ? to : from;\n\n              const actual = migrate({\n                src,\n                migrations: [migr],\n                corrections: [],\n                targetVersion,\n                onError: (e) => {\n                  console.error(e);\n                },\n              });\n\n              expect(actual).toEqual(expected);\n            });\n          });\n        });\n      });\n    });\n  });\n});\n"],"file":"index.test.js"}