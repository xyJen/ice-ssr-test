{"version":3,"sources":["../../../../../../src/__tests__/jsonMLToHTML/fixtures/mention-custom-convert/config.tsx"],"names":["isElement","maybeElem","Array","isArray","isAttributes","maybeAttrs","hasAttributes","getAttributes","elem","config","mention","convert","node","id","name","border","cursor","margin","backgroundColor","color"],"mappings":";;;;;;;;;AACA;;uBAA4B,a;;AAE5B,SAASA,SAAT,CAAmBC,SAAnB,EAAmC;AACjC,SAAQC,KAAK,CAACC,OAAN,CAAcF,SAAd,KAA4B,OAAOA,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAArD,IACF,OAAOA,SAAP,KAAqB,QAD1B;AAED;;AAED,SAASG,YAAT,CAAsBC,UAAtB,EAAuC;AACrC,SAAO,CAAC,CAACA,UAAF,IAAgB,OAAOA,UAAP,KAAsB,QAAtC,IAAkD,CAACH,KAAK,CAACC,OAAN,CAAcE,UAAd,CAA1D;AACD;;AAED,SAASC,aAAT,CAAuBL,SAAvB,EAAyD;AACvD,SAAOD,SAAS,CAACC,SAAD,CAAT,IAAwBG,YAAY,CAACH,SAAS,CAAC,CAAD,CAAV,CAA3C;AACD;;AAED,SAASM,aAAT,CAAuBC,IAAvB,EAAiD;AAC/C,SAAOF,aAAa,CAACE,IAAD,CAAb,GAAsBA,IAAI,CAAC,CAAD,CAA1B,GAAgC,IAAvC;AACD;;AAED,MAAMC,MAAiD,GAAG;AACxDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeP,aAAa,CAACK,IAAD,CAAlC;AACA,0BACE,eAAC,cAAD,CAAO,QAAP,0BACG;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,SAAS,EAAC,gBAFX;AAGC,QAAA,KAAK,EAAE;AACLG,UAAAA,MAAM,EAAE,MADH;AACWC,UAAAA,MAAM,EAAE,SADnB;AAC8BC,UAAAA,MAAM,EAAE,WADtC;AACmDC,UAAAA,eAAe,EAAE,aADpE;AACmFC,UAAAA,KAAK,EAAE;AAD1F,SAHR;AAMC,QAAA,KAAK,EAAEL,IANR;AAOC,uBAAaD;AAPd,QADH,CADF;AAaD;;AAhBM;AAD+C,CAA1D;eAqBeJ,M","sourcesContent":["import { JsonMLToHTMLRule } from '../../../../type';\nimport React from 'react';\n\nfunction isElement(maybeElem: any) {\n  return (Array.isArray(maybeElem) && typeof maybeElem[0] === 'string')\n    || typeof maybeElem === 'string';\n}\n\nfunction isAttributes(maybeAttrs: any) {\n  return !!maybeAttrs && typeof maybeAttrs === 'object' && !Array.isArray(maybeAttrs);\n}\n\nfunction hasAttributes(maybeElem: any): maybeElem is any {\n  return isElement(maybeElem) && isAttributes(maybeElem[1]);\n}\n\nfunction getAttributes(elem: any): object | null {\n  return hasAttributes(elem) ? elem[1] : null;\n}\n\nconst config: Record<string, Partial<JsonMLToHTMLRule>> = {\n  mention: {\n    convert(node) {\n      const { id, name } = getAttributes(node) as { id: string; name: string };\n      return (\n        <React.Fragment>\n          @<input\n            type=\"button\"\n            className=\"js-personInput\"\n            style={{\n              border: 'none', cursor: 'pointer', margin: '0 2px 0 0', backgroundColor: 'transparent', color: '#0284c0',\n            }}\n            value={name}\n            data-emplid={id}\n          />\n        </React.Fragment>\n      );\n    },\n  },\n};\n\nexport default config;\n"],"file":"config.js"}