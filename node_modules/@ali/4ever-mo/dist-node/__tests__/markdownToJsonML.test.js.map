{"version":3,"sources":["../../../src/__tests__/markdownToJsonML.test.ts"],"names":["jest","mock","describe","title","input","expected","color","highlight","subType","metadata","showstk","bgcolor","undefined","forEach","it","jsonml","Mo","markdownToJsonML","expect","toEqual","jsonMLToValue","toJSON","normalize","tagType","id","type","formula","jc"],"mappings":"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","sourcesContent":["jest.mock('uuid/v4', () => () => '123');\nimport Mo from './serializer';\nimport { wrapStringToText } from './helper';\n\ndescribe('Mo.markdownToJsonML', () => {\n  describe('默认情况下', () => {\n    [{\n      title: '空文本返回为空',\n      input: '',\n      expected: [\n        'root',\n      ],\n    }, {\n      title: '一行文本被处理成一个普通段落',\n      input: 'Hello world!',\n      expected: [\n        'root',\n        ['p',\n          ['span', { 'data-type': 'text' },\n            ['span', { 'data-type': 'leaf' }, 'Hello world!'],\n          ],\n        ],\n      ],\n    }, {\n      title: '连续多行文本处理成一个段落',\n      input: 'First line.\\nSecond line.\\nThird line.',\n      expected: [\n        'root',\n        ['p',\n          ['span', { 'data-type': 'text' },\n            ['span', { 'data-type': 'leaf' }, 'First line.\\nSecond line.\\nThird line.'],\n          ],\n        ],\n      ],\n    }, {\n      title: '间隔文本处理成多个段落',\n      input: 'First line.\\n\\nSecond line.',\n      expected: [\n        'root',\n        ['p', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'First line.']]],\n        ['p', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'Second line.']]],\n      ],\n    }, {\n      title: 'IM 换行消息内容',\n      input: 'ABC\\r\\nDEF',\n      expected: [\n        'root',\n        ['p', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'ABC\\nDEF']]],\n      ],\n    }, {\n      title: 'IM 隔行消息内容1',\n      input: 'ABC\\n\\rDEF',\n      expected: [\n        'root',\n        ['p', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'ABC']]],\n        ['p', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'DEF']]],\n      ],\n    }, {\n      title: 'IM 隔行消息内容2',\n      input: 'ABC\\r\\rDEF',\n      expected: [\n        'root',\n        ['p', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'ABC']]],\n        ['p', ['span', { 'data-type': 'text' }, ['span', { 'data-type': 'leaf' }, 'DEF']]],\n      ],\n    }, {\n      title: '高亮文本',\n      input: 'Hello ==world==!',\n      expected: [\n        'root',\n        [\n          'p',\n          ['span', { 'data-type': 'text' },\n            ['span', { 'data-type': 'leaf' }, 'Hello '],\n            ['span', { 'data-type': 'leaf', color: 'black', highlight: '#FFC000' }, 'world'],\n            ['span', { 'data-type': 'leaf' }, '!'],\n          ],\n        ]\n      ],\n    }, {\n      title: 'HTML 代码',\n      input: '<div style=\"color: red\">HTML Tag</div>',\n      expected: [\n        'root',\n        [\n          'p',\n          ['span', { 'data-type': 'text' },\n            ['span', { 'data-type': 'leaf', color: 'red' }, 'HTML Tag'],\n          ],\n        ]\n      ],\n    }, {\n      title: '高亮块 :::',\n      input: ':::\\ntext\\n:::',\n      expected: [\n        'root',\n        [\n          'container',\n          { subType: 'colorBlocks', metadata: { showstk: false, bgcolor: undefined } },\n          ['p', wrapStringToText('text')],\n        ]\n      ],\n    }, {\n      title: '高亮块 ::: warning',\n      input: '::: warning\\ntext\\n:::',\n      expected: [\n        'root',\n        [\n          'container',\n          { subType: 'colorBlocks', metadata: { showstk: false, bgcolor: '#FEF8E8' } },\n          ['p', wrapStringToText('text')],\n        ]\n      ],\n    }, {\n      title: '高亮块 ::: danger',\n      input: '::: danger\\ntext\\n:::',\n      expected: [\n        'root',\n        [\n          'container',\n          { subType: 'colorBlocks', metadata: { showstk: false, bgcolor: '#FEF3F3' } },\n          ['p', wrapStringToText('text')],\n        ]\n      ],\n    }, {\n      title: '高亮块 ::: info',\n      input: '::: info\\ntext\\n:::',\n      expected: [\n        'root',\n        [\n          'container',\n          { subType: 'colorBlocks', metadata: { showstk: false, bgcolor: '#E8F2FE' } },\n          ['p', wrapStringToText('text')],\n        ]\n      ],\n    }, {\n      title: '高亮块 ::: success',\n      input: '::: success\\ntext\\n:::',\n      expected: [\n        'root',\n        [\n          'container',\n          { subType: 'colorBlocks', metadata: { showstk: false, bgcolor: '#ECF9F0' } },\n          ['p', wrapStringToText('text')],\n        ]\n      ],\n    }, {\n      title: '高亮块 ::: tips',\n      input: '::: tips\\ntext\\n:::',\n      expected: [\n        'root',\n        [\n          'container',\n          { subType: 'colorBlocks', metadata: { showstk: false, bgcolor: '#F5F6F7' } },\n          ['p', wrapStringToText('text')],\n        ]\n      ],\n    },\n    /** makrdown 依赖 dynamic import，先注释 */ \n    //{\n    //  title: 'emoji :person_frowning:',\n    //  input: ':person_frowning:',\n    //  expected: [\n    //    'root',\n    //    ['p', wrapStringToText('\\ud83d\\ude4d')],\n    //  ],\n    //}\n  ].forEach(({ title, input, expected }) => {\n      it(title, async () => {\n        const jsonml = await Mo.markdownToJsonML(input);\n        expect(jsonml).toEqual(expected);\n\n        expect(Mo.jsonMLToValue(jsonml).toJSON())\n          .toEqual(Mo.jsonMLToValue(jsonml, { normalize: false }).toJSON());\n      });\n    });\n  });\n\n  describe('公式', () => {\n    [{\n      input: '$1+1=2$',\n      expected: [\n        'p',\n        [\n          'tag',\n          { tagType: 'hetu', metadata: { id: '123', type: 'application/x-alidocs-plugin-formula', formula: '1+1=2' } },\n          wrapStringToText('')\n        ],\n      ],\n    }, {\n      input: '$$1+1=2$$',\n      expected: [\n        'p',\n        { jc: 'center' },\n        wrapStringToText(''),\n        [\n          'tag',\n          { tagType: 'hetu', metadata: { id: '123', type: 'application/x-alidocs-plugin-formula', formula: '1+1=2' } },\n          wrapStringToText(''),\n        ],\n        wrapStringToText(''),\n      ],\n    }].forEach(({ input, expected }) => {\n      it(input, async () => {\n        const jsonml = await Mo.markdownToJsonML(input);\n        expect(jsonml).toEqual(['root', expected]);\n      });\n    });\n  });\n});\n"],"file":"markdownToJsonML.test.js"}