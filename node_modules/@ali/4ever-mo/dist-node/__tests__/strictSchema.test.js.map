{"version":3,"sources":["../../../src/__tests__/strictSchema.test.tsx"],"names":["describe","test","value","plugins","schema","strictSchema","controller","Controller","create","cell","document","findDescendant","TableCell","isTableCell","expect","nodes","length","toBe","type","text"],"mappings":";;;;AACA;;AACA;;AACA;;AACA;;AAJA;WAUQ,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE,mCADF,EAEE;AAAQ,EAAA,IAAI,EAAC;AAAb,EAFF,EAGE,mCAHF,CADF,CADF,CADF,CADF,C;;YAuBA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAO,EAAA,IAAI,EAAC;AAAZ,gBADF,EAEE,mCAFF,EAGE;AAAQ,EAAA,IAAI,EAAC;AAAb,EAHF,EAIE,mCAJF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,gBALF,CADF,CADF,CADF,CADF,C;;AA3BRA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCA,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnCC,IAAAA,IAAI,CAAC,wCAAD,EAA2C,MAAM;AACnD,YAAMC,KAAK,OAAX;AAeA,YAAMC,OAAO,GAAG,CAAC;AAAEC,QAAAA,MAAM,EAAEC;AAAV,OAAD,CAAhB;;AACA,YAAMC,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AAAEN,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAlB,CAAnB;;AACA,YAAMM,IAAI,GAAGH,UAAU,CAACJ,KAAX,CAAiBQ,QAAjB,CAA0BC,cAA1B,CAAyCC,2BAAUC,WAAnD,CAAb;AACAC,MAAAA,MAAM,CAACL,IAAI,CAACM,KAAL,CAAWC,MAAZ,CAAN,CAA0BC,IAA1B,CAA+B,CAA/B;AACAH,MAAAA,MAAM,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcG,IAAf,CAAN,CAA2BD,IAA3B,CAAgC,WAAhC;AACD,KArBG,CAAJ;AAuBAhB,IAAAA,IAAI,CAAC,kDAAD,EAAqD,MAAM;AAC7D,YAAMC,KAAK,QAAX;AAiBA,YAAMC,OAAO,GAAG,CAAC;AAAEC,QAAAA,MAAM,EAAEC;AAAV,OAAD,CAAhB;;AACA,YAAMC,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AAAEN,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAlB,CAAnB;;AACA,YAAMM,IAAI,GAAGH,UAAU,CAACJ,KAAX,CAAiBQ,QAAjB,CAA0BC,cAA1B,CAAyCC,2BAAUC,WAAnD,CAAb;AACAC,MAAAA,MAAM,CAACL,IAAI,CAACM,KAAL,CAAWC,MAAZ,CAAN,CAA0BC,IAA1B,CAA+B,CAA/B;AACAH,MAAAA,MAAM,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcI,IAAf,CAAN,CAA2BF,IAA3B,CAAgC,YAAhC;AACAH,MAAAA,MAAM,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcI,IAAf,CAAN,CAA2BF,IAA3B,CAAgC,YAAhC;AACD,KAxBG,CAAJ;AAyBD,GAjDO,CAAR;AAkDD,CAnDO,CAAR","sourcesContent":["/** @jsx jsx */\nimport { Controller, Value } from '@ali/4ever-cangjie';\nimport { jsx } from '@ali/4ever-dev-test';\nimport strictSchema from '../strictSchema';\nimport { TableCell } from '@ali/4ever-plugin-table';\n\ndescribe('Mo.strictSchema', () => {\n  describe('Table.strictSchema', () => {\n    test('tableCell contains invalid child nodes', () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"table\">\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <text />\n                  <inline type=\"tag\" />\n                  <text />\n                </block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const plugins = [{ schema: strictSchema }];\n      const controller = Controller.create({ value, plugins });\n      const cell = controller.value.document.findDescendant(TableCell.isTableCell) as TableCell;\n      expect(cell.nodes.length).toBe(1);\n      expect(cell.nodes[0].type).toBe('paragraph');\n    });\n\n    test('tableCell contains valid and invalid child nodes', () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"table\">\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <block type=\"paragraph\">paragraph0</block>\n                  <text />\n                  <inline type=\"tag\" />\n                  <text />\n                  <block type=\"paragraph\">paragraph1</block>\n                </block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const plugins = [{ schema: strictSchema }];\n      const controller = Controller.create({ value, plugins });\n      const cell = controller.value.document.findDescendant(TableCell.isTableCell) as TableCell;\n      expect(cell.nodes.length).toBe(2);\n      expect(cell.nodes[0].text).toBe('paragraph0');\n      expect(cell.nodes[1].text).toBe('paragraph1');\n    });\n  });\n});\n"],"file":"strictSchema.test.js"}