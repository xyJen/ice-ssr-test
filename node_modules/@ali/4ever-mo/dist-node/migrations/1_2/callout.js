"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

var _fastDeepEqual = _interopRequireDefault(require("fast-deep-equal"));

var _everPluginColorBlocks = require("@ali/4ever-plugin-color-blocks");

var _everPluginHeading = require("@ali/4ever-plugin-heading");

/*         New Callout                             Old Callout        
 * ┌─────────────────────┐                    ┌─────────────────────┐
 * │    Introduction     │                    │    Introduction     │
 * └─────────────────────┘                    └─────────────────────┘
 * ┌─────────────────────┐                                           
 * │Callout              │                                           
 * │  ┌──────────────┐   │                    ┌─────────────────────┐
 * │  │   Commands   │   │                    │      Commands       │
 * │  └──────────────┘   │   ────flatten───▶  └─────────────────────┘
 * │  ┌──────────────┐   │                    ┌─────────────────────┐
 * │  │  Operations  │   │                    │     Operations      │
 * │  └──────────────┘   │   ◀────wrap─────── └─────────────────────┘
 * │  ┌──────────────┐   │                    ┌─────────────────────┐
 * │  │   Plugins    │   │                    │       Plugins       │
 * │  └──────────────┘   │                    └─────────────────────┘
 * └─────────────────────┘                                           
 * ┌─────────────────────┐                    ┌─────────────────────┐
 * │ Powered By Cangjie  │                    │ Powered By Cangjie  │
 * └─────────────────────┘                    └─────────────────────┘
 */
const callout = {
  upgrade: document => {
    let newDocument = document; // 1. 获得所有老高亮块

    const callouts = [];
    const len = document.nodes.length;
    let i = 0;

    while (i < len) {
      const first = document.nodes[i];

      if (_everPluginHeading.Heading.isCallout(first)) {
        const blocks = [first];
        callouts.push(blocks);
        let j = i + 1;

        while (j < len) {
          const next = document.nodes[j];

          if (_everPluginHeading.Heading.isCallout(next) && (0, _fastDeepEqual.default)(next.data.calloutPr, first.data.calloutPr)) {
            blocks.push(next);
            j++;
          } else {
            break;
          }
        }

        i = j;
      } else {
        i++;
      }
    } // 2. 转换高亮块为新的高两块


    callouts.forEach(blocks => {
      const start = blocks[0];
      const prevAttrs = start.data?.calloutPr;
      const {
        backgroundColor: bgcolor,
        stickerCode: sticker
      } = prevAttrs || {}; // 创建高亮块容器

      const colorBlock = _everPluginColorBlocks.ColorBlocks.createColorBlocks({
        bgcolor,
        sticker,
        showstk: true
      }, []); // 在原高亮块位置插入新高亮块


      const startPath = newDocument.getPath(start.key);
      newDocument = newDocument.insertNode(startPath, colorBlock); // 将旧高亮块内容移动到新高亮块

      const colorBlockPath = newDocument.getPath(colorBlock.key);
      blocks.reverse().forEach(block => {
        const from = newDocument.getPath(block.key);

        const to = _everCangjie.Path.link(colorBlockPath, [0]);

        newDocument = newDocument.moveNode(from, to);
      }); // 删除 callout 标记，避免再被识别为高亮块

      blocks.forEach(block => {
        const path = newDocument.getPath(block.key);

        if (block.data?.calloutPr) {
          const data = { ...block.data
          };
          delete data.calloutPr;
          newDocument = newDocument.setNode(path, {
            data
          });
        }
      });
    });
    return newDocument;
  },
  downgrade: document => document
};
var _default = callout;
exports.default = _default;
//# sourceMappingURL=callout.js.map