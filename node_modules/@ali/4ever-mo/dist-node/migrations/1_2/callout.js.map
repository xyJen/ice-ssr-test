{"version":3,"sources":["../../../../src/migrations/1_2/callout.ts"],"names":["callout","upgrade","document","newDocument","callouts","len","nodes","length","i","first","Heading","isCallout","blocks","push","j","next","data","calloutPr","forEach","start","prevAttrs","backgroundColor","bgcolor","stickerCode","sticker","colorBlock","ColorBlocks","createColorBlocks","showstk","startPath","getPath","key","insertNode","colorBlockPath","reverse","block","from","to","Path","link","moveNode","path","setNode","downgrade"],"mappings":"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","sourcesContent":["import { Block, Document, Path } from '@ali/4ever-cangjie';\nimport equal from 'fast-deep-equal';\nimport type { MoInterfaces } from '@ali/4ever-cangjie';\nimport { ColorBlocks } from '@ali/4ever-plugin-color-blocks';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { MigrateAlg } from '../../type';\n\n/*         New Callout                             Old Callout        \n * ┌─────────────────────┐                    ┌─────────────────────┐\n * │    Introduction     │                    │    Introduction     │\n * └─────────────────────┘                    └─────────────────────┘\n * ┌─────────────────────┐                                           \n * │Callout              │                                           \n * │  ┌──────────────┐   │                    ┌─────────────────────┐\n * │  │   Commands   │   │                    │      Commands       │\n * │  └──────────────┘   │   ────flatten───▶  └─────────────────────┘\n * │  ┌──────────────┐   │                    ┌─────────────────────┐\n * │  │  Operations  │   │                    │     Operations      │\n * │  └──────────────┘   │   ◀────wrap─────── └─────────────────────┘\n * │  ┌──────────────┐   │                    ┌─────────────────────┐\n * │  │   Plugins    │   │                    │       Plugins       │\n * │  └──────────────┘   │                    └─────────────────────┘\n * └─────────────────────┘                                           \n * ┌─────────────────────┐                    ┌─────────────────────┐\n * │ Powered By Cangjie  │                    │ Powered By Cangjie  │\n * └─────────────────────┘                    └─────────────────────┘\n */                                                                  \nconst callout: MigrateAlg = {\n  upgrade: (document: Document) => {\n    let newDocument = document;\n\n    // 1. 获得所有老高亮块\n    const callouts: Block[][] = [];\n    const len = document.nodes.length;\n    let i = 0;\n    while (i < len) {\n      const first = document.nodes[i];\n      if (Heading.isCallout(first)) {\n        const blocks = [first];\n        callouts.push(blocks);\n        let j = i + 1;\n        while (j < len) {\n          const next = document.nodes[j];\n          if (\n            Heading.isCallout(next) &&\n            equal(next.data.calloutPr, first.data.calloutPr)\n          ) {\n            blocks.push(next);\n            j++;\n          } else {\n            break;\n          }\n        }\n        i = j;\n      } else {\n        i++;\n      }\n    }\n\n    // 2. 转换高亮块为新的高两块\n    callouts.forEach((blocks) => {\n      const start = blocks[0];\n      const prevAttrs = start.data?.calloutPr as MoInterfaces.CalloutPr.CalloutPr | undefined;\n      const { backgroundColor: bgcolor, stickerCode: sticker } =\n        prevAttrs || {};\n      // 创建高亮块容器\n      const colorBlock = ColorBlocks.createColorBlocks(\n        {\n          bgcolor,\n          sticker,\n          showstk: true,\n        },\n        [],\n      );\n      // 在原高亮块位置插入新高亮块\n      const startPath = newDocument.getPath(start.key)!;\n      newDocument = newDocument.insertNode(startPath, colorBlock);\n\n      // 将旧高亮块内容移动到新高亮块\n      const colorBlockPath = newDocument.getPath(colorBlock.key)!;\n      blocks.reverse().forEach((block) => {\n        const from = newDocument.getPath(block.key)!;\n        const to = Path.link(colorBlockPath, [0]);\n        newDocument = newDocument.moveNode(from, to);\n      });\n\n      // 删除 callout 标记，避免再被识别为高亮块\n      blocks.forEach((block) => {\n        const path = newDocument.getPath(block.key)!;\n        if (block.data?.calloutPr) {\n          const data = { ...block.data };\n          delete data.calloutPr;\n          newDocument = newDocument.setNode(path, {\n            data,\n          });\n        }\n      });\n    });\n\n    return newDocument;\n  },\n  downgrade: (document: Document) => document,\n};\n\nexport default callout;\n"],"file":"callout.js"}