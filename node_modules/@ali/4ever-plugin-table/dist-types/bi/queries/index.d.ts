import { ConvertToPluginQueries } from '@ali/4ever-cangjie';
import canInsertTable from './canInsertTable';
import getAllRowsHeight from './getAllRowsHeight';
import getAllRowsDomRect from './getAllRowsDomRect';
import getAllRowsNodes from './getAllRowsNodes';
import getSelectionFromTableSelection from './getSelectionFromTableSelection';
import getRowsHeight from './getRowsHeight';
import hasTableSelection from './hasTableSelection';
import isAllSelectedCellsComplete from './isAllSelectedCellsComplete';
import isSelectionSupportMerge from './isSelectionSupportMerge';
import isSelectionSupportSplit from './isSelectionSupportSplit';
import isSelectWholeCol from './isSelectWholeCol';
import isSelectWholeRow from './isSelectWholeRow';
import isSelectWholeTable from './isSelectWholeTable';
import isTableFromSameOrigin from './isTableFromSameOrigin';
import isTableSupportResize from './isTableSupportResize';
import tableSelection from './tableSelection';
import viewTableSelections from './viewTableSelections';
import getLeftToolbarOffset from './getLeftToolbarOffset';
import getRowIndexByClientY from './getRowIndexByClientY';
import shouldSelectAll from './shouldSelectAll';
import isHideDragButton from './isHideDragButton';
import { isSelectionInTable } from './isSelectionInTable';
import { isSelectionInTableCell } from './isSelectionInTableCell';
import { isSelectionInTableEdge } from './isSelectionInTableEdge';
import { getSelectionTheme as getTableSelectionTheme } from './getSelectionTheme';
import disableLeftToolbar from './disableLeftToolbar';
import calcTableSelectionPos from './calcTableSelectionPos';
import { getTableConstants } from '../../common/queries/getTableConstants';
declare const queries: {
    calcMinTableColWidth: typeof import("../../common/queries/calcMinTableColWidth").default;
    calcTableSelectionPos: typeof calcTableSelectionPos;
    canInsertTable: typeof canInsertTable;
    getAllRowsDomRect: typeof getAllRowsDomRect;
    getAllRowsHeight: typeof getAllRowsHeight;
    getAllRowsNodes: typeof getAllRowsNodes;
    getSelectionFromTableSelection: typeof getSelectionFromTableSelection;
    getTableSelection: (controller: import("@ali/4ever-cangjie").Controller) => import("../types").ITableSelection | null;
    getRowsHeight: typeof getRowsHeight;
    hasTableSelection: typeof hasTableSelection;
    isAllSelectedCellsComplete: typeof isAllSelectedCellsComplete;
    isPureTableSelection: (controller: import("@ali/4ever-cangjie").Controller) => boolean;
    isHideSelection: import("@ali/4ever-cangjie").isHideSelectionQuery;
    isSelectionSupportMerge: typeof isSelectionSupportMerge;
    isSelectionSupportSplit: typeof isSelectionSupportSplit;
    isSelectWholeCol: typeof isSelectWholeCol;
    isSelectWholeRow: typeof isSelectWholeRow;
    isSelectWholeTable: typeof isSelectWholeTable;
    isSelectionInTable: typeof isSelectionInTable;
    isSelectionInTableCell: typeof isSelectionInTableCell;
    isSelectionInTableEdge: typeof isSelectionInTableEdge;
    isTableFromSameOrigin: typeof isTableFromSameOrigin;
    isTableSupportResize: typeof isTableSupportResize;
    tableSelection: typeof tableSelection;
    viewTableSelections: typeof viewTableSelections;
    getLeftToolbarOffset: typeof getLeftToolbarOffset;
    getLeftToolbarOffsetWithFocus: typeof getLeftToolbarOffset;
    getRowIndexByClientY: typeof getRowIndexByClientY;
    getSelectionContainers: typeof import("../../common/queries/getSelectionContainers").default;
    shouldSelectAll: typeof shouldSelectAll;
    isNodeInTable: typeof import("../../common/queries/isNodeInTable").default;
    isTableNode: typeof import("../../common/queries/isTableNode").isTableNode;
    isHideDragButton: typeof isHideDragButton;
    disableLeftToolbar: typeof disableLeftToolbar;
    isTable: typeof import("../../common/queries/isTable").isTable;
    isTableRow: typeof import("../../common/queries/isTableRow").isTableRow;
    isTableCell: typeof import("../../common/queries/isTableCell").isTableCell;
    getTableSelectionTheme: typeof getTableSelectionTheme;
    getTableConstants: typeof getTableConstants;
};
export default queries;
declare module '@ali/4ever-cangjie' {
    /** ConvertToPluginQueries 不支持多个插件声明同一个 query，若是相同的 func 类型，先 omit */
    interface PluginQueries extends ConvertToPluginQueries<Omit<typeof queries, 'shouldSelectAll'>> {
    }
}
