import * as React from 'react';
import { Controller } from '@ali/4ever-cangjie';
import { ISelectedIndexRange, ITableSelection, TableLocale } from '../types';
import Table from '../../mo/models';
export interface TableColToolbarProps {
    table: Table;
    controller: Controller;
    tableRef: React.RefObject<HTMLTableElement>;
    positionedAncestorRef: React.RefObject<HTMLDivElement>;
    scrollContainer: React.RefObject<HTMLDivElement>;
    zoomContainer: HTMLDivElement;
    colIndicatorRef: React.RefObject<HTMLTableElement>;
    isTableSelected: boolean;
    selection: ITableSelection | null;
    scale: number;
    getLastActiveTableKey: () => string | null;
    onContextMenu: (event: any) => void;
    onSelect: (selectedColRange: ISelectedIndexRange, shouldHideContextMenu?: boolean) => void;
    onShortcutEvent: () => void;
    onColResize: (resizeColIndex: number, delta: number) => void;
    onGetAllColsNodes: (colsNodes: HTMLDivElement[]) => void;
    setIsHighlightSelection: (isHighlight: boolean) => void;
    hoverSelection: ITableSelection | null;
    setHoverSelection: (selection: ITableSelection | null) => void;
    isHideDeleteButton?: boolean;
    isHoverCornerToolbar: boolean;
    locale?: TableLocale;
}
export interface TableRowToolbarProps {
    table: Table;
    isSelected: boolean;
    controller: Controller;
    zoomContainer: HTMLDivElement;
    scale: number;
    tableRef: React.RefObject<HTMLTableElement>;
    offsetParentRef: React.RefObject<HTMLDivElement>;
    realTableWrapperRef: React.RefObject<HTMLDivElement>;
    rowIndicatorRef: React.RefObject<HTMLTableElement>;
    isSelectWholeTable: boolean;
    selection: ITableSelection | null;
    scrollableContainer: Window | HTMLElement | null;
    onContextMenu: (event: any) => void;
    onSelect: (selectedIndexRange: ISelectedIndexRange, shouldHideContextMenu?: boolean) => void;
    onRowResize: (resizeColIndex: number, delta: number) => void;
    setIsHighlightSelection: (isHighlight: boolean) => void;
    hoverSelection: ITableSelection | null;
    setHoverSelection: (selection: ITableSelection | null) => void;
    getLastActiveTableKey: () => string | null;
    isHideDeleteButton?: boolean;
    locale?: TableLocale;
    isHoverCornerToolbar: boolean;
}
export default function createToolbarWithTableSeletion(Comp: React.FC<TableColToolbarProps> | React.FC<TableRowToolbarProps>): (props: any) => JSX.Element;
