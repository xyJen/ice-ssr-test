import { setTableMinColsWidthData, adjustColsWidth, isTableSetTableMinColsWidthDataAction, isTableAdjustColsWidthAction } from '../../utils/actions';
import { clickTableToolbar, isTableClickTableToolbarAction } from './clickTableToolbar';
import { deleteTable, isTableDeleteTableAction } from './deleteTable';
import { deleteTableCols, isTableDeleteColsAction } from './deleteTableCols';
import { deleteTableRows, isTableDeleteRowsAction } from './deleteTableRows';
import { emptyTableSelection, isTableEmptySelectionAction } from './emptyTableSelection';
import { insertTableRowBySelections, isTableInsertRowBySelectionsAction } from './inserTableRowsBySelections';
import { insertTable, isTableInsertTableAction } from './insertTable';
import { insertTableCol, isTableInsertColAction } from './insertTableCol';
import { insertTableRow, isTableInsertRowAction } from './insertTableRow';
import { mergeTableCells, isTableMergeCellsAction } from './mergeTableCells';
import { moveTableCols, isTableMoveColsAction } from './moveTableCols';
import { moveTableRows, isTableMoveRowsAction } from './moveTableRows';
import { removeTableColHeader, isTableRemoveTableColHeaderAction } from './removeTableColHeader';
import { removeTableRowHeader, isTableRemoveTableRowHeaderAction } from './removeTableRowHeader';
import { resizeTableColWidth, isTableResizeTableColWidthAction } from './resizeTableColWidth';
import { resizeTableHeight, isTableResizeTableHeightAction } from './resizeTableHeight';
import { resizeTableWidth, isTableResizeTableWidthAction } from './resizeTableWidth';
import { resizeTableWidthFitContainer, isTableResizeTableWidthFitContainerAction } from './resizeTableWidthFitContainer';
import { scrollTable, isTableScrollTableAction } from './scrollTable';
import { selectTable, isTableSelectTableAction } from './selectTable';
import { selectTableCols, isTableSelectTableColsAction } from './selectTableCols';
import { selectTableRows, isTableSelectTableRowsAction } from './selectTableRows';
import { selectTableSelection, isTableSelectTableSelectionAction } from './selectTableSelection';
import { setTableAutofitWidthDisable, isTableSetTableAutofitWidthDisableAction } from './setTableAutofitWidthDisable';
import { setTableAutofitWidthEnable, isTablesetTableAutofitWidthEnableAction } from './setTableAutofitWidthEnable';
import { setTableBorder, isTableSetTableBorderAction } from './setTableBorder';
import { setTableCellFill, isTableSetTableCellFillAction } from './setTableCellFill';
import { setTableCellVAlign, isTableSetTableCellVAlignAction } from './setTableCellVAlign';
import { setTableColHeader, isTableSetTableColHeaderAction } from './setTableColHeader';
import { setTableRowHeader, isTableSetTableRowHeaderAction } from './setTableRowHeader';
import { setTableRowHeight, isTableSetTableRowHeightAction } from './setTableRowHeight';
import { splitTableCell, isTableSplitTableCellAction } from './splitTableCell';
import { tableBlur, isTableBlurAction } from './tableBlur';
export { setTableMinColsWidthData, adjustColsWidth, clickTableToolbar, deleteTable, deleteTableCols, deleteTableRows, emptyTableSelection, insertTableRowBySelections, insertTable, insertTableCol, insertTableRow, mergeTableCells, moveTableCols, moveTableRows, removeTableColHeader, removeTableRowHeader, resizeTableColWidth, resizeTableHeight, resizeTableWidth, resizeTableWidthFitContainer, scrollTable, selectTable, selectTableCols, selectTableRows, selectTableSelection, setTableAutofitWidthDisable, setTableAutofitWidthEnable, setTableBorder, setTableCellFill, setTableCellVAlign, setTableColHeader, setTableRowHeader, setTableRowHeight, splitTableCell, tableBlur, };
export declare const actions: {
    setTableMinColsWidthData: typeof setTableMinColsWidthData;
    adjustColsWidth: typeof adjustColsWidth;
    clickTableToolbar: typeof clickTableToolbar;
    deleteTable: typeof deleteTable;
    deleteTableCols: typeof deleteTableCols;
    deleteTableRows: typeof deleteTableRows;
    emptyTableSelection: typeof emptyTableSelection;
    insertTableRowBySelections: typeof insertTableRowBySelections;
    insertTable: typeof insertTable;
    insertTableCol: typeof insertTableCol;
    insertTableRow: typeof insertTableRow;
    mergeTableCells: typeof mergeTableCells;
    moveTableCols: typeof moveTableCols;
    moveTableRows: typeof moveTableRows;
    removeTableColHeader: typeof removeTableColHeader;
    removeTableRowHeader: typeof removeTableRowHeader;
    resizeTableColWidth: typeof resizeTableColWidth;
    resizeTableHeight: typeof resizeTableHeight;
    resizeTableWidth: typeof resizeTableWidth;
    resizeTableWidthFitContainer: typeof resizeTableWidthFitContainer;
    scrollTable: typeof scrollTable;
    selectTable: typeof selectTable;
    selectTableCols: typeof selectTableCols;
    selectTableRows: typeof selectTableRows;
    selectTableSelection: typeof selectTableSelection;
    setTableAutofitWidthDisable: typeof setTableAutofitWidthDisable;
    setTableAutofitWidthEnable: typeof setTableAutofitWidthEnable;
    setTableBorder: typeof setTableBorder;
    setTableCellFill: typeof setTableCellFill;
    setTableCellVAlign: typeof setTableCellVAlign;
    setTableColHeader: typeof setTableColHeader;
    setTableRowHeader: typeof setTableRowHeader;
    setTableRowHeight: typeof setTableRowHeight;
    splitTableCell: typeof splitTableCell;
    tableBlur: typeof tableBlur;
};
export declare const isActions: {
    isTableSetTableMinColsWidthDataAction: typeof isTableSetTableMinColsWidthDataAction;
    isTableAdjustColsWidthAction: typeof isTableAdjustColsWidthAction;
    isTableClickTableToolbarAction: typeof isTableClickTableToolbarAction;
    isTableDeleteTableAction: typeof isTableDeleteTableAction;
    isTableDeleteColsAction: typeof isTableDeleteColsAction;
    isTableDeleteRowsAction: typeof isTableDeleteRowsAction;
    isTableEmptySelectionAction: typeof isTableEmptySelectionAction;
    isTableInsertRowBySelectionsAction: typeof isTableInsertRowBySelectionsAction;
    isTableInsertTableAction: typeof isTableInsertTableAction;
    isTableInsertColAction: typeof isTableInsertColAction;
    isTableInsertRowAction: typeof isTableInsertRowAction;
    isTableMergeCellsAction: typeof isTableMergeCellsAction;
    isTableMoveColsAction: typeof isTableMoveColsAction;
    isTableMoveRowsAction: typeof isTableMoveRowsAction;
    isTableRemoveTableColHeaderAction: typeof isTableRemoveTableColHeaderAction;
    isTableRemoveTableRowHeaderAction: typeof isTableRemoveTableRowHeaderAction;
    isTableResizeTableColWidthAction: typeof isTableResizeTableColWidthAction;
    isTableResizeTableHeightAction: typeof isTableResizeTableHeightAction;
    isTableResizeTableWidthAction: typeof isTableResizeTableWidthAction;
    isTableResizeTableWidthFitContainerAction: typeof isTableResizeTableWidthFitContainerAction;
    isTableScrollTableAction: typeof isTableScrollTableAction;
    isTableSelectTableAction: typeof isTableSelectTableAction;
    isTableSelectTableColsAction: typeof isTableSelectTableColsAction;
    isTableSelectTableRowsAction: typeof isTableSelectTableRowsAction;
    isTableSelectTableSelectionAction: typeof isTableSelectTableSelectionAction;
    isTableSetTableAutofitWidthDisableAction: typeof isTableSetTableAutofitWidthDisableAction;
    isTablesetTableAutofitWidthEnableAction: typeof isTablesetTableAutofitWidthEnableAction;
    isTableSetTableBorderAction: typeof isTableSetTableBorderAction;
    isTableSetTableCellFillAction: typeof isTableSetTableCellFillAction;
    isTableSetTableCellVAlignAction: typeof isTableSetTableCellVAlignAction;
    isTableSetTableColHeaderAction: typeof isTableSetTableColHeaderAction;
    isTableSetTableRowHeaderAction: typeof isTableSetTableRowHeaderAction;
    isTableSetTableRowHeightAction: typeof isTableSetTableRowHeightAction;
    isTableSplitTableCellAction: typeof isTableSplitTableCellAction;
    isTableBlurAction: typeof isTableBlurAction;
};
export declare const actionTypes: {
    TABLE_ADJUST_COLS_WIDTH: symbol;
    TABLE_SET_MIN_COLS_WIDTH_DATA: symbol;
    TABLE_BLUR: symbol;
    TABLE_CLICK_TOOLBAR: symbol;
    TABLE_DELETE_COLS: symbol;
    TABLE_DELETE_ROWS: symbol;
    TABLE_DELETE_TABLE: symbol;
    TABLE_DISABLE_AUTOFIT_WIDTH: symbol;
    TABLE_EMPTY_SELECTION: symbol;
    TABLE_ENABLE_AUTOFIT_WIDTH: symbol;
    TABLE_INSERT_COL: symbol;
    TABLE_INSERT_ROW: symbol;
    TABLE_INSERT_ROW_BY_SELECTIONS: symbol;
    TABLE_INSERT_TABLE: symbol;
    TABLE_MERGE_CELLS: symbol;
    TABLE_MOVE_COLS: symbol;
    TABLE_MOVE_ROWS: symbol;
    TABLE_REMOVE_COL_HEADER: symbol;
    TABLE_REMOVE_ROW_HEADER: symbol;
    TABLE_RESIZE_COL_WIDTH: symbol;
    TABLE_RESIZE_HEIGHT: symbol;
    TABLE_RESIZE_WIDTH: symbol;
    TABLE_RESIZE_WIDTH_FIT_CONTAINER: symbol;
    TABLE_SCROLL: symbol;
    TABLE_SELECT_COLS: symbol;
    TABLE_SELECT_ROWS: symbol;
    TABLE_SELECT_SELECTIONS: symbol;
    TABLE_SELECT_TABLE: symbol;
    TABLE_SET_BORDER: symbol;
    TABLE_SET_CELL_FILL: symbol;
    TABLE_SET_CELL_VALIGN: symbol;
    TABLE_SET_COL_HEADER: symbol;
    TABLE_SET_ROW_HEADER: symbol;
    TABLE_SET_ROW_HEIGHT: symbol;
    TABLE_SPLIT_CELL: symbol;
};
