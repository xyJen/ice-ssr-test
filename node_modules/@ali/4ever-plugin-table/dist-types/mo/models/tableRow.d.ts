import { Block, BlockChildren } from '@ali/4ever-cangjie';
import type { MoInterfaces } from '@ali/4ever-cangjie';
import TableCell from './tableCell';
interface TableRowData {
    readonly h?: number;
    readonly bdr?: MoInterfaces.TableBorder.default;
    isTblHeader?: boolean;
}
declare type TableRowChildren = TableCell[];
interface TableRowProperties<D = TableRowData, N extends BlockChildren = TableRowChildren> {
    data?: D;
    nodes?: N;
}
export default class TableRow extends Block<TableRowData, TableRowChildren> {
    static TYPE: string;
    static create<SD = TableRowData, SN extends BlockChildren = TableRowChildren>(properties: TableRow | TableRowProperties<SD, SN> | string): Block<SD, SN>;
    static isTableRow(maybeTableRow: any): maybeTableRow is TableRow;
    static isHeader(row: TableRow): boolean;
    static shouldSticky(row: TableRow): boolean;
}
export {};
