{"version":3,"sources":["../../../src/components/tableContextContainer.tsx"],"names":["React","useZoom","useScrollableContainer","TableRow","RowIsStickyContext","ScrollableContainerRect","useResizeObserver","TableContextContainer","props","controller","table","enableHeaderSticky","children","scale","scrollContainer","useState","top","scrollContainerRect","setScrollContainerRect","firstRow","nodes","shouldSticky","updateScrollContainerTop","useCallback","rect","actualTop","r","isSticky","setIsSticky","disableSticky","query","updateIsSticky","sticky","isStickyContext","useMemo","scrollContainerRectValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Controller, useZoom, useScrollableContainer } from '@ali/4ever-cangjie';\nimport Table from '../mo/models';\nimport TableRow from '../mo/models/tableRow';\nimport { RowIsStickyContext, ScrollableContainerRect } from '../utils/hooks';\nimport useResizeObserver from '../utils/utils/useResizeObserver';\n\ninterface Rect {\n  top: number;\n  left?: number;\n}\n\nexport interface Props {\n  controller: Controller;\n  table: Table;\n  enableHeaderSticky?: () => boolean;\n  children: React.ReactNode;\n}\n\nconst TableContextContainer = (props: Props) => {\n  const { controller, table, enableHeaderSticky, children } = props;\n\n  const scale = useZoom();\n  const scrollContainer = useScrollableContainer();\n\n  const [scrollContainerRect, setScrollContainerRect] =\n    React.useState<Rect>({ top: 0 });\n  const firstRow = table.nodes?.[0];\n  const shouldSticky = TableRow.shouldSticky(firstRow);\n\n  const updateScrollContainerTop = React.useCallback((rect: DOMRect) => {\n    const actualTop = rect.top;\n    if (scrollContainerRect.top !== actualTop) {\n      setScrollContainerRect((r) => ({\n        ...r,\n        top: actualTop,\n      }));\n    }\n  }, [scrollContainerRect.top]);\n  useResizeObserver(shouldSticky ? scrollContainer : null, updateScrollContainerTop);\n\n  const [isSticky, setIsSticky] = React.useState(false);\n\n  /**\n   * 以下场景吸顶时，样式存在问题，暂时不支持\n   * 1. 缩放\n   * 2. 表格在表格 or 分栏 内\n   * 3. 表格在高亮块内\n   */\n  const disableSticky = scale !== 1\n    || controller.query('isNodeInTable', table)\n    || controller.query('isNodeInColorBlocks', table);\n\n  const updateIsSticky = React.useCallback((sticky: boolean) => {\n    setIsSticky(\n      sticky\n      && !disableSticky\n      && !!enableHeaderSticky && enableHeaderSticky(),\n    );\n  }, [disableSticky, enableHeaderSticky]);\n\n  const isStickyContext: [boolean, Function] = React.useMemo(() => {\n    return [isSticky, updateIsSticky];\n  }, [isSticky, updateIsSticky]);\n\n  const scrollContainerRectValue: [Rect, Function] = React.useMemo(() => {\n    return [scrollContainerRect, setScrollContainerRect];\n  }, [scrollContainerRect]);\n\n  return (\n    <ScrollableContainerRect.Provider value={scrollContainerRectValue}>\n      <RowIsStickyContext.Provider value={isStickyContext}>\n        {children}\n      </RowIsStickyContext.Provider>\n    </ScrollableContainerRect.Provider>\n  );\n};\n\nexport default TableContextContainer;\n"],"file":"tableContextContainer.js"}