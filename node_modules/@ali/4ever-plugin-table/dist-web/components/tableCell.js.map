{"version":3,"sources":["../../../src/components/tableCell.tsx"],"names":["React","styled","css","useStyle","SelectionSlot","TableRow","bdrToStyle","bdrToPaddingStyle","transformThemeObjToCssString","theme","blockMarginStyleInContainer","getPositionOfCell","isTable","setTableMinColsWidthData","usePixelColsWidth","useRowIsSticky","getTabelCellFill","ContainerWidthResizeContext","DEFAULT_BORDER_COLOR","tableCellStyle","Td","td","DefaultPadding","left","right","top","bottom","vAlignToGridVAlign","vAlign","defaultAlign","map","middle","Cell","props","isSticky","node","attributes","children","fill","parent","data","bdr","hidden","rowSpan","cSpan","colSpan","cellMar","parseInt","String","style","useMemo","result","display","flexDirection","backgroundColor","justifyContent","verticalAlign","padding","forEach","orient","w","isHeader","isTableRow","key","TableCell","controller","document","value","table","getClosest","docStyle","position","colIndex","rowIndex","colsWidth","width","Array","isArray","slice","reduce","acc","v","didMount","useRef","resetTableMinColsWidth","useCallback","forEachDescendant","n","colWidth","query","run","useEffect","current","calcMinTableColWidth","res","minColWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  RenderNodeProps,\n  useStyle,\n  SelectionSlot,\n} from '@ali/4ever-cangjie';\nimport Table from '../mo/models';\nimport MoTableCell from '../mo/models/tableCell';\nimport TableRow from '../mo/models/tableRow';\nimport { bdrToStyle, bdrToPaddingStyle, transformThemeObjToCssString, theme, blockMarginStyleInContainer } from '@ali/4ever-utils';\nimport getPositionOfCell from '../utils/utils/getPositionOfCell';\nimport isTable from '../utils/utils/isTable';\nimport { setTableMinColsWidthData } from '../utils/actions';\nimport { usePixelColsWidth, useRowIsSticky } from '../utils/hooks';\nimport getTabelCellFill from '../utils/utils/getTableCellFill';\nimport { ContainerWidthResizeContext } from './ContainerWidthResizeContext';\nimport { DEFAULT_BORDER_COLOR } from '../utils/constants';\n\nconst { 'table-cell': tableCellStyle } = theme;\n\nconst Td = styled.td`\n  ${transformThemeObjToCssString(tableCellStyle)}\n  border-width: 1px;\n  border-style: solid;\n  border-color: ${DEFAULT_BORDER_COLOR};\n  overflow: hidden;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n\n  ${css`${blockMarginStyleInContainer}`}\n`;\n\nconst DefaultPadding = {\n  left: tableCellStyle['padding-left'],\n  right: tableCellStyle['padding-right'],\n  top: tableCellStyle['padding-top'],\n  bottom: tableCellStyle['padding-bottom'],\n};\n\nexport type TableCellProps = RenderNodeProps<MoTableCell>;\n\nconst vAlignToGridVAlign = (vAlign?: string) => {\n  const defaultAlign = 'center';\n  const map = {\n    top: 'flex-start',\n    middle: defaultAlign,\n    bottom: 'flex-end',\n  };\n  return vAlign ? map[vAlign] : defaultAlign;\n};\n\ntype CellProps = TableCellProps & {\n  fill?: string;\n};\n\nconst Cell: React.FC<CellProps> = (props) => {\n  const [isSticky] = useRowIsSticky();\n\n  const { node, attributes, children, fill, parent } = props;\n  const {\n    vAlign,\n    bdr,\n    hidden,\n    rowSpan = 1,\n    colSpan: cSpan,\n    cellMar,\n  } = node.data || {};\n  const colSpan = parseInt(String(cSpan), 10) || 1;\n\n  const style = React.useMemo(() => {\n    let result: React.CSSProperties = {};\n    if (hidden) {\n      result.display = 'none';\n    } else if (isSticky) {\n      // 设置 grid，保障在首行吸顶时，cell 的 vAlign 样式正常\n      result.display = 'flex';\n      result.flexDirection = 'column';\n    }\n\n    if (fill) {\n      result.backgroundColor = fill;\n    }\n\n    // 首行吸顶时采用 grid 布局，verticalAlign 在 grid 布局中不生效，改为 justifyContent\n    if (isSticky) {\n      result.justifyContent = vAlignToGridVAlign(vAlign);\n    } else if (vAlign) {\n      result.verticalAlign = vAlign;\n    }\n\n    const padding = { ...DefaultPadding };\n    if (cellMar) {\n      ['left', 'right', 'top', 'bottom'].forEach((orient) => {\n        if (typeof cellMar[orient]?.w === 'number') {\n          padding[orient] = cellMar[orient]?.w;\n        }\n      });\n    }\n\n    if (typeof bdr === 'object') {\n      result = { ...result, ...bdrToStyle(bdr), ...bdrToPaddingStyle(bdr, padding) };\n    }\n    return result;\n  }, [hidden, isSticky, fill, vAlign, cellMar, bdr]);\n\n  const isHeader = TableRow.isTableRow(parent) && TableRow.isHeader(parent);\n\n  return (\n    <Td\n      {...attributes}\n      data-type=\"table-cell\"\n      rowSpan={rowSpan || 1}\n      colSpan={colSpan}\n      style={style}\n      data-container-block\n    >\n      {children()}\n      {isHeader && <SelectionSlot layerFor={node.key} />}\n    </Td>\n  );\n};\n\nconst TableCell: React.FC<TableCellProps> = (props) => {\n  const { node, controller } = props;\n  const {\n    colSpan: cSpan,\n  } = node.data || {};\n\n  const colSpan = parseInt(String(cSpan), 10) || 1;\n\n  const { document } = controller.value;\n  const table = document.getClosest(node.key, isTable) as Table | null;\n  const docStyle = useStyle();\n  const fill = getTabelCellFill(node, table, docStyle);\n\n  const position = getPositionOfCell(node.key, table) || {};\n  // @ts-ignore\n  const { colIndex, rowIndex } = position;\n\n  const [colsWidth] = usePixelColsWidth();\n  const width = React.useMemo(() => {\n    let result = 0;\n    if (typeof colIndex !== 'number') {\n      return result;\n    }\n    if (Array.isArray(colsWidth)) {\n      result = colsWidth\n        .slice(colIndex, colIndex + colSpan)\n        .reduce((acc, v) => (acc + v), 0);\n    }\n    return result;\n  }, [colsWidth, colIndex, colSpan]);\n\n  const didMount = React.useRef(false);\n\n  const resetTableMinColsWidth = React.useCallback(() => {\n    node.forEachDescendant((n) => {\n      const colWidth = controller.query(\n        'getMinTableColWidth',\n        { node: n },\n      );\n      if (typeof colWidth === 'number' && width < colWidth) {\n        controller.run(\n          'onAction',\n          setTableMinColsWidthData({\n            [n.key]: colWidth,\n          }),\n        );\n      }\n    });\n  }, [node]);\n\n  React.useEffect(() => {\n    // didMount 时不处理\n    if (!didMount.current) {\n      didMount.current = true;\n      return;\n    }\n\n    resetTableMinColsWidth();\n  }, [resetTableMinColsWidth]);\n\n  const calcMinTableColWidth = React.useCallback(() => {\n    if (!table || rowIndex !== 0) {\n      return;\n    }\n    const res = controller.query(\n      'calcMinTableColWidth',\n      {\n        node: table,\n        colIndex,\n      },\n    );\n    const { key, width: minColWidth } = res || {};\n\n    if (key && typeof minColWidth === 'number' && width < minColWidth) {\n      controller.run(\n        'onAction',\n        setTableMinColsWidthData({\n          [key]: minColWidth,\n        }),\n      );\n    }\n  // perf\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  React.useEffect(calcMinTableColWidth, [calcMinTableColWidth]);\n\n  return (\n    <ContainerWidthResizeContext.Provider value={width}>\n      <Cell {...props} fill={fill} />\n    </ContainerWidthResizeContext.Provider>\n  );\n};\n\nexport default TableCell;\n\n"],"file":"tableCell.js"}