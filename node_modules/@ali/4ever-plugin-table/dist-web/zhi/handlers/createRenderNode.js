import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { omit } from 'lodash-es';
import MoTable from "../../mo/models";
import MoTableRow from "../../mo/models/tableRow";
import MoTableCell from "../../mo/models/tableCell";
import Table from "../components/table";
import TableRow from "../../components/tableRow";
import TableCell from "../../components/tableCell";
import TableWrapper from "../components/tableWrapper";
export var createRenderNode = function createRenderNode(config, isMobile) {
  var _ref;

  return _ref = {}, _ref[MoTable.TYPE] = function (props) {
    var node = props.node;

    if (!MoTable.isValidTable(node)) {
      return /*#__PURE__*/_createElement(React.Fragment, null);
    }

    return /*#__PURE__*/_createElement(TableWithWrapper, {
      config: config,
      props: props,
      isMobile: isMobile
    });
  }, _ref[MoTableRow.TYPE] = function (props) {
    return /*#__PURE__*/_createElement(TableRow, props);
  }, _ref[MoTableCell.TYPE] = function (props) {
    return /*#__PURE__*/_createElement(TableCell, props);
  }, _ref;
};

function TableWithWrapper(p) {
  var config = p.config,
      props = p.props,
      _p$isMobile = p.isMobile,
      isMobile = _p$isMobile === void 0 ? false : _p$isMobile;
  var attributes = props.attributes,
      visible = props.visible;
  var otherProps = omit(props, 'attributes');
  return /*#__PURE__*/_createElement(TableWrapper, _extends({}, attributes, {
    visible: visible,
    "data-type": "table",
    isMobile: isMobile
  }), /*#__PURE__*/_createElement(Table, _extends({}, otherProps, {
    isMobile: isMobile,
    config: config
  })));
}
//# sourceMappingURL=createRenderNode.js.map