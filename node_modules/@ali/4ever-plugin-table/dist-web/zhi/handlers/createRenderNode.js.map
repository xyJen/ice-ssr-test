{"version":3,"sources":["../../../../src/zhi/handlers/createRenderNode.tsx"],"names":["React","omit","MoTable","MoTableRow","MoTableCell","Table","TableRow","TableCell","TableWrapper","createRenderNode","config","isMobile","TYPE","props","node","isValidTable","TableWithWrapper","p","attributes","visible","otherProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,IAAT,QAAqB,WAArB;AAEA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;AAGA,OAAO,IAAMC,gBAAkC,GAAG,SAArCA,gBAAqC,CAACC,MAAD,EAAsBC,QAAtB,EAA6C;AAAA;;AAC7F,yBACGT,OAAO,CAACU,IADX,IACkB,UAACC,KAAD,EAAW;AAAA,QACjBC,IADiB,GACRD,KADQ,CACjBC,IADiB;;AAEzB,QAAI,CAACZ,OAAO,CAACa,YAAR,CAAqBD,IAArB,CAAL,EAAiC;AAC/B,0BAAO,oCAAP;AACD;;AAED,wBAAO,eAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEJ,MAA1B;AAAkC,MAAA,KAAK,EAAEG,KAAzC;AAAqF,MAAA,QAAQ,EAAEF;AAA/F,MAAP;AACD,GARH,OASGR,UAAU,CAACS,IATd,IASqB,UAACC,KAAD,EAAW;AAC5B,wBAAO,eAAC,QAAD,EAAeA,KAAf,CAAP;AACD,GAXH,OAYGT,WAAW,CAACQ,IAZf,IAYsB,UAACC,KAAD,EAAW;AAC7B,wBAAO,eAAC,SAAD,EAAgBA,KAAhB,CAAP;AACD,GAdH;AAgBD,CAjBM;;AAyBP,SAASG,gBAAT,CAA0BC,CAA1B,EAAoD;AAAA,MAC1CP,MAD0C,GACNO,CADM,CAC1CP,MAD0C;AAAA,MAClCG,KADkC,GACNI,CADM,CAClCJ,KADkC;AAAA,oBACNI,CADM,CAC3BN,QAD2B;AAAA,MAC3BA,QAD2B,4BAChB,KADgB;AAAA,MAE1CO,UAF0C,GAElBL,KAFkB,CAE1CK,UAF0C;AAAA,MAE9BC,OAF8B,GAElBN,KAFkB,CAE9BM,OAF8B;AAIlD,MAAMC,UAAU,GAAGnB,IAAI,CAACY,KAAD,EAAoC,YAApC,CAAvB;AAEA,sBACE,eAAC,YAAD,eACMK,UADN;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,iBAAU,OAHZ;AAIE,IAAA,QAAQ,EAAER;AAJZ,mBAME,eAAC,KAAD,eACMS,UADN;AAEE,IAAA,QAAQ,EAAET,QAFZ;AAGE,IAAA,MAAM,EAAED;AAHV,KANF,CADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { omit } from 'lodash-es';\nimport { RenderNodeProps, Block } from '@ali/4ever-cangjie';\nimport MoTable from '../../mo/models';\nimport MoTableRow from '../../mo/models/tableRow';\nimport MoTableCell from '../../mo/models/tableCell';\nimport Table from '../components/table';\nimport TableRow from '../../components/tableRow';\nimport TableCell from '../../components/tableCell';\nimport TableWrapper from '../components/tableWrapper';\nimport { CreateRenderNode, TableConfig } from '../types';\n\nexport const createRenderNode: CreateRenderNode = (config: TableConfig, isMobile?: boolean) => {\n  return {\n    [MoTable.TYPE]: (props) => {\n      const { node } = props;\n      if (!MoTable.isValidTable(node)) {\n        return <></>;\n      }\n\n      return <TableWithWrapper config={config} props={props as unknown as RenderNodeProps<Block>} isMobile={isMobile} />;\n    },\n    [MoTableRow.TYPE]: (props) => {\n      return <TableRow {...(props as unknown as RenderNodeProps<Block>)} />;\n    },\n    [MoTableCell.TYPE]: (props) => {\n      return <TableCell {...(props as unknown as RenderNodeProps<MoTableCell>)} />;\n    },\n  };\n};\n\ninterface TableWithWrapperProps {\n  config: TableConfig;\n  props: RenderNodeProps<Block>;\n  isMobile?: boolean;\n}\n\nfunction TableWithWrapper(p: TableWithWrapperProps) {\n  const { config, props, isMobile = false } = p;\n  const { attributes, visible } = props;\n\n  const otherProps = omit(props as RenderNodeProps<MoTable>, 'attributes');\n\n  return (\n    <TableWrapper\n      {...attributes}\n      visible={visible}\n      data-type=\"table\"\n      isMobile={isMobile}\n    >\n      <Table\n        {...otherProps}\n        isMobile={isMobile}\n        config={config}\n      />\n    </TableWrapper>\n  );\n}\n"],"file":"createRenderNode.js"}