{"version":3,"sources":["../../../../src/zhi/handlers/createOnCangjieCopy.ts"],"names":["constants","transferUtils","isSingleTableCell","transformTablesToCompatibleLegacy","normalizeClipboardTable","MIME_TYPES","createOnCangjieCopy","isMobile","onCangjieCopy","event","controller","next","clipboardData","document","value","encodedFragment","getData","FRAGMENT","fragment","decodeFragment","setClipboardData","setData","encodeFragment","shouldTransfrom","newFragment"],"mappings":"AAAA,SAEEA,SAFF,EAIEC,aAJF,QAKO,oBALP;AAMA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,iCAAP;AACA,SAASC,uBAAT;IAEQC,U,GAAeL,S,CAAfK,U;AAER,eAAe,SAASC,mBAAT,CAA6BC,QAA7B,EAA+C;AAAA,MAAlBA,QAAkB;AAAlBA,IAAAA,QAAkB,GAAP,KAAO;AAAA;;AAC5D,SAAO,SAASC,aAAT,CACLC,KADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AACA,QAAI,CAACF,KAAK,CAACG,aAAX,EAA0B;AACxB,aAAOD,IAAI,EAAX;AACD;;AAHD,QAKQE,QALR,GAKqBH,UAAU,CAACI,KALhC,CAKQD,QALR;AAMA,QAAME,eAAe,GAAGN,KAAK,CAACG,aAAN,CAAoBI,OAApB,CAA4BX,UAAU,CAACY,QAAvC,CAAxB;AACA,QAAMC,QAAQ,GAAGjB,aAAa,CAACkB,cAAd,CAA6BJ,eAA7B,CAAjB;;AACA,QAAIG,QAAQ,IAAIhB,iBAAiB,CAACgB,QAAD,CAAjC,EAA6C;AAC3C,aAAOP,IAAI,CACTF,KAAK,CAACW,gBAAN,CACEX,KAAK,CAACG,aAAN,CAAoBS,OAApB,CACEhB,UAAU,CAACY,QADb,EAEEhB,aAAa,CAACqB,cAAd,CAA6BlB,uBAAuB,CAACc,QAAD,CAApD,CAFF,CADF,CADS,CAAX;AAQD;;AACD,QAAIA,QAAJ,EAAc;AAAA,kCAIRf,iCAAiC,CACnCU,QADmC,EAEnCK,QAFmC,EAGnCX,QAHmC,CAJzB;AAAA,UAEVgB,eAFU,yBAEVA,eAFU;AAAA,UAGAC,WAHA,yBAGVN,QAHU;;AASZ,UAAIK,eAAJ,EAAqB;AACnB,eAAOZ,IAAI,CACTF,KAAK,CAACW,gBAAN,CACEX,KAAK,CAACG,aAAN,CAAoBS,OAApB,CACEhB,UAAU,CAACY,QADb,EAEEhB,aAAa,CAACqB,cAAd,CAA6BE,WAA7B,CAFF,CADF,CADS,CAAX;AAQD;AACF;;AAED,WAAOb,IAAI,EAAX;AACD,GA5CD;AA6CD","sourcesContent":["import {\n  CangjieClipboardEvent,\n  constants,\n  Controller,\n  transferUtils,\n} from '@ali/4ever-cangjie';\nimport { isSingleTableCell } from '@ali/4ever-utils';\nimport transformTablesToCompatibleLegacy from '../../utils/utils/transformTablesToCompatibleLegacy';\nimport { normalizeClipboardTable } from '../../utils/utils/normalizeClipboardTable';\n\nconst { MIME_TYPES } = constants;\n\nexport default function createOnCangjieCopy(isMobile = false) {\n  return function onCangjieCopy(\n    event: CangjieClipboardEvent,\n    controller: Controller,\n    next,\n  ) {\n    if (!event.clipboardData) {\n      return next();\n    }\n\n    const { document } = controller.value;\n    const encodedFragment = event.clipboardData.getData(MIME_TYPES.FRAGMENT);\n    const fragment = transferUtils.decodeFragment(encodedFragment);\n    if (fragment && isSingleTableCell(fragment)) {\n      return next(\n        event.setClipboardData(\n          event.clipboardData.setData(\n            MIME_TYPES.FRAGMENT,\n            transferUtils.encodeFragment(normalizeClipboardTable(fragment)),\n          ),\n        ),\n      );\n    }\n    if (fragment) {\n      const {\n        shouldTransfrom,\n        fragment: newFragment,\n      } = transformTablesToCompatibleLegacy(\n        document,\n        fragment,\n        isMobile,\n      );\n      if (shouldTransfrom) {\n        return next(\n          event.setClipboardData(\n            event.clipboardData.setData(\n              MIME_TYPES.FRAGMENT,\n              transferUtils.encodeFragment(newFragment),\n            ),\n          ),\n        );\n      }\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnCangjieCopy.js"}