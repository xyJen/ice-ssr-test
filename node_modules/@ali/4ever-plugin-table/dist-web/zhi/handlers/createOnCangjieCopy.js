import { constants, transferUtils } from '@ali/4ever-cangjie';
import { isSingleTableCell } from '@ali/4ever-utils';
import transformTablesToCompatibleLegacy from "../../utils/utils/transformTablesToCompatibleLegacy";
import { normalizeClipboardTable } from "../../utils/utils/normalizeClipboardTable";
var MIME_TYPES = constants.MIME_TYPES;
export default function createOnCangjieCopy(isMobile) {
  if (isMobile === void 0) {
    isMobile = false;
  }

  return function onCangjieCopy(event, controller, next) {
    if (!event.clipboardData) {
      return next();
    }

    var document = controller.value.document;
    var encodedFragment = event.clipboardData.getData(MIME_TYPES.FRAGMENT);
    var fragment = transferUtils.decodeFragment(encodedFragment);

    if (fragment && isSingleTableCell(fragment)) {
      return next(event.setClipboardData(event.clipboardData.setData(MIME_TYPES.FRAGMENT, transferUtils.encodeFragment(normalizeClipboardTable(fragment)))));
    }

    if (fragment) {
      var _transformTablesToCom = transformTablesToCompatibleLegacy(document, fragment, isMobile),
          shouldTransfrom = _transformTablesToCom.shouldTransfrom,
          newFragment = _transformTablesToCom.fragment;

      if (shouldTransfrom) {
        return next(event.setClipboardData(event.clipboardData.setData(MIME_TYPES.FRAGMENT, transferUtils.encodeFragment(newFragment))));
      }
    }

    return next();
  };
}
//# sourceMappingURL=createOnCangjieCopy.js.map