{"version":3,"sources":["../../../../src/mo/serializer/styles.ts"],"names":["DEFAULT_TABLE_BORDER_COLOR","DEFAULT_BORDER_SIDE","val","sz","color","generateBorderSideStyle","side","generateBorderStyle","bdr","borderTop","top","borderRight","right","borderBottom","bottom","borderLeft","left","generatePaddingStyle","padding","paddingStyle","paddingLeft","Math","abs","paddingRight","DEFAULT_TABLE_CELL_STYLE","overflow","overflowWrap","wordWrap","generateTableCellStyle","attrs","style","hidden","display","fill","backgroundColor","vAlign","verticalAlign","DEFAULT_TABLE_ROW_HEIGHT","generateTableStyle","colsWidth","tblW","isAutofit","type","borderCollapse","tableLayout","width","tableWidth","reduce","sum"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  TableCellProperties,\n  TableProperties,\n  TableCellBorderProperties,\n  BorderProperties,\n} from './types';\n\nconst DEFAULT_TABLE_BORDER_COLOR = '#D6D6D6';\n\nconst DEFAULT_BORDER_SIDE: BorderProperties = {\n  val: 'single',\n  sz: 1,\n  color: '#000000',\n};\n\nfunction generateBorderSideStyle(side?: BorderProperties) {\n  const { sz, val, color } = { ...DEFAULT_BORDER_SIDE, ...side };\n  return `${sz}px ${val === 'single' ? 'solid' : val} ${color}`;\n}\n\nfunction generateBorderStyle(bdr: TableCellBorderProperties = {}): Partial<React.CSSProperties> {\n  return {\n    borderTop: generateBorderSideStyle(bdr.top),\n    borderRight: generateBorderSideStyle(bdr.right),\n    borderBottom: generateBorderSideStyle(bdr.bottom),\n    borderLeft: generateBorderSideStyle(bdr.left),\n  };\n}\n\nfunction generatePaddingStyle(bdr: TableCellBorderProperties, padding = 8): Partial<React.CSSProperties> {\n  const paddingStyle: React.CSSProperties = {};\n  if (bdr.left && bdr.left.sz) {\n    paddingStyle.paddingLeft = padding - Math.abs(bdr.left.sz);\n  }\n  if (bdr.right && bdr.right.sz) {\n    paddingStyle.paddingRight = padding - Math.abs(bdr.right.sz);\n  }\n  return paddingStyle;\n}\n\nconst DEFAULT_TABLE_CELL_STYLE: React.CSSProperties = {\n  overflow: 'hidden',\n  borderLeft: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  borderRight: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  borderBottom: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  borderTop: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  padding: '4px 8px',\n  overflowWrap: 'break-word',\n  wordWrap: 'break-word',\n};\n\nexport function generateTableCellStyle(attrs: TableCellProperties) {\n  let style: React.CSSProperties = {\n    ...DEFAULT_TABLE_CELL_STYLE,\n    ...generateBorderStyle(attrs.bdr),\n  };\n  if (attrs.hidden) {\n    style.display = 'none';\n  }\n  if (attrs.fill) {\n    style.backgroundColor = attrs.fill;\n  }\n  if (attrs.vAlign) {\n    style.verticalAlign = attrs.vAlign;\n  }\n  if (attrs.bdr) {\n    style = {\n      ...style,\n      ...generateBorderStyle(attrs.bdr),\n      ...generatePaddingStyle(attrs.bdr),\n    };\n  }\n  return style;\n}\n\nexport const DEFAULT_TABLE_ROW_HEIGHT = 33;\n\nexport function generateTableStyle(attrs: TableProperties): React.CSSProperties {\n  const { colsWidth = [], tblW } = attrs;\n  const isAutofit = tblW?.type === 'pct';\n  const style: React.CSSProperties = {\n    borderCollapse: 'collapse',\n    tableLayout: 'fixed',\n  };\n  if (isAutofit) {\n    style.width = '100%';\n  } else {\n    const tableWidth = colsWidth.reduce((sum: number, width: number) => sum + width, 0);\n    if (tableWidth > 0) {\n      style.width = tableWidth;\n    }\n  }\n  return style;\n}\n"],"file":"styles.js"}