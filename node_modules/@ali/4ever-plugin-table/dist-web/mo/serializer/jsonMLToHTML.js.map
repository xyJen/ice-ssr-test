{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToHTML.tsx"],"names":["React","getTagName","getAttributes","getChildren","getText","generateTableCellStyle","generateTableStyle","DEFAULT_TABLE_ROW_HEIGHT","DEFAULT_PAGE_WIDTH","MIN_COL_WIDTH","TableCell","props","node","children","rest","attrs","colSpan","rowSpan","hidden","style","TableRow","h","text","length","height","Table","colsWidth","tblW","pixelColsWidth","type","totalColsWidth","reduce","acc","w","index","push","Math","max","pixelW","round","map","width","tagToComponent","table","tr","tc","td","name","match","tagName","convert","path","Component","child","toString"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  JsonML,\n  getTagName,\n  getAttributes,\n  getChildren,\n  getText,\n} from '@ali/4ever-utils';\nimport { TableCellProperties, TableRowProperties, TableProperties } from './types';\nimport { generateTableCellStyle, generateTableStyle, DEFAULT_TABLE_ROW_HEIGHT } from './styles';\nimport { DEFAULT_PAGE_WIDTH, MIN_COL_WIDTH } from './constants';\nimport { ConvertFunc } from '@ali/4ever-cangjie';\n\ninterface TableProps {\n  node: JsonML;\n}\n\ninterface TableRowProps {\n  node: JsonML;\n}\ninterface TableCellProps {\n  node: JsonML;\n}\n\nconst TableCell: React.FC<TableCellProps> = (props): React.ReactElement => {\n  const { node, children, ...rest } = props;\n  const attrs = (getAttributes(node) || {}) as TableCellProperties;\n  const { colSpan = 1, rowSpan = 1, hidden } = attrs;\n\n  // 被合并掉的单元格不输出，在 Word 中如果输出 hidden 单元格则会异常\n  if (hidden) {\n    return <></>;\n  }\n\n  const style = generateTableCellStyle(attrs);\n\n  return (\n    <td {...rest} colSpan={colSpan} rowSpan={rowSpan} style={style}>\n      {children}\n    </td>\n  );\n};\n\nconst TableRow: React.FC<TableRowProps> = (props): React.ReactElement => {\n  const { node, children, ...rest } = props;\n  const { h }: TableRowProperties = getAttributes(node) || {};\n  const style: React.CSSProperties = {};\n  const text = getText(node);\n  // 无内容的行在 Word 中会塌陷，这里使用一个宽度让其能够撑开\n  if (text.length === 0) {\n    style.height = DEFAULT_TABLE_ROW_HEIGHT;\n  }\n  if (h) {\n    style.height = h;\n  }\n  return (\n    <tr {...rest} style={style}>\n      {children}\n    </tr>\n  );\n};\n\nconst Table: React.FC<TableProps> = (props): React.ReactElement => {\n  const { node, children, ...rest } = props;\n  const attrs = getAttributes(node) as TableProperties;\n  const { colsWidth = [], tblW } = attrs;\n  // 宽度自适应表格将列宽单位由百分比转为 px\n  let pixelColsWidth = colsWidth;\n  if (tblW?.type === 'pct') {\n    const totalColsWidth = colsWidth.reduce((acc, w) => (acc + w));\n    pixelColsWidth = [];\n    colsWidth.reduce((acc, w, index) => {\n      if (index === colsWidth.length - 1) {\n        return pixelColsWidth.push(Math.max(DEFAULT_PAGE_WIDTH - acc), MIN_COL_WIDTH);\n      }\n      const pixelW = Math.round(w / totalColsWidth * DEFAULT_PAGE_WIDTH);\n      pixelColsWidth.push(pixelW);\n      return acc + pixelW;\n    }, 0);\n  }\n\n  return (\n    <table\n      {...rest}\n      style={generateTableStyle(attrs)}\n    >\n      <colgroup>\n        {pixelColsWidth.map((width: number, index: number) => (\n          <col key={index} width={width} />\n        ))}\n      </colgroup>\n      <tbody>\n        {children}\n      </tbody>\n    </table>\n  );\n};\n\nconst tagToComponent: Record<string, React.FC<TableProps | TableRowProps | TableCellProps>> = {\n  table: Table,\n  tr: TableRow,\n  tc: TableCell,\n  td: TableCell,\n};\n\nexport default {\n  name: 'table',\n\n  match: (node: JsonML): boolean => {\n    const tagName = getTagName(node);\n    return !!tagToComponent[tagName];\n  },\n\n  convert: (node: JsonML, path: number[], convert: ConvertFunc): React.ReactElement => {\n    const tagName = getTagName(node);\n    const Component = tagToComponent[tagName];\n    const children = getChildren(node)\n      .map((child, index) => convert(child, [...path, index]));\n\n    return (\n      <Component node={node} key={path.toString()}>\n        {children}\n      </Component>\n    );\n  },\n};\n"],"file":"jsonMLToHTML.js"}