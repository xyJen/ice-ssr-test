import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { getTagName, getAttributes, getChildren, getText } from '@ali/4ever-utils';
import { generateTableCellStyle, generateTableStyle, DEFAULT_TABLE_ROW_HEIGHT } from "./styles";
import { DEFAULT_PAGE_WIDTH, MIN_COL_WIDTH } from "./constants";

var TableCell = function TableCell(props) {
  var node = props.node,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, ["node", "children"]);

  var attrs = getAttributes(node) || {};
  var _attrs$colSpan = attrs.colSpan,
      colSpan = _attrs$colSpan === void 0 ? 1 : _attrs$colSpan,
      _attrs$rowSpan = attrs.rowSpan,
      rowSpan = _attrs$rowSpan === void 0 ? 1 : _attrs$rowSpan,
      hidden = attrs.hidden; // 被合并掉的单元格不输出，在 Word 中如果输出 hidden 单元格则会异常

  if (hidden) {
    return /*#__PURE__*/_createElement(React.Fragment, null);
  }

  var style = generateTableCellStyle(attrs);
  return /*#__PURE__*/_createElement("td", _extends({}, rest, {
    colSpan: colSpan,
    rowSpan: rowSpan,
    style: style
  }), children);
};

var TableRow = function TableRow(props) {
  var node = props.node,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, ["node", "children"]);

  var _ref = getAttributes(node) || {},
      h = _ref.h;

  var style = {};
  var text = getText(node); // 无内容的行在 Word 中会塌陷，这里使用一个宽度让其能够撑开

  if (text.length === 0) {
    style.height = DEFAULT_TABLE_ROW_HEIGHT;
  }

  if (h) {
    style.height = h;
  }

  return /*#__PURE__*/_createElement("tr", _extends({}, rest, {
    style: style
  }), children);
};

var Table = function Table(props) {
  var node = props.node,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, ["node", "children"]);

  var attrs = getAttributes(node);
  var _attrs$colsWidth = attrs.colsWidth,
      colsWidth = _attrs$colsWidth === void 0 ? [] : _attrs$colsWidth,
      tblW = attrs.tblW; // 宽度自适应表格将列宽单位由百分比转为 px

  var pixelColsWidth = colsWidth;

  if ((tblW == null ? void 0 : tblW.type) === 'pct') {
    var totalColsWidth = colsWidth.reduce(function (acc, w) {
      return acc + w;
    });
    pixelColsWidth = [];
    colsWidth.reduce(function (acc, w, index) {
      if (index === colsWidth.length - 1) {
        return pixelColsWidth.push(Math.max(DEFAULT_PAGE_WIDTH - acc), MIN_COL_WIDTH);
      }

      var pixelW = Math.round(w / totalColsWidth * DEFAULT_PAGE_WIDTH);
      pixelColsWidth.push(pixelW);
      return acc + pixelW;
    }, 0);
  }

  return /*#__PURE__*/_createElement("table", _extends({}, rest, {
    style: generateTableStyle(attrs)
  }), /*#__PURE__*/_createElement("colgroup", null, pixelColsWidth.map(function (width, index) {
    return /*#__PURE__*/_createElement("col", {
      key: index,
      width: width
    });
  })), /*#__PURE__*/_createElement("tbody", null, children));
};

var tagToComponent = {
  table: Table,
  tr: TableRow,
  tc: TableCell,
  td: TableCell
};
export default {
  name: 'table',
  match: function match(node) {
    var tagName = getTagName(node);
    return !!tagToComponent[tagName];
  },
  convert: function convert(node, path, _convert) {
    var tagName = getTagName(node);
    var Component = tagToComponent[tagName];
    var children = getChildren(node).map(function (child, index) {
      return _convert(child, [].concat(path, [index]));
    });
    return /*#__PURE__*/_createElement(Component, {
      node: node,
      key: path.toString()
    }, children);
  }
};
//# sourceMappingURL=jsonMLToHTML.js.map