import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { Block } from '@ali/4ever-cangjie';
import { ELEMENT_TYPE_TABLE_CELL } from "../../utils/meta";

var TableCell = /*#__PURE__*/function (_Block) {
  _inheritsLoose(TableCell, _Block);

  function TableCell() {
    return _Block.apply(this, arguments) || this;
  }

  TableCell.create = function create(properties) {
    if (typeof properties === 'string') {
      throw new Error('`TableCell.create` does not accept string');
    }

    if (TableCell.isTableCell(properties)) {
      return properties;
    }

    return _Block.create.call(this, _extends({}, properties, {
      type: TableCell.TYPE
    }));
  };

  TableCell.isTableCell = function isTableCell(maybeTableCell) {
    return Block.isBlock(maybeTableCell) && maybeTableCell.type === TableCell.TYPE;
  };

  TableCell.isValidTableCell = function isValidTableCell(maybeTableCell) {
    return this.isTableCell(maybeTableCell) && maybeTableCell.nodes.length >= 1 && Block.isBlock(maybeTableCell.nodes[0]);
  };

  return TableCell;
}(Block);

TableCell.TYPE = ELEMENT_TYPE_TABLE_CELL;
export { TableCell as default };
//# sourceMappingURL=tableCell.js.map