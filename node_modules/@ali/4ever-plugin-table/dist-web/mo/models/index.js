import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { Block, Text } from '@ali/4ever-cangjie';
import TableCell from "./tableCell";
import TableRow from "./tableRow";
import { ELEMENT_TYPE_TABLE } from "../../utils/meta";

var Table = /*#__PURE__*/function (_Block) {
  _inheritsLoose(Table, _Block);

  function Table() {
    return _Block.apply(this, arguments) || this;
  }

  Table.create = function create(properties) {
    if (typeof properties === 'string') {
      throw new Error('`Table.create` does not accept string');
    }

    if (Table.isTable(properties)) {
      return properties;
    }

    return _Block.create.call(this, _extends({}, properties, {
      type: Table.TYPE
    }));
  };

  Table.isTable = function isTable(maybeTable) {
    return Block.isBlock(maybeTable) && maybeTable.type === Table.TYPE;
  };

  Table.isAutofitWidth = function isAutofitWidth(table) {
    var _table$data, _table$data$tblW;

    return ((_table$data = table.data) == null ? void 0 : (_table$data$tblW = _table$data.tblW) == null ? void 0 : _table$data$tblW.type) === 'pct';
  };

  Table.isRowHeader = function isRowHeader(table) {
    var _nodes$, _nodes$$data;

    var nodes = table.nodes;
    return Array.isArray(nodes) && nodes.length > 0 && !!((_nodes$ = nodes[0]) != null && (_nodes$$data = _nodes$.data) != null && _nodes$$data.isTblHeader);
  };

  Table.isColumnHeader = function isColumnHeader(table) {
    var _table$data2;

    return !!((_table$data2 = table.data) != null && _table$data2.isColumnHeader);
  };

  Table.isValidTable = function isValidTable(maybeTable) {
    var _maybeTable$nodes;

    var _ref = maybeTable.data || {},
        colsWidth = _ref.colsWidth;

    return this.isTable(maybeTable) && Array.isArray(colsWidth) && !!colsWidth.length && !!((_maybeTable$nodes = maybeTable.nodes) != null && _maybeTable$nodes.length) && !(maybeTable.nodes.length === 1 && Text.isText(maybeTable.nodes[0]));
  };

  return Table;
}(Block);

Table.TYPE = ELEMENT_TYPE_TABLE;
Table.TableRow = TableRow;
Table.TableCell = TableCell;
export { Table as default };
//# sourceMappingURL=index.js.map