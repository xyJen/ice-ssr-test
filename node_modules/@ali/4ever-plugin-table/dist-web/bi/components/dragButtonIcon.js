import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components'; // icon不同模式下的配置，比如宽高

var MODECONFIG = {
  col: {
    height: 9,
    width: 14
  },
  row: {
    height: 14,
    width: 9
  }
}; // row、col分别对应行列拖拽工具栏下的模式

export var DragIconMode;

(function (DragIconMode) {
  DragIconMode["Row"] = "row";
  DragIconMode["Col"] = "col";
})(DragIconMode || (DragIconMode = {}));

var CircleIcon = /*#__PURE__*/styled.span(["display:inline-block;width:2px;height:2px;background:#FFFFFF;border-radius:100%;"]);
var DragButtonIconWrapper = /*#__PURE__*/styled.div(["display:flex;justify-content:space-between;align-items:center;transition:opacity ease-in-out .25s;"]);

var DragButtonIcon = function DragButtonIcon(props, ref) {
  var scale = props.scale,
      mode = props.mode,
      _props$isShow = props.isShow,
      isShow = _props$isShow === void 0 ? true : _props$isShow,
      _props$circleNumber = props.circleNumber,
      circleNumber = _props$circleNumber === void 0 ? 3 : _props$circleNumber;
  var config = mode === DragIconMode.Col ? MODECONFIG.col : MODECONFIG.row;
  var circles = React.useMemo(function () {
    var result = [];

    for (var i = 0; i < circleNumber; i++) {
      var _style = {
        width: 2 / scale + "px",
        height: 2 / scale + "px"
      };
      result.push( /*#__PURE__*/_createElement(CircleIcon, {
        key: i,
        style: _style
      }));
    }

    return result;
  }, [circleNumber, scale]);
  var style = React.useMemo(function () {
    return {
      flexDirection: mode === DragIconMode.Col ? 'row' : 'column',
      opacity: isShow ? 1 : 0,
      height: config.height / scale + "px",
      width: config.width / scale + "px"
    };
  }, [config.height, config.width, isShow, mode, scale]);
  return /*#__PURE__*/_createElement(DragButtonIconWrapper, {
    ref: ref,
    style: style
  }, circles);
};

export default /*#__PURE__*/React.forwardRef(DragButtonIcon);
//# sourceMappingURL=dragButtonIcon.js.map