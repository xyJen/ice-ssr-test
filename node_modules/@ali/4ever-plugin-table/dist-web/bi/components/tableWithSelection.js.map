{"version":3,"sources":["../../../../src/bi/components/tableWithSelection.tsx"],"names":["React","forwardRef","useCallback","useEffect","useMemo","useRef","useState","styled","TableSelection","TableHoverRect","UpdateTableSelectionContext","PureTable","Wrapper","div","TableWithSelection","props","forRef","controller","node","children","left","isSelectionHighlight","hoverSelection","tableSelection","getTableSelection","scale","tableRef","wrapperRef","update","setUpdate","current","forceUpdate","u","updateContext"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef, useCallback, useEffect, useMemo, useRef, useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport { ITableSelection } from '../types';\nimport TableSelection from './tableSelection';\nimport TableHoverRect from './tableSelection/tableHoverRect';\nimport { UpdateTableSelectionContext } from '../../utils/hooks/useUpdateTableSelection';\nimport PureTable from '../../components/pureTable';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\ninterface PureTableProps {\n  controller: Controller;\n  scale: number;\n  node: Table;\n  tableSelection: ITableSelection | null;\n  getTableSelection: () => (ITableSelection | null);\n  isSelectionHighlight: boolean;\n  hoverSelection: ITableSelection | null;\n  left: number;\n  children?: React.ReactNode;\n}\n\nconst TableWithSelection = forwardRef<\nHTMLTableElement, PureTableProps\n>(\n  (props, forRef) => {\n    const {\n      controller,\n      node,\n      children,\n      left,\n      isSelectionHighlight,\n      hoverSelection,\n      tableSelection,\n      getTableSelection,\n      scale,\n    } = props;\n    const tableRef = useRef<HTMLTableElement>(null);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const [update, setUpdate] = useState(0);\n\n    useEffect(() => {\n      if (typeof forRef === 'function') {\n        forRef(tableRef.current);\n      } else if (forRef) {\n        forRef.current = tableRef.current;\n      }\n    }, [tableRef, forRef]);\n\n    const forceUpdate = useCallback(() => {\n      setUpdate((u) => ++u);\n    }, []);\n\n    const updateContext: [number, Function] = useMemo(() => {\n      return [update, forceUpdate];\n    }, [update, forceUpdate]);\n\n    return (\n      <Wrapper ref={wrapperRef}>\n        <UpdateTableSelectionContext.Provider value={updateContext}>\n          <PureTable\n            ref={tableRef}\n            controller={controller}\n            node={node}\n            left={left}\n            isMobile={false}\n          >\n            {children}\n          </PureTable>\n          <TableSelection\n            data-testid=\"table-selection-wrapper\"\n            node={node}\n            controller={controller}\n            selection={tableSelection}\n            tableRef={tableRef}\n            scale={scale}\n            isHighlight={isSelectionHighlight}\n            getTableSelection={getTableSelection}\n            forceUpdate={update}\n          />\n        </UpdateTableSelectionContext.Provider>\n        <TableHoverRect\n          data-testid=\"table-selection-wrapper\"\n          node={node}\n          tableRef={tableRef}\n          scale={scale}\n          hoverSelection={hoverSelection}\n        />\n      </Wrapper>\n    );\n  },\n);\n\nexport default TableWithSelection;\n"],"file":"tableWithSelection.js"}