import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { usePixelColsWidth } from "../../../utils/hooks";
import { TOOLBAR_ITEM_SIZE } from "../../constants";
import { RowColToolbarItemRect } from "../rowColToolbarItemRect";
export var TableColToolbarItem = function TableColToolbarItem(props) {
  var index = props.index,
      propsStyle = props.style,
      _props$scale = props.scale,
      scale = _props$scale === void 0 ? 1 : _props$scale,
      activeRange = props.activeRange,
      selectRanges = props.selectRanges,
      deleteRange = props.deleteRange,
      children = props.children,
      onRectUpdate = props.onRectUpdate,
      rest = _objectWithoutPropertiesLoose(props, ["index", "style", "scale", "activeRange", "selectRanges", "deleteRange", "children", "onRectUpdate"]);

  var ref = React.useRef(null);

  var _usePixelColsWidth = usePixelColsWidth(),
      colsWidth = _usePixelColsWidth[0];

  React.useEffect(function () {
    var dom = ref.current;
    onRectUpdate == null ? void 0 : onRectUpdate(index, dom);
    return function () {
      onRectUpdate == null ? void 0 : onRectUpdate(index, dom, true);
    };
  });
  var width = colsWidth[index];

  var style = _extends({
    width: index === 0 ? width + 1 : width,
    height: TOOLBAR_ITEM_SIZE / scale,
    borderTopRightRadius: index === colsWidth.length - 1 ? 3 / scale : '',
    "float": 'left'
  }, propsStyle);

  return /*#__PURE__*/_createElement(RowColToolbarItemRect, _extends({
    ref: ref,
    index: index,
    type: "col",
    length: colsWidth.length,
    style: style,
    activeRange: activeRange,
    selectRanges: selectRanges,
    deleteRange: deleteRange
  }, rest), children);
};
//# sourceMappingURL=tableColToolbarItem.js.map