{"version":3,"sources":["../../../../../src/bi/components/inlineToolbarButtons/insertButtonIndicator.tsx"],"names":["React","styled","INDICATOR_WRAPPER_WIDTH","INDICATOR_WIDTH","GAP_BEWTEEN_INDICATOR_TOOLBAR","BG_COLOR","Svg","svg","p","translateX","scale","translateY","IndicatorWrapper","div","InsertButtonIndicator","forwardRef","props","ref","onMouseEnter","rest","indicatorWidth","Math","round","hanldePreventDefault","useCallback","e","preventDefault","stopPropagation","handleMouseEnter","dataIndex","insertIndex"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,uBAAuB,GAAG,EAAhC;AACP,OAAO,IAAMC,eAAe,GAAG,CAAxB;AACP,OAAO,IAAMC,6BAA6B,GAAG,CAAtC;AACP,IAAMC,QAAQ,GAAG,wBAAjB;AAYA,IAAMC,GAAG,gBAAGL,MAAM,CAACM,GAAV,2EAKgB,UAACC,CAAD;AAAA,SAAUA,CAAC,CAACC,UAAF,GAAeD,CAAC,CAACE,KAA3B,YAAuCF,CAAC,CAACG,UAAF,GAAeH,CAAC,CAACE,KAAxD;AAAA,CALhB,CAAT;AAUA,IAAME,gBAAgB,gBAAGX,MAAM,CAACY,GAAV,2GAGX,UAACL,CAAD;AAAA,SAAON,uBAAuB,GAAGM,CAAC,CAACE,KAAnC;AAAA,CAHW,EAIV,UAACF,CAAD;AAAA,SAAON,uBAAuB,GAAGM,CAAC,CAACE,KAAnC;AAAA,CAJU,CAAtB;AASA,IAAMI,qBAAqB,gBAAGd,KAAK,CAACe,UAAN,CAAiB,UAACC,KAAD,EAAeC,GAAf,EAAkD;AAAA,0BAO3FD,KAP2F,CAE7FP,UAF6F;AAAA,MAE7FA,UAF6F,kCAEhF,CAFgF;AAAA,0BAO3FO,KAP2F,CAG7FL,UAH6F;AAAA,MAG7FA,UAH6F,kCAGhF,CAHgF;AAAA,qBAO3FK,KAP2F,CAI7FN,KAJ6F;AAAA,MAI7FA,KAJ6F,6BAIrF,CAJqF;AAAA,MAK7FQ,YAL6F,GAO3FF,KAP2F,CAK7FE,YAL6F;AAAA,MAM1FC,IAN0F,iCAO3FH,KAP2F;;AAQ/F,MAAMI,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWnB,eAAe,GAAGO,KAA7B,CAAvB;AAEA,MAAMa,oBAAoB,GAAGvB,KAAK,CAACwB,WAAN,CAC3B,UAACC,CAAD,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACD,GAJ0B,EAK3B,EAL2B,CAA7B;AAQA,MAAMC,gBAAgB,GAAG5B,KAAK,CAACwB,WAAN,CAAkB,YAAM;AAC/C,QAAMK,SAAS,GAAGV,IAAI,CAAC,YAAD,CAAJ,IAAsB,CAAxC;AACA,QAAMW,WAAW,GAAGD,SAApB;AACAX,IAAAA,YAAY,IAAIA,YAAY,CAACY,WAAD,CAA5B;AACD,GAJwB,EAItB,CAACZ,YAAD,EAAeC,IAAf,CAJsB,CAAzB;AAMA,sBACE,eAAC,gBAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,KAAK,EAAEP,KAFT;AAGE,IAAA,WAAW,EAAEa,oBAHf;AAIE,IAAA,SAAS,EAAEA,oBAJb;AAKE,IAAA,YAAY,EAAEK;AALhB,KAMMT,IANN,gBAQE,eAAC,GAAD;AACE,IAAA,KAAK,EAAEC,cADT;AAEE,IAAA,MAAM,EAAEA,cAFV;AAGE,IAAA,OAAO,WAASA,cAAT,kBACLA,cAJJ;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,UAAU,EAAET,UANd;AAOE,IAAA,UAAU,EAAEF,UAPd;AAQE,IAAA,KAAK,EAAEC;AART,kBAUE;AACE,IAAA,EAAE,EAAEU,cAAc,GAAG,CADvB;AAEE,IAAA,EAAE,EAAEA,cAAc,GAAG,CAFvB;AAGE,IAAA,CAAC,EAAEA,cAAc,GAAG,CAHtB;AAIE,IAAA,IAAI,EAAEf;AAJR,IAVF,CARF,CADF;AA4BD,CApD6B,CAA9B;AAsDA,eAAeS,qBAAf","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport const INDICATOR_WRAPPER_WIDTH = 12;\nexport const INDICATOR_WIDTH = 3;\nexport const GAP_BEWTEEN_INDICATOR_TOOLBAR = 4;\nconst BG_COLOR = 'rgba(23, 26, 29, 0.24)';\n\ninterface Props {\n  scale: number;\n  'data-index'?: number;\n  translateY?: number;\n  translateX?: number;\n  style?: React.CSSProperties;\n  onClick: (e: React.MouseEvent) => void;\n  onMouseEnter?: (index: number) => void;\n}\n\nconst Svg = styled.svg<{\n  translateY: number;\n  translateX: number;\n  scale: number;\n}>`\n  transform: translate(${(p) => `${p.translateX / p.scale}px, ${p.translateY / p.scale}px`});\n  opacity: 1;\n  transition: opacity ease-in 0.2s;\n`;\n\nconst IndicatorWrapper = styled.div<{ scale: number }>`\n  position: absolute;\n  display: flex;\n  width: ${(p) => INDICATOR_WRAPPER_WIDTH / p.scale}px;\n  height: ${(p) => INDICATOR_WRAPPER_WIDTH / p.scale}px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InsertButtonIndicator = React.forwardRef((props: Props, ref: React.Ref<HTMLDivElement>) => {\n  const {\n    translateX = 0,\n    translateY = 0,\n    scale = 1,\n    onMouseEnter,\n    ...rest\n  } = props;\n  const indicatorWidth = Math.round(INDICATOR_WIDTH / scale);\n\n  const hanldePreventDefault = React.useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    [],\n  );\n\n  const handleMouseEnter = React.useCallback(() => {\n    const dataIndex = rest['data-index'] || 0;\n    const insertIndex = dataIndex;\n    onMouseEnter && onMouseEnter(insertIndex);\n  }, [onMouseEnter, rest]);\n\n  return (\n    <IndicatorWrapper\n      ref={ref}\n      scale={scale}\n      onMouseDown={hanldePreventDefault}\n      onMouseUp={hanldePreventDefault}\n      onMouseEnter={handleMouseEnter}\n      {...rest}\n    >\n      <Svg\n        width={indicatorWidth}\n        height={indicatorWidth}\n        viewBox={`0 0 ${indicatorWidth}\n        ${indicatorWidth}`}\n        fill=\"none\"\n        translateY={translateY}\n        translateX={translateX}\n        scale={scale}\n      >\n        <circle\n          cx={indicatorWidth / 2}\n          cy={indicatorWidth / 2}\n          r={indicatorWidth / 2}\n          fill={BG_COLOR}\n        />\n      </Svg>\n    </IndicatorWrapper>\n  );\n});\n\nexport default InsertButtonIndicator;\n"],"file":"insertButtonIndicator.js"}