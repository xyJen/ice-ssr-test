{"version":3,"sources":["../../../../../src/bi/components/cornerButton/WholeSelectButton.tsx"],"names":["React","styled","THEME","REALTABLE_PADDING","TOOLBAR_ITEM_SIZE","STICKY_ROW_TOP_HEIGHT","STICKY_TOOLBAR_INDEX_MAP","hooks","useRowIsSticky","useScrollableContainerRect","Icon","div","Wrapper","CornerIcon","props","scale","size","active","isSelected","hoverSelection","onClick","onMouseEnter","onMouseLeave","isSticky","scrollRect","timer","useRef","useState","isHover","setIsHover","style","useMemo","hoverBgColor","blue1","toolbarBgColor","ret","backgroundColor","left","top","width","height","Math","ceil","borderTopLeftRadius","borderLeft","blue3","toolbarBorderColor","borderTop","boxShadow","zIndex","wrapperStyle","visibility","position","transform","cornerButton","Number","isFinite","handleMouseEnter","useCallback","e","current","setTimeout","handleMouseLeave","clearTimeout","useEffect","wrapperRef","preventDefault","stopPropagation"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { THEME } from '../../constants';\nimport {\n  REALTABLE_PADDING,\n  TOOLBAR_ITEM_SIZE,\n  STICKY_ROW_TOP_HEIGHT,\n  STICKY_TOOLBAR_INDEX_MAP,\n} from '../../../utils/constants';\nimport * as hooks from '../../../utils/hooks';\n\nconst {\n  useRowIsSticky,\n  useScrollableContainerRect,\n} = hooks;\n\ninterface Props {\n  scale: number;\n  size?: number;\n  active: boolean;\n  isSelected: boolean;\n  onClick: (e: React.MouseEvent) => void;\n  onMouseEnter: (e: React.MouseEvent) => void;\n  onMouseLeave: (e: React.MouseEvent) => void;\n  hoverSelection: boolean;\n}\n\nconst Icon = styled.div`\n  cursor: default;\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  z-index: 2;\n  cursor: default;\n  box-shadow: rgb(214 214 214) 1px 0px 0px 0px;\n`;\n\n\nconst CornerIcon = (\n  props: Props,\n) => {\n  const {\n    scale,\n    size = TOOLBAR_ITEM_SIZE,\n    active,\n    isSelected,\n    hoverSelection,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n  } = props;\n\n  const [isSticky] = useRowIsSticky();\n  const [scrollRect] = useScrollableContainerRect();\n\n  const timer = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const [isHover, setIsHover] = React.useState<boolean>(false);\n  const style: React.CSSProperties = React.useMemo(() => {\n    const hoverBgColor = isHover ? THEME.blue1 : THEME.toolbarBgColor.default;\n    const ret: React.CSSProperties = {\n      backgroundColor: active ? THEME.blue1 : hoverBgColor,\n      left: `${-(size / scale)}px`,\n      top: `${REALTABLE_PADDING.top / scale }px`,\n      width: `${size / scale}px`,\n      height: `${Math.ceil(size / scale)}px`,\n      borderTopLeftRadius: `${5 / scale}px`,\n      borderLeft: active || isHover ? `1px solid ${THEME.blue3}` : `1px solid ${THEME.toolbarBorderColor}`,\n      borderTop: active || isHover ? `1px solid ${THEME.blue3}` : `1px solid ${THEME.toolbarBorderColor}`,\n      boxShadow: active || hoverSelection ? `${THEME.blue3} 1px 0px 0px 0px` : 'rgb(214 214 214) 1px 0px 0px 0px',\n      zIndex: hoverSelection ? 2 : 5, // 选中工具栏的时候需要降低全选按钮的zindex，否则会导致工具栏高亮左边框缺失，未选中时需要提升，否则滚动时全选按钮右边框会缺失\n    };\n    return ret;\n  }, [isHover, active, size, scale]);\n\n  const wrapperStyle: React.CSSProperties = React.useMemo(() => {\n    if (!isSelected) {\n      return {\n        visibility: 'hidden',\n      };\n    }\n\n    const ret: React.CSSProperties = {\n      visibility: 'visible',\n      left: `${-(size / scale)}px`,\n      top: `${REALTABLE_PADDING.top / scale }px`,\n    };\n\n    if (isSticky) {\n      ret.position = 'fixed';\n      ret.top = `${scrollRect.top + STICKY_ROW_TOP_HEIGHT}px`;\n      ret.transform = `translate(-${size}px, -${size}px)`;\n      ret.zIndex = STICKY_TOOLBAR_INDEX_MAP.cornerButton;\n      ret.left = Number.isFinite(scrollRect.left)\n        ? scrollRect.left\n        : 'unset';\n    }\n\n    return ret;\n  }, [isSelected, isSticky, scale, scrollRect, size]);\n\n  const handleMouseEnter = React.useCallback((e: React.MouseEvent) => {\n    timer.current = setTimeout(() => {\n      onMouseEnter(e);\n      setIsHover(true);\n    }, 300);\n  }, [onMouseEnter]);\n\n  const handleMouseLeave = React.useCallback((e: React.MouseEvent) => {\n    timer.current && clearTimeout(timer.current);\n    onMouseLeave(e);\n    setIsHover(false);\n  }, [onMouseLeave]);\n\n  React.useEffect(() => {\n    timer.current && clearTimeout(timer.current);\n  }, []);\n\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n\n  const preventDefault = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  return (\n    <Wrapper\n      ref={wrapperRef}\n      data-sticky={isSticky}\n      style={wrapperStyle}\n      data-testid=\"table-whole-select-button\"\n    >\n      <Icon\n        style={style}\n        onClick={onClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onMouseDown={preventDefault}\n      />\n    </Wrapper>\n  );\n};\n\nexport default CornerIcon;\n"],"file":"WholeSelectButton.js"}