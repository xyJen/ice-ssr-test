{"version":3,"sources":["../../../../src/bi/components/createToolbarWithTableSelection.tsx"],"names":["React","equal","useSelectingHots","useSelectionData","getToolbarTableSelection","createToolbarWithTableSeletion","Comp","props","controller","table","isHoverCornerToolbar","useState","tbSelection","setTbSelection","hoverCornerToolbar","setHoverCornerToolbar","prevTbSelectionRef","useRef","prevHoverCornerToolbarRef","updater","useCallback","tbSel","current","selectionData$","useMemo","value","selection"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAAqBC,gBAArB,EAAuCC,gBAAvC,QAA+D,oBAA/D;AAGA,SAASC,wBAAT;AA0DA,eAAe,SAASC,8BAAT,CAAwCC,IAAxC,EAA+G;AAC5H,SAAO,UAACC,KAAD,EAAW;AAAA,QACRC,UADQ,GACoCD,KADpC,CACRC,UADQ;AAAA,QACIC,KADJ,GACoCF,KADpC,CACIE,KADJ;AAAA,QACWC,oBADX,GACoCH,KADpC,CACWG,oBADX;;AAAA,0BAEsBV,KAAK,CAACW,QAAN,CAAeP,wBAAwB,CAACI,UAAD,EAAaC,KAAb,CAAvC,CAFtB;AAAA,QAETG,WAFS;AAAA,QAEIC,cAFJ;;AAAA,2BAGoCb,KAAK,CAACW,QAAN,CAAeD,oBAAf,CAHpC;AAAA,QAGTI,kBAHS;AAAA,QAGWC,qBAHX;;AAIhB,QAAMC,kBAAkB,GAAGhB,KAAK,CAACiB,MAAN,CAAaL,WAAb,CAA3B;AACA,QAAMM,yBAAyB,GAAGlB,KAAK,CAACiB,MAAN,CAAaP,oBAAb,CAAlC;AACA,QAAMS,OAAO,GAAGnB,KAAK,CAACoB,WAAN,CAAkB,YAAM;AACtC,UAAMC,KAAK,GAAGjB,wBAAwB,CAACI,UAAD,EAAaC,KAAb,CAAtC;;AACA,UAAI,CAACR,KAAK,CAACe,kBAAkB,CAACM,OAApB,EAA6BD,KAA7B,CAAV,EAA+C;AAC7CR,QAAAA,cAAc,CAACQ,KAAD,CAAd;AACAL,QAAAA,kBAAkB,CAACM,OAAnB,GAA6BD,KAA7B;AACD,OALqC,CAMtC;;;AACA,UAAIH,yBAAyB,CAACI,OAA1B,KAAsCZ,oBAA1C,EAAgE;AAC9DK,QAAAA,qBAAqB,CAACL,oBAAD,CAArB;AACAQ,QAAAA,yBAAyB,CAACI,OAA1B,GAAoCZ,oBAApC;AACD;AACF,KAXe,EAWb,CAACF,UAAD,EAAaE,oBAAb,EAAmCD,KAAnC,CAXa,CAAhB;AAaAN,IAAAA,gBAAgB,CAACK,UAAU,CAACe,cAAZ,EAA4B,IAA5B,EAAkCJ,OAAlC,EAA2C,EAA3C,CAAhB;AAEAjB,IAAAA,gBAAgB,CAACM,UAAD,EAAaW,OAAb,CAAhB;AAEAnB,IAAAA,KAAK,CAACwB,OAAN,CACEL,OADF,EAEE,CAACX,UAAU,CAACiB,KAAX,CAAiBC,SAAlB,EAA6BP,OAA7B,CAFF;AAIA,wBAAO,eAAC,IAAD,eAAUZ,KAAV;AAAiB,MAAA,oBAAoB,EAAEO,kBAAvC;AAA2D,MAAA,SAAS,EAAEF;AAAtE,OAAP;AACD,GA5BD;AA6BD","sourcesContent":["import * as React from 'react';\nimport equal from 'fast-deep-equal';\nimport { Controller, useSelectingHots, useSelectionData } from '@ali/4ever-cangjie';\nimport { ISelectedIndexRange, ITableSelection, TableLocale } from '../types';\nimport Table from '../../mo/models';\nimport { getToolbarTableSelection } from '../utils/getToolbarTableSelection';\n\nexport interface TableColToolbarProps {\n  table: Table;\n  controller: Controller;\n  tableRef: React.RefObject<HTMLTableElement>;\n  positionedAncestorRef: React.RefObject<HTMLDivElement>;\n  scrollContainer: React.RefObject<HTMLDivElement>;\n  zoomContainer: HTMLDivElement;\n  colIndicatorRef: React.RefObject<HTMLTableElement>;\n  isTableSelected: boolean;\n  selection: ITableSelection | null;\n  scale: number;\n  getLastActiveTableKey: () => string | null;\n  onContextMenu: (event) => void;\n  onSelect: (\n    selectedColRange: ISelectedIndexRange,\n    shouldHideContextMenu?: boolean,\n  ) => void;\n  onShortcutEvent: () => void;\n  onColResize: (resizeColIndex: number, delta: number) => void;\n  onGetAllColsNodes: (colsNodes: HTMLDivElement[]) => void;\n  setIsHighlightSelection: (isHighlight: boolean) => void;\n  hoverSelection: ITableSelection | null;\n  setHoverSelection: (selection: ITableSelection | null) => void;\n  isHideDeleteButton?: boolean;\n  isHoverCornerToolbar: boolean;\n  locale?: TableLocale;\n}\n\nexport interface TableRowToolbarProps {\n  table: Table;\n  isSelected: boolean;\n  controller: Controller;\n  zoomContainer: HTMLDivElement;\n  scale: number;\n  tableRef: React.RefObject<HTMLTableElement>;\n  offsetParentRef: React.RefObject<HTMLDivElement>;\n  realTableWrapperRef: React.RefObject<HTMLDivElement>;\n  rowIndicatorRef: React.RefObject<HTMLTableElement>;\n  isSelectWholeTable: boolean;\n  selection: ITableSelection | null;\n  scrollableContainer: Window | HTMLElement | null;\n  onContextMenu: (event) => void;\n  onSelect: (\n    selectedIndexRange: ISelectedIndexRange,\n    shouldHideContextMenu?: boolean,\n  ) => void;\n  onRowResize: (resizeColIndex: number, delta: number) => void;\n  setIsHighlightSelection: (isHighlight: boolean) => void;\n  hoverSelection: ITableSelection | null;\n  setHoverSelection: (selection: ITableSelection | null) => void;\n  getLastActiveTableKey: () => string | null;\n  isHideDeleteButton?: boolean;\n  locale?: TableLocale;\n  isHoverCornerToolbar: boolean;\n}\n\nexport default function createToolbarWithTableSeletion(Comp: React.FC<TableColToolbarProps> | React.FC<TableRowToolbarProps>) {\n  return (props) => {\n    const { controller, table, isHoverCornerToolbar } = props;\n    const [tbSelection, setTbSelection] = React.useState(getToolbarTableSelection(controller, table));\n    const [hoverCornerToolbar, setHoverCornerToolbar] = React.useState(isHoverCornerToolbar);\n    const prevTbSelectionRef = React.useRef(tbSelection);\n    const prevHoverCornerToolbarRef = React.useRef(isHoverCornerToolbar);\n    const updater = React.useCallback(() => {\n      const tbSel = getToolbarTableSelection(controller, table);\n      if (!equal(prevTbSelectionRef.current, tbSel)) {\n        setTbSelection(tbSel);\n        prevTbSelectionRef.current = tbSel;\n      }\n      // 要响应hover到左上角汉堡的状态变化\n      if (prevHoverCornerToolbarRef.current !== isHoverCornerToolbar) {\n        setHoverCornerToolbar(isHoverCornerToolbar);\n        prevHoverCornerToolbarRef.current = isHoverCornerToolbar;\n      }\n    }, [controller, isHoverCornerToolbar, table]);\n\n    useSelectionData(controller.selectionData$, null, updater, []);\n\n    useSelectingHots(controller, updater);\n\n    React.useMemo(\n      updater,\n      [controller.value.selection, updater],\n    );\n    return <Comp {...props} isHoverCornerToolbar={hoverCornerToolbar} selection={tbSelection} />;\n  };\n}\n"],"file":"createToolbarWithTableSelection.js"}