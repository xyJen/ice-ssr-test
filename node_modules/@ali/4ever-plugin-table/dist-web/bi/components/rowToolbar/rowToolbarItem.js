import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { STICKY_ROW_TOP_HEIGHT, TOOLBAR_ITEM_SIZE } from "../../../utils/constants";
import * as hooks from "../../../utils/hooks";
import { RowColToolbarItemRect } from "../rowColToolbarItemRect";
var useScrollableContainerRect = hooks.useScrollableContainerRect;

var RowToolbarItem = function RowToolbarItem(props) {
  var _props$style = props.style,
      propsStyle = _props$style === void 0 ? {} : _props$style,
      index = props.index,
      table = props.table,
      rowHeight = props.rowHeight,
      _props$scale = props.scale,
      scale = _props$scale === void 0 ? 1 : _props$scale,
      isSticky = props.isSticky,
      deleteRange = props.deleteRange,
      selectRanges = props.selectRanges,
      activeRange = props.activeRange,
      width = props.width,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, ["style", "index", "table", "rowHeight", "scale", "isSticky", "deleteRange", "selectRanges", "activeRange", "width", "children"]);

  var _useScrollableContain = useScrollableContainerRect(),
      scrollRect = _useScrollableContain[0];

  var rowsLength = table.nodes.length;

  var style = _extends({
    height: index === 0 ? rowHeight / scale + 1 : rowHeight / scale,
    width: TOOLBAR_ITEM_SIZE / scale,
    borderBottomLeftRadius: index === rowsLength - 1 ? 3 / scale : ''
  }, propsStyle);

  var wrapperStyle = {};
  var borderLeftWidth = 10;

  if (isSticky && index === 0) {
    wrapperStyle.borderLeft = borderLeftWidth + "px solid white";
    wrapperStyle.transform = "translateX(-" + borderLeftWidth + "px)";
    wrapperStyle.position = 'fixed';
    wrapperStyle.top = scrollRect.top + "px";

    if (Number.isFinite(scrollRect.left)) {
      wrapperStyle.left = scrollRect.left - width + "px";
    }

    wrapperStyle.zIndex = 2;
    wrapperStyle.borderTop = STICKY_ROW_TOP_HEIGHT + "px solid white";
    wrapperStyle.borderRight = '1px solid white';
  }

  return /*#__PURE__*/_createElement("div", {
    key: index,
    style: wrapperStyle
  }, /*#__PURE__*/_createElement(RowColToolbarItemRect, _extends({
    index: index,
    type: "row",
    length: rowsLength,
    style: style,
    activeRange: activeRange,
    selectRanges: selectRanges,
    deleteRange: deleteRange
  }, rest), children));
};

export default RowToolbarItem;
//# sourceMappingURL=rowToolbarItem.js.map