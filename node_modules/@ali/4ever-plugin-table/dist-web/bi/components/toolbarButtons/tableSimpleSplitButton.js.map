{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableSimpleSplitButton.tsx"],"names":["React","IconButton","ToolbarSplitCellNormal","TableRole","PluginRoles","splitTableCell","getTable","getTableSelection","TableSimpleSplitButton","props","controller","locale","rest","table","value","selection","isSelectionSupportSplit","useMemo","query","visible","node","isSelectionSupportMerge","title","contextMenuSplit","handleClick","run","tableSplit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAE5B,SACEC,UADF,QAEO,iBAFP;AAGA,SACEC,sBADF,QAEO,gBAFP;AAGA,SAASC,SAAS,IAAIC,WAAtB;AACA,SAASC,cAAT;AACA,OAAOC,QAAP;AACA,OAAOC,iBAAP;;wBAqCY,eAAC,sBAAD,O;;AA9BZ,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAA8D;AAAA,MACnEC,UADmE,GACnCD,KADmC,CACnEC,UADmE;AAAA,MACvDC,MADuD,GACnCF,KADmC,CACvDE,MADuD;AAAA,MAC5CC,IAD4C,iCACnCH,KADmC;;AAE3E,MAAMI,KAAK,GAAGP,QAAQ,CAACI,UAAU,CAACI,KAAZ,CAAtB;AACA,MAAMC,SAAS,GAAGR,iBAAiB,CAACG,UAAD,CAAnC;AACA,MAAMM,uBAAuB,GAAGhB,KAAK,CAACiB,OAAN,CAAc,YAAM;AAClD,WAAO,CAAC,CAACJ,KAAF,IACFH,UAAU,CAACQ,KAAX,CAAiB,yBAAjB,EAA4C;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAEP;AAAvB,KAA5C,CADL,CADkD,CAGpD;AACC,GAJ+B,EAI7B,CAACA,KAAD,EAAQE,SAAR,EAAmBL,UAAnB,CAJ6B,CAAhC;AAKA,MAAMW,uBAAuB,GAAGrB,KAAK,CAACiB,OAAN,CAAc,YAAM;AAClD,WAAO,CAAC,CAACJ,KAAF,IACFH,UAAU,CAACQ,KAAX,CAAiB,yBAAjB,EAA4C;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAEP;AAAvB,KAA5C,CADL,CADkD,CAGpD;AACC,GAJ+B,EAI7B,CAACA,KAAD,EAAQE,SAAR,EAAmBL,UAAnB,CAJ6B,CAAhC;AAKA,MAAMY,KAAK,GAAGX,MAAM,CAACY,gBAArB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBd,IAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2BpB,cAAc,CAACQ,KAAD,CAAzC;AACD,GAFD,CAhB2E,CAoB3E;AACA;AACA;;;AACA,MAAIQ,uBAAuB,IAAI,CAACL,uBAAhC,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED,sBACE,eAAC,UAAD,eACMJ,IADN;AAEE,IAAA,IAAI,MAFN;AAGE,IAAA,KAAK,EAAEU,KAHT;AAIE,IAAA,OAAO,EAAEA,KAJX;AAKE,IAAA,MAAM,EAAC,6BALT;AAME,IAAA,OAAO,EAAEE,WANX;AAOE,IAAA,QAAQ,EAAE,CAACR,uBAPb;AAQE,IAAA,IAAI,EAAEZ,WAAW,CAACsB;AARpB,KADF;AAYD","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../../mo/models';\nimport {\n  IconButton,\n} from '@ali/we-toolbar';\nimport {\n  ToolbarSplitCellNormal,\n} from '@ali/we-design';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { splitTableCell } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\n\nexport interface TableSplitButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function TableSimpleSplitButton(props: TableSplitButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const table = getTable(controller.value) as Table | null;\n  const selection = getTableSelection(controller);\n  const isSelectionSupportSplit = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportSplit', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n  const isSelectionSupportMerge = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportMerge', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n  const title = locale.contextMenuSplit;\n\n  const handleClick = () => {\n    controller.run('onAction', splitTableCell(table));\n  };\n\n  // MergeButton SplitButton 二选一逻辑，非常业务化\n  // 但是条件又属于与表格组件逻辑强关联\n  // 目前除了在此处直接蒸发，没有其他方式实现\n  if (isSelectionSupportMerge || !isSelectionSupportSplit) {\n    return null;\n  }\n\n  return (\n    <IconButton\n      {...rest}\n      icon={<ToolbarSplitCellNormal />}\n      title={title}\n      tooltip={title}\n      testid=\"bi-toolbar-tablesimplesplit\"\n      onClick={handleClick}\n      disabled={!isSelectionSupportSplit}\n      role={PluginRoles.tableSplit}\n    />\n  );\n}\n"],"file":"tableSimpleSplitButton.js"}