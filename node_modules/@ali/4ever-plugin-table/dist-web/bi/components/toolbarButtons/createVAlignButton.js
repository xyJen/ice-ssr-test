import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { IconButton } from '@ali/we-toolbar';
import { capitalize } from 'lodash-es';
import { ToolbarVerticalAlignBottomNormal, ToolbarVerticalAlignMiddleNormal, ToolbarVerticalAlignTopNormal } from '@ali/we-icon';
import { TableRole as PluginRoles } from "../../../utils/role";
import getVAlign from "../../utils/getVAlign";
import getTable from "../../utils/getTable";
import { setTableCellVAlign } from "../../actions";
import getTableSelection from "../../utils/getTableSelection";
export default function createVAlignButton(type) {
  return function VAlignButton(props) {
    var controller = props.controller,
        locale = props.locale;
    var selection = getTableSelection(controller);
    var isActive = getVAlign(controller) === type;
    var handleMouseDown = React.useCallback(function () {
      var table = getTable(controller.value);
      controller.run('onAction', setTableCellVAlign(table, selection, type));
    }, [controller, selection]);
    var title = '';
    var Button;

    switch (type) {
      case 'middle':
        Button = ToolbarVerticalAlignMiddleNormal;
        title = locale == null ? void 0 : locale.vAlignMiddle;
        break;

      case 'top':
        Button = ToolbarVerticalAlignTopNormal;
        title = locale == null ? void 0 : locale.vAlignTop;
        break;

      case 'bottom':
        Button = ToolbarVerticalAlignBottomNormal;
        title = locale == null ? void 0 : locale.vAlignBottom;
        break;

      default:
        Button = ToolbarVerticalAlignTopNormal;
        break;
    }

    return /*#__PURE__*/_createElement(IconButton, {
      active: isActive,
      icon: /*#__PURE__*/_createElement(Button, null),
      title: title,
      tooltip: title,
      testid: "bi-toolbar-table-valign",
      role: "" + PluginRoles.tableVAlign + capitalize(type),
      onClick: handleMouseDown
    });
  };
}
//# sourceMappingURL=createVAlignButton.js.map