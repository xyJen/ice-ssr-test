import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { BorderSet } from '@ali/we-toolbar';
import { TableRole as PluginRoles } from "../../../utils/role";
import { setTableBorder } from "../../actions";
import getTable from "../../utils/getTable";
import getTableSelection from "../../utils/getTableSelection";
import { setColorPanelMode } from '@ali/4ever-plugin-pref';
import { lineMap, DEFAULT_TABLE_BORDER_STYLE } from "../../../utils/constants";
export default function TableBorderSet(props) {
  var controller = props.controller,
      size = props.size,
      showTitle = props.showTitle;
  var value = controller.value;
  var table = getTable(value);
  var selection = getTableSelection(controller);

  var setBorder = function setBorder(_ref) {
    var borderType = _ref.borderType,
        borderColor = _ref.borderColor,
        borderStyle = _ref.borderStyle;
    var val = lineMap[borderStyle].lineType;
    var sz = lineMap[borderStyle].size;

    if (table) {
      controller.run('onAction', setTableBorder(table, selection, borderType, borderColor, sz, val));
    }
  }; // TODO: BorderSet 不支持size=small，先用style覆盖


  var style = {};

  if (props.size === 'small') {
    style.height = 24;
  }

  var getColorPanelMode = React.useCallback(function () {
    var _controller$query;

    return (_controller$query = controller.query('getColorPanelMode')) == null ? void 0 : _controller$query.mode;
  }, [controller]);
  var handleSelectValueChange = React.useCallback(function (mode) {
    controller.run('onAction', setColorPanelMode({
      mode: mode
    }));
  }, [controller]);
  return /*#__PURE__*/_createElement(BorderSet, {
    size: size,
    showTitle: showTitle,
    borderStyles: lineMap // @ts-ignore 组件没有 supportConfigSize 属性
    ,
    supportConfigSize: false,
    onChange: setBorder,
    defaultBorderStyle: DEFAULT_TABLE_BORDER_STYLE,
    borderIconSize: 20,
    onClick: setBorder,
    role: PluginRoles.tableBorder,
    showToggleSelect: true,
    getColorPanelMode: getColorPanelMode,
    onSelectValueChange: handleSelectValueChange
  });
}
//# sourceMappingURL=tableBorderSet.js.map