{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableFillButtonFocus.tsx"],"names":["React","Commands","SplitButton","ColorPanel","ToolbarCellFillColorNormal","PaletteNormal","TableRole","PluginRoles","setTableCellFill","getTable","getTableSelection","useSelectionBarContext","TableFillButtonFocus","props","controller","locale","usePaletteIcon","rest","value","table","selection","context","actions","lastFill","color","startRowIndex","startColIndex","tablePath","document","getPath","key","cellPath","cell","getNodeByPath","payload","data","fill","onChange","run","updateLastFill","handleButtonClick","pathColors","includes","handleCustomVisibleChange","visible","isBlurred","canHide","command","moveToFocus","handleMouseEnter","useCallback","updateCanHide","handleMouseLeave","fillColor","tipText","tableFillColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller, Block, Commands } from '@ali/4ever-cangjie';\nimport { SplitButton } from '@ali/we-toolbar';\nimport { ColorPanel } from '@ali/we-design';\nimport { ToolbarCellFillColorNormal, PaletteNormal } from '@ali/we-icon';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { setTableCellFill } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { useSelectionBarContext } from '@ali/4ever-component';\n\nexport default function TableFillButtonFocus(props) {\n  const { controller, locale, usePaletteIcon, ...rest } = props;\n  const { value } = controller as Controller;\n  const table = getTable(value)!;\n  const selection = getTableSelection(controller);\n  const [context, actions] = useSelectionBarContext();\n  const { lastFill } = context;\n\n  let color;\n  if (selection) {\n    const { startRowIndex, startColIndex } = selection;\n\n    const tablePath = value.document.getPath(table.key)!;\n    const cellPath = [...tablePath, startRowIndex, startColIndex];\n    const cell = value.document.getNodeByPath(cellPath) as Block;\n    if (cell) {\n      const payload = cell.data;\n      color = payload && payload.fill;\n    }\n  }\n\n  const onChange = (fill: string) => {\n    controller.run('onAction', setTableCellFill(table, selection, fill));\n    actions.updateLastFill(fill);\n  };\n\n  const handleButtonClick = () => {\n    controller.run('onAction', setTableCellFill(table, selection, lastFill));\n  };\n\n  const pathColors: string[] = [\n    // 图标下方横线填充色\n    lastFill === '' ? 'transparent' : lastFill!,\n    // 图标下方横线边框色， 当填充为透明或白色时边框色为 inherit\n    ['#FFFFFF', 'transparent'].includes(lastFill!) ? 'inherit' : lastFill!,\n  ];\n\n  const handleCustomVisibleChange = (visible: boolean) => {\n    const { isBlurred } = controller.value;\n    if (isBlurred && !visible) {\n      // fix: focus 到自定义色板输入框然后关闭色板后行内工具栏立即消失\n      controller.run('onCangjieFocus');\n      if (context.canHide) {\n        // fix: focus 到自定义色板输入框然后点击其他区域时行内工具栏不消失\n        controller.command(Commands.moveToFocus);\n      }\n    }\n  };\n\n  // fix: focus 到自定义色板输入框后行内工具栏消失\n  const handleMouseEnter = React.useCallback(\n    () => actions.updateCanHide(false),\n    [actions],\n  );\n\n  const handleMouseLeave = React.useCallback(\n    () => actions.updateCanHide(true),\n    [actions],\n  );\n\n  return (\n    <SplitButton\n      {...rest}\n      testid=\"bi-toolbar-table-fill\"\n      icon={\n        usePaletteIcon ?\n          (\n            <PaletteNormal\n              data-role=\"table_color_fill_panel\"\n            />\n          ) :\n          (\n            <ToolbarCellFillColorNormal\n              pathColors={pathColors}\n              data-role=\"table_color_fill_panel\"\n            />\n          )\n      }\n      tooltip={locale.fillColor?.tipText}\n      overlay={\n        <ColorPanel\n          backgroundColor={color}\n          onBackgroundColorClick={onChange}\n          enableResetButton\n          isFullBackground\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          onCustomVisibleChange={handleCustomVisibleChange}\n        />\n      }\n      onClickLeft={handleButtonClick}\n      role={PluginRoles.tableFillColor}\n    />\n  );\n}\n"],"file":"tableFillButtonFocus.js"}