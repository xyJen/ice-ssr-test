{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableThemeButton.tsx"],"names":["React","IconMenu","ColorPanel","IconPalette","TableRole","PluginRoles","setTableBorder","setTableCellFill","getTable","getTableSelection","lineMap","DEFAULT_BORDER_COLOR","TableThemeButton","props","controller","locale","rest","value","table","selection","useState","isVisible","setVisible","isDisabled","query","backgroundColor","borderColor","handleTableBorderColor","useCallback","color","val","lineType","sz","size","layout","run","handleTableBgColorChange","fill","handleReset","borderAndFillColor","tableTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block } from '@ali/4ever-cangjie';\nimport { IconMenu } from '@ali/we-toolbar';\nimport { ColorPanel } from '@ali/we-design';\nimport { IconPalette } from '@ali/4ever-component';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { setTableBorder, setTableCellFill } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { lineMap, DEFAULT_BORDER_COLOR } from '../../../utils/constants';\n\nexport default function TableThemeButton(props) {\n  const { controller, locale, ...rest } = props;\n  const { value } = controller;\n  const table = getTable(value);\n  const selection = getTableSelection(controller);\n  const [isVisible, setVisible] = React.useState(false);\n\n  let isDisabled = !(selection && table)\n  const { backgroundColor, borderColor } = controller.query('getTableSelectionTheme') || {};\n\n  const handleTableBorderColor = React.useCallback((color) => {\n    const val = lineMap['Thin'].lineType;\n    const sz = lineMap['Thin'].size;\n    const layout = 'all';\n\n    if (table) {\n      controller.run('onAction', setTableBorder(table as Block, selection, layout, color, sz, val));\n    }\n  }, [controller, table, selection]);\n\n  const handleTableBgColorChange = React.useCallback((fill: string) => {\n    controller.run('onAction', setTableCellFill(table, selection, fill));\n  }, [controller, table, selection]);\n\n  const handleReset = React.useCallback(() => {\n    handleTableBorderColor(DEFAULT_BORDER_COLOR);\n    handleTableBgColorChange('');\n    setVisible(false);\n    return false;\n  }, [handleTableBorderColor, handleTableBgColorChange]);\n\n  return (\n    <IconMenu\n      {...rest}\n      tooltip={locale?.borderAndFillColor || 'Border and background color'}\n      testid=\"bi-toolbar-table-theme\"\n      disabled={isDisabled}\n      role={PluginRoles.tableTheme}\n      icon={<IconPalette />}\n      visible={isVisible}\n      onVisibleChange={setVisible}\n      autoClose={false}\n      overlay={\n        <ColorPanel\n          backgroundColor={backgroundColor}\n          onBackgroundColorClick={handleTableBgColorChange}\n          borderColor={borderColor}\n          onBorderColorClick={handleTableBorderColor}\n          enableResetButton\n          onResetButtonClick={handleReset}\n        />\n      }\n    />\n  );\n}\n"],"file":"tableThemeButton.js"}