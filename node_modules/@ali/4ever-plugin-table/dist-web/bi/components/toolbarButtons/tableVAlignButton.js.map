{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableVAlignButton.tsx"],"names":["React","VerticalAlignSelect","TableRole","PluginRoles","getTable","getTableSelection","setTableCellVAlign","getVAlign","DEFAULT_TABLE_ALIGNMENT","SUPPORT_ALIGNMENT","middle","top","bottom","TableVAlignButton","props","controller","locale","rest","alignment","selection","tip","vAlignMiddle","vAlignTop","vAlignBottom","handleChange","vAlign","table","value","run","tableVAlignSelect"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,mBAAT,QAAmD,iBAAnD;AACA,SAASC,SAAS,IAAIC,WAAtB;AACA,OAAOC,QAAP;AACA,OAAOC,iBAAP;AACA,SAASC,kBAAT;AACA,OAAOC,SAAP;AACA,SAASC,uBAAT;AAEA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE,IADgB;AAExBC,EAAAA,GAAG,EAAE,IAFmB;AAGxBC,EAAAA,MAAM,EAAE;AAHgB,CAA1B;AAWA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAA0D;AAAA,MAC/DC,UAD+D,GAC/BD,KAD+B,CAC/DC,UAD+D;AAAA,MACnDC,MADmD,GAC/BF,KAD+B,CACnDE,MADmD;AAAA,MACxCC,IADwC,iCAC/BH,KAD+B;;AAEvE,MAAII,SAAS,GAAGX,SAAS,CAACQ,UAAD,CAAzB;AACAG,EAAAA,SAAS,GAAGT,iBAAiB,CAACS,SAAD,CAAjB,GAA+BA,SAA/B,GAA2CV,uBAAvD;AACA,MAAMW,SAAS,GAAGd,iBAAiB,CAACU,UAAD,CAAnC;AAEA,MAAIK,GAAG,GAAGJ,MAAM,CAACK,YAAjB;;AACA,MAAIH,SAAS,KAAK,KAAlB,EAAyB;AACvBE,IAAAA,GAAG,GAAGJ,MAAM,CAACM,SAAb;AACD,GAFD,MAEO,IAAIJ,SAAS,KAAK,QAAlB,EAA4B;AACjCE,IAAAA,GAAG,GAAGJ,MAAM,CAACO,YAAb;AACD;;AAED,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAA2B;AAC9C,QAAMC,KAAK,GAAGtB,QAAQ,CAACW,UAAU,CAACY,KAAZ,CAAtB;AACAZ,IAAAA,UAAU,CAACa,GAAX,CAAe,UAAf,EAA2BtB,kBAAkB,CAACoB,KAAD,EAAQP,SAAR,EAAmBM,MAAnB,CAA7C;AACD,GAHD;;AAKA,sBACE,eAAC,mBAAD,eACMR,IADN;AAEE,IAAA,KAAK,EAAEG,GAFT;AAGE,IAAA,MAAM,EAAC,mBAHT;AAIE,IAAA,YAAY,EAAEZ,uBAJhB;AAKE,IAAA,KAAK,EAAEU,SALT;AAME,IAAA,QAAQ,EAAE,CAACC,SANb;AAOE,IAAA,QAAQ,EAAEK,YAPZ;AAQE,IAAA,IAAI,EAAErB,WAAW,CAAC0B;AARpB,KADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { VerticalAlignSelect, VerticalAlign } from '@ali/we-toolbar';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { setTableCellVAlign } from '../../actions';\nimport getVAlign from '../../utils/getVAlign';\nimport { DEFAULT_TABLE_ALIGNMENT } from '../../constants';\n\nconst SUPPORT_ALIGNMENT = {\n  middle: true,\n  top: true,\n  bottom: true,\n};\n\nexport interface TableVAlignButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function TableVAlignButton(props: TableVAlignButtonProps) {\n  const { controller, locale, ...rest } = props;\n  let alignment = getVAlign(controller);\n  alignment = SUPPORT_ALIGNMENT[alignment] ? alignment : DEFAULT_TABLE_ALIGNMENT;\n  const selection = getTableSelection(controller);\n\n  let tip = locale.vAlignMiddle;\n  if (alignment === 'top') {\n    tip = locale.vAlignTop;\n  } else if (alignment === 'bottom') {\n    tip = locale.vAlignBottom;\n  }\n\n  const handleChange = (vAlign: VerticalAlign) => {\n    const table = getTable(controller.value);\n    controller.run('onAction', setTableCellVAlign(table, selection, vAlign));\n  };\n\n  return (\n    <VerticalAlignSelect\n      {...rest}\n      title={tip}\n      testid=\"bi-toolbar-valign\"\n      defaultValue={DEFAULT_TABLE_ALIGNMENT}\n      value={alignment as VerticalAlign}\n      disabled={!selection}\n      onChange={handleChange}\n      role={PluginRoles.tableVAlignSelect}\n    />\n  );\n}\n"],"file":"tableVAlignButton.js"}