import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { TableThemeButton as TableThemeButtonComp } from '@ali/4ever-component';
import { setTableBorder } from "../../../actions";
import getTable from "../../../utils/getTable";
import getTableSelection from "../../../utils/getTableSelection";
import { setTableCellFill } from "../../../actions";
import { lineMap, DEFAULT_BORDER_COLOR } from "../../../../utils/constants";
import { TableRole as PluginRoles } from "../../../../utils/role";
export default function TableThemeButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var value = controller.value;
  var table = getTable(value);
  var selection = getTableSelection(controller);
  var isDisabled = !(selection && table);

  var _ref = controller.query('getTableSelectionTheme') || {},
      backgroundColor = _ref.backgroundColor,
      borderColor = _ref.borderColor;

  var handleTableBorderColor = useCallback(function (color) {
    var val = lineMap['Thin'].lineType;
    var sz = lineMap['Thin'].size;
    var layout = 'all';

    if (table) {
      controller.run('onAction', setTableBorder(table, selection, layout, color, sz, val));
    }
  }, [controller, table, selection]);
  var handleTableBgColorChange = React.useCallback(function (fill) {
    controller.run('onAction', setTableCellFill(table, selection, fill));
  }, [controller, table, selection]);
  return /*#__PURE__*/_createElement(TableThemeButtonComp, _extends({
    onTableBorderColorChange: handleTableBorderColor,
    onTableBgColorChange: handleTableBgColorChange,
    defaultTableBgColor: "",
    defaultTableBorderColor: DEFAULT_BORDER_COLOR,
    disabled: isDisabled,
    tableBgColor: backgroundColor,
    tableBorderColor: borderColor,
    role: PluginRoles.tableTheme,
    title: (locale == null ? void 0 : locale.borderAndFillColor) || 'Border and background color'
  }, rest));
}
//# sourceMappingURL=tableThemeButton.js.map