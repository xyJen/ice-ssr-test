{"version":3,"sources":["../../../../../../src/bi/components/toolbarButtons/next/tablePickerButton.tsx"],"names":["React","TablePanel","IconMenu","IconTable","TableRole","PluginRoles","isSelectionInTableCell","insertTable","TablePickerButton","props","controller","locale","tooltipProp","tooltip","rest","value","tableSelection","query","isDisabled","selection","isBlurred","data","edgeSelection","useState","isOverlayVisible","setOverlayVisible","handleChange","useCallback","row","col","run","tablePanel","useMemo","title","quickInsertTitle","tablePicker"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,EAAyCC,SAAzC,QAA0D,sBAA1D;AACA,SAASC,SAAS,IAAIC,WAAtB;AAEA,OAAOC,sBAAP;AACA,SAASC,WAAT;;yBAgDY,eAAC,SAAD,O;;AAzCZ,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAA0D;AAAA,MAC/DC,UAD+D,GACTD,KADS,CAC/DC,UAD+D;AAAA,MACnDC,MADmD,GACTF,KADS,CACnDE,MADmD;AAAA,MAClCC,WADkC,GACTH,KADS,CAC3CI,OAD2C;AAAA,MAClBC,IADkB,iCACTL,KADS;;AAAA,MAE/DM,KAF+D,GAErDL,UAFqD,CAE/DK,KAF+D;AAGvE,MAAMC,cAAc,GAAGN,UAAU,CAACO,KAAX,CAAiB,mBAAjB,CAAvB,CAHuE,CAIvE;;AACA,MAAMC,UAAU,GAAGH,KAAK,CAACI,SAAN,CAAgBC,SAAhB,IACdL,KAAK,CAACM,IAAN,CAAWC,aADG,IAEdN,cAFc,IAGdV,sBAAsB,CAACS,KAAD,CAHR,IAIdL,UAAU,CAACO,KAAX,CAAiB,mBAAjB,CAJc,IAKdP,UAAU,CAACO,KAAX,CAAiB,sBAAjB,CALc,IAMdP,UAAU,CAACO,KAAX,CAAiB,yBAAjB,CANL;;AALuE,wBAazBjB,KAAK,CAACuB,QAAN,CAAe,KAAf,CAbyB;AAAA,MAahEC,gBAbgE;AAAA,MAa9CC,iBAb8C;;AAevE,MAAMC,YAAY,GAAG1B,KAAK,CAAC2B,WAAN,CAAkB,UAACC,GAAD,EAAcC,GAAd,EAA8B;AACnEnB,IAAAA,UAAU,CAACoB,GAAX,CAAe,UAAf,EAA2BvB,WAAW,CAACqB,GAAD,EAAMC,GAAN,CAAtC;AACAJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHoB,EAGlB,CAACf,UAAD,CAHkB,CAArB;;AAfuE,0BAqBrE,eAAC,UAAD;AACE,IAAA,GAAG,EAAE,EADP;AAEE,IAAA,GAAG,EAAE,EAFP;AAGE,IAAA,MAAM,EAAEgB;AAHV,IArBqE;;AAoBvE,MAAMK,UAAU,GAAG/B,KAAK,CAACgC,OAAN,CAAc;AAAA;AAAA,GAAd,EAMhB,CAACN,YAAD,CANgB,CAAnB;AAQA,MAAMb,OAAO,GAAGb,KAAK,CAACgC,OAAN,CAAc;AAAA;AAC5BC,MAAAA,KAAK,EAAEtB,MAAF,oBAAEA,MAAM,CAAEuB;AADa,OAEzBtB,WAFyB;AAAA,GAAd,EAGZ,EAHY,CAAhB;AAKA,sBACE,eAAC,QAAD;AACE,IAAA,MAAM,EAAC,yBADT;AAEE,IAAA,cAAc,EAAEY,gBAFlB;AAGE,IAAA,eAAe,EAAEC,iBAHnB;AAIE,IAAA,OAAO,EAAEM,UAJX;AAKE,IAAA,QAAQ,EAAEb,UALZ;AAME,IAAA,IAAI,EAAEb,WAAW,CAAC8B,WANpB;AAOE,IAAA,IAAI,OAPN;AAQE,IAAA,KAAK,EAAExB,MAAF,oBAAEA,MAAM,CAAEuB,gBARjB;AASE,IAAA,OAAO,EAAErB;AATX,KAUMC,IAVN,EADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { TablePanel } from '@ali/we-design';\nimport { IconMenu, IToolbarButtonConfig, IconTable } from '@ali/4ever-component';\nimport { TableRole as PluginRoles } from '../../../../utils/role';\n\nimport isSelectionInTableCell from '../../../utils/isSelectionInTableCell';\nimport { insertTable } from '../../../actions';\n\nexport interface TablePickerButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nexport default function TablePickerButton(props: TablePickerButtonProps) {\n  const { controller, locale, tooltip: tooltipProp, ...rest } = props;\n  const { value } = controller;\n  const tableSelection = controller.query('hasTableSelection');\n  // @ts-ignore\n  const isDisabled = value.selection.isBlurred\n    || value.data.edgeSelection\n    || tableSelection\n    || isSelectionInTableCell(value)\n    || controller.query('isSelectionInLink')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInListSymbol');\n\n  const [isOverlayVisible, setOverlayVisible] = React.useState(false);\n\n  const handleChange = React.useCallback((row: number, col: number) => {\n    controller.run('onAction', insertTable(row, col));\n    setOverlayVisible(false);\n  }, [controller]);\n\n  const tablePanel = React.useMemo(() => (\n    <TablePanel\n      row={10}\n      col={10}\n      onPick={handleChange}\n    />\n  ), [handleChange]);\n\n  const tooltip = React.useMemo(() => ({\n    title: locale?.quickInsertTitle,\n    ...tooltipProp,\n  }), []);\n\n  return (\n    <IconMenu\n      testid=\"bi-toolbar-table-picker\"\n      overlayVisible={isOverlayVisible}\n      onVisibleChange={setOverlayVisible}\n      overlay={tablePanel}\n      disabled={isDisabled}\n      role={PluginRoles.tablePicker}\n      icon={<IconTable />}\n      title={locale?.quickInsertTitle}\n      tooltip={tooltip}\n      {...rest}\n    />\n  );\n}\n"],"file":"tablePickerButton.js"}