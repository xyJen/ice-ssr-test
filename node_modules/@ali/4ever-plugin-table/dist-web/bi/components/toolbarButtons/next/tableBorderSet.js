import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { TableRole as PluginRoles } from "../../../../utils/role";
import { setTableBorder } from "../../../actions";
import getTable from "../../../utils/getTable";
import getTableSelection from "../../../utils/getTableSelection";
import { BorderSet } from '@ali/4ever-component';
import { lineMap } from "../../../../utils/constants";
export default function TableBorderButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var value = controller.value;
  var table = getTable(value);
  var selection = getTableSelection(controller);
  var setBorder = useCallback(function (_ref) {
    var layout = _ref.layout,
        color = _ref.color,
        style = _ref.style;
    var val = lineMap[style].lineType;
    var sz = lineMap[style].size;

    if (table) {
      controller.run('onAction', setTableBorder(table, selection, layout, color, sz, val));
    }
  }, [controller, table, selection]);
  return /*#__PURE__*/_createElement(BorderSet, _extends({
    onChange: setBorder,
    onLeftClick: setBorder,
    role: PluginRoles.tableBorder
  }, rest));
}
//# sourceMappingURL=tableBorderSet.js.map