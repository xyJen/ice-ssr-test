{"version":3,"sources":["../../../../../../src/bi/components/toolbarButtons/next/tableVAlignButton.tsx"],"names":["React","TableRole","PluginRoles","getTable","getTableSelection","setTableCellVAlign","getVAlign","VerticalAlignSelect","SUPPORT_ALIGNMENT","middle","top","bottom","DEFAULT_TABLE_ALIGNMENT","TableVAlignButton","props","controller","locale","options","rest","alignment","selection","tip","vAlignMiddle","vAlignTop","vAlignBottom","handleChange","useCallback","vAlign","table","value","run","selectOptions","useMemo","title","icon","tableVAlignSelect"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { TableRole as PluginRoles } from '../../../../utils/role';\nimport getTable from '../../../utils/getTable';\nimport getTableSelection from '../../../utils/getTableSelection';\nimport { setTableCellVAlign } from '../../../actions';\nimport getVAlign from '../../../utils/getVAlign';\nimport { IToolbarButtonConfig, VerticalAlign, VerticalAlignSelect } from '@ali/4ever-component';\n\nconst SUPPORT_ALIGNMENT = {\n  middle: true,\n  top: true,\n  bottom: true,\n};\n\nexport const DEFAULT_TABLE_ALIGNMENT = 'middle';\n\nexport interface TableVAlignButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale: Record<string, string>;\n  options?: Partial<Record<VerticalAlign, { title?: string, icon?: React.ReactElement }>>;\n}\n\nexport default function TableVAlignButton(props: TableVAlignButtonProps) {\n  const { controller, locale, options, ...rest } = props;\n  let alignment: VerticalAlign = getVAlign(controller) as VerticalAlign;\n  alignment = SUPPORT_ALIGNMENT[alignment] ? alignment : DEFAULT_TABLE_ALIGNMENT;\n  const selection = getTableSelection(controller);\n\n  let tip = locale.vAlignMiddle;\n  if (alignment === 'top') {\n    tip = locale.vAlignTop;\n  } else if (alignment === 'bottom') {\n    tip = locale.vAlignBottom;\n  }\n\n  const handleChange = React.useCallback((vAlign: VerticalAlign) => {\n    const table = getTable(controller.value);\n    controller.run('onAction', setTableCellVAlign(table, selection, vAlign));\n  }, [selection]);\n\n  const selectOptions = React.useMemo<React.ComponentProps<typeof VerticalAlignSelect>['options']>(() => ({\n    top: {\n      title: options?.top?.title || locale.vAlignTop,\n      icon: options?.top?.icon,\n    },\n    middle: {\n      title: options?.middle?.title || locale.vAlignMiddle,\n      icon: options?.middle?.icon,\n    },\n    bottom: {\n      title: options?.bottom?.title || locale.vAlignBottom,\n      icon: options?.bottom?.icon,\n    },\n  }), [locale, options])\n\n  return (\n    <VerticalAlignSelect\n      tooltip={tip}\n      testid=\"bi-toolbar-valign\"\n      options={selectOptions}\n      value={alignment}\n      disabled={!selection}\n      onChange={handleChange}\n      role={PluginRoles.tableVAlignSelect}\n      {...rest}\n    />\n  );\n}\n"],"file":"tableVAlignButton.js"}