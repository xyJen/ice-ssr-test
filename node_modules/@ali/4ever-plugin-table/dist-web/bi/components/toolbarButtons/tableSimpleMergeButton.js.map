{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableSimpleMergeButton.tsx"],"names":["React","Table","IconButton","ToolbarMergeCellNormal","TableRole","PluginRoles","mergeTableCells","getTable","getTableSelection","TableSimpleMergeButton","props","controller","locale","rest","table","value","selection","isSelectionSupportSplit","useMemo","query","visible","node","isSelectionSupportMerge","title","contextMenuMerge","handleClick","run","tableMerge","needRender","document","getNode","key","isTable","tableRowCount","nodes","length","tableColCount","data","colsWidth","startRowIndex","startColIndex","endRowIndex","endColIndex","isSelectWholeRow","isSelectWholeCol","isSelectWholeTable","isSelectSingleCell"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../../mo/models';\nimport {\n  IconButton,\n} from '@ali/we-toolbar';\nimport {\n  ToolbarMergeCellNormal,\n} from '@ali/we-design';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { mergeTableCells } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\n\nexport interface TableMergeButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function TableSimpleMergeButton(props: TableMergeButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const table = getTable(controller.value) as Table | null;\n  const selection = getTableSelection(controller);\n  const isSelectionSupportSplit = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportSplit', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n  const isSelectionSupportMerge = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportMerge', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n\n  const title = locale.contextMenuMerge;\n\n  const handleClick = () => {\n    controller.run('onAction', mergeTableCells(table));\n  };\n\n  // MergeButton SplitButton 二选一逻辑，非常业务化\n  // 但是条件又属于与表格组件逻辑强关联\n  // 目前除了在此处直接蒸发，没有其他方式实现\n  if (!isSelectionSupportMerge && isSelectionSupportSplit) {\n    return null;\n  }\n\n  return (\n    <IconButton\n      {...rest}\n      icon={<ToolbarMergeCellNormal />}\n      title={title}\n      tooltip={title}\n      testid=\"bi-toolbar-tablesimplemerge\"\n      onClick={handleClick}\n      disabled={!isSelectionSupportMerge}\n      role={PluginRoles.tableMerge}\n    />\n  );\n}\n\nTableSimpleMergeButton.needRender = function (controller: Controller) {\n  const selection = getTableSelection(controller);\n  if (!selection) return false;\n  const node = controller.value.document.getNode(selection.key);\n  if (!(node && Table.isTable(node))) return false;\n  const tableRowCount = node.nodes.length - 1;\n  const tableColCount = (node.data.colsWidth || []).length - 1;\n\n  const { startRowIndex, startColIndex, endRowIndex, endColIndex } = selection;\n\n  const isSelectWholeRow = startColIndex === 0 && endColIndex >= tableColCount;\n\n  const isSelectWholeCol = startRowIndex === 0 && endRowIndex >= tableRowCount;\n\n  const isSelectWholeTable = isSelectWholeRow && isSelectWholeCol;\n\n  const isSelectSingleCell = startColIndex === endColIndex && startRowIndex === endRowIndex;\n\n  if (isSelectWholeTable || isSelectSingleCell) {\n    return false;\n  }\n  return true;\n};\n"],"file":"tableSimpleMergeButton.js"}