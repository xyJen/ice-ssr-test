{"version":3,"sources":["../../../../../src/bi/components/tableSelection/index.tsx"],"names":["React","useEffect","useState","equal","useSelectingHots","useSelectionData","THEME","SelectionRect","usePixelColsWidth","TableSelection","props","node","controller","propSelection","selection","isHighlight","tableRef","scale","getTableSelection","forceUpdate","colsWidth","setSelection","selectionData$","tempSelection","onHots","useCallback","hots","some","hot","key","hasNode","tableSelection","backgroundColor","red0","blue0","borderColor","red1","blue3"],"mappings":"AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,QAFF,QAGO,OAHP;qBAC4B,a;AAG5B,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,SAA0BC,gBAA1B,EAA4CC,gBAA5C,QAAoE,oBAApE;AACA,SAASC,KAAT;AAEA,OAAOC,aAAP;AACA,SAASC,iBAAT;;AAaA,IAAMC,cAA6C,GAAG,SAAhDA,cAAgD,CAACC,KAAD,EAAW;AAAA,MAE7DC,IAF6D,GAU3DD,KAV2D,CAE7DC,IAF6D;AAAA,MAG7DC,UAH6D,GAU3DF,KAV2D,CAG7DE,UAH6D;AAAA,MAIlDC,aAJkD,GAU3DH,KAV2D,CAI7DI,SAJ6D;AAAA,MAK7DC,WAL6D,GAU3DL,KAV2D,CAK7DK,WAL6D;AAAA,MAM7DC,QAN6D,GAU3DN,KAV2D,CAM7DM,QAN6D;AAAA,qBAU3DN,KAV2D,CAO7DO,KAP6D;AAAA,MAO7DA,KAP6D,6BAOrD,CAPqD;AAAA,MAQ7DC,iBAR6D,GAU3DR,KAV2D,CAQ7DQ,iBAR6D;AAAA,MAS7DC,WAT6D,GAU3DT,KAV2D,CAS7DS,WAT6D;;AAAA,2BAc3CX,iBAAiB,EAd0B;AAAA,MAcxDY,SAdwD;;AAAA,kBAgB7BlB,QAAQ,CAAyBW,aAAzB,CAhBqB;AAAA,MAgBxDC,SAhBwD;AAAA,MAgB7CO,YAhB6C;;AAkB/DpB,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,YAAY,CAACR,aAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIAR,EAAAA,gBAAgB,CAACO,UAAU,CAACU,cAAZ,EAA4B,IAA5B,EAAkC,YAAM;AACtD,QAAMC,aAAa,GAAGL,iBAAiB,EAAvC;;AACA,QAAI,CAACf,KAAK,CAACW,SAAD,EAAYS,aAAZ,CAAV,EAAsC;AACpCF,MAAAA,YAAY,CAACE,aAAD,CAAZ;AACD;AACF,GALe,EAKb,EALa,CAAhB;AAOA,MAAMC,MAAM,GAAGxB,KAAK,CAACyB,WAAN,CAAkB,UAACC,IAAD,EAAiB;AAChD;AACA,QACEA,IAAI,CAACC,IAAL,CACE,UAACC,GAAD;AAAA,aAASjB,IAAI,CAACkB,GAAL,KAAaD,GAAG,CAACjB,IAAJ,CAASkB,GAAtB,IAA6BlB,IAAI,CAACmB,OAAL,CAAaF,GAAG,CAACjB,IAAJ,CAASkB,GAAtB,CAAtC;AAAA,KADF,CADF,EAIE;AACA,UAAME,cAAc,GAAGb,iBAAiB,EAAxC;AACAG,MAAAA,YAAY,CAACU,cAAD,CAAZ;AACD;AACF,GAVc,EAUZ,CAACpB,IAAD,EAAOO,iBAAP,CAVY,CAAf;AAYAd,EAAAA,gBAAgB,CAACQ,UAAD,EAAaY,MAAb,CAAhB;AAEA,sBACE,eAAC,aAAD;AACE,IAAA,MAAM,EAAC,yBADT;AAEE,IAAA,KAAK,EAAEb,IAFT;AAGE,IAAA,QAAQ,EAAEK,QAHZ;AAIE,IAAA,cAAc,EAAEF,SAJlB;AAKE,IAAA,KAAK,EAAEG,KALT;AAME,IAAA,SAAS,EAAEG,SANb;AAOE,IAAA,KAAK,EAAE;AACLY,MAAAA,eAAe,EAAEjB,WAAW,GAAGT,KAAK,CAAC2B,IAAT,GAAgB3B,KAAK,CAAC4B,KAD7C;AAELC,MAAAA,WAAW,EAAEpB,WAAW,GAAGT,KAAK,CAAC8B,IAAT,GAAgB9B,KAAK,CAAC+B;AAFzC,KAPT;AAWE,IAAA,WAAW,EAAElB;AAXf,IADF;AAeD,CA1DD;;AA4DA,eAAeV,cAAf","sourcesContent":["import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport equal from 'fast-deep-equal';\nimport Table from '../../../mo/models';\nimport { Controller, Hot, useSelectingHots, useSelectionData } from '@ali/4ever-cangjie';\nimport { THEME } from '../../constants';\nimport { ITableSelection } from '../../types';\nimport SelectionRect from './selectionRect';\nimport { usePixelColsWidth } from '../../../utils/hooks/usePixelColsWidth';\n\ninterface TableSelectionProps {\n  node: Table;\n  controller: Controller;\n  selection: ITableSelection | null;\n  tableRef: React.RefObject<HTMLTableElement>;\n  isHighlight?: boolean;\n  scale?: number;\n  getTableSelection: () => ITableSelection | null;\n  forceUpdate?: number;\n}\n\nconst TableSelection: React.FC<TableSelectionProps> = (props) => {\n  const {\n    node,\n    controller,\n    selection: propSelection,\n    isHighlight,\n    tableRef,\n    scale = 1,\n    getTableSelection,\n    forceUpdate,\n  } = props;\n\n  console.log('TableSelection Rerender');\n\n  const [colsWidth] = usePixelColsWidth();\n\n  const [selection, setSelection] = useState<ITableSelection | null>(propSelection);\n\n  useEffect(() => {\n    setSelection(propSelection);\n  }, [propSelection]);\n\n  useSelectionData(controller.selectionData$, null, () => {\n    const tempSelection = getTableSelection();\n    if (!equal(selection, tempSelection)) {\n      setSelection(tempSelection);\n    }\n  }, []);\n\n  const onHots = React.useCallback((hots: Hot[]) => {\n    // PERF: 非当前表格热区不处理\n    if (\n      hots.some(\n        (hot) => node.key === hot.node.key || node.hasNode(hot.node.key),\n      )\n    ) {\n      const tableSelection = getTableSelection();\n      setSelection(tableSelection);\n    }\n  }, [node, getTableSelection]);\n\n  useSelectingHots(controller, onHots);\n\n  return (\n    <SelectionRect\n      testid=\"table-selection-wrapper\"\n      table={node}\n      tableRef={tableRef}\n      tableSelection={selection}\n      scale={scale}\n      colsWidth={colsWidth}\n      style={{\n        backgroundColor: isHighlight ? THEME.red0 : THEME.blue0,\n        borderColor: isHighlight ? THEME.red1 : THEME.blue3,\n      }}\n      forceUpdate={forceUpdate}\n    />\n  );\n};\n\nexport default TableSelection;\n"],"file":"index.js"}