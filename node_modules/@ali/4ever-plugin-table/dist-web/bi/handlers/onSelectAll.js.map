{"version":3,"sources":["../../../../src/bi/handlers/onSelectAll.ts"],"names":["equal","Commands","Table","isEmptyParagraph","isSelectionInTableCell","isSelectWholeTable","isTableCell","tableSelection","selectTable","isEmptyCell","cell","nodes","length","isSelectWholeCell","controller","value","selection","document","isCollapsed","cellSelection","moveToRangeOfNode","sort","onSelectAll","next","event","tbSelection","query","table","getNode","key","node","command","moveToRangeOfDocument","startBlock","getClosest","preventDefault","isTable","run"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,SAASC,QAAT,QAAqC,oBAArC;AACA,OAAOC,KAAP;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,sBAAP;AACA,OAAOC,kBAAP;AACA,SAASC,WAAT;AACA,OAAOC,cAAP;AACA,SAASC,WAAT;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAAsC;AACpC,SAAOA,IAAI,CAACC,KAAL,CAAWC,MAAX,KAAsB,CAAtB,IAA2BT,gBAAgB,CAACO,IAAI,CAACC,KAAL,CAAW,CAAX,CAAD,CAAlD;AACD;;AAED,SAASE,iBAAT,CAA2BC,UAA3B,EAAmDJ,IAAnD,EAAoE;AAAA,0BAClCI,UAAU,CAACC,KADuB;AAAA,MAC1DC,SAD0D,qBAC1DA,SAD0D;AAAA,MAC/CC,QAD+C,qBAC/CA,QAD+C;;AAElE,MAAID,SAAS,CAACE,WAAV,IAAyB,CAACT,WAAW,CAACC,IAAD,CAAzC,EAAiD;AAC/C,WAAO,KAAP;AACD;;AACD,MAAMS,aAAa,GAAGH,SAAS,CAACI,iBAAV,CAA4BV,IAA5B,EAAkCI,UAAlC,CAAtB;AACA,SAAOd,KAAK,CAACmB,aAAa,CAACE,IAAd,CAAmBJ,QAAnB,CAAD,EAA+BD,SAAS,CAACK,IAAV,CAAeJ,QAAf,CAA/B,CAAZ;AACD;;AAED,eAAe,SAASK,WAAT,CAAqBR,UAArB,EAA6CS,IAA7C,EAAmDC,KAAnD,EAA2D;AACxE,MAAMC,WAAW,GAAGX,UAAU,CAACY,KAAX,CAAiBnB,cAAjB,CAApB,CADwE,CAExE;;AACA,MAAIkB,WAAJ,EAAiB;AACf,QAAME,KAAK,GAAGb,UAAU,CAACC,KAAX,CAAiBE,QAAjB,CAA0BW,OAA1B,CAAkCH,WAAW,CAACI,GAA9C,CAAd;;AACA,QAAIf,UAAU,CAACY,KAAX,CAAiBrB,kBAAjB,EAAqC;AAAEyB,MAAAA,IAAI,EAAEH;AAAR,KAArC,CAAJ,EAA2D;AACzDb,MAAAA,UAAU,CAACiB,OAAX,CAAmB9B,QAAQ,CAAC+B,qBAA5B;AACA,aAAOlB,UAAP;AACD;AACF;;AATuE,MAWhEC,KAXgE,GAWtDD,UAXsD,CAWhEC,KAXgE;AAYxE,MAAI,CAACX,sBAAsB,CAACW,KAAD,CAA3B,EAAoC,OAAOQ,IAAI,EAAX;AAZoC,MAchEN,QAdgE,GAcvCF,KAduC,CAchEE,QAdgE;AAAA,MActDgB,UAdsD,GAcvClB,KAduC,CActDkB,UAdsD;;AAexE,MAAI,CAACA,UAAL,EAAiB;AACf,WAAOV,IAAI,EAAX;AACD;;AACD,MAAMb,IAAI,GAAGO,QAAQ,CAACiB,UAAT,CAAoBD,UAAU,CAACJ,GAA/B,EAAoCvB,WAApC,CAAb;;AACA,MAAI,CAACI,IAAL,EAAW;AACT,WAAOa,IAAI,EAAX;AACD;;AAEDC,EAAAA,KAAK,QAAL,YAAAA,KAAK,CAAEW,cAAP,GAvBwE,CAwBxE;;AACA,MAAItB,iBAAiB,CAACC,UAAD,EAAaJ,IAAb,CAArB,EAAyC;AACvC,QAAMiB,MAAK,GAAGV,QAAQ,CAACiB,UAAT,CAAoBxB,IAAI,CAACmB,GAAzB,EAA8B3B,KAAK,CAACkC,OAApC,CAAd;;AACA,QAAIT,MAAJ,EAAW;AACT,aAAOb,UAAU,CAACuB,GAAX,CAAe,UAAf,EAA2B7B,WAAW,CAACmB,MAAD,CAAtC,CAAP;AACD;AACF;;AAED,SAAOb,UAAU,CAACiB,OAAX,CAAmB9B,QAAQ,CAACmB,iBAA5B,EAA+CV,IAA/C,CAAP;AACD","sourcesContent":["import equal from 'fast-deep-equal';\nimport { Commands, Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport { isEmptyParagraph } from '@ali/4ever-utils';\nimport isSelectionInTableCell from '../utils/isSelectionInTableCell';\nimport isSelectWholeTable from '../queries/isSelectWholeTable';\nimport { isTableCell } from '../types';\nimport tableSelection from '../queries/tableSelection';\nimport { selectTable } from '../actions';\n\nfunction isEmptyCell(cell: TableCell) {\n  return cell.nodes.length === 1 && isEmptyParagraph(cell.nodes[0]);\n}\n\nfunction isSelectWholeCell(controller: Controller, cell: TableCell) {\n  const { selection, document } = controller.value;\n  if (selection.isCollapsed && !isEmptyCell(cell)) {\n    return false;\n  }\n  const cellSelection = selection.moveToRangeOfNode(cell, controller);\n  return equal(cellSelection.sort(document), selection.sort(document));\n}\n\nexport default function onSelectAll(controller: Controller, next, event?) {\n  const tbSelection = controller.query(tableSelection);\n  // 选中表格时，cmd + a 选择整个文档\n  if (tbSelection) {\n    const table = controller.value.document.getNode(tbSelection.key) as Table;\n    if (controller.query(isSelectWholeTable, { node: table })) {\n      controller.command(Commands.moveToRangeOfDocument);\n      return controller;\n    }\n  }\n\n  const { value } = controller;\n  if (!isSelectionInTableCell(value)) return next();\n\n  const { document, startBlock } = value;\n  if (!startBlock) {\n    return next();\n  }\n  const cell = document.getClosest(startBlock.key, isTableCell) as TableCell;\n  if (!cell) {\n    return next();\n  }\n\n  event?.preventDefault();\n  // 选中单元格时，cmd + a 选择整个表格\n  if (isSelectWholeCell(controller, cell)) {\n    const table = document.getClosest(cell.key, Table.isTable);\n    if (table) {\n      return controller.run('onAction', selectTable(table));\n    }\n  }\n\n  return controller.command(Commands.moveToRangeOfNode, cell);\n}\n"],"file":"onSelectAll.js"}