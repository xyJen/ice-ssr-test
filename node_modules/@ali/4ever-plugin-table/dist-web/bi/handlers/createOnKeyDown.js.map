{"version":3,"sources":["../../../../src/bi/handlers/createOnKeyDown.ts"],"names":["hotkeys","isKeyHotkey","isTable","onTab","onArrowUp","onArrowRight","onArrowDown","onArrowLeft","onSelectAll","onDelete","onEmptyDelete","onEnter","isTabHotKey","isArrowUpHotKey","isArrowRightHotKey","isArrowDownHotKey","isArrowLeftHotKey","isSelectAllHotKey","isBackspaceHotKey","isDeleteHotKey","isEnterHotKey","shouldPreventDelete","event","isDeleteLineForward","isDeleteLineBackward","isDeleteForward","isDeleteBackward","isDeleteWordForward","isDeleteWordBackward","createOnKeyDown","config","onKeyDown","controller","next","value","document","startBlock","endBlock","startTable","getClosest","key","endTable","isCopy","preventDefault"],"mappings":"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","sourcesContent":["import { Controller, hotkeys } from '@ali/4ever-cangjie';\nimport { isKeyHotkey } from 'is-hotkey';\nimport { isTable, TableConfig } from '../types';\nimport onTab from './onTab';\nimport onArrowUp from './onArrowUp';\nimport onArrowRight from './onArrowRight';\nimport onArrowDown from './onArrowDown';\nimport onArrowLeft from './onArrowLeft';\nimport onSelectAll from './onSelectAll';\nimport onDelete from './onDelete';\nimport onEmptyDelete from './onEmptyDelete';\nimport onEnter from './onEnter';\n\nconst isTabHotKey = isKeyHotkey('shift?+tab');\nconst isArrowUpHotKey = isKeyHotkey('up');\nconst isArrowRightHotKey = isKeyHotkey('right');\nconst isArrowDownHotKey = isKeyHotkey('down');\nconst isArrowLeftHotKey = isKeyHotkey('left');\nconst isSelectAllHotKey = isKeyHotkey('mod+a');\nconst isBackspaceHotKey = isKeyHotkey('backspace');\nconst isDeleteHotKey = isKeyHotkey('delete');\nconst isEnterHotKey = isKeyHotkey('enter');\n\n/**\n * 以下事件在当前表格内容为空时执行的默认公共逻辑会导致表格样式错乱问题，因此需要在table插件中进行拦截处理\n * @param event\n * @returns\n */\nconst shouldPreventDelete = (event: React.KeyboardEvent) => {\n  return hotkeys.isDeleteLineForward(event) ||\n      hotkeys.isDeleteLineBackward(event) ||\n      hotkeys.isDeleteForward(event) ||\n      hotkeys.isDeleteBackward(event) ||\n      hotkeys.isDeleteWordForward(event) ||\n      hotkeys.isDeleteWordBackward(event);\n};\n\nexport default function createOnKeyDown(config: TableConfig) {\n  return function onKeyDown(event: React.KeyboardEvent, controller: Controller, next) {\n    const { value } = controller;\n    const { document, startBlock, endBlock } = value;\n\n    if (!startBlock || !endBlock) return next();\n\n    // TODO: 表格现在的 Paste 会经过严密的 normalize 保证不会挂掉，所以许多处理选区的逻辑可以废弃，后续可以接受不规整的选区\n    // 阻止用户从table外围同时选择文字和表格内容时keydown产生不规则表格(选中非整个table)\n    const startTable = document.getClosest(startBlock.key, isTable);\n    const endTable = document.getClosest(endBlock.key, isTable);\n    if ((startTable && !endTable) || (!startTable && endTable)) {\n      // copy 事件放行\n      if (!hotkeys.isCopy(event)) {\n        event.preventDefault();\n      }\n      return controller;\n    }\n\n    if (isTabHotKey(event)) {\n      return onTab(event, controller, next);\n    }\n    if (isArrowUpHotKey(event)) {\n      return onArrowUp(event, controller, next);\n    }\n    if (isArrowRightHotKey(event)) {\n      return onArrowRight(event, controller, next);\n    }\n    if (isArrowDownHotKey(event)) {\n      return onArrowDown(event, controller, next);\n    }\n    if (isArrowLeftHotKey(event)) {\n      return onArrowLeft(event, controller, next);\n    }\n    if (isSelectAllHotKey(event)) {\n      return onSelectAll(controller, next, event);\n    }\n    if (isBackspaceHotKey(event) || isDeleteHotKey(event)) {\n      return onDelete(event, controller, next);\n    }\n    if (isEnterHotKey(event)) {\n      return onEnter(event, controller, next, config);\n    }\n    // 是否需要阻止仓颉默认删除行为\n    if (shouldPreventDelete(event)) {\n      return onEmptyDelete(controller, next);\n    }\n    return next();\n  };\n}\n"],"file":"createOnKeyDown.js"}