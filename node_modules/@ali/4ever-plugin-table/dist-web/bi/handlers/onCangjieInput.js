import { Commands } from '@ali/4ever-cangjie';
import { isTableCell } from "../types";
import isSelectionAcrossTable from "../utils/isSelectionAcrossTable";
import { getRealNodeInTable } from "../utils";
import setSelectionByTable from "../../utils/utils/setSelectionByTable";
export default function onCangjieInput(event, controller, next) {
  var value = controller.value;
  var selection = value.selection,
      document = value.document;
  var tableSelection = controller.query('tableSelection');

  if (tableSelection) {
    var table = document.getNode(tableSelection.key);

    if (!table) {
      return next();
    }

    var startRowIndex = tableSelection.startRowIndex,
        startColIndex = tableSelection.startColIndex;
    var cell = getRealNodeInTable(table, startRowIndex, startColIndex);
    var s = selection.moveToRangeOfNode(cell, controller);
    controller.command(Commands.select, setSelectionByTable(s, false));
    return next();
  }

  if (isSelectionAcrossTable(value)) {
    var _s = selection.moveToFocus();

    controller.command(Commands.select, setSelectionByTable(_s, false));
    return next();
  }

  var start = selection.getStart(document);
  var startCell = document.getClosest(start.key, isTableCell);

  if (event.detail.type === 'deleteContentBackward' && selection.isCollapsed && startCell && startCell.nodes.length === 1) {
    var _onlyBlock$nodes;

    var onlyBlock = startCell.nodes[0]; // 非法表格（从 word 导入）中，cell 子节点可能是 text

    if ((onlyBlock == null ? void 0 : (_onlyBlock$nodes = onlyBlock.nodes) == null ? void 0 : _onlyBlock$nodes.length) !== 1) {
      return next();
    }

    var onlyChildOfOnlyBlock = onlyBlock.nodes[0];

    if (onlyChildOfOnlyBlock.text === '') {
      return controller;
    }
  }

  return next();
}
//# sourceMappingURL=onCangjieInput.js.map