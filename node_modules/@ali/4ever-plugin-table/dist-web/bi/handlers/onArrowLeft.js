import { Commands } from '@ali/4ever-cangjie';
import { isTableCell } from "../types";
import { moveToStartOfCell } from "../utils/selectionCommands";
import setSelectionByTable from "../../utils/utils/setSelectionByTable";
export default function onArrowLeft(event, controller, next) {
  var value = controller.value;
  var selection = value.selection,
      document = value.document,
      startText = value.startText;
  var tableSelection = controller.query('tableSelection');

  if (tableSelection) {
    event.preventDefault();
    var table = document.getNode(tableSelection.key);

    if (!table) {
      return;
    }

    var startColIndex = tableSelection.startColIndex,
        startRowIndex = tableSelection.startRowIndex;
    return moveToStartOfCell(controller, table, startRowIndex, startColIndex);
  }

  if (selection.isExpanded || !selection.getStart(document).isAtStartOfNode(startText)) return next();
  var prevText = document.getPreviousText(startText.key);
  if (!prevText) return next();
  var cell = document.getClosest(prevText.key, isTableCell);
  if (!cell || !cell.data.hidden) return next();
  var currentCell = cell;

  do {
    var prevCell = document.getPreviousSibling(currentCell.key);

    if (!prevCell) {
      var currentRow = document.getParent(currentCell.key);
      var prevRow = document.getPreviousSibling(currentRow.key);
      if (!prevRow) return next(); // @ts-ignore

      prevCell = prevRow.nodes[prevRow.nodes.length - 1];
    } // @ts-ignore


    currentCell = prevCell;
  } while (currentCell.data.hidden || false);

  var s = selection.moveToEndOfNode(currentCell, controller);
  return controller.command(Commands.select, setSelectionByTable(s, false));
}
//# sourceMappingURL=onArrowLeft.js.map