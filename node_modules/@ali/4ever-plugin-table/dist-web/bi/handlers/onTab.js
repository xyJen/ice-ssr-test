import { Commands } from '@ali/4ever-cangjie';
import insertRow from "../commands/insertRow";
import isSelectionInTableCell from "../utils/isSelectionInTableCell";
import { isTable, isTableCell, isTableRow } from "../types";
import { getRealNodeInTable } from "../utils";

function getPreviousNonHiddenCell(document, cell) {
  var prevCell = document.getPreviousSibling(cell.key);

  if (!prevCell) {
    var row = document.getClosest(cell.key, isTableRow);
    var prevRow = document.getPreviousSibling(row.key);

    if (prevRow) {
      prevCell = prevRow.nodes[prevRow.nodes.length - 1];
    } else {
      return null;
    }
  }

  if (prevCell.data.hidden) {
    return getPreviousNonHiddenCell(document, prevCell);
  }

  return prevCell;
}

function getNextNonHiddenCell(editor, document, cell) {
  var nextCell = document.getNextSibling(cell.key);

  if (!nextCell) {
    var row = document.getClosest(cell.key, isTableRow);
    var nextRow = document.getNextSibling(row.key);

    if (!nextRow) {
      insertRow(editor, row, 'insert-row-below'); // 必须使用更新后的 document

      nextRow = editor.value.document.getNextSibling(row.key);
    }

    nextCell = nextRow.nodes[0];
  }

  if (nextCell.data.hidden) {
    return getNextNonHiddenCell(editor, document, nextCell);
  }

  return nextCell;
}

export default function onTab(event, controller, next) {
  var value = controller.value;
  var document = value.document,
      startBlock = value.startBlock;
  var tableSelection = controller.query('tableSelection');

  if (tableSelection) {
    event.preventDefault();

    var _table = document.getNode(tableSelection.key);

    var startColIndex = tableSelection.startColIndex,
        startRowIndex = tableSelection.startRowIndex;
    var firstCell = getRealNodeInTable(_table, startRowIndex, startColIndex);
    return controller.command(Commands.moveToRangeOfNode, firstCell);
  }

  if (!isSelectionInTableCell(value)) return next();
  event.preventDefault();
  var cell = document.getClosest(startBlock.key, isTableCell);

  if (!cell) {
    return;
  }

  var table = document.getClosest(startBlock.key, isTable);

  if (event.shiftKey) {
    var prevCell = getPreviousNonHiddenCell(document, cell);

    if (prevCell) {
      if (prevCell.text) {
        controller.command(Commands.moveToRangeOfNode, prevCell);
      } else {
        controller.command(Commands.moveToStartOfNode, prevCell);
      }

      return controller;
    }

    return next();
  }

  if (table.data.sr && !document.getNextSibling(cell.key)) {
    return;
  }

  var nextCell = getNextNonHiddenCell(controller, document, cell);

  if (nextCell.text) {
    return controller.command(Commands.moveToRangeOfNode, nextCell);
  }

  return controller.command(Commands.moveToStartOfNode, nextCell);
}
//# sourceMappingURL=onTab.js.map