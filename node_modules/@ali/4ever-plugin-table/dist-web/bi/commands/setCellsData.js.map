{"version":3,"sources":["../../../../src/bi/commands/setCellsData.ts"],"names":["Commands","isEqualWithDefault","DEFAULT_TABLE_ALIGNMENT","CellDataKey","DEFAULT_CELL_DATA","fill","vAlign","setCellsData","controller","table","selection","key","data","value","document","startRowIndex","startColIndex","endRowIndex","endColIndex","tablePath","getPath","r","c","cellPath","cell","getNodeByPath","oldData","newData","command","setNodeByPath"],"mappings":";;;;AAAA,SAA4BA,QAA5B,QAA4C,oBAA5C;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AAEA,SAASC,uBAAT;IAEKC,W;;WAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAKL,OAAO,IAAMC,iBAAiB,gDAC3BD,WAAW,CAACE,IADe,IACR,EADQ,qBAE3BF,WAAW,CAACG,MAFe,IAENJ,uBAFM,qBAAvB;AAKP,eAAe,SAASK,YAAT,CACbC,UADa,EAEbC,KAFa,EAGbC,SAHa,EAIbC,GAJa,EAKbC,IALa,EAMb;AAAA,MACQC,KADR,GACkBL,UADlB,CACQK,KADR;AAAA,MAEQC,QAFR,GAEqBD,KAFrB,CAEQC,QAFR;;AAGA,MAAI,CAACJ,SAAL,EAAgB;AACd,WAAOF,UAAP;AACD;;AALD,MAOEO,aAPF,GAQIL,SARJ,CAOEK,aAPF;AAAA,MAOiBC,aAPjB,GAQIN,SARJ,CAOiBM,aAPjB;AAAA,MAOgCC,WAPhC,GAQIP,SARJ,CAOgCO,WAPhC;AAAA,MAO6CC,WAP7C,GAQIR,SARJ,CAO6CQ,WAP7C;AASA,MAAMC,SAAS,GAAGL,QAAQ,CAACM,OAAT,CAAiBX,KAAK,CAACE,GAAvB,CAAlB;;AAEA,OAAK,IAAIU,CAAC,GAAGN,aAAb,EAA4BM,CAAC,IAAIJ,WAAjC,EAA8CI,CAAC,IAAI,CAAnD,EAAsD;AACpD,SAAK,IAAIC,CAAC,GAAGN,aAAb,EAA4BM,CAAC,IAAIJ,WAAjC,EAA8CI,CAAC,IAAI,CAAnD,EAAsD;AACpD,UAAMC,QAAQ,aAAOJ,SAAP,GAAmBE,CAAnB,EAAsBC,CAAtB,EAAd;AACA,UAAME,IAAI,GAAGV,QAAQ,CAACW,aAAT,CAAuBF,QAAvB,CAAb;;AACA,UAAIC,IAAJ,EAAU;AAAA;;AACR,YAAME,OAAO,GAAGF,IAAI,CAACZ,IAAL,CAAUD,GAAV,qBAAoBA,GAApB,IAA0Ba,IAAI,CAACZ,IAAL,CAAUD,GAAV,CAA1B,UAA6C,EAA7D;AACA,YAAMgB,OAAO,GAAGf,IAAI,sBAAMD,GAAN,IAAYC,IAAZ,WAAqB,EAAzC;;AACA,YAAI,CAACX,kBAAkB,CAACyB,OAAD,EAAUC,OAAV,EAAmBvB,iBAAnB,CAAvB,EAA8D;AAAA;;AAC5DI,UAAAA,UAAU,CAACoB,OAAX,CAAmB5B,QAAQ,CAAC6B,aAA5B,EAA2CN,QAA3C,EAAqD;AACnDX,YAAAA,IAAI,eACCY,IAAI,CAACZ,IADN,6BAEDD,GAFC,IAEKC,IAFL;AAD+C,WAArD;AAMD;AACF;AACF;AACF;;AACD,SAAOJ,UAAP;AACD","sourcesContent":["import { Controller, Block, Commands } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport { isEqualWithDefault } from '@ali/4ever-utils';\nimport { ITableSelection } from '../types';\nimport { DEFAULT_TABLE_ALIGNMENT } from '../constants';\n\nenum CellDataKey {\n  fill = 'fill',\n  vAlign = 'vAlign',\n}\n\nexport const DEFAULT_CELL_DATA = {\n  [CellDataKey.fill]: '',\n  [CellDataKey.vAlign]: DEFAULT_TABLE_ALIGNMENT,\n};\n\nexport default function setCellsData(\n  controller: Controller,\n  table: Table,\n  selection: ITableSelection,\n  key: keyof typeof CellDataKey,\n  data: Record<string, any>,\n) {\n  const { value } = controller;\n  const { document } = value;\n  if (!selection) {\n    return controller;\n  }\n  const {\n    startRowIndex, startColIndex, endRowIndex, endColIndex,\n  } = selection;\n  const tablePath = document.getPath(table.key);\n\n  for (let r = startRowIndex; r <= endRowIndex; r += 1) {\n    for (let c = startColIndex; c <= endColIndex; c += 1) {\n      const cellPath = [...tablePath!, r, c];\n      const cell = document.getNodeByPath(cellPath) as Block | null;\n      if (cell) {\n        const oldData = cell.data[key] ? { [key]: cell.data[key] } : {};\n        const newData = data ? { [key]: data } : {};\n        if (!isEqualWithDefault(oldData, newData, DEFAULT_CELL_DATA)) {\n          controller.command(Commands.setNodeByPath, cellPath, {\n            data: {\n              ...cell.data,\n              [key]: data,\n            },\n          });\n        }\n      }\n    }\n  }\n  return controller;\n}\n"],"file":"setCellsData.js"}