{"version":3,"sources":["../../../../src/bi/commands/deleteCols.ts"],"names":["Commands","Table","isEmptyTable","getRealNodeInTable","getPositionOfCell","traverseSingleColCells","deleteTable","createTableSelectionForFocusedCell","logNPEInfo","getDataTableSelectionByTable","setSelectionByTable","resizeTableToAutofitWidth","toggleColHeader","filterValidData","deleteCol","controller","table","tablePath","colIndex","rowIndex","_","cell","type","cellData","data","hidden","realNode","position","key","command","setNodeByPath","colSpan","inheritCellPath","withoutNormalizing","c","removeNodeByPath","deleteCols","value","document","selection","tableSelection","startColIndex","endColIndex","getPath","updatedTable","getNodeByPath","isColumnHeader","colsWidth","slice","isAutofitWidth","newTable","latestTable","colSize","length","selectedColIndex","i","nodes","focusCell","s","moveToStartOfNode","select"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport { Controller, Commands, Path } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport isEmptyTable from '../utils/isEmptyTable';\nimport getRealNodeInTable from '../utils/getRealNodeInTable';\nimport getPositionOfCell from '../utils/getPositionOfCell';\nimport traverseSingleColCells from '../utils/traverseSingleColCells';\nimport deleteTable from './deleteTable';\nimport { createTableSelectionForFocusedCell } from '../utils';\nimport { logNPEInfo } from '../utils/logger';\nimport { ITableSelection } from '../types';\nimport getDataTableSelectionByTable from '../utils/getDataTableSelectionByTable';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\nimport resizeTableToAutofitWidth from './resizeTableToAutofitWidth';\nimport toggleColHeader from './toggleColHeader';\nimport filterValidData from '../../utils/utils/filterValidData';\n\nfunction deleteCol(controller: Controller, table: Table, tablePath: Path, colIndex: number) {\n  traverseSingleColCells(table, colIndex, colIndex, (rowIndex, _, cell) => {\n    if (!cell) {\n      logNPEInfo(\n        table,\n        {\n          type: 'deleteCol',\n          colIndex,\n          rowIndex,\n        },\n      );\n    }\n    // 不规则表格 cell 可能为空\n    // 这里支持用户手动删除不规则的列，使表格变为规则表格\n    if (!cell) {\n      return;\n    }\n    const cellData = cell.data || {};\n    if (cellData.hidden) {\n      const realNode = getRealNodeInTable(table, rowIndex, colIndex);\n      if (!realNode) {\n        return;\n      }\n      const position = getPositionOfCell(realNode.key, table)!;\n      if (position.rowIndex === rowIndex && position.colIndex < colIndex) {\n        controller.command(Commands.setNodeByPath,\n          [...tablePath, position.rowIndex, position.colIndex], {\n            data: {\n              ...realNode.data,\n              colSpan: (realNode.data.colSpan || 1) - 1,\n            },\n          });\n      }\n    } else if ((cellData.colSpan || 1) > 1) {\n      const inheritCellPath = [...tablePath, rowIndex, colIndex + 1];\n      controller.command(Commands.setNodeByPath, inheritCellPath, {\n        data: {\n          ...cellData,\n          colSpan: (cellData.colSpan || 1) - 1,\n        },\n      });\n    }\n    controller.withoutNormalizing((c) => {\n      c.command(Commands.removeNodeByPath, [...tablePath, rowIndex, colIndex]);\n    });\n  });\n}\n\nexport default function deleteCols(controller: Controller, table: Table) {\n  const { value } = controller;\n  const { document, selection } = value;\n  let tableSelection: ITableSelection | null = getDataTableSelectionByTable(controller, table);\n  if (!tableSelection) {\n    tableSelection = createTableSelectionForFocusedCell(value, table);\n  }\n  if (!tableSelection) {\n    return controller;\n  }\n  const { startColIndex, endColIndex } = tableSelection || {};\n  const tablePath = document.getPath(table.key)!;\n  for (let colIndex = endColIndex; colIndex >= startColIndex; colIndex -= 1) {\n    const updatedTable = controller.value.document.getNodeByPath(tablePath) as Table;\n    deleteCol(controller, updatedTable, tablePath, colIndex);\n    if (Table.isColumnHeader(updatedTable) && colIndex === 0) {\n      toggleColHeader(controller, updatedTable);\n    }\n  }\n\n  const updatedTable = controller.value.document.getNodeByPath(tablePath) as Table;\n\n  if (isEmptyTable(updatedTable)) {\n    return controller.command(deleteTable, updatedTable);\n  }\n\n  const colsWidth = updatedTable.data.colsWidth || [];\n  controller.command(Commands.setNodeByPath, tablePath, {\n    data: filterValidData({\n      ...updatedTable.data,\n      colsWidth: [...colsWidth.slice(0, startColIndex), ...colsWidth.slice(endColIndex + 1)],\n    }),\n  });\n\n  if (Table.isAutofitWidth(updatedTable)) {\n    const newTable = controller.value.document.getNodeByPath(tablePath) as Table;\n    resizeTableToAutofitWidth(controller, newTable, updatedTable);\n  }\n\n  const latestTable = controller.value.document.getNodeByPath(tablePath) as Table;\n  const colSize = latestTable.data.colsWidth!.length;\n  const selectedColIndex = startColIndex >= colSize ? colSize - 1 : startColIndex;\n  // 删除列后 focus 在所删列的前一列的第一个单元格内\n  for (let i = 0; i < latestTable.nodes.length; i += 1) {\n    const focusCell = getRealNodeInTable(latestTable, i, selectedColIndex);\n    if (focusCell) {\n      const s = setSelectionByTable(selection, false)\n        .moveToStartOfNode(focusCell, controller);\n      return controller.command(Commands.select, s);\n    }\n  }\n  return controller;\n}\n"],"file":"deleteCols.js"}