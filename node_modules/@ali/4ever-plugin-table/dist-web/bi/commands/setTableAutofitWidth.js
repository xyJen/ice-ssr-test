import _extends from "@babel/runtime/helpers/extends";
import { Commands } from '@ali/4ever-cangjie';
import Table from "../../mo/models";
import normalizeColsWidth from "../utils/normalizeColsWidth";
import calcResizeColsWidth from "../utils/calcResizeColsWidth";
import enableAutofitWidth from "../../utils/commands/enableAutofitWidth";
import { convertFromPercentToPixel, convertFromPixelToPercent } from "../../utils/utils/colsWidthConverter";
import getTableMaxWidthByContainer from "../../utils/utils/getTableMaxWidthByContainer";
import filterValidData from "../../utils/utils/filterValidData";
export default function setTableColsWidth(controller, table, isAutoFitWidth, maxWidth) {
  var prevIsAutoFitWidth = Table.isAutofitWidth(table);
  if (prevIsAutoFitWidth === isAutoFitWidth) return controller;
  var containerWidth = maxWidth;

  if (!containerWidth) {
    containerWidth = getTableMaxWidthByContainer(controller, table);
  }

  if (!containerWidth) return controller;

  if (isAutoFitWidth) {
    var _colsWidth = normalizeColsWidth(table);

    var totalWidth = _colsWidth.reduce(function (acc, w) {
      return acc + w;
    }); // 若原表格宽度大于容器，判断自适应后的表格是否超出容器，如果超出则不做处理


    if (totalWidth > containerWidth) {
      _colsWidth = calcResizeColsWidth(controller, table, containerWidth - totalWidth);
      totalWidth = _colsWidth.reduce(function (acc, w) {
        return acc + w;
      });

      if (totalWidth > containerWidth) {
        return controller;
      }
    }

    var pctColsWidth = convertFromPixelToPercent(_colsWidth, totalWidth);
    enableAutofitWidth(controller, table);

    var _newTable = controller.value.document.getNode(table.key);

    return controller.command(Commands.setNodeByKey, _newTable.key, {
      data: filterValidData(_extends({}, _newTable.data, {
        colsWidth: pctColsWidth
      }))
    });
  }

  var cw = containerWidth;
  var colsWidth = table.data.colsWidth;
  if (!Array.isArray(colsWidth)) return controller;
  var newColsWidth = convertFromPercentToPixel(table, cw);
  enableAutofitWidth(controller, table, false);
  var newTable = controller.value.document.getNode(table.key);
  return controller.command(Commands.setNodeByKey, newTable.key, {
    data: filterValidData(_extends({}, newTable.data, {
      colsWidth: newColsWidth
    }))
  });
}
//# sourceMappingURL=setTableAutofitWidth.js.map