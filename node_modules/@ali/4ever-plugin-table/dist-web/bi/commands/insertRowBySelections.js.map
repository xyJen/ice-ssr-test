{"version":3,"sources":["../../../../src/bi/commands/insertRowBySelections.ts"],"names":["insertRow","createTableSelectionForFocusedCell","getDataTableSelectionByTable","insertRowBaseOnSelection","controller","table","type","tableSelection","value","startRowIndex","endRowIndex","targetRow","nodes"],"mappings":"AAEA,OAAOA,SAAP;AACA,OAAOC,kCAAP;AACA,OAAOC,4BAAP;AAEA,eAAe,SAASC,wBAAT,CAAkCC,UAAlC,EAA0DC,KAA1D,EAAwEC,IAAxE,EAAsF;AACnG,MAAMC,cAAc,GAAGL,4BAA4B,CAACE,UAAD,EAAaC,KAAb,CAA5B,IACrBJ,kCAAkC,CAACG,UAAU,CAACI,KAAZ,EAAmBH,KAAnB,CADpC;;AAEA,MAAI,CAACE,cAAL,EAAqB;AACnB,WAAOH,UAAP;AACD;;AALkG,MAM3FK,aAN2F,GAM5DF,cAN4D,CAM3FE,aAN2F;AAAA,MAM5EC,WAN4E,GAM5DH,cAN4D,CAM5EG,WAN4E;AAOnG,MAAIC,SAAJ;;AACA,MAAIL,IAAI,KAAK,kBAAb,EAAiC;AAC/BK,IAAAA,SAAS,GAAGN,KAAK,CAACO,KAAN,CAAYH,aAAZ,CAAZ;AACD,GAFD,MAEO,IAAIH,IAAI,KAAK,kBAAb,EAAiC;AACtCK,IAAAA,SAAS,GAAGN,KAAK,CAACO,KAAN,CAAYF,WAAZ,CAAZ;AACD;;AACD,MAAI,CAACC,SAAL,EAAgB,OAAOP,UAAP;AAChB,SAAOJ,SAAS,CAACI,UAAD,EAAaO,SAAb,EAAwBL,IAAxB,CAAhB;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport insertRow from './insertRow';\nimport createTableSelectionForFocusedCell from '../utils/createTableSelectionForFocusedCell';\nimport getDataTableSelectionByTable from '../utils/getDataTableSelectionByTable';\n\nexport default function insertRowBaseOnSelection(controller: Controller, table: Table, type: string) {\n  const tableSelection = getDataTableSelectionByTable(controller, table) ||\n    createTableSelectionForFocusedCell(controller.value, table);\n  if (!tableSelection) {\n    return controller;\n  }\n  const { startRowIndex, endRowIndex } = tableSelection;\n  let targetRow;\n  if (type === 'insert-row-above') {\n    targetRow = table.nodes[startRowIndex];\n  } else if (type === 'insert-row-below') {\n    targetRow = table.nodes[endRowIndex];\n  }\n  if (!targetRow) return controller;\n  return insertRow(controller, targetRow, type);\n}\n"],"file":"insertRowBySelections.js"}