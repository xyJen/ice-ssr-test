import _extends from "@babel/runtime/helpers/extends";
import { Commands } from '@ali/4ever-cangjie';
import createTableSelectionForFocusedCell from "../utils/createTableSelectionForFocusedCell";
import getDataTableSelectionByTable from "../utils/getDataTableSelectionByTable";
export default function splitCell(controller, table, area) {
  var value = controller.value;
  var document = value.document;

  if (!table) {
    return controller;
  }

  var tableSelection;

  if (area) {
    tableSelection = area;
  } else {
    var queryTableSelection = getDataTableSelectionByTable(controller, table);
    tableSelection = queryTableSelection || createTableSelectionForFocusedCell(value, table);
  }

  if (!tableSelection) {
    return controller;
  }

  var _tableSelection = tableSelection,
      startRowIndex = _tableSelection.startRowIndex,
      startColIndex = _tableSelection.startColIndex,
      endRowIndex = _tableSelection.endRowIndex,
      endColIndex = _tableSelection.endColIndex;
  var tablePath = document.getPath(table.key);

  for (var r = startRowIndex; r <= endRowIndex; r += 1) {
    for (var c = startColIndex; c <= endColIndex; c += 1) {
      var cellPath = [].concat(tablePath, [r, c]);
      var cell = document.getNodeByPath(cellPath);

      if (cell) {
        controller.command(Commands.setNodeByPath, cellPath, {
          data: _extends({}, cell.data, {
            rowSpan: 1,
            colSpan: 1,
            hidden: false
          })
        });
      }
    }
  }

  return controller;
}
//# sourceMappingURL=splitCell.js.map