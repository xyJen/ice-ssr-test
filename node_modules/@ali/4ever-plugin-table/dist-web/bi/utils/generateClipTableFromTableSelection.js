import _extends from "@babel/runtime/helpers/extends";
import { Block, Document } from '@ali/4ever-cangjie';
import Table from "../../mo/models";
import { cloneDeep } from 'lodash-es';

/**
 * 从一个 table 中剪切一个区域
 * @param table
 * @param tableSelection
 */
export default function generateClipTableFromTableSelection(table, tableSelection) {
  var startRowIndex = tableSelection.startRowIndex,
      startColIndex = tableSelection.startColIndex,
      endRowIndex = tableSelection.endRowIndex,
      endColIndex = tableSelection.endColIndex;
  var tableJs = cloneDeep(table.toJSON());
  var tableData = tableJs.data;

  if (tableData) {
    tableData.colsWidth = (tableData.colsWidth || []).splice(startColIndex, endColIndex - startColIndex + 1);

    if (Table.isColumnHeader(table) && startColIndex !== 0) {
      delete tableData.isColumnHeader;
    }
  }

  if (tableJs.nodes) {
    tableJs.nodes = tableJs.nodes.splice(startRowIndex, endRowIndex - startRowIndex + 1);
    tableJs.nodes.forEach(function (row) {
      if (row.klass !== 'text' && row.nodes) {
        // eslint-disable-next-line no-param-reassign
        row.nodes = row.nodes.splice(startColIndex, endColIndex - startColIndex + 1);
      }
    });
  }

  var clipTable = Block.fromJSON(_extends({}, tableJs, {
    data: tableData
  }));
  var fragment = Document.create({
    nodes: [clipTable]
  });
  return fragment;
}
//# sourceMappingURL=generateClipTableFromTableSelection.js.map