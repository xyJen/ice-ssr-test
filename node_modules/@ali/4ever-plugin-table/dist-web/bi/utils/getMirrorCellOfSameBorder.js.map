{"version":3,"sources":["../../../../src/bi/utils/getMirrorCellOfSameBorder.ts"],"names":["getPositionOfCell","getMirrorCellOfSameBorder","currentCell","orientation","table","position","key","colSpan","data","rowSpan","mirrorCell","rowIndex","colIndex","targetRow","nodes","colSize","length","rowSize"],"mappings":"AACA,OAAOA,iBAAP,4B,CACA;;AACA,eAAe,SAASC,yBAAT,CAAmCC,WAAnC,EAAuDC,WAAvD,EAAoEC,KAApE,EAAkF;AAC/F,MAAMC,QAAQ,GAAGL,iBAAiB,CAACE,WAAW,CAACI,GAAb,EAAkBF,KAAlB,CAAlC;AACA,MAAMG,OAAO,GAAIL,WAAW,CAACM,IAAZ,CAAiBD,OAAjB,KAA6BL,WAAW,CAACM,IAAZ,CAAiBD,OAAjB,IAA4B,CAAzD,CAAjB;AACA,MAAME,OAAO,GAAIP,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,KAA6BP,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,IAA4B,CAAzD,CAAjB;AACA,MAAIC,UAAwB,GAAG,IAA/B;;AACA,MAAI,CAACL,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAP8F,MAQvFM,QARuF,GAQhEN,QARgE,CAQvFM,QARuF;AAAA,MAQ7EC,QAR6E,GAQhEP,QARgE,CAQ7EO,QAR6E;;AAS/F,MAAIT,WAAW,KAAK,MAApB,EAA4B;AAC1B,QAAIS,QAAQ,IAAI,CAAhB,EAAmB;AACjB,aAAO,IAAP;AACD;;AACD,QAAMC,SAAS,GAAGT,KAAK,CAACU,KAAN,CAAYH,QAAZ,CAAlB;AACA,QAAI,CAACE,SAAL,EAAgB,OAAO,IAAP,CALU,CAM1B;;AACAH,IAAAA,UAAU,GAAGG,SAAS,CAACC,KAAV,CAAgBF,QAAQ,GAAG,CAA3B,CAAb,CAP0B,CAQ1B;AACA;AACA;AACA;AACD,GAZD,MAYO,IAAIT,WAAW,KAAK,OAApB,EAA6B;AAClC;AACA,QAAMY,OAAO,GAAGX,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAeA,KAAf,CAAqBE,MAArC;;AACA,QAAIJ,QAAQ,GAAGL,OAAX,IAAsBQ,OAA1B,EAAmC;AACjC,aAAO,IAAP;AACD;;AACD,QAAMF,UAAS,GAAGT,KAAK,CAACU,KAAN,CAAYH,QAAZ,CAAlB;AACA,QAAI,CAACE,UAAL,EAAgB,OAAO,IAAP,CAPkB,CAQlC;;AACAH,IAAAA,UAAU,GAAGG,UAAS,CAACC,KAAV,CAAgBF,QAAQ,GAAGL,OAA3B,CAAb;AACD,GAVM,MAUA,IAAIJ,WAAW,KAAK,KAApB,EAA2B;AAChC,QAAIQ,QAAQ,IAAI,CAAhB,EAAmB;AACjB,aAAO,IAAP;AACD,KAH+B,CAIhC;;;AACAD,IAAAA,UAAU,GAAGN,KAAK,CAACU,KAAN,CAAYH,QAAQ,GAAG,CAAvB,EAA0BG,KAA1B,CAAgCF,QAAhC,CAAb,CALgC,CAMhC;AACA;AACA;AACD,GATM,MASA,IAAIT,WAAW,KAAK,QAApB,EAA8B;AACnC,QAAMc,OAAO,GAAGb,KAAK,CAACU,KAAN,CAAYE,MAA5B;;AACA,QAAIL,QAAQ,GAAGF,OAAX,IAAsBQ,OAA1B,EAAmC;AACjC,aAAO,IAAP;AACD;;AACD,QAAMJ,WAAS,GAAGT,KAAK,CAACU,KAAN,CAAYH,QAAQ,GAAGF,OAAvB,CAAlB;AACA,QAAI,CAACI,WAAL,EAAgB,OAAO,IAAP,CANmB,CAOnC;;AACAH,IAAAA,UAAU,GAAGG,WAAS,CAACC,KAAV,CAAgBF,QAAhB,CAAb;AACD,GAjD8F,CAmD/F;AACA;AACA;;;AAEA,SAAOF,UAAP;AACD","sourcesContent":["import { Block } from '@ali/4ever-cangjie';\nimport getPositionOfCell from './getPositionOfCell';\n// mirrorCell可以是hiddenCell，可能合并单元格时没有实质效果，但解除合并时会有效果\nexport default function getMirrorCellOfSameBorder(currentCell: Block, orientation, table: Block) {\n  const position = getPositionOfCell(currentCell.key, table);\n  const colSpan = (currentCell.data.colSpan && (currentCell.data.colSpan || 1));\n  const rowSpan = (currentCell.data.rowSpan && (currentCell.data.rowSpan || 1));\n  let mirrorCell: Block | null = null;\n  if (!position) {\n    return null;\n  }\n  const { rowIndex, colIndex } = position;\n  if (orientation === 'left') {\n    if (colIndex <= 0) {\n      return null;\n    }\n    const targetRow = table.nodes[rowIndex];\n    if (!targetRow) return null;\n    // @ts-ignore\n    mirrorCell = targetRow.nodes[colIndex - 1];\n    // 注释留着，暂时不用这个方法，供以后参考\n    // if (mirrorCell.data.hidden) {\n    //   mirrorCell = getRealNodeInTable(table, rowIndex, colIndex - 1);\n    // }\n  } else if (orientation === 'right') {\n    // @ts-ignore\n    const colSize = table.nodes[0].nodes.length;\n    if (colIndex + colSpan >= colSize) {\n      return null;\n    }\n    const targetRow = table.nodes[rowIndex];\n    if (!targetRow) return null;\n    // @ts-ignore\n    mirrorCell = targetRow.nodes[colIndex + colSpan];\n  } else if (orientation === 'top') {\n    if (rowIndex <= 0) {\n      return null;\n    }\n    // @ts-ignore\n    mirrorCell = table.nodes[rowIndex - 1].nodes[colIndex];\n    // if (mirrorCell.data.hidden) {\n    //   mirrorCell = getRealNodeInTable(table, rowIndex - 1, colIndex);\n    // }\n  } else if (orientation === 'bottom') {\n    const rowSize = table.nodes.length;\n    if (rowIndex + rowSpan >= rowSize) {\n      return null;\n    }\n    const targetRow = table.nodes[rowIndex + rowSpan];\n    if (!targetRow) return null;\n    // @ts-ignore\n    mirrorCell = targetRow.nodes[colIndex];\n  }\n\n  // if (mirrorCell && mirrorCell.data.hidden) {\n  //   return null;\n  // }\n\n  return mirrorCell;\n}\n"],"file":"getMirrorCellOfSameBorder.js"}