{"version":3,"sources":["../../../../src/bi/utils/normalizeColsWidth.ts"],"names":["isNumber","MIN_COL_WIDTH","normalizeColsWidth","table","colsWidth","data","Array","isArray","nodes","length","fill","map","c"],"mappings":"AACA,OAAOA,QAAP;AACA,SAASC,aAAT;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAoD;AAAA,MACzDC,SADyD,GAC3CD,KAAK,CAACE,IADqC,CACzDD,SADyD;;AAGjE,MAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAL,EAA+B;AAC7B,WAAOE,KAAK,CAACH,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeA,KAAf,CAAqBC,MAAtB,CAAL,CAAmCC,IAAnC,CAAwCT,aAAxC,CAAP;AACD;;AAED,SAAOG,SAAS,CAACO,GAAV,CAAc,UAAAC,CAAC;AAAA,WAAKZ,QAAQ,CAACY,CAAD,CAAR,GAAcA,CAAd,GAAkBX,aAAvB;AAAA,GAAf,CAAP;AACD","sourcesContent":["import Table from '../../mo/models';\nimport isNumber from './isNumber';\nimport { MIN_COL_WIDTH } from '../../utils/constants';\n\nexport default function normalizeColsWidth(table: Table): number[] {\n  const { colsWidth } = table.data;\n\n  if (!Array.isArray(colsWidth)) {\n    return Array(table.nodes[0].nodes.length).fill(MIN_COL_WIDTH);\n  }\n\n  return colsWidth.map(c => (isNumber(c) ? c : MIN_COL_WIDTH));\n}\n"],"file":"normalizeColsWidth.js"}