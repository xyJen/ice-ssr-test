{"version":3,"sources":["../../../../src/bi/utils/getTableSelection.ts"],"names":["createTableSelectionForFocusedCell","getDataTableSelectionByTable","getTable","getTableSelection","controller","table","value","tableSelection"],"mappings":"AAEA,OAAOA,kCAAP;AACA,OAAOC,4BAAP;AACA,OAAOC,QAAP;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAAwC;AAChE,MAAMC,KAAK,GAAGH,QAAQ,CAACE,UAAU,CAACE,KAAZ,CAAtB;AACA,MAAI,CAACD,KAAL,EAAY,OAAO,IAAP;AACZ,MAAME,cAAc,GAAGN,4BAA4B,CAACG,UAAD,EAAaC,KAAb,CAA5B,IACrBL,kCAAkC,CAACI,UAAU,CAACE,KAAZ,EAAmBD,KAAnB,CADpC;AAEA,SAAOE,cAAP;AACD,CAND;;AAQA,eAAeJ,iBAAf","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { ITableSelection } from '../types';\nimport createTableSelectionForFocusedCell from './createTableSelectionForFocusedCell';\nimport getDataTableSelectionByTable from './getDataTableSelectionByTable';\nimport getTable from './getTable';\n\ntype ISelection = ITableSelection | null;\n\nconst getTableSelection = (controller: Controller): ISelection => {\n  const table = getTable(controller.value);\n  if (!table) return null;\n  const tableSelection = getDataTableSelectionByTable(controller, table) ||\n    createTableSelectionForFocusedCell(controller.value, table);\n  return tableSelection;\n};\n\nexport default getTableSelection;\n"],"file":"getTableSelection.js"}