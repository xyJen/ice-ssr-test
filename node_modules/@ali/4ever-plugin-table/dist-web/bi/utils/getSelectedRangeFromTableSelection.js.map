{"version":3,"sources":["../../../../src/bi/utils/getSelectedRangeFromTableSelection.ts"],"names":["getSelectedRowRangeFromTableSelection","controller","table","tableSelection","includeTable","isSelectWholeTable","query","node","startRowIndex","endRowIndex","startColIndex","endColIndex","Array","isArray","data","colsWidth","maxCol","length","start","end","getSelectedColRangeFromTableSelection","nodes","max"],"mappings":"AAIA,OAAO,IAAMA,qCAAqC,GAAG,SAAxCA,qCAAwC,OAU/C;AAAA;;AAAA,MATJC,UASI,QATJA,UASI;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,cAOI,QAPJA,cAOI;AAAA,+BANJC,YAMI;AAAA,MANJA,YAMI,kCANW,KAMX;;AACJ,MAAI,CAACD,cAAL,EAAqB;AACnB,WAAO,IAAP;AACD;;AACD,MAAME,kBAAkB,GAAGJ,UAAU,CAACK,KAAX,CAAiB,oBAAjB,EAAuC;AAChEC,IAAAA,IAAI,EAAEL;AAD0D,GAAvC,CAA3B;;AAGA,MAAI,CAACE,YAAD,IAAiBC,kBAArB,EAAyC;AACvC,WAAO,IAAP;AACD;;AATG,cAgBAF,cAhBA;AAAA,MAYFK,aAZE,SAYFA,aAZE;AAAA,MAaFC,WAbE,SAaFA,WAbE;AAAA,MAcFC,aAdE,SAcFA,aAdE;AAAA,MAeFC,WAfE,SAeFA,WAfE;;AAiBJ,MAAI,CAACC,KAAK,CAACC,OAAN,gBAAcX,KAAK,CAACY,IAApB,qBAAc,YAAYC,SAA1B,CAAL,EAA2C;AACzC,WAAO,IAAP;AACD;;AACD,MAAMC,MAAM,GAAGd,KAAK,CAACY,IAAN,CAAWC,SAAX,CAAqBE,MAArB,GAA8B,CAA7C;;AACA,MACGP,aAAa,KAAK,CAAlB,IAAuBC,WAAW,KAAKK,MAAxC,IACCN,aAAa,KAAKM,MAAlB,IAA4BL,WAAW,KAAK,CAD7C,IAEAN,kBAHF,EAIE;AACA,WAAO;AACLa,MAAAA,KAAK,EAAEV,aADF;AAELW,MAAAA,GAAG,EAAEV;AAFA,KAAP;AAID;;AACD,SAAO,IAAP;AACD,CA1CM;AA4CP,OAAO,IAAMW,qCAAqC,GAAG,SAAxCA,qCAAwC,QAU/C;AAAA,MATJnB,UASI,SATJA,UASI;AAAA,MARJC,KAQI,SARJA,KAQI;AAAA,MAPJC,cAOI,SAPJA,cAOI;AAAA,iCANJC,YAMI;AAAA,MANJA,YAMI,mCANW,KAMX;;AACJ,MAAI,CAACD,cAAL,EAAqB;AACnB,WAAO,IAAP;AACD;;AACD,MAAME,kBAAkB,GAAGJ,UAAU,CAACK,KAAX,CAAiB,oBAAjB,EAAuC;AAChEC,IAAAA,IAAI,EAAEL;AAD0D,GAAvC,CAA3B;;AAGA,MAAI,CAACE,YAAD,IAAiBC,kBAArB,EAAyC;AACvC,WAAO,IAAP;AACD;;AATG,cAgBAF,cAhBA;AAAA,MAYFK,aAZE,SAYFA,aAZE;AAAA,MAaFC,WAbE,SAaFA,WAbE;AAAA,MAcFC,aAdE,SAcFA,aAdE;AAAA,MAeFC,WAfE,SAeFA,WAfE;;AAiBJ,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcX,KAAK,CAACmB,KAApB,CAAL,EAAiC;AAC/B,WAAO,IAAP;AACD;;AACD,MAAMC,GAAG,GAAGpB,KAAK,CAACmB,KAAN,CAAYJ,MAAZ,GAAqB,CAAjC;;AACA,MACGT,aAAa,KAAK,CAAlB,IAAuBC,WAAW,KAAKa,GAAxC,IACCd,aAAa,KAAKc,GAAlB,IAAyBb,WAAW,KAAK,CAD1C,IAEAJ,kBAHF,EAIE;AACA,WAAO;AACLa,MAAAA,KAAK,EAAER,aADF;AAELS,MAAAA,GAAG,EAAER;AAFA,KAAP;AAID;;AACD,SAAO,IAAP;AACD,CA1CM","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport { ITableSelection } from '../types';\n\nexport const getSelectedRowRangeFromTableSelection = ({\n  controller,\n  table,\n  tableSelection,\n  includeTable = false,\n}: {\n  controller: Controller;\n  table: Table;\n  tableSelection: ITableSelection | null;\n  includeTable?: boolean;\n}) => {\n  if (!tableSelection) {\n    return null;\n  }\n  const isSelectWholeTable = controller.query('isSelectWholeTable', {\n    node: table,\n  });\n  if (!includeTable && isSelectWholeTable) {\n    return null;\n  }\n\n  const {\n    startRowIndex,\n    endRowIndex,\n    startColIndex,\n    endColIndex,\n  } = tableSelection as ITableSelection;\n  if (!Array.isArray(table.data?.colsWidth)) {\n    return null;\n  }\n  const maxCol = table.data.colsWidth.length - 1;\n  if (\n    (startColIndex === 0 && endColIndex === maxCol) ||\n    (startColIndex === maxCol && endColIndex === 0) ||\n    isSelectWholeTable\n  ) {\n    return {\n      start: startRowIndex,\n      end: endRowIndex,\n    };\n  }\n  return null;\n};\n\nexport const getSelectedColRangeFromTableSelection = ({\n  controller,\n  table,\n  tableSelection,\n  includeTable = false,\n}: {\n  controller: Controller;\n  table: Table;\n  tableSelection: ITableSelection | null;\n  includeTable?: boolean;\n}) => {\n  if (!tableSelection) {\n    return null;\n  }\n  const isSelectWholeTable = controller.query('isSelectWholeTable', {\n    node: table,\n  });\n  if (!includeTable && isSelectWholeTable) {\n    return null;\n  }\n\n  const {\n    startRowIndex,\n    endRowIndex,\n    startColIndex,\n    endColIndex,\n  } = tableSelection as ITableSelection;\n  if (!Array.isArray(table.nodes)) {\n    return null;\n  }\n  const max = table.nodes.length - 1;\n  if (\n    (startRowIndex === 0 && endRowIndex === max) ||\n    (startRowIndex === max && endRowIndex === 0) ||\n    isSelectWholeTable\n  ) {\n    return {\n      start: startColIndex,\n      end: endColIndex,\n    };\n  }\n  return null;\n};\n"],"file":"getSelectedRangeFromTableSelection.js"}