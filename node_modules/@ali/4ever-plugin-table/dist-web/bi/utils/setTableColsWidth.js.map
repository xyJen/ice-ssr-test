{"version":3,"sources":["../../../../src/bi/utils/setTableColsWidth.ts"],"names":["Commands","isNumber","MIN_COL_WIDTH","filterValidData","isValidColsWidth","colsWidth","Array","isArray","every","setTableColsWidth","controller","table","currentColsWidth","data","validColsWidth","nodes","length","fill","map","cw","index","currentCw","command","setNodeByKey","key"],"mappings":";AAAA,SAASA,QAAT,QAAqC,oBAArC;AAEA,OAAOC,QAAP;AACA,SAASC,aAAT;AACA,OAAOC,eAAP;;AAEA,SAASC,gBAAT,CAA0BC,SAA1B,EAA0C;AACxC,SAAOC,KAAK,CAACC,OAAN,CAAcF,SAAd,KAA4BA,SAAS,CAACG,KAAV,CAAgBP,QAAhB,CAAnC;AACD;;AAED,eAAe,SAASQ,iBAAT,CACbC,UADa,EAEbC,KAFa,EAGbN,SAHa,EAIb;AACA,MAAMO,gBAAgB,GAAGD,KAAK,CAACE,IAAN,CAAWR,SAApC;AACA,MAAIS,cAAwB,GAAG,EAA/B;;AACA,MAAI,CAACR,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAL,EAA+B;AAC7B,QAAID,gBAAgB,CAACQ,gBAAD,CAApB,EAAwC;AACtC,aAAOF,UAAP;AACD;;AAEDI,IAAAA,cAAc,GAAGR,KAAK,CAACK,KAAK,CAACI,KAAN,CAAYC,MAAb,CAAL,CAA0BC,IAA1B,CAA+Bf,aAA/B,CAAjB;AACD,GAND,MAMO;AACLY,IAAAA,cAAc,GAAGT,SAAS,CAACa,GAAV,CAAc,UAACC,EAAD,EAAKC,KAAL,EAAe;AAC5C,UAAInB,QAAQ,CAACkB,EAAD,CAAZ,EAAkB;AAChB,eAAOA,EAAP;AACD;;AAED,UAAIb,KAAK,CAACC,OAAN,CAAcK,gBAAd,CAAJ,EAAqC;AACnC,YAAMS,SAAS,GAAGT,gBAAgB,CAACQ,KAAD,CAAlC;;AACA,YAAInB,QAAQ,CAACoB,SAAD,CAAZ,EAAyB;AACvB,iBAAOA,SAAP;AACD;AACF;;AAED,aAAOnB,aAAP;AACD,KAbgB,CAAjB;AAcD;;AAED,SAAOQ,UAAU,CAACY,OAAX,CAAmBtB,QAAQ,CAACuB,YAA5B,EAA0CZ,KAAK,CAACa,GAAhD,EAAqD;AAC1DX,IAAAA,IAAI,EAAEV,eAAe,cAChBQ,KAAK,CAACE,IADU;AAEnBR,MAAAA,SAAS,EAAES;AAFQ;AADqC,GAArD,CAAP;AAMD","sourcesContent":["import { Commands, Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport isNumber from './isNumber';\nimport { MIN_COL_WIDTH } from '../../utils/constants';\nimport filterValidData from '../../utils/utils/filterValidData';\n\nfunction isValidColsWidth(colsWidth: any) {\n  return Array.isArray(colsWidth) && colsWidth.every(isNumber);\n}\n\nexport default function setTableColsWidth(\n  controller: Controller,\n  table: Table,\n  colsWidth: any,\n) {\n  const currentColsWidth = table.data.colsWidth;\n  let validColsWidth: number[] = [];\n  if (!Array.isArray(colsWidth)) {\n    if (isValidColsWidth(currentColsWidth)) {\n      return controller;\n    }\n\n    validColsWidth = Array(table.nodes.length).fill(MIN_COL_WIDTH);\n  } else {\n    validColsWidth = colsWidth.map((cw, index) => {\n      if (isNumber(cw)) {\n        return cw;\n      }\n\n      if (Array.isArray(currentColsWidth)) {\n        const currentCw = currentColsWidth[index];\n        if (isNumber(currentCw)) {\n          return currentCw;\n        }\n      }\n\n      return MIN_COL_WIDTH;\n    });\n  }\n\n  return controller.command(Commands.setNodeByKey, table.key, {\n    data: filterValidData({\n      ...table.data,\n      colsWidth: validColsWidth,\n    }),\n  });\n}\n"],"file":"setTableColsWidth.js"}