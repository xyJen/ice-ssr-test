import { Path } from '@ali/4ever-cangjie';
export default function createTableSelectionForFocusedCell(value, table) {
  if (value.data.edgeSelection) {
    return null;
  }

  if (!table) {
    return null;
  }

  var selection = value.selection,
      document = value.document;

  if (!selection) {
    return null;
  }

  var startPoint = selection.getStart(document);
  var endPoint = selection.getEnd(document);
  var startKey = startPoint == null ? void 0 : startPoint.key;
  var endKey = endPoint == null ? void 0 : endPoint.key;

  if (!startKey || !endKey) {
    return null;
  }

  var startPath = document.getPath(startKey);
  var endPath = document.getPath(endKey);

  if (!startPath || !endPath) {
    return null;
  }

  var selectionPath = Path.common(startPath, endPath);

  if (!selectionPath.length) {
    return null;
  }

  var tablePath = document.getPath(table.key);

  if (!tablePath) {
    return null;
  }

  var isSelectionInTableCell = Path.isAncestor(tablePath, selectionPath) && selectionPath.length - tablePath.length >= 2;

  if (!isSelectionInTableCell) {
    return null;
  }

  var _selectionPath$slice = selectionPath.slice(tablePath.length, tablePath.length + 2),
      startRowIndex = _selectionPath$slice[0],
      startColIndex = _selectionPath$slice[1]; // 表格分裂时，startRowIndex 可能大于 renderTable 行数


  if (startRowIndex >= table.nodes.length) {
    return null;
  }

  var cell = table.nodes[startRowIndex].nodes[startColIndex]; // 快捷插入列时，cell 会不存在

  if (!cell) {
    return null;
  }

  var rowSpan = cell.data && cell.data.rowSpan || 1;
  var colSpan = cell.data && cell.data.colSpan || 1;
  var endRowIndex = startRowIndex + rowSpan - 1;
  var endColIndex = startColIndex + colSpan - 1;
  return {
    key: table.key,
    startRowIndex: startRowIndex,
    endRowIndex: endRowIndex,
    startColIndex: startColIndex,
    endColIndex: endColIndex
  };
}
//# sourceMappingURL=createTableSelectionForFocusedCell.js.map