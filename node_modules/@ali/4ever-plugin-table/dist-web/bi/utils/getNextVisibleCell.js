import { getPositionOfCell, getRealNodeInTable } from '.';
import { isTableRow, isTable } from "../types";
export default function getNextNonHiddenCell(document, cell, direction) {
  var row = document.getClosest(cell.key, isTableRow);
  var nextRow = direction === 'up' ? document.getPreviousSibling(row.key) : document.getNextSibling(row.key);

  if (!nextRow) {
    return;
  }

  var colIndex = row.nodes.indexOf(cell); // nextRow.nodes.last() 是为了处理不规则表格的情况

  var nextCell = nextRow.nodes[colIndex] || nextRow.nodes[nextRow.nodes.length - 1];

  if (!nextCell) {
    return;
  }

  if (nextCell.data.hidden) {
    var table = document.getClosest(nextCell.key, isTable);

    var _ref = getPositionOfCell(nextCell.key, table),
        rowIndex = _ref.rowIndex,
        ci = _ref.colIndex;

    var realCell = getRealNodeInTable(table, rowIndex, ci);

    if (realCell === cell) {
      return getNextNonHiddenCell(document, nextCell, direction);
    }

    return realCell;
  }

  return nextCell;
}
//# sourceMappingURL=getNextVisibleCell.js.map