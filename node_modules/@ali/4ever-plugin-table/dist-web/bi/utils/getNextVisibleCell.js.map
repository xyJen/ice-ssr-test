{"version":3,"sources":["../../../../src/bi/utils/getNextVisibleCell.ts"],"names":["getPositionOfCell","getRealNodeInTable","isTableRow","isTable","getNextNonHiddenCell","document","cell","direction","row","getClosest","key","nextRow","getPreviousSibling","getNextSibling","colIndex","nodes","indexOf","nextCell","length","data","hidden","table","rowIndex","ci","realCell"],"mappings":"AAIA,SAASA,iBAAT,EAA4BC,kBAA5B,QAAsD,GAAtD;AACA,SAASC,UAAT,EAAqBC,OAArB;AAEA,eAAe,SAASC,oBAAT,CACbC,QADa,EAEbC,IAFa,EAGbC,SAHa,EAIb;AACA,MAAMC,GAAG,GAAGH,QAAQ,CAACI,UAAT,CAAoBH,IAAI,CAACI,GAAzB,EAA8BR,UAA9B,CAAZ;AACA,MAAMS,OAAO,GAAGJ,SAAS,KAAK,IAAd,GACdF,QAAQ,CAACO,kBAAT,CAA4BJ,GAAG,CAACE,GAAhC,CADc,GAEdL,QAAQ,CAACQ,cAAT,CAAwBL,GAAG,CAACE,GAA5B,CAFF;;AAGA,MAAI,CAACC,OAAL,EAAc;AACZ;AACD;;AAED,MAAMG,QAAQ,GAAGN,GAAG,CAACO,KAAJ,CAAUC,OAAV,CAAkBV,IAAlB,CAAjB,CATA,CAUA;;AACA,MAAMW,QAAQ,GAAIN,OAAO,CAACI,KAAR,CAAcD,QAAd,KAA2BH,OAAO,CAACI,KAAR,CAAcJ,OAAO,CAACI,KAAR,CAAcG,MAAd,GAAuB,CAArC,CAA7C;;AACA,MAAI,CAACD,QAAL,EAAe;AACb;AACD;;AAED,MAAIA,QAAQ,CAACE,IAAT,CAAcC,MAAlB,EAA0B;AACxB,QAAMC,KAAK,GAAGhB,QAAQ,CAACI,UAAT,CAAoBQ,QAAQ,CAACP,GAA7B,EAAkCP,OAAlC,CAAd;;AADwB,eAEWH,iBAAiB,CAACiB,QAAQ,CAACP,GAAV,EAAeW,KAAf,CAF5B;AAAA,QAEhBC,QAFgB,QAEhBA,QAFgB;AAAA,QAEIC,EAFJ,QAENT,QAFM;;AAGxB,QAAMU,QAAQ,GAAGvB,kBAAkB,CAACoB,KAAD,EAAQC,QAAR,EAAkBC,EAAlB,CAAnC;;AACA,QAAIC,QAAQ,KAAKlB,IAAjB,EAAuB;AACrB,aAAOF,oBAAoB,CAACC,QAAD,EAAWY,QAAX,EAAqBV,SAArB,CAA3B;AACD;;AACD,WAAOiB,QAAP;AACD;;AAED,SAAOP,QAAP;AACD","sourcesContent":["import { Document } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableRow from '../../mo/models/tableRow';\nimport TableCell from '../../mo/models/tableCell';\nimport { getPositionOfCell, getRealNodeInTable } from '.';\nimport { isTableRow, isTable } from '../types';\n\nexport default function getNextNonHiddenCell(\n  document: Document,\n  cell: TableCell,\n  direction: 'up' | 'down',\n) {\n  const row = document.getClosest(cell.key, isTableRow) as TableRow;\n  const nextRow = direction === 'up' ?\n    document.getPreviousSibling(row.key) as TableRow :\n    document.getNextSibling(row.key) as TableRow;\n  if (!nextRow) {\n    return;\n  }\n\n  const colIndex = row.nodes.indexOf(cell);\n  // nextRow.nodes.last() 是为了处理不规则表格的情况\n  const nextCell = (nextRow.nodes[colIndex] || nextRow.nodes[nextRow.nodes.length - 1]) as TableCell;\n  if (!nextCell) {\n    return;\n  }\n\n  if (nextCell.data.hidden) {\n    const table = document.getClosest(nextCell.key, isTable) as Table;\n    const { rowIndex, colIndex: ci } = getPositionOfCell(nextCell.key, table)!;\n    const realCell = getRealNodeInTable(table, rowIndex, ci);\n    if (realCell === cell) {\n      return getNextNonHiddenCell(document, nextCell, direction);\n    }\n    return realCell;\n  }\n\n  return nextCell;\n}\n"],"file":"getNextVisibleCell.js"}