import _extends from "@babel/runtime/helpers/extends";
import { Commands } from '@ali/4ever-cangjie';
import isNumber from "./isNumber";
import { MIN_COL_WIDTH } from "../../utils/constants";
import filterValidData from "../../utils/utils/filterValidData";

function isValidColsWidth(colsWidth) {
  return Array.isArray(colsWidth) && colsWidth.every(isNumber);
}

export default function setTableColsWidth(controller, table, colsWidth) {
  var currentColsWidth = table.data.colsWidth;
  var validColsWidth = [];

  if (!Array.isArray(colsWidth)) {
    if (isValidColsWidth(currentColsWidth)) {
      return controller;
    }

    validColsWidth = Array(table.nodes.length).fill(MIN_COL_WIDTH);
  } else {
    validColsWidth = colsWidth.map(function (cw, index) {
      if (isNumber(cw)) {
        return cw;
      }

      if (Array.isArray(currentColsWidth)) {
        var currentCw = currentColsWidth[index];

        if (isNumber(currentCw)) {
          return currentCw;
        }
      }

      return MIN_COL_WIDTH;
    });
  }

  return controller.command(Commands.setNodeByKey, table.key, {
    data: filterValidData(_extends({}, table.data, {
      colsWidth: validColsWidth
    }))
  });
}
//# sourceMappingURL=setTableColsWidth.js.map