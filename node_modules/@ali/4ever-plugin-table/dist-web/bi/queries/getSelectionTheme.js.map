{"version":3,"sources":["../../../../src/bi/queries/getSelectionTheme.ts"],"names":["getTable","getTableSelection","DEFAULT_BORDER_COLOR","getCellBorder","bdr","top","right","bottom","left","lBdColor","sz","color","rBdColor","tBdColor","bBdColor","getCellsSameValue","controller","fn","defaultValue","undefined","value","table","selection","res","startRowIndex","startColIndex","endRowIndex","endColIndex","tablePath","document","getPath","key","rowIndex","colIndex","isFirst","cellPath","cell","getNodeByPath","payload","data","hidden","getSelectionTheme","bgColor","fill","bdColor","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import type { Controller, Block, MoInterfaces } from '@ali/4ever-cangjie';\nimport getTable from '../utils/getTable';\nimport getTableSelection from '../utils/getTableSelection';\nimport { DEFAULT_BORDER_COLOR } from '../../utils/constants';\n\nfunction getCellBorder(bdr: MoInterfaces.TableBorder.default) {\n  const { top, right, bottom, left } = bdr;\n  const lBdColor = left && left.sz! > 0 ? left.color : '';\n  const rBdColor = right && right.sz! > 0 ? right.color : '';\n  const tBdColor = top && top.sz! > 0 ? top.color : '';\n  const bBdColor = bottom && bottom.sz! > 0 ? bottom.color : '';\n\n  return lBdColor === rBdColor && tBdColor === bBdColor && lBdColor === tBdColor ? lBdColor : '';\n}\n\nfunction getCellsSameValue(controller: Controller, fn: (payload: any) => any, defaultValue: any = undefined) {\n  const { value } = controller;\n  const table = getTable(value);\n  const selection = getTableSelection(controller);\n  let res = defaultValue;\n  if (selection && table) {\n    const { startRowIndex, startColIndex, endRowIndex, endColIndex } = selection;\n\n    const tablePath = value.document.getPath(table.key);\n    if (tablePath) {\n      for (let rowIndex = startRowIndex; rowIndex <= endRowIndex; rowIndex++) {\n        for (let colIndex = startColIndex; colIndex <= endColIndex; colIndex++) {\n          const isFirst = rowIndex === startRowIndex && colIndex === startColIndex;\n\n          const cellPath = [...tablePath, rowIndex, colIndex];\n          const cell = cellPath && value.document.getNodeByPath(cellPath) as Block;\n          if (cell) {\n            const payload = cell.data;\n            if (payload && !payload.hidden) {\n              if (isFirst) {\n                res = fn(payload);\n              } else if (res !== fn(payload)) {\n                return defaultValue;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return res;\n}\n\nexport function getSelectionTheme(controller: Controller) {\n  const bgColor = getCellsSameValue(controller, (payload) => payload?.fill);\n  const bdColor = getCellsSameValue(controller, (payload) => {\n    if (payload?.bdr) {\n      return getCellBorder(payload.bdr);\n    }\n    return DEFAULT_BORDER_COLOR;\n  }, DEFAULT_BORDER_COLOR);\n  return {\n    backgroundColor: bgColor,\n    borderColor: bdColor,\n  };\n}\n"],"file":"getSelectionTheme.js"}