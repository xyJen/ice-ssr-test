{"version":3,"sources":["../../../src/bi/createRenderNode.tsx"],"names":["React","omit","MoTable","MoTableRow","MoTableCell","Table","TableRow","TableCell","TableWrapper","SPACING","TOOLBAR_ITEM_SIZE","SCROLL_BAR_HEIGHT","createRenderNode","config","tableConfig","table","draggableConfig","draggable","tableLocaleConfig","locale","TYPE","props","node","visible","isValidTable","wrapperStyle","paddingTop","paddingBottom","attributes"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,IAAT,QAAqB,WAArB;AAOA,OAAOC,OAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,SAASC,YAAT;AACA,SAASC,OAAT,EAAkBC,iBAAlB,EAAqCC,iBAArC;AAEA,eAAe,SAASC,gBAAT,CACbC,MADa,EAES;AAAA;;AACtB,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAP,IAAgB,EAApC;AACA,MAAMC,eAAe,GAAGH,MAAM,CAACI,SAA/B;AACA,MAAMC,iBAAiB,GAAGJ,WAAW,CAACK,MAAZ,IAAsB,EAAhD,CAHsB,CAItB;;AACA,yBACGjB,OAAO,CAACkB,IADX,IACkB,UAACC,KAAD,EAAqC;AAAA,QAC3CC,IAD2C,GACzBD,KADyB,CAC3CC,IAD2C;AAAA,QACrCC,OADqC,GACzBF,KADyB,CACrCE,OADqC;;AAGnD,QAAI,CAACrB,OAAO,CAACsB,YAAR,CAAqBF,IAArB,CAAL,EAAiC;AAC/B,0BAAO,oCAAP;AACD;;AACD,QAAMG,YAAY,GAAG;AACnBC,MAAAA,UAAU,EAAEjB,OAAO,GAAGC,iBADH;AAEnBiB,MAAAA,aAAa,EAAElB,OAAO,GAAGE;AAFN,KAArB;AAIA,wBACE,eAAC,YAAD,eAAkBU,KAAK,CAACO,UAAxB;AAAoC,MAAA,OAAO,EAAEL,OAA7C;AAAsD,MAAA,KAAK,EAAEE;AAA7D,qBACE,eAAC,KAAD,eACMxB,IAAI,CAACoB,KAAD,EAAQ,YAAR,CADV;AAEE,MAAA,MAAM,EAAEH,iBAFV;AAGE,MAAA,WAAW,EAAEJ,WAHf;AAIE,MAAA,eAAe,EAAEE;AAJnB,OADF,CADF;AAUD,GArBH,OAsBGb,UAAU,CAACiB,IAtBd,IAsBqB,UAACC,KAAD,EAAW;AAC5B,wBAAO,eAAC,QAAD,EAAeA,KAAf,CAAP;AACD,GAxBH,OAyBGjB,WAAW,CAACgB,IAzBf,IAyBsB,UAACC,KAAD,EAAW;AAC7B,wBAAO,eAAC,SAAD,EAAgBA,KAAhB,CAAP;AACD,GA3BH;AA6BD","sourcesContent":["import * as React from 'react';\nimport { omit } from 'lodash-es';\nimport {\n  Plugin,\n  RenderNodeProps,\n  Block,\n  BiPluginConfig,\n} from '@ali/4ever-cangjie';\nimport MoTable from '../mo/models';\nimport MoTableRow from '../mo/models/tableRow';\nimport MoTableCell from '../mo/models/tableCell';\nimport Table from './components/table';\nimport TableRow from './components/tableRow';\nimport TableCell from './components/tableCell';\nimport { TableWrapper } from './components/styled';\nimport { SPACING, TOOLBAR_ITEM_SIZE, SCROLL_BAR_HEIGHT } from '../utils/constants';\n\nexport default function createRenderNode(\n  config: BiPluginConfig,\n): Plugin['renderNode'] {\n  const tableConfig = config.table || {};\n  const draggableConfig = config.draggable;\n  const tableLocaleConfig = tableConfig.locale || {};\n  // @ts-ignore\n  return {\n    [MoTable.TYPE]: (props: RenderNodeProps<MoTable>) => {\n      const { node, visible } = props;\n\n      if (!MoTable.isValidTable(node)) {\n        return <></>;\n      }\n      const wrapperStyle = {\n        paddingTop: SPACING - TOOLBAR_ITEM_SIZE,\n        paddingBottom: SPACING - SCROLL_BAR_HEIGHT,\n      };\n      return (\n        <TableWrapper {...props.attributes} visible={visible} style={wrapperStyle}>\n          <Table\n            {...omit(props, 'attributes')}\n            locale={tableLocaleConfig}\n            tableConfig={tableConfig}\n            draggableConfig={draggableConfig}\n          />\n        </TableWrapper>\n      );\n    },\n    [MoTableRow.TYPE]: (props) => {\n      return <TableRow {...(props as RenderNodeProps<Block>)} />;\n    },\n    [MoTableCell.TYPE]: (props) => {\n      return <TableCell {...(props as RenderNodeProps<MoTableCell>)} />;\n    },\n  };\n}\n"],"file":"createRenderNode.js"}