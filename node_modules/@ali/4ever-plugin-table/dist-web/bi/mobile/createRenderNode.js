import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { omit } from 'lodash-es';
import MoTable from "../../mo/models";
import MoTableRow from "../../mo/models/tableRow";
import MoTableCell from "../../mo/models/tableCell";
import Table from "./components/table";
import TableRow from "../components/tableRow";
import TableCell from "../components/tableCell";
import { TableWrapper } from "../components/styled";
export default function createRenderNode(config) {
  var _ref;

  var tableConfig = config.table || {}; // @ts-ignore

  return _ref = {}, _ref[MoTable.TYPE] = function (props) {
    var node = props.node,
        visible = props.visible;

    if (!MoTable.isValidTable(node)) {
      return /*#__PURE__*/_createElement(React.Fragment, null);
    }

    return /*#__PURE__*/_createElement(TableWrapper, _extends({}, props.attributes, {
      visible: visible
    }), /*#__PURE__*/_createElement(Table, _extends({}, omit(props, 'attributes'), {
      tableConfig: tableConfig
    })));
  }, _ref[MoTableRow.TYPE] = function (props) {
    return /*#__PURE__*/_createElement(TableRow, props);
  }, _ref[MoTableCell.TYPE] = function (props) {
    return /*#__PURE__*/_createElement(TableCell, props);
  }, _ref;
}
//# sourceMappingURL=createRenderNode.js.map