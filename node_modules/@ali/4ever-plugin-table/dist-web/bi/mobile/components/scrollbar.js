import React, { useCallback, useEffect, useRef, useState } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { SCROLL_BAR_HEIGHT } from "../../../utils/constants";
import useResizeObserver from "../../../utils/utils/useResizeObserver";
import { TOOLBAR_ITEM_SIZE_MOBILE } from "../../constants";
var SCROLLER_BG_COLOR = 'rgba(31, 35, 41, .3)';
var SCROLLER_BORDER_COLOR = 'rgba(242, 243, 245, .3)';
var Container = /*#__PURE__*/styled.div(["position:relative;height:", "px;padding-top:2px;box-sizing:border-box;"], SCROLL_BAR_HEIGHT);
var Slider = /*#__PURE__*/styled.div(["position:absolute;height:4px;border-radius:3px;background-color:", ";border:1px solid ", ";opacity:0;"], SCROLLER_BG_COLOR, SCROLLER_BORDER_COLOR);
export var Scrollbar = function Scrollbar(props) {
  var scrollContainer = props.scrollContainer,
      scrollContent = props.scrollContent;

  var _useState = useState(0),
      containerWidth = _useState[0],
      setContainerWidth = _useState[1];

  var prevContainerWidthRef = useRef(0);

  var _useState2 = useState(0),
      contentWidth = _useState2[0],
      setContentWidth = _useState2[1];

  var prevContentWidthRef = useRef(0);
  var sliderRef = useRef(null);
  var handleContentResize = useCallback(function (rect) {
    if (rect.width !== prevContainerWidthRef.current) {
      setContentWidth(rect.width);
      prevContainerWidthRef.current = rect.width;
    }
  }, []);
  useResizeObserver(scrollContent, handleContentResize);
  var handleContainerResize = useCallback(function (rect) {
    if (rect.width !== prevContentWidthRef.current) {
      setContainerWidth(rect.width - TOOLBAR_ITEM_SIZE_MOBILE);
      prevContentWidthRef.current = rect.width;
    }
  }, []);
  useResizeObserver(scrollContainer, handleContainerResize); // 更新滚动条位置

  useEffect(function () {
    if (!scrollContainer) return function () {};
    var hideSliderTimer;

    var showSlider = function showSlider(visible) {
      if (sliderRef.current) {
        sliderRef.current.style.opacity = visible ? '1' : '0';
      }
    };

    var handleScroll = function handleScroll() {
      if (!sliderRef.current || !scrollContainer) return;
      clearTimeout(hideSliderTimer);
      showSlider(true);
      var left = scrollContainer.scrollLeft * 100 / (scrollContainer.clientWidth - TOOLBAR_ITEM_SIZE_MOBILE);
      sliderRef.current.style.transform = "translateX(" + left + "%)";
      hideSliderTimer = setTimeout(function () {
        showSlider(false);
      }, 500);
    };

    scrollContainer.addEventListener('scroll', handleScroll);
    return function () {
      scrollContainer.removeEventListener('scroll', handleScroll);
    };
  }, [scrollContainer]);
  var scrollerWidth = containerWidth / contentWidth * containerWidth;
  return /*#__PURE__*/_createElement(Container, {
    style: {
      width: containerWidth
    }
  }, /*#__PURE__*/_createElement(Slider, {
    ref: sliderRef,
    style: {
      width: scrollerWidth
    }
  }));
};
//# sourceMappingURL=scrollbar.js.map