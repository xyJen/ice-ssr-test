{"version":3,"sources":["../../../../../src/bi/mobile/components/scrollbar.tsx"],"names":["React","useCallback","useEffect","useRef","useState","styled","SCROLL_BAR_HEIGHT","useResizeObserver","TOOLBAR_ITEM_SIZE_MOBILE","SCROLLER_BG_COLOR","SCROLLER_BORDER_COLOR","Container","div","Slider","Scrollbar","props","scrollContainer","scrollContent","containerWidth","setContainerWidth","prevContainerWidthRef","contentWidth","setContentWidth","prevContentWidthRef","sliderRef","handleContentResize","rect","width","current","handleContainerResize","hideSliderTimer","showSlider","visible","style","opacity","handleScroll","clearTimeout","left","scrollLeft","clientWidth","transform","setTimeout","addEventListener","removeEventListener","scrollerWidth"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,QAAhD,QAAgE,OAAhE;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT;AACA,OAAOC,iBAAP;AACA,SAASC,wBAAT;AAEA,IAAMC,iBAAiB,GAAG,sBAA1B;AACA,IAAMC,qBAAqB,GAAG,yBAA9B;AAOA,IAAMC,SAAS,gBAAGN,MAAM,CAACO,GAAV,6EAEHN,iBAFG,CAAf;AAOA,IAAMO,MAAM,gBAAGR,MAAM,CAACO,GAAV,4GAIUH,iBAJV,EAKUC,qBALV,CAAZ;AASA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA2B;AAAA,MAC1CC,eAD0C,GACPD,KADO,CAC1CC,eAD0C;AAAA,MACzBC,aADyB,GACPF,KADO,CACzBE,aADyB;;AAAA,kBAENb,QAAQ,CAAC,CAAD,CAFF;AAAA,MAE3Cc,cAF2C;AAAA,MAE3BC,iBAF2B;;AAGlD,MAAMC,qBAAqB,GAAGjB,MAAM,CAAC,CAAD,CAApC;;AAHkD,mBAIVC,QAAQ,CAAC,CAAD,CAJE;AAAA,MAI3CiB,YAJ2C;AAAA,MAI7BC,eAJ6B;;AAKlD,MAAMC,mBAAmB,GAAGpB,MAAM,CAAC,CAAD,CAAlC;AACA,MAAMqB,SAAS,GAAGrB,MAAM,CAAiB,IAAjB,CAAxB;AAEA,MAAMsB,mBAAmB,GAAGxB,WAAW,CAAC,UAACyB,IAAD,EAAmB;AACzD,QAAIA,IAAI,CAACC,KAAL,KAAeP,qBAAqB,CAACQ,OAAzC,EAAkD;AAChDN,MAAAA,eAAe,CAACI,IAAI,CAACC,KAAN,CAAf;AACAP,MAAAA,qBAAqB,CAACQ,OAAtB,GAAgCF,IAAI,CAACC,KAArC;AACD;AACF,GALsC,EAKpC,EALoC,CAAvC;AAMApB,EAAAA,iBAAiB,CAACU,aAAD,EAAgBQ,mBAAhB,CAAjB;AAEA,MAAMI,qBAAqB,GAAG5B,WAAW,CAAC,UAACyB,IAAD,EAAU;AAClD,QAAIA,IAAI,CAACC,KAAL,KAAeJ,mBAAmB,CAACK,OAAvC,EAAgD;AAC9CT,MAAAA,iBAAiB,CAACO,IAAI,CAACC,KAAL,GAAanB,wBAAd,CAAjB;AACAe,MAAAA,mBAAmB,CAACK,OAApB,GAA8BF,IAAI,CAACC,KAAnC;AACD;AACF,GALwC,EAKtC,EALsC,CAAzC;AAMApB,EAAAA,iBAAiB,CAACS,eAAD,EAAkBa,qBAAlB,CAAjB,CAtBkD,CAwBlD;;AACA3B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACc,eAAL,EAAsB,OAAO,YAAM,CAAE,CAAf;AAEtB,QAAIc,eAAJ;;AACA,QAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAsB;AACvC,UAAIR,SAAS,CAACI,OAAd,EAAuB;AACrBJ,QAAAA,SAAS,CAACI,OAAV,CAAkBK,KAAlB,CAAwBC,OAAxB,GAAkCF,OAAO,GAAG,GAAH,GAAS,GAAlD;AACD;AACF,KAJD;;AAMA,QAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAI,CAACX,SAAS,CAACI,OAAX,IAAsB,CAACZ,eAA3B,EAA4C;AAE5CoB,MAAAA,YAAY,CAACN,eAAD,CAAZ;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMM,IAAI,GAAGrB,eAAe,CAACsB,UAAhB,GAA6B,GAA7B,IAAoCtB,eAAe,CAACuB,WAAhB,GAA8B/B,wBAAlE,CAAb;AACAgB,MAAAA,SAAS,CAACI,OAAV,CAAkBK,KAAlB,CAAwBO,SAAxB,mBAAkDH,IAAlD;AACAP,MAAAA,eAAe,GAAGW,UAAU,CAAC,YAAM;AACjCV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAF2B,EAEzB,GAFyB,CAA5B;AAGD,KAVD;;AAWAf,IAAAA,eAAe,CAAC0B,gBAAhB,CAAiC,QAAjC,EAA2CP,YAA3C;AACA,WAAO,YAAM;AACXnB,MAAAA,eAAe,CAAC2B,mBAAhB,CAAoC,QAApC,EAA8CR,YAA9C;AACD,KAFD;AAGD,GAzBQ,EAyBN,CAACnB,eAAD,CAzBM,CAAT;AA2BA,MAAM4B,aAAa,GAAG1B,cAAc,GAAGG,YAAjB,GAAgCH,cAAtD;AACA,sBACE,eAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAET;AAAT;AAAlB,kBACE,eAAC,MAAD;AACE,IAAA,GAAG,EAAEM,SADP;AAEE,IAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAEiB;AADF;AAFT,IADF,CADF;AAUD,CA/DM","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { SCROLL_BAR_HEIGHT } from '../../../utils/constants';\nimport useResizeObserver from '../../../utils/utils/useResizeObserver';\nimport { TOOLBAR_ITEM_SIZE_MOBILE } from '../../constants';\n\nconst SCROLLER_BG_COLOR = 'rgba(31, 35, 41, .3)';\nconst SCROLLER_BORDER_COLOR = 'rgba(242, 243, 245, .3)';\n\ninterface ScrollbarProps {\n  scrollContainer: HTMLDivElement | null;\n  scrollContent: HTMLTableElement | null;\n}\n\nconst Container = styled.div`\n  position: relative;\n  height: ${SCROLL_BAR_HEIGHT}px;\n  padding-top: 2px;\n  box-sizing: border-box;\n`;\n\nconst Slider = styled.div`\n  position: absolute;\n  height: 4px;\n  border-radius: 3px;\n  background-color: ${SCROLLER_BG_COLOR};\n  border: 1px solid ${SCROLLER_BORDER_COLOR};\n  opacity: 0;\n`;\n\nexport const Scrollbar = (props: ScrollbarProps) => {\n  const { scrollContainer, scrollContent } = props;\n  const [containerWidth, setContainerWidth] = useState(0);\n  const prevContainerWidthRef = useRef(0);\n  const [contentWidth, setContentWidth] = useState(0);\n  const prevContentWidthRef = useRef(0);\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const handleContentResize = useCallback((rect: DOMRect) => {\n    if (rect.width !== prevContainerWidthRef.current) {\n      setContentWidth(rect.width);\n      prevContainerWidthRef.current = rect.width;\n    }\n  }, []);\n  useResizeObserver(scrollContent, handleContentResize);\n\n  const handleContainerResize = useCallback((rect) => {\n    if (rect.width !== prevContentWidthRef.current) {\n      setContainerWidth(rect.width - TOOLBAR_ITEM_SIZE_MOBILE);\n      prevContentWidthRef.current = rect.width;\n    }\n  }, []);\n  useResizeObserver(scrollContainer, handleContainerResize);\n\n  // 更新滚动条位置\n  useEffect(() => {\n    if (!scrollContainer) return () => {};\n\n    let hideSliderTimer;\n    const showSlider = (visible: boolean) => {\n      if (sliderRef.current) {\n        sliderRef.current.style.opacity = visible ? '1' : '0';\n      }\n    };\n\n    const handleScroll = () => {\n      if (!sliderRef.current || !scrollContainer) return;\n\n      clearTimeout(hideSliderTimer);\n      showSlider(true);\n      const left = scrollContainer.scrollLeft * 100 / (scrollContainer.clientWidth - TOOLBAR_ITEM_SIZE_MOBILE);\n      sliderRef.current.style.transform = `translateX(${left}%)`;\n      hideSliderTimer = setTimeout(() => {\n        showSlider(false);\n      }, 500);\n    };\n    scrollContainer.addEventListener('scroll', handleScroll);\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleScroll);\n    };\n  }, [scrollContainer]);\n\n  const scrollerWidth = containerWidth / contentWidth * containerWidth;\n  return (\n    <Container style={{ width: containerWidth }}>\n      <Slider\n        ref={sliderRef}\n        style={{\n          width: scrollerWidth,\n        }}\n      />\n    </Container>\n  );\n};\n"],"file":"scrollbar.js"}