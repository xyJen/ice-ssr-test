import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import RowToolbarItem from "../../../components/rowToolbar/rowToolbarItem";
import { TOOLBAR_ITEM_SIZE_MOBILE } from "../../../constants";
import { useRowsClientHeight } from "../../../../utils/hooks";
import { selectTableRows } from "../../../actions";
var Wrapper = /*#__PURE__*/styled.div(["position:absolute;width:", "px;top:", "px;left:0;"], TOOLBAR_ITEM_SIZE_MOBILE, TOOLBAR_ITEM_SIZE_MOBILE);
export var MobileRowToolbar = function MobileRowToolbar(props) {
  var table = props.table,
      activeRange = props.activeRange,
      selectRange = props.selectRange,
      visible = props.visible,
      controller = props.controller;

  var preventEvent = function preventEvent(e) {
    e.stopPropagation();
  };

  var handleSelectRow = function handleSelectRow(i, e) {
    preventEvent(e);
    e.preventDefault();
    e.nativeEvent.stopImmediatePropagation();
    controller.run('onAction', selectTableRows(table, i, i));
    controller.setIsFocused(false);
  };

  var _useRowsClientHeight = useRowsClientHeight(),
      rowsClientHeight = _useRowsClientHeight[0];

  var rowsHeight = React.useMemo(function () {
    return table.nodes.map(function (row) {
      return rowsClientHeight[row.key] || 0;
    });
  }, [rowsClientHeight, table.nodes]);
  return /*#__PURE__*/_createElement(Wrapper, {
    style: {
      display: visible ? 'block' : 'none'
    }
  }, table.nodes.map(function (_, i) {
    return /*#__PURE__*/_createElement(RowToolbarItem, {
      style: {
        width: TOOLBAR_ITEM_SIZE_MOBILE,
        borderTopLeftRadius: i === 0 ? 4 : 0,
        borderBottomLeftRadius: i === table.nodes.length - 1 ? 4 : 0
      },
      selectRanges: selectRange ? [selectRange] : null,
      activeRange: activeRange,
      key: table.nodes[i].key,
      index: i,
      table: table,
      onClick: function onClick(e) {
        return handleSelectRow(i, e);
      },
      onMouseDown: preventEvent,
      rowHeight: rowsHeight[i],
      width: TOOLBAR_ITEM_SIZE_MOBILE
    }, props.children);
  }));
};
//# sourceMappingURL=mobileRowToolbar.js.map