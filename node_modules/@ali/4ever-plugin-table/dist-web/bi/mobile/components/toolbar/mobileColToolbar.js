import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { TableColToolbarItem } from "../../../components/colToolbar/tableColToolbarItem";
import { TOOLBAR_ITEM_SIZE_MOBILE } from "../../../constants";
import { usePixelColsWidth } from "../../../../utils/hooks";
import { selectTableCols } from "../../../actions";
import { ColToolbarDragButton } from "./colToolbarDragButton";
export var MobileColToolbar = function MobileColToolbar(props) {
  var activeRange = props.activeRange,
      selectRange = props.selectRange,
      controller = props.controller,
      visible = props.visible,
      table = props.table,
      propsStyle = props.style;

  var _usePixelColsWidth = usePixelColsWidth(),
      colsWidth = _usePixelColsWidth[0];

  var preventEvent = function preventEvent(e) {
    e.stopPropagation();
    e.preventDefault();
  };

  var stopPropagation = function stopPropagation(e) {
    e.stopPropagation();
  };

  var handleSelectCol = function handleSelectCol(e, i) {
    controller.run('onAction', selectTableCols(table, i, i));
    setTimeout(function () {
      controller.setIsFocused(false);
    });
  };

  var style = _extends({}, propsStyle, {
    visibility: visible ? 'visible' : 'hidden',
    width: colsWidth.reduce(function (acc, w) {
      return acc + w;
    }, 0) + 1,
    height: TOOLBAR_ITEM_SIZE_MOBILE
  });

  return /*#__PURE__*/_createElement("div", {
    style: style
  }, colsWidth.map(function (w, i) {
    return /*#__PURE__*/_createElement(TableColToolbarItem, {
      style: {
        height: TOOLBAR_ITEM_SIZE_MOBILE,
        borderTopLeftRadius: i === 0 ? 4 : 0,
        borderTopRightRadius: i === colsWidth.length - 1 ? 4 : 0
      },
      key: i + "_" + w,
      selectRanges: selectRange ? [selectRange] : null,
      activeRange: activeRange,
      index: i,
      onClick: function onClick(e) {
        return handleSelectCol(e, i);
      },
      onTouchStart: preventEvent,
      onMouseDown: stopPropagation
    }, props.children, i === (selectRange == null ? void 0 : selectRange.end) && /*#__PURE__*/_createElement(ColToolbarDragButton, {
      table: table,
      controller: controller,
      index: i
    }));
  }));
};
//# sourceMappingURL=mobileColToolbar.js.map