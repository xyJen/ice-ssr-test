{"version":3,"sources":["../../../../../../src/bi/mobile/components/toolbar/mobileRowToolbar.tsx"],"names":["React","styled","RowToolbarItem","TOOLBAR_ITEM_SIZE_MOBILE","useRowsClientHeight","selectTableRows","Wrapper","div","MobileRowToolbar","props","table","activeRange","selectRange","visible","controller","preventEvent","e","stopPropagation","handleSelectRow","i","preventDefault","nativeEvent","stopImmediatePropagation","run","setIsFocused","rowsClientHeight","rowsHeight","useMemo","nodes","map","row","key","display","_","width","borderTopLeftRadius","borderBottomLeftRadius","length","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../../../mo/models';\nimport RowToolbarItem from '../../../components/rowToolbar/rowToolbarItem';\nimport type { Range } from '../../../components/rowColToolbarItemRect';\nimport { TOOLBAR_ITEM_SIZE_MOBILE } from '../../../constants';\nimport { useRowsClientHeight } from '../../../../utils/hooks';\nimport { selectTableRows } from '../../../actions';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: ${TOOLBAR_ITEM_SIZE_MOBILE}px;\n  top: ${TOOLBAR_ITEM_SIZE_MOBILE}px;\n  left: 0;\n`;\n\ntype ToolbarProps = {\n  table: Table;\n  controller: Controller;\n  visible: boolean;\n  // 选区所在行列\n  activeRange?: Range | null;\n  // 选中行列\n  selectRange?: Range | null;\n  children?: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const MobileRowToolbar = (props: ToolbarProps) => {\n  const { table, activeRange, selectRange, visible, controller } =\n    props;\n  const preventEvent = (e: React.TouchEvent | React.MouseEvent) => {\n    e.stopPropagation();\n  };\n  const handleSelectRow = (i: number, e: React.MouseEvent) => {\n    preventEvent(e);\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    controller.run(\n      'onAction',\n      selectTableRows(table, i, i),\n    );\n    controller.setIsFocused(false);\n  };\n  const [rowsClientHeight] = useRowsClientHeight();\n\n  const rowsHeight = React.useMemo(() => {\n    return table.nodes.map((row) => (rowsClientHeight[row.key] || 0));\n  }, [rowsClientHeight, table.nodes]);\n\n  return (\n    <Wrapper style={{ display: visible ? 'block' : 'none' }}>\n      {table.nodes.map((_, i) => (\n        <RowToolbarItem\n          style={{\n            width: TOOLBAR_ITEM_SIZE_MOBILE,\n            borderTopLeftRadius: i === 0 ? 4 : 0,\n            borderBottomLeftRadius: i === table.nodes.length - 1 ? 4 : 0,\n          }}\n          selectRanges={selectRange ? [selectRange] : null}\n          activeRange={activeRange}\n          key={table.nodes[i].key}\n          index={i}\n          table={table}\n          onClick={(e) => handleSelectRow(i, e)}\n          onMouseDown={preventEvent}\n          rowHeight={rowsHeight[i]}\n          width={TOOLBAR_ITEM_SIZE_MOBILE}\n        >\n          {props.children}\n        </RowToolbarItem>\n      ))}\n    </Wrapper>\n  );\n};\n"],"file":"mobileRowToolbar.js"}