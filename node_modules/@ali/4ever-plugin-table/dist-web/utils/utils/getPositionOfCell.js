var POSITION_CACHE = new WeakMap();

var hasCache = function hasCache(key, table) {
  if (POSITION_CACHE.has(table)) {
    var tableCache = POSITION_CACHE.get(table);

    if (tableCache && tableCache[key] !== undefined) {
      return true;
    }
  }

  return false;
};

var setCache = function setCache(key, table, position) {
  if (!POSITION_CACHE.has(table)) {
    POSITION_CACHE.set(table, {});
  }

  var tableCache = POSITION_CACHE.get(table);
  tableCache[key] = position;
  POSITION_CACHE.set(table, tableCache);
};

export default function getPositionOfCell(cellKey, table) {
  if (!(table != null && table.nodes)) return null;

  if (hasCache(cellKey, table)) {
    return POSITION_CACHE.get(table)[cellKey];
  }

  var path = table.getPath(cellKey);

  if (!path || path.length !== 2) {
    setCache(cellKey, table, null);
    return null;
  }

  var position = {
    colIndex: path[1],
    rowIndex: path[0]
  };
  setCache(cellKey, table, position);
  return position;
}
//# sourceMappingURL=getPositionOfCell.js.map