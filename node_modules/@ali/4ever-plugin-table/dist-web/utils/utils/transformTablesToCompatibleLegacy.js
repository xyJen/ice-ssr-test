import _extends from "@babel/runtime/helpers/extends";
import Table from "../../mo/models";
import { getInnerWidth } from '@ali/4ever-utils';
import { DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT } from "../constants";
import { convertFromPercentToPixel } from "./colsWidthConverter";
export default function transformTablesToCompatibleLegacy(document, fragment, isMobile) {
  if (isMobile === void 0) {
    isMobile = false;
  }

  var autofitTables = fragment.filterDescendants(function (n) {
    return Table.isTable(n) && Table.isAutofitWidth(n);
  });

  if (autofitTables.length > 0) {
    var pageWidth = DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT;

    if (!isMobile) {
      pageWidth = getInnerWidth(document) || DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT;
    }

    autofitTables.forEach(function (t) {
      var newColsWidth = convertFromPercentToPixel(t, pageWidth);
      var path = fragment.getPath(t.key);

      if (path) {
        fragment = fragment.setNode(path, {
          data: _extends({}, t.data, {
            colsWidth: newColsWidth
          })
        });
      }
    });
    return {
      shouldTransfrom: true,
      fragment: fragment
    };
  }

  return {
    shouldTransfrom: false,
    fragment: fragment
  };
}
//# sourceMappingURL=transformTablesToCompatibleLegacy.js.map