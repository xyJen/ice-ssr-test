{"version":3,"sources":["../../../../src/utils/utils/useResizeObserver.ts"],"names":["fastdom","React","ResizeObserver","useResizeObserver","target","callback","observerRef","useRef","useEffect","HTMLElement","undefined","current","measure","rect","getBoundingClientRect","observe","box","unobserve","disconnect"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CACxBC,MADwB,EAExBC,QAFwB,EAGrB;AACH,MAAMC,WAAW,GAAGL,KAAK,CAACM,MAAN,EAApB;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,YAAM;AACpB,QAAI,EAAEJ,MAAM,YAAYK,WAApB,CAAJ,EAAsC,OAAOC,SAAP;AAEtCJ,IAAAA,WAAW,CAACK,OAAZ,GAAsB,IAAIT,cAAJ,CAAmB,YAAM;AAC7CF,MAAAA,OAAO,CAACY,OAAR,CAAgB,YAAM;AACpB,YAAMC,IAAI,GAAGT,MAAM,CAACU,qBAAP,EAAb;AACAT,QAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,OAHD;AAID,KALqB,CAAtB,CAHoB,CAUpB;;AACAP,IAAAA,WAAW,CAACK,OAAZ,CAAoBI,OAApB,CAA4BX,MAA5B,EAAoC;AAAEY,MAAAA,GAAG,EAAE;AAAP,KAApC;AAEA,WAAO,YAAM;AAAA;;AACX,8BAAAV,WAAW,CAACK,OAAZ,0CAAqBM,SAArB,CAA+Bb,MAA/B;AACD,KAFD;AAGD,GAhBD,EAgBG,CAACA,MAAD,EAASC,QAAT,CAhBH;AAkBAJ,EAAAA,KAAK,CAACO,SAAN,CAAgB,YAAM;AACpB,WAAO,YAAM;AACX,UAAIF,WAAW,CAACK,OAAhB,EAAyB;AACvBL,QAAAA,WAAW,CAACK,OAAZ,CAAoBO,UAApB;AACD;AACF,KAJD;AAKD,GAND,EAMG,EANH;AAOD,CA/BD;;AAiCA,eAAef,iBAAf","sourcesContent":["import fastdom from 'fastdom';\nimport * as React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nconst useResizeObserver = (\n  target: HTMLElement | Window | null,\n  callback: ((rect: DOMRect) => void),\n) => {\n  const observerRef = React.useRef<ResizeObserver>();\n\n  React.useEffect(() => {\n    if (!(target instanceof HTMLElement)) return undefined;\n\n    observerRef.current = new ResizeObserver(() => {\n      fastdom.measure(() => {\n        const rect = target.getBoundingClientRect();\n        callback(rect);\n      });\n    });\n\n    // @ts-ignore resize-observer-polyfill API 不支持 options，浏览器可用\n    observerRef.current.observe(target, { box: 'border-box' });\n\n    return () => {\n      observerRef.current?.unobserve(target);\n    };\n  }, [target, callback]);\n\n  React.useEffect(() => {\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, []);\n};\n\nexport default useResizeObserver;\n"],"file":"useResizeObserver.js"}