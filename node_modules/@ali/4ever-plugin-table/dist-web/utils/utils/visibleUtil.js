var VISIBLE_MAP = {};
export var VisibleUtil = /*#__PURE__*/function () {
  function VisibleUtil() {
    this.callbackMap = {};
  }

  var _proto = VisibleUtil.prototype;

  _proto.setVisible = function setVisible(key, visible) {
    var fns = this.callbackMap[key];
    VISIBLE_MAP[key] = visible;

    if (fns) {
      fns.forEach(function (fn) {
        return fn(visible);
      });
    }
  };

  _proto.getVisible = function getVisible(key) {
    return VISIBLE_MAP[key] || false;
  };

  _proto.registerVisibleChange = function registerVisibleChange(key, callback) {
    if (!this.callbackMap[key]) {
      this.callbackMap[key] = [callback];
    } else {
      this.callbackMap[key].push(callback);
    }
  };

  _proto.unregisterVisibleChange = function unregisterVisibleChange(key, callback) {
    var fns = this.callbackMap[key];

    if (fns) {
      for (var i = 0; i < fns.length; i++) {
        if (fns[i] === callback) {
          fns.splice(i, 1);
        }
      }
    }
  };

  return VisibleUtil;
}();
export var visibleUtil = new VisibleUtil();
//# sourceMappingURL=visibleUtil.js.map