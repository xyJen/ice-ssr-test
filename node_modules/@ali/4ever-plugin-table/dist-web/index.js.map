{"version":3,"sources":["../../src/index.ts"],"names":["OldBambooPlugin","moFactory","zhiFactory","mobileZhiFactory","biFactory","mobileBiFactory","tableCell","tableRow","actions","biActions","actionTypes","biActionTypes","default","Table","TableCell","TableRow","createSerializationPlugin","createServerSerializationPlugin","useContainerWidthResize","useRowIsSticky","RowIsStickyContext","isPureTableNode","isTableNode","getTableCellWidth","setSelectionByTable","getTable","getTableSelection","createEmptyParagraph","createEmptyTableCell","isSelectionInTableCell","setTableColsWidth","handleCangjiePaste","onCangjieInput","zhiTableCell","zhiTableRow","zhiTable","biTable","biTableRow","biTableCell","getAllTables","lineMap","DEFAULT_TABLE_BORDER_STYLE","DEFAULT_BORDER_COLOR","MIN_COL_WIDTH","TD"],"mappings":"AAAA,OAAO,KAAKA,eAAZ,uB,CAEA;;AACA,SACEC,SADF;AAGA,SAASC,UAAT,EAAqBC,gBAArB;AACA,SAASC,SAAT,EAAoBC,eAApB;AACA;AACA;AACA;AASA,OAAOC,SAAP;AACA,OAAOC,QAAP;AAGA,SAASC,OAAO,IAAIC,SAApB,EAA+BC,WAAW,IAAIC,aAA9C;AAIA,SAASV,SAAT,EAAoBG,SAApB,EAA+BF,UAA/B,EAA2CG,eAA3C,EAA4DF,gBAA5D,G,CAEA;;AACA,SAASS,OAAO,IAAIC,KAApB;AACA,SAASD,OAAO,IAAIE,SAApB;AACA,SAASF,OAAO,IAAIG,QAApB,+B,CAEA;;AACA,SAASH,OAAO,IAAII,yBAApB;AACA,SAASC,+BAAT,gC,CAEA;;AAIA;AACA,SAASC,uBAAT;AACA,SAASC,cAAT,EAAyBC,kBAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B;AACA,SAASV,OAAO,IAAIW,iBAApB;AACA,SAASX,OAAO,IAAIY,mBAApB;AACA,SAASZ,OAAO,IAAIa,QAApB;AACA,SAASb,OAAO,IAAIc,iBAApB;AACA,SAASd,OAAO,IAAIe,oBAApB;AACA,SAASf,OAAO,IAAIgB,oBAApB;AACA,SAAShB,OAAO,IAAIiB,sBAApB;AACA,SAASjB,OAAO,IAAIkB,iBAApB;AACA,SAASC,kBAAT;AACA,SAASnB,OAAO,IAAIoB,cAApB;AAEA,OAAO,IAAMC,YAAY,GAAG3B,SAArB;AACP,OAAO,IAAM4B,WAAW,GAAG3B,QAApB;AACP,SAASK,OAAO,IAAIuB,QAApB;AAEA,SAASvB,OAAO,IAAIwB,OAApB;AACA,SAASxB,OAAO,IAAIyB,UAApB;AACA,SAASzB,OAAO,IAAI0B,WAApB;AAEA;AACA,SAASC,YAAT;AAEA,SAASC,OAAT,EAAkBC,0BAAlB,EAA8CC,oBAA9C,EAAoEC,aAApE,4B,CAEA;;AACA;AACE;AACA3C,eAFF;AAKA,SACE4C,EADF","sourcesContent":["import * as OldBambooPlugin from './utils/bamboo';\n\n// facotry\nimport {\n  moFactory,\n} from './mo/index';\nimport { zhiFactory, mobileZhiFactory } from './zhi';\nimport { biFactory, mobileBiFactory } from './bi';\nimport './bi/types';\nimport './zhi/types';\nimport './utils/types';\nimport {\n  ConvertToPluginActionCreators,\n  ConvertToPluginActionPredicates,\n  ConvertToPluginCommands,\n} from '@ali/4ever-cangjie';\nimport { isActions as biIsActions, actions as biActions } from './bi/actions';\nimport { isActions as zhiIsActions, actions as zhiActions } from './zhi/actions';\nimport * as commands from './bi/commands';\nimport tableCell from './components/tableCell';\nimport tableRow from './components/tableRow';\n\nexport type { ITableSelection } from './bi/types';\nexport { actions as biActions, actionTypes as biActionTypes } from './bi/actions';\nexport type { TableConfig as BiConfig } from './bi/types';\nexport type { TableConfig as ZhiConfig } from './zhi/types';\n\nexport { moFactory, biFactory, zhiFactory, mobileBiFactory, mobileZhiFactory };\n\n// Element Model\nexport { default as Table } from './mo/models';\nexport { default as TableCell } from './mo/models/tableCell';\nexport { default as TableRow } from './mo/models/tableRow';\n\n// serializer\nexport { default as createSerializationPlugin } from './mo/serializer/index';\nexport { createServerSerializationPlugin } from './mo/serializer/index';\n\n// types\nexport type { TableData } from './mo/models';\nexport type { RowsHeight, UpdateRowHeight } from './utils/types';\n\n// custom\nexport { useContainerWidthResize } from './components/ContainerWidthResizeContext';\nexport { useRowIsSticky, RowIsStickyContext } from './utils/hooks/useRowIsSticky';\nexport { isPureTableNode, isTableNode } from './utils/utils/isTableNode';\nexport { default as getTableCellWidth } from './utils/utils/getTableCellWidth';\nexport { default as setSelectionByTable } from './utils/utils/setSelectionByTable';\nexport { default as getTable } from './bi/utils/getTable';\nexport { default as getTableSelection } from './bi/utils/getTableSelection';\nexport { default as createEmptyParagraph } from './bi/utils/createEmptyParagraph';\nexport { default as createEmptyTableCell } from './bi/utils/createEmptyTableCell';\nexport { default as isSelectionInTableCell } from './bi/utils/isSelectionInTableCell';\nexport { default as setTableColsWidth } from './bi/utils/setTableColsWidth';\nexport { handleCangjiePaste } from './bi/utils/handleCangjiePaste';\nexport { default as onCangjieInput } from './bi/handlers/onCangjieInput';\n\nexport const zhiTableCell = tableCell;\nexport const zhiTableRow = tableRow;\nexport { default as zhiTable } from './zhi/components/table';\n\nexport { default as biTable } from './bi/components/table';\nexport { default as biTableRow } from './bi/components/tableRow';\nexport { default as biTableCell } from './bi/components/tableCell';\n\nexport * from './utils/utils/colsWidthConverter';\nexport { getAllTables } from './common/queries/getSelectionContainers';\n\nexport { lineMap, DEFAULT_TABLE_BORDER_STYLE, DEFAULT_BORDER_COLOR, MIN_COL_WIDTH } from './utils/constants';\n\n// other export for api compatibility\nexport {\n  /** @deprecated 只为 bamboo 兼容。标准是按需 export */\n  OldBambooPlugin,\n};\n\nexport {\n  TD,\n} from './components/styled';\n\ndeclare module '@ali/4ever-cangjie' {\n  /** type combination for commands、queries、actions */\n  interface PluginCommands extends ConvertToPluginCommands<typeof commands> {}\n  interface PluginActionCreators\n    extends ConvertToPluginActionCreators<typeof biActions>, ConvertToPluginActionCreators<typeof zhiActions> {}\n  interface PluginActionPredicates\n    extends ConvertToPluginActionPredicates<typeof biIsActions>, ConvertToPluginActionPredicates<typeof zhiIsActions> {}\n}\n"],"file":"index.js"}