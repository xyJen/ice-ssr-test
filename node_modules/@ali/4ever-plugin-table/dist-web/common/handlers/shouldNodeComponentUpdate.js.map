{"version":3,"sources":["../../../../src/common/handlers/shouldNodeComponentUpdate.ts"],"names":["equal","Table","TableCell","TableRow","getTableCellWidth","getPositionOfCell","shouldNodeComponentUpdate","prevProps","props","__","next","isTableRow","node","prevTable","parent","table","data","colsWidth","styleId","tblLook","isTableCell","prevDocument","value","document","getClosest","key","isTable","prevCellWidth","prevPosition","cellWidth","position","isSelected","prevValue","selection","plainViewKey","isByTable"],"mappings":"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","sourcesContent":["import equal from 'fast-deep-equal';\nimport { Plugin, Block } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport TableRow from '../../mo/models/tableRow';\nimport getTableCellWidth from '../../utils/utils/getTableCellWidth';\nimport getPositionOfCell from '../../utils/utils/getPositionOfCell';\n\ntype SNCType = Plugin['shouldNodeComponentUpdate'];\n\nconst shouldNodeComponentUpdate: SNCType = (prevProps, props, __, next) => {\n  if (TableRow.isTableRow(props.node)) {\n    const prevTable = prevProps.parent as Block;\n    const table = props.parent as Block;\n    // 表格列宽变化时 update 以触发 tableCell update\n    if (\n      !equal(prevTable?.data?.colsWidth, table?.data?.colsWidth)\n      || !equal(prevTable?.data?.styleId, table?.data?.styleId)\n      || !equal(prevTable?.data?.tblLook, table?.data?.tblLook)\n    ) {\n      return true;\n    }\n  }\n\n  if (TableCell.isTableCell(props.node)) {\n    const { document: prevDocument } = prevProps.value;\n    const prevTable = prevDocument.getClosest(prevProps.node.key, Table.isTable) as Table;\n    const prevCellWidth = getTableCellWidth(prevProps.node as TableCell, prevTable);\n    const prevPosition = getPositionOfCell(prevProps.node.key, prevTable);\n\n    const { document } = props.value;\n    const table = document.getClosest(props.node.key, Table.isTable) as Table;\n    const cellWidth = getTableCellWidth(props.node, table);\n    const position = getPositionOfCell(props.node.key, table);\n\n    // tableCell 宽度变化时 update（部分插件在 cell 宽度变化时需要 rerender）\n    if (\n      !equal(prevCellWidth, cellWidth)\n      || !equal(prevPosition, position)\n      || !equal(prevTable?.data?.styleId, table?.data?.styleId)\n      || !equal(prevTable?.data?.tblLook, table?.data?.tblLook)\n    ) {\n      return true;\n    }\n  }\n  if (Table.isTable(props.node)) {\n    // 当在单元格内选区时，若由于 mousemove 造成仅有 selection.data.isByTable 变化\n    // 则使表格 re-render 以显示单元格选区\n    if (\n      props.isSelected\n      && prevProps.isSelected\n      && props.prevValue?.selection.plainViewKey === props.value.selection.plainViewKey\n      && props.prevValue?.selection.data.isByTable !== props.value.selection.data.isByTable\n    ) {\n      return true;\n    }\n  }\n  return next();\n}\n\nexport default shouldNodeComponentUpdate;\n"],"file":"shouldNodeComponentUpdate.js"}