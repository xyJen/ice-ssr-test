{"version":3,"sources":["../../../../src/common/queries/calcMinTableColWidth.ts"],"names":["Table","calcMinTableColWidth","controller","payload","node","colIndex","key","width","isTable","nodes","forEach","row","Array","isArray","cell","forEachDescendant","n","colWidth","query","Math","max"],"mappings":"AACA,OAAOA,KAAP;AAYA,eAAe,SAASC,oBAAT,CACbC,UADa,EAEbC,OAFa,EAGJ;AAAA,MACDC,IADC,GACkBD,OADlB,CACDC,IADC;AAAA,MACKC,QADL,GACkBF,OADlB,CACKE,QADL;AAET,MAAIC,GAAJ;AACA,MAAIC,KAAJ;AAEAP,EAAAA,KAAK,CAACQ,OAAN,CAAcJ,IAAd,MAAuBA,IAAvB,oBAAuBA,IAAI,CAAEK,KAAN,CAAYC,OAAZ,CAAoB,UAACC,GAAD,EAAS;AAClD,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAG,CAACF,KAAlB,CAAL,EAA+B;AAC7B;AACD;;AACD,QAAMK,IAAI,GAAGH,GAAG,CAACF,KAAJ,CAAUJ,QAAV,CAAb;;AACA,QAAI,CAACS,IAAL,EAAW;AACT;AACD;;AACD,QAAI,CAACA,IAAI,CAACC,iBAAV,EAA6B;AAC3B;AACD;;AACDD,IAAAA,IAAI,CAACC,iBAAL,CAAuB,UAACC,CAAD,EAAO;AAC5B,UAAMC,QAAQ,GAAGf,UAAU,CAACgB,KAAX,CAAiB,qBAAjB,EAAwC;AAAEd,QAAAA,IAAI,EAAEY;AAAR,OAAxC,CAAjB;;AACA,UAAI,OAAOC,QAAP,KAAoB,QAAxB,EAAkC;AAChCV,QAAAA,KAAK,GAAGY,IAAI,CAACC,GAAL,CAASH,QAAT,EAAmBV,KAAK,IAAI,CAA5B,CAAR;AACAD,QAAAA,GAAG,GAAGU,CAAC,CAACV,GAAR;AACD;AACF,KAND;AAOD,GAlBsB,CAAvB;AAmBA,SAAO;AACLA,IAAAA,GAAG,EAAHA,GADK;AAELC,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID","sourcesContent":["import { Controller, Node } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\n\ninterface IPayload {\n  node: Node;\n  colIndex: number;\n}\n\ninterface IResult {\n  key?: string;\n  width?: number;\n}\n\nexport default function calcMinTableColWidth(\n  controller: Controller,\n  payload: IPayload,\n): IResult {\n  const { node, colIndex } = payload;\n  let key: string | undefined;\n  let width: number | undefined;\n\n  Table.isTable(node) && node?.nodes.forEach((row) => {\n    if (!Array.isArray(row.nodes)) {\n      return;\n    }\n    const cell = row.nodes[colIndex];\n    if (!cell) {\n      return;\n    }\n    if (!cell.forEachDescendant) {\n      return;\n    }\n    cell.forEachDescendant((n) => {\n      const colWidth = controller.query('getMinTableColWidth', { node: n });\n      if (typeof colWidth === 'number') {\n        width = Math.max(colWidth, width || 0);\n        key = n.key;\n      }\n    });\n  });\n  return {\n    key,\n    width,\n  };\n}\n"],"file":"calcMinTableColWidth.js"}