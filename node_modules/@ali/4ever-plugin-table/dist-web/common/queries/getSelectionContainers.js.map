{"version":3,"sources":["../../../../src/common/queries/getSelectionContainers.ts"],"names":["Selection","domUtils","TextPoint","Table","TableCell","TableRow","memoize","isRealTable","node","isTable","data","sr","getAllTables","root","filterDescendants","console","warn","getSelectionContainers","controller","originSelection","selection","defaultWrapper","doc","document","value","Map","tables","sort","start","end","startPath","getPath","key","endPath","res","afterTablePoint","beforeTablePoint","forEach","table","tablePath","startClosestAncestorTable","getClosestByPath","endClosestAncestorTable","isStartInTable","isEndInTable","startClosestRow","isTableRow","startClosestCell","isTableCell","endClosestCell","wrapper","isHeader","findSelectionSlot","set","firstText","getFirstText","lastText","getLastText","create","offset","text","length","newStart","newEnd","nextText","getNextText","prevText","getPreviousText","anchor","focus","restSelection"],"mappings":"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","sourcesContent":["\nimport {\n  Node, Controller, Selection,\n  domUtils, TextPoint, Document, SelectionWrapperMap,\n} from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport TableRow from '../../mo/models/tableRow';\nimport { memoize } from 'lodash-es';\n\nconst isRealTable = (node: Node) => Table.isTable(node) && !node.data.sr; // 排除分栏\n\nexport const getAllTables = memoize((root: Document): Node[] => {\n  // 根据类型定义和传参进行理论分析，这里不会有 NPE 问题，但监控上报了且尝试复现未果\n  // 这里先做个防御，并进一步收集信息供分析\n  // Ref: https://aone.alibaba-inc.com/v2/project/995011/bug/45757203\n  if (!root || !root.filterDescendants) {\n    console.warn('Unexpected NPE: not valid Document type', root);\n    return [];\n  }\n  return root.filterDescendants(isRealTable);\n});\n\ninterface SelectionContainersProps {\n  selection: Selection;\n  defaultWrapper: HTMLDivElement;\n  document?: Document;\n}\n\nexport default function getSelectionContainers(\n  controller: Controller,\n  { selection: originSelection, defaultWrapper, document: doc }: SelectionContainersProps,\n): SelectionWrapperMap {\n  const document = doc || controller.value.document;\n  if (!document) {\n    console.warn(`getSelectionContainers[Table]: document is ${document}`);\n    return new Map();\n  }\n  const tables = getAllTables(document);\n  const { start, end } = originSelection.sort(document);\n  const startPath = document.getPath(start.key);\n  const endPath = document.getPath(end.key);\n  const res: SelectionWrapperMap = new Map();\n  if (!startPath || !endPath) {\n    return res;\n  }\n\n  let afterTablePoint: TextPoint | null = null;\n  let beforeTablePoint: TextPoint | null = null;\n\n  tables.forEach((table) => {\n    const tablePath = document.getPath(table.key);\n    if (!tablePath) {\n      return;\n    }\n    const startClosestAncestorTable = document.getClosestByPath(startPath, isRealTable);\n    const endClosestAncestorTable = document.getClosestByPath(endPath, isRealTable);\n    const isStartInTable = startClosestAncestorTable === table;\n    const isEndInTable = endClosestAncestorTable === table;\n\n    // 选区完全在 table 里\n    if (isStartInTable && isEndInTable) {\n      const startClosestRow = document.getClosestByPath(startPath, TableRow.isTableRow) as TableRow;\n      const startClosestCell = document.getClosestByPath(startPath, TableCell.isTableCell) as TableCell;\n      const endClosestCell = document.getClosestByPath(endPath, TableCell.isTableCell);\n      let wrapper: HTMLDivElement | undefined | null;\n      if (\n        startClosestCell\n        && startClosestCell.key === endClosestCell?.key\n        && TableRow.isHeader(startClosestRow)\n      ) {\n        wrapper = domUtils.findSelectionSlot(startClosestCell.key);\n      } else {\n        wrapper = domUtils.findSelectionSlot(table.key);\n      }\n      if (wrapper) {\n        res.set(originSelection, { wrapper, originSelection });\n      }\n      return;\n    }\n    // expanded 选区部分在 table 里\n    if (isStartInTable || isEndInTable) {\n      const firstText = table.getFirstText();\n      const lastText = table.getLastText();\n      if (!firstText || (!lastText && isStartInTable)) {\n        return;\n      }\n      const [newStart, newEnd] = isStartInTable\n        ? [start, TextPoint.create({ key: lastText!.key, offset: lastText!.text.length })]\n        : [TextPoint.create({ key: firstText.key, offset: 0 }), end];\n\n      if (isStartInTable) {\n        const nextText = document.getNextText(lastText!.key);\n        afterTablePoint = nextText && TextPoint.create({ key: nextText.key, offset: 0 });\n      } else {\n        const prevText = document.getPreviousText(firstText.key);\n        beforeTablePoint = prevText && TextPoint.create({ key: prevText.key, offset: prevText.text.length });\n      }\n\n      const wrapper = domUtils.findSelectionSlot(table.key);\n      if (!wrapper) {\n        return;\n      }\n      res.set(\n        Selection.create({ anchor: newStart, focus: newEnd }),\n        { wrapper, originSelection },\n      );\n    }\n  });\n\n  if (afterTablePoint || beforeTablePoint) {\n    const restSelection = Selection.create({\n      anchor: afterTablePoint || start,\n      focus: beforeTablePoint || end,\n    });\n    res.set(restSelection, { wrapper: defaultWrapper, originSelection });\n  }\n\n  return res;\n}\n"],"file":"getSelectionContainers.js"}