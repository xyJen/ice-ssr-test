{"version":3,"sources":["../../src/index.ts"],"names":["zhiTableCell","tableCell","zhiTableRow","tableRow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AASA;;AACA;;AAGA;;AAOA;;AACA;;AACA;;AAGA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AAEA;;AACA;;AACA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAEA;;AAQA;;AA1EA;AA2BA;AAKA;AAQA;AAeO,MAAMA,YAAY,GAAGC,kBAArB;;AACA,MAAMC,WAAW,GAAGC,iBAApB","sourcesContent":["import * as OldBambooPlugin from './utils/bamboo';\n\n// facotry\nimport {\n  moFactory,\n} from './mo/index';\nimport { zhiFactory, mobileZhiFactory } from './zhi';\nimport { biFactory, mobileBiFactory } from './bi';\nimport './bi/types';\nimport './zhi/types';\nimport './utils/types';\nimport {\n  ConvertToPluginActionCreators,\n  ConvertToPluginActionPredicates,\n  ConvertToPluginCommands,\n} from '@ali/4ever-cangjie';\nimport { isActions as biIsActions, actions as biActions } from './bi/actions';\nimport { isActions as zhiIsActions, actions as zhiActions } from './zhi/actions';\nimport * as commands from './bi/commands';\nimport tableCell from './components/tableCell';\nimport tableRow from './components/tableRow';\n\nexport type { ITableSelection } from './bi/types';\nexport { actions as biActions, actionTypes as biActionTypes } from './bi/actions';\nexport type { TableConfig as BiConfig } from './bi/types';\nexport type { TableConfig as ZhiConfig } from './zhi/types';\n\nexport { moFactory, biFactory, zhiFactory, mobileBiFactory, mobileZhiFactory };\n\n// Element Model\nexport { default as Table } from './mo/models';\nexport { default as TableCell } from './mo/models/tableCell';\nexport { default as TableRow } from './mo/models/tableRow';\n\n// serializer\nexport { default as createSerializationPlugin } from './mo/serializer/index';\nexport { createServerSerializationPlugin } from './mo/serializer/index';\n\n// types\nexport type { TableData } from './mo/models';\nexport type { RowsHeight, UpdateRowHeight } from './utils/types';\n\n// custom\nexport { useContainerWidthResize } from './components/ContainerWidthResizeContext';\nexport { useRowIsSticky, RowIsStickyContext } from './utils/hooks/useRowIsSticky';\nexport { isPureTableNode, isTableNode } from './utils/utils/isTableNode';\nexport { default as getTableCellWidth } from './utils/utils/getTableCellWidth';\nexport { default as setSelectionByTable } from './utils/utils/setSelectionByTable';\nexport { default as getTable } from './bi/utils/getTable';\nexport { default as getTableSelection } from './bi/utils/getTableSelection';\nexport { default as createEmptyParagraph } from './bi/utils/createEmptyParagraph';\nexport { default as createEmptyTableCell } from './bi/utils/createEmptyTableCell';\nexport { default as isSelectionInTableCell } from './bi/utils/isSelectionInTableCell';\nexport { default as setTableColsWidth } from './bi/utils/setTableColsWidth';\nexport { handleCangjiePaste } from './bi/utils/handleCangjiePaste';\nexport { default as onCangjieInput } from './bi/handlers/onCangjieInput';\n\nexport const zhiTableCell = tableCell;\nexport const zhiTableRow = tableRow;\nexport { default as zhiTable } from './zhi/components/table';\n\nexport { default as biTable } from './bi/components/table';\nexport { default as biTableRow } from './bi/components/tableRow';\nexport { default as biTableCell } from './bi/components/tableCell';\n\nexport * from './utils/utils/colsWidthConverter';\nexport { getAllTables } from './common/queries/getSelectionContainers';\n\nexport { lineMap, DEFAULT_TABLE_BORDER_STYLE, DEFAULT_BORDER_COLOR, MIN_COL_WIDTH } from './utils/constants';\n\n// other export for api compatibility\nexport {\n  /** @deprecated 只为 bamboo 兼容。标准是按需 export */\n  OldBambooPlugin,\n};\n\nexport {\n  TD,\n} from './components/styled';\n\ndeclare module '@ali/4ever-cangjie' {\n  /** type combination for commands、queries、actions */\n  interface PluginCommands extends ConvertToPluginCommands<typeof commands> {}\n  interface PluginActionCreators\n    extends ConvertToPluginActionCreators<typeof biActions>, ConvertToPluginActionCreators<typeof zhiActions> {}\n  interface PluginActionPredicates\n    extends ConvertToPluginActionPredicates<typeof biIsActions>, ConvertToPluginActionPredicates<typeof zhiIsActions> {}\n}\n"],"file":"index.js"}