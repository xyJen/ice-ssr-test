{"version":3,"sources":["../../../../src/mo/serializer/htmlToJsonML.ts"],"names":["createEmptyTableCell","hidden","colSpan","rowSpan","normalizeTrAttrs","attrs","normalizedAttrs","style","styleObj","height","px","h","parseFloat","normalizeTcAttrs","element","rowspan","parseInt","colspan","computedStyle","window","getComputedStyle","getStyle","name","width","parsed","fill","backgroundColor","valign","vAlign","forEach","side","bdr","type","capType","toUpperCase","slice","normalizeTableCells","table","rows","row","cells","cell","jsonMLToTableStructure","tableAttrs","tableStructure","map","rowAttrs","rowStructure","cellAttrs","value","attributes","tableStructureToJsonML","TableTag","Tr","Table","createEmptyCellStructure","normalizeTableStructure","i","length","j","fillCells","Array","splice","k","end","fillRow","maxColSize","reduce","size","Math","max","Infinity","offset","push","normalizeTableSpan","normalizeTable","firstRow","colsCount","colsWidth","tableCellAttrs","filter","colWidth","floor","DEFAULT_PAGE_WIDTH","flatAppendTr","state","node","tagName","chlidren","current","child","childTagName","append","htmlToJsoML","onOpenTag","rawAttrs","closest","tagToType","currentDom","Tc","onCloseTag","pop"],"mappings":"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","sourcesContent":["import {\n  JsonML,\n  getTagName,\n  getAttributes,\n  getChildren,\n  cssBorderParse,\n  convertBorderToData,\n  praseCSSBackground,\n  parseCSSAbsoluteLength,\n  isNumeric,\n  isCSSAbsoluteLength,\n} from '@ali/4ever-utils';\nimport { isEmpty } from 'lodash-es';\nimport { MoState as State, MoAttributes as Attributes, HTMLToJsonMLRule, createEmptyParagraph } from '@ali/4ever-cangjie';\nimport { tagToType, DEFAULT_PAGE_WIDTH } from './constants';\nimport {\n  TableCellProperties,\n  TableRowProperties,\n  VerticalAlign,\n  TableProperties,\n  TableTag,\n} from './types';\n\nfunction createEmptyTableCell(hidden = false): JsonML {\n  return [\n    'tc',\n    {\n      hidden,\n      colSpan: 1,\n      rowSpan: 1,\n    },\n    createEmptyParagraph(),\n  ] as JsonML;\n}\n\nfunction normalizeTrAttrs(attrs: Attributes): TableRowProperties {\n  const normalizedAttrs: TableRowProperties = {};\n\n  // 如果 style 存在则解析 style\n  if (typeof attrs.style === 'string') {\n    const style = attrs.styleObj;\n\n    // 行高\n    if (style.height) {\n      const px = parseCSSAbsoluteLength(style.height, 'px');\n      normalizedAttrs.h = parseFloat(px);\n    }\n  }\n\n  return normalizedAttrs;\n}\n\nfunction normalizeTcAttrs(\n  attrs: Attributes,\n  element?: HTMLElement,\n): TableCellProperties {\n  const normalizedAttrs: TableCellProperties = {\n    // 默认值\n    rowSpan: typeof attrs.rowspan === 'number' ? attrs.rowspan : parseInt(attrs.rowspan, 10) || 1,\n    colSpan: typeof attrs.colspan === 'number' ? attrs.colspan : parseInt(attrs.colspan, 10) || 1,\n  };\n  const computedStyle = element ? window.getComputedStyle(element) : {};\n\n  // 如果 style 存在则解析 style\n  if (typeof attrs.style === 'string' || !isEmpty(computedStyle)) {\n    const getStyle = (name: string) => {\n      return computedStyle[name] || attrs?.style?.[name];\n    };\n    // 隐藏的单元格\n    if (getStyle('display') === 'none') {\n      normalizedAttrs.hidden = true;\n    }\n\n    // 单元格宽度\n    if (attrs.width && isCSSAbsoluteLength(getStyle('width'))) {\n      normalizedAttrs.width = parseCSSAbsoluteLength(attrs.width, 'px');\n    }\n\n    // 单元格填充色\n    if (getStyle('background')) {\n      const parsed = praseCSSBackground(getStyle('background'));\n      normalizedAttrs.fill = parsed.backgroundColor;\n    }\n    if (getStyle('backgroundColor')) {\n      normalizedAttrs.fill = getStyle('backgroundColor');\n    }\n\n    // 单元格垂直对齐方式\n    if (attrs.valign) {\n      normalizedAttrs.vAlign = attrs.valign as VerticalAlign;\n    }\n\n    // 边框\n    if (getStyle('border')) {\n      const parsed = cssBorderParse(getStyle('border'));\n      if (parsed && parsed.style !== 'none') {\n        ['top', 'right', 'bottom', 'left'].forEach((side) => {\n          normalizedAttrs.bdr = {\n            ...normalizedAttrs.bdr,\n            [side]: convertBorderToData(parsed),\n          };\n        });\n      }\n    }\n    // 解析不同位置的边框\n    ['left', 'right', 'top', 'bottom'].forEach((type) => {\n      const capType = `border${type[0].toUpperCase()}${type.slice(1)}`;\n      if (getStyle(capType)) {\n        const parsed = cssBorderParse(getStyle(capType));\n        if (parsed) {\n          if (parsed.style === 'none') {\n            delete normalizedAttrs.bdr?.[type];\n          } else {\n            normalizedAttrs.bdr = {\n              ...normalizedAttrs.bdr,\n              [type]: convertBorderToData(parsed),\n            };\n          }\n        }\n      }\n    });\n  }\n\n  return normalizedAttrs;\n}\n\n/**\n * 修补 table cell 的数据格式\n * @param table\n */\nfunction normalizeTableCells(table: JsonML): void {\n  const rows = getChildren(table);\n  rows.forEach((row) => {\n    const cells = getChildren(row);\n    cells.forEach((cell) => {\n      const attrs = getAttributes(cell) as TableCellProperties;\n      // 当前 td 不消费 width 数据\n      if (attrs && attrs.width) {\n        delete attrs.width;\n      }\n    });\n  });\n}\n\ninterface ICell {\n  rowSpan: number;\n  colSpan: number;\n  value: JsonML;\n}\n\ninterface IRow extends Array<ICell> {\n  attributes?: TableRowProperties;\n}\n\ninterface ITable extends Array<IRow> {\n  attributes?: TableProperties;\n}\n\n/**\n * 将 table ASL 序列化成输出格式，方便做矩阵算法\n * @param table\n */\nfunction jsonMLToTableStructure(table: JsonML): ITable {\n  const rows = getChildren(table);\n  const tableAttrs = getAttributes(table) as TableProperties;\n\n  const tableStructure: ITable = rows.map((row) => {\n    const cells = getChildren(row);\n    const rowAttrs = getAttributes(row) as TableRowProperties;\n\n    const rowStructure: IRow = cells.map((cell) => {\n      const cellAttrs = getAttributes(cell) as TableCellProperties;\n      let rowSpan = 1;\n      let colSpan = 1;\n      if (cellAttrs) {\n        if (typeof cellAttrs.rowSpan === 'number') {\n          rowSpan = cellAttrs.rowSpan;\n        }\n        if (typeof cellAttrs.colSpan === 'number') {\n          colSpan = cellAttrs.colSpan;\n        }\n      }\n\n      return {\n        rowSpan,\n        colSpan,\n        value: cell,\n      };\n    });\n\n    rowStructure.attributes = rowAttrs;\n\n    return rowStructure;\n  });\n\n  tableStructure.attributes = tableAttrs;\n\n  return tableStructure;\n}\n\n/**\n * 将表格矩阵还原为 ASL\n * @param tableStructure\n */\nfunction tableStructureToJsonML(tableStructure: ITable): JsonML {\n  const rows: JsonML[] = tableStructure.map((rowStructure) => {\n    const cells = rowStructure.map((cell) => cell.value);\n\n    const attrs = rowStructure.attributes;\n    const row = attrs\n      ? [TableTag.Tr, attrs, ...cells]\n      : [TableTag.Tr, ...cells];\n\n    return (row as unknown) as JsonML;\n  });\n\n  const tableAttrs = tableStructure.attributes;\n  const table = tableAttrs\n    ? [TableTag.Table, tableAttrs, ...rows]\n    : [TableTag.Table, ...rows];\n\n  return (table as unknown) as JsonML;\n}\n\nfunction createEmptyCellStructure(hidden = false): ICell {\n  return {\n    rowSpan: 1,\n    colSpan: 1,\n    value: createEmptyTableCell(hidden),\n  };\n}\n\n/**\n * 订正表格的单元格结构\n * 1. 补齐 span 的单元格跨度空缺\n * 2. 订正不规整的行列\n * @param table\n */\nfunction normalizeTableStructure(table: ITable) {\n  // 第一步，填补 span 的单元格\n  for (let i = 0; i < table.length; i++) {\n    const row = table[i];\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n\n      // 如果在当前行中列跨度大于 1，则在当前坐标之后 +1 填充单元格\n      if (cell.colSpan > 1) {\n        // 由于第一个单元格已经占 1 位，所以要 -1\n        const fillCells = Array(cell.colSpan - 1)\n          .fill(true)\n          .map(createEmptyCellStructure);\n        row.splice(j + 1, 0, ...fillCells);\n      }\n    }\n  }\n  for (let i = 0; i < table.length; i++) {\n    const row = table[i];\n    for (let j = 0; j < row.length; j++) {\n      const cell = row[j];\n      // 如果行的跨度大于 1，则需要在下面的行中填充单元格\n      if (cell.rowSpan > 1) {\n        for (let k = i + 1, end = i + cell.rowSpan; k < end; k++) {\n          let fillRow = table[k];\n          // 可能会出现一种情况，表格的行不够填充了，则这里要追加行\n          if (!fillRow) {\n            fillRow = Array(j).fill(false).map(createEmptyCellStructure);\n            table[k] = fillRow;\n          }\n          const fillCells = Array(cell.colSpan)\n            .fill(true)\n            .map(createEmptyCellStructure);\n          fillRow.splice(j, 0, ...fillCells);\n        }\n      }\n    }\n  }\n\n  // 第二步，填补不规整的行\n  const maxColSize = table.reduce(\n    (size, row) => Math.max(size, row.length),\n    -Infinity,\n  );\n  table.forEach((row) => {\n    const offset = maxColSize - row.length;\n    if (offset > 0) {\n      row.push(...Array(offset).fill(false).map(createEmptyCellStructure));\n    }\n  });\n}\n\nfunction normalizeTableSpan(table: JsonML) {\n  const tableStructure = jsonMLToTableStructure(table);\n  normalizeTableStructure(tableStructure);\n  return tableStructureToJsonML(tableStructure);\n}\n\nfunction normalizeTable(table: JsonML): JsonML {\n  // 订正单元格\n  table = normalizeTableSpan(table);\n\n  const rows = getChildren(table);\n  // 空表格\n  if (rows.length <= 0) {\n    return table;\n  }\n  const firstRow = rows[0];\n  const cells = getChildren(firstRow);\n  const colsCount = cells.length;\n  const tableAttrs = getAttributes(table) as TableProperties;\n\n  // 如果 table 的 colsWidth 缺失，则需要进行计算\n  if (tableAttrs.colsWidth.length !== colsCount) {\n    // 计算第一行的 td width 数据\n    const colsWidth = cells\n      .map((cell) => {\n        const tableCellAttrs = getAttributes(cell) as TableCellProperties;\n        return parseInt(tableCellAttrs.width || '0', 10);\n      })\n      .filter((width) => width > 0);\n\n    // 如果列宽的数量与列数相等，则认为是合法数据\n    if (colsWidth.length === colsCount) {\n      tableAttrs.colsWidth = colsWidth;\n    } else {\n      // 注意这个值可能需要优化，纸张在不同的模式下宽度都不同，考虑到自适应的问题，目前暂时设一个较少的值\n      const colWidth = Math.floor(DEFAULT_PAGE_WIDTH / colsCount);\n      tableAttrs.colsWidth = Array(colsCount).fill(colWidth);\n    }\n  }\n\n  // 单元格数据合法化\n  normalizeTableCells(table);\n\n  return table;\n}\n\nfunction flatAppendTr(state: State, node: JsonML): void {\n  const tagName = getTagName(node);\n  const attrs = getAttributes(node);\n  const chlidren = getChildren(node);\n  let current: JsonML = attrs ? [tagName, attrs] : [tagName];\n  chlidren.forEach((child) => {\n    const childTagName = getTagName(child);\n    // tr 内嵌 tr，则把嵌套的 tr 打平\n    if (childTagName === tagName) {\n      if (getChildren(current).length) {\n        state.append(current);\n      }\n      state.append(child);\n\n      current = attrs ? [tagName, attrs] : [tagName];\n      return;\n    }\n\n    // 不支持 tr 内嵌套单元格以外数据类型\n    if (childTagName !== 'tc') return;\n\n    current.push(child);\n  });\n  // 有些tr虽然没有child，但是属于合并单元格的一项，不可直接摒弃\n  state.append(current);\n}\n\nexport default function htmlToJsoML(): HTMLToJsonMLRule {\n  return {\n    name: 'table',\n\n    onOpenTag: (state: State, name: string, rawAttrs: Attributes): boolean => {\n      if (name === 'col') {\n        const table = state.closest('table');\n        if (table && isNumeric(rawAttrs.width)) {\n          const tableAttrs = getAttributes(table) as TableProperties;\n          tableAttrs.colsWidth.push(parseInt(rawAttrs.width, 10));\n        }\n        return true;\n      }\n\n      if (name === 'td' || name === 'th') {\n        name = 'tc'; // eslint-disable-line no-param-reassign\n      }\n      if (!tagToType[name]) return false;\n\n      const element = state.currentDom;\n\n      // 创建节点\n      const node: JsonML = [name];\n      state.push(node);\n\n      switch (name) {\n        case TableTag.Table: {\n          node.push({ colsWidth: [] });\n          break;\n        }\n\n        case TableTag.Tr: {\n          const attrs = normalizeTrAttrs(rawAttrs);\n          node.push(attrs);\n          break;\n        }\n\n        case TableTag.Tc: {\n          const attrs = normalizeTcAttrs(rawAttrs, element);\n          node.push(attrs);\n          break;\n        }\n\n        default:\n          return true;\n      }\n      return true;\n    },\n\n    onCloseTag: (state: State, name: string): boolean => {\n      if (name === 'td' || name === 'th') {\n        name = TableTag.Tc;\n      }\n\n      if (!tagToType[name]) return false;\n\n      const node: JsonML = state.pop();\n      const tagName = getTagName(node);\n\n      switch (tagName) {\n        case TableTag.Table: {\n          const table = normalizeTable(node);\n          // 只接受非空表格\n          if (getChildren(table).length > 0) {\n            state.append(table);\n          }\n          return true;\n        }\n\n        case TableTag.Tr: {\n          flatAppendTr(state, node);\n          return true;\n        }\n\n        case TableTag.Tc: {\n          // 空单元格\n          if (getChildren(node).length === 0) {\n            node.push(createEmptyParagraph());\n          }\n          const attrs = getAttributes(node) as TableCellProperties;\n          if (attrs.width) {\n            const width = parseFloat(parseCSSAbsoluteLength(attrs.width, 'px'));\n            // 如果是 0 宽单元格则丢弃\n            if (width === 0) {\n              return true;\n            }\n          } else if (attrs.hidden) {\n            // 隐藏的单元这里不解析，在表格的 normalize 中会自行填充空缺的单元格\n            return true;\n          }\n          state.append(node);\n          return true;\n        }\n\n        default:\n          return false;\n      }\n    },\n  };\n}\n"],"file":"htmlToJsonML.js"}