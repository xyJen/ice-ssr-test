{"version":3,"sources":["../../../../src/mo/serializer/styles.ts"],"names":["DEFAULT_TABLE_BORDER_COLOR","DEFAULT_BORDER_SIDE","val","sz","color","generateBorderSideStyle","side","generateBorderStyle","bdr","borderTop","top","borderRight","right","borderBottom","bottom","borderLeft","left","generatePaddingStyle","padding","paddingStyle","paddingLeft","Math","abs","paddingRight","DEFAULT_TABLE_CELL_STYLE","overflow","overflowWrap","wordWrap","generateTableCellStyle","attrs","style","hidden","display","fill","backgroundColor","vAlign","verticalAlign","DEFAULT_TABLE_ROW_HEIGHT","generateTableStyle","colsWidth","tblW","isAutofit","type","borderCollapse","tableLayout","width","tableWidth","reduce","sum"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  TableCellProperties,\n  TableProperties,\n  TableCellBorderProperties,\n  BorderProperties,\n} from './types';\n\nconst DEFAULT_TABLE_BORDER_COLOR = '#D6D6D6';\n\nconst DEFAULT_BORDER_SIDE: BorderProperties = {\n  val: 'single',\n  sz: 1,\n  color: '#000000',\n};\n\nfunction generateBorderSideStyle(side?: BorderProperties) {\n  const { sz, val, color } = { ...DEFAULT_BORDER_SIDE, ...side };\n  return `${sz}px ${val === 'single' ? 'solid' : val} ${color}`;\n}\n\nfunction generateBorderStyle(bdr: TableCellBorderProperties = {}): Partial<React.CSSProperties> {\n  return {\n    borderTop: generateBorderSideStyle(bdr.top),\n    borderRight: generateBorderSideStyle(bdr.right),\n    borderBottom: generateBorderSideStyle(bdr.bottom),\n    borderLeft: generateBorderSideStyle(bdr.left),\n  };\n}\n\nfunction generatePaddingStyle(bdr: TableCellBorderProperties, padding = 8): Partial<React.CSSProperties> {\n  const paddingStyle: React.CSSProperties = {};\n  if (bdr.left && bdr.left.sz) {\n    paddingStyle.paddingLeft = padding - Math.abs(bdr.left.sz);\n  }\n  if (bdr.right && bdr.right.sz) {\n    paddingStyle.paddingRight = padding - Math.abs(bdr.right.sz);\n  }\n  return paddingStyle;\n}\n\nconst DEFAULT_TABLE_CELL_STYLE: React.CSSProperties = {\n  overflow: 'hidden',\n  borderLeft: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  borderRight: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  borderBottom: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  borderTop: `1px solid ${DEFAULT_TABLE_BORDER_COLOR}`,\n  padding: '4px 8px',\n  overflowWrap: 'break-word',\n  wordWrap: 'break-word',\n};\n\nexport function generateTableCellStyle(attrs: TableCellProperties) {\n  let style: React.CSSProperties = {\n    ...DEFAULT_TABLE_CELL_STYLE,\n    ...generateBorderStyle(attrs.bdr),\n  };\n  if (attrs.hidden) {\n    style.display = 'none';\n  }\n  if (attrs.fill) {\n    style.backgroundColor = attrs.fill;\n  }\n  if (attrs.vAlign) {\n    style.verticalAlign = attrs.vAlign;\n  }\n  if (attrs.bdr) {\n    style = {\n      ...style,\n      ...generateBorderStyle(attrs.bdr),\n      ...generatePaddingStyle(attrs.bdr),\n    };\n  }\n  return style;\n}\n\nexport const DEFAULT_TABLE_ROW_HEIGHT = 33;\n\nexport function generateTableStyle(attrs: TableProperties): React.CSSProperties {\n  const { colsWidth = [], tblW } = attrs;\n  const isAutofit = tblW?.type === 'pct';\n  const style: React.CSSProperties = {\n    borderCollapse: 'collapse',\n    tableLayout: 'fixed',\n  };\n  if (isAutofit) {\n    style.width = '100%';\n  } else {\n    const tableWidth = colsWidth.reduce((sum: number, width: number) => sum + width, 0);\n    if (tableWidth > 0) {\n      style.width = tableWidth;\n    }\n  }\n  return style;\n}\n"],"file":"styles.js"}