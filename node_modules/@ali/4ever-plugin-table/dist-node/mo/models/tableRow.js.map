{"version":3,"sources":["../../../../src/mo/models/tableRow.ts"],"names":["TableRow","Block","create","properties","Error","isTableRow","type","TYPE","maybeTableRow","isBlock","isHeader","row","data","isTblHeader","shouldSticky","nodes","every","cell","rowSpan","ELEMENT_TYPE_TABLE_ROW"],"mappings":";;;;;;;AAAA;;AAGA;;AAkBe,MAAMA,QAAN,SAAuBC,kBAAvB,CAA6D;AAG1E,SAAOC,MAAP,CACEC,UADF,EAEE;AACA,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;AACD,QAAIJ,QAAQ,CAACK,UAAT,CAAoBF,UAApB,CAAJ,EAAqC;AACnC,aAAOA,UAAP;AACD;;AACD,WAAO,MAAMD,MAAN,CAAqB,EAC1B,GAAGC,UADuB;AAE1BG,MAAAA,IAAI,EAAEN,QAAQ,CAACO;AAFW,KAArB,CAAP;AAID;;AAED,SAAOF,UAAP,CAAkBG,aAAlB,EAAiE;AAC/D,WAAOP,mBAAMQ,OAAN,CAAcD,aAAd,KAAgCA,aAAa,CAACF,IAAd,KAAuBN,QAAQ,CAACO,IAAvE;AACD;;AAED,SAAOG,QAAP,CAAgBC,GAAhB,EAA+B;AAC7B,WAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,KAAyB,IAAhC;AACD;;AAED,SAAOC,YAAP,CAAoBH,GAApB,EAAmC;AACjC,WAAO,KAAKN,UAAL,CAAgBM,GAAhB,KACF,KAAKD,QAAL,CAAcC,GAAd,CADE,IAEFA,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAiBC,IAAD,IAAW,CAACA,IAAI,CAACL,IAAL,EAAWM,OAAX,IAAsB,CAAvB,MAA8B,CAAzD,CAFL;AAGD;;AA9ByE;;;AAAvDlB,Q,CACZO,I,GAAOY,4B","sourcesContent":["import { Block, BlockChildren } from '@ali/4ever-cangjie';\nimport type { MoInterfaces } from '@ali/4ever-cangjie';\nimport TableCell from './tableCell';\nimport { ELEMENT_TYPE_TABLE_ROW } from '../../utils/meta';\n\ninterface TableRowData {\n  readonly h?: number;\n\n  // NOTE: 目前无消费\n  readonly bdr?: MoInterfaces.TableBorder.default;\n  // 表头行\n  isTblHeader?: boolean;\n}\n\ntype TableRowChildren = TableCell[];\n\ninterface TableRowProperties<D = TableRowData, N extends BlockChildren = TableRowChildren> {\n  data?: D;\n  nodes?: N;\n}\n\nexport default class TableRow extends Block<TableRowData, TableRowChildren> {\n  static TYPE = ELEMENT_TYPE_TABLE_ROW;\n\n  static create<SD = TableRowData, SN extends BlockChildren = TableRowChildren>(\n    properties: TableRow | TableRowProperties<SD, SN> | string,\n  ) {\n    if (typeof properties === 'string') {\n      throw new Error('`TableRow.create` does not accept string');\n    }\n    if (TableRow.isTableRow(properties)) {\n      return properties as Block<SD, SN>;\n    }\n    return super.create<SD, SN>({\n      ...properties,\n      type: TableRow.TYPE,\n    });\n  }\n\n  static isTableRow(maybeTableRow: any): maybeTableRow is TableRow {\n    return Block.isBlock(maybeTableRow) && maybeTableRow.type === TableRow.TYPE;\n  }\n\n  static isHeader(row: TableRow) {\n    return row.data.isTblHeader === true;\n  }\n\n  static shouldSticky(row: TableRow) {\n    return this.isTableRow(row)\n      && this.isHeader(row)\n      && row.nodes.every((cell) => ((cell.data?.rowSpan || 1) === 1));\n  }\n}\n"],"file":"tableRow.js"}