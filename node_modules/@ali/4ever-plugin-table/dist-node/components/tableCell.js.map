{"version":3,"sources":["../../../src/components/tableCell.tsx"],"names":["tableCellStyle","theme","Td","styled","td","DEFAULT_BORDER_COLOR","css","blockMarginStyleInContainer","DefaultPadding","left","right","top","bottom","vAlignToGridVAlign","vAlign","defaultAlign","map","middle","Cell","props","isSticky","node","attributes","children","fill","parent","bdr","hidden","rowSpan","colSpan","cSpan","cellMar","data","parseInt","String","style","React","useMemo","result","display","flexDirection","backgroundColor","justifyContent","verticalAlign","padding","forEach","orient","w","isHeader","TableRow","isTableRow","key","TableCell","controller","document","value","table","getClosest","isTable","docStyle","position","colIndex","rowIndex","colsWidth","width","Array","isArray","slice","reduce","acc","v","didMount","useRef","resetTableMinColsWidth","useCallback","forEachDescendant","n","colWidth","query","run","useEffect","current","calcMinTableColWidth","res","minColWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  RenderNodeProps,\n  useStyle,\n  SelectionSlot,\n} from '@ali/4ever-cangjie';\nimport Table from '../mo/models';\nimport MoTableCell from '../mo/models/tableCell';\nimport TableRow from '../mo/models/tableRow';\nimport { bdrToStyle, bdrToPaddingStyle, transformThemeObjToCssString, theme, blockMarginStyleInContainer } from '@ali/4ever-utils';\nimport getPositionOfCell from '../utils/utils/getPositionOfCell';\nimport isTable from '../utils/utils/isTable';\nimport { setTableMinColsWidthData } from '../utils/actions';\nimport { usePixelColsWidth, useRowIsSticky } from '../utils/hooks';\nimport getTabelCellFill from '../utils/utils/getTableCellFill';\nimport { ContainerWidthResizeContext } from './ContainerWidthResizeContext';\nimport { DEFAULT_BORDER_COLOR } from '../utils/constants';\n\nconst { 'table-cell': tableCellStyle } = theme;\n\nconst Td = styled.td`\n  ${transformThemeObjToCssString(tableCellStyle)}\n  border-width: 1px;\n  border-style: solid;\n  border-color: ${DEFAULT_BORDER_COLOR};\n  overflow: hidden;\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n\n  ${css`${blockMarginStyleInContainer}`}\n`;\n\nconst DefaultPadding = {\n  left: tableCellStyle['padding-left'],\n  right: tableCellStyle['padding-right'],\n  top: tableCellStyle['padding-top'],\n  bottom: tableCellStyle['padding-bottom'],\n};\n\nexport type TableCellProps = RenderNodeProps<MoTableCell>;\n\nconst vAlignToGridVAlign = (vAlign?: string) => {\n  const defaultAlign = 'center';\n  const map = {\n    top: 'flex-start',\n    middle: defaultAlign,\n    bottom: 'flex-end',\n  };\n  return vAlign ? map[vAlign] : defaultAlign;\n};\n\ntype CellProps = TableCellProps & {\n  fill?: string;\n};\n\nconst Cell: React.FC<CellProps> = (props) => {\n  const [isSticky] = useRowIsSticky();\n\n  const { node, attributes, children, fill, parent } = props;\n  const {\n    vAlign,\n    bdr,\n    hidden,\n    rowSpan = 1,\n    colSpan: cSpan,\n    cellMar,\n  } = node.data || {};\n  const colSpan = parseInt(String(cSpan), 10) || 1;\n\n  const style = React.useMemo(() => {\n    let result: React.CSSProperties = {};\n    if (hidden) {\n      result.display = 'none';\n    } else if (isSticky) {\n      // 设置 grid，保障在首行吸顶时，cell 的 vAlign 样式正常\n      result.display = 'flex';\n      result.flexDirection = 'column';\n    }\n\n    if (fill) {\n      result.backgroundColor = fill;\n    }\n\n    // 首行吸顶时采用 grid 布局，verticalAlign 在 grid 布局中不生效，改为 justifyContent\n    if (isSticky) {\n      result.justifyContent = vAlignToGridVAlign(vAlign);\n    } else if (vAlign) {\n      result.verticalAlign = vAlign;\n    }\n\n    const padding = { ...DefaultPadding };\n    if (cellMar) {\n      ['left', 'right', 'top', 'bottom'].forEach((orient) => {\n        if (typeof cellMar[orient]?.w === 'number') {\n          padding[orient] = cellMar[orient]?.w;\n        }\n      });\n    }\n\n    if (typeof bdr === 'object') {\n      result = { ...result, ...bdrToStyle(bdr), ...bdrToPaddingStyle(bdr, padding) };\n    }\n    return result;\n  }, [hidden, isSticky, fill, vAlign, cellMar, bdr]);\n\n  const isHeader = TableRow.isTableRow(parent) && TableRow.isHeader(parent);\n\n  return (\n    <Td\n      {...attributes}\n      data-type=\"table-cell\"\n      rowSpan={rowSpan || 1}\n      colSpan={colSpan}\n      style={style}\n      data-container-block\n    >\n      {children()}\n      {isHeader && <SelectionSlot layerFor={node.key} />}\n    </Td>\n  );\n};\n\nconst TableCell: React.FC<TableCellProps> = (props) => {\n  const { node, controller } = props;\n  const {\n    colSpan: cSpan,\n  } = node.data || {};\n\n  const colSpan = parseInt(String(cSpan), 10) || 1;\n\n  const { document } = controller.value;\n  const table = document.getClosest(node.key, isTable) as Table | null;\n  const docStyle = useStyle();\n  const fill = getTabelCellFill(node, table, docStyle);\n\n  const position = getPositionOfCell(node.key, table) || {};\n  // @ts-ignore\n  const { colIndex, rowIndex } = position;\n\n  const [colsWidth] = usePixelColsWidth();\n  const width = React.useMemo(() => {\n    let result = 0;\n    if (typeof colIndex !== 'number') {\n      return result;\n    }\n    if (Array.isArray(colsWidth)) {\n      result = colsWidth\n        .slice(colIndex, colIndex + colSpan)\n        .reduce((acc, v) => (acc + v), 0);\n    }\n    return result;\n  }, [colsWidth, colIndex, colSpan]);\n\n  const didMount = React.useRef(false);\n\n  const resetTableMinColsWidth = React.useCallback(() => {\n    node.forEachDescendant((n) => {\n      const colWidth = controller.query(\n        'getMinTableColWidth',\n        { node: n },\n      );\n      if (typeof colWidth === 'number' && width < colWidth) {\n        controller.run(\n          'onAction',\n          setTableMinColsWidthData({\n            [n.key]: colWidth,\n          }),\n        );\n      }\n    });\n  }, [node]);\n\n  React.useEffect(() => {\n    // didMount 时不处理\n    if (!didMount.current) {\n      didMount.current = true;\n      return;\n    }\n\n    resetTableMinColsWidth();\n  }, [resetTableMinColsWidth]);\n\n  const calcMinTableColWidth = React.useCallback(() => {\n    if (!table || rowIndex !== 0) {\n      return;\n    }\n    const res = controller.query(\n      'calcMinTableColWidth',\n      {\n        node: table,\n        colIndex,\n      },\n    );\n    const { key, width: minColWidth } = res || {};\n\n    if (key && typeof minColWidth === 'number' && width < minColWidth) {\n      controller.run(\n        'onAction',\n        setTableMinColsWidthData({\n          [key]: minColWidth,\n        }),\n      );\n    }\n  // perf\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  React.useEffect(calcMinTableColWidth, [calcMinTableColWidth]);\n\n  return (\n    <ContainerWidthResizeContext.Provider value={width}>\n      <Cell {...props} fill={fill} />\n    </ContainerWidthResizeContext.Provider>\n  );\n};\n\nexport default TableCell;\n\n"],"file":"tableCell.js"}