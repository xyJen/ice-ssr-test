{"version":3,"sources":["../../../src/components/tableScrollContainer.tsx"],"names":["Wrapper","styled","div","SCROLL_BAR_HEIGHT","p","hideScrollBar","TableScrollContainer","React","forwardRef","props","forRef","children","table","controller","isMobile","onMouseEnter","noop","onMouseMove","onScroll","disableHorizontalScrollbar","rest","scrollableContainer","zoomContainer","zoom","horizontalScrollRef","ref","width","setWidth","scrollLeft","setScrollLeft","widthRef","intersectionObRef","current","callback","entries","isVisible","intersectionRatio","visibleUtil","setVisible","key","removeEventListener","addEventListener","getFootBottom","isWindow","window","scrollContainerBottom","innerHeight","getBoundingClientRect","bottom","footerHeight","Math","ceil","max","HorizontalScroll","IntersectionObserver","observe","unobserve","undefined","handleScroll","e","left","Number","isFinite","colsWidthByPixel","setColsWidthByPixel","useState","pixelColsWidth","setPixelColsWidth","prevPixelColsWidth","useRef","useEffect","newPixelColsWidth","Table","isAutofitWidth","data","colsWidth","prevColsWidth","totalWidth","DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT","pxlColsWidth","totalColsWidth","reduce","acc","cw","prevTotalColsWidth","resizeObserverCallback","useCallback","rect","actualWith","min","prevPosition","handleScrollIntoView","focusPosition","colIndex","index","targetColRightBorder","slice","sum","colWidth","targetColLeftBorder","length","QUICK_INSERT_BUTTON_WIDTH_HEIGHT","requestAnimationFrame","realTableWrapperRect","sl","finalScrollLeft","shouldUpdateTable","isPendingSelected","range","isCollapsed","focusCell","value","document","getClosest","focus","TableCell","isTableCell","position","rowIndex","SCROLLABLE_ATTRIBUTE"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { noop, throttle } from 'lodash-es';\nimport equal from 'fast-deep-equal';\nimport { Controller, SelectionSlot, useZoomContainer, useZoom, useScrollableContainer } from '@ali/4ever-cangjie';\nimport Table from '../mo/models';\nimport TableCell from '../mo/models/tableCell';\nimport { QUICK_INSERT_BUTTON_WIDTH_HEIGHT, SCROLL_BAR_HEIGHT, DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT } from '../utils/constants';\nimport HorizontalScroll from '../utils/utils/horizontalScroll';\nimport { SCROLLABLE_ATTRIBUTE } from '@ali/4ever-plugin-draggable';\nimport {\n  TableScrollContainerContext,\n  TableScrollContainerWidthContext,\n  TableScrollContainerScrollLeftContext,\n  usePixelColsWidth,\n} from '../utils/hooks';\nimport { convertFromPercentToPixel } from '../utils/utils/colsWidthConverter';\nimport getPositionOfCell from '../utils/utils/getPositionOfCell';\nimport { useSelectionStatus } from '../utils/hooks/useSelectionStatus';\nimport { getBoundingRelativeRect } from '@ali/4ever-utils';\nimport useResizeObserver from '../utils/utils/useResizeObserver';\nimport { visibleUtil } from '../utils/utils/visibleUtil';\n\nexport const Wrapper = styled.div<{ hideScrollBar?: boolean }>`\n  overflow-x: scroll;\n  overflow-y: auto;\n  position: relative;\n\n  ::-webkit-scrollbar {\n    width: ${SCROLL_BAR_HEIGHT}px;\n    height: ${SCROLL_BAR_HEIGHT}px;\n  }\n  :hover::-webkit-scrollbar-thumb {\n    background: rgba(0, 0, 0, 0.12);\n    border-radius: 5px;\n    border: 1px solid transparent;\n    background-clip: content-box;\n  }\n  :hover::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.20);\n    border-radius: 5px;\n    border: 1px solid transparent;\n    background-clip: content-box;\n  }\n\n  ${(p) => (p.hideScrollBar ? `\n    ::-webkit-scrollbar {\n      display: none;\n    }\n    ::-webkit-scrollbar-thumb {\n      display: none;\n    }\n  ` : '')}\n`;\n\nexport interface Props {\n  children: any;\n  table: Table;\n  controller: Controller;\n  className?: string;\n  style?: React.CSSProperties;\n  isMobile?: boolean;\n  onMouseEnter?: (e: Event) => void;\n  onMouseMove?: (e: Event) => void;\n  onScroll?: (e: Event) => void;\n  disableHorizontalScrollbar?: boolean;\n  hideScrollBar?: boolean;\n}\n\nconst TableScrollContainer = React.forwardRef<HTMLDivElement, Props>((props, forRef) => {\n  const {\n    children,\n    table,\n    controller,\n    isMobile,\n    onMouseEnter = noop,\n    onMouseMove = noop,\n    onScroll,\n    disableHorizontalScrollbar,\n    hideScrollBar,\n    ...rest\n  } = props;\n  const scrollableContainer = useScrollableContainer();\n  const zoomContainer = useZoomContainer();\n  const zoom = useZoom();\n\n  const horizontalScrollRef = useRef<any>(null);\n  const ref = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const widthRef = useRef(width);\n\n  const intersectionObRef = useRef<IntersectionObserver | null>(null);\n\n  useEffect(() => {\n    if (\n      !disableHorizontalScrollbar\n      && scrollableContainer\n      && !isMobile\n      && ref.current\n    ) {\n      const callback = function (entries) {\n        const isVisible = entries[0].intersectionRatio > 0;\n        visibleUtil.setVisible(table.key, isVisible);\n        if (!isVisible) {\n          horizontalScrollRef.current?.removeEventListener();\n        } else if (horizontalScrollRef.current) {\n          // fix: https://work.aone.alibaba-inc.com/issue/44551345\n          horizontalScrollRef.current?.addEventListener();\n        } else if (ref.current) {\n          const getFootBottom = () => {\n            const isWindow = (scrollableContainer as any).window;\n            const scrollContainerBottom = isWindow ?\n              window.innerHeight : (scrollableContainer as HTMLElement).getBoundingClientRect().bottom;\n            const footerHeight = Math.ceil(window.innerHeight - scrollContainerBottom);\n            return Math.max(footerHeight, 0);\n          };\n          horizontalScrollRef.current = new HorizontalScroll(\n            ref.current,\n            getFootBottom,\n            scrollableContainer,\n          );\n        }\n      };\n      intersectionObRef.current = new IntersectionObserver(callback);\n      intersectionObRef.current.observe(ref.current);\n      return () => {\n        if (ref.current) {\n          intersectionObRef.current?.unobserve(ref.current);\n        }\n      };\n    }\n    return undefined;\n  }, [scrollableContainer, isMobile, disableHorizontalScrollbar, table.key]);\n\n  useEffect(() => {\n    if (typeof forRef === 'function') {\n      forRef(ref.current);\n    } else if (forRef) {\n      forRef.current = ref.current;\n    }\n  }, [ref, forRef]);\n\n  const handleScroll = throttle((e: any) => {\n    onScroll && onScroll(e);\n    const left = ref.current?.scrollLeft;\n    if (Number.isFinite(left) && scrollLeft !== left) {\n      setScrollLeft(left!);\n    }\n  });\n\n  const [colsWidthByPixel, setColsWidthByPixel] = React.useState<number[]>([]);\n\n  const [pixelColsWidth, setPixelColsWidth] = usePixelColsWidth();\n  const prevPixelColsWidth = React.useRef<number[]>([]);\n  React.useEffect(() => {\n    const newPixelColsWidth = Table.isAutofitWidth(table)\n      ? colsWidthByPixel\n      : table.data.colsWidth;\n    if (!equal(newPixelColsWidth, prevPixelColsWidth.current)) {\n      setPixelColsWidth(newPixelColsWidth || []);\n      prevPixelColsWidth.current = (newPixelColsWidth || []);\n    }\n  }, [colsWidthByPixel, setPixelColsWidth, table]);\n\n  const prevColsWidth = React.useRef<number[] | undefined>([]);\n\n  // table 变化时\n  React.useEffect(() => {\n    if (!Table.isAutofitWidth(table) || !widthRef.current) return;\n\n    let totalWidth = widthRef.current / zoom - 2;\n    if (isMobile) {\n      totalWidth = DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT;\n    }\n\n    const pxlColsWidth = convertFromPercentToPixel(table, totalWidth);\n    setColsWidthByPixel(pxlColsWidth);\n  }, [table, isMobile, zoom]);\n\n  const totalColsWidth = (pixelColsWidth || []).reduce((acc, cw) => (acc + cw), 0);\n  const prevTotalColsWidth = React.useRef(0);\n\n  const resizeObserverCallback = React.useCallback((rect: DOMRect) => {\n    // table 开启 prune display: none 时，宽度是 0\n    if (rect.width === 0) return;\n\n    const actualWith = rect.width;\n\n    if (\n      widthRef.current !== actualWith\n      || prevTotalColsWidth.current !== totalColsWidth\n    ) {\n      setWidth(\n        Number.isFinite(totalColsWidth)\n          ? Math.min(actualWith, totalColsWidth! + 1)\n          : actualWith,\n      );\n      widthRef.current = actualWith;\n      prevTotalColsWidth.current = totalColsWidth;\n      if (Table.isAutofitWidth(table)) {\n        prevColsWidth.current = table.data.colsWidth;\n        let totalWidth = actualWith / zoom - 2;\n        if (isMobile) {\n          totalWidth = DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT;\n        }\n        const pxlColsWidth = convertFromPercentToPixel(table, totalWidth);\n        setColsWidthByPixel(pxlColsWidth);\n      }\n    }\n  }, [isMobile, table, totalColsWidth, zoom]);\n\n  useResizeObserver(ref.current, resizeObserverCallback);\n\n  const prevPosition = React.useRef<{ rowIndex: number; colIndex: number} | null>(null);\n  const handleScrollIntoView = React.useCallback((focusPosition: { colIndex: number; rowIndex: number }) => {\n    // horizontal\n    if (focusPosition?.colIndex !== undefined && pixelColsWidth) {\n      const index = focusPosition.colIndex;\n\n      let targetColRightBorder = pixelColsWidth\n        .slice(0, index + 1)\n        .reduce((sum, colWidth) => sum + colWidth, 0);\n      const targetColLeftBorder = targetColRightBorder - pixelColsWidth[index];\n      targetColRightBorder =\n        index === pixelColsWidth.length - 1\n          ? targetColRightBorder + QUICK_INSERT_BUTTON_WIDTH_HEIGHT\n          : targetColRightBorder;\n\n      window.requestAnimationFrame(() => {\n        if (!ref.current) {\n          return;\n        }\n        const realTableWrapperRect = getBoundingRelativeRect(\n          ref.current,\n          zoomContainer,\n        );\n        const { scrollLeft: sl } = ref.current;\n\n        if (\n          pixelColsWidth[index] <= realTableWrapperRect.width && (\n            sl > targetColLeftBorder ||\n            sl + realTableWrapperRect.width < targetColRightBorder\n          )\n        ) {\n          const finalScrollLeft = targetColRightBorder - realTableWrapperRect.width;\n          ref.current.scrollLeft = finalScrollLeft;\n        }\n      });\n    } else {\n      // vertical\n      // TODO: 向下插入一行后，新增行可能会超出可见区域\n    }\n  }, [pixelColsWidth, zoomContainer]);\n  const shouldUpdateTable = React.useCallback(({ isPendingSelected, range }) => {\n    // 在表格内的光标位置变化\n    if (range.isCollapsed && isPendingSelected) {\n      const focusCell = controller.value.document.getClosest(range.focus.key, TableCell.isTableCell);\n      if (!focusCell) {\n        return;\n      }\n      // 检查所属单元格位置是否发生变化，若变化则按需横向滚动进视区\n      const position = getPositionOfCell(focusCell.key, table);\n      if (\n        position && (\n          prevPosition.current?.colIndex !== position.colIndex ||\n          prevPosition.current?.rowIndex !== position.rowIndex\n        )\n      ) {\n        prevPosition.current = position;\n        handleScrollIntoView(position);\n      }\n    }\n  }, [controller, table, handleScrollIntoView]);\n\n  useSelectionStatus(controller, table, shouldUpdateTable, []);\n\n  return (\n    <Wrapper\n      {...rest}\n      onMouseEnter={onMouseEnter}\n      onMouseMove={onMouseMove}\n      onScroll={handleScroll}\n      ref={ref}\n      hideScrollBar={hideScrollBar}\n      {...SCROLLABLE_ATTRIBUTE}\n    >\n      <TableScrollContainerContext.Provider value={ref.current}>\n        <TableScrollContainerWidthContext.Provider value={width}>\n          <TableScrollContainerScrollLeftContext.Provider value={scrollLeft}>\n            {children}\n          </TableScrollContainerScrollLeftContext.Provider>\n        </TableScrollContainerWidthContext.Provider>\n      </TableScrollContainerContext.Provider>\n      <SelectionSlot layerFor={table.key} />\n    </Wrapper>\n  );\n});\n\nexport default TableScrollContainer;\n"],"file":"tableScrollContainer.js"}