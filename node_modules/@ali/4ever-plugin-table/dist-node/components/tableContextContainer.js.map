{"version":3,"sources":["../../../src/components/tableContextContainer.tsx"],"names":["TableContextContainer","props","controller","table","enableHeaderSticky","children","scale","scrollContainer","scrollContainerRect","setScrollContainerRect","React","useState","top","firstRow","nodes","shouldSticky","TableRow","updateScrollContainerTop","useCallback","rect","actualTop","r","isSticky","setIsSticky","disableSticky","query","updateIsSticky","sticky","isStickyContext","useMemo","scrollContainerRectValue"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;uBAJ4B,a;;AAkB5B,MAAMA,qBAAqB,GAAIC,KAAD,IAAkB;AAC9C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,kBAArB;AAAyCC,IAAAA;AAAzC,MAAsDJ,KAA5D;AAEA,QAAMK,KAAK,GAAG,2BAAd;AACA,QAAMC,eAAe,GAAG,0CAAxB;;AAEA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IACJC,eAAMC,QAAN,CAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,CADF;;AAEA,QAAMC,QAAQ,GAAGV,KAAK,CAACW,KAAN,GAAc,CAAd,CAAjB;;AACA,QAAMC,YAAY,GAAGC,kBAASD,YAAT,CAAsBF,QAAtB,CAArB;;AAEA,QAAMI,wBAAwB,GAAGP,eAAMQ,WAAN,CAAmBC,IAAD,IAAmB;AACpE,UAAMC,SAAS,GAAGD,IAAI,CAACP,GAAvB;;AACA,QAAIJ,mBAAmB,CAACI,GAApB,KAA4BQ,SAAhC,EAA2C;AACzCX,MAAAA,sBAAsB,CAAEY,CAAD,KAAQ,EAC7B,GAAGA,CAD0B;AAE7BT,QAAAA,GAAG,EAAEQ;AAFwB,OAAR,CAAD,CAAtB;AAID;AACF,GARgC,EAQ9B,CAACZ,mBAAmB,CAACI,GAArB,CAR8B,CAAjC;;AASA,kCAAkBG,YAAY,GAAGR,eAAH,GAAqB,IAAnD,EAAyDU,wBAAzD;;AAEA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bb,eAAMC,QAAN,CAAe,KAAf,CAAhC;AAEA;AACF;AACA;AACA;AACA;AACA;;;AACE,QAAMa,aAAa,GAAGlB,KAAK,KAAK,CAAV,IACjBJ,UAAU,CAACuB,KAAX,CAAiB,eAAjB,EAAkCtB,KAAlC,CADiB,IAEjBD,UAAU,CAACuB,KAAX,CAAiB,qBAAjB,EAAwCtB,KAAxC,CAFL;;AAIA,QAAMuB,cAAc,GAAGhB,eAAMQ,WAAN,CAAmBS,MAAD,IAAqB;AAC5DJ,IAAAA,WAAW,CACTI,MAAM,IACH,CAACH,aADJ,IAEG,CAAC,CAACpB,kBAFL,IAE2BA,kBAAkB,EAHpC,CAAX;AAKD,GANsB,EAMpB,CAACoB,aAAD,EAAgBpB,kBAAhB,CANoB,CAAvB;;AAQA,QAAMwB,eAAoC,GAAGlB,eAAMmB,OAAN,CAAc,MAAM;AAC/D,WAAO,CAACP,QAAD,EAAWI,cAAX,CAAP;AACD,GAF4C,EAE1C,CAACJ,QAAD,EAAWI,cAAX,CAF0C,CAA7C;;AAIA,QAAMI,wBAA0C,GAAGpB,eAAMmB,OAAN,CAAc,MAAM;AACrE,WAAO,CAACrB,mBAAD,EAAsBC,sBAAtB,CAAP;AACD,GAFkD,EAEhD,CAACD,mBAAD,CAFgD,CAAnD;;AAIA,sBACE,eAAC,8BAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEsB;AAAzC,kBACE,eAAC,yBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEF;AAApC,KACGvB,QADH,CADF,CADF;AAOD,CAzDD;;eA2DeL,qB","sourcesContent":["import React from 'react';\nimport { Controller, useZoom, useScrollableContainer } from '@ali/4ever-cangjie';\nimport Table from '../mo/models';\nimport TableRow from '../mo/models/tableRow';\nimport { RowIsStickyContext, ScrollableContainerRect } from '../utils/hooks';\nimport useResizeObserver from '../utils/utils/useResizeObserver';\n\ninterface Rect {\n  top: number;\n  left?: number;\n}\n\nexport interface Props {\n  controller: Controller;\n  table: Table;\n  enableHeaderSticky?: () => boolean;\n  children: React.ReactNode;\n}\n\nconst TableContextContainer = (props: Props) => {\n  const { controller, table, enableHeaderSticky, children } = props;\n\n  const scale = useZoom();\n  const scrollContainer = useScrollableContainer();\n\n  const [scrollContainerRect, setScrollContainerRect] =\n    React.useState<Rect>({ top: 0 });\n  const firstRow = table.nodes?.[0];\n  const shouldSticky = TableRow.shouldSticky(firstRow);\n\n  const updateScrollContainerTop = React.useCallback((rect: DOMRect) => {\n    const actualTop = rect.top;\n    if (scrollContainerRect.top !== actualTop) {\n      setScrollContainerRect((r) => ({\n        ...r,\n        top: actualTop,\n      }));\n    }\n  }, [scrollContainerRect.top]);\n  useResizeObserver(shouldSticky ? scrollContainer : null, updateScrollContainerTop);\n\n  const [isSticky, setIsSticky] = React.useState(false);\n\n  /**\n   * 以下场景吸顶时，样式存在问题，暂时不支持\n   * 1. 缩放\n   * 2. 表格在表格 or 分栏 内\n   * 3. 表格在高亮块内\n   */\n  const disableSticky = scale !== 1\n    || controller.query('isNodeInTable', table)\n    || controller.query('isNodeInColorBlocks', table);\n\n  const updateIsSticky = React.useCallback((sticky: boolean) => {\n    setIsSticky(\n      sticky\n      && !disableSticky\n      && !!enableHeaderSticky && enableHeaderSticky(),\n    );\n  }, [disableSticky, enableHeaderSticky]);\n\n  const isStickyContext: [boolean, Function] = React.useMemo(() => {\n    return [isSticky, updateIsSticky];\n  }, [isSticky, updateIsSticky]);\n\n  const scrollContainerRectValue: [Rect, Function] = React.useMemo(() => {\n    return [scrollContainerRect, setScrollContainerRect];\n  }, [scrollContainerRect]);\n\n  return (\n    <ScrollableContainerRect.Provider value={scrollContainerRectValue}>\n      <RowIsStickyContext.Provider value={isStickyContext}>\n        {children}\n      </RowIsStickyContext.Provider>\n    </ScrollableContainerRect.Provider>\n  );\n};\n\nexport default TableContextContainer;\n"],"file":"tableContextContainer.js"}