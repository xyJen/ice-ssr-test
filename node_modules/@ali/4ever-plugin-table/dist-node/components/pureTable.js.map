{"version":3,"sources":["../../../src/components/pureTable.tsx"],"names":["findDOMNodeSafely","domUtils","DELTA","RealTable","styled","table","DEFAULT_BORDER_COLOR","contains","root","node","found","findDescendant","child","key","PureTable","props","fwdRef","children","left","isMobile","controller","forceRenderPercentColWidthForAutoFit","colsWidth","isValidColsWidth","length","isAutofit","Table","isAutofitWidth","timerRef","React","useRef","isSticky","ref","useEffect","current","style","useMemo","tableWidth","DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT","reduce","sum","w","data","width","border","borderTopWidth","renderColsWidth","map","prevRenderColsWidth","selection","document","value","selectionNode","getClosestNode","setScrollType","command","Commands","select","merge","r","Math","random","clearTimeout","setTimeout","handleMouseMove","e","clientX","clientY","trigger","selectionTrigger","get","tableSelection","query","anchor","focus","convertToTextPoints","startTd","getClosest","TableCell","isTableCell","endTd","hidden","tdDOM","fastdom","measure","tdRect","getBoundingClientRect","l","right","top","bottom","height","isInCellEdge","run","handleMouseUp","removeEventListener","handleMouseLeave","handleMouseDown","addEventListener","colWidth","i"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n} from 'react';\nimport styled from 'styled-components';\nimport equal from 'fast-deep-equal';\nimport fastdom from 'fastdom';\nimport { Commands, Controller, Element, Node, domUtils, CangjieSelectEvent } from '@ali/4ever-cangjie';\nimport Table from '../mo/models';\nimport TableCell from '../mo/models/tableCell';\nimport { DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT, DEFAULT_BORDER_COLOR } from '../utils/constants';\nimport { convertFromPercentToPixel } from '../utils/utils/colsWidthConverter';\nimport selectionTrigger from '../utils/utils/selectionTrigger';\nimport setSelectionByTable from '../utils/utils/setSelectionByTable';\nimport { usePixelColsWidth, useRowIsSticky } from '../utils/hooks';\n\nconst { findDOMNodeSafely } = domUtils;\n\nconst DELTA = 8;\n\nconst RealTable = styled.table`\n  position: relative;\n  table-layout: fixed;\n  border-collapse: collapse;\n  border: 1px solid ${DEFAULT_BORDER_COLOR};\n`;\n\nexport interface PureTableProps {\n  node: Table;\n  left?: number;\n  children: React.ReactNode;\n  isMobile?: boolean;\n  readonly?: boolean;\n  controller: Controller;\n  forceRenderPercentColWidthForAutoFit?: boolean;\n}\n\nconst contains = (root: Element, node: Node) => {\n  if (node) {\n    const found = root.findDescendant((child) => child.key === node.key);\n    if (found) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst PureTable = forwardRef<HTMLTableElement, PureTableProps>(\n  (props, fwdRef) => {\n    const {\n      children,\n      left,\n      node,\n      isMobile,\n      controller,\n      forceRenderPercentColWidthForAutoFit,\n    } = props;\n\n    const [colsWidth] = usePixelColsWidth();\n    const isValidColsWidth = colsWidth.length > 0;\n    const isAutofit = Table.isAutofitWidth(node);\n    const timerRef = React.useRef<number>();\n    const [isSticky] = useRowIsSticky();\n    const ref = React.useRef<HTMLTableElement>(null);\n    React.useEffect(() => {\n      if (typeof fwdRef === 'function') {\n        fwdRef(ref.current);\n      } else if (fwdRef) {\n        fwdRef.current = ref.current;\n      }\n    }, [ref, fwdRef]);\n\n    const style = React.useMemo(() => {\n      let tableWidth: React.CSSProperties['width'];\n      if (isAutofit && forceRenderPercentColWidthForAutoFit) {\n        tableWidth = '100%';\n      } else if (isAutofit && isMobile) {\n        tableWidth = DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT;\n      } else if (isValidColsWidth) {\n        tableWidth = (colsWidth as number[])?.reduce((sum, w) => (sum + w), 0);\n      } else if (isAutofit) {\n        tableWidth = '100%';\n      } else {\n        tableWidth = (node.data?.colsWidth || []).reduce((sum, w) => (sum + w), 0);\n      }\n\n      return {\n        width: tableWidth,\n        left: `${left || 0}px`,\n        border: isSticky ? `1px solid ${DEFAULT_BORDER_COLOR}` : 'unset',\n        borderTopWidth: isSticky ? '0' : 'unset',\n      };\n    }, [isAutofit, forceRenderPercentColWidthForAutoFit, isMobile, isValidColsWidth, left, isSticky, colsWidth, node.data?.colsWidth]);\n\n    const renderColsWidth = React.useMemo(() => {\n      if (isAutofit && forceRenderPercentColWidthForAutoFit) {\n        return convertFromPercentToPixel(node, 100).map((w) => `${w}%`);\n      }\n\n      if (isAutofit && isMobile) {\n        return convertFromPercentToPixel(node, DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT);\n      }\n\n      if (isValidColsWidth) {\n        return colsWidth;\n      }\n\n      if (isAutofit) {\n        return convertFromPercentToPixel(node, 100).map((w) => `${w}%`);\n      }\n\n      return node.data?.colsWidth || [];\n    }, [isAutofit, forceRenderPercentColWidthForAutoFit, isMobile, isValidColsWidth, node, colsWidth]);\n\n    const prevRenderColsWidth = React.useRef<string[] | number[] | undefined>([]);\n\n    // @ts-ignore\n    React.useEffect(() => {\n      if (\n        !isAutofit\n        || equal(prevRenderColsWidth.current, renderColsWidth)\n      ) return () => {};\n\n      prevRenderColsWidth.current = renderColsWidth;\n      const { selection, document } = controller.value;\n      const selectionNode = selection.getClosestNode(document);\n      // 不能用 node.contains(xxx)，始终为 false\n      if (selectionNode && contains(node, selectionNode)) {\n        controller.setScrollType('maintain');\n        controller.command(Commands.select, selection.merge({\n          data: {\n            ...selection.data,\n            r: Math.random(),\n          },\n        }));\n        clearTimeout(timerRef.current);\n        timerRef.current = setTimeout(() => {\n          controller.setScrollType('toSelection');\n        });\n        return () => {\n          clearTimeout(timerRef.current);\n          timerRef.current = setTimeout(() => {\n            controller.setScrollType('toSelection');\n          });\n        };\n      }\n    }, [renderColsWidth, controller, node, isAutofit]);\n\n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timerRef.current);\n        controller.setScrollType('toSelection');\n      };\n    });\n\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!ref.current) return;\n\n      const { clientX, clientY } = e;\n      const trigger = selectionTrigger.get();\n      if (trigger === 'selecting') {\n        const tableSelection = controller.query('tableSelection');\n        if (tableSelection) {\n          return;\n        }\n\n        const { selection, document } = controller.value;\n        const { anchor, focus } = selection.convertToTextPoints(document);\n        const startTd = document.getClosest(\n          anchor.key,\n          TableCell.isTableCell,\n        );\n        const endTd = document.getClosest(\n          focus.key,\n          TableCell.isTableCell,\n        );\n        if (\n          !startTd\n          || !endTd\n          || startTd.key !== endTd.key\n          || startTd.data.hidden\n        ) return;\n\n        const tdDOM = findDOMNodeSafely(startTd?.key, ref.current);\n        if (!tdDOM) return;\n\n        fastdom.measure(() => {\n          const tdRect = tdDOM.getBoundingClientRect();\n          const { left: l, right, top, bottom } = tdRect;\n          if (tdRect.height === 0) return;\n          const isInCellEdge = !(\n            clientX > l + DELTA\n            && clientX < right - DELTA\n            && clientY > top + DELTA\n            && clientY < bottom - DELTA\n          );\n          if (isInCellEdge) {\n            controller.run('onCangjieSelect', CangjieSelectEvent({\n              selection: setSelectionByTable(selection, -1),\n              trigger,\n            }));\n          }\n        });\n      }\n    };\n    const handleMouseUp = () => {\n      ref.current?.removeEventListener('mousemove', handleMouseMove);\n    };\n    const handleMouseLeave = () => {\n      ref.current?.removeEventListener('mousemove', handleMouseMove);\n      ref.current?.removeEventListener('mouseup', handleMouseUp);\n      ref.current?.removeEventListener('mouseleave', handleMouseLeave);\n    };\n    const handleMouseDown = () => {\n      ref.current?.addEventListener('mousemove', handleMouseMove);\n      ref.current?.addEventListener('mouseup', handleMouseUp);\n      ref.current?.addEventListener('mouseleave', handleMouseLeave);\n    };\n\n    return (\n      <RealTable\n        ref={ref}\n        style={style}\n        onMouseDown={handleMouseDown}\n      >\n        <colgroup>\n          {(renderColsWidth as Array<React.CSSProperties['width']>)?.map((colWidth, i) => (\n            <col key={i} width={colWidth} />\n          ))}\n        </colgroup>\n        <tbody>\n          {children}\n        </tbody>\n      </RealTable>\n    );\n  },\n);\n\nexport default PureTable;\n"],"file":"pureTable.js"}