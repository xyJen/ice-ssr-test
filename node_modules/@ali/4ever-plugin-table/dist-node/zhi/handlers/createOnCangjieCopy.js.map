{"version":3,"sources":["../../../../src/zhi/handlers/createOnCangjieCopy.ts"],"names":["MIME_TYPES","constants","createOnCangjieCopy","isMobile","onCangjieCopy","event","controller","next","clipboardData","document","value","encodedFragment","getData","FRAGMENT","fragment","transferUtils","decodeFragment","setClipboardData","setData","encodeFragment","shouldTransfrom","newFragment"],"mappings":";;;;;;;;;AAAA;;AAMA;;AACA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,sBAAvB;;AAEe,SAASC,mBAAT,CAA6BC,QAAQ,GAAG,KAAxC,EAA+C;AAC5D,SAAO,SAASC,aAAT,CACLC,KADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AACA,QAAI,CAACF,KAAK,CAACG,aAAX,EAA0B;AACxB,aAAOD,IAAI,EAAX;AACD;;AAED,UAAM;AAAEE,MAAAA;AAAF,QAAeH,UAAU,CAACI,KAAhC;AACA,UAAMC,eAAe,GAAGN,KAAK,CAACG,aAAN,CAAoBI,OAApB,CAA4BZ,UAAU,CAACa,QAAvC,CAAxB;;AACA,UAAMC,QAAQ,GAAGC,2BAAcC,cAAd,CAA6BL,eAA7B,CAAjB;;AACA,QAAIG,QAAQ,IAAI,kCAAkBA,QAAlB,CAAhB,EAA6C;AAC3C,aAAOP,IAAI,CACTF,KAAK,CAACY,gBAAN,CACEZ,KAAK,CAACG,aAAN,CAAoBU,OAApB,CACElB,UAAU,CAACa,QADb,EAEEE,2BAAcI,cAAd,CAA6B,sDAAwBL,QAAxB,CAA7B,CAFF,CADF,CADS,CAAX;AAQD;;AACD,QAAIA,QAAJ,EAAc;AACZ,YAAM;AACJM,QAAAA,eADI;AAEJN,QAAAA,QAAQ,EAAEO;AAFN,UAGF,gDACFZ,QADE,EAEFK,QAFE,EAGFX,QAHE,CAHJ;;AAQA,UAAIiB,eAAJ,EAAqB;AACnB,eAAOb,IAAI,CACTF,KAAK,CAACY,gBAAN,CACEZ,KAAK,CAACG,aAAN,CAAoBU,OAApB,CACElB,UAAU,CAACa,QADb,EAEEE,2BAAcI,cAAd,CAA6BE,WAA7B,CAFF,CADF,CADS,CAAX;AAQD;AACF;;AAED,WAAOd,IAAI,EAAX;AACD,GA5CD;AA6CD","sourcesContent":["import {\n  CangjieClipboardEvent,\n  constants,\n  Controller,\n  transferUtils,\n} from '@ali/4ever-cangjie';\nimport { isSingleTableCell } from '@ali/4ever-utils';\nimport transformTablesToCompatibleLegacy from '../../utils/utils/transformTablesToCompatibleLegacy';\nimport { normalizeClipboardTable } from '../../utils/utils/normalizeClipboardTable';\n\nconst { MIME_TYPES } = constants;\n\nexport default function createOnCangjieCopy(isMobile = false) {\n  return function onCangjieCopy(\n    event: CangjieClipboardEvent,\n    controller: Controller,\n    next,\n  ) {\n    if (!event.clipboardData) {\n      return next();\n    }\n\n    const { document } = controller.value;\n    const encodedFragment = event.clipboardData.getData(MIME_TYPES.FRAGMENT);\n    const fragment = transferUtils.decodeFragment(encodedFragment);\n    if (fragment && isSingleTableCell(fragment)) {\n      return next(\n        event.setClipboardData(\n          event.clipboardData.setData(\n            MIME_TYPES.FRAGMENT,\n            transferUtils.encodeFragment(normalizeClipboardTable(fragment)),\n          ),\n        ),\n      );\n    }\n    if (fragment) {\n      const {\n        shouldTransfrom,\n        fragment: newFragment,\n      } = transformTablesToCompatibleLegacy(\n        document,\n        fragment,\n        isMobile,\n      );\n      if (shouldTransfrom) {\n        return next(\n          event.setClipboardData(\n            event.clipboardData.setData(\n              MIME_TYPES.FRAGMENT,\n              transferUtils.encodeFragment(newFragment),\n            ),\n          ),\n        );\n      }\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnCangjieCopy.js"}