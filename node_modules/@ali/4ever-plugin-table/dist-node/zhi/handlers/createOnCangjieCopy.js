"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createOnCangjieCopy;

var _everCangjie = require("@ali/4ever-cangjie");

var _everUtils = require("@ali/4ever-utils");

var _transformTablesToCompatibleLegacy = _interopRequireDefault(require("../../utils/utils/transformTablesToCompatibleLegacy"));

var _normalizeClipboardTable = require("../../utils/utils/normalizeClipboardTable");

const {
  MIME_TYPES
} = _everCangjie.constants;

function createOnCangjieCopy(isMobile = false) {
  return function onCangjieCopy(event, controller, next) {
    if (!event.clipboardData) {
      return next();
    }

    const {
      document
    } = controller.value;
    const encodedFragment = event.clipboardData.getData(MIME_TYPES.FRAGMENT);

    const fragment = _everCangjie.transferUtils.decodeFragment(encodedFragment);

    if (fragment && (0, _everUtils.isSingleTableCell)(fragment)) {
      return next(event.setClipboardData(event.clipboardData.setData(MIME_TYPES.FRAGMENT, _everCangjie.transferUtils.encodeFragment((0, _normalizeClipboardTable.normalizeClipboardTable)(fragment)))));
    }

    if (fragment) {
      const {
        shouldTransfrom,
        fragment: newFragment
      } = (0, _transformTablesToCompatibleLegacy.default)(document, fragment, isMobile);

      if (shouldTransfrom) {
        return next(event.setClipboardData(event.clipboardData.setData(MIME_TYPES.FRAGMENT, _everCangjie.transferUtils.encodeFragment(newFragment))));
      }
    }

    return next();
  };
}
//# sourceMappingURL=createOnCangjieCopy.js.map