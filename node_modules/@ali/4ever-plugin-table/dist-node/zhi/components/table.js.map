{"version":3,"sources":["../../../../src/zhi/components/table.tsx"],"names":["DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT","constants","CommonTable","React","forwardRef","props","node","children","attributes","config","controller","isMobile","rest","wrapperRef","useRef","ref","wrapperWidthRef","observerRef","pixelColsWidth","setPixelColsWidth","useState","pixelColsWidthValue","useMemo","useEffect","current","containerWidth","undefined","run","isAutofit","MoTable","isAutofitWidth","ResizeObserver","list","contentRect","width","wrapperNode","observe","unobserve","disconnect","scrollContainerRef","onScroll","configOnScroll","useCallback","percentOfScrollLeft","data","frameId","window","requestAnimationFrame","scrollContainer","offsetWidth","tableWidth","totalScroll","scrollTo","left","behavior","cancelAnimationFrame","forceRenderPercentColWidthForAutoFit","PCTable","enableHeaderSticky","Table"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { Controller, RenderNodeProps } from '@ali/4ever-cangjie';\nimport MoTable from '../../mo/models';\nimport { TableConfig } from '../types';\nimport constants from '../../utils/constants';\nimport { PixelColsWidthContext } from '../../utils/hooks';\nimport { adjustColsWidth } from '../../utils/actions';\nimport TableContextContainer from '../../components/tableContextContainer';\nimport TableScrollContainer from '../../components/tableScrollContainer';\nimport PureTable from '../../components/pureTable';\n\nconst { DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT } = constants;\n\ntype TableProps = Omit<RenderNodeProps<MoTable>, 'attributes'> & {\n  controller: Controller;\n  attributes?: { [key: string]: string };\n  isMobile?: boolean;\n  config?: TableConfig;\n  ref?: React.RefObject<HTMLTableElement>;\n};\n\nconst CommonTable = React.forwardRef<HTMLTableElement, TableProps>(\n  (props, forwardRef) => {\n    const { node, children, attributes = {}, config = {}, controller, isMobile, ...rest } = props;\n    const wrapperRef = React.useRef<HTMLDivElement>(null);\n    const ref = React.useRef<HTMLTableElement>(null);\n    const wrapperWidthRef = React.useRef(0);\n    const observerRef = React.useRef<ResizeObserver>();\n\n    const [pixelColsWidth, setPixelColsWidth] = React.useState<number[]>([]);\n\n    const pixelColsWidthValue: [number[], Function] = React.useMemo(() => {\n      return [pixelColsWidth, setPixelColsWidth];\n    }, [pixelColsWidth]);\n\n    React.useEffect(() => {\n      if (typeof forwardRef === 'function') {\n        forwardRef(ref.current);\n      } else if (forwardRef) {\n        forwardRef.current = ref.current;\n      }\n    }, [ref, forwardRef]);\n\n    React.useEffect(() => {\n      const containerWidth = isMobile ? DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT : undefined;\n      controller.run('onAction', adjustColsWidth(node, containerWidth));\n    });\n\n    const isAutofit = MoTable.isAutofitWidth(node);\n\n    React.useEffect(() => {\n      if (\n        isMobile\n        || !isAutofit\n        || !wrapperRef.current\n      ) return () => {};\n\n      observerRef.current = new ResizeObserver((list: ResizeObserverEntry[]) => {\n        const { contentRect } = list[0];\n        // table 开启 prune display: none 时，宽度是 0\n        if (\n          contentRect.width === 0\n          || contentRect.width === wrapperWidthRef.current\n        ) return;\n\n        wrapperWidthRef.current = contentRect.width;\n        controller.run('onAction', adjustColsWidth(node));\n      });\n\n      const wrapperNode = wrapperRef.current;\n      observerRef.current.observe(wrapperNode);\n\n      return () => {\n        if (wrapperNode) {\n          observerRef.current?.unobserve(wrapperNode);\n        }\n      };\n    }, [node, isMobile, controller, isAutofit]);\n\n    React.useEffect(() => {\n      return () => {\n        if (observerRef.current) {\n          observerRef.current.disconnect();\n        }\n      };\n    }, []);\n\n    const scrollContainerRef = React.useRef<HTMLDivElement>(null);\n    const { onScroll: configOnScroll } = config;\n\n    const onScroll = React.useCallback(() => {\n      if (configOnScroll && scrollContainerRef.current) {\n        configOnScroll(scrollContainerRef.current, node);\n      }\n    }, [node, configOnScroll]);\n\n    const { percentOfScrollLeft } = node.data || {};\n    React.useEffect(() => {\n      const frameId = window.requestAnimationFrame(() => {\n        const scrollContainer = scrollContainerRef.current;\n        if (!scrollContainer || !ref.current) {\n          return;\n        }\n        if (typeof percentOfScrollLeft === 'number') {\n          const containerWidth = scrollContainer.offsetWidth;\n          const tableWidth = ref.current.offsetWidth;\n          const totalScroll = tableWidth - containerWidth;\n          scrollContainer.scrollTo({\n            left: percentOfScrollLeft * totalScroll,\n            behavior: 'smooth',\n          });\n        }\n      });\n      return () => {\n        window.cancelAnimationFrame(frameId);\n      };\n    }, [percentOfScrollLeft]);\n\n    return (\n      <PixelColsWidthContext.Provider value={pixelColsWidthValue}>\n        <TableScrollContainer\n          {...rest}\n          controller={controller}\n          onScroll={onScroll}\n          table={node}\n          ref={scrollContainerRef}\n          isMobile={isMobile}\n        >\n          <div {...attributes} ref={wrapperRef}>\n            <PureTable\n              ref={forwardRef}\n              node={node}\n              controller={controller}\n              isMobile={isMobile}\n              readonly\n              forceRenderPercentColWidthForAutoFit={config.forceRenderPercentColWidthForAutoFit?.()}\n            >\n              {children()}\n            </PureTable>\n          </div>\n        </TableScrollContainer>\n      </PixelColsWidthContext.Provider>\n    );\n  },\n);\n\nconst PCTable = (props: TableProps) => {\n  const { controller, node, config = {} } = props;\n  const { enableHeaderSticky } = config;\n\n  return (\n    <TableContextContainer\n      controller={controller}\n      table={node}\n      enableHeaderSticky={enableHeaderSticky}\n    >\n      <CommonTable {...props} />\n    </TableContextContainer>\n  );\n};\n\nconst Table = (props: TableProps) => {\n  const { isMobile } = props;\n  if (isMobile) {\n    return <CommonTable {...props} />;\n  }\n\n  return <PCTable {...props} />;\n};\n\nexport default Table;\n"],"file":"table.js"}