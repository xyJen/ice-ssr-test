{"version":3,"sources":["../../../../../src/__tests__/bi/utils/setTableColsWidth.test.ts"],"names":["describe","cases","description","colsWidth","originColsWidth","resultColsWidth","MIN_COL_WIDTH","forEach","it","value","Value","create","document","Document","nodes","controller","Controller","table","actualColsWidth","data","expect","toEqual"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AASAA,QAAQ,CAAC,+BAAD,EAAkC,MAAM;AAC9C,QAAMC,KAAiB,GAAG,CAAC;AACzBC,IAAAA,WAAW,EAAE,wCADY;AAEzBC,IAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,GAAN,CAFc;AAGzBC,IAAAA,eAAe,EAAE,CAAC,GAAD,EAAM,GAAN,CAHQ;AAIzBC,IAAAA,eAAe,EAAE,CAAC,GAAD,EAAM,GAAN;AAJQ,GAAD,EAKvB;AACDH,IAAAA,WAAW,EAAE,+CADZ;AAEDC,IAAAA,SAAS,EAAE,IAFV;AAGDC,IAAAA,eAAe,EAAE,CAAC,GAAD,EAAM,GAAN,CAHhB;AAIDC,IAAAA,eAAe,EAAE,CAAC,GAAD,EAAM,GAAN;AAJhB,GALuB,EAUvB;AACDH,IAAAA,WAAW,EAAE,iDADZ;AAEDC,IAAAA,SAAS,EAAE,IAFV;AAGDC,IAAAA,eAAe,EAAE,IAHhB;AAIDC,IAAAA,eAAe,EAAE,CAACC,wBAAD,EAAgBA,wBAAhB;AAJhB,GAVuB,EAevB;AACDJ,IAAAA,WAAW,EAAE,oDADZ;AAEDC,IAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,GAAP,CAFV;AAGDC,IAAAA,eAAe,EAAE,IAHhB;AAIDC,IAAAA,eAAe,EAAE,CAACC,wBAAD,EAAgB,GAAhB;AAJhB,GAfuB,EAoBvB;AACDJ,IAAAA,WAAW,EAAE,4DADZ;AAEDC,IAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,GAAP,CAFV;AAGDC,IAAAA,eAAe,EAAE,CAAC,IAAD,EAAO,GAAP,CAHhB;AAIDC,IAAAA,eAAe,EAAE,CAACC,wBAAD,EAAgB,GAAhB;AAJhB,GApBuB,CAA1B;AA2BAL,EAAAA,KAAK,CAACM,OAAN,CAAc,CAAC;AAAEL,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,eAA1B;AAA2CC,IAAAA;AAA3C,GAAD,KAAkE;AAC9EG,IAAAA,EAAE,CAACN,WAAD,EAAc,MAAM;AACpB,YAAMO,KAAK,GAAGC,mBAAMC,MAAN,CAAa;AACzBC,QAAAA,QAAQ,EAAEC,sBAASF,MAAT,CAAgB;AACxBG,UAAAA,KAAK,EAAE,CAAC,kCAAoB;AAC1BX,YAAAA,SAAS,EAAEC;AADe,WAApB,CAAD;AADiB,SAAhB;AADe,OAAb,CAAd;;AAOA,YAAMW,UAAU,GAAGC,wBAAWL,MAAX,CAAkB;AACnCF,QAAAA;AADmC,OAAlB,CAAnB;;AAGA,YAAMQ,KAAK,GAAG,qCAAuBF,UAAvB,CAAd;AACA,sCAAkBA,UAAlB,EAA8BE,KAA9B,EAAqCd,SAArC;AACA,YAAM;AAAEA,QAAAA,SAAS,EAAEe;AAAb,UAAiC,qCAAuBH,UAAvB,EAAmCI,IAA1E;AACAC,MAAAA,MAAM,CAACF,eAAD,CAAN,CAAwBG,OAAxB,CAAgChB,eAAhC;AACD,KAfC,CAAF;AAgBD,GAjBD;AAkBD,CA9CO,CAAR","sourcesContent":["import { Controller, Value, Document } from '@ali/4ever-cangjie';\nimport { createTableInstance, getTableFromController } from '../helpers';\nimport setTableColsWidth from '../../../bi/utils/setTableColsWidth';\nimport { MIN_COL_WIDTH } from '../../../utils/constants';\n\ninterface CaseType {\n  description: string;\n  originColsWidth: number[];\n  colsWidth: any;\n  resultColsWidth: number[];\n}\n\ndescribe('table/utils/setTableColsWidth', () => {\n  const cases: CaseType[] = [{\n    description: 'valid originColsWidth, valid colsWidth',\n    colsWidth: [200, 100],\n    originColsWidth: [100, 100],\n    resultColsWidth: [200, 100],\n  }, {\n    description: 'valid originColsWidth, colsWidth is not Array',\n    colsWidth: null,\n    originColsWidth: [100, 100],\n    resultColsWidth: [100, 100],\n  }, {\n    description: 'invalid originColsWidth, colsWidth is not Array',\n    colsWidth: null,\n    originColsWidth: null,\n    resultColsWidth: [MIN_COL_WIDTH, MIN_COL_WIDTH],\n  }, {\n    description: 'invalid originColsWidth, invalid colsWidth element',\n    colsWidth: [null, 100],\n    originColsWidth: null,\n    resultColsWidth: [MIN_COL_WIDTH, 100],\n  }, {\n    description: 'invalid originColsWidth element, invalid colsWidth element',\n    colsWidth: [null, 100],\n    originColsWidth: [null, 100],\n    resultColsWidth: [MIN_COL_WIDTH, 100],\n  }];\n\n  cases.forEach(({ description, colsWidth, originColsWidth, resultColsWidth }) => {\n    it(description, () => {\n      const value = Value.create({\n        document: Document.create({\n          nodes: [createTableInstance({\n            colsWidth: originColsWidth,\n          })],\n        }),\n      });\n      const controller = Controller.create({\n        value,\n      });\n      const table = getTableFromController(controller);\n      setTableColsWidth(controller, table, colsWidth);\n      const { colsWidth: actualColsWidth } = getTableFromController(controller).data;\n      expect(actualColsWidth).toEqual(resultColsWidth);\n    })\n  });\n});\n\n"],"file":"setTableColsWidth.test.js"}