"use strict";

var _utils = require("../../../bi/utils");

describe('table/utils/resizeTable', () => {
  [{
    description: '调大表格宽度时，列宽等比放大',
    originalColsWidth: [40, 30, 30],
    delta: 100,
    limitColsWidth: [40, 30, 40],
    expectColsWidth: [80, 60, 60]
  }, {
    description: '调小表格宽度且没有超过最小宽度时，列宽等比缩小',
    originalColsWidth: [40, 30, 30],
    delta: -50,
    limitColsWidth: [20, 10, 10],
    expectColsWidth: [20, 15, 15]
  }, {
    description: '调小表格宽度且有一列超过最小宽度时，其他列列宽等比缩小',
    originalColsWidth: [40, 30, 30],
    delta: -50,
    limitColsWidth: [30, 10, 10],
    expectColsWidth: [30, 10, 10]
  }, {
    description: '调小表格宽度且有多列超过最小宽度时，其他列列宽等比缩小',
    originalColsWidth: [40, 40, 40],
    delta: -30,
    limitColsWidth: [32, 32, 20],
    expectColsWidth: [32, 32, 26]
  }].forEach(({
    description,
    originalColsWidth,
    delta,
    limitColsWidth,
    expectColsWidth
  }) => {
    it(description, async () => {
      const totalWidth = originalColsWidth.reduce((acc, w) => acc + w, 0) + delta;
      const actualColsWidth = (0, _utils.resizeTable)(originalColsWidth, totalWidth, limitColsWidth);
      expect(actualColsWidth).toEqual(expectColsWidth);
    });
  });
});
//# sourceMappingURL=resizeTable.test.js.map