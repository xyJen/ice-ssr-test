{"version":3,"sources":["../../../../../src/__tests__/bi/utils/getTableCellWidth.test.ts"],"names":["table","colsWidth","describe","it","cell","nodes","expect","toEqual","mergedTable","toBe"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,KAAK,GAAG,kCAAoB;AAChCC,EAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,EAAN;AADqB,CAApB,CAAd;AAIAC,QAAQ,CAAC,kCAAD,EAAqC,MAAM;AACjDC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACxB,UAAMC,IAAI,GAAGJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeA,KAAf,CAAqB,CAArB,CAAb;AACAC,IAAAA,MAAM,CAAC,gCAAkBF,IAAlB,EAAwBJ,KAAxB,CAAD,CAAN,CAAuCO,OAAvC,CAA+C,EAA/C;AACD,GAHC,CAAF;AAKAJ,EAAAA,EAAE,CAAC,aAAD,EAAgB,MAAM;AACtB,UAAMK,WAAW,GAAG,gCAApB;AACA,UAAMJ,IAAI,GAAGI,WAAW,CAACH,KAAZ,CAAkB,CAAlB,EAAqBA,KAArB,CAA2B,CAA3B,CAAb;AACAC,IAAAA,MAAM,CAAC,gCAAkBF,IAAlB,EAAwBI,WAAxB,CAAD,CAAN,CAA6CD,OAA7C,CAAqD,GAArD;AACD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM;AACrC,UAAMC,IAAI,GAAG,kCAAb;AACAE,IAAAA,MAAM,CAAC,gCAAkBF,IAAlB,EAAwBJ,KAAxB,CAAD,CAAN,CAAuCS,IAAvC,CAA4C,IAA5C;AACD,GAHC,CAAF;AAID,CAhBO,CAAR","sourcesContent":["import { createEmptyTableCell } from '../../../bi/utils';\nimport { createMergeTable, createTableInstance } from '../helpers';\nimport getTableCellWidth from '../../../utils/utils/getTableCellWidth'\n\nconst table = createTableInstance({\n  colsWidth: [100, 50],\n});\n\ndescribe('bi/table/utils/getTableCellWidth', () => {\n  it('unmerged cell', () => {\n    const cell = table.nodes[1].nodes[1];\n    expect(getTableCellWidth(cell, table)).toEqual(50);\n  });\n\n  it('merged cell', () => {\n    const mergedTable = createMergeTable();\n    const cell = mergedTable.nodes[1].nodes[1];\n    expect(getTableCellWidth(cell, mergedTable)).toEqual(200);\n  });\n\n  it('cell is not child of table', () => {\n    const cell = createEmptyTableCell();\n    expect(getTableCellWidth(cell, table)).toBe(null);\n  });\n});\n"],"file":"getTableCellWidth.test.js"}