{"version":3,"sources":["../../../../src/__tests__/bi/helpers.ts"],"names":["createTableCell","data","text","TableCell","create","colSpan","rowSpan","nodes","split","map","createEmptyParagraph","createTableInstance","table","colsWidth","isAutofit","rows","row","TableRow","cell","colsLength","reduce","acc","Math","max","length","tableData","undefined","Array","fill","tblW","w","type","Table","createMergeCell","createHiddenCell","hidden","createMergeTable","colLength","createEmptyTableCell","getTableFromController","controller","value","document","findDescendant","el"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AASA,SAASA,eAAT,CAAyB;AACvBC,EAAAA,IAAI,GAAG,EADgB;AAEvBC,EAAAA,IAAI,GAAG;AAFgB,CAAzB,EAGG;AACD,SAAOC,mBAAUC,MAAV,CAAiB;AACtBH,IAAAA,IAAI,EAAE;AAAEI,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,OAAO,EAAE,CAAvB;AAA0B,UAAIL,IAAI,IAAI,EAAZ;AAA1B,KADgB;AAEtBM,IAAAA,KAAK,EAAEL,IAAI,CAACM,KAAL,CAAW,IAAX,EAAiBC,GAAjB,CAAqBC,2BAArB;AAFe,GAAjB,CAAP;AAID;;AAEM,SAASC,mBAAT,CAA6B;AAClCC,EAAAA,KAAK,GAAG,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAD0B;AAElCC,EAAAA,SAFkC;AAGlCC,EAAAA;AAHkC,IAQhC,EARG,EAQQ;AACb,QAAMC,IAAI,GAAGH,KAAK,CAACH,GAAN,CAAWO,GAAD,IAAS;AAC9B,WAAOC,kBAASb,MAAT,CAAgB;AACrBG,MAAAA,KAAK,EAAES,GAAG,CAACP,GAAJ,CAAQS,IAAI,IAAI;AACrB,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,UAAAA,IAAI,GAAG;AACLhB,YAAAA,IAAI,EAAEgB,IAAI,IAAI;AADT,WAAP;AAGD;;AACD,eAAOlB,eAAe,CAACkB,IAAD,CAAtB;AACD,OAPM;AADc,KAAhB,CAAP;AAUD,GAXY,CAAb;AAYA,QAAMC,UAAU,GAAGP,KAAK,CAACQ,MAAN,CACjB,CAACC,GAAD,EAAML,GAAN,KAAcM,IAAI,CAACC,GAAL,CAASF,GAAT,EAAcL,GAAG,CAACQ,MAAlB,CADG,EAEjB,CAFiB,CAAnB;AAKA,QAAMC,SAAwB,GAAG;AAC/BZ,IAAAA,SAAS,EAAEA,SAAS,KAAKa,SAAd,GAA0BC,KAAK,CAACR,UAAD,CAAL,CAAkBS,IAAlB,CAAuB,GAAvB,CAA1B,GAAwDf;AADpC,GAAjC;;AAGA,MAAIC,SAAJ,EAAe;AACbW,IAAAA,SAAS,CAACI,IAAV,GAAiB;AACfC,MAAAA,CAAC,EAAE,GADY;AAEfC,MAAAA,IAAI,EAAE;AAFS,KAAjB;AAID;;AAED,SAAOC,gBAAM5B,MAAN,CAAa;AAClBH,IAAAA,IAAI,EAAEwB,SADY;AAElBlB,IAAAA,KAAK,EAAEQ;AAFW,GAAb,CAAP;AAID;;AAED,SAASkB,eAAT,CAAyB3B,OAAO,GAAG,CAAnC,EAAsCD,OAAO,GAAG,CAAhD,EAAmD;AACjD,SAAOF,mBAAUC,MAAV,CAAiB;AACtBH,IAAAA,IAAI,EAAE;AAAEI,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KADgB;AAEtBC,IAAAA,KAAK,EAAE,CAAC,kCAAD;AAFe,GAAjB,CAAP;AAID;;AAED,SAAS2B,gBAAT,GAA4B;AAC1B,SAAO,iCAAqB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAArB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,SAASC,gBAAT,GAA4B;AAClC,QAAMC,SAAS,GAAG,CAAlB;AACA,SAAOL,gBAAM5B,MAAN,CAAa;AAClBH,IAAAA,IAAI,EAAE;AACJY,MAAAA,SAAS,EAAEc,KAAK,CAACU,SAAD,CAAL,CAAiBT,IAAjB,CAAsB,GAAtB;AADP,KADY;AAIlBrB,IAAAA,KAAK,EAAE,CACLU,kBAASb,MAAT,CAAgB;AACdG,MAAAA,KAAK,EAAEoB,KAAK,CAACU,SAAD,CAAL,CAAiBT,IAAjB,CAAsB,EAAtB,EAA0BnB,GAA1B,CAA8B6B,2BAA9B;AADO,KAAhB,CADK,EAILrB,kBAASb,MAAT,CAAgB;AACdG,MAAAA,KAAK,EAAE,CACL,kCADK,EAEL0B,eAAe,CAAC,CAAD,EAAI,CAAJ,CAFV,EAGLC,gBAAgB,EAHX,EAIL,kCAJK;AADO,KAAhB,CAJK,EAYLjB,kBAASb,MAAT,CAAgB;AACdG,MAAAA,KAAK,EAAE,CACL,kCADK,EAEL2B,gBAAgB,EAFX,EAGLA,gBAAgB,EAHX,EAIL,kCAJK;AADO,KAAhB,CAZK,EAoBLjB,kBAASb,MAAT,CAAgB;AACdG,MAAAA,KAAK,EAAEoB,KAAK,CAACU,SAAD,CAAL,CAAiBT,IAAjB,CAAsB,EAAtB,EAA0BnB,GAA1B,CAA8B6B,2BAA9B;AADO,KAAhB,CApBK;AAJW,GAAb,CAAP;AA6BD;;AAEM,SAASC,sBAAT,CAAgCC,UAAhC,EAAwD;AAC7D,SAAOA,UAAU,CAACC,KAAX,CAAiBC,QAAjB,CAA0BC,cAA1B,CAAyCC,EAAE,IAAIA,EAAE,CAACb,IAAH,KAAY,OAA3D,CAAP;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { createEmptyParagraph, createEmptyTableCell } from '../../bi/utils';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport TableRow from '../../mo/models/tableRow';\n\ninterface CellParams {\n  data?: TableCell['data'];\n  text?: string;\n}\n\ntype TableParams = (String | CellParams)[][] ;\n\nfunction createTableCell({\n  data = {},\n  text = '',\n}) {\n  return TableCell.create({\n    data: { colSpan: 1, rowSpan: 1, ...(data || {}) },\n    nodes: text.split('\\n').map(createEmptyParagraph),\n  });\n}\n\nexport function createTableInstance({\n  table = [['A', 'B'], ['C', 'D']],\n  colsWidth,\n  isAutofit,\n}: {\n  table?: TableParams;\n  colsWidth?: number[];\n  isAutofit?: boolean;\n} = {}): Table {\n  const rows = table.map((row) => {\n    return TableRow.create({\n      nodes: row.map(cell => {\n        if (typeof cell === 'string') {\n          cell = {\n            text: cell || '',\n          };\n        }\n        return createTableCell(cell as CellParams);\n      }),\n    });\n  });\n  const colsLength = table.reduce(\n    (acc, row) => Math.max(acc, row.length),\n    0,\n  );\n\n  const tableData: Table['data'] = {\n    colsWidth: colsWidth === undefined ? Array(colsLength).fill(100) : colsWidth,\n  };\n  if (isAutofit) {\n    tableData.tblW = {\n      w: 100,\n      type: 'pct',\n    };\n  }\n\n  return Table.create({\n    data: tableData,\n    nodes: rows,\n  });\n}\n\nfunction createMergeCell(rowSpan = 2, colSpan = 2) {\n  return TableCell.create({\n    data: { colSpan, rowSpan },\n    nodes: [createEmptyParagraph()],\n  });\n}\n\nfunction createHiddenCell() {\n  return createEmptyTableCell({ hidden: true });\n}\n\n/**\n * 创建带合并单元格的 table(4x4)，结构如下\n * [\n *   ['', '', '', ''],\n *   ['', 'mergeCell', 'hidden', ''],\n *   ['', 'hidden', 'hidden', ''],\n *   ['', '', '', ''],\n * ]\n */\n export function createMergeTable() {\n  const colLength = 4;\n  return Table.create({\n    data: {\n      colsWidth: Array(colLength).fill(100),\n    },\n    nodes: [\n      TableRow.create({\n        nodes: Array(colLength).fill('').map(createEmptyTableCell),\n      }),\n      TableRow.create({\n        nodes: [\n          createEmptyTableCell(),\n          createMergeCell(2, 2),\n          createHiddenCell(),\n          createEmptyTableCell(),\n        ],\n      }),\n      TableRow.create({\n        nodes: [\n          createEmptyTableCell(),\n          createHiddenCell(),\n          createHiddenCell(),\n          createEmptyTableCell(),\n        ],\n      }),\n      TableRow.create({\n        nodes: Array(colLength).fill('').map(createEmptyTableCell),\n      }),\n    ],\n  });\n}\n\nexport function getTableFromController(controller: Controller) {\n  return controller.value.document.findDescendant(el => el.type === 'table') as Table;\n}"],"file":"helpers.js"}