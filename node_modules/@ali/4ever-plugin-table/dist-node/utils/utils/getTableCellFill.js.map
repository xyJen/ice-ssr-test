{"version":3,"sources":["../../../../src/utils/utils/getTableCellFill.ts"],"names":["getTabelCellFill","cell","table","docStyle","undefined","cellFill","data","fill","shd","styleId","tblLook","tableStyle","position","key","rowIndex","colIndex","tblStylePr","Array","isArray","i","length","stylePr","Table","isRowHeader","type","firstRow","tcPr","isColumnHeader","firstColumn"],"mappings":";;;;;;;;;AACA;;AAEA;;AAiBe,SAASA,gBAAT,CACbC,IADa,EAEbC,KAFa,EAGbC,QAHa,EAIb;AACA,MAAI,CAACD,KAAL,EAAY,OAAOE,SAAP;AAEZ,QAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAL,EAAWC,IAAX,IAAmBN,IAAI,CAACK,IAAL,EAAWE,GAAX,EAAgBD,IAApD;AACA,MAAIF,QAAJ,EAAc,OAAOA,QAAP;AAEd,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBR,KAAK,CAACI,IAAnC;AAEA,MAAI,CAACH,QAAD,IAAa,CAACM,OAAlB,EAA2B,OAAOL,SAAP;AAE3B,QAAMO,UAAU,GAAGR,QAAQ,CAACM,OAAD,CAA3B;AAEA,MAAI,CAACE,UAAL,EAAiB,OAAOP,SAAP;AAEjB,QAAMQ,QAAQ,GAAG,gCAAkBX,IAAI,CAACY,GAAvB,EAA4BX,KAA5B,CAAjB;AAEA,MAAI,CAACU,QAAL,EAAe,OAAOR,SAAP;AAEf,QAAM;AAAEU,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,QAA/B;AACA,MAAIE,QAAQ,KAAK,CAAb,IAAkBC,QAAQ,KAAK,CAAnC,EAAsC,OAAOX,SAAP;AAEtC,QAAMY,UAAU,GAAGL,UAAU,EAAEL,IAAZ,EAAkBU,UAArC;AAEA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,UAAd,CAAL,EAAgC,OAAOZ,SAAP;AAEhC,MAAIG,IAAJ;;AAEA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,UAAME,OAAO,GAAGL,UAAU,CAACG,CAAD,CAA1B;;AACA,QACEL,QAAQ,KAAK,CAAb,IACGQ,gBAAMC,WAAN,CAAkBrB,KAAlB,CADH,IAEGmB,OAAO,CAACG,IAAR,KAAiB,UAFpB,KAGId,OAAO,EAAEe,QAAT,KAAsBrB,SAAtB,IAAmC,CAAC,CAACM,OAAO,EAAEe,QAHlD,CADF,EAKE;AACAlB,MAAAA,IAAI,GAAGc,OAAO,CAACK,IAAR,EAAclB,GAAd,EAAmBD,IAA1B;AACA;AACD;;AACD,QACEQ,QAAQ,KAAK,CAAb,IACGO,gBAAMK,cAAN,CAAqBzB,KAArB,CADH,IAEGmB,OAAO,CAACG,IAAR,KAAiB,UAFpB,KAGId,OAAO,EAAEkB,WAAT,KAAyBxB,SAAzB,IAAsC,CAAC,CAACM,OAAO,EAAEkB,WAHrD,CADF,EAKE;AACArB,MAAAA,IAAI,GAAGc,OAAO,CAACK,IAAR,EAAclB,GAAd,EAAmBD,IAA1B;AACA;AACD;AACF;;AAED,SAAOA,IAAP;AACD","sourcesContent":["import { DocStyle } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport getPositionOfCell from './getPositionOfCell';\n\ninterface TableStyleProperty {\n  type?: 'firstRow' | 'firstCol';\n  tcPr?: {\n    shd?: {\n      fill?: string;\n    };\n  };\n}\n\ninterface TableStyle {\n  data?: {\n    tblStylePr: TableStyleProperty[];\n  };\n}\n\nexport default function getTabelCellFill(\n  cell: TableCell,\n  table: Table | null,\n  docStyle?: DocStyle,\n) {\n  if (!table) return undefined;\n\n  const cellFill = cell.data?.fill || cell.data?.shd?.fill;\n  if (cellFill) return cellFill;\n\n  const { styleId, tblLook } = table.data;\n\n  if (!docStyle || !styleId) return undefined;\n\n  const tableStyle = docStyle[styleId] as TableStyle;\n\n  if (!tableStyle) return undefined;\n\n  const position = getPositionOfCell(cell.key, table);\n\n  if (!position) return undefined;\n\n  const { rowIndex, colIndex } = position;\n  if (rowIndex !== 0 && colIndex !== 0) return undefined;\n\n  const tblStylePr = tableStyle?.data?.tblStylePr;\n\n  if (!Array.isArray(tblStylePr)) return undefined;\n\n  let fill: string | undefined;\n\n  for (let i = 0; i < tblStylePr.length; i++) {\n    const stylePr = tblStylePr[i];\n    if (\n      rowIndex === 0\n      && Table.isRowHeader(table)\n      && stylePr.type === 'firstRow'\n      && (tblLook?.firstRow === undefined || !!tblLook?.firstRow)\n    ) {\n      fill = stylePr.tcPr?.shd?.fill;\n      break;\n    }\n    if (\n      colIndex === 0\n      && Table.isColumnHeader(table)\n      && stylePr.type === 'firstCol'\n      && (tblLook?.firstColumn === undefined || !!tblLook?.firstColumn)\n    ) {\n      fill = stylePr.tcPr?.shd?.fill;\n      break;\n    }\n  }\n\n  return fill;\n}\n"],"file":"getTableCellFill.js"}