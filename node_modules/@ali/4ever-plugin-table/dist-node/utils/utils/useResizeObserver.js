"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fastdom = _interopRequireDefault(require("fastdom"));

var React = _interopRequireWildcard(require("react"));

var _resizeObserverPolyfill = _interopRequireDefault(require("resize-observer-polyfill"));

const useResizeObserver = (target, callback) => {
  const observerRef = React.useRef();
  React.useEffect(() => {
    if (!(target instanceof HTMLElement)) return undefined;
    observerRef.current = new _resizeObserverPolyfill.default(() => {
      _fastdom.default.measure(() => {
        const rect = target.getBoundingClientRect();
        callback(rect);
      });
    }); // @ts-ignore resize-observer-polyfill API 不支持 options，浏览器可用

    observerRef.current.observe(target, {
      box: 'border-box'
    });
    return () => {
      observerRef.current?.unobserve(target);
    };
  }, [target, callback]);
  React.useEffect(() => {
    return () => {
      if (observerRef.current) {
        observerRef.current.disconnect();
      }
    };
  }, []);
};

var _default = useResizeObserver;
exports.default = _default;
//# sourceMappingURL=useResizeObserver.js.map