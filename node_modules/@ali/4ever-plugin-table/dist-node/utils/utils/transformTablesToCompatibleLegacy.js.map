{"version":3,"sources":["../../../../src/utils/utils/transformTablesToCompatibleLegacy.ts"],"names":["transformTablesToCompatibleLegacy","document","fragment","isMobile","autofitTables","filterDescendants","n","Table","isTable","isAutofitWidth","length","pageWidth","DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT","forEach","t","newColsWidth","path","getPath","key","setNode","data","colsWidth","shouldTransfrom"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAOe,SAASA,iCAAT,CACbC,QADa,EAEbC,QAFa,EAGbC,QAAQ,GAAG,KAHE,EAII;AACjB,QAAMC,aAAa,GAAGF,QAAQ,CAACG,iBAAT,CACnBC,CAAD,IAAOC,gBAAMC,OAAN,CAAcF,CAAd,KAAoBC,gBAAME,cAAN,CAAqBH,CAArB,CADP,CAAtB;;AAGA,MAAIF,aAAa,CAACM,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,QAAIC,SAAS,GAAGC,0CAAhB;;AACA,QAAI,CAACT,QAAL,EAAe;AACbQ,MAAAA,SAAS,GAAG,8BAAcV,QAAd,KAA2BW,0CAAvC;AACD;;AAEDR,IAAAA,aAAa,CAACS,OAAd,CAAuBC,CAAD,IAAO;AAC3B,YAAMC,YAAY,GAAG,mDAA0BD,CAA1B,EAA6BH,SAA7B,CAArB;AACA,YAAMK,IAAI,GAAGd,QAAQ,CAACe,OAAT,CAAiBH,CAAC,CAACI,GAAnB,CAAb;;AACA,UAAIF,IAAJ,EAAU;AACRd,QAAAA,QAAQ,GAAGA,QAAQ,CAACiB,OAAT,CAAiBH,IAAjB,EAAuB;AAChCI,UAAAA,IAAI,EAAE,EACJ,GAAGN,CAAC,CAACM,IADD;AAEJC,YAAAA,SAAS,EAAEN;AAFP;AAD0B,SAAvB,CAAX;AAMD;AACF,KAXD;AAYA,WAAO;AACLO,MAAAA,eAAe,EAAE,IADZ;AAELpB,MAAAA;AAFK,KAAP;AAID;;AACD,SAAO;AACLoB,IAAAA,eAAe,EAAE,KADZ;AAELpB,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { Document, transferUtils } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport { getInnerWidth } from '@ali/4ever-utils';\nimport { DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT } from '../constants';\nimport { convertFromPercentToPixel } from './colsWidthConverter';\n\ninterface TransformResult {\n  shouldTransfrom: boolean;\n  fragment: Document;\n}\n\nexport default function transformTablesToCompatibleLegacy(\n  document: Document,\n  fragment: Document,\n  isMobile = false,\n): TransformResult {\n  const autofitTables = fragment.filterDescendants(\n    (n) => Table.isTable(n) && Table.isAutofitWidth(n),\n  ) as Table[];\n  if (autofitTables.length > 0) {\n    let pageWidth = DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT;\n    if (!isMobile) {\n      pageWidth = getInnerWidth(document) || DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT;\n    }\n\n    autofitTables.forEach((t) => {\n      const newColsWidth = convertFromPercentToPixel(t, pageWidth);\n      const path = fragment.getPath(t.key);\n      if (path) {\n        fragment = fragment.setNode(path, {\n          data: {\n            ...t.data,\n            colsWidth: newColsWidth,\n          },\n        });\n      }\n    });\n    return {\n      shouldTransfrom: true,\n      fragment,\n    };\n  }\n  return {\n    shouldTransfrom: false,\n    fragment,\n  };\n}\n"],"file":"transformTablesToCompatibleLegacy.js"}