{"version":3,"sources":["../../../../src/utils/utils/colsWidthConverter.ts"],"names":["convertFromPixelToPercent","colsWidth","containerWidth","totalPercent","Array","isArray","pctColsWidth","reduce","acc","w","index","length","push","DEFAULT_PCT_WIDTH","pct","convertFromPercentToPixel","table","data","totalW","cw","pixelColsWidth","i","colWidth","Math","round"],"mappings":";;;;;;;;;;AACA;;AACA;;AAEO,SAASA,yBAAT,CACLC,SADK,EAELC,cAFK,EAGLC,YAHK,EAIL;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,SAAd,CAAL,EAA+B,OAAO,EAAP;AAE/B,QAAMK,YAAsB,GAAG,EAA/B;AACAL,EAAAA,SAAS,CAACM,MAAV,CAAiB,CAACC,GAAD,EAAMC,CAAN,EAASC,KAAT,KAAmB;AAClC;AACA,QAAIA,KAAK,KAAKT,SAAS,CAACU,MAAV,GAAmB,CAAjC,EAAoC;AAClC,aAAOL,YAAY,CAACM,IAAb,CAAkB,CAACT,YAAY,IAAIU,4BAAjB,IAAsCL,GAAxD,CAAP;AACD;;AACD,UAAMM,GAAG,GAAG,6BAAeL,CAAC,GAAGP,cAAJ,GAAqBW,4BAApC,CAAZ;AACAP,IAAAA,YAAY,CAACM,IAAb,CAAkBE,GAAlB;AACA,WAAON,GAAG,GAAGM,GAAb;AACD,GARD,EAQG,CARH;AAUA,SAAOR,YAAP;AACD;;AAEM,SAASS,yBAAT,CACLC,KADK,EAELd,cAFK,EAGL;AACA,QAAM;AAAED,IAAAA;AAAF,MAAgBe,KAAK,CAACC,IAA5B;AAEA,MAAI,CAACb,KAAK,CAACC,OAAN,CAAcJ,SAAd,CAAL,EAA+B,OAAO,EAAP;AAE/B,QAAMiB,MAAM,GAAGjB,SAAS,CAACM,MAAV,CAAiB,CAACC,GAAD,EAAMW,EAAN,KAAcX,GAAG,GAAGW,EAArC,EAA0C,CAA1C,CAAf;AAEA,QAAMC,cAAwB,GAAG,EAAjC;AACAnB,EAAAA,SAAS,CAACM,MAAV,CAAiB,CAACC,GAAD,EAAMW,EAAN,EAAUE,CAAV,KAAgB;AAC/B,QAAIA,CAAC,KAAKpB,SAAS,CAACU,MAAV,GAAmB,CAA7B,EAAgC;AAC9B,aAAOS,cAAc,CAACR,IAAf,CAAoBV,cAAc,GAAGM,GAArC,CAAP;AACD;;AACD,UAAMc,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWtB,cAAc,IAAIiB,EAAE,GAAGD,MAAT,CAAzB,CAAjB;AACAE,IAAAA,cAAc,CAACR,IAAf,CAAoBU,QAApB;AACA,WAAOd,GAAG,GAAGc,QAAb;AACD,GAPD,EAOG,CAPH;AASA,SAAOF,cAAP;AACD","sourcesContent":["import Table from '../../mo/models';\nimport { DEFAULT_PCT_WIDTH } from '../constants';\nimport formatColWidth from './formatColWidth';\n\nexport function convertFromPixelToPercent(\n  colsWidth: number[],\n  containerWidth: number,\n  totalPercent?: number,\n) {\n  if (!Array.isArray(colsWidth)) return [];\n\n  const pctColsWidth: number[] = [];\n  colsWidth.reduce((acc, w, index) => {\n    // 使 colsWidth 总和为 100\n    if (index === colsWidth.length - 1) {\n      return pctColsWidth.push((totalPercent || DEFAULT_PCT_WIDTH) - acc);\n    }\n    const pct = formatColWidth(w / containerWidth * DEFAULT_PCT_WIDTH);\n    pctColsWidth.push(pct);\n    return acc + pct;\n  }, 0);\n\n  return pctColsWidth;\n}\n\nexport function convertFromPercentToPixel(\n  table: Table,\n  containerWidth: number,\n) {\n  const { colsWidth } = table.data;\n\n  if (!Array.isArray(colsWidth)) return [];\n\n  const totalW = colsWidth.reduce((acc, cw) => (acc + cw), 0);\n\n  const pixelColsWidth: number[] = [];\n  colsWidth.reduce((acc, cw, i) => {\n    if (i === colsWidth.length - 1) {\n      return pixelColsWidth.push(containerWidth - acc);\n    }\n    const colWidth = Math.round(containerWidth * (cw / totalW));\n    pixelColsWidth.push(colWidth);\n    return acc + colWidth;\n  }, 0);\n\n  return pixelColsWidth;\n}\n"],"file":"colsWidthConverter.js"}