{"version":3,"sources":["../../../../src/bi/commands/resizeTableWidth.ts"],"names":["resizeTableWidth","controller","table","delta","maxWidth","newTable","Table","isAutofitWidth","containerWidth","pixelColsWidth","tbl","value","document","getNode","key","outputColsWidth"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGe,SAASA,gBAAT,CACbC,UADa,EAEbC,KAFa,EAGbC,KAHa,EAIbC,QAJa,EAKb;AACA,MAAIC,QAAQ,GAAGH,KAAf;;AACA,MAAII,gBAAMC,cAAN,CAAqBL,KAArB,CAAJ,EAAiC;AAC/B,UAAMM,cAAc,GAAGJ,QAAQ,IAAI,0CAA4BH,UAA5B,EAAwCC,KAAxC,CAAnC;AACA,QAAI,CAACM,cAAL,EAAqB,OAAOP,UAAP;AAErB,UAAMQ,cAAc,GAAG,mDAA0BP,KAA1B,EAAiCM,cAAjC,CAAvB;AACA,qCAAmBP,UAAnB,EAA+BC,KAA/B,EAAsC,KAAtC;AACA,UAAMQ,GAAG,GAAGT,UAAU,CAACU,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCX,KAAK,CAACY,GAAxC,CAAZ;AACA,oCAAkBb,UAAlB,EAA8BS,GAA9B,EAAmCD,cAAnC;AACAJ,IAAAA,QAAQ,GAAGJ,UAAU,CAACU,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCX,KAAK,CAACY,GAAxC,CAAX;AACD;;AAED,QAAMC,eAAe,GAAG,kCAAoBd,UAApB,EAAgCI,QAAhC,EAA0CF,KAA1C,EAAiDC,QAAjD,CAAxB;AAEA,SAAO,gCAAkBH,UAAlB,EAA8BI,QAA9B,EAAwCU,eAAxC,CAAP;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport setTableColsWidth from '../utils/setTableColsWidth';\nimport calcResizeColsWidth from '../utils/calcResizeColsWidth';\nimport enableAutofitWidth from '../../utils/commands/enableAutofitWidth';\nimport { convertFromPercentToPixel } from '../../utils/utils/colsWidthConverter';\nimport getTableMaxWidthByContainer from '../../utils/utils/getTableMaxWidthByContainer';\n\n\nexport default function resizeTableWidth(\n  controller: Controller,\n  table: Table,\n  delta: number,\n  maxWidth?: number,\n) {\n  let newTable = table;\n  if (Table.isAutofitWidth(table)) {\n    const containerWidth = maxWidth || getTableMaxWidthByContainer(controller, table);\n    if (!containerWidth) return controller;\n\n    const pixelColsWidth = convertFromPercentToPixel(table, containerWidth);\n    enableAutofitWidth(controller, table, false);\n    const tbl = controller.value.document.getNode(table.key)! as Table;\n    setTableColsWidth(controller, tbl, pixelColsWidth);\n    newTable = controller.value.document.getNode(table.key)! as Table;\n  }\n\n  const outputColsWidth = calcResizeColsWidth(controller, newTable, delta, maxWidth);\n\n  return setTableColsWidth(controller, newTable, outputColsWidth);\n}\n"],"file":"resizeTableWidth.js"}