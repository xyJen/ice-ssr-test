{"version":3,"sources":["../../../../src/bi/commands/insertTable.ts"],"names":["insertTable","controller","payload","rowSize","colSize","containerWidth","defaultAutofit","defaultHeader","setTableHeaderStyle","tableData","table","data","point","TextPoint","create","key","getFirstNode","offset","newSelection","Selection","anchor","focus","run","basicActions","createInsertBlockWithoutExtraBlankAction","node","command","Commands","select","newTable","value","document","getNode"],"mappings":";;;;;;;;;AAAA;;AAOA;;AACA;;AACA;;AACA;;AAWe,SAASA,WAAT,CAAqBC,UAArB,EAA6CC,OAA7C,EAA+D;AAC5E,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,cAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA;AANI,MAOFN,OAPJ;AASA,QAAMO,SAAS,GAAG,8BAAgBR,UAAhB,EAA4B;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,cAAX;AAA2BC,IAAAA;AAA3B,GAA5B,CAAlB;AACA,QAAMI,KAAK,GAAG,0BAAY;AACxBP,IAAAA,OADwB;AAExBC,IAAAA,OAFwB;AAGxBO,IAAAA,IAAI,EAAEF;AAHkB,GAAZ,CAAd;;AAKA,QAAMG,KAAK,GAAGC,uBAAUC,MAAV,CAAiB;AAAEC,IAAAA,GAAG,EAAEL,KAAK,CAACM,YAAN,GAAqBD,GAA5B;AAAiCE,IAAAA,MAAM,EAAE;AAAzC,GAAjB,CAAd;;AACA,QAAMC,YAAY,GAAGC,uBAAUL,MAAV,CAAiB;AAAEM,IAAAA,MAAM,EAAER,KAAV;AAAiBS,IAAAA,KAAK,EAAET;AAAxB,GAAjB,CAArB;;AAEA,MAAIL,aAAJ,EAAmB;AACjB;AACAC,IAAAA,mBAAmB;AACpB;;AAEDP,EAAAA,UAAU,CAACqB,GAAX,CAAe,UAAf,EAA2BC,2BAAaC,wCAAb,CAAsD;AAAEC,IAAAA,IAAI,EAAEf;AAAR,GAAtD,CAA3B;AAEAT,EAAAA,UAAU,CACPyB,OADH,CACWC,sBAASC,MADpB,EAC4BV,YAD5B,EA1B4E,CA2BjC;;AAE3C,MAAIX,aAAJ,EAAmB;AACjB,UAAMsB,QAAQ,GAAG5B,UAAU,CAAC6B,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCtB,KAAK,CAACK,GAAxC,CAAjB;AACAd,IAAAA,UAAU,CAACqB,GAAX,CAAe,UAAf,EAA2B,gCAAkBO,QAAlB,CAA3B;AACD;;AAED,SAAO5B,UAAP;AACD","sourcesContent":["import {\n  Controller,\n  Commands,\n  TextPoint,\n  Selection,\n} from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport createTable from '../utils/createTable';\nimport createTableData from '../utils/createTableData';\nimport { biActions as basicActions } from '@ali/4ever-plugin-basic';\nimport { setTableRowHeader } from '../actions';\n\ninterface Payload {\n  rowSize: number;\n  colSize: number;\n  containerWidth?: number;\n  defaultAutofit?: boolean;\n  defaultHeader?: boolean;\n  setTableHeaderStyle?: () => void;\n}\n\nexport default function insertTable(controller: Controller, payload: Payload) {\n  const {\n    rowSize,\n    colSize,\n    containerWidth,\n    defaultAutofit,\n    defaultHeader,\n    setTableHeaderStyle,\n  } = payload;\n\n  const tableData = createTableData(controller, { colSize, containerWidth, defaultAutofit });\n  const table = createTable({\n    rowSize,\n    colSize,\n    data: tableData,\n  });\n  const point = TextPoint.create({ key: table.getFirstNode().key, offset: 0 });\n  const newSelection = Selection.create({ anchor: point, focus: point });\n\n  if (defaultHeader) {\n    // NOTE: 需要先执行 setTableHeaderStyle\n    setTableHeaderStyle?.();\n  }\n\n  controller.run('onAction', basicActions.createInsertBlockWithoutExtraBlankAction({ node: table }));\n\n  controller\n    .command(Commands.select, newSelection); // 自动定位到第一个单元格\n\n  if (defaultHeader) {\n    const newTable = controller.value.document.getNode(table.key) as Table;\n    controller.run('onAction', setTableRowHeader(newTable));\n  }\n\n  return controller;\n}\n"],"file":"insertTable.js"}