{"version":3,"sources":["../../../../src/bi/commands/selectTableSelection.ts"],"names":["selectTableSelection","controller","table","tableSelection","shouldAdjust","newTableSelection","nodes","length","command","deleteTable","startRowIndex","startColIndex","targetRow","Commands","replaceNodeByKey","key","Block","create","cell","rangeSelection","query","type","select"],"mappings":";;;;;;;;;AAAA;;AAOA;;AAEA;;AACA;;AACA;;AAEe,SAASA,oBAAT,CACbC,UADa,EAEbC,KAFa,EAGbC,cAHa,EAIbC,YAAY,GAAG,IAJF,EAKb;AACA,MAAIC,iBAAyC,GAAG,IAAhD;;AACA,MAAIF,cAAJ,EAAoB;AAClBE,IAAAA,iBAAiB,GAAGD,YAAY,GAAG,8BAAgBF,KAAhB,EAAuBC,cAAvB,CAAH,GAA4CA,cAA5E;AACD;;AACD,MAAI,CAACE,iBAAL,EAAwB;AACtB;AACA,WAAOJ,UAAP;AACD,GARD,CASA;;;AACA,MAAIC,KAAK,CAACI,KAAN,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B,OAAON,UAAU,CAACO,OAAX,CAAmBC,oBAAnB,EAAgCP,KAAhC,CAAP;AAC9B,QAAM;AAAEQ,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAmCN,iBAAzC;AACA,QAAMO,SAAS,GAAGV,KAAK,CAACI,KAAN,CAAYI,aAAZ,CAAlB,CAZA,CAaA;;AACA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAOX,UAAP;AACD;;AACD,MAAI,CAACW,SAAS,CAACN,KAAf,EAAsB;AACpB,WAAOL,UAAU,CAACO,OAAX,CAAmBK,sBAASC,gBAA5B,EAA8CF,SAAS,CAACG,GAAxD,EAA6DC,mBAAMC,MAAN,CAAa,WAAb,CAA7D,CAAP;AACD;;AACD,QAAMC,IAAI,GAAG,iCAAmBhB,KAAnB,EAA0BQ,aAA1B,EAAyCC,aAAzC,CAAb;;AACA,MAAI,CAACO,IAAL,EAAW;AACT,WAAOjB,UAAP;AACD;;AAED,MAAIkB,cAAgC,GAAGlB,UAAU,CAACmB,KAAX,CACrC,gCADqC,EAErC;AAAEjB,IAAAA,cAAc,EAAEE;AAAlB,GAFqC,CAAvC;;AAIA,MAAI,CAACc,cAAL,EAAqB;AACnB,WAAOlB,UAAP;AACD;;AACDkB,EAAAA,cAAc,GAAG,kCAAoBA,cAApB,EAAoC,IAApC,EAA0ChB,cAAc,CAACkB,IAAzD,CAAjB;AACA,SAAOpB,UAAU,CAACO,OAAX,CAAmBK,sBAASS,MAA5B,EAAoCH,cAApC,CAAP;AACD","sourcesContent":["import {\n  Controller,\n  Block,\n  Commands,\n  Selection,\n} from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport adjustSelection from '../utils/adjustSelection';\nimport { ITableSelection } from '../types';\nimport deleteTable from './deleteTable';\nimport getRealNodeInTable from '../utils/getRealNodeInTable';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\n\nexport default function selectTableSelection(\n  controller: Controller,\n  table: Table,\n  tableSelection: ITableSelection,\n  shouldAdjust = true,\n) {\n  let newTableSelection: ITableSelection | null = null;\n  if (tableSelection) {\n    newTableSelection = shouldAdjust ? adjustSelection(table, tableSelection) : tableSelection;\n  }\n  if (!newTableSelection) {\n    // TODO: history相关\n    return controller;\n  }\n  // 表格未做schema，存在row被删除的情况\n  if (table.nodes.length === 0) return controller.command(deleteTable, table);\n  const { startRowIndex, startColIndex } = newTableSelection;\n  const targetRow = table.nodes[startRowIndex];\n  // 表格跨页时，targetRow 可能不存在\n  if (!targetRow) {\n    return controller;\n  }\n  if (!targetRow.nodes) {\n    return controller.command(Commands.replaceNodeByKey, targetRow.key, Block.create('paragraph'));\n  }\n  const cell = getRealNodeInTable(table, startRowIndex, startColIndex)!;\n  if (!cell) {\n    return controller;\n  }\n\n  let rangeSelection: Selection | null = controller.query(\n    'getSelectionFromTableSelection',\n    { tableSelection: newTableSelection },\n  );\n  if (!rangeSelection) {\n    return controller;\n  }\n  rangeSelection = setSelectionByTable(rangeSelection, true, tableSelection.type);\n  return controller.command(Commands.select, rangeSelection);\n}\n"],"file":"selectTableSelection.js"}