{"version":3,"sources":["../../../../src/bi/commands/splitCell.ts"],"names":["splitCell","controller","table","area","value","document","tableSelection","queryTableSelection","startRowIndex","startColIndex","endRowIndex","endColIndex","tablePath","getPath","key","r","c","cellPath","cell","getNodeByPath","command","Commands","setNodeByPath","data","rowSpan","colSpan","hidden"],"mappings":";;;;;;;;;AAAA;;AAIA;;AACA;;AAEe,SAASA,SAAT,CAAmBC,UAAnB,EAA2CC,KAA3C,EAAyDC,IAAzD,EAAiF;AAC9F,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeD,KAArB;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,WAAOD,UAAP;AACD;;AACD,MAAIK,cAAJ;;AACA,MAAIH,IAAJ,EAAU;AACRG,IAAAA,cAAc,GAAGH,IAAjB;AACD,GAFD,MAEO;AACL,UAAMI,mBAAmB,GAAG,2CAA6BN,UAA7B,EAAyCC,KAAzC,CAA5B;AACAI,IAAAA,cAAc,GAAGC,mBAAmB,IAClC,iDAAmCH,KAAnC,EAA0CF,KAA1C,CADF;AAED;;AAED,MAAI,CAACI,cAAL,EAAqB;AACnB,WAAOL,UAAP;AACD;;AAED,QAAM;AACJO,IAAAA,aADI;AACWC,IAAAA,aADX;AAC0BC,IAAAA,WAD1B;AACuCC,IAAAA;AADvC,MAEFL,cAFJ;AAIA,QAAMM,SAAS,GAAGP,QAAQ,CAACQ,OAAT,CAAiBX,KAAK,CAACY,GAAvB,CAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAGP,aAAb,EAA4BO,CAAC,IAAIL,WAAjC,EAA8CK,CAAC,IAAI,CAAnD,EAAsD;AACpD,SAAK,IAAIC,CAAC,GAAGP,aAAb,EAA4BO,CAAC,IAAIL,WAAjC,EAA8CK,CAAC,IAAI,CAAnD,EAAsD;AACpD,YAAMC,QAAQ,GAAG,CAAC,GAAGL,SAAJ,EAAgBG,CAAhB,EAAmBC,CAAnB,CAAjB;AACA,YAAME,IAAI,GAAGb,QAAQ,CAACc,aAAT,CAAuBF,QAAvB,CAAb;;AACA,UAAIC,IAAJ,EAAU;AACRjB,QAAAA,UAAU,CAACmB,OAAX,CAAmBC,sBAASC,aAA5B,EAA2CL,QAA3C,EAAqD;AACnDM,UAAAA,IAAI,EAAE,EACJ,GAAGL,IAAI,CAACK,IADJ;AAEJC,YAAAA,OAAO,EAAE,CAFL;AAGJC,YAAAA,OAAO,EAAE,CAHL;AAIJC,YAAAA,MAAM,EAAE;AAJJ;AAD6C,SAArD;AAQD;AACF;AACF;;AACD,SAAOzB,UAAP;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport { ITableSelection } from '../types';\nimport createTableSelectionForFocusedCell from '../utils/createTableSelectionForFocusedCell';\nimport getDataTableSelectionByTable from '../utils/getDataTableSelectionByTable';\n\nexport default function splitCell(controller: Controller, table: Table, area?: ITableSelection) {\n  const { value } = controller;\n  const { document } = value;\n  if (!table) {\n    return controller;\n  }\n  let tableSelection: ITableSelection | null;\n  if (area) {\n    tableSelection = area;\n  } else {\n    const queryTableSelection = getDataTableSelectionByTable(controller, table);\n    tableSelection = queryTableSelection ||\n      createTableSelectionForFocusedCell(value, table);\n  }\n\n  if (!tableSelection) {\n    return controller;\n  }\n\n  const {\n    startRowIndex, startColIndex, endRowIndex, endColIndex,\n  } = tableSelection;\n\n  const tablePath = document.getPath(table.key);\n\n  for (let r = startRowIndex; r <= endRowIndex; r += 1) {\n    for (let c = startColIndex; c <= endColIndex; c += 1) {\n      const cellPath = [...tablePath!, r, c];\n      const cell = document.getNodeByPath(cellPath) as TableCell;\n      if (cell) {\n        controller.command(Commands.setNodeByPath, cellPath, {\n          data: {\n            ...cell.data,\n            rowSpan: 1,\n            colSpan: 1,\n            hidden: false,\n          },\n        });\n      }\n    }\n  }\n  return controller;\n}\n"],"file":"splitCell.js"}