{"version":3,"sources":["../../../../src/bi/commands/deleteCols.ts"],"names":["deleteCol","controller","table","tablePath","colIndex","rowIndex","_","cell","type","cellData","data","hidden","realNode","position","key","command","Commands","setNodeByPath","colSpan","inheritCellPath","withoutNormalizing","c","removeNodeByPath","deleteCols","value","document","selection","tableSelection","startColIndex","endColIndex","getPath","updatedTable","getNodeByPath","Table","isColumnHeader","deleteTable","colsWidth","slice","isAutofitWidth","newTable","latestTable","colSize","length","selectedColIndex","i","nodes","focusCell","s","moveToStartOfNode","select"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport { Controller, Commands, Path } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport isEmptyTable from '../utils/isEmptyTable';\nimport getRealNodeInTable from '../utils/getRealNodeInTable';\nimport getPositionOfCell from '../utils/getPositionOfCell';\nimport traverseSingleColCells from '../utils/traverseSingleColCells';\nimport deleteTable from './deleteTable';\nimport { createTableSelectionForFocusedCell } from '../utils';\nimport { logNPEInfo } from '../utils/logger';\nimport { ITableSelection } from '../types';\nimport getDataTableSelectionByTable from '../utils/getDataTableSelectionByTable';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\nimport resizeTableToAutofitWidth from './resizeTableToAutofitWidth';\nimport toggleColHeader from './toggleColHeader';\nimport filterValidData from '../../utils/utils/filterValidData';\n\nfunction deleteCol(controller: Controller, table: Table, tablePath: Path, colIndex: number) {\n  traverseSingleColCells(table, colIndex, colIndex, (rowIndex, _, cell) => {\n    if (!cell) {\n      logNPEInfo(\n        table,\n        {\n          type: 'deleteCol',\n          colIndex,\n          rowIndex,\n        },\n      );\n    }\n    // 不规则表格 cell 可能为空\n    // 这里支持用户手动删除不规则的列，使表格变为规则表格\n    if (!cell) {\n      return;\n    }\n    const cellData = cell.data || {};\n    if (cellData.hidden) {\n      const realNode = getRealNodeInTable(table, rowIndex, colIndex);\n      if (!realNode) {\n        return;\n      }\n      const position = getPositionOfCell(realNode.key, table)!;\n      if (position.rowIndex === rowIndex && position.colIndex < colIndex) {\n        controller.command(Commands.setNodeByPath,\n          [...tablePath, position.rowIndex, position.colIndex], {\n            data: {\n              ...realNode.data,\n              colSpan: (realNode.data.colSpan || 1) - 1,\n            },\n          });\n      }\n    } else if ((cellData.colSpan || 1) > 1) {\n      const inheritCellPath = [...tablePath, rowIndex, colIndex + 1];\n      controller.command(Commands.setNodeByPath, inheritCellPath, {\n        data: {\n          ...cellData,\n          colSpan: (cellData.colSpan || 1) - 1,\n        },\n      });\n    }\n    controller.withoutNormalizing((c) => {\n      c.command(Commands.removeNodeByPath, [...tablePath, rowIndex, colIndex]);\n    });\n  });\n}\n\nexport default function deleteCols(controller: Controller, table: Table) {\n  const { value } = controller;\n  const { document, selection } = value;\n  let tableSelection: ITableSelection | null = getDataTableSelectionByTable(controller, table);\n  if (!tableSelection) {\n    tableSelection = createTableSelectionForFocusedCell(value, table);\n  }\n  if (!tableSelection) {\n    return controller;\n  }\n  const { startColIndex, endColIndex } = tableSelection || {};\n  const tablePath = document.getPath(table.key)!;\n  for (let colIndex = endColIndex; colIndex >= startColIndex; colIndex -= 1) {\n    const updatedTable = controller.value.document.getNodeByPath(tablePath) as Table;\n    deleteCol(controller, updatedTable, tablePath, colIndex);\n    if (Table.isColumnHeader(updatedTable) && colIndex === 0) {\n      toggleColHeader(controller, updatedTable);\n    }\n  }\n\n  const updatedTable = controller.value.document.getNodeByPath(tablePath) as Table;\n\n  if (isEmptyTable(updatedTable)) {\n    return controller.command(deleteTable, updatedTable);\n  }\n\n  const colsWidth = updatedTable.data.colsWidth || [];\n  controller.command(Commands.setNodeByPath, tablePath, {\n    data: filterValidData({\n      ...updatedTable.data,\n      colsWidth: [...colsWidth.slice(0, startColIndex), ...colsWidth.slice(endColIndex + 1)],\n    }),\n  });\n\n  if (Table.isAutofitWidth(updatedTable)) {\n    const newTable = controller.value.document.getNodeByPath(tablePath) as Table;\n    resizeTableToAutofitWidth(controller, newTable, updatedTable);\n  }\n\n  const latestTable = controller.value.document.getNodeByPath(tablePath) as Table;\n  const colSize = latestTable.data.colsWidth!.length;\n  const selectedColIndex = startColIndex >= colSize ? colSize - 1 : startColIndex;\n  // 删除列后 focus 在所删列的前一列的第一个单元格内\n  for (let i = 0; i < latestTable.nodes.length; i += 1) {\n    const focusCell = getRealNodeInTable(latestTable, i, selectedColIndex);\n    if (focusCell) {\n      const s = setSelectionByTable(selection, false)\n        .moveToStartOfNode(focusCell, controller);\n      return controller.command(Commands.select, s);\n    }\n  }\n  return controller;\n}\n"],"file":"deleteCols.js"}