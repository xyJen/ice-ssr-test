{"version":3,"sources":["../../../../src/bi/commands/emptyTableSelection.ts"],"names":["emptyTableSelection","controller","table","value","document","tableSelection","startRowIndex","startColIndex","endRowIndex","endColIndex","tablePath","getPath","key","rowIndex","row","nodes","colIndex","cell","cellPath","childIndex","length","withoutNormalizing","command","Commands","removeNodeByPath","insertNodeByPath","Paragraph","create","Text","newTable","getNode","selection","range","moveToRangeOfNode","select"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEe,SAASA,mBAAT,CAA6BC,UAA7B,EAAqDC,KAArD,EAAmE;AAChF,QAAM;AAAEC,IAAAA;AAAF,MAAYF,UAAlB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,cAAc,GAAG,2CAA6BJ,UAA7B,EAAyCC,KAAzC,CAAvB;AACA,MAAI,CAACG,cAAL,EAAqB,OAAOJ,UAAP;AAErB,QAAM;AACJK,IAAAA,aADI;AACWC,IAAAA,aADX;AAC0BC,IAAAA,WAD1B;AACuCC,IAAAA;AADvC,MAEFJ,cAFJ;AAIA,QAAMK,SAAS,GAAGN,QAAQ,CAACO,OAAT,CAAiBT,KAAK,CAACU,GAAvB,CAAlB;;AACA,OAAK,IAAIC,QAAQ,GAAGP,aAApB,EAAmCO,QAAQ,IAAIL,WAA/C,EAA4DK,QAAQ,IAAI,CAAxE,EAA2E;AACzE,UAAMC,GAAG,GAAGZ,KAAK,CAACa,KAAN,CAAYF,QAAZ,CAAZ;AACA,QAAI,CAACC,GAAL,EAAU;;AAEV,SAAK,IAAIE,QAAQ,GAAGT,aAApB,EAAmCS,QAAQ,IAAIP,WAA/C,EAA4DO,QAAQ,IAAI,CAAxE,EAA2E;AACzE,YAAMC,IAAI,GAAGH,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AAEX,YAAMC,QAAQ,GAAG,CAAC,GAAGR,SAAJ,EAAgBG,QAAhB,EAA0BG,QAA1B,CAAjB;;AACA,WAAK,IAAIG,UAAU,GAAGF,IAAI,CAACF,KAAL,CAAWK,MAAX,GAAoB,CAA1C,EAA6CD,UAAU,IAAI,CAA3D,EAA8DA,UAAU,IAAI,CAA5E,EAA+E;AAC7ElB,QAAAA,UAAU,CAACoB,kBAAX,CAA8B,MAAM;AAClCpB,UAAAA,UAAU,CAACqB,OAAX,CAAmBC,sBAASC,gBAA5B,EAA8C,CAAC,GAAGN,QAAJ,EAAcC,UAAd,CAA9C;AACD,SAFD;AAGD;;AAEDlB,MAAAA,UAAU,CAACqB,OAAX,CACEC,sBAASE,gBADX,EAEEP,QAFF,EAGE,CAHF,EAIEQ,+BAAUC,MAAV,CAAiB;AACfZ,QAAAA,KAAK,EAAE,CAACa,kBAAKD,MAAL,CAAY,EAAZ,CAAD;AADQ,OAAjB,CAJF;AAQD;AACF;;AAGD,QAAME,QAAQ,GAAG5B,UAAU,CAACE,KAAX,CAAiBC,QAAjB,CAA0B0B,OAA1B,CAAkC5B,KAAK,CAACU,GAAxC,CAAjB;AACA,QAAMK,IAAI,GAAG,+BAAmBY,QAAnB,EAA6BvB,aAA7B,EAA4CC,aAA5C,CAAb;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAgB9B,UAAU,CAACE,KAAjC;AACA,QAAM6B,KAAK,GAAG,kCAAoBD,SAApB,EAA+B,KAA/B,EACXE,iBADW,CACOhB,IADP,EACahB,UADb,CAAd;AAGA,SAAOA,UAAU,CACdqB,OADI,CACIC,sBAASW,MADb,EACqBF,KADrB,CAAP;AAED","sourcesContent":["import { Controller, Commands, Text } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport Table from '../../mo/models';\nimport { getRealNodeInTable } from '../utils';\nimport getDataTableSelectionByTable from '../utils/getDataTableSelectionByTable';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\n\nexport default function emptyTableSelection(controller: Controller, table: Table) {\n  const { value } = controller;\n  const { document } = value;\n  const tableSelection = getDataTableSelectionByTable(controller, table);\n  if (!tableSelection) return controller;\n\n  const {\n    startRowIndex, startColIndex, endRowIndex, endColIndex,\n  } = tableSelection;\n\n  const tablePath = document.getPath(table.key);\n  for (let rowIndex = startRowIndex; rowIndex <= endRowIndex; rowIndex += 1) {\n    const row = table.nodes[rowIndex];\n    if (!row) continue;\n\n    for (let colIndex = startColIndex; colIndex <= endColIndex; colIndex += 1) {\n      const cell = row.nodes[colIndex];\n      if (!cell) continue;\n\n      const cellPath = [...tablePath!, rowIndex, colIndex];\n      for (let childIndex = cell.nodes.length - 1; childIndex >= 0; childIndex -= 1) {\n        controller.withoutNormalizing(() => {\n          controller.command(Commands.removeNodeByPath, [...cellPath, childIndex]);\n        });\n      }\n\n      controller.command(\n        Commands.insertNodeByPath,\n        cellPath,\n        0,\n        Paragraph.create({\n          nodes: [Text.create('')],\n        }),\n      );\n    }\n  }\n\n\n  const newTable = controller.value.document.getNode(table.key) as Table;\n  const cell = getRealNodeInTable(newTable, startRowIndex, startColIndex)!;\n  const { selection } = controller.value;\n  const range = setSelectionByTable(selection, false)\n    .moveToRangeOfNode(cell, controller);\n\n  return controller\n    .command(Commands.select, range);\n}\n"],"file":"emptyTableSelection.js"}