{"version":3,"sources":["../../../../src/bi/handlers/onCangjieInput.ts"],"names":["onCangjieInput","event","controller","next","value","selection","document","tableSelection","query","table","getNode","key","startRowIndex","startColIndex","cell","s","moveToRangeOfNode","command","Commands","select","moveToFocus","start","getStart","startCell","getClosest","isTableCell","detail","type","isCollapsed","nodes","length","onlyBlock","onlyChildOfOnlyBlock","text"],"mappings":";;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;AAEe,SAASA,cAAT,CAAwBC,KAAxB,EAA4CC,UAA5C,EAAoEC,IAApE,EAA0E;AACvF,QAAM;AAAEC,IAAAA;AAAF,MAAYF,UAAlB;AACA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BF,KAAhC;AACA,QAAMG,cAAc,GAAGL,UAAU,CAACM,KAAX,CAAiB,gBAAjB,CAAvB;;AACA,MAAID,cAAJ,EAAoB;AAClB,UAAME,KAAK,GAAGH,QAAQ,CAACI,OAAT,CAAiBH,cAAc,CAACI,GAAhC,CAAd;;AACA,QAAI,CAACF,KAAL,EAAY;AACV,aAAON,IAAI,EAAX;AACD;;AACD,UAAM;AAAES,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAmCN,cAAzC;AACA,UAAMO,IAAI,GAAG,+BAAmBL,KAAnB,EAA0BG,aAA1B,EAAyCC,aAAzC,CAAb;AACA,UAAME,CAAC,GAAGV,SAAS,CAACW,iBAAV,CAA4BF,IAA5B,EAAmCZ,UAAnC,CAAV;AACAA,IAAAA,UAAU,CAACe,OAAX,CAAmBC,sBAASC,MAA5B,EAAoC,kCAAoBJ,CAApB,EAAuB,KAAvB,CAApC;AACA,WAAOZ,IAAI,EAAX;AACD;;AACD,MAAI,qCAAuBC,KAAvB,CAAJ,EAAmC;AACjC,UAAMW,CAAC,GAAGV,SAAS,CAACe,WAAV,EAAV;AACAlB,IAAAA,UAAU,CAACe,OAAX,CAAmBC,sBAASC,MAA5B,EAAoC,kCAAoBJ,CAApB,EAAuB,KAAvB,CAApC;AACA,WAAOZ,IAAI,EAAX;AACD;;AACD,QAAMkB,KAAK,GAAGhB,SAAS,CAACiB,QAAV,CAAmBhB,QAAnB,CAAd;AACA,QAAMiB,SAAS,GAAGjB,QAAQ,CAACkB,UAAT,CAAoBH,KAAK,CAACV,GAA1B,EAA+Bc,kBAA/B,CAAlB;;AACA,MACExB,KAAK,CAACyB,MAAN,CAAaC,IAAb,KAAsB,uBAAtB,IACAtB,SAAS,CAACuB,WADV,IAEAL,SAFA,IAGAA,SAAS,CAACM,KAAV,CAAgBC,MAAhB,KAA2B,CAJ7B,EAKE;AACA,UAAMC,SAAS,GAAGR,SAAS,CAACM,KAAV,CAAgB,CAAhB,CAAlB,CADA,CAEA;;AACA,QAAIE,SAAS,EAAEF,KAAX,EAAkBC,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,aAAO3B,IAAI,EAAX;AACD;;AACD,UAAM6B,oBAAoB,GAAGD,SAAS,CAACF,KAAV,CAAgB,CAAhB,CAA7B;;AACA,QAAIG,oBAAoB,CAACC,IAArB,KAA8B,EAAlC,EAAsC;AACpC,aAAO/B,UAAP;AACD;AACF;;AACD,SAAOC,IAAI,EAAX;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport { isTableCell } from '../types';\nimport isSelectionAcrossTable from '../utils/isSelectionAcrossTable';\nimport { getRealNodeInTable } from '../utils';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\n\nexport default function onCangjieInput(event: CustomEvent, controller: Controller, next) {\n  const { value } = controller;\n  const { selection, document } = value;\n  const tableSelection = controller.query('tableSelection');\n  if (tableSelection) {\n    const table = document.getNode(tableSelection.key) as Table;\n    if (!table) {\n      return next();\n    }\n    const { startRowIndex, startColIndex } = tableSelection;\n    const cell = getRealNodeInTable(table, startRowIndex, startColIndex);\n    const s = selection.moveToRangeOfNode(cell!, controller);\n    controller.command(Commands.select, setSelectionByTable(s, false));\n    return next();\n  }\n  if (isSelectionAcrossTable(value)) {\n    const s = selection.moveToFocus();\n    controller.command(Commands.select, setSelectionByTable(s, false));\n    return next();\n  }\n  const start = selection.getStart(document);\n  const startCell = document.getClosest(start.key, isTableCell) as TableCell;\n  if (\n    event.detail.type === 'deleteContentBackward' &&\n    selection.isCollapsed &&\n    startCell &&\n    startCell.nodes.length === 1\n  ) {\n    const onlyBlock = startCell.nodes[0];\n    // 非法表格（从 word 导入）中，cell 子节点可能是 text\n    if (onlyBlock?.nodes?.length !== 1) {\n      return next();\n    }\n    const onlyChildOfOnlyBlock = onlyBlock.nodes[0];\n    if (onlyChildOfOnlyBlock.text === '') {\n      return controller;\n    }\n  }\n  return next();\n}\n"],"file":"onCangjieInput.js"}