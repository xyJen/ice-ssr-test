{"version":3,"sources":["../../../../src/bi/handlers/onSelectAll.ts"],"names":["isEmptyCell","cell","nodes","length","isSelectWholeCell","controller","selection","document","value","isCollapsed","cellSelection","moveToRangeOfNode","sort","onSelectAll","next","event","tbSelection","query","tableSelection","table","getNode","key","isSelectWholeTable","node","command","Commands","moveToRangeOfDocument","startBlock","getClosest","isTableCell","preventDefault","Table","isTable","run"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,SAASA,WAAT,CAAqBC,IAArB,EAAsC;AACpC,SAAOA,IAAI,CAACC,KAAL,CAAWC,MAAX,KAAsB,CAAtB,IAA2B,iCAAiBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAAjB,CAAlC;AACD;;AAED,SAASE,iBAAT,CAA2BC,UAA3B,EAAmDJ,IAAnD,EAAoE;AAClE,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BF,UAAU,CAACG,KAA3C;;AACA,MAAIF,SAAS,CAACG,WAAV,IAAyB,CAACT,WAAW,CAACC,IAAD,CAAzC,EAAiD;AAC/C,WAAO,KAAP;AACD;;AACD,QAAMS,aAAa,GAAGJ,SAAS,CAACK,iBAAV,CAA4BV,IAA5B,EAAkCI,UAAlC,CAAtB;AACA,SAAO,4BAAMK,aAAa,CAACE,IAAd,CAAmBL,QAAnB,CAAN,EAAoCD,SAAS,CAACM,IAAV,CAAeL,QAAf,CAApC,CAAP;AACD;;AAEc,SAASM,WAAT,CAAqBR,UAArB,EAA6CS,IAA7C,EAAmDC,KAAnD,EAA2D;AACxE,QAAMC,WAAW,GAAGX,UAAU,CAACY,KAAX,CAAiBC,uBAAjB,CAApB,CADwE,CAExE;;AACA,MAAIF,WAAJ,EAAiB;AACf,UAAMG,KAAK,GAAGd,UAAU,CAACG,KAAX,CAAiBD,QAAjB,CAA0Ba,OAA1B,CAAkCJ,WAAW,CAACK,GAA9C,CAAd;;AACA,QAAIhB,UAAU,CAACY,KAAX,CAAiBK,2BAAjB,EAAqC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAArC,CAAJ,EAA2D;AACzDd,MAAAA,UAAU,CAACmB,OAAX,CAAmBC,sBAASC,qBAA5B;AACA,aAAOrB,UAAP;AACD;AACF;;AAED,QAAM;AAAEG,IAAAA;AAAF,MAAYH,UAAlB;AACA,MAAI,CAAC,qCAAuBG,KAAvB,CAAL,EAAoC,OAAOM,IAAI,EAAX;AAEpC,QAAM;AAAEP,IAAAA,QAAF;AAAYoB,IAAAA;AAAZ,MAA2BnB,KAAjC;;AACA,MAAI,CAACmB,UAAL,EAAiB;AACf,WAAOb,IAAI,EAAX;AACD;;AACD,QAAMb,IAAI,GAAGM,QAAQ,CAACqB,UAAT,CAAoBD,UAAU,CAACN,GAA/B,EAAoCQ,kBAApC,CAAb;;AACA,MAAI,CAAC5B,IAAL,EAAW;AACT,WAAOa,IAAI,EAAX;AACD;;AAEDC,EAAAA,KAAK,EAAEe,cAAP,GAvBwE,CAwBxE;;AACA,MAAI1B,iBAAiB,CAACC,UAAD,EAAaJ,IAAb,CAArB,EAAyC;AACvC,UAAMkB,KAAK,GAAGZ,QAAQ,CAACqB,UAAT,CAAoB3B,IAAI,CAACoB,GAAzB,EAA8BU,gBAAMC,OAApC,CAAd;;AACA,QAAIb,KAAJ,EAAW;AACT,aAAOd,UAAU,CAAC4B,GAAX,CAAe,UAAf,EAA2B,0BAAYd,KAAZ,CAA3B,CAAP;AACD;AACF;;AAED,SAAOd,UAAU,CAACmB,OAAX,CAAmBC,sBAASd,iBAA5B,EAA+CV,IAA/C,CAAP;AACD","sourcesContent":["import equal from 'fast-deep-equal';\nimport { Commands, Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport { isEmptyParagraph } from '@ali/4ever-utils';\nimport isSelectionInTableCell from '../utils/isSelectionInTableCell';\nimport isSelectWholeTable from '../queries/isSelectWholeTable';\nimport { isTableCell } from '../types';\nimport tableSelection from '../queries/tableSelection';\nimport { selectTable } from '../actions';\n\nfunction isEmptyCell(cell: TableCell) {\n  return cell.nodes.length === 1 && isEmptyParagraph(cell.nodes[0]);\n}\n\nfunction isSelectWholeCell(controller: Controller, cell: TableCell) {\n  const { selection, document } = controller.value;\n  if (selection.isCollapsed && !isEmptyCell(cell)) {\n    return false;\n  }\n  const cellSelection = selection.moveToRangeOfNode(cell, controller);\n  return equal(cellSelection.sort(document), selection.sort(document));\n}\n\nexport default function onSelectAll(controller: Controller, next, event?) {\n  const tbSelection = controller.query(tableSelection);\n  // 选中表格时，cmd + a 选择整个文档\n  if (tbSelection) {\n    const table = controller.value.document.getNode(tbSelection.key) as Table;\n    if (controller.query(isSelectWholeTable, { node: table })) {\n      controller.command(Commands.moveToRangeOfDocument);\n      return controller;\n    }\n  }\n\n  const { value } = controller;\n  if (!isSelectionInTableCell(value)) return next();\n\n  const { document, startBlock } = value;\n  if (!startBlock) {\n    return next();\n  }\n  const cell = document.getClosest(startBlock.key, isTableCell) as TableCell;\n  if (!cell) {\n    return next();\n  }\n\n  event?.preventDefault();\n  // 选中单元格时，cmd + a 选择整个表格\n  if (isSelectWholeCell(controller, cell)) {\n    const table = document.getClosest(cell.key, Table.isTable);\n    if (table) {\n      return controller.run('onAction', selectTable(table));\n    }\n  }\n\n  return controller.command(Commands.moveToRangeOfNode, cell);\n}\n"],"file":"onSelectAll.js"}