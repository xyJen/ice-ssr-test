"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onArrowRight;

var _everCangjie = require("@ali/4ever-cangjie");

var _types = require("../types");

var _isSelectionInTableCell = _interopRequireDefault(require("../utils/isSelectionInTableCell"));

var _selectionCommands = require("../utils/selectionCommands");

var _setSelectionByTable = _interopRequireDefault(require("../../utils/utils/setSelectionByTable"));

function onArrowRight(event, controller, next) {
  const {
    value
  } = controller;
  const {
    selection,
    document,
    startText
  } = value;
  const tableSelection = controller.query('tableSelection');

  if (tableSelection) {
    event.preventDefault();
    const table = document.getNode(tableSelection.key);

    if (!table) {
      return;
    }

    if (controller.query('isSelectWholeTable', {
      node: table
    })) {
      return (0, _selectionCommands.moveToStartOfNextSibling)(controller, table);
    }

    const {
      endColIndex,
      startRowIndex
    } = tableSelection;
    return (0, _selectionCommands.moveToStartOfCell)(controller, table, startRowIndex, endColIndex + 1);
  }

  if (!(0, _isSelectionInTableCell.default)(value)) return next();
  const cell = document.getClosest(startText?.key, _types.isTableCell); // document.getClosest 有可能返回空

  if (!cell) return next();
  if (!selection.getStart(document).isAtEndOfNode(cell)) return next();
  let currentCell = cell;

  do {
    let nextCell = document.getNextSibling(currentCell.key);

    if (!nextCell) {
      const currentRow = document.getParent(currentCell.key);
      const nextRow = document.getNextSibling(currentRow.key);
      if (!nextRow) return next();
      nextCell = nextRow.nodes[0];
    } // @ts-ignore


    currentCell = nextCell;
  } while (currentCell.data.hidden || false); // 阻止 Cangjie 默认事件


  event.preventDefault();
  const s = selection.moveToStartOfNode(currentCell, controller);
  return controller.command(_everCangjie.Commands.select, (0, _setSelectionByTable.default)(s, false));
}
//# sourceMappingURL=onArrowRight.js.map