{"version":3,"sources":["../../../../src/bi/handlers/createOnCangjieCopy.ts"],"names":["MIME_TYPES","constants","createOnCangjieCopy","isMobile","onCangjieCopy","event","controller","next","clipboardData","document","selection","value","tableSelection","query","encodedFragment","getData","FRAGMENT","fragment","transferUtils","decodeFragment","setClipboardData","setData","encodeFragment","tablePath","assertPath","key","table","assertNodeByPath","Table","isTable","noTableSelection","command","Commands","select","shouldTransfrom","newFragment"],"mappings":";;;;;;;;;AAAA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,sBAAvB;;AAEe,SAASC,mBAAT,CAA6BC,QAAQ,GAAG,KAAxC,EAA+C;AAC5D,SAAO,SAASC,aAAT,CACLC,KADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AACA,QAAI,CAACF,KAAK,CAACG,aAAX,EAA0B;AACxB,aAAOD,IAAI,EAAX;AACD;;AAED,UAAM;AAAEE,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0BJ,UAAU,CAACK,KAA3C;AACA,UAAMC,cAAc,GAAGN,UAAU,CAACO,KAAX,CAAiB,gBAAjB,CAAvB;AACA,UAAMC,eAAe,GAAGT,KAAK,CAACG,aAAN,CAAoBO,OAApB,CAA4Bf,UAAU,CAACgB,QAAvC,CAAxB;;AACA,QAAIC,QAAQ,GAAGC,2BAAcC,cAAd,CAA6BL,eAA7B,CAAf;;AACA,QAAI,CAACF,cAAL,EAAqB;AACnB,UAAIK,QAAQ,IAAI,kCAAkBA,QAAlB,CAAhB,EAA6C;AAC3C,eAAOV,IAAI,CACTF,KAAK,CAACe,gBAAN,CACEf,KAAK,CAACG,aAAN,CAAoBa,OAApB,CACErB,UAAU,CAACgB,QADb,EAEEE,2BAAcI,cAAd,CAA6B,sDAAwBL,QAAxB,CAA7B,CAFF,CADF,CADS,CAAX;AAQD;AACF,KAXD,MAWO;AACL,YAAMM,SAAS,GAAGd,QAAQ,CAACe,UAAT,CAAoBZ,cAAc,CAACa,GAAnC,CAAlB;AACA,YAAMC,KAAK,GAAGjB,QAAQ,CAACkB,gBAAT,CAA0BJ,SAA1B,CAAd;;AACA,UAAIK,gBAAMC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACxBT,QAAAA,QAAQ,GAAG,kDAAoCS,KAApC,EAA2Cd,cAA3C,CAAX;AACD;AACF;;AAED,QAAIT,QAAJ,EAAc;AACZ,YAAM2B,gBAAgB,GAAG,kCAAoBpB,SAApB,EAA+B,KAA/B,CAAzB;AACAJ,MAAAA,UAAU,CAACyB,OAAX,CAAmBC,sBAASC,MAA5B,EAAoCH,gBAApC;AACD;;AAED,QAAIb,QAAJ,EAAc;AACZ,YAAM;AACJiB,QAAAA,eADI;AAEJjB,QAAAA,QAAQ,EAAEkB;AAFN,UAGF,gDAAkC1B,QAAlC,EAA4CQ,QAA5C,EAAsDd,QAAtD,CAHJ;;AAKA,UAAI+B,eAAe,IAAItB,cAAvB,EAAuC;AACrC,eAAOL,IAAI,CACTF,KAAK,CAACe,gBAAN,CACEf,KAAK,CAACG,aAAN,CAAoBa,OAApB,CACErB,UAAU,CAACgB,QADb,EAEEE,2BAAcI,cAAd,CAA6Ba,WAA7B,CAFF,CADF,CADS,CAAX;AAQD;AACF;;AAED,WAAO5B,IAAI,EAAX;AACD,GAxDD;AAyDD","sourcesContent":["import {\n  CangjieClipboardEvent,\n  constants,\n  Controller,\n  transferUtils,\n  Commands,\n} from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport generateClipTableFromTableSelection from '../utils/generateClipTableFromTableSelection';\nimport transformTablesToCompatibleLegacy from '../../utils/utils/transformTablesToCompatibleLegacy';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\nimport { isSingleTableCell } from '@ali/4ever-utils';\nimport { normalizeClipboardTable } from '../../utils/utils/normalizeClipboardTable';\n\nconst { MIME_TYPES } = constants;\n\nexport default function createOnCangjieCopy(isMobile = false) {\n  return function onCangjieCopy(\n    event: CangjieClipboardEvent,\n    controller: Controller,\n    next,\n  ) {\n    if (!event.clipboardData) {\n      return next();\n    }\n\n    const { document, selection } = controller.value;\n    const tableSelection = controller.query('tableSelection');\n    const encodedFragment = event.clipboardData.getData(MIME_TYPES.FRAGMENT);\n    let fragment = transferUtils.decodeFragment(encodedFragment);\n    if (!tableSelection) {\n      if (fragment && isSingleTableCell(fragment)) {\n        return next(\n          event.setClipboardData(\n            event.clipboardData.setData(\n              MIME_TYPES.FRAGMENT,\n              transferUtils.encodeFragment(normalizeClipboardTable(fragment)),\n            ),\n          ),\n        );\n      }\n    } else {\n      const tablePath = document.assertPath(tableSelection.key);\n      const table = document.assertNodeByPath(tablePath) as Table;\n      if (Table.isTable(table)) {\n        fragment = generateClipTableFromTableSelection(table, tableSelection);\n      }\n    }\n\n    if (isMobile) {\n      const noTableSelection = setSelectionByTable(selection, false);\n      controller.command(Commands.select, noTableSelection);\n    }\n\n    if (fragment) {\n      const {\n        shouldTransfrom,\n        fragment: newFragment,\n      } = transformTablesToCompatibleLegacy(document, fragment, isMobile);\n\n      if (shouldTransfrom || tableSelection) {\n        return next(\n          event.setClipboardData(\n            event.clipboardData.setData(\n              MIME_TYPES.FRAGMENT,\n              transferUtils.encodeFragment(newFragment),\n            ),\n          ),\n        );\n      }\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnCangjieCopy.js"}