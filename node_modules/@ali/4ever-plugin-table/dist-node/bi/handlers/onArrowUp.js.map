{"version":3,"sources":["../../../../src/bi/handlers/onArrowUp.ts"],"names":["onArrowUp","event","controller","next","value","selection","document","startBlock","tableSelection","query","preventDefault","table","getNode","key","node","startColIndex","startRowIndex","cell","getClosest","isTableCell","focusTable","Table","isTable","position","rowIndex","newSelection","Queries","getUpsideRange","anchor","newFocusCell","TableCell","nextCell","s","moveToEndOfNode","command","Commands","select"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AACA;;AAEe,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,UAA1B,EAAkDC,IAAlD,EAAwD;AACrE,QAAM;AAAEC,IAAAA;AAAF,MAAYF,UAAlB;AACA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAsCH,KAA5C;AACA,QAAMI,cAAc,GAAGN,UAAU,CAACO,KAAX,CAAiB,gBAAjB,CAAvB;;AACA,MAAID,cAAJ,EAAoB;AAClBP,IAAAA,KAAK,CAACS,cAAN;AACA,UAAMC,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBJ,cAAc,CAACK,GAAhC,CAAd;;AACA,QAAI,CAACF,KAAL,EAAY;AACV;AACD;;AACD,QAAIT,UAAU,CAACO,KAAX,CAAiB,oBAAjB,EAAuC;AAAEK,MAAAA,IAAI,EAAEH;AAAR,KAAvC,CAAJ,EAA6D;AAC3D,aAAO,qDAA6BT,UAA7B,EAAyCS,KAAzC,CAAP;AACD;;AACD,UAAM;AAAEI,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAmCR,cAAzC;AACA,WAAO,0CAAkBN,UAAlB,EAA8BS,KAA9B,EAAqCK,aAAa,GAAG,CAArD,EAAwDD,aAAxD,CAAP;AACD;;AAED,MAAI,CAAC,qCAAuBX,KAAvB,CAAL,EAAoC,OAAOD,IAAI,EAAX;AAEpC,QAAMc,IAAI,GAAGX,QAAQ,CAACY,UAAT,CAAoBX,UAAU,EAAEM,GAAhC,EAAsCM,kBAAtC,CAAb;;AACA,MAAI,CAACF,IAAL,EAAW;AACT,WAAOd,IAAI,EAAX;AACD;;AACD,QAAMiB,UAAU,GAAGd,QAAQ,CAACY,UAAT,CAAoBD,IAAI,CAACJ,GAAzB,EAA8BQ,gBAAMC,OAApC,CAAnB;AACA,QAAMC,QAAQ,GAAG,gCAAkBN,IAAI,CAACJ,GAAvB,EAA4BO,UAA5B,CAAjB;;AACA,MAAIG,QAAQ,CAACC,QAAT,KAAsB,CAA1B,EAA6B;AAC3B,WAAOrB,IAAI,EAAX;AACD;;AAED,QAAMsB,YAAY,GAAGvB,UAAU,CAACO,KAAX,CAAiBiB,qBAAQC,cAAzB,CAArB;;AACA,MAAI,CAACF,YAAL,EAAmB;AACjB,WAAOtB,IAAI,EAAX;AACD;;AACD,QAAM;AAAEyB,IAAAA;AAAF,MAAaH,YAAnB;AACA,QAAMI,YAAY,GAAGvB,QAAQ,CAACY,UAAT,CAAoBU,MAAM,CAACf,GAA3B,EAAgCiB,mBAAUX,WAA1C,CAArB,CAlCqE,CAmCrE;;AACA,MAAIU,YAAY,EAAEhB,GAAd,KAAsBI,IAAI,CAACJ,GAA/B,EAAoC;AAClC,WAAOV,IAAI,EAAX;AACD;;AAED,QAAM4B,QAAQ,GAAG,iCAAqBzB,QAArB,EAA+BW,IAA/B,EAAqC,IAArC,CAAjB;;AACA,MAAI,CAACc,QAAL,EAAe;AACb,WAAO5B,IAAI,EAAX;AACD;;AAEDF,EAAAA,KAAK,CAACS,cAAN;AACA,QAAMsB,CAAC,GAAG3B,SAAS,CAAC4B,eAAV,CAA0BF,QAA1B,EAAoC7B,UAApC,CAAV;AACA,SAAOA,UAAU,CAACgC,OAAX,CAAmBC,sBAASC,MAA5B,EAAoC,kCAAoBJ,CAApB,EAAuB,KAAvB,CAApC,CAAP;AACD","sourcesContent":["import { Commands, Controller, Queries } from '@ali/4ever-cangjie';\nimport isSelectionInTableCell from '../utils/isSelectionInTableCell';\nimport getPositionOfCell from '../utils/getPositionOfCell';\nimport { isTableCell } from '../types';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport {\n  moveToStartOfCell,\n  moveToStartOfPreviousSibling,\n} from '../utils/selectionCommands';\nimport getNextNonHiddenCell from '../utils/getNextVisibleCell';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\n\nexport default function onArrowUp(event, controller: Controller, next) {\n  const { value } = controller;\n  const { selection, document, startBlock } = value;\n  const tableSelection = controller.query('tableSelection');\n  if (tableSelection) {\n    event.preventDefault();\n    const table = document.getNode(tableSelection.key) as Table | null;\n    if (!table) {\n      return;\n    }\n    if (controller.query('isSelectWholeTable', { node: table })) {\n      return moveToStartOfPreviousSibling(controller, table);\n    }\n    const { startColIndex, startRowIndex } = tableSelection;\n    return moveToStartOfCell(controller, table, startRowIndex - 1, startColIndex);\n  }\n\n  if (!isSelectionInTableCell(value)) return next();\n\n  const cell = document.getClosest(startBlock?.key!, isTableCell) as TableCell;\n  if (!cell) {\n    return next();\n  }\n  const focusTable = document.getClosest(cell.key, Table.isTable) as Table;\n  const position = getPositionOfCell(cell.key, focusTable)!;\n  if (position.rowIndex === 0) {\n    return next();\n  }\n\n  const newSelection = controller.query(Queries.getUpsideRange);\n  if (!newSelection) {\n    return next();\n  }\n  const { anchor } = newSelection;\n  const newFocusCell = document.getClosest(anchor.key, TableCell.isTableCell);\n  // 向下移动后，仍是同一个 cell 则不处理\n  if (newFocusCell?.key === cell.key) {\n    return next();\n  }\n\n  const nextCell = getNextNonHiddenCell(document, cell, 'up');\n  if (!nextCell) {\n    return next();\n  }\n\n  event.preventDefault();\n  const s = selection.moveToEndOfNode(nextCell, controller);\n  return controller.command(Commands.select, setSelectionByTable(s, false));\n}\n"],"file":"onArrowUp.js"}