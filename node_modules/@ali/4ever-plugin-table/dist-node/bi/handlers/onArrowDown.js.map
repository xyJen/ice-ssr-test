{"version":3,"sources":["../../../../src/bi/handlers/onArrowDown.ts"],"names":["onArrowDown","event","controller","next","value","document","selection","startBlock","tableSelection","query","preventDefault","table","getNode","key","node","startColIndex","endRowIndex","cell","getClosest","isTableCell","focusTable","Table","isTable","position","rowIndex","nodes","length","newSelection","Queries","getDownsideRange","anchor","newFocusCell","TableCell","nextCell","s","moveToStartOfNode","command","Commands","select"],"mappings":";;;;;;;;;AAAA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AACA;;AAEe,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,UAA5B,EAAoDC,IAApD,EAA0D;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAYF,UAAlB;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAsCH,KAA5C;AAEA,QAAMI,cAAc,GAAGN,UAAU,CAACO,KAAX,CAAiB,gBAAjB,CAAvB;;AACA,MAAID,cAAJ,EAAoB;AAClBP,IAAAA,KAAK,CAACS,cAAN;AACA,UAAMC,KAAK,GAAGN,QAAQ,CAACO,OAAT,CAAiBJ,cAAc,CAACK,GAAhC,CAAd;;AACA,QAAI,CAACF,KAAL,EAAY;AACV;AACD;;AACD,QAAIT,UAAU,CAACO,KAAX,CAAiB,oBAAjB,EAAuC;AAAEK,MAAAA,IAAI,EAAEH;AAAR,KAAvC,CAAJ,EAA6D;AAC3D,aAAO,iDAAyBT,UAAzB,EAAqCS,KAArC,CAAP;AACD;;AACD,UAAM;AAAEI,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAiCR,cAAvC;AACA,WAAO,0CAAkBN,UAAlB,EAA8BS,KAA9B,EAAqCK,WAAW,GAAG,CAAnD,EAAsDD,aAAtD,CAAP;AACD;;AAED,MAAI,CAAC,qCAAuBX,KAAvB,CAAL,EAAoC;AAClC,WAAOD,IAAI,EAAX;AACD;;AAED,QAAMc,IAAI,GAAGZ,QAAQ,CAACa,UAAT,CAAoBX,UAAU,CAAEM,GAAhC,EAAqCM,kBAArC,CAAb;;AACA,MAAI,CAACF,IAAL,EAAW;AACT,WAAOd,IAAI,EAAX;AACD;;AACD,QAAMiB,UAAU,GAAGf,QAAQ,CAACa,UAAT,CAAoBD,IAAI,CAACJ,GAAzB,EAA8BQ,gBAAMC,OAApC,CAAnB;AACA,QAAMC,QAAQ,GAAG,gCAAkBN,IAAI,CAACJ,GAAvB,EAA4BO,UAA5B,CAAjB;;AACA,MAAIG,QAAQ,CAACC,QAAT,KAAsBJ,UAAU,CAACK,KAAX,CAAiBC,MAAjB,GAA0B,CAApD,EAAuD;AACrD,WAAOvB,IAAI,EAAX;AACD;;AAED,QAAMwB,YAAY,GAAGzB,UAAU,CAACO,KAAX,CAAiBmB,qBAAQC,gBAAzB,CAArB;;AACA,MAAI,CAACF,YAAL,EAAmB;AACjB,WAAOxB,IAAI,EAAX;AACD;;AACD,QAAM;AAAE2B,IAAAA;AAAF,MAAaH,YAAnB;AACA,QAAMI,YAAY,GAAG1B,QAAQ,CAACa,UAAT,CAAoBY,MAAM,CAACjB,GAA3B,EAAgCmB,mBAAUb,WAA1C,CAArB,CArCuE,CAsCvE;;AACA,MAAIY,YAAY,EAAElB,GAAd,KAAsBI,IAAI,CAACJ,GAA/B,EAAoC;AAClC,WAAOV,IAAI,EAAX;AACD;;AAED,QAAM8B,QAAQ,GAAG,iCAAqB5B,QAArB,EAA+BY,IAA/B,EAAqC,MAArC,CAAjB;;AACA,MAAI,CAACgB,QAAL,EAAe;AACb,WAAO9B,IAAI,EAAX;AACD;;AAEDF,EAAAA,KAAK,CAACS,cAAN;AACA,QAAMwB,CAAC,GAAG5B,SAAS,CAAC6B,iBAAV,CAA4BF,QAA5B,EAAsC/B,UAAtC,CAAV;AACA,SAAOA,UAAU,CAACkC,OAAX,CAAmBC,sBAASC,MAA5B,EAAoC,kCAAoBJ,CAApB,EAAuB,KAAvB,CAApC,CAAP;AACD","sourcesContent":["import {\n  Controller,\n  Commands,\n  Queries,\n} from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport isSelectionInTableCell from '../utils/isSelectionInTableCell';\nimport getPositionOfCell from '../utils/getPositionOfCell';\nimport { isTableCell } from '../types';\nimport {\n  moveToStartOfCell,\n  moveToStartOfNextSibling,\n} from '../utils/selectionCommands';\nimport getNextNonHiddenCell from '../utils/getNextVisibleCell';\nimport setSelectionByTable from '../../utils/utils/setSelectionByTable';\n\nexport default function onArrowDown(event, controller: Controller, next) {\n  const { value } = controller;\n  const { document, selection, startBlock } = value;\n\n  const tableSelection = controller.query('tableSelection');\n  if (tableSelection) {\n    event.preventDefault();\n    const table = document.getNode(tableSelection.key) as Table | null;\n    if (!table) {\n      return;\n    }\n    if (controller.query('isSelectWholeTable', { node: table })) {\n      return moveToStartOfNextSibling(controller, table);\n    }\n    const { startColIndex, endRowIndex } = tableSelection;\n    return moveToStartOfCell(controller, table, endRowIndex + 1, startColIndex);\n  }\n\n  if (!isSelectionInTableCell(value)) {\n    return next();\n  }\n\n  const cell = document.getClosest(startBlock!.key, isTableCell) as TableCell;\n  if (!cell) {\n    return next();\n  }\n  const focusTable = document.getClosest(cell.key, Table.isTable) as Table;\n  const position = getPositionOfCell(cell.key, focusTable)!;\n  if (position.rowIndex === focusTable.nodes.length - 1) {\n    return next();\n  }\n\n  const newSelection = controller.query(Queries.getDownsideRange);\n  if (!newSelection) {\n    return next();\n  }\n  const { anchor } = newSelection;\n  const newFocusCell = document.getClosest(anchor.key, TableCell.isTableCell);\n  // 向下移动后，仍是同一个 cell 则不处理\n  if (newFocusCell?.key === cell.key) {\n    return next();\n  }\n\n  const nextCell = getNextNonHiddenCell(document, cell, 'down');\n  if (!nextCell) {\n    return next();\n  }\n\n  event.preventDefault();\n  const s = selection.moveToStartOfNode(nextCell, controller);\n  return controller.command(Commands.select, setSelectionByTable(s, false));\n}\n"],"file":"onArrowDown.js"}