"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onKeyDown;

var _everCangjie = require("@ali/4ever-cangjie");

var _tableCell = _interopRequireDefault(require("../../mo/models/tableCell"));

// 问题描述：
// 1. 存在表格选区时
// 2. 如果鼠标右键点击位置不在 selection.anchor、selection.focus 之间
//    但是点击在 anchor 或 focus 所在的单元格时
// 3. Cangjie 会 focus 在点击位置，导致表格选区消失
// 解法：
// 拦截 Cangjie onMouseDown 默认事件
function onKeyDown(event, controller, next) {
  if (event.button !== 2) {
    return next();
  }

  const {
    document,
    selection
  } = controller.value;

  if (selection.isCollapsed) {
    return next();
  }

  const {
    target
  } = event;
  const td = target?.closest('td');

  if (!td) {
    return next();
  }

  const cellKey = td.getAttribute('data-cangjie-key');

  if (!cellKey) {
    return next();
  }

  const targetCell = document.getNode(cellKey);
  const {
    start,
    end
  } = selection.sort(document);
  const startCell = document.getClosest(start.key, _tableCell.default.isTableCell);
  const endCell = document.getClosest(end.key, _tableCell.default.isTableCell);

  if (!targetCell || !startCell || !endCell) {
    return next();
  }

  const targetCellPath = document.getPath(targetCell.key);
  const startCellPath = document.getPath(startCell.key);
  const endCellPath = document.getPath(endCell.key);

  if (_everCangjie.Path.compare(targetCellPath, startCellPath) >= 0 && _everCangjie.Path.compare(targetCellPath, endCellPath) <= 0) {
    event.preventDefault();
    return;
  }

  return next();
}
//# sourceMappingURL=onMouseDown.js.map