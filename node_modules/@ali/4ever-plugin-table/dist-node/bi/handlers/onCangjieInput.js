"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onCangjieInput;

var _everCangjie = require("@ali/4ever-cangjie");

var _types = require("../types");

var _isSelectionAcrossTable = _interopRequireDefault(require("../utils/isSelectionAcrossTable"));

var _utils = require("../utils");

var _setSelectionByTable = _interopRequireDefault(require("../../utils/utils/setSelectionByTable"));

function onCangjieInput(event, controller, next) {
  const {
    value
  } = controller;
  const {
    selection,
    document
  } = value;
  const tableSelection = controller.query('tableSelection');

  if (tableSelection) {
    const table = document.getNode(tableSelection.key);

    if (!table) {
      return next();
    }

    const {
      startRowIndex,
      startColIndex
    } = tableSelection;
    const cell = (0, _utils.getRealNodeInTable)(table, startRowIndex, startColIndex);
    const s = selection.moveToRangeOfNode(cell, controller);
    controller.command(_everCangjie.Commands.select, (0, _setSelectionByTable.default)(s, false));
    return next();
  }

  if ((0, _isSelectionAcrossTable.default)(value)) {
    const s = selection.moveToFocus();
    controller.command(_everCangjie.Commands.select, (0, _setSelectionByTable.default)(s, false));
    return next();
  }

  const start = selection.getStart(document);
  const startCell = document.getClosest(start.key, _types.isTableCell);

  if (event.detail.type === 'deleteContentBackward' && selection.isCollapsed && startCell && startCell.nodes.length === 1) {
    const onlyBlock = startCell.nodes[0]; // 非法表格（从 word 导入）中，cell 子节点可能是 text

    if (onlyBlock?.nodes?.length !== 1) {
      return next();
    }

    const onlyChildOfOnlyBlock = onlyBlock.nodes[0];

    if (onlyChildOfOnlyBlock.text === '') {
      return controller;
    }
  }

  return next();
}
//# sourceMappingURL=onCangjieInput.js.map