"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onSelectAll;

var _fastDeepEqual = _interopRequireDefault(require("fast-deep-equal"));

var _everCangjie = require("@ali/4ever-cangjie");

var _models = _interopRequireDefault(require("../../mo/models"));

var _everUtils = require("@ali/4ever-utils");

var _isSelectionInTableCell = _interopRequireDefault(require("../utils/isSelectionInTableCell"));

var _isSelectWholeTable = _interopRequireDefault(require("../queries/isSelectWholeTable"));

var _types = require("../types");

var _tableSelection = _interopRequireDefault(require("../queries/tableSelection"));

var _actions = require("../actions");

function isEmptyCell(cell) {
  return cell.nodes.length === 1 && (0, _everUtils.isEmptyParagraph)(cell.nodes[0]);
}

function isSelectWholeCell(controller, cell) {
  const {
    selection,
    document
  } = controller.value;

  if (selection.isCollapsed && !isEmptyCell(cell)) {
    return false;
  }

  const cellSelection = selection.moveToRangeOfNode(cell, controller);
  return (0, _fastDeepEqual.default)(cellSelection.sort(document), selection.sort(document));
}

function onSelectAll(controller, next, event) {
  const tbSelection = controller.query(_tableSelection.default); // 选中表格时，cmd + a 选择整个文档

  if (tbSelection) {
    const table = controller.value.document.getNode(tbSelection.key);

    if (controller.query(_isSelectWholeTable.default, {
      node: table
    })) {
      controller.command(_everCangjie.Commands.moveToRangeOfDocument);
      return controller;
    }
  }

  const {
    value
  } = controller;
  if (!(0, _isSelectionInTableCell.default)(value)) return next();
  const {
    document,
    startBlock
  } = value;

  if (!startBlock) {
    return next();
  }

  const cell = document.getClosest(startBlock.key, _types.isTableCell);

  if (!cell) {
    return next();
  }

  event?.preventDefault(); // 选中单元格时，cmd + a 选择整个表格

  if (isSelectWholeCell(controller, cell)) {
    const table = document.getClosest(cell.key, _models.default.isTable);

    if (table) {
      return controller.run('onAction', (0, _actions.selectTable)(table));
    }
  }

  return controller.command(_everCangjie.Commands.moveToRangeOfNode, cell);
}
//# sourceMappingURL=onSelectAll.js.map