{"version":3,"sources":["../../../../src/bi/utils/normalizeColsWidth.ts"],"names":["normalizeColsWidth","table","colsWidth","data","Array","isArray","nodes","length","fill","MIN_COL_WIDTH","map","c"],"mappings":";;;;;;;;;AACA;;AACA;;AAEe,SAASA,kBAAT,CAA4BC,KAA5B,EAAoD;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAK,CAACE,IAA5B;;AAEA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAL,EAA+B;AAC7B,WAAOE,KAAK,CAACH,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeA,KAAf,CAAqBC,MAAtB,CAAL,CAAmCC,IAAnC,CAAwCC,wBAAxC,CAAP;AACD;;AAED,SAAOP,SAAS,CAACQ,GAAV,CAAcC,CAAC,IAAK,uBAASA,CAAT,IAAcA,CAAd,GAAkBF,wBAAtC,CAAP;AACD","sourcesContent":["import Table from '../../mo/models';\nimport isNumber from './isNumber';\nimport { MIN_COL_WIDTH } from '../../utils/constants';\n\nexport default function normalizeColsWidth(table: Table): number[] {\n  const { colsWidth } = table.data;\n\n  if (!Array.isArray(colsWidth)) {\n    return Array(table.nodes[0].nodes.length).fill(MIN_COL_WIDTH);\n  }\n\n  return colsWidth.map(c => (isNumber(c) ? c : MIN_COL_WIDTH));\n}\n"],"file":"normalizeColsWidth.js"}