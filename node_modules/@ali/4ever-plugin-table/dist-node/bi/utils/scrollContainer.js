"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scrollHorizontal = scrollHorizontal;
exports.scrollHorizontalContainer = exports.scrollVerticalContainer = void 0;

var _lodash = require("lodash");

const AUTO_SCROLL_THRESHOLD = 0.05;
const AUTO_SCROLL_HEIGHT = 20;
const AUTO_SCROLL_WIDTH = 20;
const VERTICAL_THRESHOLD = 20;
const HORIZOTAL_THRESHOLD = 20;

function scrollVertical(y, container) {
  // @ts-ignore
  if (y === undefined || !container || container instanceof Window || !container.getBoundingClientRect) {
    return;
  }

  const {
    top,
    bottom
  } = container.getBoundingClientRect();

  if (y < top + VERTICAL_THRESHOLD || y < window.innerHeight * AUTO_SCROLL_THRESHOLD) {
    // @ts-ignore
    container.scrollTop -= AUTO_SCROLL_HEIGHT;
  } else if (y > bottom - VERTICAL_THRESHOLD || y > window.innerHeight * (1 - AUTO_SCROLL_THRESHOLD)) {
    // @ts-ignore
    container.scrollTop += AUTO_SCROLL_HEIGHT;
  }
}

const scrollVerticalContainer = (0, _lodash.throttle)(scrollVertical, 100, {
  leading: true
});
exports.scrollVerticalContainer = scrollVerticalContainer;

function scrollHorizontal(x, container) {
  if (x === undefined || !container || container instanceof Window || !container.getBoundingClientRect) {
    return;
  }

  const {
    left,
    right
  } = container.getBoundingClientRect();

  if (x < left + HORIZOTAL_THRESHOLD || x < window.innerWidth * AUTO_SCROLL_THRESHOLD) {
    container.scrollLeft -= AUTO_SCROLL_WIDTH;
  } else if (x > right - HORIZOTAL_THRESHOLD || x > window.innerWidth * (1 - AUTO_SCROLL_THRESHOLD)) {
    container.scrollLeft += AUTO_SCROLL_WIDTH;
  }
}

const scrollHorizontalContainer = (0, _lodash.throttle)(scrollHorizontal, 100, {
  leading: true
});
exports.scrollHorizontalContainer = scrollHorizontalContainer;
//# sourceMappingURL=scrollContainer.js.map