{"version":3,"sources":["../../../../src/bi/utils/getTableSelection.ts"],"names":["getTableSelection","controller","table","value","tableSelection"],"mappings":";;;;;;;;;AAEA;;AACA;;AACA;;AAIA,MAAMA,iBAAiB,GAAIC,UAAD,IAAwC;AAChE,QAAMC,KAAK,GAAG,uBAASD,UAAU,CAACE,KAApB,CAAd;AACA,MAAI,CAACD,KAAL,EAAY,OAAO,IAAP;AACZ,QAAME,cAAc,GAAG,2CAA6BH,UAA7B,EAAyCC,KAAzC,KACrB,iDAAmCD,UAAU,CAACE,KAA9C,EAAqDD,KAArD,CADF;AAEA,SAAOE,cAAP;AACD,CAND;;eAQeJ,iB","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { ITableSelection } from '../types';\nimport createTableSelectionForFocusedCell from './createTableSelectionForFocusedCell';\nimport getDataTableSelectionByTable from './getDataTableSelectionByTable';\nimport getTable from './getTable';\n\ntype ISelection = ITableSelection | null;\n\nconst getTableSelection = (controller: Controller): ISelection => {\n  const table = getTable(controller.value);\n  if (!table) return null;\n  const tableSelection = getDataTableSelectionByTable(controller, table) ||\n    createTableSelectionForFocusedCell(controller.value, table);\n  return tableSelection;\n};\n\nexport default getTableSelection;\n"],"file":"getTableSelection.js"}