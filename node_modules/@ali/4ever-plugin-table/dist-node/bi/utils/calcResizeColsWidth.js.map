{"version":3,"sources":["../../../../src/bi/utils/calcResizeColsWidth.ts"],"names":["calcResizeColsWidth","controller","table","delta","maxWidth","colsWidth","data","originalTotalWidth","reduce","acc","curr","expectTotalWidth","Math","min","Infinity","limitColWidths","map","_","i","MIN_COL_WIDTH","width","limitWidth","query","node","colIndex","resultColsWidth"],"mappings":";;;;;;;;;AAEA;;AACA;;AAEe,SAASA,mBAAT,CACbC,UADa,EAEbC,KAFa,EAGbC,KAHa,EAIbC,QAJa,EAKb;AACA,QAAMC,SAAS,GAAG,CAAC,IAAIH,KAAK,CAACI,IAAN,CAAWD,SAAX,IAAwB,EAA5B,CAAD,CAAlB;AACA,QAAME,kBAAkB,GAAGF,SAAS,CAACG,MAAV,CAAiB,CAACC,GAAD,EAAMC,IAAN,KAAgBD,GAAG,GAAGC,IAAvC,EAA8C,CAA9C,CAA3B;AACA,QAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAL,CACvBN,kBAAkB,GAAGJ,KADE,EAEvBC,QAAQ,IAAIU,QAFW,CAAzB;AAIA,QAAMC,cAAc,GAAGV,SAAS,CAACW,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7C,QAAIf,KAAK,IAAI,CAAb,EAAgB;AACd,aAAOgB,wBAAP;AACD;;AACD,UAAM;AAAEC,MAAAA,KAAK,EAAEC;AAAT,QAAwBpB,UAAU,CAACqB,KAAX,CAAiB,sBAAjB,EAAyC;AACrEC,MAAAA,IAAI,EAAErB,KAD+D;AAErEsB,MAAAA,QAAQ,EAAEN;AAF2D,KAAzC,KAGxB,EAHN;AAIA,WAAO,OAAOG,UAAP,KAAsB,QAAtB,GAAiCA,UAAjC,GAA8CF,wBAArD;AACD,GATsB,CAAvB;AAUA,QAAMM,eAAe,GAAG,0BACtBpB,SADsB,EAEtBM,gBAFsB,EAGtBI,cAHsB,CAAxB;AAKA,SAAOU,eAAP;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport { MIN_COL_WIDTH } from '../constants';\nimport resizeTable from '../utils/resizeTable';\n\nexport default function calcResizeColsWidth(\n  controller: Controller,\n  table: Table,\n  delta: number,\n  maxWidth?: number,\n) {\n  const colsWidth = [...(table.data.colsWidth || [])];\n  const originalTotalWidth = colsWidth.reduce((acc, curr) => (acc + curr), 0);\n  const expectTotalWidth = Math.min(\n    originalTotalWidth + delta,\n    maxWidth || Infinity,\n  );\n  const limitColWidths = colsWidth.map((_, i) => {\n    if (delta >= 0) {\n      return MIN_COL_WIDTH;\n    }\n    const { width: limitWidth } = controller.query('calcMinTableColWidth', {\n      node: table,\n      colIndex: i,\n    }) || {};\n    return typeof limitWidth === 'number' ? limitWidth : MIN_COL_WIDTH;\n  });\n  const resultColsWidth = resizeTable(\n    colsWidth,\n    expectTotalWidth,\n    limitColWidths,\n  );\n  return resultColsWidth;\n}\n"],"file":"calcResizeColsWidth.js"}