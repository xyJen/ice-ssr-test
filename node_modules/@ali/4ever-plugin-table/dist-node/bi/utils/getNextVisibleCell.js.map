{"version":3,"sources":["../../../../src/bi/utils/getNextVisibleCell.ts"],"names":["getNextNonHiddenCell","document","cell","direction","row","getClosest","key","isTableRow","nextRow","getPreviousSibling","getNextSibling","colIndex","nodes","indexOf","nextCell","length","data","hidden","table","isTable","rowIndex","ci","realCell"],"mappings":";;;;;;;AAIA;;AACA;;AAEe,SAASA,oBAAT,CACbC,QADa,EAEbC,IAFa,EAGbC,SAHa,EAIb;AACA,QAAMC,GAAG,GAAGH,QAAQ,CAACI,UAAT,CAAoBH,IAAI,CAACI,GAAzB,EAA8BC,iBAA9B,CAAZ;AACA,QAAMC,OAAO,GAAGL,SAAS,KAAK,IAAd,GACdF,QAAQ,CAACQ,kBAAT,CAA4BL,GAAG,CAACE,GAAhC,CADc,GAEdL,QAAQ,CAACS,cAAT,CAAwBN,GAAG,CAACE,GAA5B,CAFF;;AAGA,MAAI,CAACE,OAAL,EAAc;AACZ;AACD;;AAED,QAAMG,QAAQ,GAAGP,GAAG,CAACQ,KAAJ,CAAUC,OAAV,CAAkBX,IAAlB,CAAjB,CATA,CAUA;;AACA,QAAMY,QAAQ,GAAIN,OAAO,CAACI,KAAR,CAAcD,QAAd,KAA2BH,OAAO,CAACI,KAAR,CAAcJ,OAAO,CAACI,KAAR,CAAcG,MAAd,GAAuB,CAArC,CAA7C;;AACA,MAAI,CAACD,QAAL,EAAe;AACb;AACD;;AAED,MAAIA,QAAQ,CAACE,IAAT,CAAcC,MAAlB,EAA0B;AACxB,UAAMC,KAAK,GAAGjB,QAAQ,CAACI,UAAT,CAAoBS,QAAQ,CAACR,GAA7B,EAAkCa,cAAlC,CAAd;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYT,MAAAA,QAAQ,EAAEU;AAAtB,QAA6B,yBAAkBP,QAAQ,CAACR,GAA3B,EAAgCY,KAAhC,CAAnC;AACA,UAAMI,QAAQ,GAAG,0BAAmBJ,KAAnB,EAA0BE,QAA1B,EAAoCC,EAApC,CAAjB;;AACA,QAAIC,QAAQ,KAAKpB,IAAjB,EAAuB;AACrB,aAAOF,oBAAoB,CAACC,QAAD,EAAWa,QAAX,EAAqBX,SAArB,CAA3B;AACD;;AACD,WAAOmB,QAAP;AACD;;AAED,SAAOR,QAAP;AACD","sourcesContent":["import { Document } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableRow from '../../mo/models/tableRow';\nimport TableCell from '../../mo/models/tableCell';\nimport { getPositionOfCell, getRealNodeInTable } from '.';\nimport { isTableRow, isTable } from '../types';\n\nexport default function getNextNonHiddenCell(\n  document: Document,\n  cell: TableCell,\n  direction: 'up' | 'down',\n) {\n  const row = document.getClosest(cell.key, isTableRow) as TableRow;\n  const nextRow = direction === 'up' ?\n    document.getPreviousSibling(row.key) as TableRow :\n    document.getNextSibling(row.key) as TableRow;\n  if (!nextRow) {\n    return;\n  }\n\n  const colIndex = row.nodes.indexOf(cell);\n  // nextRow.nodes.last() 是为了处理不规则表格的情况\n  const nextCell = (nextRow.nodes[colIndex] || nextRow.nodes[nextRow.nodes.length - 1]) as TableCell;\n  if (!nextCell) {\n    return;\n  }\n\n  if (nextCell.data.hidden) {\n    const table = document.getClosest(nextCell.key, isTable) as Table;\n    const { rowIndex, colIndex: ci } = getPositionOfCell(nextCell.key, table)!;\n    const realCell = getRealNodeInTable(table, rowIndex, ci);\n    if (realCell === cell) {\n      return getNextNonHiddenCell(document, nextCell, direction);\n    }\n    return realCell;\n  }\n\n  return nextCell;\n}\n"],"file":"getNextVisibleCell.js"}