{"version":3,"sources":["../../../../src/bi/utils/calcTableSelectionPos.ts"],"names":["calcTableSelectionPos","params","tblSelection","table","colsWidth","colsWidthParams","tableNode","scale","absPostion","undefined","startRowIndex","startColIndex","endRowIndex","endColIndex","startRow","nodes","endRow","TableRow","isTableRow","dataColsWidth","data","Array","isArray","Table","isAutofitWidth","tableWidth","getBoundingClientRect","width","totalColsWidth","reduce","acc","w","map","left","slice","c","right","Math","max","firstRow","startCell","endCell","relativeParent","parentElement","firstRowDOM","querySelector","key","startRowNode","endRowNode","startCellRect","endCellRect","firstCellRect","top","bottom","height","topDelta","isSticky","lastRow","length","lastRowDOM","domUtils","findDOMNodeSafely","tableBottom","lastRowBottom","relativeBottom","isSelectWholeCol","isSelectFirstRow","heightDelta","parentRect"],"mappings":"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","sourcesContent":["import { domUtils } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableRow from '../../mo/models/tableRow';\nimport { getBoundingRelativeRect } from '@ali/4ever-utils';\nimport { ITableSelection } from '../types';\n\ninterface CalcTableSelectionPosParams {\n  tblSelection: ITableSelection;\n  table: Table;\n  colsWidth?: Table['data']['colsWidth'];\n  tableNode: HTMLTableElement | null;\n  scale?: number;\n  absPostion?: boolean;\n}\n\n// TODO: memorize\n// 提取计算表格选区的方法，供极简工具栏使用\nconst calcTableSelectionPos = (params: CalcTableSelectionPosParams) => {\n  const {\n    tblSelection,\n    table,\n    colsWidth: colsWidthParams,\n    tableNode,\n    scale = 1,\n    absPostion,\n  } = params;\n  if (\n    !tblSelection ||\n    !tableNode\n  ) {\n    return undefined;\n  }\n  const {\n    startRowIndex, startColIndex, endRowIndex, endColIndex,\n  } = tblSelection;\n\n  const startRow = table.nodes[startRowIndex];\n  const endRow = table.nodes[endRowIndex];\n  if (!TableRow.isTableRow(startRow) || !TableRow.isTableRow(endRow)) {\n    return undefined;\n  }\n\n  let colsWidth = colsWidthParams;\n  if (!colsWidth) {\n    const dataColsWidth = table.data.colsWidth;\n    if (!Array.isArray(dataColsWidth)) return undefined;\n\n    colsWidth = dataColsWidth;\n    if (Table.isAutofitWidth(table)) {\n      const tableWidth = tableNode.getBoundingClientRect().width;\n      const totalColsWidth = dataColsWidth.reduce((acc, w) => (acc + w));\n      colsWidth = dataColsWidth.map(w => (w / totalColsWidth * tableWidth / scale));\n    }\n  }\n\n  let left = colsWidth\n    .slice(0, startColIndex)\n    .reduce((acc, c) => (acc + c), 0);\n  const right = colsWidth\n    .slice(0, endColIndex + 1)\n    .reduce((acc, c) => (acc + c), 0);\n  const width = Math.max(0, (right - left));\n\n  const firstRow = table.nodes[0];\n\n  const startCell = startRow.nodes[startColIndex];\n  const endCell = endRow.nodes[endColIndex];\n  if (!startCell || !endCell) {\n    return undefined;\n  }\n\n  const relativeParent = tableNode.parentElement;\n\n  if (!relativeParent) return undefined;\n\n  const firstRowDOM: HTMLDivElement | null = relativeParent.querySelector(`[data-cangjie-key=\"${firstRow.key}\"]`);\n  const startRowNode: HTMLDivElement | null = relativeParent.querySelector(`[data-cangjie-key=\"${startRow.key}\"]`);\n  const endRowNode: HTMLDivElement | null = relativeParent.querySelector(`[data-cangjie-key=\"${endRow.key}\"]`);\n\n  if (!startRowNode || !endRowNode || !firstRowDOM) {\n    return undefined;\n  }\n\n  const startCellRect = getBoundingRelativeRect(startRowNode, relativeParent);\n  const endCellRect = getBoundingRelativeRect(endRowNode, relativeParent);\n  const firstCellRect = getBoundingRelativeRect(firstRowDOM, relativeParent);\n  let { top } = startCellRect;\n  const bottom = Math.max(startCellRect.bottom, endCellRect.bottom);\n  const height = (bottom - top) / scale;\n  let topDelta = 0;\n  let isSticky = false;\n  // 纠正 top 值（在高版本 chrome 中可能会有 0.5px 的偏移，在此消除偏移）\n  if (firstCellRect.top !== 0) {\n    // 若首行单元格的相对表格的 top 比较大，说明首行处于 sticky 状态\n    isSticky = firstCellRect.top > 1 || firstCellRect.top < -1;\n    if (!isSticky) {\n      topDelta = firstCellRect.top;\n    } else if (startRowIndex !== 0) {\n      const lastRow = table.nodes[table.nodes.length - 1];\n      const lastRowDOM = domUtils.findDOMNodeSafely(lastRow.key, relativeParent);\n      if (lastRowDOM) {\n        const tableBottom = relativeParent.getBoundingClientRect().bottom;\n        const lastRowBottom = lastRowDOM.getBoundingClientRect().bottom;\n        const relativeBottom = tableBottom - lastRowBottom;\n        if (relativeBottom < 1 && relativeBottom > -1) {\n          topDelta = relativeBottom;\n        }\n      }\n    }\n  }\n  const isSelectWholeCol = startRowIndex === 0 && endRowIndex === table.nodes.length - 1;\n  const isSelectFirstRow = startRowIndex === 0 && endRowIndex === 0;\n  // sticky 状态下选中整列时，高度不要 +1，否则会出现纵向滚动条\n  const heightDelta = isSticky && (isSelectWholeCol || isSelectFirstRow) ? 0 : 1;\n\n  top = (top - topDelta) / scale;\n  // 计算绝对位置（默认计算相对 table 位置）\n  if (absPostion) {\n    const parentRect = relativeParent.getBoundingClientRect();\n    top += parentRect.top / scale;\n    left += parentRect.left / scale;\n  }\n  return ({\n    top,\n    left,\n    width: width + 1,\n    height: height + heightDelta,\n  });\n};\n\nexport default calcTableSelectionPos;\n"],"file":"calcTableSelectionPos.js"}