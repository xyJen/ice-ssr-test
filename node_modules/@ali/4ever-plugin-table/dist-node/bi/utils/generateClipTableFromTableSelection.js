"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = generateClipTableFromTableSelection;

var _everCangjie = require("@ali/4ever-cangjie");

var _models = _interopRequireDefault(require("../../mo/models"));

var _lodash = require("lodash");

/**
 * 从一个 table 中剪切一个区域
 * @param table
 * @param tableSelection
 */
function generateClipTableFromTableSelection(table, tableSelection) {
  const {
    startRowIndex,
    startColIndex,
    endRowIndex,
    endColIndex
  } = tableSelection;
  const tableJs = (0, _lodash.cloneDeep)(table.toJSON());
  const tableData = tableJs.data;

  if (tableData) {
    tableData.colsWidth = (tableData.colsWidth || []).splice(startColIndex, endColIndex - startColIndex + 1);

    if (_models.default.isColumnHeader(table) && startColIndex !== 0) {
      delete tableData.isColumnHeader;
    }
  }

  if (tableJs.nodes) {
    tableJs.nodes = tableJs.nodes.splice(startRowIndex, endRowIndex - startRowIndex + 1);
    tableJs.nodes.forEach(row => {
      if (row.klass !== 'text' && row.nodes) {
        // eslint-disable-next-line no-param-reassign
        row.nodes = row.nodes.splice(startColIndex, endColIndex - startColIndex + 1);
      }
    });
  }

  const clipTable = _everCangjie.Block.fromJSON({ ...tableJs,
    data: tableData
  });

  const fragment = _everCangjie.Document.create({
    nodes: [clipTable]
  });

  return fragment;
}
//# sourceMappingURL=generateClipTableFromTableSelection.js.map