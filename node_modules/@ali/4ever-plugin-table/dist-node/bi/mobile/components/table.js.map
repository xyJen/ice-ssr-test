{"version":3,"sources":["../../../../../src/bi/mobile/components/table.tsx"],"names":["Wrapper","styled","div","MOBILE_SPACING","TOOLBAR_ITEM_SIZE_MOBILE","SCROLL_BAR_HEIGHT","TableWithSelection","ScrollContent","Table","props","node","controller","children","tableConfig","enableToolbar","isFocused","selection","value","toolbarVisible","setToolbarVisible","React","useState","zoomContainer","window","document","body","shouldShowTableRightShadow","setShouldShowTableRightShadow","tableRef","wrapperRef","tableLeftShadowRef","tableRightShadowRef","updateShadowRafIdRef","updateShadowState","current","cancelAnimationFrame","requestAnimationFrame","fastdom","measure","table","realTableWrapper","tableRect","realTableWrapperRect","scrollableContentWidth","width","newShouldShowRight","scrollLeft","updateShadowHeight","height","Math","round","style","isMountedRef","run","DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT","handleTableScroll","onScroll","getTableSelection","tblSelections","query","curTableSelection","find","ts","key","activeRowRange","selecteRowRange","activeColRange","selecteColRange","activeSelection","tableSelection","selectionType","data","tableType","start","startRowIndex","end","endRowIndex","startColIndex","endColIndex","includeTable","isSelected","useEffect","_","forceUpdate","useReducer","c","onHots","useCallback","hots","some","hot","hasNode","left","overflowY","locale","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport fastdom from 'fastdom';\nimport { throttle } from 'lodash-es';\nimport styled from 'styled-components';\nimport { useZoomContainer, RenderNodeProps, useSelectingHots, Hot } from '@ali/4ever-cangjie';\nimport { getBoundingRelativeRect } from '@ali/4ever-utils';\nimport MoTable from '../../../mo/models';\nimport { TableRightSideShadow } from '../../components/styled';\nimport { MobileTableConfig } from '../../types';\nimport { adjustColsWidth } from '../../actions';\nimport { DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT, SCROLL_BAR_HEIGHT, MOBILE_SPACING } from '../../../utils/constants';\nimport TableScrollContainer from '../../../components/tableScrollContainer';\nimport PureTable from '../../../components/pureTable';\nimport { ContextContainer } from '../../components/contextContainer';\nimport type { Range } from '../../components/rowColToolbarItemRect';\nimport { MobileRowToolbar } from './toolbar/mobileRowToolbar';\nimport { MobileColToolbar } from './toolbar/mobileColToolbar';\nimport { getToolbarTableSelection } from '../../utils/getToolbarTableSelection';\nimport TableSelection from '../../components/tableSelection';\nimport {\n  getSelectedRowRangeFromTableSelection,\n  getSelectedColRangeFromTableSelection,\n} from '../../utils/getSelectedRangeFromTableSelection';\nimport getDataTableSelectionByTable from '../../utils/getDataTableSelectionByTable';\nimport getTableIsSelected from '../../../utils/utils/getTableIsSelected';\nimport { FloatToolbar } from './floatToolbar';\nimport { TOOLBAR_ITEM_SIZE_MOBILE } from '../../constants';\nimport { Scrollbar } from './scrollbar';\n\ntype Props = {\n  tableConfig: MobileTableConfig;\n} & Omit<RenderNodeProps<MoTable>, 'attributes'>;\n\nconst Wrapper = styled.div`\n  position: relative;\n  // 使表格上下间距一致\n  padding-top: ${MOBILE_SPACING - TOOLBAR_ITEM_SIZE_MOBILE}px;\n  padding-bottom: ${MOBILE_SPACING - SCROLL_BAR_HEIGHT}px;\n`;\n\nconst TableWithSelection = styled.div`\n  position: relative;\n`;\n\nconst ScrollContent = styled.div`\n  position: relative;\n  left: ${TOOLBAR_ITEM_SIZE_MOBILE}px;\n  width: calc(100% - ${TOOLBAR_ITEM_SIZE_MOBILE}px);\n`;\n\nconst Table = (props: Props) => {\n  const { node, controller, children, tableConfig } = props;\n  const { enableToolbar } = tableConfig;\n  const { isFocused, selection } = controller.value;\n  const [toolbarVisible, setToolbarVisible] = React.useState(!!enableToolbar && isFocused);\n  const zoomContainer = useZoomContainer() || window.document.body;\n\n  const [shouldShowTableRightShadow, setShouldShowTableRightShadow] = useState(false);\n\n  const tableRef = useRef<HTMLTableElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const tableLeftShadowRef = useRef<HTMLDivElement>(null);\n  const tableRightShadowRef = useRef<HTMLDivElement>(null);\n  const updateShadowRafIdRef = useRef<number>(0);\n\n  const updateShadowState = () => {\n    // 文档模型更新后，DOM 不会立刻更新，所以需要等待 DOM 更新后再计算阴影的状态\n    if (updateShadowRafIdRef.current !== -1) {\n      window.cancelAnimationFrame(updateShadowRafIdRef.current);\n    }\n    updateShadowRafIdRef.current = window.requestAnimationFrame(() => {\n      fastdom.measure(() => {\n        const table = tableRef.current;\n        const realTableWrapper = wrapperRef.current;\n        if (!table || !realTableWrapper) {\n          return;\n        }\n        const tableRect = getBoundingRelativeRect(table, zoomContainer);\n\n        const realTableWrapperRect = getBoundingRelativeRect(\n          realTableWrapper,\n          zoomContainer,\n        );\n        const scrollableContentWidth = tableRect.width;\n        const newShouldShowRight =\n          scrollableContentWidth - realTableWrapper.scrollLeft >\n          realTableWrapperRect.width;\n        if (\n          newShouldShowRight !== shouldShowTableRightShadow\n        ) {\n          setShouldShowTableRightShadow(newShouldShowRight);\n        }\n      });\n    });\n  };\n\n  const updateShadowHeight = () => {\n    if (!tableRef.current) {\n      return;\n    }\n\n    const tableRect = getBoundingRelativeRect(tableRef.current, zoomContainer);\n    const height = `${Math.round(tableRect.height)}px`;\n\n    if (tableLeftShadowRef.current) {\n      tableLeftShadowRef.current.style.height = height;\n    }\n    if (tableRightShadowRef.current) {\n      tableRightShadowRef.current.style.height = height;\n    }\n  };\n\n  const isMountedRef = useRef(false);\n  useEffect(() => {\n    fastdom.measure(() => {\n      updateShadowHeight();\n    });\n    controller.run(\n      'onAction',\n      adjustColsWidth(node, DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT),\n    );\n    if (!isMountedRef.current) {\n      updateShadowState();\n      isMountedRef.current = true;\n    }\n  });\n\n  const handleTableScroll = throttle(() => {\n    if (!wrapperRef.current) {\n      return;\n    }\n    if (tableConfig?.onScroll) {\n      tableConfig.onScroll(wrapperRef.current, node);\n    }\n    updateShadowState();\n  });\n\n  const getTableSelection = () => {\n    const tblSelections = controller.query(\n      'viewTableSelections',\n    );\n    if (!tblSelections) {\n      return null;\n    }\n    const curTableSelection = tblSelections.find(\n      (ts) => ts.key === node.key,\n    );\n    if (!curTableSelection) {\n      return null;\n    }\n    return curTableSelection;\n  };\n\n  let activeRowRange: Range | null = null;\n  let selecteRowRange: Range | null = null;\n  let activeColRange: Range | null = null;\n  let selecteColRange: Range | null = null;\n\n  const activeSelection = getToolbarTableSelection(controller, node);\n  const tableSelection = getDataTableSelectionByTable(controller, node);\n  const selectionType = selection.data.tableType;\n  activeRowRange = activeSelection\n    ? {\n      start: activeSelection.startRowIndex,\n      end: activeSelection.endRowIndex,\n    }\n    : null;\n  activeColRange = activeSelection\n    ? {\n      start: activeSelection.startColIndex,\n      end: activeSelection.endColIndex,\n    }\n    : null;\n  if (selectionType === 'row') {\n    selecteRowRange = getSelectedRowRangeFromTableSelection({\n      controller,\n      table: node,\n      tableSelection,\n      includeTable: true,\n    });\n  } else if (selectionType === 'col') {\n    selecteColRange = getSelectedColRangeFromTableSelection({\n      controller,\n      table: node,\n      tableSelection,\n      includeTable: true,\n    });\n  }\n  const isSelected = getTableIsSelected(node, controller);\n\n  React.useEffect(() => {\n    if (isFocused && enableToolbar) {\n      setToolbarVisible(true);\n    }\n  }, [isFocused, enableToolbar]);\n\n  const [_, forceUpdate] = React.useReducer((c) => c + 1, 0);\n\n  const onHots = React.useCallback((hots: Hot[]) => {\n    // PERF: 非当前表格热区不处理\n    if (\n      hots.some(\n        (hot) => node.key === hot.node.key || node.hasNode(hot.node.key),\n      )\n    ) {\n      forceUpdate();\n    }\n  }, [node]);\n\n  useSelectingHots(controller, onHots);\n\n  return (\n    <Wrapper data-type=\"table\">\n      <ContextContainer isSelected={isSelected}>\n        <TableScrollContainer\n          ref={wrapperRef}\n          className=\"real-table-wrapper\"\n          table={node}\n          controller={controller}\n          onScroll={handleTableScroll}\n          isMobile\n          style={{\n            left: -TOOLBAR_ITEM_SIZE_MOBILE,\n            width: `calc(100% + ${TOOLBAR_ITEM_SIZE_MOBILE}px)`,\n            overflowY: 'hidden',\n          }}\n          hideScrollBar\n        >\n          <MobileRowToolbar\n            table={node}\n            controller={controller}\n            visible={isSelected && toolbarVisible}\n            activeRange={activeRowRange}\n            selectRange={selecteRowRange}\n          />\n          <ScrollContent>\n            <MobileColToolbar\n              table={node}\n              controller={controller}\n              visible={toolbarVisible && isSelected}\n              activeRange={activeColRange}\n              selectRange={selecteColRange}\n            />\n            <TableWithSelection>\n              <PureTable\n                ref={tableRef}\n                node={node}\n                controller={controller}\n                isMobile\n              >\n                {children()}\n              </PureTable>\n              {toolbarVisible && <TableSelection\n                data-testid=\"table-selection-wrapper\"\n                node={node}\n                controller={controller}\n                selection={tableSelection}\n                tableRef={tableRef}\n                getTableSelection={getTableSelection}\n              />}\n            </TableWithSelection>\n          </ScrollContent>\n        </TableScrollContainer>\n        <Scrollbar\n          scrollContainer={wrapperRef.current}\n          scrollContent={tableRef.current}\n        />\n        {toolbarVisible && <FloatToolbar\n          controller={controller}\n          table={node}\n          tableSelection={tableSelection}\n          tableRef={tableRef}\n          locale={tableConfig.locale}\n          selecteRowRange={selecteRowRange}\n          selecteColRange={selecteColRange}\n        />}\n      </ContextContainer>\n      <TableRightSideShadow\n        ref={tableRightShadowRef}\n        style={{\n          display: shouldShowTableRightShadow ? 'block' : 'none',\n        }}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Table;\n"],"file":"table.js"}