"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getToolbarPosition = void 0;

var _constants = require("../../../../constants");

const MIN_SPACE = 6;
const MIN_TOP_SPACE = 42; // toolbar 和表格距离（垂直方向）

const SPACE_BETWEEN_TOOLBAR_TABLE = 11; // 按钮宽 56，toolbar 左右 padding 4

const TOOLBAR_WIDTH = 56 * 5 + 4 * 2; // 按钮高 54，toolbar 上下 paading 8，divider 高 9

const TOOLBAR_HEIGHT = 54 * 2 + 8 * 2 + 9;

const getToolbarPosition = params => {
  const {
    targetRect,
    toolbarType
  } = params;
  let x = 0; // 将 selectionRect 纠正为表格内部工具栏 Rect

  if (toolbarType === 'row') {
    x = targetRect.left;
  } else {
    x = targetRect.left + targetRect.width / 2 - TOOLBAR_WIDTH / 2;

    if (x + TOOLBAR_WIDTH > window.innerWidth) {
      x = window.innerWidth - MIN_SPACE - TOOLBAR_WIDTH;
    }
  }

  x = Math.max(MIN_SPACE, x); // toolbar 距离顶部至少 MIN_TOP_SPACE

  const targetTop = toolbarType === 'row' ? targetRect.top : targetRect.top - _constants.TOOLBAR_ITEM_SIZE_MOBILE;
  let y = targetTop - TOOLBAR_HEIGHT - SPACE_BETWEEN_TOOLBAR_TABLE;
  const targetHeight = toolbarType === 'row' ? targetRect.height : _constants.TOOLBAR_ITEM_SIZE_MOBILE;

  if (y < MIN_TOP_SPACE) {
    y = Math.max(MIN_TOP_SPACE, targetTop + targetHeight + SPACE_BETWEEN_TOOLBAR_TABLE);
  }

  return {
    x,
    y
  };
};

exports.getToolbarPosition = getToolbarPosition;
//# sourceMappingURL=getToolbarPostion.js.map