{"version":3,"sources":["../../../../../../src/bi/mobile/components/floatToolbar/basic.tsx"],"names":["Row","Divider","Slot","FloatToolbarMobile","BasicFloatToolbar","props","toolbarLayout","style","shouldRender","length","width","zIndex","position","map","configs","i","config","key","title","icon","onClick"],"mappings":";;;;;;;;;AAAA;;AACA;;uBAA4B,a;AAE5B,MAAM;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,IAAyBC,gCAA/B;;AAcO,MAAMC,iBAAiB,GAAIC,KAAD,IAAkB;AACjD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA2BF,KAAjC;AACA,QAAMG,YAAY,GAAGF,aAAa,CAACG,MAAd,GAAuB,CAA5C;AACA,SACED,YAAY,gBACV,eAAC,gCAAD;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,KAAK,EAAE,aADF;AAELC,MAAAA,MAAM,EAAE,KAFH;AAGLC,MAAAA,QAAQ,EAAE,OAHL;AAIL,SAAGL;AAJE;AADT,KAQGD,aAAa,CAACO,GAAd,CAAkB,CAACC,OAAD,EAAUC,CAAV,kBACjB,2DACE,eAAC,GAAD;AAAK,IAAA,GAAG,EAAG,OAAMA,CAAE;AAAnB,KACGD,OAAO,CAACD,GAAR,CAAaG,MAAD,iBACX,eAAC,IAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACC,GADd;AAEE,IAAA,KAAK,EAAED,MAAM,CAACE,KAFhB;AAGE,IAAA,IAAI,EAAEF,MAAM,CAACG,IAHf;AAIE,IAAA,OAAO,EAAEH,MAAM,CAACI;AAJlB,IADD,CADH,CADF,EAWGL,CAAC,KAAKT,aAAa,CAACG,MAAd,GAAuB,CAA7B,iBAAkC,eAAC,OAAD;AAAS,IAAA,GAAG,EAAG,WAAUM,CAAE;AAA3B,IAXrC,CADD,CARH,CADU,GAyBR,IA1BN;AA4BD,CA/BM","sourcesContent":["import React from 'react';\nimport { FloatToolbarMobile } from '@ali/we-design-next';\n\nconst { Row, Divider, Slot } = FloatToolbarMobile;\n\nexport interface LayoutConfig {\n  key?: string;\n  icon: React.ReactNode;\n  title: string;\n  onClick?: (e: any) => void;\n}\n\ntype Props = {\n  // 二维数组，每一数组代表一行\n  toolbarLayout: LayoutConfig[][];\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const BasicFloatToolbar = (props: Props) => {\n  const { toolbarLayout, style } = props;\n  const shouldRender = toolbarLayout.length > 0;\n  return (\n    shouldRender ?\n      <FloatToolbarMobile\n        style={{\n          width: 'fit-content',\n          zIndex: 10000,\n          position: 'fixed',\n          ...style,\n        }}\n      >\n        {toolbarLayout.map((configs, i) => (\n          <>\n            <Row key={`row_${i}`}>\n              {configs.map((config) => (\n                <Slot\n                  key={config.key}\n                  title={config.title}\n                  icon={config.icon}\n                  onClick={config.onClick}\n                />\n              ))}\n            </Row>\n            {i !== toolbarLayout.length - 1 && <Divider key={`divider_${i}`} />}\n          </>\n        ))}\n      </FloatToolbarMobile>\n      : null\n  );\n};\n"],"file":"basic.js"}