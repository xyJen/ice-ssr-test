{"version":3,"sources":["../../../../../../src/bi/mobile/components/floatToolbar/index.tsx"],"names":["SINGLE_ROW_BUTTON_LENGTH","FloatToolbar","props","controller","table","tableSelection","tableRef","locale","selecteColRange","selecteRowRange","isByTable","tableType","value","selection","data","pixelColsWidth","toolbarNodeRef","React","useRef","style","setStyle","useState","toolbarType","setToolbarVisible","visible","current","opacity","visibility","hideToolbar","useCallback","toolbarLayout","useMemo","layout","type","slice","updateStyle","selectionRect","tableNode","tblSelection","colsWidth","absPostion","x","y","targetRect","left","top","useEffect","onStart","onEnd","ReactDOM","createPortal","transition","document","body"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Controller, useScroll } from '@ali/4ever-cangjie';\nimport { BasicFloatToolbar, LayoutConfig } from './basic';\nimport { ITableSelection, TableConfig } from '../../../types';\nimport Table from '../../../../mo/models';\nimport {\n  getSelectedColRangeFromTableSelection,\n  getSelectedRowRangeFromTableSelection,\n} from '../../../utils/getSelectedRangeFromTableSelection';\nimport calcTableSelectionPos from '../../../utils/calcTableSelectionPos';\nimport { usePixelColsWidth } from '../../../../utils/hooks';\nimport { getToolbarPosition } from './utils/getToolbarPostion';\nimport { createToolbarLayout } from './utils/createToolbarLayout';\n\nexport const SINGLE_ROW_BUTTON_LENGTH = 5;\n\ninterface Range {\n  start: number;\n  end: number;\n}\n\ntype Props = {\n  controller: Controller;\n  table: Table;\n  tableSelection: ITableSelection | null;\n  tableRef: React.RefObject<HTMLTableElement>;\n  locale?: TableConfig['locale'];\n  selecteColRange: Range | null;\n  selecteRowRange: Range | null;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const FloatToolbar = (props: Props) => {\n  const {\n    controller,\n    table,\n    tableSelection,\n    tableRef,\n    locale,\n    selecteColRange,\n    selecteRowRange,\n  } = props;\n  const { isByTable, tableType } = controller.value.selection.data;\n  const [pixelColsWidth] = usePixelColsWidth();\n  const toolbarNodeRef = React.useRef<HTMLDivElement>(null);\n  const [style, setStyle] = React.useState<React.CSSProperties>({});\n\n  let toolbarType = tableType;\n  selecteColRange && (toolbarType = 'col');\n  selecteRowRange && (toolbarType = 'row');\n\n  const setToolbarVisible = (visible: boolean) => {\n    if (!toolbarNodeRef.current) return;\n\n    toolbarNodeRef.current.style.opacity = visible ? '1' : '0';\n    toolbarNodeRef.current.style.visibility = visible ? 'unset' : 'hidden';\n  };\n\n  const hideToolbar = React.useCallback(() => setToolbarVisible(false), []);\n\n  const toolbarLayout: LayoutConfig[][] | null = React.useMemo(() => {\n    if (!toolbarType || !tableSelection) return [];\n\n    const layout = createToolbarLayout({\n      controller,\n      table,\n      hideToolbar,\n      type: toolbarType,\n      tableSelection,\n      locale,\n    });\n\n    return [\n      layout.slice(0, SINGLE_ROW_BUTTON_LENGTH),\n      layout.slice(SINGLE_ROW_BUTTON_LENGTH),\n    ];\n  }, [controller, hideToolbar, table, tableSelection, toolbarType, locale]);\n\n  const updateStyle = () => {\n    if (\n      !toolbarType\n      || !tableSelection\n      || !toolbarNodeRef.current\n      || !isByTable\n    ) {\n      setToolbarVisible(false);\n      return;\n    }\n\n    const selectionRect = calcTableSelectionPos({\n      table,\n      tableNode: tableRef.current,\n      tblSelection: tableSelection,\n      colsWidth: pixelColsWidth,\n      absPostion: true,\n    });\n    if (!selectionRect) {\n      setToolbarVisible(false);\n      return;\n    }\n\n    const { x, y } = getToolbarPosition({\n      targetRect: selectionRect,\n      toolbarType,\n    });\n    setToolbarVisible(true);\n    setStyle({\n      left: x,\n      top: y,\n    });\n  };\n\n  // 表格选区变化时更新 toolbar 位置\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(updateStyle, [tableSelection, table]);\n\n  useScroll({\n    onStart: () => {\n      setToolbarVisible(false);\n    },\n    onEnd: () => {\n      updateStyle();\n    },\n  });\n\n  return (\n    ReactDOM.createPortal((\n      <div ref={toolbarNodeRef}>\n        <BasicFloatToolbar\n          toolbarLayout={toolbarLayout}\n          style={{\n            transition: 'opacity .3s',\n            ...style,\n          }}\n        />\n      </div>\n    ), document.body)\n  );\n};\n"],"file":"index.js"}