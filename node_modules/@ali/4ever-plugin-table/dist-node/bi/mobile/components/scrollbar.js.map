{"version":3,"sources":["../../../../../src/bi/mobile/components/scrollbar.tsx"],"names":["SCROLLER_BG_COLOR","SCROLLER_BORDER_COLOR","Container","styled","div","SCROLL_BAR_HEIGHT","Slider","Scrollbar","props","scrollContainer","scrollContent","containerWidth","setContainerWidth","prevContainerWidthRef","contentWidth","setContentWidth","prevContentWidthRef","sliderRef","handleContentResize","rect","width","current","handleContainerResize","TOOLBAR_ITEM_SIZE_MOBILE","hideSliderTimer","showSlider","visible","style","opacity","handleScroll","clearTimeout","left","scrollLeft","clientWidth","transform","setTimeout","addEventListener","removeEventListener","scrollerWidth"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { SCROLL_BAR_HEIGHT } from '../../../utils/constants';\nimport useResizeObserver from '../../../utils/utils/useResizeObserver';\nimport { TOOLBAR_ITEM_SIZE_MOBILE } from '../../constants';\n\nconst SCROLLER_BG_COLOR = 'rgba(31, 35, 41, .3)';\nconst SCROLLER_BORDER_COLOR = 'rgba(242, 243, 245, .3)';\n\ninterface ScrollbarProps {\n  scrollContainer: HTMLDivElement | null;\n  scrollContent: HTMLTableElement | null;\n}\n\nconst Container = styled.div`\n  position: relative;\n  height: ${SCROLL_BAR_HEIGHT}px;\n  padding-top: 2px;\n  box-sizing: border-box;\n`;\n\nconst Slider = styled.div`\n  position: absolute;\n  height: 4px;\n  border-radius: 3px;\n  background-color: ${SCROLLER_BG_COLOR};\n  border: 1px solid ${SCROLLER_BORDER_COLOR};\n  opacity: 0;\n`;\n\nexport const Scrollbar = (props: ScrollbarProps) => {\n  const { scrollContainer, scrollContent } = props;\n  const [containerWidth, setContainerWidth] = useState(0);\n  const prevContainerWidthRef = useRef(0);\n  const [contentWidth, setContentWidth] = useState(0);\n  const prevContentWidthRef = useRef(0);\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const handleContentResize = useCallback((rect: DOMRect) => {\n    if (rect.width !== prevContainerWidthRef.current) {\n      setContentWidth(rect.width);\n      prevContainerWidthRef.current = rect.width;\n    }\n  }, []);\n  useResizeObserver(scrollContent, handleContentResize);\n\n  const handleContainerResize = useCallback((rect) => {\n    if (rect.width !== prevContentWidthRef.current) {\n      setContainerWidth(rect.width - TOOLBAR_ITEM_SIZE_MOBILE);\n      prevContentWidthRef.current = rect.width;\n    }\n  }, []);\n  useResizeObserver(scrollContainer, handleContainerResize);\n\n  // 更新滚动条位置\n  useEffect(() => {\n    if (!scrollContainer) return () => {};\n\n    let hideSliderTimer;\n    const showSlider = (visible: boolean) => {\n      if (sliderRef.current) {\n        sliderRef.current.style.opacity = visible ? '1' : '0';\n      }\n    };\n\n    const handleScroll = () => {\n      if (!sliderRef.current || !scrollContainer) return;\n\n      clearTimeout(hideSliderTimer);\n      showSlider(true);\n      const left = scrollContainer.scrollLeft * 100 / (scrollContainer.clientWidth - TOOLBAR_ITEM_SIZE_MOBILE);\n      sliderRef.current.style.transform = `translateX(${left}%)`;\n      hideSliderTimer = setTimeout(() => {\n        showSlider(false);\n      }, 500);\n    };\n    scrollContainer.addEventListener('scroll', handleScroll);\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleScroll);\n    };\n  }, [scrollContainer]);\n\n  const scrollerWidth = containerWidth / contentWidth * containerWidth;\n  return (\n    <Container style={{ width: containerWidth }}>\n      <Slider\n        ref={sliderRef}\n        style={{\n          width: scrollerWidth,\n        }}\n      />\n    </Container>\n  );\n};\n"],"file":"scrollbar.js"}