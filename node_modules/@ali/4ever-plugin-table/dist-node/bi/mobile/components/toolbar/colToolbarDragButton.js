"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColToolbarDragButton = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _dragIcon = require("./dragIcon");

var _models = _interopRequireDefault(require("../../../../mo/models"));

var _constants = require("../../../../utils/constants");

var _actions = require("../../../actions");

var _lodash = require("lodash");

var _hooks = require("../../../../utils/hooks");

const _createElement = /*#__PURE__*/_react.default.createElement;

const DragWrapper = /*#__PURE__*/_styledComponents.default.div(["box-sizing:border-box;position:absolute;height:21px;width:30px;padding-right:4px;right:0;top:-3px;display:flex;align-items:center;justify-content:flex-end;"]);

var _ref = /*#__PURE__*/_createElement(_dragIcon.DragIcon, null);

const ColToolbarDragButton = props => {
  const {
    index,
    controller,
    table
  } = props;

  const dragRef = _react.default.useRef(null);

  const isResizingRef = _react.default.useRef(false);

  const resizeStartRef = _react.default.useRef(0);

  const deltaRef = _react.default.useRef(0);

  const [pixelColsWidth] = (0, _hooks.usePixelColsWidth)();

  const originColWidthRef = _react.default.useRef(0);

  const preventEvent = e => {
    e.preventDefault();
    e.stopPropagation();
  };

  const handleResizing = (0, _lodash.throttle)(e => {
    preventEvent(e);
    e.stopImmediatePropagation();

    if (isResizingRef.current) {
      // 这里的 table 是 resizeStart 闭包里的 table 值
      // 所以 delta 是 resizeStart - 当前 clientX
      const {
        clientX
      } = e.touches[0];
      deltaRef.current = clientX - resizeStartRef.current;

      const isAutofit = _models.default.isAutofitWidth(table);

      controller.run('onAction', (0, _actions.resizeTableColWidth)({
        node: table,
        colIndex: index,
        delta: deltaRef.current,
        containerWidth: isAutofit ? _constants.DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT : undefined
      }));
    }
  }, 100);

  const handleResizeStart = e => {
    preventEvent(e);
    e.nativeEvent.stopImmediatePropagation();
    isResizingRef.current = true;
    const {
      clientX
    } = e.touches[0];
    resizeStartRef.current = clientX;
    originColWidthRef.current = pixelColsWidth[index];
    dragRef.current?.addEventListener('touchmove', handleResizing, {
      passive: false,
      capture: true
    });
  };

  const handleResizeEnd = e => {
    preventEvent(e);
    e.nativeEvent.stopImmediatePropagation();
    isResizingRef.current = false;
    dragRef.current?.removeEventListener('touchmove', handleResizing, {
      capture: true
    });
  };

  return /*#__PURE__*/_createElement(DragWrapper, {
    ref: dragRef,
    onTouchStart: handleResizeStart,
    onTouchEnd: handleResizeEnd,
    onTouchCancel: handleResizeEnd,
    "data-index": index
  }, _ref);
};

exports.ColToolbarDragButton = ColToolbarDragButton;
//# sourceMappingURL=colToolbarDragButton.js.map