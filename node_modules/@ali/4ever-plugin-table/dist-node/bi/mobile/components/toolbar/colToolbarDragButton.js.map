{"version":3,"sources":["../../../../../../src/bi/mobile/components/toolbar/colToolbarDragButton.tsx"],"names":["DragWrapper","styled","div","ColToolbarDragButton","props","index","controller","table","dragRef","React","useRef","isResizingRef","resizeStartRef","deltaRef","pixelColsWidth","originColWidthRef","preventEvent","e","preventDefault","stopPropagation","handleResizing","stopImmediatePropagation","current","clientX","touches","isAutofit","Table","isAutofitWidth","run","node","colIndex","delta","containerWidth","DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT","undefined","handleResizeStart","nativeEvent","addEventListener","passive","capture","handleResizeEnd","removeEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { DragIcon } from './dragIcon';\nimport Table from '../../../../mo/models';\nimport { DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT } from '../../../../utils/constants';\nimport { resizeTableColWidth } from '../../../actions';\nimport { throttle } from 'lodash-es';\nimport { usePixelColsWidth } from '../../../../utils/hooks';\n\nconst DragWrapper = styled.div`\n  box-sizing: border-box;\n  position: absolute;\n  height: 21px;\n  width: 30px;\n  padding-right: 4px;\n  right: 0;\n  top: -3px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\ninterface Props {\n  index: number;\n  controller: Controller;\n  table: Table;\n}\n\nexport const ColToolbarDragButton = (props: Props) => {\n  const { index, controller, table } = props;\n  const dragRef = React.useRef<HTMLDivElement>(null);\n  const isResizingRef = React.useRef(false);\n  const resizeStartRef = React.useRef(0);\n  const deltaRef = React.useRef(0);\n  const [pixelColsWidth] = usePixelColsWidth();\n  const originColWidthRef = React.useRef(0);\n  const preventEvent = (e: TouchEvent | React.TouchEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleResizing = throttle((e: TouchEvent) => {\n    preventEvent(e);\n    e.stopImmediatePropagation();\n    if (isResizingRef.current) {\n      // 这里的 table 是 resizeStart 闭包里的 table 值\n      // 所以 delta 是 resizeStart - 当前 clientX\n      const { clientX } = e.touches[0];\n      deltaRef.current = clientX - resizeStartRef.current;\n      const isAutofit = Table.isAutofitWidth(table);\n      controller.run(\n        'onAction',\n        resizeTableColWidth({\n          node: table,\n          colIndex: index,\n          delta: deltaRef.current,\n          containerWidth: isAutofit ? DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT : undefined,\n        }),\n      );\n    }\n  }, 100);\n\n  const handleResizeStart = (e: React.TouchEvent) => {\n    preventEvent(e);\n    e.nativeEvent.stopImmediatePropagation();\n    isResizingRef.current = true;\n    const { clientX } = e.touches[0];\n    resizeStartRef.current = clientX;\n    originColWidthRef.current = pixelColsWidth[index];\n\n    dragRef.current?.addEventListener('touchmove', handleResizing, {\n      passive: false,\n      capture: true,\n    });\n  };\n\n  const handleResizeEnd = (e: React.TouchEvent) => {\n    preventEvent(e);\n    e.nativeEvent.stopImmediatePropagation();\n    isResizingRef.current = false;\n    dragRef.current?.removeEventListener('touchmove', handleResizing, {\n      capture: true,\n    });\n  };\n\n  return (\n    <DragWrapper\n      ref={dragRef}\n      onTouchStart={handleResizeStart}\n      onTouchEnd={handleResizeEnd}\n      onTouchCancel={handleResizeEnd}\n      data-index={index}\n    >\n      <DragIcon />\n    </DragWrapper>\n  );\n};\n"],"file":"colToolbarDragButton.js"}