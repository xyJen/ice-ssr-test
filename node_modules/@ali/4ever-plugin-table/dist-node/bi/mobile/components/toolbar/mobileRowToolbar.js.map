{"version":3,"sources":["../../../../../../src/bi/mobile/components/toolbar/mobileRowToolbar.tsx"],"names":["Wrapper","styled","div","TOOLBAR_ITEM_SIZE_MOBILE","MobileRowToolbar","props","table","activeRange","selectRange","visible","controller","preventEvent","e","stopPropagation","handleSelectRow","i","preventDefault","nativeEvent","stopImmediatePropagation","run","setIsFocused","rowsClientHeight","rowsHeight","React","useMemo","nodes","map","row","key","display","_","width","borderTopLeftRadius","borderBottomLeftRadius","length","children"],"mappings":";;;;;;;;;AAAA;;AACA;;AAGA;;AAEA;;AACA;;AACA;;uBAP4B,a;;AAS5B,MAAMA,OAAO,gBAAGC,0BAAOC,GAAV,wDAEFC,mCAFE,EAGJA,mCAHI,CAAb;;AAkBO,MAAMC,gBAAgB,GAAIC,KAAD,IAAyB;AACvD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA;AAA5C,MACJL,KADF;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAA4C;AAC/DA,IAAAA,CAAC,CAACC,eAAF;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAG,CAACC,CAAD,EAAYH,CAAZ,KAAoC;AAC1DD,IAAAA,YAAY,CAACC,CAAD,CAAZ;AACAA,IAAAA,CAAC,CAACI,cAAF;AACAJ,IAAAA,CAAC,CAACK,WAAF,CAAcC,wBAAd;AACAR,IAAAA,UAAU,CAACS,GAAX,CACE,UADF,EAEE,8BAAgBb,KAAhB,EAAuBS,CAAvB,EAA0BA,CAA1B,CAFF;AAIAL,IAAAA,UAAU,CAACU,YAAX,CAAwB,KAAxB;AACD,GATD;;AAUA,QAAM,CAACC,gBAAD,IAAqB,iCAA3B;;AAEA,QAAMC,UAAU,GAAGC,eAAMC,OAAN,CAAc,MAAM;AACrC,WAAOlB,KAAK,CAACmB,KAAN,CAAYC,GAAZ,CAAiBC,GAAD,IAAUN,gBAAgB,CAACM,GAAG,CAACC,GAAL,CAAhB,IAA6B,CAAvD,CAAP;AACD,GAFkB,EAEhB,CAACP,gBAAD,EAAmBf,KAAK,CAACmB,KAAzB,CAFgB,CAAnB;;AAIA,sBACE,eAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAEpB,OAAO,GAAG,OAAH,GAAa;AAA/B;AAAhB,KACGH,KAAK,CAACmB,KAAN,CAAYC,GAAZ,CAAgB,CAACI,CAAD,EAAIf,CAAJ,kBACf,eAAC,uBAAD;AACE,IAAA,KAAK,EAAE;AACLgB,MAAAA,KAAK,EAAE5B,mCADF;AAEL6B,MAAAA,mBAAmB,EAAEjB,CAAC,KAAK,CAAN,GAAU,CAAV,GAAc,CAF9B;AAGLkB,MAAAA,sBAAsB,EAAElB,CAAC,KAAKT,KAAK,CAACmB,KAAN,CAAYS,MAAZ,GAAqB,CAA3B,GAA+B,CAA/B,GAAmC;AAHtD,KADT;AAME,IAAA,YAAY,EAAE1B,WAAW,GAAG,CAACA,WAAD,CAAH,GAAmB,IAN9C;AAOE,IAAA,WAAW,EAAED,WAPf;AAQE,IAAA,GAAG,EAAED,KAAK,CAACmB,KAAN,CAAYV,CAAZ,EAAea,GARtB;AASE,IAAA,KAAK,EAAEb,CATT;AAUE,IAAA,KAAK,EAAET,KAVT;AAWE,IAAA,OAAO,EAAGM,CAAD,IAAOE,eAAe,CAACC,CAAD,EAAIH,CAAJ,CAXjC;AAYE,IAAA,WAAW,EAAED,YAZf;AAaE,IAAA,SAAS,EAAEW,UAAU,CAACP,CAAD,CAbvB;AAcE,IAAA,KAAK,EAAEZ;AAdT,KAgBGE,KAAK,CAAC8B,QAhBT,CADD,CADH,CADF;AAwBD,CA9CM","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../../../mo/models';\nimport RowToolbarItem from '../../../components/rowToolbar/rowToolbarItem';\nimport type { Range } from '../../../components/rowColToolbarItemRect';\nimport { TOOLBAR_ITEM_SIZE_MOBILE } from '../../../constants';\nimport { useRowsClientHeight } from '../../../../utils/hooks';\nimport { selectTableRows } from '../../../actions';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: ${TOOLBAR_ITEM_SIZE_MOBILE}px;\n  top: ${TOOLBAR_ITEM_SIZE_MOBILE}px;\n  left: 0;\n`;\n\ntype ToolbarProps = {\n  table: Table;\n  controller: Controller;\n  visible: boolean;\n  // 选区所在行列\n  activeRange?: Range | null;\n  // 选中行列\n  selectRange?: Range | null;\n  children?: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const MobileRowToolbar = (props: ToolbarProps) => {\n  const { table, activeRange, selectRange, visible, controller } =\n    props;\n  const preventEvent = (e: React.TouchEvent | React.MouseEvent) => {\n    e.stopPropagation();\n  };\n  const handleSelectRow = (i: number, e: React.MouseEvent) => {\n    preventEvent(e);\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    controller.run(\n      'onAction',\n      selectTableRows(table, i, i),\n    );\n    controller.setIsFocused(false);\n  };\n  const [rowsClientHeight] = useRowsClientHeight();\n\n  const rowsHeight = React.useMemo(() => {\n    return table.nodes.map((row) => (rowsClientHeight[row.key] || 0));\n  }, [rowsClientHeight, table.nodes]);\n\n  return (\n    <Wrapper style={{ display: visible ? 'block' : 'none' }}>\n      {table.nodes.map((_, i) => (\n        <RowToolbarItem\n          style={{\n            width: TOOLBAR_ITEM_SIZE_MOBILE,\n            borderTopLeftRadius: i === 0 ? 4 : 0,\n            borderBottomLeftRadius: i === table.nodes.length - 1 ? 4 : 0,\n          }}\n          selectRanges={selectRange ? [selectRange] : null}\n          activeRange={activeRange}\n          key={table.nodes[i].key}\n          index={i}\n          table={table}\n          onClick={(e) => handleSelectRow(i, e)}\n          onMouseDown={preventEvent}\n          rowHeight={rowsHeight[i]}\n          width={TOOLBAR_ITEM_SIZE_MOBILE}\n        >\n          {props.children}\n        </RowToolbarItem>\n      ))}\n    </Wrapper>\n  );\n};\n"],"file":"mobileRowToolbar.js"}