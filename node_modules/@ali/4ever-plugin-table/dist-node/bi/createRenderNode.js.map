{"version":3,"sources":["../../../src/bi/createRenderNode.tsx"],"names":["createRenderNode","config","tableConfig","table","draggableConfig","draggable","tableLocaleConfig","locale","MoTable","TYPE","props","node","visible","isValidTable","wrapperStyle","paddingTop","SPACING","TOOLBAR_ITEM_SIZE","paddingBottom","SCROLL_BAR_HEIGHT","attributes","MoTableRow","MoTableCell"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAd4B,a;;AAgBb,SAASA,gBAAT,CACbC,MADa,EAES;AACtB,QAAMC,WAAW,GAAGD,MAAM,CAACE,KAAP,IAAgB,EAApC;AACA,QAAMC,eAAe,GAAGH,MAAM,CAACI,SAA/B;AACA,QAAMC,iBAAiB,GAAGJ,WAAW,CAACK,MAAZ,IAAsB,EAAhD,CAHsB,CAItB;;AACA,SAAO;AACL,KAACC,gBAAQC,IAAT,GAAiBC,KAAD,IAAqC;AACnD,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAoBF,KAA1B;;AAEA,UAAI,CAACF,gBAAQK,YAAR,CAAqBF,IAArB,CAAL,EAAiC;AAC/B,4BAAO,oCAAP;AACD;;AACD,YAAMG,YAAY,GAAG;AACnBC,QAAAA,UAAU,EAAEC,qBAAUC,4BADH;AAEnBC,QAAAA,aAAa,EAAEF,qBAAUG;AAFN,OAArB;AAIA,0BACE,eAAC,oBAAD,6BAAkBT,KAAK,CAACU,UAAxB;AAAoC,QAAA,OAAO,EAAER,OAA7C;AAAsD,QAAA,KAAK,EAAEE;AAA7D,uBACE,eAAC,cAAD,6BACM,kBAAKJ,KAAL,EAAY,YAAZ,CADN;AAEE,QAAA,MAAM,EAAEJ,iBAFV;AAGE,QAAA,WAAW,EAAEJ,WAHf;AAIE,QAAA,eAAe,EAAEE;AAJnB,SADF,CADF;AAUD,KArBI;AAsBL,KAACiB,kBAAWZ,IAAZ,GAAoBC,KAAD,IAAW;AAC5B,0BAAO,eAAC,kBAAD,EAAeA,KAAf,CAAP;AACD,KAxBI;AAyBL,KAACY,mBAAYb,IAAb,GAAqBC,KAAD,IAAW;AAC7B,0BAAO,eAAC,mBAAD,EAAgBA,KAAhB,CAAP;AACD;AA3BI,GAAP;AA6BD","sourcesContent":["import * as React from 'react';\nimport { omit } from 'lodash-es';\nimport {\n  Plugin,\n  RenderNodeProps,\n  Block,\n  BiPluginConfig,\n} from '@ali/4ever-cangjie';\nimport MoTable from '../mo/models';\nimport MoTableRow from '../mo/models/tableRow';\nimport MoTableCell from '../mo/models/tableCell';\nimport Table from './components/table';\nimport TableRow from './components/tableRow';\nimport TableCell from './components/tableCell';\nimport { TableWrapper } from './components/styled';\nimport { SPACING, TOOLBAR_ITEM_SIZE, SCROLL_BAR_HEIGHT } from '../utils/constants';\n\nexport default function createRenderNode(\n  config: BiPluginConfig,\n): Plugin['renderNode'] {\n  const tableConfig = config.table || {};\n  const draggableConfig = config.draggable;\n  const tableLocaleConfig = tableConfig.locale || {};\n  // @ts-ignore\n  return {\n    [MoTable.TYPE]: (props: RenderNodeProps<MoTable>) => {\n      const { node, visible } = props;\n\n      if (!MoTable.isValidTable(node)) {\n        return <></>;\n      }\n      const wrapperStyle = {\n        paddingTop: SPACING - TOOLBAR_ITEM_SIZE,\n        paddingBottom: SPACING - SCROLL_BAR_HEIGHT,\n      };\n      return (\n        <TableWrapper {...props.attributes} visible={visible} style={wrapperStyle}>\n          <Table\n            {...omit(props, 'attributes')}\n            locale={tableLocaleConfig}\n            tableConfig={tableConfig}\n            draggableConfig={draggableConfig}\n          />\n        </TableWrapper>\n      );\n    },\n    [MoTableRow.TYPE]: (props) => {\n      return <TableRow {...(props as RenderNodeProps<Block>)} />;\n    },\n    [MoTableCell.TYPE]: (props) => {\n      return <TableCell {...(props as RenderNodeProps<MoTableCell>)} />;\n    },\n  };\n}\n"],"file":"createRenderNode.js"}