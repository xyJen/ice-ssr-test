{"version":3,"sources":["../../../../src/bi/components/contextContainer.tsx"],"names":["ContextContainer","props","isSelected","rowsClientHeight","setRowsClientHeight","React","useState","rowsClientHeightRef","useRef","updateRowClientHeight","useCallback","rowKey","height","current","useEffect","rowsClientHeightValue","useMemo","pixelColsWidth","setPixelColsWidth","pixelColsWidthValue","children"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AASrB,MAAMA,gBAAgB,GAAIC,KAAD,IAAkB;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;;AACA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CC,eAAMC,QAAN,CAA2B,EAA3B,CAAhD;;AACA,QAAMC,mBAAmB,GAAGF,eAAMG,MAAN,CAAyB,EAAzB,CAA5B;;AAEA,QAAMC,qBAAsC,GAAGJ,eAAMK,WAAN,CAAkB,CAACC,MAAD,EAASC,MAAT,KAAoB;AACnF,QAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAOL,mBAAmB,CAACM,OAApB,CAA4BF,MAA5B,CAAP;AACD,KAFD,MAEO;AACLJ,MAAAA,mBAAmB,CAACM,OAApB,CAA4BF,MAA5B,IAAsCC,MAAtC;AACD;;AACD,QAAIV,UAAJ,EAAgB;AACdE,MAAAA,mBAAmB,CAAC,EAAE,GAAGG,mBAAmB,CAACM;AAAzB,OAAD,CAAnB;AACD;AACF,GAT8C,EAS5C,CAACX,UAAD,CAT4C,CAA/C;;AAWAG,iBAAMS,SAAN,CAAgB,MAAM;AACpB,QAAIZ,UAAU,IAAI,CAAC,4BAAMC,gBAAN,EAAwBI,mBAAmB,CAACM,OAA5C,CAAnB,EAAyE;AACvET,MAAAA,mBAAmB,CAAC,EAAE,GAAGG,mBAAmB,CAACM;AAAzB,OAAD,CAAnB;AACD;AACF,GAJD,EAIG,CAACX,UAAD,EAAaC,gBAAb,CAJH;;AAMA,QAAMY,qBAAoD,GAAGV,eAAMW,OAAN,CAAc,MAAM;AAC/E,WAAO,CAACb,gBAAD,EAAmBM,qBAAnB,CAAP;AACD,GAF4D,EAE1D,CAACN,gBAAD,EAAmBM,qBAAnB,CAF0D,CAA7D;;AAIA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCb,eAAMC,QAAN,CAAyB,EAAzB,CAA5C;;AAEA,QAAMa,mBAAyC,GAAGd,eAAMW,OAAN,CAAc,MAAM;AACpE,WAAO,CAACC,cAAD,EAAiBC,iBAAjB,CAAP;AACD,GAFiD,EAE/C,CAACD,cAAD,CAF+C,CAAlD;;AAIA,sBACE,eAAC,8BAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEF;AAAzC,kBACE,eAAC,4BAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEI;AAAvC,KACGlB,KAAK,CAACmB,QADT,CADF,CADF;AAOD,CAvCM","sourcesContent":["import equal from 'fast-deep-equal';\nimport React from 'react';\nimport { PixelColsWidthContext, RowsClientHeightContext } from '../../utils/hooks';\nimport type { RowsHeight, UpdateRowHeight } from '../../utils/types';\n\ninterface Props {\n  isSelected: boolean;\n  children?: React.ReactNode;\n}\n\nexport const ContextContainer = (props: Props) => {\n  const { isSelected } = props;\n  const [rowsClientHeight, setRowsClientHeight] = React.useState<RowsHeight>({});\n  const rowsClientHeightRef = React.useRef<RowsHeight>({});\n\n  const updateRowClientHeight: UpdateRowHeight = React.useCallback((rowKey, height) => {\n    if (height === null) {\n      delete rowsClientHeightRef.current[rowKey];\n    } else {\n      rowsClientHeightRef.current[rowKey] = height;\n    }\n    if (isSelected) {\n      setRowsClientHeight({ ...rowsClientHeightRef.current });\n    }\n  }, [isSelected]);\n\n  React.useEffect(() => {\n    if (isSelected && !equal(rowsClientHeight, rowsClientHeightRef.current)) {\n      setRowsClientHeight({ ...rowsClientHeightRef.current });\n    }\n  }, [isSelected, rowsClientHeight]);\n\n  const rowsClientHeightValue: [RowsHeight, UpdateRowHeight] = React.useMemo(() => {\n    return [rowsClientHeight, updateRowClientHeight];\n  }, [rowsClientHeight, updateRowClientHeight]);\n\n  const [pixelColsWidth, setPixelColsWidth] = React.useState<number[]>([]);\n\n  const pixelColsWidthValue: [number[], Function] = React.useMemo(() => {\n    return [pixelColsWidth, setPixelColsWidth];\n  }, [pixelColsWidth]);\n\n  return (\n    <RowsClientHeightContext.Provider value={rowsClientHeightValue}>\n      <PixelColsWidthContext.Provider value={pixelColsWidthValue}>\n        {props.children}\n      </PixelColsWidthContext.Provider>\n    </RowsClientHeightContext.Provider>\n  );\n};\n"],"file":"contextContainer.js"}