"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createToolbarWithTableSeletion;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _fastDeepEqual = _interopRequireDefault(require("fast-deep-equal"));

var _everCangjie = require("@ali/4ever-cangjie");

var _getToolbarTableSelection = require("../utils/getToolbarTableSelection");

const _createElement = /*#__PURE__*/React.createElement;

function createToolbarWithTableSeletion(Comp) {
  return props => {
    const {
      controller,
      table,
      isHoverCornerToolbar
    } = props;
    const [tbSelection, setTbSelection] = React.useState((0, _getToolbarTableSelection.getToolbarTableSelection)(controller, table));
    const [hoverCornerToolbar, setHoverCornerToolbar] = React.useState(isHoverCornerToolbar);
    const prevTbSelectionRef = React.useRef(tbSelection);
    const prevHoverCornerToolbarRef = React.useRef(isHoverCornerToolbar);
    const updater = React.useCallback(() => {
      const tbSel = (0, _getToolbarTableSelection.getToolbarTableSelection)(controller, table);

      if (!(0, _fastDeepEqual.default)(prevTbSelectionRef.current, tbSel)) {
        setTbSelection(tbSel);
        prevTbSelectionRef.current = tbSel;
      } // 要响应hover到左上角汉堡的状态变化


      if (prevHoverCornerToolbarRef.current !== isHoverCornerToolbar) {
        setHoverCornerToolbar(isHoverCornerToolbar);
        prevHoverCornerToolbarRef.current = isHoverCornerToolbar;
      }
    }, [controller, isHoverCornerToolbar, table]);
    (0, _everCangjie.useSelectionData)(controller.selectionData$, null, updater, []);
    (0, _everCangjie.useSelectingHots)(controller, updater);
    React.useMemo(updater, [controller.value.selection, updater]);
    return /*#__PURE__*/_createElement(Comp, (0, _extends2.default)({}, props, {
      isHoverCornerToolbar: hoverCornerToolbar,
      selection: tbSelection
    }));
  };
}
//# sourceMappingURL=createToolbarWithTableSelection.js.map