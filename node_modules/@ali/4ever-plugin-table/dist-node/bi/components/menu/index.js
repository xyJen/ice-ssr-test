"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TableMenu;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _role = require("../../../utils/role");

var _everUtils = require("@ali/4ever-utils");

var _isSelectionInTableCell = _interopRequireDefault(require("../../utils/isSelectionInTableCell"));

var _actions = require("../../actions");

const _createElement = /*#__PURE__*/React.createElement;
const DEFAULT_COL = 3;
const DEFAULT_ROW = 3;

function TableMenu(props) {
  const [selectedCol, setSelectedCol] = React.useState(DEFAULT_COL);
  const [selectedRow, setSelectedRow] = React.useState(DEFAULT_ROW);
  const {
    menuItem,
    controller
  } = props;
  const {
    value
  } = controller;
  const {
    menuKey,
    title,
    ...rest
  } = menuItem;
  const tableSelection = controller.query('hasTableSelection');
  const isDisabled = tableSelection || (0, _isSelectionInTableCell.default)(value, {
    excludeColumns: true
  }) || controller.query('isSelectionInLink') || controller.query('isSelectionInMention');

  const onChange = (row, col) => {
    setSelectedCol(col);
    setSelectedRow(row);
  };

  const insert = (row = DEFAULT_ROW, col = DEFAULT_COL) => {
    controller.run('onAction', (0, _actions.insertTable)(row, col));
  }; // NOTE: 通过回车插入，也会调用 onClick，we-design 此时没有传入 event 参数


  const handleClickMenuItem = (_, e) => {
    insert(selectedRow, selectedCol);
    e?.stopPropagation();
  };

  const handleClickSubMenu = () => {
    if (isDisabled) return;
    controller.run('onAction', (0, _everUtils.removeNewlineTriggerText)(false));
    controller.run('onAction', (0, _everUtils.removeNewlineData)());
    insert();
    (0, _everUtils.dispatchCustomEvent)(_everUtils.LEGAL_EVENT.quickInsertMenuVisible, {
      visible: false
    });
  };

  return /*#__PURE__*/_createElement("div", {
    onClick: handleClickSubMenu
  }, /*#__PURE__*/_createElement(_weDesign.SubMenu, (0, _extends2.default)({}, rest, {
    disabled: isDisabled,
    title: title || '',
    overlayStyle: {
      padding: 0
    },
    overlayClassName: "menu-table-overlay"
  }), /*#__PURE__*/_createElement(_weDesign.MenuItem, {
    menuKey: menuKey || 'tablePicker',
    hoverable: false,
    role: _role.TableRole.tablePicker,
    style: {
      height: 'auto',
      padding: 0,
      margin: 0
    },
    onClick: handleClickMenuItem
  }, /*#__PURE__*/_createElement(_weDesign.TablePanel, {
    row: 10,
    col: 10,
    selectedCol: selectedCol,
    selectedRow: selectedRow,
    onChange: onChange
  }))));
}
//# sourceMappingURL=index.js.map