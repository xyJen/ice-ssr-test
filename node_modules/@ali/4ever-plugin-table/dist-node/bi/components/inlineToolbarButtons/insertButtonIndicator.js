"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.GAP_BEWTEEN_INDICATOR_TOOLBAR = exports.INDICATOR_WIDTH = exports.INDICATOR_WRAPPER_WIDTH = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

const _createElement = /*#__PURE__*/React.createElement;
const INDICATOR_WRAPPER_WIDTH = 12;
exports.INDICATOR_WRAPPER_WIDTH = INDICATOR_WRAPPER_WIDTH;
const INDICATOR_WIDTH = 3;
exports.INDICATOR_WIDTH = INDICATOR_WIDTH;
const GAP_BEWTEEN_INDICATOR_TOOLBAR = 4;
exports.GAP_BEWTEEN_INDICATOR_TOOLBAR = GAP_BEWTEEN_INDICATOR_TOOLBAR;
const BG_COLOR = 'rgba(23, 26, 29, 0.24)';

const Svg = /*#__PURE__*/_styledComponents.default.svg(["transform:translate(", ");opacity:1;transition:opacity ease-in 0.2s;"], p => `${p.translateX / p.scale}px, ${p.translateY / p.scale}px`);

const IndicatorWrapper = /*#__PURE__*/_styledComponents.default.div(["position:absolute;display:flex;width:", "px;height:", "px;justify-content:center;align-items:center;"], p => INDICATOR_WRAPPER_WIDTH / p.scale, p => INDICATOR_WRAPPER_WIDTH / p.scale);

const InsertButtonIndicator = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    translateX = 0,
    translateY = 0,
    scale = 1,
    onMouseEnter,
    ...rest
  } = props;
  const indicatorWidth = Math.round(INDICATOR_WIDTH / scale);
  const hanldePreventDefault = React.useCallback(e => {
    e.preventDefault();
    e.stopPropagation();
  }, []);
  const handleMouseEnter = React.useCallback(() => {
    const dataIndex = rest['data-index'] || 0;
    const insertIndex = dataIndex;
    onMouseEnter && onMouseEnter(insertIndex);
  }, [onMouseEnter, rest]);
  return /*#__PURE__*/_createElement(IndicatorWrapper, (0, _extends2.default)({
    ref: ref,
    scale: scale,
    onMouseDown: hanldePreventDefault,
    onMouseUp: hanldePreventDefault,
    onMouseEnter: handleMouseEnter
  }, rest), /*#__PURE__*/_createElement(Svg, {
    width: indicatorWidth,
    height: indicatorWidth,
    viewBox: `0 0 ${indicatorWidth}
        ${indicatorWidth}`,
    fill: "none",
    translateY: translateY,
    translateX: translateX,
    scale: scale
  }, /*#__PURE__*/_createElement("circle", {
    cx: indicatorWidth / 2,
    cy: indicatorWidth / 2,
    r: indicatorWidth / 2,
    fill: BG_COLOR
  })));
});
var _default = InsertButtonIndicator;
exports.default = _default;
//# sourceMappingURL=insertButtonIndicator.js.map