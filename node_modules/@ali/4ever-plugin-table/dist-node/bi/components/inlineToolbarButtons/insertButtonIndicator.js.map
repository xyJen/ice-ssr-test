{"version":3,"sources":["../../../../../src/bi/components/inlineToolbarButtons/insertButtonIndicator.tsx"],"names":["INDICATOR_WRAPPER_WIDTH","INDICATOR_WIDTH","GAP_BEWTEEN_INDICATOR_TOOLBAR","BG_COLOR","Svg","styled","svg","p","translateX","scale","translateY","IndicatorWrapper","div","InsertButtonIndicator","React","forwardRef","props","ref","onMouseEnter","rest","indicatorWidth","Math","round","hanldePreventDefault","useCallback","e","preventDefault","stopPropagation","handleMouseEnter","dataIndex","insertIndex"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;uBAA4B,a;AAErB,MAAMA,uBAAuB,GAAG,EAAhC;;AACA,MAAMC,eAAe,GAAG,CAAxB;;AACA,MAAMC,6BAA6B,GAAG,CAAtC;;AACP,MAAMC,QAAQ,GAAG,wBAAjB;;AAYA,MAAMC,GAAG,gBAAGC,0BAAOC,GAAV,2EAKiBC,CAAD,IAAQ,GAAEA,CAAC,CAACC,UAAF,GAAeD,CAAC,CAACE,KAAM,OAAMF,CAAC,CAACG,UAAF,GAAeH,CAAC,CAACE,KAAM,IAL9E,CAAT;;AAUA,MAAME,gBAAgB,gBAAGN,0BAAOO,GAAV,2GAGVL,CAAD,IAAOP,uBAAuB,GAAGO,CAAC,CAACE,KAHxB,EAITF,CAAD,IAAOP,uBAAuB,GAAGO,CAAC,CAACE,KAJzB,CAAtB;;AASA,MAAMI,qBAAqB,gBAAGC,KAAK,CAACC,UAAN,CAAiB,CAACC,KAAD,EAAeC,GAAf,KAAkD;AAC/F,QAAM;AACJT,IAAAA,UAAU,GAAG,CADT;AAEJE,IAAAA,UAAU,GAAG,CAFT;AAGJD,IAAAA,KAAK,GAAG,CAHJ;AAIJS,IAAAA,YAJI;AAKJ,OAAGC;AALC,MAMFH,KANJ;AAOA,QAAMI,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWrB,eAAe,GAAGQ,KAA7B,CAAvB;AAEA,QAAMc,oBAAoB,GAAGT,KAAK,CAACU,WAAN,CAC1BC,CAAD,IAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACD,GAJ0B,EAK3B,EAL2B,CAA7B;AAQA,QAAMC,gBAAgB,GAAGd,KAAK,CAACU,WAAN,CAAkB,MAAM;AAC/C,UAAMK,SAAS,GAAGV,IAAI,CAAC,YAAD,CAAJ,IAAsB,CAAxC;AACA,UAAMW,WAAW,GAAGD,SAApB;AACAX,IAAAA,YAAY,IAAIA,YAAY,CAACY,WAAD,CAA5B;AACD,GAJwB,EAItB,CAACZ,YAAD,EAAeC,IAAf,CAJsB,CAAzB;AAMA,sBACE,eAAC,gBAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,KAAK,EAAER,KAFT;AAGE,IAAA,WAAW,EAAEc,oBAHf;AAIE,IAAA,SAAS,EAAEA,oBAJb;AAKE,IAAA,YAAY,EAAEK;AALhB,KAMMT,IANN,gBAQE,eAAC,GAAD;AACE,IAAA,KAAK,EAAEC,cADT;AAEE,IAAA,MAAM,EAAEA,cAFV;AAGE,IAAA,OAAO,EAAG,OAAMA,cAAe;AACvC,UAAUA,cAAe,EAJnB;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,UAAU,EAAEV,UANd;AAOE,IAAA,UAAU,EAAEF,UAPd;AAQE,IAAA,KAAK,EAAEC;AART,kBAUE;AACE,IAAA,EAAE,EAAEW,cAAc,GAAG,CADvB;AAEE,IAAA,EAAE,EAAEA,cAAc,GAAG,CAFvB;AAGE,IAAA,CAAC,EAAEA,cAAc,GAAG,CAHtB;AAIE,IAAA,IAAI,EAAEjB;AAJR,IAVF,CARF,CADF;AA4BD,CApD6B,CAA9B;eAsDeU,qB","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nexport const INDICATOR_WRAPPER_WIDTH = 12;\nexport const INDICATOR_WIDTH = 3;\nexport const GAP_BEWTEEN_INDICATOR_TOOLBAR = 4;\nconst BG_COLOR = 'rgba(23, 26, 29, 0.24)';\n\ninterface Props {\n  scale: number;\n  'data-index'?: number;\n  translateY?: number;\n  translateX?: number;\n  style?: React.CSSProperties;\n  onClick: (e: React.MouseEvent) => void;\n  onMouseEnter?: (index: number) => void;\n}\n\nconst Svg = styled.svg<{\n  translateY: number;\n  translateX: number;\n  scale: number;\n}>`\n  transform: translate(${(p) => `${p.translateX / p.scale}px, ${p.translateY / p.scale}px`});\n  opacity: 1;\n  transition: opacity ease-in 0.2s;\n`;\n\nconst IndicatorWrapper = styled.div<{ scale: number }>`\n  position: absolute;\n  display: flex;\n  width: ${(p) => INDICATOR_WRAPPER_WIDTH / p.scale}px;\n  height: ${(p) => INDICATOR_WRAPPER_WIDTH / p.scale}px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InsertButtonIndicator = React.forwardRef((props: Props, ref: React.Ref<HTMLDivElement>) => {\n  const {\n    translateX = 0,\n    translateY = 0,\n    scale = 1,\n    onMouseEnter,\n    ...rest\n  } = props;\n  const indicatorWidth = Math.round(INDICATOR_WIDTH / scale);\n\n  const hanldePreventDefault = React.useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    [],\n  );\n\n  const handleMouseEnter = React.useCallback(() => {\n    const dataIndex = rest['data-index'] || 0;\n    const insertIndex = dataIndex;\n    onMouseEnter && onMouseEnter(insertIndex);\n  }, [onMouseEnter, rest]);\n\n  return (\n    <IndicatorWrapper\n      ref={ref}\n      scale={scale}\n      onMouseDown={hanldePreventDefault}\n      onMouseUp={hanldePreventDefault}\n      onMouseEnter={handleMouseEnter}\n      {...rest}\n    >\n      <Svg\n        width={indicatorWidth}\n        height={indicatorWidth}\n        viewBox={`0 0 ${indicatorWidth}\n        ${indicatorWidth}`}\n        fill=\"none\"\n        translateY={translateY}\n        translateX={translateX}\n        scale={scale}\n      >\n        <circle\n          cx={indicatorWidth / 2}\n          cy={indicatorWidth / 2}\n          r={indicatorWidth / 2}\n          fill={BG_COLOR}\n        />\n      </Svg>\n    </IndicatorWrapper>\n  );\n});\n\nexport default InsertButtonIndicator;\n"],"file":"insertButtonIndicator.js"}