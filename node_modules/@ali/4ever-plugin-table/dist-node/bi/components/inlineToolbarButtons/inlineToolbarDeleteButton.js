"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DeleteWrapper = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _weDesign = require("@ali/we-design");

var _styled = require("../styled");

/* eslint-disable react/no-find-dom-node */
const _createElement = /*#__PURE__*/React.createElement;
const DeleteWrapper = /*#__PURE__*/(0, _styledComponents.default)(_styled.ButtonWrapper)(["&:hover{color:rgba(255,0,0,0.67);box-sizing:border-box;}"]);
exports.DeleteWrapper = DeleteWrapper;

class InlineToolbarDeleteButton extends React.Component {
  constructor(...args) {
    super(...args);

    this.handleMouseDown = e => {
      e.preventDefault();
      e.stopPropagation();
      const {
        onDelete
      } = this.props;
      onDelete();
    };

    this.handleMouseEnter = () => {
      const {
        onHighlightSelection
      } = this.props;
      onHighlightSelection();
    };

    this.handleMouseLeave = () => {
      const {
        onCancelHighlightSelection
      } = this.props;
      onCancelHighlightSelection();
    };
  }

  componentWillUnmount() {
    const {
      onCancelHighlightSelection
    } = this.props;
    onCancelHighlightSelection();
  }

  render() {
    const {
      mode,
      locale,
      scale
    } = this.props;
    const placement = mode === 'row' ? 'left' : 'top';
    const tip = mode === 'row' ? locale.toolbarDeleteRow : locale.toolbarDeleteCol;
    return /*#__PURE__*/_createElement(DeleteWrapper, {
      scale: scale,
      onMouseDown: this.handleMouseDown,
      onMouseEnter: this.handleMouseEnter,
      onMouseLeave: this.handleMouseLeave,
      "data-testid": `table-delete-${mode}-button`,
      size: 16
    }, /*#__PURE__*/_createElement(_weDesign.Tooltip, {
      placement: placement,
      title: tip
    }, /*#__PURE__*/_createElement(_styled.IconWrapper, null, /*#__PURE__*/_createElement(_weDesign.ToolbarTableDeleteNormal, {
      style: {
        fontSize: 16 / scale,
        width: `${16 / scale}px`,
        height: `${16 / scale}px`
      }
    }))));
  }

}

exports.default = InlineToolbarDeleteButton;
//# sourceMappingURL=inlineToolbarDeleteButton.js.map