"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _weDesign = require("@ali/we-design");

var _styled = require("../styled");

var _plus = _interopRequireDefault(require("./plus"));

/* eslint-disable react/no-find-dom-node */
const _createElement = /*#__PURE__*/React.createElement;
const InsertOuterWrapper = /*#__PURE__*/(0, _styledComponents.default)(_styled.ButtonWrapper)(["position:relative;transform:scale(", ");color:white;border:none;background-color:#0089FF;cursor:default;"], p => p.isShow ? 1 : 0.8);

class InlineToolbarInsertButton extends React.Component {
  constructor(...args) {
    super(...args);

    this.handleMouseDown = e => {
      e.preventDefault();
      e.stopPropagation();
      const {
        onInsert
      } = this.props;
      onInsert();
    };
  }

  componentWillUnmount() {
    const {
      onShowIndicatorVisible
    } = this.props;
    onShowIndicatorVisible(false);
  }

  render() {
    const {
      mode,
      locale,
      scale,
      insertIndex
    } = this.props;
    const placement = mode === 'row' ? 'left' : 'top';
    const tip = mode === 'row' ? locale.toolbarInsertRow : locale.toolbarInsertCol;
    const isShow = insertIndex !== -1;
    return /*#__PURE__*/_createElement(InsertOuterWrapper, {
      scale: scale,
      isShow: isShow,
      onMouseDown: this.handleMouseDown,
      onTouchEnd: this.handleMouseDown,
      "data-testid": `table-insert-${mode}-button`
    }, /*#__PURE__*/_createElement(_weDesign.Tooltip, {
      placement: placement,
      title: tip
    }, /*#__PURE__*/_createElement(_styled.IconWrapper, null, /*#__PURE__*/_createElement(_plus.default, {
      scale: scale
    }))));
  }

}

exports.default = InlineToolbarInsertButton;
//# sourceMappingURL=inlineToolbarInsertButton.js.map