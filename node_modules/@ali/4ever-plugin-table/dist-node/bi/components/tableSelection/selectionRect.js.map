{"version":3,"sources":["../../../../../src/bi/components/tableSelection/selectionRect.tsx"],"names":["STICKY_TOOLBAR_INDEX_MAP","constants","TableSelectionRect","styled","div","THEME","blue3","blue0","SelectionRect","props","tableSelection","table","tableRef","scale","colsWidth","style","propsStyle","testid","forceUpdate","setStyle","React","useState","prevDisplayRef","useRef","measureTaskRef","draw","useCallback","tblSelection","current","fastdom","clear","measure","display","pos","tableNode","useLayoutEffect","zIndex","useMemo","startRowIndex","selection","stickyRow"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;uBAN4B,a;AAQ5B,MAAM;AAAEA,EAAAA;AAAF,IAA+BC,mBAArC;;AAEA,MAAMC,kBAAkB,gBAAGC,0BAAOC,GAAV,+IAMFC,iBAAMC,KANJ,EAOFD,iBAAME,KAPJ,CAAxB;;AAqBA,MAAMC,aAAa,GAAIC,KAAD,IAAkB;AACtC,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,KAAK,EAAEC,UAAU,GAAG,EANhB;AAOJC,IAAAA,MAAM,GAAG,EAPL;AAQJC,IAAAA;AARI,MASFT,KATJ;AAWA,QAAM,CAACM,KAAD,EAAQI,QAAR,IAAoBC,KAAK,CAACC,QAAN,CAAoC,EAApC,CAA1B;AACA,QAAMC,cAAc,GAAGF,KAAK,CAACG,MAAN,EAAvB;AACA,QAAMC,cAAc,GAAGJ,KAAK,CAACG,MAAN,EAAvB;AAEA,QAAME,IAAI,GAAGL,KAAK,CAACM,WAAN,CAAmBC,YAAD,IAAkB;AAC/CH,IAAAA,cAAc,CAACI,OAAf,IAA0BC,iBAAQC,KAAR,CAAcN,cAAc,CAACI,OAA7B,CAA1B;AACAJ,IAAAA,cAAc,CAACI,OAAf,GAAyBC,iBAAQE,OAAR,CAAgB,MAAM;AAC7C,UAAI,CAACJ,YAAL,EAAmB;AACjB,YAAIL,cAAc,CAACM,OAAf,KAA2B,MAA/B,EAAuC;AACrCT,UAAAA,QAAQ,CAAC;AACPa,YAAAA,OAAO,EAAE;AADF,WAAD,CAAR;AAGD;;AACD;AACD;;AAED,YAAMC,GAAG,GAAG,oCAAsB;AAChCN,QAAAA,YADgC;AAEhChB,QAAAA,KAFgC;AAGhCuB,QAAAA,SAAS,EAAEtB,QAAQ,CAACgB,OAHY;AAIhCf,QAAAA,KAJgC;AAKhCC,QAAAA;AALgC,OAAtB,CAAZ;;AAOA,UAAImB,GAAJ,EAAS;AACPd,QAAAA,QAAQ,CAAC,EACP,GAAGc,GADI;AAEPD,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OALD,MAKO;AACLb,QAAAA,QAAQ,CAAC;AACPa,UAAAA,OAAO,EAAE;AADF,SAAD,CAAR;AAGD;AACF,KA3BwB,CAAzB;AA4BA,WAAO,MAAM;AACXR,MAAAA,cAAc,CAACI,OAAf,IAA0BC,iBAAQC,KAAR,CAAcN,cAAc,CAACI,OAA7B,CAA1B;AACD,KAFD;AAGD,GAjCY,EAiCV,CAACjB,KAAD,EAAQE,KAAR,EAAeD,QAAf,EAAyBE,SAAzB,CAjCU,CAAb;AAmCAM,EAAAA,KAAK,CAACe,eAAN,CAAsB,MAAM;AAC1BV,IAAAA,IAAI,CAACf,cAAD,CAAJ;AACD,GAFD,EAEG,CAACe,IAAD,EAAOf,cAAP,EAAuBQ,WAAvB,CAFH;AAIA,QAAMkB,MAAM,GAAGhB,KAAK,CAACiB,OAAN,CAAc,MAAM;AACjC,QAAI3B,cAAc,IAAIA,cAAc,CAAC4B,aAAf,KAAiC,CAAvD,EAA0D;AACxD;AACA;AACA,aAAOtC,wBAAwB,CAACuC,SAAhC;AACD;;AAED,WAAOvC,wBAAwB,CAACwC,SAAzB,GAAqC,CAA5C;AACD,GARc,EAQZ,CAAC9B,cAAD,CARY,CAAf;AAUA,sBACE,eAAC,kBAAD;AACE,mBAAaO,MADf;AAEE,IAAA,KAAK,EAAE,EACL,GAAGD,UADE;AAEL,SAAGD,KAFE;AAGLqB,MAAAA;AAHK;AAFT,IADF;AAUD,CA3ED;;eA6Ee5B,a","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport fastdom from 'fastdom';\nimport Table from '../../../mo/models';\nimport { ITableSelection } from '../../types';\nimport { THEME } from '../../constants';\nimport calcTableSelectionPos from '../../utils/calcTableSelectionPos';\nimport constants from '../../../utils/constants';\n\nconst { STICKY_TOOLBAR_INDEX_MAP } = constants;\n\nconst TableSelectionRect = styled.div`\n  position: absolute;\n  z-index: 100;\n  pointer-events: none;\n  outline-offset: -2px;\n  box-sizing: border-box;\n  border: 1px solid ${THEME.blue3};\n  background-color: ${THEME.blue0};\n`;\n\ninterface Props {\n  tableSelection?: ITableSelection | null;\n  table: Table;\n  tableRef: React.RefObject<HTMLTableElement>;\n  scale: number;\n  colsWidth: Table['data']['colsWidth'];\n  style?: React.CSSProperties;\n  testid?: string;\n  forceUpdate?: number;\n}\n\nconst SelectionRect = (props: Props) => {\n  const {\n    tableSelection,\n    table,\n    tableRef,\n    scale,\n    colsWidth,\n    style: propsStyle = {},\n    testid = '',\n    forceUpdate,\n  } = props;\n\n  const [style, setStyle] = React.useState<React.CSSProperties>({});\n  const prevDisplayRef = React.useRef<'none' | 'block'>();\n  const measureTaskRef = React.useRef<() => void>();\n\n  const draw = React.useCallback((tblSelection) => {\n    measureTaskRef.current && fastdom.clear(measureTaskRef.current);\n    measureTaskRef.current = fastdom.measure(() => {\n      if (!tblSelection) {\n        if (prevDisplayRef.current !== 'none') {\n          setStyle({\n            display: 'none',\n          });\n        }\n        return;\n      }\n\n      const pos = calcTableSelectionPos({\n        tblSelection,\n        table,\n        tableNode: tableRef.current,\n        scale,\n        colsWidth,\n      });\n      if (pos) {\n        setStyle({\n          ...pos,\n          display: 'block',\n        });\n      } else {\n        setStyle({\n          display: 'none',\n        })\n      }\n    });\n    return () => {\n      measureTaskRef.current && fastdom.clear(measureTaskRef.current);\n    };\n  }, [table, scale, tableRef, colsWidth]);\n\n  React.useLayoutEffect(() => {\n    draw(tableSelection);\n  }, [draw, tableSelection, forceUpdate]);\n\n  const zIndex = React.useMemo(() => {\n    if (tableSelection && tableSelection.startRowIndex !== 0) {\n      // selection 不包含首行时，selection zIndex 要低于首行\n      // 保证首行吸顶时，滚动文档，选区不遮挡首行\n      return STICKY_TOOLBAR_INDEX_MAP.selection;\n    }\n\n    return STICKY_TOOLBAR_INDEX_MAP.stickyRow + 1;\n  }, [tableSelection]);\n\n  return (\n    <TableSelectionRect\n      data-testid={testid}\n      style={{\n        ...propsStyle,\n        ...style,\n        zIndex,\n      }}\n    />\n  );\n};\n\nexport default SelectionRect;\n"],"file":"selectionRect.js"}