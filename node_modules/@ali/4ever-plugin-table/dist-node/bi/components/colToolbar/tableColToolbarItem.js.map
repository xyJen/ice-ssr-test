{"version":3,"sources":["../../../../../src/bi/components/colToolbar/tableColToolbarItem.tsx"],"names":["TableColToolbarItem","props","index","style","propsStyle","scale","activeRange","selectRanges","deleteRange","children","onRectUpdate","rest","ref","React","useRef","colsWidth","useEffect","dom","current","width","height","TOOLBAR_ITEM_SIZE","borderTopRightRadius","length","float"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;;AAoBrB,MAAMA,mBAAmB,GAAIC,KAAD,IAAmB;AACpD,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAAK,EAAEC,UAFH;AAGJC,IAAAA,KAAK,GAAG,CAHJ;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,YARI;AASJ,OAAGC;AATC,MAUFV,KAVJ;AAYA,QAAMW,GAAG,GAAGC,KAAK,CAACC,MAAN,CAA6B,IAA7B,CAAZ;AACA,QAAM,CAACC,SAAD,IAAc,+BAApB;AAEAF,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpB,UAAMC,GAAG,GAAGL,GAAG,CAACM,OAAhB;AACAR,IAAAA,YAAY,GAAGR,KAAH,EAAUe,GAAV,CAAZ;AAEA,WAAO,MAAM;AACXP,MAAAA,YAAY,GAAGR,KAAH,EAAUe,GAAV,EAAe,IAAf,CAAZ;AACD,KAFD;AAGD,GAPD;AASA,QAAME,KAAK,GAAGJ,SAAS,CAACb,KAAD,CAAvB;AACA,QAAMC,KAA0B,GAAG;AACjCgB,IAAAA,KAAK,EAAEjB,KAAK,KAAK,CAAV,GAAciB,KAAK,GAAG,CAAtB,GAA0BA,KADA;AAEjCC,IAAAA,MAAM,EAAEC,+BAAoBhB,KAFK;AAGjCiB,IAAAA,oBAAoB,EAAEpB,KAAK,KAAKa,SAAS,CAACQ,MAAV,GAAmB,CAA7B,GAAiC,IAAIlB,KAArC,GAA6C,EAHlC;AAIjCmB,IAAAA,KAAK,EAAE,MAJ0B;AAKjC,OAAGpB;AAL8B,GAAnC;AAQA,sBACE,eAAC,4CAAD;AACE,IAAA,GAAG,EAAEQ,GADP;AAEE,IAAA,KAAK,EAAEV,KAFT;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,MAAM,EAAEa,SAAS,CAACQ,MAJpB;AAKE,IAAA,KAAK,EAAEpB,KALT;AAME,IAAA,WAAW,EAAEG,WANf;AAOE,IAAA,YAAY,EAAEC,YAPhB;AAQE,IAAA,WAAW,EAAEC;AARf,KASMG,IATN,GAWGF,QAXH,CADF;AAeD,CAjDM","sourcesContent":["import * as React from 'react';\nimport { usePixelColsWidth } from '../../../utils/hooks';\nimport { TOOLBAR_ITEM_SIZE } from '../../constants';\nimport { RowColToolbarItemRect, Range } from '../rowColToolbarItemRect';\n\ntype IProps = {\n  index: number;\n  scale?: number;\n  // 选区所在行列\n  activeRange?: Range | null;\n  // 选中行列\n  selectRanges?: Range[] | null;\n  // 删除行列范围\n  deleteRange?: Range | null;\n  onRectUpdate?: (\n    index: number,\n    colNode: HTMLDivElement,\n    isDelete?: boolean,\n  ) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const TableColToolbarItem = (props: IProps) => {\n  const {\n    index,\n    style: propsStyle,\n    scale = 1,\n    activeRange,\n    selectRanges,\n    deleteRange,\n    children,\n    onRectUpdate,\n    ...rest\n  } = props;\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [colsWidth] = usePixelColsWidth();\n\n  React.useEffect(() => {\n    const dom = ref.current!;\n    onRectUpdate?.(index, dom);\n\n    return () => {\n      onRectUpdate?.(index, dom, true);\n    };\n  });\n\n  const width = colsWidth[index];\n  const style: React.CSSProperties = {\n    width: index === 0 ? width + 1 : width,\n    height: TOOLBAR_ITEM_SIZE / scale,\n    borderTopRightRadius: index === colsWidth.length - 1 ? 3 / scale : '',\n    float: 'left',\n    ...propsStyle,\n  };\n\n  return (\n    <RowColToolbarItemRect\n      ref={ref}\n      index={index}\n      type=\"col\"\n      length={colsWidth.length}\n      style={style}\n      activeRange={activeRange}\n      selectRanges={selectRanges}\n      deleteRange={deleteRange}\n      {...rest}\n    >\n      {children}\n    </RowColToolbarItemRect>\n  );\n};\n"],"file":"tableColToolbarItem.js"}