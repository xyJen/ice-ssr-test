{"version":3,"sources":["../../../../../src/bi/components/colToolbar/dragElement.tsx"],"names":["HEADER_HEIGHT","TOOLBAR_ITEM_SIZE","BackgroundLayer","styled","div","p","visible","width","MIN_COL_WIDTH","height","DragWrapper","THEME","dragBlue1","DragHeader","dragBlue0","DragElement","props","ref","renderWidth","renderHeight","React","forwardRef"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;AAHA;uBAC4B,a;AAI5B,MAAMA,aAAa,GAAGC,4BAAtB;;AAEA,MAAMC,eAAe,gBAAGC,0BAAOC,GAAV,uQAMPC,CAAD,IAAQA,CAAC,CAACC,OAAF,GAAY,OAAZ,GAAsB,MANtB,EAOTD,CAAD,IAAOA,CAAC,CAACE,KAPC,EASNC,wBATM,EAURH,CAAD,IAAOA,CAAC,CAACI,MAVA,EAWLD,2BAAgBR,aAXX,EAYL,MAAMA,aAZD,EAcWA,aAdX,CAArB;;AAqBA,MAAMU,WAAW,gBAAGP,0BAAOC,GAAV,mGAIDO,iBAAMC,SAJL,EAKKD,iBAAMC,SALX,CAAjB;;AAUA,MAAMC,UAAU,gBAAGV,0BAAOC,GAAV,kEAEJJ,aAFI,EAGMW,iBAAMG,SAHZ,CAAhB;;wBA6BM,eAAC,WAAD,qBACE,eAAC,UAAD,OADF,C;;AAhBN,MAAMC,WAAW,GAAG,CAClBC,KADkB,EAElBC,GAFkB,KAGf;AACH,QAAM;AAAEX,IAAAA,OAAO,GAAG,KAAZ;AAAmBC,IAAAA,KAAK,GAAG,CAA3B;AAA8BE,IAAAA,MAAM,GAAG;AAAvC,MAA6CO,KAAnD;AACA,QAAME,WAAW,GAAGZ,OAAO,GAAGC,KAAH,GAAW,CAAtC;AACA,QAAMY,YAAY,GAAGb,OAAO,GAAGG,MAAH,GAAY,CAAxC;AACA,sBACE,eAAC,eAAD;AACE,IAAA,GAAG,EAAEQ,GADP;AAEE,IAAA,OAAO,EAAEX,OAFX;AAGE,IAAA,KAAK,EAAEY,WAHT;AAIE,IAAA,MAAM,EAAEC,YAJV;AAKE,mBAAY,4BALd;AAME,oBAAcb;AANhB,UADF;AAcD,CArBD;;4BAuBec,KAAK,CAACC,UAAN,CAAiBN,WAAjB,C","sourcesContent":["/* eslint-disable react/no-find-dom-node */\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { THEME, MIN_COL_WIDTH, TOOLBAR_ITEM_SIZE } from '../../constants';\n\nconst HEADER_HEIGHT = TOOLBAR_ITEM_SIZE;\n\nconst BackgroundLayer = styled.div<{\n  visible: boolean;\n  width: number;\n  height: number;\n}>`\n  position: absolute;\n  display: ${(p) => (p.visible ? 'block' : 'none')};\n  width: ${(p) => p.width}px;\n  max-width: 108px;\n  min-width: ${MIN_COL_WIDTH}px;\n  height: ${(p) => p.height}px;\n  min-height: ${MIN_COL_WIDTH + HEADER_HEIGHT}px;\n  max-height: ${160 + HEADER_HEIGHT}px;\n  will-change: left, top;\n  transform: translate(-50%, -${HEADER_HEIGHT}px);\n  z-index: 999;\n  cursor: move;\n  background: rgba(255, 255, 255, 0.9);\n  user-select: none;\n`;\n\nconst DragWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  background: ${THEME.dragBlue1};\n  border: 1px solid ${THEME.dragBlue1};\n  width: 100%;\n  height: 100%;\n`;\n\nconst DragHeader = styled.div`\n  width: 100%;\n  height: ${HEADER_HEIGHT}px;\n  background-color: ${THEME.dragBlue0};\n  opacity: 0.5;\n`;\n\ninterface Props {\n  visible: boolean;\n  width: number;\n  height: number;\n}\n\nconst DragElement = (\n  props: Props,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { visible = false, width = 0, height = 0 } = props;\n  const renderWidth = visible ? width : 0;\n  const renderHeight = visible ? height : 0;\n  return (\n    <BackgroundLayer\n      ref={ref}\n      visible={visible}\n      width={renderWidth}\n      height={renderHeight}\n      data-testid=\"table-col-drag-placeholder\"\n      data-visible={visible}\n    >\n      <DragWrapper>\n        <DragHeader />\n      </DragWrapper>\n    </BackgroundLayer>\n  );\n};\n\nexport default React.forwardRef(DragElement);\n"],"file":"dragElement.js"}