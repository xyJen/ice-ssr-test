{"version":3,"sources":["../../../../../../src/bi/components/toolbarButtons/next/tableThemeButton.tsx"],"names":["TableThemeButton","props","controller","locale","rest","value","table","selection","isDisabled","backgroundColor","borderColor","query","handleTableBorderColor","color","val","lineMap","lineType","sz","size","layout","run","handleTableBgColorChange","React","useCallback","fill","DEFAULT_BORDER_COLOR","PluginRoles","tableTheme","borderAndFillColor"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;uBAR4B,a;;AAgBb,SAASA,gBAAT,CAA0BC,KAA1B,EAAyD;AACtE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAMI,KAAK,GAAG,uBAASD,KAAT,CAAd;AACA,QAAME,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;AAEA,MAAIM,UAAU,GAAG,EAAED,SAAS,IAAID,KAAf,CAAjB;AACA,QAAM;AAAEG,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAmCR,UAAU,CAACS,KAAX,CAAiB,wBAAjB,KAA8C,EAAvF;AAEA,QAAMC,sBAAsB,GAAG,wBAAaC,KAAD,IAAW;AACpD,UAAMC,GAAG,GAAGC,mBAAQ,MAAR,EAAgBC,QAA5B;AACA,UAAMC,EAAE,GAAGF,mBAAQ,MAAR,EAAgBG,IAA3B;AACA,UAAMC,MAAM,GAAG,KAAf;;AAEA,QAAIb,KAAJ,EAAW;AACTJ,MAAAA,UAAU,CAACkB,GAAX,CAAe,UAAf,EAA2B,6BAAed,KAAf,EAA+BC,SAA/B,EAA0CY,MAA1C,EAAkDN,KAAlD,EAAyDI,EAAzD,EAA6DH,GAA7D,CAA3B;AACD;AACF,GAR8B,EAQ5B,CAACZ,UAAD,EAAaI,KAAb,EAAoBC,SAApB,CAR4B,CAA/B;;AAUA,QAAMc,wBAAwB,GAAGC,eAAMC,WAAN,CAAmBC,IAAD,IAAkB;AACnEtB,IAAAA,UAAU,CAACkB,GAAX,CAAe,UAAf,EAA2B,+BAAiBd,KAAjB,EAAwBC,SAAxB,EAAmCiB,IAAnC,CAA3B;AACD,GAFgC,EAE9B,CAACtB,UAAD,EAAaI,KAAb,EAAoBC,SAApB,CAF8B,CAAjC;;AAIA,sBACE,eAAC,+BAAD;AACE,IAAA,wBAAwB,EAAEK,sBAD5B;AAEE,IAAA,oBAAoB,EAAES,wBAFxB;AAGE,IAAA,mBAAmB,EAAC,EAHtB;AAIE,IAAA,uBAAuB,EAAEI,+BAJ3B;AAKE,IAAA,QAAQ,EAAEjB,UALZ;AAME,IAAA,YAAY,EAAEC,eANhB;AAOE,IAAA,gBAAgB,EAAEC,WAPpB;AAQE,IAAA,IAAI,EAAEgB,gBAAYC,UARpB;AASE,IAAA,KAAK,EAAExB,MAAM,EAAEyB,kBAAR,IAA8B;AATvC,KAWOxB,IAXP,EADF;AAgBD","sourcesContent":["import React, { useCallback } from 'react';\nimport type { Block, Controller } from '@ali/4ever-cangjie';\nimport { TableThemeButton as TableThemeButtonComp } from '@ali/4ever-component';\nimport type { IToolbarButtonConfig } from '@ali/4ever-component';\nimport { setTableBorder } from '../../../actions';\nimport getTable from '../../../utils/getTable';\nimport getTableSelection from '../../../utils/getTableSelection';\nimport { setTableCellFill } from '../../../actions';\nimport { lineMap, DEFAULT_BORDER_COLOR } from '../../../../utils/constants';\nimport { TableRole as PluginRoles } from '../../../../utils/role';\n\nexport interface TableBorderButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\n\nexport default function TableThemeButton(props: TableBorderButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const { value } = controller;\n  const table = getTable(value);\n  const selection = getTableSelection(controller);\n\n  let isDisabled = !(selection && table)\n  const { backgroundColor, borderColor } = controller.query('getTableSelectionTheme') || {};\n\n  const handleTableBorderColor = useCallback((color) => {\n    const val = lineMap['Thin'].lineType;\n    const sz = lineMap['Thin'].size;\n    const layout = 'all';\n\n    if (table) {\n      controller.run('onAction', setTableBorder(table as Block, selection, layout, color, sz, val));\n    }\n  }, [controller, table, selection]);\n\n  const handleTableBgColorChange = React.useCallback((fill: string) => {\n    controller.run('onAction', setTableCellFill(table, selection, fill));\n  }, [controller, table, selection]);\n\n  return (\n    <TableThemeButtonComp\n      onTableBorderColorChange={handleTableBorderColor}\n      onTableBgColorChange={handleTableBgColorChange}\n      defaultTableBgColor=\"\"\n      defaultTableBorderColor={DEFAULT_BORDER_COLOR}\n      disabled={isDisabled}\n      tableBgColor={backgroundColor}\n      tableBorderColor={borderColor}\n      role={PluginRoles.tableTheme}\n      title={locale?.borderAndFillColor || 'Border and background color'}\n      {\n        ...rest\n      }\n    />\n  );\n}\n"],"file":"tableThemeButton.js"}