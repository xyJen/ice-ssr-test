"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TableThemeButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _everComponent = require("@ali/4ever-component");

var _actions = require("../../../actions");

var _getTable = _interopRequireDefault(require("../../../utils/getTable"));

var _getTableSelection = _interopRequireDefault(require("../../../utils/getTableSelection"));

var _constants = require("../../../../utils/constants");

var _role = require("../../../../utils/role");

const _createElement = /*#__PURE__*/_react.default.createElement;

function TableThemeButton(props) {
  const {
    controller,
    locale,
    ...rest
  } = props;
  const {
    value
  } = controller;
  const table = (0, _getTable.default)(value);
  const selection = (0, _getTableSelection.default)(controller);
  let isDisabled = !(selection && table);
  const {
    backgroundColor,
    borderColor
  } = controller.query('getTableSelectionTheme') || {};
  const handleTableBorderColor = (0, _react.useCallback)(color => {
    const val = _constants.lineMap['Thin'].lineType;
    const sz = _constants.lineMap['Thin'].size;
    const layout = 'all';

    if (table) {
      controller.run('onAction', (0, _actions.setTableBorder)(table, selection, layout, color, sz, val));
    }
  }, [controller, table, selection]);

  const handleTableBgColorChange = _react.default.useCallback(fill => {
    controller.run('onAction', (0, _actions.setTableCellFill)(table, selection, fill));
  }, [controller, table, selection]);

  return /*#__PURE__*/_createElement(_everComponent.TableThemeButton, (0, _extends2.default)({
    onTableBorderColorChange: handleTableBorderColor,
    onTableBgColorChange: handleTableBgColorChange,
    defaultTableBgColor: "",
    defaultTableBorderColor: _constants.DEFAULT_BORDER_COLOR,
    disabled: isDisabled,
    tableBgColor: backgroundColor,
    tableBorderColor: borderColor,
    role: _role.TableRole.tableTheme,
    title: locale?.borderAndFillColor || 'Border and background color'
  }, rest));
}
//# sourceMappingURL=tableThemeButton.js.map