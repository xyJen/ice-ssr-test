{"version":3,"sources":["../../../../../../src/bi/components/toolbarButtons/next/tableFillButton.tsx"],"names":["TableFillButton","props","controller","locale","rest","value","table","selection","isDisabled","color","startRowIndex","startColIndex","tablePath","document","getPath","key","cellPath","cell","getNodeByPath","payload","data","fill","undefined","handleChange","React","useCallback","run","currentPreset","query","mode","handleSelectValueChange","EColorPanelMode","art","normal","fillColor","tipText","PluginRoles","tableFillColor"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;uBAR4B,a;;AAeb,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAMI,KAAK,GAAG,uBAASD,KAAT,CAAd;AACA,QAAME,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;AACA,MAAIM,UAAU,GAAG,EAAED,SAAS,IAAID,KAAf,CAAjB;AACA,MAAIG,KAAJ;;AACA,MAAIF,SAAS,IAAID,KAAjB,EAAwB;AACtB,UAAM;AAAEI,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAmCJ,SAAzC;AAEA,UAAMK,SAAS,GAAGP,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBR,KAAK,CAACS,GAA7B,CAAlB;AACA,UAAMC,QAAQ,GAAGJ,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,aAAf,EAA8BC,aAA9B,CAA9B;AACA,UAAMM,IAAI,GAAGD,QAAQ,IAAIX,KAAK,CAACQ,QAAN,CAAeK,aAAf,CAA6BF,QAA7B,CAAzB;;AACA,QAAIC,IAAJ,EAAU;AACR,YAAME,OAAO,GAAGF,IAAI,CAACG,IAArB;AACAX,MAAAA,KAAK,GAAGU,OAAO,IAAIA,OAAO,CAACE,IAA3B;AACD;AACF,GAjB4C,CAkB7C;;;AACAZ,EAAAA,KAAK,GAAGA,KAAK,KAAKa,SAAV,GAAsB,SAAtB,GAAkCb,KAA1C;AAEA,QAAMc,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBJ,IAAD,IAAkB;AACvDnB,IAAAA,UAAU,CAACwB,GAAX,CAAe,UAAf,EAA2B,+BAAiBpB,KAAjB,EAAwBC,SAAxB,EAAmCc,IAAnC,CAA3B;AACD,GAFoB,EAElB,CAACnB,UAAD,EAAaI,KAAb,EAAoBC,SAApB,CAFkB,CAArB;AAIA,QAAMoB,aAAa,GAAGzB,UAAU,CAAC0B,KAAX,CAAiB,mBAAjB,GAAuCC,IAA7D;AAEA,QAAMC,uBAAuB,GAAGN,KAAK,CAACC,WAAN,CAAmBI,IAAD,IAA4B;AAC5E3B,IAAAA,UAAU,CAACwB,GAAX,CAAe,UAAf,EAA2B,uCAAkB;AAAEG,MAAAA,IAAI,EAAGA,IAAI,KAAK,KAAT,GAAiBE,2BAAgBC,GAAjC,GAAuCD,2BAAgBE;AAAhE,KAAlB,CAA3B;AACD,GAF+B,EAE7B,CAAC/B,UAAD,CAF6B,CAAhC;AAIA,sBACE,eAAC,mCAAD;AACE,IAAA,MAAM,EAAC,uBADT;AAEE,IAAA,QAAQ,EAAE,CAAC,CAACM,UAFd;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,aAAa,EAAEc,YAJjB;AAKE,IAAA,OAAO,EAAEpB,MAAM,CAAC+B,SAAP,EAAkBC,OAL7B;AAME,IAAA,IAAI,EAAEC,gBAAYC,cANpB;AAOE,IAAA,aAAa,EAAEV,aAPjB;AAQE,IAAA,qBAAqB,EAAEG;AARzB,KASM1B,IATN,EADF;AAaD","sourcesContent":["import * as React from 'react';\nimport { Controller, Block } from '@ali/4ever-cangjie';\nimport { TableRole as PluginRoles } from '../../../../utils/role';\nimport { EColorPanelMode } from '@ali/we-toolbar';\n\nimport { setTableCellFill } from '../../../actions';\nimport getTable from '../../../utils/getTable';\nimport getTableSelection from '../../../utils/getTableSelection';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\nimport { TableFillColorPicker, IToolbarButtonConfig } from '@ali/4ever-component';\n\nexport interface TablePickerButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nexport default function TableFillButton(props) {\n  const { controller, locale, ...rest } = props;\n  const { value } = controller as Controller;\n  const table = getTable(value);\n  const selection = getTableSelection(controller);\n  let isDisabled = !(selection && table)\n  let color;\n  if (selection && table) {\n    const { startRowIndex, startColIndex } = selection;\n\n    const tablePath = value.document.getPath(table.key);\n    const cellPath = tablePath && [...tablePath, startRowIndex, startColIndex];\n    const cell = cellPath && value.document.getNodeByPath(cellPath) as Block;\n    if (cell) {\n      const payload = cell.data;\n      color = payload && payload.fill;\n    }\n  }\n  // DEFAULT COLOR\n  color = color === undefined ? '#FDBE3D' : color;\n\n  const handleChange = React.useCallback((fill: string) => {\n    controller.run('onAction', setTableCellFill(table, selection, fill));\n  }, [controller, table, selection]);\n\n  const currentPreset = controller.query('getColorPanelMode')?.mode;\n\n  const handleSelectValueChange = React.useCallback((mode: 'normal' | 'art') => {\n    controller.run('onAction', setColorPanelMode({ mode: (mode === 'art' ? EColorPanelMode.art : EColorPanelMode.normal) }));\n  }, [controller]);\n\n  return (\n    <TableFillColorPicker\n      testid=\"bi-toolbar-table-fill\"\n      disabled={!!isDisabled}\n      color={color}\n      onColorChange={handleChange}\n      tooltip={locale.fillColor?.tipText}\n      role={PluginRoles.tableFillColor}\n      currentPreset={currentPreset}\n      onCurrentPresetChange={handleSelectValueChange}\n      {...rest}\n    />\n  );\n}\n"],"file":"tableFillButton.js"}