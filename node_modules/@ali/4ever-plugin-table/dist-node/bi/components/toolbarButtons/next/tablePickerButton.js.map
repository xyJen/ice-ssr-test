{"version":3,"sources":["../../../../../../src/bi/components/toolbarButtons/next/tablePickerButton.tsx"],"names":["TablePickerButton","props","controller","locale","tooltip","tooltipProp","rest","value","tableSelection","query","isDisabled","selection","isBlurred","data","edgeSelection","isOverlayVisible","setOverlayVisible","React","useState","handleChange","useCallback","row","col","run","tablePanel","useMemo","title","quickInsertTitle","PluginRoles","tablePicker"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;uBAN4B,a;;yBAsDhB,eAAC,wBAAD,O;;AAzCG,SAASA,iBAAT,CAA2BC,KAA3B,EAA0D;AACvE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,OAAO,EAAEC,WAA/B;AAA4C,OAAGC;AAA/C,MAAwDL,KAA9D;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYL,UAAlB;AACA,QAAMM,cAAc,GAAGN,UAAU,CAACO,KAAX,CAAiB,mBAAjB,CAAvB,CAHuE,CAIvE;;AACA,QAAMC,UAAU,GAAGH,KAAK,CAACI,SAAN,CAAgBC,SAAhB,IACdL,KAAK,CAACM,IAAN,CAAWC,aADG,IAEdN,cAFc,IAGd,qCAAuBD,KAAvB,CAHc,IAIdL,UAAU,CAACO,KAAX,CAAiB,mBAAjB,CAJc,IAKdP,UAAU,CAACO,KAAX,CAAiB,sBAAjB,CALc,IAMdP,UAAU,CAACO,KAAX,CAAiB,yBAAjB,CANL;AAQA,QAAM,CAACM,gBAAD,EAAmBC,iBAAnB,IAAwCC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9C;AAEA,QAAMC,YAAY,GAAGF,KAAK,CAACG,WAAN,CAAkB,CAACC,GAAD,EAAcC,GAAd,KAA8B;AACnEpB,IAAAA,UAAU,CAACqB,GAAX,CAAe,UAAf,EAA2B,0BAAYF,GAAZ,EAAiBC,GAAjB,CAA3B;AACAN,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHoB,EAGlB,CAACd,UAAD,CAHkB,CAArB;;AAfuE,0BAqBrE,eAAC,oBAAD;AACE,IAAA,GAAG,EAAE,EADP;AAEE,IAAA,GAAG,EAAE,EAFP;AAGE,IAAA,MAAM,EAAEiB;AAHV,IArBqE;;AAoBvE,QAAMK,UAAU,GAAGP,KAAK,CAACQ,OAAN,CAAc,UAAd,EAMhB,CAACN,YAAD,CANgB,CAAnB;AAQA,QAAMf,OAAO,GAAGa,KAAK,CAACQ,OAAN,CAAc,OAAO;AACnCC,IAAAA,KAAK,EAAEvB,MAAM,EAAEwB,gBADoB;AAEnC,OAAGtB;AAFgC,GAAP,CAAd,EAGZ,EAHY,CAAhB;AAKA,sBACE,eAAC,uBAAD;AACE,IAAA,MAAM,EAAC,yBADT;AAEE,IAAA,cAAc,EAAEU,gBAFlB;AAGE,IAAA,eAAe,EAAEC,iBAHnB;AAIE,IAAA,OAAO,EAAEQ,UAJX;AAKE,IAAA,QAAQ,EAAEd,UALZ;AAME,IAAA,IAAI,EAAEkB,gBAAYC,WANpB;AAOE,IAAA,IAAI,OAPN;AAQE,IAAA,KAAK,EAAE1B,MAAM,EAAEwB,gBARjB;AASE,IAAA,OAAO,EAAEvB;AATX,KAUME,IAVN,EADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { TablePanel } from '@ali/we-design';\nimport { IconMenu, IToolbarButtonConfig, IconTable } from '@ali/4ever-component';\nimport { TableRole as PluginRoles } from '../../../../utils/role';\n\nimport isSelectionInTableCell from '../../../utils/isSelectionInTableCell';\nimport { insertTable } from '../../../actions';\n\nexport interface TablePickerButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nexport default function TablePickerButton(props: TablePickerButtonProps) {\n  const { controller, locale, tooltip: tooltipProp, ...rest } = props;\n  const { value } = controller;\n  const tableSelection = controller.query('hasTableSelection');\n  // @ts-ignore\n  const isDisabled = value.selection.isBlurred\n    || value.data.edgeSelection\n    || tableSelection\n    || isSelectionInTableCell(value)\n    || controller.query('isSelectionInLink')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInListSymbol');\n\n  const [isOverlayVisible, setOverlayVisible] = React.useState(false);\n\n  const handleChange = React.useCallback((row: number, col: number) => {\n    controller.run('onAction', insertTable(row, col));\n    setOverlayVisible(false);\n  }, [controller]);\n\n  const tablePanel = React.useMemo(() => (\n    <TablePanel\n      row={10}\n      col={10}\n      onPick={handleChange}\n    />\n  ), [handleChange]);\n\n  const tooltip = React.useMemo(() => ({\n    title: locale?.quickInsertTitle,\n    ...tooltipProp,\n  }), []);\n\n  return (\n    <IconMenu\n      testid=\"bi-toolbar-table-picker\"\n      overlayVisible={isOverlayVisible}\n      onVisibleChange={setOverlayVisible}\n      overlay={tablePanel}\n      disabled={isDisabled}\n      role={PluginRoles.tablePicker}\n      icon={<IconTable />}\n      title={locale?.quickInsertTitle}\n      tooltip={tooltip}\n      {...rest}\n    />\n  );\n}\n"],"file":"tablePickerButton.js"}