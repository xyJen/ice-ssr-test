{"version":3,"sources":["../../../../../../src/bi/components/toolbarButtons/next/tableBorderSet.tsx"],"names":["TableBorderButton","props","controller","locale","rest","value","table","selection","setBorder","layout","color","style","val","lineMap","lineType","sz","size","run","PluginRoles","tableBorder"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAN4B,a;;AAcb,SAASA,iBAAT,CAA2BC,KAA3B,EAA0D;AACvE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAMI,KAAK,GAAG,uBAASD,KAAT,CAAd;AACA,QAAME,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;AAEA,QAAMM,SAAS,GAAG,wBAAY,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAD,KAA8B;AAC1D,UAAMC,GAAG,GAAGC,mBAAQF,KAAR,EAAeG,QAA3B;AACA,UAAMC,EAAE,GAAGF,mBAAQF,KAAR,EAAeK,IAA1B;;AACA,QAAIV,KAAJ,EAAW;AACTJ,MAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2B,6BAAeX,KAAf,EAA+BC,SAA/B,EAA0CE,MAA1C,EAAkDC,KAAlD,EAAyDK,EAAzD,EAA6DH,GAA7D,CAA3B;AACD;AACF,GANiB,EAMf,CAACV,UAAD,EAAaI,KAAb,EAAoBC,SAApB,CANe,CAAlB;AASA,sBACE,eAAC,wBAAD;AACE,IAAA,QAAQ,EAAEC,SADZ;AAEE,IAAA,WAAW,EAAEA,SAFf;AAGE,IAAA,IAAI,EAAEU,gBAAYC;AAHpB,KAIMf,IAJN,EADF;AAQD","sourcesContent":["import React, { useCallback } from 'react';\nimport { Block, Controller } from '@ali/4ever-cangjie';\nimport { TableRole as PluginRoles } from '../../../../utils/role';\nimport { setTableBorder } from '../../../actions';\nimport getTable from '../../../utils/getTable';\nimport getTableSelection from '../../../utils/getTableSelection';\nimport { IToolbarButtonConfig, BorderSet } from '@ali/4ever-component';\nimport { lineMap } from '../../../../utils/constants';\n\nexport interface TableBorderButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\n\nexport default function TableBorderButton(props: TableBorderButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const { value } = controller;\n  const table = getTable(value);\n  const selection = getTableSelection(controller);\n\n  const setBorder = useCallback(({ layout, color, style }) => {\n    const val = lineMap[style].lineType;\n    const sz = lineMap[style].size;\n    if (table) {\n      controller.run('onAction', setTableBorder(table as Block, selection, layout, color, sz, val));\n    }\n  }, [controller, table, selection]);\n\n\n  return (\n    <BorderSet\n      onChange={setBorder}\n      onLeftClick={setBorder}\n      role={PluginRoles.tableBorder}\n      {...rest}\n    />\n  );\n}\n\n\n\n"],"file":"tableBorderSet.js"}