{"version":3,"sources":["../../../../../../src/bi/components/toolbarButtons/next/tableVAlignButton.tsx"],"names":["SUPPORT_ALIGNMENT","middle","top","bottom","DEFAULT_TABLE_ALIGNMENT","TableVAlignButton","props","controller","locale","options","rest","alignment","selection","tip","vAlignMiddle","vAlignTop","vAlignBottom","handleChange","React","useCallback","vAlign","table","value","run","selectOptions","useMemo","title","icon","PluginRoles","tableVAlignSelect"],"mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAN4B,a;AAQ5B,MAAMA,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE,IADgB;AAExBC,EAAAA,GAAG,EAAE,IAFmB;AAGxBC,EAAAA,MAAM,EAAE;AAHgB,CAA1B;AAMO,MAAMC,uBAAuB,GAAG,QAAhC;;;AAQQ,SAASC,iBAAT,CAA2BC,KAA3B,EAA0D;AACvE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,OAAtB;AAA+B,OAAGC;AAAlC,MAA2CJ,KAAjD;AACA,MAAIK,SAAwB,GAAG,wBAAUJ,UAAV,CAA/B;AACAI,EAAAA,SAAS,GAAGX,iBAAiB,CAACW,SAAD,CAAjB,GAA+BA,SAA/B,GAA2CP,uBAAvD;AACA,QAAMQ,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;AAEA,MAAIM,GAAG,GAAGL,MAAM,CAACM,YAAjB;;AACA,MAAIH,SAAS,KAAK,KAAlB,EAAyB;AACvBE,IAAAA,GAAG,GAAGL,MAAM,CAACO,SAAb;AACD,GAFD,MAEO,IAAIJ,SAAS,KAAK,QAAlB,EAA4B;AACjCE,IAAAA,GAAG,GAAGL,MAAM,CAACQ,YAAb;AACD;;AAED,QAAMC,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBC,MAAD,IAA2B;AAChE,UAAMC,KAAK,GAAG,uBAASd,UAAU,CAACe,KAApB,CAAd;AACAf,IAAAA,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2B,iCAAmBF,KAAnB,EAA0BT,SAA1B,EAAqCQ,MAArC,CAA3B;AACD,GAHoB,EAGlB,CAACR,SAAD,CAHkB,CAArB;AAKA,QAAMY,aAAa,GAAGN,KAAK,CAACO,OAAN,CAA2E,OAAO;AACtGvB,IAAAA,GAAG,EAAE;AACHwB,MAAAA,KAAK,EAAEjB,OAAO,EAAEP,GAAT,EAAcwB,KAAd,IAAuBlB,MAAM,CAACO,SADlC;AAEHY,MAAAA,IAAI,EAAElB,OAAO,EAAEP,GAAT,EAAcyB;AAFjB,KADiG;AAKtG1B,IAAAA,MAAM,EAAE;AACNyB,MAAAA,KAAK,EAAEjB,OAAO,EAAER,MAAT,EAAiByB,KAAjB,IAA0BlB,MAAM,CAACM,YADlC;AAENa,MAAAA,IAAI,EAAElB,OAAO,EAAER,MAAT,EAAiB0B;AAFjB,KAL8F;AAStGxB,IAAAA,MAAM,EAAE;AACNuB,MAAAA,KAAK,EAAEjB,OAAO,EAAEN,MAAT,EAAiBuB,KAAjB,IAA0BlB,MAAM,CAACQ,YADlC;AAENW,MAAAA,IAAI,EAAElB,OAAO,EAAEN,MAAT,EAAiBwB;AAFjB;AAT8F,GAAP,CAA3E,EAalB,CAACnB,MAAD,EAASC,OAAT,CAbkB,CAAtB;AAeA,sBACE,eAAC,kCAAD;AACE,IAAA,OAAO,EAAEI,GADX;AAEE,IAAA,MAAM,EAAC,mBAFT;AAGE,IAAA,OAAO,EAAEW,aAHX;AAIE,IAAA,KAAK,EAAEb,SAJT;AAKE,IAAA,QAAQ,EAAE,CAACC,SALb;AAME,IAAA,QAAQ,EAAEK,YANZ;AAOE,IAAA,IAAI,EAAEW,gBAAYC;AAPpB,KAQMnB,IARN,EADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { TableRole as PluginRoles } from '../../../../utils/role';\nimport getTable from '../../../utils/getTable';\nimport getTableSelection from '../../../utils/getTableSelection';\nimport { setTableCellVAlign } from '../../../actions';\nimport getVAlign from '../../../utils/getVAlign';\nimport { IToolbarButtonConfig, VerticalAlign, VerticalAlignSelect } from '@ali/4ever-component';\n\nconst SUPPORT_ALIGNMENT = {\n  middle: true,\n  top: true,\n  bottom: true,\n};\n\nexport const DEFAULT_TABLE_ALIGNMENT = 'middle';\n\nexport interface TableVAlignButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale: Record<string, string>;\n  options?: Partial<Record<VerticalAlign, { title?: string, icon?: React.ReactElement }>>;\n}\n\nexport default function TableVAlignButton(props: TableVAlignButtonProps) {\n  const { controller, locale, options, ...rest } = props;\n  let alignment: VerticalAlign = getVAlign(controller) as VerticalAlign;\n  alignment = SUPPORT_ALIGNMENT[alignment] ? alignment : DEFAULT_TABLE_ALIGNMENT;\n  const selection = getTableSelection(controller);\n\n  let tip = locale.vAlignMiddle;\n  if (alignment === 'top') {\n    tip = locale.vAlignTop;\n  } else if (alignment === 'bottom') {\n    tip = locale.vAlignBottom;\n  }\n\n  const handleChange = React.useCallback((vAlign: VerticalAlign) => {\n    const table = getTable(controller.value);\n    controller.run('onAction', setTableCellVAlign(table, selection, vAlign));\n  }, [selection]);\n\n  const selectOptions = React.useMemo<React.ComponentProps<typeof VerticalAlignSelect>['options']>(() => ({\n    top: {\n      title: options?.top?.title || locale.vAlignTop,\n      icon: options?.top?.icon,\n    },\n    middle: {\n      title: options?.middle?.title || locale.vAlignMiddle,\n      icon: options?.middle?.icon,\n    },\n    bottom: {\n      title: options?.bottom?.title || locale.vAlignBottom,\n      icon: options?.bottom?.icon,\n    },\n  }), [locale, options])\n\n  return (\n    <VerticalAlignSelect\n      tooltip={tip}\n      testid=\"bi-toolbar-valign\"\n      options={selectOptions}\n      value={alignment}\n      disabled={!selection}\n      onChange={handleChange}\n      role={PluginRoles.tableVAlignSelect}\n      {...rest}\n    />\n  );\n}\n"],"file":"tableVAlignButton.js"}