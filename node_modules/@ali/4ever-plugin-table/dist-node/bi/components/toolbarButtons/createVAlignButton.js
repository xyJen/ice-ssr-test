"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createVAlignButton;

var React = _interopRequireWildcard(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _lodash = require("lodash");

var _weIcon = require("@ali/we-icon");

var _role = require("../../../utils/role");

var _getVAlign = _interopRequireDefault(require("../../utils/getVAlign"));

var _getTable = _interopRequireDefault(require("../../utils/getTable"));

var _actions = require("../../actions");

var _getTableSelection = _interopRequireDefault(require("../../utils/getTableSelection"));

const _createElement = /*#__PURE__*/React.createElement;

function createVAlignButton(type) {
  return function VAlignButton(props) {
    const {
      controller,
      locale
    } = props;
    const selection = (0, _getTableSelection.default)(controller);
    const isActive = (0, _getVAlign.default)(controller) === type;
    const handleMouseDown = React.useCallback(() => {
      const table = (0, _getTable.default)(controller.value);
      controller.run('onAction', (0, _actions.setTableCellVAlign)(table, selection, type));
    }, [controller, selection]);
    let title = '';
    let Button;

    switch (type) {
      case 'middle':
        Button = _weIcon.ToolbarVerticalAlignMiddleNormal;
        title = locale?.vAlignMiddle;
        break;

      case 'top':
        Button = _weIcon.ToolbarVerticalAlignTopNormal;
        title = locale?.vAlignTop;
        break;

      case 'bottom':
        Button = _weIcon.ToolbarVerticalAlignBottomNormal;
        title = locale?.vAlignBottom;
        break;

      default:
        Button = _weIcon.ToolbarVerticalAlignTopNormal;
        break;
    }

    return /*#__PURE__*/_createElement(_weToolbar.IconButton, {
      active: isActive,
      icon: /*#__PURE__*/_createElement(Button, null),
      title: title,
      tooltip: title,
      testid: "bi-toolbar-table-valign",
      role: `${_role.TableRole.tableVAlign}${(0, _lodash.capitalize)(type)}`,
      onClick: handleMouseDown
    });
  };
}
//# sourceMappingURL=createVAlignButton.js.map