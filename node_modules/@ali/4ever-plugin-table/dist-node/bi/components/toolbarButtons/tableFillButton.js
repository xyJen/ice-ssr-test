"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TableFillButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _role = require("../../../utils/role");

var _actions = require("../../actions");

var _getTable = _interopRequireDefault(require("../../utils/getTable"));

var _getTableSelection = _interopRequireDefault(require("../../utils/getTableSelection"));

var _everPluginPref = require("@ali/4ever-plugin-pref");

const _createElement = /*#__PURE__*/React.createElement;

function TableFillButton(props) {
  const {
    controller,
    locale,
    ...rest
  } = props;
  const {
    value
  } = controller;
  const table = (0, _getTable.default)(value);
  const selection = (0, _getTableSelection.default)(controller);
  let color;

  if (selection) {
    const {
      startRowIndex,
      startColIndex
    } = selection;
    const tablePath = value.document.getPath(table.key);
    const cellPath = [...tablePath, startRowIndex, startColIndex];
    const cell = value.document.getNodeByPath(cellPath);

    if (cell) {
      const payload = cell.data;
      color = payload && payload.fill;
    }
  } // DEFAULT COLOR


  color = color === undefined ? '#FDBE3D' : color;

  const onChange = fill => {
    controller.run('onAction', (0, _actions.setTableCellFill)(table, selection, fill));
  };

  const getColorPanelMode = React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);
  const handleSelectValueChange = React.useCallback(mode => {
    controller.run('onAction', (0, _everPluginPref.setColorPanelMode)({
      mode
    }));
  }, [controller]);
  return /*#__PURE__*/_createElement(_weToolbar.ColorPicker, (0, _extends2.default)({}, rest, {
    tooltip: locale.fillColor?.tipText,
    testid: "bi-toolbar-table-fill",
    color: color,
    automaticColor: "",
    clearColor: "",
    onColorPicker: onChange,
    btnType: _weToolbar.EColorPickerIcon.backgroundsheet,
    role: _role.TableRole.tableFillColor,
    showToggleSelect: true,
    getColorPanelMode: getColorPanelMode,
    onSelectValueChange: handleSelectValueChange
  }));
}
//# sourceMappingURL=tableFillButton.js.map