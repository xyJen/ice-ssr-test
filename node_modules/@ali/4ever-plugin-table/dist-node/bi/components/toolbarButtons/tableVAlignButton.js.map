{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableVAlignButton.tsx"],"names":["SUPPORT_ALIGNMENT","middle","top","bottom","TableVAlignButton","props","controller","locale","rest","alignment","DEFAULT_TABLE_ALIGNMENT","selection","tip","vAlignMiddle","vAlignTop","vAlignBottom","handleChange","vAlign","table","value","run","PluginRoles","tableVAlignSelect"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAP4B,a;AAS5B,MAAMA,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE,IADgB;AAExBC,EAAAA,GAAG,EAAE,IAFmB;AAGxBC,EAAAA,MAAM,EAAE;AAHgB,CAA1B;;AAWe,SAASC,iBAAT,CAA2BC,KAA3B,EAA0D;AACvE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,MAAII,SAAS,GAAG,wBAAUH,UAAV,CAAhB;AACAG,EAAAA,SAAS,GAAGT,iBAAiB,CAACS,SAAD,CAAjB,GAA+BA,SAA/B,GAA2CC,kCAAvD;AACA,QAAMC,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;AAEA,MAAIM,GAAG,GAAGL,MAAM,CAACM,YAAjB;;AACA,MAAIJ,SAAS,KAAK,KAAlB,EAAyB;AACvBG,IAAAA,GAAG,GAAGL,MAAM,CAACO,SAAb;AACD,GAFD,MAEO,IAAIL,SAAS,KAAK,QAAlB,EAA4B;AACjCG,IAAAA,GAAG,GAAGL,MAAM,CAACQ,YAAb;AACD;;AAED,QAAMC,YAAY,GAAIC,MAAD,IAA2B;AAC9C,UAAMC,KAAK,GAAG,uBAASZ,UAAU,CAACa,KAApB,CAAd;AACAb,IAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,iCAAmBF,KAAnB,EAA0BP,SAA1B,EAAqCM,MAArC,CAA3B;AACD,GAHD;;AAKA,sBACE,eAAC,8BAAD,6BACMT,IADN;AAEE,IAAA,KAAK,EAAEI,GAFT;AAGE,IAAA,MAAM,EAAC,mBAHT;AAIE,IAAA,YAAY,EAAEF,kCAJhB;AAKE,IAAA,KAAK,EAAED,SALT;AAME,IAAA,QAAQ,EAAE,CAACE,SANb;AAOE,IAAA,QAAQ,EAAEK,YAPZ;AAQE,IAAA,IAAI,EAAEK,gBAAYC;AARpB,KADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { VerticalAlignSelect, VerticalAlign } from '@ali/we-toolbar';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { setTableCellVAlign } from '../../actions';\nimport getVAlign from '../../utils/getVAlign';\nimport { DEFAULT_TABLE_ALIGNMENT } from '../../constants';\n\nconst SUPPORT_ALIGNMENT = {\n  middle: true,\n  top: true,\n  bottom: true,\n};\n\nexport interface TableVAlignButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function TableVAlignButton(props: TableVAlignButtonProps) {\n  const { controller, locale, ...rest } = props;\n  let alignment = getVAlign(controller);\n  alignment = SUPPORT_ALIGNMENT[alignment] ? alignment : DEFAULT_TABLE_ALIGNMENT;\n  const selection = getTableSelection(controller);\n\n  let tip = locale.vAlignMiddle;\n  if (alignment === 'top') {\n    tip = locale.vAlignTop;\n  } else if (alignment === 'bottom') {\n    tip = locale.vAlignBottom;\n  }\n\n  const handleChange = (vAlign: VerticalAlign) => {\n    const table = getTable(controller.value);\n    controller.run('onAction', setTableCellVAlign(table, selection, vAlign));\n  };\n\n  return (\n    <VerticalAlignSelect\n      {...rest}\n      title={tip}\n      testid=\"bi-toolbar-valign\"\n      defaultValue={DEFAULT_TABLE_ALIGNMENT}\n      value={alignment as VerticalAlign}\n      disabled={!selection}\n      onChange={handleChange}\n      role={PluginRoles.tableVAlignSelect}\n    />\n  );\n}\n"],"file":"tableVAlignButton.js"}