{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableSimpleMergeButton.tsx"],"names":["TableSimpleMergeButton","props","controller","locale","rest","table","value","selection","isSelectionSupportSplit","React","useMemo","query","visible","node","isSelectionSupportMerge","title","contextMenuMerge","handleClick","run","PluginRoles","tableMerge","needRender","document","getNode","key","Table","isTable","tableRowCount","nodes","length","tableColCount","data","colsWidth","startRowIndex","startColIndex","endRowIndex","endColIndex","isSelectWholeRow","isSelectWholeCol","isSelectWholeTable","isSelectSingleCell"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../../mo/models';\nimport {\n  IconButton,\n} from '@ali/we-toolbar';\nimport {\n  ToolbarMergeCellNormal,\n} from '@ali/we-design';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { mergeTableCells } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\n\nexport interface TableMergeButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function TableSimpleMergeButton(props: TableMergeButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const table = getTable(controller.value) as Table | null;\n  const selection = getTableSelection(controller);\n  const isSelectionSupportSplit = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportSplit', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n  const isSelectionSupportMerge = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportMerge', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n\n  const title = locale.contextMenuMerge;\n\n  const handleClick = () => {\n    controller.run('onAction', mergeTableCells(table));\n  };\n\n  // MergeButton SplitButton 二选一逻辑，非常业务化\n  // 但是条件又属于与表格组件逻辑强关联\n  // 目前除了在此处直接蒸发，没有其他方式实现\n  if (!isSelectionSupportMerge && isSelectionSupportSplit) {\n    return null;\n  }\n\n  return (\n    <IconButton\n      {...rest}\n      icon={<ToolbarMergeCellNormal />}\n      title={title}\n      tooltip={title}\n      testid=\"bi-toolbar-tablesimplemerge\"\n      onClick={handleClick}\n      disabled={!isSelectionSupportMerge}\n      role={PluginRoles.tableMerge}\n    />\n  );\n}\n\nTableSimpleMergeButton.needRender = function (controller: Controller) {\n  const selection = getTableSelection(controller);\n  if (!selection) return false;\n  const node = controller.value.document.getNode(selection.key);\n  if (!(node && Table.isTable(node))) return false;\n  const tableRowCount = node.nodes.length - 1;\n  const tableColCount = (node.data.colsWidth || []).length - 1;\n\n  const { startRowIndex, startColIndex, endRowIndex, endColIndex } = selection;\n\n  const isSelectWholeRow = startColIndex === 0 && endColIndex >= tableColCount;\n\n  const isSelectWholeCol = startRowIndex === 0 && endRowIndex >= tableRowCount;\n\n  const isSelectWholeTable = isSelectWholeRow && isSelectWholeCol;\n\n  const isSelectSingleCell = startColIndex === endColIndex && startRowIndex === endRowIndex;\n\n  if (isSelectWholeTable || isSelectSingleCell) {\n    return false;\n  }\n  return true;\n};\n"],"file":"tableSimpleMergeButton.js"}