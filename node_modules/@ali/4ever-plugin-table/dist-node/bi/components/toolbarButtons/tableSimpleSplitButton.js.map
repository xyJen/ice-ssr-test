{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableSimpleSplitButton.tsx"],"names":["TableSimpleSplitButton","props","controller","locale","rest","table","value","selection","isSelectionSupportSplit","React","useMemo","query","visible","node","isSelectionSupportMerge","title","contextMenuSplit","handleClick","run","PluginRoles","tableSplit"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAGA;;AAGA;;AACA;;AACA;;AACA;;uBAX4B,a;;wBAgDhB,eAAC,gCAAD,O;;AA9BG,SAASA,sBAAT,CAAgCC,KAAhC,EAA8D;AAC3E,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAMI,KAAK,GAAG,uBAASH,UAAU,CAACI,KAApB,CAAd;AACA,QAAMC,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;;AACA,QAAMM,uBAAuB,GAAGC,eAAMC,OAAN,CAAc,MAAM;AAClD,WAAO,CAAC,CAACL,KAAF,IACFH,UAAU,CAACS,KAAX,CAAiB,yBAAjB,EAA4C;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAER;AAAvB,KAA5C,CADL,CADkD,CAGpD;AACC,GAJ+B,EAI7B,CAACA,KAAD,EAAQE,SAAR,EAAmBL,UAAnB,CAJ6B,CAAhC;;AAKA,QAAMY,uBAAuB,GAAGL,eAAMC,OAAN,CAAc,MAAM;AAClD,WAAO,CAAC,CAACL,KAAF,IACFH,UAAU,CAACS,KAAX,CAAiB,yBAAjB,EAA4C;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,IAAI,EAAER;AAAvB,KAA5C,CADL,CADkD,CAGpD;AACC,GAJ+B,EAI7B,CAACA,KAAD,EAAQE,SAAR,EAAmBL,UAAnB,CAJ6B,CAAhC;;AAKA,QAAMa,KAAK,GAAGZ,MAAM,CAACa,gBAArB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBf,IAAAA,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2B,6BAAeb,KAAf,CAA3B;AACD,GAFD,CAhB2E,CAoB3E;AACA;AACA;;;AACA,MAAIS,uBAAuB,IAAI,CAACN,uBAAhC,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED,sBACE,eAAC,qBAAD,6BACMJ,IADN;AAEE,IAAA,IAAI,MAFN;AAGE,IAAA,KAAK,EAAEW,KAHT;AAIE,IAAA,OAAO,EAAEA,KAJX;AAKE,IAAA,MAAM,EAAC,6BALT;AAME,IAAA,OAAO,EAAEE,WANX;AAOE,IAAA,QAAQ,EAAE,CAACT,uBAPb;AAQE,IAAA,IAAI,EAAEW,gBAAYC;AARpB,KADF;AAYD","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../../mo/models';\nimport {\n  IconButton,\n} from '@ali/we-toolbar';\nimport {\n  ToolbarSplitCellNormal,\n} from '@ali/we-design';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { splitTableCell } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\n\nexport interface TableSplitButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function TableSimpleSplitButton(props: TableSplitButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const table = getTable(controller.value) as Table | null;\n  const selection = getTableSelection(controller);\n  const isSelectionSupportSplit = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportSplit', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n  const isSelectionSupportMerge = React.useMemo(() => {\n    return !!table\n      && controller.query('isSelectionSupportMerge', { visible: true, node: table });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [table, selection, controller]);\n  const title = locale.contextMenuSplit;\n\n  const handleClick = () => {\n    controller.run('onAction', splitTableCell(table));\n  };\n\n  // MergeButton SplitButton 二选一逻辑，非常业务化\n  // 但是条件又属于与表格组件逻辑强关联\n  // 目前除了在此处直接蒸发，没有其他方式实现\n  if (isSelectionSupportMerge || !isSelectionSupportSplit) {\n    return null;\n  }\n\n  return (\n    <IconButton\n      {...rest}\n      icon={<ToolbarSplitCellNormal />}\n      title={title}\n      tooltip={title}\n      testid=\"bi-toolbar-tablesimplesplit\"\n      onClick={handleClick}\n      disabled={!isSelectionSupportSplit}\n      role={PluginRoles.tableSplit}\n    />\n  );\n}\n"],"file":"tableSimpleSplitButton.js"}