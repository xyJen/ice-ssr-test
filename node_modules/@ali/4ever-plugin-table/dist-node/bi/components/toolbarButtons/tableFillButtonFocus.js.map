{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableFillButtonFocus.tsx"],"names":["TableFillButtonFocus","props","controller","locale","usePaletteIcon","rest","value","table","selection","context","actions","lastFill","color","startRowIndex","startColIndex","tablePath","document","getPath","key","cellPath","cell","getNodeByPath","payload","data","fill","onChange","run","updateLastFill","handleButtonClick","pathColors","includes","handleCustomVisibleChange","visible","isBlurred","canHide","command","Commands","moveToFocus","handleMouseEnter","React","useCallback","updateCanHide","handleMouseLeave","fillColor","tipText","PluginRoles","tableFillColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller, Block, Commands } from '@ali/4ever-cangjie';\nimport { SplitButton } from '@ali/we-toolbar';\nimport { ColorPanel } from '@ali/we-design';\nimport { ToolbarCellFillColorNormal, PaletteNormal } from '@ali/we-icon';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { setTableCellFill } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { useSelectionBarContext } from '@ali/4ever-component';\n\nexport default function TableFillButtonFocus(props) {\n  const { controller, locale, usePaletteIcon, ...rest } = props;\n  const { value } = controller as Controller;\n  const table = getTable(value)!;\n  const selection = getTableSelection(controller);\n  const [context, actions] = useSelectionBarContext();\n  const { lastFill } = context;\n\n  let color;\n  if (selection) {\n    const { startRowIndex, startColIndex } = selection;\n\n    const tablePath = value.document.getPath(table.key)!;\n    const cellPath = [...tablePath, startRowIndex, startColIndex];\n    const cell = value.document.getNodeByPath(cellPath) as Block;\n    if (cell) {\n      const payload = cell.data;\n      color = payload && payload.fill;\n    }\n  }\n\n  const onChange = (fill: string) => {\n    controller.run('onAction', setTableCellFill(table, selection, fill));\n    actions.updateLastFill(fill);\n  };\n\n  const handleButtonClick = () => {\n    controller.run('onAction', setTableCellFill(table, selection, lastFill));\n  };\n\n  const pathColors: string[] = [\n    // 图标下方横线填充色\n    lastFill === '' ? 'transparent' : lastFill!,\n    // 图标下方横线边框色， 当填充为透明或白色时边框色为 inherit\n    ['#FFFFFF', 'transparent'].includes(lastFill!) ? 'inherit' : lastFill!,\n  ];\n\n  const handleCustomVisibleChange = (visible: boolean) => {\n    const { isBlurred } = controller.value;\n    if (isBlurred && !visible) {\n      // fix: focus 到自定义色板输入框然后关闭色板后行内工具栏立即消失\n      controller.run('onCangjieFocus');\n      if (context.canHide) {\n        // fix: focus 到自定义色板输入框然后点击其他区域时行内工具栏不消失\n        controller.command(Commands.moveToFocus);\n      }\n    }\n  };\n\n  // fix: focus 到自定义色板输入框后行内工具栏消失\n  const handleMouseEnter = React.useCallback(\n    () => actions.updateCanHide(false),\n    [actions],\n  );\n\n  const handleMouseLeave = React.useCallback(\n    () => actions.updateCanHide(true),\n    [actions],\n  );\n\n  return (\n    <SplitButton\n      {...rest}\n      testid=\"bi-toolbar-table-fill\"\n      icon={\n        usePaletteIcon ?\n          (\n            <PaletteNormal\n              data-role=\"table_color_fill_panel\"\n            />\n          ) :\n          (\n            <ToolbarCellFillColorNormal\n              pathColors={pathColors}\n              data-role=\"table_color_fill_panel\"\n            />\n          )\n      }\n      tooltip={locale.fillColor?.tipText}\n      overlay={\n        <ColorPanel\n          backgroundColor={color}\n          onBackgroundColorClick={onChange}\n          enableResetButton\n          isFullBackground\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          onCustomVisibleChange={handleCustomVisibleChange}\n        />\n      }\n      onClickLeft={handleButtonClick}\n      role={PluginRoles.tableFillColor}\n    />\n  );\n}\n"],"file":"tableFillButtonFocus.js"}