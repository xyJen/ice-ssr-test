{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableFillButton.tsx"],"names":["TableFillButton","props","controller","locale","rest","value","table","selection","color","startRowIndex","startColIndex","tablePath","document","getPath","key","cellPath","cell","getNodeByPath","payload","data","fill","undefined","onChange","run","getColorPanelMode","React","useCallback","query","mode","handleSelectValueChange","fillColor","tipText","EColorPickerIcon","backgroundsheet","PluginRoles","tableFillColor"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;uBAP4B,a;;AASb,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAMI,KAAK,GAAG,uBAASD,KAAT,CAAd;AACA,QAAME,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;AAEA,MAAIM,KAAJ;;AACA,MAAID,SAAJ,EAAe;AACb,UAAM;AAAEE,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAmCH,SAAzC;AAEA,UAAMI,SAAS,GAAGN,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBP,KAAK,CAACQ,GAA7B,CAAlB;AACA,UAAMC,QAAQ,GAAG,CAAC,GAAGJ,SAAJ,EAAeF,aAAf,EAA8BC,aAA9B,CAAjB;AACA,UAAMM,IAAI,GAAGX,KAAK,CAACO,QAAN,CAAeK,aAAf,CAA6BF,QAA7B,CAAb;;AACA,QAAIC,IAAJ,EAAU;AACR,YAAME,OAAO,GAAGF,IAAI,CAACG,IAArB;AACAX,MAAAA,KAAK,GAAGU,OAAO,IAAIA,OAAO,CAACE,IAA3B;AACD;AACF,GAjB4C,CAkB7C;;;AACAZ,EAAAA,KAAK,GAAGA,KAAK,KAAKa,SAAV,GAAsB,SAAtB,GAAkCb,KAA1C;;AAEA,QAAMc,QAAQ,GAAIF,IAAD,IAAkB;AACjClB,IAAAA,UAAU,CAACqB,GAAX,CAAe,UAAf,EAA2B,+BAAiBjB,KAAjB,EAAwBC,SAAxB,EAAmCa,IAAnC,CAA3B;AACD,GAFD;;AAIA,QAAMI,iBAAiB,GACrBC,KAAK,CAACC,WAAN,CAAkB,MAAMxB,UAAU,CAACyB,KAAX,CAAiB,mBAAjB,GAAuCC,IAA/D,EAAqE,CAAC1B,UAAD,CAArE,CADF;AAGA,QAAM2B,uBAAuB,GAAGJ,KAAK,CAACC,WAAN,CAAmBE,IAAD,IAA2B;AAC3E1B,IAAAA,UAAU,CAACqB,GAAX,CAAe,UAAf,EAA2B,uCAAkB;AAAEK,MAAAA;AAAF,KAAlB,CAA3B;AACD,GAF+B,EAE7B,CAAC1B,UAAD,CAF6B,CAAhC;AAIA,sBACE,eAAC,sBAAD,6BACME,IADN;AAEE,IAAA,OAAO,EAAED,MAAM,CAAC2B,SAAP,EAAkBC,OAF7B;AAGE,IAAA,MAAM,EAAC,uBAHT;AAIE,IAAA,KAAK,EAAEvB,KAJT;AAKE,IAAA,cAAc,EAAC,EALjB;AAME,IAAA,UAAU,EAAC,EANb;AAOE,IAAA,aAAa,EAAEc,QAPjB;AAQE,IAAA,OAAO,EAAEU,4BAAiBC,eAR5B;AASE,IAAA,IAAI,EAAEC,gBAAYC,cATpB;AAUE,IAAA,gBAAgB,MAVlB;AAWE,IAAA,iBAAiB,EAAEX,iBAXrB;AAYE,IAAA,mBAAmB,EAAEK;AAZvB,KADF;AAgBD","sourcesContent":["import * as React from 'react';\nimport { Controller, Block } from '@ali/4ever-cangjie';\nimport { ColorPicker, EColorPickerIcon, EColorPanelMode } from '@ali/we-toolbar';\nimport { TableRole as PluginRoles } from '../../../utils/role';\n\nimport { setTableCellFill } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\n\nexport default function TableFillButton(props) {\n  const { controller, locale, ...rest } = props;\n  const { value } = controller as Controller;\n  const table = getTable(value)!;\n  const selection = getTableSelection(controller);\n\n  let color;\n  if (selection) {\n    const { startRowIndex, startColIndex } = selection;\n\n    const tablePath = value.document.getPath(table.key)!;\n    const cellPath = [...tablePath, startRowIndex, startColIndex];\n    const cell = value.document.getNodeByPath(cellPath) as Block;\n    if (cell) {\n      const payload = cell.data;\n      color = payload && payload.fill;\n    }\n  }\n  // DEFAULT COLOR\n  color = color === undefined ? '#FDBE3D' : color;\n\n  const onChange = (fill: string) => {\n    controller.run('onAction', setTableCellFill(table, selection, fill));\n  };\n\n  const getColorPanelMode =\n    React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);\n\n  const handleSelectValueChange = React.useCallback((mode: EColorPanelMode) => {\n    controller.run('onAction', setColorPanelMode({ mode }));\n  }, [controller]);\n\n  return (\n    <ColorPicker\n      {...rest}\n      tooltip={locale.fillColor?.tipText}\n      testid=\"bi-toolbar-table-fill\"\n      color={color}\n      automaticColor=\"\"\n      clearColor=\"\"\n      onColorPicker={onChange}\n      btnType={EColorPickerIcon.backgroundsheet}\n      role={PluginRoles.tableFillColor}\n      showToggleSelect\n      getColorPanelMode={getColorPanelMode}\n      onSelectValueChange={handleSelectValueChange}\n    />\n  );\n}\n"],"file":"tableFillButton.js"}