"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TableBorderSet;

var _react = _interopRequireDefault(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _role = require("../../../utils/role");

var _actions = require("../../actions");

var _getTable = _interopRequireDefault(require("../../utils/getTable"));

var _getTableSelection = _interopRequireDefault(require("../../utils/getTableSelection"));

var _everPluginPref = require("@ali/4ever-plugin-pref");

var _constants = require("../../../utils/constants");

const _createElement = /*#__PURE__*/_react.default.createElement;

function TableBorderSet(props) {
  const {
    controller,
    size,
    showTitle
  } = props;
  const {
    value
  } = controller;
  const table = (0, _getTable.default)(value);
  const selection = (0, _getTableSelection.default)(controller);

  const setBorder = ({
    borderType,
    borderColor,
    borderStyle
  }) => {
    const val = _constants.lineMap[borderStyle].lineType;
    const sz = _constants.lineMap[borderStyle].size;

    if (table) {
      controller.run('onAction', (0, _actions.setTableBorder)(table, selection, borderType, borderColor, sz, val));
    }
  }; // TODO: BorderSet 不支持size=small，先用style覆盖


  const style = {};

  if (props.size === 'small') {
    style.height = 24;
  }

  const getColorPanelMode = _react.default.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);

  const handleSelectValueChange = _react.default.useCallback(mode => {
    controller.run('onAction', (0, _everPluginPref.setColorPanelMode)({
      mode
    }));
  }, [controller]);

  return /*#__PURE__*/_createElement(_weToolbar.BorderSet, {
    size: size,
    showTitle: showTitle,
    borderStyles: _constants.lineMap // @ts-ignore 组件没有 supportConfigSize 属性
    ,
    supportConfigSize: false,
    onChange: setBorder,
    defaultBorderStyle: _constants.DEFAULT_TABLE_BORDER_STYLE,
    borderIconSize: 20,
    onClick: setBorder,
    role: _role.TableRole.tableBorder,
    showToggleSelect: true,
    getColorPanelMode: getColorPanelMode,
    onSelectValueChange: handleSelectValueChange
  });
}
//# sourceMappingURL=tableBorderSet.js.map