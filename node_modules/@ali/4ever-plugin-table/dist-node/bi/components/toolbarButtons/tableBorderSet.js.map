{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableBorderSet.tsx"],"names":["TableBorderSet","props","controller","size","showTitle","value","table","selection","setBorder","borderType","borderColor","borderStyle","val","lineMap","lineType","sz","run","style","height","getColorPanelMode","React","useCallback","query","mode","handleSelectValueChange","DEFAULT_TABLE_BORDER_STYLE","PluginRoles","tableBorder"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAP4B,a;;AASb,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,MAAkCH,KAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAMI,KAAK,GAAG,uBAASD,KAAT,CAAd;AACA,QAAME,SAAS,GAAG,gCAAkBL,UAAlB,CAAlB;;AAEA,QAAMM,SAAS,GAAG,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,GAAD,KAA8C;AAC9D,UAAMC,GAAG,GAAGC,mBAAQF,WAAR,EAAqBG,QAAjC;AACA,UAAMC,EAAE,GAAGF,mBAAQF,WAAR,EAAqBR,IAAhC;;AACA,QAAIG,KAAJ,EAAW;AACTJ,MAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,6BAAeV,KAAf,EAA+BC,SAA/B,EAA0CE,UAA1C,EAAsDC,WAAtD,EAAmEK,EAAnE,EAAuEH,GAAvE,CAA3B;AACD;AACF,GAND,CAN4C,CAc5C;;;AACA,QAAMK,KAA0B,GAAG,EAAnC;;AACA,MAAIhB,KAAK,CAACE,IAAN,KAAe,OAAnB,EAA4B;AAC1Bc,IAAAA,KAAK,CAACC,MAAN,GAAe,EAAf;AACD;;AAED,QAAMC,iBAAiB,GACrBC,eAAMC,WAAN,CAAkB,MAAMnB,UAAU,CAACoB,KAAX,CAAiB,mBAAjB,GAAuCC,IAA/D,EAAqE,CAACrB,UAAD,CAArE,CADF;;AAGA,QAAMsB,uBAAuB,GAAGJ,eAAMC,WAAN,CAAmBE,IAAD,IAA2B;AAC3ErB,IAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,uCAAkB;AAAEO,MAAAA;AAAF,KAAlB,CAA3B;AACD,GAF+B,EAE7B,CAACrB,UAAD,CAF6B,CAAhC;;AAIA,sBACE,eAAC,oBAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,YAAY,EAAES,kBAHhB,CAIE;AAJF;AAKE,IAAA,iBAAiB,EAAE,KALrB;AAME,IAAA,QAAQ,EAAEL,SANZ;AAOE,IAAA,kBAAkB,EAAEiB,qCAPtB;AAQE,IAAA,cAAc,EAAE,EARlB;AASE,IAAA,OAAO,EAAEjB,SATX;AAUE,IAAA,IAAI,EAAEkB,gBAAYC,WAVpB;AAWE,IAAA,gBAAgB,MAXlB;AAYE,IAAA,iBAAiB,EAAER,iBAZrB;AAaE,IAAA,mBAAmB,EAAEK;AAbvB,IADF;AAiBD","sourcesContent":["import React from 'react';\nimport { Block } from '@ali/4ever-cangjie';\nimport { BorderSet, EColorPanelMode } from '@ali/we-toolbar';\nimport { TableRole as PluginRoles } from '../../../utils/role';\nimport { setTableBorder } from '../../actions';\nimport getTable from '../../utils/getTable';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\nimport { lineMap, DEFAULT_TABLE_BORDER_STYLE } from '../../../utils/constants';\n\nexport default function TableBorderSet(props) {\n  const { controller, size, showTitle } = props;\n  const { value } = controller;\n  const table = getTable(value);\n  const selection = getTableSelection(controller);\n\n  const setBorder = ({ borderType, borderColor, borderStyle }) => {\n    const val = lineMap[borderStyle].lineType;\n    const sz = lineMap[borderStyle].size;\n    if (table) {\n      controller.run('onAction', setTableBorder(table as Block, selection, borderType, borderColor, sz, val));\n    }\n  };\n\n  // TODO: BorderSet 不支持size=small，先用style覆盖\n  const style: React.CSSProperties = {};\n  if (props.size === 'small') {\n    style.height = 24;\n  }\n\n  const getColorPanelMode =\n    React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);\n\n  const handleSelectValueChange = React.useCallback((mode: EColorPanelMode) => {\n    controller.run('onAction', setColorPanelMode({ mode }));\n  }, [controller]);\n\n  return (\n    <BorderSet\n      size={size}\n      showTitle={showTitle}\n      borderStyles={lineMap}\n      // @ts-ignore 组件没有 supportConfigSize 属性\n      supportConfigSize={false}\n      onChange={setBorder}\n      defaultBorderStyle={DEFAULT_TABLE_BORDER_STYLE}\n      borderIconSize={20}\n      onClick={setBorder}\n      role={PluginRoles.tableBorder}\n      showToggleSelect\n      getColorPanelMode={getColorPanelMode}\n      onSelectValueChange={handleSelectValueChange}\n    />\n  );\n}\n"],"file":"tableBorderSet.js"}