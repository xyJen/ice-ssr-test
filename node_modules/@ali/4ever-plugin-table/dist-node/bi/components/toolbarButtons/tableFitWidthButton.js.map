{"version":3,"sources":["../../../../../src/bi/components/toolbarButtons/tableFitWidthButton.tsx"],"names":["TableFitWidthButton","props","controller","locale","selection","node","value","document","getNode","key","handleMenuEvent","run","query","needRender"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;uBAJ4B,a;;AAWb,SAASA,mBAAT,CAA6BC,KAA7B,EAA8D;AAC3E,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBF,KAA/B;AACA,QAAMG,SAAS,GAAG,gCAAkBF,UAAlB,CAAlB;AACA,MAAI,CAACE,SAAL,EAAgB,OAAO,IAAP;AAChB,QAAMC,IAAI,GAAGH,UAAU,CAACI,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCJ,SAAS,CAACK,GAA5C,CAAb;AACA,MAAI,EAAEJ,IAAI,IAAI,oBAAQA,IAAR,CAAV,CAAJ,EAA8B,OAAO,IAAP;;AAE9B,QAAMK,eAAe,GAAG,MAAM;AAC5BR,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2B,2CAA6BN,IAA7B,CAA3B;AACD,GAFD;;AAIA,MAAIH,UAAU,CAACU,KAAX,CAAiB,oBAAjB,EAAuC;AAAEP,IAAAA;AAAF,GAAvC,CAAJ,EAAsD;AACpD,wBACE,eAAC,qCAAD;AACE,MAAA,MAAM,EAAEF,MADV;AAEE,MAAA,WAAW,EAAEO;AAFf,MADF;AAMD;;AACD,SAAO,IAAP;AACD;;AAEDV,mBAAmB,CAACa,UAApB,GAAiC,UAAUX,UAAV,EAAkC;AACjE,QAAME,SAAS,GAAG,gCAAkBF,UAAlB,CAAlB;AACA,MAAI,CAACE,SAAL,EAAgB,OAAO,KAAP;AAChB,QAAMC,IAAI,GAAGH,UAAU,CAACI,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCJ,SAAS,CAACK,GAA5C,CAAb;AACA,MAAI,EAAEJ,IAAI,IAAI,oBAAQA,IAAR,CAAV,CAAJ,EAA8B,OAAO,KAAP;AAC9B,SAAOH,UAAU,CAACU,KAAX,CAAiB,oBAAjB,EAAuC;AAAEP,IAAAA;AAAF,GAAvC,CAAP;AACD,CAND","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport TableWidthFitContainerButton from '../cornerToolbar/tableWidthFitContainerButton';\nimport { resizeTableWidthFitContainer } from '../../actions';\nimport getTableSelection from '../../utils/getTableSelection';\nimport { isTable, TableLocale } from '../../types';\n\nexport interface TableFitWidthButtonProps {\n  controller: Controller;\n  locale?: TableLocale;\n}\n\nexport default function TableFitWidthButton(props: TableFitWidthButtonProps) {\n  const { controller, locale } = props;\n  const selection = getTableSelection(controller);\n  if (!selection) return null;\n  const node = controller.value.document.getNode(selection.key);\n  if (!(node && isTable(node))) return null;\n\n  const handleMenuEvent = () => {\n    controller.run('onAction', resizeTableWidthFitContainer(node));\n  };\n\n  if (controller.query('isSelectWholeTable', { node })) {\n    return (\n      <TableWidthFitContainerButton\n        locale={locale}\n        onMenuEvent={handleMenuEvent}\n      />\n    );\n  }\n  return null;\n}\n\nTableFitWidthButton.needRender = function (controller: Controller) {\n  const selection = getTableSelection(controller);\n  if (!selection) return false;\n  const node = controller.value.document.getNode(selection.key);\n  if (!(node && isTable(node))) return false;\n  return controller.query('isSelectWholeTable', { node });\n};\n"],"file":"tableFitWidthButton.js"}