{"version":3,"sources":["../../../../src/bi/components/tableWithSelection.tsx"],"names":["Wrapper","styled","div","TableWithSelection","props","forRef","controller","node","children","left","isSelectionHighlight","hoverSelection","tableSelection","getTableSelection","scale","tableRef","wrapperRef","update","setUpdate","current","forceUpdate","u","updateContext"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAIA;;AACA;;AACA;;AACA;;uBAT4B,a;;AAW5B,MAAMA,OAAO,gBAAGC,0BAAOC,GAAV,wBAAb;;AAgBA,MAAMC,kBAAkB,gBAAG,uBAGzB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjB,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,oBALI;AAMJC,IAAAA,cANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA,iBARI;AASJC,IAAAA;AATI,MAUFV,KAVJ;AAWA,QAAMW,QAAQ,GAAG,mBAAyB,IAAzB,CAAjB;AACA,QAAMC,UAAU,GAAG,mBAAuB,IAAvB,CAAnB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB,qBAAS,CAAT,CAA5B;AAEA,wBAAU,MAAM;AACd,QAAI,OAAOb,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,MAAAA,MAAM,CAACU,QAAQ,CAACI,OAAV,CAAN;AACD,KAFD,MAEO,IAAId,MAAJ,EAAY;AACjBA,MAAAA,MAAM,CAACc,OAAP,GAAiBJ,QAAQ,CAACI,OAA1B;AACD;AACF,GAND,EAMG,CAACJ,QAAD,EAAWV,MAAX,CANH;AAQA,QAAMe,WAAW,GAAG,wBAAY,MAAM;AACpCF,IAAAA,SAAS,CAAEG,CAAD,IAAO,EAAEA,CAAV,CAAT;AACD,GAFmB,EAEjB,EAFiB,CAApB;AAIA,QAAMC,aAAiC,GAAG,oBAAQ,MAAM;AACtD,WAAO,CAACL,MAAD,EAASG,WAAT,CAAP;AACD,GAFyC,EAEvC,CAACH,MAAD,EAASG,WAAT,CAFuC,CAA1C;AAIA,sBACE,eAAC,OAAD;AAAS,IAAA,GAAG,EAAEJ;AAAd,kBACE,eAAC,oDAAD,CAA6B,QAA7B;AAAsC,IAAA,KAAK,EAAEM;AAA7C,kBACE,eAAC,kBAAD;AACE,IAAA,GAAG,EAAEP,QADP;AAEE,IAAA,UAAU,EAAET,UAFd;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,IAAI,EAAEE,IAJR;AAKE,IAAA,QAAQ,EAAE;AALZ,KAOGD,QAPH,CADF,eAUE,eAAC,uBAAD;AACE,mBAAY,yBADd;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,UAAU,EAAED,UAHd;AAIE,IAAA,SAAS,EAAEM,cAJb;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAME,IAAA,KAAK,EAAED,KANT;AAOE,IAAA,WAAW,EAAEJ,oBAPf;AAQE,IAAA,iBAAiB,EAAEG,iBARrB;AASE,IAAA,WAAW,EAAEI;AATf,IAVF,CADF,eAuBE,eAAC,uBAAD;AACE,mBAAY,yBADd;AAEE,IAAA,IAAI,EAAEV,IAFR;AAGE,IAAA,QAAQ,EAAEQ,QAHZ;AAIE,IAAA,KAAK,EAAED,KAJT;AAKE,IAAA,cAAc,EAAEH;AALlB,IAvBF,CADF;AAiCD,CApEwB,CAA3B;eAuEeR,kB","sourcesContent":["import React, {\n  forwardRef, useCallback, useEffect, useMemo, useRef, useState,\n} from 'react';\nimport styled from 'styled-components';\nimport { Controller } from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport { ITableSelection } from '../types';\nimport TableSelection from './tableSelection';\nimport TableHoverRect from './tableSelection/tableHoverRect';\nimport { UpdateTableSelectionContext } from '../../utils/hooks/useUpdateTableSelection';\nimport PureTable from '../../components/pureTable';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\ninterface PureTableProps {\n  controller: Controller;\n  scale: number;\n  node: Table;\n  tableSelection: ITableSelection | null;\n  getTableSelection: () => (ITableSelection | null);\n  isSelectionHighlight: boolean;\n  hoverSelection: ITableSelection | null;\n  left: number;\n  children?: React.ReactNode;\n}\n\nconst TableWithSelection = forwardRef<\nHTMLTableElement, PureTableProps\n>(\n  (props, forRef) => {\n    const {\n      controller,\n      node,\n      children,\n      left,\n      isSelectionHighlight,\n      hoverSelection,\n      tableSelection,\n      getTableSelection,\n      scale,\n    } = props;\n    const tableRef = useRef<HTMLTableElement>(null);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const [update, setUpdate] = useState(0);\n\n    useEffect(() => {\n      if (typeof forRef === 'function') {\n        forRef(tableRef.current);\n      } else if (forRef) {\n        forRef.current = tableRef.current;\n      }\n    }, [tableRef, forRef]);\n\n    const forceUpdate = useCallback(() => {\n      setUpdate((u) => ++u);\n    }, []);\n\n    const updateContext: [number, Function] = useMemo(() => {\n      return [update, forceUpdate];\n    }, [update, forceUpdate]);\n\n    return (\n      <Wrapper ref={wrapperRef}>\n        <UpdateTableSelectionContext.Provider value={updateContext}>\n          <PureTable\n            ref={tableRef}\n            controller={controller}\n            node={node}\n            left={left}\n            isMobile={false}\n          >\n            {children}\n          </PureTable>\n          <TableSelection\n            data-testid=\"table-selection-wrapper\"\n            node={node}\n            controller={controller}\n            selection={tableSelection}\n            tableRef={tableRef}\n            scale={scale}\n            isHighlight={isSelectionHighlight}\n            getTableSelection={getTableSelection}\n            forceUpdate={update}\n          />\n        </UpdateTableSelectionContext.Provider>\n        <TableHoverRect\n          data-testid=\"table-selection-wrapper\"\n          node={node}\n          tableRef={tableRef}\n          scale={scale}\n          hoverSelection={hoverSelection}\n        />\n      </Wrapper>\n    );\n  },\n);\n\nexport default TableWithSelection;\n"],"file":"tableWithSelection.js"}