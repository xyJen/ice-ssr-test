{"version":3,"sources":["../../../../../src/bi/components/rowToolbar/dragElement.tsx"],"names":["HEADER_WIDTH","TOOLBAR_ITEM_SIZE","BackgroundLayer","styled","div","p","visible","width","MIN_COL_WIDTH","height","MIN_ROW_HEIGHT","DragWrapper","THEME","dragBlue1","DragHeader","dragBlue0","DragElement","props","ref","renderHeight","renderWidth","React","forwardRef"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;AAHA;uBAC4B,a;AAS5B,MAAMA,YAAY,GAAGC,4BAArB;;AAEA,MAAMC,eAAe,gBAAGC,0BAAOC,GAAV,4QAMPC,CAAD,IAAQA,CAAC,CAACC,OAAF,GAAY,OAAZ,GAAsB,MANtB,EAOTD,CAAD,IAAOA,CAAC,CAACE,KAPC,EAQNC,2BAAgBR,YARV,EASN,MAAMA,YATA,EAURK,CAAD,IAAOA,CAAC,CAACI,MAVA,EAYLC,yBAZK,EAcKV,YAdL,CAArB;;AAqBA,MAAMW,WAAW,gBAAGR,0BAAOC,GAAV,mGAMDQ,iBAAMC,SANL,EAOKD,iBAAMC,SAPX,CAAjB;;AAUA,MAAMC,UAAU,gBAAGX,0BAAOC,GAAV,kEAELJ,YAFK,EAGMY,iBAAMG,SAHZ,CAAhB;;wBAgCM,eAAC,WAAD,qBACE,eAAC,UAAD,OADF,C;;AAnBN,MAAMC,WAAW,GAAG,CAClBC,KADkB,EAElBC,GAFkB,KAGf;AACH,QAAM;AAAEZ,IAAAA,OAAO,GAAG,KAAZ;AAAmBG,IAAAA,MAAM,GAAG,CAA5B;AAA+BF,IAAAA,KAAK,GAAG;AAAvC,MAA6CU,KAAnD;AACA,QAAME,YAAY,GAAGb,OAAO,GAAGG,MAAH,GAAY,CAAxC,CAFG,CAGH;AACA;;AACA,QAAMW,WAAW,GAAGd,OAAO,GAAGC,KAAH,GAAW,CAAtC;AAEA,sBACE,eAAC,eAAD;AACE,IAAA,GAAG,EAAEW,GADP;AAEE,IAAA,OAAO,EAAEZ,OAFX;AAGE,IAAA,MAAM,EAAEa,YAHV;AAIE,IAAA,KAAK,EAAEC,WAJT;AAKE,mBAAY,4BALd;AAME,oBAAcd;AANhB,UADF;AAcD,CAxBD;;4BA0Bee,KAAK,CAACC,UAAN,CAAiBN,WAAjB,C","sourcesContent":["/* eslint-disable react/no-find-dom-node */\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport {\n  THEME,\n  MIN_ROW_HEIGHT,\n  TOOLBAR_ITEM_SIZE,\n  MIN_COL_WIDTH,\n} from '../../constants';\n\nconst HEADER_WIDTH = TOOLBAR_ITEM_SIZE;\n\nconst BackgroundLayer = styled.div<{\n  visible: boolean;\n  height: number;\n  width: number;\n}>`\n  position: absolute;\n  display: ${(p) => (p.visible ? 'block' : 'none')};\n  width: ${(p) => p.width}px;\n  min-width: ${MIN_COL_WIDTH + HEADER_WIDTH}px;\n  max-width: ${160 + HEADER_WIDTH}px;\n  height: ${(p) => p.height}px;\n  max-height: 48px;\n  min-height: ${MIN_ROW_HEIGHT}px;\n  will-change: left, top;\n  transform: translate(-${HEADER_WIDTH}px, -50%);\n  z-index: 999;\n  cursor: move;\n  background-color: rgba(255, 255, 255, 0.9);\n  user-select: none;\n`;\n\nconst DragWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: ${THEME.dragBlue1};\n  border: 1px solid ${THEME.dragBlue1};\n`;\n\nconst DragHeader = styled.div`\n  height: 100%;\n  width: ${HEADER_WIDTH}px;\n  background-color: ${THEME.dragBlue0};\n  opacity: 0.5;\n`;\n\ninterface Props {\n  visible: boolean;\n  height: number;\n  width: number;\n}\n\nconst DragElement = (\n  props: Props,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { visible = false, height = 0, width = 0 } = props;\n  const renderHeight = visible ? height : 0;\n  // PERF: width 是表格宽度，自适应表格宽度可能高频变化。\n  // 所以在组件不渲染时，将 render width 置为常量，避免动态 styled-components\n  const renderWidth = visible ? width : 0;\n\n  return (\n    <BackgroundLayer\n      ref={ref}\n      visible={visible}\n      height={renderHeight}\n      width={renderWidth}\n      data-testid=\"table-row-drag-placeholder\"\n      data-visible={visible}\n    >\n      <DragWrapper>\n        <DragHeader />\n      </DragWrapper>\n    </BackgroundLayer>\n  );\n};\n\nexport default React.forwardRef(DragElement);\n"],"file":"dragElement.js"}