{"version":3,"sources":["../../../../src/bi/components/dragButtonIcon.tsx"],"names":["MODECONFIG","col","height","width","row","DragIconMode","CircleIcon","styled","span","DragButtonIconWrapper","div","DragButtonIcon","props","ref","scale","mode","isShow","circleNumber","config","Col","circles","React","useMemo","result","i","style","push","flexDirection","opacity","forwardRef"],"mappings":";;;;;;;;;;;AAAA;;AACA;;uBAA4B,a;AAE5B;AACA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GADY;AAKjBC,EAAAA,GAAG,EAAE;AACHF,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,KAAK,EAAE;AAFJ;AALY,CAAnB,C,CAWA;;IACYE,Y;;;WAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,4BAAAA,Y;;AAKZ,MAAMC,UAAU,gBAAGC,0BAAOC,IAAV,sFAAhB;;AAQA,MAAMC,qBAAqB,gBAAGF,0BAAOG,GAAV,wGAA3B;;AAcA,MAAMC,cAAc,GAAG,CACrBC,KADqB,EAErBC,GAFqB,KAGlB;AACH,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,MAAM,GAAG,IAAxB;AAA8BC,IAAAA,YAAY,GAAG;AAA7C,MAAmDL,KAAzD;AAEA,QAAMM,MAAM,GAAGH,IAAI,KAAKV,YAAY,CAACc,GAAtB,GAA4BnB,UAAU,CAACC,GAAvC,GAA6CD,UAAU,CAACI,GAAvE;AACA,QAAMgB,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAc,MAAM;AAClC,UAAMC,MAA6B,GAAG,EAAtC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,YAApB,EAAkCO,CAAC,EAAnC,EAAuC;AACrC,YAAMC,KAAK,GAAG;AACZtB,QAAAA,KAAK,EAAG,GAAE,IAAIW,KAAM,IADR;AAEZZ,QAAAA,MAAM,EAAG,GAAE,IAAIY,KAAM;AAFT,OAAd;AAIAS,MAAAA,MAAM,CAACG,IAAP,eAAY,eAAC,UAAD;AAAY,QAAA,GAAG,EAAEF,CAAjB;AAAoB,QAAA,KAAK,EAAEC;AAA3B,QAAZ;AACD;;AACD,WAAOF,MAAP;AACD,GAVe,EAUb,CAACN,YAAD,EAAeH,KAAf,CAVa,CAAhB;AAYA,QAAMW,KAA0B,GAAGJ,KAAK,CAACC,OAAN,CAAc,MAAM;AACrD,WAAO;AACLK,MAAAA,aAAa,EAAEZ,IAAI,KAAKV,YAAY,CAACc,GAAtB,GAA4B,KAA5B,GAAoC,QAD9C;AAELS,MAAAA,OAAO,EAAEZ,MAAM,GAAG,CAAH,GAAO,CAFjB;AAGLd,MAAAA,MAAM,EAAG,GAAEgB,MAAM,CAAChB,MAAP,GAAgBY,KAAM,IAH5B;AAILX,MAAAA,KAAK,EAAG,GAAEe,MAAM,CAACf,KAAP,GAAeW,KAAM;AAJ1B,KAAP;AAMD,GAPkC,EAOhC,CAACI,MAAM,CAAChB,MAAR,EAAgBgB,MAAM,CAACf,KAAvB,EAA8Ba,MAA9B,EAAsCD,IAAtC,EAA4CD,KAA5C,CAPgC,CAAnC;AASA,sBACE,eAAC,qBAAD;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,KAAK,EAAEY;AAFT,KAIGL,OAJH,CADF;AAQD,CApCD;;4BAsCeC,KAAK,CAACQ,UAAN,CAAiBlB,cAAjB,C","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\n// icon不同模式下的配置，比如宽高\nconst MODECONFIG = {\n  col: {\n    height: 9,\n    width: 14,\n  },\n  row: {\n    height: 14,\n    width: 9,\n  },\n};\n\n// row、col分别对应行列拖拽工具栏下的模式\nexport enum DragIconMode {\n  Row = 'row',\n  Col = 'col',\n}\n\nconst CircleIcon = styled.span`\n  display: inline-block;\n  width: 2px;\n  height: 2px;\n  background: #FFFFFF;\n  border-radius: 100%;\n`;\n\nconst DragButtonIconWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: opacity ease-in-out .25s;\n`;\n\ninterface IconProps {\n  scale: number;\n  mode: DragIconMode; // icon展示模式\n  circleNumber?: number; // 圆点数量\n  isShow?: boolean;\n}\n\nconst DragButtonIcon = (\n  props: IconProps,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const { scale, mode, isShow = true, circleNumber = 3 } = props;\n\n  const config = mode === DragIconMode.Col ? MODECONFIG.col : MODECONFIG.row;\n  const circles = React.useMemo(() => {\n    const result: React.ReactElement [] = [];\n    for (let i = 0; i < circleNumber; i++) {\n      const style = {\n        width: `${2 / scale}px`,\n        height: `${2 / scale}px`,\n      };\n      result.push(<CircleIcon key={i} style={style} />);\n    }\n    return result;\n  }, [circleNumber, scale]);\n\n  const style: React.CSSProperties = React.useMemo(() => {\n    return {\n      flexDirection: mode === DragIconMode.Col ? 'row' : 'column',\n      opacity: isShow ? 1 : 0,\n      height: `${config.height / scale}px`,\n      width: `${config.width / scale}px`,\n    };\n  }, [config.height, config.width, isShow, mode, scale]);\n\n  return (\n    <DragButtonIconWrapper\n      ref={ref}\n      style={style}\n    >\n      {circles}\n    </DragButtonIconWrapper>\n  );\n};\n\nexport default React.forwardRef(DragButtonIcon);\n"],"file":"dragButtonIcon.js"}