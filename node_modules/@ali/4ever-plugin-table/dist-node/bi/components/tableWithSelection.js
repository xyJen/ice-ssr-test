"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _tableSelection = _interopRequireDefault(require("./tableSelection"));

var _tableHoverRect = _interopRequireDefault(require("./tableSelection/tableHoverRect"));

var _useUpdateTableSelection = require("../../utils/hooks/useUpdateTableSelection");

var _pureTable = _interopRequireDefault(require("../../components/pureTable"));

const _createElement = /*#__PURE__*/_react.default.createElement;

const Wrapper = /*#__PURE__*/_styledComponents.default.div(["position:relative;"]);

const TableWithSelection = /*#__PURE__*/(0, _react.forwardRef)((props, forRef) => {
  const {
    controller,
    node,
    children,
    left,
    isSelectionHighlight,
    hoverSelection,
    tableSelection,
    getTableSelection,
    scale
  } = props;
  const tableRef = (0, _react.useRef)(null);
  const wrapperRef = (0, _react.useRef)(null);
  const [update, setUpdate] = (0, _react.useState)(0);
  (0, _react.useEffect)(() => {
    if (typeof forRef === 'function') {
      forRef(tableRef.current);
    } else if (forRef) {
      forRef.current = tableRef.current;
    }
  }, [tableRef, forRef]);
  const forceUpdate = (0, _react.useCallback)(() => {
    setUpdate(u => ++u);
  }, []);
  const updateContext = (0, _react.useMemo)(() => {
    return [update, forceUpdate];
  }, [update, forceUpdate]);
  return /*#__PURE__*/_createElement(Wrapper, {
    ref: wrapperRef
  }, /*#__PURE__*/_createElement(_useUpdateTableSelection.UpdateTableSelectionContext.Provider, {
    value: updateContext
  }, /*#__PURE__*/_createElement(_pureTable.default, {
    ref: tableRef,
    controller: controller,
    node: node,
    left: left,
    isMobile: false
  }, children), /*#__PURE__*/_createElement(_tableSelection.default, {
    "data-testid": "table-selection-wrapper",
    node: node,
    controller: controller,
    selection: tableSelection,
    tableRef: tableRef,
    scale: scale,
    isHighlight: isSelectionHighlight,
    getTableSelection: getTableSelection,
    forceUpdate: update
  })), /*#__PURE__*/_createElement(_tableHoverRect.default, {
    "data-testid": "table-selection-wrapper",
    node: node,
    tableRef: tableRef,
    scale: scale,
    hoverSelection: hoverSelection
  }));
});
var _default = TableWithSelection;
exports.default = _default;
//# sourceMappingURL=tableWithSelection.js.map