{"version":3,"sources":["../../../../../src/bi/components/cornerToolbar/toolbarMenu.tsx"],"names":["Button","styled","span","ToolbarMenu","React","Component","handleMouseDown","e","preventDefault","stopPropagation","onMenuEvent","props","highlightSelection","setIsHighlightSelection","cancelHighlightSelection","render","style","locale","contextMenuDeleteTable"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAG5B,MAAMA,MAAM,gBAAGC,0BAAOC,IAAV,kQAAZ;;wBAyDU,0CACE,eAAC,0BAAD,OADF,C;;AA7BK,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA4D;AAAA;AAAA;;AAAA,SACzEC,eADyE,GACtDC,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACC,cAAF,GADuB,CACH;;AACpBD,MAAAA,CAAC,CAACE,eAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACAD,MAAAA,WAAW,CAAC,cAAD,CAAX;AACD,KANwE;;AAAA,SAQzEE,kBARyE,GAQpD,MAAM;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAA8B,KAAKF,KAAzC;AACAE,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,KAXwE;;AAAA,SAazEC,wBAbyE,GAa9C,MAAM;AAC/B,YAAM;AAAED,QAAAA;AAAF,UAA8B,KAAKF,KAAzC;AACAE,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD,KAhBwE;AAAA;;AAkBzEE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAM,GAAG;AAAlB,QAAyB,KAAKN,KAApC;AACA,wBACE,eAAC,MAAD;AACE,MAAA,KAAK,EAAEK,KADT;AAEE,MAAA,WAAW,EAAE,KAAKV,eAFpB;AAGE,MAAA,UAAU,EAAE,KAAKA,eAHnB;AAIE,MAAA,WAAW,EAAE,KAAKM,kBAJpB;AAKE,MAAA,YAAY,EAAE,KAAKE;AALrB,oBAOE,eAAC,iBAAD;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAyB,MAAA,KAAK,EAAEG,MAAM,CAACC;AAAvC,YAPF,CADF;AAeD;;AAnCwE","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { DeleteBetaNormal, Tooltip } from '@ali/we-design';\n\nconst Button = styled.span`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: rgba(17,31,44,0.72);\n  margin: 0;\n  padding: 0;\n  width: 28px;\n  height: 28px;\n  font-size: 16px;\n  cursor: pointer;\n  line-height: 16px;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: rgba(17,31,44,0.08);\n  }\n`;\n\ninterface ToolbarMenuProps {\n  mode: string;\n  style?: React.CSSProperties;\n  onMenuEvent: (command: string) => void;\n  setIsHighlightSelection: (isHighlight: boolean) => void;\n  locale?: Record<string, any>;\n}\n\nexport default class ToolbarMenu extends React.Component<ToolbarMenuProps> {\n  handleMouseDown = (e) => {\n    e.preventDefault(); // Prevent blur.\n    e.stopPropagation();\n    const { onMenuEvent } = this.props;\n    onMenuEvent('delete-table');\n  };\n\n  highlightSelection = () => {\n    const { setIsHighlightSelection } = this.props;\n    setIsHighlightSelection(true);\n  };\n\n  cancelHighlightSelection = () => {\n    const { setIsHighlightSelection } = this.props;\n    setIsHighlightSelection(false);\n  };\n\n  render() {\n    const { style, locale = {} } = this.props;\n    return (\n      <Button\n        style={style}\n        onMouseDown={this.handleMouseDown}\n        onTouchEnd={this.handleMouseDown}\n        onMouseOver={this.highlightSelection}\n        onMouseLeave={this.cancelHighlightSelection}\n      >\n        <Tooltip placement=\"top\" title={locale.contextMenuDeleteTable}>\n          <span>\n            <DeleteBetaNormal />\n          </span>\n        </Tooltip>\n      </Button>\n    );\n  }\n}\n"],"file":"toolbarMenu.js"}