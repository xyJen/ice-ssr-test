"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "setTableMinColsWidthData", {
  enumerable: true,
  get: function () {
    return _actions.setTableMinColsWidthData;
  }
});
Object.defineProperty(exports, "adjustColsWidth", {
  enumerable: true,
  get: function () {
    return _actions.adjustColsWidth;
  }
});
Object.defineProperty(exports, "clickTableToolbar", {
  enumerable: true,
  get: function () {
    return _clickTableToolbar.clickTableToolbar;
  }
});
Object.defineProperty(exports, "deleteTable", {
  enumerable: true,
  get: function () {
    return _deleteTable.deleteTable;
  }
});
Object.defineProperty(exports, "deleteTableCols", {
  enumerable: true,
  get: function () {
    return _deleteTableCols.deleteTableCols;
  }
});
Object.defineProperty(exports, "deleteTableRows", {
  enumerable: true,
  get: function () {
    return _deleteTableRows.deleteTableRows;
  }
});
Object.defineProperty(exports, "emptyTableSelection", {
  enumerable: true,
  get: function () {
    return _emptyTableSelection.emptyTableSelection;
  }
});
Object.defineProperty(exports, "insertTableRowBySelections", {
  enumerable: true,
  get: function () {
    return _inserTableRowsBySelections.insertTableRowBySelections;
  }
});
Object.defineProperty(exports, "insertTable", {
  enumerable: true,
  get: function () {
    return _insertTable.insertTable;
  }
});
Object.defineProperty(exports, "insertTableCol", {
  enumerable: true,
  get: function () {
    return _insertTableCol.insertTableCol;
  }
});
Object.defineProperty(exports, "insertTableRow", {
  enumerable: true,
  get: function () {
    return _insertTableRow.insertTableRow;
  }
});
Object.defineProperty(exports, "mergeTableCells", {
  enumerable: true,
  get: function () {
    return _mergeTableCells.mergeTableCells;
  }
});
Object.defineProperty(exports, "moveTableCols", {
  enumerable: true,
  get: function () {
    return _moveTableCols.moveTableCols;
  }
});
Object.defineProperty(exports, "moveTableRows", {
  enumerable: true,
  get: function () {
    return _moveTableRows.moveTableRows;
  }
});
Object.defineProperty(exports, "removeTableColHeader", {
  enumerable: true,
  get: function () {
    return _removeTableColHeader.removeTableColHeader;
  }
});
Object.defineProperty(exports, "removeTableRowHeader", {
  enumerable: true,
  get: function () {
    return _removeTableRowHeader.removeTableRowHeader;
  }
});
Object.defineProperty(exports, "resizeTableColWidth", {
  enumerable: true,
  get: function () {
    return _resizeTableColWidth.resizeTableColWidth;
  }
});
Object.defineProperty(exports, "resizeTableHeight", {
  enumerable: true,
  get: function () {
    return _resizeTableHeight.resizeTableHeight;
  }
});
Object.defineProperty(exports, "resizeTableWidth", {
  enumerable: true,
  get: function () {
    return _resizeTableWidth.resizeTableWidth;
  }
});
Object.defineProperty(exports, "resizeTableWidthFitContainer", {
  enumerable: true,
  get: function () {
    return _resizeTableWidthFitContainer.resizeTableWidthFitContainer;
  }
});
Object.defineProperty(exports, "scrollTable", {
  enumerable: true,
  get: function () {
    return _scrollTable.scrollTable;
  }
});
Object.defineProperty(exports, "selectTable", {
  enumerable: true,
  get: function () {
    return _selectTable.selectTable;
  }
});
Object.defineProperty(exports, "selectTableCols", {
  enumerable: true,
  get: function () {
    return _selectTableCols.selectTableCols;
  }
});
Object.defineProperty(exports, "selectTableRows", {
  enumerable: true,
  get: function () {
    return _selectTableRows.selectTableRows;
  }
});
Object.defineProperty(exports, "selectTableSelection", {
  enumerable: true,
  get: function () {
    return _selectTableSelection.selectTableSelection;
  }
});
Object.defineProperty(exports, "setTableAutofitWidthDisable", {
  enumerable: true,
  get: function () {
    return _setTableAutofitWidthDisable.setTableAutofitWidthDisable;
  }
});
Object.defineProperty(exports, "setTableAutofitWidthEnable", {
  enumerable: true,
  get: function () {
    return _setTableAutofitWidthEnable.setTableAutofitWidthEnable;
  }
});
Object.defineProperty(exports, "setTableBorder", {
  enumerable: true,
  get: function () {
    return _setTableBorder.setTableBorder;
  }
});
Object.defineProperty(exports, "setTableCellFill", {
  enumerable: true,
  get: function () {
    return _setTableCellFill.setTableCellFill;
  }
});
Object.defineProperty(exports, "setTableCellVAlign", {
  enumerable: true,
  get: function () {
    return _setTableCellVAlign.setTableCellVAlign;
  }
});
Object.defineProperty(exports, "setTableColHeader", {
  enumerable: true,
  get: function () {
    return _setTableColHeader.setTableColHeader;
  }
});
Object.defineProperty(exports, "setTableRowHeader", {
  enumerable: true,
  get: function () {
    return _setTableRowHeader.setTableRowHeader;
  }
});
Object.defineProperty(exports, "setTableRowHeight", {
  enumerable: true,
  get: function () {
    return _setTableRowHeight.setTableRowHeight;
  }
});
Object.defineProperty(exports, "splitTableCell", {
  enumerable: true,
  get: function () {
    return _splitTableCell.splitTableCell;
  }
});
Object.defineProperty(exports, "tableBlur", {
  enumerable: true,
  get: function () {
    return _tableBlur.tableBlur;
  }
});
exports.actionTypes = exports.isActions = exports.actions = void 0;

var _actions = require("../../utils/actions");

var _clickTableToolbar = require("./clickTableToolbar");

var _deleteTable = require("./deleteTable");

var _deleteTableCols = require("./deleteTableCols");

var _deleteTableRows = require("./deleteTableRows");

var _emptyTableSelection = require("./emptyTableSelection");

var _inserTableRowsBySelections = require("./inserTableRowsBySelections");

var _insertTable = require("./insertTable");

var _insertTableCol = require("./insertTableCol");

var _insertTableRow = require("./insertTableRow");

var _mergeTableCells = require("./mergeTableCells");

var _moveTableCols = require("./moveTableCols");

var _moveTableRows = require("./moveTableRows");

var _removeTableColHeader = require("./removeTableColHeader");

var _removeTableRowHeader = require("./removeTableRowHeader");

var _resizeTableColWidth = require("./resizeTableColWidth");

var _resizeTableHeight = require("./resizeTableHeight");

var _resizeTableWidth = require("./resizeTableWidth");

var _resizeTableWidthFitContainer = require("./resizeTableWidthFitContainer");

var _scrollTable = require("./scrollTable");

var _selectTable = require("./selectTable");

var _selectTableCols = require("./selectTableCols");

var _selectTableRows = require("./selectTableRows");

var _selectTableSelection = require("./selectTableSelection");

var _setTableAutofitWidthDisable = require("./setTableAutofitWidthDisable");

var _setTableAutofitWidthEnable = require("./setTableAutofitWidthEnable");

var _setTableBorder = require("./setTableBorder");

var _setTableCellFill = require("./setTableCellFill");

var _setTableCellVAlign = require("./setTableCellVAlign");

var _setTableColHeader = require("./setTableColHeader");

var _setTableRowHeader = require("./setTableRowHeader");

var _setTableRowHeight = require("./setTableRowHeight");

var _splitTableCell = require("./splitTableCell");

var _tableBlur = require("./tableBlur");

const actions = {
  // common
  setTableMinColsWidthData: _actions.setTableMinColsWidthData,
  adjustColsWidth: _actions.adjustColsWidth,
  // bi
  clickTableToolbar: _clickTableToolbar.clickTableToolbar,
  deleteTable: _deleteTable.deleteTable,
  deleteTableCols: _deleteTableCols.deleteTableCols,
  deleteTableRows: _deleteTableRows.deleteTableRows,
  emptyTableSelection: _emptyTableSelection.emptyTableSelection,
  insertTableRowBySelections: _inserTableRowsBySelections.insertTableRowBySelections,
  insertTable: _insertTable.insertTable,
  insertTableCol: _insertTableCol.insertTableCol,
  insertTableRow: _insertTableRow.insertTableRow,
  mergeTableCells: _mergeTableCells.mergeTableCells,
  moveTableCols: _moveTableCols.moveTableCols,
  moveTableRows: _moveTableRows.moveTableRows,
  removeTableColHeader: _removeTableColHeader.removeTableColHeader,
  removeTableRowHeader: _removeTableRowHeader.removeTableRowHeader,
  resizeTableColWidth: _resizeTableColWidth.resizeTableColWidth,
  resizeTableHeight: _resizeTableHeight.resizeTableHeight,
  resizeTableWidth: _resizeTableWidth.resizeTableWidth,
  resizeTableWidthFitContainer: _resizeTableWidthFitContainer.resizeTableWidthFitContainer,
  scrollTable: _scrollTable.scrollTable,
  selectTable: _selectTable.selectTable,
  selectTableCols: _selectTableCols.selectTableCols,
  selectTableRows: _selectTableRows.selectTableRows,
  selectTableSelection: _selectTableSelection.selectTableSelection,
  setTableAutofitWidthDisable: _setTableAutofitWidthDisable.setTableAutofitWidthDisable,
  setTableAutofitWidthEnable: _setTableAutofitWidthEnable.setTableAutofitWidthEnable,
  setTableBorder: _setTableBorder.setTableBorder,
  setTableCellFill: _setTableCellFill.setTableCellFill,
  setTableCellVAlign: _setTableCellVAlign.setTableCellVAlign,
  setTableColHeader: _setTableColHeader.setTableColHeader,
  setTableRowHeader: _setTableRowHeader.setTableRowHeader,
  setTableRowHeight: _setTableRowHeight.setTableRowHeight,
  splitTableCell: _splitTableCell.splitTableCell,
  tableBlur: _tableBlur.tableBlur
};
exports.actions = actions;
const isActions = {
  // common
  isTableSetTableMinColsWidthDataAction: _actions.isTableSetTableMinColsWidthDataAction,
  isTableAdjustColsWidthAction: _actions.isTableAdjustColsWidthAction,
  // bi
  isTableClickTableToolbarAction: _clickTableToolbar.isTableClickTableToolbarAction,
  isTableDeleteTableAction: _deleteTable.isTableDeleteTableAction,
  isTableDeleteColsAction: _deleteTableCols.isTableDeleteColsAction,
  isTableDeleteRowsAction: _deleteTableRows.isTableDeleteRowsAction,
  isTableEmptySelectionAction: _emptyTableSelection.isTableEmptySelectionAction,
  isTableInsertRowBySelectionsAction: _inserTableRowsBySelections.isTableInsertRowBySelectionsAction,
  isTableInsertTableAction: _insertTable.isTableInsertTableAction,
  isTableInsertColAction: _insertTableCol.isTableInsertColAction,
  isTableInsertRowAction: _insertTableRow.isTableInsertRowAction,
  isTableMergeCellsAction: _mergeTableCells.isTableMergeCellsAction,
  isTableMoveColsAction: _moveTableCols.isTableMoveColsAction,
  isTableMoveRowsAction: _moveTableRows.isTableMoveRowsAction,
  isTableRemoveTableColHeaderAction: _removeTableColHeader.isTableRemoveTableColHeaderAction,
  isTableRemoveTableRowHeaderAction: _removeTableRowHeader.isTableRemoveTableRowHeaderAction,
  isTableResizeTableColWidthAction: _resizeTableColWidth.isTableResizeTableColWidthAction,
  isTableResizeTableHeightAction: _resizeTableHeight.isTableResizeTableHeightAction,
  isTableResizeTableWidthAction: _resizeTableWidth.isTableResizeTableWidthAction,
  isTableResizeTableWidthFitContainerAction: _resizeTableWidthFitContainer.isTableResizeTableWidthFitContainerAction,
  isTableScrollTableAction: _scrollTable.isTableScrollTableAction,
  isTableSelectTableAction: _selectTable.isTableSelectTableAction,
  isTableSelectTableColsAction: _selectTableCols.isTableSelectTableColsAction,
  isTableSelectTableRowsAction: _selectTableRows.isTableSelectTableRowsAction,
  isTableSelectTableSelectionAction: _selectTableSelection.isTableSelectTableSelectionAction,
  isTableSetTableAutofitWidthDisableAction: _setTableAutofitWidthDisable.isTableSetTableAutofitWidthDisableAction,
  isTablesetTableAutofitWidthEnableAction: _setTableAutofitWidthEnable.isTablesetTableAutofitWidthEnableAction,
  isTableSetTableBorderAction: _setTableBorder.isTableSetTableBorderAction,
  isTableSetTableCellFillAction: _setTableCellFill.isTableSetTableCellFillAction,
  isTableSetTableCellVAlignAction: _setTableCellVAlign.isTableSetTableCellVAlignAction,
  isTableSetTableColHeaderAction: _setTableColHeader.isTableSetTableColHeaderAction,
  isTableSetTableRowHeaderAction: _setTableRowHeader.isTableSetTableRowHeaderAction,
  isTableSetTableRowHeightAction: _setTableRowHeight.isTableSetTableRowHeightAction,
  isTableSplitTableCellAction: _splitTableCell.isTableSplitTableCellAction,
  isTableBlurAction: _tableBlur.isTableBlurAction
};
exports.isActions = isActions;
const actionTypes = {
  // common
  TABLE_ADJUST_COLS_WIDTH: _actions.TABLE_ADJUST_COLS_WIDTH,
  TABLE_SET_MIN_COLS_WIDTH_DATA: _actions.TABLE_SET_MIN_COLS_WIDTH_DATA,
  // bi
  TABLE_BLUR: _tableBlur.TABLE_BLUR,
  TABLE_CLICK_TOOLBAR: _clickTableToolbar.TABLE_CLICK_TOOLBAR,
  TABLE_DELETE_COLS: _deleteTableCols.TABLE_DELETE_COLS,
  TABLE_DELETE_ROWS: _deleteTableRows.TABLE_DELETE_ROWS,
  TABLE_DELETE_TABLE: _deleteTable.TABLE_DELETE_TABLE,
  TABLE_DISABLE_AUTOFIT_WIDTH: _setTableAutofitWidthDisable.TABLE_DISABLE_AUTOFIT_WIDTH,
  TABLE_EMPTY_SELECTION: _emptyTableSelection.TABLE_EMPTY_SELECTION,
  TABLE_ENABLE_AUTOFIT_WIDTH: _setTableAutofitWidthEnable.TABLE_ENABLE_AUTOFIT_WIDTH,
  TABLE_INSERT_COL: _insertTableCol.TABLE_INSERT_COL,
  TABLE_INSERT_ROW: _insertTableRow.TABLE_INSERT_ROW,
  TABLE_INSERT_ROW_BY_SELECTIONS: _inserTableRowsBySelections.TABLE_INSERT_ROW_BY_SELECTIONS,
  TABLE_INSERT_TABLE: _insertTable.TABLE_INSERT_TABLE,
  TABLE_MERGE_CELLS: _mergeTableCells.TABLE_MERGE_CELLS,
  TABLE_MOVE_COLS: _moveTableCols.TABLE_MOVE_COLS,
  TABLE_MOVE_ROWS: _moveTableRows.TABLE_MOVE_ROWS,
  TABLE_REMOVE_COL_HEADER: _removeTableColHeader.TABLE_REMOVE_COL_HEADER,
  TABLE_REMOVE_ROW_HEADER: _removeTableRowHeader.TABLE_REMOVE_ROW_HEADER,
  TABLE_RESIZE_COL_WIDTH: _resizeTableColWidth.TABLE_RESIZE_COL_WIDTH,
  TABLE_RESIZE_HEIGHT: _resizeTableHeight.TABLE_RESIZE_HEIGHT,
  TABLE_RESIZE_WIDTH: _resizeTableWidth.TABLE_RESIZE_WIDTH,
  TABLE_RESIZE_WIDTH_FIT_CONTAINER: _resizeTableWidthFitContainer.TABLE_RESIZE_WIDTH_FIT_CONTAINER,
  TABLE_SCROLL: _scrollTable.TABLE_SCROLL,
  TABLE_SELECT_COLS: _selectTableCols.TABLE_SELECT_COLS,
  TABLE_SELECT_ROWS: _selectTableRows.TABLE_SELECT_ROWS,
  TABLE_SELECT_SELECTIONS: _selectTableSelection.TABLE_SELECT_SELECTIONS,
  TABLE_SELECT_TABLE: _selectTable.TABLE_SELECT_TABLE,
  TABLE_SET_BORDER: _setTableBorder.TABLE_SET_BORDER,
  TABLE_SET_CELL_FILL: _setTableCellFill.TABLE_SET_CELL_FILL,
  TABLE_SET_CELL_VALIGN: _setTableCellVAlign.TABLE_SET_CELL_VALIGN,
  TABLE_SET_COL_HEADER: _setTableColHeader.TABLE_SET_COL_HEADER,
  TABLE_SET_ROW_HEADER: _setTableRowHeader.TABLE_SET_ROW_HEADER,
  TABLE_SET_ROW_HEIGHT: _setTableRowHeight.TABLE_SET_ROW_HEIGHT,
  TABLE_SPLIT_CELL: _splitTableCell.TABLE_SPLIT_CELL
};
exports.actionTypes = actionTypes;
//# sourceMappingURL=index.js.map