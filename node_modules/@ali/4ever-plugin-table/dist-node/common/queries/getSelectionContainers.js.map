{"version":3,"sources":["../../../../src/common/queries/getSelectionContainers.ts"],"names":["isRealTable","node","Table","isTable","data","sr","getAllTables","root","filterDescendants","console","warn","getSelectionContainers","controller","selection","originSelection","defaultWrapper","document","doc","value","Map","tables","start","end","sort","startPath","getPath","key","endPath","res","afterTablePoint","beforeTablePoint","forEach","table","tablePath","startClosestAncestorTable","getClosestByPath","endClosestAncestorTable","isStartInTable","isEndInTable","startClosestRow","TableRow","isTableRow","startClosestCell","TableCell","isTableCell","endClosestCell","wrapper","isHeader","domUtils","findSelectionSlot","set","firstText","getFirstText","lastText","getLastText","newStart","newEnd","TextPoint","create","offset","text","length","nextText","getNextText","prevText","getPreviousText","Selection","anchor","focus","restSelection"],"mappings":"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","sourcesContent":["\nimport {\n  Node, Controller, Selection,\n  domUtils, TextPoint, Document, SelectionWrapperMap,\n} from '@ali/4ever-cangjie';\nimport Table from '../../mo/models';\nimport TableCell from '../../mo/models/tableCell';\nimport TableRow from '../../mo/models/tableRow';\nimport { memoize } from 'lodash-es';\n\nconst isRealTable = (node: Node) => Table.isTable(node) && !node.data.sr; // 排除分栏\n\nexport const getAllTables = memoize((root: Document): Node[] => {\n  // 根据类型定义和传参进行理论分析，这里不会有 NPE 问题，但监控上报了且尝试复现未果\n  // 这里先做个防御，并进一步收集信息供分析\n  // Ref: https://aone.alibaba-inc.com/v2/project/995011/bug/45757203\n  if (!root || !root.filterDescendants) {\n    console.warn('Unexpected NPE: not valid Document type', root);\n    return [];\n  }\n  return root.filterDescendants(isRealTable);\n});\n\ninterface SelectionContainersProps {\n  selection: Selection;\n  defaultWrapper: HTMLDivElement;\n  document?: Document;\n}\n\nexport default function getSelectionContainers(\n  controller: Controller,\n  { selection: originSelection, defaultWrapper, document: doc }: SelectionContainersProps,\n): SelectionWrapperMap {\n  const document = doc || controller.value.document;\n  if (!document) {\n    console.warn(`getSelectionContainers[Table]: document is ${document}`);\n    return new Map();\n  }\n  const tables = getAllTables(document);\n  const { start, end } = originSelection.sort(document);\n  const startPath = document.getPath(start.key);\n  const endPath = document.getPath(end.key);\n  const res: SelectionWrapperMap = new Map();\n  if (!startPath || !endPath) {\n    return res;\n  }\n\n  let afterTablePoint: TextPoint | null = null;\n  let beforeTablePoint: TextPoint | null = null;\n\n  tables.forEach((table) => {\n    const tablePath = document.getPath(table.key);\n    if (!tablePath) {\n      return;\n    }\n    const startClosestAncestorTable = document.getClosestByPath(startPath, isRealTable);\n    const endClosestAncestorTable = document.getClosestByPath(endPath, isRealTable);\n    const isStartInTable = startClosestAncestorTable === table;\n    const isEndInTable = endClosestAncestorTable === table;\n\n    // 选区完全在 table 里\n    if (isStartInTable && isEndInTable) {\n      const startClosestRow = document.getClosestByPath(startPath, TableRow.isTableRow) as TableRow;\n      const startClosestCell = document.getClosestByPath(startPath, TableCell.isTableCell) as TableCell;\n      const endClosestCell = document.getClosestByPath(endPath, TableCell.isTableCell);\n      let wrapper: HTMLDivElement | undefined | null;\n      if (\n        startClosestCell\n        && startClosestCell.key === endClosestCell?.key\n        && TableRow.isHeader(startClosestRow)\n      ) {\n        wrapper = domUtils.findSelectionSlot(startClosestCell.key);\n      } else {\n        wrapper = domUtils.findSelectionSlot(table.key);\n      }\n      if (wrapper) {\n        res.set(originSelection, { wrapper, originSelection });\n      }\n      return;\n    }\n    // expanded 选区部分在 table 里\n    if (isStartInTable || isEndInTable) {\n      const firstText = table.getFirstText();\n      const lastText = table.getLastText();\n      if (!firstText || (!lastText && isStartInTable)) {\n        return;\n      }\n      const [newStart, newEnd] = isStartInTable\n        ? [start, TextPoint.create({ key: lastText!.key, offset: lastText!.text.length })]\n        : [TextPoint.create({ key: firstText.key, offset: 0 }), end];\n\n      if (isStartInTable) {\n        const nextText = document.getNextText(lastText!.key);\n        afterTablePoint = nextText && TextPoint.create({ key: nextText.key, offset: 0 });\n      } else {\n        const prevText = document.getPreviousText(firstText.key);\n        beforeTablePoint = prevText && TextPoint.create({ key: prevText.key, offset: prevText.text.length });\n      }\n\n      const wrapper = domUtils.findSelectionSlot(table.key);\n      if (!wrapper) {\n        return;\n      }\n      res.set(\n        Selection.create({ anchor: newStart, focus: newEnd }),\n        { wrapper, originSelection },\n      );\n    }\n  });\n\n  if (afterTablePoint || beforeTablePoint) {\n    const restSelection = Selection.create({\n      anchor: afterTablePoint || start,\n      focus: beforeTablePoint || end,\n    });\n    res.set(restSelection, { wrapper: defaultWrapper, originSelection });\n  }\n\n  return res;\n}\n"],"file":"getSelectionContainers.js"}