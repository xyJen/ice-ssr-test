{"version":3,"sources":["../../../../src/utils/components/groupNew.tsx"],"names":["React","Title","TitleBox","Content","toggleFold","useUserData","styled","clearImmediately","ContentBox","TitleContent","div","GroupBox","props","backgroundColor","generateRole","role","fold","GroupNew","node","attributes","isSelected","controller","children","renderExtra","renderBackground","foldBoxLeft","visible","style","display","useState","foldRole","setFoleRole","first","nodes","value","data","immediatelyUnfoldMap","immediately","key","foldRef","useRef","handleFoldChange","useCallback","_fold","run","useEffect","current","type","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Title as TitleBox, Content, toggleFold } from '@ali/4ever-plugin-heading-group';\nimport { Block, Controller, GroupPlugin, useUserData } from '@ali/4ever-cangjie';\nimport { FoldableHeadingData } from '@ali/4ever-plugin-heading';\nimport styled from 'styled-components';\nimport { clearImmediately } from '../actions';\n\nconst ContentBox = styled(Content)`\n  position: relative;\n`;\n\nconst TitleContent = styled.div`\n`;\n\nconst GroupBox = styled.div<{backgroundColor?: string}>`\n  position: relative;\n  background: ${(props) => props.backgroundColor || 'unset'};\n`;\n\nexport interface GroupNewProps {\n  node: Block<FoldableHeadingData>;\n  attributes: Record<string, string>;\n  isSelected: boolean;\n  controller: Controller;\n  renderExtra?: React.ReactElement | null;\n  renderBackground?: React.ReactElement | null;\n  foldBoxLeft?: number;\n  role?: string;\n  isCollapsed?: boolean;\n  visible?: boolean;\n}\n\nconst generateRole = (role: string, fold: boolean): string => {\n  return `${role}${fold ? 'Fold' : 'UnFold'}`;\n};\n\nconst GroupNew: React.FC<GroupNewProps> = (props) => {\n  const {\n    node,\n    attributes,\n    isSelected,\n    controller,\n    children,\n    renderExtra,\n    renderBackground,\n    foldBoxLeft,\n    role = 'Default',\n    visible,\n  } = props;\n\n  const style: React.CSSProperties = {};\n  if (visible === false) {\n    style.display = 'none';\n  }\n\n  const fold = useUserData(node, 'fold') || false;\n  const [foldRole, setFoleRole] = React.useState(generateRole(role, fold));\n  const first = node.nodes[0] as Block;\n  const { immediatelyUnfoldMap = {} } = controller.value.data;\n  const immediately = !!immediatelyUnfoldMap[node.key];\n\n  const foldRef = React.useRef(fold);\n\n  const handleFoldChange = React.useCallback((_fold: boolean) => {\n    controller.run('onCangjieBlur');\n    controller.run('onAction', toggleFold({\n      node,\n      fold: _fold,\n    }));\n    // controller.run('onAction', GroupPlugin.actions.toggleGroupFold(node.key));\n    setFoleRole(generateRole(role, fold));\n  }, [controller, node, fold, role]);\n\n  React.useEffect(() => {\n    foldRef.current = fold;\n  }, [controller, node, fold, isSelected]);\n\n  // 立即展开后需要清除标记\n  React.useEffect(() => {\n    if (immediately) {\n      controller.run('onAction', clearImmediately({\n        node,\n      }));\n    }\n  }, [controller, first, immediately]);\n\n\n  return (\n    <GroupBox\n      {...attributes}\n      data-cangjie-group-block\n      data-name=\"heading-group\"\n      data-type={node.type}\n      style={style}\n      data-foldable\n    >\n      { renderBackground }\n      <TitleBox\n        dataName=\"heading-group-title\"\n        fold={fold}\n        foldBoxLeft={foldBoxLeft}\n        onChange={handleFoldChange}\n        role={foldRole}\n      >\n        <TitleContent data-name=\"heading-group-title-content\">\n          {children}\n        </TitleContent>\n      </TitleBox>\n    </GroupBox>\n  );\n};\n\nGroupNew.displayName = 'Group';\n\nexport default GroupNew;\n"],"file":"groupNew.js"}