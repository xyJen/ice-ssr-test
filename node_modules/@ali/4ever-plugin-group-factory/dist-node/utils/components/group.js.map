{"version":3,"sources":["../../../../src/utils/components/group.tsx"],"names":["ContentBox","Content","TitleContent","styled","div","GroupBox","props","backgroundColor","generateRole","role","fold","Group","node","attributes","isSelected","controller","children","renderExtra","renderBackground","foldBoxLeft","visible","originStyle","style","display","foldRole","setFoleRole","React","useState","first","nodes","immediatelyUnfoldMap","value","data","immediately","key","foldRef","useRef","handleFoldChange","useCallback","_fold","run","useEffect","current","titleNode","contentNodes","Array","isArray","length","slice","type","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { toggleFold, Title as TitleBox, Content } from '@ali/4ever-plugin-heading-group'\nimport { Block, Controller, useUserData } from '@ali/4ever-cangjie';\nimport type { FoldableHeadingData } from '@ali/4ever-plugin-heading';\nimport styled from 'styled-components';\nimport { clearImmediately } from '../actions';\n\nconst ContentBox = styled(Content)`\n  position: relative;\n`;\n\nconst TitleContent = styled.div`\n`;\n\nconst GroupBox = styled.div<{ backgroundColor?: string }>`\n  position: relative;\n  background: ${(props) => props.backgroundColor || 'unset'};\n`;\n\nexport interface GroupProps {\n  node: Block<FoldableHeadingData>;\n  attributes: Record<string, string>;\n  isSelected: boolean;\n  controller: Controller;\n  renderExtra?: React.ReactElement | null;\n  renderBackground?: React.ReactElement | null;\n  foldBoxLeft?: number;\n  role?: string;\n  visible?: boolean;\n}\n\nconst generateRole = (role: string, fold: boolean): string => {\n  return `${role}${fold ? 'Fold' : 'UnFold'}`;\n};\n\nconst Group: React.FC<GroupProps> = (props) => {\n  const {\n    node,\n    attributes,\n    isSelected,\n    controller,\n    children,\n    renderExtra,\n    renderBackground,\n    foldBoxLeft,\n    role = 'Default',\n    visible,\n  } = props;\n\n  const originStyle = attributes?.style as React.CSSProperties | undefined;\n\n  const style: React.CSSProperties = originStyle ? { ...originStyle } : {};\n  if (visible === false) {\n    style.display = 'none';\n  }\n\n  const fold = useUserData(node, 'fold') || false;\n  const [foldRole, setFoleRole] = React.useState(generateRole(role, fold));\n  const first = node.nodes[0] as Block;\n  const { immediatelyUnfoldMap = {} } = controller.value.data;\n  const immediately = !!immediatelyUnfoldMap[first.key];\n\n  const foldRef = React.useRef(fold);\n\n  const handleFoldChange = React.useCallback((_fold: boolean) => {\n    controller.run('onCangjieBlur');\n    controller.run('onAction', toggleFold({\n      node: first,\n      fold: _fold,\n    }));\n    setFoleRole(generateRole(role, fold));\n  }, [controller, first, fold, role]);\n\n  React.useEffect(() => {\n    foldRef.current = fold;\n  }, [controller, first, fold, isSelected]);\n\n  // 立即展开后需要清除标记\n  React.useEffect(() => {\n    if (immediately) {\n      controller.run('onAction', clearImmediately({\n        node: first,\n      }));\n    }\n  }, [controller, first, immediately]);\n\n  // 切割议题的标题和内容块\n  let titleNode: React.ReactNode;\n  let contentNodes: React.ReactNode[];\n\n  if (Array.isArray(children) && children.length >= 1) {\n    titleNode = children[0];\n    contentNodes = children.slice(1);\n  } else {\n    return <>{children}</>;\n  }\n\n  return (\n    <GroupBox\n      {...attributes}\n      data-cangjie-group-block\n      data-name=\"heading-group\"\n      data-type={node.type}\n      style={style}\n      data-foldable\n    >\n      {renderBackground}\n      <TitleBox\n        dataName=\"heading-group-title\"\n        fold={fold}\n        foldBoxLeft={foldBoxLeft}\n        onChange={handleFoldChange}\n        role={foldRole}\n      >\n        <TitleContent data-name=\"heading-group-title-content\">\n          {titleNode}\n        </TitleContent>\n      </TitleBox>\n      {contentNodes.length > 0 && (\n        <ContentBox dataName=\"heading-group-content\" fold={fold}>\n          {renderExtra}\n          {contentNodes}\n        </ContentBox>\n      )}\n    </GroupBox>\n  );\n};\n\nGroup.displayName = 'Group';\n\nexport default Group;\n"],"file":"group.js"}