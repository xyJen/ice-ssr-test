"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getReceiversHeight = exports.getReceiverWidth = void 0;

var _everPluginList = require("@ali/4ever-plugin-list");

var _type = require("../type");

var _constants = require("../constants");

const TOTAL_EXTRA = _constants.AVATAR_WRAPPER_SZ + _constants.NAME_WRAPPER_PADDING + _constants.RECEIVER_WRAPPER_MARGIN + 2;
const AUTO_FONT = 'auto';
const FOURTEEN_SZ = '14px';
const TWELVE_SZ = '12px';
/**
 * @param {IOrganizerModel} receiver 接收者信息
 * @param {*} locale 语言
 * @return {*}  {number} 单个接收者 UI 的实际渲染宽度
 */

const getReceiverWidth = (receiver, locale) => {
  const {
    type,
    name = ''
  } = receiver;
  const typeName = (locale || {})[_type.ReceiverTypeEnum[type]?.toString()] || '';

  const nameWidth = _everPluginList.TextMeasure.measureTextWidth(name, AUTO_FONT, FOURTEEN_SZ);

  const typeWidth = _everPluginList.TextMeasure.measureTextWidth(typeName, AUTO_FONT, TWELVE_SZ);

  return TOTAL_EXTRA + nameWidth + typeWidth;
};
/**
 * @param {IOrganizerModel[]} receivers 所有接收者信息
 * @param {*} locale 语言(需要根据语言测量实际文字宽度)
 * @param {string} totalCountText 参会人数文字
 * @param {number} singleLineHeight 一行接收者的 UI 高度
 * @param {number} innerWidth 日程卡片容器的宽度
 * @return {*}  {number} 返回渲染出来接受者信息 UI 的实际高度
 */


exports.getReceiverWidth = getReceiverWidth;

const getReceiversHeight = ({
  receivers,
  locale,
  totalCountText,
  singleLineHeight,
  innerWidth
}) => {
  const widths = receivers.map(receiver => {
    const w = getReceiverWidth(receiver, locale);
    return w > _constants.RECEIVER_MAX_WIDTH ? _constants.RECEIVER_MAX_WIDTH : w;
  });
  let actualWidth = 0;
  let remain = innerWidth;
  widths.forEach(w => {
    if (w) {
      if (remain - w > 0) {
        remain -= w;
        actualWidth += w;
      } else {
        actualWidth += remain + w;
        remain = innerWidth - w;
      }
    }
  });

  const moreInfoWidth = _everPluginList.TextMeasure.measureTextWidth(totalCountText, AUTO_FONT, FOURTEEN_SZ) + _constants.MORE_INDO_EXTRA;

  return Math.ceil((actualWidth + moreInfoWidth) / innerWidth) * singleLineHeight;
};

exports.getReceiversHeight = getReceiversHeight;
//# sourceMappingURL=getReceiverWidth.js.map