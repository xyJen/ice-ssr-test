"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExtraArea = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _weIcon = require("@ali/we-icon");

var _preventDefaultOnClick = _interopRequireDefault(require("../../uitls/preventDefaultOnClick"));

var _styled = require("./styled");

var _constants = require("../../constants");

var _RefreshTips = _interopRequireDefault(require("./RefreshTips"));

const _createElement = /*#__PURE__*/_react.default.createElement;

var _ref = /*#__PURE__*/_createElement(_weIcon.GotoNormalNormal, {
  testid: "goto",
  title: 'viewCalendardetails',
  style: _constants.DEFAULT_ICON_STYLE
});

function renderViewCalendardetails(jumpToCalendar, viewCalendardetails) {
  if (!jumpToCalendar) return null;
  return /*#__PURE__*/_createElement(_weDesign.Tooltip, {
    title: viewCalendardetails
  }, /*#__PURE__*/_createElement(_styled.IconWrapper, {
    onMouseDown: jumpToCalendar,
    onClick: _preventDefaultOnClick.default
  }, _ref));
}

var _ref2 = /*#__PURE__*/_createElement(_weDesign.LoadingNormalNormal, {
  style: _constants.DEFAULT_ICON_STYLE
});

const RefreshExtra = props => {
  const {
    refreshCalendar,
    isLoading,
    tipsNode
  } = props;
  const iconRef = (0, _react.useRef)(null);
  if (!refreshCalendar) return null;
  const loading = isLoading ? _ref2 : /*#__PURE__*/_createElement(RefreshIconWithTips, (0, _extends2.default)({}, props, {
    tipsNode: tipsNode,
    container: iconRef.current
  }));
  return /*#__PURE__*/_createElement(_styled.IconWrapper, {
    ref: iconRef,
    onMouseDown: refreshCalendar,
    onTouchEnd: refreshCalendar,
    onClick: _preventDefaultOnClick.default
  }, loading);
};

var _ref3 = /*#__PURE__*/_createElement("span", null, /*#__PURE__*/_createElement(_weIcon.RefreshNormalNormal, {
  testid: "refresh",
  style: _constants.DEFAULT_ICON_STYLE
}));

var _ref4 = /*#__PURE__*/_createElement("span", null, /*#__PURE__*/_createElement(_weIcon.RefreshNormalNormal, {
  testid: "refresh",
  style: _constants.DEFAULT_ICON_STYLE
}));

const RefreshIconWithTips = props => {
  const {
    isChangeData = false,
    refreshToast,
    refreshTips,
    container,
    tipsNode,
    disableTip
  } = props;
  const [offsetX, setOffsetX] = (0, _react.useState)(0);
  const getContainer = (0, _react.useCallback)(() => container || document.body, [container]);

  if (!isChangeData && !tipsNode || disableTip) {
    return /*#__PURE__*/_createElement(_weDesign.Tooltip, {
      title: refreshToast
    }, _ref3);
  }

  return /*#__PURE__*/_createElement(_weDesign.Dropdown, {
    offsetX: offsetX,
    placement: "bottom",
    visible: true,
    getContainer: getContainer,
    overlay: /*#__PURE__*/_createElement(_RefreshTips.default, {
      offsetX: offsetX,
      refreshTips: refreshTips,
      tipsNode: tipsNode,
      onChangeOffsetX: setOffsetX
    })
  }, _ref4);
};

const ExtraArea = props => {
  const {
    isShanhui,
    isOnlyRefresh,
    jumpToCalendar,
    refreshCalendar,
    viewCalendardetails,
    isLoading,
    isPlaceholder,
    refreshToast,
    isChangeData,
    refreshTips,
    tipsNode,
    createCalendarBtn
  } = props;

  if (isPlaceholder && createCalendarBtn) {
    return isShanhui ? /*#__PURE__*/_createElement(_styled.ExtraButtonWrapper, {
      style: {
        marginTop: 2
      }
    }, createCalendarBtn()) : /*#__PURE__*/_createElement(_styled.ExtraWrapper, null, createCalendarBtn());
  }

  return /*#__PURE__*/_createElement(_styled.ExtraWrapper, null, /*#__PURE__*/_createElement(RefreshExtra, {
    tipsNode: tipsNode,
    refreshCalendar: refreshCalendar,
    isLoading: isLoading,
    isChangeData: isChangeData,
    refreshToast: refreshToast,
    refreshTips: refreshTips,
    disableTip: isShanhui
  }), isOnlyRefresh ? null : renderViewCalendardetails(jumpToCalendar, viewCalendardetails));
};

exports.ExtraArea = ExtraArea;
//# sourceMappingURL=index.js.map