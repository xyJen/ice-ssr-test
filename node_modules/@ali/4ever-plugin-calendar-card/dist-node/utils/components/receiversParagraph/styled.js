"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TotalIconWapper = exports.TotalBodyWapper = exports.ContainerWapper = exports.TipTextWrapper = exports.SquareTextAvatarWrapper = exports.TipContentWrapper = exports.SquareAvatarWrapper = exports.AddReceiverIconWrapper = exports.TipWrapper = exports.TypeName = exports.EllipsisWrapper = exports.AuxiliaryLoadingWrapper = exports.NameWrapper = exports.AvatarWrapper = exports.ReceiverWrapper = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("../../constants");

const ReceiverWrapper = /*#__PURE__*/_styledComponents.default.span(["height:24px;line-height:24px;width:auto;cursor:", ";background-color:", ";border-radius:4px;display:inline-flex;margin-right:", "px;margin-bottom:", "px;max-width:", "px;&:hover{background-color:", ";color:", ";svg{color:", ";}}"], props => props.isReadonly ? 'auto' : 'pointer', props => props.backgroundColor || 'rgba(17, 31, 44, 0.04)', _constants.RECEIVER_WRAPPER_MARGIN, _constants.RECEIVER_MARGIN, _constants.CALENDAR_CARD_MAX_RECEIVER_WIDTH, props => props.backgroundColor || (props.isReadonly ? 'rgba(17,31,44,0.04)' : 'rgba(17,31,44,0.08)'), props => props.textHoverColor || '', props => props.textHoverColor || '');

exports.ReceiverWrapper = ReceiverWrapper;

const AvatarWrapper = /*#__PURE__*/_styledComponents.default.span(["height:", "px;line-height:", "px;width:", "px;display:flex;align-items:center;padding-left:2px;"], _constants.AVATAR_WRAPPER_SZ, _constants.AVATAR_WRAPPER_SZ, _constants.AVATAR_WRAPPER_SZ);

exports.AvatarWrapper = AvatarWrapper;

const NameWrapper = /*#__PURE__*/_styledComponents.default.span(["overflow:hidden;display:inline-flex;flex-grow:1;padding-left:", "px;height:24px;justify-content:center;flex-direction:column;"], _constants.NAME_WRAPPER_PADDING);

exports.NameWrapper = NameWrapper;

const AuxiliaryLoadingWrapper = /*#__PURE__*/_styledComponents.default.img(["left:-999999999px;position:absolute;visibility:hidden;"]);

exports.AuxiliaryLoadingWrapper = AuxiliaryLoadingWrapper;

const EllipsisWrapper = /*#__PURE__*/_styledComponents.default.span(["white-space:nowrap;overflow:hidden;text-overflow:ellipsis;"]);

exports.EllipsisWrapper = EllipsisWrapper;

const TypeName = /*#__PURE__*/_styledComponents.default.span(["color:#9fa7b0;"]);

exports.TypeName = TypeName;

const TipWrapper = /*#__PURE__*/_styledComponents.default.span(["min-width:6px;line-height:24px;height:24px;display:inline-flex;flex:none;margin-right:2px;"]);

exports.TipWrapper = TipWrapper;

const AddReceiverIconWrapper = /*#__PURE__*/_styledComponents.default.span(["width:20px;height:20px;align-items:center;display:inline-flex;.weicon{width:20px;height:20px;color:red;& > svg{width:20px;height:20px;}}"]);

exports.AddReceiverIconWrapper = AddReceiverIconWrapper;

const SquareAvatarWrapper = /*#__PURE__*/_styledComponents.default.span(["border-radius:4px;background-image:url(", ");background-size:cover;background-position:center center;"], props => props.url || '');

exports.SquareAvatarWrapper = SquareAvatarWrapper;

const TipContentWrapper = /*#__PURE__*/_styledComponents.default.span(["width:auto;font-size:12px;text-overflow:ellipsis;white-space:nowrap;"]);

exports.TipContentWrapper = TipContentWrapper;

const SquareTextAvatarWrapper = /*#__PURE__*/_styledComponents.default.span(["width:20px;height:20px;border-radius:4px;overflow:hidden;& > span{width:100%;height:100%;color:#ffffff;display:flex;justify-content:center;align-items:center;font-size:12px;background-color:#0089ff;}"]); // 兼容iOS端显示


exports.SquareTextAvatarWrapper = SquareTextAvatarWrapper;

const TipTextWrapper = /*#__PURE__*/_styledComponents.default.span(["transform:scale(0.9);display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:rgb(132,134,138);"]);

exports.TipTextWrapper = TipTextWrapper;

const ContainerWapper = /*#__PURE__*/_styledComponents.default.div(["display:flex;flex-wrap:wrap;"]);

exports.ContainerWapper = ContainerWapper;

const TotalBodyWapper = /*#__PURE__*/_styledComponents.default.span(["margin:", ";display:flex;"], props => props.margin);

exports.TotalBodyWapper = TotalBodyWapper;

const TotalIconWapper = /*#__PURE__*/_styledComponents.default.span(["display:inline-flex;align-items:center;"]);

exports.TotalIconWapper = TotalIconWapper;
//# sourceMappingURL=styled.js.map