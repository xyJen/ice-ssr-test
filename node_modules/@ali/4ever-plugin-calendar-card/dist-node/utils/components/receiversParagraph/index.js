"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReceiversParagraph = exports.ReceiverComponent = exports.TotalWarpper = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _lodash = require("lodash");

var _weDesign = require("@ali/we-design");

var _everUtils = require("@ali/4ever-utils");

var _paragraphFactory = _interopRequireDefault(require("../paragraphFactory"));

var _preventDefaultOnClick = _interopRequireDefault(require("../../uitls/preventDefaultOnClick"));

var _loadingWarpper = require("../loadingWarpper");

var _type = require("../../type");

var _locale = require("../../locale");

var _styled = require("./styled");

var _constants = require("../../constants");

var _getTextWithoutEmoji = _interopRequireDefault(require("../../uitls/getTextWithoutEmoji"));

const _createElement = /*#__PURE__*/_react.default.createElement;
const SQUAREAVATAR_SIZE_STYLE = {
  width: '20px',
  height: '20px'
}; // 检查是否有中文

const HAS_CHINESE_REG = RegExp('[\\u4E00-\\u9FFF]+', 'g');

var _ref = /*#__PURE__*/_createElement(_styled.TotalIconWapper, null, /*#__PURE__*/_createElement(_weDesign.ArrowRightNormal, null));

const TotalWarpper = props => {
  const {
    text,
    isReadonly,
    jumpToCalendar,
    mode
  } = props;
  const isShanhui = mode === _type.CalendarType.SHANHUI;
  return /*#__PURE__*/_createElement(_styled.ReceiverWrapper, {
    isReadonly: isReadonly,
    onMouseDown: jumpToCalendar,
    onClick: _preventDefaultOnClick.default,
    backgroundColor: isShanhui ? 'transparent' : '',
    textHoverColor: isShanhui ? 'rgba(49, 126, 208, 1)' : ''
  }, /*#__PURE__*/_createElement(_styled.TotalBodyWapper, {
    margin: isShanhui ? '0' : ''
  }, /*#__PURE__*/_createElement(_styled.NameWrapper, null, text), _ref));
};

exports.TotalWarpper = TotalWarpper;

const SquareAvatarImage = props => {
  const {
    url
  } = props;

  const [status, setStatus] = _react.default.useState('loading');

  const handleLoad = (0, _react.useCallback)(() => {
    setStatus('loaded');
  }, []);
  return /*#__PURE__*/_createElement(_react.default.Fragment, null, /*#__PURE__*/_createElement(_styled.SquareAvatarWrapper, (0, _extends2.default)({
    style: SQUAREAVATAR_SIZE_STYLE
  }, props)), status === 'loading' ? /*#__PURE__*/_createElement(_styled.AuxiliaryLoadingWrapper, {
    src: url,
    "data-type": "avatar",
    "data-status": status,
    onLoad: handleLoad,
    onError: handleLoad
  }) : null);
};

const SquareAvatar = props => {
  const {
    url,
    title
  } = props;

  const [urlEnable, setUrlEnable] = _react.default.useState(!!url);

  (0, _react.useEffect)(() => {
    if (url) {
      (0, _everUtils.loadImg)(url).then(() => {
        setUrlEnable(true);
      }).catch(() => {
        setUrlEnable(false);
      });
    }
  }, [url]);

  if (url && urlEnable) {
    return /*#__PURE__*/_createElement(SquareAvatarImage, {
      url: url,
      title: title
    });
  }

  const titles = Array.from(props.title || '');
  return /*#__PURE__*/_createElement(_styled.SquareTextAvatarWrapper, null, /*#__PURE__*/_createElement("span", null, titles[titles.length - 1]));
};

var _ref2 = /*#__PURE__*/_createElement(_styled.AddReceiverIconWrapper, null, /*#__PURE__*/_createElement(_weDesign.AddHeadNormal, null));

const ReceiverComponent = /*#__PURE__*/_react.default.memo(props => {
  const {
    isReadonly,
    isReceiverPlaceholder,
    locale,
    type,
    name = '',
    uid,
    avatarMediaId,
    organizer = [],
    openProfile,
    mode
  } = props;
  let typeName = (locale || {})[_type.ReceiverTypeEnum[type]?.toString()] || ''; // TODO：解决国际化tips宽度不一致问题，tips的宽度按照中文的字符数来计算

  let chineseTypeName = (_locale.zhLocale || {})[_type.ReceiverTypeEnum[type]?.toString()] || '';

  if (organizer.some(org => org.uid === uid) && locale) {
    typeName = locale.organizer;
    chineseTypeName = _locale.zhLocale.organizer;
  } // 防止双击重复弹出profile问题


  const openTargetProfile = (0, _react.useCallback)((0, _lodash.throttle)(() => {
    if (!openProfile) return;
    openProfile(uid);
  }, 350), [uid, openProfile]);
  const onMouseDown = (0, _react.useCallback)(event => {
    event.preventDefault();
    event.stopPropagation();
    openTargetProfile();
  }, [openTargetProfile]);
  const withoutEmoji = (0, _getTextWithoutEmoji.default)(name); // 如果该用户没有头像信息，这里是移除姓取名 与端上保持一致

  const showName = withoutEmoji.substr(1) || withoutEmoji; // 中文不限制宽度，非中文限制 tip 宽度

  const tipWidth = !typeName || HAS_CHINESE_REG.test(typeName) ? 'auto' : `${chineseTypeName.length * 1.1}em`;
  const avatarNode = isReceiverPlaceholder ? _ref2 : /*#__PURE__*/_createElement(SquareAvatar, {
    url: avatarMediaId,
    title: showName
  });

  if (mode === _type.CalendarType.SHANHUI) {
    return /*#__PURE__*/_createElement(_styled.ReceiverWrapper, {
      "data-testid": "calendar-receiver",
      isReadonly: isReadonly,
      onMouseDown: onMouseDown,
      onClick: _preventDefaultOnClick.default,
      backgroundColor: "transparent",
      textHoverColor: "rgba(49, 126, 208, 1)",
      style: {
        marginRight: 6
      }
    }, !isReceiverPlaceholder && /*#__PURE__*/_createElement(_styled.AvatarWrapper, null, avatarNode), /*#__PURE__*/_createElement(_styled.NameWrapper, {
      style: {
        paddingLeft: isReceiverPlaceholder ? 0 : 4
      }
    }, /*#__PURE__*/_createElement(_styled.EllipsisWrapper, null, name, !isReceiverPlaceholder && typeName ? /*#__PURE__*/_createElement(_styled.TypeName, null, "(", typeName, ")") : null)));
  }

  return /*#__PURE__*/_createElement(_styled.ReceiverWrapper, {
    "data-testid": "calendar-receiver",
    isReadonly: isReadonly,
    onMouseDown: onMouseDown,
    onClick: _preventDefaultOnClick.default
  }, /*#__PURE__*/_createElement(_styled.AvatarWrapper, null, avatarNode), /*#__PURE__*/_createElement(_styled.NameWrapper, null, /*#__PURE__*/_createElement(_styled.EllipsisWrapper, null, name)), /*#__PURE__*/_createElement(_styled.TipWrapper, null, typeName ? /*#__PURE__*/_createElement(_styled.TipContentWrapper, null, /*#__PURE__*/_createElement(_styled.TipTextWrapper, {
    style: {
      width: tipWidth
    }
  }, typeName)) : null));
});

exports.ReceiverComponent = ReceiverComponent;

var _ref3 = /*#__PURE__*/_createElement(_loadingWarpper.LoadingWrapper, {
  widthRange: "98%"
});

const ReceiversParagraph = /*#__PURE__*/_react.default.memo(props => {
  const {
    metadata,
    openProfile,
    locale,
    isLoading,
    isReadonly,
    jumpToCalendar
  } = props;
  const {
    topReceivers = [],
    organizer,
    totalCount,
    mode
  } = metadata || {};
  const Paragraph = (0, _paragraphFactory.default)( /*#__PURE__*/_createElement(_weDesign.MemberNormalNormal, {
    style: { ..._constants.DEFAULT_ICON_STYLE,
      marginTop: '3px'
    }
  }), {
    marginBottom: `-${_constants.RECEIVER_MARGIN}px`
  });
  const totleCountText = (locale?.receiverCount || '').replace('{count}', String(totalCount));
  const totleNode = totalCount && totalCount > topReceivers.length ? /*#__PURE__*/_createElement(TotalWarpper, {
    text: totleCountText,
    isReadonly: isReadonly,
    jumpToCalendar: jumpToCalendar,
    mode: mode
  }) : null;

  if (isLoading && topReceivers.length === 0) {
    return /*#__PURE__*/_createElement(Paragraph, null, _ref3);
  }

  return /*#__PURE__*/_createElement(Paragraph, null, /*#__PURE__*/_createElement(_styled.ContainerWapper, null, topReceivers.map(rec => {
    return /*#__PURE__*/_createElement(ReceiverComponent, (0, _extends2.default)({
      key: rec.uid || rec.name
    }, rec, {
      isReadonly: isReadonly,
      openProfile: openProfile,
      locale: locale,
      organizer: organizer,
      mode: mode
    }));
  }), totleNode));
});

exports.ReceiversParagraph = ReceiversParagraph;
//# sourceMappingURL=index.js.map