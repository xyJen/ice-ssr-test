{"version":3,"sources":["../../../../../src/utils/components/receiversParagraph/index.tsx"],"names":["SQUAREAVATAR_SIZE_STYLE","width","height","HAS_CHINESE_REG","RegExp","TotalWarpper","props","text","isReadonly","jumpToCalendar","mode","isShanhui","CalendarType","SHANHUI","preventDefaultOnClick","SquareAvatarImage","url","status","setStatus","React","useState","handleLoad","SquareAvatar","title","urlEnable","setUrlEnable","then","catch","titles","Array","from","length","ReceiverComponent","memo","isReceiverPlaceholder","locale","type","name","uid","avatarMediaId","organizer","openProfile","typeName","ReceiverTypeEnum","toString","chineseTypeName","zhLocale","some","org","openTargetProfile","onMouseDown","event","preventDefault","stopPropagation","withoutEmoji","showName","substr","tipWidth","test","avatarNode","marginRight","paddingLeft","ReceiversParagraph","metadata","isLoading","topReceivers","totalCount","Paragraph","DEFAULT_ICON_STYLE","marginTop","marginBottom","RECEIVER_MARGIN","totleCountText","receiverCount","replace","String","totleNode","map","rec"],"mappings":"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","sourcesContent":["import React, { useCallback, CSSProperties, useEffect } from 'react';\nimport { throttle } from 'lodash-es';\nimport { AddHeadNormal, ArrowRightNormal, MemberNormalNormal } from '@ali/we-design';\nimport { loadImg } from '@ali/4ever-utils';\nimport paragraphFactory, { BaseParagraphProps } from '../paragraphFactory';\nimport preventDefaultOnClick from '../../uitls/preventDefaultOnClick';\nimport { LoadingWrapper } from '../loadingWarpper';\nimport { CommonMouseEvent, ILocaleProps, IOrganizerModel, ReceiverTypeEnum, CalendarType } from '../../type';\nimport { zhLocale } from '../../locale';\nimport {\n  AddReceiverIconWrapper,\n  AuxiliaryLoadingWrapper,\n  AvatarWrapper,\n  ContainerWapper,\n  EllipsisWrapper,\n  NameWrapper,\n  ReceiverWrapper,\n  SquareAvatarWrapper,\n  SquareTextAvatarWrapper,\n  TipContentWrapper,\n  TipTextWrapper,\n  TipWrapper,\n  TotalBodyWapper,\n  TotalIconWapper,\n  TypeName,\n} from './styled';\nimport { DEFAULT_ICON_STYLE, RECEIVER_MARGIN } from '../../constants';\nimport getTextWithoutEmoji from '../../uitls/getTextWithoutEmoji';\n\nconst SQUAREAVATAR_SIZE_STYLE: CSSProperties = { width: '20px', height: '20px' };\n\n// 检查是否有中文\nconst HAS_CHINESE_REG = RegExp('[\\\\u4E00-\\\\u9FFF]+', 'g');\n\ninterface IProps extends BaseParagraphProps {\n  locale?: ILocaleProps;\n  openProfile?: (uid: number) => void;\n  jumpToCalendar?: CommonMouseEvent;\n  isLoading?: boolean;\n  isReadonly?: boolean;\n}\n\ninterface ReceiverProps {\n  uid: number;\n  name?: string;\n  avatarMediaId?: string;// 头像需要经过处理\n  isReceiverPlaceholder?: boolean;\n  type: ReceiverTypeEnum;//  ####0:创建者，1:已接收；当前mock全部是已接收\n  organizer?: IOrganizerModel[];\n  locale?: ILocaleProps;\n  openProfile?: (uid: number) => void;\n  isReadonly?: boolean;\n  mode?: CalendarType;\n}\n\nexport const TotalWarpper: React.FC<{\n  text: string;\n  isReadonly?: boolean;\n  jumpToCalendar?: CommonMouseEvent;\n  mode?: CalendarType;\n}> = (props) => {\n  const { text, isReadonly, jumpToCalendar, mode } = props;\n  const isShanhui = mode === CalendarType.SHANHUI;\n  return (\n    <ReceiverWrapper\n      isReadonly={isReadonly}\n      onMouseDown={jumpToCalendar}\n      onClick={preventDefaultOnClick}\n      backgroundColor={isShanhui ? 'transparent' : ''}\n      textHoverColor={isShanhui ? 'rgba(49, 126, 208, 1)' : ''}\n    >\n      <TotalBodyWapper margin={isShanhui ? '0' : ''}>\n        <NameWrapper>{text}</NameWrapper>\n        <TotalIconWapper>\n          <ArrowRightNormal />\n        </TotalIconWapper>\n      </TotalBodyWapper>\n    </ReceiverWrapper>\n  );\n};\n\nconst SquareAvatarImage: React.FC<{ url: string; title?: string }> = (props) => {\n  const { url } = props;\n  const [status, setStatus] = React.useState<'loading' | 'loaded'>('loading');\n\n  const handleLoad = useCallback(() => {\n    setStatus('loaded');\n  }, []);\n\n  return (\n    <React.Fragment>\n      <SquareAvatarWrapper style={SQUAREAVATAR_SIZE_STYLE} {...props} />\n      {status === 'loading' ? <AuxiliaryLoadingWrapper\n        src={url}\n        data-type=\"avatar\"\n        data-status={status}\n        onLoad={handleLoad}\n        onError={handleLoad}\n      /> : null}\n    </React.Fragment>\n  );\n};\n\nconst SquareAvatar: React.FC<{ url?: string; title?: string }> = (props) => {\n  const { url, title } = props;\n  const [urlEnable, setUrlEnable] = React.useState(!!url);\n  useEffect(() => {\n    if (url) {\n      loadImg(url).then(() => {\n        setUrlEnable(true);\n      }).catch(() => {\n        setUrlEnable(false);\n      });\n    }\n  }, [url]);\n  if (url && urlEnable) {\n    return (<SquareAvatarImage url={url} title={title} />);\n  }\n  const titles = Array.from(props.title || '');\n  return (\n    <SquareTextAvatarWrapper>\n      <span>{titles[titles.length - 1]}</span>\n    </SquareTextAvatarWrapper>\n  );\n};\n\nexport const ReceiverComponent: React.FC<ReceiverProps> = React.memo((props) => {\n  const {\n    isReadonly,\n    isReceiverPlaceholder,\n    locale,\n    type,\n    name = '',\n    uid,\n    avatarMediaId,\n    organizer = [],\n    openProfile,\n    mode,\n  } = props;\n  let typeName = (locale || {})[ReceiverTypeEnum[type]?.toString()] || '';\n  // TODO：解决国际化tips宽度不一致问题，tips的宽度按照中文的字符数来计算\n  let chineseTypeName = (zhLocale || {})[ReceiverTypeEnum[type]?.toString()] || '';\n  if (organizer.some((org) => org.uid === uid) && locale) {\n    typeName = locale.organizer;\n    chineseTypeName = zhLocale.organizer;\n  }\n  // 防止双击重复弹出profile问题\n  const openTargetProfile = useCallback(throttle(() => {\n    if (!openProfile) return;\n    openProfile(uid);\n  }, 350), [uid, openProfile]);\n\n  const onMouseDown = useCallback((event: React.MouseEvent<Element>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    openTargetProfile();\n  }, [openTargetProfile]);\n\n  const withoutEmoji = getTextWithoutEmoji(name);\n  // 如果该用户没有头像信息，这里是移除姓取名 与端上保持一致\n  const showName = withoutEmoji.substr(1) || withoutEmoji;\n  // 中文不限制宽度，非中文限制 tip 宽度\n  const tipWidth = !typeName || HAS_CHINESE_REG.test(typeName) ? 'auto' : `${chineseTypeName.length * 1.1}em`;\n  const avatarNode = isReceiverPlaceholder ?\n    (<AddReceiverIconWrapper><AddHeadNormal /></AddReceiverIconWrapper>)\n    : (<SquareAvatar url={avatarMediaId} title={showName} />);\n\n  if (mode === CalendarType.SHANHUI) {\n    return (\n      <ReceiverWrapper\n        data-testid=\"calendar-receiver\"\n        isReadonly={isReadonly}\n        onMouseDown={onMouseDown}\n        onClick={preventDefaultOnClick}\n        backgroundColor=\"transparent\"\n        textHoverColor=\"rgba(49, 126, 208, 1)\"\n        style={{ marginRight: 6 }}\n      >\n        {!isReceiverPlaceholder &&\n          <AvatarWrapper>\n            {avatarNode}\n          </AvatarWrapper>}\n        <NameWrapper style={{ paddingLeft: isReceiverPlaceholder ? 0 : 4 }}>\n          <EllipsisWrapper>{name}{(!isReceiverPlaceholder && typeName) ? <TypeName>({typeName})</TypeName> : null}</EllipsisWrapper>\n        </NameWrapper>\n      </ReceiverWrapper>\n    );\n  }\n\n  return (\n    <ReceiverWrapper\n      data-testid=\"calendar-receiver\"\n      isReadonly={isReadonly}\n      onMouseDown={onMouseDown}\n      onClick={preventDefaultOnClick}\n    >\n      <AvatarWrapper>\n        {avatarNode}\n      </AvatarWrapper>\n      <NameWrapper>\n        <EllipsisWrapper>{name}</EllipsisWrapper>\n      </NameWrapper>\n      <TipWrapper>\n        {typeName ? (\n          <TipContentWrapper>\n            <TipTextWrapper style={{ width: tipWidth }}>{typeName}</TipTextWrapper>\n          </TipContentWrapper>\n        ) : null}\n      </TipWrapper>\n    </ReceiverWrapper>\n  );\n});\n\nexport const ReceiversParagraph: React.FC<IProps> = React.memo((props) => {\n  const { metadata, openProfile, locale, isLoading, isReadonly, jumpToCalendar } = props;\n  const { topReceivers = [], organizer, totalCount, mode } = metadata || {};\n  const Paragraph = paragraphFactory(\n    <MemberNormalNormal style={{ ...DEFAULT_ICON_STYLE, marginTop: '3px' }} />,\n    { marginBottom: `-${RECEIVER_MARGIN}px` },\n  );\n  const totleCountText = (locale?.receiverCount || '').replace('{count}', String(totalCount));\n  const totleNode = totalCount && totalCount > topReceivers.length ?\n    (<TotalWarpper text={totleCountText} isReadonly={isReadonly} jumpToCalendar={jumpToCalendar} mode={mode} />)\n    : null;\n  if (isLoading && topReceivers.length === 0) {\n    return (\n      <Paragraph>\n        <LoadingWrapper widthRange=\"98%\" />\n      </Paragraph>\n    );\n  }\n  return (\n    <Paragraph>\n      <ContainerWapper>\n        {topReceivers.map((rec) => {\n          return (\n            <ReceiverComponent\n              key={rec.uid || rec.name}\n              {...rec}\n              isReadonly={isReadonly}\n              openProfile={openProfile}\n              locale={locale}\n              organizer={organizer}\n              mode={mode}\n            />\n          );\n        })}\n        {totleNode}\n      </ContainerWapper>\n    </Paragraph>\n  );\n});\n"],"file":"index.js"}