interface CalendarCardInjectionType {
    isFirstLoaded?: boolean;
    isLoading?: boolean;
    injectionMetadata?: CalendarCardMetadataType;
}
export interface CalendarCardDataType extends CalendarCardInjectionType {
    cardType: string;
    height?: number;
    spacing?: {
        before?: number;
        after?: number;
    };
    metadata: CalendarCardMetadataType;
    mode?: CalendarType;
}
export declare enum ReceiverTypeEnum {
    noresponse = 1,
    refused = 10
}
export declare enum AttachmentTypeEnum {
    text = 1,
    audio = 2,
    image = 3,
    file = 4,
    link = 5,
    redenvelop = 6,
    dingfile = 7
}
export declare enum CalendarType {
    SHANHUI = "shanhui"
}
export interface IReceiver {
    uid: number;
    name?: string;
    avatarMediaId?: string;
    isReceiverPlaceholder?: boolean;
    type: ReceiverTypeEnum;
}
export interface IOrganizerModel {
    uid: number;
    name?: string;
    avatarMediaId?: string;
    type: ReceiverTypeEnum;
}
export interface CalendarCardMetadataType {
    isPlaceholder?: boolean;
    isInitialized?: boolean;
    calendarId: string;
    time?: string;
    subject?: string;
    comment?: string;
    redirectUrl?: string;
    organizer?: IOrganizerModel[];
    topReceivers?: IReceiver[];
    totalCount?: number;
    attachments?: Array<{
        type: AttachmentTypeEnum;
        fileName?: string;
        authMediaId?: string;
    }>;
    place?: string;
    mode?: CalendarType;
}
export declare type CommonMouseEvent = (event: any) => void;
export interface ILocaleProps {
    receiverCount?: string;
    refreshTips?: string;
    noresponse: string;
    received: string;
    refused: string;
    pending: string;
    organizer: string;
}
export {};
