import { TextMeasure } from '@ali/4ever-plugin-list';
import { ReceiverTypeEnum } from "../type";
import { AVATAR_WRAPPER_SZ, NAME_WRAPPER_PADDING, RECEIVER_WRAPPER_MARGIN, MORE_INDO_EXTRA, RECEIVER_MAX_WIDTH } from "../constants";
var TOTAL_EXTRA = AVATAR_WRAPPER_SZ + NAME_WRAPPER_PADDING + RECEIVER_WRAPPER_MARGIN + 2;
var AUTO_FONT = 'auto';
var FOURTEEN_SZ = '14px';
var TWELVE_SZ = '12px';
/**
 * @param {IOrganizerModel} receiver 接收者信息
 * @param {*} locale 语言
 * @return {*}  {number} 单个接收者 UI 的实际渲染宽度
 */

var getReceiverWidth = function getReceiverWidth(receiver, locale) {
  var _ReceiverTypeEnum$typ;

  var type = receiver.type,
      _receiver$name = receiver.name,
      name = _receiver$name === void 0 ? '' : _receiver$name;
  var typeName = (locale || {})[(_ReceiverTypeEnum$typ = ReceiverTypeEnum[type]) == null ? void 0 : _ReceiverTypeEnum$typ.toString()] || '';
  var nameWidth = TextMeasure.measureTextWidth(name, AUTO_FONT, FOURTEEN_SZ);
  var typeWidth = TextMeasure.measureTextWidth(typeName, AUTO_FONT, TWELVE_SZ);
  return TOTAL_EXTRA + nameWidth + typeWidth;
};
/**
 * @param {IOrganizerModel[]} receivers 所有接收者信息
 * @param {*} locale 语言(需要根据语言测量实际文字宽度)
 * @param {string} totalCountText 参会人数文字
 * @param {number} singleLineHeight 一行接收者的 UI 高度
 * @param {number} innerWidth 日程卡片容器的宽度
 * @return {*}  {number} 返回渲染出来接受者信息 UI 的实际高度
 */


var getReceiversHeight = function getReceiversHeight(_ref) {
  var receivers = _ref.receivers,
      locale = _ref.locale,
      totalCountText = _ref.totalCountText,
      singleLineHeight = _ref.singleLineHeight,
      innerWidth = _ref.innerWidth;
  var widths = receivers.map(function (receiver) {
    var w = getReceiverWidth(receiver, locale);
    return w > RECEIVER_MAX_WIDTH ? RECEIVER_MAX_WIDTH : w;
  });
  var actualWidth = 0;
  var remain = innerWidth;
  widths.forEach(function (w) {
    if (w) {
      if (remain - w > 0) {
        remain -= w;
        actualWidth += w;
      } else {
        actualWidth += remain + w;
        remain = innerWidth - w;
      }
    }
  });
  var moreInfoWidth = TextMeasure.measureTextWidth(totalCountText, AUTO_FONT, FOURTEEN_SZ) + MORE_INDO_EXTRA;
  return Math.ceil((actualWidth + moreInfoWidth) / innerWidth) * singleLineHeight;
};

export { getReceiverWidth, getReceiversHeight };
//# sourceMappingURL=getReceiverWidth.js.map