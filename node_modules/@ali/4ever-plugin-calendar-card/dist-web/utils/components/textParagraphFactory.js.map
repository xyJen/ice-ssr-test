{"version":3,"sources":["../../../../src/utils/components/textParagraphFactory.tsx"],"names":["React","styled","paragraphFactory","TextWrapper","div","textParagraphFactory","icon","style","BasicParagraph","props","children"],"mappings":"AAAA,OAAOA,KAAP,MAAmE,OAAnE;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP;AAEA,IAAMC,WAAW,gBAAGF,MAAM,CAACG,GAAV,uBAAjB;AAIA,eAAe,SAASC,oBAAT,CAA8BC,IAA9B,EAAgDC,KAAhD,EAAuE;AACpF,MAAMC,cAAc,GAAGN,gBAAgB,CAACI,IAAD,EAAOC,KAAP,CAAvC;AACA,SAAO,UAACE,KAAD,EAAmC;AAAA,QAChCC,QADgC,GACnBD,KADmB,CAChCC,QADgC;AAExC,QAAI,CAACA,QAAL,EAAe,OAAO,IAAP;AACf,wBACE,eAAC,WAAD,qBACE,eAAC,cAAD,QACGA,QADH,CADF,CADF;AAOD,GAVD;AAWD","sourcesContent":["import React, { ReactNode, CSSProperties, PropsWithChildren } from 'react';\nimport styled from 'styled-components';\nimport paragraphFactory from './paragraphFactory';\n\nconst TextWrapper = styled.div`\n  line-height: 20px;\n`;\n\nexport default function textParagraphFactory(icon?: ReactNode, style?: CSSProperties) {\n  const BasicParagraph = paragraphFactory(icon, style);\n  return (props: PropsWithChildren<any>) => {\n    const { children } = props;\n    if (!children) return null;\n    return (\n      <TextWrapper>\n        <BasicParagraph>\n          {children}\n        </BasicParagraph>\n      </TextWrapper>\n    );\n  };\n}"],"file":"textParagraphFactory.js"}