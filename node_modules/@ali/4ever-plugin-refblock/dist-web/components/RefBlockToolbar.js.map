{"version":3,"sources":["../../../src/components/RefBlockToolbar.tsx"],"names":["React","Transition","useZoomContainer","debounce","ToolbarWrapper","Toolbar","RefBlockToolbarHost","RefBlockToolbarCopy","ToolbarPortal","transitionStyles","entering","opacity","entered","exiting","exited","RefBlockToolbar","props","visible","locale","node","readOnly","status","isHost","duration","canCopy","anchor","detach","getDocKey","getReferenceList","copy","onToolbarShow","onToolbarHide","getURL","useState","list","setList","loading","setLoading","coords","setCoords","wrapperRef","useRef","container","document","body","fetchList","useMemo","leading","data","docKey","uuid","refblockUUID","currentDocKey","copyFrom","find","item","useEffect","then","e","console","error","filteredList","filter","hostDocKey","sort","a","b","handleToolbarEnter","useCallback","containerRect","getBoundingClientRect","left","current","width","top","appear","enter","exit","state","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { useZoomContainer } from '@ali/4ever-cangjie';\nimport { debounce } from 'lodash-es';\nimport RefBlock, { RefBlockStatus } from '../mo/models';\nimport type { RefBlockLocale, ReferenceItem } from '../utils/types';\nimport { ToolbarWrapper, Toolbar } from './styled';\nimport RefBlockToolbarHost from './RefBlockToolbarHost';\nimport RefBlockToolbarCopy from './RefBlockToolbarCopy';\nimport ToolbarPortal from './ToolbarPortal';\n\ninterface RefBlockToolbarProps {\n  /** 是否可见 */\n  visible: boolean;\n  /** 国际化文案 */\n  locale: RefBlockLocale;\n  /** 引用块节点*/\n  node: RefBlock;\n  /** 只读模式 */\n  readOnly: boolean;\n  /** 状态 */\n  status: RefBlockStatus;\n  /** 是否是主块 */\n  isHost: boolean;\n  /** 工具栏动画持续时间 */\n  duration: number;\n  /** 工具栏定位锚点 */\n  anchor: {\n    left: number;\n    top: number;\n  };\n  /** 是否允许复制 */\n  canCopy: boolean;\n  /** 获得引用列表 */\n  getReferenceList: (id: string) => Promise<ReferenceItem[]>;\n  /** 点击取消引用 */\n  detach: (docKey: string, uuid: string) => Promise<void>;\n  /** 获得当前文档 key */\n  getDocKey: () => string;\n  /** 复制当前块引用 */\n  copy: () => void;\n  /** 展示工具栏 */\n  onToolbarShow: () => void;\n  /** 隐藏工具栏 */\n  onToolbarHide: () => void;\n  /** 获得文档跳转地址 */\n  getURL: (url: string, id: string) => string;\n}\n\nconst transitionStyles = {\n  entering: { opacity: 0 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n  exited: { opacity: 0 },\n};\n\nconst RefBlockToolbar: React.FC<RefBlockToolbarProps> = (props) => {\n  const {\n    visible,\n    locale,\n    node,\n    readOnly,\n    status,\n    isHost,\n    duration,\n    canCopy,\n    anchor,\n    detach,\n    getDocKey,\n    getReferenceList,\n    copy,\n    onToolbarShow,\n    onToolbarHide,\n    getURL,\n  } = props;\n  const [list, setList] = React.useState<ReferenceItem[]>([]);\n  const [loading, setLoading] = React.useState(false);\n  const [coords, setCoords] = React.useState(anchor);\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const container = useZoomContainer() || document.body;\n\n  const fetchList = React.useMemo(\n    () => debounce(getReferenceList, 1000, { leading: true }),\n    [getReferenceList],\n  );\n\n  const { docKey, refblockUUID: uuid } = node.data;\n  const currentDocKey = getDocKey();\n  const copyFrom = list.find((item) => item.uuid === docKey);\n\n  React.useEffect(() => {\n    // 展开的时候获得引用列表\n    if (visible) {\n      setLoading(true);\n      fetchList(docKey!)\n        ?.then(setList)\n        .catch((e) => {\n          console.error('fecth syncdocs failed', e);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [visible, docKey]);\n\n  // 过滤当前文档，并按照宿主聚合\n  const filteredList = React.useMemo(() => {\n    return isHost\n      ? list\n          .filter((item) => item.hostDocKey !== currentDocKey)\n          .sort((a, b) => {\n            if (a.hostDocKey === b.hostDocKey) {\n              return 0;\n            }\n            return a.hostDocKey < b.hostDocKey ? -1 : 1;\n          })\n      : list;\n  }, [list, currentDocKey, isHost]);\n\n  const handleToolbarEnter = React.useCallback(() => {\n    const containerRect = container.getBoundingClientRect();\n    setCoords({\n      left:\n        anchor.left -\n        containerRect.left -\n        wrapperRef.current!.getBoundingClientRect().width,\n      top: anchor.top - containerRect.top,\n    });\n  }, [anchor, container]);\n\n  return (\n    <Transition\n      in={visible}\n      timeout={{ appear: 0, enter: duration, exit: duration }}\n      onEnter={handleToolbarEnter}\n      unmountOnExit\n    >\n      {(state) => (\n        <ToolbarPortal container={container}>\n          <ToolbarWrapper\n            data-testid=\"refblock-toolbar-wrapper\"\n            ref={wrapperRef}\n            onMouseEnter={onToolbarShow}\n            onMouseLeave={onToolbarHide}\n            style={{ ...transitionStyles[state], ...coords }}\n            duration={duration}\n          >\n            <Toolbar>\n              {isHost ? (\n                <RefBlockToolbarHost\n                  list={filteredList}\n                  locale={locale}\n                  loading={loading}\n                  status={status}\n                  wrapperVisible={visible}\n                  canCopy={canCopy}\n                  copy={copy}\n                  getURL={getURL}\n                />\n              ) : (\n                <RefBlockToolbarCopy\n                  from={copyFrom}\n                  locale={locale}\n                  status={status}\n                  docKey={docKey!}\n                  uuid={uuid}\n                  readOnly={readOnly}\n                  canCopy={canCopy}\n                  detach={detach}\n                  copy={copy}\n                  getURL={getURL}\n                />\n              )}\n            </Toolbar>\n          </ToolbarWrapper>\n        </ToolbarPortal>\n      )}\n    </Transition>\n  );\n};\n\nexport default React.memo(RefBlockToolbar);\n"],"file":"RefBlockToolbar.js"}