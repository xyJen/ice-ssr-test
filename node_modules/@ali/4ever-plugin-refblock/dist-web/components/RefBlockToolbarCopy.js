import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { RefBlockStatus } from "../mo/models";
import { DeletelinkNormal } from '@ali/we-icon';
import { IconButton } from '@ali/we-toolbar';
import ListItemIcon from "./ListItemIcon";
import { ToolbarColumn, Divider, CopyFrom, CopyFromPlaceholder } from "./styled";
import CopyButton from "./CopyButton";

var _ref = /*#__PURE__*/_createElement(ListItemIcon, null);

var _ref2 = /*#__PURE__*/_createElement(CopyFromPlaceholder, {
  "data-testid": "refblock-copy-from-placeholder"
});

var _ref3 = /*#__PURE__*/_createElement(Divider, null);

var _ref4 = /*#__PURE__*/_createElement(DeletelinkNormal, null);

var RefBlockToolbarCopy = function RefBlockToolbarCopy(props) {
  var locale = props.locale,
      from = props.from,
      docKey = props.docKey,
      uuid = props.uuid,
      readOnly = props.readOnly,
      status = props.status,
      canCopy = props.canCopy,
      detach = props.detach,
      copy = props.copy,
      getURL = props.getURL;
  var canDetach = !readOnly && uuid && status === RefBlockStatus.normal;
  var handleDetachClick = React.useCallback(function () {
    detach(docKey, uuid);
  }, [detach, docKey, uuid]);
  return /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(ToolbarColumn, {
    style: {
      paddingLeft: 10,
      whiteSpace: 'nowrap'
    },
    "data-testid": "refblock-toolbar-copy"
  }, locale.referFromTitle), /*#__PURE__*/_createElement(ToolbarColumn, {
    highlightOnHover: !!from,
    style: {
      padding: '0px 4px'
    }
  }, _ref, from ? /*#__PURE__*/_createElement(CopyFrom, null, /*#__PURE__*/_createElement("a", {
    className: "synclist-link",
    "data-testid": "refblock-link-to",
    href: getURL(from.url, docKey),
    target: "_blank",
    rel: "noreferrer"
  }, from.name)) : _ref2), _ref3, canCopy && /*#__PURE__*/_createElement(ToolbarColumn, null, /*#__PURE__*/_createElement(CopyButton, {
    onCopy: copy,
    title: locale.copy
  })), canDetach && /*#__PURE__*/_createElement(ToolbarColumn, null, /*#__PURE__*/_createElement(IconButton, {
    testid: "refblock-detach",
    tooltip: locale.detach,
    icon: _ref4,
    onClick: handleDetachClick
  })));
};

export default RefBlockToolbarCopy;
//# sourceMappingURL=RefBlockToolbarCopy.js.map