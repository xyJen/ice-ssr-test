{"version":3,"sources":["../../../src/utils/logic.ts"],"names":["Element","RefBlock","RefBlockStatus","isSelectionInRefBlock","value","getClosestRefBlockInSelection","container","document","selection","isRefBlock","node","sort","start","end","startRefBlock","getClosest","key","endRefBlock","isStatus","status","refblock","injections","find","data","isReadOnly","readOnly","isInReadOnlyRefBlock","isInRefBlock","isSyncHetuNode","isElement","metadata","sync"],"mappings":"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","sourcesContent":["import { Value, Node, Element } from '@ali/4ever-cangjie';\nimport RefBlock, { RefBlockStatus } from '../mo/models';\n\n/**\n * 当前选区是否位于引用块内\n * @param controller\n * @returns\n */\nexport function isSelectionInRefBlock(value: Value) {\n  return getClosestRefBlockInSelection(value) !== null;\n}\n\n/**\n * 获得距离选区最近的引用块\n * @param value\n * @returns\n */\nexport function getClosestRefBlockInSelection(\n  value: Value,\n  container?: Element,\n) {\n  const { document, selection } = value;\n  if (!selection) {\n    return null;\n  }\n  function isRefBlock(node: Node) {\n    return RefBlock.isRefBlock(node) && node !== container;\n  }\n\n  const { start, end } = selection.sort(document);\n  const startRefBlock = document.getClosest(start.key, isRefBlock);\n  if (startRefBlock) {\n    return startRefBlock;\n  }\n\n  const endRefBlock = document.getClosest(end.key, isRefBlock);\n  if (endRefBlock) {\n    return endRefBlock;\n  }\n\n  return null;\n}\n\nconst isStatus = (status: RefBlockStatus) => {\n  return (value: Value, refblock: RefBlock) => {\n    const { injections } = value;\n\n    return !!injections.find(\n      ({ key, data }) => key === refblock.key && data?.status === status,\n    );\n  };\n};\n\n/**\n * 判断 refblock 是否只读\n * @param controller\n * @param refblock\n */\nexport const isReadOnly = isStatus(RefBlockStatus.readOnly);\n\n/**\n * 判断节点是否存在于只读的引用块\n * @param controller\n * @param node\n */\nexport function isInReadOnlyRefBlock(value: Value, node: Node) {\n  const { document } = value;\n  const refblock = document.getClosest(node.key, (node) =>\n    RefBlock.isRefBlock(node),\n  );\n  if (!refblock) {\n    return false;\n  }\n\n  return isReadOnly(value, refblock as RefBlock);\n}\n\n/**\n * 判断节点是否在引用块中\n * @param value\n * @param node\n * @returns\n */\nexport function isInRefBlock(value: Value, node: Node) {\n  const { document } = value;\n  const refblock = document.getClosest(node.key, (node) =>\n    RefBlock.isRefBlock(node),\n  );\n  return !!refblock;\n}\n\n/**\n * 是否是河图同步节点\n * @param node\n * @returns\n */\nexport function isSyncHetuNode(node: Node) {\n  return Element.isElement(node) && !!node.data?.metadata?.sync;\n}\n"],"file":"logic.js"}