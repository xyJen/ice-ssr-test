export var SET_REFBLOCK_INJECTION_BY_DOCKEY = Symbol('set_refblock_injection_by_dockey');
export var SET_REFBLOCK_INJECTION_BY_KEY = Symbol('set_refblock_injection_by_key');

/**
 * 根据 docKey 设置引用块数据
 * @param docKey
 * @param loading
 * @returns
 */
export function setRefBlockInjectionByDocKey(docKey, data, overwrite) {
  if (overwrite === void 0) {
    overwrite = true;
  }

  return {
    type: SET_REFBLOCK_INJECTION_BY_DOCKEY,
    payload: {
      data: data,
      docKey: docKey,
      overwrite: overwrite
    }
  };
}
/**
 * 根据 node key 设置引用块加载态
 * @param key
 * @param loading
 * @returns
 */

export function setRefBlockInjectionByKey(key, data, overwrite) {
  if (overwrite === void 0) {
    overwrite = true;
  }

  return {
    type: SET_REFBLOCK_INJECTION_BY_KEY,
    payload: {
      data: data,
      key: key,
      overwrite: overwrite
    }
  };
}
export function isSetRefBlockInjectionByDocKeyAction(action) {
  return action.type === SET_REFBLOCK_INJECTION_BY_DOCKEY;
}
export function isSetRefBlockInjectionByKeyAction(action) {
  return action.type === SET_REFBLOCK_INJECTION_BY_KEY;
}
export var actions = {
  setRefBlockInjectionByDocKey: setRefBlockInjectionByDocKey,
  setRefBlockInjectionByKey: setRefBlockInjectionByKey
};
export var isActions = {
  isSetRefBlockInjectionByDocKeyAction: isSetRefBlockInjectionByDocKeyAction,
  isSetRefBlockInjectionByKeyAction: isSetRefBlockInjectionByKeyAction
};
//# sourceMappingURL=actions.js.map