import { Injection } from '@ali/4ever-cangjie';
import { omit } from 'lodash-es';
import RefBlock from "../mo/models";

function setRefBlockInjection(controller, node, data, overwrite) {
  var injections = controller.value.injections;
  var injection = injections.find(function (inj) {
    return inj.key === node.key;
  });
  injection = Injection.create({
    key: node.key,
    data: injection ? injection.mergeData(injection.data, overwrite ? data : omit(data, Object.keys(injection.data))) : data
  });
  var excludeInjections = injections.filter(function (inj) {
    return inj.key !== node.key;
  });
  return controller.setInjections(excludeInjections.concat(injection)).flush();
}
/**
 * 根据节点 key 设置引用块加载态
 * @param controller
 * @param key
 * @param data
 * @param overwrite
 * @returns
 */


export function setRefBlockInjectionByKey(controller, key, data, overwrite) {
  if (overwrite === void 0) {
    overwrite = true;
  }

  var document = controller.value.document;
  var node = document.getNode(key);

  if (!node || !RefBlock.isRefBlock(node)) {
    return controller;
  }

  return controller.command(setRefBlockInjection, node, data, overwrite);
}
/**
 * 根据 doc key 设置应用块加载态
 * @param controller
 * @param docKey
 * @param data
 * @param overwrite
 */

export function setRefBlockInjectionByDocKey(controller, docKey, data, overwrite) {
  if (overwrite === void 0) {
    overwrite = true;
  }

  var document = controller.value.document;
  document.forEachDescendant(function (node) {
    if (RefBlock.isRefBlock(node) && node.data.docKey === docKey) {
      controller.command(setRefBlockInjection, node, data, overwrite);
    }
  });
  return controller;
}
export var commands = {
  setRefBlockInjectionByKey: setRefBlockInjectionByKey,
  setRefBlockInjectionByDocKey: setRefBlockInjectionByDocKey
};
//# sourceMappingURL=commands.js.map