{"version":3,"sources":["../../../../src/bi/handlers/createOnAction.ts"],"names":["Document","Commands","message","CLIPBOARD_INSERT_FRAGMENT","RefBlock","RefBlockStatus","actions","isActions","upgradeToRefBlock","updateRefBlockData","insertRefBlock","downgradeToBlocksByDocKey","downgradeToBlocksByKey","setRefBlockInjectionByKey","setRefBlockInjectionByDocKey","writeRefBlockToClipboard","getRefBlockMap","createOnAction","config","serializer","generateDoc","decorateRefBlockFragment","cacheHetuWhenCopy","getRefBlockURL","locale","onAction","action","controller","next","isCopyAsRefBlock","isActionFactory","isCopyRefBlock","type","dragBlocks","payload","nodes","value","document","selection","blocks","getRootBlocksAtRange","length","map","n","assertNode","key","loading","content","creating","fragment","create","then","resp","docKey","uuid","refblock","data","refblockUUID","run","success","copySuccess","close","e","console","error","isSetRefBlockInjectionByDocKeyAction","overwrite","command","isSetRefBlockInjectionByKeyAction","isUpgradeToRefBlockAction","isDowngradeToBlocksByDocKeyAction","isDowngradeToBlocksByKeyAction","isInsertRefBlockAction","status","isUpdateRefBlockDataAction","node","cachedSelection","Promise","resolve","refblockMap","Object","keys","forEach","index","select"],"mappings":"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","sourcesContent":["import {\n  Controller,\n  Action,\n  Document,\n  Block,\n  Commands,\n  Mo as Serializer,\n} from '@ali/4ever-cangjie';\nimport { message } from '@ali/we-design';\nimport { CLIPBOARD_INSERT_FRAGMENT } from '@ali/4ever-plugin-clipboard';\nimport RefBlock, { RefBlockStatus } from '../../mo/models';\nimport type { BiConfig } from '../../utils/types';\nimport { actions, isActions } from '../actions';\nimport {\n  upgradeToRefBlock,\n  updateRefBlockData,\n  insertRefBlock,\n  downgradeToBlocksByDocKey,\n  downgradeToBlocksByKey,\n  setRefBlockInjectionByKey,\n  setRefBlockInjectionByDocKey,\n} from '../commands';\nimport { writeRefBlockToClipboard } from '../utils/ccp';\nimport { getRefBlockMap } from '../../utils/value';\n\nexport default function createOnAction(\n  config: BiConfig,\n  serializer?: Serializer,\n) {\n  const {\n    generateDoc,\n    decorateRefBlockFragment,\n    cacheHetuWhenCopy,\n    getRefBlockURL,\n    locale,\n  } = config;\n  return function onAction(\n    action: Action,\n    controller: Controller,\n    next: () => void,\n  ) {\n    const isCopyAsRefBlock = controller.isActionFactory('isCopyAsRefBlock');\n    const isCopyRefBlock = controller.isActionFactory('isCopyRefBlock');\n\n    const { type } = action;\n    if (isCopyAsRefBlock?.(action)) {\n      const { nodes: dragBlocks } = action.payload;\n      let { document, selection } = controller.value;\n      let blocks = document.getRootBlocksAtRange(selection);\n      if (dragBlocks && dragBlocks.length >= blocks.length) {\n        blocks = [\n          ...dragBlocks.map((n) => {\n            // 重新获得 block，防止拖拽杆展开后，block 又发生了变更（例如图片加载完成）\n            return document.assertNode(n.key) as Block;\n          }),\n        ];\n      }\n      message.loading({\n        key: 'loading',\n        type: 'loading',\n        content: locale.creating,\n      });\n      // 装饰 fragment\n      const fragment = decorateRefBlockFragment(\n        Document.create({ nodes: blocks }),\n      );\n      generateDoc(fragment)\n        .then((resp) => {\n          // 创建成功后：\n          // 1. 拷贝内容到剪贴板\n          // 2. 升级普通块为引用块\n          // 3. 驱动引用块开始加载\n          const { docKey, uuid } = resp;\n          const refblock = RefBlock.create({\n            nodes: blocks,\n            data: {\n              docKey: resp.docKey,\n              refblockUUID: uuid,\n            },\n          });\n          writeRefBlockToClipboard(\n            refblock,\n            cacheHetuWhenCopy,\n            getRefBlockURL,\n            serializer,\n          );\n          controller.run(\n            'onAction',\n            actions.upgradeToRefBlock(docKey, uuid, fragment.nodes),\n          );\n          message.success(locale.copySuccess);\n          message.close('loading');\n        })\n        .catch((e) => {\n          console.error('cannot create refblock', e);\n        });\n      return controller;\n    } else if (isActions.isSetRefBlockInjectionByDocKeyAction(action)) {\n      const { data, docKey, overwrite } = action.payload;\n      return controller.command(\n        setRefBlockInjectionByDocKey,\n        docKey,\n        data,\n        overwrite,\n      );\n    } else if (isActions.isSetRefBlockInjectionByKeyAction(action)) {\n      const { data, key, overwrite } = action.payload;\n      return controller.command(\n        setRefBlockInjectionByKey,\n        key,\n        data,\n        overwrite,\n      );\n    } else if (isActions.isUpgradeToRefBlockAction(action)) {\n      const { blocks, docKey, uuid } = action.payload;\n      return controller.command(upgradeToRefBlock, blocks, {\n        docKey,\n        uuid,\n        refblockUUID: uuid,\n      });\n    } else if (isActions.isDowngradeToBlocksByDocKeyAction(action)) {\n      const { docKey } = action.payload;\n      return controller.command(downgradeToBlocksByDocKey, docKey);\n    } else if (isActions.isDowngradeToBlocksByKeyAction(action)) {\n      const { key } = action.payload;\n      return controller.command(downgradeToBlocksByKey, key);\n    } else if (isCopyRefBlock?.(action)) {\n      const { refblock } = action.payload;\n      writeRefBlockToClipboard(\n        refblock,\n        cacheHetuWhenCopy,\n        getRefBlockURL,\n        serializer,\n      );\n      message.success(locale.copySuccess);\n    } else if (isActions.isInsertRefBlockAction(action)) {\n      const { data } = action.payload;\n      return controller.command(insertRefBlock, data).command(\n        setRefBlockInjectionByDocKey,\n        data.docKey!,\n        {\n          status: RefBlockStatus.loading,\n        },\n        false,\n      );\n    } else if (isActions.isUpdateRefBlockDataAction(action)) {\n      const { data, node } = action.payload;\n      return controller.command(updateRefBlockData, node, data).command(\n        setRefBlockInjectionByKey,\n        node.key,\n        {\n          status: RefBlockStatus.loading,\n        },\n        false,\n      );\n    } else if (type === CLIPBOARD_INSERT_FRAGMENT) {\n      // wait for fragment pasted\n      const { fragment } = action.payload as { fragment?: Document };\n      if (!fragment) {\n        return next();\n      }\n      const cachedSelection = controller.value.selection;\n      // 因为 CCP 插入 fragment 是异步的，因此这里同步状态也需要异步\n      Promise.resolve().then(() => {\n        const refblockMap = getRefBlockMap(fragment);\n        // 检查 fragment 中的引用块\n        Object.keys(refblockMap).forEach((docKey, index) => {\n          if (index === 0) {\n            // 避免光标移动到引用块内部\n            controller.command(Commands.select, cachedSelection);\n          }\n          controller.run(\n            'onAction',\n            actions.setRefBlockInjectionByDocKey(\n              docKey,\n              {\n                status: RefBlockStatus.loading,\n              },\n              false,\n            ),\n          );\n        });\n      });\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnAction.js"}