import _extends from "@babel/runtime/helpers/extends";
import moFactory from "../mo/index";
import { stubFalse } from 'lodash-es';
import * as queries from "./queries";
import * as commands from "./commands";
import { actions, isActions } from "./actions";
import createOnPaste from "./handlers/createOnPaste";
import createOnAction from "./handlers/createOnAction";
import onCangjieCopyOrCut from "./handlers/onCangjieCopyOrCut";
import onKeyDown from "./handlers/onKeyDown";
import createRenderNode from "./handlers/createRenderNode";
import * as commonQueries from "../common/queries";

var biFactory = function biFactory(configs) {
  var _configs$clipboard;

  var refblockConfig = configs.refblock;
  /* istanbul ignore next */

  if (!refblockConfig) {
    return moFactory({});
  }

  var locale = refblockConfig.locale,
      _refblockConfig$disab = refblockConfig.disableNestedInRefBlock,
      disableNestedInRefBlock = _refblockConfig$disab === void 0 ? stubFalse : _refblockConfig$disab,
      _refblockConfig$disab2 = refblockConfig.disableDropTo,
      disableDropTo = _refblockConfig$disab2 === void 0 ? stubFalse : _refblockConfig$disab2;
  var disableNodeInRefBlock = queries.createDisableNodeInRefBlock(disableNestedInRefBlock);
  return _extends({}, moFactory({}), {
    commands: commands,
    queries: _extends({}, commonQueries, {
      disableDrag: queries.disableDrag,
      disableDrop: queries.createDisableDrop(locale.cannotMoveTo, locale.cannotDropTo, disableNodeInRefBlock, disableDropTo),
      disableNodeInRefBlock: disableNodeInRefBlock,
      isContainer: queries.isContainer,
      shouldSelectAll: queries.shouldSelectAll
    }),
    actions: actions,
    isActions: isActions,
    onCangjiePaste: createOnPaste(configs),
    onCangjieCopy: onCangjieCopyOrCut,
    onCangjieCut: onCangjieCopyOrCut,
    onKeyDown: onKeyDown,
    onAction: createOnAction(refblockConfig, (_configs$clipboard = configs.clipboard) == null ? void 0 : _configs$clipboard.serializer),
    renderNode: createRenderNode(refblockConfig)
  });
};

export default biFactory;
//# sourceMappingURL=index.js.map