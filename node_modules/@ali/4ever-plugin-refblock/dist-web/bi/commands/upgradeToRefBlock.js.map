{"version":3,"sources":["../../../../src/bi/commands/upgradeToRefBlock.ts"],"names":["Commands","EdgePoint","Selection","commands","RefBlock","RefBlockStatus","upgradeToRefBlock","controller","blocks","data","length","withoutNormalizing","slice","forEach","block","command","removeNodeByKey","key","refblock","create","nodes","map","regenerateKey","point","edge","AFTER","selection","anchor","focus","replaceNodeByKey","select","setRefBlockInjectionByDocKey","docKey","status","loading"],"mappings":"AAAA,SAAgBA,QAAhB,EAAsCC,SAAtC,EAAiDC,SAAjD,QAAkE,oBAAlE;AACA,SAASC,QAAT;AACA,OAAOC,QAAP,IAAkCC,cAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CACLC,UADK,EAELC,MAFK,EAGLC,IAHK,EAIL;AACA,MAAI,CAACD,MAAM,CAACE,MAAZ,EAAoB;AAClB,WAAOH,UAAP;AACD;;AACD,SAAOA,UAAU,CAACI,kBAAX,CAA8B,YAAM;AACzC;AACAH,IAAAA,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBC,OAAhB,CAAwB,UAACC,KAAD,EAAW;AACjCP,MAAAA,UAAU,CAACQ,OAAX,CAAmBf,QAAQ,CAACgB,eAA5B,EAA6CF,KAAK,CAACG,GAAnD;AACD,KAFD,EAFyC,CAKzC;;AACA,QAAMC,QAAQ,GAAGd,QAAQ,CAACe,MAAT,CAAgB;AAC/BV,MAAAA,IAAI,EAAJA,IAD+B;AAE/BW,MAAAA,KAAK,EAAEZ,MAAM,CAACa,GAAP,CAAW,UAACP,KAAD;AAAA,eAAWA,KAAK,CAACQ,aAAN,EAAX;AAAA,OAAX;AAFwB,KAAhB,CAAjB;AAIA,QAAMC,KAAK,GAAGtB,SAAS,CAACkB,MAAV,CAAiB;AAAEF,MAAAA,GAAG,EAAEC,QAAQ,CAACD,GAAhB;AAAqBO,MAAAA,IAAI,EAAEvB,SAAS,CAACwB;AAArC,KAAjB,CAAd;AACA,QAAMC,SAAS,GAAGxB,SAAS,CAACiB,MAAV,CAAiB;AAAEQ,MAAAA,MAAM,EAAEJ,KAAV;AAAiBK,MAAAA,KAAK,EAAEL;AAAxB,KAAjB,CAAlB;AAEAhB,IAAAA,UAAU,CACPQ,OADH,CACWf,QAAQ,CAAC6B,gBADpB,EACsCrB,MAAM,CAAC,CAAD,CAAN,CAAUS,GADhD,EACqDC,QADrD,EAEGH,OAFH,CAEWf,QAAQ,CAAC8B,MAFpB,EAE4BJ,SAF5B,EAGGX,OAHH,CAIIZ,QAAQ,CAAC4B,4BAJb,EAKItB,IAAI,CAACuB,MALT,EAMI;AACEC,MAAAA,MAAM,EAAE5B,cAAc,CAAC6B;AADzB,KANJ,EAUGnB,OAVH,CAUWf,QAAQ,CAAC4B,KAVpB;AAWD,GAxBM,CAAP;AAyBD","sourcesContent":["import { Block, Commands, Controller, EdgePoint, Selection } from '@ali/4ever-cangjie';\nimport { commands } from '../../common/commands';\nimport RefBlock,  { RefBlockData, RefBlockStatus } from '../../mo/models';\n\n/**\n * 将选中的 blocks 升级为 refblock\n * @param controller\n * @param blocks\n * @param docKey\n * @returns\n */\nexport function upgradeToRefBlock(\n  controller: Controller,\n  blocks: Block[],\n  data: RefBlockData,\n) {\n  if (!blocks.length) {\n    return controller;\n  }\n  return controller.withoutNormalizing(() => {\n    // 先删除再插入\n    blocks.slice(1).forEach((block) => {\n      controller.command(Commands.removeNodeByKey, block.key);\n    });\n    // 替换第一个\n    const refblock = RefBlock.create({\n      data,\n      nodes: blocks.map((block) => block.regenerateKey() as Block),\n    });\n    const point = EdgePoint.create({ key: refblock.key, edge: EdgePoint.AFTER });\n    const selection = Selection.create({ anchor: point, focus: point });\n\n    controller\n      .command(Commands.replaceNodeByKey, blocks[0].key, refblock)\n      .command(Commands.select, selection)\n      .command(\n        commands.setRefBlockInjectionByDocKey,\n        data.docKey!,\n        {\n          status: RefBlockStatus.loading,\n        },\n      )\n      .command(Commands.focus);\n  });\n}\n"],"file":"upgradeToRefBlock.js"}