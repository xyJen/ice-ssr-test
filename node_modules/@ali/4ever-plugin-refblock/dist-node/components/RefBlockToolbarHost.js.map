{"version":3,"sources":["../../../src/components/RefBlockToolbarHost.tsx"],"names":["RefBlockToolbarHost","props","list","locale","wrapperVisible","loading","canCopy","copy","getURL","visible","setVisible","React","useState","container","document","body","useEffect","content","useMemo","map","item","docKey","uuid","url","name","length","width","noRefers","referenceListTitle","showRefs"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AAUA;;AACA;;uBAlB4B,a;;wBA2Dd,eAAC,qBAAD,O;;yBAcJ,eAAC,gBAAD;AACE,EAAA,GAAG,EAAC,4BADN;AAEE,iBAAY;AAFd,gBAIE,eAAC,qBAAD,OAJF,eAKE,eAAC,2BAAD,OALF,C;;yBAiBA,eAAC,eAAD,O;;yBA8BM,eAAC,wBAAD,O;;AAjFhB,MAAMA,mBAAuD,GAAIC,KAAD,IAAW;AACzE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,cAAhB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA,OAAzC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MAAmEP,KAAzE;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;AACA;;AACA,QAAMC,SAAS,GAAG,4CAA0BC,QAAQ,CAACC,IAArD;AAEAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACZ,cAAL,EAAqB;AACnBM,MAAAA,UAAU,CAACN,cAAD,CAAV;AACD;AACF,GAJD,EAIG,CAACA,cAAD,CAJH;AAMA,QAAMa,OAAO,GAAGN,KAAK,CAACO,OAAN,CAAc,MAAM;AAClC,WAAO,CAACb,OAAD,GACHH,IAAI,CAACiB,GAAL,CAAUC,IAAD,IAAU;AACjB,0BACE,eAAC,gBAAD;AACE,QAAA,GAAG,EAAG,GAAEA,IAAI,CAACC,MAAO,IAAGD,IAAI,CAACE,IAAK,EADnC;AAEE,uBAAY;AAFd,4BAKE,eAAC,uBAAD,qBACE;AACE,QAAA,IAAI,EAAEd,MAAM,CAACY,IAAI,CAACG,GAAN,EAAWH,IAAI,CAACE,IAAhB,CADd;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,GAAG,EAAC;AAHN,SAKGF,IAAI,CAACI,IALR,CADF,CALF,CADF;AAiBD,KAlBD,CADG,GAoBH,OApBJ;AA6BD,GA9Be,EA8Bb,CAACtB,IAAD,EAAOG,OAAP,CA9Ba,CAAhB;AAgCA,sBACE,qCACGC,OAAO,iBACN,kDACE,eAAC,qBAAD,qBACE,eAAC,mBAAD;AAAY,IAAA,MAAM,EAAEC;AAApB,KAA2BJ,MAAM,CAACI,IAAlC,CADF,CADF,QAFJ,eASE,eAAC,qBAAD,qBACE,eAAC,kBAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,OAAO,eACL,eAAC,yBAAD;AAAmB,MAAA,OAAO,EAAEE;AAA5B,oBACE,eAAC,uBAAD,QACG,CAACJ,OAAD,IAAY,CAACH,IAAI,CAACuB,MAAlB,gBACC,eAAC,aAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAd,OAA+BvB,MAAM,CAACwB,QAAtC,CADD,gBAGC,kDACE,eAAC,aAAD,QAAQxB,MAAM,CAACyB,kBAAf,CADF,EAEGX,OAFH,CAJJ,CADF,CAJJ;AAiBE,IAAA,OAAO,EAAER,OAjBX;AAkBE,IAAA,eAAe,EAAEC,UAlBnB;AAmBE,IAAA,eAAe,MAnBjB;AAoBE,IAAA,YAAY,EAAE,MAAMG;AApBtB,kBAsBE,eAAC,qBAAD;AACE,IAAA,MAAM,EAAC,uBADT;AAEE,IAAA,IAAI,eACF,yDAEE,eAAC,uBAAD,QAAkBV,MAAM,CAAC0B,QAAzB,CAFF;AAHJ,IAtBF,CADF,CATF,CADF;AA8CD,CA1FD;;eA4Fe7B,mB","sourcesContent":["import * as React from 'react';\nimport { Dropdown } from '@ali/we-design';\nimport { LinkSimpleNormal } from '@ali/we-icon';\nimport { useScrollableContent } from '@ali/4ever-cangjie';\nimport { RefBlockStatus } from '../mo/models';\nimport { DropdownAnimation } from '@ali/we-util';\nimport { IconButton } from '@ali/we-toolbar';\nimport type { RefBlockLocale, ReferenceItem } from '../utils/types';\nimport {\n  ListItemContent,\n  ListItem,\n  Title,\n  DropdownOverlay,\n  ToolbarColumn,\n  Divider,\n  IconButtonTitle,\n  ListItemPlaceholder,\n} from './styled';\nimport ListItemIcon from './ListItemIcon';\nimport CopyButton from './CopyButton';\n\ninterface RefBlockToolbarHostProps {\n  /** 引用文档列表 */\n  list: ReferenceItem[];\n  /** 引用块国际化文案 */\n  locale: RefBlockLocale;\n  /** 加载态 */\n  loading: boolean;\n  /** 引用块状态 */\n  status: RefBlockStatus;\n  /** visible */\n  wrapperVisible: boolean;\n  /** 是否允许复制 */\n  canCopy: boolean;\n  /** 复制块引用链接 */\n  copy: () => void;\n  /** 获得文档跳转地址 */\n  getURL: (url: string, id: string) => string;\n}\n\nconst RefBlockToolbarHost: React.FC<RefBlockToolbarHostProps> = (props) => {\n  const { list, locale, wrapperVisible, loading, canCopy, copy, getURL } = props;\n  const [visible, setVisible] = React.useState(false);\n  /* istanbul ignore next */\n  const container = useScrollableContent() || document.body;\n\n  React.useEffect(() => {\n    if (!wrapperVisible) {\n      setVisible(wrapperVisible);\n    }\n  }, [wrapperVisible]);\n\n  const content = React.useMemo(() => {\n    return !loading\n      ? list.map((item) => {\n          return (\n            <ListItem\n              key={`${item.docKey}-${item.uuid}`}\n              data-testid=\"refblock-toolbar-list-item\"\n            >\n              <ListItemIcon />\n              <ListItemContent>\n                <a\n                  href={getURL(item.url, item.uuid)}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {item.name}\n                </a>\n              </ListItemContent>\n            </ListItem>\n          );\n        })\n      : [\n          <ListItem\n            key=\"refblock-refer-placeholder\"\n            data-testid=\"refblock-refer-placeholder\"\n          >\n            <ListItemIcon />\n            <ListItemPlaceholder />\n          </ListItem>,\n        ];\n  }, [list, loading]);\n\n  return (\n    <>\n      {canCopy && (\n        <>\n          <ToolbarColumn>\n            <CopyButton onCopy={copy}>{locale.copy}</CopyButton>\n          </ToolbarColumn>\n          <Divider />\n        </>\n      )}\n      <ToolbarColumn>\n        <Dropdown\n          trigger=\"click\"\n          placement=\"bottomRight\"\n          overlay={\n            <DropdownAnimation visible={visible}>\n              <DropdownOverlay>\n                {!loading && !list.length ? (\n                  <Title style={{ width: 250 }}>{locale.noRefers}</Title>\n                ) : (\n                  <>\n                    <Title>{locale.referenceListTitle}</Title>\n                    {content}\n                  </>\n                )}\n              </DropdownOverlay>\n            </DropdownAnimation>\n          }\n          visible={visible}\n          onVisibleChange={setVisible}\n          disableDomAlign\n          getContainer={() => container}\n        >\n          <IconButton\n            testid=\"refblock-toolbar-host\"\n            icon={\n              <>\n                <LinkSimpleNormal />\n                <IconButtonTitle>{locale.showRefs}</IconButtonTitle>\n              </>\n            }\n          />\n        </Dropdown>\n      </ToolbarColumn>\n    </>\n  );\n};\n\nexport default RefBlockToolbarHost;\n"],"file":"RefBlockToolbarHost.js"}