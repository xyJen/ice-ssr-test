{"version":3,"sources":["../../../src/components/RefBlock.tsx"],"names":["defaultGetUrl","url","RefBlock","props","children","readOnly","locale","renderProps","toolbarAnimationDuration","enableToolbar","stubFalse","detach","getReferenceList","getDocKey","renderRefBlockInOtherStates","onRefBlockMounted","copyRefBlock","renderLoading","getURL","attributes","ref","node","controller","selection","isBlurred","value","isCollapsed","isFocused","toolbarVisible","setToolbarVisible","React","useState","toolbarAnchor","setToolbarAnchor","top","left","wrapperRef","useRef","current","status","RefBlockStatus","loading","isPageMode","data","docKey","uuid","refblockUUID","isHost","useLayoutEffect","useEffect","key","handleToolbarHide","useMemo","handleToolbarShow","useCallback","cancel","rect","getBoundingClientRect","right","handleCopy","handleMouseEnterToContent","event","preventDefault","stopPropagation","loadingJSX","forbidden","deleted","invalid","normal","read","wrapperStyle","maxHeight","REFBLOCK_MAX_HEIGHT","overflow","noop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { stubFalse, debounce, noop } from 'lodash-es';\nimport { RenderNodeProps, Controller } from '@ali/4ever-cangjie';\nimport RefBlockNode, { RefBlockStatus } from '../mo/models';\nimport { RefBlockWrapper } from './styled';\nimport Forbidden from './Forbidden';\nimport Deleted from './Deleted';\nimport Invalid from './Invalid';\nimport Loading from './Loading';\nimport type { ReferenceItem, RefBlockLocale } from '../utils/types';\nimport RefBlockToolbar from './RefBlockToolbar';\nimport { REFBLOCK_MAX_HEIGHT } from '../utils/styles';\n\ninterface RefBlockProps {\n  /** 是否 focus 在引用块 */\n  isFocused: boolean;\n  /** 编辑器节点渲染 props */\n  renderProps: RenderNodeProps;\n  /** 只读模式 */\n  readOnly: boolean;\n  /** 国际化文案 */\n  locale: RefBlockLocale;\n  /** 工具栏动画持续时间 */\n  toolbarAnimationDuration?: number;\n  /** 是否开启工具栏 */\n  enableToolbar?: () => boolean;\n  /** 获得引用列表 */\n  getReferenceList: (id: string) => Promise<ReferenceItem[]>;\n  /** 点击取消引用 */\n  detach: (docKey: string, uuid: string) => Promise<void>;\n  /** 获得当前文档 key */\n  getDocKey: () => string;\n  /** 渲染其他状态的引用块 */\n  renderRefBlockInOtherStates: (\n    props: RenderNodeProps,\n    status: RefBlockStatus,\n  ) => React.ReactNode;\n  /** 挂载引用块时的操作 */\n  onRefBlockMounted?: (\n    controller: Controller,\n    nodeKey: string,\n    uuid: string,\n  ) => void;\n  /** 拷贝引用块 */\n  copyRefBlock: () => void;\n  /* 自定义 loading 组件样式 */\n  renderLoading?: (props: RenderNodeProps) => JSX.Element | null;\n  /** 获得文档链接 */\n  getURL?: (url: string, id: string) => string;\n}\n\nconst defaultGetUrl = (url: string) => url;\n\nconst RefBlock: React.FC<RefBlockProps> = (props) => {\n  const {\n    children,\n    readOnly,\n    locale,\n    renderProps,\n    toolbarAnimationDuration = 150,\n    enableToolbar = stubFalse,\n    detach,\n    getReferenceList,\n    getDocKey,\n    renderRefBlockInOtherStates,\n    onRefBlockMounted,\n    copyRefBlock,\n    renderLoading,\n    getURL = defaultGetUrl,\n  } = props;\n  const { attributes } = renderProps;\n  const { ref } = attributes;\n  const node = renderProps.node as RefBlockNode;\n  const { controller } = renderProps;\n  const { selection, isBlurred } = controller.value;\n  const { isCollapsed } = selection;\n  const isFocused = props.isFocused && !isBlurred;\n\n  const [toolbarVisible, setToolbarVisible] = React.useState(false);\n  /**********************************\\\n  *                                  *\n  *                      |           *\n  *                    left          *\n  *                      |           *\n  *                      v           *\n  * +--------------------+  <--top-- *\n  * |      RefBlock      |           *\n  * +--------------------+           *\n  *                                  *\n  \\**********************************/\n  const [toolbarAnchor, setToolbarAnchor] = React.useState<{\n    top: number;\n    left: number;\n  }>({ top: -100, left: -100 });\n  const wrapperRef = React.useRef<HTMLDivElement>(ref && ref.current);\n\n  const { status = RefBlockStatus.loading, isPageMode } = node.data;\n  const docKey = node.data.docKey!;\n  const uuid = node.data.refblockUUID!;\n  const isHost = uuid === docKey;\n\n  React.useLayoutEffect(() => {\n    if (ref) {\n      wrapperRef.current = ref.current;\n    }\n  }, [ref]);\n\n  React.useEffect(() => {\n    onRefBlockMounted && onRefBlockMounted(controller, node.key, uuid);\n  }, [onRefBlockMounted, controller, node.key, uuid]);\n\n  const handleToolbarHide = React.useMemo(\n    () =>\n      debounce(() => {\n        setToolbarVisible(false);\n      }, toolbarAnimationDuration),\n    [toolbarAnimationDuration],\n  );\n\n  const handleToolbarShow = React.useCallback(() => {\n    handleToolbarHide.cancel();\n    // 计算工具栏定位锚点\n    const rect = wrapperRef.current!.getBoundingClientRect();\n    const left = rect.right;\n    const top = rect.top - 42;\n    setToolbarAnchor({\n      top,\n      left,\n    });\n    setToolbarVisible(true);\n  }, [handleToolbarHide]);\n\n  React.useEffect(() => {\n    return () => {\n      handleToolbarHide.cancel();\n    };\n  }, [handleToolbarHide]);\n\n  const handleCopy = React.useCallback(() => {\n    copyRefBlock();\n    setToolbarVisible(false);\n  }, [copyRefBlock]);\n\n  const handleMouseEnterToContent = React.useCallback(\n    (event: React.MouseEvent) => {\n      // focus 时，鼠标进入到 content，隐藏工具栏\n      event.preventDefault();\n      event.stopPropagation();\n      setToolbarVisible(false);\n    },\n    [],\n  );\n\n  React.useEffect(() => {\n    // focus 时，隐藏工具栏\n    if (isFocused) {\n      setToolbarVisible(false);\n    }\n  }, [isFocused]);\n\n  if (status === RefBlockStatus.loading) {\n    const loadingJSX = renderLoading?.(renderProps);\n    return (\n      <RefBlockWrapper\n        data-dockey={docKey}\n        data-cangjie-not-editable\n        isHost={isHost}\n        $loading={true}\n        {...attributes}\n      >\n        {loadingJSX || <Loading>{children}</Loading>}\n      </RefBlockWrapper>\n    );\n  } else if (status === RefBlockStatus.forbidden) {\n    return <Forbidden attributes={attributes}>{locale.forbidden}</Forbidden>;\n  } else if (status === RefBlockStatus.deleted) {\n    return <Deleted attributes={attributes}>{locale.deleted}</Deleted>;\n  } else if (status === RefBlockStatus.invalid) {\n    return <Invalid attributes={attributes}>{locale.deleted}</Invalid>;\n  } else if (\n    status === RefBlockStatus.normal ||\n    status === RefBlockStatus.readOnly\n  ) {\n    const read = status === RefBlockStatus.readOnly || readOnly;\n    /* istanbul ignore next */\n    const wrapperStyle: React.CSSProperties =\n      isPageMode && status === RefBlockStatus.readOnly\n        ? {\n            maxHeight: REFBLOCK_MAX_HEIGHT,\n            overflow: 'scroll',\n          }\n        : {};\n\n    return (\n      <RefBlockWrapper\n        data-testid=\"refblock-container\"\n        data-container-block\n        data-focused={isFocused}\n        ref={wrapperRef}\n        isFocused={isFocused}\n        isHost={isHost}\n        style={wrapperStyle}\n        onMouseLeave={handleToolbarHide}\n        onMouseEnter={isFocused ? noop : handleToolbarShow}\n        onMouseMove={isFocused ? handleToolbarShow : noop}\n        {...attributes}\n      >\n        {enableToolbar() && (\n          <RefBlockToolbar\n            locale={locale}\n            readOnly={read}\n            canCopy={status === RefBlockStatus.normal}\n            visible={toolbarVisible && isCollapsed}\n            node={node}\n            isHost={isHost}\n            status={status}\n            duration={toolbarAnimationDuration}\n            anchor={toolbarAnchor}\n            detach={detach}\n            getReferenceList={getReferenceList}\n            getDocKey={getDocKey}\n            getURL={getURL}\n            copy={handleCopy}\n            onToolbarShow={handleToolbarShow}\n            onToolbarHide={handleToolbarHide}\n          />\n        )}\n        <div\n          className=\"refblock-content\"\n          data-refblock-uuid={uuid}\n          onMouseEnter={isFocused ? handleMouseEnterToContent : noop}\n        >\n          {children}\n        </div>\n      </RefBlockWrapper>\n    );\n  } else {\n    return (\n      <div {...attributes} data-testid={`refblock-other-states-${status}`}>\n        {renderRefBlockInOtherStates(renderProps, status)}\n      </div>\n    );\n  }\n};\n\nexport default RefBlock;\n"],"file":"RefBlock.js"}