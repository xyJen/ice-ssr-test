{"version":3,"sources":["../../../src/zhi/createRenderNode.tsx"],"names":["detach","Promise","reject","createRenderNode","config","locale","toolbarAnimationDuration","enableToolbar","getReferenceList","getDocKey","renderRefBlockInOtherStates","renderLoading","onRefBlockMounted","getDocURL","RefBlock","TYPE","props","controller","children","noop"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;;AAK5B,MAAMA,MAAM,GAAG,MAAMC,OAAO,CAACC,MAAR,CAAe,mCAAf,CAArB;;AAEe,SAASC,gBAAT,CAA0BC,MAA1B,EAA6C;AAC1D,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,wBAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,2BANI;AAOJC,IAAAA,aAPI;AAQJC,IAAAA,iBARI;AASJC,IAAAA;AATI,MAUFT,MAVJ;AAYA,SAAO;AACL,KAACU,gBAASC,IAAV,GAAiB,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACtC,YAAM;AAAEC,QAAAA;AAAF,UAAeF,KAArB;AAEA,0BACE,eAAC,iBAAD;AACE,QAAA,SAAS,EAAE,KADb;AAEE,QAAA,MAAM,EAAEX,MAFV;AAGE,QAAA,aAAa,EAAEE,aAHjB;AAIE,QAAA,QAAQ,EAAE,IAJZ;AAKE,QAAA,WAAW,EAAES,KALf;AAME,QAAA,wBAAwB,EAAEV,wBAN5B;AAOE,QAAA,gBAAgB,EAAEE,gBAPpB;AAQE,QAAA,SAAS,EAAEC,SARb;AASE,QAAA,MAAM,EAAET,MATV;AAUE,QAAA,iBAAiB,EAAEY,iBAVrB;AAWE,QAAA,2BAA2B,EAAEF,2BAX/B;AAYE,QAAA,YAAY,EAAES,YAZhB;AAaE,QAAA,aAAa,EAAER,aAbjB;AAcE,QAAA,MAAM,EAAEE;AAdV,SAgBGK,QAAQ,EAhBX,CADF;AAoBD;AAxBI,GAAP;AA0BD","sourcesContent":["import * as React from 'react';\nimport { noop } from 'lodash-es';\nimport RefBlock from '../mo/models';\nimport RefBlockComp from '../components/RefBlock';\nimport type { ZhiConfig } from '../utils/types';\n\nconst detach = () => Promise.reject(\"forbidden detach in readonly mode\");\n\nexport default function createRenderNode(config: ZhiConfig) {\n  const {\n    locale,\n    toolbarAnimationDuration,\n    enableToolbar,\n    getReferenceList,\n    getDocKey,\n    renderRefBlockInOtherStates,\n    renderLoading,\n    onRefBlockMounted,\n    getDocURL,\n  } = config;\n\n  return {\n    [RefBlock.TYPE]: (props, controller) => {\n      const { children } = props;\n      \n      return (\n        <RefBlockComp\n          isFocused={false}\n          locale={locale}\n          enableToolbar={enableToolbar}\n          readOnly={true}\n          renderProps={props}\n          toolbarAnimationDuration={toolbarAnimationDuration} \n          getReferenceList={getReferenceList}\n          getDocKey={getDocKey}\n          detach={detach}\n          onRefBlockMounted={onRefBlockMounted}\n          renderRefBlockInOtherStates={renderRefBlockInOtherStates}\n          copyRefBlock={noop}\n          renderLoading={renderLoading}\n          getURL={getDocURL}\n        >\n          {children()}\n        </RefBlockComp>\n      );\n    },\n  };\n}\n"],"file":"createRenderNode.js"}