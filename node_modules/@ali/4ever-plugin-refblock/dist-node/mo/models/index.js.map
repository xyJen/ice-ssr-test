{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["RefBlockStatus","RefBlock","Block","create","properties","Error","isRefBlock","type","TYPE","maybeRefBlock","isBlock","isVoid","controller","node","data","pi","isPageMode","status","normal","value","injections","some","inj","key","regenerateChildrenUUID","refblockUUID","uuidKey","mapDescendants","child","isElement","uuid","startsWith","merge","ELEMENT_TYPE"],"mappings":";;;;;;;AAAA;;AAQA;;IAEYA,c;AAiBZ;;;;WAjBYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c;;AAyCG,MAAMC,QAAN,SAAuBC,kBAAvB,CAA6D;AAG1E,SAAOC,MAAP,CACEC,UADF,EAEE;AACA,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,QAAIJ,QAAQ,CAACK,UAAT,CAAoBF,UAApB,CAAJ,EAAqC;AACnC,aAAOA,UAAP;AACD;;AAED,WAAO,MAAMD,MAAN,CAAqB,EAC1B,GAAGC,UADuB;AAE1BG,MAAAA,IAAI,EAAEN,QAAQ,CAACO;AAFW,KAArB,CAAP;AAID;;AAED,SAAOF,UAAP,CAAkBG,aAAlB,EAAiE;AAC/D,WAAOP,mBAAMQ,OAAN,CAAcD,aAAd,KAAgCA,aAAa,CAACF,IAAd,KAAuBN,QAAQ,CAACO,IAAvE;AACD;;AAED,SAAOG,MAAP,CAAcC,UAAd,EAAsCC,IAAtC,EAAkD;AAChD,QAAI,CAACZ,QAAQ,CAACK,UAAT,CAAoBO,IAApB,CAAL,EAAgC;AAC9B,aAAO,KAAP;AACD,KAFD,MAEO,IAAIA,IAAI,CAACC,IAAL,CAAUC,EAAV,IAAgBF,IAAI,CAACC,IAAL,CAAUE,UAA9B,EAA0C;AAC/C;AACA,aAAOH,IAAI,CAACC,IAAL,CAAUG,MAAV,KAAqBjB,cAAc,CAACkB,MAA3C;AACD,KAHM,MAGA;AACL,aAAON,UAAU,CAACO,KAAX,CAAiBC,UAAjB,CAA4BC,IAA5B,CAAkCC,GAAD,IAAS;AAC/C,eACEA,GAAG,CAACC,GAAJ,KAAYV,IAAI,CAACU,GAAjB,IAAwBD,GAAG,CAACR,IAAJ,CAASG,MAAT,KAAoBjB,cAAc,CAACkB,MAD7D;AAGD,OAJM,CAAP;AAKD;AACF;;AAED,SAAOM,sBAAP,CAAiDX,IAAjD,EAA0DY,YAA1D,EAAgFC,OAAhF,EAAoG;AAClG,WAAOb,IAAI,CAACc,cAAL,CAAqBC,KAAD,IAAW;AACpC,UAAIA,KAAK,CAACC,SAAN,MAAqBD,KAAK,CAACd,IAAN,CAAWY,OAAX,CAAzB,EAA8C;AAC5C,cAAMI,IAAI,GAAGF,KAAK,CAACd,IAAN,CAAWY,OAAX,CAAb;;AACA,YAAII,IAAI,CAACC,UAAL,CAAgBN,YAAhB,CAAJ,EAAmC;AACjC,iBAAOG,KAAP;AACD;;AACD,eAAOA,KAAK,CAACI,KAAN,CAAY;AACjBlB,UAAAA,IAAI,EAAE,EACJ,GAAGc,KAAK,CAACd,IADL;AAEJ,aAACY,OAAD,GAAY,GAAED,YAAa,IAAGK,IAAK;AAF/B;AADW,SAAZ,CAAP;AAMD;;AACD,aAAOF,KAAP;AACD,KAdM,CAAP;AAeD;;AAvDyE;;;AAAvD3B,Q,CACZO,I,GAAOyB,kB","sourcesContent":["import {\n  Node,\n  Element,\n  Data,\n  Block,\n  BlockChildren,\n  Controller,\n} from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\nexport enum RefBlockStatus {\n  /** 正常态 */\n  normal = 'normal',\n  /** 已删除 */\n  deleted = 'deleted',\n  /** 加载中 */\n  loading = 'loading',\n  /** 无权限 */\n  forbidden = 'forbidden',\n  /** 只读 */\n  readOnly = 'readOnly',\n  /** 无效 */\n  invalid = 'invalid',\n  /** 断开 */\n  disconnected = 'disconnected',\n}\n\n/** 引用块 Injection */\nexport interface RefBlockInjectionData {\n  status: RefBlockStatus;\n}\n\nexport interface RefBlockData extends Data {\n  /** doc key */\n  readonly docKey?: string;\n  /** uuid */\n  readonly refblockUUID?: string;\n  /** injection data: status */\n  readonly status?: RefBlockInjectionData['status'];\n}\n\ntype RefBlockChildren = BlockChildren;\n\nexport interface RefBlockProperties<\n  D = RefBlockData,\n  N extends BlockChildren = RefBlockChildren,\n> {\n  data?: D;\n  nodes?: N;\n}\n\nexport default class RefBlock extends Block<RefBlockData, RefBlockChildren> {\n  static TYPE = ELEMENT_TYPE;\n\n  static create<SD = RefBlockData, SN extends BlockChildren = RefBlockChildren>(\n    properties: RefBlock | RefBlockProperties<SD, SN> | string,\n  ) {\n    if (typeof properties === 'string') {\n      throw new Error('`RefBlock.create` does not accept string');\n    }\n\n    if (RefBlock.isRefBlock(properties)) {\n      return properties as Block<SD, SN>;\n    }\n\n    return super.create<SD, SN>({\n      ...properties,\n      type: RefBlock.TYPE,\n    });\n  }\n\n  static isRefBlock(maybeRefBlock: any): maybeRefBlock is RefBlock {\n    return Block.isBlock(maybeRefBlock) && maybeRefBlock.type === RefBlock.TYPE;\n  }\n\n  static isVoid(controller: Controller, node: Node) {\n    if (!RefBlock.isRefBlock(node)) {\n      return false;\n    } else if (node.data.pi || node.data.isPageMode) {\n      // Pi 下通过 node.data 判断状态\n      return node.data.status !== RefBlockStatus.normal;\n    } else {\n      return controller.value.injections.some((inj) => {\n        return (\n          inj.key === node.key && inj.data.status !== RefBlockStatus.normal\n        );\n      });\n    }\n  }\n\n  static regenerateChildrenUUID<T extends Element>(node: T, refblockUUID: string, uuidKey: string): T {\n    return node.mapDescendants((child) => {\n      if (child.isElement() && child.data[uuidKey]) {\n        const uuid = child.data[uuidKey] as string;\n        if (uuid.startsWith(refblockUUID)) {\n          return child;\n        }\n        return child.merge({\n          data: {\n            ...child.data,\n            [uuidKey]: `${refblockUUID}-${uuid}`,\n          },\n        });\n      }\n      return child;\n    });\n  }\n}\n"],"file":"index.js"}