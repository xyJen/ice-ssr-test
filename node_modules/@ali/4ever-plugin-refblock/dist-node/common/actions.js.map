{"version":3,"sources":["../../../src/common/actions.ts"],"names":["SET_REFBLOCK_INJECTION_BY_DOCKEY","Symbol","SET_REFBLOCK_INJECTION_BY_KEY","setRefBlockInjectionByDocKey","docKey","data","overwrite","type","payload","setRefBlockInjectionByKey","key","isSetRefBlockInjectionByDocKeyAction","action","isSetRefBlockInjectionByKeyAction","actions","isActions"],"mappings":";;;;;;;;;;AAOO,MAAMA,gCAAgC,GAAGC,MAAM,CACpD,kCADoD,CAA/C;;AAGA,MAAMC,6BAA6B,GAAGD,MAAM,CACjD,+BADiD,CAA5C;;;AA0BP;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,4BAAT,CACLC,MADK,EAELC,IAFK,EAGLC,SAAS,GAAG,IAHP,EAIL;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEP,gCADD;AAELQ,IAAAA,OAAO,EAAE;AACPH,MAAAA,IADO;AAEPD,MAAAA,MAFO;AAGPE,MAAAA;AAHO;AAFJ,GAAP;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASG,yBAAT,CACLC,GADK,EAELL,IAFK,EAGLC,SAAS,GAAG,IAHP,EAIL;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEL,6BADD;AAELM,IAAAA,OAAO,EAAE;AACPH,MAAAA,IADO;AAEPK,MAAAA,GAFO;AAGPJ,MAAAA;AAHO;AAFJ,GAAP;AAQD;;AAEM,SAASK,oCAAT,CACLC,MADK,EAEyC;AAC9C,SAAOA,MAAM,CAACL,IAAP,KAAgBP,gCAAvB;AACD;;AAEM,SAASa,iCAAT,CACLD,MADK,EAEsC;AAC3C,SAAOA,MAAM,CAACL,IAAP,KAAgBL,6BAAvB;AACD;;AAEM,MAAMY,OAAO,GAAG;AACrBX,EAAAA,4BADqB;AAErBM,EAAAA;AAFqB,CAAhB;;AAKA,MAAMM,SAAS,GAAG;AACvBJ,EAAAA,oCADuB;AAEvBE,EAAAA;AAFuB,CAAlB","sourcesContent":["import {\n  Action,\n  ConvertToPluginActionCreators,\n  ConvertToPluginActionPredicates,\n} from '@ali/4ever-cangjie';\nimport type { RefBlockInjectionData } from '../mo/models';\n\nexport const SET_REFBLOCK_INJECTION_BY_DOCKEY = Symbol(\n  'set_refblock_injection_by_dockey',\n);\nexport const SET_REFBLOCK_INJECTION_BY_KEY = Symbol(\n  'set_refblock_injection_by_key',\n);\n\nexport interface SetRefBlockInjectionByDocKeyPayload {\n  data: Partial<RefBlockInjectionData>;\n  docKey: string;\n  overwrite?: boolean;\n}\n\nexport interface SetRefBlockInjectionByKeyPayload {\n  data: Partial<RefBlockInjectionData>;\n  key: string;\n  overwrite?: boolean;\n}\n\nexport interface SetRefBlockInjectionByDocKeyAction {\n  type: typeof SET_REFBLOCK_INJECTION_BY_DOCKEY;\n  payload: SetRefBlockInjectionByDocKeyPayload;\n}\n\nexport interface SetRefBlockInjectionByKeyAction {\n  type: typeof SET_REFBLOCK_INJECTION_BY_KEY;\n  payload: SetRefBlockInjectionByKeyPayload;\n}\n\n/**\n * 根据 docKey 设置引用块数据\n * @param docKey\n * @param loading\n * @returns\n */\nexport function setRefBlockInjectionByDocKey(\n  docKey: string,\n  data: Partial<RefBlockInjectionData>,\n  overwrite = true,\n) {\n  return {\n    type: SET_REFBLOCK_INJECTION_BY_DOCKEY,\n    payload: {\n      data,\n      docKey,\n      overwrite,\n    } as SetRefBlockInjectionByDocKeyPayload,\n  };\n}\n\n/**\n * 根据 node key 设置引用块加载态\n * @param key\n * @param loading\n * @returns\n */\nexport function setRefBlockInjectionByKey(\n  key: string,\n  data: Partial<RefBlockInjectionData>,\n  overwrite = true,\n) {\n  return {\n    type: SET_REFBLOCK_INJECTION_BY_KEY,\n    payload: {\n      data,\n      key,\n      overwrite,\n    } as SetRefBlockInjectionByKeyPayload,\n  };\n}\n\nexport function isSetRefBlockInjectionByDocKeyAction(\n  action: Action,\n): action is SetRefBlockInjectionByDocKeyAction {\n  return action.type === SET_REFBLOCK_INJECTION_BY_DOCKEY;\n}\n\nexport function isSetRefBlockInjectionByKeyAction(\n  action: Action,\n): action is SetRefBlockInjectionByKeyAction {\n  return action.type === SET_REFBLOCK_INJECTION_BY_KEY;\n}\n\nexport const actions = {\n  setRefBlockInjectionByDocKey,\n  setRefBlockInjectionByKey,\n};\n\nexport const isActions = {\n  isSetRefBlockInjectionByDocKeyAction,\n  isSetRefBlockInjectionByKeyAction,\n};\n\ndeclare module '@ali/4ever-cangjie' {\n  /** type combination for commands、queries、actions */\n  interface PluginActionCreators\n    extends ConvertToPluginActionCreators<typeof actions> {}\n  interface PluginActionPredicates\n    extends ConvertToPluginActionPredicates<typeof isActions> {}\n}\n"],"file":"actions.js"}