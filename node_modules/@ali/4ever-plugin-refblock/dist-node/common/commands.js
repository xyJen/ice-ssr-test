"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setRefBlockInjectionByKey = setRefBlockInjectionByKey;
exports.setRefBlockInjectionByDocKey = setRefBlockInjectionByDocKey;
exports.commands = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

var _lodash = require("lodash");

var _models = _interopRequireDefault(require("../mo/models"));

function setRefBlockInjection(controller, node, data, overwrite) {
  const {
    injections
  } = controller.value;
  let injection = injections.find(inj => inj.key === node.key);
  injection = _everCangjie.Injection.create({
    key: node.key,
    data: injection ? injection.mergeData(injection.data, overwrite ? data : (0, _lodash.omit)(data, Object.keys(injection.data))) : data
  });
  const excludeInjections = injections.filter(inj => inj.key !== node.key);
  return controller.setInjections(excludeInjections.concat(injection)).flush();
}
/**
 * 根据节点 key 设置引用块加载态
 * @param controller
 * @param key
 * @param data
 * @param overwrite
 * @returns
 */


function setRefBlockInjectionByKey(controller, key, data, overwrite = true) {
  const {
    document
  } = controller.value;
  const node = document.getNode(key);

  if (!node || !_models.default.isRefBlock(node)) {
    return controller;
  }

  return controller.command(setRefBlockInjection, node, data, overwrite);
}
/**
 * 根据 doc key 设置应用块加载态
 * @param controller
 * @param docKey
 * @param data
 * @param overwrite
 */


function setRefBlockInjectionByDocKey(controller, docKey, data, overwrite = true) {
  const {
    document
  } = controller.value;
  document.forEachDescendant(node => {
    if (_models.default.isRefBlock(node) && node.data.docKey === docKey) {
      controller.command(setRefBlockInjection, node, data, overwrite);
    }
  });
  return controller;
}

const commands = {
  setRefBlockInjectionByKey,
  setRefBlockInjectionByDocKey
};
exports.commands = commands;
//# sourceMappingURL=commands.js.map