{"version":3,"sources":["../../../../src/bi/commands/upgradeToRefBlock.ts"],"names":["upgradeToRefBlock","controller","blocks","data","length","withoutNormalizing","slice","forEach","block","command","Commands","removeNodeByKey","key","refblock","RefBlock","create","nodes","map","regenerateKey","point","EdgePoint","edge","AFTER","selection","Selection","anchor","focus","replaceNodeByKey","select","commands","setRefBlockInjectionByDocKey","docKey","status","RefBlockStatus","loading"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CACLC,UADK,EAELC,MAFK,EAGLC,IAHK,EAIL;AACA,MAAI,CAACD,MAAM,CAACE,MAAZ,EAAoB;AAClB,WAAOH,UAAP;AACD;;AACD,SAAOA,UAAU,CAACI,kBAAX,CAA8B,MAAM;AACzC;AACAH,IAAAA,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBC,OAAhB,CAAyBC,KAAD,IAAW;AACjCP,MAAAA,UAAU,CAACQ,OAAX,CAAmBC,sBAASC,eAA5B,EAA6CH,KAAK,CAACI,GAAnD;AACD,KAFD,EAFyC,CAKzC;;AACA,UAAMC,QAAQ,GAAGC,gBAASC,MAAT,CAAgB;AAC/BZ,MAAAA,IAD+B;AAE/Ba,MAAAA,KAAK,EAAEd,MAAM,CAACe,GAAP,CAAYT,KAAD,IAAWA,KAAK,CAACU,aAAN,EAAtB;AAFwB,KAAhB,CAAjB;;AAIA,UAAMC,KAAK,GAAGC,uBAAUL,MAAV,CAAiB;AAAEH,MAAAA,GAAG,EAAEC,QAAQ,CAACD,GAAhB;AAAqBS,MAAAA,IAAI,EAAED,uBAAUE;AAArC,KAAjB,CAAd;;AACA,UAAMC,SAAS,GAAGC,uBAAUT,MAAV,CAAiB;AAAEU,MAAAA,MAAM,EAAEN,KAAV;AAAiBO,MAAAA,KAAK,EAAEP;AAAxB,KAAjB,CAAlB;;AAEAlB,IAAAA,UAAU,CACPQ,OADH,CACWC,sBAASiB,gBADpB,EACsCzB,MAAM,CAAC,CAAD,CAAN,CAAUU,GADhD,EACqDC,QADrD,EAEGJ,OAFH,CAEWC,sBAASkB,MAFpB,EAE4BL,SAF5B,EAGGd,OAHH,CAIIoB,mBAASC,4BAJb,EAKI3B,IAAI,CAAC4B,MALT,EAMI;AACEC,MAAAA,MAAM,EAAEC,uBAAeC;AADzB,KANJ,EAUGzB,OAVH,CAUWC,sBAASgB,KAVpB;AAWD,GAxBM,CAAP;AAyBD","sourcesContent":["import { Block, Commands, Controller, EdgePoint, Selection } from '@ali/4ever-cangjie';\nimport { commands } from '../../common/commands';\nimport RefBlock,  { RefBlockData, RefBlockStatus } from '../../mo/models';\n\n/**\n * 将选中的 blocks 升级为 refblock\n * @param controller\n * @param blocks\n * @param docKey\n * @returns\n */\nexport function upgradeToRefBlock(\n  controller: Controller,\n  blocks: Block[],\n  data: RefBlockData,\n) {\n  if (!blocks.length) {\n    return controller;\n  }\n  return controller.withoutNormalizing(() => {\n    // 先删除再插入\n    blocks.slice(1).forEach((block) => {\n      controller.command(Commands.removeNodeByKey, block.key);\n    });\n    // 替换第一个\n    const refblock = RefBlock.create({\n      data,\n      nodes: blocks.map((block) => block.regenerateKey() as Block),\n    });\n    const point = EdgePoint.create({ key: refblock.key, edge: EdgePoint.AFTER });\n    const selection = Selection.create({ anchor: point, focus: point });\n\n    controller\n      .command(Commands.replaceNodeByKey, blocks[0].key, refblock)\n      .command(Commands.select, selection)\n      .command(\n        commands.setRefBlockInjectionByDocKey,\n        data.docKey!,\n        {\n          status: RefBlockStatus.loading,\n        },\n      )\n      .command(Commands.focus);\n  });\n}\n"],"file":"upgradeToRefBlock.js"}