"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  setRefBlockInjectionByDocKey: true,
  setRefBlockInjectionByKey: true
};
Object.defineProperty(exports, "setRefBlockInjectionByDocKey", {
  enumerable: true,
  get: function () {
    return _commands.setRefBlockInjectionByDocKey;
  }
});
Object.defineProperty(exports, "setRefBlockInjectionByKey", {
  enumerable: true,
  get: function () {
    return _commands.setRefBlockInjectionByKey;
  }
});

var _insertRefBlock = require("./insertRefBlock");

Object.keys(_insertRefBlock).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _insertRefBlock[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _insertRefBlock[key];
    }
  });
});

var _upgradeToRefBlock = require("./upgradeToRefBlock");

Object.keys(_upgradeToRefBlock).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _upgradeToRefBlock[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _upgradeToRefBlock[key];
    }
  });
});

var _downgradeToBlocks = require("./downgradeToBlocks");

Object.keys(_downgradeToBlocks).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _downgradeToBlocks[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _downgradeToBlocks[key];
    }
  });
});

var _updateRefBlockData = require("./updateRefBlockData");

Object.keys(_updateRefBlockData).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _updateRefBlockData[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _updateRefBlockData[key];
    }
  });
});

var _commands = require("../../common/commands");
//# sourceMappingURL=index.js.map