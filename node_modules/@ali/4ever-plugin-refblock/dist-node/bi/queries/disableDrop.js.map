{"version":3,"sources":["../../../../src/bi/queries/disableDrop.ts"],"names":["createDisableDrop","cannotDropAtRefBlockTip","cannotDragRefBlockToTip","disableNodeInRefBlock","disableRefBlockDropTo","containsDisabledNode","controller","dragBlock","findDescendant","descendant","containsRefBlock","RefBlock","isRefBlock","descendent","disableDrop","dropBlock","value","message","error"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEe,SAASA,iBAAT;AACb;AACAC,uBAFa;AAGb;AACAC,uBAJa;AAKb;AACAC,qBANa;AAOb;AACAC,qBARa,EASb;AACA,WAASC,oBAAT,CAA8BC,UAA9B,EAAsDC,SAAtD,EAAwE;AACtE,WACEJ,qBAAqB,CAACG,UAAD,EAAaC,SAAb,CAArB,IACAA,SAAS,CAACC,cAAV,CAA0BC,UAAD,IACvBN,qBAAqB,CAACG,UAAD,EAAaG,UAAb,CADvB,CAFF;AAMD;;AAED,WAASC,gBAAT,CAA0BH,SAA1B,EAA4C;AAC1C,WACEI,gBAASC,UAAT,CAAoBL,SAApB,KACAA,SAAS,CAACC,cAAV,CAA0BK,UAAD,IAAgBF,gBAASC,UAAT,CAAoBC,UAApB,CAAzC,CAFF;AAID;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,SAAO,SAASC,WAAT,CACLR,UADK,EAELC,SAFK,EAGLQ,SAHK,EAIL;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAYV,UAAlB,CADA,CAEA;;AACA,QACEF,qBAAqB,CAACW,SAAD,EAAYT,UAAZ,CAArB,IACAI,gBAAgB,CAACH,SAAD,CAFlB,EAGE;AACAU,wBAAQC,KAAR,CAAchB,uBAAd;;AACA,aAAO,IAAP;AACD,KATD,CAWA;;;AACA,QACE,yBAAac,KAAb,EAAoBD,SAApB,KACAV,oBAAoB,CAACC,UAAD,EAAaC,SAAb,CAFtB,EAGE;AACAU,wBAAQC,KAAR,CAAcjB,uBAAd;;AACA,aAAO,IAAP;AACD;;AAED,WAAO,iCAAqBe,KAArB,EAA4BD,SAA5B,CAAP;AACD,GAzBD;AA0BD","sourcesContent":["import { Controller, Node, Block } from '@ali/4ever-cangjie';\nimport { message } from '@ali/we-design';\nimport RefBlock from '../../mo/models';\nimport { isInReadOnlyRefBlock, isInRefBlock } from '../../utils/logic';\n\nexport default function createDisableDrop(\n  /** 无法 drop 到引用块文案 */\n  cannotDropAtRefBlockTip: string,\n  /** 无法 drag 引用块到某个节点文案 */\n  cannotDragRefBlockToTip: string,\n  /** 是否节点不允许存在于引用块 */\n  disableNodeInRefBlock: (controller: Controller, node: Node) => boolean,\n  /** 是否引用块无法被 drop 到某个节点 */\n  disableRefBlockDropTo: (dropBlock: Block, controller: Controller) => boolean,\n) {\n  function containsDisabledNode(controller: Controller, dragBlock: Block) {\n    return (\n      disableNodeInRefBlock(controller, dragBlock) ||\n      dragBlock.findDescendant((descendant) =>\n        disableNodeInRefBlock(controller, descendant),\n      )\n    );\n  }\n\n  function containsRefBlock(dragBlock: Block) {\n    return (\n      RefBlock.isRefBlock(dragBlock) ||\n      dragBlock.findDescendant((descendent) => RefBlock.isRefBlock(descendent))\n    );\n  }\n\n  /**\n   * 禁止放置\n   * - 尝试拖动同步块到引用块\n   * - 尝试拖动引用块到引用块\n   * - 尝试拖动引用块到模板按钮\n   * @param dragBlock\n   * @param dropBlock\n   * @returns\n   */\n  return function disableDrop(\n    controller: Controller,\n    dragBlock: Block,\n    dropBlock: Block,\n  ) {\n    const { value } = controller;\n    // Drag RefBlock to ...\n    if (\n      disableRefBlockDropTo(dropBlock, controller) &&\n      containsRefBlock(dragBlock)\n    ) {\n      message.error(cannotDragRefBlockToTip);\n      return true;\n    }\n\n    // Drop Something at RefBlock\n    if (\n      isInRefBlock(value, dropBlock) &&\n      containsDisabledNode(controller, dragBlock)\n    ) {\n      message.error(cannotDropAtRefBlockTip);\n      return true;\n    }\n\n    return isInReadOnlyRefBlock(value, dropBlock);\n  };\n}\n"],"file":"disableDrop.js"}