interface RefBlockWrapperProps {
    isFocused?: boolean;
    $loading?: boolean;
    isHost?: boolean;
}
export declare const RefBlockWrapper: import("styled-components").StyledComponent<"div", any, RefBlockWrapperProps, never>;
export declare const ToolbarWrapper: import("styled-components").StyledComponent<"div", any, {
    duration: number;
}, never>;
export declare const Toolbar: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ToolbarColumn: import("styled-components").StyledComponent<"div", any, {
    highlightOnHover?: boolean | undefined;
}, never>;
export declare const ListItemIconWrapper: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ListItemContent: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const CopyFrom: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const CopyFromPlaceholder: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ListItemPlaceholder: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const ListItem: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const Title: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const DropdownOverlay: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const Divider: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const IconButtonWrapper: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const IconButtonTitle: import("styled-components").StyledComponent<"span", any, {}, never>;
export {};
