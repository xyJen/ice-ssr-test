import * as React from 'react';
import { RenderNodeProps, Controller } from '@ali/4ever-cangjie';
import { RefBlockStatus } from '../mo/models';
import type { ReferenceItem, RefBlockLocale } from '../utils/types';
interface RefBlockProps {
    /** 是否 focus 在引用块 */
    isFocused: boolean;
    /** 编辑器节点渲染 props */
    renderProps: RenderNodeProps;
    /** 只读模式 */
    readOnly: boolean;
    /** 国际化文案 */
    locale: RefBlockLocale;
    /** 工具栏动画持续时间 */
    toolbarAnimationDuration?: number;
    /** 是否开启工具栏 */
    enableToolbar?: () => boolean;
    /** 获得引用列表 */
    getReferenceList: (id: string) => Promise<ReferenceItem[]>;
    /** 点击取消引用 */
    detach: (docKey: string, uuid: string) => Promise<void>;
    /** 获得当前文档 key */
    getDocKey: () => string;
    /** 渲染其他状态的引用块 */
    renderRefBlockInOtherStates: (props: RenderNodeProps, status: RefBlockStatus) => React.ReactNode;
    /** 挂载引用块时的操作 */
    onRefBlockMounted?: (controller: Controller, nodeKey: string, uuid: string) => void;
    /** 拷贝引用块 */
    copyRefBlock: () => void;
    renderLoading?: (props: RenderNodeProps) => JSX.Element | null;
    /** 获得文档链接 */
    getURL?: (url: string, id: string) => string;
}
declare const RefBlock: React.FC<RefBlockProps>;
export default RefBlock;
