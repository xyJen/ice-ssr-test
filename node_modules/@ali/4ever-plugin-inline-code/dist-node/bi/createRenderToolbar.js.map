{"version":3,"sources":["../../../src/bi/createRenderToolbar.tsx"],"names":["createRenderToolbar","locale","props","controller","buttonName","extraProps","ItemKey","inlineCode"],"mappings":";;;;;;;;;AAAA;;AACA;;AAGe,SAASA,mBAAT,CACbC,MADa,EAEE;AAEf,SAAO,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAE5B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6BH,KAAnC;;AAEA,QAAIE,UAAU,KAAKE,uBAAQC,UAA3B,EAAuC;AACrC,aAAO,4CAAuB;AAC5BJ,QAAAA,UAD4B;AAE5BF,QAAAA,MAF4B;AAG5B,WAAGI;AAHyB,OAAvB,CAAP;AAKD;;AAED,WAAO,IAAP;AACD,GAbD;AAcD","sourcesContent":["import { RenderToolbar, ItemKey } from '@ali/4ever-component';\nimport createInlineCodeButton from './components/next/createInlineCodeToolbarButton';\nimport { ILocale } from './types';\n\nexport default function createRenderToolbar(\n  locale?: ILocale,\n): RenderToolbar {\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    if (buttonName === ItemKey.inlineCode) {\n      return createInlineCodeButton({\n        controller,\n        locale,\n        ...extraProps,\n      });\n    }\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}