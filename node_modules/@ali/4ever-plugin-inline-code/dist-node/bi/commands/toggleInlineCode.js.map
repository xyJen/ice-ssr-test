{"version":3,"sources":["../../../../src/bi/commands/toggleInlineCode.ts"],"names":["toggleInlineCode","controller","value","selection","document","isCollapsed","query","command","toggleInlineCodeMark","isNewInlineCode","Commands","unwrapInline","type","InlineCode","TYPE","wrapInline","moveToEndOfInline"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEe,SAASA,gBAAT,CAA0BC,UAA1B,EAA8D;AAC3E,QAAM;AAAEC,IAAAA;AAAF,MAAYD,UAAlB;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BF,KAAhC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBF,SAAxB;AACA,MAAI,CAACA,SAAL,EAAgB,OAAOF,UAAP,CAJ2D,CAM3E;;AACA,MAAIA,UAAU,CAACK,KAAX,CAAiB,iBAAjB,CAAJ,EAAyC;AACvC,WAAOL,UAAU,CAACM,OAAX,CAAmBC,6BAAnB,CAAP;AACD;;AAED,QAAMC,eAAe,GAAGR,UAAU,CAACK,KAAX,CAAiB,cAAjB,CAAxB,CAX2E,CAY3E;;AACA,MAAIG,eAAJ,EAAqB;AACnB,WAAOR,UAAU,CAACM,OAAX,CAAmBG,sBAASC,YAA5B,EAA0C;AAAEC,MAAAA,IAAI,EAAEC,gBAAWC;AAAnB,KAA1C,CAAP;AACD,GAf0E,CAiB3E;;;AACA,MAAI,CAACT,WAAD,IAAgB,CAACI,eAAjB,IAAoC,CAAC,wCAAmBR,UAAnB,CAAzC,EAAyE;AACvE,WAAOA,UAAU,CACdM,OADI,CACIG,sBAASK,UADb,EACyB;AAAEH,MAAAA,IAAI,EAAEC,gBAAWC;AAAnB,KADzB,EAEJP,OAFI,CAEIG,sBAASM,iBAFb,CAAP;AAGD;;AAED,SAAOf,UAAP;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport InlineCode from '../../mo/models';\nimport toggleInlineCodeMark from '../../oldInlineCode/commands/toggleInlineCodeMark';\nimport containsInlineCode from '../utils/hasInlineOrInlineCodeMark';\n\nexport default function toggleInlineCode(controller: Controller): Controller {\n  const { value } = controller;\n  const { selection, document } = value;\n  const { isCollapsed } = selection;\n  if (!selection) return controller;\n\n  // 选区覆盖的位置为存量旧版 inline code，则取消其 mark\n  if (controller.query('isOldInlineCode')) {\n    return controller.command(toggleInlineCodeMark);\n  }\n\n  const isNewInlineCode = controller.query('isInlineCode');\n  // 选区在新版 inlineCode 中\n  if (isNewInlineCode) {\n    return controller.command(Commands.unwrapInline, { type: InlineCode.TYPE });\n  }\n\n  // expanded 选区 + 不包含任何 inlneCode 元素\n  if (!isCollapsed && !isNewInlineCode && !containsInlineCode(controller)) {\n    return controller\n      .command(Commands.wrapInline, { type: InlineCode.TYPE })\n      .command(Commands.moveToEndOfInline);\n  }\n\n  return controller;\n}\n"],"file":"toggleInlineCode.js"}