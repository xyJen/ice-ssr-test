{"version":3,"sources":["../../../../src/bi/utils/isSelectionInInlineCode.ts"],"names":["isSelectionInInlineCode","controller","value","selection","document","isCollapsed","command","Commands","select","shrinkBoundary","newSelection","newDocument","startPoint","getStart","endPoint","getEnd","startInline","getClosestInline","key","endInline","InlineCode","isInlineCode","isInline","startKey","endKey"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEe,SAASA,uBAAT,CACbC,UADa,EAEJ;AACT,QAAM;AAAEC,IAAAA;AAAF,MAAYD,UAAlB;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BF,KAAhC;AACA,MAAI,CAACC,SAAD,IAAcA,SAAS,CAACE,WAA5B,EAAyC,OAAO,KAAP,CAHhC,CAIT;;AACAJ,EAAAA,UAAU,CAACK,OAAX,CAAmBC,sBAASC,MAA5B,EAAoCL,SAAS,CAACM,cAAV,CAAyBL,QAAzB,CAApC;AACA,QAAM;AAAED,IAAAA,SAAS,EAAEO,YAAb;AAA2BN,IAAAA,QAAQ,EAAEO;AAArC,MAAqDV,UAAU,CAACC,KAAtE;AACA,QAAMU,UAAU,GAAGF,YAAY,CAACG,QAAb,CAAsBF,WAAtB,CAAnB;AACA,QAAMG,QAAQ,GAAGJ,YAAY,CAACK,MAAb,CAAoBJ,WAApB,CAAjB;AACA,QAAMK,WAAW,GAAGL,WAAW,CAACM,gBAAZ,CAA6BL,UAAU,CAACM,GAAxC,CAApB;AACA,QAAMC,SAAS,GAAGR,WAAW,CAACM,gBAAZ,CAA6BH,QAAQ,CAACI,GAAtC,CAAlB;;AACA,MACE,EAAEE,gBAAWC,YAAX,CAAwBL,WAAxB,KAAwCI,gBAAWE,QAAX,CAAoBH,SAApB,CAA1C,CADF,EAEE;AACA,WAAO,KAAP;AACD;;AACD,QAAMI,QAAQ,GAAGP,WAAW,EAAEE,GAA9B;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAED,GAA1B;AACA,SAAO,CAAC,EAAEK,QAAQ,IAAIC,MAAd,CAAD,GAAyBD,QAAQ,KAAKC,MAAtC,GAA+C,KAAtD;AACD","sourcesContent":["import { Commands, Controller } from '@ali/4ever-cangjie';\nimport InlineCode from '../../mo/models';\n\nexport default function isSelectionInInlineCode(\n  controller: Controller,\n): boolean {\n  const { value } = controller;\n  const { selection, document } = value;\n  if (!selection || selection.isCollapsed) return false;\n  // 收缩选区,当选区选择Inline Code边缘情况时，保证anchor和focus属于Inline Code节点上\n  controller.command(Commands.select, selection.shrinkBoundary(document));\n  const { selection: newSelection, document: newDocument } = controller.value;\n  const startPoint = newSelection.getStart(newDocument);\n  const endPoint = newSelection.getEnd(newDocument);\n  const startInline = newDocument.getClosestInline(startPoint.key);\n  const endInline = newDocument.getClosestInline(endPoint.key);\n  if (\n    !(InlineCode.isInlineCode(startInline) && InlineCode.isInline(endInline))\n  ) {\n    return false;\n  }\n  const startKey = startInline?.key;\n  const endKey = endInline?.key;\n  return !!(startKey && endKey) ? startKey === endKey : false;\n}\n"],"file":"isSelectionInInlineCode.js"}