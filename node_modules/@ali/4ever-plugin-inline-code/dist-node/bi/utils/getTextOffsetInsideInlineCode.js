"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getTextOffsetInsideInlineCode;

var _models = _interopRequireDefault(require("../../mo/models"));

/**
 * 首先判断Text节点的左侧/右侧是否有Inline Code
 * 如果有，则计算光标处于Inline Code左右侧Text节点的偏移量
 * @param value
 * @return
 */
function getTextOffsetInsideInlineCode(value) {
  const {
    selection
  } = value;
  if (!selection || selection.isExpanded) return null; //若当前选中点为 text 起始，则试探前后一个节点是否为 inline

  if (_models.default.isInlineCode(value.anchorInline) && selection.anchor.isTextPoint()) {
    return selection.anchor.offset;
  }

  return null;
}
//# sourceMappingURL=getTextOffsetInsideInlineCode.js.map