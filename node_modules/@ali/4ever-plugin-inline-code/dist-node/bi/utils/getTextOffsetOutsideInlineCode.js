"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getTextOffsetOutsideInlineCode;

var _getCurTextNode = _interopRequireDefault(require("./getCurTextNode"));

var _models = _interopRequireDefault(require("../../mo/models"));

/**
 * 首先判断Text节点的左侧/右侧是否有Inline Code
 * 如果有，则计算光标处于Inline Code左右侧Text节点的偏移量
 * @param value
 * @param side
 * @return
 */
function getTextOffsetOutsideInlineCode(value, side) {
  const {
    selection,
    document
  } = value;
  if (!selection || selection.isExpanded) return null; //若当前选中点为 text 起始，则试探前后一个节点是否为 inline

  const curTextNode = (0, _getCurTextNode.default)(value);
  if (!curTextNode) return null; // 试探后一个节点是否为Inline Code Node

  const maybeInlineNode = side === 'left' ? document.getNextSibling(curTextNode.key) : document.getPreviousSibling(curTextNode.key);

  if (_models.default.isInlineCode(maybeInlineNode)) {
    const anchor = selection.anchor;
    return anchor.offset;
  }

  return null;
}
//# sourceMappingURL=getTextOffsetOutsideInlineCode.js.map