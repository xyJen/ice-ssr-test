"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInlineCode = isInlineCode;

var _models = _interopRequireDefault(require("../../mo/models"));

var _isInlineCode = require("../../oldInlineCode/queries/isInlineCode");

/**
 * 判断选区是否在 InlineCode 内
 * @param controller
 * @returns
 */
function isInlineCode(controller) {
  const {
    selection,
    document
  } = controller.value;
  const {
    anchor,
    focus
  } = selection; // 兼容旧版，根据 common mark 来判断

  if ((0, _isInlineCode.isInlineCode)(controller)) {
    return true;
  } // 新版 inline code
  // collapsed 情况


  if (selection.isCollapsed) {
    const inline = document.getClosestInline(anchor.key);

    if (inline?.type === _models.default.TYPE && anchor.isInNode(inline)) {
      return true;
    }
  } // 选区 expanded 时，若都在同一 inlineCode 内，则返回 true


  const {
    anchorInline,
    focusInline
  } = controller.value;

  if (anchorInline && focusInline) {
    return anchorInline.key === focusInline.key && anchorInline.type === _models.default.TYPE;
  }

  return false;
}
//# sourceMappingURL=isInlineCode.js.map