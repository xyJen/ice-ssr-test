{"version":3,"sources":["../../../../src/bi/handlers/createOnKeyDown.ts"],"names":["createOnKeyDown","hotKey","isInlineCodeHotkey","isLeftHotkey","isRightHotkey","onKeyDown","event","controller","next","value","offset","curTextNode","preventDefault","inline","anchorInline","prevNode","document","getPreviousSibling","key","command","Commands","moveToEndOfNode","moveToStartOfNode","text","length","nextNode","getNextSibling","stopPropagation","commands","toggleInlineCode"],"mappings":"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","sourcesContent":["import { isKeyHotkey } from 'is-hotkey';\nimport { Commands, Plugin } from '@ali/4ever-cangjie';\nimport { commands } from '../commands';\nimport isCursorInInlineCode from '../utils/isCursorInInlineCode';\nimport getTextOffsetInsideInlineCode from '../utils/getTextOffsetInsideInlineCode';\nimport getCurTextNode from '../utils/getCurTextNode';\nimport getTextOffsetOutsideInlineCode from '../utils/getTextOffsetOutsideInlineCode';\n\nexport default function createOnKeyDown(hotKey: string): Plugin['onKeyDown'] {\n  const isInlineCodeHotkey = isKeyHotkey(hotKey);\n  const isLeftHotkey = isKeyHotkey('left');\n  const isRightHotkey = isKeyHotkey('right');\n  return function onKeyDown(event, controller, next) {\n    /**\n     * 两种情况需要拦截默认行为：\n     * 1.从左右侧text node进入Inline Node节点时，需设置anchor与focus至inline Node的首尾部\n     * 2.从Inline Node节点左右侧移出时，需设置anchor与focus至前后Text Node的首尾部\n     */\n    const { value } = controller;\n    if (isLeftHotkey(event)) {\n      // 情况2：\n      if (isCursorInInlineCode(value)) {\n        const offset = getTextOffsetInsideInlineCode(value);\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === 0) {\n          event.preventDefault();\n          // 选区闭合，获取anchorInline即可，且不为null\n          const inline = controller.value.anchorInline!;\n          const prevNode = controller.value.document.getPreviousSibling(\n            inline.key,\n          )!;\n          return controller.command(Commands.moveToEndOfNode, prevNode);\n        } else if (offset === 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToStartOfNode, curTextNode);\n        }\n      } else {\n        const offset = getTextOffsetOutsideInlineCode(value, 'right');\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === 0) {\n          event.preventDefault();\n          const prevNode = controller.value.document.getPreviousSibling(\n            curTextNode.key,\n          )!;\n          return controller.command(Commands.moveToEndOfNode, prevNode);\n        } else if (offset === 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToStartOfNode, curTextNode);\n        }\n      }\n    }\n    //和left同理\n    if (isRightHotkey(event)) {\n      if (isCursorInInlineCode(value)) {\n        const offset = getTextOffsetInsideInlineCode(value);\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === curTextNode.text.length) {\n          event.preventDefault();\n          const inline = controller.value.anchorInline!;\n          const nextNode = controller.value.document.getNextSibling(\n            inline.key,\n          )!;\n          return controller.command(Commands.moveToStartOfNode, nextNode);\n        } else if (offset === curTextNode.text.length - 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToEndOfNode, curTextNode);\n        }\n      } else {\n        const offset = getTextOffsetOutsideInlineCode(value, 'left');\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === curTextNode.text.length) {\n          event.preventDefault();\n          const nextNode = controller.value.document.getNextSibling(\n            curTextNode.key,\n          )!;\n          return controller.command(Commands.moveToStartOfNode, nextNode);\n        } else if (offset === curTextNode.text.length - 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToEndOfNode, curTextNode);\n        }\n      }\n    }\n\n    if (isInlineCodeHotkey(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      return controller.command(commands.toggleInlineCode);\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnKeyDown.js"}