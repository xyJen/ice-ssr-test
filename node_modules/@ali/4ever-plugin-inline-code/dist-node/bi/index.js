"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createOnKeyDown = _interopRequireDefault(require("./handlers/createOnKeyDown"));

var _mo = _interopRequireDefault(require("../mo"));

var _renderNode = _interopRequireDefault(require("./renderNode"));

var _onCangjieInput = _interopRequireDefault(require("./handlers/onCangjieInput"));

var _commands = require("./commands");

var _onAction = _interopRequireDefault(require("./handlers/onAction"));

var _oldInlineCode = _interopRequireDefault(require("../oldInlineCode"));

var _queries = require("./queries");

var _createRenderToolbar = _interopRequireDefault(require("./createRenderToolbar"));

var _createToolbar = _interopRequireDefault(require("./createToolbar"));

var _actions = require("./actions");

// @ts-ignore
const biFactory = configs => {
  const hotKey = 'mod+e';
  const gray = configs.inlineCode?.gray;
  const inlineCodeMo = (0, _mo.default)({}); // 未命中灰度的情况,仍然使用旧InlineCode

  if (!gray) {
    return {
      renderNode: _renderNode.default,
      renderToolbar: (0, _createRenderToolbar.default)(configs.inlineCode?.locale),
      toolbar: (0, _createToolbar.default)(configs.inlineCode),
      ...inlineCodeMo,
      ...(0, _oldInlineCode.default)()
    };
  } // TODO: 命中灰度时，createOldInlineCodePlugin 里的 queries 和 cmd + e 取消旧的 inlineCode 的逻辑也许要保留


  return { ...inlineCodeMo,
    renderNode: _renderNode.default,
    renderToolbar: (0, _createRenderToolbar.default)(configs.inlineCode?.locale),
    toolbar: (0, _createToolbar.default)(configs.inlineCode),
    commands: _commands.commands,
    queries: _queries.queries,
    actions: _actions.actions,
    onCangjieInput: _onCangjieInput.default,
    onKeyDown: (0, _createOnKeyDown.default)(hotKey || ''),
    onAction: _onAction.default
  };
};

var _default = biFactory;
exports.default = _default;
//# sourceMappingURL=index.js.map