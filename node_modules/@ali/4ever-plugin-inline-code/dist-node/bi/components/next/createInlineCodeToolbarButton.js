"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createInlineCodeButton;

var React = _interopRequireWildcard(require("react"));

var _everComponent = require("@ali/4ever-component");

var _role = require("../../../role");

var _actions = require("../../actions");

var _everCangjie = require("@ali/4ever-cangjie");

var _hasInlineOrInlineCodeMark = _interopRequireDefault(require("../../utils/hasInlineOrInlineCodeMark"));

const _createElement = /*#__PURE__*/React.createElement;

const handleClick = controller => {
  controller.run('onAction', (0, _actions.toggleInlineCode)());
};

const MOD = _everCangjie.environment.IS_MAC ? 'âŒ˜' : 'Ctrl';

var _ref = /*#__PURE__*/_createElement(_everComponent.IconCode, null);

function createInlineCodeButton(props) {
  const {
    controller,
    locale,
    icon,
    title,
    tooltip,
    badgeDot,
    disabled
  } = props;
  const isInlineCode = controller.query('isInlineCode');
  const isDisabled = disabled || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInMention') || controller.query('isSelectionInLink') || controller.query('isSelectionInListSymbol') || controller.query('isSelectionInLinkCard') || !isInlineCode && (0, _hasInlineOrInlineCodeMark.default)(controller);
  const buttonConfig = {
    icon: icon || _ref,
    onClick: handleClick,
    title: title || locale?.buttonTitle,
    tooltip: {
      title: title || locale?.buttonTitle,
      shortCut: `${MOD}+e`,
      description: `Markdown: \`${locale?.text || 'Text'}\` ${locale?.space || 'Space'}`,
      ...tooltip
    },
    badgeDot,
    disabled: isDisabled,
    role: _role.InlineCodeRole.inlineCode,
    testid: "bi-toolbar-inline-code",
    active: isInlineCode
  };
  return buttonConfig;
}
//# sourceMappingURL=createInlineCodeToolbarButton.js.map