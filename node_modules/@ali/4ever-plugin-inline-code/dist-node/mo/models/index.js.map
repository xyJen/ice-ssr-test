{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["InlineCode","Inline","create","properties","Error","isInlineCode","type","TYPE","maybeInlineCode","isInline"],"mappings":";;;;;;;AAAA;;AAMe,MAAMA,UAAN,SAAyBC,mBAAzB,CAAgC;AAG7C,SAAOC,MAAP,CAAcC,UAAd,EAAsE;AACpE,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,QAAIJ,UAAU,CAACK,YAAX,CAAwBF,UAAxB,CAAJ,EAAyC;AACvC,aAAOA,UAAP;AACD;;AACD,WAAO,MAAMD,MAAN,CAAa,EAClB,GAAGC,UADe;AAElBG,MAAAA,IAAI,EAAEN,UAAU,CAACO;AAFC,KAAb,CAAP;AAID;;AAED,SAAOF,YAAP,CAAoBG,eAApB,EAAyE;AACvE,WACEP,oBAAOQ,QAAP,CAAgBD,eAAhB,KACAA,eAAe,CAACF,IAAhB,KAAyBN,UAAU,CAACO,IAFtC;AAID;;AArB4C;;;AAA1BP,U,CACZO,I,GAAO,Y","sourcesContent":["import { Inline, InlineProperties } from '@ali/4ever-cangjie';\nexport interface InlineCodeProperties {\n  data?: InlineProperties['data'];\n  nodes?: InlineProperties['nodes'];\n}\n\nexport default class InlineCode extends Inline {\n  static TYPE = 'inlineCode';\n\n  static create(properties: InlineCode | InlineCodeProperties | string) {\n    if (typeof properties === 'string') {\n      throw new Error('`InlineCode.create` does not accept string');\n    }\n    if (InlineCode.isInlineCode(properties)) {\n      return properties;\n    }\n    return super.create({\n      ...properties,\n      type: InlineCode.TYPE,\n    }) as InlineCode;\n  }\n\n  static isInlineCode(maybeInlineCode: any): maybeInlineCode is InlineCode {\n    return (\n      Inline.isInline(maybeInlineCode) &&\n      maybeInlineCode.type === InlineCode.TYPE\n    );\n  }\n}\n"],"file":"index.js"}