{"version":3,"sources":["../../../../src/mo/serializer/index.ts"],"names":["jsonMLToValue","valueToJsonML","markdownToHTML","htmlToMarkdown","createSerializer","createServerSerializationPlugin"],"mappings":"AACA,OAAOA,aAAP;AACA,OAAOC,aAAP;AAEA,OAAOC,cAAP;AACA,OAAOC,cAAP;AAEA,eAAe,SAASC,gBAAT,GAAmD;AAChE;AACA;AACA;AACA;AACA;AACA,SAAO;AACLJ,IAAAA,aAAa,EAAbA,aADK;AAELC,IAAAA,aAAa,EAAbA,aAFK;AAGL;AACA;AACAC,IAAAA,cAAc,EAAdA,cALK;AAMLC,IAAAA,cAAc,EAAdA;AANK,GAAP;AAQD;AAED,OAAO,SAASE,+BAAT,GAAwE;AAC7E,SAAO;AACLJ,IAAAA,aAAa,EAAbA,aADK;AAELD,IAAAA,aAAa,EAAbA;AAFK,GAAP;AAID","sourcesContent":["import { MoSerializationPlugin, MoServerSerializationPlugin } from '@ali/4ever-cangjie';\nimport jsonMLToValue from './jsonMLToValue';\nimport valueToJsonML from './valueToJsonML';\nimport htmlToJsonML from './htmlToJsonML';\nimport markdownToHTML from './markdownToHTML';\nimport htmlToMarkdown from './htmlToMarkdown';\n\nexport default function createSerializer(): MoSerializationPlugin {\n  // inlineCode灰度过程中：\n  // 关闭所有新InlineCode入口:编辑、粘贴html、粘贴markdown\n  // 但无论新旧，均需具有新InlineCode模型的解析能力:故保留jsonMLToValue&valueToJsonML\n  // 关闭新inlineCode的粘贴html入口:去除htmlToJsonML\n  // 保留markdownToHTML：新旧InlineCode的markdown解析格式是一致的，复用即可\n  return {\n    jsonMLToValue,\n    valueToJsonML,\n    //TODO inline-code全量后需要将该入口打开\n    // htmlToJsonML,\n    markdownToHTML,\n    htmlToMarkdown,\n  };\n}\n\nexport function createServerSerializationPlugin(): MoServerSerializationPlugin {\n  return {\n    valueToJsonML,\n    jsonMLToValue,\n  };\n}\n"],"file":"index.js"}