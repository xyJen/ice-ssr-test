{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Inline","InlineCode","create","properties","Error","isInlineCode","type","TYPE","maybeInlineCode","isInline"],"mappings":";;AAAA,SAASA,MAAT,QAAyC,oBAAzC;;IAMqBC,U;;;;;;;aAGZC,M,GAAP,gBAAcC,UAAd,EAAsE;AACpE,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,QAAIH,UAAU,CAACI,YAAX,CAAwBF,UAAxB,CAAJ,EAAyC;AACvC,aAAOA,UAAP;AACD;;AACD,mBAAaD,MAAb,yBACKC,UADL;AAEEG,MAAAA,IAAI,EAAEL,UAAU,CAACM;AAFnB;AAID,G;;aAEMF,Y,GAAP,sBAAoBG,eAApB,EAAyE;AACvE,WACER,MAAM,CAACS,QAAP,CAAgBD,eAAhB,KACAA,eAAe,CAACF,IAAhB,KAAyBL,UAAU,CAACM,IAFtC;AAID,G;;;EArBqCP,M;;AAAnBC,U,CACZM,I,GAAO,Y;SADKN,U","sourcesContent":["import { Inline, InlineProperties } from '@ali/4ever-cangjie';\nexport interface InlineCodeProperties {\n  data?: InlineProperties['data'];\n  nodes?: InlineProperties['nodes'];\n}\n\nexport default class InlineCode extends Inline {\n  static TYPE = 'inlineCode';\n\n  static create(properties: InlineCode | InlineCodeProperties | string) {\n    if (typeof properties === 'string') {\n      throw new Error('`InlineCode.create` does not accept string');\n    }\n    if (InlineCode.isInlineCode(properties)) {\n      return properties;\n    }\n    return super.create({\n      ...properties,\n      type: InlineCode.TYPE,\n    }) as InlineCode;\n  }\n\n  static isInlineCode(maybeInlineCode: any): maybeInlineCode is InlineCode {\n    return (\n      Inline.isInline(maybeInlineCode) &&\n      maybeInlineCode.type === InlineCode.TYPE\n    );\n  }\n}\n"],"file":"index.js"}