{"version":3,"sources":["../../../../src/bi/utils/isSelectionInInlineCode.ts"],"names":["Commands","InlineCode","isSelectionInInlineCode","controller","value","selection","document","isCollapsed","command","select","shrinkBoundary","newSelection","newDocument","startPoint","getStart","endPoint","getEnd","startInline","getClosestInline","key","endInline","isInlineCode","isInline","startKey","endKey"],"mappings":"AAAA,SAASA,QAAT,QAAqC,oBAArC;AACA,OAAOC,UAAP;AAEA,eAAe,SAASC,uBAAT,CACbC,UADa,EAEJ;AAAA,MACDC,KADC,GACSD,UADT,CACDC,KADC;AAAA,MAEDC,SAFC,GAEuBD,KAFvB,CAEDC,SAFC;AAAA,MAEUC,QAFV,GAEuBF,KAFvB,CAEUE,QAFV;AAGT,MAAI,CAACD,SAAD,IAAcA,SAAS,CAACE,WAA5B,EAAyC,OAAO,KAAP,CAHhC,CAIT;;AACAJ,EAAAA,UAAU,CAACK,OAAX,CAAmBR,QAAQ,CAACS,MAA5B,EAAoCJ,SAAS,CAACK,cAAV,CAAyBJ,QAAzB,CAApC;AALS,0BAMkDH,UAAU,CAACC,KAN7D;AAAA,MAMUO,YANV,qBAMDN,SANC;AAAA,MAMkCO,WANlC,qBAMwBN,QANxB;AAOT,MAAMO,UAAU,GAAGF,YAAY,CAACG,QAAb,CAAsBF,WAAtB,CAAnB;AACA,MAAMG,QAAQ,GAAGJ,YAAY,CAACK,MAAb,CAAoBJ,WAApB,CAAjB;AACA,MAAMK,WAAW,GAAGL,WAAW,CAACM,gBAAZ,CAA6BL,UAAU,CAACM,GAAxC,CAApB;AACA,MAAMC,SAAS,GAAGR,WAAW,CAACM,gBAAZ,CAA6BH,QAAQ,CAACI,GAAtC,CAAlB;;AACA,MACE,EAAElB,UAAU,CAACoB,YAAX,CAAwBJ,WAAxB,KAAwChB,UAAU,CAACqB,QAAX,CAAoBF,SAApB,CAA1C,CADF,EAEE;AACA,WAAO,KAAP;AACD;;AACD,MAAMG,QAAQ,GAAGN,WAAH,oBAAGA,WAAW,CAAEE,GAA9B;AACA,MAAMK,MAAM,GAAGJ,SAAH,oBAAGA,SAAS,CAAED,GAA1B;AACA,SAAO,CAAC,EAAEI,QAAQ,IAAIC,MAAd,CAAD,GAAyBD,QAAQ,KAAKC,MAAtC,GAA+C,KAAtD;AACD","sourcesContent":["import { Commands, Controller } from '@ali/4ever-cangjie';\nimport InlineCode from '../../mo/models';\n\nexport default function isSelectionInInlineCode(\n  controller: Controller,\n): boolean {\n  const { value } = controller;\n  const { selection, document } = value;\n  if (!selection || selection.isCollapsed) return false;\n  // 收缩选区,当选区选择Inline Code边缘情况时，保证anchor和focus属于Inline Code节点上\n  controller.command(Commands.select, selection.shrinkBoundary(document));\n  const { selection: newSelection, document: newDocument } = controller.value;\n  const startPoint = newSelection.getStart(newDocument);\n  const endPoint = newSelection.getEnd(newDocument);\n  const startInline = newDocument.getClosestInline(startPoint.key);\n  const endInline = newDocument.getClosestInline(endPoint.key);\n  if (\n    !(InlineCode.isInlineCode(startInline) && InlineCode.isInline(endInline))\n  ) {\n    return false;\n  }\n  const startKey = startInline?.key;\n  const endKey = endInline?.key;\n  return !!(startKey && endKey) ? startKey === endKey : false;\n}\n"],"file":"isSelectionInInlineCode.js"}