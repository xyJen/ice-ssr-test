import InlineCode from "../../mo/models";
import { isInlineCode as isOldInlineCode } from "../../oldInlineCode/queries/isInlineCode";
/**
 * 判断选区是否在 InlineCode 内
 * @param controller
 * @returns
 */

export function isInlineCode(controller) {
  var _controller$value = controller.value,
      selection = _controller$value.selection,
      document = _controller$value.document;
  var anchor = selection.anchor,
      focus = selection.focus; // 兼容旧版，根据 common mark 来判断

  if (isOldInlineCode(controller)) {
    return true;
  } // 新版 inline code
  // collapsed 情况


  if (selection.isCollapsed) {
    var inline = document.getClosestInline(anchor.key);

    if ((inline == null ? void 0 : inline.type) === InlineCode.TYPE && anchor.isInNode(inline)) {
      return true;
    }
  } // 选区 expanded 时，若都在同一 inlineCode 内，则返回 true


  var _controller$value2 = controller.value,
      anchorInline = _controller$value2.anchorInline,
      focusInline = _controller$value2.focusInline;

  if (anchorInline && focusInline) {
    return anchorInline.key === focusInline.key && anchorInline.type === InlineCode.TYPE;
  }

  return false;
}
//# sourceMappingURL=isInlineCode.js.map