import _extends from "@babel/runtime/helpers/extends";
import createOnKeyDown from "./handlers/createOnKeyDown";
import inlineCodeMoFactory from "../mo";
import renderNode from "./renderNode";
import onCangjieInput from "./handlers/onCangjieInput";
import { commands } from "./commands";
import onAction from "./handlers/onAction";
import { default as createOldInlineCodePlugin } from "../oldInlineCode";
import { queries } from "./queries";
import createRenderToolbar from "./createRenderToolbar";
import createToolbar from "./createToolbar";
import { actions } from "./actions"; // @ts-ignore

var biFactory = function biFactory(configs) {
  var _configs$inlineCode, _configs$inlineCode3;

  var hotKey = 'mod+e';
  var gray = (_configs$inlineCode = configs.inlineCode) == null ? void 0 : _configs$inlineCode.gray;
  var inlineCodeMo = inlineCodeMoFactory({}); // 未命中灰度的情况,仍然使用旧InlineCode

  if (!gray) {
    var _configs$inlineCode2;

    return _extends({
      renderNode: renderNode,
      renderToolbar: createRenderToolbar((_configs$inlineCode2 = configs.inlineCode) == null ? void 0 : _configs$inlineCode2.locale),
      toolbar: createToolbar(configs.inlineCode)
    }, inlineCodeMo, createOldInlineCodePlugin());
  } // TODO: 命中灰度时，createOldInlineCodePlugin 里的 queries 和 cmd + e 取消旧的 inlineCode 的逻辑也许要保留


  return _extends({}, inlineCodeMo, {
    renderNode: renderNode,
    renderToolbar: createRenderToolbar((_configs$inlineCode3 = configs.inlineCode) == null ? void 0 : _configs$inlineCode3.locale),
    toolbar: createToolbar(configs.inlineCode),
    commands: commands,
    queries: queries,
    actions: actions,
    onCangjieInput: onCangjieInput,
    onKeyDown: createOnKeyDown(hotKey || ''),
    onAction: onAction
  });
};

export default biFactory;
//# sourceMappingURL=index.js.map