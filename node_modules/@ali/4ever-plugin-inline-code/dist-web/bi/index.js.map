{"version":3,"sources":["../../../src/bi/index.ts"],"names":["createOnKeyDown","inlineCodeMoFactory","renderNode","onCangjieInput","commands","onAction","default","createOldInlineCodePlugin","queries","createRenderToolbar","createToolbar","actions","biFactory","configs","hotKey","gray","inlineCode","inlineCodeMo","renderToolbar","locale","toolbar","onKeyDown"],"mappings":";AACA,OAAOA,eAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,SAASC,QAAT;AACA,OAAOC,QAAP;AACA,SAASC,OAAO,IAAIC,yBAApB;AACA,SAASC,OAAT;AACA,OAAOC,mBAAP;AACA,OAAOC,aAAP;AAEA,SAASC,OAAT,oB,CACA;;AACA,IAAMC,SAAoB,GAAG,SAAvBA,SAAuB,CAACC,OAAD,EAAa;AAAA;;AACxC,MAAMC,MAAM,GAAG,OAAf;AAEA,MAAMC,IAAa,0BAAGF,OAAO,CAACG,UAAX,qBAAG,oBAAoBD,IAA1C;AACA,MAAME,YAAY,GAAGhB,mBAAmB,CAAC,EAAD,CAAxC,CAJwC,CAKxC;;AACA,MAAI,CAACc,IAAL,EAAW;AAAA;;AACT;AACEb,MAAAA,UAAU,EAAEA,UADd;AAEEgB,MAAAA,aAAa,EAAET,mBAAmB,yBAAEI,OAAO,CAACG,UAAV,qBAAC,qBAA4CG,MAA7C,CAFpC;AAGEC,MAAAA,OAAO,EAAEV,aAAa,CAACG,OAAO,CAACG,UAAT;AAHxB,OAIKC,YAJL,EAKKV,yBAAyB,EAL9B;AAOD,GAduC,CAgBxC;;;AACA,sBACKU,YADL;AAEEf,IAAAA,UAAU,EAAEA,UAFd;AAGEgB,IAAAA,aAAa,EAAET,mBAAmB,yBAAEI,OAAO,CAACG,UAAV,qBAAC,qBAA4CG,MAA7C,CAHpC;AAIEC,IAAAA,OAAO,EAAEV,aAAa,CAACG,OAAO,CAACG,UAAT,CAJxB;AAKEZ,IAAAA,QAAQ,EAARA,QALF;AAMEI,IAAAA,OAAO,EAAPA,OANF;AAOEG,IAAAA,OAAO,EAAPA,OAPF;AAQER,IAAAA,cAAc,EAAdA,cARF;AASEkB,IAAAA,SAAS,EAAErB,eAAe,CAACc,MAAM,IAAI,EAAX,CAT5B;AAUET,IAAAA,QAAQ,EAARA;AAVF;AAYD,CA7BD;;AA+BA,eAAeO,SAAf","sourcesContent":["import { BiFactory } from '@ali/4ever-cangjie';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport inlineCodeMoFactory from '../mo';\nimport renderNode from './renderNode';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport { commands } from './commands';\nimport onAction from './handlers/onAction';\nimport { default as createOldInlineCodePlugin } from '../oldInlineCode';\nimport { queries } from './queries';\nimport createRenderToolbar from './createRenderToolbar';\nimport createToolbar from './createToolbar';\nimport type { IInlineCodeConfigs } from './types';\nimport { actions } from './actions';\n// @ts-ignore\nconst biFactory: BiFactory = (configs) => {\n  const hotKey = 'mod+e';\n\n  const gray: boolean = configs.inlineCode?.gray;\n  const inlineCodeMo = inlineCodeMoFactory({});\n  // 未命中灰度的情况,仍然使用旧InlineCode\n  if (!gray) {\n    return {\n      renderNode: renderNode as any,\n      renderToolbar: createRenderToolbar((configs.inlineCode as IInlineCodeConfigs)?.locale),\n      toolbar: createToolbar(configs.inlineCode as IInlineCodeConfigs),\n      ...inlineCodeMo,\n      ...createOldInlineCodePlugin(),\n    };\n  }\n\n  // TODO: 命中灰度时，createOldInlineCodePlugin 里的 queries 和 cmd + e 取消旧的 inlineCode 的逻辑也许要保留\n  return {\n    ...inlineCodeMo,\n    renderNode: renderNode as any,\n    renderToolbar: createRenderToolbar((configs.inlineCode as IInlineCodeConfigs)?.locale),\n    toolbar: createToolbar(configs.inlineCode as IInlineCodeConfigs),\n    commands,\n    queries,\n    actions,\n    onCangjieInput,\n    onKeyDown: createOnKeyDown(hotKey || ''),\n    onAction,\n  };\n};\n\nexport default biFactory;\n"],"file":"index.js"}