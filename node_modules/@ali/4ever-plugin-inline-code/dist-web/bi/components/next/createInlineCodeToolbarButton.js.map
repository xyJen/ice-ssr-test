{"version":3,"sources":["../../../../../src/bi/components/next/createInlineCodeToolbarButton.tsx"],"names":["React","IconCode","InlineCodeRole","toggleInlineCode","environment","hasInlineOrInlineCodeMark","handleClick","controller","run","MOD","IS_MAC","createInlineCodeButton","props","locale","icon","title","tooltip","badgeDot","disabled","isInlineCode","query","isDisabled","buttonConfig","onClick","buttonTitle","shortCut","description","text","space","role","inlineCode","testid","active"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAA6CC,QAA7C,QAA6D,sBAA7D;AACA,SAASC,cAAT;AAEA,SAASC,gBAAT;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,yBAAP;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAA4B;AAC9CA,EAAAA,UAAU,CAACC,GAAX,CAAe,UAAf,EAA2BL,gBAAgB,EAA3C;AACD,CAFD;;AAIA,IAAMM,GAAG,GAAGL,WAAW,CAACM,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;;wBAiBkB,eAAC,QAAD,O;;AAflB,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAA6E;AAAA,MAClFL,UADkF,GACjBK,KADiB,CAClFL,UADkF;AAAA,MACtEM,MADsE,GACjBD,KADiB,CACtEC,MADsE;AAAA,MAC9DC,IAD8D,GACjBF,KADiB,CAC9DE,IAD8D;AAAA,MACxDC,KADwD,GACjBH,KADiB,CACxDG,KADwD;AAAA,MACjDC,OADiD,GACjBJ,KADiB,CACjDI,OADiD;AAAA,MACxCC,QADwC,GACjBL,KADiB,CACxCK,QADwC;AAAA,MAC9BC,QAD8B,GACjBN,KADiB,CAC9BM,QAD8B;AAE1F,MAAMC,YAAY,GAAGZ,UAAU,CAACa,KAAX,CAAiB,cAAjB,CAArB;AAEA,MAAMC,UAAU,GAAGH,QAAQ,IACtBX,UAAU,CAACa,KAAX,CAAiB,oBAAjB,CADc,IAEdb,UAAU,CAACa,KAAX,CAAiB,iBAAjB,CAFc,IAGdb,UAAU,CAACa,KAAX,CAAiB,sBAAjB,CAHc,IAIdb,UAAU,CAACa,KAAX,CAAiB,mBAAjB,CAJc,IAKdb,UAAU,CAACa,KAAX,CAAiB,yBAAjB,CALc,IAMdb,UAAU,CAACa,KAAX,CAAiB,uBAAjB,CANc,IAOb,CAACD,YAAD,IAAiBd,yBAAyB,CAACE,UAAD,CAPhD;AAUA,MAAMe,YAA0B,GAAI;AAClCR,IAAAA,IAAI,EAAEA,IAAI,QADwB;AAElCS,IAAAA,OAAO,EAAEjB,WAFyB;AAGlCS,IAAAA,KAAK,EAAEA,KAAK,KAAIF,MAAJ,oBAAIA,MAAM,CAAEW,WAAZ,CAHsB;AAIlCR,IAAAA,OAAO;AACLD,MAAAA,KAAK,EAAEA,KAAK,KAAIF,MAAJ,oBAAIA,MAAM,CAAEW,WAAZ,CADP;AAELC,MAAAA,QAAQ,EAAKhB,GAAL,OAFH;AAGLiB,MAAAA,WAAW,mBAAkB,CAAAb,MAAM,QAAN,YAAAA,MAAM,CAAEc,IAAR,KAAgB,MAAlC,YAAgD,CAAAd,MAAM,QAAN,YAAAA,MAAM,CAAEe,KAAR,KAAiB,OAAjE;AAHN,OAIFZ,OAJE,CAJ2B;AAUlCC,IAAAA,QAAQ,EAARA,QAVkC;AAWlCC,IAAAA,QAAQ,EAAEG,UAXwB;AAYlCQ,IAAAA,IAAI,EAAE3B,cAAc,CAAC4B,UAZa;AAalCC,IAAAA,MAAM,EAAE,wBAb0B;AAclCC,IAAAA,MAAM,EAAEb;AAd0B,GAApC;AAiBA,SAAOG,YAAP;AAED","sourcesContent":["import * as React from 'react';\nimport { IBasicButton, IToolbarButtonConfig, IconCode } from '@ali/4ever-component';\nimport { InlineCodeRole } from '../../../role';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { toggleInlineCode } from '../../actions';\nimport { IInlineCodeConfigs } from '../../types';\nimport { environment } from '@ali/4ever-cangjie';\nimport hasInlineOrInlineCodeMark from '../../utils/hasInlineOrInlineCodeMark';\n\nexport interface IInlineCodeButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: IInlineCodeConfigs['locale'];\n}\n\nconst handleClick = (controller: Controller) => {\n  controller.run('onAction', toggleInlineCode());\n};\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\n\nexport default function createInlineCodeButton(props: IInlineCodeButtonProps): IBasicButton {\n  const { controller, locale, icon, title, tooltip, badgeDot, disabled } = props;\n  const isInlineCode = controller.query('isInlineCode');\n\n  const isDisabled = disabled\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInLink')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard')\n    || (!isInlineCode && hasInlineOrInlineCodeMark(controller));\n\n\n  const buttonConfig: IBasicButton = ({\n    icon: icon || <IconCode />,\n    onClick: handleClick,\n    title: title || locale?.buttonTitle,\n    tooltip: {\n      title: title || locale?.buttonTitle,\n      shortCut: `${MOD}+e`,\n      description: `Markdown: \\`${(locale?.text || 'Text')}\\` ${(locale?.space || 'Space')}`,\n      ...tooltip,\n    },\n    badgeDot,\n    disabled: isDisabled,\n    role: InlineCodeRole.inlineCode,\n    testid: \"bi-toolbar-inline-code\",\n    active: isInlineCode,\n  });\n\n  return buttonConfig;\n\n}\n"],"file":"createInlineCodeToolbarButton.js"}