{"version":3,"sources":["../../../../src/bi/handlers/createOnKeyDown.ts"],"names":["isKeyHotkey","Commands","commands","isCursorInInlineCode","getTextOffsetInsideInlineCode","getCurTextNode","getTextOffsetOutsideInlineCode","createOnKeyDown","hotKey","isInlineCodeHotkey","isLeftHotkey","isRightHotkey","onKeyDown","event","controller","next","value","offset","curTextNode","preventDefault","inline","anchorInline","prevNode","document","getPreviousSibling","key","command","moveToEndOfNode","moveToStartOfNode","text","length","nextNode","getNextSibling","stopPropagation","toggleInlineCode"],"mappings":"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","sourcesContent":["import { isKeyHotkey } from 'is-hotkey';\nimport { Commands, Plugin } from '@ali/4ever-cangjie';\nimport { commands } from '../commands';\nimport isCursorInInlineCode from '../utils/isCursorInInlineCode';\nimport getTextOffsetInsideInlineCode from '../utils/getTextOffsetInsideInlineCode';\nimport getCurTextNode from '../utils/getCurTextNode';\nimport getTextOffsetOutsideInlineCode from '../utils/getTextOffsetOutsideInlineCode';\n\nexport default function createOnKeyDown(hotKey: string): Plugin['onKeyDown'] {\n  const isInlineCodeHotkey = isKeyHotkey(hotKey);\n  const isLeftHotkey = isKeyHotkey('left');\n  const isRightHotkey = isKeyHotkey('right');\n  return function onKeyDown(event, controller, next) {\n    /**\n     * 两种情况需要拦截默认行为：\n     * 1.从左右侧text node进入Inline Node节点时，需设置anchor与focus至inline Node的首尾部\n     * 2.从Inline Node节点左右侧移出时，需设置anchor与focus至前后Text Node的首尾部\n     */\n    const { value } = controller;\n    if (isLeftHotkey(event)) {\n      // 情况2：\n      if (isCursorInInlineCode(value)) {\n        const offset = getTextOffsetInsideInlineCode(value);\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === 0) {\n          event.preventDefault();\n          // 选区闭合，获取anchorInline即可，且不为null\n          const inline = controller.value.anchorInline!;\n          const prevNode = controller.value.document.getPreviousSibling(\n            inline.key,\n          )!;\n          return controller.command(Commands.moveToEndOfNode, prevNode);\n        } else if (offset === 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToStartOfNode, curTextNode);\n        }\n      } else {\n        const offset = getTextOffsetOutsideInlineCode(value, 'right');\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === 0) {\n          event.preventDefault();\n          const prevNode = controller.value.document.getPreviousSibling(\n            curTextNode.key,\n          )!;\n          return controller.command(Commands.moveToEndOfNode, prevNode);\n        } else if (offset === 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToStartOfNode, curTextNode);\n        }\n      }\n    }\n    //和left同理\n    if (isRightHotkey(event)) {\n      if (isCursorInInlineCode(value)) {\n        const offset = getTextOffsetInsideInlineCode(value);\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === curTextNode.text.length) {\n          event.preventDefault();\n          const inline = controller.value.anchorInline!;\n          const nextNode = controller.value.document.getNextSibling(\n            inline.key,\n          )!;\n          return controller.command(Commands.moveToStartOfNode, nextNode);\n        } else if (offset === curTextNode.text.length - 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToEndOfNode, curTextNode);\n        }\n      } else {\n        const offset = getTextOffsetOutsideInlineCode(value, 'left');\n        const curTextNode = getCurTextNode(value);\n        if (!curTextNode) return next();\n        if (offset === curTextNode.text.length) {\n          event.preventDefault();\n          const nextNode = controller.value.document.getNextSibling(\n            curTextNode.key,\n          )!;\n          return controller.command(Commands.moveToStartOfNode, nextNode);\n        } else if (offset === curTextNode.text.length - 1) {\n          event.preventDefault();\n          return controller.command(Commands.moveToEndOfNode, curTextNode);\n        }\n      }\n    }\n\n    if (isInlineCodeHotkey(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      return controller.command(commands.toggleInlineCode);\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnKeyDown.js"}