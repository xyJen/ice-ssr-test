{"version":3,"sources":["../../../../../../src/utils/components/common/embedCard/embedFailedCard.tsx"],"names":["EmbedFailedCard","props","node","locale","isSelected","enableBorderHighlight","name","errorType","data","renderDesc","UploadErrorType","oversizeError","networkError"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;;AAcb,SAASA,eAAT,CAAyBC,KAAzB,EAAuC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA;AAA5B,MAAsDJ,KAA5D;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBL,IAAI,CAACM,IAAjC;AAEA,QAAMC,UAAU,GAAG,wBAAY,MAAM;AACnC,QAAIF,SAAJ,EAAe;AACb,UAAIA,SAAS,KAAKG,uBAAgBC,aAAlC,EAAiD;AAC/C,4BAAO,eAAC,iBAAD,QAAYR,MAAM,CAACQ,aAAnB,CAAP;AACD;;AACD,0BAAO,eAAC,iBAAD,QAAYR,MAAM,CAACS,YAAnB,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GARkB,EAQhB,CAACT,MAAD,EAASI,SAAT,CARgB,CAAnB;AAUA,sBACE,eAAC,cAAD,CAAO,QAAP,qBACE,eAAC,6BAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,cAAc,EAAE,CAAC,CAACK,SAFpB;AAGE,IAAA,UAAU,EAAE,CAAC,CAACH,UAHhB;AAIE,IAAA,qBAAqB,EAAEC;AAJzB,kBAME,eAAC,0BAAD,qBACE,eAAC,+BAAD,qBACE,eAAC,qBAAD,QAAgBC,IAAhB,CADF,EAEGG,UAAU,EAFb,CADF,CANF,CADF,CADF;AAiBD","sourcesContent":["import React, { useCallback } from 'react';\nimport EmbedFileCardWrapper from '../embedFileCardWrapper';\nimport { EmbedNode, UploadErrorType } from '../../../types';\nimport {\n  CardContentWrapper, CardContentInnerWrapper,\n  ContentHeader, ErrorDesc,\n} from './styled';\n\ninterface Props {\n  node: EmbedNode;\n  locale: Record<string, string>;\n  isSelected?: boolean;\n  enableBorderHighlight?: boolean;\n}\n\nexport default function EmbedFailedCard(props: Props) {\n  const { node, locale, isSelected, enableBorderHighlight } = props;\n  const { name, errorType } = node.data;\n\n  const renderDesc = useCallback(() => {\n    if (errorType) {\n      if (errorType === UploadErrorType.oversizeError) {\n        return <ErrorDesc>{locale.oversizeError}</ErrorDesc>;\n      }\n      return <ErrorDesc>{locale.networkError}</ErrorDesc>;\n    }\n    return null;\n  }, [locale, errorType]);\n\n  return (\n    <React.Fragment>\n      <EmbedFileCardWrapper\n        node={node}\n        isUploadFailed={!!errorType}\n        isSelected={!!isSelected}\n        enableBorderHighlight={enableBorderHighlight}\n      >\n        <CardContentWrapper>\n          <CardContentInnerWrapper>\n            <ContentHeader>{name}</ContentHeader>\n            {renderDesc()}\n          </CardContentInnerWrapper>\n        </CardContentWrapper>\n      </EmbedFileCardWrapper>\n    </React.Fragment>\n  );\n}\n"],"file":"embedFailedCard.js"}