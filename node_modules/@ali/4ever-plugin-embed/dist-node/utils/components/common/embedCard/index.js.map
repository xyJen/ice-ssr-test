{"version":3,"sources":["../../../../../../src/utils/components/common/embedCard/index.tsx"],"names":["EmbedCard","props","name","allowDownload","isSelected","node","locale","size","onDownloadFile","renderDesc","title"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAMA;;AACA;;AACA;;uBAR4B,a;;AAoB5B,SAASA,SAAT,CAAmBC,KAAnB,EAAiC;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,aAAR;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA,IAAnC;AAAyCC,IAAAA,MAAzC;AAAiDC,IAAAA,IAAjD;AAAuDC,IAAAA;AAAvD,MAA0EP,KAAhF;AAEA,QAAMQ,UAAU,GAAG,wBAAY,MAAM;AACnC,wBAAO,eAAC,mBAAD,QAAc,gCAAWF,IAAX,CAAd,CAAP;AACD,GAFkB,EAEhB,CAACA,IAAD,CAFgB,CAAnB;AAIA,sBACE,eAAC,6BAAD;AAAsB,IAAA,IAAI,EAAEF,IAA5B;AAAkC,IAAA,UAAU,EAAED;AAA9C,kBACE,eAAC,cAAD,CAAO,QAAP,qBACE,eAAC,0BAAD,qBACE,eAAC,+BAAD,qBACE,eAAC,qBAAD,QAAgBF,IAAhB,CADF,EAEGO,UAAU,EAFb,CADF,CADF,eAOE,eAAC,4BAAD;AACE,IAAA,KAAK,EAAEH,MAAM,EAAEI,KADjB;AAEE,IAAA,cAAc,EAAEF,cAFlB;AAGE,IAAA,aAAa,EAAEL;AAHjB,IAPF,CADF,CADF;AAiBD;;eAEcH,S","sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  CardContentInnerWrapper,\n  CardContentWrapper,\n  ContentHeader,\n  ContentDesc,\n} from './styled';\nimport EmbedDownloadButton from '../embedDownloadButton';\nimport EmbedFileCardWrapper from '../embedFileCardWrapper';\nimport { formatSize } from '../../../fileTypeHelper';\n\ninterface Props {\n  name: string;\n  allowDownload: boolean;\n  isSelected: boolean;\n  node: any;\n  locale: Record<string, string>\n  size: number;\n  onDownloadFile: (event: MouseEvent) => void;\n}\n\nfunction EmbedCard(props: Props) {\n  const { name, allowDownload, isSelected, node, locale, size, onDownloadFile } = props;\n\n  const renderDesc = useCallback(() => {\n    return <ContentDesc>{formatSize(size)}</ContentDesc>;\n  }, [size]);\n\n  return (\n    <EmbedFileCardWrapper node={node} isSelected={isSelected}>\n      <React.Fragment>\n        <CardContentWrapper>\n          <CardContentInnerWrapper>\n            <ContentHeader>{name}</ContentHeader>\n            {renderDesc()}\n          </CardContentInnerWrapper>\n        </CardContentWrapper>\n        <EmbedDownloadButton\n          title={locale?.title}\n          onDownloadFile={onDownloadFile}\n          allowDownload={allowDownload}\n        />\n      </React.Fragment>\n    </EmbedFileCardWrapper>\n  );\n}\n\nexport default EmbedCard;\n"],"file":"index.js"}