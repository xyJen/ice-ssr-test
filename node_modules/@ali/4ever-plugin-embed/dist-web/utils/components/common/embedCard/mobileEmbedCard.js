import React, { useRef } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { PreviewBetaNormal } from '@ali/we-design';
import { CanPreviewFileTypes, getFileTypeForRead, IconUrlMap, formatSize } from "../../../fileTypeHelper";
import { MobileEmbedCardWrapper, CardIconWrapper, CardContentWrapper, MobileCardContentInnerWrapper, ContentHeader, ContentDesc, PreviewIconWrapper } from "./styled";

var _ref = /*#__PURE__*/_createElement(PreviewBetaNormal, null);

function MobileEmbedCard(props) {
  var name = props.name,
      onPreview = props.onPreview,
      src = props.src,
      type = props.type,
      size = props.size;
  var isClickedRef = useRef(false);
  var fileType = getFileTypeForRead(name);

  var getIcon = function getIcon() {
    return IconUrlMap[type] || IconUrlMap['app'];
  };

  var renderDesc = function renderDesc() {
    return /*#__PURE__*/_createElement(ContentDesc, null, formatSize(size));
  };

  var handleTouchStart = function handleTouchStart(e) {
    if (CanPreviewFileTypes.includes(fileType)) {
      e.preventDefault();
      e.stopPropagation();
      isClickedRef.current = true;
    }
  };

  var handleTouchMove = function handleTouchMove(e) {
    if (CanPreviewFileTypes.includes(fileType)) {
      e.preventDefault();
      e.stopPropagation();
      isClickedRef.current = false;
    }
  };

  var handleTouchEnd = function handleTouchEnd(e) {
    // TODO 此处限制了业务层的拓展，之后应当移除
    if (CanPreviewFileTypes.includes(fileType)) {
      e.preventDefault();
      e.stopPropagation();

      if (onPreview && isClickedRef.current) {
        onPreview(src);
        isClickedRef.current = false;
      }
    }
  };

  return /*#__PURE__*/_createElement(MobileEmbedCardWrapper, null, /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(CardIconWrapper, null, /*#__PURE__*/_createElement("img", {
    src: getIcon(),
    alt: "icon",
    style: {
      width: 26,
      height: 28
    }
  })), /*#__PURE__*/_createElement(CardContentWrapper, null, /*#__PURE__*/_createElement(MobileCardContentInnerWrapper, null, /*#__PURE__*/_createElement(ContentHeader, null, name), renderDesc())), CanPreviewFileTypes.includes(fileType) && onPreview ? /*#__PURE__*/_createElement(PreviewIconWrapper, {
    onTouchStart: handleTouchStart,
    onTouchMove: handleTouchMove,
    onTouchEnd: handleTouchEnd
  }, _ref) : null));
}

export default MobileEmbedCard;
//# sourceMappingURL=mobileEmbedCard.js.map