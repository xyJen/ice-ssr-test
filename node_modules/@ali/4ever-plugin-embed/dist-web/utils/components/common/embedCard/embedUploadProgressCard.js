import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import EmbedFileCardWrapper from "../embedFileCardWrapper";
import { CardContentWrapper, CardContentInnerWrapper, ProgressBar, ProgressBarInner, ContentHeader } from "./styled";
export default function EmbedUploadProgressCard(props) {
  var node = props.node,
      isSelected = props.isSelected,
      enableBorderHighlight = props.enableBorderHighlight;
  var _node$data = node.data,
      uploadPercent = _node$data.uploadPercent,
      name = _node$data.name,
      errorType = _node$data.errorType;
  var getUploadProgress = useCallback(function () {
    return uploadPercent ? uploadPercent * 0.95 : 0;
  }, [uploadPercent]);
  return /*#__PURE__*/_createElement(EmbedFileCardWrapper, {
    node: node,
    isUploadFailed: !!errorType,
    isSelected: isSelected,
    enableBorderHighlight: enableBorderHighlight
  }, /*#__PURE__*/_createElement(CardContentWrapper, null, /*#__PURE__*/_createElement(CardContentInnerWrapper, null, /*#__PURE__*/_createElement(ContentHeader, null, name)), uploadPercent ? /*#__PURE__*/_createElement(ProgressBar, null, /*#__PURE__*/_createElement(ProgressBarInner, {
    progress: getUploadProgress()
  })) : null));
}
//# sourceMappingURL=embedUploadProgressCard.js.map