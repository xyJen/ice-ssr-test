{"version":3,"sources":["../../../../../../src/utils/components/common/embedCard/mobileEmbedCard.tsx"],"names":["React","useRef","PreviewBetaNormal","CanPreviewFileTypes","getFileTypeForRead","IconUrlMap","formatSize","MobileEmbedCardWrapper","CardIconWrapper","CardContentWrapper","MobileCardContentInnerWrapper","ContentHeader","ContentDesc","PreviewIconWrapper","MobileEmbedCard","props","name","onPreview","src","type","size","isClickedRef","fileType","getIcon","renderDesc","handleTouchStart","e","includes","preventDefault","stopPropagation","current","handleTouchMove","handleTouchEnd","width","height"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { PreviewBetaNormal } from '@ali/we-design';\nimport {\n  CanPreviewFileTypes,\n  getFileTypeForRead,\n  IconUrlMap,\n  formatSize,\n} from '../../../fileTypeHelper';\nimport {\n  MobileEmbedCardWrapper,\n  CardIconWrapper,\n  CardContentWrapper,\n  MobileCardContentInnerWrapper,\n  ContentHeader,\n  ContentDesc,\n  PreviewIconWrapper,\n} from './styled';\n\ninterface Props {\n  name: string;\n  onPreview?: (src: string) => void;\n  src: string;\n  type: string;\n  size: number;\n}\n\nfunction MobileEmbedCard(props: Props) {\n  const { name, onPreview, src, type, size } = props;\n  const isClickedRef = useRef(false);\n\n  const fileType = getFileTypeForRead(name);\n\n  const getIcon = () => {\n    return IconUrlMap[type] || IconUrlMap['app'];\n  };\n\n  const renderDesc = () => {\n    return <ContentDesc>{formatSize(size)}</ContentDesc>;\n  };\n\n  const handleTouchStart = (e) => {\n    if (CanPreviewFileTypes.includes(fileType)) {\n      e.preventDefault();\n      e.stopPropagation();\n      isClickedRef.current = true;\n    }\n  };\n\n  const handleTouchMove = (e) => {\n    if (CanPreviewFileTypes.includes(fileType)) {\n      e.preventDefault();\n      e.stopPropagation();\n      isClickedRef.current = false;\n    }\n  };\n\n  const handleTouchEnd = (e) => {\n    // TODO 此处限制了业务层的拓展，之后应当移除\n    if (CanPreviewFileTypes.includes(fileType)) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (onPreview && isClickedRef.current) {\n        onPreview(src);\n        isClickedRef.current = false;\n      }\n    }\n  };\n\n  return (\n    <MobileEmbedCardWrapper>\n      <React.Fragment>\n        <CardIconWrapper>\n          <img\n            src={getIcon()}\n            alt=\"icon\"\n            style={{ width: 26, height: 28 }}\n          />\n        </CardIconWrapper>\n        <CardContentWrapper>\n          <MobileCardContentInnerWrapper>\n            <ContentHeader>{name}</ContentHeader>\n            {renderDesc()}\n          </MobileCardContentInnerWrapper>\n        </CardContentWrapper>\n        {(CanPreviewFileTypes.includes(fileType) && onPreview) ? (\n          <PreviewIconWrapper\n            onTouchStart={handleTouchStart}\n            onTouchMove={handleTouchMove}\n            onTouchEnd={handleTouchEnd}\n          >\n            <PreviewBetaNormal />\n          </PreviewIconWrapper>\n        ) : null}\n      </React.Fragment>\n    </MobileEmbedCardWrapper>\n  );\n}\n\nexport default MobileEmbedCard;\n"],"file":"mobileEmbedCard.js"}