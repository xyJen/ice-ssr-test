import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { CardContentInnerWrapper, CardContentWrapper, ContentHeader, ContentDesc } from "./styled";
import EmbedDownloadButton from "../embedDownloadButton";
import EmbedFileCardWrapper from "../embedFileCardWrapper";
import { formatSize } from "../../../fileTypeHelper";

function EmbedCard(props) {
  var name = props.name,
      allowDownload = props.allowDownload,
      isSelected = props.isSelected,
      node = props.node,
      locale = props.locale,
      size = props.size,
      onDownloadFile = props.onDownloadFile;
  var renderDesc = useCallback(function () {
    return /*#__PURE__*/_createElement(ContentDesc, null, formatSize(size));
  }, [size]);
  return /*#__PURE__*/_createElement(EmbedFileCardWrapper, {
    node: node,
    isSelected: isSelected
  }, /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(CardContentWrapper, null, /*#__PURE__*/_createElement(CardContentInnerWrapper, null, /*#__PURE__*/_createElement(ContentHeader, null, name), renderDesc())), /*#__PURE__*/_createElement(EmbedDownloadButton, {
    title: locale == null ? void 0 : locale.title,
    onDownloadFile: onDownloadFile,
    allowDownload: allowDownload
  })));
}

export default EmbedCard;
//# sourceMappingURL=index.js.map