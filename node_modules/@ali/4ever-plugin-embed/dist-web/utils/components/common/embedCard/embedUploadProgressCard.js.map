{"version":3,"sources":["../../../../../../src/utils/components/common/embedCard/embedUploadProgressCard.tsx"],"names":["React","useCallback","EmbedFileCardWrapper","CardContentWrapper","CardContentInnerWrapper","ProgressBar","ProgressBarInner","ContentHeader","EmbedUploadProgressCard","props","node","isSelected","enableBorderHighlight","data","uploadPercent","name","errorType","getUploadProgress"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;qBAC4B,a;AAA5B,OAAOC,oBAAP;AAEA,SACEC,kBADF,EACsBC,uBADtB,EAEEC,WAFF,EAEeC,gBAFf,EAEiCC,aAFjC;AAWA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAA+C;AAAA,MACpDC,IADoD,GACRD,KADQ,CACpDC,IADoD;AAAA,MAC9CC,UAD8C,GACRF,KADQ,CAC9CE,UAD8C;AAAA,MAClCC,qBADkC,GACRH,KADQ,CAClCG,qBADkC;AAAA,mBAEjBF,IAAI,CAACG,IAFY;AAAA,MAEpDC,aAFoD,cAEpDA,aAFoD;AAAA,MAErCC,IAFqC,cAErCA,IAFqC;AAAA,MAE/BC,SAF+B,cAE/BA,SAF+B;AAI5D,MAAMC,iBAAiB,GAAGhB,WAAW,CAAC,YAAM;AAC1C,WAAOa,aAAa,GAAGA,aAAa,GAAG,IAAnB,GAA0B,CAA9C;AACD,GAFoC,EAElC,CAACA,aAAD,CAFkC,CAArC;AAIA,sBACE,eAAC,oBAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,cAAc,EAAE,CAAC,CAACM,SAFpB;AAGE,IAAA,UAAU,EAAEL,UAHd;AAIE,IAAA,qBAAqB,EAAEC;AAJzB,kBAME,eAAC,kBAAD,qBACE,eAAC,uBAAD,qBACE,eAAC,aAAD,QAAgBG,IAAhB,CADF,CADF,EAIGD,aAAa,gBACZ,eAAC,WAAD,qBACE,eAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEG,iBAAiB;AAA7C,IADF,CADY,GAIV,IARN,CANF,CADF;AAmBD","sourcesContent":["import React, { useCallback } from 'react';\nimport EmbedFileCardWrapper from '../embedFileCardWrapper';\nimport { EmbedNode } from '../../../types';\nimport {\n  CardContentWrapper, CardContentInnerWrapper,\n  ProgressBar, ProgressBarInner, ContentHeader,\n} from './styled';\n\ninterface Props {\n  node: EmbedNode;\n  isSelected: boolean;\n  enableBorderHighlight?: boolean;\n}\n\nexport default function EmbedUploadProgressCard(props: Props) {\n  const { node, isSelected, enableBorderHighlight } = props;\n  const { uploadPercent, name, errorType } = node.data;\n\n  const getUploadProgress = useCallback(() => {\n    return uploadPercent ? uploadPercent * 0.95 : 0;\n  }, [uploadPercent]);\n\n  return (\n    <EmbedFileCardWrapper\n      node={node}\n      isUploadFailed={!!errorType}\n      isSelected={isSelected}\n      enableBorderHighlight={enableBorderHighlight}\n    >\n      <CardContentWrapper>\n        <CardContentInnerWrapper>\n          <ContentHeader>{name}</ContentHeader>\n        </CardContentInnerWrapper>\n        {uploadPercent ? (\n          <ProgressBar>\n            <ProgressBarInner progress={getUploadProgress()} />\n          </ProgressBar>\n        ) : null}\n      </CardContentWrapper>\n    </EmbedFileCardWrapper>\n  );\n}\n\n"],"file":"embedUploadProgressCard.js"}