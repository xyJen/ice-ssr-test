{"version":3,"sources":["../../../../../../src/utils/components/common/embedCard/embedFailedCard.tsx"],"names":["React","useCallback","EmbedFileCardWrapper","UploadErrorType","CardContentWrapper","CardContentInnerWrapper","ContentHeader","ErrorDesc","EmbedFailedCard","props","node","locale","isSelected","enableBorderHighlight","data","name","errorType","renderDesc","oversizeError","networkError"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;qBAC4B,a;AAA5B,OAAOC,oBAAP;AACA,SAAoBC,eAApB;AACA,SACEC,kBADF,EACsBC,uBADtB,EAEEC,aAFF,EAEiBC,SAFjB;AAYA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAuC;AAAA,MAC5CC,IAD4C,GACQD,KADR,CAC5CC,IAD4C;AAAA,MACtCC,MADsC,GACQF,KADR,CACtCE,MADsC;AAAA,MAC9BC,UAD8B,GACQH,KADR,CAC9BG,UAD8B;AAAA,MAClBC,qBADkB,GACQJ,KADR,CAClBI,qBADkB;AAAA,mBAExBH,IAAI,CAACI,IAFmB;AAAA,MAE5CC,IAF4C,cAE5CA,IAF4C;AAAA,MAEtCC,SAFsC,cAEtCA,SAFsC;AAIpD,MAAMC,UAAU,GAAGhB,WAAW,CAAC,YAAM;AACnC,QAAIe,SAAJ,EAAe;AACb,UAAIA,SAAS,KAAKb,eAAe,CAACe,aAAlC,EAAiD;AAC/C,4BAAO,eAAC,SAAD,QAAYP,MAAM,CAACO,aAAnB,CAAP;AACD;;AACD,0BAAO,eAAC,SAAD,QAAYP,MAAM,CAACQ,YAAnB,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAR6B,EAQ3B,CAACR,MAAD,EAASK,SAAT,CAR2B,CAA9B;AAUA,sBACE,eAAC,KAAD,CAAO,QAAP,qBACE,eAAC,oBAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,cAAc,EAAE,CAAC,CAACM,SAFpB;AAGE,IAAA,UAAU,EAAE,CAAC,CAACJ,UAHhB;AAIE,IAAA,qBAAqB,EAAEC;AAJzB,kBAME,eAAC,kBAAD,qBACE,eAAC,uBAAD,qBACE,eAAC,aAAD,QAAgBE,IAAhB,CADF,EAEGE,UAAU,EAFb,CADF,CANF,CADF,CADF;AAiBD","sourcesContent":["import React, { useCallback } from 'react';\nimport EmbedFileCardWrapper from '../embedFileCardWrapper';\nimport { EmbedNode, UploadErrorType } from '../../../types';\nimport {\n  CardContentWrapper, CardContentInnerWrapper,\n  ContentHeader, ErrorDesc,\n} from './styled';\n\ninterface Props {\n  node: EmbedNode;\n  locale: Record<string, string>;\n  isSelected?: boolean;\n  enableBorderHighlight?: boolean;\n}\n\nexport default function EmbedFailedCard(props: Props) {\n  const { node, locale, isSelected, enableBorderHighlight } = props;\n  const { name, errorType } = node.data;\n\n  const renderDesc = useCallback(() => {\n    if (errorType) {\n      if (errorType === UploadErrorType.oversizeError) {\n        return <ErrorDesc>{locale.oversizeError}</ErrorDesc>;\n      }\n      return <ErrorDesc>{locale.networkError}</ErrorDesc>;\n    }\n    return null;\n  }, [locale, errorType]);\n\n  return (\n    <React.Fragment>\n      <EmbedFileCardWrapper\n        node={node}\n        isUploadFailed={!!errorType}\n        isSelected={!!isSelected}\n        enableBorderHighlight={enableBorderHighlight}\n      >\n        <CardContentWrapper>\n          <CardContentInnerWrapper>\n            <ContentHeader>{name}</ContentHeader>\n            {renderDesc()}\n          </CardContentInnerWrapper>\n        </CardContentWrapper>\n      </EmbedFileCardWrapper>\n    </React.Fragment>\n  );\n}\n"],"file":"embedFailedCard.js"}