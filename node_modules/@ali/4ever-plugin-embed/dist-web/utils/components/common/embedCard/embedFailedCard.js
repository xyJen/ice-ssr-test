import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import EmbedFileCardWrapper from "../embedFileCardWrapper";
import { UploadErrorType } from "../../../types";
import { CardContentWrapper, CardContentInnerWrapper, ContentHeader, ErrorDesc } from "./styled";
export default function EmbedFailedCard(props) {
  var node = props.node,
      locale = props.locale,
      isSelected = props.isSelected,
      enableBorderHighlight = props.enableBorderHighlight;
  var _node$data = node.data,
      name = _node$data.name,
      errorType = _node$data.errorType;
  var renderDesc = useCallback(function () {
    if (errorType) {
      if (errorType === UploadErrorType.oversizeError) {
        return /*#__PURE__*/_createElement(ErrorDesc, null, locale.oversizeError);
      }

      return /*#__PURE__*/_createElement(ErrorDesc, null, locale.networkError);
    }

    return null;
  }, [locale, errorType]);
  return /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(EmbedFileCardWrapper, {
    node: node,
    isUploadFailed: !!errorType,
    isSelected: !!isSelected,
    enableBorderHighlight: enableBorderHighlight
  }, /*#__PURE__*/_createElement(CardContentWrapper, null, /*#__PURE__*/_createElement(CardContentInnerWrapper, null, /*#__PURE__*/_createElement(ContentHeader, null, name), renderDesc()))));
}
//# sourceMappingURL=embedFailedCard.js.map