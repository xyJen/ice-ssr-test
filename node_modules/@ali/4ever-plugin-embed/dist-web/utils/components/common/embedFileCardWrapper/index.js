import _extends from "@babel/runtime/helpers/extends";
import React, { useRef, useEffect } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useHover } from '@ali/4ever-component';
import { getIcon } from "../../../fileTypeHelper";
import { EmbedFileCardWrapper, CardIconWrapper } from "./styled";
export default function EmbedCardWrapper(props) {
  var node = props.node,
      isSelected = props.isSelected,
      isUploadFailed = props.isUploadFailed,
      children = props.children,
      onRef = props.onRef,
      enableBorderHighlight = props.enableBorderHighlight;
  var type = node.data.type;
  var wrapperRef = useRef(null);

  var _useHover = useHover(enableBorderHighlight),
      isHover = _useHover[0],
      hoverHandlers = _useHover[1];

  useEffect(function () {
    if (onRef) {
      onRef(wrapperRef.current);
    }
  }, [onRef]);
  return /*#__PURE__*/_createElement(EmbedFileCardWrapper, _extends({
    isSelected: isSelected,
    isUploadFailed: isUploadFailed,
    "data-testid": "embed-card",
    "data-type": "embed-" + type,
    ref: wrapperRef,
    "data-hover-box": "borderBox",
    isHover: isHover
  }, hoverHandlers), /*#__PURE__*/_createElement(CardIconWrapper, null, /*#__PURE__*/_createElement("img", {
    src: getIcon(type),
    alt: "icon",
    style: {
      width: 23,
      height: 24
    }
  })), children);
}
//# sourceMappingURL=index.js.map