{"version":3,"sources":["../../../../../src/utils/components/video/videoPlayer.tsx"],"names":["React","useRef","useEffect","useState","useCallback","DownloadNormal","Tooltip","sanitizeUrl","VideoWrapper","DownloadButton","VideoPlayer","props","videoRef","transformVideoURL","onMediaLoadSuccess","onMediaLoadError","node","setTempPosterUrl","isSelected","renderVideoMask","isMobile","allowDownload","onDownload","locale","allowFullscreen","src","data","poster","setPoster","renderSrc","setRenderSrc","canPlay","setCanPlayState","canDownload","setCanDownloadState","errorMessage","setErrorMessage","setTrueSrc","s","then","resPoster","current","load","res","handleMediaLoadSuccess","handleMediaLoadError","e","isError","errorSrc","currentVideoEle","addEventListener","removeEventListener","handleReload","play","handleVideoClick","stopPropagation","renderDownloadButton","download","reload"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { DownloadNormal, Tooltip } from '@ali/we-design';\nimport { sanitizeUrl } from '@ali/4ever-utils';\nimport { VideoMaskParams, VideoErrorMessage, EmbedNode } from '../../types';\nimport { VideoWrapper, DownloadButton } from './styled';\n\ninterface Props {\n  node: EmbedNode;\n  isSelected: boolean;\n  isMobile?: boolean;\n  transformVideoURL?: (src: string) => string;\n  onMediaLoadSuccess?: Function;\n  onMediaLoadError?: any;\n  setTempPosterUrl?: (data: any) => Promise<string>; // 获取封面图地址\n  renderVideoMask?: (params: VideoMaskParams) => React.ReactElement;\n  allowDownload?: ((src: string) => Promise<boolean>) | boolean;\n  onDownload: any;\n  locale?: Record<string, string>;\n  allowFullscreen?: boolean;\n}\n\nfunction VideoPlayer(props: Props) {\n  const videoRef = useRef<HTMLVideoElement>();\n  const {\n    transformVideoURL,\n    onMediaLoadSuccess,\n    onMediaLoadError,\n    node,\n    setTempPosterUrl,\n    isSelected,\n    renderVideoMask,\n    isMobile,\n    allowDownload,\n    onDownload,\n    locale = {},\n    allowFullscreen,\n  } = props;\n\n  const { src } = node.data;\n  const [poster, setPoster] = useState(node.data.poster);\n  const [renderSrc, setRenderSrc] = useState(transformVideoURL ? transformVideoURL(src) : src);\n  const [canPlay, setCanPlayState] = useState(false);\n  const [canDownload, setCanDownloadState] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<VideoErrorMessage>({});\n\n  const setTrueSrc = useCallback(\n    (s) => {\n      if (transformVideoURL) {\n        setRenderSrc(transformVideoURL(s));\n        return;\n      }\n      setRenderSrc(s);\n    },\n    [transformVideoURL],\n  );\n\n  useEffect(() => {\n    setTrueSrc(src);\n    if (setTempPosterUrl) {\n      setTempPosterUrl(node.data).then((resPoster: string) => {\n        setPoster(resPoster);\n        if (videoRef.current) {\n          videoRef.current.load();\n        }\n      });\n    }\n  }, []);\n\n  // allowDownload 是 boolean 值时，直接设置\n  useEffect(() => {\n    if (typeof allowDownload === 'boolean') {\n      setCanDownloadState(allowDownload);\n    }\n  }, [allowDownload]);\n\n  // allowDownload 是函数时，当 src 有变化时候，调用一次设置\n  useEffect(() => {\n    if (typeof allowDownload === 'function') {\n      allowDownload(renderSrc).then((res) => {\n        setCanDownloadState(res);\n      });\n    }\n  }, [allowDownload, renderSrc]);\n\n  const handleMediaLoadSuccess = useCallback(() => {\n    setCanPlayState(true);\n    if (onMediaLoadSuccess) {\n      onMediaLoadSuccess(renderSrc);\n    }\n  }, [onMediaLoadSuccess, renderSrc]);\n\n  const handleMediaLoadError = useCallback((e: React.SyntheticEvent<HTMLVideoElement, Event>) => {\n    onMediaLoadError(e);\n    setErrorMessage({\n      isError: true,\n      errorSrc: renderSrc,\n    });\n  }, [onMediaLoadError, renderSrc]);\n\n  useEffect(() => {\n    const currentVideoEle = videoRef.current;\n    if (currentVideoEle) {\n      currentVideoEle.addEventListener('canplay', handleMediaLoadSuccess);\n    }\n\n    return () => {\n      setCanPlayState(false);\n      if (currentVideoEle) {\n        currentVideoEle.removeEventListener('canplay', handleMediaLoadSuccess);\n      }\n    };\n  }, [handleMediaLoadSuccess]);\n\n  const handleReload = useCallback(() => {\n    setTrueSrc(src);\n    if (videoRef.current) {\n      videoRef.current.play();\n    }\n  }, [src, setTrueSrc]);\n\n  const handleVideoClick = useCallback((e) => {\n    if (isMobile) {\n      e.stopPropagation();\n    }\n  }, [isMobile]);\n\n  const renderDownloadButton = useCallback(() => {\n    if (!canDownload) return null;\n\n    return (\n      <Tooltip placement=\"bottom\" title={locale.download}>\n        <DownloadButton onMouseDown={onDownload}>\n          <DownloadNormal />\n        </DownloadButton>\n      </Tooltip>\n    );\n  }, [canDownload, onDownload, locale]);\n\n  return (\n    <VideoWrapper isSelected={isSelected} isMobile={isMobile}>\n      <video\n        onClick={handleVideoClick}\n        onMouseDown={handleVideoClick}\n        controls\n        data-type=\"embed-video\"\n        raw-controls=\"true\" // UC内核独有属性\n        controlsList={allowFullscreen ?\n          'nodownload noremoteplayback' :\n          'nodownload nofullscreen noremoteplayback'\n        }\n        ref={videoRef as any}\n        poster={sanitizeUrl(poster!)}\n        onError={handleMediaLoadError}\n        disablePictureInPicture\n      >\n        <source src={renderSrc} type=\"video/mp4\" />\n      </video>\n      {renderVideoMask &&\n        renderVideoMask({ node, canPlay, reload: handleReload, errorMessage })}\n      {renderDownloadButton()}\n    </VideoWrapper>\n  );\n}\n\nexport default VideoPlayer;\n"],"file":"videoPlayer.js"}