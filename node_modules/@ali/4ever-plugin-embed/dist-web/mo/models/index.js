import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { Block } from '@ali/4ever-cangjie';
import { ELEMENT_TYPE } from "../../utils/meta";

var Embed = /*#__PURE__*/function (_Block) {
  _inheritsLoose(Embed, _Block);

  function Embed() {
    return _Block.apply(this, arguments) || this;
  }

  Embed.create = function create(properties) {
    if (typeof properties === 'string') {
      throw new Error('`Embed.create` does not accept string');
    }

    if (Embed.isEmbed(properties)) {
      return properties;
    }

    return _Block.create.call(this, _extends({}, properties, {
      type: Embed.TYPE
    }));
  };

  Embed.isEmbed = function isEmbed(maybeEmbed) {
    return Block.isBlock(maybeEmbed) && maybeEmbed.type === Embed.TYPE;
  };

  return Embed;
}(Block);

Embed.TYPE = ELEMENT_TYPE;
export { Embed as default };
//# sourceMappingURL=index.js.map