"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.votingActive = votingActive;
exports.voteEditing = voteEditing;
exports.cancelEditing = cancelEditing;
exports.voteSave = voteSave;
exports.voteDelete = voteDelete;
exports.voteCopy = voteCopy;
exports.voteCut = voteCut;
exports.voteSubmit = voteSubmit;
exports.voteModify = voteModify;
exports.voteSaveCP = voteSaveCP;
exports.cancelVoting = cancelVoting;
exports.VOTE_SAVE_CP = exports.VOTE_MODIFY = exports.VOTE_SUBMIT = exports.VOTE_CUT = exports.VOTE_COPY = exports.VOTE_DELETE = exports.VOTE_SAVE = exports.VOTE_CANCEL_VOTING = exports.VOTE_CANCEL_EDITING = exports.VOTE_EDITING = exports.VOTING_ACTIVE = void 0;
const VOTING_ACTIVE = Symbol('VOTE_ACTIVE');
exports.VOTING_ACTIVE = VOTING_ACTIVE;
const VOTE_EDITING = Symbol('VOTE_EDITING');
exports.VOTE_EDITING = VOTE_EDITING;
const VOTE_CANCEL_EDITING = Symbol('VOTE_CANCEL_EDITING');
exports.VOTE_CANCEL_EDITING = VOTE_CANCEL_EDITING;
const VOTE_CANCEL_VOTING = Symbol('VOTE_CANCEL_VOTING');
exports.VOTE_CANCEL_VOTING = VOTE_CANCEL_VOTING;
const VOTE_SAVE = Symbol('VOTE_SAVE');
exports.VOTE_SAVE = VOTE_SAVE;
const VOTE_DELETE = Symbol('VOTE_DELETE');
exports.VOTE_DELETE = VOTE_DELETE;
const VOTE_COPY = Symbol('VOTE_COPY');
exports.VOTE_COPY = VOTE_COPY;
const VOTE_CUT = Symbol('VOTE_CUT');
exports.VOTE_CUT = VOTE_CUT;
const VOTE_SUBMIT = Symbol('VOTE_SUBMIT');
exports.VOTE_SUBMIT = VOTE_SUBMIT;
const VOTE_MODIFY = Symbol('VOTE_MODIFY');
exports.VOTE_MODIFY = VOTE_MODIFY;
const VOTE_SAVE_CP = Symbol('VOTE_SAVE_CP');
exports.VOTE_SAVE_CP = VOTE_SAVE_CP;

function votingActive(node) {
  return {
    type: VOTING_ACTIVE,
    payload: {
      node
    }
  };
}

function voteEditing(node) {
  return {
    type: VOTE_EDITING,
    payload: {
      node
    }
  };
}

function cancelEditing(node, data) {
  return {
    type: VOTE_CANCEL_EDITING,
    payload: {
      node,
      ...data
    }
  };
}

function voteSave({
  node,
  data,
  setData
}) {
  return {
    type: VOTE_SAVE,
    payload: {
      node,
      setData,
      ...data
    }
  };
}

function voteDelete(nodeKey) {
  return {
    type: VOTE_DELETE,
    payload: {
      key: nodeKey
    }
  };
}

function voteCopy(nodeKey) {
  return {
    type: VOTE_COPY,
    payload: {
      key: nodeKey
    }
  };
}

function voteCut(nodeKey) {
  return {
    type: VOTE_CUT,
    payload: {
      key: nodeKey
    }
  };
}

function voteSubmit(payload) {
  return {
    type: VOTE_SUBMIT,
    payload
  };
}

function voteModify(nodeKey) {
  return {
    type: VOTE_MODIFY,
    payload: {
      key: nodeKey
    }
  };
}

function voteSaveCP(nodeKey, payload) {
  return {
    type: VOTE_SAVE_CP,
    payload: {
      key: nodeKey,
      payload
    }
  };
}

function cancelVoting(node) {
  return {
    type: VOTE_CANCEL_VOTING,
    payload: {
      node
    }
  };
}
//# sourceMappingURL=index.js.map