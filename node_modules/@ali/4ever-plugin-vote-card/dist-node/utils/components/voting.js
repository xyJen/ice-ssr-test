"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _dayjs = _interopRequireDefault(require("dayjs"));

var _weDesignNext = require("@ali/we-design-next");

var _actions = require("../actions");

var _types = require("../types");

var _headerToolbar = _interopRequireDefault(require("./headerToolbar"));

var _styled = require("./styled");

const _createElement = /*#__PURE__*/_react.default.createElement;

const Voting = /*#__PURE__*/_react.default.memo(props => {
  const [checked, setChecked] = (0, _react.useState)([]);
  const {
    node,
    locale,
    controller,
    isSelected,
    data,
    setData,
    readOnly
  } = props; // 我是否有投过票

  const userOptionTicketed = (0, _react.useMemo)(() => !!data.optionInfoList?.find(item => item.userOptionTicket !== 0), [data]);
  const handleVote = (0, _react.useCallback)(() => {
    if (checked.length === 0) return;
    controller.run('onAction', (0, _actions.voteSubmit)({
      node,
      voteId: data.voteId,
      optionIds: checked,
      setData
    }));
  }, [checked, setData]);
  const handleCancel = (0, _react.useCallback)(() => {
    controller.run('onAction', (0, _actions.cancelVoting)(node));
  }, [node]);
  const handleChecked = (0, _react.useCallback)(id => {
    if (checked.includes(id)) {
      setChecked(checked.filter(i => i !== id));
      return;
    } // 单选只能选一个


    if (data.voteType === _types.EnumVoteType.RADIO) {
      setChecked([id]);
      return;
    }

    setChecked([...checked, id]);
  }, [checked]);
  return /*#__PURE__*/_createElement(_styled.ContainerWrapper, {
    isSelected: isSelected,
    "data-role": "vote",
    "data-testid": "card-vote-container-voting"
  }, /*#__PURE__*/_createElement(_styled.VotingWrapper, null, !controller.readOnly && !readOnly && /*#__PURE__*/_createElement(_headerToolbar.default, {
    controller: controller,
    node: node
  }), /*#__PURE__*/_createElement(_styled.TitleReaderWrapper, null, /*#__PURE__*/_createElement("span", null, data.voteType === _types.EnumVoteType.RADIO ? locale?.radio : locale?.checkbox), /*#__PURE__*/_createElement("span", {
    "data-testid": "card-vote-voting-title"
  }, data.title)), /*#__PURE__*/_createElement("div", {
    className: "voting-options"
  }, data.optionInfoList?.map(item => /*#__PURE__*/_createElement("div", {
    className: (0, _classnames.default)({
      checked: checked.includes(item.optionId)
    }),
    onClick: () => handleChecked(item.optionId)
  }, /*#__PURE__*/_createElement("span", {
    className: data.voteType === _types.EnumVoteType.RADIO ? 'radio' : 'checkbox'
  }), /*#__PURE__*/_createElement("span", null, item.content)))), /*#__PURE__*/_createElement("div", {
    className: "voting-footer"
  }, /*#__PURE__*/_createElement("div", null, data.participateUserCount > 0 && /*#__PURE__*/_createElement("span", null, `${String(data.participateUserCount ?? 0)}${locale?.total}`, " "), /*#__PURE__*/_createElement("span", null, (0, _dayjs.default)(data.endTime).format('YYYY-MM-DD HH:mm:ss'), " ", locale?.expired, " ")), /*#__PURE__*/_createElement("div", null, (data.showTicketBeforeVoting && data.participateUserCount || userOptionTicketed) && /*#__PURE__*/_createElement(_weDesignNext.Button, {
    className: "cancel",
    "data-role": "cancel",
    onClick: handleCancel
  }, locale?.cancel), /*#__PURE__*/_createElement(_weDesignNext.Button, {
    "data-role": "submit",
    type: "primary",
    disabled: checked.length === 0,
    onClick: handleVote
  }, locale?.submit)))));
});

var _default = Voting;
exports.default = _default;
//# sourceMappingURL=voting.js.map