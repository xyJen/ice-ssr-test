"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _weIcon = require("@ali/we-icon");

var _actions = require("../actions");

var _styled = require("./styled");

const _createElement = /*#__PURE__*/_react.default.createElement;

const HeaderToolbar = props => {
  const {
    controller,
    node
  } = props;
  const containerRef = (0, _react.useRef)(null);
  const getContainer = (0, _react.useCallback)(() => {
    return containerRef.current || window.document.body;
  }, []);
  const handleEdit = (0, _react.useCallback)(() => {
    controller.run('onAction', (0, _actions.voteEditing)(node));
  }, []);
  const handleDelete = (0, _react.useCallback)(() => {
    controller.run('onAction', (0, _actions.voteDelete)(node.key));
  }, [controller]);
  const handleCopy = (0, _react.useCallback)(() => {
    controller.run('onAction', (0, _actions.voteCopy)(node.key));
  }, [controller]);
  const handleCut = (0, _react.useCallback)(() => {
    controller.run('onAction', (0, _actions.voteCut)(node.key));
  }, [controller]);
  const moreMenuConfig = (0, _react.useMemo)(() => {
    return {
      options: [[{
        name: 'delete',
        onClick: handleDelete,
        testId: 'templateButton-delete'
      }, {
        name: 'copy',
        onClick: handleCopy,
        testId: 'templateButton-copy'
      }, {
        name: 'cut',
        onClick: handleCut,
        testId: 'templateButton-cut'
      }]]
    };
  }, [handleCopy, handleCut, handleDelete]);
  return /*#__PURE__*/_createElement(_styled.HeaderWrapper, {
    className: "header-toolbar",
    "data-testid": "card-vote-header-toolbar",
    ref: containerRef
  }, /*#__PURE__*/_createElement(_weToolbar.InlineToolbar, {
    getContainer: getContainer,
    moreMenuConfig: moreMenuConfig,
    width: 400
  }, /*#__PURE__*/_createElement(_weToolbar.IconButton, {
    onClick: handleEdit,
    icon: /*#__PURE__*/_createElement(_weIcon.EditNormal, {
      style: {
        cursor: 'pointer'
      },
      "data-testid": "card-vote-header-toolbar-edit"
    })
  })));
};

var _default = HeaderToolbar;
exports.default = _default;
//# sourceMappingURL=headerToolbar.js.map