{"version":3,"sources":["../../../../src/utils/hooks/createOnAction.tsx"],"names":["removeVoteId","node","Block","create","type","Card","TYPE","data","cardType","height","metadata","voteId","undefined","createOnAction","votePluginConfig","copyNodes","action","controller","next","createVote","modifyVote","submitVote","payload","VOTING_ACTIVE","command","setCardInjectionCommand","voting","VOTE_SAVE","setData","rest","console","warn","func","then","optionInfoList","readOnly","withoutSaving","Commands","setNodeByKey","key","VOTE_EDITING","editing","VOTE_CANCEL_EDITING","removeNodeByKey","VOTE_DELETE","VOTE_COPY","value","document","getNode","copyNode","rst","query","Promise","catch","e","error","VOTE_CUT","VOTE_SUBMIT","state","hasEnded","VOTE_CANCEL_VOTING"],"mappings":"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","sourcesContent":["import { orderBy } from 'lodash-es';\nimport { Controller, Commands, Block, Node } from '@ali/4ever-cangjie';\nimport { Card } from '@ali/4ever-plugin-card';\nimport { VotePluginConfig } from '../types';\nimport setCardInjectionCommand from '../commands/setCardInjection';\nimport {\n  VOTE_SAVE,\n  VOTING_ACTIVE,\n  VOTE_EDITING,\n  VOTE_CANCEL_EDITING,\n  VOTE_CANCEL_VOTING,\n  VOTE_DELETE,\n  VOTE_COPY,\n  VOTE_CUT,\n  VOTE_SUBMIT,\n} from '../actions';\n\nexport const removeVoteId = (node: Node): Node => {\n  return Block.create({\n    type: Card.TYPE,\n    data: {\n      cardType: 'vote',\n      height: 400,\n      metadata: {\n        // @ts-ignore\n        ...node?.data.metadata,\n        voteId: undefined,\n      },\n    },\n  });\n};\n\nconst createOnAction = (votePluginConfig: VotePluginConfig, copyNodes?) => (action, controller: Controller, next) => {\n  const { createVote, modifyVote, submitVote } = votePluginConfig;\n  const { type, payload } = action;\n\n  // 切换到投票状态\n  if (type === VOTING_ACTIVE) {\n    const { node } = payload;\n    return controller.command(setCardInjectionCommand, node, { voting: true });\n  }\n\n  // 投票内容提交\n  if (type === VOTE_SAVE) {\n    const { node, setData, ...rest } = payload;\n    if (!modifyVote) {\n      console.warn('Missing `modifyVote`');\n      return;\n    }\n    if (!createVote) {\n      console.warn('Missing `createVote`');\n      return;\n    }\n\n    const func = node.data.metadata.voteId ? modifyVote : createVote;\n\n    func(rest).then((data) => {\n      data.optionInfoList = orderBy(data.optionInfoList, 'pos');\n      setData(data);\n\n      const { readOnly } = controller;\n      !readOnly &&\n        controller.withoutSaving(() =>\n          controller.command(Commands.setNodeByKey, node.key, {\n            type: node.type,\n            data: {\n              ...node.data,\n              metadata: data,\n            },\n          })\n        );\n    });\n\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  // 切换到编辑态\n  if (type === VOTE_EDITING) {\n    const { node } = payload;\n    return controller.command(setCardInjectionCommand, node, { editing: true });\n  }\n\n  // 取消编辑\n  if (type === VOTE_CANCEL_EDITING) {\n    const { node, ...rest } = payload;\n    if (!rest.voteId) {\n      controller.command(Commands.removeNodeByKey, node.key);\n    }\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  // 删除\n  if (type === VOTE_DELETE) {\n    const { key } = payload;\n    return controller.command(Commands.removeNodeByKey, key);\n  }\n\n  // 复制\n  if (type === VOTE_COPY) {\n    const { key } = payload;\n    const node = controller.value.document.getNode(key) ?? undefined;\n    if (node) {\n      const copyNode = removeVoteId(node);\n      const rst = controller.query('copyNodes', copyNode);\n      if (rst instanceof Promise) {\n        rst.catch((e) => console.error('copy error', e));\n      }\n    }\n  }\n\n  // 剪切\n  if (type === VOTE_CUT) {\n    const { key } = payload;\n    const node = controller.value.document.getNode(key) ?? undefined;\n    if (node) {\n      const copyNode = removeVoteId(node);\n      const rst = controller.query('copyNodes', copyNode);\n      if (rst instanceof Promise) {\n        rst.catch((e) => console.error('copy error', e));\n      }\n      return controller.command(Commands.removeNodeByKey, key);\n    }\n  }\n\n  // 投票\n  if (type === VOTE_SUBMIT) {\n    if (!submitVote) {\n      console.warn('Missing `submitVote`');\n      return;\n    }\n\n    const { node, setData, ...rest } = payload;\n    submitVote(rest).then((data) => {\n      if (data.optionInfoList) {\n        data.optionInfoList = orderBy(data.optionInfoList, 'pos');\n        setData(data);\n        const { readOnly } = controller;\n        !readOnly &&\n          controller.withoutSaving(() =>\n            controller.command(Commands.setNodeByKey, node.key, {\n              type: node.type,\n              data: {\n                ...node.data,\n                metadata: data,\n              },\n            })\n          );\n      } else {\n        setData((state) => {\n          return {\n            ...state,\n            hasEnded: true,\n          };\n        });\n      }\n    });\n\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  // 取消投票\n  if (type === VOTE_CANCEL_VOTING) {\n    const { node } = payload;\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  return next();\n};\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}