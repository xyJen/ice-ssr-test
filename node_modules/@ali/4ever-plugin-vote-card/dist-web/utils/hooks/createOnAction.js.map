{"version":3,"sources":["../../../../src/utils/hooks/createOnAction.tsx"],"names":["orderBy","Commands","Block","Card","setCardInjectionCommand","VOTE_SAVE","VOTING_ACTIVE","VOTE_EDITING","VOTE_CANCEL_EDITING","VOTE_CANCEL_VOTING","VOTE_DELETE","VOTE_COPY","VOTE_CUT","VOTE_SUBMIT","removeVoteId","node","create","type","TYPE","data","cardType","height","metadata","voteId","undefined","createOnAction","votePluginConfig","copyNodes","action","controller","next","createVote","modifyVote","submitVote","payload","command","voting","setData","rest","console","warn","func","then","optionInfoList","readOnly","withoutSaving","setNodeByKey","key","editing","removeNodeByKey","value","document","getNode","copyNode","rst","query","Promise","e","error","state","hasEnded"],"mappings":"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","sourcesContent":["import { orderBy } from 'lodash-es';\nimport { Controller, Commands, Block, Node } from '@ali/4ever-cangjie';\nimport { Card } from '@ali/4ever-plugin-card';\nimport { VotePluginConfig } from '../types';\nimport setCardInjectionCommand from '../commands/setCardInjection';\nimport {\n  VOTE_SAVE,\n  VOTING_ACTIVE,\n  VOTE_EDITING,\n  VOTE_CANCEL_EDITING,\n  VOTE_CANCEL_VOTING,\n  VOTE_DELETE,\n  VOTE_COPY,\n  VOTE_CUT,\n  VOTE_SUBMIT,\n} from '../actions';\n\nexport const removeVoteId = (node: Node): Node => {\n  return Block.create({\n    type: Card.TYPE,\n    data: {\n      cardType: 'vote',\n      height: 400,\n      metadata: {\n        // @ts-ignore\n        ...node?.data.metadata,\n        voteId: undefined,\n      },\n    },\n  });\n};\n\nconst createOnAction = (votePluginConfig: VotePluginConfig, copyNodes?) => (action, controller: Controller, next) => {\n  const { createVote, modifyVote, submitVote } = votePluginConfig;\n  const { type, payload } = action;\n\n  // 切换到投票状态\n  if (type === VOTING_ACTIVE) {\n    const { node } = payload;\n    return controller.command(setCardInjectionCommand, node, { voting: true });\n  }\n\n  // 投票内容提交\n  if (type === VOTE_SAVE) {\n    const { node, setData, ...rest } = payload;\n    if (!modifyVote) {\n      console.warn('Missing `modifyVote`');\n      return;\n    }\n    if (!createVote) {\n      console.warn('Missing `createVote`');\n      return;\n    }\n\n    const func = node.data.metadata.voteId ? modifyVote : createVote;\n\n    func(rest).then((data) => {\n      data.optionInfoList = orderBy(data.optionInfoList, 'pos');\n      setData(data);\n\n      const { readOnly } = controller;\n      !readOnly &&\n        controller.withoutSaving(() =>\n          controller.command(Commands.setNodeByKey, node.key, {\n            type: node.type,\n            data: {\n              ...node.data,\n              metadata: data,\n            },\n          })\n        );\n    });\n\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  // 切换到编辑态\n  if (type === VOTE_EDITING) {\n    const { node } = payload;\n    return controller.command(setCardInjectionCommand, node, { editing: true });\n  }\n\n  // 取消编辑\n  if (type === VOTE_CANCEL_EDITING) {\n    const { node, ...rest } = payload;\n    if (!rest.voteId) {\n      controller.command(Commands.removeNodeByKey, node.key);\n    }\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  // 删除\n  if (type === VOTE_DELETE) {\n    const { key } = payload;\n    return controller.command(Commands.removeNodeByKey, key);\n  }\n\n  // 复制\n  if (type === VOTE_COPY) {\n    const { key } = payload;\n    const node = controller.value.document.getNode(key) ?? undefined;\n    if (node) {\n      const copyNode = removeVoteId(node);\n      const rst = controller.query('copyNodes', copyNode);\n      if (rst instanceof Promise) {\n        rst.catch((e) => console.error('copy error', e));\n      }\n    }\n  }\n\n  // 剪切\n  if (type === VOTE_CUT) {\n    const { key } = payload;\n    const node = controller.value.document.getNode(key) ?? undefined;\n    if (node) {\n      const copyNode = removeVoteId(node);\n      const rst = controller.query('copyNodes', copyNode);\n      if (rst instanceof Promise) {\n        rst.catch((e) => console.error('copy error', e));\n      }\n      return controller.command(Commands.removeNodeByKey, key);\n    }\n  }\n\n  // 投票\n  if (type === VOTE_SUBMIT) {\n    if (!submitVote) {\n      console.warn('Missing `submitVote`');\n      return;\n    }\n\n    const { node, setData, ...rest } = payload;\n    submitVote(rest).then((data) => {\n      if (data.optionInfoList) {\n        data.optionInfoList = orderBy(data.optionInfoList, 'pos');\n        setData(data);\n        const { readOnly } = controller;\n        !readOnly &&\n          controller.withoutSaving(() =>\n            controller.command(Commands.setNodeByKey, node.key, {\n              type: node.type,\n              data: {\n                ...node.data,\n                metadata: data,\n              },\n            })\n          );\n      } else {\n        setData((state) => {\n          return {\n            ...state,\n            hasEnded: true,\n          };\n        });\n      }\n    });\n\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  // 取消投票\n  if (type === VOTE_CANCEL_VOTING) {\n    const { node } = payload;\n    return controller.command(setCardInjectionCommand, node, {});\n  }\n\n  return next();\n};\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}