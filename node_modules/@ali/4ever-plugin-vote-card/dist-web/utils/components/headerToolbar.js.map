{"version":3,"sources":["../../../../src/utils/components/headerToolbar.tsx"],"names":["React","useCallback","useMemo","useRef","InlineToolbar","IconButton","EditNormal","voteCopy","voteDelete","voteEditing","voteCut","HeaderWrapper","HeaderToolbar","props","controller","node","containerRef","getContainer","current","window","document","body","handleEdit","run","handleDelete","key","handleCopy","handleCut","moreMenuConfig","options","name","onClick","testId","cursor"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,MAAtC,QAAoD,OAApD;qBAC4B,a;AAC5B,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,iBAA1C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,WAA/B,EAA4CC,OAA5C;AACA,SAASC,aAAT;;AAOA,IAAMC,aAA+B,GAAG,SAAlCA,aAAkC,CAACC,KAAD,EAAmB;AAAA,MACjDC,UADiD,GAC5BD,KAD4B,CACjDC,UADiD;AAAA,MACrCC,IADqC,GAC5BF,KAD4B,CACrCE,IADqC;AAEzD,MAAMC,YAAY,GAAGb,MAAM,CAAiB,IAAjB,CAA3B;AAEA,MAAMc,YAAY,GAAGhB,WAAW,CAAC,YAAM;AACrC,WAAOe,YAAY,CAACE,OAAb,IAAwBC,MAAM,CAACC,QAAP,CAAgBC,IAA/C;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAMC,UAAU,GAAGrB,WAAW,CAAC,YAAM;AACnCa,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2Bd,WAAW,CAACM,IAAD,CAAtC;AACD,GAF6B,EAE3B,EAF2B,CAA9B;AAIA,MAAMS,YAAY,GAAGvB,WAAW,CAAC,YAAM;AACrCa,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2Bf,UAAU,CAACO,IAAI,CAACU,GAAN,CAArC;AACD,GAF+B,EAE7B,CAACX,UAAD,CAF6B,CAAhC;AAIA,MAAMY,UAAU,GAAGzB,WAAW,CAAC,YAAM;AACnCa,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2BhB,QAAQ,CAACQ,IAAI,CAACU,GAAN,CAAnC;AACD,GAF6B,EAE3B,CAACX,UAAD,CAF2B,CAA9B;AAIA,MAAMa,SAAS,GAAG1B,WAAW,CAAC,YAAM;AAClCa,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2Bb,OAAO,CAACK,IAAI,CAACU,GAAN,CAAlC;AACD,GAF4B,EAE1B,CAACX,UAAD,CAF0B,CAA7B;AAIA,MAAMc,cAAmB,GAAG1B,OAAO,CAAC,YAAM;AACxC,WAAO;AACL2B,MAAAA,OAAO,EAAE,CACP,CACE;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAEP,YAA3B;AAAyCQ,QAAAA,MAAM,EAAE;AAAjD,OADF,EAEE;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAEL,UAAzB;AAAqCM,QAAAA,MAAM,EAAE;AAA7C,OAFF,EAGE;AAAEF,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAEJ,SAAxB;AAAmCK,QAAAA,MAAM,EAAE;AAA3C,OAHF,CADO;AADJ,KAAP;AASD,GAVkC,EAUhC,CAACN,UAAD,EAAaC,SAAb,EAAwBH,YAAxB,CAVgC,CAAnC;AAYA,sBACE,eAAC,aAAD;AAAe,IAAA,SAAS,EAAC,gBAAzB;AAA0C,mBAAY,0BAAtD;AAAiF,IAAA,GAAG,EAAER;AAAtF,kBACE,eAAC,aAAD;AACE,IAAA,YAAY,EAAEC,YADhB;AAEE,IAAA,cAAc,EAAEW,cAFlB;AAGE,IAAA,KAAK,EAAE;AAHT,kBAKE,eAAC,UAAD;AACE,IAAA,OAAO,EAAEN,UADX;AAEE,IAAA,IAAI,eACF,eAAC,UAAD;AACE,MAAA,KAAK,EAAE;AAAEW,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,qBAAY;AAFd;AAHJ,IALF,CADF,CADF;AAmBD,CAvDD;;AAyDA,eAAerB,aAAf","sourcesContent":["import React, { useCallback, useMemo, useRef } from 'react';\nimport { Block, Controller } from '@ali/4ever-cangjie';\nimport { InlineToolbar, IconButton } from '@ali/we-toolbar';\nimport { EditNormal } from '@ali/we-icon';\nimport { voteCopy, voteDelete, voteEditing, voteCut } from '../actions';\nimport { HeaderWrapper } from './styled';\n\ninterface IProps {\n  controller: Controller;\n  node: Block;\n}\n\nconst HeaderToolbar: React.FC<IProps> = (props: IProps) => {\n  const { controller, node } = props;\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const getContainer = useCallback(() => {\n    return containerRef.current || window.document.body;\n  }, []);\n\n  const handleEdit = useCallback(() => {\n    controller.run('onAction', voteEditing(node));\n  }, []);\n\n  const handleDelete = useCallback(() => {\n    controller.run('onAction', voteDelete(node.key));\n  }, [controller]);\n\n  const handleCopy = useCallback(() => {\n    controller.run('onAction', voteCopy(node.key));\n  }, [controller]);\n\n  const handleCut = useCallback(() => {\n    controller.run('onAction', voteCut(node.key));\n  }, [controller]);\n\n  const moreMenuConfig: any = useMemo(() => {\n    return {\n      options: [\n        [\n          { name: 'delete', onClick: handleDelete, testId: 'templateButton-delete' },\n          { name: 'copy', onClick: handleCopy, testId: 'templateButton-copy' },\n          { name: 'cut', onClick: handleCut, testId: 'templateButton-cut' },\n        ],\n      ],\n    };\n  }, [handleCopy, handleCut, handleDelete]);\n\n  return (\n    <HeaderWrapper className=\"header-toolbar\" data-testid=\"card-vote-header-toolbar\" ref={containerRef}>\n      <InlineToolbar\n        getContainer={getContainer}\n        moreMenuConfig={moreMenuConfig}\n        width={400}\n      >\n        <IconButton\n          onClick={handleEdit}\n          icon={\n            <EditNormal\n              style={{ cursor: 'pointer' }}\n              data-testid=\"card-vote-header-toolbar-edit\"\n            />\n          }\n        />\n      </InlineToolbar>\n    </HeaderWrapper>\n  );\n};\n\nexport default HeaderToolbar;\n"],"file":"headerToolbar.js"}