import React, { useCallback, useState, useMemo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import cls from 'classnames';
import dayjs from 'dayjs';
import { Button } from '@ali/we-design-next';
import { voteSubmit, cancelVoting } from "../actions";
import { EnumVoteType } from "../types";
import HeaderToolbar from "./headerToolbar";
import { ContainerWrapper, VotingWrapper, TitleReaderWrapper } from "./styled";
var Voting = /*#__PURE__*/React.memo(function (props) {
  var _data$optionInfoList2, _data$participateUser;

  var _useState = useState([]),
      checked = _useState[0],
      setChecked = _useState[1];

  var node = props.node,
      locale = props.locale,
      controller = props.controller,
      isSelected = props.isSelected,
      data = props.data,
      setData = props.setData,
      readOnly = props.readOnly; // 我是否有投过票

  var userOptionTicketed = useMemo(function () {
    var _data$optionInfoList;

    return !!((_data$optionInfoList = data.optionInfoList) != null && _data$optionInfoList.find(function (item) {
      return item.userOptionTicket !== 0;
    }));
  }, [data]);
  var handleVote = useCallback(function () {
    if (checked.length === 0) return;
    controller.run('onAction', voteSubmit({
      node: node,
      voteId: data.voteId,
      optionIds: checked,
      setData: setData
    }));
  }, [checked, setData]);
  var handleCancel = useCallback(function () {
    controller.run('onAction', cancelVoting(node));
  }, [node]);
  var handleChecked = useCallback(function (id) {
    if (checked.includes(id)) {
      setChecked(checked.filter(function (i) {
        return i !== id;
      }));
      return;
    } // 单选只能选一个


    if (data.voteType === EnumVoteType.RADIO) {
      setChecked([id]);
      return;
    }

    setChecked([].concat(checked, [id]));
  }, [checked]);
  return /*#__PURE__*/_createElement(ContainerWrapper, {
    isSelected: isSelected,
    "data-role": "vote",
    "data-testid": "card-vote-container-voting"
  }, /*#__PURE__*/_createElement(VotingWrapper, null, !controller.readOnly && !readOnly && /*#__PURE__*/_createElement(HeaderToolbar, {
    controller: controller,
    node: node
  }), /*#__PURE__*/_createElement(TitleReaderWrapper, null, /*#__PURE__*/_createElement("span", null, data.voteType === EnumVoteType.RADIO ? locale == null ? void 0 : locale.radio : locale == null ? void 0 : locale.checkbox), /*#__PURE__*/_createElement("span", {
    "data-testid": "card-vote-voting-title"
  }, data.title)), /*#__PURE__*/_createElement("div", {
    className: "voting-options"
  }, (_data$optionInfoList2 = data.optionInfoList) == null ? void 0 : _data$optionInfoList2.map(function (item) {
    return /*#__PURE__*/_createElement("div", {
      className: cls({
        checked: checked.includes(item.optionId)
      }),
      onClick: function onClick() {
        return handleChecked(item.optionId);
      }
    }, /*#__PURE__*/_createElement("span", {
      className: data.voteType === EnumVoteType.RADIO ? 'radio' : 'checkbox'
    }), /*#__PURE__*/_createElement("span", null, item.content));
  })), /*#__PURE__*/_createElement("div", {
    className: "voting-footer"
  }, /*#__PURE__*/_createElement("div", null, data.participateUserCount > 0 && /*#__PURE__*/_createElement("span", null, "" + String((_data$participateUser = data.participateUserCount) != null ? _data$participateUser : 0) + (locale == null ? void 0 : locale.total), " "), /*#__PURE__*/_createElement("span", null, dayjs(data.endTime).format('YYYY-MM-DD HH:mm:ss'), " ", locale == null ? void 0 : locale.expired, " ")), /*#__PURE__*/_createElement("div", null, (data.showTicketBeforeVoting && data.participateUserCount || userOptionTicketed) && /*#__PURE__*/_createElement(Button, {
    className: "cancel",
    "data-role": "cancel",
    onClick: handleCancel
  }, locale == null ? void 0 : locale.cancel), /*#__PURE__*/_createElement(Button, {
    "data-role": "submit",
    type: "primary",
    disabled: checked.length === 0,
    onClick: handleVote
  }, locale == null ? void 0 : locale.submit)))));
});
export default Voting;
//# sourceMappingURL=voting.js.map