import React, { useCallback, useMemo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import cls from 'classnames';
import dayjs from 'dayjs';
import { votingActive } from "../actions";
import { EnumVoteType } from "../types";
import HeaderToolbar from "./headerToolbar";
import { ContainerWrapper, ResultWrapper, TitleReaderWrapper } from "./styled";

var _ref = /*#__PURE__*/_createElement("i", null);

var Result = function Result(props) {
  var _data$optionInfoList2, _data$participateUser;

  var node = props.node,
      locale = props.locale,
      controller = props.controller,
      isSelected = props.isSelected,
      data = props.data,
      readOnly = props.readOnly,
      isPublish = props.isPublish;
  var handleReVote = useCallback(function () {
    controller.run('onAction', votingActive(node));
  }, []); // 我是否有投过票

  var userOptionTicketed = useMemo(function () {
    var _data$optionInfoList;

    return !!((_data$optionInfoList = data.optionInfoList) != null && _data$optionInfoList.find(function (item) {
      return item.userOptionTicket !== 0;
    }));
  }, [data]);
  return /*#__PURE__*/_createElement(ContainerWrapper, {
    isSelected: isSelected,
    "data-role": "vote",
    "data-testid": "card-vote-container-result"
  }, /*#__PURE__*/_createElement(ResultWrapper, null, !controller.readOnly && !readOnly && !isPublish && /*#__PURE__*/_createElement(HeaderToolbar, {
    controller: controller,
    node: node
  }), /*#__PURE__*/_createElement(TitleReaderWrapper, null, /*#__PURE__*/_createElement("span", null, data.voteType === EnumVoteType.RADIO ? locale == null ? void 0 : locale.radio : locale == null ? void 0 : locale.checkbox), /*#__PURE__*/_createElement("span", {
    "data-testid": "card-vote-result-title"
  }, data.title)), /*#__PURE__*/_createElement("div", {
    className: "result-options"
  }, (_data$optionInfoList2 = data.optionInfoList) == null ? void 0 : _data$optionInfoList2.map(function (item) {
    var _item$optionTicket, _data$totalVoteCount, _item$optionTicket2, _data$totalVoteCount2;

    return /*#__PURE__*/_createElement("div", {
      className: cls({
        checked: item.userOptionTicket !== 0
      })
    }, /*#__PURE__*/_createElement("span", null, item.content), /*#__PURE__*/_createElement("span", null, String(item.optionTicket) + " " + (locale == null ? void 0 : locale.unit), _ref, !item.optionTicket || !data.totalVoteCount ? 0 : (((_item$optionTicket = item.optionTicket) != null ? _item$optionTicket : 0) / ((_data$totalVoteCount = data.totalVoteCount) != null ? _data$totalVoteCount : 0) * 100).toFixed(2), "%"), /*#__PURE__*/_createElement("div", null, /*#__PURE__*/_createElement("div", {
      style: {
        width: (!item.optionTicket || !data.totalVoteCount ? 0 : (((_item$optionTicket2 = item.optionTicket) != null ? _item$optionTicket2 : 0) / ((_data$totalVoteCount2 = data.totalVoteCount) != null ? _data$totalVoteCount2 : 0) * 100).toFixed(2)) + "%"
      }
    })));
  })), /*#__PURE__*/_createElement("div", {
    className: "result-footer"
  }, /*#__PURE__*/_createElement("span", null, "" + String((_data$participateUser = data.participateUserCount) != null ? _data$participateUser : 0) + (locale == null ? void 0 : locale.total)), /*#__PURE__*/_createElement("span", null, dayjs(data.endTime).format('YYYY-MM-DD HH:mm:ss'), " ", locale == null ? void 0 : locale.expired), !data.hasEnded && !isPublish && /*#__PURE__*/_createElement("span", {
    onClick: handleReVote
  }, userOptionTicketed ? locale == null ? void 0 : locale.reVote : locale == null ? void 0 : locale.submit))));
};

export default Result;
//# sourceMappingURL=result.js.map