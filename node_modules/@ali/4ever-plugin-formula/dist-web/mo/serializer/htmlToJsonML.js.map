{"version":3,"sources":["../../../../src/mo/serializer/htmlToJsonML.ts"],"names":["v4","uuid","createTextWithString","name","onOpenTag","state","attrs","value","mode","type","metadata","id","formula","formulaTag","tagType","jc","push","onCloseTag","pop","append"],"mappings":"AAEA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,SADO;AAGbC,EAAAA,SAAS,EAAE,mBAACC,KAAD,EAAeF,IAAf,EAA6BG,KAA7B,EAA4D;AAAA,QAC7DC,KAD6D,GACvCD,KADuC,CAC7DC,KAD6D;AAAA,QACtDC,IADsD,GACvCF,KADuC,CACtDE,IADsD;AAAA,QAChDC,IADgD,GACvCH,KADuC,CAChDG,IADgD;AAErE,QAAIN,IAAI,KAAK,MAAT,IAAmBM,IAAI,KAAK,SAAhC,EAA2C,OAAO,KAAP;AAE3C,QAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEV,IAAI,EADO;AAEfQ,MAAAA,IAAI,EAAE,sCAFS;AAGfG,MAAAA,OAAO,EAAEL;AAHM,KAAjB;AAKA,QAAMM,UAAkB,GAAG,CACzB,KADyB,EAEzB;AACEC,MAAAA,OAAO,EAAE,MADX;AAEEJ,MAAAA,QAAQ,EAARA;AAFF,KAFyB,EAMzBR,oBAAoB,CAAC,EAAD,CANK,CAA3B;AAQA,QAAMU,OAAe,GAAGJ,IAAI,KAAK,QAAT,GACnBK,UADmB,GAEpB,CACA,GADA,EAEA;AACEE,MAAAA,EAAE,EAAE;AADN,KAFA,EAKAb,oBAAoB,CAAC,EAAD,CALpB,EAMAW,UANA,EAOAX,oBAAoB,CAAC,EAAD,CAPpB,CAFJ;AAYAG,IAAAA,KAAK,CAACW,IAAN,CAAWJ,OAAX;AACA,WAAO,IAAP;AACD,GAlCY;AAoCbK,EAAAA,UAAU,EAAE,oBAACZ,KAAD,EAAeF,IAAf,EAA6BG,KAA7B,EAA4D;AACtE,QAAIH,IAAI,KAAK,MAAT,IAAmBG,KAAK,CAACG,IAAN,KAAe,SAAtC,EAAiD,OAAO,KAAP;AACjD,QAAMG,OAAO,GAAGP,KAAK,CAACa,GAAN,EAAhB;AACAb,IAAAA,KAAK,CAACc,MAAN,CAAaP,OAAb;AACA,WAAO,IAAP;AACD;AAzCY,CAAf","sourcesContent":["import { JsonML } from '@ali/4ever-utils';\nimport { MoState as State, MoAttributes as Attributes } from '@ali/4ever-cangjie';\nimport { v4 as uuid } from 'uuid';\nimport { createTextWithString } from '@ali/4ever-cangjie';\n\nexport default {\n  name: 'formula',\n\n  onOpenTag: (state: State, name: string, attrs: Attributes): boolean => {\n    const { value, mode, type } = attrs;\n    if (name !== 'span' || type !== 'formula') return false;\n\n    const metadata = {\n      id: uuid(),\n      type: 'application/x-alidocs-plugin-formula',\n      formula: value,\n    };\n    const formulaTag: JsonML = [\n      'tag',\n      {\n        tagType: 'hetu',\n        metadata,\n      },\n      createTextWithString('')\n    ];\n    const formula: JsonML = mode === 'inline'\n      ?  formulaTag\n      : [\n        'p',\n        {\n          jc: 'center',\n        },\n        createTextWithString(''),\n        formulaTag,\n        createTextWithString('')\n      ];\n\n    state.push(formula);\n    return true;\n  },\n\n  onCloseTag: (state: State, name: string, attrs: Attributes): boolean => {\n    if (name !== 'span' || attrs.type !== 'formula') return false;\n    const formula = state.pop();\n    state.append(formula);\n    return true;\n  },\n};\n"],"file":"htmlToJsonML.js"}