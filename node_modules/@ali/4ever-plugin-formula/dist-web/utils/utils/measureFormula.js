import { renderToString } from 'katex'; // 公式内容的边距

export var CONTENT_MARGIN = 4;
var ERROR_COLOR = '#FF5219';
export var FORMULA_PLACEHOLDER_WIDTH = 98;
export var FORMULA_PLACEHOLDER_HEIGHT = 32;
export var FORMULA_PREVIEW_MIN_WIDTH = 8;
export var FORMULA_PREVIEW_MIN_HEIGHT = 32;
export var createPlaceholderSize = function createPlaceholderSize() {
  return {
    width: FORMULA_PLACEHOLDER_WIDTH,
    height: FORMULA_PLACEHOLDER_HEIGHT
  };
};
export function getKatexString(text, throwOnError) {
  if (throwOnError === void 0) {
    throwOnError = false;
  }

  return renderToString(text, {
    errorColor: ERROR_COLOR,
    throwOnError: throwOnError
  });
}
export function calcuSize(formula) {
  if (!formula) {
    return createPlaceholderSize();
  }

  var size = measureFormula(formula);
  var width = getValue(FORMULA_PREVIEW_MIN_WIDTH, CONTENT_MARGIN * 2 + size.width);
  var height = getValue(FORMULA_PREVIEW_MIN_HEIGHT, CONTENT_MARGIN * 2 + size.height);
  return {
    width: width,
    height: height
  };
}
/**
 * 返回一个不超过最小值和最大值的数字
 * @param min 最小值
 * @param value 计算值
 * @param max 最大值
 */

export function getValue(min, value, max) {
  if (!max) {
    return Math.max(min, value);
  }

  return Math.min(Math.max(min, value), max);
}
/**
 * 返回公式内容的大小
 * @param text 公式字符串
 */

export function measureFormula(text) {
  var editorContent = document.querySelector('div[data-cangjie-content]');

  if (!editorContent) {
    return createPlaceholderSize();
  }

  var domString = getKatexString(text);
  var faker = document.createElement('div');
  faker.style.width = 'fit-content';
  faker.innerHTML = domString;
  editorContent.appendChild(faker);

  var _faker$getBoundingCli = faker.getBoundingClientRect(),
      width = _faker$getBoundingCli.width,
      height = _faker$getBoundingCli.height;

  editorContent.removeChild(faker);
  return {
    width: width,
    height: height
  };
}
//# sourceMappingURL=measureFormula.js.map