import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { environment } from '@ali/4ever-cangjie';
import { ReferTextWrapper, ReferText } from "./styled";
import convertMarks from "./convertMarks";
import getFileName4Show from "./getFileName4Show";
import { FileIconMap, getFileTypeForRead } from '@ali/4ever-plugin-embed';

var Refer = function Refer(props) {
  var attributes = props.attributes,
      onDingpanPreview = props.onDingpanPreview,
      node = props.node;
  var data = node.data;
  var name = data.name,
      fileType = data.fileType,
      corpId = data.corpId,
      spaceId = data.spaceId,
      fileId = data.fileId,
      fileSize = data.fileSize;
  var text = node.nodes[0];
  var leaf = text.leaves[0];
  var marks = leaf ? leaf.marks : [];
  var isClicked = false;
  var onPreview = React.useCallback(function () {
    if (onDingpanPreview) {
      onDingpanPreview({
        corpId: corpId,
        spaceId: spaceId,
        fileId: fileId,
        fileSize: fileSize,
        fileType: fileType,
        fileName: name,
        mode: 'normal'
      });
    }
  }, []);
  var handleTouchStart = React.useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    isClicked = true;
  }, []);
  var handleTouchMove = React.useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    isClicked = false;
  }, []);
  var handleTouchEnd = React.useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();

    if (isClicked) {
      onPreview();
    }
  }, []);
  var innerType = getFileTypeForRead(name);
  var FileIcon = FileIconMap[innerType];
  return /*#__PURE__*/_createElement("span", attributes, /*#__PURE__*/_createElement(ReferTextWrapper, {
    "data-testid": "refer",
    onClick: onPreview,
    style: convertMarks(marks),
    onTouchStart: handleTouchStart,
    onTouchMove: handleTouchMove,
    onTouchEnd: handleTouchEnd
  }, FileIcon && /*#__PURE__*/_createElement(FileIcon, null), /*#__PURE__*/_createElement(ReferText, {
    isMobile: environment.IS_MOBILE
  }, getFileName4Show(innerType, data.name))));
};

export default /*#__PURE__*/React.memo(Refer);
//# sourceMappingURL=Refer.js.map