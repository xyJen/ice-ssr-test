{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToValue.ts"],"names":["getTagName","getAttributes","Refer","name","match","node","convert","data","create"],"mappings":";AACA,SAAiBA,UAAjB,EAA6BC,aAA7B,QAAkD,kBAAlD;AACA,OAAOC,KAAP;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,OADO;AAGbC,EAAAA,KAHa,iBAGPC,IAHO,EAGgB;AAC3B,WACEL,UAAU,CAACK,IAAD,CAAV,KAAqB,MAArB,IACAJ,aAAa,CAACI,IAAD,CAAb,CAAoB,WAApB,MAAqC,OAFvC;AAID,GARY;AAUbC,EAAAA,OAVa,mBAULD,IAVK,EAUiB;AAC5B,QAAME,IAAI,gBAAQN,aAAa,CAACI,IAAD,CAArB,CAAV;;AACA,WAAOE,IAAI,CAAC,WAAD,CAAX;AACA,WAAOL,KAAK,CAACM,MAAN,CAAa;AAClBD,MAAAA,IAAI,EAAJA;AADkB,KAAb,CAAP;AAGD;AAhBY,CAAf","sourcesContent":["import { Inline } from '@ali/4ever-cangjie';\nimport { JsonML, getTagName, getAttributes } from '@ali/4ever-utils';\nimport Refer from '../models';\n\nexport default {\n  name: 'refer',\n\n  match(node: JsonML): boolean {\n    return (\n      getTagName(node) === 'span' &&\n      getAttributes(node)['data-type'] === 'refer'\n    );\n  },\n\n  convert(node: JsonML): Inline {\n    const data = { ...getAttributes(node) };\n    delete data['data-type'];\n    return Refer.create({\n      data,\n    });\n  },\n};\n"],"file":"jsonMLToValue.js"}