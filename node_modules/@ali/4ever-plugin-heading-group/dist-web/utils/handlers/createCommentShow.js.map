{"version":3,"sources":["../../../../src/utils/handlers/createCommentShow.ts"],"names":["ViewMark","Block","getHeadingAncestors","injectToNodes","createCommentShow","options","onAutoUnfold","inject","onCommentShow","controller","payload","contentId","deco","value","decorations","find","mark","isViewMark","data","start","block","document","getFurthsestBlock","key","isBlock","groups","query","injections","parents","filter","group","userData","get","forEach","parent"],"mappings":"AAAA,SAASA,QAAT,QAAyB,2BAAzB;AACA,SAAqBC,KAArB,QAAkC,oBAAlC;AACA,SAASC,mBAAT;AACA,SAASC,aAAT;;AAeA,SAASC,iBAAT,CAA2BC,OAA3B,EAAwD;AAAA,MAC9CC,YAD8C,GACbD,OADa,CAC9CC,YAD8C;AAAA,wBACbD,OADa,CAChCE,MADgC;AAAA,MAChCA,MADgC,gCACvB,KADuB;AAGtD,SAAO,SAASC,aAAT,CAAuBC,UAAvB,EAA+CC,OAA/C,EAA4E;AAAA,QACzEC,SADyE,GAC3DD,OAD2D,CACzEC,SADyE;AAEjF,QAAMC,IAAI,GAAGH,UAAU,CAACI,KAAX,CAAiBC,WAAjB,CAA6BC,IAA7B,CAAkC;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aAAchB,QAAQ,CAACiB,UAAT,CAAoBD,IAApB,KAA6BA,IAAI,CAACE,IAAL,CAAUP,SAAV,KAAwBA,SAAnE;AAAA,KAAlC,CAAb;;AAEA,QAAI,CAACC,IAAL,EAAW;AACT;AACD;;AANgF,QAQzEO,KARyE,GAQ/DP,IAR+D,CAQzEO,KARyE;AASjF,QAAMC,KAAK,GAAGX,UAAU,CAACI,KAAX,CAAiBQ,QAAjB,CAA0BC,iBAA1B,CAA4CH,KAAK,CAACI,GAAlD,CAAd,CATiF,CAWjF;;AACA,QAAItB,KAAK,CAACuB,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;AACxB,UAAIK,MAAM,GAAGhB,UAAU,CAACiB,KAAX,CAAiBxB,mBAAjB,EAAsCkB,KAAtC,CAAb,CADwB,CAExB;;AACA,UAAIb,MAAJ,EAAY;AACVkB,QAAAA,MAAM,GAAGtB,aAAa,CAACM,UAAU,CAACI,KAAX,CAAiBc,UAAlB,EAA8BF,MAA9B,CAAtB;AACD,OALuB,CAOxB;;;AACA,UAAMG,OAAO,GAAGH,MAAM,CAACI,MAAP,CAAc,UAACC,KAAD;AAAA,eAAWrB,UAAU,CAACsB,QAAX,CAAoBC,GAApB,CAAwBF,KAAxB,EAA+B,MAA/B,CAAX;AAAA,OAAd,CAAhB;AACAF,MAAAA,OAAO,CAACK,OAAR,CAAgB,UAACC,MAAD;AAAA,eAAY5B,YAAY,CAACG,UAAD,EAAayB,MAAb,CAAxB;AAAA,OAAhB;AACD;AACF,GAvBD;AAwBD;;AAED,eAAe9B,iBAAf","sourcesContent":["import { ViewMark } from '@ali/4ever-plugin-comment';\nimport { Controller, Block } from '@ali/4ever-cangjie';\nimport { getHeadingAncestors } from '../queries';\nimport { injectToNodes } from '../utils';\n\nexport interface CommentShowPayload {\n  contentId: string;\n}\n\nexport interface CommentShowOptions {\n  onAutoUnfold: (controller: Controller, node: Block) => void;\n  /**\n   * 是否注入 Injection\n   * @default false\n   */\n  inject?: boolean;\n}\n\nfunction createCommentShow(options: CommentShowOptions) {\n  const { onAutoUnfold, inject = false } = options;\n\n  return function onCommentShow(controller: Controller, payload: CommentShowPayload) {\n    const { contentId } = payload;\n    const deco = controller.value.decorations.find(({ mark }) => ViewMark.isViewMark(mark) && mark.data.contentId === contentId);\n\n    if (!deco) {\n      return;\n    }\n\n    const { start } = deco;\n    const block = controller.value.document.getFurthsestBlock(start.key);\n\n    // TODO: 这里的 query 会在每次 select 时消耗一次 O(N) 的查询性能，后续考虑在 DOM 上做一次 O(h) 的查询来优化\n    if (Block.isBlock(block)) {\n      let groups = controller.query(getHeadingAncestors, block);\n      // 若开启了注入，则自动注入 Injection 数据\n      if (inject) {\n        groups = injectToNodes(controller.value.injections, groups);\n      }\n\n      // 过滤折叠标题自动展开\n      const parents = groups.filter((group) => controller.userData.get(group, 'fold'));\n      parents.forEach((parent) => onAutoUnfold(controller, parent));\n    }\n  };\n}\n\nexport default createCommentShow;\n"],"file":"createCommentShow.js"}