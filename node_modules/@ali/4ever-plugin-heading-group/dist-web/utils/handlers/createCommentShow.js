import { ViewMark } from '@ali/4ever-plugin-comment';
import { Block } from '@ali/4ever-cangjie';
import { getHeadingAncestors } from "../queries";
import { injectToNodes } from "../utils";

function createCommentShow(options) {
  var onAutoUnfold = options.onAutoUnfold,
      _options$inject = options.inject,
      inject = _options$inject === void 0 ? false : _options$inject;
  return function onCommentShow(controller, payload) {
    var contentId = payload.contentId;
    var deco = controller.value.decorations.find(function (_ref) {
      var mark = _ref.mark;
      return ViewMark.isViewMark(mark) && mark.data.contentId === contentId;
    });

    if (!deco) {
      return;
    }

    var start = deco.start;
    var block = controller.value.document.getFurthsestBlock(start.key); // TODO: 这里的 query 会在每次 select 时消耗一次 O(N) 的查询性能，后续考虑在 DOM 上做一次 O(h) 的查询来优化

    if (Block.isBlock(block)) {
      var groups = controller.query(getHeadingAncestors, block); // 若开启了注入，则自动注入 Injection 数据

      if (inject) {
        groups = injectToNodes(controller.value.injections, groups);
      } // 过滤折叠标题自动展开


      var parents = groups.filter(function (group) {
        return controller.userData.get(group, 'fold');
      });
      parents.forEach(function (parent) {
        return onAutoUnfold(controller, parent);
      });
    }
  };
}

export default createCommentShow;
//# sourceMappingURL=createCommentShow.js.map