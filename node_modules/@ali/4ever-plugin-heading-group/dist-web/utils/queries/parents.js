import { Block } from '@ali/4ever-cangjie';
import { condition, getHeadingLevel } from "../utils";
var headings = Array(6).fill(0).map(function (_, i) {
  return function (node) {
    return Block.isBlock(node) && node.type === "heading-" + (i + 1);
  };
});
/**
 * 查询节点的父级标题
 * @param controller
 * @param node
 * @returns
 */

export function getHeadingParent(controller, node) {
  var document = controller.value.document;
  var nodeLevel = getHeadingLevel(node);
  var $level = controller.query('getHeadingGroupLevel');
  var level = typeof $level === 'number' ? $level : 3; // H1 没有父级组

  if (nodeLevel === 1) {
    return null;
  }

  var cond;

  if (nodeLevel === -1 || nodeLevel > level) {
    cond = condition.apply(void 0, headings.slice(0, level));
  } else {
    cond = condition.apply(void 0, headings.slice(0, nodeLevel - 1));
  }

  var path = document.getPath(node.key);

  if (!path) {
    return null;
  }

  var index = path[0]; // 查询第一个高级标题节点返回

  var heading = null;
  var i = index - 1;

  while (i >= 0) {
    var prev = document.nodes[i];

    if (cond.some(prev)) {
      heading = prev;
      break;
    }

    i -= 1;
  }

  return heading;
}
/**
 * 查询节点的祖先标题组
 * @param controller
 * @param node
 * @returns
 */

export function getHeadingAncestors(controller, node) {
  var ancestors = [];
  var current = node;

  while (current !== null) {
    var parent = getHeadingParent(controller, current);

    if (parent) {
      ancestors.unshift(parent);
    }

    current = parent;
  }

  return ancestors;
}
//# sourceMappingURL=parents.js.map