"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everPluginComment = require("@ali/4ever-plugin-comment");

var _everCangjie = require("@ali/4ever-cangjie");

var _queries = require("../queries");

var _utils = require("../utils");

function createCommentShow(options) {
  const {
    onAutoUnfold,
    inject = false
  } = options;
  return function onCommentShow(controller, payload) {
    const {
      contentId
    } = payload;
    const deco = controller.value.decorations.find(({
      mark
    }) => _everPluginComment.ViewMark.isViewMark(mark) && mark.data.contentId === contentId);

    if (!deco) {
      return;
    }

    const {
      start
    } = deco;
    const block = controller.value.document.getFurthsestBlock(start.key); // TODO: 这里的 query 会在每次 select 时消耗一次 O(N) 的查询性能，后续考虑在 DOM 上做一次 O(h) 的查询来优化

    if (_everCangjie.Block.isBlock(block)) {
      let groups = controller.query(_queries.getHeadingAncestors, block); // 若开启了注入，则自动注入 Injection 数据

      if (inject) {
        groups = (0, _utils.injectToNodes)(controller.value.injections, groups);
      } // 过滤折叠标题自动展开


      const parents = groups.filter(group => controller.userData.get(group, 'fold'));
      parents.forEach(parent => onAutoUnfold(controller, parent));
    }
  };
}

var _default = createCommentShow;
exports.default = _default;
//# sourceMappingURL=createCommentShow.js.map