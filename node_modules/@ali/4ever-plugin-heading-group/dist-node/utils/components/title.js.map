{"version":3,"sources":["../../../../src/utils/components/title.tsx"],"names":["FoldBox","styled","div","props","foldBoxLeft","TitleBox","ArrowIconBox","span","size","rotate","arrow","Title","style","className","fold","onChange","dataName","disabled","children","role","foldBtnRef","React","useRef","titleRef","zoom","hovered","setHovered","useState","handleMouseEnterTitle","useCallback","handleMouseLeaveTitle","visible","handleClickFold","e","preventDefault","stopPropagation","useLayoutEffect","title","current","foldBtn","line","querySelector","row","domUtils","splitRows","rowHeight","height","foldBtnTop","Math","round","offsetHeight","getComputedStyle","top","foldClassName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport { domUtils, useZoom } from '@ali/4ever-cangjie';\n\nconst FoldBox = styled.div<{foldBoxLeft?: number}>`\n  opacity: 0;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  left: ${(props) => props.foldBoxLeft || 0 - 20}px;\n  margin: auto;\n  cursor: default;\n  z-index: 2;\n  border-radius: 4px;\n\n  &.disabled {\n    display: none;\n  }\n\n  &.visible {\n    opacity: 1;\n  }\n\n  &:hover {\n    background: rgba(25,31,37,0.08);\n  }\n`;\n\nconst TitleBox = styled.div`\n  position: relative;\n`;\n\nconst ArrowIconBox = styled.span<{ size: number; rotate: number }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n\n  & svg {\n    transform: rotateZ(${(props) => props.rotate}deg);\n    transition: transform 0.2s ease-in-out;\n  }\n`;\n\nconst arrow = (\n  <svg width=\"10\" height=\"7\" viewBox=\"0 0 10 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4.60369 5.98479C4.80384 6.24499 5.19616 6.24499 5.39631 5.98479L9.38088 0.804856C9.63381 0.476046 9.39941 0 8.98457 0L1.01543 0C0.600595 0 0.366189 0.476046 0.619119 0.804855L4.60369 5.98479Z\" fill=\"#171A1D\" fillOpacity=\"0.4\" />\n  </svg>\n);\n\nexport interface TitleProps {\n  style?: React.CSSProperties;\n  className?: string;\n  onChange?: (fold: boolean) => void;\n  fold: boolean;\n  dataName: string;\n  disabled?: boolean;\n  foldBoxLeft?: number;\n  role?: string;\n}\n\n/**\n * 分组标题组件\n * @param props\n * @returns\n */\nconst Title: React.FC<TitleProps> = (props) => {\n  const {\n    style,\n    className,\n    fold,\n    onChange,\n    dataName,\n    disabled,\n    children,\n    foldBoxLeft,\n    role,\n  } = props;\n\n  const foldBtnRef = React.useRef<HTMLDivElement>(null);\n  const titleRef = React.useRef<HTMLDivElement>(null);\n  const zoom = useZoom();\n\n  const [hovered, setHovered] = React.useState(false);\n  const handleMouseEnterTitle = React.useCallback(() => setHovered(true), []);\n  const handleMouseLeaveTitle = React.useCallback(() => setHovered(false), []);\n\n  const visible = hovered || fold;\n\n  /**\n   * 点击标题折叠\n   */\n  const handleClickFold = React.useCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (typeof onChange === 'function') {\n      onChange(!fold);\n    }\n  }, [fold, onChange]);\n\n  React.useLayoutEffect(() => {\n    if (!visible) {\n      return;\n    }\n    const title = titleRef.current;\n    const foldBtn = foldBtnRef.current;\n    if (!title || !foldBtn) {\n      return;\n    }\n    const line = title.querySelector('[data-name=\"heading-group-title-content\"]') || title;\n    const [row] = domUtils.splitRows(line, true);\n    const rowHeight = row.height;\n    const foldBtnTop = `${Math.round((rowHeight / zoom - foldBtn.offsetHeight) / 2)}px`;\n    if (getComputedStyle(foldBtn).top !== foldBtnTop) {\n      // 与第一行保持居中对齐\n      foldBtn.style.top = foldBtnTop;\n    }\n  });\n\n  const rotate = fold ? -90 : 0;\n  const foldClassName = classnames({\n    disabled,\n    visible,\n  });\n\n  return (\n    <TitleBox\n      ref={titleRef}\n      style={style}\n      className={className}\n      data-name={dataName}\n      onMouseEnter={handleMouseEnterTitle}\n      onMouseLeave={handleMouseLeaveTitle}\n    >\n      <FoldBox\n        ref={foldBtnRef}\n        foldBoxLeft={foldBoxLeft}\n        data-name=\"group-fold-btn\"\n        className={foldClassName}\n        onClick={handleClickFold}\n        data-role={role}\n      >\n        <ArrowIconBox size={20} rotate={rotate}>{arrow}</ArrowIconBox>\n      </FoldBox>\n      {children}\n    </TitleBox>\n  );\n};\n\nexport default Title;\n"],"file":"title.js"}