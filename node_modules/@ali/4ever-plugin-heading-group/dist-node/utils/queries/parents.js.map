{"version":3,"sources":["../../../../src/utils/queries/parents.ts"],"names":["headings","Array","fill","map","_","i","node","Block","isBlock","type","getHeadingParent","controller","document","value","nodeLevel","$level","query","level","cond","slice","path","getPath","key","index","heading","prev","nodes","some","getHeadingAncestors","ancestors","current","parent","unshift"],"mappings":";;;;;;;;AAAA;;AAEA;;AAEA,MAAMA,QAAQ,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,EAAiBC,GAAjB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAWC,IAAD,IAAeC,mBAAMC,OAAN,CAAcF,IAAd,KAAuBA,IAAI,CAACG,IAAL,KAAe,WAAUJ,CAAC,GAAG,CAAE,EAApG,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASK,gBAAT,CAA0BC,UAA1B,EAAkDL,IAAlD,EAA+D;AACpE,QAAM;AAAEM,IAAAA;AAAF,MAAeD,UAAU,CAACE,KAAhC;AACA,QAAMC,SAAS,GAAG,4BAAgBR,IAAhB,CAAlB;AACA,QAAMS,MAAM,GAAGJ,UAAU,CAACK,KAAX,CAAiB,sBAAjB,CAAf;AACA,QAAMC,KAAK,GAAG,OAAOF,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,CAApD,CAJoE,CAMpE;;AACA,MAAID,SAAS,KAAK,CAAlB,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,MAAII,IAAJ;;AAEA,MAAIJ,SAAS,KAAK,CAAC,CAAf,IAAoBA,SAAS,GAAGG,KAApC,EAA2C;AACzCC,IAAAA,IAAI,GAAG,sBAAU,GAAGlB,QAAQ,CAACmB,KAAT,CAAe,CAAf,EAAkBF,KAAlB,CAAb,CAAP;AACD,GAFD,MAEO;AACLC,IAAAA,IAAI,GAAG,sBAAU,GAAGlB,QAAQ,CAACmB,KAAT,CAAe,CAAf,EAAkBL,SAAS,GAAG,CAA9B,CAAb,CAAP;AACD;;AAED,QAAMM,IAAI,GAAGR,QAAQ,CAACS,OAAT,CAAiBf,IAAI,CAACgB,GAAtB,CAAb;;AACA,MAAI,CAACF,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,QAAM,CAACG,KAAD,IAAUH,IAAhB,CAvBoE,CAyBpE;;AACA,MAAII,OAA0C,GAAG,IAAjD;AACA,MAAInB,CAAC,GAAGkB,KAAK,GAAG,CAAhB;;AACA,SAAOlB,CAAC,IAAI,CAAZ,EAAe;AACb,UAAMoB,IAAI,GAAGb,QAAQ,CAACc,KAAT,CAAerB,CAAf,CAAb;;AACA,QAAIa,IAAI,CAACS,IAAL,CAAUF,IAAV,CAAJ,EAAqB;AACnBD,MAAAA,OAAO,GAAGC,IAAV;AACA;AACD;;AACDpB,IAAAA,CAAC,IAAI,CAAL;AACD;;AAED,SAAOmB,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASI,mBAAT,CAA6BjB,UAA7B,EAAqDL,IAArD,EAAkE;AACvE,QAAMuB,SAA4C,GAAG,EAArD;AAEA,MAAIC,OAA0C,GAAGxB,IAAjD;;AAEA,SAAOwB,OAAO,KAAK,IAAnB,EAAyB;AACvB,UAAMC,MAAM,GAAGrB,gBAAgB,CAACC,UAAD,EAAamB,OAAb,CAA/B;;AACA,QAAIC,MAAJ,EAAY;AACVF,MAAAA,SAAS,CAACG,OAAV,CAAkBD,MAAlB;AACD;;AACDD,IAAAA,OAAO,GAAGC,MAAV;AACD;;AAED,SAAOF,SAAP;AACD","sourcesContent":["import { Block, Controller } from '@ali/4ever-cangjie';\nimport type { FoldableHeadingData } from '@ali/4ever-plugin-heading';\nimport { condition, getHeadingLevel } from '../utils';\n\nconst headings = Array(6).fill(0).map((_, i) => (node: any) => Block.isBlock(node) && node.type === `heading-${i + 1}`);\n\n/**\n * 查询节点的父级标题\n * @param controller\n * @param node\n * @returns\n */\nexport function getHeadingParent(controller: Controller, node: Block) {\n  const { document } = controller.value;\n  const nodeLevel = getHeadingLevel(node);\n  const $level = controller.query('getHeadingGroupLevel');\n  const level = typeof $level === 'number' ? $level : 3;\n\n  // H1 没有父级组\n  if (nodeLevel === 1) {\n    return null;\n  }\n\n  let cond: ReturnType<typeof condition>;\n\n  if (nodeLevel === -1 || nodeLevel > level) {\n    cond = condition(...headings.slice(0, level));\n  } else {\n    cond = condition(...headings.slice(0, nodeLevel - 1));\n  }\n\n  const path = document.getPath(node.key);\n  if (!path) {\n    return null;\n  }\n  const [index] = path;\n\n  // 查询第一个高级标题节点返回\n  let heading: Block<FoldableHeadingData> | null = null;\n  let i = index - 1;\n  while (i >= 0) {\n    const prev = document.nodes[i];\n    if (cond.some(prev)) {\n      heading = prev;\n      break;\n    }\n    i -= 1;\n  }\n\n  return heading;\n}\n\n/**\n * 查询节点的祖先标题组\n * @param controller\n * @param node\n * @returns\n */\nexport function getHeadingAncestors(controller: Controller, node: Block) {\n  const ancestors: Array<Block<FoldableHeadingData>> = [];\n\n  let current: Block<FoldableHeadingData> | null = node;\n\n  while (current !== null) {\n    const parent = getHeadingParent(controller, current);\n    if (parent) {\n      ancestors.unshift(parent);\n    }\n    current = parent;\n  }\n\n  return ancestors;\n}\n"],"file":"parents.js"}