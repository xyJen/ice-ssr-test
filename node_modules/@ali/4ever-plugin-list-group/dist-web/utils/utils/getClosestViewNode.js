import { isList, isFoldGroupNode } from "./isInListGroup";
/**
 * 获取下一个可视节点
 *
 * 场景一：折叠列表 aaa 对应的 nextViewGroupNode 就是 列表 ddd
 *  >1. aaa
 *   2. ddd
 *
 * 场景二：列表 aaa 对应的 nextViewGroupNode 就是 段落 ddd
 *   1. aaa
 *   |  a. bbb
 *   |  b. ccc
 *   ddd
 */

export function getNextViewGroupNode(node, controller) {
  var document = controller.value.document;
  var level = node.data.list.level;
  var parent = document.getParent(node.key);

  if (!parent || !isList(node)) {
    return null;
  }

  var nextNode = parent.getNextBlock(node.key);

  while (nextNode && isList(nextNode)) {
    var nextLevel = nextNode.data.list.level;

    if (nextLevel <= level) {
      return nextNode;
    }

    nextNode = parent.getNextBlock(nextNode.key);
  }

  return nextNode;
}
/**
 * 获取上一个可视节点
 *
 * 场景一：列表 ddd 对应的 previousViewGroupNode 就是 列表 ccc
 *   1. aaa
 *   |  a. bbb
 *   |    i. ccc
 *   2. ddd
 *
 * 场景二：段落 ddd 对应的 previousViewGroupNode 就是 列表 bbb
 *   1. aaa
 *   | >a. bbb
 *   ddd
 *
 * 场景三：段落 ddd 对应的 previousViewGroupNode 就是 列表 aaa
 *  >1. aaa
 *   ddd
 */

export function getPreviousViewGroupNode(node, controller) {
  var document = controller.value.document;
  var parent = document.getParent(node.key);

  if (!parent) {
    return null;
  }

  var previousNode = parent.getPreviousBlock(node.key);
  var previousViewNode = previousNode;

  while (previousNode && isList(previousNode)) {
    var prevLevel = previousNode.data.list.level;

    if (prevLevel <= 0) {
      return previousViewNode;
    }

    previousNode = parent.getPreviousBlock(previousNode.key);

    if (previousNode && isFoldGroupNode(previousNode, controller)) {
      var _previousViewNode, _previousViewNode$dat, _previousNode, _previousNode$data$li;

      var viewLevel = (_previousViewNode = previousViewNode) == null ? void 0 : (_previousViewNode$dat = _previousViewNode.data.list) == null ? void 0 : _previousViewNode$dat.level;

      var _prevLevel = (_previousNode = previousNode) == null ? void 0 : (_previousNode$data$li = _previousNode.data.list) == null ? void 0 : _previousNode$data$li.level;

      var fold = controller.userData.get(previousNode, 'fold');

      if (fold && viewLevel > _prevLevel) {
        previousViewNode = previousNode;
      }
    }
  }

  if (!previousNode || !isList(previousViewNode)) {
    return null;
  }

  return previousViewNode;
}
//# sourceMappingURL=getClosestViewNode.js.map