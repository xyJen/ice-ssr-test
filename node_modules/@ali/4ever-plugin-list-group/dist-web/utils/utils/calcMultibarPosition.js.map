{"version":3,"sources":["../../../../src/utils/utils/calcMultibarPosition.ts"],"names":["theme","IndUtil","indent","TASK_BOX_WIDTH","STICKER_REG","SYMBOL_CONTENT_SPACING","ROMAN_EXTRA_INDENT","SYMBOL_MAGIC_OFFSET_X_MAP","ROMAN_FORMAT","TextMeasure","convertSymbolStyle","generateSymbol","getStickerSymbolWidth","DEFAULT_SHD_STYLES","SHD_PADDING_LEFT","paddingLeft","BORDER_LEFT","PUNCTUATIONS","calcShdPadding","paddingRight","marginLeft","marginRight","calcMultibarPosition","node","data","step","start","list","ind","shd","level","listStyle","isTaskList","isOrdered","listStyleType","paddingSpace","size","fromBlock","firstLine","left","listSymbol","symbolWidth","Number","symbolStyle","symbolProcessed","includes","length","slice","test","String","fontSize","measureTextWidth","format","calcFoldBoxPosition","foldBoxLeft","calcBackgroundWidth","SHAD_PADDING"],"mappings":"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","sourcesContent":["import { Block } from '@ali/4ever-cangjie';\nimport { theme, IndUtil, indent } from '@ali/4ever-utils';\nimport { \n  TASK_BOX_WIDTH,\n  STICKER_REG,\n  SYMBOL_CONTENT_SPACING,\n  ROMAN_EXTRA_INDENT,\n  SYMBOL_MAGIC_OFFSET_X_MAP,\n  ROMAN_FORMAT,\n  TextMeasure,\n  convertSymbolStyle,\n  generateSymbol,\n  getStickerSymbolWidth,\n } from '@ali/4ever-plugin-list';\n\nconst { DEFAULT_SHD_STYLES } = theme;\n\nconst SHD_PADDING_LEFT = DEFAULT_SHD_STYLES.paddingLeft as number;\nconst BORDER_LEFT = 4;\nconst PUNCTUATIONS = ['.', '、'];\n\nconst calcShdPadding = () => {\n  const {\n    paddingLeft = 0,\n    paddingRight = 0,\n    marginLeft = 0,\n    marginRight = 0,\n  } = DEFAULT_SHD_STYLES;\n  return paddingLeft + paddingRight;\n};\n\n/**\n * 计算列表连接线位置\n * @param node 折叠节点\n * @returns left 列表与左侧距离, symbolWidth 符号宽度\n */\nexport function calcMultibarPosition(\n  node: Block,\n): {\n    left: number;\n    listSymbol: string;\n    symbolWidth: number;\n  } {\n  const { step, start = 1, list, ind, shd } = node.data;\n  const { level, listStyle, isTaskList, isOrdered, listStyleType } = list;\n  let paddingSpace = level * indent.size;\n\n  if (ind) {\n    const { firstLine = 0, left = 0 } = IndUtil.fromBlock(node);\n    paddingSpace += firstLine + left;\n  }\n\n  if (isTaskList) {\n    return {\n      left: paddingSpace,\n      listSymbol: '',\n      symbolWidth: TASK_BOX_WIDTH,\n    };\n  }\n\n  const listSymbol = generateSymbol(\n    level,\n    Number(start),\n    step,\n    isOrdered,\n    listStyleType,\n    listStyle,\n  );\n  const symbolStyle = convertSymbolStyle(list.symbolStyle, isOrdered);\n  const symbolProcessed = PUNCTUATIONS.includes(\n    listSymbol[listSymbol.length - 1],\n  )\n    ? listSymbol.slice(0, -1)\n    : listSymbol;\n  const symbolWidth = STICKER_REG.test(listSymbol)\n    ? getStickerSymbolWidth(String(symbolStyle.fontSize))\n    : TextMeasure.measureTextWidth(\n      String(symbolProcessed),\n      'Arial',\n      (symbolStyle.fontSize as string) || '11pt',\n    );\n\n  if (!isOrdered) {\n    paddingSpace -= SYMBOL_MAGIC_OFFSET_X_MAP[listSymbol] || 0.5;\n  }\n\n  if (listStyle && ROMAN_FORMAT.includes(listStyle.format)) {\n    paddingSpace +=\n      ROMAN_EXTRA_INDENT -\n      (shd ? 0 : (SYMBOL_CONTENT_SPACING - 2)) -\n      symbolWidth +\n      SHD_PADDING_LEFT * (shd ? -1 : 1);\n  };\n\n  return {\n    left: paddingSpace,\n    listSymbol,\n    symbolWidth,\n  };\n}\n\n/**\n * 计算折叠按钮位置\n * @param\n * @param\n * @returns\n */\nexport function calcFoldBoxPosition(node: Block): number {\n  const { list, shd } = node.data;\n  const { symbolWidth, left } = calcMultibarPosition(node);\n  const foldBoxLeft =\n    left -\n    symbolWidth / 2 -\n    14 -\n    (!ROMAN_FORMAT.includes(list?.listStyle) && shd ? SHD_PADDING_LEFT * 2 : 0);\n  return foldBoxLeft;\n}\n\n/**\n * 计算 list group 背景颜色宽度\n * @param\n * @param\n * @returns\n */\nexport function calcBackgroundWidth(\n  node: Block,\n  left: number,\n  symbolWidth: number,\n): string {\n  const { list, shd } = node.data;\n  const SHAD_PADDING = calcShdPadding();\n  if (ROMAN_FORMAT.includes(list?.listStyle?.format)) {\n    return `calc(100% - ${\n      left + symbolWidth - SYMBOL_CONTENT_SPACING * 2 - SHAD_PADDING - 2\n    }px)`;\n  } else if (shd) {\n    return `calc(100% - ${left - SHD_PADDING_LEFT - SHAD_PADDING}px)`;\n  }\n  return `calc(100% - ${left}px)`;\n}\n"],"file":"calcMultibarPosition.js"}