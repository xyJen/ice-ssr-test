import { listGroupConditions } from "../conditions";
import { groupHeading as group } from '@ali/4ever-utils';
import { isSameGroupFrom } from "../utils";

function defaultIgnore() {
  return false;
}

export default function createGroupNodes(config) {
  var _config$ignore = config.ignore,
      ignore = _config$ignore === void 0 ? defaultIgnore : _config$ignore;
  return function groupNodes(range, ctx, controller, next) {
    var start = range[0];
    var parent = ctx.parent,
        groups = ctx.groups;
    var first = parent.nodes[start];
    var second = parent.nodes[start + 1];
    var parentGroup = groups[groups.length - 1]; // 如果是文档末尾，则不分组

    if (ignore() || !second) {
      return next();
    }

    var inSameGrounp = isSameGroupFrom(parentGroup, first); // 查找可用的 group 条件

    var $condition = inSameGrounp && listGroupConditions.find(function (_ref) {
      var when = _ref.when;
      return when(first, second);
    }); // group 节点

    if ($condition) {
      var until = $condition.until;
      return group(range, parent, 'list', until);
    }

    return next();
  };
}
//# sourceMappingURL=createGroupNodes.js.map