{"version":3,"sources":["../../../../src/utils/handlers/createRenderNode.tsx"],"names":["renderBackground","width","backgroundColor","createRenderNode","config","LIST_GROUP_TYPE","props","controller","attributes","isSelected","children","visible","node","shd","data","symbolWidth","left","foldBoxLeft","ShdUtil","transformShd","backgroundWidth","attrs","ListGroupRole","listGroup"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;uBAZ4B,a;;AAc5B,MAAMA,gBAAgB,GAAG,CACvBC,KADuB,EAEvBC,eAFuB,KAGO;AAC9B,SAAOA,eAAe,gBACpB,eAAC,wBAAD;AAAiB,IAAA,KAAK,EAAED,KAAxB;AAA+B,IAAA,eAAe,EAAEC;AAAhD,IADoB,GAElB,IAFJ;AAGD,CAPD;;AASA,SAASC,gBAAT,CAA0BC,MAA1B,EAAwD;AACtD,SAAO;AACL,KAACC,0BAAD,GAAmB,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACxC,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA,UAAd;AAA0BC,QAAAA,QAA1B;AAAoCC,QAAAA;AAApC,UAAgDL,KAAtD;AACA,YAAMM,IAAI,GAAGN,KAAK,CAACM,IAAnB;AAEA,YAAM;AAAEC,QAAAA;AAAF,UAAUD,IAAI,CAACE,IAArB;AACA,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAwB,iCAAqBJ,IAArB,CAA9B;AACA,YAAMK,WAAW,GAAG,gCAAoBL,IAApB,CAApB;;AACA,YAAMV,eAAe,GAAGgB,mBAAQC,YAAR,CAAqBN,GAArB,CAAxB;;AACA,YAAMO,eAAe,GAAG,gCAAoBR,IAApB,EAA0BI,IAA1B,EAAgCD,WAAhC,CAAxB;AACA,YAAMM,KAAK,GAAG,0BAAcb,UAAd,EAA0BI,IAA1B,EAAgCL,UAAhC,CAAd;AACA,0BACE,eAAC,6BAAD;AACE,QAAA,IAAI,EAAEK,IADR;AAEE,QAAA,UAAU,EAAES,KAFd;AAGE,QAAA,UAAU,EAAEd,UAHd;AAIE,QAAA,UAAU,EAAEE,UAJd;AAKE,QAAA,WAAW,eAAE,eAAC,iBAAD;AAAU,UAAA,IAAI,EAAEG;AAAhB,UALf;AAME,QAAA,gBAAgB,EAAEZ,gBAAgB,CAChCoB,eADgC,EAEhClB,eAFgC,CANpC;AAUE,QAAA,WAAW,EAAEe,WAVf;AAWE,QAAA,IAAI,EAAEK,oBAAcC,SAXtB;AAYE,QAAA,OAAO,EAAEZ;AAZX,SAcGD,QAAQ,EAdX,CADF;AAkBD;AA7BI,GAAP;AA+BD;;eAEcP,gB","sourcesContent":["import React from 'react';\nimport { Block, Plugin } from '@ali/4ever-cangjie';\nimport { ShdUtil } from '@ali/4ever-utils';\nimport { Group } from '@ali/4ever-plugin-group-factory';\nimport GroupBackground from '../components/groupBackground';\nimport Multibar from '../components/multibar';\nimport {\n  calcMultibarPosition,\n  calcFoldBoxPosition,\n  calcBackgroundWidth,\n  getAttributes,\n} from '../utils';\nimport { LIST_GROUP_TYPE } from '../constants';\nimport { ListGroupRole } from '../role';\n\nconst renderBackground = (\n  width: string,\n  backgroundColor: string,\n): React.ReactElement | null => {\n  return backgroundColor ? (\n    <GroupBackground width={width} backgroundColor={backgroundColor} />\n  ) : null;\n};\n\nfunction createRenderNode(config): Plugin['renderNode'] {\n  return {\n    [LIST_GROUP_TYPE]: (props, controller) => {\n      const { attributes, isSelected, children, visible } = props;\n      const node = props.node as unknown as Block;\n\n      const { shd } = node.data;\n      const { symbolWidth, left } = calcMultibarPosition(node);\n      const foldBoxLeft = calcFoldBoxPosition(node);\n      const backgroundColor = ShdUtil.transformShd(shd);\n      const backgroundWidth = calcBackgroundWidth(node, left, symbolWidth);\n      const attrs = getAttributes(attributes, node, controller);\n      return (\n        <Group\n          node={node}\n          attributes={attrs}\n          controller={controller}\n          isSelected={isSelected}\n          renderExtra={<Multibar node={node} />}\n          renderBackground={renderBackground(\n            backgroundWidth,\n            backgroundColor,\n          )}\n          foldBoxLeft={foldBoxLeft}\n          role={ListGroupRole.listGroup}\n          visible={visible}\n        >\n          {children()}\n        </Group>\n      );\n    },\n  };\n}\n\nexport default createRenderNode;\n"],"file":"createRenderNode.js"}