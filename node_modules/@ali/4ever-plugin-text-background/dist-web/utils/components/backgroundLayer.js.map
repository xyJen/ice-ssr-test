{"version":3,"sources":["../../../../src/utils/components/backgroundLayer.tsx"],"names":["React","domUtils","useZoom","constants","useLeafBlockResizer","styled","useMeasureProbe","ShdUtil","TextLayer","div","getRenderItems","overlayDom","marks","items","parentDOMNode","parentElement","rows","splitRows","overlayRect","getBoundingClientRect","forEach","mark","domNode","querySelector","key","offset","boundingRects","Array","from","getClientRects","rects","fitRows","length","color","type","data","value","transformShd","item","find","i","concat","push","map","mergeRects","BackgroundOverlay","memo","props","zoom","ref","useRef","useState","renderItems","setRenderItems","updateMarks","useCallback","newItems","current","useEffect","probeChanged","undefined","attrbiute","Selector","nonSelect","renderItem","rect","backgroundColor","position","left","top","width","height","keyStr","style"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Mark,\n  domUtils,\n  useZoom,\n  constants,\n  Block,\n  Controller,\n  useLeafBlockResizer,\n} from '@ali/4ever-cangjie';\nimport styled from 'styled-components';\nimport { useMeasureProbe } from '../probe';\nimport { ShdUtil } from '@ali/4ever-utils';\n\nconst TextLayer = styled.div`\n  float: left;\n  position: relative;\n  width: 0;\n  height: 0;\n  & ~ * {\n    position: relative;\n  }\n`;\n\ninterface HightlightOverlayProps {\n  marks: MarkItem[];\n  node: Block;\n  controller: Controller;\n}\n\ntype BackgroundOverlayProps = HightlightOverlayProps & {\n  zoom: number;\n};\n\nexport interface MarkItem {\n  mark: Mark;\n  key: string;\n  offset: number;\n}\n\nexport interface Rect {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\ninterface RenderItem {\n  rects: Rect[];\n  color: any;\n  key: string;\n}\n\nfunction getRenderItems(overlayDom: HTMLElement | null, marks: MarkItem[]) {\n  const items: RenderItem[] = [];\n  if (!overlayDom) {\n    return items;\n  }\n  const parentDOMNode = overlayDom.parentElement;\n  if (!parentDOMNode) {\n    return items;\n  }\n  const rows = domUtils.splitRows(parentDOMNode);\n  const overlayRect = overlayDom.getBoundingClientRect();\n  marks.forEach((mark) => {\n    const domNode = parentDOMNode.querySelector(\n      `[data-cangjie-key='${mark.key}:${mark.offset}']`,\n    );\n    if (!domNode) {\n      return;\n    }\n    const boundingRects = Array.from(domNode.getClientRects());\n    const rects = domUtils.fitRows(rows, boundingRects, overlayRect);\n    if (!rects.length) {\n      return;\n    }\n\n    let color;\n    if (mark.mark.type === 'highlight' && mark.mark.data.value !== 'transparent') {\n      color = mark.mark.data.value;\n    } else if (mark.mark.type === 'shd') {\n      color = ShdUtil.transformShd(mark.mark.data);\n    }\n    if (color === 'transparent') {\n      return;\n    }\n\n    const item = items.find((i) => i.color === color);\n    if (item) {\n      item.rects = item.rects.concat(rects);\n    } else {\n      const { key } = mark;\n      items.push({ color, key, rects });\n    }\n  });\n\n  return items.map((item) => {\n    return {\n      ...item,\n      rects: domUtils.mergeRects(item.rects),\n    };\n  });\n}\n\nconst BackgroundOverlay = React.memo((props: BackgroundOverlayProps) => {\n  const { marks, zoom } = props;\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [renderItems, setRenderItems] = React.useState<RenderItem[]>([]);\n\n  const updateMarks = React.useCallback(() => {\n    const newItems = getRenderItems(ref.current, marks);\n    setRenderItems(newItems);\n  }, [marks]);\n\n  React.useEffect(() => {\n    updateMarks();\n  }, [marks, updateMarks, zoom]);\n\n  useLeafBlockResizer(ref, updateMarks, [marks]);\n\n  const probeChanged = useMeasureProbe();\n  React.useEffect(() => {\n    if (probeChanged !== undefined) {\n      // TODO: 因为引入了 puring，放弃使用 probe 带来的性能优化，@多鱼后续考虑性能优化吧\n      // 策略：在表格和高亮块里监听原来的 leafBlock，其它走全局的 probe 探测\n      updateMarks();\n    }\n  }, [updateMarks, probeChanged]);\n\n  const attrbiute = {\n    [constants.Selector.nonSelect]: true,\n  };\n\n  return (\n    <TextLayer ref={ref} data-cangjie-text-layer>\n      {renderItems.map((renderItem) => {\n        return (\n          renderItem.rects &&\n          renderItem.rects.map((rect) => {\n            const backgroundColor = renderItem.color;\n            const position = 'absolute';\n            const { left, top, width, height } = rect;\n            const keyStr = `${renderItem.key}-${left}-${top}-${width}-${height}`;\n            const style: React.CSSProperties = {\n              position,\n              left: left / zoom,\n              top: top / zoom,\n              width: width / zoom,\n              height: height / zoom,\n              backgroundColor,\n            };\n            return <div {...attrbiute} key={keyStr} style={style} />;\n          })\n        );\n      })}\n    </TextLayer>\n  );\n});\n\n\nexport default (props: HightlightOverlayProps) => {\n  const zoom = useZoom();\n  return <BackgroundOverlay {...props} zoom={zoom} />;\n};\n"],"file":"backgroundLayer.js"}