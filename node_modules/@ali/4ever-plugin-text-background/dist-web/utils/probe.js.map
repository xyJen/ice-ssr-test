{"version":3,"sources":["../../../src/utils/probe.tsx"],"names":["React","useState","useRef","useEffect","useCallback","useContentStyle","ShadowRoot","getSectPr","theme","debounce","defaultKeyTypographyStyle","THROTTLE_TIME_RESIZE","probeStyle","position","zIndex","width","visibility","pointerEvents","top","left","Probe","props","controller","onRef","globleStyle","ProbeProvider","undefined","needUpdate","update","probeRef","obRef","updateRef","pgMar","value","document","data","Math","round","right","handleResize","current","leading","node","window","ResizeObserver","observe","cancel","unobserve","children","MeasureProbeContext","createContext","useMeasureProbe","useContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA8DC,WAA9D,QAAiF,OAAjF;qBAC4B,a;AAA5B,SAASC,eAAT,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,WAAzB;IAEQC,yB,GAA8BF,K,CAA9BE,yB;AACR,IAAMC,oBAAoB,GAAG,GAA7B;;AAEA,IAAMC,UAA+B,gBAChCF,yBADgC;AAEnC;AACAG,EAAAA,QAAQ,EAAE,UAHyB;AAInCC,EAAAA,MAAM,EAAE,CAAC,CAJ0B;AAKnCC,EAAAA,KAAK,EAAE,MAL4B;AAMnCC,EAAAA,UAAU,EAAE,QANuB;AAOnCC,EAAAA,aAAa,EAAE,MAPoB;AAQnCC,EAAAA,GAAG,EAAE,CAR8B;AASnCC,EAAAA,IAAI,EAAE;AAT6B,EAArC;;AAYA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAGR;AAAA,MACIC,UADJ,GAC0BD,KAD1B,CACIC,UADJ;AAAA,MACgBC,KADhB,GAC0BF,KAD1B,CACgBE,KADhB,EAEJ;;AACA,MAAMC,WAAW,GAAGnB,eAAe,CAACiB,UAAD,CAAnC;AAEA;AACF;AACA;AACA;AACA;;AACE,sBACE,eAAC,UAAD,qBACE;AACE,IAAA,GAAG,EAAEC,KADP;AAEE,IAAA,KAAK,eACAX,UADA,EAEAY,WAFA;AAFP,cADF,CADF;AAYD,CAzBD;;AAgCA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,KAAD,EAA+B;AAAA,kBAC7BpB,QAAQ,CAAsByB,SAAtB,CADqB;AAAA,MACnDC,UADmD;AAAA,MACvCC,MADuC;;AAE1D,MAAMC,QAAQ,GAAG3B,MAAM,EAAvB;AACA,MAAM4B,KAAK,GAAG5B,MAAM,EAApB;AACA,MAAM6B,SAAS,GAAG7B,MAAM,CAAsBwB,SAAtB,CAAxB;AAJ0D,MAKlDJ,UALkD,GAKnCD,KALmC,CAKlDC,UALkD;AAM1D,MAAMU,KAAK,GAAGzB,SAAS,CAACe,UAAU,CAACW,KAAX,CAAiBC,QAAjB,CAA0BC,IAA3B,EAAiC,OAAjC,CAAvB;AACA,MAAMhB,IAAI,GAAGiB,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACb,IAAN,IAAc,CAAzB,CAAb;AACA,MAAMmB,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,KAAN,IAAe,CAA1B,CAAd;AAEA,MAAMC,YAAY,GAAGnC,WAAW,CAACK,QAAQ,CAAC,YAAM;AAC9CmB,IAAAA,MAAM,CAAC,CAACG,SAAS,CAACS,OAAZ,CAAN;AACAT,IAAAA,SAAS,CAACS,OAAV,GAAoB,CAACT,SAAS,CAACS,OAA/B;AACD,GAHwC,EAGtC7B,oBAHsC,EAGhB;AAAE8B,IAAAA,OAAO,EAAE;AAAX,GAHgB,CAAT,EAGa,EAHb,CAAhC,CAV0D,CAe1D;AACA;AACA;;AACAtC,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAI4B,SAAS,CAACS,OAAV,KAAsBd,SAA1B,EAAqCa,YAAY,GAFnC,CAGd;AACD,GAJQ,EAIN,CAACA,YAAD,EAAepB,IAAf,EAAqBmB,KAArB,CAJM,CAAT;AAMA,MAAMf,KAAK,GAAGnB,WAAW,CAAC,UAACsC,IAAD,EAAiC;AACzD,QAAIA,IAAI,IAAIC,MAAM,CAACC,cAAnB,EAAmC;AACjCf,MAAAA,QAAQ,CAACW,OAAT,GAAmBE,IAAnB;AACAZ,MAAAA,KAAK,CAACU,OAAN,GAAgB,IAAIG,MAAM,CAACC,cAAX,CAA0BL,YAA1B,CAAhB;AACAT,MAAAA,KAAK,CAACU,OAAN,CAAcK,OAAd,CAAsBH,IAAtB;AACD;;AACD,WAAOhB,SAAP;AACD,GAPwB,EAOtB,CAACa,YAAD,CAPsB,CAAzB;AASApC,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACXoC,MAAAA,YAAY,CAACO,MAAb;;AACA,UAAIhB,KAAK,CAACU,OAAN,IAAiBX,QAAQ,CAACW,OAA9B,EAAuC;AACrCV,QAAAA,KAAK,CAACU,OAAN,CAAcO,SAAd,CAAwBlB,QAAQ,CAACW,OAAjC;AACD;AACF,KALD;AAMD,GAPQ,EAON,CAACD,YAAD,CAPM,CAAT;AASA,sBACE,eAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEZ;AAArC,KAEGN,KAAK,CAAC2B,QAFT,eAGE,eAAC,KAAD;AAAO,IAAA,KAAK,EAAEzB,KAAd;AAAqB,IAAA,UAAU,EAAED;AAAjC,IAHF,CADF;AAOD,CAjDM;AAmDP;AACA;AACA;AACA;;AACA,OAAO,IAAM2B,mBAAmB,gBAAGjD,KAAK,CAACkD,aAAN,CAAyCxB,SAAzC,CAA5B;AAEP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAOnD,KAAK,CAACoD,UAAN,CAAiBH,mBAAjB,CAAP;AACD,CAFM","sourcesContent":["import React, { useState, useRef, useEffect, useLayoutEffect, useCallback } from 'react';\nimport { useContentStyle, Controller, ShadowRoot } from '@ali/4ever-cangjie';\nimport { getSectPr, theme } from '@ali/4ever-utils';\nimport { debounce } from 'lodash-es';\n\nconst { defaultKeyTypographyStyle } = theme;\nconst THROTTLE_TIME_RESIZE = 200;\n\nconst probeStyle: React.CSSProperties = {\n  ...defaultKeyTypographyStyle,\n  // 绝对布局 + 100%，限制只在 data-cangjie-content 区域变化时才触发变化\n  position: 'absolute',\n  zIndex: -1,\n  width: '100%',\n  visibility: 'hidden',\n  pointerEvents: 'none',\n  top: 0,\n  left: 0,\n};\n\nconst Probe = (props: {\n  onRef: (node: HTMLDivElement | null) => void;\n  controller: Controller;\n}) => {\n  const { controller, onRef } = props;\n  // 探测需要响应全局样式\n  const globleStyle = useContentStyle(controller);\n\n  /**\n   * 使用 shadow dom：\n   * 1. 避免在正文内插入节点导致大量单测受影响（影响单测中 content.text）\n   * 2. 隔离样式，避免性能问题\n   */\n  return (\n    <ShadowRoot>\n      <div\n        ref={onRef}\n        style={{\n          ...probeStyle,\n          ...globleStyle,\n        }}\n      >中\n      </div>\n    </ShadowRoot>\n  );\n};\n\ninterface ProbeProviderProps {\n  children: () => React.ReactElement;\n  controller: Controller;\n}\n\nexport const ProbeProvider = (props: ProbeProviderProps) => {\n  const [needUpdate, update] = useState<boolean | undefined>(undefined);\n  const probeRef = useRef<HTMLDivElement>();\n  const obRef = useRef<ResizeObserver | null>();\n  const updateRef = useRef<boolean | undefined>(undefined);\n  const { controller } = props;\n  const pgMar = getSectPr(controller.value.document.data, 'pgMar');\n  const left = Math.round(pgMar.left || 0);\n  const right = Math.round(pgMar.right || 0);\n\n  const handleResize = useCallback(debounce(() => {\n    update(!updateRef.current);\n    updateRef.current = !updateRef.current;\n  }, THROTTLE_TIME_RESIZE, { leading: true }), []);\n\n  // TODO: 因为表格里可能会 puring（在第一次 render 后再 display none）\n  // 在 display:none 的情况触发重算会导致背景消失\n  // 这里 hack 仅确保第一次渲染不出问题\n  useEffect(() => {\n    // 响应页边距 left 和 right\n    if (updateRef.current !== undefined) handleResize();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [handleResize, left, right]);\n\n  const onRef = useCallback((node: HTMLDivElement | null) => {\n    if (node && window.ResizeObserver) {\n      probeRef.current = node;\n      obRef.current = new window.ResizeObserver(handleResize);\n      obRef.current.observe(node);\n    }\n    return undefined;\n  }, [handleResize]);\n\n  useEffect(() => {\n    return () => {\n      handleResize.cancel();\n      if (obRef.current && probeRef.current) {\n        obRef.current.unobserve(probeRef.current);\n      }\n    };\n  }, [handleResize]);\n\n  return (\n    <MeasureProbeContext.Provider value={needUpdate}>\n      {/* PERF: 使用 props.children 避免 next 在 hook 变更时 rerender */}\n      {props.children}\n      <Probe onRef={onRef} controller={controller} />\n    </MeasureProbeContext.Provider>\n  );\n};\n\n/**\n * 探测编辑区域 resize\n * 原因可能是窗口 resize 或 默认字号变化等原因\n */\nexport const MeasureProbeContext = React.createContext<boolean | undefined>(undefined);\n\n/**\n * 返回探测结果\n * Boolean 值标识是否改变\n * @returns Boolean\n */\nexport const useMeasureProbe = () => {\n  return React.useContext(MeasureProbeContext);\n};\n"],"file":"probe.js"}