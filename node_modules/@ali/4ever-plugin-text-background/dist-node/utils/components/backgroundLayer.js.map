{"version":3,"sources":["../../../../src/utils/components/backgroundLayer.tsx"],"names":["TextLayer","styled","div","getRenderItems","overlayDom","marks","items","parentDOMNode","parentElement","rows","domUtils","splitRows","overlayRect","getBoundingClientRect","forEach","mark","domNode","querySelector","key","offset","boundingRects","Array","from","getClientRects","rects","fitRows","length","color","type","data","value","ShdUtil","transformShd","item","find","i","concat","push","map","mergeRects","BackgroundOverlay","React","memo","props","zoom","ref","useRef","renderItems","setRenderItems","useState","updateMarks","useCallback","newItems","current","useEffect","probeChanged","undefined","attrbiute","constants","Selector","nonSelect","renderItem","rect","backgroundColor","position","left","top","width","height","keyStr","style"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Mark,\n  domUtils,\n  useZoom,\n  constants,\n  Block,\n  Controller,\n  useLeafBlockResizer,\n} from '@ali/4ever-cangjie';\nimport styled from 'styled-components';\nimport { useMeasureProbe } from '../probe';\nimport { ShdUtil } from '@ali/4ever-utils';\n\nconst TextLayer = styled.div`\n  float: left;\n  position: relative;\n  width: 0;\n  height: 0;\n  & ~ * {\n    position: relative;\n  }\n`;\n\ninterface HightlightOverlayProps {\n  marks: MarkItem[];\n  node: Block;\n  controller: Controller;\n}\n\ntype BackgroundOverlayProps = HightlightOverlayProps & {\n  zoom: number;\n};\n\nexport interface MarkItem {\n  mark: Mark;\n  key: string;\n  offset: number;\n}\n\nexport interface Rect {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\ninterface RenderItem {\n  rects: Rect[];\n  color: any;\n  key: string;\n}\n\nfunction getRenderItems(overlayDom: HTMLElement | null, marks: MarkItem[]) {\n  const items: RenderItem[] = [];\n  if (!overlayDom) {\n    return items;\n  }\n  const parentDOMNode = overlayDom.parentElement;\n  if (!parentDOMNode) {\n    return items;\n  }\n  const rows = domUtils.splitRows(parentDOMNode);\n  const overlayRect = overlayDom.getBoundingClientRect();\n  marks.forEach((mark) => {\n    const domNode = parentDOMNode.querySelector(\n      `[data-cangjie-key='${mark.key}:${mark.offset}']`,\n    );\n    if (!domNode) {\n      return;\n    }\n    const boundingRects = Array.from(domNode.getClientRects());\n    const rects = domUtils.fitRows(rows, boundingRects, overlayRect);\n    if (!rects.length) {\n      return;\n    }\n\n    let color;\n    if (mark.mark.type === 'highlight' && mark.mark.data.value !== 'transparent') {\n      color = mark.mark.data.value;\n    } else if (mark.mark.type === 'shd') {\n      color = ShdUtil.transformShd(mark.mark.data);\n    }\n    if (color === 'transparent') {\n      return;\n    }\n\n    const item = items.find((i) => i.color === color);\n    if (item) {\n      item.rects = item.rects.concat(rects);\n    } else {\n      const { key } = mark;\n      items.push({ color, key, rects });\n    }\n  });\n\n  return items.map((item) => {\n    return {\n      ...item,\n      rects: domUtils.mergeRects(item.rects),\n    };\n  });\n}\n\nconst BackgroundOverlay = React.memo((props: BackgroundOverlayProps) => {\n  const { marks, zoom } = props;\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [renderItems, setRenderItems] = React.useState<RenderItem[]>([]);\n\n  const updateMarks = React.useCallback(() => {\n    const newItems = getRenderItems(ref.current, marks);\n    setRenderItems(newItems);\n  }, [marks]);\n\n  React.useEffect(() => {\n    updateMarks();\n  }, [marks, updateMarks, zoom]);\n\n  useLeafBlockResizer(ref, updateMarks, [marks]);\n\n  const probeChanged = useMeasureProbe();\n  React.useEffect(() => {\n    if (probeChanged !== undefined) {\n      // TODO: 因为引入了 puring，放弃使用 probe 带来的性能优化，@多鱼后续考虑性能优化吧\n      // 策略：在表格和高亮块里监听原来的 leafBlock，其它走全局的 probe 探测\n      updateMarks();\n    }\n  }, [updateMarks, probeChanged]);\n\n  const attrbiute = {\n    [constants.Selector.nonSelect]: true,\n  };\n\n  return (\n    <TextLayer ref={ref} data-cangjie-text-layer>\n      {renderItems.map((renderItem) => {\n        return (\n          renderItem.rects &&\n          renderItem.rects.map((rect) => {\n            const backgroundColor = renderItem.color;\n            const position = 'absolute';\n            const { left, top, width, height } = rect;\n            const keyStr = `${renderItem.key}-${left}-${top}-${width}-${height}`;\n            const style: React.CSSProperties = {\n              position,\n              left: left / zoom,\n              top: top / zoom,\n              width: width / zoom,\n              height: height / zoom,\n              backgroundColor,\n            };\n            return <div {...attrbiute} key={keyStr} style={style} />;\n          })\n        );\n      })}\n    </TextLayer>\n  );\n});\n\n\nexport default (props: HightlightOverlayProps) => {\n  const zoom = useZoom();\n  return <BackgroundOverlay {...props} zoom={zoom} />;\n};\n"],"file":"backgroundLayer.js"}