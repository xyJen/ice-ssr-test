import React from 'react';
import { ILineTypeValue } from '@ali/we-design';
import { EColorPanelMode } from '../colorPicker';
export interface IBorderPickerOverlayProps {
    /**
     * 国际化语言
     */
    locale?: string;
    /**
     * 是否显示自动
     */
    showAutomatic?: boolean;
    /**
     * 颜色
     */
    color: string;
    /**
     * 选中颜色的回调，选择无颜色时回传空字符串 `''`
     */
    onColorPick?: (color: string) => void;
    /**
     * 默认颜色块的颜色值
     */
    automaticColor?: string;
    /**
     * 要显示清楚线的颜色块的颜色值
     */
    clearColor?: string;
    /**
     * 是否显示 colorPicker 组件, 即：选择“更多”颜色的组件
     */
    picker?: boolean;
    /**
     * 选中的线条粗细（受控），为 lineSizeMap 的 key
     */
    lineSize?: string;
    /**
     * 默认的线条粗细（非受控），为 lineSizeMap 的 key
     */
    defaultLineSize?: string;
    /**
     * 选择线条粗细时使用的映射
     */
    lineSizeMap: Record<string, ILineTypeValue>;
    /**
     * 线条粗细变化的回调函数
     */
    onLineSizeChange?: (lineSize: string) => void;
    /**
     * 选中的线条样式（受控），为 lineStyleMap 的 key
     */
    lineStyle?: string;
    /**
     * 默认的线条样式（非受控），为 lineStyleMap 的 key
     */
    defaultLineStyle?: string;
    /**
     * 选择线条样式时使用的映射
     */
    lineStyleMap: Record<string, ILineTypeValue>;
    /**
     * 线条样式变化的回调函数
     */
    onLineStyleChange?: (lineStyle: string) => void;
    /**
     * 线类型和线粗细面板的显示隐藏
     */
    sizeSelectVisible?: boolean;
    onSizeSelectVisibleChange?: (visible: boolean) => void;
    styleSelectVisible?: boolean;
    onStyleSelectVisibleChange?: (visible: boolean) => void;
    /**
     * 是否显示面板样式切换下拉框, 默认不显示
     */
    showToggleSelect?: boolean;
    /**
     * 面板样式下拉框响应函数函数
     */
    onSelectValueChange?: (mode: EColorPanelMode) => void;
    /**
     * 艺术色板是否显示渐变色, 默认不显示
     */
    showGradient?: boolean;
    /**
     * 艺术色板第几行拥有双倍下间距，有渐变色时默认 1， 其它默认 0
     */
    doubleGapRowIndex?: number;
    /**
     * 获取色板样式, 默认返回 normal
     */
    getColorPanelMode?: () => EColorPanelMode;
}
declare const BorderPickerOverlay: React.FC<IBorderPickerOverlayProps>;
export default BorderPickerOverlay;
