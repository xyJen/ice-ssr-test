/// <reference types="react" />
import { ToolbarConfigsProps } from '../toolbar';
export interface PreviewCardLayoutProps {
    /**
     * 是否选择
     */
    isSelected?: boolean;
    /**
     * 组件默认高度
     */
    defaultHeight?: number;
    /**
     * 组件高度
     */
    height?: number;
    /**
     * 最小高度
     */
    minHeight?: number;
    /**
     * 最大高度
     */
    maxHeight?: number;
    /**
     * 左上方图标
     */
    icon?: React.ReactNode;
    /**
     * 标题
     */
    title?: string | React.ReactNode;
    /**
     * 行内工具栏配置
     */
    toolbarConfigs?: ToolbarConfigsProps[];
    /**
     * 若配置，标题为 link 样式
     */
    linkTitleClick?: (e: React.MouseEvent) => void;
    /**
     * 行内工具栏 toolbar X 轴偏移
     */
    toolbarOffsetX?: number;
    /**
     * 行内工具栏 toolbar Y 轴偏移
     */
    toolbarOffsetY?: number;
    /**
     * 自定义样式
     */
    style?: React.CSSProperties;
    /**
     * 自定义类名
     */
    className?: string;
    /**
     * 监听选中点击事件
     */
    onClick?: (e: React.MouseEvent) => void;
    /**
     * 是否有拖拽杆，默认无
     */
    dragLevel?: boolean;
    /**
     * 拖拽杆开始拖动回调
     */
    onMoveStart?: (height: number) => void;
    /**
     * 拖拽杆拖动回调
     */
    onMove?: (height: number) => void;
    /**
     * 拖拽杆结束拖动回调
     */
    onMoveEnd?: () => void;
    /**
     * 拖动节流事件间隔，单位 ms
     */
    throttle?: number;
    /**
     * 类型：普通 / 导出
     */
    type?: 'export' | 'normal' | 'custom';
    /**
     * 行内工具栏是否展开的断点宽度
     */
    thresholdWidth?: number;
    /**
     * 挂载元素
     */
    getContainer?: () => HTMLElement;
}
