/// <reference types="react" />
import { ToolbarConfigsProps } from '../toolbar';
export interface MainActionsConfiguration {
    /**
     * 图标
     */
    icon: React.ReactNode;
    /**
     * 标题
     */
    title?: string;
    /**
     * 点击事件
     */
    onClick?: () => void;
}
export interface DescriptionConfig {
    /**
     * 文字
     */
    text: string | React.ReactNode;
    /**
     * 链接点击回调
     */
    onClick?: (e: React.MouseEvent) => void;
    /**
     * 显示行数，默认 1 行
     */
    line?: number;
}
export interface AbstractCardLayoutProps {
    /**
     * 挂载元素
     */
    getContainer?: () => HTMLElement;
    /**
     * 类型：普通、加载中、加载失败
     * 默认：普通
     */
    type?: 'normal' | 'loading' | 'failure' | 'export';
    /**
     * 主行动点
     */
    mainActions?: MainActionsConfiguration[];
    /**
     * 行内工具栏
     */
    toolbarConfigs?: ToolbarConfigsProps[];
    /**
     * 图标
     */
    icon?: React.ReactNode;
    /**
     * 背景效果：固定色、取大图的仿磨砂玻璃效果
     */
    background?: 'img' | 'color';
    /**
     * 背景色色值，CSS 的色值字符串
     */
    color?: string;
    /**
     * 毛玻璃效果大图的 url
     */
    img?: string;
    /**
     * 是否启用毛玻璃效果，默认开启
     */
    blur?: boolean;
    /**
     * 标题
     */
    title?: string | React.ReactNode;
    /**
     *  自定义区域（可以用来放预览图片）
     */
    customLayout?: React.ReactNode;
    /**
     * 是否显示主行动点标题
     */
    isShowMainActionTitle?: boolean;
    /**
     * 行数类型
     */
    line?: 'single' | 'double' | 'multi';
    /**
     * 自定义样式
     */
    style?: React.CSSProperties;
    /**
     * 主行动点样式
     */
    mainActionStyle?: React.CSSProperties;
    /**
     * 行内工具栏 toolbar X 轴偏移
     */
    toolbarOffsetX?: number;
    /**
     * 行内工具栏 toolbar Y 轴偏移
     */
    toolbarOffsetY?: number;
    /**
     * 点击事件
     */
    onClick?: (e: React.MouseEvent) => void;
    /**
     * 是否选中
     */
    isSelected?: boolean;
    /**
     * 行内工具栏 InlineToolbar 受控显示
     */
    toolbarVisible?: boolean;
    /**
     * 行内工具栏是否展开的断点卡片宽度
     */
    thresholdWidth?: number;
    /**
     * 行数，默认 1 行
     */
    lineCount?: number;
    /**
     * 说明文案（摘要）
     */
    desc?: DescriptionConfig[];
    /**
     * 标题点击事件，若有则 hover 出现下划线
     */
    titleClick?: (e: React.MouseEvent) => void;
    /**
     * 报错说明文案
     */
    failureText?: string;
    /**
     * 加载失败，是否显示刷新
     */
    refresh?: boolean;
    /**
     * 刷新按钮点击事件
     */
    refreshClick?: (e: React.MouseEvent) => void;
    /**
     * 国际化
     */
    locale?: string;
    /**
     * 卡片高度
     */
    height?: number;
    /**
     * 用于测试
     */
    testid?: string;
    /**
     *
     */
    buttonStyle?: 'default' | 'contrast';
}
