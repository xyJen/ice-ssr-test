/// <reference types="react" />
export declare type ToolbarCardType = 'text' | 'abstract' | 'preview' | 'artCard';
export interface ToolbarConfigsProps {
    /**
     * 按钮类型，必选
     */
    type: 'button' | 'style' | 'more' | 'menu';
    /**
     * 图标
     */
    icon?: React.ReactNode;
    /**
     * 标题
     */
    title?: string;
    /**
     * 切换展示风格选项
     */
    options?: Array<ToolbarCardType>;
    /**
     * 切换展示风格选项测试 ID
     */
    optionsTestId?: Record<ToolbarCardType, string>;
    /**
     * 切换展示风格选项回调
     */
    onChange?: (key: number) => void;
    /**
     * 按钮点击回调
     */
    onClick?: (e: React.MouseEvent) => void;
    /**
     * 是否激活
     */
    active?: boolean;
    /**
     * 自定义展开内容
     */
    overlay?: React.ReactNode;
    /**
     * 是否关闭
     */
    isClosed?: boolean;
    /**
     * 更多菜单配置
     */
    menu?: MoreMenuConfiguration[][];
    /**
     * 风格选择默认值
     */
    defaultValue?: number;
    /**
     * 测试
     */
    testId?: string;
}
export interface ToolbarProps {
    /**
     * 行内工具栏配置
     */
    toolbarConfigs?: ToolbarConfigsProps[];
    /**
     * 国际化
     */
    locale?: string;
    /**
     * 是否折叠
     */
    isFolded?: boolean;
    /**
     * 按钮的样式
     */
    buttonStyle?: 'default' | 'contrast';
}
export interface ToolbarProps {
    /**
     * 挂载元素
     */
    getContainer?: () => HTMLElement;
    /**
     * 子组件
     */
    children?: React.ReactElement | React.ReactElement[];
    /**
     * 外部卡片的宽度
     */
    width?: number;
    /**
     * 工具栏中菜单是否展开
     */
    onVisibleChange?: (folded: boolean) => void;
    /**
     * toolbar 类型，light 或者 dark，默认 light
     */
    type?: 'light' | 'dark';
    /**
     * 国际化
     */
    locale?: string;
    /**
     * 测试
     */
    testId?: string;
    /**
     * 切换展示风格配置
     */
    styleSelectConfig?: {
        /**
         * 初始值
         */
        defaultValue?: number;
        /**
         * 监听变化
         */
        onChange?: (key: string) => void;
        /**
         * 配置项
         */
        options: Array<'card' | 'preview' | 'text'>;
    };
    /**
     * 更多按钮配置
     */
    moreMenuConfig?: {
        /**
         * 菜单配置
         */
        options: MoreMenuConfiguration[][];
    };
}
export interface MoreMenuConfiguration {
    /**
     * 名称标识符
     */
    name?: 'download' | 'open' | 'refresh' | 'cut' | 'delete' | 'copy';
    /**
     * 自定义标题
     */
    title?: string;
    /**
     * 自定义图标
     */
    icon?: React.ReactElement;
    /**
     * 点击事件
     */
    onClick?: (key: any, e: React.MouseEvent) => void;
    /**
     * 自定义测试 ID
     */
    testId?: string;
    role?: string;
}
