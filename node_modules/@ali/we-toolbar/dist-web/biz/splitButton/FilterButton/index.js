import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";

var _ToolbarFilterNormal;

import React, { useState, useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { ToolbarFilterNormal } from '@ali/we-design';
import SplitButton from "../../../common/splitButton";
import { useTranslate } from '@ali/we-util';
export var FilterButton = function FilterButton(props) {
  var disabled = props.disabled,
      onClick = props.onClick,
      title = props.title,
      titles = props.titles,
      locale = props.locale,
      size = props.size,
      activeLeft = props.active,
      overlay = props.overlay,
      restProps = _objectWithoutPropertiesLoose(props, ["disabled", "onClick", "title", "titles", "locale", "size", "active", "overlay"]);

  var _useState = useState(false),
      active = _useState[0],
      setActive = _useState[1];

  var t = useTranslate(locale);
  var handleClickLeft = useCallback(function () {
    if (onClick) onClick();
  }, [onClick]);
  var hideOverlay = useCallback(function () {
    return setActive(false);
  }, []);
  return /*#__PURE__*/_createElement(SplitButton, _extends({
    onClickLeft: handleClickLeft,
    onActiveChange: setActive,
    disabled: disabled,
    testid: "FilterButton",
    title: title || t('we_toolbar_filter_button'),
    size: size,
    icon: _ToolbarFilterNormal || (_ToolbarFilterNormal = /*#__PURE__*/_createElement(ToolbarFilterNormal, null)),
    overlay: /*#__PURE__*/_createElement("div", {
      onClick: hideOverlay
    }, overlay)
  }, restProps, {
    activeLeft: activeLeft,
    active: active
  }));
};
FilterButton.defaultProps = {
  titles: {}
};