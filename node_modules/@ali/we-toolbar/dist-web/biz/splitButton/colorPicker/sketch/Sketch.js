import _extends from "@babel/runtime/helpers/extends";

var _Checkboard;

/* eslint-disable max-lines-per-function */
import React from 'react'; // todo
// import PropTypes from 'prop-types';
// import merge from 'lodash/merge';

var _createElement = /*#__PURE__*/React.createElement;
import reactCSS from 'reactcss';
import { ColorWrap, Saturation, Hue, Alpha, Checkboard } from "./common"; // eslint-disable-next-line import/no-named-as-default

import SketchFields from "./SketchFields"; // eslint-disable-next-line import/no-named-as-default

import SketchPresetColors from "./SketchPresetColors";
export var Sketch = function Sketch(_ref) {
  var width = _ref.width,
      rgb = _ref.rgb,
      hex = _ref.hex,
      hsv = _ref.hsv,
      hsl = _ref.hsl,
      onChange = _ref.onChange,
      onSwatchHover = _ref.onSwatchHover,
      disableAlpha = _ref.disableAlpha,
      presetColors = _ref.presetColors,
      renderers = _ref.renderers,
      _ref$styles = _ref.styles,
      passedStyles = _ref$styles === void 0 ? {} : _ref$styles,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className;
  var defaultStyles = {
    "default": _extends({
      picker: {
        width: width,
        padding: '10px 10px 0',
        boxSizing: 'initial',
        background: '#fff',
        borderRadius: '4px',
        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.2)',
        border: '1px solid rgba(17, 31, 44, 0.08)'
      },
      saturation: {
        width: '100%',
        paddingBottom: '75%',
        position: 'relative',
        overflow: 'hidden'
      },
      Saturation: {
        radius: '3px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      controls: {
        display: 'flex'
      },
      sliders: {
        padding: '4px 0',
        flex: '1'
      },
      color: {
        width: '24px',
        height: '24px',
        position: 'relative',
        marginTop: '4px',
        marginLeft: '4px',
        borderRadius: '3px'
      },
      activeColor: {
        absolute: '0px 0px 0px 0px',
        borderRadius: '2px',
        background: "rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + "," + rgb.a + ")",
        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      hue: {
        position: 'relative',
        height: '10px',
        overflow: 'hidden'
      },
      Hue: {
        radius: '2px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      alpha: {
        position: 'relative',
        height: '10px',
        marginTop: '4px',
        overflow: 'hidden'
      },
      Alpha: {
        radius: '2px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      }
    }, passedStyles),
    disableAlpha: {
      color: {
        height: '10px'
      },
      hue: {
        height: '10px'
      },
      alpha: {
        display: 'none'
      }
    }
  };
  var mergedStyles = passedStyles ? Object.assign({}, defaultStyles, passedStyles) : defaultStyles;
  var styles = reactCSS(mergedStyles, {
    disableAlpha: disableAlpha
  });
  return /*#__PURE__*/_createElement("div", {
    style: styles.picker,
    className: "sketch-picker " + className
  }, /*#__PURE__*/_createElement("div", {
    style: styles.saturation
  }, /*#__PURE__*/_createElement(Saturation, {
    style: styles.Saturation,
    hsl: hsl,
    hsv: hsv,
    onChange: onChange
  })), /*#__PURE__*/_createElement("div", {
    style: styles.controls,
    className: "flexbox-fix"
  }, /*#__PURE__*/_createElement("div", {
    style: styles.sliders
  }, /*#__PURE__*/_createElement("div", {
    style: styles.hue
  }, /*#__PURE__*/_createElement(Hue, {
    style: styles.Hue,
    hsl: hsl,
    onChange: onChange
  })), /*#__PURE__*/_createElement("div", {
    style: styles.alpha
  }, /*#__PURE__*/_createElement(Alpha, {
    style: styles.Alpha,
    rgb: rgb,
    hsl: hsl,
    renderers: renderers,
    onChange: onChange
  }))), /*#__PURE__*/_createElement("div", {
    style: styles.color
  }, _Checkboard || (_Checkboard = /*#__PURE__*/_createElement(Checkboard, null)), /*#__PURE__*/_createElement("div", {
    style: styles.activeColor
  }))), /*#__PURE__*/_createElement(SketchFields, {
    rgb: rgb,
    hsl: hsl,
    hex: hex,
    onChange: onChange,
    disableAlpha: disableAlpha
  }), /*#__PURE__*/_createElement(SketchPresetColors, {
    colors: presetColors,
    onClick: onChange,
    onSwatchHover: onSwatchHover
  }));
}; // todo
// Sketch.propTypes = {
//   disableAlpha: PropTypes.bool,
//   width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
//   styles: PropTypes.object,
// };

Sketch.defaultProps = {
  disableAlpha: false,
  width: 200,
  styles: {},
  presetColors: ['#D0021B', '#F5A623', '#F8E71C', '#8B572A', '#7ED321', '#417505', '#BD10E0', '#9013FE', '#4A90E2', '#50E3C2', '#B8E986', '#000000', '#4A4A4A', '#9B9B9B', '#FFFFFF']
};
export default ColorWrap(Sketch);