var _LinethicknessNormal, _LinetypeNormal;

import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { CommonLineSelect, LinethicknessNormal, LinetypeNormal } from '@ali/we-design';
import { useTranslate } from '@ali/we-util';
import { BorderPickerWrap, GroupWrap, TextSpan, PaletteBox, LineTypeSelectsWrap, SelectLeftWrap } from "./styled";
import { ColorPalette } from "../colorPicker";

var BorderPickerOverlay = function BorderPickerOverlay(props) {
  var locale = props.locale,
      color = props.color,
      onColorPick = props.onColorPick,
      showAutomatic = props.showAutomatic,
      automaticColor = props.automaticColor,
      clearColor = props.clearColor,
      picker = props.picker,
      lineSizeMap = props.lineSizeMap,
      lineSize = props.lineSize,
      onLineSizeChange = props.onLineSizeChange,
      defaultLineSize = props.defaultLineSize,
      sizeSelectVisible = props.sizeSelectVisible,
      onSizeSelectVisibleChange = props.onSizeSelectVisibleChange,
      lineStyleMap = props.lineStyleMap,
      lineStyle = props.lineStyle,
      defaultLineStyle = props.defaultLineStyle,
      onLineStyleChange = props.onLineStyleChange,
      styleSelectVisible = props.styleSelectVisible,
      onStyleSelectVisibleChange = props.onStyleSelectVisibleChange,
      showToggleSelect = props.showToggleSelect,
      getColorPanelMode = props.getColorPanelMode,
      showGradient = props.showGradient,
      onSelectValueChange = props.onSelectValueChange,
      doubleGapRowIndex = props.doubleGapRowIndex;
  var t = useTranslate(locale);
  var handleColorPick = useCallback(function (pickedColor) {
    if (onColorPick) onColorPick(pickedColor);
  }, [onColorPick]);
  var handleLineSizeChange = useCallback(function (value) {
    if (onLineSizeChange) onLineSizeChange(value);
  }, [onLineSizeChange]);
  var handleLineStyleChange = useCallback(function (value) {
    if (onLineStyleChange) onLineStyleChange(value);
  }, [onLineStyleChange]);
  return /*#__PURE__*/_createElement(BorderPickerWrap, null, /*#__PURE__*/_createElement(PaletteBox, null, /*#__PURE__*/_createElement(ColorPalette, {
    color: color,
    onPick: handleColorPick,
    quickSetText: t('we_toolbar_color_picker_no_color'),
    showRecentColors: true,
    showAutomatic: showAutomatic,
    automaticColor: automaticColor,
    clearColor: clearColor,
    picker: picker,
    showToggleSelect: showToggleSelect,
    getColorPanelMode: getColorPanelMode,
    showGradient: showGradient,
    onSelectValueChange: onSelectValueChange,
    doubleGapRowIndex: doubleGapRowIndex
  })), /*#__PURE__*/_createElement(LineTypeSelectsWrap, null, /*#__PURE__*/_createElement(GroupWrap, null, /*#__PURE__*/_createElement(SelectLeftWrap, null, _LinethicknessNormal || (_LinethicknessNormal = /*#__PURE__*/_createElement(LinethicknessNormal, null)), /*#__PURE__*/_createElement(TextSpan, null, t('we_toolbar_border_set_line_thickness'))), /*#__PURE__*/_createElement(CommonLineSelect, {
    lineTypeArray: lineSizeMap,
    lineType: lineSize,
    length: 35,
    color: "#000000",
    onLineTypeChange: handleLineSizeChange,
    defaultLineType: defaultLineSize,
    optionText: function optionText(p) {
      return p.size + "pt";
    },
    visible: sizeSelectVisible,
    onVisibleChange: onSizeSelectVisibleChange
  })), /*#__PURE__*/_createElement(GroupWrap, null, /*#__PURE__*/_createElement(SelectLeftWrap, null, _LinetypeNormal || (_LinetypeNormal = /*#__PURE__*/_createElement(LinetypeNormal, null)), /*#__PURE__*/_createElement(TextSpan, null, t('we_toolbar_border_set_line_type'))), /*#__PURE__*/_createElement(CommonLineSelect, {
    lineTypeArray: lineStyleMap,
    lineType: lineStyle,
    defaultLineType: defaultLineStyle,
    length: 60,
    color: "#000000",
    onLineTypeChange: handleLineStyleChange,
    visible: styleSelectVisible,
    onVisibleChange: onStyleSelectVisibleChange
  }))));
};

export default BorderPickerOverlay;