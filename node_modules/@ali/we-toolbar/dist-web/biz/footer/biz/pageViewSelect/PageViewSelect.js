import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { useMemo, useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { SelectOption, useControlledValue, FooterPageViewNormal, FooterPagingViewNormal, FooterWebViewNormal } from '@ali/we-design';
import { useTranslate } from '@ali/we-util';
import { OptionWrap } from "./styled";
import { IconSelect } from "../../../../common";
import { IconSelectDefaultProps } from "../../../../utils/defaultProps";

var PageViewSelect = function PageViewSelect(props) {
  var locale = props.locale,
      onChange = props.onChange,
      title = props.title,
      titles = props.titles,
      disabled = props.disabled,
      size = props.size,
      disableWebLayout = props.disableWebLayout,
      restProps = _objectWithoutPropertiesLoose(props, ["locale", "onChange", "title", "titles", "disabled", "size", "disableWebLayout"]);

  var _useControlledValue = useControlledValue(props.value, props.defaultValue),
      value = _useControlledValue[0],
      setValue = _useControlledValue[1];

  var t = useTranslate(locale); // 页面视图的选项

  var options = useMemo(function () {
    return [{
      title: t('we_toolbar_view_page_view'),
      value: 'normal_layout',
      Icon: FooterPageViewNormal
    }, {
      title: t('we_toolbar_view_paging_view'),
      value: 'page_layout',
      Icon: FooterPagingViewNormal
    }].concat(disableWebLayout ? [] : {
      title: t('we_toolbar_view_web_view'),
      value: 'web_layout',
      Icon: FooterWebViewNormal
    });
  }, [t, disableWebLayout]); // 该组件的trigger区域显示Icon+文字

  var renderTrigger = useCallback(function (selectedView) {
    var index = options.findIndex(function (option) {
      return option.value === selectedView;
    });
    var currentOption = options[index];
    return /*#__PURE__*/_createElement(React.Fragment, null, currentOption && /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(currentOption.Icon, {
      style: {
        marginRight: 1
      }
    }), currentOption.title));
  }, [options]);
  var handleChange = useCallback(function (e) {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [setValue, onChange]);
  return /*#__PURE__*/_createElement(IconSelect, _extends({}, restProps, {
    size: size,
    value: value,
    onChange: handleChange,
    renderTrigger: renderTrigger,
    borderRadius: 0,
    title: title,
    animationPlacement: 'bottom',
    testid: "pagingIcon",
    disabled: disabled
  }), options.map(function (option) {
    return /*#__PURE__*/_createElement(SelectOption, {
      value: option.value,
      key: option.value,
      testid: option.value,
      title: titles[option.value]
    }, /*#__PURE__*/_createElement(OptionWrap, null, /*#__PURE__*/_createElement(option.Icon, {
      className: "icon"
    }), /*#__PURE__*/_createElement("span", null, option.title)));
  }));
};

PageViewSelect.defaultProps = _extends({
  defaultValue: 'normal_layout',
  titles: {},
  disabled: false
}, IconSelectDefaultProps);
export default PageViewSelect;