import _extends from "@babel/runtime/helpers/extends";

var _div, _div2;

import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Toolbar } from "../toolbar";
import { CardContainer } from "../container";
import { AbstractCardLayoutContainer, Skeleton } from "./styled";
import { useTranslate } from '@ali/we-util';
export var AbstractCardLayout = function AbstractCardLayout(props) {
  var _Toolbar;

  var mainActions = props.mainActions,
      toolbarConfigs = props.toolbarConfigs,
      icon = props.icon,
      title = props.title,
      customLayout = props.customLayout,
      _props$line = props.line,
      line = _props$line === void 0 ? 'double' : _props$line,
      _props$isShowMainActi = props.isShowMainActionTitle,
      isShowMainActionTitle = _props$isShowMainActi === void 0 ? true : _props$isShowMainActi,
      style = props.style,
      mainActionStyle = props.mainActionStyle,
      _props$toolbarOffsetX = props.toolbarOffsetX,
      toolbarOffsetX = _props$toolbarOffsetX === void 0 ? 4 : _props$toolbarOffsetX,
      _props$toolbarOffsetY = props.toolbarOffsetY,
      toolbarOffsetY = _props$toolbarOffsetY === void 0 ? 4 : _props$toolbarOffsetY,
      onClick = props.onClick,
      _props$isSelected = props.isSelected,
      isSelected = _props$isSelected === void 0 ? false : _props$isSelected,
      toolbarVisible = props.toolbarVisible,
      thresholdWidth = props.thresholdWidth,
      _props$lineCount = props.lineCount,
      lineCount = _props$lineCount === void 0 ? 1 : _props$lineCount,
      _props$desc = props.desc,
      desc = _props$desc === void 0 ? [] : _props$desc,
      titleClick = props.titleClick,
      background = props.background,
      img = props.img,
      _props$color = props.color,
      color = _props$color === void 0 ? '#F0F6FE' : _props$color,
      _props$type = props.type,
      type = _props$type === void 0 ? 'normal' : _props$type,
      _props$failureText = props.failureText,
      failureText = _props$failureText === void 0 ? '' : _props$failureText,
      _props$refresh = props.refresh,
      refresh = _props$refresh === void 0 ? false : _props$refresh,
      refreshClick = props.refreshClick,
      locale = props.locale,
      _props$blur = props.blur,
      blur = _props$blur === void 0 ? true : _props$blur,
      getContainer = props.getContainer,
      height = props.height,
      testid = props.testid,
      _props$buttonStyle = props.buttonStyle,
      buttonStyle = _props$buttonStyle === void 0 ? 'default' : _props$buttonStyle;
  var t = useTranslate(locale);

  var stopPropagation = function stopPropagation(e) {
    e.stopPropagation();
    e.preventDefault();
  };

  var handleTitleClick = function handleTitleClick(e) {
    if (titleClick) {
      stopPropagation(e);
      titleClick(e);
    }
  };

  var abstractCardLayoutRender = function abstractCardLayoutRender(icon, title, desc, descNode, lineCount, line, customLayout) {
    if (desc === void 0) {
      desc = [];
    }

    return /*#__PURE__*/_createElement(AbstractCardLayoutContainer, {
      "data-testid": testid ? "Abstract_card_container_" + testid : undefined,
      toolbarOffset: [toolbarOffsetX, toolbarOffsetY],
      className: "card-layout-wrapper",
      line: line,
      blur: blur,
      lineCount: lineCount,
      type: type,
      style: isSelected ? _extends({
        boxShadow: '0px 0px 0px 1px #0089FF,0px 0px 0px 3px rgba(0, 106, 254, 0.12)'
      }, style) : _extends({}, style)
    }, /*#__PURE__*/_createElement(CardContainer, {
      thresholdWidth: thresholdWidth,
      className: "card-layout-container",
      toolbarVisible: toolbarVisible
    }, /*#__PURE__*/_createElement("div", {
      className: "card-layout-top",
      style: background === 'color' ? {
        background: color
      } : {}
    }, background === 'img' && /*#__PURE__*/_createElement("div", {
      className: "background-img",
      style: {
        backgroundImage: "url(" + img + ")"
      }
    }), /*#__PURE__*/_createElement("div", {
      className: "card-layout-head",
      onClick: onClick,
      style: {
        height: height || 'auto'
      }
    }, /*#__PURE__*/_createElement("div", {
      className: "card-layout-icon"
    }, icon), /*#__PURE__*/_createElement("div", {
      className: "card-layout-right"
    }, /*#__PURE__*/_createElement("div", {
      className: "card-layout-text"
    }, /*#__PURE__*/_createElement("div", {
      className: "card-layout-title " + (titleClick && 'link-style'),
      onClick: handleTitleClick
    }, title), /*#__PURE__*/_createElement("div", {
      className: "card-layout-toolbar",
      onClick: stopPropagation
    }, toolbarConfigs && (_Toolbar || (_Toolbar = /*#__PURE__*/_createElement(Toolbar, {
      toolbarConfigs: toolbarConfigs,
      getContainer: getContainer,
      buttonStyle: buttonStyle
    }))))), line !== 'single' && /*#__PURE__*/_createElement("div", {
      className: "card-layout-desc"
    }, type === 'normal' ? desc.map(function (item, index) {
      var style = {
        height: 20 * (item.line || 1),
        lineClamp: item.line || 1,
        overflowWrap: item.line === 2 ? 'break-word' : 'normal',
        wordBreak: item.line === 2 ? 'break-all' : 'normal',
        WebkitLineClamp: item.line || 1
      };
      return /*#__PURE__*/_createElement("div", {
        className: "item",
        key: index
      }, item.onClick ? /*#__PURE__*/_createElement("a", {
        className: "text",
        style: style,
        onClick: function onClick(e) {
          stopPropagation(e);
          item.onClick && item.onClick(e);
        }
      }, item.text) : /*#__PURE__*/_createElement("span", {
        className: "text",
        style: style
      }, item.text));
    }) : descNode))), line !== 'single' && customLayout && /*#__PURE__*/_createElement("div", {
      onClick: onClick,
      className: "card-layout-preview-img"
    }, customLayout)), line !== 'single' && type === 'normal' && mainActions && mainActions.length > 0 && /*#__PURE__*/_createElement("div", {
      className: "card-layout-man-action-container",
      style: _extends({}, mainActionStyle)
    }, mainActions.map(function (item, index) {
      var icon = item.icon,
          title = item.title,
          onClick = item.onClick;
      return /*#__PURE__*/_createElement("div", {
        className: "main-action-box",
        onClick: onClick,
        key: index
      }, /*#__PURE__*/_createElement("div", {
        className: "content-box"
      }, icon, isShowMainActionTitle && /*#__PURE__*/_createElement("span", {
        className: "title"
      }, title)));
    })), type === 'loading' && mainActions && mainActions.length > 0 && /*#__PURE__*/_createElement("div", {
      className: "card-layout-man-action-container",
      style: _extends({}, mainActionStyle)
    }, mainActions.map(function (_item, index) {
      return /*#__PURE__*/_createElement("div", {
        className: "main-action-box",
        key: index
      }, _div || (_div = /*#__PURE__*/_createElement("div", {
        className: "content-box"
      }, /*#__PURE__*/_createElement(Skeleton, {
        width: '63px',
        height: '10px'
      }))));
    }))));
  };

  var failureTextRender = function failureTextRender(text, refresh, refreshClick) {
    return /*#__PURE__*/_createElement("div", {
      className: "card-layout-failure-box"
    }, /*#__PURE__*/_createElement("div", {
      className: "text",
      style: {
        color: 'rgba(17, 31, 44, 0.4)'
      }
    }, text), refresh && /*#__PURE__*/_createElement("div", {
      className: "refresh",
      onClick: refreshClick
    }, t('we_toolbar_refresh')));
  };

  switch (type) {
    case 'failure':
      return abstractCardLayoutRender(icon || failureImg, title, [], failureTextRender(failureText, refresh, refreshClick), 1, 'double', customLayout);

    case 'loading':
      return abstractCardLayoutRender(icon || fileImg(), /*#__PURE__*/_createElement(Skeleton, {
        width: (line === 'single' ? 220 : 99) + "px",
        marginTop: '4px',
        height: '12px'
      }), [], // @ts-ignore
      Array.apply('', {
        length: height === undefined ? 1 : (height - 32) / 16
      }).map(function (_, i) {
        return /*#__PURE__*/_createElement(Skeleton, {
          key: i,
          width: i % 2 ? '60%' : '80%',
          marginTop: '8px',
          height: '8px'
        });
      }), height === undefined ? 1 : (height - 32) / 16, 'multi', customLayout ? defaultCustomLayout : null);

    case 'export':
      return _div2 || (_div2 = /*#__PURE__*/_createElement("div", null));

    default:
      return abstractCardLayoutRender(icon, title, desc, /*#__PURE__*/_createElement(React.Fragment, null), lineCount, line, customLayout);
  }
};
AbstractCardLayout.defaultProps = {
  line: 'double',
  isShowMainActionTitle: true,
  toolbarOffsetX: 4,
  toolbarOffsetY: 4,
  isSelected: false,
  lineCount: 1,
  desc: [],
  color: '#F0F6FE',
  type: 'normal',
  failureText: '',
  refresh: false,
  blur: true,
  thresholdWidth: -Infinity
};

var defaultCustomLayout = /*#__PURE__*/_createElement(Skeleton, {
  width: '100%',
  height: '147px',
  borderRadius: '0'
});

var fileImg = function fileImg() {
  return /*#__PURE__*/_createElement("img", {
    style: {
      position: 'relative',
      top: 1,
      width: 40,
      height: 40,
      objectFit: 'contain'
    },
    src: "https://img.alicdn.com/imgextra/i1/O1CN01Xv6Ewz1E3btiJKBZN_!!6000000000296-2-tps-118-118.png"
  });
};

var failureImg = /*#__PURE__*/_createElement("img", {
  style: {
    position: 'relative',
    top: 1,
    width: 36,
    height: 36,
    objectFit: 'contain'
  },
  src: "https://img.alicdn.com/imgextra/i4/O1CN01rvr2PW1s7o9n7HXsG_!!6000000005720-2-tps-117-118.png"
});