import _extends from "@babel/runtime/helpers/extends";
import React, { useState } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Dropdown } from '@ali/we-design';
import { DropdownAnimation } from '@ali/we-util';
import { ButtonContainer } from "./styled";
export var ButtonCardLayout = function ButtonCardLayout(props) {
  var icon = props.icon,
      children = props.children,
      _props$type = props.type,
      type = _props$type === void 0 ? 'link' : _props$type,
      onVisibleChange = props.onVisibleChange,
      _props$overlay = props.overlay,
      overlay = _props$overlay === void 0 ? /*#__PURE__*/_createElement(React.Fragment, null) : _props$overlay,
      overlayStyle = props.overlayStyle,
      overlayClassName = props.overlayClassName,
      onClick = props.onClick,
      getContainer = props.getContainer;

  var _useState = useState(false),
      active = _useState[0],
      setActive = _useState[1];

  var handleClick = function handleClick(e) {
    onClick && onClick(e);
  };

  var handleOnVisibleChange = function handleOnVisibleChange(e) {
    setActive(e);
    onVisibleChange && onVisibleChange(e);
  };

  return /*#__PURE__*/_createElement(Dropdown, {
    trigger: "hover",
    offsetY: 4,
    getContainer: getContainer,
    overlay: /*#__PURE__*/_createElement(DropdownAnimation, {
      visible: active,
      overlayStyle: _extends({
        borderRadius: '8px',
        padding: 0
      }, overlayStyle)
    }, overlay),
    overlayClassName: overlayClassName,
    overlayStyle: {
      border: 'none',
      boxShadow: 'none',
      background: 'none'
    },
    onVisibleChange: handleOnVisibleChange
  }, /*#__PURE__*/_createElement(ButtonContainer, {
    onClick: handleClick,
    type: type
  }, icon && /*#__PURE__*/_createElement("div", {
    className: "button-icon-box"
  }, icon), /*#__PURE__*/_createElement("div", {
    className: "button-text-box"
  }, children)));
};