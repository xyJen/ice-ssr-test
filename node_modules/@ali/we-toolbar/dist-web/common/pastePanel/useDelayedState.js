import { useState, useRef, useCallback, useEffect } from 'react';
export default function useDelayedState(initialValue) {
  var _useState = useState(initialValue),
      state = _useState[0],
      setState = _useState[1];

  var timer = useRef(null);
  var setDelayedState = useCallback(function (value, delay) {
    if (timer.current) {
      clearTimeout(timer.current);
    }

    if (delay) {
      timer.current = setTimeout(function () {
        return setState(value);
      }, delay);
    } else {
      setState(value);
    }
  }, []);
  useEffect(function () {
    // 组件卸载时，保证 timer 被正确清理
    return function () {
      if (timer.current) {
        clearTimeout(timer.current);
      }
    };
  }, []);
  return [state, setDelayedState];
}