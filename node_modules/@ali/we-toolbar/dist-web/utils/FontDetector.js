function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/* eslint-disable consistent-return */

/* eslint-disable @typescript-eslint/no-explicit-any */
import { v4 as uuid } from 'uuid';
import fastdom from 'fastdom';
var woff = 'data:font/woff;charset=utf-8;base64,d09GRk9UVE8AAAQYAAoAAAAABlwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAA9AAAAMQAAADSEQga8UZGVE0AAAG4AAAAGwAAABxqQJGNT1MvMgAAAdQAAABDAAAAYFYPXfBjbWFwAAACGAAAADcAAAFCAA0D1mhlYWQAAAJQAAAAKQAAADb9ITBXaGhlYQAAAnwAAAAZAAAAJAN7/ztobXR4AAACmAAAAAgAAAAIAfQAAG1heHAAAAKgAAAABgAAAAYAAlAAbmFtZQAAAqgAAAFZAAACjkaWZeZwb3N0AAAEBAAAABMAAAAg/4YAMnicY2RgYWFgZGTkCs0rySzJSU0xZGBkYmBk0PjBz/BDmvGHDNMPWeYf4izdQMAqw7CIX4aBQUCGYamgDAO7DMNpIQZmkGoXBl+GMOei1MSS1BSFpEqFqtS8fCBO19HRUSjPLMlQcMvPK3HLL0pPVTDSM1DQyCgpKbDS108DiqaBRPWK0/TyUks04Y5AuAYIBBmYGBkVFLv3/nDdy7h37++Yvcx7xdR/rHzPtvdPuegP198xf1zZ+fi6RbpFu3m4ANybP/V4nGNgYGBkAIIztovOg+jzjOV2ULoeAEMOBccAeJxjYGH8wviFgZWBgamLaQ8DA0MPhGZ8wGDIyAQUZWBjZoABRgYkEJDmmsJwgMGAwYBZ4b8FQxSGGgUgZAQAfmQKqgB4nGNgYGBmgGAZBkYGELAB8hjBfBYGBSDNAoQgvsH//xDy/0WoSgZGNgYYk2hAqvrBDgBrAQbjAHicY2BkYGAA4pys3ox4fpuvDNzML4AiDOcZy3ci01DAwcAEogAU4ghtAAAAeJxjYGRgYFb4b8EQxQADjAyogAkAMlIBuQAAAAH0AAAAAAAAAABQAAACAAB4nIWQzUoDMRSFT+wPFESkT5CNUGEmzZRuOluhC8Wl3bdMph2omTpNKe1eceebCL6Ca9euXfsE7vTMNBREsBOS+92TMzc3AXCCZwjsvgs8ehZo4cPzEZr48lzDmbjyXEdL3Htu4FS8eG5Sf6dT1FvMHqq/ShZo483zEY7x6bmGS3x7rqMt7jw3IMWT5yb1V/ZXwGAMxzWBxAQbrltmFrmPUwTVkFgjo3NGGnLXkstY0GGo9aCgGTt0OI4FYnQ5Uu9N916FJTNF1VA/5zMVZuxMIicbuTU255wGQSDXmZvJYW7dMC+mRvaUlp2Zc4u4202ppqWqlqmyxrHITXVK2eG8uk1EybrMzU1CvK60DCvcMjFJtmL87xox59+SOz3CACHXkG7N2GepX23Gcn80ORqEUdjTUf9QkyNqBR8nq/qSrF1WV1Use8LIFMsst1LrSGmt5YGCP/yzcc0AAAB4nGNgZgCD/80MRgxYAAAoRAG4AA==';
/**
 * 20200126 引入 uuid，保证多实例 hook，避免多个hook同时对dom操作造成的判断失效
 * 保证每次调用能拿到同一个值
 */

var FontDetector = /*#__PURE__*/function () {
  function FontDetector() {
    var _this = this;

    this.src = void 0;
    this.css = void 0;
    this.timer = void 0;
    this.uuid = void 0;
    this.styleUuid = void 0;
    this.iframeUuid = void 0;
    this.detection = void 0;

    this.inject = function () {
      var iframe = document.getElementById(_this.iframeUuid);

      if (!iframe) {
        iframe = document.createElement('iframe');
        iframe.id = _this.iframeUuid;
        iframe.style.cssText = "\n        position: fixed;\n        left: -1000px;\n        top: -1000px;\n        width: 0;\n        height: 0;\n        border: none;\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n        z-index: -1;\n      ";
        document.body.appendChild(iframe);
        var iframeDoc = iframe.contentDocument;
        var sheet = iframeDoc.createElement('style');
        sheet.setAttribute('type', 'text/css');
        sheet.id = _this.styleUuid;
        sheet.innerHTML = _this.css;
        var head = iframeDoc.getElementsByTagName('head')[0];
        head.appendChild(sheet);
        var elem = iframeDoc.createElement('div');
        elem.id = _this.uuid;
        elem.innerHTML = '0';
        iframeDoc.body.appendChild(elem);
      }
    };

    this.remove = function () {
      var elem = document.getElementById(_this.iframeUuid);

      if (elem != null) {
        elem.remove();
      }
    };

    this.ready = function (callback) {
      _this.timer = window.setTimeout(function () {
        var _iframe;

        var iframe = document.getElementById(_this.iframeUuid);

        if (!iframe) {
          _this.inject();

          iframe = document.getElementById(_this.iframeUuid);
        } // warning: 这里的判断逻辑过于 hack，无法找到ref来自哪里


        if ((_iframe = iframe) != null && _iframe.style && iframe.clientWidth === 0) {
          return callback();
        }
      }, 0);
    };

    this.getResult = function (fonts, callback) {
      var iframe = document.getElementById(_this.iframeUuid);
      var iframeDoc = iframe.contentDocument;
      var elem = iframeDoc.getElementById(_this.uuid);
      var fragment = iframeDoc.createDocumentFragment(); // eslint-disable-next-line no-restricted-syntax

      for (var _iterator = _createForOfIteratorHelperLoose(fonts), _step; !(_step = _iterator()).done;) {
        var font = _step.value;
        var el = iframeDoc.createElement('span');
        el.className = 'fontspan';
        el.innerHTML = '0';
        el.style.fontFamily = "'" + font + "', font-detect-0-woff";
        fragment.appendChild(el);
      }

      elem.appendChild(fragment); // read dom on next cycle

      requestAnimationFrame(function () {
        // 防止当前 ev 有其他 requestAnimationFrame 内修改 dom
        fastdom.measure(function () {
          var results = Array.from(elem.children).map(function (el) {
            return el.clientWidth > 0;
          });
          _this.detection = results;
          callback(results);

          _this.remove();
        });
      });
    };

    this.detect = function (fonts, callback) {
      return _this.detection.length > 0 ? callback(_this.detection) : _this.ready(function () {
        return _this.getResult(fonts, callback);
      });
    };

    this.detection = [];
    var uid = uuid();
    this.uuid = "font-" + uid;
    this.styleUuid = "style-" + uid;
    this.iframeUuid = "iframe-" + uid;
    this.css = "\n    @font-face {\n      font-family: font-detect-0-woff;\n      src: url(" + woff + ") format('woff');\n    }\n    #" + this.uuid + " {\n      display: inline-block;\n      position: fixed;\n      left: -1000px;\n      top: -1000px;\n      font-family: font-detect-0-woff;\n    }\n    #" + this.uuid + " .fontspan {\n      display: inline-block;\n      position: fixed;\n      left: -1000px;\n      top: -1000px;\n    }\n    ";
    this.src = '';
    this.inject();
    this.timer = 0;
  }

  var _proto = FontDetector.prototype;

  _proto.destroy = function destroy() {
    if (this.timer) {
      window.clearTimeout(this.timer);
      this.remove();
    }
  };

  return FontDetector;
}();

var shared = undefined;
export var getSharedFontDetector = function getSharedFontDetector() {
  if (!shared) {
    shared = new FontDetector();
  }

  return shared;
};