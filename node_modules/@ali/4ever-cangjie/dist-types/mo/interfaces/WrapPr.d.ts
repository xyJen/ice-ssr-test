export declare type HRelativeFrom = 'margin' | 'page' | 'column' | 'character' | 'leftMargin' | 'rightMargin' | 'insideMargin' | 'outsideMargin';
export declare type HAlign = 'left' | 'center' | 'right' | 'inside' | 'outside';
export declare type VRelativeFrom = 'margin' | 'page' | 'paragraph' | 'line' | 'topMargin' | 'bottomMargin' | 'insideMargin' | 'outsideMargin';
export declare type VAlign = 'top' | 'center' | 'bottom' | 'inside' | 'outside';
export declare type WrapText = 'bothSides' | 'left' | 'right' | 'largest';
export declare type DistanceFromText = {
    top: number;
    left: number;
    bottom: number;
    right: number;
};
/**
 * @todo 向量定义 @毕滨滨
 */
export interface WrapPolygon {
}
/**
 * 无环绕（浮动文字下方/浮动文字上方）
 */
export interface WrapNone {
    wrapType: 'none';
}
/**
 * 四周型环绕
 */
export interface WrapSquare {
    wrapType: 'square';
    wrapText: WrapText;
}
/**
 * 紧凑型环绕
 */
export interface WrapTight {
    wrapType: 'tight';
    wrapText: WrapText;
    wrapPolygon: WrapPolygon;
}
/**
 * 穿越性环绕
 */
export interface WrapThrough {
    wrapType: 'through';
    wrapText: WrapText;
    wrapPolygon: WrapPolygon;
}
/**
 * 上下型环绕
 */
export interface WrapTopAndBottom {
    wrapType: 'top-and-bottom';
}
export interface PositionH {
    relativeFrom: HRelativeFrom;
    align?: HAlign;
    offset?: number;
    /**
     * pctOffset（百分比）和 offset（偏移值） 会同时出现，Word 低版本会进行降级
     */
    pctOffset?: number;
}
export interface PositionV {
    relativeFrom: VRelativeFrom;
    align?: VAlign;
    offset?: number;
    pctOffset?: number;
}
/**
 * 文字环绕属性
 */
export interface WrapPr {
    wrap: WrapNone | WrapSquare | WrapTight | WrapThrough | WrapTopAndBottom;
    positionH?: PositionH;
    positionV?: PositionV;
    /**
     * 是否浮于文字下方
     */
    behindDoc?: boolean;
    distFromText: DistanceFromText;
    locked: boolean;
    allowOverlap: boolean;
    /**
     * 浮动元素的 z-index 相对值
     * @todo 目前暂未实现相对高度的计算
     */
    relativeHeight: number;
    /**
     * 相对于页面的 X/Y 定位，如果存在 simplePos 则优先取值
     */
    simplePos?: {
        x: number;
        y: number;
    };
}
