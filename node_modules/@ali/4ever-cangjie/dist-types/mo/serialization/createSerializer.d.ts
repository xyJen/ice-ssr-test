/**
 * @packageDocumentation
 * @module Serializer
 */
import type { Schema } from '../../';
import type { MoSerializationPlugin as Plugin, MoHtmlParser, Mo, MoPlugin, BaseMo } from '../type';
declare function create(plugins: Plugin[], schema: Schema, parser?: MoHtmlParser): Mo;
/**
 * @deprecated create serializer with `serializations plugins`
 * @returns serializer
 */
export declare const createSerializerOld: typeof create;
/**
 * create serializer only support jsonMl <=> value
 * @param plugins mo plugins
 * @returns serializer
 */
export declare function createBaseSerializer(plugins: MoPlugin[]): BaseMo;
/**
 * create serializer with jsonMl、html、text、markdown
 * @param plugins mo plugins
 * @param parser optional html parser
 * @returns serializer
 */
export declare function createSerializer(plugins: MoPlugin[], parser?: MoHtmlParser): Mo;
export {};
