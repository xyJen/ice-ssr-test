/// <reference types="react" />
import Controller from '../../../controller';
import Document from '../../../models/document';
import { TextPoint } from '../../../models/point';
import { SelectionAppearances } from '../renderer';
import { SelectionWrapperMap } from '../types';
/**
 * 输入法输入时，找到光标实际所在的 point
 *
 * @param anchor
 * @param composingLen
 * @param document 包含 composing mark 的 document
 * @returns
 * - composing leaf 未跨 Text 时，修正 offset 到 anchor.offset + composingLen
 * - composing leaf 跨 Text 时，修正到 composing 末尾所在的 Text 内，offset 为最后一个 Text 内的 composing 部分长度
 */
export declare const findComposingPoint: (anchor: TextPoint, composingLen: number, document: Document) => TextPoint;
export declare function getSelectionAppearance(selectionWrapperMap: SelectionWrapperMap, zoom: number, isRemote: boolean, contentRef: React.MutableRefObject<HTMLDivElement | null>, controller: Controller): SelectionAppearances;
