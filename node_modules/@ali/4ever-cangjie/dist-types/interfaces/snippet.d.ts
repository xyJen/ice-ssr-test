import React from 'react';
import Controller from '../controller';
/**
 * Snippet 候选项的基础结构
 */
export interface SnippetItemBase {
    /**
     * Snippet 选项的唯一标识
     */
    key: string;
    /**
     * 展示在 SnippetsPanel 列表中的名称
     */
    title: React.ReactNode;
    /**
     * 展示在 SnippetsPanel 列表中的名称前缀
     */
    prefix?: React.ReactNode;
    /**
     * 展示在 SnippetsPanel 列表中的名称后缀
     */
    suffix?: React.ReactNode;
}
export interface SnippetConfig<T extends SnippetItemBase = SnippetItemBase> {
    /**
     * 触发 snippet 的正则字符串
     */
    trigger: string;
    /**
     * 触发 snippet 的 prefix 规则，为空则不限制
     */
    triggerPrefix?: string;
    /**
     * 触发 snippet 的 suffix 规则，为空则不限制
     */
    triggerSuffix?: string;
    /**
     * 获取 Snippet 候选项列表
     */
    fetchItems: () => Promise<T[]>;
    /**
     * 根据符合 trigger 规则的 triggerText，过滤出合法的候选项
     */
    filterItems: (triggerText: string, items: T[]) => Promise<T[]>;
    /**
     * 删除 triggerText 后，执行插入 Snippet 的过程
     */
    insertSnippet: (controller: Controller, item: T) => void;
    /**
     * 自定义 SnippetsPanel 渲染内容
     */
    renderPanelContent?: (data: T[]) => React.ReactNode;
}
export declare type SnippetConfigs<T extends SnippetItemBase = any> = Record<string, SnippetConfig<T>>;
