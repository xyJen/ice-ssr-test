import { MoPlugin } from '../../mo';
import type { MobileZhiPluginConfig, ZhiPluginConfig } from './base';
import Plugin from '../plugin';
declare type Zhi = Pick<Plugin, 'commands' | 'queries' | 'onQuery' | 'onAction' | 'actions' | 'isActions' | 'decorateNode' | 'injectToNode' | 'groupNodes' | 'renderEditable' | 'renderGroup' | 'renderNode' | 'renderText' | 'renderMark' | 'renderCaret' | 'renderRemoteCaret' | 'contextMenu' | 'shouldNodeComponentUpdate' | 'onCangjiePerf' | 'getNodeStyle' | 'getContentStyle' | 'onCangjieSelect' | 'onCangjieCopy' | 'onClick' | 'onKeyDown' | 'onKeyUp' | 'onMouseDown' | 'onMouseMove' | 'onMouseUp' | 'onTouchStart' | 'onTouchMove' | 'onTouchEnd' | 'onContextMenu' | 'onDragStart' | 'onDragEnter' | 'onCangjieFocus' | 'onCangjieBlur' | 'onResetValue' | 'getNodeSelectToolbarItems' | 'beforeCopySelectedNodes'>;
export interface ZhiPlugin extends MoPlugin, Zhi {
}
export declare type ZhiFactory = (configs: ZhiPluginConfig) => ZhiPlugin;
export declare type MobileZhiFactory = (configs: MobileZhiPluginConfig) => ZhiPlugin;
export {};
