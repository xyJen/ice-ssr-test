import { ZhiPlugin } from './zhi';
import type { BiPluginConfig, MobileBiPluginConfig } from './base';
import type Plugin from '../plugin';
declare type Bi = Pick<Plugin, 'commands' | 'onCommand' | 'onApplyOperation' | 'onChange' | 'onCangjieCut' | 'onCangjiePaste' | 'onCangjieComposingChange' | 'onCangjieInput' | 'onDrop' | 'getSnippetConfig' | 'getNodeSelectToolbarItems' | 'beforeCopySelectedNodes'>;
export interface BiPlugin extends ZhiPlugin, Bi {
    /** sidebar 配置, 先从 bi 迁移并改为异步解决性能和 bundle size 问题，TODO: 看看是否要重构 */
    sidebar?: () => Promise<{
        locale: any;
        config: any;
        items: any;
    }>;
    /** 先从 bi plugin 迁移，待优化 */
    placeholder?: any;
    menubar?: any;
    leftToolbar?: any;
    quickInsert?: any;
}
export declare type BiFactory = (configs: BiPluginConfig) => BiPlugin;
export declare type MobileBiFactory = (configs: MobileBiPluginConfig) => BiPlugin;
export {};
