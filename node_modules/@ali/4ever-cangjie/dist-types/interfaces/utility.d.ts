import type Controller from '../controller';
/**
 * controller 为第一个参数的函数 type，返回去掉 controller 后的函数 type
 */
export declare type RestParameters<T extends (controller: Controller, ...args: any) => any> = T extends (controller: Controller, ...args: infer P) => any ? P : never;
export declare type RunParameters<T> = T extends (controller: Controller, next: any) => any ? [] : T extends (arg: infer P, controller: Controller, next: any) => any ? [P] : T extends (arg1: infer P1, arg2: infer P2, controller: Controller, next: any) => any ? [P1, P2] : any[];
