/**
 * @packageDocumentation
 * @module Models
 */
import ImmutableRecord from './immutableRecord';
import Operation from './operation';
export interface HistoryProperties {
    redos: Operation[][];
    undos: Operation[][];
}
export default class History extends ImmutableRecord {
    static create(params?: {
        maxHistorySize?: number;
    }): History;
    private constructor();
    readonly redos: Operation[][];
    readonly undos: Operation[][];
    private readonly lastUndoCreatedTime;
    private readonly maxHistorySize;
    merge(props: Partial<HistoryProperties>): History;
    set<T extends keyof HistoryProperties>(key: T, value: Required<HistoryProperties>[T]): History;
    moveLastRedoRecordToUndos(): History;
    moveLastUndoRecordToRedos(undoRecord?: Operation[]): History;
    mergeToLastUndoIfNeed(operation: Operation, forceMerge: boolean): History;
}
