import Controller from "../controller";
import NodeManager from "./nodeManager";
import { LayoutInfoResult, VisiblesResult } from "./interface";
interface OutputManagerOptions {
    controller: Controller;
    nodeManager: NodeManager;
    firstPaintBlockSize?: number;
}
export default class OutputManager {
    private controller;
    private nodeManager;
    private firstPaintBlockSize;
    startBlockOffset: number;
    endBlockOffset: number;
    startBlockKey?: string;
    endBlockKey?: string;
    startViewBlockOffset: number;
    beforePlaceholderHeight: number;
    afterPlaceholderHeight: number;
    constructor(options: OutputManagerOptions);
    precheckOutputByLayoutInfo(layoutInfoResult: LayoutInfoResult): {
        beforePlaceholderHeight: number;
        afterPlaceholderHeight: number;
        visibles: {
            blockFinalVisibleStates: ("hide" | "show" | "destroy")[];
            visibleBlockKeys: string[];
        };
    };
    loadCalculateLayoutInfo(layoutInfoResult: LayoutInfoResult): void;
    private calculatePlaceholderHeight;
    setPlaceholderHeight(expectedBlockStartY?: number, expectedBlockEndY?: number, accHeight?: number): void;
    setStartEndInfoByOffset(startOffset: number, endOffset: number): void;
    private calculateVisibles;
    get visibles(): VisiblesResult;
}
export {};
