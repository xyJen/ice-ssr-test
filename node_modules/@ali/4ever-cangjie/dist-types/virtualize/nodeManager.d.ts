import Controller from '../controller';
import type { MeasureBlocksResult, BlockInfo } from './interface';
export interface NodeManagerOption {
    controller: Controller;
}
export default class NodeManager {
    private controller;
    private blockCacheByKey;
    private blockKeyQueue;
    constructor(options: NodeManagerOption);
    getCachedBlockPropsByKey(key: string): BlockInfo | undefined;
    gc(): void;
    setCachedBlockPropsByKey(key: string, blockInfo: BlockInfo): void;
    loadMeasureResult(measureResults: MeasureBlocksResult): void;
    getVirtualizePersistState(key: string): string[];
    updateVirtualizePersistState(key: string, topBlockKey: string, shouldPersistState: boolean): void;
}
