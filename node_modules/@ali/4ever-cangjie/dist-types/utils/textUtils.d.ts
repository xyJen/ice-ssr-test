declare function isChineseChar(char: string): boolean;
declare function isPunc(char: string): boolean;
declare function getNextLetter(str: string, i: number, reverse?: boolean): string;
declare function countBreaks(str: string, i: number, reverse?: boolean): number;
declare function isSurrogate(code: number): boolean;
declare function isWord(char: string): boolean;
declare function getCharOffset(text: string, offset: number, reverse?: boolean): number;
declare function getCharOffsetBackward(text: string, offset: number): number;
declare function getCharOffsetForward(text: string, offset: number): number;
declare function getCharRange(text: string, offset: number): [number, number];
declare function getWordRange(text: string, offset: number): number[];
declare function getWordOffset(text: string, offset: number, reverse?: boolean): number;
declare function getMoveWordOffset(text: string, offset: number, reverse?: boolean): number;
declare function getWordOffsetBackward(text: string, offset: number): number;
declare function getWordOffsetForward(text: string, offset: number): number;
declare function graphemesBreak(text: string): string[];
export declare const spaceUniCode: {
    nbsp: string;
    zwnj: string;
    zwj: string;
};
/**
 *  处理字符串中的特殊字符
 *
 *  1. 单独 \r 或 \r\n 效果类似 \n ，有折行效果
 *     \r\r 或 \n\n， 有隔行效果
 *  2. &nbsp; 替换成普通空格，移除 &zwnj;、&zwj 零宽字符
 * */
export declare function normalizeText(text: string): string;
declare const _default: {
    countBreaks: typeof countBreaks;
    getNextLetter: typeof getNextLetter;
    getCharOffset: typeof getCharOffset;
    getCharOffsetBackward: typeof getCharOffsetBackward;
    getCharOffsetForward: typeof getCharOffsetForward;
    getCharRange: typeof getCharRange;
    getWordRange: typeof getWordRange;
    getWordOffset: typeof getWordOffset;
    getMoveWordOffset: typeof getMoveWordOffset;
    getWordOffsetBackward: typeof getWordOffsetBackward;
    getWordOffsetForward: typeof getWordOffsetForward;
    isSurrogate: typeof isSurrogate;
    isWord: typeof isWord;
    isPunc: typeof isPunc;
    isChineseChar: typeof isChineseChar;
    graphemesBreak: typeof graphemesBreak;
    normalizeText: typeof normalizeText;
};
export default _default;
