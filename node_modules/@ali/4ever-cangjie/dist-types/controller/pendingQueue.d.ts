import Controller from './index';
import { EnablePendingConfig, EnablePending, PendingType, OperationWithValue } from '../interfaces/controller';
import { PendingGetter } from '../interfaces/pending';
import Value from '../models/value';
export interface PendingQueueProps {
    controller: Controller;
    debounceTime: number;
    pendingGetter?: PendingGetter<any>;
    enablePending: EnablePendingConfig;
}
export default class PendingQueue {
    static create(props: PendingQueueProps): PendingQueue;
    private operations;
    private pending;
    private ctx;
    private pendingGetter;
    private debouncedFlush;
    private controller;
    value: Value | null;
    enablePending: EnablePending;
    constructor(props: PendingQueueProps);
    private get shouldDebouncedFlush();
    private run;
    private flush;
    private isType;
    get type(): PendingType | undefined;
    queue(operations: OperationWithValue[]): this;
    clear(): this;
    isEmpty(): boolean;
    size(): number;
}
