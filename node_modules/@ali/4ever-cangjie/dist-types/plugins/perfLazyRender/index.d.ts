import * as React from 'react';
import Controller from '../../controller';
import Node from '../../models/node';
import RenderNodeProps from '../../interfaces/renderNodeProps';
export declare enum LazyRenderStrategyType {
    LazyLoad = "lazyload",
    Pruning = "pruning"
}
interface LazyRenderStrategy {
    type?: LazyRenderStrategyType;
    forceVisible?: boolean;
    placeholder?: React.ReactElement | null;
    size?: {
        width: number;
        height: number;
    };
}
interface PerfLazyRenderPluginConfig {
    lazyRenderStrategy?: (controller: Controller, node: Node) => LazyRenderStrategy;
}
declare function createPerfLazyRenderPlugin(config?: PerfLazyRenderPluginConfig): {
    queries?: undefined;
    renderEditable?: undefined;
    renderNode?: undefined;
} | {
    queries: {
        lazyRenderStrategy: (controller: Controller, node: Node) => LazyRenderStrategy;
    };
    renderEditable: (_: any, controller: Controller, next: any) => JSX.Element;
    renderNode: ({ node, isSelected }: RenderNodeProps, controller: Controller, next: any) => any;
} | {
    renderEditable: (_: any, controller: Controller, next: any) => JSX.Element;
    renderNode: ({ node, isSelected }: RenderNodeProps, controller: Controller, next: any) => any;
    queries?: undefined;
};
declare namespace createPerfLazyRenderPlugin {
    var factory: (defaultConfig?: {}) => (config?: {}) => {
        queries?: undefined;
        renderEditable?: undefined;
        renderNode?: undefined;
    } | {
        queries: {
            lazyRenderStrategy: (controller: Controller, node: Node) => LazyRenderStrategy;
        };
        renderEditable: (_: any, controller: Controller, next: any) => JSX.Element;
        renderNode: ({ node, isSelected }: RenderNodeProps<Node>, controller: Controller, next: any) => any;
    } | {
        renderEditable: (_: any, controller: Controller, next: any) => JSX.Element;
        renderNode: ({ node, isSelected }: RenderNodeProps<Node>, controller: Controller, next: any) => any;
        queries?: undefined;
    };
    var LazyRenderStrategyType: typeof import(".").LazyRenderStrategyType;
    var showPrunedElements: (target: Element) => void;
    var useElementVisibility: typeof import("./useElementVisibility").default;
}
export default createPerfLazyRenderPlugin;
