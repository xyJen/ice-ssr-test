{"version":3,"file":"index.js","sources":["../../src/utils/environment.ts","../../src/utils/deepFreeze.ts","../../src/models/immutableRecord.ts","../../src/models/node.ts","../../src/models/mark.ts","../../src/utils/listUtils.ts","../../src/models/leaf.ts","../../src/utils/keyUtils.ts","../../src/utils/setUtils.ts","../../src/models/text.ts","../../src/models/path.ts","../../src/models/error.ts","../../src/models/element.ts","../../src/models/inline.ts","../../src/models/block.ts","../../src/interfaces/controller.ts","../../src/hooks/useHots.ts","../../src/controller/useController.ts","../../src/controller/connectController.tsx","../../src/models/operation.ts","../../src/models/point.ts","../../src/utils/grapheme/classes-v13.0.0.ts","../../src/utils/grapheme/GraphemeBreaker.ts","../../src/utils/textUtils.ts","../../src/utils/dom/findClosestInContent.ts","../../src/constants.ts","../../src/utils/dom/findPoint.ts","../../src/utils/dom/findRange.ts","../../src/utils/dom/caretRangeFromTargetAndCoord.ts","../../src/utils/dom/getElementByCangjieKey.ts","../../src/utils/dom/findDOMNode.ts","../../src/utils/dom/findDOMLeaves.ts","../../src/utils/dom/findDOMPoint.ts","../../src/utils/dom/findDOMRange.ts","../../src/utils/dom/isPointAtEdge.ts","../../src/utils/dom/findRectFromPoint.ts","../../src/utils/dom/localCaretPos.ts","../../src/utils/dom/caretHanging.ts","../../src/queries/selection.ts","../../src/models/selection.ts","../../src/models/document.ts","../../src/models/injection.ts","../../src/utils/selection.ts","../../src/commands/selection.ts","../../src/commands/remove.ts","../../src/commands/move.ts","../../src/commands/utils.ts","../../src/contexts/split.ts","../../src/commands/split.ts","../../src/contexts/insert.ts","../../src/commands/insert.ts","../../src/contexts/merge.ts","../../src/commands/merge.ts","../../src/commands/mark.ts","../../src/commands/delete.ts","../../src/commands/replace.ts","../../src/commands/set.ts","../../src/contexts/wrap.ts","../../src/commands/wrap.ts","../../src/contexts/unwrap.ts","../../src/commands/unwrap.ts","../../src/commands/index.ts","../../src/mo/utils/constants.ts","../../src/utils/getClipboardData.ts","../../src/events/dataTransfer.ts","../../src/models/dataTransfer.ts","../../src/events/cangjieClipboard.ts","../../src/events/cangjieSelect.ts","../../src/locale/contextMenu.ts","../../src/utils/transfer.ts","../../src/utils/omitEmpty.ts","../../src/utils/createClipboardDataFromSelection.ts","../../src/components/mobile/icons.tsx","../../src/plugins/contextMenu.ts","../../src/hooks/useScroll.ts","../../src/utils/dom/findCaretPosition.ts","../../src/components/mobile/popupPosition.ts","../../src/hooks/useSelectionData.ts","../../src/components/mobile/contextMenu.tsx","../../src/hooks/useZoom.ts","../../src/components/mobile/Zoomer.tsx","../../src/utils/dom/scrollToSelection.ts","../../src/utils/dom/outsideScroller.ts","../../src/components/ScrollableContainer/index.tsx","../../src/components/mobile/handles.tsx","../../src/plugins/mobile.tsx","../../src/plugins/queries.ts","../../src/plugins/renderNode.ts","../../src/plugins/commands.ts","../../src/plugins/normalization.ts","../../src/plugins/coreSchema.ts","../../src/models/history.ts","../../src/utils/hotkeys.ts","../../src/plugins/history.ts","../../src/components/selection/caret/caret.tsx","../../src/components/selection/caret/index.tsx","../../src/events/cangjieInput.ts","../../src/utils/dom/findNode.ts","../../src/utils/shouldStopInsideVoid.ts","../../src/utils/perf.ts","../../src/plugins/core.tsx","../../src/plugins/uuid/createMapOperation.ts","../../src/plugins/uuid/queries.ts","../../src/plugins/uuid/utils.ts","../../src/plugins/uuid/actions.ts","../../src/plugins/uuid/commands.ts","../../src/plugins/uuid/onAction.ts","../../src/plugins/uuid/constants.ts","../../src/plugins/uuid/index.ts","../../src/plugins/group/actions.ts","../../src/plugins/group/onAction.ts","../../src/plugins/group/renderNode.tsx","../../src/plugins/group/renderGroup.tsx","../../src/plugins/group/onResetValue.ts","../../src/plugins/group/index.ts","../../src/utils/flushtask.ts","../../src/utils/getChildrenOverlaps.ts","../../src/utils/getChildrenInjections.ts","../../src/utils/opContext.ts","../../src/models/observable.ts","../../src/controller/pendings/selection.ts","../../src/controller/pendings/textinput.ts","../../src/controller/pendings/index.ts","../../src/controller/pendingQueue.tsx","../../src/utils/setInjection.ts","../../src/controller/userData.ts","../../src/interfaces/perf.ts","../../src/events/cangjiePerf.ts","../../src/controller/hots.ts","../../src/controller/utils/isEventHandler.ts","../../src/virtualize/constants.ts","../../src/virtualize/virtualizeUtils.ts","../../src/virtualize/calculateUtils.ts","../../src/virtualize/nodeManager.ts","../../src/virtualize/outputManager.tsx","../../src/utils/dom/findCurrentDOMRange.ts","../../src/utils/dom/findRangeByEvent.ts","../../src/utils/dom/optimizeRectsToFitLineHeight.ts","../../src/utils/dom/selection.ts","../../src/utils/dom/scrollToNode.ts","../../src/utils/dom/index.ts","../../src/virtualize/viewManager.ts","../../src/virtualize/virtualizeManager.ts","../../src/controller/groupManager.ts","../../src/utils/virtualize.ts","../../src/mo/utils/jsonml.ts","../../src/mo/utils/nodeTypes.ts","../../src/mo/utils/parseHtml.ts","../../src/mo/utils/createTextWithString.ts","../../src/mo/utils/createEmptyParagraph.ts","../../src/mo/serialization/jsonMLToValue.ts","../../src/mo/serialization/valueToJsonML.ts","../../src/mo/serialization/jsonMLToNode.ts","../../src/mo/serialization/nodeToJsonML.ts","../../src/mo/serialization/htmlToJsonML/DomParser.ts","../../src/mo/serialization/htmlToJsonML/State.ts","../../src/mo/serialization/htmlToJsonML/Deserializer.ts","../../src/mo/serialization/htmlToJsonML/htmlFrom.ts","../../src/mo/serialization/htmlToJsonML/index.ts","../../src/mo/serialization/jsonMLToHTML.tsx","../../src/mo/serialization/textToJsonML.ts","../../src/mo/serialization/nodeToText.ts","../../src/mo/serialization/valueToText.ts","../../src/mo/serialization/markdownToHTML.ts","../../src/mo/serialization/htmlToMarkdown.ts","../../src/mo/plugins/document/jsonMLToHTML.tsx","../../src/mo/plugins/document/jsonMLToValue.ts","../../src/mo/plugins/document/valueToJsonML.ts","../../src/mo/plugins/document/schema.ts","../../src/mo/plugins/document/index.ts","../../src/mo/schema/createSchema.ts","../../src/mo/plugins/text/createHTMLToJsonML.tsx","../../src/mo/plugins/text/createJsonMLToValue.ts","../../src/mo/plugins/text/createJsonToHtml.tsx","../../src/mo/plugins/text/createValueToJsonMl.ts","../../src/mo/plugins/text/createValueToText.ts","../../src/mo/plugins/text/index.ts","../../src/mo/serialization/createSerializer.ts","../../src/mo/serialization/htmlToJsonML/HtmlParser.ts","../../src/mo/common/borderStyle.ts","../../src/controller/useControllerStatic.ts","../../src/controller/index.ts","../../src/hooks/useStyle.ts","../../src/controller/provider.tsx","../../src/models/decoration.ts","../../src/models/userData.ts","../../src/models/value.ts","../../src/queries/index.ts","../../src/hooks/usePendingTerminal.ts","../../src/plugins/placeholder.tsx","../../src/plugins/perfLazyRender/useElementVisibility.ts","../../src/plugins/perfLazyRender/index.tsx","../../src/plugins/perfFirstRender.tsx","../../src/components/selection/context.tsx","../../src/hooks/useOffsetPosition.ts","../../src/hooks/useLeafBlockResizer.ts","../../src/hooks/useUserData.ts","../../src/hooks/useGroupData.ts","../../src/utils/dom/scrollToVisible.ts","../../src/hooks/useInputDetector.ts","../../src/hooks/useSelectionCalculator.ts","../../src/events/pasteInput.ts","../../src/components/hiddenTextArea.tsx","../../src/hooks/useResumePosition.ts","../../src/hooks/useScrollBySelection.ts","../../src/components/selection/range.tsx","../../src/hooks/usePerf.ts","../../src/components/selection/renderer.tsx","../../src/utils/caretColor.ts","../../src/components/selection/utils/getRectsFromLeaf.ts","../../src/components/selection/utils/dom.ts","../../src/components/selection/utils/traverse.ts","../../src/components/selection/utils/antiAliasingRects.ts","../../src/components/selection/utils/getRectsFromSelection.ts","../../src/components/selection/utils/getSelectionAppearance.ts","../../src/components/shadowDom.tsx","../../src/components/selection/slot.tsx","../../src/components/selection/utils/splitSelectionAndGetWrapper.ts","../../src/components/selection/utils/useSelectionWrappers.tsx","../../src/components/selection/index.tsx","../../src/hooks/useCangjieKeyBindingRef.ts","../../src/plugins/group/utils.ts","../../src/components/voidWrapper.tsx","../../src/components/leaf.tsx","../../src/utils/replaceNodeIntoElement.ts","../../src/hooks/useInputPending.ts","../../src/hooks/useView.ts","../../src/components/groupWrapper.tsx","../../src/components/node.tsx","../../src/virtualize/components/VirtualizePlaceholder.tsx","../../src/virtualize/hooks/useVirtualize.ts","../../src/components/editableContent.tsx","../../src/hooks/useClickToScroll.ts","../../src/components/ScrollableContent/index.tsx","../../src/components/content.tsx","../../src/utils/normalizePendingConfig.ts","../../src/utils/createAction.ts","../../src/utils/getUserData.ts","../../src/index.ts"],"sourcesContent":["/**\n * @packageDocumentation\n * @module environment\n */\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !(window as any).MSStream;\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\nexport const IS_MOBILE = IS_IOS || IS_ANDROID;\n\nexport const IS_TOUCH_DEVICE =\n  typeof navigator !== 'undefined' && navigator.maxTouchPoints > 0;\n\nexport const IS_IPAD =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad/.test(navigator.userAgent) &&\n  !(window as any).MSStream;\n\nexport const IS_MAC =\n  typeof navigator !== 'undefined' && /Mac OS X/i.test(navigator.userAgent);\n\nexport const IS_WINDOWS =\n  typeof navigator !== 'undefined' && /Windows/i.test(navigator.userAgent);\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /mozilla\\/[a-z._\\d]+ \\((?:mobile)|(?:tablet)/i.test(navigator.userAgent);\n\n// Mac 容器内置的 Safari 内核浏览器在 userAgent 上没有 Safari 标识...\n// 这里为了兼容钉钉容器内置 Safari 的情况\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  navigator.vendor === 'Apple Computer, Inc.';\n\nexport const IS_DEV = process.env.NODE_ENV === 'development';\n\nexport const IS_NODE = !!(\n  typeof process !== 'undefined' &&\n\tprocess.versions &&\n\tprocess.versions.node\n);\n\n/**\n * 返回 Chrome 版本\n */\nexport const getChromeVersion = () => {\n  const raw = navigator?.userAgent?.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n  return raw ? parseInt(raw[2], 10) : -1;\n};\n","/**\n * @packageDocumentation\n * @ignore\n */\n\n/**\n * Freeze an object or array in Cangjie data to prevent modification\n *\n * Since Cangjie abandoned the immutableJS library, now it's developer's\n * responsibility to create new data object for any updated properties.\n * This function is used in Cangjie debug mode to prevent mistakes of altering\n * existing object.\n *\n * Note:\n * 1. use it in development mode, since it may cause bad performance\n *   https://immerjs.github.io/immer/docs/performance\n *\n * 2. use it in 'strict mode' to trigger a TypeError; otherwise the caller\n *   will just fails silently, which doesn't make any use it.\n */\n\nfunction isFrozen(obj: any): boolean {\n  if (obj === null || typeof obj !== 'object') {\n    return true;\n  }\n  return Object.isFrozen(obj);\n}\n\nexport default function deepFreeze(obj: any) {\n  if (isFrozen(obj)) {\n    return;\n  }\n\n  // we don't use Object.keys here, as we want to incude Arrays\n  const propNames = Object.getOwnPropertyNames(obj);\n\n  for (const key of propNames) {\n    const value = obj[key];\n    if (!isFrozen(value)) {\n      deepFreeze(value);\n    }\n  }\n\n  return Object.freeze(obj);\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport { IS_DEV } from '../utils/environment';\nimport deepFreeze from '../utils/deepFreeze';\n\nexport default abstract class ImmutableRecord {\n  protected freeze() {\n    if (IS_DEV) {\n      deepFreeze(this);\n    }\n  }\n\n  abstract merge(props: Partial<object>): ImmutableRecord;\n\n  abstract set<K extends keyof object>(\n    key: K,\n    value: object[K],\n  ): ImmutableRecord;\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport ImmutableRecord from './immutableRecord';\nimport Element from './element';\nimport Text from './text';\nimport { Serializable, SerializeOptions } from '../interfaces/serializable';\n\nexport interface NodeProperties {\n  key?: string;\n}\n\nexport default abstract class Node extends ImmutableRecord\n  implements Serializable {\n  static createProperties(attrs: string | object = {}) {\n    if (typeof attrs === 'string') {\n      return { type: attrs };\n    }\n\n    if (isPlainObject(attrs)) {\n      return attrs;\n    }\n\n    throw new Error(\n      `\\`Node.createProperties\\` only accepts objects, strings, but you passed it: ${attrs}`,\n    );\n  }\n\n  public readonly key: string;\n\n  protected constructor(props: Required<NodeProperties>) {\n    super();\n    const { key } = props;\n    this.key = key;\n  }\n\n  public abstract get text(): string;\n\n  public abstract regenerateKey(): Node;\n\n  /**\n   * 获取自身树下的所有 Text 节点\n   * 如果自身是 Text，则返回只含有自身的数组\n   */\n  public abstract getTexts(): Text[];\n\n  /**\n   * 把当前的 Node 转化成子类型（Text 或者 Element）\n   */\n  public toSubType(): Text | Element {\n    const node: Node = this;\n    if (node instanceof Text) {\n      return node;\n    } else if (node instanceof Element) {\n      return node;\n    }\n    throw new Error(`${node} is not a Node`);\n  }\n\n  /**\n   * 此节点是否是一个Text节点。see Text.isText\n   */\n  public isText(): this is Text {\n    return this instanceof Text;\n  }\n\n  /**\n   * 此节点是否是一个Element节点。see Element.isElement\n   */\n  public isElement(): this is Element {\n    return this instanceof Element;\n  }\n\n  /**\n   * 获取第一个叶子Node；如果自身就是一个叶子Node，则返回自身\n   * 根据目前Schema规范，返回的都都是一个text；但是后续Cangjie扩展，可能返回其它类型Node\n   */\n  public getFirstNode(): Node {\n    if (!this.isElement() || !this.nodes.length) {\n      return this;\n    }\n    return this.nodes[0].getFirstNode();\n  }\n\n  /**\n   * 获取最后一个叶子Node；如果自身就是一个叶子Node，则返回自身\n   * 根据目前Schema规范，返回的都都是一个text；但是后续Cangjie扩展，可能返回其它类型Node\n   */\n  public getLastNode(): Node {\n    if (!this.isElement() || !this.nodes.length) {\n      return this;\n    }\n    return this.nodes[this.nodes.length - 1].getLastNode();\n  }\n\n  /**\n   * 获取第一个Text\n   * 根据目前Schema规范，都会返回一个text；但是后续Cangjie扩展，可能返回null\n   */\n  public getFirstText(): Text | null {\n    if (this.isText()) {\n      return this;\n    }\n    if (!this.isElement() || !this.nodes.length) {\n      return null;\n    }\n    return this.nodes[0].getFirstText();\n  }\n\n  /**\n   * 获取最后一个Text\n   * 根据目前Schema规范，都会返回一个text；但是后续Cangjie扩展，可能返回null\n   */\n  public getLastText(): Text | null {\n    if (this.isText()) {\n      return this;\n    }\n    if (!this.isElement() || !this.nodes.length) {\n      return null;\n    }\n    return this.nodes[this.nodes.length - 1].getLastText();\n  }\n\n  public abstract toJSON(options?: SerializeOptions): any;\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport equal from 'fast-deep-equal';\nimport ImmutableRecord from './immutableRecord';\nimport Data from '../interfaces/data';\nimport { Serializable } from '../interfaces/serializable';\n\nexport interface MarkProperties<D extends Data = Data> {\n  type: string;\n  data?: D;\n}\n\nexport interface MarkJSON<D extends Data = Data> {\n  klass?: 'mark';\n  type: string;\n  data?: D;\n}\n\nexport default class Mark<D extends Data = Data> extends ImmutableRecord\n  implements Serializable<MarkJSON<D>> {\n  static create<SD extends Data = Data>(properties: Mark<SD> | MarkProperties<SD> | string): Mark<SD> {\n    if (Mark.isMark(properties)) {\n      return properties;\n    }\n\n    let props = properties;\n    if (typeof props === 'string') {\n      props = { type: props };\n    }\n    if (isPlainObject(props)) {\n      const { type, data = {} as SD } = props;\n\n      if (typeof type !== 'string') {\n        throw new Error('`Mark.fromJS` requires a `type` string.');\n      }\n\n      return new Mark<SD>({\n        type,\n        data,\n      });\n    }\n\n    throw new Error(\n      `\\`Mark.create\\` only accepts objects, strings or marks, but you passed it: ${properties}`,\n    );\n  }\n\n  static fromJSON(json: MarkJSON) {\n    return Mark.create(json);\n  }\n\n  static isMark(maybeMark: any): maybeMark is Mark {\n    return maybeMark instanceof Mark;\n  }\n\n  protected constructor(props: Required<MarkProperties<D>>) {\n    super();\n    const { type, data } = props;\n    this.type = type;\n    this.data = { ...data };\n    this.freeze();\n  }\n\n  public readonly type: string;\n\n  public readonly data: D;\n\n  public merge(props: Partial<MarkProperties<D>>) {\n    return new Mark<D>({\n      type: this.type,\n      data: this.data,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof MarkProperties<D>>(\n    key: T,\n    value: Required<MarkProperties<D>>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public isEqual(mark?: Mark): boolean {\n    return equal(this, mark);\n  }\n\n  public toJSON(): MarkJSON<D> {\n    return {\n      klass: 'mark',\n      type: this.type,\n      data: { ...this.data },\n    };\n  }\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport equal from 'fast-deep-equal';\n\ntype Func<T> = (a: T) => boolean;\n\nexport default {\n  skipUntil<T>(as: T[], func: Func<T>) {\n    const index = as.findIndex((a) => func(a));\n    if (index === -1) {\n      return [];\n    }\n    return as.slice(index);\n  },\n  takeUntil<T>(as: T[], func: Func<T>) {\n    const index = as.findIndex((a) => func(a));\n    if (index === -1) {\n      return as.slice();\n    }\n    return as.slice(0, index);\n  },\n  hasSameMembers<T, P>(a: T[], b: P[]) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.length === 0 || a.every((aElem) => !!b.find((bElem) => equal(aElem, bElem)));\n  },\n};\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport equal from 'fast-deep-equal';\nimport isPlainObject from 'is-plain-object';\nimport ImmutableRecord from './immutableRecord';\nimport Mark, { MarkJSON } from './mark';\nimport { Serializable } from '../interfaces/serializable';\nimport listUtils from '../utils/listUtils';\n\nfunction has<T>(as: T[], b: T) {\n  return as.some((a) => equal(a, b));\n}\n\nfunction union<T>(as: T[], bs: T[]) {\n  return bs.reduce((merged, b) => {\n    if (has(merged, b)) {\n      return merged;\n    }\n    return [...merged, b];\n  }, as);\n}\n\nfunction except<T>(as: T[], bs: T[]) {\n  return as.filter((a) => !has(bs, a));\n}\n\nexport interface LeafProperties {\n  text: string;\n  marks?: Mark[];\n}\n\nexport interface LeafJSON {\n  klass?: 'leaf';\n  key?: string;\n  text: string;\n  marks?: MarkJSON[];\n}\n\nexport default class Leaf extends ImmutableRecord\n  implements Serializable<LeafJSON> {\n  static create(properties: Leaf | LeafProperties | string = ''): Leaf {\n    if (Leaf.isLeaf(properties)) {\n      return properties;\n    }\n\n    let props = properties;\n    if (typeof props === 'string') {\n      props = { text: props };\n    }\n\n    if (isPlainObject(props)) {\n      const { text = '', marks = [] } = props;\n      return new Leaf({\n        text,\n        marks: marks.map(Mark.create),\n      });\n    }\n\n    throw new Error(\n      `\\`Leaf.create\\` only accepts objects, strings or leaves, but you passed it: ${properties}`,\n    );\n  }\n\n  static fromJSON(json: LeafJSON) {\n    const { marks } = json;\n    return Leaf.create({\n      ...json,\n      marks: marks ? marks.map(Mark.fromJSON) : undefined,\n    });\n  }\n\n  static isLeaf(maybeLeaf: any): maybeLeaf is Leaf {\n    return maybeLeaf instanceof Leaf;\n  }\n\n  /**\n   * 对leaves进行normalize，并返回新Leafs\n   */\n  static normalizeLeaves(leaves: Leaf[]) {\n    if (leaves.length === 0) {\n      return [Leaf.create()];\n    }\n    if (leaves.length === 1) {\n      return leaves;\n    }\n\n    let invalid = false;\n    const normalized = leaves.reduceRight((ls: Leaf[], leaf) => {\n      const next = ls[0];\n      if (!next) {\n        return [leaf];\n      }\n\n      if (listUtils.hasSameMembers(leaf.marks, next.marks)) {\n        invalid = true;\n        ls[0] = next.set('text', `${leaf.text}${next.text}`);\n        return ls;\n      }\n\n      if (next.text === '') {\n        invalid = true;\n        ls[0] = leaf;\n        return ls;\n      }\n\n      if (leaf.text === '') {\n        invalid = true;\n        return ls;\n      }\n      ls.unshift(leaf);\n      return ls;\n    }, []);\n\n    if (!invalid) {\n      return leaves;\n    }\n    return normalized;\n  }\n\n  /**\n   * 对leaves执行split操作。\n   * @offset text的偏移量，如果位于某一个leaf内部，则分割该leaf\n   */\n  static splitLeaves(leaves: Leaf[], offset: number): [Leaf[], Leaf[]] {\n    if (offset < 0) {\n      return [[], leaves];\n    }\n\n    if (leaves.length === 0) {\n      return [[], []];\n    }\n\n    let endOffset = 0;\n    let left: Leaf | undefined;\n    let right: Leaf | undefined;\n    const index = leaves.findIndex((leaf) => {\n      const startOffset = endOffset;\n      const { text } = leaf;\n      endOffset += text.length;\n\n      if (endOffset < offset) {\n        return false;\n      }\n      if (startOffset > offset) {\n        return false;\n      }\n\n      const length = offset - startOffset;\n      if (typeof text.slice !== 'function') {\n        throw new Error(`Unable to split leaf with text: ${text}`);\n      }\n      left = leaf.set('text', text.slice(0, length));\n      right = leaf.set('text', text.slice(length));\n      return true;\n    });\n\n    if (!left || !right) {\n      // Same as `!left && !right`\n      return [leaves, []];\n    }\n\n    if (left.text === '') {\n      if (index === 0) {\n        return [[left], leaves];\n      }\n\n      return [leaves.slice(0, index), leaves.slice(index)];\n    }\n\n    if (right.text === '') {\n      if (index === leaves.length - 1) {\n        return [leaves, [right]];\n      }\n\n      const splittedIndex = index + 1;\n      return [leaves.slice(0, splittedIndex), leaves.slice(splittedIndex)];\n    }\n\n    return [\n      [...leaves.slice(0, index), left],\n      [right, ...leaves.slice(index + 1)],\n    ];\n  }\n\n  /**\n   * 在leaves中搜索第offset个字符对应的位置\n   */\n  static searchLeafAtOffset(leaves: Leaf[], offset: number) {\n    let startOffset = 0;\n    let endOffset = 0;\n    const index = leaves.findIndex((leaf) => {\n      startOffset = endOffset;\n      endOffset = startOffset + leaf.text.length;\n      return endOffset >= offset;\n    });\n\n    const found = index !== -1;\n    if (!found) {\n      return null;\n    }\n\n    return {\n      index,\n      leaf: leaves[index],\n      startOffset,\n      endOffset,\n    };\n  }\n\n  protected constructor(props: Required<LeafProperties>) {\n    super();\n    const { text, marks } = props;\n    this.text = text;\n    this.marks = marks;\n    this.freeze();\n  }\n\n  public readonly text: string;\n\n  public readonly marks: Mark[];\n\n  public merge(props: Partial<LeafProperties>) {\n    return new Leaf({\n      text: this.text,\n      marks: this.marks,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof LeafProperties>(\n    key: T,\n    value: Required<LeafProperties>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  /**\n   * 拷贝一个新Leaf，并把Mark加上去\n   */\n  public addMark(mark: Mark) {\n    return this.set('marks', union(this.marks, [mark]));\n  }\n\n  /**\n   * 拷贝一个新Leaf，并把Marks加上去\n   */\n  public addMarks(marks: Mark[]) {\n    return this.set('marks', union(this.marks, marks));\n  }\n\n  /**\n   * 拷贝一个新Leaf，并把Mark过滤掉\n   */\n  public removeMark(mark: Mark) {\n    return this.set('marks', except(this.marks, [mark]));\n  }\n\n  /**\n   * 拷贝一个新Leaf，并把Mark替换掉\n   * 如果mark不存在、mark和新mark相等，则返回当前的Leaf\n   */\n  public setMark(mark: Mark, newMark: Mark) {\n    if (equal(mark, newMark)) {\n      return this;\n    }\n\n    const { marks } = this;\n    if (!has(marks, mark)) {\n      return this;\n    }\n\n    const newMarks = marks.map((m) => (equal(m, mark) ? newMark : mark));\n    return this.set('marks', newMarks);\n  }\n\n  public toJSON(): LeafJSON {\n    return {\n      klass: 'leaf',\n      text: this.text,\n      marks: this.marks.map((mark) => mark.toJSON()),\n    };\n  }\n}\n","/**\n * @packageDocumentation\n * @module keyUtils\n */\n\n/**\n * cangjie key 生成逻辑，默认从 0 开始递增。\n *\n * key 在多版本、多实例 cangjie 嵌套时，保持全局唯一\n */\n\nlet localCount = 0;\n\nconst cangjieKeyGen = '__cangjieKeyGen';\nconst hasWindow = typeof window === 'object';\nif (hasWindow && !window[cangjieKeyGen]) {\n  window[cangjieKeyGen] = 0;\n}\n\nconst keyUtils = {\n  create() {\n    if (hasWindow) {\n      const keyStr = `${window[cangjieKeyGen]}`;\n      window[cangjieKeyGen] = window[cangjieKeyGen] + 1;\n      return keyStr;\n    }\n    const keyStr = `${localCount}`;\n    localCount = localCount + 1;\n    return keyStr;\n  },\n\n  parse(key: string): [string, number] {\n    const [k, o] = key.split(':');\n    return [k, parseInt(o, 10)];\n  },\n\n  resetGenerator() {\n    if (hasWindow) {\n      window[cangjieKeyGen] = 0;\n    }\n    localCount = 0;\n  },\n};\n\nexport default keyUtils;\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport equal from 'fast-deep-equal';\n\ntype EqualFunc<T> = (a: T, b: T) => boolean;\n\nexport default {\n  add<T>(as: T[], b: T) {\n    const index = as.findIndex(a => equal(a, b));\n    const newAs = [...as];\n    if (index !== -1) {\n      newAs.splice(index, 1);\n    }\n    newAs.push(b);\n    return newAs;\n  },\n\n  remove<T>(as: T[], b: T) {\n    return as.filter(a => !equal(a, b));\n  },\n\n  has<T>(as: T[], b: T, isEqual: EqualFunc<T> = equal) {\n    return as.some((a) => isEqual(a, b));\n  },\n\n  intersect<T>(as: T[], bs: T[]) {\n    return as.filter((a => bs.some(b => equal(a, b))));\n  },\n\n  union<T>(as: T[], bs: T[], isEqual: EqualFunc<T> = equal) {\n    return bs.reduce((merged, b) => {\n      if (this.has(merged, b, isEqual)) {\n        return merged;\n      }\n      merged.push(b);\n      return merged;\n    }, [...as]);\n  },\n\n  removeDuplicate<T>(as: T[]) {\n    return as.filter((a, index) => \n      index === as.findIndex(b => equal(b, a))\n    );\n  },\n\n  isSuperSet(as: any[], bs: any[]) {\n    return bs.every(b => as.findIndex(a => equal(a, b)) !== -1)\n  },\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport Decoration from './decoration';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Element from './element';\nimport Node, { NodeProperties } from './node';\nimport Leaf, { LeafJSON } from './leaf';\nimport Mark, { MarkProperties } from './mark';\nimport { Serializable, SerializeOptions } from '../interfaces/serializable';\nimport keyUtils from '../utils/keyUtils';\nimport setUtils from '../utils/setUtils';\nimport listUtils from '../utils/listUtils';\n\nconst SUPRESS_NORMALIZE = { normalize: false };\nconst TEXTS = new WeakMap<Text, string>();\n\ntype TextChildren = Leaf[];\n\nexport interface TextProperties extends NodeProperties {\n  leaves?: TextChildren;\n}\n\nexport interface TextJSON {\n  klass: 'text';\n  key?: string;\n  leaves: LeafJSON[];\n}\n\nexport default class Text extends Node\n  implements Serializable<TextJSON> {\n  static create(properties: Text | TextProperties | string = ''): Text {\n    if (Text.isText(properties)) {\n      return properties;\n    }\n\n    let props = properties;\n    if (typeof props === 'string') {\n      props = { leaves: [Leaf.create(props)] };\n    }\n    if (isPlainObject(props)) {\n      const { key = keyUtils.create(), leaves = [] } = props;\n      return new Text({\n        key,\n        leaves: leaves.map(Leaf.create),\n      });\n    }\n\n    throw new Error(\n      `\\`Text.create\\` only accepts objects, strings or texts, but you passed it: ${properties}`,\n    );\n  }\n\n  static fromJSON(json: TextJSON) {\n    return Text.create({\n      ...json,\n      leaves: json.leaves.map(Leaf.fromJSON),\n    });\n  }\n\n  static isText(maybeText: any): maybeText is Text {\n    return maybeText instanceof Text;\n  }\n\n  static isEmptyText(maybeText: any): maybeText is Text {\n    return maybeText instanceof Text && !maybeText.text;\n  }\n\n  static isTextList(maybeTextList: any): maybeTextList is Text[] {\n    return Array.isArray(maybeTextList) && maybeTextList.every(Text.isText);\n  }\n\n  protected constructor(props: Required<TextProperties>, options = { normalize: true }) {\n    super(props);\n    const { leaves } = props;\n    this.leaves = options.normalize ? Leaf.normalizeLeaves(leaves) : leaves;\n    this.freeze();\n  }\n\n  public readonly leaves: TextChildren;\n\n  /**\n   * 获取对应的文本string\n   */\n  public get text() {\n    if (process.env.NODE_ENV !== 'test' && TEXTS.has(this)) {\n      return TEXTS.get(this)!;\n    }\n    const t = this.leaves.map(({ text }) => text).join('');\n    TEXTS.set(this, t);\n    return t;\n  }\n\n  /**\n   * 获取所有的marks\n   */\n  public get marks() {\n    return this.getMarks();\n  }\n\n  /**\n   * 获取自身树下的所有 Text 节点\n   * 如果自身是 Text，则返回只含有自身的数组\n   */\n  public getTexts(): Text[] {\n    return [this];\n  }\n\n  public merge(props: Partial<TextProperties>) {\n    return new Text({\n      key: this.key,\n      leaves: this.leaves,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof TextProperties>(\n    key: T,\n    value: Required<TextProperties>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public regenerateKey() {\n    return this.set('key', keyUtils.create());\n  }\n\n  public getLeaves(decorations?: Decoration[]) {\n    if (!decorations || decorations.length === 0) {\n      return this.leaves;\n    }\n    if (this.leaves.length === 0) {\n      const marks = decorations.map(({ mark }) => mark);\n      const leaf = Leaf.create({ text: '', marks });\n      return [leaf];\n    }\n    if (this.text.length === 0) {\n      const firstLeaf = this.leaves[0];\n      const marks = decorations.map((d) => d.mark);\n      return [firstLeaf.addMarks(marks)];\n    }\n\n    const { key, text } = this;\n    let { leaves } = this;\n    decorations.forEach((dec) => {\n      const { start, end, mark } = dec;\n      const hasStart = start.key === key;\n      const hasEnd = end.key === key;\n      if (hasStart || hasEnd) {\n        const index = hasStart ? start.offset : 0;\n        const length = hasEnd ? end.offset - index : text.length - index;\n        if (length < 1) {\n          return;\n        }\n        if (index >= text.length) {\n          return;\n        }\n        if (index !== 0 || length < text.length) {\n          const [before, bundle] = Leaf.splitLeaves(leaves, index);\n          const [middle, after] = Leaf.splitLeaves(bundle, length);\n          leaves = before.concat(\n            middle.map((l) => l.addMark(mark)),\n            after,\n          );\n          return;\n        }\n      }\n      leaves = leaves.map((l) => l.addMark(mark));\n    });\n\n    if (leaves === this.leaves) {\n      return leaves;\n    }\n    return Leaf.normalizeLeaves(leaves);\n  }\n\n  /**\n   * 获取所有的marks\n   */\n  public getMarks() {\n    if (this.leaves.length === 0) {\n      return [];\n    }\n\n    return this.leaves.reduce<Mark[]>(\n      (marks, leaf) => setUtils.union(marks, leaf.marks),\n      [],\n    );\n  }\n\n  /**\n   * 获取text内所有文字都有的，公共marks\n   */\n  public getActiveMarks() {\n    if (this.leaves.length === 0) {\n      return [];\n    }\n\n    const firstMarks = this.leaves[0].marks;\n    if (firstMarks.length === 0) {\n      return firstMarks;\n    }\n\n    return this.leaves\n      .slice(1)\n      .reduce(\n        (marks, leaf) => setUtils.intersect(marks, leaf.marks),\n        firstMarks,\n      );\n  }\n\n  /**\n   * 根据offset区间，获取marks\n   */\n  public getMarksBetweenOffsets(startOffset: number, endOffset: number) {\n    if (startOffset <= 0 && endOffset >= this.text.length) {\n      return this.getMarks();\n    }\n\n    if (startOffset >= endOffset) return [];\n    // For empty text in a paragraph, use getActiveMarks;\n    if (this.text === '') return this.getActiveMarks();\n\n    let result: Mark[] | null = null;\n    let leafEnd = 0;\n    this.leaves.forEach((leaf) => {\n      const leafStart = leafEnd;\n      leafEnd = leafStart + leaf.text.length;\n\n      if (leafEnd <= startOffset) return;\n      if (leafStart >= endOffset) return;\n\n      if (!result) {\n        result = leaf.marks;\n        return;\n      }\n\n      result = setUtils.union(result, leaf.marks);\n    });\n\n    return result || [];\n  }\n\n  /**\n   * 根据offset区间，获取区间内所有文字都含有的，公共marks\n   */\n  public getActiveMarksBetweenOffsets(startOffset: number, endOffset: number) {\n    if (startOffset <= 0 && endOffset >= this.text.length) {\n      return this.getActiveMarks();\n    }\n\n    if (startOffset >= endOffset) return [];\n    // For empty text in a paragraph, use getActiveMarks;\n    if (this.text === '') return this.getActiveMarks();\n\n    let result: Mark[] = [];\n    let leafEnd = 0;\n    let foundNoMarks = false;\n\n    this.leaves.forEach((leaf) => {\n      const leafStart = leafEnd;\n      leafEnd = leafStart + leaf.text.length;\n\n      if (leafEnd <= startOffset) return;\n      if (leafStart >= endOffset) return;\n\n      foundNoMarks = foundNoMarks || !leaf.marks.length;\n      if (!result.length) {\n        result = leaf.marks;\n        return;\n      }\n\n      result = setUtils.intersect(result, leaf.marks);\n    });\n\n    if (foundNoMarks && result.length) {\n      // aaaBBB: a has no marks, B has marks, so they have no intersected marks\n      result = [];\n    }\n\n    return result || [];\n  }\n\n  /**\n   * 获取第index个文字，对应的marks\n   */\n  public getMarksAtIndex(index: number) {\n    const leafObj = Leaf.searchLeafAtOffset(this.leaves, index);\n    return !leafObj ? [] : leafObj.leaf.marks;\n  }\n\n  /**\n   * 拷贝出一个新的text节点，并在指定的位置添加mark\n   * 如果offset不合法，则返回自身\n   */\n  public addMark(offset: number, length: number, mark: Mark) {\n    return this.addMarks(offset, length, [mark]);\n  }\n\n  /**\n   * 拷贝出一个新的text节点，并在指定的位置添加marks。\n   * 如果marks是0，或者offset不合法，则返回自身\n   */\n  public addMarks(offset: number, length: number, marks: Mark[]) {\n    if (this.text === '' && offset === 0) {\n      const { leaves } = this;\n      const first = leaves[0];\n      if (!first) {\n        return this.set('leaves', [Leaf.create({ text: '', marks })]);\n      }\n\n      const newFirst = first.addMarks(marks);\n      if (newFirst === first) {\n        return this;\n      }\n      return this.set('leaves', [newFirst]);\n    }\n\n    if (length === 0 || offset >= this.text.length) {\n      return this;\n    }\n\n    const [before, bundle] = Leaf.splitLeaves(this.leaves, offset);\n    const [middle, after] = Leaf.splitLeaves(bundle, length);\n    return this.set('leaves', [\n      ...before,\n      ...middle.map((leaf) => leaf.addMarks(marks)),\n      ...after,\n    ]);\n  }\n\n  /**\n   * 拷贝出一个新的text节点，并在指定的位置过滤掉对应的mark\n   * 如果当前没有这个mark，或者offset不合法，则返回自身\n   */\n  public removeMark(offset: number, length: number, mark: Mark) {\n    if (this.text === '' && offset === 0) {\n      const { leaves } = this;\n      const first = leaves[0];\n      if (!first) {\n        return this;\n      }\n\n      const newFirst = first.removeMark(mark);\n      if (newFirst === first) {\n        return this;\n      }\n      return this.set('leaves', [newFirst]);\n    }\n\n    if (length === 0 || offset >= this.text.length) {\n      return this;\n    }\n\n    const [before, bundle] = Leaf.splitLeaves(this.leaves, offset);\n    const [middle, after] = Leaf.splitLeaves(bundle, length);\n    return this.set('leaves', [\n      ...before,\n      ...middle.map((leaf) => leaf.removeMark(mark)),\n      ...after,\n    ]);\n  }\n\n  /**\n   * 在指定的区间，设置一个新的Mark\n   * 如果指定区间不合法，或者区间内已经存在同样的mark，则返回自身\n   */\n  public setMark(\n    offset: number,\n    length: number,\n    mark: Mark,\n    properties: Partial<MarkProperties>,\n  ) {\n    const newMark = mark.merge(properties);\n\n    if (this.text === '' && offset === 0 && length === 0) {\n      const { leaves } = this;\n      const first = leaves[0];\n      if (!first) {\n        return this;\n      }\n\n      const newFirst = first.setMark(mark, newMark);\n      if (newFirst === first) {\n        return this;\n      }\n      return this.set('leaves', [newFirst]);\n    }\n\n    if (length === 0 || offset >= this.text.length) {\n      return this;\n    }\n\n    const [before, bundle] = Leaf.splitLeaves(this.leaves, offset);\n    const [middle, after] = Leaf.splitLeaves(bundle, length);\n    return this.set('leaves', [\n      ...before,\n      ...middle.map((leaf) => leaf.setMark(mark, newMark)),\n      ...after,\n    ]);\n  }\n\n  /**\n   * 复制出一个新的text，并在指定的位置，插入对应的文字和marks\n   */\n  public insertText(offset: number, text: string, marks: Mark[] = []) {\n    if (this.text === '') {\n      return this.set('leaves', [Leaf.create({ text, marks })]);\n    }\n    if (text.length === 0) {\n      return this;\n    }\n\n    const { leaves } = this;\n    const leafObj = Leaf.searchLeafAtOffset(\n      leaves,\n      offset,\n    );\n    if (!leafObj) {\n      throw new Error(`Text.insertText, could not find leaf with offset: ${offset}`);\n    }\n    const { index, leaf, startOffset } = leafObj;\n    const delta = offset - startOffset;\n    const beforeText = leaf.text.slice(0, delta);\n    const afterText = leaf.text.slice(delta);\n\n    const newLeaves = [...leaves];\n    if (listUtils.hasSameMembers(leaf.marks, marks)) {\n      const newLeaf = leaf.set('text', beforeText + text + afterText);\n      newLeaves[index] = newLeaf;\n      return this.set('leaves', newLeaves);\n    }\n    newLeaves.splice(\n      index,\n      1,\n      leaf.set('text', beforeText),\n      Leaf.create({ text, marks }),\n      leaf.set('text', afterText),\n    );\n    return this.set('leaves', newLeaves);\n  }\n\n  /**\n   * 在指定的位置，删掉指定的text长度的文字\n   * 本杰：TODO: check whether deleted text is same as text?\n   */\n  public removeText(offset: number, text: string) {\n    if (text.length === 0 || offset >= this.text.length) {\n      return this;\n    }\n\n    // PERF: For simple backspace, we can operate directly on the leaf\n    if (text.length === 1) {\n      const leafObj = Leaf.searchLeafAtOffset(\n        this.leaves,\n        offset + 1,\n      );\n      if (!leafObj) {\n        throw new Error(`Text.removeText, could not find leaf with offset: ${offset}`);\n      }\n      const { index, leaf, startOffset } = leafObj;\n      const newLeaves = [...this.leaves];\n\n      if (leaf.text.length === 1) {\n        if (newLeaves.length === 1) {\n          // keep marks when delete the last leaf\n          newLeaves[0] = Leaf.create({\n            text: '',\n            marks: leaf.marks,\n          });\n        } else {\n          newLeaves.splice(index, 1);\n        }\n        // PERF: Avoid normalizing twice for normalized `leaves`.\n        return new Text(\n          { key: this.key, leaves: newLeaves },\n          SUPRESS_NORMALIZE,\n        );\n      }\n\n      const delta = offset - startOffset;\n      const beforeText = leaf.text.slice(0, delta);\n      const afterText = leaf.text.slice(delta + text.length);\n      const newText = beforeText + afterText;\n      newLeaves[index] = leaf.set('text', newText);\n      return new Text(\n        { key: this.key, leaves: newLeaves},\n        SUPRESS_NORMALIZE,\n      );\n    }\n\n    const [before, bundle] = Leaf.splitLeaves(this.leaves, offset);\n    const after = Leaf.splitLeaves(bundle, text.length)[1];\n    // PERF: reduce `leaves` to be normalized.\n    const middle = Leaf.normalizeLeaves([...before.slice(-1), ...after.slice(0, 1)]);\n    const leaves = [\n      ...before.slice(0, -1),\n      ...middle,\n      ...after.slice(1),\n    ];\n\n    if (leaves.length === 1) {\n      const first = leaves[0];\n      if (first.text === '') {\n        return new Text(\n          { key: this.key, leaves: [first.set('marks', this.getActiveMarks())] },\n          SUPRESS_NORMALIZE,\n        );\n      }\n    }\n\n    return new Text(\n      { key: this.key, leaves },\n      SUPRESS_NORMALIZE,\n    );\n  }\n\n  /**\n   * 拷贝出一个新的text，并把传入的text的leaves添加上去\n   */\n  public mergeText(other: Text) {\n    const leaves = this.leaves.concat(other.leaves);\n    return this.set('leaves', leaves);\n  }\n\n  /**\n   * 在指定的位置做一个split，返回split后的两个text\n   */\n  public splitText(position: number) {\n    const [befores, afters] = Leaf.splitLeaves(this.leaves, position);\n    const a = this.set('leaves', befores);\n    const b = this.set('leaves', afters).regenerateKey();\n    return [a, b];\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    const object: TextJSON = {\n      klass: 'text',\n      leaves: this.leaves.map((leaf) => leaf.toJSON()),\n    };\n    if (options?.preserveKeys) {\n      object.key = this.key;\n    }\n    return object;\n  }\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport equal from 'fast-deep-equal';\nimport Operation, {\n  MergeNodeOperation,\n  MoveNodeOperation,\n  SplitNodeOperation,\n} from './operation';\n\n/**\n * @ignore\n */\nexport type PathJSON = number[];\n\nexport default class Path extends Array<number> {\n  /**\n   * Compare priority between `path` and `target`:\n   *\n   * - if `path` is before `target`, return -1\n   * - if `path` is after `target`, return 1\n   * - if `path` is equal to `target`, return 0\n   * - else if something went wrong, return null\n   *\n   * @param path - path\n   * @param target - target path\n   *\n   * # Example\n   *\n   * ```ts\n   * Path.compare([1,0], [1,0])     // 0\n   * Path.compare([1,1,1], [1,0])   // 1\n   * Path.compare([1,0,0,1], [1,1]) // -1\n   * ```\n   */\n  static compare(path: Path, target: Path) {\n    const m = Math.min(path.length, target.length);\n\n    for (let i = 0; i < m; i += 1) {\n      const pv = path[i];\n      const tv = target[i];\n\n      // If the path's value is ever less than the target's, it's before.\n      if (pv < tv) {\n        return -1;\n      }\n\n      // If the target's value is ever less than the path's, it's after.\n      if (pv > tv) {\n        return 1;\n      }\n    }\n\n    // Paths should now be equal, otherwise something is wrong\n    return path.length === target.length ? 0 : null;\n  }\n\n  /**\n   * Crop `a` and `b` into the same size.\n   *\n   * @param a\n   * @param b\n   * @param size - crop size, default is the shortest between a and b\n   *\n   * # Example\n   *\n   * ```ts\n   * Path.crop([1,1,0], [1,1])    // [1,1]\n   * Path.crop([1,1,0], [1,1], 1) // [1]\n   * ```\n   */\n  static crop(a: Path, b: Path, size = Math.min(a.length, b.length)) {\n    const ca: Path = a.slice(0, size);\n    const cb: Path = b.slice(0, size);\n    return [ca, cb];\n  }\n\n  /**\n   * Decrement a `path` by `n` at `index`.\n   *\n   * @param path\n   * @param n - default is 1\n   * @param index - default is the last index\n   *\n   * # Example\n   *\n   * ```ts\n   * Path.decrement([1,1,1])       // [1,1,0]\n   * Path.decrement([1,1,3], 2)    // [1,1,1]\n   * Path.decrement([1,1,3], 1, 1) // [1,0,3]\n   * ```\n   */\n  static decrement(path: Path, n = 1, index = path.length - 1) {\n    return Path.increment(path, 0 - n, index);\n  }\n\n  /**\n   * Increment a `path` by `n` at `index`.\n   *\n   * @param path\n   * @param n - default is 1\n   * @param index - default is the last index\n   *\n   * # Example\n   *\n   * ```ts\n   * Path.increment([1,1,1])       // [1,1,2]\n   * Path.increment([1,1,1], 2)    // [1,1,3]\n   * Path.increment([1,1,1], 2, 1) // [1,3,1]\n   * ```\n   */\n  static increment(path: Path, n = 1, index = path.length - 1) {\n    const newPath: Path = [...path];\n    newPath[index] += n;\n    return newPath;\n  }\n\n  /**\n   * Link the `subPath` to the `ancestor`.\n   *\n   * @param ancestor\n   * @param subPath\n   *\n   * # Example\n   *\n   * ```ts\n   * Path.link([1,0], [1]) // [1,0,1]\n   * ```\n   */\n  static link(ancestor: Path, subPath: Path) {\n    return ancestor.concat(subPath);\n  }\n\n  /**\n   * If the `path` is the ancestor of the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *     [0]   [1]\n   *    /  \\\n   * [0,0]  [0,1]\n   * ```\n   *\n   * ```ts\n   * Path.isAncestor([], [0,0])  // true\n   * Path.isAncestor([0], [0,0]) // true\n   * ```\n   */\n  static isAncestor(path: Path, target: Path) {\n    const [p, t] = Path.crop(path, target);\n    return path.length < target.length && Path.isEqual(p, t);\n  }\n\n  /**\n   * If the `path` is descendant of the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]   [1]\n   *         __/ | \\__\n   *    [1,0]  [1,1]  [1,2]\n   *      /\n   *   [1,0,0]\n   * ```\n   *\n   * ```ts\n   * Path.isDescendant([1,0], [1]) // true\n   * Path.isDescendant([1], [])   // true\n   * ```\n   */\n  static isDescendant(path: Path, target: Path) {\n    return (\n      path.length > target.length &&\n      Path.isEqual(path.slice(0, target.length), target)\n    );\n  }\n\n  /**\n   * If the `path` is before the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        / \\\n   *      [0] [1]\n   *         /  \\\n   *    [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.isBefore([0], [1,1])   // true\n   * Path.isBefore([1,0], [1,1]) // true\n   * ```\n   */\n  static isBefore(path: Path, target: Path) {\n    const [p, t] = Path.crop(path, target);\n    return Path.compare(p, t) === -1;\n  }\n\n  /**\n   * If the `path` is after the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *     [0]   [1]\n   *          /  \\\n   *     [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.isAfter([1], [0])   // true\n   * Path.isAfter([1,0], [0]) // true\n   * ```\n   */\n  static isAfter(path: Path, target: Path) {\n    const [p, t] = Path.crop(path, target);\n    return Path.compare(p, t) === 1;\n  }\n\n  /**\n   * If the `path` is equal to `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * ```ts\n   * Path.isEqual([], [])       // true\n   * Path.isEqual([1,0], [1,0]) // true\n   * Path.isEqual([0], [1])     // false\n   * ```\n   */\n  static isEqual(path: Path, target: Path) {\n    return equal(path, target);\n  }\n\n  /**\n   * If the `path` is the sibling of the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]   [1]\n   *         __/ | \\__\n   *    [1,0]  [1,1]  [1,2]\n   * ```\n   *\n   * ```ts\n   * Path.isSibling([1,0], [1,1]) // true\n   * Path.isSibling([1,2], [1,1]) // true\n   * ```\n   */\n  static isSibling(path: Path, target: Path) {\n    if (path.length !== target.length) {\n      return false;\n    }\n    const p = Path.parent(path);\n    const t = Path.parent(target);\n    return Path.isEqual(p, t) && path[path.length - 1] !== target[path.length - 1];\n  }\n\n  /**\n   * If the `path` is the previous sibling of the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]   [1]\n   *         __/ | \\__\n   *    [1,0]  [1,1]  [1,2]\n   * ```\n   *\n   * ```ts\n   * Path.isPrevSibling([0], [1]) // true\n   * Path.isPrevsSibling([1,1], [1,2]) // true\n   * Path.isPrevsSibling([0], [1,2]) // false\n   * ```\n   */\n  static isPrevSibling(path: Path, target: Path) {\n    return Path.isSibling(path, target) && Path.isBefore(path, target);\n  }\n\n  /**\n   * If the `path` is younger than the `target`.It means at the level which `path` lives, the `path` is ends before `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        / \\\n   *     [0]   [1]\n   *        __/ | \\__\n   *   [1,0]  [1,1]  [1,2]\n   *          /   \\\n   *   [1,1,0]   [1,1,1]\n   * ```\n   *\n   * ```ts\n   * Path.isYounger([1,1,0], [1,1,1]) // true\n   * Path.isYounger([1,0], [1,1,1])   // true\n   * Path.isYounger([0], [1,1,1])     // true\n   * ```\n   */\n  static isYounger(path: Path, target: Path) {\n    const index = path.length - 1;\n    const [p, t] = Path.crop(path, target, index);\n    const pl = path[index];\n    const tl = target[index];\n\n    return Path.isEqual(p, t) && pl < tl;\n  }\n\n  /**\n   * If the `path` is deeper than the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]  [1]\n   *           /  \\\n   *      [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.isDeeper([1,0], [1]) // true\n   * Path.isDeeper([1,0], [])  // true\n   * ```\n   */\n  static isDeeper(path: Path, target: Path) {\n    return path.length > target.length;\n  }\n\n  /**\n   * If the `path` is parent of the `target`.\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *        []\n   *       / \\\n   *    [0]  [1]\n   *         /  \\\n   *    [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.isParent([1], [1,0]) // true\n   * Path.isParent([], [1])    // true\n   * ```\n   */\n  static isParent(path: Path, target: Path) {\n    return (\n      path.length + 1 === target.length &&\n      Path.isEqual(path, Path.parent(target))\n    );\n  }\n\n  /**\n   * If the `path` is child of the `target`\n   *\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]  [1]\n   *          /  \\\n   *     [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.isChild([1,0], [1]) // true\n   * ```\n   */\n  static isChild(path: Path, target: Path) {\n    return (\n      path.length === target.length + 1 &&\n      Path.isEqual(path.slice(0, -1), target)\n    );\n  }\n\n  /**\n   * Get the next sibiling of the `path`.\n   *\n   * @param path\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]  [1]\n   *          /  \\\n   *     [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.next([1,0]) // [1,1]\n   * Path.next([])    // null\n   * ```\n   */\n  static next(path: Path) {\n    if (path.length === 0) {\n      return null;\n    }\n\n    const last = path[path.length - 1];\n    return path.slice(0, -1).concat(last + 1);\n  }\n\n  /**\n   * Get the previous sibiling of the `path`.\n   *\n   * @param path\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]  [1]\n   *          /  \\\n   *     [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.previous([1,1]) // [1,0]\n   * Path.previous([])    // null\n   * Path.previous([1,0]) // null\n   * ```\n   */\n  static previous(path: Path) {\n    if (path.length === 0) {\n      return null;\n    }\n\n    const last = path[path.length - 1];\n    if (last <= 0) {\n      return null;\n    }\n    return path.slice(0, -1).concat(last - 1);\n  }\n\n  /**\n   * Get the parent path of the `path`,\n   * Note: the parent of root is still root.\n   *\n   * @param path\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   * ```txt\n   *         []\n   *        /  \\\n   *      [0]  [1]\n   *          /  \\\n   *     [1,0]   [1,1]\n   * ```\n   *\n   * ```ts\n   * Path.parent([1,0]) // [1]\n   * Path.parent([0])   // []\n   * Path.parent([])    // []\n   * ```\n   */\n  static parent(path: Path) {\n    return path.slice(0, -1);\n  }\n\n  /**\n   * Get all ancestors of the `path`.\n   *\n   * @param path\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   *```txt\n   *        []\n   *       /  \\\n   *    [0]   [1]\n   *       __/ | \\__\n   *  [1,0]  [1,1]  [1,2]\n   *          /\n   *      [1,1,0]\n   * ```\n   *\n   * ```ts\n   * Path.ancestors([1,1,0]) // [[], [1], [1,1]]\n   * ```\n   */\n  static ancestors(path: Path) {\n    const ancestors: Path[] = [];\n    for (let i = 0; i < path.length; i += 1) {\n      ancestors.push(path.slice(0, i));\n    }\n    return ancestors;\n  }\n\n  /**\n   * Get the common ancestor between `a` and `b`.\n   *\n   * @param a\n   * @param b\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   *```txt\n   *        []\n   *       /  \\\n   *    [0]   [1]\n   *       __/ | \\__\n   *  [1,0]  [1,1]  [1,2]\n   *          /       /\n   *      [1,1,0]  [1,2,0]\n   * ```\n   *\n   * ```ts\n   * Path.common([1,1,0], [1,2,0]) // [1]\n   * ```\n   */\n  static common(a: Path, b: Path) {\n    const path: Path = [];\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < a.length && i < b.length; i++) {\n      const av = a[i];\n      const bv = b[i];\n\n      if (av !== bv) break;\n\n      path.push(av);\n    }\n\n    return path;\n  }\n\n  /**\n   * Get the path of `path` relative to `ancestor`.\n   *\n   * @param a\n   * @param b\n   *\n   * # Example\n   *\n   * Given the document tree:\n   *\n   *```txt\n   *        []\n   *       /  \\\n   *    [0]   [1]\n   *       __/ | \\__\n   *  [1,0]  [1,1]  [1,2]\n   *          /       /\n   *      [1,1,0]  [1,2,0]\n   * ```\n   *\n   * ```ts\n   * Path.relative([1,1,0], [1]) // [1,0]\n   * Path.relative([1,0,0], [0]) // null\n   * ```\n   */\n  static relative(path: Path, ancestor: Path) {\n    if (!Path.isAncestor(ancestor, path) || Path.isEqual(path, ancestor)) {\n      return null;\n    }\n\n    return path.slice(ancestor.length);\n  }\n\n  /**\n   * Transform the `path` based on `operation`.\n   * @param path\n   * @param operation\n   */\n  static transform(path: Path, operation: Operation): Path[] {\n    if (operation.type === 'set_selection') {\n      return [path];\n    }\n\n    const { type, path: p } = operation;\n    if (\n      type === 'add_mark' ||\n      type === 'insert_text' ||\n      type === 'remove_mark' ||\n      type === 'remove_text' ||\n      type === 'set_mark' ||\n      type === 'set_node' ||\n      path.length === 0\n    ) {\n      return [path];\n    }\n\n    const pIndex = p.length - 1;\n    const pEqual = Path.isEqual(p, path);\n    const pYounger = Path.isYounger(p, path);\n    const pAbove = Path.isAncestor(p, path);\n\n    if (type === 'insert_node') {\n      if (pEqual || pYounger || pAbove) {\n        /**\n         * ## Insert at the path\n         *\n         * ```js\n         * path    = [1,0]\n         * op.path = [1,0]\n         * ```\n         *\n         * move path forward at op.path's level           [1,0] --> [1,1]\n         *\n         * ```txt\n         *         []                                               []\n         *      __/ \\__                                          __/ \\__\n         *   [0]       [1]             --- transform -->      [0]       [1]\n         *             /                                                / |\n         *          *[1,0]*                                        [1,0]  *[1,1]*\n         * ```\n         *\n         * ## Insert above the path\n         *\n         * ```js\n         * path    = [1,0]\n         * op.path = [1]\n         * ```\n         *\n         * move path forward at op.path's level           [1,0] --> [2,0]\n         *\n         * ```txt\n         *         []                                               [ ]\n         *      __/ \\__                                          __/ | \\__\n         *   [0]       [1]           --- transform -->        [0]   [1]   [2]\n         *             /                                                  /\n         *         *[1,0]*                                            *[2,0]*\n         * ```\n         *\n         * ## Insert at younger\n         *\n         * ```js\n         * path    = [1]\n         * op.path = [0]\n         * ```\n         *\n         * move path forward at op.path's level           [1] --> [2]\n         *\n         * ```txt\n         *          [ ]                                             [ ]\n         *         /  |                                          __/ | \\__\n         *       [0] *[1]*           --- transform -->        [0]   [1]   *[2]*\n         * ```\n         */\n        return [Path.increment(path, 1, pIndex)];\n      }\n    } else if (type === 'remove_node') {\n      if (pYounger) {\n        /**\n         * ## Remove at younger\n         *\n         * ```js\n         * path    = [1,0]\n         * op.path = [0]\n         * ```\n         *\n         * move path forward at op.path's level           [1,0] --> [0,0]\n         *\n         * ```txt\n         *         []                                               [ ]\n         *      __/ \\__                                          __/ | \\__\n         *   [0]       [1]           --- transform -->        [0]   [1]   [2]\n         *             /                                      /\n         *         *[1,0]*                                 *[0,0]*\n         * ```\n         */\n        return [Path.decrement(path, 1, pIndex)];\n      }\n      if (pEqual || pAbove) {\n        /**\n         * ## Remove at the path\n         *\n         * ```js\n         * path    = [1,0]\n         * op.path = [1,0]\n         * ```\n         *\n         * path is removed           [1,0] --> removed\n         *\n         * ```txt\n         *         []                                               []\n         *      __/ \\__                                          __/ \\__\n         *   [0]       [1]             --- transform -->      [0]       [1]\n         *             /\n         *          *[1,0]*\n         * ```\n         *\n         * ## Remove above the path\n         *\n         * ```js\n         * path    = [1,0]\n         * op.path = [1]\n         * ```\n         *\n         * path is removed           [1,0] --> removed\n         *\n         * ```txt\n         *         []                                               [ ]\n         *      __/ \\__                                          __/  \\__\n         *   [0]       [1]           --- transform -->        [0]        [1]\n         *             /\n         *         *[1,0]*\n         * ```\n         *\n         */\n        return [];\n      }\n    } else if (type === 'merge_node') {\n      if (!Path.previous(p)) {\n        return [path];\n      }\n      if (pEqual || pYounger) {\n        /**\n         * ## Merge at the path\n         *\n         * ```js\n         * path         = [1]\n         * op.path      = [1]\n         * op.position  = 2\n         * ```\n         *\n         * move path forward at op.path's level                 [0,1] -> [0]\n         *\n         * ```txt\n         *            []                                                []\n         *         __/ \\__                                           __/ \\__\n         *      [0]      *[1]*                                    *[0]*\n         *     /  \\       /             ---- transform -->      __/  |  \\__\n         * [0,0] [0,1]  [1,0]                              [0,0]   [0,1]  [0,2]\n         * ```\n         *\n         * ## Merge at younger\n         *\n         * ```js\n         * path         = [1,0,2,0]\n         * op.path      = [1,0,1]\n         * op.position  = 1\n         * ```\n         *\n         * move path forward at op.path's level         [1,0,2,0] -> [1,0,1,0]\n         *\n         *```txt\n         *            []                                                []\n         *         __/ \\__                                           __/ \\__\n         *      [0]       [1]                                     [0]       [1]\n         *     /  \\       /             ---- transform -->        / \\        /\n         * [0,0] [0,1]  [1,0]                                 [0,0] [0,1]  [1,0]\n         *          ___/  |  \\___                                          /  \\\n         * [1,0,0] <-- [1,0,1]   [1,0,2]                            [1,0,0]   [1,0,1]\n         *                         /                                             /\n         *                   *[1,0,2,0]*                                    *[1,0,1,0]*\n         *```\n         */\n        return [Path.decrement(path, 1, pIndex)];\n      }\n      if (pAbove) {\n        /**\n         *\n         * ## Merge above the path\n         *\n         * ```js\n         * path        = [1,0]\n         * op.path     = [1]\n         * op.position = 2\n         * ```\n         *\n         * 1. move path forward at op.path's level    [1,0] -> [0,0]\n         * 2. move sub path to the position               [0,0] -> [0,2]\n         *\n         * ```\n         *            []                                                []\n         *         __/ \\__                                           __/\n         *      [0]  <-- [1]                                      [0]\n         *     /  \\       /             ---- transform -->     __/ | \\__\n         * [0,0] [0,1] *[1,0]*                            [0,0] [0, 1]  *[0,2]*\n         *          ___/  |  \\___                                    ___/  |  \\___\n         *   [1,0,0]   [1,0,1]   [1,0,2]                      [0,2,0]   [0,2,1]   [0,2,2]\n         * ```\n         */\n        const { position } = operation as MergeNodeOperation;\n        return [\n          Path.increment(Path.decrement(path, 1, pIndex), position, pIndex + 1),\n        ];\n      }\n    } else if (type === 'split_node') {\n      if (pEqual) {\n        /**\n         * ## Split at the path\n         *\n         * ```js\n         * path        = [1]\n         * op.path     = [1]\n         * op.position = 1\n         * ```\n         *\n         * split path into 2 paths:  [1] -> [1], [2]\n         *\n         * ```\n         *         []                                          [ ]\n         *      __/ \\__                                     __/ | \\__\n         *   [0]      *[1]*      --- transform -->       [0]  *[1]*  *[2]*\n         *            /  \\                                     /      /\n         *       [1,0] s [1,1]                              [1,0]   [2,0]\n         * ```\n         */\n        return [path, Path.increment(path)];\n      }\n      if (pYounger) {\n        /**\n         * ## Split at younger\n         *\n         * ```js\n         * path        = [1,0,0]\n         * op.path     = [0]\n         * op.position = 1\n         * ```\n         *\n         * move path foward at op.path's level: [1,0,0] -> [2,0,0]\n         *\n         * ```txt\n         *              []                                          [ ]\n         *           __/ \\__                                     __/ | \\__\n         *        [0]       [1]      --- transform -->       [0]   [1]    [2]\n         *       /  \\       /                                /      /     /\n         *  [0,0] s [0,1] [1,0]                           [0,0]  [1,0] [2,0]\n         *                 /                                            /\n         *             *[1,0,0]*                                   *[2,0,0]*\n         * ```\n         */\n        return [Path.increment(path, 1, pIndex)];\n      }\n      if (pAbove) {\n        /*\n         * ## Split above\n         *\n         * If split happened before the path at op.path's level\n         *\n         * ```js\n         * path        = [1,0,2]\n         * op.path     = [1,0]\n         * op.position = 1\n         * ```\n         *\n         * 1. move path foward at op.path's level: [1,0,2] -> [1,1,2]\n         * 2. move path backward to the split position:    [1,1,2] -> [1,1,1]\n         *\n         * ```txt\n         *              []                                          []\n         *           __/ \\__                                     __/  \\__\n         *        [0]       [1]      --- transform -->        [0]        [1]\n         *                   /                                        __/   \\__\n         *                [1,0]                                  [1,0]         [1,1]\n         *            ____/ | \\____                                /           /   \\\n         *     [1,0,0] s [1,0,1]   *[1,0,2]*                  [1,0,0]   [1,1,0]    *[1,1,1]*\n         * ```\n         */\n        const { position } = operation as SplitNodeOperation;\n        if (path[pIndex + 1] >= position) {\n          return [\n            Path.decrement(\n              Path.increment(path, 1, pIndex),\n              position,\n              pIndex + 1,\n            ),\n          ];\n        }\n      }\n    }\n\n    if (type === 'move_node') {\n      const { newPath: np } = operation as MoveNodeOperation;\n      const npIndex = np.length - 1;\n      const npEqual = Path.isEqual(np, path);\n\n      // Stay\n      if (Path.isEqual(p, np)) {\n        return [path];\n      }\n\n      const npYounger = Path.isYounger(np, path);\n      const npAbove = Path.isAncestor(np, path);\n\n      if (pAbove) {\n        /*\n         * ## Move above the path\n         *\n         * If move node forward to the deeper\n         *\n         * ```js\n         * path       = [1,0]\n         * op.path    = [1]\n         * op.newPath = [2,0]\n         * ```\n         *\n         * 1. move new path to the left at op.path's level:    [2,0] -> [1,0]\n         * 2. link sub path to the path:                       [1,0] + [0] -> [1,0,0]\n         *\n         * ```txt\n         *         [  ]                                     [ ]\n         *      __/ | \\__                                __/  |__\n         *   [0]   [1]  [2]    --- transform -->      [0]        [1]\n         *         /     /                                       / \\\n         *    *[1,0]*  [2,0]                                [1,0]  [1,1]\n         *              /                                    /      /\n         *           [2,0,0]                          *[1,0,0]*   [1,1,0]\n         * ```\n         *\n         * Else\n         *\n         * ```js\n         * path       = [1,0]\n         * op.path    = [1]\n         * op.newPath = [0]\n         * ```\n         *\n         * link sub path to new path:                                [0] + [0] -> [0,0]\n         *\n         * ```\n         *         []                                         []\n         *      __/ \\__                                    __/ |__\n         *   [0]       [1]       --- transform -->      [0]       [1]\n         *              /                                /\n         *          *[1,0]*                           *[0,0]*\n         * ```\n         */\n        const subPath = Path.relative(path, p)!;\n\n        if (Path.isAfter(np, p) && Path.isDeeper(np, p)) {\n          return [Path.link(Path.decrement(np, 1, p.length - 1), subPath)];\n        }\n\n        return [Path.link(np, subPath)];\n      } else if (pEqual) {\n        /*\n         * ## Move at the path\n         *\n         * If move forward to the deeper\n         *\n         * ```js\n         * path       = [1]\n         * op.path    = [1]\n         * op.newPath = [2,0]\n         * ```\n         *\n         * 1. move new path backward at op.path's level:      [2,0] -> [1,0]\n         * 2. move path to the new path:                         [1]   -> [1,0]\n         *\n         * ```txt\n         *         [  ]                                         []\n         *      __/ | \\__                                      / \\\n         *   [0]  *[1]*  [2]    --- transform -->           [0]  [1]\n         *               /                                       /  \\\n         *            [2,0]                                 *[1,0]*  [1,1]\n         * ```\n         *\n         * Else\n         *\n         * ```js\n         * path       = [1,0]\n         * op.path    = [1,0]\n         * op.newPath = [2,0]\n         * ```\n         *\n         * move path to new path:                               [1,0] -> [2,0]\n         *\n         * ```txt\n         *         [  ]                                         [ ]\n         *      __/ | \\__                                    __/ | \\__\n         *   [0]   [1]   [2]    --- transform -->         [0]   [1]   [2]\n         *          /     /                                          /  \\\n         *      *[1,0]* [2,0]                                  *[2,0]* [2,1]\n         * ```\n         */\n        if (Path.isYounger(p, np) && Path.isDeeper(np, p)) {\n          return [Path.decrement(np, 1, p.length - 1)];\n        }\n        return [np];\n      } else if (Path.isSibling(p, np) && (npAbove || npEqual)) {\n        if (pYounger) {\n          /*\n           * ## Move younger to sibling, the sibling is the ancestor of the path.\n           *\n           * ```js\n           * path       = [1,0]\n           * op.path    = [0]\n           * op.newPath = [1]\n           * ```\n           *\n           * move path forward at op.path's level:        [1,0] -> [0,0]\n           *\n           * ```txt\n           *         []                                       []\n           *        / \\                                      / \\\n           *     [0]  [1]       --- transform -->          [0] [1]\n           *           /                                    /\n           *        *[1,0]*                              *[0,0]*\n           * ```\n           *\n           * ## Move younger to sibling, the sibling is the path.\n           *\n           * ```js\n           * path       = [2]\n           * op.path    = [0]\n           * op.newPath = [2]\n           * ```\n           *\n           * move path forward at op.path's level:        [2] -> [1]\n           *\n           * ```txt\n           *         [ ]                                        [ ]\n           *        / | \\         --- transform -->          __/ | \\__\n           *    [0] [1] *[2]*                             [0]  *[1]*  [2]\n           * ```\n           */\n          return [Path.decrement(path, 1, pIndex)];\n        } else {\n          /*\n           * ## Move older to sibling, the sibling is ancestor of the path.\n           *\n           * ```js\n           * path       = [1, 0]\n           * op.path    = [2]\n           * op.newPath = [0]\n           * ```\n           *\n           * move path foward at op.path's level:        [1,0] -> [2,0]\n           *\n           * ```txt\n           *         [ ]                                       [ ]\n           *        / | \\                                     / | \\\n           *     [0] [1] [2]      --- transform -->        [0] [1] [2]\n           *          /                                            /\n           *       *[1,0]*                                      *[2,0]*\n           *\n           * ```\n           *\n           * ## Move older to sibling, the sibling is the path.\n           *\n           * ```js\n           * path       = [1]\n           * op.path    = [2]\n           * op.newPath = [1]\n           * ```\n           *\n           * move path forward at op.path's level:        [1] -> [2]\n           *\n           * ```txt\n           *         [ ]                                        [ ]\n           *        / | \\         --- transform -->          __/ | \\__\n           *    [0] *[1]* [2]                             [0]   [1]  *[2]*\n           * ```\n           */\n          return [Path.increment(path, 1, pIndex)];\n        }\n      } else if (npEqual || npYounger || npAbove) {\n        if (pYounger) {\n          /*\n           * ## Move younger to path.\n           *\n           * ```js\n           * path       = [1,1]\n           * op.path    = [0]\n           * op.newPath = [1,0]\n           * ```\n           *\n           * 1. move path backward at op.path's level:        [1,1] -> [0,1]\n           * 2. move path forward at op.newPath's level:      [0,1] -> [0,2]\n           *\n           * ```txt\n           *        [ ]                                    [ ]\n           *     __/ | \\__                              __/ | \\__\n           *  [0]   [1]  [2]   --- transform -->    [0]  [1]   [2]\n           *        / \\                          __/ | \\__\n           *   [1,0]  *[1,1]*               [0,0]  [0,1]  *[0,2]*\n           * ```\n           *\n           * ## Move younger to path's younger.\n           *\n           * ```js\n           * path       = [1,1]\n           * op.path    = [0]\n           * op.newPath = [1,0]\n           * ```\n           *\n           * 1. move path backward at op.path's level:        [1,1] -> [0,1]\n           * 2. move path forward at op.newPath's level:      [0,1] -> [0,2]\n           *\n           * ```txt\n           *        [ ]                                  [ ]\n           *     __/  \\__                                /\n           *  [0]      [1]    --- transform -->        [0]\n           *           /  \\                         __/ | \\__\n           *      [1,0]  *[1,1]*               [0,0]  [0,1]  *[0,2]*\n           * ```\n           *\n           * ## Move younger to path's ancestor.\n           *\n           * ```js\n           * path       = [1,0,0]\n           * op.path    = [0]\n           * op.newPath = [1,0]\n           * ```\n           *\n           * 1. move path backward at op.path's level:        [1,0,0] -> [0,0,0]\n           * 2. move path forward at op.newPath's level:      [0,0,0] -> [0,1,0]\n           *\n           * ```txt\n           *        [ ]                                    [ ]\n           *     __/  \\__                                 /\n           *  [0]        [1]    --- transform -->      [0]\n           *             /                             / \\\n           *          [1,0]                       [0,0]  [0,1]\n           *           /                                   /\n           *       *[1,0,0]*                            *[0,1,0]*\n           * ```\n           *\n           */\n\n          return [Path.increment(Path.decrement(path, 1, pIndex), 1, npIndex)];\n        }\n        /*\n         * ## Move to path.\n         *\n         * ```js\n         * path       = [1]\n         * op.path    = [2]\n         * op.newPath = [1]\n         * ```\n         *\n         * move path to the right at op.newPath's level:      [1] -> [2]\n         *\n         * ```txt\n         *        [ ]                                    [ ]\n         *     __/ | \\__                              __/ | \\__\n         *  [0]  *[1]*  [2]   --- transform -->     [0]  [1]   *[2]*\n         * ```\n         *\n         * ## Move to path's younger.\n         *\n         * ```js\n         * path       = [1,0]\n         * op.path    = [1,1]\n         * op.newPath = [0]\n         * ```\n         *\n         * move path to the right at op.newPath's level:      [1,0] -> [2,0]\n         *\n         * ```txt\n         *        [ ]                                  [ ]\n         *     __/  \\__                             __/ | \\__\n         *  [0]      [1]    --- transform -->    [0]   [1]   [2]\n         *           /  \\                                     /\n         *      *[1,0]* [1,1]                             *[2,0]*\n         * ```\n         *\n         * ## Move to path's ancestor.\n         *\n         * ```js\n         * path       = [1,0]\n         * op.path    = [0,0]\n         * op.newPath = [1]\n         * ```\n         *\n         * move path to the right at op.newPath's level:      [1,0] -> [2,0]\n         *\n         * ```txt\n         *        [ ]                                    [ ]\n         *     __/  \\__                               __/ | \\__\n         *  [0]        [1]    --- transform -->    [0]   [1]   [2]\n         *   /          /                                       /\n         * [0,0]    *[1,0]*                                 *[2,0]*\n         * ```\n         *\n         */\n        return [Path.increment(path, 1, npIndex)];\n      } else if (pYounger) {\n        /**\n         * ## Move younger to the right of the path.\n         *\n         * ```js\n         * path       = [1,0]\n         * op.path    = [0]\n         * op.newPath = [1,1]\n         * ```\n         *\n         * move path backward at op.path's level:          [1,0] -> [0,0]\n         *\n         * ```txt\n         *         []                                       []\n         *        / \\                                      /\n         *     [0]  [1]       --- transform -->          [0]\n         *         /   \\                                 / \\\n         *    *[1,0]*  [1,1]                       *[0,0]* [0,1]\n         * ```\n         *\n         * ```js\n         * path       = [1]\n         * op.path    = [0]\n         * op.newPath = [2,0]\n         * ```\n         *\n         * move path backward at op.path's level:          [1] -> [0]\n         *\n         * ```txt\n         *         [ ]                                       []\n         *      __/ | \\__                                   / \\\n         *   [0]  *[1]*  [2]     --- transform -->      *[0]*  [1]\n         *               /                                     / \\\n         *            [2,0]                                [1,0] [1,1]\n         * ```\n         *\n         * ## Move younger below the path.\n         *\n         * ```js\n         * path       = [1,0]\n         * op.path    = [0]\n         * op.newPath = [1,1]\n         * ```\n         *\n         * move path backward at op.path's level:          [1,0] -> [0,0]\n         *\n         * ```txt\n         *         []                                       []\n         *        / \\                                      /\n         *     [0]  [1]       --- transform -->          [0]\n         *         /   \\                                 / \\\n         *    *[1,0]*  [1,1]                       *[0,0]* [0,1]\n         * ```\n         */\n\n        return [Path.decrement(path, 1, pIndex)];\n      }\n    }\n\n    return [path];\n  }\n\n    /**\n   * If the `path` is root path\n   *\n   *\n   * @param path\n   * @param target\n   *\n   * # Example\n   *\n   *\n   * ```ts\n   * Path.isRoot([]) // true\n   * ```\n   */\n  static isRoot(path: Path) {\n    return path.length === 0 ;\n  }\n}\n","import Path from './path';\nimport Node from './node';\n\nfunction whereToStr(where?: Path | string) {\n  if (typeof where === 'string') {\n    return `with key: ${where}.`;\n  } else if (Array.isArray(where)) {\n    return `with path: ${where}.`;\n  }\n  return `with unknown: ${typeof where}, ${where}.`;\n}\n\ntype NodeType = 'element' | 'node' | 'text' | 'block' | 'inline';\n\n/** 节点不存在 Error */\nexport class NodeNotFoundError extends Error {\n  static createAssertNotFoundError<T extends Node>(\n    type: NodeType,\n    ofType: (maybeNode: Node) => boolean,\n  ) {\n    return function assertNotFound(\n      maybeNode: Node | null,\n      method: string,\n      where?: Path | string,\n    ) {\n      if (!maybeNode || !ofType(maybeNode)) {\n        throw new NodeNotFoundError(method, type, where);\n      }\n      return maybeNode as T;\n    };\n  }\n\n  constructor(method: string, type: NodeType, where?: Path | string) {\n    super(`[${method}] could not find ${type} ${whereToStr(where)}`);\n    Object.setPrototypeOf(this, NodeNotFoundError.prototype);\n  }\n}\n\n/** 路径不存在的 Error */\nexport class PathNotFoundError extends Error {\n  constructor(key: string) {\n    super(`\\`Element.assertPath\\` could not find path with key: ${key}`);\n    Object.setPrototypeOf(this, PathNotFoundError.prototype);\n  }\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport Text from './text';\nimport Node, { NodeProperties } from './node';\nimport Path from './path';\nimport Mark, { MarkProperties } from './mark';\nimport keyUtils from '../utils/keyUtils';\nimport Data from '../interfaces/data';\nimport Block from './block';\nimport Inline from './inline';\nimport { NodeNotFoundError, PathNotFoundError } from './error';\n\nexport type KeysToEdgesTable = Record<string, [string, number]>;\n\nexport const KEYS_TO_EDGES_TABLE_CACHE = new WeakMap<\nElement,\nKeysToEdgesTable\n>();\n\nexport function linkKeysToEdgesTable(src: Element, target: Element) {\n  const table = KEYS_TO_EDGES_TABLE_CACHE.get(src);\n  if (table) {\n    KEYS_TO_EDGES_TABLE_CACHE.set(target, table);\n  }\n}\n\ntype Predicate<T extends Node = Node> = (\n  node: T,\n  index?: number,\n  self?: T[],\n) => boolean;\n\ntype Iterator<N extends Node = Node, T = void> = (node: N) => T;\n\nexport type ElementTypeName = 'block' | 'inline' | 'text';\n\nconst assertNode = NodeNotFoundError.createAssertNotFoundError<Node>(\n  'node',\n  (node) => node instanceof Node,\n);\nconst assertElement = NodeNotFoundError.createAssertNotFoundError<Element>(\n  'element',\n  (node) => node instanceof Element,\n);\nconst assertText = NodeNotFoundError.createAssertNotFoundError<Text>(\n  'text',\n  (node) => node instanceof Text,\n);\nconst assertBlock = NodeNotFoundError.createAssertNotFoundError<Block>(\n  'block',\n  (node) => node instanceof Block,\n);\n\nexport interface ElementProperties<\n  D extends Data = Data,\n  N extends Node[] = Node[],\n> extends NodeProperties {\n  data?: D;\n  nodes?: N;\n}\n\nexport default abstract class Element<\n  D extends Data = Data,\n  N extends Node[] = Node[],\n> extends Node {\n  /**\n   * 判断 `maybeElement` 是否为 Element\n   * @param maybeElement\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const block = (<block type=\"paragraph\">Hello</block>);\n   * const inline = (<inline type=\"link\">www.dingtalk.com</inline>);\n   * const text = (<text>Hello</text>);\n   *\n   * assertTrue(Element.isElement(block));\n   * assertTrue(Element.isElement(inline));\n   * assertFlase(Element.isElement(text));\n   * ```\n   */\n  static isElement(maybeElement: any): maybeElement is Element {\n    return maybeElement instanceof Element;\n  }\n\n  public readonly data: D;\n\n  public readonly nodes: N;\n\n  protected constructor(props: Required<ElementProperties<D, N>>) {\n    super(props);\n    const { data, nodes } = props;\n    this.data = { ...data };\n    this.nodes = nodes;\n  }\n\n  public abstract readonly type: string;\n\n  abstract merge(props: Partial<ElementProperties<D, N>>): Element;\n\n  abstract set<K extends keyof ElementProperties<N>>(\n    key: K,\n    value: Required<ElementProperties<D, N>>[K],\n  ): Element<D, N>;\n\n  /**\n   * 判断节点是否是 Inline 类型\n   *\n   * @example\n   * ```tsx\n   * const document = (<document><block type=\"paragraph\">Hello</block></document>);\n   * const block = (<block type=\"paragraph\">Hello</block>);\n   * const inline = (<inline type=\"link\">www.dingtalk.com</inline>);\n   *\n   * assertTrue(inline.isInline());\n   * assertFalse(block.isInline());\n   * assertFalse(document.isInline());\n   * ```\n   */\n  public isInline(): this is Inline {\n    return this instanceof Inline;\n  }\n\n  /**\n   * 判断节点是否是 Block 类型\n   *\n   * @example\n   * ```tsx\n   * const document = (<document><block type=\"paragraph\">Hello</block></document>);\n   * const block = (<block type=\"paragraph\">Hello</block>);\n   * const inline = (<inline type=\"link\">www.dingtalk.com</inline>);\n   *\n   * assertTrue(block.isBlock());\n   * assertFalse(inline.isBlock());\n   * assertFalse(document.isBlock());\n   * ```\n   */\n  public isBlock(): this is Block {\n    return this instanceof Block;\n  }\n\n  /**\n   * 重新生成节点 key，避免出现 key 重复的节点\n\n  * @example\n   * ```tsx\n   * const block = (<block type=\"paragraph\">Hello</block>);\n   *\n   * const newBlock = block.regenerateKey();\n   * assertFalse(block.key === newBlock.key);\n   * ```\n   * @returns\n   */\n  public regenerateKey() {\n    return this.set('key', keyUtils.create());\n  }\n\n  /**\n   * 获取子节点\n   * @param key\n   * @throws NodeNotFoundError 无法找到节点时，抛出异常\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.assertNode('own'), <block key=\"own\" />);\n   * assertEqual(element.assertNode('hello'), <text key=\"hello\" />);\n   * assertEqual(element.assertNode('world-block'), <block type=\"paragraph\" key=\"world-block\"/>);\n   * assert(() => element.assertNode('not-exists')).toThrow();\n   * ```\n   */\n  public assertNode(key: string) {\n    const node = this.getNode(key);\n    return assertNode(node, 'Element.assertNode', this.assertPath(key));\n  }\n\n  /**\n   * 获取子节点\n   * @param path\n   * @throws NodeNotFoundError 无法找到节点时，抛出异常\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.assertNodeByPath([]), <block key=\"own\" />);\n   * assertEqual(element.assertNodeByPath([0,0]), <text key=\"hello\" />);\n   * assertEqual(element.assertNodeByPath([1]), <block type=\"paragraph\" key=\"world-block\"/>);\n   * assert(() => element.assertNodeByPath([2])).toThrow();\n   * ```\n   *\n   *\n   */\n  public assertNodeByPath(path: Path) {\n    const node = this.getNodeByPath(path);\n    return assertNode(node, 'Element.assertNodeByPath', path);\n  }\n\n  /**\n   * 获取子 text 节点\n   * @param key\n   * @throws NodeNotFoundError 无法找到节点时，抛出异常\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertText('hello'),\n   *   <text key=\"hello\">Hello</text>\n   * );\n   * assert(() => element.assertText('hello-block')).toThrow();\n   * assert(() => element.assertText('not-exists')).toThrow();\n   * ```\n   */\n  public assertText(key: string) {\n    const node = this.getNode(key);\n    return assertText(node, 'Element.assertText', this.assertPath(key));\n  }\n\n  /**\n   * 获取子 text 节点\n   * @param path\n   * @throws NodeNotFoundError 无法找到节点时，抛出异常\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertTextByPath([0,0]),\n   *   <text key=\"hello\">Hello</text>\n   * );\n   * assert(() => element.assertTextByPath([0])).toThrow();\n   * assert(() => element.assertTextByPath([0,1])).toThrow();\n   * ```\n   */\n  public assertTextByPath(path: Path) {\n    const node = this.getNodeByPath(path);\n    return assertText(node, 'Element.assertTextByPath', path);\n  }\n\n  /**\n   * 根据 `key`，获取子 element 节点\n   * @param key\n   * @throws NodeNotFoundError 无法找到节点时，抛出异常\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertElement('hello-block'),\n   *   <block type=\"paragraph\" key=\"hello-block\" />\n   * );\n   * assert(() => element.assertElement('hello')).toThrow();\n   * assert(() => element.assertElement('not-exists')).toThrow();\n   * ```\n   */\n  public assertElement(key: string) {\n    const node = this.getNode(key);\n    return assertElement(node, 'Element.assertElement', this.assertPath(key));\n  }\n\n  /**\n   * 获取子 element 节点\n   * @param path\n   * @throws NodeNotFoundError 无法找到节点时，抛出异常\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertElementByPath([0]),\n   *   <block type=\"paragraph\" key=\"hello-block\" />\n   * );\n   * assert(() => element.assertElementByPath([0,0])).toThrow();\n   * assert(() => element.assertElementByPath([2])).toThrow();\n   * ```\n   */\n  public assertElementByPath(path: Path) {\n    const node = this.getNodeByPath(path);\n    return assertElement(node, 'Element.assertElementByPath', path);\n  }\n\n  /**\n   * 获取节点 path\n   * @param key\n   * @throws NodeNotFoundError 无法找到节点时，抛出异常\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.assertPath('own'), []);\n   * assertEqual(element.assertPath('hello-block'), [0]);\n   * assertEqual(element.assertPath('hello'), [0, 0]);\n   * assert(() => element.assertPath('not-exists')).toThrow();\n   * ```\n   */\n  public assertPath(key: string) {\n    const path = this.getPath(key);\n    if (path === null) {\n      throw new PathNotFoundError(key);\n    }\n    return path;\n  }\n\n  /**\n   * 判断节点是否存在于当前的节点子树中\n   * @param key\n   * @returns\n   *\n   * @example\n   *\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertTrue(element.hasNode('hello'));\n   * assertFalse(element.hasNode('own));\n   * assertFalse(element.hasNode('not-exists'));\n   * ```\n   */\n  public hasNode(key: string) {\n    return Boolean(this.getKeysToEdgesTable()[key]);\n  }\n\n  /**\n   * 判断节点是否为空：仅含有一个空的 text 节点\n   *\n   * @example\n   *\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <text />\n   *   </block>\n   * );\n   *\n   * assertTrue(element.isEmpty());\n   * ```\n   */\n  public isEmpty() {\n    const { nodes } = this;\n    return nodes.length === 1 && Text.isText(nodes[0]) && !nodes[0].text;\n  }\n\n  /**\n   * 获取子节点\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.getNode('own'), <block key=\"own\" />);\n   * assertEqual(element.getNode('hello'), <text key=\"hello\" />);\n   * assertEqual(element.getNode('world-block'), <block type=\"paragraph\" key=\"world-block\"/>);\n   * assertEqual(element.getNode(), null);\n   * ```\n   */\n  public getNode(key: string) {\n    const path = this.getPath(key);\n    return this.getNodeByPath(path);\n  }\n\n  /**\n   * 获取子节点，如果没有找到，将返回 null\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.getNodeByPath([]), <block key=\"own\" />);\n   * assertEqual(element.getNodeByPath([0,0]), <text key=\"hello\" />);\n   * assertEqual(element.getNodeByPath([1]), <block type=\"paragraph\" key=\"world-block\"/>);\n   * assertEqual(element.getNodeByPath([2]), null);\n   * ```\n   */\n  public getNodeByPath(path: Path | null) {\n    if (!path) {\n      return null;\n    }\n\n    return path.reduce((n: Node | null, index: number, idx) => {\n      if (!n) {\n        return null;\n      }\n      const node = n.toSubType();\n      if (node.isText()) {\n        return idx === path.length - 1 ? node : null;\n      }\n      return node.nodes[index] || null;\n    }, this);\n  }\n\n  /**\n   * 获取相对于当前节点的 path，如果没有找到，就返回 `null`\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.getPath('own'), []);\n   * assertEqual(element.getPath('hello'), [0,0]);\n   * assertEqual(element.getPath('world-block'), [1]);\n   * assertEqual(element.getPath('not-exists'), null);\n   * ```\n   */\n  public getPath(key: string) {\n    if (key === this.key) {\n      return [];\n    }\n\n    const keysToEdgesTable = this.getKeysToEdgesTable();\n    if (!keysToEdgesTable[key]) {\n      return null;\n    }\n\n    const path: Path = [];\n    let k = key;\n    while (keysToEdgesTable[k]) {\n      const [parentKey, index] = keysToEdgesTable[k];\n      path.push(index);\n      k = parentKey;\n    }\n    path.reverse();\n    return path;\n  }\n\n  /**\n   * 获取上一个兄弟节点，若不存在，将返回 null\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getPreviousSibling('world-block'),\n   *   <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   * );\n   * assertEqual(\n   *   element.getPreviousSibling('hello-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getPreviousSibling(key: string) {\n    const path = this.getPath(key);\n    if (!path || path.length === 0) {\n      return null;\n    }\n    return this.getPreviousSiblingByPath(path);\n  }\n\n  /**\n   * 获取上一个兄弟节点，若不存在，将返回 null\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getPreviousSiblingByPath([1]),\n   *   <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   * );\n   * assertEqual(\n   *   element.getPreviousSiblingByPath([0]),\n   *   null\n   * );\n   * ```\n   */\n  public getPreviousSiblingByPath(path: Path) {\n    const lastIndex = path[path.length - 1];\n    if (lastIndex <= 0) {\n      return null;\n    }\n    return this.getNodeByPath(Path.decrement(path));\n  }\n\n  /**\n   * 获取下一个兄弟节点，若不存在，返回 null\n   * @param key\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getNextSibling('hello-block'),\n   *   <block type=\"paragraph\" key=\"world-block\">World</block>\n   * );\n   * assertEqual(\n   *   element.getNextSibling('world-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getNextSibling(key: string) {\n    const path = this.getPath(key);\n    if (!path || path.length === 0) {\n      return null;\n    }\n    return this.getNextSiblingByPath(path);\n  }\n\n  /**\n   * 获取下一个兄弟节点，若不存在，返回 null\n   * @param path\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getNextSiblingByPath([0]),\n   *   <block type=\"paragraph\" key=\"world-block\">World</block>\n   * );\n   * assertEqual(\n   *   element.getNextSiblingByPath([1]),\n   *   null\n   * );\n   * ```\n   */\n  public getNextSiblingByPath(path: Path) {\n    return this.getNodeByPath(Path.increment(path));\n  }\n\n  /**\n   * 获取上一个叶子节点，若不存在，将返回 null\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getPreviousNode('cangjie-block'),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getPreviousNode('hello-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getPreviousNode(key: string) {\n    const path = this.getPath(key);\n    if (!path) {\n      return null;\n    }\n    return this.getPreviousNodeByPath(path);\n  }\n\n  /**\n   * 获取上一个叶子节点，若不存在，将返回 null\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getPreviousNodeByPath([1,0]),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getPreviousNodeByPath([0,0]),\n   *   null\n   * );\n   * ```\n   */\n  public getPreviousNodeByPath(path: Path) {\n    let previousNode = this.getPreviousSiblingByPath(path);\n    let parentPath = Path.parent(path);\n    while (!previousNode && parentPath.length) {\n      const parentPrevSibling = this.getPreviousSiblingByPath(parentPath);\n      previousNode = parentPrevSibling && parentPrevSibling.getLastNode();\n      parentPath = Path.parent(parentPath);\n    }\n    return previousNode;\n  }\n\n  /**\n   * 获取下一个叶子节点，若不存在，将返回 null\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getNextNode('hello-block'),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getNextNode('cangjie-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getNextNode(key: string) {\n    const path = this.getPath(key);\n    if (!path) {\n      return null;\n    }\n    return this.getNextNodeByPath(path);\n  }\n\n  /**\n   * 获取下一个叶子节点，若不存在，将返回 null\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getNextNodeByPath([0, 0]),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getNextNodeByPath([1,1]),\n   *   null\n   * );\n   * ```\n   */\n  public getNextNodeByPath(path: Path) {\n    let nextNode = this.getNextSiblingByPath(path);\n    let parentPath = Path.parent(path);\n    while (!nextNode && parentPath.length) {\n      const parentNextSibling = this.getNextSiblingByPath(parentPath);\n      nextNode = parentNextSibling && parentNextSibling.getFirstNode();\n      parentPath = Path.parent(parentPath);\n    }\n    return nextNode;\n  }\n\n  /**\n   * 获取上一个文本节点\n   * @param key\n   * @throws NodeNotFoundError 若节点不存在，则抛错\n   * @returns\n   *\n   * * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertPreviousText('cangjie-block'),\n   *   <text>World</text>\n   * );\n   * assert(() => element.assertPreviousText('hello-block')).toThrow();\n   * ```\n   */\n  public assertPreviousText(key: string) {\n    const text = this.getPreviousText(key);\n    return assertText(text, 'assertPreviousText', key);\n  }\n\n  /**\n   * 获取上一个文本节点，若不存在，将返回 null\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getPreviousText('cangjie-block'),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getPreviousText('hello-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getPreviousText(key: string) {\n    const path = this.getPath(key);\n    if (!path || !path.length) {\n      return null;\n    }\n    return this.getPreviousTextByPath(path);\n  }\n\n  /**\n   * 获取上一个文本节点，若不存在，将返回 null\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getPreviousTextByPath([1,0]),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getPreviousTextByPath([0]),\n   *   null\n   * );\n   * ```\n   */\n  public getPreviousTextByPath(path: Path) {\n    let previous = this.getPreviousNodeByPath(path);\n    while (previous?.isElement() && !previous.nodes.length) {\n      const previousPath = this.getPath(previous.key);\n      if (!previousPath) {\n        return null;\n      }\n      previous = this.getPreviousNodeByPath(previousPath);\n    }\n    if (!previous) {\n      return null;\n    }\n    return previous.getLastText();\n  }\n\n  /**\n   * 获取下一个文本节点，若不存在，将返回 null\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getNextText('hello-block'),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getNextText('cangjie-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getNextText(key: string) {\n    const path = this.getPath(key);\n    if (!path || !path.length) {\n      return null;\n    }\n    return this.getNextTextByPath(path);\n  }\n\n  /**\n   * 获取下一个文本节点，若不存在，将返回 null\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getNextTextByPath([0,0]),\n   *   <text>World</text>\n   * );\n   * assertEqual(\n   *   element.getNextTextByPath([1,1]),\n   *   null\n   * );\n   * ```\n   */\n  public getNextTextByPath(path: Path) {\n    let next = this.getNextNodeByPath(path);\n    while (next?.isElement() && !next.nodes.length) {\n      const nextPath = this.getPath(next.key);\n      if (!nextPath) {\n        return null;\n      }\n      next = this.getNextNodeByPath(nextPath);\n    }\n    if (!next) {\n      return null;\n    }\n    return next.getFirstText();\n  }\n\n  /**\n   * 获取上一个 block，若不存在，将返回 null\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getPreviousBlock('cangjie-block'),\n   *   <block type=\"paragraph\" key=\"world-block\">World</block>\n   * );\n   * assertEqual(\n   *   element.getPreviousBlock('hello-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getPreviousBlock(key: string) {\n    const child = this.getNode(key);\n    if (!child) {\n      return null;\n    }\n\n    let first: Text | null;\n    if (Block.isBlock(child)) {\n      first = child.getFirstText();\n    } else {\n      const block = this.getClosestBlock(key)!;\n      first = block.getFirstText();\n    }\n\n    const previous = first && this.getPreviousText(first.key);\n    if (!previous) {\n      return null;\n    }\n\n    return this.getClosestBlock(previous.key);\n  }\n\n  /**\n   * 获取下一个 block，若不存在，将返回 null\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getNextBlock('hello-block'),\n   *   <block type=\"paragraph\" key=\"world-block\">World</block>\n   * );\n   * assertEqual(\n   *   element.getNextBlock('cangjie-block'),\n   *   null\n   * );\n   * ```\n   */\n  public getNextBlock(key: string) {\n    const child = this.getNode(key);\n    if (!child) {\n      return null;\n    }\n    let last;\n\n    if (Block.isBlock(child)) {\n      last = child.getLastText();\n    } else {\n      const block = this.getClosestBlock(key);\n      last = block!.getLastText();\n    }\n    if (!last) return null;\n\n    const next = this.getNextText(last.key);\n    if (!next) return null;\n\n    const closest = this.getClosestBlock(next.key);\n    return closest;\n  }\n\n  /**\n   * 获取节点 Key-to-Path 的映射表\n   *\n   * @example\n   * ```ts\n   * const element = (\n   *   <block type=\"container\" key=\"container\">\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const table = element.getKeysToEdgesTable();\n   * assertEqual(\n   *   table,\n   *   {\n   *     'world-block': ['container', 0],\n   *     'world':       ['world-block', 0],\n   *     'hello-block': ['container', 1],\n   *     'hello':       ['hello-block', 0]\n   *   }\n   * );\n   * ```\n   */\n  public getKeysToEdgesTable() {\n    if (!KEYS_TO_EDGES_TABLE_CACHE.has(this)) {\n      const { key, nodes } = this;\n      const { length } = nodes;\n      const table: KeysToEdgesTable = Object.create(null);\n      for (let i = 0; i < length; i += 1) {\n        const node = nodes[i];\n        table[node.key] = [key, i];\n        if (!Element.isElement(node)) {\n          continue;\n        }\n\n        const nested = node.getKeysToEdgesTable();\n        // PERF\n        node.forEachDescendant((n) => {\n          table[n.key] = nested[n.key];\n        });\n      }\n      KEYS_TO_EDGES_TABLE_CACHE.set(this, table);\n    }\n    return KEYS_TO_EDGES_TABLE_CACHE.get(this)!;\n  }\n\n  /**\n   * 获取节点下的文本\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     </block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.text, 'HelloWorldCangjie');\n   * ```\n   */\n  public get text() {\n    return this.getTexts().reduce((str, { text }) => `${str}${text}`, '');\n  }\n\n  /**\n   * 获得最远的满足 `predicate` 断言的祖先节点\n   * @param key\n   * @param predicate\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\" key=\"container-1\">\n   *       <block type=\"container\" key=\"container-2\">\n   *         <block type=\"paragraph\">\n   *           <text key=\"hello\">Hello</text>\n   *         </block>\n   *       </block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getFurthsest('hello', (node) => node.type === 'container'),\n   *   <block type=\"container\" key=\"container-1\" />\n   * );\n   * ```\n   */\n  public getFurthsest(key: string, predicate: Predicate<Element>) {\n    const path = this.getPath(key);\n    if (!path) {\n      return null;\n    }\n    return this.getFurthsestByPath(path, predicate);\n  }\n\n  /**\n   * 获得最远的满足 `predicate` 断言的祖先节点\n   *\n   * @param path\n   * @param predicate\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\" key=\"container-1\">\n   *       <block type=\"container\" key=\"container-2\">\n   *         <block type=\"paragraph\">\n   *           <text key=\"hello\">Hello</text>\n   *         </block>\n   *       </block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getFurthsestByPath([0,0,0,0], (node) => node.type === 'container'),\n   *   <block type=\"container\" key=\"container-1\" />\n   * );\n   * ```\n   */\n  public getFurthsestByPath(path: Path, predicate: Predicate<Element>) {\n    const ancestors = this.getAncestorsByPath(path);\n    if (!ancestors || !ancestors.length) {\n      return null;\n    }\n\n    const fursest = ancestors.find((node, index) => {\n      if (node === this) {\n        return false;\n      }\n      return predicate(node, index);\n    }, []);\n    return fursest || null;\n  }\n\n  /**\n   * 获得最远的 Inline 祖先\n   * @param key\n   * @param returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <inline type=\"inline-block\">\n   *       <inline type=\"link\">\n   *         <text key=\"hello\">Hello</text>\n   *       </inline>\n   *     </inline>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getFurthsestInline('hello'),\n   *   <inline type=\"inline-block\" />\n   * );\n   * ```\n   */\n  public getFurthsestInline(key: string): Inline | null {\n    const node = this.getFurthsest(key, (n) => Inline.isInline(n));\n    if (node?.isElement() && node.isInline()) {\n      return node;\n    }\n    return null;\n  }\n\n  /**\n   * 获得最远的 Block 祖先\n   * @param key\n   * @param returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\" key=\"container-1\">\n   *       <block type=\"container\" data={{highlight: true}} key=\"container-2\">\n   *         <block type=\"paragraph\">\n   *           <text key=\"hello\">Hello</text>\n   *         </block>\n   *       </block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getFurthsestBlock('hello'),\n   *   <block type=\"container\" key=\"container-1\" />\n   * );\n   * ```\n   */\n  public getFurthsestBlock(key: string): Block | null {\n    const node = this.getFurthsest(key, (n) => Block.isBlock(n));\n    if (node?.isElement() && node.isBlock()) {\n      return node;\n    }\n    return null;\n  }\n\n  /**\n   * 获得最远的、仅含有一个子孙的祖先\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\" key=\"multiple-child\">\n   *       <block type=\"container\" key=\"only-child\">\n   *         <block type=\"paragraph\">\n   *           <text key=\"hello\">Hello</text>\n   *         </block>\n   *       </block>\n   *       <block type=\"paragraph\">World</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getFurthestOnlyChildAncestor('hello'),\n   *   <block type=\"container\" key=\"only-child\" />\n   * );\n   * ```\n   */\n  public getFurthestOnlyChildAncestor(key: string) {\n    const path = this.getPath(key);\n    if (!path) {\n      return null;\n    }\n    return this.getFurthestOnlyChildAncestorByPath(path);\n  }\n\n  /**\n   * 获得最远的、仅含有一个子孙的祖先\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"container\" key=\"multiple-child\">\n   *       <block type=\"container\" key=\"only-child\">\n   *         <block type=\"paragraph\">\n   *           <text key=\"hello\">Hello</text>\n   *         </block>\n   *       </block>\n   *       <block type=\"paragraph\">World</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getFurthestOnlyChildAncestorByPath([0,0,0,0]),\n   *   (<block type=\"container\" key=\"only-child\" />)\n   * );\n   * ```\n   */\n  public getFurthestOnlyChildAncestorByPath(path: Path) {\n    const ancestors = this.getAncestorsByPath(path);\n    if (!ancestors) {\n      return null;\n    }\n\n    const furthest = ancestors\n      .slice(1) // ignore self\n      .find((node) => node instanceof Element && node.nodes.length === 1);\n\n    return furthest || null;\n  }\n\n  /**\n   * 获得节点所有的祖先\n   * @param key\n   * @returns 祖先序列\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getAncestors('hello'),\n   *   [\n   *     <block type=\"container\" />,\n   *     <block type=\"paragraph\" />\n   *   ]\n   * )\n   * ```\n   */\n  public getAncestors(key: string): Element[] {\n    const path = this.getPath(key);\n    return this.getAncestorsByPath(path);\n  }\n\n  /**\n   * 获得节点所有的祖先\n   * @param path\n   * @returns 祖先序列\n   *\n   * @example\n   *\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getAncestorsByPath([0,0]),\n   *   [\n   *     <block type=\"container\" />,\n   *     <block type=\"paragraph\" />\n   *   ]\n   * )\n   * ```\n   */\n  public getAncestorsByPath(path: Path | null): Element[] {\n    if (!path || !this.getNodeByPath(path)) {\n      return [];\n    }\n    const ancestors: Element[] = [];\n\n    path.forEach((_, index) => {\n      const subPath = path.slice(0, index);\n      const ancestor = this.getNodeByPath(subPath);\n      if (ancestor?.isElement()) {\n        ancestors.push(ancestor);\n      }\n    });\n\n    return ancestors;\n  }\n\n  /**\n   * 获得最近的满足 `predicate` 断言的祖先，祖先不包含当前节点\n   * @param key\n   * @param predicate\n   * @returns\n   *\n   * @example\n   *\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getClosest('hello', (node) => node.type === 'container'),\n   *   <block type=\"container\" key=\"container-2\" />,\n   * );\n   *\n   * assertEqual(\n   *   element.getClosest('hello', (node) => node.key === 'container-1'),\n   *   null,\n   * );\n   * ```\n   */\n  public getClosest(key: string, predicate: Predicate<Element>) {\n    const path = this.getPath(key);\n    return this.getClosestByPath(path, predicate);\n  }\n\n  /**\n   * 获得最近的满足 `predicate` 断言的祖先，祖先不包含当前节点\n   * @param key\n   * @param predicate\n   * @returns\n   *\n   * @example\n   *\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getClosestByPath([0,0,0], (node) => node.type === 'container'),\n   *   <block type=\"container\" key=\"container-2\" />,\n   * );\n   * assertEqual(\n   *   element.getClosestByPath([0,0,0], (node) => node.key === 'container-1'),\n   *   null,\n   * );\n   * ```\n   */\n  public getClosestByPath(\n    path: Path | null,\n    predicate: Predicate<Element>,\n  ): Element | null {\n    if (!path) {\n      return null;\n    }\n    const ancestors = this.getAncestorsByPath(path);\n    const closest = ancestors.reverse().find((node, index, self) => {\n      if (node === this) return false;\n      return predicate(node, index, self);\n    });\n    return closest || null;\n  }\n\n  /**\n   * 获得最近的 Inline\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *    <inline type=\"highlight\">\n   *      <inline type=\"link\">\n   *        <text key=\"hello\">Hello</text>\n   *       </inline>\n   *    </inline>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getClosestInline('hello'),\n   *   <inline type=\"link\" />,\n   * );\n   * ```\n   */\n  public getClosestInline(key: string): Inline | null {\n    const path = this.getPath(key);\n    if (!path) {\n      return null;\n    }\n    return this.getClosestInlineByPath(path);\n  }\n\n  /**\n   * 获得最近的 Inline\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *    <inline type=\"highlight\">\n   *      <inline type=\"link\">\n   *        <text key=\"hello\">Hello</text>\n   *       </inline>\n   *    </inline>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getClosestInlineByPath([0,0,0]),\n   *   <inline type=\"link\" />,\n   * );\n   * ```\n   */\n  public getClosestInlineByPath(path: Path): Inline | null {\n    const closest = this.getClosestByPath(path, (n) => Inline.isInline(n));\n    if (closest?.isElement() && closest.isInline()) {\n      return closest;\n    }\n    return null;\n  }\n\n  /**\n   * 获取最近的 block 祖先\n   * @param key\n   * @returns\n   * @throws NodeNotFoundError 若节点不存在，抛错\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertClosestBlock('hello'),\n   *   <block type=\"paragraph\" />\n   * );\n   * assert(() =>element.assertClosestBlock('hello')).toThrow();\n   * ```\n   */\n  public assertClosestBlock(key: string): Block {\n    const block = this.getClosestBlock(key);\n    return assertBlock(block, 'assertClosestBlock', key);\n  }\n\n  /**\n   * 获取最近的 block 祖先\n   * @param key\n   * @param returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getClosestBlock('hello'),\n   *   <block type=\"paragraph\" />\n   * );\n   * assertEqual(\n   *   element.getClosestBlock('hello'),\n   *   null\n   * );\n   * ```\n   */\n  public getClosestBlock(key: string): Block | null {\n    const path = this.getPath(key);\n    return path ? this.getClosestBlockByPath(path) : null;\n  }\n\n  /**\n   * 获取最近的 block 祖先\n   * @param path\n   * @param returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getClosestBlockByPath([0,0,0]),\n   *   <block type=\"paragraph\" />\n   * );\n   * assertEqual(\n   *   element.getClosestBlockByPath([]),\n   *   null\n   * );\n   * ```\n   */\n  public getClosestBlockByPath(path: Path): Block | null {\n    const closest = this.getClosestByPath(path, (n) => Block.isBlock(n));\n    if (closest?.isElement() && closest.isBlock()) {\n      return closest;\n    }\n    return null;\n  }\n\n  /**\n   * 获取最近的 block 祖先，如果节点本身就是 block，则返回节点\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\" key=\"hello-block\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getClosestBlockFromPoint('hello-block'),\n   *   <block type=\"paragraph\" />\n   * );\n   * assertEqual(\n   *   element.getClosestBlockFromPoint('hello'),\n   *   <block type=\"paragraph\" />\n   * );\n   * ```\n   */\n  public getClosestBlockFromPoint(key: string): Block | null {\n    const node = this.getNode(key);\n    if (node && node.isElement() && node.isBlock()) {\n      return node;\n    }\n    return this.getClosestBlock(key);\n  }\n\n  /**\n   * 获得最远的祖先\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\" key=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getFurthestAncestor('hello'),\n   *   <block type=\"container\" key=\"container-2\" />\n   * );\n   * assertEqual(\n   *   element.getFurthestAncestor('container-1'),\n   *   null,\n   * );\n   * ```\n   */\n  public getFurthestAncestor(key: string): Node | null {\n    const childPath = this.getPath(key);\n    if (!childPath || !childPath.length) {\n      return null;\n    }\n    const node = this.nodes[childPath[0]];\n    return node;\n  }\n\n  /**\n   * 获得最远的祖先\n   * @param key\n   * @throws NodeNotFoundError 节点不存在时，抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\" key=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertFurthestAncestor('hello'),\n   *   <block type=\"container\" key=\"container-2\" />\n   * );\n   * assert(\n   *   () =>element.assertFurthestAncestor('container-1'),\n   * ).toThrow();\n   * ```\n   */\n  public assertFurthestAncestor(key: string): Node {\n    const node = this.getFurthestAncestor(key);\n    return assertNode(node, 'assertFurthestAncestor', key);\n  }\n\n  /**\n   * 获得节点的偏移位置，以文本为单位测算\n   * @param key\n   * @returns\n   * @throws NodeNotFoundError 节点不存在时，抛错\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"paragraph\" key=\"world-block\">World</block>\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\" key=\"hello-block\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(element.getOffset('hello'), 5);\n   * assertEqual(element.getOffset('hello-block'), 5);\n   * assertEqual(element.getOffset('world-block'), 0);\n   * ```\n   */\n  public getOffset(key: string): number {\n    this.assertNode(key);\n\n    // Calculate the offset of the nodes before the highest child.\n    const child = this.getFurthestAncestor(key);\n    if (!child) {\n      return 0;\n    }\n    const childIndex = this.nodes.findIndex((n) => n === child);\n    const offset = this.nodes\n      .slice(0, childIndex)\n      .reduce((memo, n) => memo + n.text.length, 0);\n\n    return key === child.key\n      ? offset\n      : offset + (child.isElement() ? child.getOffset(key) : 0);\n  }\n\n  /**\n   * 获取父节点\n   * @param key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\" key=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getParent('hello'),\n   *   <block type=\"paragraph\" />\n   * );\n   *\n   * assertEqual(\n   *   element.getParent('container-1'),\n   *   null,\n   * );\n   * ```\n   */\n  public getParent(key: string) {\n    const path = this.getPath(key);\n    return this.getParentByPath(path);\n  }\n\n  /**\n   * 获取父节点\n   * @param key\n   * @returns\n   * @throws NodeNotFoundError 节点不存在时，抛错\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\" key=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertParent('hello'),\n   *   <block type=\"paragraph\" />\n   * );\n   * assert(() => element.assertParent('container-1')).toThrow();\n   * ```\n   */\n  public assertParent(key: string) {\n    const element = this.getParent(key);\n    return assertElement(element, 'assertParent', key);\n  }\n\n  /**\n   * 获取父节点\n   * @param path\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container-1\">\n   *    <block type=\"container\" key=\"container-2\">\n   *      <block type=\"paragraph\" key=\"paragraph\">\n   *        <text key=\"hello\">Hello</text>\n   *       </block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getParentByPath([0,0,0]),\n   *   <block type=\"paragraph\" />\n   * );\n   *\n   * assertEqual(\n   *   element.getParentByPath([]),\n   *   null,\n   * );\n   * ```\n   */\n  public getParentByPath(path: Path | null): Element | null {\n    if (!path || !path.length || !this.getNodeByPath(path)) {\n      return null;\n    }\n    const node = this.getNodeByPath(path.slice(0, -1));\n    if (node?.isElement()) {\n      return node;\n    }\n    return null;\n  }\n\n  /**\n   * 获取公共祖先\n   * @param a\n   * @param b\n   * @throws NodeNotFoundError 节点不存在，抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container\">\n   *    <block type=\"paragraph\" key=\"hello\">Hello</block>\n   *    <block type=\"container\">\n   *      <block type=\"paragraph\" key=\"world\">World</block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.assertCommonAncestor('hello', 'world'),\n   *   <block type=\"container\" key=\"container\" />\n   * );\n   * assertEqual(\n   *   element.assertCommonAncestor('container', 'world'),\n   *   <block type=\"container\" key=\"container\" />\n   * );\n   * assertEqual(\n   *   () => element.assertCommonAncestor('not-exists', 'hello'),\n   * ).toThrow();\n   * ```\n   */\n  public assertCommonAncestor(a: string, b: string) {\n    const element = this.getCommonAncestor(a, b);\n    return assertElement(element, 'assertCommonAncestor', `[${a}, ${b}]`);\n  }\n\n  /**\n   * 获取公共祖先\n   * @param a\n   * @param b\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container\">\n   *    <block type=\"paragraph\" key=\"hello\">Hello</block>\n   *    <block type=\"container\">\n   *      <block type=\"paragraph\" key=\"world\">World</block>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getCommonAncestor('hello', 'world'),\n   *   <block type=\"container\" key=\"container\" />\n   * );\n   * assertEqual(\n   *   element.getCommonAncestor('container', 'world'),\n   *   <block type=\"container\" key=\"container\" />\n   * );\n   * assertEqual(\n   *   element.getCommonAncestor('not-exists', 'hello'),\n   *   null,\n   * );\n   * ```\n   */\n  public getCommonAncestor(a: string, b: string) {\n    const aPath = this.getPath(a);\n    const bPath = this.getPath(b);\n    if (!aPath || !bPath) {\n      return null;\n    }\n    const node = this.getNodeByPath(Path.common(aPath, bPath));\n    return node?.isElement() ? node : null;\n  }\n\n  /**\n   * 获取 [`startKey`, `endKey`] 之间的所有 text\n   * @param startKey 起始 text key\n   * @param endKey   结束 text key\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container\">\n   *    <block type=\"paragraph\">\n   *      <text key=\"hello\">Hello</text>\n   *    </block>\n   *    <block type=\"paragraph\">\n   *      <text key=\"world\">World</text>\n   *    </block>\n   *    <block type=\"container\">\n   *      <block type=\"paragraph\">\n   *        <text key=\"cangjie\">Cangjie</text>\n   *      </block>\n   *    </block>\n   *    <block type=\"paragraph\">\n   *      <text key=\"footer\">Footer</text>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getTextsBetweenPositions('hello', 'cangjie'),\n   *   [\n   *     <text key=\"hello\">Hello</text>,\n   *     <text key=\"world\">World</text>,\n   *     <text key=\"cangjie\">Cangjie</text>,\n   *   ]\n   * );\n   * ```\n   */\n  public getTextsBetweenPositions(startKey: string, endKey: string): Text[] {\n    const startText = this.getNode(startKey);\n    if (!startText?.isText()) {\n      return [];\n    }\n    if (startKey === endKey) return [startText];\n    const endText = this.getNode(endKey);\n    if (!endText?.isText()) {\n      return [];\n    }\n\n    const texts = this.getTexts();\n    const start = texts.indexOf(startText);\n    const end = texts.indexOf(endText, start);\n    const result = texts.slice(start, end + 1);\n    return result;\n  }\n\n  /**\n   * 获取节点树下所有 text\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container\">\n   *    <block type=\"paragraph\">\n   *      <text key=\"hello\">Hello</text>\n   *    </block>\n   *    <block type=\"paragraph\">\n   *      <text key=\"world\">World</text>\n   *    </block>\n   *    <block type=\"container\">\n   *      <block type=\"paragraph\">\n   *        <text key=\"cangjie\">Cangjie</text>\n   *      </block>\n   *    </block>\n   *    <block type=\"paragraph\">\n   *      <text key=\"footer\">Footer</text>\n   *    </block>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getTexts(),\n   *   [\n   *     <text key=\"hello\">Hello</text>,\n   *     <text key=\"world\">World</text>,\n   *     <text key=\"cangjie\">Cangjie</text>,\n   *     <text key=\"footer\">Footer</text>\n   *   ]\n   * );\n   * ```\n   */\n  public getTexts(): Text[] {\n    const texts: Text[] = [];\n    this.forEachDescendant((node) => {\n      if (Text.isText(node)) {\n        texts.push(node);\n      }\n    });\n    return texts;\n  }\n\n  /**\n   * 获取节点树下所有 inline\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container\">\n   *    <inline type=\"link\">www.dingtalk.com</inline>\n   *    <block type=\"paragraph\">\n   *      <inline type=\"link\">www.dingding.com</inline>\n   *    </block>\n   *    <inline type=\"mention\" data={{name: 'john'}}/>\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getInlines(),\n   *   [\n   *     <inline type=\"link\">www.dingtalk.com</inline>,\n   *     <inline type=\"link\">www.dingding.com</type=\"link\">,\n   *     <inline type=\"mention\" data={{name: 'john'}}/>,\n   *   ]\n   * );\n   * ```\n   */\n  public getInlines() {\n    const inlines: Inline[] = [];\n    this.forEachDescendant((node) => {\n      if (Inline.isLeafInline(node)) {\n        inlines.push(node);\n      }\n    });\n    return inlines;\n  }\n\n  /**\n   * 获得节点树下所有类型为 `type` 的 inline\n   * @param type\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\" key=\"container\">\n   *    <inline type=\"link\">www.dingtalk.com</inline>\n   *    <block type=\"paragraph\">\n   *      <inline type=\"link\">www.dingding.com</inline>\n   *    </block>\n   *    <inline type=\"mention\" data={{name: 'john'}} />\n   *   </block>\n   * );\n   *\n   * assertEqual(\n   *   element.getInlinesByType('link'),\n   *   [\n   *     <inline type=\"link\">www.dingtalk.com</inline>,\n   *     <inline type=\"link\">www.dingding.com</type=\"link\">,\n   *   ]\n   * );\n   * ```\n   */\n  public getInlinesByType(type: string) {\n    const inlines: Inline[] = [];\n    this.forEachDescendant((node) => {\n      if (Inline.isLeafInline(node) && node.type === type) {\n        inlines.push(node);\n      }\n    });\n    return inlines;\n  }\n\n  /**\n   * Map 节点树的所有子孙\n   * @param map 节点映射函数\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\">Hello</block>\n   *     <block type=\"code\">const foo = 'bar';</block>\n   *     <block type=\"paragraph\">World</block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.mapDescendants(node => {\n   *   if (node.isElement() && node.type === \"paragraph\") {\n   *     return node.set('data', { highlight: true });\n   *   }\n   *   return node;\n   * })\n   *\n   * assertEqual(\n   *   newElement,\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\" data={{ highlight: true }}>Hello</block>\n   *     <block type=\"code\">const foo = 'bar';</block>\n   *     <block type=\"paragraph\" data={{ highlight: true }}>World</block>\n   *   </block>\n   * )\n   * ```\n   */\n  public mapDescendants(map: Iterator<Node, Node>) {\n    const newNodes = this.nodes.map((node) => {\n      let ret: Element | Node = node;\n      if (Element.isElement(ret)) {\n        ret = ret.mapDescendants(map);\n      }\n      return map(ret);\n    });\n\n    return this.set('nodes', newNodes);\n  }\n\n  /**\n   * 遍历自身树下所有子节点：遍历顺序为前序遍历\n   * @param iterator 遍历函数；如果返回 `false`，则停止遍历当前节点的子孙，防止冗余遍历引起的性能开销\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\">Hello</block>\n   *     <block type=\"code\">const foo = 'bar';</block>\n   *     <block type=\"paragraph\">World</block>\n   *   </block>\n   * );\n   *\n   * const paragraphs: Block[] = [];\n   * element.forEachDescendant(node => {\n   *   if (node.isElement()) {\n   *     if (node.type === \"paragraph\") {\n   *       paragraphs.push(node);\n   *     } else if (node.type === \"code\"){\n   *       // code 下不再有 paragraph，可以提前终止对 code 的遍历\n   *       return false;\n   *     }\n   *   }\n   * });\n   *\n   * assertEqual(\n   *   paragraphs,\n   *   <block type=\"paragraph\">Hello</block>\n   *   <block type=\"paragraph\">World</block>\n   * )\n   * ```\n   */\n  public forEachDescendant(iterator: Iterator<Node | Element, boolean | void>) {\n    let ret: boolean | null = null;\n\n    this.nodes.forEach((child) => {\n      if (iterator(child) === false) {\n        ret = false;\n        return;\n      }\n      if (Element.isElement(child)) {\n        ret = child.forEachDescendant(iterator);\n      }\n    });\n    return ret;\n  }\n\n  /**\n   * 判断子孙节点中，是否有符合条件的节点\n   * @param predicate 遍历函数, 相比 forEachDescendant 会降低节点遍历开销\n   * @returns {boolean}\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\">Hello</block>\n   *     <block type=\"code\">const foo = 'bar';</block>\n   *     <block type=\"paragraph\">World</block>\n   *   </block>\n   * );\n   *\n   * const hasCode = element.someDescendants(node => {\n   *   return node.isElement() && node.type === 'code';\n   * });\n   *\n   * const hasCard = element.someDescendants(node => {\n   *  return node.isElement() && node.type === 'card';\n   * })\n   *\n   * assertEqual(hasCode, true);\n   * assertEqual(hasCard, false);\n   * );\n   * ```\n   */\n  public someDescendant(predicate: Iterator<Node | Element, boolean | void>) {\n    return this.nodes.some((child) => {\n      if (predicate(child)) {\n        return true;\n      }\n      if (Element.isElement(child)) {\n        return child.someDescendant(predicate);\n      }\n      return false;\n    });\n  }\n  /**\n   * 过滤子孙，仅保留符合 `predicate` 断言的节点\n   * @param predicate\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\">Hello</block>\n   *     <block type=\"code\">const foo = 'bar';</block>\n   *     <block type=\"paragraph\">World</block>\n   *   </block>\n   * );\n   *\n   * const filtered = element.filterDescendants(node => {\n   *   return node.isElement() && node.type !== 'code';\n   * });\n   *\n   * assertEqual(\n   *   filtered,\n   *   [\n   *     <block type=\"paragraph\">Hello</block>,\n   *     <block type=\"paragraph\">World</block>\n   *   ]\n   * );\n   * ```\n   */\n  public filterDescendants(\n    predicate: Iterator<Node | Element, boolean>,\n  ): Node[] {\n    const descendants: Node[] = [];\n    this.nodes.forEach((node) => {\n      if (predicate(node)) {\n        descendants.push(node);\n      }\n      if (node instanceof Element) {\n        descendants.push(...node.filterDescendants(predicate));\n      }\n    });\n    return descendants;\n  }\n\n  /**\n   * 查找节点树满足 `predicate` 断言的子孙\n   * @param predicate\n   * @returns\n\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\">Hello</block>\n   *     <block type=\"code\">const foo = 'bar';</block>\n   *     <block type=\"paragraph\">World</block>\n   *   </block>\n   * );\n   *\n   * const code = element.findDescendant(node => {\n   *   return node.isElement() && node.type === 'code'\n   * });\n   *\n   * assertEqual(\n   *   code,\n   *   <block type=\"code\">const foo = 'bar';</block>\n   * );\n   * ```\n   */\n  public findDescendant(\n    predicate: Iterator<Node | Element, boolean>,\n  ): Node | null {\n    let found: Node | null = null;\n    this.forEachDescendant((node) => {\n      // if the node has been found, then don't assign value to it.\n      if (predicate(node) && !found) {\n        found = node;\n        return false;\n      }\n      return true;\n    });\n    return found;\n  }\n\n  /**\n   * 是否 `node` 位于节点子孙中\n   * @param node\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block type=\"container\">\n   *     <block type=\"paragraph\" key=\"hello\">Hello</block>\n   *   </block>\n   * );\n   *\n   * const hello = element.assertNode('hello');\n   * const root = element.assertNodeByPath([]);\n   * const cangjie = <block type=\"paragraph\">World</block>;\n   *\n   * assertTrue(element.contains(hello));\n   * assertFalse(element.contains(root));\n   * assertFlase(element.contains(cangjie));\n   * ```\n   */\n  public contains(node?: Node | null): boolean {\n    if (node) {\n      const found = this.findDescendant((child) => child === node);\n      if (found) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 替换节点子树中 `path` 位置的节点为 `node`\n   * @param path\n   * @param node\n   * @param noSpacialEffect 是否操作将影响空间，若不影响空间，将不进行 Key-to-Path Table 的重构\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world-block\">\n   *       <text key=\"world\">World</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.replaceNode(\n   *   [1],\n   *   <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   * );\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public replaceNode(path: Path, node: Node, noSpacialEffect = false): this {\n    let p = path;\n    let n = node;\n\n    if (noSpacialEffect && Element.isElement(node)) {\n      linkKeysToEdgesTable(this.getNodeByPath(path)! as Element, node);\n    }\n    while (p.length) {\n      const index = p[p.length - 1];\n      p = p.slice(0, -1);\n      const maybeParent = this.getNodeByPath(p);\n      const parent = assertElement(maybeParent, 'Element.replaceNode', p);\n      const nodes = [...parent.nodes];\n      nodes[index] = n;\n      n = parent.set('nodes', nodes);\n      if (noSpacialEffect) {\n        linkKeysToEdgesTable(parent, n as Element);\n      }\n    }\n\n    return n as this;\n  }\n\n  /**\n   * 在对应 `path` 的 text 节点的 `offset` 位置，为长度为 `length` 的区间添加 `mark`\n   *\n   * @param path\n   * @param offset 偏移位置\n   * @param length 文本区间长度\n   * @param mark\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">HelloWorld</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.addMark(\n   *   [0, 0],\n   *   5,\n   *   5,\n   *   Mark.craete('bold')\n   * );\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello<m type=\"world\">World</m></text>\n   *     </block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public addMark(path: Path, offset: number, length: number, mark: Mark) {\n    const maybeNode = this.getNodeByPath(path);\n    const node = assertText(maybeNode, 'Element.addMark', path);\n    return this.replaceNode(path, node.addMark(offset, length, mark), true);\n  }\n\n  /**\n   * 在对应 `path` 的 text 节点的 `offset` 位置，为长度为 `length` 的区间删除 `mark`\n   * @param path\n   * @param offset\n   * @param length\n   * @param mark\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *        <text key=\"hello\">Hello<m type=\"world\">World</m></text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.removeMark(\n   *   [0, 0],\n   *   5,\n   *   5,\n   *   Mark.craete('bold')\n   * );\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">HelloWorld</text>\n   *     </block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public removeMark(path: Path, offset: number, length: number, mark: Mark) {\n    const maybeTextNode = this.getNodeByPath(path);\n    const textNode = assertText(maybeTextNode, 'Element.addMark', path);\n    return this.replaceNode(\n      path,\n      textNode.removeMark(offset, length, mark),\n      true,\n    );\n  }\n\n  /**\n   * 在对应 `path` 的 text 节点的 `offset` 位置，为长度为 `length` 的区间设置 mark data\n   * @param path\n   * @param offset\n   * @param length\n   * @param mark\n   * @param properties\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *        <text key=\"hello\">Hello\n   *          <m type=\"world\" data={{ weight: 500 }}>World</m>\n   *        </text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.setMark(\n   *   [0, 0],\n   *   5,\n   *   5,\n   *   Mark.craete('bold'),\n   *   { data: { weight: 700 } }\n   * );\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *        <text key=\"hello\">Hello\n   *          <m type=\"world\" data={{ weight: 700 }}>World</m>\n   *        </text>\n   *     </block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public setMark(\n    path: Path,\n    offset: number,\n    length: number,\n    mark: Mark,\n    properties: Partial<MarkProperties>,\n  ) {\n    const maybeText = this.getNodeByPath(path);\n    const text = assertText(maybeText, 'Element.setMark', path);\n    return this.replaceNode(\n      path,\n      text.setMark(offset, length, mark, properties),\n      true,\n    );\n  }\n\n  /**\n   * 在对应 `path` 的 text 节点的 `offset` 位置，插入文本 `text`，并指定这段文本的 `marks`\n   * @param path\n   * @param offset\n   * @param text\n   * @param marks\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.insertText(\n   *   [0, 0],\n   *   5,\n   *   'World',\n   *   [Mark.craete('bold'), Mark.create('italic)],\n   * );\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       Hello\n   *       <m type=\"bold\"><m type=\"italic\">World</m></m>\n   *     </block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public insertText(path: Path, offset: number, text: string, marks: Mark[]) {\n    const maybeNode = this.getNodeByPath(path);\n    const node = assertText(maybeNode, 'Element.insertText', path);\n    return this.replaceNode(path, node.insertText(offset, text, marks), true);\n  }\n\n  /**\n   * 在对应 `path` 的 text 节点的 `offset` 位置，删除指定的文本 `text`\n   * @param path\n   * @param offset\n   * @param text\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @exmple\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">HelloWorld</block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.removeText(\n   *   [0, 0],\n   *   5,\n   *   'World'\n   * );\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public removeText(path: Path, offset: number, text: string) {\n    const maybeTextNode = this.getNodeByPath(path);\n    const textNode = assertText(maybeTextNode, 'Element.removeText', path);\n    return this.replaceNode(path, textNode.removeText(offset, text), true);\n  }\n\n  /**\n   * 在 `path` 位置插入节点 `node`\n   * @param path\n   * @param node\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.insertNode(\n   *   [1],\n   *   <block type=\"paragraph\" key=\"world\">World</block>\n   * );\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       <text key=\"hello\">Hello</text>\n   *     </block>\n   *     <block type=\"paragraph\" key=\"world\">World</block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public insertNode(path: Path, node: Node) {\n    const index = path[path.length - 1];\n    const parentPath = path.slice(0, -1);\n    const maybeParent = this.getNodeByPath(parentPath);\n    const parent = assertElement(maybeParent, 'Element.insertNode', path);\n    const nodes = [...parent.nodes];\n    nodes.splice(index, 0, node);\n    return this.replaceNode(parentPath, parent.set('nodes', nodes));\n  }\n\n  /**\n   * 删除节点子树中 `path` 位置的节点\n   * @param path\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"container\" key=\"container\">\n   *        <block type=\"paragraph\" key=\"world-block\">World</block>\n   *        <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.removeNode([1,0]);\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"container\" key=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public removeNode(path: Path) {\n    const node = this.getNodeByPath(path);\n    assertNode(node, 'Element.removeNode', path);\n\n    const index = path[path.length - 1];\n    const parentPath = path.slice(0, -1);\n    const maybeParent = this.getNodeByPath(parentPath);\n    const parent = assertElement(maybeParent, 'Element.insertNode', path);\n\n    const nodes = [...parent.nodes];\n    nodes.splice(index, 1);\n    return this.replaceNode(parentPath, parent.set('nodes', nodes));\n  }\n\n  /**\n   * 将 `path` 位置的节点，合并到其前一个兄弟节点\n   * @param path\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @throws Error 如果节点与兄弟节点类型不一致，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.mergeNode([1]);\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">\n   *       HelloWorld\n   *     </block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public mergeNode(path: Path) {\n    const maybeB = this.getNodeByPath(path);\n    const b = assertNode(maybeB, 'Element.mergeNode', path);\n\n    const lastIndex = path[path.length - 1];\n    if (lastIndex === 0) {\n      throw new Error(\n        `Unable to merge node because it has no previous sibling: ${b}`,\n      );\n    }\n\n    const withPath = Path.decrement(path);\n    const maybeA = this.getNodeByPath(withPath);\n    const aNode = assertNode(maybeA, 'Element.mergeNode', withPath);\n    const a = aNode.toSubType();\n\n    if (a.constructor !== b.constructor) {\n      throw new Error(\n        `Unable to merge two different kinds of nodes: ${a} and ${b}`,\n      );\n    }\n\n    const newNode = a.isText()\n      ? a.mergeText(b as Text)\n      : a.set('nodes', [...a.nodes, ...(b as Element).nodes]);\n\n    return this.removeNode(path).replaceNode(withPath, newNode);\n  }\n\n  /**\n   * 对指定 `path` 位置的节点在 `position` 处进行拆分\n   * @param path\n   * @param position 拆分位置。如果是 text 节点，代表文字的偏移量；如果是 element 节点，代表子节点 index\n   * @param properties 拆分 element 后，为拆分的节点设置 properties\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * // Split Element\n   * const elementSplitted = element.splitNode([0], 1, { data: { highlight: true } });\n   *\n   * assertEqual(newElement, (\n   *   <block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     </block>\n   *     <block type=\"container\" data={{ highlight: true }}>\n   *       <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     </block>\n   *   </block>\n   * ));\n   *\n   * // Split Text\n   * const textSplitted = element.splitNode([0,0], 3);\n   *\n   * assertEqual(newElement, (\n   *   <block>\n   *     <block type=\"container\">\n   *       <block type=\"paragraph\" key=\"hello-block\">\n   *         <text>Hel</text><text>lo</text></block>\n   *       </block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public splitNode(\n    path: Path,\n    position: number,\n    properties?: Partial<ElementProperties<D, N>>,\n  ) {\n    const maybeNode = this.getNodeByPath(path);\n    const n = assertNode(maybeNode, 'Element.splitNode', path);\n    const node = n.toSubType();\n\n    let a;\n    let b;\n    if (node.isText()) {\n      [a, b] = node.splitText(position);\n    } else {\n      const element = node;\n      const befores = element.nodes.slice(0, position);\n      const afters = element.nodes.slice(position);\n      a = element.set('nodes', befores);\n      b = element.set('nodes', afters).regenerateKey();\n    }\n\n    if (properties && !Text.isText(node)) {\n      b = b.merge(properties);\n    }\n    return this.removeNode(path).insertNode(path, b).insertNode(path, a);\n  }\n\n  /**\n   * 将 `path` 位置的节点移动到新的位置 `newPath`\n   * @param path\n   * @param newPath\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"container\" key=\"container\">\n   *        <block type=\"paragraph\" key=\"world-block\">World</block>\n   *        <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.moveNode([1,0], [1]);\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\">Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *     <block type=\"container\" key=\"container\">\n   *       <block type=\"paragraph\" key=\"cangjie-block\">Cangjie</block>\n   *     </block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public moveNode(path: Path, newPath: Path) {\n    const maybeNode = this.getNodeByPath(path);\n    const node = assertNode(maybeNode, 'Element.moveNode', path);\n\n    const newParentPath = newPath.slice(0, -1);\n    const newParent = this.getNodeByPath(newParentPath);\n    assertElement(newParent, 'Element.moveNode', path);\n\n    const isYounger = Path.isYounger(path, newPath);\n    const isSibling = Path.isSibling(path, newPath);\n\n    // If the old path ends above and before a node in the new path, then\n    // removing it will alter the target, so we need to adjust the new path.\n    if (isYounger && !isSibling) {\n      // eslint-disable-next-line no-param-reassign\n      newPath = Path.decrement(newPath, 1, path.length - 1);\n    }\n\n    return this.removeNode(path).insertNode(newPath, node);\n  }\n\n  /**\n   * 对指定 `path` 位置的节点设置属性\n   * @param path\n   * @param properties\n   * @throws NodeNotFoundError 如果节点路径错误，将抛错\n   * @returns\n   *\n   * @example\n   * ```tsx\n   * const element = (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\" data={{ highlight: true }}>Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * );\n   *\n   * const newElement = element.setNode([0], { data: { highlight: false } });\n   *\n   * assertEqual(newElement, (\n   *   <block key=\"own\">\n   *     <block type=\"paragraph\" key=\"hello-block\" data={{ highlight: false }}>Hello</block>\n   *     <block type=\"paragraph\" key=\"world-block\">World</block>\n   *   </block>\n   * ));\n   * ```\n   */\n  public setNode(path: Path, properties: Partial<ElementProperties<D, N>>) {\n    const maybeElement = this.getNodeByPath(path);\n    let element = assertElement(maybeElement, 'Element.setNode', path);\n    element = element.merge(properties);\n    return this.replaceNode(path, element, true);\n  }\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport Element, { ElementProperties } from './element';\nimport Text, { TextJSON } from './text';\nimport { SerializeOptions } from '../interfaces/serializable';\nimport Data from '../interfaces/data';\nimport keyUtils from '../utils/keyUtils';\n\n/**\n * @ignore\n */\nexport type InlineChildren = (Inline | Text)[];\n\nexport interface InlineProperties extends ElementProperties {\n  type: string;\n  nodes?: InlineChildren;\n}\n\nexport interface InlineJSON {\n  klass: 'inline';\n  key?: string;\n  type: string;\n  data?: Data;\n  nodes?: (TextJSON | InlineJSON)[];\n}\n\nexport default class Inline extends Element {\n  static create(properties: Inline | InlineProperties | string): Inline {\n    if (Inline.isInline(properties)) {\n      return properties as Inline;\n    }\n\n    let props = properties;\n    if (typeof props === 'string') {\n      props = { type: props };\n    }\n\n    if (isPlainObject(props)) {\n      const {\n        type,\n        key = keyUtils.create(),\n        data = {},\n        nodes = [Text.create()],\n      } = props;\n\n      if (typeof type !== 'string') {\n        throw new Error('`Inline.create` requires a `type` string.');\n      }\n\n      return new Inline({\n        type,\n        key,\n        data,\n        nodes,\n      });\n    }\n\n    throw new Error(\n      `\\`Inline.create\\` only accepts objects, string or blocks, but you passed it: ${props}`,\n    );\n  }\n\n  static childFromJSON(node: InlineJSON | TextJSON) {\n    const { klass } = node;\n    if (klass === 'inline') {\n      return Inline.fromJSON(node as InlineJSON);\n    }\n    if (klass === 'text') {\n      return Text.fromJSON(node as TextJSON);\n    }\n\n    throw new Error(\n      '`Inline.childFromJSON` requires a valid `klass`(inline|text) string.',\n    );\n  }\n\n  static fromJSON(json: InlineJSON): Inline {\n    const { nodes } = json;\n    return Inline.create({\n      ...json,\n      nodes: nodes ? nodes.map(Inline.childFromJSON) : undefined,\n    });\n  }\n\n  static isInline(maybeInline: any): maybeInline is Inline {\n    return maybeInline instanceof Inline;\n  }\n\n  /**\n   * 是否是叶子inline\n   */\n  static isLeafInline(maybeLeafInline: any): maybeLeafInline is Inline {\n    if (!this.isInline(maybeLeafInline)) {\n      return false;\n    }\n    for (const child of maybeLeafInline.nodes) {\n      if (child.isElement()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected constructor(props: Required<InlineProperties>) {\n    super(props);\n    const { type, nodes } = props;\n    this.type = type;\n    this.nodes = nodes;\n    this.freeze();\n  }\n\n  public readonly type: string;\n\n  public readonly nodes: InlineChildren;\n\n  public merge(props: Partial<InlineProperties>) {\n    return new Inline({\n      type: this.type,\n      key: this.key,\n      data: this.data,\n      nodes: this.nodes,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof InlineProperties>(\n    key: T,\n    value: Required<InlineProperties>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    const object: InlineJSON = {\n      klass: 'inline',\n      type: this.type,\n      data: { ...this.data },\n      nodes: this.nodes.map((node) => node.toJSON(options)),\n    };\n    if (options?.preserveKeys) {\n      object.key = this.key;\n    }\n    return object;\n  }\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\n\n/**\n * Models中存在循环引用，需要保证子类import在前，父类import在后\n * 依赖：Block -> Inline -> Element -> Text -> Node\n * import顺序： Inline -> Element -> Text -> Node\n */\nimport isPlainObject from 'is-plain-object';\nimport Inline, { InlineJSON } from './inline';\nimport Element, { ElementProperties } from './element';\nimport Text, { TextJSON } from './text';\nimport Node from './node';\nimport { SerializeOptions } from '../interfaces/serializable';\nimport Data from '../interfaces/data';\nimport keyUtils from '../utils/keyUtils';\n\nexport type BlockChild = Block | Inline | Text;\n\nexport type BlockChildren = BlockChild[];\n\nexport type BlockChildrenJSON = BlockJSON[] | Array<InlineJSON | TextJSON>;\n\nexport interface BlockProperties<D = Data, N extends Node[] = BlockChildren> extends ElementProperties<D, N> {\n  type: string;\n  nodes?: N;\n}\n\nexport interface BlockJSON<T = Data, N = BlockChildrenJSON> {\n  klass: 'block';\n  key?: string;\n  type: string;\n  data?: T;\n  nodes?: N;\n}\n\nexport default class Block<D = Data, N extends Node[] = BlockChildren> extends Element<D, N> {\n  static readonly DEFAULT_TYPE = 'paragraph';\n\n  static create<SD = Data, SN extends BlockChildren = BlockChildren>(\n    properties: Block<SD, SN> | BlockProperties<SD, SN> | string,\n  ) {\n    if (Block.isBlock(properties)) {\n      return properties;\n    }\n\n    const props: BlockProperties<SD, SN> = typeof properties === 'string' ? { type: properties } : properties;\n\n    if (isPlainObject(props)) {\n      const {\n        type,\n        key = keyUtils.create(),\n        data,\n        nodes = [Text.create()] as SN,\n      } = props;\n\n      if (typeof type !== 'string') {\n        throw new Error('`Block.create` requires a `type` string.');\n      }\n\n      return new Block<SD, SN>({\n        type,\n        key,\n        data: data as SD,\n        nodes,\n      });\n    }\n\n    throw new Error(\n      `\\`Block.create\\` only accepts objects, string or blocks, but you passed it: ${props}`,\n    );\n  }\n\n  static childFromJSON(node: BlockJSON | InlineJSON | TextJSON) {\n    const { klass } = node;\n    if (klass === 'block') {\n      return Block.fromJSON(node as BlockJSON);\n    }\n    return Inline.childFromJSON(node as InlineJSON | TextJSON);\n  }\n\n  static fromJSON(json: BlockJSON) {\n    const { nodes } = json;\n    return Block.create({\n      ...json,\n      // @ts-ignore\n      nodes: nodes ? nodes.map(Block.childFromJSON) : nodes,\n    });\n  }\n\n  static isBlock(maybeBlock: any): maybeBlock is Block {\n    return maybeBlock instanceof Block;\n  }\n\n  static isBlocks(maybeBlocks: any[]): maybeBlocks is Block[] {\n    return maybeBlocks.every(Block.isBlock);\n  }\n\n  /**\n   * 是否是叶子 block\n   */\n  static isLeafBlock(maybeLeafBlock: any): boolean {\n    const { nodes } = maybeLeafBlock;\n\n    if (!this.isBlock(maybeLeafBlock)) {\n      return false;\n    }\n\n    if (!nodes.length) {\n      return true;\n    }\n\n    const first = nodes[0];\n    return !this.isBlock(first);\n  }\n\n  /**\n   * 循环获取所有的叶子 block 节点\n   */\n  public static getBlocks(nodes: Node[]): Block[] {\n    return nodes.reduce((array, child) => {\n      if (!Block.isBlock(child)) {\n        return array;\n      }\n      if (!Block.isLeafBlock(child)) {\n        return array.concat(child.getBlocks());\n      }\n      array.push(child);\n\n      return array;\n    }, [] as Block[]);\n  }\n\n  /**\n   * 循环获取所有的满足指定 type 的叶子 block 节点\n   */\n  public static getBlocksByType(nodes: Node[], type: string): Block[] {\n    return nodes.reduce((array: Block[], node: Node) => {\n      if (!Block.isBlock(node)) {\n        return array;\n      } else if (Block.isLeafBlock(node) && node.type === type) {\n        array.push(node as Block);\n        return array;\n      } else {\n        return array.concat(node.getBlocksByType(type));\n      }\n    }, []);\n  }\n\n  protected constructor(props: Required<BlockProperties<D, N>>) {\n    super(props);\n    const { type } = props;\n    this.type = type;\n    this.freeze();\n  }\n\n  public readonly type: string;\n\n  public merge(props: Partial<BlockProperties<D, N>>) {\n    return new Block<D, N>({\n      type: this.type,\n      key: this.key,\n      data: this.data,\n      nodes: this.nodes,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof BlockProperties<D, N>>(\n    key: T,\n    value: Required<BlockProperties<D, N>>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  /**\n   * 自身的 nodes 中，是否有 block 类型的节点\n   */\n  public hasBlockChildren() {\n    return this.nodes.some((b) => Block.isBlock(b));\n  }\n\n  /**\n   * 获取自身树下所有的叶子 block 节点\n   */\n  public getBlocks(): Block[] {\n    return Block.getBlocks(this.nodes);\n  }\n\n  /**\n   * 循环获取所有的满足指定 type 的叶子 block 节点\n   */\n  public getBlocksByType(type: string): Block[] {\n    return Block.getBlocksByType(this.nodes, type);\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    const object: BlockJSON = {\n      klass: 'block',\n      type: this.type,\n      data: { ...this.data },\n      nodes: this.nodes.map((node) => node.toJSON(options)),\n    };\n\n    if (options?.preserveKeys) {\n      object.key = this.key;\n    }\n    return object;\n  }\n}\n","/**\n * @packageDocumentation\n * @module Controller\n */\nimport Change from './change';\nimport Plugin from './plugin';\nimport { ContextMenuLocale } from '../locale/contextMenu';\nimport Value, { ValueProperties } from '../models/value';\nimport { FlushType } from '../utils/flushtask';\nimport Operation from '../models/operation';\nimport { PendingQueueProps } from '../controller/pendingQueue';\nimport Selection from '../models/selection';\nimport { VirtualizeOptions } from '../virtualize/interface';\nimport { UUIDConfig } from '../plugins/uuid/types';\n\n/**\n * @ignore\n */\nexport interface ControllerConfigs {\n  /**\n   * 编辑器内核的 plugins 选项\n   */\n  plugins?: {\n    /**\n     * 右键菜单的国际化文案。\n     */\n    contextMenu?: ContextMenuLocale;\n    /**\n     * 移动端插件配置（选择菜单、放大镜）\n     */\n    mobile?: {\n      enableZoomer: boolean;\n    };\n  };\n  history?: {\n    /**\n     * undo 队列最大长度\n     */\n    maxHistorySize?: number;\n  };\n}\n\n/**\n * @ignore\n */\nexport type ChangeEventHandler = (change: Change) => void;\n\nexport interface ControllerProperties {\n  /**\n   * 业务ID。业务方自行通过constructor设置、自行使用\n   */\n  biz?: string;\n  /**\n   * 展示相应 uid 下的用户数据\n   */\n  dataUid?: string | number | undefined;\n  /**\n   * 插件集合\n   */\n  plugins?: Plugin[];\n  /**\n   * 文档的数据[[Value]]对象\n   */\n  value: Value;\n  /**\n   * onChange回调。业务方需要手动设置新的value到Provider中，调用编辑器重新渲染，用户才可以看到UI改变。\n   */\n  onChange?: ChangeEventHandler;\n  /**\n   * 是否是只读模式\n   */\n  readOnly?: boolean;\n  /**\n   * 是否禁用拷贝（仅在只读模式生效）\n   */\n  canCopy?: boolean;\n  /**\n   * 是否自动获取焦点\n   */\n  autoFocus?: boolean;\n  /**\n   * Controller 调度 flush 的方法\n   * - microtask: 使用微任务（Promise.then）进行调度\n   * - frametask: 使用浏览器 animationFrame 进行调度\n   * - idletask: 使用浏览器 idleCallback 进行调度\n   *\n   * WARN: Sometimes request idle callback in Safari will never be called! Please use frametask instead of idletask.\n   * @description 使用不同的调度类型会产生不同的上屏效果，microtask 执行的速度最快，但是在连续输入场景可能会出现时间阻塞，使用 idletask 可以获得\n   * 最佳的输入上屏体验。根据浏览器的支持程度，会对 flushType 进行降级，默认使用 microtask。\n   * @default 'microtask'\n   */\n  flushType?: FlushType;\n  /**\n   * 编辑器配置\n   *\n   * 目前提供的配置：移动端「复制粘贴」气泡的国际化文案配置\n   */\n  configs?: ControllerConfigs;\n  /**\n   * 编辑器 busy 状态变化\n   */\n  onBusyStateChange?: (isBusy: boolean) => void;\n  /**\n   * 变更进入 Pending 之后\n   */\n  onPending?: (value: Value) => void;\n}\n\nexport interface ControllerOptions {\n  normalize?: boolean;\n  enablePending?: EnablePendingConfig;\n  /** WARN: Test only */\n  __pendingQueue__?: Partial<PendingQueueProps>;\n  /** blur 时不显示所有 selection, 优先级低于 showCaret */\n  hideSelectionOnBlur?: boolean;\n  showCaret?: ShowCaretConfig;\n  /** uuid 配置 */\n  uuid?: UUIDConfig,\n  /** 虚拟化配置 */\n  virtualize?: VirtualizeOptions;\n}\n\nexport interface ShowCaretConfig {\n  onBlur?: boolean;\n  onReadOnly?: boolean;\n}\n\nexport enum PendingType {\n  input = 'input',\n  selection = 'selection',\n}\n\nexport type EnablePending = Partial<Record<PendingType, boolean>>;\n\nexport enum PendingConfigType {\n  input = 'input',\n  selection = 'selection',\n}\nexport type EnablePendingConfig = Partial<Record<PendingConfigType, boolean>> | boolean;\n\nexport interface OperationWithValue<T extends keyof ValueProperties = keyof ValueProperties> {\n  /** 若为 null，则为 `setValue` 全量变更 */\n  operation: Operation | null;\n  /** 变更前的 value */\n  value: Value;\n  /** 变更后的 value */\n  newValue: Value;\n  /** 设置的 value 属性 key */\n  key?: T;\n}\n\nexport interface Terminal {\n  range: Selection;\n}\n","import React, { useEffect, useCallback } from 'react';\nimport { Hot } from '../interfaces/hot';\nimport { Controller } from '..';\nimport { PendingType } from '../interfaces/controller';\n\n/**\n * 消费变更产生的热区\n * @param controller\n * @param onHots\n * @param pendingType\n * @param disabled 是否禁用监听 \n */\nexport default function useHots(\n  controller: Controller,\n  onHots: (hots: Hot[]) => void,\n  pendingType?: PendingType,\n  disabled?: boolean\n) {\n  useEffect(() => {\n    if (!controller.enableHots || disabled) {\n      return () => {};\n    }\n\n    const handleOnHots = (hots) => {\n      if (pendingType && controller.pendingType !== pendingType) {\n        return;\n      }\n\n      onHots(hots);\n    };\n\n    const sub = controller.hots$.subscribe(handleOnHots);\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [controller, onHots, pendingType, disabled]);\n}\n\n/**\n * 在下一帧时，消费变更产生的热区。当我们期望在热区重渲完成时，再消费热区信息时，可以使用这个 Hook.\n *\n * ## Example\n *\n * ```tsx\n * const Toolbar = props => {\n *   // 假设我们期望热区重渲完成后，获得热区对布局的影响\n *   const onHotsNextFrame = React.useCallback((hots) => {\n *     if (hots.find(hot => hot.node?.type === 'table-cell')) {\n *        const rects = getBoundingClientRect(domRef.current);\n *        // ...\n *     }\n *   }, []);\n *\n *   useHotsAtTheStartOfNextFrame(controller, onHotsNextFrame);\n * }\n * ```\n * @param controller\n * @param onHotsNextFrame\n * @param pendingType\n * @param disabled\n */\nexport function useHotsAtTheStartOfNextFrame(\n  controller: Controller,\n  onHotsNextFrame: (hots: Hot[]) => void,\n  pendingType?: PendingType,\n  disabled?: boolean,\n) {\n  const animId = React.useRef<number | null>(null);\n  const onHots = useCallback(\n    (hots: Hot[]) => {\n      animId.current = window.requestAnimationFrame(() => {\n        onHotsNextFrame(hots);\n      });\n    },\n    [onHotsNextFrame],\n  );\n\n  React.useEffect(() => {\n    return () => {\n      if (animId.current) {\n        window.cancelAnimationFrame(animId.current);\n      }\n    };\n  }, []);\n\n  useHots(controller, onHots, pendingType, disabled);\n}\n\n/**\n * 消费选区 Pending 的热区 \n * @param controller \n * @param onHots \n */\nexport function useSelectingHots(\n  controller: Controller,\n  onHots: (hots: Hot[]) => void,\n) {\n  useHots(controller, onHots, PendingType.selection);\n}\n\n/**\n * 在下一帧消费选区 Pending 的热区  \n * @param controller \n * @param onHotsNextFrame \n */\nexport function useSelectingHotsAtTheStartOfNextFrame(\n  controller: Controller,\n  onHotsNextFrame: (hots: Hot[]) => void,\n) {\n  useHotsAtTheStartOfNextFrame(controller, onHotsNextFrame, PendingType.selection);\n}\n\n/**\n * 消费输入 Pending 的热区 \n * @param controller \n * @param onHots \n */\nexport function useInputingHots(\n  controller: Controller,\n  onHots: (hots: Hot[]) => void,\n) {\n  useHots(controller, onHots, PendingType.input);\n}\n\n/**\n * 在下一帧消费输入 Pending 的热区 \n * @param controller \n * @param onHotsNextFrame \n */\nexport function useInputingHotsAtTheStartOfNextFrame(\n  controller: Controller,\n  onHotsNextFrame: (hots: Hot[]) => void,\n) {\n  useHotsAtTheStartOfNextFrame(controller, onHotsNextFrame, PendingType.input);\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport { debounce, noop } from 'lodash-es';\nimport { ControllerContext } from './index';\nimport Value from '../models/value';\nimport useHots from '../hooks/useHots';\n\nconst isSupportProxy = typeof Proxy !== 'undefined';\n\ninterface UseControllerOptions {\n  /** 最大延迟渲染周期，指定这个参数用来控制消费了 `useController` hook 的组件，跟随编辑器内容渲染的频度 */\n  maxPending?: number;\n}\n\n/**\n * 获得 Controller 实例，如果组件严格期望在编辑器内容变更后，不进行重渲，仅消费 Controller 实例，请使用 `useControllerStatic`\n * @param options \n * @returns \n */\nexport default function useController(options?: UseControllerOptions) {\n  const { maxPending = 0 } = options || {};\n  const context = React.useContext(ControllerContext);\n  if (!context) {\n    throw new Error(\n      \"The `useController` hook must be used inside the <Cangjie.Provider> component's context.\",\n    );\n  }\n\n  const isRendering = React.useRef(true);\n  isRendering.current = true;\n  React.useLayoutEffect(() => {\n    isRendering.current = false;\n  });\n\n  const [, forceRender] = React.useReducer((s) => s + 1, 0);\n  const hasConsumedValue = React.useRef(false);\n  const lastConsumedValue = React.useRef<Value | null>(null);\n  const controller = React.useMemo(() =>\n    !isSupportProxy\n      ? context.controller\n      : new Proxy(context.controller, {\n          get(ctrl, prop) {\n            if (prop === 'value' && isRendering.current) {\n              hasConsumedValue.current = true;\n              lastConsumedValue.current = ctrl[prop];\n            }\n            return ctrl[prop];\n          },\n        }),\n    [context.controller],\n  );\n\n  const debouncedRerender = React.useMemo(() => {\n    if (Number.isFinite(maxPending)) {\n       return debounce(forceRender, maxPending);\n    }\n    return noop;\n  }, [maxPending]);\n\n\n  React.useEffect(() => {\n    const sub = context.subject.subscribe(() => {\n      if (\n        (!isSupportProxy || hasConsumedValue.current)\n          && context.controller.value !== lastConsumedValue.current\n      ) {\n        forceRender();\n      }\n    });\n    return sub.unsubscribe;\n  }, [context]);\n\n  useHots(controller, debouncedRerender);\n\n  return controller;\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport Controller from '.';\nimport useController from './useController';\n\ninterface InjectedProps {\n  controller: Controller;\n}\n\nexport default function connectController<P extends InjectedProps>(\n  Component: React.ComponentType<P>,\n) {\n  return (props: Omit<P, 'controller'>) => {\n    const controller = useController();\n    // @ts-ignore\n    return <Component {...props} controller={controller} />;\n  };\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport Selection from '../models/selection';\nimport Data from '../interfaces/data';\nimport Path from './path';\nimport Node from './node';\nimport Mark from './mark';\n\nexport interface Properties {\n  type?: string;\n  data?: Data;\n}\n\nexport enum OperationType {\n  AddMark = 'add_mark',\n  InsertNode = 'insert_node',\n  InsertText = 'insert_text',\n  MergeNode = 'merge_node',\n  MoveNode = 'move_node',\n  RemoveMark = 'remove_mark',\n  RemoveNode = 'remove_node',\n  RemoveText = 'remove_text',\n  SetMark = 'set_mark',\n  SetNode = 'set_node',\n  SetSelection = 'set_selection',\n  SplitNode = 'split_node',\n}\n\ninterface OperationWithContext {\n  context?: string;\n}\n\nexport interface AddMarkOperation extends OperationWithContext {\n  type: OperationType.AddMark;\n  path: Path;\n  offset: number;\n  length: number;\n  mark: Mark;\n}\n\nexport interface InsertNodeOperation extends OperationWithContext {\n  type: OperationType.InsertNode;\n  path: Path;\n  node: Node;\n}\n\nexport interface InsertTextOperation extends OperationWithContext {\n  type: OperationType.InsertText;\n  path: Path;\n  offset: number;\n  text: string;\n  marks?: Mark[];\n}\n\nexport interface MergeNodeOperation extends OperationWithContext {\n  type: OperationType.MergeNode;\n  path: Path;\n  position: number;\n  properties: Properties;\n}\n\nexport interface MoveNodeOperation extends OperationWithContext {\n  type: OperationType.MoveNode;\n  path: Path;\n  newPath: Path;\n}\n\nexport interface RemoveMarkOperation extends Omit<AddMarkOperation, 'type'> {\n  type: OperationType.RemoveMark;\n}\n\nexport interface RemoveNodeOperation extends Omit<InsertNodeOperation, 'type'> {\n  type: OperationType.RemoveNode;\n}\n\nexport interface RemoveTextOperation extends Omit<InsertTextOperation, 'type'> {\n  type: OperationType.RemoveText;\n}\n\nexport interface SetMarkOperation extends OperationWithContext {\n  type: OperationType.SetMark;\n  path: Path;\n  offset: number;\n  length: number;\n  mark: Mark;\n  properties: Properties;\n}\n\nexport interface SetNodeOperation extends OperationWithContext {\n  type: OperationType.SetNode;\n  path: Path;\n  properties: Properties;\n  prevProperties: Properties;\n}\n\nexport interface SetSelectionOperation extends OperationWithContext {\n  type: OperationType.SetSelection;\n  selection: Selection;\n  prevSelection: Selection;\n}\n\nexport interface SplitNodeOperation extends Omit<MergeNodeOperation, 'type'> {\n  type: OperationType.SplitNode;\n}\n\ntype Operation =\n  | AddMarkOperation\n  | InsertNodeOperation\n  | InsertTextOperation\n  | MergeNodeOperation\n  | MoveNodeOperation\n  | RemoveMarkOperation\n  | RemoveNodeOperation\n  | RemoveTextOperation\n  | SetMarkOperation\n  | SetNodeOperation\n  | SetSelectionOperation\n  | SplitNodeOperation;\n\nexport type NonSetSelectionOperation = Exclude<\n  Operation,\n  SetSelectionOperation\n>;\n\n/**\n * op取反\n *\n * move_node 路径矫正说明：\n *\n * Given the document tree:\n * ```txt\n *         []\n *        / \\\n *     [0]   [1]\n *            |\n *          [1,0]\n *            |\n *         [1,0,0]\n *         __/ \\__\n * [1,0,0,0]      [1,0,0,1]\n * ```\n * case one:\n * ```ts\n * op.path = [0]\n * op.newPath = [1,0,0,1]\n * Path.isYounger([0], [1,0,0,1])   // true\n * // when path is been moved, the new path should decrement\n * Path.decrement([1,0,0,1], 1, 0) // [0,0,0,1]\n * // final inverted op: [0,0,0,1] -> [0]\n * ```\n * case two:\n * ```ts\n * op.path = [1,0,0,1]\n * op.newPath = [1]\n * Path.isAncestor([1], [1,0,0,1])   // true\n * // when move node to it's ancestor, the new path should increment\n * Path.increment([1,0,0,1], 1, 0) // [2,0,0,1]\n * // final inverted op: [2,0,0,1] -> [1]\n * ```\n */\nfunction invert(operation: Operation): Operation {\n  const { type } = operation;\n  if (type === 'add_mark') {\n    return {\n      ...operation,\n      type: 'remove_mark',\n    } as RemoveMarkOperation;\n  }\n  if (type === 'insert_node') {\n    return {\n      ...operation,\n      type: 'remove_node',\n    } as RemoveNodeOperation;\n  }\n  if (type === 'insert_text') {\n    return {\n      ...operation,\n      type: 'remove_text',\n    } as RemoveTextOperation;\n  }\n  if (type === 'merge_node') {\n    const { path } = operation as MergeNodeOperation;\n    const invertedPath = Path.decrement(path);\n    return {\n      ...operation,\n      type: 'split_node',\n      path: invertedPath,\n    } as SplitNodeOperation;\n  }\n  if (type === 'move_node') {\n    const { path, newPath } = operation as MoveNodeOperation;\n    if (Path.isEqual(path, newPath)) {\n      return operation;\n    }\n\n    let invertedPath = newPath;\n    let invertedNewPath = path;\n\n    const isSibling = Path.isSibling(path, newPath);\n    // If the node's old position was a left sibling of an ancestor of\n    // its new position, we need to adjust part of the path by -1.\n    // If the node's new position is an ancestor of the old position,\n    // or a left sibling of an ancestor of its old position, we need\n    // to adjust part of the path by 1.\n    if (!isSibling) {\n      const isYounger = Path.isYounger(path, newPath);\n      const isInvertedYounger = Path.isYounger(invertedPath, invertedNewPath);\n      const isInvertedAncestor = Path.isAncestor(invertedPath, invertedNewPath);\n\n      if (isYounger) {\n        invertedPath = Path.decrement(newPath, 1, path.length - 1);\n      } else if (isInvertedYounger || isInvertedAncestor) {\n        invertedNewPath = Path.increment(path, 1, newPath.length - 1);\n      }\n    }\n\n    return {\n      ...operation,\n      path: invertedPath,\n      newPath: invertedNewPath,\n    } as MoveNodeOperation;\n  }\n  if (type === 'remove_mark') {\n    return {\n      ...operation,\n      type: 'add_mark',\n    } as AddMarkOperation;\n  }\n  if (type === 'remove_node') {\n    return {\n      ...operation,\n      type: 'insert_node',\n    } as InsertNodeOperation;\n  }\n  if (type === 'remove_text') {\n    return {\n      ...operation,\n      type: 'insert_text',\n    } as InsertTextOperation;\n  }\n  if (type === 'set_mark') {\n    const { mark, properties } = operation as SetMarkOperation;\n    const invertedMark = mark.merge(properties);\n    const invertedProperties = Object.keys(properties).reduce(\n      (p, key) => ({ ...p, [key]: mark[key] }),\n      {},\n    );\n    return {\n      ...operation,\n      mark: invertedMark,\n      properties: invertedProperties,\n    } as SetMarkOperation;\n  }\n  if (type === 'set_node') {\n    const { properties, prevProperties } = operation as SetNodeOperation;\n    return {\n      ...operation,\n      properties: prevProperties || {},\n      prevProperties: properties,\n    } as SetNodeOperation;\n  }\n  if (type === 'set_selection') {\n    const { selection, prevSelection } = operation as SetSelectionOperation;\n    return {\n      ...operation,\n      selection: prevSelection,\n      prevSelection: selection,\n    } as SetSelectionOperation;\n  }\n  if (type === 'split_node') {\n    const { path } = operation as SplitNodeOperation;\n    const invertedPath = Path.increment(path);\n    return {\n      ...operation,\n      type: 'merge_node',\n      path: invertedPath,\n    } as MergeNodeOperation;\n  }\n  throw new Error(`Unknown operation type: \"${type}\".`);\n}\n\nconst Operation = {\n  invert,\n};\n\n// eslint-disable-next-line no-undef\nexport default Operation;\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport ImmutableRecord from './immutableRecord';\nimport Node from './node';\nimport Document from './document';\nimport Path from './path';\nimport { Serializable, SerializeOptions } from '../interfaces/serializable';\n\nexport interface PointProperties {\n  key: string;\n}\n\nexport interface PointJSON {\n  klass?: 'point';\n  key?: string;\n}\n\nexport interface TextPointProperties extends PointProperties {\n  offset: number;\n}\n\nexport interface TextPointJSON extends PointJSON {\n  offset: number;\n}\n\nexport interface EdgePointProperties extends PointProperties {\n  edge: PointEdge;\n}\n\nexport interface EdgePointJSON extends PointJSON {\n  edge: PointEdge;\n}\n\nexport type PointEdge = 'before' | 'after';\n\nconst PATH_CACHE = new WeakMap<Point, WeakMap<Document, Path | null>>();\n\nexport default abstract class Point extends ImmutableRecord\n  implements Serializable<PointJSON> {\n  static createFromParams(key: string, where: number | PointEdge) {\n    if (typeof where === 'number') {\n      return TextPoint.create({\n        key,\n        offset: where,\n      });\n    } else {\n      return EdgePoint.create({\n        key,\n        edge: where,\n      });\n    }\n  }\n\n  static create(props: PointProperties | Point) {\n    if (props instanceof Point) {\n      return props.toSubType();\n    }\n    if ('edge' in props) {\n      return EdgePoint.create(props as EdgePointProperties);\n    } else {\n      return TextPoint.create(props as TextPointProperties);\n    }\n  }\n\n  static fromJSON(json: TextPointJSON | EdgePointJSON) {\n    if ('offset' in json) {\n      return TextPoint.fromJSON(json as TextPointJSON);\n    }\n    return EdgePoint.fromJSON(json as EdgePointJSON);\n  }\n\n  public readonly key: string;\n\n  public abstract get viewKey(): string;\n\n  constructor(props: PointProperties) {\n    super();\n    const { key } = props;\n    this.key = key;\n  }\n\n  /**\n   * 创建一个新的 Point，并移到 node 的第一个子节点的起始位置\n   */\n  public moveToStartOfNode(node: Node) {\n    const firstNode = node.getFirstNode();\n    return TextPoint.create({\n      key: firstNode.key,\n      offset: 0,\n    });\n  }\n\n  /**\n   * 创建一个新的 Point，并移到 node 的最后一个子节点的终点位置\n   */\n  public moveToEndOfNode(node: Node) {\n    const lastNode = node.getLastNode();\n    return TextPoint.create({\n      key: lastNode.key,\n      offset: lastNode.text.length,\n    });\n  }\n\n  /**\n   * 是否在 node 的第一个节点的起始位置\n   */\n  public abstract isAtStartOfNode(node: Node): boolean;\n\n  /**\n   * 是否在 node 的最后一个节点的终点位置\n   */\n  public abstract isAtEndOfNode(node: Node): boolean;\n\n  public isTextPoint(): this is TextPoint {\n    return this instanceof TextPoint;\n  }\n\n  public isEdgePoint(): this is EdgePoint {\n    return this instanceof EdgePoint;\n  }\n\n  public moveBackward(): TextPoint | EdgePoint {\n    return this.toSubType();\n  }\n\n  public moveForward(): TextPoint | EdgePoint {\n    return this.toSubType();\n  }\n\n  private toSubType(): TextPoint | EdgePoint {\n    if (this.isTextPoint()) {\n      return this;\n    } else if (this.isEdgePoint()) {\n      return this;\n    }\n    throw new Error(`Target is not a valid point: ${this}`);\n  }\n\n  public convertToTextPoint(document: Document) {\n    const point = this.toSubType();\n    if (point.isTextPoint()) {\n      return point;\n    }\n    const node = document.getNode(this.key);\n    let textNode: Node | null | undefined =\n      point.edge === EdgePoint.BEFORE\n        ? node?.getFirstText()\n        : node?.getLastText();\n    if (!textNode) {\n      textNode =\n        point.edge === EdgePoint.BEFORE\n          ? document.getFirstNode()\n          : document.getLastNode();\n    }\n    const { key } = textNode;\n    const offset = point.edge === EdgePoint.BEFORE ? 0 : textNode?.text.length;\n    return TextPoint.create({\n      key,\n      offset,\n    });\n  }\n\n  /**\n   * 是否在 node 内部\n   */\n  public isInNode(node: Node) {\n    if (node.isText() && node.key === this.key) return true;\n    if (node.isElement() && node.getNode(this.key)) return true;\n    return false;\n  }\n\n  // NOTE: point.getPathIn(document) === document.getPath(point.key)\n  // PERF: ~5ms in Huge Document story\n  //       Why do not memoize `document.getPath`? Node's path will not be re-get frequently, but Point's path does.\n  public getPathIn(document: Document) {\n    if (!PATH_CACHE.has(this)) {\n      PATH_CACHE.set(this, new WeakMap());\n    }\n    const DOCUMENT_TO_PATH_CACHE = PATH_CACHE.get(this)!;\n    if (!DOCUMENT_TO_PATH_CACHE.has(document)) {\n      DOCUMENT_TO_PATH_CACHE.set(document, document.getPath(this.key));\n    }\n    return DOCUMENT_TO_PATH_CACHE.get(document)!;\n  }\n\n  public abstract toJSON(options?: SerializeOptions): PointJSON;\n}\n\nexport class TextPoint extends Point {\n  static create(props: TextPoint | TextPointProperties): TextPoint {\n    if (props instanceof TextPoint) {\n      return props;\n    }\n\n    if (isPlainObject(props)) {\n      const { key, offset } = props;\n      return new TextPoint({\n        key,\n        offset,\n      });\n    }\n\n    throw new Error(\n      `\\`Point.create\\` only accepts objects or points, but you passed it: ${props}`,\n    );\n  }\n\n  static fromJSON(json: TextPointJSON) {\n    return TextPoint.create({\n      ...json,\n      key: json.key || 'NONE',\n    });\n  }\n\n  public readonly offset: number;\n\n  public get viewKey() {\n    return `${this.key}-${this.offset}`;\n  }\n\n  private constructor(props: TextPointProperties) {\n    super(props);\n    const { offset } = props;\n    this.offset = offset;\n    this.freeze();\n  }\n\n  /**\n   * 把 offset 加 n，并返回一个新的 Point。\n   * @n 移动的个数，可以为正/负值，默认为 1；如果 n=0，则返回自身。\n   */\n  public moveForward(n = 1): TextPoint {\n    if (n === 0) {\n      return this;\n    }\n    if (n < 0) {\n      return this.moveBackward(-n);\n    }\n    return this.set('offset', this.offset + n);\n  }\n\n  /**\n   * 把 offset 减 n，并返回一个新的 Point。\n   * @n 移动的个数，可以为正/负值，默认为 1；如果 n=0，则返回自身。\n   */\n  public moveBackward(n = 1): TextPoint {\n    if (n === 0) {\n      return this;\n    }\n    if (n < 0) {\n      return this.moveForward(-n);\n    }\n    return this.set('offset', this.offset - n);\n  }\n\n  /**\n   * 创建一个新的 Point\n   * @offset 默认是 0\n   */\n  public moveTo(key: string, offset = 0) {\n    return this.merge({\n      key,\n      offset,\n    });\n  }\n\n  /**\n   * 是否在 node 的第一个节点的起始位置\n   */\n  public isAtStartOfNode(node: Node) {\n    if (this.offset !== 0) return false;\n\n    const first = node.getFirstNode();\n    return this.key === first.key;\n  }\n\n  /**\n   * 是否在 node 的最后一个节点的终点位置\n   */\n  public isAtEndOfNode(node: Node) {\n    const last = node.getLastNode();\n    return this.key === last.key && this.offset === last.text.length;\n  }\n\n  public merge(props: Partial<TextPointProperties>) {\n    return new TextPoint({\n      key: this.key,\n      offset: this.offset,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof TextPointProperties>(\n    key: T,\n    value: TextPointProperties[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    const object: TextPointJSON = {\n      klass: 'point',\n      offset: this.offset,\n    };\n\n    if (options?.preserveKeys) {\n      object.key = this.key;\n    }\n\n    return object;\n  }\n}\n\nexport class EdgePoint extends Point {\n  static readonly BEFORE = 'before';\n\n  static readonly AFTER = 'after';\n\n  static create(props: EdgePoint | EdgePointProperties): EdgePoint {\n    if (props instanceof EdgePoint) {\n      return props;\n    }\n\n    if (isPlainObject(props)) {\n      const { key, edge } = props;\n      return new EdgePoint({\n        key,\n        edge,\n      });\n    }\n\n    throw new Error(\n      `\\`Point.create\\` only accepts objects or points, but you passed it: ${props}`,\n    );\n  }\n\n  static fromJSON(json: EdgePointJSON) {\n    return EdgePoint.create({\n      ...json,\n      key: json.key || 'NONE',\n    });\n  }\n\n  public readonly edge: PointEdge;\n\n  public get viewKey() {\n    return `${this.key}-${this.edge}`;\n  }\n\n  private constructor(props: EdgePointProperties) {\n    super(props);\n    const { edge } = props;\n    this.edge = edge;\n    this.freeze();\n  }\n\n  /**\n   * 是否在 node 的第一个节点的起始位置\n   */\n  public isAtStartOfNode(node: Node) {\n    return this.key === node.key && this.edge === EdgePoint.BEFORE;\n  }\n\n  /**\n   * 是否在 node 的最后一个节点的终点位置\n   */\n  public isAtEndOfNode(node: Node) {\n    return this.key === node.key && this.edge === EdgePoint.AFTER;\n  }\n\n  public merge(props: Partial<EdgePointProperties>) {\n    return new EdgePoint({\n      key: this.key,\n      edge: this.edge,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof EdgePointProperties>(\n    key: T,\n    value: EdgePointProperties[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    const object: EdgePointJSON = {\n      klass: 'point',\n      edge: this.edge,\n    };\n\n    if (options?.preserveKeys) {\n      object.key = this.key;\n    }\n\n    return object;\n  }\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nexport default {\"trie\":\"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\",\"classes\":{\"Other\":0,\"Prepend\":1,\"CR\":2,\"LF\":3,\"Control\":4,\"Extend\":5,\"Regional_Indicator\":6,\"SpacingMark\":7,\"L\":8,\"V\":9,\"T\":10,\"LV\":11,\"LVT\":12,\"ZWJ\":13,\"ExtPict\":14}}","/**\n * @packageDocumentation\n * @ignore\n */\nimport UnicodeTrie from 'unicode-trie';\nimport classesmjs from './classes-v13.0.0';\n\nconst {\n  trie,\n} = classesmjs;\nconst {\n  Other,\n  Prepend,\n  CR,\n  LF,\n  Control,\n  Extend,\n  Regional_Indicator,\n  SpacingMark,\n  L,\n  V,\n  T,\n  LV,\n  LVT,\n  ZWJ,\n  ExtPict,\n} = classesmjs.classes;\n\nlet data: ArrayBuffer | null = null;\nif (typeof window !== 'undefined') {\n  const bin = window.atob(trie);\n  data = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; i++) data[i] = bin.charCodeAt(i);\n} else {\n  data = Buffer.from(trie, 'base64');\n}\n// console.log(data, data.length)\nconst classTrie = new UnicodeTrie(data);\n\nconst codePointAt = function (str, idx) { // different from String#codePointAt with low surrogate\n  const code = str.charCodeAt(idx);\n  // High surrogate\n  if (code >= 0xD800 && code <= 0xDBFF) {\n    const hi = code;\n    const low = str.charCodeAt(idx + 1);\n    if ((low >= 0xDC00 && low <= 0xDFFF)) {\n      return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n    }\n    return hi;\n  }\n  // Low surrogate\n  if (code >= 0xDC00 && code <= 0xDFFF) {\n    const hi = str.charCodeAt(idx - 1);\n    const low = code;\n    if ((hi >= 0xD800 && hi <= 0xDBFF)) {\n      return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n    }\n    return low;\n  }\n  return code;\n};\n\nconst isSurrogate = function (str, pos) {\n  let ref;\n  let ref1;\n  // eslint-disable-next-line no-return-assign\n  return ((ref = str.charCodeAt(pos)) >= 0xd800 && ref <= 0xdbff) && ((ref1 = str.charCodeAt(pos + 1)) >= 0xdc00 && ref1 <= 0xdfff);\n};\n\nconst BreakType = {\n  NotBreak: 0,\n  BreakStart: 1,\n  Break: 2,\n  BreakLastRegional: 3,\n  BreakPenultimateRegional: 4,\n};\n\n// Returns whether a break is allowed within a sequence of grapheme breaking classes\nconst shouldBreak = function (reverse, start, mid, end) {\n  const all = [start].concat(mid).concat([end]);\n  const previous = reverse ? start : all[all.length - 2];\n  const next = reverse ? all[1] : end;\n\n  // Lookahead terminator for:\n  // GB12. ^ (RI RI)* RI × RI\n  // GB13. [^RI] (RI RI)* RI × RI\n  const rIIndex = all.lastIndexOf(Regional_Indicator);\n  if (rIIndex > 0 && all.slice(1, rIIndex).every(c => c === Regional_Indicator) && (previous !== Prepend && previous !== Regional_Indicator)) {\n    if (all.filter(c => c === Regional_Indicator).length % 2 === 1) {\n      return BreakType.BreakLastRegional;\n    }\n    return BreakType.BreakPenultimateRegional;\n\n  }\n  // GB3. CR X LF\n  if (previous === CR && next === LF) {\n    return BreakType.NotBreak;\n  }\n  // GB4. (Control|CR|LF) ÷\n  if (previous === Control || previous === CR || previous === LF) {\n    // return BreakType.BreakStart\n    if (next !== Extend && mid.every(c => c === Extend)) {\n      return BreakType.Break;\n    }\n    return BreakType.BreakStart;\n\n  }\n  // GB5. ÷ (Control|CR|LF)\n  if (next === Control || next === CR || next === LF) {\n    return BreakType.BreakStart;\n  }\n  // GB6. L X (L|V|LV|LVT)\n  if (previous === L && (next === L || next === V || next === LV || next === LVT)) {\n    return BreakType.NotBreak;\n  }\n  // GB7. (LV|V) X (V|T)\n  if ((previous === LV || previous === V) && (next === V || next === T)) {\n    return BreakType.NotBreak;\n  }\n  // GB8. (LVT|T) X (T)\n  if ((previous === LVT || previous === T) && next === T) {\n    return BreakType.NotBreak;\n  }\n  // GB9.0 X (Extend|ZWJ)\n  if (reverse) {\n    if (next === Extend) {\n      return BreakType.NotBreak;\n    }\n    if (next === ZWJ) {\n      if (previous == Other && mid.length > 0 && mid[0] == ZWJ) {\n        return end != ExtPict ? BreakType.BreakStart : BreakType.Break;\n      }\n      return BreakType.NotBreak;\n    }\n  } else if (next === Extend || next === ZWJ) {\n    return BreakType.NotBreak;\n  }\n  // GB9.1 X SpacingMark\n  if (next === SpacingMark) {\n    return BreakType.NotBreak;\n  }\n  // GB9.2 Prepend X\n  if (previous === Prepend) {\n    return BreakType.NotBreak;\n  }\n  // GB11.0 ExtPict Extend * ZWJ × ExtPict\n  if (reverse) {\n    if (previous == ZWJ && next == ExtPict && (start == ZWJ || start == Other)) {\n      return BreakType.NotBreak;\n    }\n  } else if (start == ExtPict && previous == ZWJ && next == ExtPict) {\n    return BreakType.NotBreak;\n  }\n\n  // GB12. ^ (RI RI)* RI × RI\n  // GB13. [^RI] (RI RI)* RI × RI\n  if (!reverse && mid.indexOf(Regional_Indicator) >= 0) {\n    return BreakType.Break;\n  }\n  if (previous === Regional_Indicator && next === Regional_Indicator) {\n    return BreakType.NotBreak;\n  }\n  // GB999. Any ÷ Any\n  return BreakType.BreakStart;\n};\n\nconst getUnicodeByteOffset = function (str, start, unicodeOffset) {\n  while (unicodeOffset--) {\n    start += isSurrogate(str, start) ? 2 : 1;\n  }\n  return start;\n};\n\n// Returns the next grapheme break in the string after the given index\nfunction nextBreak(string, index = 0) {\n  if (index < 0) {\n    return 0;\n  }\n  if (index >= string.length - 1) {\n    return string.length;\n  }\n  const prev = classTrie.get(string.codePointAt(index));\n  const mid: any[] = [];\n  let i;\n  let j;\n  let ref;\n  // eslint-disable-next-line no-multi-assign\n  for (i = j = index + 1, ref = string.length; j < ref; i = j += 1) {\n    if (isSurrogate(string, i - 1)) {\n      // check for already processed low surrogates\n      continue;\n    }\n    const next = classTrie.get(string.codePointAt(i));\n    if (shouldBreak(false, prev, mid, next)) {\n      return i;\n    }\n    mid.push(next);\n  }\n  return string.length;\n}\n\n// Returns the next grapheme break in the string before the given index\nfunction previousBreak(string, index = string.length) {\n  if (index > string.length) {\n    return string.length;\n  }\n  if (index <= 1) {\n    return 0;\n  }\n  index--;\n  const mid: any[] = [];\n  const next = classTrie.get(codePointAt(string, index));\n  let i;\n  let j;\n  // eslint-disable-next-line no-multi-assign\n  for (i = j = index - 1; j >= -1; i = j += -1) {\n    if (isSurrogate(string, i)) {\n      // check for already processed high surrogates\n      continue;\n    }\n    const prev = classTrie.get(codePointAt(string, i));\n    switch (shouldBreak(true, prev, mid, next)) {\n      case BreakType.Break:\n        return i + mid.length + 1;\n      case BreakType.BreakStart:\n        return i + 1;\n      case BreakType.BreakLastRegional:\n        // eslint-disable-next-line no-case-declarations\n        const offset = getUnicodeByteOffset(string, i, mid.concat(next).lastIndexOf(Regional_Indicator) + 1);\n        return offset;\n      case BreakType.BreakPenultimateRegional:\n        return getUnicodeByteOffset(string, i, mid.concat(next).lastIndexOf(Regional_Indicator));\n    }\n    mid.unshift(prev);\n  }\n}\n\n// Breaks the given string into an array of grapheme cluster strings\nfunction breaks(str) {\n  const res: any[] = [];\n  let index = 0;\n  let brk;\n  // eslint-disable-next-line no-cond-assign\n  while ((brk = nextBreak(str, index)) < str.length) {\n    res.push(str.slice(index, brk));\n    index = brk;\n  }\n  if (index < str.length) {\n    res.push(str.slice(index));\n  }\n  return res;\n}\n\n// Returns the number of grapheme clusters there are in the given string\nfunction countBreaks(str) {\n  let count = 0;\n  let index = 0;\n  let brk;\n  // eslint-disable-next-line no-cond-assign\n  while ((brk = nextBreak(str, index)) < str.length) {\n    index = brk;\n    count++;\n  }\n  if (index < str.length) {\n    count++;\n  }\n  return count;\n}\n\nexport default {\n  nextBreak,\n  previousBreak,\n  break: breaks,\n  countBreaks,\n};","/**\n * @packageDocumentation\n * @ignore\n */\nimport GraphemeBreaker from './grapheme/GraphemeBreaker';\n\nconst SURROGATE_START = 0xd800;\nconst SURROGATE_END = 0xdfff;\nconst SPACE = /\\s/;\n/**\n * 标点的定义各家不统一\n * 部分常用标点可以在 https://www.ascii-code.com/ 上查看\n * 目前至少确保标准键盘能输入的标点\n */\nconst PUNCTUATION = /[\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E\\u00A1-\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E3B\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65\\uFFE5]/;\n\nfunction isChineseChar(char: string) {\n  return /[\\u3400-\\u9FBF]/.test(char);\n}\n\nfunction isValidString(str: string) {\n  return typeof str === 'string' && str !== '';\n}\n\nfunction isPunc(char: string) {\n  return PUNCTUATION.test(char);\n}\n\n// 当满足以下条件时，认为是同一类型：\n// 1. 都是「标点/SPACE」或都不是「标点/SPACE」\n// 2. 都是中文或都不是中文\nfunction isSameCharType(charA: string, charB: string) {\n  return isValidString(charA) &&\n    isValidString(charB) &&\n    isWord(charA) === isWord(charB) &&\n    isChineseChar(charA) === isChineseChar(charB);\n}\n\nfunction getNextLetter(str: string, i: number, reverse?: boolean): string {\n  let nextBreak: number;\n  if (!str || i < 0 || i > str.length) return '';\n\n  if (reverse) {\n    nextBreak = GraphemeBreaker.previousBreak(str, i);\n    return str.substring(nextBreak, i);\n  }\n\n  nextBreak = GraphemeBreaker.nextBreak(str, i);\n  return str.substring(i, nextBreak);\n}\n\nfunction countBreaks(str: string, i: number, reverse?: boolean): number {\n  if (!str || i < 0 || i > str.length) return 0;\n  const start = reverse ? i : 0;\n  const end = reverse ? str.length : i;\n  const text = str.substring(start, end);\n  return GraphemeBreaker.countBreaks(text);\n}\n\nfunction isSurrogate(code: number) {\n  return SURROGATE_START <= code && code <= SURROGATE_END;\n}\n\nfunction isWord(char: string) {\n  if (SPACE.test(char)) {\n    return false;\n  }\n\n  if (PUNCTUATION.test(char)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getCharOffset(text: string, offset: number, reverse?: boolean) {\n  return getNextLetter(text, offset, reverse).length;\n}\n\nfunction getCharOffsetBackward(text: string, offset: number) {\n  return getNextLetter(text, offset, true).length || 1;\n}\n\nfunction getCharOffsetForward(text: string, offset: number) {\n  return getNextLetter(text, offset).length || 1;\n}\n\n// 在搜索结果处处理Unicode，避免光标focus到Unicode中间\nfunction getCharRange(text: string, offset: number): [number, number] {\n  let start = 0;\n  while (start <= offset) {\n    const end = start + getCharOffsetForward(text, start);\n    if (end > offset) {\n      return [start, end];\n    }\n    start = end;\n  }\n  return [start, start + Math.min(text.length, 1)];\n}\n\nfunction getWordRange(text: string, offset: number) {\n  if (!text) {\n    return [0, 0];\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  offset = Math.min(offset, text.length);\n\n  const charAtOffset = text[offset];\n  const lastChar = text[offset - 1];\n  const nextChar = text[offset + 1];\n  let end = 0;\n  let start = 0;\n\n  // 当前字符不为空时，至少选中该字符\n  if (isValidString(charAtOffset)) {\n    end = 1;\n  }\n\n  // 当前字符为空时，说明在文本末尾需要 backward 遍历\n  // backward 遍历，找到词的后半部分的长度\n  if (\n    !isValidString(charAtOffset) ||\n    isSameCharType(lastChar, charAtOffset)\n  ) {\n    start = getWordOffsetBackward(text, offset);\n  }\n\n  // 当前字符为空或当前字符和前一字符同类型时\n  // forward 遍历，找到词的前半部分的长度\n  if (isSameCharType(nextChar, charAtOffset)) {\n    end = getWordOffsetForward(text, offset);\n  }\n\n  return [offset - start, offset + end];\n}\n\nfunction getWordOffset(text: string, offset: number, reverse?: boolean) {\n  let length = 0;\n  let i = offset;\n  let char = getNextLetter(text, i, reverse);\n  const curChar = char;\n\n  while (isSameCharType(char, curChar)) {\n    length += char.length;\n    if (reverse) {\n      i -= char.length;\n    } else {\n      i += char.length;\n    }\n    char = getNextLetter(text, i, reverse);\n  }\n\n  // 如果没有迭代到字符，至少保证选中前一个字符\n  return length || char.length;\n}\n\n// 计算光标以 word 为单位时移动的偏移量\nfunction getMoveWordOffset(text: string, offset: number, reverse?: boolean) {\n  let char = getNextLetter(text, offset, reverse);\n  if (!isValidString(char)) {\n    return 0;\n  }\n\n  let delta = 0;\n  let i = offset;\n\n  // 参考原生实现: 直接跳过光标附近的 SPACE\n  while (SPACE.test(char)) {\n    if (reverse) {\n      i -= char.length;\n      delta -= 1;\n    } else {\n      i += char.length;\n      delta += 1;\n    }\n    char = getNextLetter(text, i, reverse);\n  }\n\n  return Math.abs(delta) + getWordOffset(text, offset + delta, reverse);\n}\n\nfunction getWordOffsetBackward(text: string, offset: number) {\n  const o = getWordOffset(text, offset, true);\n  return o;\n}\n\nfunction getWordOffsetForward(text: string, offset: number) {\n  const o = getWordOffset(text, offset);\n  return o;\n}\n\nfunction graphemesBreak(text: string): string[] {\n  return GraphemeBreaker.break(text);\n}\n\n\nconst NEWLINE = '\\n';\nconst SECLINE = '\\r';\nconst SIMPLE_SPACE = String.fromCharCode(32);\nexport const spaceUniCode = {\n  nbsp: '\\u00a0',\n  zwnj: '\\u200c',\n  zwj: '\\u200d',\n}\n/**\n *  处理字符串中的特殊字符\n * \n *  1. 单独 \\r 或 \\r\\n 效果类似 \\n ，有折行效果\n *     \\r\\r 或 \\n\\n， 有隔行效果\n *  2. &nbsp; 替换成普通空格，移除 &zwnj;、&zwj 零宽字符\n * */\nexport function normalizeText(text: string): string {\n  let result = '';\n  for (let i = text.length - 1; i >= 0; i--) {\n    if (text[i] === NEWLINE) {\n      if (text[i - 1] === SECLINE) {\n        i--;\n      }\n      result = NEWLINE + result;\n      continue;\n    }\n    if (text[i] === SECLINE) {\n      result = NEWLINE + result;\n      continue;\n    }\n    if (text[i] === spaceUniCode.nbsp) {\n      result = SIMPLE_SPACE + result;\n      continue;\n    }\n    if (text[i] === spaceUniCode.zwnj || text[i] === spaceUniCode.zwj) {\n      continue;\n    }\n    result = text[i] + result;\n  }\n  return result;\n}\n\nexport default {\n  countBreaks,\n  getNextLetter,\n  getCharOffset,\n  getCharOffsetBackward,\n  getCharOffsetForward,\n  getCharRange,\n  getWordRange,\n  getWordOffset,\n  getMoveWordOffset,\n  getWordOffsetBackward,\n  getWordOffsetForward,\n  isSurrogate,\n  isWord,\n  isPunc,\n  isChineseChar,\n  graphemesBreak,\n  normalizeText,\n};\n","function isValidElement(el: Element | Node | null): el is Element {\n  return (el !== null &&\n  el.nodeType === Node.ELEMENT_NODE &&\n  !(el as Element).getAttribute('data-cangjie-content'));\n}\n\n/**\n * Find closest ancestor\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n * @returns\n */\nexport default function findClosestInContent(el: Element | Node | null, selector: string): Element | null {\n  do {\n    if (Element.prototype.matches.call(el, selector)) return el as Element;\n    el = el!.parentElement || el!.parentNode;\n  } while (\n   isValidElement(el)\n  );\n  return null;\n}\n","/**\n * @packageDocumentation\n * @module constants\n */\n\nexport const CUSTOM_MIME_TYPES = {\n  FRAGMENT: 'application/x-cangjie-fragment',\n  PACKAGE: 'application/x-cangjie-fragment-pack',\n  SYNC: 'application/x-hetu-sync',\n  DOCKEY: 'application/x-doc-key',\n  REFBLOCK: 'application/x-refblock',\n  ENCRYPTION: 'application/x-cangjie-encryption',\n  APPLICATION_VSCODE: 'vscode-editor-data',\n}\n\nexport const MIME_TYPES = {\n  HTML: 'text/html',\n  TEXT: 'text/plain',\n  ...CUSTOM_MIME_TYPES,\n};\n\nexport const EVENTS = [\n  'onAction',\n  'onChange',\n  'onCangjieFocus',\n  'onCangjieBlur',\n  'onCangjieInput',\n  'onCangjieSelect',\n  'onCangjieCopy',\n  'onCangjieCut',\n  'onCangjiePaste',\n  'onCangjieComposingChange',\n  'onClick',\n  'onCopy',\n  'onCut',\n  'onPaste',\n  'onKeyDown',\n  'onKeyUp',\n  'onMouseDown',\n  'onMouseMove',\n  'onMouseUp',\n  'onTouchStart',\n  'onTouchMove',\n  'onTouchEnd',\n  'onContextMenu',\n  'onDragStart',\n  'onDragOver',\n  'onDrop',\n  'onDragEnter',\n];\n\n/**\n * 光标宽度\n */\nexport const CURSOR_WIDTH = 2;\n\n/**\n * Edge 光标的最大高度\n */\nexport const CURSOR_EDGE_MAX_HEIGHT = 21;\n\n/**\n * Edge 光标和元素之间的偏移量\n */\nexport const CURSOR_EDGE_OFFSET = 1;\n\nexport const CANGJIE_EMPTY = '\\uFEFF';\n\n/**\n * 选区颜色\n */\nexport const CANGJIE_SELECTION_COLOR = 'rgba(1, 134, 251, 0.3)';\n\n/**\n * 空行时最小宽度\n */\nexport const CANGJIE_SELECTION_EMPTY_WIDTH = 4;\n\n/**\n * Blur的选区颜色\n */\nexport const CANGJIE_SELECTION_INACTIVE_COLOR = 'rgba(136, 136, 136, 0.3)';\n\nexport const Z_INDEX_CONTEXTMENU = 10000;\n\nexport const Selector = {\n  key: 'data-cangjie-key',\n  content: 'data-cangjie-content',\n  edgeSelectable: 'data-cangjie-edge-selectable',\n  editable: 'data-cangjie-editable',\n  void: 'data-cangjie-void',\n  leaf: 'data-cangjie-leaf',\n  leafBlock: 'data-cangjie-leaf-block',\n  nonSelect: 'data-cangjie-non-select',\n  notEditable: 'data-cangjie-not-editable',\n  dockey: 'data-cangjie-dockey',\n  selectionLayer: 'data-cangjie-selection-layer',\n  selectionWrapper: 'data-cangjie-selection-wrapper',\n  groupBlock: 'data-cangjie-group-block',\n  groupKey: 'data-cangjie-group-key',\n  hoverWrapper: 'data-hover-box',\n  uuid: 'data-block-uuid',\n};\n\n/**\n * 默认 undo 队列最大长度限制\n */\nexport const MAX_HISTORY_SIZE = 100;\n\n/** 仓颉 Group 折叠 key */\nexport const GROUP_COLLAPSED_KEY = 'cangjieGroupCollpased';\n","/**\n * @packageDocumentation\n * @module domUtils\n */\nimport Controller from '../../controller/index';\nimport { TextPoint } from '../../models/point';\nimport { CANGJIE_EMPTY, Selector } from '../../constants';\nimport keyUtils from '../keyUtils';\nimport findClosestInContent from './findClosestInContent';\n\n/**\n * 根据浏览器的节点和位置获取仓颉对应的 Point。\n */\nfunction findPoint(\n  nativeNode: Node | null,\n  nativeOffset: number,\n  controller: Controller,\n) {\n  if (!nativeNode) {\n    return null;\n  }\n\n  const node =\n    nativeNode instanceof Text\n      ? nativeNode.parentElement\n      : nativeNode;\n  if (!(node instanceof Element)) {\n    return null;\n  }\n\n  const { document } = controller.value;\n\n  let leaf: Element | null;\n  if (node.getAttribute(Selector.void)) {\n    // 原本这里有一层「判断 node 内部是否存在 leaf 节点，不存在才继续」的逻辑\n    // 由于 hetu 等插件内部可能嵌套了编辑器，且 key 不可控，可能与宿主重复，造成问题（选区异常 or 页面奔溃）\n    // 因此这里去掉 `!isLeaf` 判断\n    const key = node.getAttribute(Selector.key);\n    if (!key) {\n      return null;\n    }\n    const voidNode = document.getNode(key);\n    if (!voidNode) {\n      return null;\n    }\n    const text = voidNode.getFirstText();\n    if (!text) {\n      return null;\n    }\n    return TextPoint.create({\n      key: text.key,\n      offset: 0,\n    });\n  } else {\n    leaf = node.getAttribute(`[${Selector.leaf}]`)\n      ? node\n      : findClosestInContent(node, `[${Selector.leaf}]`);\n  }\n\n  if (!leaf) {\n    return null;\n  }\n\n  const [key, offset] = keyUtils.parse(\n    leaf.getAttribute(Selector.key) || '',\n  );\n\n  const text = document.getNode(key);\n  if (!text) {\n    return null;\n  }\n  // NOTE: what if user data has just one `CANGJIE_EMPTY` character?\n  const nativeText = leaf.textContent && leaf.textContent !== CANGJIE_EMPTY\n    ? leaf.textContent.slice(0, nativeOffset)\n    : '';\n  return TextPoint.create({\n    key,\n    offset: offset + nativeText.length,\n  });\n}\n\nexport default findPoint;\n","/**\n * @packageDocumentation\n * @module domUtils\n */\nimport Controller from '../../controller/index';\nimport Selection from '../../models/selection';\nimport findPoint from './findPoint';\n\n/**\n * 根据浏览器的 Range 获取仓颉的 Selection\n */\nfunction findRange(native: Range, controller: Controller) {\n  const {\n    startContainer,\n    startOffset,\n    endContainer,\n    endOffset,\n    collapsed,\n  } = native;\n  const start = findPoint(startContainer, startOffset, controller);\n  const end = collapsed\n    ? start\n    : findPoint(endContainer, endOffset, controller);\n  if (!start || !end) {\n    return null;\n  }\n  return Selection.create({ anchor: start, focus: end });\n}\n\nexport default findRange;\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport findClosestInContent from './findClosestInContent';\nimport textUtils from '../textUtils';\nimport findRange from './findRange';\nimport Controller from '../../controller';\nimport Selection from '../../models/selection';\nimport Point, { EdgePoint } from '../../models/point';\nimport { CANGJIE_EMPTY, Selector } from '../../constants';\n\ninterface ClosestRect {\n  contentNode: Element;\n  contentRect: DOMRect;\n}\n\nconst isPointOnLeftOfRect = (x: number, _, rect: DOMRect) => x < rect.left;\nconst isPointOnRightOfRect = (x: number, _, rect: DOMRect) => x > rect.right;\nconst isPointOnTopOfRect = (_, y: number, rect: DOMRect) => y < rect.top;\nconst isPointOnBottomOfRect = (_, y: number, rect: DOMRect) => y > rect.bottom;\nconst isPointHorzInsideRect = (x: number, _, rect: DOMRect) =>\n  x >= rect.left && x <= rect.right;\nconst isPointVertInsideRect = (_, y: number, rect: DOMRect) =>\n  y >= rect.top && y <= rect.bottom;\nconst isPointInsideRect = (x: number, y: number, rect: DOMRect) => {\n  return isPointHorzInsideRect(x, y, rect) && isPointVertInsideRect(x, y, rect);\n};\n\nconst isPointOnRightOfRectNonStrict = (x, _, rect) => x > rect.left;\nconst isPointOnLeftOfRectNonStrict = (x, _, rect) => x < rect.right;\n\n// 认为是同一行的阈值：重叠部分占矮的高度的百分比（magic number: 上下标的重叠比例）\nconst SAME_LINE_THRESHOLD = 0.4;\nexport const isRectOnSameLineOfRect = (newRect: Pick<DOMRect, 'bottom' | 'top' | 'height'>, rect: Pick<DOMRect, 'bottom' | 'top' | 'height'>) => {\n  // 底边对齐\n  if (newRect.bottom === rect.bottom) {\n    return true;\n  }\n  // 无交集\n  if (newRect.top > rect.bottom || rect.top > newRect.bottom) {\n    return false;\n  }\n\n  // 重叠部分\n  // eg. 表情 + 文字：可能是包含 or 部分重叠关系\n  const smallerHeight = Math.min(rect.height, newRect.height);\n  const overlap = Math.min(newRect.bottom, rect.bottom) - Math.max(newRect.top, rect.top);\n  return smallerHeight === 0 || overlap / smallerHeight > SAME_LINE_THRESHOLD;\n};\n\nconst APPROXIMATE_THEREHOLD = 1e-5; // 近似相等的阈值，误差小于此则认为相等\nconst approximateEqual = (a: number, b: number) => Math.abs(a - b) < APPROXIMATE_THEREHOLD;\n\n// 此类都是非严格判断，只检测同一个方位的边界\nconst isRectOnLeftOfRect = (\n  newRect: DOMRect,\n  newContentNode: Element,\n  prevClosestRect: ClosestRect,\n) => {\n  return (\n    newRect.left < prevClosestRect.contentRect.left ||\n    (newRect.left === prevClosestRect.contentRect.left &&\n      newContentNode.compareDocumentPosition(prevClosestRect.contentNode) ===\n        Node.DOCUMENT_POSITION_FOLLOWING)\n  );\n};\nconst isRectOnRightOfRect = (\n  newRect: DOMRect,\n  newContentNode: Element,\n  prevClosestRect: ClosestRect,\n) => {\n  // 某些 win 触屏机下，inline 元素与右侧的空 Text 渲染的位置有重叠，存在细微的误差\n  // https://aone.alibaba-inc.com/v2/project/897543/bug/41731721#\n  return (\n    newRect.right > prevClosestRect.contentRect.right + APPROXIMATE_THEREHOLD ||\n    (approximateEqual(newRect.right, prevClosestRect.contentRect.right) &&\n      newContentNode.compareDocumentPosition(prevClosestRect.contentNode) ===\n        Node.DOCUMENT_POSITION_PRECEDING)\n  );\n};\n\nconst isRectOnTopOfRect = (\n  newRect: DOMRect,\n  newContentNode: Element,\n  prevClosestRect: ClosestRect,\n) => {\n  return (\n    newRect.top < prevClosestRect.contentRect.top ||\n    (newRect.top === prevClosestRect.contentRect.top &&\n      newContentNode.compareDocumentPosition(prevClosestRect.contentNode) ===\n        Node.DOCUMENT_POSITION_FOLLOWING)\n  );\n};\n\nconst isRectOnBottomOfRect = (\n  newRect: DOMRect,\n  newContentNode: Element,\n  prevClosestRect: ClosestRect,\n) => {\n  return (\n    newRect.bottom > prevClosestRect.contentRect.bottom ||\n    (newRect.top === prevClosestRect.contentRect.bottom &&\n      newContentNode.compareDocumentPosition(prevClosestRect.contentNode) ===\n        Node.DOCUMENT_POSITION_PRECEDING)\n  );\n};\n\nconst getHorzDistance = (x, _, rect) => {\n  return Math.min(Math.abs(x - rect.left), Math.abs(x - rect.right));\n};\n\nfunction getClosestAncestorWithBiggerHorizontalRect(element: Element) {\n  const rect = element.getBoundingClientRect();\n  let parent = element.parentElement;\n  while (parent) {\n    const parentRect = parent.getBoundingClientRect();\n    if (parentRect.left < rect.left && parentRect.right > rect.right) {\n      return parent;\n    }\n    parent = parent.getAttribute(Selector.content)\n      ? null\n      : parent.parentElement;\n  }\n  return null;\n}\n\nfunction* getSeletableBlocksFromElement(element: Element) {\n  const edgeSelectableAncestor = element.closest(`[${Selector.edgeSelectable}]`);\n  if (edgeSelectableAncestor) {\n    yield edgeSelectableAncestor;\n  }\n  const edgeSelectableDescendants = element.querySelectorAll(`[${Selector.edgeSelectable}]`);\n  if (!edgeSelectableDescendants) {\n    return;\n  }\n  for (const descendant of Array.from(edgeSelectableDescendants)) {\n    yield descendant;\n  }\n}\n\nfunction* getRectsFromElement(element: Element) {\n  // TODO: 处理点击 content 外元素时的定位逻辑，后续有更好的方案可移除\n  const isNonSelect = element.getAttribute(Selector.nonSelect);\n  const elementParent = findClosestInContent(element, `[${Selector.leafBlock}]`) || element.parentElement || element;\n  const targetElement = isNonSelect ? elementParent : element;\n  const cangjieLeafs = targetElement.querySelectorAll(`span[${Selector.leaf}]`);\n\n  for (let i = 0; i < cangjieLeafs.length; i += 1) {\n    const cangjieLeaf = cangjieLeafs[i];\n    yield {\n      contentNode: cangjieLeaf,\n      contentRects: Array.from(cangjieLeaf.getClientRects()),\n    };\n  }\n  const cangjieVoids = targetElement.querySelectorAll(`[${Selector.void}]`);\n  for (let i = 0; i < cangjieVoids.length; i += 1) {\n    const cangjieVoid = cangjieVoids[i];\n    yield {\n      contentNode: cangjieVoid,\n      contentRects: [cangjieVoid.getBoundingClientRect()],\n    };\n  }\n}\n\nfunction findClosestRectsInElement(element: Element, x: number, y: number) {\n  let closestBelow: ClosestRect | null = null;\n  let closestLeft: ClosestRect | null = null;\n  let closestRight: ClosestRect | null = null;\n  let closestTop: ClosestRect | null = null;\n\n  for (const rect of getRectsFromElement(element)) {\n    const { contentNode } = rect;\n    for (let index = 0; index < rect.contentRects.length; index++) {\n      const contentRect = rect.contentRects[index];\n      if (!contentRect) {\n        continue;\n      }\n      if (isPointInsideRect(x, y, contentRect)) {\n        return { exactTarget: contentNode };\n      }\n      if (isPointOnTopOfRect(x, y, contentRect)) {\n        let found = false;\n        // 现在左下、正下、右下都算 closestBelow\n        // 多个 rect 都符合 closestBelow 条件的时候，需要取我们最需要的那个\n        if (!closestBelow) {\n          // 之前没有 closestBelow 的时候，没有对比，设置它为 closestBelow\n          found = true;\n        } else if (isRectOnSameLineOfRect(contentRect, closestBelow.contentRect)) {\n          // 之前的 closestBelow 和现在的 rect 处于同一条直线上时\n          // 通过检查左右距离确定最终取哪个\n          const prevExactBelow = isPointHorzInsideRect(\n            x,\n            y,\n            closestBelow.contentRect,\n          );\n          const newExactBelow = isPointHorzInsideRect(x, y, contentRect);\n          const prevDistance = getHorzDistance(x, y, closestBelow.contentRect);\n          const newDistance = getHorzDistance(x, y, contentRect);\n\n          // 原先处于正下方，就是同行最优先的结果，不用再更新\n          // 原先不处于正下方，现在处于正下方，需要更新\n          // 两次都不处于正下方，使用距离更短的那个作为最终结果\n          if (\n            !prevExactBelow &&\n            (newExactBelow || newDistance < prevDistance)\n          ) {\n            found = true;\n          }\n        } else if (isRectOnTopOfRect(contentRect, contentNode, closestBelow)) {\n          // 之前的 closestBelow 和现在的 rect 不处于同一条直线上时\n          // 取位置更高的，即纵向上更靠近的作为 closestBelow\n          found = true;\n        }\n        if (found) {\n          closestBelow = {\n            contentRect,\n            contentNode,\n          };\n        }\n      } else if (isPointOnBottomOfRect(x, y, contentRect)) {\n        let found = false;\n        if (!closestTop) {\n          found = true;\n        } else if (isRectOnSameLineOfRect(contentRect, closestTop.contentRect)) {\n          const prevExactTop = isPointHorzInsideRect(\n            x,\n            y,\n            closestTop.contentRect,\n          );\n          const newExactTop = isPointHorzInsideRect(x, y, contentRect);\n          const prevDistance = getHorzDistance(x, y, closestTop.contentRect);\n          const newDistance = getHorzDistance(x, y, contentRect);\n\n          if (!prevExactTop && (newExactTop || newDistance < prevDistance)) {\n            found = true;\n          }\n        } else if (isRectOnBottomOfRect(contentRect, contentNode, closestTop)) {\n          found = true;\n        }\n        if (found) {\n          closestTop = {\n            contentRect,\n            contentNode,\n          };\n        }\n      } else if (\n        isPointVertInsideRect(x, y, contentRect) &&\n        isPointOnRightOfRectNonStrict(x, y, contentRect) &&\n        (!closestLeft ||\n          isRectOnRightOfRect(contentRect, contentNode, closestLeft))\n      ) {\n        closestLeft = {\n          contentRect,\n          contentNode,\n        };\n      } else if (\n        isPointVertInsideRect(x, y, contentRect) &&\n        isPointOnLeftOfRectNonStrict(x, y, contentRect) &&\n        (!closestRight ||\n          isRectOnLeftOfRect(contentRect, contentNode, closestRight))\n      ) {\n        closestRight = {\n          contentRect,\n          contentNode,\n        };\n      }\n    }\n  }\n\n  return {\n    closestBelow,\n    closestLeft,\n    closestRight,\n    closestTop,\n  };\n}\n\nfunction binarySearchOffset(\n  textNode: Text,\n  mouseX: number,\n  mouseY: number,\n  rangeStart: number,\n  rangeEnd: number,\n  textLength: number,\n) {\n  const range = document.createRange();\n  if (rangeEnd - rangeStart > 1) {\n    const offset = Math.floor((rangeStart + rangeEnd) / 2);\n    try {\n      range.setStart(textNode, offset);\n      range.setEnd(textNode, Math.max(Math.min(offset, textLength), 0));\n    } catch (error) {\n      return rangeStart;\n    }\n\n    // getClientBoundingRect不保险，在iOS10下结果不对\n    const rect = range.getClientRects()[0];\n    if (!rect) {\n      return rangeStart;\n    }\n    if (mouseY < rect.top) {\n      return binarySearchOffset(\n        textNode,\n        mouseX,\n        mouseY,\n        rangeStart,\n        offset,\n        textLength,\n      );\n    }\n    if (mouseY > rect.bottom) {\n      return binarySearchOffset(\n        textNode,\n        mouseX,\n        mouseY,\n        offset,\n        rangeEnd,\n        textLength,\n      );\n    }\n    if (mouseX <= rect.left + rect.width) {\n      return binarySearchOffset(\n        textNode,\n        mouseX,\n        mouseY,\n        rangeStart,\n        offset,\n        textLength,\n      );\n    }\n    return binarySearchOffset(\n      textNode,\n      mouseX,\n      mouseY,\n      offset,\n      rangeEnd,\n      textLength,\n    );\n  }\n\n  const [offsetStart, offsetEnd] = textUtils.getCharRange(\n    textNode.textContent!,\n    rangeStart,\n  );\n  try {\n    range.setStart(textNode, offsetStart);\n    range.setEnd(textNode, Math.max(Math.min(offsetEnd, textLength), 0));\n  } catch (error) {\n    return offsetStart;\n  }\n\n  const rangeRects = Array.from(range.getClientRects());\n  const rect = rangeRects.find((r) => r.width > 0) || rangeRects[0];\n  if (!rect) {\n    return offsetStart;\n  }\n  if (mouseY < rect.top) {\n    return offsetStart;\n  }\n  if (mouseY > rect.bottom) {\n    return offsetEnd;\n  }\n  if (mouseX <= rect.left + rect.width / 2) {\n    return offsetStart;\n  }\n  return offsetEnd;\n}\n\nfunction caretPointFromTargetAndCoord({\n  eventTarget,\n  mouseX,\n  mouseY,\n  adjustedX,\n  adjustedY,\n}: {\n  eventTarget: Element;\n  mouseX: number;\n  mouseY: number;\n  adjustedX: number;\n  adjustedY: number;\n}) {\n  let target = eventTarget;\n  let [x, y] = [adjustedX, adjustedY];\n  for (const node of getSeletableBlocksFromElement(target)) {\n    const rect = node.getBoundingClientRect();\n    const parent = getClosestAncestorWithBiggerHorizontalRect(node);\n    // 检查 eventTarget 是否在 node 的左侧和右侧\n    if (\n      !parent ||\n      isPointHorzInsideRect(mouseX, mouseY, rect) ||\n      !isPointVertInsideRect(mouseX, mouseY, rect)\n    ) {\n      continue;\n    }\n    // 如果 eventTarget 在父元素内部，才算命中（处理表格等情况）\n    const parentRect = parent.getBoundingClientRect();\n    const parentStyle = window.getComputedStyle(parent);\n    // 父元素的 margin 也需要计算在内（排版等情况，用的是 margin）\n    const parentLeft = parentRect.left - parseInt(parentStyle.marginLeft, 10);\n    const parentRight = parentRect.right + parseInt(parentStyle.marginRight, 10);\n    if (x >= parentLeft && x <= parentRight) {\n      const edge = x > rect.left ? EdgePoint.AFTER : EdgePoint.BEFORE;\n      return {\n        node,\n        edge,\n      };\n    }\n  }\n\n  let closestLeftEdge: number | undefined;\n  let closestRightEdge: number | undefined;\n  if (\n    !findClosestInContent(target, `span[${Selector.leaf}]`) &&\n    !findClosestInContent(target, `[${Selector.void}]`)\n  ) {\n    const {\n      exactTarget,\n      closestBelow,\n      closestLeft,\n      closestRight,\n      closestTop,\n    } = findClosestRectsInElement(target, x, y);\n    closestLeftEdge = closestLeft?.contentRect.right;\n    closestRightEdge = closestRight?.contentRect.left;\n\n    if (exactTarget) {\n      target = exactTarget;\n    } else if (closestBelow && closestLeft) {\n      if (isRectOnSameLineOfRect(closestBelow.contentRect, closestLeft.contentRect)) {\n        y = closestBelow.contentRect.top;\n        target = closestBelow.contentNode;\n      } else {\n        x = closestLeft.contentRect.right;\n        target = closestLeft.contentNode;\n      }\n    } else if (closestBelow && closestRight) {\n      if (\n        isRectOnSameLineOfRect(closestBelow.contentRect, closestRight.contentRect)\n      ) {\n        y = closestBelow.contentRect.top;\n        target = closestBelow.contentNode;\n      } else {\n        x = closestRight.contentRect.left;\n        target = closestRight.contentNode;\n      }\n    } else if (closestLeft) {\n      x = closestLeft.contentRect.right;\n      target = closestLeft.contentNode;\n    } else if (closestRight) {\n      x = closestRight.contentRect.left;\n      target = closestRight.contentNode;\n    } else if (closestBelow) {\n      // 如果不是正下方，是左下方或者右下方\n      // 则x坐标需要进行左移或者右移\n      if (isPointOnLeftOfRect(x, y, closestBelow.contentRect)) {\n        x = closestBelow.contentRect.left;\n      } else if (isPointOnRightOfRect(x, y, closestBelow.contentRect)) {\n        x = closestBelow.contentRect.right;\n      }\n      y = closestBelow.contentRect.top;\n      target = closestBelow.contentNode;\n    } else if (closestTop) {\n      if (isPointOnLeftOfRect(x, y, closestTop.contentRect)) {\n        x = closestTop.contentRect.left;\n      } else if (isPointOnRightOfRect(x, y, closestTop.contentRect)) {\n        x = closestTop.contentRect.right;\n      }\n      y = closestTop.contentRect.bottom;\n      target = closestTop.contentNode;\n    }\n  }\n\n  if (!(target instanceof Element)) {\n    return null;\n  }\n\n  if (findClosestInContent(target, `[${Selector.void}]`)) {\n    const node = findClosestInContent(target, `[${Selector.void}]`);\n    let textNode: Text | null = null;\n    let offset = 0;\n    if (closestLeftEdge && Math.round(x) === Math.round(closestLeftEdge)) {\n      const nextTextNode = node?.nextElementSibling?.querySelector(`span[${Selector.leaf}]`)?.firstChild;\n      textNode = nextTextNode instanceof Text ? nextTextNode : null;\n    } else if (closestRightEdge && Math.round(x) === Math.round(closestRightEdge)) {\n      const nextTextNode = node?.previousElementSibling?.querySelector(`span[${Selector.leaf}]`)?.firstChild;\n      textNode = nextTextNode instanceof Text ? nextTextNode : null;\n      offset = textNode?.textContent?.length || 0;\n    }\n    return {\n      node: textNode || node,\n      offset,\n    };\n  }\n  if (findClosestInContent(target, `span[${Selector.leaf}]`)) {\n    const leafContent = target.getAttribute(Selector.leaf)\n      ? target\n      : target.querySelector(`span[${Selector.leaf}]`);\n    const textNode = leafContent && leafContent.firstChild;\n    if (textNode instanceof Text && textNode.textContent === CANGJIE_EMPTY) {\n      return {\n        node: textNode,\n        offset: 0,\n      };\n    }\n    if (textNode instanceof Text && textNode.textContent) {\n      const offset = binarySearchOffset(\n        textNode,\n        x,\n        y,\n        0,\n        textNode.textContent.length,\n        textNode.textContent.length,\n      );\n      return {\n        node: textNode,\n        offset,\n      };\n    }\n    return null;\n  }\n  return null;\n}\n\nexport default function caretRangeFromTargetAndCoord(\n  eventTarget: EventTarget,\n  mouseX: number,\n  mouseY: number,\n  controller: Controller,\n) {\n  let target: any = eventTarget;\n  if (target instanceof Text) {\n    target = target.parentNode;\n  } else if (target.shadowRoot) {\n    target = target.shadowRoot.querySelector(`[${Selector.content}]`);\n  }\n  if (!target || !(target instanceof Element)) {\n    return null;\n  }\n\n  let [x, y] = [mouseX, mouseY];\n  if (target.getAttribute(Selector.content)) {\n    const editable = target.querySelector(`[${Selector.editable}]`);\n    if (editable) {\n      const editableRect = editable.getBoundingClientRect();\n      if (x < editableRect.left) {\n        x = editableRect.left;\n      } else if (x > editableRect.right) {\n        x = editableRect.right - 1;\n      }\n      if (y < editableRect.top) {\n        y = editableRect.top;\n      } else if (y > editableRect.bottom) {\n        y = editableRect.bottom - 1;\n      }\n      // ref: https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n      const root = target.getRootNode() as unknown as DocumentOrShadowRoot;\n      const adjustedTarget = typeof root.elementFromPoint === 'function'\n        ? root.elementFromPoint(x, y)\n        : null;\n      if (adjustedTarget) {\n        target = adjustedTarget;\n      }\n    }\n  }\n\n  const point = caretPointFromTargetAndCoord({\n    eventTarget: target as Element,\n    adjustedX: x,\n    adjustedY: y,\n    mouseX,\n    mouseY,\n  });\n  if (!point || !point.node) {\n    return null;\n  }\n\n  const nodeKey =\n    point.node instanceof Element\n      ? point.node.getAttribute(Selector.key)\n      : null;\n  if (point.edge && nodeKey) {\n    const pointProperties = {\n      key: nodeKey,\n      edge: point.edge,\n    };\n    const anchor = Point.create(pointProperties);\n    return Selection.create({\n      anchor,\n      focus: anchor,\n    });\n  }\n  const native = document.createRange();\n  try {\n    native.setStart(point.node, point.offset);\n    native.setEnd(point.node, Math.max(point.offset, 0));\n  } catch (error) {\n    return null;\n  }\n  return native && findRange(native, controller);\n}\n","import Controller from '../../controller';\nimport { Selector } from '../../constants';\n\nexport const ROOT_TO_CONTROLLER = new WeakMap<Element | Document, Controller>();\nexport const CONTROLLER_TO_KEY_DOM = new WeakMap<Controller, Map<string, HTMLElement>>();\n/**\n * 这里原先作用应该是提供缓存命中率，由于内存泄露问题，暂时中断GLOBAL_KEY_DOM的缓存\n * 不确定什么场景下CONTROLLER_TO_KEY_DOM会失效，需要用到GLOBAL_KEY_DOM\n * 如果需要继续维持的话，这里也可以通过documentKey的维度进行缓存，类似：\n * const GLOBAL_KEY_DOM = new Map<string, Map<string, HTMLElement>>();\n */\nexport const GLOBAL_KEY_DOM = new Map<string, HTMLElement>();\n\nfunction getElementByCangjieKey(key: string, root: Element | Document): HTMLElement | null {\n  let KEY_DOM;\n  const controller = ROOT_TO_CONTROLLER.get(root);\n  if (controller) {\n    if (!CONTROLLER_TO_KEY_DOM.has(controller)) {\n      CONTROLLER_TO_KEY_DOM.set(controller, new Map());\n    }\n    KEY_DOM = CONTROLLER_TO_KEY_DOM.get(controller)!;\n  }\n\n  if (KEY_DOM && KEY_DOM.has(key)) {\n    return KEY_DOM.get(key)!;\n  }\n  if (root instanceof Element && key === root.getAttribute(Selector.key)) {\n    return root as HTMLElement;\n  }\n  return root.querySelector<HTMLElement>(`[${Selector.key}=\"${key}\"]`);\n}\n\nexport default getElementByCangjieKey;\n","/**\n * @packageDocumentation\n * @module domUtils\n */\nimport getElementByCangjieKey from './getElementByCangjieKey';\n\n/**\n * 根据节点的 key 查找对应的 DOM 节点。如果找不到，就返回 null\n */\nexport function findDOMNodeSafely(\n  key: string,\n  root: Window | Element = window,\n) {\n  const node =\n    root !== window\n      ? getElementByCangjieKey(key, root as Element)\n      : getElementByCangjieKey(key, root.document);\n  return node || undefined;\n}\n\n/**\n * 根据节点的 key 查找对应的 DOM 节点。如果找不到，就 throw error。\n * 类似的 API：domUtils.findDOMNodeSafely\n */\nfunction findDOMNode(key: string, root: Window | Element = window) {\n  const node = findDOMNodeSafely(key, root);\n  if (!node) {\n    throw new Error(\n      `Unable to find a DOM node for \"${key}\". This is often because of forgetting to add \\`props.attributes\\` to a custom component.`,\n    );\n  }\n  return node;\n}\n\nexport default findDOMNode;\n","import { Selector } from '../../constants';\nimport getElementByCangjieKey from './getElementByCangjieKey';\n\nfunction findDOMLeaves(key: string, root: Window | Element = window) {\n  const element = root instanceof Element ? root : root.document;\n  const firstLeaf = getElementByCangjieKey(`${key}:0`, element);\n  const leafBlock = firstLeaf?.closest(`[${Selector.leafBlock}]`);\n  return leafBlock ? Array.from(leafBlock.querySelectorAll<HTMLElement>(`[${Selector.key}^=\"${key}:\"]`)) : [];\n}\n\nexport default findDOMLeaves;","/**\n * @packageDocumentation\n * @module domUtils\n */\nimport { TextPoint } from '../../models/point';\nimport findDOMLeaves from './findDOMLeaves';\n\n/**\n * 根据 Point 来获取浏览器的 HTML 节点、offset。\n */\nfunction findDOMPoint(point: TextPoint, root: Window | Element = window) {\n  const leaves = findDOMLeaves(point.key, root);\n\n  let start = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const leaf of leaves) {\n    const node = leaf.firstChild;\n    const length = node && node.textContent ? node.textContent.length : 0;\n    const end = start + length;\n    if (point.offset <= end) {\n      const offset = point.offset - start;\n      return { node, offset };\n    }\n    start = end;\n  }\n  return null;\n}\n\nexport default findDOMPoint;\n","/* eslint-disable react/no-find-dom-node */\n/**\n * @packageDocumentation\n * @module domUtils\n */\nimport Controller from '../../controller/index';\nimport Selection from '../../models/selection';\nimport findDOMNode from './findDOMNode';\nimport findDOMPoint from './findDOMPoint';\n\n/**\n * 根据仓颉的 RangeSelection 获取浏览器的 Range。\n */\nfunction findDOMRange(\n  range: Selection,\n  controller: Controller,\n  root: Window | HTMLElement = window,\n) {\n  const { document } = controller.value;\n  const { isCollapsed } = range;\n  const { start, end } = range.convertToTextPoints(document);\n  // @ts-ignore\n  const r = ('document' in root ? root.document : root.ownerDocument).createRange();\n  const domStart = findDOMPoint(start, root);\n  const domEnd = isCollapsed ? domStart : findDOMPoint(end, root);\n\n  // 查找 Range 时，首先查找文字选区，若文字选区不存在，则判断是否存在 void 选区\n  try {\n    if (domStart && domStart.node) {\n      r.setStart(domStart.node, domStart.offset);\n    } else {\n      const startVoidNode = document.getClosestVoid(start.key, controller);\n      if (startVoidNode) {\n        const domNode = findDOMNode(startVoidNode.key, root);\n        r.setStartBefore(domNode);\n      } else {\n        return null;\n      }\n    }\n\n    if (domEnd && domEnd.node) {\n      r.setEnd(domEnd.node, domEnd.offset);\n    } else {\n      const endVoidNode = document.getClosestVoid(end.key, controller);\n      if (endVoidNode) {\n        const domNode = findDOMNode(endVoidNode.key, root);\n        r.setEndAfter(domNode);\n      } else {\n        return null;\n      }\n    }\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n\n  return r;\n}\n\nexport default findDOMRange;\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Point from '../../models/point';\nimport findDOMPoint from '../dom/findDOMPoint';\n\nexport function getAroundRects(point: Point) {\n  if (!point.isTextPoint()) {\n    return [];\n  }\n  const prevPoint = point.moveBackward();\n  const nextPoint = point.moveForward();\n\n  if (prevPoint.offset < 0) {\n    return [];\n  }\n\n  let domPoint: ReturnType<typeof findDOMPoint> = null;\n  let prevDomPoint: ReturnType<typeof findDOMPoint> = null;\n  let nextDomPoint: ReturnType<typeof findDOMPoint> = null;\n\n  try {\n    domPoint = findDOMPoint(point);\n    prevDomPoint = findDOMPoint(prevPoint);\n    nextDomPoint = findDOMPoint(nextPoint);\n  } catch (error) {\n    // ignore\n  }\n\n  if (\n    !domPoint ||\n    !domPoint.node ||\n    !prevDomPoint ||\n    !prevDomPoint.node ||\n    !nextDomPoint ||\n    !nextDomPoint.node\n  ) {\n    return [];\n  }\n\n  const firstRange = window.document.createRange();\n  const secondRange = window.document.createRange();\n  try {\n    firstRange.setStart(prevDomPoint.node, prevDomPoint.offset);\n    firstRange.setEnd(domPoint.node, domPoint.offset);\n    secondRange.setStart(domPoint.node, domPoint.offset);\n    secondRange.setEnd(nextDomPoint.node, nextDomPoint.offset);\n  } catch (error) {\n    return [];\n  }\n\n  const firstRects = Array.from(firstRange.getClientRects()).filter(\n    (r) => r.width > 0,\n  );\n  const secondRects = Array.from(secondRange.getClientRects()).filter(\n    (r) => r.width > 0,\n  );\n  const firstRect = firstRects[firstRects.length - 1];\n  const secondRect = secondRects[0];\n  return [firstRect, secondRect];\n}\n\nexport function findRectsInEdgePoint(point: Point) {\n  const [firstRect, secondRect] = getAroundRects(point);\n  if (!firstRect || !secondRect || typeof DOMRect === 'undefined') {\n    return [];\n  }\n  return [\n    new DOMRect(firstRect.right, firstRect.top, 0, firstRect.height),\n    new DOMRect(secondRect.left, secondRect.top, 0, secondRect.height),\n  ];\n}\n\nexport default function isPointAtEdge(point: Point) {\n  const [firstRect, secondRect] = getAroundRects(point);\n  if (!firstRect || !secondRect) {\n    return false;\n  }\n\n  /**\n   * The comparsion was secondRect.left < firstRect.right, but it's 0.xx px\n   * incorrect for adjusting bold mark.\n   */\n  return secondRect.left < firstRect.left;\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../../controller/index';\nimport Selection from '../../models/selection';\nimport Point from '../../models/point';\nimport findDOMRange from './findDOMRange';\nimport isPointAtEdge, { findRectsInEdgePoint } from './isPointAtEdge';\nimport findDOMNode from './findDOMNode';\n\nexport default function findRectFromPoint(\n  point: Point,\n  isHanging: boolean,\n  controller: Controller,\n) {\n  if (!point.isTextPoint()) {\n    // eslint-disable-next-line react/no-find-dom-node\n    const node = findDOMNode(point.key);\n    return node.getBoundingClientRect();\n  }\n  const { document } = controller.value;\n  const text = document.getNode(point.key)?.text;\n  const isAfterNewLine = text && text[point.offset - 1] === '\\n';\n  const isAtEdge = isPointAtEdge(point);\n  if (isAtEdge) {\n    const edgeRects = findRectsInEdgePoint(point);\n    return isHanging ? edgeRects[edgeRects.length - 1] : edgeRects[0];\n  }\n  const domRange = findDOMRange(\n    Selection.create({\n      anchor: point,\n      focus: point,\n    }),\n    controller,\n  );\n  if (!domRange) {\n    return null;\n  }\n  const rangeRects = domRange.getClientRects();\n  // choose last rect when the point is hanging or after \\n\n  return (isHanging || isAfterNewLine) ? rangeRects[rangeRects.length - 1] : rangeRects[0];\n}\n","import Controller from '../../controller';\nimport type { CaretAppearance } from '../../components/selection/types';\n\nconst cache = new WeakMap<Controller, { caret: CaretAppearance; wrapper: HTMLDivElement }>();\n\nexport const cacheLocalCaret = (controller: Controller, position: CaretAppearance, wrapper: HTMLDivElement) => {\n  cache.set(controller, { caret: position, wrapper });\n}\n\nexport const getLocalCaretPos = (controller: Controller) => {\n  return cache.get(controller)?.caret;\n}\n\nexport const getLocalCaretPosDetail = (controller: Controller) => {\n  return cache.get(controller);\n}","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../../controller/index';\nimport findDOMNode from './findDOMNode';\nimport Point, { EdgePoint } from '../../models/point';\nimport { getAroundRects } from './isPointAtEdge';\nimport { getLocalCaretPos } from './localCaretPos';\n\n/**\n * 从 from 垂直变到 to 点时，新的点是否为 isHanging\n * @param from 起始 Point\n * @param to 目标 Point\n * @returns isHanging\n */\nexport function shouldBeHangingByVertically(from: Point, to: Point, controller: Controller) {\n  if (to.isEdgePoint()) {\n    return false;\n  }\n  const [firstRect, secondRect] = getAroundRects(to);\n  if (!firstRect || !secondRect) {\n    return false;\n  }\n\n  if (from.isEdgePoint()) {\n    return secondRect.left < firstRect.left && from.edge === EdgePoint.BEFORE;\n  }\n\n  const fromPos = getLocalCaretPos(controller);\n  if (!fromPos || secondRect.left >= firstRect.left) {\n    return false;\n  }\n\n  // to 在边界点上，且起点更靠近 secondRect.left 时，应为 isHanging\n  return (fromPos.left - secondRect.left) < (firstRect.right - fromPos.left);\n}\n\nexport function isCoordAtLeftSide(\n  clientX: number,\n  controller: Controller,\n) {\n  const { document } = controller.value;\n  // eslint-disable-next-line react/no-find-dom-node\n  const articleDom = findDOMNode(document.key);\n  if (!articleDom) {\n    return false;\n  }\n  const rect = articleDom.getBoundingClientRect();\n  return clientX < rect.left + rect.width / 2;\n}\n","/* eslint-disable react/no-find-dom-node */\n/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport Node from '../models/node';\nimport Element from '../models/element';\nimport Point, {\n  EdgePoint,\n  TextPoint,\n  TextPointProperties,\n  EdgePointProperties,\n} from '../models/point';\nimport Document from '../models/document';\nimport textUtils from '../utils/textUtils';\n\nimport caretRangeFromTargetAndCoord from '../utils/dom/caretRangeFromTargetAndCoord';\nimport findDOMNode from '../utils/dom/findDOMNode';\nimport findRectFromPoint from '../utils/dom/findRectFromPoint';\nimport { isCoordAtLeftSide, shouldBeHangingByVertically } from '../utils/dom/caretHanging';\nimport { Selector } from '../constants';\n\nexport type MoveUnit = 'offset' | 'word';\n\n/**\n *\n * move point out of inline IF it's located at inline edges\n *\n * Optimizition for non-void inlines (e.g. <Link> elements) for better experience\n *\n * Before: <link>[anchor]www.dingtalk.com[focus]</link>\n * After: [anchor]<link>www.dingtalk.com</link>[focus]\n */\nexport const correctPointInsideInlineOrBlock = (\n  controller: Controller,\n  point: TextPoint,\n) => {\n  const { document } = controller.value;\n  const parent = document.getClosestInline(point.key);\n  if (!parent || controller.query('isVoid', parent) || controller.query('isInlineBlock', parent)) {\n    return point;\n  }\n  if (point.offset === 0) {\n    const textNode = document.getPreviousText(point.key);\n    if (textNode) {\n      const { key } = textNode;\n      const offset = textNode.text.length;\n      return TextPoint.create({ key, offset });\n    }\n  } else if (point.offset === parent.text.length) {\n    const textNode = document.getNextText(point.key);\n    if (textNode) {\n      const { key } = textNode;\n      const offset = 0;\n      return TextPoint.create({ key, offset });\n    }\n  }\n  return point;\n};\n\nfunction* iterateTextNodesFromPoint(\n  document: Document,\n  at: Point,\n  reverse?: boolean,\n): Iterable<Node> {\n  const atNode = document.getNode(at.key);\n  if (!atNode) {\n    return;\n  }\n  if (atNode.isText()) {\n    yield atNode;\n  }\n\n  const next = (key: string) => {\n    return reverse ? document.getPreviousText(key) : document.getNextText(key);\n  };\n\n  const startText = (element: Element) => {\n    return reverse ? element.getLastText() : element.getFirstText();\n  };\n\n  const goDeep =\n    at.isEdgePoint() &&\n    ((at.edge === EdgePoint.BEFORE && !reverse) || (at.edge === EdgePoint.AFTER && reverse));\n\n  let node =\n    goDeep && atNode.isElement() ? startText(atNode) : next(atNode.key);\n  while (node) {\n    yield node;\n    node = next(node.key);\n  }\n}\n\nfunction* iteratePositionsFromPoint(\n  controller: Controller,\n  at: Point,\n  unit: MoveUnit,\n  reverse?: boolean,\n): Iterable<TextPointProperties | EdgePointProperties> {\n  const { document } = controller.value;\n\n  const step = (t: string, o: number) => {\n    if (unit === 'offset') {\n      const nextCharStep = textUtils.getCharOffset(t, o, reverse);\n      return nextCharStep || 1;\n    }\n    const count = textUtils.getMoveWordOffset(t, o, reverse);\n    return Math.max(count, 1);\n  };\n\n  // We ignore the start point by default, since the start point is the same\n  // point as the end point of the previous text\n  let shouldCountStartPoint = false;\n  let lastBlock = document.getClosestBlock(at.key);\n  let offset = 0;\n\n  function getEdgePoint(\n    nodeKey: string,\n    isAtEntrance: boolean,\n  ): EdgePointProperties | null {\n    const closestBlock = document.getClosestSelectableBlock(\n      nodeKey,\n      controller,\n    );\n    if (!closestBlock) {\n      return null;\n    }\n    const firstText = closestBlock.getFirstText();\n    const lastText = closestBlock.getLastText();\n    let edgeText = firstText;\n    if (isAtEntrance) {\n      // alway skip the entrance WHEN started at a selectable inside node\n      if (closestBlock.getNode(at.key)) {\n        return null;\n      }\n      edgeText = reverse ? lastText : firstText;\n    } else {\n      edgeText = reverse ? firstText : lastText;\n    }\n\n    const isTextAtEdge = edgeText?.key === nodeKey;\n    if (!isTextAtEdge) {\n      return null;\n    }\n    const { key } = closestBlock;\n    const edge =\n      (reverse && isAtEntrance) || (!reverse && !isAtEntrance)\n        ? EdgePoint.AFTER\n        : EdgePoint.BEFORE;\n    return { key, edge };\n  }\n\n  for (const node of iterateTextNodesFromPoint(document, at, reverse)) {\n    const { text, key } = node;\n    const closestBlock = document.getClosestBlock(key);\n\n    let nodePoint = getEdgePoint(key, true);\n    if (nodePoint) {\n      yield nodePoint;\n    }\n    // skip the void elements and count the next start point\n    if (document.getClosestVoid(node.key, controller)) {\n      nodePoint = getEdgePoint(key, false);\n      if (nodePoint) {\n        yield nodePoint;\n      }\n      shouldCountStartPoint = true;\n      continue;\n    }\n\n    // it's another block, count the next start point\n    if (lastBlock !== closestBlock) {\n      lastBlock = closestBlock;\n      shouldCountStartPoint = true;\n    }\n\n    // calculate the start point (offset)\n    if (at.isTextPoint() && node.key === at.key) {\n      // special case: first text\n      offset = reverse\n        ? at.offset - step(text, at.offset)\n        : at.offset + step(text, at.offset);\n    } else if (shouldCountStartPoint) {\n      // special case: count the start point\n      offset = reverse ? text.length : 0;\n      shouldCountStartPoint = false;\n    } else {\n      offset = reverse ? text.length - step(text, text.length) : step(text, 0);\n    }\n\n    // now iterate the text node\n    while (offset <= text.length && offset >= 0) {\n      yield { key, offset };\n      reverse ? (offset -= step(text, offset)) : (offset += step(text, offset));\n    }\n\n    nodePoint = getEdgePoint(key, false);\n    if (nodePoint) {\n      yield nodePoint;\n    }\n  }\n}\n\nexport function pointAtDistance(\n  controller: Controller,\n  at: Point,\n  distance = 1,\n  unit: MoveUnit = 'offset',\n) {\n  const { document } = controller.value;\n  const reverse = distance < 0;\n  let remaining = Math.abs(distance);\n\n  if (unit === 'word' && at.isEdgePoint()) {\n    const { key } = at;\n    if (reverse && at.edge === EdgePoint.AFTER) {\n      return EdgePoint.create({ key, edge: EdgePoint.BEFORE });\n    }\n    if (!reverse && at.edge === EdgePoint.BEFORE) {\n      return EdgePoint.create({ key, edge: EdgePoint.AFTER });\n    }\n  }\n\n  for (const pt of iteratePositionsFromPoint(controller, at, unit, reverse)) {\n    remaining -= 1;\n    if (remaining <= 0) {\n      return Point.create(pt);\n    }\n  }\n  return controller.query(pointAtNodeEdge, document, reverse ? 'start' : 'end');\n}\n\nexport function pointAtStartOfNode(controller: Controller, node: Node) {\n  return controller.query(pointAtNodeEdge, node, 'start');\n}\n\nexport function pointAtEndOfNode(controller: Controller, node: Node) {\n  return controller.query(pointAtNodeEdge, node, 'end');\n}\n\nfunction pointAtNodeEdge(\n  controller: Controller,\n  node: Node,\n  where: 'start' | 'end',\n) {\n  const { document } = controller.value;\n  const targetNode =\n    where === 'start' ? node.getFirstNode() : node.getLastNode();\n  // 获取 node 下距离 targetNode 最远的可 edgeSelectable 的 block 节点\n  const furthestBlock = document.getFurthestSelectableBlock(\n    targetNode.key,\n    node.key,\n    controller,\n  );\n  // 若存在 furthestBlock 则返回该 block 的 edge point\n  if (furthestBlock) {\n    const { key } = furthestBlock;\n    const edge = where === 'start' ? EdgePoint.BEFORE : EdgePoint.AFTER;\n    return EdgePoint.create({ key, edge });\n  }\n  // 否则返回 targetNode 内 的 text point\n  const { key } = targetNode;\n  const offset = where === 'start' ? 0 : targetNode.text.length;\n  return TextPoint.create({ key, offset });\n}\n\nfunction getTrueRectFromPoint(controller, point, isHanging) {\n  const { document } = controller.value;\n  const node = document.assertNode(point.key);\n  const closestVoid = controller.query('isVoid', node)\n    ? node\n    : document.getClosestVoid(point.key, controller);\n  let rangeRect: DOMRect | null = null;\n  if (closestVoid) {\n    rangeRect = findDOMNode(closestVoid.key).getBoundingClientRect();\n  } else {\n    rangeRect = findRectFromPoint(point, isHanging, controller);\n  }\n  if (!rangeRect) {\n    return null;\n  }\n  return rangeRect;\n}\n\nexport function getUpsidePoint(\n  controller: Controller,\n  point: Point,\n  isHanging: boolean,\n  lockedX?: number,\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  const rangeRect = getTrueRectFromPoint(controller, point, isHanging);\n  if (!rangeRect) {\n    return null;\n  }\n\n  const rectX = point.isEdgePoint() && point.edge === EdgePoint.AFTER ? rangeRect.right : rangeRect.left;\n\n  const x = typeof lockedX === 'number' ? lockedX : rectX;\n  let y = rangeRect.top;\n\n  let currentBlock = document.getClosestBlockFromPoint(point.key);\n  let currentBlockDOM: globalThis.Element | null = null;\n  let currentLeafDOMs: globalThis.Element[];\n  let found = false;\n  while (!found) {\n    if (!currentBlock) {\n      return null;\n    }\n    const closestBlock = document.getClosestSelectableBlock(currentBlock.key, controller);\n    if ((closestBlock && closestBlock.key !== point.key && !closestBlock.getNode(point.key))) {\n      const { key } = closestBlock;\n      const edge = isCoordAtLeftSide(x, controller) ? EdgePoint.BEFORE : EdgePoint.AFTER;\n      return EdgePoint.create({ key, edge });\n    }\n    try {\n      currentBlockDOM = findDOMNode(currentBlock.key, window);\n    } catch (e) {\n      currentBlock = document.getPreviousBlock(currentBlock.key);\n      continue;\n    }\n\n    currentLeafDOMs = Array.from(\n      currentBlockDOM!.querySelectorAll(`span[${Selector.leaf}]`),\n    ).reverse();\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const leafDOM of currentLeafDOMs) {\n      if (found) {\n        break;\n      }\n\n      const blockRects = Array.from(leafDOM.getClientRects())\n        .filter((rect) => rect.height > 0);\n\n      const blockRectsLength = blockRects.length;\n\n      // eslint-disable-next-line no-plusplus\n      for (let i = blockRectsLength - 1; i >= 0; i--) {\n        const blockRect = blockRects[i];\n        if (blockRect.bottom <= y) {\n          found = true;\n          y = blockRect.bottom - blockRect.height / 2;\n          break;\n        }\n      }\n    }\n    currentBlock = document.getPreviousBlock(currentBlock.key);\n  }\n\n  const range =\n    currentBlockDOM && caretRangeFromTargetAndCoord(currentBlockDOM, x, y, controller);\n  if (!range) {\n    return null;\n  }\n  return range.anchor;\n}\n\nexport function getUpsideRange(controller: Controller) {\n  const { value } = controller;\n  const { document, selection } = value;\n  if (!selection) {\n    return null;\n  }\n  const start = selection.getStart(document);\n  const { isHanging } = selection;\n\n  const point = getUpsidePoint(controller, start, isHanging);\n  if (!point) {\n    return selection.moveToStartOfDocument(controller);\n  }\n\n  const nextIsHanging = shouldBeHangingByVertically(start, point, controller);\n\n  const newRange = selection\n    .moveAnchorTo(point.key, point.isEdgePoint() ? point.edge : point.offset)\n    .moveToAnchor()\n    .setHanging(nextIsHanging);\n\n  return newRange;\n}\n\nexport function getDownsidePoint(\n  controller: Controller,\n  point: Point,\n  isHanging: boolean,\n  lockedX?: number,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const rangeRect = getTrueRectFromPoint(controller, point, isHanging);\n  if (!rangeRect) {\n    return null;\n  }\n\n  const rectX = point.isEdgePoint() && point.edge === EdgePoint.AFTER ? rangeRect.right : rangeRect.left;\n\n  const x = typeof lockedX === 'number' ? lockedX : rectX;\n  let y = rangeRect.bottom;\n\n  let currentBlock = document.getClosestBlockFromPoint(point.key);\n  let currentBlockDOM: globalThis.Element | null = null;\n  let currentLeafDOMs: globalThis.Element[];\n\n  let found = false;\n  while (!found) {\n    if (!currentBlock) {\n      return null;\n    }\n    const closestBlock = document.getClosestSelectableBlock(currentBlock.key, controller);\n    if (closestBlock && closestBlock.key !== point.key && !closestBlock.getNode(point.key)) {\n      const { key } = closestBlock;\n      const edge = isCoordAtLeftSide(x, controller) ? EdgePoint.BEFORE : EdgePoint.AFTER;\n      return EdgePoint.create({ key, edge });\n    }\n    try {\n      currentBlockDOM = findDOMNode(currentBlock.key, window);\n    } catch (e) {\n      currentBlock = document.getNextBlock(currentBlock.key);\n      continue;\n    }\n    currentLeafDOMs = Array.from(\n      currentBlockDOM.querySelectorAll(`span[${Selector.leaf}]`),\n    );\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const leafDOM of currentLeafDOMs) {\n      if (found) {\n        break;\n      }\n\n      const blockRects = Array.from(leafDOM.getClientRects())\n        .filter((rect) => rect.height > 0);\n\n      const blockRectsLength = blockRects.length;\n\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i <= blockRectsLength - 1; i++) {\n        const blockRect = blockRects[i];\n        if (blockRect.top >= y) {\n          found = true;\n          y = blockRect.top + blockRect.height / 2;\n          break;\n        }\n      }\n    }\n    currentBlock = document.getNextBlock(currentBlock.key);\n  }\n\n  const range =\n    currentBlockDOM && caretRangeFromTargetAndCoord(currentBlockDOM, x, y, controller);\n  if (!range) {\n    return null;\n  }\n  return range.anchor;\n}\n\nexport function getDownsideRange(controller: Controller) {\n  const { value } = controller;\n  const { document, selection } = value;\n  if (!selection) {\n    return null;\n  }\n  const start = selection.getStart(document);\n  const { isHanging } = selection;\n\n  const point = getDownsidePoint(controller, start, isHanging);\n  if (!point) {\n    return selection.moveToEndOfDocument(controller);\n  }\n\n  const nextIsHanging = shouldBeHangingByVertically(start, point, controller);\n\n  const newRange = selection\n    .moveAnchorTo(point.key, point.isEdgePoint() ? point.edge : point.offset)\n    .moveToAnchor()\n    .setHanging(nextIsHanging);\n\n  return newRange;\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport equal from 'fast-deep-equal';\nimport isPlainObject from 'is-plain-object';\nimport ImmutableRecord from './immutableRecord';\nimport Path from './path';\nimport Point, {\n  EdgePoint,\n  TextPoint,\n  TextPointJSON,\n  EdgePointJSON,\n  PointEdge,\n} from './point';\nimport Node from './node';\nimport Document from './document';\nimport { Serializable, SerializeOptions } from '../interfaces/serializable';\nimport Data from '../interfaces/data';\nimport Mark, { MarkJSON } from './mark';\nimport Controller from '../controller';\nimport { pointAtStartOfNode, pointAtEndOfNode } from '../queries/selection';\nimport textUtils from '../utils/textUtils';\nimport Block from './block';\n\n/**\n * @ignore\n */\nexport type SupportEdge = 'start' | 'end';\n\nexport type SupportPointName = 'anchor' | 'focus' | 'start' | 'end';\n/**\n * @ignore\n */\nexport type SupportSide = 'previous' | 'next';\n/**\n * @ignore\n */\nexport type SupportKlass = 'block' | 'inline' | 'text';\n\nexport enum SelectionTrigger {\n  Selecting = 'selecting',\n  SelectStart = 'selectStart',\n  SelectAll = 'selectAll',\n  MoveUpward = 'moveUpward',\n  MoveDownward = 'moveDownward',\n  MoveBackward = 'moveBackward',\n  MoveForward = 'moveForward',\n  MultipleClick = 'multipleClick',\n}\n\nexport interface SelectionProperties {\n  data?: Data;\n  anchor: TextPoint | EdgePoint;\n  focus: TextPoint | EdgePoint;\n  marks?: Mark[] | null;\n}\n\nexport type RangeSelectionProperties = SelectionProperties;\n\nexport interface SelectionJSON {\n  data?: Data;\n  anchor: TextPointJSON | EdgePointJSON;\n  focus: TextPointJSON | EdgePointJSON;\n  marks?: MarkJSON[] | null;\n}\n\nexport type RangeSelectionJSON = SelectionJSON;\n\ntype Mover = (selection: Selection) => Selection;\n\ntype PointMoverCreator = (pn: SupportPointName, n: number) => Mover;\n\nconst IS_COLLAPSED_CACHE = new WeakMap<Selection, boolean>();\nconst IS_FORWARD_CACHE = new WeakMap<Selection, WeakMap<Document, boolean>>();\n\nexport default class Selection extends ImmutableRecord\n  implements Serializable<SelectionJSON> {\n  static create(\n    props: Selection | SelectionProperties,\n  ): Selection {\n    if (Selection.isSelection(props)) {\n      return props;\n    }\n\n    if (isPlainObject(props)) {\n      const { data = {}, anchor, focus, marks } = props;\n      return new Selection({\n        data,\n        anchor: Point.create(anchor),\n        focus: Point.create(focus),\n        marks: marks ? marks.map(mark => Mark.create(mark)) : null,\n      });\n    }\n\n    throw new Error(\n      `\\`Selection.create\\` only accepts objects or range selections, but you passed it: ${props}`,\n    );\n  }\n\n  /**\n   * 调整range的开始位置和结束位置，使其\"收缩\"到最小的位置， 如果ignoreEnd的值为true，则忽略对结束位置的调整\n   * @param document\n   * @param ignoreEnd 如果ignoreEnd的值为true，则忽略对结束位置的调整\n   * @example\n   * before:1234<anchor/><link>56<focus/>78</link>90\n   * after:1234<link><anchor/>56<focus/>78</link>90\n   */\n  public shrinkBoundary(document: Document, ignoreEnd?: boolean) {\n    const start = this.getStart(document);\n    const end = this.getEnd(document);\n    if (!start.isTextPoint() || !end.isTextPoint()) {\n      return this;\n    }\n    const isForward = this.isForward(document);\n    let targetRange: Selection = this;\n    if (!ignoreEnd && end.offset === 0) {\n      const targetEndText = document.getPreviousText(end.key);\n      if (targetEndText) {\n        targetRange = targetRange.set(\n          isForward ? 'focus' : 'anchor',\n          TextPoint.fromJSON({\n            key: targetEndText.key,\n            offset: targetEndText.text.length,\n          }),\n        );\n      }\n    }\n\n    const beforeStartText = document.getNode(start.key);\n    if (beforeStartText && start.offset === beforeStartText.text.length) {\n      const targetStartText = document.getNextText(start.key);\n      if (targetStartText) {\n        targetRange = targetRange.set(\n          isForward ? 'anchor' : 'focus',\n          Point.fromJSON({ key: targetStartText.key, offset: 0 }),\n        );\n      }\n    }\n    return targetRange;\n  }\n\n  static fromJSON(json: SelectionJSON) {\n    const { data, anchor, focus, marks } = json;\n    return Selection.create({\n      data,\n      anchor: Point.fromJSON(anchor),\n      focus: Point.fromJSON(focus),\n      marks: marks ? marks.map(mark => Mark.fromJSON(mark)) : null,\n    });\n  }\n\n  static isSelection(\n    maybeSelection: any,\n  ): maybeSelection is Selection {\n    return maybeSelection instanceof Selection;\n  }\n\n  static isRangeSelection(\n    maybeSelection: any,\n  ): maybeSelection is Selection {\n    return Selection.isSelection(maybeSelection);\n  }\n\n  static isValidSelection(document: Document, selection: any) {\n    if (!Selection.isSelection(selection)) {\n      return false;\n    }\n    const { anchor, focus } = selection;\n    const anchorNode = document.getNode(anchor.key);\n    const focusNode = document.getNode(focus.key);\n    if (!anchorNode || !focusNode) {\n      return false;\n    }\n    const isAnchorValid =\n      (anchor.isTextPoint() &&\n        anchor.offset >= 0 &&\n        anchor.offset <= anchorNode.text.length) ||\n      anchor.isEdgePoint();\n    const isFocusValid =\n      (focus.isTextPoint() &&\n        focus.offset >= 0 &&\n        focus.offset <= focusNode.text.length) ||\n      focus.isEdgePoint();\n    return isAnchorValid && isFocusValid;\n  }\n\n  static isValidRangeSelection(document: Document, selection: any) {\n    return Selection.isValidSelection(document, selection);\n  }\n\n  static selectWordAtPoint(document: Document, point: TextPoint | EdgePoint) {\n    if (point.isEdgePoint()) {\n      return Selection.create({\n        anchor: point.set('edge', EdgePoint.BEFORE),\n        focus: point.set('edge', EdgePoint.AFTER),\n      });\n    }\n    const text = document.getNode(point.key);\n    if (!text) {\n      return null;\n    }\n\n    const [start, end] = textUtils.getWordRange(text.text, point.offset);\n    return Selection.create({\n      anchor: point.set('offset', start),\n      focus: point.set('offset', end),\n    });\n  }\n\n  static isEqual(rangSelection: Selection, target: Selection) {\n    return (\n      equal(rangSelection.anchor, target.anchor) &&\n      equal(rangSelection.focus, target.focus)\n    );\n  }\n\n  public readonly data: Data;\n\n  public readonly anchor: TextPoint | EdgePoint;\n\n  public readonly focus: TextPoint | EdgePoint;\n\n  public readonly marks: Mark[] | null;\n\n  protected constructor(props: Required<SelectionProperties>) {\n    super();\n    const { data, anchor, focus, marks = null } = props;\n    this.data = data;\n    this.anchor = anchor;\n    this.focus = focus;\n    this.marks = marks;\n    this.freeze();\n  }\n\n  /**\n   * 选区是否指向同一个位置（caret）\n   */\n  public get isCollapsed() {\n    if (!IS_COLLAPSED_CACHE.has(this)) {\n      const { anchor, focus } = this;\n      IS_COLLAPSED_CACHE.set(this, equal(anchor, focus));\n    }\n    return IS_COLLAPSED_CACHE.get(this)!;\n  }\n\n  /**\n   * 选区是否是扩展\n   */\n  public get isExpanded() {\n    return !this.isCollapsed;\n  }\n\n  public get viewKey() {\n    const keyStr = `${this.anchor.viewKey}_${this.focus.viewKey}`;\n    try {\n      return `${keyStr}_${JSON.stringify(this.data)}`;\n    } catch (error) {\n      return keyStr;\n    }\n  }\n\n  public get plainViewKey() {\n    return `${this.anchor.viewKey}_${this.focus.viewKey}`;\n  }\n\n  public merge(props: Partial<SelectionProperties>) {\n    return new Selection({\n      data: this.data,\n      anchor: this.anchor,\n      focus: this.focus,\n      marks: this.marks,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof SelectionProperties>(\n    key: T,\n    value: SelectionProperties[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  private isForwardInDocument(document: Document) {\n    const { anchor, focus } = this;\n    // same node\n    if (anchor.key === focus.key) {\n      if (anchor.isEdgePoint()) {\n        return anchor.edge === EdgePoint.BEFORE;\n      }\n      if (focus.isEdgePoint()) {\n        return focus.edge === EdgePoint.AFTER;\n      }\n      return anchor.offset <= focus.offset;\n    }\n\n    // parent-child\n    if (anchor.isEdgePoint()) {\n      const anchorNode = document.getNode(anchor.key);\n      if (anchorNode?.isElement() && anchorNode.getNode(focus.key)) {\n        return anchor.edge === EdgePoint.BEFORE;\n      }\n    }\n    if (focus.isEdgePoint()) {\n      const focusNode = document.getNode(focus.key);\n      if (focusNode?.isElement() && focusNode.getNode(anchor.key)) {\n        return focus.edge === EdgePoint.AFTER;\n      }\n    }\n\n    // other relationship\n    const anchorPath = anchor.getPathIn(document);\n    const focusPath = focus.getPathIn(document);\n    return Boolean(anchorPath && focusPath && Path.isBefore(anchorPath, focusPath));\n  }\n\n  /**\n   * 选区是不是正序的（anchor在前，focus在后）\n   */\n  public isForward(document: Document) {\n    if (!IS_FORWARD_CACHE.has(this)) {\n      IS_FORWARD_CACHE.set(this, new WeakMap());\n    }\n    const DOCUMENT_TO_IS_FORWARD_CACHE = IS_FORWARD_CACHE.get(this)!;\n    if (!DOCUMENT_TO_IS_FORWARD_CACHE.has(document)) {\n      DOCUMENT_TO_IS_FORWARD_CACHE.set(document, this.isForwardInDocument(document));\n    }\n    return DOCUMENT_TO_IS_FORWARD_CACHE.get(document)!;\n  }\n\n  /**\n   * 选区是不是倒序的（anchor在后，focus在前）\n   */\n  public isBackward(document: Document) {\n    return !this.isForward(document);\n  }\n\n  /**\n   * 获取start point\n   */\n  public getStart(document: Document) {\n    return this.isForward(document) ? this.anchor : this.focus;\n  }\n\n  /**\n   * 获取end point\n   */\n  public getEnd(document: Document) {\n    return this.isBackward(document) ? this.anchor : this.focus;\n  }\n\n  /**\n   * 根据PointName，获取point\n   */\n  public getPoint(pointName: SupportPointName, document: Document) {\n    if (pointName === 'start') {\n      return this.getStart(document);\n    } else if (pointName === 'end') {\n      return this.getEnd(document);\n    } else {\n      return this[pointName];\n    }\n  }\n\n  /**\n   * 同时获取start point、end point\n   */\n  public sort(document: Document) {\n    return {\n      start: this.getStart(document),\n      end: this.getEnd(document),\n    };\n  }\n\n  /**\n   * 把当前的数据选区的 Points 转换成 TextPoints。\n   */\n  public convertToTextPoints(document: Document) {\n    let { start, end } = this.sort(document);\n    if (this.isCollapsed) {\n      const point = start.convertToTextPoint(document);\n      return { anchor: point, focus: point, start: point, end: point };\n    }\n    if (start.isEdgePoint()) {\n      if (start.edge === EdgePoint.BEFORE) {\n        start = start.convertToTextPoint(document);\n      } else {\n        const startNode = document.getNextText(start.key) || document.getFirstNode();\n        start = TextPoint.create({\n          key: startNode.key,\n          offset: 0,\n        });\n      }\n    }\n    if (end.isEdgePoint()) {\n      if (end.edge === EdgePoint.AFTER) {\n        end = end.convertToTextPoint(document);\n      } else {\n        const endNode = document.getPreviousText(end.key) || document.getLastNode();\n        end = TextPoint.create({\n          key: endNode.key,\n          offset: endNode.text.length,\n        });\n      }\n    }\n    const isForward = this.isForward(document);\n    const anchor = isForward ? start : end;\n    const focus = isForward ? end : start;\n    return { anchor, focus, start, end };\n  }\n\n  /**\n   * 获得当前选区所处的 Node\n   * @param document\n   */\n  public getClosestNode(document: Document) {\n    const { start, end } = this.convertToTextPoints(document);\n    const aPath = document.getPath(start.key);\n    const bPath = document.getPath(end.key);\n    if (!aPath || !bPath) {\n      return null;\n    }\n    const node = document.getNodeByPath(Path.common(aPath, bPath));\n    if (node?.isText()) {\n      return document.getClosestBlock(node.key);\n    }\n    return node as Block | null;\n  }\n\n  /**\n   * 选区是否在Hanging状态\n   */\n  public get isHanging() {\n    return Boolean(this.data.isHanging);\n  }\n\n  public get isCollapsedAtEdge() {\n    return this.isCollapsed && this.anchor.isEdgePoint();\n  }\n\n  /**\n   * 拷贝出一个新的选区，并设置选区的Haning状态\n   */\n  public setHanging(isHanging: boolean) {\n    if (this.data.isHanging !== isHanging) {\n      return this.merge({\n        data: {\n          ...this.data,\n          isHanging,\n        },\n      });\n    }\n    return this;\n  }\n\n  /**\n   * 拷贝出一个新的选区，并把start point移到end point的位置\n   */\n  public moveToEnd(document: Document) {\n    if (this.isBackward(document)) {\n      return this.merge({\n        focus: this.getEnd(document),\n      });\n    }\n    return this.merge({\n      anchor: this.getEnd(document),\n    });\n  }\n\n  public moveStartToStartOfNode(node: Node, controller: Controller) {\n    const { document } = controller.value;\n    if (this.isForward(document)) {\n      return this.moveAnchorToStartOfNode(node, controller);\n    } else {\n      return this.moveFocusToStartOfNode(node, controller);\n    }\n  }\n\n  public moveStartToEndOfNode(node: Node, controller: Controller) {\n    const { document } = controller.value;\n    if (this.isForward(document)) {\n      return this.moveAnchorToEndOfNode(node, controller);\n    } else {\n      return this.moveFocusToEndOfNode(node, controller);\n    }\n  }\n\n  public moveEndToStartOfNode(node: Node, controller: Controller) {\n    const { document } = controller.value;\n    if (this.isForward(document)) {\n      return this.moveFocusToStartOfNode(node, controller);\n    } else {\n      return this.moveAnchorToStartOfNode(node, controller);\n    }\n  }\n\n  public moveEndToEndOfNode(node: Node, controller: Controller) {\n    const { document } = controller.value;\n    if (this.isForward(document)) {\n      return this.moveFocusToEndOfNode(node, controller);\n    } else {\n      return this.moveAnchorToEndOfNode(node, controller);\n    }\n  }\n\n  public moveAnchorToStartOfNode(node: Node, controller: Controller) {\n    return this.set('anchor', controller.query(pointAtStartOfNode, node));\n  }\n\n  public moveAnchorToEndOfNode(node: Node, controller: Controller) {\n    return this.set('anchor', controller.query(pointAtEndOfNode, node));\n  }\n\n  public moveFocusToStartOfNode(node: Node, controller: Controller) {\n    return this.set('focus', controller.query(pointAtStartOfNode, node));\n  }\n\n  public moveFocusToEndOfNode(node: Node, controller: Controller) {\n    return this.set('focus', controller.query(pointAtEndOfNode, node));\n  }\n\n  public moveAnchorTo(key: string, where: number | PointEdge) {\n    return this.set('anchor', Point.createFromParams(key, where));\n  }\n\n  public moveFocusTo(key: string, where: number | PointEdge) {\n    return this.set('focus', Point.createFromParams(key, where));\n  }\n\n  public moveToStartOfNode(node: Node, controller: Controller) {\n    const anchor = controller.query(pointAtStartOfNode, node);\n    const focus = anchor;\n    return this.merge({ anchor, focus });\n  }\n\n  public moveToEndOfNode(node: Node, controller: Controller) {\n    const anchor = controller.query(pointAtEndOfNode, node);\n    const focus = anchor;\n    return this.merge({ anchor, focus });\n  }\n\n  /**\n   * 拷贝出一个新的选区，并把anchor和focus调换位置\n   */\n  public flip() {\n    return this.merge({\n      anchor: this.focus,\n      focus: this.anchor,\n    });\n  }\n\n  public moveAnchorBackward(n = 1, mover?: PointMoverCreator) {\n    return mover\n      ? mover('anchor', n)(this)\n      : this.set('anchor', this.anchor.moveBackward(n));\n  }\n\n  public moveAnchorForward(n = 1, mover?: PointMoverCreator) {\n    return mover\n      ? mover('anchor', n)(this)\n      : this.set('anchor', this.anchor.moveForward(n));\n  }\n\n  public moveFocusBackward(n = 1, mover?: PointMoverCreator) {\n    return mover\n      ? mover('focus', n)(this)\n      : this.set('focus', this.focus.moveBackward(n));\n  }\n\n  public moveFocusForward(n = 1, mover?: PointMoverCreator) {\n    return mover\n      ? mover('focus', n)(this)\n      : this.set('focus', this.focus.moveForward(n));\n  }\n\n  public moveToFocus() {\n    return this.set('anchor', this.focus);\n  }\n\n  public moveToAnchor() {\n    return this.set('focus', this.anchor);\n  }\n\n  public moveToStart(document: Document) {\n    const start = this.getStart(document);\n    return this.merge({\n      anchor: start,\n      focus: start,\n    });\n  }\n\n  public moveToRangeOfNode(node: Node, controller: Controller) {\n    return this.moveAnchorToStartOfNode(node, controller).moveFocusToEndOfNode(\n      node,\n      controller,\n    );\n  }\n\n  public moveForward(n = 1, mover?: PointMoverCreator) {\n    if (!mover) {\n      return this.updatePoints((point: TextPoint | EdgePoint) => {\n        return point.isTextPoint() ? point.moveForward(n) : point;\n      });\n    }\n    return this.moveAnchorForward(n, mover).moveFocusForward(n, mover);\n  }\n\n  public moveStartBackward(document: Document, n: number) {\n    if (this.isForward(document)) {\n      return this.moveAnchorBackward(n);\n    }\n    return this.moveFocusBackward(n);\n  }\n\n  public moveStartForward(document: Document, n: number) {\n    return this.moveStartBackward(document, -n);\n  }\n\n  public moveEndBackward(document: Document, n: number) {\n    if (this.isForward(document)) {\n      return this.moveFocusBackward(n);\n    }\n    return this.moveAnchorBackward(n);\n  }\n\n  public moveEndForward(document: Document, n: number) {\n    return this.moveEndBackward(document, -n);\n  }\n\n  public moveBackward(n = 1, mover?: PointMoverCreator) {\n    if (!mover) {\n      return this.updatePoints((point: TextPoint | EdgePoint) => {\n        return point.isTextPoint() ? point.moveBackward(n) : point;\n      });\n    }\n    return this.moveAnchorBackward(n, mover).moveFocusBackward(n, mover);\n  }\n\n  public move(mover: Mover) {\n    return mover(this);\n  }\n\n  public moveToStartOfDocument(controller: Controller) {\n    return this.moveToStartOfNode(controller.value.document, controller);\n  }\n\n  public moveToEndOfDocument(controller: Controller) {\n    return this.moveToEndOfNode(controller.value.document, controller);\n  }\n\n  public movePointEdgeKlass(\n    controller: Controller,\n    pointName: SupportPointName,\n    edge: SupportEdge,\n    klass: SupportKlass,\n  ) {\n    const { document } = controller.value;\n    const PName = pointName.slice(0, 1).toUpperCase() + pointName.slice(1);\n    const Edge = edge.slice(0, 1).toUpperCase() + edge.slice(1);\n    const Object = klass.slice(0, 1).toUpperCase() + klass.slice(1);\n    const method = `move${PName}To${Edge}OfNode`;\n    const getNode = klass === 'text' ? 'getNode' : `getClosest${Object}`;\n    const p = this.getPoint(pointName, document);\n    const node = p.isTextPoint() ? document[getNode](p.key) : document.getNode(p.key);\n    if (!node) {\n      return this;\n    }\n    const newSelection = this[method](node, controller) as Selection;\n    return newSelection;\n  }\n\n  public movePointEdgeSideKlass(\n    controller: Controller,\n    pointName: SupportPointName,\n    edge: SupportEdge,\n    side: SupportSide,\n    klass: SupportKlass,\n  ) {\n    const { document } = controller.value;\n    const PName = pointName.slice(0, 1).toUpperCase() + pointName.slice(1);\n    const Edge = edge.slice(0, 1).toUpperCase() + edge.slice(1);\n    const Side = side.slice(0, 1).toUpperCase() + side.slice(1);\n    const Klass = klass.slice(0, 1).toUpperCase() + klass.slice(1);\n    const method = `move${PName}To${Edge}OfNode`;\n    const getNode = klass === 'text' ? 'getNode' : `getClosest${Klass}`;\n    const getDirectionNode = `get${Side}${Klass}`;\n    const p = this.getPoint(pointName, document);\n\n    const node = document[getNode](p.key);\n    if (!node) {\n      return this;\n    }\n    const target = document[getDirectionNode](node.key);\n    if (!target) {\n      return this;\n    }\n    const newSelection = this[method](target, controller) as Selection;\n    return newSelection;\n  }\n\n  public updatePoints(\n    updater: (point: TextPoint | EdgePoint) => TextPoint | EdgePoint,\n  ) {\n    let { anchor, focus } = this;\n    anchor = updater(anchor);\n    focus = updater(focus);\n    return this.merge({ anchor, focus });\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    return {\n      klass: 'selection',\n      anchor: this.anchor.toJSON(options),\n      focus: this.focus.toJSON(options),\n      marks: this.marks ? this.marks.map(m => m.toJSON()) : null,\n    };\n  }\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport Element, { ElementProperties } from './element';\nimport Node from './node';\nimport Block, { BlockJSON } from './block';\nimport Inline from './inline';\nimport Text from './text';\nimport Mark from './mark';\nimport Path from './path';\nimport Selection from './selection';\nimport Controller from '../controller/index';\nimport { SerializeOptions } from '../interfaces/serializable';\nimport Data from '../interfaces/data';\nimport setUtils from '../utils/setUtils';\nimport keyUtils from '../utils/keyUtils';\nimport { EdgePoint } from './point';\n\nexport interface DocumentProperties extends ElementProperties {\n  nodes?: Block[];\n}\n\nexport interface DocumentJSON {\n  klass?: 'document';\n  key?: string;\n  data?: Data;\n  nodes?: BlockJSON[];\n}\n\nexport default class Document extends Element {\n  static create(props: Document | DocumentProperties = {}): Document {\n    if (Document.isDocument(props)) {\n      return props;\n    }\n\n    if (isPlainObject(props)) {\n      const {\n        key = keyUtils.create(),\n        data = {},\n        nodes = [],\n      } = props;\n      return new Document({\n        key,\n        data,\n        nodes,\n      });\n    }\n\n    throw new Error(\n      `\\`Document.create\\` only accepts objects or documents, but you passed it: ${props}`,\n    );\n  }\n\n  static fromJSON(json: DocumentJSON) {\n    return Document.create({\n      ...json,\n      nodes: json.nodes ? json.nodes.map(Block.fromJSON) : [],\n    });\n  }\n\n  static isDocument(maybeDocument: any): maybeDocument is Document {\n    return maybeDocument instanceof Document;\n  }\n\n  protected constructor(props: Required<DocumentProperties>) {\n    super(props);\n    const { nodes } = props;\n    this.nodes = nodes;\n  }\n\n  public readonly type: string = 'document';\n\n  public readonly nodes: Block[];\n\n  public merge(props: Partial<DocumentProperties>) {\n    return new Document({\n      key: this.key,\n      data: this.data,\n      nodes: this.nodes,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof DocumentProperties>(\n    key: T,\n    value: Required<DocumentProperties>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  /**\n   * 获取selection内对应的所有marks\n   */\n  public getMarksAtRange(range: Selection) {\n    if (range.isCollapsed && range.anchor.isEdgePoint()) {\n      return [];\n    }\n    const { start, end } = range.convertToTextPoints(this);\n    if (range.isCollapsed) {\n      return this.getMarksAtPosition(start.key, start.offset);\n    }\n\n    if (start.key === end.key) {\n      const startText = this.getNode(start.key);\n      return Text.isText(startText)\n        ? startText.getMarksBetweenOffsets(start.offset, end.offset)\n        : [];\n    }\n\n    const texts = this.getTextsBetweenPositions(start.key, end.key);\n    return texts.reduce<Mark[]>((marks, text) => {\n      if (text.key === start.key) {\n        return setUtils.union(\n          marks,\n          text.getMarksBetweenOffsets(start.offset, text.text.length),\n        );\n      }\n      if (text.key === end.key) {\n        return setUtils.union(\n          marks,\n          text.getMarksBetweenOffsets(0, end.offset),\n        );\n      }\n      return setUtils.union(marks, text.getMarks());\n    }, []);\n  }\n\n  /**\n   * 获取selection内对应的所有公共marks\n   */\n  public getActiveMarksAtRange(range: Selection) {\n    if (range.isCollapsed && range.anchor.isEdgePoint()) {\n      return [];\n    }\n    if (!Selection.isValidSelection(this, range)) {\n      return [];\n    }\n    const { start, end } = range.convertToTextPoints(this);\n    if (range.isCollapsed) {\n      return this.getMarksAtPosition(start.key, start.offset);\n    }\n\n    const startNode = this.getNode(start.key);\n    let startText = startNode?.isText() ? startNode : null;\n    if (!startText) {\n      return [];\n    }\n\n    let startKey = start.key;\n    let startOffset = start.offset;\n    let endKey = end.key;\n    let endOffset = end.offset;\n\n    if (startKey === endKey) {\n      return startText.getActiveMarksBetweenOffsets(startOffset, endOffset);\n    }\n\n    while (startKey !== endKey && endOffset === 0) {\n      const endText = this.getPreviousText(endKey);\n      if (!endText) {\n        return [];\n      }\n      endKey = endText.key;\n      endOffset = endText.text.length;\n    }\n\n    while (startKey !== endKey && startOffset === startText.text.length) {\n      startText = this.getNextText(startKey);\n      if (!startText) {\n        return [];\n      }\n      startKey = startText.key;\n      startOffset = 0;\n    }\n\n    const startMarks = startText.getActiveMarksBetweenOffsets(\n      startOffset,\n      startText.text.length,\n    );\n    if (startMarks.length === 0) return [];\n    const endText = this.getNode(endKey);\n    const endMarks = endText?.isText()\n      ? endText.getActiveMarksBetweenOffsets(0, endOffset)\n      : [];\n    let marks = setUtils.intersect(startMarks, endMarks);\n    // If marks is already empty, the active marks is empty\n    if (marks.length === 0) return marks;\n\n    if (startKey === endKey) return marks;\n\n    let text = this.getNextText(startKey);\n\n    while (text && text.key !== endKey) {\n      if (text.text.length !== 0) {\n        marks = setUtils.intersect(marks, text.getActiveMarks());\n        if (marks.length === 0) return [];\n      }\n\n      text = this.getNextText(text.key);\n    }\n    return marks;\n  }\n\n  public getMarksAtPosition(key: string, offset: number) {\n    const text = this.getNode(key);\n    const currentMarks = !text?.isText() ? [] : text.getMarksAtIndex(offset);\n    if (offset !== 0) {\n      return currentMarks;\n    }\n\n    const closestBlock = this.getClosestBlock(key);\n    if (!closestBlock || closestBlock.text === '') {\n      // Insert mark for empty block; the empty block are often created by split node or add marks in a range including empty blocks\n      return currentMarks;\n    }\n\n    const previous = this.getPreviousText(key);\n    if (previous && closestBlock.getNode(previous.key)) {\n      return previous.getMarksAtIndex(previous.text.length);\n    }\n\n    return currentMarks;\n  }\n\n  /**\n   * 获取插入点对应的marks\n   * 如果选区是collapse的，返回插入位置的marks;\n   * 如果插入位置在新的text节点，则尝试获取同一block的前一个text对应的mark；\n   * 如果选区是expand，则返回start位置对应的marks\n   */\n  public getInsertMarksAtRange(range: Selection) {\n    if (range.isCollapsed && range.anchor.isEdgePoint()) {\n      return [];\n    }\n    const { start } = range.convertToTextPoints(this);\n    if (range.isCollapsed) {\n      return this.getMarksAtPosition(start.key, start.offset);\n    }\n\n    const text = this.getNode(start.key);\n    return !text?.isText() ? [] : text.getMarksAtIndex(start.offset + 1);\n  }\n\n  public getNodesAtRange(range?: Selection) {\n    if (!range) {\n      return [];\n    }\n    const doc = this;\n    const start = range.getStart(doc);\n    const end = range.getEnd(doc);\n\n    const startPath = this.getPath(start.key)!;\n    const endPath = this.getPath(end.key)!;\n\n    const startIndex = startPath[0];\n    const endIndex = endPath[0];\n    const startBlock = this.nodes[startIndex];\n    const endBlock = this.nodes[endIndex];\n\n    const result: Node[] = [];\n\n    function push(node: Node) {\n      result.push(node);\n      if (Block.isBlock(node) || Inline.isInline(node)) {\n        node.nodes.forEach(push);\n      }\n    }\n\n    function pushEdgeNode(node: Node) {\n      const path = doc.getPath(node.key)!;\n\n      if (\n        Path.isEqual(path, startPath) ||\n        Path.isAncestor(path, startPath) ||\n        Path.isAncestor(startPath, path) ||\n        Path.isEqual(path, endPath) ||\n        Path.isAncestor(path, endPath) ||\n        Path.isAncestor(endPath, path) ||\n        (!range!.isCollapsed &&\n          Path.isAfter(path, startPath) &&\n          Path.isBefore(path, endPath))\n      ) {\n        result.push(node);\n        if (Block.isBlock(node) || Inline.isInline(node)) {\n          node.nodes.forEach(pushEdgeNode);\n        }\n      }\n    }\n\n    // Push the nodes in start path\n    result.push(startBlock);\n    startBlock.nodes.forEach(pushEdgeNode);\n\n    if (startIndex === endIndex) {\n      return result;\n    }\n\n    // Push the nodes between start and end\n    this.nodes.slice(startIndex + 1, endIndex).forEach((node) => {\n      push(node);\n    });\n\n    // Push the nodes in end path\n    result.push(endBlock);\n    endBlock.nodes.forEach(pushEdgeNode);\n    return result;\n  }\n\n  /**\n   * 获取最近的支持 edge 选择的 block 节点。\n   * 如果 key 对应的节点满足条件，会直接返回此节点。\n   */\n  public getClosestSelectableBlock(key: string, controller: Controller) {\n    let ans = this.getAncestors(key);\n    const n = this.getNode(key);\n    if (n?.isElement()) {\n      ans.push(n);\n    }\n    ans = ans.reverse();\n    for (const node of ans) {\n      if (controller.query('isEdgeSelectable', node)) {\n        return node;\n      } else if (node.isBlock() && controller.query('isVoid', node)) {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 获取 rootKey 节点下距离 key 最远的支持 edge 选择的 block 节点。\n   * 如果 key 对应的节点满足条件，也会返回此节点。\n   */\n  public getFurthestSelectableBlock(key: string, rootKey: string, controller: Controller) {\n    const ans = this.getAncestors(key);\n    const n = this.getNode(key);\n    if (n?.isElement()) {\n      ans.push(n);\n    }\n    const rootIndex = ans.findIndex((node) => node.key === rootKey);\n    if (rootIndex === -1) {\n      return null;\n    }\n    for (let i = rootIndex; i < ans.length; i++) {\n      const node = ans[i];\n      if (controller.query('isEdgeSelectable', node)) {\n        return node;\n      } else if (node.isBlock() && controller.query('isVoid', node)) {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 获取最近的Void父节点\n   */\n  public getClosestVoid(key: string, controller: Controller) {\n    const path = this.getPath(key);\n    if (!path) {\n      return null;\n    }\n\n    return this.getClosestVoidByPath(path, controller);\n  }\n\n  /**\n   * 获取最近的Void父节点\n   */\n  private getClosestVoidByPath(path: Path, controller: Controller) {\n    return this.getClosestByPath(path, (node) => {\n      return controller.query('isVoid', node) as boolean;\n    });\n  }\n\n  /**\n   * 是否有一个Void父节点\n   */\n  public hasVoidParent(key: string, controller: Controller) {\n    const path = this.getPath(key);\n    if (!path) {\n      return false;\n    }\n    return this.hasVoidParentByPath(path, controller);\n  }\n\n  private hasVoidParentByPath(path: Path, controller: Controller) {\n    const closest = this.getClosestVoidByPath(path, controller);\n    return !!closest;\n  }\n\n  /**\n   * 获取最顶层的一个Void节点\n   */\n  public getFurthsestVoid(key: string, controller: Controller) {\n    return this.getFurthsest(\n      key,\n      (node) => controller.query('isVoid', node) as boolean,\n    );\n  }\n\n  /**\n   * 根据选区，获取一个fragment\n   */\n  public getFragmentAtRange(range: Selection, controller?: Controller) {\n    const { start, end } = range.convertToTextPoints(this);\n    const startTextPath = this.getPath(start.key);\n    const endTextPath = this.getPath(end.key);\n    if (!startTextPath || !endTextPath) {\n      return Document.create();\n    }\n    const startVoid =\n      controller && this.getClosestVoidByPath(startTextPath, controller);\n    const endVoid =\n      controller && this.getClosestVoidByPath(endTextPath, controller);\n    const startPath = startVoid\n      ? this.assertPath(startVoid.key)\n      : startTextPath;\n    const endPath = endVoid ? this.assertPath(endVoid.key) : endTextPath;\n\n    let node = this;\n    let targetPath = endPath;\n    let targetPosition = endVoid ? endVoid.nodes.length : end.offset;\n    let mode = 'end';\n    while (targetPath.length) {\n      const index = targetPath[targetPath.length - 1];\n      node = node.splitNode(targetPath, targetPosition);\n      targetPath = Path.parent(targetPath);\n      targetPosition = index + 1;\n\n      if (!targetPath.length && mode === 'end') {\n        targetPath = startPath;\n        targetPosition = startVoid ? 0 : start.offset;\n        mode = 'start';\n      }\n    }\n\n    const startIndex = startPath[0] + 1;\n    const endIndex = endPath[0] + 2;\n    const nodes = node.nodes.slice(startIndex, endIndex);\n    // @ts-ignore\n    return Document.create({ nodes });\n  }\n\n  /**\n   * 获取特定区间的所有叶子block\n   */\n  public getLeafBlocksAtRange(range: Selection): Block[] {\n    const { start, end } = range.convertToTextPoints(this);\n    const startBlock = this.getClosestBlockFromPoint(start.key);\n\n    // PERF: the most common case is when the range is in a single block node,\n    // where we can avoid a lot of iterating of the tree.\n    if (start.key === end.key) {\n      return [startBlock!];\n    }\n\n    const endBlock = this.getClosestBlockFromPoint(end.key);\n    const blocks = this.getBlocks();\n    const startIndex = blocks.indexOf(startBlock!);\n    const endIndex = blocks.indexOf(endBlock!);\n    return blocks.slice(startIndex, endIndex + 1);\n  }\n\n  /**\n   * 循环获取document下的所有叶子blocks节点\n   */\n  public getBlocks() {\n    return Block.getBlocks(this.nodes);\n  }\n\n  /**\n   * 循环获取document下的所有叶子blocks节点\n   */\n  public getBlocksByType(type: string) {\n    return Block.getBlocksByType(this.nodes, type);\n  }\n\n  /**\n   * 循环获取document下的特定区间内的全部blocks节点\n   */\n  public getRootBlocksAtRange(range?: Selection): Block[] {\n    if (!range) {\n      return [];\n    }\n    const { start, end } = range.convertToTextPoints(this);\n\n    const startBlock = this.getFurthsestBlock(start.key);\n    if (!startBlock) {\n      return [];\n    }\n    if (start.key === end.key) {\n      return [startBlock];\n    }\n\n    const endBlock = this.getFurthsestBlock(end.key);\n    if (!endBlock) {\n      return [];\n    }\n    return this.nodes.slice(\n      this.nodes.indexOf(startBlock),\n      this.nodes.indexOf(endBlock) + 1,\n    );\n  }\n\n  /**\n   * 判断节点是否在Selection之内\n   */\n  public isNodeInRange(key: string, range: Selection) {\n    const path = this.getPath(key);\n    if (!path) {\n      return false;\n    }\n    return this.isNodeInRangeByPath(path, range);\n  }\n\n  /**\n   * 判断节点是否在Selection之内\n   */\n  public isNodeInRangeByPath(path: Path, range: Selection) {\n    if (!range || range.isCollapsedAtEdge) {\n      return false;\n    }\n    const { start, end } = range.sort(this);\n    const startPath = start.getPathIn(this);\n    const endPath = end.getPathIn(this);\n\n    // we cannot trust the selection\n    if (!startPath || !endPath) {\n      return false;\n    }\n\n    // edge cases\n    if (\n      start.isEdgePoint() &&\n      start.edge === EdgePoint.AFTER &&\n      (Path.isEqual(startPath, path) || Path.isAncestor(startPath, path))\n    ) {\n      return false;\n    }\n    if (\n      end.isEdgePoint() &&\n      end.edge === EdgePoint.BEFORE &&\n      (Path.isEqual(endPath, path) || Path.isAncestor(endPath, path))\n    ) {\n      return false;\n    }\n\n    const isBeforeStart = Path.compare(path, startPath) === -1;\n    const isAfterEnd = Path.compare(path, endPath) === 1;\n    return !isBeforeStart && !isAfterEnd;\n  }\n\n  /**\n   * 获取Selection内所有的Text节点\n   */\n  public getTextsAtRange(range: Selection): Text[] {\n    const { start, end } = range.convertToTextPoints(this);\n    return this.getTextsBetweenPositions(start.key, end.key);\n  }\n\n  /**\n   * 获取Selection内所有的叶子Inline节点\n   */\n  public getLeafInlinesAtRange(range: Selection): Inline[] {\n    const array = this.getTextsAtRange(range)\n      .map((text) => this.getClosestInline(text.key))\n      .filter((exists): exists is Inline => Boolean(exists));\n\n    return array;\n  }\n\n  /**\n   * 获取Selection内的所有最远Inline节点\n   */\n  public getRootInlinesAtRange(range?: Selection): Inline[] {\n    if (!range) {\n      return [];\n    }\n\n    const array = this.getTextsAtRange(range)\n      .map((text) => this.getFurthsestInline(text.key))\n      /* eslint-disable @typescript-eslint/indent */\n      .reduce<Inline[]>((inlines, inline) => {\n        if (inline && !inlines.includes(inline)) {\n          inlines.push(inline);\n        }\n        return inlines;\n      }, []);\n    /* eslint-enable @typescript-eslint/indent */\n\n    return array;\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    const object: DocumentJSON = {\n      klass: 'document',\n      data: { ...this.data },\n      nodes: this.nodes.map((node) => node.toJSON(options)),\n    };\n\n    if (options?.preserveKeys) {\n      object.key = this.key;\n    }\n\n    return object;\n  }\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport Data from '../interfaces/data';\nimport ImmutableRecord from './immutableRecord';\nimport Node from './node';\nimport Element from './element';\n\nfunction defaultMergeData(a: Data, b: Data): Data {\n  return { ...a, ...b };\n}\n\nexport interface InjectionProperties<T extends Data = Data> {\n  key: string;\n  data: T;\n  mergeData?: typeof defaultMergeData;\n}\n\nexport interface InjectionJSON<T extends Data = Data> {\n  key: string;\n  data: T;\n}\n\nexport default class Injection<D extends Data = Data> extends ImmutableRecord {\n  static create<T extends Data = Data>(props: Injection<T> | InjectionProperties<T>) {\n    if (Injection.isInjection(props)) {\n      return props;\n    }\n\n    if (isPlainObject(props)) {\n      const { key, data, mergeData } = props;\n      return new Injection({\n        key,\n        data,\n        mergeData,\n      });\n    }\n\n    throw new Error(\n      `\\`Injection.create\\` only accepts objects or injections, but you passed it: ${props}`,\n    );\n  }\n\n  static isInjection(maybeInjection: any): maybeInjection is Injection {\n    return maybeInjection instanceof Injection;\n  }\n\n  static injectIntoNode(injections: Injection[], node: Node) {\n    if (!injections.length || !Element.isElement(node)) {\n      return node;\n    }\n    return injections.reduce((n, injection) => {\n      if (injection.key !== n.key) {\n        return n;\n      }\n      const { mergeData } = injection;\n      return n.set('data', mergeData(n.data, injection.data));\n    }, node);\n  }\n\n  static fromJSON(json: InjectionJSON) {\n    const { key, data } = json;\n    return Injection.create({\n      key, data,\n    });\n  }\n\n  constructor(props: InjectionProperties<D>) {\n    super();\n    const { key, data, mergeData = defaultMergeData } = props;\n    this.key = key;\n    this.data = data;\n    this.mergeData = mergeData;\n    this.freeze();\n  }\n\n  public readonly key: string;\n\n  public readonly data: D;\n\n  public readonly mergeData: typeof defaultMergeData;\n\n  public merge(props: Partial<InjectionProperties<D>>) {\n    return new Injection({\n      key: this.key,\n      data: this.data,\n      mergeData: this.mergeData,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof InjectionProperties<D>>(\n    key: T,\n    value: InjectionProperties<D>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public toJSON() {\n    return {\n      key: this.key,\n      data: this.data,\n    };\n  }\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport { curry } from 'lodash-es';\nimport Controller from '../controller/index';\nimport Selection, { SupportPointName } from '../models/selection';\nimport Node from '../models/node';\nimport Element from '../models/element';\nimport Document from '../models/document';\nimport Path from '../models/path';\nimport { pointAtDistance, MoveUnit } from '../queries/selection';\n\nexport const movePointForward = curry(\n  (\n    controller: Controller,\n    pn: SupportPointName,\n    distance: number,\n    unit: MoveUnit,\n  ) => {\n    return (selection: Selection) => {\n      if (distance === 0) {\n        return selection;\n      }\n\n      const { document } = controller.value;\n\n      let pointName = pn;\n      if (pointName === 'start') {\n        pointName = selection.isForward(document) ? 'anchor' : 'focus';\n      } else if (pointName === 'end') {\n        pointName = selection.isForward(document) ? 'focus' : 'anchor';\n      }\n      const at = pointName === 'anchor' ? selection.anchor : selection.focus;\n\n      const point = controller.query(pointAtDistance, at, distance, unit);\n      return selection.set(pointName, point);\n    };\n  },\n);\n\nexport const movePointBackward = curry(\n  (\n    controller: Controller,\n    pn: SupportPointName,\n    distance: number,\n    unit: MoveUnit,\n  ) => {\n    return (selection: Selection) => {\n      const mover = movePointForward(controller, pn, -distance, unit);\n      return mover(selection);\n    };\n  },\n);\n\nexport const movePointWordBackward = movePointBackward(\n  curry.placeholder,\n  curry.placeholder,\n  1,\n  'word',\n);\n\nexport const movePointWordForward = movePointForward(\n  curry.placeholder,\n  curry.placeholder,\n  1,\n  'word',\n);\n\n/**\n * 选区是否包含整个 Element\n */\nexport const isSelectionContainsElement = (\n  selection: Selection | null,\n  element: Element,\n) => {\n  if (!selection || selection.isCollapsed) {\n    return false;\n  }\n  const { anchor, focus } = selection;\n  const anchorNode = element.getNode(anchor.key);\n  if (anchorNode && anchorNode !== element) return false;\n  const focusNode = element.getNode(focus.key);\n  if (focusNode && focusNode !== element) return false;\n  return true;\n};\n\n/**\n * 判断 `selection` 是否完全在 `node` 内部\n * @param node\n * @param document\n * @param selection\n * @returns\n */\n\nexport const isSelectionInNode = (\n  node: Node,\n  document: Document,\n  selection: Selection,\n) => {\n  const { start, end } = selection.sort(document);\n  if (Element.isElement(node)) {\n    if (\n      (start.isEdgePoint() && start.key === node.key) ||\n      (end.isEdgePoint() && end.key === node.key)\n    ) {\n      return false;\n    } else {\n      const { start: startText, end: endText } =\n        selection.convertToTextPoints(document);\n      return node.hasNode(startText.key) && node.hasNode(endText.key);\n    }\n  } else {\n    // Node is Text\n    return (\n      start.isTextPoint() &&\n      end.isTextPoint() &&\n      start.key === node.key &&\n      end.key === node.key\n    );\n  }\n};\n\nfunction getFirstDataElementPath(\n  document: Document,\n  view: Document,\n  viewElement: Element,\n): Path {\n  let start = viewElement.nodes[0];\n  while (!document.hasNode(start.key)) {\n    start = view.assertElement(start.key).nodes[0];\n  }\n\n  return document.assertPath(start.key);\n}\n\nfunction getLastDataElementPath(\n  document: Document,\n  view: Document,\n  viewElement: Element,\n): Path {\n  let end = viewElement.nodes[viewElement.nodes.length - 1];\n  while (!document.hasNode(end.key)) {\n    const endElement = view.assertElement(end.key);\n    end = endElement.nodes[endElement.nodes.length - 1];\n  }\n\n  return document.assertPath(end.key);\n}\n\n/**\n * 获得裁剪后的选区\n * @param controller\n * @param selection\n * @param visibles\n */\nexport function getCroppedSelection(\n  controller: Controller,\n  selection: Selection,\n  visibles: string[],\n): Selection | null {\n  if (!controller.enableVirtualize) {\n    return selection;\n  }\n  const { document } = controller.value;\n  const view = controller.view;\n  const validVisibles = visibles.filter(\n    (visible) => document.hasNode(visible) || view.hasNode(visible),\n  );\n\n  if (!validVisibles.length) {\n    return null;\n  } else {\n    const { start, end } = selection.convertToTextPoints(document);\n    const selectionStartPath = document.getPath(start.key);\n    const selectionEndPath = document.getPath(end.key);\n    if (!selectionStartPath || !selectionEndPath) {\n      return null;\n    } \n    const visibleStartKey = validVisibles[0]!;\n    const visibleEndKey = validVisibles[validVisibles.length - 1];\n\n    let visibleStart: number;\n    let visibleEnd: number;\n    if (document.hasNode(visibleStartKey)) {\n      visibleStart = document.assertPath(visibleStartKey)[0];\n    } else {\n      const viewElement = view.assertElement(visibleStartKey);\n      visibleStart = getFirstDataElementPath(document, view, viewElement)[0];\n    }\n\n    if (document.hasNode(visibleEndKey)) {\n      visibleEnd = document.assertPath(visibleEndKey)[0];\n    } else {\n      const viewElement = view.assertElement(visibleEndKey);\n      visibleEnd = getLastDataElementPath(document, view, viewElement)[0];\n    }\n\n    const selectionStart = selectionStartPath[0];\n    const selectionEnd = selectionEndPath[0];\n\n    if (selectionStart > visibleEnd || selectionEnd < visibleStart) {\n      return null;\n    }\n\n    let sel = selection;\n    if (selectionStart < visibleStart) {\n      sel = sel.moveStartToStartOfNode(\n        document.assertNodeByPath([visibleStart]),\n        controller,\n      );\n    }\n\n    if (selectionEnd > visibleEnd) {\n      sel = sel.moveEndToEndOfNode(\n        document.assertNodeByPath([visibleEnd]),\n        controller,\n      );\n    }\n\n    return sel;\n  }\n}\n","/* eslint-disable no-restricted-syntax */\n/**\n * @packageDocumentation\n * @module Commands\n */\nimport equal from 'fast-deep-equal';\nimport Controller from '../controller/index';\nimport Selection from '../models/selection';\nimport Node from '../models/node';\nimport Inline from '../models/inline';\nimport { EdgePoint, TextPoint } from '../models/point';\nimport Path from '../models/path';\nimport {\n  movePointBackward,\n  movePointWordForward,\n  movePointWordBackward,\n  movePointForward,\n} from '../utils/selection';\nimport { MoveUnit } from '../queries/selection';\nimport { OperationType } from '../models/operation';\n\nfunction getSiblingTextPoint(\n  controller: Controller,\n  key: string,\n  isPrev: boolean,\n) {\n  const { document } = controller.value;\n  const textNode = isPrev\n    ? document.getPreviousText(key)\n    : document.getNextText(key);\n  if (textNode) {\n    const { key } = textNode;\n    const offset = isPrev ? textNode.text.length : 0;\n    return TextPoint.create({ key, offset });\n  }\n  return undefined;\n}\n\n/**\n *\n * move point out of inline IF it's located at inline edges\n *\n * ### Normal Inline\n * Before: `<link><anchor/>www.dingtalk.com<focus/></link>`\n *\n * After: `<anchor/><link>www.dingtalk.com</link><focus/>`\n *\n * ### Side selectable Inline\n * Before: `<anchor/><ins>www.dingtalk.com</ins><focus/>`\n *\n * After: `<ins><anchor/>www.dingtalk.com<focus/></ins>`\n */\nconst correctPointAtInlineEdge = (\n  controller: Controller,\n  point: TextPoint | EdgePoint,\n) => {\n  if (point.isEdgePoint()) {\n    return point;\n  }\n  if (controller.query('disableCorrectPointAtInnerEdge', point)) {\n    return point;\n  }\n  const { document } = controller.value;\n  const { key, offset } = point;\n  const text = document.getNode(key);\n  const parent = document.getParent(key);\n\n  // 若当前选中点为 text 起始，则试探前一个节点是否为可选 inline\n  if (offset === 0) {\n    const node = document.getPreviousSibling(key);\n    if (node && Inline.isInline(node) && controller.query('isSideSelectable', node)) {\n      return getSiblingTextPoint(controller, key, true) || point;\n    }\n  }\n\n  // 若当前选中点为 text 末尾，则试探后一个节点是否为可选 inline\n  if (text && offset === text.text.length) {\n    const node = document.getNextSibling(key);\n    if (node && Inline.isInline(node) && controller.query('isSideSelectable', node)) {\n      return getSiblingTextPoint(controller, key, false) || point;\n    }\n  }\n\n  if (!parent || !parent.isInline() || controller.query('isVoid', parent) || controller.query('isSideSelectable', parent)) {\n    return point;\n  }\n  if (offset !== 0 && offset !== parent.text.length) {\n    return point;\n  }\n  return getSiblingTextPoint(controller, key, offset === 0) || point;\n};\n\n/**\n *\n * move point out of void\n *\n * Before: <img>[anchor]</img>cangjie[focus]\n * After: [anchor]<img></img>cangjie[focus]\n */\nconst correctPointInVoid = (\n  controller: Controller,\n  point: TextPoint | EdgePoint,\n  isStart: boolean,\n) => {\n  if (point.isEdgePoint()) {\n    return point;\n  }\n  const { document } = controller.value;\n  const { key } = point;\n  const parent = document.getClosestInline(key);\n  if (!parent || !controller.query('isVoid', parent)) {\n    return point;\n  }\n  return getSiblingTextPoint(controller, key, isStart) || point;\n};\n\nexport function focus(controller: Controller) {\n  if (!controller.value.isFocused) {\n    return controller.setIsFocused(true);\n  }\n  return controller;\n}\n\nexport function blur(controller: Controller) {\n  if (controller.value.isFocused) {\n    return controller.setIsFocused(false);\n  }\n  return controller;\n}\n\nexport function select(controller: Controller, selection: Selection) {\n  const { selection: prevSelection } = controller.value;\n  if (equal(selection, prevSelection)) {\n    return controller;\n  }\n\n  return controller.applyOperation({\n    type: OperationType.SetSelection,\n    selection: Selection.create(selection),\n    prevSelection,\n  });\n}\n\n/**\n *\n * differences between `select` and `userSelect`:\n *\n * `select` will set exactly what you passed;\n * `userSelect` may adjust the selection to make the user feel expected.\n */\nexport function userSelect(controller: Controller, selection: Selection) {\n  const { selection: prevSelection, document } = controller.value;\n  if (equal(selection, prevSelection)) {\n    return controller;\n  }\n\n  const { anchor: paramAnchor, focus: paramFocus } = selection;\n  let anchor = correctPointAtInlineEdge(controller, paramAnchor);\n  let focus = correctPointAtInlineEdge(controller, paramFocus);\n  if (selection.isExpanded) {\n    const isForward = selection.isForward(document);\n    anchor = correctPointInVoid(controller, anchor, isForward);\n    focus = correctPointInVoid(controller, focus, !isForward);\n  }\n  const correctedSelection = selection\n    .set('anchor', anchor)\n    .set('focus', focus);\n\n  return controller.applyOperation({\n    type: OperationType.SetSelection,\n    selection: correctedSelection,\n    prevSelection,\n  });\n}\n\nexport function selectWordAtPoint(\n  controller: Controller,\n  point: TextPoint | EdgePoint,\n) {\n  const { document } = controller.value;\n\n  const selection = Selection.selectWordAtPoint(document, point);\n  return selection ? controller.command(select, selection) : controller;\n}\n\nexport function moveAnchorBackward(\n  controller: Controller,\n  n = 1,\n  unit?: MoveUnit,\n) {\n  const { selection } = controller.value;\n  const mover = movePointBackward(controller, 'anchor', n, unit || 'offset');\n  return controller.command(userSelect, mover(selection));\n}\n\nexport function moveAnchorForward(\n  controller: Controller,\n  n = 1,\n  unit?: MoveUnit,\n) {\n  const { selection } = controller.value;\n  const mover = movePointForward(controller, 'anchor', n, unit || 'offset');\n  const newSelection = mover(selection);\n  return controller.command(userSelect, newSelection);\n}\n\nexport function moveAnchorTo(\n  controller: Controller,\n  path: Path,\n  offset: number,\n) {\n  const { selection, document } = controller.value;\n  const { key } = document.assertNodeByPath(path);\n  const newSelection = selection.moveAnchorTo(key, offset);\n  return controller.command(select, newSelection);\n}\n\nexport function moveAnchorToKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n) {\n  const path = controller.value.document.assertPath(key);\n  return controller.command(moveAnchorTo, path, offset);\n}\n\nexport function moveAnchorToStartOfBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'anchor', 'start', 'block'),\n  );\n}\n\nexport function moveAnchorToStartOfPreviousBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(\n      controller,\n      'anchor',\n      'start',\n      'previous',\n      'block',\n    ),\n  );\n}\n\nexport function moveAnchorToEndOfNextBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(\n      controller,\n      'anchor',\n      'end',\n      'next',\n      'block',\n    ),\n  );\n}\n\nexport function moveFocusTo(\n  controller: Controller,\n  path: Path,\n  offset: number,\n) {\n  const { selection, document } = controller.value;\n  const { key } = document.assertNodeByPath(path);\n  const newSelection = selection.moveFocusTo(key, offset);\n  return controller.command(select, newSelection);\n}\n\nexport function moveFocusToKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n) {\n  const path = controller.value.document.assertPath(key);\n  return controller.command(moveFocusTo, path, offset);\n}\n\nexport function moveTo(controller: Controller, path: Path, offset: number) {\n  return controller\n    .command(moveAnchorTo, path, offset)\n    .command(moveFocusTo, path, offset);\n}\n\nexport function moveToKey(controller: Controller, key: string, offset: number) {\n  const path = controller.value.document.assertPath(key);\n  return controller.command(moveTo, path, offset);\n}\n\nexport function moveFocusBackward(controller: Controller, n = 1) {\n  const { selection } = controller.value;\n  const mover = movePointBackward(controller, 'focus', n, 'offset');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveFocusForward(controller: Controller, n = 1) {\n  const { selection } = controller.value;\n  const mover = movePointForward(controller, 'focus', n, 'offset');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveFocusWordBackward(controller: Controller) {\n  const { selection } = controller.value;\n  const mover = movePointBackward(controller, 'focus', 1, 'word');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveFocusWordForward(controller: Controller) {\n  const { selection } = controller.value;\n  const mover = movePointForward(controller, 'focus', 1, 'word');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveFocusToEndOfText(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'focus', 'end', 'text'),\n  );\n}\n\nexport function moveFocusToStartOfBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'focus', 'start', 'block'),\n  );\n}\n\nexport function moveFocusToEndOfBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'focus', 'end', 'block'),\n  );\n}\n\nexport function moveFocusToStartOfDocument(controller: Controller) {\n  const { document } = controller.value;\n  return controller.command(moveFocusToStartOfNode, document);\n}\n\nexport function moveFocusToEndOfDocument(controller: Controller) {\n  const { document } = controller.value;\n  return controller.command(moveFocusToEndOfNode, document);\n}\n\nexport function moveStartBackward(controller: Controller, n = 1) {\n  const { selection } = controller.value;\n  const mover = movePointBackward(controller, 'start', n, 'offset');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveStartForward(controller: Controller, n = 1) {\n  const { selection } = controller.value;\n  const mover = movePointForward(controller, 'start', n, 'offset');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveEndBackward(controller: Controller, n = 1) {\n  const { selection } = controller.value;\n  const mover = movePointBackward(controller, 'end', n, 'offset');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveEndForward(controller: Controller, n = 1) {\n  const { selection } = controller.value;\n  const mover = movePointForward(controller, 'end', n, 'offset');\n  return controller.command(select, mover(selection));\n}\n\nexport function moveBackward(controller: Controller, n = 1) {\n  return controller\n    .command(moveAnchorBackward, n)\n    .command(moveFocusBackward, n);\n}\n\nexport function moveForward(controller: Controller, n = 1) {\n  return controller.command(moveAnchorForward, n).command(moveFocusForward, n);\n}\n\nexport function moveToEndOfPreviousBlock(controller: Controller) {\n  return controller.command(moveStartToEndOfPreviousBlock).command(moveToStart);\n}\n\nexport function moveToEndOfNextBlock(controller: Controller) {\n  return controller.command(moveEndToEndOfNextBlock).command(moveToEnd);\n}\n\nexport function moveToEndOfInline(controller: Controller) {\n  return controller.command(moveEndToEndOfInline).command(moveToEnd);\n}\n\nexport function moveToAnchor(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(select, selection.moveToAnchor());\n}\n\nexport function moveToFocus(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(select, selection.moveToFocus());\n}\n\nexport function moveToRangeOfDocument(controller: Controller) {\n  return controller.command(moveToRangeOfNode, controller.value.document);\n}\n\nexport function moveToRangeOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveToRangeOfNode(node, controller),\n  );\n}\n\nexport function moveToStart(controller: Controller) {\n  const { document, selection } = controller.value;\n  return controller.command(select, selection.moveToStart(document));\n}\n\nexport function moveToEnd(controller: Controller) {\n  const { document, selection } = controller.value;\n  return controller.command(select, selection.moveToEnd(document));\n}\n\nexport function moveToEndOfDocument(controller: Controller) {\n  return controller\n    .command(moveEndToEndOfNode, controller.value.document)\n    .command(moveToEnd);\n}\n\nexport function moveToStartOfInline(controller: Controller) {\n  return controller.command(moveStartToStartOfInline).command(moveToStart);\n}\n\nexport function moveToStartOfBlock(controller: Controller) {\n  return controller.command(moveStartToStartOfBlock).command(moveToStart);\n}\n\nexport function moveToEndOfBlock(controller: Controller) {\n  return controller.command(moveEndToEndOfBlock).command(moveToEnd);\n}\n\nexport function moveToEndOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveToEndOfNode(node, controller),\n  );\n}\n\nexport function moveStartToStartOfInline(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'start', 'start', 'inline'),\n  );\n}\n\nexport function moveStartToStartOfBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'start', 'start', 'block'),\n  );\n}\n\nexport function moveStartToStartOfPreviousBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(\n      controller,\n      'start',\n      'start',\n      'previous',\n      'block',\n    ),\n  );\n}\n\nexport function moveEndToEndOfBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'end', 'end', 'block'),\n  );\n}\n\nexport function moveToStartOfDocument(controller: Controller) {\n  const { document, selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveFocusToStartOfNode(document, controller).moveToFocus(),\n  );\n}\n\nexport function moveStartToEndOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveStartToEndOfNode(node, controller),\n  );\n}\n\nexport function moveAnchorToStartOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveAnchorToStartOfNode(node, controller),\n  );\n}\n\nexport function moveAnchorToEndOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveAnchorToEndOfNode(node, controller),\n  );\n}\n\nexport function moveFocusToStartOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveFocusToStartOfNode(node, controller),\n  );\n}\n\nexport function moveFocusToEndOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveFocusToEndOfNode(node, controller),\n  );\n}\n\nexport function moveToEndOfPreviousText(controller: Controller) {\n  return controller.command(moveStartToEndOfPreviousText).command(moveToStart);\n}\n\nexport function moveToStartOfNextText(controller: Controller) {\n  return controller.command(moveEndToStartOfNextText).command(moveToEnd);\n}\n\nexport function moveToStartOfPreviousBlock(controller: Controller) {\n  return controller\n    .command(moveStartToStartOfPreviousBlock)\n    .command(moveToStart);\n}\n\nexport function moveToStartOfNextBlock(controller: Controller) {\n  return controller.command(moveEndToStartOfNextBlock).command(moveToEnd);\n}\n\nexport function moveToStartOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveToStartOfNode(node, controller),\n  );\n}\n\nexport function moveStartToStartOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveStartToStartOfNode(node, controller),\n  );\n}\n\nexport function moveEndToStartOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveEndToStartOfNode(node, controller),\n  );\n}\n\nexport function moveEndToEndOfNode(controller: Controller, node: Node) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.moveEndToEndOfNode(node, controller),\n  );\n}\n\nexport function moveStartToEndOfPreviousText(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(\n      controller,\n      'start',\n      'end',\n      'previous',\n      'text',\n    ),\n  );\n}\n\nexport function moveStartToEndOfPreviousBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(\n      controller,\n      'start',\n      'end',\n      'previous',\n      'block',\n    ),\n  );\n}\n\nexport function moveEndToEndOfInline(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeKlass(controller, 'end', 'end', 'inline'),\n  );\n}\n\nexport function moveEndToStartOfNextText(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(\n      controller,\n      'end',\n      'start',\n      'next',\n      'text',\n    ),\n  );\n}\n\nexport function moveEndToStartOfNextBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(\n      controller,\n      'end',\n      'start',\n      'next',\n      'block',\n    ),\n  );\n}\n\nexport function moveEndToEndOfNextBlock(controller: Controller) {\n  const { selection } = controller.value;\n  return controller.command(\n    select,\n    selection.movePointEdgeSideKlass(controller, 'end', 'end', 'next', 'block'),\n  );\n}\n\nexport function moveWordBackward(controller: Controller) {\n  const { selection } = controller.value;\n  const mover = movePointWordBackward(controller, 'focus');\n  return controller.command(select, mover(selection)).command(moveToFocus);\n}\n\nexport function moveWordForward(controller: Controller) {\n  const { selection } = controller.value;\n  const mover = movePointWordForward(controller, 'focus');\n  return controller.command(select, mover(selection)).command(moveToFocus);\n}\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport { select } from './selection';\nimport Controller from '../controller/index';\nimport Path from '../models/path';\nimport { OperationType, RemoveTextOperation } from '../models/operation';\nimport { EdgePoint, TextPoint } from '../models/point';\nimport { pointAtEndOfNode, pointAtStartOfNode } from '../queries/selection';\nimport Selection from '../models/selection';\n\n/**\n * 删除指定位置的节点。\n * 1. 如果传入无效的节点，会抛异常。\n */\nexport function removeNodeByKey(controller: Controller, key: string) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(removeNodeByPath, path);\n}\n\n/**\n * 删除指定位置的节点。\n * 1. 如果传入无效的节点，会抛异常。\n */\nexport function removeNodeByPath(controller: Controller, path: Path) {\n  const { document: oldDoc } = controller.value;\n  const node = oldDoc.assertNodeByPath(path);\n\n  const { selection, document } = controller.value;\n  const prev = document.getPreviousNodeByPath(path);\n  const next = document.getNextNodeByPath(path);\n  const mapPoint = (point: TextPoint | EdgePoint) => {\n    if (node.key === point.key || (node.isElement() && node.hasNode(point.key))) {\n      if (prev) {\n        return controller.query(pointAtEndOfNode, prev);\n      }\n      if (next) {\n        return controller.query(pointAtStartOfNode, next);\n      }\n    }\n    return point;\n  };\n  let newSelection = selection;\n  if (prev || next) {\n    // 为什么在这里调整选区？\n    // 需要根据 controller 来获取 pointAtStartOfNode / pointAtEndOfNode。如果放到 Value 的\n    // applyOperation 中调整，value 没有感知到 controller 的存在，就无法获取 edge point。\n    const anchor = mapPoint(selection.anchor);\n    const focus = mapPoint(selection.focus);\n    newSelection = Selection.create({\n      anchor,\n      focus,\n    });\n  }\n  // 调用select是方便后续撤销时恢复选区，表格选区不恢复可能会跑到隐藏单元格触发bug\n  controller.command(select, newSelection);\n  controller.applyOperation({\n    type: OperationType.RemoveNode,\n    path,\n    node: node!,\n  });\n  if (newSelection !== selection) {\n    return controller.command(select, newSelection);\n  }\n  return controller;\n}\n\n/**\n * 删除指定位置的文字。\n * 1. 如果传入无效的节点，会抛异常。\n */\nexport function removeTextByKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n  text: string,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(removeTextByPath, path, offset, text);\n}\n\n/**\n * 删除指定位置的文字。\n * 1. 如果传入无效的节点，会抛异常。\n * @text 删除的文字；如果长度大于可用长度，按照可用长度计算\n */\nexport function removeTextByPath(\n  controller: Controller,\n  path: Path,\n  offset: number,\n  text: string,\n) {\n  const { value } = controller;\n  const { decorations, document } = value;\n  const node = document.assertTextByPath(path);\n\n  let updated = false;\n  const { key, leaves } = node;\n  const from = offset;\n  const to = offset + text.length;\n\n  // filter atomic decorations\n  const decs = decorations.filter((dec) => {\n    const { start, end, mark } = dec;\n    const isAtomic = controller.query('isAtomic', mark);\n    if (!isAtomic) return true;\n    if (start.key !== key) return true;\n\n    if (start.offset < from && (end.key !== key || end.offset > from)) {\n      updated = true;\n      return false;\n    }\n\n    if (start.offset < to && (end.key !== key || end.offset > to)) {\n      updated = true;\n      return null;\n    }\n\n    return true;\n  });\n\n  if (updated) {\n    controller.setDecorations(decs);\n  }\n\n  const removals: RemoveTextOperation[] = [];\n  let cursor = 0;\n\n  leaves.forEach((leaf) => {\n    const startCursor = cursor;\n    const endCursor = cursor + leaf.text.length;\n\n    cursor += leaf.text.length;\n\n    // Skip the leaf which is not overlapped\n    if (endCursor < from || to < startCursor) return;\n\n    // Remove the leaf text\n    const start = Math.max(startCursor, from);\n    const end = Math.min(endCursor, to);\n    const string = node.text.slice(start, end);\n\n    removals.push({\n      type: OperationType.RemoveText,\n      path,\n      offset: start,\n      text: string,\n      marks: leaf.marks,\n    });\n  });\n\n  controller.command(select, value.selection);\n  removals.reverse().forEach((op) => controller.applyOperation(op));\n  return controller;\n}\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport Controller from '../controller/index';\nimport { OperationType } from '../models/operation';\nimport Path from '../models/path';\n\n/**\n * 删除指定位置的Node，并添加到parentPath的第index处\n * 1. 如果传入无效的节点，会抛异常。\n */\nexport function moveNodeByKey(\n  controller: Controller,\n  key: string,\n  parentKey: string,\n  index: number,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  const parentPath = document.assertPath(parentKey);\n  return controller.command(moveNodeByPath, path, parentPath, index);\n}\n\n/**\n * 删除指定位置的Node，并添加到parentPath的第index处\n * 1. 如果传入无效的节点，会抛异常。\n */\nexport function moveNodeByPath(\n  controller: Controller,\n  path: Path,\n  parentPath: Path,\n  index: number,\n) {\n  if (Path.isEqual(path, parentPath)) {\n    return controller;\n  }\n\n  const newPath = parentPath.concat(index);\n\n  if (Path.isEqual(path, newPath)) {\n    return controller;\n  }\n\n  return controller.applyOperation({\n    type: OperationType.MoveNode,\n    path,\n    newPath,\n  });\n}\n","/* eslint-disable no-param-reassign */\n/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport Selection from '../models/selection';\nimport { del } from './delete';\n\nexport function deleteExpanded(controller: Controller) {\n  const { value } = controller;\n  const { selection } = value;\n\n  if (selection.isExpanded) {\n    controller.command(del);\n  }\n}\n\n/**\n * 删除选区的内容；返回一个拷贝选区，并定位到原选区的start位置\n */\nexport function deleteExpandedAtRange(\n  controller: Controller,\n  range: Selection,\n): Selection {\n  const { value } = controller;\n  const { document } = value;\n  const { start, end } = range.sort(document);\n  if (range.isExpanded) {\n    controller.command('deleteAtRange', range);\n  }\n\n  const { document: newDocument } = controller.value;\n  if (newDocument.getNode(start.key)) {\n    range = range.merge({\n      anchor: start,\n      focus: start,\n    });\n  } else {\n    const point = end.isTextPoint() ? end.set('offset', 0) : end;\n    range = range.merge({\n      anchor: point,\n      focus: point,\n    });\n  }\n\n  return range;\n}\n","import Path from '../models/path';\nimport Node from '../models/node';\nimport Operation, { OperationType } from '../models/operation';\n\nconst PREFIX = 'cj/cmd/split_';\n\nexport const splitTpl = (node: Node, path: Path, position: number) =>\n  `${PREFIX}${node.isText() ? 'text' : 'node'}(${JSON.stringify([\n    path,\n    position,\n  ])}`;\n\n/**\n * 是否是分裂 Element Operation \n * @param op \n * @returns \n */\nexport const isSplitElementOp = (op: Operation) => {\n  return op.type === OperationType.InsertNode && op.context?.startsWith(`${PREFIX}node`);\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\n/* eslint-disable prefer-destructuring */\n/**\n * @packageDocumentation\n * @module Commands\n */\nimport { dropWhile } from 'lodash-es';\nimport equal from 'fast-deep-equal';\nimport Controller from '../controller/index';\nimport Element from '../models/element';\nimport Selection from '../models/selection';\nimport Path from '../models/path';\nimport Inline from '../models/inline';\nimport { Properties } from '../models/operation';\nimport { select } from './selection';\nimport { deleteExpandedAtRange, deleteExpanded } from './utils';\nimport { EdgePoint } from '../models/point';\nimport { insertNodeByPath, insertEmptyBlock } from './insert';\nimport { removeTextByPath } from './remove';\nimport { moveNodeByPath } from './move';\nimport { splitTpl } from '../contexts/split';\n\n/**\n * 从指定文本位置开始拆分节点子树\n * @param controller\n * @param key 节点子树的 root key\n * @param textKey 待拆分的文本 key\n * @param textOffset 待拆分的文本 offset\n * @returns\n * @example\n * ```ts\n * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                         ┌─────────┐  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ A │                     │ A │     │A1 │\n * //     └───┘                     └───┘     └───┘\n * //       │         ──split─▶       │         │  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   offset=1                                    \n * //\n * \n * const newDocument = controller.commands('splitDescendantsByKey', document.key, text.key, 1);\n*                                                       \n * ```\n */\nexport function splitDescendantsByKey(\n  controller: Controller,\n  key: string,\n  textKey: string,\n  textOffset: number,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  const textPath = document.assertPath(textKey);\n  return controller.command(\n    'splitDescendantsByPath',\n    path,\n    textPath,\n    textOffset,\n  );\n}\n\n/**\n * 从指定文本位置开始拆分节点子树\n * @param controller\n * @param path 节点子树的 path\n * @param textPath 待拆分的文本 path\n * @param textOffset 待拆分的文本 offset\n * @returns\n * @example\n * ```ts\n * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                         ┌─────────┐  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ A │                     │ A │     │A1 │\n * //     └───┘                     └───┘     └───┘\n * //       │         ──split─▶       │         │  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   offset=1                                    \n * //\n * \n * const newDocument = controller.commands('splitDescendantsByPath', [], [0,0,0], 1);\n *                                                     \n * ```\n */\nexport function splitDescendantsByPath(\n  controller: Controller,\n  path: Path,\n  textPath: Path,\n  textOffset,\n) {\n  if (equal(path, textPath)) {\n    controller.command(splitNodeByPath, textPath, textOffset);\n    return controller;\n  }\n\n  const { value } = controller;\n  const { document } = value;\n  // 从待拆分文本 `text` 开始，自底向上逐个拆分节点，直到到达拆分节点 `node`\n  const node = document.assertNodeByPath(path);\n  const text = document.assertNodeByPath(textPath);\n  const ancestors = document.getAncestorsByPath(textPath);\n  let elements = ancestors.slice();\n  elements = dropWhile(elements, (a) => a.key !== node!.key).reverse();\n\n  return controller.withoutNormalizing(() => {\n    controller.command(splitNodeByKey, text.key, textOffset);\n    let previous = text;\n    elements.forEach((element) => {\n      controller.command(\n        splitNodeByKey,\n        element.key,\n        element.nodes.indexOf(previous) + 1,\n      );\n      previous = element;\n    });\n  });\n}\n\n/**\n * 对目标节点进行拆分\n *\n * ```txt\n * Split Text:\n *\n *       position=5                    Text      Text\n *          │                        ┌───────┐ ┌───────┐\n *     Hello│World     ─split─────▶  │ Hello │ │ World │\n *          │                        └───────┘ └───────┘\n *\n * Split Element:\n *\n *          position=1\n *             │\n * ┌───────────┼───────────┐                ┌─────────────┐   ┌─────────────┐\n * │ Element   │           │                │ Element     │   │ Element     │\n * │  ┌───────┐│┌───────┐  │                │  ┌───────┐  │   │  ┌───────┐  │\n * │  │ Hello │││ World │  │────split─────▶ │  │ Hello │  │   │  │ World │  │\n * │  └───────┘│└───────┘  │                │  └───────┘  │   │  └───────┘  │\n * └───────────┼───────────┘                └─────────────┘   └─────────────┘\n *             │\n *             │\n *\n * ```\n * @key 待拆分节点 key\n * @position 拆分位置。如果是 Text 节点，代表文字的偏移量；如果 Element节点，代表子节点 index。\n */\nexport function splitNodeByKey(\n  controller: Controller,\n  key: string,\n  position: number,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(splitNodeByPath, path, position);\n}\n\n/**\n * 对目标节点进行拆分\n * ```txt\n * Split Text:\n *\n *       position=5                    Text      Text\n *          │                        ┌───────┐ ┌───────┐\n *     Hello│World     ─split─────▶  │ Hello │ │ World │\n *          │                        └───────┘ └───────┘\n *\n * Split Element:\n *\n *          position=1\n *             │\n * ┌───────────┼───────────┐                ┌─────────────┐   ┌─────────────┐\n * │ Element   │           │                │ Element     │   │ Element     │\n * │  ┌───────┐│┌───────┐  │                │  ┌───────┐  │   │  ┌───────┐  │\n * │  │ Hello │││ World │  │────split─────▶ │  │ Hello │  │   │  │ World │  │\n * │  └───────┘│└───────┘  │                │  └───────┘  │   │  └───────┘  │\n * └───────────┼───────────┘                └─────────────┘   └─────────────┘\n *             │\n *             │\n *                                                      \n * ```\n * @path 待拆分节点 path\n * @position 拆分位置。如果是 Text 节点，代表文字的偏移量；如果 Element节点，代表子节点 index。\n */\nexport function splitNodeByPath(\n  controller: Controller,\n  path: Path,\n  position: number,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const node = document.assertNodeByPath(path);\n  const parentPath = path.slice(0, -1);\n  const parent = document.getNodeByPath(parentPath) as Element;\n  const index = parent.nodes.indexOf(node);\n  const properties: Properties = {};\n  if (Element.isElement(node)) {\n    properties.type = node.type;\n    properties.data = node.data;\n  }\n\n  controller.withOpContext(\n    splitTpl(node, path, position),\n    () => {\n      controller.withoutTracking(() => {\n        controller.withoutNormalizing(() => {\n          if (node.isText()) {\n            /**\n             * Split Text为：\n             *\n             * 1. 删除分裂位置后的文本\n             * 2. 在分裂节点之后，插入新的文本节点（其内容为分裂位置后的文本）\n             * ```txt\n             *\n             *        position=4\n             *            │\n             * ┌──────────┼────────┐                ┌──────┐                     ┌──────┐┌──────┐\n             * │      ABCD│EF      │─remove 'EF'──▶ │ ABCD │─insert Text('EF')─▶ │ ABCD ││  EF  │\n             * └──────────┼────────┘                └──────┘                     └──────┘└──────┘\n             *            │\n             * ```\n             */\n            const [, after] = node.splitText(position);\n            const { selection, decorations } = controller.value;\n            controller\n              .command(removeTextByPath, path, position, after.text)\n              .command(insertNodeByPath, parentPath, index + 1, after);\n            /**\n             * 上面从 split op 换成 remove + insert 之后，updatePoints 无法处理，导致 selection\n             * 和 decorations 都会失效。\n             *\n             * 这里取之前的 selection 和 decorations，主动调用 updatePoints 来矫正位置，模拟之前的\n             * split op 处理方式。\n             */\n            const valueToUpdate = controller.value\n              .set('decorations', decorations)\n              .set('selection', selection);\n            const updatedValue = valueToUpdate.updatePoints(\n              valueToUpdate.document,\n              (point) => {\n                if (point.key === node.key && position <= point.offset) {\n                  return point.merge({\n                    key: after.key,\n                    offset: point.offset - position,\n                  });\n                }\n                return point;\n              },\n            );\n            controller.setValue(updatedValue, { clearOperations: false });\n          } else {\n            /**\n             * Split Element：\n             *\n             * 1. 在分裂位置后，插入空节点\n             * 2. 将分裂位置后的节点移入这个空间点\n             * 2. 在分裂节点之后，插入新的文本节点（其内容为分裂位置后的文本）\n             * ```txt\n             *     position=1\n             *         │\n             * ┌───────┼────────────────┐                      ┌────────────────────────┐ ┌─────────┐                ┌─────────┐ ┌────────────────┐\n             * │ Elemen│                │                      │ Element                │ │ Element │                │ Element │ │ Element        │\n             * │  ┌───┐│┌───┐┌───┐┌───┐ │                      │  ┌───┐ ┌───┐┌───┐┌───┐ │ │         │                │  ┌───┐  │ │┌───┐┌───┐┌───┐ │\n             * │  │ A │││ B ││ C ││ D │ │───insert container──▶│  │ A │ │ B ││ C ││ D │ │ │         │──move afters──▶│  │ A │  │ ││ B ││ C ││ D │ │\n             * │  └───┘│└───┘└───┘└───┘ │                      │  └───┘ └───┘└───┘└───┘ │ │         │                │  └───┘  │ │└───┘└───┘└───┘ │\n             * └───────┼────────────────┘                      └────────────────────────┘ └─────────┘                └─────────┘ └────────────────┘\n             *         │\n             *\n             * ```\n             */\n            const element = node as Element;\n            const insertNode = element.set('nodes', []).regenerateKey();\n            const afters = element.nodes.slice(position);\n            const at = index + 1;\n            controller.command(insertNodeByPath, parentPath, at, insertNode);\n            const insertNodePath = parentPath.concat(at);\n            const moveNodePath = path.concat(position);\n            afters.forEach((_, idx) => {\n              controller.command(\n                moveNodeByPath,\n                moveNodePath,\n                insertNodePath,\n                idx,\n              );\n            });\n          }\n        });\n      });\n    },\n  );\n  return controller;\n}\n\n/**\n * 在当前选区拆分 Block\n * \n * @param controller\n * @param depth 对于嵌套结构，可以指定拆分深度，默认拆分深度为 1 ，即只拆分距选区最近的 Block\n * @returns\n * @example\n * \n * ```ts\n * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                              │       \n * //       ▼                              ▼       \n * //     ┌───┐                          ┌───┐     \n * //     │ A │                          │ A │     \n * //     └───┘                          └───┘     \n * //       │       ──depth=3─▶            │       \n * //       ▼                         ┌─────────┐  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * //\n * \n * const newDocument = controller.commands('splitBlock');\n * \n *  * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                         ┌─────────┐  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ A │                     │ A │     │A1 │\n * //     └───┘                     └───┘     └───┘\n * //       │       ──depth=3─▶       │         │  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * //\n * \n * const newDocument = controller.commands('splitBlock', 3);\n *                                                      \n * ```\n */\nexport function splitBlock(controller: Controller, depth = 1) {\n  deleteExpanded(controller);\n\n  const { value } = controller;\n  const { selection, document } = value;\n  const marks = selection.marks || document.getInsertMarksAtRange(selection);\n  controller.command('splitBlockAtRange', selection, depth);\n  const range = controller.value.selection;\n  let newRange = range.moveToEnd(document);\n  if (marks.length || selection.marks) {\n    // 允许清除样式后 selection.marks = [] 继承到下一行\n    newRange = range.merge({\n      marks: marks.length ? marks : selection.marks,\n    });\n  }\n  return controller.command(select, newRange);\n}\n\n/**\n * 在指定选区区间拆分 Block\n * @param controller\n * @param selection\n * @param depth 对于嵌套结构，可以指定拆分深度，默认拆分深度为 1 ，即只拆分距选区最近的 Block\n * @returns\n * @example\n * \n * ```ts\n * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                              │       \n * //       ▼                              ▼       \n * //     ┌───┐                          ┌───┐     \n * //     │ A │                          │ A │     \n * //     └───┘                          └───┘     \n * //       │       ──depth=3─▶            │       \n * //       ▼                         ┌─────────┐  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * //\n * \n * const newDocument = controller.commands('splitBlockAtRange', cursor);\n * \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                         ┌─────────┐  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ A │                     │ A │     │A1 │\n * //     └───┘                     └───┘     └───┘\n * //       │       ──depth=3─▶       │         │  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * //\n * \n * const newDocument = controller.commands('splitBlockAtRange', cursor, 3);\n *                                                      \n * ```\n */\nexport function splitBlockAtRange(\n  controller: Controller,\n  selection: Selection,\n  depth = 1,\n) {\n  let range = selection;\n  let { value } = controller;\n  let { document } = value;\n  if (range.isCollapsed && range.anchor.isEdgePoint()) {\n    // 对于 edge selection，做特殊处理。\n    const point = range.anchor;\n    const isAtBefore = point.edge === EdgePoint.BEFORE;\n    controller.command(insertEmptyBlock, point);\n    if (isAtBefore) {\n      controller.command(select, range);\n    }\n    return controller;\n  }\n\n  range = deleteExpandedAtRange(controller, range);\n\n  const { start, end } = range.convertToTextPoints(document);\n  let node = document.assertNode(start.key);\n  let parent = document.getClosestBlock(node!.key);\n  let d = 0;\n\n  while (parent && d < depth) {\n    node = parent;\n    parent = document.getClosestBlock(parent.key);\n    d++;\n  }\n\n  return controller.withoutNormalizing(() => {\n    controller.command(\n      splitDescendantsByKey,\n      node!.key,\n      start.key,\n      start.offset,\n    );\n\n    value = controller.value;\n    document = value.document;\n\n    if (range.isExpanded) {\n      if (range.isBackward(document)) range = range.flip();\n      const nextBlock = document.getNextBlock(node!.key)!;\n      range = range.moveAnchorToStartOfNode(nextBlock, controller);\n\n      if (start.key === end.key) {\n        range = range.moveFocusTo(\n          range.anchor.key,\n          end.offset! - start.offset!,\n        );\n      }\n\n      controller.command('deleteAtRange', range);\n    }\n  });\n}\n\n/**\n * 在当前选区拆分 Inline\n * \n * @param controller\n * @param depth 对于嵌套结构，可以指定拆分深度，默认拆分深度为 1 ，即只拆分距选区最近的 Inline\n * @returns\n * @example\n * \n * ```ts\n * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                              │       \n * //       ▼                              ▼       \n * //     ┌───┐                          ┌───┐     \n * //     │ A │                          │ A │     \n * //     └───┘                          └───┘     \n * //       │       ──depth=3─▶            │       \n * //       ▼                         ┌─────────┐  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * //\n * \n * const newDocument = controller.commands('splitInline');\n * \n *  * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                         ┌─────────┐  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ A │                     │ A │     │A1 │\n * //     └───┘                     └───┘     └───┘\n * //       │       ──depth=3─▶       │         │  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * //\n * \n * const newDocument = controller.commands('splitInline', 3);\n *                                                      \n * ```\n */\nexport function splitInline(controller: Controller, depth = 1) {\n  deleteExpanded(controller);\n  const { selection } = controller.value;\n  return controller.command(splitInlineAtRange, selection, depth);\n}\n\n/**\n * 在指定选区区间拆分 Inline\n * @param controller\n * @param selection\n * @param depth 对于嵌套结构，可以指定拆分深度，默认拆分深度为 Infinity ，即从根节点开始拆分 Inline\n * @returns\n * @example\n * \n * ```ts\n * //\n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                         ┌─────────┐  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ A │                     │ A │     │A1 │\n * //     └───┘                     └───┘     └───┘\n * //       │   ──depth=Infinity─▶    │         │  \n * //       ▼                         ▼         ▼  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * // \n * \n * const newDocument = controller.commands('splitInlineAtRange', cursor);\n * \n * // \n * //   ┌───────┐                      ┌───────┐   \n * //   │ root  │                      │ root  │   \n * //   └───────┘                      └───────┘   \n * //       │                              │       \n * //       ▼                              ▼       \n * //     ┌───┐                          ┌───┐     \n * //     │ A │                          │ A │     \n * //     └───┘                          └───┘     \n * //       │       ──depth=1─▶            │       \n * //       ▼                         ┌─────────┐  \n * //     ┌───┐                     ┌───┐     ┌───┐\n * //     │ B │                     │ B │     │B1 │\n * //     └───┘                     └───┘     └───┘\n * //       │                         │         │  \n * //      │▼                         ▼         ▼  \n * //   ┌──┼────┐                   ┌───┐     ┌───┐\n * //   │'a│bc' │                   │'a'│     │'bc│\n * //   └──┼────┘                   └───┘     └───┘\n * //      │                                       \n * //   cursor                                    \n * \n * const newDocument = controller.commands('splitInlineAtRange', cursor, 1);\n *                                                      \n * ```\n */\nfunction splitInlineAtRange(controller: Controller, range, depth = Infinity) {\n  range = deleteExpandedAtRange(controller, range);\n  const { value } = controller;\n  const { document } = value;\n  const start = range.getStart(document);\n\n  let node = document.assertNode(start.key);\n  let parent = document.getClosestInline(node!.key);\n  let d = 0;\n\n  while (parent && Inline.isInline(parent) && d < depth) {\n    node = parent;\n    parent = document.getClosestInline(parent.key);\n    d++;\n  }\n\n  return controller.command(\n    splitDescendantsByKey,\n    node!.key,\n    start.key,\n    start.offset,\n  );\n}\n","import Path from \"../models/path\";\n\nexport const insertBlockTpl = () => 'cj/cmd/insblock';\nexport const insertInlineTpl = () => 'cj/cmd/insinline';\nexport const insertTpl = (path: Path) => `cj/cmd/ins(${JSON.stringify(path)})`\n","/* eslint-disable no-param-reassign */\n/**\n * @packageDocumentation\n * @module Commands\n */\nimport { splitDescendantsByKey, splitNodeByKey } from './split';\nimport {\n  moveToEndOfNode,\n  select,\n  moveToStart,\n  moveToStartOfNode,\n  moveBackward,\n  moveToStartOfNextBlock,\n} from './selection';\nimport Selection from '../models/selection';\nimport Controller from '../controller/index';\nimport Block, { BlockChild, BlockProperties } from '../models/block';\nimport Node from '../models/node';\nimport Path from '../models/path';\nimport Mark from '../models/mark';\nimport Document from '../models/document';\nimport Element from '../models/element';\nimport Inline, { InlineProperties } from '../models/inline';\nimport Text from '../models/text';\nimport { TextPoint, EdgePoint } from '../models/point';\nimport { deleteExpanded, deleteExpandedAtRange } from './utils';\nimport { moveNodeByKey } from './move';\nimport { removeNodeByKey } from './remove';\nimport listUtils from '../utils/listUtils';\nimport GraphemesBreaker from '../utils/grapheme/GraphemeBreaker';\nimport { insertBlockTpl, insertInlineTpl, insertTpl } from '../contexts/insert';\nimport { OperationType } from '../models/operation';\n\n/**\n * 在指定位置，插入一个node\n * @key 插入目标节点\n * @index 插入后在目标节点的顺序\n */\nexport function insertNodeByKey(\n  controller: Controller,\n  key: string,\n  index: number,\n  node: Node,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(insertNodeByPath, path, index, node);\n}\n\n/**\n * 在指定位置，插入一个node\n * @path 插入目标节点\n * @index 插入后在目标节点的顺序\n */\nexport function insertNodeByPath(\n  controller: Controller,\n  path: Path,\n  index: number,\n  node: Node,\n) {\n  const insertPath = [...path, index];\n  return controller.withOpContext(insertTpl(insertPath), () => {\n    return controller.applyOperation({\n      type: OperationType.InsertNode,\n      path: insertPath,\n      node,\n    });\n  });\n}\n\nfunction isBlockEmpty(controller: Controller, block: Block) {\n  return (\n    !controller.query('isVoid', block) &&\n    controller.query('isEmpty', block) &&\n    block.text === '' &&\n    !block.findDescendant((n) => controller.query('isVoid', n))\n  );\n}\n\n/**\n * 在当前选区插入一段文字，并附带marks。\n * 1. marks：会从参数里获取；如果参数没有提供，会尝试从当前selection获取；如果依然没有，就从当前的插入位置获取\n */\nexport function insertText(controller: Controller, text: string, ms?: Mark[]) {\n  const { value } = controller;\n  const { document, selection } = value;\n  if (!selection) {\n    return controller;\n  }\n  const marks =\n    ms || selection.marks || document.getInsertMarksAtRange(selection);\n  return controller.command(insertTextAtRange, selection, text, marks);\n}\n\n/**\n * 在 EdgePoint 的 before 或者 after 位置，插入一个空白的段落。\n */\nexport function insertEmptyBlock(controller: Controller, at: EdgePoint) {\n  let { document } = controller.value;\n  const block = document.getNode(at.key);\n  const parent = document.getParent(at.key);\n  const isAtBefore = at.edge === EdgePoint.BEFORE;\n  if (!block || !parent || !block.isElement() || !block.isBlock()) {\n    return controller;\n  }\n  const index = parent.nodes.indexOf(block);\n  const newBlock = Block.create(Block.DEFAULT_TYPE);\n  const insertIndex = isAtBefore ? index : index + 1;\n  controller.command(insertNodeByKey, parent.key, insertIndex, newBlock);\n  document = controller.value.document;\n  const node = newBlock.getFirstNode();\n  const anchor = TextPoint.create({ key: node.key, offset: 0 });\n  const focus = anchor;\n  return controller.command(select, Selection.create({ anchor, focus }));\n}\n\n/**\n * 在目标位置插入一段文字，并附带marks。\n * 1. 目标位置需要对应一个Text节点，否则会抛出异常\n * 2. marks：会从参数里获取；如果参数没有提供，会尝试从当前的插入位置获取\n */\nexport function insertTextAtRange(\n  controller: Controller,\n  r: Selection,\n  text: string,\n  marks?: Mark[],\n) {\n  if (r.isCollapsed && r.anchor.isEdgePoint()) {\n    controller.command(insertEmptyBlock, r.anchor);\n    const textNode = controller.value.focusText;\n    if (!textNode) {\n      return controller;\n    }\n    return controller.command(insertTextByKey, textNode.key, 0, text, marks);\n  }\n  const range = r.isExpanded ? deleteExpandedAtRange(controller, r) : r;\n  const { value } = controller;\n  const { document } = value;\n  const { start } = range.convertToTextPoints(document);\n  const parent = document.getParent(start.key);\n  if (controller.query('isVoid', parent)) {\n    return controller;\n  }\n\n  return controller.command(\n    insertTextByKey,\n    start.key,\n    start.offset,\n    text,\n    marks,\n  );\n}\n\n/**\n * 在目标位置插入一段文字，并附带marks。\n * 1. 目标位置需要对应一个Text节点，否则会抛出异常\n * 2. marks：会从参数里获取；如果参数没有提供，会尝试从当前的插入位置获取\n */\nexport function insertTextByKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n  text: string,\n  marks?: Mark[],\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(insertTextByPath, path, offset, text, marks);\n}\n\n/**\n * 在目标位置插入一段文字，并附带marks。\n * 1. 目标位置需要对应一个Text节点，否则会抛出异常\n * 2. marks：会从参数里获取；如果参数没有提供，会尝试从当前的插入位置获取\n */\nexport function insertTextByPath(\n  controller: Controller,\n  path: Path,\n  offset: number,\n  text: string,\n  ms?: Mark[],\n) {\n  const { value } = controller;\n  const { document, decorations } = value;\n  const node = document.assertNodeByPath(path);\n  if (!node.isText()) {\n    throw new Error(\n      `Commands.insertText, target([${path.join(',')}] type: ${\n        (node as Element).type\n      }) is not a Text node`,\n    );\n  }\n  const marks = ms || node.getMarksAtIndex(offset);\n\n  let updated = false;\n  const decs = decorations.filter((dec) => {\n    const { start, end, mark } = dec;\n    const isAtomic = controller.query('isAtomic', mark);\n    if (!isAtomic) {\n      return true;\n    }\n\n    const startPath = document.getPath(start.key);\n    if (!startPath) {\n      updated = true;\n      return false;\n    }\n    if (!Path.isEqual(startPath, path)) {\n      return true;\n    }\n\n    const endPath = document.getPath(end.key);\n    if (!endPath) {\n      updated = true;\n      return false;\n    }\n    if (\n      start.offset < offset &&\n      (!Path.isEqual(endPath, path) || end.offset > offset)\n    ) {\n      updated = true;\n      return false;\n    }\n\n    return true;\n  });\n  if (updated) {\n    controller.setValue(value.set('decorations', decs), { normalize: false });\n  }\n\n  return controller.applyOperation({\n    type: OperationType.InsertText,\n    path,\n    offset,\n    text: text || '',\n    marks: marks.map(Mark.create),\n  });\n}\n\n/**\n * 在指定的选区的start位置，插入一个block。\n * 1. 如果start节点在开始/结束位置，或者start节点是个空block，则直接插入；否则先split，后插入\n */\nexport function insertBlockAtRange(\n  controller: Controller,\n  range: Selection,\n  block: Block,\n) {\n  const newRange = deleteExpandedAtRange(controller, range);\n  const { value } = controller;\n  const { document } = value;\n\n  const { start } = newRange.convertToTextPoints(document);\n  let { key: startKey, offset: startOffset } = start;\n  const startBlock = document.getClosestBlock(startKey)!;\n  const startInline = document.getClosestInline(startKey);\n  const parent = document.getParent(startBlock.key)!;\n  const index = parent.nodes.indexOf(startBlock);\n\n  controller.withOpContext(insertBlockTpl(), () => {\n    if (newRange.anchor.isEdgePoint()) {\n      // If we insert block at edge point.\n      controller.command(\n        insertNodeByKey,\n        parent.key,\n        index + (newRange.anchor.edge === 'before' ? 0 : 1),\n        block,\n      );\n    } else if (!startInline && startBlock.text === '') {\n      // if we insert block at an empty block\n      controller.command(insertNodeByKey, parent.key, index + 1, block);\n    } else if (start.isAtStartOfNode(startBlock)) {\n      controller.command(insertNodeByKey, parent.key, index, block);\n    } else if (start.isAtEndOfNode(startBlock)) {\n      controller.command(insertNodeByKey, parent.key, index + 1, block);\n    } else {\n      // If we're in the middle of a block, we should consider split it first\n\n      // If we're in a void inline, we should move cursor to the sibliting text of the inline before spliting\n      if (startInline && controller.query('isVoid', startInline)) {\n        const atEnd = start.isAtEndOfNode(startInline);\n        const siblingText = atEnd\n          ? document.getNextText(startKey)\n          : document.getPreviousText(startKey);\n\n        const splitRange = atEnd\n          ? newRange.moveToStartOfNode(siblingText!, controller)\n          : newRange.moveToEndOfNode(siblingText!, controller);\n\n        const { anchor } = splitRange.convertToTextPoints(\n          controller.value.document,\n        );\n        startKey = anchor.key;\n        startOffset = anchor.offset;\n      }\n\n      controller.withoutNormalizing(() => {\n        controller.command(\n          splitDescendantsByKey,\n          startBlock.key,\n          startKey,\n          startOffset,\n        );\n        controller.command(insertNodeByKey, parent.key, index + 1, block);\n      });\n    }\n  });\n\n  return controller;\n}\n\n/**\n * 在当前选区位置，插入一个block。\n * 1. 如果当前选区是expand，会先执行删除选区操作。\n * 2. 如果start节点在开始/结束位置，或者start节点是个空block，则直接插入；否则先split，后插入\n * @blockProps block或者block参数，会传递给Block.create来创建一个block\n */\nexport function insertBlock(\n  controller: Controller,\n  blockProps: BlockProperties | Block | string,\n) {\n  const { selection } = controller.value;\n  const block = Block.create(blockProps);\n  controller.command(\n    insertBlockAtRange,\n    deleteExpandedAtRange(controller, selection),\n    block,\n  );\n\n  // move to end of inserted block\n  const node = controller.value.document.getNode(block.key);\n  if (node) {\n    controller.command(moveToEndOfNode, node);\n  }\n\n  return controller;\n}\n\n/**\n * 在当前选区位置，插入一个inline。\n * 1. 如果当前选区是expand，会先执行删除选区操作。\n */\nexport function insertInlineAtRange(\n  controller: Controller,\n  range: Selection,\n  inline: Inline,\n) {\n  controller.withOpContext(insertInlineTpl(), () => {\n    controller.withoutNormalizing(() => {\n      const point = deleteExpandedAtRange(controller, range).anchor;\n      if (range.isCollapsed && point.isEdgePoint()) {\n        controller.command(insertEmptyBlock, point);\n      }\n\n      const { document, selection } = controller.value;\n      const { start } = selection.convertToTextPoints(document);\n      const parent = document.getParent(start.key)!;\n      const startText = document.assertNode(start.key);\n      const index = parent.nodes.indexOf(startText);\n\n      if (controller.query('isVoid', parent)) return;\n\n      controller.command(splitNodeByKey, start.key, start.offset);\n      controller.command(insertNodeByKey, parent.key, index + 1, inline);\n    });\n  });\n  return controller;\n}\n\n/**\n * 在当前选区位置，插入一个inline。\n * 1. 如果当前选区是expand，会先执行删除选区操作。\n */\nexport function insertInline(\n  controller: Controller,\n  inlineProps: InlineProperties | Inline | string,\n) {\n  const { selection } = controller.value;\n  const inline = Inline.create(inlineProps);\n\n  controller.command(insertInlineAtRange, selection, inline);\n\n  // move to end of inserted block\n  const node = controller.value.document.getNode(inline.key);\n  if (node) {\n    controller.command(moveToEndOfNode, node);\n  }\n\n  return controller;\n}\n\n// If the fragment is wrapped by/nested in blocks, and the nesting pattern\n// already exists at the range, we meld the fragment contents into the\n// document’s existing nesting pattern as much as possible\n\n// Given a `fragment`, `document`, and `startKey`, it returns a Node from the\n// `fragment` to be inserted into the document. By default, the node returned\n// will be the `fragment`, but if a common nesting pattern is detected, a\n// sub-node of the fragment will be returned.\n\n// The detection algorithm is as follows:\n// 1. Ensure the fragment has a single child node, call it `fragmentInner`\n// 2. Find the furthest document ancestor of the `startKey` matching\n//    `fragmentInner.type`. Call this `documentInner`\n// 3. Drill into both `documentInner` and `fragmentInner` as long as each has\n//    a single child node and their types match. The stopping point for the\n//    fragment is the sub-node to insert into the document.\nconst findInsertionNode = (\n  fragment: Document,\n  document: Document,\n  startKey: string,\n) => {\n  const hasSingleNode = (object: Node): boolean => {\n    if (!object || Text.isText(object)) {\n      return false;\n    }\n    return (object as Element).nodes.length === 1;\n  };\n\n  const firstNode = (object: Element) => object && (object.nodes[0] as Element);\n  let node: Element = fragment;\n\n  if (hasSingleNode(fragment)) {\n    let fragmentInner = firstNode(fragment);\n\n    let documentInner = document.getFurthsest(startKey, (documentNode) => {\n      if (document instanceof Element) {\n        return (documentNode as Element).type === fragmentInner.type;\n      }\n      return false;\n    }) as Element;\n\n    if (documentInner === document.getParent(startKey)) {\n      node = fragmentInner;\n    }\n\n    while (\n      hasSingleNode(fragmentInner) &&\n      hasSingleNode(documentInner as Node)\n    ) {\n      fragmentInner = firstNode(fragmentInner);\n      documentInner = firstNode(documentInner);\n      if (fragmentInner.type === documentInner.type) {\n        node = fragmentInner;\n      } else {\n        break;\n      }\n    }\n  }\n  return node;\n};\n\n/**\n * 在目标位置插入一个fragment\n * 1. 内部遍历fragment的每一个node，然后调用Commands.insertNode\n * 2. 如果针对复制粘贴等上层场景，需要考虑key重新生成等逻辑，请使用Commands.insertFragment\n */\nexport function insertFragmentByKey(\n  controller: Controller,\n  key: string,\n  index: number,\n  fragment: Document,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(insertFragmentByPath, path, index, fragment);\n}\n\n/**\n * 在目标位置插入一个fragment\n * 1. 内部遍历fragment的每一个node，然后调用Commands.insertNode\n * 2. 如果针对复制粘贴等上层场景，需要考虑key重新生成等逻辑，请使用Commands.insertFragment\n */\nexport function insertFragmentByPath(\n  controller: Controller,\n  path: Path,\n  index: number,\n  fragment: Document,\n) {\n  fragment.nodes.forEach((node, i) => {\n    controller.command(insertNodeByPath, path, index + i, node);\n  });\n  return controller;\n}\n\n/**\n * 在当前插入一个fragment\n * 1. 内部会处理插入点、插入后的光标行为，以符合用户直觉\n */\nexport function insertFragment(controller: Controller, fragment: Document) {\n  if (!fragment.nodes.length) {\n    return controller;\n  }\n\n  // pre-step, delete the selection is it's expanded\n  deleteExpanded(controller);\n\n  // save the values before insert\n  let { value } = controller;\n  let { document } = value;\n  let { selection } = value;\n  if (!selection) {\n    return controller;\n  }\n\n  // 获取插入位置祖先 Block 元素, 非容器节点插入祖先为 Document、Block, 容器节点插入祖先为 Document、Block、Block...\n  const startAncestors = document.getAncestors(selection.anchor.key);\n  const lastText = fragment.getLastText();\n  if (!lastText) {\n    return controller;\n  }\n\n  const { start, end } = selection.sort(document);\n  const { startText, endText } = value;\n  const keys = document.getTexts().map((text) => text.key);\n\n  // perform insert\n  controller.command(insertFragmentAtRange, selection, fragment);\n\n  // get the new values after insert\n  ({ value } = controller);\n  ({ document } = value);\n  selection = value.selection;\n\n  const updatedTexts = document.getTexts();\n  const newTexts = updatedTexts.filter((n) => !keys.includes(n.key));\n  const lastNewText = newTexts[newTexts.length - 1];\n\n  // selection - take the selection back if it's removed (e.g. the last one block is deleted)\n  if (!selection && updatedTexts.length) {\n    const firstText = updatedTexts[0];\n    const point = TextPoint.create({ key: firstText.key, offset: 0 });\n    controller.command(\n      select,\n      Selection.create({ anchor: point, focus: point }),\n    );\n  }\n\n  /**\n   * 插入 fragment 后移动光标的位置：\n   * 1. 首先判断本次插入操作是否有产生新的 text，如果没有产生新 text 节点，则为纯文字的插入，光标会自动校正，不需要处理\n   * 2. 若产生了新的 text 节点，则先移动至 lastText 的 end 点\n   * 3. 如果插入的过程中产生了对一段文字的后半段做 split 操作，则需要做偏移校正，校正的距离为插入前光标距离末尾的偏移量\n   */\n  if (lastNewText) {\n    controller.command(moveToEndOfNode, lastNewText);\n    const blockParent = document.getClosestBlock(lastNewText.key);\n    const nextText = blockParent?.getNextText(lastNewText.key);\n    // lastText 节点的 nextText 节点与插入 fragment 前的 endText 相等\n    // 这种状况是由于在段落的行首插入一个 inline 元素不会触发 split 操作，这种情况不需要校正偏移量，直接移动至 next 的首位\n    if (nextText && nextText.key === end.key) {\n      controller.command(moveToStartOfNode, nextText);\n    } else if (endText && end.isTextPoint()) {\n      // 如果 nextText 节点不相等，则说明出现了文字截断，此时要做偏移位校正，校正时需要先从光标点位和字符串中取分割的文字串，然后再计算字数\n      // 注意这里有个小问题：Point 的 offset 表示的是字符的偏移量，但是 moveBackward 方法是做的字偏移，所以要计算 Unicode 字\n      // 关于 Unicode 的一个小问题：存在一种组合 Unicode 会导致字数计算有偏差，例如【👩‍ 🦱】，如果将空格删除，则两个 emoji 会合并，这种组合性的 emoji 在\n      // 字数计算的时候会被拆分出来成 2 个字\n      const subText = endText.text.substring(end.offset);\n      const offsetToEnd = GraphemesBreaker.countBreaks(subText);\n\n      const firstChildHasBlockChildren = fragment.nodes[0].hasBlockChildren();\n      const startBlock = startText && document.getClosestBlock(startText.key) as Block;\n      const isAtStartOfUnEmptyNode = startBlock && start.isAtStartOfNode(startBlock);\n      if (firstChildHasBlockChildren && isAtStartOfUnEmptyNode) {\n        // 不做光标移动\n      } else {\n        controller.command(moveBackward, offsetToEnd);\n      }\n      const subRoot = document.getAncestors(lastNewText.key)[1];\n\n      // 插入 Void Block 节点时，光标移到 Block 节点外部\n      if (\n        // 根据祖先元素长度判断是否在容器节点内插入内容, 如果根节点下插入容器节点，插入后光标最后移出容器\n        // 如果在容器内插入普通节点，光标保持在容器内部\n        startAncestors.length <= 2 &&\n        controller.query('isEdgeSelectable', subRoot) &&\n        subRoot.getLastText() === lastNewText\n      ) {\n        controller.command(moveToStartOfNextBlock);\n      }\n    }\n    if (controller.value.selection.isExpanded) {\n      controller.command(moveToStart);\n    }\n  }\n  return controller;\n}\n\n/**\n * 在指定的选区插入一个fragment\n * 1. 如果选区是expand，会先删除选区\n */\nexport function insertFragmentAtRange(\n  controller: Controller,\n  range: Selection,\n  fragment: Document,\n) {\n  if (!fragment.nodes.length) {\n    return controller;\n  }\n  return controller.withoutNormalizing(() => {\n    range = deleteExpandedAtRange(controller, range);\n    if (range.isCollapsed && range.anchor.isEdgePoint()) {\n      controller.command(insertEmptyBlock, range.anchor);\n      range = controller.value.selection;\n    }\n\n    fragment = fragment.mapDescendants((child) => child.regenerateKey());\n\n    // NOTE: 这里调用 command key 试插件 onCommand 时间触发，主要用于图片的复制转存逻辑\n    // TODO: 在 model 增加一个可以不计入 asl 的 attributes，用于存储 key\n    controller.command('insertFragmentWithRealKeyAtRange', range, fragment);\n  });\n}\n\n/**\n * 在指定的选区插入一个fragment\n * 1. fragment必须包含有效的无冲突的key\n */\nexport function insertFragmentWithRealKeyAtRange(\n  controller: Controller,\n  range: Selection,\n  fragment: Document,\n) {\n  const { value } = controller;\n  let { document } = value;\n\n  // checking the start point\n  const { start, end } = range.convertToTextPoints(document);\n  let startText = document.getNode(start.key) as Node;\n  let startBlock = document.getClosestBlock(startText.key) as Block;\n  let startChild = startBlock.getFurthestAncestor(startText.key) as Element;\n  const isAtStart = start.isAtStartOfNode(startBlock);\n  const isAtEnd = end.isAtEndOfNode(startBlock);\n  let parent = document.getParent(startBlock.key) as Element;\n  const index = parent.nodes.indexOf(startBlock);\n\n  const blocks = fragment.getBlocks();\n  if (blocks.length === 0) {\n    return controller;\n  }\n\n  const firstChild = fragment.nodes[0] as Block;\n  const lastChild = fragment.nodes[fragment.nodes.length - 1] as Block;\n  const firstBlock = blocks[0];\n  const lastBlock = blocks[blocks.length - 1];\n\n  const insertionNode = findInsertionNode(fragment, document, startBlock.key);\n\n  // 设置用户数据\n  controller.userData.mergeUserData(fragment);\n\n  // If the new fragment only contains a void block, use `insertBlockAtRange`\n  if (\n    firstBlock === lastBlock &&\n    controller.query('isVoid', firstBlock) &&\n    !controller.query('isContainer', insertionNode)\n  ) {\n    controller.command(insertBlockAtRange, range, firstBlock);\n    return controller;\n  }\n\n  // If the new fragment starts or ends with a single nested block,\n  // e.g. a table, use `insertBlockAtRange`\n  const firstChildHasBlockChildren = firstChild.hasBlockChildren();\n  const lastChildHasBlockChildren = lastChild.hasBlockChildren();\n  if (\n    insertionNode === fragment &&\n    (firstChildHasBlockChildren || lastChildHasBlockChildren)\n  ) {\n    // 如果插入的第一个节点是一个容器节点：\n    //\n    // Fragment:\n    // ```tsx\n    // <document>\n    //   <block>\n    //     <block>Hello</block>\n    //     <block>World</block>\n    //   </block>\n    //   <block>Cangjie</block>\n    // </document>\n    // ```\n    //\n    // 插入到光标位置\n    // ```tsx\n    // <document>\n    //   <block>Intro<cursor />123</block>\n    //   <block>Command</block>\n    // </document>\n    // ```\n    //\n    // 期望是\n    // ```tsx\n    // <document>\n    //   <block>Intro</block>\n    //   <block>\n    //     <block>Hello</block>\n    //     <block>World</block>\n    //   </block>\n    //   <block>Cangjie</block>\n    //   <block>123</block>\n    //   <block>Command</block>\n    // </document>\n    // ```\n    //\n    if (firstChildHasBlockChildren) {\n      // 非空节点插入内容，不需要进行 reverse\n      const isAtStartOfUnEmptyNode = start.isAtStartOfNode(startBlock);\n      const nodes = isAtStartOfUnEmptyNode ? fragment.nodes : [...fragment.nodes].reverse();\n      nodes.forEach((node) => {\n        controller.command(insertBlockAtRange, range, node as Block);\n      });\n      return controller;\n    }\n\n    // 如果插入的最后一个节点是一个容器节点：\n    //\n    // Fragment:\n    // ```tsx\n    // <document>\n    //   <block>Cangjie</block>\n    //   <block>\n    //     <block>Hello</block>\n    //     <block>World</block>\n    //   </block>\n    // </document>\n    // ```\n    //\n    // 插入到光标位置\n    // ```tsx\n    // <document>\n    //   <block>Intro<cursor />123</block>\n    // </document>\n    // ```\n    //\n    // 期望是\n    // ```tsx\n    // <document>\n    //   <block>IntroCangjie</block>\n    //   <block>\n    //     <block>Hello</block>\n    //     <block>World</block>\n    //   </block>\n    //   <block>123</block>\n    // </document>\n    // ```\n    //\n    if (lastChildHasBlockChildren) {\n      // 插入最后一个节点，再在原位置插入剩余节点\n      controller.command(insertBlockAtRange, range, lastChild);\n      const rest = fragment.removeNode([fragment.nodes.length - 1]);\n      if (rest.nodes.length) {\n        controller.command(insertFragmentWithRealKeyAtRange, range, rest);\n      }\n    }\n    return controller;\n  }\n\n  // If the first and last block aren't the same, we need to insert all of the\n  // nodes after the insertion node's first block at the index.\n  if (firstBlock !== lastBlock) {\n    const lonelyParent = insertionNode.getFurthsest(\n      firstBlock.key,\n      (p) => (p as Block).nodes.length === 1,\n    );\n    const lonelyChild = lonelyParent || firstBlock;\n\n    const startIndex = parent.nodes.indexOf(startBlock);\n    const excludingLonelyChild = insertionNode.removeNode(\n      insertionNode.assertPath(lonelyChild.key),\n    );\n\n    excludingLonelyChild.nodes.forEach((node, i) => {\n      const newIndex = startIndex + i + 1;\n      controller.command(insertNodeByKey, parent.key, newIndex, node);\n    });\n  }\n\n  // Check if we need to split the node.\n  if (start.offset !== 0) {\n    controller.command(\n      splitDescendantsByKey,\n      startChild.key,\n      start.key,\n      start.offset,\n    );\n  }\n\n  ({ document } = controller.value);\n  startText = document.getNode(start.key) as Node;\n  startBlock = document.getClosestBlock(start.key) as Block;\n  parent = document.getParent(startBlock.key) as Element;\n  startChild = startBlock.getFurthestAncestor(startText.key) as Element;\n\n  if (firstBlock !== lastBlock) {\n    const nextChild = isAtStart\n      ? startChild\n      : startBlock.getNextSibling(startChild.key);\n    const nextNodes = nextChild\n      ? listUtils.skipUntil(startBlock.nodes, (n) => n.key === nextChild.key)\n      : [];\n    const block = document.assertElement(lastBlock.key);\n\n    if (!controller.query('isVoid', block)) {\n      // 如果插入的最后一个节点是非 void block，则 split 后的 nodes 可以追加到 block 末尾\n      // Fragment:\n      // ```ts\n      // <document>\n      //   <block>Hello</block>\n      //   <block>World</block>\n      // </document>\n      // ```\n      //\n      // 在如下光标位置插入:\n      // ```ts\n      // <document>\n      //   <block>123<cursor />45</block>\n      // </document>\n      // ```\n      //\n      // 期望的插入结果是:\n      // ```ts\n      // <document>\n      //   <block>123Hello</block>\n      //   <block>World45</block>\n      // </document>\n      // ```\n      const moveTo = block.nodes.length;\n      nextNodes.forEach((node, i) => {\n        const newIndex = moveTo + i;\n        controller.command(moveNodeByKey, node.key, block.key, newIndex);\n      });\n    } else {\n      // 如果插入的最后一个节点是 void block，则 split 后的 nodes 可以插入到 block 之后\n      // Fragment:\n      // ```ts\n      // <document>\n      //   <block>Hello</block>\n      //   <void-block />\n      // </document>\n      // ```\n      //\n      // 在如下光标位置插入:\n      // ```ts\n      //   <document>\n      //     <block>123<cursor />45</block>\n      //   </document>\n      // ```\n      //\n      // 期望的插入结果为:\n      // ```ts\n      //   <document>\n      //     <block>123Hello</block>\n      //     <void-block />\n      //     <block>45</block>\n      //   </document>\n      // ```\n      const insertAt =\n        document.assertElement(parent.key).nodes.indexOf(block) + 1;\n      nextNodes.forEach((node) => {\n        controller.command(removeNodeByKey, node.key);\n      });\n      // 新插入的节点继承原 block 的属性\n      const restBlock = startBlock\n        .set('nodes', nextNodes)\n        .regenerateKey() as Block;\n      if (!isAtEnd) {\n        controller.command(insertNodeByKey, parent.key, insertAt, restBlock);\n      }\n    }\n  }\n\n  if (isBlockEmpty(controller, startBlock)) {\n    // 如果 start block 为空，则直接替换 start block 为待插入的 first block\n    // 是否为空的断言需要插件实现 `isEmpty`，即由插件决定某个元素是否可以被判定为空，且被替换\n    // Fragment:\n    // ```ts\n    //   <document>\n    //     <block>Hello</block>\n    //     <block>World</block>\n    //   </document>\n    // ```\n    //\n    // 在如下光标位置插入:\n    // ```ts\n    //   <document>\n    //     <block><cursor /></block>\n    //   </document>\n    // ```\n    //\n    // 期望的插入结果是:\n    // ```ts\n    // <document>\n    //   <block>Hello</block>\n    //   <block>World</block>\n    // </document>\n    // ```\n    controller\n      .command(insertNodeByKey, parent.key, index, firstBlock)\n      .command(removeNodeByKey, startBlock.key);\n  } else {\n    // 否则，保留 start block，并在 start block 的分裂位置插入 first block 的子孙\n    // 1. first block is non-void\n    // Fragment:\n    // ```ts\n    // <document>\n    //   <block>Hello</block>\n    //   <block>World</block>\n    // </document>\n    // ```\n    //\n    // 在如下光标位置插入:\n    // ```ts\n    // <document>\n    //   <block>Cangjie<cursor /></block>\n    // </document>\n    // ```\n    //\n    // 期望的插入结果是:\n    // ```ts\n    // <document>\n    //   <block>CangjieHello</block>\n    //   <block>World</block>\n    // </document>\n    // ```\n    //\n    // 2. first block is void\n    // Fragment:\n    // ```ts\n    // <document>\n    //   <void-block />\n    //   <block>World</block>\n    // </document>\n    // ```\n    //\n    // 在如下光标位置插入:\n    // ```ts\n    // <document>\n    //   <block>Cangjie<cursor /></block>\n    // </document>\n    // ```\n    //\n    // 期望的插入结果是:\n    // ```ts\n    // <document>\n    //   <block>Cangjie</block>\n    //   <void-block />\n    //   <block>World</block>\n    // </document>\n    // ```\n    // 否则，保留 start block，并在 start block 的分裂位置插入 first block 的子孙\n    const inlineChild = startBlock.getFurthestAncestor(\n      startText.key,\n    ) as BlockChild;\n    const inlineIndex = startBlock.nodes.indexOf(inlineChild);\n    if (controller.query('isVoid', firstBlock)) {\n      const insertAt = parent.nodes.indexOf(startBlock) + 1;\n      controller.command(insertNodeByKey, parent.key, insertAt, firstBlock);\n    } else {\n      firstBlock.nodes.forEach((inline, i) => {\n        const o = start.offset === 0 ? 0 : 1;\n        const newIndex = inlineIndex + i + o;\n        controller.command(insertNodeByKey, startBlock.key, newIndex, inline);\n      });\n    }\n  }\n  return controller;\n}\n","import Node from '../models/node';\nimport Path from '../models/path';\n\nexport const mergeTpl = (node: Node, path: Path) =>\n  `cj/cmd/merge_${node.isElement() ? 'node' : 'text'}(${JSON.stringify(path)})`;\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport Controller from '../controller/index';\nimport Path from '../models/path';\nimport Text from '../models/text';\nimport { removeNodeByPath } from './remove';\nimport { moveNodeByPath } from './move';\nimport { insertTextByPath } from './insert';\nimport { mergeTpl } from '../contexts/merge';\n\n/**\n * 把目标 path 的 Node，合并到其上一个 Sibling 上。\n * 1. 必须满足 Node 和上一个 Sibling 是同一种类型。\n * 2. 如果没有上一个 Sibling，直接抛异常。\n */\nexport function mergeNodeByKey(controller: Controller, key: string) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(mergeNodeByPath, path);\n}\n\n/**\n * 把目标 path 的 Node，合并到其上一个 Sibling 上。\n * 1. 必须满足 Node 和上一个 Sibling 是同一种类型。\n * 2. 如果没有上一个 Sibling，直接抛异常。\n */\nexport function mergeNodeByPath(controller: Controller, path: Path) {\n  const { value } = controller;\n  const { document } = value;\n  const original = document.getNodeByPath(path)!;\n  const previous = original ? document.getPreviousSibling(original.key) : null;\n\n  if (!previous) {\n    throw new Error(\n      `Unable to merge node with path \"${path}\", because it has no previous sibling.`,\n    );\n  }\n  if (previous.constructor !== original.constructor) {\n    throw new Error(\n      `Unable to merge two different kinds of nodes: ${previous} and ${original}`,\n    );\n  }\n\n  const previousPath = document.getPath(previous.key)!;\n  const previousNode = previous.toSubType();\n\n  const position = previousNode.isText()\n    ? previousNode.text.length\n    : previousNode.nodes.length;\n\n  controller.withOpContext(mergeTpl(original, path), () => {\n    controller.withoutNormalizing(() => {\n      if (original.isElement()) {\n        const moveNodePath = [...path, 0];\n        original.nodes.forEach((node, index) => {\n          controller.command(\n            moveNodeByPath,\n            moveNodePath,\n            previousPath,\n            position + index,\n          );\n        });\n        controller.command(removeNodeByPath, path);\n      } else {\n        const { leaves } = original as Text;\n        let offset = previousNode.text.length;\n        const { selection, decorations } = controller.value;\n        leaves.forEach((leaf) => {\n          controller.command(\n            insertTextByPath,\n            previousPath,\n            offset,\n            leaf.text,\n            leaf.marks,\n          );\n          offset += leaf.text.length;\n        });\n        controller.command(removeNodeByPath, path);\n        // 处理 updatePoints 的问题；具体请参考 split 中同样的处理\n        const valueToUpdate = controller.value\n          .set('decorations', decorations)\n          .set('selection', selection);\n        const updatedValue = valueToUpdate.updatePoints(\n          valueToUpdate.document,\n          (point) => {\n            if (point.key === original.key) {\n              return point.merge({\n                key: previousNode.key,\n                offset: point.offset + position,\n              });\n            }\n            return point;\n          },\n        );\n        controller.setValue(updatedValue, { clearOperations: false });\n      }\n    });\n  });\n\n  return controller;\n}\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport Controller from '../controller/index';\nimport Mark from '../models/mark';\nimport Selection from '../models/selection';\nimport Text from '../models/text';\nimport Path from '../models/path';\nimport setUtils from '../utils/setUtils';\nimport { OperationType } from '../models/operation';\n\n/**\n * 在当前选区，添加mark\n * 1. 如果选区是expand，会设置当前选中内容的mark\n * 2. 如果选区是collapse，会把m和当前的选区的marks，一起合并到当前selection内\n */\nexport function addMark(controller: Controller, m: Mark) {\n  const mark = Mark.create(m);\n  const { value } = controller;\n  const { document, selection } = value;\n\n  if (selection.isExpanded) {\n    controller.command(addMarkAtRange, selection, mark);\n  } else {\n    const activeMarks =\n      selection.marks || document.getActiveMarksAtRange(selection);\n    const sel = selection.set('marks', setUtils.add(activeMarks, mark));\n    controller.command('select', sel);\n  }\n\n  return controller;\n}\n\n/**\n * 对指定的选区内，增加mark\n * 1. 如果选区是collapse，则什么都不做\n */\nexport function addMarkAtRange(\n  controller: Controller,\n  range: Selection,\n  mark: Mark,\n) {\n  if (range.isCollapsed) return controller;\n\n  const { value } = controller;\n  const { document } = value;\n  const { start, end } = range.convertToTextPoints(document);\n  const texts = document.getTextsAtRange(range);\n  controller.withoutNormalizing(() => {\n    texts.forEach((node) => {\n      const { key } = node;\n      let offset = 0;\n      let { length } = node.text;\n\n      if (key === start.key) ({ offset } = start);\n      if (key === end.key) length = end.offset;\n      if (key === start.key && key === end.key) {\n        length = end.offset - start.offset;\n      }\n\n      controller.command(addMarkByKey, key, offset, length, mark);\n    });\n  });\n  return controller;\n}\n\n/**\n * 对指定的选区内，增加mark\n * 1. 如果选区是collapse，则什么都不做\n */\nexport function addMarkByKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n  length: number,\n  mark: Mark,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(addMarkByPath, path, offset, length, mark);\n}\n\n/**\n * 对一个text节点的一部分文字，增加mark\n * 1. 如果目标无效，或者不是一个text，则什么都不做\n */\nexport function addMarkByPath(\n  controller: Controller,\n  path: Path,\n  offset: number,\n  length: number,\n  mark: Mark,\n) {\n  const node = controller.value.document.getNodeByPath(path);\n  if (!node || !Text.isText(node)) return controller;\n\n  // Text start offset\n  const bx = offset;\n  // Text end offset\n  const by = offset + length;\n  // Current Leaf start offset\n  let o = 0;\n\n  node.leaves.forEach((leaf) => {\n    // Leaf start offset\n    const ax = o;\n    // Leaf end offset\n    const ay = ax + leaf.text.length;\n    // 叠加偏移量\n    o += leaf.text.length;\n\n    // If the leaf doesn't overlap with the operation, continue on.\n    if (ay < bx || by < ax) return;\n\n    // If the leaf already has the mark, continue on.\n    if (leaf.marks.find((m) => m.isEqual(mark))) return;\n\n    // Otherwise, determine which offset and characters overlap.\n    const start = Math.max(ax, bx);\n    const end = Math.min(ay, by);\n\n    controller.applyOperation({\n      type: OperationType.AddMark,\n      path,\n      offset: start,\n      length: end - start,\n      mark,\n    });\n  });\n\n  return controller;\n}\n\n/**\n * 在当前选区，添加marks\n * 1. 如果选区是expand，会设置当前选中内容的marks\n * 2. 如果选区是collapse，会把marks和当前的选区的marks，一起合并到当前selection内\n */\nexport function addMarks(controller: Controller, marks: Mark[]) {\n  marks.forEach((mark) => controller.command(addMark, mark));\n  return controller;\n}\n\n/**\n * 对指定的选区内，增加marks\n * 1. 如果选区是collapse，则什么都不做\n */\nexport function addMarksAtRange(\n  controller: Controller,\n  range: Selection,\n  marks: Mark[],\n) {\n  marks.forEach((mark) => controller.command(addMarkAtRange, range, mark));\n  return controller;\n}\n\n/**\n * 在当前的选区内，toggleMark\n * 1. 如果选区是expand，会设置到当前选中内容\n * 2. 如果选区是collapse，会设置到当前的selection\n */\nexport function toggleMark(controller: Controller, m: Mark) {\n  const mark = Mark.create(m);\n  const { value } = controller;\n  const { selection, document } = value;\n\n  if (selection.isExpanded) {\n    return controller.command(toggleMarkAtRange, selection, mark);\n  }\n  const activeMarks =\n    selection.marks || document.getActiveMarksAtRange(selection);\n  const newMarks = setUtils.has(activeMarks, mark)\n    ? setUtils.remove(activeMarks, mark)\n    : setUtils.add(activeMarks, mark);\n\n  const sel = selection.set('marks', newMarks);\n  return controller.command('select', sel);\n}\n\n/**\n * 在指定的选区内，toggleMark\n * 1. 如果选区是collapse，什么都不做\n */\nexport function toggleMarkAtRange(\n  controller: Controller,\n  range: Selection,\n  m: Mark,\n) {\n  if (range.isCollapsed) {\n    return controller;\n  }\n\n  const mark = Mark.create(m);\n  const { value } = controller;\n  const { document } = value;\n  const activeMarks = document.getActiveMarksAtRange(range);\n  if (setUtils.has(activeMarks, mark)) {\n    controller.command(removeMarkAtRange, range, mark);\n  } else {\n    controller.command(addMarkAtRange, range, mark);\n  }\n  return controller;\n}\n\n/**\n * 在当前的选区内，删除mark\n * 1. 如果选区是expand，会设删除当前选中内容的mark\n * 2. 如果选区是collapse，会删除当前的selection的mark\n */\nexport function removeMark(controller: Controller, m: Mark) {\n  const mark = Mark.create(m);\n  const { value } = controller;\n  const { document, selection } = value;\n\n  if (selection.isExpanded) {\n    return controller.command(removeMarkAtRange, selection, mark);\n  }\n  const activeMarks =\n    selection.marks || document.getActiveMarksAtRange(selection);\n  const sel = selection.set('marks', setUtils.remove(activeMarks, mark));\n  return controller.command('select', sel);\n}\n\n/**\n * 在指定的选区内，删除mark\n * 1. 如果选区是collapse，什么都不做\n */\nexport function removeMarkAtRange(\n  controller: Controller,\n  range: Selection,\n  mark: Mark,\n) {\n  if (range.isCollapsed) return controller;\n\n  const { value } = controller;\n  const { document } = value;\n  const { start, end } = range.convertToTextPoints(document);\n  const texts = document.getTextsAtRange(range);\n  controller.withoutNormalizing(() => {\n    texts.forEach((node) => {\n      const { key } = node;\n      let offset = 0;\n      let { length } = node.text;\n\n      if (key === start.key) ({ offset } = start);\n      if (key === end.key) length = end.offset;\n      if (key === start.key && key === end.key) {\n        length = end.offset - start.offset;\n      }\n\n      controller.command(removeMarkByKey, key, offset, length, mark);\n    });\n  });\n  return controller;\n}\n\n/**\n * 对指定的节点，删除mark\n * 1. 如果指定的节点无效，会抛异常\n */\nexport function removeMarkByKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n  length: number,\n  mark: Mark,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(removeMarkByPath, path, offset, length, mark);\n}\n\n/**\n * 对指定的节点，删除mark\n * 1. 如果指定的节点无效，会抛异常\n */\nexport function removeMarkByPath(\n  controller: Controller,\n  path: Path,\n  offset: number,\n  length: number,\n  mark: Mark,\n) {\n  const text = controller.value.document.getNodeByPath(path) as Text;\n  let totalOffset = 0;\n  text.leaves.forEach(leaf => {\n    // current start offset\n    const o = totalOffset;\n    const leafLength = leaf.text.length;\n    totalOffset += leafLength;\n\n    if (o + leafLength < offset || o > offset + length) return;\n\n    if (!setUtils.has(leaf.marks, mark)) return;\n\n    const start = Math.max(offset, o);\n    const end = Math.min(offset + length, o + leafLength);\n    controller.applyOperation({\n      type: OperationType.RemoveMark,\n      path,\n      offset: start,\n      length: end - start,\n      mark,\n    });\n  });\n  return controller;\n}\n\n/**\n * 对指定的节点，替换或者添加mark\n * 1. 如果指定的节点无效，会抛异常\n */\nexport function replaceMark(\n  controller: Controller,\n  oldMark: Mark,\n  newMark: Mark,\n) {\n  return controller.command(removeMark, oldMark).command(addMark, newMark);\n}\n","/* eslint-disable prefer-destructuring */\n/**\n * @packageDocumentation\n * @module Commands\n */\nimport { takeRightWhile } from 'lodash-es';\nimport Controller from '../controller/index';\nimport Node from '../models/node';\nimport Selection from '../models/selection';\nimport Block from '../models/block';\nimport Text from '../models/text';\nimport { removeNodeByKey, removeTextByKey } from './remove';\nimport { mergeNodeByKey } from './merge';\nimport { moveNodeByKey } from './move';\nimport {\n  select,\n  moveAnchorBackward,\n  moveToAnchor,\n  moveToStartOfNextBlock,\n} from './selection';\nimport {\n  MoveUnit,\n  pointAtEndOfNode,\n  pointAtStartOfNode,\n  pointAtDistance,\n} from '../queries/selection';\nimport textUtils from '../utils/textUtils';\nimport { insertEmptyBlock } from './insert';\nimport { EdgePoint, TextPoint } from '../models/point';\nimport { removeMarkByKey } from './mark';\n\n/**\n * 删除 Selection 内的所有内容\n */\nexport function deleteAtRange(controller: Controller, range: Selection) {\n  const { value } = controller;\n  let { document } = value;\n\n  let { start, end } = range.sort(document);\n\n  // edge point - shim them for hanging positions\n  if (start.isEdgePoint() && start.edge === EdgePoint.AFTER) {\n    start = controller.query(pointAtDistance, start, 1);\n  }\n  if (end.isEdgePoint() && end.edge === EdgePoint.BEFORE) {\n    end = controller.query(pointAtDistance, end, -1);\n  }\n\n  const detectSelection = Selection.create({ anchor: start, focus: end });\n  if (\n    detectSelection.isCollapsedAtEdge ||\n    detectSelection.isBackward(document)\n  ) {\n    return controller;\n  }\n\n  // edge point - delete them\n  if (start.isEdgePoint()) {\n    const node = controller.value.document.getNode(start.key);\n    controller\n      .command(insertEmptyBlock, start)\n      .command(removeNodeByKey, start.key);\n    if (start.key === end.key || (node?.isElement() && node.hasNode(end.key))) {\n      return controller;\n    }\n    // selection is focused to the new text point\n    start = controller.value.selection.anchor as TextPoint;\n  }\n  if (end.isEdgePoint()) {\n    const node = controller.value.document.getNode(end.key);\n    controller.command(insertEmptyBlock, end).command(removeNodeByKey, end.key);\n    if (node?.isElement() && node.hasNode(start.key)) {\n      return controller;\n    }\n    // selection is focused to the new text point\n    end = controller.value.selection.anchor as TextPoint;\n  }\n  document = controller.value.document;\n\n  // now [start, end] are text points\n  let startOffset = start.offset;\n  let endOffset = end.offset;\n  let startKey = start.key;\n  let endKey = end.key;\n  const startText = document.assertNode(start.key);\n  const endText = document.assertNode(end.key);\n\n  let startBlock = document.assertClosestBlock(startKey);\n  let endBlock = document.assertClosestBlock(endKey);\n\n  const isCrossBlock = startBlock.key !== endBlock.key;\n\n  const isStartVoid = document.hasVoidParent(startKey, controller);\n  const isEndVoid = document.hasVoidParent(endKey, controller);\n\n  // BACKGROUND: Hanging Selection\n  // If we select from one paragraph start point to another paragraph start point.\n  // The selected content user sees is the first paragraph.\n  // If we do a delete on hanging selection, we should delete selection that user sees.\n  const isHanging =\n    startOffset === 0 &&\n    endOffset === 0 &&\n    isStartVoid === false &&\n    isEndVoid === false &&\n    startKey === startBlock.getFirstNode().key &&\n    endKey === endBlock.getFirstNode().key &&\n    startKey !== endKey;\n\n  // Remove all text nodes between start block & end block\n  controller.withoutNormalizing(() => {\n    const removeNode = (node: Node) => {\n      controller.command(removeNodeByKey, node.key);\n    };\n\n    // In a single text node\n    if (startKey === endKey && !isHanging && !isStartVoid) {\n      controller.command(\n        removeTextByKey,\n        startKey,\n        startOffset,\n        startText.text.slice(startOffset, endOffset),\n      );\n      return controller;\n    }\n\n    // Remove selected text in start text node\n    if (startText && startText.text.length - startOffset > 0) {\n      controller.command(\n        removeTextByKey,\n        startKey,\n        startOffset,\n        startText.text.slice(startOffset),\n      );\n    }\n\n    // Remove selected text in end text node\n    if (endText && endOffset > 0) {\n      controller.command(\n        removeTextByKey,\n        endKey,\n        0,\n        endText.text.slice(0, endOffset),\n      );\n    }\n\n    if (startKey !== endKey) {\n      // Remove nodes between start text and end text\n      const ancestor = document.assertCommonAncestor(startKey, endKey);\n      const ancestorNodes = ancestor.nodes;\n      const startChild = ancestor.assertFurthestAncestor(startKey);\n      const endChild = ancestor.assertFurthestAncestor(endKey);\n\n      // Remove nodes from bottom to top in start child\n      let child = startText;\n\n      while (child.key !== startChild.key) {\n        const parent = document.assertParent(child.key);\n        const afters = parent.nodes.slice(parent.nodes.indexOf(child) + 1);\n        afters.forEach(removeNode);\n        child = parent;\n      }\n\n      // Remove nodes between start child & end child\n      const middles = ancestorNodes.slice(\n        ancestorNodes.indexOf(startChild) + 1,\n        ancestorNodes.indexOf(endChild),\n      );\n\n      middles.forEach(removeNode);\n\n      // Remove nodes from top to bottom in end child\n      child = endText;\n\n      while (child.key !== endChild.key) {\n        const parent = document.assertParent(child.key);\n        const befores = parent.nodes.slice(0, parent.nodes.indexOf(child));\n        befores.forEach(removeNode);\n        child = parent;\n      }\n    }\n\n    document = controller.value.document;\n\n    // Find and remove furthest void ancestor\n    if (isStartVoid) {\n      const startVoidAncestor = document.getFurthsestVoid(\n        startKey,\n        controller,\n      )!;\n      const nextText = document.getNextText(startVoidAncestor.key);\n      removeNode(startVoidAncestor);\n      if (startKey === endKey) {\n        return controller;\n      }\n      // Move start to the start of next text\n      if (!nextText) {\n        // If we can't find the next text, we're done\n        return controller;\n      }\n      startKey = nextText.key;\n      startOffset = 0;\n      document = controller.value.document;\n    }\n\n    if (isEndVoid) {\n      const endVoidAncestor = document.getFurthsestVoid(endKey, controller)!;\n      const prevText = document.getPreviousText(endVoidAncestor.key);\n      removeNode(endVoidAncestor);\n      // Move end to the end of previous text\n      if (!prevText) {\n        return controller;\n      }\n      if (startKey === endKey) {\n        // endKey is removed!\n        startKey = prevText.key;\n        startOffset = prevText.text.length;\n      }\n      endKey = prevText.key;\n      endOffset = prevText.text.length;\n      document = controller.value.document;\n    }\n    startBlock = document.getClosestBlock(startKey)!;\n    endBlock = document.getClosestBlock(endKey)!;\n\n    if (endKey === startKey) {\n      if (isHanging) {\n        return removeNode(startBlock);\n      }\n\n      if (isCrossBlock && document.getPreviousSibling(endBlock.key)) {\n        return controller.command(mergeNodeByKey, endBlock.key);\n      }\n    }\n\n    if (!startBlock) {\n      return controller;\n    }\n\n    const startParent = document.getParent(startBlock.key)!;\n    const startParentIndex = startParent.nodes.indexOf(startBlock);\n    const endParentIndex = startParent.nodes.indexOf(endBlock);\n\n    // Move the end block into start block and merge them\n    if (startBlock.key !== endBlock.key) {\n      // If end block's ancestor is empty after merge, we should remove it\n      const ancestors = document.getAncestors(endBlock.key);\n      const lonely = ancestors\n        ? takeRightWhile(\n            // Ignore document\n            ancestors.slice(1),\n            (node) => node.nodes.length <= 1,\n          )[0]\n        : null;\n\n      // Put end block under the start block\n      if (endParentIndex !== startParentIndex + 1) {\n        controller.command(\n          moveNodeByKey,\n          endBlock.key,\n          startParent.key,\n          startParentIndex + 1,\n        );\n      }\n\n      // If selection is hanging, we should remove start block(what user sees)\n      if (isHanging) {\n        removeNode(startBlock);\n      } else {\n        controller.command(mergeNodeByKey, endBlock.key);\n      }\n\n      if (lonely) {\n        removeNode(lonely);\n      }\n    }\n\n    return controller;\n  });\n\n  document = controller.value.document;\n\n  const { start: rangeStart } =\n    controller.value.selection.convertToTextPoints(document);\n  const closest = document.getClosestBlock(rangeStart.key);\n  const isEmptyParagraph =\n    Text.isTextList(closest?.nodes) && closest?.text === '';\n\n  return controller.withoutNormalizing(() => {\n    const nextStart = document.getNode(startKey);\n    const nextEnd = document.getNode(endKey);\n    if (!nextStart && !nextEnd) return;\n\n    if (!nextStart || !nextEnd || nextStart.key === nextEnd.key) {\n      // only one or same\n      const nextNode = nextStart || nextEnd;\n      if (!isEmptyParagraph && Text.isText(nextNode) && nextNode.text === '') {\n        // don't keep empty text node with marks in non-empty paragraph\n        nextNode.marks.forEach((mark) => {\n          controller.command(removeMarkByKey, nextNode.key, 0, 1, mark);\n        });\n      }\n      return;\n    }\n    const isSibling =\n      document.getNextSibling(nextStart.key)?.key === nextEnd.key;\n    // start and end is not sibling when one of them in inline node\n    if (!isSibling) return;\n\n    if (Text.isText(nextEnd) && nextEnd.text === '') {\n      // empty end text node is useless\n      controller.command(removeNodeByKey, nextEnd.key);\n    }\n\n    if (!isEmptyParagraph && Text.isText(nextStart) && nextStart.text === '') {\n      // don't keep empty text node with marks in non-empty paragraph\n      nextStart.marks.forEach((mark) => {\n        controller.command(removeMarkByKey, nextStart.key, 0, 1, mark);\n      });\n    }\n  });\n}\n\n/**\n * 删除当前Selection内的所有内容\n * 1. 将选区开头的样式设置到 selection.marks 中\n */\nexport function del(controller: Controller) {\n  const { selection, document } = controller.value;\n  const { start } = selection.convertToTextPoints(document);\n  const startNode = document.getNode(start.key);\n  const startMarks = Text.isText(startNode)\n    ? document.getMarksAtPosition(start.key, start.offset + 1)\n    : [];\n  controller.command('deleteAtRange', selection);\n  let range = controller.value.selection;\n\n  // set selection.marks to make sure inherit marks from deleted text\n  range = range.set('marks', startMarks);\n  return controller.command(select, range.moveToFocus());\n}\n\n/**\n * 在指定selection上，进行往后删除。\n * @range 如果是expand选区，会删除选区内的内容，并忽略掉后续参数；否则从anchor点往后计算n个unit进行删除\n */\nexport function deleteBackwardAtRange(\n  controller: Controller,\n  range: Selection,\n  n = 1,\n  unit?: MoveUnit,\n) {\n  const { document } = controller.value;\n  if (range.isExpanded) {\n    return controller.command(del);\n  }\n  let { anchor } = range;\n  if (anchor.isEdgePoint()) {\n    const isBackward = n >= 0;\n    const point = anchor;\n    const deleteEdge = isBackward ? EdgePoint.AFTER : EdgePoint.BEFORE;\n    const isToDelete = point.edge === deleteEdge;\n    if (isToDelete) {\n      // 在 edge block 的后面。直接删除掉，并插入新的段落\n      return controller\n        .command(insertEmptyBlock, point)\n        .command(removeNodeByKey, point.key);\n    } else {\n      // 在 edge block 的非删除边缘。需要看前/后一个 block。\n      // 如果前/后一个 block 是空的，直接删掉；否则移动到末尾。\n      const siblingBlock = isBackward\n        ? document.getPreviousBlock(point.key)\n        : document.getNextBlock(point.key);\n      if (!siblingBlock) {\n        return controller;\n      }\n      const closestBlock = document.getClosestSelectableBlock(\n        siblingBlock.key,\n        controller,\n      );\n      anchor = point;\n      if (closestBlock || siblingBlock.text || siblingBlock.nodes.length > 1) {\n        anchor = controller.query(\n          isBackward ? pointAtEndOfNode : pointAtStartOfNode,\n          siblingBlock,\n        );\n      } else {\n        controller.command(removeNodeByKey, siblingBlock.key);\n      }\n      const focus = anchor;\n      return controller.command(select, Selection.create({ anchor, focus }));\n    }\n  }\n  // if we're in a void block, remove it\n  const voidParent = document.getClosestVoid(anchor.key, controller);\n  if (voidParent) {\n    if (document.nodes.length === 1 && document.nodes[0] === voidParent) {\n      controller.command(\n        insertEmptyBlock,\n        EdgePoint.create({\n          key: voidParent.key,\n          edge: EdgePoint.BEFORE,\n        }),\n      );\n    }\n    return controller.command(removeNodeByKey, voidParent.key);\n  }\n\n  // if we're in a empty block, remove it\n  const block = document.getClosestBlock(anchor.key);\n  if (\n    document.nodes.length !== 1 &&\n    block &&\n    block.text === '' &&\n    block.nodes.length === 1\n  ) {\n    controller.command(removeNodeByKey, block.key);\n    // 向后删除时，光标移动到删除段落的下一段\n    if (n === -1) {\n      controller.command(moveToStartOfNextBlock);\n    }\n    return controller;\n  }\n  controller.command(moveAnchorBackward, n, unit);\n  const { selection: updatedSelection } = controller.value;\n  const updatedAnchor = updatedSelection?.anchor;\n  if (updatedAnchor?.isEdgePoint()) {\n    return controller.command(moveToAnchor);\n  }\n  return controller.command(del);\n}\n\n/**\n * 在指定selection上，进行往前删除。\n * @range 如果是expand选区，会删除选区内的内容，并忽略掉后续参数；否则从anchor点往前计算n个unit进行删除\n */\nexport function deleteForwardAtRange(\n  controller: Controller,\n  range: Selection,\n  n = 1,\n  unit?: MoveUnit,\n) {\n  return deleteBackwardAtRange(controller, range, -n, unit);\n}\n\n/**\n * 从所有当前选区的位置，往后删除n个offset\n */\nexport function deleteBackward(controller: Controller, n = 1) {\n  const { selection } = controller.value;\n  return controller.command(deleteBackwardAtRange, selection, n);\n}\n\n/**\n * 从所有当前选区的位置，往前删除n个offset\n */\nexport function deleteForward(controller: Controller, n = 1) {\n  return controller.command(deleteBackward, -n);\n}\n\nfunction createDeleteBoundry(dir: 'backward' | 'forward') {\n  return function deleteBoundray(\n    controller: Controller,\n    getBoundaryOrIteratePositionsFromPoint:\n      | ((block: Block, offset: number) => number)\n      | number,\n    unit?: MoveUnit,\n  ) {\n    const isBackward = dir === 'backward';\n    const { selection } = controller.value;\n\n    const defaultBoundary = 1;\n    let boundary =\n      typeof getBoundaryOrIteratePositionsFromPoint === 'number'\n        ? getBoundaryOrIteratePositionsFromPoint\n        : defaultBoundary;\n    if (selection.anchor.isTextPoint()) {\n      const { document } = controller.value;\n      const { anchor } = selection;\n      const block = document.getClosestBlock(anchor.key)!;\n      if (!block) {\n        return controller;\n      }\n      const offset = block.getOffset(anchor.key);\n      if (typeof getBoundaryOrIteratePositionsFromPoint === 'function') {\n        boundary = getBoundaryOrIteratePositionsFromPoint(\n          block,\n          offset + anchor.offset,\n        );\n      }\n    }\n    return controller.command(\n      isBackward ? deleteBackwardAtRange : deleteForwardAtRange,\n      selection,\n      boundary,\n      unit,\n    );\n  };\n}\n\n/**\n * @ignore\n */\nexport const deleteBoundrayBackward = createDeleteBoundry('backward');\n\n/**\n * @ignore\n */\nexport const deleteBoundrayForward = createDeleteBoundry('forward');\n\n/**\n * 从所有当前选区的位置，往后删除1个文字（大多情况下，1个文字等于1个offset，但是1个emoji可能对应多个offset）\n */\nexport function deleteCharBackward(controller: Controller) {\n  return controller.command(deleteBoundrayBackward, 1);\n}\n\n/**\n * 从所有当前选区的位置，往前删除1个文字（大多情况下，1个文字等于1个offset，但是1个emoji可能对应多个offset）\n */\nexport function deleteCharForward(controller: Controller) {\n  return controller.command(deleteBoundrayForward, 1);\n}\n\n/**\n * 从所有当前选区的位置，往后删除1个词\n */\nexport function deleteWordBackward(controller: Controller) {\n  return controller.command(deleteBoundrayBackward, 1, 'word');\n}\n\n/**\n * 从所有当前选区的位置，往前删除1个词\n */\nexport function deleteWordForward(controller: Controller) {\n  return controller.command(deleteBoundrayForward, 1, 'word');\n}\n\n/**\n * 从所有当前选区的位置，往后删除1行文字\n */\nexport function deleteLineBackward(controller: Controller) {\n  return controller.command(deleteBoundrayBackward, (startBlock, offset) => {\n    return textUtils.countBreaks(startBlock.text, offset);\n  });\n}\n\n/**\n * 从所有当前选区的位置，往前删除1行文字\n */\nexport function deleteLineForward(controller: Controller) {\n  return controller.command(deleteBoundrayForward, (startBlock, offset) => {\n    return textUtils.countBreaks(startBlock.text, offset, true);\n  });\n}\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport Controller from '../controller/index';\nimport Mark from '../models/mark';\nimport Path from '../models/path';\nimport Selection from '../models/selection';\nimport { TextPoint } from '../models/point';\nimport { removeTextByPath, removeNodeByPath } from './remove';\nimport { insertTextByPath, insertNodeByPath } from './insert';\nimport setUtils from '../utils/setUtils';\nimport Node from '../models/node';\n\n/**\n * 在指定的位置上，替换node\n */\nexport function replaceNodeByKey(\n  controller: Controller,\n  key: string,\n  newNode: Node,\n) {\n  const { document } = controller.value;\n  const path = document.getPath(key);\n  if (!path) {\n    return controller;\n  }\n  return controller.command(replaceNodeByPath, path, newNode);\n}\n\n/**\n * 在指定的位置上，替换node\n */\nexport function replaceNodeByPath(\n  controller: Controller,\n  path: Path,\n  newNode: Node,\n) {\n  const index = path[path.length - 1];\n  const parentPath = Path.parent(path);\n\n  return controller.withoutNormalizing(() => {\n    controller\n      .command(removeNodeByPath, path)\n      .command(insertNodeByPath, parentPath, index, newNode);\n  });\n}\n\n/**\n * 在指定的位置上，替换文本，并附加marks\n * 1. 提过oldText长度大于可用长度，按照可用长度计算\n */\nexport function replaceTextByKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n  oldText: string,\n  text: string,\n  marks?: Mark[],\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  const path = document.assertPath(key);\n  return controller.command(\n    replaceTextByPath,\n    path,\n    offset,\n    oldText,\n    text,\n    marks,\n  );\n}\n\n/**\n * 在指定的位置上，替换文本，并附加marks\n * 1. 提过oldText长度大于可用长度，按照可用长度计算\n */\nexport function replaceTextByPath(\n  controller: Controller,\n  path: Path,\n  offset: number,\n  oldText: string,\n  text: string,\n  marks: Mark[] = [],\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  const node = document.assertNodeByPath(path);\n  const activeMarks = document.getActiveMarksAtRange(\n    Selection.create({\n      anchor: TextPoint.create({ key: node.key, offset }),\n      focus: TextPoint.create({ key: node.key, offset: offset + oldText.length }),\n    }),\n  );\n  const mergedMarks = setUtils.union(\n    marks,\n    activeMarks,\n    (a, b) => a.type === b.type,\n  );\n\n  return controller.withoutNormalizing(() => {\n    controller\n      .command(removeTextByPath, path, offset, oldText)\n      .command(\n        insertTextByPath,\n        path,\n        offset,\n        text,\n        mergedMarks.map(Mark.create),\n      );\n  });\n}\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport Controller from '../controller/index';\nimport Path from '../models/path';\nimport Node from '../models/node';\nimport { OperationType, Properties } from '../models/operation';\nimport Element from '../models/element';\nimport Selection from '../models/selection';\nimport Mark, { MarkProperties } from '../models/mark';\nimport { replaceTextByPath } from './replace';\n\nexport function setNodeByKey(\n  controller: Controller,\n  key: string,\n  properties: Properties,\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  const path = document.assertPath(key);\n  return controller.command(setNodeByPath, path, properties);\n}\n\nexport function setNodeByPath(\n  controller: Controller,\n  path: Path,\n  properties: Properties,\n) {\n  const prevNode = controller.value.document.assertNodeByPath(path);\n  const prevProperties = Element.isElement(prevNode)\n    ? { type: prevNode.type, data: prevNode.data }\n    : {};\n\n  return controller.applyOperation({\n    type: OperationType.SetNode,\n    path: [...path],\n    properties: Node.createProperties(properties),\n    prevProperties,\n  });\n}\n\nexport function setBlocks(controller: Controller, properties: Properties) {\n  const { selection } = controller.value;\n  return controller.command(setBlocksAtRange, selection, properties);\n}\n\nexport function setBlocksAtRange(\n  controller: Controller,\n  selection: Selection,\n  properties: Properties,\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  const { start, end } = selection.convertToTextPoints(document);\n\n  const hasVoidParent = document.hasVoidParent(start.key, controller);\n  const startBlock = document.getClosestBlock(start.key);\n  const endBlock = document.getClosestBlock(end.key);\n\n  const startNodeKey = startBlock ? startBlock.getFirstNode().key : null;\n  const endNodeKey = endBlock ? endBlock.getLastNode().key : null;\n\n  // Check the \"Hanging Selection\" case for UX reasons.\n  // For more detail, go read the comments in [deleteAtRange]\n  const isHanging =\n    selection.isCollapsed === false &&\n    hasVoidParent === false &&\n    start.offset === 0 &&\n    end.offset === 0 &&\n    start.key === startNodeKey &&\n    end.key === endNodeKey &&\n    start.key !== end.key;\n\n  const allBlocks = document.getLeafBlocksAtRange(selection);\n  const blocks = isHanging ? allBlocks.slice(0, -1) : allBlocks;\n\n  return controller.withoutNormalizing(() => {\n    blocks.forEach((block) => {\n      controller.command('setNodeByKey', block.key, properties);\n    });\n  });\n}\n\nexport function setInlines(controller: Controller, properties: Properties) {\n  const { selection } = controller.value;\n  return controller.command(setInlinesAtRange, selection, properties);\n}\n\nexport function setInlinesAtRange(\n  controller: Controller,\n  selection: Selection,\n  properties: Properties,\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  return controller.withoutNormalizing(() => {\n    const inlines = document.getLeafInlinesAtRange(selection);\n    inlines.forEach((inline) => {\n      controller.command('setNodeByKey', inline.key, properties);\n    });\n  });\n}\n\nexport function setMarkByKey(\n  controller: Controller,\n  key: string,\n  offset: number,\n  length: number,\n  mark: Mark | MarkProperties | string,\n  properties: Properties,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(\n    setMarkByPath,\n    path,\n    offset,\n    length,\n    mark,\n    properties,\n  );\n}\n\nexport function setMarkByPath(\n  controller: Controller,\n  path: Path,\n  offset: number,\n  length: number,\n  m: Mark | MarkProperties | string,\n  properties: Properties,\n) {\n  const mark = Mark.create(m);\n\n  return controller.applyOperation({\n    type: OperationType.SetMark,\n    path,\n    offset,\n    length,\n    mark,\n    properties,\n  });\n}\n\nexport function setTextByKey(\n  controller: Controller,\n  key: string,\n  text: string,\n  marks?: Mark[],\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  const path = document.assertPath(key);\n  return controller.command(setTextByPath, path, text, marks);\n}\n\nexport function setTextByPath(\n  controller: Controller,\n  path: Path,\n  text: string,\n  marks?: Mark[],\n) {\n  const { value } = controller;\n  const { document } = value;\n\n  const node = document.assertNodeByPath(path);\n  return controller.command(replaceTextByPath, path, 0, node.text, text, marks);\n}\n","export const wrapInlineTpl = () => 'cj/cmd/wrapinline';\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport Controller from '../controller/index';\nimport Block, { BlockChild, BlockProperties } from '../models/block';\nimport Inline, { InlineProperties } from '../models/inline';\nimport Path from '../models/path';\nimport Selection from '../models/selection';\nimport { TextPoint } from '../models/point';\nimport {\n  insertTextAtRange,\n  insertNodeByKey,\n  insertNodeByPath,\n  insertInlineAtRange,\n} from './insert';\nimport { select } from './selection';\nimport { moveNodeByKey, moveNodeByPath } from './move';\nimport listUtils from '../utils/listUtils';\nimport { splitDescendantsByKey } from './split';\nimport { wrapInlineTpl } from '../contexts/wrap';\n\n/**\n * 在当前选区的start和end位置，插入一些文字，并更新选区位置。\n * 1. 不区分range是否是collapse\n */\nexport function wrapText(\n  controller: Controller,\n  prefix: string,\n  suffix = prefix,\n) {\n  const { value } = controller;\n  const { selection, document } = value;\n\n  controller.command(wrapTextAtRange, selection, prefix, suffix);\n\n  let sel = controller.value.selection;\n  if (selection.isCollapsed) {\n    sel = sel.moveStartBackward(document, prefix.length);\n  }\n\n  // Adding the suffix will have pushed the end of the selection further on, so\n  // we need to move it back to account for this.\n  sel = sel.moveEndBackward(document, suffix.length);\n\n  return controller.command(select, sel);\n}\n\n/**\n * 在选区的start和end位置，插入一些文字\n * 1. 不区分range是否是collapse\n * 2. 此方法不会更新选区位置\n */\nexport function wrapTextAtRange(\n  controller: Controller,\n  range: Selection,\n  prefix: string,\n  suffix: string = prefix,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const startRange = range.moveToStart(document);\n  const endRange = range.moveToEnd(document);\n\n  controller.withoutNormalizing(() => {\n    controller.command(insertTextAtRange, endRange, suffix);\n    controller.command(insertTextAtRange, startRange, prefix);\n  });\n  return controller;\n}\n\n/**\n * 在range的公共父节点上插入block，然后把range对应的nodes都转到block中\n */\nexport function wrapBlock(\n  controller: Controller,\n  block: Block | BlockProperties | string,\n) {\n  const { selection } = controller.value;\n  return controller.command(wrapBlockAtRange, selection, block);\n}\n\n/**\n * 在range的公共父节点上插入block，然后把range对应的nodes都转到block中\n */\nexport function wrapBlockAtRange(\n  controller: Controller,\n  range: Selection,\n  b: Block | BlockProperties | string,\n) {\n  let block = Block.create(b);\n  block = block.set('nodes', []);\n\n  const { value } = controller;\n  const { document } = value;\n\n  const blocks = document.getLeafBlocksAtRange(range);\n  const firstblock = blocks[0];\n  const lastblock = blocks[blocks.length - 1];\n  let parent;\n  let siblings;\n  let index;\n\n  if (blocks.length === 1) {\n    parent = document.getParent(firstblock.key);\n    siblings = blocks;\n  } else {\n    parent = document.getCommonAncestor(firstblock.key, lastblock.key);\n  }\n\n  // If no shared parent could be found then the parent is the document.\n  if (parent == null) {\n    parent = document;\n  }\n\n  // Create a list of direct children siblings of parent that fall in the\n  // selection.\n  if (siblings == null) {\n    const indexes = parent.nodes.reduce((ind, node, i) => {\n      // eslint-disable-next-line no-param-reassign\n      if (node === firstblock || node.getNode(firstblock.key)) ind[0] = i;\n      // eslint-disable-next-line no-param-reassign\n      if (node === lastblock || node.getNode(lastblock.key)) ind[1] = i;\n      return ind;\n    }, []);\n\n    [index] = indexes;\n    siblings = parent.nodes.slice(indexes[0], indexes[1] + 1);\n  }\n\n  // Get the index to place the new wrapped node at.\n  if (index == null) {\n    index = parent.nodes.indexOf(siblings[0]);\n  }\n\n  controller.withoutNormalizing(() => {\n    // Inject the new block node into the parent.\n    controller.command(insertNodeByKey, parent.key, index, block);\n\n    // Move the sibling nodes into the new block node.\n    siblings.forEach((node, i) => {\n      controller.command(moveNodeByKey, node.key, block.key, i);\n    });\n  });\n  return controller;\n}\n\n/**\n * 把目标节点插入到一个新的block节点中，并把block放到原来的节点的位置\n */\nexport function wrapBlockByKey(\n  controller: Controller,\n  key: string,\n  block: Block | BlockProperties | string,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(wrapBlockByPath, path, Block.create(block));\n}\n\n/**\n * 把目标节点插入到一个新的block节点中，并把block放到原来的节点的位置\n */\nexport function wrapBlockByPath(\n  controller: Controller,\n  path: Path,\n  b: Block | BlockProperties | string,\n) {\n  const block = Block.create(b).set('nodes', []);\n  const parentPath = Path.parent(path);\n  const index = path[path.length - 1];\n  const newPath = Path.increment(path);\n\n  controller.withoutNormalizing(() => {\n    controller.command(insertNodeByPath, parentPath, index, block);\n    controller.command(moveNodeByPath, newPath, path, 0);\n  });\n  return controller;\n}\n\n/**\n * 把当前选区wrap一个inline\n * 1. 如果range是collapse，则把对应节点的最近void inline节点进行wrap；\n * 如果没有最近的void inline，则什么都不做\n * 2. 如果选区里有block，会在每个block内部进行wrap inline操作\n */\nexport function wrapInline(\n  controller: Controller,\n  inline: Inline | InlineProperties | string,\n) {\n  const { selection } = controller.value;\n  return controller.command(wrapInlineAtRange, selection, inline);\n}\n\n/**\n * 把当前选区wrap一个inline\n * 1. 如果range是collapse，则把对应节点的最近void inline节点进行wrap；\n * 如果没有最近的void inline，则什么都不做\n * 2. 如果选区里有block，会在每个block内部进行wrap inline操作\n */\nexport function wrapInlineAtRange(\n  controller: Controller,\n  range: Selection,\n  i: Inline | InlineProperties | string,\n) {\n  const { value } = controller;\n  let { document } = value;\n  const { start, end } = range.convertToTextPoints(document);\n\n  let inline = Inline.create(i);\n  if (range.isCollapsed) {\n    // Wrapping an inline void\n    const inlineParent = document.getClosestInline(start.key);\n\n    if (!inlineParent) {\n      return controller;\n    }\n\n    if (!controller.query('isVoid', inlineParent)) {\n      return controller;\n    }\n\n    return controller.command(wrapInlineByKey, inlineParent.key, inline);\n  }\n\n  inline = inline.set('nodes', []);\n\n  const blocks = document.getLeafBlocksAtRange(range);\n  let startBlock = document.getClosestBlock(start.key);\n  let endBlock = document.getClosestBlock(end.key);\n  const startInline = document.getClosestInline(start.key);\n  const endInline = document.getClosestInline(end.key);\n  let startChild = startBlock!.getFurthestAncestor(start.key)! as BlockChild;\n  let endChild = endBlock!.getFurthestAncestor(end.key)! as BlockChild;\n\n  controller.withOpContext(wrapInlineTpl(), () => {\n    controller.withoutNormalizing(() => {\n      if (!startInline || startInline !== endInline) {\n        controller.command(\n          splitDescendantsByKey,\n          endChild.key,\n          end.key,\n          end.offset,\n        );\n        controller.command(\n          splitDescendantsByKey,\n          startChild.key,\n          start.key,\n          start.offset,\n        );\n      }\n  \n      ({ document } = controller.value);\n      startBlock = document.getNode(startBlock!.key) as Block;\n      endBlock = document.getNode(endBlock!.key) as Block;\n      startChild = startBlock!.getFurthestAncestor(start.key)! as BlockChild;\n      endChild = endBlock!.getFurthestAncestor(end.key)! as BlockChild;\n      const startIndex = startBlock.nodes.indexOf(startChild);\n      const endIndex = endBlock.nodes.indexOf(endChild);\n  \n      if (startInline && startInline === endInline) {\n        const text = document\n          .getTextsAtRange(range)[0]\n          .splitText(start.offset)[1]\n          .splitText(end.offset - start.offset)[0];\n  \n        inline = inline.set('nodes', [text]);\n        controller.command(insertInlineAtRange, range, inline);\n  \n        const inlinekey = text.key;\n        const anchor = TextPoint.create({\n          key: inlinekey,\n          offset: 0,\n        });\n        const focus = TextPoint.create({\n          key: inlinekey,\n          offset: end.offset - start.offset,\n        });\n        const rng = Selection.create({\n          anchor,\n          focus,\n        });\n        controller.command(select, rng);\n      } else if (startBlock === endBlock) {\n        ({ document } = controller.value);\n        startBlock = document.getClosestBlock(start.key)!;\n        startChild = startBlock!.getFurthestAncestor(start.key)! as BlockChild;\n  \n        const startInner = document.getNextSibling(startChild.key) as BlockChild;\n        const startInnerIndex = startBlock!.nodes.indexOf(startInner!);\n        const endInner =\n          start.key === end.key\n            ? startInner\n            : startBlock.getFurthestAncestor(end.key) as BlockChild;\n  \n        let inlines = listUtils.skipUntil(\n          startBlock.nodes,\n          (n) => n === startInner,\n        );\n        inlines = listUtils.takeUntil(inlines, (n) => n === endInner);\n        inlines.push(endInner!);\n  \n        const node = inline.regenerateKey();\n  \n        controller.command(\n          insertNodeByKey,\n          startBlock.key,\n          startInnerIndex,\n          node,\n        );\n  \n        inlines.forEach((child, idx) => {\n          controller.command(moveNodeByKey, child.key, node.key, idx);\n        });\n      } else {\n        const startInlines = startBlock.nodes.slice(startIndex + 1);\n        const endInlines = endBlock.nodes.slice(0, endIndex + 1);\n        const startNode = inline.regenerateKey();\n        const endNode = inline.regenerateKey();\n  \n        controller.command(\n          insertNodeByKey,\n          startBlock.key,\n          startIndex + 1,\n          startNode,\n        );\n        controller.command(insertNodeByKey, endBlock.key, endIndex, endNode);\n  \n        startInlines.forEach((child, idx) => {\n          controller.command(moveNodeByKey, child.key, startNode.key, idx);\n        });\n  \n        endInlines.forEach((child, idx) => {\n          controller.command(moveNodeByKey, child.key, endNode.key, idx);\n        });\n  \n        blocks.slice(1, -1).forEach((block) => {\n          const node = inline.regenerateKey();\n          controller.command(insertNodeByKey, block.key, 0, node);\n  \n          block.nodes.forEach((child, idx) => {\n            controller.command(moveNodeByKey, child.key, node.key, idx);\n          });\n        });\n      }\n    });\n  });\n  \n  return controller;\n}\n\n/**\n * 把目标节点插入到一个新的inline节点中，并把inline放到原来的节点的位置\n */\nexport function wrapInlineByKey(\n  controller: Controller,\n  key: string,\n  inline: Inline,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(wrapInlineByPath, path, inline);\n}\n\n/**\n * 把目标节点插入到一个新的inline节点中，并把inline放到原来的节点的位置\n */\nexport function wrapInlineByPath(\n  controller: Controller,\n  path: Path,\n  i: Inline,\n) {\n  const inline = Inline.create(i).set('nodes', []);\n  const parentPath = Path.parent(path);\n  const index = path[path.length - 1];\n  const newPath = Path.increment(path);\n\n  controller.withoutNormalizing(() => {\n    controller.command(insertNodeByPath, parentPath, index, inline);\n    controller.command(moveNodeByPath, newPath, path, 0);\n  });\n  return controller;\n}\n","export const unwrapBlockTpl = () => 'cj/cmd/unwrapblock';\nexport const unwrapTpl = () => 'cj/cmd/unwrapnode';\n","/**\n * @packageDocumentation\n * @module Commands\n */\nimport Controller from '../controller/index';\nimport Selection from '../models/selection';\nimport { Properties } from '../models/operation';\nimport { TextPoint } from '../models/point';\nimport Path from '../models/path';\nimport Block from '../models/block';\nimport Element from '../models/element';\nimport Inline from '../models/inline';\nimport setUtils from '../utils/setUtils';\nimport listUtils from '../utils/listUtils';\nimport { removeNodeByKey, removeNodeByPath } from './remove';\nimport { moveNodeByKey, moveNodeByPath } from './move';\nimport { splitDescendantsByKey, splitNodeByPath } from './split';\nimport { unwrapBlockTpl, unwrapTpl } from '../contexts/unwrap';\n\nexport function unwrapBlock(controller: Controller, p: Properties | string) {\n  const { selection } = controller.value;\n\n  const properties = typeof p === 'string' ? { type: p } : p;\n  return controller.command(unwrapBlockAtRange, selection, properties);\n}\n\nexport function unwrapBlockAtRange(\n  controller: Controller,\n  range: Selection,\n  properties: Properties,\n) {\n  const { value } = controller;\n  let { document } = value;\n  const blocks = document.getLeafBlocksAtRange(range);\n  const wraps = blocks\n    .map((block) => {\n      return document.getClosest(block.key, (parent) => {\n        if (!Block.isBlock(parent)) {\n          return false;\n        }\n        if (properties.type != null && parent.type !== properties.type) {\n          return false;\n        }\n        if (\n          properties.data != null &&\n          !setUtils.isSuperSet(\n            Object.values(parent.data),\n            Object.values(properties.data),\n          )\n        ) {\n          return false;\n        }\n        return true;\n      });\n    });\n  const wrappers = wraps.filter((exists): exists is Block => {\n    return Boolean(exists?.isElement() && exists.isBlock());\n  });\n\n  controller.withOpContext(unwrapBlockTpl(), () => {\n    controller.withoutNormalizing(() => {\n      setUtils.removeDuplicate(wrappers).forEach((block) => {\n        const first = block.nodes[0];\n        const last = block.nodes[block.nodes.length - 1];\n        const parent = controller.value.document.getParent(block.key)!;\n        const index = parent.nodes.indexOf(block);\n  \n        const children = block.nodes.filter((child) => {\n          return blocks.some(\n            (b) => child === b || (child.isElement() && child.getNode(b.key)),\n          );\n        });\n  \n        const firstMatch = children[0];\n        const lastMatch = children[children.length - 1];\n  \n        if (first === firstMatch && last === lastMatch) {\n          block.nodes.forEach((child, idx) => {\n            controller.command(moveNodeByKey, child.key, parent.key, index + idx);\n          });\n  \n          controller.command(removeNodeByKey, block.key);\n        } else if (last === lastMatch) {\n          listUtils\n            .skipUntil(block.nodes, (n) => n === firstMatch)\n            .forEach((child, i) => {\n              controller.command(\n                moveNodeByKey,\n                child.key,\n                parent.key,\n                index + 1 + i,\n              );\n            });\n        } else if (first === firstMatch) {\n          const nodes = listUtils.takeUntil(block.nodes, (n) => n === lastMatch);\n          nodes.push(lastMatch);\n          nodes.forEach((child, i) => {\n            controller.command(moveNodeByKey, child.key, parent.key, index + i);\n          });\n        } else {\n          const firstText = firstMatch.getFirstText();\n          controller.command(splitDescendantsByKey, block.key, firstText!.key, 0);\n  \n          ({ document } = controller.value);\n  \n          children.forEach((child, i) => {\n            let newChild = child;\n            if (i === 0) {\n              const extra = newChild;\n              newChild = document.getNextBlock(child.key)!;\n              controller.command(removeNodeByKey, extra.key);\n            }\n  \n            controller.command(\n              moveNodeByKey,\n              newChild.key,\n              parent.key,\n              index + 1 + i,\n            );\n          });\n        }\n      });\n    });\n  });\n\n  return controller;\n}\n\nexport function unwrapBlockByKey(\n  controller: Controller,\n  key: string,\n  p: Properties | string,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  const properties = typeof p === 'string' ? { type: p } : p;\n\n  return controller.command(unwrapBlockByPath, path, properties);\n}\n\nexport function unwrapBlockByPath(\n  controller: Controller,\n  path: Path,\n  properties: Properties,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const node = document.assertNodeByPath(path);\n  const first = node.getFirstText()!;\n  const last = node.getLastText()!;\n\n  const anchor = TextPoint.create({\n    key: first.key,\n    offset: 0,\n  });\n  const focus = TextPoint.create({\n    key: last.key,\n    offset: last.text.length,\n  });\n  const range = Selection.create({ anchor, focus });\n\n  return controller.command(unwrapBlockAtRange, range, properties);\n}\n\nexport function unwrapInline(controller: Controller, p: Properties | string) {\n  const { selection } = controller.value;\n\n  const properties = typeof p === 'string' ? { type: p } : p;\n  return controller.command(unwrapInlineAtRange, selection, properties);\n}\n\nexport function unwrapInlineAtRange(\n  controller: Controller,\n  range: Selection,\n  properties: Properties,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const texts = document.getTextsAtRange(range);\n  const inlines = texts\n    .map((text) => document.getClosest(text.key, (parent) => {\n      if (!Inline.isInline(parent)) return false;\n      if (properties.type != null && parent.type !== properties.type) {\n        return false;\n      }\n      if (\n        properties.data != null &&\n        !setUtils.isSuperSet(\n          Object.values(parent.data),\n          Object.values(properties.data),\n        )\n      ) {\n        return false;\n      }\n      return true;\n    }))\n    .filter((exists) => exists);\n\n  controller.withoutNormalizing(() => {\n    setUtils.removeDuplicate(inlines as Inline[]).forEach((inline) => {\n      const parent = controller.value.document.getParent(inline.key)!;\n      const index = parent.nodes.indexOf(inline);\n\n      inline.nodes.forEach((child, i) => {\n        controller.command(moveNodeByKey, child.key, parent.key, index + i);\n      });\n\n      controller.command(removeNodeByKey, inline.key);\n    });\n  });\n\n  return controller;\n}\n\nexport function unwrapInlineByKey(\n  controller: Controller,\n  key: string,\n  p: Properties | string,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  const properties = typeof p === 'string' ? { type: p } : p;\n  return controller.command(unwrapInlineByPath, path, properties);\n}\n\nexport function unwrapInlineByPath(\n  controller: Controller,\n  path: Path,\n  properties: Properties,\n) {\n  const { value } = controller;\n  const { document } = value;\n  const node = document.assertNodeByPath(path);\n  const first = node.getFirstText()!;\n  const last = node.getLastText()!;\n\n  const anchor = TextPoint.create({\n    key: first.key,\n    offset: 0,\n  });\n  const focus = TextPoint.create({\n    key: last.key,\n    offset: last.text.length,\n  });\n  const range = Selection.create({ anchor, focus });\n\n  return controller.command(unwrapInlineAtRange, range, properties);\n}\n\nexport function unwrapNodeByKey(controller: Controller, key: string) {\n  const { value } = controller;\n  const { document } = value;\n  const path = document.assertPath(key);\n  return controller.command(unwrapNodeByPath, path);\n}\n\nexport function unwrapNodeByPath(controller: Controller, path: Path) {\n  const { value } = controller;\n  const { document } = value;\n  document.assertNodeByPath(path);\n\n  const parentPath = Path.parent(path);\n  const parent = document.assertNodeByPath(parentPath) as Element;\n  const index = path[path.length - 1];\n  const parentIndex = parentPath[parentPath.length - 1];\n  const grandPath = Path.parent(parentPath);\n  const isFirst = index === 0;\n  const isLast = index === parent.nodes.length - 1;\n\n  controller.withOpContext(unwrapTpl(), () => {\n    controller.withoutNormalizing(() => {\n      if (parent.nodes.length === 1) {\n        controller.command(moveNodeByPath, path, grandPath, parentIndex + 1);\n        controller.command(removeNodeByPath, parentPath);\n      } else if (isFirst) {\n        controller.command(moveNodeByPath, path, grandPath, parentIndex);\n      } else if (isLast) {\n        controller.command(moveNodeByPath, path, grandPath, parentIndex + 1);\n      } else {\n        let updatedPath = Path.increment(path, 1, parentPath.length - 1);\n        updatedPath = updatedPath\n          .map((p, idx) => (idx === updatedPath.length - 1 ? 0 : p));\n        controller.command(splitNodeByPath, parentPath, index);\n        controller.command(\n          moveNodeByPath,\n          updatedPath,\n          grandPath,\n          parentIndex + 1,\n        );\n      }\n    });\n  });\n\n  return controller;\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nexport * from './delete';\nexport * from './insert';\nexport * from './merge';\nexport * from './move';\nexport * from './selection';\nexport * from './mark';\nexport * from './split';\nexport * from './remove';\nexport * from './replace';\nexport * from './set';\nexport * from './wrap';\nexport * from './unwrap';\n","export const DATA_CLIPBORAD_CANGJIE = 'data-clipboard-cangjie';\n\nexport const SLASH_PLACEHOLDER = '__slash__';\n","import CangjieDataTransfer from '../models/dataTransfer';\nimport { DATA_CLIPBORAD_CANGJIE, SLASH_PLACEHOLDER } from '../mo/utils/constants';\n\nexport function isFileMimeType(mime_type: string) {\n  return /^(image)|(audio)|(video)\\//.test(mime_type);\n}\n\n/**\n * @description 从 html 中读取自定义数据\n */\nexport function readClipboardDataFromHtml(html: string) {\n  const domparser = new DOMParser();\n  const root = domparser.parseFromString(html, 'text/html');    \n  const clipboardDataNode = root.querySelector(`[${DATA_CLIPBORAD_CANGJIE}]`) as HTMLElement;\n  const clipboardData: [string, string][] = [];\n  if (clipboardDataNode && root.body.firstElementChild === clipboardDataNode) {\n    Object.values(clipboardDataNode.attributes).forEach((item) => {\n      if (item.nodeName.startsWith('data-identifier-') && item.textContent) {\n        const mimeType = item.nodeName.slice('data-identifier-'.length).replace(new RegExp(SLASH_PLACEHOLDER, 'gm'), '/');        \n        clipboardData.push([mimeType, item.textContent]);\n      }\n    })\n  }\n  return clipboardData;\n}\n\n/**\n * @description 获取剪切板权限并读取内容\n */\nexport async function getClipboardData() {\n  try {\n    const dataTransfer = CangjieDataTransfer.create();\n    // 作为 any 类型处理，防止构建报错: Property 'read' does not exist on type 'Clipboard'.\n    const nav = window.navigator as any;\n    if (!nav?.clipboard?.read) {\n      return Promise.reject(\n        new Error(\n          'Your browser does not support navigator.clipboard.read method.',\n        ),\n      );\n    }\n    const clipboardItems = await nav.clipboard.read();\n    for (const clipboardItem of clipboardItems) {\n      for (const type of clipboardItem.types) {\n        const blob = await clipboardItem.getType(type);\n        if (isFileMimeType(type)) {\n          const file = new window.File([blob], '', { type });\n          dataTransfer.setData(type, file);\n        } else {\n          const text = await blob.text();\n          dataTransfer.setData(type, text);\n          if (type === 'text/html') {\n            const customData = readClipboardDataFromHtml(text);\n            customData.forEach(([type, data]) => {\n              dataTransfer.setData(type, data);\n            })\n          }\n        }\n      }\n    }\n    return Promise.resolve(dataTransfer);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n","import { isFileMimeType } from '../utils/getClipboardData';\n\nclass CustomDataTransfer {\n  private data: { dragX?: string; dragY?: string };\n\n  private dropEffect: string;\n\n  private effectAllowed: string;\n\n  public files: any[];\n\n  private img: string;\n\n  public items: any[];\n\n  public types: any[];\n\n  private xOffset: number;\n\n  private yOffset: number;\n\n  constructor() {\n    this.data = { dragX: '', dragY: '' };\n    this.dropEffect = 'none';\n    this.effectAllowed = 'all';\n    this.files = [];\n    this.img = '';\n    this.items = [];\n    this.types = [];\n    this.xOffset = 0;\n    this.yOffset = 0;\n  }\n\n  clearData() {\n    this.data = {};\n    this.items = [];\n    this.types = [];\n  }\n\n  getData(format: string) {\n    return this.data[format];\n  }\n\n  setData(format: string, data: string | File) {\n    const toAdd = {\n      kind: 'string',\n      type: format,\n    }\n    if (\n      !this.items.some((i) => {\n        i.kind === toAdd.kind && i.type === toAdd.type;\n      })\n    ) {\n      this.items.push(toAdd);\n    }\n    if (isFileMimeType(format) && data instanceof Blob) {\n      this.data[format] = '';\n      if (!this.types.includes('Files')) {\n        this.types.push('Files');\n      }\n      this.files.push(data);\n    } else {\n      this.data[format] = data;\n      if (!this.types.includes(format)) {\n        this.types.push(format);\n      }\n    }\n  }\n\n  setDragImage(img: string, xOffset: number, yOffset: number) {\n    this.img = img;\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n  }\n}\n\nexport default CustomDataTransfer;\n","import PolyfillDataTransfer from '../events/dataTransfer';\nimport { MIME_TYPES } from '../constants';\n\n// TODO: merge PolyfillDataTransfer & CangjieDataTransfer into one model\nexport default class CangjieDataTransfer extends PolyfillDataTransfer {\n  static create(clipboardData?: DataTransfer) {\n    return new CangjieDataTransfer(clipboardData);\n  }\n\n  private constructor(clipboardData?: DataTransfer) {\n    super();\n    if (!clipboardData) {\n      return this;\n    }\n\n    // 仅复制剪切板里基础类型数据，防止文件过大导致内存溢出，需要消费 File、Img 类型数据直接从 nativeEvent 上获取\n    for (const type of Object.values(MIME_TYPES)) {\n      if (!clipboardData.types.includes(type)) {\n        continue;\n      }\n      const data = clipboardData.getData(type);\n      super.setData(type, data);\n    }\n\n    return this;\n  }\n\n  public setData(type: string, data: string | File): CangjieDataTransfer {\n    super.setData(type, data);\n    return Object.create(this, {\n      clearData: {\n        value() {\n          Object.getPrototypeOf(this).clearData();\n        }\n      },\n      getData: {\n        value(t) {\n          return Object.getPrototypeOf(this).getData(t);\n        },\n      },\n    });\n  }\n}\n","/**\n * @packageDocumentation\n * @module Events\n */\nimport CangjieDataTransfer from '../models/dataTransfer';\n\ntype CangjieClipboardEventType = 'cangjieCopy' | 'cangjieCut' | 'cangjiePaste';\n\ninterface CangjieClipboardEventOption {\n  nativeEvent?: ClipboardEvent;\n  clipboardData?: DataTransfer;\n}\n\ninterface CangjieClipboardEvent extends CustomEvent {\n  readonly nativeEvent: ClipboardEvent;\n  readonly clipboardData?: CangjieDataTransfer;\n  setClipboardData(clipboardData: CangjieDataTransfer): CangjieClipboardEvent;\n}\n\n/**\n * 剪切板事件\n */\nfunction CangjieClipboardEvent(\n  type: CangjieClipboardEventType,\n  { nativeEvent, clipboardData }: CangjieClipboardEventOption = {},\n): CangjieClipboardEvent {\n  const event = new CustomEvent(type);\n  \n  /**\n   * https://bugs.webkit.org/show_bug.cgi?id=49739\n   * webkit bug, safari 10 及以下会报 ERROR: Attempted to assign to readonly property.\n   */\n  if (clipboardData) {\n    // @ts-ignore\n    event.clipboardData = CangjieDataTransfer.create(clipboardData)\n  }\n  // @ts-ignore\n  return Object.assign(event, {\n    nativeEvent,\n    setClipboardData(clipboardData: CangjieDataTransfer) {\n      // @ts-ignore\n      event.clipboardData = clipboardData;\n      return Object.create(this, {\n        clipboardData: {\n          value: clipboardData,\n        },\n      });\n    },\n  });\n}\n\nexport default CangjieClipboardEvent;\n","/**\n * @packageDocumentation\n * @module Events\n */\nimport Selection from '../models/selection';\n\ninterface CangjieSelectDetail {\n  selection: Selection;\n  trigger?: string;\n}\n\ntype CangjieSelectEvent = CustomEvent<CangjieSelectDetail>;\n\nfunction CangjieSelectEvent(detail: CangjieSelectDetail) {\n  return new CustomEvent('cangjieSelect', { detail });\n}\n\nexport default CangjieSelectEvent;\n","/**\n * @packageDocumentation\n * @ignore\n */\nexport const defaultLocale = {\n  copy: '复制',\n  cut: '剪切',\n  select: '选择',\n  selectAll: '全选',\n  paste: '粘贴',\n  pasteTips: '请用快捷键',\n};\n\nexport type ContextMenuLocale = typeof defaultLocale;\n","/**\n * @packageDocumentation\n * @module transferUtils\n */\nimport * as React from 'react';\nimport ClipboardManager from '@ali/clipboard-manager';\nimport Controller from '../controller/index';\nimport Document from '../models/document';\nimport CangjieClipboardEvent from '../events/cangjieClipboard';\nimport { MIME_TYPES } from '../constants';\nimport { isFileMimeType } from './getClipboardData';\n\nfunction getTransferType(data) {\n  if (data.fragment) {\n    return 'fragment';\n  }\n  if (data.files && data.files.length) {\n    return 'files';\n  }\n  if (data.html) {\n    return 'html';\n  }\n  if (data.text) {\n    return 'text';\n  }\n  return 'unknown';\n}\n\nexport function getEventTransfer(\n  event: React.ClipboardEvent | React.DragEvent | CangjieClipboardEvent,\n  controller: Controller,\n) {  \n  const clipboardData =\n    'dataTransfer' in event ? event.dataTransfer : event.clipboardData;\n  if (!clipboardData) {\n    return { files: [], fragment: null, html: '', text: '' };\n  }\n\n  const html = clipboardData.getData(MIME_TYPES.HTML);\n  const text = clipboardData.getData(MIME_TYPES.TEXT) || '';\n  const encodedFragment = clipboardData.getData(MIME_TYPES.FRAGMENT);\n  let fragment: Document | null = null;\n  if (encodedFragment) {\n    try {\n      fragment = decodeFragment(encodedFragment);\n    } catch (e) {\n      // do nothing\n    }\n  }\n  if (!fragment && html && ~html.indexOf(` data-${controller.biz}-fragment=\"`)) {\n    const FRAGMENT_MATCHER = new RegExp(\n      ` data-${controller.biz}-fragment=\"([^\\\\s\"]+)\"`,\n    );\n    const matches = FRAGMENT_MATCHER.exec(html);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, encoded] = matches || [];\n    if (encoded) {\n      fragment = decodeFragment(encoded);\n    }\n  }\n\n  let files: File[] = [];\n  try {\n    if (clipboardData.items && clipboardData.items.length) {\n      files = Array.from(clipboardData.items).reduce((fs, item) => {\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file) {\n            return [...fs, file];\n          }\n        }\n        return fs;\n      }, [] as File[]);\n    } else if (clipboardData.files && clipboardData.files.length) {\n      files = Array.from(clipboardData.files);\n    }\n  } catch (err) {\n    if (clipboardData.files && clipboardData.files.length) {\n      files = Array.from(clipboardData.files);\n    }\n  }\n\n  const data = { files, fragment, html, text };\n  return {\n    ...data,\n    type: getTransferType(data),\n  };\n}\n\n/**\n * 编码 fragment\n * @param fragment\n */\nexport function encodeFragment(fragment: Document) {\n  const string = JSON.stringify(fragment.toJSON());\n  const encoded = window.btoa(encodeURIComponent(string));\n  return encoded;\n}\n\n/**\n * 解码 fragment\n * @param text\n */\nexport function decodeFragment(text: string): Document {\n  const decoded = decodeURIComponent(window.atob(text));\n  const json = JSON.parse(decoded);\n  const fragment = Document.fromJSON(json);\n  return fragment;\n}\n\nlet clip: ClipboardManager;\n\nconst createClip = () => {\n  if (clip) return clip;\n  const target = document.createElement('div');\n  target.setAttribute('style', '-webkit-user-select: text !important');\n  clip = new ClipboardManager({ target });\n  return clip;\n};\n/**\n * 数据写入系统剪切板\n * @param event\n * @param data\n * @param callback\n */\nfunction setClipboardData(\n  event: CangjieClipboardEvent,\n  data: Record<string, string>,\n  callback?: () => void,\n) {\n  const isFileData = Object.keys(data).some((type) => type.startsWith('image'));\n  if (event.nativeEvent?.clipboardData) {\n    const dataEntries = Object.entries(data);\n    dataEntries.forEach((item) => {\n      const [mimeType, content] = item;\n      if (!isFileMimeType(mimeType)) {\n        event.nativeEvent?.clipboardData?.setData(mimeType, content);\n      }\n    });\n    if (isFileData) {\n      const clipManager = createClip();\n      clipManager.writeFile(data, {\n        succeeded: true,\n        action: 'copy',\n        text: '',\n      }).finally(() => {\n        if (callback) {\n          callback();\n        }\n      });\n    } else if (callback) {\n      callback();\n    }\n  } else {\n    const clipManager = createClip();\n    clipManager.write(data, false);\n    window.requestAnimationFrame(() => {\n      if (callback) {\n        callback();\n      }\n    });\n  }\n}\n\nexport function copyFragment(\n  event: CangjieClipboardEvent,\n  callback?: () => void,\n) {\n  const encodedFragment = event.clipboardData?.getData(MIME_TYPES.FRAGMENT);\n  const text = event.clipboardData?.getData(MIME_TYPES.TEXT)\n    || (encodedFragment && decodeFragment(encodedFragment).text)\n    || '';\n  const html = event.clipboardData?.getData(MIME_TYPES.HTML) || text;\n  const data = {\n    [MIME_TYPES.FRAGMENT]: encodedFragment,\n    [MIME_TYPES.HTML]: html,\n    [MIME_TYPES.TEXT]: text,\n  };\n\n  const imageTypes = event.clipboardData?.types.filter((type) =>\n    type.startsWith('image'));\n  imageTypes?.forEach((type) => {\n    const imgData = event.clipboardData?.getData(type);\n    if (imgData) {\n      data[type] = imgData;\n    }\n  });\n  setClipboardData(event, data, callback);\n}","import { isPlainObject, isEmpty, omitBy, isArray, forOwn, isObject } from 'lodash-es';\n\nexport function isEmptyObj (value) {\n  if (isPlainObject(value) || isArray(value)) {\n    return isEmpty(value)\n  }\n  return false\n}\n\nexport function omitEmptyObj (obj: object) {\n  return omitBy(obj, isEmptyObj);\n}\n\nexport function omitDeepBy (obj: object, predicate: (o) => boolean) {\n  let nextObj = obj;\n  forOwn(obj, (value, key) => {\n    if (isObject(value)) {\n      nextObj = {\n        ...nextObj,\n        [key]: omitDeepBy(value, predicate)\n      }\n    }\n  })\n  return omitBy(nextObj, predicate);\n}\n","import Value from '../models/value';\nimport CangjieDataTransfer from '../models/dataTransfer';\nimport { MIME_TYPES } from '../constants';\nimport { encodeFragment } from './transfer';\nimport Document from '../models/document';\nimport Element from '../models/element';\nimport { isEmptyObj, omitDeepBy } from './omitEmpty';\nimport Controller from '../controller';\nimport { UserData } from '../controller/userData';\n\nexport default function createClipboardDataFromSelection(controller: Controller) {\n  const { value, uid } = controller;\n  const { document, selection } = value;\n  let fragment = document.getFragmentAtRange(selection); \n  fragment = withUserData(fragment, document.data?.userData, uid);\n  const dataTransfer = CangjieDataTransfer.create();\n  const text = fragment.nodes.reduce((acc, node) => {\n    return `${acc}\\n${node.text}`;\n  }, '').slice(1);\n  \n  return dataTransfer\n    .setData(MIME_TYPES.FRAGMENT, encodeFragment(fragment))\n    .setData(MIME_TYPES.TEXT, text);\n}\n\n/**\n * 将节点的用户数据复制到 fragment 中\n * @param fragment \n * @param userData \n * @param uid \n * @returns \n */\nexport function withUserData (fragment: Document, userData?: UserData, uid?: string) {\n  const originData = uid && userData?.[uid];\n  if (originData) {\n    const nextData = {};\n    // 遍历 fragment 子节点，取出所有子节点的用户数据\n    fragment.forEachDescendant((node) => {\n      const uuid = Element.isElement(node) ? node.data?.uuid : null;\n      if (uuid && originData?.[uuid]) {\n        nextData[uuid] = originData?.[uuid];\n      }\n    })\n    // 用户数据复制到 fragment 中\n    if (Object.keys(nextData).length > 0) {\n      return fragment.set('data', omitDeepBy({\n        ...fragment.data,\n        userData: { [uid]: nextData },\n      }, isEmptyObj))\n    }\n  }\n  return fragment;\n}\n","import React from 'react';\n\nexport function Copy() {\n  return (\n    <svg\n      className=\"icon\"\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 1024 1024\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill=\"#ffffff\"\n        d=\"M192 160a10.666667 10.666667 0 0 0-10.666667 10.666667v554.666666c0 5.888 4.778667 10.666667 10.666667 10.666667h42.666667v64h-42.666667A74.666667 74.666667 0 0 1 117.333333 725.333333V170.666667c0-41.216 33.450667-74.666667 74.666667-74.666667h469.333333c41.216 0 74.666667 33.450667 74.666667 74.666667v42.666666h-64V170.666667a10.666667 10.666667 0 0 0-10.666667-10.666667h-469.333333zM288 341.333333c0-41.216 33.450667-74.666667 74.666667-74.666666h469.333333c41.216 0 74.666667 33.450667 74.666667 74.666666v512a74.666667 74.666667 0 0 1-74.666667 74.666667h-469.333333A74.666667 74.666667 0 0 1 288 853.333333V341.333333z m74.666667-10.666666a10.666667 10.666667 0 0 0-10.666667 10.666666v512c0 5.888 4.778667 10.666667 10.666667 10.666667h469.333333a10.666667 10.666667 0 0 0 10.666667-10.666667V341.333333a10.666667 10.666667 0 0 0-10.666667-10.666666h-469.333333z\"\n      />\n    </svg>\n  );\n}\n\nexport function Cut() {\n  return (\n    <svg\n      className=\"icon\"\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 1024 1024\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill=\"#ffffff\"\n        d=\"M553.301333 484.48l259.712-318.378667-49.578666-40.448L384.426667 590.250667a160 160 0 1 0 46.208 44.586666L512 535.04l81.365333 99.754667a160 160 0 1 0 46.208-44.586667l-86.272-105.813333zM298.666667 629.333333c18.901333 0 36.565333 5.461333 51.413333 14.933334l17.621333 14.336A96 96 0 1 1 298.666667 629.333333zM210.986667 166.101333l182.058666 223.189334 41.216-50.773334-173.653333-212.906666-49.621333 40.490666zM673.92 644.266667a96 96 0 1 1-17.578667 14.336l17.578667-14.336z\"\n      />\n    </svg>\n  );\n}\n\nexport function Paste() {\n  return (\n    <svg\n      className=\"icon\"\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 1024 1024\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill=\"#ffffff\"\n        d=\"M352 106.666667A32 32 0 0 1 384 74.666667h170.666667a32 32 0 0 1 32 32v32H640a32 32 0 0 1 32 32v10.666666H725.333333c41.216 0 74.666667 33.450667 74.666667 74.666667v85.333333h-64V256a10.666667 10.666667 0 0 0-10.666667-10.666667h-53.333333V298.666667a32 32 0 0 1-32 32H298.666667A32 32 0 0 1 266.666667 298.666667V245.333333H213.333333a10.666667 10.666667 0 0 0-10.666666 10.666667v554.666667c0 5.888 4.778667 10.666667 10.666666 10.666666h213.333334v64H213.333333A74.666667 74.666667 0 0 1 138.666667 810.666667V256c0-41.216 33.450667-74.666667 74.666666-74.666667h53.333334V170.666667A32 32 0 0 1 298.666667 138.666667h53.333333V106.666667z m64 32V170.666667a32 32 0 0 1-32 32H330.666667v64h277.333333v-64H554.666667a32 32 0 0 1-32-32v-32h-106.666667z m106.666667 352c0-41.216 33.450667-74.666667 74.666666-74.666667h256c41.216 0 74.666667 33.450667 74.666667 74.666667v341.333333A74.666667 74.666667 0 0 1 853.333333 906.666667h-256a74.666667 74.666667 0 0 1-74.666666-74.666667v-341.333333z m74.666666-10.666667a10.666667 10.666667 0 0 0-10.666666 10.666667v341.333333c0 5.888 4.778667 10.666667 10.666666 10.666667h256a10.666667 10.666667 0 0 0 10.666667-10.666667v-341.333333a10.666667 10.666667 0 0 0-10.666667-10.666667h-256z\"\n      />\n    </svg>\n  );\n}\nexport function Select() {\n  return (\n    <svg\n      className=\"icon\"\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 1024 1024\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill=\"#ffffff\"\n        d=\"M237.525333 187.178667a32 32 0 0 1 33.706667-1.962667l597.333333 324.266667a32 32 0 0 1-11.904 59.946666l-308.181333 32.426667-162.56 276.224a32 32 0 0 1-59.221333-11.221333L224.426667 218.325333a32 32 0 0 1 13.141333-31.146666z m60.16 85.205333l78.336 496.341333 125.44-213.205333a32 32 0 0 1 24.277334-15.616l221.781333-23.338667L297.728 272.384z\"\n      />\n    </svg>\n  );\n}\n\nexport function SelectAll() {\n  return (\n    <svg\n      className=\"icon\"\n      width=\"24px\"\n      height=\"24.00px\"\n      viewBox=\"0 0 1024 1024\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill=\"#ffffff\"\n        d=\"M142.037333 154.965333l9.130667-3.797333 3.84-9.130667 9.130667 3.754667 7.424-3.072c6.357333-2.602667 13.226667-4.053333 20.437333-4.053333h85.333333v64H202.666667V277.333333h-64v-85.333333c0-7.168 1.450667-14.08 4.053333-20.437333l3.072-7.424-3.754667-9.173334zM352 138.666667H320v64h170.666667v-64H352z m213.333333 0h-32v64h170.666667v-64h-138.666667z m213.333334 0h-32v64h74.666666V277.333333h64v-85.333333c0-7.168-1.450667-14.08-4.053333-20.437333l-3.114667-7.424 3.84-9.173334-9.173333-3.797333-3.84-9.130667-9.130667 3.754667-7.424-3.072a53.248 53.248 0 0 0-20.437333-4.053333h-53.333333z m-576 213.333333V320h-64v170.666667h64V352z m682.666666 0V320h-64v170.666667h64V352z m-682.666666 213.333333v138.666667h-64v-170.666667h64v32z m682.666666 0v-32h-64v170.666667h64v-138.666667z m-682.666666 213.333334v-32h-64v85.333333c0 7.168 1.450667 14.08 4.053333 20.437333l3.072 7.424-3.754667 9.173334 9.130667 3.797333 3.84 9.173333 9.130667-3.84 7.424 3.114667c6.357333 2.602667 13.226667 4.053333 20.437333 4.053333h85.333333v-64H202.666667v-42.666666z m682.666666 0v-32h-64v74.666666H746.666667v64h85.333333c7.168 0 14.08-1.450667 20.437333-4.053333l7.424-3.114667 9.173334 3.84 3.797333-9.173333 9.173333-3.84-3.84-9.130667 3.114667-7.424a53.333333 53.333333 0 0 0 4.053333-20.437333v-53.333333z m-533.333333 42.666666H320v64h170.666667v-64H352z m213.333333 0h-32v64h170.666667v-64h-138.666667zM392.533333 580.181333L483.413333 298.666667h67.2l90.837334 281.514666 51.2 145.152h-67.84l-36.352-102.912h-142.933334L409.173333 725.333333H341.333333l51.2-145.152z m124.458667-177.28l-50.176 155.52h100.352l-50.176-155.52z\"\n      />\n    </svg>\n  );\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport * as Commands from '../commands/index';\nimport CangjieClipboardEvent from '../events/cangjieClipboard';\nimport CangjieSelectEvent from '../events/cangjieSelect';\nimport CangjieDataTransfer from '../models/dataTransfer';\nimport { ContextMenuItem } from '../interfaces/contextMenu';\nimport { defaultLocale, ContextMenuLocale } from '../locale/contextMenu';\nimport { ControllerConfigs } from '../interfaces/controller';\nimport createClipboardDataFromSelection from '../utils/createClipboardDataFromSelection';\nimport { IS_IOS, IS_MOBILE } from '../utils/environment';\nimport { getClipboardData, readClipboardDataFromHtml } from '../utils/getClipboardData';\nimport { Copy, Cut, Paste, Select, SelectAll } from '../components/mobile/icons';\n\nexport const ACTION_COPY = Symbol('ACTION_COPY');\nexport const ACTION_COPY_FAIL = Symbol('ACTION_COPY_FAIL');\nexport const ACTION_CUT = Symbol('ACTION_CUT');\nexport const ACTION_CUT_FAIL = Symbol('ACTION_CUT_FAIL');\nexport const ACTION_PASTE = Symbol('ACTION_PASTE');\nexport const ACTION_PASTE_FAIL = Symbol('ACTION_PASTE_FAIL');\nexport const ACTION_SELECT = Symbol('ACTION_SELECT');\nexport const ACTION_SELECT_ALL = Symbol('ACTION_SELECT_ALL');\n\n\nfunction execCommandPolyfill(command: string) {\n  const maybeHiddenTextArea = window.document.activeElement;\n  let hiddenTextAreaOriginValue = '';\n  let hiddenTextAreaOriginStart = 0;\n  let hiddenTextAreaOriginEnd = 0;\n  if (maybeHiddenTextArea instanceof HTMLTextAreaElement) {\n    hiddenTextAreaOriginValue = maybeHiddenTextArea.value;\n    hiddenTextAreaOriginStart = maybeHiddenTextArea.selectionStart;\n    hiddenTextAreaOriginEnd = maybeHiddenTextArea.selectionEnd;\n    // NOTE: `execCommand` will not trigger onCopy & onCut on Safari if selection is collapsed.\n    maybeHiddenTextArea.value = ' ';\n    maybeHiddenTextArea.selectionStart = 0;\n    maybeHiddenTextArea.selectionEnd = maybeHiddenTextArea.value.length;\n  }\n  window.document.execCommand(command);\n  if (maybeHiddenTextArea instanceof HTMLTextAreaElement) {\n    maybeHiddenTextArea.value = hiddenTextAreaOriginValue;\n    maybeHiddenTextArea.selectionStart = hiddenTextAreaOriginStart;\n    maybeHiddenTextArea.selectionEnd = hiddenTextAreaOriginEnd;\n  }\n}\n\nfunction execCommand(command: string, controller: Controller) {\n  if (controller.value.isBlurred) {\n    // 手动调用 flush, 触发 仓颉 HiddenTextarea 聚焦\n    controller.command(Commands.focus).flush();\n    requestAnimationFrame(() => {\n      execCommandPolyfill(command);\n    });\n  } else {\n    execCommandPolyfill(command);\n  }\n}\n\nconst pasteMenu = (\n  locale: ContextMenuLocale,\n): ContextMenuItem => {\n  return {\n    name: locale.paste,\n    action: {\n      type: ACTION_PASTE,\n    },\n    key: 'paste',\n    role: 'paste',\n    icon: Paste,\n    options: {\n      hotKey: 'mod+v',\n      mobile: true,\n    },\n  };\n};\n// [defaultLocale] is the same as [configs.plugins.contextMenu]\nfunction contextMenu(configs?: ControllerConfigs) {\n  const locale = configs?.plugins?.contextMenu || defaultLocale;\n  return function (\n    controller: Controller,\n    next: () => ContextMenuItem[] | null,\n  ) {\n    const menus: ContextMenuItem[] = [];\n    const { readOnly, canCopy } = controller;\n    const { selection, document } = controller.value;\n    const isReadMode = Boolean(readOnly || controller.query('isQuickPreview'));\n    const hasVoidParent =\n      selection?.isCollapsed &&\n      document.hasVoidParent(selection.anchor.key, controller);\n    if (hasVoidParent) {\n      // 图片等暂不支持ContextMenu\n    } else if (selection?.isExpanded) {\n      const items: ContextMenuItem[] = [\n        {\n          name: locale.cut,\n          action: {\n            type: ACTION_CUT,\n          },\n          key: 'cut',\n          role: 'cut',\n          icon: Cut,\n          options: {\n            hotKey: 'mod+x',\n            mobile: true,\n            disable: isReadMode,\n          },\n        },\n        {\n          name: locale.copy,\n          action: {\n            type: ACTION_COPY,\n          },\n          key: 'copy',\n          role: 'copy',\n          icon: Copy,\n          options: {\n            disable: isReadMode && !canCopy,\n            hotKey: 'mod+c',\n            mobile: true,\n          },\n        },\n      ];\n      if (!isReadMode) {\n        items.push(pasteMenu(locale));\n      }\n      menus.push(...items);\n    } else if (selection?.isCollapsed && !selection.data.isByTable) {\n      menus.push(\n        {\n          name: locale.select,\n          action: {\n            type: ACTION_SELECT,\n          },\n          key: 'select',\n          icon: Select,\n          options: {\n            mobile: true,\n            group: 10,\n          },\n        },\n        {\n          name: locale.selectAll,\n          action: {\n            type: ACTION_SELECT_ALL,\n          },\n          key: 'select-all',\n          icon: SelectAll,\n          options: {\n            hotKey: 'mod+a',\n            mobile: true,\n            group: 10,\n          },\n        },\n      );\n      menus.push(\n        {\n          name: locale.cut,\n          action: {\n            type: ACTION_CUT,\n          },\n          key: 'cut',\n          role: 'cut',\n          options: {\n            hotKey: 'mod+x',\n            disable: true,\n          },\n        },\n        {\n          name: locale.copy,\n          action: {\n            type: ACTION_COPY,\n          },\n          key: 'copy',\n          role: 'copy',\n          options: {\n            hotKey: 'mod+c',\n            disable: true,\n          },\n        },\n      );\n      if (!isReadMode) {\n        menus.push(pasteMenu(locale));\n      }\n    }\n    const others = next() || [];\n    return [...menus, ...others];\n  };\n}\n\nfunction handleAction(action, controller: Controller, next) {\n  const { type } = action;\n\n  if (type === ACTION_COPY) {\n    if (IS_MOBILE) {\n      // 移动端 document.activeElement 非 hiddenTextarea, 无法通过 execCommand 触发 copy 事件\n      const event = CangjieClipboardEvent('cangjieCopy');\n      try {\n        controller.run('onCangjieCopy', event.setClipboardData(createClipboardDataFromSelection(controller)));\n      } catch (error) {\n        controller.run('onAction', { type: ACTION_COPY_FAIL, payload: { error } });\n        throw (error);\n      }\n    } else {\n      execCommand('copy', controller);\n    }\n  } else if (type === ACTION_CUT) {\n    if (IS_MOBILE) {\n      const event = CangjieClipboardEvent('cangjieCut');\n      try {\n        controller.run('onCangjieCut', event.setClipboardData(createClipboardDataFromSelection(controller)));\n      } catch (error) {\n        controller.run('onAction', { type: ACTION_CUT_FAIL, payload: { error } });\n        throw (error);\n      }\n    } else {\n      execCommand('cut', controller);\n    }\n  } else if (type === ACTION_PASTE) {\n    const event = CangjieClipboardEvent('cangjiePaste');\n    if (IS_MOBILE) {\n      const customEvent = event.setClipboardData(CangjieDataTransfer.create());\n      const html = event.clipboardData?.getData('text/html');\n      if (html) {\n        const customData = readClipboardDataFromHtml(html);\n        customData.forEach(([dataType, data]) => {\n          customEvent.clipboardData?.setData(dataType, data);\n        });\n      }\n      try {\n        controller.run('onCangjiePaste', customEvent);\n      } catch (error) {\n        controller.run('onAction', { type: ACTION_PASTE_FAIL, payload: { isShortcut: false, error } });\n        throw (error);\n      }\n    } else {\n      const isPasteEnable = window.document.execCommand('paste');\n      if (!isPasteEnable) {\n        getClipboardData().then((clipboardData) => {\n          controller.run('onCangjiePaste', event.setClipboardData(clipboardData));\n        }, (error) => {\n          controller.run('onAction', { type: ACTION_PASTE_FAIL, payload: { isShortcut: false, error } });\n          console.error(error);\n        });\n      }\n    }\n  } else if (type === ACTION_SELECT) {\n    // Select\n    const { selection } = controller.value;\n    selection &&\n      controller.command(Commands.selectWordAtPoint, selection.anchor);\n  } else if (type === ACTION_SELECT_ALL) {\n    // Select All\n    const { document, selection } = controller.value;\n    selection &&\n      controller.run(\n        'onCangjieSelect',\n        CangjieSelectEvent({\n          selection: selection.moveToRangeOfNode(document, controller),\n        }),\n      );\n  }\n  return next();\n}\nexport default (configs?: ControllerConfigs) => ({\n  contextMenu: contextMenu(configs),\n  onAction: handleAction,\n  models: [],\n});\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\n\nexport function useScroll({ onStart, onEnd }) {\n  React.useEffect(() => {\n    let timeout: number | null = null;\n    let isStarted = false;\n    const handleScrollEvent = () => {\n      timeout && clearTimeout(timeout);\n      onStart();\n      isStarted = true;\n      timeout = window.setTimeout(() => {\n        onEnd();\n        isStarted = false;\n      }, 300);\n    };\n    window.addEventListener('scroll', handleScrollEvent, true);\n    return () => {\n      if (isStarted) {\n        onEnd();\n        isStarted = false;\n      }\n      timeout && clearTimeout(timeout);\n      window.removeEventListener('scroll', handleScrollEvent, true);\n    };\n  });\n}\n","/**\n * @packageDocumentation\n * @module domUtils\n */\nimport keyUtils from '../../utils/keyUtils';\nimport {\n  CURSOR_WIDTH,\n  CURSOR_EDGE_OFFSET,\n  CURSOR_EDGE_MAX_HEIGHT,\n  Selector,\n} from '../../constants';\nimport { EdgePoint, TextPoint } from '../../models/point';\nimport { SupportEdge } from '../../models/selection';\nimport { findDOMNodeSafely } from './findDOMNode';\nimport findDOMLeaves from './findDOMLeaves';\n\nexport interface PointLocation {\n  node: HTMLElement;\n  /**\n   * top offset in the window\n   */\n  clientTop: number;\n  /**\n   * left offset in the window\n   */\n  clientLeft: number;\n  /**\n   * caret height\n   */\n  height: number;\n}\n\nfunction isAfterNewLine(leaf: HTMLElement, offset: number) {\n  return (\n    leaf.firstChild?.textContent &&\n    leaf.firstChild.textContent[offset - 1] === '\\n'\n  );\n}\n\n/**\n *\n * Caret Hanging Optimization\n *\n * By default, the [caret] is inserted **after the charactor**:\n *\n *   [charactor][caret][may-be-a-line-break][next charactor].\n *\n * For multi-lines paragraph, the start of the non-first line cannot be focused\n * by this behaviour. Then we optimize the caret insert position to **before\n * the last characotr** if the user is clicking/touching the very left side:\n *\n *   [charactor][may-be-a-line-break][caret][next charactor]\n *\n */\n\n// If the caret can hanging, return the position; otheriwse return null\nfunction findHangingPosition(node: Node, offset: number, originLength: number) {\n  /**\n   * Detect is it can hanging.\n   *\n   * we get the rects of the newRange, whose offset is [originOffset + 1]\n   * if the newRange have one more rect than the old one, then we know that\n   * there is a line break between [offset, offset + 1]\n   */\n  const detectRange = window.document.createRange();\n  try {\n    detectRange.setStart(node, 0);\n    detectRange.setEnd(node, Math.max(offset, 0));\n  } catch (error) {\n    return null;\n  }\n\n  const detectRects = detectRange.getClientRects();\n  const { length } = detectRects;\n  if (length > originLength && length > 1) {\n    // the newRange has more rects than the old range\n    const secondLastRect = detectRects[length - 2];\n    const lastRect = detectRects[length - 1];\n    // skip is it's still in same line\n    if (lastRect.left >= secondLastRect.right) {\n      return null;\n    }\n    // it's a new line, binggo!\n    const { top, left, height } = lastRect;\n    return { top, left, height };\n  }\n  return null;\n}\n\nfunction getTextContentLength(childNode: ChildNode) {\n  return childNode.textContent ? childNode.textContent.length : 0;\n}\n\nfunction findTextNodeAtOffset(element: Element | ChildNode, offset: number) {\n  let remainedOffset = offset;\n  const { childNodes } = element;\n  for (let i = 0; i < childNodes.length; i += 1) {\n    const childNode = childNodes[i];\n    const textContentLength = getTextContentLength(childNode);\n    if (childNode.nodeType === Node.TEXT_NODE) {\n      if (textContentLength >= remainedOffset) {\n        return [childNode, remainedOffset];\n      }\n    } else if (childNode.nodeType === Node.ELEMENT_NODE) {\n      if (textContentLength >= remainedOffset) {\n        return findTextNodeAtOffset(childNode, remainedOffset);\n      }\n    }\n    // Ignore other Node.TYPE\n    remainedOffset -= textContentLength;\n  }\n  return findTextNodeAtOffset(element, getTextContentLength(element));\n}\n\nexport function findEdgePointPosition(\n  point: EdgePoint,\n  root: Window | Element = window,\n  maxEdgeHeight = CURSOR_EDGE_MAX_HEIGHT,\n  zoom = 1,\n) {\n  const { key } = point;\n  // eslint-disable-next-line react/no-find-dom-node\n  const node = findDOMNodeSafely(key, root);\n  if (!node) {\n    return undefined;\n  }\n  const { edge } = point;\n  const rect = node.getBoundingClientRect();\n  const height = Math.min(Math.round(rect.height), maxEdgeHeight);\n  const heightWithZoom = height > maxEdgeHeight ? height / zoom : height;\n  const clientLeft =\n    edge === EdgePoint.BEFORE ? rect.left - CURSOR_EDGE_OFFSET - CURSOR_WIDTH : rect.right + CURSOR_EDGE_OFFSET;\n  return {\n    node,\n    clientTop: rect.bottom / zoom - heightWithZoom,\n    clientLeft: clientLeft / zoom,\n    height: heightWithZoom,\n  };\n}\n\nexport function findTextPointPosition(\n  point: TextPoint,\n  preferredEdge?: SupportEdge,\n  root: Window | Element = window,\n  zoom = 1,\n) {\n  const isHanging = preferredEdge === 'start';\n  const leaves = findDOMLeaves(point.key, root);\n  if (!leaves.length) {\n    return undefined;\n  }\n  /**\n   * Step 1, find the leaf DOM node\n   */\n  const { offset } = point;\n  const leaf = leaves.find((_, index) => {\n    const nextLeaf = leaves[index + 1];\n    if (!nextLeaf) {\n      return true;\n    }\n    const leafKey = nextLeaf.getAttribute(Selector.key);\n    const startOffset = leafKey ? keyUtils.parse(leafKey)[1] : null;\n    if (!startOffset) {\n      return false;\n    }\n    return startOffset >= offset;\n  });\n  if (!leaf || !leaf.firstChild) {\n    return undefined;\n  }\n  const leafKey = leaf.getAttribute(Selector.key);\n  const startOffset = leafKey ? keyUtils.parse(leafKey)[1] : null;\n\n  if (!startOffset && startOffset !== 0) {\n    return undefined;\n  }\n\n  /**\n   * Step 2, calculate the rects\n   */\n  const range = window.document.createRange();\n  try {\n    range.setStart.apply(range, findTextNodeAtOffset(leaf, 0));\n    range.setEnd.apply(range, findTextNodeAtOffset(leaf, offset - startOffset));\n  } catch (error) {\n    return undefined;\n  }\n\n  // example: <span leaf-content key=`key:startOffset`>TEXT [offset] TEXT</span>\n  const rangeRects = Array.from(range.getClientRects());\n  const firstRangeRect = rangeRects[0];\n  const lastRangeRect = rangeRects[rangeRects.length - 1];\n  if (!firstRangeRect || !lastRangeRect) {\n    return undefined;\n  }\n\n  /**\n   * Step 3, detect hanging\n   */\n  const textContent = leaf.firstChild.textContent || '';\n  let hangingPosition: ReturnType<typeof findHangingPosition> = null;\n  const detectOffset = offset - startOffset + 1;\n  if (isHanging && textContent.length >= detectOffset) {\n    hangingPosition = findHangingPosition(\n      leaf.firstChild,\n      detectOffset,\n      rangeRects.length,\n    );\n  }\n\n  let { top, height } = lastRangeRect;\n  let left = lastRangeRect.right;\n\n  /**\n   * Step 4, detect soft line break\n   */\n  // if the point is after \\n\n  // calculate the following bounding rect (offset, offset + 1)\n  // and choose left side of following bounding rect\n  if (isAfterNewLine(leaf as HTMLElement, offset)) {\n    try {\n      range.setStart(leaf.firstChild, offset - startOffset);\n      range.setEnd(\n        leaf.firstChild,\n        Math.max(Math.min(detectOffset, textContent.length), 0),\n      );\n    } catch (error) {\n      return undefined;\n    }\n    const rects = range.getClientRects();\n    const followingRect = rects[rects.length - 1];\n\n    if (followingRect) {\n      ({ left, top, height } = followingRect);\n    }\n  }\n\n  // then we have the final position\n  if (hangingPosition) {\n    ({ left, top, height } = hangingPosition);\n  }\n  const [clientLeft, clientTop] = [left, top];\n\n  return {\n    node: leaf,\n    clientTop: clientTop / zoom,\n    clientLeft: clientLeft / zoom - CURSOR_WIDTH / 2,\n    height: height / zoom,\n  };\n}\n\nexport function findCaretPosition(\n  point: TextPoint | EdgePoint,\n  preferredEdge?: SupportEdge,\n  root: Window | Element = window,\n  maxEdgeHeight = CURSOR_EDGE_MAX_HEIGHT,\n  // 缩放比例\n  zoom = 1,\n): PointLocation | undefined {\n  return point.isEdgePoint()\n    ? findEdgePointPosition(point, root, maxEdgeHeight, zoom)\n    : findTextPointPosition(point, preferredEdge, root, zoom);\n}\n","import Selection from '../../models/selection';\nimport findDOMRange from '../../utils/dom/findDOMRange';\nimport Controller from '../../controller/index';\nimport { findCaretPosition } from '../../utils/dom/findCaretPosition';\nimport { findDOMNodeSafely } from '../../utils/dom/findDOMNode';\n\nconst ARROW_SIZE = 10;\nconst POPUP_MIN_SPACE = 6;\nconst TOP_SAFE_SPACE = 42;\n\nexport type PopupPosition = {\n  x: number; // client x\n  y: number; // client y\n  isTop: boolean; // is on top of the selection\n  arrowOffset: number; // arrow offset x\n};\n\nfunction getSelectionRect(selection: Selection, controller: Controller) {\n  let range: Range | null = null;\n  try {\n    // get the dom rectangles from the selction\n    range = findDOMRange(selection, controller);\n  } catch (_) {\n    return null;\n  }\n  if (!range) {\n    return null;\n  }\n  const domRects = Array.from(range.getClientRects());\n\n  if (!domRects.length) {\n    return null;\n  }\n\n  const { left, right, top, bottom } = domRects[0];\n  // compute the rectangle area\n  const rect = Array.from(domRects).reduce(\n    (obj, item) => {\n      obj.left = Math.min(item.left, obj.left);\n      obj.top = Math.min(item.top, obj.top);\n      obj.right = Math.max(item.right, obj.right);\n      obj.bottom = Math.max(item.bottom, obj.bottom);\n      return obj;\n    },\n    { left, right, top, bottom },\n  );\n  return rect;\n}\n\nfunction getCaretRect(selection: Selection, root?: Element) {\n  const preferredEdge = selection.isHanging ? 'start' : 'end';\n  const position = findCaretPosition(selection.anchor, preferredEdge, root);\n  if (!position) {\n    return null;\n  }\n  const { clientLeft: left, clientTop: top, height } = position;\n  const right = left;\n  const bottom = top + height;\n  return {\n    left,\n    right,\n    top,\n    bottom,\n  };\n}\n\nexport const getPopupPosition = (\n  selection: Selection,\n  controller: Controller,\n  popupWidth: number,\n  popupHeight: number,\n  defaultTop = true,\n): PopupPosition | null => {\n  const { document } = controller.value;\n  const root = findDOMNodeSafely(document.key);\n  const rect = selection.isCollapsed\n    ? getCaretRect(selection, root)\n    : getSelectionRect(selection, controller);\n  if (!rect) {\n    return null;\n  }\n  // default position is on top of selection\n  let isTop = defaultTop;\n  // move to bottom if the top is reaching out of screen\n  if (rect.top - (popupHeight + POPUP_MIN_SPACE) < TOP_SAFE_SPACE) {\n    isTop = false;\n  }\n  // special case when the user select very long text that exceed screen bottom\n  if (rect.bottom + (popupHeight + POPUP_MIN_SPACE) > window.innerHeight) {\n    isTop = true;\n  }\n\n  // default arrow is at the middle\n  let arrowOffset = popupWidth / 2 - ARROW_SIZE / 2;\n  let x = (rect.left + rect.right) / 2 - popupWidth / 2;\n  let y = isTop\n    ? rect.top - popupHeight - ARROW_SIZE\n    : rect.bottom + ARROW_SIZE;\n\n  // if popup is exceed the left/right edge, move it by the [offsetX] value\n  let offsetX = 0;\n  if (x < POPUP_MIN_SPACE) {\n    offsetX = POPUP_MIN_SPACE - x;\n  }\n  if (x + popupWidth > window.innerWidth - POPUP_MIN_SPACE) {\n    offsetX = window.innerWidth - x - popupWidth - POPUP_MIN_SPACE;\n  }\n  if (offsetX !== 0) {\n    x += offsetX;\n    arrowOffset -= offsetX;\n  }\n\n  arrowOffset = Math.min(\n    popupWidth - ARROW_SIZE * 2,\n    Math.max(ARROW_SIZE, arrowOffset),\n  );\n\n  y = Math.max(y, TOP_SAFE_SPACE);\n\n  return { x, y, isTop, arrowOffset };\n};\n","import React from 'react';\nimport Selection from '../models/selection';\nimport { Observable, Observer } from '../models/observable';\n\nexport type SelectionData = {\n  range: Selection;\n  blocksKeys: Set<string>;\n  isHideSelection: boolean;\n};\n\nexport function useSelectionData(\n  selectionData$: Observable<SelectionData>,\n  key: string | null,\n  onSelectionData: Observer<Omit<SelectionData, 'blocksKeys'> & { isSelected: boolean | null }>,\n  deps: any[],\n) {\n  React.useEffect(() => {\n    const subs = selectionData$.subscribe(({ range, blocksKeys, isHideSelection }) => {\n      const isSelected = key === null ? null : blocksKeys.has(key);\n      onSelectionData({\n        range,\n        isSelected,\n        isHideSelection,\n      });\n    });\n    return subs.unsubscribe;\n  }, [key, onSelectionData, ...deps]);\n}\n\nexport function useSelectionDataAtTheStartOfNextFrame(\n  selectionData$: Observable<SelectionData>,\n  key: string | null,\n  onSelectionDataNextFrame: Observer<Omit<SelectionData, 'blocksKeys'> & { isSelected: boolean | null }>,\n  deps: any[],\n) {\n  const animId = React.useRef<number | null>(null);\n  const onSelectionData = React.useCallback(\n    (pendingData) => {\n      animId.current = window.requestAnimationFrame(() => {\n        onSelectionDataNextFrame(pendingData);\n      });\n    },\n    [onSelectionDataNextFrame],\n  );\n\n  React.useEffect(() => {\n    return () => {\n      if (animId.current) {\n        window.cancelAnimationFrame(animId.current);\n      }\n    };\n  }, []);\n\n  useSelectionData(selectionData$, key, onSelectionData, deps);\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Selection from '../../models/selection';\nimport Controller from '../../controller/index';\nimport { useScroll } from '../../hooks/useScroll';\nimport { ContextMenuItem } from '../../interfaces/contextMenu';\nimport { getPopupPosition, PopupPosition } from './popupPosition';\nimport { useSelectionData } from '../../hooks/useSelectionData';\nimport { Z_INDEX_CONTEXTMENU } from '../../constants';\nimport { IS_MOBILE } from '../../utils/environment';\n\nconst ITEM_HEIGHT = 54;\nconst POPUP_HEIGHT = ITEM_HEIGHT + 8 * 2;\nconst POPUP_BOTTOM_EXTRA_HEIGHT = 20;\n\nexport type ContextMenuProps = {\n  selection: Selection;\n  controller: Controller;\n  hidePopup?: (controller: Controller) => void;\n};\n\nconst wrapperStyle: React.CSSProperties = {\n  position: 'fixed',\n  zIndex: Z_INDEX_CONTEXTMENU,\n  backgroundColor: '#585A5C',\n  padding: '8px 4px',\n  borderRadius: '8px',\n  display: 'flex',\n  flexDirection: 'row',\n  opacity: '0',\n  transition: 'opacity 0.3s',\n};\n\nconst itemStyle: React.CSSProperties = {\n  height: `${ITEM_HEIGHT}px`,\n  lineHeight: '16px',\n  color: 'white',\n  minWidth: '56px',\n  width: '56px',\n  fontSize: '10px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n};\n\nconst iconStyle: React.CSSProperties = {\n  width: '24px',\n  height: '24px',\n  marginBottom: '2px',\n};\n\nconst arrowStyle: React.CSSProperties = {\n  position: 'absolute',\n  bottom: '-4px',\n  width: '10px',\n  height: '10px',\n  backgroundColor: '#585A5C',\n  transform: 'rotate(45deg)',\n};\n\nconst arrowStyleTop: React.CSSProperties = {\n  ...arrowStyle,\n  bottom: 'inherit',\n  top: '-4px',\n};\nfunction ContextMenu(props: ContextMenuProps) {\n  const { selection, controller, hidePopup } = props;\n\n  const [position, setPosition] = React.useState<PopupPosition | null>(null);\n  const rootRef = React.useRef<HTMLDivElement>(null);\n\n  const updatePosition = () => {\n    if (rootRef.current) {\n      const { width } = rootRef.current.getBoundingClientRect();\n      const pos = getPopupPosition(\n        selection,\n        controller,\n        width,\n        POPUP_HEIGHT,\n        IS_MOBILE,\n      );\n      setPosition(pos);\n    }\n  };\n  React.useEffect(updatePosition, [selection]);\n\n  const setNodeVisible = React.useCallback((visible) => {\n    const node = rootRef.current;\n    if (selection.isCollapsed) {\n      hidePopup && hidePopup(controller)\n    } else if (node) {\n      node.style.opacity = visible ? '1' : '0';\n    }\n  }, [selection, hidePopup]);\n\n  useSelectionData(\n    controller.selectionData$,\n    null,\n    ({ range }) => {\n      if (range.isExpanded && selection.isCollapsed) {\n        setNodeVisible(false);\n      }\n    },\n    [],\n  );\n\n  useScroll({\n    onStart: () => {\n      setNodeVisible(false);\n    },\n    onEnd: () => {\n      updatePosition();\n      setNodeVisible(true);\n    },\n  });\n\n  let buttons = controller\n    .run('contextMenu')\n    .filter((b) => Boolean(b.options?.mobile));\n  buttons = buttons.sort((a, b) => {\n    const groupA = a.options?.group || 0;\n    const groupB = b.options?.group || 0;\n    return groupA - groupB;\n  });\n\n  const styleForWrapper = position\n    ? {\n        ...wrapperStyle,\n        left: position.x,\n        top: position.isTop\n          ? position.y\n          : position.y + POPUP_BOTTOM_EXTRA_HEIGHT,\n        opacity: 1,\n      }\n    : wrapperStyle;\n\n  const handleAction = (button: ContextMenuItem) => {\n    return (event: React.MouseEvent | TouchEvent | React.TouchEvent) => {\n      event.stopPropagation();\n      event.preventDefault();\n      controller.run('onAction', button.action);\n    };\n  };\n\n  const availableButtons = buttons.filter((btn) => {\n    if (btn.options && btn.options.disable) {\n      return false;\n    }\n    return true;\n  });\n\n  // 如果可用的 buttons 数为 0，则不渲染\n  if (availableButtons.length <= 0) {\n    return null;\n  }\n\n  const styleForArrow = position\n    ? {\n        ...(position.isTop ? arrowStyle : arrowStyleTop),\n        left: position.arrowOffset,\n      }\n    : arrowStyle;\n\n  return (\n    <div\n      data-role=\"mobileContextMenu\"\n      ref={rootRef}\n      className=\"cangjieContextMenu\"\n      style={styleForWrapper}\n    >\n      {availableButtons.map((button, index) => {\n        const { name, role, icon: Icon } = button;\n        return (\n          <div\n            key={name}\n            data-role={role || ''}\n            onMouseDown={handleAction(button)}\n            onTouchEnd={handleAction(button)}\n            style={itemStyle}\n          >\n            {typeof Icon !== 'function' && (\n              <img\n                style={iconStyle}\n                src={\n                  Icon ||\n                  'https://gw.alicdn.com/imgextra/i4/O1CN011xit6C1NdBJNUvlF9_!!6000000001592-55-tps-24-24.svg'\n                }\n              />\n            )}\n            {typeof Icon === 'function' && <Icon />}\n            <div>{name}</div>\n          </div>\n        );\n      })}\n      <span style={styleForArrow} />\n    </div>\n  );\n}\n\nexport default (props: ContextMenuProps) =>\n  ReactDOM.createPortal(<ContextMenu {...props} />, document.body);\n","/**\n * @packageDocumentation\n * @module Hooks\n */\nimport * as React from 'react';\n\n/**\n * @ignore\n */\nexport const ZoomContext = React.createContext<number>(1);\n\n/**\n * @ignore\n */\nexport const ExternalZoomContext = React.createContext<number>(1);\n\n/**\n * @ignore\n */\nexport const ZoomContainerContext = React.createContext<HTMLElement | null>(null);\n\nexport function useZoom() {\n  return React.useContext(ZoomContext);\n}\n\n/**\n * @ignore\n *\n * TODO: external zoom 是为了感知上层业务自行实现的缩放，但是这个设计是不合理的，上层业务从使\n * 用上看，没必要自行实现缩放功能，应该使用 cangjie 自带的缩放设计。后续希望移除此部分的 API。\n *\n * 目前已知的业务自行实现的缩放场景：PC 演示模式、生成长图\n * 2021-0222 新加：缩放状态下的评论\n */\nexport function useExternalZoom() {\n  return React.useContext(ExternalZoomContext);\n}\n\nexport function useZoomContainer() {\n  return React.useContext(ZoomContainerContext);\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Selection from '../../models/selection';\nimport { EdgePoint, TextPoint } from '../../models/point';\nimport { useZoomContainer } from '../../hooks/useZoom';\nimport useController from '../../controller/useController';\nimport findDOMNode from '../../utils/dom/findDOMNode';\nimport { getPopupPosition } from './popupPosition';\nimport { findCaretPosition } from '../../utils/dom/findCaretPosition';\nimport { Selector } from '../../constants';\n\nconst WIDTH = 160;\nconst HEIGHT = 128;\nconst ZOOM = 1.8;\nconst POPUP_EXTRA_TOP = -4;\nconst POPUP_EXTRA_BOTTOM = 52;\n\nconst rootStyle: React.CSSProperties = {\n  position: 'fixed',\n  overflow: 'hidden',\n  left: '50px',\n  top: '50px',\n  zIndex: 10000,\n  background: 'white',\n  width: WIDTH,\n  height: HEIGHT,\n  border: '1px solid rgba(17,31,44,0.12)',\n  boxShadow:\n    '0 4px 8px 0 rgba(0,0,0,0.08), inset 0 10px 20px 0 rgba(0,0,0,0.08)',\n  borderRadius: '8px',\n  opacity: 0,\n};\n\nconst blockContainerStyle: React.CSSProperties = {\n  backfaceVisibility: 'hidden',\n  transformOrigin: 'top left',\n};\n\ntype ZoomerProps = {\n  point: TextPoint | EdgePoint;\n  isHanging: boolean;\n};\n\n// remove all the *cangjie* attributes\nfunction cleanNode(node: Element) {\n  Array.from(node.attributes).forEach((attr) => {\n    if (attr.name.indexOf('cangjie') >= 0) {\n      node.removeAttribute(attr.name);\n    }\n  });\n  Array.from(node.children).forEach((child) => {\n    cleanNode(child);\n  });\n}\n\nfunction clearNode(node?: Element) {\n  while (node && node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\nfunction Zoomer(pros: ZoomerProps) {\n  const controller = useController();\n  const container = useZoomContainer();\n  const { point, isHanging } = pros;\n  const [cachedBlocks] = React.useState(new WeakMap<Element, Element>());\n  const blockRef = React.useRef<HTMLDivElement>(null);\n  const rootRef = React.useRef<HTMLDivElement>(null);\n  React.useEffect(() => {\n    const blockNode = blockRef.current;\n    const { document, selection } = controller.value;\n    const { start } = selection.sort(document);\n    const preferredEdge = point === start ? 'start' : 'end';\n    const pointPosition = findCaretPosition(\n      point,\n      preferredEdge,\n      container || window,\n    );\n    if (!blockNode || !pointPosition) {\n      return;\n    }\n\n    // Get the DOM elements\n    // eslint-disable-next-line react/no-find-dom-node\n\n    const ancestor = document.getAncestors(point.key)[0];\n    const dom = findDOMNode(ancestor.key);\n    const maybePrevDom = dom.previousElementSibling as HTMLElement;\n    const prevDom =\n      maybePrevDom && !maybePrevDom.getAttribute('data-cangjie-hidden')\n        ? maybePrevDom\n        : null;\n    const nextDom: HTMLElement = dom.nextElementSibling as HTMLElement;\n\n    // Clone the DOM elements and cache them if necessary\n    const prevArticleBlock = prevDom\n      ? cachedBlocks.get(prevDom) || (prevDom.cloneNode(true) as Element)\n      : null;\n    const nextArticleBlock = nextDom\n      ? cachedBlocks.get(nextDom) || (nextDom.cloneNode(true) as Element)\n      : null;\n    if (prevDom && prevArticleBlock && !cachedBlocks.get(prevDom)) {\n      cleanNode(prevArticleBlock);\n      cachedBlocks.set(prevDom, prevArticleBlock);\n    }\n    if (nextDom && nextArticleBlock && !cachedBlocks.get(nextDom)) {\n      cleanNode(nextArticleBlock);\n      cachedBlocks.set(nextDom, nextArticleBlock);\n    }\n\n    // We never cache the focused DOM element\n    const articleBlock = dom.cloneNode(true) as Element;\n    cleanNode(articleBlock);\n\n    // Calculate the offset positions\n    const domRect = dom.getBoundingClientRect();\n    const marginTop = parseInt(window.getComputedStyle(dom).marginTop, 10) || 0;\n    const offsetX = pointPosition.clientLeft - domRect.left - WIDTH / ZOOM / 2;\n    let offsetY =\n      pointPosition.clientTop +\n      pointPosition.height / 2 -\n      domRect.top +\n      marginTop -\n      HEIGHT / ZOOM / 2;\n    if (prevDom && prevArticleBlock) {\n      const prevStyle = window.getComputedStyle(prevDom);\n      const prevMarginTop = parseInt(prevStyle.marginTop, 10) || 0;\n      const prevMarginBottom = parseInt(prevStyle.marginBottom, 10) || 0;\n      offsetY +=\n        prevDom.getBoundingClientRect().height +\n        prevMarginTop +\n        prevMarginBottom;\n    }\n\n    const focusedSelection = Selection.create({\n      anchor: point,\n      focus: point,\n    }).setHanging(isHanging);\n    const popupPosition = getPopupPosition(\n      focusedSelection,\n      controller,\n      WIDTH,\n      HEIGHT,\n    );\n\n    // Attach the DOM elements and apply all positions\n    clearNode(blockNode);\n    if (prevArticleBlock) {\n      blockNode.appendChild(prevArticleBlock);\n    }\n    blockNode.appendChild(articleBlock);\n    if (nextArticleBlock) {\n      blockNode.appendChild(nextArticleBlock);\n    }\n    if (rootRef.current && popupPosition) {\n      const { isTop, x, y } = popupPosition;\n      const extraOffset = isTop ? POPUP_EXTRA_TOP : POPUP_EXTRA_BOTTOM;\n      rootRef.current.style.left = `${x}px`;\n      rootRef.current.style.top = `${y + extraOffset}px`;\n      rootRef.current.style.opacity = '1';\n    }\n    blockNode.style.width = `${domRect.width}px`;\n    blockNode.style.transform = `translate(${-offsetX * ZOOM}px, ${\n      -offsetY * ZOOM\n    }px) scale(${ZOOM})`;\n  }, [cachedBlocks, container, controller, point]);\n\n  return (\n    <div data-cangjie-mobile-zoomer style={rootStyle} ref={rootRef}>\n      <div style={blockContainerStyle} ref={blockRef} />\n    </div>\n  );\n}\n\nexport default (props: ZoomerProps) => {\n  const container = useZoomContainer();\n  const attachNode = container?.querySelector('[data-cangjie-zoomer]');\n  if (!attachNode) {\n    return null;\n  }\n  return ReactDOM.createPortal(<Zoomer {...props} />, attachNode);\n};\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../../controller/index';\nimport Selection from '../../models/selection';\nimport findDOMRange from './findDOMRange';\nimport findDOMNode, { findDOMNodeSafely } from './findDOMNode';\nimport { EdgePoint } from '../../models/point';\nimport { findCaretPosition, PointLocation } from './findCaretPosition';\nimport { CURSOR_WIDTH } from '../../constants';\nimport { IS_MOBILE } from '../environment';\n\n// 避免 smooth 滚动的滚动距离阈值\n// 参考 mac 下最大字号 72pt * 1.7 行高 = 163px 设置的 magic number\nconst MAX_LINE_HEIGHT = 150;\n\n// 往上滚动时，底部预留额外距离。参考竞品 (G Docs)，移动端间距会大一些 (一行 + 4px)\nconst EXTRA_BOTTOM_OFFSET = IS_MOBILE ? 66 : 12;\n\nexport function findScrollableContainer(el, window) {\n  if (!el) {\n    return null;\n  }\n\n  let scroller;\n  let parent = el.parentNode;\n  while (!scroller) {\n    if (!parent.parentNode) break;\n\n    const style = window.getComputedStyle(parent);\n    const { overflowY } = style;\n\n    if (['auto', 'overlay', 'scroll'].includes(overflowY)) {\n      scroller = parent;\n      break;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  // COMPAT: Because Chrome does not allow doucment.body.scrollTop, we're\n  // assuming that window.scrollTo() should be used if the scrollable element\n  // turns out to be document.body or document.documentElement. This will work\n  // unless body is intentionally set to scrollable by restricting its height\n  // (e.g. height: 100vh).\n  if (!scroller) {\n    return window.document.body;\n  }\n\n  return scroller;\n}\n\nexport function getScrollableContainerInfo(scroller: Window | HTMLElement) {\n  const isWindow =\n    scroller === window ||\n    scroller === window.document.body ||\n    scroller === window.document.documentElement;\n\n  // @ts-ignore\n  const { innerHeight, visualViewport, _visualHeight } = window;\n\n  let width;\n  let height;\n  let yOffset;\n  let xOffset;\n  let scrollerTop = 0;\n  let scrollerLeft = 0;\n  let scrollerBordersY = 0;\n  let scrollerBordersX = 0;\n  let scrollerPaddingTop = 0;\n  let scrollerPaddingBottom = 0;\n  let scrollerPaddingLeft = 0;\n  let scrollerPaddingRight = 0;\n\n  // iOS 13/14 Safari浏览器，去除键盘高度后的视口高度\n  let viewportHeight: number = visualViewport ? visualViewport.height : innerHeight;\n  // 底部工具条弹出时，下面区域视为 viewport 之外\n  if (typeof _visualHeight === 'number' && _visualHeight > 0) {\n    viewportHeight = _visualHeight;\n  }\n\n  if (isWindow) {\n    // @ts-ignore\n    const { innerWidth, pageYOffset, pageXOffset } = window;\n    width = innerWidth;\n    height = innerHeight;\n    yOffset = pageYOffset;\n    xOffset = pageXOffset;\n  } else {\n    const { offsetWidth, offsetHeight, scrollTop, scrollLeft } = scroller as HTMLElement;\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n    } = window.getComputedStyle(scroller as HTMLElement);\n\n    const scrollerRect = (scroller as HTMLElement).getBoundingClientRect();\n    width = offsetWidth;\n    height = offsetHeight;\n    scrollerTop = scrollerRect.top + parseInt(borderTopWidth, 10);\n    scrollerLeft = scrollerRect.left + parseInt(borderLeftWidth, 10);\n\n    scrollerBordersY =\n      parseInt(borderTopWidth, 10) + parseInt(borderBottomWidth, 10);\n\n    scrollerBordersX =\n      parseInt(borderLeftWidth, 10) + parseInt(borderRightWidth, 10);\n\n    scrollerPaddingTop = parseInt(paddingTop, 10);\n    scrollerPaddingBottom = parseInt(paddingBottom, 10);\n    scrollerPaddingLeft = parseInt(paddingLeft, 10);\n    scrollerPaddingRight = parseInt(paddingRight, 10);\n    yOffset = scrollTop;\n    xOffset = scrollLeft;\n  }\n\n  return {\n    isWindow,\n    width,\n    height,\n    viewportHeight,\n    scrollerTop,\n    scrollerLeft,\n    xOffset,\n    yOffset,\n    scrollerPaddingLeft,\n    scrollerPaddingRight,\n    scrollerPaddingTop,\n    scrollerPaddingBottom,\n    scrollerBordersX,\n    scrollerBordersY,\n  };\n}\n\nexport function getDOMRectFromSelection(selection: Selection, content: HTMLElement, controller: Controller) {\n  const collapsedSelection = selection.moveToFocus();\n  if (!collapsedSelection) {\n    return null;\n  }\n\n  const { anchor } = collapsedSelection;\n  if (anchor.isEdgePoint()) {\n    let node: Element | null = null;\n    try {\n      // eslint-disable-next-line react/no-find-dom-node\n      node = findDOMNode(anchor.key);\n    } catch (error) {\n      // ignore\n    }\n    if (!node) {\n      return null;\n    }\n    const domRect = node.getBoundingClientRect();\n    const { top, height } = domRect;\n    const left = anchor.edge === EdgePoint.BEFORE ? domRect.left : domRect.right;\n    return typeof DOMRect !== 'undefined' ? new DOMRect(left, top, 1, height) : null;\n  }\n\n  let range: Range | null = null;\n  try {\n    range = findDOMRange(collapsedSelection, controller, content);\n  } catch (e) {\n    return null;\n  }\n  if (!range) {\n    return null;\n  }\n  const cursorRect = range.getClientRects()[0];\n  if (!cursorRect) {\n    return null;\n  }\n  return cursorRect;\n}\n\nexport function scrollToSelection(selection: Selection, content: HTMLElement, scroller: HTMLElement, controller: Controller) {\n  const inline = controller.value.document.getClosestInline(selection.focus.key);\n  let rect: PointLocation | undefined;\n  // 光标在 inline 元素内部\n  if (inline) {\n    const inlineDOM = findDOMNodeSafely(inline.key);\n    if (!inlineDOM) {\n      return;\n    }\n    const inlineRect = inlineDOM.getBoundingClientRect();\n    rect = {\n      node: inlineDOM,\n      clientLeft: inlineRect.left + inlineRect.width / 2,\n      clientTop: inlineRect.top,\n      height: inlineRect.height, // 以 inline 的尺寸为准\n    };\n  } else {\n    rect = findCaretPosition(selection.focus, selection.isHanging ? 'start' : 'end', content, Infinity);\n  }\n\n  if (!rect) {\n    return;\n  }\n\n  const {\n    isWindow,\n    width,\n    height,\n    viewportHeight,\n    scrollerTop,\n    scrollerLeft,\n    xOffset,\n    yOffset,\n    scrollerPaddingLeft,\n    scrollerPaddingRight,\n    scrollerPaddingTop,\n    scrollerPaddingBottom,\n    scrollerBordersX,\n    scrollerBordersY,\n  } = getScrollableContainerInfo(scroller);\n\n  const cursorTop = rect.clientTop + yOffset - scrollerTop;\n  const cursorLeft = rect.clientLeft + xOffset - scrollerLeft;\n\n  let x = xOffset;\n  let y = yOffset;\n  let inView = true;\n\n  if (cursorLeft < xOffset) {\n    // selection to the left of viewport\n    x = cursorLeft - scrollerPaddingLeft;\n    inView = false;\n  } else if (\n    cursorLeft + CURSOR_WIDTH + scrollerBordersX >\n    xOffset + width\n  ) {\n    // selection to the right of viewport\n    x = cursorLeft + scrollerBordersX + scrollerPaddingRight - width;\n    inView = false;\n  }\n\n  if (cursorTop < yOffset) {\n    // selection above viewport\n    y = cursorTop - scrollerPaddingTop;\n    inView = false;\n  } else if (\n    cursorTop + rect.height + scrollerBordersY >\n    yOffset + height - EXTRA_BOTTOM_OFFSET\n    // 此条件为被iOS键盘遮挡\n    // iOS弹出键盘只会改变 visualViewport，不会影响其他任何地方\n    || rect.clientTop + rect.height > viewportHeight - EXTRA_BOTTOM_OFFSET\n  ) {\n    // selection below viewport\n    y = Math.max(\n      cursorTop +\n      scrollerBordersY +\n      scrollerPaddingBottom +\n      rect.height -\n      height,\n      // 此数值为避免被iOS键盘遮挡\n      scrollerTop +\n      cursorTop +\n      rect.height -\n      viewportHeight,\n    );\n    y += EXTRA_BOTTOM_OFFSET;\n    inView = false;\n  }\n\n  // 对于大元素（超过 1/2 屏幕高度以上），特殊处理一下。\n  const quaterHeight = height / 4;\n  const isHugeElement = rect.height > quaterHeight * 2;\n  // 如果大元素已经大部分在视图内（1/4 以上），就不要滚动了。\n  const partInView =\n    rect.clientTop < scrollerTop + quaterHeight * 3 &&\n    rect.clientTop + rect.height > scrollerTop + quaterHeight;\n  if (isHugeElement && partInView) {\n    inView = true;\n  }\n\n  if (inView) {\n    return;\n  }\n\n  const deltaY = Math.abs(y - scroller.scrollTop);\n\n  (isWindow ? window : scroller).scrollTo({\n    left: x,\n    top: y,\n    // 纵向滚动距离小于 Min(视口高度/4, 特定高度) 时，采用顺滑滚动\n    //    > 一般用于输入文字导致的换行到视口外，然后滚动进视口\n    // 否则滚动距离过大就直接跳转到指定位置，避免滚动动画时间过长，体感不好\n    behavior: deltaY < Math.min(quaterHeight, MAX_LINE_HEIGHT) ? 'smooth' : 'auto',\n  });\n}\n","import { throttle } from 'lodash-es';\nimport Controller from '../../controller';\nimport { IS_MOBILE } from '../environment';\n\nimport { getScrollableContainerInfo } from './scrollToSelection';\n\ntype StartParams = {\n  scroller: HTMLElement;\n  controller: Controller;\n};\n\ntype ScheduleParams = {\n  controller: Controller;\n  isWindow: boolean;\n  scroller: HTMLElement;\n  left: number;\n  from: number;\n  isTop: boolean;\n  speed: number;\n};\n\ntype ScrollState = {\n  timer?: any;\n  isStarted: boolean;\n};\n\nconst stateMap = new WeakMap<Controller, ScrollState>();\n\n// 检测 move 事件的 Throttle\nconst THROTTLE_MOVE = 300;\n// 用户每移动这么多 pixel，就加一个速度\nconst SPEED_PIXEL = 20;\n// 用户最大速度（最小是 1）\nconst MAX_SPEED = 6;\n// 底部热区大一些，提前就滚动\nconst BOTTOM_EXTRA_HOT_SIZE = IS_MOBILE ? 100 : 50;\n// 移动端顶部热区大一些，提前滚动\nconst TOP_EXTRA_HOT_SIZE = IS_MOBILE ? 100 : 0;\n\nconst scheduleScroll = (params: ScheduleParams) => {\n  const { controller, isWindow, scroller, left, from, speed, isTop } = params;\n  const state = stateMap.get(controller);\n  if (!state || !state.isStarted) {\n    return;\n  }\n  cancelSchedule(controller);\n  // step 从用户体验角度，做了指数加速，一般是：2, 6, 12, 20, 30, ... 72\n  const px = speed * (speed + 1);\n  const step = isTop ? -px : px;\n  const top = Math.round(from + step);\n  if (isWindow) {\n    window.scrollTo(left, top);\n  } else {\n    scroller.scrollTop = top;\n  }\n  const newSpeed = Math.min(MAX_SPEED, speed + 0.1);\n  state.timer = requestAnimationFrame(() => {\n    scheduleScroll({ ...params, from: top, speed: newSpeed });\n  });\n};\n\nconst cancelSchedule = (controller: Controller) => {\n  const state = stateMap.get(controller);\n  if (state?.timer) {\n    cancelAnimationFrame(state.timer);\n    state.timer = undefined;\n  }\n};\n\nexport const startScroll = ({ scroller, controller }: StartParams) => {\n  stopScroll(controller);\n  stateMap.set(controller, {\n    isStarted: true,\n  });\n  return throttle((event: MouseEvent | PointerEvent | TouchEvent) => {\n    // PC Safari 下，不支持 TouchEvent\n    const { clientY } = (\n      typeof TouchEvent === 'function' && event instanceof TouchEvent\n        ? event.touches[0]\n        : event as (MouseEvent | PointerEvent)\n    );\n    const {\n      isWindow,\n      scrollerTop: top,\n      height,\n      xOffset,\n      yOffset,\n    } = getScrollableContainerInfo(scroller);\n    const bottom = top + height;\n    const topOffset = top - clientY + SPEED_PIXEL + TOP_EXTRA_HOT_SIZE;\n    const bottomOffset = clientY - bottom + SPEED_PIXEL + BOTTOM_EXTRA_HOT_SIZE;\n    if (topOffset <= 0 && bottomOffset <= 0) {\n      cancelSchedule(controller);\n      return;\n    }\n    const isTop = topOffset > 0;\n\n    // speed 一般是：1 - 8\n    const speed = Math.max(\n      1,\n      Math.min(\n        MAX_SPEED,\n        Math.round(\n          isTop ? topOffset / SPEED_PIXEL : bottomOffset / SPEED_PIXEL,\n        ),\n      ),\n    );\n\n    scheduleScroll({\n      controller,\n      isWindow,\n      scroller,\n      left: xOffset,\n      from: yOffset,\n      isTop,\n      speed,\n    });\n  }, THROTTLE_MOVE);\n};\n\nexport const stopScroll = (controller: Controller) => {\n  const state = stateMap.get(controller);\n  if (!state || !state.isStarted) {\n    return;\n  }\n  cancelSchedule(controller);\n  state.isStarted = false;\n};\n\nexport const isScrolling = (controller: Controller) => {\n  const state = stateMap.get(controller);\n  return Boolean(state?.isStarted && state.timer);\n};\n","import { createContext, useContext } from 'react';\n\nexport const ScrollableContainerContext = createContext<HTMLElement | Window | null>(\n  typeof window !== 'undefined' ? window : null,\n);\n\n/**\n * 滚动container，默认是window\n */\n export function useScrollableContainer() {\n  return useContext(ScrollableContainerContext);\n}\n","/* eslint-disable implicit-arrow-linebreak */\n// eslint-disable-next-line import/no-extraneous-dependencies\n/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport equal from 'fast-deep-equal';\n\nimport Controller from '../../controller/index';\nimport * as Commands from '../../commands/index';\nimport Selection from './../../models/selection';\nimport caretRangeFromTargetAndCoord from '../../utils/dom/caretRangeFromTargetAndCoord';\nimport ContextMenu from './contextMenu';\nimport { useScroll } from '../../hooks/useScroll';\nimport Zoomer from './Zoomer';\nimport { TextPoint, EdgePoint } from '../../models/point';\nimport findDOMNode, { findDOMNodeSafely } from '../../utils/dom/findDOMNode';\nimport { pointAtDistance } from '../../queries/selection';\nimport { useSelectionData } from '../../hooks/useSelectionData';\nimport {\n  PointLocation,\n  findCaretPosition,\n} from '../../utils/dom/findCaretPosition';\nimport { Selector } from '../../constants';\nimport CangjieSelectEvent from '../../events/cangjieSelect';\nimport { startScroll, stopScroll } from '../../utils/dom/outsideScroller';\nimport { useScrollableContainer } from '../ScrollableContainer';\n\ninterface HandlesProps {\n  selection: Selection;\n  enableZoomer: boolean;\n  controller: Controller;\n}\n\ninterface HandleProps {\n  style: object;\n  onDrag: (type: DraggingType, event: TouchEvent) => void;\n  type: DraggingType;\n  onDragStart: (type: DraggingType) => void;\n  onDragEnd: (type: DraggingType) => void;\n  isHidden?: boolean;\n}\n\n// handle needle width\nconst HANDLE_WIDTH = 2;\n// handle round dot size\nconst HANDLE_DOT_SIZE = 10;\n// handle touchable rect size\nconst HANDLE_TOUCH_SIZE = 30;\n\nconst TYPE_START = 'start';\nconst TYPE_END = 'end';\ntype DraggingType = 'start' | 'end' | null;\n\nconst cursorStyle: React.CSSProperties = {\n  position: 'fixed',\n  background: '#0089ff',\n  opacity: 1,\n  width: `${HANDLE_WIDTH}px`,\n};\n\nconst handleRectStyle: React.CSSProperties = {\n  position: 'absolute',\n  width: `${HANDLE_TOUCH_SIZE}px`,\n  height: `${HANDLE_TOUCH_SIZE}px`,\n  left: `-${HANDLE_TOUCH_SIZE / 2 - HANDLE_WIDTH / 2}px`,\n  bottom: `-${HANDLE_TOUCH_SIZE / 2 + HANDLE_DOT_SIZE / 2}px`,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\n\nconst handleRectTop: React.CSSProperties = {\n  left: `-${HANDLE_TOUCH_SIZE / 2}px`,\n  top: `-${HANDLE_TOUCH_SIZE / 2}px`,\n  bottom: 'auto',\n};\n\nconst handleRoundDotStyle: React.CSSProperties = {\n  background: '#0089ff',\n  width: `${HANDLE_DOT_SIZE}px`,\n  height: `${HANDLE_DOT_SIZE}px`,\n  borderRadius: `${HANDLE_DOT_SIZE}px`,\n};\n\nconst handleRectTopStyle: React.CSSProperties = {\n  ...handleRectStyle,\n  ...handleRectTop,\n};\n\nconst isPointVisible = ({ node, clientLeft }: PointLocation) => {\n  let visible = true;\n  let pElement: HTMLElement | null = node.parentElement;\n  while (pElement && !pElement.getAttribute(`[${Selector.content}]`)) {\n    if (pElement.scrollWidth > pElement.offsetWidth) {\n      const pRect = pElement.getBoundingClientRect();\n      if (clientLeft < pRect.left || clientLeft > pRect.right) {\n        visible = false;\n        break;\n      }\n    }\n    pElement = pElement.parentElement;\n  }\n  return visible;\n};\n\nconst updateHandlePosition = (node: HTMLElement, loc: PointLocation) => {\n  node.style.top = `${loc.clientTop}px`;\n  node.style.left = `${loc.clientLeft}px`;\n  node.style.height = `${loc.height}px`;\n};\n\nconst blockEvent = (e: Event | React.TouchEvent) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n\n// get a range from a client point (x, y)\nconst caretRangeFromPoint = (x: number, y: number, controller: Controller) => {\n  const { key } = controller.value.document;\n  const docNode = findDOMNodeSafely(key);\n  const ele = docNode?.closest(`[${Selector.content}]`);\n  if (!ele) {\n    return null;\n  }\n  return caretRangeFromTargetAndCoord(ele, x, y, controller);\n};\n\n// Handle component\nconst Handle = React.forwardRef<HTMLElement, HandleProps>(\n  ({ style, onDrag, onDragStart, onDragEnd, type, isHidden = false }, ref) => {\n    // prevent page scroll when dragging\n    const handleTouchStart = (e: React.TouchEvent) => {\n      blockEvent(e);\n      e.nativeEvent.stopImmediatePropagation();\n      onDragStart(type);\n    };\n    const handleTouchEnd = (e: React.TouchEvent) => {\n      blockEvent(e);\n      e.nativeEvent.stopImmediatePropagation();\n      onDragEnd(type);\n    };\n\n    const handleDrag = React.useCallback(\n      (event: TouchEvent) => {\n        onDrag(type, event);\n      },\n      [type, onDrag],\n    );\n\n    const touchMoveRef = React.useRef<HTMLDivElement>(null);\n    React.useEffect(() => {\n      const element = touchMoveRef ? touchMoveRef.current : null;\n      if (element !== null) {\n        element.addEventListener('touchmove', handleDrag, {\n          passive: false,\n          capture: true,\n        });\n      }\n      return () => {\n        if (element !== null) {\n          element.removeEventListener('touchmove', handleDrag, {\n            capture: true,\n          });\n        }\n      };\n    }, [handleDrag]);\n\n    return (\n      <span\n        ref={ref}\n        data-testid=\"mobile-range-handle\"\n        style={isHidden ? { ...cursorStyle, opacity: 0 } : cursorStyle}\n      >\n        <span\n          ref={touchMoveRef}\n          onTouchStart={handleTouchStart}\n          onTouchEnd={handleTouchEnd}\n          style={style}\n        >\n          <span style={handleRoundDotStyle} />\n        </span>\n      </span>\n    );\n  },\n);\n\n// Handles component, contains two handles at start and end of a selection\nfunction Handles({ selection, controller, enableZoomer }: HandlesProps) {\n  const { document } = controller.value;\n  const scrollableContainer = useScrollableContainer();\n\n  const startRef = React.useRef<HTMLSpanElement>(null);\n  const endRef = React.useRef<HTMLSpanElement>(null);\n  const outsideScoller = React.useRef<ReturnType<typeof startScroll> | null>(null);\n\n  const { start, end } = selection.sort(document);\n\n  const setNodeVisible = React.useCallback(\n    (nodeRef: React.RefObject<HTMLSpanElement>, visible: boolean) => {\n      const node = nodeRef.current;\n      if (node) {\n        node.style.visibility = visible ? 'unset' : 'hidden';\n      }\n    },\n    [],\n  );\n\n  const updatePosition = () => {\n    const root = findDOMNodeSafely(document.key);\n    const posStart = findCaretPosition(start, 'start', root);\n    const posEnd = findCaretPosition(end, 'end', root);\n    const pairs: Array<[\n      PointLocation | undefined,\n      React.RefObject<HTMLSpanElement>,\n    ]> = [\n      [posStart, startRef],\n      [posEnd, endRef],\n    ];\n    pairs.forEach(([position, ref]) => {\n      if (position && isPointVisible(position) && ref.current) {\n        setNodeVisible(ref, true);\n        updateHandlePosition(ref.current, position);\n      } else {\n        setNodeVisible(ref, false);\n      }\n    });\n  };\n\n  React.useEffect(updatePosition);\n  useScroll({\n    onStart: () => {\n      setNodeVisible(startRef, false);\n      setNodeVisible(endRef, false);\n    },\n    onEnd: () => {\n      updatePosition();\n    },\n  });\n\n  const optimizeVerticalPosition = React.useCallback(\n    (isStart: boolean, orginalY: number) => {\n      const friendNode = isStart ? endRef.current : startRef.current;\n      if (friendNode) {\n        const friendRect = friendNode.getBoundingClientRect();\n        const friendY = friendRect.top + friendRect.height / 2;\n        return isStart\n          ? Math.min(friendY, orginalY)\n          : Math.max(friendY, orginalY);\n      }\n      return orginalY;\n    },\n    [],\n  );\n\n  // update the selection when the user drags the handle bar\n  const handleDrag = React.useCallback(\n    (type: DraggingType, event: TouchEvent) => {\n      blockEvent(event);\n      outsideScoller.current && outsideScoller.current(event);\n\n      const isStart = type === TYPE_START;\n      event.stopImmediatePropagation();\n      const touchPoint = event.touches[0];\n      const { clientX, clientY } = touchPoint;\n      const x = clientX;\n      const orginalY = isStart\n        ? clientY + HANDLE_TOUCH_SIZE\n        : clientY - HANDLE_TOUCH_SIZE;\n      const y = optimizeVerticalPosition(isStart, orginalY);\n\n      const range = caretRangeFromPoint(x, y, controller);\n      const { document: doc, selection } = controller.value;\n      if (!range) {\n        return;\n      }\n\n      let { focus: targetPoint } = range;\n      const voidParent = document.getClosestVoid(targetPoint.key, controller);\n      if (voidParent) {\n        // Handle Drag will skip the point inside void elements\n        try {\n          // eslint-disable-next-line react/no-find-dom-node\n          const voidNode = findDOMNode(voidParent.key);\n          const voidRect = voidNode.getBoundingClientRect();\n          const voidCenterX = voidRect.x + voidRect.width / 2;\n          const distance = clientX > voidCenterX ? 1 : -1;\n          targetPoint = controller.query(pointAtDistance, targetPoint, distance);\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      const newSelection = selection.set('anchor', targetPoint);\n\n      if (\n        newSelection.isCollapsed ||\n        newSelection.isBackward(doc) !== selection.isBackward(doc) ||\n        equal(newSelection, selection)\n      ) {\n        return;\n      }\n      controller.run(\n        'onCangjieSelect',\n        CangjieSelectEvent({\n          selection: newSelection,\n          trigger: 'dragging',\n        }),\n      );\n    },\n    [controller],\n  );\n  const [dragging, setDragging] = React.useState<DraggingType>(null);\n  const onDragStart = React.useCallback((type: DraggingType) => {\n    /**\n     * Some android devices scroll to the HiddenTextArea after drag, it\n     * use 'anchor' point for positioning. So we make sure the user always\n     * drag the 'anchor' point here.\n     */\n    const isBackward = selection.isBackward(document);\n    // if we're dragging the 'focus' point, flip the selection\n    if ((type === TYPE_START && isBackward) || (type === TYPE_END && !isBackward)) {\n      const newSelection = selection.merge({\n        anchor: selection.focus,\n        focus: selection.anchor,\n      });\n      controller.run(\n        'onCangjieSelect',\n        CangjieSelectEvent({\n          selection: newSelection,\n          trigger: 'dragging',\n        }),\n      );\n    }\n    setDragging(type);\n    if (scrollableContainer) {\n      outsideScoller.current = startScroll({\n        scroller: scrollableContainer as HTMLElement,\n        controller,\n      });\n    }\n  }, [controller, document, selection]);\n  const onDragEnd = React.useCallback(() => {\n    setDragging(null);\n    if (outsideScoller.current) {\n      outsideScoller.current.cancel();\n      outsideScoller.current = null;\n    }\n    stopScroll(controller);\n  }, []);\n\n  React.useEffect(() => {\n    return () => {\n      if (outsideScoller.current) {\n        outsideScoller.current.cancel();\n        outsideScoller.current = null;\n      }\n    };\n  }, [controller]);\n\n  const dragProps = { onDragStart, onDragEnd };\n\n  let draggingPoint: TextPoint | EdgePoint | null = null;\n  if (dragging === TYPE_START) {\n    draggingPoint = start;\n  } else if (dragging === TYPE_END) {\n    draggingPoint = end;\n  }\n\n  return (\n    <React.Fragment>\n      <Handle\n        {...dragProps}\n        type={TYPE_START}\n        isHidden={enableZoomer && dragging === TYPE_END}\n        onDrag={handleDrag}\n        ref={startRef}\n        style={handleRectTopStyle}\n      />\n      <Handle\n        {...dragProps}\n        type={TYPE_END}\n        isHidden={enableZoomer && dragging === TYPE_START}\n        onDrag={handleDrag}\n        ref={endRef}\n        style={handleRectStyle}\n      />\n      {enableZoomer && draggingPoint && (\n        <Zoomer isHanging={dragging === TYPE_START} point={draggingPoint} />\n      )}\n      {!dragging && (\n        <ContextMenu selection={selection} controller={controller} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default (props: HandlesProps) => {\n  const { selection: propsSelection, controller } = props;\n  const [selection, setSelection] = React.useState(propsSelection);\n\n  React.useMemo(() => {\n    setSelection(propsSelection);\n  }, [propsSelection]);\n\n  useSelectionData(controller.selectionData$, null, ({ range }) => {\n    setSelection(range);\n  }, []);\n  if (selection.isCollapsed) {\n    return null;\n  }\n  return ReactDOM.createPortal(<Handles {...props} selection={selection} />, document.body);\n};\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport Controller from '../controller/index';\nimport ContextMenu from '../components/mobile/contextMenu';\nimport Handles from '../components/mobile/handles';\nimport Selection from '../models/selection';\nimport caretRangeFromTargetAndCoord from '../utils/dom/caretRangeFromTargetAndCoord';\nimport { IS_TOUCH_DEVICE, IS_MOBILE } from '../utils/environment';\nimport { ControllerConfigs } from '../interfaces/controller';\n\nexport const ACTION_CLEAR_MOBILE_MENU = Symbol('ACTION_CLEAR_MOBILE_MENU');\n\n\nfunction getDraggingSelection(controller: Controller) {\n  // eslint-disable-next-line no-underscore-dangle\n  return controller.value.data._mobileDraggingSelection;\n}\n\nfunction hidePopup(controller) {\n  showPopup(controller, undefined);\n}\n\nfunction showPopup(controller: Controller, selection?: Selection) {\n  const { data } = controller.value;\n  const prevRange = getPopupSelection(controller);\n  const focusedSelection =\n    prevRange && selection && Selection.isEqual(prevRange, selection)\n      ? undefined\n      : selection;\n  controller.setData({\n    ...data,\n    _mobileFocusedSelection: focusedSelection,\n  });\n}\n\nfunction getPopupSelection(controller: Controller) {\n  // eslint-disable-next-line no-underscore-dangle\n  return controller.value.data._mobileFocusedSelection;\n}\n\n/**\n * 兼容 鼠标 + 触屏 场景\n *\n * 背景：\n * touch 事件会触发 onTouchStart 和 onMouseDown\n * mouse 事件会触发 onMouseDown\n *\n * 方案：\n * touch 事件，touchCount 值重置为 2\n * mouse 事件，touchCount 值减 1\n *\n * 结果：\n * 用户使用了 mouse：touchCount <= 0\n * 用户使用了 touch：touchCount === 1\n */\nlet touchCount = 0;\n\nexport default function createMobilePlugin(configs?: ControllerConfigs) {\n  const { enableZoomer = false } = configs?.plugins?.mobile || {};\n  function onTouchStart(event: React.TouchEvent, controller: Controller, next) {\n    const { selection, isFocused } = controller.value;\n    const { isCollapsed } = selection;\n    if (isFocused && isCollapsed) {\n      const { target, clientX, clientY } = event.touches[0];\n      const range = caretRangeFromTargetAndCoord(\n        target,\n        clientX,\n        clientY,\n        controller,\n      );\n      if (range && Selection.isEqual(selection, range)) {\n        showPopup(controller, selection);\n      } else if (range && getPopupSelection(controller)) {\n        hidePopup(controller);\n      }\n    }\n    touchCount = 2;\n    return next();\n  }\n\n  function onMouseDown(event: React.MouseEvent, controller: Controller, next) {\n    touchCount = touchCount > 0 ? touchCount - 1 : 0;\n    return next();\n  }\n\n  function renderContent(_, controller: Controller, next) {\n    const { value, readOnly } = controller;\n    const { selection, isFocused } = value;\n    const { contextData } = value.data;\n    const focusedSelection = getPopupSelection(controller);\n    const shouldRenderH5Controls = Boolean(\n      isFocused || controller.query('shouldRenderH5Controls'),\n    );\n    // 鼠标 + 触屏 场景，如果是鼠标触发的，就不显示菜单\n    const isDisabled = !IS_MOBILE && IS_TOUCH_DEVICE && touchCount === 0;\n\n    const isInFocusedSelection =\n      focusedSelection && Selection.isEqual(focusedSelection, selection);\n    // 当处于 focusedSelection 或者 插件允许的区域，可以渲染 contextMenu\n    const isInRenableSelection =\n      isInFocusedSelection || controller.query('shouldRenderContextMenu');\n\n    const shouldRenderContextMenu = Boolean(\n      shouldRenderH5Controls &&\n        !contextData &&\n        !isDisabled &&\n        isInRenableSelection,\n    );\n\n    const shouldRenderHandles =\n      shouldRenderH5Controls && !contextData && !isDisabled && !controller.query('isHideSelection');\n    return (\n      <React.Fragment>\n        {next()}\n        {selection.isCollapsed && shouldRenderContextMenu && (\n          <ContextMenu selection={selection} controller={controller} hidePopup={hidePopup} />\n        )}\n        {shouldRenderHandles && (\n          <Handles\n            enableZoomer={enableZoomer}\n            selection={selection}\n            controller={controller}\n          />\n        )}\n        {/* {shouldRenderHoldAndMove && (\n          <HoldAndMove\n            setDraggingSelection={setDraggingSelection}\n            setFocusedSelection={setFocusedSelection}\n            getDraggingSelection={getDraggingSelection}\n          />\n        )} */}\n      </React.Fragment>\n    );\n  }\n\n  function renderCaret(props, controller: Controller, next) {\n    const caret = next();\n    if (!caret) {\n      return null;\n    }\n    const isDragging = getDraggingSelection(controller);\n    const mode = isDragging ? 'placeholder' : 'caret';\n    return React.cloneElement(caret, { mode });\n  }\n\n  function onAction(action, controller: Controller, next) {\n    if (action.type === ACTION_CLEAR_MOBILE_MENU) {\n      const { data } = controller.value;\n      // eslint-disable-next-line no-underscore-dangle\n      if (data._mobileFocusedSelection) {\n        controller.setData({\n          ...data,\n          _mobileFocusedSelection: undefined,\n        });\n      }\n    }\n    return next();\n  }\n\n  return {\n    onAction,\n    onTouchStart,\n    onMouseDown,\n    renderContent,\n    renderCaret,\n    models: [],\n  };\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport Query from '../interfaces/query';\nimport QueryEvent from '../interfaces/queryEvent';\n\nexport default function createQueriesPlugin(\n  qrys: Record<string, Query> = {},\n) {\n  // PERF: drop prototype\n  const queries = Object.assign(Object.create(null), qrys);\n  function onQuery(qry: QueryEvent, controller: Controller, next) {\n    const { type, args } = qry;\n    const query = queries[type];\n    if (!query) {\n      return next();\n    }\n    const ret = query(controller, ...args);\n    return ret === undefined ? next() : ret;\n  }\n\n  return {\n    models: [],\n    onQuery,\n  };\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\n import RenderNode from '../interfaces/renderNode';\n\n export default function createRenderNodePlugin(\n   renders: Record<string, RenderNode[]> = {},\n ) {\n  // PERF: drop prototype\n  const renderNodes: Record<string, RenderNode[]> = Object.assign(Object.create(null), renders);\n\n  // @ts-ignore\n  const renderNode: RenderNode = (props, controller, n) => {\n    // @ts-ignore\n    const renders = renderNodes[props.node?.type];\n    if (!renders) {\n      return n();\n    }\n\n    let prevArgs = [props, controller, n];\n    let i = 0;\n\n    function next(...as) {\n      const currentArgs =\n        as.length === 0 ? prevArgs : [...as, ...prevArgs.slice(as.length)];\n      prevArgs = currentArgs;\n\n      const fn = renders[i];\n      if (!fn) {\n        return null;\n      }\n      i += 1;\n      return fn(currentArgs[0], controller, next);\n    }\n\n    return next();\n  }\n\n  return {\n    models: [],\n    renderNode,\n  };\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport Command from '../interfaces/command';\nimport CommandEvent from '../interfaces/commandEvent';\n\nexport default function createCommandsPlugin(\n  cmds: Record<string, Command> = {},\n) {\n  // PERF: drop prototype\n  const commands = Object.assign(Object.create(null), cmds);\n  function onCommand(cmd: CommandEvent, controller: Controller, next) {\n    const { type, args } = cmd;\n    const command = commands[type];\n    if (!command) {\n      return next();\n    }\n    return command(controller, ...args);\n  }\n\n  return {\n    models: [],\n    onCommand,\n  };\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-restricted-syntax */\n/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport * as Commands from '../commands/index';\nimport Node from '../models/node';\nimport Element from '../models/element';\nimport Document from '../models/document';\nimport Block from '../models/block';\nimport Inline from '../models/inline';\nimport Text from '../models/text';\nimport Mark from '../models/mark';\n\nexport interface Rule {\n  match?: Rule | Rule[];\n  klass?: string | ((type: string) => boolean);\n  type?: string | ((type: string) => boolean);\n  first?: Rule | Rule[];\n  last?: Rule[];\n  nodes?: Rule[];\n  min?: number;\n  max?: number;\n  parent?: Rule[];\n  previous?: Rule[];\n  next?: Rule[];\n  normalize?: (controller: Controller, error) => void;\n}\n\nconst klassToIsType = {\n  document: Document.isDocument,\n  block: Block.isBlock,\n  inline: Inline.isInline,\n  text: Text.isText,\n  mark: Mark.isMark,\n};\nfunction validateKlass(node: Node | Mark, rule: Rule) {\n  if (!rule.klass) {\n    return null;\n  }\n  // FIXME: remove `.toJSON()`\n  if (typeof rule.klass === 'function' && rule.klass(node.toJSON().klass)) {\n    return null;\n  }\n  const isType = klassToIsType[rule.klass as string];\n  if (isType && isType(node)) {\n    return null;\n  }\n  return { code: 'node_klass_invalid', rule, node };\n}\n\nfunction validateType(node: Block | Inline, rule: Rule) {\n  if (!rule.type) {\n    return null;\n  }\n  if (rule.type === node.type) {\n    return null;\n  }\n  if (typeof rule.type === 'function' && rule.type(node.type)) {\n    return null;\n  }\n  return { code: 'node_type_invalid', rule, node };\n}\n\nfunction validateFirst(node: Element, rule: Rule) {\n  if (!rule.first) {\n    return null;\n  }\n  const first = node.nodes[0];\n  if (!first) {\n    return null;\n  }\n  const error = validateRules(first, rule.first);\n  if (!error) {\n    return null;\n  }\n  return Object.assign({}, error, {\n    rule,\n    node,\n    child: first,\n    code: error.code.replace('node_', 'first_child_'),\n  });\n}\n\nfunction validateLast(node: Element, rule: Rule) {\n  if (!rule.last) {\n    return null;\n  }\n  const last = node.nodes[node.nodes.length - 1];\n  if (!last) {\n    return null;\n  }\n  const error = validateRules(last, rule.last);\n  if (!error) {\n    return null;\n  }\n  // PERF\n  return Object.assign({}, error, {\n    rule,\n    node,\n    child: last,\n    code: error.code.replace('node_', 'last_child_'),\n  });\n}\n\nfunction validateParent(node: Element, child: Node, rules: Rule[]) {\n  // PERF: For loop is faster than for of.\n  const { length } = rules;\n  for (let i = 0; i < length; i++) {\n    const rule = rules[i];\n    if (!rule.parent) {\n      continue;\n    }\n    if (rule.match && !testRules(child, rule.match)) {\n      continue;\n    }\n    const error = validateRules(node, rule.parent);\n    if (!error) {\n      continue;\n    }\n    // PERF\n    return Object.assign({}, error, {\n      rule,\n      parent: node,\n      node: child,\n      code: error.code.replace('node_', 'parent_'),\n    });\n  }\n  return null;\n}\n\nfunction validatePrevious(\n  node: Element,\n  child: Node,\n  previous: Node | null,\n  index: number,\n  rules: Rule[],\n) {\n  if (!previous) {\n    return null;\n  }\n  // PERF: For loop is faster than for of.\n  const { length } = rules;\n  for (let i = 0; i < length; i++) {\n    const rule = rules[i];\n    if (!rule.previous) {\n      continue;\n    }\n    if (rule.match && !testRules(child, rule.match)) {\n      continue;\n    }\n    const error = validateRules(previous, rule.previous);\n    if (!error) {\n      continue;\n    }\n    // PERF\n    return Object.assign({}, error, {\n      rule,\n      node,\n      child,\n      index,\n      previous,\n      code: error.code.replace('node_', 'previous_sibling_'),\n    });\n  }\n  return null;\n}\n\nfunction validateNext(\n  node: Element,\n  child: Node,\n  next: Node | null,\n  index: number,\n  rules: Rule[],\n) {\n  if (!next) {\n    return null;\n  }\n  // PERF: For loop is faster than for of.\n  const { length } = rules;\n  for (let i = 0; i < length; i++) {\n    const rule = rules[i];\n    if (!rule.next) {\n      continue;\n    }\n    if (rule.match && !testRules(child, rule.match)) {\n      continue;\n    }\n    const error = validateRules(next, rule.next);\n    if (!error) {\n      continue;\n    }\n    // PERF\n    return Object.assign({}, error, {\n      rule,\n      node,\n      child,\n      index,\n      next,\n      code: error.code.replace('node_', 'next_sibling_'),\n    });\n  }\n  return null;\n}\n\nfunction validateNodes(node: Element, rule: Rule, rules: Rule[] = []) {\n  if (!node.nodes) {\n    return null;\n  }\n\n  const children = node.nodes;\n  const defs = rule.nodes ? [...rule.nodes] : [];\n\n  let count = 0;\n  let lastCount = 0;\n  let min: number | null = null;\n  let index = -1;\n  let def: Rule | null = null;\n  let max: number | null = null;\n  let child: Node | null = null;\n  let previous: Node | null = null;\n  let next: Node | null = null;\n\n  function nextDef() {\n    if (defs.length === 0) {\n      return false;\n    }\n    def = defs.shift() as Rule;\n    lastCount = count;\n    count = 0;\n    min = def.min || null;\n    max = def.max || null;\n    return true;\n  }\n\n  function nextChild() {\n    index += 1;\n    previous = child;\n    child = children[index] || null;\n    next = children[index + 1] || null;\n    if (!child) {\n      return false;\n    }\n    lastCount = count;\n    count += 1;\n    return true;\n  }\n\n  function rewind() {\n    if (index > 0) {\n      index -= 1;\n      count = lastCount;\n    }\n  }\n\n  if (rule.nodes) {\n    nextDef();\n  }\n\n  while (nextChild()) {\n    const error =\n      validateParent(node, child!, rules) ||\n      validatePrevious(node, child!, previous, index, rules) ||\n      validateNext(node, child!, next, index, rules);\n    if (error) {\n      return error;\n    }\n    if (rule.nodes) {\n      if (!def) {\n        return { code: 'child_unknown', rule, node, child, index };\n      }\n      if ((def as Rule).match) {\n        // @ts-ignore\n        const err = validateRules(child!, def.match);\n        if (err) {\n          // Since we want to report overflow on last matching child we don't\n          // immediately check for count > max, but instead do so once we find\n          // a child that doesn't match.\n          if (max !== null && count - 1 > max) {\n            rewind();\n            return {\n              code: 'child_max_invalid',\n              rule,\n              node,\n              index,\n              child: children[index],\n              count,\n              limit: max,\n            };\n          }\n\n          const lastMin = min;\n          // If there are more groups after this one then child might actually\n          // be valid.\n          if (nextDef()) {\n            // If we've already satisfied the minimum for the current group,\n            // then we can rewind and proceed to the next group.\n            if (lastMin === null || lastCount - 1 >= lastMin) {\n              index -= 1;\n              continue;\n            }\n\n            // Otherwise we know that current value is underflowing. There are\n            // three possible causes for this...\n\n            // 1. There might just not be enough elements for current group, and\n            // current child is in fact the first of the next group. If so, the\n            // next def will not report errors, in which case we can rewind and\n            // report an minimum error.\n            // @ts-ignore\n            if (validateRules(child!, def.match) === null) {\n              rewind();\n              return {\n                code: 'child_min_invalid',\n                rule,\n                node,\n                index,\n                count: lastCount - 1,\n                limit: lastMin,\n              };\n            }\n\n            // 2. The current group is underflowing, but there is also an\n            // invalid child before the next group.\n            // 3. Or the current group is not underflowing but it appears so\n            // because there's an invalid child between its members.\n            // It's either the second or third case. If it's the second then\n            // we could report an underflow, but presence of an invalid child\n            // is arguably more important, so we report it first. It also lets\n            // us avoid checking for which case exactly is it.\n            // PERF\n            return Object.assign({}, err, {\n              rule,\n              node,\n              child,\n              index,\n              code: err.code.replace('node_', 'child_'),\n            });\n          }\n\n          // Otherwise either we exhausted the last group, in which case it's\n          // an unknown child, ...\n          if (max != null && count > max) {\n            return {\n              code: 'child_unknown',\n              rule,\n              node,\n              child,\n              index,\n            };\n          }\n          return Object.assign({}, err, {\n            rule,\n            node,\n            child,\n            index,\n            code: err.code.replace('node_', 'child_'),\n          });\n        }\n      }\n    }\n  }\n\n  // Since we want to report overflow on last matching child we don't\n  // immediately check for count > max, but do so after processing all nodes.\n  if (max !== null && count > max) {\n    return {\n      code: 'child_max_invalid',\n      rule,\n      node,\n      index: index - 1,\n      count,\n      child: children[index - 1],\n      limit: max,\n    };\n  }\n  if (rule.nodes) {\n    do {\n      if (min !== null && count < min) {\n        return {\n          code: 'child_min_invalid',\n          rule,\n          node,\n          index,\n          count,\n          limit: min,\n        };\n      }\n    } while (nextDef());\n  }\n  return null;\n}\n\nfunction validateRules(\n  object: Node | Mark,\n  rule: Rule | Rule[],\n  rules?: Rule[],\n  options: { every?: boolean } = {},\n) {\n  const { every = false } = options;\n  if (Array.isArray(rule)) {\n    const array = rule.length ? rule : [{}];\n\n    let first = null;\n    // PERF: For loop is faster than for of.\n    const { length } = array;\n    for (let i = 0; i < length; i++) {\n      const r = array[i];\n      const error = validateRules(object, r, rules);\n      first = first || error;\n      if (every && error) {\n        return error;\n      }\n      if (!every && !error) {\n        return null;\n      }\n    }\n    return first;\n  }\n\n  return (\n    validateKlass(object, rule) ||\n    // @ts-ignore\n    validateType(object, rule) ||\n    // @ts-ignore\n    validateFirst(object, rule) ||\n    // @ts-ignore\n    validateLast(object, rule) ||\n    // @ts-ignore\n    validateNodes(object, rule, rules)\n  );\n}\n\nfunction testRules(object: Node | Mark, rules: Rule | Rule[]) {\n  return !validateRules(object, rules);\n}\n\nfunction defaultNormalize(controller: Controller, error) {\n  const { code, node, child, next, previous } = error;\n\n  switch (code) {\n    case 'child_max_invalid':\n    case 'child_klass_invalid':\n    case 'child_type_invalid':\n    case 'child_unknown':\n    case 'first_child_klass_invalid':\n    case 'first_child_type_invalid':\n    case 'last_child_klass_invalid':\n    case 'last_child_type_invalid': {\n      return Text.isText(child) &&\n        Block.isBlock(node) &&\n        node.nodes.length === 1\n        ? controller.command(Commands.removeNodeByKey, node.key)\n        : controller.command(Commands.removeNodeByKey, child.key);\n    }\n\n    case 'previous_sibling_klass_invalid':\n    case 'previous_sibling_type_invalid': {\n      return Text.isText(previous) &&\n        Block.isBlock(node) &&\n        node.nodes.length === 1\n        ? controller.command(Commands.removeNodeByKey, node.key)\n        : controller.command(Commands.removeNodeByKey, previous.key);\n    }\n\n    case 'next_sibling_klass_invalid':\n    case 'next_sibling_type_invalid': {\n      return Text.isText(next) && Block.isBlock(node) && node.nodes.length === 1\n        ? controller.command(Commands.removeNodeByKey, node.key)\n        : controller.command(Commands.removeNodeByKey, next.key);\n    }\n\n    case 'child_min_invalid':\n    case 'parent_klass_invalid':\n    case 'parent_type_invalid': {\n      return Document.isDocument(node)\n        ? node.nodes.forEach((n) => controller.command(Commands.removeNodeByKey, n.key))\n        : controller.command(Commands.removeNodeByKey, node.key);\n    }\n\n    default: {\n      return controller.command(Commands.removeNodeByKey, node.key);\n    }\n  }\n}\n\ninterface ElementRule extends Omit<Rule, 'match'> {\n  isVoid?: boolean | ((controller: Controller, node: Node) => boolean);\n  isEdgeSelectable?: boolean;\n  /**\n   * Inline 内边缘是否可选中\n   */\n  isSideSelectable?: boolean;\n}\n\nfunction isOnlyContainsVoidAndEdgeSelectable(rule: ElementRule) {\n  return !Object.keys(rule)\n    .filter(key => key !== 'isVoid' && key !== 'isEdgeSelectable')\n    .length;\n}\n\ninterface MarkRule extends Omit<Rule, 'match'> {\n  isAtomic?: boolean;\n}\n\nfunction isOnlyContainsAtomic(rule: MarkRule) {\n  return !Object.keys(rule)\n    .filter(key => key !== 'isAtomic')\n    .length;\n}\n\nexport interface Schema {\n  rules?: Rule[];\n  document?: Omit<Rule, 'match'>;\n  blocks?: Record<string, ElementRule>;\n  inlines?: Record<string, ElementRule>;\n  marks?: Record<string, MarkRule>;\n}\n\nexport default function createNormalizationPlugin(schema: Schema) {\n  const {\n    rules = [],\n    document,\n    blocks = {},\n    inlines = {},\n    marks = {},\n  } = schema;\n\n  const schemaRules = [...rules];\n  if (document) {\n    schemaRules.push({\n      match: [{ klass: 'document' }],\n      ...document,\n    });\n  }\n  Object.keys(blocks)\n    .filter((type) => !isOnlyContainsVoidAndEdgeSelectable(blocks[type]))\n    .forEach((type) => {\n      schemaRules.push({\n        match: [{ klass: 'block', type }],\n        ...blocks[type],\n      });\n    });\n  Object.keys(inlines)\n    .filter((type) => !isOnlyContainsVoidAndEdgeSelectable(inlines[type]))\n    .forEach((type) => {\n      schemaRules.push({\n        match: [{ klass: 'inline', type }],\n        ...inlines[type],\n      });\n    });\n  Object.keys(marks)\n    .filter((type) => isOnlyContainsAtomic(marks[type]))\n    .forEach((type) => {\n      schemaRules.push({\n        match: [{ klass: 'mark', type }],\n        ...marks[type],\n      });\n    });\n\n  // Check if a `mark` is atomic\n  const isAtomicDict: Record<string, boolean> = Object.create(null);\n  Object.keys(marks).forEach(type => {\n    if ('isAtomic' in marks[type]) {\n      isAtomicDict[type] = marks[type].isAtomic!;\n    }\n  });\n  function isAtomic(_, mark): boolean | undefined {\n    return isAtomicDict[mark.type];\n  }\n\n  const isVoidDict = {\n    block: Object.create(null),\n    inline: Object.create(null),\n  };\n  const isEdgeSelectableDict = {\n    block: Object.create(null),\n    inline: Object.create(null),\n  };\n  const isSideSelectableDict = Object.create(null);\n  Object.keys(blocks).forEach(type => {\n    if ('isVoid' in blocks[type]) {\n      isVoidDict.block[type] = blocks[type].isVoid;\n    }\n    if ('isEdgeSelectable' in blocks[type]) {\n      isEdgeSelectableDict.block[type] = blocks[type].isEdgeSelectable;\n    }\n  });\n  Object.keys(inlines).forEach(type => {\n    if ('isVoid' in inlines[type]) {\n      isVoidDict.inline[type] = inlines[type].isVoid;\n    }\n    if ('isEdgeSelectable' in inlines[type]) {\n      isEdgeSelectableDict.inline[type] = inlines[type].isEdgeSelectable;\n    }\n    if ('isSideSelectable' in inlines[type]) {\n      isSideSelectableDict[type] = inlines[type].isSideSelectable;\n    }\n  });\n  // Check if a `node` is void.\n  function isVoid(controller: Controller, node: Node): boolean | undefined {\n    let klass = '';\n    if (Block.isBlock(node)) {\n      klass = 'block';\n    }\n    if (Inline.isInline(node)) {\n      klass = 'inline';\n    }\n    if (!klass) {\n      return undefined;\n    }\n    const predict = isVoidDict[klass][(node as Element).type];\n    return typeof predict === 'function'\n      ? predict(controller, node)\n      : predict;\n  }\n\n  // Check if the side of `node` is selectable\n  function isSideSelectable(controller: Controller, node: Node): boolean | undefined {\n    if (Inline.isInline(node)) {\n      return isSideSelectableDict[node.type];\n    }\n    return undefined;\n  }\n\n  // Check if a `node` is selectable.\n  function isEdgeSelectable(_, node: Node): boolean | undefined {\n    let klass = '';\n    if (Block.isBlock(node)) {\n      klass = 'block';\n    }\n    if (Inline.isInline(node)) {\n      klass = 'inline';\n    }\n    if (!klass) {\n      return undefined;\n    }\n    return isEdgeSelectableDict[klass][(node as Element).type];\n  }\n\n  function validateNode(node: Node, controller: Controller, next) {\n    const matches = schemaRules.filter(\n      (r) => r.match && testRules(node, r.match),\n    );\n    const error = validateRules(node, matches, schemaRules, { every: true });\n    if (!error) {\n      return next();\n    }\n    return error;\n  }\n\n  function normalizeNode(node: Node, controller: Controller, next) {\n    const error = validateNode(node, controller, () => null);\n    if (!error) {\n      return next();\n    }\n    return () => {\n      const { rule } = error;\n      const { document: $document } = controller.value;\n      if (rule.normalize) {\n        rule.normalize(controller, error);\n      }\n      if (controller.value.document === $document) {\n        defaultNormalize(controller, error);\n      }\n    };\n  }\n\n  return {\n    models: [],\n    queries: { isAtomic, isVoid, isEdgeSelectable, isSideSelectable },\n    validateNode,\n    normalizeNode,\n  };\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport * as Commands from '../commands/index';\nimport Node from '../models/node';\nimport Document from '../models/document';\nimport Block from '../models/block';\nimport Inline from '../models/inline';\nimport Text from '../models/text';\n\nfunction isInlineOrText(node: Node) {\n  return Inline.isInline(node) || Text.isText(node);\n}\n\nfunction normalizeNode(node: Node, controller: Controller, next) {\n  if (Document.isDocument(node)) {\n    // Only allow block nodes in documents.\n    const length = node.nodes.length;\n    for (let i = 0; i < length; i += 1) {\n      const child = node.nodes[i];\n      if (!Block.isBlock(child)) {\n        return () => controller.command(Commands.removeNodeByKey, (child as Node)!.key);\n      }\n    }\n  } else if (Block.isBlock(node) || Inline.isInline(node)) {\n    const length = node.nodes.length;\n    // Ensure that block and inline nodes have at least one text child.\n    if (length < 1) {\n      return () => controller.command(Commands.insertNodeByKey, node.key, 0, Text.create());\n    }\n\n    // 1. Only allow block nodes or inline and text nodes in blocks.\n    // 2. Only allow inline and text nodes in inlines.\n    const predicate = Block.isBlock(node) && Block.isBlock(node.nodes[0])\n      ? Block.isBlock\n      : isInlineOrText;\n    for (let i = 0; i < length; i += 1) {\n      const child = node.nodes[i];\n      if (!predicate(child)) {\n        return () => controller.command(Commands.removeNodeByKey, child.key);\n      }\n\n      // Ensure that inline nodes are surrounded by text nodes.\n      if (i === 0 && Inline.isInline(child)) {\n        return () => controller.command(Commands.insertNodeByKey, node.key, 0, Text.create());\n      }\n      const next = node.nodes[i + 1];\n      if (Inline.isInline(child)) {\n        if (!Text.isText(next)) {\n          return () => controller.command(Commands.insertNodeByKey, node.key, i + 1, Text.create());\n        }\n      } else if (Text.isText(child)) {\n        // Merge adjacent text nodes.\n        if (Text.isText(next)) {\n          return () => controller.command(Commands.mergeNodeByKey, next.key);\n        }\n      }\n    }\n  }\n  return next();\n}\n\nexport default function createCoreSchemaPlugin() {\n  return {\n    normalizeNode,\n  };\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\n\nimport { MAX_HISTORY_SIZE } from '../constants';\nimport ImmutableRecord from './immutableRecord';\nimport Operation, { OperationType } from './operation';\nimport Path from './path';\n\nconst BATCH_UNDO_MERGE_TIME = 1000;\n\nfunction shouldClear(op: Operation) {\n  return op.type !== OperationType.SetSelection;\n}\n\nfunction shouldMerge(op: Operation, prevOp: Operation) {\n  if (!prevOp) return false;\n\n  return (\n    (op.type === OperationType.InsertText &&\n      prevOp.type === OperationType.InsertText &&\n      op.offset === prevOp.offset + prevOp.text.length &&\n      Path.isEqual(op.path, prevOp.path)) ||\n    (op.type === OperationType.RemoveText &&\n      prevOp.type === OperationType.RemoveText &&\n      op.offset + op.text.length === prevOp.offset &&\n      Path.isEqual(op.path, prevOp.path))\n  );\n}\n\nfunction shouldOverwrite(op: Operation, prevOp: Operation | undefined) {\n  return prevOp && op.type === OperationType.SetSelection && prevOp.type === OperationType.SetSelection;\n}\n\nexport interface HistoryProperties {\n  redos: Operation[][];\n  undos: Operation[][];\n}\n\nexport default class History extends ImmutableRecord {\n  static create(params?: { maxHistorySize?: number }) {\n    return new History(params);\n  }\n\n  private constructor(props: Partial<HistoryProperties & {\n    lastUndoCreatedTime: number;\n    maxHistorySize?: number;\n  }> = {}) {\n    super();\n    const {\n      redos = [],\n      undos = [],\n      lastUndoCreatedTime = 0,\n      maxHistorySize = MAX_HISTORY_SIZE,\n    } = props;\n    this.redos = redos;\n    this.undos = undos.slice(-maxHistorySize);\n    this.lastUndoCreatedTime = lastUndoCreatedTime;\n    this.maxHistorySize = maxHistorySize;\n    this.freeze();\n  }\n\n  public readonly redos: Operation[][];\n\n  public readonly undos: Operation[][];\n\n  private readonly lastUndoCreatedTime: number = 0;\n\n  private readonly maxHistorySize: number;\n\n  public merge(props: Partial<HistoryProperties>) {\n    return new History({\n      redos: this.redos,\n      undos: this.undos,\n      maxHistorySize: this.maxHistorySize,\n      ...props,\n      lastUndoCreatedTime: this.lastUndoCreatedTime,\n    });\n  }\n\n  public set<T extends keyof HistoryProperties>(\n    key: T,\n    value: Required<HistoryProperties>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public moveLastRedoRecordToUndos() {\n    const { redos } = this;\n    if (!redos.length) {\n      return this;\n    }\n    const newRedos = redos.slice(0, -1);\n    const lastRedoRecord = redos[redos.length - 1];\n    const newUndos = [...this.undos, lastRedoRecord];\n    return this.merge({\n      undos: newUndos,\n      redos: newRedos,\n    });\n  }\n\n  public moveLastUndoRecordToRedos(undoRecord?: Operation[]) {\n    const { undos } = this;\n    if (!undos.length) {\n      return this;\n    }\n\n    const newUndos = undos.slice(0, -1);\n    const lastUndoRecord = undoRecord || undos[undos.length - 1];\n    const newRedos = [...this.redos, lastUndoRecord];\n    return this.merge({\n      undos: newUndos,\n      redos: newRedos,\n    });\n  }\n\n  public mergeToLastUndoIfNeed(operation: Operation, forceMerge: boolean) {\n    let undos = [...this.undos];\n    let lastBatch = undos[undos.length - 1];\n    const lastOp = lastBatch && lastBatch[lastBatch.length - 1];\n    const overwrite = shouldOverwrite(operation, lastOp);\n    const merge = !!lastBatch\n      && (this.lastUndoCreatedTime === 0 || Date.now() - this.lastUndoCreatedTime <= BATCH_UNDO_MERGE_TIME)\n      && (shouldMerge(operation, lastOp) || overwrite);\n\n    if (lastBatch && (merge || forceMerge)) {\n      if (overwrite) {\n        lastBatch = lastBatch.slice(0, -1);\n      }\n      lastBatch = [...lastBatch, operation];\n      undos = [...undos.slice(0, -1), lastBatch];\n    } else {\n      const batch = [operation];\n      undos = [...undos, batch];\n    }\n\n    return this.merge({\n      undos,\n      redos: shouldClear(operation) ? [] : this.redos,\n    });\n  }\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport { isKeyHotkey } from 'is-hotkey';\nimport { IS_MAC } from './environment';\nimport React from 'react';\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: [\n    'left',\n    'right',\n    'down',\n    'up',\n    'space',\n    'shift?+backspace',\n    'shift?+enter',\n    'shift?+delete',\n    'shift?+tab',\n  ],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveUpward: 'up',\n  moveDownward: 'down',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  extendUpward: 'shift+up',\n  extendDownward: 'shift+down',\n  italic: 'mod+i',\n  splitBlock: 'shift?+enter',\n  undo: 'mod+z',\n  space: 'space',\n  enter: 'enter',\n  tab: 'tab',\n  copy: 'mod+c',\n  cut: 'mod+x',\n  paste: 'mod+v',\n};\n\n// https://support.apple.com/en-us/HT201236\nconst APPLE_HOTKEYS = {\n  selectAll: 'cmd+a',\n  moveBackward: 'ctrl+b',\n  moveForward: 'ctrl+f',\n  moveUpward: 'ctrl+p',\n  moveDownward: 'ctrl+n',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  moveLineBackward: ['cmd+left', 'home'],\n  moveLineForward: ['cmd+right', 'end'],\n  moveBlockBackward: ['opt+up', 'ctrl+a'],\n  moveBlockForward: ['opt+down', 'ctrl+e'],\n  moveToDocumentStart: 'cmd+up',\n  moveToDocumentEnd: 'cmd+down',\n  deleteBackward: ['ctrl+backspace'],\n  deleteForward: ['ctrl+delete', 'ctrl+d', 'fn+delete'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendWordBackward: 'opt+shift+left',\n  extendWordForward: 'opt+shift+right',\n  extendLineBackward: 'cmd+shift+left',\n  extendLineForward: 'cmd+shift+right',\n  extendBlockBackward: ['opt+shift+up', 'ctrl+shift+a'],\n  extendBlockForward: ['opt+shift+down', 'ctrl+shift+e'],\n  extendToDocumentStart: ['cmd+shift+up', 'fn+left'],\n  extendToDocumentEnd: ['cmd+shift+down', 'fn+right'],\n  splitBlock: 'ctrl+o',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n};\n\n// https://support.microsoft.com/en-us/help/12445/windows-keyboard-shortcuts\nconst WINDOWS_HOTKEYS = {\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  moveLineBackward: 'home',\n  moveLineForward: 'end',\n  moveBlockBackward: 'ctrl+up',\n  moveBlockForward: 'ctrl+down',\n  moveToDocumentStart: 'ctrl+home',\n  moveToDocumentEnd: 'ctrl+end',\n  extendWordBackward: 'ctrl+shift+left',\n  extendWordForward: 'ctrl+shift+right',\n  extendLineBackward: 'shift+home',\n  extendLineForward: 'shift+end',\n  extendBlockBackward: 'ctrl+shift+up',\n  extendBlockForward: 'ctrl+shift+down',\n  selectAll: 'ctrl+a',\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n};\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key];\n  const apple = APPLE_HOTKEYS[key];\n  const windows = WINDOWS_HOTKEYS[key];\n  const isGeneric = generic && isKeyHotkey(generic);\n  const isApple = apple && isKeyHotkey(apple);\n  const isWindows = windows && isKeyHotkey(windows);\n\n  return (event: React.KeyboardEvent | KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) {\n      return true;\n    }\n    if (IS_MAC && isApple && isApple(event)) {\n      return true;\n    }\n    if (!IS_MAC && isWindows && isWindows(event)) {\n      return true;\n    }\n    return false;\n  };\n};\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isSelectAll: create('selectAll'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isMoveUpward: create('moveUpward'),\n  isMoveDownward: create('moveDownward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendUpward: create('extendUpward'),\n  isExtendDownward: create('extendDownward'),\n  isExtendWordBackward: create('extendWordBackward'),\n  isExtendWordForward: create('extendWordForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isExtendBlockBackward: create('extendBlockBackward'),\n  isExtendBlockForward: create('extendBlockForward'),\n  isExtendToDocumentStart: create('extendToDocumentStart'),\n  isExtendToDocumentEnd: create('extendToDocumentEnd'),\n  isItalic: create('italic'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveBlockBackward: create('moveBlockBackward'),\n  isMoveBlockForward: create('moveBlockForward'),\n  isMoveToDocumentStart: create('moveToDocumentStart'),\n  isMoveToDocumentEnd: create('moveToDocumentEnd'),\n  isRedo: create('redo'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n  isSpace: create('space'),\n  isEnter: create('enter'),\n  isCopy: create('copy'),\n  isCut: create('cut'),\n  isPaste: create('paste'),\n};\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Controller from '../controller/index';\nimport { ControllerConfigs } from '../interfaces/controller';\nimport History from '../models/history';\nimport Operation, { OperationType, SetSelectionOperation } from '../models/operation';\nimport Document from '../models/document';\nimport Selection, { SelectionJSON } from '../models/selection';\nimport hotkeys from '../utils/hotkeys';\n\nconst SUPRESS_WITHOUT_SAVING_ERROR = { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: true };\n\nfunction deserializeSelection(document: Document, selection: SelectionJSON) {\n  const { anchor, focus } = selection;\n  return Selection.fromJSON({\n    anchor: {\n      ...anchor,\n      // @ts-ignore\n      key: anchor.path ? document.assertNodeByPath(anchor.path).key : anchor.key,\n    },\n    focus: {\n      ...focus,\n      // @ts-ignore\n      key: focus.path ? document.assertNodeByPath(focus.path).key : focus.key,\n    },\n  });\n}\n\nfunction deserializeOperation(document: Document, operation: Operation) {\n  if (operation.type !== OperationType.SetSelection) {\n    return operation;\n  }\n  const selection = deserializeSelection(document, operation.selection);\n  const prevSelection = deserializeSelection(document, operation.prevSelection);\n  return {\n    ...operation,\n    selection,\n    prevSelection,\n  } as SetSelectionOperation;\n}\n\nfunction serializeSelection(document: Document, selection: Selection) {\n  const { anchor, focus } = selection;\n  return {\n    anchor: {\n      ...anchor.toJSON(),\n      path: document.getPath(anchor.key),\n    },\n    focus: {\n      ...focus.toJSON(),\n      path: document.getPath(focus.key),\n    },\n  };\n}\n\nexport default function createHistoryPlugin(configs?: ControllerConfigs) {\n  const maxHistorySize = configs?.history?.maxHistorySize;\n\n  function redo(controller: Controller) {\n    const { value } = controller;\n    const history: History = value.data.history || History.create({ maxHistorySize });\n    const { redos } = history;\n    if (!redos.length) {\n      return controller;\n    }\n\n    const batch = redos[redos.length - 1];\n    controller.withoutNormalizing(() => {\n      controller.withoutSaving(() => {\n        batch.forEach(op => {\n          controller.applyOperation(deserializeOperation(controller.value.document, op));\n        });\n      }, SUPRESS_WITHOUT_SAVING_ERROR);\n    });\n    const newHistory = history.moveLastRedoRecordToUndos();\n    return controller.setData({\n      ...value.data,\n      history: newHistory,\n    });\n  }\n\n  function undo(controller: Controller) {\n    const { value } = controller;\n    const history: History = value.data.history || History.create({ maxHistorySize });\n    const { undos } = history;\n    if (!undos.length) {\n      return controller;\n    }\n\n    const undoRecord: Operation[] = [];\n    controller.withoutNormalizing(() => {\n      controller.withoutSaving(() => {\n        const reversed = [...undos[undos.length - 1]].reverse();\n        reversed.forEach(op => {\n          undoRecord.unshift(undoOperation(controller, op));\n          controller.applyOperation(deserializeOperation(controller.value.document, Operation.invert(op)));\n        });\n      }, SUPRESS_WITHOUT_SAVING_ERROR);\n    });\n    const newHistory = history.moveLastUndoRecordToRedos(undoRecord);\n    return controller.setData({\n      ...value.data,\n      history: newHistory,\n    });\n  }\n\n  function undoOperation(controller: Controller, operation: Operation) {\n    if (operation.type === OperationType.InsertNode) {\n      const { document } = controller.value;\n      return {\n        ...operation,\n        node: document.assertNodeByPath(operation.path),\n      };\n    }\n    return operation;\n  }\n\n  function onConstruct(controller: Controller, next) {\n    // @ts-ignore\n    const privateApplyOperation = controller.privateApplyOperation;\n    // @ts-ignore\n    controller.privateApplyOperation = (op: Operation) => {\n      // @ts-ignore\n      if (controller.flag.saving) {\n        const { value, operations } = controller;\n        const { document, data } = value;\n\n        // @ts-ignore\n        const operation: Operation = op.type === OperationType.SetSelection\n          ? {\n            ...op,\n            selection: serializeSelection(document, op.selection),\n            prevSelection: serializeSelection(document, op.prevSelection),\n          }\n          : op;\n\n        const history: History = data.history || History.create({ maxHistorySize });\n        const newHistory = history.mergeToLastUndoIfNeed(operation, operations.length !== 0);\n        const newValue = value.set('data', {\n          ...value.data,\n          history: newHistory,\n        });\n        controller.setValue(newValue, {\n          clearOperations: false,\n          normalize: false,\n          clearHots: false,\n        });\n      }\n      return privateApplyOperation.call(controller, op);\n    };\n    return next();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent, controller: Controller, next) {\n    if (hotkeys.isRedo(event as any)) {\n      event.preventDefault();\n      return controller.withoutPending((ctrl) => {\n        return ctrl.command('redo');\n      });\n    }\n    if (hotkeys.isUndo(event as any)) {\n      event.preventDefault();\n      return controller.withoutPending((ctrl) => {\n        return ctrl.command('undo');\n      });\n    }\n    return next();\n  }\n\n  return {\n    commands: {\n      redo,\n      undo,\n    },\n    onConstruct,\n    onKeyDown,\n    models: [],\n  };\n}\n","// eslint-disable-next-line import/no-extraneous-dependencies\n/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport Selection from '../../../models/selection';\nimport { CURSOR_WIDTH } from '../../../constants';\nimport Controller from '../../../controller';\nimport { PendingType } from '../../../interfaces/controller';\n\ntype CaretMode = 'placeholder' | 'caret';\n\nconst CURSOR_BLINK_ANIMATION_TIME = 530;\n\nconst CURSOR_STYLE: React.CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: CURSOR_WIDTH,\n  opacity: 1,\n  zIndex: 1,\n  pointerEvents: 'none',\n  willChange: 'transform,height,opacity',\n};\n\nfunction useBlinkAnimation(\n  cursorRef: React.RefObject<HTMLSpanElement>,\n  pointStr: string,\n  controller: Controller,\n  // Placeholder Mode: disable the blink animation and add an opacity style\n  mode?: CaretMode,\n) {\n  const isVisible = React.useRef(true);\n  const timeout = React.useRef<number | null>(null);\n  const prevPoint = React.useRef<string | null>(null);\n\n  React.useLayoutEffect(() => {\n    const caretNode = cursorRef.current;\n    if (!caretNode || !pointStr) {\n      return undefined;\n    }\n\n    if (mode === 'placeholder') {\n      caretNode.style.opacity = '0.5';\n      return undefined;\n    }\n\n    function toggleBackgroundColor() {\n      if (caretNode) {\n        // 输入过程中不闪烁\n        if (controller.isPending && controller.pendingType === PendingType.input) {\n          caretNode.style.opacity = '1';\n        } else {\n          const visible = prevPoint.current !== pointStr || isVisible.current;\n          caretNode.style.opacity = visible ? '1' : '0';\n          isVisible.current = !visible;\n        }\n      }\n      timeout.current = window.setTimeout(\n        toggleBackgroundColor,\n        CURSOR_BLINK_ANIMATION_TIME,\n      );\n    }\n    toggleBackgroundColor();\n    prevPoint.current = pointStr;\n\n    return () => {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, [pointStr, mode, controller]);\n}\n\ninterface LocalCaretProps {\n  controller: Controller;\n  selection: Selection;\n  color: string;\n  position: {\n    top: number;\n    left: number;\n    height: number;\n  };\n  style?: React.CSSProperties;\n  mode?: CaretMode;\n}\n\nexport default function LocalCaret(props: LocalCaretProps) {\n  const ref = React.useRef<HTMLSpanElement>(null);\n\n  const { position, color, style, mode, controller, selection } = props;\n\n  /* https://aone.alibaba-inc.com/v2/bug/35876239# 《【0730闪会BugBash】左侧 edge selection 定位到高亮条外面去了》 */\n  // 外部无法通过样式直接影响选区，需要通过 query 指定自定义偏移量\n  const { left = 0, top = 0 } = React.useMemo(() => {\n    if (selection.isExpanded) {\n      return {};\n    }\n    return controller.query('getCaretOffset', selection) || {};\n  }, [selection, controller]);\n\n  const point = selection.anchor;\n  const pointStr = selection.isCollapsed ? point.viewKey : '';\n  const where = point.isTextPoint()\n    ? point.offset + controller.value.composing.length\n    : point.edge;\n  const cursorStyle: React.CSSProperties = {\n    ...CURSOR_STYLE,\n    backgroundColor: color,\n    height: position.height,\n    ...(style || {}),\n    transform: `translateX(${position.left + left}px) translateY(${position.top + top}px)`,\n  };\n\n  useBlinkAnimation(ref, pointStr, controller, mode);\n\n  return (\n    <span\n      ref={ref}\n      data-testid=\"cangjie-caret\"\n      data-cangjie-caret=\"true\"\n      data-cangjie-point={pointStr}\n      key={pointStr}\n      data-where={where}\n      style={cursorStyle}\n    />\n  );\n}\n","import * as React from 'react';\nimport equal from 'fast-deep-equal';\nimport Controller from '../../../controller';\nimport Selection from '../../../models/selection';\nimport LocalCaret from './caret';\nimport { CaretAppearance } from '../types';\n\nexport { LocalCaret };\n\ninterface CaretProps {\n  controller: Controller;\n  selection: Selection;\n  isRemote: boolean;\n  isFocused: boolean;\n  position: CaretAppearance;\n  color?: string;\n}\n\nconst isComponentPropsEqual = (prevProps: CaretProps, nextProps: CaretProps) => {\n  return (\n    prevProps.isFocused === nextProps.isFocused\n    && prevProps.isRemote === nextProps.isRemote\n    && prevProps.color === nextProps.color\n    && prevProps.selection === nextProps.selection\n    && equal(prevProps.position, nextProps.position)\n  );\n};\n\n// eslint-disable-next-line prefer-arrow-callback\nexport default React.memo(function Caret(props: CaretProps) {\n  const { controller, isRemote, isFocused, selection, color, position } = props;\n  const { onBlur: showCaretOnBlur, onReadOnly: showCaretOnReadOnly } = controller.showCaret || {};\n\n  if (selection.isExpanded) {\n    return null;\n  }\n\n  if (\n    // 大多数情况，focused && 编辑态\n    (isFocused && !controller.readOnly) ||\n    // blur 时，配置 showCaretOnBlur 时可以显示远程光标\n    (!isFocused && isRemote && showCaretOnBlur) ||\n    // 只读时，配置 showCaretOnReadOnly 时可以显示远程光标\n    (controller.readOnly && isRemote && showCaretOnReadOnly)\n  ) {\n    return (\n      <>\n        {isRemote\n          ? controller.run('renderRemoteCaret', { selection, position })\n          : controller.run('renderCaret', { position, color: color! })\n        }\n      </>\n    );\n  }\n\n  return null;\n}, isComponentPropsEqual);\n","/**\n * @packageDocumentation\n * @module Events\n */\ninterface CangjieInputDetail {\n  type: string;\n  data: string | null;\n};\n\ninterface CangjieInputEvent extends CustomEvent<CangjieInputDetail> {}\n\nfunction CangjieInputEvent(detail: CangjieInputDetail) {\n  return new CustomEvent('cangjieInput', { detail });\n}\n\nexport default CangjieInputEvent;\n","/**\n * @packageDocumentation\n * @module domUtils\n */\nimport Controller from '../../controller/index';\nimport { Selector } from '../../constants';\nimport findClosestInContent from './findClosestInContent';\n\n/**\n * 根据浏览器的 HTML Element 获取仓颉的 Node。\n */\nfunction findNode(element: Element, controller: Controller) {\n  const closest = findClosestInContent(element, `[${Selector.key}]`);\n  if (!closest) return null;\n\n  const key = closest.getAttribute(Selector.key);\n  if (!key) return null;\n\n  const { value } = controller;\n  const { document } = value;\n  const node = document.getNode(key);\n  return node || null;\n}\n\nexport default findNode;\n","import Controller from '../controller/index';\nimport Node from '../models/node';\nimport { EdgePoint, TextPoint } from '../models/point';\nimport { select } from '../commands/selection';\nimport CangjieSelectEvent from '../events/cangjieSelect';\n\n/**\n * Detect if the cursor should be moved inside when deleting/moving at void edges\n */\nexport default function shoudStopInsideVoid(\n  controller: Controller,\n  direciton: 'moveBackward' | 'moveForward',\n) {\n  const isBackward = direciton === 'moveBackward';\n  const { selection, document } = controller.value;\n  const { anchor } = selection;\n  const node = document.getNode(anchor.key);\n  if (selection.isExpanded || !node) {\n    return false;\n  }\n  let voidNode: Node | null = null;\n  if (anchor.isEdgePoint()) {\n    // edge point cases, current node maybe void block\n    const isBackwardCase = isBackward && anchor.edge === EdgePoint.AFTER;\n    const isForwardCase = !isBackward && anchor.edge === EdgePoint.BEFORE;\n    const directionHit = isBackwardCase || isForwardCase;\n    const isVoid = controller.query('isVoid', node);\n    voidNode = isVoid && directionHit ? node : null;\n  } else if (isBackward && node.isText() && anchor.offset === 0) {\n    // text cases, previous node maybe void inline\n    const prev = document.getPreviousText(anchor.key);\n    const parent = prev && document.getParent(prev.key);\n    const isVoid = parent && controller.query('isVoid', parent);\n    voidNode =\n      isVoid && parent?.isElement() && parent.isInline() ? parent : null;\n  } else if (\n    !isBackward &&\n    node.isText() &&\n    node.text.length === anchor.offset\n  ) {\n    // text cases, next node maybe void inline\n    const next = document.getNextText(anchor.key);\n    const parent = next && document.getParent(next.key);\n    const isVoid = parent && controller.query('isVoid', parent);\n    voidNode =\n      isVoid && parent?.isElement() && parent.isInline() ? parent : null;\n  }\n\n  const point = voidNode && voidNode.getFirstText();\n  if (!point) {\n    return false;\n  }\n\n  // now we found the void, move inside!\n  const newPoint = TextPoint.create({ key: point.key, offset: 0 });\n  const newSelection = selection.set('anchor', newPoint).moveToAnchor();\n  controller.run(\n    'onCangjieSelect',\n    CangjieSelectEvent({ selection: newSelection, trigger: direciton }),\n  );\n  return true;\n}\n","export function perfMark(key: string) {\n  if (typeof performance.mark === 'function') {\n    performance.mark(key);\n  }\n}\n\nexport function perfMeasure(name: string, start: string, end: string) {\n  if (typeof performance.measure === 'function') {\n    performance.measure(name, start, end);\n  }\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport equal from 'fast-deep-equal';\nimport Debug from 'debug';\nimport Controller from '../controller/index';\nimport * as Commands from '../commands/index';\nimport Plugin from '../interfaces/plugin';\nimport RenderEditableProps from '../interfaces/renderEditableProps';\nimport Selection, { SelectionTrigger } from '../models/selection';\nimport { EdgePoint } from '../models/point';\nimport Block from '../models/block';\nimport CangjieDataTransfer from '../models/dataTransfer';\nimport { LocalCaret } from '../components/selection/caret';\nimport CangjieClipboardEvent from '../events/cangjieClipboard';\nimport CangjieInputEvent from '../events/cangjieInput';\nimport CangjieSelectEvent from '../events/cangjieSelect';\nimport createClipboardDataFromSelection from '../utils/createClipboardDataFromSelection';\nimport { getEventTransfer, copyFragment } from '../utils/transfer';\nimport hotKeys from '../utils/hotkeys';\nimport findNode from '../utils/dom/findNode';\nimport * as environment from '../utils/environment';\nimport { CANGJIE_SELECTION_COLOR, CANGJIE_SELECTION_INACTIVE_COLOR, MIME_TYPES } from '../constants';\nimport shoudStopInsideVoid from '../utils/shouldStopInsideVoid';\nimport { PerfType } from '../interfaces/perf';\nimport { perfMark } from '../utils/perf';\nimport { ACTION_COPY, ACTION_CUT, ACTION_COPY_FAIL, ACTION_CUT_FAIL, ACTION_PASTE_FAIL } from './contextMenu';\nimport Operation from '../models/operation';\nimport { CaretAppearance } from '../components/selection';\nimport { CONTROLLER_TO_KEY_DOM } from '../utils/dom/getElementByCangjieKey';\nimport { Group } from '../interfaces/group';\n\nconst warn = Debug('EDITOR:CANGJIE:PLUGIN');\nif (typeof console !== 'undefined') {\n  warn.log = console.warn.bind(console);\n}\n\nconst IS_TOUCH_MOBILE = environment.IS_MOBILE || environment.IS_TOUCH_DEVICE;\n\nexport default function createCorePlugin(): Plugin {\n  function decorateNode() {\n    return [];\n  }\n\n  function injectToNode() {\n    return [];\n  }\n\n  function onApplyOperation(op: Operation, controller: Controller) {\n    return controller.applyOperation(op);\n  }\n\n  function groupNodes([ start, end ], { parent }): ReturnType<Required<Plugin>['groupNodes']> {\n    const { nodes } = parent;\n    return { node: nodes[start], remainedRange: [start + 1, end] };\n  }\n\n  function onCopy(event: React.ClipboardEvent, controller: Controller) {\n    event.preventDefault();\n    if (controller.readOnly && !controller.canCopy) {\n      warn('Copy command is prohibited.');\n      return;\n    }\n    const cangjieCopyEvent = CangjieClipboardEvent('cangjieCopy', {\n      nativeEvent: event.nativeEvent,\n    });\n    try {\n      controller.run(\n        'onCangjieCopy',\n        cangjieCopyEvent.setClipboardData(createClipboardDataFromSelection(controller)),\n      );\n    } catch (error) {\n      controller.run('onAction', { type: ACTION_COPY_FAIL, payload: { error } });\n      throw (error);\n    }\n  }\n\n  function onCut(event: React.ClipboardEvent, controller: Controller) {\n    event.preventDefault();\n    if (controller.readOnly && !controller.canCopy) {\n      warn('Cut command is prohibited.');\n      return;\n    }\n    const cangjieCutEvent = CangjieClipboardEvent('cangjieCut', {\n      nativeEvent: event.nativeEvent,\n    });\n    try {\n      controller.run(\n        'onCangjieCut',\n        cangjieCutEvent.setClipboardData(createClipboardDataFromSelection(controller)),\n      );\n    } catch (error) {\n      controller.run('onAction', { type: ACTION_CUT_FAIL, payload: { error } });\n      throw (error);\n    }\n  }\n\n  function onPaste(event: React.ClipboardEvent, controller: Controller) {\n    event.preventDefault();\n    const cangjiePasteEvent = CangjieClipboardEvent('cangjiePaste', {\n      nativeEvent: event.nativeEvent,\n    });\n    try {\n      controller.run('onCangjiePaste', cangjiePasteEvent.setClipboardData(CangjieDataTransfer.create(event.clipboardData)));\n    } catch (error) {\n      controller.run('onAction', { type: ACTION_PASTE_FAIL, payload: { isShortcut: true, error } });\n      throw (error);\n    }\n  }\n\n  function onCangjieFocus(controller: Controller) {\n    return controller.command(Commands.focus);\n  }\n\n  function onCangjieBlur(controller: Controller) {\n    return controller.command(Commands.blur);\n  }\n\n  function onCangjieInput(e: CangjieInputEvent, controller: Controller, next) {\n    const { document, selection } = controller.value;\n    const { detail } = e;\n    const { type, data } = detail;\n    if (type === 'insertText' && data) {\n      // 在这里 flush 会导致 Android 联想状态回车后续的 splitBlock 无效\n      // 但不 flush 会导致桌面端中文输入选词失效\n      return controller.command(Commands.insertText, data);\n    }\n    if (type === 'compositionStart') {\n      perfMark('compositionStart');\n      if (selection?.isExpanded) {\n        return controller.command('del');\n      }\n      if (\n        selection?.isCollapsed\n        && document.hasVoidParent(selection.anchor.key, controller)\n      ) {\n        return controller.command(Commands.moveToStartOfNextText);\n      }\n    }\n    if (type === 'deleteContentBackward') {\n      if (!selection) {\n        return next();\n      }\n      const length = (data || '').length;\n      return controller.command(Commands.deleteBackwardAtRange, selection, length);\n    }\n    if (type === 'insertParagraph') {\n      if (selection?.isCollapsed && document.hasVoidParent(selection.anchor.key, controller)) {\n        const parent = document.getClosestVoid(selection.anchor.key, controller);\n        if (document.getLastNode().key === selection.anchor.key && parent) {\n          return controller.command(Commands.insertEmptyBlock, EdgePoint.create({\n            key: parent.key,\n            edge: EdgePoint.AFTER,\n          }));\n        }\n        const nextText = document.getNextText(selection.focus.key);\n        if (nextText) {\n          const newRange = selection\n            .moveAnchorTo(nextText.key, 0)\n            .moveToAnchor();\n          return controller.run(\n            'onCangjieSelect',\n            CangjieSelectEvent({ selection: newRange }),\n          );\n        }\n      }\n      return controller.command(Commands.splitBlock);\n    }\n    return next();\n  }\n\n  function onCangjieSelect(event: CangjieSelectEvent, controller: Controller) {\n    const { detail } = event;\n    const { selection, trigger } = detail;\n    const { document, selection: prevSelection } = controller.value;\n\n    if (!Selection.isValidSelection(document, selection)) {\n      const selectionJSONString = JSON.stringify(\n        selection.toJSON({ preserveKeys: true }),\n        null,\n        2,\n      );\n      throw new Error(\n        `Core[onCangjieSelect] receive invalid selection: ${selectionJSONString}`,\n      );\n    }\n\n    // 发现selection除mark外没变化则不设置\n    // 这里是行为层，不是command层，做这种处理是安全的\n    if (\n      equal(prevSelection.data, selection.data)\n      && equal(prevSelection.anchor, selection.anchor)\n      && equal(prevSelection.focus, selection.focus)\n    ) {\n      return controller;\n    }\n\n    if (trigger) {\n      const selectionWithData = trigger === SelectionTrigger.Selecting\n        ? selection.merge({ data: { ...selection.data, trigger } })\n        : selection;\n      return controller.command(Commands.userSelect, selectionWithData);\n    }\n\n    return controller.command(Commands.select, selection);\n  }\n\n  function onCangjieCopy(event: CangjieClipboardEvent, controller: Controller) {\n    if (!controller.canCopy) {\n      warn('Copy command is prohibited.');\n      return;\n    }\n    copyFragment(event, () => {\n      if (environment.IS_MOBILE || environment.IS_TOUCH_DEVICE) {\n        controller.command(Commands.moveToEnd);\n      }\n    });\n  }\n\n  function onCangjieCut(event: CangjieClipboardEvent, controller: Controller) {\n    const { selection } = controller.value;\n    if (!controller.canCopy) {\n      warn('Cut command is prohibited.');\n      return;\n    }\n    copyFragment(event, () => {\n      // 修复移动端点击触发 copy 后，仓颉选区 collapsed，造成无法删除（iOS 12 系列及 iOS 14.6 ）\n      controller.command(Commands.select, selection).command(Commands.del);\n    });\n  }\n\n  function onCangjieComposingChange(composing = '', controller: Controller) {\n    if (!composing.length) {\n      perfMark('compositionEnd');\n    }\n    controller.setComposing(composing);\n  }\n\n  function onCangjiePaste(event: CangjieClipboardEvent, controller: Controller) {\n    if (!event.clipboardData) {\n      throw new Error('`event` is invalid, please pass clipbaord data with event.');\n    }\n\n    const transfer = getEventTransfer(event, controller);\n    if (transfer.fragment) {\n      controller.command(Commands.insertFragment, transfer.fragment);\n      return;\n    }\n    if (!transfer.text) {\n      return;\n    }\n    const texts = transfer.text.split('\\n');\n    texts.forEach((line, index) => {\n      if (index !== 0) {\n        controller.command(Commands.splitBlock);\n      }\n      controller.command(Commands.insertText, line);\n    });\n  }\n\n  function onClick(e: React.MouseEvent, controller: Controller, next) {\n    const { value } = controller;\n    const { document } = value;\n    const node = findNode(e.target as Element, controller);\n    if (!node) return next();\n    const ancestors = document.getAncestors(node.key);\n    const isVoid =\n      node &&\n      (controller.query('isVoid', node) ||\n        ancestors!.some((a) => controller.query('isVoid', a)));\n    const firstText = node.getFirstText();\n    if (isVoid && firstText) {\n      const selection = value.selection\n        .moveAnchorTo(firstText.key, 0)\n        .moveToAnchor();\n      controller.run('onCangjieSelect', CangjieSelectEvent({ selection }));\n    }\n    return next();\n  }\n  function onKeyDown(event: React.KeyboardEvent, controller: Controller, next) {\n    const { selection, document } = controller.value;\n    if (!selection) {\n      return next();\n    }\n    if (hotKeys.isSplitBlock(event)) {\n      event.preventDefault();\n      // 如果光标在一个 void 元素中，则不进行 split 操作，直接移动光标到下一个 Text 节点\n      // 这个行为主要用于处理 image/mention 等 inline 元素的断行问题\n      return controller.run('onCangjieInput', CangjieInputEvent({\n        type: 'insertParagraph',\n        data: null,\n      }));\n    }\n    if (hotKeys.isDeleteBackward(event)) {\n      if (environment.IS_MOBILE) {\n        // 移动端由于删除事件不准确，这里不 preventDefault，走 onChange 路径\n        return;\n      }\n      const isProceeded = shoudStopInsideVoid(controller, 'moveBackward');\n      event.preventDefault();\n      if (isProceeded) {\n        return controller;\n      }\n      return controller.command(Commands.deleteCharBackward);\n    }\n    if (hotKeys.isDeleteForward(event)) {\n      const isProceeded = shoudStopInsideVoid(controller, 'moveForward');\n      event.preventDefault();\n      if (isProceeded) {\n        return controller;\n      }\n      return controller.command(Commands.deleteCharForward);\n    }\n    if (hotKeys.isDeleteLineBackward(event)) {\n      event.preventDefault();\n      return controller.command(Commands.deleteLineBackward);\n    }\n    if (hotKeys.isDeleteLineForward(event)) {\n      event.preventDefault();\n      return controller.command(Commands.deleteLineForward);\n    }\n    if (hotKeys.isDeleteWordBackward(event)) {\n      event.preventDefault();\n      return controller.command(Commands.deleteWordBackward);\n    }\n    if (hotKeys.isDeleteWordForward(event)) {\n      event.preventDefault();\n      return controller.command(Commands.deleteWordForward);\n    }\n    if (hotKeys.isMoveBlockBackward(event)) {\n      event.preventDefault();\n      const newSelection = selection\n        .movePointEdgeKlass(controller, 'start', 'start', 'block')\n        .moveToStart(document);\n      return controller.command(Commands.select, newSelection);\n    }\n    if (hotKeys.isMoveBlockForward(event)) {\n      event.preventDefault();\n      const newSelection = selection\n        .movePointEdgeKlass(controller, 'end', 'end', 'block')\n        .moveToEnd(document);\n      return controller.command(Commands.select, newSelection);\n    }\n    if (hotKeys.isExtendBlockBackward(event)) {\n      event.preventDefault();\n      const newSelection = selection\n        .movePointEdgeKlass(controller, 'focus', 'start', 'block');\n      return controller.command(Commands.select, newSelection);\n    }\n    if (hotKeys.isExtendBlockForward(event)) {\n      event.preventDefault();\n      const newSelection = selection\n        .movePointEdgeKlass(controller, 'focus', 'end', 'block');\n      return controller.command(Commands.select, newSelection);\n    }\n    if (hotKeys.isCopy(event) && IS_TOUCH_MOBILE) {\n      controller.run('onAction', { type: ACTION_COPY });\n      return controller;\n    }\n    if (hotKeys.isCut(event) && IS_TOUCH_MOBILE) {\n      controller.run('onAction', { type: ACTION_CUT });\n      return controller;\n    }\n    return next();\n  }\n\n  function renderEditable(props: RenderEditableProps) {\n    const { children } = props;\n    return children();\n  }\n\n  function renderNode(props, _, next) {\n    const { attributes, node, children } = props;\n    const Tag = Block.isBlock(node) ? 'div' : 'span';\n    const result = next();\n    if (result === null) {\n      return <Tag {...attributes}>{children()}</Tag>;\n    }\n    return result;\n  }\n\n  function renderMark(props) {\n    const { children } = props;\n    return children();\n  }\n\n  function renderCaret({ position, color }: { position: CaretAppearance, color: string }, controller: Controller) {\n    const { value } = controller;\n    const { document, selection } = value;\n\n    if (!selection) {\n      return null;\n    }\n    if (document.getClosest(selection.focus.key, (node) => controller.query('isVoid', node))) {\n      return null;\n    }\n\n    return (\n      <LocalCaret\n        data-cangjie-selection={selection.viewKey}\n        controller={controller}\n        selection={selection}\n        position={position}\n        color={color}\n      />\n    );\n  }\n\n  function selectionColor(controller: Controller) {\n    const { isFocused } = controller.value;\n    return isFocused\n      ? CANGJIE_SELECTION_COLOR\n      : CANGJIE_SELECTION_INACTIVE_COLOR;\n  }\n\n  function isEditorBusy(controller: Controller) {\n    // OP Pending 或热区过程中\n    if (controller.isPending) {\n      return true;\n    }\n\n    // 输入法输入过程中\n    if (controller.value.composing) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function onCleanup(controller, next) {\n    if (CONTROLLER_TO_KEY_DOM.has(controller)) {\n      // weakmap的value是map,引用到了dom\n      const map = CONTROLLER_TO_KEY_DOM.get(controller);\n      map && Object.keys(map).forEach((key) => {\n        map?.delete(key);\n      });\n      CONTROLLER_TO_KEY_DOM.delete(controller);\n    }\n    return next();\n  }\n\n  function mapOperation(op) {\n    return op;\n  }\n\n  function isElementInGroup(controller: Controller, element: Element, group: Group) {\n    return true;\n  }\n\n  return {\n    queries: {\n      selectionColor,\n      isEditorBusy,\n      isElementInGroup,\n    },\n    decorateNode,\n    injectToNode,\n    groupNodes,\n    onApplyOperation,\n    onCangjieFocus,\n    onCangjieBlur,\n    onCangjieInput,\n    onCangjieSelect,\n    onCangjieCopy,\n    onCangjieCut,\n    onCangjiePaste,\n    onCangjieComposingChange,\n    onClick,\n    onCopy,\n    onCut,\n    onKeyDown,\n    onPaste,\n    onCleanup,\n    renderEditable,\n    renderContent: renderEditable,\n    renderNode,\n    renderMark,\n    renderCaret,\n    mapOperation,\n    models: [],\n  };\n}\n","import { match, P } from 'ts-pattern';\nimport Document from '../../models/document';\nimport Element from '../../models/element';\nimport Operation, {\n  InsertNodeOperation,\n  OperationType,\n  RemoveNodeOperation,\n  SetNodeOperation,\n} from '../../models/operation';\nimport { UUIDConfig, UUIDMap, UUIDSDiff } from './types';\n\ntype OPAdjuster<T extends Operation> = (\n  op: T,\n  document: Document,\n) => { op: T; diff: UUIDSDiff };\n\nconst createMapOperations = (\n  gen: UUIDConfig['gen'],\n  uuidKey: string,\n  getUUIDs: () => UUIDMap,\n) => {\n  function generateUUID(node: Element, diff: UUIDSDiff) {\n    const uuids = getUUIDs();\n    const uuid = node.data[uuidKey];\n    // 如果无 UUID，或者 UUID 重复，则需要重新创建 UUID\n    if (!uuid || uuids[uuid]) {\n      const newUUID = gen();\n      uuids[newUUID] = node.key;\n      diff.adds.push({ uuid: newUUID, key: node.key });\n      return node.merge({\n        data: {\n          ...node.data,\n          [uuidKey]: newUUID,\n        },\n      });\n    }\n    return node;\n  }\n\n  const genUUIDForTree: (root: Element, diff: UUIDSDiff) => Element = (\n    root,\n    diff,\n  ) => {\n    const newRoot = root.mapDescendants((n) => {\n      if (n.isElement()) {\n        return generateUUID(n, diff);\n      }\n      return n;\n    });\n    return generateUUID(newRoot, diff);\n  };\n\n  const adjustSetNodeOperation: OPAdjuster<SetNodeOperation> = (\n    op,\n    document,\n  ) => {\n    const uuids = getUUIDs();\n    const { properties, prevProperties, path } = op;\n    const node = document.assertElementByPath(path);\n    /* istanbul ignore next */\n    const data = properties.data || {};\n    /* istanbul ignore next */\n    const prevData = prevProperties.data || {};\n    const theUUID = data[uuidKey] as string | undefined;\n    const thePrevUUID = prevData[uuidKey] as string | undefined;\n    return (\n      match({\n        uuid: theUUID,\n        prevUUID: thePrevUUID,\n        reset: theUUID !== thePrevUUID,\n      })\n        .with(\n          // 若设置节点时，丢失 UUID，则写回 UUID\n          { uuid: P.nullish, prevUUID: P.not(P.nullish) },\n          ({ prevUUID }) => ({\n            op: {\n              ...op,\n              properties: {\n                ...properties,\n                data: {\n                  ...data,\n                  [uuidKey]: prevUUID,\n                },\n              },\n            },\n            diff: {\n              adds: [],\n              removes: [],\n              updates: [],\n            },\n          }),\n        )\n        .with(\n          // 若设置节点时，UUID 不重复，则允许生成\n          {\n            uuid: P.when((id) => id && !uuids[id]),\n            prevUUID: P.not(P.nullish),\n            reset: true,\n          },\n          ({ uuid, prevUUID }) => {\n            return {\n              op,\n              diff: {\n                adds: [],\n                removes: [],\n                updates: [{ oldUUID: prevUUID, newUUID: uuid }],\n              },\n            };\n          },\n        )\n        .with(\n          // 若设置节点时，UUID 重复，则重新生成 UUID\n          {\n            uuid: P.when((id) => id && uuids[id] !== node.key),\n            prevUUID: P.not(P.nullish),\n            reset: true,\n          },\n          ({ prevUUID }) => {\n            const newUUID = gen();\n            return {\n              op: {\n                ...op,\n                properties: {\n                  ...properties,\n                  data: {\n                    ...data,\n                    [uuidKey]: newUUID,\n                  },\n                },\n              },\n              diff: {\n                adds: [],\n                removes: [],\n                updates: [{ oldUUID: prevUUID, newUUID }],\n              },\n            };\n          },\n        )\n        .with(\n          // 设置不含有 UUID 的节点时，若新的属性缺失 UUID，则生成 UUID\n          { uuid: P.nullish, prevUUID: P.nullish },\n          // 设置不含有 UUID 的节点时，若新的属性有 UUID，但重复，则生成 UUIID\n          {\n            uuid: P.when((id) => uuids[id] && uuids[id] !== node.key),\n            prevUUID: P.nullish,\n          },\n          () => {\n            const newUUID = gen();\n            return {\n              op: {\n                ...op,\n                properties: {\n                  ...properties,\n                  data: {\n                    ...data,\n                    [uuidKey]: newUUID,\n                  },\n                },\n              },\n              diff: {\n                adds: [{ uuid: newUUID, key: node.key }],\n                removes: [],\n                updates: [],\n              },\n            };\n          },\n        )\n        .with(\n          // 设置不含有 UUID 的节点时，若新的属性中含有不重复的 UUID，允许生成\n          { uuid: P.when((id) => id && !uuids[id]), prevUUID: P.nullish },\n          ({ uuid }) => {\n            return {\n              op,\n              diff: {\n                adds: [{ uuid, key: node.key }],\n                removes: [],\n                updates: [],\n              },\n            };\n          },\n        )\n        /* istanbul ignore next */\n        .otherwise(() => ({ op, diff: { adds: [], removes: [], updates: [] } }))\n    );\n  };\n\n  const adjustRemoveNodeOperation: OPAdjuster<RemoveNodeOperation> = (op) => {\n    const { node } = op;\n    if (node.isElement() && node.data[uuidKey]) {\n      const uuid = node.data[uuidKey];\n      return { op, diff: { adds: [], removes: [uuid], updates: [] } };\n    }\n    return { op, diff: { adds: [], removes: [], updates: [] } };\n  };\n\n  const adjustInsertNodeOperation: OPAdjuster<InsertNodeOperation> = (op) => {\n    const { node } = op;\n    const diff = { adds: [], removes: [], updates: [] };\n    if (node.isElement()) {\n      return { op: { ...op, node: genUUIDForTree(node, diff) }, diff };\n    }\n    return { op, diff };\n  };\n\n  return function mapOperation(\n    operation: Operation,\n    document: Document,\n  ): { op: Operation; diff: UUIDSDiff } {\n    return match(operation)\n      .with({ type: OperationType.RemoveNode }, (op) =>\n        adjustRemoveNodeOperation(op, document))\n      .with({ type: OperationType.SetNode }, (op) =>\n        adjustSetNodeOperation(op, document))\n      .with({ type: OperationType.InsertNode }, (op) =>\n        adjustInsertNodeOperation(op, document))\n      .otherwise((op) => ({\n        op,\n        diff: { adds: [], removes: [], updates: [] },\n      }));\n  };\n};\n\nexport default createMapOperations;\n","import Element from '../../models/element';\nimport { UUIDMap } from './types';\nimport Query, { ConvertToPluginQueries } from '../../interfaces/query';\n\nexport const createUUIDQuery = (uuidKey: string) => (_, node: Element) => {\n  return node.data[uuidKey];\n};\n\nexport const createAnchorQuery = (uuidKey: string) => (_, node: Element) => {\n  return node.data[uuidKey];\n};\n\nexport function createGetNodeKeyByUUID(getUUIDS: () => UUIDMap) {\n  const getNodeKeyByUUID: Query = (_, uuid: string) => {\n    const uuids = getUUIDS();\n    return uuids[uuid];\n  };\n  return getNodeKeyByUUID;\n}\n\ndeclare module '@ali/4ever-cangjie' {\n  /** type combination for commands、queries、actions */\n  interface PluginQueries\n    extends ConvertToPluginQueries<{\n      uuid: ReturnType<typeof createUUIDQuery>;\n      anchor: ReturnType<typeof createAnchorQuery>;\n      getNodeKeyByUUID: ReturnType<typeof createGetNodeKeyByUUID>;\n    }> {}\n}\n","import Document from '../../models/document';\nimport { NodeKey, UUID, UUIDMap, UUIDSDiff } from './types';\n\nexport function getUUIDSFromDocument(document: Document, uuidKey) {\n  const uuids: UUIDMap = {};\n  const duplications: string[] = [];\n  document.forEachDescendant((desendant) => {\n    if (desendant.isElement() && desendant.data[uuidKey]) {\n      const uuid = desendant.data[uuidKey];\n      if (uuids[uuid]) {\n        duplications.push(desendant.key);\n      } else {\n        uuids[uuid] = desendant.key;\n      }\n    }\n  });\n  return { uuids, duplications };\n}\n\nfunction toKeyUUIDMap(map: UUIDMap): Record<NodeKey, UUID> {\n  return Object.keys(map).reduce((ret, uuid) => {\n    ret[map[uuid]] = uuid;\n    return ret;\n  }, {});\n}\n\nexport function diffUUIDS(a: UUIDMap, b: UUIDMap): UUIDSDiff {\n  const aKeyToUUIDMap = toKeyUUIDMap(a);\n  const bKeyToUUIDMap = toKeyUUIDMap(b);\n\n  const diff: UUIDSDiff = {\n    adds: [],\n    removes: [],\n    updates: [],\n  };\n\n  Object.keys(aKeyToUUIDMap).forEach((nodeKey) => {\n    const aUUID = aKeyToUUIDMap[nodeKey];\n    const bUUID = bKeyToUUIDMap[nodeKey];\n    if (aUUID !== bUUID) {\n      diff.updates.push({ oldUUID: aUUID, newUUID: bUUID });\n    }\n    if (!bKeyToUUIDMap[nodeKey]) {\n      diff.removes.push(aUUID);\n    }\n  });\n\n  Object.keys(bKeyToUUIDMap).forEach((nodeKey) => {\n    if (!aKeyToUUIDMap[nodeKey]) {\n      diff.adds.push({ uuid: bKeyToUUIDMap[nodeKey], key: nodeKey });\n    }\n  });\n\n  return diff;\n}\n\nexport function isEmptyDiff(diff: UUIDSDiff) {\n  return !diff.adds.length && !diff.removes.length && !diff.updates.length;\n}\n","import Action, {\n  ConvertToPluginActionCreators,\n  ConvertToPluginActionPredicates,\n} from '../../interfaces/action';\nimport Element from '../../models/element';\nimport { UUIDMap, UUIDSDiff } from './types';\n\nexport const UPDATE_UUIDS = Symbol('update_uuids');\nexport const GENERATE_UUID = Symbol('generate_uuid');\nexport interface UpdateUUIDsPayload {\n  /** 最新的 UUID Map */\n  uuids: UUIDMap;\n  diff: UUIDSDiff;\n}\n\nexport interface UpdateUUIDsAction {\n  type: typeof UPDATE_UUIDS;\n  payload: UpdateUUIDsPayload;\n}\n\nexport interface GenerateUUIDPayload {\n  node: Element;\n}\nexport interface GenerateUUIDAction {\n  type: typeof GENERATE_UUID;\n  payload: GenerateUUIDPayload;\n}\n\nexport function updateUUIDs(payload: UpdateUUIDsPayload): UpdateUUIDsAction {\n  return {\n    type: UPDATE_UUIDS,\n    payload,\n  };\n}\n\nexport function isUpdateUUIDs(action: Action): action is UpdateUUIDsAction {\n  return action.type === UPDATE_UUIDS;\n}\n\nexport function generateUUID(payload: GenerateUUIDPayload) {\n  return {\n    type: GENERATE_UUID,\n    payload,\n  };\n}\n\nexport function isGenerateUUID(action: Action): action is GenerateUUIDAction {\n  return action.type === GENERATE_UUID;\n}\n\nexport const actions = {\n  updateUUIDs,\n  generateUUID,\n};\n\nexport const isActions = {\n  isUpdateUUIDs,\n  isGenerateUUID,\n};\n\ndeclare module '@ali/4ever-cangjie' {\n  /** type combination for commands、queries、actions */\n  interface PluginActionCreators\n    extends ConvertToPluginActionCreators<typeof actions> {}\n  interface PluginActionPredicates\n    extends ConvertToPluginActionPredicates<typeof isActions> {}\n}\n","import Controller from '../../controller';\nimport { ConvertToPluginCommands } from '../../interfaces/command';\nimport Node from '../../models/node';\nimport Element from '../../models/element';\n\nexport function setNodeUUID(\n  controller: Controller,\n  node: Element,\n  uuid: string,\n  uuidKey: string,\n) {\n  return controller.withoutSaving(() => {\n    controller.command('setNodeByKey', node.key, {\n      type: node.type,\n      data: { ...node.data, [uuidKey]: uuid },\n    });\n  });\n}\n\nexport function createGenerateUUID(gen: () => string, uuidKey: string) {\n  return function generateUUID(controller: Controller, node: Node) {\n    if (node.isElement() && !node.data[uuidKey]) {\n      const uuid = gen();\n      controller.command(setNodeUUID, node, uuid, uuidKey);\n    }\n    return controller;\n  };\n}\n\ndeclare module '@ali/4ever-cangjie' {\n  /** type combination for commands、queries、actions */\n  interface PluginCommands\n    extends ConvertToPluginCommands<{\n      generateUUID: ReturnType<typeof createGenerateUUID>;\n    }> {}\n}\n","import Controller from '../../controller';\nimport Action from '../../interfaces/action';\n\nexport default function onAction(\n  action: Action,\n  controller: Controller,\n  next: () => void,\n) {\n  const isGenerateUUID = controller.isActionFactory('isGenerateUUID');\n  if (isGenerateUUID?.(action)) {\n    return controller.command('generateUUID', action.payload.node);\n  }\n  return next();\n}\n","export const DEFAULT_UUID_KEY = '__uuid__';\n","import Controller from '../../controller';\nimport Plugin from '../../interfaces/plugin';\nimport createMapOperation from './createMapOperation';\nimport { createGetNodeKeyByUUID, createUUIDQuery } from './queries';\nimport { UUIDMap, UUIDConfig } from './types';\nimport { diffUUIDS, getUUIDSFromDocument, isEmptyDiff } from './utils';\nimport { actions, isActions } from './actions';\nimport Value from '../../models/value';\nimport { createGenerateUUID, setNodeUUID } from './commands';\nimport onAction from './onAction';\nimport { DEFAULT_UUID_KEY } from './constants';\n\nexport default function createUUIDPlugin(config: UUIDConfig): Plugin {\n  // 初始化 UUID 映射\n  let uuids: UUIDMap = {};\n\n  function getUUIDS() {\n    return uuids;\n  }\n\n  const uuidKey = config.uuidKey || DEFAULT_UUID_KEY;\n\n  function regenerateDuplicateUUIDS(controller: Controller, value: Value) {\n    const befores = { ...getUUIDS() };\n    const ret = getUUIDSFromDocument(value.document, uuidKey);\n    // 为重复的 id 重新生成 uuid\n    const newUUIDS = ret.duplications.reduce((ids, key) => {\n      const element = value.document.assertElement(key);\n      const uuid = config.gen();\n      controller.command(setNodeUUID, element, uuid, uuidKey);\n      ids[uuid] = key;\n      return ids;\n    }, ret.uuids);\n    const diff = diffUUIDS(befores, newUUIDS);\n    if (!isEmptyDiff(diff)) {\n      uuids = newUUIDS;\n      controller.dispatch('updateUUIDs', {\n        // Immutable，防止外部改动了 uuid\n        uuids: { ...newUUIDS },\n        diff,\n      });\n    }\n  }\n\n  const mapOperation = createMapOperation(config.gen, uuidKey, getUUIDS);\n\n  return {\n    actions,\n    isActions,\n    commands: {\n      generateUUID: createGenerateUUID(config.gen, uuidKey),\n    },\n    onConstruct: (controller, next) => {\n      regenerateDuplicateUUIDS(controller, controller.value);\n      return next();\n    },\n    onResetValue: (value, _, controller, next) => {\n      regenerateDuplicateUUIDS(controller, value);\n      return next();\n    },\n    onAction,\n    mapOperation: (operation, controller, next) => {\n      const { op, diff } = mapOperation(operation, controller.value.document);\n      if (isEmptyDiff(diff)) {\n        return op;\n      }\n      diff.removes.forEach((uuid) => {\n        delete uuids[uuid];\n      });\n      diff.adds.forEach(({ uuid, key }) => {\n        uuids[uuid] = key;\n      });\n      diff.updates.forEach(({ oldUUID, newUUID }) => {\n        const nodeKey = uuids[oldUUID];\n        uuids[newUUID] = nodeKey;\n        delete uuids[oldUUID];\n      });\n      controller.dispatch('updateUUIDs', {\n        // Immutable，防止外部改动了 uuid\n        uuids: { ...uuids },\n        diff,\n      });\n      return next(op);\n    },\n    queries: {\n      uuid: createUUIDQuery(uuidKey),\n      anchor: createUUIDQuery(uuidKey),\n      getNodeKeyByUUID: createGetNodeKeyByUUID(getUUIDS),\n    },\n  };\n}\n","export const TOGGLE_GROUP_FOLD = Symbol('toggleGroupFold');\nexport const FOLD_GROUP = Symbol('fold');\nexport const EXPAND_GROUP = Symbol('expand');\n\nexport interface SetGroupFoldPayload {\n  key: string;\n}\n\n/**\n * 折叠/展开分组\n * @param key\n * @returns\n */\nexport function toggleGroupFold(key: string) {\n  return {\n    type: TOGGLE_GROUP_FOLD,\n    payload: { key } as SetGroupFoldPayload,\n  };\n}\n\n/**\n * 折叠分组\n * @param key\n * @returns\n */\nexport function fold(key: string) {\n  return {\n    type: FOLD_GROUP,\n    payload: { key } as SetGroupFoldPayload,\n  };\n}\n\n/**\n * 展开分组\n * @param key\n * @returns\n */\nexport function expand(key: string) {\n  return {\n    type: EXPAND_GROUP,\n    payload: { key } as SetGroupFoldPayload,\n  };\n}\n","import { GROUP_COLLAPSED_KEY } from '../../constants';\nimport Plugin from '../../interfaces/plugin';\nimport {\n  SetGroupFoldPayload,\n  TOGGLE_GROUP_FOLD,\n  FOLD_GROUP,\n  EXPAND_GROUP,\n} from './actions';\n\nconst onAction: Plugin['onAction'] = (action, controller, next) => {\n  const { type, payload } = action;\n  const { groupManager } = controller;\n  if (\n    type === TOGGLE_GROUP_FOLD ||\n    type === FOLD_GROUP ||\n    type === EXPAND_GROUP\n  ) {\n    const { key } = payload as SetGroupFoldPayload;\n    const group = groupManager.getGroup(key);\n    if (group) {\n      if (type === TOGGLE_GROUP_FOLD) {\n        groupManager.mergeGroupData(key, {\n          [GROUP_COLLAPSED_KEY]: !group.data[GROUP_COLLAPSED_KEY],\n        });\n        return controller;\n      } else {\n        groupManager.mergeGroupData(key, {\n          [GROUP_COLLAPSED_KEY]: type === FOLD_GROUP,\n        });\n        return controller;\n      }\n    }\n  }\n  return next();\n};\n\nexport default onAction;\n","import * as React from 'react';\nimport RenderNode from '../../interfaces/renderNode';\nimport ElementInGroup from './ElementInGroup';\n\nconst renderNode: RenderNode = (props, controller, next) => {\n  return next();\n}\n\nexport default renderNode;\n","import * as React from 'react';\nimport RenderGroup from '../../interfaces/renderGroup';\nimport ElementInGroup from './ElementInGroup';\n\nconst renderGroup: RenderGroup = (props, controller, next) => {\n  const group = next();\n  return group;\n};\n\nexport default renderGroup;\n","import Plugin from '../../interfaces/plugin';\n\nconst onResetValue: Plugin['onResetValue'] = (\n  _value,\n  _controllerValue,\n  controller,\n  next,\n) => {\n  controller.groupManager.generateAllGroups().notifyNewGroups();\n  return next();\n};\n\nexport default onResetValue;\n","import Plugin from \"../../interfaces/plugin\";\nimport onAction  from \"./onAction\";\nimport renderNode from './renderNode';\nimport renderGroup from './renderGroup';\nimport onResetValue from './onResetValue';\n\nconst createGroupPlugin: () => Plugin = () => ({\n  onAction,\n  renderNode,\n  renderGroup,\n  onResetValue,\n})\n\nexport default createGroupPlugin;\n","/**\n * @packageDocumentation\n * @ignore\n */\nexport enum Status {\n  Idle = 'Idle',\n  Pending = 'Pending',\n  Canceled = 'Canceled',\n  Done = 'Done',\n}\n\n/**\n * WARN: Sometimes request idle callback in Safari will never be called!\n */\nexport type FlushType = 'microtask' | 'frametask' | 'idletask';\n\n/**\n * 默认的 flush 类型\n */\nconst DEFAULT_FLUSH_TYPE: FlushType = 'microtask';\n\n/**\n * flush 最大等待时间（100ms 是为了保证常规情况下反馈不会过长，同时大文档在连续情况下每隔 100ms 做一次渲染也能保障流畅度）\n * @description 浏览器的调度有时候会将线程长时间闲置，导致 flush 延迟过高\n * @example 一个典型的例子是当滚动区域触发一个滑动后，光标的再次点击，使浏览器的线程调度闲置（具体原因还在研究中）\n */\nconst FLUSH_MAX_WAIT = 100;\n\nexport interface FlushTaskOptions {\n  flushType?: FlushType;\n}\n\n/**\n * 是否支持 idleCallback\n */\nconst IS_SUPPORT_IDLE_TASK = typeof window === 'object' &&\n  'requestIdleCallback' in window && 'cancelIdleCallback' in window;\n\n/**\n * 是否支持 animationFrame\n */\nconst IS_SUPPORT_FRAME_TASK = typeof window === 'object' &&\n  'requestAnimationFrame' in window && 'cancelAnimationFrame' in window;\n\n/**\n * 决议能够使用的 flushType\n * @param flushType 需要的 flushType\n */\nfunction resolveSupportedType(flushType: FlushType): FlushType {\n  if (flushType === 'microtask') {\n    return 'microtask';\n  }\n  if (flushType === 'idletask') {\n    if (IS_SUPPORT_IDLE_TASK) {\n      return 'idletask';\n    } else if (IS_SUPPORT_FRAME_TASK) {\n      return 'frametask';\n    }\n  }\n  if (flushType === 'frametask' && IS_SUPPORT_FRAME_TASK) {\n    return 'frametask';\n  }\n  return 'microtask';\n}\n\nclass FlushTask {\n  static create(task: Function, options?: FlushTaskOptions) {\n    return new FlushTask(task, options);\n  }\n\n  /**\n   * 等待执行的微任务\n   */\n  private task: Function;\n\n  /**\n   * 当前任务的状态\n   */\n  private status = Status.Idle;\n\n  /**\n   * 是否已经 resolved，保障一个任务只执行一次函数\n   */\n  private resolved = false;\n\n  /**\n   * 原始的 flushType\n   */\n  private flushType: FlushType;\n\n  /**\n   * 当前支持的 flushType\n   */\n  private supportedFlushType: FlushType;\n\n  private taskId = -1;\n\n  private constructor(task: Function, options: FlushTaskOptions = {}) {\n    this.task = task;\n    const {\n      flushType = DEFAULT_FLUSH_TYPE,\n    } = options;\n    this.flushType = flushType;\n    this.supportedFlushType = resolveSupportedType(flushType);\n  }\n\n  start(): FlushTask {\n    this.status = Status.Pending;\n    if (!this.resolved) {\n      this.requestTask();\n      this.resolved = true;\n    }\n    return this;\n  }\n\n  cancel(): FlushTask {\n    this.status = Status.Canceled;\n    this.cancelTask();\n    return this;\n  }\n\n  getStatus(): Status {\n    return this.status;\n  }\n\n  private requestTask() {\n    if (this.supportedFlushType === 'idletask') {\n      this.taskId = window.requestIdleCallback(() => this.run(), { timeout: FLUSH_MAX_WAIT });\n    } else if (this.supportedFlushType === 'frametask') {\n      this.taskId = window.requestAnimationFrame(() => this.run());\n    } else {\n      Promise.resolve().then(() => this.run());\n    }\n  }\n\n  private cancelTask() {\n    if (this.supportedFlushType === 'idletask') {\n      window.cancelIdleCallback(this.taskId);\n    } else if (this.supportedFlushType === 'frametask') {\n      window.cancelAnimationFrame(this.taskId);\n    }\n  }\n\n  private run() {\n    if (this.status === Status.Pending && typeof this.task === 'function') {\n      this.task.call(null);\n      this.status = Status.Done;\n    }\n  }\n}\n\nexport default FlushTask;\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Node from '../models/node';\nimport Document from '../models/document';\nimport Element from '../models/element';\nimport Decoration from '../models/decoration';\nimport Selection from '../models/selection';\nimport Point, { EdgePoint } from '../models/point';\nimport Path from '../models/path';\n\ninterface OrderedItem {\n  order: number;\n}\n\ninterface RangeStart<T> extends OrderedItem {\n  start: true;\n  range: T;\n}\n\ninterface RangeEnd<T> extends OrderedItem {\n  end: true;\n  range: T;\n}\n\ninterface Child extends OrderedItem {\n  child: Node;\n}\n\ntype OrderItem<T> = Child | RangeStart<T> | RangeEnd<T>;\n\nfunction isChild<T>(item: OrderItem<T>): item is Child {\n  return 'child' in item;\n}\n\nfunction isRangeStart<T>(item: OrderItem<T>): item is RangeStart<T> {\n  return 'start' in item;\n}\n\nfunction isRangeEnd<T>(item: OrderItem<T>): item is RangeEnd<T> {\n  return 'end' in item;\n}\n\nfunction isEdgeAfter(edgePoint: Point, edgePath: Path, nodePath: Path) {\n  return edgePoint.isEdgePoint() &&\n    edgePoint.edge === EdgePoint.AFTER &&\n    (Path.isEqual(edgePath, nodePath) || Path.isAncestor(edgePath, nodePath));\n}\n\nfunction isEdgeBefore(edgePoint: Point, edgePath: Path, nodePath: Path) {\n  return edgePoint.isEdgePoint() &&\n    edgePoint.edge === EdgePoint.BEFORE &&\n    (Path.isEqual(edgePath, nodePath) || Path.isAncestor(edgePath, nodePath));\n}\n\nfunction sort<T>(a: OrderItem<T>, b: OrderItem<T>) {\n  if (a.order > b.order) {\n    return 1;\n  } else if (a.order === b.order) {\n    return isRangeEnd(b) ? 1 : -1;\n  }\n  return -1;\n}\n\nexport function getChildrenDecorations(\n  document: Document,\n  node: Element,\n  decorations: Decoration[],\n) {\n  const childrenDecorations: Decoration[][] = [];\n\n  // 初始化排序数组，先放入节点子孙\n  const orderArray: OrderItem<Decoration>[] = node.nodes.map((child, index) => ({\n    child,\n    order: index,\n  }));\n\n  const nodePath = document.assertPath(node.key);\n  const depth = nodePath.length;\n  const last = node.nodes.length - 1;\n  // 遍历 decorations，将其放入排序数组\n  decorations.forEach((decoration) => {\n    const { start: startPoint, end: endPoint } = decoration;\n    const startPath = document.getPath(startPoint.key);\n    const endPath = document.getPath(endPoint.key);\n\n    if (!startPath || !endPath) {\n      return;\n    }\n    if (Path.isAfter(startPath, nodePath) || Path.isBefore(endPath, nodePath)) {\n      return;\n    }\n\n    // 获得 decoration 相对于 node children 的起始位置\n    const start = Path.isBefore(startPath, nodePath) ? 0 : startPath[depth];\n    const end = Path.isAfter(endPath, nodePath) ? last : endPath[depth];\n\n    orderArray.push({\n      start: true,\n      range: decoration,\n      order: start - 0.5,\n    });\n\n    orderArray.push({\n      end: true,\n      range: decoration,\n      order: end + 0.5,\n    });\n  });\n\n  const activeDecorations = new Set<Decoration>();\n  orderArray.sort(sort).forEach(item => {\n    if (isRangeStart(item)) {\n      activeDecorations.add(item.range);\n    } else if (isRangeEnd(item)) {\n      activeDecorations.delete(item.range);\n    } else if (isChild(item)) {\n      childrenDecorations.push(Array.from(activeDecorations));\n    }\n  });\n  return childrenDecorations;\n}\n\nexport function getChildrenIsSelected(\n  document: Document,\n  node: Element,\n  selection: Selection,\n) {\n  const childrenIsSelected: boolean[] = node.nodes.map(() => false);\n  if (selection.isCollapsedAtEdge) {\n    return childrenIsSelected;\n  }\n\n  const { start: startPoint, end: endPoint } = selection.sort(document);\n  const startPath = document.getPath(startPoint.key);\n  const endPath = document.getPath(endPoint.key);\n  if (!startPath || !endPath) {\n    return childrenIsSelected;\n  }\n\n  const nodePath = document.assertPath(node.key);\n  if (\n    Path.isAfter(startPath, nodePath)\n      || isEdgeAfter(startPoint, startPath, nodePath)\n  ) {\n    return childrenIsSelected;\n  }\n  if (\n    Path.isBefore(endPath, nodePath)\n      || isEdgeBefore(endPoint, endPath, nodePath)\n  ) {\n    return childrenIsSelected;\n  }\n\n  const depth = nodePath.length;\n  const last = node.nodes.length - 1;\n  const start = Path.isBefore(startPath, nodePath) || isEdgeBefore(startPoint, startPath, nodePath)\n    ? 0\n    : startPath[depth];\n  const end = Path.isAfter(endPath, nodePath) || isEdgeAfter(endPoint, endPath, nodePath)\n    ? last\n    : endPath[depth];\n\n  for (let i = start; i <= end; i += 1) {\n    childrenIsSelected[i] = true;\n  }\n  return childrenIsSelected;\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport Element from '../models/element';\nimport Document from '../models/document';\nimport Injection from '../models/injection';\n\nexport default function getChildrenInjections(\n  document: Document,\n  node: Element,\n  injections: Injection[],\n) {\n  const nodePath = document.assertPath(node.key);\n  const depth = nodePath.length;\n\n  const childInjections: Injection[][] = node.nodes.map(() => []);\n\n  injections.forEach((injection) => {\n    const path = document.getPath(injection.key);\n    if (path) {\n      const index = path[depth];\n      const injects = childInjections[path[depth]];\n      if (index >= 0 && injects) {\n        injects.push(injection);\n      }\n    }\n  });\n\n  return childInjections;\n}\n","export const CONTEXT_SPLIT = '@';\n\nexport function getContexts(context?: string) {\n  return context ? context.split(CONTEXT_SPLIT) : [];\n}\n\nexport function getContextMeta<T>(context?: string) {\n  if (typeof context !== 'string') {\n    return null;\n  }\n\n  const matched = context.match(/\\((.*?)\\)$/);\n\n  if (matched) {\n    try {\n      return JSON.parse(matched[1]) as T;\n    } catch {\n      return null;\n    }\n  }\n\n  return null;\n}\n","export interface Subscription {\n  unsubscribe: () => void;\n}\n\nexport type Observer<T> = (data: T) => void;\n\ninterface Link<T> {\n  next: Link<T> | null;\n  prev: Link<T> | null;\n  element: T;\n}\n\nexport class Observable<T> {\n  private linkHead: Link<Observer<T>> | null = null;\n\n  public subscribe(observer: Observer<T>): Subscription {\n    const link: Link<Observer<T>> = {\n      next: this.linkHead,\n      prev: null,\n      element: observer,\n    };\n    if (this.linkHead) {\n      this.linkHead.prev = link;\n    }\n    this.linkHead = link;\n    return {\n      unsubscribe: () => {\n        if (link.next) {\n          link.next.prev = link.prev\n        }\n        if (link.prev) {\n          link.prev.next = link.next\n        } else {\n          this.linkHead = link.next\n        }\n      }\n    }\n  }\n\n  protected onData(data: T) {\n    let link = this.linkHead;\n    while (link) {\n      link.element(data);\n      link = link.next;\n    }\n  }\n}\n\nexport class Subject<T> extends Observable<T> {\n  constructor() {\n    super();\n  }\n\n  next(data: T) {\n    this.onData(data);\n  }\n}\n\n\nexport class ReplaySubject<T> extends Observable<T> {\n  private replays: T[] = []; \n  private readonly max: number; \n\n  constructor(max = 1) {\n    super();\n    this.max = max;\n  }\n\n  public subscribe(observer: Observer<T>): Subscription {\n    const sub = super.subscribe(observer);\n    this.replays.forEach(data => {\n      observer(data);\n    });\n    return sub;\n  }\n\n  next(data: T) {\n    this.onData(data);\n    if (this.replays.length === this.max) {\n      this.replays.shift();\n    }\n    this.replays.push(data);\n  }\n}\n","import Controller from '../../controller';\nimport { PendingType } from '../../interfaces/controller';\nimport { PendingPattern, PendingPredicate, PendingGetter } from '../../interfaces/pending';\nimport { OperationType } from '../../models/operation';\n\nconst isSetSelection = ({ operation }) => (\n  operation && operation.type === OperationType.SetSelection\n);\n\nexport function getSelectionData(controller: Controller) {\n  const { document, selection } = controller.value;\n\n  const blocks = (\n    selection.isCollapsedAtEdge\n      ? [document.getNode(selection.anchor.key)!]\n      : document.getLeafBlocksAtRange(selection)\n  );\n  const isHideSelection = controller.query(\n    'isHideSelection',\n  )!;\n  return { range: selection, blocksKeys: new Set(blocks.map((b) => b.key)), isHideSelection };\n}\n\nexport const isSelect: PendingPredicate = (params) => {\n  const { ops, controller } = params;\n\n  if (ops.length === 0) {\n    return false;\n  }\n\n  // 从 blur 状态开始选区（点选/拖选），会有个先 focus 再 set_selction 的过程，可以 pending\n  return ops.every((op, index) => {\n    if (index === 0) {\n      return (op.key === 'isFocused' && controller.value.isFocused) || isSetSelection(op);\n    }\n    return isSetSelection(op);\n  });\n};\n\nexport const getPending: PendingGetter<null> = ({ controller }) => ({\n  type: PendingType.selection,\n  effect: () => {\n    controller.selectionData$.next(getSelectionData(controller));\n  },\n});\n\nconst pattern: PendingPattern<null> = [\n  isSelect,\n  getPending,\n];\n\nexport default pattern;\n","import { last } from 'lodash-es';\nimport { OperationWithValue, PendingType } from '../../interfaces/controller';\nimport {\n  ShouldAppend,\n  PendingPattern,\n  PendingPredicate,\n  PendingGetter,\n} from '../../interfaces/pending';\nimport Operation, {\n  InsertTextOperation,\n  OperationType,\n  RemoveTextOperation,\n  SetSelectionOperation,\n} from '../../models/operation';\nimport { TextPoint } from '../../models/point';\nimport Path from '../../models/path';\nimport Text from '../../models/text';\nimport { getSelectionData } from './selection';\n\nexport interface TextInputContext {\n  /** 输入作用的 text node key */\n  key: string;\n  /** 输入开始的 path */\n  startPath: Path;\n  /** 输入开始的偏移 */\n  startOffset: number;\n}\n\nfunction isInsertTextOperation(\n  op: Operation | null,\n): op is InsertTextOperation {\n  return op !== null && op.type === OperationType.InsertText;\n}\n\nfunction isRemoveTextOperation(\n  op: Operation | null,\n): op is RemoveTextOperation {\n  return op !== null && op.type === OperationType.RemoveText;\n}\n\nfunction isInsertOrRemove(operation: Operation) {\n  return (\n    (isInsertTextOperation(operation) || isRemoveTextOperation(operation)) &&\n    operation.text.length === 1\n  );\n}\n\nfunction isSetSelectionOperation(\n  op: Operation | null,\n): op is SetSelectionOperation {\n  return op !== null && op.type === OperationType.SetSelection;\n}\n\nfunction isContinuousOp(prevOp: Operation, operation: Operation) {\n  // @ts-ignore\n  if (!Path.isEqual(operation.path, prevOp.path)) {\n    return false;\n  }\n  if (isInsertTextOperation(prevOp) && isInsertTextOperation(operation)) {\n    return operation.offset === prevOp.offset + prevOp.text.length;\n  } else if (\n    isInsertTextOperation(prevOp) &&\n    isRemoveTextOperation(operation)\n  ) {\n    return (\n      operation.offset ===\n      prevOp.offset + prevOp.text.length - operation.text.length\n    );\n  } else if (\n    isRemoveTextOperation(prevOp) &&\n    isInsertTextOperation(operation)\n  ) {\n    return operation.offset === prevOp.offset;\n  } else if (\n    isRemoveTextOperation(prevOp) &&\n    isRemoveTextOperation(operation)\n  ) {\n    return operation.offset === prevOp.offset - operation.text.length;\n  }\n  return false;\n}\n\nfunction isContinuousInput(ops: OperationWithValue[]) {\n  const operations = ops.filter(\n    ({ operation }) => !operation || !isSetSelectionOperation(operation),\n  );\n  if (!operations.length) {\n    return false;\n  }\n  const operationsWithoutComposing = operations.filter(({ key }) => key !== 'composing');\n  return operationsWithoutComposing.every(({ operation }, index) => {\n    if (!isInsertOrRemove(operation!)) {\n      return false;\n    }\n    if (index === 0) {\n      return true;\n    }\n\n    const { operation: prevOp } = operationsWithoutComposing[index - 1];\n    return !prevOp || isContinuousOp(prevOp, operation!);\n  });\n}\n/**\n * 是否为连续输入\n * @param params\n * @returns\n */\nconst isTextInput: PendingPredicate = (params) => {\n  const { ops } = params;\n  return isContinuousInput(ops);\n};\n\nexport const shouldAppend: ShouldAppend = (prevOps, ops) => {\n  // 找到最后一个非 set_selection op，做连续性比较\n  const { operation: prevOp } = last(\n    prevOps.filter(({ key, operation }) => key !== 'composing' && !isSetSelectionOperation(operation)),\n  ) || {};\n  const { operation } = ops.find(\n    ({ key, operation }) => key !== 'composing' && !isSetSelectionOperation(operation),\n  ) || {};\n\n  return !prevOp || !operation || isContinuousOp(prevOp, operation);\n};\n\nconst getPending: PendingGetter<TextInputContext> = ({ controller }) => ({\n  type: PendingType.input,\n  decorate: (ops) => {\n    const { operation, value } = ops.find(\n      ({ operation }) => !isSetSelectionOperation(operation),\n    )!;\n    if (operation === null) {\n      // NOTE: operation is composing, need to get meta from controller.value\n      const { selection, document } = controller.value;\n      const { key, offset } = selection.focus as TextPoint;\n      return {\n        key,\n        startOffset: offset,\n        startPath: document.getPath(key)!,\n      };\n    }\n    const { path, offset } = operation as InsertTextOperation;\n    const text = value.document.getNodeByPath(path)! as Text;\n    return {\n      key: text.key,\n      startPath: path,\n      startOffset: offset,\n    };\n  },\n  effect: (ops, ctx) => {\n    ops.forEach(({ operation }) => {\n      // send input op\n      if (isSetSelectionOperation(operation)) {\n        return;\n      }\n      controller.inputData$.next({\n        key: ctx.key,\n        startPath: ctx.startPath,\n        startOffset: ctx.startOffset,\n      });\n    });\n    controller.selectionData$.next(getSelectionData(controller));\n  },\n  shouldAppend,\n});\n\nconst pattern: PendingPattern<TextInputContext> = [isTextInput, getPending];\n\nexport default pattern;\n","import { cond } from 'lodash-es';\nimport { stubTrue } from 'lodash-es';\nimport { GetPendingParams, Pending } from '../../interfaces/pending';\nimport textInputPattern from './textinput';\nimport selectionPattern from './selection';\n\nexport default cond<GetPendingParams, Pending<any> | null>([\n  textInputPattern,\n  selectionPattern,\n  [stubTrue, () => null],\n]);\n","import { debounce } from 'lodash-es';\nimport Controller from './index';\nimport { EnablePendingConfig, EnablePending, PendingType, OperationWithValue } from '../interfaces/controller';\nimport {\n  GetPendingParams,\n  Pending,\n  PendingGetter,\n} from '../interfaces/pending';\nimport Value from '../models/value';\nimport getPending from './pendings';\n\nexport interface PendingQueueProps {\n  controller: Controller;\n  debounceTime: number;\n  pendingGetter?: PendingGetter<any>;\n  enablePending: EnablePendingConfig;\n}\n\nexport default class PendingQueue {\n  public static create(props: PendingQueueProps) {\n    return new PendingQueue(props);\n  }\n\n  private operations: OperationWithValue[] = [];\n  private pending: Pending<any> | null = null;\n  private ctx: any;\n  private pendingGetter: PendingGetter<any>;\n  private debouncedFlush: ReturnType<typeof debounce>;\n  private controller: Controller;\n  public value: Value | null = null;\n  public enablePending: EnablePending;\n\n  constructor(props: PendingQueueProps) {\n    const {\n      debounceTime,\n      controller,\n      pendingGetter = getPending,\n      enablePending,\n    } = props;\n\n    this.pendingGetter = pendingGetter;\n    this.controller = controller;\n    this.debouncedFlush = debounce(this.flush, debounceTime);\n\n    if (typeof enablePending === 'boolean') {\n      this.enablePending = Object.values(PendingType).reduce((result, key) => {\n        result[key] = enablePending;\n        return result;\n      }, {});\n    } else {\n      this.enablePending = enablePending;\n    }\n  }\n\n  private get shouldDebouncedFlush() {\n    // 需要周期性倾倒 pending queue 需满足以下条件之一：\n    // 1. 如果驻留有 operation\n    // 2. 如果驻留有堆 isFocused 的设置\n    return this.operations.some(({ operation, key }) => (\n      operation !== null\n      || key === 'isFocused'\n    ));\n  }\n\n  private run(operations: OperationWithValue[]) {\n    const { effect } = this.pending!;\n    this.value = this.controller.value;\n    effect(operations, this.ctx);\n    if (this.shouldDebouncedFlush) {\n      this.debouncedFlush();\n    }\n  }\n\n  private flush = () => {\n    this.controller.flush();\n    this.clear();\n  };\n\n  private isType(type: string) {\n    return this.pending?.type === type;\n  }\n\n  public get type() {\n    return this.pending?.type;\n  }\n\n  public queue(operations: OperationWithValue[]) {\n    const params: GetPendingParams = {\n      controller: this.controller,\n      ops: operations,\n    };\n    const pending = this.pendingGetter(params);\n    if (!pending || !this.enablePending[pending.type]) {\n      // 若 operations 不可 pending，则立即倾倒\n      this.flush();\n      this.controller.dispatchPendingTerminal();\n    } else {\n      const { decorate = () => null, shouldAppend = () => true, type } = pending;\n      if (this.isType(type) && shouldAppend(this.operations, operations)) {\n        // 如果是同类型且可合并的 pending，则合并\n        Array.prototype.push.apply(this.operations, operations);\n        this.run(operations);\n      } else if (!this.pending) {\n        // 如果 pending queue 不存在 pending 对象，则创建\n        this.pending = pending;\n        this.ctx = decorate(operations);\n        this.operations = operations;\n        this.run(operations);\n      } else {\n        // 若产生了不能合并的 pending，则立即倾倒 pending queue\n        this.flush();\n        this.controller.dispatchPendingTerminal();\n      }\n    }\n    return this;\n  }\n\n  public clear() {\n    this.pending = null;\n    this.operations = [];\n    this.debouncedFlush.cancel();\n    return this;\n  }\n\n  public isEmpty() {\n    return this.size() === 0;\n  }\n\n  public size() {\n    return this.operations.length;\n  }\n}\n","import { Injection, Controller, Node } from '../';\nimport { isEmpty, omit } from 'lodash-es';\n\nexport function setInjection (controller: Controller, node: Node, data) {\n  const { injections } = controller.value;\n  const curInjection = injections.find(inj => inj.key === node.key) || {} as Injection;\n  const injection = Injection.create({\n    key: node.key,\n    data: {\n      ...(curInjection.data || {}),\n      ...data,\n    },\n  });\n\n  controller.setInjections([\n    ...injections.filter(inj => inj.key !== node.key),\n    injection,\n  ]);\n};\n\nexport function deleteInjection (controller: Controller, node: Node, keys: string[]) {\n  const { injections } = controller.value;\n  const curInjection = injections.find(inj => inj.key === node.key) || {} as Injection;\n  const nextData = omit(curInjection.data, keys)\n  const nextInjections = injections.filter(inj => inj.key !== node.key)\n  if (!isEmpty(nextData)) {\n    const injection = Injection.create({\n      key: node.key,\n      data: nextData,\n    });\n    nextInjections.push(injection);\n  }\n\n  controller.setInjections(nextInjections);\n};\n","import { isEqual, omit } from 'lodash-es';\nimport * as Commands from '../commands/index';\nimport Element from '../models/element';\nimport Node from '../models/node';\nimport Controller from './index';\nimport { Subject } from '../models/observable';\nimport Operation from '../models/operation';\nimport Document from '../models/document';\nimport { isEmptyObj, omitDeepBy } from '../utils/omitEmpty';\nimport { setInjection, deleteInjection } from '../utils/setInjection';\n\ntype uid = string\ntype uuid = string\nexport type UserData = Record<\n  uid, \n  Record<uuid, UserDataContent>\n>\n\nexport interface UserDataContent {}\n\nexport default class UserDataManager {\n  public update$ = new Subject<{ uuid: string }>();\n\n  private controller: Controller;\n\n  private localData: UserData = {};\n\n  constructor(controller: Controller) {\n    this.controller = controller;\n  }\n\n  public get <T extends keyof UserDataContent>(\n    node: Node | null,\n    key: T,\n  ): UserDataContent[T] | undefined {\n    if (Element.isElement(node)) {\n      const { uid } = this.controller;\n      const uuid: string | undefined = node.data?.uuid;\n      const nData = node.data[key];\n      if (uid && uuid) {\n        const { userData } = this.controller.value.document.data;\n        const uData = userData?.[uid]?.[uuid]?.[key];\n        const lData = this.localData?.[uid]?.[uuid]?.[key];\n        return lData ?? uData ?? nData;\n      }\n      return nData;\n    }\n    return undefined;\n  }\n\n  public set <T extends keyof UserDataContent>(\n    node: Node | null,\n    properties: Record<T, UserDataContent[T]>,\n  ) {\n    if (Element.isElement(node)) {\n      const { uid, value } = this.controller;\n      const { document } = value;\n      const { userData }= document.data;\n      const uuid: string | undefined = node.data?.uuid;\n      if (uid && uuid) {\n        // 有 uid 和 uuid，设置用户数据\n        const data = omitDeepBy({\n          ...document.data,\n          userData: this.mergeProperties(\n            userData,\n            uid,\n            uuid,\n            properties,\n          ),\n        }, isEmptyObj);\n        if (data.userData !== document.data.userData) {\n          return this.controller.withOpContext(`userdata/${uid}/${uuid}`, () => {\n            this.controller.command(Commands.setNodeByKey, document.key, { data });\n          });\n        }\n      } else {\n        // 设置 node.data 数据\n        const n = document.getNode(node?.key);\n        if (n && Element.isElement(n)) {\n          const data = {\n            ...n.data,\n            ...properties,\n          };\n          if (!isEqual(data, n.data)) {\n            return this.controller.withOpContext(`userdata`, () => {\n              this.controller.command(Commands.setNodeByKey, n.key, { data });\n            });\n          }\n        }\n      }\n    }\n    return this.controller;\n  }\n\n  public setLocal <T extends keyof UserDataContent>(\n    node: Node | null,\n    properties: Record<T, UserDataContent[T]>,\n  ) {\n    if (Element.isElement(node)) {\n      const { uid } = this.controller;\n      const uuid: string | undefined = node.data?.uuid;\n      if (uid && uuid) {\n        this.localData = this.mergeProperties(\n          this.localData,\n          uid,\n          uuid,\n          properties,\n        );\n        this.update$.next({ uuid });\n      } else {\n        setInjection(this.controller, node, properties);\n      }\n    }\n    return this.controller;\n  }\n\n  public delete <T extends keyof UserDataContent>(\n    node: Node | null,\n    keys: T[],\n  ) {\n    if (Element.isElement(node)) {\n      const uuid: string | undefined = node.data?.uuid;\n      const { uid, value } = this.controller;\n      const { document } = value;\n      const { userData }= document.data;\n      if (uid && uuid) {\n        const data = omitDeepBy({\n          ...document.data,\n          userData: this.deleteProperties(\n            userData,\n            uid,\n            uuid,\n            keys,\n          ),\n        }, isEmptyObj);\n        if (data.userData !== document.data.userData) {\n          return this.controller.withOpContext(`userdata/${uid}/${uuid}`, () => {\n            this.controller.command(Commands.setNodeByKey, document.key, { data });\n          });\n        }\n      } else {\n        // 删除 node.data 数据\n        const n = document.getNode(node?.key);\n        if (n && Element.isElement(n)) {\n          const data = omit(n.data, keys)\n          if (!isEqual(data, n.data)) {\n            return this.controller.withOpContext(`userdata`, () => {\n              this.controller.command(Commands.setNodeByKey, n.key, { data });\n            });\n          }\n        }\n      }\n    }\n    return this.controller;\n  }\n\n  public deleteLocal <T extends keyof UserDataContent>(\n    node: Node | null,\n    keys: T[],\n  ) {\n    if (Element.isElement(node)) {\n      const { uid } = this.controller;\n      const uuid: string | undefined = node.data?.uuid;\n      if (uid && uuid) {\n        this.localData = this.deleteProperties(\n          this.localData,\n          uid,\n          uuid,\n          keys,\n        )\n        this.update$.next({ uuid });\n      } else {\n        deleteInjection(this.controller, node, keys);\n      }\n    }\n    return this.controller;\n  }\n\n  public flush = (ops: Operation[]) => {\n    this.updateNodes(ops);\n    this.refreshData(ops);\n  }\n\n  public mergeUserData = (target: Document) => {\n    const { uid, value } = this.controller;\n    const { document } = value;\n    const { userData }= document.data;\n    const { userData: targetData } = target.data;\n    if (uid && targetData?.[uid]) {\n      const uuids = Object.keys(targetData[uid]);\n      if (uuids.length > 0) {\n        const data = omitDeepBy({\n          ...document.data,\n          userData: {\n            ...userData || {},\n            [uid]: {\n              ...userData?.[uid] || {},\n              ...targetData[uid],\n            }\n          }\n        }, isEmptyObj)\n        if (data.userData !== document.data.userData) {\n          return this.controller.withOpContext(`userdata/${uid}/${uuids.join(',')}`, () => {\n            this.controller.command(Commands.setNodeByKey, document.key, { data });\n          });\n        }\n      }\n    }\n    return this.controller;\n  }\n\n  private refreshData (ops: Operation[]) {\n    // 根据 OP 类型，刷新 document.data 上数据\n    const { value } = this.controller;\n    const { document } = value;\n    const { userData: originData }= document.data;\n    const uuids: string[] = [];\n    const uids = Object.keys(originData || {});\n    let userData = originData;\n\n    ops.forEach((op) => {\n      // op 是删除节点，将 document.data 中对应数据也删除\n      if (\n        op.type === 'remove_node' &&\n        Element.isElement(op.node) &&\n        !/merge_node|split_node/.test(op.context || '')\n      ) {\n        // 遍历节点及子节点\n        const iterator = (node) => {\n          const uuid = (node as any).data?.uuid;\n          if (Element.isElement(node) && uuid) {\n            uids.forEach((uid) => {\n              userData = this.deleteData(userData, uid, uuid);\n            })\n            if (userData !== originData) {\n              uuids.push(uuid);\n            }\n          }\n        }\n        iterator(op.node);\n        op.node.forEachDescendant(iterator);\n      }\n    });\n\n    // 批量更新\n    if (uuids.length) {\n      const data = omitDeepBy({ ...document.data, userData }, isEmptyObj);\n      this.controller.withOpContext(`userdata/*/${uuids.join(',')}`, () => {\n        this.controller.command(Commands.setNodeByKey, document.key, { data });\n      });\n    }\n  }\n\n  private updateNodes (ops: Operation[]) {\n    ops.forEach((op) => {\n      // update$.next 刷新节点视图\n      const { context } = op;\n      if (op.type === 'set_node') {\n        const matched = context?.match(/userdata\\/(.*)\\/(.*)/);\n        if (matched) {\n          // context 上携带此次修改用户数据的 uid 和块 uuid\n          const uid = matched[1];\n          const uuids = matched[2].split(',');\n          if (uid === this.controller.uid || uid === '*') {\n            uuids.forEach((uuid) => uuid && this.update$.next({ uuid }));\n          }\n        }\n      }\n    })\n  }\n\n  private mergeProperties (\n    data: UserData | undefined,\n    uid: string,\n    uuid: string,\n    properties: Record<string, any>,\n  ): UserData {\n    return {\n      ...data || {},\n      [uid]: {\n        ...data?.[uid] || {},\n        [uuid]: {\n          ...data?.[uid]?.[uuid] || {},\n          ...properties,\n        }\n      }\n    };\n  }\n\n  private deleteData (\n    data: UserData | undefined,\n    uid: string,\n    uuid: string,\n  ): UserData {\n    if (data?.[uid]?.[uuid] !== undefined) {\n      // 删除对应 uuid 下所有数据\n      return {\n        ...data,\n        [uid]: omit(data?.[uid], uuid)\n      }; \n    }\n    return data || {};\n  }\n\n  private deleteProperties (\n    data: UserData | undefined,\n    uid: string,\n    uuid: string,\n    keys: string[],\n  ): UserData {\n    if (typeof data?.[uid]?.[uuid] === 'object') {\n      // 对应 block uuid 下有数据，去除相应 keys 属性\n      return {\n        ...data,\n        [uid]: {\n          ...data?.[uid],\n          [uuid]: omit(data?.[uid]?.[uuid], keys),\n        },\n      }; \n    }\n    return data || {};\n  }\n}\n","export enum PerfType {\n  input = 'input',\n  composing = 'composing',\n  selection = 'selection'\n}\n","/**\n * @packageDocumentation\n * @module Events\n */\ninterface CangjiePerfDetail {\n  /** 性能统计类型 */\n  type: string;\n  /** 耗时 */\n  duration: number;\n  /** 是否掉帧 */\n  dropped?: boolean;\n}\n\ninterface CangjiePerfEvent extends CustomEvent<CangjiePerfDetail> {}\n\nfunction CangjiePerfEvent(detail: CangjiePerfDetail) {\n  return new CustomEvent('cangjiePerf', {\n    detail: {\n      dropped: false,\n      ...detail,\n    },\n  });\n}\n\nexport default CangjiePerfEvent;\n","import { cond } from 'lodash-es';\nimport { stubTrue } from 'lodash-es';\nimport { difference } from 'lodash-es';\nimport { OperationWithValue, PendingType } from '../interfaces/controller';\nimport Operation, {\n  OperationType,\n  InsertTextOperation,\n  SetNodeOperation,\n  InsertNodeOperation,\n  MoveNodeOperation,\n  NonSetSelectionOperation,\n} from '../models/operation';\nimport Path from '../models/path';\nimport Document from '../models/document';\nimport Block from '../models/block';\nimport Node from '../models/node';\nimport Element from '../models/element';\nimport Selection from '../models/selection';\nimport Value from '../models/value';\nimport Controller from '../controller';\nimport { Hot } from '../interfaces/hot';\n\nfunction isTextOp(operation: Operation): operation is InsertTextOperation {\n  return [\n    OperationType.InsertText,\n    OperationType.RemoveText,\n    OperationType.AddMark,\n    OperationType.RemoveMark,\n    OperationType.SetMark,\n  ].includes(operation.type as OperationType);\n}\n\nfunction getHotAmongNodes(\n  srcNodes: (Node | null | string)[],\n  newDoc: Document,\n): Hot[] {\n  return srcNodes\n    .map((srcNode) => {\n      if (!srcNode) {\n        return null;\n      }\n      // 如果操作节点在新的内容无法找到，则不继续查找其热区\n      const node = newDoc.getNode(\n        typeof srcNode === 'string' ? srcNode : srcNode.key,\n      );\n      if (!node) {\n        return null;\n      }\n      return Block.isBlock(node)\n        ? node\n        : newDoc.getClosest(node.key, (node) => Block.isBlock(node));\n    })\n    .filter((node) => !!node)\n    .map((node) => ({\n      node: node as Block,\n      path: newDoc.assertPath(node!.key),\n    }));\n}\n\nfunction getHotsAtRange(\n  range: Selection,\n  afterChangeDoc: Document,\n  ancestorPath: Path = [],\n): Hot[] {\n  let blocks: Block[] = [];\n  if (Path.isRoot(ancestorPath)) {\n    blocks = afterChangeDoc.getRootBlocksAtRange(range);\n  } else {\n    const ancestor = afterChangeDoc.assertNodeByPath(ancestorPath) as Element;\n    const { start, end } = range.convertToTextPoints(afterChangeDoc);\n\n    const startBlock = ancestor.getFurthsest(\n      start.key,\n      Block.isBlock,\n    ) as Block | null;\n    if (!startBlock) {\n      return [];\n    }\n    if (start.key === end.key) {\n      return [\n        {\n          node: startBlock,\n          path: afterChangeDoc.assertPath(startBlock.key),\n        },\n      ];\n    }\n\n    const endBlock = ancestor.getFurthsest(end.key, Block.isBlock);\n    if (!endBlock) {\n      return [];\n    }\n    blocks = ancestor.nodes.slice(\n      ancestor.nodes.indexOf(startBlock),\n      ancestor.nodes.indexOf(endBlock) + 1,\n    ) as Block[];\n  }\n\n  return blocks.map((node) => {\n    return {\n      node,\n      path: afterChangeDoc.assertPath(node.key),\n    };\n  });\n}\n\nfunction getOpHots(\n  op: OperationWithValue,\n  controller: Controller,\n): Hot[] | 'ignore' {\n  const { operation, key, value, newValue } = op;\n  const { document: beforeChangeDoc } = value;\n  const { document: afterChangeDoc } = newValue;\n  const { document: newDoc } = controller.value;\n\n  /* 增量变更热区 */\n  if (operation) {\n    // 文本类型的操作，热区为当前文本所在容器\n    if (isTextOp(operation)) {\n      const { path } = operation;\n      const text = beforeChangeDoc.assertNodeByPath(path);\n      const newText = newDoc.getNode(text.key);\n      return getHotAmongNodes([newText], newDoc);\n    }\n    // 节点子孙的变更：插入/删除/分裂/合并，热区为变更所在的节点\n    else if (\n      operation.type === OperationType.InsertNode ||\n      operation.type === OperationType.RemoveNode ||\n      operation.type === OperationType.SplitNode ||\n      operation.type === OperationType.MergeNode\n    ) {\n      const { path } = operation as InsertNodeOperation;\n      const parent = beforeChangeDoc.assertNodeByPath(Path.parent(path));\n      return getHotAmongNodes([parent], newDoc);\n    }\n    // 设置节点\n    // 1. 若改变节点内容\n    //   a. 若变更不影响分组，则热区为被设置的节点\n    //   b. 若变更影响分组，则热区设置为上游节点\n    // 2. 若改变节点类型，可能影响上游分组，热区为设置节点的 parent\n    else if (operation.type === OperationType.SetNode) {\n      const {\n        path,\n        properties,\n        prevProperties,\n      } = operation as SetNodeOperation;\n      if (\n        properties.type !== prevProperties.type\n      ) {\n        return getHotAmongNodes(\n          [beforeChangeDoc.assertNodeByPath(Path.parent(path))],\n          newDoc,\n        );\n      }\n      return getHotAmongNodes([beforeChangeDoc.assertNodeByPath(path)], newDoc);\n    }\n    // 移动节点，热区为：\n    // 1. 起始节点的 parent\n    // 2. 结束节点的 parent\n    else if (operation.type === OperationType.MoveNode) {\n      const { path, newPath } = operation as MoveNodeOperation;\n      return getHotAmongNodes(\n        [\n          beforeChangeDoc.assertNodeByPath(Path.parent(path)),\n          beforeChangeDoc.assertNodeByPath(Path.parent(newPath)),\n        ],\n        newDoc,\n      );\n    }\n    // 设置选区，热区为跨越选区的所有最高层 block\n    else if (operation.type === OperationType.SetSelection) {\n      const { selection, prevSelection } = operation;\n      return getHotsAtRange(prevSelection, afterChangeDoc).concat(\n        getHotsAtRange(selection, afterChangeDoc),\n      );\n    }\n  } else {\n    /* 全量变更热区 */\n\n    // 输入法的热区为输入法所在文本的容器\n    if (key === 'composing') {\n      return getHotAmongNodes([value.startText], newDoc);\n    }\n\n    // focus 状态不影响热区\n    if (key === 'isFocused') {\n      return 'ignore';\n    }\n\n    // injections 变更，找到变更前后的受影响的节点所在的热区\n    if (key === 'injections') {\n      return getHotAmongNodes(\n        [\n          ...difference(newValue.injections, value.injections),\n          ...difference(value.injections, newValue.injections),\n        ].map((inj) => inj.key),\n        newDoc,\n      );\n    }\n\n    // decorations 变更，找到变更前后受影响的区间所在的热区\n    if (key === 'decorations') {\n      return [\n        ...difference(newValue.decorations, value.decorations),\n        ...difference(value.decorations, newValue.decorations),\n      ]\n        .map((decoration) =>\n          Selection.create({\n            anchor: decoration.start,\n            focus: decoration.end,\n          }),\n        )\n        .reduce<Hot[]>((hots, range) => {\n          hots.push(...getHotsAtRange(range, afterChangeDoc));\n          return hots;\n        }, []);\n    }\n  }\n\n  return [];\n}\n\n/**\n * 如果在 hots 找到祖先或者自己，则不再添加\n * @param path\n * @returns\n */\nfunction isExistedHot(path: Path, searchTable: Set<string>) {\n  const ancestorsAndSelf = Path.ancestors(path).slice(1);\n  ancestorsAndSelf.push(path);\n  return ancestorsAndSelf.some((p) => searchTable.has(p.join(',')));\n}\n\n/**\n * 获得变更热区\n * @param srcOps\n * @param controller\n * @returns\n */\nexport function getHots(\n  srcOps: OperationWithValue[],\n  controller: Controller,\n): Hot[] {\n  try {\n    const ops = srcOps.filter(\n      ({ operation }) => !operation || operation.type !== 'set_selection',\n    );\n\n    // 所有热区\n    const all: Hot[] = [];\n    // 去重热区，仅保留最高级祖先\n    const uniq: Hot[] = [];\n    /**\n     * 用于 hots 去重的查找表\n     * ```\n     * {\n     *   '0,1,0': true,\n     *   '1,0': true,\n     * }\n     * ```\n     */\n    const searchTable = new Set<string>();\n\n    for (let i = 0; i < ops.length; i++) {\n      const op = ops[i];\n      const hots = getOpHots(op, controller);\n      if (hots === 'ignore') {\n        continue;\n      }\n      // 如果任意 op 未找到热区，即变更影响了全局，提前返回\n      if (!hots.length) {\n        return [];\n      }\n\n      all.push(...hots);\n    }\n\n    const {\n      selection: prevSelection,\n      document: prevDocument,\n    } = srcOps[0].value;\n    const { selection, document } = controller.value;\n\n    // 选区发生变更时，计算热区\n    if (prevSelection !== selection) {\n      // 获得变更前选区所在的节点\n      const prevSelectionIn = prevSelection.getClosestNode(prevDocument)!;\n      const prevSelectionInPath = prevDocument.assertPath(prevSelectionIn.key);\n      const selectionIn = selection.getClosestNode(document)!;\n      const selectionInPath = document.assertPath(selectionIn.key);\n\n      const ancestor = Path.common(prevSelectionInPath, selectionInPath);\n      // 如果在同节点移动，热区仅放入新选区所在的节点\n      if (Path.isEqual(prevSelectionInPath, selectionInPath)) {\n        all.push({\n          node: selectionIn,\n          path: selectionInPath,\n        });\n      }\n      // 如果是平层移动，放入老/新选区所在的节点\n      else if (Path.isSibling(prevSelectionInPath, selectionInPath)) {\n        all.push({\n          node: prevSelectionIn,\n          path: prevSelectionInPath,\n        });\n        all.push({\n          node: selectionIn,\n          path: selectionInPath,\n        });\n      }\n      // 否则放入新老选区各自所在的，直到公共祖先的节点，保证节点子树每个节点的选中态都符合预期\n      else {\n        all.push(...getHotsAtRange(prevSelection, document, ancestor));\n        all.push(...getHotsAtRange(selection, document, ancestor));\n      }\n    }\n\n    all.sort((a, b) => a.path.length - b.path.length);\n    all.forEach((hot) => {\n      if (!isExistedHot(hot.path, searchTable)) {\n        uniq.push(hot);\n        searchTable.add(hot.path.join(','));\n      }\n    });\n\n    return uniq;\n  } catch (_e) {\n    // 热区计算失败时，清空热区\n    return [];\n  }\n}\n\ninterface FlushContext {\n  operations: OperationWithValue[];\n  value: Value;\n}\n\nconst FIELD_SHOULD_NOT_BREAK_PENDING = [\n  'decorations',\n  'injections',\n  'remoteSelections',\n  'selection'\n];\n\n/**\n * 是否是文本输入\n * @param context\n * @returns\n */\nexport function isInputing(context: FlushContext) {\n  const { operations, value } = context;\n  if (value.selection.isExpanded) {\n    return false;\n  }\n  const rest = operations.filter(operation => {\n    return operation.operation || !FIELD_SHOULD_NOT_BREAK_PENDING.includes(operation.key as string) \n  });\n\n  if (!rest.length) {\n    return false;\n  }\n\n  // PERF: for-loop\n  const opsLen = rest.length;\n  let path: Path | null = null;\n  for (let i = 0; i < opsLen; i++) {\n    const { operation } = rest[i];\n    if (!operation) {\n      return false;\n    }\n    if (operation.type === 'set_selection') {\n      continue;\n    }\n    const op = operation as NonSetSelectionOperation;\n    if (!path) {\n      path = op.path;\n    }\n    // 在同一个文本连续输入/删除时，可以 pending\n    if (\n      (op.type !== 'insert_text' && op.type !== 'remove_text') ||\n      !Path.isEqual(path, op.path)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * 是否是设置选区\n * @param context\n * @returns\n */\nexport function isSelecting(context: FlushContext) {\n  return context.operations.every(({ operation, key }, index) => {\n    if (index === 0 && !operation) {\n      return key === 'isFocused' && context.value.isFocused;\n    }\n\n    return operation && operation.type === 'set_selection';\n  });\n}\n\n/**\n * 是否在输入法\n * @param context\n * @returns\n */\nexport function isComposing(context: FlushContext) {\n  const { composing } = context.value;\n  return !!composing.length;\n}\n\n/**\n * 对于需要以动画速率运行的变更，周期性倾倒：\n * 1. 输入/删除文本\n * 2. 拖动选区\n *\n * ```plaintext\n *    +-------+       +-------+      +-------+     +-------+     +-------+\n *    |   h   |       |   e   |      |   l   |     |   l   |     |   o   |\n *    +-------+       +-------+      +-------+     +-------+     +-------+\n *        |               |              |             |             |\n *        v               v              v             v             v\n *    .-------.       .-------.      .-------.     .-------.     .-------.\n *   (  flush  )     (  flush  )    (  flush  )   (  flush  )   (  flush  )\n *    `-------'       `-------'      `-------'     `-------'     `-------'\n *\n *                                        |\n *                                        |\n *                                 debounced flush\n *                                        |\n *                                        v\n * + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +\n *    +-------+       +-------+      +-------+     +-------+     +-------+\n * |  |   h   |       |   e   |      |   l   |     |   l   |     |   o   | |\n *    +-------+       +-------+      +-------+     +-------+     +-------+\n * + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +\n *                                                                   |\n *                                                                   v\n *                                                               .-------.\n *                                                              (  flush  )\n *                                                               `-------'\n * ```\n * @param context\n * @returns\n */\nexport const shouldDebounceFlush = cond<FlushContext, PendingType | null>([\n  [isSelecting, () => PendingType.selection],\n  [isInputing, () => PendingType.input],\n  [stubTrue, () => null],\n]);\n\n/**\n * 对于输入法等类型的临时变更，不进行 flush\n *\n * ```plaintext\n *  +-------+      +-------+     +-------+\n *  |   n   |      |   i   |     |   你   |\n *  +-------+      +-------+     +-------+\n *      |              |             |\n *      v              v             v\n *  .-------.      .-------.     .-------.\n * (  flush  )    (  flush  )   (  flush  )\n *  `-------'      `-------'     `-------'\n *\n *                      |\n *                      |\n *               suppress flush\n *                      |\n *                      v\n *                  +-------+\n *                  |   你   |\n *                  +-------+\n *                      |\n *                      v\n *                  .-------.\n *                 (  flush  )\n *                  `-------'\n * ```\n * @param context\n * @returns\n */\nexport const shouldSuppressFlush = cond<FlushContext, PendingType | null>([\n  [isComposing, () => PendingType.input],\n  [stubTrue, () => null],\n]);\n","import { EVENTS } from '../../constants'\n\nconst EVENTS_SET = new Set(EVENTS);\nexport default function isEventHandler(name: string) {\n  return EVENTS_SET.has(name);\n}","export const DEFAULT_BUFFER_RANGE = 500;\nexport const BLOCK_DEFAULT_MIN_HEIGHT = 25;\nexport const DEFAULT_SCROLL_THROTTLE_INTERVAL = 50;\nexport const DEFAULT_FIRST_PAINT_BLOCK_SIZE = 10;","export type QueryFunc = () => Element | null;\n\n/**\n * 循环查询元素\n * @param selector query 函数\n * @param remain 剩余时间\n */\n export function waitForElementByAnimationFrame(\n    selector: QueryFunc | string,\n    remain = 1000,\n  ) { \n    const start = Date.now();\n    return new Promise<Element>((resolve, reject) => {\n      if (remain < 0) {\n        if (typeof selector === 'function') {\n          return reject(`waitForElementByAnimationFrame: element wait timeout`);\n        }\n        return reject(`waitForElementByAnimationFrame： ${selector} wait timeout`);\n      }\n      const element = typeof selector === 'function' ? selector() : window.document.querySelector(selector);\n      if (element) {\n        return resolve(element);\n      } else {\n        window.requestAnimationFrame(() => {\n          const cost = Date.now() - start;\n          const nextRemain = remain - cost;\n          waitForElementByAnimationFrame(selector, nextRemain)\n            .then(resolve)\n            .catch(reject);\n        });\n      }\n    });\n  }\n\n  export function scrollContainerIsTop(scrollContainer: HTMLElement | Window | Document) {\n    return scrollContainer === document.body || scrollContainer === document.documentElement || scrollContainer === window\n  }\n\n  export function checkArrayAHasElementNotIncludedInArrayB(arrayA: string[], arrayB: string[]) {\n    return arrayA.some((arrayAElement) => {\n      return !arrayB.includes(arrayAElement);\n    });\n  }","import { BLOCK_DEFAULT_MIN_HEIGHT } from \"./constants\";\nimport NodeManager from \"./nodeManager\";\nimport Document from '../models/document';\nimport { LayoutInfoResult } from \"./interface\";\nimport { scrollContainerIsTop } from \"./virtualizeUtils\";\n\nfunction formatMarginFromStyle(margin: string) {\n  const result = parseFloat(margin);\n  if (isNaN(result)) {\n    return 0;\n  }\n  return result;\n}\n\nexport function measureBlockInfo(element: HTMLElement) {\n  // offsetHeight 一定是正数, boundingClientRect 可能是小数，和 mutationObserver 的对应\n  const boundingClientRect = element.getBoundingClientRect();\n  const computedStyle = window.getComputedStyle(element);\n  // TODO: 专门为节点搞一个隐藏态，隐藏前的高度也记录，而非直接变 0\n  const isVisible = computedStyle.display !== 'none';\n\n  return {\n    height: isVisible ? boundingClientRect.height : 0,\n    marginTop: isVisible ? formatMarginFromStyle(computedStyle?.marginTop) : 0,\n    marginBottom: isVisible ? formatMarginFromStyle(computedStyle?.marginBottom) : 0,\n  }\n}\n\ninterface DiffResult {\n  type: 'equal' | 'changed' | 'translation';\n  offset?: number;\n}\n\nexport function calculateViewPort(\n  scrollElement: HTMLElement,\n  scrollContainer: HTMLElement,\n  bufferRange: number,\n  editorContainerToScrollContainerDistance: number,\n  _viewPortStartY?: number,\n) {\n  let { scrollTop } = scrollElement;\n  if (scrollContainer === document.documentElement && scrollTop === 0 && document.body.scrollTop > 0) {\n    scrollTop = document.body.scrollTop;\n  }\n  const viewPortStartY = typeof _viewPortStartY === 'number' ? _viewPortStartY : scrollTop - editorContainerToScrollContainerDistance;\n  const viewPortEndY = viewPortStartY + (scrollContainerIsTop(scrollContainer) ? window.innerHeight : scrollContainer.offsetHeight);\n  const bufferStartY = Math.max(0, viewPortStartY - bufferRange);\n  const bufferEndY = viewPortEndY + bufferRange;\n\n  return {\n    viewPortStartY,\n    viewPortEndY,\n    bufferStartY,\n    bufferEndY,\n  };\n}\n\n/**\n * 计算编辑器容器到最近的滚动容器的距离\n * 编辑器容器是各种计算的原点，而视口是基于滚动容器\n * 在滚动容器高度发生变化时需要重算，典型场景是 插入封面\n * 检测这个变化非常难，目前想到两种方案，一是开发者手动触发，二是 scrollContainer 下包一层大容器，监听这个容器高度的变化\n */\nexport function calculateEditorContainerToScrollContainerDistance(\n  editorContainer: HTMLElement,\n  scrollContainer: HTMLElement,\n  scrollElement: HTMLElement,\n  scrollContainerIsBody: boolean,\n) {\n  const editorContainerRect = editorContainer.getBoundingClientRect();\n  const scrollContainerRect = scrollElement.getBoundingClientRect();\n  const editorContainerStyle = window.getComputedStyle(editorContainer);\n  const editorContainerToScrollContainerDistance = scrollContainerIsBody ?\n    editorContainerRect.top - scrollContainerRect.top :\n    editorContainerRect.top - scrollContainerRect.top + scrollElement.scrollTop;\n  return editorContainerToScrollContainerDistance + formatMarginFromStyle(editorContainerStyle.paddingTop) + formatMarginFromStyle(editorContainerStyle.borderTopWidth);\n}\n\nexport function calculateExpectedLayoutInfo(\n  bufferStartY: number,\n  bufferEndY: number,\n  viewStartY: number,\n  view: Document,\n  nodeManager: NodeManager,\n): LayoutInfoResult {\n  const nodeSize = view.nodes.length;\n  let accHeight = 0;\n  let lastMarginBottom = 0;\n\n  let expectedBufferStartBlockFound = false;\n  let expectedViewStartBlockFound = false;\n  let expectedBufferEndBlockFound = false;\n  let expectedBufferStartBlockOffset = 0;\n  let expectedViewStartBlockOffset = 0;\n  let expectedBufferEndBlockOffset = nodeSize - 1;\n  let expectedBufferStartBlockY = 0;\n  let expectedViewStartBlockY = 0;\n  let expectedBufferEndBlockY = 0;\n\n  for (let i = 0; i < nodeSize; i++) {\n    const block = view.nodes[i];\n    const cachedBlockProps = nodeManager.getCachedBlockPropsByKey(block.key);\n    const {\n      height: inputHeight,\n      marginTop: inputMarginTop,\n      marginBottom: inputMarginBottom\n    } = cachedBlockProps || {};\n    const marginTop = typeof inputMarginTop === 'number' ? (\n      inputMarginTop > lastMarginBottom ? inputMarginTop - lastMarginBottom : 0\n    ) : 0;\n    const height = typeof inputHeight === 'number' ? inputHeight : BLOCK_DEFAULT_MIN_HEIGHT;\n    const marginBottom = typeof inputMarginBottom === 'number' ? inputMarginBottom : 0;\n\n    lastMarginBottom = marginBottom;\n    const lastAccHeight = accHeight;\n    accHeight += marginTop + height + marginBottom;\n    if (\n      !expectedBufferStartBlockFound &&\n      (lastAccHeight < bufferStartY || i === 0) && accHeight >= bufferStartY\n    ) {\n      expectedBufferStartBlockFound = true;\n      expectedBufferStartBlockOffset = i;\n      expectedBufferStartBlockY = lastAccHeight;\n    }\n    if (\n      !expectedViewStartBlockFound &&\n      (lastAccHeight < viewStartY || i === 0) && accHeight >= viewStartY\n    ) {\n      expectedViewStartBlockFound = true;\n      expectedViewStartBlockOffset = i;\n      expectedViewStartBlockY = lastAccHeight;\n    }\n    if (\n      !expectedBufferEndBlockFound &&\n      lastAccHeight < bufferEndY && accHeight >= bufferEndY\n    ) {\n      expectedBufferEndBlockFound = true;\n      expectedBufferEndBlockOffset = i;\n      expectedBufferEndBlockY = accHeight;\n    }\n  }\n\n  if (!expectedBufferEndBlockFound) {\n    expectedBufferEndBlockY = accHeight;\n    expectedBufferEndBlockOffset = nodeSize;\n  }\n\n  if (!expectedViewStartBlockFound) {\n    expectedViewStartBlockOffset = nodeSize - 1;\n  }\n\n  // 极端情况，例如划到评论框，远远超出视口范围\n  if (!expectedBufferEndBlockFound && !expectedBufferStartBlockFound) {\n    if (bufferEndY < 0) {\n      expectedBufferEndBlockOffset = -1;\n      expectedBufferStartBlockOffset = -1;\n      expectedBufferStartBlockY = 0;\n      expectedBufferEndBlockY = 0;\n    } else {\n      expectedBufferEndBlockOffset = nodeSize;\n      expectedBufferStartBlockOffset = nodeSize;\n      expectedBufferStartBlockY = accHeight;\n      expectedBufferEndBlockY = accHeight;\n    }\n  }\n\n  return {\n    expectedBufferStartBlockOffset,\n    expectedViewStartBlockOffset,\n    expectedBufferEndBlockOffset,\n    expectedBufferStartBlockY,\n    expectedViewStartBlockY,\n    expectedBufferEndBlockY,\n    accHeight,\n  }\n}\n\nexport function calculateBlockStartYByBlockIndex(\n  blockIndex: number,\n  view: Document,\n  nodeManager: NodeManager,\n  includeLastMarginBottom = false,\n) {\n  let accHeight = 0;\n  let lastMarginBottom = 0;\n\n  for (let i = 0; i < blockIndex; i++) {\n    const block = view.nodes[i];\n    const cachedBlockProps = nodeManager.getCachedBlockPropsByKey(block.key);\n    const {\n      height: inputHeight,\n      marginTop: inputMarginTop,\n      marginBottom: inputMarginBottom\n    } = cachedBlockProps || {};\n    const marginTop = typeof inputMarginTop === 'number' ? (\n      inputMarginTop > lastMarginBottom ? inputMarginTop - lastMarginBottom : 0\n    ) : 0;\n    const height = typeof inputHeight === 'number' ? inputHeight : BLOCK_DEFAULT_MIN_HEIGHT;\n    const marginBottom = typeof inputMarginBottom === 'number' ? inputMarginBottom : 0;\n\n    lastMarginBottom = marginBottom;\n    accHeight += marginTop + height + ((includeLastMarginBottom || (i < blockIndex - 1)) ? marginBottom : 0);\n  }\n\n  return accHeight;\n}\n\nexport const fastDiffOnValueChange = ((\n  prevView: Document,\n  currView: Document,\n  startBlockKey: string,\n  startBlockOffset: number,\n  endBlockOffset: number,\n): DiffResult => {\n  if (prevView === currView) {\n    return {\n      type: 'equal',\n    };\n  }\n  const oldStartKeyNewPath = currView.getPath(startBlockKey);\n  if (!(oldStartKeyNewPath && oldStartKeyNewPath.length === 1)) {\n    return {\n      type: 'changed',\n    };\n  }\n  const startKeyOffsetChange = oldStartKeyNewPath[0] - startBlockOffset;\n  for (let i = startBlockOffset + 1; i <= endBlockOffset; i++) {\n    const prevBlock = prevView.nodes[i];\n    const currBlock = currView.nodes[i + startKeyOffsetChange];\n    if (prevBlock?.key !== currBlock?.key) {\n      return {\n        type: 'changed',\n      };\n    }\n  }\n\n  if (startKeyOffsetChange === 0) {\n    if (endBlockOffset >= prevView.nodes.length - 1 && currView.nodes[endBlockOffset + 1]) {\n      return {\n        type: 'changed',\n      };\n    }\n    return {\n      type: 'equal',\n    }\n  }\n\n  // 用户视口在顶端，且在文章之前插入节点的情况\n  if (startBlockOffset === 0 && startKeyOffsetChange > 0) {\n    return {\n      type: 'changed',\n    };\n  }\n\n  return {\n    type: 'translation',\n    offset: startKeyOffsetChange,\n  }\n})\n\n\nexport function calculateBlockKeysNeedToMeasure(\n  view: Document,\n  _prevView: Document,\n  layoutInfoResult: LayoutInfoResult,\n  prevLayoutInfoResult?: LayoutInfoResult | null,\n) {\n  const {\n    expectedBufferStartBlockOffset,\n    expectedBufferEndBlockOffset,\n  } = layoutInfoResult;\n  const prevView = _prevView || view;\n  if (!prevLayoutInfoResult) {\n    return view.nodes.map((node) => node.key).slice(expectedBufferStartBlockOffset, expectedBufferEndBlockOffset + 1);\n  }\n  const {\n    expectedBufferStartBlockOffset: prevExpectedBufferStartBlockOffset,\n    expectedBufferEndBlockOffset: prevExpectedBufferEndBlockOffset,\n  } = prevLayoutInfoResult;\n  // 当内容没有变化时，使用更快的算法\n  if (prevView === view) {\n    if (expectedBufferStartBlockOffset < prevExpectedBufferStartBlockOffset) {\n      const endIndex = Math.min(expectedBufferEndBlockOffset + 1, prevExpectedBufferStartBlockOffset);\n      return view.nodes.map((node) => node.key).slice(expectedBufferStartBlockOffset, endIndex);\n    } else if (expectedBufferEndBlockOffset > prevExpectedBufferEndBlockOffset) {\n      const startIndex = Math.max(expectedBufferStartBlockOffset, prevExpectedBufferEndBlockOffset + 1);\n      return view.nodes.map((node) => node.key).slice(startIndex, expectedBufferEndBlockOffset + 1);\n    }\n    return [];\n  } else {\n    const prevVisibleKeys = prevView.nodes.slice(prevExpectedBufferStartBlockOffset, prevExpectedBufferEndBlockOffset + 1).map((node) => node.key);\n    const currentVisibleKeys = view.nodes.slice(expectedBufferStartBlockOffset, expectedBufferEndBlockOffset + 1).map((node) => node.key);\n    const newBlockKeys: string[] = [];\n    currentVisibleKeys.forEach((key) => {\n      if (!prevVisibleKeys.includes(key)) {\n        newBlockKeys.push(key);\n      }\n    });\n    return newBlockKeys;\n  }\n}\n","import Controller from '../controller';\nimport Block from '../models/block';\nimport type { MeasureBlocksResult, BlockInfo } from './interface';\n\nexport interface NodeManagerOption {\n  controller: Controller;\n}\n\nexport default class NodeManager {\n  private controller: Controller;\n  private blockCacheByKey: Map<string, BlockInfo> = new Map();\n  private blockKeyQueue: string[] = [];\n\n  constructor(options: NodeManagerOption) {\n    const { controller } = options;\n    this.controller = controller;\n  }\n\n  public getCachedBlockPropsByKey(key: string) {\n    return this.blockCacheByKey.get(key);\n  }\n\n  public gc() {\n    const { view } = this.controller;\n    const viewTopBlockLength = view.nodes.length;\n    if (this.blockKeyQueue.length > viewTopBlockLength) {\n      const gcBlockKeyQueue = this.blockKeyQueue.splice(0, this.blockKeyQueue.length - viewTopBlockLength);\n      gcBlockKeyQueue.forEach((key) => {\n        this.blockCacheByKey.delete(key);\n      });\n    }\n  }\n\n  public setCachedBlockPropsByKey(key: string, blockInfo: BlockInfo) {\n    const prevBlockInfo = this.blockCacheByKey.get(key);\n    this.blockCacheByKey.set(key, {\n      ...prevBlockInfo,\n      ...blockInfo,\n    });\n    \n    var index = this.blockKeyQueue.indexOf(key);\n    if (index !== -1) {\n      this.blockKeyQueue.splice(index, 1);\n    }\n    this.blockKeyQueue.push(key);\n    this.gc();\n    return;\n  }\n\n  public loadMeasureResult(measureResults: MeasureBlocksResult) {\n    const document = this.controller.view;\n    for (const key in measureResults) {\n      const prevBlockInfo: BlockInfo = this.blockCacheByKey.get(key) || {\n        key,\n        persistStateNode: [],\n      };\n      const measureResult = measureResults[key];\n      const block = document.getNode(key) as Block;\n      const blockInfo: BlockInfo = {\n        ...prevBlockInfo,\n        ...measureResult, \n        key,\n        uuid: block?.data?.uuid,\n      };\n      this.setCachedBlockPropsByKey(key, blockInfo);\n    }\n  }\n\n  public getVirtualizePersistState(key: string) {\n    const blockCache = this.blockCacheByKey.get(key);\n    if (!blockCache?.persistStateNode) {\n      return [];\n    }\n    return blockCache.persistStateNode;\n  }\n\n  public updateVirtualizePersistState(key: string, topBlockKey: string, shouldPersistState: boolean) {\n    const blockCache = this.getCachedBlockPropsByKey(topBlockKey);\n    const persistStateNode = blockCache?.persistStateNode?.slice() || [];\n    const keyIndex = persistStateNode.indexOf(key);\n    if (shouldPersistState && keyIndex === -1) {\n      persistStateNode.push(key);\n    }\n    if (!shouldPersistState && keyIndex >= 0) {\n      persistStateNode.splice(keyIndex, 1);\n    }\n\n    this.setCachedBlockPropsByKey(topBlockKey, {\n      ...blockCache,\n      key: topBlockKey,\n      persistStateNode,\n    });\n  }\n\n}","import Document from \"../models/document\";\nimport Controller from \"../controller\";\nimport Block from \"../models/block\";\nimport NodeManager from \"./nodeManager\";\n\nimport { BLOCK_DEFAULT_MIN_HEIGHT, DEFAULT_FIRST_PAINT_BLOCK_SIZE } from './constants';\nimport { LayoutInfoResult, BlockFinalVisibleState, VisiblesResult } from \"./interface\";\n\ninterface OutputManagerOptions {\n  controller: Controller;\n  nodeManager: NodeManager;\n  firstPaintBlockSize?: number;\n}\n\n\nexport default class OutputManager {\n  private controller: Controller;\n  private nodeManager: NodeManager;\n  private firstPaintBlockSize: number;\n\n  // 暂时以 offset 为标准\n  public startBlockOffset!: number;\n  public endBlockOffset!: number;\n  public startBlockKey?: string;\n  public endBlockKey?: string;\n\n  public startViewBlockOffset = 0;\n\n  public beforePlaceholderHeight = 0;\n  public afterPlaceholderHeight = 0;\n\n  constructor(options: OutputManagerOptions) {\n    const { nodeManager, controller, firstPaintBlockSize } = options;\n    this.controller = controller;\n    this.nodeManager = nodeManager;\n    this.firstPaintBlockSize = typeof firstPaintBlockSize === 'number' ? firstPaintBlockSize : DEFAULT_FIRST_PAINT_BLOCK_SIZE;\n    this.setStartEndInfoByOffset(0, this.firstPaintBlockSize - 1);\n    this.setPlaceholderHeight();\n  }\n\n  public precheckOutputByLayoutInfo(layoutInfoResult: LayoutInfoResult) {\n    const {\n      expectedBufferStartBlockOffset,\n      expectedBufferEndBlockOffset,\n      expectedBufferStartBlockY,\n      expectedBufferEndBlockY,\n      accHeight,\n    } = layoutInfoResult;\n    const {\n      beforePlaceholderHeight,\n      afterPlaceholderHeight,\n    } = this.calculatePlaceholderHeight(expectedBufferStartBlockY, expectedBufferEndBlockY, accHeight);\n\n    const visibles = this.calculateVisibles(expectedBufferStartBlockOffset, expectedBufferEndBlockOffset);\n    return {\n      beforePlaceholderHeight,\n      afterPlaceholderHeight,\n      visibles,\n    };\n  }\n\n  public loadCalculateLayoutInfo(layoutInfoResult: LayoutInfoResult) {\n    const {\n      expectedBufferStartBlockOffset,\n      expectedBufferEndBlockOffset,\n      expectedBufferStartBlockY,\n      expectedBufferEndBlockY,\n      expectedViewStartBlockOffset,\n      accHeight,\n    } = layoutInfoResult;\n    this.setStartEndInfoByOffset(expectedBufferStartBlockOffset, expectedBufferEndBlockOffset);\n    this.setPlaceholderHeight(expectedBufferStartBlockY, expectedBufferEndBlockY, accHeight);\n    this.startViewBlockOffset = expectedViewStartBlockOffset;\n  }\n\n  private calculatePlaceholderHeight(expectedBlockStartY?: number, expectedBlockEndY?: number, accHeight?: number) {\n    if (typeof expectedBlockStartY === 'number' && typeof expectedBlockEndY === 'number' && typeof accHeight === 'number') {\n      return {\n        beforePlaceholderHeight: expectedBlockStartY,\n        afterPlaceholderHeight: accHeight - expectedBlockEndY,\n      };\n    }\n\n    return {\n      beforePlaceholderHeight: 0,\n      afterPlaceholderHeight: Math.max(0, this.controller.view.nodes.length - this.firstPaintBlockSize) * BLOCK_DEFAULT_MIN_HEIGHT,\n    };\n  }\n\n  public setPlaceholderHeight(expectedBlockStartY?: number, expectedBlockEndY?: number, accHeight?: number) {\n    if (typeof expectedBlockStartY === 'number' && typeof expectedBlockEndY === 'number' && typeof accHeight === 'number') {\n      this.beforePlaceholderHeight = expectedBlockStartY;\n      this.afterPlaceholderHeight = accHeight - expectedBlockEndY;\n      return;\n    }\n\n    this.afterPlaceholderHeight = Math.max(0, this.controller.view.nodes.length - this.firstPaintBlockSize) * BLOCK_DEFAULT_MIN_HEIGHT;\n    return;\n  }\n\n  public setStartEndInfoByOffset(startOffset: number, endOffset: number) {\n    const view = this.controller.view;\n    this.startBlockOffset = startOffset;\n    this.endBlockOffset = endOffset;\n    const startBlock = view.getNodeByPath([startOffset]) as Block;\n    const endBlock = view.getNodeByPath([endOffset]) as Block;\n    this.startBlockKey = startBlock?.key;\n    this.endBlockKey = endBlock?.key;\n  }\n\n  private calculateVisibles(startBlockOffset: number, endBlockOffset: number) {\n    const { view } = this.controller;\n    const visibleBlockKeys: string[] = [];\n    const blockFinalVisibleStates = view.nodes.map((node, index) => {\n      if (index < startBlockOffset || index > endBlockOffset) {\n        const cachedBlockProps = this.nodeManager.getCachedBlockPropsByKey(node.key);\n        if (cachedBlockProps?.persistStateNode && cachedBlockProps.persistStateNode.length > 0) {\n          return 'hide';\n        }\n        return 'destroy';\n      }\n      visibleBlockKeys.push(node.key);\n      return 'show';\n    });\n    return {\n      blockFinalVisibleStates,\n      visibleBlockKeys,\n    }\n  }\n\n  // todo: cache\n  get visibles(): VisiblesResult {\n    const result = this.calculateVisibles(this.startBlockOffset, this.endBlockOffset);\n    return result;\n  }\n\n}","/**\n * @packageDocumentation\n * @module domUtils\n */\n\n/**\n * 查找 node 节点下 first/last 的 Text 节点\n * @param node 查找的节点\n * @param order 遍历的顺序 pre-前序遍历 post-后序遍历\n */\nfunction findTextNode(node: Node, order: 'pre' | 'post' = 'pre'): Text | null {\n  const childNodes =\n    order === 'post' ? Array.from(node.childNodes).reverse() : node.childNodes;\n  for (let i = 0; i < childNodes.length; i += 1) {\n    const child = childNodes[i];\n    if (child instanceof Text) {\n      return child;\n    }\n    const text = findTextNode(child, order);\n    if (text instanceof Text) {\n      return text;\n    }\n  }\n  return null;\n}\n\n/**\n * 获取 DOM 的真实选区\n * @param root\n * @description 由于编辑器层没有浏览器的选区，所以使用 mark 的方式自行构造选区\n */\nexport default function findCurrentDOMRange(\n  root: HTMLElement | Document = window.document,\n): Range | null {\n  const nodes = root.querySelectorAll('[data-cangjie-range');\n  if (nodes.length <= 0) {\n    return null;\n  }\n  const range = document.createRange();\n  const start = nodes[0];\n  const end = nodes[nodes.length - 1];\n  const anchor = findTextNode(start, 'pre');\n  const focus = findTextNode(end, 'post');\n  if (!anchor || !focus) {\n    return null;\n  }\n  try {\n    range.setStart(anchor, 0);\n    range.setEnd(focus, Math.max(focus.length, 0));\n  } catch (error) {\n    return null;\n  }\n  return range;\n}\n","/**\n * @packageDocumentation\n * @module domUtils\n */\nimport Controller from '../../controller/index';\nimport caretRangeFromTargetAndCoord from './caretRangeFromTargetAndCoord';\n\n/**\n * 根据用户的 click 或 touch 事件获取仓颉的 Selection\n */\nfunction findRangeByEvent(\n  event: { x: number; y: number; target: EventTarget },\n  controller: Controller,\n) {\n  const { target, x, y } = event;\n  return caretRangeFromTargetAndCoord(target, x, y, controller);\n}\n\nexport default findRangeByEvent;\n","import { Selector } from '../../constants';\n\nexport type Rect = {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\ntype RectRow = {\n  top: number;\n  height: number;\n};\n\n/**\n * 遍历节点内的每一个 cangjie content 节点，获取 getClientRects 列表\n */\nfunction getDOMRects(node: Element) {\n  const rects: Rect[] = [];\n  const leafContents = node.querySelectorAll(`[${Selector.leaf}]`);\n  const voidContents = node.querySelectorAll(`[${Selector.void}]`);\n  // TODO：代码块特殊处理，后期需要移除\n  const specialCodes = node.querySelectorAll('.CodeMirror');\n\n  const addRect = (rect?: DOMRect) => {\n    if (rect) {\n      const { left, top, width, height } = rect;\n      rects.push({ left, top, width, height });\n    }\n  }\n\n  Array.from(leafContents).forEach(leaf => {\n    if (!leaf.closest(`[${Selector.void}]`)) {\n      Array.from(leaf.getClientRects()).forEach(addRect);\n    }\n  });\n  Array.from(voidContents).forEach(voidNode => {\n    const rect = voidNode.getBoundingClientRect();\n    addRect(rect);\n  });\n  Array.from(specialCodes).forEach(codeNode => {\n    const rect = codeNode.closest(`[${Selector.leafBlock}]`)?.getBoundingClientRect();\n    addRect(rect);\n  });\n  return rects;\n}\n\n/**\n * 获取分行。`rows` 构建了分行的结构，每一个 row 表示一行\n */\nexport function splitRows(blockDOMNode: Element, extendToFill = false) {\n  const parentRect = blockDOMNode.getBoundingClientRect();\n  const linesRects = getDOMRects(blockDOMNode);\n  const newRow = (rect: Rect) => {\n    const { top, height } = rect;\n    return { top, height };\n  };\n  const rows: RectRow[] = [];\n  const sortIntoRows = (rect: Rect) => {\n    if (!rows.length) {\n      rows.push(newRow(rect));\n      return;\n    }\n    // 尝试找到插入行（如果 rect 的 top 比某一行的 bottom 小，就算插入行）\n    const insertRow = rows.find(row => rect.top < row.top + row.height);\n\n    // 没有插入行的话，就创建一个\n    if (!insertRow) {\n      rows.push(newRow(rect));\n      return;\n    }\n\n    // rect 的 bottom 比插入行的 top 小，则 rect 可以重新创建一行了\n    if (rect.top + rect.height <= insertRow.top) {\n      rows.splice(rows.indexOf(insertRow), 0, newRow(rect));\n      return;\n    }\n\n    // rect 属于某个 row，更新一下 row\n    if (rect.top < insertRow.top) {\n      insertRow.top = rect.top;\n    }\n    if (rect.top + rect.height > insertRow.top + insertRow.height) {\n      insertRow.height = rect.top + rect.height - insertRow.top;\n    }\n  };\n  // 对 block DOM 的所有 rects 进行分行\n  linesRects.forEach(sortIntoRows);\n  if (!rows.length) {\n    rows.push(newRow(parentRect));\n  }\n\n  if (!extendToFill) {\n    return rows;\n  }\n\n  const first = rows[0];\n  const last = rows[rows.length - 1];\n  first.height += first.top - parentRect.top;\n  first.top = parentRect.top;\n  last.height = parentRect.bottom - last.top;\n  // extendToFill：扩展行高，填充行之间的空隙\n  for (let i = 1; i < rows.length; i++) {\n    const prev = rows[i - 1];\n    const now = rows[i];\n    const margin = now.top - prev.top - prev.height;\n    prev.height += margin / 2;\n    now.height += margin / 2;\n    now.top -= margin / 2;\n  }\n  return rows;\n}\n\n/**\n * 选区、色块抗锯齿优化，调整 rect 的高度，使属于同一行的 rect 高度相同。\n */\nexport function fitRows(rows: RectRow[], rects: Rect[], offsetRect: Rect) {\n  const newRects: Rect[] = [];\n\n  rects.forEach(rect => {\n    // 尝试找到插入行（如果 rect 的 top 比某一行的 bottom 小，就算插入行）\n    const insertRow = rows.find(row => rect.top < row.top + row.height);\n\n    // 如果没有找到，或者 rect 的 bottom 比插入行的 top 还要小，就不返回\n    if (!insertRow || rect.top + rect.height < insertRow.top) {\n      return;\n    }\n\n    const { height, top } = insertRow;\n    const { left, width } = rect;\n\n    newRects.push({\n      left: left - offsetRect.left,\n      top: top - offsetRect.top,\n      height,\n      width,\n    });\n  });\n\n  return newRects;\n}\n\n/**\n * 相邻的 rect 进行合并，避免碎片化的色块\n */\nexport function mergeRects(rects: Rect[]) {\n  const sortedRects = rects.sort((l, r) => {\n    if (l.top !== r.top) {\n      return l.top - r.top;\n    }\n    return l.left - r.left;\n  });\n  // 左右相邻的 rects 合并成一个\n  const newRects: Rect[] = [];\n  sortedRects.forEach(rect => {\n    const prev = newRects[newRects.length - 1];\n    let { left, width } = rect;\n    const { top, height } = rect;\n    if (\n      prev &&\n      Math.round(prev.top) === Math.round(top) &&\n      // top 相等且 prev.right >= left，此 rect 可以和前一个合并\n      Math.round(prev.left + prev.width) >= Math.round(left)\n    ) {\n      // right 取最大值\n      const right = Math.max(prev.left + prev.width, left + width);\n      left = prev.left;\n      width = right - left;\n      newRects.pop();\n      newRects.push({ left, top, width, height });\n    } else {\n      newRects.push(rect);\n    }\n  });\n  return newRects;\n}\n","import { Selector } from \"../../constants\";\nimport { findDOMNodeSafely } from './findDOMNode';\n\n/**\n * 查找指定节点下的选区容器\n * @param root 查询的根节点\n * @param layerFor 查找的指定容器的 selection-layer，若为空则不指定具体值\n */\nexport function getSelectionLayers(root = window.document.body, layerFor = '') {\n  const selector = layerFor ? `[${Selector.selectionLayer}=\"${layerFor}\"]` : `[${Selector.selectionLayer}]`;\n  return root.querySelectorAll(selector) || [];\n}\n\n/**\n * 获取本地光标 DOM\n * @param root\n * @returns\n */\nexport function getCaretDom(root = window.document.body) {\n  const layers = getSelectionLayers(root);\n  for (let i = layers.length - 1; i >= 0; i--) {\n    const layer = layers[i];\n    const target = layer.shadowRoot\n      ? layer.shadowRoot.querySelector('[data-cangjie-caret=\"true\"]')\n      : layer.querySelector('[data-cangjie-caret=\"true\"]');\n\n    if (target) {\n      return target;\n    }\n  }\n  return undefined;\n}\n\n/**\n * 查找归属于特定 data-cangjie-key 的容器 DOM 节点内的选区根节点\n * @param containerKey 指定容器 key\n * @returns\n */\nexport function findSelectionSlot(containerKey: string): HTMLDivElement | null | undefined {\n  const containerDOM = findDOMNodeSafely(containerKey);\n  try {\n    const selectionLayer = getSelectionLayers(containerDOM, containerKey)[0];\n    const wrapper = selectionLayer.shadowRoot\n      ? selectionLayer.shadowRoot.querySelector('div')\n      : selectionLayer.querySelector('div');\n    return wrapper;\n  } catch (e) {\n    console.warn(`[Selection] Get selection slot dom for [${containerKey}] failed`, e);\n  }\n  return null;\n}\n","import Controller from \"../../controller\";\nimport type Path from \"../../models/path\";\nimport Block from \"../../models/block\";\nimport Text from \"../../models/text\";\nimport { waitForElementByAnimationFrame } from \"../../virtualize/virtualizeUtils\";\nimport { findDOMNodeSafely } from \"./findDOMNode\";\n\nexport async function scrollToNodeByPath(\n  path: Path,\n  controller: Controller,\n  preventScrollWhenNodeIsVisible = false,\n  doNothingWhenVirtualizeDisabled = false,\n) {\n  // 这里加上 Block 调用，避免被干掉，引 Block 为了规避循环引用\n  Block;\n  const node = controller.view.getNodeByPath(path);\n  if (!node) {\n    return;\n  }\n  if (!controller.enableVirtualize && doNothingWhenVirtualizeDisabled) {\n    return;\n  }\n  const key = node.key;\n  const index = path[0];\n  const topBlock = controller.view.getNodeByPath([index]);\n\n  const targetNode = Text.isText(node) ? controller.view.getParent(key) : node;\n\n  if (targetNode?.key && preventScrollWhenNodeIsVisible) {\n    const dom = findDOMNodeSafely(targetNode.key);\n    if (dom) {\n      return;\n    }\n  }\n\n  if (controller.enableVirtualize && controller.virtualizeManager && topBlock && !controller.isNodeVisible(topBlock)) {\n    const { virtualizeManager } = controller;\n    if (!virtualizeManager.viewInitialized) {\n      await virtualizeManager.waitUntilViewInitialized;\n    }\n    await virtualizeManager.workflowToScrollToNode(index);\n  }\n\n\n  if (targetNode) {\n    try {\n      const selector = `[data-cangjie-key=\"${targetNode.key}\"]`;\n      const nodeElement = await waitForElementByAnimationFrame(selector);\n      if (nodeElement && typeof nodeElement.scrollIntoView === 'function') {\n        nodeElement.scrollIntoView();\n      }\n    } catch (e) {\n      console.warn(`Failed to scrollToNodeByPath`);\n    }\n  }\n\n}\n\nexport async function scrollToNodeByKey(\n  key: string,\n  controller: Controller,\n  preventScrollWhenNodeIsVisible = false,\n  doNothingWhenVirtualizeDisabled = false,\n) {\n  const path = controller.view.getPath(key);\n  if (!path) {\n    return;\n  }\n  await scrollToNodeByPath(path, controller, preventScrollWhenNodeIsVisible, doNothingWhenVirtualizeDisabled);\n  return;\n}","/**\n * @packageDocumentation\n * @ignore\n */\nexport { default as findNode } from './findNode';\n\nexport { default as findPoint } from './findPoint';\n\nexport { default as findRange } from './findRange';\n\nexport { default as findDOMNode, findDOMNodeSafely } from './findDOMNode';\n\nexport { default as findDOMPoint } from './findDOMPoint';\n\nexport { default as findDOMRange } from './findDOMRange';\n\nexport { default as findCurrentDOMRange } from './findCurrentDOMRange';\n\nexport { default as findRangeByEvent } from './findRangeByEvent';\n\nexport { default as caretRangeFromTargetAndCoord } from './caretRangeFromTargetAndCoord';\n\nexport { findCaretPosition } from './findCaretPosition';\n\nexport { splitRows, fitRows, mergeRects } from './optimizeRectsToFitLineHeight';\n\nexport { default as findClosestInContent } from './findClosestInContent';\n\nexport { getLocalCaretPos, getLocalCaretPosDetail } from './localCaretPos';\n\nexport * from './scrollToSelection';\n\nexport * from './selection';\n\nexport { scrollToNodeByPath, scrollToNodeByKey } from './scrollToNode';\n","import { throttle, debounce } from 'lodash-es';\nimport NodeManager from './nodeManager';\nimport CDocument from \"../models/document\";\nimport { DEFAULT_BUFFER_RANGE, DEFAULT_SCROLL_THROTTLE_INTERVAL } from './constants';\nimport { findDOMNodeSafely } from '../utils/dom';\nimport { calculateBlockStartYByBlockIndex, calculateEditorContainerToScrollContainerDistance, calculateExpectedLayoutInfo, calculateViewPort, measureBlockInfo } from './calculateUtils';\nimport type { MeasureBlocksResult, BlockMeasureInfo, LayoutInfoResult } from './interface';\nimport { scrollContainerIsTop, waitForElementByAnimationFrame } from './virtualizeUtils';\nimport { Selector } from '../constants';\n\nconst RESIZE_DEBOUNCE_TIME = 150;\n\ninterface ViewManagerOption {\n  editorContainer: HTMLElement;\n  scrollContainer: HTMLElement;\n  scrollHandler: () => void;\n  resizeHandler: (entries: ResizeObserverEntry[]) => void;\n  scrollInterval?: number;\n  bufferRange?: number;\n  nodeManager: NodeManager;\n  triggerViewUpdate: (string) => void;\n}\n\ninterface scrollHistory {\n  timestamp: number;\n  viewPortStartY: number;\n}\n\nexport default class ViewManager {\n  private nodeManager: NodeManager;\n\n  private editorContainer: HTMLElement;\n  private scrollContainer: HTMLElement;\n  private scrollElement: HTMLElement;\n  private scrollListenerElement: HTMLElement | Document;\n  private scrollHandler: () => void;\n  private scrollInterval: number;\n  private resizeHandler: (elements: ResizeObserverEntry[]) => void;\n  private resizeObserver: ResizeObserver | null = null;\n  private bufferRange: number;\n  private editorContainerToScrollContainerDistance!: number;\n\n  private scrollHistoryArray: scrollHistory[] = [];\n\n  private throttledScrollListener: () => void;\n  public triggerViewUpdate?: (id: number) => void;\n\n  private viewPortStartY!: number;\n  private viewPortEndY!: number;\n  private bufferStartY!: number;\n  private bufferEndY!: number;\n  private prevViewPortStartY = 0;\n\n  // 暂时没用到的方法 未来可能用到 注释掉避免影响覆盖率\n  // get viewPort() {\n  //   return {\n  //     viewPortStartY: this.viewPortStartY,\n  //     viewPortEndY: this.viewPortEndY,\n  //     bufferStartY: this.bufferStartY,\n  //     bufferEndY: this.bufferEndY,\n  //   }\n  // }\n\n  constructor(options: ViewManagerOption) {\n    const {\n      editorContainer,\n      scrollContainer,\n      scrollHandler,\n      scrollInterval,\n      resizeHandler,\n      bufferRange,\n      triggerViewUpdate,\n      nodeManager,\n    } = options;\n\n    this.nodeManager = nodeManager;\n\n    this.editorContainer = editorContainer;\n    this.scrollContainer = scrollContainer;\n    this.scrollHandler = scrollHandler;\n    this.resizeHandler = resizeHandler;\n\n    this.bufferRange = bufferRange || DEFAULT_BUFFER_RANGE;\n    this.scrollElement =\n      scrollContainerIsTop(this.scrollContainer) ? document.documentElement : scrollContainer;\n\n    this.scrollListenerElement =\n      scrollContainerIsTop(this.scrollContainer) ? document : scrollContainer;\n    this.scrollInterval = typeof scrollInterval === 'number' ? scrollInterval : DEFAULT_SCROLL_THROTTLE_INTERVAL;\n\n    this.triggerViewUpdate = triggerViewUpdate;\n\n    this.updateEditorContainerToScrollContainerDistance();\n    this.updateViewPort();\n\n    this.throttledScrollListener = throttle(this.scrollListener, this.scrollInterval);\n  }\n\n  public updateEditorContainerToScrollContainerDistance() {\n    this.editorContainerToScrollContainerDistance =\n      calculateEditorContainerToScrollContainerDistance(\n        this.editorContainer,\n        this.scrollContainer,\n        this.scrollElement,\n        scrollContainerIsTop(this.scrollContainer),\n      );\n  }\n\n  public calculateViewPort(_viewPortStartY?: number) {\n    return calculateViewPort(this.scrollElement, this.scrollContainer, this.bufferRange, this.editorContainerToScrollContainerDistance, _viewPortStartY);\n  }\n\n  public updateViewPort() {\n    this.prevViewPortStartY = this.viewPortStartY;\n    const { viewPortStartY, viewPortEndY, bufferStartY, bufferEndY } = this.calculateViewPort();\n    this.viewPortStartY = viewPortStartY;\n    this.viewPortEndY = viewPortEndY;\n    this.bufferStartY = bufferStartY;\n    this.bufferEndY = bufferEndY;\n\n    // const gap = this.viewPortStartY - this.prevViewPortStartY;\n    return;\n  }\n\n  public scrollListener = () => {\n    const { viewPortStartY } = this.calculateViewPort();\n    const timestamp = new Date().valueOf();\n    const value = {\n      timestamp,\n      viewPortStartY,\n    };\n    const index = this.scrollHistoryArray.findIndex((scrollHistory) => {\n      return scrollHistory.viewPortStartY === viewPortStartY && (timestamp - scrollHistory.timestamp < 1000);\n    });\n\n    if (index >= 0) {\n      return;\n    }\n    this.scrollHistoryArray.push(value);\n    if (this.scrollHistoryArray.length > 2) {\n      this.scrollHistoryArray.shift();\n    }\n\n    this.scrollHandler();\n  }\n\n  public initScrollListener() {\n    this.scrollListenerElement.addEventListener('scroll', this.throttledScrollListener);\n  }\n\n  public destroyScrollListener() {\n    this.scrollListenerElement.removeEventListener('scroll', this.throttledScrollListener);\n  }\n\n  public initResizeObserver() {\n    if (typeof ResizeObserver === 'undefined') {\n      return;\n    }\n    const handleResize = debounce((entries: ResizeObserverEntry[]) => {\n      this.resizeHandler(entries);\n    }, RESIZE_DEBOUNCE_TIME);\n    const resizeObserver = new ResizeObserver(handleResize);\n    this.resizeObserver = resizeObserver;\n  }\n\n  public detroyResizeObserver() {\n    this.resizeObserver = null;\n  }\n\n  public addResizeObserverByKeys(blockKeys: string[]) {\n    if (!this.resizeObserver) {\n      return;\n    }\n    blockKeys.forEach((blockKey) => {\n      const blockElement = findDOMNodeSafely(blockKey);\n      if (!blockElement) {\n        return;\n      }\n      this.addResizeObserver(blockElement);\n    });\n  }\n\n  public addResizeObserver(element: HTMLElement) {\n    if (!this.resizeObserver) {\n      return;\n    }\n    this.resizeObserver.observe(element);\n  }\n\n  public removeResizeObserver(element: HTMLElement) {\n    if (!this.resizeObserver) {\n      return;\n    }\n    this.resizeObserver.unobserve(element);\n  }\n\n  /**\n   * 测量所有当前上屏节点的高度\n   * @returns Object, key 为节点 key, value 为高度\n   */\n  public measureCurrentViewBlocks(documentKey: string): MeasureBlocksResult {\n    const documentElement = findDOMNodeSafely(documentKey);\n    const result: MeasureBlocksResult = {};\n    documentElement?.childNodes.forEach((childNode) => {\n      const element = childNode as HTMLElement;\n      const cangjieKey = element.getAttribute(Selector.key);\n      if (cangjieKey) {\n        const measuredInfo = measureBlockInfo(element);\n        result[cangjieKey] = measuredInfo;\n      }\n    });\n    return result;\n  }\n\n  public async measureBlocksByKeys(blockKeys: string[]): Promise<MeasureBlocksResult> {\n    const result: MeasureBlocksResult = {};\n    const measureTasks = blockKeys.map((blockKey) => {\n      const promise: Promise<BlockMeasureInfo> = Promise.resolve().then(() => {\n        const blockElement = findDOMNodeSafely(blockKey);\n        if (!blockElement) {\n          return {};\n        }\n        const measuredInfo = measureBlockInfo(blockElement);\n        result[blockKey] = measuredInfo;\n        return measuredInfo;\n      });\n      return promise;\n    });\n    await Promise.all(measureTasks);\n    return result;\n  }\n\n  public calculateExpectedLayoutInfo(\n    view: CDocument,\n    bufferStartY?: number,\n    bufferEndY?: number,\n    viewStartY?: number,\n  ) {\n    const result = calculateExpectedLayoutInfo(\n      typeof bufferStartY === 'number' ? bufferStartY : this.bufferStartY,\n      typeof bufferEndY === 'number' ? bufferEndY : this.bufferEndY,\n      typeof viewStartY === 'number' ? viewStartY : this.viewPortStartY,\n      view,\n      this.nodeManager,\n    );\n\n    return result;\n  }\n\n  public calculateBlockStartYByBlockIndex(index: number, view: CDocument, includeLastMarginBottom = false) {\n    return calculateBlockStartYByBlockIndex(index, view, this.nodeManager, includeLastMarginBottom);\n  }\n\n  // 这里仅仅是滚最外层\n  public scrollToNodeByIndex(index: number, view: CDocument) {\n    // this.updateEditorContainerToScrollContainerDistance();\n    const startY = calculateBlockStartYByBlockIndex(index, view, this.nodeManager);\n    const totalStartY = startY + this.editorContainerToScrollContainerDistance;\n    this.scrollElement.scrollTo(this.scrollElement.scrollLeft, totalStartY);\n  }\n\n}","import equal from \"fast-deep-equal\";\nimport Controller from \"../controller\";\nimport CDocument from \"../models/document\";\nimport { calculateBlockKeysNeedToMeasure, fastDiffOnValueChange } from \"./calculateUtils\";\nimport { LayoutInfoResult, VirtualizeOptions, ViewRelatedOptions, WorkflowResult } from \"./interface\";\nimport NodeManager from \"./nodeManager\";\nimport OutputManager from \"./outputManager\";\nimport ViewManager from \"./viewManager\";\nimport { checkArrayAHasElementNotIncludedInArrayB, waitForElementByAnimationFrame } from \"./virtualizeUtils\";\n\nexport default class VirtualizeManager {\n  // active 状态，用于运行时关闭虚拟化\n  private _isActive = false;\n  // 虚拟化配置项\n  public options: VirtualizeOptions;\n  // 节点缓存管理器，用于缓存节点的测量结果等，并提供了一些方便使用的加载测量结果的方法\n  public nodeManager: NodeManager;\n  // 输出管理器，通过加载测算结果，生成节点是否可视等输出信息，Cangjie 渲染时 useVirtualize 依赖\n  public outputManager: OutputManager;\n  // 视图管理器，所有跟 视图、DOM 相关的逻辑均收敛到这里\n  public viewManager?: ViewManager;\n\n  // 虚拟化 id，为虚拟化流程执行次数的标记，同时用于触发虚拟化流程导致的视图重渲；为 -1 时代表虚拟化关闭\n  public virtualizeId = 0;\n  // 当前正忙的虚拟化 id，用于禁止其他流程的进行\n  private currentLockedVirtualizeId: number | null = null;\n\n  // 虚拟化的当前测算结果与上次测算结果，outputManager load 此结果后才会改变输出\n  public prevLayoutInfoResult?: LayoutInfoResult;\n  public layoutInfoResult?: LayoutInfoResult;\n\n  // 虚拟化视图是否初始化，这里提供一个 Promise，在虚拟化初始化后，此 Promise 会 resolve\n  public viewInitialized = false;\n  private setViewInitialized = () => { };\n  public waitUntilViewInitialized: Promise<void>;\n\n  // 当前的 Controller\n  private controller: Controller;\n  // 之前的 view\n  private prevView: CDocument;\n  // 配置的 buffer 范围\n  private bufferRange?: number;\n\n  // 虚拟化是否在正常运行态\n  get isActive() {\n    return this._isActive;\n  }\n\n  /**\n   * 虚拟化控制器初始化逻辑，在仓颉新建 Controller 时触发\n   * @returns void\n   */\n  constructor(controller: Controller, options: VirtualizeOptions) {\n    const {\n      bufferRange,\n      firstPaintBlockSize,\n    } = options;\n\n    this.options = options;\n    this.bufferRange = bufferRange;\n    this.controller = controller;\n    this.prevView = controller.view;\n\n    this.waitUntilViewInitialized = new Promise((resolve) => {\n      this.setViewInitialized = resolve;\n    });\n\n    this.nodeManager = new NodeManager({\n      controller,\n    });\n\n    this.outputManager = new OutputManager({\n      controller,\n      firstPaintBlockSize,\n      nodeManager: this.nodeManager,\n    });\n\n    this.controller.setVirtualize('visibles', this.outputManager.visibles.visibleBlockKeys);\n  }\n\n  /**\n   * 在仓颉首屏渲染后的 Effect 中触发的逻辑，用于初始化 View/DOM 相关逻辑，如建立滚动事件监听\n   * @returns void\n   */\n  public initView(InitViewOptions: ViewRelatedOptions) {\n    const {\n      editorContainer,\n      scrollContainer,\n      scrollInterval,\n      triggerViewUpdate,\n    } = InitViewOptions;\n\n    this.viewManager = new ViewManager({\n      editorContainer,\n      scrollContainer,\n      scrollInterval,\n      scrollHandler: this.scrollHandler,\n      resizeHandler: this.resizeHandler,\n      triggerViewUpdate,\n      nodeManager: this.nodeManager,\n      bufferRange: this.bufferRange,\n    });\n\n    this.initViewWorkflow();\n\n    this.viewInitialized = true;\n    this.setViewInitialized();\n  }\n\n  /**\n   * 启动虚拟化流程\n   * @param flush 是否主动触发重渲\n   * @returns void\n   */\n  public start(flush = false) {\n    if (!this.viewInitialized) {\n      console.error('VirtualizeManager error: start invoked before UI Related Manager initialization');\n    }\n    if (!this.isActive) {\n      this.viewManager!.initScrollListener();\n      this.viewManager!.initResizeObserver();\n    }\n    if (flush) {\n      this.flushVirtualize(this.virtualizeId + 1, true);\n    }\n    this._isActive = true;\n  }\n\n  /**\n   * 关闭虚拟化流程\n   * @param flush 是否主动触发重渲，如外界未触发重渲，需要主动触发重渲来显示所有节点\n   * @returns void\n   */\n  public stop(flush = false) {\n    if (!this.viewInitialized) {\n      console.error('VirtualizeManager error: stop invoked before UI Related Manager initialization');\n    }\n    if (this.isActive) {\n      this.viewManager!.destroyScrollListener();\n      this.viewManager!.detroyResizeObserver();\n    }\n    if (flush) {\n      // virtualizeId 归零\n      this.flushVirtualize(-1, true);\n    }\n    this._isActive = false;\n  }\n\n  /**\n   * 为某个虚拟化工作流增加 busy 状态位，此时可以阻止其他虚拟化工作流的发起\n   * @param virtualizeId 虚拟化 id\n   * @returns virtualizeId 虚拟化 id\n   */\n  private lock(virtualizeId: number) {\n    if (this.currentLockedVirtualizeId !== null) {\n      console.warn('warning: current has virtualizeId locked, unlock it first');\n      return this.currentLockedVirtualizeId;\n    }\n    this.currentLockedVirtualizeId = virtualizeId;\n    return virtualizeId;\n  }\n\n  /**\n   * 为某个虚拟化工作流移除 busy 状态位\n   * @param virtualizeId 虚拟化 id\n   * @returns boolean 是否成功移除\n   */\n  private unlock(virtualizeId: number) {\n    if (this.currentLockedVirtualizeId === virtualizeId) {\n      this.currentLockedVirtualizeId = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 检查是否存在 busy 状态位\n   * @param virtualizeId 虚拟化 id\n   * @returns boolean 是否存在 busy 状态位\n   */\n  private checkLocked(virtualizeId: number) {\n    if (this.currentLockedVirtualizeId !== null && virtualizeId !== this.currentLockedVirtualizeId) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 更新虚拟化 id，刷新虚拟化结果（可选是否主动强制重渲）\n   * @param virtualizeId 虚拟化 id\n   * @param triggerReRenderActively 是否主动强制重渲\n   * @returns 保存后的虚拟化 id\n   */\n  public flushVirtualize(virtualizeId: number, triggerReRenderActively = true) {\n    this.virtualizeId = virtualizeId;\n    if (triggerReRenderActively) {\n      this.viewManager?.triggerViewUpdate?.(this.virtualizeId);\n    }\n    return this.virtualizeId;\n  }\n\n  /**\n   * 在 Cangjie 首屏渲染后执行的工作流，会测量首屏渲染的结果 (固定节点数，也不是全量节点)，并根据测量结果适当收缩节点数量\n   * 最简单的虚拟化工作流，可以用于入门流程\n   * @returns void\n   */\n  private initViewWorkflow = async () => {\n    const { view } = this.controller;\n    const currentVirtualizeId = this.virtualizeId + 1;\n    // Step 1：视图管理器测量所有已上屏节点\n    const measureResult = this.viewManager!.measureCurrentViewBlocks(view.key);\n    // Step 2：节点管理器保存测量结果\n    this.nodeManager.loadMeasureResult(measureResult);\n\n    // Step 3：根据当前视窗和 Step 2 保存的节点测量结果\n    // 进行计算流程，计算当前的布局，并保存。同时会记录上一次的布局信息\n    this.prevLayoutInfoResult = this.layoutInfoResult;\n    const layoutInfoResult = this.viewManager!.calculateExpectedLayoutInfo(view);\n    this.layoutInfoResult = layoutInfoResult;\n\n    // Step 4：输出管理器加载布局计算结果，输出管理器控制着最后的输出，只有加载测算结果才会影响输出\n    this.outputManager.loadCalculateLayoutInfo(layoutInfoResult);\n\n    // Step 5：更新虚拟化模型控制器中的当前可见节点，触发模型重算\n    const { visibles } = this.outputManager;\n    this.controller.setVirtualize('visibles', visibles.visibleBlockKeys);\n\n    // Step 6：刷新虚拟化结果，触发重渲\n    const virtualizeId = this.flushVirtualize(currentVirtualizeId);\n\n\n    if (visibles.visibleBlockKeys.length === 0) {\n      return;\n    }\n    // Step 7: 等待此次虚拟化结果重渲上屏\n    await waitForElementByAnimationFrame(`[data-virtualize-id=\"${virtualizeId}\"]`);\n\n    // Step 8: 为渲染上屏的节点添加 resizeObserver\n    this.viewManager!.addResizeObserverByKeys(visibles.visibleBlockKeys);\n\n    // Step 9: 测量渲染上屏的节点的高度并保存，结束\n    const nextMeasureResult = await this.viewManager!.measureBlocksByKeys(visibles.visibleBlockKeys);\n    this.nodeManager.loadMeasureResult(nextMeasureResult);\n  }\n\n  /**\n   * 虚拟化粒度最小的核心工作流，一般通过其他具体业务场景的工作流调用，也可以被循环调用\n   * 窗口滚动、滚动到节点、节点变化都依赖了次此工作流，initViewWorkflow 其实也可以复用，后续修改\n   * \n   * @param triggerReRenderActively 是否主动强制重渲\n   * @param measureOnly 只上屏并测量，不触发后续流程\n   * @param shouldAddLock 是否为流程设置 Busy 状态位\n   * @returns 保存后的虚拟化 id\n   */\n  private coreWorkflow = async (\n    triggerReRenderActively = true,\n    measureOnly = false,\n    shouldAddLock = false,\n  ): Promise<WorkflowResult> => {\n\n    // Step 1: 前置流程，递增 virtualizeId，检查是否状态忙，状态忙则终止流程\n    const currentVirtualizeId = this.virtualizeId + 1;\n    if (this.checkLocked(currentVirtualizeId)) {\n      return {\n        layoutInfoResult: null,\n        needToReRender: false,\n        needToStartNextWorkflow: false,\n      }\n    }\n\n    // Step 2：加载上一次的测算结果\n    // 上个流程测算结束后，测算结果会保存，但不会直接改变输出 (不会 load 进 OutputManager)\n    // 会简单判断是否需要开启下一个流程后，交给下一个虚拟化流程去重渲\n    this.outputManager.loadCalculateLayoutInfo(this.layoutInfoResult!);\n\n    const { afterPlaceholderHeight, beforePlaceholderHeight, visibles } = this.outputManager;\n    // Step 2.1：根据上一次的测算结果，改变虚拟化模型中的可见节点\n    this.controller.setVirtualize('visibles', visibles.visibleBlockKeys);\n\n    const { view } = this.controller;\n\n    // Step 3：根据上一次的测算结果（即将上屏的节点）和之前的测算结果（已经上屏的节点）\n    // 判断新增了哪些节点，稍后只测量新增的节点，以提高性能\n    const newBlockKeys = calculateBlockKeysNeedToMeasure(\n      view,\n      this.prevView,\n      this.layoutInfoResult!,\n      this.prevLayoutInfoResult,\n    );\n\n    // Step 4：根据传入参数，决定是否需要设置 busy 状态\n    if (shouldAddLock) {\n      this.lock(currentVirtualizeId);\n    }\n\n    // Step 5：保存新虚拟化 id；触发重渲，上屏根据上次测算结果得到的新节点\n    this.flushVirtualize(currentVirtualizeId, triggerReRenderActively);\n\n    // Step 6：等待重渲完毕，测量新上屏的节点并保存节点测量结果到 nodeManager\n    // 如果因为被其他流程覆盖等原因等不到此虚拟化 id，则放弃此流程\n    // 同时为新增的节点增加 resizeObserver\n    if (newBlockKeys.length > 0) {\n      try {\n        await waitForElementByAnimationFrame(`[data-virtualize-id=\"${currentVirtualizeId}\"]`);\n      } catch (e) {\n        this.unlock(currentVirtualizeId);\n        return {\n          layoutInfoResult: null,\n          needToReRender: false,\n          needToStartNextWorkflow: false,\n        };\n      }\n\n      this.viewManager!.addResizeObserverByKeys(newBlockKeys);\n      const nextMeasureResult = await this.viewManager!.measureBlocksByKeys(newBlockKeys);\n      this.nodeManager.loadMeasureResult(nextMeasureResult);\n    }\n\n    // Step 7：解除 busy 状态\n    this.unlock(currentVirtualizeId);\n\n    // 对只需要测量的流程，结束流程\n    if (measureOnly) {\n      return {\n        layoutInfoResult: null,\n        needToReRender: false,\n        needToStartNextWorkflow: false,\n      };\n    }\n\n    // Step 8：根据测量的结果，进行对布局的计算\n    const layoutInfoResult = this.viewManager!.calculateExpectedLayoutInfo(view);\n\n    // Step 9: 根据布局的结果，进行对节点详细布局情况和 placeholder 高度的计算\n    // 使用 precheckOutputByLayoutInfo 意味着这个计算结果不会影响最终输出，只供 Step 10 的判断\n    const {\n      afterPlaceholderHeight: newAfterPlaceholderHeight,\n      beforePlaceholderHeight: newBeforePlaceholderHeight,\n      visibles: newVisibles,\n    } = this.outputManager.precheckOutputByLayoutInfo(layoutInfoResult);\n\n    // Step 10: 根据 Step 9 的计算结果，判断是否要发起下一个虚拟化工作流，或者是否需要重渲 Placeholder\n    // 如果需要上屏的节点有变化，则需要发起下一个工作流，在下一个工作流中上屏这些节点（并测量与计算）\n    // 如果需要上屏的节点没有变化，但 Placeholder 高度发生了变化，直接触发重渲即可\n    let needToReRender = false;\n    let needToStartNextWorkflow = false;\n\n    // 节点还是那些老的，没有变化\n    if (equal(visibles, newVisibles)) {\n      // 但是 placeholder 高度有变化，要重渲\n      if (afterPlaceholderHeight !== newAfterPlaceholderHeight || beforePlaceholderHeight !== newBeforePlaceholderHeight) {\n        needToReRender = true;\n      }\n    // 出现新节点\n    } else {\n      needToReRender = true;\n      if (checkArrayAHasElementNotIncludedInArrayB(newVisibles.visibleBlockKeys, visibles.visibleBlockKeys)) {\n        needToStartNextWorkflow = true;\n      }\n    }\n\n    return {\n      layoutInfoResult,\n      needToReRender,\n      needToStartNextWorkflow,\n    };\n\n  }\n\n  /**\n   * 根据当前浏览器视口位置，决定需要渲染哪些节点，以及 Placeholder 需要渲染多高的工作流\n   * 浏览器的 scroll 事件会触发此工作流\n   * 这个工作流的特点是会递归调用自己，直到得到最终的结果\n   */\n  private workflowByCurrentViewPort = async () => {\n    const { view } = this.controller;\n\n    // Step 1: 根据当前视口情况，更新视口位置信息，根据视口位置信息和过去缓存的节点测量高度，算出一个新的布局结果\n    // 同时储存上一次计算的布局结果\n    this.prevLayoutInfoResult = this.layoutInfoResult;\n    this.viewManager!.updateViewPort();\n    this.layoutInfoResult = this.viewManager!.calculateExpectedLayoutInfo(view);\n\n    // Step 2: 执行 coreWorkflow，Step 1 中的新的布局结果会上屏并进行测算\n    // 根据新的测算结果，可能需要补充节点，或者剔除节点（needToStartNextWorkflow），出现这种情况需要发起下个工作流\n    // 根据新的测算结果，placeholder 高度也可能发生变化，需要重渲一下\n    const {\n      needToStartNextWorkflow,\n      needToReRender,\n      layoutInfoResult,\n    } = await this.coreWorkflow();\n\n    // Step 3: 根据新测算结果需要补充节点，或者剔除节点，则需要发起下一个工作流；\n    // Placeholder 有变化则需要 rerender 则重渲；\n    // 否则流程结束\n    if (needToStartNextWorkflow) {\n      await this.workflowByCurrentViewPort();\n    } else if (needToReRender) {\n      this.prevLayoutInfoResult = this.layoutInfoResult;\n      this.outputManager.loadCalculateLayoutInfo(layoutInfoResult!);\n      this.layoutInfoResult = layoutInfoResult!;\n\n      const { visibles } = this.outputManager;\n      this.controller.setVirtualize('visibles', visibles.visibleBlockKeys);\n\n      const newVirtualizeId = this.virtualizeId + 1;\n      this.flushVirtualize(newVirtualizeId);\n      return;\n    }\n  }\n\n  /**\n   * 根据指定的节点 index，跳转到此节点的工作流\n   * 供大纲等跳转场景使用\n   * @param nodeIndex Cangjie 节点在文档内的 index\n   */\n  public workflowToScrollToNode = async (nodeIndex: number) => {\n    const { view } = this.controller;\n    this.viewManager!.updateEditorContainerToScrollContainerDistance();\n\n    // Step 1：通过节点的 index，根据当前的测算结果，得到视口滚动到恰好显示此节点时，视口的 y 坐标\n    // 指定 y 坐标是本工作流与其他工作流最大的不同之处，上面的工作流是通过视口位置得到 y 坐标\n    const startY = this.viewManager!.calculateBlockStartYByBlockIndex(nodeIndex, view);\n    const { bufferStartY, bufferEndY, viewPortStartY } = this.viewManager!.calculateViewPort(startY);\n\n    // Step 2：假设视口滚动到此 y 坐标时，根据当前缓存的测算结果，计算布局信息\n    this.prevLayoutInfoResult = this.layoutInfoResult;\n    const layoutInfoResult = this.viewManager!.calculateExpectedLayoutInfo(view, bufferStartY, bufferEndY, viewPortStartY);\n    this.layoutInfoResult = layoutInfoResult;\n\n    // Step 3：发起 coreWorkflow，上屏布局信息中需要上屏的节点，并测量\n    await this.coreWorkflow(true, true, true);\n\n    // Step 4: 触发一次滚动，将视口滚动到指定 y 坐标处，此时浏览器会触发 scroll 时事件，引发 workflowByCurrentViewPort 工作流\n    this.viewManager!.scrollToNodeByIndex(nodeIndex, view);\n  }\n\n  /**\n   * 节点变化时触发的工作流\n   */\n  public workflowOnValueChange = async () => {\n    const prevView = this.prevView;\n    const currView = this.controller.view;\n    const view = this.controller.view;\n    const { startBlockOffset, startBlockKey, endBlockOffset } = this.outputManager;\n    const diffResult = fastDiffOnValueChange(prevView, currView, startBlockKey!, startBlockOffset, endBlockOffset);\n\n    if (diffResult.type === 'changed') {\n      // Step 1：如果 diff 发现节点发生了变化，且不是平移，会根据最新的 viewModel 和视口信息，以及之前缓存的测量结果，计算布局信息\n      this.prevLayoutInfoResult = this.layoutInfoResult;\n      const layoutInfoResult = this.viewManager!.calculateExpectedLayoutInfo(view);\n      this.layoutInfoResult = layoutInfoResult;\n\n      // Step 2: 发起 coreWorkflow，可能这里直接发起 workflowByCurrentViewPort 更好，后续修改\n      await this.coreWorkflow(false);\n    }\n\n    this.prevView = currView;\n  }\n\n  /**\n   * scroll 事件触发的工作流\n   */\n  private scrollHandler = () => {\n    this.workflowByCurrentViewPort();\n  }\n\n  /**\n   * resizeObserver 触发的工作流\n   * 节点高度变化时，会触发 resizeObserver 回调，这里检查发现高度确实变化了，则会触发后续工作流\n   * 详细注释后续再补充\n   */\n  private resizeHandler = async (entries: ResizeObserverEntry[]) => {\n    const { view } = this.controller;\n    const {\n      afterPlaceholderHeight,\n      beforePlaceholderHeight,\n      visibles,\n    } = this.outputManager;\n    const { visibleBlockKeys } = visibles;\n\n    const resizedNodeEntries = entries.filter((entry) => {\n      const { target, contentRect } = entry;\n      const key = target.getAttribute('data-cangjie-key');\n      const parent = view.getParent(key!);\n      if (!(parent && CDocument.isDocument(parent))) {\n        return false;\n      }\n      const hidden = (target as HTMLElement).style.display === 'none';\n      if (!key || !view.nodes.some(node => node.key === key)) {\n        return false;\n      }\n      if (hidden && !visibleBlockKeys.includes(key)) {\n        return false;\n      }\n      const nodeProp = this.nodeManager.getCachedBlockPropsByKey(key);\n      // 这里出于性能考虑暂不判断 marginTop 和 marginBottom\n      if (nodeProp?.height !== contentRect.height) {\n        return true;\n      }\n      return false;\n    });\n    const resizedBlockKeys = resizedNodeEntries.map((entry) => {\n      const { target } = entry;\n      return target.getAttribute('data-cangjie-key')!;\n    });\n\n    const nextMeasureResult = await this.viewManager!.measureBlocksByKeys(resizedBlockKeys);\n    this.nodeManager.loadMeasureResult(nextMeasureResult);\n\n    const layoutInfoResult = this.viewManager!.calculateExpectedLayoutInfo(view);\n\n    if (resizedBlockKeys.length > 0) {\n      const {\n        afterPlaceholderHeight: newAfterPlaceholderHeight,\n        beforePlaceholderHeight: newBeforePlaceholderHeight,\n        visibles: newVisibles,\n      } = this.outputManager.precheckOutputByLayoutInfo(layoutInfoResult);\n\n      let needToReRender = false;\n      let needToStartNextWorkflow = false;\n\n      if (equal(visibles, newVisibles)) {\n        // 还是老节点，但是 placeholder 要变\n        if (afterPlaceholderHeight !== newAfterPlaceholderHeight || beforePlaceholderHeight !== newBeforePlaceholderHeight) {\n          needToReRender = true;\n        }\n        // 根据新结果，应出现新节点，通常有个东西高度大幅缩小了\n      } else {\n        needToReRender = true;\n        if (checkArrayAHasElementNotIncludedInArrayB(newVisibles.visibleBlockKeys, visibles.visibleBlockKeys)) {\n          needToStartNextWorkflow = true;\n        }\n      }\n\n      if (needToStartNextWorkflow) {\n        this.workflowByCurrentViewPort();\n      } else if (needToReRender) {\n        this.prevLayoutInfoResult = this.layoutInfoResult;\n        this.outputManager.loadCalculateLayoutInfo(layoutInfoResult);\n        this.layoutInfoResult = layoutInfoResult;\n\n        const { visibles } = this.outputManager;\n        this.controller.setVirtualize('visibles', visibles.visibleBlockKeys);\n\n        const currentVirtualizeId = this.virtualizeId + 1;\n        this.flushVirtualize(currentVirtualizeId);\n      }\n    }\n  }\n}","import { omit } from 'lodash-es';\nimport Controller from '.';\nimport { GROUP_COLLAPSED_KEY } from '../constants';\nimport { OperationWithValue } from '../interfaces/controller';\nimport { Group, GroupWithKey } from '../interfaces/group';\nimport Element from '../models/element';\nimport { ReplaySubject } from '../models/observable';\nimport Operation, { OperationType } from '../models/operation';\nimport Node from '../models/node';\n\ntype Groups = Record<string, Group>;\n\n/**\n * 模型分组管理\n */\nclass GroupManager {\n  private groups: {\n    current: Groups;\n    prev: Groups;\n  } = {\n    current: {},\n    prev: {},\n  };\n\n  public groups$ = new ReplaySubject<typeof this.groups['current']>();\n\n  private controller: Controller;\n\n  private CACHE = {\n    NODE_GROUP: new Map<string, string>(),\n  };\n\n  constructor(controller: Controller) {\n    this.controller = controller;\n  }\n\n  /**\n   * 清理 group manager 内存占用\n   */\n  public cleanup() {\n    this.groups = { current: {}, prev: {} };\n    this.CACHE.NODE_GROUP.clear();\n  }\n\n  /**\n   * 获得指定 key 的分组\n   * @param key\n   * @returns\n   */\n  public getGroup(key: string) {\n    return this.groups.current[key];\n  }\n\n  /**\n   * 获得所有分组\n   * @returns\n   */\n  public getGroups() {\n    return this.groups.current;\n  }\n\n  /**\n   * 向订阅节点通知最新的分组信息\n   * @param force\n   * @returns\n   */\n  public notifyNewGroups(force = false): this {\n    if (force || this.groups.current !== this.groups.prev) {\n      this.groups.prev = this.groups.current;\n      this.groups$.next(this.groups.current);\n    }\n    return this;\n  }\n\n  /**\n   * 设置分组数据\n   * @param key\n   * @param data\n   * @returns\n   */\n  public setGroupData<T = {}>(key: string, data: T) {\n    const group = this.getGroup(key);\n    this.groups.current = {\n      ...this.groups.current,\n      [key]: {\n        ...group,\n        data: {\n          ...data,\n          [GROUP_COLLAPSED_KEY]: group.data[GROUP_COLLAPSED_KEY],\n        },\n      },\n    };\n    this.notifyNewGroups();\n    return this;\n  }\n\n  /**\n   * 融合分组数据\n   * @param key\n   * @param data\n   * @returns\n   */\n  public mergeGroupData<T = {}>(key: string, data: Partial<T>) {\n    const group = this.getGroup(key);\n    this.groups.current = {\n      ...this.groups.current,\n      [key]: { ...group, data: { ...group.data, ...data } },\n    };\n    this.notifyNewGroups();\n    return this;\n  }\n\n  /**\n   * 生成全文所有的 Groups\n   */\n  public generateAllGroups(): this {\n    this.controller.value.document.forEachDescendant((node) => {\n      if (node.isElement()) {\n        this.generateGroup(node);\n      }\n    });\n    return this;\n  }\n\n  public initGroups(groups: Groups): this {\n    if (groups) {\n      this.groups.current = groups;\n      this.groups.prev = groups;\n    }\n    return this;\n  }\n\n  /**\n   * 获得节点所在的分组序列\n   * @param node\n   * @returns\n   */\n  public getNodeGroups(node: Element): GroupWithKey[] {\n    const { document } = this.controller.value;\n    const groups: GroupWithKey[] = [];\n    const elementGroup = this.getGroup(node.key);\n    if (elementGroup) {\n      groups.push({ key: node.key, ...elementGroup });\n    }\n    let groupKey = this.CACHE.NODE_GROUP.get(node.key);\n    while (groupKey !== undefined) {\n      const group = this.getGroup(groupKey);\n      if (group) {\n        groups.push({ key: groupKey, ...group });\n      }\n      let groupElement = document.getNode(groupKey);\n      if (!groupElement) {\n        break;\n      }\n\n      groupKey = this.CACHE.NODE_GROUP.get(groupElement.key);\n      while (\n        groupKey === undefined &&\n        groupElement &&\n        groupElement !== document\n      ) {\n        const parent = document.assertParent(groupElement.key);\n        groupKey = this.CACHE.NODE_GROUP.get(parent.key);\n        groupElement = parent;\n      }\n    }\n    return groups;\n  }\n\n  /**\n   * 针对特殊变更，重新分组\n   * @param operationWithValue\n   */\n  public regenerateGroup(\n    operationWithValue: OperationWithValue & { operation: Operation },\n  ): this {\n    const { operation, value, newValue } = operationWithValue;\n    if (\n      operation.type === OperationType.RemoveNode &&\n      operation.node.isElement()\n    ) {\n      const prevGroup = this.getGroup(operation.node.key);\n      // 节点删除后，对应删除其分组\n      this.removeGroup(operation.node.key);\n      // 从删除节点前一个节点开始重新分组\n      this.regenerateGroupFrom(\n        value.document.getPreviousSibling(operation.node.key),\n        prevGroup?.data[GROUP_COLLAPSED_KEY] || false,\n      );\n    } else if (\n      operation.type === OperationType.InsertNode &&\n      operation.node.isElement()\n    ) {\n      const node = newValue.document.assertNodeByPath(operation.path);\n      const prevNode = newValue.document.getPreviousSibling(node.key);\n      const prevGroup = prevNode && this.getGroup(prevNode.key);\n      // 从当前重新节点进行分组\n      this.regenerateGroupFrom(\n        operation.node,\n        prevGroup?.data[GROUP_COLLAPSED_KEY] || false,\n      );\n      // 对新插入节点的子节点进行分组\n      operation.node.forEachDescendant((n) => {\n        if (n.isElement()) {\n          this.generateGroup(n, prevGroup?.data[GROUP_COLLAPSED_KEY] || false);\n        }\n      });\n    } else if (operation.type === OperationType.SetNode) {\n      // 删除节点原来的分组\n      const node = newValue.document.assertNodeByPath(operation.path);\n      const oldNode = value.document.assertNodeByPath(operation.path);\n      const prevGroup = this.getGroup(node.key);\n      const prevOldGroup = this.getGroup(oldNode.key);\n      this.removeGroup(node.key);\n      // 从当前节点开始，重新分组\n      this.regenerateGroupFrom(\n        node,\n        prevGroup?.data[GROUP_COLLAPSED_KEY] || false,\n      );\n    } else if (operation.type === OperationType.MergeNode) {\n      const node = value.document.assertNodeByPath(operation.path);\n      const prevGroup = this.getGroup(node.key);\n      if (node.isElement()) {\n        // 删除节点所在分组\n        this.removeGroup(node.key);\n        // 从合并到的节点开始重新分组\n        this.regenerateGroupFrom(\n          newValue.document.getPreviousSiblingByPath(operation.path),\n          prevGroup?.data[GROUP_COLLAPSED_KEY] || false\n        );\n      }\n    } else if (operation.type === OperationType.SplitNode) {\n      const node = value.document.assertNodeByPath(operation.path);\n      if (node.isElement()) {\n        const prevGroup = this.getGroup(node.key);\n        // 删除节点所在分组\n        this.removeGroup(node.key);\n        // 从合并到的节点开始重新分组\n        this.regenerateGroupFrom(\n          newValue.document.getNextSiblingByPath(operation.path),\n          prevGroup?.data[GROUP_COLLAPSED_KEY] || false\n        );\n      }\n    } else if (operation.type === OperationType.MoveNode) {\n      // 从移动起点开始重新分组\n      const node = value.document.assertNodeByPath(operation.path);\n      this.regenerateGroupFrom(value.document.getPreviousSibling(node.key));\n      // 从移动终点开始重新分组\n      this.regenerateGroupFrom(node);\n    }\n    return this;\n  }\n\n  private removeGroup(key: string | null) {\n    if (!key) {\n      return this;\n    }\n    this.groups.current = omit(this.groups.current, key);\n    this.CACHE.NODE_GROUP.delete(key);\n    return this;\n  }\n\n  private generateGroup(element: Element, isCollapsed = false) {\n    const group = this.controller.run('generateGroup', element);\n    const currentGroup = this.getGroup(element.key);\n    // 如果分组已经不存在，则分组列表中丢弃该分组\n    if (!group && currentGroup) {\n      this.groups.current = omit(this.groups.current, element.key);\n    }\n    // 若产生了新的分组，则添加该分组\n    else if (group) {\n      // 如果分组类型变更，则新建分组\n      if (currentGroup?.type !== group.type) {\n        this.groups.current = {\n          ...this.groups.current,\n          [element.key]: {\n            ...group,\n            data: { ...group.data, [GROUP_COLLAPSED_KEY]: isCollapsed },\n          },\n        };\n      }\n      const nodesInGroup = this.getNodesInGroup(\n        element,\n        this.getGroup(element.key),\n      );\n      nodesInGroup.forEach((n) => {\n        this.CACHE.NODE_GROUP.set(n.key, element.key);\n      });\n    }\n    return this;\n  }\n\n  private getNodesInGroup(node: Element, group: Group) {\n    const { document } = this.controller.value;\n    let next = document.getNextSibling(node.key);\n    const nodes: Element[] = [];\n    const groups = [group];\n    let closestGroup: Group | undefined = group;\n    while (next && next.isElement() && closestGroup) {\n      const isElementInGroup = this.controller.query(\n        'isElementInGroup',\n        next,\n        closestGroup,\n      );\n      if (isElementInGroup !== false) {\n        if (closestGroup === group) {\n          nodes.push(next);\n        }\n      } else {\n        groups.pop();\n        closestGroup = groups[groups.length - 1];\n        continue;\n      }\n\n      const maybeGroup = this.getGroup(next.key);\n      if (maybeGroup) {\n        groups.push(maybeGroup);\n        closestGroup = maybeGroup;\n      }\n\n      next = document.getNextSibling(next.key);\n    }\n    return nodes;\n  }\n\n  private regenerateGroupFrom(node: Node | null, isCollapsed = false): this {\n    if (!node || !node.isElement()) {\n      return this;\n    }\n\n    const { document } = this.controller.value;\n    // 对变更节点所在的前序分组进行重新分组\n    while (node) {\n      this.generateGroup(node as Element, isCollapsed);\n      node = document.getPreviousSibling(node.key);\n    }\n    return this;\n  }\n}\n\nexport default GroupManager;\n","import { takeWhile, takeRightWhile } from 'lodash-es';\nimport Document from '../models/document';\nimport Element from '../models/element';\n\n/**\n * 获得不可见节点序列，按照距离可见节点的次序排序\n *\n * ```ts\n * // document.nodes: ['1', '2', '3', '4', '5', '6', '7'];\n *\n * const invisibles = getInvisibles(document, ['3', '4']);\n * // invisibles: ['7', '6', '1', '5',  '2']\n * ```\n * @param document\n * @param visibles\n * @returns\n */\nexport function getInsivibleNodes(\n  document: Document,\n  visibles: string[],\n): Element[] {\n  if (!visibles.length) {\n    return [];\n  }\n  const invisibles: Element[] = [];\n  const start = visibles[0];\n  const end = visibles[visibles.length - 1];\n  const topHalfInvisibles = takeWhile(document.nodes, (n) => n.key !== start);\n  const bottomHalfInvisibles = takeRightWhile(\n    document.nodes,\n    (n) => n.key !== end,\n  ).reverse();\n  while (topHalfInvisibles.length || bottomHalfInvisibles.length) {\n    if (topHalfInvisibles.length) {\n      invisibles.push(topHalfInvisibles.pop()!);\n    }\n    if (bottomHalfInvisibles.length) {\n      invisibles.push(bottomHalfInvisibles.pop()!);\n    }\n  }\n\n  return invisibles.reverse();\n}\n","import {\n  JsonMLWithAttrs,\n  JsonMLWithoutAttrs,\n  JsonML,\n} from '../type';\nimport createTextWithString from './createTextWithString';\n\nexport type {\n  JsonMLWithAttrs,\n  JsonMLWithoutAttrs,\n  JsonML,\n}\n\ninterface DescInputOption {\n  maxParagraph?: number;\n  ignore?: string[];\n}\n\nexport function jsonMLGetDescription(asl: JsonML, options?: DescInputOption): JsonML {\n  // 仅最外层会用到currParagraph\n  let currParagraph: number | null = asl[0] === 'root' ? 0 : null;\n  const children = jsonMLGetChildren(asl);\n  const validChildren: JsonML[] = [];\n\n  if (!Array.isArray(children)) {\n    return asl;\n  }\n\n  for (const childAsl of children) {\n    if (typeof currParagraph === 'number') {\n      currParagraph++;\n      if (options && typeof options.maxParagraph === 'number'\n        && currParagraph > options.maxParagraph) {\n        break;\n      }\n    }\n    if (!(options && Array.isArray(options.ignore)\n      && options.ignore.includes(childAsl[0]))) {\n      validChildren.push(jsonMLGetDescription(childAsl, options));\n    }\n  }\n  return [...jsonMLGetTagNameAndAttributes(asl), ...validChildren] as any as JsonML;\n}\n\nexport function jsonMLGetTagName(elem: JsonML) {\n  return elem[0] || '';\n}\n\nfunction isElement(maybeElem: any) {\n  return (Array.isArray(maybeElem) && typeof maybeElem[0] === 'string')\n    || typeof maybeElem === 'string';\n}\n\nfunction isAttributes(maybeAttrs: any) {\n  return !!maybeAttrs && typeof maybeAttrs === 'object' && !Array.isArray(maybeAttrs);\n}\n\nexport function jsonMLGetLastChild(node: JsonML): JsonML | null {\n  const children = jsonMLGetChildren(node);\n  return children.length ? children[children.length - 1] : null;\n}\n\nexport function JsonMLHasAttributes(maybeElem: any): maybeElem is JsonMLWithAttrs {\n  return isElement(maybeElem) && isAttributes(maybeElem[1]);\n}\n\nexport function jsonMLGetAttributes<T = any>(elem: JsonML): T | null {\n  return JsonMLHasAttributes(elem) ? elem[1] as unknown as T : null;\n}\n\nfunction jsonMLGetTagNameAndAttributes(elem: JsonML) {\n  return (JsonMLHasAttributes(elem) ? elem.slice(0, 2) : elem.slice(0, 1)) as JsonML[];\n}\n\nexport function jsonMLGetChildren(elem: JsonML): JsonML[] {\n  return (JsonMLHasAttributes(elem) ? elem.slice(2) : elem.slice(1)) as JsonML[];\n}\n\nexport function jsonMLAppend(elem: JsonML, ...children: JsonML[]): JsonML {\n  return [...elem.slice(0), ...children.slice(0)] as unknown as JsonML;\n}\n\nexport function jsonMLAppendAt(elem: JsonML, index: number, ...children: JsonML[]): JsonML {\n  const meta = JsonMLHasAttributes(elem) ? elem.slice(0, 2) : elem.slice(0, 1);\n  const ch = jsonMLGetChildren(elem);\n  ch.splice(index, 0, ...children);\n  return [...meta, ...ch] as unknown as JsonML;\n}\n\nexport function jsonMLIsEmptyContent(content: JsonML): boolean {\n  const children = jsonMLGetChildren(content);\n  if (children.length > 1) {\n    return false;\n  }\n\n  const child = children[0];\n  if (!child) {\n    return true;\n  }\n\n  if (jsonMLGetTagName(child) !== 'p') {\n    return false;\n  }\n\n  const grandChildren = jsonMLGetChildren(child);\n  if (grandChildren.length > 1) {\n    return false;\n  }\n\n  const grandChild = grandChildren[0];\n  const grandChildAttrs = jsonMLGetAttributes(grandChild);\n  if (grandChildAttrs && grandChildAttrs['data-type'] !== 'text') {\n    return false;\n  }\n\n  const grandGrandChildren = jsonMLGetChildren(grandChild);\n  if (grandGrandChildren.length > 1) {\n    return false;\n  }\n\n  const grandGrandChild = grandGrandChildren[0];\n  if (grandGrandChild) {\n    const grandGrandChildAttrs = jsonMLGetAttributes(grandGrandChild);\n    if (grandGrandChildAttrs && grandGrandChildAttrs['data-type'] !== 'leaf') {\n      return false;\n    }\n\n    if (jsonMLGetChildren(grandGrandChild).join('')) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * 读取 asl 中的纯文本（leaf 节点）\n * @param jsonML\n */\nexport function jsonMLGetText(jsonML: JsonML): string {\n  // 如果当前节点是叶子节点，则直接返回字符串\n  const attrs = jsonMLGetAttributes(jsonML);\n  if (attrs && attrs['data-type'] === 'leaf') {\n    return jsonML[2] as string || '';\n  }\n  // 遍历孩子节点\n  const children = jsonMLGetChildren(jsonML);\n  return children.reduce((text, child) => {\n    return text + jsonMLGetText(child);\n  }, '');\n}\n\nexport function jsonMLIsText(node: JsonML): boolean {\n  return (\n    jsonMLGetTagName(node) === 'span' && jsonMLGetAttributes(node)?.['data-type'] === 'text'\n  );\n}\n","import { Text, Node, Inline, Block, Element, Document } from '../../';\nimport type { JsonML } from '../type';\nimport { jsonMLGetAttributes, jsonMLGetTagName } from './jsonml';\n\n/* *************************************\n *             JsonML Type\n ************************************** */\n\nexport function isTextJsonML(node: JsonML): boolean {\n  const tag = jsonMLGetTagName(node);\n  const attrs = jsonMLGetAttributes(node);\n  return tag === 'span' && !!attrs && attrs['data-type'] === 'text';\n}\n\nexport function isInlineJsonML(node: JsonML): boolean {\n  const tagName = jsonMLGetTagName(node);\n  return tagName === 'a' || tagName === 'img';\n}\n\n/* *************************************\n *             Value Type\n ************************************** */\n\nexport function isTextValue(node: Node): node is Text {\n  return Text.isText(node);\n}\n\nexport function isElementValue(node: Node): node is Element {\n  return Element.isElement(node);\n}\n\nexport function isInlineValue(node: Node): node is Inline {\n  return Inline.isInline(node);\n}\n\nexport function isBlockValue(node: Node): node is Block {\n  return Block.isBlock(node);\n}\n\nexport function isDocumentValue(node: Node): node is Document {\n  return Document.isDocument(node);\n}\n","import { camelCase, trim } from 'lodash-es';\n\n/**\n * @export\n * @param {NamedNodeMap} attrs\n * @description 将 Node 节点的 attributes 属性转成 JSON 对象\n */\nexport function nodeMapToObject(attrs: NamedNodeMap) {\n  const obj: Record<string, any> = {\n    styleObj: {},\n  };\n  for (let i = attrs.length - 1; i >= 0; i--) {\n    if (attrs[i].value !== '') {\n      obj[attrs[i].name] = attrs[i].value;\n    }\n  }\n  return obj;\n}\n\n/**\n * @export\n * @param {string} [styleStr='']\n * @return {*}  {Partial<CSSStyleDeclaration>}\n * @description 将 inlineStyle 字符串转为 驼峰格式的 JSON 对象\n */\nexport function toStyleObject(styleStr = ''): Partial<CSSStyleDeclaration> {\n  if (!styleStr) {\n    return {};\n  }\n\n  const output: Partial<CSSStyleDeclaration> = {};\n  const style = styleStr.split(';');\n  for (let i = style.length - 1; i >= 0; i--) {\n    const rule = style[i];\n    if (rule) {\n      const kv = rule.split(':');\n      output[camelCase(trim(kv[0] || '')) as any] = trim(kv[1] || '');\n    }\n  }\n  return output;\n}\n\n/**\n * @export\n * @param {string} str\n * @return {*}\n */\nexport function normalizeSpacesInHTML(str: string) {\n  return str.replace(/\\s*\\n\\s*/g, '');\n}\n","import { JsonML } from '../type';\n\nexport default function createTextWithString(text: string): JsonML {\n  return [\n    'span',\n    { 'data-type': 'text' },\n    ['span', { 'data-type': 'leaf' }, text],\n  ] as JsonML;\n}\n\nexport const createEmptyText = () => createTextWithString('');\n","import { JsonML } from '../type';\nimport createTextWithString from './createTextWithString';\n\nexport default function createEmptyParagraph(type = 'p'): JsonML {\n  return [type, createTextWithString('')];\n}\n","import { Controller, Value, Schema } from '../../';\nimport { jsonMLGetChildren, jsonMLAppend } from '../utils/jsonml';\nimport createJsonMLToNode from './jsonMLToNode';\nimport { isDocumentValue } from '../utils';\nimport type { JsonMLToValueOptions, JsonML } from '../type';\nimport createEmptyParagraph from '../utils/createEmptyParagraph';\n\nexport default function createJsonMLToValue(\n  jsonMLToNode: ReturnType<typeof createJsonMLToNode>,\n  strictSchema: Schema,\n) {\n  /**\n   * 序列化整个 ASL 文档\n   * @param jsonML content ASL\n   * @param options 序列化参数\n   */\n  function jsonMLToValue(jsonML: JsonML, options: JsonMLToValueOptions = {}): Value {\n    const children = jsonMLGetChildren(jsonML);\n    let newJsonML = jsonML;\n    if (!(children && children.length > 0)) {\n      newJsonML = jsonMLAppend(jsonML, createEmptyParagraph());\n    }\n\n    const document = jsonMLToNode(newJsonML);\n    // 非 document 节点直接抛错\n    if (!isDocumentValue(document)) {\n      throw new Error(`Invalid jsonML, expect a document at the root of jsonML, but received ${JSON.stringify(jsonML, null, 2)}`);\n    }\n\n    const value = Value.create({\n      document,\n    });\n\n    const { normalize = true, strict = false } = options;\n    const toNormalize = normalize || strict;\n    if (!toNormalize) return value;\n\n    // 加载一个 scheme plugin 对 value 进行 normalize\n    const schemaPlugin = strict ? [{ schema: strictSchema, models: [] }] : [];\n    const controller = Controller.create({ value, plugins: schemaPlugin });\n    return controller.value;\n  }\n\n  return jsonMLToValue;\n}\n","import type { Value } from '../../';\nimport type { JsonML } from '../type';\nimport createNodeToJsonML, { createAsyncNodeToJsonML } from './nodeToJsonML';\n\n\nexport function createAsyncValueToJsonML(asyncNodeToJsonML: ReturnType<typeof createAsyncNodeToJsonML>) {\n  /**\n   * 序列化 value to ASL\n   * @param value\n   */\n  async function valueToJsonML(value: Value) {\n    return asyncNodeToJsonML(value.document);\n  }\n\n  return valueToJsonML;\n}\n\nexport default function createValueToJsonML(nodeToJsonML: ReturnType<typeof createNodeToJsonML>) {\n  /**\n   * 序列化 value to ASL\n   * @param value\n   */\n  function valueToJsonML(value: Value): JsonML {\n    return nodeToJsonML(value.document);\n  }\n\n  return valueToJsonML;\n}\n","import type { Node } from '../../';\nimport { jsonMLGetChildren } from '../utils/jsonml';\nimport type { MoSerializationPlugin, JsonML } from '../type';\nimport { isElementValue } from '../utils';\n\nexport default function createJsonMLToNode(plugins: MoSerializationPlugin[]) {\n  const rules = plugins\n    .map((plugin) => plugin.jsonMLToValue!)\n    .filter((rule) => !!rule);\n\n  return function jsonMLToNode(jsonML: JsonML, parent?: JsonML): Node {\n    const rule = rules.find((r) => r.match(jsonML, parent));\n    if (!rule) {\n      throw new Error(`Cannot find any rule which match ${JSON.stringify(jsonML, null, 2)}`);\n    }\n\n    let node = rule.convert(jsonML, parent);\n\n    // Only element value has nodes children\n    if (isElementValue(node)) {\n      const children = jsonMLGetChildren(jsonML);\n      node = node.merge({ nodes: children.map((c) => jsonMLToNode(c, jsonML)) });\n    }\n\n    node = rule.decorate ? rule.decorate(node) : node;\n\n    return node;\n  };\n}\n","import { Node, environment } from '../../';\nimport { jsonMLAppend } from '../utils/jsonml';\nimport type { MoSerializationPlugin, JsonML } from '../type';\nimport { isElementValue } from '../utils';\n\nfunction safeAppend(elem: JsonML, children: JsonML[]) {\n  // BACKGROUND: Safari 下，`...children` 结果可能出现 null child\n  if (environment.IS_SAFARI) {\n    return (elem.slice(0).concat(children.slice(0)) as unknown) as JsonML;\n  }\n  return jsonMLAppend(elem, ...children);\n}\n\nexport function createAsyncNodeToJsonML(plugins: MoSerializationPlugin[]) {\n  const rules = plugins\n    .map((plugin) => plugin.valueToJsonML!)\n    .filter((rule) => !!rule);\n\n  /**\n   * 序列化 node to jsonML\n   * @param node\n   */\n  async function nodeToJsonML(node: Node): Promise<JsonML> {\n    const rule = rules.find((r) => r.match(node));\n    if (!rule) {\n      const { klass, type } = node.toJSON();\n      throw new Error(\n        `Cannot find any rule which match ${JSON.stringify({ klass, type })}`,\n      );\n    }\n\n    const decorated = rule.decorate ? rule.decorate(node) : node;\n    let jsonML: JsonML | undefined;\n    if (rule.asyncConvert) {\n      jsonML = await rule.asyncConvert(decorated);\n    } else {\n      jsonML = rule.convert(decorated);\n    }\n\n    if (!jsonML) {\n      const { klass, type } = node.toJSON();\n      throw new Error(\n        `Invalid JsonML! JsonML is ${JSON.stringify({ klass, type })}`,\n      );\n    }\n\n    // Only element value has nodes children\n    if (isElementValue(decorated)) {\n      const children = await Promise.all(decorated.nodes.map((child) => nodeToJsonML(child)));\n      return safeAppend(jsonML, children);\n    }\n\n    return jsonML;\n  }\n\n  return nodeToJsonML;\n}\n\nexport default function createNodeToJsonML(plugins: MoSerializationPlugin[]) {\n  const rules = plugins\n    .map((plugin) => plugin.valueToJsonML!)\n    .filter((rule) => !!rule);\n\n  /**\n   * 序列化 node to jsonML\n   * @param node\n   */\n  function nodeToJsonML(node: Node): JsonML {\n    const rule = rules.find((r) => r.match(node));\n    if (!rule) {\n      const { klass, type } = node.toJSON();\n      throw new Error(\n        `Cannot find any rule which match ${JSON.stringify({ klass, type })}`,\n      );\n    }\n\n    const decorated = rule.decorate ? rule.decorate(node) : node;\n    const jsonML = rule.convert(decorated);\n\n    if (!jsonML) {\n      const { klass, type } = node.toJSON();\n      throw new Error(\n        `Invalid JsonML! JsonML is ${JSON.stringify({ klass, type })}`,\n      );\n    }\n\n    // Only element value has nodes children\n    if (isElementValue(decorated)) {\n      const children = decorated.nodes.map((child) => nodeToJsonML(child));\n      return safeAppend(jsonML, children);\n    }\n\n    return jsonML;\n  }\n\n  return nodeToJsonML;\n}\n","import { v1 as uuidv1 } from 'uuid';\nimport { nodeMapToObject, normalizeSpacesInHTML } from '../../utils/parseHtml';\nimport type State from './State';\nimport type { ParserOptions } from '../../type';\n\ninterface IHtmlParserProps {\n  onOpenTag: Function;\n  onText: Function;\n  onCloseTag: Function;\n}\n\nconst MeasureStyle: any = {\n  left: '-999px',\n  position: 'absolute',\n  visibility: 'hidden',\n  whiteSpace: 'nowrap',\n  zIndex: -999,\n};\n\nexport const createIframe = () => {\n  const iframe = document.createElement('iframe');\n  for (const type in MeasureStyle) {\n    iframe.style[type] = MeasureStyle[type];\n  }\n  // 开启沙盒模式，防止 xss 攻击\n  iframe.setAttribute('sandbox', 'allow-same-origin');\n  return iframe;\n}\n\nclass DomParser {\n  private readonly domParser = new DOMParser();\n\n  private doc?: Document | null;\n\n  private readonly skipTags = ['HEAD', 'STYLE'];\n\n  private state?: State;\n\n  private onOpenTag?: Function | null;\n\n  private onText?: Function | null;\n\n  private onCloseTag?: Function | null;\n\n  private iframe = createIframe();\n\n  init = (callback: IHtmlParserProps, options: ParserOptions) => {\n    const { onOpenTag, onText, onCloseTag } = callback;\n    this.onOpenTag = onOpenTag;\n    this.onText = onText;\n    this.onCloseTag = onCloseTag;\n    this.state = options.state;\n  };\n\n  write = (chunk: string) => {\n    document.body.appendChild(this.iframe!);\n    this.doc = this.iframe!.contentDocument as Document;\n    if (this.doc.body) {\n      this.doc.body.innerHTML = chunk;\n    }\n    if (this.state) {\n      this.state.htmlDom = this.doc.body;\n    }\n    this.traverse(this.doc.body);\n\n    document.body.removeChild(this.iframe!);\n\n  };\n\n  end = () => {\n    this.doc = null;\n    this.onOpenTag = null;\n    this.onText = null;\n    this.onCloseTag = null;\n  };\n\n  private readonly traverse = (node: Node) => {\n    if (!this.onText || !this.onOpenTag || !this.onCloseTag) {\n      return;\n    }\n    if (node.nodeType === Node.TEXT_NODE) {\n      if (node.textContent && normalizeSpacesInHTML(node.textContent)) {\n        this.onText(node.textContent);\n      }\n      return;\n    }\n    if (\n      [\n        Node.ELEMENT_NODE,\n        Node.DOCUMENT_NODE,\n        Node.DOCUMENT_FRAGMENT_NODE,\n      ].includes(node.nodeType)\n    ) {\n      const { tagName: originTagName, attributes } = node as HTMLElement;\n      if (this.skipTags.includes(originTagName)) {\n        return;\n      }\n      const traverseChildNodes = () => {\n        Array.from(node.childNodes || []).forEach((child) => {\n          this.traverse(child);\n        });\n      };\n      if (originTagName) {\n        const tagName = originTagName.toLowerCase();\n        const attrs = nodeMapToObject(attributes);\n        const element = node as HTMLElement;\n        attrs.styleObj = window.getComputedStyle(element);\n        const id = uuidv1();\n        if (this.state) {\n          this.state.currentDom = element;\n        }\n        this.onOpenTag(tagName, attrs, id);\n        traverseChildNodes();\n        this.onCloseTag(tagName, attrs, id);\n      } else {\n        traverseChildNodes();\n      }\n    }\n  };\n}\n\nexport default DomParser;\n","import {\n  jsonMLGetTagName,\n} from '../../utils/jsonml';\n\nimport type { JsonML } from '../../type';\n\nexport default class State {\n  private readonly root: JsonML = ['root'];\n\n  private current: JsonML = this.root;\n\n  private readonly stack: JsonML[] = [];\n\n  private marksList: Array<Record<string, any>> = [];\n\n  private readonly listsList: string[] = [];\n\n  htmlDom!: Element;\n\n  currentDom?: HTMLElement;\n\n  currentListId: string | null = null;\n\n  // 这里用于记录zhi渲染的list的level, TODO 需要和getListLevel统一\n  currentListLevel: number | null = null;\n\n  constructor(props: {\n    htmlDom?: Element;\n  }) {\n    if (props.htmlDom) {\n      this.htmlDom = props.htmlDom;\n    }\n  }\n\n  addMarks(marks: Record<string, any>): void {\n    this.marksList.push(marks);\n  }\n\n  removeMarks(marks: Record<string, any>): void {\n    this.marksList = this.marksList.filter((m) => m.id !== marks.id);\n  }\n\n  getMarks(): Record<string, any> {\n    return this.marksList.reduce<Record<string, any>>(\n      (attrs, marks: Record<string, any>) => ({\n        ...attrs,\n        ...marks.value,\n      }),\n      {},\n    );\n  }\n\n  wrapList(type: string): void {\n    this.listsList.push(type);\n  }\n\n  unwrapList(): void {\n    this.listsList.pop();\n  }\n\n  isParentOrderedList(): boolean {\n    return this.listsList[this.listsList.length - 1] === 'ordered-list';\n  }\n\n  getListItemLevel(): number {\n    return this.listsList.length - 1;\n  }\n\n  append(...nodes: JsonML[]): void {\n    nodes.forEach((node: JsonML): void => {\n      this.current.push(node);\n    });\n  }\n\n  push(node: JsonML): void {\n    this.stack.push(this.current);\n    this.current = node;\n  }\n\n  pop(): JsonML {\n    const node = this.current;\n    this.current = this.stack.pop() || this.root;\n    return node;\n  }\n\n  peek(): JsonML {\n    return this.current;\n  }\n\n  closest(type: string): JsonML | null {\n    if (jsonMLGetTagName(this.current) === type) {\n      return this.current;\n    }\n\n    for (let i = this.stack.length - 1; i >= 0; i -= 1) {\n      if (jsonMLGetTagName(this.stack[i]) === type) {\n        return this.stack[i];\n      }\n    }\n    return null;\n  }\n\n  isStackEmpty() {\n    return this.stack.length === 0;\n  }\n\n  getParent(): JsonML | null {\n    return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n  }\n\n  getJsonML(): JsonML {\n    return this.root;\n  }\n}\n","/* eslint-disable guard-for-in */\n/* eslint-disable @typescript-eslint/member-ordering */\nimport DomParser, { createIframe } from './DomParser';\nimport State from './State';\nimport type { MoSerializationPlugin, MoHtmlParser, JsonML } from '../../type';\n\ntype Event = 'onOpenTag' | 'onText' | 'onCloseTag';\nconst MeasureStyle: any = {\n  left: '-999px',\n  position: 'absolute',\n  visibility: 'hidden',\n  whiteSpace: 'nowrap',\n  zIndex: -999,\n};\n\nexport default class Deserializer {\n  private readonly plugins: MoSerializationPlugin[];\n  private readonly htmlFrom: string;\n  private readonly parser: MoHtmlParser;\n  private iframe = createIframe();\n\n  constructor(options: Record<string, any>) {\n    this.plugins = options.plugins;\n    this.htmlFrom = options.htmlFrom;\n    this.parser = options.parser || new DomParser();\n  }\n\n  private isDomParser() {\n    return this.parser instanceof DomParser\n  }\n\n  deserialize(html: string, configs: Record<string, any> = {}): JsonML {\n    const state = new State({ });\n\n    if (!this.isDomParser()) {\n      document.body.appendChild(this.iframe!);\n      const { body: htmlDom } = this.iframe!.contentDocument as Document;\n      if (htmlDom) {\n        htmlDom.innerHTML = html;\n      }\n      state.htmlDom = htmlDom;\n    }    \n\n    let rules = this.plugins\n      .map((plugin) => {\n        const { htmlToJsonML } = plugin;\n        if (htmlToJsonML) {\n          return typeof htmlToJsonML === 'function'\n            ? htmlToJsonML(this.htmlFrom)\n            : htmlToJsonML;\n        }\n        return null;\n      })\n      .filter((rule) => !!rule);\n\n    rules = rules.map((rule) => {\n      if (!!rule!.name && rule!.name in configs) {\n        rule = {\n          ...rule,\n          ...configs[rule!.name],\n        };\n      }\n      return rule;\n    });\n\n    function onEvent(event: Event, ...args: any[]): void {\n      for (let i = 0; i < rules.length; i += 1) {\n        const rule = rules[i]![event];\n        if (!rule) {\n          continue; // eslint-disable-line no-continue\n        }\n        // @ts-ignore\n        const ok = rule(state, ...args);\n        if (ok) break;\n      }\n    }\n\n    this.parser.init(\n      {\n        onOpenTag(...args: any[]) {\n          onEvent('onOpenTag', ...args);\n        },\n        onText(...args: any[]) {\n          onEvent('onText', ...args);\n        },\n        onCloseTag(...args: any[]) {\n          onEvent('onCloseTag', ...args);\n        },\n      },\n      {\n        decodeEntities: true,\n        state,\n      },\n    );\n    this.parser.write(html);\n    this.parser.end();\n    if (!this.isDomParser()) {\n      document.body.removeChild(this.iframe!);\n    }\n    return state.getJsonML();\n  }\n}\n","export const MS_WORD = 'MS_WORD';\nexport const MS_EXCEL = 'MS_EXCEL';\n// word、excel 以外的 office\nexport const MS_OFFICE = 'MS_OFFICE';\nexport const MS_OFFICES = [MS_WORD, MS_EXCEL, MS_OFFICE];\nexport const YUQUE = 'YUQUE';\n\n// 以下复制来源，保留所有样式\nexport const REMAIN_STYLE_SOURCES = [MS_WORD, MS_EXCEL, MS_OFFICE, YUQUE];\n\nexport function isMicrosoftWord(html: string): boolean {\n  return Boolean(\n    html?.includes('xmlns:w=\"urn:schemas-microsoft-com:office:word\"'),\n  );\n}\n\nexport function isMicrosoftExcel(html: string): boolean {\n  return Boolean(\n    html?.includes('xmlns:x=\"urn:schemas-microsoft-com:office:excel\"'),\n  );\n}\n\nexport function isMicrosoftOffice(html: string): boolean {\n  return Boolean(html?.includes('xmlns:x=\"urn:schemas-microsoft-com\"'));\n}\n\nexport function isYuqueDocs(html: string): boolean {\n  return Boolean(\n    html?.includes('<meta name=\"source\" content=\"lake\"/>') ||\n    html?.includes('class=\"lake-content\"'),\n  );\n}\n\nexport function getHtmlFrom(html: string): string {\n  if (isMicrosoftWord(html)) {\n    return MS_WORD;\n  }\n  if (isMicrosoftExcel(html)) {\n    return MS_EXCEL;\n  }\n  if (isMicrosoftOffice(html)) {\n    return MS_OFFICE;\n  }\n  if (isYuqueDocs(html)) {\n    return YUQUE;\n  }\n  return 'web';\n}\n","import Deserializer from './Deserializer';\nimport { MoSerializationPlugin } from '../../type';\nimport { DATA_CLIPBORAD_CANGJIE } from '../../utils/constants';\nimport { getHtmlFrom } from './htmlFrom';\nimport type { MoHtmlParser, JsonML } from '../../type';\n\nfunction getJsonMLFromAttr(root: Document): JsonML | null {\n  const clipboardDataNode = root.querySelector(`[${DATA_CLIPBORAD_CANGJIE}]`);\n\n  /**\n   * 需要判断数据节点是否是第一个，防止一些 html 夹杂着无用的 data-clipboard-data 节点，导致误解析\n   */\n  if (clipboardDataNode && root.body.firstElementChild === clipboardDataNode) {\n    const clipboardData = clipboardDataNode.getAttribute(\n      DATA_CLIPBORAD_CANGJIE,\n    );\n    try {\n      return JSON.parse(clipboardData as string);\n    } catch (e) {\n      // @ali/4ever-logger 依赖库里面有浏览器环境依赖，导致 server cp 脚本无法运行\n      console.error(e);\n    }\n  }\n  return null;\n}\n\nexport default function createHtmlToJsonML(plugins: MoSerializationPlugin[], parser?: MoHtmlParser) {\n  return function htmlToJsonML(html: string, configs: {} = {}) {\n    const htmlFrom = getHtmlFrom(html);\n    const domParser = new DOMParser();\n    const parsedDocument = domParser.parseFromString(html, 'text/html');\n    const domJsonML = getJsonMLFromAttr(parsedDocument);\n    if (domJsonML) return domJsonML;\n    const deserializer = new Deserializer({ plugins, htmlFrom, parser });\n    const parsedHTML = parsedDocument.lastElementChild!;\n    return deserializer.deserialize(parsedHTML.outerHTML, configs);\n  };\n}\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\n\nimport type { MoSerializationPlugin, JsonMLToHTMLRule, ConvertFunc, JsonML } from '../type';\nimport { jsonMLGetChildren } from '../utils/jsonml';\n\ninterface JsonMLToHTMLProps {\n  /**\n   * 完整的 JsonML content\n   */\n  content: JsonML;\n  /**\n   * 序列化插件\n   */\n  rules: JsonMLToHTMLRule[];\n}\n\nfunction jsonMLToHTML(props: JsonMLToHTMLProps, node: JsonML, path: number[] = []): JSX.Element | null {\n  const { rules } = props;\n  let rule = rules.find((r) => r.match(node));\n  if (!rule) {\n    rule = {\n      name: 'default',\n      match: () => false,\n      convert(node, key = [], convert) {\n        const children = jsonMLGetChildren(node).map((child, index) => convert(child, [...key, index]));\n        return (\n          <>\n            {children}\n          </>\n        );\n      },\n    }\n  }\n\n  const convert: ConvertFunc = (...args) => {\n    return jsonMLToHTML(props, ...args);\n  };\n\n  const element = rule.convert(node, path, convert);\n  if (!element) return null;\n\n  const elementWithKey = React.isValidElement<{ 'path'?: number[] }>(element)\n    ? React.cloneElement(element, { key: (element.props.path || []).toString() })\n    : element;\n\n  return elementWithKey;\n}\n\ninterface HTMLProviderProps {\n  content: JsonML;\n  rules: JsonMLToHTMLRule[];\n}\n\nfunction HTMLProvider(props: HTMLProviderProps): React.ReactElement | null {\n  const { content, rules, ...rest } = props;\n  const elem = jsonMLToHTML(props, content);\n  if (!elem) return null;\n  return React.cloneElement(elem, rest);\n}\n\nexport default function createJsonMLToHTML(plugins: MoSerializationPlugin[]) {\n  // 遍历取出 jsonMLToHTML 插件\n  const defaultRules = plugins\n    .map((plugin) => plugin.jsonMLToHTML!)\n    .filter((rule) => !!rule);\n\n  /**\n   * 序列化 JsonML to HTML，主要适用于富文本拷贝导出\n   * @param content JsonML 内容\n   * @param configs 自定义插件，如果插件名已经存在，则会覆盖原插件的方法\n   */\n  function contentJsonMLToHTML(content: JsonML, configs: Record<string, Partial<JsonMLToHTMLRule>> = {}): string {\n    // 加载 configs 中的插件\n    const rules = defaultRules.map((rule) => {\n      if (rule.name in configs) {\n        return {\n          ...rule,\n          ...configs[rule.name],\n        };\n      }\n      return rule;\n    });\n\n    const before = plugins\n      .map((p) => p.jsonMLToHTML?.hooks?.before)\n      .filter((p): p is NonNullable<NonNullable<NonNullable<MoSerializationPlugin['jsonMLToHTML']>['hooks']>['before']> => !!p)\n      .reduce((acc, p) => (value: JsonML) => p(acc(value)), (value: JsonML) => value);\n\n    const elem = React.createElement(HTMLProvider, {\n      content: before(content),\n      rules,\n    });\n    return ReactDOMServer.renderToStaticMarkup(elem);\n  }\n\n  return contentJsonMLToHTML;\n}\n","import { jsonMLAppend } from '../utils/jsonml';\nimport createTextWithString from '../utils/createTextWithString';\nimport { normalizeText } from '../../utils/textUtils';\nimport { MoSerializationPlugin, JsonML } from '../type';\n\nconst NEWLINE = '\\n';\n\nexport default function createTextToJsonML(plugins: MoSerializationPlugin[]) {\n  const rules = plugins\n    .map((plugin) => plugin.textToJsonML!)\n    .filter((rule) => !!rule);\n\n  /**\n   * 纯文本序列化成 ASL\n   * @param text\n   */\n  function textToJsonML(text: string): JsonML {\n    return normalizeText(text).split(NEWLINE).reduce(\n      (jsonML: JsonML, line: string): JsonML => {\n        const rule = rules.find((r) => r.match(line));\n        let children: JsonML[];\n        if (rule) {\n          children = rule.convert(line) || [];\n        } else {\n          children = [createTextWithString(line)];\n        }\n        const paragraph = jsonMLAppend(['p'], ...children);\n        return jsonMLAppend(jsonML, paragraph);\n      },\n      ['root'],\n    );\n  }\n\n  return textToJsonML;\n}\n","import type { MoSerializationPlugin } from '../type';\nimport type { Node } from '../../';\nimport Block from '../../models/block';\n\nfunction createNodeToText(plugins: MoSerializationPlugin[]) {\n  const rules = plugins.map((plugin) => plugin.valueToText!).filter((rule) => !!rule);\n\n  function nodeToText(node: Node): string {\n    let rule = rules.find((item) => item.match(node));\n\n    if (!rule) {\n      rule = {\n        name: 'default',\n        match: () => false,\n        convert: (n) => {\n          const { text } = n;\n          // 块级元素在末尾追加换行\n          if (Block.isBlock(node)) {\n            return `${text }\\n`;\n          }\n          return text;\n        },\n      };\n    }\n\n    const text = rule.convert(node, nodeToText);\n\n    return text;\n  }\n\n  return nodeToText;\n}\n\nexport default createNodeToText;\n","import type { Value } from '../../';\nimport createNodeToText from './nodeToText';\n\nfunction createValueToText(\n  nodeToText: ReturnType<typeof createNodeToText>,\n  injectValueData: (v: Value) => Value = (v) => v,\n) {\n  function valueToText(value: Value): string {\n    // 计算好 injection\n    const injectedValue = injectValueData(value);\n\n    const texts = injectedValue.document.nodes.map((node) => {\n      return nodeToText(node);\n    });\n\n    let text = texts.join('');\n    // 末尾处的断行要移除掉\n    // block 节点会附带一个 \\n，但是用户选区中的断行需要保留，所以这里只移除一个 \\n\n    if (text.endsWith('\\n')) {\n      text = text.substring(0, text.length - 1);\n    }\n    /**\n     * 从 Excel 中复制表格，纯文本粘贴会附带 \\t,当 \\t 足够多时会造成渲染性能问题。\n     * https://notes.dingtalk.com/doc/E0Vzg7l3wnjKAzJe?orgId=16872003&dd_progress=false&showmenu=false\n     * */\n    text = text.replace(/\\t+/g, '    ');\n    return text;\n  }\n\n  return valueToText;\n}\n\nexport default createValueToText;\n","import type Renderer from 'markdown-it/lib/renderer';\nimport type { MoSerializationPlugin, MarkdownRuleName, MarkdownToHTMLRule } from '../type';\n\nconst markdownRuleNameMap: Record<MarkdownRuleName, string[]> = {\n  table: ['table'],\n  code: ['code', 'fence'],\n  blockquote: ['blockquote'],\n  hr: ['hr'],\n  list: ['list'],\n  heading: ['heading', 'lheading'],\n  codespan: ['backticks'],\n  strikethrough: ['strikethrough'],\n  emphasis: ['emphasis'],\n  link: ['link', 'autolink'],\n  image: ['image'],\n  html: ['html_block', 'html_inline']\n};\n\nexport default async function createMarkdownToHTML(plugins: MoSerializationPlugin[]) {\n  const rules = plugins\n    .map((plugin) => plugin.markdownToHTML!)\n    .filter((rule) => !!rule);\n\n  // default，从原 basic 插件迁移\n  rules.push({\n    ruleName: 'html',\n    options: {\n      html: true,\n      xhtmlOut: true,\n    },\n  });\n\n  // async loading markdown-it\n  const MarkdownIt = (await import(/* webpackChunkName: 'cangjie-lib-markdown-it'*/'markdown-it')).default;\n  const md = new MarkdownIt('zero');\n\n  // 应用 rule 到 md\n  const summary = {\n    names: [] as string[],\n    options: {},\n    rewrite: {} as Record<string, { renderer?: Renderer.RenderRule }>,\n    uses: [] as NonNullable<MarkdownToHTMLRule['uses']>\n  };\n  rules.forEach((rule) => {\n    if (rule.ruleName) {\n      summary.names.push(...markdownRuleNameMap[rule.ruleName]);\n    }\n    if (rule.options) {\n      summary.options = { ...summary.options, ...rule.options };\n    }\n    if (rule.rewrite) {\n      rule.rewrite.forEach(({ name, createRenderer }) => {\n        if (createRenderer) {\n          summary.rewrite[name] = { renderer: createRenderer(md) };\n        }\n      })\n    }\n    if (rule.uses) {\n      summary.uses.push(...rule.uses);\n    }\n  });\n\n  md.enable(summary.names)\n    .set(summary.options);\n\n  for (let name in summary.rewrite) {\n    if (md.renderer.rules[name] && summary.rewrite[name].renderer) {\n      md.renderer.rules[name] = summary.rewrite[name].renderer;\n    }\n  }\n\n  for (let { plugin: pluginLoader, data } of summary.uses) {\n    const plugin = await pluginLoader();\n    const d = (typeof data === 'function') ? await data() : data;\n    md.use(plugin.default, ...(d || []));\n  }\n\n  function markdownToHTML(markdown: string): string {\n    const res = md.render(markdown);\n    return res;\n  }\n\n  return markdownToHTML;\n}\n","import { pick, isEmpty } from 'lodash-es';\nimport type { MoSerializationPlugin, HTMLToMarkdownRule } from '../type';\n\nexport default async function createHtmlToMarkdown(plugins: MoSerializationPlugin[]) {\n  const rules = plugins\n    .map((plugin) => plugin.htmlToMarkdown!)\n    .filter((rule) => !!rule);\n\n  const Turndown = (await import(/* webpackChunkName: 'cangjie-lib-turndown'*/'turndown')).default;\n  const turndownService = new Turndown({\n    headingStyle: 'atx',\n  });\n  rules.forEach(rule => {\n    const pluginRule = pick(rule, ['filter', 'replacement']);\n    if (!isEmpty(pluginRule)) {\n      turndownService.addRule(rule.name, pluginRule);\n    }\n    if (rule.use) {\n      turndownService.use(rule.use);\n    }\n  })\n  return (html: string) => {\n    return turndownService.turndown(html);\n  }\n}\n","import * as React from 'react';\nimport type { JsonML, ConvertFunc } from \"../../type\";\nimport { jsonMLGetChildren, jsonMLGetTagName } from '../../utils/jsonml';\n\nexport default {\n  name: 'root',\n\n  match(node: JsonML): boolean {\n    return jsonMLGetTagName(node) === 'root';\n  },\n\n  convert(node: JsonML, key: number[] = [], convert: ConvertFunc): React.ReactElement {\n    const children = jsonMLGetChildren(node)\n      .map((child, index: number) => convert(child, [...key, index]));\n    return (\n      <article className=\"4ever-article\">{children}</article>\n    );\n  },\n};\n","import Document from \"../../../models/document\";\nimport type { JsonML } from \"../../type\";\nimport { jsonMLGetAttributes, jsonMLGetTagName } from \"../../utils/jsonml\";\n\nexport default {\n  name: 'document',\n\n  match(node: JsonML): boolean {\n    return jsonMLGetTagName(node) === 'root';\n  },\n\n  convert(node: JsonML): Document {\n    return Document.create({\n      data: jsonMLGetAttributes(node) || {},\n    });\n  },\n};\n","import Document from \"../../../models/document\";\nimport type Node from \"../../../models/node\";\nimport type { JsonML } from \"../../type\";\n\nexport default {\n  match(node: Node): boolean {\n    return Document.isDocument(node);\n  },\n\n  convert(node: Document): JsonML {\n    return ['root', node.data];\n  },\n};\n","import { insertNodeByKey } from \"../../../commands/insert\";\nimport Block from \"../../../models/block\";\nimport { Schema } from \"../../../plugins/normalization\";\n\nexport const schema: Schema = {\n  document: {\n    nodes: [{ min: 1 }],\n    normalize: (controller, error) => {\n      const { code, node } = error;\n      if (code === 'child_min_invalid' && !node.nodes.length) {\n        let defaultBlock = controller.query('getDefaultBlock');\n        if (!defaultBlock) {\n          defaultBlock = Block.create({\n            type: Block.DEFAULT_TYPE\n          });\n        }\n        if (defaultBlock) {\n          controller.command(\n            insertNodeByKey,\n            node.key,\n            0,\n            defaultBlock,\n          );\n        } else {\n          throw Error('normalize error in document plugin schema, no plugin implement getDefaultBlock query');\n        }\n      }\n    },\n  }\n}\n","import type { MoSerializationPlugin } from '../../type';\nimport jsonMLToHTML from './jsonMLToHTML';\nimport jsonMLToValue from './jsonMLToValue';\nimport valueToJsonML from './valueToJsonML';\n\nexport const createSerializerPlugin = (): MoSerializationPlugin => ({\n  jsonMLToHTML,\n  jsonMLToValue,\n  valueToJsonML,\n});\n\nexport { schema as documentSchema } from './schema';\n","import { Commands, Block } from '../..';\nimport type { Schema } from '../../plugins/normalization';\nimport type { MoPlugin } from '../type/moPlugin';\nimport type Controller from '../../controller/index';\nimport { documentSchema } from '../plugins/document';\n\nexport function createSchema(plugins: MoPlugin[]): Schema {\n  const s = plugins.reduce<Schema>((prevSchema, plugin) => {\n    if (!plugin.schemas) {\n      return prevSchema;\n    }\n    const schemas = Array.isArray(plugin.schemas) ? plugin.schemas : [plugin.schemas];\n    schemas.forEach((schema) => {\n      // document 是内部插件, 用到特殊定义，在内部处理\n      const { type, isBlock, isVoid, isEdgeSelectable, schema: oldSchema } = schema;\n      let val: any = {};\n      if (['boolean', 'function'].includes(typeof isVoid)) {\n        val.isVoid = isVoid;\n      }\n      if (typeof isEdgeSelectable === 'boolean') {\n        val.isEdgeSelectable = isEdgeSelectable;\n      }\n      if (oldSchema) {\n        val = {\n          ...val,\n          ...oldSchema,\n        }\n      }\n\n      if (type === 'document') {\n        prevSchema['document'] = {\n          ...prevSchema['document'],\n          ...val,\n        };\n      } else {\n        prevSchema[(isBlock || isBlock === undefined) ? 'blocks' : 'inlines']![type] = val;\n      }\n    });\n\n    return prevSchema;\n  }, {\n    ...documentSchema,\n    blocks: {},\n    inlines: {},\n  });\n\n  return s;\n}\n\n/**\n * 兼容原先 strictSchema 定义。新增的规则都在插件中指定，schema 和 strictSchema 都支持。\n * \n * 1. document 下只能是已注册的 block type\n * 2. heading1-5, paragraph 下只能是已注册的 inline type\n * 3. table 的 schema 跟 @一辙 讨论了下， 考虑存量数据兼容，还是不在 table 里指定，保留在 strictSchema 中。\n */\n\nexport function createStrictSchema(plugins: MoPlugin[]): Schema {\n  const schema = createSchema(plugins);\n  const blockTypes = Object.keys(schema.blocks!);\n  const inlineTypes = Object.keys(schema.inlines!);\n\n  schema.document = {\n    ...schema.document,\n    nodes: [{ match: blockTypes.map(t => ({ type: t })), min: 1 }],\n  };\n\n  ['paragraph', 'heading-1', 'heading-2', 'heading-3', 'heading-4', 'heading-5', 'heading-6'].forEach((type) => {\n    if (schema.blocks?.[type]) {\n      schema.blocks[type] = {\n        ...schema.blocks[type],\n        nodes: [\n          { match: [...inlineTypes.map(t => ({ type: t })), { klass: 'text' }] },\n        ],\n        normalize: (controller, error) => {\n          const { code, child, node } = error;\n          if (code === 'child_type_invalid' && blockTypes.includes(child.type)) {\n            const parent = controller.value.document.getParent(node.key);\n            if (parent) {\n              const index = parent.nodes.indexOf(node.key);\n              controller.command(Commands.moveNodeByKey, child.key, parent.key, index);\n            }\n          }\n        },\n      }\n    }\n  });\n\n  // 指定 table 插件时的特殊处理\n  if(schema.blocks?.['table']) {\n    const extra = {\n      'table': {\n        isEdgeSelectable: true,\n        nodes: [{ match: { type: 'table-row' }, min: 1 }],\n      },\n      'table-row': {\n        nodes: [{ match: { type: 'table-cell' }, min: 1 }],\n      },\n      'table-cell': {\n        nodes: [{ match: blockTypes.map((t) => ({ type: t })), min: 1 }],\n        normalize: (controller: Controller, error) => {\n          const { code, child, node } = error;\n          if (code === 'child_type_invalid' && node.nodes.length === 1) {\n            controller.command(Commands.removeNodeByKey, child.key)\n\n            let defaultBlock = controller.query('getDefaultBlock', node.nodes);\n            if (!defaultBlock) {\n              if (!defaultBlock) {\n                defaultBlock = Block.create({\n                  type: Block.DEFAULT_TYPE\n                });\n              }\n            }\n            controller.command(\n              Commands.insertNodeByKey,\n              node.key,\n              0,\n              defaultBlock,\n            );\n          } else if (!node.nodes.length) {\n            let defaultBlock = Block.create({\n              type: 'paragraph',\n            });\n            if (!defaultBlock) {\n              defaultBlock = Block.create({\n                type: Block.DEFAULT_TYPE\n              });\n            }\n            controller.command(\n              Commands.insertNodeByKey,\n              node.key,\n              0,\n              defaultBlock,\n            );\n          } else {\n            controller.command(Commands.removeNodeByKey, child.key);\n            const index = node.nodes.indexOf(child);\n            for (let i = index + 1; i < node.nodes.length - 1; i++) {\n              const c = node.nodes[i];\n              if (!blockTypes.includes(c.type)) {\n                controller.command(Commands.removeNodeByKey, c.key);\n              }\n            }\n          }\n        },\n      },\n    };\n    Object.keys(extra).forEach((type => {\n      schema.blocks![type] = {\n        ...(schema.blocks![type] || {}),\n        ...extra[type],\n      }\n    }));\n  }\n\n  return schema;\n}\n","import equal from 'fast-deep-equal';\nimport {\n  jsonMLGetAttributes,\n  jsonMLGetLastChild,\n  jsonMLGetTagName,\n  jsonMLGetText,\n  jsonMLIsText,\n} from '../../utils/jsonml';\nimport type {\n  JsonML,\n} from '../../type/jsonml';\n\nimport {\n  MS_OFFICES,\n  REMAIN_STYLE_SOURCES,\n  MoState as State,\n  MoAttributes as Attributes,\n  HTMLToJsonMLRule,\n  createTextWithString,\n  TextMark,\n  LeafRule,\n} from '../../index';\nimport { omit, isEmpty } from 'lodash-es';\nimport { normalizeText as normalizeTextUtil } from '../../../utils/textUtils'\n\n/**\n * 一般使用的有两种空白符，空格敲击的空白符（Simple space）码点是 32，Non-breaking space 的码点是 160\n * 在 Word 的规范中，32 码点的字符会被裁剪掉，160 码点会保留，裁剪规则如下：\n * - 文字头端的所有连续 32 码点空白符会被全部裁剪（同时也包括了 \\n 符号）；\n * - 文字中端和尾端的所有连续 32 码点空白符会合并（Collapse）成一个空白符；\n * @see https://stackoverflow.com/questions/11984029/difference-between-32-and-nbsp\n */\nconst SIMPLE_SPACE_CODE = 32;\n\n// \\n 符号\nconst BREAK_CODE = 10;\n\n// 需要被替换为\\n的字符\nconst BR_REPLACE_BREAK_MATCH = [/\\n\\r/g, /\\r\\n/g, /\\r/g];\n\nconst HEAD_TAG_REG = /^h\\d$/i;\n\n// TODO: 兼容原 text 插件逻辑，待重构\nconst paragraphTags: Record<string, string> = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  p: 'p',\n  div: 'p',\n  section: 'p',\n};\n\n// 解析非文档 html, 使用仓颉默认的字体大小等样式\nfunction normalizeMarks(tagName: string, marks: Record<string, any>) {\n  if (HEAD_TAG_REG.test(tagName)) {\n    return omit(marks, ['vertAlign', 'sz', 'szUnit']);\n  }\n  return marks;\n}\n\n/**\n * Normalize 一行文本，剔除文本前面的空白符\n * @note 注意 Word 的规范中只会对 text/html 中的空白符进行裁剪，text/plain 中的空白符会保留\n * @param text\n */\nfunction normalizeText(text: string): string {\n  let index = 0;\n  for (; index < text.length; index++) {\n    const code = text.charCodeAt(index);\n    if (\n      code === SIMPLE_SPACE_CODE || // 空格符号过滤\n      code === BREAK_CODE // 断行符号过滤\n    ) {\n      continue;\n    }\n    break;\n  }\n  // 裁剪头端所有的空格符和断行符\n  text = text.slice(index, text.length);\n  // 合并中端和尾端的空格符\n  text = text.replace(/ +/g, String.fromCharCode(SIMPLE_SPACE_CODE));\n\n  return normalizeTextUtil(text);\n}\n\nexport function createHTMLToJsonML(htmlToAttrs: Array<LeafRule['htmlToJsonMLAttrs']>) {\n  const enableBr = false; // FIX: 禁用对 br 的处理\n\n  const converts = htmlToAttrs.filter((f): f is NonNullable<LeafRule['htmlToJsonMLAttrs']> => !!f);\n\n  function generateMarks(tag: string, attrs: Attributes): TextMark | null {\n    let marks: TextMark = converts.reduce((prev, convert) => {\n      return convert(tag, { ...attrs }, { ...prev })\n    }, {});\n\n    return isEmpty(marks) ? null : marks;\n  }\n\n  return function (pasteFrom): HTMLToJsonMLRule {\n    return {\n      name: 'text',\n\n      onOpenTag: (\n        state: State,\n        name: string,\n        attrs: Attributes,\n        id: string,\n      ) => {\n        const marks = generateMarks(name, attrs);\n        if (marks) {\n          state.addMarks({ id, value: marks });\n          // fall through\n        }\n        return false;\n      },\n\n      onText: (state: State, text: string): boolean => {\n        let texts = [text];\n        // ['p']\n        let parent = state.peek();\n        // ['span', { 'data-type': 'text' }]\n        let prevSibling = jsonMLGetLastChild(parent);\n        const parentTagName = jsonMLGetTagName(parent);\n        // TODO 待改造\n        if (\n          !paragraphTags[parentTagName] &&\n          parentTagName !== 'a' &&\n          parentTagName !== 'inlineCode'\n        ) {\n          if (!prevSibling || !(prevSibling as any).isPhantom) {\n            const phantom: JsonML = ['p'];\n            (phantom as any).isPhantom = true;\n            parent = phantom;\n            prevSibling = null;\n            state.append(phantom);\n          } else {\n            parent = prevSibling;\n            prevSibling = jsonMLGetLastChild(parent);\n          }\n        }\n        // \\n 只有出现在 a 及 p 中才被转换\n        if (\n          enableBr &&\n          (paragraphTags[parentTagName] || parentTagName === 'a')\n        ) {\n          const breakStr = String.fromCharCode(BREAK_CODE);\n          // 先统一处理成 \\n\n          const onlyBreakText = BR_REPLACE_BREAK_MATCH.reduce(\n            (result, match) => result.replace(match, breakStr),\n            text,\n          );\n          texts = onlyBreakText.split(breakStr).filter((a) => !!a);\n        } else if (MS_OFFICES.includes(pasteFrom)) {\n          // office 中的 \\n 没有包含在 white-space: pre 中，统一作空格字符串使用\n          texts = texts.map((txt) => txt.replace(/\\n/g, ' '));\n        }\n\n        let marks = state.getMarks();\n        const parentType = parent[0];\n        if (\n          HEAD_TAG_REG.test(parentType) &&\n          !REMAIN_STYLE_SOURCES.includes(pasteFrom)\n        ) {\n          marks = normalizeMarks(parentType, marks);\n        }\n\n        const leafAttrs = {\n          ...marks,\n          'data-type': 'leaf',\n        };\n\n        // 如果 p 下面没有 text 节点\n        if (!prevSibling || !jsonMLIsText(prevSibling)) {\n          prevSibling = ['span', { 'data-type': 'text' }];\n          parent.push(prevSibling);\n        }\n\n        texts.forEach((txt, index) => {\n          if (enableBr && index > 0) {\n            parent.push([\n              'br',\n              { type: 'textWrapping', data: {} },\n              createTextWithString(''),\n            ]);\n            prevSibling = ['span', { 'data-type': 'text' }];\n            parent.push(prevSibling);\n          }\n          const prevLeaf =\n            enableBr && prevSibling![0] === 'br'\n              ? null\n              : jsonMLGetLastChild(prevSibling!);\n\n          // 如果是空段落，则 normalize text\n          if (!prevLeaf || jsonMLGetText(parent) === '') {\n            txt = normalizeText(txt);\n          }\n\n          const leaf = ['span', leafAttrs, txt];\n\n          // 如果是空 text 或者与上一个 leaf 属性不匹配，则 push\n          if (!prevLeaf || !equal(leafAttrs, jsonMLGetAttributes(prevLeaf))) {\n            prevSibling!.push(leaf);\n          } else {\n            // 相同属性的 leaf 则 concat\n            prevLeaf[prevLeaf.length - 1] += txt;\n          }\n        });\n\n        return false;\n      },\n\n      onCloseTag: (\n        state: State,\n        name: string,\n        attrs: Attributes,\n        id: string,\n      ) => {\n        state.removeMarks({ id });\n        // fall through\n        return false;\n      },\n    };\n  };\n}\n","import type { MarkProperties, default as Mark } from './../../../models/mark';\nimport type { JsonMLToValueRule, LeafRule, TextMark } from './../../type/rules';\nimport Text from '../../../models/text';\nimport {\n  JsonML,\n  jsonMLGetAttributes,\n  jsonMLGetChildren,\n  jsonMLIsText,\n} from '../../utils/jsonml';\n\nfunction attrsToMarks(attrs: TextMark, converts: Array<NonNullable<LeafRule['jsonMLAttrsToMarks']>>): Array<MarkProperties | Mark> {\n  const handledKeys: Set<string> = new Set();\n  const marks: Array<MarkProperties | Mark> = converts.reduce<Array<MarkProperties | Mark>>((prev, convert) => {\n    const rst = convert(attrs);\n    if (!rst) return [...prev];\n\n    const { keys, marks } = rst;\n    keys.forEach(k => handledKeys.add(k));\n    return [\n      ...prev,\n      ...marks,\n    ];\n  }, []);\n\n  const restKeys = Object.keys(attrs).filter(k => k !== 'data-type' && !handledKeys.has(k));\n\n  restKeys.forEach((key) => {\n    const data = attrs[key];\n    let markData: string | object = data;\n    const isObj = typeof data === 'object' && !!data && !Array.isArray(data);\n    if (!isObj) {\n      // not a object\n      markData = { value: data };\n    }\n    marks.push({ type: key, data: markData as Record<string, any> });\n  });\n\n  return marks;\n}\n\nexport function createJsonMLToValue(attrToMarks: Array<LeafRule['jsonMLAttrsToMarks']>): JsonMLToValueRule {\n  const converts = attrToMarks.filter((f): f is NonNullable<LeafRule['jsonMLAttrsToMarks']> => !!f)\n\n  const rule: JsonMLToValueRule = {\n    name: 'text',\n  \n    match: (node: JsonML): boolean => {\n      return jsonMLIsText(node);\n    },\n  \n    convert: (node: JsonML): Text => {\n      return Text.create({\n        // @ts-ignore \n        leaves: jsonMLGetChildren(node).map((leaf: JsonML) => {\n          const marks = attrsToMarks(jsonMLGetAttributes(leaf)! as TextMark, converts)\n          return {\n            text: String(jsonMLGetChildren(leaf)[0]),\n            marks\n          }\n        }),\n      });\n    },\n  }\n  return rule;\n}\n","import * as React from 'react';\nimport { jsonMLGetTagName, jsonMLGetAttributes, jsonMLGetChildren, jsonMLIsText } from '../../utils/jsonml';\nimport type { JsonML } from '../../type/jsonml';\nimport type { JsonMLToHTMLRule, LeafRule, TextMark } from '../../type';\n\n/**\n * 在 Word 的 CCP 导出规范中，文档中的空白符（Simple space）在 text/html 中会全部替换成 &nbsp;（码点 160）\n * 在导出 text/plain 中，则会保留 Simple space 的码点（32）\n */\nconst NON_BREAKING_SPACE_CODE = 160;\n\nfunction normalizeText(text: string): string {\n  text = text.replace(/ /g, String.fromCharCode(NON_BREAKING_SPACE_CODE));\n  return text;\n}\n\nfunction createLeafToElement(jsonMLAttrsToStyles: Array<NonNullable<LeafRule['jsonMLAttrsToStyle']>>) {\n  return (leaf: JsonML, key: number[]): React.ReactElement => {\n    const attrs: TextMark = jsonMLGetAttributes(leaf) || {};\n    const style: React.CSSProperties = jsonMLAttrsToStyles.reduce((prev, attrToStyle) => {\n      return attrToStyle({\n        ...attrs,\n      }, {\n        ...prev\n      });\n    }, {});\n\n    // dataType 不需要透出给插件处理，兼容一下旧的 inlineCode\n    const dataType = (attrs as any).inlineCode ? 'inlineCode' : 'text';\n\n    const text = normalizeText(jsonMLGetChildren(leaf)[0] as unknown as string);\n\n    return (\n      <span data-type={dataType} style={style} key={key.toString()}>\n        {text}\n      </span>\n    );\n  }\n}\n\nexport function createJsonMLToHTML(jsonMLAttrsToStyles: Array<LeafRule['jsonMLAttrsToStyle']>): JsonMLToHTMLRule {\n  const leafToElement = createLeafToElement(jsonMLAttrsToStyles.filter((f): f is NonNullable<LeafRule['jsonMLAttrsToStyle']> => !!f));\n\n  return {\n    name: 'text',\n\n    match: (node: JsonML): boolean => {\n      return jsonMLIsText(node);\n    },\n\n    convert: (node: JsonML, key: number[]): React.ReactElement => {\n      const children = jsonMLGetChildren(node).map((leaf, index) =>\n        leafToElement(leaf, [...key, index]),\n      );\n      return <React.Fragment>{children}</React.Fragment>;\n    },\n  };\n}\n","import type { Attributes, LeafRule, TextMark, ValueToJsonMLRule } from './../../type/rules';\nimport Text from '../../../models/text';\nimport type Node from '../../../models/node';\nimport type Leaf from '../../../models/leaf';\nimport type Mark from '../../../models/mark';\nimport type { JsonML } from '../../utils/jsonml';\n\nexport function marksToAttrs(marks: Mark[], converts: Array<NonNullable<LeafRule['markToJsonMLAttrs']>>): Attributes {\n  return marks.reduce((attrs: Attributes, mark: Mark) => {\n    let textMark: TextMark | undefined;\n    for (let i = 0, len = converts.length; i < len; i++) {\n      const m = converts[i](mark);\n      if (m) {\n        textMark = m;\n        break;\n      }\n    }\n    if (!textMark) {\n      textMark = { [mark.type]: mark.data };\n    }\n\n    return {\n      ...attrs,\n      ...textMark,\n    }\n  }, {} as Attributes);\n}\n\nexport function createValueToJsonML(markToAttrs: Array<LeafRule['markToJsonMLAttrs']>): ValueToJsonMLRule {\n  const converts = markToAttrs.filter((f): f is NonNullable<LeafRule['markToJsonMLAttrs']> => !!f)\n\n  const rule = {\n    match: (node: Node): boolean => {\n      return Text.isText(node);\n    },\n  \n    convert: (node: Text): JsonML => {\n      return [\n        'span',\n        { 'data-type': 'text' },\n        // @ts-ignore\n        ...node.leaves.reduce((acc: JsonML[], leaf: Leaf) => ([\n          ...acc,\n          [\n            'span',\n            {\n              ...marksToAttrs(leaf.marks!, converts),\n              'data-type': 'leaf',\n            },\n            leaf.text,\n          ],\n        ]), []),\n      ];\n    },\n  }\n  return rule;\n}\n","import Text from '../../../models/text';\nimport type { ValueToTextRule } from './../../type/rules';\n\nconst valueToText: ValueToTextRule = {\n  name: 'text',\n\n  match(node) {\n    return Text.isText(node);\n  },\n\n  convert(node) {\n    return node.text;\n  },\n};\n\nexport function createValueToText() {\n  return valueToText;\n}\n","import type { MoSerializationPlugin } from \"../../type\"\nimport { createHTMLToJsonML } from \"./createHTMLToJsonML\";\nimport { createJsonMLToValue } from \"./createJsonMLToValue\";\nimport { createJsonMLToHTML } from \"./createJsonToHtml\";\nimport { createValueToJsonML } from \"./createValueToJsonMl\";\nimport { createValueToText } from \"./createValueToText\";\n\nexport const createSerializerPlugin = (plugins: MoSerializationPlugin[]): MoSerializationPlugin => {\n  return {\n    htmlToJsonML: createHTMLToJsonML(plugins.map(p => p.leaf?.htmlToJsonMLAttrs)),\n    jsonMLToHTML: createJsonMLToHTML(plugins.map(p => p.leaf?.jsonMLAttrsToStyle)),\n    jsonMLToValue: createJsonMLToValue(plugins.map(p => p.leaf?.jsonMLAttrsToMarks)),\n    valueToJsonML: createValueToJsonML(plugins.map(p => p.leaf?.markToJsonMLAttrs)),\n    valueToText: createValueToText(),\n  }\n}\n","/**\n * @packageDocumentation\n * @module Serializer\n */\nimport type { Value, Schema } from '../../';\nimport type { MoSerializationPlugin as Plugin, MoHtmlParser, Mo, MoPlugin, BaseMo, HtmlMo, TextMo, MarkdownMo, AsyncMo, JsonML } from '../type';\nimport createJsonMLToValue from './jsonMLToValue';\nimport createValueToJsonML, { createAsyncValueToJsonML } from './valueToJsonML';\nimport createJsonMLToNode from './jsonMLToNode';\nimport createNodeToJsonML, { createAsyncNodeToJsonML } from './nodeToJsonML';\nimport createHtmlToJsonML from './htmlToJsonML';\nimport createJsonMLToHTML from './jsonMLToHTML';\nimport createTextToJsonML from './textToJsonML';\nimport createNodeToText from './nodeToText';\nimport createValueToText from './valueToText';\nimport createMarkdownToHTML from './markdownToHTML';\nimport createHtmlToMarkdown from './htmlToMarkdown';\nimport { createSchema } from '../schema/createSchema';\nimport { createSerializerPlugin as documentFactory } from '../plugins/document';\nimport { createSerializerPlugin as textFactory } from '../plugins/text';\n\n\nfunction createBase(p: Plugin[], schema: Schema): BaseMo {\n  const plugins = [documentFactory(), textFactory(p), ...p];\n  const jsonMLToNode = createJsonMLToNode(plugins);\n  const jsonMLToValue = createJsonMLToValue(jsonMLToNode, schema);\n  const nodeToJsonML = createNodeToJsonML(plugins);\n  const valueToJsonML = createValueToJsonML(nodeToJsonML);\n\n  return {\n    // 反序列化 ASL\n    jsonMLToValue,\n    // 序列化 ASL\n    valueToJsonML,\n\n    // 主要用于 operation 序列化、反序列化\n    jsonMLToNode,\n    nodeToJsonML,\n  };\n}\n\nfunction createText(p: Plugin[], base: BaseMo): TextMo {\n  const plugins = [textFactory(p), ...p, documentFactory()];\n\n  const beforeValueToText = plugins\n    .map((p) => p.valueToText?.hooks?.before)\n    .filter((p) => !!p)\n    .reduce((acc, p) => (value: Value) => p!(acc!(value)), (value: Value) => value);\n\n  const textToJsonML = createTextToJsonML(plugins);\n  const nodeToText = createNodeToText(plugins);\n  const valueToText = createValueToText(nodeToText, beforeValueToText);\n\n  return {\n    // 纯文本粘贴\n    textToJsonML,\n    textToValue: function textToValue(text: string): Value {\n      return base.jsonMLToValue(textToJsonML(text));\n    },\n\n    // 纯文本导出\n    valueToText,\n  }\n}\n\nfunction createHtml(p: Plugin[], base: BaseMo, parser?: MoHtmlParser): HtmlMo {\n  const plugins = [textFactory(p), ...p, documentFactory()];\n  \n  const htmlToJsonML = createHtmlToJsonML(plugins, parser);\n  const jsonMLToHTML = createJsonMLToHTML(plugins);\n\n  return {\n    // 富文本粘贴\n    htmlToJsonML,\n    htmlToValue: function htmlToValue(html: string): Value {\n      return base.jsonMLToValue(htmlToJsonML(html), { strict: true });\n    },\n\n    // 输出 HTML\n    jsonMLToHTML,\n    valueToHTML: function valueToHTML(value: Value): string {\n      return jsonMLToHTML(base.valueToJsonML(value));\n    },\n  };\n}\n\nfunction createAsync(p: Plugin[]): AsyncMo {\n  const plugins = [textFactory(p), ...p, documentFactory()];\n  const asyncNodeToJsonML = createAsyncNodeToJsonML(plugins);\n  const asyncValueToJsonML = createAsyncValueToJsonML(asyncNodeToJsonML);\n  return {\n    asyncValueToJsonML,\n  };\n}\n\nfunction createMarkdown(p: Plugin[], base: BaseMo, hs: HtmlMo): MarkdownMo {\n  const plugins = [textFactory(p), ...p, documentFactory()];\n  const markdownToJsonML = async (markdown: string) => {\n    const markdownToHTML = await createMarkdownToHTML(plugins);\n    const html = markdownToHTML(markdown);\n    return hs.htmlToJsonML(html);\n  }\n\n\n  const jsonMLToMarkdown = async(jsonML: JsonML) => {\n    const jsonMLToHTML = createJsonMLToHTML(plugins);\n    const htmlToMarkdown = await createHtmlToMarkdown(plugins);\n    return htmlToMarkdown(jsonMLToHTML(jsonML));\n  }\n\n  return {\n    // markdown 粘贴\n    markdownToJsonML,\n    markdownToValue: async (markdown: string) => {\n      const jsonML = await markdownToJsonML(markdown);\n      return base.jsonMLToValue(jsonML);\n    },\n    jsonMLToMarkdown,\n  }\n}\n\nfunction create(\n  plugins: Plugin[], schema: Schema, parser?: MoHtmlParser,\n): Mo {\n  const baseSerialzer = createBase(plugins, schema);\n  const textSerializer = createText(plugins, baseSerialzer);\n  const htmlSerializer = createHtml(plugins, baseSerialzer, parser);\n  const mdSerializer = createMarkdown(plugins, baseSerialzer, htmlSerializer);\n  const asyncSerializer = createAsync(plugins);\n\n  return {\n    ...baseSerialzer,\n    ...textSerializer,\n    ...htmlSerializer,\n    ...mdSerializer,\n    ...asyncSerializer,\n  }\n}\n\nfunction getSchemaAndPluginsFromMoPlugins(\n  plugins: MoPlugin[],\n) {\n  const schema = createSchema(plugins);\n  const serializerPlugins = plugins.map(p => p.serializer).filter((s): s is Plugin => !!s);\n\n  return {\n    schema, serializerPlugins,\n  }\n}\n\n/**\n * @deprecated create serializer with `serializations plugins`\n * @returns serializer\n */\nexport const createSerializerOld = create;\n\n/**\n * create serializer only support jsonMl <=> value\n * @param plugins mo plugins\n * @returns serializer\n */\nexport function createBaseSerializer(\n  plugins: MoPlugin[],\n) {\n  const { schema, serializerPlugins } = getSchemaAndPluginsFromMoPlugins(plugins);\n  return createBase(serializerPlugins, schema);\n}\n\n/**\n * create serializer with jsonMl、html、text、markdown\n * @param plugins mo plugins\n * @param parser optional html parser\n * @returns serializer\n */\nexport function createSerializer(\n  plugins: MoPlugin[], parser?: MoHtmlParser,\n) {\n  const { schema, serializerPlugins } = getSchemaAndPluginsFromMoPlugins(plugins);\n  return create(serializerPlugins, schema, parser);\n}\n","import { createHtmlParser } from '@ali/cangjie-lib-for-tree-shaking';\nimport { v1 as uuidv1 } from 'uuid';\nimport { toStyleObject, normalizeSpacesInHTML } from '../../utils/parseHtml';\nimport type { ParserOptions } from '../../type';\n\ninterface TagMeta {\n  name: string;\n  attrs: object;\n  id: string;\n}\n\ninterface ParserCallbacks {\n  onOpenTag: (name: string, attrs: object, id: string) => void;\n  onText: (text: string) => void;\n  onCloseTag: (name: string, attrs: object, id: string) => void;\n}\n\nexport default class Parser {\n  private readonly skipTags: string[] = ['head', 'style'];\n\n  private isInSkipTag = false;\n\n  private readonly stack: TagMeta[] = [];\n\n  private callbacks?: ParserCallbacks;\n\n  private parser?: ReturnType<typeof createHtmlParser>;\n\n  init = (callbacks: ParserCallbacks, options: ParserOptions) => {\n    this.callbacks = callbacks;\n\n    this.parser = createHtmlParser(\n      {\n        onopentag: this.onOpenTag,\n        ontext: this.onText,\n        // @ts-ignore\n        onclosetag: this.onCloseTag,\n      },\n      options,\n    );\n  };\n\n  onOpenTag = (name: string, attrs: object): void => {\n    if (this.skipTags.includes(name)) {\n      this.isInSkipTag = true;\n      return;\n    }\n\n    if (this.isInSkipTag) return;\n\n    // @ts-ignore\n    attrs.styleObj = toStyleObject(attrs.style);\n\n    const id = uuidv1();\n    this.callbacks?.onOpenTag(name, attrs, id);\n    this.stack.push({ name, attrs, id });\n  };\n\n  onText = (text: string): void => {\n    if (this.isInSkipTag || !normalizeSpacesInHTML(text)) return;\n    this.callbacks?.onText(text);\n  };\n\n  onCloseTag = (name: string): void => {\n    if (this.skipTags.includes(name)) {\n      this.isInSkipTag = false;\n      return;\n    }\n\n    if (this.isInSkipTag) return;\n\n    const open = this.stack.pop();\n    if (!open || open.name !== name) {\n      throw new Error(`htmlparser2 doesn't close tag(${name}) correctly!`);\n    }\n    this.callbacks?.onCloseTag(name, open.attrs, open.id);\n  };\n\n  write(chunk: string): void {\n    this.parser?.write(chunk);\n  }\n\n  end(): void {\n    this.parser?.end();\n  }\n}\n","\n/**\n * 边框样式枚举\n */\nexport enum BorderStyleEnum {\n  Single = 'single',\n  Thick = 'thick',\n  Double = 'double',\n  Dotted = 'dotted',\n  Dashed = 'dashed',\n  DotDash = 'dotDash',\n  DotDotDash = 'dotDotDash',\n  Triple = 'triple',\n  ThinThickSmallGap = 'thinThickSmallGap',\n  ThickThinSmallGap = 'thickThinSmallGap',\n  ThinThickThinSmallGap = 'thinThickThinSmallGap',\n  ThinThickMediumGap = 'thinThickMediumGap',\n  ThickThinMediumGap = 'thickThinMediumGap',\n  ThinThickThinMediumGap = 'thinThickThinMediumGap',\n  ThinThickLargeGap = 'thinThickLargeGap',\n  ThickThinLargeGap = 'thickThinLargeGap',\n  ThinThickThinLargeGap = 'thinThickThinLargeGap',\n  Wave = 'wave',\n  DoubleWave = 'doubleWave',\n  DashSmallGap = 'dashSmallGap',\n  DashDotStroked = 'dashDotStroked',\n  ThreeDEmboss = 'threeDEmboss',\n  ThreeDEngrave = 'threeDEngrave',\n  Outset = 'outset',\n  Inset = 'inset',\n  Apples = 'apples',\n  ArchedScallops = 'archedScallops',\n  BabyPacifier = 'babyPacifier',\n  BabyRattle = 'babyRattle',\n  Balloons3Colors = 'balloons3Colors',\n  BalloonsHotAir = 'balloonsHotAir',\n  BasicBlackDashes = 'basicBlackDashes',\n  BasicBlackDots = 'basicBlackDots',\n  BasicBlackSquares = 'basicBlackSquares',\n  BasicThinLines = 'basicThinLines',\n  BasicWhiteDashes = 'basicWhiteDashes',\n  BasicWhiteDots = 'basicWhiteDots',\n  BasicWhiteSquares = 'basicWhiteSquares',\n  BasicWideInline = 'basicWideInline',\n  BasicWideMidline = 'basicWideMidline',\n  BasicWideOutline = 'basicWideOutline',\n  Bats = 'bats',\n  Birds = 'birds',\n  BirdsFlight = 'birdsFlight',\n  Cabins = 'cabins',\n  CakeSlice = 'cakeSlice',\n  CandyCorn = 'candyCorn',\n  CelticKnotwork = 'celticKnotwork',\n  CertificateBanner = 'certificateBanner',\n  ChainLink = 'chainLink',\n  ChampagneBottle = 'champagneBottle',\n  CheckedBarBlack = 'checkedBarBlack',\n  CheckedBarColor = 'checkedBarColor',\n  Checkered = 'checkered',\n  ChristmasTree = 'christmasTree',\n  CirclesLines = 'circlesLines',\n  CirclesRectangles = 'circlesRectangles',\n  ClassicalWave = 'classicalWave',\n  Clocks = 'clocks',\n  Compass = 'compass',\n  Confetti = 'confetti',\n  ConfettiGrays = 'confettiGrays',\n  ConfettiOutline = 'confettiOutline',\n  ConfettiStreamers = 'confettiStreamers',\n  ConfettiWhite = 'confettiWhite',\n  CornerTriangles = 'cornerTriangles',\n  CouponCutoutDashes = 'couponCutoutDashes',\n  CouponCutoutDots = 'couponCutoutDots',\n  CrazyMaze = 'crazyMaze',\n  CreaturesButterfly = 'creaturesButterfly',\n  CreaturesFish = 'creaturesFish',\n  CreaturesInsects = 'creaturesInsects',\n  CreaturesLadyBug = 'creaturesLadyBug',\n  CrossStitch = 'crossStitch',\n  Cup = 'cup',\n  DecoArch = 'decoArch',\n  DecoArchColor = 'decoArchColor',\n  DecoBlocks = 'decoBlocks',\n  DiamondsGray = 'diamondsGray',\n  DoubleD = 'doubleD',\n  DoubleDiamonds = 'doubleDiamonds',\n  Earth1 = 'earth1',\n  Earth2 = 'earth2',\n  EclipsingSquares1 = 'eclipsingSquares1',\n  EclipsingSquares2 = 'eclipsingSquares2',\n  EggsBlack = 'eggsBlack',\n  Fans = 'fans',\n  Film = 'film',\n  Firecrackers = 'firecrackers',\n  FlowersBlockPrint = 'flowersBlockPrint',\n  FlowersDaisies = 'flowersDaisies',\n  FlowersModern1 = 'flowersModern1',\n  FlowersModern2 = 'flowersModern2',\n  FlowersPansy = 'flowersPansy',\n  FlowersRedRose = 'flowersRedRose',\n  FlowersRoses = 'flowersRoses',\n  FlowersTeacup = 'flowersTeacup',\n  FlowersTiny = 'flowersTiny',\n  Gems = 'gems',\n  GingerbreadMan = 'gingerbreadMan',\n  Gradient = 'gradient',\n  Handmade1 = 'handmade1',\n  Handmade2 = 'handmade2',\n  HeartBalloon = 'heartBalloon',\n  HeartGray = 'heartGray',\n  Hearts = 'hearts',\n  HeebieJeebies = 'heebieJeebies',\n  Holly = 'holly',\n  HouseFunky = 'houseFunky',\n  Hypnotic = 'hypnotic',\n  IceCreamCones = 'iceCreamCones',\n  LightBulb = 'lightBulb',\n  Lightning1 = 'lightning1',\n  Lightning2 = 'lightning2',\n  MapPins = 'mapPins',\n  MapleLeaf = 'mapleLeaf',\n  MapleMuffins = 'mapleMuffins',\n  Marquee = 'marquee',\n  MarqueeToothed = 'marqueeToothed',\n  Moons = 'moons',\n  Mosaic = 'mosaic',\n  MusicNotes = 'musicNotes',\n  Northwest = 'northwest',\n  Ovals = 'ovals',\n  Packages = 'packages',\n  PalmsBlack = 'palmsBlack',\n  PalmsColor = 'palmsColor',\n  PaperClips = 'paperClips',\n  Papyrus = 'papyrus',\n  PartyFavor = 'partyFavor',\n  PartyGlass = 'partyGlass',\n  Pencils = 'pencils',\n  People = 'people',\n  PeopleWaving = 'peopleWaving',\n  PeopleHats = 'peopleHats',\n  Poinsettias = 'poinsettias',\n  PostageStamp = 'postageStamp',\n  Pumpkin1 = 'pumpkin1',\n  PushPinNote2 = 'pushPinNote2',\n  PushPinNote1 = 'pushPinNote1',\n  Pyramids = 'pyramids',\n  PyramidsAbove = 'pyramidsAbove',\n  Quadrants = 'quadrants',\n  Rings = 'rings',\n  Safari = 'safari',\n  Sawtooth = 'sawtooth',\n  SawtoothGray = 'sawtoothGray',\n  ScaredCat = 'scaredCat',\n  Seattle = 'seattle',\n  ShadowedSquares = 'shadowedSquares',\n  SharksTeeth = 'sharksTeeth',\n  ShorebirdTracks = 'shorebirdTracks',\n  Skyrocket = 'skyrocket',\n  SnowflakeFancy = 'snowflakeFancy',\n  Snowflakes = 'snowflakes',\n  Sombrero = 'sombrero',\n  Southwest = 'southwest',\n  Stars = 'stars',\n  StarsTop = 'starsTop',\n  Stars3d = 'stars3d',\n  StarsBlack = 'starsBlack',\n  StarsShadowed = 'starsShadowed',\n  Sun = 'sun',\n  Swirligig = 'swirligig',\n  TornPaper = 'tornPaper',\n  TornPaperBlack = 'tornPaperBlack',\n  Trees = 'trees',\n  TriangleParty = 'triangleParty',\n  Triangles = 'triangles',\n  Tribal1 = 'tribal1',\n  Tribal2 = 'tribal2',\n  Tribal3 = 'tribal3',\n  Tribal4 = 'tribal4',\n  Tribal5 = 'tribal5',\n  Tribal6 = 'tribal6',\n  TwistedLines1 = 'twistedLines1',\n  TwistedLines2 = 'twistedLines2',\n  Vine = 'vine',\n  Waveline = 'waveline',\n  WeavingAngles = 'weavingAngles',\n  WeavingBraid = 'weavingBraid',\n  WeavingRibbon = 'weavingRibbon',\n  WeavingStrips = 'weavingStrips',\n  WhiteFlowers = 'whiteFlowers',\n  Woodwork = 'woodwork',\n  XIllusions = 'xIllusions',\n  ZanyTriangles = 'zanyTriangles',\n  ZigZag = 'zigZag',\n  ZigZagStitch = 'zigZagStitch',\n}\n\nexport enum PageBorderDisplay {\n  ALL_PAGES = 'allPages',\n  FIRST_PAGE = 'firstPage',\n  NOT_FIRST_PAGE = 'notFirstPage',\n}\nexport enum PageBorderOffsetFrom {\n  PAGE = 'page',\n  TEXT = 'text',\n}\nexport enum PageBorderZOrder {\n  BACK = 'back',\n  FRONT = 'front',\n}\n","import { useContext } from 'react';\nimport { ControllerContext } from \"./index\";\n\n/**\n * 获得 Controller 实例，使用 `useControllerStatic` hook 的组件，不会随着编辑器内容的变化而发生重渲\n * @returns \n */\nexport default function useControllerStatic() {\n  const context = useContext(ControllerContext);\n  if (!context) {\n    throw new Error(\n      \"The `useControllerStatic` hook must be used inside the <Cangjie.Provider> component's context.\",\n    );\n  }\n  return context.controller;\n}\n","/* eslint-disable max-lines */\n/**\n * @packageDocumentation\n * @module Controller\n */\nimport * as React from 'react';\nimport warning from 'tiny-warning';\nimport { isEmpty, debounce, noop } from 'lodash-es';\nimport equal from 'fast-deep-equal';\nimport useController from './useController';\nimport connectController from './connectController';\nimport Command, {\n  PluginCommandArgs,\n  PluginCommandName,\n  PluginCommands,\n} from '../interfaces/command';\nimport type {\n  default as Query,\n  PluginQueryArgs,\n  PluginQueryName,\n  PluginQueryReturn,\n  PluginQueries,\n} from '../interfaces/query';\nimport Plugin from '../interfaces/plugin';\nimport Data from '../interfaces/data';\nimport RenderNode from '../interfaces/renderNode';\nimport Operation, {\n  MoveNodeOperation,\n  OperationType,\n} from '../models/operation';\nimport Document from '../models/document';\nimport Path from '../models/path';\nimport Value, { ValueProperties } from '../models/value';\nimport Injection from '../models/injection';\nimport Decoration from '../models/decoration';\nimport Node from '../models/node';\nimport Element from '../models/element';\nimport Block from '../models/block';\nimport Text from '../models/text';\nimport Selection from '../models/selection';\nimport Mark from '../models/mark';\nimport Leaf from '../models/leaf';\nimport createContextMenuPlugin from '../plugins/contextMenu';\nimport createMobilePlugin from '../plugins/mobile';\nimport createQueriesPlugin from '../plugins/queries';\nimport createRenderNodePlugin from '../plugins/renderNode';\nimport createCommandsPlugin from '../plugins/commands';\nimport * as Commands from '../commands/index';\nimport createNormalizationPlugin, { Schema } from '../plugins/normalization';\nimport createCoreSchemaPlugin from '../plugins/coreSchema';\nimport createHistoryPlugin from '../plugins/history';\nimport createCorePlugin from '../plugins/core';\nimport createUUIDPlugin from '../plugins/uuid';\nimport createGroupPlugin from '../plugins/group';\nimport { IS_MOBILE, IS_TOUCH_DEVICE } from '../utils/environment';\nimport {\n  ChangeEventHandler,\n  ControllerOptions,\n  ControllerProperties,\n  OperationWithValue,\n  PendingType,\n  ShowCaretConfig,\n  Terminal,\n} from '../interfaces/controller';\nimport FlushTask, { FlushType } from '../utils/flushtask';\nimport { getChildrenDecorations } from '../utils/getChildrenOverlaps';\nimport getChildrenInjections from '../utils/getChildrenInjections';\nimport { CONTEXT_SPLIT } from '../utils/opContext';\nimport Change from '../interfaces/change';\nimport { Subject } from '../models/observable';\nimport { InputData } from '../interfaces/input';\nimport { SelectionData } from '../hooks/useSelectionData';\nimport PendingQueue from './pendingQueue';\nimport UserDataManager from './userData';\nimport { PerfType } from '../interfaces/perf';\nimport CangjiePerfEvent from '../events/cangjiePerf';\nimport { perfMark, perfMeasure } from '../utils/perf';\nimport { Hot } from '../interfaces/hot';\nimport { getHots, shouldDebounceFlush, shouldSuppressFlush } from './hots';\nimport isEventHandler from './utils/isEventHandler';\nimport VirtualizeManager from '../virtualize/virtualizeManager';\nimport { VirtualizeOptions } from '../virtualize/interface';\nimport type { RestParameters, RunParameters } from '../interfaces/utility';\nimport { Group } from '../interfaces/group';\nimport type {\n  ActionCreator,\n  ActionPredicate,\n  PluginActionCreators,\n  PluginActionPredicates,\n} from '../interfaces/action';\nimport GroupManager from './groupManager';\nimport { getInsivibleNodes } from '../utils/virtualize';\nimport { DEFAULT_BUFFER_RANGE, DEFAULT_FIRST_PAINT_BLOCK_SIZE } from '../virtualize/constants';\nimport { BaseMo, createBaseSerializer, createSerializer, Mo } from '../mo';\nimport { createSchema, createStrictSchema } from '../mo/schema/createSchema';\nimport useControllerStatic from './useControllerStatic';\nimport { UUIDConfig } from '../plugins/uuid/types';\n\nconst FieldsNotAffectSpace: Array<keyof ValueProperties> = [\n  'composing',\n  'isFocused',\n  'decorations',\n  'selection',\n  'remoteSelections',\n];\n\nconst OperationsNotAffectSpace: string[] = [\n  OperationType.InsertText,\n  OperationType.RemoveText,\n  OperationType.SetMark,\n  OperationType.AddMark,\n  OperationType.RemoveMark,\n  OperationType.SetSelection,\n];\n\nfunction isSetValueNotAffectSpace(key: keyof ValueProperties) {\n  return FieldsNotAffectSpace.includes(key);\n}\n\nfunction isOperationNotAffectSpace(operation: Operation) {\n  return OperationsNotAffectSpace.includes(operation.type);\n}\n\nexport function getDirtyKeysFromOperation(value: Value, operation: Operation) {\n  const {\n    type,\n    // @ts-ignore\n    path,\n    // @ts-ignore\n    node,\n  } = operation;\n  const { document } = value;\n  const opNode = node || document.getNodeByPath(path);\n  const opNodeKey = opNode?.key;\n\n  switch (type) {\n    // PERF: Cangjie does not support normalizing `text.text` `leaf.marks`, just ignore changes for performance(~10ms in Huge Document story)\n    // PERF: 🚫🚫🚫 No [...xxx]. Spread syntax will affect performance when huge node changed.\n    // Ref: packages/cangjie/src/plugins/schema.ts\n    // case 'add_mark':\n    // case 'insert_text':\n    // case 'remove_mark':\n    // case 'remove_text':\n    // case 'set_mark':\n    case OperationType.SetNode: {\n      const ancestors = document.getAncestorsByPath(path).map((n) => n?.key);\n      ancestors.push(opNodeKey);\n      return ancestors;\n    }\n\n    case OperationType.InsertNode: {\n      const table = Text.isText(node)\n        ? {}\n        : (node as Element).getKeysToEdgesTable();\n      const ancestors = document.getAncestorsByPath(path).map((n) => n?.key);\n      ancestors.push(node.key);\n      Array.prototype.push.apply(ancestors, Object.keys(table));\n      return ancestors;\n    }\n\n    case OperationType.SplitNode: {\n      const ancestors = document.getAncestorsByPath(path).map((n) => n?.key);\n      // @ts-ignore\n      const nextKey = document.getNextNodeByPath(path).key;\n      ancestors.push(opNodeKey, nextKey);\n      return ancestors;\n    }\n\n    case OperationType.MergeNode: {\n      const ancestors = Path.ancestors(path);\n      const previousPath = Path.decrement(path);\n      ancestors.push(previousPath);\n      return ancestors.map((p) => document.getNodeByPath(p)).map((n) => n?.key);\n    }\n\n    case OperationType.MoveNode: {\n      // Path is more accurate than key when node moved.\n      const { newPath } = operation as MoveNodeOperation;\n      if (Path.isEqual(path, newPath)) {\n        return [];\n      }\n\n      let parentPath = Path.parent(path);\n      let newParentPath = Path.parent(newPath);\n\n      // HACK: this clause only exists because the `move_path` logic isn't\n      // consistent when it deals with siblings.\n      if (!Path.isSibling(path, newPath)) {\n        if (newParentPath.length && Path.isYounger(path, newPath)) {\n          newParentPath = Path.decrement(newParentPath, 1, path.length - 1);\n        }\n        if (\n          parentPath.length &&\n          (Path.isYounger(newPath, path) || Path.isAncestor(newPath, path))\n        ) {\n          parentPath = Path.increment(parentPath, 1, newPath.length - 1);\n        }\n      }\n\n      const oldAncestors = Path.ancestors(parentPath);\n      const newAncestors = Path.ancestors(newParentPath);\n      oldAncestors.push(parentPath);\n      Array.prototype.push.apply(oldAncestors, newAncestors);\n      oldAncestors.push(newParentPath);\n      return oldAncestors\n        .map((p) => document.getNodeByPath(p))\n        .map((n) => n?.key);\n    }\n\n    case OperationType.RemoveNode: {\n      // The node has been deleted, ancestors connot be getted by \"document.getAncestors\"\n      const ancestors = Path.ancestors(path);\n      return ancestors.map((p) => document.getNodeByPath(p)).map((n) => n?.key);\n    }\n\n    default: {\n      return [];\n    }\n  }\n}\n\n/**\n * diff比较（严格：顺序改变算diff）\n * @param element\n * @param prevElement\n * @param curIndexKey\n * @param preIndexKey\n * @deprecated\n */\nexport function getDirtyKeysFromElementDiffStrictly(\n  element: Node,\n  prevElement: Node | null,\n  curIndexKey?: string,\n  preIndexKey?: string,\n) {\n  const dirtyKeys: string[] = [];\n  if (element === prevElement && curIndexKey === preIndexKey) {\n    return dirtyKeys;\n  }\n  dirtyKeys.push(element.key);\n  if (!Element.isElement(element)) {\n    return dirtyKeys;\n  }\n  if (!Element.isElement(prevElement)) {\n    return Object.keys(element.getKeysToEdgesTable()).concat(element.key);\n  }\n  for (let i = 0; i < element.nodes.length; i += 1) {\n    const child = element.nodes[i];\n    const prevChild = prevElement.getNode(child.key);\n    const preChildIndexKey = prevElement?.nodes[i]?.key;\n    if (child !== prevChild || child.key !== preChildIndexKey) {\n      dirtyKeys.push(\n        ...getDirtyKeysFromElementDiffStrictly(\n          child,\n          prevChild,\n          child.key,\n          preChildIndexKey,\n        ),\n      );\n    }\n  }\n  return dirtyKeys;\n}\n\nfunction getDirtyKeysFromElementDiff(element: Node, prevElement: Node | null) {\n  const dirtyKeys: string[] = [];\n  if (element === prevElement) {\n    return dirtyKeys;\n  }\n  dirtyKeys.push(element.key);\n  if (!Element.isElement(element)) {\n    return dirtyKeys;\n  }\n  if (!Element.isElement(prevElement)) {\n    return Object.keys(element.getKeysToEdgesTable()).concat(element.key);\n  }\n  for (let i = 0; i < element.nodes.length; i += 1) {\n    const child = element.nodes[i];\n    const prevChild = prevElement.getNode(child.key);\n    if (child !== prevChild) {\n      getDirtyKeysFromElementDiff(child, prevChild).forEach((key) =>\n        dirtyKeys.push(key));\n    }\n  }\n  return dirtyKeys;\n}\n\ninterface ViewData {\n  decorations: Decoration[];\n  injections: Injection[];\n}\n\nconst composingMark = Mark.create('cangjieComposing');\n\ninterface PerfStart {\n  timestamp: number;\n  type: PerfType;\n  subtype: string;\n  ignore?: boolean; // 是否需要忽略不计该数据\n}\n\ninterface Perf {\n  /** 输入开始的 timestamp */\n  [PerfType.input]: PerfStart[];\n  /** 输入法更新时的 timestamp */\n  [PerfType.composing]: PerfStart[];\n  /** 选区事件开始时的 timestamp */\n  [PerfType.selection]: PerfStart[];\n}\n\ntype ScrollType =\n  | /** default: 跟随选区滚动 */\n  'toSelection'\n  /** 保持当前滚动位置稳定，一般是一次性的，消费过该数据后应置回 default 值 */\n  | 'maintain';\n\nexport const defaultScrollType: ScrollType = 'toSelection';\n\ninterface Virtualize {\n  /** 当前可见的元素集合 */\n  visibles: string[];\n  /** 当前正在调度的不可见节点模型计算 */\n  invisibleCalculationId: null | number;\n}\n\ninterface Flag {\n  normalizing: boolean;\n  pending: boolean;\n  saving: boolean;\n  /**\n   * 编辑器 OP 跟踪\n   */\n  tracking: boolean;\n  withCommand: boolean;\n  destroyed: boolean;\n  perf: Perf;\n  /**\n   * 页面滚动方式\n   * BACKGROUND:\n   * 1. 本地用户操作时，需要跟随选区滚动\n   * 2. 协同数据应用后，需要保持本地状态稳定\n   */\n  scrollType: ScrollType;\n  // 标记有关联关系的 OPs，解决 undo/redo 多次问题\n  // 一般使可用 node.key 作为 relatedId\n  opRelatedId: string | null;\n}\n\nexport function insertComposingIntoLeaves(\n  leaves: Leaf[],\n  offset: number,\n  composing: string,\n  selection: Selection,\n  decorations: Decoration[],\n) {\n  const [before, after] = Leaf.splitLeaves(leaves, offset);\n  const beforeLastLeaf = before[before.length - 1];\n  const beforeLastMarks = beforeLastLeaf ? beforeLastLeaf.marks : [];\n  let marks: Mark[] | null = null;\n  if (selection.marks) {\n    const decorationsMarks = decorations.map(({ mark }) => mark);\n    const activeDecorationsMarks = beforeLastMarks.filter((mark) =>\n      decorationsMarks.some((m) => equal(m, mark)));\n    marks = [...activeDecorationsMarks, ...selection.marks];\n  } else {\n    marks = beforeLastMarks;\n  }\n\n  const middle = Leaf.create({\n    text: composing,\n    marks: [...marks, composingMark],\n  });\n  const shouldConcatBefore = before.length > 1 || before[0]?.text;\n  const shouldConcatAfter = after.length > 1 || after[0]?.text;\n  return [\n    ...(shouldConcatBefore ? before : []),\n    middle,\n    ...(shouldConcatAfter ? after : []),\n  ];\n}\n\nconst DEFAULT_VIRTUALIZE_OPTIONS: Required<VirtualizeOptions> = {\n  enable: false,\n  enableOnDemandViewCalculation: true,\n  pendingDebounceTime: 500,\n  invisibleCalculationDebounceTime: 500,\n  maxOPsForHotsAnalyze: 10,\n  bufferRange: DEFAULT_BUFFER_RANGE,\n  firstPaintBlockSize: DEFAULT_FIRST_PAINT_BLOCK_SIZE,\n  disableViewVirtualize: false,\n};\n\nexport default class Controller {\n  static useController = useController;\n  static useControllerStatic = useControllerStatic;\n\n  /**\n   * 内部使用了[[Controller.useController]]，把Wrapper封装为一个高阶组件，并传入controller\n   */\n  static connectController = connectController;\n\n  /**\n   * 构建一个新的Controller对象\n   * @param props 构建参数\n   * @param options 构建选项\n   */\n  static create(props: ControllerProperties, options?: ControllerOptions) {\n    return new Controller(props, options);\n  }\n\n  private flag: Flag = {\n    normalizing: true,\n    pending: true,\n    saving: true,\n    /**\n     * @experimental\n     */\n    tracking: true,\n    withCommand: false,\n    destroyed: false,\n    perf: {\n      input: [],\n      composing: [],\n      selection: [],\n    },\n    scrollType: defaultScrollType,\n    opRelatedId: null,\n  };\n\n  private readonly VIEW_CACHE = {\n    /** 内存模型缓存 */\n    VALUE: new WeakSet<Value>(),\n    /** 节点视图模型缓存，若节点的视图数据不变，则复用缓存，避免计算 */\n    ELEMENT: new WeakMap<\n    Element,\n    // 视图模型、decorations，injections，composing\n    [Element, Decoration[], Injection[], string]\n    >(),\n    /** 已装饰的节点，key 为节点数据模型，value 为视图数据 */\n    DECORATED_ELEMENT: new WeakMap<Element, [Element, ViewData]>(),\n    /** 已注入数据的节点缓存，key 为分组节点，value 为 [注入数据的节点，节点被注入的 injections] */\n    INJECTED_ELEMENT: new WeakMap<Element, [Element, Injection[]]>(),\n    /** 分组节点缓存，key 装饰后的及节点视图，value 为分组节点 */\n    GROUPED_ELEMENT: new WeakMap<Element, Element>(),\n    /** 文本节点缓存 */\n    TEXT: new WeakMap<Text, [Text, Leaf[]]>(),\n    /** 叶子节点缓存 */\n    LEAVES: new WeakMap<Leaf[], [Leaf[], Decoration[]]>(),\n    /** 数据节点调用 `decorateNode` 结果缓存 */\n    DECORATE_NODE: new WeakMap<Element, Decoration[]>(),\n    /** 数据节点调用 `injectToNode` 结果缓存 */\n    INJECT_TO_NODE: new WeakMap<Element, Injection[]>(),\n    /** 节点视图模型缓存 */\n    DATA: new WeakMap<Node, ViewData>(),\n    /** 视图节点最终被注入的 injections, decorations 缓存  */\n    INJECT_TO_VIEW_ELEMENT: new WeakMap<\n    Element,\n    { decorations: Decoration[]; injections: Injection[] }\n    >(),\n    /** 视图文本节点最终被注入的 decorations 缓存 */\n    INJECT_TO_VIEW_TEXT: new WeakMap<Text, { decorations: Decoration[] }>(),\n    /** 节点选中态计算缓存 */\n    IS_SELECTED: new Set<string>(),\n    /** 为计算过视图模型的节点 */\n    VIEW_NEVER_CALCULATED: new Set<string>(),\n  };\n\n  private readonly dirtyKeys: Set<string> = new Set();\n\n  private readonly context: string[] = [];\n\n  /**\n   * 业务ID。业务方自行通过constructor设置、自行使用\n   */\n  public readonly biz: string;\n\n  /**\n   * 展示相应 uid 下的用户数据\n   */\n  public uid?: string;\n\n  /**\n   * 用户数据\n   */\n  public userData = new UserDataManager(this);\n\n  /**\n   * 输入数据流\n   */\n  public inputData$ = new Subject<InputData>();\n\n  /**\n   * 选区变化数据流\n   */\n  public selectionData$ = new Subject<SelectionData>();\n\n  /**\n   * hots 流\n   */\n  public hots$ = new Subject<Hot[]>();\n\n  /**\n   * pending 停止信号\n   */\n  public terminal$ = new Subject<Terminal | null>();\n\n  public virtualizeManager: VirtualizeManager | null = null;\n  /** serializer */\n  public readonly serializer: Mo;\n  public readonly baseSerializer: BaseMo;\n\n  /** schema */\n  public readonly schema: Schema;\n  public readonly strictSchema: Schema;\n\n  // @ts-ignore\n  private $value: Value = null;\n\n  private $viewDoc: Document | null = null;\n\n  private $scrollableContainer: Window | HTMLElement | null = null;\n\n  /**\n   * 文档的数据[[Value]]对象，参照[[ControllerProperties]]\n   */\n  public get value() {\n    return this.$value;\n  }\n\n  private $operations: Operation[] = [];\n\n  private $operationWithValues: OperationWithValue[] = [];\n\n  /**\n   * 获取当前的历史operations\n   */\n  public get operations() {\n    return this.$operations;\n  }\n\n  private readonly onChange: ChangeEventHandler;\n\n  private commands: Record<string, Command> = {};\n  private queries: Record<string, Query> = {};\n  private actions: Record<string, ActionCreator> = {};\n  private isActions: Record<string, ActionPredicate> = {};\n  private handlers: Record<string, Function[]> = {};\n  private renderNodes: Record<string, RenderNode[]> = {};\n\n  /**\n   * flush 的调度方法\n   */\n  private readonly flushType: FlushType;\n\n  /**\n   * flush 任务，这个方法主要处理一些需要手动 flush 的场景，手动 flush 会取消当前正在 pending 中的 task，防止二次 flush\n   */\n  private flushTask: FlushTask | null = null;\n\n  /**\n   * Only disable copy on readOnly mode\n   */\n  public canCopy: boolean;\n\n  public readonly readOnly: boolean;\n\n  public readonly autoFocus: boolean;\n\n  public hideSelectionOnBlur?: boolean;\n\n  public showCaret?: ShowCaretConfig;\n\n  public testType?: PendingType;\n\n  private readonly onBusyStateChange?: (isBusy: boolean) => void;\n\n  private readonly pendingQueue: PendingQueue;\n\n  private virtualizeOptions: VirtualizeOptions;\n\n  private debouncedFlush: ReturnType<typeof debounce>;\n\n  private debouncedStartInvisibleCalculationScheduler: ReturnType<\n    typeof debounce\n  >;\n\n  public groupManager = new GroupManager(this);\n\n  private readonly onPending: (value: Value) => void;\n\n  private readonly uuidConfig: Pick<UUIDConfig, 'enable'>;\n\n  /** 热区 */\n  public hots: {\n    /** 热区序列 */\n    hots: Hot[];\n    /** PERF: 保存热区节点 key，加快热区判定效率 */\n    keys: Record<string, true>;\n    /** 存在 Pending 的变更时，被 Pending 的操作类型 */\n    pendingType: PendingType | null;\n    /** 上一次 pending 的 op 规模 */\n    lengthOfPending: number;\n    /** 必须重新计算 node view */\n    forceRecalculate: boolean;\n  } = {\n    hots: [],\n    keys: {},\n    pendingType: null,\n    lengthOfPending: 0,\n    forceRecalculate: false,\n  };\n\n  private virtualize: Virtualize = {\n    visibles: [],\n    invisibleCalculationId: null,\n  };\n\n  public visibles$ = new Subject<string[]>();\n\n  private registerPlugin(plugin: Plugin | Plugin[]) {\n    if (Array.isArray(plugin)) {\n      plugin.forEach((p) => this.registerPlugin(p));\n      return;\n    }\n\n    const {\n      commands: cmds,\n      actions,\n      isActions,\n      queries,\n      renderNode,\n      schema: pluginSchema,\n      ...rest\n    } = plugin;\n    if (cmds) {\n      // NOTE: `commands` which has registered will have higher priority.\n      this.commands = Object.assign({}, cmds, this.commands);\n    }\n    if (actions) {\n      this.actions = Object.assign({}, actions, this.actions);\n    }\n    if (isActions) {\n      this.isActions = Object.assign({}, isActions, this.isActions);\n    }\n    if (queries) {\n      // NOTE: `queries` which has registered will have higher priority.\n      Object.keys(queries).forEach((query) => {\n        const prevQuery = this.queries[query];\n        const nextQuery = queries[query];\n        if (!prevQuery) {\n          this.queries[query] = nextQuery;\n          return;\n        }\n        this.queries[query] = (...args) => {\n          const ret = prevQuery(...args);\n          return ret === undefined ? nextQuery(...args) : ret;\n        };\n      });\n    }\n    if (renderNode) {\n      if (typeof renderNode === 'function') {\n        if (!this.handlers.renderNode) {\n          this.handlers.renderNode = [];\n        }\n        this.handlers.renderNode.push(renderNode);\n      } else {\n        Object.keys(renderNode).forEach((nodeType) => {\n          if (!this.renderNodes[nodeType]) {\n            this.renderNodes[nodeType] = [renderNode[nodeType]];\n          } else {\n            this.renderNodes[nodeType].push(renderNode[nodeType]);\n          }\n        });\n      }\n    }\n    if (pluginSchema) {\n      this.registerPlugin(createNormalizationPlugin(pluginSchema));\n    }\n\n    Object.keys(rest).forEach((key) => {\n      if (!this.handlers[key]) {\n        this.handlers[key] = [];\n      }\n      this.handlers[key].push(plugin[key]);\n    });\n  }\n\n  private constructor(\n    props: ControllerProperties,\n    options?: ControllerOptions,\n  ) {\n    const {\n      biz = 'cangjie',\n      dataUid,\n      plugins = [],\n      value,\n      onChange = () => { },\n      readOnly,\n      canCopy = true,\n      autoFocus,\n      flushType = 'microtask',\n      configs,\n      onBusyStateChange,\n      onPending,\n    } = props;\n    this.biz = biz;\n    this.setUid(dataUid);\n    this.onChange = (change: Change) => {\n      onChange(change);\n    };\n\n    this.readOnly = !!readOnly;\n    this.autoFocus = !!autoFocus;\n    this.showCaret = options?.showCaret;\n    this.canCopy = canCopy;\n    this.flushType = flushType;\n    this.onBusyStateChange = onBusyStateChange;\n    this.onPending = onPending || noop;\n\n    let {\n      enablePending = false,\n      virtualize = DEFAULT_VIRTUALIZE_OPTIONS,\n    } = options || {};\n    // 虚拟化和 OP Pending 互斥\n    if (virtualize.enable) {\n      enablePending = false;\n    }\n    if (enablePending) {\n      virtualize.enable = false;\n    }\n    const { __pendingQueue__ = {}, hideSelectionOnBlur = false, uuid = { enable: false } } =\n      options || {};\n    this.hideSelectionOnBlur = hideSelectionOnBlur;\n    this.pendingQueue = PendingQueue.create({\n      debounceTime: 500,\n      ...__pendingQueue__,\n      controller: this,\n      enablePending,\n    });\n    this.virtualizeOptions = virtualize;\n    this.virtualizeOptions = {\n      ...DEFAULT_VIRTUALIZE_OPTIONS,\n      ...virtualize,\n    };\n    this.debouncedFlush = debounce(this.flush, this.virtualizeOptions.pendingDebounceTime);\n    this.debouncedStartInvisibleCalculationScheduler = debounce(\n      this.startInvisibleCalculationScheduler,\n      this.virtualizeOptions.invisibleCalculationDebounceTime,\n    );\n\n    if (IS_MOBILE || IS_TOUCH_DEVICE) {\n      this.registerPlugin(createMobilePlugin(configs));\n    }\n\n    if (uuid.enable && !uuid.gen) {\n      throw new Error('[Cangjie-UUID]: Missing uuid generator');\n    }\n\n    this.uuidConfig = {\n      enable: uuid.enable,\n    };\n\n    // Step 1: collect `commands` & `queries` from `plugins`.\n    this.registerPlugin([\n      createCoreSchemaPlugin(),\n      createGroupPlugin(),\n      ...plugins,\n      (uuid.enable && !!uuid.gen) ? createUUIDPlugin(uuid) : {},\n      createHistoryPlugin(configs),\n      createCorePlugin(),\n      createContextMenuPlugin(configs),\n    ]);\n    // Step 2: wrap `commands` & `queries` into `onCommand` & `onQuery` respectively.\n    this.registerPlugin([\n      createCommandsPlugin({ ...Commands, ...this.commands }),\n      createQueriesPlugin({\n        isAtomic: () => false,\n        isEmpty: (_, block) => isEmpty(block),\n        isVoid: () => false,\n        ...this.queries,\n      }),\n      createRenderNodePlugin(this.renderNodes),\n    ]);\n    /**\n     * schema and serializer: used by other plugins(like clipboard) to deal with model normalize and serialization\n     */\n    // step 3: create serializer\n    this.serializer = createSerializer(plugins as any); // 迁移期间，原 Plugin 定义不能加 key，待迁移完成再去掉 as any\n    this.baseSerializer = createBaseSerializer(plugins as any);\n\n    // step 4: create schema\n    this.schema = createSchema(plugins as any);\n    this.strictSchema = createStrictSchema(plugins as any);\n\n    this.setValue(value, options);\n    if (virtualize.enable && !virtualize.disableViewVirtualize) {\n      this.virtualizeManager = new VirtualizeManager(this, virtualize as unknown as VirtualizeOptions);\n    }\n    this.run('onConstruct');\n  }\n\n  public setReadOnly(readOnly: boolean) {\n    // @ts-ignore Internal set only\n    this.readOnly = readOnly;\n  }\n\n  /**\n   * 设置一个新的value对象\n   * @param value 新的value对象\n   * @param options 设置选项\n   */\n  public setValue(\n    value: Value,\n    options?: ControllerOptions & {\n      clearOperations?: boolean;\n      clearHots?: boolean;\n    },\n  ) {\n    const {\n      clearOperations = true,\n      clearHots = true,\n      normalize = value !== this.value,\n    } = options || {};\n\n    // this.value 初始值为 null\n    const prevDocument = this.value?.document;\n    const prevSelection = this.value?.selection;\n\n    this.$value = value;\n    if (clearOperations) {\n      this.$operations = [];\n    }\n\n    if (clearHots) {\n      this.clearHots();\n    }\n\n    // Next Value\n    const { document, selection } = this.value;\n\n    // document 变更\n    if (normalize && !equal(document, prevDocument)) {\n      const dirtyKeys = prevDocument\n        ? getDirtyKeysFromElementDiff(document, prevDocument)\n        : Object.keys(document.getKeysToEdgesTable()).concat(document.key);\n      dirtyKeys.forEach((key) => {\n        this.dirtyKeys.add(key);\n      });\n      this.withoutTracking(() => this.normalizeDirtyKeys());\n    }\n\n    // selection 变更\n    if (normalize && !equal(selection, prevSelection)) {\n      this.normalizeSelection();\n    }\n    return this;\n  }\n\n  private setValueField<T extends keyof ValueProperties>(\n    key: T,\n    value: Required<ValueProperties>[T],\n  ) {\n    const beforeSetValue = this.value;\n    // @ts-ignore\n    this.setValue(this.value.set(key, value), {\n      normalize: false,\n      clearOperations: false,\n      clearHots: false,\n    });\n    this.$operationWithValues.push({\n      operation: null,\n      key,\n      value: beforeSetValue,\n      newValue: this.value,\n    });\n    this.scheduleFlush();\n    return this;\n  }\n\n  /**\n   * 重置编辑器的 value，服务于受控组件的 `props.value` 变化时\n   * `controller.resetValue(value)` 内部将驱动各个插件在重置 value 时所要完成的任务或者副作用\n   * @param value\n   * @param options\n   */\n  public resetValue(value: Value, options?: ControllerOptions) {\n    const controllerValue = this.value;\n    this.setValue(value, options);\n    this.run('onResetValue', value, controllerValue);\n  }\n\n  /**\n   * 1. 设置Value的data字段\n   * 2. 并更新Value\n   * 3. 调用flush刷新\n   */\n  public setData(data: Data) {\n    return this.setValueField('data', data);\n  }\n\n  /**\n   * 1. 设置Value的injection字段\n   * 2. 并更新Value\n   * 3. 调用flush刷新\n   */\n  public setInjections(injections: Injection[]) {\n    return this.setValueField('injections', injections);\n  }\n\n  /**\n   * 1. 设置Value的decoration字段\n   * 2. 并更新Value\n   * 3. 调用flush刷新\n   */\n  public setDecorations(decorations: Decoration[]) {\n    return this.setValueField('decorations', decorations);\n  }\n\n  public setComposing = (composing: string) => {\n    return this.setValueField('composing', composing);\n  };\n\n  public setIsFocused = (isFocused: boolean) => {\n    return this.setValueField('isFocused', isFocused);\n  };\n\n  /**\n   * 依次调用所有plugin的key字段，并传入下方的args字段，以及controller和next\n   * @param key 对应plugin的key字段\n   * @param args 传入plugin的参数\n   */\n  run<\n    K extends keyof Omit<\n    Plugin,\n    | 'commands'\n    | 'actions'\n    | 'isActions'\n    | 'queries'\n    | 'schema'\n    | 'models'\n    | 'toolbar'\n    >,\n  >(\n    key: K,\n    ...args: RunParameters<Required<Plugin>[K]>\n  ): ReturnType<\n    Required<Omit<Plugin, 'renderNode'> & { renderNode: RenderNode }>[K]\n    > {\n    const fns = this.handlers[key];\n\n    if (!fns) {\n      // @ts-ignore\n      return null;\n    }\n\n    const controller = this;\n\n    let i = 0;\n    let prevArgs = args;\n    function next(...as) {\n      // PERF\n      const currentArgs =\n        as.length === 0 ? prevArgs : [...as, ...prevArgs.slice(as.length)];\n      // @ts-ignore\n      prevArgs = currentArgs;\n\n      const fn = fns[i];\n      if (!fn) {\n        return null;\n      }\n      i += 1;\n      // PERF\n      switch (currentArgs.length) {\n        case 0:\n          return fn(controller, next);\n        case 1:\n          return fn(currentArgs[0], controller, next);\n        case 2:\n          return fn(currentArgs[0], currentArgs[1], controller, next);\n        default:\n          return fn(...currentArgs, controller, next);\n      }\n    }\n\n    if (isEventHandler(key)) {\n      const prevWithCommand = this.flag.withCommand;\n      this.flag.withCommand = true;\n      const ret = next();\n      this.flag.withCommand = prevWithCommand;\n      return ret;\n    }\n    return next();\n  }\n\n  /**\n   * 执行刷新操作。这里会调用normalize，并执行onChange Plugin和onChange回调\n   */\n  public flush() {\n    if (this.flag.destroyed) {\n      return this;\n    }\n    this.run('onChange');\n    this.normalizeSelection();\n    const { value, operations } = this;\n    const change = { value, operations };\n    this.$operations = [];\n    this.pendingQueue.clear();\n    this.hots.lengthOfPending = 0;\n    this.perfClearAll();\n    this.hots.pendingType = null;\n    this.debouncedFlush.cancel();\n\n    // 先取消 task，再置空\n    if (this.flushTask) {\n      this.flushTask.cancel();\n      this.flushTask = null;\n    }\n    this.$operationWithValues = [];\n    this.onChange(change);\n    this.onBusyStateChange?.(!!this.query('isEditorBusy'));\n    this.groupManager.notifyNewGroups();\n    return this;\n  }\n\n  /**\n   * 调度执行 flush，在微任务中执行\n   */\n  private scheduleFlush() {\n    // 如果 task 不存在则创建\n    if (!this.flushTask) {\n      this.flushTask = FlushTask.create(\n        () => {\n          // 在下一次任务调度时，判断 operations 是否需要 pending 或 hots\n          // 重置 flush task，使下一个周期内的 operations 能被 pending 判定\n          if (this.flushTask) {\n            this.flushTask!.cancel();\n            this.flushTask = null;\n          }\n\n          // 获得 flush task 周期内产生的热区\n          if (this.enableHots) {\n            const flushContext = {\n              operations: this.$operationWithValues,\n              value: this.$value,\n            };\n\n            const suppressed = shouldSuppressFlush(flushContext);\n            const debounced = !suppressed\n              ? shouldDebounceFlush(flushContext)\n              : null;\n            if (suppressed) {\n              // 是否抑制 Flush\n              // PERF：更新时沿用计算好的热区\n              this.setHots(\n                this.hots.pendingType === suppressed && this.hots.hots.length\n                  ? this.hots.hots\n                  : getHots(this.$operationWithValues, this),\n                suppressed,\n              );\n              this.onPending(this.$value);\n            } else if (debounced) {\n              // 是否 Debounce Flush\n              this.setHots(\n                getHots(\n                  this.$operationWithValues.slice(this.hots.lengthOfPending),\n                  this,\n                ),\n                debounced,\n              );\n              this.onPending(this.$value);\n              this.debouncedFlush();\n            } else {\n              this.setHots([], null);\n              this.flush();\n            }\n          } else if (this.isPendingEnable) {\n            // 需要 pending\n            this.pendingQueue.queue(\n              this.$operationWithValues.slice(this.pendingQueue.size()),\n            );\n          } else {\n            // 不需要 pending，立即 flush 堆积的 operations\n            this.flush();\n          }\n          this.onBusyStateChange?.(!!this.query('isEditorBusy'));\n        },\n        {\n          flushType: this.flushType,\n        },\n      ).start();\n    }\n  }\n\n  private transformDirtyKey(operation: Operation) {\n    if (operation.type === 'split_node') {\n      // @ts-ignore\n      const { node, path } = operation;\n      const operationNode = node || this.value.document.getNodeByPath(path);\n      if (this.dirtyKeys.has(operationNode?.key)) {\n        const extraDirty = this.value.document.getNodeByPath(\n          Path.increment(path),\n        );\n        if (extraDirty) {\n          this.dirtyKeys.add(extraDirty.key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Apply operation directly\n   * @param operation\n   * @returns\n   */\n  private privateApplyOperation(op: Operation) {\n    // PERF: 无 Context 时，不向 OP 注入 `context`\n    const opWithContext = this.context.length ? {\n      ...op,\n      context: this.context.join(CONTEXT_SPLIT),\n    } : op;\n    const operation = this.run('mapOperation', opWithContext);\n    const beforeApplyValue = this.value;\n\n    this.$value = this.value.applyOperation(operation);\n    const operationWithValue = {\n      operation,\n      value: beforeApplyValue,\n      newValue: this.value,\n    };\n    this.$operationWithValues.push(operationWithValue);\n    this.groupManager.regenerateGroup(operationWithValue);\n    this.operations.push(operation);\n    const dirtyKeysFromOp = getDirtyKeysFromOperation(this.value, operation);\n    dirtyKeysFromOp.forEach((key) => {\n      if (key) {\n        this.dirtyKeys.add(key);\n      }\n    });\n    this.transformDirtyKey(operation);\n    this.scheduleFlush();\n    this.userData.flush([operation]);\n\n    return this;\n  }\n\n  /**\n   * 执行单个Operation\n   * @param operation 需要执行的operation\n   */\n  public applyOperation(operation: Operation) {\n    if (this.flag.tracking) {\n      // 插件内部不允许嵌套执行\n      this.withoutTracking(() => this.run('onApplyOperation', operation));\n      return this;\n    }\n    return this.privateApplyOperation(operation);\n  }\n\n  private normalizeNodeByKey(key: string) {\n    let node = this.value.document.getNode(key);\n    if (!node) return;\n\n    let iterations = 0;\n\n    let childrenLength = 1;\n    if (!Text.isText(node)) {\n      if (Element.isElement(node)) {\n        childrenLength = node.nodes.length;\n      } else {\n        throw new Error(\n          'Unknown node, this is probably caused by multiple instances of Cangjie.',\n        );\n      }\n    }\n\n    const max = 100 + childrenLength;\n    while (node) {\n      const fn = this.run('normalizeNode', node);\n      if (!fn) {\n        break;\n      }\n      this.withCommand(fn);\n\n      const newValue = this.value;\n      const newDocument = newValue.document;\n      let found = newDocument.getNode(node.key);\n      if (found && found.key === node.key) {\n        node = found;\n      } else {\n        found = newDocument.getNode(node.key);\n        if (found) {\n          node = found;\n        } else {\n          break;\n        }\n      }\n\n      // eslint-disable-next-line no-plusplus\n      iterations++;\n\n      if (iterations > max) {\n        throw new Error(\n          'A schema rule could not be normalized after sufficient iterations. This is usually due to a `rule.normalize` or `plugin.normalizeNode` function of a schema being incorrectly written, causing an infinite loop.',\n        );\n      }\n    }\n  }\n\n  private normalizeDirtyKeys() {\n    if (!this.flag.normalizing || !this.dirtyKeys.size) {\n      return;\n    }\n\n    this.withoutNormalizing((self) => {\n      while (self.dirtyKeys.size) {\n        self.dirtyKeys.forEach((key) => {\n          self.dirtyKeys.delete(key);\n          this.normalizeNodeByKey(key!);\n        });\n      }\n    });\n  }\n\n  private normalizeSelection() {\n    const { document, selection } = this.value;\n    const { anchor, focus } = selection;\n    const anchorNode = document.getNode(anchor.key);\n    const focusNode = document.getNode(focus.key);\n    if (!anchorNode || !focusNode) {\n      this.command(Commands.moveToStartOfDocument);\n    } else {\n      if (anchor.isTextPoint() && anchor.offset > anchorNode.text.length) {\n        this.command(Commands.moveAnchorToEndOfNode, anchorNode);\n      }\n      if (focus.isTextPoint() && focus.offset > focusNode.text.length) {\n        this.command(Commands.moveFocusToEndOfNode, focusNode);\n      }\n    }\n  }\n\n  private groupNodes(\n    range: [number, number],\n    parent: Document | Block,\n    groups: Block[] = [],\n  ) {\n    const groupedNodes: Block[] = [];\n    let remainedRange = range;\n    let isChildrenGrouped = false;\n    while (remainedRange[0] < remainedRange[1]) {\n      const [start] = remainedRange;\n      const first = parent.nodes[start];\n      const { node, remainedRange: remained } = this.run(\n        'groupNodes',\n        remainedRange,\n        { parent, groups },\n      );\n      if (node !== first) {\n        isChildrenGrouped = true;\n        const maybeNestedGroup = node.merge({\n          nodes: this.groupNodes([start, remained[0]], parent, [\n            ...groups,\n            node,\n          ]),\n        });\n        groupedNodes.push(maybeNestedGroup);\n        if (\n          !maybeNestedGroup.nodes[0] &&\n          process.env.NODE_ENV === 'development'\n        ) {\n          throw new Error(\n            'Cangjie.Plugin[groupNodes] expect return non-empty group.',\n          );\n        }\n      } else {\n        groupedNodes.push(node);\n      }\n      remainedRange = remained;\n    }\n    const lastGroup = groups[groups.length - 1] || parent;\n    if (isChildrenGrouped) {\n      // 如果分组可见，需保证分组下的不可见节点的视图模型被成功计算\n      if (this.enableOnDemandViewCalculation) {\n        return groupedNodes.map(node => this.calculateViewInVisibleNode(node));\n      }\n      return groupedNodes;\n    }\n    return isChildrenGrouped ? groupedNodes : lastGroup.nodes;\n  }\n\n  private toViewText(text: Text, decorations: Decoration[]) {\n    this.VIEW_CACHE.VIEW_NEVER_CALCULATED.delete(text.key);\n    const { selection, composing } = this.value;\n    const { anchor: point } = selection;\n    const isCollapsedInText =\n      selection.isCollapsed && point.isTextPoint() && point.key === text.key;\n    if (!decorations.length && (!isCollapsedInText || !composing)) {\n      return text;\n    }\n\n    // split leaves\n    let { leaves } = text;\n    if (decorations.length) {\n      const [cachedViewLeaves, cachedDepDecorations] =\n        this.VIEW_CACHE.LEAVES.get(leaves) || [];\n      if (cachedViewLeaves && equal(cachedDepDecorations, decorations)) {\n        leaves = cachedViewLeaves;\n      } else {\n        const viewLeaves = text.getLeaves(decorations);\n        this.VIEW_CACHE.LEAVES.set(leaves, [viewLeaves, decorations]);\n        leaves = viewLeaves;\n      }\n    }\n    if (isCollapsedInText && composing && point.isTextPoint()) {\n      const hasComposingLeaf = leaves.some((leaf) =>\n        leaf.marks.some((mark) => mark.type === 'cangjieComposing'));\n      if (!hasComposingLeaf) {\n        leaves = insertComposingIntoLeaves(\n          leaves,\n          point.offset,\n          composing,\n          selection,\n          decorations,\n        );\n      }\n    }\n\n    const [cachedViewText, cachedDepLeaves] =\n      this.VIEW_CACHE.TEXT.get(text) || [];\n    if (cachedViewText && equal(cachedDepLeaves, leaves)) {\n      return cachedViewText;\n    }\n    const viewText = text.set('leaves', leaves);\n    this.VIEW_CACHE.TEXT.set(text, [viewText, leaves]);\n    this.VIEW_CACHE.DATA.set(viewText, { decorations, injections: [] });\n    this.VIEW_CACHE.INJECT_TO_VIEW_TEXT.set(viewText, { decorations });\n    return viewText;\n  }\n\n  private toViewElement(\n    element: Element,\n    decorations: Decoration[],\n    injections: Injection[],\n    /** 若当前节点可见，则其子孙节点也被认为可见 */\n    isNodeVisible = false,\n  ) {\n    this.VIEW_CACHE.VIEW_NEVER_CALCULATED.delete(element.key);\n    const { document, selection, composing } = this.value;\n    const { anchor: point } = selection;\n    const isCollapsedInElement =\n      selection.isCollapsed &&\n      point.isTextPoint() &&\n      !!element.getKeysToEdgesTable()[point.key];\n    const isCollapsedInEmptyElement = isCollapsedInElement && element.isEmpty();\n    const computedComposing = isCollapsedInElement ? composing : '';\n    const [viewElement, prevDecorations, prevInjections, prevComposing] =\n      this.VIEW_CACHE.ELEMENT.get(element) || [];\n    if (\n      viewElement &&\n      equal(decorations, prevDecorations) &&\n      equal(injections, prevInjections) &&\n      computedComposing === prevComposing &&\n      !isCollapsedInEmptyElement\n    ) {\n      return viewElement;\n    }\n\n    let nodeDecorations = this.VIEW_CACHE.DECORATE_NODE.get(element);\n    if (isCollapsedInEmptyElement || !nodeDecorations) {\n      nodeDecorations = this.run('decorateNode', element);\n    }\n    this.VIEW_CACHE.DECORATE_NODE.set(element, nodeDecorations);\n    const allDecorations = nodeDecorations.length\n      ? nodeDecorations.concat(decorations)\n      : decorations;\n\n    let nodeInjections = this.VIEW_CACHE.INJECT_TO_NODE.get(element);\n    if (isCollapsedInEmptyElement || !nodeInjections) {\n      nodeInjections = this.run('injectToNode', element);\n    }\n    this.VIEW_CACHE.INJECT_TO_NODE.set(element, nodeInjections);\n    const allInjections = nodeInjections.length\n      ? nodeInjections.concat(injections)\n      : injections;\n\n    const selfInjections: Injection[] = [];\n    const descendantsInjections: Injection[] = [];\n    allInjections.forEach((injection) => {\n      if (injection.key === element.key) {\n        selfInjections.push(injection);\n      } else {\n        descendantsInjections.push(injection);\n      }\n    });\n\n    let decoratedElement = element;\n    const [cachedDecoratedElement, cachedDepsData] =\n      this.VIEW_CACHE.DECORATED_ELEMENT.get(element) || [];\n    const depsData = {\n      decorations: allDecorations,\n      injections: descendantsInjections,\n      composing: computedComposing,\n    };\n    if (cachedDecoratedElement && equal(cachedDepsData, depsData)) {\n      decoratedElement = cachedDecoratedElement;\n    } else {\n      // delegate view data to children\n      const childrenDecorations = allDecorations.length\n        ? getChildrenDecorations(document, element, allDecorations)\n        : null;\n      const childrenInjections = descendantsInjections.length\n        ? getChildrenInjections(document, element, descendantsInjections)\n        : null;\n      let isChildrenDecorated = false;\n      const decoratedNodes = element.nodes.map((child, index) => {\n        const decoratedChild = this.toView(\n          child,\n          childrenDecorations ? childrenDecorations[index] : [],\n          childrenInjections ? childrenInjections[index] : [],\n          isNodeVisible,\n        );\n        isChildrenDecorated = isChildrenDecorated || decoratedChild !== child;\n        return decoratedChild;\n      });\n      const decorated = isChildrenDecorated\n        ? element.set('nodes', decoratedNodes)\n        : element;\n      this.VIEW_CACHE.DECORATED_ELEMENT.set(element, [decorated, depsData]);\n      decoratedElement = decorated;\n    }\n\n    let groupedElement = decoratedElement;\n    const cachedGroupedElement =\n      this.VIEW_CACHE.GROUPED_ELEMENT.get(decoratedElement);\n    if (cachedGroupedElement) {\n      groupedElement = cachedGroupedElement;\n    } else {\n      const groupedNodes = Block.isBlocks(decoratedElement.nodes)\n        ? this.groupNodes(\n          [0, decoratedElement.nodes.length],\n          decoratedElement as Document | Block,\n        )\n        : decoratedElement.nodes;\n      groupedElement =\n        groupedNodes === decoratedElement.nodes\n          ? decoratedElement\n          : decoratedElement.set('nodes', groupedNodes);\n\n      this.VIEW_CACHE.GROUPED_ELEMENT.set(decoratedElement, groupedElement);\n    }\n\n    const [cachedViewElement, cachedDepInjections] =\n      this.VIEW_CACHE.INJECTED_ELEMENT.get(groupedElement) || [];\n    if (cachedViewElement && equal(cachedDepInjections, selfInjections)) {\n      return cachedViewElement;\n    }\n    const injectedElement = Injection.injectIntoNode(\n      selfInjections,\n      groupedElement,\n    ) as Element;\n\n    this.VIEW_CACHE.INJECTED_ELEMENT.set(groupedElement, [\n      injectedElement,\n      selfInjections,\n    ]);\n    this.VIEW_CACHE.ELEMENT.set(element, [\n      injectedElement,\n      decorations,\n      injections,\n      composing,\n    ]);\n    this.VIEW_CACHE.DATA.set(injectedElement, depsData);\n    this.VIEW_CACHE.INJECT_TO_VIEW_ELEMENT.set(injectedElement, {\n      decorations,\n      injections,\n    });\n    return injectedElement;\n  }\n\n  /**\n   * 将 Data Model 上的节点转换为 View Model 的节点\n   * @param node\n   * @param data\n   */\n  public toView(\n    node: Node,\n    decorations: Decoration[],\n    injections: Injection[],\n    isNodeVisible = false,\n  ): Node {\n    const n = node.toSubType();\n    // 开启视图模型的按需重算后，节点视图模型将根据其可见与否决定是否重算\n    if (this.enableOnDemandViewCalculation) {\n      if (Document.isDocument(n)) {\n        return this.toViewElement(n, decorations, injections);\n      }\n      if (isNodeVisible || this.isNodeVisible(node)) {\n        return n.isText()\n          ? this.toViewText(n, decorations)\n          : this.toViewElement(n, decorations, injections, true);\n      } else {\n        if (n.isText()) {\n          const [viewCache] = this.VIEW_CACHE.TEXT.get(n) || [];\n          if (!viewCache) {\n            this.VIEW_CACHE.VIEW_NEVER_CALCULATED.add(n.key);\n          }\n          return viewCache || n;\n        } else {\n          const [viewCache] = this.VIEW_CACHE.ELEMENT.get(n) || [];\n          if (!viewCache) {\n            this.VIEW_CACHE.VIEW_NEVER_CALCULATED.add(n.key);\n          }\n          return viewCache || n;\n        }\n      }\n    } else {\n      return n.isText()\n        ? this.toViewText(n, decorations)\n        : this.toViewElement(n, decorations, injections);\n    }\n  }\n\n  /**\n   * 热区计算时，获得应当注入 Hot View Node 的 View Data\n   * 根据当前变更判断是否需要重算 View Data\n   * 1. 若需要：则携带（1）parent node 的被分发的视图数据（2） Top-Level(`controller.value.injections`, `controller.value.decorations`) 的视图数据， 重新为 node 分发视图数据\n   * 2. 否则，使用缓存的视图数据\n   * @param viewNode\n   * @param dataNode\n   * @returns\n   */\n  private getInjectedViewData(viewNode: Node, dataNode: Node) {\n    if (Document.isDocument(dataNode)) {\n      return {\n        decorations: this.value.decorations,\n        injections: this.value.injections,\n      };\n    }\n    const { document } = this.value;\n    const parent = document.assertParent(dataNode.key);\n    const firstOp = this.$operationWithValues[0];\n    const cacheKey = Element.isElement(viewNode) ? viewNode : parent;\n    const cache = this.VIEW_CACHE.INJECT_TO_VIEW_ELEMENT.get(cacheKey);\n    const deps = {\n      decorations: [],\n      injections: [],\n      ...(cache || {}),\n    };\n\n    // 当上一次注入的 cache 无法获取时，也需要重新分发\n    const decorationsChanged =\n      !cache ||\n      (firstOp && firstOp.value.decorations !== this.$value.decorations);\n    const injectionsChanged =\n      !cache ||\n      (firstOp && firstOp.value.injections !== this.$value.injections);\n\n    let injectedDecorations: Decoration[] = deps.decorations;\n    let injectedInjections: Injection[] = deps.injections;\n\n    // 获得缓存的 deps\n    if (decorationsChanged) {\n      const { decorations: parentDecorations = [] } =\n        this.VIEW_CACHE.INJECT_TO_VIEW_ELEMENT.get(parent) || {};\n      injectedDecorations = parent\n        ? getChildrenDecorations(\n          document,\n          parent,\n          this.value.decorations.concat(parentDecorations),\n        )[parent.nodes.indexOf(dataNode)]\n        : this.value.decorations;\n    }\n\n    if (injectionsChanged) {\n      const { injections: parentInjections = [] } =\n        this.VIEW_CACHE.INJECT_TO_VIEW_ELEMENT.get(parent) || {};\n      // BACKGGROUND: 部分插件 `injectToNode` 的实现有 anti-pattern，\n      // 并非从当前节点测算，而从顶层节点（`document`）测算，因而其 injections 会写入顶层节点缓存\n      // 故而这里要并入顶层节点的 injections 重新分发\n      const docInjects = this.VIEW_CACHE.INJECT_TO_NODE.get(document) || [];\n      injectedInjections = parent\n        ? getChildrenInjections(\n          document,\n          parent,\n          this.value.injections.concat(parentInjections).concat(docInjects),\n        )[parent.nodes.indexOf(dataNode)]\n        : this.value.injections;\n    }\n\n    // 重新计算后，更新缓存\n    this.VIEW_CACHE.INJECT_TO_VIEW_ELEMENT.set(cacheKey, {\n      injections: injectedInjections,\n      decorations: injectedDecorations,\n    });\n\n    return { decorations: injectedDecorations, injections: injectedInjections };\n  }\n\n  /**\n   * 重新计算热区中的视图模型\n   * @param viewNode\n   * @returns\n   */\n  public recalculateView(viewNode: Node) {\n    const cachedViewNode = this.$viewDoc!.assertNode(viewNode.key);\n    const dataNode = this.value.document.getNode(viewNode.key);\n    // 诸如分组节点这样不存在与数据模型上的视图节点，不会被热区计算考虑，直接返回\n    if (!dataNode) {\n      return {\n        node: viewNode,\n        document: this.$viewDoc!,\n      };\n    }\n    let newViewNode: Node = cachedViewNode;\n    let newViewDoc: Document = this.$viewDoc!;\n    // 2. 结合最新的依赖，重算视图模型\n    if (Element.isElement(viewNode)) {\n      const { decorations, injections } = this.getInjectedViewData(\n        viewNode,\n        dataNode,\n      );\n      newViewNode = this.toViewElement(\n        dataNode as Element,\n        decorations,\n        injections,\n        true,\n      );\n      const path = this.$viewDoc!.assertPath(newViewNode.key);\n      newViewDoc = this.$viewDoc!.replaceNode(\n        path,\n        newViewNode,\n        this.noSpacialEffect(),\n      );\n    }\n    // 3. 刷新视图模型缓存，并返回重新计算得到的 Node 和 Document 视图\n    this.$viewDoc = newViewDoc;\n    return {\n      node: newViewNode,\n      document: newViewDoc,\n    };\n  }\n\n  /**\n   * 是否当前未产生节点空间的影响\n   * 1. 协同变更无法评估是否对空间有影响\n   * 2. 非协同变更：\n   *   * Pending 时，无空间影响\n   *   * 非 Pending 时，判断累积的操作是否有空间影响\n   * @returns\n   */\n  private noSpacialEffect() {\n    return (\n      !this.hots.forceRecalculate &&\n      (this.isPending ||\n        this.$operationWithValues!.every((op) => {\n          const { operation, key } = op;\n          if (!operation) {\n            return isSetValueNotAffectSpace(key!);\n          }\n          return isOperationNotAffectSpace(operation);\n        }))\n    );\n  }\n\n  /**\n   * 获得热区状态下的视图\n   * @param node\n   * @param document\n   * @param shouldRecalculate\n   * @returns\n   */\n  public getView(node: Node, document: Document, shouldRecalculate: boolean) {\n    if (this.hots.forceRecalculate) {\n      return this.recalculateView(node);\n    }\n\n    if (shouldRecalculate && this.pendingType !== PendingType.selection) {\n      return this.recalculateView(node);\n    }\n\n    // 如果没有变更，直接返回缓存的计算结果\n    if (this.hasHots()) {\n      const view = this.$viewDoc!.assertNode(node.key);\n      return {\n        node: view,\n        document: this.$viewDoc!,\n      };\n    }\n    return { node, document };\n  }\n\n  /**\n   * 执行一个函数，并在执行过程中，禁止任何的 normalize\n   * @param fn 执行函数\n   */\n  public withoutNormalizing(fn: (self: Controller) => void) {\n    const prevNormalizing = this.flag.normalizing;\n    this.flag.normalizing = false;\n    fn(this);\n    this.flag.normalizing = prevNormalizing;\n    return this;\n  }\n\n  /**\n   * 执行一个函数，并在执行过程中，禁止任何的 pending\n   * @param fn 执行函数\n   * @returns\n   */\n  public withoutPending(fn: (self: Controller) => void) {\n    const prevPending = this.flag.pending;\n    this.flag.pending = false;\n    fn(this);\n    this.flag.pending = prevPending;\n    return this;\n  }\n\n  /**\n   * 执行一个函数，并在执行过程中，不记录 undo stack\n   * @param fn 执行函数\n   * @returns\n   */\n  public withoutSaving(\n    fn: (self: Controller) => void,\n    {\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n    }: { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?: boolean } = {},\n  ) {\n    const prevSaving = this.flag.saving;\n    this.flag.saving = false;\n    let nextOperationIndex = this.operations.length;\n    this.withOpContext('cj/history/withoutsaving', () => fn(this));\n    if (!__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) {\n      while (nextOperationIndex < this.operations.length) {\n        const operation = this.operations[nextOperationIndex];\n        const operationType = operation.type;\n        if (\n          operationType !== 'set_node' &&\n          operationType !== 'set_mark' &&\n          operationType !== 'add_mark' &&\n          operationType !== 'remove_mark' &&\n          operationType !== 'set_selection'\n        ) {\n          throw new Error(\n            'Cangjie.Controller.withoutSaving only support Operation[type=set_node|set_mark|add_mark|remove_mark|set_selection].',\n          );\n        }\n        nextOperationIndex += 1;\n      }\n    }\n    this.flag.saving = prevSaving;\n    return this;\n  }\n\n  /**\n   * 执行一个函数，并在执行过程中禁止 op tracking\n   * @param fn 执行函数\n   * @returns\n   */\n  public withoutTracking(fn: (self: Controller) => void) {\n    const prevTracking = this.flag.tracking;\n    this.flag.tracking = false;\n    fn(this);\n    this.flag.tracking = prevTracking;\n    return this;\n  }\n\n  public withCommand(fn: (self: Controller) => void) {\n    const prevWithCommand = this.flag.withCommand;\n    this.flag.withCommand = true;\n    fn(this);\n    this.flag.withCommand = prevWithCommand;\n    return this;\n  }\n\n  public withOpContext(\n    context: string,\n    fn: (self: Controller) => void,\n    meta?: any[],\n  ) {\n    if (meta) {\n      this.context.push(`${context}(${JSON.stringify(meta)})`);\n    } else {\n      this.context.push(context);\n    }\n    fn(this);\n    this.context.pop();\n    return this;\n  }\n\n  /**\n   * 执行一个command\n   * @param cmd command函数或者字符串。传入函数会直接执行，字符串则会调用所有插件的onCommand中对应的处理函数\n   * @param args command的参数\n   */\n  public command<T extends keyof PluginCommands | Command | string>(\n    cmd: T extends keyof PluginCommands ? PluginCommandName<T> : T,\n    ...args: T extends Command\n      ? RestParameters<T>\n      : T extends keyof PluginCommands\n        ? PluginCommandArgs<T>\n        : any[]\n  ) {\n    if (process.env.NODE_ENV === 'development') {\n      warning(\n        this.flag.withCommand,\n        'Should not use Cangjie.Controller.command out of handlers or normalizer.',\n      );\n    }\n    if (typeof cmd === 'function') {\n      cmd(this, ...args);\n    } else {\n      this.run('onCommand', { type: cmd as string, args });\n    }\n\n    this.withoutTracking(() => this.normalizeDirtyKeys());\n    return this;\n  }\n\n  /**\n   * 执行一个query\n   * @param qry query函数或者字符串。传入函数会直接执行，字符串则会调用所有插件的onQuery中对应的处理函数\n   * @param args query的参数\n   */\n  public query<T extends keyof PluginQueries | Query | string>(\n    qry: T extends keyof PluginQueries ? PluginQueryName<T> : T,\n    ...args: T extends Query\n      ? RestParameters<T>\n      : T extends keyof PluginQueries\n        ? PluginQueryArgs<T>\n        : any[]\n  ): T extends Query\n      ? ReturnType<T>\n      : T extends keyof PluginQueries\n        ? PluginQueryReturn<T>\n        : any {\n    if (typeof qry === 'function') {\n      return qry(this, ...args);\n    }\n    return this.run('onQuery', { type: qry as string, args });\n  }\n\n  /**\n   * 触发一个插件的 action\n   * @param name string action 名称\n   * @param args  action 调用参数\n   *\n   * TODO: 插件迁移完成后，删掉 string 的定义\n   */\n  public dispatch<\n    T extends keyof PluginActionCreators | string = keyof PluginActionCreators,\n  >(\n    name: T,\n    ...args: T extends keyof PluginActionCreators\n      ? Parameters<PluginActionCreators[T]>\n      : any[]\n  ) {\n    const creator = this.actions[name];\n    if (creator) {\n      this.run('onAction', creator(...args));\n    }\n  }\n\n  /**\n   * 获取 action 判断函数。 返回的结果用于判断入参是否是某种 action, 支持 type predicate\n   * @param name action Name: 插件基于 PluginActionPredicates 注册\n   * @returns (action: any): action is SomeAction\n   *\n   * TODO: 插件迁移完成后，删掉 string 的定义\n   */\n  public isActionFactory<\n    T extends\n    | keyof PluginActionPredicates\n    | string = keyof PluginActionPredicates,\n  >(\n    name: T,\n  ): T extends keyof PluginActionPredicates\n      ? PluginActionPredicates[T] | undefined\n      : ((action: any) => boolean) | undefined {\n    return this.isActions[name] as any;\n  }\n\n  /**\n   * 销毁当前 controller 实例\n   */\n  public destroy() {\n    this.flag.destroyed = true;\n    this.groupManager.cleanup();\n    if (this.virtualize.invisibleCalculationId) {\n      window.cancelIdleCallback(this.virtualize.invisibleCalculationId);\n    }\n    this.debouncedFlush.cancel();\n    this.debouncedStartInvisibleCalculationScheduler.cancel();\n    this.cleanup();\n  }\n\n  /**\n   * 清理编辑器以及插件的cache\n   */\n  public cleanup() {\n    this.run('onCleanup');\n  }\n\n  /**\n   * 获得当前编辑器的视图模型\n   */\n  public get view() {\n    if (this.hasHots() && this.$viewDoc) {\n      return this.$viewDoc;\n    }\n    const { document, decorations, injections } = this.value;\n    if (this.VIEW_CACHE.VALUE.has(this.value)) {\n      const [decoratedDocument] =\n        this.VIEW_CACHE.DECORATED_ELEMENT.get(document) || [];\n      if (decoratedDocument) {\n        const groupedDocument =\n          this.VIEW_CACHE.GROUPED_ELEMENT.get(decoratedDocument);\n        if (groupedDocument) {\n          const [viewDocument] =\n            this.VIEW_CACHE.INJECTED_ELEMENT.get(groupedDocument) || [];\n          if (viewDocument) {\n            return viewDocument as Document;\n          }\n        }\n      }\n    }\n\n    this.VIEW_CACHE.VALUE.add(this.value);\n    const viewDoc = this.toView(document, decorations, injections) as Document;\n    this.$viewDoc = viewDoc;\n    return viewDoc;\n  }\n\n  /**\n   * 获得 `node`  的视图数据\n   * @param node\n   */\n  public getViewData(node: Node): ViewData {\n    return (\n      this.VIEW_CACHE.DATA.get(node) || {\n        decorations: [],\n        injections: [],\n      }\n    );\n  }\n\n  public setOpRelatedId(id: string | null) {\n    this.flag.opRelatedId = id;\n    return this;\n  }\n\n  public get opRelatedId() {\n    return this.flag.opRelatedId;\n  }\n\n  public get shouldResumePosition() {\n    return this.flag.scrollType === 'maintain';\n  }\n\n  public get shouldScrollToSelection() {\n    return this.flag.scrollType === 'toSelection';\n  }\n\n  public setScrollType(type: ScrollType) {\n    this.flag.scrollType = type;\n  }\n\n  public get isPending() {\n    // OP Pending 或热区过程中\n    return !!this.pendingQueue.type || !!this.hots.pendingType;\n  }\n\n  public get enablePending() {\n    return this.pendingQueue.enablePending;\n  }\n\n  public get isPendingEnable() {\n    return (\n      Object.values(this.pendingQueue.enablePending).some((s) => !!s) &&\n      this.flag.pending\n    );\n  }\n\n  public get pendingType() {\n    // 热区 debounce 时，pending type\n    if (this.hasHots()) {\n      return this.hots.pendingType;\n    }\n    return this.pendingQueue.type || this.testType;\n  }\n\n  public get isTracking() {\n    return this.flag.tracking;\n  }\n\n  // 通知 pending 结束事件\n  public dispatchPendingTerminal() {\n    this.terminal$.next(null);\n  }\n\n  public perfStart(payload: { type: PerfType; subtype?: string }) {\n    const { type, subtype } = payload;\n    const perf = this.flag.perf[type];\n    const timestamp = performance.now();\n    perf.push({\n      type,\n      subtype: subtype || type,\n      timestamp,\n    });\n    perfMark(`cangjie-perf-${subtype || type}-start-${timestamp}`);\n  }\n\n  public perfEnd(type: PerfType, dropped = false) {\n    const perf = this.flag.perf[type];\n    const start = perf.shift();\n    if (!start) {\n      return;\n    }\n\n    const { subtype, timestamp } = start;\n    const endKey = `cangjie-perf-${subtype || type}-end-${timestamp}`;\n    const startKey = `cangjie-perf-${subtype || type}-start-${timestamp}`;\n    perfMark(endKey);\n\n    if (start.ignore) {\n      perfMeasure('cangjie-perf-ignore', startKey, endKey);\n      return;\n    }\n\n    perfMeasure(`cangjie-perf-${subtype}`, startKey, endKey);\n\n    // 计算准确时间\n    const current = performance.now();\n    let duration = current - timestamp;\n\n    if (perf.length > 0) {\n      duration -= current - perf[0].timestamp;\n    }\n\n    this.run(\n      'onCangjiePerf',\n      CangjiePerfEvent({\n        type: subtype,\n        duration,\n        dropped,\n      }),\n    );\n  }\n\n  /**\n   * 丢弃 perf 数据\n   * @description BACKGROUND:\n   * 通常 perf 队列遵循 **先进先出** 的原则，每一次入队都意味着一次交互事件的产生，正常出队的时机是在渲染后的 setTimeout 任务里（通过 perfEnd 出队）。\n   * - 有些情况下我们不需要记录此次 perf 值（eg. 交互事件后未触发视图改变），所以通过 `perfDrop(type)` 异步地丢弃之；\n   * - 特殊情况下，如果在正常出队前发现数据无效（eg. 丢帧：marcoTask 先于渲染执行）需要丢弃，则通过 `perfDrop(type, true)` 同步地丢弃之。\n   * @param type PerfType\n   * @param immediately 是否立即丢弃\n   */\n  public perfDrop(type: PerfType, immediately = false) {\n    if (immediately) {\n      const { subtype, timestamp } = this.flag.perf[type].shift() || {};\n      const endKey = `cangjie-perf-${subtype}-end-${timestamp}`;\n      subtype && perfMark(endKey);\n      return;\n    }\n\n    // 延迟丢弃时，先标记该数据 ignore\n    const lastIndex = this.flag.perf[type].length - 1;\n    if (lastIndex >= 0 && this.flag.perf[type][lastIndex]) {\n      this.flag.perf[type][lastIndex].ignore = true;\n      setTimeout(() => {\n        const { subtype, timestamp } = this.flag.perf[type].shift() || {};\n        const endKey = `cangjie-perf-${subtype}-end-${timestamp}`;\n        subtype && perfMark(endKey);\n      });\n    }\n  }\n\n  private perfClearAll() {\n    Object.keys(this.flag.perf).forEach((type) => {\n      this.flag.perf[type] = [];\n    });\n  }\n\n  private setUid(dataUid: string | number | undefined) {\n    this.uid = dataUid === undefined ? undefined : String(dataUid);\n  }\n\n  public switchUid(dataUid: string | number | undefined) {\n    this.setUid(dataUid);\n    this.userData.update$.next({ uuid: '*' });\n  }\n\n  public getHots() {\n    if (this.$operationWithValues.length <= (this.virtualizeOptions.maxOPsForHotsAnalyze || 0)) {\n      return getHots(this.$operationWithValues, this);\n    }\n    return [];\n  }\n\n  public setHots(\n    hots: Hot[],\n    pendingType: PendingType | null,\n    forceRecalculate = false,\n  ) {\n    this.hots = {\n      hots,\n      keys: hots.reduce((ret, hot) => {\n        ret[hot.node.key] = true;\n        return ret;\n      }, {}),\n      pendingType,\n      lengthOfPending: pendingType ? this.$operationWithValues.length : 0,\n      forceRecalculate,\n    };\n    if (hots.length) {\n      this.hots$.next(hots);\n    }\n    return this;\n  }\n\n  public clearHots() {\n    this.hots = {\n      hots: [],\n      keys: {},\n      pendingType: null,\n      lengthOfPending: 0,\n      forceRecalculate: false,\n    };\n    return this;\n  }\n\n  public hasHots() {\n    return this.hots.hots.length > 0;\n  }\n\n  /** 是否开启热区 */\n  public get enableHots() {\n    const { enable, pendingDebounceTime } = this.virtualizeOptions;\n    return enable && typeof pendingDebounceTime === 'number' && pendingDebounceTime > 0;\n  }\n\n  /**\n   * 当前节点视图是否热\n   * @param viewNode\n   * @returns\n   */\n  public isViewHot(viewNode: Node) {\n    if (!this.enableHots) {\n      return false;\n    }\n    return (\n      !!this.hots.keys[viewNode.key] &&\n      this.$value.document.hasNode(viewNode.key)\n    );\n  }\n\n  public addIsSelected(key: string) {\n    this.VIEW_CACHE.IS_SELECTED.add(key);\n  }\n\n  public getIsSelected(key: string) {\n    return this.VIEW_CACHE.IS_SELECTED.has(key);\n  }\n\n  public removeIsSelected(key: string) {\n    this.VIEW_CACHE.IS_SELECTED.delete(key);\n  }\n\n  /**\n   * 1. 若配置了闪享光标，则 blur 时需要显示远程光标\n   * 2. 否则，根据配置项 hideSelectionOnBlur 决定是否需要隐藏\n   * @returns 是否需要不显示选区\n   */\n  public shouldHideSelectionOnBlur() {\n    return !this.showCaret?.onBlur && this.hideSelectionOnBlur;\n  }\n\n  /**\n   * 是否开启虚拟化\n   */\n  public get enableVirtualize() {\n    return this.virtualizeOptions.enable;\n  }\n\n  /**\n   * 是否开启模型虚拟化以及视图虚拟化\n   */\n  public get enableVirtualizeView() {\n    return this.virtualizeOptions.enable && !this.virtualizeOptions.disableViewVirtualize;\n  }\n\n  /** 是否开启按需计算 */\n  public get enableOnDemandViewCalculation() {\n    return !!this.virtualizeOptions.enable && this.virtualizeOptions.enableOnDemandViewCalculation;\n  }\n\n  /**\n   * 虚拟化时，是否节点可见\n   * @param node\n   * @returns\n   */\n  public isNodeVisible(node: Node) {\n    if (!Element.isElement(node)) {\n      return false;\n    }\n    const { visibles } = this.virtualize;\n    return visibles.some((visible) => {\n      if (node.key === visible) {\n        return true;\n      }\n      // 如果可见节点是视图模型上的节点，则判断节点是否在视图模型上\n      if (!this.value.document.hasNode(visible)) {\n        const viewElement = this.$viewDoc?.getNode(visible);\n        return viewElement?.isElement() && viewElement.hasNode(node.key);\n      }\n      return false;\n    });\n  }\n\n  /**\n   * 是否 visibles 中存在未计算过视图模型的节点\n   * 当节点被认为不可见后，它的视图模型不会被计算，那么下一次可见时：\n   * - 节点本身可见\n   * - 节点所在分组可见\n   * 此时，需要保证节点的视图模型能够被正确计算\n   * @param visibles\n   * @returns\n   */\n  private hasViewNeverCalculatedInVisibles(visibles: string[]) {\n    return visibles.some((visible) => {\n      if (this.VIEW_CACHE.VIEW_NEVER_CALCULATED.has(visible)) {\n        return true;\n      }\n      if (!this.value.document.hasNode(visible)) {\n        const viewElement = this.$viewDoc?.assertElement(visible);\n        return !!viewElement?.findDescendant(\n          (node) =>\n            node.isElement() &&\n            this.VIEW_CACHE.VIEW_NEVER_CALCULATED.has(node.key),\n        );\n      }\n      return false;\n    });\n  }\n\n  /**\n   * 设置虚拟化的可见节点集合\n   * @param visibles\n   */\n  public setVirtualize<T extends keyof Virtualize>(\n    key: T,\n    value: Virtualize[T],\n  ) {\n    const { document } = this.value;\n    if (key === 'visibles' && !equal(this.virtualize[key], value)) {\n      const visibles = value as Virtualize['visibles'];\n      this.virtualize.visibles = visibles;\n      // 如果 visible 中存在未计算过视图模型的节点，则需要重算视图模型\n      if (this.hasViewNeverCalculatedInVisibles(visibles)) {\n        //清理视图缓存，避免节点可见后，取到旧的视图模型缓存\n        this.clearHots();\n        this.VIEW_CACHE.VALUE.delete(this.value);\n        this.VIEW_CACHE.ELEMENT.delete(document);\n        this.VIEW_CACHE.DECORATED_ELEMENT.delete(document);\n        this.VIEW_CACHE.INJECTED_ELEMENT.delete(document);\n        this.VIEW_CACHE.GROUPED_ELEMENT.delete(document);\n        this.view;\n      }\n      this.visibles$.next(visibles);\n      // 每当可视节点发生变化，则重新开始调度不可见节点的计算\n      this.debouncedStartInvisibleCalculationScheduler(visibles);\n    } else {\n      this.virtualize[key] = value;\n    }\n    return this;\n  }\n\n  private startInvisibleCalculationScheduler = (\n    visibles: Virtualize['visibles'],\n  ) => {\n    /** 若浏览器不支持 requestIdleCallback，则不开启闲时计算 */\n    if (typeof window.requestIdleCallback !== 'function') {\n      return;\n    }\n    if (this.virtualize.invisibleCalculationId) {\n      window.cancelIdleCallback(this.virtualize.invisibleCalculationId);\n    }\n    const invisibles = getInsivibleNodes(this.value.document, visibles);\n    this.scheduleInvisibleCalculation(invisibles);\n  };\n\n  private scheduleInvisibleCalculation = (invisibles: Element[]) => {\n    this.virtualize.invisibleCalculationId = window.requestIdleCallback(\n      (deadline) => this.runInvisibleViewCalculation(deadline, invisibles),\n    );\n  };\n\n  private runInvisibleViewCalculation = (\n    deadline: IdleDeadline,\n    invisibles: Element[],\n  ) => {\n    while (\n      (deadline.timeRemaining() > 0 || deadline.didTimeout) &&\n      invisibles.length\n    ) {\n      // 每次取出一个不可见节点计算\n      this.calculateInvisibleView(invisibles.pop()!);\n    }\n\n    if (invisibles.length) {\n      // 继续下一个计算\n      this.scheduleInvisibleCalculation(invisibles);\n    } else {\n      this.virtualize.invisibleCalculationId = null;\n    }\n  };\n\n  private calculateInvisibleView = (invisible: Element) => {\n    const { injections, decorations, document } = this.value;\n    const docInjections = this.VIEW_CACHE.INJECT_TO_NODE.get(document) || [];\n    const docDecorations = this.VIEW_CACHE.DECORATE_NODE.get(document) || [];\n\n    const viewElement = this.toViewElement(\n      invisible,\n      decorations.concat(docDecorations),\n      injections.concat(docInjections),\n    );\n    if (!this.VIEW_CACHE.ELEMENT.get(document)) {\n      const { decorations, injections } = this.value;\n      this.toView(document, decorations, injections);\n    }\n    const [viewDocument, prevDecorations, prevInjections, prevComposing] =\n      this.VIEW_CACHE.ELEMENT.get(document)!;\n    const newViewDocument = viewDocument.replaceNode(\n      this.view.assertPath(viewElement.key),\n      viewElement,\n      /** 重新 toView，会带来新的视图子树，因此需要重构 key-to-path table */\n      false,\n    ) as Document;\n    this.VIEW_CACHE.ELEMENT.set(document, [\n      newViewDocument,\n      prevDecorations,\n      prevInjections,\n      prevComposing,\n    ]);\n    this.VIEW_CACHE.VALUE.delete(this.value);\n    this.$viewDoc = newViewDocument;\n    return viewElement;\n  };\n\n  /**\n   * 计算可见节点子树下的未被计算的视图模型\n   * @param node\n   * @returns\n   */\n  private calculateViewInVisibleNode = (\n    node: Element,\n    parentVisible = false,\n  ) => {\n    const { document } = this.value;\n    // 如果是视图模型节点，递归计算其子树下未被计算过的视图模型\n    if (!document.hasNode(node.key) && this.isNodeVisible(node)) {\n      return node.mapDescendants((descendant) => {\n        return descendant.isElement()\n          ? this.calculateViewInVisibleNode(descendant, true)\n          : descendant;\n      });\n    }\n    // 如果可见节点下，存在未被计算的视图模型，则计算之保证可见节点的视图正确\n    else if (\n      document.hasNode(node.key) &&\n      parentVisible &&\n      this.VIEW_CACHE.VIEW_NEVER_CALCULATED.has(node.key)\n    ) {\n      return this.calculateInvisibleView(node);\n    }\n    return node;\n  };\n\n  public get visibleBlocks() {\n    return this.virtualize.visibles;\n  }\n\n  public set scrollableContainer(scrollableContainer: Window | HTMLElement | null) {\n    this.$scrollableContainer = scrollableContainer;\n  }\n\n  public get scrollableContainer() {\n    return this.$scrollableContainer || window;\n  }\n\n  public get enableUUID() {\n    return this.uuidConfig.enable;\n  }\n}\n\n/**\n * @ignore\n */\nexport const ControllerContext =\n  React.createContext<{\n    controller: Controller;\n    subject: Subject<Value>;\n  } | null>(null);\n","/**\n * @packageDocumentation\n * @module Hooks\n */\nimport React from 'react';\nimport Node from '../models/node';\nimport Block from '../models/block';\nimport Controller from '../controller';\n\ninterface DocStyleData {\n  rPr?: Record<string, any>;\n  pPr?: Record<string, any>;\n}\n\nexport interface DocStyle {\n  docDefaults?: {\n    data: DocStyleData;\n    name: string;\n    type: string;\n    default?: number;\n  };\n  tableHeader?: Record<string, any>;\n}\n\nexport interface RenderNodeStyleProps {\n  /**\n   * 节点\n   */\n  node: Node;\n  /**\n   * 文档样式表\n   */\n  docStyle?: DocStyle;\n}\n\nexport type RenderContentStyleProps = Omit<RenderNodeStyleProps, 'node'>;\n\n/**\n * 样式 context\n */\nexport const StyleContext = React.createContext<DocStyle | undefined>(undefined);\n\nexport function useStyle() {\n  return React.useContext(StyleContext);\n}\n\n/**\n * 获取节点样式\n * @returns React.CSSProperties\n */\nexport function useNodeStyle(\n  controller: Controller,\n  node: Node,\n  visible = true,\n) {\n  const docStyle = React.useContext(StyleContext);\n  // 非 block 元素不消费 style，return 以提高性能\n  if (!Block.isBlock(node)) return {};\n  const style: React.CSSProperties = controller.run('getNodeStyle', {\n    node,\n    docStyle,\n  }) || {};\n  if (visible === false) {\n    style.display = 'none';\n  }\n  return style;\n}\n\n/**\n * 获取全局默认文本样式\n * @returns React.CSSProperties\n */\nexport function useContentStyle(controller: Controller) {\n  const docStyle = React.useContext(StyleContext);\n  const style: React.CSSProperties = controller.run('getContentStyle', {\n    docStyle,\n  }) || {};\n  return style;\n}\n","/**\n * @packageDocumentation\n * @module Controller\n */\nimport * as React from 'react';\nimport warning from 'tiny-warning';\nimport { noop } from 'lodash-es';\nimport {\n  ControllerProperties,\n  ControllerOptions,\n} from '../interfaces/controller';\nimport { focus } from '../commands/index';\nimport Controller, { ControllerContext } from './index';\nimport Value from '../models/value';\nimport { StyleContext, DocStyle } from '../hooks/useStyle';\nimport { Subject } from '../models/observable';\nimport { IS_DEV } from '../utils/environment';\n\nexport interface ProviderProps extends ControllerProperties {\n  /**\n   * 编辑器Controller引用的回调函数\n   */\n  controllerRef?: (controller: Controller) => void;\n  /**\n   * 编辑器参数\n   */\n  options?: ControllerOptions;\n  /**\n   * children\n   */\n  children: React.ReactNode;\n  /**\n   * 文档样式表\n   */\n  docStyle?: DocStyle;\n  onFirstRender?: (controller: Controller) => void;\n}\n\nexport default function Provider(props: ProviderProps) {\n  const {\n    biz,\n    dataUid,\n    plugins,\n    value,\n    onChange = noop,\n    controllerRef = noop,\n    children,\n    readOnly = false,\n    autoFocus = false,\n    canCopy,\n    options,\n    flushType,\n    configs,\n    onBusyStateChange,\n    onFirstRender,\n    docStyle,\n    onPending = noop,\n  } = props;\n\n  const pluginsRef = React.useRef<ProviderProps['plugins']>();\n  const onChangeRef = React.useRef<ProviderProps['onChange']>();\n  const prevValueRef = React.useRef<Value>(value);\n  const controller = React.useMemo(() => {\n    const controllerIns = Controller.create(\n      {\n        biz,\n        dataUid,\n        plugins,\n        value,\n        onChange,\n        readOnly,\n        autoFocus,\n        canCopy,\n        flushType,\n        configs,\n        onBusyStateChange,\n        onPending,\n      },\n      options,\n    );\n\n    pluginsRef.current = plugins;\n    onChangeRef.current = onChange;\n\n    controllerIns.groupManager.generateAllGroups();\n\n    return controllerIns;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (onFirstRender) {\n      onFirstRender(controller);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    controller.showCaret = options?.showCaret;\n  }, [options?.showCaret?.onBlur, options?.showCaret?.onReadOnly]);\n\n  // 因 canCopy 而重新生成 controller 会导致后续的交互出 BUG\n  React.useEffect(() => {\n    if (typeof canCopy === 'boolean') {\n      controller.canCopy = canCopy;\n    }\n  }, [controller, canCopy]);\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      warning(\n        plugins === pluginsRef.current,\n        \"Cangjie.Provider will ignore `plugins`'s change.\",\n      );\n      warning(\n        onChange === onChangeRef.current,\n        \"Cangjie.Provider will ignore `onChange`'s change.\",\n      );\n    }\n  }, [plugins, onChange]);\n\n  React.useEffect(() => {\n    // uid 变化，刷新用户数据\n    controller.switchUid(dataUid);\n  }, [dataUid]);\n\n  controllerRef(controller);\n\n  if (readOnly !== controller.readOnly) {\n    controller.setReadOnly(readOnly);\n  }\n\n  if (controller.enableVirtualize && controller.virtualizeManager?.viewInitialized) {\n    controller.virtualizeManager.workflowOnValueChange();\n  }\n\n  // Note: This action will trigger normalize\n  if (\n    value !== prevValueRef.current &&\n    value !== controller.value\n  ) {\n    controller.resetValue(value, options);\n  }\n\n  prevValueRef.current = value;\n\n  const context = React.useMemo(() => {\n    const subject = new Subject<Value>();\n    return {\n      controller,\n      subject,\n    };\n  }, [controller]);\n\n  // Note: Force re-render except first mount.\n  const didMountRef = React.useRef(false);\n  React.useEffect(() => {\n    if (didMountRef.current) {\n      context.subject.next(value);\n    } else {\n      didMountRef.current = true;\n    }\n  }, [value]);\n\n  React.useEffect(() => {\n    if (autoFocus) {\n      controller.command(focus).flush();\n    }\n  }, [controller, autoFocus]);\n\n  React.useEffect(() => {\n    // 首次渲染完成，刷新分组信息\n    controller.groupManager.notifyNewGroups(true);\n    return () => {\n      controller.destroy();\n    };\n  }, [controller]);\n\n  React.useEffect(() => {\n    if (IS_DEV) {\n      const [main] = React.version.split('.');\n      warning(\n        Number(main) < 18,\n        'React > 17 is not fully supported, editor will have some weird problems.',\n      );\n    }\n  }, []);\n\n  return (\n    <ControllerContext.Provider value={context}>\n      <StyleContext.Provider value={docStyle}>{children}</StyleContext.Provider>\n    </ControllerContext.Provider>\n  );\n}\n","/**\n * @packageDocumentation\n * @module Models\n */\nimport isPlainObject from 'is-plain-object';\nimport { Serializable, SerializeOptions } from '../interfaces/serializable';\nimport ImmutableRecord from './immutableRecord';\nimport { TextPointJSON, TextPoint } from './point';\nimport Mark, { MarkJSON } from './mark';\n\nexport interface DecorationProperties {\n  start: TextPoint;\n  end: TextPoint;\n  mark: Mark;\n}\n\nexport interface DecorationJSON {\n  start: TextPointJSON;\n  end: TextPointJSON;\n  mark: MarkJSON;\n}\n\nexport default class Decoration extends ImmutableRecord\n  implements Serializable<DecorationJSON> {\n  static create(props: Decoration | DecorationProperties): Decoration {\n    if (Decoration.isDecoration(props)) {\n      return props;\n    }\n\n    if (isPlainObject(props)) {\n      const { start, end, mark } = props;\n      return new Decoration({\n        start: TextPoint.create(start),\n        end: TextPoint.create(end),\n        mark: Mark.create(mark),\n      });\n    }\n\n    throw new Error(\n      `\\`Decoration.create\\` only accepts objects or decorations, but you passed it: ${props}`,\n    );\n  }\n\n  static fromJSON(json: DecorationJSON) {\n    const { start, end, mark } = json;\n    return Decoration.create({\n      start: TextPoint.fromJSON(start),\n      end: TextPoint.fromJSON(end),\n      mark: Mark.fromJSON(mark),\n    });\n  }\n\n  static isDecoration(maybeDecoration: any): maybeDecoration is Decoration {\n    return maybeDecoration instanceof Decoration;\n  }\n\n  /**\n   * Decoration的start point\n   */\n  public readonly start: TextPoint;\n\n  /**\n   * Decoration的end point\n   */\n  public readonly end: TextPoint;\n\n  /**\n   * Decoration的mark\n   */\n  public readonly mark: Mark;\n\n  private constructor(props: DecorationProperties) {\n    super();\n    const { start, end, mark } = props;\n    this.start = start;\n    this.end = end;\n    this.mark = mark;\n    this.freeze();\n  }\n\n  public merge(props: Partial<DecorationProperties>) {\n    return new Decoration({\n      start: this.start,\n      end: this.end,\n      mark: this.mark,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof DecorationProperties>(\n    key: T,\n    value: DecorationProperties[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    return {\n      start: this.start.toJSON(options),\n      end: this.end.toJSON(options),\n      mark: this.mark.toJSON(),\n    };\n  }\n}\n","import { omit, union } from 'lodash-es';\nimport { isEmptyObj, omitDeepBy } from '../utils/omitEmpty';\nimport { SetNodeOperation } from './operation';\nimport Value from './value';\n\nexport function mergeUserProperties (\n  value: Value,\n  operation: SetNodeOperation\n) {\n  const { path, properties, context } = operation;\n  // 将当前 OP 中用户数据与 value 上的合并\n  // 避免协同编辑下，不同用户/不同段落 OP 数据相互覆盖\n  const matched = context?.match(/userdata\\/(.*)\\/(.*)/);\n  const targetData = properties?.data?.userData || {};\n  if (matched && path?.length === 0 && targetData) {\n    let mergedData = value.document.data?.userData || {};\n    // context 上携带此次修改用户数据的 uid 和块 uuid\n    const mUid = matched[1];\n    let uids: string[] = [];\n    if (mUid === '*') {\n      uids = union(Object.keys(mergedData), Object.keys(targetData));\n    } else if (mUid) {\n      uids = [mUid];\n    }\n    const uuids = matched[2].split(',');\n    uids.forEach((uid) => {\n      uuids.forEach((uuid) => {\n        const target = targetData?.[uid]?.[uuid];\n        if (uuid) {\n          if (target === undefined) {\n            // 删除数据\n            mergedData = {\n              ...mergedData,\n              [uid]: omit(mergedData?.[uid], uuid)\n            };\n          } else {\n            // 用 op 中 uuid 对应数据覆盖 document 上对应的\n            mergedData = {\n              ...mergedData,\n              [uid]: {\n                ...mergedData?.[uid],\n                [uuid]: target,\n              }\n            }\n          }\n        } \n      })\n    })\n    return {\n      ...properties,\n      data: omitDeepBy({\n        ...properties.data,\n        userData: mergedData\n      }, isEmptyObj),\n    };\n  }\n  return properties;\n}","/* eslint-disable no-dupe-class-members */\n/**\n * @packageDocumentation\n * @module Models\n */\nimport equal from 'fast-deep-equal';\nimport isPlainObject from 'is-plain-object';\nimport { noop, once } from 'lodash-es';\nimport ImmutableRecord from './immutableRecord';\nimport Path from './path';\nimport Injection, { InjectionJSON } from './injection';\nimport Decoration, { DecorationJSON } from './decoration';\nimport Selection, { SelectionJSON, SupportPointName } from './selection';\nimport { TextPoint, EdgePoint } from './point';\nimport Node from './node';\nimport { ElementProperties, ElementTypeName } from './element';\nimport Document, { DocumentJSON } from './document';\nimport Block from './block';\nimport Inline from './inline';\nimport Text from './text';\nimport Mark, { MarkProperties } from './mark';\nimport Operation, {\n  OperationType,\n  AddMarkOperation,\n  InsertNodeOperation,\n  InsertTextOperation,\n  MergeNodeOperation,\n  MoveNodeOperation,\n  RemoveMarkOperation,\n  RemoveNodeOperation,\n  RemoveTextOperation,\n  SetMarkOperation,\n  SetNodeOperation,\n  SetSelectionOperation,\n  SplitNodeOperation,\n} from './operation';\nimport { Serializable, SerializeOptions } from '../interfaces/serializable';\nimport { mergeUserProperties } from './userData';\n\n// eslint-disable-next-line no-console\nconst warning =\n  typeof console !== 'undefined'\n    ? once(console.warn.bind(console) || (() => {}))\n    : noop;\n\nfunction getDefaultSelection(document: Document) {\n  const firstNode = document.getFirstNode();\n  if (Text.isText(firstNode)) {\n    const point = TextPoint.create({ key: firstNode.key, offset: 0 });\n    return Selection.create({ anchor: point, focus: point });\n  }\n  const point = EdgePoint.create({ key: document.key, edge: EdgePoint.BEFORE });\n  return Selection.create({ anchor: point, focus: point });\n}\n\nexport interface ValueProperties {\n  data?: Record<string, any>;\n  document?: Document;\n  selection?: Selection;\n  remoteSelections?: Selection[];\n  injections?: Injection[];\n  decorations?: Decoration[];\n  composing?: string;\n  isFocused?: boolean;\n}\n\nexport interface ValueJSON {\n  data?: Record<string, any>;\n  klass?: 'value';\n  document?: DocumentJSON;\n  selection?: SelectionJSON;\n  remoteSelections?: SelectionJSON[];\n  decorations?: DecorationJSON[];\n  injections?: InjectionJSON[];\n}\n\nexport default class Value extends ImmutableRecord\n  implements Serializable<ValueJSON> {\n  static create(props: Value | ValueProperties = {}): Value {\n    if (Value.isValue(props)) {\n      return props;\n    }\n\n    if (isPlainObject(props)) {\n      const {\n        data = {},\n        document: doc = {},\n        selection,\n        remoteSelections = [],\n        injections = [],\n        decorations = [],\n        composing = '',\n        isFocused = false,\n      } = props;\n      const document = Document.create(doc);\n      return new Value({\n        data,\n        document,\n        selection: selection || getDefaultSelection(document),\n        remoteSelections,\n        injections,\n        decorations,\n        composing,\n        isFocused,\n      });\n    }\n\n    throw new Error(\n      `\\`Value.create\\` only accepts objects or values, but you passed it: ${props}`,\n    );\n  }\n\n  static fromJSON(json: ValueJSON) {\n    const {\n      document = {},\n      injections,\n      selection,\n      remoteSelections,\n      decorations,\n    } = json;\n    const documentValue = Document.fromJSON(document);\n    return Value.create({\n      ...json,\n      injections: injections ? injections.map(Injection.fromJSON) : undefined,\n      document: documentValue,\n      selection: selection\n        ? Selection.fromJSON(selection)\n        : getDefaultSelection(documentValue),\n      remoteSelections: remoteSelections\n        ? remoteSelections.map(Selection.fromJSON)\n        : undefined,\n      decorations: decorations\n        ? decorations.map(Decoration.fromJSON)\n        : undefined,\n    });\n  }\n\n  static isValue(maybeValue: any): maybeValue is Value {\n    return maybeValue instanceof Value;\n  }\n\n  /**\n   * value 的 injections 数组\n   */\n  public readonly injections: Injection[];\n\n  /**\n   * value 的 decoration 数组\n   */\n  public readonly decorations: Decoration[];\n\n  /**\n   * 是否是focus状态\n   */\n  public readonly isFocused: boolean;\n\n  /**\n   * value 的内存数据\n   */\n  public readonly data: Record<string, any>;\n\n  /**\n   * 根文档对象\n   */\n  public readonly document: Document;\n\n  /**\n   * 当前的选区\n   */\n  public readonly selection: Selection;\n\n  /**\n   * 当前的选区\n   */\n  public get rangeSelection() {\n    if ('development' === process.env.NODE_ENV) {\n      warning(\n        '`Value.rangeSelection` is deprecated, please use `Value.selection`',\n      );\n    }\n    return this.selection;\n  }\n\n  /**\n   * 远程选区\n   */\n  public readonly remoteSelections: Selection[] = [];\n\n  /**\n   * 输入法 composing 但是没有确认的文字\n   */\n  public readonly composing: string = '';\n\n  protected constructor(props: Required<ValueProperties>) {\n    super();\n    const {\n      data,\n      document,\n      selection,\n      remoteSelections,\n      injections,\n      decorations,\n      composing,\n      isFocused,\n    } = props;\n    this.data = { ...data };\n    this.document = document;\n    this.selection = selection;\n    this.remoteSelections = remoteSelections;\n    this.injections = injections;\n    this.decorations = decorations;\n    this.composing = composing;\n    this.isFocused = isFocused;\n    this.freeze();\n  }\n\n  /**\n   * 获取当前选中的blocks\n   */\n  public get blocks() {\n    return !this.selection\n      ? []\n      : this.document.getLeafBlocksAtRange(this.selection);\n  }\n\n  /**\n   * 获取当前选中的inlines\n   */\n  public get inlines(): Inline[] {\n    return !this.selection\n      ? []\n      : this.document.getLeafInlinesAtRange(this.selection);\n  }\n\n  private getElement(pointName: SupportPointName, type: 'block'): Block | null;\n\n  private getElement(\n    pointName: SupportPointName,\n    type: 'inline',\n  ): Inline | null;\n\n  private getElement(pointName: SupportPointName, type: 'text'): Node | null;\n\n  private getElement(pointName: SupportPointName, type: ElementTypeName) {\n    const { document, selection } = this;\n    if (!selection) {\n      return null;\n    }\n    const point = selection.getPoint(pointName, document);\n    if (type === 'block') {\n      return document.getClosestBlockFromPoint(point.key);\n    } else if (type === 'inline') {\n      return document.getClosestInline(point.key);\n    } else {\n      return document.getNode(point.key);\n    }\n  }\n\n  /**\n   * 获取当前选中的anchor位置对应的block\n   */\n  public get anchorBlock() {\n    return this.getElement('anchor', 'block');\n  }\n\n  /**\n   * 获取当前选中的focus位置对应的block\n   */\n  public get focusBlock() {\n    return this.getElement('focus', 'block');\n  }\n\n  /**\n   * 获取当前选中的start位置对应的block\n   */\n  public get startBlock() {\n    return this.getElement('start', 'block');\n  }\n\n  /**\n   * 获取当前选中的end位置对应的block\n   */\n  public get endBlock() {\n    return this.getElement('end', 'block');\n  }\n\n  /**\n   * 获取当前选中的anchor位置对应的inline\n   */\n  public get anchorInline() {\n    return this.getElement('anchor', 'inline');\n  }\n\n  /**\n   * 获取当前选中的focus位置对应的inline\n   */\n  public get focusInline() {\n    return this.getElement('focus', 'inline');\n  }\n\n  /**\n   * 获取当前选中的start位置对应的inline\n   */\n  public get startInline() {\n    return this.getElement('start', 'inline');\n  }\n\n  /**\n   * 获取当前选中的end位置对应的inline\n   */\n  public get endInline() {\n    return this.getElement('end', 'inline');\n  }\n\n  /**\n   * 获取当前选中的anchor位置对应的text\n   */\n  public get anchorText() {\n    return this.getElement('anchor', 'text');\n  }\n\n  /**\n   * 获取当前选中的focus位置对应的text\n   */\n  public get focusText() {\n    return this.getElement('focus', 'text');\n  }\n\n  /**\n   * 获取当前选中的start位置对应的text\n   */\n  public get startText() {\n    return this.getElement('start', 'text');\n  }\n\n  /**\n   * 获取当前选中的end位置对应的text\n   */\n  public get endText() {\n    return this.getElement('end', 'text');\n  }\n\n  /**\n   * 获取当前选中位置对应的marks。\n   * 如果用户设置了正在编辑的样式，返回用户的设置Marks；否则返回当前文字的Marks。\n   */\n  public get activeMarks() {\n    if (!this.selection) {\n      return [];\n    }\n    return (\n      this.selection.marks ||\n      this.document.getActiveMarksAtRange(this.selection)\n    );\n  }\n\n  /**\n   * 是否是blur状态\n   */\n  public get isBlurred() {\n    return !this.isFocused;\n  }\n\n  /**\n   * 获取当前选区对应的fragment\n   */\n  public get fragment() {\n    const { selection, document } = this;\n    return selection\n      ? document.getFragmentAtRange(selection)\n      : Document.create();\n  }\n\n  public merge(props: Partial<ValueProperties>) {\n    return new Value({\n      data: this.data,\n      document: this.document,\n      selection: this.selection,\n      remoteSelections: this.remoteSelections,\n      injections: this.injections,\n      decorations: this.decorations,\n      composing: this.composing,\n      isFocused: this.isFocused,\n      ...props,\n    });\n  }\n\n  public set<T extends keyof ValueProperties>(\n    key: T,\n    value: Required<ValueProperties>[T],\n  ) {\n    return this.merge({\n      [key]: value,\n    });\n  }\n\n  public updatePoints(\n    document: Document,\n    map: (point: TextPoint) => TextPoint | null,\n    removed?: Node,\n  ) {\n    const updateSelections = (selections, selection) => {\n      if (!Selection.isSelection(selection)) {\n        return [...selections, selection];\n      }\n      let { anchor, focus } = selection;\n      if (anchor.isEdgePoint() || focus.isEdgePoint()) {\n        ({ anchor, focus } = selection.convertToTextPoints(document));\n      }\n      const newAnchor = map(anchor);\n      const newFocus = map(focus);\n      if (!newAnchor || !newFocus) {\n        return selections;\n      }\n      if (\n        equal(newAnchor, anchor) &&\n        equal(newFocus, focus) &&\n        Selection.isValidSelection(document, selection)\n      ) {\n        // 如果选区没有任何变化，返回原选区即可\n        return [...selections, selection];\n      }\n      return [\n        ...selections,\n        selection.merge({\n          anchor: newAnchor,\n          focus: newFocus,\n        }),\n      ];\n    };\n\n    // FIXME: 当 Document 内没有 Text 节点时，无法被 focus，等价于废档\n    const selections = [this.selection].reduce<Selection[]>(\n      updateSelections,\n      [],\n    );\n    const remoteSelections = this.remoteSelections.reduce<Selection[]>(\n      updateSelections,\n      [],\n    );\n\n    const decorations = this.decorations.reduce<Decoration[]>((decs, dec) => {\n      const { start, end } = dec;\n      const newStart = map(start);\n      const newEnd = map(end);\n      if (!newStart || !newEnd) {\n        return decs;\n      }\n      const startText = document.getNode(newStart.key);\n      const endText = document.getNode(newEnd.key);\n      if (!startText || !endText) {\n        return decs;\n      }\n\n      if (\n        removed &&\n        Block.isBlock(removed) &&\n        [start, end].every((n) => removed.getNode(n.key))\n      ) {\n        // 删除 Block 节点时, 内部包含的 decoration 清空掉\n        return decs;\n      } \n\n      if (equal(newStart, newEnd) && startText.text) {\n        return decs;\n      }\n      return [\n        ...decs,\n        dec.merge({\n          start: newStart,\n          end: newEnd,\n        }),\n      ];\n    }, []);\n    return this.merge({\n      selection: selections[0] || getDefaultSelection(document),\n      remoteSelections,\n      decorations,\n    });\n  }\n\n  private addMark(path: Path, offset: number, length: number, mark: Mark) {\n    let { document } = this;\n    document = document.addMark(path, offset, length, mark);\n    return this.set('document', document);\n  }\n\n  private insertNode(path: Path, node: Node) {\n    let { document } = this;\n    document = document.insertNode(path, node);\n    return this.set('document', document);\n  }\n\n  private insertText(path: Path, offset: number, text: string, marks: Mark[]) {\n    const { document: prevDoc } = this;\n    const document = prevDoc.insertText(path, offset, text, marks);\n    // node must be Text if .insertText works.\n    const node = prevDoc.assertTextByPath(path);\n    return this.updatePoints(document, (point) => {\n      // 若在当前选区之前插入文本，则需要后移选区\n      // insert 'e'\n      //   │    cursor\n      //   ▼     │\n      //  HlloWor│ld\n      //         │\n      //\n      //     │\n      //     │ inserted\n      //     ▼\n      //\n      //          │\n      //  HelloWor│d\n      //          │\n      //        cursor\n      if (node.key === point.key && offset <= point.offset) {\n        return point.moveForward(text.length);\n      }\n      return point;\n    }).set('document', document);\n  }\n\n  private mergeNode(path: Path) {\n    const { document: prevDoc, injections: prevInject } = this;\n    const document = prevDoc.mergeNode(path);\n    const injections = prevInject.filter(({ key }) => {\n      const injectTargetPath = prevDoc.getPath(key);\n      return injectTargetPath && !Path.isEqual(injectTargetPath, path);\n    });\n    // prev & node could not be null if .mergeNode works.\n    const prev = prevDoc.getPreviousSiblingByPath(path)!;\n    const node = prevDoc.getNodeByPath(path)!;\n    return this.updatePoints(document, (point) => {\n      // 如果选区所在的文本被 merge，则需要将光标移动到合并后的文本，并且修正光标起点\n      //     ┌─────────┐  cursor\n      //     │         │ │\n      // ┌───▼───┐ ┌───┴─┼────┐\n      // │ Hello │ │ Worl│d   │\n      // └───────┘ └─────┼────┘\n      //                 │\n      //        │\n      //        │ merged\n      //        │\n      //        ▼  \n      //\n      //           │\n      // ┌─────────┼──┐\n      // │HelloWorl│d │\n      // └─────────┼──┘\n      //           │\n      //          cursor\n      if (Text.isText(node) && point.key === node.key) {\n        return point.merge({\n          key: prev.key,\n          offset: prev.text.length + point.offset,\n        });\n      }\n      return point;\n    }).merge({ document, injections });\n  }\n\n  private moveNode(path: Path, newPath: Path) {\n    if (equal(path, newPath)) {\n      return this;\n    }\n\n    let { document } = this;\n    document = document.moveNode(path, newPath);\n    return this.set('document', document);\n  }\n\n  private removeMark(path: Path, offset: number, length: number, mark: Mark) {\n    let { document } = this;\n    document = document.removeMark(path, offset, length, mark);\n    return this.set('document', document);\n  }\n\n  private removeNode(path: Path) {\n    const { document: prevDoc, injections: prevInject } = this;\n    const node = prevDoc.assertNodeByPath(path);\n    const prev = prevDoc.getPreviousNodeByPath(path);\n    const next = prevDoc.getNextNodeByPath(path);\n\n    const document = prevDoc.removeNode(path);\n    const injections = prevInject.filter(({ key }) => {\n      const injectTargetPath = prevDoc.getPath(key);\n      return injectTargetPath && !Path.isEqual(injectTargetPath, path);\n    });\n\n    // `document.nodes` is empty.\n    if (!prev && !next) {\n      return this.merge({\n        document,\n        selection: getDefaultSelection(document),\n        remoteSelections: [],\n        injections: [],\n        decorations: [],\n        composing: '',\n      });\n    }\n\n    return this.updatePoints(document, (point) => {\n      if (node.key === point.key || (node.isElement() && node.hasNode(point.key))) {\n        // 若删除选区所在的节点或者其父节点，则要么移动选区到上一节点末，要么移动选区到下一节点开头\n        //              cursor\n        // ┌───────┐ ┌────┼───┐\n        // │ Hello │ │ Wor│ld │\n        // └───────┘ └────┼───┘\n        //\n        //          │\n        //          │ removed\n        //          ▼\n        //\n        // ┌──────┼┐\n        // │ Hello││\n        // └──────┼┘\n        //      cursor\n        if (prev) {\n          const lastText = prev.getLastText();\n          if (lastText) {\n            return point.moveToEndOfNode(lastText);\n          }\n        }\n        //       cursor\n        //       │\n        //  ┌────┼───┐ ┌───────┐\n        //  │ Wor│ld │ │ Hello │\n        //  └────┼───┘ └───────┘\n        //       │\n\n        //         │\n        //         │ removed\n        //         ▼\n        //   │\n        //  ┌┼──────┐\n        //  ││Hello │\n        //  └┼──────┘\n        //   │\n        // cursor\n\n        if (next) {\n          const firstText = next.getFirstText();\n          if (firstText) {\n            return point.moveToStartOfNode(firstText);\n          }\n        }\n        return null;\n      }\n      return point;\n    }, node).merge({ document, injections });\n  }\n\n  private removeText(path: Path, offset: number, text: string) {\n    const { document: prevDoc } = this;\n    const document = prevDoc.removeText(path, offset, text);\n    // node must be Text if .insertText works.\n    const node = prevDoc.assertTextByPath(path);\n    const start = offset;\n    const end = start + text.length;\n    return this.updatePoints(document, (point) => {\n      if (node.key === point.key) {\n        // 若当前选区在删除文本之后，则需要前移选区\n        //          cursor\n        //   ┌────┐   │\n        //  H│ello│Wor│d\n        //   └────┘   │\n        //\n        //       │\n        //       │      removed\n        //       ▼\n        //\n        //      │\n        //  HWor│d\n        //      │\n        //    cursor\n        if (point.offset >= end) {\n          return point.moveBackward(text.length);\n        }\n        // 若当前选区在删除文本起点之后，则前移选区到删除起点\n        //   ┌────┐\n        //  H│ello│World\n        //   └────┘\n        //      ──────  selection\n        //\n        //      │\n        //      │      removed\n        //      ▼\n        //\n        //   HWorld\n        //    ──── selection\n        if (point.offset > start) {\n          return point.set('offset', start);\n        }\n      }\n      return point;\n    }).set('document', document);\n  }\n\n  private setMark(\n    path: Path,\n    offset: number,\n    length: number,\n    mark: Mark,\n    properties: Partial<MarkProperties>,\n  ) {\n    let { document } = this;\n    document = document.setMark(path, offset, length, mark, properties);\n    return this.set('document', document);\n  }\n\n  private setNode(path: Path, properties: Partial<ElementProperties>) {\n    let { document } = this;\n    document = document.setNode(path, properties);\n    return this.set('document', document);\n  }\n\n  /**\n   * 拷贝出一个新value，并设置选区字段\n   */\n  public setSelection(selection: Selection) {\n    return this.set('selection', selection);\n  }\n\n  private splitNode(\n    path: Path,\n    position: number,\n    properties: Partial<ElementProperties>,\n  ) {\n    const { document: prevDoc } = this;\n    const document = prevDoc.splitNode(path, position, properties);\n    // node could not be null if .splitNode works.\n    const node = prevDoc.getNodeByPath(path)!;\n    return this.updatePoints(document, (point) => {\n      // 如果在当前文本进行分裂，则需要调整选区到分裂后的文本\n      //   position\n      //       │    cursor\n      //       │   │\n      //  Hello│Wor│ld\n      //       │   │\n      //       │\n      //\n      //        │  split node\n      //        ▼\n      //\n      //  Hello\n      //  Wor│ld\n      //    cursor\n      if (\n        Text.isText(node) &&\n        point.key === node.key &&\n        position <= point.offset\n      ) {\n        // next is just create by .splitNode\n        const next = document.getNextSiblingByPath(path)!;\n        return point.merge({\n          key: next.key,\n          offset: point.offset - position,\n        });\n      }\n      return point;\n    }).set('document', document);\n  }\n\n  /**\n   * 应用operation，并返回一个新value\n   */\n  public applyOperation(operation: Operation) {\n    let value: Value | null = null;\n    const { type } = operation;\n    if (type === OperationType.AddMark) {\n      const { path, offset, length, mark } = operation as AddMarkOperation;\n      value = this.addMark(path, offset, length, mark);\n    } else if (type === OperationType.InsertNode) {\n      const { path, node } = operation as InsertNodeOperation;\n      value = this.insertNode(path, node);\n    } else if (type === OperationType.InsertText) {\n      const {\n        path,\n        offset,\n        text,\n        marks = [],\n      } = operation as InsertTextOperation;\n      value = this.insertText(path, offset, text, marks);\n    } else if (type === OperationType.MergeNode) {\n      const { path } = operation as MergeNodeOperation;\n      value = this.mergeNode(path);\n    } else if (type === OperationType.MoveNode) {\n      const { path, newPath } = operation as MoveNodeOperation;\n      value = this.moveNode(path, newPath);\n    } else if (type === OperationType.RemoveMark) {\n      const { path, offset, length, mark } = operation as RemoveMarkOperation;\n      value = this.removeMark(path, offset, length, mark);\n    } else if (type === OperationType.RemoveNode) {\n      const { path } = operation as RemoveNodeOperation;\n      value = this.removeNode(path);\n    } else if (type === OperationType.RemoveText) {\n      const { path, offset, text } = operation as RemoveTextOperation;\n      value = this.removeText(path, offset, text);\n    } else if (type === OperationType.SetMark) {\n      const {\n        path,\n        offset,\n        length,\n        mark,\n        properties,\n      } = operation as SetMarkOperation;\n      value = this.setMark(path, offset, length, mark, properties);\n    } else if (type === OperationType.SetNode) {\n      const { path } = operation as SetNodeOperation;\n      const properties = mergeUserProperties(this, operation);\n      value = this.setNode(path, properties);\n    } else if (type === OperationType.SetSelection) {\n      const { selection } = operation as SetSelectionOperation;\n      value = this.setSelection(selection);\n    } else if (type === OperationType.SplitNode) {\n      const { path, position, properties } = operation as SplitNodeOperation;\n      value = this.splitNode(path, position, properties);\n    } else {\n      throw new Error(`Unknown operation type: \"${type}\".`);\n    }\n    if (value.selection.anchor.key === value.document.key) {\n      const selection = getDefaultSelection(value.document);\n      return value.setSelection(selection);\n    }\n    return value;\n  }\n\n  public toJSON(options?: SerializeOptions) {\n    const object: ValueJSON = {\n      klass: 'value',\n      document: this.document.toJSON(options),\n    };\n    if (options?.preserveDecorations) {\n      object.decorations = this.decorations.map((decotation) => {\n        const { start, end, mark } = decotation.toJSON(options);\n        return {\n          mark,\n          start: {\n            ...start,\n            path: this.document.getPath(decotation.start.key),\n          },\n          end: {\n            ...end,\n            path: this.document.getPath(decotation.end.key),\n          },\n        };\n      });\n    }\n    if (options?.preserveSelections) {\n      const { selection } = this;\n      const { anchor, focus } = selection.toJSON(options);\n      object.selection = {\n        anchor: {\n          ...anchor,\n          // @ts-ignore\n          path: this.document.getPath(selection.anchor.key),\n        },\n        focus: {\n          ...focus,\n          // @ts-ignore\n          path: this.document.getPath(selection.focus.key),\n        },\n      };\n    }\n    if (options?.preserveInjections) {\n      object.injections = this.injections.map((injection) =>\n        injection.toJSON(),\n      );\n    }\n    return object;\n  }\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-restricted-syntax */\n/**\n * @packageDocumentation\n * @ignore\n */\n\nexport * from './selection';\n","import React from 'react';\nimport { Observable, Observer } from '../models/observable';\nimport { Terminal } from '../interfaces/controller';\nexport function usePendingTerminal(\n  terminal$: Observable<Terminal | null>,\n  onTerminate: Observer<Terminal | null>,\n) {\n  React.useEffect(() => {\n    const subs = terminal$.subscribe(onTerminate);\n    return subs.unsubscribe;\n  }, [onTerminate, terminal$]);\n}\n","/**\n * @packageDocumentation\n * @module Plugin-PlaceHolder\n */\nimport * as React from 'react';\nimport Controller from '../controller/index';\nimport Decoration from '../models/decoration';\nimport { TextPoint } from '../models/point';\nimport Node from '../models/node';\nimport Element from '../models/element';\nimport Text from '../models/text';\nimport Mark, { MarkProperties } from '../models/mark';\nimport RenderMarkProps from '../interfaces/renderMarkProps';\nimport { useSelectionData } from '../hooks/useSelectionData';\nimport { usePendingTerminal } from '../hooks/usePendingTerminal';\nimport * as environment from '../utils/environment';\nimport { useSelectingHots } from '../hooks/useHots';\n\nconst placeholderMarkType = 'cangjiePlaceholder';\nconst defaultPlaceholerSymbol = Symbol();\n\nconst placeholderStyle: React.CSSProperties = {\n  pointerEvents: 'none',\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n  position: 'relative',\n};\n\n// 用于外部宽度没有撑开的情况\nconst innerStyleWithWidth: React.CSSProperties = {\n  width: 'fit-content',\n  whiteSpace: 'nowrap',\n  color: 'rgba(23,26,29, 0.4)',\n};\n\nconst innerStyle: React.CSSProperties = {\n  position: 'absolute',\n  ...innerStyleWithWidth,\n};\n\nconst ContentPlaceholderContext = React.createContext<React.MutableRefObject<string | React.ReactElement> | null>(null);\nfunction useContentPlaceholder() {\n  return React.useContext(ContentPlaceholderContext);\n}\n\ninterface PlaceholderProps {\n  controller: Controller;\n  node: Node;\n  mark: Mark;\n  children: React.ReactNode;\n}\n\n/**\n* 目前需要支持两种配置方式\n* 1.自定义展示placeholder配置\n* 2.支持从各个插件读取placeholder配置\n* todo: 排版模式下不支持\n*/\ninterface PlaceholderConfig {\n  text: string | Symbol | ((controller: Controller, node: Node) => string);\n  when: (controller: Controller, node: Node) => boolean;\n  // 满足条件后禁用\n  disable?: boolean;\n  // 是否在当前行显示\n  focusMode?: boolean;\n  needWidth?: boolean;\n}\ninterface PlaceholderPluginConfig {\n  isPlaceholderVisible?: (controller: Controller, node: Node) => boolean;\n}\n\nfunction blockEvent(event: React.TouchEvent | React.MouseEvent) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nconst defaultPx = '14.667';\nconst FONTSIZE_BIGGER = environment.IS_MOBILE ? 1.06 : 1;\n// 并不需要精确计算placeholder的fontsize，目前只在非排版下使用\nfunction formatFontSize(mark?: MarkProperties) {\n  if (mark?.data?.value) {\n    const { value, szUnit } = mark.data;\n    const unit = szUnit || 'px';\n    if (unit === 'pt') {\n      // word等转换的pt数据依然需要格式化\n      return `${value * FONTSIZE_BIGGER}pt`\n    } else if (unit === 'px' && mark.data.value === 14) {\n      // 特殊处理默认字号：稍微放大至11pt(14.667px)\n      return `${defaultPx}px`\n    }\n  }\n  return '';\n}\n\nfunction PlaceholderProvider({ placeholder = '', children }) {\n  const placeholderRef = React.useRef(placeholder);\n  placeholderRef.current = placeholder;\n  return (\n    <ContentPlaceholderContext.Provider value={placeholderRef}>\n      {children}\n    </ContentPlaceholderContext.Provider>\n  );\n}\n\nfunction Placeholder(props: PlaceholderProps) {\n  const [, forceUpdate] = React.useReducer((c) => !c, false);\n  const contentPlaceholderRef = useContentPlaceholder();\n\n  // 逻辑收敛到Placeholder组件\n  const { controller, node, mark, children } = props;\n  const { selection, isFocused, composing } = controller.value;\n  const focusKey = selection?.focus?.key;\n  const { config, block } = mark.data;\n  const disable = !config || config.disable || composing;\n  const { text, needWidth, focusMode, when } = config as PlaceholderConfig;\n  const isDefaultPlaceholder = defaultPlaceholerSymbol === text;\n\n  const showDefaultPlaceholder = React.useMemo(() => {\n    // 这里需要对默认placeholder做一个特殊的处理，默认placeholder是需要关心全文的，而不是上下文就可以了\n    if (!isDefaultPlaceholder) return false;\n    return when(controller, block);\n  }, [controller.value, block, isDefaultPlaceholder, when]);\n\n  const noRender = disable ||\n  (\n    focusMode && (!isFocused || !focusKey || node.key !== focusKey || controller.value.selection.isExpanded)\n  )\n;\n\n  const innerPlaceholderStyle = React.useMemo(() => {\n    const style = needWidth ? innerStyleWithWidth : innerStyle;\n    const leave = (node as Text).leaves?.length === 1 ? (node as Text).leaves[0] : null;\n    const size = leave?.marks?.find((m) => m.type === 'sz');\n    if (size) {\n      const fontSize = formatFontSize(size);\n      if (fontSize) {\n        return {\n          ...style,\n          fontSize,\n        }\n      }\n    }\n    return style;\n  }, [node, needWidth]);\n\n  const handlePendingSelectionChange = React.useCallback(() => {\n    if (\n      !disable &&\n      focusKey !== controller.value.selection?.focus?.key &&\n      (node.key === focusKey || node.key === controller.value.selection?.focus?.key)\n    ) {\n      forceUpdate();\n    }\n  }, [controller, focusKey, node, disable]);\n\n  const handlePendingTerminate = React.useCallback(() => {\n    if (\n      node.key !== controller.value.selection?.focus?.key &&\n      !noRender\n    ) {\n      forceUpdate();\n    }\n  }, [noRender, node, controller]);\n\n  usePendingTerminal(controller.terminal$, handlePendingTerminate);\n  useSelectionData(controller.selectionData$, null, handlePendingSelectionChange, []);\n  // 当监听到热区时，也要重渲 placeholder，避免 placeholder 不消失\n  useSelectingHots(controller, handlePendingSelectionChange);\n\n  if (noRender || (isDefaultPlaceholder && !showDefaultPlaceholder)) return <>{children}</>;\n\n  const textContent = typeof text === 'function' ? text(controller, node) : text;\n  return (\n    <>\n      {children}\n      <span\n        onTouchStart={blockEvent}\n        onMouseDown={blockEvent}\n        style={placeholderStyle}\n        data-testid=\"cangjie-placeholder\"\n        data-cangjie-placeholder\n      >\n        <span style={innerPlaceholderStyle}>\n          {isDefaultPlaceholder ? contentPlaceholderRef?.current : textContent}\n        </span>\n      </span>\n    </>\n  );\n}\n\nexport default function createPlaceholderPlugin(config: PlaceholderPluginConfig = {}) {\n  const { isPlaceholderVisible } = config;\n\n  // HACK: use `Symbol` as placeholder before getting placholder from `Cangjie.Content`.\n  const contentPlaceholderConfig: PlaceholderConfig | null = isPlaceholderVisible\n    ? { when: isPlaceholderVisible, text: defaultPlaceholerSymbol }\n    : null;\n  let placeholdersConfig: PlaceholderConfig[] | null = null;\n\n  function decorateNode(node: Element, controller: Controller, next) {\n    if (!node.isEmpty()) {\n      return next();\n    }\n\n    // 读取placeholder配置\n    if (!placeholdersConfig) {\n      placeholdersConfig = [];\n      if (contentPlaceholderConfig) {\n        // 内置空白行placeholder逻辑\n        placeholdersConfig.push(contentPlaceholderConfig);\n      }\n      // @ts-ignore\n      const { placeholder } = controller.handlers;\n      placeholder?.forEach((item) => {\n        if (Array.isArray(item)) {\n          placeholdersConfig!.push(...item);\n        } else {\n          // @ts-ignore\n          placeholdersConfig!.push(item);\n        }\n      });\n      placeholdersConfig = placeholdersConfig.filter(({ text, disable }) => !!(text || disable));\n    }\n\n    const match = placeholdersConfig.find(({ when }) => when(controller, node));\n    if (!match) {\n      return next();\n    }\n\n    const first = node.getFirstText();\n    const last = node.getLastText();\n    if (!first || !last) {\n      return next();\n    }\n\n    const start = TextPoint.create({\n      key: first.key,\n      offset: 0,\n    });\n    const end = TextPoint.create({\n      key: last.key,\n      offset: last.text.length,\n    });\n    return [Decoration.create({\n      start,\n      end,\n      mark: Mark.create({ type: placeholderMarkType, data: { config: match, block: node } }),\n    }), ...next()];\n  }\n\n  function renderEditable(props, _, next) {\n    return (\n      <PlaceholderProvider {...props}>\n        {next()}\n      </PlaceholderProvider>\n    );\n  }\n\n  function renderMark(props: RenderMarkProps, controller: Controller, next) {\n    const { parent, node, mark, children } = props;\n    if (mark.type !== placeholderMarkType) {\n      return next();\n    }\n    return (\n      <Placeholder\n        key={`${parent.key}_placeholder`}\n        controller={controller}\n        node={node}\n        mark={mark}\n      >\n        {children()}\n      </Placeholder>\n    );\n  }\n\n  return {\n    decorateNode,\n    renderEditable,\n    renderMark,\n  };\n}\n","import * as React from 'react';\n\nexport const hasIntersectionObserver = process.env.NODE_ENV === 'test'\n  || (typeof window !== 'undefined' && 'IntersectionObserver' in window);\n\ntype IntersectionChangeHandler = (entry: IntersectionObserverEntry) => void;\n\nclass IntersectionObserver {\n  private static instance: IntersectionObserver | null = null;\n  public static getInstance() {\n    if (!IntersectionObserver.instance) {\n      IntersectionObserver.instance = new IntersectionObserver();\n    }\n    return IntersectionObserver.instance;\n  }\n\n  private elementToHandler: WeakMap<Element, IntersectionChangeHandler>;\n  private nativeIO: globalThis.IntersectionObserver | null;\n  private constructor() {\n    this.elementToHandler = new WeakMap();\n    this.nativeIO = hasIntersectionObserver\n      ? new window.IntersectionObserver(this.handleIntersectionChange)\n      : null;\n  }\n  private handleIntersectionChange = (entries: IntersectionObserverEntry[]) => {\n    entries.forEach(entry => {\n      const handler = this.elementToHandler.get(entry.target);\n      if (handler) {\n        handler(entry);\n      }\n    });\n  }\n\n  public observe(element: Element, handler: IntersectionChangeHandler) {\n    this.elementToHandler.set(element, handler);\n    this.nativeIO?.observe(element);\n  }\n  public unobserve(element: Element) {\n    this.elementToHandler.delete(element);\n    this.nativeIO?.unobserve(element);\n  }\n}\n\nexport default function useElementVisibility(\n  elementRef: React.MutableRefObject<HTMLElement | null>,\n  defaultVisible: boolean = false,\n): [boolean, () => void] {\n  const [visible, setVisible] = React.useState(defaultVisible);\n  const unobserve = () => {\n    if (elementRef.current) {\n      IntersectionObserver.getInstance().unobserve(elementRef.current);\n    }\n  };\n  React.useLayoutEffect(() => {\n    if (elementRef.current) {\n      IntersectionObserver.getInstance().observe(\n        elementRef.current,\n        (entry: IntersectionObserverEntry) => setVisible(entry.isIntersecting),\n      );\n      return unobserve;\n    }\n    return undefined;\n  }, []);\n  return [visible, unobserve];\n}","import * as React from 'react';\nimport Controller from '../../controller';\nimport Selection from '../../models/selection';\nimport Node from '../../models/node';\nimport RenderNodeProps from '../../interfaces/renderNodeProps';\nimport { useZoom } from '../../hooks/useZoom';\nimport { useSelectionData } from '../../hooks/useSelectionData';\nimport { useSelectingHots } from '../../hooks/useHots';\nimport * as domUtils from '../../utils/dom';\nimport useElementVisibility, { hasIntersectionObserver } from './useElementVisibility';\n\nexport enum LazyRenderStrategyType {\n  LazyLoad = 'lazyload',\n  Pruning = 'pruning',\n}\n\ninterface LazyRenderStrategy {\n  type?: LazyRenderStrategyType;\n  forceVisible?: boolean;\n  placeholder?: React.ReactElement | null;\n  size?: {\n    width: number;\n    height: number;\n  };\n}\n\ninterface LazyLoadWrapperProps {\n  node: Node;\n  placeholder?: React.ReactElement | null;\n  size?: {\n    height: number;\n    width?: number;\n  };\n  children: React.ReactElement;\n}\nfunction LazyLoadWrapper({ node, placeholder = null, size, children }: LazyLoadWrapperProps) {\n  const placeholderRef = React.useRef<HTMLDivElement | null>(null);\n  const [visible, unobserve] = useElementVisibility(placeholderRef);\n  if (visible) {\n    unobserve();\n  }\n  if (!visible) {\n    return (\n      <div\n        ref={placeholderRef}\n        data-cangjie-key={node.key}\n        data-cangjie-lazy-load\n        style={size}\n      >\n        {placeholder}\n      </div>\n    );\n  }\n  return children;\n}\n\ninterface PruningManagerProps {\n  controller: Controller;\n  children: React.ReactElement;\n}\nfunction PruningManager({ controller, children }: PruningManagerProps) {\n  const selectionUpdator = React.useCallback(\n    ({ range }: { range: Selection }) => {\n      if (range.isExpanded) {\n        return;\n      }\n      const point = range.focus;\n      const key = point.isTextPoint() ? `${point.key}:0` : point.key;\n      const dom = domUtils.findDOMNodeSafely(key);\n      if (dom) {\n        showPrunedElements(dom);\n      }\n    },\n    [controller],\n  );\n\n  const onHots = React.useCallback(() => {\n    selectionUpdator({ range: controller.value.selection });\n  }, [controller, selectionUpdator]);\n\n  useSelectionData(controller.selectionData$, null, selectionUpdator, []);\n  useSelectingHots(controller, onHots);\n\n  return children;\n}\n\ninterface PruningWrapperProps {\n  controller: Controller;\n  node: Node;\n  isSelected: boolean;\n  forceVisible: boolean;\n  children: React.ReactElement;\n}\nfunction PruningWrapper(props: PruningWrapperProps) {\n  const zoom = useZoom();\n  const { controller, node, forceVisible, children } = props;\n  const [isSelected, setIsSelected] = React.useState(props.isSelected);\n  const placeholderRef = React.useRef<HTMLDivElement | null>(null);\n  const [placeholderStyle, setPlaceholderStyle] = React.useState<React.CSSProperties | undefined>();\n  const [isElementVisible] = useElementVisibility(placeholderRef, true);\n  const visible = isElementVisible || isSelected || forceVisible;\n  const prevVisible = React.useRef<boolean>(visible);\n\n  const onHots = React.useCallback(() => {\n    const { selection } = controller.value;\n    setIsSelected(controller.view.isNodeInRange(node.key, selection));\n  }, [controller, node.key]);\n\n  useSelectionData(controller.selectionData$, null, onHots, []);\n  useSelectingHots(controller, onHots);\n\n  React.useLayoutEffect(() => {\n    if (prevVisible.current === visible) {\n      return;\n    }\n\n    if (prevVisible.current && !visible) {\n      const placeholder = placeholderRef.current;\n      if (!placeholder) {\n        return;\n      }\n      const placeholderClientRect = placeholder.getBoundingClientRect();\n      // HACK: `IntersectionObserver` cannot detect zero height element in Safari iframe.\n      const height = placeholderClientRect.height || 1;\n      // FIX: thrashing\n      //   1. When placeholder is visible\n      //   2. Remove `display: none` of placeholder\n      //   3. Descendant's margin will push placeholder out of view\n      // So placeholder will thrash if `margin-top` & `margin-bottom` is incorrect.\n      const marginTop = placeholder.previousElementSibling\n        ? placeholderClientRect.top - placeholder.previousElementSibling.getBoundingClientRect().bottom\n        : 0;\n      const marginBottom = placeholder.nextElementSibling\n        ? placeholder.nextElementSibling.getBoundingClientRect().top - placeholderClientRect.bottom\n        : 0;\n      setPlaceholderStyle({\n        height: height / zoom,\n        marginTop: marginTop / zoom,\n        marginBottom: marginBottom / zoom,\n      });\n    } else { // !prevVisible.current && visible\n      setPlaceholderStyle(undefined);\n    }\n    prevVisible.current = visible;\n  }, [visible, zoom]);\n\n  return (\n    <div\n      ref={placeholderRef}\n      data-cangjie-perf-pruning={!visible}\n      style={placeholderStyle}\n    >\n      <div\n        style={placeholderStyle && { display: 'none' }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst DATA_CANGJIE_PERF_PRUNING = 'data-cangjie-perf-pruning';\nfunction showPrunedElements(target: Element) {\n  const ancestorsWithPruning: Element[] = [];\n  let ancestor: Element | null | undefined = target;\n  while (ancestor) {\n    if (ancestor.getAttribute(DATA_CANGJIE_PERF_PRUNING) === 'true') {\n      ancestorsWithPruning.push(ancestor);\n    }\n    ancestor = ancestor.parentElement;\n  }\n  ancestorsWithPruning.forEach((node) => {\n    if (node instanceof HTMLElement) {\n      node.style.height = '';\n      node.style.marginTop = '';\n      node.style.marginBottom = '';\n      node.setAttribute(DATA_CANGJIE_PERF_PRUNING, 'false');\n    }\n    const { firstElementChild } = node;\n    if (firstElementChild instanceof HTMLElement) {\n      firstElementChild.style.display = '';\n    }\n  });\n}\n\ninterface PerfLazyRenderPluginConfig {\n  lazyRenderStrategy?: (controller: Controller, node: Node) => LazyRenderStrategy;\n}\nfunction createPerfLazyRenderPlugin(config: PerfLazyRenderPluginConfig = {}) {\n  if (!hasIntersectionObserver) {\n    return {};\n  }\n\n  function renderEditable(_, controller: Controller, next) {\n    return (\n      <PruningManager controller={controller}>\n        {next()}\n      </PruningManager>\n    );\n  }\n\n  function renderNode({ node, isSelected }: RenderNodeProps, controller: Controller, next) {\n    const strategy = controller.query('lazyRenderStrategy', node) as LazyRenderStrategy || {};\n    const { type = LazyRenderStrategyType.LazyLoad } = strategy;\n    if (controller.enableVirtualize) {\n      return next();\n    }\n    if (type === LazyRenderStrategyType.LazyLoad && (strategy.placeholder || strategy.size)) {\n      const size = !strategy.size ? undefined : {\n        width: strategy.size.width,\n        // HACK: `IntersectionObserver` cannot detect zero height element in Safari iframe.\n        height: strategy.size.height || 1,\n      };\n      return (\n        <LazyLoadWrapper\n          node={node}\n          placeholder={strategy.placeholder}\n          size={size}\n        >\n          {next()}\n        </LazyLoadWrapper>\n      );\n    }\n    if (type === LazyRenderStrategyType.Pruning) {\n      return (\n        <PruningWrapper\n          controller={controller}\n          node={node}\n          isSelected={isSelected}\n          forceVisible={strategy.forceVisible || false}\n        >\n          {next()}\n        </PruningWrapper>\n      );\n    }\n    return next();\n  }\n\n  if (config.lazyRenderStrategy) {\n    return {\n      queries: { lazyRenderStrategy: config.lazyRenderStrategy },\n      renderEditable,\n      renderNode,\n    };\n  }\n  return {\n    renderEditable,\n    renderNode,\n  };\n}\ncreatePerfLazyRenderPlugin.factory = (defaultConfig = {}) => (config = {}) =>\n  createPerfLazyRenderPlugin({ ...defaultConfig, ...config });\ncreatePerfLazyRenderPlugin.LazyRenderStrategyType = LazyRenderStrategyType;\ncreatePerfLazyRenderPlugin.showPrunedElements = showPrunedElements;\ncreatePerfLazyRenderPlugin.useElementVisibility = useElementVisibility;\n\nexport default createPerfLazyRenderPlugin;\n","import * as React from 'react';\nimport Controller from '../controller';\nimport RenderNodeProps from '../interfaces/renderNodeProps';\nimport Node from '../models/node';\nimport { Subject } from '../models/observable';\n\ninterface FirstRenderContextValue {\n  animationFrameSubject: Subject<undefined>;\n  delayRenderSlices: Set<string>;\n}\nconst FirstRenderContext =\n  React.createContext<FirstRenderContextValue | null>(null);\n\ninterface FirstRenderManagerProps {\n  controller: Controller;\n  isFirstRenderSlice: (node: Node) => boolean;\n  firstFrameSize: number;\n  children: React.ReactNode;\n}\nfunction FirstRenderManager({\n  controller,\n  isFirstRenderSlice,\n  firstFrameSize,\n  children,\n}: FirstRenderManagerProps) {\n  const animationFrameSubject = React.useMemo(\n    () => new Subject<undefined>(),\n    [],\n  );\n\n  const delayRenderSlices = React.useMemo(() => {\n    const delays = new Set<string>();\n\n    let remained = firstFrameSize;\n    const document = controller.view;\n    document.forEachDescendant((node) => {\n      if (remained <= 0 && isFirstRenderSlice(node)) {\n        delays.add(node.key);\n      }\n      remained -= 1;\n    });\n\n    return delays;\n  }, []);\n\n  const context = React.useMemo(\n    () => ({\n      animationFrameSubject,\n      delayRenderSlices,\n    }),\n    [animationFrameSubject, delayRenderSlices],\n  );\n\n  React.useEffect(() => {\n    let raf: number | null = null;\n    function loop() {\n      if (!delayRenderSlices.size) {\n        return;\n      }\n      raf = window.requestAnimationFrame(() => {\n        context.animationFrameSubject.next(undefined);\n        loop();\n      });\n    }\n    loop();\n    return () => {\n      if (raf) {\n        window.cancelAnimationFrame(raf);\n      }\n    };\n  }, []);\n\n  return (\n    <FirstRenderContext.Provider value={context}>\n      {children}\n    </FirstRenderContext.Provider>\n  );\n}\n\nfunction useShouldMount(node: Node) {\n  const context = React.useContext(FirstRenderContext);\n  if (!context) {\n    throw new Error(\n      \"The `useShouldMount` hook must be used inside the <FirstRenderManager> component's context.\",\n    );\n  }\n\n  const [shouldMount, setShouldMount] = React.useState(\n    !context.delayRenderSlices.has(node.key),\n  );\n\n  React.useEffect(() => {\n    if (shouldMount) {\n      return undefined;\n    }\n    const subscription = context.animationFrameSubject.subscribe(() => {\n      subscription.unsubscribe();\n      context.delayRenderSlices.delete(node.key);\n      setShouldMount(true);\n    });\n    return subscription.unsubscribe;\n  }, []);\n\n  return shouldMount;\n}\n\ninterface FirstRenderSliceProps {\n  node: Node;\n  children: React.ReactElement;\n}\nfunction FirstRenderSlice({ node, children }: FirstRenderSliceProps) {\n  const shouldMount = useShouldMount(node);\n  return shouldMount ? children : null;\n}\n\ninterface PerfFirstRenderPluginConfig {\n  isFirstRenderSlice: (node: Node) => boolean;\n  firstFrameSize?: number;\n}\nfunction createPerfFirstRenderPlugin(config: PerfFirstRenderPluginConfig) {\n  const { isFirstRenderSlice, firstFrameSize = 1000 } = config;\n\n  function renderEditable(_, controller: Controller, next) {\n    return (\n      <FirstRenderManager\n        controller={controller}\n        isFirstRenderSlice={isFirstRenderSlice}\n        firstFrameSize={firstFrameSize}\n      >\n        {next()}\n      </FirstRenderManager>\n    );\n  }\n\n  function renderNode(props: RenderNodeProps, _, next) {\n    const { node } = props;\n    if (!isFirstRenderSlice(node)) {\n      return next();\n    }\n    return <FirstRenderSlice node={node}>{next()}</FirstRenderSlice>;\n  }\n\n  return {\n    renderEditable,\n    renderNode,\n  };\n}\ncreatePerfFirstRenderPlugin.factory =\n  (defaultConfig: PerfFirstRenderPluginConfig) =>\n  (config: Partial<PerfFirstRenderPluginConfig>) =>\n    createPerfFirstRenderPlugin({ ...defaultConfig, ...config });\n\nexport default createPerfFirstRenderPlugin;\n","import React from 'react';\nimport Decoration from '../../models/decoration';\nimport Document from '../../models/document';\nimport Injection from '../../models/injection';\n\nexport interface RelativeRect extends Pick<DOMRect, 'top' | 'left' | 'width' | 'height'> {\n  scrollLeft: number;\n}\n\n/**\n * 用于选区定位的依赖项\n *\n * @export\n * @interface SelectionContext\n */\nexport interface SelectionContext {\n  contentRect?: DOMRect;\n  // 选区相对定位的目标元素容器的 Rect，一般用于 scrollable 元素\n  relativeRect?: RelativeRect;\n  // 缩放比例（eg. 通过缩放工具栏可改变其值）\n  zoom: number;\n  // 纸张尺寸变化的标志（eg. 通过浏览器自带缩放功能可改变其值）\n  resizeFlag: number;\n\n  // 其他选区重渲的依赖项\n  document: Document;\n  injections: Injection[];\n  decorations: Decoration[];\n}\n\nexport const Context = React.createContext<SelectionContext | null>(null);\n\n/**\n * @deprecated\n */\nexport function useSelectionContext(): SelectionContext {\n  const context = React.useContext(Context);\n\n  if (!context) {\n    throw new Error('SelectionContext not found.');\n  }\n\n  return context;\n}\n","/**\n * @packageDocumentation\n * @module Hooks\n */\nimport * as React from 'react';\nimport { SelectionContext, useSelectionContext } from '../components/selection/context';\nimport { CURSOR_WIDTH, Selector } from '../constants';\nimport { EdgePoint, PointEdge, TextPoint } from '../models/point';\nimport {\n  findEdgePointPosition,\n  findTextPointPosition,\n} from '../utils/dom/findCaretPosition';\n\nfunction updatePosition(\n  caret: HTMLSpanElement,\n  point: EdgePoint | TextPoint,\n  selectionContext: SelectionContext,\n  zoom = 1,\n  isHanging = false,\n) {\n  const root = caret.closest(`[${Selector.content}]`) || undefined;\n  const { relativeRect: nodeRect } = selectionContext;\n  const relativeRect = nodeRect || caret.parentElement?.getBoundingClientRect();\n\n  let position: any = null;\n  if (point.isEdgePoint()) {\n    position = findEdgePointPosition(point, root);\n  } else {\n    const preferredEdge = isHanging ? 'start' : 'end';\n    position = findTextPointPosition(point, preferredEdge, root);\n  }\n\n  if (!position || !relativeRect) {\n    return;\n  }\n  const { clientTop, clientLeft, height } = position;\n  // 有相对定位的容器就以提供的相对定位为准，否则以光标的父节点为准\n  const relativeLeft = nodeRect ? nodeRect.left - nodeRect.scrollLeft : relativeRect.left;\n  const left = clientLeft - relativeLeft;\n  const top = clientTop - relativeRect.top;\n  caret.style.top = `${top / zoom}px`;\n  caret.style.left = point.isTextPoint() ? `${left / zoom - CURSOR_WIDTH / 2}px` : `${left / zoom + CURSOR_WIDTH / 2}px`;\n  caret.style.height = `${height / zoom}px`;\n}\n\n/**\n * @deprecated\n * 已废弃\n */\nexport function useOffsetPosition(\n  caretRef: React.RefObject<HTMLSpanElement>,\n  pointStr: string,\n  where: number | PointEdge,\n  zoom = 1,\n  isHanging = false,\n  deps: any[] = [], // 其他会引起光标位置变化的依赖\n) {\n  const selectionContext = useSelectionContext();\n  React.useLayoutEffect(() => {\n    const caret = caretRef.current;\n    if (!caret || !pointStr) {\n      return;\n    }\n\n    const offsetSeperatorIndex = pointStr?.lastIndexOf('-');\n    const key = pointStr?.substring(0, offsetSeperatorIndex);\n    if (!key) {\n      return;\n    }\n    let point: EdgePoint | TextPoint | undefined;\n    if (typeof where === 'number') {\n      point = TextPoint.create({\n        key,\n        offset: where,\n      });\n    } else {\n      point = EdgePoint.create({\n        key,\n        edge: where,\n      });\n    }\n    updatePosition(caret, point, selectionContext, zoom, isHanging);\n  }, [pointStr, where, zoom, isHanging, caretRef, selectionContext, ...deps]);\n}\n","import * as React from 'react';\nimport { throttle } from 'lodash-es';\nimport { Selector } from '../constants';\n\nconst THROTTLE_TIME_RESIZE = 300;\n\n/**\n * 在 ref 上层对应的 leaf block 尺寸变动时，调用 updator。内置了 throttle。\n */\nexport default function useLeafBlockResizer(\n  ref: React.RefObject<Element>,\n  updator: Function,\n  deps?: any[],\n) {\n  React.useEffect(() => {\n    const node = ref.current?.closest(`[${Selector.leafBlock}]`);\n    if (!node) {\n      return undefined;\n    }\n    const callback = throttle(() => {\n      updator();\n    }, THROTTLE_TIME_RESIZE);\n    // @ts-ignore\n    if (typeof ResizeObserver !== 'undefined') {\n      // @ts-ignore\n      const observer = new ResizeObserver(callback);\n      observer.observe(node);\n      return () => {\n        callback.cancel();\n        observer.unobserve(node);\n      };\n    }\n\n    window.addEventListener('resize', callback);\n    return () => {\n      callback.cancel();\n      window.removeEventListener('resize', callback);\n    };\n  }, deps || []);\n}\n","import { noop } from 'lodash-es';\nimport { useState, useEffect } from 'react';\nimport useControllerStatic from '../controller/useControllerStatic';\nimport { UserDataContent } from '../controller/userData';\nimport Element from '../models/element';\n\n/**\n * 获取用户数据\n * @param node \n * @param key \n * @returns \n */\nexport function useUserData<T extends keyof UserDataContent>(\n  node: Element,\n  key: T,\n) {\n  const controller = useControllerStatic();\n  const { uid } = controller;\n  const initValue = controller.userData.get(node, key);\n  const { uuid } = node.data;\n  const [data, setData] = useState(initValue);\n\n  useEffect(() => {\n    if (uid && uuid) {\n      // 订阅用户数据 update$ 更新（uid 和 uuid 存在的情况，存储在 document.data）\n      const sub = controller.userData.update$.subscribe((event) => {\n        const { uuid: euuid } = event;\n        if (euuid === uuid || euuid === '*') {\n          // 同一个节点，用户数据发生改变\n          const cNode = controller.value.document.getNode(node.key.split('-')[0]);\n          if (cNode && Element.isElement(cNode)) {\n            const nextData = controller.userData.get(cNode, key);\n            setData(nextData);\n          }\n        }\n      });\n      return () => sub.unsubscribe();\n    } else {\n      // 观察节点 node 变化（uid 或 uuid 不存在的情况，存储在 node.data）\n      const nextData = node.data?.[key];\n      if (nextData !== data) {\n        setData(nextData);\n      }\n      return noop;\n    }\n  }, [controller, node, uuid, uid, key, data]);\n\n  return data;\n}\n","import { useState, useEffect, useRef } from 'react';\nimport useControllerStatic from '../controller/useControllerStatic';\nimport { GroupWithKey } from '../interfaces/group';\nimport Element from '../models/element';\nimport Node from '../models/node';\nimport { Subscription } from '../models/observable';\n\nexport type GroupDataSelector<T = any> = (groups: GroupWithKey[]) => T;\n\n/**\n * 获得所在分组的数据 \n * @param node \n * @param selector \n * @param defaultValue \n * @returns \n * \n * @example\n * ```tsx\n * const Element = props => {\n *   const hidden = useGroupData(groups => groups.some(group => group.hidden));\n * \n *   // ...\n * }\n * ```\n */\nexport default function useGroupData<T>(\n  node: Node,\n  selector: GroupDataSelector<T>,\n  defaultValue: T,\n) {\n  let finalNode: Node | null = node;\n  const controller = useControllerStatic();\n\n  // 兼容老 Group 的代码\n  const legacyGroupIndex = node.key.indexOf('-group');\n  if (legacyGroupIndex > -1) {\n    const nodeKey = node.key.split('-group')[0];\n    const originalNode = controller.view.getNode(nodeKey);\n    if (originalNode) {\n      finalNode = originalNode;\n    }\n  }\n\n  const groups = controller.groupManager.getNodeGroups(finalNode as Element);\n\n  const selectorRef = useRef(selector);\n  selectorRef.current = selector;\n\n  // default state 就要取实际值，否则数据有延迟，有延迟就对虚拟化不友好\n  const defaultData = selectorRef.current(groups) || defaultValue;\n  const [data, setData] = useState<T>(defaultData);\n\n  // 响应上游的分组信息变更\n  useEffect(() => {\n    let sub: Subscription | null = null;\n    if ((finalNode && Element.isElement(finalNode))) {\n      sub = controller.groupManager.groups$.subscribe((groupsMap) => {\n        const groups = controller.groupManager.getNodeGroups(finalNode as Element);\n        setData(selectorRef.current(groups));\n      });\n    }\n    return () => {\n      if (sub) {\n        sub.unsubscribe();\n      }\n    };\n  }, [controller, finalNode]);\n\n  return data;\n}\n","import { Selector } from '../../constants';\nimport { SupportEdge } from '../../models/selection';\n\n/**\n *\n * If the HTML node is hide behind a horizontal scroll container, make it\n * visible\n */\nexport default function makeElementVisible(\n  /**\n   * dom node\n   */\n  domNode: HTMLElement,\n  /**\n   * which edge should be visible.\n   * options: start edge | end edge | all edges\n   */\n  edge: SupportEdge | 'all',\n  /**\n   * extra space added to the domNode's edge\n   */\n  extra: number,\n) {\n  const { left, right } = domNode.getBoundingClientRect();\n  let leftEdge = edge === 'end' ? right : left;\n  let rightEdge = edge === 'start' ? left : right;\n  leftEdge -= extra;\n  rightEdge += extra;\n  let node: HTMLElement | null = domNode;\n  while (node && !node.getAttribute(Selector.content)) {\n    if (node.scrollWidth > node.offsetWidth) {\n      const rect = node.getBoundingClientRect();\n      const offsetLeft = leftEdge - rect.left;\n      const offsetRight = rightEdge - rect.right;\n      if (offsetLeft < 0 || offsetRight > 0) {\n        const horizonOffset = offsetLeft < 0 ? offsetLeft : offsetRight;\n        node.scrollLeft += horizonOffset;\n        break;\n      }\n    }\n    node = node.parentElement;\n  }\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport Controller from '../controller';\nimport CangjieInputEvent from '../events/cangjieInput';\nimport Selection from '../models/selection';\nimport hotkeys from '../utils/hotkeys';\nimport { IS_IOS, IS_MOBILE, IS_TOUCH_DEVICE, IS_SAFARI, IS_IPAD } from '../utils/environment';\nimport { debounce } from 'lodash-es';\n\n// PC: no prefix/surfix by default\nlet EMPTY_PREFIX = '';\nlet EMPTY_SURFIX = '';\n\nif (IS_IOS) {\n  // iOS / Mac - Safari: will ignore the only space in textarea.\n  EMPTY_PREFIX = '\\n.';\n  EMPTY_SURFIX = ' \\n';\n} else if (IS_MOBILE) {\n  // Android: will toggle between uppercase and lowercase\n  // while deleting with dot as the only character in textarea.\n  EMPTY_PREFIX = ' ';\n  // Android: Arrow buttons will not trigger any keyboard event when caret is at the edge of textarea value\n  // eg1. textarea value is: ' <cursor />', keydown event will not triggered by ArrowRight/ArrowDown\n  // eg2. textarea value is: '<cursor />', keydown event will not triggered by ArrowRight/ArrowDown/ArrowUp/ArrowLeft\n  EMPTY_SURFIX = ' ';\n}\n\nconst IS_TOUCH_MOBILE = IS_MOBILE || IS_TOUCH_DEVICE;\n\nexport const getEmptyValue = (t: string) =>\n  `${EMPTY_PREFIX}${t}${EMPTY_SURFIX}`;\n\nconst EMPTY_TEXT_AREA_VALUE = getEmptyValue('');\n\nexport const CHARACTERS_LENGTH_AFTER_USER_INPUT = EMPTY_SURFIX.length;\n\nfunction resetTextAreaValue(\n  textAreaRef: React.MutableRefObject<HTMLTextAreaElement | null>,\n  textAreaCacheRef: React.MutableRefObject<string>,\n) {\n  textAreaCacheRef.current = EMPTY_TEXT_AREA_VALUE;\n  const defaultCaretPosition =\n    EMPTY_TEXT_AREA_VALUE.length - CHARACTERS_LENGTH_AFTER_USER_INPUT;\n  // BACKGROUND:\n  //   Android 中，点击非工具栏区域 blur 后，再 focus 回编辑器\n  //   会出现 textarea.value === ' ' && textarea.selectionStart === 0 的情况\n  //   导致无法删除文字，输入文字后会吞掉光标前一个字\n  if (\n    textAreaRef.current && (\n      textAreaRef.current.value !== EMPTY_TEXT_AREA_VALUE ||\n      textAreaRef.current.selectionStart !== defaultCaretPosition ||\n      textAreaRef.current.selectionEnd !== defaultCaretPosition\n    )\n  ) {\n    textAreaRef.current.value = EMPTY_TEXT_AREA_VALUE;\n    textAreaRef.current.selectionStart = defaultCaretPosition;\n    textAreaRef.current.selectionEnd = defaultCaretPosition;\n  }\n}\n\nfunction diffTextAreaValue(prevTextAreaValue: string, textAreaValue: string) {\n  const prevValueCaretPosition =\n    prevTextAreaValue.length - CHARACTERS_LENGTH_AFTER_USER_INPUT;\n  const currentValueCaretPosition =\n    textAreaValue.length - CHARACTERS_LENGTH_AFTER_USER_INPUT;\n  const minValueCaretPosition = Math.min(\n    prevValueCaretPosition,\n    currentValueCaretPosition,\n  );\n\n  let leftDiffOffset = 0;\n  while (leftDiffOffset < minValueCaretPosition) {\n    if (prevTextAreaValue[leftDiffOffset] !== textAreaValue[leftDiffOffset]) {\n      break;\n    }\n    leftDiffOffset += 1;\n  }\n\n  return {\n    range: [leftDiffOffset, prevValueCaretPosition],\n    text: textAreaValue.slice(leftDiffOffset, currentValueCaretPosition),\n  };\n}\n\nfunction insertText(controller: Controller, rawData: string) {\n  // Safari 空格会发出 CharCode 为 160 的空格，这里抹平浏览器差异\n  // convert <CharCode 160: &nbsp;> to <CharCode 32: space>\n  const data = rawData.replace(/\\xA0/g, ' ');\n  const cangjieInput = CangjieInputEvent({ type: 'insertText', data });\n  controller.run('onCangjieInput', cangjieInput);\n}\n\nfunction removeText(controller: Controller, data: string) {\n  controller.run(\n    'onCangjieInput',\n    CangjieInputEvent({\n      type: 'deleteContentBackward',\n      data,\n    }),\n  );\n}\n\nfunction updateComposing(controller: Controller, composing: string) {\n  controller.run('onCangjieComposingChange', composing);\n}\n\nexport default function useInputDetector(\n  controller: Controller,\n  textAreaRef: React.MutableRefObject<HTMLTextAreaElement | null>,\n) {\n  const { selection, isBlurred } = controller.value;\n  const isComposing = React.useRef(false);\n\n  const prevSelectionAfterInput = React.useRef<Selection | null>(null);\n  const resetTimer = React.useRef<any>(null);\n  const composingData = React.useRef('');\n  const prevTextAreaValue = React.useRef(EMPTY_TEXT_AREA_VALUE);\n  const reset = React.useCallback(() => {\n    resetTextAreaValue(textAreaRef, prevTextAreaValue);\n  }, [textAreaRef]);\n\n  React.useEffect(() => {\n    // 仅当选区的位置变化才需要 reset textarea 结束 composing 状态，不应受其它因素影响\n    // eg. 分页模式下用输入法输入，首字母输入后仅 selection.data.isHanging 会变为 true（https://code.aone.alibaba-inc.com/alidocs/we-word/codereview/7664706）\n    //     这种情况下只影响选区渲染的位置，不应该打断输入\n    if (prevSelectionAfterInput.current?.plainViewKey === selection.plainViewKey) {\n      return;\n    }\n    // 分页模式下，会将 dataSelection 转为 viewSelection，并将原始 selection 放到 data 中\n    // 因此可以通过 dataSelection 来判断是否为同一个位置，避免因排版将 composing 部分放到下一行导致选区变化，从而中断输入法\n    // eg.\n    //    Line 1: xxxxxxxxxxx<cursor/>[n]    <-- before：输入法输入时，光标和 composing 部分在行尾\n    //    Line 2: <cursor/>[ni]xxxxxxxxxxx   <-- after：输入法输入时，光标和 composing 部分被放到下一行首\n    //    此时，不应执行 reset\n    const dataSelection = selection.data.dataSelection;\n    const prevDataSelection = prevSelectionAfterInput.current?.data.dataSelection;\n    if (\n      isComposing &&\n      dataSelection &&\n      prevDataSelection &&\n      prevDataSelection.plainViewKey === dataSelection.plainViewKey\n    ) {\n      return;\n    }\n    // BACKGROUND:\n    // iOS 下，reset() 中设置 selectionStart/selectionEnd 的行为会造成 textarea 自动 focus\n    // 导致编辑器的 autoFocus 配置失效\n    // 因此需要人为控制 blur 状态下不执行 reset\n    if (isBlurred) {\n      return;\n    }\n    reset();\n  }, [reset, selection, isBlurred]);\n\n  React.useEffect(() => {\n    return () => {\n      resetTimer.current && clearTimeout(resetTimer.current);\n    };\n  }, []);\n\n  return React.useMemo(\n    () => ({\n      reset,\n      onChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        let { value } = event.target;\n        // Safari 空格会发出 CharCode 为 160 的空格，这里抹平浏览器差异\n        // 避免 diffTextAreaValue 时 offset 算错\n        value = value.replace(/\\xA0/g, ' ')\n        const { range, text } = diffTextAreaValue(\n          prevTextAreaValue.current,\n          value,\n        );\n\n        const [rangeStartIndex, rangeEndIndex] = range;\n        let mismatchLength = rangeEndIndex - rangeStartIndex;\n        const composing = composingData.current;\n        // console.info(`onchange, value=[${value}], range=${range}, text=[${text}], composing=[${composing}]`);\n        if (mismatchLength > 0 && composing.length > 0) {\n          const delLength = Math.min(mismatchLength, composing.length);\n          composingData.current = composing.slice(\n            0,\n            composing.length - delLength,\n          );\n          mismatchLength -= delLength;\n          updateComposing(controller, composingData.current);\n        }\n        if (mismatchLength > 0) {\n          const data = prevTextAreaValue.current.slice(\n            rangeStartIndex,\n            rangeStartIndex + mismatchLength,\n          );\n          removeText(controller, data);\n        }\n\n        let newText = text;\n        if (isComposing.current && newText) {\n          composingData.current += newText;\n          updateComposing(controller, composingData.current);\n          newText = '';\n        }\n\n        if (newText) {\n          insertText(controller, newText);\n        }\n        if (value.length < EMPTY_TEXT_AREA_VALUE.length) {\n          mismatchLength <= 0 && removeText(controller, ' ');\n          composingData.current = '';\n          resetTimer.current = setTimeout(reset, 0);\n        }\n        prevTextAreaValue.current = value;\n\n        prevSelectionAfterInput.current = controller.value.selection;\n      },\n      onCompositionStart() {\n        isComposing.current = true;\n        prevSelectionAfterInput.current = controller.value.selection;\n      },\n      onCompositionEnd() {\n        isComposing.current = false;\n        if (composingData.current) {\n          insertText(controller, composingData.current);\n          updateComposing(controller, '');\n          composingData.current = '';\n        }\n        prevSelectionAfterInput.current = controller.value.selection;\n      },\n      // 返回值意义: shouldContinue other keydown handlers\n      onKeyDown(event: React.KeyboardEvent) {\n        if (IS_TOUCH_MOBILE && (hotkeys.isCopy(event) || hotkeys.isCut(event))) {\n          // Background: iOS + Safari + 外接键盘的情况下，用中文输入法输入 cmd + C 等快捷键，会出现\n          //             keydown 后触发 compositionStart -> onChange 的情况\n          // Hack: https://stackoverflow.com/questions/63204395/how-can-i-reliably-cancel-a-compositionstart-event\n          // Ref: https://alidocs.dingtalk.com/i/nodes/2m0X9MnDA3QJwww90al4JqklwBK7RezY\n          if (IS_IPAD) {\n            controller.run('onCangjieBlur');\n            setTimeout(() => controller.run('onCangjieFocus'), 100);\n          }\n          return true;\n        }\n        if (IS_SAFARI) {\n          // BACKGROUND: Safari 下输入法输入 abc，然后逐个删除，到最后会把 abc 之前的文字删掉\n          // 正常情况下，事件触发顺序为 onKeydown -> onChange -> onCompositionEnd；\n          // 而 Safari 下是 onChange -> onCompositionEnd -> onKeydown，标志位就失去了参考价值\n          // http://gwiki.cn/2019/02/js%E7%9A%84%E7%BC%96%E8%BE%91%E4%BA%8B%E4%BB%B6\n          // https://developer.mozilla.org/en-US/docs/Web/Events/keydown\n          // 利用 event 事件信息，使输入法处理过程中，忽略 onKeydown\n          // @ts-ignore\n          if (event.isComposing || event.keyCode === 229) {\n            return false;\n          }\n        }\n        return (\n          !isComposing.current ||\n          (!hotkeys.isCompose(event) &&\n            !hotkeys.isUndo(event) &&\n            !hotkeys.isRedo(event))\n        );\n      },\n    }),\n    [controller, textAreaRef],\n  );\n}\n","/* eslint-disable react/no-find-dom-node */\n/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport equal from 'fast-deep-equal';\nimport { curry, omit } from 'lodash-es';\nimport Controller from '../controller/index';\nimport Selection, { SelectionTrigger, SupportEdge } from '../models/selection';\nimport { TextPoint, EdgePoint } from '../models/point';\nimport CangjieSelectEvent from '../events/cangjieSelect';\nimport caretRangeFromTargetAndCoord from '../utils/dom/caretRangeFromTargetAndCoord';\nimport findDOMRange from '../utils/dom/findDOMRange';\nimport findDOMNode from '../utils/dom/findDOMNode';\nimport hotKeys from '../utils/hotkeys';\nimport { CURSOR_WIDTH } from '../constants';\nimport scrollToVisible from '../utils/dom/scrollToVisible';\nimport isPointAtEdge, {\n  findRectsInEdgePoint,\n} from '../utils/dom/isPointAtEdge';\nimport {\n  isCoordAtLeftSide,\n} from '../utils/dom/caretHanging';\nimport {\n  movePointForward,\n  movePointBackward,\n  movePointWordBackward,\n  movePointWordForward,\n} from '../utils/selection';\nimport {\n  getUpsidePoint,\n  getUpsideRange,\n  getDownsidePoint,\n  getDownsideRange,\n  pointAtDistance,\n} from '../queries/selection';\nimport { CHARACTERS_LENGTH_AFTER_USER_INPUT } from './useInputDetector';\nimport { IS_IOS, IS_MAC, IS_MOBILE, IS_SAFARI } from '../utils/environment';\nimport shoudStopInsideVoid from '../utils/shouldStopInsideVoid';\nimport { startScroll, stopScroll } from '../utils/dom/outsideScroller';\nimport { PerfType } from '../interfaces/perf';\nimport Data from '../interfaces/data';\n\nconst MULTIPLE_CLICK_DELAY = 500;\nconst TAP_HOLD_DELAY = 600;\n// 方向键需要快速响应，目前暂未发现明显问题\nconst CARET_MOVE_GAP_TIME = 0;\nconst MULTIPLE_CLICK_RANGE = 10;\n\nfunction getWordSelection(\n  controller: Controller,\n  target: HTMLElement,\n  x: number,\n  y: number,\n) {\n  const r = caretRangeFromTargetAndCoord(target, x, y, controller);\n  if (!r) {\n    return null;\n  }\n  const { document } = controller.value;\n  return Selection.selectWordAtPoint(document, r.anchor);\n}\n\n// get a new selection at Line Start or Line End of the current selection.\nfunction getSelectionAtLine(\n  where: SupportEdge,\n  controller: Controller,\n  selection: Selection | null,\n) {\n  const { value } = controller;\n  const { document } = value;\n  if (!selection) {\n    return null;\n  }\n  const isStart = where === 'start';\n  const { focus, isHanging } = selection;\n  if (focus.isEdgePoint()) {\n    const edge = isStart ? EdgePoint.BEFORE : EdgePoint.AFTER;\n    const anchor = EdgePoint.create({ key: focus.key, edge });\n    return Selection.create({ anchor, focus: anchor });\n  }\n  let range: Range | null = null; // selection's range\n  let blockDomNode: Element | null = null; // selection's closest block node\n  try {\n    const block = document.getClosestBlock(focus.key);\n    range = findDOMRange(selection, controller);\n    if (block) {\n      blockDomNode = findDOMNode(block.key);\n    }\n  } catch (_) {\n    return null;\n  }\n  if (!range || !blockDomNode) {\n    return null;\n  }\n\n  // selection's rect\n  const rects = range.getClientRects();\n  if (!rects.length) {\n    return null;\n  }\n  let rect = rects[isHanging ? rects.length - 1 : 0];\n  const edgeRects = isPointAtEdge(focus) ? findRectsInEdgePoint(focus) : [];\n  if (edgeRects && edgeRects.length) {\n    rect = edgeRects[isHanging ? edgeRects.length - 1 : 0];\n  }\n  // selection's closest block's rect\n  scrollToVisible(blockDomNode as HTMLElement, where, CURSOR_WIDTH);\n  const blockRect = blockDomNode.getBoundingClientRect();\n\n  // target selection's position\n  const position = {\n    x: where === 'start' ? blockRect.left + 1 : blockRect.right - 1,\n    y: rect.top + rect.height / 2,\n  };\n\n  const newRange = caretRangeFromTargetAndCoord(\n    blockDomNode,\n    position.x,\n    position.y,\n    controller,\n  );\n\n  if (!newRange) {\n    return null;\n  }\n\n  let { anchor: point } = newRange;\n\n  // if the target point is inside a void element, take the next point\n  const parent = document.getParent(point.key);\n  if (parent && controller.query('isVoid', parent)) {\n    point = controller.query(pointAtDistance, point, isStart ? -1 : 1);\n  }\n  const newSelection = Selection.create({\n    anchor: point,\n    focus: point,\n  });\n  return newSelection;\n}\n\nfunction shouldSelectOnRightClick(targetPoint: TextPoint | EdgePoint, controller: Controller) {\n  const { selection, document } = controller.value;\n\n  if (!selection || selection.isCollapsed) {\n    return true;\n  }\n\n  const { start, end } = selection.sort(document);\n  const rangeStart = Selection.create({\n    anchor: targetPoint,\n    focus: start,\n  });\n  const rangeEnd = Selection.create({\n    anchor: end,\n    focus: targetPoint,\n  });\n  const isBeforeStart = rangeStart.isExpanded && rangeStart.isForward(document);\n  const isAfterEnd = rangeEnd.isExpanded && rangeEnd.isForward(document);\n  return isBeforeStart || isAfterEnd;\n}\n\nexport default function useSelectionCalculator(\n  controller: Controller,\n  textAreaRef: React.MutableRefObject<HTMLTextAreaElement | null>,\n  scrollableContainerRef: React.MutableRefObject<HTMLDivElement | null>,\n) {\n  const isJustTapHold = React.useRef(false);\n\n  const tapHoldTimer = React.useRef<number | null>(null);\n\n  const outsideScoller = React.useRef<ReturnType<typeof startScroll> | null>(null);\n\n  const lastSingleClick = React.useRef<{ time: number; x: number; y: number }>({\n    time: 0,\n    x: 0,\n    y: 0,\n  });\n  const lastDoubleClick = React.useRef<{ time: number; x: number; y: number }>({\n    time: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const lastCaretMoveTime = React.useRef(0);\n  const prevSelectionRef = React.useRef<Selection | null>(null);\n\n  const onCangjieSelect = React.useCallback(\n    (selection: Selection, trigger?: SelectionTrigger) => {\n      const { composing, isFocused } = controller.value;\n      if (composing && selection.isExpanded) {\n        return;\n      }\n      if (!isFocused) {\n        controller.run('onCangjieFocus');\n      }\n\n      const newSelection = selection.marks === null ? selection : selection.set('marks', null);\n      const subtypeTriggerMap = {\n        selectStart: 'focusText',\n        selecting: 'selectText',\n        selectAll: 'selectAll',\n      };\n      if (!trigger || !subtypeTriggerMap[trigger] || equal(prevSelectionRef.current, newSelection)) {\n        // 需要 delay 丢弃的 perf 事件\n        controller.perfDrop(PerfType.selection);\n      }\n      prevSelectionRef.current = newSelection;\n      return controller.run(\n        'onCangjieSelect',\n        CangjieSelectEvent({\n          selection: newSelection,\n          trigger: trigger || 'userSelect',\n        }),\n      );\n    },\n    [controller],\n  );\n\n  const moveUpward = () => {\n    const now = Date.now();\n    const isGapTimeTooShort =\n      now - lastCaretMoveTime.current < CARET_MOVE_GAP_TIME;\n    if (isGapTimeTooShort) {\n      return;\n    }\n    lastCaretMoveTime.current = now;\n\n    const newRange = controller.query(getUpsideRange);\n\n    if (!newRange) {\n      return;\n    }\n    onCangjieSelect(\n      newRange,\n      SelectionTrigger.MoveUpward,\n    );\n  };\n\n  const moveDownward = () => {\n    const now = Date.now();\n    const isGapTimeTooShort =\n      now - lastCaretMoveTime.current < CARET_MOVE_GAP_TIME;\n    if (isGapTimeTooShort) {\n      return;\n    }\n    lastCaretMoveTime.current = now;\n    const newRange = controller.query(getDownsideRange);\n\n    if (!newRange) {\n      return;\n    }\n    onCangjieSelect(\n      newRange,\n      SelectionTrigger.MoveDownward,\n    );\n  };\n\n  const moveBackward = () => {\n    const { document, selection } = controller.value;\n    if (selection.isExpanded) {\n      const isAtEdge = isPointAtEdge(selection.getStart(document));\n      onCangjieSelect(\n        selection.moveToStart(document).setHanging(isAtEdge),\n      );\n      return;\n    }\n\n    const isProceeded = shoudStopInsideVoid(controller, 'moveBackward');\n    if (isProceeded) {\n      return;\n    }\n\n    const isAtEdge = isPointAtEdge(selection.anchor);\n    if (isAtEdge && selection.isHanging) {\n      onCangjieSelect(selection.setHanging(false));\n      return;\n    }\n\n    const now = Date.now();\n    const isGapTimeTooShort =\n      now - lastCaretMoveTime.current < CARET_MOVE_GAP_TIME;\n    if (isGapTimeTooShort) {\n      return;\n    }\n    const newSelection = selection\n      .moveAnchorBackward(\n        1,\n        movePointBackward(\n          controller,\n          curry.placeholder,\n          curry.placeholder,\n          'offset',\n        ),\n      )\n      .moveToAnchor();\n    const isNextPointAtEdge = isPointAtEdge(newSelection.anchor);\n    lastCaretMoveTime.current = now;\n    onCangjieSelect(\n      newSelection.setHanging(isNextPointAtEdge),\n      SelectionTrigger.MoveBackward,\n    );\n  };\n\n  const moveForward = () => {\n    const { document, selection } = controller.value;\n    if (selection.isExpanded) {\n      onCangjieSelect(selection.moveToEnd(document));\n      return;\n    }\n    const isProceeded = shoudStopInsideVoid(controller, SelectionTrigger.MoveForward);\n    if (isProceeded) {\n      return;\n    }\n    const isAtEdge = isPointAtEdge(selection.anchor);\n    if (isAtEdge && !selection.isHanging) {\n      onCangjieSelect(selection.setHanging(true));\n      return;\n    }\n\n    const now = Date.now();\n    const isGapTimeTooShort =\n      now - lastCaretMoveTime.current < CARET_MOVE_GAP_TIME;\n    if (isGapTimeTooShort) {\n      return;\n    }\n    lastCaretMoveTime.current = now;\n    onCangjieSelect(\n      selection\n        .moveAnchorForward(\n          1,\n          movePointForward(\n            controller,\n            curry.placeholder,\n            curry.placeholder,\n            'offset',\n          ),\n        )\n        .moveToAnchor(),\n      SelectionTrigger.MoveForward,\n    );\n  };\n\n  const handleNativeSelectionChange = () => {\n    if (!textAreaRef.current || document.activeElement !== textAreaRef.current) {\n      return;\n    }\n\n    // iOS - Voice Input will try to select all words when finished\n    // ref: https://aone.alibaba-inc.com/v2/project/585561/bug/32431619\n    if (textAreaRef.current.selectionStart !== textAreaRef.current.selectionEnd) {\n      return;\n    }\n    // Detect users move selection by external keyboard arrow keys under iOS@<13\n    // Ref: https://bugs.webkit.org/show_bug.cgi?id=149054\n    const defaultCaretPosition = textAreaRef.current.value.length - CHARACTERS_LENGTH_AFTER_USER_INPUT;\n    const newCaretPosition = textAreaRef.current.selectionStart;\n\n    if (IS_IOS) {\n      // Mobile 3rd IME will delete to beginning when choosing english suggestion\n      // In this case both `newCaretPosition` and `defaultCaretPosition` is 0\n      // We handle this case by adding `defaultCaretPosition !== 0`\n      if (newCaretPosition === 0 && defaultCaretPosition !== 0) {\n        moveUpward();\n      } else if (newCaretPosition === textAreaRef.current.value.length) {\n        moveDownward();\n      } else if (newCaretPosition - defaultCaretPosition < 0) {\n        moveBackward();\n      } else if (newCaretPosition - defaultCaretPosition > 0) {\n        moveForward();\n      }\n    }\n\n    // Reset selection to end of textarea while users change it.\n    // e.g. Users move selection by 3D touch.\n    // Note: selectionStart is offset of characters and works fine with emoji.\n    if (textAreaRef.current.selectionStart !== defaultCaretPosition) {\n      textAreaRef.current.selectionStart = defaultCaretPosition;\n    }\n    if (textAreaRef.current.selectionEnd !== defaultCaretPosition) {\n      textAreaRef.current.selectionEnd = defaultCaretPosition;\n    }\n  };\n  React.useEffect(() => {\n    if (IS_MOBILE) {\n      document.addEventListener('selectionchange', handleNativeSelectionChange);\n      return () => {\n        document.removeEventListener('selectionchange', handleNativeSelectionChange);\n      };\n    }\n    return undefined;\n  }, [controller]);\n\n  React.useEffect(() => {\n    return () => {\n      if (outsideScoller.current) {\n        outsideScoller.current.cancel();\n        outsideScoller.current = null;\n      }\n    };\n  }, [controller]);\n\n  return React.useMemo(\n    () => ({\n      onKeyDown(event: React.KeyboardEvent | KeyboardEvent) {\n        const { value, readOnly } = controller;\n        const { document, selection } = value;\n        if (!selection) {\n          return;\n        }\n\n        const now = Date.now();\n        const isGapTimeTooShort =\n          now - lastCaretMoveTime.current < CARET_MOVE_GAP_TIME;\n\n        if (hotKeys.isSelectAll(event)) {\n          controller.perfStart({ type: PerfType.selection, subtype: 'selectAll' });\n          event.preventDefault();\n          onCangjieSelect(selection.moveToRangeOfNode(document, controller), SelectionTrigger.SelectAll);\n          return;\n        }\n        if (hotKeys.isMoveBackward(event)) {\n          event.preventDefault();\n          moveBackward();\n          return;\n        }\n        if (hotKeys.isMoveForward(event)) {\n          event.preventDefault();\n          moveForward();\n          return;\n        }\n        if (hotKeys.isMoveUpward(event)) {\n          if (readOnly && selection.isCollapsed) {\n            return;\n          }\n          event.preventDefault();\n          moveUpward();\n          return;\n        }\n        if (hotKeys.isMoveDownward(event)) {\n          if (readOnly && selection.isCollapsed) {\n            return;\n          }\n          event.preventDefault();\n          moveDownward();\n          return;\n        }\n        if (hotKeys.isMoveWordBackward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          onCangjieSelect(\n            selection\n              .move(movePointWordBackward(controller, 'focus'))\n              .moveToFocus(),\n          );\n          return;\n        }\n        if (hotKeys.isMoveWordForward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          onCangjieSelect(\n            selection\n              .move(movePointWordForward(controller, 'focus'))\n              .moveToFocus(),\n          );\n          return;\n        }\n        if (hotKeys.isMoveLineBackward(event)) {\n          event.preventDefault();\n          const range = getSelectionAtLine('start', controller, selection);\n          if (range) {\n            const isAtEdge = isPointAtEdge(range.anchor);\n            onCangjieSelect(range.setHanging(isAtEdge));\n          }\n          return;\n        }\n        if (hotKeys.isMoveLineForward(event)) {\n          event.preventDefault();\n          const range = getSelectionAtLine('end', controller, selection);\n          if (range) {\n            onCangjieSelect(range);\n          }\n          return;\n        }\n        if (hotKeys.isMoveToDocumentStart(event)) {\n          event.preventDefault();\n          onCangjieSelect(selection.moveToStartOfDocument(controller));\n          return;\n        }\n        if (hotKeys.isMoveToDocumentEnd(event)) {\n          event.preventDefault();\n          onCangjieSelect(selection.moveToEndOfDocument(controller));\n          return;\n        }\n        if (hotKeys.isExtendBackward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          onCangjieSelect(\n            selection.moveFocusBackward(\n              1,\n              movePointBackward(\n                controller,\n                curry.placeholder,\n                curry.placeholder,\n                'offset',\n              ),\n            ),\n          );\n          return;\n        }\n        if (hotKeys.isExtendForward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          onCangjieSelect(\n            selection.moveFocusForward(\n              1,\n              movePointForward(\n                controller,\n                curry.placeholder,\n                curry.placeholder,\n                'offset',\n              ),\n            ),\n          );\n          return;\n        }\n        if (hotKeys.isExtendUpward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort || !selection) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          const point = getUpsidePoint(\n            controller,\n            selection.focus,\n            selection.isHanging,\n          );\n          const { focus, anchor } = selection;\n          onCangjieSelect(\n            Selection.create({\n              anchor,\n              focus: point || focus.moveToStartOfNode(document),\n            }),\n          );\n          return;\n        }\n        if (hotKeys.isExtendDownward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort || !selection) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          const { focus, anchor, isHanging } = selection;\n          const point = getDownsidePoint(controller, focus, isHanging);\n          onCangjieSelect(\n            Selection.create({\n              anchor,\n              focus: point || focus.moveToEndOfNode(document),\n            }),\n          );\n          return;\n        }\n        if (hotKeys.isExtendWordBackward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          onCangjieSelect(\n            selection.move(movePointWordBackward(controller, 'focus')),\n          );\n          return;\n        }\n        if (hotKeys.isExtendWordForward(event)) {\n          event.preventDefault();\n          if (isGapTimeTooShort) {\n            return;\n          }\n          lastCaretMoveTime.current = now;\n          onCangjieSelect(\n            selection.move(movePointWordForward(controller, 'focus')),\n          );\n          return;\n        }\n        if (hotKeys.isExtendLineBackward(event)) {\n          event.preventDefault();\n          const range = getSelectionAtLine('start', controller, selection);\n          if (range) {\n            onCangjieSelect(\n              Selection.create({\n                anchor: selection.anchor,\n                focus: range.focus,\n              }),\n            );\n          }\n          return;\n        }\n        if (hotKeys.isExtendToDocumentStart(event)) {\n          event.preventDefault();\n          onCangjieSelect(selection.moveFocusToStartOfNode(document, controller));\n          return;\n        }\n        if (hotKeys.isExtendToDocumentEnd(event)) {\n          event.preventDefault();\n          onCangjieSelect(selection.moveFocusToEndOfNode(document, controller));\n          return;\n        }\n        if (hotKeys.isExtendLineForward(event)) {\n          event.preventDefault();\n          const range = getSelectionAtLine('end', controller, selection);\n          if (range) {\n            onCangjieSelect(\n              Selection.create({\n                anchor: selection.anchor,\n                focus: range.focus,\n              }),\n            );\n          }\n        }\n      },\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onKeyUp(event: React.KeyboardEvent | KeyboardEvent) {\n        lastCaretMoveTime.current = 0;\n      },\n      onMultipleClick(event: React.MouseEvent<Element>) {\n        const now = Date.now();\n        if (event.button === 2) {\n          return;\n        }\n        if (\n          now - lastDoubleClick.current.time < MULTIPLE_CLICK_DELAY &&\n          Math.abs(event.clientY - lastDoubleClick.current.y) <\n            MULTIPLE_CLICK_RANGE &&\n          Math.abs(event.clientX - lastDoubleClick.current.x) <\n            MULTIPLE_CLICK_RANGE\n        ) {\n          lastDoubleClick.current = { time: 0, x: 0, y: 0 };\n          lastSingleClick.current = { time: 0, x: 0, y: 0 };\n          const range = caretRangeFromTargetAndCoord(\n            event.target,\n            event.clientX,\n            event.clientY,\n            controller,\n          );\n          if (!range) {\n            return;\n          }\n          const { value } = controller;\n          const { document, selection } = value;\n          const anchorBlock = document.getClosestBlock(range.anchor.key);\n          if (selection && anchorBlock) {\n            onCangjieSelect(\n              selection!.moveToRangeOfNode(anchorBlock, controller),\n              SelectionTrigger.MultipleClick,\n            );\n          }\n          return;\n        }\n\n        if (controller.query('isQuickPreview')) {\n          return;\n        }\n\n        if (\n          now - lastSingleClick.current.time > MULTIPLE_CLICK_DELAY ||\n          Math.abs(event.clientY - lastSingleClick.current.y) >\n            MULTIPLE_CLICK_RANGE ||\n          Math.abs(event.clientX - lastSingleClick.current.x) >\n            MULTIPLE_CLICK_RANGE\n        ) {\n          lastSingleClick.current = {\n            time: now,\n            x: event.clientX,\n            y: event.clientY,\n          };\n          lastDoubleClick.current = {\n            time: 0,\n            x: event.clientX,\n            y: event.clientY,\n          };\n          return;\n        }\n\n        lastSingleClick.current = { time: 0, x: 0, y: 0 };\n        lastDoubleClick.current = {\n          time: now,\n          x: event.clientX,\n          y: event.clientY,\n        };\n        const range = getWordSelection(\n          controller,\n          event.target as HTMLElement,\n          event.clientX,\n          event.clientY,\n        );\n        if (range) {\n          onCangjieSelect(\n            range,\n            SelectionTrigger.MultipleClick,\n          );\n        }\n      },\n      onSelectStart(event: React.MouseEvent) {\n        let isSelecting = false;\n        function onSelectUpdate(e: MouseEvent) {\n          controller.perfStart({ type: PerfType.selection, subtype: 'selectText' });\n          if (!scrollableContainerRef.current) {\n            controller.perfDrop(PerfType.selection);\n            return;\n          }\n\n          outsideScoller.current && outsideScoller.current(e);\n          const { target } = e;\n          const x = e.clientX;\n          const y = e.clientY;\n          if (!target) {\n            controller.perfDrop(PerfType.selection);\n            return;\n          }\n          const range = caretRangeFromTargetAndCoord(target, x, y, controller);\n          if (!range) {\n            controller.perfDrop(PerfType.selection);\n            return;\n          }\n\n          const { selection } = controller.value;\n          if (!selection || equal(range, selection)) {\n            controller.perfDrop(PerfType.selection);\n            return;\n          }\n          isSelecting = true;\n          onCangjieSelect(selection.set('focus', range.focus), SelectionTrigger.Selecting);\n        }\n\n        function onSelectEnd() {\n          if (outsideScoller.current) {\n            outsideScoller.current.cancel();\n            outsideScoller.current = null;\n          }\n          stopScroll(controller);\n          if (isSelecting) {\n            const { selection } = controller.value;\n            onCangjieSelect(\n              selection.set('data', omit(selection.data, 'trigger')),\n            );\n          }\n          window.document.removeEventListener('mousemove', onSelectUpdate);\n          window.document.removeEventListener('mouseup', onSelectEnd);\n          window.document.removeEventListener('mouseleave', onSelectEnd);\n        }\n\n        controller.perfStart({ type: PerfType.selection, subtype: 'focusText' });\n\n        if (isJustTapHold.current) {\n          controller.perfDrop(PerfType.selection);\n          isJustTapHold.current = false;\n          return;\n        }\n\n        const rawRange = caretRangeFromTargetAndCoord(\n          event.target,\n          event.clientX,\n          event.clientY,\n          controller,\n        );\n\n        const isClickAtLeftSide = isCoordAtLeftSide(event.clientX, controller);\n\n        if (!rawRange) {\n          controller.perfDrop(PerfType.selection);\n          return;\n        }\n\n        const range = rawRange.setHanging(\n          isClickAtLeftSide && isPointAtEdge(rawRange.anchor),\n        );\n\n        // HACK: Safari + third-party IME + MacOS checked TapToHold option\n        // sometimes mouseup event triggers before mousedown in a click progress\n        // Ref: https://github.com/facebook/react/issues/20787\n        if (IS_MAC && IS_SAFARI && event.buttons === 0) { // in this backgound, event.buttons is 0\n          const { selection } = controller.value;\n          if (event.shiftKey) {\n            onCangjieSelect(selection.set('focus', range.focus), SelectionTrigger.SelectStart);\n          } else {\n            onCangjieSelect(range, SelectionTrigger.SelectStart);\n          }\n          return;\n        }\n\n        // Right button clicked.\n        // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n        if (event.button === 2) {\n          const shouldSelect = shouldSelectOnRightClick(range.focus, controller);\n          if (shouldSelect) {\n            onCangjieSelect(range);\n            return;\n          }\n          controller.perfDrop(PerfType.selection);\n          if (!controller.value.isFocused) {\n            controller.run('onCangjieFocus');\n          }\n          return;\n        }\n\n        if (scrollableContainerRef.current) {\n          outsideScoller.current = startScroll({\n            scroller: scrollableContainerRef.current,\n            controller,\n          });\n        }\n\n        window.document.addEventListener('mousemove', onSelectUpdate);\n        window.document.addEventListener('mouseup', onSelectEnd);\n        window.document.addEventListener('mouseleave', onSelectEnd);\n\n        const { selection } = controller.value;\n        if (event.shiftKey) {\n          onCangjieSelect(selection.set('focus', range.focus), SelectionTrigger.SelectStart);\n        } else {\n          onCangjieSelect(range, SelectionTrigger.SelectStart);\n        }\n      },\n      onTapHoldStart(event: React.TouchEvent) {\n        if (tapHoldTimer.current) {\n          clearTimeout(tapHoldTimer.current);\n        }\n\n        const { target, clientX, clientY } = event.touches[0];\n        tapHoldTimer.current = window.setTimeout(() => {\n          isJustTapHold.current = true;\n          const range = getWordSelection(\n            controller,\n            target as HTMLElement,\n            clientX,\n            clientY,\n          );\n          if (range) {\n            onCangjieSelect(range);\n          }\n        }, TAP_HOLD_DELAY);\n      },\n      onTapHoldEnd() {\n        if (tapHoldTimer.current) {\n          clearTimeout(tapHoldTimer.current);\n          tapHoldTimer.current = null;\n        }\n      },\n    }),\n    [controller, scrollableContainerRef, onCangjieSelect],\n  );\n}\n","/**\n * @packageDocumentation\n * @module Events\n * @description Prevent clipboard data from being destroyed when asynchronous retrieval of data\n */\ninterface PasteInputDetail {\n  clipboardData?: DataTransfer\n}\n\ntype PasteInputEvent = CustomEvent<PasteInputDetail>;\n\nfunction PasteInputEvent(detail: PasteInputDetail) {\n  return new CustomEvent('pasteInput', { detail });\n}\n\nexport default PasteInputEvent;\n","// eslint-disable-next-line import/no-extraneous-dependencies\n/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useController from '../controller/useController';\nimport { TextPoint, EdgePoint } from '../models/point';\nimport Selection from '../models/selection';\nimport { useZoom, useZoomContainer } from '../hooks/useZoom';\nimport { IS_IOS, IS_IPAD, IS_MOBILE } from '../utils/environment';\nimport { findCaretPosition } from '../utils/dom/findCaretPosition';\nimport { pointAtDistance } from '../queries/selection';\nimport { Selector } from '../constants';\n\nconst SHOULD_FOLLOW_CARET = !IS_IOS || IS_IPAD;\n\nconst textAreaProps = IS_MOBILE ? {} : { spellCheck: false };\n\nconst commonStyle: React.CSSProperties = {\n  position: 'fixed',\n  overflow: 'hidden',\n  width: 1,\n  height: 1,\n  lineHeight: 1,\n  whiteSpace: 'pre-wrap',\n  zIndex: -1,\n  opacity: 0,\n  background: 'transparent',\n  color: 'transparent',\n  outline: 'none',\n  caretColor: 'transparent',\n  willChange: 'left,top',\n};\n\n//@ts-ignore\nif (process.env.NODE_ENV !== 'uitest') {\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/contain\n  commonStyle.contain = 'strict';\n}\n\nconst wrapperStyle: React.CSSProperties = SHOULD_FOLLOW_CARET ? commonStyle : {\n  ...commonStyle,\n  top: 0,\n  left: -99,\n  // 修复iOS we-web下输入文字时滚动问题\n  // height: 'auto',\n};\n\nconst textAreaStyle: React.CSSProperties = {\n  fontSize: 'inherit',\n  lineHeight: 1,\n  padding: 0,\n  border: 'none',\n\n  // [IMPORTANT]\n  // 1. iOS@<13 need to preserve `\\n` to detect `moveUpward` & `moveDownward`,\n  //    see: cangjie/src/hooks/useSelectionCalculator.ts\n  // 2. Desktop need `nowrap` to prevent that IME positioning incorrectly\n  whiteSpace: IS_IOS ? 'pre-wrap' : 'nowrap',\n\n  // [IMPORTANT]\n  // 1. Textarea will enlarge ancestors' rectangle when width is `auto`.\n  // 2. `useInputDetector` will treat inputting as deleting if width is smaller than `1em`.\n  width: '1em',\n};\n\nfunction usePointPosition(\n  textareaWrapperRef: React.RefObject<HTMLDivElement>,\n  point: EdgePoint | TextPoint | undefined,\n  zoom: number,\n) {\n  const controller = useController();\n  const container = useZoomContainer();\n  React.useEffect(() => {\n    if (!SHOULD_FOLLOW_CARET || !point) {\n      return;\n    }\n    const textareaWrapper = textareaWrapperRef.current;\n    if (!textareaWrapper) {\n      return;\n    }\n    if (!container) {\n      return;\n    }\n    const { isHanging } = controller.value.selection;\n    const preferredEdge = isHanging ? 'start' : 'end';\n    const rect = findCaretPosition(point, preferredEdge, container);\n    if (!rect) {\n      return;\n    }\n    const { clientLeft, clientTop } = rect;\n    textareaWrapper.style.top = `${clientTop}px`;\n    textareaWrapper.style.left = `${clientLeft}px`;\n    textareaWrapper.style.fontSize = `${rect.height / zoom}px`;\n  });\n}\n\ninterface HiddenTextAreaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  selection: Selection;\n}\n\nconst HiddenTextArea = React.forwardRef<\n  HTMLTextAreaElement,\n  HiddenTextAreaProps\n>((props, ref) => {\n  const { selection, ...rest } = props;\n  const wrapperRef = React.createRef<HTMLDivElement>();\n  const zoom = useZoom();\n  const controller = useController();\n\n  let { anchor: point } = selection;\n\n  // if the target point is inside a void element, take the previous point\n  const { document } = controller.value;\n  const parentNode = document.getParent(point.key);\n  if (parentNode && controller.query('isVoid', parentNode)) {\n    point = controller.query(pointAtDistance, point, -1);\n  }\n\n  usePointPosition(wrapperRef, point, zoom);\n\n  const children = (\n    <div ref={wrapperRef} style={wrapperStyle} data-cangjie-hidden>\n      <textarea\n        {...rest}\n        {...textAreaProps}\n        ref={ref}\n        rows={1}\n        style={textAreaStyle}\n        data-cangjie-input\n        // https://aone.alibaba-inc.com/v2/project/585561/bug/45423783#\n        // iOS 15+ 有时会出现输入英文时页面 crash 然后 reload\n        // 从现象上看，若关闭了系统输入法的「自动改正」开关，就不会出现\n        // 因此这里加个 Non-standard Attribute 做个防御\n        autoCorrect=\"off\"\n      />\n    </div>\n  );\n  return ReactDOM.createPortal(children, window.document.body);\n});\n\nexport default HiddenTextArea;\n","/* eslint-disable prefer-arrow-callback */\nimport * as React from 'react';\nimport Controller, { defaultScrollType } from '../controller/index';\nimport Selection from '../models/selection';\nimport { getDOMRectFromSelection } from '../utils/dom/scrollToSelection';\n\nexport function useResumePosition(\n  scrollableContainerRef: React.MutableRefObject<HTMLDivElement | null>,\n  containerRef: React.MutableRefObject<HTMLElement | null>,\n  controller: Controller,\n) {\n  // 缓存用户最近一次的光标位置，以实现多人协同时，内容变动，固定用户视角\n  const snapshotCursorY = React.useRef<number | null>(null);\n  const snapshotScrollTop = React.useRef(0);\n  const prevSelectionRef = React.useRef<Selection | null>(null);\n\n  const { document, selection, injections } = controller.value;\n\n  React.useMemo(function snapshotCursorPos() {\n    if (!controller.shouldResumePosition || controller.enableVirtualizeView) {\n      return;\n    }\n    // 记录选区数据发生变化，DOM 尚未变更时，DOM 光标的位置\n    // BACKGROUND：DOM 更新后，若选区数据（key）未发生变化，而选区对应的空间（Path）变化，则光标差异源于协同编辑，需要做滚动调整\n    // HACK：`getSnapshotBeforeUpdate` 没有等价实现，使用 React.memo 实现 DOM 变更前的 Snapshot\n    const val = controller.value;\n\n    if (val.isFocused && scrollableContainerRef.current && prevSelectionRef.current) {\n      snapshotScrollTop.current = scrollableContainerRef.current.scrollTop;\n      const cursorRect = getDOMRectFromSelection(\n        prevSelectionRef.current || val.selection,\n        containerRef.current!,\n        controller,\n      );\n      if (cursorRect) {\n        const cursorY = scrollableContainerRef.current!.scrollTop + cursorRect!.top;\n        snapshotCursorY.current = cursorY;\n      }\n    } else {\n      snapshotCursorY.current = null;\n    }\n  }, [document, selection, injections]);\n\n  React.useEffect(function scrollback() {\n    if (!controller.shouldResumePosition || controller.enableVirtualizeView) {\n      return;\n    }\n    const val = controller.value;\n    if (val.isFocused && snapshotCursorY.current !== null && scrollableContainerRef.current) {\n      // 当 DOM 更新后:\n      // 如果选区所在的空间发生了变化，即当前选区的空间，不等于最近一次单人编辑时缓存的空间\n      // 则认为选区因协同数据而发生了变化，此时需要做滚回操作\n      const cursorRect = getDOMRectFromSelection(\n        val.selection,\n        containerRef.current!,\n        controller,\n      );\n      if (!cursorRect) {\n        snapshotCursorY.current = null;\n      } else {\n        const cursorY = scrollableContainerRef.current!.scrollTop + cursorRect!.top;\n        const offset = cursorY - snapshotCursorY.current;\n        if (offset !== 0) {\n          scrollableContainerRef.current!.scrollTop = snapshotScrollTop.current + offset;\n        }\n        // 刷新 DOM 光标位置\n        snapshotCursorY.current = cursorY;\n      }\n    }\n    // 消费后重置回默认值\n    controller.setScrollType(defaultScrollType);\n  }, [document, selection, injections]);\n\n  React.useEffect(() => {\n    prevSelectionRef.current = selection;\n  }, [selection]);\n}\n","import React from 'react';\nimport equal from 'fast-deep-equal';\nimport { debounce } from 'lodash-es';\nimport Controller from '../controller';\nimport Selection from '../models/selection';\nimport { TextPoint } from '../models/point';\nimport { scrollToSelection } from '../utils/dom';\nimport { IS_MOBILE } from '../utils/environment';\nimport { isScrolling } from '../utils/dom/outsideScroller';\nimport { pointAtStartOfNode, pointAtEndOfNode } from '../queries';\n\nconst DEBOUNCE_TIME_SCROLL_BY_SELECTION = 60;\n\nexport function useScrollBySelection(\n  scrollableContainerRef: React.MutableRefObject<HTMLDivElement | null>,\n  contentRef: React.MutableRefObject<HTMLDivElement | null>,\n  controller: Controller,\n) {\n  const { selection, composing } = controller.value;\n  const scrollDepsRef = React.useRef<{ selection: Selection | null; composing: string }>({ selection: null, composing: '' });\n\n  const scrollBySelection = React.useMemo(\n    () => debounce((targetSelection: Selection, targetComposing: string) => {\n      if (\n        (targetSelection.isExpanded || !controller.readOnly) && // 拖选时 or 编辑态下的光标 可触发滚动\n        controller.value.isFocused &&\n        contentRef.current &&\n        scrollableContainerRef.current &&\n        (!equal(targetSelection, scrollDepsRef.current.selection) || targetComposing !== scrollDepsRef.current.composing)\n      ) {\n        scrollDepsRef.current = {\n          selection: targetSelection,\n          composing,\n        };\n\n        // 移动端：选区 Expand 时候，没必要每次渲染都进行 scroll，不然会导致无法跨段落选择\n        if (IS_MOBILE && targetSelection.isExpanded) {\n          return;\n        }\n\n        // 表格设置的选区，禁止 scroll\n        if (targetSelection.data.isByTable) {\n          return;\n        }\n\n        if (isScrolling(controller)) {\n          return;\n        }\n\n        // 全选状态下，就不要scroll了。\n        const { document: latestDocument, selection: latestSelection } = controller.value;\n        const { start, end } = latestSelection.sort(latestDocument);\n        const startPoint = controller.query(pointAtStartOfNode, latestDocument);\n        const endPoint = controller.query(pointAtEndOfNode, latestDocument);\n\n        const skipScroll = equal(start, startPoint) && equal(end, endPoint);\n        if (skipScroll) {\n          return;\n        }\n\n        const target = (\n          composing\n            ? Selection.create({\n              ...targetSelection,\n              focus: TextPoint.create({\n                ...targetSelection.focus,\n                offset: (targetSelection.focus as TextPoint).offset + targetComposing.length,\n              }),\n            })\n            : targetSelection\n        );\n\n        scrollToSelection(\n          target,\n          contentRef.current,\n          scrollableContainerRef.current,\n          controller,\n        );\n      }\n    }, DEBOUNCE_TIME_SCROLL_BY_SELECTION),\n    [contentRef, scrollableContainerRef, controller],\n  );\n\n  // 根据选区变化滚动页面\n  React.useEffect(() => {\n    // 排除渲染后需要滚回至原位置而非选区所在位置的情况\n    // BACKGROUND: 协同编辑时，若协同者在同一段落的本地选区之前编辑，会导致本地选区变化\n    if (controller.shouldScrollToSelection) {\n      scrollBySelection(selection, composing);\n    }\n    return () => {\n      scrollBySelection.cancel();\n    };\n    // 这里不能加 document 依赖，因为可能会导致多人协同的时候，异常滚动。\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controller, selection, composing]);\n}\n","import * as React from 'react';\nimport equal from 'fast-deep-equal';\nimport { Rect } from './utils/antiAliasingRects';\nimport { CANGJIE_SELECTION_INACTIVE_COLOR, Selector } from '../../constants';\nimport Selection from '../../models/selection';\nimport Controller from '../../controller';\n\ninterface RangeProps {\n  rects: Rect[];\n  isFocused: boolean;\n  isRemote: boolean;\n  selection: Selection;\n  controller: Controller;\n}\n\nconst attrbiute = {\n  [Selector.nonSelect]: true,\n};\n\nconst style: React.CSSProperties = {\n  pointerEvents: 'none',\n};\n\nconst isComponentPropsEqual = (prevProps: RangeProps, nextProps: RangeProps) => {\n  return (\n    prevProps.isFocused === nextProps.isFocused\n    && prevProps.isRemote === nextProps.isRemote\n    && equal(prevProps.rects, nextProps.rects)\n    && equal(prevProps.selection, nextProps.selection)\n  );\n};\n\n/**\n * 负责渲染 expanded selection\n */\nconst Range = React.memo((props: RangeProps) => {\n  const { rects, controller, isFocused, isRemote, selection } = props;\n\n  const color = React.useMemo(() => controller.query(\n    'selectionColor',\n    selection,\n    !isRemote,\n  // isFocused 在 query 内部会消费掉\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  ), [controller, selection, isRemote, isFocused]);\n\n  return (\n    <div data-cangjie-selection={selection.viewKey} style={style} data-testid=\"cangjie-range\" className='cangjie-range'>\n      {rects.map((rect) => {\n        const position = 'absolute';\n        const { left, top, width, height } = rect;\n        const key = `${left}-${top}-${width}-${height}`;\n        const style: React.CSSProperties = {\n          position,\n          left,\n          top,\n          width,\n          height,\n          backgroundColor: color || CANGJIE_SELECTION_INACTIVE_COLOR,\n        };\n        return <div key={key} {...attrbiute} style={style} />;\n      })}\n    </div>\n  );\n}, isComponentPropsEqual);\n\nexport default Range;\n","/* eslint-disable prefer-arrow-callback */\nimport { useEffect } from 'react';\nimport Controller from '../controller';\nimport { PendingType } from '../interfaces/controller';\nimport { PerfType } from '../interfaces/perf';\nimport Selection from '../models/selection';\n\nfunction isDelayed(selection: Selection, controller: Controller) {\n  return selection !== controller.value.selection;\n}\n\nfunction usePerf(controller: Controller, noTrack?: boolean) {\n  /********************************************************************************************\\\n  * 正常绘制流程                                                                                 *\n  *                 +---------+    +---------+   +---------+   +---------+   +----------+      *\n  *  ---------------+ keydown +----+ render  +---+   rAF   +---+  paint  +---+setTimeout+----> *\n  * Timeline        +---------+    +---------+   +---------+   +---------+   +----------+      *\n  *                                                                                            *\n  \\********************************************************************************************/\n\n  /*************************************************************************************************************\\\n  * 丢帧场景                                                                                                     *\n  *                                +--------------+                                                             *\n  *                          +---->| 未被绘制，丢帧 |                                                             *\n  *                          |     +--------------+                                                             *\n  *                          |                                                                                  *\n  *            +--------------------------+                                                                     *\n  *            | +---------+  +---------+ | +----------+  +---------+  +---------+ +---------+  +---------+     *\n  *  ----------+-+ keydown +--+ render  +-+-+setTimeout+--+ keydown +--+ render  +-+   rAF   +--+  paint  +---> *\n  * Timeline   | +---------+  +---------+ | +----------+  +---------+  +---------+ +---------+  +---------+     *\n  *            +--------------------------+                                                                     *\n  *                                                                                                             *\n  \\*************************************************************************************************************/\n  useEffect(() => {\n    if (noTrack) {\n      return;\n    }\n    // 如果是 pending 期间的选区更新，进行输入统计\n    const { pendingType } = controller;\n    if (\n      pendingType === PendingType.input ||\n      pendingType === PendingType.selection\n    ) {\n      const { selection } = controller.value;\n      let dropped = true;\n      window.requestAnimationFrame(function preparePaint() {\n        // 在下一次 repaint 发生前，若光标不再等于组件 update 时的光标，则认为丢帧\n        dropped = isDelayed(selection, controller);\n        const perfType =\n          pendingType === PendingType.input\n            ? controller.value.composing\n              ? PerfType.composing\n              : PerfType.input\n            : PerfType.selection;\n        controller.perfEnd(perfType, dropped);\n      });\n    }\n  });\n}\n\nexport default usePerf;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Controller from '../../controller';\nimport Selection from '../../models/selection';\nimport Caret from './caret';\nimport Range from './range';\nimport { CaretAppearance } from './types';\nimport { Rect } from './utils/antiAliasingRects';\nimport usePerf from '../../hooks/usePerf';\n\nexport interface Appearance {\n  // 是否为远程选区\n  isRemote: boolean;\n  // 原始 selection\n  selection: Selection;\n  // selection 对应的某一部分的外观\n  appearance: CaretAppearance | Rect[];\n  // 本地光标颜色\n  // perf: 由于本地光标颜色计算依赖于目标 dom 的背景色，所以需要在计算位置时计算\n  color?: string;\n}\n\nexport type SelectionAppearances = Map<\n  HTMLDivElement,\n  Appearance[]\n>\n\ninterface SelectionRendererProps {\n  appearances: SelectionAppearances;\n  isFocused: boolean;\n  controller: Controller;\n}\n\nconst SelectionRenderer = React.memo((props: SelectionRendererProps) => {\n  const { appearances, isFocused, controller } = props;\n  const prevSelectionRef = React.useRef<Selection | null>(null);\n  const [globalStyle, setGlobalStyle] = React.useState<string | null>(null);\n\n  usePerf(controller, prevSelectionRef.current === controller.value.selection);\n\n  React.useEffect(() => {\n    const style = controller.query('selectionGlobalStyle');\n    setGlobalStyle(style);\n  }, []);\n\n  const wrappers = Array.from(appearances.keys());\n  return (\n    <>\n      {wrappers.map((wrapper) => {\n        if (!wrapper) {\n          return null;\n        }\n        const info = appearances.get(wrapper)!;\n        let hasRemote = false;\n        const content = (\n          <>\n            {info.map(({ appearance, isRemote, selection, color }, index) => {\n              hasRemote = hasRemote || isRemote;\n              return (\n                Array.isArray(appearance)\n                ? (\n                  <Range\n                    key={`range-${index}`}\n                    rects={appearance}\n                    isRemote={isRemote}\n                    isFocused={isFocused}\n                    controller={controller}\n                    selection={selection}\n                  />\n                ) : (\n                  <Caret\n                    key={`caret-${index}`}\n                    color={color}\n                    isRemote={isRemote}\n                    isFocused={isFocused}\n                    controller={controller}\n                    selection={selection}\n                    position={appearance}\n                  />\n                )\n              )\n            })}\n            {hasRemote && <style>{globalStyle}</style>}\n          </>\n        );\n        return ReactDOM.createPortal(content, wrapper);\n      })}\n    </>\n  )\n});\n\nexport default SelectionRenderer;\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport { EdgePoint, TextPoint } from '..';\nimport { Selector } from '../constants';\nimport findDOMLeaves from './dom/findDOMLeaves';\n\nconst RE_RGB = /^rgba?\\((.+)\\)/i;\nconst ALPHA_THRESHOLD = 0.5;\nconst LUMINANCE_THRESHOLD = 0.5;\n\ntype RGBATuple = [number, number, number, number];\n\nfunction isCoordInsideDOMRect(x: number, y: number, rect: DOMRect) {\n  const { left, right, top, bottom } = rect;\n  return x >= left && x <= right && y >= top && y <= bottom;\n}\n\n/**\n * @deprecated\n * 获取当前元素的显示背景色。\n * 从此元素的 parent 依次向上，知道找到一个设置背景色的 element 为止。\n * 如果一直没找到，则返回白色。\n */\nexport function getBackgroundColor(at: Element, caretContainer: Element | null): RGBATuple {\n  let element: Element | null = caretContainer;\n\n  // check if it's inside a caret contaienr\n  if (caretContainer) {\n    const overlayBlocks = caretContainer.querySelectorAll(`[${Selector.nonSelect}]`);\n    const { left, width, top, height } = at.getBoundingClientRect();\n    const x = left + width / 2;\n    const y = top + height / 2;\n    const block = Array.from(overlayBlocks).find(b => {\n      return isCoordInsideDOMRect(x, y, b.getBoundingClientRect());\n    });\n    if (block) {\n      element = block as HTMLElement;\n    }\n  }\n\n  // default get background color logic\n  while (element) {\n    const color = window.getComputedStyle(element).backgroundColor;\n    const rgba = rgbaFromString(color);\n    if (rgba && rgba[3] > ALPHA_THRESHOLD && element.getBoundingClientRect().width > 0) {\n      return rgba;\n    }\n    element = element.parentElement;\n  }\n  return [255, 255, 255, 1];\n}\n\nexport function getBgColor(targetBlock: HTMLElement, at: { top: number, left: number, height: number }, point: TextPoint | EdgePoint): RGBATuple {\n  let element: HTMLElement | null = targetBlock;\n  if (point.isTextPoint()) {\n    const leaves = targetBlock.querySelectorAll<HTMLElement>(`[${Selector.key}^=\"${point.key}:\"]`);\n    const target = Array.from(leaves).find(b => {\n      return isCoordInsideDOMRect(at.left, at.top + at.height / 2, b.getBoundingClientRect());\n    });\n    if (target) {\n      element = target;\n    }\n  }\n\n  while (element) {\n    const color = window.getComputedStyle(element).backgroundColor;\n    const rgba = rgbaFromString(color);\n    if (rgba && rgba[3] > ALPHA_THRESHOLD && element.getBoundingClientRect().width > 0) {\n      return rgba;\n    }\n    element = element.parentElement;\n  }\n  return [255, 255, 255, 1];\n}\n\n/**\n * rgba 字符串转为 rgba 数组。\n * 'rgba(0,0,0,0.88)' => [0,0,0,0.88]\n * 'RGB(0,0,0)' => [0,0,0,1]\n */\nfunction rgbaFromString(str: string): RGBATuple | null {\n  const rgb = RE_RGB.exec(str) || [];\n  const rgbs = (rgb[1] || '').split(',');\n  if (rgbs.length < 3) {\n    return null;\n  } else if (rgbs.length === 3) {\n    rgbs.push('1');\n  }\n  const rgba: RGBATuple = [0, 0, 0, 0];\n  rgba[0] = parseInt(rgbs[0], 10);\n  rgba[1] = parseInt(rgbs[1], 10);\n  rgba[2] = parseInt(rgbs[2], 10);\n  rgba[3] = parseFloat(rgbs[3]);\n  return rgba;\n}\n\n/**\n * 获取相对的 luminance。\n * https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n */\nfunction getLuminance(rgba: RGBATuple): number {\n  const a: number[] = [];\n  for (let i = 0; i < 3; i++) {\n    const x = rgba[i] / 255;\n    a[i] = x <= 0.03928 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n  return 0.2126 * a[0] + 0.7152 * a[1] + 0.0722 * a[2];\n}\n\n/**\n * 根据背景色，获取光标的颜色。\n */\nexport function getCaretColor(backgroundColor: RGBATuple) {\n  const luminance = getLuminance(backgroundColor);\n  return luminance > LUMINANCE_THRESHOLD ? 'black' : 'white';\n}\n","import Document from '../../../models/document';\nimport Selection from '../../../models/selection';\nimport { Selector } from '../../../constants';\n\n/**\n * 从 cangjie-leaf 中获取 rects\n */\nexport function getRectsFromLeaf(\n  element: HTMLElement,\n  selection: Selection,\n  document: Document,\n): DOMRect[] {\n  const { start, end } = selection.convertToTextPoints(document);\n  const [keyStr, leafOffsetStr] =\n    element.getAttribute(Selector.key)?.split(':') || [];\n  const textNode = element.firstChild;\n  if (!keyStr || !leafOffsetStr || !textNode) {\n    return [];\n  }\n\n  // 检测 leaf 所在的 text 是否在选区内\n  if (!document.isNodeInRange(keyStr, selection)) {\n    return [];\n  }\n\n  const textLength = textNode.textContent?.length || 0;\n  const leafOffset = parseInt(leafOffsetStr, 10);\n\n  // 检测 leaf 是否在选区内\n  if (keyStr === start.key && start.offset > leafOffset + textLength) {\n    return [];\n  }\n  if (keyStr === end.key && end.offset < leafOffset) {\n    return [];\n  }\n\n  // 是否是一半的 leaf\n  let startOffset = -1;\n  let endOffset = -1;\n  if (\n    keyStr === start.key &&\n    start.offset >= leafOffset &&\n    start.offset <= leafOffset + textLength\n  ) {\n    startOffset = start.offset - leafOffset;\n  }\n  if (\n    keyStr === end.key &&\n    end.offset >= leafOffset &&\n    end.offset <= leafOffset + textLength\n  ) {\n    endOffset = end.offset - leafOffset;\n  }\n  if (startOffset >= 0 || endOffset >= 0) {\n    try {\n      const range = window.document.createRange();\n      range.setStart(textNode, Math.max(startOffset, 0));\n      range.setEnd(textNode, endOffset < 0 ? textLength : endOffset);\n      return Array.from(range.getClientRects());\n    } catch (error) {\n      return [];\n    }\n  }\n\n  // 到这里，肯定是完整的 leaf\n  return Array.from(element.getClientRects());\n}\n","export function getDOMPath(dom: HTMLElement, root = window.document.body) {\n  const path: HTMLElement[] = [];\n  let current: HTMLElement | null = dom;\n  while (current && current !== root) {\n    path.push(current);\n    current = current.parentElement;\n  }\n  return path.reverse();\n}\n\nexport function getTraverseRootsByDOMPath(\n  path1: HTMLElement[],\n  path2: HTMLElement[]\n): [HTMLElement, HTMLElement, HTMLElement[]] {\n  const length = Math.min(path1.length, path2.length);\n  let current = 0;\n  for (; current < length; current++) {\n    if (path1[current] !== path2[current]) {\n      break;\n    }\n  }\n  if (current === length) {\n    return [path1[length - 1], path1[length - 1], path1.slice(0, length)];\n  }\n  return [path1[current], path2[current], current > 0 ? path1.slice(0, current) : []];\n}\n","import { merge } from 'lodash-es';\nimport { getTraverseRootsByDOMPath } from './dom';\n\nexport interface TraverseNodeContext {\n  scrollableKey?: string;\n  gapLabel?: string;\n  /**\n   * 排版模式下，不同 line 内的 span 可能重叠，需要增加 lineId 标识以避免被识别为同一行\n   */\n  lineId?: string;\n  /**\n   * 当前节点下叶子节点(leaf or void)是否只有一个\n   */\n  onlyLeafChild?: boolean;\n}\n\nexport type TraverseNodeHandler = (decesdant: HTMLElement, context?: TraverseNodeContext) => {\n  stopTraverse: boolean;\n  context?: TraverseNodeContext;\n};\n\ninterface TraverseOptions {\n  /**\n   * start block DOM 的 Path：自顶向下排列\n   */\n  startPath: HTMLElement[];\n  /**\n   * end block DOM 的 Path：自顶向下排列\n   */\n  endPath: HTMLElement[];\n  /**\n   * 当前节点的 DOM Path\n   */\n  rootPath: HTMLElement[];\n  /**\n   * 是否已遍历到 start block DOM\n   */\n  isStarted: boolean;\n  /**\n   * 是否已遍历到 end block DOM\n   */\n  isEnded: boolean;\n}\n\nexport function traverseDOMTree(\n  root: HTMLElement,\n  callback: TraverseNodeHandler,\n  parentContext: TraverseNodeContext = {},\n  options: TraverseOptions,\n) {\n  let { isStarted, isEnded } = options;\n  const { stopTraverse, context } = callback(root, parentContext);\n  if (stopTraverse) {\n    return { isStarted, isEnded };\n  }\n  const childContext = merge({ ...parentContext }, context);\n  const { startPath, endPath, rootPath } = options;\n  for (const ele of root.children) {\n    const path = rootPath.concat(ele as HTMLElement);\n    const [,, commonStartPath] = getTraverseRootsByDOMPath(startPath, path);\n    const [,, commonEndPath] = getTraverseRootsByDOMPath(endPath, path);\n\n    // 未遍历到 start dom 且在遍历 start dom 的祖先节点\n    if (!isStarted && commonStartPath.length === path.length) {\n      const started = commonStartPath.length === startPath.length;\n      const newOpt = traverseDOMTree(\n        ele as HTMLElement,\n        callback,\n        childContext,\n        {\n          startPath,\n          endPath,\n          rootPath: path,\n          isStarted: started,\n          isEnded,\n        },\n      );\n      isStarted = newOpt.isStarted;\n      isEnded = newOpt.isEnded;\n    } else if (isStarted && (!isEnded || commonEndPath.length === endPath.length)) {\n      // 已到过 start dom 且未遍历完 end dom tree\n      const ended = commonEndPath.length === endPath.length;\n      const newOpt = traverseDOMTree(\n        ele as HTMLElement,\n        callback,\n        childContext,\n        {\n          startPath,\n          endPath,\n          rootPath: path,\n          isStarted,\n          isEnded: ended,\n        },\n      );\n      isStarted = newOpt.isStarted;\n      isEnded = newOpt.isEnded;\n    } else if (isEnded && commonEndPath.length < endPath.length){\n      // 已遍历完 end dom tree\n      break;\n    }\n  }\n  return { isStarted, isEnded };\n}\n\n/**\n * 情况一：startAncestor, endAncestor 为相同节点\n * startAncestor/endAncestor/commonPath\n *                / \\\n *               /   \\\n *             void  block\n *                     /\\\n *                    /  \\\n *                 leaf  leaf\n *\n * 情况二：startAncestor, endAncestor 为兄弟节点\n *             commonPath\n *             /    |    \\\n *            /     |     \\\n *  startAncestor  ...  endAncestor\n *     / \\               /    \\\n *    /   \\             /      \\\n * void    block      block     block\n *          /\\         /\\        /\\\n *         /  \\       /  \\      /  \\\n *      leaf  leaf leaf  leaf leaf leaf\n * (startPath)              (endPath)\n *\n * 情况三：startAncestor, endAncestor 为兄弟节点，且 startPath = startAncestor or endPath = endAncestor\n *             commonPath\n *             /    |    \\\n *            /     |     \\\n *  startAncestor  ...  endAncestor\n * (startPath/void)       /    \\\n *                       /      \\\n *                     block     block\n *                      / \\       / \\\n *                     /   \\     /   \\\n *                   leaf  leaf leaf leaf\n *                                 (endPath)\n */\nexport function traverseDOMForest(\n  startPath: HTMLElement[],\n  endPath: HTMLElement[],\n  callback: TraverseNodeHandler,\n) {\n  const [startAncestor, endAncestor, commonPath] = getTraverseRootsByDOMPath(startPath, endPath);\n\n  let root: HTMLElement | null = commonPath.length === startPath.length ? startPath[startPath.length - 1] : startAncestor;\n  let { isStarted, isEnded } = {\n    isStarted: commonPath.length === startPath.length,\n    isEnded: commonPath.length === endPath.length,\n  };\n  while (root) {\n    const opt = traverseDOMTree(\n      root,\n      callback,\n      {},\n      {\n        startPath,\n        endPath,\n        rootPath: [...commonPath, root],\n        isStarted: isStarted || (commonPath.length + 1 === startPath.length && root === startPath[startPath.length - 1]),\n        isEnded : isEnded || (commonPath.length + 1 === endPath.length && root === endPath[endPath.length - 1]),\n      },\n    );\n    isStarted = opt.isStarted;\n    isEnded = opt.isEnded;\n    if (root === endAncestor) {\n      break;\n    }\n    root = root.nextElementSibling as (HTMLElement | null);\n  }\n}\n","import { isRectOnSameLineOfRect } from '../../../utils/dom/caretRangeFromTargetAndCoord';\nimport { mergeRects } from '../../../utils/dom/optimizeRectsToFitLineHeight';\n\nexport interface Rect {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport interface DOMRectWithLine extends DOMRect {\n  lineId?: string;\n}\n\ninterface LineSize {\n  top: number;\n  bottom: number;\n}\n\n// 复用选区定位逻辑中对同一行的判断来进行分行\nconst isOverlapped = (a: LineSize, b: LineSize) => {\n  return isRectOnSameLineOfRect({\n    ...a,\n    height: a.bottom - a.top,\n  }, {\n    ...b,\n    height: b.bottom - b.top,\n  });\n};\n\nconst getMaxLineSize = (a: LineSize, b: LineSize) => ({\n  top: Math.min(a.top, b.top),\n  bottom: Math.max(a.bottom, b.bottom),\n});\n\n// 扩展行高，填充行之间的空隙\nfunction extendToFillBetweenLines(lines: LineSize[], startRects: LineSize[] = [], endRects: LineSize[] = []) {\n  const length = lines.length;\n  if (length === 0) {\n    return [];\n  }\n  let first = lines[0];\n  let last = lines[length - 1];\n  // 用选区 start 所在 block 的 rects 扩展第一行的高度\n  for (const rect of startRects) {\n    if (rect && isOverlapped(rect, first)) {\n      first = getMaxLineSize(rect, first);\n    }\n  }\n  // 用选区 end 所在 block 的 rects 扩展最后一行的高度\n  for (const rect of endRects) {\n    if (rect && isOverlapped(rect, last)) {\n      last = getMaxLineSize(rect, last);\n    }\n  }\n\n  const filled = [first, ...lines.slice(1, length - 1), last];\n\n  for (let i = 1; i < length; i++) {\n    const prev = filled[i - 1];\n    const now = filled[i];\n    const margin = now.top - prev.bottom;\n    prev.bottom += margin / 2;\n    now.top -= margin / 2;\n  }\n  return filled;\n}\n\nfunction splitRectsIntoLines(rects: DOMRectWithLine[]): [DOMRectWithLine[][], LineSize[]] {\n  // 将 rects 以从上到下、从左到右排序 - O(NlogN)\n  const sortedRects = rects.filter((v) => v.width).sort((a, b) => (a.top - b.top) || (a.left - b.left));\n  const lines: DOMRectWithLine[][] = [];\n  const lineSizes: LineSize[] = [];\n  // 将 sortedRects 按顺序归纳到每一行中，并记录每行的尺寸 - O(N)\n  let currentIndex = 0;\n  sortedRects.forEach((rect) => {\n    if (lines.length === 0) {\n      lines.push([rect]);\n      lineSizes.push({ top: rect.top, bottom: rect.bottom });\n      return;\n    }\n\n    // 新的一行\n    if (!isOverlapped(rect, lineSizes[currentIndex]) || rect.lineId !== lines[currentIndex][0].lineId) {\n      lines.push([rect]);\n      lineSizes.push({ top: rect.top, bottom: rect.bottom });\n      currentIndex += 1;\n      return;\n    }\n    // 属于当前行\n    lines[currentIndex].push(rect);\n    lineSizes[currentIndex] = getMaxLineSize(rect, lineSizes[currentIndex]);\n  });\n  return [lines, lineSizes];\n}\n\nexport function antiAliasingRects(rects: DOMRectWithLine[], startRects: DOMRect[] = [], endRects: DOMRect[] = []) {\n  // 将 rects 以从上到下、从左到右排序，并记录每行的尺寸 - O(NlogN)（N 为 rect 个数）\n  const [lines, lineSizes] = splitRectsIntoLines(rects);\n  const startSizes = extendToFillBetweenLines(splitRectsIntoLines(startRects)[1]);\n  const endSizes = extendToFillBetweenLines(splitRectsIntoLines(endRects)[1]);\n\n  // 填充行之间的空隙：获得每行填充后的尺寸 - O(M)（M 为行数）\n  const filledSizes = extendToFillBetweenLines(lineSizes, startSizes, endSizes);\n\n  // 填充行之间的空隙：将 rects 更新为填充后的尺寸并合并相邻的 - ~O(N)\n  const result: Rect[] = [];\n  lines.forEach((lineRects, index) => {\n    const top = filledSizes[index].top;\n    const height = filledSizes[index].bottom - top;\n    const fitted = lineRects.map((rect) => ({\n      top,\n      height,\n      left: rect.left,\n      width: rect.width,\n    }));\n    const merged = mergeRects(fitted);\n    result.push(...merged);\n  });\n  return result;\n}","import { uniqueId } from 'lodash-es';\nimport Controller from '../../../controller';\nimport Selection from '../../../models/selection';\nimport { CANGJIE_SELECTION_EMPTY_WIDTH, Selector } from '../../../constants';\nimport { findDOMNodeSafely } from '../../../utils/dom/findDOMNode';\nimport Path from '../../../models/path';\nimport Document from '../../../models/document';\nimport { getRectsFromLeaf } from './getRectsFromLeaf';\nimport { traverseDOMForest, TraverseNodeHandler, traverseDOMTree, TraverseNodeContext } from './traverse';\nimport { antiAliasingRects, DOMRectWithLine, Rect } from './antiAliasingRects';\nimport { getDOMPath } from './dom';\n\nconst isEdgeSelectable = (dom: HTMLElement) => dom.getAttribute(Selector.edgeSelectable) === 'true';\nconst isLeaf = (dom: HTMLElement) => dom.getAttribute(Selector.leaf) === 'true';\nconst isVoid = (dom: HTMLElement) => dom.getAttribute(Selector.void) === 'true';\nconst isFloatInlineBox = (dom: HTMLElement) => dom.getAttribute('data-type') === 'float-inline-box';\nconst isFloatBlockBox = (dom: HTMLElement) => dom.getAttribute('data-type') === 'float-block-box';\nconst isLine = (dom: HTMLElement) => dom.getAttribute('data-type') === 'line';\n// const isGroupBlock = (dom: HTMLElement) => dom.getAttribute(Selector.groupBlock) === 'true';\nconst isPage = (dom: HTMLElement) => dom.getAttribute('data-type') === 'page';\nconst isTableCell = (dom: HTMLElement) => dom.getAttribute('data-type') === 'table-cell';\nconst isFullyContained = (key: string, voidElement: boolean, selection: Selection, document: Document) => {\n  const { start, end } = selection.sort(document);\n  const startPath = document.getPath(start.key);\n  const endPath = document.getPath(end.key);\n  const targetPath = document.getPath(key);\n  if (!startPath || !endPath || !targetPath) {\n    return false;\n  }\n\n  if (Path.isAncestor(targetPath, startPath) || Path.isAncestor(targetPath, endPath)) {\n    // eg. 目标节点为 [0, 1]，start/end 为 [0, 1, 0]\n    // => 目标节点若为 void 元素，则选区包含了目标\n    // => 目标节点若非 void，则选区未完全包含目标\n    return voidElement;\n  }\n\n  return document.isNodeInRange(key, selection);\n};\n\nexport const GlobalGroupKey = 'global-group';\nexport const DefaultGapLabel = 'default-gap-label';\n\nconst getGapLabel = (decesdant: HTMLElement) => {\n  const conditions = [\n    // isGroupBlock, // TODO FIXME: groupNodes 隔开的上下的全局段落，会被分组到一起做空隙填充，需要再对每个连续的全局区块单独命名\n    isPage,\n    isTableCell,\n    isFloatInlineBox, // 浮动元素单独为一组，不参与普通 Rect 的间隙填充逻辑\n    isFloatBlockBox, // eg. 首字下沉\n  ];\n  const shouldGap = conditions.find((cond) => cond(decesdant));\n  return shouldGap ? (decesdant.getAttribute(Selector.key) || DefaultGapLabel) : undefined;\n};\n\n/**\n * 判断当前节点的子节点中是否仅有一个 leaf/void 节点\n * @param decesdant\n * @returns\n */\nconst hasOnlyLeafChild = (decesdant: HTMLElement) => {\n  let count = 0;\n  const len = decesdant.children.length;\n  for (let i = 0; i < len; i++) {\n    if (isLeaf(decesdant.children[i] as HTMLElement) || isVoid(decesdant.children[i] as HTMLElement)) {\n      count++;\n    }\n    // perf: 找到超过 1 个符合要求的，就提前 return\n    if (count > 1) {\n      return false;\n    }\n  }\n  return count === 1;\n}\n\nconst addLineIdToRect = (rect: DOMRect, lineId?: string): DOMRectWithLine => {\n  return { ...(rect.toJSON ? rect.toJSON() : rect), lineId };\n}\n\nconst addToRectGroupWithGap = (rects: DOMRectWithLine[], target: RectGroupWithGap, context: TraverseNodeContext = {}) => {\n  const key = context.scrollableKey || GlobalGroupKey;\n  const label = context.gapLabel || DefaultGapLabel;\n  if (!target[key]) {\n    target[key] = {};\n  }\n  if (!target[key][label]) {\n    target[key][label] = [];\n  }\n  target[key][label].push(...rects);\n};\n\nexport type RectGroupWithGap = Record<string, Record<string, DOMRect[]>>;\nexport type RectGroup = Record<string, DOMRect[]>;\n\nexport function getRectsFromSelection(selection: Selection, contentDOM: HTMLElement, controller: Controller) {\n  const { document } = controller.value;\n  const { start, end } = selection.sort(document);\n  const startBlock = start.isEdgePoint() ? document.getNode(start.key) : document.getClosestBlock(start.key);\n  const endBlock = end.isEdgePoint() ? document.getNode(end.key) : document.getClosestBlock(end.key);\n  const startPath = document.getPath(start.key);\n  const endPath = document.getPath(end.key);\n  const startBlockPath = startBlock && document.getPath(startBlock.key);\n  const endBlockPath = endBlock && document.getPath(endBlock.key);\n  if (!startBlock || !endBlock || !startPath || !endPath || !startBlockPath || !endBlockPath) {\n    throw new Error('start/end block or path is empty');\n  }\n\n  const selectionRects: RectGroupWithGap = {};\n  const startRects: RectGroupWithGap = {};\n  const endRects: RectGroupWithGap = {};\n\n  // 遍历过程中的 DOM 节点处理逻辑\n  const traverseHandler: TraverseNodeHandler = (decesdant, context = {}) => {\n    const domKey = decesdant.getAttribute(Selector.key);\n    if (!domKey) {\n      return { stopTraverse: false };\n    }\n\n    const voidDOM = isVoid(decesdant);\n    const leafDOM = isLeaf(decesdant);\n    const lineDOM = isLine(decesdant);\n    const edgeSelectableDOM = isEdgeSelectable(decesdant);\n\n    // 记录 start/end 所在 block 的所有 rects，用于后续修正选区边界的 rect\n    if (voidDOM || leafDOM) {\n      const path = document.getPath(domKey.split(':')[0]) || [];\n      if (Path.isAncestor(startBlockPath, path)) {\n        addToRectGroupWithGap(\n          Array.from(decesdant.getClientRects()).map((v) => addLineIdToRect(v, context.lineId)),\n          startRects,\n          context\n        );\n      }\n      if (Path.isAncestor(endBlockPath, path)) {\n        addToRectGroupWithGap(\n          Array.from(decesdant.getClientRects()).map((v) => addLineIdToRect(v, context.lineId)),\n          endRects,\n          context\n        );\n      }\n    }\n\n    if ((edgeSelectableDOM || voidDOM)) {\n      if (isFullyContained(domKey!, voidDOM, selection, document)) {\n        const rect = decesdant.getBoundingClientRect();\n        addToRectGroupWithGap([addLineIdToRect(rect, context.lineId)], selectionRects, context);\n        return { stopTraverse: true }; // 不再继续递归\n      }\n      if (voidDOM) {\n        return { stopTraverse: true };\n      }\n    }\n\n    if (leafDOM) {\n      let newRects = getRectsFromLeaf(decesdant, selection, document);\n      if (context.onlyLeafChild && newRects.length === 1 && newRects[0].width < 1) {\n        const { left, top, height } = newRects[0];\n        const width = CANGJIE_SELECTION_EMPTY_WIDTH;\n        newRects = [{ ...newRects[0].toJSON(), left, top, width, height }];\n      }\n\n      addToRectGroupWithGap(newRects.map((v) => addLineIdToRect(v, context.lineId)), selectionRects, context);\n\n      return { stopTraverse: true };\n    }\n\n    const gapLabel = getGapLabel(decesdant) || context.gapLabel;\n    return { stopTraverse: false, context: { gapLabel, lineId: lineDOM ? domKey : undefined, onlyLeafChild: hasOnlyLeafChild(decesdant) } };\n  };\n\n  const commonAncestorNode = document.getNodeByPath(Path.common(startPath, endPath));\n  if (!commonAncestorNode) {\n    throw new Error('commonAncestorNode is empty');\n  }\n  const commonAncestor = (commonAncestorNode.isElement() ? commonAncestorNode : document.getClosestBlock(commonAncestorNode.key)) || document;\n\n  // 由于 view 或 实际 DOM 树与 document 结构并非一致，所以通过查找 DOM 树上需遍历的子树根结点来做\n  let startBlockDOM = findDOMNodeSafely(startBlock.key, contentDOM);\n  let endBlockDOM = findDOMNodeSafely(endBlock.key, contentDOM);\n\n  // 分页模式下存在虚拟化，若找不到 DOM 则全量遍历已有 DOM\n  if (!startBlockDOM || !endBlockDOM) {\n    const commonAncestorDOM = findDOMNodeSafely(commonAncestor.key, contentDOM);\n    startBlockDOM = startBlockDOM || commonAncestorDOM?.firstElementChild as HTMLElement;\n    endBlockDOM = endBlockDOM || commonAncestorDOM?.lastElementChild as HTMLElement;\n  }\n  // 仍找不到则报错\n  if (!startBlockDOM || !endBlockDOM) {\n    throw new Error('start/end block DOM is empty');\n  }\n\n  const startDOMPath = getDOMPath(startBlockDOM, contentDOM);\n  const endDOMPath = getDOMPath(endBlockDOM, contentDOM);\n\n  // 以遍历森林的方式遍历 [startDOMPath, endDOMPath] 之间的节点\n  traverseDOMForest(startDOMPath, endDOMPath, traverseHandler);\n\n  const res: Rect[] = [];\n  Object.keys(selectionRects).forEach((groupKey) => {\n    // res[groupKey] = [];\n    Object.keys(selectionRects[groupKey]).forEach((gapLabel) => {\n      // TO BE SOLVED: 1. 存在上下 margin 的 block 元素在跨 block 选区时高度会不稳定\n      const lines = antiAliasingRects(selectionRects[groupKey][gapLabel], startRects[groupKey]?.[gapLabel], endRects[groupKey]?.[gapLabel]);\n      res.push(...lines);\n    });\n  });\n\n  return res;\n}\n","import Controller from '../../../controller';\nimport Node from '../../../models/node';\nimport Element from '../../../models/element';\nimport Document from '../../../models/document';\nimport Leaf from '../../../models/leaf';\nimport { TextPoint } from '../../../models/point';\nimport { CURSOR_WIDTH } from '../../../constants';\nimport { getBgColor, getCaretColor } from '../../../utils/caretColor';\nimport { findCaretPosition, findDOMNodeSafely } from '../../../utils/dom';\nimport { Appearance, SelectionAppearances } from '../renderer';\nimport { getRectsFromSelection } from './getRectsFromSelection';\nimport { SelectionWrapperMap } from '../types';\nimport { cacheLocalCaret } from '../../../utils/dom/localCaretPos';\n\nfunction addToResult(\n  result: SelectionAppearances,\n  wrapper: HTMLDivElement,\n  data: Appearance,\n) {\n  if (!result.get(wrapper)) {\n    result.set(wrapper, []);\n  }\n  const targetGroup = result.get(wrapper)!;\n  targetGroup.push(data)\n}\n\nconst getComposingLeaf = (node: Node | null) => (\n  node?.isText()\n    ? node.leaves.find((leaf) =>\n      leaf.marks.some((mark) => mark.type === 'cangjieComposing'),\n    )\n    : undefined\n);\n\n/**\n * 输入法输入时，找到光标实际所在的 point\n *\n * @param anchor\n * @param composingLen\n * @param document 包含 composing mark 的 document\n * @returns\n * - composing leaf 未跨 Text 时，修正 offset 到 anchor.offset + composingLen\n * - composing leaf 跨 Text 时，修正到 composing 末尾所在的 Text 内，offset 为最后一个 Text 内的 composing 部分长度\n */\nexport const findComposingPoint = (anchor: TextPoint, composingLen: number, document: Document) => {\n  let len = 0;\n  let composingEndLeaf: Leaf | undefined;\n  const startText = document.getNode(anchor.key);\n  let textNode = startText;\n\n  // 分页模式下，document 上存在 composing mark，则继续向后找到 composing 末尾；否则使用 startText 即可\n  if (getComposingLeaf(startText)) {\n    const pointAncestor: Element | null = document.getFurthestOnlyChildAncestor(anchor.key);\n    while (len < composingLen && textNode?.isText()) {\n      composingEndLeaf = getComposingLeaf(textNode);\n      len += composingEndLeaf?.text.length || 0;\n      if (len < composingLen) {\n        textNode = pointAncestor ? pointAncestor.getNextText(textNode.key) : null;\n      }\n    }\n  }\n\n  if (textNode) {\n    return TextPoint.create({\n      key: textNode.key,\n      offset: (startText !== textNode && composingEndLeaf) ? composingEndLeaf.text.length : anchor.offset + composingLen,\n    });\n  }\n\n  // 兜底使用原值\n  return anchor;\n}\n\nexport function getSelectionAppearance(\n  selectionWrapperMap: SelectionWrapperMap,\n  zoom: number,\n  isRemote: boolean,\n  contentRef: React.MutableRefObject<HTMLDivElement | null>,\n  controller: Controller,\n): SelectionAppearances {\n  const result: SelectionAppearances = new Map();\n  if (!contentRef.current) {\n    return result;\n  }\n\n  if (controller.shouldHideSelectionOnBlur() && controller.value.isBlurred) {\n    return result;\n  }\n\n  const wrapperRectCache = new WeakMap<HTMLDivElement, DOMRect>();\n  const composingLen = controller.value.composing.length;\n\n  selectionWrapperMap.forEach(({ wrapper, originSelection }, selection) => {\n    if (!wrapper) {\n      return;\n    }\n\n    const offsetRect = wrapperRectCache.get(wrapper) || wrapper.getBoundingClientRect();\n    wrapperRectCache.set(wrapper, offsetRect);\n\n    if (originSelection.isCollapsed) {\n      const preferredEdge = originSelection.isHanging ? 'start' : 'end';\n      let point = selection.anchor;\n      if (!isRemote && point.isTextPoint() && composingLen) {\n        point = findComposingPoint(point, composingLen, controller.value.document);\n      }\n\n      let targetBlockDOM: HTMLElement | null | undefined = null;\n      try {\n        // 存在 selection 先更新而 document 后更新，导致找不到 block 的情况，需要 catch 住，下次更新即可正常渲染\n        const block = controller.value.document.getClosestBlockFromPoint(point.key);\n        targetBlockDOM = block ? findDOMNodeSafely(block.key, contentRef.current || undefined) : null;\n      } catch (e) {\n        // ignore\n      }\n      if (!targetBlockDOM) {\n        return;\n      }\n\n      // 计算位置\n      const { clientLeft, clientTop, height } = findCaretPosition(point, preferredEdge, targetBlockDOM, undefined, zoom) || {};\n      if (typeof clientLeft === 'undefined' || typeof clientTop === 'undefined' || typeof height === 'undefined') {\n        return;\n      }\n\n      const correctedPosition = {\n        top: clientTop - offsetRect.top / zoom,\n        left: clientLeft - offsetRect.left / zoom,\n        height,\n      };\n      if (!isRemote) {\n        cacheLocalCaret(controller, correctedPosition, wrapper);\n      }\n\n      let color: string | undefined;\n      // 为本地光标计算颜色\n      if (!isRemote) {\n        const backgroundColor = getBgColor(targetBlockDOM, { top: clientTop, left: clientLeft, height }, point);\n        color = getCaretColor(backgroundColor);\n      }\n\n      const data: Appearance = {\n        isRemote,\n        color,\n        selection: originSelection,\n        appearance: correctedPosition,\n      };\n      addToResult(result, wrapper, data);\n      return;\n    }\n\n    try {\n      const rects = getRectsFromSelection(selection, contentRef.current!, controller);\n      const data: Appearance = {\n        isRemote,\n        selection: originSelection,\n        appearance: rects.map((rc) => ({\n          top: (rc.top - offsetRect.top) / zoom,\n          left: (rc.left - offsetRect.left) / zoom,\n          height: rc.height / zoom,\n          width: rc.width / zoom,\n        })),\n      }\n      addToResult(result, wrapper, data);\n    } catch (err) {\n      console.warn('[Selection] Failed to get rects from expanded selection', err);\n    }\n\n  });\n\n  return result;\n}","import React from 'react';\nimport root from 'react-shadow';\n\nlet nativeSupport = false\n// 仓颉代码会执行在 node 里，这里做一下防护\nif (typeof Element !== 'undefined' && typeof Element.prototype !== 'undefined') {\n  nativeSupport = 'attachShadow' in Element.prototype && typeof Element.prototype.attachShadow === 'function';\n}\n\ninterface ShadowDomProps {\n  attributes?: Record<string, any>;\n}\n\nexport function ShadowRoot(props: React.PropsWithChildren<ShadowDomProps>) {\n  if (!nativeSupport) {\n    return (\n      <div {...props.attributes}>\n        {props.children}\n      </div>\n    );\n  }\n  return (\n    <root.div {...props.attributes}>\n      {props.children}\n    </root.div>\n  );\n}\n","import React from 'react';\nimport { ShadowRoot } from '../shadowDom';\nimport { Selector } from '../../constants';\n\ntype SelectionSlotProps = React.PropsWithChildren<{\n  // 属于哪个节点的 selection\n  layerFor: string;\n}>;\n\nconst slotStyle: React.CSSProperties = {\n  position: 'absolute',\n  zIndex: 10,\n  // 相对于顶部定位，避免折叠/展开等操作引起的选区定位不稳定\n  top: 0,\n};\n\nexport const SelectionSlot = React.forwardRef<HTMLDivElement, SelectionSlotProps>((props, slotRef) => {\n  return (\n    <ShadowRoot attributes={{\n      [Selector.selectionLayer]: props.layerFor,\n      'data-testid': 'cangjie-selection-layer',\n      style: { position: 'absolute', left: 0, top: 0 }\n    }}>\n      <div ref={slotRef} style={slotStyle} />\n      {props.children}\n    </ShadowRoot>\n  );\n});\n","import Controller from '../../../controller';\nimport Selection from '../../../models/selection';\nimport { SelectionWrapperMap } from '../types';\n\nexport function splitSelectionAndGetWrapper(\n  controller: Controller,\n  selection: Selection,\n  globalRef: React.MutableRefObject<HTMLDivElement | null>\n) {\n  const wrappers: SelectionWrapperMap = controller.query('getSelectionContainers', {\n    selection: selection,\n    defaultWrapper: globalRef.current!\n  }) || new Map();\n  if (wrappers.size < 1) {\n    wrappers.set(selection, { wrapper: globalRef.current!, originSelection: selection });\n    return wrappers;\n  }\n  const res: SelectionWrapperMap = new Map();\n  wrappers.forEach((v, k) => {\n    res.set(k, { ...v, wrapper: v.wrapper || globalRef.current! });\n  });\n  return res;\n}","import React from 'react';\nimport Controller from '../../../controller';\nimport Selection from '../../../models/selection';\nimport { splitSelectionAndGetWrapper } from './splitSelectionAndGetWrapper';\nimport { SelectionWrapperMap } from '../types';\nimport { getCroppedSelection } from '../../../utils/selection';\n\n/**\n * 计算选区应该分布的根节点\n *\n * A. 对于单个原始 selection\n * 1. 若为 collapsed，则返回值的 key 为该 selection，value 为它应渲染目标宿主节点 + originSelection\n * 2. 若为 expanded，则返回值 key 为该 selection 按需切割的子 selection，value 为其对应渲染的目标宿主节点 + originSelection\n *\n * B. remoteSelections 会分别将每一项按上面的规则分割并聚合到一个 Map 中\n *\n * @param controller Controller\n * @param globalWrapperRef 渲染在全局的根节点\n * @returns [local, remotes]: [SelectionWrapperMap, SelectionWrapperMap]\n */\nexport function useSelectionWrappers(controller: Controller, globalWrapperRef: React.MutableRefObject<HTMLDivElement | null>) {\n  const { remoteSelections, selection, document } = controller.value;\n  const prevSelection = React.useRef<Selection | null>(null);\n  const [visibles, setVisibles] = React.useState<string[]>([]);\n\n  const getWrappersBySelection = React.useCallback((sel: Selection) => {\n    const wrappers = splitSelectionAndGetWrapper(controller, sel, globalWrapperRef);\n    return wrappers;\n  }, [document, controller]);\n\n  const local: SelectionWrapperMap = React.useMemo(() => {\n    const isHideSelection = controller.query(\n      'isHideSelection',\n      { selection },\n    );\n\n    const croppedSelection = getCroppedSelection(controller, selection, controller.visibleBlocks);\n\n    // 不显示本地选区时 or 首次渲染 globalWrapperRef 仍为空时\n    if (isHideSelection || !globalWrapperRef.current || !croppedSelection) {\n      return new Map();\n    }\n\n    return getWrappersBySelection(croppedSelection);\n    // 首次渲染出 globalWrapperRef 后，使其重新计算一下以得到选区 appearance\n  }, [selection, document, controller, globalWrapperRef.current, visibles]);\n\n  const remotes = React.useMemo(() => {\n    const map: SelectionWrapperMap = new Map();\n    remoteSelections.forEach((sel) => {\n      const croppedSelection = getCroppedSelection(controller, sel, controller.visibleBlocks);\n      if (croppedSelection) {\n        const wrappers = getWrappersBySelection(croppedSelection);\n        wrappers.forEach((v, key) =>\n          map.set(key, v)\n        );\n      }\n    });\n    return map;\n  }, [remoteSelections, document, controller, visibles]);\n\n  React.useEffect(() => {\n    prevSelection.current = selection;\n  }, [selection, document]);\n\n  React.useEffect(() => {\n    const sub = controller.visibles$.subscribe(visibles => {\n      setVisibles(visibles);\n    });\n    return () => {\n      sub.unsubscribe();\n    }\n  }, [controller]);\n\n  return [local, remotes];\n}\n","import React from 'react';\nimport equal from 'fast-deep-equal';\nimport { throttle } from 'lodash-es';\nimport Controller from '../../controller';\nimport Selection from '../../models/selection';\nimport Node from '../../models/node';\nimport { useSelectionDataAtTheStartOfNextFrame } from '../../hooks/useSelectionData';\nimport { useZoom } from '../../hooks/useZoom';\nimport { useResumePosition } from '../../hooks/useResumePosition';\nimport { useScrollBySelection } from '../../hooks/useScrollBySelection';\nimport SelectionRenderer, { SelectionAppearances } from './renderer';\nimport { getSelectionAppearance } from './utils/getSelectionAppearance';\nimport { SelectionSlot } from './slot';\nimport { useSelectionWrappers } from './utils/useSelectionWrappers';\nimport {\n  useInputingHots,\n  useSelectingHotsAtTheStartOfNextFrame,\n} from '../../hooks/useHots';\n\nexport { SelectionSlot } from './slot';\nexport type { SelectionWrapperMap, CaretAppearance } from './types';\n\nconst THROTTLE_TIME_RESIZE = 300;\n\ninterface SelectionLayerProps {\n  controller: Controller;\n  // content 的 dom ref\n  contentRef: React.MutableRefObject<HTMLDivElement | null>;\n  scrollableContainerRef: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nconst SelectionLayer = (props: SelectionLayerProps) => {\n  const { controller, contentRef, scrollableContainerRef } = props;\n  const {\n    composing,\n    isFocused,\n    selection,\n    document,\n    injections,\n    decorations,\n  } = controller.value;\n\n  const zoom = useZoom() || 1;\n  const [_, forceUpdate] = React.useReducer((c) => c + 1, 0);\n  const [resizeFlag, setResizeFlag] = React.useState(0);\n  const globalWrapperRef = React.useRef<HTMLDivElement | null>(null);\n  const isUnmountedRef = React.useRef(false);\n\n  // 本地选区外观\n  const [local, setLocal] = React.useState<SelectionAppearances>(new Map());\n  // 远程选区外观\n  const [remotes, setRemotes] = React.useState<SelectionAppearances>(new Map());\n\n  const localDepsRef = React.useRef<{\n    composing: string;\n    selection: Selection;\n    node: Node | null;\n  }>({\n    composing,\n    selection,\n    node: null,\n  });\n\n  React.useEffect(() => {\n    isUnmountedRef.current = false;\n    return () => {\n      isUnmountedRef.current = true;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (!contentRef.current) {\n      return undefined;\n    }\n    const resizeUpdator = throttle(() => {\n      if (controller.shouldHideSelectionOnBlur() && controller.value.isBlurred) {\n        return;\n      }\n      setResizeFlag((val) => (val + 1) % 2); // 这里无需读取真实的 size 造成 reflow，只需要可以感知到变化即可\n    }, THROTTLE_TIME_RESIZE);\n\n    if (typeof ResizeObserver !== 'undefined') {\n      const observer = new ResizeObserver(resizeUpdator);\n      observer.observe(contentRef.current);\n      return () => {\n        resizeUpdator.cancel();\n        if (contentRef.current) {\n          observer.unobserve(contentRef.current);\n        }\n      };\n    }\n\n    window.addEventListener('resize', resizeUpdator);\n    return () => {\n      resizeUpdator.cancel();\n      window.removeEventListener('resize', resizeUpdator);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    localDepsRef.current.node = selection.isCollapsed\n      ? document.getPreviousNode(selection.anchor.key)\n      : null;\n  }, [selection, document]);\n\n  const shouldForceUpdate = React.useCallback(\n    (range: Selection) => {\n      if (\n        equal(range, selection) &&\n        controller.value.composing === localDepsRef.current.composing\n      ) {\n        // 仅 focus 发生变化时，需要及时 rerender 选区\n        if (isFocused !== controller.value.isFocused) {\n          return true;\n        }\n\n        // BACKGROUND: 在文本型链接的最后 delete 时，链接文字变少了，但选区不会发生变化\n        // 所以需要在这种情况下 force re-render\n        if (range.isCollapsed) {\n          const prevNode = controller.value.document.getPreviousNode(\n            range.anchor.key,\n          );\n          if (!equal(prevNode, localDepsRef.current.node)) {\n            return true;\n          }\n        }\n        return false;\n      }\n      return true;\n    },\n    [controller, isFocused, selection],\n  );\n\n  const selectionUpdator = React.useCallback(\n    ({ range }: { range: Selection }) => {\n      if (shouldForceUpdate(range)) {\n        localDepsRef.current.composing = controller.value.composing;\n        localDepsRef.current.selection = range;\n        forceUpdate();\n      }\n    },\n    [controller, shouldForceUpdate],\n  );\n\n  const onHots = React.useCallback(() => {\n    selectionUpdator({ range: controller.value.selection });\n  }, [controller, selectionUpdator]);\n\n  const onInputingHots = React.useCallback(() => {\n    // 保证节点完成渲染之后才计算和绘制选区\n    Promise.resolve().then(onHots);\n  }, [onHots]);\n\n  useSelectionDataAtTheStartOfNextFrame(controller.selectionData$, null, selectionUpdator, []);\n  useSelectingHotsAtTheStartOfNextFrame(controller, onHots);\n  useInputingHots(controller, onInputingHots);\n\n  // 根据本地选区变化滚动页面\n  useScrollBySelection(scrollableContainerRef, contentRef, controller);\n\n  useResumePosition(scrollableContainerRef, contentRef, controller);\n\n  // 计算选区渲染所分布的根节点\n  const [localWrappersMap, remoteWrappersMap] = useSelectionWrappers(\n    controller,\n    globalWrapperRef,\n  );\n\n  // 选区需保证 node 渲染完成后再更新\n  React.useLayoutEffect(() => {\n    const appearance = getSelectionAppearance(\n      localWrappersMap,\n      zoom,\n      false,\n      contentRef,\n      controller,\n    );\n    setLocal(appearance);\n  }, [\n    localWrappersMap,\n    composing,\n    zoom,\n    // BACKGROUND: https://aone.alibaba-inc.com/v2/project/897543/bug/41787750#\n    isFocused,\n    controller,\n    resizeFlag,\n    injections,\n    decorations,\n  ]);\n\n  React.useLayoutEffect(() => {\n    const appearance = getSelectionAppearance(\n      remoteWrappersMap,\n      zoom,\n      true,\n      contentRef,\n      controller,\n    );\n    setRemotes(appearance);\n  }, [\n    remoteWrappersMap,\n    controller,\n    zoom,\n    isFocused,\n    resizeFlag,\n    document,\n    injections,\n    decorations,\n  ]);\n\n  return (\n    <SelectionSlot ref={globalWrapperRef} layerFor=\"global\">\n      <SelectionRenderer\n        appearances={local}\n        isFocused={isFocused}\n        controller={controller}\n      />\n      <SelectionRenderer\n        appearances={remotes}\n        isFocused={isFocused}\n        controller={controller}\n      />\n    </SelectionSlot>\n  );\n};\n\nexport default SelectionLayer;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ControllerContext } from '../controller';\nimport { CONTROLLER_TO_KEY_DOM } from '../utils/dom/getElementByCangjieKey';\n\nexport default function useCangjieKeyBindingRef<T extends HTMLElement>(key: string) {\n  const ref = React.useRef<T>(null);\n  const { controller } = React.useContext(ControllerContext)!;\n  React.useLayoutEffect(() => {\n    if (!CONTROLLER_TO_KEY_DOM.has(controller)) {\n      CONTROLLER_TO_KEY_DOM.set(controller, new Map());\n    }\n    const KEY_DOM = CONTROLLER_TO_KEY_DOM.get(controller)!;\n    if (ref.current) {\n      const dom = ReactDOM.findDOMNode(ref.current) as HTMLElement;\n      KEY_DOM.set(key, dom);\n    } else {\n      KEY_DOM.delete(key);\n    }\n  });\n  return ref;\n}\n","import { GROUP_COLLAPSED_KEY } from '../../constants';\nimport Controller from '../../controller';\nimport { Group, GroupWithKey } from '../../interfaces/group';\nimport Element from '../../models/element';\n\n/**\n * 是否分组被折叠 \n * @param group \n * @returns \n */\nexport function isGroupCollapsed(group: Group) {\n  return group.data[GROUP_COLLAPSED_KEY];\n}\n\n/**\n * 是否分组为空 \n * @param controller \n * @param group \n * @returns \n */\nexport function isGroupEmpty(controller: Controller, group: GroupWithKey) {\n  const { document } = controller.value;\n  const next = document.getNextSibling(group.key);\n  if (next?.isElement() && controller.query('isElementInGroup', next, group) !== false) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @packageDocumentation\n * @ignore\n */\nimport React from 'react';\nimport RenderNodeProps from '../interfaces/renderNodeProps';\nimport Block from '../models/block';\nimport { useNodeStyle } from '../hooks/useStyle';\nimport { Selector } from '../constants';\nimport useGroupData from '../hooks/useGroupData';\nimport { isGroupCollapsed } from '../plugins/group/utils';\nimport { useUserData } from '../hooks/useUserData';\n\nconst blockStyle: React.CSSProperties = {\n  position: 'relative',\n};\n\nconst inlineStyle: React.CSSProperties = {\n  ...blockStyle,\n  display: 'inline-block',\n  textIndent: 'initial',\n  // 设置行高后，使void 节点的高度不变\n  lineHeight: 'initial',\n  maxWidth: '100%',\n};\n\nconst voidStyle: React.CSSProperties = {\n  ...inlineStyle,\n};\n\nconst VoidInlineWrapper: React.FC<Omit<RenderNodeProps, 'children'>> = ({\n  attributes,\n  children,\n}) => {\n  return (\n    <span\n      data-cangjie-void\n      style={voidStyle}\n      {...attributes}\n    >\n      <span style={inlineStyle} >\n        {children}\n      </span>\n    </span>\n  );\n};\n\nconst VoidBlockWrapper: React.FC<Omit<RenderNodeProps, 'children'>> = ({\n  attributes,\n  node,\n  children,\n  controller,\n  visible,\n}) => {\n  const seletableAttrs = { [Selector.edgeSelectable]: true };\n  // @ts-ignore\n  const fold = Block.isBlock(node) ? (useUserData(node, 'fold') || false): false;\n  const hidden = useGroupData<boolean>(\n    node,\n    (groups) => {\n      return groups.some(\n        (group) => isGroupCollapsed(group) && group.key !== node.key,\n      );\n    },\n    fold,\n  );\n  // 合并虚拟化的 visible 与 flattenGroup 的 visible\n  const finalVisible = visible !== false && !hidden;\n  const nodeStyle = useNodeStyle(controller, node, finalVisible);\n\n  return (\n    <div\n      data-cangjie-void\n      data-block-uuid={(node as Block).data.uuid}\n      style={nodeStyle}\n      {...attributes}\n      {...seletableAttrs}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst VoidWrapper: React.FC<Omit<RenderNodeProps, 'children'>> = (props) => {\n  const isBlock = Block.isBlock(props.node);\n  return (\n    isBlock ? (\n      <VoidBlockWrapper {...props} />\n    ) : (\n      <VoidInlineWrapper {...props} />\n    )\n  );\n};\n\nexport default VoidWrapper;\n","import * as React from 'react';\nimport useCangjieKeyBindingRef from '../hooks/useCangjieKeyBindingRef';\n\nexport interface LeafComponentProps {\n  leafKey: string;\n  style?: React.CSSProperties;\n}\n\nconst LeafComponent: React.FC<LeafComponentProps> = (props) => {\n  const { leafKey, style, children } = props;\n  const ref = useCangjieKeyBindingRef<HTMLSpanElement>(leafKey);\n\n  return (\n    <span\n      ref={ref}\n      data-cangjie-key={leafKey}\n      data-cangjie-leaf\n      data-cangjie-mark={props['data-cangjie-mark']}\n      style={style}\n      data-testid={leafKey}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport default LeafComponent;\n","import Element from '../models/element';\nimport Node from '../models/node';\nimport Path from '../models/path';\n\nexport function replaceNodeIntoElement(\n  origin: Element,\n  path: Path | null | undefined,\n  node: Node,\n) {\n  // invalid path\n  if (!path) {\n    return origin;\n  }\n\n  // path 指向自身\n  if (!path.length) {\n    return node;\n  }\n\n  const { nodes } = origin;\n  const offset = path[0];\n  let target: Node = node;\n  // 递归找到目标位置\n  if (path.length > 1) {\n    const parent = nodes[offset];\n    if (parent && parent.isElement()) {\n      target = replaceNodeIntoElement(parent, path.slice(1), node);\n    } else {\n      target = parent;\n    }\n  }\n  // 替换目标节点\n  if (\n    nodes[offset] &&\n    nodes[offset] !== target\n  ) {\n    const next = nodes.slice(0);\n    next[offset] = target;\n    return origin.set('nodes', next);\n  }\n  return origin;\n}\n","import { useEffect, useCallback } from 'react';\nimport { noop } from 'lodash-es';\nimport { Observable, Observer } from '../models/observable';\nimport Path from '../models/path';\nimport Node from '../models/node';\nimport Document from '../models/document';\nimport Block from '../models/block';\nimport Decoration from '../models/decoration';\nimport { TextPoint } from '../models/point';\nimport { InputData } from '../interfaces/input';\nimport Controller from '../controller';\nimport { replaceNodeIntoElement } from '../utils/replaceNodeIntoElement';\n\nexport interface PendingElements {\n  document: Document;\n  node: Node;\n}\n\nexport function useInputPending<T extends InputData>(\n  elements: PendingElements,\n  nodePath: Path,\n  controller: Controller,\n  enablePending: boolean | undefined,\n  pending$: Observable<T>,\n  updateElements: (elements: PendingElements) => void,\n) {\n  const { node, document } = elements;\n  // 根据最新 node，使用 toView 局部重算 view node\n  const pendingHandler: Observer<T> = useCallback((data) => {\n    const { startPath: textPath, startOffset, key: textKey } = data;\n    // 判断当前编辑的 text 节点是否在 node 中\n    const oldViewText = Block.isBlock(node) ? node.getNode(textKey) : null;\n    if (Block.isBlock(node) && oldViewText) {\n      // 获取最新 text 和缓存的 view data\n      const text = controller.value.document.getNodeByPath(textPath);\n      if (text && oldViewText) {\n        const viewData = controller.getViewData(oldViewText);\n        const { injections } = viewData;\n        // 推算出新的 decorations\n        const decorations = viewData.decorations.slice(0);\n        decorations.forEach((d, i) => {\n          if (Decoration.isDecoration(d)) {\n            const { key } = text;\n            const { start, end } = d;\n            if (start.key === key && end.key === key) {\n              const delta = text.text.length - oldViewText.text.length;\n              if (delta && startOffset <= start.offset) {\n                // 在 decoration 前面增删文字\n                const tmp = d.set(\n                  'start',\n                  TextPoint.create({ key, offset: start.offset + delta }),\n                );\n                decorations[i] = tmp.set(\n                  'end',\n                  TextPoint.create({ key, offset: end.offset + delta }),\n                );\n              } else if (delta && startOffset <= end.offset) {\n                // 在 decoration 里面增删文字\n                decorations[i] = d.set(\n                  'end',\n                  TextPoint.create({ key, offset: end.offset + delta }),\n                );\n              }\n            }\n          }\n        });\n\n        const viewText = controller.toView(text, decorations, injections);\n        // 替换 view node 中的 text 节点\n        let rPath: Path | null = textPath.slice(nodePath.length);\n        if (node.getNodeByPath(rPath)?.key !== viewText.key) {\n          rPath = node.getPath(viewText.key);\n        }\n        const viewNode = replaceNodeIntoElement(\n          node,\n          rPath,\n          viewText,\n        );\n        // 替换 view document 中的 node 节点\n        let dPath: Path | null = nodePath;\n        if (document.getNodeByPath(dPath)?.key !== viewNode.key) {\n          dPath = document.getPath(viewNode.key);\n        }\n        const documentView = replaceNodeIntoElement(document, dPath, viewNode) as Document;\n        updateElements({\n          node: viewNode,\n          document: documentView,\n        });\n      }\n    }\n  }, [controller, document, node, nodePath, updateElements]);\n\n  useEffect(() => {\n    // 只在 leaf block 监听 pending 流\n    if (Block.isLeafBlock(node) && enablePending) {\n      const sub = pending$.subscribe(pendingHandler);\n      return () => sub.unsubscribe();\n    }\n    return noop;\n  }, [\n    pending$,\n    pendingHandler,\n    node,\n    enablePending,\n  ]);\n}\n","import { useCallback, useReducer, useRef } from 'react';\nimport { Controller, Node, Document } from '..';\nimport { PendingType } from '../interfaces/controller';\nimport Block from '../models/block';\nimport { isSelectionInNode } from '../utils/selection';\nimport useHots from './useHots';\n\n/**\n * 开启热区时，使用热区视图模型\n * @param controller\n * @param viewNode\n * @param viewDocument\n * @returns\n */\nfunction useView<T extends Node>(\n  controller: Controller,\n  viewNode: T,\n  viewDocument: Document,\n  isSelected,\n) {\n  /**************************************************************************************\\\n  *                                                                                      *\n  *                                                                                      *\n  *         Render with hots$                                  Render with props         *\n  *                                                                                      *\n  *           +------------+                                     +------------+          *\n  *           |    hot$    |                                     |   props    |          *\n  *           |  +-------+ |                                     |            |          *\n  *           |  |  hot  | |                                     | +--------+ |          *\n  *           |  +-------+ |                                     | |document| |          *\n  *           |  +-------+ |             .-------.               | +--------+ |          *\n  *           |  |  hot  | |<--observe--( <Node/> )<---inject----|            |          *\n  *           |  +-------+ |             `-------'               | +--------+ |          *\n  *           |  +-------+ |                                     | |  node  | |          *\n  *           |  |  hot  | |                                     | +--------+ |          *\n  *           |  +-------+ |                                     |            |          *\n  *           +------------+                                     +------------+          *\n  *                  |                                                  |                *\n  *                  |                                                  |                *\n  *                  v                                                  v                *\n  *            .-----------.                                      .-----------.          *\n  *      +----( isViewHot?  )-----+                      +---Y---(  hasHots?   )--+      *\n  *      N     `-----------'      Y                      |        `-----------'   |      *\n  *      |                        |                      |                        |      *\n  *      v                        v                      v                        |      *\n  * +--------+            +--------------+         .-----------.                  |      *\n  * |        |            |              |   +----(isInsideHot? )                 |      *\n  * | silent |            |recalculateView|   |     `-----------'                  |      *\n  * |        |            |              |   |           |                        |      *\n  * +--------+            +--------------+   |           N                        N      *\n  *                               |          Y           v                        |      *\n  *                               v          |      +--------+                    |      *\n  *                      +------------------+|      |        |                    |      *\n  *                      | {node, document} ||      | silent |                    |      *\n  *                      +------------------+|      |        |                    |      *\n  *                                |         |      +--------+                    |      *\n  *                                v         v                                    |      *\n  *                             +------------------------+                        |      *\n  *                             |                        |                        |      *\n  *                             | render(node, document) |<-----------------------+      *\n  *                             |                        |                               *\n  *                             +------------------------+                               *\n  *                                                                                      *\n  \\**************************************************************************************/\n  const [, forceUpdate] = useReducer((c) => !c, false);\n  const selectedRef = useRef(isSelected);\n\n  const onHots = useCallback(() => {\n    if (controller.isViewHot(viewNode)) {\n      // 若正在框选节点，其选中态未发生变化，则不重渲\n      if (\n        controller.pendingType === PendingType.selection &&\n        controller.value.selection.isExpanded\n      ) {\n        const prevSelected = selectedRef.current;\n        const { node, document } = controller.getView(\n          viewNode,\n          viewDocument,\n          false,\n        );\n        selectedRef.current = isSelectionInNode(\n          node,\n          document,\n          controller.value.selection,\n        );\n        if (prevSelected === selectedRef.current) {\n          return;\n        }\n      }\n      forceUpdate();\n    }\n  }, [controller, viewNode, viewDocument, isSelected, forceUpdate]);\n\n  useHots(controller, onHots, undefined, !Block.isBlock(viewNode));\n\n  if (!controller.hasHots()) {\n    return {\n      node: viewNode,\n      document: viewDocument,\n      isSelected,\n    };\n  }\n\n  controller.removeIsSelected(viewNode.key);\n\n  // 重渲时，若节点为热区节点，需要重算其视图模型\n  if (controller.isViewHot(viewNode)) {\n    const { node, document } = controller.getView(viewNode, viewDocument, true);\n\n    let selected = false;\n    if (controller.pendingType === PendingType.input) {\n      selected = true;\n    } else if (\n      controller.pendingType === PendingType.selection &&\n      controller.value.selection.isExpanded\n    ) {\n      // 这种情况已经计算完成，直接使用缓存\n      selected = selectedRef.current;\n    } else {\n      selected = isSelectionInNode(node, document, controller.value.selection);\n    }\n\n    selectedRef.current = selected;\n\n    if (selected) {\n      controller.addIsSelected(viewNode.key);\n    }\n\n    return {\n      node,\n      document,\n      isSelected: selected,\n    };\n  }\n\n  // 重渲时，若节点非热区，则返回缓存的视图模型\n  const { node, document } = controller.getView(viewNode, viewDocument, false);\n  selectedRef.current = isSelected;\n  return {\n    node,\n    document,\n    isSelected,\n  };\n}\n\nexport default useView;\n","import * as React from 'react';\nimport { GROUP_COLLAPSED_KEY } from '../constants';\nimport useGroupData from '../hooks/useGroupData';\nimport RenderGroupProps from '../interfaces/renderGroupProps';\nimport Element from '../models/element';\n\ninterface WrapperProps {\n  node: Element;\n}\n\nconst GroupWrapper: React.FC<WrapperProps> = (props) => {\n  const { children, node } = props;\n  const isCollapsed = useGroupData(\n    node,\n    (groups) => {\n      const group = groups.find((g) => g.key === node.key);\n      return group?.data[GROUP_COLLAPSED_KEY];\n    },\n    false,\n  );\n\n  return React.cloneElement(children as React.ReactElement, {\n    isCollapsed,\n  });\n};\n\nexport default GroupWrapper;\n","/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/**\n * @packageDocumentation\n * @ignore\n */\nimport * as React from 'react';\nimport memoizeOne from 'memoize-one';\nimport equal from 'fast-deep-equal';\nimport warning from 'tiny-warning';\nimport NodeProps from '../interfaces/nodeProps';\nimport Controller from '../controller/index';\nimport Path from '../models/path';\nimport Value from '../models/value';\nimport Node from '../models/node';\nimport Element from '../models/element';\nimport Document from '../models/document';\nimport Block from '../models/block';\nimport Text from '../models/text';\nimport Leaf from '../models/leaf';\nimport Mark from '../models/mark';\nimport Selection from '../models/selection';\nimport { getChildrenIsSelected } from '../utils/getChildrenOverlaps';\nimport useCangjieKeyBindingRef from '../hooks/useCangjieKeyBindingRef';\nimport { CANGJIE_EMPTY, Selector } from '../constants';\nimport VoidWrapper from './voidWrapper';\nimport LeafComponent from './leaf';\nimport { useInputPending, PendingElements } from '../hooks/useInputPending';\nimport { InputData } from '../interfaces/input';\nimport { PendingType } from '../interfaces/controller';\nimport { useNodeStyle } from '../hooks/useStyle';\nimport useView from '../hooks/useView';\nimport GroupWrapper from './groupWrapper';\nimport { isGroupCollapsed, isGroupEmpty } from '../plugins/group/utils';\nimport useGroupData from '../hooks/useGroupData';\nimport { useUserData } from '../hooks/useUserData';\n\nfunction isComposingMark({ type }: Mark) {\n  return type === 'cangjieComposing';\n}\n\nfunction isNotComposingMark(mark: Mark) {\n  return !isComposingMark(mark);\n}\n\nconst checkRerenderNodesBySelectionChange = memoizeOne((\n  prevSelection: Selection, \n  selection: Selection,\n  prevDocument: Document,\n  document: Document,\n) => {\n  const shouldRenderNodeKeys = new Set<string>();\n  const { start, end } = selection.convertToTextPoints(document);\n  const { start: prevStart, end: prevEnd } = prevSelection.convertToTextPoints(document);\n  if (selection === prevSelection) {\n    return shouldRenderNodeKeys;\n  }\n\n  if (start !== prevStart) {\n    shouldRenderNodeKeys.add(start.key);\n    const startAnchestors = document.getAncestors(start.key);\n    startAnchestors.forEach((anchestor) => {\n      shouldRenderNodeKeys.add(anchestor.key);\n    });\n    shouldRenderNodeKeys.add(prevStart.key);\n    const prevStartAnchestors = document.getAncestors(prevStart.key);\n    prevStartAnchestors.forEach((anchestor) => {\n      shouldRenderNodeKeys.add(anchestor.key);\n    });\n  }\n\n  if (end !== prevEnd) {\n    shouldRenderNodeKeys.add(end.key);\n    const endAnchestors = document.getAncestors(end.key);\n    endAnchestors.forEach((anchestor) => {\n      shouldRenderNodeKeys.add(anchestor.key);\n    });\n    shouldRenderNodeKeys.add(prevEnd.key);\n    const prevEndAnchestors = document.getAncestors(prevEnd.key);\n    prevEndAnchestors.forEach((anchestor) => {\n      shouldRenderNodeKeys.add(anchestor.key);\n    });\n  }\n\n  return shouldRenderNodeKeys;\n});\n\n// TODO: 等 selectionLayer 提到 content，修改这里的判断逻辑\nfunction shouldComponentUpdate(prevProps: NodeProps, nextProps: NodeProps) {\n  const { controller } = prevProps;\n\n  const shouldUpdate = controller.run(\n    'shouldNodeComponentUpdate',\n    prevProps,\n    nextProps,\n  );\n  const n = nextProps;\n  const p = prevProps;\n\n  if (shouldUpdate !== null) {\n    if (shouldUpdate) {\n      return true;\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      warning(\n        shouldUpdate !== false,\n        \"Returning false in `shouldNodeComponentUpdate` does not disable Cangjie's internal `shouldComponentUpdate` logic. If you want to prevent updates, use React's `shouldComponentUpdate` instead.\",\n      );\n    }\n  }\n\n  if (n.node !== p.node) {\n    return true;\n  }\n\n  if (n.visible !== p.visible) {\n    return true;\n  }\n\n  const isSelectionPending = controller.pendingType === PendingType.selection;\n  // 当存在 Hots & Pending 时，节点的重渲会存在两个诱因：\n  // 1. 外部 Props 重渲\n  // 2. 内部受 Hots & Pending 的控制重渲\n  //\n  // 假定节点树为：\n  // ```tsx\n  //   <value>\n  //   <document>\n  //     <block type=\"paragrah\" key=\"p0\">\n  //       <block type=\"paragraph\" key=\"hello\">\n  //         <text key=\"hello-text\">Hello</text>\n  //       </block>\n  //       <block type=\"paragraph\" key=\"world\">\n  //         <text key=\"world-text\">World</text>\n  //         <cursor />\n  //       </block>\n  //     </block>\n  //     <block type=\"paragraph\" key=\"p1\">\n  //       <block type=\"paragraph\" key=\"cangjie\">\n  //         <text key=\"cangjie-text\">Cangjie</text>\n  //       </block>\n  //     </block>\n  //   </document>\n  // </value>\n  //```\n  //\n  // 1. 当光标从 `world-text` 移动到 `hello-text`：计算热区为 ['world', 'hello']，且开始选区 Pending\n  //   1.1 Hots 驱动 `world` 组件树重渲：`world` 未选中\n  //     * `world-text` 因为 props 变更而重渲 `prevProps.isSelected !== nextProps.isSelected`\n  //   1.2 Hots 驱动 `hello` 组件树重渲：`hello` 选中\n  //     * `hello-text` 因为 props 变更而重渲 `prevProps.isSelected !== nextProps.isSelected`\n  //\n  // 2. 当光标从 `hello-text` 移动到 `cangjie-text`：计算热区为 ['p0', 'p1']\n  //    2.1 Hots 驱动 `p0` 组件树重渲：`p0` 节点树取消选中\n  //      * `hello` 重渲，且 `prevProps.isSelected === nextProps.isSelectd === false`，但由于 `hello` 在 pending 期间被选中，因此 `hello` 应重渲以取消选中态\n  //      * `hello` 组件树重渲...\n  //    2.2 Hots 驱动 `p1` 组件树重渲：`p1` 节点树选中\n  //      * `cangjie` 重渲，且 `prevProps.isSelectd !== nextProps.isSelected`，因此 `cangjie 重渲`\n  //      * `cangjie` 组件树重渲..\n  //\n  if (isSelectionPending) {\n    const pendingSelected = controller.getIsSelected(n.node.key);\n    if (p.isSelected === n.isSelected) {\n      return p.isSelected !== pendingSelected;\n    }\n  }\n\n  // 1. 考虑节点树及其选中态为：\n  // ```tsx\n  // <value>\n  //   <document>\n  //     <block key=\"container\" type=\"container\" isSelected={true}>\n  //       <block key=\"hello\" type=\"paragraph\" isSelected={true}>Hello</block>\n  //       <block key=\"world\" type=\"paragraph\" isSelected={false}>World</block>\n  //       <block key=\"cangjie\" type=\"paragprah\">Cangjie</block>\n  //     </block>\n  //   </document>\n  // </value>\n  // ```\n  // 当选区从 `hello` 移动到 `world` 时，节点重渲的顺序为\n  //   * `container` 因为选中态而重渲：为了保证其内部发生的选区变化也能响应，因此重渲 `container`\n  //   * `hello` 选中态变化，重渲 `hello`\n  //   * `world` 选中态变化，重渲 `world`\n  //   * `cangjie` 选中态未变化，不重渲\n  // ```tsx\n  // <value>\n  //   <document>\n  //     <block key=\"container\" type=\"container\" isSelected={true}>\n  //       <block key=\"hello\" type=\"paragraph\" isSelected={true}>Hello</block>\n  //       <block key=\"world\" type=\"paragraph\">World</block>\n  //       <block key=\"cangjie\" type=\"paragraph\">Cangjie</block>\n  //     </block>\n  //   </document>\n  // </value>\n  // ```\n  // \n  // 2. 考虑节点树及其选中态为：\n  // ```tsx\n  // <value>\n  //   <document>\n  //     <block key=\"container1\" type=\"container\" isSelected={true}>\n  //       <block key=\"hello\" type=\"paragraph\" isSelected={true}>Hello</block>\n  //       <block key=\"world\" type=\"paragraph\"}>World</block>\n  //     </block>\n  //     <block key=\"container2\" type=\"container\">\n  //       <block key=\"cangjie\" type=\"paragraph\">Cangjie</block>\n  //     </block>\n  //   </document>\n  // </value>\n  // ```\n  // 当选区从 `container1` 移动到 `cangjie` 时，节点重渲的顺序为\n  //   * `container1` 因为要取消选中而重渲：为了保证取消选中后，其内部节点的选中态也能取消，因此重渲 `container1`\n  //     * `hello` 选中态变化，重渲 `hello`\n  //     * `world` 选中态未变化，不重渲 `world`\n  //   * `container2` 因为选中态变化重渲：为了保证其内部发生的选区变化也能响应，因此重渲 `container`\n  //     * `cangjie` 因为选中态变化而重渲\n  // ```tsx\n  // <value>\n  //   <document>\n  //     <block key=\"container\" type=\"container\" isSelected={true}>\n  //       <block key=\"hello\" type=\"paragraph\" isSelected={true}>Hello</block>\n  //       <block key=\"world\" type=\"paragraph\" isSelected={false}>World</block>\n  //       <block key=\"cangjie\" type=\"paragprah\">Cangjie</block>\n  //     </block>\n  //   </document>\n  // </value>\n  // ```\n  if (n.prevValue?.selection) {\n    const shouldRenderSets = checkRerenderNodesBySelectionChange(n.prevValue.selection, n.value.selection, p.document, n.document);\n    if (shouldRenderSets.has(n.node.key)) {\n      return true;\n    }\n  }\n  if (n.prevValue?.isFocused !== n.value.isFocused) {\n    return n.isSelected !== p.isSelected || n.isSelected || p.isSelected;\n  }\n  return n.isSelected !== p.isSelected;\n}\n\nfunction renderLeaves(parent: Node, node: Text, controller: Controller) {\n  const { value } = controller;\n  const { composing } = value;\n  const { leaves } = node;\n  const ls: React.ReactNode[] = [];\n\n  let nextStartOffset = 0;\n  for (let i = 0; i < leaves.length; i += 1) {\n    const leaf = leaves[i];\n    const startOffset = nextStartOffset;\n    nextStartOffset += leaf.text.length;\n    const hasComposingMark = leaf.marks.some(isComposingMark);\n    const text = leaf.text || CANGJIE_EMPTY;\n    const children: React.ReactNode[] = [\n      hasComposingMark ? <u data-cangjie-composing>{text}</u> : text,\n    ];\n    if (composing) {\n      const marks = leaf.marks.filter(isNotComposingMark);\n      while (i + 1 < leaves.length) {\n        const nextLeaf = leaves[i + 1];\n        const nextHasComposingMark = nextLeaf.marks.some(isComposingMark);\n        const marksWithoutComposing = nextHasComposingMark\n          ? nextLeaf.marks.filter(isNotComposingMark)\n          : nextLeaf.marks;\n        if (!equal(marks, marksWithoutComposing)) {\n          break;\n        }\n        i += 1;\n        nextStartOffset += nextLeaf.text.length;\n        children.push(\n          nextHasComposingMark ? (\n            <u data-cangjie-composing>{nextLeaf.text}</u>\n          ) : (\n            nextLeaf.text\n          ),\n        );\n      }\n    }\n    ls.push(\n      renderLeaf(\n        controller,\n        parent,\n        node,\n        leaf,\n        <React.Fragment>{children}</React.Fragment>,\n        startOffset,\n      ),\n    );\n  }\n\n  return ls;\n}\n\nconst NodeComponent = React.memo(\n  (props: NodeProps): JSX.Element | null => {\n    const { controller, parent, path, composing, prevValue, visible = true } = props;\n    const { value, enablePending, virtualizeManager } = controller;\n    const { selection } = value;\n    let { node, document } = props;\n    const ref = useCangjieKeyBindingRef<HTMLDivElement>(node.key);\n    const [pendingElements, updatePendingElements] =\n      React.useState<PendingElements>({ document, node });\n\n    // @ts-ignore\n    const fold = Block.isBlock(node) ? (useUserData(node, 'fold') || false): false;\n\n    const hidden = useGroupData<boolean>(\n      node,\n      (groups) => {\n        return groups.some(\n          (group) => isGroupCollapsed(group) && group.key !== node.key,\n        );\n      },\n      fold,\n    );\n\n    const finalVisible = visible !== false && !hidden;\n    const {\n      node: view,\n      document: viewDocument,\n      isSelected,\n    } = useView(controller, node, document, props.isSelected);\n    const { inputData$ } = controller;\n\n    // 监听输入缓冲数据流\n    useInputPending<InputData>(\n      { node, document },\n      path,\n      controller,\n      enablePending.input,\n      inputData$,\n      updatePendingElements,\n    );\n\n    if (controller.enableVirtualize && virtualizeManager) {\n      const { nodeManager: virtualizeNodeManager } = virtualizeManager;\n      const path = document.getPath(node.key);\n      if (path) {\n        const topPath = path.slice(0, 1);\n        const topBlock = document.getNodeByPath(topPath) as Block;\n        // 是顶层节点\n        if (node === topBlock) {\n          const virtualizePersistState = virtualizeNodeManager.getVirtualizePersistState(topBlock.key);\n          virtualizePersistState.forEach((childNodeKey) => {\n            const childNode = document.getNode(childNodeKey);\n            if (topBlock.hasNode(childNodeKey) && childNode && controller.query('shouldPersistState', { node: childNode })) {\n              virtualizeNodeManager.updateVirtualizePersistState(childNodeKey, topBlock.key, true);\n            } else {\n              virtualizeNodeManager.updateVirtualizePersistState(childNodeKey, topBlock.key, false);\n            }\n          });\n        }\n        const shouldPersistState = controller.query('shouldPersistState', { node });\n        if (shouldPersistState) {\n          virtualizeNodeManager.updateVirtualizePersistState(node.key, topBlock.key, true);\n        }\n      }\n    }\n\n    // 输入缓冲开始，使用 pending node\n    if (\n      Block.isLeafBlock(props.node) &&\n      controller.isPending &&\n      controller.pendingType === PendingType.input\n    ) {\n      node = pendingElements.node;\n      document = pendingElements.document;\n    }\n\n    // 如果使用热区技术，使用热区重算的模型\n    if (controller.enableHots) {\n      node = view;\n      document = viewDocument;\n    }\n\n    const blockStyle = useNodeStyle(controller, node, finalVisible);\n\n    const children = () => {\n      const n = node.toSubType();\n      if (n.isElement()) {\n        const childrenIsSelected = getChildrenIsSelected(\n          document,\n          n,\n          selection,\n        );\n        const renderedChildren = n.nodes.map((n: Node, i: number) =>\n          renderNode(\n            controller,\n            value,\n            document,\n            node,\n            n,\n            path.concat(i),\n            childrenIsSelected[i],\n            finalVisible,\n            prevValue,\n          ),\n        );\n        return renderedChildren;\n      }\n      return renderLeaves(parent, n, controller);\n    };\n\n    if (Text.isText(node)) {\n      if (process.env.NODE_ENV === 'test') {\n        // 服务于 Test 环境下对 text 渲染的监听\n        controller.run('renderText', { node });\n      }\n      return <>{children()}</>;\n    }\n\n    const isVoid = controller.query('isVoid', node);\n    const isNonEmptyBlock = Block.isBlock(node) && !!node.nodes.length;\n    const isLeafBlock = isNonEmptyBlock && Block.isLeafBlock(node);\n    const isSelectable =\n      isNonEmptyBlock && controller.query('isEdgeSelectable', node);\n    const binding = {\n      ref,\n      [Selector.key]: node.key,\n    };\n    const attributes = {\n      key: node.key,\n    };\n    const attributesWithBinding = { ...attributes, ...binding };\n\n    let nonVoidAttributes: Record<string, any> = attributesWithBinding;\n    if (isLeafBlock) {\n      nonVoidAttributes = {\n        ...nonVoidAttributes,\n        style: blockStyle,\n        [Selector.leafBlock]: true,\n        [Selector.uuid]: controller.query('anchor', node as Element),\n      };\n    }\n    if (isSelectable) {\n      nonVoidAttributes = {\n        ...nonVoidAttributes,\n        style: blockStyle,\n        [Selector.uuid]: controller.query('anchor', node as Element),\n        [Selector.edgeSelectable]: true,\n      };\n    }\n    const element = controller.run('renderNode', {\n      controller,\n      attributes: isVoid ? attributes : nonVoidAttributes,\n      composing,\n      isSelected,\n      parent,\n      node,\n      path,\n      children,\n      visible: finalVisible,\n    });\n    if (element === null) {\n      return null;\n    }\n    if (isVoid) {\n      return (\n        <VoidWrapper {...props} attributes={attributesWithBinding}>\n          {element}\n        </VoidWrapper>\n      );\n    }\n    if (node.isElement()) {\n      const group = controller.groupManager.getGroup(node.key);\n      if (group) {\n        const props = {\n          controller,\n          node,\n          path,\n          group,\n          isCollapsed: false,\n          isEmpty: isGroupEmpty(controller, { ...group, key: node.key }),\n          attributes: {\n            [Selector.groupKey]: node.key,\n          } as const,\n          children: () => element,\n          visible: finalVisible,\n        };\n        const groupElement = controller.run('renderGroup', props);\n        if (groupElement) {\n          return <GroupWrapper node={node}>{groupElement}</GroupWrapper>;\n        }\n      }\n    }\n    return element;\n  },\n  (prevProps, nextProps) => !shouldComponentUpdate(prevProps, nextProps),\n);\n\nfunction renderLeaf(\n  controller: Controller,\n  parent: Node,\n  text: Text,\n  leaf: Leaf,\n  child: React.ReactNode,\n  offset: number,\n) {\n  const { composing } = controller.value;\n  const leafKey = `${text.key}:${offset}`;\n  const initialChild = (\n    <LeafComponent key={leafKey} leafKey={leafKey}>\n      {child}\n    </LeafComponent>\n  );\n\n  const children = leaf.marks.reduce(\n    (child: React.ReactNode, mark) =>\n      controller.run('renderMark', {\n        parent,\n        node: text,\n        offset,\n        composing,\n        mark,\n        marks: leaf.marks,\n        text: leaf.text,\n        children: () => child,\n      }),\n    initialChild,\n  );\n\n  return children;\n}\n\nexport function renderNode(\n  controller: Controller,\n  value: Value,\n  document: Document,\n  parent: Node,\n  node: Node,\n  path: Path,\n  isSelected: boolean,\n  visible = true,\n  prevValue?: Value,\n) {\n  const { composing } = value;\n\n  const comp = (\n    <NodeComponent\n      key={node.key}\n      controller={controller}\n      value={value}\n      document={document}\n      parent={parent}\n      node={node}\n      path={path}\n      composing={composing}\n      isSelected={isSelected}\n      visible={visible}\n      prevValue={prevValue}\n    />\n  );\n  \n  return comp;\n}\n\nexport default NodeComponent;\n","import React from 'react';\n\ninterface VirtualizePlaceholderProps {\n  height?: number;\n}\n\nexport const VirtualizePlaceholder = (props: VirtualizePlaceholderProps) => {\n  const { height = 0 } = props;\n  return (\n    <div data-cangjie-virualize-placeholder style={{ height }} />\n  );\n};","import React, { useEffect, useState } from 'react';\nimport Controller from '../../controller';\nimport { VirtualizeResult } from '../interface';\n\n\nexport default function useVirtualize(\n  controller: Controller,\n  containerRef: React.MutableRefObject<HTMLElement | null>,\n  getScrollableContainer: () => Window | HTMLElement | null,\n) {\n  const { virtualizeManager, enableVirtualizeView } = controller;\n  const [virtualizeId, setVirtualizeId] = useState(0);\n  useEffect(() => {\n    if (!virtualizeManager) {\n      return;\n    }\n    if (enableVirtualizeView) {\n      virtualizeManager.initView({\n        scrollContainer: getScrollableContainer() as HTMLElement,\n        editorContainer: containerRef.current!,\n        triggerViewUpdate: setVirtualizeId,\n      });\n      virtualizeManager.start();\n    } else {\n      virtualizeManager.stop();\n    }\n    return;\n  }, [enableVirtualizeView, virtualizeManager]);\n\n  if (!enableVirtualizeView || !virtualizeManager) {\n    return null;\n  }\n\n  const { outputManager } = virtualizeManager;\n\n  const { beforePlaceholderHeight, afterPlaceholderHeight, visibles } = outputManager;\n\n  const virtualizeResult: VirtualizeResult = {\n    virtualizeId: typeof virtualizeManager.virtualizeId === 'number' ? virtualizeManager.virtualizeId : virtualizeId,\n    beforePlaceholderHeight,\n    afterPlaceholderHeight,\n    visibles,\n  }\n  return [virtualizeResult, setVirtualizeId] as const;\n}\n","import * as React from 'react';\nimport equal from 'fast-deep-equal';\nimport Controller from '../controller/index';\nimport Document from '../models/document';\nimport Value from '../models/value';\nimport Selection from '../models/selection';\nimport { getChildrenIsSelected } from '../utils/getChildrenOverlaps';\nimport useCangjieKeyBindingRef from '../hooks/useCangjieKeyBindingRef';\nimport { renderNode } from './node';\nimport { Selector } from '../constants';\nimport { VirtualizePlaceholder } from '../virtualize/components/VirtualizePlaceholder';\nimport useVirtualize from '../virtualize/hooks/useVirtualize';\n\nexport interface EditableContentProps {\n  controller: Controller;\n  contentRef: React.MutableRefObject<HTMLDivElement | null> | ((instance: HTMLDivElement | null) => void);\n  containerRef: React.MutableRefObject<HTMLElement | null>;\n  getScrollableContainer: () => Window | HTMLElement | null,\n  isFocused: boolean;\n  selection: Selection;\n  document: Document;\n}\n\nconst arePropsEqual = (prevProps: EditableContentProps, nextProps: EditableContentProps) => {\n  const { selection: prevSelection, document: prevView, isFocused: prevIsFocused } = prevProps;\n  const { selection: nextSelection, document: nextView, isFocused: nextIsFocused, controller } = nextProps;\n\n  // 有热区时，不更新，内容交给节点子树自行更新\n  if (controller.hasHots()) {\n    return true;\n  }\n\n  return (\n    equal(prevSelection, nextSelection) &&\n    prevView === nextView &&\n    prevIsFocused === nextIsFocused\n  );\n};\n\nconst EditableContent = React.memo((props) => {\n  const { controller, contentRef: ref, getScrollableContainer, selection, document } = props;\n  const { value } = controller;\n  const prevValue = React.useRef<Value>();\n  React.useEffect(() => {\n    prevValue.current = value;\n  }, [value]);\n  const childrenIsSelected = getChildrenIsSelected(document, document, selection);\n\n  const editableRef = useCangjieKeyBindingRef<HTMLDivElement>(props[Selector.key]);\n  // HACK: use `useCombinedRefs` will break `useCangjieKeyBindingRef`.\n  React.useLayoutEffect(() => {\n    if (!ref) {\n      return;\n    }\n    if (typeof ref === 'function') {\n      ref(editableRef.current);\n    } else {\n      ref.current = editableRef.current;\n    }\n  });\n\n  const useVirtualizeResult = useVirtualize(controller, editableRef, getScrollableContainer);\n\n  const {\n    virtualizeId = -1,\n    beforePlaceholderHeight = 0,\n    afterPlaceholderHeight = 0,\n    visibles = null,\n  } = useVirtualizeResult ? useVirtualizeResult[0] : {};\n\n  const virtualizeAttr = React.useMemo(() => {\n    return controller.enableVirtualize ? {\n      \"data-virtualize-id\": virtualizeId,\n    } : {};\n  }, [controller.enableVirtualize, virtualizeId]);\n\n  // 因为任何原因拿不到虚拟化结果，走非虚拟化分支\n  if (useVirtualizeResult === null || virtualizeId === -1) {\n    const children = document.nodes.map((child, index) =>\n      renderNode(controller, value, document, document, child, [index], childrenIsSelected[index], true, prevValue.current)\n    );\n    return (\n      <>\n        <div\n          ref={editableRef}\n          data-cangjie-key={document.key}\n          data-cangjie-editable\n        >\n          {children}\n        </div>\n      </>\n    );\n  }\n\n  const { blockFinalVisibleStates } = visibles!;\n\n  const children = document.nodes.map((child, index) => {\n    const blockFinalVisibleState = blockFinalVisibleStates[index];\n    const visible = blockFinalVisibleState === 'show';\n    if (blockFinalVisibleState === 'destroy') {\n      return null;\n    }\n    return renderNode(controller, value, document, document, child, [index], childrenIsSelected[index], visible, prevValue.current);\n  });\n\n  return (\n    <>\n      <div\n        ref={editableRef}\n        data-cangjie-key={document.key}\n        data-cangjie-editable\n        {...virtualizeAttr}\n      >\n        {controller.enableVirtualize ? <VirtualizePlaceholder height={beforePlaceholderHeight} /> : null}\n        {children}\n        {controller.enableVirtualize ? <VirtualizePlaceholder height={afterPlaceholderHeight} /> : null}\n      </div>\n    </>\n  );\n}, arePropsEqual);\n\nexport default EditableContent;\n","/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport React from 'react';\n\n// 移动端弹键盘时，兼容浏览器在 delay 此时间后滚动到光标位置\nconst FOCUS_SCROLL_DELAY = 300;\n// 移动端弹键盘时，等待 visual viewport change 的最大时间\nconst MAX_VIEWPORT_WAIT_TIME = 3000;\n\ntype ScrollParams = {\n  callback: Function;\n  waitTimer: ReturnType<typeof setTimeout>;\n};\n\n/**\n * 移动端处理「点击后，滚动视口到光标」的逻辑\n * 这里需要等待键盘弹出后，才能计算跳转，因此依赖了 visual viewbox\n * 如果不支持 visual viewbox，就用 setTimeout\n */\nexport default function useClickToScroll() {\n  const scrollerRef = React.useRef<ScrollParams | null>(null);\n\n  // resize 事件发生。这里看如果有 scrollerRef，就开始滚动\n  const handleResize = React.useCallback(() => {\n    if (scrollerRef.current) {\n      const { callback, waitTimer } = scrollerRef.current;\n      callback();\n      clearTimeout(waitTimer);\n      scrollerRef.current = null;\n    }\n  }, []);\n\n  // 注册 visual box 事件\n  React.useEffect(() => {\n    if (!window.visualViewport) {\n      return undefined;\n    }\n    window.visualViewport.addEventListener('resize', handleResize);\n    return () => {\n      window.visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, [handleResize]);\n\n  const scheduler = React.useCallback((callback: Function) => {\n    if (scrollerRef.current) {\n      clearTimeout(scrollerRef.current.waitTimer);\n    }\n    if (window.visualViewport) {\n      // 如果支持 visualViewport 就开始检测 size 变化\n      const fallbackCall = () => {\n        scrollerRef.current = null;\n      };\n      const waitTimer = setTimeout(fallbackCall, MAX_VIEWPORT_WAIT_TIME);\n      scrollerRef.current = { callback, waitTimer };\n    } else {\n      // 不支持的话，就用 setTimeout\n      setTimeout(callback, FOCUS_SCROLL_DELAY);\n    }\n  }, []);\n\n  return scheduler;\n}\n","import { createContext, useContext } from 'react';\n\nexport const ScrollableContentContext = createContext<HTMLElement | null>(null);\n\n/**\n * 滚动内容，默认是body\n */\n export function useScrollableContent() {\n  return useContext(ScrollableContentContext);\n}\n","/* eslint-disable prefer-arrow-callback */\n// eslint-disable-next-line import/no-extraneous-dependencies\n/**\n * @packageDocumentation\n * @module Components\n */\nimport React, { useRef } from 'react';\nimport Controller from '../controller/index';\nimport useSelectionCalculator from '../hooks/useSelectionCalculator';\nimport useInputDetector from '../hooks/useInputDetector';\nimport { ZoomContext, ZoomContainerContext, useExternalZoom } from '../hooks/useZoom';\nimport { useContentStyle } from '../hooks/useStyle';\nimport {\n  scrollToSelection,\n  getDOMRectFromSelection,\n} from '../utils/dom/scrollToSelection';\nimport { findClosestInContent } from '../utils/dom';\nimport { ROOT_TO_CONTROLLER } from '../utils/dom/getElementByCangjieKey';\nimport { IS_MOBILE, IS_ANDROID } from '../utils/environment';\nimport CangjieSelectEvent from '../events/cangjieSelect';\nimport pasteInput from '../events/pasteInput';\nimport PolyfillDataTransfer from '../events/dataTransfer';\nimport { Selector, MIME_TYPES } from '../constants';\nimport HiddenTextArea from './hiddenTextArea';\nimport SelectionLayer from './selection';\nimport { PerfType } from '../interfaces/perf';\nimport { PendingType } from '../interfaces/controller';\nimport hotkeys from '../utils/hotkeys';\nimport EditableContent from './editableContent';\nimport useClickToScroll from '../hooks/useClickToScroll';\nimport { ScrollableContainerContext, useScrollableContainer } from './ScrollableContainer';\nimport { ScrollableContentContext } from './ScrollableContent';\nimport useController from '../controller/useController';\n\nconst EVENT_HANDLERS = ['onDrop', 'onMouseMove'];\n\nconst editorStyle: React.CSSProperties = {\n  position: 'relative',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word',\n  cursor: 'text',\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n};\n\nconst CLIPBOARD_IDENTIFIER = '<article class=\"4ever-article\" data-clipboard-cangjie';\n\nfunction useWindowEvent(type: string, handler) {\n  React.useEffect(() => {\n    window.addEventListener(type, handler);\n    return () => window.removeEventListener(type, handler);\n  }, [handler, type]);\n}\n\nexport interface ContentOwnProps {\n  /**\n   * 根节点的CSS样式class\n   */\n  className?: string;\n  /**\n   * 根节点的HTML Tag名字，默认是div\n   */\n  tagName?: string;\n  /**\n   * 根节点的tabIndex，默认0\n   */\n  tabIndex?: number;\n  /**\n   * 缩放倍数\n   */\n  zoom?: number;\n  /**\n   * 根节点 CSS custom style\n   * style.transform 在 zoom 时会被覆盖\n   */\n  style?: React.CSSProperties;\n  /**\n   * 根节点的默认样式\n   */\n  defaultStyle?: React.CSSProperties;\n  /**\n   * 编辑器根节点为空时的占位符\n   */\n  placeholder?: string | React.ReactElement;\n\n  /**\n   * 滚动container，默认是window\n   */\n  getScrollableContainer?: () => HTMLElement | Window;\n  /**\n  * 滚动内容，默认是body\n  */\n  getScrollableContent?: () => HTMLElement;\n}\n\n/**\n * 其它的自定义内容；在调用renderContent插件时，props会做一个浅拷贝传入到参数里\n */\nexport type ContentProps = ContentOwnProps & Record<string, any>;\n\n// 多编辑器实例需要共享\nlet touchStartFlag = false;\n\n/**\n * 是否 Event 不需要被拦截\n * @param target\n */\nfunction isNotEditable(\n  target: React.BaseSyntheticEvent<HTMLElement>['target'],\n) {\n  let el: HTMLElement | null;\n\n  try {\n    // COMPAT: 兼容在某些 Firefox 下，target 无法获取 `.closet()` 方法导致 crash\n    if (target.nodeType === 8) {\n      return true;\n    }\n\n    // COMPAT: 如果 event target 是 Text Node，则判断其父节点\n    el = target.nodeType === 3 ? (target.parentNode as HTMLElement) : target;\n  } catch (err) {\n    return true;\n  }\n\n  return !el || findClosestInContent(el, `[${Selector.notEditable}]`);\n}\n\n/**\n * target 是否一个 Input 或者 TextArea\n */\nfunction isInputTarget(target: any) {\n  return target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement;\n}\n\nfunction useCombinedRefs(...refs) {\n  const targetRef = React.useRef()\n\n  React.useLayoutEffect(() => {\n    refs.forEach(ref => {\n      if (!ref) return\n\n      if (typeof ref === 'function') {\n        ref(targetRef.current)\n      } else {\n        ref.current = targetRef.current\n      }\n    })\n  }, [refs])\n\n  return targetRef\n}\n\n// 避免没有意义的复制、剪切\nconst isValidCopyOrCut = (controller: Controller) => {\n  const { selection, document } = controller.value;\n  if (selection.isExpanded) {\n    return true;\n  }\n  const node = document.getParent(selection.focus.key);\n  if (!node) {\n    return false;\n  }\n  const isVoid = controller.query('isVoid', node);\n  return Boolean(isVoid);\n}\n\nconst Content: React.FC<ContentProps> = React.forwardRef((props, ref) => {\n  const containerRef = React.useRef<HTMLElement | null>(null);\n  const combinedContainerRef: any = useCombinedRefs(containerRef, ref);\n  const contentRef = React.useRef<HTMLDivElement | null>(null);\n  const scrollableContainerRef = React.useRef<HTMLDivElement | null>(null);\n  const textareaRef = React.useRef<HTMLTextAreaElement | null>(null);\n  const prevWindowHeight = React.useRef<number>(window.innerHeight);\n  const prevWindowWidth = React.useRef<number>(window.innerWidth);\n  const [isTextareaDisabled, setIsTextareaDisabled] = React.useState(false);\n\n  const controller = useController();\n  const { readOnly, value, autoFocus } = controller;\n  const docStyle = useContentStyle(controller);\n\n  const { selection, isFocused } = value;\n\n  const document = controller.view;\n\n  const {\n    className,\n    tagName: Container = 'div',\n    tabIndex = 0,\n    zoom = 1,\n    style: customStyle = {},\n    defaultStyle,\n    getScrollableContainer = () => window,\n  } = props;\n\n  const handlers = EVENT_HANDLERS.reduce(\n    (hdls, type: any) => ({\n      ...hdls,\n      [type]: (event) => controller.run(type, event),\n    }),\n    {},\n  );\n\n  // CSS transform只允许内部设置，禁止外部设置\n  let zoomStyle: React.CSSProperties = {};\n  if (typeof zoom === 'number' && zoom !== 1) {\n    zoomStyle = {\n      transform: `scale(${zoom})`,\n      transformOrigin: '0 0',\n    };\n  }\n\n  // 移动端的 textarea focus 会触发视图的滚动，且 preventScroll not working，在 readonly 模式下禁止 focus\n  // TODO: 关于 textarea 的滚动控制可以参考 Google Docs 的 iframe 方案\n  const disableNativeFocus = readOnly && IS_MOBILE;\n\n  const selectionCalculator = useSelectionCalculator(\n    controller,\n    textareaRef,\n    scrollableContainerRef,\n  );\n\n  const inputDetector = useInputDetector(controller, textareaRef);\n\n  const handleClickToFocus = (event: React.MouseEvent) => {\n    if (isNotEditable(event.target) && event.target === window.document.activeElement) {\n      // 不干扰节点自己的 focus 逻辑\n      return;\n    }\n    if (!readOnly) {\n      controller.run('onCangjieFocus');\n    }\n    const textarea = textareaRef.current;\n    if (controller.value.isFocused && !disableNativeFocus) {\n      // HACK: `.focus` only works in mouse event handler on mobile.\n      textarea?.focus({\n        preventScroll: true,\n      });\n    }\n    controller.run('onClick', event);\n  };\n\n  const handleMouseDown = (event: React.MouseEvent) => {\n    if (isNotEditable(event.target)) return;\n    controller.run('onMouseDown', event);\n    if (!event.defaultPrevented) {\n      event.preventDefault();\n      inputDetector.onCompositionEnd();\n      selectionCalculator.onSelectStart(event);\n      selectionCalculator.onMultipleClick(event);\n    }\n  };\n\n  const handleMouseUp = (event: React.MouseEvent) => {\n    if (isNotEditable(event.target)) return;\n    controller.run('onMouseUp', event);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (isNotEditable(event.target)) return;\n    if (!readOnly) {\n      if (controller.value.composing) {\n        controller.perfStart({ type: PerfType.composing });\n      } else if (controller.pendingType === PendingType.input) {\n        const payload =\n          hotkeys.isDeleteBackward(event) || hotkeys.isDeleteForward(event)\n            ? { type: PerfType.input, subtype: 'delete' }\n            : { type: PerfType.input };\n        controller.perfStart(payload);\n      }\n      const shouldContinue = inputDetector.onKeyDown(event);\n      if (shouldContinue === false) {\n        return;\n      }\n      // 目前许多的编辑行为在 onKeyDown 事件中，所以暂时禁止掉\n      // TODO: 将编辑行为的 onKeyDown 事件和选区交互行为分离 @展炤\n      controller.run('onKeyDown', event);\n    }\n    if (!event.defaultPrevented) {\n      selectionCalculator.onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent) => {\n    if (isNotEditable(event.target)) return;\n    selectionCalculator.onKeyUp(event);\n    controller.run('onKeyUp', event);\n  };\n\n  const handleTouchStart = (event: React.TouchEvent) => {\n    if (isNotEditable(event.target)) return;\n    selectionCalculator.onTapHoldStart(event);\n    controller.run('onTouchStart', event);\n  };\n\n  const handleTouchMove = (event: React.TouchEvent) => {\n    if (isNotEditable(event.target)) return;\n    selectionCalculator.onTapHoldEnd();\n    controller.run('onTouchMove', event);\n  };\n\n  const handleTouchEnd = (event: React.TouchEvent) => {\n    if (isNotEditable(event.target)) return;\n    selectionCalculator.onTapHoldEnd();\n    controller.run('onTouchEnd', event);\n  };\n\n  const handleTouchStartCapture = () => {\n    touchStartFlag = true;\n  };\n\n  const handleTouchEndCapture = () => {\n    touchStartFlag = false;\n  };\n\n  const handleContextMenu = (event: React.MouseEvent) => {\n    if (isNotEditable(event.target) || isInputTarget(event.target)) {\n      return;\n    }\n    const { isCollapsed } = controller.value.selection;\n    if (!readOnly) {\n      controller.run('onCangjieFocus');\n    }\n    if (isCollapsed) {\n      controller.run('onClick', event);\n    }\n    controller.run('onContextMenu', event);\n  };\n\n  const handleDragStart = (event: React.DragEvent) => {\n    if (isNotEditable(event.target)) return;\n    controller.run('onDragStart', event);\n  };\n\n  const handleDragOver = (event: React.DragEvent) => {\n    // PERF: just allow drop\n    if (!event.defaultPrevented) {\n      event.preventDefault();\n    }\n  };\n\n  const handleDrop = (event: React.DragEvent) => {\n    if (isNotEditable(event.target)) return;\n    controller.run('onDrop', event);\n  };\n\n  const handleDragEnter = (event: React.DragEvent) => {\n    if (isNotEditable(event.target)) return;\n    controller.run('onDragEnter', event);\n  };\n\n  const handleCopy = React.useCallback((event: React.ClipboardEvent) => {\n    if (!isValidCopyOrCut(controller)) {\n      event.preventDefault();\n      return;\n    }\n    controller.run('onCopy', event);\n  }, [controller]);\n\n  const handleCut = React.useCallback((event: React.ClipboardEvent) => {\n    if (!isValidCopyOrCut(controller)) {\n      event.preventDefault();\n      return;\n    }\n    controller.run('onCut', event);\n  }, [controller]);\n\n  const scheduleScroll = useClickToScroll();\n\n  const handleFocus = React.useCallback(() => {\n    controller.run('onCangjieFocus');\n\n    // BACKGROUND:\n    //   Android 中，点击非工具栏区域 blur 后，再 focus 回编辑器\n    //   会出现 textarea.value === ' ' && textarea.selectionStart === 0 的情况\n    //   导致无法删除文字，输入文字后会吞掉光标前一个字\n    // 所以必须要在 focus 时 reset，而不是 blur 时\n    inputDetector.reset(); // Should reset `textarea` to **EMPTY**.\n\n    if (!IS_MOBILE) {\n      return;\n    }\n\n    const scrollToCaret = () => {\n      const { selection: currentSelection } = controller.value;\n      if (\n        !currentSelection ||\n        !containerRef.current ||\n        !scrollableContainerRef.current ||\n        readOnly\n      ) {\n        return;\n      }\n      scrollToSelection(\n        currentSelection,\n        containerRef.current,\n        scrollableContainerRef.current,\n        controller,\n      );\n    };\n    scheduleScroll(scrollToCaret);\n  }, [controller, inputDetector, readOnly, scheduleScroll]);\n\n  const handleBlur = () => {\n    const textarea = textareaRef.current;\n    if (touchStartFlag && textarea) {\n      textarea.focus({\n        preventScroll: true,\n      });\n      touchStartFlag = false;\n      return;\n    }\n    // 此处是浏览器 bug，blur 时没有触发 compositionend，要手动触发\n    // https://w3c.github.io/uievents/#compositionend\n    // 由于 disabled 会导致切换应用后无法自动 focus\n    // 所以只在 composing 期间才执行 compositionEnd\n    if (value.composing) {\n      triggerCompositionEnd();\n    }\n    // 只读模式下，如果用户在同页面点了其它内容，则先取消选区\n    if (readOnly && window.document.activeElement !== textarea) {\n      const newSelection = controller.value.selection.moveToFocus();\n      controller.run(\n        'onCangjieSelect',\n        CangjieSelectEvent({ selection: newSelection }),\n      );\n    }\n    controller.run('onCangjieBlur');\n  };\n\n  // 安卓下通过返回键/收起键 收起的键盘，不会触发失焦，再点击也不会触发focus\n  // 不过失焦触发的键盘收起仍然能通过 iOS 逻辑 handle\n  // 其余只能通过 resize 事件监听键盘的弹起\n  // 安卓下分屏模式、折叠屏机很常见，也经常横竖屏切换，很大程度不能保证 resize 是键盘引发\n  // 符合以下两个条件再触发滚动最大程度保证行为符合用户预期：\n  // 1、resize 只是高度发生减小宽度未变 2、之前光标在视野内，resize 后不在视野内了\n\n  const handleWindowResize = () => {\n    const { selection: rs, isBlurred } = controller.value;\n    if (\n      isBlurred ||\n      !rs ||\n      !containerRef.current ||\n      !scrollableContainerRef.current\n    ) {\n      return;\n    }\n    const height = window.innerHeight;\n    const width = window.innerWidth;\n    const previousHeight = prevWindowHeight.current;\n    const previousWidth = prevWindowWidth.current;\n    prevWindowHeight.current = height;\n    prevWindowWidth.current = width;\n    if (!IS_ANDROID || height >= previousHeight || previousWidth !== width) {\n      return;\n    }\n    const rect = getDOMRectFromSelection(rs, containerRef.current, controller);\n    if (!rect) {\n      return;\n    }\n    if (rect.top < previousHeight && rect.bottom >= height) {\n      scrollToSelection(\n        rs,\n        containerRef.current,\n        scrollableContainerRef.current,\n        controller,\n      );\n    }\n  };\n\n  // 设置 disabled 并异步取消 disabled 以取消 composing\n  // 不能用 Promose.resolve() micro task 方式，会导致多编辑器互相切换时异常\n  const triggerCompositionEnd = React.useCallback(() => {\n    setIsTextareaDisabled(true);\n    setTimeout(() => {\n      setIsTextareaDisabled(false);\n    });\n    inputDetector.onCompositionEnd();\n  }, [inputDetector]);\n\n  useWindowEvent('resize', handleWindowResize);\n\n  React.useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) {\n      return;\n    }\n    const isNativeFocused = window.document.activeElement === textarea;\n    const isFocusedNow = controller.value.isFocused;\n    if (isFocusedNow && !isNativeFocused && !disableNativeFocus) {\n      textarea.focus({\n        preventScroll: true,\n      });\n    }\n    if (!isFocused && isNativeFocused && window.document.hasFocus()) {\n      textarea.blur();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFocused]);\n\n  React.useLayoutEffect(() => {\n    if (containerRef.current) {\n      ROOT_TO_CONTROLLER.set(containerRef.current, controller);\n    }\n  }, [controller]);\n\n  React.useLayoutEffect(() => {\n    if (!scrollableContainerRef.current) {\n      scrollableContainerRef.current = getScrollableContainer() as HTMLDivElement | null;\n      controller.scrollableContainer = scrollableContainerRef.current;\n    }\n  });\n\n  React.useEffect(() => {\n    return () => {\n      if (containerRef.current && ROOT_TO_CONTROLLER.has(containerRef.current)) {\n        ROOT_TO_CONTROLLER.delete(containerRef.current);\n      }\n    };\n  }, []);\n\n  // 移动端只读场景下，无法监听到键盘事件，因此这里将事件绑定在 document 上\n  // Ref: https://aone.alibaba-inc.com/v2/project/897543/bug/45864425#\n  const isReadMode = Boolean(readOnly || controller.query('isQuickPreview'));\n  React.useEffect(() => {\n    const handleReadOnlyKeyDown = (event: KeyboardEvent) => {\n      if (isNotEditable(event.target)) return;\n      selectionCalculator.onKeyDown(event);\n    };\n\n    const handleReadOnlyKeyUp = (event: KeyboardEvent) => {\n      if (isNotEditable(event.target)) return;\n      selectionCalculator.onKeyUp(event);\n    };\n\n    if (isReadMode && IS_MOBILE) {\n      window.document.addEventListener('keydown', handleReadOnlyKeyDown);\n      window.document.addEventListener('keyup', handleReadOnlyKeyUp);\n    }\n    return () => {\n      if (isReadMode && IS_MOBILE) {\n        window.document.removeEventListener('keydown', handleReadOnlyKeyDown);\n        window.document.removeEventListener('keyup', handleReadOnlyKeyUp);\n      }\n    };\n  }, [readOnly, selectionCalculator, isReadMode]);\n\n  // 编辑模式下 textarea 监听输入行为\n  const editableListeners: React.HTMLAttributes<HTMLTextAreaElement> = readOnly\n    ? {}\n    : {\n      onChange: inputDetector.onChange,\n      onCompositionStart: inputDetector.onCompositionStart,\n      onCompositionEnd: inputDetector.onCompositionEnd,\n      onCut: handleCut,\n      onPaste: (event: React.ClipboardEvent) => {\n        event.preventDefault();\n        const { clipboardData } = event;\n\n        // perf: clipboardData.files 读取耗费性能，减少读取次数\n        // TODO 优化 win 上\n        const isCangjie =\n          clipboardData.types.includes(MIME_TYPES.FRAGMENT) ||\n          (clipboardData.getData(MIME_TYPES.HTML) || '').includes(\n            CLIPBOARD_IDENTIFIER,\n          );\n        const isFile = clipboardData.types.includes('Files') && !isCangjie;\n\n        /**\n         * 支持异步读取 native event 对象上的数据\n         * React 16 及更早版本需要调用 event.persist 方法， 参考：https://reactjs.org/docs/legacy-event-pooling.html\n         * React 17 以上版本 event pool 被移除，默认支持异步读取， 参考：https://reactjs.org/blog/2020/08/10/react-v17-rc.html#no-event-pooling\n         */\n        if (event.persist) {\n          event.persist();\n        }\n\n        // 粘贴的是文件，走同步事件，其他类型走异步事件\n        if (window.DataTransfer && !isFile) {\n          let cloneData;\n          try {\n            cloneData = new DataTransfer();\n          } catch (e) {\n            // 兼容chrome 60以下不支持的DataTransfer构造函数的版本\n            cloneData = new PolyfillDataTransfer();\n          }\n          const pasteInputEvent = pasteInput({});\n          for (const { type, kind } of clipboardData.items) {\n            if (kind === 'file') {\n              continue;\n            }\n            const data = clipboardData.getData(type);\n            cloneData.setData(type, data);\n          }\n          // @ts-ignore\n          pasteInputEvent.clipboardData = cloneData;\n          // @ts-ignore\n          controller.run('onPaste', pasteInputEvent);\n        } else {\n          controller.run('onPaste', event);\n        }\n      },\n    };\n\n  const textareaKeys = {\n    [Selector.dockey]: document.key,\n  };\n\n  // TODO: 在 Safari 下阅读模式会丢失内容焦点，导致键盘事件和CCP事件全部失效\n  // Use jsx will lose type check\n  const content = React.createElement(\n    Container,\n    {\n      ...handlers,\n      ref: combinedContainerRef,\n      [Selector.content]: true,\n      'data-zoom': zoom,\n      className,\n      style: {\n        /**\n         * 优先级（从低到高）：\n         * editorStyle: 用于设置一些编辑器通用的样式\n         * defaultStyle: 排版相关默认样式，仓颉不耦合具体排版样式，此字段仅对 bi/zhi 开放，不对外\n         * docStyle: 默认全局样式，从 provider 传入的配置解析\n         * customStyle: 外部传入的任意样式\n         * zoomStyle: 放大时作用，因此优先级最高\n         */\n        ...editorStyle,\n        ...defaultStyle,\n        ...docStyle,\n        ...customStyle,\n        ...zoomStyle,\n      },\n      onClick: handleClickToFocus,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onKeyDown: handleKeyDown,\n      onKeyUp: handleKeyUp,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      onTouchStartCapture: handleTouchStartCapture,\n      onTouchEndCapture: handleTouchEndCapture,\n      onContextMenu: handleContextMenu,\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      onDragEnter: handleDragEnter,\n      onDragStart: handleDragStart,\n    },\n    IS_MOBILE ? <div data-cangjie-hidden data-cangjie-zoomer /> : null,\n    /**\n     * 阅读模式为什么要挂载 textarea 节点？\n     * user-select: none 时浏览器由于丢失了原生选区，无法触发 onCopy 事件，所以这里挂载一个 readOnly 的 textarea 节点用于获取\n     * 浏览器的焦点。\n     */\n    <HiddenTextArea\n      /**\n       * readonly mode disable composition and input\n       * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\n       */\n      readOnly={readOnly}\n      autoFocus={autoFocus && !readOnly}\n      ref={textareaRef}\n      tabIndex={tabIndex}\n      selection={selection}\n      onCopy={handleCopy}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      disabled={isTextareaDisabled}\n      {...textareaKeys}\n      {...editableListeners}\n    />,\n    controller.run('renderEditable', {\n      ...props,\n      contentRef,\n      children: () => (\n        <EditableContent\n          document={document}\n          selection={selection}\n          isFocused={isFocused}\n          controller={controller}\n          contentRef={contentRef}\n          containerRef={containerRef}\n          getScrollableContainer={getScrollableContainer}\n        />\n      )\n    }),\n    <SelectionLayer\n      controller={controller}\n      contentRef={combinedContainerRef}\n      scrollableContainerRef={scrollableContainerRef}\n    />,\n  );\n\n  const externalZoom = useExternalZoom();\n\n  return (\n    <ZoomContainerContext.Provider value={containerRef.current}>\n      <ZoomContext.Provider value={zoom * externalZoom}>\n        {controller.run('renderContent', {\n          ...props,\n          contentRef,\n          children: () => content,\n        })}\n      </ZoomContext.Provider>\n    </ZoomContainerContext.Provider>\n  );\n});\n\n/**\n * Cangjie Content 组件\n * (new plugin 修改)scollbaleContainer 和 scrollableContent 属于 cangjie 本身的职责，从 bi/zhi 移动到 cangjie 中\n * @returns\n */\nfunction ContentWithContext(props: ContentProps) {\n  const contentRef = useRef<HTMLDivElement>(null);\n  const {\n    getScrollableContainer = () => window,\n    getScrollableContent = () => contentRef.current || window.document.body,\n    ...rest\n  } = props;\n\n  return (\n    <ScrollableContainerContext.Provider value={getScrollableContainer()}>\n      <ScrollableContentContext.Provider value={getScrollableContent()}>\n        <Content\n          {...rest}\n          ref={contentRef}\n          getScrollableContent={getScrollableContent}\n          getScrollableContainer={getScrollableContainer}\n        />\n      </ScrollableContentContext.Provider>\n    </ScrollableContainerContext.Provider>\n  );\n}\n\nContent.displayName = 'CangjieContent';\n\nexport default ContentWithContext;\n","import { PendingConfigType, EnablePendingConfig } from '../interfaces/controller';\n\nexport default (config?: EnablePendingConfig): Record<PendingConfigType, boolean> => {\n  let input = false;\n  let selection = false;\n  if (typeof config === 'boolean' || !config) {\n    // @ts-ignore typing narrow error ????\n    input = config || false;\n    // @ts-ignore typing narrow error\n    selection = config || false;\n  } else {\n    input = config.input || false;\n    selection = config.selection || false;\n  }\n  return { input, selection };\n};\n","/** \n * 插件 action 创建快捷方法，解决 action 的 typing 问题\n */\n\n import type { default as Action } from '../interfaces/action';\n \n // utils handler for createAction and judgeAction\n export const createActionHandlers = <P extends {\n   [key: string]: any;\n } = {}>(type: symbol): [\n     (payload?: P) => Action<P>,\n     (action: Action<any>) => action is NonNullable<Action<P>>\n   ] => {\n   const createAction = (\n     payload: P = {} as any,\n   ): Action<P> => ({\n     type,\n     payload,\n   });\n   \n   const isAction = (\n     action: Action<any>,\n   ): action is Action<P> => action?.type === type;\n \n   return [createAction, isAction];\n };\n","import Element from '../models/element';\nimport Document from '../models/document';\nimport Node from '../models/node';\n\nexport function getUserData (\n  document: Document,\n  node: Node | null,\n  uid: string | undefined,\n  key: string,\n) {\n  if (!Element.isElement(node)) {\n    return undefined;\n  }\n  const uuid: string | undefined = node.data?.uuid;\n  const nData = node.data[key];\n  if (uid && uuid) {\n    const uData = document.data.userData?.[uid]?.[uuid]?.[key];\n    return uData || nData;\n  }\n  return nData;\n}\n","/* eslint-disable import/first */\n/**\n * @packageDocumentation\n * @ignore\n */\n\n/**\n * Models中存在循环引用，需要保证子类import在前，父类import在后.\n * 详情请参照models/block.ts头部注释。\n */\nimport { default as Block } from './models/block';\nimport Element from './models/element';\nimport Inline from './models/inline';\nimport Text from './models/text';\nimport Node from './models/node';\nimport Controller, {\n  getDirtyKeysFromElementDiffStrictly,\n} from './controller/index';\nimport Provider from './controller/provider';\nimport Value from './models/value';\nimport Document from './models/document';\nimport Leaf from './models/leaf';\nimport Mark from './models/mark';\nimport Injection from './models/injection';\nimport Decoration from './models/decoration';\nimport Selection from './models/selection';\nimport Point, { TextPoint, EdgePoint } from './models/point';\nimport Path from './models/path';\nimport History from './models/history';\nimport ImmutableRecord from './models/immutableRecord';\nimport Operation, { OperationType } from './models/operation';\nimport * as Commands from './commands/index';\nimport * as Queries from './queries/index';\nimport createPlaceholderPlugin from './plugins/placeholder';\nimport createPerfLazyRenderPlugin from './plugins/perfLazyRender';\nimport createPerfFirstRenderPlugin from './plugins/perfFirstRender';\nimport { useOffsetPosition } from './hooks/useOffsetPosition';\nimport {\n  useZoom,\n  useZoomContainer,\n  ExternalZoomContext,\n  useExternalZoom,\n} from './hooks/useZoom';\nimport useLeafBlockResizer from './hooks/useLeafBlockResizer';\nimport { useSelectionData } from './hooks/useSelectionData';\nimport { useUserData } from './hooks/useUserData';\nimport useHots, {\n  useHotsAtTheStartOfNextFrame,\n  useSelectingHots,\n  useInputingHots,\n  useSelectingHotsAtTheStartOfNextFrame,\n  useInputingHotsAtTheStartOfNextFrame,\n} from './hooks/useHots';\nimport useGroupData from './hooks/useGroupData';\nimport { useScroll } from './hooks/useScroll';\nimport Content from './components/content';\nimport { useScrollableContainer } from './components/ScrollableContainer';\nimport { useScrollableContent, ScrollableContentContext } from './components/ScrollableContent';\nimport { ShadowRoot } from './components/shadowDom';\nimport CangjieDataTransfer from './models/dataTransfer';\nimport CangjieClipboardEvent from './events/cangjieClipboard';\nimport CangjieInputEvent from './events/cangjieInput';\nimport CangjieSelectEvent from './events/cangjieSelect';\nimport * as constants from './constants';\nimport * as environment from './utils/environment';\nimport hotkeys from './utils/hotkeys';\nimport * as domUtils from './utils/dom/index';\nimport keyUtils from './utils/keyUtils';\nimport * as transferUtils from './utils/transfer';\nimport textUtils from './utils/textUtils';\nimport setUtils from './utils/setUtils';\nimport FlushTask from './utils/flushtask';\nimport * as opContextUtils from './utils/opContext';\nimport normalizePendingConfig from './utils/normalizePendingConfig';\nimport { createActionHandlers } from './utils/createAction';\nimport { getUserData } from './utils/getUserData';\nimport { omitEmptyObj } from './utils/omitEmpty';\n\nexport type {\n  DocStyle,\n  RenderNodeStyleProps,\n  RenderContentStyleProps,\n} from './hooks/useStyle';\nexport {\n  useStyle,\n  useContentStyle,\n  useNodeStyle,\n  StyleContext,\n} from './hooks/useStyle';\nexport { SelectionSlot } from './components/selection';\nexport type { SelectionWrapperMap } from './components/selection';\n\nexport type { FlushType } from './utils/flushtask';\n// Interfaces\nexport type {\n  ControllerProperties,\n  ControllerConfigs,\n  ControllerOptions,\n  EnablePendingConfig,\n} from './interfaces/controller';\nexport type { ProviderProps } from './controller/provider';\nexport type { UserDataContent } from './controller/userData'\nexport type { ContentProps, ContentOwnProps } from './components/content';\nexport type { ValueProperties, ValueJSON } from './models/value';\nexport type { DocumentProperties, DocumentJSON } from './models/document';\nexport type { ElementProperties } from './models/element';\nexport type { BlockChild, BlockProperties, BlockJSON } from './models/block';\nexport type {\n  InlineProperties,\n  InlineJSON,\n  InlineChildren,\n} from './models/inline';\nexport type { TextProperties, TextJSON } from './models/text';\nexport type { LeafProperties, LeafJSON } from './models/leaf';\nexport type { MarkProperties, MarkJSON } from './models/mark';\nexport type { InjectionProperties } from './models/injection';\nexport type { DecorationProperties, DecorationJSON } from './models/decoration';\nexport type {\n  SelectionProperties,\n  RangeSelectionProperties,\n  SelectionJSON,\n  RangeSelectionJSON,\n} from './models/selection';\nexport type { PointProperties, PointJSON, PointEdge } from './models/point';\nexport type { BlockChildren } from './models/block';\n\nexport type {\n  AddMarkOperation,\n  InsertNodeOperation,\n  InsertTextOperation,\n  MergeNodeOperation,\n  MoveNodeOperation,\n  RemoveMarkOperation,\n  RemoveNodeOperation,\n  RemoveTextOperation,\n  SetMarkOperation,\n  SetNodeOperation,\n  SetSelectionOperation,\n  SplitNodeOperation,\n  Properties,\n} from './models/operation';\n\nexport type { Observer, Subscription } from './models/observable';\n\nexport * as ContextMenu from './plugins/contextMenu';\nexport { ACTION_CLEAR_MOBILE_MENU } from './plugins/mobile';\nimport * as groupActions from './plugins/group/actions';\nimport * as groupUtils from './plugins/group/utils';\nexport const GroupPlugin = {\n  actions: groupActions,\n  utils: groupUtils, \n}\n\nexport type { default as Action, ConvertToPluginActionCreators, PluginActionCreators, ConvertToPluginActionPredicates, PluginActionPredicates } from './interfaces/action';\nexport type { default as Command, ConvertToPluginCommands, PluginCommands } from './interfaces/command';\nexport type { default as Change } from './interfaces/change';\nexport type { default as Plugin } from './interfaces/plugin';\nexport type { default as Query, QueryNext, ConvertToPluginQueries, PluginQueries, isHideSelectionQuery } from './interfaces/query';\nexport type { Schema } from './plugins/normalization';\nexport type { ContextMenuItem } from './interfaces/contextMenu';\nexport type { default as RenderContentProps } from './interfaces/renderEditableProps';\nexport type { default as RenderEditableProps } from './interfaces/renderEditableProps';\nexport type { default as RenderNodeProps } from './interfaces/renderNodeProps';\nexport type { default as RenderMarkProps } from './interfaces/renderMarkProps';\nexport type { default as Data } from './interfaces/data';\nexport type { InputData } from './interfaces/input';\nexport type { Hot } from './interfaces/hot';\nexport type { NodeSelectToolbarItem, NodeSelectToolbarActionPayload } from './interfaces/nodeSelectToolbar';\nexport type { IsDataChangeAffectParentQueryParams } from './queries/hots';\nexport type { SnippetConfig, SnippetConfigs, SnippetItemBase } from './interfaces/snippet';\nexport { PendingType } from './interfaces/controller';\nexport type { Group } from './interfaces/group';\n\nclass RangeSelection extends Selection {}\n\nexport {\n  // Controller\n  Controller,\n  Provider,\n  // Models\n  Value,\n  Node,\n  Element,\n  Document,\n  Block,\n  Inline,\n  Text,\n  Leaf,\n  Mark,\n  Injection,\n  Decoration,\n  Selection,\n  RangeSelection,\n  Point,\n  TextPoint,\n  EdgePoint,\n  Path,\n  History,\n  ShadowRoot,\n  ImmutableRecord,\n  Operation,\n  // Operations & Commands & Plugins\n  OperationType,\n  Commands,\n  Queries,\n  createPlaceholderPlugin,\n  createPerfLazyRenderPlugin,\n  createPerfFirstRenderPlugin,\n  // Hooks\n  useOffsetPosition,\n  useZoom,\n  useZoomContainer,\n  useExternalZoom,\n  ExternalZoomContext,\n  useLeafBlockResizer,\n  useSelectionData,\n  useUserData,\n  useHots,\n  useSelectingHots,\n  useInputingHots,\n  useHotsAtTheStartOfNextFrame,\n  useSelectingHotsAtTheStartOfNextFrame,\n  useInputingHotsAtTheStartOfNextFrame,\n  useGroupData,\n  useScroll,\n  // Views & Events\n  Content,\n  useScrollableContainer,\n  useScrollableContent,\n  ScrollableContentContext,\n  CangjieDataTransfer,\n  CangjieClipboardEvent,\n  CangjieInputEvent,\n  CangjieSelectEvent,\n  // Miscs\n  constants,\n  environment,\n  hotkeys,\n  domUtils,\n  keyUtils,\n  textUtils,\n  setUtils,\n  transferUtils,\n  FlushTask,\n  opContextUtils,\n  createActionHandlers,\n  getUserData,\n  omitEmptyObj,\n  normalizePendingConfig,\n  getDirtyKeysFromElementDiffStrictly,\n};\n\nexport { createSchema, createStrictSchema } from './mo/schema/createSchema'\n\n// mo base\nexport * from './mo/index';\nexport type { MoPluginSchema } from './mo/type'\n\n// new plugin interface\nexport type { BiPlugin, BiFactory, MobileBiFactory } from './interfaces/plugin/bi';\nexport type { ZhiPlugin, ZhiFactory, MobileZhiFactory } from './interfaces/plugin/zhi';\nexport type { MoPluginConfig, BiPluginConfig, ZhiPluginConfig, MobileBiPluginConfig, MobileZhiPluginConfig } from './interfaces/plugin/base';\n"],"names":["IS_IOS","navigator","window","test","userAgent","MSStream","IS_ANDROID","IS_MOBILE","IS_TOUCH_DEVICE","maxTouchPoints","IS_IPAD","IS_MAC","IS_WINDOWS","IS_FIREFOX","IS_SAFARI","vendor","IS_DEV","process","env","NODE_ENV","IS_NODE","versions","node","getChromeVersion","raw","match","parseInt","isFrozen","obj","Object","deepFreeze","propNames","getOwnPropertyNames","_createForOfIteratorHelperLoose","key","value","freeze","ImmutableRecord","Node","createProperties","attrs","type","isPlainObject","Error","props","toSubType","Text","Element","isText","isElement","getFirstNode","nodes","length","getLastNode","getFirstText","getLastText","Mark","create","properties","isMark","data","fromJSON","json","maybeMark","merge","set","isEqual","mark","equal","toJSON","klass","skipUntil","as","func","index","findIndex","a","slice","takeUntil","hasSameMembers","b","every","aElem","find","bElem","has","some","union","bs","reduce","merged","except","filter","Leaf","isLeaf","text","marks","map","undefined","maybeLeaf","normalizeLeaves","leaves","invalid","normalized","reduceRight","ls","leaf","next","listUtils","unshift","splitLeaves","offset","endOffset","left","right","startOffset","splittedIndex","searchLeafAtOffset","found","addMark","addMarks","removeMark","setMark","newMark","newMarks","m","localCount","cangjieKeyGen","hasWindow","keyUtils","keyStr","parse","split","k","o","resetGenerator","add","newAs","splice","push","remove","intersect","removeDuplicate","isSuperSet","SUPRESS_NORMALIZE","normalize","TEXTS","WeakMap","maybeText","isEmptyText","isTextList","maybeTextList","Array","isArray","options","getTexts","regenerateKey","getLeaves","decorations","firstLeaf","d","forEach","dec","start","end","hasStart","hasEnd","before","bundle","middle","after","concat","l","getMarks","setUtils","getActiveMarks","firstMarks","getMarksBetweenOffsets","result","leafEnd","leafStart","getActiveMarksBetweenOffsets","foundNoMarks","getMarksAtIndex","leafObj","first","newFirst","insertText","delta","beforeText","afterText","newLeaves","newLeaf","removeText","newText","mergeText","other","splitText","position","befores","afters","object","preserveKeys","get","t","join","Path","compare","path","target","Math","min","i","pv","tv","crop","size","ca","cb","decrement","n","increment","newPath","link","ancestor","subPath","isAncestor","p","isDescendant","isBefore","isAfter","isSibling","parent","isPrevSibling","isYounger","pl","tl","isDeeper","isParent","isChild","last","previous","ancestors","common","av","bv","relative","transform","operation","pIndex","pEqual","pYounger","pAbove","np","npIndex","npEqual","npYounger","npAbove","isRoot","whereToStr","where","NodeNotFoundError","createAssertNotFoundError","ofType","assertNotFound","maybeNode","method","setPrototypeOf","prototype","PathNotFoundError","KEYS_TO_EDGES_TABLE_CACHE","linkKeysToEdgesTable","src","table","assertNode","assertElement","assertText","assertBlock","Block","maybeElement","isInline","Inline","isBlock","getNode","assertPath","assertNodeByPath","getNodeByPath","assertTextByPath","assertElementByPath","getPath","hasNode","Boolean","getKeysToEdgesTable","isEmpty","idx","keysToEdgesTable","parentKey","reverse","getPreviousSibling","getPreviousSiblingByPath","lastIndex","getNextSibling","getNextSiblingByPath","getPreviousNode","getPreviousNodeByPath","previousNode","parentPath","parentPrevSibling","getNextNode","getNextNodeByPath","nextNode","parentNextSibling","assertPreviousText","getPreviousText","getPreviousTextByPath","previousPath","getNextText","getNextTextByPath","nextPath","getPreviousBlock","child","block","getClosestBlock","getNextBlock","closest","nested","forEachDescendant","getFurthsest","predicate","getFurthsestByPath","getAncestorsByPath","fursest","getFurthsestInline","getFurthsestBlock","getFurthestOnlyChildAncestor","getFurthestOnlyChildAncestorByPath","furthest","getAncestors","_","getClosest","getClosestByPath","self","getClosestInline","getClosestInlineByPath","assertClosestBlock","getClosestBlockByPath","getClosestBlockFromPoint","getFurthestAncestor","childPath","assertFurthestAncestor","getOffset","childIndex","memo","getParent","getParentByPath","assertParent","element","assertCommonAncestor","getCommonAncestor","aPath","bPath","getTextsBetweenPositions","startKey","endKey","startText","endText","texts","indexOf","getInlines","inlines","isLeafInline","getInlinesByType","mapDescendants","newNodes","ret","iterator","someDescendant","filterDescendants","descendants","findDescendant","contains","replaceNode","noSpacialEffect","maybeParent","maybeTextNode","textNode","insertNode","removeNode","mergeNode","maybeB","withPath","maybeA","aNode","constructor","newNode","splitNode","moveNode","newParentPath","newParent","setNode","str","childFromJSON","maybeInline","maybeLeafInline","maybeBlock","isBlocks","maybeBlocks","isLeafBlock","maybeLeafBlock","getBlocks","array","getBlocksByType","hasBlockChildren","DEFAULT_TYPE","PendingType","PendingConfigType","useHots","controller","onHots","pendingType","disabled","useEffect","enableHots","handleOnHots","hots","sub","hots$","subscribe","unsubscribe","useHotsAtTheStartOfNextFrame","onHotsNextFrame","animId","React","useRef","useCallback","current","requestAnimationFrame","cancelAnimationFrame","useSelectingHots","selection","useSelectingHotsAtTheStartOfNextFrame","useInputingHots","input","useInputingHotsAtTheStartOfNextFrame","isSupportProxy","Proxy","useController","maxPending","context","useContext","ControllerContext","isRendering","useLayoutEffect","useReducer","s","forceRender","hasConsumedValue","lastConsumedValue","useMemo","ctrl","prop","debouncedRerender","Number","isFinite","debounce","noop","subject","connectController","Component","_createElement","OperationType","invert","invertedPath","invertedNewPath","isInvertedYounger","isInvertedAncestor","invertedMark","invertedProperties","keys","prevProperties","prevSelection","Operation","PATH_CACHE","Point","createFromParams","TextPoint","EdgePoint","edge","moveToStartOfNode","firstNode","moveToEndOfNode","lastNode","isTextPoint","isEdgePoint","moveBackward","moveForward","convertToTextPoint","document","point","BEFORE","isInNode","getPathIn","DOCUMENT_TO_PATH_CACHE","moveTo","isAtStartOfNode","isAtEndOfNode","AFTER","trie","classesmjs","classes","Other","Prepend","CR","LF","Control","Extend","Regional_Indicator","SpacingMark","L","V","T","LV","LVT","ZWJ","ExtPict","bin","atob","Uint8Array","charCodeAt","Buffer","from","classTrie","UnicodeTrie","codePointAt","code","hi","low","isSurrogate","pos","ref","ref1","BreakType","NotBreak","BreakStart","Break","BreakLastRegional","BreakPenultimateRegional","shouldBreak","mid","all","rIIndex","lastIndexOf","c","getUnicodeByteOffset","unicodeOffset","nextBreak","string","prev","j","previousBreak","breaks","res","brk","countBreaks","count","SURROGATE_START","SURROGATE_END","SPACE","PUNCTUATION","isChineseChar","char","isValidString","isPunc","isSameCharType","charA","charB","isWord","getNextLetter","GraphemeBreaker","substring","getCharOffset","getCharOffsetBackward","getCharOffsetForward","getCharRange","getWordRange","charAtOffset","lastChar","nextChar","getWordOffsetBackward","getWordOffsetForward","getWordOffset","curChar","getMoveWordOffset","abs","graphemesBreak","NEWLINE","SECLINE","SIMPLE_SPACE","String","fromCharCode","spaceUniCode","nbsp","zwnj","zwj","normalizeText","isValidElement","el","nodeType","ELEMENT_NODE","getAttribute","findClosestInContent","selector","matches","call","parentElement","parentNode","CUSTOM_MIME_TYPES","FRAGMENT","PACKAGE","SYNC","DOCKEY","REFBLOCK","ENCRYPTION","APPLICATION_VSCODE","MIME_TYPES","HTML","TEXT","EVENTS","CURSOR_WIDTH","CURSOR_EDGE_MAX_HEIGHT","CURSOR_EDGE_OFFSET","CANGJIE_EMPTY","CANGJIE_SELECTION_COLOR","CANGJIE_SELECTION_EMPTY_WIDTH","CANGJIE_SELECTION_INACTIVE_COLOR","Z_INDEX_CONTEXTMENU","Selector","content","edgeSelectable","editable","leafBlock","nonSelect","notEditable","dockey","selectionLayer","selectionWrapper","groupBlock","groupKey","hoverWrapper","uuid","MAX_HISTORY_SIZE","GROUP_COLLAPSED_KEY","findPoint","nativeNode","nativeOffset","voidNode","nativeText","textContent","findRange","native","startContainer","endContainer","collapsed","Selection","anchor","focus","getSeletableBlocksFromElement","getRectsFromElement","isPointOnLeftOfRect","x","rect","isPointOnRightOfRect","isPointOnTopOfRect","y","top","isPointOnBottomOfRect","bottom","isPointHorzInsideRect","isPointVertInsideRect","isPointInsideRect","isPointOnRightOfRectNonStrict","isPointOnLeftOfRectNonStrict","SAME_LINE_THRESHOLD","isRectOnSameLineOfRect","newRect","smallerHeight","height","overlap","max","APPROXIMATE_THEREHOLD","approximateEqual","isRectOnLeftOfRect","newContentNode","prevClosestRect","contentRect","compareDocumentPosition","contentNode","DOCUMENT_POSITION_FOLLOWING","isRectOnRightOfRect","DOCUMENT_POSITION_PRECEDING","isRectOnTopOfRect","isRectOnBottomOfRect","getHorzDistance","getClosestAncestorWithBiggerHorizontalRect","getBoundingClientRect","parentRect","edgeSelectableAncestor","edgeSelectableDescendants","querySelectorAll","descendant","_marked","isNonSelect","elementParent","targetElement","cangjieLeafs","cangjieLeaf","contentRects","getClientRects","cangjieVoids","cangjieVoid","_marked2","findClosestRectsInElement","closestBelow","closestLeft","closestRight","closestTop","exactTarget","prevExactBelow","newExactBelow","prevDistance","newDistance","prevExactTop","newExactTop","binarySearchOffset","mouseX","mouseY","rangeStart","rangeEnd","textLength","range","createRange","floor","setStart","setEnd","error","width","textUtils","offsetStart","offsetEnd","rangeRects","r","caretPointFromTargetAndCoord","eventTarget","adjustedX","adjustedY","parentStyle","getComputedStyle","parentLeft","marginLeft","parentRight","marginRight","closestLeftEdge","closestRightEdge","round","nextTextNode","nextElementSibling","querySelector","firstChild","previousElementSibling","leafContent","caretRangeFromTargetAndCoord","shadowRoot","editableRect","root","getRootNode","adjustedTarget","elementFromPoint","nodeKey","pointProperties","ROOT_TO_CONTROLLER","CONTROLLER_TO_KEY_DOM","getElementByCangjieKey","KEY_DOM","Map","findDOMNodeSafely","findDOMNode","findDOMLeaves","findDOMPoint","findDOMRange","isCollapsed","convertToTextPoints","ownerDocument","domStart","domEnd","startVoidNode","getClosestVoid","domNode","setStartBefore","endVoidNode","setEndAfter","console","getAroundRects","prevPoint","nextPoint","domPoint","prevDomPoint","nextDomPoint","firstRange","secondRange","firstRects","secondRects","firstRect","secondRect","findRectsInEdgePoint","DOMRect","isPointAtEdge","findRectFromPoint","isHanging","isAfterNewLine","isAtEdge","edgeRects","domRange","cache","cacheLocalCaret","wrapper","caret","getLocalCaretPos","getLocalCaretPosDetail","shouldBeHangingByVertically","to","fromPos","isCoordAtLeftSide","clientX","articleDom","iterateTextNodesFromPoint","iteratePositionsFromPoint","correctPointInsideInlineOrBlock","query","at","atNode","goDeep","unit","getEdgePoint","isAtEntrance","closestBlock","getClosestSelectableBlock","firstText","lastText","edgeText","isTextAtEdge","step","nextCharStep","shouldCountStartPoint","lastBlock","nodePoint","pointAtDistance","distance","remaining","pt","pointAtNodeEdge","pointAtStartOfNode","pointAtEndOfNode","targetNode","furthestBlock","getFurthestSelectableBlock","getTrueRectFromPoint","closestVoid","rangeRect","getUpsidePoint","lockedX","rectX","currentBlock","currentBlockDOM","currentLeafDOMs","e","leafDOM","blockRects","blockRectsLength","blockRect","getUpsideRange","getStart","moveToStartOfDocument","nextIsHanging","newRange","moveAnchorTo","moveToAnchor","setHanging","getDownsidePoint","getDownsideRange","moveToEndOfDocument","SelectionTrigger","IS_COLLAPSED_CACHE","IS_FORWARD_CACHE","isSelection","shrinkBoundary","ignoreEnd","getEnd","isForward","targetRange","targetEndText","beforeStartText","targetStartText","maybeSelection","isRangeSelection","isValidSelection","anchorNode","focusNode","isAnchorValid","isFocusValid","isValidRangeSelection","selectWordAtPoint","rangSelection","isForwardInDocument","anchorPath","focusPath","DOCUMENT_TO_IS_FORWARD_CACHE","isBackward","getPoint","pointName","sort","startNode","endNode","getClosestNode","moveToEnd","moveStartToStartOfNode","moveAnchorToStartOfNode","moveFocusToStartOfNode","moveStartToEndOfNode","moveAnchorToEndOfNode","moveFocusToEndOfNode","moveEndToStartOfNode","moveEndToEndOfNode","moveFocusTo","flip","moveAnchorBackward","mover","moveAnchorForward","moveFocusBackward","moveFocusForward","moveToFocus","moveToStart","moveToRangeOfNode","updatePoints","moveStartBackward","moveStartForward","moveEndBackward","moveEndForward","move","movePointEdgeKlass","PName","toUpperCase","Edge","newSelection","movePointEdgeSideKlass","side","Side","Klass","getDirectionNode","updater","viewKey","JSON","stringify","Document","isDocument","maybeDocument","getMarksAtRange","getMarksAtPosition","getActiveMarksAtRange","startMarks","endMarks","currentMarks","getInsertMarksAtRange","getNodesAtRange","doc","startPath","endPath","startIndex","endIndex","startBlock","endBlock","pushEdgeNode","ans","rootKey","rootIndex","getClosestVoidByPath","hasVoidParent","hasVoidParentByPath","getFurthsestVoid","getFragmentAtRange","startTextPath","endTextPath","startVoid","endVoid","targetPath","targetPosition","mode","getLeafBlocksAtRange","blocks","getRootBlocksAtRange","isNodeInRange","isNodeInRangeByPath","isCollapsedAtEdge","isBeforeStart","isAfterEnd","getTextsAtRange","getLeafInlinesAtRange","exists","getRootInlinesAtRange","inline","includes","defaultMergeData","Injection","isInjection","mergeData","maybeInjection","injectIntoNode","injections","injection","movePointForward","curry","pn","movePointBackward","movePointWordBackward","placeholder","movePointWordForward","isSelectionInNode","getFirstDataElementPath","view","viewElement","getLastDataElementPath","endElement","getCroppedSelection","visibles","enableVirtualize","validVisibles","visible","selectionStartPath","selectionEndPath","visibleStartKey","visibleEndKey","visibleStart","visibleEnd","selectionStart","selectionEnd","sel","getSiblingTextPoint","isPrev","correctPointAtInlineEdge","correctPointInVoid","isStart","isFocused","setIsFocused","blur","select","applyOperation","SetSelection","userSelect","paramAnchor","paramFocus","isExpanded","correctedSelection","command","moveAnchorToKey","moveAnchorToStartOfBlock","moveAnchorToStartOfPreviousBlock","moveAnchorToEndOfNextBlock","moveFocusToKey","moveToKey","moveFocusWordBackward","moveFocusWordForward","moveFocusToEndOfText","moveFocusToStartOfBlock","moveFocusToEndOfBlock","moveFocusToStartOfDocument","moveFocusToEndOfDocument","moveToEndOfPreviousBlock","moveStartToEndOfPreviousBlock","moveToEndOfNextBlock","moveEndToEndOfNextBlock","moveToEndOfInline","moveEndToEndOfInline","moveToRangeOfDocument","moveToStartOfInline","moveStartToStartOfInline","moveToStartOfBlock","moveStartToStartOfBlock","moveToEndOfBlock","moveEndToEndOfBlock","moveStartToStartOfPreviousBlock","moveToEndOfPreviousText","moveStartToEndOfPreviousText","moveToStartOfNextText","moveEndToStartOfNextText","moveToStartOfPreviousBlock","moveToStartOfNextBlock","moveEndToStartOfNextBlock","moveWordBackward","moveWordForward","removeNodeByKey","removeNodeByPath","oldDoc","mapPoint","RemoveNode","removeTextByKey","removeTextByPath","updated","decs","isAtomic","setDecorations","removals","cursor","startCursor","endCursor","RemoveText","op","moveNodeByKey","moveNodeByPath","MoveNode","deleteExpanded","del","deleteExpandedAtRange","newDocument","PREFIX","splitTpl","splitDescendantsByKey","textKey","textOffset","textPath","splitDescendantsByPath","splitNodeByPath","elements","dropWhile","withoutNormalizing","splitNodeByKey","withOpContext","withoutTracking","insertNodeByPath","valueToUpdate","updatedValue","setValue","clearOperations","insertNodePath","moveNodePath","splitBlock","depth","splitBlockAtRange","isAtBefore","insertEmptyBlock","nextBlock","splitInline","splitInlineAtRange","Infinity","insertBlockTpl","insertInlineTpl","insertTpl","insertNodeByKey","insertPath","InsertNode","isBlockEmpty","ms","insertTextAtRange","newBlock","insertIndex","focusText","insertTextByKey","insertTextByPath","InsertText","insertBlockAtRange","startInline","atEnd","siblingText","splitRange","insertBlock","blockProps","insertInlineAtRange","insertInline","inlineProps","findInsertionNode","fragment","hasSingleNode","fragmentInner","documentInner","documentNode","insertFragmentByKey","insertFragmentByPath","insertFragment","startAncestors","insertFragmentAtRange","updatedTexts","newTexts","lastNewText","blockParent","nextText","subText","offsetToEnd","GraphemesBreaker","firstChildHasBlockChildren","isAtStartOfUnEmptyNode","subRoot","insertFragmentWithRealKeyAtRange","startChild","isAtStart","isAtEnd","lastChild","firstBlock","insertionNode","userData","mergeUserData","lastChildHasBlockChildren","rest","lonelyParent","lonelyChild","excludingLonelyChild","newIndex","nextChild","nextNodes","insertAt","restBlock","inlineChild","inlineIndex","mergeTpl","mergeNodeByKey","mergeNodeByPath","original","addMarkAtRange","activeMarks","addMarkByKey","addMarkByPath","bx","by","ax","ay","AddMark","addMarksAtRange","toggleMark","toggleMarkAtRange","removeMarkAtRange","removeMarkByKey","removeMarkByPath","totalOffset","leafLength","RemoveMark","replaceMark","oldMark","deleteAtRange","detectSelection","isCrossBlock","isStartVoid","isEndVoid","ancestorNodes","endChild","middles","startVoidAncestor","endVoidAncestor","prevText","startParent","startParentIndex","endParentIndex","lonely","takeRightWhile","isEmptyParagraph","nextStart","nextEnd","deleteBackwardAtRange","deleteEdge","isToDelete","siblingBlock","voidParent","updatedSelection","updatedAnchor","deleteForwardAtRange","deleteBackward","deleteForward","createDeleteBoundry","dir","deleteBoundray","getBoundaryOrIteratePositionsFromPoint","defaultBoundary","boundary","deleteBoundrayBackward","deleteBoundrayForward","deleteCharBackward","deleteCharForward","deleteWordBackward","deleteWordForward","deleteLineBackward","deleteLineForward","replaceNodeByKey","replaceNodeByPath","replaceTextByKey","oldText","replaceTextByPath","mergedMarks","setNodeByKey","setNodeByPath","prevNode","SetNode","setBlocks","setBlocksAtRange","startNodeKey","endNodeKey","allBlocks","setInlines","setInlinesAtRange","setMarkByKey","setMarkByPath","SetMark","setTextByKey","setTextByPath","wrapInlineTpl","wrapText","prefix","suffix","wrapTextAtRange","startRange","endRange","wrapBlock","wrapBlockAtRange","firstblock","lastblock","siblings","indexes","ind","wrapBlockByKey","wrapBlockByPath","wrapInline","wrapInlineAtRange","inlineParent","wrapInlineByKey","endInline","inlinekey","rng","startInner","startInnerIndex","endInner","startInlines","endInlines","wrapInlineByPath","unwrapBlockTpl","unwrapTpl","unwrapBlock","unwrapBlockAtRange","wraps","values","wrappers","children","firstMatch","lastMatch","newChild","extra","unwrapBlockByKey","unwrapBlockByPath","unwrapInline","unwrapInlineAtRange","unwrapInlineByKey","unwrapInlineByPath","unwrapNodeByKey","unwrapNodeByPath","parentIndex","grandPath","isFirst","isLast","updatedPath","DATA_CLIPBORAD_CANGJIE","SLASH_PLACEHOLDER","isFileMimeType","mime_type","readClipboardDataFromHtml","html","domparser","DOMParser","parseFromString","clipboardDataNode","clipboardData","body","firstElementChild","attributes","item","nodeName","startsWith","mimeType","replace","RegExp","getClipboardData","dataTransfer","CangjieDataTransfer","nav","clipboard","read","Promise","reject","clipboardItems","clipboardItem","types","getType","blob","file","File","setData","customData","resolve","CustomDataTransfer","dropEffect","effectAllowed","files","img","items","xOffset","yOffset","dragX","dragY","clearData","getData","format","toAdd","kind","Blob","setDragImage","getPrototypeOf","PolyfillDataTransfer","CangjieClipboardEvent","nativeEvent","event","CustomEvent","assign","setClipboardData","CangjieSelectEvent","detail","defaultLocale","copy","cut","selectAll","paste","pasteTips","getTransferType","getEventTransfer","encodedFragment","decodeFragment","biz","FRAGMENT_MATCHER","exec","encoded","fs","getAsFile","err","encodeFragment","btoa","encodeURIComponent","decoded","decodeURIComponent","clip","createClip","createElement","setAttribute","ClipboardManager","callback","isFileData","dataEntries","entries","clipManager","writeFile","succeeded","action","write","copyFragment","imageTypes","imgData","isEmptyObj","omitEmptyObj","omitBy","omitDeepBy","nextObj","forOwn","isObject","createClipboardDataFromSelection","uid","withUserData","acc","originData","nextData","_ref","Copy","Cut","_ref3","Paste","Select","SelectAll","ACTION_COPY","Symbol","ACTION_COPY_FAIL","ACTION_CUT","ACTION_CUT_FAIL","ACTION_PASTE","ACTION_PASTE_FAIL","ACTION_SELECT","ACTION_SELECT_ALL","execCommandPolyfill","maybeHiddenTextArea","activeElement","hiddenTextAreaOriginValue","hiddenTextAreaOriginStart","hiddenTextAreaOriginEnd","HTMLTextAreaElement","execCommand","isBlurred","Commands","flush","pasteMenu","locale","name","role","icon","hotKey","mobile","contextMenu","configs","plugins","menus","readOnly","canCopy","isReadMode","disable","isByTable","group","others","handleAction","run","payload","customEvent","dataType","isShortcut","isPasteEnable","then","onAction","models","useScroll","onStart","onEnd","timeout","isStarted","handleScrollEvent","clearTimeout","setTimeout","addEventListener","removeEventListener","findHangingPosition","originLength","detectRange","detectRects","secondLastRect","lastRect","getTextContentLength","childNode","findTextNodeAtOffset","remainedOffset","childNodes","textContentLength","TEXT_NODE","findEdgePointPosition","maxEdgeHeight","zoom","heightWithZoom","clientLeft","clientTop","findTextPointPosition","preferredEdge","nextLeaf","leafKey","apply","firstRangeRect","lastRangeRect","hangingPosition","detectOffset","rects","followingRect","findCaretPosition","ARROW_SIZE","POPUP_MIN_SPACE","TOP_SAFE_SPACE","getSelectionRect","domRects","getCaretRect","getPopupPosition","popupWidth","popupHeight","defaultTop","isTop","innerHeight","arrowOffset","offsetX","innerWidth","useSelectionData","selectionData$","onSelectionData","deps","subs","blocksKeys","isHideSelection","isSelected","useSelectionDataAtTheStartOfNextFrame","onSelectionDataNextFrame","pendingData","ITEM_HEIGHT","POPUP_HEIGHT","POPUP_BOTTOM_EXTRA_HEIGHT","wrapperStyle","zIndex","backgroundColor","padding","borderRadius","display","flexDirection","opacity","transition","itemStyle","lineHeight","color","minWidth","fontSize","alignItems","justifyContent","whiteSpace","overflow","iconStyle","marginBottom","arrowStyle","arrowStyleTop","ContextMenu","hidePopup","useState","setPosition","rootRef","updatePosition","setNodeVisible","style","buttons","groupA","groupB","styleForWrapper","button","stopPropagation","preventDefault","availableButtons","btn","styleForArrow","Icon","ReactDOM","createPortal","ZoomContext","createContext","ExternalZoomContext","ZoomContainerContext","useZoom","useExternalZoom","useZoomContainer","WIDTH","HEIGHT","ZOOM","POPUP_EXTRA_TOP","POPUP_EXTRA_BOTTOM","rootStyle","background","border","boxShadow","blockContainerStyle","backfaceVisibility","transformOrigin","cleanNode","attr","removeAttribute","clearNode","removeChild","Zoomer","pros","container","cachedBlocks","blockRef","blockNode","pointPosition","dom","maybePrevDom","prevDom","nextDom","prevArticleBlock","cloneNode","nextArticleBlock","articleBlock","domRect","marginTop","offsetY","prevStyle","prevMarginTop","prevMarginBottom","focusedSelection","popupPosition","appendChild","extraOffset","attachNode","MAX_LINE_HEIGHT","EXTRA_BOTTOM_OFFSET","findScrollableContainer","scroller","overflowY","getScrollableContainerInfo","isWindow","documentElement","visualViewport","_visualHeight","scrollerTop","scrollerLeft","scrollerBordersY","scrollerBordersX","scrollerPaddingTop","scrollerPaddingBottom","scrollerPaddingLeft","scrollerPaddingRight","viewportHeight","pageYOffset","pageXOffset","offsetWidth","offsetHeight","scrollTop","scrollLeft","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","scrollerRect","getDOMRectFromSelection","collapsedSelection","cursorRect","scrollToSelection","inlineDOM","inlineRect","cursorTop","cursorLeft","inView","quaterHeight","isHugeElement","partInView","deltaY","scrollTo","behavior","stateMap","THROTTLE_MOVE","SPEED_PIXEL","MAX_SPEED","BOTTOM_EXTRA_HOT_SIZE","TOP_EXTRA_HOT_SIZE","scheduleScroll","params","speed","state","cancelSchedule","px","newSpeed","timer","startScroll","stopScroll","throttle","TouchEvent","touches","clientY","topOffset","bottomOffset","isScrolling","ScrollableContainerContext","useScrollableContainer","HANDLE_WIDTH","HANDLE_DOT_SIZE","HANDLE_TOUCH_SIZE","TYPE_START","TYPE_END","cursorStyle","handleRectStyle","handleRectTop","handleRoundDotStyle","handleRectTopStyle","isPointVisible","pElement","scrollWidth","pRect","updateHandlePosition","loc","blockEvent","caretRangeFromPoint","docNode","ele","Handle","forwardRef","onDrag","onDragStart","onDragEnd","isHidden","handleTouchStart","stopImmediatePropagation","handleTouchEnd","handleDrag","touchMoveRef","passive","capture","Handles","enableZoomer","scrollableContainer","startRef","endRef","outsideScoller","nodeRef","visibility","posStart","posEnd","pairs","optimizeVerticalPosition","orginalY","friendNode","friendRect","friendY","touchPoint","targetPoint","voidRect","voidCenterX","trigger","dragging","setDragging","cancel","dragProps","draggingPoint","propsSelection","setSelection","ACTION_CLEAR_MOBILE_MENU","getDraggingSelection","_mobileDraggingSelection","showPopup","prevRange","getPopupSelection","_mobileFocusedSelection","touchCount","createMobilePlugin","onTouchStart","onMouseDown","renderContent","contextData","shouldRenderH5Controls","isDisabled","isInFocusedSelection","isInRenableSelection","shouldRenderContextMenu","shouldRenderHandles","renderCaret","isDragging","cloneElement","createQueriesPlugin","qrys","queries","onQuery","qry","args","createRenderNodePlugin","renders","renderNodes","renderNode","prevArgs","currentArgs","fn","createCommandsPlugin","cmds","commands","onCommand","cmd","klassToIsType","validateKlass","rule","isType","validateType","validateFirst","validateRules","validateLast","validateParent","rules","testRules","validatePrevious","validateNext","validateNodes","defs","lastCount","def","nextDef","shift","rewind","limit","lastMin","defaultNormalize","isOnlyContainsVoidAndEdgeSelectable","isOnlyContainsAtomic","createNormalizationPlugin","schema","schemaRules","isAtomicDict","isVoidDict","isEdgeSelectableDict","isSideSelectableDict","isVoid","isEdgeSelectable","isSideSelectable","predict","validateNode","normalizeNode","$document","isInlineOrText","createCoreSchemaPlugin","BATCH_UNDO_MERGE_TIME","shouldClear","shouldMerge","prevOp","shouldOverwrite","History","redos","undos","lastUndoCreatedTime","maxHistorySize","moveLastRedoRecordToUndos","newRedos","lastRedoRecord","newUndos","moveLastUndoRecordToRedos","undoRecord","lastUndoRecord","mergeToLastUndoIfNeed","forceMerge","lastBatch","lastOp","overwrite","Date","now","batch","HOTKEYS","bold","compose","moveUpward","moveDownward","extendBackward","extendForward","extendUpward","extendDownward","italic","undo","space","enter","tab","APPLE_HOTKEYS","moveLineBackward","moveLineForward","moveBlockBackward","moveBlockForward","moveToDocumentStart","moveToDocumentEnd","extendWordBackward","extendWordForward","extendLineBackward","extendLineForward","extendBlockBackward","extendBlockForward","extendToDocumentStart","extendToDocumentEnd","redo","transposeCharacter","WINDOWS_HOTKEYS","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","isBold","isCompose","isSelectAll","isMoveBackward","isMoveForward","isMoveUpward","isMoveDownward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendUpward","isExtendDownward","isExtendWordBackward","isExtendWordForward","isExtendLineBackward","isExtendLineForward","isExtendBlockBackward","isExtendBlockForward","isExtendToDocumentStart","isExtendToDocumentEnd","isItalic","isMoveWordBackward","isMoveWordForward","isMoveLineBackward","isMoveLineForward","isMoveBlockBackward","isMoveBlockForward","isMoveToDocumentStart","isMoveToDocumentEnd","isRedo","isSplitBlock","isTransposeCharacter","isUndo","isSpace","isEnter","isCopy","isCut","isPaste","SUPRESS_WITHOUT_SAVING_ERROR","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","deserializeSelection","deserializeOperation","serializeSelection","createHistoryPlugin","history","withoutSaving","newHistory","reversed","undoOperation","onConstruct","privateApplyOperation","flag","saving","operations","newValue","clearHots","onKeyDown","hotkeys","withoutPending","CURSOR_BLINK_ANIMATION_TIME","CURSOR_STYLE","pointerEvents","willChange","useBlinkAnimation","cursorRef","pointStr","isVisible","caretNode","toggleBackgroundColor","isPending","LocalCaret","composing","isComponentPropsEqual","prevProps","nextProps","isRemote","Caret","showCaret","showCaretOnBlur","onBlur","showCaretOnReadOnly","onReadOnly","CangjieInputEvent","findNode","shoudStopInsideVoid","direciton","isBackwardCase","isForwardCase","directionHit","newPoint","perfMark","performance","perfMeasure","measure","warn","Debug","log","bind","IS_TOUCH_MOBILE","environment","createCorePlugin","decorateNode","injectToNode","onApplyOperation","groupNodes","remainedRange","onCopy","cangjieCopyEvent","onCut","cangjieCutEvent","onPaste","cangjiePasteEvent","onCangjieFocus","onCangjieBlur","onCangjieInput","onCangjieSelect","selectionJSONString","selectionWithData","Selecting","onCangjieCopy","onCangjieCut","onCangjieComposingChange","setComposing","onCangjiePaste","transfer","line","onClick","hotKeys","isProceeded","renderEditable","Tag","renderMark","selectionColor","isEditorBusy","onCleanup","mapOperation","isElementInGroup","createMapOperations","gen","uuidKey","getUUIDs","generateUUID","diff","uuids","newUUID","adds","genUUIDForTree","newRoot","adjustSetNodeOperation","prevData","theUUID","thePrevUUID","prevUUID","reset","P","nullish","not","removes","updates","when","id","oldUUID","otherwise","adjustRemoveNodeOperation","adjustInsertNodeOperation","createUUIDQuery","createGetNodeKeyByUUID","getUUIDS","getNodeKeyByUUID","getUUIDSFromDocument","duplications","desendant","toKeyUUIDMap","diffUUIDS","aKeyToUUIDMap","bKeyToUUIDMap","aUUID","bUUID","isEmptyDiff","UPDATE_UUIDS","GENERATE_UUID","updateUUIDs","isUpdateUUIDs","isGenerateUUID","actions","isActions","setNodeUUID","createGenerateUUID","isActionFactory","DEFAULT_UUID_KEY","createUUIDPlugin","config","regenerateDuplicateUUIDS","newUUIDS","ids","dispatch","createMapOperation","onResetValue","TOGGLE_GROUP_FOLD","FOLD_GROUP","EXPAND_GROUP","toggleGroupFold","fold","expand","groupManager","getGroup","mergeGroupData","renderGroup","_value","_controllerValue","generateAllGroups","notifyNewGroups","createGroupPlugin","Status","DEFAULT_FLUSH_TYPE","FLUSH_MAX_WAIT","IS_SUPPORT_IDLE_TASK","IS_SUPPORT_FRAME_TASK","resolveSupportedType","flushType","FlushTask","task","status","Idle","resolved","supportedFlushType","taskId","Pending","requestTask","Canceled","cancelTask","getStatus","requestIdleCallback","cancelIdleCallback","Done","isRangeStart","isRangeEnd","isEdgeAfter","edgePoint","edgePath","nodePath","isEdgeBefore","order","getChildrenDecorations","childrenDecorations","orderArray","decoration","startPoint","endPoint","activeDecorations","Set","getChildrenIsSelected","childrenIsSelected","getChildrenInjections","childInjections","injects","CONTEXT_SPLIT","getContexts","getContextMeta","matched","Observable","linkHead","observer","onData","Subject","ReplaySubject","replays","isSetSelection","getSelectionData","isSelect","ops","getPending","effect","pattern","isInsertTextOperation","isRemoveTextOperation","isInsertOrRemove","isSetSelectionOperation","isContinuousOp","isContinuousInput","operationsWithoutComposing","isTextInput","shouldAppend","prevOps","decorate","ctx","inputData$","cond","textInputPattern","selectionPattern","stubTrue","PendingQueue","pending","pendingGetter","debouncedFlush","enablePending","clear","debounceTime","shouldDebouncedFlush","queue","dispatchPendingTerminal","setInjection","curInjection","inj","setInjections","deleteInjection","omit","nextInjections","UserDataManager","update$","localData","updateNodes","refreshData","targetData","nData","uData","lData","mergeProperties","setLocal","deleteProperties","deleteLocal","uids","deleteData","PerfType","CangjiePerfEvent","dropped","isTextOp","getHotAmongNodes","srcNodes","newDoc","srcNode","getHotsAtRange","afterChangeDoc","ancestorPath","getOpHots","beforeChangeDoc","SplitNode","MergeNode","difference","isExistedHot","searchTable","ancestorsAndSelf","getHots","srcOps","uniq","prevDocument","prevSelectionIn","prevSelectionInPath","selectionIn","selectionInPath","hot","_e","FIELD_SHOULD_NOT_BREAK_PENDING","isInputing","opsLen","isSelecting","isComposing","shouldDebounceFlush","shouldSuppressFlush","EVENTS_SET","isEventHandler","DEFAULT_BUFFER_RANGE","BLOCK_DEFAULT_MIN_HEIGHT","DEFAULT_SCROLL_THROTTLE_INTERVAL","DEFAULT_FIRST_PAINT_BLOCK_SIZE","waitForElementByAnimationFrame","remain","cost","nextRemain","scrollContainerIsTop","scrollContainer","checkArrayAHasElementNotIncludedInArrayB","arrayA","arrayB","arrayAElement","formatMarginFromStyle","margin","parseFloat","isNaN","measureBlockInfo","boundingClientRect","computedStyle","calculateViewPort","scrollElement","bufferRange","editorContainerToScrollContainerDistance","_viewPortStartY","viewPortStartY","viewPortEndY","bufferStartY","bufferEndY","calculateEditorContainerToScrollContainerDistance","editorContainer","scrollContainerIsBody","editorContainerRect","scrollContainerRect","editorContainerStyle","calculateExpectedLayoutInfo","viewStartY","nodeManager","nodeSize","accHeight","lastMarginBottom","expectedBufferStartBlockFound","expectedViewStartBlockFound","expectedBufferEndBlockFound","expectedBufferStartBlockOffset","expectedViewStartBlockOffset","expectedBufferEndBlockOffset","expectedBufferStartBlockY","expectedViewStartBlockY","expectedBufferEndBlockY","cachedBlockProps","getCachedBlockPropsByKey","inputHeight","inputMarginTop","inputMarginBottom","lastAccHeight","calculateBlockStartYByBlockIndex","blockIndex","includeLastMarginBottom","fastDiffOnValueChange","prevView","currView","startBlockKey","startBlockOffset","endBlockOffset","oldStartKeyNewPath","startKeyOffsetChange","prevBlock","currBlock","calculateBlockKeysNeedToMeasure","_prevView","layoutInfoResult","prevLayoutInfoResult","prevExpectedBufferStartBlockOffset","prevExpectedBufferEndBlockOffset","prevVisibleKeys","currentVisibleKeys","newBlockKeys","NodeManager","blockCacheByKey","blockKeyQueue","gc","viewTopBlockLength","gcBlockKeyQueue","setCachedBlockPropsByKey","blockInfo","prevBlockInfo","loadMeasureResult","measureResults","persistStateNode","measureResult","getVirtualizePersistState","blockCache","updateVirtualizePersistState","topBlockKey","shouldPersistState","keyIndex","OutputManager","firstPaintBlockSize","endBlockKey","startViewBlockOffset","beforePlaceholderHeight","afterPlaceholderHeight","setStartEndInfoByOffset","setPlaceholderHeight","precheckOutputByLayoutInfo","calculatePlaceholderHeight","calculateVisibles","loadCalculateLayoutInfo","expectedBlockStartY","expectedBlockEndY","visibleBlockKeys","blockFinalVisibleStates","findTextNode","findCurrentDOMRange","findRangeByEvent","getDOMRects","leafContents","voidContents","specialCodes","addRect","codeNode","splitRows","blockDOMNode","extendToFill","linesRects","newRow","rows","sortIntoRows","insertRow","row","fitRows","offsetRect","newRects","mergeRects","sortedRects","pop","getSelectionLayers","layerFor","getCaretDom","layers","layer","findSelectionSlot","containerKey","containerDOM","scrollToNodeByPath","preventScrollWhenNodeIsVisible","doNothingWhenVirtualizeDisabled","topBlock","virtualizeManager","isNodeVisible","viewInitialized","waitUntilViewInitialized","workflowToScrollToNode","nodeElement","scrollIntoView","scrollToNodeByKey","RESIZE_DEBOUNCE_TIME","ViewManager","scrollListenerElement","scrollHandler","scrollInterval","resizeHandler","resizeObserver","scrollHistoryArray","throttledScrollListener","triggerViewUpdate","prevViewPortStartY","scrollListener","timestamp","valueOf","scrollHistory","updateEditorContainerToScrollContainerDistance","updateViewPort","initScrollListener","destroyScrollListener","initResizeObserver","ResizeObserver","handleResize","detroyResizeObserver","addResizeObserverByKeys","blockKeys","blockKey","blockElement","addResizeObserver","observe","removeResizeObserver","unobserve","measureCurrentViewBlocks","documentKey","cangjieKey","measuredInfo","measureBlocksByKeys","measureTasks","promise","scrollToNodeByIndex","startY","totalStartY","VirtualizeManager","_isActive","outputManager","viewManager","virtualizeId","currentLockedVirtualizeId","setViewInitialized","initViewWorkflow","currentVirtualizeId","setVirtualize","flushVirtualize","nextMeasureResult","coreWorkflow","triggerReRenderActively","measureOnly","shouldAddLock","checkLocked","needToReRender","needToStartNextWorkflow","lock","unlock","newAfterPlaceholderHeight","newBeforePlaceholderHeight","newVisibles","workflowByCurrentViewPort","newVirtualizeId","nodeIndex","workflowOnValueChange","diffResult","resizedNodeEntries","entry","CDocument","hidden","nodeProp","resizedBlockKeys","initView","InitViewOptions","isActive","stop","GroupManager","groups","groups$","CACHE","NODE_GROUP","cleanup","getGroups","force","setGroupData","generateGroup","initGroups","getNodeGroups","elementGroup","groupElement","regenerateGroup","operationWithValue","prevGroup","removeGroup","regenerateGroupFrom","oldNode","currentGroup","nodesInGroup","getNodesInGroup","closestGroup","maybeGroup","getInsivibleNodes","invisibles","topHalfInvisibles","takeWhile","bottomHalfInvisibles","jsonMLGetDescription","asl","currParagraph","jsonMLGetChildren","validChildren","childAsl","maxParagraph","ignore","jsonMLGetTagNameAndAttributes","jsonMLGetTagName","elem","maybeElem","isAttributes","maybeAttrs","jsonMLGetLastChild","JsonMLHasAttributes","jsonMLGetAttributes","jsonMLAppend","jsonMLAppendAt","meta","ch","jsonMLIsEmptyContent","grandChildren","grandChild","grandChildAttrs","grandGrandChildren","grandGrandChild","grandGrandChildAttrs","jsonMLGetText","jsonML","jsonMLIsText","isElementValue","isDocumentValue","nodeMapToObject","styleObj","toStyleObject","styleStr","output","kv","camelCase","trim","normalizeSpacesInHTML","createTextWithString","createEmptyText","createEmptyParagraph","createJsonMLToValue","jsonMLToNode","strictSchema","jsonMLToValue","newJsonML","Value","strict","toNormalize","schemaPlugin","Controller","createAsyncValueToJsonML","asyncNodeToJsonML","valueToJsonML","createValueToJsonML","nodeToJsonML","createJsonMLToNode","plugin","convert","safeAppend","createAsyncNodeToJsonML","decorated","asyncConvert","createNodeToJsonML","MeasureStyle","createIframe","iframe","DomParser","domParser","skipTags","onOpenTag","onText","onCloseTag","init","chunk","contentDocument","innerHTML","htmlDom","traverse","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","originTagName","tagName","traverseChildNodes","toLowerCase","uuidv1","currentDom","State","stack","marksList","listsList","currentListId","currentListLevel","removeMarks","wrapList","unwrapList","isParentOrderedList","getListItemLevel","append","peek","isStackEmpty","getJsonML","Deserializer","htmlFrom","parser","isDomParser","deserialize","htmlToJsonML","onEvent","ok","decodeEntities","MS_WORD","MS_EXCEL","MS_OFFICE","MS_OFFICES","YUQUE","REMAIN_STYLE_SOURCES","isMicrosoftWord","isMicrosoftExcel","isMicrosoftOffice","isYuqueDocs","getHtmlFrom","getJsonMLFromAttr","createHtmlToJsonML","parsedDocument","domJsonML","deserializer","parsedHTML","lastElementChild","outerHTML","jsonMLToHTML","elementWithKey","toString","HTMLProvider","createJsonMLToHTML","defaultRules","contentJsonMLToHTML","hooks","ReactDOMServer","renderToStaticMarkup","createTextToJsonML","textToJsonML","paragraph","createNodeToText","valueToText","nodeToText","createValueToText","injectValueData","v","injectedValue","endsWith","markdownRuleNameMap","blockquote","hr","list","heading","codespan","strikethrough","emphasis","image","createMarkdownToHTML","markdownToHTML","markdown","md","render","ruleName","xhtmlOut","MarkdownIt","summary","names","rewrite","uses","createRenderer","renderer","enable","pluginLoader","use","createHtmlToMarkdown","htmlToMarkdown","Turndown","turndownService","headingStyle","pluginRule","pick","addRule","turndown","defaultBlock","createSerializerPlugin","createSchema","prevSchema","schemas","oldSchema","val","documentSchema","createStrictSchema","blockTypes","inlineTypes","SIMPLE_SPACE_CODE","BREAK_CODE","HEAD_TAG_REG","paragraphTags","h1","h2","h3","h4","h5","h6","div","section","normalizeMarks","normalizeTextUtil","createHTMLToJsonML","htmlToAttrs","converts","f","generateMarks","tag","pasteFrom","prevSibling","parentTagName","isPhantom","phantom","txt","parentType","leafAttrs","prevLeaf","attrsToMarks","handledKeys","rst","restKeys","markData","isObj","attrToMarks","NON_BREAKING_SPACE_CODE","createLeafToElement","jsonMLAttrsToStyles","attrToStyle","inlineCode","leafToElement","marksToAttrs","textMark","len","markToAttrs","htmlToJsonMLAttrs","jsonMLAttrsToStyle","jsonMLAttrsToMarks","markToJsonMLAttrs","createBase","documentFactory","textFactory","createText","base","beforeValueToText","textToValue","createHtml","htmlToValue","valueToHTML","createAsync","asyncValueToJsonML","createMarkdown","hs","markdownToJsonML","jsonMLToMarkdown","markdownToValue","baseSerialzer","textSerializer","htmlSerializer","mdSerializer","asyncSerializer","getSchemaAndPluginsFromMoPlugins","serializerPlugins","serializer","createSerializerOld","createBaseSerializer","createSerializer","Parser","isInSkipTag","callbacks","createHtmlParser","onopentag","ontext","onclosetag","open","BorderStyleEnum","PageBorderDisplay","PageBorderOffsetFrom","PageBorderZOrder","useControllerStatic","FieldsNotAffectSpace","OperationsNotAffectSpace","isSetValueNotAffectSpace","isOperationNotAffectSpace","getDirtyKeysFromOperation","opNode","opNodeKey","nextKey","oldAncestors","newAncestors","getDirtyKeysFromElementDiffStrictly","prevElement","curIndexKey","preIndexKey","dirtyKeys","prevChild","preChildIndexKey","getDirtyKeysFromElementDiff","composingMark","defaultScrollType","insertComposingIntoLeaves","beforeLastLeaf","beforeLastMarks","decorationsMarks","activeDecorationsMarks","shouldConcatBefore","shouldConcatAfter","DEFAULT_VIRTUALIZE_OPTIONS","enableOnDemandViewCalculation","pendingDebounceTime","invisibleCalculationDebounceTime","maxOPsForHotsAnalyze","disableViewVirtualize","registerPlugin","pluginSchema","prevQuery","nextQuery","handlers","$value","$operations","normalizing","tracking","withCommand","destroyed","perf","scrollType","opRelatedId","VIEW_CACHE","VALUE","WeakSet","ELEMENT","DECORATED_ELEMENT","INJECTED_ELEMENT","GROUPED_ELEMENT","LEAVES","DECORATE_NODE","INJECT_TO_NODE","DATA","INJECT_TO_VIEW_ELEMENT","INJECT_TO_VIEW_TEXT","IS_SELECTED","VIEW_NEVER_CALCULATED","terminal$","baseSerializer","$viewDoc","$scrollableContainer","$operationWithValues","onChange","flushTask","autoFocus","hideSelectionOnBlur","testType","onBusyStateChange","pendingQueue","virtualizeOptions","debouncedStartInvisibleCalculationScheduler","onPending","uuidConfig","lengthOfPending","forceRecalculate","virtualize","invisibleCalculationId","visibles$","setValueField","startInvisibleCalculationScheduler","scheduleInvisibleCalculation","deadline","runInvisibleViewCalculation","timeRemaining","didTimeout","calculateInvisibleView","invisible","docInjections","docDecorations","toViewElement","toView","viewDocument","prevDecorations","prevInjections","prevComposing","newViewDocument","calculateViewInVisibleNode","parentVisible","dataUid","setUid","change","__pendingQueue__","createContextMenuPlugin","setReadOnly","normalizeDirtyKeys","normalizeSelection","beforeSetValue","scheduleFlush","resetValue","controllerValue","fns","prevWithCommand","perfClearAll","flushContext","suppressed","debounced","setHots","isPendingEnable","transformDirtyKey","operationNode","extraDirty","opWithContext","beforeApplyValue","dirtyKeysFromOp","normalizeNodeByKey","iterations","childrenLength","groupedNodes","isChildrenGrouped","remained","maybeNestedGroup","lastGroup","toViewText","isCollapsedInText","cachedViewLeaves","cachedDepDecorations","viewLeaves","hasComposingLeaf","cachedViewText","cachedDepLeaves","viewText","isCollapsedInElement","isCollapsedInEmptyElement","computedComposing","nodeDecorations","allDecorations","nodeInjections","allInjections","selfInjections","descendantsInjections","decoratedElement","cachedDecoratedElement","cachedDepsData","depsData","childrenInjections","isChildrenDecorated","decoratedNodes","decoratedChild","groupedElement","cachedGroupedElement","cachedViewElement","cachedDepInjections","injectedElement","viewCache","getInjectedViewData","viewNode","dataNode","firstOp","cacheKey","decorationsChanged","injectionsChanged","injectedDecorations","injectedInjections","parentDecorations","parentInjections","docInjects","recalculateView","cachedViewNode","newViewNode","newViewDoc","getView","shouldRecalculate","hasHots","prevNormalizing","prevPending","prevSaving","nextOperationIndex","operationType","prevTracking","warning","creator","destroy","getViewData","setOpRelatedId","setScrollType","perfStart","subtype","perfEnd","duration","perfDrop","immediately","switchUid","isViewHot","addIsSelected","getIsSelected","removeIsSelected","shouldHideSelectionOnBlur","hasViewNeverCalculatedInVisibles","decoratedDocument","groupedDocument","viewDoc","StyleContext","useStyle","useNodeStyle","docStyle","useContentStyle","Provider","controllerRef","onFirstRender","pluginsRef","onChangeRef","prevValueRef","controllerIns","didMountRef","version","main","Decoration","isDecoration","maybeDecoration","mergeUserProperties","mergedData","mUid","once","getDefaultSelection","isValue","remoteSelections","documentValue","maybeValue","getElement","removed","updateSelections","selections","newAnchor","newFocus","newStart","newEnd","prevDoc","prevInject","injectTargetPath","preserveDecorations","decotation","preserveSelections","preserveInjections","usePendingTerminal","onTerminate","placeholderMarkType","defaultPlaceholerSymbol","placeholderStyle","WebkitUserSelect","innerStyleWithWidth","innerStyle","ContentPlaceholderContext","useContentPlaceholder","defaultPx","FONTSIZE_BIGGER","formatFontSize","szUnit","PlaceholderProvider","placeholderRef","Placeholder","forceUpdate","contentPlaceholderRef","focusKey","needWidth","focusMode","isDefaultPlaceholder","showDefaultPlaceholder","noRender","innerPlaceholderStyle","leave","handlePendingSelectionChange","handlePendingTerminate","createPlaceholderPlugin","isPlaceholderVisible","contentPlaceholderConfig","placeholdersConfig","hasIntersectionObserver","IntersectionObserver","getInstance","instance","elementToHandler","nativeIO","handleIntersectionChange","handler","useElementVisibility","elementRef","defaultVisible","setVisible","isIntersecting","LazyRenderStrategyType","LazyLoadWrapper","PruningManager","selectionUpdator","domUtils","showPrunedElements","PruningWrapper","forceVisible","setIsSelected","setPlaceholderStyle","isElementVisible","prevVisible","placeholderClientRect","DATA_CANGJIE_PERF_PRUNING","ancestorsWithPruning","HTMLElement","createPerfLazyRenderPlugin","strategy","LazyLoad","Pruning","lazyRenderStrategy","factory","defaultConfig","FirstRenderContext","FirstRenderManager","isFirstRenderSlice","firstFrameSize","animationFrameSubject","delayRenderSlices","delays","raf","loop","useShouldMount","shouldMount","setShouldMount","subscription","FirstRenderSlice","createPerfFirstRenderPlugin","Context","useSelectionContext","selectionContext","nodeRect","relativeRect","relativeLeft","useOffsetPosition","caretRef","offsetSeperatorIndex","THROTTLE_TIME_RESIZE","useLeafBlockResizer","updator","useUserData","initValue","euuid","cNode","useGroupData","defaultValue","finalNode","legacyGroupIndex","originalNode","selectorRef","defaultData","groupsMap","makeElementVisible","leftEdge","rightEdge","offsetLeft","offsetRight","horizonOffset","EMPTY_PREFIX","EMPTY_SURFIX","getEmptyValue","EMPTY_TEXT_AREA_VALUE","CHARACTERS_LENGTH_AFTER_USER_INPUT","resetTextAreaValue","textAreaRef","textAreaCacheRef","defaultCaretPosition","diffTextAreaValue","prevTextAreaValue","textAreaValue","prevValueCaretPosition","currentValueCaretPosition","minValueCaretPosition","leftDiffOffset","rawData","cangjieInput","updateComposing","useInputDetector","prevSelectionAfterInput","resetTimer","composingData","plainViewKey","dataSelection","prevDataSelection","rangeStartIndex","rangeEndIndex","mismatchLength","delLength","onCompositionStart","onCompositionEnd","keyCode","MULTIPLE_CLICK_DELAY","TAP_HOLD_DELAY","CARET_MOVE_GAP_TIME","MULTIPLE_CLICK_RANGE","getWordSelection","getSelectionAtLine","blockDomNode","scrollToVisible","shouldSelectOnRightClick","useSelectionCalculator","scrollableContainerRef","isJustTapHold","tapHoldTimer","lastSingleClick","time","lastDoubleClick","lastCaretMoveTime","prevSelectionRef","subtypeTriggerMap","selectStart","selecting","isGapTimeTooShort","MoveUpward","MoveDownward","isNextPointAtEdge","MoveBackward","MoveForward","handleNativeSelectionChange","newCaretPosition","onKeyUp","onMultipleClick","anchorBlock","MultipleClick","onSelectStart","onSelectUpdate","onSelectEnd","rawRange","isClickAtLeftSide","shiftKey","SelectStart","shouldSelect","onTapHoldStart","onTapHoldEnd","PasteInputEvent","SHOULD_FOLLOW_CARET","textAreaProps","spellCheck","commonStyle","outline","caretColor","contain","textAreaStyle","usePointPosition","textareaWrapperRef","textareaWrapper","HiddenTextArea","wrapperRef","createRef","useResumePosition","containerRef","snapshotCursorY","snapshotScrollTop","snapshotCursorPos","shouldResumePosition","enableVirtualizeView","cursorY","scrollback","DEBOUNCE_TIME_SCROLL_BY_SELECTION","useScrollBySelection","contentRef","scrollDepsRef","scrollBySelection","targetSelection","targetComposing","latestDocument","latestSelection","skipScroll","shouldScrollToSelection","attrbiute","Range","isDelayed","usePerf","noTrack","preparePaint","perfType","SelectionRenderer","appearances","globalStyle","setGlobalStyle","info","hasRemote","appearance","RE_RGB","ALPHA_THRESHOLD","LUMINANCE_THRESHOLD","isCoordInsideDOMRect","getBgColor","targetBlock","rgba","rgbaFromString","rgb","rgbs","getLuminance","pow","getCaretColor","luminance","getRectsFromLeaf","leafOffsetStr","leafOffset","getDOMPath","getTraverseRootsByDOMPath","path1","path2","traverseDOMTree","parentContext","isEnded","stopTraverse","childContext","rootPath","commonStartPath","commonEndPath","started","newOpt","ended","traverseDOMForest","startAncestor","endAncestor","commonPath","opt","isOverlapped","getMaxLineSize","extendToFillBetweenLines","lines","startRects","endRects","filled","splitRectsIntoLines","lineSizes","currentIndex","lineId","antiAliasingRects","startSizes","endSizes","filledSizes","lineRects","fitted","isFloatInlineBox","isFloatBlockBox","isLine","isPage","isTableCell","isFullyContained","voidElement","GlobalGroupKey","DefaultGapLabel","getGapLabel","decesdant","conditions","shouldGap","hasOnlyLeafChild","addLineIdToRect","addToRectGroupWithGap","scrollableKey","label","gapLabel","getRectsFromSelection","contentDOM","startBlockPath","endBlockPath","selectionRects","traverseHandler","domKey","voidDOM","lineDOM","edgeSelectableDOM","onlyLeafChild","commonAncestorNode","commonAncestor","startBlockDOM","endBlockDOM","commonAncestorDOM","startDOMPath","endDOMPath","addToResult","targetGroup","getComposingLeaf","findComposingPoint","composingLen","composingEndLeaf","pointAncestor","getSelectionAppearance","selectionWrapperMap","wrapperRectCache","originSelection","targetBlockDOM","correctedPosition","rc","nativeSupport","attachShadow","ShadowRoot","slotStyle","SelectionSlot","slotRef","splitSelectionAndGetWrapper","globalRef","defaultWrapper","useSelectionWrappers","globalWrapperRef","setVisibles","getWrappersBySelection","local","croppedSelection","visibleBlocks","remotes","SelectionLayer","resizeFlag","setResizeFlag","isUnmountedRef","setRemotes","localDepsRef","resizeUpdator","shouldForceUpdate","onInputingHots","localWrappersMap","remoteWrappersMap","useCangjieKeyBindingRef","isGroupCollapsed","isGroupEmpty","blockStyle","inlineStyle","textIndent","maxWidth","voidStyle","VoidInlineWrapper","VoidBlockWrapper","seletableAttrs","finalVisible","nodeStyle","VoidWrapper","LeafComponent","replaceNodeIntoElement","origin","useInputPending","pending$","updateElements","pendingHandler","oldViewText","viewData","tmp","rPath","dPath","documentView","useView","selectedRef","prevSelected","selected","GroupWrapper","g","isComposingMark","isNotComposingMark","checkRerenderNodesBySelectionChange","memoizeOne","shouldRenderNodeKeys","prevStart","prevEnd","startAnchestors","anchestor","prevStartAnchestors","endAnchestors","prevEndAnchestors","shouldComponentUpdate","shouldUpdate","isSelectionPending","pendingSelected","prevValue","shouldRenderSets","renderLeaves","nextStartOffset","hasComposingMark","nextHasComposingMark","marksWithoutComposing","renderLeaf","NodeComponent","pendingElements","updatePendingElements","virtualizeNodeManager","topPath","virtualizePersistState","childNodeKey","renderedChildren","isNonEmptyBlock","isSelectable","binding","attributesWithBinding","nonVoidAttributes","initialChild","comp","VirtualizePlaceholder","useVirtualize","getScrollableContainer","setVirtualizeId","virtualizeResult","arePropsEqual","prevIsFocused","nextSelection","nextView","nextIsFocused","EditableContent","editableRef","useVirtualizeResult","virtualizeAttr","blockFinalVisibleState","FOCUS_SCROLL_DELAY","MAX_VIEWPORT_WAIT_TIME","useClickToScroll","scrollerRef","waitTimer","scheduler","fallbackCall","ScrollableContentContext","useScrollableContent","EVENT_HANDLERS","editorStyle","wordWrap","WebkitTapHighlightColor","CLIPBOARD_IDENTIFIER","useWindowEvent","touchStartFlag","isNotEditable","isInputTarget","HTMLInputElement","useCombinedRefs","refs","targetRef","isValidCopyOrCut","Content","combinedContainerRef","textareaRef","prevWindowHeight","prevWindowWidth","isTextareaDisabled","setIsTextareaDisabled","className","Container","tabIndex","customStyle","defaultStyle","hdls","zoomStyle","disableNativeFocus","selectionCalculator","inputDetector","handleClickToFocus","textarea","preventScroll","handleMouseDown","defaultPrevented","handleMouseUp","handleKeyDown","shouldContinue","handleKeyUp","handleTouchMove","handleTouchStartCapture","handleTouchEndCapture","handleContextMenu","handleDragStart","handleDragOver","handleDrop","handleDragEnter","handleCopy","handleCut","handleFocus","scrollToCaret","currentSelection","handleBlur","triggerCompositionEnd","handleWindowResize","rs","previousHeight","previousWidth","isNativeFocused","isFocusedNow","hasFocus","handleReadOnlyKeyDown","handleReadOnlyKeyUp","editableListeners","isCangjie","isFile","persist","DataTransfer","cloneData","pasteInputEvent","pasteInput","textareaKeys","onMouseUp","onTouchMove","onTouchEnd","onTouchStartCapture","onTouchEndCapture","onContextMenu","onDragOver","onDrop","onDragEnter","externalZoom","ContentWithContext","getScrollableContent","displayName","createActionHandlers","createAction","isAction","getUserData","GroupPlugin","groupActions","utils","groupUtils","RangeSelection"],"mappings":"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AA4B;AACjC,MAAA,IAAIkN,QAAJ,EAAc;AACZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,QAAO,OAAA,CAAC7C,IAAI,CAACa,SAAL,CAAeX,IAAf,EAAqB,CAArB,EAAwByC,MAAxB,CAAD,CAAP,CAAA;AACD,OAAA;;AACD,MAAIC,IAAAA,MAAM,IAAIE,MAAd,EAAsB;AACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,QAAA,OAAO,EAAP,CAAA;AACD,OAAA;AACF,KA7DM,MA6DA,IAAInN,IAAI,KAAK,YAAb,EAA2B;AAChC,MAAA,IAAI,CAACqK,IAAI,CAACmC,QAAL,CAAcd,CAAd,CAAL,EAAuB;AACrB,QAAO,OAAA,CAACnB,IAAD,CAAP,CAAA;AACD,OAAA;;AACD,MAAI0C,IAAAA,MAAM,IAAIC,QAAd,EAAwB;AACtB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,QAAO,OAAA,CAAC7C,IAAI,CAACa,SAAL,CAAeX,IAAf,EAAqB,CAArB,EAAwByC,MAAxB,CAAD,CAAP,CAAA;AACD,OAAA;;AACD,MAAA,IAAIG,MAAJ,EAAY;AACV;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBkB,QAAA,IAAA,IAAA,GAwBWJ,SAxBX;AAAA,YAwBFlD,QAxBE,QAwBFA,QAxBE,CAAA;AAyBV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AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,QAAA,IAAI5C,IAAI,CAAC4B,SAAL,CAAeP,CAAf,EAAkB0B,EAAlB,CAAA,IAAyB/C,IAAI,CAAC+B,QAAL,CAAcgB,EAAd,EAAkB1B,CAAlB,CAA7B,EAAmD;AACjD,UAAA,OAAO,CAACrB,IAAI,CAACa,SAAL,CAAekC,EAAf,EAAmB,CAAnB,EAAsB1B,CAAC,CAAC/K,MAAF,GAAW,CAAjC,CAAD,CAAP,CAAA;AACD,SAAA;;AACD,QAAO,OAAA,CAACyM,EAAD,CAAP,CAAA;AACD,OA7CM,MA6CA,IAAI/C,IAAI,CAACyB,SAAL,CAAeJ,CAAf,EAAkB0B,EAAlB,CAA0BI,KAAAA,OAAO,IAAIF,OAArC,CAAJ,EAAmD;AACxD,QAAA,IAAIJ,QAAJ,EAAc;AACZ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACU,UAAO,OAAA,CAAC7C,IAAI,CAACa,SAAL,CAAeX,IAAf,EAAqB,CAArB,EAAwByC,MAAxB,CAAD,CAAP,CAAA;AACD,SArCD,MAqCO;AACL;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACU,UAAO,OAAA,CAAC3C,IAAI,CAACe,SAAL,CAAeb,IAAf,EAAqB,CAArB,EAAwByC,MAAxB,CAAD,CAAP,CAAA;AACD,SAAA;AACF,OA7EM,MA6EA,IAAIM,OAAO,IAAIC,SAAX,IAAwBC,OAA5B,EAAqC;AAC1C,QAAA,IAAIN,QAAJ,EAAc;AACZ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEU,UAAO,OAAA,CAAC7C,IAAI,CAACe,SAAL,CAAef,IAAI,CAACa,SAAL,CAAeX,IAAf,EAAqB,CAArB,EAAwByC,MAAxB,CAAf,EAAgD,CAAhD,EAAmDK,OAAnD,CAAD,CAAP,CAAA;AACD,SAAA;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,QAAO,OAAA,CAAChD,IAAI,CAACe,SAAL,CAAeb,IAAf,EAAqB,CAArB,EAAwB8C,OAAxB,CAAD,CAAP,CAAA;AACD,OAzHM,MAyHA,IAAIH,QAAJ,EAAc;AACnB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQ,QAAO,OAAA,CA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSoE,aAAP,SAAkBlP,UAAAA,CAAAA,GAAlB,EAA+B;AAC7B,IAAA,IAAMZ,IAAI,GAAG,IAAA,CAAKqQ,OAAL,CAAazP,GAAb,CAAb,CAAA;AACA,IAAOkP,OAAAA,WAAU,CAAC9P,IAAD,EAAO,oBAAP,EAA6B,IAAA,CAAKsQ,UAAL,CAAgB1P,GAAhB,CAA7B,CAAjB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS6P,mBAAP,SAAwB/E,gBAAAA,CAAAA,IAAxB,EAAoC;AAClC,IAAA,IAAM1L,IAAI,GAAG,IAAA,CAAKwQ,aAAL,CAAmB9E,IAAnB,CAAb,CAAA;AACA,IAAA,OAAOoE,WAAU,CAAC9P,IAAD,EAAO,0BAAP,EAAmC0L,IAAnC,CAAjB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSmE,gBAAP,SAAqBjP,aAAAA,CAAAA,GAArB,EAAkC;AAChC,IAAA,IAAMZ,IAAI,GAAG,IAAA,CAAKqQ,OAAL,CAAazP,GAAb,CAAb,CAAA;AACA,IAAOiP,OAAAA,cAAa,CAAC7P,IAAD,EAAO,uBAAP,EAAgC,IAAA,CAAKsQ,UAAL,CAAgB1P,GAAhB,CAAhC,CAApB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS8P,sBAAP,SAA2BhF,mBAAAA,CAAAA,IAA3B,EAAuC;AACrC,IAAA,IAAM1L,IAAI,GAAG,IAAA,CAAKwQ,aAAL,CAAmB9E,IAAnB,CAAb,CAAA;AACA,IAAA,OAAOmE,cAAa,CAAC7P,IAAD,EAAO,6BAAP,EAAsC0L,IAAtC,CAApB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS4E,aAAP,SAAkB1P,UAAAA,CAAAA,GAAlB,EAA+B;AAC7B,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI8K,IAAAA,IAAI,KAAK,IAAb,EAAmB;AACjB,MAAA,MAAM,IAAI6D,iBAAJ,CAAsB3O,GAAtB,CAAN,CAAA;AACD,KAAA;;AACD,IAAA,OAAO8K,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSkF,UAAP,SAAehQ,OAAAA,CAAAA,GAAf,EAA4B;AAC1B,IAAA,OAAOiQ,OAAO,CAAC,IAAA,CAAKC,mBAAL,EAA2BlQ,CAAAA,GAA3B,CAAD,CAAd,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSmQ,EAAAA,MAAAA,CAAAA,UAAP,SAAiB,OAAA,GAAA;AAAA,IAAA,IACPlP,KADO,GACG,IADH,CACPA,KADO,CAAA;AAEf,IAAOA,OAAAA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsBN,MAAI,CAACE,MAAL,CAAYG,KAAK,CAAC,CAAD,CAAjB,CAAtB,IAA+C,CAACA,KAAK,CAAC,CAAD,CAAL,CAAS4C,IAAhE,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS4L,UAAP,SAAezP,OAAAA,CAAAA,GAAf,EAA4B;AAC1B,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;AACA,IAAA,OAAO,IAAK4P,CAAAA,aAAL,CAAmB9E,IAAnB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS8E,gBAAP,SAAqB9E,aAAAA,CAAAA,IAArB,EAAwC;AACtC,IAAI,IAAA,CAACA,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAOA,OAAAA,IAAI,CAACvH,MAAL,CAAY,UAACmI,CAAD,EAAiBlJ,KAAjB,EAAgC4N,GAAhC,EAAwC;AACzD,MAAI,IAAA,CAAC1E,CAAL,EAAQ;AACN,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;;AACD,MAAA,IAAMtM,IAAI,GAAGsM,CAAC,CAAC/K,SAAF,EAAb,CAAA;;AACA,MAAA,IAAIvB,IAAI,CAAC0B,MAAL,EAAJ,EAAmB;AACjB,QAAOsP,OAAAA,GAAG,KAAKtF,IAAI,CAAC5J,MAAL,GAAc,CAAtB,GAA0B9B,IAA1B,GAAiC,IAAxC,CAAA;AACD,OAAA;;AACD,MAAA,OAAOA,IAAI,CAAC6B,KAAL,CAAWuB,KAAX,KAAqB,IAA5B,CAAA;AACD,KATM,EASJ,IATI,CAAP,CAAA;AAUD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSuN,UAAP,SAAe/P,OAAAA,CAAAA,GAAf,EAA4B;AAC1B,IAAA,IAAIA,GAAG,KAAK,IAAKA,CAAAA,GAAjB,EAAsB;AACpB,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAMqQ,gBAAgB,GAAG,IAAKH,CAAAA,mBAAL,EAAzB,CAAA;;AACA,IAAA,IAAI,CAACG,gBAAgB,CAACrQ,GAAD,CAArB,EAA4B;AAC1B,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAM8K,IAAAA,IAAU,GAAG,EAAnB,CAAA;AACA,IAAI3E,IAAAA,CAAC,GAAGnG,GAAR,CAAA;;AACA,IAAA,OAAOqQ,gBAAgB,CAAClK,CAAD,CAAvB,EAA4B;AAAA,MACCkK,IAAAA,mBAAAA,GAAAA,gBAAgB,CAAClK,CAAD,CADjB;AAAA,UACnBmK,SADmB,GAAA,mBAAA,CAAA,CAAA,CAAA;AAAA,UACR9N,MADQ,GAAA,mBAAA,CAAA,CAAA,CAAA,CAAA;AAE1BsI,MAAAA,IAAI,CAACrE,IAAL,CAAUjE,MAAV,CAAA,CAAA;AACA2D,MAAAA,CAAC,GAAGmK,SAAJ,CAAA;AACD,KAAA;;AACDxF,IAAAA,IAAI,CAACyF,OAAL,EAAA,CAAA;AACA,IAAA,OAAOzF,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS0F,qBAAP,SAA0BxQ,kBAAAA,CAAAA,GAA1B,EAAuC;AACrC,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAD,IAASA,IAAI,CAAC5J,MAAL,KAAgB,CAA7B,EAAgC;AAC9B,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAKuP,CAAAA,wBAAL,CAA8B3F,IAA9B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS2F,2BAAP,SAAgC3F,wBAAAA,CAAAA,IAAhC,EAA4C;AAC1C,IAAM4F,IAAAA,SAAS,GAAG5F,IAAI,CAACA,IAAI,CAAC5J,MAAL,GAAc,CAAf,CAAtB,CAAA;;AACA,IAAIwP,IAAAA,SAAS,IAAI,CAAjB,EAAoB;AAClB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAO,OAAA,IAAA,CAAKd,aAAL,CAAmBhF,IAAI,CAACa,SAAL,CAAeX,IAAf,CAAnB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS6F,iBAAP,SAAsB3Q,cAAAA,CAAAA,GAAtB,EAAmC;AACjC,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAD,IAASA,IAAI,CAAC5J,MAAL,KAAgB,CAA7B,EAAgC;AAC9B,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAK0P,CAAAA,oBAAL,CAA0B9F,IAA1B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS8F,uBAAP,SAA4B9F,oBAAAA,CAAAA,IAA5B,EAAwC;AACtC,IAAO,OAAA,IAAA,CAAK8E,aAAL,CAAmBhF,IAAI,CAACe,SAAL,CAAeb,IAAf,CAAnB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS+F,kBAAP,SAAuB7Q,eAAAA,CAAAA,GAAvB,EAAoC;AAClC,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAKgG,CAAAA,qBAAL,CAA2BhG,IAA3B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSgG,wBAAP,SAA6BhG,qBAAAA,CAAAA,IAA7B,EAAyC;AACvC,IAAA,IAAIiG,YAAY,GAAG,IAAA,CAAKN,wBAAL,CAA8B3F,IAA9B,CAAnB,CAAA;AACA,IAAA,IAAIkG,UAAU,GAAGpG,IAAI,CAAC0B,MAAL,CAAYxB,IAAZ,CAAjB,CAAA;;AACA,IAAA,OAAO,CAACiG,YAAD,IAAiBC,UAAU,CAAC9P,MAAnC,EAA2C;AACzC,MAAA,IAAM+P,iBAAiB,GAAG,IAAA,CAAKR,wBAAL,CAA8BO,UAA9B,CAA1B,CAAA;AACAD,MAAAA,YAAY,GAAGE,iBAAiB,IAAIA,iBAAiB,CAAC9P,WAAlB,EAApC,CAAA;AACA6P,MAAAA,UAAU,GAAGpG,IAAI,CAAC0B,MAAL,CAAY0E,UAAZ,CAAb,CAAA;AACD,KAAA;;AACD,IAAA,OAAOD,YAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSG,cAAP,SAAmBlR,WAAAA,CAAAA,GAAnB,EAAgC;AAC9B,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAKqG,CAAAA,iBAAL,CAAuBrG,IAAvB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSqG,oBAAP,SAAyBrG,iBAAAA,CAAAA,IAAzB,EAAqC;AACnC,IAAA,IAAIsG,QAAQ,GAAG,IAAA,CAAKR,oBAAL,CAA0B9F,IAA1B,CAAf,CAAA;AACA,IAAA,IAAIkG,UAAU,GAAGpG,IAAI,CAAC0B,MAAL,CAAYxB,IAAZ,CAAjB,CAAA;;AACA,IAAA,OAAO,CAACsG,QAAD,IAAaJ,UAAU,CAAC9P,MAA/B,EAAuC;AACrC,MAAA,IAAMmQ,iBAAiB,GAAG,IAAA,CAAKT,oBAAL,CAA0BI,UAA1B,CAA1B,CAAA;AACAI,MAAAA,QAAQ,GAAGC,iBAAiB,IAAIA,iBAAiB,CAACrQ,YAAlB,EAAhC,CAAA;AACAgQ,MAAAA,UAAU,GAAGpG,IAAI,CAAC0B,MAAL,CAAY0E,UAAZ,CAAb,CAAA;AACD,KAAA;;AACD,IAAA,OAAOI,QAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSE,qBAAP,SAA0BtR,kBAAAA,CAAAA,GAA1B,EAAuC;AACrC,IAAA,IAAM6D,IAAI,GAAG,IAAA,CAAK0N,eAAL,CAAqBvR,GAArB,CAAb,CAAA;AACA,IAAA,OAAOkP,WAAU,CAACrL,IAAD,EAAO,oBAAP,EAA6B7D,GAA7B,CAAjB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSuR,kBAAP,SAAuBvR,eAAAA,CAAAA,GAAvB,EAAoC;AAClC,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAA,IAAI,CAAC8K,IAAD,IAAS,CAACA,IAAI,CAAC5J,MAAnB,EAA2B;AACzB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAKsQ,CAAAA,qBAAL,CAA2B1G,IAA3B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS0G,wBAAP,SAA6B1G,qBAAAA,CAAAA,IAA7B,EAAyC;AACvC,IAAA,IAAIiC,QAAQ,GAAG,IAAA,CAAK+D,qBAAL,CAA2BhG,IAA3B,CAAf,CAAA;;AACA,IAAA,OAAO,CAAAiC,SAAAA,GAAAA,QAAQ,KAAR,IAAA,IAAA,SAAA,CAAUhM,SAAV,EAAA,IAAyB,CAACgM,QAAQ,CAAC9L,KAAT,CAAeC,MAAhD,EAAwD;AAAA,MAAA,IAAA,SAAA,CAAA;;AACtD,MAAMuQ,IAAAA,YAAY,GAAG,IAAK1B,CAAAA,OAAL,CAAahD,QAAQ,CAAC/M,GAAtB,CAArB,CAAA;;AACA,MAAI,IAAA,CAACyR,YAAL,EAAmB;AACjB,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;;AACD1E,MAAAA,QAAQ,GAAG,IAAA,CAAK+D,qBAAL,CAA2BW,YAA3B,CAAX,CAAA;AACD,KAAA;;AACD,IAAI,IAAA,CAAC1E,QAAL,EAAe;AACb,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAOA,OAAAA,QAAQ,CAAC1L,WAAT,EAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSqQ,cAAP,SAAmB1R,WAAAA,CAAAA,GAAnB,EAAgC;AAC9B,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAA,IAAI,CAAC8K,IAAD,IAAS,CAACA,IAAI,CAAC5J,MAAnB,EAA2B;AACzB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAKyQ,CAAAA,iBAAL,CAAuB7G,IAAvB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS6G,oBAAP,SAAyB7G,iBAAAA,CAAAA,IAAzB,EAAqC;AACnC,IAAA,IAAIrG,IAAI,GAAG,IAAA,CAAK0M,iBAAL,CAAuBrG,IAAvB,CAAX,CAAA;;AACA,IAAA,OAAO,CAAArG,KAAAA,GAAAA,IAAI,KAAJ,IAAA,IAAA,KAAA,CAAM1D,SAAN,EAAA,IAAqB,CAAC0D,IAAI,CAACxD,KAAL,CAAWC,MAAxC,EAAgD;AAAA,MAAA,IAAA,KAAA,CAAA;;AAC9C,MAAM0Q,IAAAA,QAAQ,GAAG,IAAK7B,CAAAA,OAAL,CAAatL,IAAI,CAACzE,GAAlB,CAAjB,CAAA;;AACA,MAAI,IAAA,CAAC4R,QAAL,EAAe;AACb,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;;AACDnN,MAAAA,IAAI,GAAG,IAAA,CAAK0M,iBAAL,CAAuBS,QAAvB,CAAP,CAAA;AACD,KAAA;;AACD,IAAI,IAAA,CAACnN,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAOA,OAAAA,IAAI,CAACrD,YAAL,EAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSyQ,mBAAP,SAAwB7R,gBAAAA,CAAAA,GAAxB,EAAqC;AACnC,IAAA,IAAM8R,KAAK,GAAG,IAAA,CAAKrC,OAAL,CAAazP,GAAb,CAAd,CAAA;;AACA,IAAI,IAAA,CAAC8R,KAAL,EAAY;AACV,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIvI,KAAJ,CAAA;;AACA,IAAA,IAAI6F,KAAK,CAACI,OAAN,CAAcsC,KAAd,CAAJ,EAA0B;AACxBvI,MAAAA,KAAK,GAAGuI,KAAK,CAAC1Q,YAAN,EAAR,CAAA;AACD,KAFD,MAEO;AACL,MAAA,IAAM2Q,KAAK,GAAG,IAAA,CAAKC,eAAL,CAAqBhS,GAArB,CAAd,CAAA;AACAuJ,MAAAA,KAAK,GAAGwI,KAAK,CAAC3Q,YAAN,EAAR,CAAA;AACD,KAAA;;AAED,IAAM2L,IAAAA,QAAQ,GAAGxD,KAAK,IAAI,IAAA,CAAKgI,eAAL,CAAqBhI,KAAK,CAACvJ,GAA3B,CAA1B,CAAA;;AACA,IAAI,IAAA,CAAC+M,QAAL,EAAe;AACb,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,KAAKiF,eAAL,CAAqBjF,QAAQ,CAAC/M,GAA9B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSiS,eAAP,SAAoBjS,YAAAA,CAAAA,GAApB,EAAiC;AAC/B,IAAA,IAAM8R,KAAK,GAAG,IAAA,CAAKrC,OAAL,CAAazP,GAAb,CAAd,CAAA;;AACA,IAAI,IAAA,CAAC8R,KAAL,EAAY;AACV,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAIhF,IAAJ,CAAA;;AAEA,IAAA,IAAIsC,KAAK,CAACI,OAAN,CAAcsC,KAAd,CAAJ,EAA0B;AACxBhF,MAAAA,IAAI,GAAGgF,KAAK,CAACzQ,WAAN,EAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,IAAM0Q,KAAK,GAAG,IAAA,CAAKC,eAAL,CAAqBhS,GAArB,CAAd,CAAA;AACA8M,MAAAA,IAAI,GAAGiF,KAAK,CAAE1Q,WAAP,EAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAI,CAACyL,IAAL,EAAW,OAAO,IAAP,CAAA;AAEX,IAAMrI,IAAAA,IAAI,GAAG,IAAKiN,CAAAA,WAAL,CAAiB5E,IAAI,CAAC9M,GAAtB,CAAb,CAAA;AACA,IAAA,IAAI,CAACyE,IAAL,EAAW,OAAO,IAAP,CAAA;AAEX,IAAMyN,IAAAA,OAAO,GAAG,IAAKF,CAAAA,eAAL,CAAqBvN,IAAI,CAACzE,GAA1B,CAAhB,CAAA;AACA,IAAA,OAAOkS,OAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACShC,EAAAA,MAAAA,CAAAA,sBAAP,SAA6B,mBAAA,GAAA;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AAC3B,IAAA,IAAI,CAACtB,yBAAyB,CAACzL,GAA1B,CAA8B,IAA9B,CAAL,EAA0C;AAAA,MAAA,CAAA,YAAA;AAAA,QAAA,IAChCnD,GADgC,GACjB,MADiB,CAChCA,GADgC;AAAA,YAC3BiB,KAD2B,GACjB,MADiB,CAC3BA,KAD2B,CAAA;AAAA,QAAA,IAEhCC,MAFgC,GAErBD,KAFqB,CAEhCC,MAFgC,CAAA;AAGxC,QAAA,IAAM6N,KAAuB,GAAGpP,MAAM,CAAC4B,MAAP,CAAc,IAAd,CAAhC,CAAA;;AAHwC,QAAA,IAAA,KAAA,GAAA,SAAA,KAAA,CAI/B2J,CAJ+B,EAAA;AAKtC,UAAA,IAAM9L,IAAI,GAAG6B,KAAK,CAACiK,CAAD,CAAlB,CAAA;AACA6D,UAAAA,KAAK,CAAC3P,IAAI,CAACY,GAAN,CAAL,GAAkB,CAACA,GAAD,EAAMkL,CAAN,CAAlB,CAAA;;AACA,UAAA,IAAI,CAACrK,OAAO,CAACE,SAAR,CAAkB3B,IAAlB,CAAL,EAA8B;AAC5B,YAAA,OAAA,UAAA,CAAA;AACD,WAAA;;AAED,UAAA,IAAM+S,MAAM,GAAG/S,IAAI,CAAC8Q,mBAAL,EAAf,CAXsC;;AAatC9Q,UAAAA,IAAI,CAACgT,iBAAL,CAAuB,UAAC1G,CAAD,EAAO;AAC5BqD,YAAAA,KAAK,CAACrD,CAAC,CAAC1L,GAAH,CAAL,GAAemS,MAAM,CAACzG,CAAC,CAAC1L,GAAH,CAArB,CAAA;AACD,WAFD,CAAA,CAAA;AAbsC,SAAA,CAAA;;AAIxC,QAAA,KAAK,IAAIkL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhK,MAApB,EAA4BgK,CAAC,IAAI,CAAjC,EAAoC;AAAA,UAAA,IAAA,IAAA,GAAA,KAAA,CAA3BA,CAA2B,CAAA,CAAA;;AAAA,UAIhC,IAAA,IAAA,KAAA,UAAA,EAAA,SAAA;AAQH,SAAA;;AACD0D,QAAAA,yBAAyB,CAAC7M,GAA1B,CAA8B,MAA9B,EAAoCgN,KAApC,CAAA,CAAA;AAjBwC,OAAA,GAAA,CAAA;AAkBzC,KAAA;;AACD,IAAA,OAAOH,yBAAyB,CAACnE,GAA1B,CAA8B,IAA9B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS4H,EAAAA,MAAAA,CAAAA,eAAP,SAAA,YAAA,CAAoBrS,GAApB,EAAiCsS,SAAjC,EAAgE;AAC9D,IAAA,IAAMxH,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,KAAKyH,kBAAL,CAAwBzH,IAAxB,EAA8BwH,SAA9B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSC,EAAAA,MAAAA,CAAAA,qBAAP,SAAA,kBAAA,CAA0BzH,IAA1B,EAAsCwH,SAAtC,EAAqE;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AACnE,IAAA,IAAMtF,SAAS,GAAG,IAAA,CAAKwF,kBAAL,CAAwB1H,IAAxB,CAAlB,CAAA;;AACA,IAAA,IAAI,CAACkC,SAAD,IAAc,CAACA,SAAS,CAAC9L,MAA7B,EAAqC;AACnC,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAMuR,IAAAA,OAAO,GAAGzF,SAAS,CAAC/J,IAAV,CAAe,UAAC7D,IAAD,EAAOoD,KAAP,EAAiB;AAC9C,MAAIpD,IAAAA,IAAI,KAAK,MAAb,EAAmB;AACjB,QAAA,OAAO,KAAP,CAAA;AACD,OAAA;;AACD,MAAA,OAAOkT,SAAS,CAAClT,IAAD,EAAOoD,KAAP,CAAhB,CAAA;AACD,KALe,EAKb,EALa,CAAhB,CAAA;AAMA,IAAOiQ,OAAAA,OAAO,IAAI,IAAlB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSC,qBAAP,SAA0B1S,kBAAAA,CAAAA,GAA1B,EAAsD;AACpD,IAAMZ,IAAAA,IAAI,GAAG,IAAKiT,CAAAA,YAAL,CAAkBrS,GAAlB,EAAuB,UAAC0L,CAAD,EAAA;AAAA,MAAA,OAAO6D,MAAM,CAACD,QAAP,CAAgB5D,CAAhB,CAAP,CAAA;AAAA,KAAvB,CAAb,CAAA;;AACA,IAAItM,IAAAA,IAAI,IAAJ,IAAA,IAAAA,IAAI,CAAE2B,SAAN,EAAA,IAAqB3B,IAAI,CAACkQ,QAAL,EAAzB,EAA0C;AACxC,MAAA,OAAOlQ,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSuT,oBAAP,SAAyB3S,iBAAAA,CAAAA,GAAzB,EAAoD;AAClD,IAAMZ,IAAAA,IAAI,GAAG,IAAKiT,CAAAA,YAAL,CAAkBrS,GAAlB,EAAuB,UAAC0L,CAAD,EAAA;AAAA,MAAA,OAAO0D,KAAK,CAACI,OAAN,CAAc9D,CAAd,CAAP,CAAA;AAAA,KAAvB,CAAb,CAAA;;AACA,IAAItM,IAAAA,IAAI,IAAJ,IAAA,IAAAA,IAAI,CAAE2B,SAAN,EAAA,IAAqB3B,IAAI,CAACoQ,OAAL,EAAzB,EAAyC;AACvC,MAAA,OAAOpQ,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSwT,+BAAP,SAAoC5S,4BAAAA,CAAAA,GAApC,EAAiD;AAC/C,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAK+H,CAAAA,kCAAL,CAAwC/H,IAAxC,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS+H,qCAAP,SAA0C/H,kCAAAA,CAAAA,IAA1C,EAAsD;AACpD,IAAA,IAAMkC,SAAS,GAAG,IAAA,CAAKwF,kBAAL,CAAwB1H,IAAxB,CAAlB,CAAA;;AACA,IAAI,IAAA,CAACkC,SAAL,EAAgB;AACd,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAM8F,QAAQ,GAAG9F,SAAS,CACvBrK,KADc,CACR,CADQ,CACL;AADK,KAEdM,IAFc,CAET,UAAC7D,IAAD,EAAA;AAAA,MAAUA,OAAAA,IAAI,YAAYyB,OAAhB,IAA2BzB,IAAI,CAAC6B,KAAL,CAAWC,MAAX,KAAsB,CAA3D,CAAA;AAAA,KAFS,CAAjB,CAAA;AAIA,IAAO4R,OAAAA,QAAQ,IAAI,IAAnB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSC,eAAP,SAAoB/S,YAAAA,CAAAA,GAApB,EAA4C;AAC1C,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;AACA,IAAA,OAAO,IAAKwS,CAAAA,kBAAL,CAAwB1H,IAAxB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS0H,qBAAP,SAA0B1H,kBAAAA,CAAAA,IAA1B,EAAwD;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AACtD,IAAI,IAAA,CAACA,IAAD,IAAS,CAAC,KAAK8E,aAAL,CAAmB9E,IAAnB,CAAd,EAAwC;AACtC,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AACD,IAAMkC,IAAAA,SAAoB,GAAG,EAA7B,CAAA;AAEAlC,IAAAA,IAAI,CAAC/C,OAAL,CAAa,UAACiL,CAAD,EAAIxQ,KAAJ,EAAc;AACzB,MAAMuJ,IAAAA,OAAO,GAAGjB,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAcH,KAAd,CAAhB,CAAA;;AACA,MAAA,IAAMsJ,QAAQ,GAAG,MAAI,CAAC8D,aAAL,CAAmB7D,OAAnB,CAAjB,CAAA;;AACA,MAAA,IAAID,QAAJ,IAAIA,IAAAA,IAAAA,QAAQ,CAAE/K,SAAV,EAAJ,EAA2B;AACzBiM,QAAAA,SAAS,CAACvG,IAAV,CAAeqF,QAAf,CAAA,CAAA;AACD,OAAA;AACF,KAND,CAAA,CAAA;AAQA,IAAA,OAAOkB,SAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSiG,EAAAA,MAAAA,CAAAA,aAAP,SAAA,UAAA,CAAkBjT,GAAlB,EAA+BsS,SAA/B,EAA8D;AAC5D,IAAA,IAAMxH,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;AACA,IAAA,OAAO,KAAKkT,gBAAL,CAAsBpI,IAAtB,EAA4BwH,SAA5B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSY,EAAAA,MAAAA,CAAAA,mBAAP,SAAA,gBAAA,CACEpI,IADF,EAEEwH,SAFF,EAGkB;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AAChB,IAAI,IAAA,CAACxH,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAMkC,SAAS,GAAG,IAAA,CAAKwF,kBAAL,CAAwB1H,IAAxB,CAAlB,CAAA;AACA,IAAA,IAAMoH,OAAO,GAAGlF,SAAS,CAACuD,OAAV,EAAoBtN,CAAAA,IAApB,CAAyB,UAAC7D,IAAD,EAAOoD,KAAP,EAAc2Q,IAAd,EAAuB;AAC9D,MAAA,IAAI/T,IAAI,KAAK,MAAb,EAAmB,OAAO,KAAP,CAAA;AACnB,MAAA,OAAOkT,SAAS,CAAClT,IAAD,EAAOoD,KAAP,EAAc2Q,IAAd,CAAhB,CAAA;AACD,KAHe,CAAhB,CAAA;AAIA,IAAOjB,OAAAA,OAAO,IAAI,IAAlB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSkB,mBAAP,SAAwBpT,gBAAAA,CAAAA,GAAxB,EAAoD;AAClD,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAKuI,CAAAA,sBAAL,CAA4BvI,IAA5B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSuI,yBAAP,SAA8BvI,sBAAAA,CAAAA,IAA9B,EAAyD;AACvD,IAAMoH,IAAAA,OAAO,GAAG,IAAKgB,CAAAA,gBAAL,CAAsBpI,IAAtB,EAA4B,UAACY,CAAD,EAAA;AAAA,MAAA,OAAO6D,MAAM,CAACD,QAAP,CAAgB5D,CAAhB,CAAP,CAAA;AAAA,KAA5B,CAAhB,CAAA;;AACA,IAAIwG,IAAAA,OAAO,IAAP,IAAA,IAAAA,OAAO,CAAEnR,SAAT,EAAA,IAAwBmR,OAAO,CAAC5C,QAAR,EAA5B,EAAgD;AAC9C,MAAA,OAAO4C,OAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSoB,qBAAP,SAA0BtT,kBAAAA,CAAAA,GAA1B,EAA8C;AAC5C,IAAA,IAAM+R,KAAK,GAAG,IAAA,CAAKC,eAAL,CAAqBhS,GAArB,CAAd,CAAA;AACA,IAAA,OAAOmP,WAAW,CAAC4C,KAAD,EAAQ,oBAAR,EAA8B/R,GAA9B,CAAlB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSgS,kBAAP,SAAuBhS,eAAAA,CAAAA,GAAvB,EAAkD;AAChD,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;AACA,IAAO8K,OAAAA,IAAI,GAAG,IAAKyI,CAAAA,qBAAL,CAA2BzI,IAA3B,CAAH,GAAsC,IAAjD,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSyI,wBAAP,SAA6BzI,qBAAAA,CAAAA,IAA7B,EAAuD;AACrD,IAAMoH,IAAAA,OAAO,GAAG,IAAKgB,CAAAA,gBAAL,CAAsBpI,IAAtB,EAA4B,UAACY,CAAD,EAAA;AAAA,MAAA,OAAO0D,KAAK,CAACI,OAAN,CAAc9D,CAAd,CAAP,CAAA;AAAA,KAA5B,CAAhB,CAAA;;AACA,IAAIwG,IAAAA,OAAO,IAAP,IAAA,IAAAA,OAAO,CAAEnR,SAAT,EAAA,IAAwBmR,OAAO,CAAC1C,OAAR,EAA5B,EAA+C;AAC7C,MAAA,OAAO0C,OAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSsB,2BAAP,SAAgCxT,wBAAAA,CAAAA,GAAhC,EAA2D;AACzD,IAAA,IAAMZ,IAAI,GAAG,IAAA,CAAKqQ,OAAL,CAAazP,GAAb,CAAb,CAAA;;AACA,IAAIZ,IAAAA,IAAI,IAAIA,IAAI,CAAC2B,SAAL,EAAR,IAA4B3B,IAAI,CAACoQ,OAAL,EAAhC,EAAgD;AAC9C,MAAA,OAAOpQ,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAK4S,CAAAA,eAAL,CAAqBhS,GAArB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSyT,sBAAP,SAA2BzT,mBAAAA,CAAAA,GAA3B,EAAqD;AACnD,IAAA,IAAM0T,SAAS,GAAG,IAAA,CAAK3D,OAAL,CAAa/P,GAAb,CAAlB,CAAA;;AACA,IAAA,IAAI,CAAC0T,SAAD,IAAc,CAACA,SAAS,CAACxS,MAA7B,EAAqC;AACnC,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAM9B,IAAAA,IAAI,GAAG,IAAK6B,CAAAA,KAAL,CAAWyS,SAAS,CAAC,CAAD,CAApB,CAAb,CAAA;AACA,IAAA,OAAOtU,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSuU,yBAAP,SAA8B3T,sBAAAA,CAAAA,GAA9B,EAAiD;AAC/C,IAAA,IAAMZ,IAAI,GAAG,IAAA,CAAKqU,mBAAL,CAAyBzT,GAAzB,CAAb,CAAA;AACA,IAAA,OAAOgP,WAAU,CAAC5P,IAAD,EAAO,wBAAP,EAAiCY,GAAjC,CAAjB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS4T,YAAP,SAAiB5T,SAAAA,CAAAA,GAAjB,EAAsC;AACpC,IAAA,IAAA,CAAKgP,UAAL,CAAgBhP,GAAhB,CAAA,CADoC;;AAIpC,IAAA,IAAM8R,KAAK,GAAG,IAAA,CAAK2B,mBAAL,CAAyBzT,GAAzB,CAAd,CAAA;;AACA,IAAI,IAAA,CAAC8R,KAAL,EAAY;AACV,MAAA,OAAO,CAAP,CAAA;AACD,KAAA;;AACD,IAAM+B,IAAAA,UAAU,GAAG,IAAK5S,CAAAA,KAAL,CAAWwB,SAAX,CAAqB,UAACiJ,CAAD,EAAA;AAAA,MAAOA,OAAAA,CAAC,KAAKoG,KAAb,CAAA;AAAA,KAArB,CAAnB,CAAA;AACA,IAAA,IAAMjN,MAAM,GAAG,IAAA,CAAK5D,KAAL,CACZ0B,KADY,CACN,CADM,EACHkR,UADG,EAEZtQ,MAFY,CAEL,UAACuQ,IAAD,EAAOpI,CAAP,EAAA;AAAA,MAAA,OAAaoI,IAAI,GAAGpI,CAAC,CAAC7H,IAAF,CAAO3C,MAA3B,CAAA;AAAA,KAFK,EAE8B,CAF9B,CAAf,CAAA;AAIA,IAAOlB,OAAAA,GAAG,KAAK8R,KAAK,CAAC9R,GAAd,GACH6E,MADG,GAEHA,MAAM,IAAIiN,KAAK,CAAC/Q,SAAN,EAAA,GAAoB+Q,KAAK,CAAC8B,SAAN,CAAgB5T,GAAhB,CAApB,GAA2C,CAA/C,CAFV,CAAA;AAGD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS+T,YAAP,SAAiB/T,SAAAA,CAAAA,GAAjB,EAA8B;AAC5B,IAAA,IAAM8K,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;AACA,IAAA,OAAO,IAAKgU,CAAAA,eAAL,CAAqBlJ,IAArB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSmJ,eAAP,SAAoBjU,YAAAA,CAAAA,GAApB,EAAiC;AAC/B,IAAA,IAAMkU,OAAO,GAAG,IAAA,CAAKH,SAAL,CAAe/T,GAAf,CAAhB,CAAA;AACA,IAAA,OAAOiP,cAAa,CAACiF,OAAD,EAAU,cAAV,EAA0BlU,GAA1B,CAApB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSgU,kBAAP,SAAuBlJ,eAAAA,CAAAA,IAAvB,EAA0D;AACxD,IAAA,IAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAAC5J,MAAf,IAAyB,CAAC,IAAK0O,CAAAA,aAAL,CAAmB9E,IAAnB,CAA9B,EAAwD;AACtD,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAM1L,IAAI,GAAG,IAAKwQ,CAAAA,aAAL,CAAmB9E,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAnB,CAAb,CAAA;;AACA,IAAA,IAAIvD,IAAJ,IAAIA,IAAAA,IAAAA,IAAI,CAAE2B,SAAN,EAAJ,EAAuB;AACrB,MAAA,OAAO3B,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACS+U,EAAAA,MAAAA,CAAAA,uBAAP,SAAA,oBAAA,CAA4BzR,CAA5B,EAAuCI,CAAvC,EAAkD;AAChD,IAAMoR,IAAAA,OAAO,GAAG,IAAKE,CAAAA,iBAAL,CAAuB1R,CAAvB,EAA0BI,CAA1B,CAAhB,CAAA;AACA,IAAOmM,OAAAA,cAAa,CAACiF,OAAD,EAAU,sBAAV,EAAsCxR,GAAAA,GAAAA,CAAtC,GAA4CI,IAAAA,GAAAA,CAA5C,GAApB,GAAA,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSsR,EAAAA,MAAAA,CAAAA,oBAAP,SAAA,iBAAA,CAAyB1R,CAAzB,EAAoCI,CAApC,EAA+C;AAC7C,IAAA,IAAMuR,KAAK,GAAG,IAAA,CAAKtE,OAAL,CAAarN,CAAb,CAAd,CAAA;AACA,IAAA,IAAM4R,KAAK,GAAG,IAAA,CAAKvE,OAAL,CAAajN,CAAb,CAAd,CAAA;;AACA,IAAA,IAAI,CAACuR,KAAD,IAAU,CAACC,KAAf,EAAsB;AACpB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAMlV,IAAI,GAAG,IAAKwQ,CAAAA,aAAL,CAAmBhF,IAAI,CAACqC,MAAL,CAAYoH,KAAZ,EAAmBC,KAAnB,CAAnB,CAAb,CAAA;AACA,IAAOlV,OAAAA,IAAI,QAAJ,IAAAA,IAAI,CAAE2B,SAAN,EAAA,GAAoB3B,IAApB,GAA2B,IAAlC,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSmV,EAAAA,MAAAA,CAAAA,2BAAP,SAAA,wBAAA,CAAgCC,QAAhC,EAAkDC,MAAlD,EAA0E;AACxE,IAAA,IAAMC,SAAS,GAAG,IAAA,CAAKjF,OAAL,CAAa+E,QAAb,CAAlB,CAAA;;AACA,IAAI,IAAA,EAACE,SAAD,IAACA,IAAAA,IAAAA,SAAS,CAAE5T,MAAX,EAAD,CAAJ,EAA0B;AACxB,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAI0T,QAAQ,KAAKC,MAAjB,EAAyB,OAAO,CAACC,SAAD,CAAP,CAAA;AACzB,IAAA,IAAMC,OAAO,GAAG,IAAA,CAAKlF,OAAL,CAAagF,MAAb,CAAhB,CAAA;;AACA,IAAI,IAAA,EAACE,OAAD,IAACA,IAAAA,IAAAA,OAAO,CAAE7T,MAAT,EAAD,CAAJ,EAAwB;AACtB,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAM8T,KAAK,GAAG,IAAKnN,CAAAA,QAAL,EAAd,CAAA;AACA,IAAA,IAAMQ,KAAK,GAAG2M,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAd,CAAA;AACA,IAAMxM,IAAAA,GAAG,GAAG0M,KAAK,CAACC,OAAN,CAAcF,OAAd,EAAuB1M,KAAvB,CAAZ,CAAA;AACA,IAAMe,IAAAA,MAAM,GAAG4L,KAAK,CAACjS,KAAN,CAAYsF,KAAZ,EAAmBC,GAAG,GAAG,CAAzB,CAAf,CAAA;AACA,IAAA,OAAOc,MAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSvB,EAAAA,MAAAA,CAAAA,WAAP,SAA0B,QAAA,GAAA;AACxB,IAAMmN,IAAAA,KAAa,GAAG,EAAtB,CAAA;AACA,IAAA,IAAA,CAAKxC,iBAAL,CAAuB,UAAChT,IAAD,EAAU;AAC/B,MAAA,IAAIwB,MAAI,CAACE,MAAL,CAAY1B,IAAZ,CAAJ,EAAuB;AACrBwV,QAAAA,KAAK,CAACnO,IAAN,CAAWrH,IAAX,CAAA,CAAA;AACD,OAAA;AACF,KAJD,CAAA,CAAA;AAKA,IAAA,OAAOwV,KAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSE,EAAAA,MAAAA,CAAAA,aAAP,SAAoB,UAAA,GAAA;AAClB,IAAMC,IAAAA,OAAiB,GAAG,EAA1B,CAAA;AACA,IAAA,IAAA,CAAK3C,iBAAL,CAAuB,UAAChT,IAAD,EAAU;AAC/B,MAAA,IAAImQ,MAAM,CAACyF,YAAP,CAAoB5V,IAApB,CAAJ,EAA+B;AAC7B2V,QAAAA,OAAO,CAACtO,IAAR,CAAarH,IAAb,CAAA,CAAA;AACD,OAAA;AACF,KAJD,CAAA,CAAA;AAKA,IAAA,OAAO2V,OAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSE,mBAAP,SAAwB1U,gBAAAA,CAAAA,IAAxB,EAAsC;AACpC,IAAMwU,IAAAA,OAAiB,GAAG,EAA1B,CAAA;AACA,IAAA,IAAA,CAAK3C,iBAAL,CAAuB,UAAChT,IAAD,EAAU;AAC/B,MAAImQ,IAAAA,MAAM,CAACyF,YAAP,CAAoB5V,IAApB,CAA6BA,IAAAA,IAAI,CAACmB,IAAL,KAAcA,IAA/C,EAAqD;AACnDwU,QAAAA,OAAO,CAACtO,IAAR,CAAarH,IAAb,CAAA,CAAA;AACD,OAAA;AACF,KAJD,CAAA,CAAA;AAKA,IAAA,OAAO2V,OAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSG,iBAAP,SAAsBnR,cAAAA,CAAAA,GAAtB,EAAiD;AAC/C,IAAMoR,IAAAA,QAAQ,GAAG,IAAKlU,CAAAA,KAAL,CAAW8C,GAAX,CAAe,UAAC3E,IAAD,EAAU;AACxC,MAAIgW,IAAAA,GAAmB,GAAGhW,IAA1B,CAAA;;AACA,MAAA,IAAIyB,OAAO,CAACE,SAAR,CAAkBqU,GAAlB,CAAJ,EAA4B;AAC1BA,QAAAA,GAAG,GAAGA,GAAG,CAACF,cAAJ,CAAmBnR,GAAnB,CAAN,CAAA;AACD,OAAA;;AACD,MAAOA,OAAAA,GAAG,CAACqR,GAAD,CAAV,CAAA;AACD,KANgB,CAAjB,CAAA;AAQA,IAAA,OAAO,KAAKrT,GAAL,CAAS,OAAT,EAAkBoT,QAAlB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACS/C,oBAAP,SAAyBiD,iBAAAA,CAAAA,QAAzB,EAA6E;AAC3E,IAAID,IAAAA,GAAmB,GAAG,IAA1B,CAAA;AAEA,IAAA,IAAA,CAAKnU,KAAL,CAAW8G,OAAX,CAAmB,UAAC+J,KAAD,EAAW;AAC5B,MAAA,IAAIuD,QAAQ,CAACvD,KAAD,CAAR,KAAoB,KAAxB,EAA+B;AAC7BsD,QAAAA,GAAG,GAAG,KAAN,CAAA;AACA,QAAA,OAAA;AACD,OAAA;;AACD,MAAA,IAAIvU,OAAO,CAACE,SAAR,CAAkB+Q,KAAlB,CAAJ,EAA8B;AAC5BsD,QAAAA,GAAG,GAAGtD,KAAK,CAACM,iBAAN,CAAwBiD,QAAxB,CAAN,CAAA;AACD,OAAA;AACF,KARD,CAAA,CAAA;AASA,IAAA,OAAOD,GAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSE,iBAAP,SAAsBhD,cAAAA,CAAAA,SAAtB,EAA2E;AACzE,IAAA,OAAO,KAAKrR,KAAL,CAAWmC,IAAX,CAAgB,UAAC0O,KAAD,EAAW;AAChC,MAAA,IAAIQ,SAAS,CAACR,KAAD,CAAb,EAAsB;AACpB,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;;AACD,MAAA,IAAIjR,OAAO,CAACE,SAAR,CAAkB+Q,KAAlB,CAAJ,EAA8B;AAC5B,QAAA,OAAOA,KAAK,CAACwD,cAAN,CAAqBhD,SAArB,CAAP,CAAA;AACD,OAAA;;AACD,MAAA,OAAO,KAAP,CAAA;AACD,KARM,CAAP,CAAA;AASD,GAAA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSiD,oBAAP,SACEjD,iBAAAA,CAAAA,SADF,EAEU;AACR,IAAMkD,IAAAA,WAAmB,GAAG,EAA5B,CAAA;AACA,IAAA,IAAA,CAAKvU,KAAL,CAAW8G,OAAX,CAAmB,UAAC3I,IAAD,EAAU;AAC3B,MAAA,IAAIkT,SAAS,CAAClT,IAAD,CAAb,EAAqB;AACnBoW,QAAAA,WAAW,CAAC/O,IAAZ,CAAiBrH,IAAjB,CAAA,CAAA;AACD,OAAA;;AACD,MAAIA,IAAAA,IAAI,YAAYyB,OAApB,EAA6B;AAC3B2U,QAAAA,WAAW,CAAC/O,IAAZ,CAAA,KAAA,CAAA+O,WAAW,EAASpW,IAAI,CAACmW,iBAAL,CAAuBjD,SAAvB,CAAT,CAAX,CAAA;AACD,OAAA;AACF,KAPD,CAAA,CAAA;AAQA,IAAA,OAAOkD,WAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SAESC,iBAAP,SACEnD,cAAAA,CAAAA,SADF,EAEe;AACb,IAAIlN,IAAAA,KAAkB,GAAG,IAAzB,CAAA;AACA,IAAA,IAAA,CAAKgN,iBAAL,CAAuB,UAAChT,IAAD,EAAU;AAC/B;AACA,MAAA,IAAIkT,SAAS,CAAClT,IAAD,CAAT,IAAmB,CAACgG,KAAxB,EAA+B;AAC7BA,QAAAA,KAAK,GAAGhG,IAAR,CAAA;AACA,QAAA,OAAO,KAAP,CAAA;AACD,OAAA;;AACD,MAAA,OAAO,IAAP,CAAA;AACD,KAPD,CAAA,CAAA;AAQA,IAAA,OAAOgG,KAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSsQ,WAAP,SAAgBtW,QAAAA,CAAAA,IAAhB,EAA6C;AAC3C,IAAA,IAAIA,IAAJ,EAAU;AACR,MAAA,IAAMgG,KAAK,GAAG,IAAA,CAAKqQ,cAAL,CAAoB,UAAC3D,KAAD,EAAA;AAAA,QAAWA,OAAAA,KAAK,KAAK1S,IAArB,CAAA;AAAA,OAApB,CAAd,CAAA;;AACA,MAAA,IAAIgG,KAAJ,EAAW;AACT,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSuQ,EAAAA,MAAAA,CAAAA,cAAP,SAAmB7K,WAAAA,CAAAA,IAAnB,EAA+B1L,IAA/B,EAA2CwW,eAA3C,EAA0E;AAAA,IAAA,IAA/BA,eAA+B,KAAA,KAAA,CAAA,EAAA;AAA/BA,MAAAA,eAA+B,GAAb,KAAa,CAAA;AAAA,KAAA;;AACxE,IAAI3J,IAAAA,CAAC,GAAGnB,IAAR,CAAA;AACA,IAAIY,IAAAA,CAAC,GAAGtM,IAAR,CAAA;;AAEA,IAAIwW,IAAAA,eAAe,IAAI/U,OAAO,CAACE,SAAR,CAAkB3B,IAAlB,CAAvB,EAAgD;AAC9CyP,MAAAA,oBAAoB,CAAC,IAAKe,CAAAA,aAAL,CAAmB9E,IAAnB,CAAD,EAAuC1L,IAAvC,CAApB,CAAA;AACD,KAAA;;AACD,IAAO6M,OAAAA,CAAC,CAAC/K,MAAT,EAAiB;AACf,MAAMsB,IAAAA,OAAK,GAAGyJ,CAAC,CAACA,CAAC,CAAC/K,MAAF,GAAW,CAAZ,CAAf,CAAA;AACA+K,MAAAA,CAAC,GAAGA,CAAC,CAACtJ,KAAF,CAAQ,CAAR,EAAW,CAAC,CAAZ,CAAJ,CAAA;AACA,MAAA,IAAMkT,WAAW,GAAG,IAAA,CAAKjG,aAAL,CAAmB3D,CAAnB,CAApB,CAAA;;AACA,MAAMK,IAAAA,MAAM,GAAG2C,cAAa,CAAC4G,WAAD,EAAc,qBAAd,EAAqC5J,CAArC,CAA5B,CAAA;;AACA,MAAA,IAAMhL,KAAK,GAAA,EAAA,CAAA,MAAA,CAAOqL,MAAM,CAACrL,KAAd,CAAX,CAAA;AACAA,MAAAA,KAAK,CAACuB,OAAD,CAAL,GAAekJ,CAAf,CAAA;AACAA,MAAAA,CAAC,GAAGY,MAAM,CAACvK,GAAP,CAAW,OAAX,EAAoBd,KAApB,CAAJ,CAAA;;AACA,MAAA,IAAI2U,eAAJ,EAAqB;AACnB/G,QAAAA,oBAAoB,CAACvC,MAAD,EAASZ,CAAT,CAApB,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,OAAOA,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSrG,UAAP,iBAAeyF,IAAf,EAA2BjG,MAA3B,EAA2C3D,MAA3C,EAA2De,IAA3D,EAAuE;AACrE,IAAA,IAAMsM,SAAS,GAAG,IAAA,CAAKqB,aAAL,CAAmB9E,IAAnB,CAAlB,CAAA;;AACA,IAAM1L,IAAAA,IAAI,GAAG8P,WAAU,CAACX,SAAD,EAAY,iBAAZ,EAA+BzD,IAA/B,CAAvB,CAAA;;AACA,IAAA,OAAO,KAAK6K,WAAL,CAAiB7K,IAAjB,EAAuB1L,IAAI,CAACiG,OAAL,CAAaR,MAAb,EAAqB3D,MAArB,EAA6Be,IAA7B,CAAvB,EAA2D,IAA3D,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSsD,aAAP,oBAAkBuF,IAAlB,EAA8BjG,MAA9B,EAA8C3D,MAA9C,EAA8De,IAA9D,EAA0E;AACxE,IAAA,IAAM6T,aAAa,GAAG,IAAA,CAAKlG,aAAL,CAAmB9E,IAAnB,CAAtB,CAAA;;AACA,IAAMiL,IAAAA,QAAQ,GAAG7G,WAAU,CAAC4G,aAAD,EAAgB,iBAAhB,EAAmChL,IAAnC,CAA3B,CAAA;;AACA,IAAA,OAAO,KAAK6K,WAAL,CACL7K,IADK,EAELiL,QAAQ,CAACxQ,UAAT,CAAoBV,MAApB,EAA4B3D,MAA5B,EAAoCe,IAApC,CAFK,EAGL,IAHK,CAAP,CAAA;AAKD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSuD,UAAP,SACEsF,OAAAA,CAAAA,IADF,EAEEjG,MAFF,EAGE3D,MAHF,EAIEe,IAJF,EAKET,UALF,EAME;AACA,IAAA,IAAM0F,SAAS,GAAG,IAAA,CAAK0I,aAAL,CAAmB9E,IAAnB,CAAlB,CAAA;;AACA,IAAMjH,IAAAA,IAAI,GAAGqL,WAAU,CAAChI,SAAD,EAAY,iBAAZ,EAA+B4D,IAA/B,CAAvB,CAAA;;AACA,IAAA,OAAO,KAAK6K,WAAL,CACL7K,IADK,EAELjH,IAAI,CAAC2B,OAAL,CAAaX,MAAb,EAAqB3D,MAArB,EAA6Be,IAA7B,EAAmCT,UAAnC,CAFK,EAGL,IAHK,CAAP,CAAA;AAKD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSiI,aAAP,oBAAkBqB,IAAlB,EAA8BjG,MAA9B,EAA8ChB,IAA9C,EAA4DC,KAA5D,EAA2E;AACzE,IAAA,IAAMyK,SAAS,GAAG,IAAA,CAAKqB,aAAL,CAAmB9E,IAAnB,CAAlB,CAAA;;AACA,IAAM1L,IAAAA,IAAI,GAAG8P,WAAU,CAACX,SAAD,EAAY,oBAAZ,EAAkCzD,IAAlC,CAAvB,CAAA;;AACA,IAAA,OAAO,KAAK6K,WAAL,CAAiB7K,IAAjB,EAAuB1L,IAAI,CAACqK,UAAL,CAAgB5E,MAAhB,EAAwBhB,IAAxB,EAA8BC,KAA9B,CAAvB,EAA6D,IAA7D,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSiG,EAAAA,MAAAA,CAAAA,aAAP,SAAkBe,UAAAA,CAAAA,IAAlB,EAA8BjG,MAA9B,EAA8ChB,IAA9C,EAA4D;AAC1D,IAAA,IAAMiS,aAAa,GAAG,IAAA,CAAKlG,aAAL,CAAmB9E,IAAnB,CAAtB,CAAA;;AACA,IAAMiL,IAAAA,QAAQ,GAAG7G,WAAU,CAAC4G,aAAD,EAAgB,oBAAhB,EAAsChL,IAAtC,CAA3B,CAAA;;AACA,IAAA,OAAO,IAAK6K,CAAAA,WAAL,CAAiB7K,IAAjB,EAAuBiL,QAAQ,CAAChM,UAAT,CAAoBlF,MAApB,EAA4BhB,IAA5B,CAAvB,EAA0D,IAA1D,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSmS,EAAAA,MAAAA,CAAAA,aAAP,SAAA,UAAA,CAAkBlL,IAAlB,EAA8B1L,IAA9B,EAA0C;AACxC,IAAMoD,IAAAA,KAAK,GAAGsI,IAAI,CAACA,IAAI,CAAC5J,MAAL,GAAc,CAAf,CAAlB,CAAA;AACA,IAAM8P,IAAAA,UAAU,GAAGlG,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAnB,CAAA;AACA,IAAA,IAAMkT,WAAW,GAAG,IAAA,CAAKjG,aAAL,CAAmBoB,UAAnB,CAApB,CAAA;;AACA,IAAM1E,IAAAA,MAAM,GAAG2C,cAAa,CAAC4G,WAAD,EAAc,oBAAd,EAAoC/K,IAApC,CAA5B,CAAA;;AACA,IAAA,IAAM7J,KAAK,GAAA,EAAA,CAAA,MAAA,CAAOqL,MAAM,CAACrL,KAAd,CAAX,CAAA;AACAA,IAAAA,KAAK,CAACuF,MAAN,CAAahE,KAAb,EAAoB,CAApB,EAAuBpD,IAAvB,CAAA,CAAA;AACA,IAAA,OAAO,IAAKuW,CAAAA,WAAL,CAAiB3E,UAAjB,EAA6B1E,MAAM,CAACvK,GAAP,CAAW,OAAX,EAAoBd,KAApB,CAA7B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSgV,aAAP,SAAkBnL,UAAAA,CAAAA,IAAlB,EAA8B;AAC5B,IAAA,IAAM1L,IAAI,GAAG,IAAA,CAAKwQ,aAAL,CAAmB9E,IAAnB,CAAb,CAAA;;AACAkE,IAAAA,WAAU,CAAC5P,IAAD,EAAO,oBAAP,EAA6B0L,IAA7B,CAAV,CAAA;;AAEA,IAAMtI,IAAAA,KAAK,GAAGsI,IAAI,CAACA,IAAI,CAAC5J,MAAL,GAAc,CAAf,CAAlB,CAAA;AACA,IAAM8P,IAAAA,UAAU,GAAGlG,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAnB,CAAA;AACA,IAAA,IAAMkT,WAAW,GAAG,IAAA,CAAKjG,aAAL,CAAmBoB,UAAnB,CAApB,CAAA;;AACA,IAAM1E,IAAAA,MAAM,GAAG2C,cAAa,CAAC4G,WAAD,EAAc,oBAAd,EAAoC/K,IAApC,CAA5B,CAAA;;AAEA,IAAA,IAAM7J,KAAK,GAAA,EAAA,CAAA,MAAA,CAAOqL,MAAM,CAACrL,KAAd,CAAX,CAAA;AACAA,IAAAA,KAAK,CAACuF,MAAN,CAAahE,KAAb,EAAoB,CAApB,CAAA,CAAA;AACA,IAAA,OAAO,IAAKmT,CAAAA,WAAL,CAAiB3E,UAAjB,EAA6B1E,MAAM,CAACvK,GAAP,CAAW,OAAX,EAAoBd,KAApB,CAA7B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACSiV,YAAP,SAAiBpL,SAAAA,CAAAA,IAAjB,EAA6B;AAC3B,IAAA,IAAMqL,MAAM,GAAG,IAAA,CAAKvG,aAAL,CAAmB9E,IAAnB,CAAf,CAAA;;AACA,IAAMhI,IAAAA,CAAC,GAAGkM,WAAU,CAACmH,MAAD,EAAS,mBAAT,EAA8BrL,IAA9B,CAApB,CAAA;;AAEA,IAAM4F,IAAAA,SAAS,GAAG5F,IAAI,CAACA,IAAI,CAAC5J,MAAL,GAAc,CAAf,CAAtB,CAAA;;AACA,IAAIwP,IAAAA,SAAS,KAAK,CAAlB,EAAqB;AACnB,MAAA,MAAM,IAAIjQ,KAAJ,CACwDqC,2DAAAA,GAAAA,CADxD,CAAN,CAAA;AAGD,KAAA;;AAED,IAAA,IAAMsT,QAAQ,GAAGxL,IAAI,CAACa,SAAL,CAAeX,IAAf,CAAjB,CAAA;AACA,IAAA,IAAMuL,MAAM,GAAG,IAAA,CAAKzG,aAAL,CAAmBwG,QAAnB,CAAf,CAAA;;AACA,IAAME,IAAAA,KAAK,GAAGtH,WAAU,CAACqH,MAAD,EAAS,mBAAT,EAA8BD,QAA9B,CAAxB,CAAA;;AACA,IAAA,IAAM1T,CAAC,GAAG4T,KAAK,CAAC3V,SAAN,EAAV,CAAA;;AAEA,IAAA,IAAI+B,CAAC,CAAC6T,WAAF,KAAkBzT,CAAC,CAACyT,WAAxB,EAAqC;AACnC,MAAA,MAAM,IAAI9V,KAAJ,CAAA,gDAAA,GAC6CiC,CAD7C,GAAA,OAAA,GACsDI,CADtD,CAAN,CAAA;AAGD,KAAA;;AAED,IAAM0T,IAAAA,OAAO,GAAG9T,CAAC,CAAC5B,MAAF,EACZ4B,GAAAA,CAAC,CAACuH,SAAF,CAAYnH,CAAZ,CADY,GAEZJ,CAAC,CAACX,GAAF,CAAM,OAAN,EAAmBW,EAAAA,CAAAA,MAAAA,CAAAA,CAAC,CAACzB,KAArB,EAAgC6B,CAAD,CAAe7B,KAA9C,CAFJ,CAAA,CAAA;AAIA,IAAO,OAAA,IAAA,CAAKgV,UAAL,CAAgBnL,IAAhB,CAAA,CAAsB6K,WAAtB,CAAkCS,QAAlC,EAA4CI,OAA5C,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSC,EAAAA,MAAAA,CAAAA,YAAP,SACE3L,SAAAA,CAAAA,IADF,EAEEV,QAFF,EAGE5I,UAHF,EAIE;AACA,IAAA,IAAM+M,SAAS,GAAG,IAAA,CAAKqB,aAAL,CAAmB9E,IAAnB,CAAlB,CAAA;;AACA,IAAMY,IAAAA,CAAC,GAAGsD,WAAU,CAACT,SAAD,EAAY,mBAAZ,EAAiCzD,IAAjC,CAApB,CAAA;;AACA,IAAA,IAAM1L,IAAI,GAAGsM,CAAC,CAAC/K,SAAF,EAAb,CAAA;AAEA,IAAA,IAAI+B,CAAJ,CAAA;AACA,IAAA,IAAII,CAAJ,CAAA;;AACA,IAAA,IAAI1D,IAAI,CAAC0B,MAAL,EAAJ,EAAmB;AAAA,MAAA,IAAA,eAAA,GACR1B,IAAI,CAAC+K,SAAL,CAAeC,QAAf,CADQ,CAAA;;AAChB1H,MAAAA,CADgB,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AACbI,MAAAA,CADa,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AAElB,KAFD,MAEO;AACL,MAAMoR,IAAAA,OAAO,GAAG9U,IAAhB,CAAA;AACA,MAAMiL,IAAAA,OAAO,GAAG6J,OAAO,CAACjT,KAAR,CAAc0B,KAAd,CAAoB,CAApB,EAAuByH,QAAvB,CAAhB,CAAA;AACA,MAAME,IAAAA,MAAM,GAAG4J,OAAO,CAACjT,KAAR,CAAc0B,KAAd,CAAoByH,QAApB,CAAf,CAAA;AACA1H,MAAAA,CAAC,GAAGwR,OAAO,CAACnS,GAAR,CAAY,OAAZ,EAAqBsI,OAArB,CAAJ,CAAA;AACAvH,MAAAA,CAAC,GAAGoR,OAAO,CAACnS,GAAR,CAAY,OAAZ,EAAqBuI,MAArB,CAA6B5C,CAAAA,aAA7B,EAAJ,CAAA;AACD,KAAA;;AAED,IAAIlG,IAAAA,UAAU,IAAI,CAACZ,MAAI,CAACE,MAAL,CAAY1B,IAAZ,CAAnB,EAAsC;AACpC0D,MAAAA,CAAC,GAAGA,CAAC,CAAChB,KAAF,CAAQN,UAAR,CAAJ,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,KAAKyU,UAAL,CAAgBnL,IAAhB,CAAA,CAAsBkL,UAAtB,CAAiClL,IAAjC,EAAuChI,CAAvC,EAA0CkT,UAA1C,CAAqDlL,IAArD,EAA2DpI,CAA3D,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSgU,EAAAA,MAAAA,CAAAA,WAAP,SAAA,QAAA,CAAgB5L,IAAhB,EAA4Bc,OAA5B,EAA2C;AACzC,IAAA,IAAM2C,SAAS,GAAG,IAAA,CAAKqB,aAAL,CAAmB9E,IAAnB,CAAlB,CAAA;;AACA,IAAM1L,IAAAA,IAAI,GAAG4P,WAAU,CAACT,SAAD,EAAY,kBAAZ,EAAgCzD,IAAhC,CAAvB,CAAA;;AAEA,IAAM6L,IAAAA,aAAa,GAAG/K,OAAO,CAACjJ,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAtB,CAAA;AACA,IAAA,IAAMiU,SAAS,GAAG,IAAA,CAAKhH,aAAL,CAAmB+G,aAAnB,CAAlB,CAAA;;AACA1H,IAAAA,cAAa,CAAC2H,SAAD,EAAY,kBAAZ,EAAgC9L,IAAhC,CAAb,CAAA;;AAEA,IAAM0B,IAAAA,SAAS,GAAG5B,IAAI,CAAC4B,SAAL,CAAe1B,IAAf,EAAqBc,OAArB,CAAlB,CAAA;AACA,IAAMS,IAAAA,SAAS,GAAGzB,IAAI,CAACyB,SAAL,CAAevB,IAAf,EAAqBc,OAArB,CAAlB,CATyC;AAYzC;;AACA,IAAA,IAAIY,SAAS,IAAI,CAACH,SAAlB,EAA6B;AAC3B;AACAT,MAAAA,OAAO,GAAGhB,IAAI,CAACa,SAAL,CAAeG,OAAf,EAAwB,CAAxB,EAA2Bd,IAAI,CAAC5J,MAAL,GAAc,CAAzC,CAAV,CAAA;AACD,KAAA;;AAED,IAAO,OAAA,IAAA,CAAK+U,UAAL,CAAgBnL,IAAhB,CAAA,CAAsBkL,UAAtB,CAAiCpK,OAAjC,EAA0CxM,IAA1C,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACSyX,EAAAA,MAAAA,CAAAA,UAAP,SAAA,OAAA,CAAe/L,IAAf,EAA2BtJ,UAA3B,EAAyE;AACvE,IAAA,IAAM6N,YAAY,GAAG,IAAA,CAAKO,aAAL,CAAmB9E,IAAnB,CAArB,CAAA;;AACA,IAAIoJ,IAAAA,OAAO,GAAGjF,cAAa,CAACI,YAAD,EAAe,iBAAf,EAAkCvE,IAAlC,CAA3B,CAAA;;AACAoJ,IAAAA,OAAO,GAAGA,OAAO,CAACpS,KAAR,CAAcN,UAAd,CAAV,CAAA;AACA,IAAO,OAAA,IAAA,CAAKmU,WAAL,CAAiB7K,IAAjB,EAAuBoJ,OAAvB,EAAgC,IAAhC,CAAP,CAAA;AACD;;;;AAvzDiB,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AAChB,MAAA,OAAO,KAAKzM,QAAL,EAAA,CAAgBlE,MAAhB,CAAuB,UAACuT,GAAD,EAAA,IAAA,EAAA;AAAA,QAAQjT,IAAAA,IAAR,QAAQA,IAAR,CAAA;AAAA,QAAsBiT,OAAAA,EAAAA,GAAAA,GAAtB,GAA4BjT,IAA5B,CAAA;AAAA,OAAvB,EAA2D,EAA3D,CAAP,CAAA;AACD,KAAA;;;;EArmCOzD;;;;;;;ACvDV;AACA;AACA;;IAgBqBmP;;;SACZhO,SAAP,SAAcC,MAAAA,CAAAA,UAAd,EAAsE;AACpE,IAAA,IAAI+N,MAAM,CAACD,QAAP,CAAgB9N,UAAhB,CAAJ,EAAiC;AAC/B,MAAA,OAAOA,UAAP,CAAA;AACD,KAAA;;AAED,IAAId,IAAAA,KAAK,GAAGc,UAAZ,CAAA;;AACA,IAAA,IAAI,OAAOd,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,MAAAA,KAAK,GAAG;AAAEH,QAAAA,IAAI,EAAEG,KAAAA;AAAR,OAAR,CAAA;AACD,KAAA;;AAED,IAAA,IAAIF,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAAA,MAAA,IAAA,MAAA,GAMpBA,KANoB;AAAA,UAEtBH,IAFsB,UAEtBA,IAFsB;AAAA,UAAA,UAAA,GAAA,MAAA,CAGtBP,GAHsB;AAAA,UAGtBA,GAHsB,GAAA,UAAA,KAAA,KAAA,CAAA,GAGhB+F,QAAQ,CAACxE,MAAT,EAHgB,GAAA,UAAA;AAAA,UAAA,WAAA,GAAA,MAAA,CAItBG,IAJsB;AAAA,UAItBA,IAJsB,4BAIf,EAJe,GAAA,WAAA;AAAA,UAAA,YAAA,GAAA,MAAA,CAKtBT,KALsB;AAAA,UAKtBA,KALsB,GAKd,YAAA,KAAA,KAAA,CAAA,GAAA,CAACL,MAAI,CAACW,MAAL,EAAD,CALc,GAAA,YAAA,CAAA;;AAQxB,MAAA,IAAI,OAAOhB,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAA,MAAM,IAAIE,KAAJ,CAAU,2CAAV,CAAN,CAAA;AACD,OAAA;;AAED,MAAO,OAAA,IAAI8O,MAAJ,CAAW;AAChBhP,QAAAA,IAAI,EAAJA,IADgB;AAEhBP,QAAAA,GAAG,EAAHA,GAFgB;AAGhB0B,QAAAA,IAAI,EAAJA,IAHgB;AAIhBT,QAAAA,KAAK,EAALA,KAAAA;AAJgB,OAAX,CAAP,CAAA;AAMD,KAAA;;AAED,IAAA,MAAM,IAAIR,KAAJ,CAC4EC,6EAAAA,GAAAA,KAD5E,CAAN,CAAA;AAGD;;SAEMqW,gBAAP,SAAqB3X,aAAAA,CAAAA,IAArB,EAAkD;AAAA,IAAA,IACxCgD,KADwC,GAC9BhD,IAD8B,CACxCgD,KADwC,CAAA;;AAEhD,IAAIA,IAAAA,KAAK,KAAK,QAAd,EAAwB;AACtB,MAAA,OAAOmN,MAAM,CAAC5N,QAAP,CAAgBvC,IAAhB,CAAP,CAAA;AACD,KAAA;;AACD,IAAIgD,IAAAA,KAAK,KAAK,MAAd,EAAsB;AACpB,MAAA,OAAOxB,MAAI,CAACe,QAAL,CAAcvC,IAAd,CAAP,CAAA;AACD,KAAA;;AAED,IAAA,MAAM,IAAIqB,KAAJ,CACJ,sEADI,CAAN,CAAA;AAGD;;SAEMkB,WAAP,SAAgBC,QAAAA,CAAAA,IAAhB,EAA0C;AAAA,IAAA,IAChCX,KADgC,GACtBW,IADsB,CAChCX,KADgC,CAAA;AAExC,IAAA,OAAOsO,MAAM,CAAChO,MAAP,CAAA,QAAA,CAAA,EAAA,EACFK,IADE,EAAA;AAELX,MAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAAC8C,GAAN,CAAUwL,MAAM,CAACwH,aAAjB,CAAH,GAAqC/S,SAAAA;AAF5C,KAAP,CAAA,CAAA,CAAA;AAID;;SAEMsL,WAAP,SAAgB0H,QAAAA,CAAAA,WAAhB,EAAyD;AACvD,IAAOA,OAAAA,WAAW,YAAYzH,MAA9B,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSyF,eAAP,SAAoBiC,YAAAA,CAAAA,eAApB,EAAqE;AACnE,IAAA,IAAI,CAAC,IAAK3H,CAAAA,QAAL,CAAc2H,eAAd,CAAL,EAAqC;AACnC,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AACD,IAAoBA,KAAAA,IAAAA,SAAAA,GAAAA,iCAAAA,CAAAA,eAAe,CAAChW,KAApC,CAA2C,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAAA;AAAA,MAAA,IAAhC6Q,KAAgC,GAAA,KAAA,CAAA,KAAA,CAAA;;AACzC,MAAA,IAAIA,KAAK,CAAC/Q,SAAN,EAAJ,EAAuB;AACrB,QAAA,OAAO,KAAP,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD;;AAED,EAAA,SAAA,MAAA,CAAsBL,KAAtB,EAAyD;AAAA,IAAA,IAAA,KAAA,CAAA;;AACvD,IAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,IAAA,IAAA,CAAA;AADuD,IAAA,KAAA,CAQzCH,IARyC,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAUzCU,KAVyC,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAE/CV,IAF+C,GAE/BG,KAF+B,CAE/CH,IAF+C;AAAA,QAEzCU,KAFyC,GAE/BP,KAF+B,CAEzCO,KAFyC,CAAA;AAGvD,IAAKV,KAAAA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;AACA,IAAKU,KAAAA,CAAAA,KAAL,GAAaA,KAAb,CAAA;;AACA,IAAA,KAAA,CAAKf,MAAL,EAAA,CAAA;;AALuD,IAAA,OAAA,KAAA,CAAA;AAMxD,GAAA;;;;SAMM4B,QAAP,SAAapB,KAAAA,CAAAA,KAAb,EAA+C;AAC7C,IAAA,OAAO,IAAI6O,MAAJ,CAAA,QAAA,CAAA;AACLhP,MAAAA,IAAI,EAAE,IAAA,CAAKA,IADN;AAELP,MAAAA,GAAG,EAAE,IAAA,CAAKA,GAFL;AAGL0B,MAAAA,IAAI,EAAE,IAAA,CAAKA,IAHN;AAILT,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAAA;AAJP,KAAA,EAKFP,KALE,CAAP,CAAA,CAAA;AAOD;;AAEMqB,EAAAA,MAAAA,CAAAA,MAAP,SAAA,GAAA,CACE/B,GADF,EAEEC,KAFF,EAGE;AAAA,IAAA,IAAA,WAAA,CAAA;;AACA,IAAA,OAAO,KAAK6B,KAAL,EAAA,WAAA,GAAA,EAAA,EAAA,WAAA,CACJ9B,GADI,CAAA,GACEC,KADF,EAAP,WAAA,EAAA,CAAA;AAGD;;SAEMkC,SAAP,SAAcqF,MAAAA,CAAAA,OAAd,EAA0C;AACxC,IAAA,IAAM+C,MAAkB,GAAG;AACzBnI,MAAAA,KAAK,EAAE,QADkB;AAEzB7B,MAAAA,IAAI,EAAE,IAAA,CAAKA,IAFc;AAGzBmB,MAAAA,IAAI,EAAA,QAAA,CAAA,EAAA,EAAO,IAAKA,CAAAA,IAAZ,CAHqB;AAIzBT,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAL,CAAW8C,GAAX,CAAe,UAAC3E,IAAD,EAAA;AAAA,QAAA,OAAUA,IAAI,CAAC+C,MAAL,CAAYqF,OAAZ,CAAV,CAAA;AAAA,OAAf,CAAA;AAJkB,KAA3B,CAAA;;AAMA,IAAA,IAAIA,OAAJ,IAAA,IAAA,IAAIA,OAAO,CAAEgD,YAAb,EAA2B;AACzBD,MAAAA,MAAM,CAACvK,GAAP,GAAa,KAAKA,GAAlB,CAAA;AACD,KAAA;;AACD,IAAA,OAAOuK,MAAP,CAAA;AACD;;;EAvHiC1J;;ICSfuO;;;QAGZ7N,SAAP,SACEC,MAAAA,CAAAA,UADF,EAEE;AACA,IAAA,IAAI4N,KAAK,CAACI,OAAN,CAAchO,UAAd,CAAJ,EAA+B;AAC7B,MAAA,OAAOA,UAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAMd,KAA8B,GAAG,OAAOc,UAAP,KAAsB,QAAtB,GAAiC;AAAEjB,MAAAA,IAAI,EAAEiB,UAAAA;AAAR,KAAjC,GAAwDA,UAA/F,CAAA;;AAEA,IAAA,IAAIhB,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAAA,MAAA,IAEtBH,IAFsB,GAMpBG,KANoB,CAEtBH,IAFsB;AAAA,UAMpBG,UAAAA,GAAAA,KANoB,CAGtBV,GAHsB;AAAA,UAGtBA,GAHsB,GAAA,UAAA,KAAA,KAAA,CAAA,GAGhB+F,QAAQ,CAACxE,MAAT,EAHgB,GAAA,UAAA;AAAA,UAItBG,IAJsB,GAMpBhB,KANoB,CAItBgB,IAJsB;AAAA,UAMpBhB,YAAAA,GAAAA,KANoB,CAKtBO,KALsB;AAAA,UAKtBA,KALsB,GAKd,YAAA,KAAA,KAAA,CAAA,GAAA,CAACL,MAAI,CAACW,MAAL,EAAD,CALc,GAAA,YAAA,CAAA;;AAQxB,MAAA,IAAI,OAAOhB,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAA,MAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN,CAAA;AACD,OAAA;;AAED,MAAO,OAAA,IAAI2O,KAAJ,CAAkB;AACvB7O,QAAAA,IAAI,EAAJA,IADuB;AAEvBP,QAAAA,GAAG,EAAHA,GAFuB;AAGvB0B,QAAAA,IAAI,EAAEA,IAHiB;AAIvBT,QAAAA,KAAK,EAALA,KAAAA;AAJuB,OAAlB,CAAP,CAAA;AAMD,KAAA;;AAED,IAAA,MAAM,IAAIR,KAAJ,CAC2EC,4EAAAA,GAAAA,KAD3E,CAAN,CAAA;AAGD;;QAEMqW,gBAAP,SAAqB3X,aAAAA,CAAAA,IAArB,EAA8D;AAAA,IAAA,IACpDgD,KADoD,GAC1ChD,IAD0C,CACpDgD,KADoD,CAAA;;AAE5D,IAAIA,IAAAA,KAAK,KAAK,OAAd,EAAuB;AACrB,MAAA,OAAOgN,KAAK,CAACzN,QAAN,CAAevC,IAAf,CAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAOmQ,MAAM,CAACwH,aAAP,CAAqB3X,IAArB,CAAP,CAAA;AACD;;QAEMuC,WAAP,SAAgBC,QAAAA,CAAAA,IAAhB,EAAiC;AAAA,IAAA,IACvBX,KADuB,GACbW,IADa,CACvBX,KADuB,CAAA;AAE/B,IAAA,OAAOmO,KAAK,CAAC7N,MAAN,CAAA,QAAA,CAAA,EAAA,EACFK,IADE,EAAA;AAEL;AACAX,MAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAAC8C,GAAN,CAAUqL,KAAK,CAAC2H,aAAhB,CAAH,GAAoC9V,KAAAA;AAH3C,KAAP,CAAA,CAAA,CAAA;AAKD;;QAEMuO,UAAP,SAAe0H,OAAAA,CAAAA,UAAf,EAAqD;AACnD,IAAOA,OAAAA,UAAU,YAAY9H,KAA7B,CAAA;AACD;;QAEM+H,WAAP,SAAgBC,QAAAA,CAAAA,WAAhB,EAA4D;AAC1D,IAAA,OAAOA,WAAW,CAACrU,KAAZ,CAAkBqM,KAAK,CAACI,OAAxB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;QACS6H,cAAP,SAAmBC,WAAAA,CAAAA,cAAnB,EAAiD;AAAA,IAAA,IACvCrW,KADuC,GAC7BqW,cAD6B,CACvCrW,KADuC,CAAA;;AAG/C,IAAA,IAAI,CAAC,IAAKuO,CAAAA,OAAL,CAAa8H,cAAb,CAAL,EAAmC;AACjC,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAI,CAACrW,KAAK,CAACC,MAAX,EAAmB;AACjB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAMqI,KAAK,GAAGtI,KAAK,CAAC,CAAD,CAAnB,CAAA;AACA,IAAA,OAAO,CAAC,IAAA,CAAKuO,OAAL,CAAajG,KAAb,CAAR,CAAA;AACD,GAAA;AAED;AACF;AACA;;;QACgBgO,YAAd,SAAwBtW,SAAAA,CAAAA,KAAxB,EAAgD;AAC9C,IAAOA,OAAAA,KAAK,CAACsC,MAAN,CAAa,UAACiU,KAAD,EAAQ1F,KAAR,EAAkB;AACpC,MAAA,IAAI,CAAC1C,KAAK,CAACI,OAAN,CAAcsC,KAAd,CAAL,EAA2B;AACzB,QAAA,OAAO0F,KAAP,CAAA;AACD,OAAA;;AACD,MAAA,IAAI,CAACpI,KAAK,CAACiI,WAAN,CAAkBvF,KAAlB,CAAL,EAA+B;AAC7B,QAAO0F,OAAAA,KAAK,CAAC/O,MAAN,CAAaqJ,KAAK,CAACyF,SAAN,EAAb,CAAP,CAAA;AACD,OAAA;;AACDC,MAAAA,KAAK,CAAC/Q,IAAN,CAAWqL,KAAX,CAAA,CAAA;AAEA,MAAA,OAAO0F,KAAP,CAAA;AACD,KAVM,EAUJ,EAVI,CAAP,CAAA;AAWD,GAAA;AAED;AACF;AACA;;;AACgBC,EAAAA,KAAAA,CAAAA,kBAAd,SAAA,eAAA,CAA8BxW,KAA9B,EAA6CV,IAA7C,EAAoE;AAClE,IAAOU,OAAAA,KAAK,CAACsC,MAAN,CAAa,UAACiU,KAAD,EAAiBpY,IAAjB,EAAgC;AAClD,MAAA,IAAI,CAACgQ,KAAK,CAACI,OAAN,CAAcpQ,IAAd,CAAL,EAA0B;AACxB,QAAA,OAAOoY,KAAP,CAAA;AACD,OAFD,MAEO,IAAIpI,KAAK,CAACiI,WAAN,CAAkBjY,IAAlB,CAAA,IAA2BA,IAAI,CAACmB,IAAL,KAAcA,IAA7C,EAAmD;AACxDiX,QAAAA,KAAK,CAAC/Q,IAAN,CAAWrH,IAAX,CAAA,CAAA;AACA,QAAA,OAAOoY,KAAP,CAAA;AACD,OAHM,MAGA;AACL,QAAOA,OAAAA,KAAK,CAAC/O,MAAN,CAAarJ,IAAI,CAACqY,eAAL,CAAqBlX,IAArB,CAAb,CAAP,CAAA;AACD,OAAA;AACF,KATM,EASJ,EATI,CAAP,CAAA;AAUD;;AAED,EAAA,SAAA,KAAA,CAAsBG,KAAtB,EAA8D;AAAA,IAAA,IAAA,KAAA,CAAA;;AAC5D,IAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,IAAA,IAAA,CAAA;AAD4D,IAAA,KAAA,CAO9CH,IAP8C,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAEpDA,IAFoD,GAE3CG,KAF2C,CAEpDH,IAFoD,CAAA;AAG5D,IAAKA,KAAAA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;;AACA,IAAA,KAAA,CAAKL,MAAL,EAAA,CAAA;;AAJ4D,IAAA,OAAA,KAAA,CAAA;AAK7D,GAAA;;;;SAIM4B,QAAP,SAAapB,KAAAA,CAAAA,KAAb,EAAoD;AAClD,IAAA,OAAO,IAAI0O,KAAJ,CAAA,QAAA,CAAA;AACL7O,MAAAA,IAAI,EAAE,IAAA,CAAKA,IADN;AAELP,MAAAA,GAAG,EAAE,IAAA,CAAKA,GAFL;AAGL0B,MAAAA,IAAI,EAAE,IAAA,CAAKA,IAHN;AAILT,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAAA;AAJP,KAAA,EAKFP,KALE,CAAP,CAAA,CAAA;AAOD;;AAEMqB,EAAAA,MAAAA,CAAAA,MAAP,SAAA,GAAA,CACE/B,GADF,EAEEC,KAFF,EAGE;AAAA,IAAA,IAAA,WAAA,CAAA;;AACA,IAAA,OAAO,KAAK6B,KAAL,EAAA,WAAA,GAAA,EAAA,EAAA,WAAA,CACJ9B,GADI,CAAA,GACEC,KADF,EAAP,WAAA,EAAA,CAAA;AAGD,GAAA;AAED;AACF;AACA;;;AACSyX,EAAAA,MAAAA,CAAAA,mBAAP,SAA0B,gBAAA,GAAA;AACxB,IAAA,OAAO,KAAKzW,KAAL,CAAWmC,IAAX,CAAgB,UAACN,CAAD,EAAA;AAAA,MAAA,OAAOsM,KAAK,CAACI,OAAN,CAAc1M,CAAd,CAAP,CAAA;AAAA,KAAhB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACSyU,EAAAA,MAAAA,CAAAA,YAAP,SAA4B,SAAA,GAAA;AAC1B,IAAA,OAAOnI,KAAK,CAACmI,SAAN,CAAgB,IAAA,CAAKtW,KAArB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSwW,kBAAP,SAAuBlX,eAAAA,CAAAA,IAAvB,EAA8C;AAC5C,IAAO6O,OAAAA,KAAK,CAACqI,eAAN,CAAsB,KAAKxW,KAA3B,EAAkCV,IAAlC,CAAP,CAAA;AACD;;SAEM4B,SAAP,SAAcqF,MAAAA,CAAAA,OAAd,EAA0C;AACxC,IAAA,IAAM+C,MAAiB,GAAG;AACxBnI,MAAAA,KAAK,EAAE,OADiB;AAExB7B,MAAAA,IAAI,EAAE,IAAA,CAAKA,IAFa;AAGxBmB,MAAAA,IAAI,EAAA,QAAA,CAAA,EAAA,EAAO,IAAKA,CAAAA,IAAZ,CAHoB;AAIxBT,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAL,CAAW8C,GAAX,CAAe,UAAC3E,IAAD,EAAA;AAAA,QAAA,OAAUA,IAAI,CAAC+C,MAAL,CAAYqF,OAAZ,CAAV,CAAA;AAAA,OAAf,CAAA;AAJiB,KAA1B,CAAA;;AAOA,IAAA,IAAIA,OAAJ,IAAA,IAAA,IAAIA,OAAO,CAAEgD,YAAb,EAA2B;AACzBD,MAAAA,MAAM,CAACvK,GAAP,GAAa,KAAKA,GAAlB,CAAA;AACD,KAAA;;AACD,IAAA,OAAOuK,MAAP,CAAA;AACD;;;EA9K4E1J;;AAA1DuO,MACHuI,eAAe;;ACvCjC;AACA;AACA;AACA;;AAYA;AACA;AACA;;AAyBA;AACA;AACA;AAmFA,IAAYC,YAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,CAAAA,EAAAA,gBAAAA;;AAOZ,IAAYC,iBAAZ,CAAA;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,CAAAA,EAAAA,sBAAAA;;ACjIZ;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,OAAT,CACbC,UADa,EAEbC,MAFa,EAGbC,WAHa,EAIbC,QAJa,EAKb;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,IAAA,IAAI,CAACJ,UAAU,CAACK,UAAZ,IAA0BF,QAA9B,EAAwC;AACtC,MAAO,OAAA,YAAM,EAAb,CAAA;AACD,KAAA;;AAED,IAAA,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,MAAA,IAAIL,WAAW,IAAIF,UAAU,CAACE,WAAX,KAA2BA,WAA9C,EAA2D;AACzD,QAAA,OAAA;AACD,OAAA;;AAEDD,MAAAA,MAAM,CAACM,IAAD,CAAN,CAAA;AACD,KAND,CAAA;;AAQA,IAAMC,IAAAA,GAAG,GAAGR,UAAU,CAACS,KAAX,CAAiBC,SAAjB,CAA2BJ,YAA3B,CAAZ,CAAA;AACA,IAAA,OAAO,YAAM;AACXE,MAAAA,GAAG,CAACG,WAAJ,EAAA,CAAA;AACD,KAFD,CAAA;AAGD,GAjBQ,EAiBN,CAACX,UAAD,EAAaC,MAAb,EAAqBC,WAArB,EAAkCC,QAAlC,CAjBM,CAAT,CAAA;AAkBD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASS,4BAAT,CACLZ,UADK,EAELa,eAFK,EAGLX,WAHK,EAILC,QAJK,EAKL;AACA,EAAA,IAAMW,MAAM,GAAGC,cAAK,CAACC,MAAN,CAA4B,IAA5B,CAAf,CAAA;AACA,EAAA,IAAMf,MAAM,GAAGgB,WAAW,CACxB,UAACV,IAAD,EAAiB;AACfO,IAAAA,MAAM,CAACI,OAAP,GAAiBjb,MAAM,CAACkb,qBAAP,CAA6B,YAAM;AAClDN,MAAAA,eAAe,CAACN,IAAD,CAAf,CAAA;AACD,KAFgB,CAAjB,CAAA;AAGD,GALuB,EAMxB,CAACM,eAAD,CANwB,CAA1B,CAAA;AASAE,EAAAA,cAAK,CAACX,SAAN,CAAgB,YAAM;AACpB,IAAA,OAAO,YAAM;AACX,MAAIU,IAAAA,MAAM,CAACI,OAAX,EAAoB;AAClBjb,QAAAA,MAAM,CAACmb,oBAAP,CAA4BN,MAAM,CAACI,OAAnC,CAAA,CAAA;AACD,OAAA;AACF,KAJD,CAAA;AAKD,GAND,EAMG,EANH,CAAA,CAAA;AAQAnB,EAAAA,OAAO,CAACC,UAAD,EAAaC,MAAb,EAAqBC,WAArB,EAAkCC,QAAlC,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;;AACO,SAASkB,gBAAT,CACLrB,UADK,EAELC,MAFK,EAGL;AACAF,EAAAA,OAAO,CAACC,UAAD,EAAaC,MAAb,EAAqBJ,WAAW,CAACyB,SAAjC,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;;AACO,SAASC,qCAAT,CACLvB,UADK,EAELa,eAFK,EAGL;AACAD,EAAAA,4BAA4B,CAACZ,UAAD,EAAaa,eAAb,EAA8BhB,WAAW,CAACyB,SAA1C,CAA5B,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;;AACO,SAASE,eAAT,CACLxB,UADK,EAELC,MAFK,EAGL;AACAF,EAAAA,OAAO,CAACC,UAAD,EAAaC,MAAb,EAAqBJ,WAAW,CAAC4B,KAAjC,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;;AACO,SAASC,oCAAT,CACL1B,UADK,EAELa,eAFK,EAGL;AACAD,EAAAA,4BAA4B,CAACZ,UAAD,EAAaa,eAAb,EAA8BhB,WAAW,CAAC4B,KAA1C,CAA5B,CAAA;AACD;;ACtID;AACA;AACA;AACA;AAOA,IAAME,cAAc,GAAG,OAAOC,KAAP,KAAiB,WAAxC,CAAA;;AAOA;AACA;AACA;AACA;AACA;AACe,SAASC,aAAT,CAAuBpS,OAAvB,EAAuD;AAAA,EACzCA,IAAAA,IAAAA,GAAAA,OAAO,IAAI,EAD8B;AAAA,MAAA,eAAA,GAAA,IAAA,CAC5DqS,UAD4D;AAAA,MAC5DA,UAD4D,gCAC/C,CAD+C,GAAA,eAAA,CAAA;;AAEpE,EAAA,IAAMC,OAAO,GAAGhB,KAAK,CAACiB,UAAN,CAAiBC,iBAAjB,CAAhB,CAAA;;AACA,EAAI,IAAA,CAACF,OAAL,EAAc;AACZ,IAAA,MAAM,IAAIrZ,KAAJ,CACJ,0FADI,CAAN,CAAA;AAGD,GAAA;;AAED,EAAA,IAAMwZ,WAAW,GAAGnB,KAAK,CAACC,MAAN,CAAa,IAAb,CAApB,CAAA;AACAkB,EAAAA,WAAW,CAAChB,OAAZ,GAAsB,IAAtB,CAAA;AACAH,EAAAA,KAAK,CAACoB,eAAN,CAAsB,YAAM;AAC1BD,IAAAA,WAAW,CAAChB,OAAZ,GAAsB,KAAtB,CAAA;AACD,GAFD,CAAA,CAAA;;AAXoE,EAAA,IAAA,iBAAA,GAe5CH,KAAK,CAACqB,UAAN,CAAiB,UAACC,CAAD,EAAA;AAAA,IAAOA,OAAAA,CAAC,GAAG,CAAX,CAAA;AAAA,GAAjB,EAA+B,CAA/B,CAf4C;AAAA,MAe3DC,WAf2D,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA;;AAgBpE,EAAA,IAAMC,gBAAgB,GAAGxB,KAAK,CAACC,MAAN,CAAa,KAAb,CAAzB,CAAA;AACA,EAAA,IAAMwB,iBAAiB,GAAGzB,KAAK,CAACC,MAAN,CAA2B,IAA3B,CAA1B,CAAA;AACA,EAAA,IAAMhB,UAAU,GAAGe,KAAK,CAAC0B,OAAN,CAAc,YAAA;AAAA,IAAA,OAC/B,CAACd,cAAD,GACII,OAAO,CAAC/B,UADZ,GAEI,IAAI4B,KAAJ,CAAUG,OAAO,CAAC/B,UAAlB,EAA8B;AAC5BtN,MAAAA,GAD4B,EAAA,SAAA,GAAA,CACxBgQ,IADwB,EAClBC,IADkB,EACZ;AACd,QAAA,IAAIA,IAAI,KAAK,OAAT,IAAoBT,WAAW,CAAChB,OAApC,EAA6C;AAC3CqB,UAAAA,gBAAgB,CAACrB,OAAjB,GAA2B,IAA3B,CAAA;AACAsB,UAAAA,iBAAiB,CAACtB,OAAlB,GAA4BwB,IAAI,CAACC,IAAD,CAAhC,CAAA;AACD,SAAA;;AACD,QAAOD,OAAAA,IAAI,CAACC,IAAD,CAAX,CAAA;AACD,OAAA;AAP2B,KAA9B,CAH2B,CAAA;AAAA,GAAd,EAYjB,CAACZ,OAAO,CAAC/B,UAAT,CAZiB,CAAnB,CAAA;AAeA,EAAA,IAAM4C,iBAAiB,GAAG7B,KAAK,CAAC0B,OAAN,CAAc,YAAM;AAC5C,IAAA,IAAII,MAAM,CAACC,QAAP,CAAgBhB,UAAhB,CAAJ,EAAiC;AAC9B,MAAA,OAAOiB,QAAQ,CAACT,WAAD,EAAcR,UAAd,CAAf,CAAA;AACF,KAAA;;AACD,IAAA,OAAOkB,IAAP,CAAA;AACD,GALyB,EAKvB,CAAClB,UAAD,CALuB,CAA1B,CAAA;AAQAf,EAAAA,KAAK,CAACX,SAAN,CAAgB,YAAM;AACpB,IAAMI,IAAAA,GAAG,GAAGuB,OAAO,CAACkB,OAAR,CAAgBvC,SAAhB,CAA0B,YAAM;AAC1C,MAAA,IACE,CAAC,CAACiB,cAAD,IAAmBY,gBAAgB,CAACrB,OAArC,KACKa,OAAO,CAAC/B,UAAR,CAAmB9X,KAAnB,KAA6Bsa,iBAAiB,CAACtB,OAFtD,EAGE;AACAoB,QAAAA,WAAW,EAAA,CAAA;AACZ,OAAA;AACF,KAPW,CAAZ,CAAA;AAQA,IAAO9B,OAAAA,GAAG,CAACG,WAAX,CAAA;AACD,GAVD,EAUG,CAACoB,OAAD,CAVH,CAAA,CAAA;AAYAhC,EAAAA,OAAO,CAACC,UAAD,EAAa4C,iBAAb,CAAP,CAAA;AAEA,EAAA,OAAO5C,UAAP,CAAA;AACD;;;AClEc,SAASkD,iBAAT,CACbC,SADa,EAEb;AACA,EAAO,OAAA,UAACxa,KAAD,EAAkC;AACvC,IAAA,IAAMqX,UAAU,GAAG6B,aAAa,EAAhC,CADuC;;AAGvC,IAAO,oBAAAuB,gBAAA,CAAC,SAAD,EAAA,QAAA,CAAA,EAAA,EAAeza,KAAf,EAAA;AAAsB,MAAA,UAAU,EAAEqX,UAAAA;AAAlC,KAAP,CAAA,CAAA,CAAA;AACD,GAJD,CAAA;AAKD;;ACLD,IAAYqD,cAAZ;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,CAAAA,EAAAA,kBAAAA;;AA+GZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAT,CAAgB/N,SAAhB,EAAiD;AAAA,EAAA,IACvC/M,IADuC,GAC9B+M,SAD8B,CACvC/M,IADuC,CAAA;;AAE/C,EAAIA,IAAAA,IAAI,KAAK,UAAb,EAAyB;AACvB,IAAA,OAAA,QAAA,CAAA,EAAA,EACK+M,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,aAAA;AAFR,KAAA,CAAA,CAAA;AAID,GAAA;;AACD,EAAIA,IAAAA,IAAI,KAAK,aAAb,EAA4B;AAC1B,IAAA,OAAA,QAAA,CAAA,EAAA,EACK+M,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,aAAA;AAFR,KAAA,CAAA,CAAA;AAID,GAAA;;AACD,EAAIA,IAAAA,IAAI,KAAK,aAAb,EAA4B;AAC1B,IAAA,OAAA,QAAA,CAAA,EAAA,EACK+M,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,aAAA;AAFR,KAAA,CAAA,CAAA;AAID,GAAA;;AACD,EAAIA,IAAAA,IAAI,KAAK,YAAb,EAA2B;AAAA,IAAA,IAAA,IAAA,GACR+M,SADQ;AAAA,QACjBxC,IADiB,QACjBA,IADiB,CAAA;AAEzB,IAAA,IAAMwQ,YAAY,GAAG1Q,IAAI,CAACa,SAAL,CAAeX,IAAf,CAArB,CAAA;AACA,IAAA,OAAA,QAAA,CAAA,EAAA,EACKwC,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,YAFR;AAGEuK,MAAAA,IAAI,EAAEwQ,YAAAA;AAHR,KAAA,CAAA,CAAA;AAKD,GAAA;;AACD,EAAI/a,IAAAA,IAAI,KAAK,WAAb,EAA0B;AAAA,IAAA,IAAA,KAAA,GACE+M,SADF;AAAA,QAChBxC,KADgB,SAChBA,IADgB;AAAA,QACVc,OADU,SACVA,OADU,CAAA;;AAExB,IAAIhB,IAAAA,IAAI,CAAC5I,OAAL,CAAa8I,KAAb,EAAmBc,OAAnB,CAAJ,EAAiC;AAC/B,MAAA,OAAO0B,SAAP,CAAA;AACD,KAAA;;AAED,IAAIgO,IAAAA,aAAY,GAAG1P,OAAnB,CAAA;AACA,IAAI2P,IAAAA,eAAe,GAAGzQ,KAAtB,CAAA;AAEA,IAAMuB,IAAAA,SAAS,GAAGzB,IAAI,CAACyB,SAAL,CAAevB,KAAf,EAAqBc,OAArB,CAAlB,CATwB;AAWxB;AACA;AACA;AACA;;AACA,IAAI,IAAA,CAACS,SAAL,EAAgB;AACd,MAAMG,IAAAA,SAAS,GAAG5B,IAAI,CAAC4B,SAAL,CAAe1B,KAAf,EAAqBc,OAArB,CAAlB,CAAA;AACA,MAAM4P,IAAAA,iBAAiB,GAAG5Q,IAAI,CAAC4B,SAAL,CAAe8O,aAAf,EAA6BC,eAA7B,CAA1B,CAAA;AACA,MAAME,IAAAA,kBAAkB,GAAG7Q,IAAI,CAACoB,UAAL,CAAgBsP,aAAhB,EAA8BC,eAA9B,CAA3B,CAAA;;AAEA,MAAA,IAAI/O,SAAJ,EAAe;AACb8O,QAAAA,aAAY,GAAG1Q,IAAI,CAACa,SAAL,CAAeG,OAAf,EAAwB,CAAxB,EAA2Bd,KAAI,CAAC5J,MAAL,GAAc,CAAzC,CAAf,CAAA;AACD,OAFD,MAEO,IAAIsa,iBAAiB,IAAIC,kBAAzB,EAA6C;AAClDF,QAAAA,eAAe,GAAG3Q,IAAI,CAACe,SAAL,CAAeb,KAAf,EAAqB,CAArB,EAAwBc,OAAO,CAAC1K,MAAR,GAAiB,CAAzC,CAAlB,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,OAAA,QAAA,CAAA,EAAA,EACKoM,SADL,EAAA;AAEExC,MAAAA,IAAI,EAAEwQ,aAFR;AAGE1P,MAAAA,OAAO,EAAE2P,eAAAA;AAHX,KAAA,CAAA,CAAA;AAKD,GAAA;;AACD,EAAIhb,IAAAA,IAAI,KAAK,aAAb,EAA4B;AAC1B,IAAA,OAAA,QAAA,CAAA,EAAA,EACK+M,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,UAAA;AAFR,KAAA,CAAA,CAAA;AAID,GAAA;;AACD,EAAIA,IAAAA,IAAI,KAAK,aAAb,EAA4B;AAC1B,IAAA,OAAA,QAAA,CAAA,EAAA,EACK+M,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,aAAA;AAFR,KAAA,CAAA,CAAA;AAID,GAAA;;AACD,EAAIA,IAAAA,IAAI,KAAK,aAAb,EAA4B;AAC1B,IAAA,OAAA,QAAA,CAAA,EAAA,EACK+M,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,aAAA;AAFR,KAAA,CAAA,CAAA;AAID,GAAA;;AACD,EAAIA,IAAAA,IAAI,KAAK,UAAb,EAAyB;AAAA,IAAA,IAAA,KAAA,GACM+M,SADN;AAAA,QACfrL,IADe,SACfA,IADe;AAAA,QACTT,UADS,SACTA,UADS,CAAA;AAEvB,IAAA,IAAMka,YAAY,GAAGzZ,IAAI,CAACH,KAAL,CAAWN,UAAX,CAArB,CAAA;AACA,IAAA,IAAMma,kBAAkB,GAAGhc,MAAM,CAACic,IAAP,CAAYpa,UAAZ,CAAA,CAAwB+B,MAAxB,CACzB,UAAC0I,CAAD,EAAIjM,GAAJ,EAAA;AAAA,MAAA,IAAA,SAAA,CAAA;;AAAA,MAAA,OAAA,QAAA,CAAA,EAAA,EAAkBiM,CAAlB,GAAsBjM,SAAAA,GAAAA,EAAAA,EAAAA,SAAAA,CAAAA,GAAtB,IAA4BiC,IAAI,CAACjC,GAAD,CAAhC,EAAA,SAAA,EAAA,CAAA;AAAA,KADyB,EAEzB,EAFyB,CAA3B,CAAA;AAIA,IAAA,OAAA,QAAA,CAAA,EAAA,EACKsN,SADL,EAAA;AAEErL,MAAAA,IAAI,EAAEyZ,YAFR;AAGEla,MAAAA,UAAU,EAAEma,kBAAAA;AAHd,KAAA,CAAA,CAAA;AAKD,GAAA;;AACD,EAAIpb,IAAAA,IAAI,KAAK,UAAb,EAAyB;AAAA,IAAA,IAAA,KAAA,GACgB+M,SADhB;AAAA,QACf9L,WADe,SACfA,UADe;AAAA,QACHqa,cADG,SACHA,cADG,CAAA;AAEvB,IAAA,OAAA,QAAA,CAAA,EAAA,EACKvO,SADL,EAAA;AAEE9L,MAAAA,UAAU,EAAEqa,cAAc,IAAI,EAFhC;AAGEA,MAAAA,cAAc,EAAEra,WAAAA;AAHlB,KAAA,CAAA,CAAA;AAKD,GAAA;;AACD,EAAIjB,IAAAA,IAAI,KAAK,eAAb,EAA8B;AAAA,IAAA,IAAA,KAAA,GACS+M,SADT;AAAA,QACpB+L,SADoB,SACpBA,SADoB;AAAA,QACTyC,aADS,SACTA,aADS,CAAA;AAE5B,IAAA,OAAA,QAAA,CAAA,EAAA,EACKxO,SADL,EAAA;AAEE+L,MAAAA,SAAS,EAAEyC,aAFb;AAGEA,MAAAA,aAAa,EAAEzC,SAAAA;AAHjB,KAAA,CAAA,CAAA;AAKD,GAAA;;AACD,EAAI9Y,IAAAA,IAAI,KAAK,YAAb,EAA2B;AAAA,IAAA,IAAA,KAAA,GACR+M,SADQ;AAAA,QACjBxC,MADiB,SACjBA,IADiB,CAAA;;AAEzB,IAAA,IAAMwQ,cAAY,GAAG1Q,IAAI,CAACe,SAAL,CAAeb,MAAf,CAArB,CAAA;;AACA,IAAA,OAAA,QAAA,CAAA,EAAA,EACKwC,SADL,EAAA;AAEE/M,MAAAA,IAAI,EAAE,YAFR;AAGEuK,MAAAA,IAAI,EAAEwQ,cAAAA;AAHR,KAAA,CAAA,CAAA;AAKD,GAAA;;AACD,EAAA,MAAM,IAAI7a,KAAJ,CAAsCF,4BAAAA,GAAAA,IAAtC,GAAN,KAAA,CAAA,CAAA;AACD,CAAA;;AAED,IAAMwb,SAAS,GAAG;AAChBV,EAAAA,MAAM,EAANA,MAAAA;AADgB;;ACrPlB,IAAMW,UAAU,GAAG,IAAI/U,OAAJ,EAAnB,CAAA;;IAE8BgV;;;AAErBC,EAAAA,KAAAA,CAAAA,mBAAP,SAAA,gBAAA,CAAwBlc,GAAxB,EAAqCkO,KAArC,EAAgE;AAC9D,IAAA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,MAAOiO,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AACtBvB,QAAAA,GAAG,EAAHA,GADsB;AAEtB6E,QAAAA,MAAM,EAAEqJ,KAAAA;AAFc,OAAjB,CAAP,CAAA;AAID,KALD,MAKO;AACL,MAAOkO,OAAAA,SAAS,CAAC7a,MAAV,CAAiB;AACtBvB,QAAAA,GAAG,EAAHA,GADsB;AAEtBqc,QAAAA,IAAI,EAAEnO,KAAAA;AAFgB,OAAjB,CAAP,CAAA;AAID,KAAA;AACF;;QAEM3M,SAAP,SAAcb,MAAAA,CAAAA,KAAd,EAA8C;AAC5C,IAAIA,IAAAA,KAAK,YAAYub,KAArB,EAA4B;AAC1B,MAAOvb,OAAAA,KAAK,CAACC,SAAN,EAAP,CAAA;AACD,KAAA;;AACD,IAAI,IAAA,MAAA,IAAUD,KAAd,EAAqB;AACnB,MAAA,OAAO0b,SAAS,CAAC7a,MAAV,CAAiBb,KAAjB,CAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,OAAOyb,SAAS,CAAC5a,MAAV,CAAiBb,KAAjB,CAAP,CAAA;AACD,KAAA;AACF;;QAEMiB,WAAP,SAAgBC,QAAAA,CAAAA,IAAhB,EAAqD;AACnD,IAAI,IAAA,QAAA,IAAYA,IAAhB,EAAsB;AACpB,MAAA,OAAOua,SAAS,CAACxa,QAAV,CAAmBC,IAAnB,CAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAOwa,SAAS,CAACza,QAAV,CAAmBC,IAAnB,CAAP,CAAA;AACD;;AAMD,EAAA,SAAA,KAAA,CAAYlB,KAAZ,EAAoC;AAAA,IAAA,IAAA,KAAA,CAAA;;AAClC,IAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA;AADkC,IAAA,KAAA,CAJpBV,GAIoB,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAE1BA,GAF0B,GAElBU,KAFkB,CAE1BV,GAF0B,CAAA;AAGlC,IAAKA,KAAAA,CAAAA,GAAL,GAAWA,GAAX,CAAA;AAHkC,IAAA,OAAA,KAAA,CAAA;AAInC,GAAA;AAED;AACF;AACA;;;;;SACSsc,oBAAP,SAAyBld,iBAAAA,CAAAA,IAAzB,EAAqC;AACnC,IAAA,IAAMmd,SAAS,GAAGnd,IAAI,CAAC4B,YAAL,EAAlB,CAAA;AACA,IAAOmb,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AACtBvB,MAAAA,GAAG,EAAEuc,SAAS,CAACvc,GADO;AAEtB6E,MAAAA,MAAM,EAAE,CAAA;AAFc,KAAjB,CAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;;;SACS2X,kBAAP,SAAuBpd,eAAAA,CAAAA,IAAvB,EAAmC;AACjC,IAAA,IAAMqd,QAAQ,GAAGrd,IAAI,CAAC+B,WAAL,EAAjB,CAAA;AACA,IAAOgb,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AACtBvB,MAAAA,GAAG,EAAEyc,QAAQ,CAACzc,GADQ;AAEtB6E,MAAAA,MAAM,EAAE4X,QAAQ,CAAC5Y,IAAT,CAAc3C,MAAAA;AAFA,KAAjB,CAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;;;AAQSwb,EAAAA,MAAAA,CAAAA,cAAP,SAAwC,WAAA,GAAA;AACtC,IAAA,OAAO,gBAAgBP,SAAvB,CAAA;AACD;;AAEMQ,EAAAA,MAAAA,CAAAA,cAAP,SAAwC,WAAA,GAAA;AACtC,IAAA,OAAO,gBAAgBP,SAAvB,CAAA;AACD;;AAEMQ,EAAAA,MAAAA,CAAAA,eAAP,SAA6C,YAAA,GAAA;AAC3C,IAAO,OAAA,IAAA,CAAKjc,SAAL,EAAP,CAAA;AACD;;AAEMkc,EAAAA,MAAAA,CAAAA,cAAP,SAA4C,WAAA,GAAA;AAC1C,IAAO,OAAA,IAAA,CAAKlc,SAAL,EAAP,CAAA;AACD;;AAEOA,EAAAA,MAAAA,CAAAA,YAAR,SAA2C,SAAA,GAAA;AACzC,IAAI,IAAA,IAAA,CAAK+b,WAAL,EAAJ,EAAwB;AACtB,MAAA,OAAO,IAAP,CAAA;AACD,KAFD,MAEO,IAAI,IAAKC,CAAAA,WAAL,EAAJ,EAAwB;AAC7B,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,MAAM,IAAIlc,KAAJ,CAA0C,+BAAA,GAAA,IAA1C,CAAN,CAAA;AACD;;SAEMqc,qBAAP,SAA0BC,kBAAAA,CAAAA,QAA1B,EAA8C;AAAA,IAAA,IAAA,UAAA,CAAA;;AAC5C,IAAA,IAAMC,KAAK,GAAG,IAAKrc,CAAAA,SAAL,EAAd,CAAA;;AACA,IAAA,IAAIqc,KAAK,CAACN,WAAN,EAAJ,EAAyB;AACvB,MAAA,OAAOM,KAAP,CAAA;AACD,KAAA;;AACD,IAAM5d,IAAAA,IAAI,GAAG2d,QAAQ,CAACtN,OAAT,CAAiB,IAAA,CAAKzP,GAAtB,CAAb,CAAA;AACA,IAAI+V,IAAAA,QAAiC,GACnCiH,KAAK,CAACX,IAAN,KAAeD,SAAS,CAACa,MAAzB,GACI7d,IADJ,oBACIA,IAAI,CAAEgC,YAAN,EADJ,GAEIhC,IAFJ,IAEIA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEiC,WAAN,EAHN,CAAA;;AAIA,IAAI,IAAA,CAAC0U,QAAL,EAAe;AACbA,MAAAA,QAAQ,GACNiH,KAAK,CAACX,IAAN,KAAeD,SAAS,CAACa,MAAzB,GACIF,QAAQ,CAAC/b,YAAT,EADJ,GAEI+b,QAAQ,CAAC5b,WAAT,EAHN,CAAA;AAID,KAAA;;AAf2C,IAAA,IAAA,SAAA,GAgB5B4U,QAhB4B;AAAA,QAgBpC/V,GAhBoC,aAgBpCA,GAhBoC,CAAA;AAiB5C,IAAA,IAAM6E,MAAM,GAAGmY,KAAK,CAACX,IAAN,KAAeD,SAAS,CAACa,MAAzB,GAAkC,CAAlC,GAAsClH,CAAAA,UAAAA,GAAAA,QAAtC,qBAAsC,UAAUlS,CAAAA,IAAV,CAAe3C,MAApE,CAAA;AACA,IAAOib,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AACtBvB,MAAAA,GAAG,EAAHA,GADsB;AAEtB6E,MAAAA,MAAM,EAANA,MAAAA;AAFsB,KAAjB,CAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;;;SACSqY,WAAP,SAAgB9d,QAAAA,CAAAA,IAAhB,EAA4B;AAC1B,IAAA,IAAIA,IAAI,CAAC0B,MAAL,EAAA,IAAiB1B,IAAI,CAACY,GAAL,KAAa,IAAKA,CAAAA,GAAvC,EAA4C,OAAO,IAAP,CAAA;AAC5C,IAAA,IAAIZ,IAAI,CAAC2B,SAAL,EAAA,IAAoB3B,IAAI,CAACqQ,OAAL,CAAa,IAAKzP,CAAAA,GAAlB,CAAxB,EAAgD,OAAO,IAAP,CAAA;AAChD,IAAA,OAAO,KAAP,CAAA;AACD;AAGD;AACA;;;SACOmd,YAAP,SAAiBJ,SAAAA,CAAAA,QAAjB,EAAqC;AACnC,IAAA,IAAI,CAACf,UAAU,CAAC7Y,GAAX,CAAe,IAAf,CAAL,EAA2B;AACzB6Y,MAAAA,UAAU,CAACja,GAAX,CAAe,IAAf,EAAqB,IAAIkF,OAAJ,EAArB,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,IAAMmW,sBAAsB,GAAGpB,UAAU,CAACvR,GAAX,CAAe,IAAf,CAA/B,CAAA;;AACA,IAAA,IAAI,CAAC2S,sBAAsB,CAACja,GAAvB,CAA2B4Z,QAA3B,CAAL,EAA2C;AACzCK,MAAAA,sBAAsB,CAACrb,GAAvB,CAA2Bgb,QAA3B,EAAqCA,QAAQ,CAAChN,OAAT,CAAiB,IAAK/P,CAAAA,GAAtB,CAArC,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,OAAOod,sBAAsB,CAAC3S,GAAvB,CAA2BsS,QAA3B,CAAP,CAAA;AACD;;;EAlJyC5c;AAuJ5C,IAAagc,SAAb,gBAAA,UAAA,MAAA,EAAA;AAAA,EAAA,cAAA,CAAA,SAAA,EAAA,MAAA,CAAA,CAAA;;AAAA,EAAA,SAAA,CACS5a,MADT,GACE,SAAcb,MAAAA,CAAAA,KAAd,EAAiE;AAC/D,IAAIA,IAAAA,KAAK,YAAYyb,SAArB,EAAgC;AAC9B,MAAA,OAAOzb,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIF,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAAA,MAAA,IAChBV,GADgB,GACAU,KADA,CAChBV,GADgB;AAAA,UACX6E,MADW,GACAnE,KADA,CACXmE,MADW,CAAA;AAExB,MAAO,OAAA,IAAIsX,SAAJ,CAAc;AACnBnc,QAAAA,GAAG,EAAHA,GADmB;AAEnB6E,QAAAA,MAAM,EAANA,MAAAA;AAFmB,OAAd,CAAP,CAAA;AAID,KAAA;;AAED,IAAA,MAAM,IAAIpE,KAAJ,CACmEC,oEAAAA,GAAAA,KADnE,CAAN,CAAA;AAGD,GAjBH,CAAA;;AAAA,EAAA,SAAA,CAmBSiB,QAnBT,GAmBE,SAAgBC,QAAAA,CAAAA,IAAhB,EAAqC;AACnC,IAAA,OAAOua,SAAS,CAAC5a,MAAV,CAAA,QAAA,CAAA,EAAA,EACFK,IADE,EAAA;AAEL5B,MAAAA,GAAG,EAAE4B,IAAI,CAAC5B,GAAL,IAAY,MAAA;AAFZ,KAAP,CAAA,CAAA,CAAA;AAID,GAxBH,CAAA;;AAAA,EAAA,YAAA,CAAA,SAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,SAAA;AAAA,IA4BuB,GAAA,EAAA,SAAA,GAAA,GAAA;AACnB,MAAA,OAAU,IAAKA,CAAAA,GAAf,GAAsB,GAAA,GAAA,IAAA,CAAK6E,MAA3B,CAAA;AACD,KAAA;AA9BH,GAAA,CAAA,CAAA,CAAA;;AAgCE,EAAA,SAAA,SAAA,CAAoBnE,KAApB,EAAgD;AAAA,IAAA,IAAA,MAAA,CAAA;;AAC9C,IAAA,MAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,IAAA,IAAA,CAAA;AAD8C,IAAA,MAAA,CANhCmE,MAMgC,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAEtCA,MAFsC,GAE3BnE,KAF2B,CAEtCmE,MAFsC,CAAA;AAG9C,IAAKA,MAAAA,CAAAA,MAAL,GAAcA,MAAd,CAAA;;AACA,IAAA,MAAA,CAAK3E,MAAL,EAAA,CAAA;;AAJ8C,IAAA,OAAA,MAAA,CAAA;AAK/C,GAAA;AAED;AACF;AACA;AACA;;;AA1CA,EAAA,IAAA,OAAA,GAAA,SAAA,CAAA,SAAA,CAAA;;AAAA,EAAA,OAAA,CA2CS2c,WA3CT,GA2CE,SAAmBnR,WAAAA,CAAAA,CAAnB,EAAqC;AAAA,IAAA,IAAlBA,CAAkB,KAAA,KAAA,CAAA,EAAA;AAAlBA,MAAAA,CAAkB,GAAd,CAAc,CAAA;AAAA,KAAA;;AACnC,IAAIA,IAAAA,CAAC,KAAK,CAAV,EAAa;AACX,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAIA,IAAAA,CAAC,GAAG,CAAR,EAAW;AACT,MAAA,OAAO,IAAKkR,CAAAA,YAAL,CAAkB,CAAClR,CAAnB,CAAP,CAAA;AACD,KAAA;;AACD,IAAO,OAAA,IAAA,CAAK3J,GAAL,CAAS,QAAT,EAAmB,IAAK8C,CAAAA,MAAL,GAAc6G,CAAjC,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AAxDA,GAAA;;AAAA,EAAA,OAAA,CAyDSkR,YAzDT,GAyDE,SAAoBlR,YAAAA,CAAAA,CAApB,EAAsC;AAAA,IAAA,IAAlBA,CAAkB,KAAA,KAAA,CAAA,EAAA;AAAlBA,MAAAA,CAAkB,GAAd,CAAc,CAAA;AAAA,KAAA;;AACpC,IAAIA,IAAAA,CAAC,KAAK,CAAV,EAAa;AACX,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAIA,IAAAA,CAAC,GAAG,CAAR,EAAW;AACT,MAAA,OAAO,IAAKmR,CAAAA,WAAL,CAAiB,CAACnR,CAAlB,CAAP,CAAA;AACD,KAAA;;AACD,IAAO,OAAA,IAAA,CAAK3J,GAAL,CAAS,QAAT,EAAmB,IAAK8C,CAAAA,MAAL,GAAc6G,CAAjC,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AAtEA,GAAA;;AAAA,EAAA,OAAA,CAuES2R,MAvET,GAuEE,SAAA,MAAA,CAAcrd,GAAd,EAA2B6E,MAA3B,EAAuC;AAAA,IAAA,IAAZA,MAAY,KAAA,KAAA,CAAA,EAAA;AAAZA,MAAAA,MAAY,GAAH,CAAG,CAAA;AAAA,KAAA;;AACrC,IAAO,OAAA,IAAA,CAAK/C,KAAL,CAAW;AAChB9B,MAAAA,GAAG,EAAHA,GADgB;AAEhB6E,MAAAA,MAAM,EAANA,MAAAA;AAFgB,KAAX,CAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;AAhFA,GAAA;;AAAA,EAAA,OAAA,CAiFSyY,eAjFT,GAiFE,SAAuBle,eAAAA,CAAAA,IAAvB,EAAmC;AACjC,IAAA,IAAI,KAAKyF,MAAL,KAAgB,CAApB,EAAuB,OAAO,KAAP,CAAA;AAEvB,IAAA,IAAM0E,KAAK,GAAGnK,IAAI,CAAC4B,YAAL,EAAd,CAAA;AACA,IAAA,OAAO,IAAKhB,CAAAA,GAAL,KAAauJ,KAAK,CAACvJ,GAA1B,CAAA;AACD,GAAA;AAED;AACF;AACA;AA1FA,GAAA;;AAAA,EAAA,OAAA,CA2FSud,aA3FT,GA2FE,SAAqBne,aAAAA,CAAAA,IAArB,EAAiC;AAC/B,IAAA,IAAM0N,IAAI,GAAG1N,IAAI,CAAC+B,WAAL,EAAb,CAAA;AACA,IAAA,OAAO,IAAKnB,CAAAA,GAAL,KAAa8M,IAAI,CAAC9M,GAAlB,IAAyB,IAAK6E,CAAAA,MAAL,KAAgBiI,IAAI,CAACjJ,IAAL,CAAU3C,MAA1D,CAAA;AACD,GA9FH,CAAA;;AAAA,EAAA,OAAA,CAgGSY,KAhGT,GAgGE,SAAapB,KAAAA,CAAAA,KAAb,EAAkD;AAChD,IAAA,OAAO,IAAIyb,SAAJ,CAAA,QAAA,CAAA;AACLnc,MAAAA,GAAG,EAAE,IAAA,CAAKA,GADL;AAEL6E,MAAAA,MAAM,EAAE,IAAKA,CAAAA,MAAAA;AAFR,KAAA,EAGFnE,KAHE,CAAP,CAAA,CAAA;AAKD,GAtGH,CAAA;;AAAA,EAAA,OAAA,CAwGSqB,GAxGT,GAwGE,SAAA,GAAA,CACE/B,GADF,EAEEC,KAFF,EAGE;AAAA,IAAA,IAAA,WAAA,CAAA;;AACA,IAAA,OAAO,KAAK6B,KAAL,EAAA,WAAA,GAAA,EAAA,EAAA,WAAA,CACJ9B,GADI,CAAA,GACEC,KADF,EAAP,WAAA,EAAA,CAAA;AAGD,GA/GH,CAAA;;AAAA,EAAA,OAAA,CAiHSkC,MAjHT,GAiHE,SAAcqF,MAAAA,CAAAA,OAAd,EAA0C;AACxC,IAAA,IAAM+C,MAAqB,GAAG;AAC5BnI,MAAAA,KAAK,EAAE,OADqB;AAE5ByC,MAAAA,MAAM,EAAE,IAAKA,CAAAA,MAAAA;AAFe,KAA9B,CAAA;;AAKA,IAAA,IAAI2C,OAAJ,IAAA,IAAA,IAAIA,OAAO,CAAEgD,YAAb,EAA2B;AACzBD,MAAAA,MAAM,CAACvK,GAAP,GAAa,KAAKA,GAAlB,CAAA;AACD,KAAA;;AAED,IAAA,OAAOuK,MAAP,CAAA;AACD,GA5HH,CAAA;;AAAA,EAAA,OAAA,SAAA,CAAA;AAAA,CAAA,CAA+B0R,KAA/B,EAAA;AA+HA,IAAaG,SAAb,gBAAA,UAAA,OAAA,EAAA;AAAA,EAAA,cAAA,CAAA,SAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,EAAA,SAAA,CAKS7a,MALT,GAKE,SAAcb,MAAAA,CAAAA,KAAd,EAAiE;AAC/D,IAAIA,IAAAA,KAAK,YAAY0b,SAArB,EAAgC;AAC9B,MAAA,OAAO1b,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIF,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAAA,MAAA,IAChBV,GADgB,GACFU,KADE,CAChBV,GADgB;AAAA,UACXqc,IADW,GACF3b,KADE,CACX2b,IADW,CAAA;AAExB,MAAO,OAAA,IAAID,SAAJ,CAAc;AACnBpc,QAAAA,GAAG,EAAHA,GADmB;AAEnBqc,QAAAA,IAAI,EAAJA,IAAAA;AAFmB,OAAd,CAAP,CAAA;AAID,KAAA;;AAED,IAAA,MAAM,IAAI5b,KAAJ,CACmEC,oEAAAA,GAAAA,KADnE,CAAN,CAAA;AAGD,GArBH,CAAA;;AAAA,EAAA,SAAA,CAuBSiB,QAvBT,GAuBE,SAAgBC,QAAAA,CAAAA,IAAhB,EAAqC;AACnC,IAAA,OAAOwa,SAAS,CAAC7a,MAAV,CAAA,QAAA,CAAA,EAAA,EACFK,IADE,EAAA;AAEL5B,MAAAA,GAAG,EAAE4B,IAAI,CAAC5B,GAAL,IAAY,MAAA;AAFZ,KAAP,CAAA,CAAA,CAAA;AAID,GA5BH,CAAA;;AAAA,EAAA,YAAA,CAAA,SAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,SAAA;AAAA,IAgCuB,GAAA,EAAA,SAAA,GAAA,GAAA;AACnB,MAAA,OAAU,IAAKA,CAAAA,GAAf,GAAsB,GAAA,GAAA,IAAA,CAAKqc,IAA3B,CAAA;AACD,KAAA;AAlCH,GAAA,CAAA,CAAA,CAAA;;AAoCE,EAAA,SAAA,SAAA,CAAoB3b,KAApB,EAAgD;AAAA,IAAA,IAAA,MAAA,CAAA;;AAC9C,IAAA,MAAA,GAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,IAAA,IAAA,CAAA;AAD8C,IAAA,MAAA,CANhC2b,IAMgC,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAEtCA,IAFsC,GAE7B3b,KAF6B,CAEtC2b,IAFsC,CAAA;AAG9C,IAAKA,MAAAA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;;AACA,IAAA,MAAA,CAAKnc,MAAL,EAAA,CAAA;;AAJ8C,IAAA,OAAA,MAAA,CAAA;AAK/C,GAAA;AAED;AACF;AACA;;;AA7CA,EAAA,IAAA,OAAA,GAAA,SAAA,CAAA,SAAA,CAAA;;AAAA,EAAA,OAAA,CA8CSod,eA9CT,GA8CE,SAAuBle,eAAAA,CAAAA,IAAvB,EAAmC;AACjC,IAAA,OAAO,IAAKY,CAAAA,GAAL,KAAaZ,IAAI,CAACY,GAAlB,IAAyB,IAAA,CAAKqc,IAAL,KAAcD,SAAS,CAACa,MAAxD,CAAA;AACD,GAAA;AAED;AACF;AACA;AApDA,GAAA;;AAAA,EAAA,OAAA,CAqDSM,aArDT,GAqDE,SAAqBne,aAAAA,CAAAA,IAArB,EAAiC;AAC/B,IAAA,OAAO,IAAKY,CAAAA,GAAL,KAAaZ,IAAI,CAACY,GAAlB,IAAyB,IAAA,CAAKqc,IAAL,KAAcD,SAAS,CAACoB,KAAxD,CAAA;AACD,GAvDH,CAAA;;AAAA,EAAA,OAAA,CAyDS1b,KAzDT,GAyDE,SAAapB,KAAAA,CAAAA,KAAb,EAAkD;AAChD,IAAA,OAAO,IAAI0b,SAAJ,CAAA,QAAA,CAAA;AACLpc,MAAAA,GAAG,EAAE,IAAA,CAAKA,GADL;AAELqc,MAAAA,IAAI,EAAE,IAAKA,CAAAA,IAAAA;AAFN,KAAA,EAGF3b,KAHE,CAAP,CAAA,CAAA;AAKD,GA/DH,CAAA;;AAAA,EAAA,OAAA,CAiESqB,GAjET,GAiEE,SAAA,GAAA,CACE/B,GADF,EAEEC,KAFF,EAGE;AAAA,IAAA,IAAA,YAAA,CAAA;;AACA,IAAA,OAAO,KAAK6B,KAAL,EAAA,YAAA,GAAA,EAAA,EAAA,YAAA,CACJ9B,GADI,CAAA,GACEC,KADF,EAAP,YAAA,EAAA,CAAA;AAGD,GAxEH,CAAA;;AAAA,EAAA,OAAA,CA0ESkC,MA1ET,GA0EE,SAAcqF,MAAAA,CAAAA,OAAd,EAA0C;AACxC,IAAA,IAAM+C,MAAqB,GAAG;AAC5BnI,MAAAA,KAAK,EAAE,OADqB;AAE5Bia,MAAAA,IAAI,EAAE,IAAKA,CAAAA,IAAAA;AAFiB,KAA9B,CAAA;;AAKA,IAAA,IAAI7U,OAAJ,IAAA,IAAA,IAAIA,OAAO,CAAEgD,YAAb,EAA2B;AACzBD,MAAAA,MAAM,CAACvK,GAAP,GAAa,KAAKA,GAAlB,CAAA;AACD,KAAA;;AAED,IAAA,OAAOuK,MAAP,CAAA;AACD,GArFH,CAAA;;AAAA,EAAA,OAAA,SAAA,CAAA;AAAA,CAAA,CAA+B0R,KAA/B,EAAA;AAAaG,UACKa,SAAS;AADdb,UAGKoB,QAAQ;;ACjU1B;AACA;AACA;AACA;AACA,iBAAe;AAAC,EAAA,MAAA,EAAO,82FAAR;AAAu3F,EAAU,SAAA,EAAA;AAAC,IAAA,OAAA,EAAQ,CAAT;AAAW,IAAA,SAAA,EAAU,CAArB;AAAuB,IAAA,IAAA,EAAK,CAA5B;AAA8B,IAAA,IAAA,EAAK,CAAnC;AAAqC,IAAA,SAAA,EAAU,CAA/C;AAAiD,IAAA,QAAA,EAAS,CAA1D;AAA4D,IAAA,oBAAA,EAAqB,CAAjF;AAAmF,IAAA,aAAA,EAAc,CAAjG;AAAmG,IAAA,GAAA,EAAI,CAAvG;AAAyG,IAAA,GAAA,EAAI,CAA7G;AAA+G,IAAA,GAAA,EAAI,EAAnH;AAAsH,IAAA,IAAA,EAAK,EAA3H;AAA8H,IAAA,KAAA,EAAM,EAApI;AAAuI,IAAA,KAAA,EAAM,EAA7I;AAAgJ,IAAU,SAAA,EAAA,EAAA;AAA1J,GAAA;AAAj4F,CAAf;;ACJA;AACA;AACA;AACA;IAKEC,OACEC,WADFD;AAkBEC,IAAAA,mBAAAA,GAAAA,UAAU,CAACC;AAfbC,IAAAA,4BAAAA;AACAC,IAAAA,8BAAAA;AACAC,IAAAA,yBAAAA;AACAC,IAAAA,yBAAAA;AACAC,IAAAA,8BAAAA;AACAC,IAAAA,6BAAAA;AACAC,IAAAA,yCAAAA;AACAC,IAAAA,kCAAAA;AACAC,IAAAA,wBAAAA;AACAC,IAAAA,wBAAAA;AACAC,IAAAA,wBAAAA;AACAC,IAAAA,yBAAAA;AACAC,IAAAA,0BAAAA;AACAC,IAAAA,0BAAAA;AACAC,IAAAA,8BAAAA;AAGF,IAAIhd,IAAwB,GAAG,IAA/B,CAAA;;AACA,IAAI,OAAO1D,MAAP,KAAkB,WAAtB,EAAmC;AACjC,EAAA,IAAM2gB,GAAG,GAAG3gB,MAAM,CAAC4gB,IAAP,CAAYnB,IAAZ,CAAZ,CAAA;AACA/b,EAAAA,IAAI,GAAG,IAAImd,UAAJ,CAAeF,GAAG,CAACzd,MAAnB,CAAP,CAAA;;AACA,EAAA,KAAK,IAAIgK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyT,GAAG,CAACzd,MAAxB,EAAgCgK,CAAC,EAAjC,EAAA;AAAqCxJ,IAAAA,IAAI,CAACwJ,CAAD,CAAJ,GAAUyT,GAAG,CAACG,UAAJ,CAAe5T,CAAf,CAAV,CAAA;AAArC,GAAA;AACD,CAJD,MAIO;AACLxJ,EAAAA,IAAI,GAAGqd,MAAM,CAACC,IAAP,CAAYvB,IAAZ,EAAkB,QAAlB,CAAP,CAAA;AACD;;;AAED,IAAMwB,SAAS,GAAG,IAAIC,WAAJ,CAAgBxd,IAAhB,CAAlB,CAAA;;AAEA,IAAMyd,WAAW,GAAG,SAAdA,WAAc,CAAUrI,GAAV,EAAe1G,GAAf,EAAoB;AAAE;AACxC,EAAMgP,IAAAA,IAAI,GAAGtI,GAAG,CAACgI,UAAJ,CAAe1O,GAAf,CAAb,CADsC;;AAGtC,EAAA,IAAIgP,IAAI,IAAI,MAAR,IAAkBA,IAAI,IAAI,MAA9B,EAAsC;AACpC,IAAMC,IAAAA,EAAE,GAAGD,IAAX,CAAA;AACA,IAAME,IAAAA,GAAG,GAAGxI,GAAG,CAACgI,UAAJ,CAAe1O,GAAG,GAAG,CAArB,CAAZ,CAAA;;AACA,IAAA,IAAKkP,GAAG,IAAI,MAAP,IAAiBA,GAAG,IAAI,MAA7B,EAAsC;AACpC,MAAQ,OAAA,CAACD,EAAE,GAAG,MAAN,IAAgB,KAAjB,IAA2BC,GAAG,GAAG,MAAjC,CAAA,GAA2C,OAAlD,CAAA;AACD,KAAA;;AACD,IAAA,OAAOD,EAAP,CAAA;AACD,GAVqC;;;AAYtC,EAAA,IAAID,IAAI,IAAI,MAAR,IAAkBA,IAAI,IAAI,MAA9B,EAAsC;AACpC,IAAMC,IAAAA,GAAE,GAAGvI,GAAG,CAACgI,UAAJ,CAAe1O,GAAG,GAAG,CAArB,CAAX,CAAA;;AACA,IAAMkP,IAAAA,IAAG,GAAGF,IAAZ,CAAA;;AACA,IAAA,IAAKC,GAAE,IAAI,MAAN,IAAgBA,GAAE,IAAI,MAA3B,EAAoC;AAClC,MAAQ,OAAA,CAACA,GAAE,GAAG,MAAN,IAAgB,KAAjB,IAA2BC,IAAG,GAAG,MAAjC,CAAA,GAA2C,OAAlD,CAAA;AACD,KAAA;;AACD,IAAA,OAAOA,IAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAOF,IAAP,CAAA;AACD,CArBD,CAAA;;AAuBA,IAAMG,aAAW,GAAG,SAAdA,WAAc,CAAUzI,GAAV,EAAe0I,GAAf,EAAoB;AACtC,EAAA,IAAIC,GAAJ,CAAA;AACA,EAAIC,IAAAA,IAAJ,CAFsC;;AAItC,EAAA,OAAQ,CAACD,GAAG,GAAG3I,GAAG,CAACgI,UAAJ,CAAeU,GAAf,CAAP,KAA+B,MAA/B,IAAyCC,GAAG,IAAI,MAAjD,IAA6D,CAACC,IAAI,GAAG5I,GAAG,CAACgI,UAAJ,CAAeU,GAAG,GAAG,CAArB,CAAR,KAAoC,MAApC,IAA8CE,IAAI,IAAI,MAA1H,CAAA;AACD,CALD,CAAA;;AAOA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,CADM;AAEhBC,EAAAA,UAAU,EAAE,CAFI;AAGhBC,EAAAA,KAAK,EAAE,CAHS;AAIhBC,EAAAA,iBAAiB,EAAE,CAJH;AAKhBC,EAAAA,wBAAwB,EAAE,CAAA;AALV,CAAlB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAU1P,OAAV,EAAmBtI,KAAnB,EAA0BiY,GAA1B,EAA+BhY,GAA/B,EAAoC;AACtD,EAAA,IAAMiY,GAAG,GAAG,CAAClY,KAAD,EAAQQ,MAAR,CAAeyX,GAAf,CAAA,CAAoBzX,MAApB,CAA2B,CAACP,GAAD,CAA3B,CAAZ,CAAA;AACA,EAAA,IAAM6E,QAAQ,GAAGwD,OAAO,GAAGtI,KAAH,GAAWkY,GAAG,CAACA,GAAG,CAACjf,MAAJ,GAAa,CAAd,CAAtC,CAAA;AACA,EAAMuD,IAAAA,IAAI,GAAG8L,OAAO,GAAG4P,GAAG,CAAC,CAAD,CAAN,GAAYjY,GAAhC,CAHsD;AAMtD;AACA;;AACA,EAAA,IAAMkY,OAAO,GAAGD,GAAG,CAACE,WAAJ,CAAgBnC,kBAAhB,CAAhB,CAAA;;AACA,EAAA,IAAIkC,OAAO,GAAG,CAAV,IAAeD,GAAG,CAACxd,KAAJ,CAAU,CAAV,EAAayd,OAAb,CAAA,CAAsBrd,KAAtB,CAA4B,UAAAud,CAAC,EAAA;AAAA,IAAIA,OAAAA,CAAC,KAAKpC,kBAAV,CAAA;AAAA,GAA7B,CAAf,IAA8EnR,QAAQ,KAAK8Q,OAAb,IAAwB9Q,QAAQ,KAAKmR,kBAAvH,EAA4I;AAC1I,IAAA,IAAIiC,GAAG,CAACzc,MAAJ,CAAW,UAAA4c,CAAC,EAAA;AAAA,MAAIA,OAAAA,CAAC,KAAKpC,kBAAV,CAAA;AAAA,KAAZ,EAA0Chd,MAA1C,GAAmD,CAAnD,KAAyD,CAA7D,EAAgE;AAC9D,MAAOye,OAAAA,SAAS,CAACI,iBAAjB,CAAA;AACD,KAAA;;AACD,IAAOJ,OAAAA,SAAS,CAACK,wBAAjB,CAAA;AAED,GAfqD;;;AAiBtD,EAAA,IAAIjT,QAAQ,KAAK+Q,EAAb,IAAmBrZ,IAAI,KAAKsZ,EAAhC,EAAoC;AAClC,IAAO4B,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GAnBqD;;;AAqBtD,EAAI7S,IAAAA,QAAQ,KAAKiR,OAAb,IAAwBjR,QAAQ,KAAK+Q,EAArC,IAA2C/Q,QAAQ,KAAKgR,EAA5D,EAAgE;AAC9D;AACA,IAAItZ,IAAAA,IAAI,KAAKwZ,MAAT,IAAmBiC,GAAG,CAACnd,KAAJ,CAAU,UAAAud,CAAC,EAAA;AAAA,MAAIA,OAAAA,CAAC,KAAKrC,MAAV,CAAA;AAAA,KAAX,CAAvB,EAAqD;AACnD,MAAO0B,OAAAA,SAAS,CAACG,KAAjB,CAAA;AACD,KAAA;;AACD,IAAOH,OAAAA,SAAS,CAACE,UAAjB,CAAA;AAED,GA5BqD;;;AA8BtD,EAAIpb,IAAAA,IAAI,KAAKuZ,OAAT,IAAoBvZ,IAAI,KAAKqZ,EAA7B,IAAmCrZ,IAAI,KAAKsZ,EAAhD,EAAoD;AAClD,IAAO4B,OAAAA,SAAS,CAACE,UAAjB,CAAA;AACD,GAhCqD;;;AAkCtD,EAAI9S,IAAAA,QAAQ,KAAKqR,CAAb,KAAmB3Z,IAAI,KAAK2Z,CAAT,IAAc3Z,IAAI,KAAK4Z,CAAvB,IAA4B5Z,IAAI,KAAK8Z,EAArC,IAA2C9Z,IAAI,KAAK+Z,GAAvE,CAAJ,EAAiF;AAC/E,IAAOmB,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GApCqD;;;AAsCtD,EAAA,IAAI,CAAC7S,QAAQ,KAAKwR,EAAb,IAAmBxR,QAAQ,KAAKsR,CAAjC,MAAwC5Z,IAAI,KAAK4Z,CAAT,IAAc5Z,IAAI,KAAK6Z,CAA/D,CAAJ,EAAuE;AACrE,IAAOqB,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GAxCqD;;;AA0CtD,EAAA,IAAI,CAAC7S,QAAQ,KAAKyR,GAAb,IAAoBzR,QAAQ,KAAKuR,CAAlC,KAAwC7Z,IAAI,KAAK6Z,CAArD,EAAwD;AACtD,IAAOqB,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GA5CqD;;;AA8CtD,EAAA,IAAIrP,OAAJ,EAAa;AACX,IAAI9L,IAAAA,IAAI,KAAKwZ,MAAb,EAAqB;AACnB,MAAO0B,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,KAAA;;AACD,IAAInb,IAAAA,IAAI,KAAKga,GAAb,EAAkB;AAChB,MAAA,IAAI1R,QAAQ,IAAI6Q,KAAZ,IAAqBsC,GAAG,CAAChf,MAAJ,GAAa,CAAlC,IAAuCgf,GAAG,CAAC,CAAD,CAAH,IAAUzB,GAArD,EAA0D;AACxD,QAAOvW,OAAAA,GAAG,IAAIwW,OAAP,GAAiBiB,SAAS,CAACE,UAA3B,GAAwCF,SAAS,CAACG,KAAzD,CAAA;AACD,OAAA;;AACD,MAAOH,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,KAAA;AACF,GAVD,MAUO,IAAInb,IAAI,KAAKwZ,MAAT,IAAmBxZ,IAAI,KAAKga,GAAhC,EAAqC;AAC1C,IAAOkB,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GA1DqD;;;AA4DtD,EAAInb,IAAAA,IAAI,KAAK0Z,WAAb,EAA0B;AACxB,IAAOwB,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GA9DqD;;;AAgEtD,EAAI7S,IAAAA,QAAQ,KAAK8Q,OAAjB,EAA0B;AACxB,IAAO8B,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GAlEqD;;;AAoEtD,EAAA,IAAIrP,OAAJ,EAAa;AACX,IAAA,IAAIxD,QAAQ,IAAI0R,GAAZ,IAAmBha,IAAI,IAAIia,OAA3B,KAAuCzW,KAAK,IAAIwW,GAAT,IAAgBxW,KAAK,IAAI2V,KAAhE,CAAJ,EAA4E;AAC1E,MAAO+B,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,KAAA;AACF,GAJD,MAIO,IAAI3X,KAAK,IAAIyW,OAAT,IAAoB3R,QAAQ,IAAI0R,GAAhC,IAAuCha,IAAI,IAAIia,OAAnD,EAA4D;AACjE,IAAOiB,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GA1EqD;AA6EtD;;;AACA,EAAI,IAAA,CAACrP,OAAD,IAAY2P,GAAG,CAACrL,OAAJ,CAAYqJ,kBAAZ,CAAmC,IAAA,CAAnD,EAAsD;AACpD,IAAOyB,OAAAA,SAAS,CAACG,KAAjB,CAAA;AACD,GAAA;;AACD,EAAA,IAAI/S,QAAQ,KAAKmR,kBAAb,IAAmCzZ,IAAI,KAAKyZ,kBAAhD,EAAoE;AAClE,IAAOyB,OAAAA,SAAS,CAACC,QAAjB,CAAA;AACD,GAnFqD;;;AAqFtD,EAAOD,OAAAA,SAAS,CAACE,UAAjB,CAAA;AACD,CAtFD,CAAA;;AAwFA,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUzJ,GAAV,EAAe7O,KAAf,EAAsBuY,aAAtB,EAAqC;AAChE,EAAOA,OAAAA,aAAa,EAApB,EAAwB;AACtBvY,IAAAA,KAAK,IAAIsX,aAAW,CAACzI,GAAD,EAAM7O,KAAN,CAAX,GAA0B,CAA1B,GAA8B,CAAvC,CAAA;AACD,GAAA;;AACD,EAAA,OAAOA,KAAP,CAAA;AACD,CALD;;;AAQA,SAASwY,SAAT,CAAmBC,MAAnB,EAA2Ble,KAA3B,EAAsC;AAAA,EAAA,IAAXA,KAAW,KAAA,KAAA,CAAA,EAAA;AAAXA,IAAAA,KAAW,GAAH,CAAG,CAAA;AAAA,GAAA;;AACpC,EAAIA,IAAAA,KAAK,GAAG,CAAZ,EAAe;AACb,IAAA,OAAO,CAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAIA,KAAK,IAAIke,MAAM,CAACxf,MAAP,GAAgB,CAA7B,EAAgC;AAC9B,IAAOwf,OAAAA,MAAM,CAACxf,MAAd,CAAA;AACD,GAAA;;AACD,EAAA,IAAMyf,IAAI,GAAG1B,SAAS,CAACxU,GAAV,CAAciW,MAAM,CAACvB,WAAP,CAAmB3c,KAAnB,CAAd,CAAb,CAAA;AACA,EAAM0d,IAAAA,GAAU,GAAG,EAAnB,CAAA;AACA,EAAA,IAAIhV,CAAJ,CAAA;AACA,EAAA,IAAI0V,CAAJ,CAAA;AACA,EAAInB,IAAAA,GAAJ,CAXoC;;AAapC,EAAKvU,KAAAA,CAAC,GAAG0V,CAAC,GAAGpe,KAAK,GAAG,CAAhB,EAAmBid,GAAG,GAAGiB,MAAM,CAACxf,MAArC,EAA6C0f,CAAC,GAAGnB,GAAjD,EAAsDvU,CAAC,GAAG0V,CAAC,IAAI,CAA/D,EAAkE;AAChE,IAAIrB,IAAAA,aAAW,CAACmB,MAAD,EAASxV,CAAC,GAAG,CAAb,CAAf,EAAgC;AAC9B;AACA,MAAA,SAAA;AACD,KAAA;;AACD,IAAA,IAAMzG,IAAI,GAAGwa,SAAS,CAACxU,GAAV,CAAciW,MAAM,CAACvB,WAAP,CAAmBjU,CAAnB,CAAd,CAAb,CAAA;;AACA,IAAI+U,IAAAA,WAAW,CAAC,KAAD,EAAQU,IAAR,EAAcT,GAAd,EAAmBzb,IAAnB,CAAf,EAAyC;AACvC,MAAA,OAAOyG,CAAP,CAAA;AACD,KAAA;;AACDgV,IAAAA,GAAG,CAACzZ,IAAJ,CAAShC,IAAT,CAAA,CAAA;AACD,GAAA;;AACD,EAAOic,OAAAA,MAAM,CAACxf,MAAd,CAAA;AACD;;;AAGD,SAAS2f,aAAT,CAAuBH,MAAvB,EAA+Ble,KAA/B,EAAsD;AAAA,EAAA,IAAvBA,KAAuB,KAAA,KAAA,CAAA,EAAA;AAAvBA,IAAAA,KAAuB,GAAfke,MAAM,CAACxf,MAAQ,CAAA;AAAA,GAAA;;AACpD,EAAA,IAAIsB,KAAK,GAAGke,MAAM,CAACxf,MAAnB,EAA2B;AACzB,IAAOwf,OAAAA,MAAM,CAACxf,MAAd,CAAA;AACD,GAAA;;AACD,EAAIsB,IAAAA,KAAK,IAAI,CAAb,EAAgB;AACd,IAAA,OAAO,CAAP,CAAA;AACD,GAAA;;AACDA,EAAAA,KAAK,EAAA,CAAA;AACL,EAAM0d,IAAAA,GAAU,GAAG,EAAnB,CAAA;AACA,EAAA,IAAMzb,IAAI,GAAGwa,SAAS,CAACxU,GAAV,CAAc0U,WAAW,CAACuB,MAAD,EAASle,KAAT,CAAzB,CAAb,CAAA;AACA,EAAA,IAAI0I,CAAJ,CAAA;AACA,EAAI0V,IAAAA,CAAJ,CAXoD;;AAapD,EAAA,KAAK1V,CAAC,GAAG0V,CAAC,GAAGpe,KAAK,GAAG,CAArB,EAAwBoe,CAAC,IAAI,CAAC,CAA9B,EAAiC1V,CAAC,GAAG0V,CAAC,IAAI,CAAC,CAA3C,EAA8C;AAC5C,IAAA,IAAIrB,aAAW,CAACmB,MAAD,EAASxV,CAAT,CAAf,EAA4B;AAC1B;AACA,MAAA,SAAA;AACD,KAAA;;AACD,IAAA,IAAMyV,IAAI,GAAG1B,SAAS,CAACxU,GAAV,CAAc0U,WAAW,CAACuB,MAAD,EAASxV,CAAT,CAAzB,CAAb,CAAA;;AACA,IAAQ+U,QAAAA,WAAW,CAAC,IAAD,EAAOU,IAAP,EAAaT,GAAb,EAAkBzb,IAAlB,CAAnB;AACE,MAAKkb,KAAAA,SAAS,CAACG,KAAf;AACE,QAAA,OAAO5U,CAAC,GAAGgV,GAAG,CAAChf,MAAR,GAAiB,CAAxB,CAAA;;AACF,MAAKye,KAAAA,SAAS,CAACE,UAAf;AACE,QAAO3U,OAAAA,CAAC,GAAG,CAAX,CAAA;;AACF,MAAKyU,KAAAA,SAAS,CAACI,iBAAf;AACE;AACA,QAAA,IAAMlb,MAAM,GAAG0b,oBAAoB,CAACG,MAAD,EAASxV,CAAT,EAAYgV,GAAG,CAACzX,MAAJ,CAAWhE,IAAX,CAAiB4b,CAAAA,WAAjB,CAA6BnC,kBAA7B,CAAA,GAAmD,CAA/D,CAAnC,CAAA;AACA,QAAA,OAAOrZ,MAAP,CAAA;;AACF,MAAK8a,KAAAA,SAAS,CAACK,wBAAf;AACE,QAAA,OAAOO,oBAAoB,CAACG,MAAD,EAASxV,CAAT,EAAYgV,GAAG,CAACzX,MAAJ,CAAWhE,IAAX,CAAiB4b,CAAAA,WAAjB,CAA6BnC,kBAA7B,CAAZ,CAA3B,CAAA;AAVJ,KAAA;;AAYAgC,IAAAA,GAAG,CAACvb,OAAJ,CAAYgc,IAAZ,CAAA,CAAA;AACD,GAAA;AACF;;;AAGD,SAASG,MAAT,CAAgBhK,GAAhB,EAAqB;AACnB,EAAMiK,IAAAA,GAAU,GAAG,EAAnB,CAAA;AACA,EAAIve,IAAAA,KAAK,GAAG,CAAZ,CAAA;AACA,EAAIwe,IAAAA,GAAJ,CAHmB;;AAKnB,EAAA,OAAO,CAACA,GAAG,GAAGP,SAAS,CAAC3J,GAAD,EAAMtU,KAAN,CAAhB,IAAgCsU,GAAG,CAAC5V,MAA3C,EAAmD;AACjD6f,IAAAA,GAAG,CAACta,IAAJ,CAASqQ,GAAG,CAACnU,KAAJ,CAAUH,KAAV,EAAiBwe,GAAjB,CAAT,CAAA,CAAA;AACAxe,IAAAA,KAAK,GAAGwe,GAAR,CAAA;AACD,GAAA;;AACD,EAAA,IAAIxe,KAAK,GAAGsU,GAAG,CAAC5V,MAAhB,EAAwB;AACtB6f,IAAAA,GAAG,CAACta,IAAJ,CAASqQ,GAAG,CAACnU,KAAJ,CAAUH,KAAV,CAAT,CAAA,CAAA;AACD,GAAA;;AACD,EAAA,OAAOue,GAAP,CAAA;AACD;;;AAGD,SAASE,aAAT,CAAqBnK,GAArB,EAA0B;AACxB,EAAIoK,IAAAA,KAAK,GAAG,CAAZ,CAAA;AACA,EAAI1e,IAAAA,KAAK,GAAG,CAAZ,CAAA;AACA,EAAIwe,IAAAA,GAAJ,CAHwB;;AAKxB,EAAA,OAAO,CAACA,GAAG,GAAGP,SAAS,CAAC3J,GAAD,EAAMtU,KAAN,CAAhB,IAAgCsU,GAAG,CAAC5V,MAA3C,EAAmD;AACjDsB,IAAAA,KAAK,GAAGwe,GAAR,CAAA;AACAE,IAAAA,KAAK,EAAA,CAAA;AACN,GAAA;;AACD,EAAA,IAAI1e,KAAK,GAAGsU,GAAG,CAAC5V,MAAhB,EAAwB;AACtBggB,IAAAA,KAAK,EAAA,CAAA;AACN,GAAA;;AACD,EAAA,OAAOA,KAAP,CAAA;AACD,CAAA;;AAED,uBAAe;AACbT,EAAAA,SAAS,EAATA,SADa;AAEbI,EAAAA,aAAa,EAAbA,aAFa;AAGb,EAAA,OAAA,EAAOC,MAHM;AAIbG,EAAAA,WAAW,EAAXA,aAAAA;AAJa,CAAf;;AC7QA;AACA;AACA;AACA;AAGA,IAAME,eAAe,GAAG,MAAxB,CAAA;AACA,IAAMC,aAAa,GAAG,MAAtB,CAAA;AACA,IAAMC,KAAK,GAAG,IAAd,CAAA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,WAAW,GAAG,iwCAApB,CAAA;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAqC;AACnC,EAAA,OAAO,iBAAkBvjB,CAAAA,IAAlB,CAAuBujB,KAAvB,CAAP,CAAA;AACD,CAAA;;AAED,SAASC,aAAT,CAAuB3K,GAAvB,EAAoC;AAClC,EAAA,OAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAA1C,CAAA;AACD,CAAA;;AAED,SAAS4K,MAAT,CAAgBF,MAAhB,EAA8B;AAC5B,EAAA,OAAOF,WAAW,CAACrjB,IAAZ,CAAiBujB,MAAjB,CAAP,CAAA;AACD;AAGD;AACA;;;AACA,SAASG,cAAT,CAAwBC,KAAxB,EAAuCC,KAAvC,EAAsD;AACpD,EAAA,OAAOJ,aAAa,CAACG,KAAD,CAAb,IACLH,aAAa,CAACI,KAAD,CADR,IAELC,MAAM,CAACF,KAAD,CAAN,KAAkBE,MAAM,CAACD,KAAD,CAFnB,IAGLN,aAAa,CAACK,KAAD,CAAb,KAAyBL,aAAa,CAACM,KAAD,CAHxC,CAAA;AAID,CAAA;;AAED,SAASE,aAAT,CAAuBjL,GAAvB,EAAoC5L,CAApC,EAA+CqF,OAA/C,EAA0E;AACxE,EAAA,IAAIkQ,SAAJ,CAAA;AACA,EAAA,IAAI,CAAC3J,GAAD,IAAQ5L,CAAC,GAAG,CAAZ,IAAiBA,CAAC,GAAG4L,GAAG,CAAC5V,MAA7B,EAAqC,OAAO,EAAP,CAAA;;AAErC,EAAA,IAAIqP,OAAJ,EAAa;AACXkQ,IAAAA,SAAS,GAAGuB,gBAAe,CAACnB,aAAhB,CAA8B/J,GAA9B,EAAmC5L,CAAnC,CAAZ,CAAA;AACA,IAAA,OAAO4L,GAAG,CAACmL,SAAJ,CAAcxB,SAAd,EAAyBvV,CAAzB,CAAP,CAAA;AACD,GAAA;;AAEDuV,EAAAA,SAAS,GAAGuB,gBAAe,CAACvB,SAAhB,CAA0B3J,GAA1B,EAA+B5L,CAA/B,CAAZ,CAAA;AACA,EAAA,OAAO4L,GAAG,CAACmL,SAAJ,CAAc/W,CAAd,EAAiBuV,SAAjB,CAAP,CAAA;AACD,CAAA;;AAED,SAASQ,WAAT,CAAqBnK,GAArB,EAAkC5L,CAAlC,EAA6CqF,OAA7C,EAAwE;AACtE,EAAA,IAAI,CAACuG,GAAD,IAAQ5L,CAAC,GAAG,CAAZ,IAAiBA,CAAC,GAAG4L,GAAG,CAAC5V,MAA7B,EAAqC,OAAO,CAAP,CAAA;AACrC,EAAA,IAAM+G,KAAK,GAAGsI,OAAO,GAAGrF,CAAH,GAAO,CAA5B,CAAA;AACA,EAAMhD,IAAAA,GAAG,GAAGqI,OAAO,GAAGuG,GAAG,CAAC5V,MAAP,GAAgBgK,CAAnC,CAAA;AACA,EAAMrH,IAAAA,IAAI,GAAGiT,GAAG,CAACmL,SAAJ,CAAcha,KAAd,EAAqBC,GAArB,CAAb,CAAA;AACA,EAAA,OAAO8Z,gBAAe,CAACf,WAAhB,CAA4Bpd,IAA5B,CAAP,CAAA;AACD,CAAA;;AAED,SAAS0b,WAAT,CAAqBH,IAArB,EAAmC;AACjC,EAAA,OAAO+B,eAAe,IAAI/B,IAAnB,IAA2BA,IAAI,IAAIgC,aAA1C,CAAA;AACD,CAAA;;AAED,SAASU,MAAT,CAAgBN,MAAhB,EAA8B;AAC5B,EAAA,IAAIH,KAAK,CAACpjB,IAAN,CAAWujB,MAAX,CAAJ,EAAsB;AACpB,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAIF,WAAW,CAACrjB,IAAZ,CAAiBujB,MAAjB,CAAJ,EAA4B;AAC1B,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;;AAED,EAAA,OAAO,IAAP,CAAA;AACD,CAAA;;AAED,SAASU,aAAT,CAAuBre,IAAvB,EAAqCgB,MAArC,EAAqD0L,OAArD,EAAwE;AACtE,EAAOwR,OAAAA,aAAa,CAACle,IAAD,EAAOgB,MAAP,EAAe0L,OAAf,CAAb,CAAqCrP,MAA5C,CAAA;AACD,CAAA;;AAED,SAASihB,qBAAT,CAA+Bte,IAA/B,EAA6CgB,MAA7C,EAA6D;AAC3D,EAAOkd,OAAAA,aAAa,CAACle,IAAD,EAAOgB,MAAP,EAAe,IAAf,CAAb,CAAkC3D,MAAlC,IAA4C,CAAnD,CAAA;AACD,CAAA;;AAED,SAASkhB,oBAAT,CAA8Bve,IAA9B,EAA4CgB,MAA5C,EAA4D;AAC1D,EAAOkd,OAAAA,aAAa,CAACle,IAAD,EAAOgB,MAAP,CAAb,CAA4B3D,MAA5B,IAAsC,CAA7C,CAAA;AACD;;;AAGD,SAASmhB,YAAT,CAAsBxe,IAAtB,EAAoCgB,MAApC,EAAsE;AACpE,EAAIoD,IAAAA,KAAK,GAAG,CAAZ,CAAA;;AACA,EAAOA,OAAAA,KAAK,IAAIpD,MAAhB,EAAwB;AACtB,IAAMqD,IAAAA,GAAG,GAAGD,KAAK,GAAGma,oBAAoB,CAACve,IAAD,EAAOoE,KAAP,CAAxC,CAAA;;AACA,IAAIC,IAAAA,GAAG,GAAGrD,MAAV,EAAkB;AAChB,MAAA,OAAO,CAACoD,KAAD,EAAQC,GAAR,CAAP,CAAA;AACD,KAAA;;AACDD,IAAAA,KAAK,GAAGC,GAAR,CAAA;AACD,GAAA;;AACD,EAAA,OAAO,CAACD,KAAD,EAAQA,KAAK,GAAG+C,IAAI,CAACC,GAAL,CAASpH,IAAI,CAAC3C,MAAd,EAAsB,CAAtB,CAAhB,CAAP,CAAA;AACD,CAAA;;AAED,SAASohB,YAAT,CAAsBze,IAAtB,EAAoCgB,MAApC,EAAoD;AAClD,EAAI,IAAA,CAAChB,IAAL,EAAW;AACT,IAAA,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAA;AACD,GAHiD;;;AAMlDgB,EAAAA,MAAM,GAAGmG,IAAI,CAACC,GAAL,CAASpG,MAAT,EAAiBhB,IAAI,CAAC3C,MAAtB,CAAT,CAAA;AAEA,EAAA,IAAMqhB,YAAY,GAAG1e,IAAI,CAACgB,MAAD,CAAzB,CAAA;AACA,EAAA,IAAM2d,QAAQ,GAAG3e,IAAI,CAACgB,MAAM,GAAG,CAAV,CAArB,CAAA;AACA,EAAA,IAAM4d,QAAQ,GAAG5e,IAAI,CAACgB,MAAM,GAAG,CAAV,CAArB,CAAA;AACA,EAAIqD,IAAAA,GAAG,GAAG,CAAV,CAAA;AACA,EAAA,IAAID,KAAK,GAAG,CAAZ,CAZkD;;AAelD,EAAA,IAAIwZ,aAAa,CAACc,YAAD,CAAjB,EAAiC;AAC/Bra,IAAAA,GAAG,GAAG,CAAN,CAAA;AACD,GAjBiD;AAoBlD;;;AACA,EAAA,IACE,CAACuZ,aAAa,CAACc,YAAD,CAAd,IACAZ,cAAc,CAACa,QAAD,EAAWD,YAAX,CAFhB,EAGE;AACAta,IAAAA,KAAK,GAAGya,qBAAqB,CAAC7e,IAAD,EAAOgB,MAAP,CAA7B,CAAA;AACD,GA1BiD;AA6BlD;;;AACA,EAAA,IAAI8c,cAAc,CAACc,QAAD,EAAWF,YAAX,CAAlB,EAA4C;AAC1Cra,IAAAA,GAAG,GAAGya,oBAAoB,CAAC9e,IAAD,EAAOgB,MAAP,CAA1B,CAAA;AACD,GAAA;;AAED,EAAO,OAAA,CAACA,MAAM,GAAGoD,KAAV,EAAiBpD,MAAM,GAAGqD,GAA1B,CAAP,CAAA;AACD,CAAA;;AAED,SAAS0a,aAAT,CAAuB/e,IAAvB,EAAqCgB,MAArC,EAAqD0L,OAArD,EAAwE;AACtE,EAAIrP,IAAAA,MAAM,GAAG,CAAb,CAAA;AACA,EAAIgK,IAAAA,CAAC,GAAGrG,MAAR,CAAA;;AACA,EAAI2c,IAAAA,MAAI,GAAGO,aAAa,CAACle,IAAD,EAAOqH,CAAP,EAAUqF,OAAV,CAAxB,CAAA;;AACA,EAAMsS,IAAAA,OAAO,GAAGrB,MAAhB,CAAA;;AAEA,EAAA,OAAOG,cAAc,CAACH,MAAD,EAAOqB,OAAP,CAArB,EAAsC;AACpC3hB,IAAAA,MAAM,IAAIsgB,MAAI,CAACtgB,MAAf,CAAA;;AACA,IAAA,IAAIqP,OAAJ,EAAa;AACXrF,MAAAA,CAAC,IAAIsW,MAAI,CAACtgB,MAAV,CAAA;AACD,KAFD,MAEO;AACLgK,MAAAA,CAAC,IAAIsW,MAAI,CAACtgB,MAAV,CAAA;AACD,KAAA;;AACDsgB,IAAAA,MAAI,GAAGO,aAAa,CAACle,IAAD,EAAOqH,CAAP,EAAUqF,OAAV,CAApB,CAAA;AACD,GAdqE;;;AAiBtE,EAAA,OAAOrP,MAAM,IAAIsgB,MAAI,CAACtgB,MAAtB,CAAA;AACD;;;AAGD,SAAS4hB,iBAAT,CAA2Bjf,IAA3B,EAAyCgB,MAAzC,EAAyD0L,OAAzD,EAA4E;AAC1E,EAAIiR,IAAAA,MAAI,GAAGO,aAAa,CAACle,IAAD,EAAOgB,MAAP,EAAe0L,OAAf,CAAxB,CAAA;;AACA,EAAA,IAAI,CAACkR,aAAa,CAACD,MAAD,CAAlB,EAA0B;AACxB,IAAA,OAAO,CAAP,CAAA;AACD,GAAA;;AAED,EAAI9X,IAAAA,KAAK,GAAG,CAAZ,CAAA;AACA,EAAA,IAAIwB,CAAC,GAAGrG,MAAR,CAP0E;;AAU1E,EAAA,OAAOwc,KAAK,CAACpjB,IAAN,CAAWujB,MAAX,CAAP,EAAyB;AACvB,IAAA,IAAIjR,OAAJ,EAAa;AACXrF,MAAAA,CAAC,IAAIsW,MAAI,CAACtgB,MAAV,CAAA;AACAwI,MAAAA,KAAK,IAAI,CAAT,CAAA;AACD,KAHD,MAGO;AACLwB,MAAAA,CAAC,IAAIsW,MAAI,CAACtgB,MAAV,CAAA;AACAwI,MAAAA,KAAK,IAAI,CAAT,CAAA;AACD,KAAA;;AACD8X,IAAAA,MAAI,GAAGO,aAAa,CAACle,IAAD,EAAOqH,CAAP,EAAUqF,OAAV,CAApB,CAAA;AACD,GAAA;;AAED,EAAA,OAAOvF,IAAI,CAAC+X,GAAL,CAASrZ,KAAT,CAAkBkZ,GAAAA,aAAa,CAAC/e,IAAD,EAAOgB,MAAM,GAAG6E,KAAhB,EAAuB6G,OAAvB,CAAtC,CAAA;AACD,CAAA;;AAED,SAASmS,qBAAT,CAA+B7e,IAA/B,EAA6CgB,MAA7C,EAA6D;AAC3D,EAAMuB,IAAAA,CAAC,GAAGwc,aAAa,CAAC/e,IAAD,EAAOgB,MAAP,EAAe,IAAf,CAAvB,CAAA;AACA,EAAA,OAAOuB,CAAP,CAAA;AACD,CAAA;;AAED,SAASuc,oBAAT,CAA8B9e,IAA9B,EAA4CgB,MAA5C,EAA4D;AAC1D,EAAA,IAAMuB,CAAC,GAAGwc,aAAa,CAAC/e,IAAD,EAAOgB,MAAP,CAAvB,CAAA;AACA,EAAA,OAAOuB,CAAP,CAAA;AACD,CAAA;;AAED,SAAS4c,cAAT,CAAwBnf,IAAxB,EAAgD;AAC9C,EAAA,OAAOme,gBAAe,CAAA,OAAA,CAAf,CAAsBne,IAAtB,CAAP,CAAA;AACD,CAAA;;AAGD,IAAMof,SAAO,GAAG,IAAhB,CAAA;AACA,IAAMC,OAAO,GAAG,IAAhB,CAAA;AACA,IAAMC,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoB,EAApB,CAArB,CAAA;AACO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,IAAI,EAAE,QAFoB;AAG1BC,EAAAA,GAAG,EAAE,QAAA;AAHqB,CAArB,CAAA;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,eAAT,CAAuB7f,IAAvB,EAA6C;AAClD,EAAImF,IAAAA,MAAM,GAAG,EAAb,CAAA;;AACA,EAAA,KAAK,IAAIkC,CAAC,GAAGrH,IAAI,CAAC3C,MAAL,GAAc,CAA3B,EAA8BgK,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,IAAA,IAAIrH,IAAI,CAACqH,CAAD,CAAJ,KAAY+X,SAAhB,EAAyB;AACvB,MAAIpf,IAAAA,IAAI,CAACqH,CAAC,GAAG,CAAL,CAAJ,KAAgBgY,OAApB,EAA6B;AAC3BhY,QAAAA,CAAC,EAAA,CAAA;AACF,OAAA;;AACDlC,MAAAA,MAAM,GAAGia,SAAO,GAAGja,MAAnB,CAAA;AACA,MAAA,SAAA;AACD,KAAA;;AACD,IAAA,IAAInF,IAAI,CAACqH,CAAD,CAAJ,KAAYgY,OAAhB,EAAyB;AACvBla,MAAAA,MAAM,GAAGia,SAAO,GAAGja,MAAnB,CAAA;AACA,MAAA,SAAA;AACD,KAAA;;AACD,IAAInF,IAAAA,IAAI,CAACqH,CAAD,CAAJ,KAAYoY,YAAY,CAACC,IAA7B,EAAmC;AACjCva,MAAAA,MAAM,GAAGma,YAAY,GAAGna,MAAxB,CAAA;AACA,MAAA,SAAA;AACD,KAAA;;AACD,IAAA,IAAInF,IAAI,CAACqH,CAAD,CAAJ,KAAYoY,YAAY,CAACE,IAAzB,IAAiC3f,IAAI,CAACqH,CAAD,CAAJ,KAAYoY,YAAY,CAACG,GAA9D,EAAmE;AACjE,MAAA,SAAA;AACD,KAAA;;AACDza,IAAAA,MAAM,GAAGnF,IAAI,CAACqH,CAAD,CAAJ,GAAUlC,MAAnB,CAAA;AACD,GAAA;;AACD,EAAA,OAAOA,MAAP,CAAA;AACD,CAAA;AAED,gBAAe;AACbiY,EAAAA,WAAW,EAAXA,WADa;AAEbc,EAAAA,aAAa,EAAbA,aAFa;AAGbG,EAAAA,aAAa,EAAbA,aAHa;AAIbC,EAAAA,qBAAqB,EAArBA,qBAJa;AAKbC,EAAAA,oBAAoB,EAApBA,oBALa;AAMbC,EAAAA,YAAY,EAAZA,YANa;AAObC,EAAAA,YAAY,EAAZA,YAPa;AAQbM,EAAAA,aAAa,EAAbA,aARa;AASbE,EAAAA,iBAAiB,EAAjBA,iBATa;AAUbJ,EAAAA,qBAAqB,EAArBA,qBAVa;AAWbC,EAAAA,oBAAoB,EAApBA,oBAXa;AAYbpD,EAAAA,WAAW,EAAXA,WAZa;AAabuC,EAAAA,MAAM,EAANA,MAba;AAcbJ,EAAAA,MAAM,EAANA,MAda;AAebH,EAAAA,aAAa,EAAbA,aAfa;AAgBbyB,EAAAA,cAAc,EAAdA,cAhBa;AAiBbU,EAAAA,aAAa,EAAbA,eAAAA;AAjBa,CAAf;;AC9OA,SAASC,cAAT,CAAwBC,EAAxB,EAAkE;AAChE,EAAA,OAAQA,EAAE,KAAK,IAAP,IACRA,EAAE,CAACC,QAAH,KAAgBzjB,IAAI,CAAC0jB,YADb,IAER,CAAEF,EAAD,CAAgBG,YAAhB,CAA6B,sBAA7B,CAFD,CAAA;AAGD,CAAA;AAED;AACA;AACA;AACA;AACA;;;AACe,SAASC,oBAAT,CAA8BJ,EAA9B,EAAyDK,QAAzD,EAA2F;AACxG,EAAG,GAAA;AACD,IAAA,IAAIpjB,OAAO,CAAC6N,SAAR,CAAkBwV,OAAlB,CAA0BC,IAA1B,CAA+BP,EAA/B,EAAmCK,QAAnC,CAAJ,EAAkD,OAAOL,EAAP,CAAA;AAClDA,IAAAA,EAAE,GAAGA,EAAE,CAAEQ,aAAJ,IAAqBR,EAAE,CAAES,UAA9B,CAAA;AACD,GAHD,QAICV,cAAc,CAACC,EAAD,CAJf,EAAA;;AAMA,EAAA,OAAO,IAAP,CAAA;AACD;;ACnBD;AACA;AACA;AACA;AAEO,IAAMU,iBAAiB,GAAG;AAC/BC,EAAAA,QAAQ,EAAE,gCADqB;AAE/BC,EAAAA,OAAO,EAAE,qCAFsB;AAG/BC,EAAAA,IAAI,EAAE,yBAHyB;AAI/BC,EAAAA,MAAM,EAAE,uBAJuB;AAK/BC,EAAAA,QAAQ,EAAE,wBALqB;AAM/BC,EAAAA,UAAU,EAAE,kCANmB;AAO/BC,EAAAA,kBAAkB,EAAE,oBAAA;AAPW,CAA1B,CAAA;AAUA,IAAMC,UAAU,GAAA,QAAA,CAAA;AACrBC,EAAAA,IAAI,EAAE,WADe;AAErBC,EAAAA,IAAI,EAAE,YAAA;AAFe,CAAA,EAGlBV,iBAHkB,CAAhB,CAAA;AAMA,IAAMW,MAAM,GAAG,CACpB,UADoB,EAEpB,UAFoB,EAGpB,gBAHoB,EAIpB,eAJoB,EAKpB,gBALoB,EAMpB,iBANoB,EAOpB,eAPoB,EAQpB,cARoB,EASpB,gBAToB,EAUpB,0BAVoB,EAWpB,SAXoB,EAYpB,QAZoB,EAapB,OAboB,EAcpB,SAdoB,EAepB,WAfoB,EAgBpB,SAhBoB,EAiBpB,aAjBoB,EAkBpB,aAlBoB,EAmBpB,WAnBoB,EAoBpB,cApBoB,EAqBpB,aArBoB,EAsBpB,YAtBoB,EAuBpB,eAvBoB,EAwBpB,aAxBoB,EAyBpB,YAzBoB,EA0BpB,QA1BoB,EA2BpB,aA3BoB,CAAf,CAAA;AA8BP;AACA;AACA;;AACO,IAAMC,YAAY,GAAG,CAArB,CAAA;AAEP;AACA;AACA;;AACO,IAAMC,sBAAsB,GAAG,EAA/B,CAAA;AAEP;AACA;AACA;;AACO,IAAMC,kBAAkB,GAAG,CAA3B,CAAA;AAEA,IAAMC,aAAa,GAAG,QAAtB,CAAA;AAEP;AACA;AACA;;AACO,IAAMC,uBAAuB,GAAG,wBAAhC,CAAA;AAEP;AACA;AACA;;AACO,IAAMC,6BAA6B,GAAG,CAAtC,CAAA;AAEP;AACA;AACA;;AACO,IAAMC,gCAAgC,GAAG,0BAAzC,CAAA;AAEA,IAAMC,mBAAmB,GAAG,KAA5B,CAAA;AAEA,IAAMC,QAAQ,GAAG;AACtB1lB,EAAAA,GAAG,EAAE,kBADiB;AAEtB2lB,EAAAA,OAAO,EAAE,sBAFa;AAGtBC,EAAAA,cAAc,EAAE,8BAHM;AAItBC,EAAAA,QAAQ,EAAE,uBAJY;AAKtB,EAAA,MAAA,EAAM,mBALgB;AAMtBrhB,EAAAA,IAAI,EAAE,mBANgB;AAOtBshB,EAAAA,SAAS,EAAE,yBAPW;AAQtBC,EAAAA,SAAS,EAAE,yBARW;AAStBC,EAAAA,WAAW,EAAE,2BATS;AAUtBC,EAAAA,MAAM,EAAE,qBAVc;AAWtBC,EAAAA,cAAc,EAAE,8BAXM;AAYtBC,EAAAA,gBAAgB,EAAE,gCAZI;AAatBC,EAAAA,UAAU,EAAE,0BAbU;AActBC,EAAAA,QAAQ,EAAE,wBAdY;AAetBC,EAAAA,YAAY,EAAE,gBAfQ;AAgBtBC,EAAAA,IAAI,EAAE,iBAAA;AAhBgB,CAAjB,CAAA;AAmBP;AACA;AACA;;AACO,IAAMC,gBAAgB,GAAG,GAAzB,CAAA;AAEP;;AACO,IAAMC,mBAAmB,GAAG,uBAA5B;;;;;;;;;;;;;;;;;;;;AC9GP;AACA;AACA;AACA;AAOA;AACA;AACA;;AACA,SAASC,SAAT,CACEC,UADF,EAEEC,YAFF,EAGE7O,UAHF,EAIE;AACA,EAAI,IAAA,CAAC4O,UAAL,EAAiB;AACf,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAED,EAAMvnB,IAAAA,IAAI,GACRunB,UAAU,YAAY/lB,IAAtB,GACI+lB,UAAU,CAACvC,aADf,GAEIuC,UAHN,CAAA;;AAIA,EAAA,IAAI,EAAEvnB,IAAI,YAAYyB,OAAlB,CAAJ,EAAgC;AAC9B,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAXD,EAAA,IAaQkc,QAbR,GAaqBhF,UAAU,CAAC9X,KAbhC,CAaQ8c,QAbR,CAAA;AAeA,EAAA,IAAIvY,IAAJ,CAAA;;AACA,EAAA,IAAIpF,IAAI,CAAC2kB,YAAL,CAAkB2B,QAAQ,CAAA,MAAA,CAA1B,CAAJ,EAAsC;AACpC;AACA;AACA;AACA,IAAM1lB,IAAAA,IAAG,GAAGZ,IAAI,CAAC2kB,YAAL,CAAkB2B,QAAQ,CAAC1lB,GAA3B,CAAZ,CAAA;;AACA,IAAI,IAAA,CAACA,IAAL,EAAU;AACR,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAM6mB,QAAQ,GAAG9J,QAAQ,CAACtN,OAAT,CAAiBzP,IAAjB,CAAjB,CAAA;;AACA,IAAI,IAAA,CAAC6mB,QAAL,EAAe;AACb,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAMhjB,KAAI,GAAGgjB,QAAQ,CAACzlB,YAAT,EAAb,CAAA;;AACA,IAAI,IAAA,CAACyC,KAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAOsY,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AACtBvB,MAAAA,GAAG,EAAE6D,KAAI,CAAC7D,GADY;AAEtB6E,MAAAA,MAAM,EAAE,CAAA;AAFc,KAAjB,CAAP,CAAA;AAID,GApBD,MAoBO;AACLL,IAAAA,IAAI,GAAGpF,IAAI,CAAC2kB,YAAL,CAAA,GAAA,GAAsB2B,QAAQ,CAAClhB,IAA/B,UACHpF,IADG,GAEH4kB,oBAAoB,CAAC5kB,IAAD,QAAWsmB,QAAQ,CAAClhB,IAApB,GAFxB,GAAA,CAAA,CAAA;AAGD,GAAA;;AAED,EAAI,IAAA,CAACA,IAAL,EAAW;AACT,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AA5CD,EAAA,IAAA,eAAA,GA8CsBuB,QAAQ,CAACE,KAAT,CACpBzB,IAAI,CAACuf,YAAL,CAAkB2B,QAAQ,CAAC1lB,GAA3B,CAAA,IAAmC,EADf,CA9CtB;AAAA,MA8COA,GA9CP,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MA8CY6E,MA9CZ,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;AAkDA,EAAA,IAAMhB,IAAI,GAAGkZ,QAAQ,CAACtN,OAAT,CAAiBzP,GAAjB,CAAb,CAAA;;AACA,EAAI,IAAA,CAAC6D,IAAL,EAAW;AACT,IAAA,OAAO,IAAP,CAAA;AACD,GArDD;;;AAuDA,EAAMijB,IAAAA,UAAU,GAAGtiB,IAAI,CAACuiB,WAAL,IAAoBviB,IAAI,CAACuiB,WAAL,KAAqB1B,aAAzC,GACf7gB,IAAI,CAACuiB,WAAL,CAAiBpkB,KAAjB,CAAuB,CAAvB,EAA0BikB,YAA1B,CADe,GAEf,EAFJ,CAAA;AAGA,EAAOzK,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AACtBvB,IAAAA,GAAG,EAAHA,GADsB;AAEtB6E,IAAAA,MAAM,EAAEA,MAAM,GAAGiiB,UAAU,CAAC5lB,MAAAA;AAFN,GAAjB,CAAP,CAAA;AAID;;AC/ED;AACA;AACA;AACA;AAKA;AACA;AACA;;AACA,SAAS8lB,SAAT,CAAmBC,OAAnB,EAAkClP,UAAlC,EAA0D;AAAA,EAAA,IAEtDmP,cAFsD,GAOpDD,OAPoD,CAEtDC,cAFsD;AAAA,MAGtDjiB,WAHsD,GAOpDgiB,OAPoD,CAGtDhiB,WAHsD;AAAA,MAItDkiB,YAJsD,GAOpDF,OAPoD,CAItDE,YAJsD;AAAA,MAKtDriB,SALsD,GAOpDmiB,OAPoD,CAKtDniB,SALsD;AAAA,MAMtDsiB,SANsD,GAOpDH,OAPoD,CAMtDG,SANsD,CAAA;AAQxD,EAAMnf,IAAAA,KAAK,GAAGye,SAAS,CAACQ,cAAD,EAAiBjiB,WAAjB,EAA8B8S,UAA9B,CAAvB,CAAA;AACA,EAAA,IAAM7P,GAAG,GAAGkf,SAAS,GACjBnf,KADiB,GAEjBye,SAAS,CAACS,YAAD,EAAeriB,SAAf,EAA0BiT,UAA1B,CAFb,CAAA;;AAGA,EAAA,IAAI,CAAC9P,KAAD,IAAU,CAACC,GAAf,EAAoB;AAClB,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAOmf,OAAAA,SAAS,CAAC9lB,MAAV,CAAiB;AAAE+lB,IAAAA,MAAM,EAAErf,KAAV;AAAiBsf,IAAAA,KAAK,EAAErf,GAAAA;AAAxB,GAAjB,CAAP,CAAA;AACD;;;;;;;;sDCoGSsf;uDAcAC;;AA5HV,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,CAAD,EAAY3U,CAAZ,EAAe4U,IAAf,EAAA;AAAA,EAAA,OAAiCD,CAAC,GAAGC,IAAI,CAAC7iB,IAA1C,CAAA;AAAA,CAA5B,CAAA;;AACA,IAAM8iB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACF,CAAD,EAAY3U,CAAZ,EAAe4U,IAAf,EAAA;AAAA,EAAA,OAAiCD,CAAC,GAAGC,IAAI,CAAC5iB,KAA1C,CAAA;AAAA,CAA7B,CAAA;;AACA,IAAM8iB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC9U,CAAD,EAAI+U,CAAJ,EAAeH,IAAf,EAAA;AAAA,EAAA,OAAiCG,CAAC,GAAGH,IAAI,CAACI,GAA1C,CAAA;AAAA,CAA3B,CAAA;;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACjV,CAAD,EAAI+U,CAAJ,EAAeH,IAAf,EAAA;AAAA,EAAA,OAAiCG,CAAC,GAAGH,IAAI,CAACM,MAA1C,CAAA;AAAA,CAA9B,CAAA;;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACR,CAAD,EAAY3U,CAAZ,EAAe4U,IAAf,EAAA;AAAA,EAC5BD,OAAAA,CAAC,IAAIC,IAAI,CAAC7iB,IAAV,IAAkB4iB,CAAC,IAAIC,IAAI,CAAC5iB,KADA,CAAA;AAAA,CAA9B,CAAA;;AAEA,IAAMojB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACpV,CAAD,EAAI+U,CAAJ,EAAeH,IAAf,EAAA;AAAA,EAC5BG,OAAAA,CAAC,IAAIH,IAAI,CAACI,GAAV,IAAiBD,CAAC,IAAIH,IAAI,CAACM,MADC,CAAA;AAAA,CAA9B,CAAA;;AAEA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACV,CAAD,EAAYI,CAAZ,EAAuBH,IAAvB,EAAyC;AACjE,EAAA,OAAOO,qBAAqB,CAACR,CAAD,EAAII,CAAJ,EAAOH,IAAP,CAArB,IAAqCQ,qBAAqB,CAACT,CAAD,EAAII,CAAJ,EAAOH,IAAP,CAAjE,CAAA;AACD,CAFD,CAAA;;AAIA,IAAMU,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACX,CAAD,EAAI3U,CAAJ,EAAO4U,IAAP,EAAA;AAAA,EAAA,OAAgBD,CAAC,GAAGC,IAAI,CAAC7iB,IAAzB,CAAA;AAAA,CAAtC,CAAA;;AACA,IAAMwjB,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACZ,CAAD,EAAI3U,CAAJ,EAAO4U,IAAP,EAAA;AAAA,EAAA,OAAgBD,CAAC,GAAGC,IAAI,CAAC5iB,KAAzB,CAAA;AAAA,CAArC;;;AAGA,IAAMwjB,mBAAmB,GAAG,GAA5B,CAAA;AACO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,OAAD,EAAsDd,IAAtD,EAA2G;AAC/I;AACA,EAAA,IAAIc,OAAO,CAACR,MAAR,KAAmBN,IAAI,CAACM,MAA5B,EAAoC;AAClC,IAAA,OAAO,IAAP,CAAA;AACD,GAJ8I;;;AAM/I,EAAA,IAAIQ,OAAO,CAACV,GAAR,GAAcJ,IAAI,CAACM,MAAnB,IAA6BN,IAAI,CAACI,GAAL,GAAWU,OAAO,CAACR,MAApD,EAA4D;AAC1D,IAAA,OAAO,KAAP,CAAA;AACD,GAR8I;AAW/I;;;AACA,EAAA,IAAMS,aAAa,GAAG3d,IAAI,CAACC,GAAL,CAAS2c,IAAI,CAACgB,MAAd,EAAsBF,OAAO,CAACE,MAA9B,CAAtB,CAAA;AACA,EAAMC,IAAAA,OAAO,GAAG7d,IAAI,CAACC,GAAL,CAASyd,OAAO,CAACR,MAAjB,EAAyBN,IAAI,CAACM,MAA9B,CAAwCld,GAAAA,IAAI,CAAC8d,GAAL,CAASJ,OAAO,CAACV,GAAjB,EAAsBJ,IAAI,CAACI,GAA3B,CAAxD,CAAA;AACA,EAAOW,OAAAA,aAAa,KAAK,CAAlB,IAAuBE,OAAO,GAAGF,aAAV,GAA0BH,mBAAxD,CAAA;AACD,CAfM,CAAA;AAiBP,IAAMO,qBAAqB,GAAG,IAA9B;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACtmB,CAAD,EAAYI,CAAZ,EAAA;AAAA,EAA0BkI,OAAAA,IAAI,CAAC+X,GAAL,CAASrgB,CAAC,GAAGI,CAAb,IAAkBimB,qBAA5C,CAAA;AAAA,CAAzB;;;AAGA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBP,OADyB,EAEzBQ,cAFyB,EAGzBC,eAHyB,EAItB;AACH,EAAA,OACET,OAAO,CAAC3jB,IAAR,GAAeokB,eAAe,CAACC,WAAhB,CAA4BrkB,IAA3C,IACC2jB,OAAO,CAAC3jB,IAAR,KAAiBokB,eAAe,CAACC,WAAhB,CAA4BrkB,IAA7C,IACCmkB,cAAc,CAACG,uBAAf,CAAuCF,eAAe,CAACG,WAAvD,CACElpB,KAAAA,IAAI,CAACmpB,2BAJX,CAAA;AAMD,CAXD,CAAA;;AAYA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAC1Bd,OAD0B,EAE1BQ,cAF0B,EAG1BC,eAH0B,EAIvB;AACH;AACA;AACA,EAAA,OACET,OAAO,CAAC1jB,KAAR,GAAgBmkB,eAAe,CAACC,WAAhB,CAA4BpkB,KAA5B,GAAoC+jB,qBAApD,IACCC,gBAAgB,CAACN,OAAO,CAAC1jB,KAAT,EAAgBmkB,eAAe,CAACC,WAAhB,CAA4BpkB,KAA5C,CAAhB,IACCkkB,cAAc,CAACG,uBAAf,CAAuCF,eAAe,CAACG,WAAvD,CACElpB,KAAAA,IAAI,CAACqpB,2BAJX,CAAA;AAMD,CAbD,CAAA;;AAeA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CACxBhB,OADwB,EAExBQ,cAFwB,EAGxBC,eAHwB,EAIrB;AACH,EAAA,OACET,OAAO,CAACV,GAAR,GAAcmB,eAAe,CAACC,WAAhB,CAA4BpB,GAA1C,IACCU,OAAO,CAACV,GAAR,KAAgBmB,eAAe,CAACC,WAAhB,CAA4BpB,GAA5C,IACCkB,cAAc,CAACG,uBAAf,CAAuCF,eAAe,CAACG,WAAvD,CACElpB,KAAAA,IAAI,CAACmpB,2BAJX,CAAA;AAMD,CAXD,CAAA;;AAaA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAC3BjB,OAD2B,EAE3BQ,cAF2B,EAG3BC,eAH2B,EAIxB;AACH,EAAA,OACET,OAAO,CAACR,MAAR,GAAiBiB,eAAe,CAACC,WAAhB,CAA4BlB,MAA7C,IACCQ,OAAO,CAACV,GAAR,KAAgBmB,eAAe,CAACC,WAAhB,CAA4BlB,MAA5C,IACCgB,cAAc,CAACG,uBAAf,CAAuCF,eAAe,CAACG,WAAvD,CACElpB,KAAAA,IAAI,CAACqpB,2BAJX,CAAA;AAMD,CAXD,CAAA;;AAaA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACjC,CAAD,EAAI3U,CAAJ,EAAO4U,IAAP,EAAgB;AACtC,EAAO5c,OAAAA,IAAI,CAACC,GAAL,CAASD,IAAI,CAAC+X,GAAL,CAAS4E,CAAC,GAAGC,IAAI,CAAC7iB,IAAlB,CAAT,EAAkCiG,IAAI,CAAC+X,GAAL,CAAS4E,CAAC,GAAGC,IAAI,CAAC5iB,KAAlB,CAAlC,CAAP,CAAA;AACD,CAFD,CAAA;;AAIA,SAAS6kB,0CAAT,CAAoD3V,OAApD,EAAsE;AACpE,EAAA,IAAM0T,IAAI,GAAG1T,OAAO,CAAC4V,qBAAR,EAAb,CAAA;AACA,EAAA,IAAIxd,MAAM,GAAG4H,OAAO,CAACkQ,aAArB,CAAA;;AACA,EAAA,OAAO9X,MAAP,EAAe;AACb,IAAA,IAAMyd,UAAU,GAAGzd,MAAM,CAACwd,qBAAP,EAAnB,CAAA;;AACA,IAAA,IAAIC,UAAU,CAAChlB,IAAX,GAAkB6iB,IAAI,CAAC7iB,IAAvB,IAA+BglB,UAAU,CAAC/kB,KAAX,GAAmB4iB,IAAI,CAAC5iB,KAA3D,EAAkE;AAChE,MAAA,OAAOsH,MAAP,CAAA;AACD,KAAA;;AACDA,IAAAA,MAAM,GAAGA,MAAM,CAACyX,YAAP,CAAoB2B,QAAQ,CAACC,OAA7B,CACL,GAAA,IADK,GAELrZ,MAAM,CAAC8X,aAFX,CAAA;AAGD,GAAA;;AACD,EAAA,OAAO,IAAP,CAAA;AACD,CAAA;;AAED,SAAUoD,6BAAV,CAAwCtT,OAAxC,EAAA;AAAA,EAAA,IAAA,sBAAA,EAAA,yBAAA,EAAA,EAAA,EAAA,WAAA,EAAA,UAAA,CAAA;;AAAA,EAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,8BAAA,CAAA,QAAA,EAAA;AAAA,IAAA,OAAA,CAAA,EAAA;AAAA,MAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,QAAA,KAAA,CAAA;AACQ8V,UAAAA,sBADR,GACiC9V,OAAO,CAAChC,OAAR,CAAoBwT,GAAAA,GAAAA,QAAQ,CAACE,cAA7B,GADjC,GAAA,CAAA,CAAA;;AAAA,UAAA,IAAA,CAEMoE,sBAFN,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAGI,UAAA,OAAMA,sBAAN,CAAA;;AAHJ,QAAA,KAAA,CAAA;AAKQC,UAAAA,yBALR,GAKoC/V,OAAO,CAACgW,gBAAR,CAA6BxE,GAAAA,GAAAA,QAAQ,CAACE,cAAtC,GALpC,GAAA,CAAA,CAAA;;AAAA,UAAA,IAMOqE,yBANP,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;;AAAA,QAAA,KAAA,CAAA;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA,WAAA,GAS2B3iB,KAAK,CAAC0X,IAAN,CAAWiL,yBAAX,CAT3B,CAAA;;AAAA,QAAA,KAAA,CAAA;AAAA,UAAA,IAAA,EAAA,EAAA,GAAA,WAAA,CAAA,MAAA,CAAA,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AASaE,UAAAA,UATb,GAAA,WAAA,CAAA,EAAA,CAAA,CAAA;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAUI,UAAA,OAAMA,UAAN,CAAA;;AAVJ,QAAA,KAAA,EAAA;AAAA,UAAA,EAAA,EAAA,CAAA;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAAA,UAAA,MAAA;;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,KAAA,KAAA;AAAA,UAAA,OAAA,QAAA,CAAA,IAAA,EAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAAA,GAAA,EAAAC,SAAA,CAAA,CAAA;AAAA,CAAA;;AAcA,SAAU3C,mBAAV,CAA8BvT,OAA9B,EAAA;AAAA,EAAA,IAAA,WAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,CAAA,EAAA,WAAA,EAAA,YAAA,EAAA,GAAA,EAAA,WAAA,CAAA;;AAAA,EAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,oBAAA,CAAA,SAAA,EAAA;AAAA,IAAA,OAAA,CAAA,EAAA;AAAA,MAAA,QAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,QAAA,KAAA,CAAA;AACE;AACMmW,UAAAA,WAFR,GAEsBnW,OAAO,CAAC6P,YAAR,CAAqB2B,QAAQ,CAACK,SAA9B,CAFtB,CAAA;AAGQuE,UAAAA,aAHR,GAGwBtG,oBAAoB,CAAC9P,OAAD,EAAcwR,GAAAA,GAAAA,QAAQ,CAACI,SAAvB,OAApB,IAA4D5R,OAAO,CAACkQ,aAApE,IAAqFlQ,OAH7G,CAAA;AAIQqW,UAAAA,aAJR,GAIwBF,WAAW,GAAGC,aAAH,GAAmBpW,OAJtD,CAAA;AAKQsW,UAAAA,YALR,GAKuBD,aAAa,CAACL,gBAAd,CAAuCxE,OAAAA,GAAAA,QAAQ,CAAClhB,IAAhD,GALvB,GAAA,CAAA,CAAA;AAOW0G,UAAAA,CAPX,GAOe,CAPf,CAAA;;AAAA,QAAA,KAAA,CAAA;AAAA,UAAA,IAAA,EAOkBA,CAAC,GAAGsf,YAAY,CAACtpB,MAPnC,CAAA,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAQUupB,UAAAA,WARV,GAQwBD,YAAY,CAACtf,CAAD,CARpC,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AASI,UAAM,OAAA;AACJoe,YAAAA,WAAW,EAAEmB,WADT;AAEJC,YAAAA,YAAY,EAAEpjB,KAAK,CAAC0X,IAAN,CAAWyL,WAAW,CAACE,cAAZ,EAAX,CAAA;AAFV,WAAN,CAAA;;AATJ,QAAA,KAAA,CAAA;AAO2Czf,UAAAA,CAAC,IAAI,CAPhD,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAAA,UAAA,MAAA;;AAAA,QAAA,KAAA,EAAA;AAcQ0f,UAAAA,YAdR,GAcuBL,aAAa,CAACL,gBAAd,CAAmCxE,GAAAA,GAAAA,QAAQ,QAA3C,GAdvB,GAAA,CAAA,CAAA;AAeWxa,UAAAA,GAfX,GAee,CAff,CAAA;;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,IAAA,EAekBA,GAAC,GAAG0f,YAAY,CAAC1pB,MAfnC,CAAA,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAgBU2pB,UAAAA,WAhBV,GAgBwBD,YAAY,CAAC1f,GAAD,CAhBpC,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAiBI,UAAM,OAAA;AACJoe,YAAAA,WAAW,EAAEuB,WADT;AAEJH,YAAAA,YAAY,EAAE,CAACG,WAAW,CAACf,qBAAZ,EAAD,CAAA;AAFV,WAAN,CAAA;;AAjBJ,QAAA,KAAA,EAAA;AAe2C5e,UAAAA,GAAC,IAAI,CAfhD,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,UAAA,MAAA;;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,KAAA,KAAA;AAAA,UAAA,OAAA,SAAA,CAAA,IAAA,EAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAAA,GAAA,EAAA4f,UAAA,CAAA,CAAA;AAAA,CAAA;;AAwBA,SAASC,yBAAT,CAAmC7W,OAAnC,EAAqDyT,CAArD,EAAgEI,CAAhE,EAA2E;AACzE,EAAIiD,IAAAA,YAAgC,GAAG,IAAvC,CAAA;AACA,EAAIC,IAAAA,WAA+B,GAAG,IAAtC,CAAA;AACA,EAAIC,IAAAA,YAAgC,GAAG,IAAvC,CAAA;AACA,EAAIC,IAAAA,UAA8B,GAAG,IAArC,CAAA;;AAEA,EAAA,KAAA,IAAA,SAAA,GAAAprB,iCAAA,CAAmB0nB,mBAAmB,CAACvT,OAAD,CAAtC,CAAiD,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAAA;AAAA,IAAA,IAAtC0T,IAAsC,GAAA,KAAA,CAAA,KAAA,CAAA;AAAA,IAAA,IACvC0B,WADuC,GACvB1B,IADuB,CACvC0B,WADuC,CAAA;;AAE/C,IAAA,KAAK,IAAI9mB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGolB,IAAI,CAAC8C,YAAL,CAAkBxpB,MAA9C,EAAsDsB,KAAK,EAA3D,EAA+D;AAC7D,MAAA,IAAM4mB,WAAW,GAAGxB,IAAI,CAAC8C,YAAL,CAAkBloB,KAAlB,CAApB,CAAA;;AACA,MAAI,IAAA,CAAC4mB,WAAL,EAAkB;AAChB,QAAA,SAAA;AACD,OAAA;;AACD,MAAIf,IAAAA,iBAAiB,CAACV,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAArB,EAA0C;AACxC,QAAO,OAAA;AAAEgC,UAAAA,WAAW,EAAE9B,WAAAA;AAAf,SAAP,CAAA;AACD,OAAA;;AACD,MAAIxB,IAAAA,kBAAkB,CAACH,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAAtB,EAA2C;AACzC,QAAA,IAAIhkB,KAAK,GAAG,KAAZ,CADyC;AAGzC;;AACA,QAAI,IAAA,CAAC4lB,YAAL,EAAmB;AACjB;AACA5lB,UAAAA,KAAK,GAAG,IAAR,CAAA;AACD,SAHD,MAGO,IAAIqjB,sBAAsB,CAACW,WAAD,EAAc4B,YAAY,CAAC5B,WAA3B,CAA1B,EAAmE;AACxE;AACA;AACA,UAAMiC,IAAAA,cAAc,GAAGlD,qBAAqB,CAC1CR,CAD0C,EAE1CI,CAF0C,EAG1CiD,YAAY,CAAC5B,WAH6B,CAA5C,CAAA;AAKA,UAAMkC,IAAAA,aAAa,GAAGnD,qBAAqB,CAACR,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAA3C,CAAA;AACA,UAAMmC,IAAAA,YAAY,GAAG3B,eAAe,CAACjC,CAAD,EAAII,CAAJ,EAAOiD,YAAY,CAAC5B,WAApB,CAApC,CAAA;AACA,UAAMoC,IAAAA,WAAW,GAAG5B,eAAe,CAACjC,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAAnC,CAVwE;AAaxE;AACA;;AACA,UACE,IAAA,CAACiC,cAAD,KACCC,aAAa,IAAIE,WAAW,GAAGD,YADhC,CADF,EAGE;AACAnmB,YAAAA,KAAK,GAAG,IAAR,CAAA;AACD,WAAA;AACF,SArBM,MAqBA,IAAIskB,iBAAiB,CAACN,WAAD,EAAcE,WAAd,EAA2B0B,YAA3B,CAArB,EAA+D;AACpE;AACA;AACA5lB,UAAAA,KAAK,GAAG,IAAR,CAAA;AACD,SAAA;;AACD,QAAA,IAAIA,KAAJ,EAAW;AACT4lB,UAAAA,YAAY,GAAG;AACb5B,YAAAA,WAAW,EAAXA,WADa;AAEbE,YAAAA,WAAW,EAAXA,WAAAA;AAFa,WAAf,CAAA;AAID,SAAA;AACF,OAvCD,MAuCO,IAAIrB,qBAAqB,CAACN,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAAzB,EAA8C;AACnD,QAAIhkB,IAAAA,MAAK,GAAG,KAAZ,CAAA;;AACA,QAAI,IAAA,CAAC+lB,UAAL,EAAiB;AACf/lB,UAAAA,MAAK,GAAG,IAAR,CAAA;AACD,SAFD,MAEO,IAAIqjB,sBAAsB,CAACW,WAAD,EAAc+B,UAAU,CAAC/B,WAAzB,CAA1B,EAAiE;AACtE,UAAMqC,IAAAA,YAAY,GAAGtD,qBAAqB,CACxCR,CADwC,EAExCI,CAFwC,EAGxCoD,UAAU,CAAC/B,WAH6B,CAA1C,CAAA;AAKA,UAAMsC,IAAAA,WAAW,GAAGvD,qBAAqB,CAACR,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAAzC,CAAA;;AACA,UAAMmC,IAAAA,aAAY,GAAG3B,eAAe,CAACjC,CAAD,EAAII,CAAJ,EAAOoD,UAAU,CAAC/B,WAAlB,CAApC,CAAA;;AACA,UAAMoC,IAAAA,YAAW,GAAG5B,eAAe,CAACjC,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAAnC,CAAA;;AAEA,UAAI,IAAA,CAACqC,YAAD,KAAkBC,WAAW,IAAIF,YAAW,GAAGD,aAA/C,CAAJ,EAAkE;AAChEnmB,YAAAA,MAAK,GAAG,IAAR,CAAA;AACD,WAAA;AACF,SAbM,MAaA,IAAIukB,oBAAoB,CAACP,WAAD,EAAcE,WAAd,EAA2B6B,UAA3B,CAAxB,EAAgE;AACrE/lB,UAAAA,MAAK,GAAG,IAAR,CAAA;AACD,SAAA;;AACD,QAAA,IAAIA,MAAJ,EAAW;AACT+lB,UAAAA,UAAU,GAAG;AACX/B,YAAAA,WAAW,EAAXA,WADW;AAEXE,YAAAA,WAAW,EAAXA,WAAAA;AAFW,WAAb,CAAA;AAID,SAAA;AACF,OA1BM,MA0BA,IACLlB,qBAAqB,CAACT,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAArB,IACAd,6BAA6B,CAACX,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAD7B,KAEC,CAAC6B,WAAD,IACCzB,mBAAmB,CAACJ,WAAD,EAAcE,WAAd,EAA2B2B,WAA3B,CAHrB,CADK,EAKL;AACAA,QAAAA,WAAW,GAAG;AACZ7B,UAAAA,WAAW,EAAXA,WADY;AAEZE,UAAAA,WAAW,EAAXA,WAAAA;AAFY,SAAd,CAAA;AAID,OAVM,MAUA,IACLlB,qBAAqB,CAACT,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAArB,IACAb,4BAA4B,CAACZ,CAAD,EAAII,CAAJ,EAAOqB,WAAP,CAD5B,KAEC,CAAC8B,YAAD,IACCjC,kBAAkB,CAACG,WAAD,EAAcE,WAAd,EAA2B4B,YAA3B,CAHpB,CADK,EAKL;AACAA,QAAAA,YAAY,GAAG;AACb9B,UAAAA,WAAW,EAAXA,WADa;AAEbE,UAAAA,WAAW,EAAXA,WAAAA;AAFa,SAAf,CAAA;AAID,OAAA;AACF,KAAA;AACF,GAAA;;AAED,EAAO,OAAA;AACL0B,IAAAA,YAAY,EAAZA,YADK;AAELC,IAAAA,WAAW,EAAXA,WAFK;AAGLC,IAAAA,YAAY,EAAZA,YAHK;AAILC,IAAAA,UAAU,EAAVA,UAAAA;AAJK,GAAP,CAAA;AAMD,CAAA;;AAED,SAASQ,kBAAT,CACE5V,QADF,EAEE6V,MAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,QALF,EAMEC,UANF,EAOE;AACA,EAAA,IAAMC,KAAK,GAAGlP,QAAQ,CAACmP,WAAT,EAAd,CAAA;;AACA,EAAA,IAAIH,QAAQ,GAAGD,UAAX,GAAwB,CAA5B,EAA+B;AAC7B,IAAA,IAAMjnB,MAAM,GAAGmG,IAAI,CAACmhB,KAAL,CAAW,CAACL,UAAU,GAAGC,QAAd,IAA0B,CAArC,CAAf,CAAA;;AACA,IAAI,IAAA;AACFE,MAAAA,KAAK,CAACG,QAAN,CAAerW,QAAf,EAAyBlR,MAAzB,CAAA,CAAA;AACAonB,MAAAA,KAAK,CAACI,MAAN,CAAatW,QAAb,EAAuB/K,IAAI,CAAC8d,GAAL,CAAS9d,IAAI,CAACC,GAAL,CAASpG,MAAT,EAAiBmnB,UAAjB,CAAT,EAAuC,CAAvC,CAAvB,CAAA,CAAA;AACD,KAHD,CAGE,OAAOM,KAAP,EAAc;AACd,MAAA,OAAOR,UAAP,CAAA;AACD,KAP4B;;;AAU7B,IAAA,IAAMlE,KAAI,GAAGqE,KAAK,CAACtB,cAAN,EAAA,CAAuB,CAAvB,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC/C,KAAL,EAAW;AACT,MAAA,OAAOkE,UAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAID,MAAM,GAAGjE,KAAI,CAACI,GAAlB,EAAuB;AACrB,MAAA,OAAO2D,kBAAkB,CACvB5V,QADuB,EAEvB6V,MAFuB,EAGvBC,MAHuB,EAIvBC,UAJuB,EAKvBjnB,MALuB,EAMvBmnB,UANuB,CAAzB,CAAA;AAQD,KAAA;;AACD,IAAA,IAAIH,MAAM,GAAGjE,KAAI,CAACM,MAAlB,EAA0B;AACxB,MAAA,OAAOyD,kBAAkB,CACvB5V,QADuB,EAEvB6V,MAFuB,EAGvBC,MAHuB,EAIvBhnB,MAJuB,EAKvBknB,QALuB,EAMvBC,UANuB,CAAzB,CAAA;AAQD,KAAA;;AACD,IAAIJ,IAAAA,MAAM,IAAIhE,KAAI,CAAC7iB,IAAL,GAAY6iB,KAAI,CAAC2E,KAA/B,EAAsC;AACpC,MAAA,OAAOZ,kBAAkB,CACvB5V,QADuB,EAEvB6V,MAFuB,EAGvBC,MAHuB,EAIvBC,UAJuB,EAKvBjnB,MALuB,EAMvBmnB,UANuB,CAAzB,CAAA;AAQD,KAAA;;AACD,IAAA,OAAOL,kBAAkB,CACvB5V,QADuB,EAEvB6V,MAFuB,EAGvBC,MAHuB,EAIvBhnB,MAJuB,EAKvBknB,QALuB,EAMvBC,UANuB,CAAzB,CAAA;AAQD,GAAA;;AAtDD,EAwDiCQ,IAAAA,qBAAAA,GAAAA,SAAS,CAACnK,YAAV,CAC/BtM,QAAQ,CAACgR,WADsB,EAE/B+E,UAF+B,CAxDjC;AAAA,MAwDOW,WAxDP,GAAA,qBAAA,CAAA,CAAA,CAAA;AAAA,MAwDoBC,SAxDpB,GAAA,qBAAA,CAAA,CAAA,CAAA,CAAA;;AA4DA,EAAI,IAAA;AACFT,IAAAA,KAAK,CAACG,QAAN,CAAerW,QAAf,EAAyB0W,WAAzB,CAAA,CAAA;AACAR,IAAAA,KAAK,CAACI,MAAN,CAAatW,QAAb,EAAuB/K,IAAI,CAAC8d,GAAL,CAAS9d,IAAI,CAACC,GAAL,CAASyhB,SAAT,EAAoBV,UAApB,CAAT,EAA0C,CAA1C,CAAvB,CAAA,CAAA;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,IAAA,OAAOG,WAAP,CAAA;AACD,GAAA;;AAED,EAAME,IAAAA,UAAU,GAAGrlB,KAAK,CAAC0X,IAAN,CAAWiN,KAAK,CAACtB,cAAN,EAAX,CAAnB,CAAA;AACA,EAAA,IAAM/C,IAAI,GAAG+E,UAAU,CAAC1pB,IAAX,CAAgB,UAAC2pB,CAAD,EAAA;AAAA,IAAA,OAAOA,CAAC,CAACL,KAAF,GAAU,CAAjB,CAAA;AAAA,GAAhB,CAAuCI,IAAAA,UAAU,CAAC,CAAD,CAA9D,CAAA;;AACA,EAAI,IAAA,CAAC/E,IAAL,EAAW;AACT,IAAA,OAAO6E,WAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAIZ,MAAM,GAAGjE,IAAI,CAACI,GAAlB,EAAuB;AACrB,IAAA,OAAOyE,WAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAIZ,MAAM,GAAGjE,IAAI,CAACM,MAAlB,EAA0B;AACxB,IAAA,OAAOwE,SAAP,CAAA;AACD,GAAA;;AACD,EAAId,IAAAA,MAAM,IAAIhE,IAAI,CAAC7iB,IAAL,GAAY6iB,IAAI,CAAC2E,KAAL,GAAa,CAAvC,EAA0C;AACxC,IAAA,OAAOE,WAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAOC,SAAP,CAAA;AACD,CAAA;;AAED,SAASG,4BAAT,CAYG,IAAA,EAAA;AAAA,EAXDC,IAAAA,WAWC,QAXDA,WAWC;AAAA,MAVDlB,MAUC,QAVDA,MAUC;AAAA,MATDC,MASC,QATDA,MASC;AAAA,MARDkB,SAQC,QARDA,SAQC;AAAA,MAPDC,SAOC,QAPDA,SAOC,CAAA;AACD,EAAIjiB,IAAAA,MAAM,GAAG+hB,WAAb,CAAA;AADC,EAEInF,IAAAA,CAFJ,GAEaoF,SAFb;AAAA,MAEOhF,CAFP,GAEwBiF,SAFxB,CAAA;;AAGD,EAAA,KAAA,IAAA,UAAA,GAAAjtB,iCAAA,CAAmBynB,6BAA6B,CAACzc,MAAD,CAAhD,CAA0D,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,EAAA,EAAA,IAAA,GAAA;AAAA,IAAA,IAA/C3L,KAA+C,GAAA,MAAA,CAAA,KAAA,CAAA;;AACxD,IAAA,IAAMwoB,IAAI,GAAGxoB,KAAI,CAAC0qB,qBAAL,EAAb,CAAA;;AACA,IAAA,IAAMxd,MAAM,GAAGud,0CAA0C,CAACzqB,KAAD,CAAzD,CAFwD;;AAIxD,IACE,IAAA,CAACkN,MAAD,IACA6b,qBAAqB,CAACyD,MAAD,EAASC,MAAT,EAAiBjE,IAAjB,CADrB,IAEA,CAACQ,qBAAqB,CAACwD,MAAD,EAASC,MAAT,EAAiBjE,IAAjB,CAHxB,EAIE;AACA,MAAA,SAAA;AACD,KAVuD;;;AAYxD,IAAA,IAAMmC,UAAU,GAAGzd,MAAM,CAACwd,qBAAP,EAAnB,CAAA;AACA,IAAMmD,IAAAA,WAAW,GAAGjvB,MAAM,CAACkvB,gBAAP,CAAwB5gB,MAAxB,CAApB,CAbwD;;AAexD,IAAA,IAAM6gB,UAAU,GAAGpD,UAAU,CAAChlB,IAAX,GAAkBvF,QAAQ,CAACytB,WAAW,CAACG,UAAb,EAAyB,EAAzB,CAA7C,CAAA;AACA,IAAA,IAAMC,WAAW,GAAGtD,UAAU,CAAC/kB,KAAX,GAAmBxF,QAAQ,CAACytB,WAAW,CAACK,WAAb,EAA0B,EAA1B,CAA/C,CAAA;;AACA,IAAA,IAAI3F,CAAC,IAAIwF,UAAL,IAAmBxF,CAAC,IAAI0F,WAA5B,EAAyC;AACvC,MAAA,IAAMhR,IAAI,GAAGsL,CAAC,GAAGC,IAAI,CAAC7iB,IAAT,GAAgBqX,SAAS,CAACoB,KAA1B,GAAkCpB,SAAS,CAACa,MAAzD,CAAA;AACA,MAAO,OAAA;AACL7d,QAAAA,IAAI,EAAJA,KADK;AAELid,QAAAA,IAAI,EAAJA,IAAAA;AAFK,OAAP,CAAA;AAID,KAAA;AACF,GAAA;;AAED,EAAA,IAAIkR,eAAJ,CAAA;AACA,EAAA,IAAIC,gBAAJ,CAAA;;AACA,EAAA,IACE,CAACxJ,oBAAoB,CAACjZ,MAAD,EAAiB2a,OAAAA,GAAAA,QAAQ,CAAClhB,IAA1B,GAAA,GAAA,CAArB,IACA,CAACwf,oBAAoB,CAACjZ,MAAD,QAAa2a,QAAQ,CAAA,MAAA,CAArB,OAFvB,EAGE;AAAA,IAAA,IAAA,qBAAA,GAOIqF,yBAAyB,CAAChgB,MAAD,EAAS4c,CAAT,EAAYI,CAAZ,CAP7B;AAAA,QAEEqD,WAFF,yBAEEA,WAFF;AAAA,QAGEJ,YAHF,yBAGEA,YAHF;AAAA,QAIEC,WAJF,yBAIEA,WAJF;AAAA,QAKEC,YALF,yBAKEA,YALF;AAAA,QAMEC,UANF,yBAMEA,UANF,CAAA;;AAQAoC,IAAAA,eAAe,GAAGtC,WAAH,IAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,WAAW,CAAE7B,WAAb,CAAyBpkB,KAA3C,CAAA;AACAwoB,IAAAA,gBAAgB,GAAGtC,YAAH,IAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,YAAY,CAAE9B,WAAd,CAA0BrkB,IAA7C,CAAA;;AAEA,IAAA,IAAIqmB,WAAJ,EAAiB;AACfrgB,MAAAA,MAAM,GAAGqgB,WAAT,CAAA;AACD,KAFD,MAEO,IAAIJ,YAAY,IAAIC,WAApB,EAAiC;AACtC,MAAIxC,IAAAA,sBAAsB,CAACuC,YAAY,CAAC5B,WAAd,EAA2B6B,WAAW,CAAC7B,WAAvC,CAA1B,EAA+E;AAC7ErB,QAAAA,CAAC,GAAGiD,YAAY,CAAC5B,WAAb,CAAyBpB,GAA7B,CAAA;AACAjd,QAAAA,MAAM,GAAGigB,YAAY,CAAC1B,WAAtB,CAAA;AACD,OAHD,MAGO;AACL3B,QAAAA,CAAC,GAAGsD,WAAW,CAAC7B,WAAZ,CAAwBpkB,KAA5B,CAAA;AACA+F,QAAAA,MAAM,GAAGkgB,WAAW,CAAC3B,WAArB,CAAA;AACD,OAAA;AACF,KARM,MAQA,IAAI0B,YAAY,IAAIE,YAApB,EAAkC;AACvC,MACEzC,IAAAA,sBAAsB,CAACuC,YAAY,CAAC5B,WAAd,EAA2B8B,YAAY,CAAC9B,WAAxC,CADxB,EAEE;AACArB,QAAAA,CAAC,GAAGiD,YAAY,CAAC5B,WAAb,CAAyBpB,GAA7B,CAAA;AACAjd,QAAAA,MAAM,GAAGigB,YAAY,CAAC1B,WAAtB,CAAA;AACD,OALD,MAKO;AACL3B,QAAAA,CAAC,GAAGuD,YAAY,CAAC9B,WAAb,CAAyBrkB,IAA7B,CAAA;AACAgG,QAAAA,MAAM,GAAGmgB,YAAY,CAAC5B,WAAtB,CAAA;AACD,OAAA;AACF,KAVM,MAUA,IAAI2B,WAAJ,EAAiB;AACtBtD,MAAAA,CAAC,GAAGsD,WAAW,CAAC7B,WAAZ,CAAwBpkB,KAA5B,CAAA;AACA+F,MAAAA,MAAM,GAAGkgB,WAAW,CAAC3B,WAArB,CAAA;AACD,KAHM,MAGA,IAAI4B,YAAJ,EAAkB;AACvBvD,MAAAA,CAAC,GAAGuD,YAAY,CAAC9B,WAAb,CAAyBrkB,IAA7B,CAAA;AACAgG,MAAAA,MAAM,GAAGmgB,YAAY,CAAC5B,WAAtB,CAAA;AACD,KAHM,MAGA,IAAI0B,YAAJ,EAAkB;AACvB;AACA;AACA,MAAItD,IAAAA,mBAAmB,CAACC,CAAD,EAAII,CAAJ,EAAOiD,YAAY,CAAC5B,WAApB,CAAvB,EAAyD;AACvDzB,QAAAA,CAAC,GAAGqD,YAAY,CAAC5B,WAAb,CAAyBrkB,IAA7B,CAAA;AACD,OAFD,MAEO,IAAI8iB,oBAAoB,CAACF,CAAD,EAAII,CAAJ,EAAOiD,YAAY,CAAC5B,WAApB,CAAxB,EAA0D;AAC/DzB,QAAAA,CAAC,GAAGqD,YAAY,CAAC5B,WAAb,CAAyBpkB,KAA7B,CAAA;AACD,OAAA;;AACD+iB,MAAAA,CAAC,GAAGiD,YAAY,CAAC5B,WAAb,CAAyBpB,GAA7B,CAAA;AACAjd,MAAAA,MAAM,GAAGigB,YAAY,CAAC1B,WAAtB,CAAA;AACD,KAVM,MAUA,IAAI6B,UAAJ,EAAgB;AACrB,MAAIzD,IAAAA,mBAAmB,CAACC,CAAD,EAAII,CAAJ,EAAOoD,UAAU,CAAC/B,WAAlB,CAAvB,EAAuD;AACrDzB,QAAAA,CAAC,GAAGwD,UAAU,CAAC/B,WAAX,CAAuBrkB,IAA3B,CAAA;AACD,OAFD,MAEO,IAAI8iB,oBAAoB,CAACF,CAAD,EAAII,CAAJ,EAAOoD,UAAU,CAAC/B,WAAlB,CAAxB,EAAwD;AAC7DzB,QAAAA,CAAC,GAAGwD,UAAU,CAAC/B,WAAX,CAAuBpkB,KAA3B,CAAA;AACD,OAAA;;AACD+iB,MAAAA,CAAC,GAAGoD,UAAU,CAAC/B,WAAX,CAAuBlB,MAA3B,CAAA;AACAnd,MAAAA,MAAM,GAAGogB,UAAU,CAAC7B,WAApB,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAA,IAAI,EAAEve,MAAM,YAAYlK,OAApB,CAAJ,EAAkC;AAChC,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAImjB,oBAAoB,CAACjZ,MAAD,QAAa2a,QAAQ,CAAA,MAAA,CAArB,OAAxB,EAAwD;AACtD,IAAMtmB,IAAAA,IAAI,GAAG4kB,oBAAoB,CAACjZ,MAAD,EAAa2a,GAAAA,GAAAA,QAAQ,QAArB,GAAjC,GAAA,CAAA,CAAA;AACA,IAAI3P,IAAAA,QAAqB,GAAG,IAA5B,CAAA;AACA,IAAIlR,IAAAA,MAAM,GAAG,CAAb,CAAA;;AACA,IAAA,IAAI0oB,eAAe,IAAIviB,IAAI,CAACyiB,KAAL,CAAW9F,CAAX,CAAkB3c,KAAAA,IAAI,CAACyiB,KAAL,CAAWF,eAAX,CAAzC,EAAsE;AAAA,MAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;;AACpE,MAAA,IAAMG,YAAY,GAAGtuB,IAAH,IAAGA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,qBAAAA,GAAAA,IAAI,CAAEuuB,kBAAT,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAG,qBAA0BC,CAAAA,aAA1B,WAAgDlI,QAAQ,CAAClhB,IAAzD,GAAH,GAAA,CAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAG,uBAAmEqpB,UAAxF,CAAA;AACA9X,MAAAA,QAAQ,GAAG2X,YAAY,YAAY9sB,IAAxB,GAA+B8sB,YAA/B,GAA8C,IAAzD,CAAA;AACD,KAHD,MAGO,IAAIF,gBAAgB,IAAIxiB,IAAI,CAACyiB,KAAL,CAAW9F,CAAX,CAAA,KAAkB3c,IAAI,CAACyiB,KAAL,CAAWD,gBAAX,CAA1C,EAAwE;AAAA,MAAA,IAAA,qBAAA,EAAA,sBAAA,EAAA,SAAA,EAAA,qBAAA,CAAA;;AAC7E,MAAA,IAAME,aAAY,GAAGtuB,IAAH,IAAGA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,qBAAAA,GAAAA,IAAI,CAAE0uB,sBAAT,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAG,qBAA8BF,CAAAA,aAA9B,WAAoDlI,QAAQ,CAAClhB,IAA7D,GAAH,GAAA,CAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAG,uBAAuEqpB,UAA5F,CAAA;;AACA9X,MAAAA,QAAQ,GAAG2X,aAAY,YAAY9sB,IAAxB,GAA+B8sB,aAA/B,GAA8C,IAAzD,CAAA;AACA7oB,MAAAA,MAAM,GAAG,CAAA,CAAA,SAAA,GAAAkR,QAAQ,KAAA,IAAR,+CAAUgR,WAAV,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAuB7lB,MAAvB,KAAiC,CAA1C,CAAA;AACD,KAAA;;AACD,IAAO,OAAA;AACL9B,MAAAA,IAAI,EAAE2W,QAAQ,IAAI3W,IADb;AAELyF,MAAAA,MAAM,EAANA,MAAAA;AAFK,KAAP,CAAA;AAID,GAAA;;AACD,EAAImf,IAAAA,oBAAoB,CAACjZ,MAAD,EAAA,OAAA,GAAiB2a,QAAQ,CAAClhB,IAA1B,OAAxB,EAA4D;AAC1D,IAAA,IAAMupB,WAAW,GAAGhjB,MAAM,CAACgZ,YAAP,CAAoB2B,QAAQ,CAAClhB,IAA7B,IAChBuG,MADgB,GAEhBA,MAAM,CAAC6iB,aAAP,WAA6BlI,QAAQ,CAAClhB,IAAtC,GAFJ,GAAA,CAAA,CAAA;;AAGA,IAAA,IAAMuR,UAAQ,GAAGgY,WAAW,IAAIA,WAAW,CAACF,UAA5C,CAAA;;AACA,IAAI9X,IAAAA,UAAQ,YAAYnV,IAApB,IAA4BmV,UAAQ,CAACgR,WAAT,KAAyB1B,aAAzD,EAAwE;AACtE,MAAO,OAAA;AACLjmB,QAAAA,IAAI,EAAE2W,UADD;AAELlR,QAAAA,MAAM,EAAE,CAAA;AAFH,OAAP,CAAA;AAID,KAAA;;AACD,IAAA,IAAIkR,UAAQ,YAAYnV,IAApB,IAA4BmV,UAAQ,CAACgR,WAAzC,EAAsD;AACpD,MAAMliB,IAAAA,OAAM,GAAG8mB,kBAAkB,CAC/B5V,UAD+B,EAE/B4R,CAF+B,EAG/BI,CAH+B,EAI/B,CAJ+B,EAK/BhS,UAAQ,CAACgR,WAAT,CAAqB7lB,MALU,EAM/B6U,UAAQ,CAACgR,WAAT,CAAqB7lB,MANU,CAAjC,CAAA;;AAQA,MAAO,OAAA;AACL9B,QAAAA,IAAI,EAAE2W,UADD;AAELlR,QAAAA,MAAM,EAANA,OAAAA;AAFK,OAAP,CAAA;AAID,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAO,IAAP,CAAA;AACD,CAAA;;AAEc,SAASmpB,4BAAT,CACblB,WADa,EAEblB,MAFa,EAGbC,MAHa,EAIb9T,UAJa,EAKb;AACA,EAAIhN,IAAAA,MAAW,GAAG+hB,WAAlB,CAAA;;AACA,EAAI/hB,IAAAA,MAAM,YAAYnK,IAAtB,EAA4B;AAC1BmK,IAAAA,MAAM,GAAGA,MAAM,CAACsZ,UAAhB,CAAA;AACD,GAFD,MAEO,IAAItZ,MAAM,CAACkjB,UAAX,EAAuB;AAC5BljB,IAAAA,MAAM,GAAGA,MAAM,CAACkjB,UAAP,CAAkBL,aAAlB,CAAoClI,GAAAA,GAAAA,QAAQ,CAACC,OAA7C,GAAT,GAAA,CAAA,CAAA;AACD,GAAA;;AACD,EAAI,IAAA,CAAC5a,MAAD,IAAW,EAAEA,MAAM,YAAYlK,OAApB,CAAf,EAA6C;AAC3C,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AATD,EAWK8mB,IAAAA,CAXL,GAWciE,MAXd;AAAA,MAWQ7D,CAXR,GAWsB8D,MAXtB,CAAA;;AAYA,EAAI9gB,IAAAA,MAAM,CAACgZ,YAAP,CAAoB2B,QAAQ,CAACC,OAA7B,CAAJ,EAA2C;AACzC,IAAME,IAAAA,QAAQ,GAAG9a,MAAM,CAAC6iB,aAAP,CAAyBlI,GAAAA,GAAAA,QAAQ,CAACG,QAAlC,GAAjB,GAAA,CAAA,CAAA;;AACA,IAAA,IAAIA,QAAJ,EAAc;AACZ,MAAA,IAAMqI,YAAY,GAAGrI,QAAQ,CAACiE,qBAAT,EAArB,CAAA;;AACA,MAAA,IAAInC,CAAC,GAAGuG,YAAY,CAACnpB,IAArB,EAA2B;AACzB4iB,QAAAA,CAAC,GAAGuG,YAAY,CAACnpB,IAAjB,CAAA;AACD,OAFD,MAEO,IAAI4iB,CAAC,GAAGuG,YAAY,CAAClpB,KAArB,EAA4B;AACjC2iB,QAAAA,CAAC,GAAGuG,YAAY,CAAClpB,KAAb,GAAqB,CAAzB,CAAA;AACD,OAAA;;AACD,MAAA,IAAI+iB,CAAC,GAAGmG,YAAY,CAAClG,GAArB,EAA0B;AACxBD,QAAAA,CAAC,GAAGmG,YAAY,CAAClG,GAAjB,CAAA;AACD,OAFD,MAEO,IAAID,CAAC,GAAGmG,YAAY,CAAChG,MAArB,EAA6B;AAClCH,QAAAA,CAAC,GAAGmG,YAAY,CAAChG,MAAb,GAAsB,CAA1B,CAAA;AACD,OAXW;;;AAaZ,MAAA,IAAMiG,IAAI,GAAGpjB,MAAM,CAACqjB,WAAP,EAAb,CAAA;AACA,MAAA,IAAMC,cAAc,GAAG,OAAOF,IAAI,CAACG,gBAAZ,KAAiC,UAAjC,GACnBH,IAAI,CAACG,gBAAL,CAAsB3G,CAAtB,EAAyBI,CAAzB,CADmB,GAEnB,IAFJ,CAAA;;AAGA,MAAA,IAAIsG,cAAJ,EAAoB;AAClBtjB,QAAAA,MAAM,GAAGsjB,cAAT,CAAA;AACD,OAAA;AACF,KAAA;AACF,GAAA;;AAED,EAAMrR,IAAAA,KAAK,GAAG6P,4BAA4B,CAAC;AACzCC,IAAAA,WAAW,EAAE/hB,MAD4B;AAEzCgiB,IAAAA,SAAS,EAAEpF,CAF8B;AAGzCqF,IAAAA,SAAS,EAAEjF,CAH8B;AAIzC6D,IAAAA,MAAM,EAANA,MAJyC;AAKzCC,IAAAA,MAAM,EAANA,MAAAA;AALyC,GAAD,CAA1C,CAAA;;AAOA,EAAA,IAAI,CAAC7O,KAAD,IAAU,CAACA,KAAK,CAAC5d,IAArB,EAA2B;AACzB,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAMmvB,OAAO,GACXvR,KAAK,CAAC5d,IAAN,YAAsByB,OAAtB,GACImc,KAAK,CAAC5d,IAAN,CAAW2kB,YAAX,CAAwB2B,QAAQ,CAAC1lB,GAAjC,CADJ,GAEI,IAHN,CAAA;;AAIA,EAAA,IAAIgd,KAAK,CAACX,IAAN,IAAckS,OAAlB,EAA2B;AACzB,IAAA,IAAMC,eAAe,GAAG;AACtBxuB,MAAAA,GAAG,EAAEuuB,OADiB;AAEtBlS,MAAAA,IAAI,EAAEW,KAAK,CAACX,IAAAA;AAFU,KAAxB,CAAA;AAIA,IAAA,IAAMiL,MAAM,GAAGrL,KAAK,CAAC1a,MAAN,CAAaitB,eAAb,CAAf,CAAA;AACA,IAAOnH,OAAAA,SAAS,CAAC9lB,MAAV,CAAiB;AACtB+lB,MAAAA,MAAM,EAANA,MADsB;AAEtBC,MAAAA,KAAK,EAAED,MAAAA;AAFe,KAAjB,CAAP,CAAA;AAID,GAAA;;AACD,EAAA,IAAML,OAAM,GAAGlK,QAAQ,CAACmP,WAAT,EAAf,CAAA;;AACA,EAAI,IAAA;AACFjF,IAAAA,OAAM,CAACmF,QAAP,CAAgBpP,KAAK,CAAC5d,IAAtB,EAA4B4d,KAAK,CAACnY,MAAlC,CAAA,CAAA;;AACAoiB,IAAAA,OAAM,CAACoF,MAAP,CAAcrP,KAAK,CAAC5d,IAApB,EAA0B4L,IAAI,CAAC8d,GAAL,CAAS9L,KAAK,CAACnY,MAAf,EAAuB,CAAvB,CAA1B,CAAA,CAAA;AACD,GAHD,CAGE,OAAOynB,KAAP,EAAc;AACd,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAOrF,OAAM,IAAID,SAAS,CAACC,OAAD,EAASlP,UAAT,CAA1B,CAAA;AACD;;ACrlBM,IAAM0W,kBAAkB,GAAG,IAAIxnB,OAAJ,EAA3B,CAAA;AACA,IAAMynB,qBAAqB,GAAG,IAAIznB,OAAJ,EAA9B,CAAA;;AASP,SAAS0nB,sBAAT,CAAgC3uB,GAAhC,EAA6CmuB,IAA7C,EAA2F;AACzF,EAAA,IAAIS,OAAJ,CAAA;AACA,EAAA,IAAM7W,UAAU,GAAG0W,kBAAkB,CAAChkB,GAAnB,CAAuB0jB,IAAvB,CAAnB,CAAA;;AACA,EAAA,IAAIpW,UAAJ,EAAgB;AACd,IAAA,IAAI,CAAC2W,qBAAqB,CAACvrB,GAAtB,CAA0B4U,UAA1B,CAAL,EAA4C;AAC1C2W,MAAAA,qBAAqB,CAAC3sB,GAAtB,CAA0BgW,UAA1B,EAAsC,IAAI8W,GAAJ,EAAtC,CAAA,CAAA;AACD,KAAA;;AACDD,IAAAA,OAAO,GAAGF,qBAAqB,CAACjkB,GAAtB,CAA0BsN,UAA1B,CAAV,CAAA;AACD,GAAA;;AAED,EAAI6W,IAAAA,OAAO,IAAIA,OAAO,CAACzrB,GAAR,CAAYnD,GAAZ,CAAf,EAAiC;AAC/B,IAAA,OAAO4uB,OAAO,CAACnkB,GAAR,CAAYzK,GAAZ,CAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAImuB,IAAI,YAAYttB,OAAhB,IAA2Bb,GAAG,KAAKmuB,IAAI,CAACpK,YAAL,CAAkB2B,QAAQ,CAAC1lB,GAA3B,CAAvC,EAAwE;AACtE,IAAA,OAAOmuB,IAAP,CAAA;AACD,GAAA;;AACD,EAAOA,OAAAA,IAAI,CAACP,aAAL,CAAA,GAAA,GAAoClI,QAAQ,CAAC1lB,GAA7C,GAAqDA,KAAAA,GAAAA,GAArD,GAAP,KAAA,CAAA,CAAA;AACD;;AC9BD;AACA;AACA;AACA;AAGA;AACA;AACA;;AACO,SAAS8uB,iBAAT,CACL9uB,GADK,EAELmuB,IAFK,EAGL;AAAA,EAAA,IADAA,IACA,KAAA,KAAA,CAAA,EAAA;AADAA,IAAAA,IACA,GADyBnwB,MACzB,CAAA;AAAA,GAAA;;AACA,EAAMoB,IAAAA,IAAI,GACR+uB,IAAI,KAAKnwB,MAAT,GACI2wB,sBAAsB,CAAC3uB,GAAD,EAAMmuB,IAAN,CAD1B,GAEIQ,sBAAsB,CAAC3uB,GAAD,EAAMmuB,IAAI,CAACpR,QAAX,CAH5B,CAAA;AAIA,EAAO3d,OAAAA,IAAI,IAAI4E,SAAf,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;;AACA,SAAS+qB,WAAT,CAAqB/uB,GAArB,EAAkCmuB,IAAlC,EAAmE;AAAA,EAAA,IAAjCA,IAAiC,KAAA,KAAA,CAAA,EAAA;AAAjCA,IAAAA,IAAiC,GAARnwB,MAAQ,CAAA;AAAA,GAAA;;AACjE,EAAA,IAAMoB,IAAI,GAAG0vB,iBAAiB,CAAC9uB,GAAD,EAAMmuB,IAAN,CAA9B,CAAA;;AACA,EAAI,IAAA,CAAC/uB,IAAL,EAAW;AACT,IAAA,MAAM,IAAIqB,KAAJ,CAC8BT,kCAAAA,GAAAA,GAD9B,GAAN,0FAAA,CAAA,CAAA;AAGD,GAAA;;AACD,EAAA,OAAOZ,IAAP,CAAA;AACD;;AC7BD,SAAS4vB,aAAT,CAAuBhvB,GAAvB,EAAoCmuB,IAApC,EAAqE;AAAA,EAAA,IAAjCA,IAAiC,KAAA,KAAA,CAAA,EAAA;AAAjCA,IAAAA,IAAiC,GAARnwB,MAAQ,CAAA;AAAA,GAAA;;AACnE,EAAMkW,IAAAA,OAAO,GAAGia,IAAI,YAAYttB,OAAhB,GAA0BstB,IAA1B,GAAiCA,IAAI,CAACpR,QAAtD,CAAA;AACA,EAAA,IAAMlV,SAAS,GAAG8mB,sBAAsB,CAAI3uB,GAAJ,GAAA,IAAA,EAAakU,OAAb,CAAxC,CAAA;AACA,EAAM4R,IAAAA,SAAS,GAAGje,SAAH,IAAGA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAEqK,OAAX,CAAuBwT,GAAAA,GAAAA,QAAQ,CAACI,SAAhC,GAAlB,GAAA,CAAA,CAAA;AACA,EAAA,OAAOA,SAAS,GAAGxe,KAAK,CAAC0X,IAAN,CAAW8G,SAAS,CAACoE,gBAAV,CAA4CxE,GAAAA,GAAAA,QAAQ,CAAC1lB,GAArD,GAAA,MAAA,GAA8DA,GAA9D,GAAX,MAAA,CAAA,CAAH,GAAyF,EAAzG,CAAA;AACD;;;;;;;ACDD;AACA;AACA;;AACA,SAASivB,YAAT,CAAsBjS,KAAtB,EAAwCmR,IAAxC,EAAyE;AAAA,EAAA,IAAjCA,IAAiC,KAAA,KAAA,CAAA,EAAA;AAAjCA,IAAAA,IAAiC,GAARnwB,MAAQ,CAAA;AAAA,GAAA;;AACvE,EAAMmG,IAAAA,MAAM,GAAG6qB,aAAa,CAAChS,KAAK,CAAChd,GAAP,EAAYmuB,IAAZ,CAA5B,CAAA;AAEA,EAAA,IAAIlmB,KAAK,GAAG,CAAZ,CAHuE;;AAKvE,EAAA,KAAA,IAAA,SAAA,GAAAlI,iCAAA,CAAmBoE,MAAnB,CAA2B,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAAA;AAAA,IAAA,IAAhBK,IAAgB,GAAA,KAAA,CAAA,KAAA,CAAA;AACzB,IAAA,IAAMpF,IAAI,GAAGoF,IAAI,CAACqpB,UAAlB,CAAA;AACA,IAAA,IAAM3sB,MAAM,GAAG9B,IAAI,IAAIA,IAAI,CAAC2nB,WAAb,GAA2B3nB,IAAI,CAAC2nB,WAAL,CAAiB7lB,MAA5C,GAAqD,CAApE,CAAA;AACA,IAAA,IAAMgH,GAAG,GAAGD,KAAK,GAAG/G,MAApB,CAAA;;AACA,IAAA,IAAI8b,KAAK,CAACnY,MAAN,IAAgBqD,GAApB,EAAyB;AACvB,MAAA,IAAMrD,MAAM,GAAGmY,KAAK,CAACnY,MAAN,GAAeoD,KAA9B,CAAA;AACA,MAAO,OAAA;AAAE7I,QAAAA,IAAI,EAAJA,IAAF;AAAQyF,QAAAA,MAAM,EAANA,MAAAA;AAAR,OAAP,CAAA;AACD,KAAA;;AACDoD,IAAAA,KAAK,GAAGC,GAAR,CAAA;AACD,GAAA;;AACD,EAAA,OAAO,IAAP,CAAA;AACD;;AC1BD;AAUA;AACA;AACA;;AACA,SAASgnB,YAAT,CACEjD,KADF,EAEElU,UAFF,EAGEoW,IAHF,EAIE;AAAA,EAAA,IADAA,IACA,KAAA,KAAA,CAAA,EAAA;AADAA,IAAAA,IACA,GAD6BnwB,MAC7B,CAAA;AAAA,GAAA;;AAAA,EAAA,IACQ+e,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAAA;AAAA,EAAA,IAEQoS,WAFR,GAEwBlD,KAFxB,CAEQkD,WAFR,CAAA;;AAAA,EAAA,IAAA,qBAAA,GAGuBlD,KAAK,CAACmD,mBAAN,CAA0BrS,QAA1B,CAHvB;AAAA,MAGQ9U,KAHR,yBAGQA,KAHR;AAAA,MAGeC,GAHf,GAGeA,qBAAAA,CAAAA,GAHf,CAIA;;;AACA,EAAA,IAAM0kB,CAAC,GAAG,CAAC,UAAA,IAAcuB,IAAd,GAAqBA,IAAI,CAACpR,QAA1B,GAAqCoR,IAAI,CAACkB,aAA3C,EAA0DnD,WAA1D,EAAV,CAAA;AACA,EAAA,IAAMoD,QAAQ,GAAGL,YAAY,CAAChnB,KAAD,EAAQkmB,IAAR,CAA7B,CAAA;AACA,EAAA,IAAMoB,MAAM,GAAGJ,WAAW,GAAGG,QAAH,GAAcL,YAAY,CAAC/mB,GAAD,EAAMimB,IAAN,CAApD,CAPA;;AAUA,EAAI,IAAA;AACF,IAAA,IAAImB,QAAQ,IAAIA,QAAQ,CAAClwB,IAAzB,EAA+B;AAC7BwtB,MAAAA,CAAC,CAACR,QAAF,CAAWkD,QAAQ,CAAClwB,IAApB,EAA0BkwB,QAAQ,CAACzqB,MAAnC,CAAA,CAAA;AACD,KAFD,MAEO;AACL,MAAM2qB,IAAAA,aAAa,GAAGzS,QAAQ,CAAC0S,cAAT,CAAwBxnB,KAAK,CAACjI,GAA9B,EAAmC+X,UAAnC,CAAtB,CAAA;;AACA,MAAA,IAAIyX,aAAJ,EAAmB;AACjB,QAAME,IAAAA,OAAO,GAAGX,WAAW,CAACS,aAAa,CAACxvB,GAAf,EAAoBmuB,IAApB,CAA3B,CAAA;AACAvB,QAAAA,CAAC,CAAC+C,cAAF,CAAiBD,OAAjB,CAAA,CAAA;AACD,OAHD,MAGO;AACL,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,IAAIH,MAAM,IAAIA,MAAM,CAACnwB,IAArB,EAA2B;AACzBwtB,MAAAA,CAAC,CAACP,MAAF,CAASkD,MAAM,CAACnwB,IAAhB,EAAsBmwB,MAAM,CAAC1qB,MAA7B,CAAA,CAAA;AACD,KAFD,MAEO;AACL,MAAM+qB,IAAAA,WAAW,GAAG7S,QAAQ,CAAC0S,cAAT,CAAwBvnB,GAAG,CAAClI,GAA5B,EAAiC+X,UAAjC,CAApB,CAAA;;AACA,MAAA,IAAI6X,WAAJ,EAAiB;AACf,QAAMF,IAAAA,QAAO,GAAGX,WAAW,CAACa,WAAW,CAAC5vB,GAAb,EAAkBmuB,IAAlB,CAA3B,CAAA;;AACAvB,QAAAA,CAAC,CAACiD,WAAF,CAAcH,QAAd,CAAA,CAAA;AACD,OAHD,MAGO;AACL,QAAA,OAAO,IAAP,CAAA;AACD,OAAA;AACF,KAAA;AACF,GAxBD,CAwBE,OAAOpD,KAAP,EAAc;AACdwD,IAAAA,OAAO,CAACxD,KAAR,CAAcA,KAAd,CAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAED,EAAA,OAAOM,CAAP,CAAA;AACD;;ACzDD;AACA;AACA;AACA;AAIO,SAASmD,cAAT,CAAwB/S,KAAxB,EAAsC;AAC3C,EAAA,IAAI,CAACA,KAAK,CAACN,WAAN,EAAL,EAA0B;AACxB,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAMsT,SAAS,GAAGhT,KAAK,CAACJ,YAAN,EAAlB,CAAA;AACA,EAAA,IAAMqT,SAAS,GAAGjT,KAAK,CAACH,WAAN,EAAlB,CAAA;;AAEA,EAAA,IAAImT,SAAS,CAACnrB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AAED,EAAIqrB,IAAAA,QAAyC,GAAG,IAAhD,CAAA;AACA,EAAIC,IAAAA,YAA6C,GAAG,IAApD,CAAA;AACA,EAAIC,IAAAA,YAA6C,GAAG,IAApD,CAAA;;AAEA,EAAI,IAAA;AACFF,IAAAA,QAAQ,GAAGjB,YAAY,CAACjS,KAAD,CAAvB,CAAA;AACAmT,IAAAA,YAAY,GAAGlB,YAAY,CAACe,SAAD,CAA3B,CAAA;AACAI,IAAAA,YAAY,GAAGnB,YAAY,CAACgB,SAAD,CAA3B,CAAA;AACD,GAJD,CAIE,OAAO3D,KAAP,EAAc;AAEf,GAAA;;AAED,EACE,IAAA,CAAC4D,QAAD,IACA,CAACA,QAAQ,CAAC9wB,IADV,IAEA,CAAC+wB,YAFD,IAGA,CAACA,YAAY,CAAC/wB,IAHd,IAIA,CAACgxB,YAJD,IAKA,CAACA,YAAY,CAAChxB,IANhB,EAOE;AACA,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAMixB,UAAU,GAAGryB,MAAM,CAAC+e,QAAP,CAAgBmP,WAAhB,EAAnB,CAAA;AACA,EAAA,IAAMoE,WAAW,GAAGtyB,MAAM,CAAC+e,QAAP,CAAgBmP,WAAhB,EAApB,CAAA;;AACA,EAAI,IAAA;AACFmE,IAAAA,UAAU,CAACjE,QAAX,CAAoB+D,YAAY,CAAC/wB,IAAjC,EAAuC+wB,YAAY,CAACtrB,MAApD,CAAA,CAAA;AACAwrB,IAAAA,UAAU,CAAChE,MAAX,CAAkB6D,QAAQ,CAAC9wB,IAA3B,EAAiC8wB,QAAQ,CAACrrB,MAA1C,CAAA,CAAA;AACAyrB,IAAAA,WAAW,CAAClE,QAAZ,CAAqB8D,QAAQ,CAAC9wB,IAA9B,EAAoC8wB,QAAQ,CAACrrB,MAA7C,CAAA,CAAA;AACAyrB,IAAAA,WAAW,CAACjE,MAAZ,CAAmB+D,YAAY,CAAChxB,IAAhC,EAAsCgxB,YAAY,CAACvrB,MAAnD,CAAA,CAAA;AACD,GALD,CAKE,OAAOynB,KAAP,EAAc;AACd,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAMiE,UAAU,GAAGjpB,KAAK,CAAC0X,IAAN,CAAWqR,UAAU,CAAC1F,cAAX,EAAX,CAAA,CAAwCjnB,MAAxC,CACjB,UAACkpB,CAAD,EAAA;AAAA,IAAA,OAAOA,CAAC,CAACL,KAAF,GAAU,CAAjB,CAAA;AAAA,GADiB,CAAnB,CAAA;AAGA,EAAA,IAAMiE,WAAW,GAAGlpB,KAAK,CAAC0X,IAAN,CAAWsR,WAAW,CAAC3F,cAAZ,EAAX,CAAA,CAAyCjnB,MAAzC,CAClB,UAACkpB,CAAD,EAAA;AAAA,IAAA,OAAOA,CAAC,CAACL,KAAF,GAAU,CAAjB,CAAA;AAAA,GADkB,CAApB,CAAA;AAGA,EAAMkE,IAAAA,SAAS,GAAGF,UAAU,CAACA,UAAU,CAACrvB,MAAX,GAAoB,CAArB,CAA5B,CAAA;AACA,EAAA,IAAMwvB,UAAU,GAAGF,WAAW,CAAC,CAAD,CAA9B,CAAA;AACA,EAAA,OAAO,CAACC,SAAD,EAAYC,UAAZ,CAAP,CAAA;AACD,CAAA;AAEM,SAASC,oBAAT,CAA8B3T,KAA9B,EAA4C;AAAA,EACjB+S,IAAAA,eAAAA,GAAAA,cAAc,CAAC/S,KAAD,CADG;AAAA,MAC1CyT,SAD0C,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MAC/BC,UAD+B,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;AAEjD,EAAI,IAAA,CAACD,SAAD,IAAc,CAACC,UAAf,IAA6B,OAAOE,OAAP,KAAmB,WAApD,EAAiE;AAC/D,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAO,CACL,IAAIA,OAAJ,CAAYH,SAAS,CAACzrB,KAAtB,EAA6ByrB,SAAS,CAACzI,GAAvC,EAA4C,CAA5C,EAA+CyI,SAAS,CAAC7H,MAAzD,CADK,EAEL,IAAIgI,OAAJ,CAAYF,UAAU,CAAC3rB,IAAvB,EAA6B2rB,UAAU,CAAC1I,GAAxC,EAA6C,CAA7C,EAAgD0I,UAAU,CAAC9H,MAA3D,CAFK,CAAP,CAAA;AAID,CAAA;AAEc,SAASiI,aAAT,CAAuB7T,KAAvB,EAAqC;AAAA,EAClB+S,IAAAA,gBAAAA,GAAAA,cAAc,CAAC/S,KAAD,CADI;AAAA,MAC3CyT,SAD2C,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAChCC,UADgC,GAAA,gBAAA,CAAA,CAAA,CAAA,CAAA;;AAElD,EAAA,IAAI,CAACD,SAAD,IAAc,CAACC,UAAnB,EAA+B;AAC7B,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACE,EAAA,OAAOA,UAAU,CAAC3rB,IAAX,GAAkB0rB,SAAS,CAAC1rB,IAAnC,CAAA;AACD;;ACrFD;AACA;AACA;AACA;AAQe,SAAS+rB,iBAAT,CACb9T,KADa,EAEb+T,SAFa,EAGbhZ,UAHa,EAIb;AAAA,EAAA,IAAA,iBAAA,CAAA;;AACA,EAAA,IAAI,CAACiF,KAAK,CAACN,WAAN,EAAL,EAA0B;AACxB;AACA,IAAA,IAAMtd,IAAI,GAAG2vB,WAAW,CAAC/R,KAAK,CAAChd,GAAP,CAAxB,CAAA;AACA,IAAOZ,OAAAA,IAAI,CAAC0qB,qBAAL,EAAP,CAAA;AACD,GAAA;;AALD,EAAA,IAMQ/M,QANR,GAMqBhF,UAAU,CAAC9X,KANhC,CAMQ8c,QANR,CAAA;AAOA,EAAA,IAAMlZ,IAAI,GAAA,CAAA,iBAAA,GAAGkZ,QAAQ,CAACtN,OAAT,CAAiBuN,KAAK,CAAChd,GAAvB,CAAH,KAAG,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAA6B6D,IAA1C,CAAA;AACA,EAAA,IAAMmtB,cAAc,GAAGntB,IAAI,IAAIA,IAAI,CAACmZ,KAAK,CAACnY,MAAN,GAAe,CAAhB,CAAJ,KAA2B,IAA1D,CAAA;AACA,EAAA,IAAMosB,QAAQ,GAAGJ,aAAa,CAAC7T,KAAD,CAA9B,CAAA;;AACA,EAAA,IAAIiU,QAAJ,EAAc;AACZ,IAAA,IAAMC,SAAS,GAAGP,oBAAoB,CAAC3T,KAAD,CAAtC,CAAA;AACA,IAAA,OAAO+T,SAAS,GAAGG,SAAS,CAACA,SAAS,CAAChwB,MAAV,GAAmB,CAApB,CAAZ,GAAqCgwB,SAAS,CAAC,CAAD,CAA9D,CAAA;AACD,GAAA;;AACD,EAAA,IAAMC,QAAQ,GAAGjC,YAAY,CAC3B7H,SAAS,CAAC9lB,MAAV,CAAiB;AACf+lB,IAAAA,MAAM,EAAEtK,KADO;AAEfuK,IAAAA,KAAK,EAAEvK,KAAAA;AAFQ,GAAjB,CAD2B,EAK3BjF,UAL2B,CAA7B,CAAA;;AAOA,EAAI,IAAA,CAACoZ,QAAL,EAAe;AACb,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAMxE,UAAU,GAAGwE,QAAQ,CAACxG,cAAT,EAAnB,CAxBA;;AA0BA,EAAA,OAAQoG,SAAS,IAAIC,cAAd,GAAgCrE,UAAU,CAACA,UAAU,CAACzrB,MAAX,GAAoB,CAArB,CAA1C,GAAoEyrB,UAAU,CAAC,CAAD,CAArF,CAAA;AACD;;ACvCD,IAAMyE,KAAK,GAAG,IAAInqB,OAAJ,EAAd,CAAA;AAEO,IAAMoqB,eAAe,GAAG,SAAlBA,eAAkB,CAACtZ,UAAD,EAAyB3N,QAAzB,EAAoDknB,OAApD,EAAgF;AAC7GF,EAAAA,KAAK,CAACrvB,GAAN,CAAUgW,UAAV,EAAsB;AAAEwZ,IAAAA,KAAK,EAAEnnB,QAAT;AAAmBknB,IAAAA,OAAO,EAAPA,OAAAA;AAAnB,GAAtB,CAAA,CAAA;AACD,CAFM,CAAA;AAIA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACzZ,UAAD,EAA4B;AAAA,EAAA,IAAA,UAAA,CAAA;;AAC1D,EAAOqZ,OAAAA,CAAAA,UAAAA,GAAAA,KAAK,CAAC3mB,GAAN,CAAUsN,UAAV,CAAP,KAAA,IAAA,GAAA,KAAA,CAAA,GAAO,WAAuBwZ,KAA9B,CAAA;AACD,CAFM,CAAA;AAIA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAC1Z,UAAD,EAA4B;AAChE,EAAA,OAAOqZ,KAAK,CAAC3mB,GAAN,CAAUsN,UAAV,CAAP,CAAA;AACD,CAFM;;ACbP;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS2Z,2BAAT,CAAqC1S,IAArC,EAAkD2S,EAAlD,EAA6D5Z,UAA7D,EAAqF;AAC1F,EAAA,IAAI4Z,EAAE,CAAChV,WAAH,EAAJ,EAAsB;AACpB,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;;AAHyF,EAI1DoT,IAAAA,eAAAA,GAAAA,cAAc,CAAC4B,EAAD,CAJ4C;AAAA,MAInFlB,SAJmF,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,MAIxEC,UAJwE,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;AAK1F,EAAA,IAAI,CAACD,SAAD,IAAc,CAACC,UAAnB,EAA+B;AAC7B,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAI1R,IAAI,CAACrC,WAAL,EAAJ,EAAwB;AACtB,IAAA,OAAO+T,UAAU,CAAC3rB,IAAX,GAAkB0rB,SAAS,CAAC1rB,IAA5B,IAAoCia,IAAI,CAAC3C,IAAL,KAAcD,SAAS,CAACa,MAAnE,CAAA;AACD,GAAA;;AAED,EAAA,IAAM2U,OAAO,GAAGJ,gBAAgB,CAACzZ,UAAD,CAAhC,CAAA;;AACA,EAAI,IAAA,CAAC6Z,OAAD,IAAYlB,UAAU,CAAC3rB,IAAX,IAAmB0rB,SAAS,CAAC1rB,IAA7C,EAAmD;AACjD,IAAA,OAAO,KAAP,CAAA;AACD,GAhByF;;;AAmB1F,EAAA,OAAQ6sB,OAAO,CAAC7sB,IAAR,GAAe2rB,UAAU,CAAC3rB,IAA3B,GAAoC0rB,SAAS,CAACzrB,KAAV,GAAkB4sB,OAAO,CAAC7sB,IAArE,CAAA;AACD,CAAA;AAEM,SAAS8sB,iBAAT,CACLC,OADK,EAEL/Z,UAFK,EAGL;AAAA,EAAA,IACQgF,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAEA;;AACA,EAAA,IAAMgV,UAAU,GAAGhD,WAAW,CAAChS,QAAQ,CAAC/c,GAAV,CAA9B,CAAA;;AACA,EAAI,IAAA,CAAC+xB,UAAL,EAAiB;AACf,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAMnK,IAAI,GAAGmK,UAAU,CAACjI,qBAAX,EAAb,CAAA;AACA,EAAOgI,OAAAA,OAAO,GAAGlK,IAAI,CAAC7iB,IAAL,GAAY6iB,IAAI,CAAC2E,KAAL,GAAa,CAA1C,CAAA;AACD;;;;;;;;oDCWSyF;qDAiCAC;;AArEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAC7Cna,UAD6C,EAE7CiF,KAF6C,EAG1C;AAAA,EAAA,IACKD,QADL,GACkBhF,UAAU,CAAC9X,KAD7B,CACK8c,QADL,CAAA;AAEH,EAAMzQ,IAAAA,MAAM,GAAGyQ,QAAQ,CAAC3J,gBAAT,CAA0B4J,KAAK,CAAChd,GAAhC,CAAf,CAAA;;AACA,EAAI,IAAA,CAACsM,MAAD,IAAWyL,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B7lB,MAA3B,CAAX,IAAiDyL,UAAU,CAACoa,KAAX,CAAiB,eAAjB,EAAkC7lB,MAAlC,CAArD,EAAgG;AAC9F,IAAA,OAAO0Q,KAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAIA,KAAK,CAACnY,MAAN,KAAiB,CAArB,EAAwB;AACtB,IAAMkR,IAAAA,QAAQ,GAAGgH,QAAQ,CAACxL,eAAT,CAAyByL,KAAK,CAAChd,GAA/B,CAAjB,CAAA;;AACA,IAAA,IAAI+V,QAAJ,EAAc;AAAA,MAAA,IACJ/V,GADI,GACI+V,QADJ,CACJ/V,GADI,CAAA;AAEZ,MAAA,IAAM6E,MAAM,GAAGkR,QAAQ,CAAClS,IAAT,CAAc3C,MAA7B,CAAA;AACA,MAAOib,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AAAEvB,QAAAA,GAAG,EAAHA,GAAF;AAAO6E,QAAAA,MAAM,EAANA,MAAAA;AAAP,OAAjB,CAAP,CAAA;AACD,KAAA;AACF,GAPD,MAOO,IAAImY,KAAK,CAACnY,MAAN,KAAiByH,MAAM,CAACzI,IAAP,CAAY3C,MAAjC,EAAyC;AAC9C,IAAM6U,IAAAA,SAAQ,GAAGgH,QAAQ,CAACrL,WAAT,CAAqBsL,KAAK,CAAChd,GAA3B,CAAjB,CAAA;;AACA,IAAA,IAAI+V,SAAJ,EAAc;AAAA,MAAA,IACJ/V,IADI,GACI+V,SADJ,CACJ/V,GADI,CAAA;AAEZ,MAAM6E,IAAAA,OAAM,GAAG,CAAf,CAAA;AACA,MAAOsX,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AAAEvB,QAAAA,GAAG,EAAHA,IAAF;AAAO6E,QAAAA,MAAM,EAANA,OAAAA;AAAP,OAAjB,CAAP,CAAA;AACD,KAAA;AACF,GAAA;;AACD,EAAA,OAAOmY,KAAP,CAAA;AACD,CAzBM,CAAA;;AA2BP,SAAUgV,yBAAV,CACEjV,QADF,EAEEqV,EAFF,EAGE7hB,OAHF,EAAA;AAAA,EAAA,IAAA,MAAA,EAAA,IAAA,EAAA,SAAA,EAAA,MAAA,EAAA,IAAA,CAAA;AAAA,EAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,0BAAA,CAAA,QAAA,EAAA;AAAA,IAAA,OAAA,CAAA,EAAA;AAAA,MAAA,QAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,QAAA,KAAA,CAAA;AAKQ8hB,UAAAA,MALR,GAKiBtV,QAAQ,CAACtN,OAAT,CAAiB2iB,EAAE,CAACpyB,GAApB,CALjB,CAAA;;AAAA,UAAA,IAMOqyB,MANP,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,OAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;;AAAA,QAAA,KAAA,CAAA;AAAA,UASMA,IAAAA,CAAAA,MAAM,CAACvxB,MAAP,EATN,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAUI,UAAA,OAAMuxB,MAAN,CAAA;;AAVJ,QAAA,KAAA,CAAA;AAaQ5tB,UAAAA,IAbR,GAae,SAAPA,IAAO,CAACzE,GAAD,EAAiB;AAC5B,YAAA,OAAOuQ,OAAO,GAAGwM,QAAQ,CAACxL,eAAT,CAAyBvR,GAAzB,CAAH,GAAmC+c,QAAQ,CAACrL,WAAT,CAAqB1R,GAArB,CAAjD,CAAA;AACD,WAfH,CAAA;;AAiBQ0U,UAAAA,SAjBR,GAiBoB,SAAZA,SAAY,CAACR,OAAD,EAAsB;AACtC,YAAO3D,OAAAA,OAAO,GAAG2D,OAAO,CAAC7S,WAAR,EAAH,GAA2B6S,OAAO,CAAC9S,YAAR,EAAzC,CAAA;AACD,WAnBH,CAAA;;AAqBQkxB,UAAAA,MArBR,GAsBIF,EAAE,CAACzV,WAAH,EACEyV,KAAAA,EAAE,CAAC/V,IAAH,KAAYD,SAAS,CAACa,MAAtB,IAAgC,CAAC1M,OAAlC,IAA+C6hB,EAAE,CAAC/V,IAAH,KAAYD,SAAS,CAACoB,KAAtB,IAA+BjN,OAD/E,CAtBJ,CAAA;AAyBMnR,UAAAA,IAzBN,GA0BIkzB,MAAM,IAAID,MAAM,CAACtxB,SAAP,EAAV,GAA+B2T,SAAS,CAAC2d,MAAD,CAAxC,GAAmD5tB,IAAI,CAAC4tB,MAAM,CAACryB,GAAR,CA1B3D,CAAA;;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,IAAA,CA2BSZ,IA3BT,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AA4BI,UAAA,OAAMA,IAAN,CAAA;;AA5BJ,QAAA,KAAA,EAAA;AA6BIA,UAAAA,IAAI,GAAGqF,IAAI,CAACrF,IAAI,CAACY,GAAN,CAAX,CAAA;AA7BJ,UAAA,QAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,UAAA,MAAA;;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,KAAA,KAAA;AAAA,UAAA,OAAA,QAAA,CAAA,IAAA,EAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAAA,GAAA,EAAA,OAAA,CAAA,CAAA;AAAA,CAAA;;AAiCA,SAAUiyB,yBAAV,CACEla,UADF,EAEEqa,EAFF,EAGEG,IAHF,EAIEhiB,OAJF,EAAA;AAAA,EAAA,IAAA,QAAA,EAAA,IAAA,EAAA,qBAAA,EAAA,SAAA,EAAA,MAAA,EAuBWiiB,YAvBX,EAAA,SAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,YAAA,EAAA,SAAA,CAAA;;AAAA,EAAA,OAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,0BAAA,CAAA,SAAA,EAAA;AAAA,IAAA,OAAA,CAAA,EAAA;AAAA,MAAA,QAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,QAAA,KAAA,CAAA;AAuBWA,UAAAA,YAvBX,GAAA,SAAA,aAAA,CAwBIjE,OAxBJ,EAyBIkE,YAzBJ,EA0BgC;AAAA,YAAA,IAAA,SAAA,CAAA;;AAC5B,YAAMC,IAAAA,YAAY,GAAG3V,QAAQ,CAAC4V,yBAAT,CACnBpE,OADmB,EAEnBxW,UAFmB,CAArB,CAAA;;AAIA,YAAI,IAAA,CAAC2a,YAAL,EAAmB;AACjB,cAAA,OAAO,IAAP,CAAA;AACD,aAAA;;AACD,YAAA,IAAME,SAAS,GAAGF,YAAY,CAACtxB,YAAb,EAAlB,CAAA;AACA,YAAA,IAAMyxB,QAAQ,GAAGH,YAAY,CAACrxB,WAAb,EAAjB,CAAA;AACA,YAAIyxB,IAAAA,QAAQ,GAAGF,SAAf,CAAA;;AACA,YAAA,IAAIH,YAAJ,EAAkB;AAChB;AACA,cAAIC,IAAAA,YAAY,CAACjjB,OAAb,CAAqB2iB,EAAE,CAACpyB,GAAxB,CAAJ,EAAkC;AAChC,gBAAA,OAAO,IAAP,CAAA;AACD,eAAA;;AACD8yB,cAAAA,QAAQ,GAAGviB,OAAO,GAAGsiB,QAAH,GAAcD,SAAhC,CAAA;AACD,aAND,MAMO;AACLE,cAAAA,QAAQ,GAAGviB,OAAO,GAAGqiB,SAAH,GAAeC,QAAjC,CAAA;AACD,aAAA;;AAED,YAAME,IAAAA,YAAY,GAAG,CAAAD,CAAAA,SAAAA,GAAAA,QAAQ,SAAR,GAAU9yB,KAAAA,CAAAA,GAAAA,SAAAA,CAAAA,GAAV,MAAkBuuB,OAAvC,CAAA;;AACA,YAAI,IAAA,CAACwE,YAAL,EAAmB;AACjB,cAAA,OAAO,IAAP,CAAA;AACD,aAAA;;AAxB2B,YAAA,IAyBpB/yB,GAzBoB,GAyBZ0yB,YAzBY,CAyBpB1yB,GAzBoB,CAAA;AA0B5B,YAAA,IAAMqc,IAAI,GACP9L,OAAO,IAAIkiB,YAAZ,IAA8B,CAACliB,OAAD,IAAY,CAACkiB,YAA3C,GACIrW,SAAS,CAACoB,KADd,GAEIpB,SAAS,CAACa,MAHhB,CAAA;AAIA,YAAO,OAAA;AAAEjd,cAAAA,GAAG,EAAHA,GAAF;AAAOqc,cAAAA,IAAI,EAAJA,IAAAA;AAAP,aAAP,CAAA;AACD,WAzDH,CAAA;;AAMUU,UAAAA,QANV,GAMuBhF,UAAU,CAAC9X,KANlC,CAMU8c,QANV,CAAA;;AAQQiW,UAAAA,IARR,GAQe,SAAPA,IAAO,CAACtoB,CAAD,EAAYtE,CAAZ,EAA0B;AACrC,YAAImsB,IAAAA,IAAI,KAAK,QAAb,EAAuB;AACrB,cAAMU,IAAAA,YAAY,GAAGzG,SAAS,CAACtK,aAAV,CAAwBxX,CAAxB,EAA2BtE,CAA3B,EAA8BmK,OAA9B,CAArB,CAAA;AACA,cAAO0iB,OAAAA,YAAY,IAAI,CAAvB,CAAA;AACD,aAAA;;AACD,YAAM/R,IAAAA,KAAK,GAAGsL,SAAS,CAAC1J,iBAAV,CAA4BpY,CAA5B,EAA+BtE,CAA/B,EAAkCmK,OAAlC,CAAd,CAAA;AACA,YAAA,OAAOvF,IAAI,CAAC8d,GAAL,CAAS5H,KAAT,EAAgB,CAAhB,CAAP,CAAA;AACD,WAfH,CAiBE;AACA;;;AACIgS,UAAAA,qBAnBN,GAmB8B,KAnB9B,CAAA;AAoBMC,UAAAA,SApBN,GAoBkBpW,QAAQ,CAAC/K,eAAT,CAAyBogB,EAAE,CAACpyB,GAA5B,CApBlB,CAAA;AAqBM6E,UAAAA,MArBN,GAqBe,CArBf,CAAA;AAAA,UAAA,SAAA,GAAA9E,iCAAA,CA2DqBiyB,yBAAyB,CAACjV,QAAD,EAAWqV,EAAX,EAAe7hB,OAAf,CA3D9C,CAAA,CAAA;;AAAA,QAAA,KAAA,CAAA;AAAA,UAAA,IAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AA2DanR,UAAAA,IA3Db,GAAA,KAAA,CAAA,KAAA,CAAA;AA4DYyE,UAAAA,IA5DZ,GA4D0BzE,IA5D1B,CA4DYyE,IA5DZ,EA4DkB7D,GA5DlB,GA4D0BZ,IA5D1B,CA4DkBY,GA5DlB,CAAA;AA6DU0yB,UAAAA,YA7DV,GA6DyB3V,QAAQ,CAAC/K,eAAT,CAAyBhS,GAAzB,CA7DzB,CAAA;AA+DQozB,UAAAA,SA/DR,GA+DoBZ,YAAY,CAACxyB,GAAD,EAAM,IAAN,CA/DhC,CAAA;;AAAA,UAAA,IAAA,CAgEQozB,SAhER,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAiEM,UAAA,OAAMA,SAAN,CAAA;;AAjEN,QAAA,KAAA,EAAA;AAAA,UAoEQrW,IAAAA,CAAAA,QAAQ,CAAC0S,cAAT,CAAwBrwB,IAAI,CAACY,GAA7B,EAAkC+X,UAAlC,CApER,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAqEMqb,UAAAA,SAAS,GAAGZ,YAAY,CAACxyB,GAAD,EAAM,KAAN,CAAxB,CAAA;;AArEN,UAAA,IAAA,CAsEUozB,SAtEV,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAuEQ,UAAA,OAAMA,SAAN,CAAA;;AAvER,QAAA,KAAA,EAAA;AAyEMF,UAAAA,qBAAqB,GAAG,IAAxB,CAAA;AAzEN,UAAA,OAAA,SAAA,CAAA,MAAA,CAAA,UAAA,EAAA,EAAA,CAAA,CAAA;;AAAA,QAAA,KAAA,EAAA;AA6EI;AACA,UAAIC,IAAAA,SAAS,KAAKT,YAAlB,EAAgC;AAC9BS,YAAAA,SAAS,GAAGT,YAAZ,CAAA;AACAQ,YAAAA,qBAAqB,GAAG,IAAxB,CAAA;AACD,WAjFL;;;AAoFI,UAAId,IAAAA,EAAE,CAAC1V,WAAH,EAAoBtd,IAAAA,IAAI,CAACY,GAAL,KAAaoyB,EAAE,CAACpyB,GAAxC,EAA6C;AAC3C;AACA6E,YAAAA,MAAM,GAAG0L,OAAO,GACZ6hB,EAAE,CAACvtB,MAAH,GAAYmuB,IAAI,CAACnvB,IAAD,EAAOuuB,EAAE,CAACvtB,MAAV,CADJ,GAEZutB,EAAE,CAACvtB,MAAH,GAAYmuB,IAAI,CAACnvB,IAAD,EAAOuuB,EAAE,CAACvtB,MAAV,CAFpB,CAAA;AAGD,WALD,MAKO,IAAIquB,qBAAJ,EAA2B;AAChC;AACAruB,YAAAA,MAAM,GAAG0L,OAAO,GAAG1M,IAAI,CAAC3C,MAAR,GAAiB,CAAjC,CAAA;AACAgyB,YAAAA,qBAAqB,GAAG,KAAxB,CAAA;AACD,WAJM,MAIA;AACLruB,YAAAA,MAAM,GAAG0L,OAAO,GAAG1M,IAAI,CAAC3C,MAAL,GAAc8xB,IAAI,CAACnvB,IAAD,EAAOA,IAAI,CAAC3C,MAAZ,CAArB,GAA2C8xB,IAAI,CAACnvB,IAAD,EAAO,CAAP,CAA/D,CAAA;AACD,WA/FL;;;AAAA,QAAA,KAAA,EAAA;AAAA,UAkGWgB,IAAAA,EAAAA,MAAM,IAAIhB,IAAI,CAAC3C,MAAf,IAAyB2D,MAAM,IAAI,CAlG9C,CAAA,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAmGM,UAAM,OAAA;AAAE7E,YAAAA,GAAG,EAAHA,GAAF;AAAO6E,YAAAA,MAAM,EAANA,MAAAA;AAAP,WAAN,CAAA;;AAnGN,QAAA,KAAA,EAAA;AAoGM0L,UAAAA,OAAO,GAAI1L,MAAM,IAAImuB,IAAI,CAACnvB,IAAD,EAAOgB,MAAP,CAAlB,GAAqCA,MAAM,IAAImuB,IAAI,CAACnvB,IAAD,EAAOgB,MAAP,CAA1D,CAAA;AApGN,UAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,UAAA,MAAA;;AAAA,QAAA,KAAA,EAAA;AAuGIuuB,UAAAA,SAAS,GAAGZ,YAAY,CAACxyB,GAAD,EAAM,KAAN,CAAxB,CAAA;;AAvGJ,UAAA,IAAA,CAwGQozB,SAxGR,EAAA;AAAA,YAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAAA,YAAA,MAAA;AAAA,WAAA;;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA;AAyGM,UAAA,OAAMA,SAAN,CAAA;;AAzGN,QAAA,KAAA,EAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA,CAAA;AAAA,UAAA,MAAA;;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,KAAA,KAAA;AAAA,UAAA,OAAA,SAAA,CAAA,IAAA,EAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAAA,GAAA,EAAA,QAAA,CAAA,CAAA;AAAA,CAAA;;AA8GO,SAASC,eAAT,CACLtb,UADK,EAELqa,EAFK,EAGLkB,QAHK,EAILf,IAJK,EAKL;AAAA,EAAA,IAFAe,QAEA,KAAA,KAAA,CAAA,EAAA;AAFAA,IAAAA,QAEA,GAFW,CAEX,CAAA;AAAA,GAAA;;AAAA,EAAA,IADAf,IACA,KAAA,KAAA,CAAA,EAAA;AADAA,IAAAA,IACA,GADiB,QACjB,CAAA;AAAA,GAAA;;AAAA,EAAA,IACQxV,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAAA;AAEA,EAAA,IAAMxM,OAAO,GAAG+iB,QAAQ,GAAG,CAA3B,CAAA;AACA,EAAA,IAAIC,SAAS,GAAGvoB,IAAI,CAAC+X,GAAL,CAASuQ,QAAT,CAAhB,CAAA;;AAEA,EAAIf,IAAAA,IAAI,KAAK,MAAT,IAAmBH,EAAE,CAACzV,WAAH,EAAvB,EAAyC;AAAA,IAAA,IAC/B3c,GAD+B,GACvBoyB,EADuB,CAC/BpyB,GAD+B,CAAA;;AAEvC,IAAIuQ,IAAAA,OAAO,IAAI6hB,EAAE,CAAC/V,IAAH,KAAYD,SAAS,CAACoB,KAArC,EAA4C;AAC1C,MAAOpB,OAAAA,SAAS,CAAC7a,MAAV,CAAiB;AAAEvB,QAAAA,GAAG,EAAHA,GAAF;AAAOqc,QAAAA,IAAI,EAAED,SAAS,CAACa,MAAAA;AAAvB,OAAjB,CAAP,CAAA;AACD,KAAA;;AACD,IAAI,IAAA,CAAC1M,OAAD,IAAY6hB,EAAE,CAAC/V,IAAH,KAAYD,SAAS,CAACa,MAAtC,EAA8C;AAC5C,MAAOb,OAAAA,SAAS,CAAC7a,MAAV,CAAiB;AAAEvB,QAAAA,GAAG,EAAHA,GAAF;AAAOqc,QAAAA,IAAI,EAAED,SAAS,CAACoB,KAAAA;AAAvB,OAAjB,CAAP,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAiByU,KAAAA,IAAAA,UAAAA,GAAAA,iCAAAA,CAAAA,yBAAyB,CAACla,UAAD,EAAaqa,EAAb,EAAiBG,IAAjB,EAAuBhiB,OAAvB,CAA1C,CAA2E,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,EAAA,EAAA,IAAA,GAAA;AAAA,IAAA,IAAhEijB,EAAgE,GAAA,MAAA,CAAA,KAAA,CAAA;AACzED,IAAAA,SAAS,IAAI,CAAb,CAAA;;AACA,IAAIA,IAAAA,SAAS,IAAI,CAAjB,EAAoB;AAClB,MAAA,OAAOtX,KAAK,CAAC1a,MAAN,CAAaiyB,EAAb,CAAP,CAAA;AACD,KAAA;AACF,GAAA;;AACD,EAAA,OAAOzb,UAAU,CAACoa,KAAX,CAAiBsB,eAAjB,EAAkC1W,QAAlC,EAA4CxM,OAAO,GAAG,OAAH,GAAa,KAAhE,CAAP,CAAA;AACD,CAAA;AAEM,SAASmjB,kBAAT,CAA4B3b,UAA5B,EAAoD3Y,IAApD,EAAgE;AACrE,EAAO2Y,OAAAA,UAAU,CAACoa,KAAX,CAAiBsB,eAAjB,EAAkCr0B,IAAlC,EAAwC,OAAxC,CAAP,CAAA;AACD,CAAA;AAEM,SAASu0B,gBAAT,CAA0B5b,UAA1B,EAAkD3Y,IAAlD,EAA8D;AACnE,EAAO2Y,OAAAA,UAAU,CAACoa,KAAX,CAAiBsB,eAAjB,EAAkCr0B,IAAlC,EAAwC,KAAxC,CAAP,CAAA;AACD,CAAA;;AAED,SAASq0B,eAAT,CACE1b,UADF,EAEE3Y,IAFF,EAGE8O,KAHF,EAIE;AAAA,EAAA,IACQ6O,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAAA;AAEA,EAAA,IAAM6W,UAAU,GACd1lB,KAAK,KAAK,OAAV,GAAoB9O,IAAI,CAAC4B,YAAL,EAApB,GAA0C5B,IAAI,CAAC+B,WAAL,EAD5C,CAFA;;AAKA,EAAA,IAAM0yB,aAAa,GAAG9W,QAAQ,CAAC+W,0BAAT,CACpBF,UAAU,CAAC5zB,GADS,EAEpBZ,IAAI,CAACY,GAFe,EAGpB+X,UAHoB,CAAtB,CALA;;AAWA,EAAA,IAAI8b,aAAJ,EAAmB;AAAA,IAAA,IACT7zB,KADS,GACD6zB,aADC,CACT7zB,GADS,CAAA;AAEjB,IAAA,IAAMqc,IAAI,GAAGnO,KAAK,KAAK,OAAV,GAAoBkO,SAAS,CAACa,MAA9B,GAAuCb,SAAS,CAACoB,KAA9D,CAAA;AACA,IAAOpB,OAAAA,SAAS,CAAC7a,MAAV,CAAiB;AAAEvB,MAAAA,GAAG,EAAHA,KAAF;AAAOqc,MAAAA,IAAI,EAAJA,IAAAA;AAAP,KAAjB,CAAP,CAAA;AACD,GAfD;;;AAAA,EAAA,IAiBQrc,GAjBR,GAiBgB4zB,UAjBhB,CAiBQ5zB,GAjBR,CAAA;AAkBA,EAAA,IAAM6E,MAAM,GAAGqJ,KAAK,KAAK,OAAV,GAAoB,CAApB,GAAwB0lB,UAAU,CAAC/vB,IAAX,CAAgB3C,MAAvD,CAAA;AACA,EAAOib,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AAAEvB,IAAAA,GAAG,EAAHA,GAAF;AAAO6E,IAAAA,MAAM,EAANA,MAAAA;AAAP,GAAjB,CAAP,CAAA;AACD,CAAA;;AAED,SAASkvB,oBAAT,CAA8Bhc,UAA9B,EAA0CiF,KAA1C,EAAiD+T,SAAjD,EAA4D;AAAA,EAAA,IAClDhU,QADkD,GACrChF,UAAU,CAAC9X,KAD0B,CAClD8c,QADkD,CAAA;AAE1D,EAAM3d,IAAAA,IAAI,GAAG2d,QAAQ,CAAC/N,UAAT,CAAoBgO,KAAK,CAAChd,GAA1B,CAAb,CAAA;AACA,EAAMg0B,IAAAA,WAAW,GAAGjc,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B/yB,IAA3B,CAAA,GAChBA,IADgB,GAEhB2d,QAAQ,CAAC0S,cAAT,CAAwBzS,KAAK,CAAChd,GAA9B,EAAmC+X,UAAnC,CAFJ,CAAA;AAGA,EAAIkc,IAAAA,SAAyB,GAAG,IAAhC,CAAA;;AACA,EAAA,IAAID,WAAJ,EAAiB;AACfC,IAAAA,SAAS,GAAGlF,WAAW,CAACiF,WAAW,CAACh0B,GAAb,CAAX,CAA6B8pB,qBAA7B,EAAZ,CAAA;AACD,GAFD,MAEO;AACLmK,IAAAA,SAAS,GAAGnD,iBAAiB,CAAC9T,KAAD,EAAQ+T,SAAR,EAAmBhZ,UAAnB,CAA7B,CAAA;AACD,GAAA;;AACD,EAAI,IAAA,CAACkc,SAAL,EAAgB;AACd,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAOA,SAAP,CAAA;AACD,CAAA;;AAEM,SAASC,cAAT,CACLnc,UADK,EAELiF,KAFK,EAGL+T,SAHK,EAILoD,OAJK,EAKL;AAAA,EAAA,IACQl0B,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ8c,QAFR,GAEqB9c,KAFrB,CAEQ8c,QAFR,CAAA;AAIA,EAAMkX,IAAAA,SAAS,GAAGF,oBAAoB,CAAChc,UAAD,EAAaiF,KAAb,EAAoB+T,SAApB,CAAtC,CAAA;;AACA,EAAI,IAAA,CAACkD,SAAL,EAAgB;AACd,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAED,EAAMG,IAAAA,KAAK,GAAGpX,KAAK,CAACL,WAAN,EAAuBK,IAAAA,KAAK,CAACX,IAAN,KAAeD,SAAS,CAACoB,KAAhD,GAAwDyW,SAAS,CAACjvB,KAAlE,GAA0EivB,SAAS,CAAClvB,IAAlG,CAAA;AAEA,EAAM4iB,IAAAA,CAAC,GAAG,OAAOwM,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwCC,KAAlD,CAAA;AACA,EAAA,IAAIrM,CAAC,GAAGkM,SAAS,CAACjM,GAAlB,CAAA;AAEA,EAAIqM,IAAAA,YAAY,GAAGtX,QAAQ,CAACvJ,wBAAT,CAAkCwJ,KAAK,CAAChd,GAAxC,CAAnB,CAAA;AACA,EAAIs0B,IAAAA,eAA0C,GAAG,IAAjD,CAAA;AACA,EAAA,IAAIC,eAAJ,CAAA;AACA,EAAInvB,IAAAA,KAAK,GAAG,KAAZ,CAAA;;AACA,EAAO,OAAA,CAACA,KAAR,EAAe;AACb,IAAI,IAAA,CAACivB,YAAL,EAAmB;AACjB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAM3B,IAAAA,YAAY,GAAG3V,QAAQ,CAAC4V,yBAAT,CAAmC0B,YAAY,CAACr0B,GAAhD,EAAqD+X,UAArD,CAArB,CAAA;;AACA,IAAA,IAAK2a,YAAY,IAAIA,YAAY,CAAC1yB,GAAb,KAAqBgd,KAAK,CAAChd,GAA3C,IAAkD,CAAC0yB,YAAY,CAACjjB,OAAb,CAAqBuN,KAAK,CAAChd,GAA3B,CAAxD,EAA0F;AAAA,MAAA,IAChFA,GADgF,GACxE0yB,YADwE,CAChF1yB,GADgF,CAAA;AAExF,MAAA,IAAMqc,IAAI,GAAGwV,iBAAiB,CAAClK,CAAD,EAAI5P,UAAJ,CAAjB,GAAmCqE,SAAS,CAACa,MAA7C,GAAsDb,SAAS,CAACoB,KAA7E,CAAA;AACA,MAAOpB,OAAAA,SAAS,CAAC7a,MAAV,CAAiB;AAAEvB,QAAAA,GAAG,EAAHA,GAAF;AAAOqc,QAAAA,IAAI,EAAJA,IAAAA;AAAP,OAAjB,CAAP,CAAA;AACD,KAAA;;AACD,IAAI,IAAA;AACFiY,MAAAA,eAAe,GAAGvF,WAAW,CAACsF,YAAY,CAACr0B,GAAd,EAAmBhC,MAAnB,CAA7B,CAAA;AACD,KAFD,CAEE,OAAOw2B,CAAP,EAAU;AACVH,MAAAA,YAAY,GAAGtX,QAAQ,CAAClL,gBAAT,CAA0BwiB,YAAY,CAACr0B,GAAvC,CAAf,CAAA;AACA,MAAA,SAAA;AACD,KAAA;;AAEDu0B,IAAAA,eAAe,GAAGjtB,KAAK,CAAC0X,IAAN,CAChBsV,eAAe,CAAEpK,gBAAjB,CAA0CxE,OAAAA,GAAAA,QAAQ,CAAClhB,IAAnD,GAAA,GAAA,CADgB,EAEhB+L,OAFgB,EAAlB,CAjBa;;AAsBb,IAAA,KAAA,IAAA,UAAA,GAAAxQ,iCAAA,CAAsBw0B,eAAtB,CAAuC,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,EAAA,EAAA,IAAA,GAAA;AAAA,MAAA,IAA5BE,OAA4B,GAAA,MAAA,CAAA,KAAA,CAAA;;AACrC,MAAA,IAAIrvB,KAAJ,EAAW;AACT,QAAA,MAAA;AACD,OAAA;;AAED,MAAA,IAAMsvB,UAAU,GAAGptB,KAAK,CAAC0X,IAAN,CAAWyV,OAAO,CAAC9J,cAAR,EAAX,CAAA,CAChBjnB,MADgB,CACT,UAACkkB,IAAD,EAAA;AAAA,QAAA,OAAUA,IAAI,CAACgB,MAAL,GAAc,CAAxB,CAAA;AAAA,OADS,CAAnB,CAAA;AAGA,MAAA,IAAM+L,gBAAgB,GAAGD,UAAU,CAACxzB,MAApC,CARqC;;AAWrC,MAAA,KAAK,IAAIgK,CAAC,GAAGypB,gBAAgB,GAAG,CAAhC,EAAmCzpB,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;AAC9C,QAAA,IAAM0pB,SAAS,GAAGF,UAAU,CAACxpB,CAAD,CAA5B,CAAA;;AACA,QAAA,IAAI0pB,SAAS,CAAC1M,MAAV,IAAoBH,CAAxB,EAA2B;AACzB3iB,UAAAA,KAAK,GAAG,IAAR,CAAA;AACA2iB,UAAAA,CAAC,GAAG6M,SAAS,CAAC1M,MAAV,GAAmB0M,SAAS,CAAChM,MAAV,GAAmB,CAA1C,CAAA;AACA,UAAA,MAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;;AACDyL,IAAAA,YAAY,GAAGtX,QAAQ,CAAClL,gBAAT,CAA0BwiB,YAAY,CAACr0B,GAAvC,CAAf,CAAA;AACD,GAAA;;AAED,EAAA,IAAMisB,KAAK,GACTqI,eAAe,IAAItG,4BAA4B,CAACsG,eAAD,EAAkB3M,CAAlB,EAAqBI,CAArB,EAAwBhQ,UAAxB,CADjD,CAAA;;AAEA,EAAI,IAAA,CAACkU,KAAL,EAAY;AACV,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAOA,OAAAA,KAAK,CAAC3E,MAAb,CAAA;AACD,CAAA;AAEM,SAASuN,cAAT,CAAwB9c,UAAxB,EAAgD;AAAA,EAAA,IAC7C9X,KAD6C,GACnC8X,UADmC,CAC7C9X,KAD6C,CAAA;AAAA,EAAA,IAE7C8c,QAF6C,GAErB9c,KAFqB,CAE7C8c,QAF6C;AAAA,MAEnC1D,SAFmC,GAErBpZ,KAFqB,CAEnCoZ,SAFmC,CAAA;;AAGrD,EAAI,IAAA,CAACA,SAAL,EAAgB;AACd,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAMpR,KAAK,GAAGoR,SAAS,CAACyb,QAAV,CAAmB/X,QAAnB,CAAd,CAAA;AANqD,EAAA,IAO7CgU,SAP6C,GAO/B1X,SAP+B,CAO7C0X,SAP6C,CAAA;AASrD,EAAM/T,IAAAA,KAAK,GAAGkX,cAAc,CAACnc,UAAD,EAAa9P,KAAb,EAAoB8oB,SAApB,CAA5B,CAAA;;AACA,EAAI,IAAA,CAAC/T,KAAL,EAAY;AACV,IAAA,OAAO3D,SAAS,CAAC0b,qBAAV,CAAgChd,UAAhC,CAAP,CAAA;AACD,GAAA;;AAED,EAAMid,IAAAA,aAAa,GAAGtD,2BAA2B,CAACzpB,KAAD,EAAQ+U,KAAR,EAAejF,UAAf,CAAjD,CAAA;AAEA,EAAMkd,IAAAA,QAAQ,GAAG5b,SAAS,CACvB6b,YADc,CACDlY,KAAK,CAAChd,GADL,EACUgd,KAAK,CAACL,WAAN,EAAsBK,GAAAA,KAAK,CAACX,IAA5B,GAAmCW,KAAK,CAACnY,MADnD,CAEdswB,CAAAA,YAFc,EAGdC,CAAAA,UAHc,CAGHJ,aAHG,CAAjB,CAAA;AAKA,EAAA,OAAOC,QAAP,CAAA;AACD,CAAA;AAEM,SAASI,gBAAT,CACLtd,UADK,EAELiF,KAFK,EAGL+T,SAHK,EAILoD,OAJK,EAKL;AAAA,EAAA,IACQl0B,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ8c,QAFR,GAEqB9c,KAFrB,CAEQ8c,QAFR,CAAA;AAGA,EAAMkX,IAAAA,SAAS,GAAGF,oBAAoB,CAAChc,UAAD,EAAaiF,KAAb,EAAoB+T,SAApB,CAAtC,CAAA;;AACA,EAAI,IAAA,CAACkD,SAAL,EAAgB;AACd,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAED,EAAMG,IAAAA,KAAK,GAAGpX,KAAK,CAACL,WAAN,EAAuBK,IAAAA,KAAK,CAACX,IAAN,KAAeD,SAAS,CAACoB,KAAhD,GAAwDyW,SAAS,CAACjvB,KAAlE,GAA0EivB,SAAS,CAAClvB,IAAlG,CAAA;AAEA,EAAM4iB,IAAAA,CAAC,GAAG,OAAOwM,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwCC,KAAlD,CAAA;AACA,EAAA,IAAIrM,CAAC,GAAGkM,SAAS,CAAC/L,MAAlB,CAAA;AAEA,EAAImM,IAAAA,YAAY,GAAGtX,QAAQ,CAACvJ,wBAAT,CAAkCwJ,KAAK,CAAChd,GAAxC,CAAnB,CAAA;AACA,EAAIs0B,IAAAA,eAA0C,GAAG,IAAjD,CAAA;AACA,EAAA,IAAIC,eAAJ,CAAA;AAEA,EAAInvB,IAAAA,KAAK,GAAG,KAAZ,CAAA;;AACA,EAAO,OAAA,CAACA,KAAR,EAAe;AACb,IAAI,IAAA,CAACivB,YAAL,EAAmB;AACjB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAM3B,IAAAA,YAAY,GAAG3V,QAAQ,CAAC4V,yBAAT,CAAmC0B,YAAY,CAACr0B,GAAhD,EAAqD+X,UAArD,CAArB,CAAA;;AACA,IAAA,IAAI2a,YAAY,IAAIA,YAAY,CAAC1yB,GAAb,KAAqBgd,KAAK,CAAChd,GAA3C,IAAkD,CAAC0yB,YAAY,CAACjjB,OAAb,CAAqBuN,KAAK,CAAChd,GAA3B,CAAvD,EAAwF;AAAA,MAAA,IAC9EA,GAD8E,GACtE0yB,YADsE,CAC9E1yB,GAD8E,CAAA;AAEtF,MAAA,IAAMqc,IAAI,GAAGwV,iBAAiB,CAAClK,CAAD,EAAI5P,UAAJ,CAAjB,GAAmCqE,SAAS,CAACa,MAA7C,GAAsDb,SAAS,CAACoB,KAA7E,CAAA;AACA,MAAOpB,OAAAA,SAAS,CAAC7a,MAAV,CAAiB;AAAEvB,QAAAA,GAAG,EAAHA,GAAF;AAAOqc,QAAAA,IAAI,EAAJA,IAAAA;AAAP,OAAjB,CAAP,CAAA;AACD,KAAA;;AACD,IAAI,IAAA;AACFiY,MAAAA,eAAe,GAAGvF,WAAW,CAACsF,YAAY,CAACr0B,GAAd,EAAmBhC,MAAnB,CAA7B,CAAA;AACD,KAFD,CAEE,OAAOw2B,CAAP,EAAU;AACVH,MAAAA,YAAY,GAAGtX,QAAQ,CAAC9K,YAAT,CAAsBoiB,YAAY,CAACr0B,GAAnC,CAAf,CAAA;AACA,MAAA,SAAA;AACD,KAAA;;AACDu0B,IAAAA,eAAe,GAAGjtB,KAAK,CAAC0X,IAAN,CAChBsV,eAAe,CAACpK,gBAAhB,CAAA,OAAA,GAAyCxE,QAAQ,CAAClhB,IAAlD,GADgB,GAAA,CAAA,CAAlB,CAhBa;;AAqBb,IAAA,KAAA,IAAA,UAAA,GAAAzE,iCAAA,CAAsBw0B,eAAtB,CAAuC,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,EAAA,EAAA,IAAA,GAAA;AAAA,MAAA,IAA5BE,OAA4B,GAAA,MAAA,CAAA,KAAA,CAAA;;AACrC,MAAA,IAAIrvB,KAAJ,EAAW;AACT,QAAA,MAAA;AACD,OAAA;;AAED,MAAA,IAAMsvB,UAAU,GAAGptB,KAAK,CAAC0X,IAAN,CAAWyV,OAAO,CAAC9J,cAAR,EAAX,CAAA,CAChBjnB,MADgB,CACT,UAACkkB,IAAD,EAAA;AAAA,QAAA,OAAUA,IAAI,CAACgB,MAAL,GAAc,CAAxB,CAAA;AAAA,OADS,CAAnB,CAAA;AAGA,MAAA,IAAM+L,gBAAgB,GAAGD,UAAU,CAACxzB,MAApC,CARqC;;AAWrC,MAAA,KAAK,IAAIgK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIypB,gBAAgB,GAAG,CAAxC,EAA2CzpB,CAAC,EAA5C,EAAgD;AAC9C,QAAA,IAAM0pB,SAAS,GAAGF,UAAU,CAACxpB,CAAD,CAA5B,CAAA;;AACA,QAAA,IAAI0pB,SAAS,CAAC5M,GAAV,IAAiBD,CAArB,EAAwB;AACtB3iB,UAAAA,KAAK,GAAG,IAAR,CAAA;AACA2iB,UAAAA,CAAC,GAAG6M,SAAS,CAAC5M,GAAV,GAAgB4M,SAAS,CAAChM,MAAV,GAAmB,CAAvC,CAAA;AACA,UAAA,MAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;;AACDyL,IAAAA,YAAY,GAAGtX,QAAQ,CAAC9K,YAAT,CAAsBoiB,YAAY,CAACr0B,GAAnC,CAAf,CAAA;AACD,GAAA;;AAED,EAAA,IAAMisB,KAAK,GACTqI,eAAe,IAAItG,4BAA4B,CAACsG,eAAD,EAAkB3M,CAAlB,EAAqBI,CAArB,EAAwBhQ,UAAxB,CADjD,CAAA;;AAEA,EAAI,IAAA,CAACkU,KAAL,EAAY;AACV,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAOA,OAAAA,KAAK,CAAC3E,MAAb,CAAA;AACD,CAAA;AAEM,SAASgO,gBAAT,CAA0Bvd,UAA1B,EAAkD;AAAA,EAAA,IAC/C9X,KAD+C,GACrC8X,UADqC,CAC/C9X,KAD+C,CAAA;AAAA,EAAA,IAE/C8c,QAF+C,GAEvB9c,KAFuB,CAE/C8c,QAF+C;AAAA,MAErC1D,SAFqC,GAEvBpZ,KAFuB,CAErCoZ,SAFqC,CAAA;;AAGvD,EAAI,IAAA,CAACA,SAAL,EAAgB;AACd,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AACD,EAAA,IAAMpR,KAAK,GAAGoR,SAAS,CAACyb,QAAV,CAAmB/X,QAAnB,CAAd,CAAA;AANuD,EAAA,IAO/CgU,SAP+C,GAOjC1X,SAPiC,CAO/C0X,SAP+C,CAAA;AASvD,EAAM/T,IAAAA,KAAK,GAAGqY,gBAAgB,CAACtd,UAAD,EAAa9P,KAAb,EAAoB8oB,SAApB,CAA9B,CAAA;;AACA,EAAI,IAAA,CAAC/T,KAAL,EAAY;AACV,IAAA,OAAO3D,SAAS,CAACkc,mBAAV,CAA8Bxd,UAA9B,CAAP,CAAA;AACD,GAAA;;AAED,EAAMid,IAAAA,aAAa,GAAGtD,2BAA2B,CAACzpB,KAAD,EAAQ+U,KAAR,EAAejF,UAAf,CAAjD,CAAA;AAEA,EAAMkd,IAAAA,QAAQ,GAAG5b,SAAS,CACvB6b,YADc,CACDlY,KAAK,CAAChd,GADL,EACUgd,KAAK,CAACL,WAAN,EAAsBK,GAAAA,KAAK,CAACX,IAA5B,GAAmCW,KAAK,CAACnY,MADnD,CAEdswB,CAAAA,YAFc,EAGdC,CAAAA,UAHc,CAGHJ,aAHG,CAAjB,CAAA;AAKA,EAAA,OAAOC,QAAP,CAAA;AACD;;AC1bD,IAAYO,gBAAZ,CAAA;;WAAYA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,EAAAA;AAAAA,CAAAA,EAAAA,qBAAAA;;AAiCZ,IAAMC,kBAAkB,GAAG,IAAIxuB,OAAJ,EAA3B,CAAA;AACA,IAAMyuB,gBAAgB,GAAG,IAAIzuB,OAAJ,EAAzB,CAAA;;IAEqBogB;;;YAEZ9lB,SAAP,SACEb,MAAAA,CAAAA,KADF,EAEa;AACX,IAAA,IAAI2mB,SAAS,CAACsO,WAAV,CAAsBj1B,KAAtB,CAAJ,EAAkC;AAChC,MAAA,OAAOA,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIF,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAAA,MACoBA,IAAAA,WAAAA,GAAAA,KADpB,CAChBgB,IADgB;AAAA,UAChBA,IADgB,4BACT,EADS,GAAA,WAAA;AAAA,UACL4lB,MADK,GACoB5mB,KADpB,CACL4mB,MADK;AAAA,UACGC,KADH,GACoB7mB,KADpB,CACG6mB,KADH;AAAA,UACUzjB,KADV,GACoBpD,KADpB,CACUoD,KADV,CAAA;AAExB,MAAO,OAAA,IAAIujB,SAAJ,CAAc;AACnB3lB,QAAAA,IAAI,EAAJA,IADmB;AAEnB4lB,QAAAA,MAAM,EAAErL,KAAK,CAAC1a,MAAN,CAAa+lB,MAAb,CAFW;AAGnBC,QAAAA,KAAK,EAAEtL,KAAK,CAAC1a,MAAN,CAAagmB,KAAb,CAHY;AAInBzjB,QAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAU,UAAA9B,IAAI,EAAA;AAAA,UAAA,OAAIX,IAAI,CAACC,MAAL,CAAYU,IAAZ,CAAJ,CAAA;AAAA,SAAd,CAAH,GAA0C,IAAA;AAJnC,OAAd,CAAP,CAAA;AAMD,KAAA;;AAED,IAAA,MAAM,IAAIxB,KAAJ,CACiFC,kFAAAA,GAAAA,KADjF,CAAN,CAAA;AAGD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACSk1B,EAAAA,MAAAA,CAAAA,iBAAP,SAAA,cAAA,CAAsB7Y,QAAtB,EAA0C8Y,SAA1C,EAA+D;AAC7D,IAAA,IAAM5tB,KAAK,GAAG,IAAA,CAAK6sB,QAAL,CAAc/X,QAAd,CAAd,CAAA;AACA,IAAA,IAAM7U,GAAG,GAAG,IAAA,CAAK4tB,MAAL,CAAY/Y,QAAZ,CAAZ,CAAA;;AACA,IAAI,IAAA,CAAC9U,KAAK,CAACyU,WAAN,EAAD,IAAwB,CAACxU,GAAG,CAACwU,WAAJ,EAA7B,EAAgD;AAC9C,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAMqZ,SAAS,GAAG,IAAA,CAAKA,SAAL,CAAehZ,QAAf,CAAlB,CAAA;AACA,IAAIiZ,IAAAA,WAAsB,GAAG,IAA7B,CAAA;;AACA,IAAI,IAAA,CAACH,SAAD,IAAc3tB,GAAG,CAACrD,MAAJ,KAAe,CAAjC,EAAoC;AAClC,MAAMoxB,IAAAA,aAAa,GAAGlZ,QAAQ,CAACxL,eAAT,CAAyBrJ,GAAG,CAAClI,GAA7B,CAAtB,CAAA;;AACA,MAAA,IAAIi2B,aAAJ,EAAmB;AACjBD,QAAAA,WAAW,GAAGA,WAAW,CAACj0B,GAAZ,CACZg0B,SAAS,GAAG,OAAH,GAAa,QADV,EAEZ5Z,SAAS,CAACxa,QAAV,CAAmB;AACjB3B,UAAAA,GAAG,EAAEi2B,aAAa,CAACj2B,GADF;AAEjB6E,UAAAA,MAAM,EAAEoxB,aAAa,CAACpyB,IAAd,CAAmB3C,MAAAA;AAFV,SAAnB,CAFY,CAAd,CAAA;AAOD,OAAA;AACF,KAAA;;AAED,IAAMg1B,IAAAA,eAAe,GAAGnZ,QAAQ,CAACtN,OAAT,CAAiBxH,KAAK,CAACjI,GAAvB,CAAxB,CAAA;;AACA,IAAIk2B,IAAAA,eAAe,IAAIjuB,KAAK,CAACpD,MAAN,KAAiBqxB,eAAe,CAACryB,IAAhB,CAAqB3C,MAA7D,EAAqE;AACnE,MAAMi1B,IAAAA,eAAe,GAAGpZ,QAAQ,CAACrL,WAAT,CAAqBzJ,KAAK,CAACjI,GAA3B,CAAxB,CAAA;;AACA,MAAA,IAAIm2B,eAAJ,EAAqB;AACnBH,QAAAA,WAAW,GAAGA,WAAW,CAACj0B,GAAZ,CACZg0B,SAAS,GAAG,QAAH,GAAc,OADX,EAEZ9Z,KAAK,CAACta,QAAN,CAAe;AAAE3B,UAAAA,GAAG,EAAEm2B,eAAe,CAACn2B,GAAvB;AAA4B6E,UAAAA,MAAM,EAAE,CAAA;AAApC,SAAf,CAFY,CAAd,CAAA;AAID,OAAA;AACF,KAAA;;AACD,IAAA,OAAOmxB,WAAP,CAAA;AACD;;YAEMr0B,WAAP,SAAgBC,QAAAA,CAAAA,IAAhB,EAAqC;AAAA,IAAA,IAC3BF,IAD2B,GACIE,IADJ,CAC3BF,IAD2B;AAAA,QACrB4lB,MADqB,GACI1lB,IADJ,CACrB0lB,MADqB;AAAA,QACbC,KADa,GACI3lB,IADJ,CACb2lB,KADa;AAAA,QACNzjB,KADM,GACIlC,IADJ,CACNkC,KADM,CAAA;AAEnC,IAAOujB,OAAAA,SAAS,CAAC9lB,MAAV,CAAiB;AACtBG,MAAAA,IAAI,EAAJA,IADsB;AAEtB4lB,MAAAA,MAAM,EAAErL,KAAK,CAACta,QAAN,CAAe2lB,MAAf,CAFc;AAGtBC,MAAAA,KAAK,EAAEtL,KAAK,CAACta,QAAN,CAAe4lB,KAAf,CAHe;AAItBzjB,MAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAU,UAAA9B,IAAI,EAAA;AAAA,QAAA,OAAIX,IAAI,CAACK,QAAL,CAAcM,IAAd,CAAJ,CAAA;AAAA,OAAd,CAAH,GAA4C,IAAA;AAJlC,KAAjB,CAAP,CAAA;AAMD;;YAEM0zB,cAAP,SACES,WAAAA,CAAAA,cADF,EAE+B;AAC7B,IAAOA,OAAAA,cAAc,YAAY/O,SAAjC,CAAA;AACD;;YAEMgP,mBAAP,SACED,gBAAAA,CAAAA,cADF,EAE+B;AAC7B,IAAA,OAAO/O,SAAS,CAACsO,WAAV,CAAsBS,cAAtB,CAAP,CAAA;AACD;;AAEME,EAAAA,SAAAA,CAAAA,mBAAP,SAAA,gBAAA,CAAwBvZ,QAAxB,EAA4C1D,SAA5C,EAA4D;AAC1D,IAAA,IAAI,CAACgO,SAAS,CAACsO,WAAV,CAAsBtc,SAAtB,CAAL,EAAuC;AACrC,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AAHyD,IAAA,IAIlDiO,MAJkD,GAIhCjO,SAJgC,CAIlDiO,MAJkD;AAAA,QAI1CC,KAJ0C,GAIhClO,SAJgC,CAI1CkO,KAJ0C,CAAA;AAK1D,IAAMgP,IAAAA,UAAU,GAAGxZ,QAAQ,CAACtN,OAAT,CAAiB6X,MAAM,CAACtnB,GAAxB,CAAnB,CAAA;AACA,IAAMw2B,IAAAA,SAAS,GAAGzZ,QAAQ,CAACtN,OAAT,CAAiB8X,KAAK,CAACvnB,GAAvB,CAAlB,CAAA;;AACA,IAAA,IAAI,CAACu2B,UAAD,IAAe,CAACC,SAApB,EAA+B;AAC7B,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AACD,IAAMC,IAAAA,aAAa,GAChBnP,MAAM,CAAC5K,WAAP,MACC4K,MAAM,CAACziB,MAAP,IAAiB,CADlB,IAECyiB,MAAM,CAACziB,MAAP,IAAiB0xB,UAAU,CAAC1yB,IAAX,CAAgB3C,MAFnC,IAGAomB,MAAM,CAAC3K,WAAP,EAJF,CAAA;AAKA,IAAM+Z,IAAAA,YAAY,GACfnP,KAAK,CAAC7K,WAAN,MACC6K,KAAK,CAAC1iB,MAAN,IAAgB,CADjB,IAEC0iB,KAAK,CAAC1iB,MAAN,IAAgB2xB,SAAS,CAAC3yB,IAAV,CAAe3C,MAFjC,IAGAqmB,KAAK,CAAC5K,WAAN,EAJF,CAAA;AAKA,IAAO8Z,OAAAA,aAAa,IAAIC,YAAxB,CAAA;AACD;;AAEMC,EAAAA,SAAAA,CAAAA,wBAAP,SAAA,qBAAA,CAA6B5Z,QAA7B,EAAiD1D,SAAjD,EAAiE;AAC/D,IAAA,OAAOgO,SAAS,CAACiP,gBAAV,CAA2BvZ,QAA3B,EAAqC1D,SAArC,CAAP,CAAA;AACD;;AAEMud,EAAAA,SAAAA,CAAAA,oBAAP,SAAA,iBAAA,CAAyB7Z,QAAzB,EAA6CC,KAA7C,EAA2E;AACzE,IAAA,IAAIA,KAAK,CAACL,WAAN,EAAJ,EAAyB;AACvB,MAAO0K,OAAAA,SAAS,CAAC9lB,MAAV,CAAiB;AACtB+lB,QAAAA,MAAM,EAAEtK,KAAK,CAACjb,GAAN,CAAU,MAAV,EAAkBqa,SAAS,CAACa,MAA5B,CADc;AAEtBsK,QAAAA,KAAK,EAAEvK,KAAK,CAACjb,GAAN,CAAU,MAAV,EAAkBqa,SAAS,CAACoB,KAA5B,CAAA;AAFe,OAAjB,CAAP,CAAA;AAID,KAAA;;AACD,IAAM3Z,IAAAA,IAAI,GAAGkZ,QAAQ,CAACtN,OAAT,CAAiBuN,KAAK,CAAChd,GAAvB,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC6D,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAVwE,IAYpD2oB,IAAAA,qBAAAA,GAAAA,SAAS,CAAClK,YAAV,CAAuBze,IAAI,CAACA,IAA5B,EAAkCmZ,KAAK,CAACnY,MAAxC,CAZoD;AAAA,QAYlEoD,KAZkE,GAAA,qBAAA,CAAA,CAAA,CAAA;AAAA,QAY3DC,GAZ2D,GAAA,qBAAA,CAAA,CAAA,CAAA,CAAA;;AAazE,IAAOmf,OAAAA,SAAS,CAAC9lB,MAAV,CAAiB;AACtB+lB,MAAAA,MAAM,EAAEtK,KAAK,CAACjb,GAAN,CAAU,QAAV,EAAoBkG,KAApB,CADc;AAEtBsf,MAAAA,KAAK,EAAEvK,KAAK,CAACjb,GAAN,CAAU,QAAV,EAAoBmG,GAApB,CAAA;AAFe,KAAjB,CAAP,CAAA;AAID;;AAEMlG,EAAAA,SAAAA,CAAAA,UAAP,SAAA,OAAA,CAAe60B,aAAf,EAAyC9rB,MAAzC,EAA4D;AAC1D,IACE7I,OAAAA,KAAK,CAAC20B,aAAa,CAACvP,MAAf,EAAuBvc,MAAM,CAACuc,MAA9B,CAAL,IACAplB,KAAK,CAAC20B,aAAa,CAACtP,KAAf,EAAsBxc,MAAM,CAACwc,KAA7B,CAFP,CAAA;AAID;;AAUD,EAAA,SAAA,SAAA,CAAsB7mB,KAAtB,EAA4D;AAAA,IAAA,IAAA,KAAA,CAAA;;AAC1D,IAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA;AAD0D,IAAA,KAAA,CAR5CgB,IAQ4C,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAN5C4lB,MAM4C,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAJ5CC,KAI4C,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAF5CzjB,KAE4C,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAElDpC,IAFkD,GAEZhB,KAFY,CAElDgB,IAFkD;AAAA,QAE5C4lB,MAF4C,GAEZ5mB,KAFY,CAE5C4mB,MAF4C;AAAA,QAEpCC,KAFoC,GAEZ7mB,KAFY,CAEpC6mB,KAFoC;AAAA,QAEZ7mB,YAAAA,GAAAA,KAFY,CAE7BoD,KAF6B;AAAA,QAE7BA,KAF6B,6BAErB,IAFqB,GAAA,YAAA,CAAA;AAG1D,IAAKpC,KAAAA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;AACA,IAAK4lB,KAAAA,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACA,IAAKC,KAAAA,CAAAA,KAAL,GAAaA,KAAb,CAAA;AACA,IAAKzjB,KAAAA,CAAAA,KAAL,GAAaA,KAAb,CAAA;;AACA,IAAA,KAAA,CAAK5D,MAAL,EAAA,CAAA;;AAP0D,IAAA,OAAA,KAAA,CAAA;AAQ3D,GAAA;AAED;AACF;AACA;;;SA6BS4B,QAAP,SAAapB,KAAAA,CAAAA,KAAb,EAAkD;AAChD,IAAA,OAAO,IAAI2mB,SAAJ,CAAA,QAAA,CAAA;AACL3lB,MAAAA,IAAI,EAAE,IAAA,CAAKA,IADN;AAEL4lB,MAAAA,MAAM,EAAE,IAAA,CAAKA,MAFR;AAGLC,MAAAA,KAAK,EAAE,IAAA,CAAKA,KAHP;AAILzjB,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAAA;AAJP,KAAA,EAKFpD,KALE,CAAP,CAAA,CAAA;AAOD;;AAEMqB,EAAAA,MAAAA,CAAAA,MAAP,SAAA,GAAA,CACE/B,GADF,EAEEC,KAFF,EAGE;AAAA,IAAA,IAAA,WAAA,CAAA;;AACA,IAAA,OAAO,KAAK6B,KAAL,EAAA,WAAA,GAAA,EAAA,EAAA,WAAA,CACJ9B,GADI,CAAA,GACEC,KADF,EAAP,WAAA,EAAA,CAAA;AAGD;;SAEO62B,sBAAR,SAA4B/Z,mBAAAA,CAAAA,QAA5B,EAAgD;AAAA,IAAA,IACtCuK,MADsC,GACpB,IADoB,CACtCA,MADsC;AAAA,QAC9BC,KAD8B,GACpB,IADoB,CAC9BA,KAD8B,CAE9C;;AACA,IAAA,IAAID,MAAM,CAACtnB,GAAP,KAAeunB,KAAK,CAACvnB,GAAzB,EAA8B;AAC5B,MAAA,IAAIsnB,MAAM,CAAC3K,WAAP,EAAJ,EAA0B;AACxB,QAAA,OAAO2K,MAAM,CAACjL,IAAP,KAAgBD,SAAS,CAACa,MAAjC,CAAA;AACD,OAAA;;AACD,MAAA,IAAIsK,KAAK,CAAC5K,WAAN,EAAJ,EAAyB;AACvB,QAAA,OAAO4K,KAAK,CAAClL,IAAN,KAAeD,SAAS,CAACoB,KAAhC,CAAA;AACD,OAAA;;AACD,MAAA,OAAO8J,MAAM,CAACziB,MAAP,IAAiB0iB,KAAK,CAAC1iB,MAA9B,CAAA;AACD,KAX6C;;;AAc9C,IAAA,IAAIyiB,MAAM,CAAC3K,WAAP,EAAJ,EAA0B;AACxB,MAAM4Z,IAAAA,UAAU,GAAGxZ,QAAQ,CAACtN,OAAT,CAAiB6X,MAAM,CAACtnB,GAAxB,CAAnB,CAAA;;AACA,MAAA,IAAIu2B,UAAU,IAAA,IAAV,IAAAA,UAAU,CAAEx1B,SAAZ,EAAA,IAA2Bw1B,UAAU,CAAC9mB,OAAX,CAAmB8X,KAAK,CAACvnB,GAAzB,CAA/B,EAA8D;AAC5D,QAAA,OAAOsnB,MAAM,CAACjL,IAAP,KAAgBD,SAAS,CAACa,MAAjC,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,IAAIsK,KAAK,CAAC5K,WAAN,EAAJ,EAAyB;AACvB,MAAM6Z,IAAAA,SAAS,GAAGzZ,QAAQ,CAACtN,OAAT,CAAiB8X,KAAK,CAACvnB,GAAvB,CAAlB,CAAA;;AACA,MAAA,IAAIw2B,SAAS,IAAA,IAAT,IAAAA,SAAS,CAAEz1B,SAAX,EAAA,IAA0By1B,SAAS,CAAC/mB,OAAV,CAAkB6X,MAAM,CAACtnB,GAAzB,CAA9B,EAA6D;AAC3D,QAAA,OAAOunB,KAAK,CAAClL,IAAN,KAAeD,SAAS,CAACoB,KAAhC,CAAA;AACD,OAAA;AACF,KAzB6C;;;AA4B9C,IAAA,IAAMuZ,UAAU,GAAGzP,MAAM,CAACnK,SAAP,CAAiBJ,QAAjB,CAAnB,CAAA;AACA,IAAA,IAAMia,SAAS,GAAGzP,KAAK,CAACpK,SAAN,CAAgBJ,QAAhB,CAAlB,CAAA;AACA,IAAA,OAAO9M,OAAO,CAAC8mB,UAAU,IAAIC,SAAd,IAA2BpsB,IAAI,CAACuB,QAAL,CAAc4qB,UAAd,EAA0BC,SAA1B,CAA5B,CAAd,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSjB,YAAP,SAAiBhZ,SAAAA,CAAAA,QAAjB,EAAqC;AACnC,IAAA,IAAI,CAAC2Y,gBAAgB,CAACvyB,GAAjB,CAAqB,IAArB,CAAL,EAAiC;AAC/BuyB,MAAAA,gBAAgB,CAAC3zB,GAAjB,CAAqB,IAArB,EAA2B,IAAIkF,OAAJ,EAA3B,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,IAAMgwB,4BAA4B,GAAGvB,gBAAgB,CAACjrB,GAAjB,CAAqB,IAArB,CAArC,CAAA;;AACA,IAAA,IAAI,CAACwsB,4BAA4B,CAAC9zB,GAA7B,CAAiC4Z,QAAjC,CAAL,EAAiD;AAC/Cka,MAAAA,4BAA4B,CAACl1B,GAA7B,CAAiCgb,QAAjC,EAA2C,IAAK+Z,CAAAA,mBAAL,CAAyB/Z,QAAzB,CAA3C,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,OAAOka,4BAA4B,CAACxsB,GAA7B,CAAiCsS,QAAjC,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSma,aAAP,SAAkBna,UAAAA,CAAAA,QAAlB,EAAsC;AACpC,IAAA,OAAO,CAAC,IAAA,CAAKgZ,SAAL,CAAehZ,QAAf,CAAR,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACS+X,WAAP,SAAgB/X,QAAAA,CAAAA,QAAhB,EAAoC;AAClC,IAAO,OAAA,IAAA,CAAKgZ,SAAL,CAAehZ,QAAf,IAA2B,IAAKuK,CAAAA,MAAhC,GAAyC,IAAA,CAAKC,KAArD,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSuO,SAAP,SAAc/Y,MAAAA,CAAAA,QAAd,EAAkC;AAChC,IAAO,OAAA,IAAA,CAAKma,UAAL,CAAgBna,QAAhB,IAA4B,IAAKuK,CAAAA,MAAjC,GAA0C,IAAA,CAAKC,KAAtD,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACS4P,EAAAA,MAAAA,CAAAA,WAAP,SAAA,QAAA,CAAgBC,SAAhB,EAA6Cra,QAA7C,EAAiE;AAC/D,IAAIqa,IAAAA,SAAS,KAAK,OAAlB,EAA2B;AACzB,MAAA,OAAO,IAAKtC,CAAAA,QAAL,CAAc/X,QAAd,CAAP,CAAA;AACD,KAFD,MAEO,IAAIqa,SAAS,KAAK,KAAlB,EAAyB;AAC9B,MAAA,OAAO,IAAKtB,CAAAA,MAAL,CAAY/Y,QAAZ,CAAP,CAAA;AACD,KAFM,MAEA;AACL,MAAO,OAAA,IAAA,CAAKqa,SAAL,CAAP,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;;;SACSC,OAAP,SAAYta,IAAAA,CAAAA,QAAZ,EAAgC;AAC9B,IAAO,OAAA;AACL9U,MAAAA,KAAK,EAAE,IAAA,CAAK6sB,QAAL,CAAc/X,QAAd,CADF;AAEL7U,MAAAA,GAAG,EAAE,IAAK4tB,CAAAA,MAAL,CAAY/Y,QAAZ,CAAA;AAFA,KAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;;;SACSqS,sBAAP,SAA2BrS,mBAAAA,CAAAA,QAA3B,EAA+C;AAAA,IAAA,IAAA,UAAA,GACxB,IAAKsa,CAAAA,IAAL,CAAUta,QAAV,CADwB;AAAA,QACvC9U,KADuC,cACvCA,KADuC;AAAA,QAChCC,GADgC,cAChCA,GADgC,CAAA;;AAE7C,IAAI,IAAA,IAAA,CAAKinB,WAAT,EAAsB;AACpB,MAAA,IAAMnS,MAAK,GAAG/U,KAAK,CAAC6U,kBAAN,CAAyBC,QAAzB,CAAd,CAAA;;AACA,MAAO,OAAA;AAAEuK,QAAAA,MAAM,EAAEtK,MAAV;AAAiBuK,QAAAA,KAAK,EAAEvK,MAAxB;AAA+B/U,QAAAA,KAAK,EAAE+U,MAAtC;AAA6C9U,QAAAA,GAAG,EAAE8U,MAAAA;AAAlD,OAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAI/U,KAAK,CAAC0U,WAAN,EAAJ,EAAyB;AACvB,MAAA,IAAI1U,KAAK,CAACoU,IAAN,KAAeD,SAAS,CAACa,MAA7B,EAAqC;AACnChV,QAAAA,KAAK,GAAGA,KAAK,CAAC6U,kBAAN,CAAyBC,QAAzB,CAAR,CAAA;AACD,OAFD,MAEO;AACL,QAAA,IAAMua,SAAS,GAAGva,QAAQ,CAACrL,WAAT,CAAqBzJ,KAAK,CAACjI,GAA3B,CAAA,IAAmC+c,QAAQ,CAAC/b,YAAT,EAArD,CAAA;AACAiH,QAAAA,KAAK,GAAGkU,SAAS,CAAC5a,MAAV,CAAiB;AACvBvB,UAAAA,GAAG,EAAEs3B,SAAS,CAACt3B,GADQ;AAEvB6E,UAAAA,MAAM,EAAE,CAAA;AAFe,SAAjB,CAAR,CAAA;AAID,OAAA;AACF,KAAA;;AACD,IAAA,IAAIqD,GAAG,CAACyU,WAAJ,EAAJ,EAAuB;AACrB,MAAA,IAAIzU,GAAG,CAACmU,IAAJ,KAAaD,SAAS,CAACoB,KAA3B,EAAkC;AAChCtV,QAAAA,GAAG,GAAGA,GAAG,CAAC4U,kBAAJ,CAAuBC,QAAvB,CAAN,CAAA;AACD,OAFD,MAEO;AACL,QAAA,IAAMwa,OAAO,GAAGxa,QAAQ,CAACxL,eAAT,CAAyBrJ,GAAG,CAAClI,GAA7B,CAAA,IAAqC+c,QAAQ,CAAC5b,WAAT,EAArD,CAAA;AACA+G,QAAAA,GAAG,GAAGiU,SAAS,CAAC5a,MAAV,CAAiB;AACrBvB,UAAAA,GAAG,EAAEu3B,OAAO,CAACv3B,GADQ;AAErB6E,UAAAA,MAAM,EAAE0yB,OAAO,CAAC1zB,IAAR,CAAa3C,MAAAA;AAFA,SAAjB,CAAN,CAAA;AAID,OAAA;AACF,KAAA;;AACD,IAAA,IAAM60B,SAAS,GAAG,IAAA,CAAKA,SAAL,CAAehZ,QAAf,CAAlB,CAAA;AACA,IAAA,IAAMuK,MAAM,GAAGyO,SAAS,GAAG9tB,KAAH,GAAWC,GAAnC,CAAA;AACA,IAAA,IAAMqf,KAAK,GAAGwO,SAAS,GAAG7tB,GAAH,GAASD,KAAhC,CAAA;AACA,IAAO,OAAA;AAAEqf,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,KAAK,EAALA,KAAV;AAAiBtf,MAAAA,KAAK,EAALA,KAAjB;AAAwBC,MAAAA,GAAG,EAAHA,GAAAA;AAAxB,KAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;SACSsvB,iBAAP,SAAsBza,cAAAA,CAAAA,QAAtB,EAA0C;AAAA,IAAA,IAAA,qBAAA,GACjB,IAAKqS,CAAAA,mBAAL,CAAyBrS,QAAzB,CADiB;AAAA,QAChC9U,KADgC,yBAChCA,KADgC;AAAA,QACzBC,GADyB,yBACzBA,GADyB,CAAA;;AAExC,IAAMmM,IAAAA,KAAK,GAAG0I,QAAQ,CAAChN,OAAT,CAAiB9H,KAAK,CAACjI,GAAvB,CAAd,CAAA;AACA,IAAMsU,IAAAA,KAAK,GAAGyI,QAAQ,CAAChN,OAAT,CAAiB7H,GAAG,CAAClI,GAArB,CAAd,CAAA;;AACA,IAAA,IAAI,CAACqU,KAAD,IAAU,CAACC,KAAf,EAAsB;AACpB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAMlV,IAAI,GAAG2d,QAAQ,CAACnN,aAAT,CAAuBhF,IAAI,CAACqC,MAAL,CAAYoH,KAAZ,EAAmBC,KAAnB,CAAvB,CAAb,CAAA;;AACA,IAAA,IAAIlV,IAAJ,IAAIA,IAAAA,IAAAA,IAAI,CAAE0B,MAAN,EAAJ,EAAoB;AAClB,MAAA,OAAOic,QAAQ,CAAC/K,eAAT,CAAyB5S,IAAI,CAACY,GAA9B,CAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAOZ,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AASE;AACF;AACA;SACSg2B,aAAP,SAAkBrE,UAAAA,CAAAA,SAAlB,EAAsC;AACpC,IAAA,IAAI,KAAKrvB,IAAL,CAAUqvB,SAAV,KAAwBA,SAA5B,EAAuC;AACrC,MAAO,OAAA,IAAA,CAAKjvB,KAAL,CAAW;AAChBJ,QAAAA,IAAI,EACC,QAAA,CAAA,EAAA,EAAA,IAAA,CAAKA,IADN,EAAA;AAEFqvB,UAAAA,SAAS,EAATA,SAAAA;AAFE,SAAA,CAAA;AADY,OAAX,CAAP,CAAA;AAMD,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACS0G,YAAP,SAAiB1a,SAAAA,CAAAA,QAAjB,EAAqC;AACnC,IAAA,IAAI,IAAKma,CAAAA,UAAL,CAAgBna,QAAhB,CAAJ,EAA+B;AAC7B,MAAO,OAAA,IAAA,CAAKjb,KAAL,CAAW;AAChBylB,QAAAA,KAAK,EAAE,IAAKuO,CAAAA,MAAL,CAAY/Y,QAAZ,CAAA;AADS,OAAX,CAAP,CAAA;AAGD,KAAA;;AACD,IAAO,OAAA,IAAA,CAAKjb,KAAL,CAAW;AAChBwlB,MAAAA,MAAM,EAAE,IAAKwO,CAAAA,MAAL,CAAY/Y,QAAZ,CAAA;AADQ,KAAX,CAAP,CAAA;AAGD;;AAEM2a,EAAAA,MAAAA,CAAAA,yBAAP,SAAA,sBAAA,CAA8Bt4B,IAA9B,EAA0C2Y,UAA1C,EAAkE;AAAA,IAAA,IACxDgF,QADwD,GAC3ChF,UAAU,CAAC9X,KADgC,CACxD8c,QADwD,CAAA;;AAEhE,IAAA,IAAI,IAAKgZ,CAAAA,SAAL,CAAehZ,QAAf,CAAJ,EAA8B;AAC5B,MAAA,OAAO,KAAK4a,uBAAL,CAA6Bv4B,IAA7B,EAAmC2Y,UAAnC,CAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,OAAO,KAAK6f,sBAAL,CAA4Bx4B,IAA5B,EAAkC2Y,UAAlC,CAAP,CAAA;AACD,KAAA;AACF;;AAEM8f,EAAAA,MAAAA,CAAAA,uBAAP,SAAA,oBAAA,CAA4Bz4B,IAA5B,EAAwC2Y,UAAxC,EAAgE;AAAA,IAAA,IACtDgF,QADsD,GACzChF,UAAU,CAAC9X,KAD8B,CACtD8c,QADsD,CAAA;;AAE9D,IAAA,IAAI,IAAKgZ,CAAAA,SAAL,CAAehZ,QAAf,CAAJ,EAA8B;AAC5B,MAAA,OAAO,KAAK+a,qBAAL,CAA2B14B,IAA3B,EAAiC2Y,UAAjC,CAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,OAAO,KAAKggB,oBAAL,CAA0B34B,IAA1B,EAAgC2Y,UAAhC,CAAP,CAAA;AACD,KAAA;AACF;;AAEMigB,EAAAA,MAAAA,CAAAA,uBAAP,SAAA,oBAAA,CAA4B54B,IAA5B,EAAwC2Y,UAAxC,EAAgE;AAAA,IAAA,IACtDgF,QADsD,GACzChF,UAAU,CAAC9X,KAD8B,CACtD8c,QADsD,CAAA;;AAE9D,IAAA,IAAI,IAAKgZ,CAAAA,SAAL,CAAehZ,QAAf,CAAJ,EAA8B;AAC5B,MAAA,OAAO,KAAK6a,sBAAL,CAA4Bx4B,IAA5B,EAAkC2Y,UAAlC,CAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,OAAO,KAAK4f,uBAAL,CAA6Bv4B,IAA7B,EAAmC2Y,UAAnC,CAAP,CAAA;AACD,KAAA;AACF;;AAEMkgB,EAAAA,MAAAA,CAAAA,qBAAP,SAAA,kBAAA,CAA0B74B,IAA1B,EAAsC2Y,UAAtC,EAA8D;AAAA,IAAA,IACpDgF,QADoD,GACvChF,UAAU,CAAC9X,KAD4B,CACpD8c,QADoD,CAAA;;AAE5D,IAAA,IAAI,IAAKgZ,CAAAA,SAAL,CAAehZ,QAAf,CAAJ,EAA8B;AAC5B,MAAA,OAAO,KAAKgb,oBAAL,CAA0B34B,IAA1B,EAAgC2Y,UAAhC,CAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,OAAO,KAAK+f,qBAAL,CAA2B14B,IAA3B,EAAiC2Y,UAAjC,CAAP,CAAA;AACD,KAAA;AACF;;AAEM4f,EAAAA,MAAAA,CAAAA,0BAAP,SAAA,uBAAA,CAA+Bv4B,IAA/B,EAA2C2Y,UAA3C,EAAmE;AACjE,IAAA,OAAO,IAAKhW,CAAAA,GAAL,CAAS,QAAT,EAAmBgW,UAAU,CAACoa,KAAX,CAAiBuB,kBAAjB,EAAqCt0B,IAArC,CAAnB,CAAP,CAAA;AACD;;AAEM04B,EAAAA,MAAAA,CAAAA,wBAAP,SAAA,qBAAA,CAA6B14B,IAA7B,EAAyC2Y,UAAzC,EAAiE;AAC/D,IAAA,OAAO,IAAKhW,CAAAA,GAAL,CAAS,QAAT,EAAmBgW,UAAU,CAACoa,KAAX,CAAiBwB,gBAAjB,EAAmCv0B,IAAnC,CAAnB,CAAP,CAAA;AACD;;AAEMw4B,EAAAA,MAAAA,CAAAA,yBAAP,SAAA,sBAAA,CAA8Bx4B,IAA9B,EAA0C2Y,UAA1C,EAAkE;AAChE,IAAA,OAAO,IAAKhW,CAAAA,GAAL,CAAS,OAAT,EAAkBgW,UAAU,CAACoa,KAAX,CAAiBuB,kBAAjB,EAAqCt0B,IAArC,CAAlB,CAAP,CAAA;AACD;;AAEM24B,EAAAA,MAAAA,CAAAA,uBAAP,SAAA,oBAAA,CAA4B34B,IAA5B,EAAwC2Y,UAAxC,EAAgE;AAC9D,IAAA,OAAO,IAAKhW,CAAAA,GAAL,CAAS,OAAT,EAAkBgW,UAAU,CAACoa,KAAX,CAAiBwB,gBAAjB,EAAmCv0B,IAAnC,CAAlB,CAAP,CAAA;AACD;;AAEM81B,EAAAA,MAAAA,CAAAA,eAAP,SAAA,YAAA,CAAoBl1B,GAApB,EAAiCkO,KAAjC,EAA4D;AAC1D,IAAA,OAAO,IAAKnM,CAAAA,GAAL,CAAS,QAAT,EAAmBka,KAAK,CAACC,gBAAN,CAAuBlc,GAAvB,EAA4BkO,KAA5B,CAAnB,CAAP,CAAA;AACD;;AAEMgqB,EAAAA,MAAAA,CAAAA,cAAP,SAAA,WAAA,CAAmBl4B,GAAnB,EAAgCkO,KAAhC,EAA2D;AACzD,IAAA,OAAO,IAAKnM,CAAAA,GAAL,CAAS,OAAT,EAAkBka,KAAK,CAACC,gBAAN,CAAuBlc,GAAvB,EAA4BkO,KAA5B,CAAlB,CAAP,CAAA;AACD;;AAEMoO,EAAAA,MAAAA,CAAAA,oBAAP,SAAA,iBAAA,CAAyBld,IAAzB,EAAqC2Y,UAArC,EAA6D;AAC3D,IAAMuP,IAAAA,MAAM,GAAGvP,UAAU,CAACoa,KAAX,CAAiBuB,kBAAjB,EAAqCt0B,IAArC,CAAf,CAAA;AACA,IAAMmoB,IAAAA,KAAK,GAAGD,MAAd,CAAA;AACA,IAAO,OAAA,IAAA,CAAKxlB,KAAL,CAAW;AAAEwlB,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,KAAK,EAALA,KAAAA;AAAV,KAAX,CAAP,CAAA;AACD;;AAEM/K,EAAAA,MAAAA,CAAAA,kBAAP,SAAA,eAAA,CAAuBpd,IAAvB,EAAmC2Y,UAAnC,EAA2D;AACzD,IAAMuP,IAAAA,MAAM,GAAGvP,UAAU,CAACoa,KAAX,CAAiBwB,gBAAjB,EAAmCv0B,IAAnC,CAAf,CAAA;AACA,IAAMmoB,IAAAA,KAAK,GAAGD,MAAd,CAAA;AACA,IAAO,OAAA,IAAA,CAAKxlB,KAAL,CAAW;AAAEwlB,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,KAAK,EAALA,KAAAA;AAAV,KAAX,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACS4Q,EAAAA,MAAAA,CAAAA,OAAP,SAAc,IAAA,GAAA;AACZ,IAAO,OAAA,IAAA,CAAKr2B,KAAL,CAAW;AAChBwlB,MAAAA,MAAM,EAAE,IAAA,CAAKC,KADG;AAEhBA,MAAAA,KAAK,EAAE,IAAKD,CAAAA,MAAAA;AAFI,KAAX,CAAP,CAAA;AAID;;AAEM8Q,EAAAA,MAAAA,CAAAA,qBAAP,SAAA,kBAAA,CAA0B1sB,CAA1B,EAAiC2sB,KAAjC,EAA4D;AAAA,IAAA,IAAlC3sB,CAAkC,KAAA,KAAA,CAAA,EAAA;AAAlCA,MAAAA,CAAkC,GAA9B,CAA8B,CAAA;AAAA,KAAA;;AAC1D,IAAO2sB,OAAAA,KAAK,GACRA,KAAK,CAAC,QAAD,EAAW3sB,CAAX,CAAL,CAAmB,IAAnB,CADQ,GAER,KAAK3J,GAAL,CAAS,QAAT,EAAmB,IAAKulB,CAAAA,MAAL,CAAY1K,YAAZ,CAAyBlR,CAAzB,CAAnB,CAFJ,CAAA;AAGD;;AAEM4sB,EAAAA,MAAAA,CAAAA,oBAAP,SAAA,iBAAA,CAAyB5sB,CAAzB,EAAgC2sB,KAAhC,EAA2D;AAAA,IAAA,IAAlC3sB,CAAkC,KAAA,KAAA,CAAA,EAAA;AAAlCA,MAAAA,CAAkC,GAA9B,CAA8B,CAAA;AAAA,KAAA;;AACzD,IAAO2sB,OAAAA,KAAK,GACRA,KAAK,CAAC,QAAD,EAAW3sB,CAAX,CAAL,CAAmB,IAAnB,CADQ,GAER,KAAK3J,GAAL,CAAS,QAAT,EAAmB,IAAKulB,CAAAA,MAAL,CAAYzK,WAAZ,CAAwBnR,CAAxB,CAAnB,CAFJ,CAAA;AAGD;;AAEM6sB,EAAAA,MAAAA,CAAAA,oBAAP,SAAA,iBAAA,CAAyB7sB,CAAzB,EAAgC2sB,KAAhC,EAA2D;AAAA,IAAA,IAAlC3sB,CAAkC,KAAA,KAAA,CAAA,EAAA;AAAlCA,MAAAA,CAAkC,GAA9B,CAA8B,CAAA;AAAA,KAAA;;AACzD,IAAO2sB,OAAAA,KAAK,GACRA,KAAK,CAAC,OAAD,EAAU3sB,CAAV,CAAL,CAAkB,IAAlB,CADQ,GAER,KAAK3J,GAAL,CAAS,OAAT,EAAkB,IAAKwlB,CAAAA,KAAL,CAAW3K,YAAX,CAAwBlR,CAAxB,CAAlB,CAFJ,CAAA;AAGD;;AAEM8sB,EAAAA,MAAAA,CAAAA,mBAAP,SAAA,gBAAA,CAAwB9sB,CAAxB,EAA+B2sB,KAA/B,EAA0D;AAAA,IAAA,IAAlC3sB,CAAkC,KAAA,KAAA,CAAA,EAAA;AAAlCA,MAAAA,CAAkC,GAA9B,CAA8B,CAAA;AAAA,KAAA;;AACxD,IAAO2sB,OAAAA,KAAK,GACRA,KAAK,CAAC,OAAD,EAAU3sB,CAAV,CAAL,CAAkB,IAAlB,CADQ,GAER,KAAK3J,GAAL,CAAS,OAAT,EAAkB,IAAKwlB,CAAAA,KAAL,CAAW1K,WAAX,CAAuBnR,CAAvB,CAAlB,CAFJ,CAAA;AAGD;;AAEM+sB,EAAAA,MAAAA,CAAAA,cAAP,SAAqB,WAAA,GAAA;AACnB,IAAA,OAAO,KAAK12B,GAAL,CAAS,QAAT,EAAmB,IAAA,CAAKwlB,KAAxB,CAAP,CAAA;AACD;;AAEM4N,EAAAA,MAAAA,CAAAA,eAAP,SAAsB,YAAA,GAAA;AACpB,IAAA,OAAO,KAAKpzB,GAAL,CAAS,OAAT,EAAkB,IAAA,CAAKulB,MAAvB,CAAP,CAAA;AACD;;SAEMoR,cAAP,SAAmB3b,WAAAA,CAAAA,QAAnB,EAAuC;AACrC,IAAA,IAAM9U,KAAK,GAAG,IAAA,CAAK6sB,QAAL,CAAc/X,QAAd,CAAd,CAAA;AACA,IAAO,OAAA,IAAA,CAAKjb,KAAL,CAAW;AAChBwlB,MAAAA,MAAM,EAAErf,KADQ;AAEhBsf,MAAAA,KAAK,EAAEtf,KAAAA;AAFS,KAAX,CAAP,CAAA;AAID;;AAEM0wB,EAAAA,MAAAA,CAAAA,oBAAP,SAAA,iBAAA,CAAyBv5B,IAAzB,EAAqC2Y,UAArC,EAA6D;AAC3D,IAAA,OAAO,IAAK4f,CAAAA,uBAAL,CAA6Bv4B,IAA7B,EAAmC2Y,UAAnC,CAA+CggB,CAAAA,oBAA/C,CACL34B,IADK,EAEL2Y,UAFK,CAAP,CAAA;AAID;;AAEM8E,EAAAA,MAAAA,CAAAA,cAAP,SAAA,WAAA,CAAmBnR,CAAnB,EAA0B2sB,KAA1B,EAAqD;AAAA,IAAA,IAAlC3sB,CAAkC,KAAA,KAAA,CAAA,EAAA;AAAlCA,MAAAA,CAAkC,GAA9B,CAA8B,CAAA;AAAA,KAAA;;AACnD,IAAI,IAAA,CAAC2sB,KAAL,EAAY;AACV,MAAA,OAAO,IAAKO,CAAAA,YAAL,CAAkB,UAAC5b,KAAD,EAAkC;AACzD,QAAOA,OAAAA,KAAK,CAACN,WAAN,EAAsBM,GAAAA,KAAK,CAACH,WAAN,CAAkBnR,CAAlB,CAAtB,GAA6CsR,KAApD,CAAA;AACD,OAFM,CAAP,CAAA;AAGD,KAAA;;AACD,IAAA,OAAO,IAAKsb,CAAAA,iBAAL,CAAuB5sB,CAAvB,EAA0B2sB,KAA1B,CAAiCG,CAAAA,gBAAjC,CAAkD9sB,CAAlD,EAAqD2sB,KAArD,CAAP,CAAA;AACD;;AAEMQ,EAAAA,MAAAA,CAAAA,oBAAP,SAAA,iBAAA,CAAyB9b,QAAzB,EAA6CrR,CAA7C,EAAwD;AACtD,IAAA,IAAI,IAAKqqB,CAAAA,SAAL,CAAehZ,QAAf,CAAJ,EAA8B;AAC5B,MAAA,OAAO,IAAKqb,CAAAA,kBAAL,CAAwB1sB,CAAxB,CAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAK6sB,CAAAA,iBAAL,CAAuB7sB,CAAvB,CAAP,CAAA;AACD;;AAEMotB,EAAAA,MAAAA,CAAAA,mBAAP,SAAA,gBAAA,CAAwB/b,QAAxB,EAA4CrR,CAA5C,EAAuD;AACrD,IAAA,OAAO,KAAKmtB,iBAAL,CAAuB9b,QAAvB,EAAiC,CAACrR,CAAlC,CAAP,CAAA;AACD;;AAEMqtB,EAAAA,MAAAA,CAAAA,kBAAP,SAAA,eAAA,CAAuBhc,QAAvB,EAA2CrR,CAA3C,EAAsD;AACpD,IAAA,IAAI,IAAKqqB,CAAAA,SAAL,CAAehZ,QAAf,CAAJ,EAA8B;AAC5B,MAAA,OAAO,IAAKwb,CAAAA,iBAAL,CAAuB7sB,CAAvB,CAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,IAAK0sB,CAAAA,kBAAL,CAAwB1sB,CAAxB,CAAP,CAAA;AACD;;AAEMstB,EAAAA,MAAAA,CAAAA,iBAAP,SAAA,cAAA,CAAsBjc,QAAtB,EAA0CrR,CAA1C,EAAqD;AACnD,IAAA,OAAO,KAAKqtB,eAAL,CAAqBhc,QAArB,EAA+B,CAACrR,CAAhC,CAAP,CAAA;AACD;;AAEMkR,EAAAA,MAAAA,CAAAA,eAAP,SAAA,YAAA,CAAoBlR,CAApB,EAA2B2sB,KAA3B,EAAsD;AAAA,IAAA,IAAlC3sB,CAAkC,KAAA,KAAA,CAAA,EAAA;AAAlCA,MAAAA,CAAkC,GAA9B,CAA8B,CAAA;AAAA,KAAA;;AACpD,IAAI,IAAA,CAAC2sB,KAAL,EAAY;AACV,MAAA,OAAO,IAAKO,CAAAA,YAAL,CAAkB,UAAC5b,KAAD,EAAkC;AACzD,QAAOA,OAAAA,KAAK,CAACN,WAAN,EAAsBM,GAAAA,KAAK,CAACJ,YAAN,CAAmBlR,CAAnB,CAAtB,GAA8CsR,KAArD,CAAA;AACD,OAFM,CAAP,CAAA;AAGD,KAAA;;AACD,IAAA,OAAO,IAAKob,CAAAA,kBAAL,CAAwB1sB,CAAxB,EAA2B2sB,KAA3B,CAAkCE,CAAAA,iBAAlC,CAAoD7sB,CAApD,EAAuD2sB,KAAvD,CAAP,CAAA;AACD;;SAEMY,OAAP,SAAYZ,IAAAA,CAAAA,KAAZ,EAA0B;AACxB,IAAOA,OAAAA,KAAK,CAAC,IAAD,CAAZ,CAAA;AACD;;SAEMtD,wBAAP,SAA6Bhd,qBAAAA,CAAAA,UAA7B,EAAqD;AACnD,IAAO,OAAA,IAAA,CAAKuE,iBAAL,CAAuBvE,UAAU,CAAC9X,KAAX,CAAiB8c,QAAxC,EAAkDhF,UAAlD,CAAP,CAAA;AACD;;SAEMwd,sBAAP,SAA2Bxd,mBAAAA,CAAAA,UAA3B,EAAmD;AACjD,IAAO,OAAA,IAAA,CAAKyE,eAAL,CAAqBzE,UAAU,CAAC9X,KAAX,CAAiB8c,QAAtC,EAAgDhF,UAAhD,CAAP,CAAA;AACD;;SAEMmhB,qBAAP,4BACEnhB,UADF,EAEEqf,SAFF,EAGE/a,IAHF,EAIEja,KAJF,EAKE;AAAA,IAAA,IACQ2a,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAAA;AAEA,IAAA,IAAMoc,KAAK,GAAG/B,SAAS,CAACz0B,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAA,CAAsBy2B,WAAtB,EAAsChC,GAAAA,SAAS,CAACz0B,KAAV,CAAgB,CAAhB,CAApD,CAAA;AACA,IAAA,IAAM02B,IAAI,GAAGhd,IAAI,CAAC1Z,KAAL,CAAW,CAAX,EAAc,CAAd,CAAA,CAAiBy2B,WAAjB,EAAiC/c,GAAAA,IAAI,CAAC1Z,KAAL,CAAW,CAAX,CAA9C,CAAA;AACA,IAAA,IAAMhD,MAAM,GAAGyC,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAA,CAAkBy2B,WAAlB,EAAkCh3B,GAAAA,KAAK,CAACO,KAAN,CAAY,CAAZ,CAAjD,CAAA;AACA,IAAA,IAAM6L,MAAM,GAAA,MAAA,GAAU2qB,KAAV,GAAA,IAAA,GAAoBE,IAApB,GAAZ,QAAA,CAAA;AACA,IAAM5pB,IAAAA,OAAO,GAAGrN,KAAK,KAAK,MAAV,GAAmB,SAAnB,kBAA4CzC,MAA5D,CAAA;AACA,IAAMsM,IAAAA,CAAC,GAAG,IAAKkrB,CAAAA,QAAL,CAAcC,SAAd,EAAyBra,QAAzB,CAAV,CAAA;AACA,IAAM3d,IAAAA,IAAI,GAAG6M,CAAC,CAACyQ,WAAF,EAAkBK,GAAAA,QAAQ,CAACtN,OAAD,CAAR,CAAkBxD,CAAC,CAACjM,GAApB,CAAlB,GAA6C+c,QAAQ,CAACtN,OAAT,CAAiBxD,CAAC,CAACjM,GAAnB,CAA1D,CAAA;;AACA,IAAI,IAAA,CAACZ,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAMk6B,IAAAA,YAAY,GAAG,IAAK9qB,CAAAA,MAAL,EAAapP,IAAb,EAAmB2Y,UAAnB,CAArB,CAAA;AACA,IAAA,OAAOuhB,YAAP,CAAA;AACD;;SAEMC,yBAAP,SACExhB,sBAAAA,CAAAA,UADF,EAEEqf,SAFF,EAGE/a,IAHF,EAIEmd,IAJF,EAKEp3B,KALF,EAME;AAAA,IAAA,IACQ2a,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAAA;AAEA,IAAA,IAAMoc,KAAK,GAAG/B,SAAS,CAACz0B,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAA,CAAsBy2B,WAAtB,EAAsChC,GAAAA,SAAS,CAACz0B,KAAV,CAAgB,CAAhB,CAApD,CAAA;AACA,IAAA,IAAM02B,IAAI,GAAGhd,IAAI,CAAC1Z,KAAL,CAAW,CAAX,EAAc,CAAd,CAAA,CAAiBy2B,WAAjB,EAAiC/c,GAAAA,IAAI,CAAC1Z,KAAL,CAAW,CAAX,CAA9C,CAAA;AACA,IAAA,IAAM82B,IAAI,GAAGD,IAAI,CAAC72B,KAAL,CAAW,CAAX,EAAc,CAAd,CAAA,CAAiBy2B,WAAjB,EAAiCI,GAAAA,IAAI,CAAC72B,KAAL,CAAW,CAAX,CAA9C,CAAA;AACA,IAAA,IAAM+2B,KAAK,GAAGt3B,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAA,CAAkBy2B,WAAlB,EAAkCh3B,GAAAA,KAAK,CAACO,KAAN,CAAY,CAAZ,CAAhD,CAAA;AACA,IAAA,IAAM6L,MAAM,GAAA,MAAA,GAAU2qB,KAAV,GAAA,IAAA,GAAoBE,IAApB,GAAZ,QAAA,CAAA;AACA,IAAM5pB,IAAAA,OAAO,GAAGrN,KAAK,KAAK,MAAV,GAAmB,SAAnB,kBAA4Cs3B,KAA5D,CAAA;AACA,IAAA,IAAMC,gBAAgB,GAAA,KAAA,GAASF,IAAT,GAAgBC,KAAtC,CAAA;AACA,IAAMztB,IAAAA,CAAC,GAAG,IAAKkrB,CAAAA,QAAL,CAAcC,SAAd,EAAyBra,QAAzB,CAAV,CAAA;AAEA,IAAM3d,IAAAA,IAAI,GAAG2d,QAAQ,CAACtN,OAAD,CAAR,CAAkBxD,CAAC,CAACjM,GAApB,CAAb,CAAA;;AACA,IAAI,IAAA,CAACZ,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAM2L,IAAAA,MAAM,GAAGgS,QAAQ,CAAC4c,gBAAD,CAAR,CAA2Bv6B,IAAI,CAACY,GAAhC,CAAf,CAAA;;AACA,IAAI,IAAA,CAAC+K,MAAL,EAAa;AACX,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAMuuB,IAAAA,YAAY,GAAG,IAAK9qB,CAAAA,MAAL,EAAazD,MAAb,EAAqBgN,UAArB,CAArB,CAAA;AACA,IAAA,OAAOuhB,YAAP,CAAA;AACD;;SAEMV,eAAP,SACEgB,YAAAA,CAAAA,OADF,EAEE;AAAA,IAAA,IACMtS,MADN,GACwB,IADxB,CACMA,MADN;AAAA,QACcC,KADd,GACwB,IADxB,CACcA,KADd,CAAA;AAEAD,IAAAA,MAAM,GAAGsS,OAAO,CAACtS,MAAD,CAAhB,CAAA;AACAC,IAAAA,KAAK,GAAGqS,OAAO,CAACrS,KAAD,CAAf,CAAA;AACA,IAAO,OAAA,IAAA,CAAKzlB,KAAL,CAAW;AAAEwlB,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,KAAK,EAALA,KAAAA;AAAV,KAAX,CAAP,CAAA;AACD;;SAEMplB,SAAP,SAAcqF,MAAAA,CAAAA,OAAd,EAA0C;AACxC,IAAO,OAAA;AACLpF,MAAAA,KAAK,EAAE,WADF;AAELklB,MAAAA,MAAM,EAAE,IAAKA,CAAAA,MAAL,CAAYnlB,MAAZ,CAAmBqF,OAAnB,CAFH;AAGL+f,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAL,CAAWplB,MAAX,CAAkBqF,OAAlB,CAHF;AAIL1D,MAAAA,KAAK,EAAE,IAAA,CAAKA,KAAL,GAAa,IAAKA,CAAAA,KAAL,CAAWC,GAAX,CAAe,UAAA4B,CAAC,EAAA;AAAA,QAAIA,OAAAA,CAAC,CAACxD,MAAF,EAAJ,CAAA;AAAA,OAAhB,CAAb,GAA+C,IAAA;AAJjD,KAAP,CAAA;AAMD;;;;AAhewB,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AACvB,MAAA,IAAI,CAACszB,kBAAkB,CAACtyB,GAAnB,CAAuB,IAAvB,CAAL,EAAmC;AAAA,QAAA,IACzBmkB,MADyB,GACP,IADO,CACzBA,MADyB;AAAA,YACjBC,KADiB,GACP,IADO,CACjBA,KADiB,CAAA;AAEjCkO,QAAAA,kBAAkB,CAAC1zB,GAAnB,CAAuB,IAAvB,EAA6BG,KAAK,CAAColB,MAAD,EAASC,KAAT,CAAlC,CAAA,CAAA;AACD,OAAA;;AACD,MAAA,OAAOkO,kBAAkB,CAAChrB,GAAnB,CAAuB,IAAvB,CAAP,CAAA;AACD,KAAA;AAED;AACF;AACA;;;;AAC0B,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AACtB,MAAO,OAAA,CAAC,KAAK0kB,WAAb,CAAA;AACD,KAAA;;;AAEoB,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AACnB,MAAMnpB,IAAAA,MAAM,GAAM,IAAA,CAAKshB,MAAL,CAAYuS,OAAlB,GAA6B,GAAA,GAAA,IAAA,CAAKtS,KAAL,CAAWsS,OAApD,CAAA;;AACA,MAAI,IAAA;AACF,QAAU7zB,OAAAA,MAAV,SAAoB8zB,IAAI,CAACC,SAAL,CAAe,IAAA,CAAKr4B,IAApB,CAApB,CAAA;AACD,OAFD,CAEE,OAAO4qB,KAAP,EAAc;AACd,QAAA,OAAOtmB,MAAP,CAAA;AACD,OAAA;AACF,KAAA;;;AAEyB,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AACxB,MAAU,OAAA,IAAA,CAAKshB,MAAL,CAAYuS,OAAtB,SAAiC,IAAKtS,CAAAA,KAAL,CAAWsS,OAA5C,CAAA;AACD,KAAA;;;AA0KsB,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AACrB,MAAA,OAAO5pB,OAAO,CAAC,IAAA,CAAKvO,IAAL,CAAUqvB,SAAX,CAAd,CAAA;AACD,KAAA;;;AAE8B,IAAA,GAAA,EAAA,SAAA,GAAA,GAAA;AAC7B,MAAA,OAAO,KAAK5B,WAAL,IAAoB,KAAK7H,MAAL,CAAY3K,WAAZ,EAA3B,CAAA;AACD,KAAA;;;;EA5WoCxc;;;;;;;;IC7ClB65B;;;WACZz4B,SAAP,SAAcb,MAAAA,CAAAA,KAAd,EAAmE;AAAA,IAAA,IAArDA,KAAqD,KAAA,KAAA,CAAA,EAAA;AAArDA,MAAAA,KAAqD,GAAd,EAAc,CAAA;AAAA,KAAA;;AACjE,IAAA,IAAIs5B,QAAQ,CAACC,UAAT,CAAoBv5B,KAApB,CAAJ,EAAgC;AAC9B,MAAA,OAAOA,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIF,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAAA,MAAA,IAAA,MAAA,GAKpBA,KALoB;AAAA,UAAA,UAAA,GAAA,MAAA,CAEtBV,GAFsB;AAAA,UAEtBA,GAFsB,GAAA,UAAA,KAAA,KAAA,CAAA,GAEhB+F,QAAQ,CAACxE,MAAT,EAFgB,GAAA,UAAA;AAAA,UAAA,WAAA,GAAA,MAAA,CAGtBG,IAHsB;AAAA,UAGtBA,IAHsB,4BAGf,EAHe,GAAA,WAAA;AAAA,UAAA,YAAA,GAAA,MAAA,CAItBT,KAJsB;AAAA,UAItBA,KAJsB,6BAId,EAJc,GAAA,YAAA,CAAA;AAMxB,MAAO,OAAA,IAAI+4B,QAAJ,CAAa;AAClBh6B,QAAAA,GAAG,EAAHA,GADkB;AAElB0B,QAAAA,IAAI,EAAJA,IAFkB;AAGlBT,QAAAA,KAAK,EAALA,KAAAA;AAHkB,OAAb,CAAP,CAAA;AAKD,KAAA;;AAED,IAAA,MAAM,IAAIR,KAAJ,CACyEC,0EAAAA,GAAAA,KADzE,CAAN,CAAA;AAGD;;WAEMiB,WAAP,SAAgBC,QAAAA,CAAAA,IAAhB,EAAoC;AAClC,IAAA,OAAOo4B,QAAQ,CAACz4B,MAAT,CAAA,QAAA,CAAA,EAAA,EACFK,IADE,EAAA;AAELX,MAAAA,KAAK,EAAEW,IAAI,CAACX,KAAL,GAAaW,IAAI,CAACX,KAAL,CAAW8C,GAAX,CAAeqL,KAAK,CAACzN,QAArB,CAAb,GAA8C,EAAA;AAFhD,KAAP,CAAA,CAAA,CAAA;AAID;;WAEMs4B,aAAP,SAAkBC,UAAAA,CAAAA,aAAlB,EAAiE;AAC/D,IAAOA,OAAAA,aAAa,YAAYF,QAAhC,CAAA;AACD;;AAED,EAAA,SAAA,QAAA,CAAsBt5B,KAAtB,EAA2D;AAAA,IAAA,IAAA,KAAA,CAAA;;AACzD,IAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,IAAA,IAAA,CAAA;AADyD,IAM3CH,KAAAA,CAAAA,IAN2C,GAM5B,UAN4B,CAAA;AAAA,IAAA,KAAA,CAQ3CU,KAR2C,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAEjDA,KAFiD,GAEvCP,KAFuC,CAEjDO,KAFiD,CAAA;AAGzD,IAAKA,KAAAA,CAAAA,KAAL,GAAaA,KAAb,CAAA;AAHyD,IAAA,OAAA,KAAA,CAAA;AAI1D,GAAA;;;;SAMMa,QAAP,SAAapB,KAAAA,CAAAA,KAAb,EAAiD;AAC/C,IAAA,OAAO,IAAIs5B,QAAJ,CAAA,QAAA,CAAA;AACLh6B,MAAAA,GAAG,EAAE,IAAA,CAAKA,GADL;AAEL0B,MAAAA,IAAI,EAAE,IAAA,CAAKA,IAFN;AAGLT,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAAA;AAHP,KAAA,EAIFP,KAJE,CAAP,CAAA,CAAA;AAMD;;AAEMqB,EAAAA,MAAAA,CAAAA,MAAP,SAAA,GAAA,CACE/B,GADF,EAEEC,KAFF,EAGE;AAAA,IAAA,IAAA,WAAA,CAAA;;AACA,IAAA,OAAO,KAAK6B,KAAL,EAAA,WAAA,GAAA,EAAA,EAAA,WAAA,CACJ9B,GADI,CAAA,GACEC,KADF,EAAP,WAAA,EAAA,CAAA;AAGD,GAAA;AAED;AACF;AACA;;;SACSk6B,kBAAP,SAAuBlO,eAAAA,CAAAA,KAAvB,EAAyC;AACvC,IAAIA,IAAAA,KAAK,CAACkD,WAAN,IAAqBlD,KAAK,CAAC3E,MAAN,CAAa3K,WAAb,EAAzB,EAAqD;AACnD,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAHsC,IAAA,IAAA,qBAAA,GAIhBsP,KAAK,CAACmD,mBAAN,CAA0B,IAA1B,CAJgB;AAAA,QAI/BnnB,KAJ+B,yBAI/BA,KAJ+B;AAAA,QAIxBC,GAJwB,yBAIxBA,GAJwB,CAAA;;AAKvC,IAAI+jB,IAAAA,KAAK,CAACkD,WAAV,EAAuB;AACrB,MAAO,OAAA,IAAA,CAAKiL,kBAAL,CAAwBnyB,KAAK,CAACjI,GAA9B,EAAmCiI,KAAK,CAACpD,MAAzC,CAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIoD,KAAK,CAACjI,GAAN,KAAckI,GAAG,CAAClI,GAAtB,EAA2B;AACzB,MAAM0U,IAAAA,SAAS,GAAG,IAAKjF,CAAAA,OAAL,CAAaxH,KAAK,CAACjI,GAAnB,CAAlB,CAAA;AACA,MAAA,OAAOY,MAAI,CAACE,MAAL,CAAY4T,SAAZ,CAAA,GACHA,SAAS,CAAC3L,sBAAV,CAAiCd,KAAK,CAACpD,MAAvC,EAA+CqD,GAAG,CAACrD,MAAnD,CADG,GAEH,EAFJ,CAAA;AAGD,KAAA;;AAED,IAAA,IAAM+P,KAAK,GAAG,IAAKL,CAAAA,wBAAL,CAA8BtM,KAAK,CAACjI,GAApC,EAAyCkI,GAAG,CAAClI,GAA7C,CAAd,CAAA;AACA,IAAO4U,OAAAA,KAAK,CAACrR,MAAN,CAAqB,UAACO,KAAD,EAAQD,IAAR,EAAiB;AAC3C,MAAA,IAAIA,IAAI,CAAC7D,GAAL,KAAaiI,KAAK,CAACjI,GAAvB,EAA4B;AAC1B,QAAO4I,OAAAA,QAAQ,CAACvF,KAAT,CACLS,KADK,EAELD,IAAI,CAACkF,sBAAL,CAA4Bd,KAAK,CAACpD,MAAlC,EAA0ChB,IAAI,CAACA,IAAL,CAAU3C,MAApD,CAFK,CAAP,CAAA;AAID,OAAA;;AACD,MAAA,IAAI2C,IAAI,CAAC7D,GAAL,KAAakI,GAAG,CAAClI,GAArB,EAA0B;AACxB,QAAA,OAAO4I,QAAQ,CAACvF,KAAT,CACLS,KADK,EAELD,IAAI,CAACkF,sBAAL,CAA4B,CAA5B,EAA+Bb,GAAG,CAACrD,MAAnC,CAFK,CAAP,CAAA;AAID,OAAA;;AACD,MAAO+D,OAAAA,QAAQ,CAACvF,KAAT,CAAeS,KAAf,EAAsBD,IAAI,CAAC8E,QAAL,EAAtB,CAAP,CAAA;AACD,KAdM,EAcJ,EAdI,CAAP,CAAA;AAeD,GAAA;AAED;AACF;AACA;;;SACS0xB,wBAAP,SAA6BpO,qBAAAA,CAAAA,KAA7B,EAA+C;AAC7C,IAAIA,IAAAA,KAAK,CAACkD,WAAN,IAAqBlD,KAAK,CAAC3E,MAAN,CAAa3K,WAAb,EAAzB,EAAqD;AACnD,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AACD,IAAI,IAAA,CAAC0K,SAAS,CAACiP,gBAAV,CAA2B,IAA3B,EAAiCrK,KAAjC,CAAL,EAA8C;AAC5C,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAN4C,IAAA,IAAA,sBAAA,GAOtBA,KAAK,CAACmD,mBAAN,CAA0B,IAA1B,CAPsB;AAAA,QAOrCnnB,KAPqC,0BAOrCA,KAPqC;AAAA,QAO9BC,GAP8B,0BAO9BA,GAP8B,CAAA;;AAQ7C,IAAI+jB,IAAAA,KAAK,CAACkD,WAAV,EAAuB;AACrB,MAAO,OAAA,IAAA,CAAKiL,kBAAL,CAAwBnyB,KAAK,CAACjI,GAA9B,EAAmCiI,KAAK,CAACpD,MAAzC,CAAP,CAAA;AACD,KAAA;;AAED,IAAMyyB,IAAAA,SAAS,GAAG,IAAK7nB,CAAAA,OAAL,CAAaxH,KAAK,CAACjI,GAAnB,CAAlB,CAAA;AACA,IAAI0U,IAAAA,SAAS,GAAG4iB,SAAS,IAAT,IAAA,IAAAA,SAAS,CAAEx2B,MAAX,EAAA,GAAsBw2B,SAAtB,GAAkC,IAAlD,CAAA;;AACA,IAAI,IAAA,CAAC5iB,SAAL,EAAgB;AACd,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIF,QAAQ,GAAGvM,KAAK,CAACjI,GAArB,CAAA;AACA,IAAA,IAAIiF,WAAW,GAAGgD,KAAK,CAACpD,MAAxB,CAAA;AACA,IAAA,IAAI4P,MAAM,GAAGvM,GAAG,CAAClI,GAAjB,CAAA;AACA,IAAA,IAAI8E,SAAS,GAAGoD,GAAG,CAACrD,MAApB,CAAA;;AAEA,IAAI2P,IAAAA,QAAQ,KAAKC,MAAjB,EAAyB;AACvB,MAAA,OAAOC,SAAS,CAACvL,4BAAV,CAAuClE,WAAvC,EAAoDH,SAApD,CAAP,CAAA;AACD,KAAA;;AAED,IAAA,OAAO0P,QAAQ,KAAKC,MAAb,IAAuB3P,SAAS,KAAK,CAA5C,EAA+C;AAC7C,MAAA,IAAM6P,QAAO,GAAG,IAAA,CAAKpD,eAAL,CAAqBkD,MAArB,CAAhB,CAAA;;AACA,MAAI,IAAA,CAACE,QAAL,EAAc;AACZ,QAAA,OAAO,EAAP,CAAA;AACD,OAAA;;AACDF,MAAAA,MAAM,GAAGE,QAAO,CAAC3U,GAAjB,CAAA;AACA8E,MAAAA,SAAS,GAAG6P,QAAO,CAAC9Q,IAAR,CAAa3C,MAAzB,CAAA;AACD,KAAA;;AAED,IAAOsT,OAAAA,QAAQ,KAAKC,MAAb,IAAuBxP,WAAW,KAAKyP,SAAS,CAAC7Q,IAAV,CAAe3C,MAA7D,EAAqE;AACnEwT,MAAAA,SAAS,GAAG,IAAA,CAAKhD,WAAL,CAAiB8C,QAAjB,CAAZ,CAAA;;AACA,MAAI,IAAA,CAACE,SAAL,EAAgB;AACd,QAAA,OAAO,EAAP,CAAA;AACD,OAAA;;AACDF,MAAAA,QAAQ,GAAGE,SAAS,CAAC1U,GAArB,CAAA;AACAiF,MAAAA,WAAW,GAAG,CAAd,CAAA;AACD,KAAA;;AAED,IAAA,IAAMq1B,UAAU,GAAG5lB,SAAS,CAACvL,4BAAV,CACjBlE,WADiB,EAEjByP,SAAS,CAAC7Q,IAAV,CAAe3C,MAFE,CAAnB,CAAA;AAIA,IAAA,IAAIo5B,UAAU,CAACp5B,MAAX,KAAsB,CAA1B,EAA6B,OAAO,EAAP,CAAA;AAC7B,IAAA,IAAMyT,OAAO,GAAG,IAAA,CAAKlF,OAAL,CAAagF,MAAb,CAAhB,CAAA;AACA,IAAA,IAAM8lB,QAAQ,GAAG5lB,OAAO,QAAP,IAAAA,OAAO,CAAE7T,MAAT,EAAA,GACb6T,OAAO,CAACxL,4BAAR,CAAqC,CAArC,EAAwCrE,SAAxC,CADa,GAEb,EAFJ,CAAA;AAGA,IAAIhB,IAAAA,KAAK,GAAG8E,QAAQ,CAACjC,SAAT,CAAmB2zB,UAAnB,EAA+BC,QAA/B,CAAZ,CAtD6C;;AAwD7C,IAAA,IAAIz2B,KAAK,CAAC5C,MAAN,KAAiB,CAArB,EAAwB,OAAO4C,KAAP,CAAA;AAExB,IAAA,IAAI0Q,QAAQ,KAAKC,MAAjB,EAAyB,OAAO3Q,KAAP,CAAA;AAEzB,IAAA,IAAID,IAAI,GAAG,IAAA,CAAK6N,WAAL,CAAiB8C,QAAjB,CAAX,CAAA;;AAEA,IAAA,OAAO3Q,IAAI,IAAIA,IAAI,CAAC7D,GAAL,KAAayU,MAA5B,EAAoC;AAClC,MAAA,IAAI5Q,IAAI,CAACA,IAAL,CAAU3C,MAAV,KAAqB,CAAzB,EAA4B;AAC1B4C,QAAAA,KAAK,GAAG8E,QAAQ,CAACjC,SAAT,CAAmB7C,KAAnB,EAA0BD,IAAI,CAACgF,cAAL,EAA1B,CAAR,CAAA;AACA,QAAA,IAAI/E,KAAK,CAAC5C,MAAN,KAAiB,CAArB,EAAwB,OAAO,EAAP,CAAA;AACzB,OAAA;;AAED2C,MAAAA,IAAI,GAAG,IAAK6N,CAAAA,WAAL,CAAiB7N,IAAI,CAAC7D,GAAtB,CAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO8D,KAAP,CAAA;AACD;;AAEMs2B,EAAAA,MAAAA,CAAAA,qBAAP,SAAA,kBAAA,CAA0Bp6B,GAA1B,EAAuC6E,MAAvC,EAAuD;AACrD,IAAA,IAAMhB,IAAI,GAAG,IAAA,CAAK4L,OAAL,CAAazP,GAAb,CAAb,CAAA;AACA,IAAA,IAAMw6B,YAAY,GAAG,EAAC32B,IAAD,IAAA,IAAA,IAACA,IAAI,CAAE/C,MAAN,EAAD,CAAA,GAAkB,EAAlB,GAAuB+C,IAAI,CAACwF,eAAL,CAAqBxE,MAArB,CAA5C,CAAA;;AACA,IAAIA,IAAAA,MAAM,KAAK,CAAf,EAAkB;AAChB,MAAA,OAAO21B,YAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAM9H,YAAY,GAAG,IAAA,CAAK1gB,eAAL,CAAqBhS,GAArB,CAArB,CAAA;;AACA,IAAI,IAAA,CAAC0yB,YAAD,IAAiBA,YAAY,CAAC7uB,IAAb,KAAsB,EAA3C,EAA+C;AAC7C;AACA,MAAA,OAAO22B,YAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAMztB,QAAQ,GAAG,IAAA,CAAKwE,eAAL,CAAqBvR,GAArB,CAAjB,CAAA;;AACA,IAAI+M,IAAAA,QAAQ,IAAI2lB,YAAY,CAACjjB,OAAb,CAAqB1C,QAAQ,CAAC/M,GAA9B,CAAhB,EAAoD;AAClD,MAAO+M,OAAAA,QAAQ,CAAC1D,eAAT,CAAyB0D,QAAQ,CAAClJ,IAAT,CAAc3C,MAAvC,CAAP,CAAA;AACD,KAAA;;AAED,IAAA,OAAOs5B,YAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;SACSC,wBAAP,SAA6BxO,qBAAAA,CAAAA,KAA7B,EAA+C;AAC7C,IAAIA,IAAAA,KAAK,CAACkD,WAAN,IAAqBlD,KAAK,CAAC3E,MAAN,CAAa3K,WAAb,EAAzB,EAAqD;AACnD,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAH4C,IAAA,IAAA,sBAAA,GAI3BsP,KAAK,CAACmD,mBAAN,CAA0B,IAA1B,CAJ2B;AAAA,QAIrCnnB,KAJqC,0BAIrCA,KAJqC,CAAA;;AAK7C,IAAIgkB,IAAAA,KAAK,CAACkD,WAAV,EAAuB;AACrB,MAAO,OAAA,IAAA,CAAKiL,kBAAL,CAAwBnyB,KAAK,CAACjI,GAA9B,EAAmCiI,KAAK,CAACpD,MAAzC,CAAP,CAAA;AACD,KAAA;;AAED,IAAMhB,IAAAA,IAAI,GAAG,IAAK4L,CAAAA,OAAL,CAAaxH,KAAK,CAACjI,GAAnB,CAAb,CAAA;AACA,IAAA,OAAO,EAAC6D,IAAD,IAAA,IAAA,IAACA,IAAI,CAAE/C,MAAN,EAAD,CAAkB,GAAA,EAAlB,GAAuB+C,IAAI,CAACwF,eAAL,CAAqBpB,KAAK,CAACpD,MAAN,GAAe,CAApC,CAA9B,CAAA;AACD;;SAEM61B,kBAAP,SAAuBzO,eAAAA,CAAAA,KAAvB,EAA0C;AACxC,IAAI,IAAA,CAACA,KAAL,EAAY;AACV,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AACD,IAAM0O,IAAAA,GAAG,GAAG,IAAZ,CAAA;AACA,IAAA,IAAM1yB,KAAK,GAAGgkB,KAAK,CAAC6I,QAAN,CAAe6F,GAAf,CAAd,CAAA;AACA,IAAA,IAAMzyB,GAAG,GAAG+jB,KAAK,CAAC6J,MAAN,CAAa6E,GAAb,CAAZ,CAAA;AAEA,IAAMC,IAAAA,SAAS,GAAG,IAAK7qB,CAAAA,OAAL,CAAa9H,KAAK,CAACjI,GAAnB,CAAlB,CAAA;AACA,IAAM66B,IAAAA,OAAO,GAAG,IAAK9qB,CAAAA,OAAL,CAAa7H,GAAG,CAAClI,GAAjB,CAAhB,CAAA;AAEA,IAAA,IAAM86B,UAAU,GAAGF,SAAS,CAAC,CAAD,CAA5B,CAAA;AACA,IAAA,IAAMG,QAAQ,GAAGF,OAAO,CAAC,CAAD,CAAxB,CAAA;AACA,IAAA,IAAMG,UAAU,GAAG,IAAA,CAAK/5B,KAAL,CAAW65B,UAAX,CAAnB,CAAA;AACA,IAAA,IAAMG,QAAQ,GAAG,IAAA,CAAKh6B,KAAL,CAAW85B,QAAX,CAAjB,CAAA;AAEA,IAAM/xB,IAAAA,MAAc,GAAG,EAAvB,CAAA;;AAEA,IAASvC,SAAAA,IAAT,CAAcrH,IAAd,EAA0B;AACxB4J,MAAAA,MAAM,CAACvC,IAAP,CAAYrH,IAAZ,CAAA,CAAA;;AACA,MAAA,IAAIgQ,KAAK,CAACI,OAAN,CAAcpQ,IAAd,CAAA,IAAuBmQ,MAAM,CAACD,QAAP,CAAgBlQ,IAAhB,CAA3B,EAAkD;AAChDA,QAAAA,IAAI,CAAC6B,KAAL,CAAW8G,OAAX,CAAmBtB,IAAnB,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAASy0B,SAAAA,YAAT,CAAsB97B,IAAtB,EAAkC;AAChC,MAAM0L,IAAAA,IAAI,GAAG6vB,GAAG,CAAC5qB,OAAJ,CAAY3Q,IAAI,CAACY,GAAjB,CAAb,CAAA;;AAEA,MAAA,IACE4K,IAAI,CAAC5I,OAAL,CAAa8I,IAAb,EAAmB8vB,SAAnB,CACAhwB,IAAAA,IAAI,CAACoB,UAAL,CAAgBlB,IAAhB,EAAsB8vB,SAAtB,CADA,IAEAhwB,IAAI,CAACoB,UAAL,CAAgB4uB,SAAhB,EAA2B9vB,IAA3B,CAFA,IAGAF,IAAI,CAAC5I,OAAL,CAAa8I,IAAb,EAAmB+vB,OAAnB,CAHA,IAIAjwB,IAAI,CAACoB,UAAL,CAAgBlB,IAAhB,EAAsB+vB,OAAtB,CAJA,IAKAjwB,IAAI,CAACoB,UAAL,CAAgB6uB,OAAhB,EAAyB/vB,IAAzB,CALA,IAMC,CAACmhB,KAAK,CAAEkD,WAAR,IACCvkB,IAAI,CAACwB,OAAL,CAAatB,IAAb,EAAmB8vB,SAAnB,CADD,IAEChwB,IAAI,CAACuB,QAAL,CAAcrB,IAAd,EAAoB+vB,OAApB,CATJ,EAUE;AACA7xB,QAAAA,MAAM,CAACvC,IAAP,CAAYrH,IAAZ,CAAA,CAAA;;AACA,QAAA,IAAIgQ,KAAK,CAACI,OAAN,CAAcpQ,IAAd,CAAA,IAAuBmQ,MAAM,CAACD,QAAP,CAAgBlQ,IAAhB,CAA3B,EAAkD;AAChDA,UAAAA,IAAI,CAAC6B,KAAL,CAAW8G,OAAX,CAAmBmzB,YAAnB,CAAA,CAAA;AACD,SAAA;AACF,OAAA;AACF,KA5CuC;;;AA+CxClyB,IAAAA,MAAM,CAACvC,IAAP,CAAYu0B,UAAZ,CAAA,CAAA;AACAA,IAAAA,UAAU,CAAC/5B,KAAX,CAAiB8G,OAAjB,CAAyBmzB,YAAzB,CAAA,CAAA;;AAEA,IAAIJ,IAAAA,UAAU,KAAKC,QAAnB,EAA6B;AAC3B,MAAA,OAAO/xB,MAAP,CAAA;AACD,KApDuC;;;AAuDxC,IAAA,IAAA,CAAK/H,KAAL,CAAW0B,KAAX,CAAiBm4B,UAAU,GAAG,CAA9B,EAAiCC,QAAjC,CAA2ChzB,CAAAA,OAA3C,CAAmD,UAAC3I,IAAD,EAAU;AAC3DqH,MAAAA,IAAI,CAACrH,IAAD,CAAJ,CAAA;AACD,KAFD,EAvDwC;;AA4DxC4J,IAAAA,MAAM,CAACvC,IAAP,CAAYw0B,QAAZ,CAAA,CAAA;AACAA,IAAAA,QAAQ,CAACh6B,KAAT,CAAe8G,OAAf,CAAuBmzB,YAAvB,CAAA,CAAA;AACA,IAAA,OAAOlyB,MAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACS2pB,EAAAA,MAAAA,CAAAA,4BAAP,SAAA,yBAAA,CAAiC3yB,GAAjC,EAA8C+X,UAA9C,EAAsE;AACpE,IAAA,IAAIojB,GAAG,GAAG,IAAA,CAAKpoB,YAAL,CAAkB/S,GAAlB,CAAV,CAAA;AACA,IAAA,IAAM0L,CAAC,GAAG,IAAA,CAAK+D,OAAL,CAAazP,GAAb,CAAV,CAAA;;AACA,IAAA,IAAI0L,CAAJ,IAAIA,IAAAA,IAAAA,CAAC,CAAE3K,SAAH,EAAJ,EAAoB;AAClBo6B,MAAAA,GAAG,CAAC10B,IAAJ,CAASiF,CAAT,CAAA,CAAA;AACD,KAAA;;AACDyvB,IAAAA,GAAG,GAAGA,GAAG,CAAC5qB,OAAJ,EAAN,CAAA;;AACA,IAAA,KAAA,IAAA,SAAA,GAAAxQ,iCAAA,CAAmBo7B,GAAnB,CAAwB,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAAA;AAAA,MAAA,IAAb/7B,IAAa,GAAA,KAAA,CAAA,KAAA,CAAA;;AACtB,MAAI2Y,IAAAA,UAAU,CAACoa,KAAX,CAAiB,kBAAjB,EAAqC/yB,IAArC,CAAJ,EAAgD;AAC9C,QAAA,OAAOA,IAAP,CAAA;AACD,OAFD,MAEO,IAAIA,IAAI,CAACoQ,OAAL,EAAkBuI,IAAAA,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B/yB,IAA3B,CAAtB,EAAwD;AAC7D,QAAA,OAAOA,IAAP,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACS00B,EAAAA,MAAAA,CAAAA,6BAAP,SAAkC9zB,0BAAAA,CAAAA,GAAlC,EAA+Co7B,OAA/C,EAAgErjB,UAAhE,EAAwF;AACtF,IAAA,IAAMojB,GAAG,GAAG,IAAA,CAAKpoB,YAAL,CAAkB/S,GAAlB,CAAZ,CAAA;AACA,IAAA,IAAM0L,CAAC,GAAG,IAAA,CAAK+D,OAAL,CAAazP,GAAb,CAAV,CAAA;;AACA,IAAA,IAAI0L,CAAJ,IAAIA,IAAAA,IAAAA,CAAC,CAAE3K,SAAH,EAAJ,EAAoB;AAClBo6B,MAAAA,GAAG,CAAC10B,IAAJ,CAASiF,CAAT,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,IAAM2vB,SAAS,GAAGF,GAAG,CAAC14B,SAAJ,CAAc,UAACrD,IAAD,EAAA;AAAA,MAAA,OAAUA,IAAI,CAACY,GAAL,KAAao7B,OAAvB,CAAA;AAAA,KAAd,CAAlB,CAAA;;AACA,IAAA,IAAIC,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpB,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,KAAK,IAAInwB,CAAC,GAAGmwB,SAAb,EAAwBnwB,CAAC,GAAGiwB,GAAG,CAACj6B,MAAhC,EAAwCgK,CAAC,EAAzC,EAA6C;AAC3C,MAAA,IAAM9L,IAAI,GAAG+7B,GAAG,CAACjwB,CAAD,CAAhB,CAAA;;AACA,MAAI6M,IAAAA,UAAU,CAACoa,KAAX,CAAiB,kBAAjB,EAAqC/yB,IAArC,CAAJ,EAAgD;AAC9C,QAAA,OAAOA,IAAP,CAAA;AACD,OAFD,MAEO,IAAIA,IAAI,CAACoQ,OAAL,EAAkBuI,IAAAA,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B/yB,IAA3B,CAAtB,EAAwD;AAC7D,QAAA,OAAOA,IAAP,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACSqwB,EAAAA,MAAAA,CAAAA,iBAAP,SAAA,cAAA,CAAsBzvB,GAAtB,EAAmC+X,UAAnC,EAA2D;AACzD,IAAA,IAAMjN,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,KAAKwwB,oBAAL,CAA0BxwB,IAA1B,EAAgCiN,UAAhC,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACUujB,EAAAA,MAAAA,CAAAA,uBAAR,SAAA,oBAAA,CAA6BxwB,IAA7B,EAAyCiN,UAAzC,EAAiE;AAC/D,IAAA,OAAO,KAAK7E,gBAAL,CAAsBpI,IAAtB,EAA4B,UAAC1L,IAAD,EAAU;AAC3C,MAAA,OAAO2Y,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B/yB,IAA3B,CAAP,CAAA;AACD,KAFM,CAAP,CAAA;AAGD,GAAA;AAED;AACF;AACA;;;AACSm8B,EAAAA,MAAAA,CAAAA,gBAAP,SAAA,aAAA,CAAqBv7B,GAArB,EAAkC+X,UAAlC,EAA0D;AACxD,IAAA,IAAMjN,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,KAAK0wB,mBAAL,CAAyB1wB,IAAzB,EAA+BiN,UAA/B,CAAP,CAAA;AACD;;AAEOyjB,EAAAA,MAAAA,CAAAA,sBAAR,SAAA,mBAAA,CAA4B1wB,IAA5B,EAAwCiN,UAAxC,EAAgE;AAC9D,IAAM7F,IAAAA,OAAO,GAAG,IAAKopB,CAAAA,oBAAL,CAA0BxwB,IAA1B,EAAgCiN,UAAhC,CAAhB,CAAA;AACA,IAAO,OAAA,CAAC,CAAC7F,OAAT,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACSupB,EAAAA,MAAAA,CAAAA,mBAAP,SAAA,gBAAA,CAAwBz7B,GAAxB,EAAqC+X,UAArC,EAA6D;AAC3D,IAAA,OAAO,KAAK1F,YAAL,CACLrS,GADK,EAEL,UAACZ,IAAD,EAAA;AAAA,MAAA,OAAU2Y,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B/yB,IAA3B,CAAV,CAAA;AAAA,KAFK,CAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;;;AACSs8B,EAAAA,MAAAA,CAAAA,qBAAP,SAAA,kBAAA,CAA0BzP,KAA1B,EAA4ClU,UAA5C,EAAqE;AAAA,IAAA,IAAA,sBAAA,GAC5CkU,KAAK,CAACmD,mBAAN,CAA0B,IAA1B,CAD4C;AAAA,QAC3DnnB,KAD2D,0BAC3DA,KAD2D;AAAA,QACpDC,GADoD,0BACpDA,GADoD,CAAA;;AAEnE,IAAMyzB,IAAAA,aAAa,GAAG,IAAK5rB,CAAAA,OAAL,CAAa9H,KAAK,CAACjI,GAAnB,CAAtB,CAAA;AACA,IAAM47B,IAAAA,WAAW,GAAG,IAAK7rB,CAAAA,OAAL,CAAa7H,GAAG,CAAClI,GAAjB,CAApB,CAAA;;AACA,IAAA,IAAI,CAAC27B,aAAD,IAAkB,CAACC,WAAvB,EAAoC;AAClC,MAAO5B,OAAAA,QAAQ,CAACz4B,MAAT,EAAP,CAAA;AACD,KAAA;;AACD,IAAMs6B,IAAAA,SAAS,GACb9jB,UAAU,IAAI,IAAA,CAAKujB,oBAAL,CAA0BK,aAA1B,EAAyC5jB,UAAzC,CADhB,CAAA;AAEA,IAAM+jB,IAAAA,OAAO,GACX/jB,UAAU,IAAI,IAAA,CAAKujB,oBAAL,CAA0BM,WAA1B,EAAuC7jB,UAAvC,CADhB,CAAA;AAEA,IAAA,IAAM6iB,SAAS,GAAGiB,SAAS,GACvB,IAAKnsB,CAAAA,UAAL,CAAgBmsB,SAAS,CAAC77B,GAA1B,CADuB,GAEvB27B,aAFJ,CAAA;AAGA,IAAA,IAAMd,OAAO,GAAGiB,OAAO,GAAG,IAAKpsB,CAAAA,UAAL,CAAgBosB,OAAO,CAAC97B,GAAxB,CAAH,GAAkC47B,WAAzD,CAAA;AAEA,IAAIx8B,IAAAA,IAAI,GAAG,IAAX,CAAA;AACA,IAAI28B,IAAAA,UAAU,GAAGlB,OAAjB,CAAA;AACA,IAAA,IAAImB,cAAc,GAAGF,OAAO,GAAGA,OAAO,CAAC76B,KAAR,CAAcC,MAAjB,GAA0BgH,GAAG,CAACrD,MAA1D,CAAA;AACA,IAAIo3B,IAAAA,IAAI,GAAG,KAAX,CAAA;;AACA,IAAOF,OAAAA,UAAU,CAAC76B,MAAlB,EAA0B;AACxB,MAAMsB,IAAAA,KAAK,GAAGu5B,UAAU,CAACA,UAAU,CAAC76B,MAAX,GAAoB,CAArB,CAAxB,CAAA;AACA9B,MAAAA,IAAI,GAAGA,IAAI,CAACqX,SAAL,CAAeslB,UAAf,EAA2BC,cAA3B,CAAP,CAAA;AACAD,MAAAA,UAAU,GAAGnxB,IAAI,CAAC0B,MAAL,CAAYyvB,UAAZ,CAAb,CAAA;AACAC,MAAAA,cAAc,GAAGx5B,KAAK,GAAG,CAAzB,CAAA;;AAEA,MAAI,IAAA,CAACu5B,UAAU,CAAC76B,MAAZ,IAAsB+6B,IAAI,KAAK,KAAnC,EAA0C;AACxCF,QAAAA,UAAU,GAAGnB,SAAb,CAAA;AACAoB,QAAAA,cAAc,GAAGH,SAAS,GAAG,CAAH,GAAO5zB,KAAK,CAACpD,MAAvC,CAAA;AACAo3B,QAAAA,IAAI,GAAG,OAAP,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,IAAMnB,UAAU,GAAGF,SAAS,CAAC,CAAD,CAAT,GAAe,CAAlC,CAAA;AACA,IAAA,IAAMG,QAAQ,GAAGF,OAAO,CAAC,CAAD,CAAP,GAAa,CAA9B,CAAA;AACA,IAAA,IAAM55B,KAAK,GAAG7B,IAAI,CAAC6B,KAAL,CAAW0B,KAAX,CAAiBm4B,UAAjB,EAA6BC,QAA7B,CAAd,CAnCmE;;AAqCnE,IAAOf,OAAAA,QAAQ,CAACz4B,MAAT,CAAgB;AAAEN,MAAAA,KAAK,EAALA,KAAAA;AAAF,KAAhB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSi7B,uBAAP,SAA4BjQ,oBAAAA,CAAAA,KAA5B,EAAuD;AAAA,IAAA,IAAA,sBAAA,GAC9BA,KAAK,CAACmD,mBAAN,CAA0B,IAA1B,CAD8B;AAAA,QAC7CnnB,KAD6C,0BAC7CA,KAD6C;AAAA,QACtCC,GADsC,0BACtCA,GADsC,CAAA;;AAErD,IAAM8yB,IAAAA,UAAU,GAAG,IAAA,CAAKxnB,wBAAL,CAA8BvL,KAAK,CAACjI,GAApC,CAAnB,CAFqD;AAKrD;;AACA,IAAA,IAAIiI,KAAK,CAACjI,GAAN,KAAckI,GAAG,CAAClI,GAAtB,EAA2B;AACzB,MAAO,OAAA,CAACg7B,UAAD,CAAP,CAAA;AACD,KAAA;;AAED,IAAMC,IAAAA,QAAQ,GAAG,IAAKznB,CAAAA,wBAAL,CAA8BtL,GAAG,CAAClI,GAAlC,CAAjB,CAAA;AACA,IAAA,IAAMm8B,MAAM,GAAG,IAAK5kB,CAAAA,SAAL,EAAf,CAAA;AACA,IAAA,IAAMujB,UAAU,GAAGqB,MAAM,CAACtnB,OAAP,CAAemmB,UAAf,CAAnB,CAAA;AACA,IAAA,IAAMD,QAAQ,GAAGoB,MAAM,CAACtnB,OAAP,CAAeomB,QAAf,CAAjB,CAAA;AACA,IAAOkB,OAAAA,MAAM,CAACx5B,KAAP,CAAam4B,UAAb,EAAyBC,QAAQ,GAAG,CAApC,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACSxjB,EAAAA,MAAAA,CAAAA,YAAP,SAAmB,SAAA,GAAA;AACjB,IAAA,OAAOnI,KAAK,CAACmI,SAAN,CAAgB,IAAA,CAAKtW,KAArB,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSwW,kBAAP,SAAuBlX,eAAAA,CAAAA,IAAvB,EAAqC;AACnC,IAAO6O,OAAAA,KAAK,CAACqI,eAAN,CAAsB,KAAKxW,KAA3B,EAAkCV,IAAlC,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACS67B,uBAAP,SAA4BnQ,oBAAAA,CAAAA,KAA5B,EAAwD;AACtD,IAAI,IAAA,CAACA,KAAL,EAAY;AACV,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAHqD,IAAA,IAAA,sBAAA,GAI/BA,KAAK,CAACmD,mBAAN,CAA0B,IAA1B,CAJ+B;AAAA,QAI9CnnB,KAJ8C,0BAI9CA,KAJ8C;AAAA,QAIvCC,GAJuC,0BAIvCA,GAJuC,CAAA;;AAMtD,IAAM8yB,IAAAA,UAAU,GAAG,IAAKroB,CAAAA,iBAAL,CAAuB1K,KAAK,CAACjI,GAA7B,CAAnB,CAAA;;AACA,IAAI,IAAA,CAACg7B,UAAL,EAAiB;AACf,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAI/yB,KAAK,CAACjI,GAAN,KAAckI,GAAG,CAAClI,GAAtB,EAA2B;AACzB,MAAO,OAAA,CAACg7B,UAAD,CAAP,CAAA;AACD,KAAA;;AAED,IAAMC,IAAAA,QAAQ,GAAG,IAAKtoB,CAAAA,iBAAL,CAAuBzK,GAAG,CAAClI,GAA3B,CAAjB,CAAA;;AACA,IAAI,IAAA,CAACi7B,QAAL,EAAe;AACb,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AACD,IAAO,OAAA,IAAA,CAAKh6B,KAAL,CAAW0B,KAAX,CACL,IAAK1B,CAAAA,KAAL,CAAW4T,OAAX,CAAmBmmB,UAAnB,CADK,EAEL,KAAK/5B,KAAL,CAAW4T,OAAX,CAAmBomB,QAAnB,CAA+B,GAAA,CAF1B,CAAP,CAAA;AAID,GAAA;AAED;AACF;AACA;;;AACSoB,EAAAA,MAAAA,CAAAA,gBAAP,SAAA,aAAA,CAAqBr8B,GAArB,EAAkCisB,KAAlC,EAAoD;AAClD,IAAA,IAAMnhB,IAAI,GAAG,IAAA,CAAKiF,OAAL,CAAa/P,GAAb,CAAb,CAAA;;AACA,IAAI,IAAA,CAAC8K,IAAL,EAAW;AACT,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,KAAKwxB,mBAAL,CAAyBxxB,IAAzB,EAA+BmhB,KAA/B,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACSqQ,EAAAA,MAAAA,CAAAA,sBAAP,SAAA,mBAAA,CAA2BxxB,IAA3B,EAAuCmhB,KAAvC,EAAyD;AACvD,IAAA,IAAI,CAACA,KAAD,IAAUA,KAAK,CAACsQ,iBAApB,EAAuC;AACrC,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AAHsD,IAAA,IAAA,WAAA,GAIhCtQ,KAAK,CAACoL,IAAN,CAAW,IAAX,CAJgC;AAAA,QAI/CpvB,KAJ+C,eAI/CA,KAJ+C;AAAA,QAIxCC,GAJwC,eAIxCA,GAJwC,CAAA;;AAKvD,IAAA,IAAM0yB,SAAS,GAAG3yB,KAAK,CAACkV,SAAN,CAAgB,IAAhB,CAAlB,CAAA;AACA,IAAM0d,IAAAA,OAAO,GAAG3yB,GAAG,CAACiV,SAAJ,CAAc,IAAd,CAAhB,CANuD;;AASvD,IAAA,IAAI,CAACyd,SAAD,IAAc,CAACC,OAAnB,EAA4B;AAC1B,MAAA,OAAO,KAAP,CAAA;AACD,KAXsD;;;AAcvD,IAAA,IACE5yB,KAAK,CAAC0U,WAAN,EAAA,IACA1U,KAAK,CAACoU,IAAN,KAAeD,SAAS,CAACoB,KADzB,KAEC5S,IAAI,CAAC5I,OAAL,CAAa44B,SAAb,EAAwB9vB,IAAxB,CAAA,IAAiCF,IAAI,CAACoB,UAAL,CAAgB4uB,SAAhB,EAA2B9vB,IAA3B,CAFlC,CADF,EAIE;AACA,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AACD,IAAA,IACE5C,GAAG,CAACyU,WAAJ,EAAA,IACAzU,GAAG,CAACmU,IAAJ,KAAaD,SAAS,CAACa,MADvB,KAECrS,IAAI,CAAC5I,OAAL,CAAa64B,OAAb,EAAsB/vB,IAAtB,CAAA,IAA+BF,IAAI,CAACoB,UAAL,CAAgB6uB,OAAhB,EAAyB/vB,IAAzB,CAFhC,CADF,EAIE;AACA,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AAED,IAAM0xB,IAAAA,aAAa,GAAG5xB,IAAI,CAACC,OAAL,CAAaC,IAAb,EAAmB8vB,SAAnB,CAAkC,KAAA,CAAC,CAAzD,CAAA;AACA,IAAM6B,IAAAA,UAAU,GAAG7xB,IAAI,CAACC,OAAL,CAAaC,IAAb,EAAmB+vB,OAAnB,CAAA,KAAgC,CAAnD,CAAA;AACA,IAAA,OAAO,CAAC2B,aAAD,IAAkB,CAACC,UAA1B,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSC,kBAAP,SAAuBzQ,eAAAA,CAAAA,KAAvB,EAAiD;AAAA,IAAA,IAAA,sBAAA,GACxBA,KAAK,CAACmD,mBAAN,CAA0B,IAA1B,CADwB;AAAA,QACvCnnB,KADuC,0BACvCA,KADuC;AAAA,QAChCC,GADgC,0BAChCA,GADgC,CAAA;;AAE/C,IAAO,OAAA,IAAA,CAAKqM,wBAAL,CAA8BtM,KAAK,CAACjI,GAApC,EAAyCkI,GAAG,CAAClI,GAA7C,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACS28B,wBAAP,SAA6B1Q,qBAAAA,CAAAA,KAA7B,EAAyD;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AACvD,IAAMzU,IAAAA,KAAK,GAAG,IAAA,CAAKklB,eAAL,CAAqBzQ,KAArB,CACXloB,CAAAA,GADW,CACP,UAACF,IAAD,EAAA;AAAA,MAAA,OAAU,MAAI,CAACuP,gBAAL,CAAsBvP,IAAI,CAAC7D,GAA3B,CAAV,CAAA;AAAA,KADO,CAEX0D,CAAAA,MAFW,CAEJ,UAACk5B,MAAD,EAAA;AAAA,MAA8B3sB,OAAAA,OAAO,CAAC2sB,MAAD,CAArC,CAAA;AAAA,KAFI,CAAd,CAAA;AAIA,IAAA,OAAOplB,KAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;SACSqlB,wBAAP,SAA6B5Q,qBAAAA,CAAAA,KAA7B,EAA0D;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;;AACxD,IAAI,IAAA,CAACA,KAAL,EAAY;AACV,MAAA,OAAO,EAAP,CAAA;AACD,KAAA;;AAED,IAAMzU,IAAAA,KAAK,GAAG,IAAA,CAAKklB,eAAL,CAAqBzQ,KAArB,CACXloB,CAAAA,GADW,CACP,UAACF,IAAD,EAAA;AAAA,MAAA,OAAU,MAAI,CAAC6O,kBAAL,CAAwB7O,IAAI,CAAC7D,GAA7B,CAAV,CAAA;AAAA,KADO,CAAA;AAEZ;AAFY,KAGXuD,MAHW,CAGM,UAACwR,OAAD,EAAU+nB,MAAV,EAAqB;AACrC,MAAIA,IAAAA,MAAM,IAAI,CAAC/nB,OAAO,CAACgoB,QAAR,CAAiBD,MAAjB,CAAf,EAAyC;AACvC/nB,QAAAA,OAAO,CAACtO,IAAR,CAAaq2B,MAAb,CAAA,CAAA;AACD,OAAA;;AACD,MAAA,OAAO/nB,OAAP,CAAA;AACD,KARW,EAQT,EARS,CAAd,CAAA;AASA;;AAEA,IAAA,OAAOyC,KAAP,CAAA;AACD;;SAEMrV,SAAP,SAAcqF,MAAAA,CAAAA,OAAd,EAA0C;AACxC,IAAA,IAAM+C,MAAoB,GAAG;AAC3BnI,MAAAA,KAAK,EAAE,UADoB;AAE3BV,MAAAA,IAAI,EAAA,QAAA,CAAA,EAAA,EAAO,IAAKA,CAAAA,IAAZ,CAFuB;AAG3BT,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAL,CAAW8C,GAAX,CAAe,UAAC3E,IAAD,EAAA;AAAA,QAAA,OAAUA,IAAI,CAAC+C,MAAL,CAAYqF,OAAZ,CAAV,CAAA;AAAA,OAAf,CAAA;AAHoB,KAA7B,CAAA;;AAMA,IAAA,IAAIA,OAAJ,IAAA,IAAA,IAAIA,OAAO,CAAEgD,YAAb,EAA2B;AACzBD,MAAAA,MAAM,CAACvK,GAAP,GAAa,KAAKA,GAAlB,CAAA;AACD,KAAA;;AAED,IAAA,OAAOuK,MAAP,CAAA;AACD;;;EAnkBmC1J;;ACrBtC,SAASm8B,gBAAT,CAA0Bt6B,CAA1B,EAAmCI,CAAnC,EAAkD;AAChD,EAAYJ,OAAAA,QAAAA,CAAAA,EAAAA,EAAAA,CAAZ,EAAkBI,CAAlB,CAAA,CAAA;AACD,CAAA;;IAaoBm6B;;;YACZ17B,SAAP,SAAqCb,MAAAA,CAAAA,KAArC,EAAmF;AACjF,IAAA,IAAIu8B,SAAS,CAACC,WAAV,CAAsBx8B,KAAtB,CAAJ,EAAkC;AAChC,MAAA,OAAOA,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAIF,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAAA,MAAA,IAChBV,GADgB,GACSU,KADT,CAChBV,GADgB;AAAA,UACX0B,IADW,GACShB,KADT,CACXgB,IADW;AAAA,UACLy7B,SADK,GACSz8B,KADT,CACLy8B,SADK,CAAA;AAExB,MAAO,OAAA,IAAIF,SAAJ,CAAc;AACnBj9B,QAAAA,GAAG,EAAHA,GADmB;AAEnB0B,QAAAA,IAAI,EAAJA,IAFmB;AAGnBy7B,QAAAA,SAAS,EAATA,SAAAA;AAHmB,OAAd,CAAP,CAAA;AAKD,KAAA;;AAED,IAAA,MAAM,IAAI18B,KAAJ,CAC2EC,4EAAAA,GAAAA,KAD3E,CAAN,CAAA;AAGD;;YAEMw8B,cAAP,SAAmBE,WAAAA,CAAAA,cAAnB,EAAqE;AACnE,IAAOA,OAAAA,cAAc,YAAYH,SAAjC,CAAA;AACD;;AAEMI,EAAAA,SAAAA,CAAAA,iBAAP,SAAA,cAAA,CAAsBC,UAAtB,EAA+Cl+B,IAA/C,EAA2D;AACzD,IAAA,IAAI,CAACk+B,UAAU,CAACp8B,MAAZ,IAAsB,CAACL,SAAO,CAACE,SAAR,CAAkB3B,IAAlB,CAA3B,EAAoD;AAClD,MAAA,OAAOA,IAAP,CAAA;AACD,KAAA;;AACD,IAAOk+B,OAAAA,UAAU,CAAC/5B,MAAX,CAAkB,UAACmI,CAAD,EAAI6xB,SAAJ,EAAkB;AACzC,MAAA,IAAIA,SAAS,CAACv9B,GAAV,KAAkB0L,CAAC,CAAC1L,GAAxB,EAA6B;AAC3B,QAAA,OAAO0L,CAAP,CAAA;AACD,OAAA;;AAHwC,MAAA,IAIjCyxB,SAJiC,GAInBI,SAJmB,CAIjCJ,SAJiC,CAAA;AAKzC,MAAA,OAAOzxB,CAAC,CAAC3J,GAAF,CAAM,MAAN,EAAco7B,SAAS,CAACzxB,CAAC,CAAChK,IAAH,EAAS67B,SAAS,CAAC77B,IAAnB,CAAvB,CAAP,CAAA;AACD,KANM,EAMJtC,IANI,CAAP,CAAA;AAOD;;YAEMuC,WAAP,SAAgBC,QAAAA,CAAAA,IAAhB,EAAqC;AAAA,IAAA,IAC3B5B,GAD2B,GACb4B,IADa,CAC3B5B,GAD2B;AAAA,QACtB0B,IADsB,GACbE,IADa,CACtBF,IADsB,CAAA;AAEnC,IAAOu7B,OAAAA,SAAS,CAAC17B,MAAV,CAAiB;AACtBvB,MAAAA,GAAG,EAAHA,GADsB;AACjB0B,MAAAA,IAAI,EAAJA,IAAAA;AADiB,KAAjB,CAAP,CAAA;AAGD;;AAED,EAAA,SAAA,SAAA,CAAYhB,KAAZ,EAA2C;AAAA,IAAA,IAAA,KAAA,CAAA;;AACzC,IAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,IAAA,CAAA;AADyC,IAAA,KAAA,CAS3BV,GAT2B,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAW3B0B,IAX2B,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAa3By7B,SAb2B,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAEjCn9B,GAFiC,GAEWU,KAFX,CAEjCV,GAFiC;AAAA,QAE5B0B,IAF4B,GAEWhB,KAFX,CAE5BgB,IAF4B;AAAA,QAEWhB,gBAAAA,GAAAA,KAFX,CAEtBy8B,SAFsB;AAAA,QAEtBA,SAFsB,iCAEVH,gBAFU,GAAA,gBAAA,CAAA;AAGzC,IAAKh9B,KAAAA,CAAAA,GAAL,GAAWA,GAAX,CAAA;AACA,IAAK0B,KAAAA,CAAAA,IAAL,GAAYA,IAAZ,CAAA;AACA,IAAKy7B,KAAAA,CAAAA,SAAL,GAAiBA,SAAjB,CAAA;;AACA,IAAA,KAAA,CAAKj9B,MAAL,EAAA,CAAA;;AANyC,IAAA,OAAA,KAAA,CAAA;AAO1C,GAAA;;;;SAQM4B,QAAP,SAAapB,KAAAA,CAAAA,KAAb,EAAqD;AACnD,IAAA,OAAO,IAAIu8B,SAAJ,CAAA,QAAA,CAAA;AACLj9B,MAAAA,GAAG,EAAE,IAAA,CAAKA,GADL;AAEL0B,MAAAA,IAAI,EAAE,IAAA,CAAKA,IAFN;AAGLy7B,MAAAA,SAAS,EAAE,IAAKA,CAAAA,SAAAA;AAHX,KAAA,EAIFz8B,KAJE,CAAP,CAAA,CAAA;AAMD;;AAEMqB,EAAAA,MAAAA,CAAAA,MAAP,SAAA,GAAA,CACE/B,GADF,EAEEC,KAFF,EAGE;AAAA,IAAA,IAAA,WAAA,CAAA;;AACA,IAAA,OAAO,KAAK6B,KAAL,EAAA,WAAA,GAAA,EAAA,EAAA,WAAA,CACJ9B,GADI,CAAA,GACEC,KADF,EAAP,WAAA,EAAA,CAAA;AAGD;;AAEMkC,EAAAA,MAAAA,CAAAA,SAAP,SAAgB,MAAA,GAAA;AACd,IAAO,OAAA;AACLnC,MAAAA,GAAG,EAAE,IAAA,CAAKA,GADL;AAEL0B,MAAAA,IAAI,EAAE,IAAKA,CAAAA,IAAAA;AAFN,KAAP,CAAA;AAID;;;EAlF2DvB;;ACzB9D;AACA;AACA;AACA;AAUO,IAAMq9B,gBAAgB,GAAGC,KAAK,CACnC,UACE1lB,UADF,EAEE2lB,EAFF,EAGEpK,QAHF,EAIEf,IAJF,EAKK;AACH,EAAO,OAAA,UAAClZ,SAAD,EAA0B;AAC/B,IAAIia,IAAAA,QAAQ,KAAK,CAAjB,EAAoB;AAClB,MAAA,OAAOja,SAAP,CAAA;AACD,KAAA;;AAH8B,IAAA,IAKvB0D,QALuB,GAKVhF,UAAU,CAAC9X,KALD,CAKvB8c,QALuB,CAAA;AAO/B,IAAIqa,IAAAA,SAAS,GAAGsG,EAAhB,CAAA;;AACA,IAAItG,IAAAA,SAAS,KAAK,OAAlB,EAA2B;AACzBA,MAAAA,SAAS,GAAG/d,SAAS,CAAC0c,SAAV,CAAoBhZ,QAApB,CAAA,GAAgC,QAAhC,GAA2C,OAAvD,CAAA;AACD,KAFD,MAEO,IAAIqa,SAAS,KAAK,KAAlB,EAAyB;AAC9BA,MAAAA,SAAS,GAAG/d,SAAS,CAAC0c,SAAV,CAAoBhZ,QAApB,CAAA,GAAgC,OAAhC,GAA0C,QAAtD,CAAA;AACD,KAAA;;AACD,IAAA,IAAMqV,EAAE,GAAGgF,SAAS,KAAK,QAAd,GAAyB/d,SAAS,CAACiO,MAAnC,GAA4CjO,SAAS,CAACkO,KAAjE,CAAA;AAEA,IAAA,IAAMvK,KAAK,GAAGjF,UAAU,CAACoa,KAAX,CAAiBkB,eAAjB,EAAkCjB,EAAlC,EAAsCkB,QAAtC,EAAgDf,IAAhD,CAAd,CAAA;AACA,IAAA,OAAOlZ,SAAS,CAACtX,GAAV,CAAcq1B,SAAd,EAAyBpa,KAAzB,CAAP,CAAA;AACD,GAjBD,CAAA;AAkBD,CAzBkC,CAA9B,CAAA;AA4BA,IAAM2gB,iBAAiB,GAAGF,KAAK,CACpC,UACE1lB,UADF,EAEE2lB,EAFF,EAGEpK,QAHF,EAIEf,IAJF,EAKK;AACH,EAAO,OAAA,UAAClZ,SAAD,EAA0B;AAC/B,IAAA,IAAMgf,KAAK,GAAGmF,gBAAgB,CAACzlB,UAAD,EAAa2lB,EAAb,EAAiB,CAACpK,QAAlB,EAA4Bf,IAA5B,CAA9B,CAAA;AACA,IAAO8F,OAAAA,KAAK,CAAChf,SAAD,CAAZ,CAAA;AACD,GAHD,CAAA;AAID,CAXmC,CAA/B,CAAA;AAcA,IAAMukB,qBAAqB,GAAGD,iBAAiB,CACpDF,KAAK,CAACI,WAD8C,EAEpDJ,KAAK,CAACI,WAF8C,EAGpD,CAHoD,EAIpD,MAJoD,CAA/C,CAAA;AAOA,IAAMC,oBAAoB,GAAGN,gBAAgB,CAClDC,KAAK,CAACI,WAD4C,EAElDJ,KAAK,CAACI,WAF4C,EAGlD,CAHkD,EAIlD,MAJkD,CAA7C,CAAA;AAyBP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAC/B3+B,IAD+B,EAE/B2d,QAF+B,EAG/B1D,SAH+B,EAI5B;AAAA,EAAA,IAAA,eAAA,GACoBA,SAAS,CAACge,IAAV,CAAeta,QAAf,CADpB;AAAA,MACK9U,KADL,mBACKA,KADL;AAAA,MACYC,GADZ,mBACYA,GADZ,CAAA;;AAEH,EAAA,IAAIrH,SAAO,CAACE,SAAR,CAAkB3B,IAAlB,CAAJ,EAA6B;AAC3B,IACG6I,IAAAA,KAAK,CAAC0U,WAAN,EAAA,IAAuB1U,KAAK,CAACjI,GAAN,KAAcZ,IAAI,CAACY,GAA3C,IACCkI,GAAG,CAACyU,WAAJ,EAAA,IAAqBzU,GAAG,CAAClI,GAAJ,KAAYZ,IAAI,CAACY,GAFzC,EAGE;AACA,MAAA,OAAO,KAAP,CAAA;AACD,KALD,MAKO;AAAA,MAAA,IAAA,qBAAA,GAEHqZ,SAAS,CAAC+V,mBAAV,CAA8BrS,QAA9B,CAFG;AAAA,UACUrI,SADV,yBACGzM,KADH;AAAA,UAC0B0M,OAD1B,yBACqBzM,GADrB,CAAA;;AAGL,MAAA,OAAO9I,IAAI,CAAC4Q,OAAL,CAAa0E,SAAS,CAAC1U,GAAvB,CAA+BZ,IAAAA,IAAI,CAAC4Q,OAAL,CAAa2E,OAAO,CAAC3U,GAArB,CAAtC,CAAA;AACD,KAAA;AACF,GAXD,MAWO;AACL;AACA,IACEiI,OAAAA,KAAK,CAACyU,WAAN,EAAA,IACAxU,GAAG,CAACwU,WAAJ,EADA,IAEAzU,KAAK,CAACjI,GAAN,KAAcZ,IAAI,CAACY,GAFnB,IAGAkI,GAAG,CAAClI,GAAJ,KAAYZ,IAAI,CAACY,GAJnB,CAAA;AAMD,GAAA;AACF,CA1BM,CAAA;;AA4BP,SAASg+B,uBAAT,CACEjhB,QADF,EAEEkhB,IAFF,EAGEC,WAHF,EAIQ;AACN,EAAA,IAAIj2B,KAAK,GAAGi2B,WAAW,CAACj9B,KAAZ,CAAkB,CAAlB,CAAZ,CAAA;;AACA,EAAO,OAAA,CAAC8b,QAAQ,CAAC/M,OAAT,CAAiB/H,KAAK,CAACjI,GAAvB,CAAR,EAAqC;AACnCiI,IAAAA,KAAK,GAAGg2B,IAAI,CAAChvB,aAAL,CAAmBhH,KAAK,CAACjI,GAAzB,CAAA,CAA8BiB,KAA9B,CAAoC,CAApC,CAAR,CAAA;AACD,GAAA;;AAED,EAAA,OAAO8b,QAAQ,CAACrN,UAAT,CAAoBzH,KAAK,CAACjI,GAA1B,CAAP,CAAA;AACD,CAAA;;AAED,SAASm+B,sBAAT,CACEphB,QADF,EAEEkhB,IAFF,EAGEC,WAHF,EAIQ;AACN,EAAA,IAAIh2B,GAAG,GAAGg2B,WAAW,CAACj9B,KAAZ,CAAkBi9B,WAAW,CAACj9B,KAAZ,CAAkBC,MAAlB,GAA2B,CAA7C,CAAV,CAAA;;AACA,EAAO,OAAA,CAAC6b,QAAQ,CAAC/M,OAAT,CAAiB9H,GAAG,CAAClI,GAArB,CAAR,EAAmC;AACjC,IAAMo+B,IAAAA,UAAU,GAAGH,IAAI,CAAChvB,aAAL,CAAmB/G,GAAG,CAAClI,GAAvB,CAAnB,CAAA;AACAkI,IAAAA,GAAG,GAAGk2B,UAAU,CAACn9B,KAAX,CAAiBm9B,UAAU,CAACn9B,KAAX,CAAiBC,MAAjB,GAA0B,CAA3C,CAAN,CAAA;AACD,GAAA;;AAED,EAAA,OAAO6b,QAAQ,CAACrN,UAAT,CAAoBxH,GAAG,CAAClI,GAAxB,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASq+B,mBAAT,CACLtmB,UADK,EAELsB,SAFK,EAGLilB,QAHK,EAIa;AAClB,EAAA,IAAI,CAACvmB,UAAU,CAACwmB,gBAAhB,EAAkC;AAChC,IAAA,OAAOllB,SAAP,CAAA;AACD,GAAA;;AAHiB,EAAA,IAIV0D,QAJU,GAIGhF,UAAU,CAAC9X,KAJd,CAIV8c,QAJU,CAAA;AAKlB,EAAA,IAAMkhB,IAAI,GAAGlmB,UAAU,CAACkmB,IAAxB,CAAA;AACA,EAAA,IAAMO,aAAa,GAAGF,QAAQ,CAAC56B,MAAT,CACpB,UAAC+6B,OAAD,EAAA;AAAA,IAAa1hB,OAAAA,QAAQ,CAAC/M,OAAT,CAAiByuB,OAAjB,CAA6BR,IAAAA,IAAI,CAACjuB,OAAL,CAAayuB,OAAb,CAA1C,CAAA;AAAA,GADoB,CAAtB,CAAA;;AAIA,EAAA,IAAI,CAACD,aAAa,CAACt9B,MAAnB,EAA2B;AACzB,IAAA,OAAO,IAAP,CAAA;AACD,GAFD,MAEO;AAAA,IAAA,IAAA,sBAAA,GACkBmY,SAAS,CAAC+V,mBAAV,CAA8BrS,QAA9B,CADlB;AAAA,QACG9U,KADH,0BACGA,KADH;AAAA,QACUC,GADV,0BACUA,GADV,CAAA;;AAEL,IAAMw2B,IAAAA,kBAAkB,GAAG3hB,QAAQ,CAAChN,OAAT,CAAiB9H,KAAK,CAACjI,GAAvB,CAA3B,CAAA;AACA,IAAM2+B,IAAAA,gBAAgB,GAAG5hB,QAAQ,CAAChN,OAAT,CAAiB7H,GAAG,CAAClI,GAArB,CAAzB,CAAA;;AACA,IAAA,IAAI,CAAC0+B,kBAAD,IAAuB,CAACC,gBAA5B,EAA8C;AAC5C,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAMC,eAAe,GAAGJ,aAAa,CAAC,CAAD,CAArC,CAAA;AACA,IAAMK,IAAAA,aAAa,GAAGL,aAAa,CAACA,aAAa,CAACt9B,MAAd,GAAuB,CAAxB,CAAnC,CAAA;AAEA,IAAA,IAAI49B,YAAJ,CAAA;AACA,IAAA,IAAIC,UAAJ,CAAA;;AACA,IAAA,IAAIhiB,QAAQ,CAAC/M,OAAT,CAAiB4uB,eAAjB,CAAJ,EAAuC;AACrCE,MAAAA,YAAY,GAAG/hB,QAAQ,CAACrN,UAAT,CAAoBkvB,eAApB,CAAqC,CAAA,CAArC,CAAf,CAAA;AACD,KAFD,MAEO;AACL,MAAA,IAAMV,WAAW,GAAGD,IAAI,CAAChvB,aAAL,CAAmB2vB,eAAnB,CAApB,CAAA;AACAE,MAAAA,YAAY,GAAGd,uBAAuB,CAACjhB,QAAD,EAAWkhB,IAAX,EAAiBC,WAAjB,CAAvB,CAAqD,CAArD,CAAf,CAAA;AACD,KAAA;;AAED,IAAA,IAAInhB,QAAQ,CAAC/M,OAAT,CAAiB6uB,aAAjB,CAAJ,EAAqC;AACnCE,MAAAA,UAAU,GAAGhiB,QAAQ,CAACrN,UAAT,CAAoBmvB,aAApB,CAAmC,CAAA,CAAnC,CAAb,CAAA;AACD,KAFD,MAEO;AACL,MAAA,IAAMX,YAAW,GAAGD,IAAI,CAAChvB,aAAL,CAAmB4vB,aAAnB,CAApB,CAAA;;AACAE,MAAAA,UAAU,GAAGZ,sBAAsB,CAACphB,QAAD,EAAWkhB,IAAX,EAAiBC,YAAjB,CAAtB,CAAoD,CAApD,CAAb,CAAA;AACD,KAAA;;AAED,IAAA,IAAMc,cAAc,GAAGN,kBAAkB,CAAC,CAAD,CAAzC,CAAA;AACA,IAAA,IAAMO,YAAY,GAAGN,gBAAgB,CAAC,CAAD,CAArC,CAAA;;AAEA,IAAA,IAAIK,cAAc,GAAGD,UAAjB,IAA+BE,YAAY,GAAGH,YAAlD,EAAgE;AAC9D,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAII,IAAAA,GAAG,GAAG7lB,SAAV,CAAA;;AACA,IAAI2lB,IAAAA,cAAc,GAAGF,YAArB,EAAmC;AACjCI,MAAAA,GAAG,GAAGA,GAAG,CAACxH,sBAAJ,CACJ3a,QAAQ,CAACpN,gBAAT,CAA0B,CAACmvB,YAAD,CAA1B,CADI,EAEJ/mB,UAFI,CAAN,CAAA;AAID,KAAA;;AAED,IAAIknB,IAAAA,YAAY,GAAGF,UAAnB,EAA+B;AAC7BG,MAAAA,GAAG,GAAGA,GAAG,CAACjH,kBAAJ,CACJlb,QAAQ,CAACpN,gBAAT,CAA0B,CAACovB,UAAD,CAA1B,CADI,EAEJhnB,UAFI,CAAN,CAAA;AAID,KAAA;;AAED,IAAA,OAAOmnB,GAAP,CAAA;AACD,GAAA;AACF;;AC9ND;;AAqBA,SAASC,mBAAT,CACEpnB,UADF,EAEE/X,GAFF,EAGEo/B,MAHF,EAIE;AAAA,EAAA,IACQriB,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAAA;AAEA,EAAA,IAAMhH,QAAQ,GAAGqpB,MAAM,GACnBriB,QAAQ,CAACxL,eAAT,CAAyBvR,GAAzB,CADmB,GAEnB+c,QAAQ,CAACrL,WAAT,CAAqB1R,GAArB,CAFJ,CAAA;;AAGA,EAAA,IAAI+V,QAAJ,EAAc;AAAA,IAAA,IACJ/V,IADI,GACI+V,QADJ,CACJ/V,GADI,CAAA;AAEZ,IAAM6E,IAAAA,MAAM,GAAGu6B,MAAM,GAAGrpB,QAAQ,CAAClS,IAAT,CAAc3C,MAAjB,GAA0B,CAA/C,CAAA;AACA,IAAOib,OAAAA,SAAS,CAAC5a,MAAV,CAAiB;AAAEvB,MAAAA,GAAG,EAAHA,IAAF;AAAO6E,MAAAA,MAAM,EAANA,MAAAA;AAAP,KAAjB,CAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAOb,SAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMq7B,wBAAwB,GAAG,SAA3BA,wBAA2B,CAC/BtnB,UAD+B,EAE/BiF,KAF+B,EAG5B;AACH,EAAA,IAAIA,KAAK,CAACL,WAAN,EAAJ,EAAyB;AACvB,IAAA,OAAOK,KAAP,CAAA;AACD,GAAA;;AACD,EAAIjF,IAAAA,UAAU,CAACoa,KAAX,CAAiB,gCAAjB,EAAmDnV,KAAnD,CAAJ,EAA+D;AAC7D,IAAA,OAAOA,KAAP,CAAA;AACD,GAAA;;AANE,EAAA,IAOKD,QAPL,GAOkBhF,UAAU,CAAC9X,KAP7B,CAOK8c,QAPL,CAAA;AAAA,EAAA,IAQK/c,GARL,GAQqBgd,KARrB,CAQKhd,GARL;AAAA,MAQU6E,MARV,GAQqBmY,KARrB,CAQUnY,MARV,CAAA;AASH,EAAA,IAAMhB,IAAI,GAAGkZ,QAAQ,CAACtN,OAAT,CAAiBzP,GAAjB,CAAb,CAAA;AACA,EAAMsM,IAAAA,MAAM,GAAGyQ,QAAQ,CAAChJ,SAAT,CAAmB/T,GAAnB,CAAf,CAVG;;AAaH,EAAI6E,IAAAA,MAAM,KAAK,CAAf,EAAkB;AAChB,IAAA,IAAMzF,IAAI,GAAG2d,QAAQ,CAACvM,kBAAT,CAA4BxQ,GAA5B,CAAb,CAAA;;AACA,IAAA,IAAIZ,IAAI,IAAImQ,MAAM,CAACD,QAAP,CAAgBlQ,IAAhB,CAAR,IAAiC2Y,UAAU,CAACoa,KAAX,CAAiB,kBAAjB,EAAqC/yB,IAArC,CAArC,EAAiF;AAC/E,MAAO+/B,OAAAA,mBAAmB,CAACpnB,UAAD,EAAa/X,GAAb,EAAkB,IAAlB,CAAnB,IAA8Cgd,KAArD,CAAA;AACD,KAAA;AACF,GAlBE;;;AAqBH,EAAInZ,IAAAA,IAAI,IAAIgB,MAAM,KAAKhB,IAAI,CAACA,IAAL,CAAU3C,MAAjC,EAAyC;AACvC,IAAA,IAAM9B,KAAI,GAAG2d,QAAQ,CAACpM,cAAT,CAAwB3Q,GAAxB,CAAb,CAAA;;AACA,IAAA,IAAIZ,KAAI,IAAImQ,MAAM,CAACD,QAAP,CAAgBlQ,KAAhB,CAAR,IAAiC2Y,UAAU,CAACoa,KAAX,CAAiB,kBAAjB,EAAqC/yB,KAArC,CAArC,EAAiF;AAC/E,MAAO+/B,OAAAA,mBAAmB,CAACpnB,UAAD,EAAa/X,GAAb,EAAkB,KAAlB,CAAnB,IAA+Cgd,KAAtD,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAI,IAAA,CAAC1Q,MAAD,IAAW,CAACA,MAAM,CAACgD,QAAP,EAAZ,IAAiCyI,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B7lB,MAA3B,CAAjC,IAAuEyL,UAAU,CAACoa,KAAX,CAAiB,kBAAjB,EAAqC7lB,MAArC,CAA3E,EAAyH;AACvH,IAAA,OAAO0Q,KAAP,CAAA;AACD,GAAA;;AACD,EAAInY,IAAAA,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAKyH,MAAM,CAACzI,IAAP,CAAY3C,MAA3C,EAAmD;AACjD,IAAA,OAAO8b,KAAP,CAAA;AACD,GAAA;;AACD,EAAOmiB,OAAAA,mBAAmB,CAACpnB,UAAD,EAAa/X,GAAb,EAAkB6E,MAAM,KAAK,CAA7B,CAAnB,IAAsDmY,KAA7D,CAAA;AACD,CAtCD,CAAA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMsiB,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBvnB,UADyB,EAEzBiF,KAFyB,EAGzBuiB,OAHyB,EAItB;AACH,EAAA,IAAIviB,KAAK,CAACL,WAAN,EAAJ,EAAyB;AACvB,IAAA,OAAOK,KAAP,CAAA;AACD,GAAA;;AAHE,EAAA,IAIKD,QAJL,GAIkBhF,UAAU,CAAC9X,KAJ7B,CAIK8c,QAJL,CAAA;AAAA,EAAA,IAKK/c,GALL,GAKagd,KALb,CAKKhd,GALL,CAAA;AAMH,EAAA,IAAMsM,MAAM,GAAGyQ,QAAQ,CAAC3J,gBAAT,CAA0BpT,GAA1B,CAAf,CAAA;;AACA,EAAA,IAAI,CAACsM,MAAD,IAAW,CAACyL,UAAU,CAACoa,KAAX,CAAiB,QAAjB,EAA2B7lB,MAA3B,CAAhB,EAAoD;AAClD,IAAA,OAAO0Q,KAAP,CAAA;AACD,GAAA;;AACD,EAAOmiB,OAAAA,mBAAmB,CAACpnB,UAAD,EAAa/X,GAAb,EAAkBu/B,OAAlB,CAAnB,IAAiDviB,KAAxD,CAAA;AACD,CAfD,CAAA;;AAiBO,SAASuK,KAAT,CAAexP,UAAf,EAAuC;AAC5C,EAAA,IAAI,CAACA,UAAU,CAAC9X,KAAX,CAAiBu/B,SAAtB,EAAiC;AAC/B,IAAA,OAAOznB,UAAU,CAAC0nB,YAAX,CAAwB,IAAxB,CAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAO1nB,UAAP,CAAA;AACD,CAAA;AAEM,SAAS2nB,IAAT,CAAc3nB,UAAd,EAAsC;AAC3C,EAAA,IAAIA,UAAU,CAAC9X,KAAX,CAAiBu/B,SAArB,EAAgC;AAC9B,IAAA,OAAOznB,UAAU,CAAC0nB,YAAX,CAAwB,KAAxB,CAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAO1nB,UAAP,CAAA;AACD,CAAA;AAEM,SAAS4nB,MAAT,CAAgB5nB,UAAhB,EAAwCsB,SAAxC,EAA8D;AAAA,EAAA,IAChDyC,aADgD,GAC9B/D,UAAU,CAAC9X,KADmB,CAC3DoZ,SAD2D,CAAA;;AAEnE,EAAA,IAAInX,KAAK,CAACmX,SAAD,EAAYyC,aAAZ,CAAT,EAAqC;AACnC,IAAA,OAAO/D,UAAP,CAAA;AACD,GAAA;;AAED,EAAOA,OAAAA,UAAU,CAAC6nB,cAAX,CAA0B;AAC/Br/B,IAAAA,IAAI,EAAE6a,aAAa,CAACykB,YADW;AAE/BxmB,IAAAA,SAAS,EAAEgO,SAAS,CAAC9lB,MAAV,CAAiB8X,SAAjB,CAFoB;AAG/ByC,IAAAA,aAAa,EAAbA,aAAAA;AAH+B,GAA1B,CAAP,CAAA;AAKD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASgkB,UAAT,CAAoB/nB,UAApB,EAA4CsB,SAA5C,EAAkE;AAAA,EACxBtB,IAAAA,iBAAAA,GAAAA,UAAU,CAAC9X,KADa;AAAA,MACpD6b,aADoD,qBAC/DzC,SAD+D;AAAA,MACrC0D,QADqC,qBACrCA,QADqC,CAAA;;AAEvE,EAAA,IAAI7a,KAAK,CAACmX,SAAD,EAAYyC,aAAZ,CAAT,EAAqC;AACnC,IAAA,OAAO/D,UAAP,CAAA;AACD,GAAA;;AAJsE,EAAA,IAMvDgoB,WANuD,GAMpB1mB,SANoB,CAM/DiO,MAN+D;AAAA,MAMnC0Y,UANmC,GAMpB3mB,SANoB,CAM1CkO,KAN0C,CAAA;AAOvE,EAAA,IAAID,MAAM,GAAG+X,wBAAwB,CAACtnB,UAAD,EAAagoB,WAAb,CAArC,CAAA;AACA,EAAA,IAAIxY,KAAK,GAAG8X,wBAAwB,CAACtnB,UAAD,EAAaioB,UAAb,CAApC,CAAA;;AACA,EAAI3mB,IAAAA,SAAS,CAAC4mB,UAAd,EAA0B;AACxB,IAAA,IAAMlK,SAAS,GAAG1c,SAAS,CAAC0c,SAAV,CAAoBhZ,QAApB,CAAlB,CAAA;AACAuK,IAAAA,MAAM,GAAGgY,kBAAkB,CAACvnB,UAAD,EAAauP,MAAb,EAAqByO,SAArB,CAA3B,CAAA;AACAxO,IAAAA,KAAK,GAAG+X,kBAAkB,CAACvnB,UAAD,EAAawP,KAAb,EAAoB,CAACwO,SAArB,CAA1B,CAAA;AACD,GAAA;;AACD,EAAA,IAAMmK,kBAAkB,GAAG7mB,SAAS,CACjCtX,GADwB,CACpB,QADoB,EACVulB,MADU,EAExBvlB,GAFwB,CAEpB,OAFoB,EAEXwlB,KAFW,CAA3B,CAAA;AAIA,EAAOxP,OAAAA,UAAU,CAAC6nB,cAAX,CAA0B;AAC/Br/B,IAAAA,IAAI,EAAE6a,aAAa,CAACykB,YADW;AAE/BxmB,IAAAA,SAAS,EAAE6mB,kBAFoB;AAG/BpkB,IAAAA,aAAa,EAAbA,aAAAA;AAH+B,GAA1B,CAAP,CAAA;AAKD,CAAA;AAEM,SAAS8a,iBAAT,CACL7e,UADK,EAELiF,KAFK,EAGL;AAAA,EAAA,IACQD,QADR,GACqBhF,UAAU,CAAC9X,KADhC,CACQ8c,QADR,CAAA;AAGA,EAAM1D,IAAAA,SAAS,GAAGgO,SAAS,CAACuP,iBAAV,CAA4B7Z,QAA5B,EAAsCC,KAAtC,CAAlB,CAAA;AACA,EAAO3D,OAAAA,SAAS,GAAGtB,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtmB,SAA3B,CAAH,GAA2CtB,UAA3D,CAAA;AACD,CAAA;AAEM,SAASqgB,kBAAT,CACLrgB,UADK,EAELrM,CAFK,EAGL6mB,IAHK,EAIL;AAAA,EAAA,IAFA7mB,CAEA,KAAA,KAAA,CAAA,EAAA;AAFAA,IAAAA,CAEA,GAFI,CAEJ,CAAA;AAAA,GAAA;;AAAA,EAAA,IACQ2N,SADR,GACsBtB,UAAU,CAAC9X,KADjC,CACQoZ,SADR,CAAA;AAEA,EAAA,IAAMgf,KAAK,GAAGsF,iBAAiB,CAAC5lB,UAAD,EAAa,QAAb,EAAuBrM,CAAvB,EAA0B6mB,IAAI,IAAI,QAAlC,CAA/B,CAAA;AACA,EAAOxa,OAAAA,UAAU,CAACooB,OAAX,CAAmBL,UAAnB,EAA+BzH,KAAK,CAAChf,SAAD,CAApC,CAAP,CAAA;AACD,CAAA;AAEM,SAASif,iBAAT,CACLvgB,UADK,EAELrM,CAFK,EAGL6mB,IAHK,EAIL;AAAA,EAAA,IAFA7mB,CAEA,KAAA,KAAA,CAAA,EAAA;AAFAA,IAAAA,CAEA,GAFI,CAEJ,CAAA;AAAA,GAAA;;AAAA,EAAA,IACQ2N,SADR,GACsBtB,UAAU,CAAC9X,KADjC,CACQoZ,SADR,CAAA;AAEA,EAAA,IAAMgf,KAAK,GAAGmF,gBAAgB,CAACzlB,UAAD,EAAa,QAAb,EAAuBrM,CAAvB,EAA0B6mB,IAAI,IAAI,QAAlC,CAA9B,CAAA;AACA,EAAA,IAAM+G,YAAY,GAAGjB,KAAK,CAAChf,SAAD,CAA1B,CAAA;AACA,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CAAmBL,UAAnB,EAA+BxG,YAA/B,CAAP,CAAA;AACD,CAAA;AAEM,SAASpE,YAAT,CACLnd,UADK,EAELjN,IAFK,EAGLjG,MAHK,EAIL;AAAA,EACgCkT,IAAAA,kBAAAA,GAAAA,UAAU,CAAC9X,KAD3C;AAAA,MACQoZ,SADR,sBACQA,SADR;AAAA,MACmB0D,QADnB,sBACmBA,QADnB,CAAA;;AAAA,EAAA,IAAA,qBAAA,GAEgBA,QAAQ,CAACpN,gBAAT,CAA0B7E,IAA1B,CAFhB;AAAA,MAEQ9K,GAFR,yBAEQA,GAFR,CAAA;;AAGA,EAAMs5B,IAAAA,YAAY,GAAGjgB,SAAS,CAAC6b,YAAV,CAAuBl1B,GAAvB,EAA4B6E,MAA5B,CAArB,CAAA;AACA,EAAA,OAAOkT,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BrG,YAA3B,CAAP,CAAA;AACD,CAAA;AAEM,SAAS8G,eAAT,CACLroB,UADK,EAEL/X,GAFK,EAGL6E,MAHK,EAIL;AACA,EAAMiG,IAAAA,IAAI,GAAGiN,UAAU,CAAC9X,KAAX,CAAiB8c,QAAjB,CAA0BrN,UAA1B,CAAqC1P,GAArC,CAAb,CAAA;AACA,EAAO+X,OAAAA,UAAU,CAACooB,OAAX,CAAmBjL,YAAnB,EAAiCpqB,IAAjC,EAAuCjG,MAAvC,CAAP,CAAA;AACD,CAAA;AAEM,SAASw7B,wBAAT,CAAkCtoB,UAAlC,EAA0D;AAAA,EAAA,IACvDsB,SADuD,GACzCtB,UAAU,CAAC9X,KAD8B,CACvDoZ,SADuD,CAAA;AAE/D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,QAAzC,EAAmD,OAAnD,EAA4D,OAA5D,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASuoB,gCAAT,CAA0CvoB,UAA1C,EAAkE;AAAA,EAAA,IAC/DsB,SAD+D,GACjDtB,UAAU,CAAC9X,KADsC,CAC/DoZ,SAD+D,CAAA;AAEvE,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CACExhB,UADF,EAEE,QAFF,EAGE,OAHF,EAIE,UAJF,EAKE,OALF,CAFK,CAAP,CAAA;AAUD,CAAA;AAEM,SAASwoB,0BAAT,CAAoCxoB,UAApC,EAA4D;AAAA,EAAA,IACzDsB,SADyD,GAC3CtB,UAAU,CAAC9X,KADgC,CACzDoZ,SADyD,CAAA;AAEjE,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CACExhB,UADF,EAEE,QAFF,EAGE,KAHF,EAIE,MAJF,EAKE,OALF,CAFK,CAAP,CAAA;AAUD,CAAA;AAEM,SAASmgB,WAAT,CACLngB,UADK,EAELjN,IAFK,EAGLjG,MAHK,EAIL;AAAA,EACgCkT,IAAAA,kBAAAA,GAAAA,UAAU,CAAC9X,KAD3C;AAAA,MACQoZ,SADR,sBACQA,SADR;AAAA,MACmB0D,QADnB,sBACmBA,QADnB,CAAA;;AAAA,EAAA,IAAA,sBAAA,GAEgBA,QAAQ,CAACpN,gBAAT,CAA0B7E,IAA1B,CAFhB;AAAA,MAEQ9K,GAFR,0BAEQA,GAFR,CAAA;;AAGA,EAAMs5B,IAAAA,YAAY,GAAGjgB,SAAS,CAAC6e,WAAV,CAAsBl4B,GAAtB,EAA2B6E,MAA3B,CAArB,CAAA;AACA,EAAA,OAAOkT,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BrG,YAA3B,CAAP,CAAA;AACD,CAAA;AAEM,SAASkH,cAAT,CACLzoB,UADK,EAEL/X,GAFK,EAGL6E,MAHK,EAIL;AACA,EAAMiG,IAAAA,IAAI,GAAGiN,UAAU,CAAC9X,KAAX,CAAiB8c,QAAjB,CAA0BrN,UAA1B,CAAqC1P,GAArC,CAAb,CAAA;AACA,EAAO+X,OAAAA,UAAU,CAACooB,OAAX,CAAmBjI,WAAnB,EAAgCptB,IAAhC,EAAsCjG,MAAtC,CAAP,CAAA;AACD,CAAA;AAEM,SAASwY,MAAT,CAAgBtF,UAAhB,EAAwCjN,IAAxC,EAAoDjG,MAApD,EAAoE;AACzE,EAAA,OAAOkT,UAAU,CACdooB,OADI,CACIjL,YADJ,EACkBpqB,IADlB,EACwBjG,MADxB,CAAA,CAEJs7B,OAFI,CAEIjI,WAFJ,EAEiBptB,IAFjB,EAEuBjG,MAFvB,CAAP,CAAA;AAGD,CAAA;AAEM,SAAS47B,SAAT,CAAmB1oB,UAAnB,EAA2C/X,GAA3C,EAAwD6E,MAAxD,EAAwE;AAC7E,EAAMiG,IAAAA,IAAI,GAAGiN,UAAU,CAAC9X,KAAX,CAAiB8c,QAAjB,CAA0BrN,UAA1B,CAAqC1P,GAArC,CAAb,CAAA;AACA,EAAO+X,OAAAA,UAAU,CAACooB,OAAX,CAAmB9iB,MAAnB,EAA2BvS,IAA3B,EAAiCjG,MAAjC,CAAP,CAAA;AACD,CAAA;AAEM,SAAS0zB,iBAAT,CAA2BxgB,UAA3B,EAAmDrM,CAAnD,EAA0D;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AAAA,EAAA,IACvD2N,SADuD,GACzCtB,UAAU,CAAC9X,KAD8B,CACvDoZ,SADuD,CAAA;AAE/D,EAAMgf,IAAAA,KAAK,GAAGsF,iBAAiB,CAAC5lB,UAAD,EAAa,OAAb,EAAsBrM,CAAtB,EAAyB,QAAzB,CAA/B,CAAA;AACA,EAAOqM,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAASmf,gBAAT,CAA0BzgB,UAA1B,EAAkDrM,CAAlD,EAAyD;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AAAA,EAAA,IACtD2N,SADsD,GACxCtB,UAAU,CAAC9X,KAD6B,CACtDoZ,SADsD,CAAA;AAE9D,EAAMgf,IAAAA,KAAK,GAAGmF,gBAAgB,CAACzlB,UAAD,EAAa,OAAb,EAAsBrM,CAAtB,EAAyB,QAAzB,CAA9B,CAAA;AACA,EAAOqM,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAASqnB,qBAAT,CAA+B3oB,UAA/B,EAAuD;AAAA,EAAA,IACpDsB,SADoD,GACtCtB,UAAU,CAAC9X,KAD2B,CACpDoZ,SADoD,CAAA;AAE5D,EAAMgf,IAAAA,KAAK,GAAGsF,iBAAiB,CAAC5lB,UAAD,EAAa,OAAb,EAAsB,CAAtB,EAAyB,MAAzB,CAA/B,CAAA;AACA,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAASsnB,oBAAT,CAA8B5oB,UAA9B,EAAsD;AAAA,EAAA,IACnDsB,SADmD,GACrCtB,UAAU,CAAC9X,KAD0B,CACnDoZ,SADmD,CAAA;AAE3D,EAAMgf,IAAAA,KAAK,GAAGmF,gBAAgB,CAACzlB,UAAD,EAAa,OAAb,EAAsB,CAAtB,EAAyB,MAAzB,CAA9B,CAAA;AACA,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAASunB,oBAAT,CAA8B7oB,UAA9B,EAAsD;AAAA,EAAA,IACnDsB,SADmD,GACrCtB,UAAU,CAAC9X,KAD0B,CACnDoZ,SADmD,CAAA;AAE3D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,OAAzC,EAAkD,KAAlD,EAAyD,MAAzD,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS8oB,uBAAT,CAAiC9oB,UAAjC,EAAyD;AAAA,EAAA,IACtDsB,SADsD,GACxCtB,UAAU,CAAC9X,KAD6B,CACtDoZ,SADsD,CAAA;AAE9D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,OAAzC,EAAkD,OAAlD,EAA2D,OAA3D,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS+oB,qBAAT,CAA+B/oB,UAA/B,EAAuD;AAAA,EAAA,IACpDsB,SADoD,GACtCtB,UAAU,CAAC9X,KAD2B,CACpDoZ,SADoD,CAAA;AAE5D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,OAAzC,EAAkD,KAAlD,EAAyD,OAAzD,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASgpB,0BAAT,CAAoChpB,UAApC,EAA4D;AAAA,EAAA,IACzDgF,QADyD,GAC5ChF,UAAU,CAAC9X,KADiC,CACzD8c,QADyD,CAAA;AAEjE,EAAA,OAAOhF,UAAU,CAACooB,OAAX,CAAmBvI,sBAAnB,EAA2C7a,QAA3C,CAAP,CAAA;AACD,CAAA;AAEM,SAASikB,wBAAT,CAAkCjpB,UAAlC,EAA0D;AAAA,EAAA,IACvDgF,QADuD,GAC1ChF,UAAU,CAAC9X,KAD+B,CACvD8c,QADuD,CAAA;AAE/D,EAAA,OAAOhF,UAAU,CAACooB,OAAX,CAAmBpI,oBAAnB,EAAyChb,QAAzC,CAAP,CAAA;AACD,CAAA;AAEM,SAAS8b,iBAAT,CAA2B9gB,UAA3B,EAAmDrM,CAAnD,EAA0D;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AAAA,EAAA,IACvD2N,SADuD,GACzCtB,UAAU,CAAC9X,KAD8B,CACvDoZ,SADuD,CAAA;AAE/D,EAAMgf,IAAAA,KAAK,GAAGsF,iBAAiB,CAAC5lB,UAAD,EAAa,OAAb,EAAsBrM,CAAtB,EAAyB,QAAzB,CAA/B,CAAA;AACA,EAAOqM,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAASyf,gBAAT,CAA0B/gB,UAA1B,EAAkDrM,CAAlD,EAAyD;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AAAA,EAAA,IACtD2N,SADsD,GACxCtB,UAAU,CAAC9X,KAD6B,CACtDoZ,SADsD,CAAA;AAE9D,EAAMgf,IAAAA,KAAK,GAAGmF,gBAAgB,CAACzlB,UAAD,EAAa,OAAb,EAAsBrM,CAAtB,EAAyB,QAAzB,CAA9B,CAAA;AACA,EAAOqM,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAAS0f,eAAT,CAAyBhhB,UAAzB,EAAiDrM,CAAjD,EAAwD;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AAAA,EAAA,IACrD2N,SADqD,GACvCtB,UAAU,CAAC9X,KAD4B,CACrDoZ,SADqD,CAAA;AAE7D,EAAMgf,IAAAA,KAAK,GAAGsF,iBAAiB,CAAC5lB,UAAD,EAAa,KAAb,EAAoBrM,CAApB,EAAuB,QAAvB,CAA/B,CAAA;AACA,EAAOqM,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAAS2f,cAAT,CAAwBjhB,UAAxB,EAAgDrM,CAAhD,EAAuD;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AAAA,EAAA,IACpD2N,SADoD,GACtCtB,UAAU,CAAC9X,KAD2B,CACpDoZ,SADoD,CAAA;AAE5D,EAAMgf,IAAAA,KAAK,GAAGmF,gBAAgB,CAACzlB,UAAD,EAAa,KAAb,EAAoBrM,CAApB,EAAuB,QAAvB,CAA9B,CAAA;AACA,EAAOqM,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAP,CAAA;AACD,CAAA;AAEM,SAASuD,YAAT,CAAsB7E,UAAtB,EAA8CrM,CAA9C,EAAqD;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AAC1D,EAAA,OAAOqM,UAAU,CACdooB,OADI,CACI/H,kBADJ,EACwB1sB,CADxB,CAAA,CAEJy0B,OAFI,CAEI5H,iBAFJ,EAEuB7sB,CAFvB,CAAP,CAAA;AAGD,CAAA;AAEM,SAASmR,WAAT,CAAqB9E,UAArB,EAA6CrM,CAA7C,EAAoD;AAAA,EAAA,IAAPA,CAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,CAAO,GAAH,CAAG,CAAA;AAAA,GAAA;;AACzD,EAAA,OAAOqM,UAAU,CAACooB,OAAX,CAAmB7H,iBAAnB,EAAsC5sB,CAAtC,CAAA,CAAyCy0B,OAAzC,CAAiD3H,gBAAjD,EAAmE9sB,CAAnE,CAAP,CAAA;AACD,CAAA;AAEM,SAASu1B,wBAAT,CAAkClpB,UAAlC,EAA0D;AAC/D,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBe,6BAAnB,CAAkDf,CAAAA,OAAlD,CAA0DzH,WAA1D,CAAP,CAAA;AACD,CAAA;AAEM,SAASyI,oBAAT,CAA8BppB,UAA9B,EAAsD;AAC3D,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBiB,uBAAnB,CAA4CjB,CAAAA,OAA5C,CAAoD1I,SAApD,CAAP,CAAA;AACD,CAAA;AAEM,SAAS4J,iBAAT,CAA2BtpB,UAA3B,EAAmD;AACxD,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBmB,oBAAnB,CAAyCnB,CAAAA,OAAzC,CAAiD1I,SAAjD,CAAP,CAAA;AACD,CAAA;AAEM,SAAStC,YAAT,CAAsBpd,UAAtB,EAA8C;AAAA,EAAA,IAC3CsB,SAD2C,GAC7BtB,UAAU,CAAC9X,KADkB,CAC3CoZ,SAD2C,CAAA;AAEnD,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtmB,SAAS,CAAC8b,YAAV,EAA3B,CAAP,CAAA;AACD,CAAA;AAEM,SAASsD,WAAT,CAAqB1gB,UAArB,EAA6C;AAAA,EAAA,IAC1CsB,SAD0C,GAC5BtB,UAAU,CAAC9X,KADiB,CAC1CoZ,SAD0C,CAAA;AAElD,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtmB,SAAS,CAACof,WAAV,EAA3B,CAAP,CAAA;AACD,CAAA;AAEM,SAAS8I,qBAAT,CAA+BxpB,UAA/B,EAAuD;AAC5D,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBxH,iBAAnB,EAAsC5gB,UAAU,CAAC9X,KAAX,CAAiB8c,QAAvD,CAAP,CAAA;AACD,CAAA;AAEM,SAAS4b,iBAAT,CAA2B5gB,UAA3B,EAAmD3Y,IAAnD,EAA+D;AAAA,EAAA,IAC5Dia,SAD4D,GAC9CtB,UAAU,CAAC9X,KADmC,CAC5DoZ,SAD4D,CAAA;AAEpE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACsf,iBAAV,CAA4Bv5B,IAA5B,EAAkC2Y,UAAlC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS2gB,WAAT,CAAqB3gB,UAArB,EAA6C;AAAA,EAClBA,IAAAA,kBAAAA,GAAAA,UAAU,CAAC9X,KADO;AAAA,MAC1C8c,QAD0C,sBAC1CA,QAD0C;AAAA,MAChC1D,SADgC,sBAChCA,SADgC,CAAA;AAElD,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtmB,SAAS,CAACqf,WAAV,CAAsB3b,QAAtB,CAA3B,CAAP,CAAA;AACD,CAAA;AAEM,SAAS0a,SAAT,CAAmB1f,UAAnB,EAA2C;AAAA,EAChBA,IAAAA,kBAAAA,GAAAA,UAAU,CAAC9X,KADK;AAAA,MACxC8c,QADwC,sBACxCA,QADwC;AAAA,MAC9B1D,SAD8B,sBAC9BA,SAD8B,CAAA;AAEhD,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtmB,SAAS,CAACoe,SAAV,CAAoB1a,QAApB,CAA3B,CAAP,CAAA;AACD,CAAA;AAEM,SAASwY,mBAAT,CAA6Bxd,UAA7B,EAAqD;AAC1D,EAAA,OAAOA,UAAU,CACdooB,OADI,CACIlI,kBADJ,EACwBlgB,UAAU,CAAC9X,KAAX,CAAiB8c,QADzC,CAAA,CAEJojB,OAFI,CAEI1I,SAFJ,CAAP,CAAA;AAGD,CAAA;AAEM,SAAS+J,mBAAT,CAA6BzpB,UAA7B,EAAqD;AAC1D,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBsB,wBAAnB,CAA6CtB,CAAAA,OAA7C,CAAqDzH,WAArD,CAAP,CAAA;AACD,CAAA;AAEM,SAASgJ,kBAAT,CAA4B3pB,UAA5B,EAAoD;AACzD,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBwB,uBAAnB,CAA4CxB,CAAAA,OAA5C,CAAoDzH,WAApD,CAAP,CAAA;AACD,CAAA;AAEM,SAASkJ,gBAAT,CAA0B7pB,UAA1B,EAAkD;AACvD,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmB0B,mBAAnB,CAAwC1B,CAAAA,OAAxC,CAAgD1I,SAAhD,CAAP,CAAA;AACD,CAAA;AAEM,SAASjb,eAAT,CAAyBzE,UAAzB,EAAiD3Y,IAAjD,EAA6D;AAAA,EAAA,IAC1Dia,SAD0D,GAC5CtB,UAAU,CAAC9X,KADiC,CAC1DoZ,SAD0D,CAAA;AAElE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACmD,eAAV,CAA0Bpd,IAA1B,EAAgC2Y,UAAhC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS0pB,wBAAT,CAAkC1pB,UAAlC,EAA0D;AAAA,EAAA,IACvDsB,SADuD,GACzCtB,UAAU,CAAC9X,KAD8B,CACvDoZ,SADuD,CAAA;AAE/D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,OAAzC,EAAkD,OAAlD,EAA2D,QAA3D,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS4pB,uBAAT,CAAiC5pB,UAAjC,EAAyD;AAAA,EAAA,IACtDsB,SADsD,GACxCtB,UAAU,CAAC9X,KAD6B,CACtDoZ,SADsD,CAAA;AAE9D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,OAAzC,EAAkD,OAAlD,EAA2D,OAA3D,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS+pB,+BAAT,CAAyC/pB,UAAzC,EAAiE;AAAA,EAAA,IAC9DsB,SAD8D,GAChDtB,UAAU,CAAC9X,KADqC,CAC9DoZ,SAD8D,CAAA;AAEtE,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CACExhB,UADF,EAEE,OAFF,EAGE,OAHF,EAIE,UAJF,EAKE,OALF,CAFK,CAAP,CAAA;AAUD,CAAA;AAEM,SAAS8pB,mBAAT,CAA6B9pB,UAA7B,EAAqD;AAAA,EAAA,IAClDsB,SADkD,GACpCtB,UAAU,CAAC9X,KADyB,CAClDoZ,SADkD,CAAA;AAE1D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,KAAzC,EAAgD,KAAhD,EAAuD,OAAvD,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASgd,qBAAT,CAA+Bhd,UAA/B,EAAuD;AAAA,EAC5BA,IAAAA,kBAAAA,GAAAA,UAAU,CAAC9X,KADiB;AAAA,MACpD8c,QADoD,sBACpDA,QADoD;AAAA,MAC1C1D,SAD0C,sBAC1CA,SAD0C,CAAA;AAE5D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACue,sBAAV,CAAiC7a,QAAjC,EAA2ChF,UAA3C,CAAuD0gB,CAAAA,WAAvD,EAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASZ,oBAAT,CAA8B9f,UAA9B,EAAsD3Y,IAAtD,EAAkE;AAAA,EAAA,IAC/Dia,SAD+D,GACjDtB,UAAU,CAAC9X,KADsC,CAC/DoZ,SAD+D,CAAA;AAEvE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACwe,oBAAV,CAA+Bz4B,IAA/B,EAAqC2Y,UAArC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS4f,uBAAT,CAAiC5f,UAAjC,EAAyD3Y,IAAzD,EAAqE;AAAA,EAAA,IAClEia,SADkE,GACpDtB,UAAU,CAAC9X,KADyC,CAClEoZ,SADkE,CAAA;AAE1E,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACse,uBAAV,CAAkCv4B,IAAlC,EAAwC2Y,UAAxC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS+f,qBAAT,CAA+B/f,UAA/B,EAAuD3Y,IAAvD,EAAmE;AAAA,EAAA,IAChEia,SADgE,GAClDtB,UAAU,CAAC9X,KADuC,CAChEoZ,SADgE,CAAA;AAExE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACye,qBAAV,CAAgC14B,IAAhC,EAAsC2Y,UAAtC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS6f,sBAAT,CAAgC7f,UAAhC,EAAwD3Y,IAAxD,EAAoE;AAAA,EAAA,IACjEia,SADiE,GACnDtB,UAAU,CAAC9X,KADwC,CACjEoZ,SADiE,CAAA;AAEzE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACue,sBAAV,CAAiCx4B,IAAjC,EAAuC2Y,UAAvC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASggB,oBAAT,CAA8BhgB,UAA9B,EAAsD3Y,IAAtD,EAAkE;AAAA,EAAA,IAC/Dia,SAD+D,GACjDtB,UAAU,CAAC9X,KADsC,CAC/DoZ,SAD+D,CAAA;AAEvE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC0e,oBAAV,CAA+B34B,IAA/B,EAAqC2Y,UAArC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASgqB,uBAAT,CAAiChqB,UAAjC,EAAyD;AAC9D,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmB6B,4BAAnB,CAAiD7B,CAAAA,OAAjD,CAAyDzH,WAAzD,CAAP,CAAA;AACD,CAAA;AAEM,SAASuJ,qBAAT,CAA+BlqB,UAA/B,EAAuD;AAC5D,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmB+B,wBAAnB,CAA6C/B,CAAAA,OAA7C,CAAqD1I,SAArD,CAAP,CAAA;AACD,CAAA;AAEM,SAAS0K,0BAAT,CAAoCpqB,UAApC,EAA4D;AACjE,EAAOA,OAAAA,UAAU,CACdooB,OADI,CACI2B,+BADJ,CAEJ3B,CAAAA,OAFI,CAEIzH,WAFJ,CAAP,CAAA;AAGD,CAAA;AAEM,SAAS0J,sBAAT,CAAgCrqB,UAAhC,EAAwD;AAC7D,EAAOA,OAAAA,UAAU,CAACooB,OAAX,CAAmBkC,yBAAnB,CAA8ClC,CAAAA,OAA9C,CAAsD1I,SAAtD,CAAP,CAAA;AACD,CAAA;AAEM,SAASnb,iBAAT,CAA2BvE,UAA3B,EAAmD3Y,IAAnD,EAA+D;AAAA,EAAA,IAC5Dia,SAD4D,GAC9CtB,UAAU,CAAC9X,KADmC,CAC5DoZ,SAD4D,CAAA;AAEpE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACiD,iBAAV,CAA4Bld,IAA5B,EAAkC2Y,UAAlC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAAS2f,sBAAT,CAAgC3f,UAAhC,EAAwD3Y,IAAxD,EAAoE;AAAA,EAAA,IACjEia,SADiE,GACnDtB,UAAU,CAAC9X,KADwC,CACjEoZ,SADiE,CAAA;AAEzE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACqe,sBAAV,CAAiCt4B,IAAjC,EAAuC2Y,UAAvC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASigB,oBAAT,CAA8BjgB,UAA9B,EAAsD3Y,IAAtD,EAAkE;AAAA,EAAA,IAC/Dia,SAD+D,GACjDtB,UAAU,CAAC9X,KADsC,CAC/DoZ,SAD+D,CAAA;AAEvE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC2e,oBAAV,CAA+B54B,IAA/B,EAAqC2Y,UAArC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASkgB,kBAAT,CAA4BlgB,UAA5B,EAAoD3Y,IAApD,EAAgE;AAAA,EAAA,IAC7Dia,SAD6D,GAC/CtB,UAAU,CAAC9X,KADoC,CAC7DoZ,SAD6D,CAAA;AAErE,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC4e,kBAAV,CAA6B74B,IAA7B,EAAmC2Y,UAAnC,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASiqB,4BAAT,CAAsCjqB,UAAtC,EAA8D;AAAA,EAAA,IAC3DsB,SAD2D,GAC7CtB,UAAU,CAAC9X,KADkC,CAC3DoZ,SAD2D,CAAA;AAEnE,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CACExhB,UADF,EAEE,OAFF,EAGE,KAHF,EAIE,UAJF,EAKE,MALF,CAFK,CAAP,CAAA;AAUD,CAAA;AAEM,SAASmpB,6BAAT,CAAuCnpB,UAAvC,EAA+D;AAAA,EAAA,IAC5DsB,SAD4D,GAC9CtB,UAAU,CAAC9X,KADmC,CAC5DoZ,SAD4D,CAAA;AAEpE,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CACExhB,UADF,EAEE,OAFF,EAGE,KAHF,EAIE,UAJF,EAKE,OALF,CAFK,CAAP,CAAA;AAUD,CAAA;AAEM,SAASupB,oBAAT,CAA8BvpB,UAA9B,EAAsD;AAAA,EAAA,IACnDsB,SADmD,GACrCtB,UAAU,CAAC9X,KAD0B,CACnDoZ,SADmD,CAAA;AAE3D,EAAA,OAAOtB,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAAC6f,kBAAV,CAA6BnhB,UAA7B,EAAyC,KAAzC,EAAgD,KAAhD,EAAuD,QAAvD,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASmqB,wBAAT,CAAkCnqB,UAAlC,EAA0D;AAAA,EAAA,IACvDsB,SADuD,GACzCtB,UAAU,CAAC9X,KAD8B,CACvDoZ,SADuD,CAAA;AAE/D,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CACExhB,UADF,EAEE,KAFF,EAGE,OAHF,EAIE,MAJF,EAKE,MALF,CAFK,CAAP,CAAA;AAUD,CAAA;AAEM,SAASsqB,yBAAT,CAAmCtqB,UAAnC,EAA2D;AAAA,EAAA,IACxDsB,SADwD,GAC1CtB,UAAU,CAAC9X,KAD+B,CACxDoZ,SADwD,CAAA;AAEhE,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CACExhB,UADF,EAEE,KAFF,EAGE,OAHF,EAIE,MAJF,EAKE,OALF,CAFK,CAAP,CAAA;AAUD,CAAA;AAEM,SAASqpB,uBAAT,CAAiCrpB,UAAjC,EAAyD;AAAA,EAAA,IACtDsB,SADsD,GACxCtB,UAAU,CAAC9X,KAD6B,CACtDoZ,SADsD,CAAA;AAE9D,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CACLR,MADK,EAELtmB,SAAS,CAACkgB,sBAAV,CAAiCxhB,UAAjC,EAA6C,KAA7C,EAAoD,KAApD,EAA2D,MAA3D,EAAmE,OAAnE,CAFK,CAAP,CAAA;AAID,CAAA;AAEM,SAASuqB,gBAAT,CAA0BvqB,UAA1B,EAAkD;AAAA,EAAA,IAC/CsB,SAD+C,GACjCtB,UAAU,CAAC9X,KADsB,CAC/CoZ,SAD+C,CAAA;AAEvD,EAAA,IAAMgf,KAAK,GAAGuF,qBAAqB,CAAC7lB,UAAD,EAAa,OAAb,CAAnC,CAAA;AACA,EAAA,OAAOA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAA,CAA6C8mB,OAA7C,CAAqD1H,WAArD,CAAP,CAAA;AACD,CAAA;AAEM,SAAS8J,eAAT,CAAyBxqB,UAAzB,EAAiD;AAAA,EAAA,IAC9CsB,SAD8C,GAChCtB,UAAU,CAAC9X,KADqB,CAC9CoZ,SAD8C,CAAA;AAEtD,EAAA,IAAMgf,KAAK,GAAGyF,oBAAoB,CAAC/lB,UAAD,EAAa,OAAb,CAAlC,CAAA;AACA,EAAA,OAAOA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BtH,KAAK,CAAChf,SAAD,CAAhC,CAAA,CAA6C8mB,OAA7C,CAAqD1H,WAArD,CAAP,CAAA;AACD;;ACjqBD;AACA;AACA;AACA;AASA;AACA;AACA;AACA;;AACO,SAAS+J,eAAT,CAAyBzqB,UAAzB,EAAiD/X,GAAjD,EAA8D;AAAA,EAAA,IAC3DC,KAD2D,GACjD8X,UADiD,CAC3D9X,KAD2D,CAAA;AAAA,EAAA,IAE3D8c,QAF2D,GAE9C9c,KAF8C,CAE3D8c,QAF2D,CAAA;AAGnE,EAAA,IAAMjS,IAAI,GAAGiS,QAAQ,CAACrN,UAAT,CAAoB1P,GAApB,CAAb,CAAA;AACA,EAAA,OAAO+X,UAAU,CAACooB,OAAX,CAAmBsC,gBAAnB,EAAqC33B,IAArC,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;;AACO,SAAS23B,gBAAT,CAA0B1qB,UAA1B,EAAkDjN,IAAlD,EAA8D;AAAA,EAAA,IACjD43B,MADiD,GACtC3qB,UAAU,CAAC9X,KAD2B,CAC3D8c,QAD2D,CAAA;AAEnE,EAAA,IAAM3d,IAAI,GAAGsjC,MAAM,CAAC/yB,gBAAP,CAAwB7E,IAAxB,CAAb,CAAA;AAFmE,EAInCiN,IAAAA,iBAAAA,GAAAA,UAAU,CAAC9X,KAJwB;AAAA,MAI3DoZ,SAJ2D,qBAI3DA,SAJ2D;AAAA,MAIhD0D,QAJgD,qBAIhDA,QAJgD,CAAA;AAKnE,EAAA,IAAM4D,IAAI,GAAG5D,QAAQ,CAACjM,qBAAT,CAA+BhG,IAA/B,CAAb,CAAA;AACA,EAAA,IAAMrG,IAAI,GAAGsY,QAAQ,CAAC5L,iBAAT,CAA2BrG,IAA3B,CAAb,CAAA;;AACA,EAAA,IAAM63B,QAAQ,GAAG,SAAXA,QAAW,CAAC3lB,KAAD,EAAkC;AACjD,IAAI5d,IAAAA,IAAI,CAACY,GAAL,KAAagd,KAAK,CAAChd,GAAnB,IAA2BZ,IAAI,CAAC2B,SAAL,EAAoB3B,IAAAA,IAAI,CAAC4Q,OAAL,CAAagN,KAAK,CAAChd,GAAnB,CAAnD,EAA6E;AAC3E,MAAA,IAAI2gB,IAAJ,EAAU;AACR,QAAA,OAAO5I,UAAU,CAACoa,KAAX,CAAiBwB,gBAAjB,EAAmChT,IAAnC,CAAP,CAAA;AACD,OAAA;;AACD,MAAA,IAAIlc,IAAJ,EAAU;AACR,QAAA,OAAOsT,UAAU,CAACoa,KAAX,CAAiBuB,kBAAjB,EAAqCjvB,IAArC,CAAP,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAOuY,KAAP,CAAA;AACD,GAVD,CAAA;;AAWA,EAAIsc,IAAAA,YAAY,GAAGjgB,SAAnB,CAAA;;AACA,EAAIsH,IAAAA,IAAI,IAAIlc,IAAZ,EAAkB;AAChB;AACA;AACA;AACA,IAAA,IAAM6iB,MAAM,GAAGqb,QAAQ,CAACtpB,SAAS,CAACiO,MAAX,CAAvB,CAAA;AACA,IAAA,IAAMC,KAAK,GAAGob,QAAQ,CAACtpB,SAAS,CAACkO,KAAX,CAAtB,CAAA;AACA+R,IAAAA,YAAY,GAAGjS,SAAS,CAAC9lB,MAAV,CAAiB;AAC9B+lB,MAAAA,MAAM,EAANA,MAD8B;AAE9BC,MAAAA,KAAK,EAALA,KAAAA;AAF8B,KAAjB,CAAf,CAAA;AAID,GA7BkE;;;AA+BnExP,EAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BrG,YAA3B,CAAA,CAAA;AACAvhB,EAAAA,UAAU,CAAC6nB,cAAX,CAA0B;AACxBr/B,IAAAA,IAAI,EAAE6a,aAAa,CAACwnB,UADI;AAExB93B,IAAAA,IAAI,EAAJA,IAFwB;AAGxB1L,IAAAA,IAAI,EAAEA,IAAAA;AAHkB,GAA1B,CAAA,CAAA;;AAKA,EAAIk6B,IAAAA,YAAY,KAAKjgB,SAArB,EAAgC;AAC9B,IAAA,OAAOtB,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2BrG,YAA3B,CAAP,CAAA;AACD,GAAA;;AACD,EAAA,OAAOvhB,UAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;;AACO,SAAS8qB,eAAT,CACL9qB,UADK,EAEL/X,GAFK,EAGL6E,MAHK,EAILhB,IAJK,EAKL;AAAA,EAAA,IACQ5D,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ8c,QAFR,GAEqB9c,KAFrB,CAEQ8c,QAFR,CAAA;AAGA,EAAA,IAAMjS,IAAI,GAAGiS,QAAQ,CAACrN,UAAT,CAAoB1P,GAApB,CAAb,CAAA;AACA,EAAO+X,OAAAA,UAAU,CAACooB,OAAX,CAAmB2C,gBAAnB,EAAqCh4B,IAArC,EAA2CjG,MAA3C,EAAmDhB,IAAnD,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;;AACO,SAASi/B,gBAAT,CACL/qB,UADK,EAELjN,IAFK,EAGLjG,MAHK,EAILhB,IAJK,EAKL;AAAA,EAAA,IACQ5D,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ2H,WAFR,GAEkC3H,KAFlC,CAEQ2H,WAFR;AAAA,MAEqBmV,QAFrB,GAEkC9c,KAFlC,CAEqB8c,QAFrB,CAAA;AAGA,EAAA,IAAM3d,IAAI,GAAG2d,QAAQ,CAAClN,gBAAT,CAA0B/E,IAA1B,CAAb,CAAA;AAEA,EAAIi4B,IAAAA,OAAO,GAAG,KAAd,CAAA;AALA,EAAA,IAMQ/iC,GANR,GAMwBZ,IANxB,CAMQY,GANR;AAAA,MAMamE,MANb,GAMwB/E,IANxB,CAMa+E,MANb,CAAA;AAOA,EAAM6a,IAAAA,IAAI,GAAGna,MAAb,CAAA;AACA,EAAM8sB,IAAAA,EAAE,GAAG9sB,MAAM,GAAGhB,IAAI,CAAC3C,MAAzB,CARA;;AAWA,EAAM8hC,IAAAA,IAAI,GAAGp7B,WAAW,CAAClE,MAAZ,CAAmB,UAACsE,GAAD,EAAS;AAAA,IAAA,IAC/BC,KAD+B,GACVD,GADU,CAC/BC,KAD+B;AAAA,QACxBC,GADwB,GACVF,GADU,CACxBE,GADwB;AAAA,QACnBjG,IADmB,GACV+F,GADU,CACnB/F,IADmB,CAAA;AAEvC,IAAMghC,IAAAA,QAAQ,GAAGlrB,UAAU,CAACoa,KAAX,CAAiB,UAAjB,EAA6BlwB,IAA7B,CAAjB,CAAA;AACA,IAAA,IAAI,CAACghC,QAAL,EAAe,OAAO,IAAP,CAAA;AACf,IAAA,IAAIh7B,KAAK,CAACjI,GAAN,KAAcA,GAAlB,EAAuB,OAAO,IAAP,CAAA;;AAEvB,IAAA,IAAIiI,KAAK,CAACpD,MAAN,GAAema,IAAf,KAAwB9W,GAAG,CAAClI,GAAJ,KAAYA,GAAZ,IAAmBkI,GAAG,CAACrD,MAAJ,GAAama,IAAxD,CAAJ,EAAmE;AACjE+jB,MAAAA,OAAO,GAAG,IAAV,CAAA;AACA,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAI96B,KAAK,CAACpD,MAAN,GAAe8sB,EAAf,KAAsBzpB,GAAG,CAAClI,GAAJ,KAAYA,GAAZ,IAAmBkI,GAAG,CAACrD,MAAJ,GAAa8sB,EAAtD,CAAJ,EAA+D;AAC7DoR,MAAAA,OAAO,GAAG,IAAV,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,IAAP,CAAA;AACD,GAjBY,CAAb,CAAA;;AAmBA,EAAA,IAAIA,OAAJ,EAAa;AACXhrB,IAAAA,UAAU,CAACmrB,cAAX,CAA0BF,IAA1B,CAAA,CAAA;AACD,GAAA;;AAED,EAAMG,IAAAA,QAA+B,GAAG,EAAxC,CAAA;AACA,EAAIC,IAAAA,MAAM,GAAG,CAAb,CAAA;AAEAj/B,EAAAA,MAAM,CAAC4D,OAAP,CAAe,UAACvD,IAAD,EAAU;AACvB,IAAM6+B,IAAAA,WAAW,GAAGD,MAApB,CAAA;AACA,IAAME,IAAAA,SAAS,GAAGF,MAAM,GAAG5+B,IAAI,CAACX,IAAL,CAAU3C,MAArC,CAAA;AAEAkiC,IAAAA,MAAM,IAAI5+B,IAAI,CAACX,IAAL,CAAU3C,MAApB,CAJuB;;AAOvB,IAAIoiC,IAAAA,SAAS,GAAGtkB,IAAZ,IAAoB2S,EAAE,GAAG0R,WAA7B,EAA0C,OAPnB;;AAUvB,IAAMp7B,IAAAA,KAAK,GAAG+C,IAAI,CAAC8d,GAAL,CAASua,WAAT,EAAsBrkB,IAAtB,CAAd,CAAA;AACA,IAAM9W,IAAAA,GAAG,GAAG8C,IAAI,CAACC,GAAL,CAASq4B,SAAT,EAAoB3R,EAApB,CAAZ,CAAA;AACA,IAAMjR,IAAAA,MAAM,GAAGthB,IAAI,CAACyE,IAAL,CAAUlB,KAAV,CAAgBsF,KAAhB,EAAuBC,GAAvB,CAAf,CAAA;AAEAi7B,IAAAA,QAAQ,CAAC18B,IAAT,CAAc;AACZlG,MAAAA,IAAI,EAAE6a,aAAa,CAACmoB,UADR;AAEZz4B,MAAAA,IAAI,EAAJA,IAFY;AAGZjG,MAAAA,MAAM,EAAEoD,KAHI;AAIZpE,MAAAA,IAAI,EAAE6c,MAJM;AAKZ5c,MAAAA,KAAK,EAAEU,IAAI,CAACV,KAAAA;AALA,KAAd,CAAA,CAAA;AAOD,GArBD,CAAA,CAAA;AAuBAiU,EAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2B1/B,KAAK,CAACoZ,SAAjC,CAAA,CAAA;AACA8pB,EAAAA,QAAQ,CAAC5yB,OAAT,GAAmBxI,OAAnB,CAA2B,UAACy7B,EAAD,EAAA;AAAA,IAAA,OAAQzrB,UAAU,CAAC6nB,cAAX,CAA0B4D,EAA1B,CAAR,CAAA;AAAA,GAA3B,CAAA,CAAA;AACA,EAAA,OAAOzrB,UAAP,CAAA;AACD;;AC/JD;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;;AACO,SAAS0rB,aAAT,CACL1rB,UADK,EAEL/X,GAFK,EAGLsQ,SAHK,EAIL9N,KAJK,EAKL;AAAA,EAAA,IACQvC,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ8c,QAFR,GAEqB9c,KAFrB,CAEQ8c,QAFR,CAAA;AAGA,EAAA,IAAMjS,IAAI,GAAGiS,QAAQ,CAACrN,UAAT,CAAoB1P,GAApB,CAAb,CAAA;AACA,EAAA,IAAMgR,UAAU,GAAG+L,QAAQ,CAACrN,UAAT,CAAoBY,SAApB,CAAnB,CAAA;AACA,EAAOyH,OAAAA,UAAU,CAACooB,OAAX,CAAmBuD,cAAnB,EAAmC54B,IAAnC,EAAyCkG,UAAzC,EAAqDxO,KAArD,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;;AACO,SAASkhC,cAAT,CACL3rB,UADK,EAELjN,IAFK,EAGLkG,UAHK,EAILxO,KAJK,EAKL;AACA,EAAIoI,IAAAA,IAAI,CAAC5I,OAAL,CAAa8I,IAAb,EAAmBkG,UAAnB,CAAJ,EAAoC;AAClC,IAAA,OAAO+G,UAAP,CAAA;AACD,GAAA;;AAED,EAAA,IAAMnM,OAAO,GAAGoF,UAAU,CAACvI,MAAX,CAAkBjG,KAAlB,CAAhB,CAAA;;AAEA,EAAIoI,IAAAA,IAAI,CAAC5I,OAAL,CAAa8I,IAAb,EAAmBc,OAAnB,CAAJ,EAAiC;AAC/B,IAAA,OAAOmM,UAAP,CAAA;AACD,GAAA;;AAED,EAAOA,OAAAA,UAAU,CAAC6nB,cAAX,CAA0B;AAC/Br/B,IAAAA,IAAI,EAAE6a,aAAa,CAACuoB,QADW;AAE/B74B,IAAAA,IAAI,EAAJA,IAF+B;AAG/Bc,IAAAA,OAAO,EAAPA,OAAAA;AAH+B,GAA1B,CAAP,CAAA;AAKD;;AClDD;AASO,SAASg4B,cAAT,CAAwB7rB,UAAxB,EAAgD;AAAA,EAAA,IAC7C9X,KAD6C,GACnC8X,UADmC,CAC7C9X,KAD6C,CAAA;AAAA,EAAA,IAE7CoZ,SAF6C,GAE/BpZ,KAF+B,CAE7CoZ,SAF6C,CAAA;;AAIrD,EAAIA,IAAAA,SAAS,CAAC4mB,UAAd,EAA0B;AACxBloB,IAAAA,UAAU,CAACooB,OAAX,CAAmB0D,GAAnB,CAAA,CAAA;AACD,GAAA;AACF,CAAA;AAED;AACA;AACA;;AACO,SAASC,qBAAT,CACL/rB,UADK,EAELkU,KAFK,EAGM;AAAA,EAAA,IACHhsB,KADG,GACO8X,UADP,CACH9X,KADG,CAAA;AAAA,EAAA,IAEH8c,QAFG,GAEU9c,KAFV,CAEH8c,QAFG,CAAA;;AAAA,EAAA,IAAA,WAAA,GAGYkP,KAAK,CAACoL,IAAN,CAAWta,QAAX,CAHZ;AAAA,MAGH9U,KAHG,eAGHA,KAHG;AAAA,MAGIC,GAHJ,eAGIA,GAHJ,CAAA;;AAIX,EAAI+jB,IAAAA,KAAK,CAACgU,UAAV,EAAsB;AACpBloB,IAAAA,UAAU,CAACooB,OAAX,CAAmB,eAAnB,EAAoClU,KAApC,CAAA,CAAA;AACD,GAAA;;AANU,EAAA,IAQO8X,WARP,GAQuBhsB,UAAU,CAAC9X,KARlC,CAQH8c,QARG,CAAA;;AASX,EAAIgnB,IAAAA,WAAW,CAACt0B,OAAZ,CAAoBxH,KAAK,CAACjI,GAA1B,CAAJ,EAAoC;AAClCisB,IAAAA,KAAK,GAAGA,KAAK,CAACnqB,KAAN,CAAY;AAClBwlB,MAAAA,MAAM,EAAErf,KADU;AAElBsf,MAAAA,KAAK,EAAEtf,KAAAA;AAFW,KAAZ,CAAR,CAAA;AAID,GALD,MAKO;AACL,IAAA,IAAM+U,KAAK,GAAG9U,GAAG,CAACwU,WAAJ,EAAoBxU,GAAAA,GAAG,CAACnG,GAAJ,CAAQ,QAAR,EAAkB,CAAlB,CAApB,GAA2CmG,GAAzD,CAAA;AACA+jB,IAAAA,KAAK,GAAGA,KAAK,CAACnqB,KAAN,CAAY;AAClBwlB,MAAAA,MAAM,EAAEtK,KADU;AAElBuK,MAAAA,KAAK,EAAEvK,KAAAA;AAFW,KAAZ,CAAR,CAAA;AAID,GAAA;;AAED,EAAA,OAAOiP,KAAP,CAAA;AACD;;AC3CD,IAAM+X,MAAM,GAAG,eAAf,CAAA;AAEO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAC7kC,IAAD,EAAa0L,IAAb,EAAyBV,QAAzB,EAAA;AAAA,EAAA,OAAA,EAAA,GACnB45B,MADmB,IACV5kC,IAAI,CAAC0B,MAAL,EAAA,GAAgB,MAAhB,GAAyB,MADf,UACyBg5B,IAAI,CAACC,SAAL,CAAe,CAC5DjvB,IAD4D,EAE5DV,QAF4D,CAAf,CADzB,CAAA;AAAA,CAAjB;;ACNP;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS85B,qBAAT,CACLnsB,UADK,EAEL/X,GAFK,EAGLmkC,OAHK,EAILC,UAJK,EAKL;AAAA,EAAA,IACQnkC,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ8c,QAFR,GAEqB9c,KAFrB,CAEQ8c,QAFR,CAAA;AAGA,EAAA,IAAMjS,IAAI,GAAGiS,QAAQ,CAACrN,UAAT,CAAoB1P,GAApB,CAAb,CAAA;AACA,EAAA,IAAMqkC,QAAQ,GAAGtnB,QAAQ,CAACrN,UAAT,CAAoBy0B,OAApB,CAAjB,CAAA;AACA,EAAOpsB,OAAAA,UAAU,CAACooB,OAAX,CACL,wBADK,EAELr1B,IAFK,EAGLu5B,QAHK,EAILD,UAJK,CAAP,CAAA;AAMD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASE,sBAAT,CACLvsB,UADK,EAELjN,IAFK,EAGLu5B,QAHK,EAILD,UAJK,EAKL;AACA,EAAA,IAAIliC,KAAK,CAAC4I,IAAD,EAAOu5B,QAAP,CAAT,EAA2B;AACzBtsB,IAAAA,UAAU,CAACooB,OAAX,CAAmBoE,eAAnB,EAAoCF,QAApC,EAA8CD,UAA9C,CAAA,CAAA;AACA,IAAA,OAAOrsB,UAAP,CAAA;AACD,GAAA;;AAJD,EAAA,IAMQ9X,KANR,GAMkB8X,UANlB,CAMQ9X,KANR,CAAA;AAAA,EAAA,IAOQ8c,QAPR,GAOqB9c,KAPrB,CAOQ8c,QAPR,CAQA;;AACA,EAAA,IAAM3d,IAAI,GAAG2d,QAAQ,CAACpN,gBAAT,CAA0B7E,IAA1B,CAAb,CAAA;AACA,EAAA,IAAMjH,IAAI,GAAGkZ,QAAQ,CAACpN,gBAAT,CAA0B00B,QAA1B,CAAb,CAAA;AACA,EAAA,IAAMr3B,SAAS,GAAG+P,QAAQ,CAACvK,kBAAT,CAA4B6xB,QAA5B,CAAlB,CAAA;AACA,EAAA,IAAIG,QAAQ,GAAGx3B,SAAS,CAACrK,KAAV,EAAf,CAAA;AACA6hC,EAAAA,QAAQ,GAAGC,SAAS,CAACD,QAAD,EAAW,UAAC9hC,CAAD,EAAA;AAAA,IAAA,OAAOA,CAAC,CAAC1C,GAAF,KAAUZ,IAAI,CAAEY,GAAvB,CAAA;AAAA,GAAX,CAAT,CAAgDuQ,OAAhD,EAAX,CAAA;AAEA,EAAA,OAAOwH,UAAU,CAAC2sB,kBAAX,CAA8B,YAAM;AACzC3sB,IAAAA,UAAU,CAACooB,OAAX,CAAmBwE,cAAnB,EAAmC9gC,IAAI,CAAC7D,GAAxC,EAA6CokC,UAA7C,CAAA,CAAA;AACA,IAAIr3B,IAAAA,QAAQ,GAAGlJ,IAAf,CAAA;AACA2gC,IAAAA,QAAQ,CAACz8B,OAAT,CAAiB,UAACmM,OAAD,EAAa;AAC5B6D,MAAAA,UAAU,CAACooB,OAAX,CACEwE,cADF,EAEEzwB,OAAO,CAAClU,GAFV,EAGEkU,OAAO,CAACjT,KAAR,CAAc4T,OAAd,CAAsB9H,QAAtB,IAAkC,CAHpC,CAAA,CAAA;AAKAA,MAAAA,QAAQ,GAAGmH,OAAX,CAAA;AACD,KAPD,CAAA,CAAA;AAQD,GAXM,CAAP,CAAA;AAYD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASywB,cAAT,CACL5sB,UADK,EAEL/X,GAFK,EAGLoK,QAHK,EAIL;AAAA,EAAA,IACQnK,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ8c,QAFR,GAEqB9c,KAFrB,CAEQ8c,QAFR,CAAA;AAGA,EAAA,IAAMjS,IAAI,GAAGiS,QAAQ,CAACrN,UAAT,CAAoB1P,GAApB,CAAb,CAAA;AACA,EAAO+X,OAAAA,UAAU,CAACooB,OAAX,CAAmBoE,eAAnB,EAAoCz5B,IAApC,EAA0CV,QAA1C,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASm6B,eAAT,CACLxsB,UADK,EAELjN,IAFK,EAGLV,QAHK,EAIL;AAAA,EAAA,IACQnK,KADR,GACkB8X,UADlB,CACQ9X,KADR,CAAA;AAAA,EAAA,IAEQ8c,QAFR,GAEqB9c,KAFrB,CAEQ8c,QAFR,CAAA;AAGA,EAAA,IAAM3d,IAAI,GAAG2d,QAAQ,CAACpN,gBAAT,CAA0B7E,IAA1B,CAAb,CAAA;AACA,EAAMkG,IAAAA,UAAU,GAAGlG,IAAI,CAACnI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAnB,CAAA;AACA,EAAA,IAAM2J,MAAM,GAAGyQ,QAAQ,CAACnN,aAAT,CAAuBoB,UAAvB,CAAf,CAAA;AACA,EAAMxO,IAAAA,KAAK,GAAG8J,MAAM,CAACrL,KAAP,CAAa4T,OAAb,CAAqBzV,IAArB,CAAd,CAAA;;AAEA,EAAA,IAAIyB,SAAO,CAACE,SAAR,CAAkB3B,IAAlB,CAAJ,EAA6B;AAC3BoC,IAAkBpC,IAAI,CAACmB,IAAvB,CAAA;AACAiB,IAAkBpC,IAAI,CAACsC,IAAvB,CAAA;AACD,GAAA;;AAEDqW,EAAAA,UAAU,CAAC6sB,aAAX,CACEX,QAAQ,CAAC7kC,IAAD,EAAO0L,IAAP,EAAaV,QAAb,CADV,EAEE,YAAM;AACJ2N,IAAAA,UAAU,CAAC8sB,eAAX,CAA2B,YAAM;AAC/B9sB,MAAAA,UAAU,CAAC2sB,kBAAX,CAA8B,YAAM;AAClC,QAAA,IAAItlC,IAAI,CAAC0B,MAAL,EAAJ,EAAmB;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAf6B,UAAA,IAAA,eAAA,GAgBC1B,IAAI,CAAC+K,SAAL,CAAeC,QAAf,CAhBD;AAAA,cAgBR5B,KAhBQ,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;;AAAA,UAiBkBuP,IAAAA,iBAAAA,GAAAA,UAAU,CAAC9X,KAjB7B;AAAA,cAiBToZ,SAjBS,qBAiBTA,SAjBS;AAAA,cAiBEzR,WAjBF,qBAiBEA,WAjBF,CAAA;AAkBjBmQ,UAAAA,UAAU,CACPooB,OADH,CACW2C,gBADX,EAC6Bh4B,IAD7B,EACmCV,QADnC,EAC6C5B,KAAK,CAAC3E,IADnD,CAEGs8B,CAAAA,OAFH,CAEW2E,gBAFX,EAE6B9zB,UAF7B,EAEyCxO,KAAK,GAAG,CAFjD,EAEoDgG,KAFpD,CAAA,CAAA;AAGA;AACZ;AACA;AACA;AACA;AACA;AACA;;AACY,UAAA,IAAMu8B,aAAa,GAAGhtB,UAAU,CAAC9X,KAAX,CACnB8B,GADmB,CACf,aADe,EACA6F,WADA,CAEnB7F,CAAAA,GAFmB,CAEf,WAFe,EAEFsX,SAFE,CAAtB,CAAA;AAGA,UAAA,IAAM2rB,YAAY,GAAGD,aAAa,CAACnM,YAAd,CACnBmM,aAAa,CAAChoB,QADK,EAEnB,UAACC,KAAD,EAAW;AACT,YAAA,IAAIA,KAAK,CAAChd,GAAN,KAAcZ,IAAI,CAACY,GAAnB,IAA0BoK,QAAQ,IAAI4S,KAAK,CAACnY,MAAhD,EAAwD;AACtD,cAAOmY,OAAAA,KAAK,CAAClb,KAAN,CAAY;AACjB9B,gBAAAA,GAAG,EAAEwI,KAAK,CAACxI,GADM;AAEjB6E,gBAAAA,MAAM,EAAEmY,KAAK,CAACnY,MAAN,GAAeuF,QAAAA;AAFN,eAAZ,CAAP,CAAA;AAID,aAAA;;AACD,YAAA,OAAO4S,KAAP,CAAA;AACD,WAVkB,CAArB,CAAA;AAYAjF,UAAAA,UAAU,CAACktB,QAAX,CAAoBD,YAApB,EAAkC;AAAEE,YAAAA,eAAe,EAAE,KAAA;AAAnB,WAAlC,CAAA,CAAA;AACD,SA5CD,MA4CO;AACL;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,UAAMhxB,IAAAA,OAAO,GAAG9U,IAAhB,CAAA;AACA,UAAM4W,IAAAA,UAAU,GAAG9B,OAAO,CAACnS,GAAR,CAAY,OAAZ,EAAqB,EAArB,CAAyB2F,CAAAA,aAAzB,EAAnB,CAAA;AACA,UAAM4C,IAAAA,MAAM,GAAG4J,OAAO,CAACjT,KAAR,CAAc0B,KAAd,CAAoByH,QAApB,CAAf,CAAA;AACA,UAAA,IAAMgoB,EAAE,GAAG5vB,KAAK,GAAG,CAAnB,CAAA;AACAuV,UAAAA,UAAU,CAACooB,OAAX,CAAmB2E,gBAAnB,EAAqC9zB,UAArC,EAAiDohB,EAAjD,EAAqDpc,UAArD,CAAA,CAAA;AACA,UAAA,IAAMmvB,cAAc,GAAGn0B,UAAU,CAACvI,MAAX,CAAkB2pB,EAAlB,CAAvB,CAAA;AACA,UAAA,IAAMgT,YAAY,GAAGt6B,IAAI,CAACrC,MAAL,CAAY2B,QAAZ,CAArB,CAAA;AACAE,UAAAA,MAAM,CAACvC,OAAP,CAAe,UAACiL,CAAD,EAAI5C,GAAJ,EAAY;AACzB2H,YAAAA,UAAU,CAACooB,OAAX,CACEuD,cADF,EAEE0B,YAFF,EAGED,cAHF,EAIE/0B,GAJF,CAAA,CAAA;AAMD,WAPD,CAAA,CAAA;AAQD,SAAA;AACF,OAjFD,CAAA,CAAA;AAkFD,KAnFD,CAAA,CAAA;AAoFD,GAvFH,CAAA,CAAA;AAyFA,EAAA,OAAO2H,UAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASstB,UAAT,CAAoBttB,UAApB,EAA4CutB,KAA5C,EAAuD;AAAA,EAAA,IAAXA,KAAW,KAAA,KAAA,CAAA,EAAA;AAAXA,IAAAA,KAAW,GAAH,CAAG,CAAA;AAAA,GAAA;;AAC5D1B,EAAAA,cAAc,CAAC7rB,UAAD,CAAd,CAAA;AAD4D,EAAA,IAGpD9X,KAHoD,GAG1C8X,UAH0C,CAGpD9X,KAHoD,CAAA;AAAA,EAAA,IAIpDoZ,SAJoD,GAI5BpZ,KAJ4B,CAIpDoZ,SAJoD;AAAA,MAIzC0D,QAJyC,GAI5B9c,KAJ4B,CAIzC8c,QAJyC,CAAA;AAK5D,EAAMjZ,IAAAA,KAAK,GAAGuV,SAAS,CAACvV,KAAV,IAAmBiZ,QAAQ,CAAC0d,qBAAT,CAA+BphB,SAA/B,CAAjC,CAAA;AACAtB,EAAAA,UAAU,CAACooB,OAAX,CAAmB,mBAAnB,EAAwC9mB,SAAxC,EAAmDisB,KAAnD,CAAA,CAAA;AACA,EAAA,IAAMrZ,KAAK,GAAGlU,UAAU,CAAC9X,KAAX,CAAiBoZ,SAA/B,CAAA;AACA,EAAA,IAAI4b,QAAQ,GAAGhJ,KAAK,CAACwL,SAAN,CAAgB1a,QAAhB,CAAf,CAAA;;AACA,EAAA,IAAIjZ,KAAK,CAAC5C,MAAN,IAAgBmY,SAAS,CAACvV,KAA9B,EAAqC;AACnC;AACAmxB,IAAAA,QAAQ,GAAGhJ,KAAK,CAACnqB,KAAN,CAAY;AACrBgC,MAAAA,KAAK,EAAEA,KAAK,CAAC5C,MAAN,GAAe4C,KAAf,GAAuBuV,SAAS,CAACvV,KAAAA;AADnB,KAAZ,CAAX,CAAA;AAGD,GAAA;;AACD,EAAA,OAAOiU,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2B1K,QAA3B,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASsQ,iBAAT,CACLxtB,UADK,EAELsB,SAFK,EAGLisB,KAHK,EAIL;AAAA,EAAA,IADAA,KACA,KAAA,KAAA,CAAA,EAAA;AADAA,IAAAA,KACA,GADQ,CACR,CAAA;AAAA,GAAA;;AACA,EAAIrZ,IAAAA,KAAK,GAAG5S,SAAZ,CAAA;AADA,EAAA,IAEMpZ,KAFN,GAEgB8X,UAFhB,CAEM9X,KAFN,CAAA;AAAA,EAAA,IAAA,MAAA,GAGmBA,KAHnB;AAAA,MAGM8c,QAHN,UAGMA,QAHN,CAAA;;AAIA,EAAIkP,IAAAA,KAAK,CAACkD,WAAN,IAAqBlD,KAAK,CAAC3E,MAAN,CAAa3K,WAAb,EAAzB,EAAqD;AACnD;AACA,IAAA,IAAMK,KAAK,GAAGiP,KAAK,CAAC3E,MAApB,CAAA;AACA,IAAMke,IAAAA,UAAU,GAAGxoB,KAAK,CAACX,IAAN,KAAeD,SAAS,CAACa,MAA5C,CAAA;AACAlF,IAAAA,UAAU,CAACooB,OAAX,CAAmBsF,gBAAnB,EAAqCzoB,KAArC,CAAA,CAAA;;AACA,IAAA,IAAIwoB,UAAJ,EAAgB;AACdztB,MAAAA,UAAU,CAACooB,OAAX,CAAmBR,MAAnB,EAA2B1T,KAA3B,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,OAAOlU,UAAP,CAAA;AACD,GAAA;;AAEDkU,EAAAA,KAAK,GAAG6X,qBAAqB,CAAC/rB,UAAD,EAAakU,KAAb,CAA7B,CAAA;;AAfA,EAAA,IAAA,qBAAA,GAiBuBA,KAAK,CAACmD,mBAAN,CAA0BrS,QAA1B,CAjBvB;AAAA,MAiBQ9U,KAjBR,yBAiBQA,KAjBR;AAAA,MAiBeC,GAjBf,yBAiBeA,GAjBf,CAAA;;AAkBA,EAAI9I,IAAAA,IAAI,GAAG2d,QAAQ,CAAC/N,UAAT,CAAoB/G,KAAK,CAACjI,GAA1B,CAAX,CAAA;AACA,EAAIsM,IAAAA,MAAM,GAAGyQ,QAAQ,CAAC/K,eAAT,CAAyB5S,IAAI,CAAEY,GAA/B,CAAb,CAAA;AACA,EAAI8H,IAAAA,CAAC,GAAG,CAAR,CAAA;;AAEA,EAAA,OAAOwE,MAAM,IAAIxE,CAAC,GAAGw9B,KAArB,EAA4B;AAC1BlmC,IAAAA,IAAI,GAAGkN,MAAP,CAAA;AACAA,IAAAA,MAAM,GAAGyQ,QAAQ,CAAC/K,eAAT,CAAyB1F,MAAM,CAACtM,GAAhC,CAAT,CAAA;AACA8H,IAAAA,CAAC,EAAA,CAAA;AACF,GAAA;;AAED,EAAA,OAAOiQ,UAAU,CAAC2sB,kBAAX,CAA8B,YAAM;AACzC3sB,IAAAA,UAAU,CAACooB,OAAX,CACE+D,qBADF,EAEE9kC,IAAI,CAAEY,GAFR,EAGEiI,KAAK,CAACjI,GAHR,EAIEiI,KAAK,CAACpD,MAJR,CAAA,CAAA;AAOA5E,IAAAA,KAAK,GAAG8X,UAAU,CAAC9X,KAAnB,CAAA;AACA8c,IAAAA,QAAQ,GAAG9c,KAAK,CAAC8c,QAAjB,CAAA;;AAEA,IAAIkP,IAAAA,KAAK,CAACgU,UAAV,EAAsB;AACpB,MAAA,IAAIhU,KAAK,CAACiL,UAAN,CAAiBna,QAAjB,CAAJ,EAAgCkP,KAAK,GAAGA,KAAK,CAACkM,IAAN,EAAR,CAAA;AAChC,MAAMuN,IAAAA,SAAS,GAAG3oB,QAAQ,CAAC9K,YAAT,CAAsB7S,IAAI,CAAEY,GAA5B,CAAlB,CAAA;AACAisB,MAAAA,KAAK,GAAGA,KAAK,CAAC0L,uBAAN,CAA8B+N,SAA9B,EAAyC3tB,UAAzC,CAAR,CAAA;;AAEA,MAAA,IAAI9P,KAAK,CAACjI,GAAN,KAAckI,GAAG,CAAClI,GAAtB,EAA2B;AACzBisB,QAAAA,KAAK,GAAGA,KAAK,CAACiM,WAAN,CACNjM,KAAK,CAAC3E,MAAN,CAAatnB,GADP,EAENkI,GAAG,CAACrD,MAAJ,GAAcoD,KAAK,CAACpD,MAFd,CAAR,CAAA;AAID,OAAA;;AAEDkT,MAAAA,UAAU,CAACooB,OAAX,CAAmB,eAAnB,EAAoClU,KAApC,CAAA,CAAA;AACD,KAAA;AACF,GAzBM,CAAP,CAAA;AA0BD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS0Z,WAAT,CAAqB5tB,UAArB,EAA6CutB,KAA7C,EAAwD;AAAA,EAAA,IAAXA,KAAW,KAAA,KAAA,CAAA,EAAA;AAAXA,IAAAA,KAAW,GAAH,CAAG,CAAA;AAAA,GAAA;;AAC7D1B,EAAAA,cAAc,CAAC7rB,UAAD,CAAd,CAAA;AAD6D,EAAA,IAErDsB,SAFqD,GAEvCtB,UAAU,CAAC9X,KAF4B,CAErDoZ,SAFqD,CAAA;AAG7D,EAAOtB,OAAAA,UAAU,CAACooB,OAAX,CAAmByF,kBAAnB,EAAuCvsB,SAAvC,EAAkDisB,KAAlD,CAAP,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASM,kBAAT,CAA4B7tB,UAA5B,EAAoDkU,KAApD,EAA2DqZ,KAA3D,EAA6E;AAAA,EAAA,IAAlBA,KAAkB,KAAA,KAAA,CAAA,EAAA;AAAlBA,IAAAA,KAAkB,GAAVO,QAAU,CAAA;AAAA,GAAA;;AAC3E5Z,EAAAA,KAAK,GAAG6X,qBAAqB,CAAC/rB,UAAD,EAAakU,KAAb,CAA7B,CAAA;AAD2E,EAAA,IAEnEhsB,KAFmE,GAEzD8X,UAFyD,CA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"}