{"version":3,"sources":["../../../../src/utils/handlers/createGroupNodes.ts"],"names":["Document","createSubject","isSubject","isSubjectHeading","createGroupNodes","groupNodes","ctx","controller","next","start","end","parent","groups","first","nodes","parentGroup","length","isDocument","i","node","children","slice","subject","key","data","remainedRange"],"mappings":"AAAA,SAAiBA,QAAjB,QAAiC,oBAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,gBAAnC;;AAEA,SAASC,gBAAT,GAAkD;AAChD,SAAO,SAASC,UAAT,OAAkCC,GAAlC,EAAuCC,UAAvC,EAAmDC,IAAnD,EAAyD;AAAA,QAApCC,KAAoC;AAAA,QAA7BC,GAA6B;AAAA,QACtDC,MADsD,GACnCL,GADmC,CACtDK,MADsD;AAAA,QAC9CC,MAD8C,GACnCN,GADmC,CAC9CM,MAD8C;AAE9D,QAAMC,KAAK,GAAGF,MAAM,CAACG,KAAP,CAAaL,KAAb,CAAd;AACA,QAAMM,WAAW,GAAGH,MAAM,CAACA,MAAM,CAACI,MAAP,GAAgB,CAAjB,CAA1B,CAH8D,CAK9D;;AACA,QAAI,CAAChB,QAAQ,CAACiB,UAAT,CAAoBN,MAApB,CAAL,EAAkC;AAChC,aAAOH,IAAI,EAAX;AACD;;AAED,QAAIL,gBAAgB,CAACU,KAAD,CAAhB,IAA2B,CAACX,SAAS,CAACa,WAAD,CAAzC,EAAwD;AACtD,UAAIG,CAAC,GAAGT,KAAK,GAAG,CAAhB;;AACA,aAAOS,CAAC,GAAGR,GAAX,EAAgB;AACd,YAAMS,IAAI,GAAGR,MAAM,CAACG,KAAP,CAAaI,CAAb,CAAb;;AACA,YAAIf,gBAAgB,CAACgB,IAAD,CAApB,EAA4B;AAC1B;AACD;;AACDD,QAAAA,CAAC,IAAI,CAAL;AACD;;AAED,UAAME,QAAQ,GAAGT,MAAM,CAACG,KAAP,CAAaO,KAAb,CAAmBZ,KAAnB,EAA0BS,CAA1B,CAAjB;AAEA,UAAMI,OAAO,GAAGrB,aAAa,CAAC;AAC5BsB,QAAAA,GAAG,EAAKV,KAAK,CAACU,GAAX,WADyB;AAE5BC,QAAAA,IAAI,EAAEX,KAAK,CAACW,IAFgB;AAG5BV,QAAAA,KAAK,EAAEM;AAHqB,OAAD,CAA7B;AAMA,aAAO;AACLD,QAAAA,IAAI,EAAEG,OADD;AAELG,QAAAA,aAAa,EAAE,CAACP,CAAD,EAAIR,GAAJ;AAFV,OAAP;AAID;;AAED,WAAOF,IAAI,EAAX;AACD,GAnCD;AAoCD;;AAED,eAAeJ,gBAAf","sourcesContent":["import { Plugin, Document } from '@ali/4ever-cangjie';\nimport { createSubject, isSubject, isSubjectHeading } from '../utils';\n\nfunction createGroupNodes(): Plugin['groupNodes'] {\n  return function groupNodes([start, end], ctx, controller, next) {\n    const { parent, groups } = ctx;\n    const first = parent.nodes[start];\n    const parentGroup = groups[groups.length - 1];\n\n    // 如果不是一级节点，或者是文档末尾，则不分组\n    if (!Document.isDocument(parent)) {\n      return next();\n    }\n\n    if (isSubjectHeading(first) && !isSubject(parentGroup)) {\n      let i = start + 1;\n      while (i < end) {\n        const node = parent.nodes[i];\n        if (isSubjectHeading(node)) {\n          break;\n        }\n        i += 1;\n      }\n\n      const children = parent.nodes.slice(start, i);\n\n      const subject = createSubject({\n        key: `${first.key}-group`,\n        data: first.data,\n        nodes: children,\n      });\n\n      return {\n        node: subject,\n        remainedRange: [i, end],\n      };\n    }\n\n    return next();\n  };\n}\n\nexport default createGroupNodes;\n"],"file":"createGroupNodes.js"}