{"version":3,"sources":["../../../../src/utils/handlers/createOnCangjieSelect.ts"],"names":["Block","CangjieSelectEvent","Injection","toggleFold","getSubjectEndBlock","getSubjectStartBlock","isSubjectHeading","SUBJECT_NORMALIZE","createOnCangjieSelect","options","inject","onCangjieSelect","event","controller","next","detail","selection","trigger","value","document","injections","focus","block","getFurthestAncestor","key","isBlock","subject","query","injectIntoNode","userData","get","run","node","fold","start","getStart","end","getEnd","startBlock","getFurthsestBlock","endBlock","sel","startSubjectBlock","endSubjectBlock","isAtStartOfNode","moveStartToStartOfNode","subjectEndBlock","isAtEndOfNode","moveEndToEndOfNode"],"mappings":"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","sourcesContent":["import { Block, CangjieSelectEvent, Injection, Plugin } from '@ali/4ever-cangjie';\nimport { toggleFold } from '@ali/4ever-utils';\nimport { getSubjectEndBlock, getSubjectStartBlock } from '../queries';\nimport { isSubjectHeading, SubjectHeading } from '../utils';\n\nconst SUBJECT_NORMALIZE = 'subjectNormalize';\n\nexport interface OnCangjieSelectOptions {\n  /**\n   * 是否注入 Injection\n   * @default false\n   */\n  inject?: boolean;\n}\n\nfunction createOnCangjieSelect(options: OnCangjieSelectOptions = {}): Plugin['onCangjieSelect'] {\n  const { inject = false } = options;\n\n  return function onCangjieSelect(event, controller, next) {\n    const { selection, trigger } = event.detail;\n    const { document, injections } = controller.value;\n    const { focus } = selection;\n    const block = document.getFurthestAncestor(focus.key);\n\n    /**\n     * Effects 1: 若光标 focus 进入到折叠议题区域内，需要自动展开议题\n     * @description 此处需求是由于在内容折叠情况下，若用户光标选区进入，则无法看到鼠标聚焦区域，所以需要自动展开\n     */\n\n    // TODO: 这里的 query 会在每次 select 时消耗一次 O(N) 的查询性能，后续考虑在 DOM 上做一次 O(h) 的查询来优化\n    if (trigger !== SUBJECT_NORMALIZE && Block.isBlock(block) && !isSubjectHeading(block)) {\n      let subject = controller.query(getSubjectStartBlock, block);\n\n      // 注入 Injection 数据\n      if (inject && subject) {\n        subject = Injection.injectIntoNode(injections, subject) as SubjectHeading;\n      }\n\n      // 若议题节点折叠则展开\n      if (subject && controller.userData.get(subject, 'fold')) {\n        controller.run('onAction', toggleFold({\n          node: subject,\n          fold: false,\n        }));\n      }\n    }\n\n    /**\n     * Effects 2: 若选区跨越议题范围，则需要扩展选区范围至整个议题\n     * @description 此处需求源于产品设计，议题标题不能被随意删除，由于标题的特例处理比较困难，因此我们通过扩展选区的方法使得用户\n     * 会选择整个议题，这样使得用户在操作时能有明显的预期\n     */\n\n    const start = selection.getStart(document);\n    const end = selection.getEnd(document);\n    const startBlock = document.getFurthsestBlock(start.key);\n    const endBlock = document.getFurthsestBlock(end.key);\n\n    // 若光标的起始和结束不在同一个 Block 上\n    if (trigger !== SUBJECT_NORMALIZE && startBlock && endBlock && startBlock !== endBlock) {\n      let sel = selection;\n      const startSubjectBlock = controller.query(getSubjectStartBlock, startBlock);\n      const endSubjectBlock = controller.query(getSubjectStartBlock, endBlock);\n\n      // 若光标的起始和结束不在同一个议题组内，则需要扩展选区\n      if (startSubjectBlock !== endSubjectBlock) {\n        // start 移动至起始议题的开头\n        if (startSubjectBlock && !start.isAtStartOfNode(startSubjectBlock)) {\n          sel = sel.moveStartToStartOfNode(startSubjectBlock, controller);\n        }\n\n        // end 移动至结束议题的末尾\n        if (endSubjectBlock) {\n          const subjectEndBlock = controller.query(getSubjectEndBlock, endSubjectBlock);\n          if (subjectEndBlock && !end.isAtEndOfNode(subjectEndBlock)) {\n            sel = sel.moveEndToEndOfNode(subjectEndBlock, controller);\n          }\n        }\n      }\n\n      // 若光标发生了变化，则更新\n      if (sel !== selection) {\n        return controller.run('onCangjieSelect', CangjieSelectEvent({\n          selection: sel,\n          trigger: SUBJECT_NORMALIZE,\n        }));\n      }\n    }\n\n    return next();\n  };\n}\n\nexport default createOnCangjieSelect;\n"],"file":"createOnCangjieSelect.js"}