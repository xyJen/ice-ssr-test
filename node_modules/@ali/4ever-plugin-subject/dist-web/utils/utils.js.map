{"version":3,"sources":["../../../src/utils/utils.ts"],"names":["Paragraph","Text","Block","isSubjectHeading","node","isBlock","type","data","subjectPr","isSubject","createSubject","props","create","isEmptyNode","nodes","length","isParagraph","isEmptyText","isNormalParagraph","list","uniqueId","Date","now","toString","Math","random","substring"],"mappings":";AACA,SAASA,SAAT,QAA0B,6BAA1B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA2C,oBAA3C;;AAMA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAA6D;AAClE,SAAOF,KAAK,CAACG,OAAN,CAAcD,IAAd,KAAuBA,IAAI,CAACE,IAAL,KAAc,WAArC,IAAoD,CAAC,CAACF,IAAI,CAACG,IAAL,CAAUC,SAAvE;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBL,IAAnB,EAA+C;AACpD,SAAOF,KAAK,CAACG,OAAN,CAAcD,IAAd,KAAuBA,IAAI,CAACE,IAAL,KAAc,eAA5C;AACD;AAQD,OAAO,SAASI,aAAT,CAAuBC,KAAvB,EAAqD;AAC1D,SAAOT,KAAK,CAACU,MAAN,cACFD,KADE;AAELL,IAAAA,IAAI,EAAE;AAFD,KAAP;AAID;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,WAAT,CAAqBT,IAArB,EAA2C;AAChD,SACEA,IAAI,CAACU,KAAL,CAAWC,MAAX,KAAsB,CAAtB,IACCX,IAAI,CAACU,KAAL,CAAWC,MAAX,KAAsB,CAAtB,IACCf,SAAS,CAACgB,WAAV,CAAsBZ,IAAtB,CADD,IAECH,IAAI,CAACgB,WAAL,CAAiBb,IAAI,CAACU,KAAL,CAAW,CAAX,CAAjB,CAJJ;AAMD;AAED,OAAO,SAASI,iBAAT,CAA2Bd,IAA3B,EAAiD;AACtD,SAAOJ,SAAS,CAACgB,WAAV,CAAsBZ,IAAtB,KAA+B,CAACA,IAAI,CAACG,IAAL,CAAUY,IAAjD;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAOC,IAAI,CAACC,GAAL,GAAWC,QAAX,CAAoB,EAApB,IAA0BC,IAAI,CAACC,MAAL,GAAcF,QAAd,CAAuB,EAAvB,EAA2BG,SAA3B,CAAqC,CAArC,CAAjC;AACD","sourcesContent":["import { Heading1Data } from '@ali/4ever-plugin-heading';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph'\nimport { Text, Block, BlockChildren } from '@ali/4ever-cangjie';\n\nexport type SubjectHeading = Block<Heading1Data, BlockChildren>;\n\nexport type Subject = Block<Heading1Data, Block[]>;\n\n/**\n * 判断节点是否是议题标题\n * @param node\n * @returns\n */\nexport function isSubjectHeading(node: any): node is SubjectHeading {\n  return Block.isBlock(node) && node.type === 'heading-1' && !!node.data.subjectPr;\n}\n\n/**\n * 判断节点是否是议题组\n */\nexport function isSubject(node: any): node is Subject {\n  return Block.isBlock(node) && node.type === 'subject-group';\n}\n\nexport interface SubjectProps {\n  key?: string;\n  data: Heading1Data;\n  nodes?: Block[];\n}\n\nexport function createSubject(props: SubjectProps): Subject {\n  return Block.create<Heading1Data, Block[]>({\n    ...props,\n    type: 'subject-group',\n  });\n}\n\n/**\n * 判断节点是否是空节点\n * @param node\n * @returns\n */\nexport function isEmptyNode(node: Block): boolean {\n  return (\n    node.nodes.length === 0 ||\n    (node.nodes.length === 1 &&\n      Paragraph.isParagraph(node) &&\n      Text.isEmptyText(node.nodes[0]))\n  );\n}\n\nexport function isNormalParagraph(node: Block): boolean {\n  return Paragraph.isParagraph(node) && !node.data.list;\n}\n\n/**\n * 简单生成 uniqueId\n * @see https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid#answer-44078785\n * @returns\n */\nexport function uniqueId() {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n}\n"],"file":"utils.js"}