import { isSubjectHeading } from "../utils";
/**
 * 查询节点所在的议题节点
 * @param controller
 * @param node
 * @returns
 */

export function getSubjectStartBlock(controller, node) {
  // 议题节点没有父级议题
  if (isSubjectHeading(node)) {
    return node;
  }

  var document = controller.value.document;
  var path = document.getPath(node.key);

  if (!path) {
    return null;
  }

  var index = path[0]; // 查询第一个议题节点返回

  var subject = null;
  var i = index - 1;

  while (i >= 0) {
    var prev = document.nodes[i];

    if (isSubjectHeading(prev)) {
      subject = prev;
      break;
    }

    i -= 1;
  }

  return subject;
}
/**
 * 查询议题的末尾节点
 * @param controller
 * @param node
 * @returns
 */

export function getSubjectEndBlock(controller, node) {
  var document = controller.value.document;
  var path = document.getPath(node.key);

  if (!path) {
    return null;
  }

  var index = path[0];
  var endBlock = node;
  var i = index + 1;

  while (i < document.nodes.length) {
    var next = document.nodes[i];

    if (isSubjectHeading(next)) {
      break;
    }

    endBlock = next;
    i += 1;
  }

  return endBlock;
}
/**
 * 查询议题是否包含聚合子节点
 * @param controller
 * @param node
 */

export function hasSubjectGroupBlocks(controller, node) {
  var document = controller.value.document;
  var nextBlock = document.getNextBlock(node.key);
  return !!nextBlock && !isSubjectHeading(nextBlock);
}
//# sourceMappingURL=range.js.map