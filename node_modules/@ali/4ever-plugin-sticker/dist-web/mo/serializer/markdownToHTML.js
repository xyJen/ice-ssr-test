import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import { getEmojiData } from "../../utils/getEmojiData";
var rule = {
  uses: [{
    plugin: function plugin() {
      return import('markdown-it-emoji');
    },
    data: function () {
      var _data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return getEmojiData();

              case 2:
                _context.t0 = _context.sent;
                _context.t1 = {
                  defs: _context.t0
                };
                return _context.abrupt("return", [_context.t1]);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function data() {
        return _data.apply(this, arguments);
      }

      return data;
    }()
  }]
};
export default rule;
//# sourceMappingURL=markdownToHTML.js.map