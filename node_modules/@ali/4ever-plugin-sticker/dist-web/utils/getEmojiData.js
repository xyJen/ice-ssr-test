import _regeneratorRuntime from "@babel/runtime/regenerator";
import _extends from "@babel/runtime/helpers/extends";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import { omit } from 'lodash-es';
export var BANNED_EMOJI = ['taiwan'];
export var getEmojiData = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var defaultDefs;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return import('markdown-it-emoji/lib/data/full.json');

          case 2:
            defaultDefs = _context.sent;
            return _context.abrupt("return", _extends({}, omit(defaultDefs["default"], BANNED_EMOJI), {
              relaxed: "\u263A",
              person_with_pouting_face: "\uD83D\uDE4E",
              person_frowning: "\uD83D\uDE4D",
              person_with_blond_hair: "\uD83D\uDC71",
              black_square: "\u25A0",
              white_square: "\u25A1"
            }));

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function getEmojiData() {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=getEmojiData.js.map