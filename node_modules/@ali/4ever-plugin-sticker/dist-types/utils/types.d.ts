import React, { SyntheticEvent } from 'react';
/**
 * @description 雪碧图中每个图片数据
 */
export interface SpriteSticker {
    /**
     * 表情唯一 id
     */
    stickerId: string;
    /**
     * 表情码，如 [微笑]
     */
    code: string;
    /**
     * background-position-x
     */
    x: number;
    /**
     * // background-position-y
     */
    y: number;
    /**
     * 图片宽度
     */
    width: number;
    /**
     * 图片高度
     */
    height: number;
    locale: {
        en_US: string;
        ja_JP: string;
        zh_CN: string;
        zh_HK: string;
        zh_TW: string;
    };
}
/**
 * @description 雪碧图表情配置
 */
export interface SpriteStickerData {
    type: 'sprite';
    src: string;
    width: number;
    height: number;
    stickers: Array<SpriteSticker | SplitLine>;
}
/**
 * @description 非雪碧图中每个图片数据
 */
export interface SingleSticker extends SpriteSticker {
    src: string;
}
/**
 * @description 非雪碧图表情配置
 */
export interface SingleStickerData {
    type: 'single';
    stickers: Array<SingleSticker | SplitLine>;
}
/**
 * @description 表情面板分割线
 */
export interface SplitLine {
    stickerId: string;
}
/**
 * @description 非雪碧图表情总配置
 */
export interface InsertStickerProps {
    code: string;
    width: number;
    height: number;
}
/**
 * @description 自定义表情类型
 */
export declare type ICustomSticker = Array<SpriteStickerData | SingleStickerData>;
/**
 * @description Sticker插件配置
 */
export interface StickerPluginConfig {
    sticker: {
        lang: string;
        customSticker: ICustomSticker;
    };
}
/**
 * @description Sticker UI 组件的入参
 */
export interface StickerProps {
    code: string;
    sz: number;
    backgroundColor?: string;
    type?: number;
    attributes?: React.Attributes;
    onClick?: (event: React.MouseEvent<HTMLSpanElement>) => void;
    onError?: (event: SyntheticEvent<HTMLImageElement, Event>) => void;
}
