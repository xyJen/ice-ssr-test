{"version":3,"sources":["../../../../src/mo/serializer/htmlToJsonML.ts"],"names":["name","onOpenTag","state","attrs","class","sticker","code","title","replace","Sticker","TYPE","push","onCloseTag","pop","parent","peek","paragraphTags","append","prevSibling","isPhantom","phantom"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;eAEe;AACbA,EAAAA,IAAI,EAAE,SADO;;AAGbC,EAAAA,SAAS,CAACC,KAAD,EAAeF,IAAf,EAA6BG,KAA7B,EAAyD;AAChE;AACA,QAAI,CAAC,+BAAeA,KAAK,EAAEC,KAAtB,CAAL,EAAmC,OAAO,KAAP;AAEnC,UAAMC,OAAe,GAAG,CACtB,MADsB,EAEtB;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACI,KAAN,CAAYC,OAAZ,CAAoB,QAApB,EAA8B,EAA9B,CAAR;AAA2C,mBAAaC,gBAAQC;AAAhE,KAFsB,EAGtB,mCAHsB,CAAxB;AAKAR,IAAAA,KAAK,CAACS,IAAN,CAAWN,OAAX;AACA,WAAO,IAAP;AACD,GAdY;;AAgBbO,EAAAA,UAAU,CAACV,KAAD,EAAeF,IAAf,EAA6BG,KAA7B,EAAyD;AACjE,QAAI,CAAC,+BAAeA,KAAK,EAAEC,KAAtB,CAAL,EAAmC,OAAO,KAAP;AAEnC,UAAMC,OAAO,GAAGH,KAAK,CAACW,GAAN,EAAhB;AACA,UAAMC,MAAM,GAAGZ,KAAK,CAACa,IAAN,EAAf;;AACA,QAAIC,yBAAc,2BAAWF,MAAX,CAAd,CAAJ,EAAuC;AACrCZ,MAAAA,KAAK,CAACe,MAAN,CAAaZ,OAAb;AACA,aAAO,IAAP;AACD;;AAED,UAAMa,WAAW,GAAG,6BAAaJ,MAAb,CAApB;;AACA,QAAII,WAAW,IAAKA,WAAD,CAAyBC,SAA5C,EAAuD;AACrDD,MAAAA,WAAW,CAACP,IAAZ,CAAiBN,OAAjB,EAA0B,mCAA1B;AACD,KAFD,MAEO;AACL,YAAMe,OAAe,GAAG,CACtB,GADsB,EAEtB,mCAFsB,EAGtBf,OAHsB,EAItB,mCAJsB,CAAxB;AAMCe,MAAAA,OAAD,CAAqBD,SAArB,GAAiC,IAAjC;AACAjB,MAAAA,KAAK,CAACe,MAAN,CAAaG,OAAb;AACD;;AACD,WAAO,IAAP;AACD;;AAxCY,C","sourcesContent":["import { JsonML, getTagName, getLastChild, isEmojiClsName, paragraphTags, Phantom } from '@ali/4ever-utils';\nimport { MoState as State, MoAttributes as Attributes, createEmptyText, } from '@ali/4ever-cangjie';\nimport Sticker from '../models';\n\nexport default {\n  name: 'sticker',\n\n  onOpenTag(state: State, name: string, attrs: Attributes): boolean {\n    // 解析来自 IM 的表情\n    if (!isEmojiClsName(attrs?.class)) return false;\n\n    const sticker: JsonML = [\n      'span',\n      { code: attrs.title.replace(/\\[|\\]/g, ''), 'data-type': Sticker.TYPE },\n      createEmptyText(),\n    ];\n    state.push(sticker);\n    return true;\n  },\n\n  onCloseTag(state: State, name: string, attrs: Attributes): boolean {\n    if (!isEmojiClsName(attrs?.class)) return false;\n\n    const sticker = state.pop();\n    const parent = state.peek();\n    if (paragraphTags[getTagName(parent)]) {\n      state.append(sticker);\n      return true;\n    }\n\n    const prevSibling = getLastChild(parent);\n    if (prevSibling && (prevSibling as Phantom).isPhantom) {\n      prevSibling.push(sticker, createEmptyText());\n    } else {\n      const phantom: JsonML = [\n        'p',\n        createEmptyText(),\n        sticker,\n        createEmptyText(),\n      ];\n      (phantom as Phantom).isPhantom = true;\n      state.append(phantom);\n    }\n    return true;\n  },\n};\n"],"file":"htmlToJsonML.js"}