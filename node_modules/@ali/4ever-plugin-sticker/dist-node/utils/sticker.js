"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lodash = require("lodash");

var _constants = require("./constants");

class Sticker {
  // 表情映射表
  // 表情语言
  // 表情列表
  constructor({
    customSticker,
    lang = _constants.DEFAULT_LANG
  }) {
    this.stickerMap = void 0;
    this.stickerLang = void 0;
    this.stickerList = void 0;
    this.stickerLang = lang;
    this.stickerList = this.getStickerList(customSticker);
    this.stickerMap = new Map(this.stickerList.map(s => [s.code, s]));
  }

  getStickerList(customSticker) {
    return (0, _lodash.flatten)(customSticker.map(cusStk => this.parseStickers(cusStk)));
  }

  parseStickers(customSticker) {
    if (customSticker?.type === _constants.SPRITE) {
      return customSticker.stickers.map(stk => {
        stk.src = customSticker.src;
        stk.spriteWidth = customSticker.width;
        stk.spriteHeight = customSticker.height;
        return stk;
      });
    } // TODO 目前仅支持雪碧图，单个表情或动图待支持 @灯少


    if (customSticker?.type === _constants.SINGLE) {
      return customSticker.stickers.map(stk => {
        stk.x = 0;
        stk.y = 0;
        stk.spriteWidth = stk.width;
        stk.spriteHeight = stk.height;
        return stk;
      });
    }

    return [];
  }

  getInfoByCode(code) {
    return this.stickerMap.get(code);
  }

  getStickerSource(code) {
    const stickerInfo = this.getInfoByCode(code);
    return stickerInfo?.src;
  }

  getStickerLocale(code, lang) {
    const stickerInfo = this.getInfoByCode(code);
    return stickerInfo?.locale[lang || this.stickerLang] || '';
  }

}

var _default = Sticker;
exports.default = _default;
//# sourceMappingURL=sticker.js.map