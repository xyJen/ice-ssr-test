{"version":3,"sources":["../../../../src/utils/commentPosition/positionCache.ts"],"names":["domUtils","CONTROLELR_CACHE","WeakMap","validateCaches","params","controller","docTop","_docHeight","docHeight","_docWidth","docWidth","container","document","value","Math","round","nodes","allRows","cache","get","set","prevNodes","prevAllRows","Object","keys","forEach","key","prevNode","find","n","isValid","oldTop","top","rows","oldPoints","points","prevNodeHeight","height","node","findDOMNodeSafely","getBoundingClientRect","nodeClientTop","nodeHeight","topOffsetInSession","map","p","caretTop"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { Controller, Block, domUtils } from '@ali/4ever-cangjie';\n\ninterface MemoPoint {\n  key: string;\n  caretTop: number;\n  row: ReturnType<typeof domUtils.splitRows>[number];\n}\n\ninterface CachedRowsItem {\n  // offsetTop to docTop\n  top: number;\n  height: number;\n  points: MemoPoint[];\n  rows: ReturnType<typeof domUtils.splitRows>;\n}\n\ntype AllRows = Record<string, CachedRowsItem>;\n\ninterface ControllerCache {\n  // 一级节点\n  nodes: Block[];\n  // 文档宽度\n  docWidth: number;\n  // 文档高度\n  docHeight: number;\n  // splitRows 缓存\n  allRows: AllRows;\n}\nconst CONTROLELR_CACHE = new WeakMap<Controller, ControllerCache>();\n\ninterface IParams {\n  controller: Controller;\n  docWidth: number;\n  docHeight: number;\n  docTop: number;\n  container: HTMLElement | Window;\n}\n\n/**\n * 每次获取缓存之前，先清理一遍失效的缓存，针对的场景：\n * 1. document dom 的宽度变了\n * 2. 某一个节点变化了\n */\nexport function validateCaches(params: IParams): AllRows {\n  const {\n    controller,\n    docTop,\n    docHeight: _docHeight,\n    docWidth: _docWidth,\n    container,\n  } = params;\n  const { document } = controller.value;\n  const docWidth = Math.round(_docWidth);\n  const docHeight = Math.round(_docHeight);\n  const { nodes } = document;\n  const allRows: Record<string, CachedRowsItem> = {};\n\n  const cache = CONTROLELR_CACHE.get(controller);\n\n  // 如果 document 宽度变了，重置所有的缓存\n  if (!cache || cache.docWidth !== docWidth) {\n    CONTROLELR_CACHE.set(controller, { nodes, docWidth, docHeight, allRows });\n    return allRows;\n  }\n  const { nodes: prevNodes, allRows: prevAllRows } = cache;\n\n  Object.keys(prevAllRows).forEach((key) => {\n    const prevNode = prevNodes.find((n) => n.key === key);\n    const isValid = prevNode && nodes.find((n) => n === prevNode);\n    if (!isValid) {\n      return;\n    }\n    const { top: oldTop, rows, points: oldPoints, height: prevNodeHeight } = prevAllRows[key];\n    const node = domUtils.findDOMNodeSafely(key, container);\n    if (!node) {\n      return;\n    }\n    const { top: nodeClientTop, height: nodeHeight } = node.getBoundingClientRect();\n    if (Math.round(nodeHeight) !== Math.round(prevNodeHeight)) {\n      return;\n    }\n    const top = nodeClientTop - docTop;\n    const topOffsetInSession = top - oldTop;\n    const points = oldPoints.map((p) => ({\n      ...p,\n      caretTop: p.caretTop + topOffsetInSession,\n    }));\n    allRows[key] = {\n      top,\n      height: nodeHeight,\n      points,\n      rows,\n    };\n  });\n\n  // 计算完成，这时缓存都是有效的计算结果\n  cache.allRows = allRows;\n  cache.docWidth = docWidth;\n  cache.docHeight = docHeight;\n  cache.nodes = nodes;\n  return allRows;\n}\n"],"file":"positionCache.js"}