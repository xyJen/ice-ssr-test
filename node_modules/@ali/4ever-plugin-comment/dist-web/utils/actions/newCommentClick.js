import { Commands, Decoration } from '@ali/4ever-cangjie';
import { setActiveId } from "../actions";
import { ViewMark } from "../models/marks";
import hashCode from "../utils/hashCode";
import { serialize } from "../utils/readonlySerializer";
export default function newCommentClick(controller, defaultSummary) {
  var _controller$value = controller.value,
      document = _controller$value.document,
      decorations = _controller$value.decorations;
  var selection = controller.value.selection;
  var hash = hashCode("" + Math.random());
  var hash2 = hashCode("" + new Date().getTime());
  var contentId = "" + hash + hash2;
  /**
   * 场景优化 - 表格（单元格）
   */

  var _selection$sort = selection.sort(document),
      spoint = _selection$sort.start,
      epoint = _selection$sort.end;

  var _map = [spoint, epoint].map(function (_ref) {
    var key = _ref.key;
    return document.getClosest(key, function (node) {
      return node.isElement() && node.type === 'table-cell';
    });
  }),
      startCell = _map[0],
      endCell = _map[1];

  if (startCell && endCell && startCell !== endCell) {
    selection = selection.moveStartToStartOfNode(startCell, controller).moveEndToEndOfNode(endCell, controller);
  }
  /**
   * 场景优化 - 代码块
   */


  var node = document.getNode(selection.anchor.key);

  if (selection.isCollapsed && node != null && node.isElement() && node.type === 'code') {
    selection = selection.moveToRangeOfNode(node, controller);
  }
  /**
   * 用户体验优化：如果是光标状态，尝试选中最近的一个 block 进行评论
   */


  var finalSelection = selection;
  var shouldExtendSelection = false; // 只有 collapse 状态，并且不在 void 元素内，才会触发此优化

  if (selection.isCollapsed) {
    var parent = document.getParent(selection.anchor.key);
    var isParentVoid = parent && controller.query('isVoid', parent);
    shouldExtendSelection = !isParentVoid;
  }

  if (shouldExtendSelection) {
    var parentBlock = document.getClosestBlock(selection.anchor.key);
    finalSelection = parentBlock ? selection.moveAnchorToStartOfNode(parentBlock, controller).moveFocusToEndOfNode(parentBlock, controller) : selection;
  }

  var _finalSelection$conve = finalSelection.convertToTextPoints(document),
      start = _finalSelection$conve.start,
      end = _finalSelection$conve.end;

  var result = serialize(start, end, document);
  var summary = (result == null ? void 0 : result.summary) || defaultSummary || '';
  var position = result == null ? void 0 : result.position;
  var mark = ViewMark.create({
    contentId: contentId,
    isNew: true,
    count: 0,
    summary: summary,
    position: position
  });
  var dec = Decoration.create({
    start: start,
    end: end,
    mark: mark
  });
  controller.run('onAction', setActiveId(contentId, true));
  controller.setDecorations([].concat(decorations.filter(function (d) {
    return !(ViewMark.isViewMark(d.mark) && d.mark.data.isNew);
  }), [dec])).command(Commands.moveToFocus);
}
//# sourceMappingURL=newCommentClick.js.map