{"version":3,"sources":["../../../../src/utils/actions/newCommentClick.ts"],"names":["Commands","Decoration","setActiveId","ViewMark","hashCode","serialize","newCommentClick","controller","defaultSummary","value","document","decorations","selection","hash","Math","random","hash2","Date","getTime","contentId","sort","spoint","start","epoint","end","map","key","getClosest","node","isElement","type","startCell","endCell","moveStartToStartOfNode","moveEndToEndOfNode","getNode","anchor","isCollapsed","moveToRangeOfNode","finalSelection","shouldExtendSelection","parent","getParent","isParentVoid","query","parentBlock","getClosestBlock","moveAnchorToStartOfNode","moveFocusToEndOfNode","convertToTextPoints","result","summary","position","mark","create","isNew","count","dec","run","setDecorations","filter","d","isViewMark","data","command","moveToFocus"],"mappings":"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","sourcesContent":["import { Commands, Controller, Decoration } from '@ali/4ever-cangjie';\nimport { setActiveId } from '../actions';\nimport { ViewMark } from '../models/marks';\nimport hashCode from '../utils/hashCode';\nimport { serialize } from '../utils/readonlySerializer';\n\nexport default function newCommentClick(\n  controller: Controller,\n  defaultSummary?: string,\n) {\n  const { document, decorations } = controller.value;\n  let { selection } = controller.value;\n  const hash = hashCode(`${Math.random()}`);\n  const hash2 = hashCode(`${new Date().getTime()}`);\n  const contentId = `${hash}${hash2}`;\n\n  /**\n   * 场景优化 - 表格（单元格）\n   */\n  const { start: spoint, end: epoint } = selection.sort(document);\n  const [startCell, endCell] = [spoint, epoint].map(({ key }) =>\n    document.getClosest(\n      key,\n      (node) => node.isElement() && node.type === 'table-cell',\n    ),\n  );\n  if (startCell && endCell && startCell !== endCell) {\n    selection = selection\n      .moveStartToStartOfNode(startCell, controller)\n      .moveEndToEndOfNode(endCell, controller);\n  }\n\n  /**\n   * 场景优化 - 代码块\n   */\n\n  const node = document.getNode(selection.anchor.key);\n  if (selection.isCollapsed && node?.isElement() && node.type === 'code') {\n    selection = selection.moveToRangeOfNode(node, controller);\n  }\n\n  /**\n   * 用户体验优化：如果是光标状态，尝试选中最近的一个 block 进行评论\n   */\n  let finalSelection = selection;\n  let shouldExtendSelection = false;\n  // 只有 collapse 状态，并且不在 void 元素内，才会触发此优化\n  if (selection.isCollapsed) {\n    const parent = document.getParent(selection.anchor.key);\n    const isParentVoid = parent && controller.query('isVoid', parent);\n    shouldExtendSelection = !isParentVoid;\n  }\n  if (shouldExtendSelection) {\n    const parentBlock = document.getClosestBlock(selection.anchor.key);\n    finalSelection = parentBlock\n      ? selection\n          .moveAnchorToStartOfNode(parentBlock, controller)\n          .moveFocusToEndOfNode(parentBlock, controller)\n      : selection;\n  }\n  const { start, end } = finalSelection.convertToTextPoints(document);\n  const result = serialize(start, end, document);\n  const summary = result?.summary || defaultSummary || '';\n  const position = result?.position;\n  const mark = ViewMark.create({\n    contentId,\n    isNew: true,\n    count: 0,\n    summary,\n    position,\n  });\n  const dec = Decoration.create({ start, end, mark });\n  controller.run('onAction', setActiveId(contentId, true));\n  controller\n    .setDecorations([\n      ...decorations.filter(\n        (d) => !(ViewMark.isViewMark(d.mark) && d.mark.data.isNew),\n      ),\n      dec,\n    ])\n    .command(Commands.moveToFocus);\n}\n"],"file":"newCommentClick.js"}