import { MARK_TYPE_DATA } from "../types";

function filterCommentMark(node) {
  if (node.isText() && node.leaves.some(function (l) {
    return l.marks.some(function (m) {
      return m.type === MARK_TYPE_DATA;
    });
  })) {
    var newLeaves = node.leaves.map(function (leave) {
      return leave.set('marks', leave.marks.filter(function (m) {
        return m.type !== MARK_TYPE_DATA;
      }));
    });
    return node.set('leaves', newLeaves);
  } else if (node.isElement()) {
    var newChildren = node.nodes.map(filterCommentMark);

    if (newChildren.every(function (child, index) {
      return child === node.nodes[index];
    })) {
      return node;
    }

    return node.set('nodes', newChildren);
  }

  return node;
}

export default function filterFragment(node) {
  var newNode = filterCommentMark(node);
  return newNode;
}
//# sourceMappingURL=filterFragment.js.map