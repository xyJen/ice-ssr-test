{"version":3,"sources":["../../../../src/utils/utils/filterFragment.ts"],"names":["MARK_TYPE_DATA","filterCommentMark","node","isText","leaves","some","l","marks","m","type","newLeaves","map","leave","set","filter","isElement","newChildren","nodes","every","child","index","filterFragment","newNode"],"mappings":"AACA,SAASA,cAAT;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAA6C;AAC3C,MACEA,IAAI,CAACC,MAAL,MACAD,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,KAAF,CAAQF,IAAR,CAAa,UAACG,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAF,KAAWT,cAAlB;AAAA,KAAb,CAAP;AAAA,GAAjB,CAFF,EAGE;AACA,QAAMU,SAAS,GAAGR,IAAI,CAACE,MAAL,CAAYO,GAAZ,CAAgB,UAACC,KAAD,EAAW;AAC3C,aAAOA,KAAK,CAACC,GAAN,CACL,OADK,EAELD,KAAK,CAACL,KAAN,CAAYO,MAAZ,CAAmB,UAACN,CAAD;AAAA,eAAOA,CAAC,CAACC,IAAF,KAAWT,cAAlB;AAAA,OAAnB,CAFK,CAAP;AAID,KALiB,CAAlB;AAMA,WAAOE,IAAI,CAACW,GAAL,CAAS,QAAT,EAAmBH,SAAnB,CAAP;AACD,GAXD,MAWO,IAAIR,IAAI,CAACa,SAAL,EAAJ,EAAsB;AAC3B,QAAMC,WAAW,GAAGd,IAAI,CAACe,KAAL,CAAWN,GAAX,CAAeV,iBAAf,CAApB;;AACA,QAAIe,WAAW,CAACE,KAAZ,CAAkB,UAACC,KAAD,EAAQC,KAAR;AAAA,aAAkBD,KAAK,KAAKjB,IAAI,CAACe,KAAL,CAAWG,KAAX,CAA5B;AAAA,KAAlB,CAAJ,EAAsE;AACpE,aAAOlB,IAAP;AACD;;AACD,WAAOA,IAAI,CAACW,GAAL,CAAS,OAAT,EAAkBG,WAAlB,CAAP;AACD;;AACD,SAAOd,IAAP;AACD;;AAED,eAAe,SAASmB,cAAT,CAAwBnB,IAAxB,EAAwC;AACrD,MAAMoB,OAAO,GAAGrB,iBAAiB,CAACC,IAAD,CAAjC;AACA,SAAOoB,OAAP;AACD","sourcesContent":["import { Node, Document } from '@ali/4ever-cangjie';\nimport { MARK_TYPE_DATA } from '../types';\n\nfunction filterCommentMark(node: Node): Node {\n  if (\n    node.isText() &&\n    node.leaves.some((l) => l.marks.some((m) => m.type === MARK_TYPE_DATA))\n  ) {\n    const newLeaves = node.leaves.map((leave) => {\n      return leave.set(\n        'marks',\n        leave.marks.filter((m) => m.type !== MARK_TYPE_DATA),\n      );\n    });\n    return node.set('leaves', newLeaves);\n  } else if (node.isElement()) {\n    const newChildren = node.nodes.map(filterCommentMark);\n    if (newChildren.every((child, index) => child === node.nodes[index])) {\n      return node;\n    }\n    return node.set('nodes', newChildren);\n  }\n  return node;\n}\n\nexport default function filterFragment(node: Document) {\n  const newNode = filterCommentMark(node);\n  return newNode as Document;\n}\n"],"file":"filterFragment.js"}