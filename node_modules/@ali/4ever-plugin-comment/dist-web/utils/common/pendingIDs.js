import requestIdle from "../utils/requestIdle";
var pending = [];
export function enqueue(obj) {
  var targetIndex = pending.findIndex(function (p) {
    return p.prio > obj.prio;
  });

  if (targetIndex < 0) {
    targetIndex = pending.length;
  }

  pending.splice(targetIndex, 0, obj);
  dequeue();
}
export function cancelQueue(obj) {
  var targetIndex = pending.findIndex(function (p) {
    return p === obj;
  });

  if (targetIndex >= 0) {
    pending.splice(targetIndex, 1);
  }
}
var isScheduled = false;

function dequeue() {
  if (isScheduled) {
    return;
  }

  isScheduled = true;
  requestIdle(function () {
    isScheduled = false;
    var p = pending.shift();

    if (p) {
      p.callback();
      dequeue();
    }
  });
}
//# sourceMappingURL=pendingIDs.js.map