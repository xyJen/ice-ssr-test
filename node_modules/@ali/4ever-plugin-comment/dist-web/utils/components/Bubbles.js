import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { environment } from '@ali/4ever-cangjie';
import { BUTTON_SIZE as SIZE } from "../utils/constants";
import { useDocSize } from "../hooks/useDocSize";
var IS_MOBILE = environment.IS_MOBILE;
var Bubbles = /*#__PURE__*/styled.div(["float:right;position:relative;margin-right:-", "px;"], IS_MOBILE ? SIZE - 2 : SIZE + 4);
var PHWrapper = /*#__PURE__*/styled.div(["position:absolute;width:28px;bottom:0;right:0;"]);
export default function (_ref) {
  var setBottomMargin = _ref.setBottomMargin,
      updatePosition = _ref.updatePosition,
      block = _ref.block,
      children = _ref.children;
  var bubblesRef = React.useRef(null);

  var _React$useState = React.useState(0),
      phHeight = _React$useState[0],
      setHeight = _React$useState[1];

  var _React$useReducer = React.useReducer(function (s) {
    return s + 1;
  }, 0),
      renderKey = _React$useReducer[0],
      updateRenderKey = _React$useReducer[1];

  var onDocSizeChange = React.useCallback(function () {
    updatePosition();
    updateRenderKey();
  }, [updateRenderKey, updatePosition]);
  useDocSize(bubblesRef, onDocSizeChange);
  React.useEffect(function () {
    var _bubblesRef$current;

    var node = bubblesRef.current;
    var prev = (_bubblesRef$current = bubblesRef.current) == null ? void 0 : _bubblesRef$current.previousElementSibling;

    if (!node || !prev) {
      return;
    }

    var _node$getBoundingClie = node.getBoundingClientRect(),
        nodeTop = _node$getBoundingClie.top;

    var _prev$getBoundingClie = prev.getBoundingClientRect(),
        prevBottom = _prev$getBoundingClie.bottom,
        rawHeight = _prev$getBoundingClie.height;

    var extra = Math.round(nodeTop - prevBottom);
    var height = Math.round(rawHeight);

    if (extra) {
      setBottomMargin(extra);
    }

    if (phHeight !== height) {
      setHeight(height);
    }
  }, [block, renderKey]);
  var style = React.useMemo(function () {
    return {
      height: phHeight + "px"
    };
  }, [phHeight]);
  return /*#__PURE__*/_createElement(Bubbles, {
    className: "data-comment-bubbles",
    "data-cache-ignore": true,
    ref: bubblesRef
  }, !IS_MOBILE && /*#__PURE__*/_createElement(PHWrapper, {
    style: style
  }), children);
}
//# sourceMappingURL=Bubbles.js.map