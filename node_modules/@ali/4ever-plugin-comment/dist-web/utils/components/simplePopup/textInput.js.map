{"version":3,"sources":["../../../../../src/utils/components/simplePopup/textInput.tsx"],"names":["React","Controller","buttonDefaultStyle","background","border","color","borderRadius","padding","inputDiv","marginTop","textAlign","TextInput","props","contentId","sendComment","onAdd","controller","useController","textRef","useRef","useState","isSending","setIsSending","buttonStyle","opacity","send","content","current","value","Error","then","error","handleKeyDown","event","keyCode","metaKey","preventDefault","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,SAASC,UAAT,QAA2B,oBAA3B;AAGA,IAAMC,kBAAuC,GAAG;AAC9CC,EAAAA,UAAU,EAAE,SADkC;AAE9CC,EAAAA,MAAM,EAAE,MAFsC;AAG9CC,EAAAA,KAAK,EAAE,OAHuC;AAI9CC,EAAAA,YAAY,EAAE,KAJgC;AAK9CC,EAAAA,OAAO,EAAE;AALqC,CAAhD;AAQA,IAAMC,QAA6B,GAAG;AACpCC,EAAAA,SAAS,EAAE,KADyB;AAEpCC,EAAAA,SAAS,EAAE;AAFyB,CAAtC;AAWA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AAAA,MAC/CC,SAD+C,GACbD,KADa,CAC/CC,SAD+C;AAAA,MACpCC,WADoC,GACbF,KADa,CACpCE,WADoC;AAAA,MACvBC,KADuB,GACbH,KADa,CACvBG,KADuB;AAEvD,MAAMC,UAAU,GAAGf,UAAU,CAACgB,aAAX,EAAnB;AACA,MAAMC,OAAO,GAAGlB,KAAK,CAACmB,MAAN,CAAkC,IAAlC,CAAhB;;AAHuD,wBAIrBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAJqB;AAAA,MAIhDC,SAJgD;AAAA,MAIrCC,YAJqC;;AAMvD,MAAMC,WAAgC,gBACjCrB,kBADiC;AAEpCsB,IAAAA,OAAO,EAAEH,SAAS,GAAG,GAAH,GAAS;AAFS,IAAtC;;AAIA,MAAMI,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,QAAMC,OAAO,uBAAGR,OAAO,CAACS,OAAX,qBAAG,iBAAiBC,KAAjC;;AACA,QAAIF,OAAJ,EAAa;AACX,UAAI,CAACZ,WAAL,EAAkB;AAChB,cAAMe,KAAK,CAAC,sDAAD,CAAX;AACD;;AACDP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,MAAAA,WAAW,CAAC;AAAEY,QAAAA,OAAO,EAAPA,OAAF;AAAWb,QAAAA,SAAS,EAATA;AAAX,OAAD,CAAX,CACGiB,IADH,CACQ,YAAM;AACVf,QAAAA,KAAK;;AACL,YAAIG,OAAO,CAACS,OAAZ,EAAqB;AACnBT,UAAAA,OAAO,CAACS,OAAR,CAAgBC,KAAhB,GAAwB,EAAxB;AACD;;AACDN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAPH,WAQS,UAACS,KAAD,EAAW;AAEhBT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAXH;AAYD;AACF,GApBD;;AAqBA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgB;AACpC,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACE,OAAlC,EAA2C;AACzCF,MAAAA,KAAK,CAACG,cAAN;AACAX,MAAAA,IAAI;AACL;AACF,GALD;;AAMA,sBACE,yCACE;AACE,mBAAY,eADd;AAEE,IAAA,GAAG,EAAEP,OAFP;AAGE,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,SAAS,EAAEL,aALb;AAME,IAAA,WAAW,EAAC;AANd,IADF,eASE;AAAK,IAAA,KAAK,EAAExB;AAAZ,kBACE;AAAQ,mBAAY,cAApB;AAAmC,IAAA,OAAO,EAAEiB,IAA5C;AAAkD,IAAA,KAAK,EAAEF;AAAzD,KACGF,SAAS,GAAG,KAAH,GAAW,IADvB,CADF,CATF,CADF;AAiBD","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { BasicCommentRequest } from '../../types';\n\nconst buttonDefaultStyle: React.CSSProperties = {\n  background: '#2364E8',\n  border: 'none',\n  color: 'white',\n  borderRadius: '4px',\n  padding: '4px 8px',\n};\n\nconst inputDiv: React.CSSProperties = {\n  marginTop: '8px',\n  textAlign: 'right',\n};\n\ntype TextInputProps = {\n  contentId: string;\n  onAdd: Function;\n  sendComment?: (req: BasicCommentRequest) => Promise<boolean>;\n};\n\nexport default function TextInput(props: TextInputProps) {\n  const { contentId, sendComment, onAdd } = props;\n  const controller = Controller.useController();\n  const textRef = React.useRef<HTMLTextAreaElement>(null);\n  const [isSending, setIsSending] = React.useState(false);\n\n  const buttonStyle: React.CSSProperties = {\n    ...buttonDefaultStyle,\n    opacity: isSending ? 0.5 : 1,\n  };\n  const send = () => {\n    const content = textRef.current?.value;\n    if (content) {\n      if (!sendComment) {\n        throw Error('`Comment` plugin should specify sendComment callback');\n      }\n      setIsSending(true);\n      sendComment({ content, contentId })\n        .then(() => {\n          onAdd();\n          if (textRef.current) {\n            textRef.current.value = '';\n          }\n          setIsSending(false);\n        })\n        .catch((error) => {\n          console.log(error);\n          setIsSending(false);\n        });\n    }\n  };\n  const handleKeyDown = (event: any) => {\n    if (event.keyCode === 13 && event.metaKey) {\n      event.preventDefault();\n      send();\n    }\n  };\n  return (\n    <div>\n      <textarea\n        data-testid=\"comment-input\"\n        ref={textRef}\n        style={{ width: '100%' }}\n        autoFocus\n        onKeyDown={handleKeyDown}\n        placeholder=\"按 enter 发送，shift+enter 换行\"\n      />\n      <div style={inputDiv}>\n        <button data-testid=\"comment-send\" onClick={send} style={buttonStyle}>\n          {isSending ? '发送中' : '评论'}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"file":"textInput.js"}