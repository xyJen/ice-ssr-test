import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
var nameStyle = {
  fontWeight: 500,
  fontSize: '14px',
  lineHeight: '20px',
  color: '#191F25',
  marginBottom: '4px'
};

var valueStyle = _extends({}, nameStyle, {
  fontWeight: 'normal'
});

var dateStyle = {
  fontSize: '12px',
  lineHeight: '17px',
  opacity: 0.4
};

function CommentItem(_ref) {
  var item = _ref.item;
  var author = item.author,
      content = item.content,
      date = item.date,
      contentId = item.contentId;
  return /*#__PURE__*/_createElement("div", {
    style: {
      marginTop: '1px solid #ECECEC'
    }
  }, /*#__PURE__*/_createElement("div", {
    style: nameStyle
  }, author), /*#__PURE__*/_createElement("div", {
    "data-testid": "comment-item",
    style: valueStyle
  }, content), /*#__PURE__*/_createElement("div", {
    style: dateStyle
  }, date));
}

var _ref2 = /*#__PURE__*/_createElement("div", null, "Loading");

var _ref3 = /*#__PURE__*/_createElement("div", null, "Error");

var _ref4 = /*#__PURE__*/_createElement("div", null, "Empty");

export default function CommentList(props) {
  var contentId = props.contentId,
      getCommentList = props.getCommentList;

  var _React$useState = React.useState([]),
      list = _React$useState[0],
      setList = _React$useState[1];

  var _React$useState2 = React.useState(false),
      loading = _React$useState2[0],
      setLoading = _React$useState2[1];

  var _React$useState3 = React.useState(false),
      error = _React$useState3[0],
      setError = _React$useState3[1];

  React.useEffect(function () {
    setLoading(true);

    if (!getCommentList) {
      throw Error('`Comment` plugin should specify getCommentList callback');
    }

    getCommentList(contentId).then(function (data) {
      setLoading(false);
      setList(data);
    })["catch"](function () {
      setLoading(false);
      setError(true);
    });
  }, [contentId, getCommentList]);
  var loaded = !error && !loading;
  return /*#__PURE__*/_createElement("div", null, loading && _ref2, error && _ref3, Boolean(loaded && !list.length) && _ref4, Boolean(loaded && list.length) && list.map(function (item) {
    return /*#__PURE__*/_createElement(CommentItem, {
      item: item
    });
  }));
}
//# sourceMappingURL=commentList.js.map