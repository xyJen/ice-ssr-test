import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import HoverEffect from "./HoverEffect";
import blockHoverEvent from "../utils/blockHoverEvent";
export default function CommentView(_ref) {
  var block = _ref.block,
      children = _ref.children;

  var _React$useState = React.useState(false),
      isAddHover = _React$useState[0],
      setIsAddHover = _React$useState[1];

  var handleBlockHover = React.useCallback(function (_ref2) {
    var blk = _ref2.block,
        isHover = _ref2.isHover;

    if (blk.key !== block.key) {
      return;
    }

    if (isHover !== isAddHover) {
      setIsAddHover(isHover);
    }
  }, [block, isAddHover]);
  React.useEffect(function () {
    blockHoverEvent.on(handleBlockHover);
    return function () {
      return blockHoverEvent.off(handleBlockHover);
    };
  }, [handleBlockHover]);
  return /*#__PURE__*/_createElement(React.Fragment, null, isAddHover && /*#__PURE__*/_createElement(HoverEffect, {
    blockKey: block.key
  }), children);
}
//# sourceMappingURL=commentView.js.map