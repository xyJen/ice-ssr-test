import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { Controller } from '@ali/4ever-cangjie';
import { CompleteNormal, ToolbarArrowDownNormal } from '@ali/we-icon';
import { MobileBottomCurtain } from '@ali/we-design';
import { ViewMark } from "../models/marks";
import { hideComment, cancelComment, showComment } from "../actions";
import blockEvent from "../utils/blockEvent";
import getSiblings from "../queries/getSiblings";
import getComments from "../queries/getComments";
var CURTAIN_HEIGHT = 480;
var curtainWrapperStyle = {
  maxHeight: '70vh'
};
var ToolbarArrowUpNormal = /*#__PURE__*/styled(ToolbarArrowDownNormal)(["transform:rotate(180deg);"]);
var TitleWrapper = /*#__PURE__*/styled.div(["padding:0 16px 0 19px;font-size:16px;display:flex;flex-direction:row;align-items:center;"]);
var Title = /*#__PURE__*/styled.div(["flex:1;font-size:14px;text-align:left;color:#171a1d;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;letter-spacing:0.22px;font-weight:normal;"]);
var Finish = /*#__PURE__*/styled.div(["padding:0 4px;line-height:42px;white-space:nowrap;color:#191F25;;flex:0 0 36px;text-align:center;& > span{font-size:20px;}"]);
var IconWrapper = /*#__PURE__*/styled.div(["height:42px;width:36px;display:flex;cursor:pointer;flex-direction:row;justify-content:center;align-items:center;color:", ";& span{font-size:20px;}"], function (props) {
  return props.isDisabled ? 'rgba(23, 26, 29, 0.24)' : '#171A1D';
});
var Content = /*#__PURE__*/styled.div(["display:flex;flex:1;overflow-y:scroll;flex-direction:row;& >:first-child{width:100%;}& [data-cmt-editor-container]{background:white;}"]);

var _ref2 = /*#__PURE__*/_createElement(ToolbarArrowUpNormal, null);

var _ref3 = /*#__PURE__*/_createElement(ToolbarArrowDownNormal, null);

var _ref4 = /*#__PURE__*/_createElement(CompleteNormal, null);

function CommentBottomBar(props) {
  var _configs$locale;

  var configs = props.configs,
      contentId = props.contentId,
      onAdd = props.onAdd,
      onDelete = props.onDelete;
  var controller = Controller.useController();
  var comments = getComments(controller);
  var item = comments.find(function (c) {
    return c.contentId === contentId;
  });
  var decorations = controller.value.decorations;
  var decoration = decorations.find(function (d) {
    return ViewMark.isViewMark(d.mark) && d.mark.data.contentId === contentId;
  });

  var _React$useState = React.useState(false),
      isForcedNotVisible = _React$useState[0],
      setForcedNotVisible = _React$useState[1];

  var timerRef = React.useRef();
  var hideActive = React.useCallback(function () {
    controller.run('onAction', hideComment());
  }, [controller]);
  var hideNew = React.useCallback(function () {
    if (decorations.some(function (d) {
      return ViewMark.isViewMark(d.mark) && d.mark.data.isNew;
    })) {
      controller.run('onAction', cancelComment());
    }
  }, [controller, decorations]);
  var handleClose = React.useCallback(function () {
    setForcedNotVisible(true);
    timerRef.current && clearTimeout(timerRef.current); // timeout 出于体验考虑，展示 100ms 动画效果；上面已经有清除逻辑

    timerRef.current = setTimeout(function () {
      setForcedNotVisible(false);
    }, 100);
    hideActive();
    hideNew();
  }, [hideActive, hideNew]);
  React.useEffect(function () {
    return function () {
      timerRef.current && clearTimeout(timerRef.current);
    };
  }, []);
  var handleCloseComment = React.useCallback(function () {
    (configs == null ? void 0 : configs.closeComment) && (configs == null ? void 0 : configs.closeComment(contentId, handleClose));
  }, [handleClose, contentId]);
  var isCloseDisabled = (configs == null ? void 0 : configs.hideCloseMenu) && configs.hideCloseMenu();

  var _controller$query = controller.query(getSiblings),
      prev = _controller$query.prev,
      next = _controller$query.next;

  var navigateToPrev = React.useCallback(function (event) {
    if (prev) {
      controller.run('onAction', showComment(prev));
    }

    blockEvent(event);
  }, [controller, prev]);
  var navigateToNext = React.useCallback(function (event) {
    if (next) {
      controller.run('onAction', showComment(next));
    }

    blockEvent(event);
  }, [controller, next]);

  if (!item && !decoration) {
    return null;
  }

  var mark = decoration == null ? void 0 : decoration.mark;

  var _ref = (mark == null ? void 0 : mark.data) || {},
      isNew = _ref.isNew,
      summary = _ref.summary,
      position = _ref.position;

  var readonlyPosition = '';

  if (isNew) {
    readonlyPosition = controller.readOnly ? position : undefined;
  }

  var summaryText = summary || (item == null ? void 0 : item.summary) || (configs == null ? void 0 : (_configs$locale = configs.locale) == null ? void 0 : _configs$locale.comment) || '';
  var renderProps = {
    contentId: contentId,
    isActive: true,
    isAutoFocus: false,
    isNew: Boolean(isNew),
    summary: summaryText,
    readonlyPosition: readonlyPosition,
    onAdd: onAdd,
    onDelete: onDelete
  };
  var children = (configs == null ? void 0 : configs.renderPopup) && configs.renderPopup(renderProps);
  return /*#__PURE__*/_createElement(MobileBottomCurtain, {
    isVisible: !!contentId && !isForcedNotVisible,
    onClose: handleClose,
    height: CURTAIN_HEIGHT,
    title: /*#__PURE__*/_createElement(TitleWrapper, null, /*#__PURE__*/_createElement(Title, null, "| " + summaryText), /*#__PURE__*/_createElement(IconWrapper, {
      isDisabled: !prev,
      onClick: navigateToPrev
    }, _ref2), /*#__PURE__*/_createElement(IconWrapper, {
      isDisabled: !next,
      onClick: navigateToNext
    }, _ref3), !isNew && !isCloseDisabled && /*#__PURE__*/_createElement(Finish, {
      onClick: handleCloseComment
    }, _ref4)),
    style: curtainWrapperStyle
  }, /*#__PURE__*/_createElement(Content, {
    key: contentId,
    onClick: blockEvent
  }, children));
}

export default CommentBottomBar;
//# sourceMappingURL=CommentBottomBar.js.map