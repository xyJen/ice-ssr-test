import _extends from "@babel/runtime/helpers/extends";

/* eslint-disable react/no-unused-prop-types */
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { Tooltip } from '@ali/we-design';
import { ToolbarAddCommentNormal } from '@ali/we-icon';
import { environment, CangjieSelectEvent } from '@ali/4ever-cangjie';
import { ACTION_COMMENT_CLICK, setActiveId, setSidebarVisible, showComment } from "../actions";
import blockEvent from "../utils/blockEvent";
import { BUTTON_SIZE as SIZE, BUTTON_SIZE_MOBILE as SIZE_MOBILE } from "../utils/constants";
import { tipStyle } from "../common";
var IS_MOBILE = environment.IS_MOBILE;
var FloatWrapper = /*#__PURE__*/styled.div(["position:absolute;top:0;right:0;cursor:pointer;float:right;width:", "px;height:", "px;display:flex;flex-direction:row;justify-content:center;align-items:center;box-sizing:content-box;[data-comment-sidebar] &[data-comment-bubble]{display:none;}[data-node-selecting] &[data-comment-bubble]{display:none;}"], SIZE_MOBILE, SIZE_MOBILE);
var PCFloatWrapper = /*#__PURE__*/styled(FloatWrapper)(["&:hover{background:rgba(126,134,142,0.12);border-radius:4px;}"]);
var Icon = /*#__PURE__*/styled.img(["width:", "px;", ""], IS_MOBILE ? SIZE : 20, function (props) {
  return props.showShadow ? 'filter: drop-shadow(0px 2px 3px rgba(0, 137, 255, 0.4));' : '';
});
var AddCommentIcon = /*#__PURE__*/styled(ToolbarAddCommentNormal)(["font-size:", "px;"], IS_MOBILE ? SIZE : 20);
var IconWrapper = /*#__PURE__*/styled.div(["position:relative;display:flex;flex-direction:row;justify-content:center;align-items:center;"]);
var AddIconWrapper = /*#__PURE__*/styled(IconWrapper)(["opacity:0;transition:opacity 0.25s;"]);
var CommentIconWrapper = /*#__PURE__*/styled(IconWrapper)(["transform:scale(0.75);opacity:0.5;transition:opacity 0.25s,transform 0.25s;"]);
var IconNumber = /*#__PURE__*/styled.div(["position:absolute;width:", "px;height:", "px;line-height:", "px;padding-left:0.5px;transform:scale(0.9);color:white;text-align:center;vertical-align:middle;font-size:8px;"], SIZE, SIZE, SIZE);
/**
 * 右侧悬浮 Icon
 */

var PCFloatButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var top = _ref.top,
      onClick = _ref.onClick,
      children = _ref.children,
      tips = _ref.tips,
      isNew = _ref.isNew,
      testId = _ref.testId,
      wrapperProps = _ref.wrapperProps;

  if (top === undefined) {
    return null;
  }

  var style = {
    top: top - SIZE / 2 + "px"
  };
  var attrs = isNew ? {} : {
    'data-comment-bubble': ''
  };
  return /*#__PURE__*/_createElement(PCFloatWrapper, _extends({}, attrs, wrapperProps, {
    "data-comment-noblur": true,
    ref: ref,
    style: style,
    "data-testid": testId,
    onMouseDown: onClick,
    onClick: blockEvent
  }), /*#__PURE__*/_createElement(Tooltip, {
    overlayStyle: tipStyle,
    title: tips,
    placement: "bottom"
  }, children));
});
/**
 * 右侧悬浮 Icon
 */

function MobileFloatButton(_ref2) {
  var top = _ref2.top,
      onClick = _ref2.onClick,
      children = _ref2.children;

  if (top === undefined) {
    return null;
  }

  var style = {
    top: top - SIZE / 2 + "px"
  };
  return /*#__PURE__*/_createElement(FloatWrapper, {
    style: style,
    "data-comment-bubble": true,
    onMouseDown: blockEvent,
    onClick: blockEvent,
    onTouchStart: onClick
  }, children);
}
/**
 * 右侧悬浮 Icon - 添加评论
 */


var _ref3 = /*#__PURE__*/_createElement(AddCommentIcon, null);

export var CommentAddButton = /*#__PURE__*/React.memo(function (props) {
  var controller = props.controller,
      range = props.range,
      onHover = props.onHover;
  var handleClick = React.useCallback(function (event) {
    blockEvent(event);

    if (onHover && range) {
      controller == null ? void 0 : controller.run('onCangjieSelect', CangjieSelectEvent({
        selection: range
      }));
    }

    controller == null ? void 0 : controller.run('onAction', {
      type: ACTION_COMMENT_CLICK
    });
  }, [controller, onHover, range]);
  var ref = React.useRef(null);
  React.useEffect(function () {
    var node = ref.current;

    if (!node) {
      return undefined;
    }

    var timer = requestAnimationFrame(function () {
      node.style.opacity = onHover ? '0.4' : '1';
    });
    return function () {
      cancelAnimationFrame(timer);
    };
  }, [onHover]);
  React.useEffect(function () {
    return function () {
      onHover && onHover(false);
    };
  }, [onHover]);
  var handleMouseEnter = React.useCallback(function () {
    var node = ref.current;

    if (!node || !onHover) {
      return;
    }

    onHover(true);
    node.style.opacity = '1';
  }, [onHover]);
  var handleMouseLeave = React.useCallback(function () {
    var node = ref.current;

    if (!node || !onHover) {
      return;
    }

    onHover(false);
    node.style.opacity = '0.4';
  }, [onHover]);
  var wrapperProps = React.useMemo(function () {
    return {
      onMouseEnter: handleMouseEnter,
      onMouseLeave: handleMouseLeave
    };
  }, [handleMouseEnter, handleMouseLeave]);
  return /*#__PURE__*/_createElement(PCFloatButton, _extends({}, props, {
    wrapperProps: wrapperProps,
    isNew: true,
    testId: "comment-add",
    onClick: handleClick,
    tips: props.tips || 'add comment'
  }), /*#__PURE__*/_createElement(AddIconWrapper, {
    ref: ref
  }, _ref3));
});
/**
 * 右侧悬浮 Icon - 已有评论
 */

export var CommentBubble = /*#__PURE__*/React.memo(function (props) {
  var top = props.top,
      isMultiple = props.isMultiple,
      tips = props.tips,
      count = props.count,
      contentId = props.contentId,
      controller = props.controller,
      showInline = props.showInline,
      onBubbleClick = props.onBubbleClick;
  var countStr = "" + (count || '');

  var handleClick = function handleClick(event) {
    blockEvent(event);

    if (IS_MOBILE) {
      /**
       * 移动端容易触发 cangjie touch 事件 bug，导致无法 blur
       * 这里先 hotfix 一下，后续等 cangjie touch 事件改造后，可以移除这里的 timeout
       */
      setTimeout(function () {
        controller.run('onCangjieBlur');
        controller.run('onAction', showComment(contentId));
      }, 300);
    } else if (showInline) {
      controller.run('onCangjieBlur');
      controller.run('onAction', showComment(contentId));
    } else {
      controller.run('onCangjieBlur');
      controller.run('onAction', setActiveId(contentId));
      controller.run('onAction', setSidebarVisible(true));
    }

    onBubbleClick && onBubbleClick(contentId);
  };

  var ref = React.useRef(null);
  React.useEffect(function () {
    var node = ref.current;

    if (!node) {
      return undefined;
    }

    var timer = requestAnimationFrame(function () {
      node.style.opacity = '1';
      node.style.transform = 'scale(1)';
    });
    return function () {
      cancelAnimationFrame(timer);
    };
  }, [countStr]);

  if (!countStr) {
    return null;
  }

  var src = isMultiple ? 'https://img.alicdn.com/imgextra/i3/O1CN01WGVJgh1DS3R5moD3Q_!!6000000000214-55-tps-20-20.svg' : 'https://img.alicdn.com/imgextra/i3/O1CN01bFO13z1bcAy5NpEpj_!!6000000003485-55-tps-20-20.svg';
  var RealFloatButton = IS_MOBILE ? MobileFloatButton : PCFloatButton;
  return /*#__PURE__*/_createElement(RealFloatButton, {
    controller: controller,
    onClick: handleClick,
    testId: "comment-show",
    top: top,
    tips: tips || 'Show Comment'
  }, /*#__PURE__*/_createElement(CommentIconWrapper, {
    ref: ref
  }, /*#__PURE__*/_createElement(Icon, {
    showShadow: true,
    src: src
  }), !isMultiple && /*#__PURE__*/_createElement(IconNumber, null, countStr)));
});
//# sourceMappingURL=floatButton.js.map