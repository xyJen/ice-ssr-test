{"version":3,"sources":["../../../../src/utils/hooks/renderNode.tsx"],"names":["createRenderNode","configs","renderNode","props","controller","next","isGrayed","document","value","node","isDisabled","Boolean","isElement","isVoid","query","isBlock","isLeafBlock","Block","isEdgeSelectable","firstChild","nodes","hasVoidWrapper","type","isText","voidMark","marks","find","ViewMark","isViewMark","undefined","children","key","isInsideTable","getClosest","parent","closestSelectable","getClosestSelectableBlock","block"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;uBAJ4B,a;;AAMb,SAASA,gBAAT,CACbC,OADa,EAEb;AACA,SAAO,SAASC,UAAT,CACLC,KADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AACA;AACJ;AACA;AACI,QAAIJ,OAAO,EAAEK,QAAT,IAAqB,CAACL,OAAO,CAACK,QAAR,EAA1B,EAA8C;AAC5C,aAAOD,IAAI,EAAX;AACD;;AACD,UAAM;AAAEE,MAAAA;AAAF,QAAeH,UAAU,CAACI,KAAhC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWN,KAAjB;AAEA,UAAMO,UAAU,GAAGC,OAAO,CAACV,OAAO,EAAES,UAAT,IAAuBT,OAAO,CAACS,UAAR,EAAxB,CAA1B;;AAEA,QAAI,CAACD,IAAI,CAACG,SAAL,EAAL,EAAuB;AACrB;AACA,aAAOP,IAAI,EAAX;AACD;;AAED,UAAMQ,MAAM,GAAGT,UAAU,CAACU,KAAX,CAAiB,QAAjB,EAA2BL,IAA3B,CAAf;;AAEA,QAAI,CAACI,MAAD,IAAW,CAACJ,IAAI,CAACM,OAAL,EAAhB,EAAgC;AAC9B;AACA,aAAOV,IAAI,EAAX;AACD;;AACD,UAAMW,WAAW,GAAGC,mBAAMD,WAAN,CAAkBP,IAAlB,CAApB;;AACA,UAAMS,gBAAgB,GAAGd,UAAU,CAACU,KAAX,CAAiB,kBAAjB,EAAqCL,IAArC,CAAzB;AACA,UAAMU,UAAU,GAAGV,IAAI,CAACW,KAAL,CAAW,CAAX,CAAnB;AACA,UAAMC,cAAc,GAClB,CAACR,MAAM,IAAIJ,IAAI,CAACa,IAAL,KAAc,MAAzB,KAAoCH,UAAU,EAAEI,MAAZ,EADtC;AAEA,UAAMC,QAAQ,GACZH,cAAc,IAAIF,UAAU,EAAEI,MAAZ,EAAlB,GACIJ,UAAU,CAACM,KAAX,CAAiBC,IAAjB,CAAsBC,gBAASC,UAA/B,CADJ,GAEIC,SAHN,CA5BA,CAiCA;;AACA,QAAIC,QAAJ;;AACA,QAAIT,cAAJ,EAAoB;AAClBS,MAAAA,QAAQ,gBACN,eAAC,sBAAD;AACE,QAAA,UAAU,EAAEpB,UADd;AAEE,QAAA,OAAO,EAAED,IAAI,CAACM,OAAL,EAFX;AAGE,QAAA,OAAO,EAAEN,IAAI,CAACsB,GAHhB;AAIE,QAAA,IAAI,EAAEP,QAJR;AAKE,QAAA,YAAY,EAAEnB,IAAI;AALpB,QADF;AASD,KAVD,MAUO;AACLyB,MAAAA,QAAQ,GAAGzB,IAAI,EAAf;AACD;;AAED,QAAI,CAACW,WAAD,IAAgB,CAACE,gBAArB,EAAuC;AACrC,aAAOY,QAAP;AACD,KAnDD,CAqDA;;;AACA,UAAME,aAAa,GAAGzB,QAAQ,CAAC0B,UAAT,CACpBxB,IAAI,CAACsB,GADe,EAEnBG,MAAD,IAAYjB,mBAAMF,OAAN,CAAcmB,MAAd,KAAyBA,MAAM,CAACZ,IAAP,KAAgB,OAFjC,CAAtB;;AAIA,QAAIU,aAAJ,EAAmB;AACjB,aAAOF,QAAP;AACD;;AAED,UAAMK,iBAAiB,GAAG5B,QAAQ,CAAC6B,yBAAT,CACxB3B,IAAI,CAACsB,GADmB,EAExB3B,UAFwB,CAA1B;;AAKA,QAAI+B,iBAAiB,IAAIA,iBAAiB,CAACJ,GAAlB,KAA0BtB,IAAI,CAACsB,GAAxD,EAA6D;AAC3D,aAAOD,QAAP;AACD,KArED,CAuEA;;;AACA,UAAMO,KAAK,GAAG5B,IAAd;AAEA,wBAAO,eAAC,oBAAD;AAAa,MAAA,KAAK,EAAE4B;AAApB,OAA4BP,QAA5B,CAAP;AACD,GA/ED;AAgFD","sourcesContent":["import React from 'react';\nimport { Node, Block, RenderNodeProps, Controller } from '@ali/4ever-cangjie';\nimport { CommentPluginConfigs } from '../types';\nimport { ViewMark } from '../models/marks';\nimport { VoidMarkView } from '../components/markView';\nimport CommentView from '../components/commentView';\n\nexport default function createRenderNode(\n  configs: CommentPluginConfigs | undefined,\n) {\n  return function renderNode(\n    props: RenderNodeProps<Node>,\n    controller: Controller,\n    next,\n  ) {\n    /**\n     * 这里不要乱 return，不然会导致整个页面刷新，全量调用 renderNode。\n     */\n    if (configs?.isGrayed && !configs.isGrayed()) {\n      return next();\n    }\n    const { document } = controller.value;\n    const { node } = props;\n\n    const isDisabled = Boolean(configs?.isDisabled && configs.isDisabled());\n\n    if (!node.isElement()) {\n      // texts\n      return next();\n    }\n\n    const isVoid = controller.query('isVoid', node);\n\n    if (!isVoid && !node.isBlock()) {\n      // non-void inlines\n      return next();\n    }\n    const isLeafBlock = Block.isLeafBlock(node);\n    const isEdgeSelectable = controller.query('isEdgeSelectable', node);\n    const firstChild = node.nodes[0];\n    const hasVoidWrapper =\n      (isVoid || node.type === 'code') && firstChild?.isText();\n    const voidMark =\n      hasVoidWrapper && firstChild?.isText()\n        ? firstChild.marks.find(ViewMark.isViewMark)\n        : undefined;\n\n    // add text marks for void elements\n    let children;\n    if (hasVoidWrapper) {\n      children = (\n        <VoidMarkView\n          isDisabled={isDisabled}\n          isBlock={node.isBlock()}\n          nodeKey={node.key}\n          mark={voidMark}\n          nextElements={next()}\n        />\n      );\n    } else {\n      children = next();\n    }\n\n    if (!isLeafBlock && !isEdgeSelectable) {\n      return children;\n    }\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const isInsideTable = document.getClosest(\n      node.key,\n      (parent) => Block.isBlock(parent) && parent.type === 'table',\n    );\n    if (isInsideTable) {\n      return children;\n    }\n\n    const closestSelectable = document.getClosestSelectableBlock(\n      node.key,\n      controller,\n    );\n\n    if (closestSelectable && closestSelectable.key !== node.key) {\n      return children;\n    }\n\n    // right side icon\n    const block = node as Block;\n\n    return <CommentView block={block}>{children}</CommentView>;\n  };\n}\n"],"file":"renderNode.js"}