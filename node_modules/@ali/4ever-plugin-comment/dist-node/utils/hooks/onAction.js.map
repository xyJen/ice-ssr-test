{"version":3,"sources":["../../../../src/utils/hooks/onAction.tsx"],"names":["configs","onAction","action","controller","next","type","ACTION_COMMENT_SET_SIDE_BAR","payload","Error","visible","onSidebarVisibleChange","isDisabled","ACTION_COMMENT_CLICK","onDisabled","run","locale","comment","ACTION_COMMENT_ADD","ACTION_COMMENT_SHOW","contentId","options","ACTION_COMMENT_CANCEL","ACTION_COMMENT_SET_ID","isAutoFocus","onActiveIdChange","ACTION_COMMENT_SET_COMMENTS","comments","ACTION_COMMENT_SELECTED_NODES","selectedNodes","firstNode","lastNode","length","anchor","Point","createFromParams","key","focus","newSelection","Selection","create","command","Commands","select","dispatch"],"mappings":"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","sourcesContent":["import { Action, Commands, Controller, Point, Selection } from '@ali/4ever-cangjie';\nimport type { NodeSelectToolbarActionPayload } from '@ali/4ever-cangjie';\nimport {\n  ACTION_COMMENT_CLICK,\n  ACTION_COMMENT_SHOW,\n  ACTION_COMMENT_ADD,\n  ACTION_COMMENT_CANCEL,\n  ACTION_COMMENT_SET_ID,\n  ACTION_COMMENT_SET_COMMENTS,\n  ACTION_COMMENT_SET_SIDE_BAR,\n  ACTION_COMMENT_SELECTED_NODES,\n} from '../actions';\nimport { CommentPluginConfigs } from '../types';\nimport addNewComment from '../actions/addNewComment';\nimport cancelComment from '../actions/cancelComment';\nimport newCommentClick from '../actions/newCommentClick';\nimport showComment from '../actions/showComment';\n\nimport setActiveId from '../commands/setActiveId';\nimport setComments from '../commands/setComments';\nimport setSidebarVisible from '../commands/setSidebarVisible';\n\nexport default (configs: CommentPluginConfigs | undefined) => {\n  return function onAction(action: Action, controller: Controller, next) {\n    const { type } = action;\n    /**\n     * 缩放模式下，也要允许设置侧边栏是否可见。不然设置无效，返回后，会出现重叠。\n     */\n    if (type === ACTION_COMMENT_SET_SIDE_BAR) {\n      if (!action.payload) {\n        throw new Error('ACTION_COMMENT_SET_SIDE_BAR: action.payload is empty');\n      }\n      const { visible } = action.payload;\n      setSidebarVisible(controller, visible);\n      const { onSidebarVisibleChange } = configs || {};\n      onSidebarVisibleChange && onSidebarVisibleChange(visible);\n      return next();\n    }\n    if (configs?.isDisabled && configs.isDisabled()) {\n      if (type === ACTION_COMMENT_CLICK) {\n        configs.onDisabled && configs.onDisabled();\n      }\n      return next();\n    }\n    if (type === ACTION_COMMENT_CLICK) {\n      controller.run('onCangjieBlur');\n      newCommentClick(controller, configs?.locale?.comment);\n    } else if (type === ACTION_COMMENT_ADD) {\n      addNewComment(controller);\n    } else if (type === ACTION_COMMENT_SHOW) {\n      showComment(\n        controller,\n        action.payload?.contentId,\n        action.payload?.options,\n        configs,\n      );\n    } else if (type === ACTION_COMMENT_CANCEL) {\n      cancelComment(controller);\n    } else if (type === ACTION_COMMENT_SET_ID) {\n      if (!action.payload) {\n        throw new Error('ACTION_COMMENT_SET_ID: action.payload is empty');\n      }\n      const { contentId, isAutoFocus } = action.payload;\n      setActiveId(controller, contentId, isAutoFocus);\n      const { onActiveIdChange } = configs || {};\n      onActiveIdChange && onActiveIdChange(contentId);\n    } else if (type === ACTION_COMMENT_SET_COMMENTS) {\n      if (!action.payload) {\n        throw new Error('ACTION_COMMENT_SET_COMMENTS: action.payload is empty');\n      }\n      const { comments } = action.payload;\n      setComments(controller, comments);\n    } else if (type === ACTION_COMMENT_SELECTED_NODES) {\n      const { selectedNodes } = action.payload as NodeSelectToolbarActionPayload;\n      const firstNode = selectedNodes[0];\n      const lastNode = selectedNodes[selectedNodes.length - 1];\n      const anchor = Point.createFromParams(firstNode.key, 'before');\n      const focus = Point.createFromParams(lastNode.key, 'after');\n      const newSelection = Selection.create({\n        anchor,\n        focus,\n      });\n      controller.command(Commands.select, newSelection);\n\n      controller.run('onAction', {\n        type: ACTION_COMMENT_CLICK,\n      });\n      controller.dispatch('cancelSelectNode');\n      return controller;\n    }\n    return next();\n  };\n};\n"],"file":"onAction.js"}