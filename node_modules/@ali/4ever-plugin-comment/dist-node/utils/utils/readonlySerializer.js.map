{"version":3,"sources":["../../../../src/utils/utils/readonlySerializer.ts"],"names":["serialize","start","end","document","startPath","getPath","key","endPath","undefined","selection","Selection","create","anchor","focus","text","summary","getFragmentAtRange","hashStr","startPathStr","join","endPathStr","position","offset","length","deserialize","comment","contentId","count","pathStartStr","offsetStartStr","pathEndStr","offsetEndStr","lengthStr","split","pathStart","map","p","parseInt","pathEnd","offsetStart","offsetEnd","startNode","getNodeByPath","endNode","TextPoint","newHash","mark","ViewMark","isReadonly","decoration","Decoration"],"mappings":"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","sourcesContent":["import { Decoration, Selection, TextPoint, Document } from '@ali/4ever-cangjie';\nimport { ViewMark } from '../models/marks';\nimport { CommentItem } from '../types';\nimport hashCode from './hashCode';\n\nexport function serialize(\n  start: TextPoint,\n  end: TextPoint,\n  document: Document,\n) {\n  const startPath = document.getPath(start.key);\n  const endPath = document.getPath(end.key);\n  if (!startPath || !endPath) {\n    return undefined;\n  }\n  const selection = Selection.create({ anchor: start, focus: end });\n  const { text: summary } = document.getFragmentAtRange(selection);\n  const hashStr = hashCode(summary);\n  const startPathStr = startPath.join(',');\n  const endPathStr = endPath.join(',');\n  const position = `${startPathStr}-${start.offset}-${endPathStr}-${end.offset}-${summary.length}-${hashStr}`;\n  return {\n    position,\n    summary,\n  };\n}\n\nexport function deserialize(comment: CommentItem, document: Document) {\n  const { contentId, position, count } = comment;\n  const [\n    pathStartStr,\n    offsetStartStr,\n    pathEndStr,\n    offsetEndStr,\n    lengthStr,\n    hashStr,\n  ] = position.split('-');\n  if (\n    !pathStartStr ||\n    !offsetStartStr ||\n    !pathEndStr ||\n    !offsetEndStr ||\n    !lengthStr ||\n    !hashStr\n  ) {\n    return undefined;\n  }\n  const pathStart = pathStartStr.split(',').map((p) => parseInt(p, 10));\n  const pathEnd = pathEndStr.split(',').map((p) => parseInt(p, 10));\n  const offsetStart = parseInt(offsetStartStr, 10);\n  const offsetEnd = parseInt(offsetEndStr, 10);\n  const length = parseInt(lengthStr, 10);\n  const startNode = document.getNodeByPath(pathStart);\n  const endNode = document.getNodeByPath(pathEnd);\n  if (!startNode || !endNode) {\n    return undefined;\n  }\n  const anchor = TextPoint.create({\n    key: startNode.key,\n    offset: offsetStart,\n  });\n  const focus = TextPoint.create({\n    key: endNode.key,\n    offset: offsetEnd,\n  });\n  const selection = Selection.create({ anchor, focus });\n  const { text } = document.getFragmentAtRange(selection);\n  const newHash = hashCode(text);\n  if (newHash !== hashStr || length !== text.length) {\n    return undefined;\n  }\n  const mark = ViewMark.create({\n    contentId,\n    count,\n    summary: text,\n    isReadonly: true,\n  });\n  const decoration = Decoration.create({\n    start: anchor,\n    end: focus,\n    mark,\n  });\n  return decoration;\n}\n"],"file":"readonlySerializer.js"}