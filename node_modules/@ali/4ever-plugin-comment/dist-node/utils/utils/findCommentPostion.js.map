{"version":3,"sources":["../../../../src/utils/utils/findCommentPostion.ts"],"names":["comparePoint","lp","rp","document","edgeToOffset","p","edge","EdgePoint","BEFORE","Number","MAX_SAFE_INTEGER","key","lOffset","isEdgePoint","offset","rOffset","lPath","getPath","rPath","Path","compare","findCommentPostion","controller","decorations","selection","container","window","isFromPopup","value","docKey","docNode","domUtils","findDOMNodeSafely","top","docTop","width","docWidth","height","docHeight","getBoundingClientRect","allRows","result","skipSelection","isCollapsed","allDecs","anchor","convertToTextPoints","some","d","ViewMark","isViewMark","mark","start","end","commonParams","item","paramPoint","focus","rowKey","clientTop","newRowItem","push","forEach","decoration","existingRow","find","r"],"mappings":";;;;;;;AACA;;AAUA;;AACA;;AACA;;AACA;;AAdA;;AAiBA;AACA;AACA;AACA,SAASA,YAAT,CACEC,EADF,EAEEC,EAFF,EAGEC,QAHF,EAIE;AACA,QAAMC,YAAY,GAAIC,CAAD,IACnBA,CAAC,CAACC,IAAF,KAAWC,uBAAUC,MAArB,GAA8B,CAAC,CAA/B,GAAmCC,MAAM,CAACC,gBAD5C;;AAEA,MAAIT,EAAE,CAACU,GAAH,KAAWT,EAAE,CAACS,GAAlB,EAAuB;AACrB,UAAMC,OAAO,GAAGX,EAAE,CAACY,WAAH,KAAmBT,YAAY,CAACH,EAAD,CAA/B,GAAsCA,EAAE,CAACa,MAAzD;AACA,UAAMC,OAAO,GAAGb,EAAE,CAACW,WAAH,KAAmBT,YAAY,CAACF,EAAD,CAA/B,GAAsCA,EAAE,CAACY,MAAzD;AACA,WAAOF,OAAO,GAAGG,OAAjB;AACD;;AACD,QAAMC,KAAK,GAAGb,QAAQ,CAACc,OAAT,CAAiBhB,EAAE,CAACU,GAApB,CAAd;AACA,QAAMO,KAAK,GAAGf,QAAQ,CAACc,OAAT,CAAiBf,EAAE,CAACS,GAApB,CAAd;;AACA,MAAI,CAACK,KAAD,IAAU,CAACE,KAAf,EAAsB;AACpB,WAAO,CAAP;AACD;;AACD,SAAOC,kBAAKC,OAAL,CAAaJ,KAAb,EAAoBE,KAApB,KAA8B,CAArC;AACD;;AAUD;AACA;AACA;AACO,SAASG,kBAAT,CAA4B;AACjCC,EAAAA,UADiC;AAEjCC,EAAAA,WAFiC;AAGjCC,EAAAA,SAHiC;AAIjCC,EAAAA,SAAS,GAAGC,MAJqB;AAKjCC,EAAAA;AALiC,CAA5B,EAMgB;AACrB,QAAM;AAAExB,IAAAA;AAAF,MAAemB,UAAU,CAACM,KAAhC;AACA,QAAM;AAAEjB,IAAAA,GAAG,EAAEkB;AAAP,MAAkB1B,QAAxB;;AACA,QAAM2B,OAAO,GAAGC,sBAASC,iBAAT,CAA2BH,MAA3B,EAAmCJ,SAAnC,CAAhB;;AACA,MAAI,CAACK,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AACD,QAAM;AACJG,IAAAA,GAAG,EAAEC,MADD;AAEJC,IAAAA,KAAK,EAAEC,QAFH;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAIFR,OAAO,CAACS,qBAAR,EAJJ;AAKA,QAAMC,OAAO,GAAG,mCAAe;AAC7BlB,IAAAA,UAD6B;AAE7Bc,IAAAA,QAF6B;AAG7BX,IAAAA,SAH6B;AAI7BS,IAAAA,MAJ6B;AAK7BI,IAAAA;AAL6B,GAAf,CAAhB,CAZqB,CAoBrB;;AACA,QAAMG,MAAwB,GAAG,EAAjC,CArBqB,CAuBrB;;AACA,MAAIC,aAAa,GAAG,KAApB;;AACA,MAAIlB,SAAS,EAAEmB,WAAf,EAA4B;AAC1B,UAAM;AAAEpB,MAAAA,WAAW,EAAEqB;AAAf,QAA2BtB,UAAU,CAACM,KAA5C;AACA,UAAM;AAAEiB,MAAAA;AAAF,QAAarB,SAAS,CAACsB,mBAAV,CAA8B3C,QAA9B,CAAnB;AACAuC,IAAAA,aAAa,GAAGE,OAAO,CAACG,IAAR,CAAcC,CAAD,IAAO;AAClC,aACEC,gBAASC,UAAT,CAAoBF,CAAC,CAACG,IAAtB,KACAnD,YAAY,CAAC6C,MAAD,EAASG,CAAC,CAACI,KAAX,EAAkBjD,QAAlB,CAAZ,IAA2C,CAD3C,IAEAH,YAAY,CAAC6C,MAAD,EAASG,CAAC,CAACK,GAAX,EAAgBlD,QAAhB,CAAZ,IAAyC,CAH3C;AAKD,KANe,CAAhB;AAOD;;AACD,QAAMmD,YAAY,GAAG;AAAEd,IAAAA,OAAF;AAAWlB,IAAAA,UAAX;AAAuBG,IAAAA,SAAvB;AAAkCE,IAAAA,WAAlC;AAA+CO,IAAAA;AAA/C,GAArB;;AACA,MAAI,CAACQ,aAAD,IAAkBlB,SAAlB,IAA+B,yBAAWF,UAAX,EAAuBE,SAAvB,CAAnC,EAAsE;AACpE,UAAM+B,IAAI,GAAG,4CAAmB,EAC9B,GAAGD,YAD2B;AAE9BE,MAAAA,UAAU,EAAEhC,SAAS,EAAEiC;AAFO,KAAnB,CAAb;;AAIA,QAAIF,IAAJ,EAAU;AACR,YAAM,CAACG,MAAD,EAASzB,GAAT,IAAgBsB,IAAtB;AACA,YAAMI,SAAS,GAAG1B,GAAG,GAAGC,MAAxB;AACA,YAAM0B,UAAU,GAAG;AAAEF,QAAAA,MAAF;AAAUzB,QAAAA,GAAV;AAAe0B,QAAAA,SAAf;AAA0BnC,QAAAA,SAA1B;AAAqCD,QAAAA,WAAW,EAAE;AAAlD,OAAnB;AACAkB,MAAAA,MAAM,CAACoB,IAAP,CAAYD,UAAZ;AACD;AACF,GAhDoB,CAkDrB;;;AACArC,EAAAA,WAAW,CAACuC,OAAZ,CAAqBC,UAAD,IAAgB;AAClC,UAAMR,IAAI,GAAG,4CAAmB,EAC9B,GAAGD,YAD2B;AAE9BE,MAAAA,UAAU,EAAEO,UAAU,CAACX;AAFO,KAAnB,CAAb;;AAIA,QAAI,CAACG,IAAL,EAAW;AACT;AACD;;AACD,UAAM,CAACG,MAAD,EAASzB,GAAT,IAAgBsB,IAAtB;AACA,UAAMS,WAAW,GAAGvB,MAAM,CAACwB,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACR,MAAF,KAAaA,MAAhC,CAApB;;AACA,QAAI,CAACM,WAAL,EAAkB;AAChB,YAAML,SAAS,GAAG1B,GAAG,GAAGC,MAAxB;AACA,YAAM0B,UAAU,GAAG;AAAEF,QAAAA,MAAF;AAAUzB,QAAAA,GAAV;AAAe0B,QAAAA,SAAf;AAA0BpC,QAAAA,WAAW,EAAE,CAACwC,UAAD;AAAvC,OAAnB;AACAtB,MAAAA,MAAM,CAACoB,IAAP,CAAYD,UAAZ;AACD,KAJD,MAIO;AACLI,MAAAA,WAAW,CAAC/B,GAAZ,GAAkBA,GAAlB;AACA+B,MAAAA,WAAW,CAACzC,WAAZ,CAAwBsC,IAAxB,CAA6BE,UAA7B;AACD;AACF,GAlBD;AAmBA,SAAOtB,MAAP;AACD","sourcesContent":["/* eslint-disable no-console */\nimport {\n  EdgePoint,\n  TextPoint,\n  Controller,\n  Path,\n  Document,\n  Selection,\n  Decoration,\n  domUtils,\n} from '@ali/4ever-cangjie';\nimport { getRowTopFromPoint } from '../commentPosition/getRowTopFromPoint';\nimport { validateCaches } from '../commentPosition/positionCache';\nimport { ViewMark } from '../models/marks';\nimport { canComment } from '../queries';\nimport { PostionRowItem } from '../types';\n\n/**\n * 对比两个 Point 在 document 的出现位置\n */\nfunction comparePoint(\n  lp: TextPoint | EdgePoint,\n  rp: TextPoint | EdgePoint,\n  document: Document,\n) {\n  const edgeToOffset = (p: EdgePoint) =>\n    p.edge === EdgePoint.BEFORE ? -1 : Number.MAX_SAFE_INTEGER;\n  if (lp.key === rp.key) {\n    const lOffset = lp.isEdgePoint() ? edgeToOffset(lp) : lp.offset;\n    const rOffset = rp.isEdgePoint() ? edgeToOffset(rp) : rp.offset;\n    return lOffset - rOffset;\n  }\n  const lPath = document.getPath(lp.key);\n  const rPath = document.getPath(rp.key);\n  if (!lPath || !rPath) {\n    return 0;\n  }\n  return Path.compare(lPath, rPath) || 0;\n}\n\ntype FindPositionParams = {\n  controller: Controller;\n  decorations: Decoration[];\n  selection?: Selection;\n  container?: Window | HTMLElement;\n  isFromPopup?: boolean;\n};\n\n/**\n * 获取评论框的位置。返回相对于当前 block 的位置，和屏幕绝对位置\n */\nexport function findCommentPostion({\n  controller,\n  decorations,\n  selection,\n  container = window,\n  isFromPopup,\n}: FindPositionParams) {\n  const { document } = controller.value;\n  const { key: docKey } = document;\n  const docNode = domUtils.findDOMNodeSafely(docKey, container);\n  if (!docNode) {\n    return [];\n  }\n  const {\n    top: docTop,\n    width: docWidth,\n    height: docHeight,\n  } = docNode.getBoundingClientRect();\n  const allRows = validateCaches({\n    controller,\n    docWidth,\n    container,\n    docTop,\n    docHeight,\n  });\n\n  // 初始化分行对象\n  const result: PostionRowItem[] = [];\n\n  // 如果当前已经有评论了，就 skip 掉（处理 block void 的 collapse 场景）\n  let skipSelection = false;\n  if (selection?.isCollapsed) {\n    const { decorations: allDecs } = controller.value;\n    const { anchor } = selection.convertToTextPoints(document);\n    skipSelection = allDecs.some((d) => {\n      return (\n        ViewMark.isViewMark(d.mark) &&\n        comparePoint(anchor, d.start, document) >= 0 &&\n        comparePoint(anchor, d.end, document) <= 0\n      );\n    });\n  }\n  const commonParams = { allRows, controller, container, isFromPopup, docTop };\n  if (!skipSelection && selection && canComment(controller, selection)) {\n    const item = getRowTopFromPoint({\n      ...commonParams,\n      paramPoint: selection?.focus,\n    });\n    if (item) {\n      const [rowKey, top] = item;\n      const clientTop = top + docTop;\n      const newRowItem = { rowKey, top, clientTop, selection, decorations: [] };\n      result.push(newRowItem);\n    }\n  }\n\n  // 处理 decorations\n  decorations.forEach((decoration) => {\n    const item = getRowTopFromPoint({\n      ...commonParams,\n      paramPoint: decoration.start,\n    });\n    if (!item) {\n      return;\n    }\n    const [rowKey, top] = item;\n    const existingRow = result.find((r) => r.rowKey === rowKey);\n    if (!existingRow) {\n      const clientTop = top + docTop;\n      const newRowItem = { rowKey, top, clientTop, decorations: [decoration] };\n      result.push(newRowItem);\n    } else {\n      existingRow.top = top;\n      existingRow.decorations.push(decoration);\n    }\n  });\n  return result;\n}\n"],"file":"findCommentPostion.js"}