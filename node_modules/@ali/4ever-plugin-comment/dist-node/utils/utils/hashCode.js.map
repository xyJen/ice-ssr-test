{"version":3,"sources":["../../../../src/utils/utils/hashCode.ts"],"names":["hashCode","str","MAX","Math","pow","hash","i","length","chr","charCodeAt","toString"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACe,SAASA,QAAT,CAAkBC,GAAlB,EAA+B;AAC5C,QAAMC,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAZ;AACA,MAAIC,IAAI,GAAG,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAME,GAAG,GAAGP,GAAG,CAACQ,UAAJ,CAAeH,CAAf,CAAZ;AACAD,IAAAA,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAYG,GAAnB;AACAH,IAAAA,IAAI,IAAIH,GAAR;AACD;;AACD,SAAOG,IAAI,CAACK,QAAL,CAAc,EAAd,CAAP;AACD","sourcesContent":["/**\n * any texts to hash string. ie: duoyu -> f0a038fb\n *\n * return: hex string (length: 1 - 8)\n */\nexport default function hashCode(str: string) {\n  const MAX = Math.pow(2, 32);\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const chr = str.charCodeAt(i);\n    hash = hash * 31 + chr;\n    hash %= MAX;\n  }\n  return hash.toString(16);\n}\n"],"file":"hashCode.js"}