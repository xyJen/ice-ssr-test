{"version":3,"sources":["../../../../src/utils/utils/filterFragment.ts"],"names":["filterCommentMark","node","isText","leaves","some","l","marks","m","type","MARK_TYPE_DATA","newLeaves","map","leave","set","filter","isElement","newChildren","nodes","every","child","index","filterFragment","newNode"],"mappings":";;;;;;;AACA;;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAA6C;AAC3C,MACEA,IAAI,CAACC,MAAL,MACAD,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQF,IAAR,CAAcG,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWC,qBAA/B,CAAxB,CAFF,EAGE;AACA,UAAMC,SAAS,GAAGT,IAAI,CAACE,MAAL,CAAYQ,GAAZ,CAAiBC,KAAD,IAAW;AAC3C,aAAOA,KAAK,CAACC,GAAN,CACL,OADK,EAELD,KAAK,CAACN,KAAN,CAAYQ,MAAZ,CAAoBP,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWC,qBAArC,CAFK,CAAP;AAID,KALiB,CAAlB;AAMA,WAAOR,IAAI,CAACY,GAAL,CAAS,QAAT,EAAmBH,SAAnB,CAAP;AACD,GAXD,MAWO,IAAIT,IAAI,CAACc,SAAL,EAAJ,EAAsB;AAC3B,UAAMC,WAAW,GAAGf,IAAI,CAACgB,KAAL,CAAWN,GAAX,CAAeX,iBAAf,CAApB;;AACA,QAAIgB,WAAW,CAACE,KAAZ,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkBD,KAAK,KAAKlB,IAAI,CAACgB,KAAL,CAAWG,KAAX,CAA9C,CAAJ,EAAsE;AACpE,aAAOnB,IAAP;AACD;;AACD,WAAOA,IAAI,CAACY,GAAL,CAAS,OAAT,EAAkBG,WAAlB,CAAP;AACD;;AACD,SAAOf,IAAP;AACD;;AAEc,SAASoB,cAAT,CAAwBpB,IAAxB,EAAwC;AACrD,QAAMqB,OAAO,GAAGtB,iBAAiB,CAACC,IAAD,CAAjC;AACA,SAAOqB,OAAP;AACD","sourcesContent":["import { Node, Document } from '@ali/4ever-cangjie';\nimport { MARK_TYPE_DATA } from '../types';\n\nfunction filterCommentMark(node: Node): Node {\n  if (\n    node.isText() &&\n    node.leaves.some((l) => l.marks.some((m) => m.type === MARK_TYPE_DATA))\n  ) {\n    const newLeaves = node.leaves.map((leave) => {\n      return leave.set(\n        'marks',\n        leave.marks.filter((m) => m.type !== MARK_TYPE_DATA),\n      );\n    });\n    return node.set('leaves', newLeaves);\n  } else if (node.isElement()) {\n    const newChildren = node.nodes.map(filterCommentMark);\n    if (newChildren.every((child, index) => child === node.nodes[index])) {\n      return node;\n    }\n    return node.set('nodes', newChildren);\n  }\n  return node;\n}\n\nexport default function filterFragment(node: Document) {\n  const newNode = filterCommentMark(node);\n  return newNode as Document;\n}\n"],"file":"filterFragment.js"}