{"version":3,"sources":["../../../../src/utils/commands/setComments.ts"],"names":["lastUpdatedDocMap","WeakMap","setComments","controller","comments","document","data","value","_commentsCachedData","prevData","isSameCommentsData","setData","newDecs","forEach","comment","position","decoration","push","updatedDecos","decorations","setDecorations","filter","dec","mark","find","d","ViewMark","isViewMark","contentId","length","flush","prevDoc","get","anchor","start","focus","end","dataMark","DataMark","create","range","Selection","isValid","isValidRangeSelection","isCollapsed","node","getNode","key","text","parent","getParent","isText","isBlock","type","command","Commands","addMarkByKey","addMarkAtRange","set"],"mappings":";;;;;;;;;AAAA;;AAOA;;AACA;;AAEA;;AACA;;AAEA,MAAMA,iBAAiB,GAAG,IAAIC,OAAJ,EAA1B;;AAEe,SAASC,WAAT,CACbC,UADa,EAEbC,QAFa,EAGb;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBH,UAAU,CAACI,KAAtC;AACA,QAAM;AAAEC,IAAAA,mBAAmB,EAAEC;AAAvB,MAAoCH,IAA1C;AAEA,QAAMI,kBAAkB,GAAG,4BAAMN,QAAN,EAAgBK,QAAhB,CAA3B,CAJA,CAKA;;AACA,MAAI,CAACC,kBAAL,EAAyB;AACvBP,IAAAA,UAAU,CAACQ,OAAX,CAAmB,EACjB,GAAGL,IADc;AAEjBE,MAAAA,mBAAmB,EAAEJ;AAFJ,KAAnB;AAID;;AACD,MAAIQ,OAAqB,GAAG,EAA5B;AACAR,EAAAA,QAAQ,CAACS,OAAT,CAAkBC,OAAD,IAAa;AAC5B,QAAI,CAACA,OAAO,CAACC,QAAb,EAAuB;AACrB;AACD;;AACD,UAAMC,UAAU,GAAG,qCAAYF,OAAZ,EAAqBT,QAArB,CAAnB;AACAW,IAAAA,UAAU,IAAIJ,OAAO,CAACK,IAAR,CAAaD,UAAb,CAAd;AACD,GAND;AAOA,QAAME,YAAY,GAAG,4CAAmBf,UAAnB,CAArB;;AACA,MAAI,CAAC,4BAAMe,YAAN,EAAoBf,UAAU,CAACI,KAAX,CAAiBY,WAArC,CAAL,EAAwD;AACtDhB,IAAAA,UAAU,CAACiB,cAAX,CAA0BF,YAA1B;AACD;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,UAAU,CAACI,KAAnC;AACAK,EAAAA,OAAO,GAAGA,OAAO,CAACS,MAAR,CAAgBC,GAAD,IAAS;AAChC,UAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;;AACA,QACEJ,WAAW,CAACK,IAAZ,CACGC,CAAD,IACEC,gBAASC,UAAT,CAAoBF,CAAC,CAACF,IAAtB,KACAE,CAAC,CAACF,IAAF,CAAOjB,IAAP,CAAYsB,SAAZ,KAA0BL,IAAI,CAACjB,IAAL,CAAUsB,SAHxC,CADF,EAME;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAZS,CAAV;;AAaA,MAAI,CAAChB,OAAO,CAACiB,MAAb,EAAqB;AACnB,WAAO1B,UAAU,CAAC2B,KAAX,EAAP;AACD;;AAED,QAAMC,OAAO,GAAG/B,iBAAiB,CAACgC,GAAlB,CAAsB7B,UAAtB,CAAhB;AAGA;AACF;AACA;AACA;AACA;AACA;;AACE,MAAIO,kBAAkB,IAAIqB,OAAO,KAAK1B,QAAtC,EAAgD;AAC9C,WAAOF,UAAU,CAAC2B,KAAX,EAAP;AACD;;AAEDlB,EAAAA,OAAO,CAACC,OAAR,CAAiBS,GAAD,IAAS;AACvB,UAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACA,UAAMU,MAAM,GAAGX,GAAG,CAACY,KAAnB;AACA,UAAMC,KAAK,GAAGb,GAAG,CAACc,GAAlB;AACA,UAAM;AAAER,MAAAA;AAAF,QAAgBL,IAAI,CAACjB,IAA3B;;AACA,UAAM+B,QAAQ,GAAGC,gBAASC,MAAT,CAAgB;AAAEX,MAAAA;AAAF,KAAhB,CAAjB;;AACA,UAAMY,KAAK,GAAGC,uBAAUF,MAAV,CAAiB;AAAEN,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAAjB,CAAd;;AACA,UAAMO,OAAO,GAAGD,uBAAUE,qBAAV,CAAgCtC,QAAhC,EAA0CmC,KAA1C,CAAhB;;AACA,QAAI,CAACE,OAAL,EAAc;AACZ;AACD;;AACD,QAAIF,KAAK,CAACI,WAAV,EAAuB;AACrB,YAAMC,IAAI,GAAGxC,QAAQ,CAACyC,OAAT,CAAiBb,MAAM,CAACc,GAAxB,CAAb;AACA;AACN;AACA;;AACM,UAAIF,IAAI,EAAEG,IAAV,EAAgB;AACd;AACR;AACA;AACA;AACQ,cAAMC,MAAM,GAAG5C,QAAQ,CAAC6C,SAAT,CAAmBjB,MAAM,CAACc,GAA1B,CAAf;;AACA,YAAIF,IAAI,CAACM,MAAL,MAAiBF,MAAM,EAAEG,OAAR,EAAjB,IAAsCH,MAAM,CAACI,IAAP,KAAgB,MAA1D,EAAkE;AAChElD,UAAAA,UAAU,CAACmD,OAAX,CACEC,sBAASC,YADX,EAEEX,IAAI,CAACE,GAFP,EAGE,CAHF,EAIEF,IAAI,CAACG,IAAL,CAAUnB,MAJZ,EAKEQ,QALF;AAOD;AACF,OAfD,MAeO;AACLlC,QAAAA,UAAU,CAACmD,OAAX,CAAmBC,sBAASC,YAA5B,EAA0CvB,MAAM,CAACc,GAAjD,EAAsD,CAAtD,EAAyD,CAAzD,EAA4DV,QAA5D;AACD;AACF,KAvBD,MAuBO;AACLlC,MAAAA,UAAU,CAACmD,OAAX,CAAmBC,sBAASE,cAA5B,EAA4CjB,KAA5C,EAAmDH,QAAnD;AACD;AACF,GArCD;AAsCArC,EAAAA,iBAAiB,CAAC0D,GAAlB,CAAsBvD,UAAtB,EAAkCA,UAAU,CAACI,KAAX,CAAiBF,QAAnD;AACA,SAAOF,UAAU,CAACiB,cAAX,CAA0B,4CAAmBjB,UAAnB,CAA1B,EAA0D2B,KAA1D,EAAP;AACD","sourcesContent":["import {\n  Commands,\n  Controller,\n  Decoration,\n  Document,\n  Selection,\n} from '@ali/4ever-cangjie';\nimport equal from 'fast-deep-equal';\nimport { DataMark, ViewMark } from '../models/marks';\nimport { CommentItem } from '../types';\nimport { marksToDecorations } from '../utils/marksToDecorations';\nimport { deserialize } from '../utils/readonlySerializer';\n\nconst lastUpdatedDocMap = new WeakMap<Controller, Document>();\n\nexport default function setComments(\n  controller: Controller,\n  comments: CommentItem[],\n) {\n  const { document, data } = controller.value;\n  const { _commentsCachedData: prevData } = data;\n\n  const isSameCommentsData = equal(comments, prevData);\n  // skipped seting same comments\n  if (!isSameCommentsData) {\n    controller.setData({\n      ...data,\n      _commentsCachedData: comments,\n    });\n  }\n  let newDecs: Decoration[] = [];\n  comments.forEach((comment) => {\n    if (!comment.position) {\n      return;\n    }\n    const decoration = deserialize(comment, document);\n    decoration && newDecs.push(decoration);\n  });\n  const updatedDecos = marksToDecorations(controller);\n  if (!equal(updatedDecos, controller.value.decorations)) {\n    controller.setDecorations(updatedDecos);\n  }\n  const { decorations } = controller.value;\n  newDecs = newDecs.filter((dec) => {\n    const mark = dec.mark as ViewMark;\n    if (\n      decorations.find(\n        (d) =>\n          ViewMark.isViewMark(d.mark) &&\n          d.mark.data.contentId === mark.data.contentId,\n      )\n    ) {\n      return false;\n    }\n    return true;\n  });\n  if (!newDecs.length) {\n    return controller.flush();\n  }\n\n  const prevDoc = lastUpdatedDocMap.get(controller);\n\n\n  /**\n   * 自上次更新后，comments 和 document 均无变化，就不需要在继续了。\n   *\n   * 这里是保障，万一 addMark 不生效，会导致无限循环的问题：\n   * addMark -> document change -> setComments -> addMark\n   */\n  if (isSameCommentsData && prevDoc === document) {\n    return controller.flush();\n  }\n\n  newDecs.forEach((dec) => {\n    const mark = dec.mark as ViewMark;\n    const anchor = dec.start;\n    const focus = dec.end;\n    const { contentId } = mark.data;\n    const dataMark = DataMark.create({ contentId });\n    const range = Selection.create({ anchor, focus });\n    const isValid = Selection.isValidRangeSelection(document, range);\n    if (!isValid) {\n      return;\n    }\n    if (range.isCollapsed) {\n      const node = document.getNode(anchor.key);\n      /**\n       * 如果 Text 节点非空，decorations 校验会过滤掉。\n       */\n      if (node?.text) {\n        /**\n         * 对 Code 的特殊处理。\n         * TODO：Code 插件重构后，移除这里。\n         */\n        const parent = document.getParent(anchor.key);\n        if (node.isText() && parent?.isBlock() && parent.type === 'code') {\n          controller.command(\n            Commands.addMarkByKey,\n            node.key,\n            0,\n            node.text.length,\n            dataMark,\n          );\n        }\n      } else {\n        controller.command(Commands.addMarkByKey, anchor.key, 0, 0, dataMark);\n      }\n    } else {\n      controller.command(Commands.addMarkAtRange, range, dataMark);\n    }\n  });\n  lastUpdatedDocMap.set(controller, controller.value.document);\n  return controller.setDecorations(marksToDecorations(controller)).flush();\n}\n"],"file":"setComments.js"}