{"version":3,"sources":["../../../../src/utils/components/ExternalSidebar.tsx"],"names":["EmptyDiv","styled","div","ExternalSidebar","props","ref","React","useRef","controller","configs","isCommentLoaded","onAdd","useCallback","run","onCancel","container","document","decorations","value","activeContentId","updatePosition","onSidebarInfoUpdated","commentDecorations","filter","d","ViewMark","isViewMark","mark","rowItems","length","selection","undefined","isFromPopup","autoFocus","cards","reduce","array","item","forEach","decoration","top","clientTop","isNew","contentId","summary","position","count","data","isActive","card","Boolean","isAutoFocus","push","prevDocument","usePrevious","useEffect","timer","setTimeout","EFFECT_DEBOUNCE_TIME","clearTimeout","current"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Controller, useZoomContainer } from '@ali/4ever-cangjie';\n\nimport { getActiveId } from '../queries';\nimport { CommentPluginConfigs, SidebarCardInfo } from '../types';\nimport { ViewMark } from '../models/marks';\nimport { findCommentPostion } from '../utils/findCommentPostion';\nimport isAutoFocus from '../queries/isAutoFocus';\nimport { addComment, cancelComment } from '../actions';\nimport { useDocSize } from '../hooks/useDocSize';\n\ntype IProps = {\n  controller: Controller;\n  isCommentLoaded: boolean;\n  configs: CommentPluginConfigs;\n};\n\nconst EmptyDiv = styled.div`\n  width: 0;\n  height: 0;\n  display: none;\n`;\n\nexport default function ExternalSidebar(props: IProps) {\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const { controller, configs = {}, isCommentLoaded } = props;\n  const onAdd = React.useCallback(() => {\n    controller.run('onAction', addComment());\n  }, [controller]);\n  const onCancel = React.useCallback(() => {\n    controller.run('onAction', cancelComment());\n  }, [controller]);\n\n  const container = useZoomContainer();\n  const { document, decorations } = controller.value;\n  const activeContentId = getActiveId(controller);\n\n  const updatePosition = React.useCallback(() => {\n    const { onSidebarInfoUpdated } = configs as Record<string, any>;\n    if (!onSidebarInfoUpdated) {\n      return;\n    }\n    const commentDecorations = decorations.filter((d) => {\n      return ViewMark.isViewMark(d.mark);\n    });\n    const rowItems = commentDecorations.length\n      ? findCommentPostion({\n          controller,\n          decorations: commentDecorations,\n          selection: undefined,\n          container: container || undefined,\n          isFromPopup: true,\n        })\n      : [];\n    const autoFocus = isAutoFocus(controller);\n\n    // 生成 card 基本信息（这里可能有覆盖的场景）\n    const cards = rowItems.reduce<SidebarCardInfo[]>((array, item) => {\n      item.decorations.forEach((decoration) => {\n        const { top, clientTop } = item;\n        const mark = decoration.mark as ViewMark;\n        const { isNew, contentId, summary, position, count } = mark.data;\n        const isActive = contentId === activeContentId;\n\n        const card = {\n          top,\n          clientTop,\n          isNew: Boolean(isNew),\n          isAutoFocus: Boolean(autoFocus && isActive),\n          isActive,\n          count,\n          summary,\n          position,\n          contentId,\n        };\n        array.push(card);\n      });\n      return array;\n    }, []);\n    onSidebarInfoUpdated({\n      cards,\n      onAdd,\n      onCancel,\n      isCommentLoaded,\n    });\n  }, [decorations, controller, document, container, activeContentId, isCommentLoaded]);\n\n  const prevDocument = usePrevious(document);\n  React.useEffect(() => {\n    /**\n     * 非 document 变化，比如 decorations 变了，立刻刷新\n     */\n    if (!prevDocument || prevDocument === document) {\n      updatePosition();\n      return undefined;\n    }\n    /**\n     * document 变化，延迟刷新\n     *\n     * 一些场景比如（折叠标题），有动画延迟，等一会儿再更新，不然会闪烁\n     */\n    const timer = setTimeout(() => {\n      updatePosition();\n    }, EFFECT_DEBOUNCE_TIME);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [updatePosition]);\n  useDocSize(ref, updatePosition);\n  return <EmptyDiv ref={ref} />;\n}\n\nconst EFFECT_DEBOUNCE_TIME = 300;\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = React.useRef<T>();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n"],"file":"ExternalSidebar.js"}