"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommentBubble = exports.CommentAddButton = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _weDesign = require("@ali/we-design");

var _weIcon = require("@ali/we-icon");

var _everCangjie = require("@ali/4ever-cangjie");

var _actions = require("../actions");

var _blockEvent = _interopRequireDefault(require("../utils/blockEvent"));

var _constants = require("../utils/constants");

var _common = require("../common");

/* eslint-disable react/no-unused-prop-types */
const _createElement = /*#__PURE__*/_react.default.createElement;
const {
  IS_MOBILE
} = _everCangjie.environment;

const FloatWrapper = /*#__PURE__*/_styledComponents.default.div(["position:absolute;top:0;right:0;cursor:pointer;float:right;width:", "px;height:", "px;display:flex;flex-direction:row;justify-content:center;align-items:center;box-sizing:content-box;[data-comment-sidebar] &[data-comment-bubble]{display:none;}[data-node-selecting] &[data-comment-bubble]{display:none;}"], _constants.BUTTON_SIZE_MOBILE, _constants.BUTTON_SIZE_MOBILE);

const PCFloatWrapper = /*#__PURE__*/(0, _styledComponents.default)(FloatWrapper)(["&:hover{background:rgba(126,134,142,0.12);border-radius:4px;}"]);

const Icon = /*#__PURE__*/_styledComponents.default.img(["width:", "px;", ""], IS_MOBILE ? _constants.BUTTON_SIZE : 20, props => props.showShadow ? 'filter: drop-shadow(0px 2px 3px rgba(0, 137, 255, 0.4));' : '');

const AddCommentIcon = /*#__PURE__*/(0, _styledComponents.default)(_weIcon.ToolbarAddCommentNormal)(["font-size:", "px;"], IS_MOBILE ? _constants.BUTTON_SIZE : 20);

const IconWrapper = /*#__PURE__*/_styledComponents.default.div(["position:relative;display:flex;flex-direction:row;justify-content:center;align-items:center;"]);

const AddIconWrapper = /*#__PURE__*/(0, _styledComponents.default)(IconWrapper)(["opacity:0;transition:opacity 0.25s;"]);
const CommentIconWrapper = /*#__PURE__*/(0, _styledComponents.default)(IconWrapper)(["transform:scale(0.75);opacity:0.5;transition:opacity 0.25s,transform 0.25s;"]);

const IconNumber = /*#__PURE__*/_styledComponents.default.div(["position:absolute;width:", "px;height:", "px;line-height:", "px;padding-left:0.5px;transform:scale(0.9);color:white;text-align:center;vertical-align:middle;font-size:8px;"], _constants.BUTTON_SIZE, _constants.BUTTON_SIZE, _constants.BUTTON_SIZE);
/**
 * 右侧悬浮 Icon
 */


const PCFloatButton = /*#__PURE__*/_react.default.forwardRef(({
  top,
  onClick,
  children,
  tips,
  isNew,
  testId,
  wrapperProps
}, ref) => {
  if (top === undefined) {
    return null;
  }

  const style = {
    top: `${top - _constants.BUTTON_SIZE / 2}px`
  };
  const attrs = isNew ? {} : {
    'data-comment-bubble': ''
  };
  return /*#__PURE__*/_createElement(PCFloatWrapper, (0, _extends2.default)({}, attrs, wrapperProps, {
    "data-comment-noblur": true,
    ref: ref,
    style: style,
    "data-testid": testId,
    onMouseDown: onClick,
    onClick: _blockEvent.default
  }), /*#__PURE__*/_createElement(_weDesign.Tooltip, {
    overlayStyle: _common.tipStyle,
    title: tips,
    placement: "bottom"
  }, children));
});
/**
 * 右侧悬浮 Icon
 */


function MobileFloatButton({
  top,
  onClick,
  children
}) {
  if (top === undefined) {
    return null;
  }

  const style = {
    top: `${top - _constants.BUTTON_SIZE / 2}px`
  };
  return /*#__PURE__*/_createElement(FloatWrapper, {
    style: style,
    "data-comment-bubble": true,
    onMouseDown: _blockEvent.default,
    onClick: _blockEvent.default,
    onTouchStart: onClick
  }, children);
}
/**
 * 右侧悬浮 Icon - 添加评论
 */


var _ref = /*#__PURE__*/_createElement(AddCommentIcon, null);

const CommentAddButton = /*#__PURE__*/_react.default.memo(props => {
  const {
    controller,
    range,
    onHover
  } = props;

  const handleClick = _react.default.useCallback(event => {
    (0, _blockEvent.default)(event);

    if (onHover && range) {
      controller?.run('onCangjieSelect', (0, _everCangjie.CangjieSelectEvent)({
        selection: range
      }));
    }

    controller?.run('onAction', {
      type: _actions.ACTION_COMMENT_CLICK
    });
  }, [controller, onHover, range]);

  const ref = _react.default.useRef(null);

  _react.default.useEffect(() => {
    const node = ref.current;

    if (!node) {
      return undefined;
    }

    const timer = requestAnimationFrame(() => {
      node.style.opacity = onHover ? '0.4' : '1';
    });
    return () => {
      cancelAnimationFrame(timer);
    };
  }, [onHover]);

  _react.default.useEffect(() => {
    return () => {
      onHover && onHover(false);
    };
  }, [onHover]);

  const handleMouseEnter = _react.default.useCallback(() => {
    const node = ref.current;

    if (!node || !onHover) {
      return;
    }

    onHover(true);
    node.style.opacity = '1';
  }, [onHover]);

  const handleMouseLeave = _react.default.useCallback(() => {
    const node = ref.current;

    if (!node || !onHover) {
      return;
    }

    onHover(false);
    node.style.opacity = '0.4';
  }, [onHover]);

  const wrapperProps = _react.default.useMemo(() => ({
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave
  }), [handleMouseEnter, handleMouseLeave]);

  return /*#__PURE__*/_createElement(PCFloatButton, (0, _extends2.default)({}, props, {
    wrapperProps: wrapperProps,
    isNew: true,
    testId: "comment-add",
    onClick: handleClick,
    tips: props.tips || 'add comment'
  }), /*#__PURE__*/_createElement(AddIconWrapper, {
    ref: ref
  }, _ref));
});
/**
 * 右侧悬浮 Icon - 已有评论
 */


exports.CommentAddButton = CommentAddButton;

const CommentBubble = /*#__PURE__*/_react.default.memo(props => {
  const {
    top,
    isMultiple,
    tips,
    count,
    contentId,
    controller,
    showInline,
    onBubbleClick
  } = props;
  const countStr = `${count || ''}`;

  const handleClick = event => {
    (0, _blockEvent.default)(event);

    if (IS_MOBILE) {
      /**
       * 移动端容易触发 cangjie touch 事件 bug，导致无法 blur
       * 这里先 hotfix 一下，后续等 cangjie touch 事件改造后，可以移除这里的 timeout
       */
      setTimeout(() => {
        controller.run('onCangjieBlur');
        controller.run('onAction', (0, _actions.showComment)(contentId));
      }, 300);
    } else if (showInline) {
      controller.run('onCangjieBlur');
      controller.run('onAction', (0, _actions.showComment)(contentId));
    } else {
      controller.run('onCangjieBlur');
      controller.run('onAction', (0, _actions.setActiveId)(contentId));
      controller.run('onAction', (0, _actions.setSidebarVisible)(true));
    }

    onBubbleClick && onBubbleClick(contentId);
  };

  const ref = _react.default.useRef(null);

  _react.default.useEffect(() => {
    const node = ref.current;

    if (!node) {
      return undefined;
    }

    const timer = requestAnimationFrame(() => {
      node.style.opacity = '1';
      node.style.transform = 'scale(1)';
    });
    return () => {
      cancelAnimationFrame(timer);
    };
  }, [countStr]);

  if (!countStr) {
    return null;
  }

  const src = isMultiple ? 'https://img.alicdn.com/imgextra/i3/O1CN01WGVJgh1DS3R5moD3Q_!!6000000000214-55-tps-20-20.svg' : 'https://img.alicdn.com/imgextra/i3/O1CN01bFO13z1bcAy5NpEpj_!!6000000003485-55-tps-20-20.svg';
  const RealFloatButton = IS_MOBILE ? MobileFloatButton : PCFloatButton;
  return /*#__PURE__*/_createElement(RealFloatButton, {
    controller: controller,
    onClick: handleClick,
    testId: "comment-show",
    top: top,
    tips: tips || 'Show Comment'
  }, /*#__PURE__*/_createElement(CommentIconWrapper, {
    ref: ref
  }, /*#__PURE__*/_createElement(Icon, {
    showShadow: true,
    src: src
  }), !isMultiple && /*#__PURE__*/_createElement(IconNumber, null, countStr)));
});

exports.CommentBubble = CommentBubble;
//# sourceMappingURL=floatButton.js.map