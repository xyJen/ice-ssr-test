"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _everCangjie = require("@ali/4ever-cangjie");

var _weIcon = require("@ali/we-icon");

var _weDesign = require("@ali/we-design");

var _marks = require("../models/marks");

var _actions = require("../actions");

var _blockEvent = _interopRequireDefault(require("../utils/blockEvent"));

var _getSiblings = _interopRequireDefault(require("../queries/getSiblings"));

var _getComments = _interopRequireDefault(require("../queries/getComments"));

const _createElement = /*#__PURE__*/_react.default.createElement;
const CURTAIN_HEIGHT = 480;
const curtainWrapperStyle = {
  maxHeight: '70vh'
};
const ToolbarArrowUpNormal = /*#__PURE__*/(0, _styledComponents.default)(_weIcon.ToolbarArrowDownNormal)(["transform:rotate(180deg);"]);

const TitleWrapper = /*#__PURE__*/_styledComponents.default.div(["padding:0 16px 0 19px;font-size:16px;display:flex;flex-direction:row;align-items:center;"]);

const Title = /*#__PURE__*/_styledComponents.default.div(["flex:1;font-size:14px;text-align:left;color:#171a1d;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;letter-spacing:0.22px;font-weight:normal;"]);

const Finish = /*#__PURE__*/_styledComponents.default.div(["padding:0 4px;line-height:42px;white-space:nowrap;color:#191F25;;flex:0 0 36px;text-align:center;& > span{font-size:20px;}"]);

const IconWrapper = /*#__PURE__*/_styledComponents.default.div(["height:42px;width:36px;display:flex;cursor:pointer;flex-direction:row;justify-content:center;align-items:center;color:", ";& span{font-size:20px;}"], props => props.isDisabled ? 'rgba(23, 26, 29, 0.24)' : '#171A1D');

const Content = /*#__PURE__*/_styledComponents.default.div(["display:flex;flex:1;overflow-y:scroll;flex-direction:row;& >:first-child{width:100%;}& [data-cmt-editor-container]{background:white;}"]);

var _ref = /*#__PURE__*/_createElement(ToolbarArrowUpNormal, null);

var _ref2 = /*#__PURE__*/_createElement(_weIcon.ToolbarArrowDownNormal, null);

var _ref3 = /*#__PURE__*/_createElement(_weIcon.CompleteNormal, null);

function CommentBottomBar(props) {
  const {
    configs,
    contentId,
    onAdd,
    onDelete
  } = props;

  const controller = _everCangjie.Controller.useController();

  const comments = (0, _getComments.default)(controller);
  const item = comments.find(c => c.contentId === contentId);
  const {
    decorations
  } = controller.value;
  const decoration = decorations.find(d => _marks.ViewMark.isViewMark(d.mark) && d.mark.data.contentId === contentId);

  const [isForcedNotVisible, setForcedNotVisible] = _react.default.useState(false);

  const timerRef = _react.default.useRef();

  const hideActive = _react.default.useCallback(() => {
    controller.run('onAction', (0, _actions.hideComment)());
  }, [controller]);

  const hideNew = _react.default.useCallback(() => {
    if (decorations.some(d => _marks.ViewMark.isViewMark(d.mark) && d.mark.data.isNew)) {
      controller.run('onAction', (0, _actions.cancelComment)());
    }
  }, [controller, decorations]);

  const handleClose = _react.default.useCallback(() => {
    setForcedNotVisible(true);
    timerRef.current && clearTimeout(timerRef.current); // timeout 出于体验考虑，展示 100ms 动画效果；上面已经有清除逻辑

    timerRef.current = setTimeout(() => {
      setForcedNotVisible(false);
    }, 100);
    hideActive();
    hideNew();
  }, [hideActive, hideNew]);

  _react.default.useEffect(() => {
    return () => {
      timerRef.current && clearTimeout(timerRef.current);
    };
  }, []);

  const handleCloseComment = _react.default.useCallback(() => {
    configs?.closeComment && configs?.closeComment(contentId, handleClose);
  }, [handleClose, contentId]);

  const isCloseDisabled = configs?.hideCloseMenu && configs.hideCloseMenu();
  const {
    prev,
    next
  } = controller.query(_getSiblings.default);

  const navigateToPrev = _react.default.useCallback(event => {
    if (prev) {
      controller.run('onAction', (0, _actions.showComment)(prev));
    }

    (0, _blockEvent.default)(event);
  }, [controller, prev]);

  const navigateToNext = _react.default.useCallback(event => {
    if (next) {
      controller.run('onAction', (0, _actions.showComment)(next));
    }

    (0, _blockEvent.default)(event);
  }, [controller, next]);

  if (!item && !decoration) {
    return null;
  }

  const mark = decoration?.mark;
  const {
    isNew,
    summary,
    position
  } = mark?.data || {};
  let readonlyPosition = '';

  if (isNew) {
    readonlyPosition = controller.readOnly ? position : undefined;
  }

  const summaryText = summary || item?.summary || configs?.locale?.comment || '';
  const renderProps = {
    contentId,
    isActive: true,
    isAutoFocus: false,
    isNew: Boolean(isNew),
    summary: summaryText,
    readonlyPosition,
    onAdd,
    onDelete
  };
  const children = configs?.renderPopup && configs.renderPopup(renderProps);
  return /*#__PURE__*/_createElement(_weDesign.MobileBottomCurtain, {
    isVisible: !!contentId && !isForcedNotVisible,
    onClose: handleClose,
    height: CURTAIN_HEIGHT,
    title: /*#__PURE__*/_createElement(TitleWrapper, null, /*#__PURE__*/_createElement(Title, null, `| ${summaryText}`), /*#__PURE__*/_createElement(IconWrapper, {
      isDisabled: !prev,
      onClick: navigateToPrev
    }, _ref), /*#__PURE__*/_createElement(IconWrapper, {
      isDisabled: !next,
      onClick: navigateToNext
    }, _ref2), !isNew && !isCloseDisabled && /*#__PURE__*/_createElement(Finish, {
      onClick: handleCloseComment
    }, _ref3)),
    style: curtainWrapperStyle
  }, /*#__PURE__*/_createElement(Content, {
    key: contentId,
    onClick: _blockEvent.default
  }, children));
}

var _default = CommentBottomBar;
exports.default = _default;
//# sourceMappingURL=CommentBottomBar.js.map