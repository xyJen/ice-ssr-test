{"version":3,"sources":["../../../../../src/utils/components/simplePopup/commentList.tsx"],"names":["nameStyle","fontWeight","fontSize","lineHeight","color","marginBottom","valueStyle","dateStyle","opacity","CommentItem","item","author","content","date","contentId","marginTop","CommentList","props","getCommentList","list","setList","React","useState","loading","setLoading","error","setError","useEffect","Error","then","data","catch","loaded","Boolean","length","map"],"mappings":";;;;;;;;;AAAA;;uBAC4B,a;AAE5B,MAAMA,SAA8B,GAAG;AACrCC,EAAAA,UAAU,EAAE,GADyB;AAErCC,EAAAA,QAAQ,EAAE,MAF2B;AAGrCC,EAAAA,UAAU,EAAE,MAHyB;AAIrCC,EAAAA,KAAK,EAAE,SAJ8B;AAKrCC,EAAAA,YAAY,EAAE;AALuB,CAAvC;AAOA,MAAMC,UAA+B,GAAG,EACtC,GAAGN,SADmC;AAEtCC,EAAAA,UAAU,EAAE;AAF0B,CAAxC;AAKA,MAAMM,SAA8B,GAAG;AACrCL,EAAAA,QAAQ,EAAE,MAD2B;AAErCC,EAAAA,UAAU,EAAE,MAFyB;AAGrCK,EAAAA,OAAO,EAAE;AAH4B,CAAvC;;AAeA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAiD;AAC/C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAAuCJ,IAA7C;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb;AAAZ,kBACE;AAAK,IAAA,KAAK,EAAEf;AAAZ,KAAwBW,MAAxB,CADF,eAEE;AAAK,mBAAY,cAAjB;AAAgC,IAAA,KAAK,EAAEL;AAAvC,KAAoDM,OAApD,CAFF,eAGE;AAAK,IAAA,KAAK,EAAEL;AAAZ,KAAwBM,IAAxB,CAHF,CADF;AAOD;;wBA4BiB,sC;;yBACF,oC;;yBAC0B,oC;;AA5B3B,SAASG,WAAT,CAAqBC,KAArB,EAA8C;AAC3D,QAAM;AAAEH,IAAAA,SAAF;AAAaI,IAAAA;AAAb,MAAgCD,KAAtC;;AAEA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBC,eAAMC,QAAN,CAAmC,EAAnC,CAAxB;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,eAAMC,QAAN,CAAe,KAAf,CAA9B;;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,eAAMC,QAAN,CAAe,KAAf,CAA1B;;AAEAD,iBAAMM,SAAN,CAAgB,MAAM;AACpBH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI,CAACN,cAAL,EAAqB;AACnB,YAAMU,KAAK,CAAC,yDAAD,CAAX;AACD;;AACDV,IAAAA,cAAc,CAACJ,SAAD,CAAd,CACGe,IADH,CACSC,IAAD,IAAU;AACdN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,OAAO,CAACU,IAAD,CAAP;AACD,KAJH,EAKGC,KALH,CAKS,MAAM;AACXP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KARH;AASD,GAdD,EAcG,CAACZ,SAAD,EAAYI,cAAZ,CAdH;;AAgBA,QAAMc,MAAM,GAAG,CAACP,KAAD,IAAU,CAACF,OAA1B;AACA,sBACE,4BACGA,OAAO,QADV,EAEGE,KAAK,SAFR,EAGGQ,OAAO,CAACD,MAAM,IAAI,CAACb,IAAI,CAACe,MAAjB,CAAP,SAHH,EAIGD,OAAO,CAACD,MAAM,IAAIb,IAAI,CAACe,MAAhB,CAAP,IACCf,IAAI,CAACgB,GAAL,CAAUzB,IAAD,iBAAU,eAAC,WAAD;AAAa,IAAA,IAAI,EAAEA;AAAnB,IAAnB,CALJ,CADF;AASD","sourcesContent":["import React from 'react';\nimport { BasicCommentItem } from '../../types';\n\nconst nameStyle: React.CSSProperties = {\n  fontWeight: 500,\n  fontSize: '14px',\n  lineHeight: '20px',\n  color: '#191F25',\n  marginBottom: '4px',\n};\nconst valueStyle: React.CSSProperties = {\n  ...nameStyle,\n  fontWeight: 'normal',\n};\n\nconst dateStyle: React.CSSProperties = {\n  fontSize: '12px',\n  lineHeight: '17px',\n  opacity: 0.4,\n};\n\ntype CommentItemProps = {\n  item: BasicCommentItem;\n};\n\ntype CommentListProps = {\n  contentId: string;\n  getCommentList?: (contentId: string) => Promise<BasicCommentItem[]>;\n};\n\nfunction CommentItem({ item }: CommentItemProps) {\n  const { author, content, date, contentId } = item;\n  return (\n    <div style={{ marginTop: '1px solid #ECECEC' }}>\n      <div style={nameStyle}>{author}</div>\n      <div data-testid=\"comment-item\" style={valueStyle}>{content}</div>\n      <div style={dateStyle}>{date}</div>\n    </div>\n  );\n}\n\nexport default function CommentList(props: CommentListProps) {\n  const { contentId, getCommentList } = props;\n\n  const [list, setList] = React.useState<BasicCommentItem[]>([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoading(true);\n    if (!getCommentList) {\n      throw Error('`Comment` plugin should specify getCommentList callback');\n    }\n    getCommentList(contentId)\n      .then((data) => {\n        setLoading(false);\n        setList(data);\n      })\n      .catch(() => {\n        setLoading(false);\n        setError(true);\n      });\n  }, [contentId, getCommentList]);\n\n  const loaded = !error && !loading;\n  return (\n    <div>\n      {loading && <div>Loading</div>}\n      {error && <div>Error</div>}\n      {Boolean(loaded && !list.length) && <div>Empty</div>}\n      {Boolean(loaded && list.length) &&\n        list.map((item) => <CommentItem item={item} />)}\n    </div>\n  );\n}\n"],"file":"commentList.js"}