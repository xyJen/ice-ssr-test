{"version":3,"sources":["../../../../../src/utils/components/simplePopup/textInput.tsx"],"names":["buttonDefaultStyle","background","border","color","borderRadius","padding","inputDiv","marginTop","textAlign","TextInput","props","contentId","sendComment","onAdd","controller","Controller","useController","textRef","React","useRef","isSending","setIsSending","useState","buttonStyle","opacity","send","content","current","value","Error","then","catch","error","handleKeyDown","event","keyCode","metaKey","preventDefault","width"],"mappings":";;;;;;;;;AAAA;;AACA;;uBAA4B,a;AAG5B,MAAMA,kBAAuC,GAAG;AAC9CC,EAAAA,UAAU,EAAE,SADkC;AAE9CC,EAAAA,MAAM,EAAE,MAFsC;AAG9CC,EAAAA,KAAK,EAAE,OAHuC;AAI9CC,EAAAA,YAAY,EAAE,KAJgC;AAK9CC,EAAAA,OAAO,EAAE;AALqC,CAAhD;AAQA,MAAMC,QAA6B,GAAG;AACpCC,EAAAA,SAAS,EAAE,KADyB;AAEpCC,EAAAA,SAAS,EAAE;AAFyB,CAAtC;;AAWe,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AACvD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA;AAA1B,MAAoCH,KAA1C;;AACA,QAAMI,UAAU,GAAGC,wBAAWC,aAAX,EAAnB;;AACA,QAAMC,OAAO,GAAGC,eAAMC,MAAN,CAAkC,IAAlC,CAAhB;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,eAAMI,QAAN,CAAe,KAAf,CAAlC;;AAEA,QAAMC,WAAgC,GAAG,EACvC,GAAGvB,kBADoC;AAEvCwB,IAAAA,OAAO,EAAEJ,SAAS,GAAG,GAAH,GAAS;AAFY,GAAzC;;AAIA,QAAMK,IAAI,GAAG,MAAM;AACjB,UAAMC,OAAO,GAAGT,OAAO,CAACU,OAAR,EAAiBC,KAAjC;;AACA,QAAIF,OAAJ,EAAa;AACX,UAAI,CAACd,WAAL,EAAkB;AAChB,cAAMiB,KAAK,CAAC,sDAAD,CAAX;AACD;;AACDR,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,MAAAA,WAAW,CAAC;AAAEc,QAAAA,OAAF;AAAWf,QAAAA;AAAX,OAAD,CAAX,CACGmB,IADH,CACQ,MAAM;AACVjB,QAAAA,KAAK;;AACL,YAAII,OAAO,CAACU,OAAZ,EAAqB;AACnBV,UAAAA,OAAO,CAACU,OAAR,CAAgBC,KAAhB,GAAwB,EAAxB;AACD;;AACDP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAPH,EAQGU,KARH,CAQUC,KAAD,IAAW;AAEhBX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAXH;AAYD;AACF,GApBD;;AAqBA,QAAMY,aAAa,GAAIC,KAAD,IAAgB;AACpC,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACE,OAAlC,EAA2C;AACzCF,MAAAA,KAAK,CAACG,cAAN;AACAZ,MAAAA,IAAI;AACL;AACF,GALD;;AAMA,sBACE,yCACE;AACE,mBAAY,eADd;AAEE,IAAA,GAAG,EAAER,OAFP;AAGE,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,SAAS,EAAEL,aALb;AAME,IAAA,WAAW,EAAC;AANd,IADF,eASE;AAAK,IAAA,KAAK,EAAE3B;AAAZ,kBACE;AAAQ,mBAAY,cAApB;AAAmC,IAAA,OAAO,EAAEmB,IAA5C;AAAkD,IAAA,KAAK,EAAEF;AAAzD,KACGH,SAAS,GAAG,KAAH,GAAW,IADvB,CADF,CATF,CADF;AAiBD","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { BasicCommentRequest } from '../../types';\n\nconst buttonDefaultStyle: React.CSSProperties = {\n  background: '#2364E8',\n  border: 'none',\n  color: 'white',\n  borderRadius: '4px',\n  padding: '4px 8px',\n};\n\nconst inputDiv: React.CSSProperties = {\n  marginTop: '8px',\n  textAlign: 'right',\n};\n\ntype TextInputProps = {\n  contentId: string;\n  onAdd: Function;\n  sendComment?: (req: BasicCommentRequest) => Promise<boolean>;\n};\n\nexport default function TextInput(props: TextInputProps) {\n  const { contentId, sendComment, onAdd } = props;\n  const controller = Controller.useController();\n  const textRef = React.useRef<HTMLTextAreaElement>(null);\n  const [isSending, setIsSending] = React.useState(false);\n\n  const buttonStyle: React.CSSProperties = {\n    ...buttonDefaultStyle,\n    opacity: isSending ? 0.5 : 1,\n  };\n  const send = () => {\n    const content = textRef.current?.value;\n    if (content) {\n      if (!sendComment) {\n        throw Error('`Comment` plugin should specify sendComment callback');\n      }\n      setIsSending(true);\n      sendComment({ content, contentId })\n        .then(() => {\n          onAdd();\n          if (textRef.current) {\n            textRef.current.value = '';\n          }\n          setIsSending(false);\n        })\n        .catch((error) => {\n          console.log(error);\n          setIsSending(false);\n        });\n    }\n  };\n  const handleKeyDown = (event: any) => {\n    if (event.keyCode === 13 && event.metaKey) {\n      event.preventDefault();\n      send();\n    }\n  };\n  return (\n    <div>\n      <textarea\n        data-testid=\"comment-input\"\n        ref={textRef}\n        style={{ width: '100%' }}\n        autoFocus\n        onKeyDown={handleKeyDown}\n        placeholder=\"按 enter 发送，shift+enter 换行\"\n      />\n      <div style={inputDiv}>\n        <button data-testid=\"comment-send\" onClick={send} style={buttonStyle}>\n          {isSending ? '发送中' : '评论'}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"file":"textInput.js"}