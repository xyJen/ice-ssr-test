"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CommentList;

var _react = _interopRequireDefault(require("react"));

const _createElement = /*#__PURE__*/_react.default.createElement;
const nameStyle = {
  fontWeight: 500,
  fontSize: '14px',
  lineHeight: '20px',
  color: '#191F25',
  marginBottom: '4px'
};
const valueStyle = { ...nameStyle,
  fontWeight: 'normal'
};
const dateStyle = {
  fontSize: '12px',
  lineHeight: '17px',
  opacity: 0.4
};

function CommentItem({
  item
}) {
  const {
    author,
    content,
    date,
    contentId
  } = item;
  return /*#__PURE__*/_createElement("div", {
    style: {
      marginTop: '1px solid #ECECEC'
    }
  }, /*#__PURE__*/_createElement("div", {
    style: nameStyle
  }, author), /*#__PURE__*/_createElement("div", {
    "data-testid": "comment-item",
    style: valueStyle
  }, content), /*#__PURE__*/_createElement("div", {
    style: dateStyle
  }, date));
}

var _ref = /*#__PURE__*/_createElement("div", null, "Loading");

var _ref2 = /*#__PURE__*/_createElement("div", null, "Error");

var _ref3 = /*#__PURE__*/_createElement("div", null, "Empty");

function CommentList(props) {
  const {
    contentId,
    getCommentList
  } = props;

  const [list, setList] = _react.default.useState([]);

  const [loading, setLoading] = _react.default.useState(false);

  const [error, setError] = _react.default.useState(false);

  _react.default.useEffect(() => {
    setLoading(true);

    if (!getCommentList) {
      throw Error('`Comment` plugin should specify getCommentList callback');
    }

    getCommentList(contentId).then(data => {
      setLoading(false);
      setList(data);
    }).catch(() => {
      setLoading(false);
      setError(true);
    });
  }, [contentId, getCommentList]);

  const loaded = !error && !loading;
  return /*#__PURE__*/_createElement("div", null, loading && _ref, error && _ref2, Boolean(loaded && !list.length) && _ref3, Boolean(loaded && list.length) && list.map(item => /*#__PURE__*/_createElement(CommentItem, {
    item: item
  })));
}
//# sourceMappingURL=commentList.js.map