"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uniEventOff = exports.uniEventOn = void 0;
var env_1 = require("../env");
var h5Event_1 = require("./h5Event");
var weexEvent_1 = require("./weexEvent");
var h5PcEvent_1 = require("./h5PcEvent");
var combineBridge_1 = require("./combineBridge");
var env = env_1.getENV();
var NOT_SUPPORT_MSG = "Not support uni event in the platfrom: " + env.platform + ", appType: " + env.appType;
var uniEventOn = function (type, listener) {
    combineBridge_1.getUniBridge().then(function () {
        switch (env.platform) {
            case env_1.ENV_ENUM.ios:
            case env_1.ENV_ENUM.android:
                switch (env.appType) {
                    case env_1.APP_TYPE.WEB:
                        return h5Event_1.on(type, listener);
                    case env_1.APP_TYPE.WEEX:
                        return weexEvent_1.on(type, listener);
                    default:
                        throw new Error(NOT_SUPPORT_MSG);
                }
            case env_1.ENV_ENUM.pc:
                if (env.appType === env_1.APP_TYPE.WEB) {
                    return h5PcEvent_1.on(type, listener);
                }
                else {
                    throw new Error(NOT_SUPPORT_MSG);
                }
            default:
                throw new Error(NOT_SUPPORT_MSG);
        }
    });
};
exports.uniEventOn = uniEventOn;
var uniEventOff = function (type, listener) {
    combineBridge_1.getUniBridge().then(function () {
        switch (env.platform) {
            case env_1.ENV_ENUM.ios:
            case env_1.ENV_ENUM.android:
                switch (env.appType) {
                    case env_1.APP_TYPE.WEB:
                        return h5Event_1.off(type, listener);
                    case env_1.APP_TYPE.WEEX:
                        return weexEvent_1.off(type, listener);
                    default:
                        throw new Error(NOT_SUPPORT_MSG);
                }
            case env_1.ENV_ENUM.pc:
                if (env.appType === env_1.APP_TYPE.WEB) {
                    return h5PcEvent_1.off(type, listener);
                }
                else {
                    throw new Error(NOT_SUPPORT_MSG);
                }
            default:
                throw new Error(NOT_SUPPORT_MSG);
        }
    });
};
exports.uniEventOff = uniEventOff;
