"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogLevel = exports.APP_TYPE = exports.ENV_ENUM_SUB = exports.ENV_ENUM = exports.ERROR_CODE = exports.compareVersion = exports.isFunction = void 0;
function isFunction(param) {
    return typeof param === 'function';
}
exports.isFunction = isFunction;
/**
 * when origin >= target ,return true
 * 关于为什么没有跟otherApi保持一致，主要是当初因为otherApi里的方法是复制旧版jsapi的，有一定缺陷
 * 但是担心线上环境利用了缺陷来做逻辑，所以没有保持一致使用同一个方法
 * TODO: 但其实另起方法太冗余，以及丑陋，后续还是需要整个统一掉
 * @param origin
 * @param target
 */
function compareVersion(origin, target) {
    function transform(item) {
        return parseInt(item, 10) || 0;
    }
    var originVersionArr = origin.split('.').map(transform);
    var targetVersionArr = target.split('.').map(transform);
    var i = 0;
    for (; i < originVersionArr.length; i++) {
        if (typeof targetVersionArr[i] !== 'undefined') {
            if (originVersionArr[i] < targetVersionArr[i]) {
                return false;
            }
            else if (originVersionArr[i] > targetVersionArr[i]) {
                return true;
            }
        }
        else {
            return false;
        }
    }
    return true;
}
exports.compareVersion = compareVersion;
var ERROR_CODE;
(function (ERROR_CODE) {
    ERROR_CODE["cancel"] = "-1";
    ERROR_CODE["not_exist"] = "1";
    ERROR_CODE["no_permission"] = "7";
    ERROR_CODE["jsapi_internal_error"] = "22";
})(ERROR_CODE = exports.ERROR_CODE || (exports.ERROR_CODE = {}));
var ENV_ENUM;
(function (ENV_ENUM) {
    ENV_ENUM["pc"] = "pc";
    ENV_ENUM["android"] = "android";
    ENV_ENUM["ios"] = "ios";
    ENV_ENUM["notInDingTalk"] = "notInDingTalk";
})(ENV_ENUM = exports.ENV_ENUM || (exports.ENV_ENUM = {}));
var ENV_ENUM_SUB;
(function (ENV_ENUM_SUB) {
    ENV_ENUM_SUB["mac"] = "mac";
    ENV_ENUM_SUB["win"] = "win";
    ENV_ENUM_SUB["noSub"] = "noSub";
})(ENV_ENUM_SUB = exports.ENV_ENUM_SUB || (exports.ENV_ENUM_SUB = {}));
var APP_TYPE;
(function (APP_TYPE) {
    APP_TYPE["WEB"] = "WEB";
    APP_TYPE["MINI_APP"] = "MINI_APP";
    APP_TYPE["WEEX"] = "WEEX";
    APP_TYPE["WEBVIEW_IN_MINIAPP"] = "WEBVIEW_IN_MINIAPP";
    APP_TYPE["WEEX_WIDGET"] = "WEEX_WIDGET";
})(APP_TYPE = exports.APP_TYPE || (exports.APP_TYPE = {}));
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["INFO"] = 1] = "INFO";
    LogLevel[LogLevel["WARNING"] = 2] = "WARNING";
    LogLevel[LogLevel["ERROR"] = 3] = "ERROR";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
