import * as plugin from './plugin';
/** for ts declaration */
import * as otherApi from './lib/otherApi';
import { IUNCore } from './lib/ddSdk';
declare const dd: typeof otherApi & IUNCore & {
    alipay: {
        verifyidentity: {
            getBioInfo: typeof import("./api/alipay/verifyidentity/getBioInfo").getBioInfo$;
            verifyIdentity: typeof import("./api/alipay/verifyidentity/verifyIdentity").verifyIdentity$;
        };
    };
    biz: {
        ATMBle: {
            beaconPicker: typeof import("./api/biz/ATMBle/beaconPicker").beaconPicker$;
            detectFace: typeof import("./api/biz/ATMBle/detectFace").detectFace$;
            detectFaceFullScreen: typeof import("./api/biz/ATMBle/detectFaceFullScreen").detectFaceFullScreen$;
            faceManager: typeof import("./api/biz/ATMBle/faceManager").faceManager$;
            punchModePicker: typeof import("./api/biz/ATMBle/punchModePicker").punchModePicker$;
        };
        alidoc: {
            getClipboardData: typeof import("./api/biz/alidoc/getClipboardData").getClipboardData$;
            setStyle: typeof import("./api/biz/alidoc/setStyle").setStyle$;
        };
        alipay: {
            auth: typeof import("./api/biz/alipay/auth").auth$;
            bindAlipay: typeof import("./api/biz/alipay/bindAlipay").bindAlipay$;
            openAuth: typeof import("./api/biz/alipay/openAuth").openAuth$;
            pay: typeof import("./api/biz/alipay/pay").pay$;
        };
        auth: {
            openAccountPwdLoginPage: typeof import("./api/biz/auth/openAccountPwdLoginPage").openAccountPwdLoginPage$;
            requestAuthCode: typeof import("./api/biz/auth/requestAuthCode").requestAuthCode$;
            requestAuthInfo: typeof import("./api/biz/auth/requestAuthInfo").requestAuthInfo$;
        };
        calendar: {
            chooseDateTime: typeof import("./api/biz/calendar/chooseDateTime").chooseDateTime$;
            chooseHalfDay: typeof import("./api/biz/calendar/chooseHalfDay").chooseHalfDay$;
            chooseInterval: typeof import("./api/biz/calendar/chooseInterval").chooseInterval$;
            chooseOneDay: typeof import("./api/biz/calendar/chooseOneDay").chooseOneDay$;
            datePicker: typeof import("./api/biz/calendar/datePicker").datePicker$;
        };
        chat: {
            addGroup: typeof import("./api/biz/chat/addGroup").addGroup$;
            chooseConversation: typeof import("./api/biz/chat/chooseConversation").chooseConversation$;
            chooseConversationByCorpId: typeof import("./api/biz/chat/chooseConversationByCorpId").chooseConversationByCorpId$;
            collectSticker: typeof import("./api/biz/chat/collectSticker").collectSticker$;
            createOrgPublicGroup: typeof import("./api/biz/chat/createOrgPublicGroup").createOrgPublicGroup$;
            createSceneGroup: typeof import("./api/biz/chat/createSceneGroup").createSceneGroup$;
            getConversationInfo: typeof import("./api/biz/chat/getConversationInfo").getConversationInfo$;
            getRealmCid: typeof import("./api/biz/chat/getRealmCid").getRealmCid$;
            locationChatMessage: typeof import("./api/biz/chat/locationChatMessage").locationChatMessage$;
            modifyGroupDesc: typeof import("./api/biz/chat/modifyGroupDesc").modifyGroupDesc$;
            open: typeof import("./api/biz/chat/open").open$;
            openSingleChat: typeof import("./api/biz/chat/openSingleChat").openSingleChat$;
            pickConversation: typeof import("./api/biz/chat/pickConversation").pickConversation$;
            queryUnreadSessions: typeof import("./api/biz/chat/queryUnreadSessions").queryUnreadSessions$;
            sendEmotion: typeof import("./api/biz/chat/sendEmotion").sendEmotion$;
            sendMessageToContact: typeof import("./api/biz/chat/sendMessageToContact").sendMessageToContact$;
            sendReplyToInputPanel: typeof import("./api/biz/chat/sendReplyToInputPanel").sendReplyToInputPanel$;
            sendRichTextToEditor: typeof import("./api/biz/chat/sendRichTextToEditor").sendRichTextToEditor$;
            toConversation: typeof import("./api/biz/chat/toConversation").toConversation$;
            toConversationByOpenConversationId: typeof import("./api/biz/chat/toConversationByOpenConversationId").toConversationByOpenConversationId$;
        };
        clipboardData: {
            setData: typeof import("./api/biz/clipboardData/setData").setData$;
        };
        conference: {
            createCloudCall: typeof import("./api/biz/conference/createCloudCall").createCloudCall$;
            docRoomStatusChanged: typeof import("./api/biz/conference/docRoomStatusChanged").docRoomStatusChanged$;
            getCloudCallInfo: typeof import("./api/biz/conference/getCloudCallInfo").getCloudCallInfo$;
            getCloudCallList: typeof import("./api/biz/conference/getCloudCallList").getCloudCallList$;
            openLink: typeof import("./api/biz/conference/openLink").openLink$;
            screenshot: typeof import("./api/biz/conference/screenshot").screenshot$;
            toggleConfAudio: typeof import("./api/biz/conference/toggleConfAudio").toggleConfAudio$;
            videoCall: typeof import("./api/biz/conference/videoCall").videoCall$;
            videoConfCall: typeof import("./api/biz/conference/videoConfCall").videoConfCall$;
        };
        contact: {
            addFromContact: typeof import("./api/biz/contact/addFromContact").addFromContact$;
            addFromManual: typeof import("./api/biz/contact/addFromManual").addFromManual$;
            addSubManager: typeof import("./api/biz/contact/addSubManager").addSubManager$;
            addUserForm: typeof import("./api/biz/contact/addUserForm").addUserForm$;
            changeCustomerFollower: typeof import("./api/biz/contact/changeCustomerFollower").changeCustomerFollower$;
            choose: typeof import("./api/biz/contact/choose").choose$;
            chooseMobileContacts: typeof import("./api/biz/contact/chooseMobileContacts").chooseMobileContacts$;
            complexChoose: typeof import("./api/biz/contact/complexChoose").complexChoose$;
            complexPicker: typeof import("./api/biz/contact/complexPicker").complexPicker$;
            complexSelectedPicker: typeof import("./api/biz/contact/complexSelectedPicker").complexSelectedPicker$;
            createGroup: typeof import("./api/biz/contact/createGroup").createGroup$;
            departmentsPicker: typeof import("./api/biz/contact/departmentsPicker").departmentsPicker$;
            departmentsSelectedPicker: typeof import("./api/biz/contact/departmentsSelectedPicker").departmentsSelectedPicker$;
            externalComplexPicker: typeof import("./api/biz/contact/externalComplexPicker").externalComplexPicker$;
            externalEditForm: typeof import("./api/biz/contact/externalEditForm").externalEditForm$;
            getMobileContact: typeof import("./api/biz/contact/getMobileContact").getMobileContact$;
            inviteGroupMember: typeof import("./api/biz/contact/inviteGroupMember").inviteGroupMember$;
            isForeignOrg: typeof import("./api/biz/contact/isForeignOrg").isForeignOrg$;
            manageContactAlert: typeof import("./api/biz/contact/manageContactAlert").manageContactAlert$;
            pickCustomer: typeof import("./api/biz/contact/pickCustomer").pickCustomer$;
            pickJobTitle: typeof import("./api/biz/contact/pickJobTitle").pickJobTitle$;
            rolesPicker: typeof import("./api/biz/contact/rolesPicker").rolesPicker$;
            setRule: typeof import("./api/biz/contact/setRule").setRule$;
            teamScaleSelect: typeof import("./api/biz/contact/teamScaleSelect").teamScaleSelect$;
            useTagPicker: typeof import("./api/biz/contact/useTagPicker").useTagPicker$;
        };
        cspace: {
            chooseSpaceDir: typeof import("./api/biz/cspace/chooseSpaceDir").chooseSpaceDir$;
            copy: typeof import("./api/biz/cspace/copy").copy$;
            delete: typeof import("./api/biz/cspace/delete").delete$;
            getPlayUrl: typeof import("./api/biz/cspace/getPlayUrl").getPlayUrl$;
            preview: typeof import("./api/biz/cspace/preview").preview$;
            saveFile: typeof import("./api/biz/cspace/saveFile").saveFile$;
        };
        customContact: {
            choose: typeof import("./api/biz/customContact/choose").choose$;
            multipleChoose: typeof import("./api/biz/customContact/multipleChoose").multipleChoose$;
        };
        data: {
            getAvatar: typeof import("./api/biz/data/getAvatar").getAvatar$;
        };
        ding: {
            create: typeof import("./api/biz/ding/create").create$;
            detail: typeof import("./api/biz/ding/detail").detail$;
            post: typeof import("./api/biz/ding/post").post$;
            update: typeof import("./api/biz/ding/update").update$;
        };
        edu: {
            finishMiniCourseByRecordId: typeof import("./api/biz/edu/finishMiniCourseByRecordId").finishMiniCourseByRecordId$;
            getMiniCourseDraftList: typeof import("./api/biz/edu/getMiniCourseDraftList").getMiniCourseDraftList$;
            joinClassroom: typeof import("./api/biz/edu/joinClassroom").joinClassroom$;
            makeMiniCourse: typeof import("./api/biz/edu/makeMiniCourse").makeMiniCourse$;
            newMsgNotificationStatus: typeof import("./api/biz/edu/newMsgNotificationStatus").newMsgNotificationStatus$;
            startAuth: typeof import("./api/biz/edu/startAuth").startAuth$;
            tokenFaceImg: typeof import("./api/biz/edu/tokenFaceImg").tokenFaceImg$;
        };
        event: {
            notifyWeex: typeof import("./api/biz/event/notifyWeex").notifyWeex$;
        };
        faceBox: {
            experienceFunction: typeof import("./api/biz/faceBox/experienceFunction").experienceFunction$;
            getRecognition: typeof import("./api/biz/faceBox/getRecognition").getRecognition$;
            removeFace: typeof import("./api/biz/faceBox/removeFace").removeFace$;
            sendMessageToContact: typeof import("./api/biz/faceBox/sendMessageToContact").sendMessageToContact$;
            setRecognition: typeof import("./api/biz/faceBox/setRecognition").setRecognition$;
            showRemind: typeof import("./api/biz/faceBox/showRemind").showRemind$;
            startCameraRecord: typeof import("./api/biz/faceBox/startCameraRecord").startCameraRecord$;
            startCameraRecordFromPartner: typeof import("./api/biz/faceBox/startCameraRecordFromPartner").startCameraRecordFromPartner$;
            startPictureRecord: typeof import("./api/biz/faceBox/startPictureRecord").startPictureRecord$;
        };
        intent: {
            fetchData: typeof import("./api/biz/intent/fetchData").fetchData$;
        };
        iot: {
            bind: typeof import("./api/biz/iot/bind").bind$;
            bindMeetingRoom: typeof import("./api/biz/iot/bindMeetingRoom").bindMeetingRoom$;
            getDeviceProperties: typeof import("./api/biz/iot/getDeviceProperties").getDeviceProperties$;
            invokeThingService: typeof import("./api/biz/iot/invokeThingService").invokeThingService$;
            queryMeetingRoomList: typeof import("./api/biz/iot/queryMeetingRoomList").queryMeetingRoomList$;
            setDeviceProperties: typeof import("./api/biz/iot/setDeviceProperties").setDeviceProperties$;
            unbind: typeof import("./api/biz/iot/unbind").unbind$;
        };
        kingGrid: {
            approvalPdf: typeof import("./api/biz/kingGrid/approvalPdf").approvalPdf$;
        };
        live: {
            chooseLiveGroup: typeof import("./api/biz/live/chooseLiveGroup").chooseLiveGroup$;
            destroyPlayer: typeof import("./api/biz/live/destroyPlayer").destroyPlayer$;
            getAllLiveList: typeof import("./api/biz/live/getAllLiveList").getAllLiveList$;
            getDynamicMsgCount: typeof import("./api/biz/live/getDynamicMsgCount").getDynamicMsgCount$;
            getLiveFuncMsgs: typeof import("./api/biz/live/getLiveFuncMsgs").getLiveFuncMsgs$;
            getLiveInfos: typeof import("./api/biz/live/getLiveInfos").getLiveInfos$;
            getLiveStatistics: typeof import("./api/biz/live/getLiveStatistics").getLiveStatistics$;
            getPlaybackList: typeof import("./api/biz/live/getPlaybackList").getPlaybackList$;
            getPlayerPosition: typeof import("./api/biz/live/getPlayerPosition").getPlayerPosition$;
            getStickyStatus: typeof import("./api/biz/live/getStickyStatus").getStickyStatus$;
            hidePlayer: typeof import("./api/biz/live/hidePlayer").hidePlayer$;
            initPlayer: typeof import("./api/biz/live/initPlayer").initPlayer$;
            listLiveRecords: typeof import("./api/biz/live/listLiveRecords").listLiveRecords$;
            listLiveViewers: typeof import("./api/biz/live/listLiveViewers").listLiveViewers$;
            nav2GroupAnchorList: typeof import("./api/biz/live/nav2GroupAnchorList").nav2GroupAnchorList$;
            nav2PlayVideo: typeof import("./api/biz/live/nav2PlayVideo").nav2PlayVideo$;
            playerPause: typeof import("./api/biz/live/playerPause").playerPause$;
            playerPlay: typeof import("./api/biz/live/playerPlay").playerPlay$;
            playerSeekTo: typeof import("./api/biz/live/playerSeekTo").playerSeekTo$;
            setStickyStatus: typeof import("./api/biz/live/setStickyStatus").setStickyStatus$;
            shareToGroup: typeof import("./api/biz/live/shareToGroup").shareToGroup$;
            showPlayer: typeof import("./api/biz/live/showPlayer").showPlayer$;
            startClassRoom: typeof import("./api/biz/live/startClassRoom").startClassRoom$;
            startDummyLive: typeof import("./api/biz/live/startDummyLive").startDummyLive$;
            startUnifiedLive: typeof import("./api/biz/live/startUnifiedLive").startUnifiedLive$;
            stopDummyLive: typeof import("./api/biz/live/stopDummyLive").stopDummyLive$;
            stopDummyLiveAll: typeof import("./api/biz/live/stopDummyLiveAll").stopDummyLiveAll$;
            updateDrawingCache: typeof import("./api/biz/live/updateDrawingCache").updateDrawingCache$;
            updateSimulGroup: typeof import("./api/biz/live/updateSimulGroup").updateSimulGroup$;
        };
        map: {
            locate: typeof import("./api/biz/map/locate").locate$;
            search: typeof import("./api/biz/map/search").search$;
            searchRoute: typeof import("./api/biz/map/searchRoute").searchRoute$;
            view: typeof import("./api/biz/map/view").view$;
        };
        media: {
            compressVideo: typeof import("./api/biz/media/compressVideo").compressVideo$;
        };
        microApp: {
            openApp: typeof import("./api/biz/microApp/openApp").openApp$;
            visualList: typeof import("./api/biz/microApp/visualList").visualList$;
        };
        navigation: {
            back: typeof import("./api/biz/navigation/back").back$;
            close: typeof import("./api/biz/navigation/close").close$;
            createEditor: typeof import("./api/biz/navigation/createEditor").createEditor$;
            finishEditor: typeof import("./api/biz/navigation/finishEditor").finishEditor$;
            gestures: typeof import("./api/biz/navigation/gestures").gestures$;
            goBack: typeof import("./api/biz/navigation/goBack").goBack$;
            hideBar: typeof import("./api/biz/navigation/hideBar").hideBar$;
            navigateToMiniProgram: typeof import("./api/biz/navigation/navigateToMiniProgram").navigateToMiniProgram$;
            popGesture: typeof import("./api/biz/navigation/popGesture").popGesture$;
            quit: typeof import("./api/biz/navigation/quit").quit$;
            replace: typeof import("./api/biz/navigation/replace").replace$;
            setActions: typeof import("./api/biz/navigation/setActions").setActions$;
            setIcon: typeof import("./api/biz/navigation/setIcon").setIcon$;
            setLeft: typeof import("./api/biz/navigation/setLeft").setLeft$;
            setMenu: typeof import("./api/biz/navigation/setMenu").setMenu$;
            setPullGesture: typeof import("./api/biz/navigation/setPullGesture").setPullGesture$;
            setRight: typeof import("./api/biz/navigation/setRight").setRight$;
            setSubtitle: typeof import("./api/biz/navigation/setSubtitle").setSubtitle$;
            setTitle: typeof import("./api/biz/navigation/setTitle").setTitle$;
            setTitleIcon: typeof import("./api/biz/navigation/setTitleIcon").setTitleIcon$;
            showPopdownList: typeof import("./api/biz/navigation/showPopdownList").showPopdownList$;
        };
        notify: {
            send: typeof import("./api/biz/notify/send").send$;
        };
        oa: {
            authorityVerify: typeof import("./api/biz/oa/authorityVerify").authorityVerify$;
            setWorkTab: typeof import("./api/biz/oa/setWorkTab").setWorkTab$;
        };
        oauth: {
            authorize: typeof import("./api/biz/oauth/authorize").authorize$;
        };
        pbp: {
            componentPunchFromPartner: typeof import("./api/biz/pbp/componentPunchFromPartner").componentPunchFromPartner$;
            startMatchRuleFromPartner: typeof import("./api/biz/pbp/startMatchRuleFromPartner").startMatchRuleFromPartner$;
            stopMatchRuleFromPartner: typeof import("./api/biz/pbp/stopMatchRuleFromPartner").stopMatchRuleFromPartner$;
        };
        preload: {
            video: typeof import("./api/biz/preload/video").video$;
        };
        realm: {
            getRealtimeTracingStatus: typeof import("./api/biz/realm/getRealtimeTracingStatus").getRealtimeTracingStatus$;
            getUserExclusiveInfo: typeof import("./api/biz/realm/getUserExclusiveInfo").getUserExclusiveInfo$;
            startRealtimeTracing: typeof import("./api/biz/realm/startRealtimeTracing").startRealtimeTracing$;
            stopRealtimeTracing: typeof import("./api/biz/realm/stopRealtimeTracing").stopRealtimeTracing$;
            subscribe: typeof import("./api/biz/realm/subscribe").subscribe$;
            unsubscribe: typeof import("./api/biz/realm/unsubscribe").unsubscribe$;
        };
        redenvelop: {
            sendEnterpriseRedEnvelop: typeof import("./api/biz/redenvelop/sendEnterpriseRedEnvelop").sendEnterpriseRedEnvelop$;
            sendNormalRedEnvelop: typeof import("./api/biz/redenvelop/sendNormalRedEnvelop").sendNormalRedEnvelop$;
        };
        resource: {
            getInfo: typeof import("./api/biz/resource/getInfo").getInfo$;
            reportDebugMessage: typeof import("./api/biz/resource/reportDebugMessage").reportDebugMessage$;
            reportPerf: typeof import("./api/biz/resource/reportPerf").reportPerf$;
        };
        schedule: {
            create: typeof import("./api/biz/schedule/create").create$;
        };
        shortCut: {
            addShortCut: typeof import("./api/biz/shortCut/addShortCut").addShortCut$;
        };
        sports: {
            checkHealthPermission: typeof import("./api/biz/sports/checkHealthPermission").checkHealthPermission$;
            checkSensorPermission: typeof import("./api/biz/sports/checkSensorPermission").checkSensorPermission$;
            disableStepCountSync: typeof import("./api/biz/sports/disableStepCountSync").disableStepCountSync$;
            enableStepCountSync: typeof import("./api/biz/sports/enableStepCountSync").enableStepCountSync$;
            fetchAliuid: typeof import("./api/biz/sports/fetchAliuid").fetchAliuid$;
            fetchStephubSteps: typeof import("./api/biz/sports/fetchStephubSteps").fetchStephubSteps$;
            fetchTaobaoH5TrustLoginUrlForAlisports: typeof import("./api/biz/sports/fetchTaobaoH5TrustLoginUrlForAlisports").fetchTaobaoH5TrustLoginUrlForAlisports$;
            fetchTaobaoId: typeof import("./api/biz/sports/fetchTaobaoId").fetchTaobaoId$;
            getTodaysStepCount: typeof import("./api/biz/sports/getTodaysStepCount").getTodaysStepCount$;
            requestHealthPermission: typeof import("./api/biz/sports/requestHealthPermission").requestHealthPermission$;
            requestSensorPermission: typeof import("./api/biz/sports/requestSensorPermission").requestSensorPermission$;
        };
        store: {
            closeUnpayOrder: typeof import("./api/biz/store/closeUnpayOrder").closeUnpayOrder$;
            createOrder: typeof import("./api/biz/store/createOrder").createOrder$;
            getPayUrl: typeof import("./api/biz/store/getPayUrl").getPayUrl$;
            inquiry: typeof import("./api/biz/store/inquiry").inquiry$;
        };
        tabwindow: {
            isTab: typeof import("./api/biz/tabwindow/isTab").isTab$;
        };
        tag: {
            batchTags: typeof import("./api/biz/tag/batchTags").batchTags$;
            mark: typeof import("./api/biz/tag/mark").mark$;
        };
        telephone: {
            call: typeof import("./api/biz/telephone/call").call$;
            callOrgExternalContacts: typeof import("./api/biz/telephone/callOrgExternalContacts").callOrgExternalContacts$;
            checkBizCall: typeof import("./api/biz/telephone/checkBizCall").checkBizCall$;
            quickCall: typeof import("./api/biz/telephone/quickCall").quickCall$;
            quickCallList: typeof import("./api/biz/telephone/quickCallList").quickCallList$;
            showCallMenu: typeof import("./api/biz/telephone/showCallMenu").showCallMenu$;
        };
        uic: {
            directLogin: typeof import("./api/biz/uic/directLogin").directLogin$;
            doLogin: typeof import("./api/biz/uic/doLogin").doLogin$;
        };
        user: {
            checkPassword: typeof import("./api/biz/user/checkPassword").checkPassword$;
            get: typeof import("./api/biz/user/get").get$;
            loginBySms: typeof import("./api/biz/user/loginBySms").loginBySms$;
            loginTaobaoWithDingtalkUserToken: typeof import("./api/biz/user/loginTaobaoWithDingtalkUserToken").loginTaobaoWithDingtalkUserToken$;
            secretID: typeof import("./api/biz/user/secretID").secretID$;
        };
        util: {
            acitveConversation: typeof import("./api/biz/util/acitveConversation").acitveConversation$;
            addCalendarEvent: typeof import("./api/biz/util/addCalendarEvent").addCalendarEvent$;
            addDesktopShortcuts: typeof import("./api/biz/util/addDesktopShortcuts").addDesktopShortcuts$;
            callComponent: typeof import("./api/biz/util/callComponent").callComponent$;
            chooseImage: typeof import("./api/biz/util/chooseImage").chooseImage$;
            chosen: typeof import("./api/biz/util/chosen").chosen$;
            clearWebStoreCache: typeof import("./api/biz/util/clearWebStoreCache").clearWebStoreCache$;
            closePreviewImage: typeof import("./api/biz/util/closePreviewImage").closePreviewImage$;
            compressImage: typeof import("./api/biz/util/compressImage").compressImage$;
            createVoipConference: typeof import("./api/biz/util/createVoipConference").createVoipConference$;
            datepicker: typeof import("./api/biz/util/datepicker").datepicker$;
            datetimepicker: typeof import("./api/biz/util/datetimepicker").datetimepicker$;
            decrypt: typeof import("./api/biz/util/decrypt").decrypt$;
            downloadFile: typeof import("./api/biz/util/downloadFile").downloadFile$;
            editPicture: typeof import("./api/biz/util/editPicture").editPicture$;
            editSpaceFileOnline: typeof import("./api/biz/util/editSpaceFileOnline").editSpaceFileOnline$;
            encrypt: typeof import("./api/biz/util/encrypt").encrypt$;
            fetchFileData: typeof import("./api/biz/util/fetchFileData").fetchFileData$;
            fetchImageData: typeof import("./api/biz/util/fetchImageData").fetchImageData$;
            forwardDpFile: typeof import("./api/biz/util/forwardDpFile").forwardDpFile$;
            getLocaleAndNationByCorpId: typeof import("./api/biz/util/getLocaleAndNationByCorpId").getLocaleAndNationByCorpId$;
            getPerfInfo: typeof import("./api/biz/util/getPerfInfo").getPerfInfo$;
            invokeWorkbench: typeof import("./api/biz/util/invokeWorkbench").invokeWorkbench$;
            isEnableGPUAcceleration: typeof import("./api/biz/util/isEnableGPUAcceleration").isEnableGPUAcceleration$;
            isLocalFileExist: typeof import("./api/biz/util/isLocalFileExist").isLocalFileExist$;
            mailTo: typeof import("./api/biz/util/mailTo").mailTo$;
            multiSelect: typeof import("./api/biz/util/multiSelect").multiSelect$;
            open: typeof import("./api/biz/util/open").open$;
            openFloatWindow: typeof import("./api/biz/util/openFloatWindow").openFloatWindow$;
            openLink: typeof import("./api/biz/util/openLink").openLink$;
            openLocalFile: typeof import("./api/biz/util/openLocalFile").openLocalFile$;
            openModal: typeof import("./api/biz/util/openModal").openModal$;
            openPrintWnd: typeof import("./api/biz/util/openPrintWnd").openPrintWnd$;
            openShareDpFileWnd: typeof import("./api/biz/util/openShareDpFileWnd").openShareDpFileWnd$;
            openSlidePanel: typeof import("./api/biz/util/openSlidePanel").openSlidePanel$;
            openWindowWithUrl: typeof import("./api/biz/util/openWindowWithUrl").openWindowWithUrl$;
            perfBizReady: typeof import("./api/biz/util/perfBizReady").perfBizReady$;
            presentWindow: typeof import("./api/biz/util/presentWindow").presentWindow$;
            previewFile: typeof import("./api/biz/util/previewFile").previewFile$;
            previewImage: typeof import("./api/biz/util/previewImage").previewImage$;
            previewVideo: typeof import("./api/biz/util/previewVideo").previewVideo$;
            qrcode: typeof import("./api/biz/util/qrcode").qrcode$;
            queryConferenceList: typeof import("./api/biz/util/queryConferenceList").queryConferenceList$;
            quitComponent: typeof import("./api/biz/util/quitComponent").quitComponent$;
            recordVideoToUpload: typeof import("./api/biz/util/recordVideoToUpload").recordVideoToUpload$;
            requestWorkbench: typeof import("./api/biz/util/requestWorkbench").requestWorkbench$;
            saveImage: typeof import("./api/biz/util/saveImage").saveImage$;
            scan: typeof import("./api/biz/util/scan").scan$;
            scanCard: typeof import("./api/biz/util/scanCard").scanCard$;
            selectEmoji: typeof import("./api/biz/util/selectEmoji").selectEmoji$;
            setGPUAcceleration: typeof import("./api/biz/util/setGPUAcceleration").setGPUAcceleration$;
            setScreenBrightnessAndKeepOn: typeof import("./api/biz/util/setScreenBrightnessAndKeepOn").setScreenBrightnessAndKeepOn$;
            setScreenKeepOn: typeof import("./api/biz/util/setScreenKeepOn").setScreenKeepOn$;
            share: typeof import("./api/biz/util/share").share$;
            shareImage: typeof import("./api/biz/util/shareImage").shareImage$;
            shareLongImage: typeof import("./api/biz/util/shareLongImage").shareLongImage$;
            shareMiniApp: typeof import("./api/biz/util/shareMiniApp").shareMiniApp$;
            startDocSign: typeof import("./api/biz/util/startDocSign").startDocSign$;
            stickPage: typeof import("./api/biz/util/stickPage").stickPage$;
            systemShare: typeof import("./api/biz/util/systemShare").systemShare$;
            timepicker: typeof import("./api/biz/util/timepicker").timepicker$;
            timestamp: typeof import("./api/biz/util/timestamp").timestamp$;
            updateTrackPageName: typeof import("./api/biz/util/updateTrackPageName").updateTrackPageName$;
            updateTrackProperties: typeof import("./api/biz/util/updateTrackProperties").updateTrackProperties$;
            uploadAttachment: typeof import("./api/biz/util/uploadAttachment").uploadAttachment$;
            uploadFile: typeof import("./api/biz/util/uploadFile").uploadFile$;
            uploadImage: typeof import("./api/biz/util/uploadImage").uploadImage$;
            uploadImageFromCamera: typeof import("./api/biz/util/uploadImageFromCamera").uploadImageFromCamera$;
            uploadMedia: typeof import("./api/biz/util/uploadMedia").uploadMedia$;
            ut: typeof import("./api/biz/util/ut").ut$;
            vip: typeof import("./api/biz/util/vip").vip$;
            warn: typeof import("./api/biz/util/warn").warn$;
            watermarkCamera: typeof import("./api/biz/util/watermarkCamera").watermarkCamera$;
        };
        verify: {
            biometric: typeof import("./api/biz/verify/biometric").biometric$;
            openBindIDCard: typeof import("./api/biz/verify/openBindIDCard").openBindIDCard$;
            startAuth: typeof import("./api/biz/verify/startAuth").startAuth$;
            takePhoto: typeof import("./api/biz/verify/takePhoto").takePhoto$;
        };
        watermarkCamera: {
            getWatermarkInfo: typeof import("./api/biz/watermarkCamera/getWatermarkInfo").getWatermarkInfo$;
            setWatermarkInfo: typeof import("./api/biz/watermarkCamera/setWatermarkInfo").setWatermarkInfo$;
        };
        wiki: {
            openPage: typeof import("./api/biz/wiki/openPage").openPage$;
            saveToWiki: typeof import("./api/biz/wiki/saveToWiki").saveToWiki$;
        };
        zoloz: {
            download: typeof import("./api/biz/zoloz/download").download$;
            zimIdentity: typeof import("./api/biz/zoloz/zimIdentity").zimIdentity$;
        };
    };
    channel: {
        open: {
            profile: typeof import("./api/channel/open/profile").profile$;
        };
        permission: {
            requestAuthCode: typeof import("./api/channel/permission/requestAuthCode").requestAuthCode$;
        };
    };
    device: {
        accelerometer: {
            clearShake: typeof import("./api/device/accelerometer/clearShake").clearShake$;
            watchShake: typeof import("./api/device/accelerometer/watchShake").watchShake$;
        };
        audio: {
            download: typeof import("./api/device/audio/download").download$;
            getDuration: typeof import("./api/device/audio/getDuration").getDuration$;
            getVolume: typeof import("./api/device/audio/getVolume").getVolume$;
            isMute: typeof import("./api/device/audio/isMute").isMute$;
            onPlayEnd: typeof import("./api/device/audio/onPlayEnd").onPlayEnd$;
            onRecordEnd: typeof import("./api/device/audio/onRecordEnd").onRecordEnd$;
            pause: typeof import("./api/device/audio/pause").pause$;
            play: typeof import("./api/device/audio/play").play$;
            resume: typeof import("./api/device/audio/resume").resume$;
            seek: typeof import("./api/device/audio/seek").seek$;
            setMute: typeof import("./api/device/audio/setMute").setMute$;
            setVolume: typeof import("./api/device/audio/setVolume").setVolume$;
            startRecord: typeof import("./api/device/audio/startRecord").startRecord$;
            stop: typeof import("./api/device/audio/stop").stop$;
            stopRecord: typeof import("./api/device/audio/stopRecord").stopRecord$;
            translateVoice: typeof import("./api/device/audio/translateVoice").translateVoice$;
            upload: typeof import("./api/device/audio/upload").upload$;
        };
        base: {
            connectBleDevice: typeof import("./api/device/base/connectBleDevice").connectBleDevice$;
            disConnectBleDevice: typeof import("./api/device/base/disConnectBleDevice").disConnectBleDevice$;
            enableBluetooth: typeof import("./api/device/base/enableBluetooth").enableBluetooth$;
            enableBluetoothV2: typeof import("./api/device/base/enableBluetoothV2").enableBluetoothV2$;
            enableLocation: typeof import("./api/device/base/enableLocation").enableLocation$;
            enableWifi: typeof import("./api/device/base/enableWifi").enableWifi$;
            getInterface: typeof import("./api/device/base/getInterface").getInterface$;
            getPhoneInfo: typeof import("./api/device/base/getPhoneInfo").getPhoneInfo$;
            getScanWifiList: typeof import("./api/device/base/getScanWifiList").getScanWifiList$;
            getScanWifiListAsync: typeof import("./api/device/base/getScanWifiListAsync").getScanWifiListAsync$;
            getSettings: typeof import("./api/device/base/getSettings").getSettings$;
            getUUID: typeof import("./api/device/base/getUUID").getUUID$;
            getWifiStatus: typeof import("./api/device/base/getWifiStatus").getWifiStatus$;
            openSystemSetting: typeof import("./api/device/base/openSystemSetting").openSystemSetting$;
            scanBleDevice: typeof import("./api/device/base/scanBleDevice").scanBleDevice$;
            sendDataToDevice: typeof import("./api/device/base/sendDataToDevice").sendDataToDevice$;
            startBindDevice: typeof import("./api/device/base/startBindDevice").startBindDevice$;
            stopScanBleDevice: typeof import("./api/device/base/stopScanBleDevice").stopScanBleDevice$;
            unBindDevice: typeof import("./api/device/base/unBindDevice").unBindDevice$;
        };
        connection: {
            getNetworkType: typeof import("./api/device/connection/getNetworkType").getNetworkType$;
        };
        geolocation: {
            checkPermission: typeof import("./api/device/geolocation/checkPermission").checkPermission$;
            checkService: typeof import("./api/device/geolocation/checkService").checkService$;
            get: typeof import("./api/device/geolocation/get").get$;
            isEnabled: typeof import("./api/device/geolocation/isEnabled").isEnabled$;
            isEnabledHighAccuracy: typeof import("./api/device/geolocation/isEnabledHighAccuracy").isEnabledHighAccuracy$;
            openGps: typeof import("./api/device/geolocation/openGps").openGps$;
            start: typeof import("./api/device/geolocation/start").start$;
            status: typeof import("./api/device/geolocation/status").status$;
            stop: typeof import("./api/device/geolocation/stop").stop$;
        };
        handwriting: {
            changeSlatePosition: typeof import("./api/device/handwriting/changeSlatePosition").changeSlatePosition$;
            showHandPanel: typeof import("./api/device/handwriting/showHandPanel").showHandPanel$;
        };
        health: {
            dayStepCount: typeof import("./api/device/health/dayStepCount").dayStepCount$;
            stepCount: typeof import("./api/device/health/stepCount").stepCount$;
        };
        launcher: {
            checkInstalledApps: typeof import("./api/device/launcher/checkInstalledApps").checkInstalledApps$;
            launchApp: typeof import("./api/device/launcher/launchApp").launchApp$;
        };
        nfc: {
            nfcRead: typeof import("./api/device/nfc/nfcRead").nfcRead$;
            nfcStop: typeof import("./api/device/nfc/nfcStop").nfcStop$;
            nfcWrite: typeof import("./api/device/nfc/nfcWrite").nfcWrite$;
        };
        notification: {
            actionSheet: typeof import("./api/device/notification/actionSheet").actionSheet$;
            alert: typeof import("./api/device/notification/alert").alert$;
            confirm: typeof import("./api/device/notification/confirm").confirm$;
            extendModal: typeof import("./api/device/notification/extendModal").extendModal$;
            getNotificationStatus: typeof import("./api/device/notification/getNotificationStatus").getNotificationStatus$;
            hidePreloader: typeof import("./api/device/notification/hidePreloader").hidePreloader$;
            modal: typeof import("./api/device/notification/modal").modal$;
            prompt: typeof import("./api/device/notification/prompt").prompt$;
            showPreloader: typeof import("./api/device/notification/showPreloader").showPreloader$;
            toast: typeof import("./api/device/notification/toast").toast$;
            vibrate: typeof import("./api/device/notification/vibrate").vibrate$;
        };
        screen: {
            insetAdjust: typeof import("./api/device/screen/insetAdjust").insetAdjust$;
            resetView: typeof import("./api/device/screen/resetView").resetView$;
            rotateView: typeof import("./api/device/screen/rotateView").rotateView$;
            setAutoOrientation: typeof import("./api/device/screen/setAutoOrientation").setAutoOrientation$;
        };
        screenshot: {
            startMonitor: typeof import("./api/device/screenshot/startMonitor").startMonitor$;
            stopMonitor: typeof import("./api/device/screenshot/stopMonitor").stopMonitor$;
        };
    };
    interactive: {
        bizCard: {
            batchDisposeCard: typeof import("./api/interactive/bizCard/batchDisposeCard").batchDisposeCard$;
            getCardInfo: typeof import("./api/interactive/bizCard/getCardInfo").getCardInfo$;
            sendAction: typeof import("./api/interactive/bizCard/sendAction").sendAction$;
        };
    };
    internal: {
        ATMBle: {
            beaconPickResult: typeof import("./api/internal/ATMBle/beaconPickResult").beaconPickResult$;
            checkIn: typeof import("./api/internal/ATMBle/checkIn").checkIn$;
            detectFace: typeof import("./api/internal/ATMBle/detectFace").detectFace$;
            detectFaceFullScreen: typeof import("./api/internal/ATMBle/detectFaceFullScreen").detectFaceFullScreen$;
            faceManagerResult: typeof import("./api/internal/ATMBle/faceManagerResult").faceManagerResult$;
            getBleLocalDevList: typeof import("./api/internal/ATMBle/getBleLocalDevList").getBleLocalDevList$;
            getPunchEventClockCheckResult: typeof import("./api/internal/ATMBle/getPunchEventClockCheckResult").getPunchEventClockCheckResult$;
            punchModePickResult: typeof import("./api/internal/ATMBle/punchModePickResult").punchModePickResult$;
            requestPunchEvents: typeof import("./api/internal/ATMBle/requestPunchEvents").requestPunchEvents$;
            scanBleDevice: typeof import("./api/internal/ATMBle/scanBleDevice").scanBleDevice$;
            showBlePopupWindowMock: typeof import("./api/internal/ATMBle/showBlePopupWindowMock").showBlePopupWindowMock$;
            startMonitor: typeof import("./api/internal/ATMBle/startMonitor").startMonitor$;
            stopMonitor: typeof import("./api/internal/ATMBle/stopMonitor").stopMonitor$;
            updateBluetoothConfig: typeof import("./api/internal/ATMBle/updateBluetoothConfig").updateBluetoothConfig$;
        };
        ai: {
            cancelTask: typeof import("./api/internal/ai/cancelTask").cancelTask$;
            createTask: typeof import("./api/internal/ai/createTask").createTask$;
            frameUpload: typeof import("./api/internal/ai/frameUpload").frameUpload$;
        };
        alidoc: {
            keyboardAccessory: typeof import("./api/internal/alidoc/keyboardAccessory").keyboardAccessory$;
            keyboardCompression: typeof import("./api/internal/alidoc/keyboardCompression").keyboardCompression$;
        };
        alpha: {
            addWdsDevice: typeof import("./api/internal/alpha/addWdsDevice").addWdsDevice$;
            connectSecurityWiFi: typeof import("./api/internal/alpha/connectSecurityWiFi").connectSecurityWiFi$;
            copyPwd: typeof import("./api/internal/alpha/copyPwd").copyPwd$;
            discover: typeof import("./api/internal/alpha/discover").discover$;
            getDevicePwd: typeof import("./api/internal/alpha/getDevicePwd").getDevicePwd$;
        };
        attend: {
            assistant: typeof import("./api/internal/attend/assistant").assistant$;
            checkInRecords: typeof import("./api/internal/attend/checkInRecords").checkInRecords$;
            getAccurateLocatingInfo: typeof import("./api/internal/attend/getAccurateLocatingInfo").getAccurateLocatingInfo$;
            getOfflineResource: typeof import("./api/internal/attend/getOfflineResource").getOfflineResource$;
            getProloadResource: typeof import("./api/internal/attend/getProloadResource").getProloadResource$;
            isBetaEnabled: typeof import("./api/internal/attend/isBetaEnabled").isBetaEnabled$;
            setOfflineResource: typeof import("./api/internal/attend/setOfflineResource").setOfflineResource$;
            updateBluetoothCheckList: typeof import("./api/internal/attend/updateBluetoothCheckList").updateBluetoothCheckList$;
        };
        auth: {
            backToLoginPage: typeof import("./api/internal/auth/backToLoginPage").backToLoginPage$;
            getActionTokenByPwd: typeof import("./api/internal/auth/getActionTokenByPwd").getActionTokenByPwd$;
            getCurrentTmpCode: typeof import("./api/internal/auth/getCurrentTmpCode").getCurrentTmpCode$;
            identifyByAlipay: typeof import("./api/internal/auth/identifyByAlipay").identifyByAlipay$;
            identifyByAssistantMail: typeof import("./api/internal/auth/identifyByAssistantMail").identifyByAssistantMail$;
            identifyByContactsVerify: typeof import("./api/internal/auth/identifyByContactsVerify").identifyByContactsVerify$;
            identifyByFace: typeof import("./api/internal/auth/identifyByFace").identifyByFace$;
            identifyByOIDC: typeof import("./api/internal/auth/identifyByOIDC").identifyByOIDC$;
            oidcPwdSetted: typeof import("./api/internal/auth/oidcPwdSetted").oidcPwdSetted$;
            postLoginTempCode: typeof import("./api/internal/auth/postLoginTempCode").postLoginTempCode$;
            reLogin: typeof import("./api/internal/auth/reLogin").reLogin$;
        };
        backgroundAudio: {
            setCustomConfig: typeof import("./api/internal/backgroundAudio/setCustomConfig").setCustomConfig$;
        };
        badges: {
            getTabBadgeByKey: typeof import("./api/internal/badges/getTabBadgeByKey").getTabBadgeByKey$;
        };
        beacon: {
            bind: typeof import("./api/internal/beacon/bind").bind$;
            detectBeacons: typeof import("./api/internal/beacon/detectBeacons").detectBeacons$;
            detectStart: typeof import("./api/internal/beacon/detectStart").detectStart$;
            detectStop: typeof import("./api/internal/beacon/detectStop").detectStop$;
        };
        biz: {
            makecall: typeof import("./api/internal/biz/makecall").makecall$;
            openApp: typeof import("./api/internal/biz/openApp").openApp$;
            uploadVideo: typeof import("./api/internal/biz/uploadVideo").uploadVideo$;
            webNotify: typeof import("./api/internal/biz/webNotify").webNotify$;
        };
        bizcard: {
            batchAddExtContacts: typeof import("./api/internal/bizcard/batchAddExtContacts").batchAddExtContacts$;
            companyPicker: typeof import("./api/internal/bizcard/companyPicker").companyPicker$;
            friendCategories: typeof import("./api/internal/bizcard/friendCategories").friendCategories$;
            friendCount: typeof import("./api/internal/bizcard/friendCount").friendCount$;
            friendPicker: typeof import("./api/internal/bizcard/friendPicker").friendPicker$;
            friendsByCategory: typeof import("./api/internal/bizcard/friendsByCategory").friendsByCategory$;
            friendsByName: typeof import("./api/internal/bizcard/friendsByName").friendsByName$;
            friendsByRoom: typeof import("./api/internal/bizcard/friendsByRoom").friendsByRoom$;
            mobileContactCount: typeof import("./api/internal/bizcard/mobileContactCount").mobileContactCount$;
            roomsByTime: typeof import("./api/internal/bizcard/roomsByTime").roomsByTime$;
            search: typeof import("./api/internal/bizcard/search").search$;
            timeZone: typeof import("./api/internal/bizcard/timeZone").timeZone$;
            updateAvatar: typeof import("./api/internal/bizcard/updateAvatar").updateAvatar$;
        };
        blebusiness: {
            allOrgs: typeof import("./api/internal/blebusiness/allOrgs").allOrgs$;
            buildDeviceNick: typeof import("./api/internal/blebusiness/buildDeviceNick").buildDeviceNick$;
            currentMainOrgId: typeof import("./api/internal/blebusiness/currentMainOrgId").currentMainOrgId$;
            getDeviceInfo: typeof import("./api/internal/blebusiness/getDeviceInfo").getDeviceInfo$;
            getEndorseModelWithSecret: typeof import("./api/internal/blebusiness/getEndorseModelWithSecret").getEndorseModelWithSecret$;
            getHandshakeModelFromEndorseModel: typeof import("./api/internal/blebusiness/getHandshakeModelFromEndorseModel").getHandshakeModelFromEndorseModel$;
            popOrgCreatePage: typeof import("./api/internal/blebusiness/popOrgCreatePage").popOrgCreatePage$;
            popOrgCreatePageForProjector: typeof import("./api/internal/blebusiness/popOrgCreatePageForProjector").popOrgCreatePageForProjector$;
            queryDingWifiDevicesWithOrg: typeof import("./api/internal/blebusiness/queryDingWifiDevicesWithOrg").queryDingWifiDevicesWithOrg$;
            reportNetIsolate: typeof import("./api/internal/blebusiness/reportNetIsolate").reportNetIsolate$;
            showNotifyDingCard: typeof import("./api/internal/blebusiness/showNotifyDingCard").showNotifyDingCard$;
        };
        bleengine: {
            bluetoothState: typeof import("./api/internal/bleengine/bluetoothState").bluetoothState$;
            checkEnv: typeof import("./api/internal/bleengine/checkEnv").checkEnv$;
            connectDevice: typeof import("./api/internal/bleengine/connectDevice").connectDevice$;
            request: typeof import("./api/internal/bleengine/request").request$;
            scanStart: typeof import("./api/internal/bleengine/scanStart").scanStart$;
            scanStop: typeof import("./api/internal/bleengine/scanStop").scanStop$;
        };
        cache: {
            restore: typeof import("./api/internal/cache/restore").restore$;
            save: typeof import("./api/internal/cache/save").save$;
        };
        certify: {
            biometric: typeof import("./api/internal/certify/biometric").biometric$;
            step: typeof import("./api/internal/certify/step").step$;
            submit: typeof import("./api/internal/certify/submit").submit$;
            takePhoto: typeof import("./api/internal/certify/takePhoto").takePhoto$;
        };
        channel: {
            infoExist: typeof import("./api/internal/channel/infoExist").infoExist$;
            openPage: typeof import("./api/internal/channel/openPage").openPage$;
            publish: typeof import("./api/internal/channel/publish").publish$;
            subscribe: typeof import("./api/internal/channel/subscribe").subscribe$;
            unsubscribe: typeof import("./api/internal/channel/unsubscribe").unsubscribe$;
        };
        chat: {
            applyJoinGroup: typeof import("./api/internal/chat/applyJoinGroup").applyJoinGroup$;
            batchDisplayNames: typeof import("./api/internal/chat/batchDisplayNames").batchDisplayNames$;
            batchUserProfiles: typeof import("./api/internal/chat/batchUserProfiles").batchUserProfiles$;
            clearDraft: typeof import("./api/internal/chat/clearDraft").clearDraft$;
            closeTopOneBoxCard: typeof import("./api/internal/chat/closeTopOneBoxCard").closeTopOneBoxCard$;
            createApprovalGroup: typeof import("./api/internal/chat/createApprovalGroup").createApprovalGroup$;
            downloadMedias: typeof import("./api/internal/chat/downloadMedias").downloadMedias$;
            emotionTranslater: typeof import("./api/internal/chat/emotionTranslater").emotionTranslater$;
            encryptOpenId: typeof import("./api/internal/chat/encryptOpenId").encryptOpenId$;
            focusMessage: typeof import("./api/internal/chat/focusMessage").focusMessage$;
            generateUrl: typeof import("./api/internal/chat/generateUrl").generateUrl$;
            getConvInfo: typeof import("./api/internal/chat/getConvInfo").getConvInfo$;
            getConvUnreadMsgCount: typeof import("./api/internal/chat/getConvUnreadMsgCount").getConvUnreadMsgCount$;
            getConversations: typeof import("./api/internal/chat/getConversations").getConversations$;
            getCurrentOpenId: typeof import("./api/internal/chat/getCurrentOpenId").getCurrentOpenId$;
            getDisplayName: typeof import("./api/internal/chat/getDisplayName").getDisplayName$;
            getDraft: typeof import("./api/internal/chat/getDraft").getDraft$;
            getDraftAndClear: typeof import("./api/internal/chat/getDraftAndClear").getDraftAndClear$;
            getEncryptImageThumb: typeof import("./api/internal/chat/getEncryptImageThumb").getEncryptImageThumb$;
            getMessageList: typeof import("./api/internal/chat/getMessageList").getMessageList$;
            getPickedImageThumbData: typeof import("./api/internal/chat/getPickedImageThumbData").getPickedImageThumbData$;
            getRichTextPayload: typeof import("./api/internal/chat/getRichTextPayload").getRichTextPayload$;
            getTopic: typeof import("./api/internal/chat/getTopic").getTopic$;
            getTopicReplys: typeof import("./api/internal/chat/getTopicReplys").getTopicReplys$;
            getTopicStickers: typeof import("./api/internal/chat/getTopicStickers").getTopicStickers$;
            getUserProfile: typeof import("./api/internal/chat/getUserProfile").getUserProfile$;
            joinGroupByBizType: typeof import("./api/internal/chat/joinGroupByBizType").joinGroupByBizType$;
            markSettingsReddot: typeof import("./api/internal/chat/markSettingsReddot").markSettingsReddot$;
            openConversation: typeof import("./api/internal/chat/openConversation").openConversation$;
            pickAtList: typeof import("./api/internal/chat/pickAtList").pickAtList$;
            pickGroupConversation: typeof import("./api/internal/chat/pickGroupConversation").pickGroupConversation$;
            pickImage: typeof import("./api/internal/chat/pickImage").pickImage$;
            previewMessage: typeof import("./api/internal/chat/previewMessage").previewMessage$;
            recallMessage: typeof import("./api/internal/chat/recallMessage").recallMessage$;
            registTopicMessageListener: typeof import("./api/internal/chat/registTopicMessageListener").registTopicMessageListener$;
            selectAndSendText: typeof import("./api/internal/chat/selectAndSendText").selectAndSendText$;
            sendBizMessage: typeof import("./api/internal/chat/sendBizMessage").sendBizMessage$;
            sendCustomMessage: typeof import("./api/internal/chat/sendCustomMessage").sendCustomMessage$;
            sendMultiMsges: typeof import("./api/internal/chat/sendMultiMsges").sendMultiMsges$;
            sendReplyMessage: typeof import("./api/internal/chat/sendReplyMessage").sendReplyMessage$;
            sendRichTextMessage: typeof import("./api/internal/chat/sendRichTextMessage").sendRichTextMessage$;
            setHasRichTextDraft: typeof import("./api/internal/chat/setHasRichTextDraft").setHasRichTextDraft$;
            showMessageMenu: typeof import("./api/internal/chat/showMessageMenu").showMessageMenu$;
            showTopicEmotionBar: typeof import("./api/internal/chat/showTopicEmotionBar").showTopicEmotionBar$;
            stickerReply: typeof import("./api/internal/chat/stickerReply").stickerReply$;
            toConversation: typeof import("./api/internal/chat/toConversation").toConversation$;
            transmitMsg: typeof import("./api/internal/chat/transmitMsg").transmitMsg$;
            unregistTopicMessageListener: typeof import("./api/internal/chat/unregistTopicMessageListener").unregistTopicMessageListener$;
            uploadPickedImage: typeof import("./api/internal/chat/uploadPickedImage").uploadPickedImage$;
        };
        circle: {
            getStorage: typeof import("./api/internal/circle/getStorage").getStorage$;
            removeStorage: typeof import("./api/internal/circle/removeStorage").removeStorage$;
            setStorage: typeof import("./api/internal/circle/setStorage").setStorage$;
        };
        clipboardData: {
            getData: typeof import("./api/internal/clipboardData/getData").getData$;
        };
        coap: {
            sendMessage: typeof import("./api/internal/coap/sendMessage").sendMessage$;
        };
        contact: {
            chooseEnterpriseUser: typeof import("./api/internal/contact/chooseEnterpriseUser").chooseEnterpriseUser$;
            chooseMobileContact: typeof import("./api/internal/contact/chooseMobileContact").chooseMobileContact$;
            chooseOrgAddress: typeof import("./api/internal/contact/chooseOrgAddress").chooseOrgAddress$;
            commonPicker: typeof import("./api/internal/contact/commonPicker").commonPicker$;
            internalComplexPicker: typeof import("./api/internal/contact/internalComplexPicker").internalComplexPicker$;
            internalComplexPickerWithUid: typeof import("./api/internal/contact/internalComplexPickerWithUid").internalComplexPickerWithUid$;
            openSelectUserWnd: typeof import("./api/internal/contact/openSelectUserWnd").openSelectUserWnd$;
            queryPickedResult: typeof import("./api/internal/contact/queryPickedResult").queryPickedResult$;
            removePickedResult: typeof import("./api/internal/contact/removePickedResult").removePickedResult$;
        };
        conversation: {
            getProperty: typeof import("./api/internal/conversation/getProperty").getProperty$;
            mute: typeof import("./api/internal/conversation/mute").mute$;
            switchEffectiveMode: typeof import("./api/internal/conversation/switchEffectiveMode").switchEffectiveMode$;
            top: typeof import("./api/internal/conversation/top").top$;
        };
        corps: {
            listCorpInfo: typeof import("./api/internal/corps/listCorpInfo").listCorpInfo$;
        };
        createOrg: {
            industryInfo: typeof import("./api/internal/createOrg/industryInfo").industryInfo$;
            lastCreateOrgInfo: typeof import("./api/internal/createOrg/lastCreateOrgInfo").lastCreateOrgInfo$;
            successJump: typeof import("./api/internal/createOrg/successJump").successJump$;
        };
        cspace: {
            cancelDecryptAndUpload: typeof import("./api/internal/cspace/cancelDecryptAndUpload").cancelDecryptAndUpload$;
            cancelFileUpload: typeof import("./api/internal/cspace/cancelFileUpload").cancelFileUpload$;
            cidToSpaceId: typeof import("./api/internal/cspace/cidToSpaceId").cidToSpaceId$;
            decryptAndUpload: typeof import("./api/internal/cspace/decryptAndUpload").decryptAndUpload$;
            downloadFile: typeof import("./api/internal/cspace/downloadFile").downloadFile$;
            edit: typeof import("./api/internal/cspace/edit").edit$;
            fileUpload: typeof import("./api/internal/cspace/fileUpload").fileUpload$;
            getMediaInfo: typeof import("./api/internal/cspace/getMediaInfo").getMediaInfo$;
            getToken: typeof import("./api/internal/cspace/getToken").getToken$;
            openCloudPrintPluginWnd: typeof import("./api/internal/cspace/openCloudPrintPluginWnd").openCloudPrintPluginWnd$;
            openCloudPrintWnd: typeof import("./api/internal/cspace/openCloudPrintWnd").openCloudPrintWnd$;
            openEditInviteWnd: typeof import("./api/internal/cspace/openEditInviteWnd").openEditInviteWnd$;
            openFolder: typeof import("./api/internal/cspace/openFolder").openFolder$;
            requestDentryUrl: typeof import("./api/internal/cspace/requestDentryUrl").requestDentryUrl$;
            sendMsgToRequestPermission: typeof import("./api/internal/cspace/sendMsgToRequestPermission").sendMsgToRequestPermission$;
            uploadFile: typeof import("./api/internal/cspace/uploadFile").uploadFile$;
        };
        customerService: {
            hideQuickEntrance: typeof import("./api/internal/customerService/hideQuickEntrance").hideQuickEntrance$;
            isRecording: typeof import("./api/internal/customerService/isRecording").isRecording$;
            showQuickEntrance: typeof import("./api/internal/customerService/showQuickEntrance").showQuickEntrance$;
            startRecord: typeof import("./api/internal/customerService/startRecord").startRecord$;
            stopRecord: typeof import("./api/internal/customerService/stopRecord").stopRecord$;
            tryUploadRecords: typeof import("./api/internal/customerService/tryUploadRecords").tryUploadRecords$;
        };
        diagnostic: {
            getFastCheckInInfo: typeof import("./api/internal/diagnostic/getFastCheckInInfo").getFastCheckInInfo$;
            getLocalErrorMsg: typeof import("./api/internal/diagnostic/getLocalErrorMsg").getLocalErrorMsg$;
        };
        dingCard: {
            bindWorkMobile: typeof import("./api/internal/dingCard/bindWorkMobile").bindWorkMobile$;
            unbindWorkMobile: typeof import("./api/internal/dingCard/unbindWorkMobile").unbindWorkMobile$;
        };
        dingbadge: {
            auth: typeof import("./api/internal/dingbadge/auth").auth$;
            codeInvalidReport: typeof import("./api/internal/dingbadge/codeInvalidReport").codeInvalidReport$;
            isAuth: typeof import("./api/internal/dingbadge/isAuth").isAuth$;
            refreshCode: typeof import("./api/internal/dingbadge/refreshCode").refreshCode$;
            refreshData: typeof import("./api/internal/dingbadge/refreshData").refreshData$;
            startGenCode: typeof import("./api/internal/dingbadge/startGenCode").startGenCode$;
            stopGenCode: typeof import("./api/internal/dingbadge/stopGenCode").stopGenCode$;
            unAuth: typeof import("./api/internal/dingbadge/unAuth").unAuth$;
            visit: typeof import("./api/internal/dingbadge/visit").visit$;
        };
        dingpay: {
            bindAlipay: typeof import("./api/internal/dingpay/bindAlipay").bindAlipay$;
            unbindAlipay: typeof import("./api/internal/dingpay/unbindAlipay").unbindAlipay$;
        };
        efficiencyKit: {
            getParams: typeof import("./api/internal/efficiencyKit/getParams").getParams$;
            openCustomGroupList: typeof import("./api/internal/efficiencyKit/openCustomGroupList").openCustomGroupList$;
            setParams: typeof import("./api/internal/efficiencyKit/setParams").setParams$;
        };
        enterpriseEncryption: {
            info: typeof import("./api/internal/enterpriseEncryption/info").info$;
            sendMessageToMaster: typeof import("./api/internal/enterpriseEncryption/sendMessageToMaster").sendMessageToMaster$;
            turnOnWithAnimation: typeof import("./api/internal/enterpriseEncryption/turnOnWithAnimation").turnOnWithAnimation$;
        };
        faceScan: {
            prepareScan: typeof import("./api/internal/faceScan/prepareScan").prepareScan$;
            scan: typeof import("./api/internal/faceScan/scan").scan$;
        };
        facialRecognition: {
            detectFace: typeof import("./api/internal/facialRecognition/detectFace").detectFace$;
            init: typeof import("./api/internal/facialRecognition/init").init$;
        };
        focus: {
            checkEnvironment: typeof import("./api/internal/focus/checkEnvironment").checkEnvironment$;
            closeFocusFloatingView: typeof import("./api/internal/focus/closeFocusFloatingView").closeFocusFloatingView$;
            getCurrentProjectionData: typeof import("./api/internal/focus/getCurrentProjectionData").getCurrentProjectionData$;
            openFocusFloatingView: typeof import("./api/internal/focus/openFocusFloatingView").openFocusFloatingView$;
            popProjectionSelector: typeof import("./api/internal/focus/popProjectionSelector").popProjectionSelector$;
            register: typeof import("./api/internal/focus/register").register$;
            startProjection: typeof import("./api/internal/focus/startProjection").startProjection$;
            stopProjection: typeof import("./api/internal/focus/stopProjection").stopProjection$;
            unRegister: typeof import("./api/internal/focus/unRegister").unRegister$;
        };
        googlePlayService: {
            getGoogleServiceInfo: typeof import("./api/internal/googlePlayService/getGoogleServiceInfo").getGoogleServiceInfo$;
        };
        groupapp: {
            auth: typeof import("./api/internal/groupapp/auth").auth$;
            sendMsgAsUser: typeof import("./api/internal/groupapp/sendMsgAsUser").sendMsgAsUser$;
        };
        groupbill: {
            detail: typeof import("./api/internal/groupbill/detail").detail$;
            query: typeof import("./api/internal/groupbill/query").query$;
            send: typeof import("./api/internal/groupbill/send").send$;
        };
        guide: {
            closeGuideBanner: typeof import("./api/internal/guide/closeGuideBanner").closeGuideBanner$;
        };
        health: {
            checkHealthPermission: typeof import("./api/internal/health/checkHealthPermission").checkHealthPermission$;
            checkSensorPermission: typeof import("./api/internal/health/checkSensorPermission").checkSensorPermission$;
            disableStepCountSync: typeof import("./api/internal/health/disableStepCountSync").disableStepCountSync$;
            enableStepCountSync: typeof import("./api/internal/health/enableStepCountSync").enableStepCountSync$;
            getTodaysStep: typeof import("./api/internal/health/getTodaysStep").getTodaysStep$;
            getTodaysStepCount: typeof import("./api/internal/health/getTodaysStepCount").getTodaysStepCount$;
            isShowPermissionTip: typeof import("./api/internal/health/isShowPermissionTip").isShowPermissionTip$;
            openAISport: typeof import("./api/internal/health/openAISport").openAISport$;
            pedometerStatus: typeof import("./api/internal/health/pedometerStatus").pedometerStatus$;
            queryHealthPermission: typeof import("./api/internal/health/queryHealthPermission").queryHealthPermission$;
            requestHealthPermission: typeof import("./api/internal/health/requestHealthPermission").requestHealthPermission$;
            requestSensorPermission: typeof import("./api/internal/health/requestSensorPermission").requestSensorPermission$;
        };
        host: {
            cancel: typeof import("./api/internal/host/cancel").cancel$;
            lwp: typeof import("./api/internal/host/lwp").lwp$;
            query: typeof import("./api/internal/host/query").query$;
        };
        hpm: {
            delete: typeof import("./api/internal/hpm/delete").delete$;
            get: typeof import("./api/internal/hpm/get").get$;
            queryInfo: typeof import("./api/internal/hpm/queryInfo").queryInfo$;
            update: typeof import("./api/internal/hpm/update").update$;
        };
        imshortcut: {
            getMsgFilterConfigDetail: typeof import("./api/internal/imshortcut/getMsgFilterConfigDetail").getMsgFilterConfigDetail$;
            getMsgFilterTabsConfig: typeof import("./api/internal/imshortcut/getMsgFilterTabsConfig").getMsgFilterTabsConfig$;
            initEventChannel: typeof import("./api/internal/imshortcut/initEventChannel").initEventChannel$;
            listFilterMsg: typeof import("./api/internal/imshortcut/listFilterMsg").listFilterMsg$;
            onTabSelected: typeof import("./api/internal/imshortcut/onTabSelected").onTabSelected$;
            updateMsgFilterStatus: typeof import("./api/internal/imshortcut/updateMsgFilterStatus").updateMsgFilterStatus$;
        };
        inputPanel: {
            add: typeof import("./api/internal/inputPanel/add").add$;
            addToolBar: typeof import("./api/internal/inputPanel/addToolBar").addToolBar$;
            atPick: typeof import("./api/internal/inputPanel/atPick").atPick$;
            changeMode: typeof import("./api/internal/inputPanel/changeMode").changeMode$;
            getCurrentInput: typeof import("./api/internal/inputPanel/getCurrentInput").getCurrentInput$;
            refreshInputExtendView: typeof import("./api/internal/inputPanel/refreshInputExtendView").refreshInputExtendView$;
            remove: typeof import("./api/internal/inputPanel/remove").remove$;
            removeToolbar: typeof import("./api/internal/inputPanel/removeToolbar").removeToolbar$;
            resignInput: typeof import("./api/internal/inputPanel/resignInput").resignInput$;
        };
        interactiveCard: {
            batchDisposeCard: typeof import("./api/internal/interactiveCard/batchDisposeCard").batchDisposeCard$;
            getCardInfo: typeof import("./api/internal/interactiveCard/getCardInfo").getCardInfo$;
            sendAction: typeof import("./api/internal/interactiveCard/sendAction").sendAction$;
        };
        invoice: {
            chooseInvoice: typeof import("./api/internal/invoice/chooseInvoice").chooseInvoice$;
        };
        live: {
            startLive: typeof import("./api/internal/live/startLive").startLive$;
            startUnifiedLive: typeof import("./api/internal/live/startUnifiedLive").startUnifiedLive$;
        };
        log: {
            add: typeof import("./api/internal/log/add").add$;
            printUnifyLog: typeof import("./api/internal/log/printUnifyLog").printUnifyLog$;
            searchClickLog: typeof import("./api/internal/log/searchClickLog").searchClickLog$;
            searchQueryLog: typeof import("./api/internal/log/searchQueryLog").searchQueryLog$;
            upload: typeof import("./api/internal/log/upload").upload$;
            uploadException: typeof import("./api/internal/log/uploadException").uploadException$;
        };
        lwp: {
            call: typeof import("./api/internal/lwp/call").call$;
            setSessionIdCookie: typeof import("./api/internal/lwp/setSessionIdCookie").setSessionIdCookie$;
        };
        microapp: {
            checkInstalled: typeof import("./api/internal/microapp/checkInstalled").checkInstalled$;
            queryInfo: typeof import("./api/internal/microapp/queryInfo").queryInfo$;
            triggerSync: typeof import("./api/internal/microapp/triggerSync").triggerSync$;
        };
        navigation: {
            setIcon: typeof import("./api/internal/navigation/setIcon").setIcon$;
        };
        notify: {
            add: typeof import("./api/internal/notify/add").add$;
            closeModal: typeof import("./api/internal/notify/closeModal").closeModal$;
            send: typeof import("./api/internal/notify/send").send$;
            showModal: typeof import("./api/internal/notify/showModal").showModal$;
        };
        oa: {
            activatePersonalSpace: typeof import("./api/internal/oa/activatePersonalSpace").activatePersonalSpace$;
            getNavHeaderHeight: typeof import("./api/internal/oa/getNavHeaderHeight").getNavHeaderHeight$;
            isPersonalSpaceEnabled: typeof import("./api/internal/oa/isPersonalSpaceEnabled").isPersonalSpaceEnabled$;
        };
        openTemporary: {
            setData: typeof import("./api/internal/openTemporary/setData").setData$;
        };
        pageLink: {
            fetch: typeof import("./api/internal/pageLink/fetch").fetch$;
            request: typeof import("./api/internal/pageLink/request").request$;
            response: typeof import("./api/internal/pageLink/response").response$;
        };
        payment: {
            requestForInAppPurchase: typeof import("./api/internal/payment/requestForInAppPurchase").requestForInAppPurchase$;
        };
        permission: {
            hasSelfPermissions: typeof import("./api/internal/permission/hasSelfPermissions").hasSelfPermissions$;
            requestPermissions: typeof import("./api/internal/permission/requestPermissions").requestPermissions$;
        };
        phoneContact: {
            add: typeof import("./api/internal/phoneContact/add").add$;
            checkPermissionAndUpload: typeof import("./api/internal/phoneContact/checkPermissionAndUpload").checkPermissionAndUpload$;
            getMobileContactName: typeof import("./api/internal/phoneContact/getMobileContactName").getMobileContactName$;
            requestPermissionAndUploadWhenAuthed: typeof import("./api/internal/phoneContact/requestPermissionAndUploadWhenAuthed").requestPermissionAndUploadWhenAuthed$;
        };
        realm: {
            getUserExclusiveInfo: typeof import("./api/internal/realm/getUserExclusiveInfo").getUserExclusiveInfo$;
            updateExclusiveConfig: typeof import("./api/internal/realm/updateExclusiveConfig").updateExclusiveConfig$;
        };
        redenvelop: {
            sendRandomRedEnvelop: typeof import("./api/internal/redenvelop/sendRandomRedEnvelop").sendRandomRedEnvelop$;
        };
        redpacket: {
            nav2RedPacket: typeof import("./api/internal/redpacket/nav2RedPacket").nav2RedPacket$;
        };
        request: {
            getOrgFeatureByKey: typeof import("./api/internal/request/getOrgFeatureByKey").getOrgFeatureByKey$;
            getSecurityToken: typeof import("./api/internal/request/getSecurityToken").getSecurityToken$;
            httpOverLWP: typeof import("./api/internal/request/httpOverLWP").httpOverLWP$;
            lwp: typeof import("./api/internal/request/lwp").lwp$;
            sendHeadRequest: typeof import("./api/internal/request/sendHeadRequest").sendHeadRequest$;
        };
        requestmoney: {
            contactswithUids: typeof import("./api/internal/requestmoney/contactswithUids").contactswithUids$;
            currentUid: typeof import("./api/internal/requestmoney/currentUid").currentUid$;
            dingRemind: typeof import("./api/internal/requestmoney/dingRemind").dingRemind$;
            generateBizId: typeof import("./api/internal/requestmoney/generateBizId").generateBizId$;
            loadConversations: typeof import("./api/internal/requestmoney/loadConversations").loadConversations$;
            notifyAlipayResult: typeof import("./api/internal/requestmoney/notifyAlipayResult").notifyAlipayResult$;
            showContactAndGroupPick: typeof import("./api/internal/requestmoney/showContactAndGroupPick").showContactAndGroupPick$;
            showGroupMemberPick: typeof import("./api/internal/requestmoney/showGroupMemberPick").showGroupMemberPick$;
            updateCardStatus: typeof import("./api/internal/requestmoney/updateCardStatus").updateCardStatus$;
        };
        resource: {
            getPackageInfo: typeof import("./api/internal/resource/getPackageInfo").getPackageInfo$;
            getResourceContent: typeof import("./api/internal/resource/getResourceContent").getResourceContent$;
        };
        safe: {
            getAppInfo: typeof import("./api/internal/safe/getAppInfo").getAppInfo$;
            getDeviceInfo: typeof import("./api/internal/safe/getDeviceInfo").getDeviceInfo$;
            scanPlugin: typeof import("./api/internal/safe/scanPlugin").scanPlugin$;
        };
        schedule: {
            update: typeof import("./api/internal/schedule/update").update$;
        };
        schema: {
            open: typeof import("./api/internal/schema/open").open$;
            openPermissionSetting: typeof import("./api/internal/schema/openPermissionSetting").openPermissionSetting$;
            openWifiSetting: typeof import("./api/internal/schema/openWifiSetting").openWifiSetting$;
        };
        search: {
            debug: typeof import("./api/internal/search/debug").debug$;
        };
        security: {
            asgCheck: typeof import("./api/internal/security/asgCheck").asgCheck$;
        };
        sqlite: {
            executeSql: typeof import("./api/internal/sqlite/executeSql").executeSql$;
            open: typeof import("./api/internal/sqlite/open").open$;
        };
        studyroom: {
            initRoom: typeof import("./api/internal/studyroom/initRoom").initRoom$;
            operateMusic: typeof import("./api/internal/studyroom/operateMusic").operateMusic$;
            reportMemberState: typeof import("./api/internal/studyroom/reportMemberState").reportMemberState$;
        };
        teleVideo: {
            addMember: typeof import("./api/internal/teleVideo/addMember").addMember$;
            creatConf: typeof import("./api/internal/teleVideo/creatConf").creatConf$;
            dismissMeetingFloatingView: typeof import("./api/internal/teleVideo/dismissMeetingFloatingView").dismissMeetingFloatingView$;
            registPushHandler: typeof import("./api/internal/teleVideo/registPushHandler").registPushHandler$;
            shareInvite: typeof import("./api/internal/teleVideo/shareInvite").shareInvite$;
            showMeetingFloatingView: typeof import("./api/internal/teleVideo/showMeetingFloatingView").showMeetingFloatingView$;
            unregistPushHandler: typeof import("./api/internal/teleVideo/unregistPushHandler").unregistPushHandler$;
        };
        ui: {
            getCurrentUIEnvironment: typeof import("./api/internal/ui/getCurrentUIEnvironment").getCurrentUIEnvironment$;
        };
        user: {
            allOrganizations: typeof import("./api/internal/user/allOrganizations").allOrganizations$;
            bindTaobao: typeof import("./api/internal/user/bindTaobao").bindTaobao$;
            dingtalkIdToUserInfos: typeof import("./api/internal/user/dingtalkIdToUserInfos").dingtalkIdToUserInfos$;
            getClaimEnergyEntryVisibility: typeof import("./api/internal/user/getClaimEnergyEntryVisibility").getClaimEnergyEntryVisibility$;
            getCurrentUserInfo: typeof import("./api/internal/user/getCurrentUserInfo").getCurrentUserInfo$;
            getRealmInfo: typeof import("./api/internal/user/getRealmInfo").getRealmInfo$;
            getRole: typeof import("./api/internal/user/getRole").getRole$;
            isNewUser: typeof import("./api/internal/user/isNewUser").isNewUser$;
            setClaimEnergyEntryVisibility: typeof import("./api/internal/user/setClaimEnergyEntryVisibility").setClaimEnergyEntryVisibility$;
            showMedalEntry: typeof import("./api/internal/user/showMedalEntry").showMedalEntry$;
            uids2UserInfos: typeof import("./api/internal/user/uids2UserInfos").uids2UserInfos$;
            unbindTaobao: typeof import("./api/internal/user/unbindTaobao").unbindTaobao$;
        };
        util: {
            authAlipayInvoice: typeof import("./api/internal/util/authAlipayInvoice").authAlipayInvoice$;
            changeCloudSettingConfig: typeof import("./api/internal/util/changeCloudSettingConfig").changeCloudSettingConfig$;
            chooseFile: typeof import("./api/internal/util/chooseFile").chooseFile$;
            chooseIndustry: typeof import("./api/internal/util/chooseIndustry").chooseIndustry$;
            chooseRegion: typeof import("./api/internal/util/chooseRegion").chooseRegion$;
            collectCell: typeof import("./api/internal/util/collectCell").collectCell$;
            dns: typeof import("./api/internal/util/dns").dns$;
            draw: typeof import("./api/internal/util/draw").draw$;
            encryData: typeof import("./api/internal/util/encryData").encryData$;
            encrySHA1Data: typeof import("./api/internal/util/encrySHA1Data").encrySHA1Data$;
            forbidScreenShot: typeof import("./api/internal/util/forbidScreenShot").forbidScreenShot$;
            getBindSmartDeviceOrgList: typeof import("./api/internal/util/getBindSmartDeviceOrgList").getBindSmartDeviceOrgList$;
            getCloudSetting: typeof import("./api/internal/util/getCloudSetting").getCloudSetting$;
            getCloudSettingConfig: typeof import("./api/internal/util/getCloudSettingConfig").getCloudSettingConfig$;
            getCorpIdByOrgId: typeof import("./api/internal/util/getCorpIdByOrgId").getCorpIdByOrgId$;
            getCurrentOrgId: typeof import("./api/internal/util/getCurrentOrgId").getCurrentOrgId$;
            getLBSWua: typeof import("./api/internal/util/getLBSWua").getLBSWua$;
            getOrgIdByCorpId: typeof import("./api/internal/util/getOrgIdByCorpId").getOrgIdByCorpId$;
            getSystemSetting: typeof import("./api/internal/util/getSystemSetting").getSystemSetting$;
            getUtdid: typeof import("./api/internal/util/getUtdid").getUtdid$;
            getWua: typeof import("./api/internal/util/getWua").getWua$;
            grayStringLemon: typeof import("./api/internal/util/grayStringLemon").grayStringLemon$;
            graySwitch: typeof import("./api/internal/util/graySwitch").graySwitch$;
            graySwitchLemon: typeof import("./api/internal/util/graySwitchLemon").graySwitchLemon$;
            isSimulator: typeof import("./api/internal/util/isSimulator").isSimulator$;
            ratingAndFeedback: typeof import("./api/internal/util/ratingAndFeedback").ratingAndFeedback$;
            recordShortVideo: typeof import("./api/internal/util/recordShortVideo").recordShortVideo$;
            setSystemSetting: typeof import("./api/internal/util/setSystemSetting").setSystemSetting$;
            showAddExternalContactDialog: typeof import("./api/internal/util/showAddExternalContactDialog").showAddExternalContactDialog$;
            switchOA: typeof import("./api/internal/util/switchOA").switchOA$;
            uploadBase64EncodeImage: typeof import("./api/internal/util/uploadBase64EncodeImage").uploadBase64EncodeImage$;
            uploadFile: typeof import("./api/internal/util/uploadFile").uploadFile$;
        };
        webview: {
            openDebugLink: typeof import("./api/internal/webview/openDebugLink").openDebugLink$;
        };
        webviewTurbo: {
            dispose: typeof import("./api/internal/webviewTurbo/dispose").dispose$;
            start: typeof import("./api/internal/webviewTurbo/start").start$;
        };
        work: {
            getApplist: typeof import("./api/internal/work/getApplist").getApplist$;
            openNativeApp: typeof import("./api/internal/work/openNativeApp").openNativeApp$;
        };
        wxsdk: {
            openMiniApp: typeof import("./api/internal/wxsdk/openMiniApp").openMiniApp$;
        };
        zoloz: {
            isSupportFitech: typeof import("./api/internal/zoloz/isSupportFitech").isSupportFitech$;
            verifyFaceByFitech: typeof import("./api/internal/zoloz/verifyFaceByFitech").verifyFaceByFitech$;
        };
    };
    media: {
        voiceRecorder: {
            keepAlive: typeof import("./api/media/voiceRecorder/keepAlive").keepAlive$;
            pause: typeof import("./api/media/voiceRecorder/pause").pause$;
            resume: typeof import("./api/media/voiceRecorder/resume").resume$;
            start: typeof import("./api/media/voiceRecorder/start").start$;
            stop: typeof import("./api/media/voiceRecorder/stop").stop$;
        };
    };
    net: {
        bjGovApn: {
            loginGovNet: typeof import("./api/net/bjGovApn/loginGovNet").loginGovNet$;
        };
        tunnel: {
            request: typeof import("./api/net/tunnel/request").request$;
        };
        vpn: {
            check: typeof import("./api/net/vpn/check").check$;
            start: typeof import("./api/net/vpn/start").start$;
            stop: typeof import("./api/net/vpn/stop").stop$;
        };
    };
    preRelease: {
        appLink: {
            fetch: typeof import("./api/preRelease/appLink/fetch").fetch$;
            open: typeof import("./api/preRelease/appLink/open").open$;
            request: typeof import("./api/preRelease/appLink/request").request$;
            response: typeof import("./api/preRelease/appLink/response").response$;
        };
    };
    retail: {
        chat: {
            open: typeof import("./api/retail/chat/open").open$;
        };
        telephone: {
            call: typeof import("./api/retail/telephone/call").call$;
        };
    };
    runtime: {
        info: {
            status: typeof import("./api/runtime/info/status").status$;
        };
        message: {
            fetch: typeof import("./api/runtime/message/fetch").fetch$;
            post: typeof import("./api/runtime/message/post").post$;
        };
        monitor: {
            enableUsability: typeof import("./api/runtime/monitor/enableUsability").enableUsability$;
            finishLoad: typeof import("./api/runtime/monitor/finishLoad").finishLoad$;
            getLoadTime: typeof import("./api/runtime/monitor/getLoadTime").getLoadTime$;
            usability: typeof import("./api/runtime/monitor/usability").usability$;
        };
        permission: {
            requestAuthCode: typeof import("./api/runtime/permission/requestAuthCode").requestAuthCode$;
            requestJsApis: typeof import("./api/runtime/permission/requestJsApis").requestJsApis$;
            requestOperateAuthCode: typeof import("./api/runtime/permission/requestOperateAuthCode").requestOperateAuthCode$;
        };
    };
    service: {
        request: {
            httpOverLwp: typeof import("./api/service/request/httpOverLwp").httpOverLwp$;
            mtop: typeof import("./api/service/request/mtop").mtop$;
            mtopOverLwp: typeof import("./api/service/request/mtopOverLwp").mtopOverLwp$;
        };
    };
    ui: {
        appLink: {
            fetch: typeof import("./api/ui/appLink/fetch").fetch$;
            open: typeof import("./api/ui/appLink/open").open$;
            request: typeof import("./api/ui/appLink/request").request$;
            response: typeof import("./api/ui/appLink/response").response$;
        };
        drawer: {
            close: typeof import("./api/ui/drawer/close").close$;
            config: typeof import("./api/ui/drawer/config").config$;
            disable: typeof import("./api/ui/drawer/disable").disable$;
            enable: typeof import("./api/ui/drawer/enable").enable$;
            init: typeof import("./api/ui/drawer/init").init$;
            open: typeof import("./api/ui/drawer/open").open$;
        };
        floatWindow: {
            minimize: typeof import("./api/ui/floatWindow/minimize").minimize$;
        };
        input: {
            plain: typeof import("./api/ui/input/plain").plain$;
        };
        multitask: {
            addToFloat: typeof import("./api/ui/multitask/addToFloat").addToFloat$;
            removeFromFloat: typeof import("./api/ui/multitask/removeFromFloat").removeFromFloat$;
        };
        nav: {
            close: typeof import("./api/ui/nav/close").close$;
            getCurrentId: typeof import("./api/ui/nav/getCurrentId").getCurrentId$;
            go: typeof import("./api/ui/nav/go").go$;
            pop: typeof import("./api/ui/nav/pop").pop$;
            preload: typeof import("./api/ui/nav/preload").preload$;
            push: typeof import("./api/ui/nav/push").push$;
            quit: typeof import("./api/ui/nav/quit").quit$;
            recycle: typeof import("./api/ui/nav/recycle").recycle$;
        };
        progressBar: {
            setColors: typeof import("./api/ui/progressBar/setColors").setColors$;
        };
        pullToRefresh: {
            disable: typeof import("./api/ui/pullToRefresh/disable").disable$;
            enable: typeof import("./api/ui/pullToRefresh/enable").enable$;
            stop: typeof import("./api/ui/pullToRefresh/stop").stop$;
        };
        tab: {
            add: typeof import("./api/ui/tab/add").add$;
            config: typeof import("./api/ui/tab/config").config$;
            init: typeof import("./api/ui/tab/init").init$;
            remove: typeof import("./api/ui/tab/remove").remove$;
            select: typeof import("./api/ui/tab/select").select$;
            start: typeof import("./api/ui/tab/start").start$;
        };
        webViewBounce: {
            disable: typeof import("./api/ui/webViewBounce/disable").disable$;
            enable: typeof import("./api/ui/webViewBounce/enable").enable$;
        };
    };
    util: {
        cookies: {
            read: typeof import("./api/util/cookies/read").read$;
            write: typeof import("./api/util/cookies/write").write$;
        };
        domainStorage: {
            clearItems: typeof import("./api/util/domainStorage/clearItems").clearItems$;
            getItem: typeof import("./api/util/domainStorage/getItem").getItem$;
            getItems: typeof import("./api/util/domainStorage/getItems").getItems$;
            listItems: typeof import("./api/util/domainStorage/listItems").listItems$;
            removeItem: typeof import("./api/util/domainStorage/removeItem").removeItem$;
            setItem: typeof import("./api/util/domainStorage/setItem").setItem$;
        };
        localStorage: {
            getItem: typeof import("./api/util/localStorage/getItem").getItem$;
            removeItem: typeof import("./api/util/localStorage/removeItem").removeItem$;
            setItem: typeof import("./api/util/localStorage/setItem").setItem$;
        };
        openTemporary: {
            getData: typeof import("./api/util/openTemporary/getData").getData$;
        };
    };
} & {
    plugin: typeof plugin;
};
export = dd;
