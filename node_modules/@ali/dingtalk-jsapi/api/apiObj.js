"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.apiObj = void 0;
/* tslint:disable:trailing-comma */
/* tslint:disable:max-line-length */
var getBioInfo_1 = require("./alipay/verifyidentity/getBioInfo");
var verifyIdentity_1 = require("./alipay/verifyidentity/verifyIdentity");
var beaconPicker_1 = require("./biz/ATMBle/beaconPicker");
var detectFace_1 = require("./biz/ATMBle/detectFace");
var detectFaceFullScreen_1 = require("./biz/ATMBle/detectFaceFullScreen");
var faceManager_1 = require("./biz/ATMBle/faceManager");
var punchModePicker_1 = require("./biz/ATMBle/punchModePicker");
var getClipboardData_1 = require("./biz/alidoc/getClipboardData");
var setStyle_1 = require("./biz/alidoc/setStyle");
var auth_1 = require("./biz/alipay/auth");
var bindAlipay_1 = require("./biz/alipay/bindAlipay");
var openAuth_1 = require("./biz/alipay/openAuth");
var pay_1 = require("./biz/alipay/pay");
var openAccountPwdLoginPage_1 = require("./biz/auth/openAccountPwdLoginPage");
var requestAuthCode_1 = require("./biz/auth/requestAuthCode");
var requestAuthInfo_1 = require("./biz/auth/requestAuthInfo");
var chooseDateTime_1 = require("./biz/calendar/chooseDateTime");
var chooseHalfDay_1 = require("./biz/calendar/chooseHalfDay");
var chooseInterval_1 = require("./biz/calendar/chooseInterval");
var chooseOneDay_1 = require("./biz/calendar/chooseOneDay");
var datePicker_1 = require("./biz/calendar/datePicker");
var addGroup_1 = require("./biz/chat/addGroup");
var chooseConversation_1 = require("./biz/chat/chooseConversation");
var chooseConversationByCorpId_1 = require("./biz/chat/chooseConversationByCorpId");
var collectSticker_1 = require("./biz/chat/collectSticker");
var createOrgPublicGroup_1 = require("./biz/chat/createOrgPublicGroup");
var createSceneGroup_1 = require("./biz/chat/createSceneGroup");
var getConversationInfo_1 = require("./biz/chat/getConversationInfo");
var getRealmCid_1 = require("./biz/chat/getRealmCid");
var locationChatMessage_1 = require("./biz/chat/locationChatMessage");
var modifyGroupDesc_1 = require("./biz/chat/modifyGroupDesc");
var open_1 = require("./biz/chat/open");
var openSingleChat_1 = require("./biz/chat/openSingleChat");
var pickConversation_1 = require("./biz/chat/pickConversation");
var queryUnreadSessions_1 = require("./biz/chat/queryUnreadSessions");
var sendEmotion_1 = require("./biz/chat/sendEmotion");
var sendMessageToContact_1 = require("./biz/chat/sendMessageToContact");
var sendReplyToInputPanel_1 = require("./biz/chat/sendReplyToInputPanel");
var sendRichTextToEditor_1 = require("./biz/chat/sendRichTextToEditor");
var toConversation_1 = require("./biz/chat/toConversation");
var toConversationByOpenConversationId_1 = require("./biz/chat/toConversationByOpenConversationId");
var setData_1 = require("./biz/clipboardData/setData");
var createCloudCall_1 = require("./biz/conference/createCloudCall");
var docRoomStatusChanged_1 = require("./biz/conference/docRoomStatusChanged");
var getCloudCallInfo_1 = require("./biz/conference/getCloudCallInfo");
var getCloudCallList_1 = require("./biz/conference/getCloudCallList");
var openLink_1 = require("./biz/conference/openLink");
var screenshot_1 = require("./biz/conference/screenshot");
var toggleConfAudio_1 = require("./biz/conference/toggleConfAudio");
var videoCall_1 = require("./biz/conference/videoCall");
var videoConfCall_1 = require("./biz/conference/videoConfCall");
var addFromContact_1 = require("./biz/contact/addFromContact");
var addFromManual_1 = require("./biz/contact/addFromManual");
var addSubManager_1 = require("./biz/contact/addSubManager");
var addUserForm_1 = require("./biz/contact/addUserForm");
var changeCustomerFollower_1 = require("./biz/contact/changeCustomerFollower");
var choose_1 = require("./biz/contact/choose");
var chooseMobileContacts_1 = require("./biz/contact/chooseMobileContacts");
var complexChoose_1 = require("./biz/contact/complexChoose");
var complexPicker_1 = require("./biz/contact/complexPicker");
var complexSelectedPicker_1 = require("./biz/contact/complexSelectedPicker");
var createGroup_1 = require("./biz/contact/createGroup");
var departmentsPicker_1 = require("./biz/contact/departmentsPicker");
var departmentsSelectedPicker_1 = require("./biz/contact/departmentsSelectedPicker");
var externalComplexPicker_1 = require("./biz/contact/externalComplexPicker");
var externalEditForm_1 = require("./biz/contact/externalEditForm");
var getMobileContact_1 = require("./biz/contact/getMobileContact");
var inviteGroupMember_1 = require("./biz/contact/inviteGroupMember");
var isForeignOrg_1 = require("./biz/contact/isForeignOrg");
var manageContactAlert_1 = require("./biz/contact/manageContactAlert");
var pickCustomer_1 = require("./biz/contact/pickCustomer");
var pickJobTitle_1 = require("./biz/contact/pickJobTitle");
var rolesPicker_1 = require("./biz/contact/rolesPicker");
var setRule_1 = require("./biz/contact/setRule");
var teamScaleSelect_1 = require("./biz/contact/teamScaleSelect");
var useTagPicker_1 = require("./biz/contact/useTagPicker");
var chooseSpaceDir_1 = require("./biz/cspace/chooseSpaceDir");
var copy_1 = require("./biz/cspace/copy");
var delete_1 = require("./biz/cspace/delete");
var getPlayUrl_1 = require("./biz/cspace/getPlayUrl");
var preview_1 = require("./biz/cspace/preview");
var saveFile_1 = require("./biz/cspace/saveFile");
var choose_2 = require("./biz/customContact/choose");
var multipleChoose_1 = require("./biz/customContact/multipleChoose");
var getAvatar_1 = require("./biz/data/getAvatar");
var create_1 = require("./biz/ding/create");
var detail_1 = require("./biz/ding/detail");
var post_1 = require("./biz/ding/post");
var update_1 = require("./biz/ding/update");
var finishMiniCourseByRecordId_1 = require("./biz/edu/finishMiniCourseByRecordId");
var getMiniCourseDraftList_1 = require("./biz/edu/getMiniCourseDraftList");
var joinClassroom_1 = require("./biz/edu/joinClassroom");
var makeMiniCourse_1 = require("./biz/edu/makeMiniCourse");
var newMsgNotificationStatus_1 = require("./biz/edu/newMsgNotificationStatus");
var startAuth_1 = require("./biz/edu/startAuth");
var tokenFaceImg_1 = require("./biz/edu/tokenFaceImg");
var notifyWeex_1 = require("./biz/event/notifyWeex");
var experienceFunction_1 = require("./biz/faceBox/experienceFunction");
var getRecognition_1 = require("./biz/faceBox/getRecognition");
var removeFace_1 = require("./biz/faceBox/removeFace");
var sendMessageToContact_2 = require("./biz/faceBox/sendMessageToContact");
var setRecognition_1 = require("./biz/faceBox/setRecognition");
var showRemind_1 = require("./biz/faceBox/showRemind");
var startCameraRecord_1 = require("./biz/faceBox/startCameraRecord");
var startCameraRecordFromPartner_1 = require("./biz/faceBox/startCameraRecordFromPartner");
var startPictureRecord_1 = require("./biz/faceBox/startPictureRecord");
var fetchData_1 = require("./biz/intent/fetchData");
var bind_1 = require("./biz/iot/bind");
var bindMeetingRoom_1 = require("./biz/iot/bindMeetingRoom");
var getDeviceProperties_1 = require("./biz/iot/getDeviceProperties");
var invokeThingService_1 = require("./biz/iot/invokeThingService");
var queryMeetingRoomList_1 = require("./biz/iot/queryMeetingRoomList");
var setDeviceProperties_1 = require("./biz/iot/setDeviceProperties");
var unbind_1 = require("./biz/iot/unbind");
var approvalPdf_1 = require("./biz/kingGrid/approvalPdf");
var chooseLiveGroup_1 = require("./biz/live/chooseLiveGroup");
var destroyPlayer_1 = require("./biz/live/destroyPlayer");
var getAllLiveList_1 = require("./biz/live/getAllLiveList");
var getDynamicMsgCount_1 = require("./biz/live/getDynamicMsgCount");
var getLiveFuncMsgs_1 = require("./biz/live/getLiveFuncMsgs");
var getLiveInfos_1 = require("./biz/live/getLiveInfos");
var getLiveStatistics_1 = require("./biz/live/getLiveStatistics");
var getPlaybackList_1 = require("./biz/live/getPlaybackList");
var getPlayerPosition_1 = require("./biz/live/getPlayerPosition");
var getStickyStatus_1 = require("./biz/live/getStickyStatus");
var hidePlayer_1 = require("./biz/live/hidePlayer");
var initPlayer_1 = require("./biz/live/initPlayer");
var listLiveRecords_1 = require("./biz/live/listLiveRecords");
var listLiveViewers_1 = require("./biz/live/listLiveViewers");
var nav2GroupAnchorList_1 = require("./biz/live/nav2GroupAnchorList");
var nav2PlayVideo_1 = require("./biz/live/nav2PlayVideo");
var playerPause_1 = require("./biz/live/playerPause");
var playerPlay_1 = require("./biz/live/playerPlay");
var playerSeekTo_1 = require("./biz/live/playerSeekTo");
var setStickyStatus_1 = require("./biz/live/setStickyStatus");
var shareToGroup_1 = require("./biz/live/shareToGroup");
var showPlayer_1 = require("./biz/live/showPlayer");
var startClassRoom_1 = require("./biz/live/startClassRoom");
var startDummyLive_1 = require("./biz/live/startDummyLive");
var startUnifiedLive_1 = require("./biz/live/startUnifiedLive");
var stopDummyLive_1 = require("./biz/live/stopDummyLive");
var stopDummyLiveAll_1 = require("./biz/live/stopDummyLiveAll");
var updateDrawingCache_1 = require("./biz/live/updateDrawingCache");
var updateSimulGroup_1 = require("./biz/live/updateSimulGroup");
var locate_1 = require("./biz/map/locate");
var search_1 = require("./biz/map/search");
var searchRoute_1 = require("./biz/map/searchRoute");
var view_1 = require("./biz/map/view");
var compressVideo_1 = require("./biz/media/compressVideo");
var openApp_1 = require("./biz/microApp/openApp");
var visualList_1 = require("./biz/microApp/visualList");
var back_1 = require("./biz/navigation/back");
var close_1 = require("./biz/navigation/close");
var createEditor_1 = require("./biz/navigation/createEditor");
var finishEditor_1 = require("./biz/navigation/finishEditor");
var gestures_1 = require("./biz/navigation/gestures");
var goBack_1 = require("./biz/navigation/goBack");
var hideBar_1 = require("./biz/navigation/hideBar");
var navigateToMiniProgram_1 = require("./biz/navigation/navigateToMiniProgram");
var popGesture_1 = require("./biz/navigation/popGesture");
var quit_1 = require("./biz/navigation/quit");
var replace_1 = require("./biz/navigation/replace");
var setActions_1 = require("./biz/navigation/setActions");
var setIcon_1 = require("./biz/navigation/setIcon");
var setLeft_1 = require("./biz/navigation/setLeft");
var setMenu_1 = require("./biz/navigation/setMenu");
var setPullGesture_1 = require("./biz/navigation/setPullGesture");
var setRight_1 = require("./biz/navigation/setRight");
var setSubtitle_1 = require("./biz/navigation/setSubtitle");
var setTitle_1 = require("./biz/navigation/setTitle");
var setTitleIcon_1 = require("./biz/navigation/setTitleIcon");
var showPopdownList_1 = require("./biz/navigation/showPopdownList");
var send_1 = require("./biz/notify/send");
var authorityVerify_1 = require("./biz/oa/authorityVerify");
var setWorkTab_1 = require("./biz/oa/setWorkTab");
var authorize_1 = require("./biz/oauth/authorize");
var componentPunchFromPartner_1 = require("./biz/pbp/componentPunchFromPartner");
var startMatchRuleFromPartner_1 = require("./biz/pbp/startMatchRuleFromPartner");
var stopMatchRuleFromPartner_1 = require("./biz/pbp/stopMatchRuleFromPartner");
var video_1 = require("./biz/preload/video");
var getRealtimeTracingStatus_1 = require("./biz/realm/getRealtimeTracingStatus");
var getUserExclusiveInfo_1 = require("./biz/realm/getUserExclusiveInfo");
var startRealtimeTracing_1 = require("./biz/realm/startRealtimeTracing");
var stopRealtimeTracing_1 = require("./biz/realm/stopRealtimeTracing");
var subscribe_1 = require("./biz/realm/subscribe");
var unsubscribe_1 = require("./biz/realm/unsubscribe");
var sendEnterpriseRedEnvelop_1 = require("./biz/redenvelop/sendEnterpriseRedEnvelop");
var sendNormalRedEnvelop_1 = require("./biz/redenvelop/sendNormalRedEnvelop");
var getInfo_1 = require("./biz/resource/getInfo");
var reportDebugMessage_1 = require("./biz/resource/reportDebugMessage");
var reportPerf_1 = require("./biz/resource/reportPerf");
var create_2 = require("./biz/schedule/create");
var addShortCut_1 = require("./biz/shortCut/addShortCut");
var checkHealthPermission_1 = require("./biz/sports/checkHealthPermission");
var checkSensorPermission_1 = require("./biz/sports/checkSensorPermission");
var disableStepCountSync_1 = require("./biz/sports/disableStepCountSync");
var enableStepCountSync_1 = require("./biz/sports/enableStepCountSync");
var fetchAliuid_1 = require("./biz/sports/fetchAliuid");
var fetchStephubSteps_1 = require("./biz/sports/fetchStephubSteps");
var fetchTaobaoH5TrustLoginUrlForAlisports_1 = require("./biz/sports/fetchTaobaoH5TrustLoginUrlForAlisports");
var fetchTaobaoId_1 = require("./biz/sports/fetchTaobaoId");
var getTodaysStepCount_1 = require("./biz/sports/getTodaysStepCount");
var requestHealthPermission_1 = require("./biz/sports/requestHealthPermission");
var requestSensorPermission_1 = require("./biz/sports/requestSensorPermission");
var closeUnpayOrder_1 = require("./biz/store/closeUnpayOrder");
var createOrder_1 = require("./biz/store/createOrder");
var getPayUrl_1 = require("./biz/store/getPayUrl");
var inquiry_1 = require("./biz/store/inquiry");
var isTab_1 = require("./biz/tabwindow/isTab");
var batchTags_1 = require("./biz/tag/batchTags");
var mark_1 = require("./biz/tag/mark");
var call_1 = require("./biz/telephone/call");
var callOrgExternalContacts_1 = require("./biz/telephone/callOrgExternalContacts");
var checkBizCall_1 = require("./biz/telephone/checkBizCall");
var quickCall_1 = require("./biz/telephone/quickCall");
var quickCallList_1 = require("./biz/telephone/quickCallList");
var showCallMenu_1 = require("./biz/telephone/showCallMenu");
var directLogin_1 = require("./biz/uic/directLogin");
var doLogin_1 = require("./biz/uic/doLogin");
var checkPassword_1 = require("./biz/user/checkPassword");
var get_1 = require("./biz/user/get");
var loginBySms_1 = require("./biz/user/loginBySms");
var loginTaobaoWithDingtalkUserToken_1 = require("./biz/user/loginTaobaoWithDingtalkUserToken");
var secretID_1 = require("./biz/user/secretID");
var acitveConversation_1 = require("./biz/util/acitveConversation");
var addCalendarEvent_1 = require("./biz/util/addCalendarEvent");
var addDesktopShortcuts_1 = require("./biz/util/addDesktopShortcuts");
var callComponent_1 = require("./biz/util/callComponent");
var chooseImage_1 = require("./biz/util/chooseImage");
var chosen_1 = require("./biz/util/chosen");
var clearWebStoreCache_1 = require("./biz/util/clearWebStoreCache");
var closePreviewImage_1 = require("./biz/util/closePreviewImage");
var compressImage_1 = require("./biz/util/compressImage");
var createVoipConference_1 = require("./biz/util/createVoipConference");
var datepicker_1 = require("./biz/util/datepicker");
var datetimepicker_1 = require("./biz/util/datetimepicker");
var decrypt_1 = require("./biz/util/decrypt");
var downloadFile_1 = require("./biz/util/downloadFile");
var editPicture_1 = require("./biz/util/editPicture");
var editSpaceFileOnline_1 = require("./biz/util/editSpaceFileOnline");
var encrypt_1 = require("./biz/util/encrypt");
var fetchFileData_1 = require("./biz/util/fetchFileData");
var fetchImageData_1 = require("./biz/util/fetchImageData");
var forwardDpFile_1 = require("./biz/util/forwardDpFile");
var getLocaleAndNationByCorpId_1 = require("./biz/util/getLocaleAndNationByCorpId");
var getPerfInfo_1 = require("./biz/util/getPerfInfo");
var invokeWorkbench_1 = require("./biz/util/invokeWorkbench");
var isEnableGPUAcceleration_1 = require("./biz/util/isEnableGPUAcceleration");
var isLocalFileExist_1 = require("./biz/util/isLocalFileExist");
var mailTo_1 = require("./biz/util/mailTo");
var multiSelect_1 = require("./biz/util/multiSelect");
var open_2 = require("./biz/util/open");
var openFloatWindow_1 = require("./biz/util/openFloatWindow");
var openLink_2 = require("./biz/util/openLink");
var openLocalFile_1 = require("./biz/util/openLocalFile");
var openModal_1 = require("./biz/util/openModal");
var openPrintWnd_1 = require("./biz/util/openPrintWnd");
var openShareDpFileWnd_1 = require("./biz/util/openShareDpFileWnd");
var openSlidePanel_1 = require("./biz/util/openSlidePanel");
var openWindowWithUrl_1 = require("./biz/util/openWindowWithUrl");
var perfBizReady_1 = require("./biz/util/perfBizReady");
var presentWindow_1 = require("./biz/util/presentWindow");
var previewFile_1 = require("./biz/util/previewFile");
var previewImage_1 = require("./biz/util/previewImage");
var previewVideo_1 = require("./biz/util/previewVideo");
var qrcode_1 = require("./biz/util/qrcode");
var queryConferenceList_1 = require("./biz/util/queryConferenceList");
var quitComponent_1 = require("./biz/util/quitComponent");
var recordVideoToUpload_1 = require("./biz/util/recordVideoToUpload");
var requestWorkbench_1 = require("./biz/util/requestWorkbench");
var saveImage_1 = require("./biz/util/saveImage");
var scan_1 = require("./biz/util/scan");
var scanCard_1 = require("./biz/util/scanCard");
var selectEmoji_1 = require("./biz/util/selectEmoji");
var setGPUAcceleration_1 = require("./biz/util/setGPUAcceleration");
var setScreenBrightnessAndKeepOn_1 = require("./biz/util/setScreenBrightnessAndKeepOn");
var setScreenKeepOn_1 = require("./biz/util/setScreenKeepOn");
var share_1 = require("./biz/util/share");
var shareImage_1 = require("./biz/util/shareImage");
var shareLongImage_1 = require("./biz/util/shareLongImage");
var shareMiniApp_1 = require("./biz/util/shareMiniApp");
var startDocSign_1 = require("./biz/util/startDocSign");
var stickPage_1 = require("./biz/util/stickPage");
var systemShare_1 = require("./biz/util/systemShare");
var timepicker_1 = require("./biz/util/timepicker");
var timestamp_1 = require("./biz/util/timestamp");
var updateTrackPageName_1 = require("./biz/util/updateTrackPageName");
var updateTrackProperties_1 = require("./biz/util/updateTrackProperties");
var uploadAttachment_1 = require("./biz/util/uploadAttachment");
var uploadFile_1 = require("./biz/util/uploadFile");
var uploadImage_1 = require("./biz/util/uploadImage");
var uploadImageFromCamera_1 = require("./biz/util/uploadImageFromCamera");
var uploadMedia_1 = require("./biz/util/uploadMedia");
var ut_1 = require("./biz/util/ut");
var vip_1 = require("./biz/util/vip");
var warn_1 = require("./biz/util/warn");
var watermarkCamera_1 = require("./biz/util/watermarkCamera");
var biometric_1 = require("./biz/verify/biometric");
var openBindIDCard_1 = require("./biz/verify/openBindIDCard");
var startAuth_2 = require("./biz/verify/startAuth");
var takePhoto_1 = require("./biz/verify/takePhoto");
var getWatermarkInfo_1 = require("./biz/watermarkCamera/getWatermarkInfo");
var setWatermarkInfo_1 = require("./biz/watermarkCamera/setWatermarkInfo");
var openPage_1 = require("./biz/wiki/openPage");
var saveToWiki_1 = require("./biz/wiki/saveToWiki");
var download_1 = require("./biz/zoloz/download");
var zimIdentity_1 = require("./biz/zoloz/zimIdentity");
var profile_1 = require("./channel/open/profile");
var requestAuthCode_2 = require("./channel/permission/requestAuthCode");
var clearShake_1 = require("./device/accelerometer/clearShake");
var watchShake_1 = require("./device/accelerometer/watchShake");
var download_2 = require("./device/audio/download");
var getDuration_1 = require("./device/audio/getDuration");
var getVolume_1 = require("./device/audio/getVolume");
var isMute_1 = require("./device/audio/isMute");
var onPlayEnd_1 = require("./device/audio/onPlayEnd");
var onRecordEnd_1 = require("./device/audio/onRecordEnd");
var pause_1 = require("./device/audio/pause");
var play_1 = require("./device/audio/play");
var resume_1 = require("./device/audio/resume");
var seek_1 = require("./device/audio/seek");
var setMute_1 = require("./device/audio/setMute");
var setVolume_1 = require("./device/audio/setVolume");
var startRecord_1 = require("./device/audio/startRecord");
var stop_1 = require("./device/audio/stop");
var stopRecord_1 = require("./device/audio/stopRecord");
var translateVoice_1 = require("./device/audio/translateVoice");
var upload_1 = require("./device/audio/upload");
var connectBleDevice_1 = require("./device/base/connectBleDevice");
var disConnectBleDevice_1 = require("./device/base/disConnectBleDevice");
var enableBluetooth_1 = require("./device/base/enableBluetooth");
var enableBluetoothV2_1 = require("./device/base/enableBluetoothV2");
var enableLocation_1 = require("./device/base/enableLocation");
var enableWifi_1 = require("./device/base/enableWifi");
var getInterface_1 = require("./device/base/getInterface");
var getPhoneInfo_1 = require("./device/base/getPhoneInfo");
var getScanWifiList_1 = require("./device/base/getScanWifiList");
var getScanWifiListAsync_1 = require("./device/base/getScanWifiListAsync");
var getSettings_1 = require("./device/base/getSettings");
var getUUID_1 = require("./device/base/getUUID");
var getWifiStatus_1 = require("./device/base/getWifiStatus");
var openSystemSetting_1 = require("./device/base/openSystemSetting");
var scanBleDevice_1 = require("./device/base/scanBleDevice");
var sendDataToDevice_1 = require("./device/base/sendDataToDevice");
var startBindDevice_1 = require("./device/base/startBindDevice");
var stopScanBleDevice_1 = require("./device/base/stopScanBleDevice");
var unBindDevice_1 = require("./device/base/unBindDevice");
var getNetworkType_1 = require("./device/connection/getNetworkType");
var checkPermission_1 = require("./device/geolocation/checkPermission");
var checkService_1 = require("./device/geolocation/checkService");
var get_2 = require("./device/geolocation/get");
var isEnabled_1 = require("./device/geolocation/isEnabled");
var isEnabledHighAccuracy_1 = require("./device/geolocation/isEnabledHighAccuracy");
var openGps_1 = require("./device/geolocation/openGps");
var start_1 = require("./device/geolocation/start");
var status_1 = require("./device/geolocation/status");
var stop_2 = require("./device/geolocation/stop");
var changeSlatePosition_1 = require("./device/handwriting/changeSlatePosition");
var showHandPanel_1 = require("./device/handwriting/showHandPanel");
var dayStepCount_1 = require("./device/health/dayStepCount");
var stepCount_1 = require("./device/health/stepCount");
var checkInstalledApps_1 = require("./device/launcher/checkInstalledApps");
var launchApp_1 = require("./device/launcher/launchApp");
var nfcRead_1 = require("./device/nfc/nfcRead");
var nfcStop_1 = require("./device/nfc/nfcStop");
var nfcWrite_1 = require("./device/nfc/nfcWrite");
var actionSheet_1 = require("./device/notification/actionSheet");
var alert_1 = require("./device/notification/alert");
var confirm_1 = require("./device/notification/confirm");
var extendModal_1 = require("./device/notification/extendModal");
var getNotificationStatus_1 = require("./device/notification/getNotificationStatus");
var hidePreloader_1 = require("./device/notification/hidePreloader");
var modal_1 = require("./device/notification/modal");
var prompt_1 = require("./device/notification/prompt");
var showPreloader_1 = require("./device/notification/showPreloader");
var toast_1 = require("./device/notification/toast");
var vibrate_1 = require("./device/notification/vibrate");
var insetAdjust_1 = require("./device/screen/insetAdjust");
var resetView_1 = require("./device/screen/resetView");
var rotateView_1 = require("./device/screen/rotateView");
var setAutoOrientation_1 = require("./device/screen/setAutoOrientation");
var startMonitor_1 = require("./device/screenshot/startMonitor");
var stopMonitor_1 = require("./device/screenshot/stopMonitor");
var batchDisposeCard_1 = require("./interactive/bizCard/batchDisposeCard");
var getCardInfo_1 = require("./interactive/bizCard/getCardInfo");
var sendAction_1 = require("./interactive/bizCard/sendAction");
var beaconPickResult_1 = require("./internal/ATMBle/beaconPickResult");
var checkIn_1 = require("./internal/ATMBle/checkIn");
var detectFace_2 = require("./internal/ATMBle/detectFace");
var detectFaceFullScreen_2 = require("./internal/ATMBle/detectFaceFullScreen");
var faceManagerResult_1 = require("./internal/ATMBle/faceManagerResult");
var getBleLocalDevList_1 = require("./internal/ATMBle/getBleLocalDevList");
var getPunchEventClockCheckResult_1 = require("./internal/ATMBle/getPunchEventClockCheckResult");
var punchModePickResult_1 = require("./internal/ATMBle/punchModePickResult");
var requestPunchEvents_1 = require("./internal/ATMBle/requestPunchEvents");
var scanBleDevice_2 = require("./internal/ATMBle/scanBleDevice");
var showBlePopupWindowMock_1 = require("./internal/ATMBle/showBlePopupWindowMock");
var startMonitor_2 = require("./internal/ATMBle/startMonitor");
var stopMonitor_2 = require("./internal/ATMBle/stopMonitor");
var updateBluetoothConfig_1 = require("./internal/ATMBle/updateBluetoothConfig");
var cancelTask_1 = require("./internal/ai/cancelTask");
var createTask_1 = require("./internal/ai/createTask");
var frameUpload_1 = require("./internal/ai/frameUpload");
var keyboardAccessory_1 = require("./internal/alidoc/keyboardAccessory");
var keyboardCompression_1 = require("./internal/alidoc/keyboardCompression");
var addWdsDevice_1 = require("./internal/alpha/addWdsDevice");
var connectSecurityWiFi_1 = require("./internal/alpha/connectSecurityWiFi");
var copyPwd_1 = require("./internal/alpha/copyPwd");
var discover_1 = require("./internal/alpha/discover");
var getDevicePwd_1 = require("./internal/alpha/getDevicePwd");
var assistant_1 = require("./internal/attend/assistant");
var checkInRecords_1 = require("./internal/attend/checkInRecords");
var getAccurateLocatingInfo_1 = require("./internal/attend/getAccurateLocatingInfo");
var getOfflineResource_1 = require("./internal/attend/getOfflineResource");
var getProloadResource_1 = require("./internal/attend/getProloadResource");
var isBetaEnabled_1 = require("./internal/attend/isBetaEnabled");
var setOfflineResource_1 = require("./internal/attend/setOfflineResource");
var updateBluetoothCheckList_1 = require("./internal/attend/updateBluetoothCheckList");
var backToLoginPage_1 = require("./internal/auth/backToLoginPage");
var getActionTokenByPwd_1 = require("./internal/auth/getActionTokenByPwd");
var getCurrentTmpCode_1 = require("./internal/auth/getCurrentTmpCode");
var identifyByAlipay_1 = require("./internal/auth/identifyByAlipay");
var identifyByAssistantMail_1 = require("./internal/auth/identifyByAssistantMail");
var identifyByContactsVerify_1 = require("./internal/auth/identifyByContactsVerify");
var identifyByFace_1 = require("./internal/auth/identifyByFace");
var identifyByOIDC_1 = require("./internal/auth/identifyByOIDC");
var oidcPwdSetted_1 = require("./internal/auth/oidcPwdSetted");
var postLoginTempCode_1 = require("./internal/auth/postLoginTempCode");
var reLogin_1 = require("./internal/auth/reLogin");
var setCustomConfig_1 = require("./internal/backgroundAudio/setCustomConfig");
var getTabBadgeByKey_1 = require("./internal/badges/getTabBadgeByKey");
var bind_2 = require("./internal/beacon/bind");
var detectBeacons_1 = require("./internal/beacon/detectBeacons");
var detectStart_1 = require("./internal/beacon/detectStart");
var detectStop_1 = require("./internal/beacon/detectStop");
var makecall_1 = require("./internal/biz/makecall");
var openApp_2 = require("./internal/biz/openApp");
var uploadVideo_1 = require("./internal/biz/uploadVideo");
var webNotify_1 = require("./internal/biz/webNotify");
var batchAddExtContacts_1 = require("./internal/bizcard/batchAddExtContacts");
var companyPicker_1 = require("./internal/bizcard/companyPicker");
var friendCategories_1 = require("./internal/bizcard/friendCategories");
var friendCount_1 = require("./internal/bizcard/friendCount");
var friendPicker_1 = require("./internal/bizcard/friendPicker");
var friendsByCategory_1 = require("./internal/bizcard/friendsByCategory");
var friendsByName_1 = require("./internal/bizcard/friendsByName");
var friendsByRoom_1 = require("./internal/bizcard/friendsByRoom");
var mobileContactCount_1 = require("./internal/bizcard/mobileContactCount");
var roomsByTime_1 = require("./internal/bizcard/roomsByTime");
var search_2 = require("./internal/bizcard/search");
var timeZone_1 = require("./internal/bizcard/timeZone");
var updateAvatar_1 = require("./internal/bizcard/updateAvatar");
var allOrgs_1 = require("./internal/blebusiness/allOrgs");
var buildDeviceNick_1 = require("./internal/blebusiness/buildDeviceNick");
var currentMainOrgId_1 = require("./internal/blebusiness/currentMainOrgId");
var getDeviceInfo_1 = require("./internal/blebusiness/getDeviceInfo");
var getEndorseModelWithSecret_1 = require("./internal/blebusiness/getEndorseModelWithSecret");
var getHandshakeModelFromEndorseModel_1 = require("./internal/blebusiness/getHandshakeModelFromEndorseModel");
var popOrgCreatePage_1 = require("./internal/blebusiness/popOrgCreatePage");
var popOrgCreatePageForProjector_1 = require("./internal/blebusiness/popOrgCreatePageForProjector");
var queryDingWifiDevicesWithOrg_1 = require("./internal/blebusiness/queryDingWifiDevicesWithOrg");
var reportNetIsolate_1 = require("./internal/blebusiness/reportNetIsolate");
var showNotifyDingCard_1 = require("./internal/blebusiness/showNotifyDingCard");
var bluetoothState_1 = require("./internal/bleengine/bluetoothState");
var checkEnv_1 = require("./internal/bleengine/checkEnv");
var connectDevice_1 = require("./internal/bleengine/connectDevice");
var request_1 = require("./internal/bleengine/request");
var scanStart_1 = require("./internal/bleengine/scanStart");
var scanStop_1 = require("./internal/bleengine/scanStop");
var restore_1 = require("./internal/cache/restore");
var save_1 = require("./internal/cache/save");
var biometric_2 = require("./internal/certify/biometric");
var step_1 = require("./internal/certify/step");
var submit_1 = require("./internal/certify/submit");
var takePhoto_2 = require("./internal/certify/takePhoto");
var infoExist_1 = require("./internal/channel/infoExist");
var openPage_2 = require("./internal/channel/openPage");
var publish_1 = require("./internal/channel/publish");
var subscribe_2 = require("./internal/channel/subscribe");
var unsubscribe_2 = require("./internal/channel/unsubscribe");
var applyJoinGroup_1 = require("./internal/chat/applyJoinGroup");
var batchDisplayNames_1 = require("./internal/chat/batchDisplayNames");
var batchUserProfiles_1 = require("./internal/chat/batchUserProfiles");
var clearDraft_1 = require("./internal/chat/clearDraft");
var closeTopOneBoxCard_1 = require("./internal/chat/closeTopOneBoxCard");
var createApprovalGroup_1 = require("./internal/chat/createApprovalGroup");
var downloadMedias_1 = require("./internal/chat/downloadMedias");
var emotionTranslater_1 = require("./internal/chat/emotionTranslater");
var encryptOpenId_1 = require("./internal/chat/encryptOpenId");
var focusMessage_1 = require("./internal/chat/focusMessage");
var generateUrl_1 = require("./internal/chat/generateUrl");
var getConvInfo_1 = require("./internal/chat/getConvInfo");
var getConvUnreadMsgCount_1 = require("./internal/chat/getConvUnreadMsgCount");
var getConversations_1 = require("./internal/chat/getConversations");
var getCurrentOpenId_1 = require("./internal/chat/getCurrentOpenId");
var getDisplayName_1 = require("./internal/chat/getDisplayName");
var getDraft_1 = require("./internal/chat/getDraft");
var getDraftAndClear_1 = require("./internal/chat/getDraftAndClear");
var getEncryptImageThumb_1 = require("./internal/chat/getEncryptImageThumb");
var getMessageList_1 = require("./internal/chat/getMessageList");
var getPickedImageThumbData_1 = require("./internal/chat/getPickedImageThumbData");
var getRichTextPayload_1 = require("./internal/chat/getRichTextPayload");
var getTopic_1 = require("./internal/chat/getTopic");
var getTopicReplys_1 = require("./internal/chat/getTopicReplys");
var getTopicStickers_1 = require("./internal/chat/getTopicStickers");
var getUserProfile_1 = require("./internal/chat/getUserProfile");
var joinGroupByBizType_1 = require("./internal/chat/joinGroupByBizType");
var markSettingsReddot_1 = require("./internal/chat/markSettingsReddot");
var openConversation_1 = require("./internal/chat/openConversation");
var pickAtList_1 = require("./internal/chat/pickAtList");
var pickGroupConversation_1 = require("./internal/chat/pickGroupConversation");
var pickImage_1 = require("./internal/chat/pickImage");
var previewMessage_1 = require("./internal/chat/previewMessage");
var recallMessage_1 = require("./internal/chat/recallMessage");
var registTopicMessageListener_1 = require("./internal/chat/registTopicMessageListener");
var selectAndSendText_1 = require("./internal/chat/selectAndSendText");
var sendBizMessage_1 = require("./internal/chat/sendBizMessage");
var sendCustomMessage_1 = require("./internal/chat/sendCustomMessage");
var sendMultiMsges_1 = require("./internal/chat/sendMultiMsges");
var sendReplyMessage_1 = require("./internal/chat/sendReplyMessage");
var sendRichTextMessage_1 = require("./internal/chat/sendRichTextMessage");
var setHasRichTextDraft_1 = require("./internal/chat/setHasRichTextDraft");
var showMessageMenu_1 = require("./internal/chat/showMessageMenu");
var showTopicEmotionBar_1 = require("./internal/chat/showTopicEmotionBar");
var stickerReply_1 = require("./internal/chat/stickerReply");
var toConversation_2 = require("./internal/chat/toConversation");
var transmitMsg_1 = require("./internal/chat/transmitMsg");
var unregistTopicMessageListener_1 = require("./internal/chat/unregistTopicMessageListener");
var uploadPickedImage_1 = require("./internal/chat/uploadPickedImage");
var getStorage_1 = require("./internal/circle/getStorage");
var removeStorage_1 = require("./internal/circle/removeStorage");
var setStorage_1 = require("./internal/circle/setStorage");
var getData_1 = require("./internal/clipboardData/getData");
var sendMessage_1 = require("./internal/coap/sendMessage");
var chooseEnterpriseUser_1 = require("./internal/contact/chooseEnterpriseUser");
var chooseMobileContact_1 = require("./internal/contact/chooseMobileContact");
var chooseOrgAddress_1 = require("./internal/contact/chooseOrgAddress");
var commonPicker_1 = require("./internal/contact/commonPicker");
var internalComplexPicker_1 = require("./internal/contact/internalComplexPicker");
var internalComplexPickerWithUid_1 = require("./internal/contact/internalComplexPickerWithUid");
var openSelectUserWnd_1 = require("./internal/contact/openSelectUserWnd");
var queryPickedResult_1 = require("./internal/contact/queryPickedResult");
var removePickedResult_1 = require("./internal/contact/removePickedResult");
var getProperty_1 = require("./internal/conversation/getProperty");
var mute_1 = require("./internal/conversation/mute");
var switchEffectiveMode_1 = require("./internal/conversation/switchEffectiveMode");
var top_1 = require("./internal/conversation/top");
var listCorpInfo_1 = require("./internal/corps/listCorpInfo");
var industryInfo_1 = require("./internal/createOrg/industryInfo");
var lastCreateOrgInfo_1 = require("./internal/createOrg/lastCreateOrgInfo");
var successJump_1 = require("./internal/createOrg/successJump");
var cancelDecryptAndUpload_1 = require("./internal/cspace/cancelDecryptAndUpload");
var cancelFileUpload_1 = require("./internal/cspace/cancelFileUpload");
var cidToSpaceId_1 = require("./internal/cspace/cidToSpaceId");
var decryptAndUpload_1 = require("./internal/cspace/decryptAndUpload");
var downloadFile_2 = require("./internal/cspace/downloadFile");
var edit_1 = require("./internal/cspace/edit");
var fileUpload_1 = require("./internal/cspace/fileUpload");
var getMediaInfo_1 = require("./internal/cspace/getMediaInfo");
var getToken_1 = require("./internal/cspace/getToken");
var openCloudPrintPluginWnd_1 = require("./internal/cspace/openCloudPrintPluginWnd");
var openCloudPrintWnd_1 = require("./internal/cspace/openCloudPrintWnd");
var openEditInviteWnd_1 = require("./internal/cspace/openEditInviteWnd");
var openFolder_1 = require("./internal/cspace/openFolder");
var requestDentryUrl_1 = require("./internal/cspace/requestDentryUrl");
var sendMsgToRequestPermission_1 = require("./internal/cspace/sendMsgToRequestPermission");
var uploadFile_2 = require("./internal/cspace/uploadFile");
var hideQuickEntrance_1 = require("./internal/customerService/hideQuickEntrance");
var isRecording_1 = require("./internal/customerService/isRecording");
var showQuickEntrance_1 = require("./internal/customerService/showQuickEntrance");
var startRecord_2 = require("./internal/customerService/startRecord");
var stopRecord_2 = require("./internal/customerService/stopRecord");
var tryUploadRecords_1 = require("./internal/customerService/tryUploadRecords");
var getFastCheckInInfo_1 = require("./internal/diagnostic/getFastCheckInInfo");
var getLocalErrorMsg_1 = require("./internal/diagnostic/getLocalErrorMsg");
var bindWorkMobile_1 = require("./internal/dingCard/bindWorkMobile");
var unbindWorkMobile_1 = require("./internal/dingCard/unbindWorkMobile");
var auth_2 = require("./internal/dingbadge/auth");
var codeInvalidReport_1 = require("./internal/dingbadge/codeInvalidReport");
var isAuth_1 = require("./internal/dingbadge/isAuth");
var refreshCode_1 = require("./internal/dingbadge/refreshCode");
var refreshData_1 = require("./internal/dingbadge/refreshData");
var startGenCode_1 = require("./internal/dingbadge/startGenCode");
var stopGenCode_1 = require("./internal/dingbadge/stopGenCode");
var unAuth_1 = require("./internal/dingbadge/unAuth");
var visit_1 = require("./internal/dingbadge/visit");
var bindAlipay_2 = require("./internal/dingpay/bindAlipay");
var unbindAlipay_1 = require("./internal/dingpay/unbindAlipay");
var getParams_1 = require("./internal/efficiencyKit/getParams");
var openCustomGroupList_1 = require("./internal/efficiencyKit/openCustomGroupList");
var setParams_1 = require("./internal/efficiencyKit/setParams");
var info_1 = require("./internal/enterpriseEncryption/info");
var sendMessageToMaster_1 = require("./internal/enterpriseEncryption/sendMessageToMaster");
var turnOnWithAnimation_1 = require("./internal/enterpriseEncryption/turnOnWithAnimation");
var prepareScan_1 = require("./internal/faceScan/prepareScan");
var scan_2 = require("./internal/faceScan/scan");
var detectFace_3 = require("./internal/facialRecognition/detectFace");
var init_1 = require("./internal/facialRecognition/init");
var checkEnvironment_1 = require("./internal/focus/checkEnvironment");
var closeFocusFloatingView_1 = require("./internal/focus/closeFocusFloatingView");
var getCurrentProjectionData_1 = require("./internal/focus/getCurrentProjectionData");
var openFocusFloatingView_1 = require("./internal/focus/openFocusFloatingView");
var popProjectionSelector_1 = require("./internal/focus/popProjectionSelector");
var register_1 = require("./internal/focus/register");
var startProjection_1 = require("./internal/focus/startProjection");
var stopProjection_1 = require("./internal/focus/stopProjection");
var unRegister_1 = require("./internal/focus/unRegister");
var getGoogleServiceInfo_1 = require("./internal/googlePlayService/getGoogleServiceInfo");
var auth_3 = require("./internal/groupapp/auth");
var sendMsgAsUser_1 = require("./internal/groupapp/sendMsgAsUser");
var detail_2 = require("./internal/groupbill/detail");
var query_1 = require("./internal/groupbill/query");
var send_2 = require("./internal/groupbill/send");
var closeGuideBanner_1 = require("./internal/guide/closeGuideBanner");
var checkHealthPermission_2 = require("./internal/health/checkHealthPermission");
var checkSensorPermission_2 = require("./internal/health/checkSensorPermission");
var disableStepCountSync_2 = require("./internal/health/disableStepCountSync");
var enableStepCountSync_2 = require("./internal/health/enableStepCountSync");
var getTodaysStep_1 = require("./internal/health/getTodaysStep");
var getTodaysStepCount_2 = require("./internal/health/getTodaysStepCount");
var isShowPermissionTip_1 = require("./internal/health/isShowPermissionTip");
var openAISport_1 = require("./internal/health/openAISport");
var pedometerStatus_1 = require("./internal/health/pedometerStatus");
var queryHealthPermission_1 = require("./internal/health/queryHealthPermission");
var requestHealthPermission_2 = require("./internal/health/requestHealthPermission");
var requestSensorPermission_2 = require("./internal/health/requestSensorPermission");
var cancel_1 = require("./internal/host/cancel");
var lwp_1 = require("./internal/host/lwp");
var query_2 = require("./internal/host/query");
var delete_2 = require("./internal/hpm/delete");
var get_3 = require("./internal/hpm/get");
var queryInfo_1 = require("./internal/hpm/queryInfo");
var update_2 = require("./internal/hpm/update");
var getMsgFilterConfigDetail_1 = require("./internal/imshortcut/getMsgFilterConfigDetail");
var getMsgFilterTabsConfig_1 = require("./internal/imshortcut/getMsgFilterTabsConfig");
var initEventChannel_1 = require("./internal/imshortcut/initEventChannel");
var listFilterMsg_1 = require("./internal/imshortcut/listFilterMsg");
var onTabSelected_1 = require("./internal/imshortcut/onTabSelected");
var updateMsgFilterStatus_1 = require("./internal/imshortcut/updateMsgFilterStatus");
var add_1 = require("./internal/inputPanel/add");
var addToolBar_1 = require("./internal/inputPanel/addToolBar");
var atPick_1 = require("./internal/inputPanel/atPick");
var changeMode_1 = require("./internal/inputPanel/changeMode");
var getCurrentInput_1 = require("./internal/inputPanel/getCurrentInput");
var refreshInputExtendView_1 = require("./internal/inputPanel/refreshInputExtendView");
var remove_1 = require("./internal/inputPanel/remove");
var removeToolbar_1 = require("./internal/inputPanel/removeToolbar");
var resignInput_1 = require("./internal/inputPanel/resignInput");
var batchDisposeCard_2 = require("./internal/interactiveCard/batchDisposeCard");
var getCardInfo_2 = require("./internal/interactiveCard/getCardInfo");
var sendAction_2 = require("./internal/interactiveCard/sendAction");
var chooseInvoice_1 = require("./internal/invoice/chooseInvoice");
var startLive_1 = require("./internal/live/startLive");
var startUnifiedLive_2 = require("./internal/live/startUnifiedLive");
var add_2 = require("./internal/log/add");
var printUnifyLog_1 = require("./internal/log/printUnifyLog");
var searchClickLog_1 = require("./internal/log/searchClickLog");
var searchQueryLog_1 = require("./internal/log/searchQueryLog");
var upload_2 = require("./internal/log/upload");
var uploadException_1 = require("./internal/log/uploadException");
var call_2 = require("./internal/lwp/call");
var setSessionIdCookie_1 = require("./internal/lwp/setSessionIdCookie");
var checkInstalled_1 = require("./internal/microapp/checkInstalled");
var queryInfo_2 = require("./internal/microapp/queryInfo");
var triggerSync_1 = require("./internal/microapp/triggerSync");
var setIcon_2 = require("./internal/navigation/setIcon");
var add_3 = require("./internal/notify/add");
var closeModal_1 = require("./internal/notify/closeModal");
var send_3 = require("./internal/notify/send");
var showModal_1 = require("./internal/notify/showModal");
var activatePersonalSpace_1 = require("./internal/oa/activatePersonalSpace");
var getNavHeaderHeight_1 = require("./internal/oa/getNavHeaderHeight");
var isPersonalSpaceEnabled_1 = require("./internal/oa/isPersonalSpaceEnabled");
var setData_2 = require("./internal/openTemporary/setData");
var fetch_1 = require("./internal/pageLink/fetch");
var request_2 = require("./internal/pageLink/request");
var response_1 = require("./internal/pageLink/response");
var requestForInAppPurchase_1 = require("./internal/payment/requestForInAppPurchase");
var hasSelfPermissions_1 = require("./internal/permission/hasSelfPermissions");
var requestPermissions_1 = require("./internal/permission/requestPermissions");
var add_4 = require("./internal/phoneContact/add");
var checkPermissionAndUpload_1 = require("./internal/phoneContact/checkPermissionAndUpload");
var getMobileContactName_1 = require("./internal/phoneContact/getMobileContactName");
var requestPermissionAndUploadWhenAuthed_1 = require("./internal/phoneContact/requestPermissionAndUploadWhenAuthed");
var getUserExclusiveInfo_2 = require("./internal/realm/getUserExclusiveInfo");
var updateExclusiveConfig_1 = require("./internal/realm/updateExclusiveConfig");
var sendRandomRedEnvelop_1 = require("./internal/redenvelop/sendRandomRedEnvelop");
var nav2RedPacket_1 = require("./internal/redpacket/nav2RedPacket");
var getOrgFeatureByKey_1 = require("./internal/request/getOrgFeatureByKey");
var getSecurityToken_1 = require("./internal/request/getSecurityToken");
var httpOverLWP_1 = require("./internal/request/httpOverLWP");
var lwp_2 = require("./internal/request/lwp");
var sendHeadRequest_1 = require("./internal/request/sendHeadRequest");
var contactswithUids_1 = require("./internal/requestmoney/contactswithUids");
var currentUid_1 = require("./internal/requestmoney/currentUid");
var dingRemind_1 = require("./internal/requestmoney/dingRemind");
var generateBizId_1 = require("./internal/requestmoney/generateBizId");
var loadConversations_1 = require("./internal/requestmoney/loadConversations");
var notifyAlipayResult_1 = require("./internal/requestmoney/notifyAlipayResult");
var showContactAndGroupPick_1 = require("./internal/requestmoney/showContactAndGroupPick");
var showGroupMemberPick_1 = require("./internal/requestmoney/showGroupMemberPick");
var updateCardStatus_1 = require("./internal/requestmoney/updateCardStatus");
var getPackageInfo_1 = require("./internal/resource/getPackageInfo");
var getResourceContent_1 = require("./internal/resource/getResourceContent");
var getAppInfo_1 = require("./internal/safe/getAppInfo");
var getDeviceInfo_2 = require("./internal/safe/getDeviceInfo");
var scanPlugin_1 = require("./internal/safe/scanPlugin");
var update_3 = require("./internal/schedule/update");
var open_3 = require("./internal/schema/open");
var openPermissionSetting_1 = require("./internal/schema/openPermissionSetting");
var openWifiSetting_1 = require("./internal/schema/openWifiSetting");
var debug_1 = require("./internal/search/debug");
var asgCheck_1 = require("./internal/security/asgCheck");
var executeSql_1 = require("./internal/sqlite/executeSql");
var open_4 = require("./internal/sqlite/open");
var initRoom_1 = require("./internal/studyroom/initRoom");
var operateMusic_1 = require("./internal/studyroom/operateMusic");
var reportMemberState_1 = require("./internal/studyroom/reportMemberState");
var addMember_1 = require("./internal/teleVideo/addMember");
var creatConf_1 = require("./internal/teleVideo/creatConf");
var dismissMeetingFloatingView_1 = require("./internal/teleVideo/dismissMeetingFloatingView");
var registPushHandler_1 = require("./internal/teleVideo/registPushHandler");
var shareInvite_1 = require("./internal/teleVideo/shareInvite");
var showMeetingFloatingView_1 = require("./internal/teleVideo/showMeetingFloatingView");
var unregistPushHandler_1 = require("./internal/teleVideo/unregistPushHandler");
var getCurrentUIEnvironment_1 = require("./internal/ui/getCurrentUIEnvironment");
var allOrganizations_1 = require("./internal/user/allOrganizations");
var bindTaobao_1 = require("./internal/user/bindTaobao");
var dingtalkIdToUserInfos_1 = require("./internal/user/dingtalkIdToUserInfos");
var getClaimEnergyEntryVisibility_1 = require("./internal/user/getClaimEnergyEntryVisibility");
var getCurrentUserInfo_1 = require("./internal/user/getCurrentUserInfo");
var getRealmInfo_1 = require("./internal/user/getRealmInfo");
var getRole_1 = require("./internal/user/getRole");
var isNewUser_1 = require("./internal/user/isNewUser");
var setClaimEnergyEntryVisibility_1 = require("./internal/user/setClaimEnergyEntryVisibility");
var showMedalEntry_1 = require("./internal/user/showMedalEntry");
var uids2UserInfos_1 = require("./internal/user/uids2UserInfos");
var unbindTaobao_1 = require("./internal/user/unbindTaobao");
var authAlipayInvoice_1 = require("./internal/util/authAlipayInvoice");
var changeCloudSettingConfig_1 = require("./internal/util/changeCloudSettingConfig");
var chooseFile_1 = require("./internal/util/chooseFile");
var chooseIndustry_1 = require("./internal/util/chooseIndustry");
var chooseRegion_1 = require("./internal/util/chooseRegion");
var collectCell_1 = require("./internal/util/collectCell");
var dns_1 = require("./internal/util/dns");
var draw_1 = require("./internal/util/draw");
var encryData_1 = require("./internal/util/encryData");
var encrySHA1Data_1 = require("./internal/util/encrySHA1Data");
var forbidScreenShot_1 = require("./internal/util/forbidScreenShot");
var getBindSmartDeviceOrgList_1 = require("./internal/util/getBindSmartDeviceOrgList");
var getCloudSetting_1 = require("./internal/util/getCloudSetting");
var getCloudSettingConfig_1 = require("./internal/util/getCloudSettingConfig");
var getCorpIdByOrgId_1 = require("./internal/util/getCorpIdByOrgId");
var getCurrentOrgId_1 = require("./internal/util/getCurrentOrgId");
var getLBSWua_1 = require("./internal/util/getLBSWua");
var getOrgIdByCorpId_1 = require("./internal/util/getOrgIdByCorpId");
var getSystemSetting_1 = require("./internal/util/getSystemSetting");
var getUtdid_1 = require("./internal/util/getUtdid");
var getWua_1 = require("./internal/util/getWua");
var grayStringLemon_1 = require("./internal/util/grayStringLemon");
var graySwitch_1 = require("./internal/util/graySwitch");
var graySwitchLemon_1 = require("./internal/util/graySwitchLemon");
var isSimulator_1 = require("./internal/util/isSimulator");
var ratingAndFeedback_1 = require("./internal/util/ratingAndFeedback");
var recordShortVideo_1 = require("./internal/util/recordShortVideo");
var setSystemSetting_1 = require("./internal/util/setSystemSetting");
var showAddExternalContactDialog_1 = require("./internal/util/showAddExternalContactDialog");
var switchOA_1 = require("./internal/util/switchOA");
var uploadBase64EncodeImage_1 = require("./internal/util/uploadBase64EncodeImage");
var uploadFile_3 = require("./internal/util/uploadFile");
var openDebugLink_1 = require("./internal/webview/openDebugLink");
var dispose_1 = require("./internal/webviewTurbo/dispose");
var start_2 = require("./internal/webviewTurbo/start");
var getApplist_1 = require("./internal/work/getApplist");
var openNativeApp_1 = require("./internal/work/openNativeApp");
var openMiniApp_1 = require("./internal/wxsdk/openMiniApp");
var isSupportFitech_1 = require("./internal/zoloz/isSupportFitech");
var verifyFaceByFitech_1 = require("./internal/zoloz/verifyFaceByFitech");
var keepAlive_1 = require("./media/voiceRecorder/keepAlive");
var pause_2 = require("./media/voiceRecorder/pause");
var resume_2 = require("./media/voiceRecorder/resume");
var start_3 = require("./media/voiceRecorder/start");
var stop_3 = require("./media/voiceRecorder/stop");
var loginGovNet_1 = require("./net/bjGovApn/loginGovNet");
var request_3 = require("./net/tunnel/request");
var check_1 = require("./net/vpn/check");
var start_4 = require("./net/vpn/start");
var stop_4 = require("./net/vpn/stop");
var fetch_2 = require("./preRelease/appLink/fetch");
var open_5 = require("./preRelease/appLink/open");
var request_4 = require("./preRelease/appLink/request");
var response_2 = require("./preRelease/appLink/response");
var open_6 = require("./retail/chat/open");
var call_3 = require("./retail/telephone/call");
var status_2 = require("./runtime/info/status");
var fetch_3 = require("./runtime/message/fetch");
var post_2 = require("./runtime/message/post");
var enableUsability_1 = require("./runtime/monitor/enableUsability");
var finishLoad_1 = require("./runtime/monitor/finishLoad");
var getLoadTime_1 = require("./runtime/monitor/getLoadTime");
var usability_1 = require("./runtime/monitor/usability");
var requestAuthCode_3 = require("./runtime/permission/requestAuthCode");
var requestJsApis_1 = require("./runtime/permission/requestJsApis");
var requestOperateAuthCode_1 = require("./runtime/permission/requestOperateAuthCode");
var httpOverLwp_1 = require("./service/request/httpOverLwp");
var mtop_1 = require("./service/request/mtop");
var mtopOverLwp_1 = require("./service/request/mtopOverLwp");
var fetch_4 = require("./ui/appLink/fetch");
var open_7 = require("./ui/appLink/open");
var request_5 = require("./ui/appLink/request");
var response_3 = require("./ui/appLink/response");
var close_2 = require("./ui/drawer/close");
var config_1 = require("./ui/drawer/config");
var disable_1 = require("./ui/drawer/disable");
var enable_1 = require("./ui/drawer/enable");
var init_2 = require("./ui/drawer/init");
var open_8 = require("./ui/drawer/open");
var minimize_1 = require("./ui/floatWindow/minimize");
var plain_1 = require("./ui/input/plain");
var addToFloat_1 = require("./ui/multitask/addToFloat");
var removeFromFloat_1 = require("./ui/multitask/removeFromFloat");
var close_3 = require("./ui/nav/close");
var getCurrentId_1 = require("./ui/nav/getCurrentId");
var go_1 = require("./ui/nav/go");
var pop_1 = require("./ui/nav/pop");
var preload_1 = require("./ui/nav/preload");
var push_1 = require("./ui/nav/push");
var quit_2 = require("./ui/nav/quit");
var recycle_1 = require("./ui/nav/recycle");
var setColors_1 = require("./ui/progressBar/setColors");
var disable_2 = require("./ui/pullToRefresh/disable");
var enable_2 = require("./ui/pullToRefresh/enable");
var stop_5 = require("./ui/pullToRefresh/stop");
var add_5 = require("./ui/tab/add");
var config_2 = require("./ui/tab/config");
var init_3 = require("./ui/tab/init");
var remove_2 = require("./ui/tab/remove");
var select_1 = require("./ui/tab/select");
var start_5 = require("./ui/tab/start");
var disable_3 = require("./ui/webViewBounce/disable");
var enable_3 = require("./ui/webViewBounce/enable");
var read_1 = require("./util/cookies/read");
var write_1 = require("./util/cookies/write");
var clearItems_1 = require("./util/domainStorage/clearItems");
var getItem_1 = require("./util/domainStorage/getItem");
var getItems_1 = require("./util/domainStorage/getItems");
var listItems_1 = require("./util/domainStorage/listItems");
var removeItem_1 = require("./util/domainStorage/removeItem");
var setItem_1 = require("./util/domainStorage/setItem");
var getItem_2 = require("./util/localStorage/getItem");
var removeItem_2 = require("./util/localStorage/removeItem");
var setItem_2 = require("./util/localStorage/setItem");
var getData_2 = require("./util/openTemporary/getData");
exports.apiObj = {
    alipay: {
        verifyidentity: {
            getBioInfo: getBioInfo_1.getBioInfo$,
            verifyIdentity: verifyIdentity_1.verifyIdentity$
        }
    },
    biz: {
        ATMBle: {
            beaconPicker: beaconPicker_1.beaconPicker$,
            detectFace: detectFace_1.detectFace$,
            detectFaceFullScreen: detectFaceFullScreen_1.detectFaceFullScreen$,
            faceManager: faceManager_1.faceManager$,
            punchModePicker: punchModePicker_1.punchModePicker$
        },
        alidoc: {
            getClipboardData: getClipboardData_1.getClipboardData$,
            setStyle: setStyle_1.setStyle$
        },
        alipay: {
            auth: auth_1.auth$,
            bindAlipay: bindAlipay_1.bindAlipay$,
            openAuth: openAuth_1.openAuth$,
            pay: pay_1.pay$
        },
        auth: {
            openAccountPwdLoginPage: openAccountPwdLoginPage_1.openAccountPwdLoginPage$,
            requestAuthCode: requestAuthCode_1.requestAuthCode$,
            requestAuthInfo: requestAuthInfo_1.requestAuthInfo$
        },
        calendar: {
            chooseDateTime: chooseDateTime_1.chooseDateTime$,
            chooseHalfDay: chooseHalfDay_1.chooseHalfDay$,
            chooseInterval: chooseInterval_1.chooseInterval$,
            chooseOneDay: chooseOneDay_1.chooseOneDay$,
            datePicker: datePicker_1.datePicker$
        },
        chat: {
            addGroup: addGroup_1.addGroup$,
            chooseConversation: chooseConversation_1.chooseConversation$,
            chooseConversationByCorpId: chooseConversationByCorpId_1.chooseConversationByCorpId$,
            collectSticker: collectSticker_1.collectSticker$,
            createOrgPublicGroup: createOrgPublicGroup_1.createOrgPublicGroup$,
            createSceneGroup: createSceneGroup_1.createSceneGroup$,
            getConversationInfo: getConversationInfo_1.getConversationInfo$,
            getRealmCid: getRealmCid_1.getRealmCid$,
            locationChatMessage: locationChatMessage_1.locationChatMessage$,
            modifyGroupDesc: modifyGroupDesc_1.modifyGroupDesc$,
            open: open_1.open$,
            openSingleChat: openSingleChat_1.openSingleChat$,
            pickConversation: pickConversation_1.pickConversation$,
            queryUnreadSessions: queryUnreadSessions_1.queryUnreadSessions$,
            sendEmotion: sendEmotion_1.sendEmotion$,
            sendMessageToContact: sendMessageToContact_1.sendMessageToContact$,
            sendReplyToInputPanel: sendReplyToInputPanel_1.sendReplyToInputPanel$,
            sendRichTextToEditor: sendRichTextToEditor_1.sendRichTextToEditor$,
            toConversation: toConversation_1.toConversation$,
            toConversationByOpenConversationId: toConversationByOpenConversationId_1.toConversationByOpenConversationId$
        },
        clipboardData: {
            setData: setData_1.setData$
        },
        conference: {
            createCloudCall: createCloudCall_1.createCloudCall$,
            docRoomStatusChanged: docRoomStatusChanged_1.docRoomStatusChanged$,
            getCloudCallInfo: getCloudCallInfo_1.getCloudCallInfo$,
            getCloudCallList: getCloudCallList_1.getCloudCallList$,
            openLink: openLink_1.openLink$,
            screenshot: screenshot_1.screenshot$,
            toggleConfAudio: toggleConfAudio_1.toggleConfAudio$,
            videoCall: videoCall_1.videoCall$,
            videoConfCall: videoConfCall_1.videoConfCall$
        },
        contact: {
            addFromContact: addFromContact_1.addFromContact$,
            addFromManual: addFromManual_1.addFromManual$,
            addSubManager: addSubManager_1.addSubManager$,
            addUserForm: addUserForm_1.addUserForm$,
            changeCustomerFollower: changeCustomerFollower_1.changeCustomerFollower$,
            choose: choose_1.choose$,
            chooseMobileContacts: chooseMobileContacts_1.chooseMobileContacts$,
            complexChoose: complexChoose_1.complexChoose$,
            complexPicker: complexPicker_1.complexPicker$,
            complexSelectedPicker: complexSelectedPicker_1.complexSelectedPicker$,
            createGroup: createGroup_1.createGroup$,
            departmentsPicker: departmentsPicker_1.departmentsPicker$,
            departmentsSelectedPicker: departmentsSelectedPicker_1.departmentsSelectedPicker$,
            externalComplexPicker: externalComplexPicker_1.externalComplexPicker$,
            externalEditForm: externalEditForm_1.externalEditForm$,
            getMobileContact: getMobileContact_1.getMobileContact$,
            inviteGroupMember: inviteGroupMember_1.inviteGroupMember$,
            isForeignOrg: isForeignOrg_1.isForeignOrg$,
            manageContactAlert: manageContactAlert_1.manageContactAlert$,
            pickCustomer: pickCustomer_1.pickCustomer$,
            pickJobTitle: pickJobTitle_1.pickJobTitle$,
            rolesPicker: rolesPicker_1.rolesPicker$,
            setRule: setRule_1.setRule$,
            teamScaleSelect: teamScaleSelect_1.teamScaleSelect$,
            useTagPicker: useTagPicker_1.useTagPicker$
        },
        cspace: {
            chooseSpaceDir: chooseSpaceDir_1.chooseSpaceDir$,
            copy: copy_1.copy$,
            delete: delete_1.delete$,
            getPlayUrl: getPlayUrl_1.getPlayUrl$,
            preview: preview_1.preview$,
            saveFile: saveFile_1.saveFile$
        },
        customContact: {
            choose: choose_2.choose$,
            multipleChoose: multipleChoose_1.multipleChoose$
        },
        data: {
            getAvatar: getAvatar_1.getAvatar$
        },
        ding: {
            create: create_1.create$,
            detail: detail_1.detail$,
            post: post_1.post$,
            update: update_1.update$
        },
        edu: {
            finishMiniCourseByRecordId: finishMiniCourseByRecordId_1.finishMiniCourseByRecordId$,
            getMiniCourseDraftList: getMiniCourseDraftList_1.getMiniCourseDraftList$,
            joinClassroom: joinClassroom_1.joinClassroom$,
            makeMiniCourse: makeMiniCourse_1.makeMiniCourse$,
            newMsgNotificationStatus: newMsgNotificationStatus_1.newMsgNotificationStatus$,
            startAuth: startAuth_1.startAuth$,
            tokenFaceImg: tokenFaceImg_1.tokenFaceImg$
        },
        event: {
            notifyWeex: notifyWeex_1.notifyWeex$
        },
        faceBox: {
            experienceFunction: experienceFunction_1.experienceFunction$,
            getRecognition: getRecognition_1.getRecognition$,
            removeFace: removeFace_1.removeFace$,
            sendMessageToContact: sendMessageToContact_2.sendMessageToContact$,
            setRecognition: setRecognition_1.setRecognition$,
            showRemind: showRemind_1.showRemind$,
            startCameraRecord: startCameraRecord_1.startCameraRecord$,
            startCameraRecordFromPartner: startCameraRecordFromPartner_1.startCameraRecordFromPartner$,
            startPictureRecord: startPictureRecord_1.startPictureRecord$
        },
        intent: {
            fetchData: fetchData_1.fetchData$
        },
        iot: {
            bind: bind_1.bind$,
            bindMeetingRoom: bindMeetingRoom_1.bindMeetingRoom$,
            getDeviceProperties: getDeviceProperties_1.getDeviceProperties$,
            invokeThingService: invokeThingService_1.invokeThingService$,
            queryMeetingRoomList: queryMeetingRoomList_1.queryMeetingRoomList$,
            setDeviceProperties: setDeviceProperties_1.setDeviceProperties$,
            unbind: unbind_1.unbind$
        },
        kingGrid: {
            approvalPdf: approvalPdf_1.approvalPdf$
        },
        live: {
            chooseLiveGroup: chooseLiveGroup_1.chooseLiveGroup$,
            destroyPlayer: destroyPlayer_1.destroyPlayer$,
            getAllLiveList: getAllLiveList_1.getAllLiveList$,
            getDynamicMsgCount: getDynamicMsgCount_1.getDynamicMsgCount$,
            getLiveFuncMsgs: getLiveFuncMsgs_1.getLiveFuncMsgs$,
            getLiveInfos: getLiveInfos_1.getLiveInfos$,
            getLiveStatistics: getLiveStatistics_1.getLiveStatistics$,
            getPlaybackList: getPlaybackList_1.getPlaybackList$,
            getPlayerPosition: getPlayerPosition_1.getPlayerPosition$,
            getStickyStatus: getStickyStatus_1.getStickyStatus$,
            hidePlayer: hidePlayer_1.hidePlayer$,
            initPlayer: initPlayer_1.initPlayer$,
            listLiveRecords: listLiveRecords_1.listLiveRecords$,
            listLiveViewers: listLiveViewers_1.listLiveViewers$,
            nav2GroupAnchorList: nav2GroupAnchorList_1.nav2GroupAnchorList$,
            nav2PlayVideo: nav2PlayVideo_1.nav2PlayVideo$,
            playerPause: playerPause_1.playerPause$,
            playerPlay: playerPlay_1.playerPlay$,
            playerSeekTo: playerSeekTo_1.playerSeekTo$,
            setStickyStatus: setStickyStatus_1.setStickyStatus$,
            shareToGroup: shareToGroup_1.shareToGroup$,
            showPlayer: showPlayer_1.showPlayer$,
            startClassRoom: startClassRoom_1.startClassRoom$,
            startDummyLive: startDummyLive_1.startDummyLive$,
            startUnifiedLive: startUnifiedLive_1.startUnifiedLive$,
            stopDummyLive: stopDummyLive_1.stopDummyLive$,
            stopDummyLiveAll: stopDummyLiveAll_1.stopDummyLiveAll$,
            updateDrawingCache: updateDrawingCache_1.updateDrawingCache$,
            updateSimulGroup: updateSimulGroup_1.updateSimulGroup$
        },
        map: {
            locate: locate_1.locate$,
            search: search_1.search$,
            searchRoute: searchRoute_1.searchRoute$,
            view: view_1.view$
        },
        media: {
            compressVideo: compressVideo_1.compressVideo$
        },
        microApp: {
            openApp: openApp_1.openApp$,
            visualList: visualList_1.visualList$
        },
        navigation: {
            back: back_1.back$,
            close: close_1.close$,
            createEditor: createEditor_1.createEditor$,
            finishEditor: finishEditor_1.finishEditor$,
            gestures: gestures_1.gestures$,
            goBack: goBack_1.goBack$,
            hideBar: hideBar_1.hideBar$,
            navigateToMiniProgram: navigateToMiniProgram_1.navigateToMiniProgram$,
            popGesture: popGesture_1.popGesture$,
            quit: quit_1.quit$,
            replace: replace_1.replace$,
            setActions: setActions_1.setActions$,
            setIcon: setIcon_1.setIcon$,
            setLeft: setLeft_1.setLeft$,
            setMenu: setMenu_1.setMenu$,
            setPullGesture: setPullGesture_1.setPullGesture$,
            setRight: setRight_1.setRight$,
            setSubtitle: setSubtitle_1.setSubtitle$,
            setTitle: setTitle_1.setTitle$,
            setTitleIcon: setTitleIcon_1.setTitleIcon$,
            showPopdownList: showPopdownList_1.showPopdownList$
        },
        notify: {
            send: send_1.send$
        },
        oa: {
            authorityVerify: authorityVerify_1.authorityVerify$,
            setWorkTab: setWorkTab_1.setWorkTab$
        },
        oauth: {
            authorize: authorize_1.authorize$
        },
        pbp: {
            componentPunchFromPartner: componentPunchFromPartner_1.componentPunchFromPartner$,
            startMatchRuleFromPartner: startMatchRuleFromPartner_1.startMatchRuleFromPartner$,
            stopMatchRuleFromPartner: stopMatchRuleFromPartner_1.stopMatchRuleFromPartner$
        },
        preload: {
            video: video_1.video$
        },
        realm: {
            getRealtimeTracingStatus: getRealtimeTracingStatus_1.getRealtimeTracingStatus$,
            getUserExclusiveInfo: getUserExclusiveInfo_1.getUserExclusiveInfo$,
            startRealtimeTracing: startRealtimeTracing_1.startRealtimeTracing$,
            stopRealtimeTracing: stopRealtimeTracing_1.stopRealtimeTracing$,
            subscribe: subscribe_1.subscribe$,
            unsubscribe: unsubscribe_1.unsubscribe$
        },
        redenvelop: {
            sendEnterpriseRedEnvelop: sendEnterpriseRedEnvelop_1.sendEnterpriseRedEnvelop$,
            sendNormalRedEnvelop: sendNormalRedEnvelop_1.sendNormalRedEnvelop$
        },
        resource: {
            getInfo: getInfo_1.getInfo$,
            reportDebugMessage: reportDebugMessage_1.reportDebugMessage$,
            reportPerf: reportPerf_1.reportPerf$
        },
        schedule: {
            create: create_2.create$
        },
        shortCut: {
            addShortCut: addShortCut_1.addShortCut$
        },
        sports: {
            checkHealthPermission: checkHealthPermission_1.checkHealthPermission$,
            checkSensorPermission: checkSensorPermission_1.checkSensorPermission$,
            disableStepCountSync: disableStepCountSync_1.disableStepCountSync$,
            enableStepCountSync: enableStepCountSync_1.enableStepCountSync$,
            fetchAliuid: fetchAliuid_1.fetchAliuid$,
            fetchStephubSteps: fetchStephubSteps_1.fetchStephubSteps$,
            fetchTaobaoH5TrustLoginUrlForAlisports: fetchTaobaoH5TrustLoginUrlForAlisports_1.fetchTaobaoH5TrustLoginUrlForAlisports$,
            fetchTaobaoId: fetchTaobaoId_1.fetchTaobaoId$,
            getTodaysStepCount: getTodaysStepCount_1.getTodaysStepCount$,
            requestHealthPermission: requestHealthPermission_1.requestHealthPermission$,
            requestSensorPermission: requestSensorPermission_1.requestSensorPermission$
        },
        store: {
            closeUnpayOrder: closeUnpayOrder_1.closeUnpayOrder$,
            createOrder: createOrder_1.createOrder$,
            getPayUrl: getPayUrl_1.getPayUrl$,
            inquiry: inquiry_1.inquiry$
        },
        tabwindow: {
            isTab: isTab_1.isTab$
        },
        tag: {
            batchTags: batchTags_1.batchTags$,
            mark: mark_1.mark$
        },
        telephone: {
            call: call_1.call$,
            callOrgExternalContacts: callOrgExternalContacts_1.callOrgExternalContacts$,
            checkBizCall: checkBizCall_1.checkBizCall$,
            quickCall: quickCall_1.quickCall$,
            quickCallList: quickCallList_1.quickCallList$,
            showCallMenu: showCallMenu_1.showCallMenu$
        },
        uic: {
            directLogin: directLogin_1.directLogin$,
            doLogin: doLogin_1.doLogin$
        },
        user: {
            checkPassword: checkPassword_1.checkPassword$,
            get: get_1.get$,
            loginBySms: loginBySms_1.loginBySms$,
            loginTaobaoWithDingtalkUserToken: loginTaobaoWithDingtalkUserToken_1.loginTaobaoWithDingtalkUserToken$,
            secretID: secretID_1.secretID$
        },
        util: {
            acitveConversation: acitveConversation_1.acitveConversation$,
            addCalendarEvent: addCalendarEvent_1.addCalendarEvent$,
            addDesktopShortcuts: addDesktopShortcuts_1.addDesktopShortcuts$,
            callComponent: callComponent_1.callComponent$,
            chooseImage: chooseImage_1.chooseImage$,
            chosen: chosen_1.chosen$,
            clearWebStoreCache: clearWebStoreCache_1.clearWebStoreCache$,
            closePreviewImage: closePreviewImage_1.closePreviewImage$,
            compressImage: compressImage_1.compressImage$,
            createVoipConference: createVoipConference_1.createVoipConference$,
            datepicker: datepicker_1.datepicker$,
            datetimepicker: datetimepicker_1.datetimepicker$,
            decrypt: decrypt_1.decrypt$,
            downloadFile: downloadFile_1.downloadFile$,
            editPicture: editPicture_1.editPicture$,
            editSpaceFileOnline: editSpaceFileOnline_1.editSpaceFileOnline$,
            encrypt: encrypt_1.encrypt$,
            fetchFileData: fetchFileData_1.fetchFileData$,
            fetchImageData: fetchImageData_1.fetchImageData$,
            forwardDpFile: forwardDpFile_1.forwardDpFile$,
            getLocaleAndNationByCorpId: getLocaleAndNationByCorpId_1.getLocaleAndNationByCorpId$,
            getPerfInfo: getPerfInfo_1.getPerfInfo$,
            invokeWorkbench: invokeWorkbench_1.invokeWorkbench$,
            isEnableGPUAcceleration: isEnableGPUAcceleration_1.isEnableGPUAcceleration$,
            isLocalFileExist: isLocalFileExist_1.isLocalFileExist$,
            mailTo: mailTo_1.mailTo$,
            multiSelect: multiSelect_1.multiSelect$,
            open: open_2.open$,
            openFloatWindow: openFloatWindow_1.openFloatWindow$,
            openLink: openLink_2.openLink$,
            openLocalFile: openLocalFile_1.openLocalFile$,
            openModal: openModal_1.openModal$,
            openPrintWnd: openPrintWnd_1.openPrintWnd$,
            openShareDpFileWnd: openShareDpFileWnd_1.openShareDpFileWnd$,
            openSlidePanel: openSlidePanel_1.openSlidePanel$,
            openWindowWithUrl: openWindowWithUrl_1.openWindowWithUrl$,
            perfBizReady: perfBizReady_1.perfBizReady$,
            presentWindow: presentWindow_1.presentWindow$,
            previewFile: previewFile_1.previewFile$,
            previewImage: previewImage_1.previewImage$,
            previewVideo: previewVideo_1.previewVideo$,
            qrcode: qrcode_1.qrcode$,
            queryConferenceList: queryConferenceList_1.queryConferenceList$,
            quitComponent: quitComponent_1.quitComponent$,
            recordVideoToUpload: recordVideoToUpload_1.recordVideoToUpload$,
            requestWorkbench: requestWorkbench_1.requestWorkbench$,
            saveImage: saveImage_1.saveImage$,
            scan: scan_1.scan$,
            scanCard: scanCard_1.scanCard$,
            selectEmoji: selectEmoji_1.selectEmoji$,
            setGPUAcceleration: setGPUAcceleration_1.setGPUAcceleration$,
            setScreenBrightnessAndKeepOn: setScreenBrightnessAndKeepOn_1.setScreenBrightnessAndKeepOn$,
            setScreenKeepOn: setScreenKeepOn_1.setScreenKeepOn$,
            share: share_1.share$,
            shareImage: shareImage_1.shareImage$,
            shareLongImage: shareLongImage_1.shareLongImage$,
            shareMiniApp: shareMiniApp_1.shareMiniApp$,
            startDocSign: startDocSign_1.startDocSign$,
            stickPage: stickPage_1.stickPage$,
            systemShare: systemShare_1.systemShare$,
            timepicker: timepicker_1.timepicker$,
            timestamp: timestamp_1.timestamp$,
            updateTrackPageName: updateTrackPageName_1.updateTrackPageName$,
            updateTrackProperties: updateTrackProperties_1.updateTrackProperties$,
            uploadAttachment: uploadAttachment_1.uploadAttachment$,
            uploadFile: uploadFile_1.uploadFile$,
            uploadImage: uploadImage_1.uploadImage$,
            uploadImageFromCamera: uploadImageFromCamera_1.uploadImageFromCamera$,
            uploadMedia: uploadMedia_1.uploadMedia$,
            ut: ut_1.ut$,
            vip: vip_1.vip$,
            warn: warn_1.warn$,
            watermarkCamera: watermarkCamera_1.watermarkCamera$
        },
        verify: {
            biometric: biometric_1.biometric$,
            openBindIDCard: openBindIDCard_1.openBindIDCard$,
            startAuth: startAuth_2.startAuth$,
            takePhoto: takePhoto_1.takePhoto$
        },
        watermarkCamera: {
            getWatermarkInfo: getWatermarkInfo_1.getWatermarkInfo$,
            setWatermarkInfo: setWatermarkInfo_1.setWatermarkInfo$
        },
        wiki: {
            openPage: openPage_1.openPage$,
            saveToWiki: saveToWiki_1.saveToWiki$
        },
        zoloz: {
            download: download_1.download$,
            zimIdentity: zimIdentity_1.zimIdentity$
        }
    },
    channel: {
        open: {
            profile: profile_1.profile$
        },
        permission: {
            requestAuthCode: requestAuthCode_2.requestAuthCode$
        }
    },
    device: {
        accelerometer: {
            clearShake: clearShake_1.clearShake$,
            watchShake: watchShake_1.watchShake$
        },
        audio: {
            download: download_2.download$,
            getDuration: getDuration_1.getDuration$,
            getVolume: getVolume_1.getVolume$,
            isMute: isMute_1.isMute$,
            onPlayEnd: onPlayEnd_1.onPlayEnd$,
            onRecordEnd: onRecordEnd_1.onRecordEnd$,
            pause: pause_1.pause$,
            play: play_1.play$,
            resume: resume_1.resume$,
            seek: seek_1.seek$,
            setMute: setMute_1.setMute$,
            setVolume: setVolume_1.setVolume$,
            startRecord: startRecord_1.startRecord$,
            stop: stop_1.stop$,
            stopRecord: stopRecord_1.stopRecord$,
            translateVoice: translateVoice_1.translateVoice$,
            upload: upload_1.upload$
        },
        base: {
            connectBleDevice: connectBleDevice_1.connectBleDevice$,
            disConnectBleDevice: disConnectBleDevice_1.disConnectBleDevice$,
            enableBluetooth: enableBluetooth_1.enableBluetooth$,
            enableBluetoothV2: enableBluetoothV2_1.enableBluetoothV2$,
            enableLocation: enableLocation_1.enableLocation$,
            enableWifi: enableWifi_1.enableWifi$,
            getInterface: getInterface_1.getInterface$,
            getPhoneInfo: getPhoneInfo_1.getPhoneInfo$,
            getScanWifiList: getScanWifiList_1.getScanWifiList$,
            getScanWifiListAsync: getScanWifiListAsync_1.getScanWifiListAsync$,
            getSettings: getSettings_1.getSettings$,
            getUUID: getUUID_1.getUUID$,
            getWifiStatus: getWifiStatus_1.getWifiStatus$,
            openSystemSetting: openSystemSetting_1.openSystemSetting$,
            scanBleDevice: scanBleDevice_1.scanBleDevice$,
            sendDataToDevice: sendDataToDevice_1.sendDataToDevice$,
            startBindDevice: startBindDevice_1.startBindDevice$,
            stopScanBleDevice: stopScanBleDevice_1.stopScanBleDevice$,
            unBindDevice: unBindDevice_1.unBindDevice$
        },
        connection: {
            getNetworkType: getNetworkType_1.getNetworkType$
        },
        geolocation: {
            checkPermission: checkPermission_1.checkPermission$,
            checkService: checkService_1.checkService$,
            get: get_2.get$,
            isEnabled: isEnabled_1.isEnabled$,
            isEnabledHighAccuracy: isEnabledHighAccuracy_1.isEnabledHighAccuracy$,
            openGps: openGps_1.openGps$,
            start: start_1.start$,
            status: status_1.status$,
            stop: stop_2.stop$
        },
        handwriting: {
            changeSlatePosition: changeSlatePosition_1.changeSlatePosition$,
            showHandPanel: showHandPanel_1.showHandPanel$
        },
        health: {
            dayStepCount: dayStepCount_1.dayStepCount$,
            stepCount: stepCount_1.stepCount$
        },
        launcher: {
            checkInstalledApps: checkInstalledApps_1.checkInstalledApps$,
            launchApp: launchApp_1.launchApp$
        },
        nfc: {
            nfcRead: nfcRead_1.nfcRead$,
            nfcStop: nfcStop_1.nfcStop$,
            nfcWrite: nfcWrite_1.nfcWrite$
        },
        notification: {
            actionSheet: actionSheet_1.actionSheet$,
            alert: alert_1.alert$,
            confirm: confirm_1.confirm$,
            extendModal: extendModal_1.extendModal$,
            getNotificationStatus: getNotificationStatus_1.getNotificationStatus$,
            hidePreloader: hidePreloader_1.hidePreloader$,
            modal: modal_1.modal$,
            prompt: prompt_1.prompt$,
            showPreloader: showPreloader_1.showPreloader$,
            toast: toast_1.toast$,
            vibrate: vibrate_1.vibrate$
        },
        screen: {
            insetAdjust: insetAdjust_1.insetAdjust$,
            resetView: resetView_1.resetView$,
            rotateView: rotateView_1.rotateView$,
            setAutoOrientation: setAutoOrientation_1.setAutoOrientation$
        },
        screenshot: {
            startMonitor: startMonitor_1.startMonitor$,
            stopMonitor: stopMonitor_1.stopMonitor$
        }
    },
    interactive: {
        bizCard: {
            batchDisposeCard: batchDisposeCard_1.batchDisposeCard$,
            getCardInfo: getCardInfo_1.getCardInfo$,
            sendAction: sendAction_1.sendAction$
        }
    },
    internal: {
        ATMBle: {
            beaconPickResult: beaconPickResult_1.beaconPickResult$,
            checkIn: checkIn_1.checkIn$,
            detectFace: detectFace_2.detectFace$,
            detectFaceFullScreen: detectFaceFullScreen_2.detectFaceFullScreen$,
            faceManagerResult: faceManagerResult_1.faceManagerResult$,
            getBleLocalDevList: getBleLocalDevList_1.getBleLocalDevList$,
            getPunchEventClockCheckResult: getPunchEventClockCheckResult_1.getPunchEventClockCheckResult$,
            punchModePickResult: punchModePickResult_1.punchModePickResult$,
            requestPunchEvents: requestPunchEvents_1.requestPunchEvents$,
            scanBleDevice: scanBleDevice_2.scanBleDevice$,
            showBlePopupWindowMock: showBlePopupWindowMock_1.showBlePopupWindowMock$,
            startMonitor: startMonitor_2.startMonitor$,
            stopMonitor: stopMonitor_2.stopMonitor$,
            updateBluetoothConfig: updateBluetoothConfig_1.updateBluetoothConfig$
        },
        ai: {
            cancelTask: cancelTask_1.cancelTask$,
            createTask: createTask_1.createTask$,
            frameUpload: frameUpload_1.frameUpload$
        },
        alidoc: {
            keyboardAccessory: keyboardAccessory_1.keyboardAccessory$,
            keyboardCompression: keyboardCompression_1.keyboardCompression$
        },
        alpha: {
            addWdsDevice: addWdsDevice_1.addWdsDevice$,
            connectSecurityWiFi: connectSecurityWiFi_1.connectSecurityWiFi$,
            copyPwd: copyPwd_1.copyPwd$,
            discover: discover_1.discover$,
            getDevicePwd: getDevicePwd_1.getDevicePwd$
        },
        attend: {
            assistant: assistant_1.assistant$,
            checkInRecords: checkInRecords_1.checkInRecords$,
            getAccurateLocatingInfo: getAccurateLocatingInfo_1.getAccurateLocatingInfo$,
            getOfflineResource: getOfflineResource_1.getOfflineResource$,
            getProloadResource: getProloadResource_1.getProloadResource$,
            isBetaEnabled: isBetaEnabled_1.isBetaEnabled$,
            setOfflineResource: setOfflineResource_1.setOfflineResource$,
            updateBluetoothCheckList: updateBluetoothCheckList_1.updateBluetoothCheckList$
        },
        auth: {
            backToLoginPage: backToLoginPage_1.backToLoginPage$,
            getActionTokenByPwd: getActionTokenByPwd_1.getActionTokenByPwd$,
            getCurrentTmpCode: getCurrentTmpCode_1.getCurrentTmpCode$,
            identifyByAlipay: identifyByAlipay_1.identifyByAlipay$,
            identifyByAssistantMail: identifyByAssistantMail_1.identifyByAssistantMail$,
            identifyByContactsVerify: identifyByContactsVerify_1.identifyByContactsVerify$,
            identifyByFace: identifyByFace_1.identifyByFace$,
            identifyByOIDC: identifyByOIDC_1.identifyByOIDC$,
            oidcPwdSetted: oidcPwdSetted_1.oidcPwdSetted$,
            postLoginTempCode: postLoginTempCode_1.postLoginTempCode$,
            reLogin: reLogin_1.reLogin$
        },
        backgroundAudio: {
            setCustomConfig: setCustomConfig_1.setCustomConfig$
        },
        badges: {
            getTabBadgeByKey: getTabBadgeByKey_1.getTabBadgeByKey$
        },
        beacon: {
            bind: bind_2.bind$,
            detectBeacons: detectBeacons_1.detectBeacons$,
            detectStart: detectStart_1.detectStart$,
            detectStop: detectStop_1.detectStop$
        },
        biz: {
            makecall: makecall_1.makecall$,
            openApp: openApp_2.openApp$,
            uploadVideo: uploadVideo_1.uploadVideo$,
            webNotify: webNotify_1.webNotify$
        },
        bizcard: {
            batchAddExtContacts: batchAddExtContacts_1.batchAddExtContacts$,
            companyPicker: companyPicker_1.companyPicker$,
            friendCategories: friendCategories_1.friendCategories$,
            friendCount: friendCount_1.friendCount$,
            friendPicker: friendPicker_1.friendPicker$,
            friendsByCategory: friendsByCategory_1.friendsByCategory$,
            friendsByName: friendsByName_1.friendsByName$,
            friendsByRoom: friendsByRoom_1.friendsByRoom$,
            mobileContactCount: mobileContactCount_1.mobileContactCount$,
            roomsByTime: roomsByTime_1.roomsByTime$,
            search: search_2.search$,
            timeZone: timeZone_1.timeZone$,
            updateAvatar: updateAvatar_1.updateAvatar$
        },
        blebusiness: {
            allOrgs: allOrgs_1.allOrgs$,
            buildDeviceNick: buildDeviceNick_1.buildDeviceNick$,
            currentMainOrgId: currentMainOrgId_1.currentMainOrgId$,
            getDeviceInfo: getDeviceInfo_1.getDeviceInfo$,
            getEndorseModelWithSecret: getEndorseModelWithSecret_1.getEndorseModelWithSecret$,
            getHandshakeModelFromEndorseModel: getHandshakeModelFromEndorseModel_1.getHandshakeModelFromEndorseModel$,
            popOrgCreatePage: popOrgCreatePage_1.popOrgCreatePage$,
            popOrgCreatePageForProjector: popOrgCreatePageForProjector_1.popOrgCreatePageForProjector$,
            queryDingWifiDevicesWithOrg: queryDingWifiDevicesWithOrg_1.queryDingWifiDevicesWithOrg$,
            reportNetIsolate: reportNetIsolate_1.reportNetIsolate$,
            showNotifyDingCard: showNotifyDingCard_1.showNotifyDingCard$
        },
        bleengine: {
            bluetoothState: bluetoothState_1.bluetoothState$,
            checkEnv: checkEnv_1.checkEnv$,
            connectDevice: connectDevice_1.connectDevice$,
            request: request_1.request$,
            scanStart: scanStart_1.scanStart$,
            scanStop: scanStop_1.scanStop$
        },
        cache: {
            restore: restore_1.restore$,
            save: save_1.save$
        },
        certify: {
            biometric: biometric_2.biometric$,
            step: step_1.step$,
            submit: submit_1.submit$,
            takePhoto: takePhoto_2.takePhoto$
        },
        channel: {
            infoExist: infoExist_1.infoExist$,
            openPage: openPage_2.openPage$,
            publish: publish_1.publish$,
            subscribe: subscribe_2.subscribe$,
            unsubscribe: unsubscribe_2.unsubscribe$
        },
        chat: {
            applyJoinGroup: applyJoinGroup_1.applyJoinGroup$,
            batchDisplayNames: batchDisplayNames_1.batchDisplayNames$,
            batchUserProfiles: batchUserProfiles_1.batchUserProfiles$,
            clearDraft: clearDraft_1.clearDraft$,
            closeTopOneBoxCard: closeTopOneBoxCard_1.closeTopOneBoxCard$,
            createApprovalGroup: createApprovalGroup_1.createApprovalGroup$,
            downloadMedias: downloadMedias_1.downloadMedias$,
            emotionTranslater: emotionTranslater_1.emotionTranslater$,
            encryptOpenId: encryptOpenId_1.encryptOpenId$,
            focusMessage: focusMessage_1.focusMessage$,
            generateUrl: generateUrl_1.generateUrl$,
            getConvInfo: getConvInfo_1.getConvInfo$,
            getConvUnreadMsgCount: getConvUnreadMsgCount_1.getConvUnreadMsgCount$,
            getConversations: getConversations_1.getConversations$,
            getCurrentOpenId: getCurrentOpenId_1.getCurrentOpenId$,
            getDisplayName: getDisplayName_1.getDisplayName$,
            getDraft: getDraft_1.getDraft$,
            getDraftAndClear: getDraftAndClear_1.getDraftAndClear$,
            getEncryptImageThumb: getEncryptImageThumb_1.getEncryptImageThumb$,
            getMessageList: getMessageList_1.getMessageList$,
            getPickedImageThumbData: getPickedImageThumbData_1.getPickedImageThumbData$,
            getRichTextPayload: getRichTextPayload_1.getRichTextPayload$,
            getTopic: getTopic_1.getTopic$,
            getTopicReplys: getTopicReplys_1.getTopicReplys$,
            getTopicStickers: getTopicStickers_1.getTopicStickers$,
            getUserProfile: getUserProfile_1.getUserProfile$,
            joinGroupByBizType: joinGroupByBizType_1.joinGroupByBizType$,
            markSettingsReddot: markSettingsReddot_1.markSettingsReddot$,
            openConversation: openConversation_1.openConversation$,
            pickAtList: pickAtList_1.pickAtList$,
            pickGroupConversation: pickGroupConversation_1.pickGroupConversation$,
            pickImage: pickImage_1.pickImage$,
            previewMessage: previewMessage_1.previewMessage$,
            recallMessage: recallMessage_1.recallMessage$,
            registTopicMessageListener: registTopicMessageListener_1.registTopicMessageListener$,
            selectAndSendText: selectAndSendText_1.selectAndSendText$,
            sendBizMessage: sendBizMessage_1.sendBizMessage$,
            sendCustomMessage: sendCustomMessage_1.sendCustomMessage$,
            sendMultiMsges: sendMultiMsges_1.sendMultiMsges$,
            sendReplyMessage: sendReplyMessage_1.sendReplyMessage$,
            sendRichTextMessage: sendRichTextMessage_1.sendRichTextMessage$,
            setHasRichTextDraft: setHasRichTextDraft_1.setHasRichTextDraft$,
            showMessageMenu: showMessageMenu_1.showMessageMenu$,
            showTopicEmotionBar: showTopicEmotionBar_1.showTopicEmotionBar$,
            stickerReply: stickerReply_1.stickerReply$,
            toConversation: toConversation_2.toConversation$,
            transmitMsg: transmitMsg_1.transmitMsg$,
            unregistTopicMessageListener: unregistTopicMessageListener_1.unregistTopicMessageListener$,
            uploadPickedImage: uploadPickedImage_1.uploadPickedImage$
        },
        circle: {
            getStorage: getStorage_1.getStorage$,
            removeStorage: removeStorage_1.removeStorage$,
            setStorage: setStorage_1.setStorage$
        },
        clipboardData: {
            getData: getData_1.getData$
        },
        coap: {
            sendMessage: sendMessage_1.sendMessage$
        },
        contact: {
            chooseEnterpriseUser: chooseEnterpriseUser_1.chooseEnterpriseUser$,
            chooseMobileContact: chooseMobileContact_1.chooseMobileContact$,
            chooseOrgAddress: chooseOrgAddress_1.chooseOrgAddress$,
            commonPicker: commonPicker_1.commonPicker$,
            internalComplexPicker: internalComplexPicker_1.internalComplexPicker$,
            internalComplexPickerWithUid: internalComplexPickerWithUid_1.internalComplexPickerWithUid$,
            openSelectUserWnd: openSelectUserWnd_1.openSelectUserWnd$,
            queryPickedResult: queryPickedResult_1.queryPickedResult$,
            removePickedResult: removePickedResult_1.removePickedResult$
        },
        conversation: {
            getProperty: getProperty_1.getProperty$,
            mute: mute_1.mute$,
            switchEffectiveMode: switchEffectiveMode_1.switchEffectiveMode$,
            top: top_1.top$
        },
        corps: {
            listCorpInfo: listCorpInfo_1.listCorpInfo$
        },
        createOrg: {
            industryInfo: industryInfo_1.industryInfo$,
            lastCreateOrgInfo: lastCreateOrgInfo_1.lastCreateOrgInfo$,
            successJump: successJump_1.successJump$
        },
        cspace: {
            cancelDecryptAndUpload: cancelDecryptAndUpload_1.cancelDecryptAndUpload$,
            cancelFileUpload: cancelFileUpload_1.cancelFileUpload$,
            cidToSpaceId: cidToSpaceId_1.cidToSpaceId$,
            decryptAndUpload: decryptAndUpload_1.decryptAndUpload$,
            downloadFile: downloadFile_2.downloadFile$,
            edit: edit_1.edit$,
            fileUpload: fileUpload_1.fileUpload$,
            getMediaInfo: getMediaInfo_1.getMediaInfo$,
            getToken: getToken_1.getToken$,
            openCloudPrintPluginWnd: openCloudPrintPluginWnd_1.openCloudPrintPluginWnd$,
            openCloudPrintWnd: openCloudPrintWnd_1.openCloudPrintWnd$,
            openEditInviteWnd: openEditInviteWnd_1.openEditInviteWnd$,
            openFolder: openFolder_1.openFolder$,
            requestDentryUrl: requestDentryUrl_1.requestDentryUrl$,
            sendMsgToRequestPermission: sendMsgToRequestPermission_1.sendMsgToRequestPermission$,
            uploadFile: uploadFile_2.uploadFile$
        },
        customerService: {
            hideQuickEntrance: hideQuickEntrance_1.hideQuickEntrance$,
            isRecording: isRecording_1.isRecording$,
            showQuickEntrance: showQuickEntrance_1.showQuickEntrance$,
            startRecord: startRecord_2.startRecord$,
            stopRecord: stopRecord_2.stopRecord$,
            tryUploadRecords: tryUploadRecords_1.tryUploadRecords$
        },
        diagnostic: {
            getFastCheckInInfo: getFastCheckInInfo_1.getFastCheckInInfo$,
            getLocalErrorMsg: getLocalErrorMsg_1.getLocalErrorMsg$
        },
        dingCard: {
            bindWorkMobile: bindWorkMobile_1.bindWorkMobile$,
            unbindWorkMobile: unbindWorkMobile_1.unbindWorkMobile$
        },
        dingbadge: {
            auth: auth_2.auth$,
            codeInvalidReport: codeInvalidReport_1.codeInvalidReport$,
            isAuth: isAuth_1.isAuth$,
            refreshCode: refreshCode_1.refreshCode$,
            refreshData: refreshData_1.refreshData$,
            startGenCode: startGenCode_1.startGenCode$,
            stopGenCode: stopGenCode_1.stopGenCode$,
            unAuth: unAuth_1.unAuth$,
            visit: visit_1.visit$
        },
        dingpay: {
            bindAlipay: bindAlipay_2.bindAlipay$,
            unbindAlipay: unbindAlipay_1.unbindAlipay$
        },
        efficiencyKit: {
            getParams: getParams_1.getParams$,
            openCustomGroupList: openCustomGroupList_1.openCustomGroupList$,
            setParams: setParams_1.setParams$
        },
        enterpriseEncryption: {
            info: info_1.info$,
            sendMessageToMaster: sendMessageToMaster_1.sendMessageToMaster$,
            turnOnWithAnimation: turnOnWithAnimation_1.turnOnWithAnimation$
        },
        faceScan: {
            prepareScan: prepareScan_1.prepareScan$,
            scan: scan_2.scan$
        },
        facialRecognition: {
            detectFace: detectFace_3.detectFace$,
            init: init_1.init$
        },
        focus: {
            checkEnvironment: checkEnvironment_1.checkEnvironment$,
            closeFocusFloatingView: closeFocusFloatingView_1.closeFocusFloatingView$,
            getCurrentProjectionData: getCurrentProjectionData_1.getCurrentProjectionData$,
            openFocusFloatingView: openFocusFloatingView_1.openFocusFloatingView$,
            popProjectionSelector: popProjectionSelector_1.popProjectionSelector$,
            register: register_1.register$,
            startProjection: startProjection_1.startProjection$,
            stopProjection: stopProjection_1.stopProjection$,
            unRegister: unRegister_1.unRegister$
        },
        googlePlayService: {
            getGoogleServiceInfo: getGoogleServiceInfo_1.getGoogleServiceInfo$
        },
        groupapp: {
            auth: auth_3.auth$,
            sendMsgAsUser: sendMsgAsUser_1.sendMsgAsUser$
        },
        groupbill: {
            detail: detail_2.detail$,
            query: query_1.query$,
            send: send_2.send$
        },
        guide: {
            closeGuideBanner: closeGuideBanner_1.closeGuideBanner$
        },
        health: {
            checkHealthPermission: checkHealthPermission_2.checkHealthPermission$,
            checkSensorPermission: checkSensorPermission_2.checkSensorPermission$,
            disableStepCountSync: disableStepCountSync_2.disableStepCountSync$,
            enableStepCountSync: enableStepCountSync_2.enableStepCountSync$,
            getTodaysStep: getTodaysStep_1.getTodaysStep$,
            getTodaysStepCount: getTodaysStepCount_2.getTodaysStepCount$,
            isShowPermissionTip: isShowPermissionTip_1.isShowPermissionTip$,
            openAISport: openAISport_1.openAISport$,
            pedometerStatus: pedometerStatus_1.pedometerStatus$,
            queryHealthPermission: queryHealthPermission_1.queryHealthPermission$,
            requestHealthPermission: requestHealthPermission_2.requestHealthPermission$,
            requestSensorPermission: requestSensorPermission_2.requestSensorPermission$
        },
        host: {
            cancel: cancel_1.cancel$,
            lwp: lwp_1.lwp$,
            query: query_2.query$
        },
        hpm: {
            delete: delete_2.delete$,
            get: get_3.get$,
            queryInfo: queryInfo_1.queryInfo$,
            update: update_2.update$
        },
        imshortcut: {
            getMsgFilterConfigDetail: getMsgFilterConfigDetail_1.getMsgFilterConfigDetail$,
            getMsgFilterTabsConfig: getMsgFilterTabsConfig_1.getMsgFilterTabsConfig$,
            initEventChannel: initEventChannel_1.initEventChannel$,
            listFilterMsg: listFilterMsg_1.listFilterMsg$,
            onTabSelected: onTabSelected_1.onTabSelected$,
            updateMsgFilterStatus: updateMsgFilterStatus_1.updateMsgFilterStatus$
        },
        inputPanel: {
            add: add_1.add$,
            addToolBar: addToolBar_1.addToolBar$,
            atPick: atPick_1.atPick$,
            changeMode: changeMode_1.changeMode$,
            getCurrentInput: getCurrentInput_1.getCurrentInput$,
            refreshInputExtendView: refreshInputExtendView_1.refreshInputExtendView$,
            remove: remove_1.remove$,
            removeToolbar: removeToolbar_1.removeToolbar$,
            resignInput: resignInput_1.resignInput$
        },
        interactiveCard: {
            batchDisposeCard: batchDisposeCard_2.batchDisposeCard$,
            getCardInfo: getCardInfo_2.getCardInfo$,
            sendAction: sendAction_2.sendAction$
        },
        invoice: {
            chooseInvoice: chooseInvoice_1.chooseInvoice$
        },
        live: {
            startLive: startLive_1.startLive$,
            startUnifiedLive: startUnifiedLive_2.startUnifiedLive$
        },
        log: {
            add: add_2.add$,
            printUnifyLog: printUnifyLog_1.printUnifyLog$,
            searchClickLog: searchClickLog_1.searchClickLog$,
            searchQueryLog: searchQueryLog_1.searchQueryLog$,
            upload: upload_2.upload$,
            uploadException: uploadException_1.uploadException$
        },
        lwp: {
            call: call_2.call$,
            setSessionIdCookie: setSessionIdCookie_1.setSessionIdCookie$
        },
        microapp: {
            checkInstalled: checkInstalled_1.checkInstalled$,
            queryInfo: queryInfo_2.queryInfo$,
            triggerSync: triggerSync_1.triggerSync$
        },
        navigation: {
            setIcon: setIcon_2.setIcon$
        },
        notify: {
            add: add_3.add$,
            closeModal: closeModal_1.closeModal$,
            send: send_3.send$,
            showModal: showModal_1.showModal$
        },
        oa: {
            activatePersonalSpace: activatePersonalSpace_1.activatePersonalSpace$,
            getNavHeaderHeight: getNavHeaderHeight_1.getNavHeaderHeight$,
            isPersonalSpaceEnabled: isPersonalSpaceEnabled_1.isPersonalSpaceEnabled$
        },
        openTemporary: {
            setData: setData_2.setData$
        },
        pageLink: {
            fetch: fetch_1.fetch$,
            request: request_2.request$,
            response: response_1.response$
        },
        payment: {
            requestForInAppPurchase: requestForInAppPurchase_1.requestForInAppPurchase$
        },
        permission: {
            hasSelfPermissions: hasSelfPermissions_1.hasSelfPermissions$,
            requestPermissions: requestPermissions_1.requestPermissions$
        },
        phoneContact: {
            add: add_4.add$,
            checkPermissionAndUpload: checkPermissionAndUpload_1.checkPermissionAndUpload$,
            getMobileContactName: getMobileContactName_1.getMobileContactName$,
            requestPermissionAndUploadWhenAuthed: requestPermissionAndUploadWhenAuthed_1.requestPermissionAndUploadWhenAuthed$
        },
        realm: {
            getUserExclusiveInfo: getUserExclusiveInfo_2.getUserExclusiveInfo$,
            updateExclusiveConfig: updateExclusiveConfig_1.updateExclusiveConfig$
        },
        redenvelop: {
            sendRandomRedEnvelop: sendRandomRedEnvelop_1.sendRandomRedEnvelop$
        },
        redpacket: {
            nav2RedPacket: nav2RedPacket_1.nav2RedPacket$
        },
        request: {
            getOrgFeatureByKey: getOrgFeatureByKey_1.getOrgFeatureByKey$,
            getSecurityToken: getSecurityToken_1.getSecurityToken$,
            httpOverLWP: httpOverLWP_1.httpOverLWP$,
            lwp: lwp_2.lwp$,
            sendHeadRequest: sendHeadRequest_1.sendHeadRequest$
        },
        requestmoney: {
            contactswithUids: contactswithUids_1.contactswithUids$,
            currentUid: currentUid_1.currentUid$,
            dingRemind: dingRemind_1.dingRemind$,
            generateBizId: generateBizId_1.generateBizId$,
            loadConversations: loadConversations_1.loadConversations$,
            notifyAlipayResult: notifyAlipayResult_1.notifyAlipayResult$,
            showContactAndGroupPick: showContactAndGroupPick_1.showContactAndGroupPick$,
            showGroupMemberPick: showGroupMemberPick_1.showGroupMemberPick$,
            updateCardStatus: updateCardStatus_1.updateCardStatus$
        },
        resource: {
            getPackageInfo: getPackageInfo_1.getPackageInfo$,
            getResourceContent: getResourceContent_1.getResourceContent$
        },
        safe: {
            getAppInfo: getAppInfo_1.getAppInfo$,
            getDeviceInfo: getDeviceInfo_2.getDeviceInfo$,
            scanPlugin: scanPlugin_1.scanPlugin$
        },
        schedule: {
            update: update_3.update$
        },
        schema: {
            open: open_3.open$,
            openPermissionSetting: openPermissionSetting_1.openPermissionSetting$,
            openWifiSetting: openWifiSetting_1.openWifiSetting$
        },
        search: {
            debug: debug_1.debug$
        },
        security: {
            asgCheck: asgCheck_1.asgCheck$
        },
        sqlite: {
            executeSql: executeSql_1.executeSql$,
            open: open_4.open$
        },
        studyroom: {
            initRoom: initRoom_1.initRoom$,
            operateMusic: operateMusic_1.operateMusic$,
            reportMemberState: reportMemberState_1.reportMemberState$
        },
        teleVideo: {
            addMember: addMember_1.addMember$,
            creatConf: creatConf_1.creatConf$,
            dismissMeetingFloatingView: dismissMeetingFloatingView_1.dismissMeetingFloatingView$,
            registPushHandler: registPushHandler_1.registPushHandler$,
            shareInvite: shareInvite_1.shareInvite$,
            showMeetingFloatingView: showMeetingFloatingView_1.showMeetingFloatingView$,
            unregistPushHandler: unregistPushHandler_1.unregistPushHandler$
        },
        ui: {
            getCurrentUIEnvironment: getCurrentUIEnvironment_1.getCurrentUIEnvironment$
        },
        user: {
            allOrganizations: allOrganizations_1.allOrganizations$,
            bindTaobao: bindTaobao_1.bindTaobao$,
            dingtalkIdToUserInfos: dingtalkIdToUserInfos_1.dingtalkIdToUserInfos$,
            getClaimEnergyEntryVisibility: getClaimEnergyEntryVisibility_1.getClaimEnergyEntryVisibility$,
            getCurrentUserInfo: getCurrentUserInfo_1.getCurrentUserInfo$,
            getRealmInfo: getRealmInfo_1.getRealmInfo$,
            getRole: getRole_1.getRole$,
            isNewUser: isNewUser_1.isNewUser$,
            setClaimEnergyEntryVisibility: setClaimEnergyEntryVisibility_1.setClaimEnergyEntryVisibility$,
            showMedalEntry: showMedalEntry_1.showMedalEntry$,
            uids2UserInfos: uids2UserInfos_1.uids2UserInfos$,
            unbindTaobao: unbindTaobao_1.unbindTaobao$
        },
        util: {
            authAlipayInvoice: authAlipayInvoice_1.authAlipayInvoice$,
            changeCloudSettingConfig: changeCloudSettingConfig_1.changeCloudSettingConfig$,
            chooseFile: chooseFile_1.chooseFile$,
            chooseIndustry: chooseIndustry_1.chooseIndustry$,
            chooseRegion: chooseRegion_1.chooseRegion$,
            collectCell: collectCell_1.collectCell$,
            dns: dns_1.dns$,
            draw: draw_1.draw$,
            encryData: encryData_1.encryData$,
            encrySHA1Data: encrySHA1Data_1.encrySHA1Data$,
            forbidScreenShot: forbidScreenShot_1.forbidScreenShot$,
            getBindSmartDeviceOrgList: getBindSmartDeviceOrgList_1.getBindSmartDeviceOrgList$,
            getCloudSetting: getCloudSetting_1.getCloudSetting$,
            getCloudSettingConfig: getCloudSettingConfig_1.getCloudSettingConfig$,
            getCorpIdByOrgId: getCorpIdByOrgId_1.getCorpIdByOrgId$,
            getCurrentOrgId: getCurrentOrgId_1.getCurrentOrgId$,
            getLBSWua: getLBSWua_1.getLBSWua$,
            getOrgIdByCorpId: getOrgIdByCorpId_1.getOrgIdByCorpId$,
            getSystemSetting: getSystemSetting_1.getSystemSetting$,
            getUtdid: getUtdid_1.getUtdid$,
            getWua: getWua_1.getWua$,
            grayStringLemon: grayStringLemon_1.grayStringLemon$,
            graySwitch: graySwitch_1.graySwitch$,
            graySwitchLemon: graySwitchLemon_1.graySwitchLemon$,
            isSimulator: isSimulator_1.isSimulator$,
            ratingAndFeedback: ratingAndFeedback_1.ratingAndFeedback$,
            recordShortVideo: recordShortVideo_1.recordShortVideo$,
            setSystemSetting: setSystemSetting_1.setSystemSetting$,
            showAddExternalContactDialog: showAddExternalContactDialog_1.showAddExternalContactDialog$,
            switchOA: switchOA_1.switchOA$,
            uploadBase64EncodeImage: uploadBase64EncodeImage_1.uploadBase64EncodeImage$,
            uploadFile: uploadFile_3.uploadFile$
        },
        webview: {
            openDebugLink: openDebugLink_1.openDebugLink$
        },
        webviewTurbo: {
            dispose: dispose_1.dispose$,
            start: start_2.start$
        },
        work: {
            getApplist: getApplist_1.getApplist$,
            openNativeApp: openNativeApp_1.openNativeApp$
        },
        wxsdk: {
            openMiniApp: openMiniApp_1.openMiniApp$
        },
        zoloz: {
            isSupportFitech: isSupportFitech_1.isSupportFitech$,
            verifyFaceByFitech: verifyFaceByFitech_1.verifyFaceByFitech$
        }
    },
    media: {
        voiceRecorder: {
            keepAlive: keepAlive_1.keepAlive$,
            pause: pause_2.pause$,
            resume: resume_2.resume$,
            start: start_3.start$,
            stop: stop_3.stop$
        }
    },
    net: {
        bjGovApn: {
            loginGovNet: loginGovNet_1.loginGovNet$
        },
        tunnel: {
            request: request_3.request$
        },
        vpn: {
            check: check_1.check$,
            start: start_4.start$,
            stop: stop_4.stop$
        }
    },
    preRelease: {
        appLink: {
            fetch: fetch_2.fetch$,
            open: open_5.open$,
            request: request_4.request$,
            response: response_2.response$
        }
    },
    retail: {
        chat: {
            open: open_6.open$
        },
        telephone: {
            call: call_3.call$
        }
    },
    runtime: {
        info: {
            status: status_2.status$
        },
        message: {
            fetch: fetch_3.fetch$,
            post: post_2.post$
        },
        monitor: {
            enableUsability: enableUsability_1.enableUsability$,
            finishLoad: finishLoad_1.finishLoad$,
            getLoadTime: getLoadTime_1.getLoadTime$,
            usability: usability_1.usability$
        },
        permission: {
            requestAuthCode: requestAuthCode_3.requestAuthCode$,
            requestJsApis: requestJsApis_1.requestJsApis$,
            requestOperateAuthCode: requestOperateAuthCode_1.requestOperateAuthCode$
        }
    },
    service: {
        request: {
            httpOverLwp: httpOverLwp_1.httpOverLwp$,
            mtop: mtop_1.mtop$,
            mtopOverLwp: mtopOverLwp_1.mtopOverLwp$
        }
    },
    ui: {
        appLink: {
            fetch: fetch_4.fetch$,
            open: open_7.open$,
            request: request_5.request$,
            response: response_3.response$
        },
        drawer: {
            close: close_2.close$,
            config: config_1.config$,
            disable: disable_1.disable$,
            enable: enable_1.enable$,
            init: init_2.init$,
            open: open_8.open$
        },
        floatWindow: {
            minimize: minimize_1.minimize$
        },
        input: {
            plain: plain_1.plain$
        },
        multitask: {
            addToFloat: addToFloat_1.addToFloat$,
            removeFromFloat: removeFromFloat_1.removeFromFloat$
        },
        nav: {
            close: close_3.close$,
            getCurrentId: getCurrentId_1.getCurrentId$,
            go: go_1.go$,
            pop: pop_1.pop$,
            preload: preload_1.preload$,
            push: push_1.push$,
            quit: quit_2.quit$,
            recycle: recycle_1.recycle$
        },
        progressBar: {
            setColors: setColors_1.setColors$
        },
        pullToRefresh: {
            disable: disable_2.disable$,
            enable: enable_2.enable$,
            stop: stop_5.stop$
        },
        tab: {
            add: add_5.add$,
            config: config_2.config$,
            init: init_3.init$,
            remove: remove_2.remove$,
            select: select_1.select$,
            start: start_5.start$
        },
        webViewBounce: {
            disable: disable_3.disable$,
            enable: enable_3.enable$
        }
    },
    util: {
        cookies: {
            read: read_1.read$,
            write: write_1.write$
        },
        domainStorage: {
            clearItems: clearItems_1.clearItems$,
            getItem: getItem_1.getItem$,
            getItems: getItems_1.getItems$,
            listItems: listItems_1.listItems$,
            removeItem: removeItem_1.removeItem$,
            setItem: setItem_1.setItem$
        },
        localStorage: {
            getItem: getItem_2.getItem$,
            removeItem: removeItem_2.removeItem$,
            setItem: setItem_2.setItem$
        },
        openTemporary: {
            getData: getData_2.getData$
        }
    }
};
