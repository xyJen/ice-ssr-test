"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ddSdk_1 = require("../lib/ddSdk");
var env_1 = require("../lib/env");
var sdk_1 = require("../lib/sdk");
var eapp_1 = require("../lib/bridge/eapp");
var webviewInMiniApp_1 = require("../lib/bridge/webviewInMiniApp");
var h5Ios_1 = require("../lib/bridge/h5Ios");
var weex_1 = require("../lib/bridge/weex");
var h5Event_1 = require("../lib/bridge/h5Event");
var weexEvent_1 = require("../lib/bridge/weexEvent");
ddSdk_1.ddSdk.setPlatform({
    platform: env_1.ENV_ENUM.ios,
    bridgeInit: function () {
        var env = env_1.getENV();
        if (env.appType === sdk_1.APP_TYPE.MINI_APP) {
            return Promise.resolve(eapp_1.default);
        }
        else if (env.appType === sdk_1.APP_TYPE.WEBVIEW_IN_MINIAPP) {
            return Promise.resolve(webviewInMiniApp_1.default);
        }
        else if (env.appType === sdk_1.APP_TYPE.WEEX) {
            return weex_1.iosWeexBridge();
        }
        else {
            return h5Ios_1.h5IosBridgeInit().then(function () {
                return h5Ios_1.default;
            });
        }
    },
    authMethod: 'runtime.permission.requestJsApis',
    event: {
        on: function (type, listener) {
            var env = env_1.getENV();
            switch (env.appType) {
                case sdk_1.APP_TYPE.WEB:
                case sdk_1.APP_TYPE.WEBVIEW_IN_MINIAPP:
                    h5Event_1.on(type, listener);
                    break;
                case sdk_1.APP_TYPE.WEEX:
                    weexEvent_1.on(type, listener);
                    break;
                default:
                    throw new Error("Not support global event in the platfrom: " + env.appType);
            }
        },
        off: function (type, listener) {
            var env = env_1.getENV();
            switch (env.appType) {
                case sdk_1.APP_TYPE.WEB:
                case sdk_1.APP_TYPE.WEBVIEW_IN_MINIAPP:
                    h5Event_1.off(type, listener);
                    break;
                case sdk_1.APP_TYPE.WEEX:
                    weexEvent_1.off(type, listener);
                    break;
                default:
                    throw new Error("Not support global event in the platfrom: " + env.appType);
            }
        },
    },
});
