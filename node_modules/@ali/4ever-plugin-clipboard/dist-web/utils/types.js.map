{"version":3,"sources":["../../../src/utils/types.ts"],"names":["PasteMode"],"mappings":"AAAA;AACA;AACA;AACA;AA4BA,WAAYA,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["/**\n * @packageDocumentation\n * @module Plugin-ClipBoard\n */\nimport { Document, EdgePoint, Schema, TextPoint, Mo } from '@ali/4ever-cangjie';\n\nexport type Serializer = Mo;\n\nexport type Matcher = RegExp;\n\nexport interface ClipboardFilter {\n  block?: {\n    includes?: Matcher;\n    excludes?: Matcher;\n  };\n  inline?: {\n    includes?: Matcher;\n    excludes?: Matcher;\n  };\n}\n\nexport type ClipboardPluginLocale = {\n  pasteOptions?: string;\n  textFormat?: string;\n  matchFormat?: string;\n  sourceFormat?: string;\n  markdownToDoc?: string;\n  notSupport?: string;\n  shortcutKey?: string;\n};\n\nexport enum PasteMode {\n  source = 'source',\n  match = 'match',\n  text = 'text',\n}\n\nexport type ClipboardPluginConfig = {\n  /**\n   * 做多实例区分，传入同一个key，可以使用同一个示例。\n   * 建议每个编辑器使用不同的key。\n   */\n  key?: string;\n  /**\n   * 序列化工具，模式是Mo。\n   */\n  serializer: Serializer;\n  /**\n   * 拷贝的时候，在 fragment 中过滤掉一些 block / inline 元素。\n   */\n  rules?: ClipboardFilter;\n  /**\n   * pi-serializer 里的 strictSchema\n   */\n  schema: Schema;\n  /**\n   * 从一些文档段落，拷贝过来的时候，是否忽略掉一些图片。\n   * 这里主要处理本地文件，比如 Word  拷贝一下图文进来，本地文件是无法处理的。\n   */\n  shouldSkipImageURL?: (src: string) => boolean;\n  /**\n   * 粘贴方式面板配置开关，默认关闭\n   */\n  pastePanel?: boolean;\n  locale?: ClipboardPluginLocale;\n  onError?: Function;\n  mode?: 'match' | 'text' | 'source';\n  // 在最终插入 markdownFragment 前预处理\n  beforeInsertMarkdown?: (doc: Document) => [Document, any];\n  // 在插入 markdownFragment 后进行一些处理\n  afterInsertMarkdown?: (data: any) => void;\n  /**\n   * 默认开启 Mo 中严格Schema模式, Mo schema与Mo strictSchema两者区别:\n   *\n   *  Mo schema: 规则比较宽松, 目前仅有doucment rule及normalize\n   *  Mo strictSchema: 不同插件针对相应不合法内容进行normalize处理，且会补充schema规则\n   *\n   * 具体参考mo/src/schema.ts及mo/src/strictSchema.ts文件\n   */\n  getContainer?: () => HTMLElement;\n};\n\nexport type Point = TextPoint | EdgePoint;\n\nexport type ReceiveType = 'files' | 'fragment' | 'html' | 'text' | 'unknown';\n\nexport type ModelsMap = Map<string, object | number>;\n\nexport type ClipBoardBiPluginConfig = ClipboardPluginConfig | Record<string, any>;\n"],"file":"types.js"}