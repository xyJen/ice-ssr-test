{"version":3,"sources":["../../../src/utils/tester.ts"],"names":["DATA_CLIPBORAD_CANGJIE","mimeTypes","MIME","hasTextHtml","data","types","includes","TEXT_HTML","hasImage","isMicrosoftOffice","items","item","type","startsWith","getSizeofClipboardData","format","content","getData","APPLICATION_CANGJIE_FRAGMENT","APPLICATION_SLATE_FRAGMENT","APPLICATION_DING_SHEET","APPLICATION_GOOGLE_DOCS_CLIP","TEXT_PLAIN","blob","Blob","size","isDingDocs","html","domparser","DOMParser","root","parseFromString","clipboardDataNode","querySelector","body","firstElementChild","isDingSheet","isMicrosoftWordOrExcel","isMicrosoftPowerPoint","Boolean","isMicrosoftWord","isMicrosoftExcel","isGoogleDocs","isGoogleSheet","isShimoDocs","isYuqueDocs","isVsCode","APPLICATION_VSCODE"],"mappings":"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","sourcesContent":["import { DATA_CLIPBORAD_CANGJIE } from '@ali/4ever-cangjie';\nimport { mimeTypes as MIME } from '@ali/4ever-utils';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ClipboardData extends DataTransfer {}\n\nexport function hasTextHtml(data: ClipboardData): boolean {\n  return data.types.includes(MIME.TEXT_HTML);\n}\n\nexport function hasImage(data: ClipboardData): boolean {\n  // office 会注入一个 image 的数据\n  if (isMicrosoftOffice(data)) {\n    return false;\n  }\n  // files 不存在\n  if (!data.types.includes('Files')) {\n    return false;\n  }\n  for (const item of data.items) {\n    if (item.type.startsWith('image/')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function getSizeofClipboardData(\n  data: ClipboardData,\n  format?: string,\n): number {\n  let content = '';\n  if (format) {\n    content = data.getData(format);\n  } else {\n    content =\n      data.getData(MIME.TEXT_HTML) ||\n      data.getData(MIME.APPLICATION_CANGJIE_FRAGMENT) ||\n      data.getData(MIME.APPLICATION_SLATE_FRAGMENT) ||\n      data.getData(MIME.APPLICATION_DING_SHEET) ||\n      data.getData(MIME.APPLICATION_GOOGLE_DOCS_CLIP) ||\n      data.getData(MIME.TEXT_PLAIN);\n  }\n  const blob = new Blob([content]);\n  return blob.size;\n}\n\nexport function isDingDocs(data: ClipboardData): boolean {\n  // 仓颉编辑器\n  if (data.types.includes(MIME.APPLICATION_CANGJIE_FRAGMENT)) return true;\n  // Slate 编辑器\n  if (data.types.includes(MIME.APPLICATION_SLATE_FRAGMENT)) return true;\n  // 仓颉编辑器，有挂载 ASL 的 HTML\n  if (data.types.includes(MIME.TEXT_HTML)) {\n    const html = data.getData(MIME.TEXT_HTML);\n    const domparser = new DOMParser();\n    const root = domparser.parseFromString(html, 'text/html');\n\n    const clipboardDataNode = root.querySelector(`[${DATA_CLIPBORAD_CANGJIE}]`) as HTMLElement;\n    if (clipboardDataNode && root.body.firstElementChild === clipboardDataNode) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isDingSheet(data: ClipboardData): boolean {\n  return data.types.includes(MIME.APPLICATION_DING_SHEET);\n}\n\nexport function isMicrosoftOffice(data: ClipboardData): boolean {\n  return isMicrosoftWordOrExcel(data) || isMicrosoftPowerPoint(data);\n}\n\nexport function isMicrosoftWordOrExcel(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('xmlns:o=\"urn:schemas-microsoft-com:office:office\"'));\n}\n\nexport function isMicrosoftWord(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('xmlns:w=\"urn:schemas-microsoft-com:office:word\"'));\n}\n\nexport function isMicrosoftExcel(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('xmlns:x=\"urn:schemas-microsoft-com:office:excel\"'));\n}\n\nexport function isMicrosoftPowerPoint(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('<meta name=ProgId content=PowerPoint.Slide>'));\n}\n\nexport function isGoogleDocs(data: ClipboardData): boolean {\n  return data.types.includes(MIME.APPLICATION_GOOGLE_DOCS_CLIP);\n}\n\nexport function isGoogleSheet(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('<google-sheets-html-origin>'));\n}\n\nexport function isShimoDocs(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('data-shimo-docs'));\n}\n\nexport function isYuqueDocs(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('<meta name=\"source\" content=\"lake\"/>'));\n}\n\nexport function isVsCode(data: ClipboardData): boolean {\n  return data.types.includes(MIME.APPLICATION_VSCODE);\n}\n"],"file":"tester.js"}