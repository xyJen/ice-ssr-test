import createOnCangjieCopyOrCut from "../common/handlers/createOnCangjieCopyOrCut";
import { key } from "../utils/meta";
import Debug from 'debug';
import { queries } from "./queries";
import createOnEditable from "./handlers/createOnEditable";
var warn = Debug('EDITOR:CANGJIE:PLUGIN');
warn.log = console.warn.bind(console);
export var zhiFactory = function zhiFactory(configs) {
  var _configs$clipboard = configs.clipboard,
      clipboard = _configs$clipboard === void 0 ? {} : _configs$clipboard;
  var onCangjieCopyOrCut = createOnCangjieCopyOrCut(clipboard);
  return {
    key: key,
    queries: queries,
    onCopy: function onCopy(event, controller, next) {
      if (!event) {
        return;
      }

      if (controller.readOnly && !controller.canCopy) {
        event.preventDefault();
        warn('Copy command is prohibited.');
        return;
      }

      var selection = controller.value.selection;

      if (!selection) {
        return;
      } // 如果光标重叠，则不处理
      // Zhi 的交互和 Bi 不一样，在一些 embed 元素中会有一些文字，如果处理了 collapsed 选区，则无法拷贝内部文字，这里
      // 我们限制如果拷贝的是块级元素，则必须有 expand 选区


      if (selection.isCollapsed) {
        return;
      }

      next();
    },
    onCangjieCopy: onCangjieCopyOrCut,
    renderEditable: createOnEditable()
  };
};
//# sourceMappingURL=index.js.map