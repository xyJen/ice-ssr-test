{"version":3,"sources":["../../src/index.ts"],"names":["zhiFactory","biFactory","ClipboardPad","createOnCangjieCopyOrCut","mobileBiFactory","configs","mobileZhiFactory","createClipboardManager","PasteMode","CLIPBOARD_INSERT_FRAGMENT","CLIPBOARD_SET_DECORATIONS","CLIPBOARD_DEL_SELECTION","CLIPBOARD_HIDE_PASTEPANEL","CLIPBOARD_HIDE_CUSTOM_PASTEPANEL","CLIPBOARD_MATCH_MODE","CLIPBOARD_TEXT_MODE","insertFragment","setDecorations","deleteAtRange","hidePastePanel","hideCustomPastePanel","insertMatchFragment","insertTextFragment","utils","copyNodes","normalizeFragment","default","getHtmlFromValue","filterAndNormalize","restructFragment","clipboardLatency"],"mappings":"AAAA,SAASA,UAAT;AACA,SAASC,SAAT;AACA,OAAOC,YAAP;AACA,OAAOC,wBAAP;;AAGA,IAAMC,eAAgC,GAAG,SAAnCA,eAAmC,CAACC,OAAD;AAAA,SAAaJ,SAAS,CAACI,OAAD,CAAtB;AAAA,CAAzC;;AACA,IAAMC,gBAAkC,GAAG,SAArCA,gBAAqC,CAACD,OAAD;AAAA,SAAaL,UAAU,CAACK,OAAD,CAAvB;AAAA,CAA3C,C,CAEA;;;AACA,SAASJ,SAAT,EAAoBD,UAApB,EAAgCI,eAAhC,EAAiDE,gBAAjD,G,CAEA;;AAMA;AACA,SACEJ,YADF;AAGA,SACEK,sBADF;AAGA,SACEC,SADF,wB,CAIA;;AACA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,uBAHF,EAIEC,yBAJF,EAKEC,gCALF,EAMEC,oBANF,EAOEC,mBAPF,EASEC,cATF,EAUEC,cAVF,EAWEC,aAXF,EAYEC,cAZF,EAaEC,oBAbF,EAcEC,mBAdF,EAeEC,kBAfF,uB,CAiBA;;;mBACYC,K;AACZ,SAASC,SAAT,EAAoBC,iBAApB;AACA,SAASC,OAAO,IAAIC,gBAApB;AACA,SAASD,OAAO,IAAIE,kBAApB;AACA,SAASC,gBAAT;AACA,SAAS1B,wBAAT;AACA,SAASuB,OAAO,IAAII,gBAApB","sourcesContent":["import { zhiFactory } from './zhi/index';\nimport { biFactory } from './bi/index';\nimport ClipboardPad from './utils/ClipboardPad';\nimport createOnCangjieCopyOrCut from './common/handlers/createOnCangjieCopyOrCut';\nimport type { MobileBiFactory, MobileZhiFactory } from '@ali/4ever-cangjie';\n\nconst mobileBiFactory: MobileBiFactory = (configs) => biFactory(configs);\nconst mobileZhiFactory: MobileZhiFactory = (configs) => zhiFactory(configs);\n\n// facotry\nexport { biFactory, zhiFactory, mobileBiFactory, mobileZhiFactory };\n\n// types\nexport type {\n  ClipboardPluginConfig,\n  ClipboardFilter,\n} from './utils/types';\n\n// custom\nexport {\n  ClipboardPad,\n};\nexport {\n  createClipboardManager,\n} from './utils/createClipboardManager';\nexport {\n  PasteMode,\n} from './utils/types';\n\n// other export for api compatibility\nexport {\n  CLIPBOARD_INSERT_FRAGMENT,\n  CLIPBOARD_SET_DECORATIONS,\n  CLIPBOARD_DEL_SELECTION,\n  CLIPBOARD_HIDE_PASTEPANEL,\n  CLIPBOARD_HIDE_CUSTOM_PASTEPANEL,\n  CLIPBOARD_MATCH_MODE,\n  CLIPBOARD_TEXT_MODE,\n\n  insertFragment,\n  setDecorations,\n  deleteAtRange,\n  hidePastePanel,\n  hideCustomPastePanel,\n  insertMatchFragment,\n  insertTextFragment,\n} from './bi/actions';\n// TODO: tree-shaking 不友好\nexport * as utils from './bi/utils';\nexport { copyNodes, normalizeFragment } from './bi/utils';\nexport { default as getHtmlFromValue } from './utils/getHtmlFromValue';\nexport { default as filterAndNormalize } from './utils/filterAndNormalize';\nexport { restructFragment } from './utils/restructFragment';\nexport { createOnCangjieCopyOrCut };\nexport { default as clipboardLatency } from './bi/latency';\n"],"file":"index.js"}