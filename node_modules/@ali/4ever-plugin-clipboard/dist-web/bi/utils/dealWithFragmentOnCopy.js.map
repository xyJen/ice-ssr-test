{"version":3,"sources":["../../../../src/bi/utils/dealWithFragmentOnCopy.ts"],"names":["isSelectionAtSameBlock","isAtStartOfParagraph","isAtEndOfParagraph","isSingleSection","unwrapSingleSection","dealWithFragmentOnCopy","props","controller","fragment","value","data","selectedCallout"],"mappings":"AACA,SACEA,sBADF,EAEEC,oBAFF,EAGEC,kBAHF,QAIO,kBAJP;AAKA,SACEC,eADF,EAEEC,mBAFF;AAUA,OAAO,SAASC,sBAAT,CAAgCC,KAAhC,EAAqE;AAAA,MAClEC,UADkE,GACzCD,KADyC,CAClEC,UADkE;AAAA,MACtDC,QADsD,GACzCF,KADyC,CACtDE,QADsD;;AAE1E,MACER,sBAAsB,CAACO,UAAD,CAAtB,IACAJ,eAAe,CAACK,QAAD,CADf,IAEA,EAAEP,oBAAoB,CAACM,UAAD,CAApB,IAAoCL,kBAAkB,CAACK,UAAD,CAAxD,CAFA,IAGA,CAACA,UAAU,CAACE,KAAX,CAAiBC,IAAjB,CAAsBC,eAJzB,EAKE;AACA;AACJ;AACA;AACA;AACI,WAAOP,mBAAmB,CAACI,QAAD,CAA1B;AACD;;AACD,SAAOA,QAAP;AACD","sourcesContent":["import { Controller, Document } from '@ali/4ever-cangjie';\nimport {\n  isSelectionAtSameBlock,\n  isAtStartOfParagraph,\n  isAtEndOfParagraph,\n} from '@ali/4ever-utils';\nimport {\n  isSingleSection,\n  unwrapSingleSection,\n} from './isParagraph';\n\nexport interface IDealWithFragmentOnCopyProps {\n  controller: Controller;\n  fragment: Document;\n}\n\nexport function dealWithFragmentOnCopy(props: IDealWithFragmentOnCopyProps) {\n  const { controller, fragment } = props;\n  if (\n    isSelectionAtSameBlock(controller) &&\n    isSingleSection(fragment) &&\n    !(isAtStartOfParagraph(controller) && isAtEndOfParagraph(controller)) &&\n    !controller.value.data.selectedCallout\n  ) {\n    /**\n     * 当选区在同一段落，但未选中整个段落时，筛除掉多余的数据。\n     * 如：选中部分列表，复制出来只是选中部分的文字，选中整个列表，复制出来是个列表项\n     * */\n    return unwrapSingleSection(fragment);\n  }\n  return fragment;\n}\n"],"file":"dealWithFragmentOnCopy.js"}