{"version":3,"sources":["../../../../src/bi/utils/getStartPoint.ts"],"names":["TextPoint","isEqual","PASTE_DECORATION","findStartBlockKey","block","nodes","key","getStartPoint","controller","value","decorations","document","dec","find","item","mark","type","startPoint","start","pointPath","getPath","startBlock","getNode","isFirstPointOfDocument","offset","create"],"mappings":"AAAA,SAA8BA,SAA9B,QAA+C,oBAA/C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,gBAAT;;AAGA,SAASC,iBAAT,CAA2BC,KAA3B,EAA0C;AACxC,MAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,WAAOD,KAAK,CAACE,GAAb;AACD,GAFD,MAEO;AACL,WAAOH,iBAAiB,CAACC,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAD,CAAxB;AACD;AACF;AAED;AACA;AACA;;;AAEA,eAAe,SAASE,aAAT,CACbC,UADa,EAEM;AAAA,0BACeA,UAAU,CAACC,KAD1B;AAAA,MACXC,WADW,qBACXA,WADW;AAAA,MACEC,QADF,qBACEA,QADF;AAEnB,MAAMC,GAAG,GAAGF,WAAW,CAACG,IAAZ,CAAiB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmBd,gBAAvB;AAAA,GAArB,CAAZ;AACA,MAAMe,UAAU,GAAGL,GAAH,oBAAGA,GAAG,CAAEM,KAAxB;;AACA,MAAID,UAAJ,EAAgB;AACd,QAAME,SAAS,GAAGR,QAAQ,CAACS,OAAT,CAAiBH,UAAU,CAACX,GAA5B,CAAlB;AACA,QAAMe,UAAU,GAAGV,QAAQ,CAACW,OAAT,CAAiBL,UAAU,CAACX,GAA5B,CAAnB;AACA,QAAMiB,sBAAsB,GAAGtB,OAAO,CAACkB,SAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,CAAZ,CAAP,IAA8BF,UAAU,CAACO,MAAX,KAAsB,CAAnF;;AACA,QAAID,sBAAJ,EAA4B;AAC1B,aAAON,UAAP;AACD;;AACD,QAAII,UAAJ,EAAgB;AACd,aAAOJ,UAAP;AACD;;AACD,WAAOjB,SAAS,CAACyB,MAAV,CAAiB;AACtBnB,MAAAA,GAAG,EAAEH,iBAAiB,CAACK,UAAU,CAACC,KAAX,CAAiBE,QAAlB,CADA;AAEtBa,MAAAA,MAAM,EAAE;AAFc,KAAjB,CAAP;AAID;;AACD,SAAOP,UAAP;AACD","sourcesContent":["import { Controller, Queries, TextPoint } from '@ali/4ever-cangjie';\nimport { isEqual } from 'lodash-es';\nimport { PASTE_DECORATION } from '../../utils/constants';\nimport { Point } from '../../utils/types';\n\nfunction findStartBlockKey(block): string {\n  if (!block.nodes) {\n    return block.key;\n  } else {\n    return findStartBlockKey(block.nodes[0]);\n  }\n}\n\n/**\n * @description 获取切换粘贴模式前光标所在的point\n * */\n\nexport default function getStartPoint(\n  controller: Controller,\n): Point | undefined {\n  const { decorations, document } = controller.value;\n  const dec = decorations.find(item => item.mark.type === PASTE_DECORATION);\n  const startPoint = dec?.start;\n  if (startPoint) {\n    const pointPath = document.getPath(startPoint.key);\n    const startBlock = document.getNode(startPoint.key);\n    const isFirstPointOfDocument = isEqual(pointPath, [0, 0]) && startPoint.offset === 0;\n    if (isFirstPointOfDocument) {\n      return startPoint;\n    }\n    if (startBlock) {\n      return startPoint;\n    }\n    return TextPoint.create({\n      key: findStartBlockKey(controller.value.document),\n      offset: 0,\n    });\n  }\n  return startPoint;\n}\n"],"file":"getStartPoint.js"}