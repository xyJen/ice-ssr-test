{"version":3,"sources":["../../../src/bi/index.tsx"],"names":["createOnCangjiePaste","createOnCangjieCopyOrCut","onCangjieInput","ClipboardPad","createOnAction","onKeyDown","createOnEditable","copyNodes","createGetClipboardData","key","commands","actions","biFactory","configs","clipboard","onCangjieCopyOrCut","onConstruct","controller","next","getClipboardPad","serializer","schema","strictSchema","queries","getClipboardData","onAction","onCangjieCopy","onCangjieCut","onCangjiePaste","renderEditable"],"mappings":";AACA,OAAOA,oBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,OAAOC,SAAP;AACA,OAAOC,gBAAP;AAEA,SAASC,SAAT;AACA,OAAOC,sBAAP;AACA,SAASC,GAAT;AACA,SAASC,QAAT;AACA,SAASC,OAAT;AAGA,OAAO,IAAMC,SAAoB,GAAG,SAAvBA,SAAuB,CAACC,OAAD,EAAa;AAC/C,MAAMC,SAAS,GAAID,OAAO,CAACC,SAAR,IAAqB,EAAxC;AACA,MAAMC,kBAAkB,GAAGd,wBAAwB,CAACa,SAAD,CAAnD;AAEA,SAAO;AACLE,IAAAA,WAAW,EAAE,qBAACC,UAAD,EAAyBC,IAAzB,EAAkC;AAC7Cf,MAAAA,YAAY,CAACgB,eAAb;AACEC,QAAAA,UAAU,EAAEH,UAAU,CAACG,UADzB;AAEEC,QAAAA,MAAM,EAAEJ,UAAU,CAACK;AAFrB,SAGMR,SAHN,GAIGA,SAAS,CAACL,GAJb;AAKA,aAAOS,IAAI,EAAX;AACD,KARI;AASLT,IAAAA,GAAG,EAAHA,GATK;AAULc,IAAAA,OAAO,EAAE;AACPhB,MAAAA,SAAS,EAATA,SADO;AAEPiB,MAAAA,gBAAgB,EAAEhB,sBAAsB,CAACM,SAAD;AAFjC,KAVJ;AAcLH,IAAAA,OAAO,EAAPA,OAdK;AAeLD,IAAAA,QAAQ,EAARA,QAfK;AAgBLe,IAAAA,QAAQ,EAAErB,cAAc,CAACU,SAAD,CAhBnB;AAiBLZ,IAAAA,cAAc,EAAdA,cAjBK;AAkBLG,IAAAA,SAAS,EAATA,SAlBK;AAmBLqB,IAAAA,aAAa,EAAEX,kBAnBV;AAoBLY,IAAAA,YAAY,EAAEZ,kBApBT;AAqBLa,IAAAA,cAAc,EAAE5B,oBAAoB,CAACc,SAAD,CArB/B;AAsBLe,IAAAA,cAAc,EAAEvB,gBAAgB,CAACQ,SAAD;AAtB3B,GAAP;AAwBD,CA5BM","sourcesContent":["import { BiFactory, Controller } from '@ali/4ever-cangjie';\nimport createOnCangjiePaste from './handlers/createOnCangjiePaste';\nimport createOnCangjieCopyOrCut from '../common/handlers/createOnCangjieCopyOrCut';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport ClipboardPad from '../utils/ClipboardPad';\nimport createOnAction from './handlers/onAction';\nimport onKeyDown from './handlers/onKeyDown';\nimport createOnEditable from './handlers/createOnEditable';\nimport { ClipboardPluginConfig } from '../utils/types';\nimport { copyNodes } from '../common/queries/copyNodes';\nimport createGetClipboardData from '../common/queries/getClipboardData';\nimport { key } from '../utils/meta';\nimport { commands } from './commands';\nimport { actions } from './actions';\n\n\nexport const biFactory: BiFactory = (configs) => {\n  const clipboard = (configs.clipboard || {}) as ClipboardPluginConfig;\n  const onCangjieCopyOrCut = createOnCangjieCopyOrCut(clipboard);\n\n  return {\n    onConstruct: (controller: Controller, next) => {\n      ClipboardPad.getClipboardPad({\n        serializer: controller.serializer,\n        schema: controller.strictSchema,\n        ...(clipboard as Partial<ClipboardPluginConfig>),\n      }, clipboard.key);\n      return next();\n    },\n    key,\n    queries: {\n      copyNodes,\n      getClipboardData: createGetClipboardData(clipboard),\n    },\n    actions,\n    commands,\n    onAction: createOnAction(clipboard),\n    onCangjieInput,\n    onKeyDown,\n    onCangjieCopy: onCangjieCopyOrCut,\n    onCangjieCut: onCangjieCopyOrCut,\n    onCangjiePaste: createOnCangjiePaste(clipboard),\n    renderEditable: createOnEditable(clipboard),\n  };\n};\n"],"file":"index.js"}