{"version":3,"sources":["../../../../src/bi/handlers/createOnCangjiePaste.ts"],"names":["insertFragment","insertMatchFragment","insertTextFragment","PasteMode","ClipboardErrorEnum","isDingDocs","decorateFragment","createOnCangjiePaste","clipboardConfig","onCangjiePaste","event","controller","next","clipboardData","mode","onError","pasteOperation","query","text","fragment","getTextFragment","run","match","getFragment","nativeEvent","console","warn","setTimeout","error","PASTE_FAILED"],"mappings":"AACA,SAASA,cAAT,EAAyBC,mBAAzB,EAA8CC,kBAA9C;AACA,SAAgCC,SAAhC;AACA,SAASC,kBAAT;AACA,SAASC,UAAT;AACA,SAASC,gBAAT;AAEA,eAAe,SAASC,oBAAT,CACbC,eADa,EAEa;AAC1B,SAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,UAA/B,EAA2CC,IAA3C,EAAiD;AACtD,QAAI,CAACF,KAAK,CAACG,aAAX,EAA0B;AACxB,aAAOD,IAAI,EAAX;AACD;;AAHqD,QAI9CE,IAJ8C,GAI5BN,eAJ4B,CAI9CM,IAJ8C;AAAA,QAIxCC,OAJwC,GAI5BP,eAJ4B,CAIxCO,OAJwC;;AAKtD,QAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B;AAEA;AACA,UAAMH,aAAa,GAAGF,UAAU,CAACM,KAAX,CAAiB,kBAAjB,EAAqCP,KAArC,CAAtB;;AACA,UAAI,CAACG,aAAL,EAAoB;AAClB;AACD;;AAED,cAAQC,IAAR;AACE,aAAKX,SAAS,CAACe,IAAf;AAAqB;AACnB,gBAAMC,QAAQ,GAAGN,aAAa,CAACO,eAAd,EAAjB;AACA,mBAAOT,UAAU,CAACU,GAAX,CAAe,UAAf,EAA2BnB,kBAAkB,CAACiB,QAAD,CAA7C,CAAP;AACD;;AACD,aAAKhB,SAAS,CAACmB,KAAf;AAAsB;AACpB,gBAAMH,SAAQ,GAAGN,aAAa,CAACU,WAAd,EAAjB;;AACA,mBAAOZ,UAAU,CAACU,GAAX,CAAe,UAAf,EAA2BpB,mBAAmB,CAACkB,SAAD,CAA9C,CAAP;AACD;;AACD;AAAS;AACP,gBAAIA,UAAQ,GAAGN,aAAa,CAACU,WAAd,EAAf;;AACA,gBAAI,CAACb,KAAK,CAACc,WAAP,IAAsB,CAACL,UAA3B,EAAqC;AACnCM,cAAAA,OAAO,CAACC,IAAR,CACE,kNADF;AAGD;;AACD,gBAAI,CAACrB,UAAU,CAACQ,aAAD,CAAf,EAAgC;AAC9BM,cAAAA,UAAQ,GAAGb,gBAAgB,CAACK,UAAD,EAAaQ,UAAb,CAA3B;AACD;;AACD,mBAAOR,UAAU,CAACU,GAAX,CAAe,UAAf,EAA2BrB,cAAc,CAACmB,UAAD,CAAzC,CAAP;AACD;AApBH;AAsBD,KA/BD;;AAgCA,QAAI;AACF,UAAIT,KAAK,CAACc,WAAV,EAAuB;AACrBR,QAAAA,cAAc;AACf,OAFD,MAEO;AACL;AACA;AACAW,QAAAA,UAAU,CAAC,YAAM;AACfX,UAAAA,cAAc;AACf,SAFS,CAAV;AAGD;AACF,KAVD,CAUE,OAAOY,KAAP,EAAmB;AACnB,UAAIb,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACX,kBAAkB,CAACyB,YAApB,EAAkCD,KAAlC,CAAP;AACD;;AACD,YAAOA,KAAP;AACD;AACF,GArDD;AAsDD","sourcesContent":["import { Plugin } from '@ali/4ever-cangjie';\nimport { insertFragment, insertMatchFragment, insertTextFragment } from '../actions';\nimport { ClipboardPluginConfig, PasteMode } from '../../utils/types';\nimport { ClipboardErrorEnum } from '../../utils/constants';\nimport { isDingDocs } from '../../utils/tester';\nimport { decorateFragment } from '../utils/decorateFragment';\n\nexport default function createOnCangjiePaste(\n  clipboardConfig: Partial<ClipboardPluginConfig>,\n): Plugin['onCangjiePaste'] {\n  return function onCangjiePaste(event, controller, next) {\n    if (!event.clipboardData) {\n      return next();\n    }\n    const { mode, onError } = clipboardConfig;\n    const pasteOperation = () => {\n      // 记录光标位置到decoration\n\n      // 读取粘贴板数据\n      const clipboardData = controller.query('getClipboardData', event);\n      if (!clipboardData) {\n        return;\n      }\n\n      switch (mode) {\n        case PasteMode.text: {\n          const fragment = clipboardData.getTextFragment();\n          return controller.run('onAction', insertTextFragment(fragment));\n        }\n        case PasteMode.match: {\n          const fragment = clipboardData.getFragment();\n          return controller.run('onAction', insertMatchFragment(fragment));\n        }\n        default: {\n          let fragment = clipboardData.getFragment();\n          if (!event.nativeEvent && !fragment) {\n            console.warn(\n              'Js has no clipboard read permission, you can set event clipboardData that jsapi gets.(See: https://pre-cangjie.alibaba-inc.com/document/advanced-topics/ccp#copy-and-paste-%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4)',\n            );\n          }\n          if (!isDingDocs(clipboardData)) {\n            fragment = decorateFragment(controller, fragment!);\n          }\n          return controller.run('onAction', insertFragment(fragment));\n        }\n      }\n    };\n    try {\n      if (event.nativeEvent) {\n        pasteOperation();\n      } else {\n        // 防止粘贴大量内容加载动画卡顿，等业务层ui更新后，再进行反序列化\n        // 使用 requestIdleCallback， 大文档中编辑器 idle 时间较少, 粘贴会导致 pasteOperation 操作堆积\n        setTimeout(() => {\n          pasteOperation();\n        });\n      }\n    } catch (error: any) {\n      if (onError) {\n        onError(ClipboardErrorEnum.PASTE_FAILED, error);\n      }\n      throw (error);\n    }\n  };\n}\n"],"file":"createOnCangjiePaste.js"}