{"version":3,"sources":["../../../../src/bi/commands/insertFragmentByClipboard.ts"],"names":["Commands","Selection","TextPoint","showClipboard","insertFragmentByClipboard","controller","fragment","query","command","insertBlock","type","value","document","selection","convertToTextPoints","convertedAnchor","anchor","startPath","getPath","key","startOffset","offset","insertFragment","focus","startNode","getNodeByPath","Number","isInteger","create","isTextPoint"],"mappings":"AAAA,SACEA,QADF,EAIEC,SAJF,EAKEC,SALF,QAMO,oBANP;AASA,SAASC,aAAT;AAGA,OAAO,SAASC,yBAAT,CACLC,UADK,EAELC,QAFK,EAGO;AACZ,MAAIA,QAAJ,EAAc;AACZ,QAAID,UAAU,CAACE,KAAX,CAAiB,kCAAjB,EAAqDD,QAArD,CAAJ,EAAoE;AAClED,MAAAA,UAAU,CAACG,OAAX,CAAmBR,QAAQ,CAACS,WAA5B,EAAyC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAzC;AACD;;AAHW,4BAIoBL,UAAU,CAACM,KAJ/B;AAAA,QAIJC,QAJI,qBAIJA,QAJI;AAAA,QAIMC,SAJN,qBAIMA,SAJN;;AAAA,gCAKwBA,SAAS,CAACC,mBAAV,CAA8BF,QAA9B,CALxB;AAAA,QAKIG,eALJ,yBAKJC,MALI;;AAMZ,QAAMC,SAAS,GAAGL,QAAQ,CAACM,OAAT,CAAiBH,eAAe,CAACI,GAAjC,CAAlB;AACA,QAAMC,WAAW,GAAGL,eAAe,CAACM,MAApC;AAEAhB,IAAAA,UAAU,CAACG,OAAX,CAAmBR,QAAQ,CAACsB,cAA5B,EAA4ChB,QAA5C,EATY,CAUZ;;AAVY,QAWJiB,KAXI,GAWMlB,UAAU,CAACM,KAAX,CAAiBE,SAXvB,CAWJU,KAXI;AAYZ,QAAMC,SAAS,GAAGnB,UAAU,CAACM,KAAX,CAAiBC,QAAjB,CAA0Ba,aAA1B,CAAwCR,SAAxC,CAAlB;;AAEA,QAAI,EAAEO,SAAS,IAAIE,MAAM,CAACC,SAAP,CAAiBP,WAAjB,CAAf,CAAJ,EAAmD;AACjD,aAAOf,UAAP;AACD;;AAED,QAAMW,MAAM,GAAGd,SAAS,CAAC0B,MAAV,CAAiB;AAC9BT,MAAAA,GAAG,EAAEK,SAAS,CAACL,GADe;AAE9BE,MAAAA,MAAM,EAAED;AAFsB,KAAjB,CAAf;;AAKA,QAAIJ,MAAM,QAAN,IAAAA,MAAM,CAAEa,WAAR,MAAyBN,KAAK,CAACM,WAAN,EAA7B,EAAkD;AAChDxB,MAAAA,UAAU,CAACG,OAAX,CAAmBL,aAAnB,EAAkCF,SAAS,CAAC2B,MAAV,CAAiB;AACjDZ,QAAAA,MAAM,EAANA,MADiD;AAEjDO,QAAAA,KAAK,EAALA;AAFiD,OAAjB,CAAlC;AAID;AACF;;AACD,SAAOlB,UAAP;AACD","sourcesContent":["import {\n  Commands,\n  Controller,\n  Document,\n  Selection,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport { setDecorations } from '../actions';\nimport { PASTE_DECORATION } from '../../utils/constants';\nimport { showClipboard } from './showClipboard';\n\n\nexport function insertFragmentByClipboard(\n  controller: Controller,\n  fragment: Document | null,\n): Controller {\n  if (fragment) {\n    if (controller.query('shouldInsertParagraphBeforePaste', fragment)) {\n      controller.command(Commands.insertBlock, { type: 'paragraph' });\n    }\n    const { document, selection } = controller.value;\n    const { anchor: convertedAnchor } = selection.convertToTextPoints(document);\n    const startPath = document.getPath(convertedAnchor.key);\n    const startOffset = convertedAnchor.offset;\n\n    controller.command(Commands.insertFragment, fragment);\n    // 这里是粘贴后的 focus\n    const { focus } = controller.value.selection;\n    const startNode = controller.value.document.getNodeByPath(startPath);\n\n    if (!(startNode && Number.isInteger(startOffset))) {\n      return controller;\n    }\n\n    const anchor = TextPoint.create({\n      key: startNode.key,\n      offset: startOffset,\n    });\n\n    if (anchor?.isTextPoint() && focus.isTextPoint()) {\n      controller.command(showClipboard, Selection.create({\n        anchor,\n        focus,\n      }));\n    }\n  }\n  return controller;\n}\n"],"file":"insertFragmentByClipboard.js"}