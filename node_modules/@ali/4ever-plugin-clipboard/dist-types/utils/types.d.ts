/**
 * @packageDocumentation
 * @module Plugin-ClipBoard
 */
import { Document, EdgePoint, Schema, TextPoint, Mo } from '@ali/4ever-cangjie';
export declare type Serializer = Mo;
export declare type Matcher = RegExp;
export interface ClipboardFilter {
    block?: {
        includes?: Matcher;
        excludes?: Matcher;
    };
    inline?: {
        includes?: Matcher;
        excludes?: Matcher;
    };
}
export declare type ClipboardPluginLocale = {
    pasteOptions?: string;
    textFormat?: string;
    matchFormat?: string;
    sourceFormat?: string;
    markdownToDoc?: string;
    notSupport?: string;
    shortcutKey?: string;
};
export declare enum PasteMode {
    source = "source",
    match = "match",
    text = "text"
}
export declare type ClipboardPluginConfig = {
    /**
     * 做多实例区分，传入同一个key，可以使用同一个示例。
     * 建议每个编辑器使用不同的key。
     */
    key?: string;
    /**
     * 序列化工具，模式是Mo。
     */
    serializer: Serializer;
    /**
     * 拷贝的时候，在 fragment 中过滤掉一些 block / inline 元素。
     */
    rules?: ClipboardFilter;
    /**
     * pi-serializer 里的 strictSchema
     */
    schema: Schema;
    /**
     * 从一些文档段落，拷贝过来的时候，是否忽略掉一些图片。
     * 这里主要处理本地文件，比如 Word  拷贝一下图文进来，本地文件是无法处理的。
     */
    shouldSkipImageURL?: (src: string) => boolean;
    /**
     * 粘贴方式面板配置开关，默认关闭
     */
    pastePanel?: boolean;
    locale?: ClipboardPluginLocale;
    onError?: Function;
    mode?: 'match' | 'text' | 'source';
    beforeInsertMarkdown?: (doc: Document) => [Document, any];
    afterInsertMarkdown?: (data: any) => void;
    /**
     * 默认开启 Mo 中严格Schema模式, Mo schema与Mo strictSchema两者区别:
     *
     *  Mo schema: 规则比较宽松, 目前仅有doucment rule及normalize
     *  Mo strictSchema: 不同插件针对相应不合法内容进行normalize处理，且会补充schema规则
     *
     * 具体参考mo/src/schema.ts及mo/src/strictSchema.ts文件
     */
    getContainer?: () => HTMLElement;
};
export declare type Point = TextPoint | EdgePoint;
export declare type ReceiveType = 'files' | 'fragment' | 'html' | 'text' | 'unknown';
export declare type ModelsMap = Map<string, object | number>;
export declare type ClipBoardBiPluginConfig = ClipboardPluginConfig | Record<string, any>;
