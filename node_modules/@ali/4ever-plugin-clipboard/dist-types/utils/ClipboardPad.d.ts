import { CangjieClipboardEvent, Controller, Document } from '@ali/4ever-cangjie';
import { ClipboardPluginConfig, ModelsMap } from './types';
import ClipboardData from './ClipboardData';
declare class ClipboardPad {
    static getCachedClipboardPad: (key?: string) => ClipboardPad;
    /**
     * 获得一个剪切板，使用配置数据作为 union 单位，针对不同的 config 实例返回不同的剪切板
     * @param config 编辑器的配置
     */
    static getClipboardPad(conf: ClipboardPluginConfig, key?: string): ClipboardPad;
    static createClipboardPad(config: ClipboardPluginConfig): ClipboardPad;
    /**
     * 剪切板配置
     */
    config: ClipboardPluginConfig;
    models?: ModelsMap;
    private constructor();
    /**
     * 读取剪切板数据，相同的 event 会读取到同一个实例
     * @param event
     */
    getClipboardData(event: ClipboardEvent | CangjieClipboardEvent): ClipboardData;
    /**
     * 读取剪切板缓存数据，切换不同粘贴模式下使用
     * @param event
     */
    getClipboardDataCache(): ClipboardData | null;
    /**
     * 拷贝一个 fragment
     * @param event 拷贝事件
     * @param fragment
     */
    copyFragment(event: ClipboardEvent, fragment: Document): void;
    initPluginModels(controller: Controller): void;
    /**
     * 获取所有插件内容的models map集合
     * @param
     */
    getPluginModels(controller: Controller): ModelsMap;
}
export default ClipboardPad;
