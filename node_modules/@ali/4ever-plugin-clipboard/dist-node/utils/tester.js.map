{"version":3,"sources":["../../../src/utils/tester.ts"],"names":["hasTextHtml","data","types","includes","MIME","TEXT_HTML","hasImage","isMicrosoftOffice","item","items","type","startsWith","getSizeofClipboardData","format","content","getData","APPLICATION_CANGJIE_FRAGMENT","APPLICATION_SLATE_FRAGMENT","APPLICATION_DING_SHEET","APPLICATION_GOOGLE_DOCS_CLIP","TEXT_PLAIN","blob","Blob","size","isDingDocs","html","domparser","DOMParser","root","parseFromString","clipboardDataNode","querySelector","DATA_CLIPBORAD_CANGJIE","body","firstElementChild","isDingSheet","isMicrosoftWordOrExcel","isMicrosoftPowerPoint","Boolean","isMicrosoftWord","isMicrosoftExcel","isGoogleDocs","isGoogleSheet","isShimoDocs","isYuqueDocs","isVsCode","APPLICATION_VSCODE"],"mappings":"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","sourcesContent":["import { DATA_CLIPBORAD_CANGJIE } from '@ali/4ever-cangjie';\nimport { mimeTypes as MIME } from '@ali/4ever-utils';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ClipboardData extends DataTransfer {}\n\nexport function hasTextHtml(data: ClipboardData): boolean {\n  return data.types.includes(MIME.TEXT_HTML);\n}\n\nexport function hasImage(data: ClipboardData): boolean {\n  // office 会注入一个 image 的数据\n  if (isMicrosoftOffice(data)) {\n    return false;\n  }\n  // files 不存在\n  if (!data.types.includes('Files')) {\n    return false;\n  }\n  for (const item of data.items) {\n    if (item.type.startsWith('image/')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function getSizeofClipboardData(\n  data: ClipboardData,\n  format?: string,\n): number {\n  let content = '';\n  if (format) {\n    content = data.getData(format);\n  } else {\n    content =\n      data.getData(MIME.TEXT_HTML) ||\n      data.getData(MIME.APPLICATION_CANGJIE_FRAGMENT) ||\n      data.getData(MIME.APPLICATION_SLATE_FRAGMENT) ||\n      data.getData(MIME.APPLICATION_DING_SHEET) ||\n      data.getData(MIME.APPLICATION_GOOGLE_DOCS_CLIP) ||\n      data.getData(MIME.TEXT_PLAIN);\n  }\n  const blob = new Blob([content]);\n  return blob.size;\n}\n\nexport function isDingDocs(data: ClipboardData): boolean {\n  // 仓颉编辑器\n  if (data.types.includes(MIME.APPLICATION_CANGJIE_FRAGMENT)) return true;\n  // Slate 编辑器\n  if (data.types.includes(MIME.APPLICATION_SLATE_FRAGMENT)) return true;\n  // 仓颉编辑器，有挂载 ASL 的 HTML\n  if (data.types.includes(MIME.TEXT_HTML)) {\n    const html = data.getData(MIME.TEXT_HTML);\n    const domparser = new DOMParser();\n    const root = domparser.parseFromString(html, 'text/html');\n\n    const clipboardDataNode = root.querySelector(`[${DATA_CLIPBORAD_CANGJIE}]`) as HTMLElement;\n    if (clipboardDataNode && root.body.firstElementChild === clipboardDataNode) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isDingSheet(data: ClipboardData): boolean {\n  return data.types.includes(MIME.APPLICATION_DING_SHEET);\n}\n\nexport function isMicrosoftOffice(data: ClipboardData): boolean {\n  return isMicrosoftWordOrExcel(data) || isMicrosoftPowerPoint(data);\n}\n\nexport function isMicrosoftWordOrExcel(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('xmlns:o=\"urn:schemas-microsoft-com:office:office\"'));\n}\n\nexport function isMicrosoftWord(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('xmlns:w=\"urn:schemas-microsoft-com:office:word\"'));\n}\n\nexport function isMicrosoftExcel(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('xmlns:x=\"urn:schemas-microsoft-com:office:excel\"'));\n}\n\nexport function isMicrosoftPowerPoint(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('<meta name=ProgId content=PowerPoint.Slide>'));\n}\n\nexport function isGoogleDocs(data: ClipboardData): boolean {\n  return data.types.includes(MIME.APPLICATION_GOOGLE_DOCS_CLIP);\n}\n\nexport function isGoogleSheet(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('<google-sheets-html-origin>'));\n}\n\nexport function isShimoDocs(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('data-shimo-docs'));\n}\n\nexport function isYuqueDocs(data: ClipboardData): boolean {\n  const html = data.getData(MIME.TEXT_HTML);\n  return Boolean(html?.includes('<meta name=\"source\" content=\"lake\"/>'));\n}\n\nexport function isVsCode(data: ClipboardData): boolean {\n  return data.types.includes(MIME.APPLICATION_VSCODE);\n}\n"],"file":"tester.js"}