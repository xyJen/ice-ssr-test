"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getHtmlFromValue;

var _everCangjie = require("@ali/4ever-cangjie");

function getHtmlFromValue(serializer, value) {
  const asl = serializer.valueToJsonML(value);
  const html = serializer.jsonMLToHTML(asl);
  const domParser = new DOMParser();
  const wrapper = domParser.parseFromString(html, 'text/html');
  const article = wrapper.getElementsByClassName('4ever-article')[0];
  const content = JSON.stringify(asl);

  if (article) {
    article.setAttribute(_everCangjie.DATA_CLIPBORAD_CANGJIE, content);
  }

  if (_everCangjie.environment.IS_MOBILE) {
    // 在 IOS 上复制内容，IOS 只会保留 text/html 类型的 mime type 内容，且会对 html 进行解析，清空掉 article 上挂载的 asl
    // 安卓统一与 IOS 相同处理
    // @ts-ignore
    const aslDom = window.document.createElement('image'); // 属性上挂载的 asl 在移动端往剪切板上写入数据时（copyFragment 方法），会被浏览器自动过滤掉，需要使用空的 image 标签再次做兜底

    aslDom.setAttribute(_everCangjie.DATA_CLIPBORAD_CANGJIE, content); // aslDom 必须作为第一个子元素且 userSelect 设为 none，否则由于 image 占位，在 im 中粘贴会产生两个空行

    aslDom.style.userSelect = 'none';
    aslDom.width = 0;
    aslDom.height = 0;
    article.appendChild(aslDom);

    if (article.children.length) {
      article.insertBefore(aslDom, article.children[0]);
    } else {
      article.appendChild(aslDom);
    }
  }

  return wrapper.body.innerHTML;
}
//# sourceMappingURL=getHtmlFromValue.js.map