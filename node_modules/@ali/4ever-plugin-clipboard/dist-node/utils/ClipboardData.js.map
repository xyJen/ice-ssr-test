{"version":3,"sources":["../../../src/utils/ClipboardData.ts"],"names":["MIME_TYPES","constants","cacheMimeTypes","MIME","APPLICATION_CANGJIE_FRAGMENT","TEXT_HTML","TEXT_PLAIN","ClipboardData","dropEffect","nativeData","effectAllowed","files","items","types","maybeMarkdown","includes","length","MARKDOWN_GRAMMER_REGEXP","test","getData","trimStart","APPLICATION_VSCODE","data","JSON","parse","mode","constructor","config","models","serializer","rules","schema","cangjieData","CangjieDataTransfer","create","fragment","parsedFragment","cacheId","receiveType","onError","getCacheId","type","Object","values","setData","clearData","format","setDragImage","image","x","y","hasData","getFragment","currentCacheId","encoded","transferUtils","decodeFragment","getParseFragment","normalizeFragment","e","ClipboardErrorEnum","PASTE_FAILED","console","error","logger","getTextFragment","text","document","textToValue","getMarkdownFragment","markdownToValue","getImages","exceptFileTypes","filter","tester","isMicrosoftOffice","dataFiles","images","i","file","startsWith","push","getFirstReceiveType","APPLICATION_SLATE_FRAGMENT","isEqual","getTextHtml","html","htmlToValue","replace","textValue","newFragment","isValidFragment","valueToJsonML","Value","warn"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,sBAAvB;AACA,MAAMC,cAAc,GAAG,CAACC,qBAAKC,4BAAN,EAAoCD,qBAAKE,SAAzC,EAAoDF,qBAAKG,UAAzD,CAAvB;AAEA;AACA;AACA;;AACA,MAAMC,aAAN,CAA4C;AAW1C,MAAIC,UAAJ,GAAiB;AACf,WAAO,KAAKC,UAAL,CAAgBD,UAAvB;AACD;;AAED,MAAIE,aAAJ,GAAoB;AAClB,WAAO,KAAKD,UAAL,CAAgBC,aAAvB;AACD;;AAED,MAAIC,KAAJ,GAAY;AACV,WAAO,KAAKF,UAAL,CAAgBE,KAAvB;AACD;;AAED,MAAIC,KAAJ,GAAY;AACV,WAAO,KAAKH,UAAL,CAAgBG,KAAvB;AACD;;AAED,MAAIC,KAAJ,GAAY;AACV,WAAO,KAAKJ,UAAL,CAAgBI,KAAvB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE,MAAIC,aAAJ,GAAoB;AAClB,QAAI,KAAKD,KAAL,CAAWE,QAAX,CAAoBZ,qBAAKC,4BAAzB,CAAJ,EAA4D;AAC1D,aAAO,KAAP;AACD;;AACD,QACE,KAAKS,KAAL,CAAWE,QAAX,CAAoBZ,qBAAKG,UAAzB,MACC,KAAKO,KAAL,CAAWG,MAAX,KAAsB,CAAtB,IACCC,mCAAwBC,IAAxB,CACE,CAAC,KAAKC,OAAL,CAAahB,qBAAKG,UAAlB,KAAiC,EAAlC,GAAuCc,SAAvC,IADF,CAFF,CADF,EAME;AACA,aAAO,IAAP;AACD;;AACD,QAAI,KAAKP,KAAL,CAAWE,QAAX,CAAoBZ,qBAAKkB,kBAAzB,CAAJ,EAAkD;AAChD,YAAMC,IAAI,GAAG,KAAKH,OAAL,CAAahB,qBAAKkB,kBAAlB,CAAb;;AACA,UAAI;AACF,YAAIE,IAAI,CAACC,KAAL,CAAWF,IAAX,EAAiBG,IAAjB,KAA0B,UAA9B,EAA0C;AACxC,iBAAO,IAAP;AACD;AACF,OAJD,CAIE,MAAM;AACN,eAAO,KAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAuBDC,EAAAA,WAAW,CAACjB,UAAD,EAA2BkB,MAA3B,EAA0DC,MAA1D,EAA8E;AAAA,SAnFhFnB,UAmFgF;AAAA,SAjFxEoB,UAiFwE;AAAA,SA/ExEC,KA+EwE;AAAA,SA7ExEC,MA6EwE;AAAA,SA3ExEH,MA2EwE;AAAA,SArBxEI,WAqBwE,GArB1DC,iCAAoBC,MAApB,EAqB0D;AAAA,SAhBjFC,QAgBiF,GAhBrD,IAgBqD;AAAA,SAXjFC,cAWiF,GAX/C,IAW+C;AAAA,SATjFC,OASiF,GATvE,EASuE;AAAA,SAJjFC,WAIiF;AAAA,SAFxEC,OAEwE;AACvF,SAAK9B,UAAL,GAAkBA,UAAlB;AACA,UAAM;AACJoB,MAAAA,UADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,MAHI;AAIJQ,MAAAA;AAJI,QAKFZ,MALJ;AAMA,SAAKE,UAAL,GAAkBA,UAAlB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKW,OAAL,GAAeA,OAAf;AAEA,SAAKF,OAAL,GAAe,KAAKG,UAAL,EAAf,CAduF,CAevF;;AACA,QAAI/B,UAAU,IAAI,EAAEA,UAAU,YAAYwB,gCAAxB,CAAlB,EAAgE;AAC9D,WAAK,MAAMQ,IAAX,IAAmBC,MAAM,CAACC,MAAP,CAAc3C,UAAd,CAAnB,EAA8C;AAC5C,aAAKgC,WAAL,GAAmB,KAAKA,WAAL,CAAiBY,OAAjB,CAAyBH,IAAzB,EAA+BhC,UAAU,CAACU,OAAX,CAAmBsB,IAAnB,CAA/B,CAAnB;AACD;AACF;AACF;;AAEDI,EAAAA,SAAS,CAACC,MAAD,EAAoC;AAC3C,SAAKrC,UAAL,CAAgBoC,SAAhB,CAA0BC,MAA1B;AACD;;AAED3B,EAAAA,OAAO,CAAC2B,MAAD,EAAyB;AAC9B,WAAO,KAAKrC,UAAL,CAAgBU,OAAhB,CAAwB2B,MAAxB,KAAmC,KAAKd,WAAL,CAAiBb,OAAjB,CAAyB2B,MAAzB,CAA1C;AACD;;AAEDF,EAAAA,OAAO,CAACE,MAAD,EAAiBxB,IAAjB,EAAqC;AAC1C,SAAKb,UAAL,CAAgBmC,OAAhB,CAAwBE,MAAxB,EAAgCxB,IAAhC;AACD;;AAEDyB,EAAAA,YAAY,CAACC,KAAD,EAAiBC,CAAjB,EAA4BC,CAA5B,EAA6C;AACvD,SAAKzC,UAAL,CAAgBsC,YAAhB,CAA6BC,KAA7B,EAAoCC,CAApC,EAAuCC,CAAvC;AACD;;AAEDC,EAAAA,OAAO,CAACL,MAAD,EAAiB;AACtB,WAAO,KAAKjC,KAAL,CAAWE,QAAX,CAAoB+B,MAApB,CAAP;AACD,GA7HyC,CA+H1C;;;AACAN,EAAAA,UAAU,GAAG;AACX,SAAI,MAAMC,IAAV,IAAkBvC,cAAlB,EAAkC;AAChC,YAAMoB,IAAI,GAAG,KAAKb,UAAL,CAAgBU,OAAhB,CAAwBsB,IAAxB,CAAb;;AACA,UAAInB,IAAJ,EAAU;AACR,eAAOA,IAAP;AACD;AACF;;AACD,WAAO,EAAP;AACD;AAED;AACF;AACA;AACA;;;AACE8B,EAAAA,WAAW,CAAC5B,KAAK,GAAG,IAAT,EAAgC;AACzC;AACA,UAAM6B,cAAc,GAAG,KAAKb,UAAL,EAAvB;;AAEA,QAAIa,cAAc,KAAK,KAAKhB,OAA5B,EAAqC;AACnC,UAAI,KAAKF,QAAT,EAAmB;AACjB,eAAO,KAAKA,QAAZ;AACD,OAHkC,CAInC;;;AACA,UAAIX,KAAK,IAAI,KAAKY,cAAlB,EAAkC;AAChC,eAAO,KAAKA,cAAZ;AACD;AACF;;AAED,QAAID,QAAyB,GAAG,IAAhC;;AACA,QAAI;AACF,YAAMmB,OAAO,GAAG,KAAKnC,OAAL,CAAahB,qBAAKC,4BAAlB,CAAhB;;AACA,UAAIkD,OAAJ,EAAa;AACX;AACAnB,QAAAA,QAAQ,GAAGoB,2BAAcC,cAAd,CAA6BF,OAA7B,CAAX;AACD;;AAED,UAAI9B,KAAK,IAAI,CAACW,QAAd,EAAwB;AACtB;AACAA,QAAAA,QAAQ,GAAG,KAAKsB,gBAAL,EAAX;AACD,OAVC,CAYF;;;AACA,UAAItB,QAAJ,EAAc;AACZA,QAAAA,QAAQ,GAAG,KAAKuB,iBAAL,CAAuBvB,QAAvB,CAAX;AACD;AACF,KAhBD,CAgBE,OAAOwB,CAAP,EAAe;AACf,UAAI,KAAKpB,OAAT,EAAkB;AAChBoB,QAAAA,CAAC,CAAClB,IAAF,GAASmB,8BAAmBC,YAA5B;AACA,aAAKtB,OAAL,CAAaoB,CAAb;AACD;;AACDG,MAAAA,OAAO,CAACC,KAAR,CAAcJ,CAAd;;AACAK,0BAAOD,KAAP,CAAaJ,CAAb;AACD,KAtCwC,CAuCzC;;;AACA,WAAOxB,QAAP;AACD;AAED;AACF;AACA;;;AACE8B,EAAAA,eAAe,GAAoB;AACjC,UAAMC,IAAI,GAAG,KAAK/C,OAAL,CAAahB,qBAAKG,UAAlB,KAAiC,EAA9C;AACA,UAAM;AAAE6D,MAAAA;AAAF,QAAe,KAAKtC,UAAL,CAAgBuC,WAAhB,CAA4BF,IAA5B,CAArB;AACA,WAAOC,QAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AACE,QAAME,mBAAN,GAA+C;AAC7C,UAAMH,IAAI,GAAG,KAAK/C,OAAL,CAAahB,qBAAKG,UAAlB,KAAiC,EAA9C;AACA,UAAM;AAAE6D,MAAAA;AAAF,QAAe,MAAM,KAAKtC,UAAL,CAAgByC,eAAhB,CAAgCJ,IAAhC,CAA3B;AACA,WAAOC,QAAP;AACD;AAED;AACF;AACA;;;AACEI,EAAAA,SAAS,GAAG;AACV,UAAMjD,IAAI,GAAG,KAAKb,UAAlB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYS,IAAlB;AACA,UAAMkD,eAAe,GAAI3D,KAAK,CAACE,QAAN,CAAe,OAAf,KAA2BF,KAAK,CAAC4D,MAAN,CAAahC,IAAI,IAAIA,IAAI,KAAK,OAA9B,CAA5B,IAAuE,EAA/F,CAHU,CAIV;;AACA,QAAKiC,MAAM,CAACC,iBAAP,CAAyBrD,IAAzB,KAAkCkD,eAAe,CAACxD,MAAhB,GAAyB,CAAhE,EAAoE;AAClE,aAAO,EAAP;AACD,KAPS,CAQV;;;AACA,UAAM4D,SAAS,GAAGtD,IAAI,CAACX,KAAvB;;AACA,QAAI,CAACiE,SAAL,EAAgB;AACd,aAAO,EAAP;AACD;;AAED,UAAMC,MAAc,GAAG,EAAvB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAW;AAAE9D,MAAAA;AAAF,QAAa4D,SAA7B,EAAwCE,CAAC,GAAG9D,MAA5C,EAAoD8D,CAAC,EAArD,EAAyD;AACvD,YAAMC,IAAI,GAAGH,SAAS,CAACE,CAAD,CAAtB,CADuD,CAEvD;;AACA,UAAIC,IAAI,IAAIA,IAAI,CAACtC,IAAL,CAAUuC,UAAV,CAAqB,QAArB,CAAZ,EAA4C;AAC1CH,QAAAA,MAAM,CAACI,IAAP,CAAYF,IAAZ;AACD;AACF;;AACD,WAAOF,MAAP;AACD;AAED;AACF;AACA;;;AACEK,EAAAA,mBAAmB,GAAG;AACpB,QAAI,KAAK5C,WAAT,EAAsB;AACpB,aAAO,KAAKA,WAAZ;AACD;;AACD,QAAI,KAAKzB,KAAL,CAAWE,QAAX,CAAoB,OAApB,KAAgC,CAAC2D,MAAM,CAACC,iBAAP,CAAyB,KAAKlE,UAA9B,CAArC,EAAgF;AAC9E,WAAK6B,WAAL,GAAmB,OAAnB;AACD,KAFD,MAEO,IAAI,KAAKa,OAAL,CAAahD,qBAAKC,4BAAlB,KACN,KAAK+C,OAAL,CAAahD,qBAAKgF,0BAAlB,CADE,EAC6C;AAClD,WAAK7C,WAAL,GAAmB,UAAnB;AACD,KAHM,MAGA,IAAI,KAAKa,OAAL,CAAahD,qBAAKE,SAAlB,CAAJ,EAAkC;AACvC,WAAKiC,WAAL,GAAmB,MAAnB;AACD,KAFM,MAEA,IAAI,KAAKa,OAAL,CAAahD,qBAAKG,UAAlB,CAAJ,EAAmC;AACxC,WAAKgC,WAAL,GAAmB,MAAnB;AACD,KAFM,MAEA;AACL,WAAKA,WAAL,GAAmB,SAAnB;AACD;;AACD,WAAO,KAAKA,WAAZ;AACD,GA7PyC,CA+P1C;;;AACA8C,EAAAA,OAAO,CACL3E,UADK,EAELkB,MAFK,EAGLC,MAHK,EAIL;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAAgCJ,MAAtC;AACA,WACE,KAAKlB,UAAL,KAAoBA,UAApB,IACA,KAAKoB,UAAL,KAAoBA,UADpB,IAEA,KAAKC,KAAL,KAAeA,KAFf,IAGA,KAAKC,MAAL,KAAgBA,MAHhB,IAIA,KAAKH,MAAL,KAAgBA,MALlB;AAOD;;AAEOyD,EAAAA,WAAR,GAAsB;AACpB,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAI,KAAKnC,OAAL,CAAahD,qBAAKkB,kBAAlB,CAAJ,EAA2C;AACzCiE,MAAAA,IAAI,GAAI,QAAO,oBAAO,KAAKnE,OAAL,CAAahB,qBAAKG,UAAlB,CAAP,CAAsC,eAArD;AACD,KAFD,MAEO;AACLgF,MAAAA,IAAI,GAAG,KAAKnE,OAAL,CAAahB,qBAAKE,SAAlB,CAAP;AACD;;AACD,WAAOiF,IAAP;AACD;;AAEO7B,EAAAA,gBAAR,GAA4C;AAC1C,QAAI,KAAKrB,cAAT,EAAyB;AACvB,aAAO,KAAKA,cAAZ;AACD;;AAED,QAAID,QAAyB,GAAG,IAAhC;;AAEA,QAAI,KAAKgB,OAAL,CAAahD,qBAAKE,SAAlB,CAAJ,EAAkC;AAChC,YAAMiF,IAAI,GAAG,KAAKD,WAAL,EAAb;;AACA,UAAIC,IAAJ,EAAU;AACR,cAAM;AAAEnB,UAAAA;AAAF,YAAe,KAAKtC,UAAL,CAAgB0D,WAAhB,CAA4BD,IAA5B,CAArB;AACAnD,QAAAA,QAAQ,GAAGgC,QAAX;AACA,eAAOhC,QAAP;AACD;AACF;;AAED,QAAI,KAAKgB,OAAL,CAAahD,qBAAKG,UAAlB,CAAJ,EAAmC;AACjC,UAAI4D,IAAI,GAAG,KAAK/C,OAAL,CAAahB,qBAAKG,UAAlB,CAAX;;AACA,UAAI4D,IAAJ,EAAU;AACR;AACR;AACA;AACA;AACQA,QAAAA,IAAI,GAAGA,IAAI,CAACsB,OAAL,CAAa,MAAb,EAAqB,MAArB,CAAP;AACA,cAAMC,SAAS,GAAG,KAAK5D,UAAL,CAAgBuC,WAAhB,CAA4BF,IAA5B,CAAlB;AACA/B,QAAAA,QAAQ,GAAGsD,SAAS,CAACtB,QAArB;AACD;AACF;;AACD,WAAOhC,QAAP;AACD;;AAEDuB,EAAAA,iBAAiB,CAACvB,QAAD,EAA+B;AAC9C,UAAMuD,WAAW,GAAG,iCAAmB;AACrCvD,MAAAA,QADqC;AAErCP,MAAAA,MAAM,EAAE,KAAKA,MAFwB;AAGrCE,MAAAA,KAAK,EAAE,KAAKA,KAHyB;AAIrCC,MAAAA,MAAM,EAAE,KAAKA;AAJwB,KAAnB,CAApB,CAD8C,CAO9C;;AACA,QAAI,KAAK4D,eAAL,CAAqBD,WAArB,CAAJ,EAAuC;AACrC,WAAKvD,QAAL,GAAgBuD,WAAhB;AACA,WAAKtD,cAAL,GAAsBsD,WAAtB;AACD;;AACD,WAAOA,WAAP;AACD;AAED;AACF;AACA;AACA;;;AACUC,EAAAA,eAAR,CAAwBxD,QAAxB,EAA4C;AAC1C,QAAI;AACF,WAAKN,UAAL,CAAgB+D,aAAhB,CAA8BC,mBAAM3D,MAAN,CAAa;AAAEiC,QAAAA,QAAQ,EAAEhC;AAAZ,OAAb,CAA9B;AACA,aAAO,IAAP;AACD,KAHD,CAGE,OAAO4B,KAAP,EAAc;AACd;AACAD,MAAAA,OAAO,CAACgC,IAAR,CAAa/B,KAAb;AACA,aAAO,KAAP;AACD;AACF;;AApVyC;;eAuV7BxD,a","sourcesContent":["import { CangjieDataTransfer, Document, Schema, transferUtils, Value, constants } from '@ali/4ever-cangjie';\nimport logger from '@ali/4ever-logger';\nimport { escape } from 'lodash-es';\nimport { mimeTypes as MIME } from '@ali/4ever-utils';\nimport * as tester from './tester';\nimport { ClipboardErrorEnum, MARKDOWN_GRAMMER_REGEXP } from './constants';\nimport filterAndNormalize from './filterAndNormalize';\nimport { ClipboardPluginConfig, ClipboardFilter, ModelsMap, ReceiveType, Serializer } from './types';\n\nconst { MIME_TYPES } = constants;\nconst cacheMimeTypes = [MIME.APPLICATION_CANGJIE_FRAGMENT, MIME.TEXT_HTML, MIME.TEXT_PLAIN];\n\n/**\n * 自定义剪切板数据，封装了 fragment 等一些编辑器数据\n */\nclass ClipboardData implements DataTransfer {\n  readonly nativeData: DataTransfer;\n\n  private readonly serializer: Serializer;\n\n  private readonly rules?: ClipboardFilter;\n\n  private readonly schema: Schema;\n\n  private readonly models?: ModelsMap;\n\n  get dropEffect() {\n    return this.nativeData.dropEffect;\n  }\n\n  get effectAllowed() {\n    return this.nativeData.effectAllowed;\n  }\n\n  get files() {\n    return this.nativeData.files;\n  }\n\n  get items() {\n    return this.nativeData.items;\n  }\n\n  get types() {\n    return this.nativeData.types;\n  }\n\n  /**\n   * 1. 仓颉内容不作 markdown 语法校验\n   * 2. 如果仅有 text/plain 内容 或 text 内容符合 markdown 语法，则可能为 Markdown 文本\n   * 3. 属于特殊情况，则可能为 Markdown 文本：\n   *   a. VSCode：MimeType === vscode-editor-data && mode === 'markdown'\n   */\n  get maybeMarkdown() {\n    if (this.types.includes(MIME.APPLICATION_CANGJIE_FRAGMENT)) {\n      return false;\n    }\n    if (\n      this.types.includes(MIME.TEXT_PLAIN) &&\n      (this.types.length === 1 ||\n        MARKDOWN_GRAMMER_REGEXP.test(\n          (this.getData(MIME.TEXT_PLAIN) || '')?.trimStart?.(),\n        ))\n    ) {\n      return true;\n    }\n    if (this.types.includes(MIME.APPLICATION_VSCODE)) {\n      const data = this.getData(MIME.APPLICATION_VSCODE);\n      try {\n        if (JSON.parse(data).mode === 'markdown') {\n          return true;\n        }\n      } catch {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  private readonly cangjieData = CangjieDataTransfer.create();\n\n  /**\n   * 剪切板中的 fragment\n   */\n  private fragment: Document | null = null;\n\n  /**\n   * 剪切板中解析出的 fragment\n   */\n  private parsedFragment: Document | null = null;\n\n  private cacheId = '';\n\n  /**\n   * 第一可接受类型\n   */\n  private receiveType?: ReceiveType;\n\n  private readonly onError?: Function;\n\n  constructor(nativeData: DataTransfer, config: ClipboardPluginConfig, models?: ModelsMap) {\n    this.nativeData = nativeData;\n    const {\n      serializer,\n      rules,\n      schema,\n      onError,\n    } = config;\n    this.serializer = serializer;\n    this.rules = rules;\n    this.schema = schema;\n    this.models = models;\n    this.onError = onError;\n\n    this.cacheId = this.getCacheId();\n    // 当传入的 nativeData 非仓颉类型时, 数据要 copy 一份，防止生命周期结束后被销毁\n    if (nativeData && !(nativeData instanceof CangjieDataTransfer)) {\n      for (const type of Object.values(MIME_TYPES)) {\n        this.cangjieData = this.cangjieData.setData(type, nativeData.getData(type));\n      }\n    }\n  }\n\n  clearData(format?: string | undefined): void {\n    this.nativeData.clearData(format);\n  }\n\n  getData(format: string): string {\n    return this.nativeData.getData(format) || this.cangjieData.getData(format);\n  }\n\n  setData(format: string, data: string): void {\n    this.nativeData.setData(format, data);\n  }\n\n  setDragImage(image: Element, x: number, y: number): void {\n    this.nativeData.setDragImage(image, x, y);\n  }\n\n  hasData(format: string) {\n    return this.types.includes(format);\n  }\n  \n  // event 支持 mutable 方式修改数据，需要通过 cacheId 校验 cache fragment 的有效性\n  getCacheId() {\n    for(const type of cacheMimeTypes) {\n      const data = this.nativeData.getData(type);\n      if (data) {\n        return data;\n      }\n    }\n    return '';\n  }\n\n  /**\n   * 读取剪切板中的 fragment\n   * @param parse 是否强制解析 html/text，默认为 true\n   */\n  getFragment(parse = true): Document | null {\n    // 如果有 fragment 缓存直接返回\n    const currentCacheId = this.getCacheId();\n\n    if (currentCacheId === this.cacheId) {\n      if (this.fragment) {\n        return this.fragment;\n      }\n      // 如果有解析后的 fragment 缓存直接返回\n      if (parse && this.parsedFragment) {\n        return this.parsedFragment;\n      }\n    }\n\n    let fragment: Document | null = null;\n    try {\n      const encoded = this.getData(MIME.APPLICATION_CANGJIE_FRAGMENT);\n      if (encoded) {\n        // 从仓颉编辑器拷贝\n        fragment = transferUtils.decodeFragment(encoded);\n      }\n\n      if (parse && !fragment) {\n        // 反序列化解析Html或Text\n        fragment = this.getParseFragment();\n      }\n\n      // 如果剪切板中有 fragment, 对复制源来自仓颉或其他的内容，统一收口做normalize处理\n      if (fragment) {\n        fragment = this.normalizeFragment(fragment);\n      }\n    } catch (e: any) {\n      if (this.onError) {\n        e.type = ClipboardErrorEnum.PASTE_FAILED;\n        this.onError(e);\n      }\n      console.error(e);\n      logger.error(e);\n    }\n    // 不解析返回 null\n    return fragment;\n  }\n\n  /**\n   * 读取剪切板中的 纯文本内容\n   */\n  getTextFragment(): Document | null {\n    const text = this.getData(MIME.TEXT_PLAIN) || '';\n    const { document } = this.serializer.textToValue(text);\n    return document;\n  }\n\n  /**\n   * 读取剪贴板中的纯文本内容，并返回以 Markdown 格式序列化的 Value\n   *\n   * @returns {Document}\n   */\n  async getMarkdownFragment(): Promise<Document> {\n    const text = this.getData(MIME.TEXT_PLAIN) || '';\n    const { document } = await this.serializer.markdownToValue(text);\n    return document;\n  }\n\n  /**\n   * 读取剪切板中的图片文件\n   */\n  getImages() {\n    const data = this.nativeData;\n    const { types } = data;\n    const exceptFileTypes = (types.includes('Files') && types.filter(type => type !== 'Files')) || [];\n    // ms word 拷贝的图文混合内容，mime type 会带上 file 类型，这里判断防止误处理。（wps 无该问题）\n    if ((tester.isMicrosoftOffice(data) && exceptFileTypes.length > 1)) {\n      return [];\n    }\n    // perf: file 较大，每次读取 data.files 耗费大量时间，使用临时变量缓存优化\n    const dataFiles = data.files;\n    if (!dataFiles) {\n      return [];\n    }\n\n    const images: File[] = [];\n    for (let i = 0, { length } = dataFiles; i < length; i++) {\n      const file = dataFiles[i];\n      // file 在一些特殊的情况是 undefined 🤷‍♀️\n      if (file && file.type.startsWith('image/')) {\n        images.push(file);\n      }\n    }\n    return images;\n  }\n\n  /**\n   * 获取第一个可接受的剪切板数据类型\n   */\n  getFirstReceiveType() {\n    if (this.receiveType) {\n      return this.receiveType;\n    }\n    if (this.types.includes('files') && !tester.isMicrosoftOffice(this.nativeData)) {\n      this.receiveType = 'files';\n    } else if (this.hasData(MIME.APPLICATION_CANGJIE_FRAGMENT)\n      || this.hasData(MIME.APPLICATION_SLATE_FRAGMENT)) {\n      this.receiveType = 'fragment';\n    } else if (this.hasData(MIME.TEXT_HTML)) {\n      this.receiveType = 'html';\n    } else if (this.hasData(MIME.TEXT_PLAIN)) {\n      this.receiveType = 'text';\n    } else {\n      this.receiveType = 'unknown';\n    }\n    return this.receiveType;\n  }\n\n  // 根据入参判断实例化对象是否相同\n  isEqual(\n    nativeData: DataTransfer,\n    config: ClipboardPluginConfig,\n    models?: ModelsMap,\n  ) {\n    const { serializer, rules, schema } = config;\n    return (\n      this.nativeData === nativeData &&\n      this.serializer === serializer &&\n      this.rules === rules &&\n      this.schema === schema &&\n      this.models === models\n    );\n  }\n\n  private getTextHtml() {\n    let html = '';\n    if (this.hasData(MIME.APPLICATION_VSCODE)) {\n      html = `<pre>${escape(this.getData(MIME.TEXT_PLAIN))}</pre><p></p>`;\n    } else {\n      html = this.getData(MIME.TEXT_HTML);\n    }\n    return html;\n  }\n\n  private getParseFragment(): Document | null {\n    if (this.parsedFragment) {\n      return this.parsedFragment;\n    }\n\n    let fragment: Document | null = null;\n\n    if (this.hasData(MIME.TEXT_HTML)) {\n      const html = this.getTextHtml();\n      if (html) {\n        const { document } = this.serializer.htmlToValue(html);\n        fragment = document;\n        return fragment;\n      }\n    }\n\n    if (this.hasData(MIME.TEXT_PLAIN)) {\n      let text = this.getData(MIME.TEXT_PLAIN);\n      if (text) {\n        /**\n         * 从 Excel 中复制表格，纯文本粘贴会附带 \\t,当 \\t 足够多时会造成渲染性能问题。\n         * https://notes.dingtalk.com/doc/E0Vzg7l3wnjKAzJe?orgId=16872003&dd_progress=false&showmenu=false\n         * */\n        text = text.replace(/\\t+/g, '    ');\n        const textValue = this.serializer.textToValue(text);\n        fragment = textValue.document;\n      }\n    }\n    return fragment;\n  }\n\n  normalizeFragment(fragment: Document): Document {\n    const newFragment = filterAndNormalize({\n      fragment,\n      models: this.models,\n      rules: this.rules,\n      schema: this.schema,\n    });\n    // 数据效验\n    if (this.isValidFragment(newFragment)) {\n      this.fragment = newFragment;\n      this.parsedFragment = newFragment;\n    }\n    return newFragment;\n  }\n\n  /**\n   * 拷贝过来的数据不一定完全可信，这里做一下数据效验\n   * @param fragment\n   */\n  private isValidFragment(fragment: Document) {\n    try {\n      this.serializer.valueToJsonML(Value.create({ document: fragment }));\n      return true;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(error);\n      return false;\n    }\n  }\n}\n\nexport default ClipboardData;\n"],"file":"ClipboardData.js"}