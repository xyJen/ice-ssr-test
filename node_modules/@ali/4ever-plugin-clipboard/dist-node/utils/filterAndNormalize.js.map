{"version":3,"sources":["../../../src/utils/filterAndNormalize.ts"],"names":["filterAndNormalize","props","fragment","models","rules","schema","controllerPid","get","result","data","copyFrom","value","Value","create","document","controller","Controller","plugins"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAUe,SAASA,kBAAT,CAA4BC,KAA5B,EAA6D;AAC1E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAsCJ,KAA5C;AACA,QAAMK,aAAa,GAAGH,MAAM,EAAEI,GAAR,CAAY,eAAZ,CAAtB;AAEA,MAAIC,MAAM,GAAGN,QAAb,CAJ0E,CAK1E;;AACA,MAAIE,KAAJ,EAAW;AACTI,IAAAA,MAAM,GAAG,4BAAeA,MAAf,EAAuBJ,KAAvB,CAAT;AACD,GARyE,CAU1E;;;AACA,MAAIE,aAAa,IAAIA,aAAa,KAAKJ,QAAQ,EAAEO,IAAV,CAAeC,QAAtD,EAAgE;AAC9DF,IAAAA,MAAM,GAAG,wCAAiBA,MAAjB,EAAyBL,MAAzB,CAAT;AACD,GAbyE,CAe1E;;;AACAK,EAAAA,MAAM,GAAG,kCAAkBA,MAAlB,CAAT,CAhB0E,CAkB1E;;AACA,QAAMG,KAAK,GAAGC,mBAAMC,MAAN,CAAa;AAAEC,IAAAA,QAAQ,EAAEN;AAAZ,GAAb,CAAd;;AACA,QAAMO,UAAU,GAAGC,wBAAWH,MAAX,CAAkB;AACnCF,IAAAA,KADmC;AAEnCM,IAAAA,OAAO,EAAE,CAAC;AAAEZ,MAAAA,MAAF;AAAUF,MAAAA,MAAM,EAAE;AAAlB,KAAD;AAF0B,GAAlB,CAAnB;;AAIA,SAAOY,UAAU,CAACJ,KAAX,CAAiBG,QAAxB;AACD","sourcesContent":["import { filterFragment } from './filter';\nimport { normalizeFragment } from './normalize';\nimport { restructFragment } from './restructFragment';\n\nimport { Controller, Document, Schema, Value } from '@ali/4ever-cangjie';\nimport { ClipboardFilter, ModelsMap } from './types';\n\ninterface IFilterAndNormalizeProps {\n  fragment: Document;\n  schema: Schema;\n  rules?: ClipboardFilter;\n  models?: ModelsMap;\n}\n\nexport default function filterAndNormalize(props: IFilterAndNormalizeProps) {\n  const { fragment, models, rules, schema } = props;\n  const controllerPid = models?.get('controllerPid');\n\n  let result = fragment;\n  // 业务层根据需要配置，粘贴要过滤的节点\n  if (rules) {\n    result = filterFragment(result, rules);\n  }\n\n  // 粘贴来自不同插件配置的编辑器时，处理framgment中不合法节点\n  if (controllerPid && controllerPid !== fragment?.data.copyFrom) {\n    result = restructFragment(result, models as ModelsMap);\n  }\n\n  // 使用Paste中的normalize对fragment进行处理\n  result = normalizeFragment(result);\n\n  // 使用 Mo中的strictSchema 对要粘贴的内容进行normalize处理\n  const value = Value.create({ document: result });\n  const controller = Controller.create({\n    value,\n    plugins: [{ schema, models: [] }],\n  });\n  return controller.value.document;\n}\n"],"file":"filterAndNormalize.js"}