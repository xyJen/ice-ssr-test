"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "zhiFactory", {
  enumerable: true,
  get: function () {
    return _index.zhiFactory;
  }
});
Object.defineProperty(exports, "biFactory", {
  enumerable: true,
  get: function () {
    return _index2.biFactory;
  }
});
Object.defineProperty(exports, "ClipboardPad", {
  enumerable: true,
  get: function () {
    return _ClipboardPad.default;
  }
});
Object.defineProperty(exports, "createOnCangjieCopyOrCut", {
  enumerable: true,
  get: function () {
    return _createOnCangjieCopyOrCut.default;
  }
});
Object.defineProperty(exports, "createClipboardManager", {
  enumerable: true,
  get: function () {
    return _createClipboardManager.createClipboardManager;
  }
});
Object.defineProperty(exports, "PasteMode", {
  enumerable: true,
  get: function () {
    return _types.PasteMode;
  }
});
Object.defineProperty(exports, "CLIPBOARD_INSERT_FRAGMENT", {
  enumerable: true,
  get: function () {
    return _actions.CLIPBOARD_INSERT_FRAGMENT;
  }
});
Object.defineProperty(exports, "CLIPBOARD_SET_DECORATIONS", {
  enumerable: true,
  get: function () {
    return _actions.CLIPBOARD_SET_DECORATIONS;
  }
});
Object.defineProperty(exports, "CLIPBOARD_DEL_SELECTION", {
  enumerable: true,
  get: function () {
    return _actions.CLIPBOARD_DEL_SELECTION;
  }
});
Object.defineProperty(exports, "CLIPBOARD_HIDE_PASTEPANEL", {
  enumerable: true,
  get: function () {
    return _actions.CLIPBOARD_HIDE_PASTEPANEL;
  }
});
Object.defineProperty(exports, "CLIPBOARD_HIDE_CUSTOM_PASTEPANEL", {
  enumerable: true,
  get: function () {
    return _actions.CLIPBOARD_HIDE_CUSTOM_PASTEPANEL;
  }
});
Object.defineProperty(exports, "CLIPBOARD_MATCH_MODE", {
  enumerable: true,
  get: function () {
    return _actions.CLIPBOARD_MATCH_MODE;
  }
});
Object.defineProperty(exports, "CLIPBOARD_TEXT_MODE", {
  enumerable: true,
  get: function () {
    return _actions.CLIPBOARD_TEXT_MODE;
  }
});
Object.defineProperty(exports, "insertFragment", {
  enumerable: true,
  get: function () {
    return _actions.insertFragment;
  }
});
Object.defineProperty(exports, "setDecorations", {
  enumerable: true,
  get: function () {
    return _actions.setDecorations;
  }
});
Object.defineProperty(exports, "deleteAtRange", {
  enumerable: true,
  get: function () {
    return _actions.deleteAtRange;
  }
});
Object.defineProperty(exports, "hidePastePanel", {
  enumerable: true,
  get: function () {
    return _actions.hidePastePanel;
  }
});
Object.defineProperty(exports, "hideCustomPastePanel", {
  enumerable: true,
  get: function () {
    return _actions.hideCustomPastePanel;
  }
});
Object.defineProperty(exports, "insertMatchFragment", {
  enumerable: true,
  get: function () {
    return _actions.insertMatchFragment;
  }
});
Object.defineProperty(exports, "insertTextFragment", {
  enumerable: true,
  get: function () {
    return _actions.insertTextFragment;
  }
});
Object.defineProperty(exports, "copyNodes", {
  enumerable: true,
  get: function () {
    return _utils.copyNodes;
  }
});
Object.defineProperty(exports, "normalizeFragment", {
  enumerable: true,
  get: function () {
    return _utils.normalizeFragment;
  }
});
Object.defineProperty(exports, "getHtmlFromValue", {
  enumerable: true,
  get: function () {
    return _getHtmlFromValue.default;
  }
});
Object.defineProperty(exports, "filterAndNormalize", {
  enumerable: true,
  get: function () {
    return _filterAndNormalize.default;
  }
});
Object.defineProperty(exports, "restructFragment", {
  enumerable: true,
  get: function () {
    return _restructFragment.restructFragment;
  }
});
Object.defineProperty(exports, "clipboardLatency", {
  enumerable: true,
  get: function () {
    return _latency.default;
  }
});
exports.utils = exports.mobileZhiFactory = exports.mobileBiFactory = void 0;

var _index = require("./zhi/index");

var _index2 = require("./bi/index");

var _ClipboardPad = _interopRequireDefault(require("./utils/ClipboardPad"));

var _createOnCangjieCopyOrCut = _interopRequireDefault(require("./common/handlers/createOnCangjieCopyOrCut"));

var _createClipboardManager = require("./utils/createClipboardManager");

var _types = require("./utils/types");

var _actions = require("./bi/actions");

var _utils = _interopRequireWildcard(require("./bi/utils"));

exports.utils = _utils;

var _getHtmlFromValue = _interopRequireDefault(require("./utils/getHtmlFromValue"));

var _filterAndNormalize = _interopRequireDefault(require("./utils/filterAndNormalize"));

var _restructFragment = require("./utils/restructFragment");

var _latency = _interopRequireDefault(require("./bi/latency"));

const mobileBiFactory = configs => (0, _index2.biFactory)(configs);

exports.mobileBiFactory = mobileBiFactory;

const mobileZhiFactory = configs => (0, _index.zhiFactory)(configs); // facotry


exports.mobileZhiFactory = mobileZhiFactory;
//# sourceMappingURL=index.js.map