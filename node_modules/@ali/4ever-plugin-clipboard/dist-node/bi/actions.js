"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.insertFragment = insertFragment;
exports.setDecorations = setDecorations;
exports.deleteAtRange = deleteAtRange;
exports.hidePastePanel = hidePastePanel;
exports.hideCustomPastePanel = hideCustomPastePanel;
exports.insertMatchFragment = insertMatchFragment;
exports.insertTextFragment = insertTextFragment;
exports.actions = exports.CLIPBOARD_TEXT_MODE = exports.CLIPBOARD_MATCH_MODE = exports.CLIPBOARD_HIDE_CUSTOM_PASTEPANEL = exports.CLIPBOARD_HIDE_PASTEPANEL = exports.CLIPBOARD_DEL_SELECTION = exports.CLIPBOARD_SET_DECORATIONS = exports.CLIPBOARD_INSERT_FRAGMENT = void 0;
const CLIPBOARD_INSERT_FRAGMENT = Symbol('CLIPBOARD_INSERT_FRAGMENT');
exports.CLIPBOARD_INSERT_FRAGMENT = CLIPBOARD_INSERT_FRAGMENT;
const CLIPBOARD_SET_DECORATIONS = Symbol('CLIPBOARD_SET_DECORATIONS');
exports.CLIPBOARD_SET_DECORATIONS = CLIPBOARD_SET_DECORATIONS;
const CLIPBOARD_DEL_SELECTION = Symbol('CLIPBOARD_DEL_SELECTION');
exports.CLIPBOARD_DEL_SELECTION = CLIPBOARD_DEL_SELECTION;
const CLIPBOARD_HIDE_PASTEPANEL = Symbol('CLIPBOARD_HIDE_PASTEPANEL');
exports.CLIPBOARD_HIDE_PASTEPANEL = CLIPBOARD_HIDE_PASTEPANEL;
const CLIPBOARD_HIDE_CUSTOM_PASTEPANEL = Symbol('CLIPBOARD_HIDE_CUSTOM_PASTEPANEL');
exports.CLIPBOARD_HIDE_CUSTOM_PASTEPANEL = CLIPBOARD_HIDE_CUSTOM_PASTEPANEL;
const CLIPBOARD_MATCH_MODE = Symbol('CLIPBOARD_MATCH_MODE');
exports.CLIPBOARD_MATCH_MODE = CLIPBOARD_MATCH_MODE;
const CLIPBOARD_TEXT_MODE = Symbol('CLIPBOARD_TEXT_MODE');
exports.CLIPBOARD_TEXT_MODE = CLIPBOARD_TEXT_MODE;

function insertFragment(fragment) {
  return {
    type: CLIPBOARD_INSERT_FRAGMENT,
    payload: {
      fragment
    }
  };
}

function setDecorations(decoration) {
  return {
    type: CLIPBOARD_SET_DECORATIONS,
    payload: {
      decoration
    }
  };
}

function deleteAtRange() {
  return {
    type: CLIPBOARD_DEL_SELECTION
  };
}

function hidePastePanel() {
  return {
    type: CLIPBOARD_HIDE_PASTEPANEL
  };
}

function hideCustomPastePanel() {
  return {
    type: CLIPBOARD_HIDE_CUSTOM_PASTEPANEL
  };
}

function insertMatchFragment(fragment) {
  return {
    type: CLIPBOARD_MATCH_MODE,
    payload: {
      fragment
    }
  };
}

function insertTextFragment(fragment) {
  return {
    type: CLIPBOARD_TEXT_MODE,
    payload: {
      fragment
    }
  };
}

const actions = {
  insertFragment,
  setDecorations,
  deleteAtRange,
  hidePastePanel,
  hideCustomPastePanel,
  insertMatchFragment,
  insertTextFragment
};
exports.actions = actions;
//# sourceMappingURL=actions.js.map