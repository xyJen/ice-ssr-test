{"version":3,"sources":["../../../../src/bi/utils/getStartPoint.ts"],"names":["findStartBlockKey","block","nodes","key","getStartPoint","controller","decorations","document","value","dec","find","item","mark","type","PASTE_DECORATION","startPoint","start","pointPath","getPath","startBlock","getNode","isFirstPointOfDocument","offset","TextPoint","create"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA,SAASA,iBAAT,CAA2BC,KAA3B,EAA0C;AACxC,MAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,WAAOD,KAAK,CAACE,GAAb;AACD,GAFD,MAEO;AACL,WAAOH,iBAAiB,CAACC,KAAK,CAACC,KAAN,CAAY,CAAZ,CAAD,CAAxB;AACD;AACF;AAED;AACA;AACA;;;AAEe,SAASE,aAAT,CACbC,UADa,EAEM;AACnB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA4BF,UAAU,CAACG,KAA7C;AACA,QAAMC,GAAG,GAAGH,WAAW,CAACI,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmBC,2BAA5C,CAAZ;AACA,QAAMC,UAAU,GAAGN,GAAG,EAAEO,KAAxB;;AACA,MAAID,UAAJ,EAAgB;AACd,UAAME,SAAS,GAAGV,QAAQ,CAACW,OAAT,CAAiBH,UAAU,CAACZ,GAA5B,CAAlB;AACA,UAAMgB,UAAU,GAAGZ,QAAQ,CAACa,OAAT,CAAiBL,UAAU,CAACZ,GAA5B,CAAnB;AACA,UAAMkB,sBAAsB,GAAG,qBAAQJ,SAAR,EAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,KAA8BF,UAAU,CAACO,MAAX,KAAsB,CAAnF;;AACA,QAAID,sBAAJ,EAA4B;AAC1B,aAAON,UAAP;AACD;;AACD,QAAII,UAAJ,EAAgB;AACd,aAAOJ,UAAP;AACD;;AACD,WAAOQ,uBAAUC,MAAV,CAAiB;AACtBrB,MAAAA,GAAG,EAAEH,iBAAiB,CAACK,UAAU,CAACG,KAAX,CAAiBD,QAAlB,CADA;AAEtBe,MAAAA,MAAM,EAAE;AAFc,KAAjB,CAAP;AAID;;AACD,SAAOP,UAAP;AACD","sourcesContent":["import { Controller, Queries, TextPoint } from '@ali/4ever-cangjie';\nimport { isEqual } from 'lodash-es';\nimport { PASTE_DECORATION } from '../../utils/constants';\nimport { Point } from '../../utils/types';\n\nfunction findStartBlockKey(block): string {\n  if (!block.nodes) {\n    return block.key;\n  } else {\n    return findStartBlockKey(block.nodes[0]);\n  }\n}\n\n/**\n * @description 获取切换粘贴模式前光标所在的point\n * */\n\nexport default function getStartPoint(\n  controller: Controller,\n): Point | undefined {\n  const { decorations, document } = controller.value;\n  const dec = decorations.find(item => item.mark.type === PASTE_DECORATION);\n  const startPoint = dec?.start;\n  if (startPoint) {\n    const pointPath = document.getPath(startPoint.key);\n    const startBlock = document.getNode(startPoint.key);\n    const isFirstPointOfDocument = isEqual(pointPath, [0, 0]) && startPoint.offset === 0;\n    if (isFirstPointOfDocument) {\n      return startPoint;\n    }\n    if (startBlock) {\n      return startPoint;\n    }\n    return TextPoint.create({\n      key: findStartBlockKey(controller.value.document),\n      offset: 0,\n    });\n  }\n  return startPoint;\n}\n"],"file":"getStartPoint.js"}