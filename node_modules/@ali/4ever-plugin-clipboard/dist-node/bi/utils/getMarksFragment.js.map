{"version":3,"sources":["../../../../src/bi/utils/getMarksFragment.ts"],"names":["EXCLUDE_STYLE","dealFirsIsList","controller","listItems","query","length","fistItem","command","Commands","setNodeByKey","key","type","data","getMarksFragment","fragment","startBlock","startPoint","extendBlock","value","document","pasteFromStart","isAtStartOfNode","isFirstParagraph","marks","newFragment","mapDescendants","child","Text","isText","childMarks","forEach","mark","removeMark","text","addMarks","set"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA,MAAMA,aAAa,GAAG,CAAC,IAAD,CAAtB,C,CAEA;;AACA,MAAMC,cAAc,GAAIC,UAAD,IAA4B;AACjD,QAAMC,SAAS,GAAGD,UAAU,CAACE,KAAX,CAAiB,gBAAjB,CAAlB;;AACA,MAAID,SAAS,EAAEE,MAAf,EAAuB;AACrB,UAAMC,QAAQ,GAAGH,SAAS,CAAC,CAAD,CAA1B;AACAG,IAAAA,QAAQ,IAAIJ,UAAU,CAACK,OAAX,CACVC,sBAASC,YADC,EAEVH,QAAQ,CAACI,GAFC,EAGV;AACEC,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,IAAI,EAAE,kBAAKN,QAAQ,CAACM,IAAd,EAAoB,MAApB;AAFR,KAHU,CAAZ;AAQD;AACF,CAbD;AAeA;AACA;AACA;AACA;;;AACe,SAASC,gBAAT,CACbX,UADa,EAEbY,QAFa,EAGH;AACV,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6B,4CAA4Bd,UAA5B,CAAnC;AACA,QAAMe,WAAW,GAAG,sCAAef,UAAU,CAACgB,KAAX,CAAiBC,QAAhC,EAA0CJ,UAA1C,CAApB;AACA,MAAI,CAACA,UAAL,EAAiB,OAAOD,QAAP;AACjB,QAAMM,cAAc,GAAGJ,UAAU,CAACK,eAAX,CAA2BN,UAA3B,CAAvB;AACA,MAAIO,gBAAgB,GAAG,IAAvB;;AACA,MAAIF,cAAJ,EAAoB;AAClBnB,IAAAA,cAAc,CAACC,UAAD,CAAd;AACD;;AACD,MAAKa,UAAD,CAAqBQ,KAAzB,EAAgC;AAC9B;AACA,UAAMC,WAAW,GAAGV,QAAQ,CAACW,cAAT,CAAyBC,KAAD,IAAW;AACrD,UAAIC,kBAAKC,MAAL,CAAYF,KAAZ,CAAJ,EAAwB;AACtB,cAAMG,UAAU,GAAGH,KAAK,CAACH,KAAzB;AACAM,QAAAA,UAAU,CAACC,OAAX,CAAoBC,IAAD,IAAU;AAC3BL,UAAAA,KAAK,GAAIA,KAAD,CAAgBM,UAAhB,CAA2B,CAA3B,EAA8BN,KAAK,CAACO,IAAN,CAAW5B,MAAzC,EAAiD0B,IAAjD,CAAR;AACD,SAFD,EAFsB,CAKtB;;AACA,eAAOX,cAAc,GACjBM,KADiB,GAEjBA,KAAK,CAACQ,QAAN,CAAe,CAAf,EAAkBR,KAAK,CAACO,IAAN,CAAW5B,MAA7B,EAAsCU,UAAD,CAAqBQ,KAA1D,CAFJ;AAGD,OATD,MASO,IAAIN,WAAJ,EAAiB;AACtB,YAAKS,KAAD,EAAkBf,IAAlB,KAA2B,WAA3B,IAA0CW,gBAA9C,EAAgE;AAC9DA,UAAAA,gBAAgB,GAAG,KAAnB;AACA,iBAAQI,KAAD,CACJS,GADI,CACA,MADA,EACQlB,WAAW,CAACN,IADpB,EAEJwB,GAFI,CAEA,MAFA,EAEQ,kBAAKlB,WAAW,CAACL,IAAjB,EAAuBZ,aAAvB,CAFR,CAAP;AAGD;;AACD,eAAO0B,KAAP;AACD,OARM,MAQA;AACL,eAAOA,KAAP;AACD;AACF,KArBmB,CAApB;AAsBA,WAAOF,WAAP;AACD,GAzBD,MAyBO;AACL,WAAOV,QAAP;AACD;AACF","sourcesContent":["import { Controller, Commands, Document, Text, Block } from '@ali/4ever-cangjie';\nimport { omit } from 'lodash-es';\nimport { getPointAndBlockOnSelection } from '@ali/4ever-utils';\nimport { getExtendBlock } from './getMatchFragment';\n\n// 不需要继承的样式\nconst EXCLUDE_STYLE = ['jc']\n\n// 列表内容切换为纯文本时，第一项序号不会被删除, 列表转为普通段落\nconst dealFirsIsList = (controller: Controller) => {\n  const listItems = controller.query(\"getCurrentItem\");\n  if (listItems?.length) {\n    const fistItem = listItems[0];\n    fistItem && controller.command(\n      Commands.setNodeByKey,\n      fistItem.key,\n      {\n        type: 'paragraph',\n        data: omit(fistItem.data, 'list'),\n      },\n    );\n  }\n};\n\n/**\n * @description 继承粘贴时光标所在位置 startBlock的style\n * @param {Document} fragment - 粘贴要插入的内存模型对象\n * */\nexport default function getMarksFragment(\n  controller: Controller,\n  fragment: Document,\n): Document {\n  const { startBlock, startPoint } = getPointAndBlockOnSelection(controller);\n  const extendBlock = getExtendBlock(controller.value.document, startBlock as Block);\n  if (!startBlock) return fragment;\n  const pasteFromStart = startPoint.isAtStartOfNode(startBlock);\n  let isFirstParagraph = true;\n  if (pasteFromStart) {\n    dealFirsIsList(controller);\n  }\n  if ((startBlock as Text).marks) {\n    // @ts-ignore\n    const newFragment = fragment.mapDescendants((child) => {\n      if (Text.isText(child)) {\n        const childMarks = child.marks;\n        childMarks.forEach((mark) => {\n          child = (child as Text).removeMark(0, child.text.length, mark);\n        });\n        // 如果粘贴位置是在段落开始位置，没有样式继承项时，只做样式清除\n        return pasteFromStart\n          ? child\n          : child.addMarks(0, child.text.length, (startBlock as Text).marks);\n      } else if (extendBlock) {\n        if ((child as Block)?.type === 'paragraph' && isFirstParagraph) {\n          isFirstParagraph = false;\n          return (child as Block)\n            .set('type', extendBlock.type)\n            .set('data', omit(extendBlock.data, EXCLUDE_STYLE));\n        }\n        return child;\n      } else {\n        return child;\n      }\n    });\n    return newFragment;\n  } else {\n    return fragment;\n  }\n}\n"],"file":"getMarksFragment.js"}