{"version":3,"sources":["../../../../src/bi/utils/isParagraph.ts"],"names":["isSection","block","Heading","isHeading","Paragraph","isParagraph","isSingleSection","fragment","firstBlock","nodes","length","unwrapSingleSection","node","Block","create","type","data","Document"],"mappings":";;;;;;;;;AAEA;;AACA;;AACA;;AAJA;AAMA;AACO,SAASA,SAAT,CAAmBC,KAAnB,EAAwC;AAC7C,SAAOC,2BAAQC,SAAR,CAAkBF,KAAlB,KAA4BG,+BAAUC,WAAV,CAAsBJ,KAAtB,CAAnC;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASK,eAAT,CAAyBC,QAAzB,EAAsD;AAC3D,QAAMC,UAAU,GAAGD,QAAQ,CAACE,KAAT,CAAe,CAAf,CAAnB;AACA,SACEF,QAAQ,CAACE,KAAT,CAAeC,MAAf,KAA0B,CAA1B,IAAgCV,SAAS,CAACQ,UAAD,CAD3C;AAGD;AAED;AACA;AACA;AACA;;;AACO,SAASG,mBAAT,CAA6BJ,QAA7B,EAA2D;AAChE,QAAMC,UAAU,GAAGD,QAAQ,CAACE,KAAT,CAAe,CAAf,CAAnB;;AACA,MAAIT,SAAS,CAACQ,UAAD,CAAb,EAA2B;AACzB,UAAMI,IAAI,GAAGC,mBAAMC,MAAN,CAAa;AACxB;AACAC,MAAAA,IAAI,EAAEP,UAAU,CAACO,IAFO;AAGxBC,MAAAA,IAAI,EAAE,EAHkB;AAIxBP,MAAAA,KAAK,EAAED,UAAU,CAACC;AAJM,KAAb,CAAb;;AAMA,WAAOQ,sBAASH,MAAT,CAAgB;AACrBL,MAAAA,KAAK,EAAE,CAACG,IAAD;AADc,KAAhB,CAAP;AAGD;;AACD,SAAOL,QAAP;AACD","sourcesContent":["// 这几个方法原先在 bi/src/plugins/common/utils/isParagraph.ts 中，依赖 heading、paragraph 插件。但没有其他地方用到，先直接迁移到 clipboard 中\n\nimport { Block, Document, Text } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { Heading } from '@ali/4ever-plugin-heading';\n\n// section可以看作paragraph、heading的超集\nexport function isSection(block: any): boolean {\n  return Heading.isHeading(block) || Paragraph.isParagraph(block);\n}\n\n/**\n * 检测 fragment 是否仅包含一个 普通段落或标题\n * section可以看作paragraph、heading的超集\n * @param fragment\n */\nexport function isSingleSection(fragment: Document): boolean {\n  const firstBlock = fragment.nodes[0];\n  return (\n    fragment.nodes.length === 1 && (isSection(firstBlock))\n  );\n}\n\n/**\n * 从 fragment 中把 single paragraph 解构出来\n * @param fragment\n */\nexport function unwrapSingleSection(fragment: Document): Document {\n  const firstBlock = fragment.nodes[0];\n  if (isSection(firstBlock)) {\n    const node = Block.create({\n      // 类型不变（例如复制标题的一部分，粘贴还是标题）\n      type: firstBlock.type,\n      data: {},\n      nodes: firstBlock.nodes as Text[],\n    });\n    return Document.create({\n      nodes: [node] as Block[],\n    });\n  }\n  return fragment;\n}\n"],"file":"isParagraph.js"}