"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSection = isSection;
exports.isSingleSection = isSingleSection;
exports.unwrapSingleSection = unwrapSingleSection;

var _everCangjie = require("@ali/4ever-cangjie");

var _everPluginParagraph = require("@ali/4ever-plugin-paragraph");

var _everPluginHeading = require("@ali/4ever-plugin-heading");

// 这几个方法原先在 bi/src/plugins/common/utils/isParagraph.ts 中，依赖 heading、paragraph 插件。但没有其他地方用到，先直接迁移到 clipboard 中
// section可以看作paragraph、heading的超集
function isSection(block) {
  return _everPluginHeading.Heading.isHeading(block) || _everPluginParagraph.Paragraph.isParagraph(block);
}
/**
 * 检测 fragment 是否仅包含一个 普通段落或标题
 * section可以看作paragraph、heading的超集
 * @param fragment
 */


function isSingleSection(fragment) {
  const firstBlock = fragment.nodes[0];
  return fragment.nodes.length === 1 && isSection(firstBlock);
}
/**
 * 从 fragment 中把 single paragraph 解构出来
 * @param fragment
 */


function unwrapSingleSection(fragment) {
  const firstBlock = fragment.nodes[0];

  if (isSection(firstBlock)) {
    const node = _everCangjie.Block.create({
      // 类型不变（例如复制标题的一部分，粘贴还是标题）
      type: firstBlock.type,
      data: {},
      nodes: firstBlock.nodes
    });

    return _everCangjie.Document.create({
      nodes: [node]
    });
  }

  return fragment;
}
//# sourceMappingURL=isParagraph.js.map