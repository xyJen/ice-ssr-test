"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createOnCangjiePaste;

var _actions = require("../actions");

var _types = require("../../utils/types");

var _constants = require("../../utils/constants");

var _tester = require("../../utils/tester");

var _decorateFragment = require("../utils/decorateFragment");

function createOnCangjiePaste(clipboardConfig) {
  return function onCangjiePaste(event, controller, next) {
    if (!event.clipboardData) {
      return next();
    }

    const {
      mode,
      onError
    } = clipboardConfig;

    const pasteOperation = () => {
      // 记录光标位置到decoration
      // 读取粘贴板数据
      const clipboardData = controller.query('getClipboardData', event);

      if (!clipboardData) {
        return;
      }

      switch (mode) {
        case _types.PasteMode.text:
          {
            const fragment = clipboardData.getTextFragment();
            return controller.run('onAction', (0, _actions.insertTextFragment)(fragment));
          }

        case _types.PasteMode.match:
          {
            const fragment = clipboardData.getFragment();
            return controller.run('onAction', (0, _actions.insertMatchFragment)(fragment));
          }

        default:
          {
            let fragment = clipboardData.getFragment();

            if (!event.nativeEvent && !fragment) {
              console.warn('Js has no clipboard read permission, you can set event clipboardData that jsapi gets.(See: https://pre-cangjie.alibaba-inc.com/document/advanced-topics/ccp#copy-and-paste-%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4)');
            }

            if (!(0, _tester.isDingDocs)(clipboardData)) {
              fragment = (0, _decorateFragment.decorateFragment)(controller, fragment);
            }

            return controller.run('onAction', (0, _actions.insertFragment)(fragment));
          }
      }
    };

    try {
      if (event.nativeEvent) {
        pasteOperation();
      } else {
        // 防止粘贴大量内容加载动画卡顿，等业务层ui更新后，再进行反序列化
        // 使用 requestIdleCallback， 大文档中编辑器 idle 时间较少, 粘贴会导致 pasteOperation 操作堆积
        setTimeout(() => {
          pasteOperation();
        });
      }
    } catch (error) {
      if (onError) {
        onError(_constants.ClipboardErrorEnum.PASTE_FAILED, error);
      }

      throw error;
    }
  };
}
//# sourceMappingURL=createOnCangjiePaste.js.map