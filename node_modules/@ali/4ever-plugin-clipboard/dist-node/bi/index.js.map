{"version":3,"sources":["../../../src/bi/index.tsx"],"names":["biFactory","configs","clipboard","onCangjieCopyOrCut","onConstruct","controller","next","ClipboardPad","getClipboardPad","serializer","schema","strictSchema","key","queries","copyNodes","getClipboardData","actions","commands","onAction","onCangjieInput","onKeyDown","onCangjieCopy","onCangjieCut","onCangjiePaste","renderEditable"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAGO,MAAMA,SAAoB,GAAIC,OAAD,IAAa;AAC/C,QAAMC,SAAS,GAAID,OAAO,CAACC,SAAR,IAAqB,EAAxC;AACA,QAAMC,kBAAkB,GAAG,uCAAyBD,SAAzB,CAA3B;AAEA,SAAO;AACLE,IAAAA,WAAW,EAAE,CAACC,UAAD,EAAyBC,IAAzB,KAAkC;AAC7CC,4BAAaC,eAAb,CAA6B;AAC3BC,QAAAA,UAAU,EAAEJ,UAAU,CAACI,UADI;AAE3BC,QAAAA,MAAM,EAAEL,UAAU,CAACM,YAFQ;AAG3B,WAAIT;AAHuB,OAA7B,EAIGA,SAAS,CAACU,GAJb;;AAKA,aAAON,IAAI,EAAX;AACD,KARI;AASLM,IAAAA,GAAG,EAAHA,SATK;AAULC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAATA,oBADO;AAEPC,MAAAA,gBAAgB,EAAE,+BAAuBb,SAAvB;AAFX,KAVJ;AAcLc,IAAAA,OAAO,EAAPA,gBAdK;AAeLC,IAAAA,QAAQ,EAARA,kBAfK;AAgBLC,IAAAA,QAAQ,EAAE,uBAAehB,SAAf,CAhBL;AAiBLiB,IAAAA,cAAc,EAAdA,uBAjBK;AAkBLC,IAAAA,SAAS,EAATA,kBAlBK;AAmBLC,IAAAA,aAAa,EAAElB,kBAnBV;AAoBLmB,IAAAA,YAAY,EAAEnB,kBApBT;AAqBLoB,IAAAA,cAAc,EAAE,mCAAqBrB,SAArB,CArBX;AAsBLsB,IAAAA,cAAc,EAAE,+BAAiBtB,SAAjB;AAtBX,GAAP;AAwBD,CA5BM","sourcesContent":["import { BiFactory, Controller } from '@ali/4ever-cangjie';\nimport createOnCangjiePaste from './handlers/createOnCangjiePaste';\nimport createOnCangjieCopyOrCut from '../common/handlers/createOnCangjieCopyOrCut';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport ClipboardPad from '../utils/ClipboardPad';\nimport createOnAction from './handlers/onAction';\nimport onKeyDown from './handlers/onKeyDown';\nimport createOnEditable from './handlers/createOnEditable';\nimport { ClipboardPluginConfig } from '../utils/types';\nimport { copyNodes } from '../common/queries/copyNodes';\nimport createGetClipboardData from '../common/queries/getClipboardData';\nimport { key } from '../utils/meta';\nimport { commands } from './commands';\nimport { actions } from './actions';\n\n\nexport const biFactory: BiFactory = (configs) => {\n  const clipboard = (configs.clipboard || {}) as ClipboardPluginConfig;\n  const onCangjieCopyOrCut = createOnCangjieCopyOrCut(clipboard);\n\n  return {\n    onConstruct: (controller: Controller, next) => {\n      ClipboardPad.getClipboardPad({\n        serializer: controller.serializer,\n        schema: controller.strictSchema,\n        ...(clipboard as Partial<ClipboardPluginConfig>),\n      }, clipboard.key);\n      return next();\n    },\n    key,\n    queries: {\n      copyNodes,\n      getClipboardData: createGetClipboardData(clipboard),\n    },\n    actions,\n    commands,\n    onAction: createOnAction(clipboard),\n    onCangjieInput,\n    onKeyDown,\n    onCangjieCopy: onCangjieCopyOrCut,\n    onCangjieCut: onCangjieCopyOrCut,\n    onCangjiePaste: createOnCangjiePaste(clipboard),\n    renderEditable: createOnEditable(clipboard),\n  };\n};\n"],"file":"index.js"}