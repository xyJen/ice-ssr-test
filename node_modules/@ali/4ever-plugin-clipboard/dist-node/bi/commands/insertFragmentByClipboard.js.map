{"version":3,"sources":["../../../../src/bi/commands/insertFragmentByClipboard.ts"],"names":["insertFragmentByClipboard","controller","fragment","query","command","Commands","insertBlock","type","document","selection","value","anchor","convertedAnchor","convertToTextPoints","startPath","getPath","key","startOffset","offset","insertFragment","focus","startNode","getNodeByPath","Number","isInteger","TextPoint","create","isTextPoint","showClipboard","Selection"],"mappings":";;;;;;;AAAA;;AASA;;AAGO,SAASA,yBAAT,CACLC,UADK,EAELC,QAFK,EAGO;AACZ,MAAIA,QAAJ,EAAc;AACZ,QAAID,UAAU,CAACE,KAAX,CAAiB,kCAAjB,EAAqDD,QAArD,CAAJ,EAAoE;AAClED,MAAAA,UAAU,CAACG,OAAX,CAAmBC,sBAASC,WAA5B,EAAyC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAzC;AACD;;AACD,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0BR,UAAU,CAACS,KAA3C;AACA,UAAM;AAAEC,MAAAA,MAAM,EAAEC;AAAV,QAA8BH,SAAS,CAACI,mBAAV,CAA8BL,QAA9B,CAApC;AACA,UAAMM,SAAS,GAAGN,QAAQ,CAACO,OAAT,CAAiBH,eAAe,CAACI,GAAjC,CAAlB;AACA,UAAMC,WAAW,GAAGL,eAAe,CAACM,MAApC;AAEAjB,IAAAA,UAAU,CAACG,OAAX,CAAmBC,sBAASc,cAA5B,EAA4CjB,QAA5C,EATY,CAUZ;;AACA,UAAM;AAAEkB,MAAAA;AAAF,QAAYnB,UAAU,CAACS,KAAX,CAAiBD,SAAnC;AACA,UAAMY,SAAS,GAAGpB,UAAU,CAACS,KAAX,CAAiBF,QAAjB,CAA0Bc,aAA1B,CAAwCR,SAAxC,CAAlB;;AAEA,QAAI,EAAEO,SAAS,IAAIE,MAAM,CAACC,SAAP,CAAiBP,WAAjB,CAAf,CAAJ,EAAmD;AACjD,aAAOhB,UAAP;AACD;;AAED,UAAMU,MAAM,GAAGc,uBAAUC,MAAV,CAAiB;AAC9BV,MAAAA,GAAG,EAAEK,SAAS,CAACL,GADe;AAE9BE,MAAAA,MAAM,EAAED;AAFsB,KAAjB,CAAf;;AAKA,QAAIN,MAAM,EAAEgB,WAAR,MAAyBP,KAAK,CAACO,WAAN,EAA7B,EAAkD;AAChD1B,MAAAA,UAAU,CAACG,OAAX,CAAmBwB,4BAAnB,EAAkCC,uBAAUH,MAAV,CAAiB;AACjDf,QAAAA,MADiD;AAEjDS,QAAAA;AAFiD,OAAjB,CAAlC;AAID;AACF;;AACD,SAAOnB,UAAP;AACD","sourcesContent":["import {\n  Commands,\n  Controller,\n  Document,\n  Selection,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport { setDecorations } from '../actions';\nimport { PASTE_DECORATION } from '../../utils/constants';\nimport { showClipboard } from './showClipboard';\n\n\nexport function insertFragmentByClipboard(\n  controller: Controller,\n  fragment: Document | null,\n): Controller {\n  if (fragment) {\n    if (controller.query('shouldInsertParagraphBeforePaste', fragment)) {\n      controller.command(Commands.insertBlock, { type: 'paragraph' });\n    }\n    const { document, selection } = controller.value;\n    const { anchor: convertedAnchor } = selection.convertToTextPoints(document);\n    const startPath = document.getPath(convertedAnchor.key);\n    const startOffset = convertedAnchor.offset;\n\n    controller.command(Commands.insertFragment, fragment);\n    // 这里是粘贴后的 focus\n    const { focus } = controller.value.selection;\n    const startNode = controller.value.document.getNodeByPath(startPath);\n\n    if (!(startNode && Number.isInteger(startOffset))) {\n      return controller;\n    }\n\n    const anchor = TextPoint.create({\n      key: startNode.key,\n      offset: startOffset,\n    });\n\n    if (anchor?.isTextPoint() && focus.isTextPoint()) {\n      controller.command(showClipboard, Selection.create({\n        anchor,\n        focus,\n      }));\n    }\n  }\n  return controller;\n}\n"],"file":"insertFragmentByClipboard.js"}