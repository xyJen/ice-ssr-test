"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zhiFactory = void 0;

var _createOnCangjieCopyOrCut = _interopRequireDefault(require("../common/handlers/createOnCangjieCopyOrCut"));

var _meta = require("../utils/meta");

var _debug = _interopRequireDefault(require("debug"));

var _queries = require("./queries");

var _createOnEditable = _interopRequireDefault(require("./handlers/createOnEditable"));

const warn = (0, _debug.default)('EDITOR:CANGJIE:PLUGIN');
warn.log = console.warn.bind(console);

const zhiFactory = configs => {
  const {
    clipboard = {}
  } = configs;
  const onCangjieCopyOrCut = (0, _createOnCangjieCopyOrCut.default)(clipboard);
  return {
    key: _meta.key,
    queries: _queries.queries,

    onCopy(event, controller, next) {
      if (!event) {
        return;
      }

      if (controller.readOnly && !controller.canCopy) {
        event.preventDefault();
        warn('Copy command is prohibited.');
        return;
      }

      const {
        selection
      } = controller.value;

      if (!selection) {
        return;
      } // 如果光标重叠，则不处理
      // Zhi 的交互和 Bi 不一样，在一些 embed 元素中会有一些文字，如果处理了 collapsed 选区，则无法拷贝内部文字，这里
      // 我们限制如果拷贝的是块级元素，则必须有 expand 选区


      if (selection.isCollapsed) {
        return;
      }

      next();
    },

    onCangjieCopy: onCangjieCopyOrCut,
    renderEditable: (0, _createOnEditable.default)()
  };
};

exports.zhiFactory = zhiFactory;
//# sourceMappingURL=index.js.map