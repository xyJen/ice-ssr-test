{"version":3,"sources":["../../../../src/plugins/imTag/index.tsx"],"names":["React","ImTagPlugin","zhiTagFactory","tagFactory","ImTagContainer","IMTAG_MEASURE_STRING","createZhiImTagPlugin","config","imTagConfig","imTag","locale","imFrom","jumpToConversition","tagType","renderNode","props","node","data","height","width","metadata","imTitle","cid","onClick"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAC5B,SAASC,WAAT,QAA2C,mBAA3C;AACA,SAASC,aAAa,IAAIC,UAA1B,QAA4C,oBAA5C;IAEQC,c,GAAyCH,W,CAAzCG,c;IAAgBC,oB,GAAyBJ,W,CAAzBI,oB;AACxB,IAAMC,oBAAoB,GAAGH,UAAU,CAAC,UAACI,MAAD,EAA2C;AACjF,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAA3B;;AADiF,aAEPD,WAAW,IAAI,EAFR;AAAA,yBAEzEE,MAFyE;AAAA,MAEzEA,MAFyE,4BAEhE;AAAEC,IAAAA,MAAM,EAAEN;AAAV,GAFgE;AAAA,MAE9BO,kBAF8B,QAE9BA,kBAF8B;;AAGjF,SAAO;AACLC,IAAAA,OAAO,EAAE,IADJ;AAELC,IAAAA,UAAU,EAAE,oBAACC,KAAD,EAA4B;AACtC,UAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AADsC,kBAEFA,IAAI,CAACC,IAFH;AAAA,UAE9BC,MAF8B,SAE9BA,MAF8B;AAAA,UAEtBC,KAFsB,SAEtBA,KAFsB;AAAA,UAEfC,QAFe,SAEfA,QAFe;;AAAA,kBAGRA,QAAQ,IAAI,EAHJ;AAAA,gCAG9BC,OAH8B;AAAA,UAG9BA,OAH8B,8BAGpB,EAHoB;AAAA,UAGhBC,GAHgB,SAGhBA,GAHgB;;AAItC,UAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,YAAIX,kBAAkB,IAAIU,GAA1B,EAA+BV,kBAAkB,CAACU,GAAD,CAAlB;AAChC,OAFD;;AAGA,0BACE,eAAC,cAAD;AACE,QAAA,KAAK,EAAEH,KADT;AAEE,QAAA,MAAM,EAAED,MAFV;AAGE,QAAA,IAAI,EAAKR,MAAM,CAACC,MAAZ,SAAsBU,OAH5B;AAIE,QAAA,OAAO,EAAEE;AAJX,QADF;AAQD;AAjBI,GAAP;AAmBD,CAtBsC,CAAvC;AAwBA,eAAejB,oBAAf","sourcesContent":["import React from 'react';\nimport { RenderNodeProps, Inline } from '@ali/4ever-cangjie';\nimport { ImTagPlugin, ImTagDataType } from '@ali/4ever-bamboo';\nimport { zhiTagFactory as tagFactory } from '@ali/4ever-factory';\n\nconst { ImTagContainer, IMTAG_MEASURE_STRING } = ImTagPlugin;\nconst createZhiImTagPlugin = tagFactory((config: { imTag: ZhiImTagConfigType }) => {\n  const imTagConfig = config.imTag;\n  const { locale = { imFrom: IMTAG_MEASURE_STRING }, jumpToConversition } = imTagConfig || {};\n  return {\n    tagType: 'im',\n    renderNode: (props: RenderNodeProps) => {\n      const node = props.node as Inline;\n      const { height, width, metadata } = node.data as ImTagDataType;\n      const { imTitle = '', cid } = metadata || {};\n      const onClick = () => {\n        if (jumpToConversition && cid) jumpToConversition(cid);\n      };\n      return (\n        <ImTagContainer\n          width={width}\n          height={height}\n          text={`${locale.imFrom} ${imTitle}`}\n          onClick={onClick}\n        />\n      );\n    },\n  };\n});\n\nexport default createZhiImTagPlugin;\n\nexport type ZhiImTagConfigType = {\n  locale?: {\n    imFrom: string; // 来至会话-国际化\n  };\n  jumpToConversition?: (cid: string) => void;\n};\n"],"file":"index.js"}