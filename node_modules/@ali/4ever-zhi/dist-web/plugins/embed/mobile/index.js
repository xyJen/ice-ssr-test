import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { EmbedPlugin } from '@ali/4ever-bamboo';
import { moFactory } from '@ali/4ever-plugin-embed';
var FileTypeMap = EmbedPlugin.FileTypeMap,
    MobileEmbedCard = EmbedPlugin.MobileEmbedCard,
    EmbedFailedCard = EmbedPlugin.EmbedFailedCard;
export default function createEmbedPlugin(config) {
  var renderPreview = function renderPreview(props) {
    // 移动端除了音视频，其他的都是卡片
    return renderCard(props);
  };

  var renderCard = function renderCard(props) {
    var node = props.node;
    var data = node.data;
    var src = data.src,
        name = data.name,
        type = data.type,
        size = data.size;
    var onPreview = config.embed.onPreview;
    return /*#__PURE__*/_createElement(MobileEmbedCard, {
      name: name,
      onPreview: onPreview,
      src: src,
      type: type,
      size: size
    });
  };

  return _extends({}, moFactory({}), {
    renderNode: function renderNode(props, _, next) {
      var node = props.node;

      if (node.type !== 'embed' || node.data.type === FileTypeMap.Video || node.data.type === FileTypeMap.Audio) {
        return next();
      }

      var attributes = props.attributes;
      var data = node.data;
      var viewType = data.viewType,
          errorType = data.errorType;

      if (errorType) {
        var _config$embed;

        return /*#__PURE__*/_createElement(EmbedFailedCard, {
          node: node,
          locale: (config == null ? void 0 : (_config$embed = config.embed) == null ? void 0 : _config$embed.locale) || {}
        });
      }

      return /*#__PURE__*/_createElement("div", attributes, viewType === 'preview' ? renderPreview(props) : renderCard(props));
    }
  });
}
//# sourceMappingURL=index.js.map