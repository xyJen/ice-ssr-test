import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { EmbedPlugin } from '@ali/4ever-bamboo';
import Audio from "./audio";
var EmbedFailedCard = EmbedPlugin.EmbedFailedCard;
export default function createRenderNode(config) {
  var audioConfig = config.audio || {};
  var _audioConfig$locale = audioConfig.locale,
      audioLocaleConfig = _audioConfig$locale === void 0 ? {} : _audioConfig$locale,
      downloadFile = audioConfig.downloadFile,
      onMediaLoadSuccess = audioConfig.onMediaLoadSuccess,
      onMediaLoadError = audioConfig.onMediaLoadError,
      transformAudioURL = audioConfig.transformAudioURL,
      allowDownload = audioConfig.allowDownload,
      onPreview = audioConfig.onPreview;
  return {
    embed: function embed(props, controller, next) {
      var node = props.node;

      if (node.data.type === 'audio' && node.data.errorType) {
        return /*#__PURE__*/_createElement(EmbedFailedCard, {
          node: node,
          locale: audioLocaleConfig
        });
      }

      if (node.data.type === 'audio' && node.data.src) {
        return /*#__PURE__*/_createElement(Audio, _extends({}, props, {
          controller: controller,
          onDownload: downloadFile,
          locale: audioLocaleConfig,
          onMediaLoadSuccess: onMediaLoadSuccess,
          onMediaLoadError: onMediaLoadError,
          transformAudioURL: transformAudioURL,
          allowDownload: allowDownload,
          onPreview: onPreview
        }));
      }

      return next();
    }
  };
}
//# sourceMappingURL=createRenderNode.js.map