import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useUserData } from '@ali/4ever-cangjie';
import { HeadingGroupPlugin } from '@ali/4ever-bamboo';
import styled from 'styled-components';
var Title = HeadingGroupPlugin.Title,
    Content = HeadingGroupPlugin.Content,
    actions = HeadingGroupPlugin.actions;
var toggleFold = actions.toggleFold;
var ContentBox = /*#__PURE__*/styled(Content)([""]);
var TitleBox = /*#__PURE__*/styled(Title)([""]);
var TitleContent = /*#__PURE__*/styled.div([""]);
var GroupBox = /*#__PURE__*/styled.div([""]);

var Group = function Group(props) {
  var node = props.node,
      controller = props.controller,
      attributes = props.attributes,
      config = props.config,
      children = props.children;
  var _config$disableFold = config.disableFold,
      disableFold = _config$disableFold === void 0 ? false : _config$disableFold;
  var fold = useUserData(node, 'fold') || false;
  var handleFoldChange = React.useCallback(function (_fold) {
    var first = node.nodes[0];
    controller.run('onAction', toggleFold({
      node: first,
      fold: _fold
    }));
  }, [controller, node]); // 切割议题的标题和内容块

  var titleNode;
  var contentNodes;

  if (Array.isArray(children) && children.length >= 1) {
    titleNode = children[0];
    contentNodes = children.slice(1);
  } else {
    return /*#__PURE__*/_createElement(React.Fragment, null, children);
  }

  return /*#__PURE__*/_createElement(GroupBox, _extends({}, attributes, {
    "data-name": "heading-group",
    "data-type": node.type,
    "data-foldable": true,
    "data-cangjie-group-block": true
  }), /*#__PURE__*/_createElement(TitleBox, {
    dataName: "heading-group-title",
    fold: fold,
    onChange: handleFoldChange,
    disabled: disableFold
  }, /*#__PURE__*/_createElement(TitleContent, {
    "data-name": "heading-group-title-content"
  }, titleNode)), contentNodes.length > 0 && /*#__PURE__*/_createElement(ContentBox, {
    dataName: "heading-group-content",
    fold: !disableFold && fold
  }, contentNodes));
};

Group.displayName = 'Group';
export default Group;
//# sourceMappingURL=group.js.map