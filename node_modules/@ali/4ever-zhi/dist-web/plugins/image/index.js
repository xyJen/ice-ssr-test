import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { isEmpty } from 'lodash-es';
import { ImagePlugin } from '@ali/4ever-bamboo';
import Image from "./image";
import createRenderEditable from "./createRenderEditable";
import { moFactory } from '@ali/4ever-plugin-image';
export default function createImagePlugin(config) {
  var imageConfig = config.image || {};
  return _extends({}, moFactory({}), {
    renderNode: function renderNode(props, controller, next) {
      var node = props.node; // @ts-ignore

      if (node.type !== 'image') {
        return next();
      }

      if (isEmpty(node.data)) {
        var _imageConfig$locale;

        return /*#__PURE__*/_createElement(ImagePlugin.InlinePlaceholder, null, (imageConfig == null ? void 0 : (_imageConfig$locale = imageConfig.locale) == null ? void 0 : _imageConfig$locale.placeholder) || 'Image');
      }

      var attributes = props.attributes;
      return /*#__PURE__*/_createElement(Image, _extends({}, attributes, {
        // @ts-ignore
        node: node,
        controller: controller // @ts-ignore
        ,
        imageConfig: imageConfig
      }));
    },
    renderEditable: createRenderEditable(imageConfig)
  });
}
//# sourceMappingURL=index.js.map