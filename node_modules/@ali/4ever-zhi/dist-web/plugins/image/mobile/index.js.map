{"version":3,"sources":["../../../../../src/plugins/image/mobile/index.tsx"],"names":["React","isEmpty","ImagePlugin","createRenderEditable","moFactory","createImagePlugin","config","imageConfig","image","renderNode","props","controller","next","node","type","data","locale","placeholder","attributes","renderEditable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAOC,oBAAP;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,eAAe,SAASC,iBAAT,CAA2BC,MAA3B,EAEJ;AACT,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAP,IAAgB,EAApC;AAEA,sBACKJ,SAAS,CAAC,EAAD,CADd;AAEEK,IAAAA,UAFF,sBAEaC,KAFb,EAEoBC,UAFpB,EAEgCC,IAFhC,EAEsC;AAAA,UAC1BC,IAD0B,GACjBH,KADiB,CAC1BG,IAD0B,EAElC;;AACA,UAAIA,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;AACzB,eAAOF,IAAI,EAAX;AACD;;AAED,UAAIX,OAAO,CAAEY,IAAD,CAAiBE,IAAlB,CAAX,EAAoC;AAAA;;AAClC,4BACE,eAAC,WAAD,CAAa,iBAAb,QACG,CAAAR,WAAW,QAAX,mCAAAA,WAAW,CAAES,MAAb,yCAAqBC,WAArB,KAAoC,OADvC,CADF;AAKD;;AAbiC,UAe1BC,UAf0B,GAeXR,KAfW,CAe1BQ,UAf0B;AAiBlC,0BACE,eAAC,WAAD,CAAa,WAAb,eACMA,UADN;AAEE;AACA,QAAA,IAAI,EAAEL,IAHR;AAIE,QAAA,UAAU,EAAEF,UAJd,CAKE;AALF;AAME,QAAA,WAAW,EAAEJ,WANf;AAOE,QAAA,QAAQ;AAPV,SADF;AAWD,KA9BH;AA+BEY,IAAAA,cAAc,EAAEhB,oBAAoB,CAACI,WAAD;AA/BtC;AAiCD","sourcesContent":["import React from 'react';\nimport { isEmpty } from 'lodash-es';\nimport { ImagePlugin } from '@ali/4ever-bamboo';\nimport { Plugin, Inline } from '@ali/4ever-cangjie';\nimport createRenderEditable from '../createRenderEditable';\nimport { moFactory } from '@ali/4ever-plugin-image';\n\nexport default function createImagePlugin(config: {\n  image?: ImagePlugin.ImagePluginConfig;\n}): Plugin {\n  const imageConfig = config.image || {};\n\n  return {\n    ...moFactory({}),\n    renderNode(props, controller, next) {\n      const { node } = props;\n      // @ts-ignore\n      if (node.type !== 'image') {\n        return next();\n      }\n\n      if (isEmpty((node as Inline).data)) {\n        return (\n          <ImagePlugin.InlinePlaceholder>\n            {imageConfig?.locale?.placeholder || 'Image'}\n          </ImagePlugin.InlinePlaceholder>\n        )\n      }\n\n      const { attributes } = props;\n\n      return (\n        <ImagePlugin.MobileImage\n          {...attributes}\n          // @ts-ignore\n          node={node}\n          controller={controller}\n          // @ts-ignore\n          imageConfig={imageConfig}\n          readonly\n        />\n      );\n    },\n    renderEditable: createRenderEditable(imageConfig),\n  };\n}\n"],"file":"index.js"}