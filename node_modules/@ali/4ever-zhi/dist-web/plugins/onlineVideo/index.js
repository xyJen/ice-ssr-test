import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { environment } from '@ali/4ever-cangjie';
import { sanitizeUrl } from '@ali/4ever-utils';
import { moFactory } from '@ali/4ever-plugin-online-video';
import { YoukuPlayer, VideoWrapper, YoukuPlayerWrapper, YoukuPlayerPlaceholder, EmbedFileCardWrapper, CardIconWrapper, CardContentWrapper, CardContentInnerWrapper, ContentHeader } from "./styled";
var isMobile = environment.IS_MOBILE;
export default function createEmbedPlugin(config) {
  var onlineVideoConfig = config.onlineVideo || {};
  var _onlineVideoConfig$lo = onlineVideoConfig.locale,
      locale = _onlineVideoConfig$lo === void 0 ? {} : _onlineVideoConfig$lo;
  var getIFramePlayerURL = onlineVideoConfig.getIFramePlayerURL,
      isIFramePlayerSupported = onlineVideoConfig.isIFramePlayerSupported,
      _onlineVideoConfig$en = onlineVideoConfig.enableVideoPreview,
      enableVideoPreview = _onlineVideoConfig$en === void 0 ? true : _onlineVideoConfig$en;

  var handleMediaLoadError = function handleMediaLoadError(src) {
    var onMediaLoadError = onlineVideoConfig.onMediaLoadError;

    if (onMediaLoadError) {
      onMediaLoadError(src);
    }
  };

  var handleMediaLoadSuccess = function handleMediaLoadSuccess(src) {
    var onMediaLoadSuccess = onlineVideoConfig.onMediaLoadSuccess;

    if (onMediaLoadSuccess) {
      onMediaLoadSuccess(src);
    }
  };

  var renderVideoContent = function renderVideoContent(props) {
    var node = props.node;
    var data = node.data;
    var src = data.src;
    var type = data.type;
    var poster = data.poster;

    if (!enableVideoPreview) {
      return /*#__PURE__*/_createElement(EmbedFileCardWrapper, null, /*#__PURE__*/_createElement(CardIconWrapper, null, /*#__PURE__*/_createElement("img", {
        src: "https://img.alicdn.com/tfs/TB1Ns0dlUH1gK0jSZSyXXXtlpXa-24-24.svg",
        alt: "icon",
        style: {
          width: 23,
          height: 24
        }
      })), /*#__PURE__*/_createElement(CardContentWrapper, null, /*#__PURE__*/_createElement(CardContentInnerWrapper, null, /*#__PURE__*/_createElement(ContentHeader, null, src))));
    }

    if (type === 'mp4') {
      var videoRef = /*#__PURE__*/React.createRef(); // React16.8 不支持 video 标签的 disablePictureInPicture 属性，16.9 支持
      // 暂时只能通过这种方式，后续升级 React 后，改回 disablePictureInPicture 属性

      setTimeout(function () {
        if (videoRef.current) {
          // @ts-ignore
          videoRef.current.disablePictureInPicture = true;
        }
      }, 100);
      return /*#__PURE__*/_createElement(VideoWrapper, {
        isMobile: isMobile
      }, /*#__PURE__*/_createElement("video", {
        // eslint-disable-line
        controls: true,
        "data-type": "onlineVideo",
        "raw-controls": "true" // UC内核独有属性
        ,
        controlsList: "nodownload noremoteplayback",
        ref: videoRef,
        poster: sanitizeUrl(poster),
        onCanPlay: function onCanPlay() {
          return handleMediaLoadSuccess(src);
        },
        onError: function onError() {
          return handleMediaLoadError(src);
        }
      }, /*#__PURE__*/_createElement("source", {
        src: src,
        type: "video/mp4"
      })));
    }

    if (type === 'youku') {
      // 容器有bug：https://work.aone.alibaba-inc.com/issue/26118887
      if (isIFramePlayerSupported && !isIFramePlayerSupported()) {
        return /*#__PURE__*/_createElement(YoukuPlayerPlaceholder, null, /*#__PURE__*/_createElement("span", null, locale.notSupportText));
      }

      var url = getIFramePlayerURL && getIFramePlayerURL(src);

      if (url) {
        return /*#__PURE__*/_createElement(YoukuPlayerWrapper, {
          isMobile: isMobile
        }, /*#__PURE__*/_createElement(YoukuPlayer, {
          src: url,
          allowFullScreen: true
        }));
      }

      return null;
    }

    return null;
  };

  return _extends({}, moFactory({}), {
    renderNode: {
      onlineVideo: function onlineVideo(props, _) {
        var attributes = props.attributes;
        return /*#__PURE__*/_createElement("div", attributes, renderVideoContent(props));
      }
    }
  });
}
//# sourceMappingURL=index.js.map