import _extends from "@babel/runtime/helpers/extends";
import { GroupFactory, HeadingGroupPlugin as BambooHeadingGroupPlugin } from '@ali/4ever-bamboo';
import { zhiGroupFactory as groupFactory } from '@ali/4ever-factory';
import createGroupNodes from "./handlers/createGroupNodes";
import createRenderNode from "./handlers/createRenderNode";
var createRenderMark = GroupFactory.createRenderMark;
var HeadingGroupPlugin = groupFactory(function (config) {
  var _config$headingGroup = config.headingGroup,
      headingGroup = _config$headingGroup === void 0 ? {} : _config$headingGroup;
  var _headingGroup$level = headingGroup.level,
      level = _headingGroup$level === void 0 ? 3 : _headingGroup$level;
  return {
    groupType: 'headingGroup',
    groupNodes: createGroupNodes(headingGroup),
    renderNode: createRenderNode(headingGroup),
    renderMark: createRenderMark({
      autoUnfold: headingGroup.autoUnfold,
      inject: true
    }),
    queries: _extends({
      getHeadingGroupLevel: function getHeadingGroupLevel() {
        return level;
      },
      isHeadingGroupAvailable: function isHeadingGroupAvailable() {
        return true;
      }
    }, BambooHeadingGroupPlugin.queries)
  };
}); // @ts-ignore

HeadingGroupPlugin.actions = BambooHeadingGroupPlugin.actions; // @ts-ignore

HeadingGroupPlugin.queries = BambooHeadingGroupPlugin.queries;
export default HeadingGroupPlugin;
//# sourceMappingURL=index.js.map