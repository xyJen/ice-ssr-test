{"version":3,"sources":["../../../../../src/plugins/headingGroup/handlers/createGroupNodes.ts"],"names":["Document","headingGroupList","HeadingGroupPlugin","utils","defaultIgnore","createGroupNodes","config","level","ignore","pass","groupConditions","slice","groupNodes","range","ctx","controller","next","start","parent","groups","first","nodes","second","parentGroup","length","isDocument","$condition","find","type","when","until","isGroupFrom","group"],"mappings":"AAAA,SAASA,QAAT,QAAwC,oBAAxC;AACA,SAASC,gBAAT;AAEA,SAASC,kBAAT,QAAmC,mBAAnC;IAGEC,K,GACED,kB,CADFC,K;;AAGF,SAASC,aAAT,GAAyB;AACvB,SAAO,KAAP;AACD;;AAED,SAASC,gBAAT,CAA0BC,MAA1B,EAA4E;AAAA,sBACtBA,MADsB,CAClEC,KADkE;AAAA,MAClEA,KADkE,8BAC1D,CAD0D;AAAA,uBACtBD,MADsB,CACvDE,MADuD;AAAA,MACvDA,MADuD,+BAC9CJ,aAD8C;AAAA,MAC/BK,IAD+B,GACtBH,MADsB,CAC/BG,IAD+B;AAE1E,MAAMC,eAAe,GAAGT,gBAAgB,CAACU,KAAjB,CAAuB,CAAvB,EAA0BJ,KAA1B,CAAxB;AAEA,SAAO,SAASK,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,IAA5C,EAAkD;AAAA,QAChDC,KADgD,GACvCJ,KADuC;AAAA,QAE/CK,MAF+C,GAE5BJ,GAF4B,CAE/CI,MAF+C;AAAA,QAEvCC,MAFuC,GAE5BL,GAF4B,CAEvCK,MAFuC;AAGvD,QAAMC,KAAK,GAAGF,MAAM,CAACG,KAAP,CAAaJ,KAAb,CAAd;AACA,QAAMK,MAAM,GAAGJ,MAAM,CAACG,KAAP,CAAaJ,KAAK,GAAG,CAArB,CAAf;AACA,QAAMM,WAAW,GAAGJ,MAAM,CAACA,MAAM,CAACK,MAAP,GAAgB,CAAjB,CAA1B,CALuD,CAOvD;;AACA,QAAI,CAACxB,QAAQ,CAACyB,UAAT,CAAoBP,MAApB,CAAD,IAAgC,CAACI,MAAjC,IAA2Cd,MAAM,CAACY,KAAD,CAArD,EAA8D;AAC5D,aAAOJ,IAAI,EAAX;AACD,KAVsD,CAYvD;;;AACA,QAAMU,UAAU,GAAGhB,eAAe,CAACiB,IAAhB,CAAqB,gBAA2B;AAAA,UAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;AACjE,aAAOD,IAAI,CAACT,KAAD,CAAJ,IAAe,CAACjB,KAAK,CAAC4B,WAAN,CAAkBR,WAAlB,EAA+BK,IAA/B,CAAvB;AACD,KAFkB,CAAnB,CAbuD,CAiBvD;;AACA,QAAIF,UAAJ,EAAgB;AAAA,UACNI,KADM,GACUJ,UADV,CACNI,KADM;AAAA,UACCF,IADD,GACUF,UADV,CACCE,IADD;AAEd,aAAOzB,KAAK,CAAC6B,KAAN,CAAYnB,KAAZ,EAAmBK,MAAnB,EAA2BU,IAA3B,EAAiCE,KAAjC,EAAwCrB,IAAxC,CAAP;AACD;;AAED,WAAOO,IAAI,EAAX;AACD,GAxBD;AAyBD;;AAED,eAAeX,gBAAf","sourcesContent":["import { Document, Plugin, Block } from '@ali/4ever-cangjie';\nimport { headingGroupList } from '../conditions';\nimport { HeadingGroupConfig } from '../types';\nimport { HeadingGroupPlugin } from '@ali/4ever-bamboo';\n\nconst {\n  utils,\n} = HeadingGroupPlugin;\n\nfunction defaultIgnore() {\n  return false;\n}\n\nfunction createGroupNodes(config: HeadingGroupConfig): Plugin['groupNodes'] {\n  const { level = 3, ignore = defaultIgnore, pass } = config;\n  const groupConditions = headingGroupList.slice(0, level);\n\n  return function groupNodes(range, ctx, controller, next) {\n    const [start] = range;\n    const { parent, groups } = ctx;\n    const first = parent.nodes[start] as Block;\n    const second = parent.nodes[start + 1];\n    const parentGroup = groups[groups.length - 1];\n\n    // 如果不是一级节点，或者是文档末尾，则不分组\n    if (!Document.isDocument(parent) || !second || ignore(first)) {\n      return next();\n    }\n\n    // 查找可用的 group 条件\n    const $condition = groupConditions.find(({ type, when, until }) => {\n      return when(first) && !utils.isGroupFrom(parentGroup, type);\n    });\n\n    // group 节点\n    if ($condition) {\n      const { until, type } = $condition;\n      return utils.group(range, parent, type, until, pass);\n    }\n\n    return next();\n  };\n}\n\nexport default createGroupNodes;\n"],"file":"createGroupNodes.js"}