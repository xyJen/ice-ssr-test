import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { FormulaPlugin } from '@ali/4ever-bi';
import { zhiTagFactory as tagFactory } from '@ali/4ever-factory';
import { moFactory } from '@ali/4ever-plugin-formula';
var _ref = FormulaPlugin.components,
    FormulaPlaceholder = _ref.FormulaPlaceholder,
    FormulaView = _ref.FormulaView;
var createZhiFormulaTagPlugin = tagFactory(function (config) {
  var formulaConfig = config.formula || {};
  var _formulaConfig$locale = formulaConfig.locale,
      locale = _formulaConfig$locale === void 0 ? {} : _formulaConfig$locale;

  var _ref2 = /*#__PURE__*/_createElement(FormulaPlaceholder, {
    locale: locale,
    notAllowed: true,
    readOnly: true
  });

  return {
    tagType: 'formula',
    renderNode: function renderNode(props) {
      var node = props.node;
      var formula = node.data.metadata.formula;

      if (formula) {
        return /*#__PURE__*/_createElement(FormulaView, {
          formula: formula,
          isEditing: false,
          readOnly: true
        });
      }

      return _ref2;
    }
  };
}, moFactory);
export default createZhiFormulaTagPlugin;
//# sourceMappingURL=index.js.map