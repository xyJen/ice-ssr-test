import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Heading as MoHeading } from '@ali/4ever-mo';
import HeadingWrapper from "./HeadingWrapper";
import { ReadParagraph } from '@ali/4ever-plugin-paragraph';
import { createZhiListItem } from '@ali/4ever-plugin-list';
import createHeading from "../heading/Heading";
import { moFactory } from '@ali/4ever-plugin-heading';
var Paragraph = createZhiListItem(ReadParagraph);
export default function createParagraphPlugin(config) {
  var Heading = createHeading(Paragraph);
  var headingConfig = config.heading || {};
  var onHeadingsChange = headingConfig.onHeadingsChange;
  var maybeRenderEditable = typeof onHeadingsChange === 'function' ? {
    renderEditable: function renderEditable(props, controller, next) {
      return /*#__PURE__*/_createElement(HeadingWrapper, _extends({}, props, {
        controller: controller,
        onHeadingsChange: headingConfig.onHeadingsChange
      }), next());
    }
  } : {};
  return _extends({}, moFactory({}), maybeRenderEditable, {
    renderNode: function renderNode(props, _, next) {
      var node = props.node;

      if (!MoHeading.isHeading(node)) {
        return next();
      }

      return /*#__PURE__*/_createElement(Heading, _extends({}, props, {
        onHeadingsChange: onHeadingsChange
      }));
    }
  });
}
//# sourceMappingURL=index.js.map