{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createGroupNodes.ts"],"names":["equal","Heading","Paragraph","createCallout","isCallout","createGroupNodes","config","groupNodes","ctx","controller","next","start","end","parent","groups","parentGroup","length","first","nodes","shouldDisableGroup","isParagraph","isHeading","data","calloutPr","i","node","children","slice","result","key","remainedRange"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AACA,SAASC,aAAT,EAAwBC,SAAxB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,MAA1B,EAAwD;AACrE,SAAO,SAASC,UAAT,OAAkCC,GAAlC,EAAuCC,UAAvC,EAAmDC,IAAnD,EAAyD;AAAA,QAApCC,KAAoC;AAAA,QAA7BC,GAA6B;AAAA,QACtDC,MADsD,GACnCL,GADmC,CACtDK,MADsD;AAAA,QAC9CC,MAD8C,GACnCN,GADmC,CAC9CM,MAD8C;AAE9D,QAAMC,WAAW,GAAGD,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAA1B;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAP,CAAaP,KAAb,CAAd;;AAEA,QAAIL,MAAM,CAACa,kBAAP,IAA6Bb,MAAM,CAACa,kBAAP,EAAjC,EAA8D;AAC5D,aAAOT,IAAI,EAAX;AACD,KAP6D,CAS9D;;;AACA,QAAI,CAACR,SAAS,CAACkB,WAAV,CAAsBH,KAAtB,KAAgChB,OAAO,CAACoB,SAAR,CAAkBJ,KAAlB,CAAjC,KACCA,KAAK,CAACK,IAAN,CAAWC,SADZ,IACyB,CAACnB,SAAS,CAACW,WAAD,CADvC,EACsD;AACpD,UAAIS,CAAC,GAAGb,KAAK,GAAG,CAAhB;;AACA,aAAOa,CAAC,GAAGZ,GAAX,EAAgB;AACd,YAAMa,IAAI,GAAGZ,MAAM,CAACK,KAAP,CAAaM,CAAb,CAAb;;AACA,YAAI,EAAE,CAACtB,SAAS,CAACkB,WAAV,CAAsBK,IAAtB,KAA+BxB,OAAO,CAACoB,SAAR,CAAkBI,IAAlB,CAAhC,KACDA,IAAI,CAACH,IAAL,CAAUC,SADT,IAEDvB,KAAK,CAACyB,IAAI,CAACH,IAAL,CAAUC,SAAX,EAAsBN,KAAK,CAACK,IAAN,CAAWC,SAAjC,CAFN,CAAJ,EAGG;AACD;AACD;;AACDC,QAAAA,CAAC,IAAI,CAAL;AACD;;AAED,UAAME,QAAQ,GAAGb,MAAM,CAACK,KAAP,CAAaS,KAAb,CAAmBhB,KAAnB,EAA0Ba,CAA1B,CAAjB;AAEA,UAAMI,MAAM,GAAGzB,aAAa,CAAC;AAC3BmB,QAAAA,IAAI,EAAEL,KAAK,CAACK,IADe;AAE3BO,QAAAA,GAAG,EAAKZ,KAAK,CAACY,GAAX,WAFwB;AAG3BX,QAAAA,KAAK,EAAEQ;AAHoB,OAAD,CAA5B;AAMA,aAAO;AACLD,QAAAA,IAAI,EAAEG,MADD;AAELE,QAAAA,aAAa,EAAE,CAACN,CAAD,EAAIZ,GAAJ;AAFV,OAAP;AAID;;AAED,WAAOF,IAAI,EAAX;AACD,GAvCD;AAwCD","sourcesContent":["import equal from 'fast-deep-equal';\nimport { Plugin, Block } from '@ali/4ever-cangjie';\nimport { Heading, Paragraph } from '@ali/4ever-mo';\nimport { createCallout, isCallout } from '../utils';\n\nexport default function createGroupNodes(config): Plugin['groupNodes'] {\n  return function groupNodes([start, end], ctx, controller, next) {\n    const { parent, groups } = ctx;\n    const parentGroup = groups[groups.length - 1];\n    const first = parent.nodes[start];\n\n    if (config.shouldDisableGroup && config.shouldDisableGroup()) {\n      return next();\n    }\n\n    // 仅仅支持一级分组\n    if ((Paragraph.isParagraph(first) || Heading.isHeading(first))\n      && first.data.calloutPr && !isCallout(parentGroup)) {\n      let i = start + 1;\n      while (i < end) {\n        const node = parent.nodes[i];\n        if (!((Paragraph.isParagraph(node) || Heading.isHeading(node))\n          && node.data.calloutPr\n          && equal(node.data.calloutPr, first.data.calloutPr)\n        )) {\n          break;\n        }\n        i += 1;\n      }\n\n      const children = parent.nodes.slice(start, i) as Block[];\n\n      const result = createCallout({\n        data: first.data,\n        key: `${first.key}-group`,\n        nodes: children,\n      });\n\n      return {\n        node: result,\n        remainedRange: [i, end],\n      };\n    }\n\n    return next();\n  };\n}\n"],"file":"createGroupNodes.js"}