{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createRenderNode.tsx"],"names":["React","ColorBlocks","Container","Callout","createRenderNode","param","props","controller","sticker","attributes","children","node","TYPE","data","subType","SUB_TYPE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAE5B,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,eAAvC;AAEA,OAAOC,OAAP;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAEyB;AAAA;;AACvB;AACE,qBAAiB,sBAACC,KAAD,EAAQC,UAAR,EAAuB;AAAA,UAC9BC,OAD8B,GAClBH,KADkB,CAC9BG,OAD8B;AAAA,UAE9BC,UAF8B,GAELH,KAFK,CAE9BG,UAF8B;AAAA,UAElBC,QAFkB,GAELJ,KAFK,CAElBI,QAFkB;AAGtC,UAAMC,IAAI,GAAGL,KAAK,CAACK,IAAnB;AAEA,0BACE,eAAC,OAAD;AACE,QAAA,UAAU,EAAEJ,UADd;AAEE,QAAA,IAAI,EAAEI,IAFR;AAGE,QAAA,UAAU,EAAEF,UAHd;AAIE,QAAA,OAAO,EAAED;AAJX,SAMGE,QAAQ,EANX,CADF;AAUD;AAhBH,UAiBGR,SAAS,CAACU,IAjBb,IAiBoB,UAACN,KAAD,EAAQC,UAAR,EAAuB;AAAA,QAC/BC,OAD+B,GACnBH,KADmB,CAC/BG,OAD+B;AAAA,QAE/BC,UAF+B,GAENH,KAFM,CAE/BG,UAF+B;AAAA,QAEnBC,QAFmB,GAENJ,KAFM,CAEnBI,QAFmB;AAGvC,QAAMC,IAAI,GAAGL,KAAK,CAACK,IAAnB;;AAEA,QAAIA,IAAI,CAACE,IAAL,CAAUC,OAAV,KAAsBb,WAAW,CAACc,QAAtC,EAAgD;AAC9C,0BAAO,oCAAP;AACD;;AACD,wBACE,eAAC,OAAD;AACE,MAAA,UAAU,EAAER,UADd;AAEE,MAAA,IAAI,EAAEI,IAFR;AAGE,MAAA,UAAU,EAAEF,UAHd;AAIE,MAAA,OAAO,EAAED;AAJX,OAMGE,QAAQ,EANX,CADF;AAUD,GAnCH;AAqCD;;AAED,eAAeN,gBAAf","sourcesContent":["import * as React from 'react';\nimport { Plugin, Block } from '@ali/4ever-cangjie';\nimport { StickerPlugin } from '@ali/4ever-bamboo';\nimport { ColorBlocks, Container } from '@ali/4ever-mo';\n\nimport Callout from '../components/callout';\n\nfunction createRenderNode(param: {\n  sticker: StickerPlugin.Sticker;\n}): Plugin['renderNode'] {\n  return {\n    'callout-group': (props, controller) => {\n      const { sticker } = param;\n      const { attributes, children } = props;\n      const node = props.node as unknown as Block;\n\n      return (\n        <Callout\n          controller={controller}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n    [Container.TYPE]: (props, controller) => {\n      const { sticker } = param;\n      const { attributes, children } = props;\n      const node = props.node as unknown as Container;\n      \n      if (node.data.subType !== ColorBlocks.SUB_TYPE) {\n        return <></>;\n      }\n      return (\n        <Callout\n          controller={controller}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n  };\n}\n\nexport default createRenderNode;\n"],"file":"createRenderNode.js"}