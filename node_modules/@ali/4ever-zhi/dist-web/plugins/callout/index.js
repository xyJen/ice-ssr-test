import _extends from "@babel/runtime/helpers/extends";
import { StickerPlugin, CalloutPlugin } from '@ali/4ever-bamboo';
import createRenderNode from "./handlers/createRenderNode";
import createGroupNodes from "./handlers/createGroupNodes";
import { moFactory } from '@ali/4ever-plugin-color-blocks';
var DEFAULT_STICKERS = StickerPlugin.DEFAULT_STICKERS,
    Sticker = StickerPlugin.Sticker;

function createCalloutPlugin(config) {
  var _config$callout = config.callout,
      callout = _config$callout === void 0 ? {} : _config$callout;

  var stickerConfig = _extends({
    // @ts-ignore
    lang: 'zh_CN',
    // @ts-ignore
    customSticker: [DEFAULT_STICKERS]
  }, config.sticker);

  var sticker = new Sticker(stickerConfig);
  var params = {
    stickerConfig: stickerConfig,
    sticker: sticker
  };
  return _extends({}, moFactory({}), {
    queries: {
      isNodeInColorBlocks: CalloutPlugin.isNodeInColorBlocks
    },
    renderNode: createRenderNode(params),
    getNodeStyle: CalloutPlugin.getNodeStyle,
    groupNodes: createGroupNodes(callout)
  });
}

export default createCalloutPlugin;
//# sourceMappingURL=index.js.map