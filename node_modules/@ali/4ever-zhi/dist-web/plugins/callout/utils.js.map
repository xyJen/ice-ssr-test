{"version":3,"sources":["../../../../src/plugins/callout/utils.ts"],"names":["Paragraph","Heading","Block","isCalloutParagraph","node","isParagraph","isHeading","data","calloutPr","isCallout","isBlock","type","createCallout","props","create"],"mappings":";AAAA,SAASA,SAAT,EAAmCC,OAAnC,QAAkD,eAAlD;AACA,SAASC,KAAT,QAAqC,oBAArC;AAIA,OAAO,SAASC,kBAAT,CAA4BC,IAA5B,EAA2E;AAChF,SAAO,CAACJ,SAAS,CAACK,WAAV,CAAsBD,IAAtB,KAA+BH,OAAO,CAACK,SAAR,CAAkBF,IAAlB,CAAhC,KAA4D,CAAC,CAACA,IAAI,CAACG,IAAL,CAAUC,SAA/E;AACD;AAED,OAAO,SAASC,SAAT,CAAmBL,IAAnB,EAA+C;AACpD,SAAOF,KAAK,CAACQ,OAAN,CAAcN,IAAd,KAAuBA,IAAI,CAACO,IAAL,KAAc,eAA5C;AACD;AAQD,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAqD;AAC1D,SAAOX,KAAK,CAACY,MAAN,cACFD,KADE;AAELF,IAAAA,IAAI,EAAE;AAFD,KAAP;AAID","sourcesContent":["import { Paragraph, ParagraphData, Heading } from '@ali/4ever-mo';\nimport { Block, BlockChildren } from '@ali/4ever-cangjie';\n\nexport type Callout = Block<ParagraphData, BlockChildren>;\n\nexport function isCalloutParagraph(node: any): node is typeof Paragraph | Heading {\n  return (Paragraph.isParagraph(node) || Heading.isHeading(node)) && !!node.data.calloutPr;\n}\n\nexport function isCallout(node: any): node is Callout {\n  return Block.isBlock(node) && node.type === 'callout-group';\n}\n\nexport interface CalloutProps {\n  key?: string;\n  data: ParagraphData;\n  nodes?: Block[];\n}\n\nexport function createCallout(props: CalloutProps): Callout {\n  return Block.create({\n    ...props,\n    type: 'callout-group',\n  });\n}\n"],"file":"utils.js"}