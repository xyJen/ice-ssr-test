{"version":3,"sources":["../../../../../src/plugins/callout/components/callout.tsx"],"names":["React","useZoom","getRectOfNodeFirstText","StickerPlugin","CalloutPlugin","isCallout","StickerItem","CalloutBoxWrapper","CalloutBox","ContentBox","StickerBox","StickerInnerBox","DEFAULTS","STICKER_SIZE","PADDING_TOP","Callout","props","node","attributes","children","sticker","contentBoxRef","useRef","stickerBoxRef","nodes","useMemo","calloutPr","data","bgcolor","backgroundColor","stickerCode","showSticker","metadata","Boolean","showstk","stcode","border","borderColor","whiteBorder","useState","stickerTop","setStickerTop","zoom","useEffect","current","rect","stickerRect","getBoundingClientRect","height","newTop","top","Math","round","stopPropagation","useCallback","event","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block, Controller, useZoom } from '@ali/4ever-cangjie';\nimport { ParagraphData, ColorBlocks } from '@ali/4ever-mo';\nimport { getRectOfNodeFirstText } from '@ali/4ever-utils';\nimport { StickerPlugin, CalloutPlugin } from '@ali/4ever-bamboo';\nimport { isCallout } from '../utils';\n\nconst { StickerItem } = StickerPlugin;\nconst {\n  CalloutBoxWrapper,\n  CalloutBox,\n  ContentBox,\n  StickerBox,\n  StickerInnerBox,\n  DEFAULTS,\n  STICKER_SIZE,\n  PADDING_TOP,\n} = CalloutPlugin;\n\nexport interface CalloutProps {\n  controller: Controller;\n  node: Block<ParagraphData> | ColorBlocks;\n  attributes: Record<string, string>;\n  sticker: StickerPlugin.Sticker;\n}\n\n/**\n * 高亮区块\n * @param props\n * @returns\n */\nconst Callout: React.FC<CalloutProps> = (props) => {\n  const { node, attributes, children, sticker } = props;\n\n  const contentBoxRef = React.useRef<HTMLDivElement>();\n  const stickerBoxRef = React.useRef<HTMLDivElement>();\n\n  const { nodes } = node;\n  const {\n    bgcolor = DEFAULTS.bgcolor,\n    sticker: stickerCode = DEFAULTS.stcode,\n    border,\n    showSticker,\n  } = React.useMemo(() => {\n    if (isCallout(node)) {\n      const { calloutPr } = node.data;\n      return {\n        bgcolor: calloutPr?.backgroundColor,\n        sticker: calloutPr?.stickerCode,\n        showSticker: true,\n      };\n    } else {\n      const { metadata } = (node as ColorBlocks).data;\n      return { ...metadata, showSticker: Boolean(metadata.showstk) };\n    }\n  }, [node]);\n\n  // 边框色默认为背景色, 使边框和文字对齐\n  let borderColor = border || bgcolor;\n  if (!border && bgcolor === '#FFFFFF') {\n    borderColor = DEFAULTS.whiteBorder;\n  }\n\n  const [stickerTop, setStickerTop] = React.useState(0);\n  const zoom = useZoom();\n  React.useEffect(() => {\n    if (stickerBoxRef.current && nodes[0]) {\n      const rect = getRectOfNodeFirstText(nodes[0] as Block);\n      const stickerRect = stickerBoxRef.current?.getBoundingClientRect();\n      if (rect && rect.height && stickerRect) {\n        const newTop =\n          rect.top / zoom -\n          stickerRect.top / zoom -\n          PADDING_TOP +\n          (rect.height / zoom - STICKER_SIZE) / 2 -\n          1;\n        setStickerTop(Math.round(newTop));\n      }\n    }\n  }, [node, nodes, stickerBoxRef, zoom]);\n\n  const stopPropagation = React.useCallback((event) => {\n    event.stopPropagation();\n  }, []);\n\n  return (\n    <CalloutBoxWrapper {...attributes} data-cangjie-group-block>\n      <CalloutBox\n        className=\"callout-box\"\n        backgroundColor={bgcolor}\n        borderColor={borderColor}\n        tabIndex={0}\n      >\n        {Boolean(showSticker) && (\n          <StickerBox\n            ref={stickerBoxRef}\n            onMouseDown={stopPropagation}\n            onClick={stopPropagation}\n          >\n            <StickerInnerBox style={{ top: stickerTop }}>\n              <StickerItem\n                sz={STICKER_SIZE}\n                code={stickerCode}\n                sticker={sticker}\n              />\n            </StickerInnerBox>\n          </StickerBox>\n        )}\n\n        <ContentBox showSticker={showSticker} ref={contentBoxRef}>\n          {children}\n        </ContentBox>\n      </CalloutBox>\n    </CalloutBoxWrapper>\n  );\n};\n\nCallout.displayName = 'Callout';\n\nexport default Callout;\n"],"file":"callout.js"}