{"version":3,"sources":["../../../../src/plugins/link/link.tsx"],"names":["React","useCallback","environment","Link","LinkComponent","props","href","children","onOpenLink","rest","shouldOpenLink","useRef","isMobile","IS_MOBILE","handleOpenLink","event","current","preventDefault","stopPropagation","handlers","useMemo","onTouchEnd","onTouchStart","onTouchMove","onClick","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;qBAC4B,a;AAA5B,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,IAAI,IAAIC,aAAjB;;AAOA,IAAMD,IAAyB,GAAG,SAA5BA,IAA4B,CAACE,KAAD,EAAW;AAAA,MACnCC,IADmC,GACKD,KADL,CACnCC,IADmC;AAAA,MAC7BC,QAD6B,GACKF,KADL,CAC7BE,QAD6B;AAAA,MACnBC,UADmB,GACKH,KADL,CACnBG,UADmB;AAAA,MACJC,IADI,iCACKJ,KADL;;AAG3C,MAAMK,cAAc,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAAvB;AAEA,MAAMC,QAAQ,GAAGV,WAAW,CAACW,SAA7B;AAEA,MAAMC,cAAc,GAAGb,WAAW,CAChC,UACEc,KADF,EAIK;AACH,QAAIP,UAAU,IAAIE,cAAc,CAACM,OAAjC,EAA0C;AACxCD,MAAAA,KAAK,CAACE,cAAN;;AACA,UAAI,CAACL,QAAL,EAAe;AACb;AACV;AACA;AACA;AACUG,QAAAA,KAAK,CAACG,eAAN;AACD;;AACDV,MAAAA,UAAU,CAACF,IAAD,CAAV;AACD;AACF,GAjB+B,EAkBhC,CAACE,UAAD,EAAaF,IAAb,EAAmBM,QAAnB,CAlBgC,CAAlC;AAqBA,MAAMO,QAAQ,GAAGnB,KAAK,CAACoB,OAAN,CAAc,YAAM;AACnC,WAAOlB,WAAW,CAACW,SAAZ,GACH;AACAQ,MAAAA,UAAU,EAAEP,cADZ;AAEAQ,MAAAA,YAAY,EAAE,wBAAM;AAClBZ,QAAAA,cAAc,CAACM,OAAf,GAAyB,IAAzB;AACD,OAJD;AAKAO,MAAAA,WAAW,EAAE,uBAAM;AACjBb,QAAAA,cAAc,CAACM,OAAf,GAAyB,KAAzB;AACD,OAPD;AAQAQ,MAAAA,OAAO,EAAE,iBAACT,KAAD;AAAA,eAA6BA,KAAK,CAACE,cAAN,EAA7B;AAAA;AART,KADG,GAWH;AACAO,MAAAA,OAAO,EAAEV;AADT,KAXJ;AAcD,GAfgB,EAed,CAACA,cAAD,CAfc,CAAjB;AAiBA,sBACE,eAAC,aAAD,eAAmBL,IAAnB,EAA6BU,QAA7B;AAAuC,IAAA,IAAI,EAAEb,IAA7C;AAAmD,IAAA,SAAS,EAAC;AAA7D,MACGC,QADH,CADF;AAKD,CAlDD;;AAoDA,4BAAeP,KAAK,CAACyB,IAAN,CAAWtB,IAAX,CAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { environment } from '@ali/4ever-cangjie';\nimport { Link as LinkComponent } from './styled';\n\ninterface LinkProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  href: string;\n  onOpenLink?: (href: string) => void;\n}\n\nconst Link: React.FC<LinkProps> = (props) => {\n  const { href, children, onOpenLink, ...rest } = props;\n\n  const shouldOpenLink = React.useRef(true);\n\n  const isMobile = environment.IS_MOBILE;\n\n  const handleOpenLink = useCallback(\n    (\n      event:\n        | React.MouseEvent<HTMLAnchorElement>\n        | React.TouchEvent<HTMLAnchorElement>,\n    ) => {\n      if (onOpenLink && shouldOpenLink.current) {\n        event.preventDefault();\n        if (!isMobile) {\n          /**\n           * 下面的提交为了修复演示模式切页问题，阻止了冒泡。但是会导致移动端 touchEnd 不触发，引发跳转后选区异常\n           * https://gitlab.alibaba-inc.com/alidocs/we-editor/commit/d870afb4bf623a9b3422bd4fe7c29b6515d720c2\n           */\n          event.stopPropagation();\n        }\n        onOpenLink(href);\n      }\n    },\n    [onOpenLink, href, isMobile],\n  );\n\n  const handlers = React.useMemo(() => {\n    return environment.IS_MOBILE\n      ? {\n        onTouchEnd: handleOpenLink,\n        onTouchStart: () => {\n          shouldOpenLink.current = true;\n        },\n        onTouchMove: () => {\n          shouldOpenLink.current = false;\n        },\n        onClick: (event: React.MouseEvent) => event.preventDefault(),\n      }\n      : {\n        onClick: handleOpenLink,\n      };\n  }, [handleOpenLink]);\n\n  return (\n    <LinkComponent {...rest} {...handlers} href={href} className=\"link\" >\n      {children}\n    </LinkComponent>\n  );\n};\n\nexport default React.memo(Link);\n"],"file":"link.js"}