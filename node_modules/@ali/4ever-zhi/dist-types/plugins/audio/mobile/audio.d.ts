import React, { PureComponent } from 'react';
import { Controller } from '@ali/4ever-cangjie';
import { EmbedPlugin, EmbedNode } from '@ali/4ever-bamboo';
import { AudioPluginConfig } from '../types';
interface IProps {
    controller: Controller;
    attributes: any;
    node: EmbedNode;
    locale: any;
    mobile: boolean;
    isSelected: boolean;
    transformAudioURL?: (src: string) => string;
    onMediaLoadSuccess?: any;
    onMediaLoadError?: any;
    scrollableContainer: HTMLElement | Window;
    onDownload?: any;
    allowDownload?: ((src: string) => Promise<boolean>) | boolean;
    onPreview?: AudioPluginConfig['onPreview'];
}
interface IState {
    allowDownload: boolean;
}
declare class Audio extends PureComponent<IProps, IState> {
    ref: React.RefObject<unknown>;
    previewRef: React.RefObject<unknown>;
    constructor(props: IProps);
    componentDidMount(): void;
    getNodeData: () => {
        src: string;
        viewType: "card" | "preview";
        name: string;
        type: string;
        size: number;
        previewSize: number;
        uploadPercent?: number | undefined;
        errorType?: EmbedPlugin.UploadErrorType | undefined;
        poster?: string | undefined;
    };
    onMediaLoadError: () => void;
    onMediaLoadSuccess: () => void;
    onDownloadFile: () => void;
    renderPreview(): JSX.Element;
    renderCard(): JSX.Element;
    render(): JSX.Element;
}
export default Audio;
