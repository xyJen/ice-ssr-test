"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _everCangjie = require("@ali/4ever-cangjie");

var _everBamboo = require("@ali/4ever-bamboo");

var _everUtils = require("@ali/4ever-utils");

/**
 * @packageDocumentation
 * @module Reader
 */
const _createElement = /*#__PURE__*/React.createElement;

/**
 * @ignore
 */
const EmptyWrapper = /*#__PURE__*/_styledComponents.default.div(["height:100%;"]);
/**
 * 编辑器只读组件的选项。
 */


/**
 * 编辑器只读组件
 */
function Zhi(props) {
  const {
    dataUid,
    plugins,
    content: value,
    renderEmpty,
    style,
    canCopy = true,
    controllerRef,
    onChange,
    options,
    flushType,
    configs,
    docStyle,
    ...rest
  } = props;
  const [renderValue, setRenderValue] = React.useState(value);
  const valueRef = React.useRef(value); // 若 value 数据变更，则更新渲染数据

  if (value !== valueRef.current) {
    valueRef.current = value;
    setRenderValue(value);
  } // 如果上层有处理 onChange 则上抛，否则进行内部消化，保证基础选区交互能够 works


  const handleChange = React.useCallback(change => {
    if (typeof onChange === 'function') {
      onChange(change);
    } else {
      setRenderValue(change.value);
    }
  }, [onChange]);
  const isEmpty = (0, _everUtils.isEmptyValue)(renderValue);

  if (isEmpty && renderEmpty) {
    // @ts-ignore
    return /*#__PURE__*/_createElement(EmptyWrapper, rest, renderEmpty());
  }

  return /*#__PURE__*/_createElement(_everCangjie.Provider, {
    dataUid: dataUid,
    plugins: plugins,
    onChange: handleChange,
    value: renderValue,
    controllerRef: controllerRef,
    readOnly: true,
    canCopy: canCopy,
    options: options,
    flushType: flushType,
    configs: configs,
    docStyle: docStyle
  }, /*#__PURE__*/_createElement(_everCangjie.Content, (0, _extends2.default)({}, rest, {
    tagName: "article",
    defaultStyle: _everBamboo.theme.defaultKeyTypographyStyle,
    style: style
  })));
}

var _default = Zhi;
exports.default = _default;
//# sourceMappingURL=reader.js.map