"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createRenderNode;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _lodash = require("lodash");

var _everBamboo = require("@ali/4ever-bamboo");

var _FlashCalendarCardContainer = _interopRequireDefault(require("./shanhui/FlashCalendarCardContainer"));

var _type = require("./type");

const _createElement = /*#__PURE__*/_react.default.createElement;
const {
  TimeTextParagraph,
  PlaceTextParagraph,
  SubjectParagraph,
  ReceiversParagraph,
  CommentTextParagraph,
  CommentTextWrapper,
  ContainerWrapper,
  BodyWrapper,
  SubjectPlaceholder,
  TimePlaceholder
} = _everBamboo.CalendarCardPlugin;

function createRenderNode(cardConfig) {
  const {
    locale,
    isMobile,
    mode: calendarMode,
    ...rest
  } = cardConfig;
  return props => {
    const {
      node
    } = props;
    const {
      metadata
    } = node.data;
    const {
      mode = calendarMode
    } = metadata;

    if (mode === _type.CalendarType.SHANHUI) {
      return /*#__PURE__*/_createElement(_FlashCalendarCardContainer.default, (0, _extends2.default)({}, rest, {
        metadata: metadata,
        locale: locale
      }));
    }

    return /*#__PURE__*/_createElement(CalendarCardContainer, (0, _extends2.default)({}, rest, {
      metadata: metadata,
      locale: locale
    }));
  };
} // 当mousedown与click之间的间隔少于150ms时认为是点击点击而不是拖动选中


const clickTimeout = 150;

function CalendarCardContainer(props) {
  const {
    locale,
    metadata,
    jumpToCalendar,
    openProfile
  } = props;
  const {
    time,
    place,
    comment,
    subject = '',
    redirectUrl,
    isPlaceholder
  } = metadata;
  const jumpToCalendarFactory = (0, _react.useCallback)((0, _lodash.memoize)(eventType => {
    return event => {
      event.preventDefault();
      event.stopPropagation();
      if (!jumpToCalendar) return;
      if (isPlaceholder) return;
      jumpToCalendar(redirectUrl, eventType);
    };
  }), [jumpToCalendar]);
  const [style, setStyle] = (0, _react.useState)({});
  (0, _react.useEffect)(() => {
    setStyle({
      color: isPlaceholder ? 'rgba(17,31,44,0.4)' : '',
      height: 'auto',
      width: 'auto',
      border: '1px solid rgba(17,31,44,0)'
    });
  }, [isPlaceholder]);
  const clickTimeRef = (0, _react.useRef)();
  const handleMouseDown = (0, _react.useCallback)(event => {
    clickTimeRef.current = new Date().getTime();
    event.stopPropagation();
  }, []);
  const handleClick = (0, _react.useCallback)(event => {
    if (!clickTimeRef.current || new Date().getTime() - clickTimeRef.current > clickTimeout) {
      event.stopPropagation();
    }

    clickTimeRef.current = undefined;
  }, []);
  return /*#__PURE__*/_createElement(ContainerWrapper, {
    onMouseDown: handleMouseDown,
    onClick: handleClick,
    style: style
  }, /*#__PURE__*/_createElement(BodyWrapper, null, /*#__PURE__*/_createElement(SubjectParagraph, {
    isPlaceholder: isPlaceholder,
    metadata: metadata,
    subject: isPlaceholder ? /*#__PURE__*/_createElement(SubjectPlaceholder, null, subject) : subject,
    jumpToCalendar: jumpToCalendarFactory(_type.JumpToCalendarEventType.RECEIVER)
  }), /*#__PURE__*/_createElement(TimeTextParagraph, null, isPlaceholder ? /*#__PURE__*/_createElement(TimePlaceholder, null, time) : time), /*#__PURE__*/_createElement(PlaceTextParagraph, null, place), /*#__PURE__*/_createElement(ReceiversParagraph, {
    locale: locale,
    metadata: metadata,
    openProfile: openProfile,
    jumpToCalendar: jumpToCalendarFactory(_type.JumpToCalendarEventType.RECEIVER)
  }), comment ? /*#__PURE__*/_createElement(CommentTextParagraph, null, /*#__PURE__*/_createElement(CommentTextWrapper, null, comment)) : null));
}
//# sourceMappingURL=createRenderNode.js.map