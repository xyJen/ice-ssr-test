"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _everBamboo = require("@ali/4ever-bamboo");

var _styledComponents = _interopRequireDefault(require("styled-components"));

const _createElement = /*#__PURE__*/React.createElement;
const {
  Title,
  Content,
  actions
} = _everBamboo.HeadingGroupPlugin;
const {
  toggleFold
} = actions;
const ContentBox = /*#__PURE__*/(0, _styledComponents.default)(Content)([""]);
const TitleBox = /*#__PURE__*/(0, _styledComponents.default)(Title)([""]);

const TitleContent = /*#__PURE__*/_styledComponents.default.div([""]);

const GroupBox = /*#__PURE__*/_styledComponents.default.div([""]);

const Group = props => {
  const {
    node,
    controller,
    attributes,
    config,
    children
  } = props;
  const {
    disableFold = false
  } = config;
  const fold = (0, _everCangjie.useUserData)(node, 'fold') || false;
  const handleFoldChange = React.useCallback(_fold => {
    const first = node.nodes[0];
    controller.run('onAction', toggleFold({
      node: first,
      fold: _fold
    }));
  }, [controller, node]); // 切割议题的标题和内容块

  let titleNode;
  let contentNodes;

  if (Array.isArray(children) && children.length >= 1) {
    titleNode = children[0];
    contentNodes = children.slice(1);
  } else {
    return /*#__PURE__*/_createElement(React.Fragment, null, children);
  }

  return /*#__PURE__*/_createElement(GroupBox, (0, _extends2.default)({}, attributes, {
    "data-name": "heading-group",
    "data-type": node.type,
    "data-foldable": true,
    "data-cangjie-group-block": true
  }), /*#__PURE__*/_createElement(TitleBox, {
    dataName: "heading-group-title",
    fold: fold,
    onChange: handleFoldChange,
    disabled: disableFold
  }, /*#__PURE__*/_createElement(TitleContent, {
    "data-name": "heading-group-title-content"
  }, titleNode)), contentNodes.length > 0 && /*#__PURE__*/_createElement(ContentBox, {
    dataName: "heading-group-content",
    fold: !disableFold && fold
  }, contentNodes));
};

Group.displayName = 'Group';
var _default = Group;
exports.default = _default;
//# sourceMappingURL=group.js.map