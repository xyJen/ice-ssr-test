"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _everBamboo = require("@ali/4ever-bamboo");

var _content = _interopRequireDefault(require("./content"));

const _createElement = /*#__PURE__*/React.createElement;
const {
  components,
  utils
} = _everBamboo.SubjectPlugin;
const {
  InlinePlaceholder,
  Placeholder
} = components;
const {
  isEmptyNode
} = utils;
const {
  Title
} = _everBamboo.HeadingGroupPlugin;
const {
  toggleFold
} = _everBamboo.HeadingGroupPlugin.actions;

const SubjectBox = /*#__PURE__*/_styledComponents.default.div(["position:relative;padding-left:24px;margin-top:36px;"]);

const ToolBox = /*#__PURE__*/_styledComponents.default.div(["position:absolute;height:28px;right:0;top:0;display:flex;align-items:center;justify-content:flex-end;"]);

const ContentBox = /*#__PURE__*/(0, _styledComponents.default)(_content.default)(["& > [data-type='heading-1-group'] > [data-name='heading-group-title']{padding-right:", "px;}& > *{margin-left:-24px;padding-left:24px !important;}"], props => props.paddingRight || 0);

const BorderBar = /*#__PURE__*/_styledComponents.default.div(["position:absolute;left:0;top:0;width:4px;height:100%;background:", ";transition:all 0.2s ease-in-out;"], props => props.color);

const TitleContent = /*#__PURE__*/_styledComponents.default.div(["& > *{margin-left:-24px;padding-left:24px !important;}"]);

const TitleBox = /*#__PURE__*/(0, _styledComponents.default)(Title)(["padding-right:", "px;& .data-comment-bubbles{left:", "px;}"], props => props.paddingRight, props => props.paddingRight);

/**
 * 议题区块
 * @param props
 * @returns
 * @todo 标题 margin 会导致 border 在折叠状态下偏长，这个比较难解
 */
const Subject = props => {
  const {
    node,
    attributes,
    controller,
    children,
    config
  } = props;
  const {
    disableFold = false,
    locale = {},
    review: reviewConfig
  } = config;
  const {
    renderMeetingClock: MeetingClock
  } = reviewConfig || {};
  const {
    topicTitlePlaceholderBefore,
    topicTitlePlaceholderAfter
  } = locale;
  const fold = (0, _everCangjie.useUserData)(node, 'fold') || false;
  const {
    subjectPr = {}
  } = node.data;
  const {
    id,
    name
  } = subjectPr;
  const [toolWidth, setToolWidth] = React.useState(0);
  const toolRef = React.useRef(null);
  const handleFoldChange = React.useCallback(_fold => {
    const first = node.nodes[0];
    controller.run('onAction', toggleFold({
      node: first,
      fold: _fold
    }));
  }, [controller, node]);
  const refreshToolWidth = React.useCallback(() => {
    const tool = toolRef.current;

    if (tool && tool.offsetWidth !== toolWidth) {
      setToolWidth(tool.offsetWidth);
    }
  }, [toolWidth]);
  React.useLayoutEffect(() => {
    refreshToolWidth();
  }, [refreshToolWidth]);
  /**
   * 议题边框颜色 @狗毛
   */

  const color = React.useMemo(() => {
    if (name === 'review') {
      return '#F4C800';
    }

    if (name === 'topic') {
      return '#0089FF';
    }

    if (name === 'conclusion') {
      return '#00B042';
    }

    return '#0089FF';
  }, [name]); // 切割议题的标题和内容块

  let titleNode;
  let titleElement;
  let contentElements;

  if (Array.isArray(children) && children.length >= 1) {
    titleNode = node.nodes[0];
    titleElement = children[0];
    contentElements = children.slice(1);
  } else {
    return /*#__PURE__*/_createElement(React.Fragment, null, children);
  }

  const displayTitlePlaceholder = item => {
    // 类型是议题 && 非预览模式 && 没有标题 && 有 placeholder 文字配置才展示
    if (name === 'topic' && isEmptyNode(item) && topicTitlePlaceholderBefore && topicTitlePlaceholderAfter) {
      return true;
    }

    return false;
  };

  var _ref = /*#__PURE__*/_createElement(MeetingClock, {
    node: node
  });

  const renderTitleToolbar = () => {
    const toolbars = [];

    if (name === 'topic') {
      MeetingClock && toolbars.push(_ref);
    }

    return toolbars;
  };

  var _ref2 = /*#__PURE__*/_createElement(InlinePlaceholder, null, topicTitlePlaceholderBefore, ' @ ', topicTitlePlaceholderAfter);

  const renderTitlePlaceholder = () => {
    if (name === 'topic') {
      return _ref2;
    }

    return '';
  };

  return /*#__PURE__*/_createElement(SubjectBox, (0, _extends2.default)({}, attributes, {
    id: id,
    "data-name": "subject-group",
    "data-type": node.type,
    "data-foldable": true,
    "data-cangjie-group-block": true,
    paddingRight: toolWidth
  }), /*#__PURE__*/_createElement(BorderBar, {
    color: color
  }), /*#__PURE__*/_createElement(TitleBox, {
    dataName: "subject-group-title",
    fold: fold,
    onChange: handleFoldChange,
    disabled: disableFold,
    paddingRight: toolWidth
  }, /*#__PURE__*/_createElement(TitleContent, {
    "data-name": "subject-group-title-content"
  }, /*#__PURE__*/_createElement(Placeholder, {
    controller: controller,
    node: titleNode,
    display: displayTitlePlaceholder,
    placeholder: renderTitlePlaceholder()
  }, titleElement)), /*#__PURE__*/_createElement(ToolBox, {
    ref: toolRef
  }, renderTitleToolbar())), /*#__PURE__*/_createElement(ContentBox, {
    config: config,
    dataName: "subject-group-content",
    controller: controller,
    node: node,
    fold: !disableFold && fold,
    paddingRight: toolWidth
  }, contentElements));
};

Subject.displayName = 'Subject';
var _default = Subject;
exports.default = _default;
//# sourceMappingURL=subject.js.map