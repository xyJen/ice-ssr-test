{"version":3,"sources":["../../../../../src/plugins/headingGroupNew/handlers/createRenderGroup.tsx"],"names":["GroupNew","GroupFactory","Heading1","Heading2","Heading3","Heading4","Heading5","Heading6","Heading","headingList","createRenderGroup","config","level","renderGroup","props","_","next","node","attributes","children","visible","controller","group","isCollapsed","isEmpty","type"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;uBAF4B,a;AAK5B,MAAM;AAAEA,EAAAA;AAAF,IAAeC,wBAArB;AAEA,MAAM;AACJC,EAAAA,QADI;AAEJC,EAAAA,QAFI;AAGJC,EAAAA,QAHI;AAIJC,EAAAA,QAJI;AAKJC,EAAAA,QALI;AAMJC,EAAAA;AANI,IAOFC,eAPJ;AASA,MAAMC,WAAW,GAAG,CAClBP,QADkB,EAElBC,QAFkB,EAGlBC,QAHkB,EAIlBC,QAJkB,EAKlBC,QALkB,EAMlBC,QANkB,CAApB;;AASA,SAASG,iBAAT,CAA2BC,MAA3B,EAA8E;AAC5E,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAgBD,MAAtB;AAEA,SAAO,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,CAA5B,EAA+BC,IAA/B,EAAqC;AAC1C,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,UAFI;AAGJ;AACAC,MAAAA,QAJI;AAKJC,MAAAA,OAAO,GAAG,IALN;AAMJC,MAAAA,UANI;AAOJC,MAAAA,KAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUFV,KAVJ;;AAYA,QAAIQ,KAAK,CAACG,IAAN,KAAe,gBAAf,IAAmCH,KAAK,CAACG,IAAN,KAAe,gBAAlD,IAAsEH,KAAK,CAACG,IAAN,KAAe,gBAAzF,EAA2G;AACzG,0BACE,eAAC,QAAD;AACE,QAAA,IAAI,EAAER,IADR;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGE,QAAA,UAAU,EAAEG,UAHd;AAIE,QAAA,UAAU,EAAE,KAJd;AAKE,QAAA,OAAO,EAAED,OALX;AAME,QAAA,WAAW,EAAEG;AANf,SAQGJ,QAAQ,EARX,CADF;AAYD;;AAED,WAAOH,IAAI,EAAX;AACD,GA7BD;AA8BD;;eAEcN,iB","sourcesContent":["import * as React from 'react';\nimport { Block, Plugin } from '@ali/4ever-cangjie';\nimport { Heading } from '@ali/4ever-mo';\nimport { GroupFactory } from '@ali/4ever-bamboo';\nimport { HeadingGroupConfig } from '../types';\n\nconst { GroupNew } = GroupFactory;\n\nconst {\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n  Heading5,\n  Heading6,\n} = Heading;\n\nconst headingList = [\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n  Heading5,\n  Heading6,\n];\n\nfunction createRenderGroup(config: HeadingGroupConfig): Plugin['renderGroup'] {\n  const { level = 3 } = config;\n\n  return function renderGroup(props, _, next) {\n    const {\n      node,\n      attributes,\n      // isSelected,\n      children,\n      visible = true,\n      controller,\n      group,\n      isCollapsed,\n      isEmpty \n    } = props;\n\n    if (group.type === 'heading1-group' || group.type === 'heading2-group' || group.type === 'heading3-group') {\n      return (\n        <GroupNew\n          node={node as Block}\n          attributes={attributes}\n          controller={controller}\n          isSelected={false}\n          visible={visible}\n          isCollapsed={isCollapsed}\n        >\n          {children()}\n        </GroupNew>\n      );\n    }\n\n    return next();\n  };\n}\n\nexport default createRenderGroup;\n"],"file":"createRenderGroup.js"}