{"version":3,"sources":["../../../../src/plugins/headingGroupNew/index.ts"],"names":["createRenderMark","GroupFactory","Heading1","Heading2","Heading3","Heading","HeadingGroupPlugin","config","headingGroup","level","renderGroup","generateGroup","renderMark","autoUnfold","inject","queries","getHeadingGroupLevel","isHeadingGroupAvailable","isElementInGroup","controller","element","group","isHeading1","isHeading2","type","isHeading3","BambooHeadingGroupPlugin","actions"],"mappings":";;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,wBAA7B;AAEA,MAAM;AACJC,EAAAA,QADI;AAEJC,EAAAA,QAFI;AAGJC,EAAAA;AAHI,IAIFC,eAJJ;;AAMA,MAAMC,kBAAkB,GAAIC,MAAM,IAAI;AACpC,QAAM;AAAEC,IAAAA,YAAY,GAAG;AAAjB,MAAwBD,MAA9B;AACA,QAAM;AAAEE,IAAAA,KAAK,GAAG;AAAV,MAAgBD,YAAtB;AACA,SAAO;AACLE,IAAAA,WAAW,EAAE,gCAAkBF,YAAlB,CADR;AAELG,IAAAA,aAAa,EAAE,kCAAoBH,YAApB,CAFV;AAGLI,IAAAA,UAAU,EAAEZ,gBAAgB,CAAC;AAC3Ba,MAAAA,UAAU,EAAEL,YAAY,CAACK,UADE;AAE3BC,MAAAA,MAAM,EAAE;AAFmB,KAAD,CAHvB;AAOLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,oBAAoB,EAAE,MAAMP,KADrB;AAEPQ,MAAAA,uBAAuB,EAAE,MAAM,IAFxB;AAGPC,MAAAA,gBAAgB,EAAE,CAChBC,UADgB,EAEhBC,OAFgB,EAGhBC,KAHgB,KAIb;AACH;AACA,YAAInB,QAAQ,CAACoB,UAAT,CAAoBF,OAApB,CAAJ,EAAkC;AAChC,iBAAO,KAAP;AACD,SAFD,MAEO,IAAIjB,QAAQ,CAACoB,UAAT,CAAoBH,OAApB,CAAJ,EAAkC;AACvC,cAAIC,KAAK,CAACG,IAAN,KAAe,gBAAnB,EAAqC;AACnC,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SALM,MAKA,IAAIpB,QAAQ,CAACqB,UAAT,CAAoBL,OAApB,CAAJ,EAAkC;AACvC,cAAIC,KAAK,CAACG,IAAN,KAAe,gBAAf,IAAmCH,KAAK,CAACG,IAAN,KAAe,gBAAtD,EAAwE;AACtE,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD,OAvBM;AAwBP,SAAGE,+BAAyBX;AAxBrB;AAPJ,GAAP;AAkCD,CArCD,C,CAuCA;;;AACAT,kBAAkB,CAACqB,OAAnB,GAA6BD,+BAAyBC,OAAtD,C,CAEA;;AACArB,kBAAkB,CAACS,OAAnB,GAA6BW,+BAAyBX,OAAtD;eAEeT,kB","sourcesContent":["import { GroupFactory, HeadingGroupPlugin as BambooHeadingGroupPlugin } from '@ali/4ever-bamboo';\nimport { Heading } from '@ali/4ever-mo';\nimport { Controller, Element, Group } from '@ali/4ever-cangjie';\nimport { zhiGroupFactory as groupFactory } from '@ali/4ever-factory';\nimport createRenderGroup from './handlers/createRenderGroup';\nimport createGenerateGroup from './handlers/createGenerateGroup';\n\nconst { createRenderMark } = GroupFactory;\n\nconst {\n  Heading1,\n  Heading2,\n  Heading3,\n} = Heading;\n\nconst HeadingGroupPlugin = (config => {\n  const { headingGroup = {} } = config;\n  const { level = 3 } = headingGroup;\n  return {\n    renderGroup: createRenderGroup(headingGroup),\n    generateGroup: createGenerateGroup(headingGroup),\n    renderMark: createRenderMark({\n      autoUnfold: headingGroup.autoUnfold,\n      inject: true,\n    }),\n    queries: {\n      getHeadingGroupLevel: () => level,\n      isHeadingGroupAvailable: () => true,\n      isElementInGroup: (\n        controller: Controller,\n        element: Element,\n        group: Group,\n      ) => {\n        // 分组 2 只能存在于分组 1 之中\n        if (Heading1.isHeading1(element)) {\n          return false;\n        } else if (Heading2.isHeading2(element)) {\n          if (group.type === 'heading1-group') {\n            return true;\n          }\n          return false;\n        } else if (Heading3.isHeading3(element)) {\n          if (group.type === 'heading1-group' || group.type === 'heading2-group') {\n            return true;\n          }\n          return false;\n        }\n        return true;\n      },\n      ...BambooHeadingGroupPlugin.queries,\n    },\n  };\n});\n\n// @ts-ignore\nHeadingGroupPlugin.actions = BambooHeadingGroupPlugin.actions;\n\n// @ts-ignore\nHeadingGroupPlugin.queries = BambooHeadingGroupPlugin.queries;\n\nexport default HeadingGroupPlugin;\n"],"file":"index.js"}