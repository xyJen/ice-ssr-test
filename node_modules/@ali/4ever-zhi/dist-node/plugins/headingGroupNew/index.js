"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everBamboo = require("@ali/4ever-bamboo");

var _everMo = require("@ali/4ever-mo");

var _createRenderGroup = _interopRequireDefault(require("./handlers/createRenderGroup"));

var _createGenerateGroup = _interopRequireDefault(require("./handlers/createGenerateGroup"));

const {
  createRenderMark
} = _everBamboo.GroupFactory;
const {
  Heading1,
  Heading2,
  Heading3
} = _everMo.Heading;

const HeadingGroupPlugin = config => {
  const {
    headingGroup = {}
  } = config;
  const {
    level = 3
  } = headingGroup;
  return {
    renderGroup: (0, _createRenderGroup.default)(headingGroup),
    generateGroup: (0, _createGenerateGroup.default)(headingGroup),
    renderMark: createRenderMark({
      autoUnfold: headingGroup.autoUnfold,
      inject: true
    }),
    queries: {
      getHeadingGroupLevel: () => level,
      isHeadingGroupAvailable: () => true,
      isElementInGroup: (controller, element, group) => {
        // 分组 2 只能存在于分组 1 之中
        if (Heading1.isHeading1(element)) {
          return false;
        } else if (Heading2.isHeading2(element)) {
          if (group.type === 'heading1-group') {
            return true;
          }

          return false;
        } else if (Heading3.isHeading3(element)) {
          if (group.type === 'heading1-group' || group.type === 'heading2-group') {
            return true;
          }

          return false;
        }

        return true;
      },
      ..._everBamboo.HeadingGroupPlugin.queries
    }
  };
}; // @ts-ignore


HeadingGroupPlugin.actions = _everBamboo.HeadingGroupPlugin.actions; // @ts-ignore

HeadingGroupPlugin.queries = _everBamboo.HeadingGroupPlugin.queries;
var _default = HeadingGroupPlugin;
exports.default = _default;
//# sourceMappingURL=index.js.map