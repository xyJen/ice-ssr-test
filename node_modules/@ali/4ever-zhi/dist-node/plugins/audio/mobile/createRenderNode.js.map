{"version":3,"sources":["../../../../../src/plugins/audio/mobile/createRenderNode.tsx"],"names":["EmbedFailedCard","EmbedPlugin","createRenderNode","config","audioConfig","audio","locale","audioLocaleConfig","downloadFile","onMediaLoadSuccess","onMediaLoadError","transformAudioURL","allowDownload","onPreview","embed","props","controller","next","node","data","type","errorType","src"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAIA;;uBAJ4B,a;AAM5B,MAAM;AAAEA,EAAAA;AAAF,IAAsBC,uBAA5B;;AAEe,SAASC,gBAAT,CAA0BC,MAA1B,EAA6C;AAC1D,QAAMC,WAAW,GAAGD,MAAM,CAACE,KAAP,IAAgB,EAApC;AACA,QAAM;AACJC,IAAAA,MAAM,EAAEC,iBAAiB,GAAG,EADxB;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA;AAPI,MAQFT,WARJ;AAUA,SAAO;AACLU,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,KAA6B;AAClC,YAAM;AAAEC,QAAAA;AAAF,UAAWH,KAAjB;;AAEA,UAAIG,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmB,OAAnB,IAA8BF,IAAI,CAACC,IAAL,CAAUE,SAA5C,EAAuD;AACrD,4BAAO,eAAC,eAAD;AAAiB,UAAA,IAAI,EAAEH,IAAvB;AAA6B,UAAA,MAAM,EAAEX;AAArC,UAAP;AACD;;AAED,UAAIW,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmB,OAAnB,IAA8BF,IAAI,CAACC,IAAL,CAAUG,GAA5C,EAAiD;AAC/C,4BACE,eAAC,cAAD,6BACMP,KADN;AAEE,UAAA,UAAU,EAAEC,UAFd;AAGE,UAAA,UAAU,EAAER,YAHd;AAIE,UAAA,MAAM,EAAED,iBAJV;AAKE,UAAA,kBAAkB,EAAEE,kBALtB;AAME,UAAA,gBAAgB,EAAEC,gBANpB;AAOE,UAAA,iBAAiB,EAAEC,iBAPrB;AAQE,UAAA,aAAa,EAAEC,aARjB;AASE,UAAA,SAAS,EAAEC;AATb,WADF;AAaD;;AACD,aAAOI,IAAI,EAAX;AACD;AAxBI,GAAP;AA0BD","sourcesContent":["import * as React from 'react';\nimport {\n  EmbedPlugin,\n} from '@ali/4ever-bamboo';\nimport { ZhiConfig } from '../../../types';\nimport Audio from './audio';\n\nconst { EmbedFailedCard } = EmbedPlugin;\n\nexport default function createRenderNode(config: ZhiConfig) {\n  const audioConfig = config.audio || {};\n  const {\n    locale: audioLocaleConfig = {},\n    downloadFile,\n    onMediaLoadSuccess,\n    onMediaLoadError,\n    transformAudioURL,\n    allowDownload,\n    onPreview,\n  } = audioConfig;\n\n  return {\n    embed: (props, controller, next) => {\n      const { node } = props;\n\n      if (node.data.type === 'audio' && node.data.errorType) {\n        return <EmbedFailedCard node={node} locale={audioLocaleConfig} />;\n      }\n\n      if (node.data.type === 'audio' && node.data.src) {\n        return (\n          <Audio\n            {...props}\n            controller={controller}\n            onDownload={downloadFile}\n            locale={audioLocaleConfig}\n            onMediaLoadSuccess={onMediaLoadSuccess}\n            onMediaLoadError={onMediaLoadError}\n            transformAudioURL={transformAudioURL}\n            allowDownload={allowDownload}\n            onPreview={onPreview}\n          />\n        );\n      }\n      return next();\n    },\n  };\n}\n"],"file":"createRenderNode.js"}