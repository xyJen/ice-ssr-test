"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createEmbedPlugin;

var _react = _interopRequireDefault(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _everUtils = require("@ali/4ever-utils");

var _everPluginOnlineVideo = require("@ali/4ever-plugin-online-video");

var _styled = require("./styled");

const _createElement = /*#__PURE__*/_react.default.createElement;
const isMobile = _everCangjie.environment.IS_MOBILE;

function createEmbedPlugin(config) {
  const onlineVideoConfig = config.onlineVideo || {};
  const {
    locale = {}
  } = onlineVideoConfig;
  const {
    getIFramePlayerURL,
    isIFramePlayerSupported,
    enableVideoPreview = true
  } = onlineVideoConfig;

  const handleMediaLoadError = src => {
    const {
      onMediaLoadError
    } = onlineVideoConfig;

    if (onMediaLoadError) {
      onMediaLoadError(src);
    }
  };

  const handleMediaLoadSuccess = src => {
    const {
      onMediaLoadSuccess
    } = onlineVideoConfig;

    if (onMediaLoadSuccess) {
      onMediaLoadSuccess(src);
    }
  };

  const renderVideoContent = props => {
    const {
      node
    } = props;
    const {
      data
    } = node;
    const {
      src
    } = data;
    const {
      type
    } = data;
    const {
      poster
    } = data;

    if (!enableVideoPreview) {
      return /*#__PURE__*/_createElement(_styled.EmbedFileCardWrapper, null, /*#__PURE__*/_createElement(_styled.CardIconWrapper, null, /*#__PURE__*/_createElement("img", {
        src: "https://img.alicdn.com/tfs/TB1Ns0dlUH1gK0jSZSyXXXtlpXa-24-24.svg",
        alt: "icon",
        style: {
          width: 23,
          height: 24
        }
      })), /*#__PURE__*/_createElement(_styled.CardContentWrapper, null, /*#__PURE__*/_createElement(_styled.CardContentInnerWrapper, null, /*#__PURE__*/_createElement(_styled.ContentHeader, null, src))));
    }

    if (type === 'mp4') {
      const videoRef = /*#__PURE__*/_react.default.createRef(); // React16.8 不支持 video 标签的 disablePictureInPicture 属性，16.9 支持
      // 暂时只能通过这种方式，后续升级 React 后，改回 disablePictureInPicture 属性


      setTimeout(() => {
        if (videoRef.current) {
          // @ts-ignore
          videoRef.current.disablePictureInPicture = true;
        }
      }, 100);
      return /*#__PURE__*/_createElement(_styled.VideoWrapper, {
        isMobile: isMobile
      }, /*#__PURE__*/_createElement("video", {
        // eslint-disable-line
        controls: true,
        "data-type": "onlineVideo",
        "raw-controls": "true" // UC内核独有属性
        ,
        controlsList: "nodownload noremoteplayback",
        ref: videoRef,
        poster: (0, _everUtils.sanitizeUrl)(poster),
        onCanPlay: () => handleMediaLoadSuccess(src),
        onError: () => handleMediaLoadError(src)
      }, /*#__PURE__*/_createElement("source", {
        src: src,
        type: "video/mp4"
      })));
    }

    if (type === 'youku') {
      // 容器有bug：https://work.aone.alibaba-inc.com/issue/26118887
      if (isIFramePlayerSupported && !isIFramePlayerSupported()) {
        return /*#__PURE__*/_createElement(_styled.YoukuPlayerPlaceholder, null, /*#__PURE__*/_createElement("span", null, locale.notSupportText));
      }

      const url = getIFramePlayerURL && getIFramePlayerURL(src);

      if (url) {
        return /*#__PURE__*/_createElement(_styled.YoukuPlayerWrapper, {
          isMobile: isMobile
        }, /*#__PURE__*/_createElement(_styled.YoukuPlayer, {
          src: url,
          allowFullScreen: true
        }));
      }

      return null;
    }

    return null;
  };

  return { ...(0, _everPluginOnlineVideo.moFactory)({}),
    renderNode: {
      onlineVideo: (props, _) => {
        const {
          attributes
        } = props;
        return /*#__PURE__*/_createElement("div", attributes, renderVideoContent(props));
      }
    }
  };
}
//# sourceMappingURL=index.js.map