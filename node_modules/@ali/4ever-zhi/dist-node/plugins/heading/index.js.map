{"version":3,"sources":["../../../../src/plugins/heading/index.tsx"],"names":["Paragraph","ReadParagraph","createParagraphPlugin","config","Heading","headingConfig","heading","onHeadingsChange","maybeRenderEditable","renderEditable","props","controller","next","renderNode","_","node","MoHeading","isHeading"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAL4B,a;AAO5B,MAAMA,SAAS,GAAG,uCAAkBC,kCAAlB,CAAlB;;AAEe,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AACpD,QAAMC,OAAO,GAAG,sBAAcJ,SAAd,CAAhB;AACA,QAAMK,aAAa,GAAGF,MAAM,CAACG,OAAP,IAAkB,EAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAuBF,aAA7B;AACA,QAAMG,mBAAmB,GAAG,OAAOD,gBAAP,KAA4B,UAA5B,GAAyC;AACnEE,IAAAA,cAAc,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,EAA0B;AACtC,0BACE,eAAC,uBAAD,6BACMF,KADN;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGE,QAAA,gBAAgB,EAAEN,aAAa,CAACE;AAHlC,UAKGK,IAAI,EALP,CADF;AASD;;AAXkE,GAAzC,GAYxB,EAZJ;AAaA,SAAO,EACL,GAAG,kCAAU,EAAV,CADE;AAEL,OAAGJ,mBAFE;;AAGLK,IAAAA,UAAU,CAACH,KAAD,EAAQI,CAAR,EAAWF,IAAX,EAAiB;AACzB,YAAM;AAAEG,QAAAA;AAAF,UAAWL,KAAjB;;AACA,UAAI,CAACM,gBAAUC,SAAV,CAAoBF,IAApB,CAAL,EAAgC;AAC9B,eAAOH,IAAI,EAAX;AACD;;AAED,0BAAO,eAAC,OAAD,6BAAaF,KAAb;AAAoB,QAAA,gBAAgB,EAAEH;AAAtC,SAAP;AACD;;AAVI,GAAP;AAYD","sourcesContent":["import * as React from 'react';\nimport { Heading as MoHeading } from '@ali/4ever-mo';\nimport HeadingWrapper from './HeadingWrapper';\nimport { ReadParagraph } from '@ali/4ever-plugin-paragraph';\nimport { createZhiListItem } from '@ali/4ever-plugin-list';\nimport createHeading from '../heading/Heading';\nimport { moFactory } from '@ali/4ever-plugin-heading';\n\nconst Paragraph = createZhiListItem(ReadParagraph);\n\nexport default function createParagraphPlugin(config) {\n  const Heading = createHeading(Paragraph);\n  const headingConfig = config.heading || {};\n  const { onHeadingsChange } = headingConfig;\n  const maybeRenderEditable = typeof onHeadingsChange === 'function' ? {\n    renderEditable(props, controller, next) {\n      return (\n        <HeadingWrapper\n          {...props}\n          controller={controller}\n          onHeadingsChange={headingConfig.onHeadingsChange}\n        >\n          {next()}\n        </HeadingWrapper>\n      );\n    },\n  } : {};\n  return {\n    ...moFactory({}),\n    ...maybeRenderEditable,\n    renderNode(props, _, next) {\n      const { node } = props;\n      if (!MoHeading.isHeading(node)) {\n        return next();\n      }\n\n      return <Heading {...props} onHeadingsChange={onHeadingsChange} />;\n    },\n  };\n}\n"],"file":"index.js"}