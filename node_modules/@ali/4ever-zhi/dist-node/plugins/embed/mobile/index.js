"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createEmbedPlugin;

var React = _interopRequireWildcard(require("react"));

var _everBamboo = require("@ali/4ever-bamboo");

var _everPluginEmbed = require("@ali/4ever-plugin-embed");

const _createElement = /*#__PURE__*/React.createElement;
const {
  FileTypeMap,
  MobileEmbedCard,
  EmbedFailedCard
} = _everBamboo.EmbedPlugin;

function createEmbedPlugin(config) {
  const renderPreview = props => {
    // 移动端除了音视频，其他的都是卡片
    return renderCard(props);
  };

  const renderCard = props => {
    const {
      node
    } = props;
    const {
      data
    } = node;
    const {
      src,
      name,
      type,
      size
    } = data;
    const {
      onPreview
    } = config.embed;
    return /*#__PURE__*/_createElement(MobileEmbedCard, {
      name: name,
      onPreview: onPreview,
      src: src,
      type: type,
      size: size
    });
  };

  return { ...(0, _everPluginEmbed.moFactory)({}),

    renderNode(props, _, next) {
      const {
        node
      } = props;

      if (node.type !== 'embed' || node.data.type === FileTypeMap.Video || node.data.type === FileTypeMap.Audio) {
        return next();
      }

      const {
        attributes
      } = props;
      const {
        data
      } = node;
      const {
        viewType,
        errorType
      } = data;

      if (errorType) {
        return /*#__PURE__*/_createElement(EmbedFailedCard, {
          node: node,
          locale: config?.embed?.locale || {}
        });
      }

      return /*#__PURE__*/_createElement("div", attributes, viewType === 'preview' ? renderPreview(props) : renderCard(props));
    }

  };
}
//# sourceMappingURL=index.js.map