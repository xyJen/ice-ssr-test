{"version":3,"sources":["../../../../../src/plugins/embed/mobile/index.tsx"],"names":["FileTypeMap","MobileEmbedCard","EmbedFailedCard","EmbedPlugin","createEmbedPlugin","config","renderPreview","props","renderCard","node","data","src","name","type","size","onPreview","embed","renderNode","_","next","Video","Audio","attributes","viewType","errorType","locale"],"mappings":";;;;;;;;;AAAA;;AACA;;AAGA;;uBAH4B,a;AAK5B,MAAM;AACJA,EAAAA,WADI;AAEJC,EAAAA,eAFI;AAGJC,EAAAA;AAHI,IAIFC,uBAJJ;;AAMe,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AAChD,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACA,WAAOC,UAAU,CAACD,KAAD,CAAjB;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAID,KAAD,IAAW;AAC5B,UAAM;AAAEE,MAAAA;AAAF,QAAWF,KAAjB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAWD,IAAjB;AACA,UAAM;AAAEE,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA;AAAnB,QAA4BJ,IAAlC;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAgBV,MAAM,CAACW,KAA7B;AAEA,wBACE,eAAC,eAAD;AACE,MAAA,IAAI,EAAEJ,IADR;AAEE,MAAA,SAAS,EAAEG,SAFb;AAGE,MAAA,GAAG,EAAEJ,GAHP;AAIE,MAAA,IAAI,EAAEE,IAJR;AAKE,MAAA,IAAI,EAAEC;AALR,MADF;AASD,GAfD;;AAiBA,SAAO,EACL,GAAG,gCAAU,EAAV,CADE;;AAELG,IAAAA,UAAU,CAACV,KAAD,EAAQW,CAAR,EAAWC,IAAX,EAAiB;AACzB,YAAM;AAAEV,QAAAA;AAAF,UAAWF,KAAjB;;AACA,UAAIE,IAAI,CAACI,IAAL,KAAc,OAAd,IAAyBJ,IAAI,CAACC,IAAL,CAAUG,IAAV,KAAmBb,WAAW,CAACoB,KAAxD,IAAiEX,IAAI,CAACC,IAAL,CAAUG,IAAV,KAAmBb,WAAW,CAACqB,KAApG,EAA2G;AACzG,eAAOF,IAAI,EAAX;AACD;;AACD,YAAM;AAAEG,QAAAA;AAAF,UAAiBf,KAAvB;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAWD,IAAjB;AACA,YAAM;AAAEc,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0Bd,IAAhC;;AAEA,UAAIc,SAAJ,EAAe;AACb,4BAAO,eAAC,eAAD;AAAiB,UAAA,IAAI,EAAEf,IAAvB;AAA6B,UAAA,MAAM,EAAEJ,MAAM,EAAEW,KAAR,EAAeS,MAAf,IAAyB;AAA9D,UAAP;AACD;;AAED,0BACE,sBAASH,UAAT,EACGC,QAAQ,KAAK,SAAb,GAAyBjB,aAAa,CAACC,KAAD,CAAtC,GAAgDC,UAAU,CAACD,KAAD,CAD7D,CADF;AAKD;;AApBI,GAAP;AAsBD","sourcesContent":["import * as React from 'react';\nimport {\n  EmbedPlugin,\n} from '@ali/4ever-bamboo';\nimport { moFactory } from '@ali/4ever-plugin-embed';\n\nconst {\n  FileTypeMap,\n  MobileEmbedCard,\n  EmbedFailedCard,\n} = EmbedPlugin;\n\nexport default function createEmbedPlugin(config) {\n  const renderPreview = (props) => {\n    // 移动端除了音视频，其他的都是卡片\n    return renderCard(props);\n  };\n\n  const renderCard = (props) => {\n    const { node } = props;\n    const { data } = node;\n    const { src, name, type, size } = data;\n    const { onPreview } = config.embed;\n\n    return (\n      <MobileEmbedCard\n        name={name}\n        onPreview={onPreview}\n        src={src}\n        type={type}\n        size={size}\n      />\n    );\n  };\n\n  return {\n    ...moFactory({}),\n    renderNode(props, _, next) {\n      const { node } = props;\n      if (node.type !== 'embed' || node.data.type === FileTypeMap.Video || node.data.type === FileTypeMap.Audio) {\n        return next();\n      }\n      const { attributes } = props;\n      const { data } = node;\n      const { viewType, errorType } = data;\n\n      if (errorType) {\n        return <EmbedFailedCard node={node} locale={config?.embed?.locale || {}} />;\n      }\n\n      return (\n        <div {...attributes}>\n          {viewType === 'preview' ? renderPreview(props) : renderCard(props)}\n        </div>\n      );\n    },\n  };\n}\n"],"file":"index.js"}