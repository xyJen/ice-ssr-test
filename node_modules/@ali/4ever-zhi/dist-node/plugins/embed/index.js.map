{"version":3,"sources":["../../../../src/plugins/embed/index.tsx"],"names":["previewHeight","DEFAULT_PREVIEW_HEIGHT","theme","embed","getFileTypeForRead","getIcon","formatSize","FileTypeMap","EmbedDownloadButton","EmbedCard","EmbedFailedCard","EmbedPlugin","createEmbedPlugin","config","onDownloadFile","props","node","data","src","name","type","size","embedConfig","downloadFile","preview","iframeId","previewErrorId","enlargeHideId","transformDocURL","onPreview","Video","Audio","then","res","previewUrl","iframe","document","getElementById","enlargeHide","style","display","Promise","resolve","reject","catch","e","console","error","previewError","renderCard","locale","allowDownload","renderPreviewHeader","mode","width","height","download","AutoInitPreview","initPreview","renderPreview","previewSize","reTryPreview","border","background","Ppt","renderNode","_","next","viewType","errorType","attributes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { sanitizeUrl } from '@ali/4ever-utils';\nimport { v4 as uuid } from 'uuid';\nimport { get } from 'lodash-es';\nimport {\n  EmbedPlugin,\n  theme,\n} from '@ali/4ever-bamboo';\nimport {\n  CardIconWrapper,\n  CardContentWrapper,\n  ContentHeader,\n  ContentDesc,\n  EmbedFilePreviewWrapper,\n  PreviewHeaderWrapper,\n  PreviewContentWrapper,\n  CardContentInnerWrapper,\n  PreviewError,\n  PreviewErrorText,\n  PreviewErrorRetry,\n  EnlargeIconHide,\n} from './styled';\nimport { moFactory } from '@ali/4ever-plugin-embed';\n\nconst { previewHeight: DEFAULT_PREVIEW_HEIGHT } = theme.embed;\n\nconst {\n  getFileTypeForRead,\n  getIcon,\n  formatSize,\n  FileTypeMap,\n  EmbedDownloadButton,\n  EmbedCard,\n  EmbedFailedCard,\n} = EmbedPlugin;\n\n// 只读下 allowDownload 附件只支持 boolean 类型\nexport default function createEmbedPlugin(config) {\n  const onDownloadFile = (props) => () => {\n    const { node } = props;\n    const { data } = node;\n    const { src, name, type, size } = data;\n    const embedConfig = config.embed || {};\n    const { downloadFile } = embedConfig;\n    if (downloadFile) {\n      downloadFile(src, {\n        name,\n        type,\n        size,\n      });\n    }\n  };\n\n  const preview = (props, iframeId, previewErrorId, enlargeHideId) => {\n    const { node } = props;\n    const { data } = node;\n    const { src, type } = data;\n    const embedConfig = config.embed || {};\n    const { transformDocURL: onPreview } = embedConfig;\n    if (!onPreview) {\n      return;\n    }\n    if (type === FileTypeMap.Video || type === FileTypeMap.Audio) {\n      return;\n    }\n    onPreview(src)\n      .then((res: {previewUrl? : string}) => {\n        const { previewUrl } = res || {};\n        if (previewUrl) {\n          const iframe = document.getElementById(iframeId) as HTMLIFrameElement;\n          if (iframe) {\n            iframe.src = sanitizeUrl(previewUrl);\n          }\n          const enlargeHide = document.getElementById(enlargeHideId);\n          if (enlargeHide) {\n            enlargeHide.style.display = 'block';\n          }\n          return Promise.resolve();\n        } else {\n          return Promise.reject('empty previewUrl')\n        }\n      })\n      .catch((e) => {\n        console.error(e);\n        const previewError = document.getElementById(previewErrorId);\n        const iframe = document.getElementById(iframeId) as HTMLIFrameElement;\n        if (previewError) {\n          previewError.style.display = 'block';\n        }\n        if (iframe) {\n          iframe.style.display = 'none';\n        }\n      });\n  };\n\n  const renderCard = (props) => {\n    const { node } = props;\n    const { locale = {}, allowDownload } = config.embed || {};\n    const { data } = node;\n    const { name, size } = data;\n\n    return (\n      <EmbedCard\n        name={name}\n        allowDownload={allowDownload}\n        isSelected={false}\n        node={node}\n        locale={locale}\n        onDownloadFile={onDownloadFile(props)}\n        size={size}\n      />\n    );\n  };\n\n  const renderPreviewHeader = (props, mode?: string) => {\n    const { locale = {}, allowDownload } = config.embed || {};\n    const { node } = props;\n    const { data } = node;\n    const { size, name } = data;\n\n    return (\n      <PreviewHeaderWrapper mode={mode}>\n        <CardIconWrapper>\n          <img\n            src={getIcon(getFileTypeForRead(name))}\n            alt=\"icon\"\n            style={{ width: 16, height: 23 }}\n          />\n        </CardIconWrapper>\n        <CardContentWrapper>\n          <CardContentInnerWrapper>\n            <ContentHeader mode={mode}>{name}</ContentHeader>\n            <ContentDesc mode={mode}>{formatSize(size)}</ContentDesc>\n          </CardContentInnerWrapper>\n        </CardContentWrapper>\n        {allowDownload &&\n          <EmbedDownloadButton\n            title={locale?.download}\n            onDownloadFile={onDownloadFile(props)}\n            allowDownload={allowDownload}\n          />}\n      </PreviewHeaderWrapper>\n    );\n  };\n\n  const AutoInitPreview = ({ initPreview }: any) => {\n    useEffect(() => {\n      if (initPreview) initPreview();\n    }, [initPreview]);\n\n    return null;\n  };\n\n  const renderPreview = (props) => {\n    const { locale = {} } = config.embed || {};\n    const { node } = props;\n    const { data } = node;\n    const { previewSize, type } = data;\n    const iframeId = uuid();\n    const previewErrorId = uuid();\n    const height = get(previewSize, 'height', DEFAULT_PREVIEW_HEIGHT);\n    const enlargeHideId = uuid();\n\n    return (\n      <EmbedFilePreviewWrapper style={{ height }}>\n        {renderPreviewHeader(props)}\n        <PreviewContentWrapper>\n          <PreviewError id={previewErrorId}>\n            <PreviewErrorText>\n              {locale.previewError}\n              <PreviewErrorRetry\n                onClick={() => preview(\n                  props,\n                  iframeId,\n                  previewErrorId,\n                  enlargeHideId,\n                )\n                }\n              >\n                {locale.reTryPreview}\n              </PreviewErrorRetry>\n            </PreviewErrorText>\n          </PreviewError>\n          <iframe\n            style={{\n              width: '100%',\n              height: '100%',\n              border: 'none',\n              background: '#EDEDED',\n            }}\n            title=\"preview\"\n            src=\"\"\n            id={iframeId}\n          />\n          {/* hack：阿里云文档预览页面会给ppt底下加个放大按钮，但在我们这里点了没反应，先隐藏 */}\n          {type === FileTypeMap.Ppt && <EnlargeIconHide id={enlargeHideId} />}\n        </PreviewContentWrapper>\n        <AutoInitPreview initPreview={() => { preview(props, iframeId, previewErrorId, enlargeHideId); }} />\n      </EmbedFilePreviewWrapper>\n    );\n  };\n\n  return {\n    ...moFactory({}),\n    renderNode(props, _, next) {\n      const { node } = props;\n      if (node.type !== 'embed' || node.data.type === FileTypeMap.Video || node.data.type === FileTypeMap.Audio) {\n        return next();\n      }\n      const { data } = node;\n      const { viewType, errorType } = data;\n\n      const { attributes } = props;\n\n      const { locale = {} } = config.embed || {};\n      if (errorType) return <EmbedFailedCard node={node} locale={locale} />;\n\n      return (\n        <div\n          {...attributes}\n        >\n          {viewType === 'preview' ? renderPreview(props) : renderCard(props)}\n        </div>\n      );\n    },\n  };\n}\n"],"file":"index.js"}