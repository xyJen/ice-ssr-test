{"version":3,"sources":["../../../../../src/plugins/link/linkCard/mobile.tsx"],"names":["copyLink","LinkCardPlugin","utils","LINK_CARD_COPY_LINK","actions","createZhiCalendarCardPlugin","config","linkConfig","locale","link","serializer","clipboard","cardType","isMobile","renderNode","queries","getMinTableColWidth","LinkPlugin","getMinTableColWidthForBlockLinkCard","onAction","action","controller","next","type","payload","node"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,uBAAeC,KAApC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BF,uBAAeG,OAA/C;AAEA,MAAMC,2BAA2B,GAAG,iCAAaC,MAAD,IAA2E;AACzH,QAAMC,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,EAAE,GAAGA,eAAOC,IAAP,CAAYD;AAAjB,KADS;AAEjB,OAAGF,MAAM,CAACG;AAFO,GAAnB;AAIA,QAAMC,UAAU,GAAGJ,MAAM,CAACK,SAAP,EAAkBD,UAArC;AACA,SAAO;AACLE,IAAAA,QAAQ,EAAE,MADL;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,UAAU,EAAE,+BAAiBP,UAAjB,EAA6B,IAA7B,CAHP;AAILQ,IAAAA,OAAO,EAAE;AACPC,MAAAA,mBAAmB,EAAEC,uBAAWC;AADzB,KAJJ;AAOLC,IAAAA,QAAQ,EAAE,CAACC,MAAD,EAASC,UAAT,EAAqBC,IAArB,KAA8B;AACtC,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAoBJ,MAA1B;;AAEA,UAAIG,IAAI,KAAKpB,mBAAb,EAAkC;AAChC,cAAM;AAAEsB,UAAAA;AAAF,YAAWD,OAAjB;AACA,eAAOxB,QAAQ,CAACqB,UAAD,EAAaI,IAAb,EAAmBf,UAAU,IAAIW,UAAU,CAACX,UAA5C,CAAf;AACD;;AAED,aAAOY,IAAI,EAAX;AACD;AAhBI,GAAP;AAkBD,CAxBmC,CAApC;eA0BejB,2B","sourcesContent":["import { zhiCardFactory as cardFactory } from '@ali/4ever-factory';\nimport locale from '../../../locales/zh_CN';\nimport createRenderNode from './createRenderNode';\nimport { BlockLinkCard, LinkPluginConfig } from '../types';\nimport { LinkCardPlugin } from '@ali/4ever-bi';\nimport { LinkPlugin } from '@ali/4ever-bamboo';\n\nconst { copyLink } = LinkCardPlugin.utils;\nconst { LINK_CARD_COPY_LINK } = LinkCardPlugin.actions;\n\nconst createZhiCalendarCardPlugin = cardFactory((config: { link?: LinkPluginConfig, clipboard?: { serializer?: any } }) => {\n  const linkConfig = {\n    locale: { ...locale.link.locale },\n    ...config.link\n  };\n  const serializer = config.clipboard?.serializer;\n  return {\n    cardType: 'link',\n    isMobile: true,\n    renderNode: createRenderNode(linkConfig, true),\n    queries: {\n      getMinTableColWidth: LinkPlugin.getMinTableColWidthForBlockLinkCard\n    },\n    onAction: (action, controller, next) => {\n      const { type, payload } = action;\n\n      if (type === LINK_CARD_COPY_LINK) {\n        const { node } = payload as { node: BlockLinkCard };\n        return copyLink(controller, node, serializer || controller.serializer);\n      }\n\n      return next();\n    }\n  };\n});\n\nexport default createZhiCalendarCardPlugin;\n"],"file":"mobile.js"}