{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createRenderNode.tsx"],"names":["createRenderNode","param","props","controller","sticker","attributes","children","node","Container","TYPE","data","subType","ColorBlocks","SUB_TYPE"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AAEA;;uBAJ4B,a;;AAM5B,SAASA,gBAAT,CAA0BC,KAA1B,EAEyB;AACvB,SAAO;AACL,qBAAiB,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACtC,YAAM;AAAEC,QAAAA;AAAF,UAAcH,KAApB;AACA,YAAM;AAAEI,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAA2BJ,KAAjC;AACA,YAAMK,IAAI,GAAGL,KAAK,CAACK,IAAnB;AAEA,0BACE,eAAC,gBAAD;AACE,QAAA,UAAU,EAAEJ,UADd;AAEE,QAAA,IAAI,EAAEI,IAFR;AAGE,QAAA,UAAU,EAAEF,UAHd;AAIE,QAAA,OAAO,EAAED;AAJX,SAMGE,QAAQ,EANX,CADF;AAUD,KAhBI;AAiBL,KAACE,kBAAUC,IAAX,GAAkB,CAACP,KAAD,EAAQC,UAAR,KAAuB;AACvC,YAAM;AAAEC,QAAAA;AAAF,UAAcH,KAApB;AACA,YAAM;AAAEI,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAA2BJ,KAAjC;AACA,YAAMK,IAAI,GAAGL,KAAK,CAACK,IAAnB;;AAEA,UAAIA,IAAI,CAACG,IAAL,CAAUC,OAAV,KAAsBC,oBAAYC,QAAtC,EAAgD;AAC9C,4BAAO,oCAAP;AACD;;AACD,0BACE,eAAC,gBAAD;AACE,QAAA,UAAU,EAAEV,UADd;AAEE,QAAA,IAAI,EAAEI,IAFR;AAGE,QAAA,UAAU,EAAEF,UAHd;AAIE,QAAA,OAAO,EAAED;AAJX,SAMGE,QAAQ,EANX,CADF;AAUD;AAnCI,GAAP;AAqCD;;eAEcN,gB","sourcesContent":["import * as React from 'react';\nimport { Plugin, Block } from '@ali/4ever-cangjie';\nimport { StickerPlugin } from '@ali/4ever-bamboo';\nimport { ColorBlocks, Container } from '@ali/4ever-mo';\n\nimport Callout from '../components/callout';\n\nfunction createRenderNode(param: {\n  sticker: StickerPlugin.Sticker;\n}): Plugin['renderNode'] {\n  return {\n    'callout-group': (props, controller) => {\n      const { sticker } = param;\n      const { attributes, children } = props;\n      const node = props.node as unknown as Block;\n\n      return (\n        <Callout\n          controller={controller}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n    [Container.TYPE]: (props, controller) => {\n      const { sticker } = param;\n      const { attributes, children } = props;\n      const node = props.node as unknown as Container;\n      \n      if (node.data.subType !== ColorBlocks.SUB_TYPE) {\n        return <></>;\n      }\n      return (\n        <Callout\n          controller={controller}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n  };\n}\n\nexport default createRenderNode;\n"],"file":"createRenderNode.js"}