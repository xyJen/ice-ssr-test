"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createGroupNodes;

var _fastDeepEqual = _interopRequireDefault(require("fast-deep-equal"));

var _everMo = require("@ali/4ever-mo");

var _utils = require("../utils");

function createGroupNodes(config) {
  return function groupNodes([start, end], ctx, controller, next) {
    const {
      parent,
      groups
    } = ctx;
    const parentGroup = groups[groups.length - 1];
    const first = parent.nodes[start];

    if (config.shouldDisableGroup && config.shouldDisableGroup()) {
      return next();
    } // 仅仅支持一级分组


    if ((_everMo.Paragraph.isParagraph(first) || _everMo.Heading.isHeading(first)) && first.data.calloutPr && !(0, _utils.isCallout)(parentGroup)) {
      let i = start + 1;

      while (i < end) {
        const node = parent.nodes[i];

        if (!((_everMo.Paragraph.isParagraph(node) || _everMo.Heading.isHeading(node)) && node.data.calloutPr && (0, _fastDeepEqual.default)(node.data.calloutPr, first.data.calloutPr))) {
          break;
        }

        i += 1;
      }

      const children = parent.nodes.slice(start, i);
      const result = (0, _utils.createCallout)({
        data: first.data,
        key: `${first.key}-group`,
        nodes: children
      });
      return {
        node: result,
        remainedRange: [i, end]
      };
    }

    return next();
  };
}
//# sourceMappingURL=createGroupNodes.js.map