{"version":3,"sources":["../../../../../src/plugins/callout/components/callout.tsx"],"names":["StickerItem","StickerPlugin","CalloutBoxWrapper","CalloutBox","ContentBox","StickerBox","StickerInnerBox","DEFAULTS","STICKER_SIZE","PADDING_TOP","CalloutPlugin","Callout","props","node","attributes","children","sticker","contentBoxRef","React","useRef","stickerBoxRef","nodes","bgcolor","stickerCode","stcode","border","showSticker","useMemo","calloutPr","data","backgroundColor","metadata","Boolean","showstk","borderColor","whiteBorder","stickerTop","setStickerTop","useState","zoom","useEffect","current","rect","stickerRect","getBoundingClientRect","height","newTop","top","Math","round","stopPropagation","useCallback","event","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block, Controller, useZoom } from '@ali/4ever-cangjie';\nimport { ParagraphData, ColorBlocks } from '@ali/4ever-mo';\nimport { getRectOfNodeFirstText } from '@ali/4ever-utils';\nimport { StickerPlugin, CalloutPlugin } from '@ali/4ever-bamboo';\nimport { isCallout } from '../utils';\n\nconst { StickerItem } = StickerPlugin;\nconst {\n  CalloutBoxWrapper,\n  CalloutBox,\n  ContentBox,\n  StickerBox,\n  StickerInnerBox,\n  DEFAULTS,\n  STICKER_SIZE,\n  PADDING_TOP,\n} = CalloutPlugin;\n\nexport interface CalloutProps {\n  controller: Controller;\n  node: Block<ParagraphData> | ColorBlocks;\n  attributes: Record<string, string>;\n  sticker: StickerPlugin.Sticker;\n}\n\n/**\n * 高亮区块\n * @param props\n * @returns\n */\nconst Callout: React.FC<CalloutProps> = (props) => {\n  const { node, attributes, children, sticker } = props;\n\n  const contentBoxRef = React.useRef<HTMLDivElement>();\n  const stickerBoxRef = React.useRef<HTMLDivElement>();\n\n  const { nodes } = node;\n  const {\n    bgcolor = DEFAULTS.bgcolor,\n    sticker: stickerCode = DEFAULTS.stcode,\n    border,\n    showSticker,\n  } = React.useMemo(() => {\n    if (isCallout(node)) {\n      const { calloutPr } = node.data;\n      return {\n        bgcolor: calloutPr?.backgroundColor,\n        sticker: calloutPr?.stickerCode,\n        showSticker: true,\n      };\n    } else {\n      const { metadata } = (node as ColorBlocks).data;\n      return { ...metadata, showSticker: Boolean(metadata.showstk) };\n    }\n  }, [node]);\n\n  // 边框色默认为背景色, 使边框和文字对齐\n  let borderColor = border || bgcolor;\n  if (!border && bgcolor === '#FFFFFF') {\n    borderColor = DEFAULTS.whiteBorder;\n  }\n\n  const [stickerTop, setStickerTop] = React.useState(0);\n  const zoom = useZoom();\n  React.useEffect(() => {\n    if (stickerBoxRef.current && nodes[0]) {\n      const rect = getRectOfNodeFirstText(nodes[0] as Block);\n      const stickerRect = stickerBoxRef.current?.getBoundingClientRect();\n      if (rect && rect.height && stickerRect) {\n        const newTop =\n          rect.top / zoom -\n          stickerRect.top / zoom -\n          PADDING_TOP +\n          (rect.height / zoom - STICKER_SIZE) / 2 -\n          1;\n        setStickerTop(Math.round(newTop));\n      }\n    }\n  }, [node, nodes, stickerBoxRef, zoom]);\n\n  const stopPropagation = React.useCallback((event) => {\n    event.stopPropagation();\n  }, []);\n\n  return (\n    <CalloutBoxWrapper {...attributes} data-cangjie-group-block>\n      <CalloutBox\n        className=\"callout-box\"\n        backgroundColor={bgcolor}\n        borderColor={borderColor}\n        tabIndex={0}\n      >\n        {Boolean(showSticker) && (\n          <StickerBox\n            ref={stickerBoxRef}\n            onMouseDown={stopPropagation}\n            onClick={stopPropagation}\n          >\n            <StickerInnerBox style={{ top: stickerTop }}>\n              <StickerItem\n                sz={STICKER_SIZE}\n                code={stickerCode}\n                sticker={sticker}\n              />\n            </StickerInnerBox>\n          </StickerBox>\n        )}\n\n        <ContentBox showSticker={showSticker} ref={contentBoxRef}>\n          {children}\n        </ContentBox>\n      </CalloutBox>\n    </CalloutBoxWrapper>\n  );\n};\n\nCallout.displayName = 'Callout';\n\nexport default Callout;\n"],"file":"callout.js"}