{"version":3,"sources":["../../../src/__tests__/mobileLink.test.tsx"],"names":["describe","openLink","jest","fn","spiedWindowOpen","spiedConsoleError","beforeAll","spyOn","window","mockImplementation","afterAll","mockRestore","afterEach","mockReset","test","asl","link","container","expect","toMatchSnapshot","handleOpenLink","linkButton","querySelector","fireEvent","click","toHaveBeenCalledWith","linkInCardStyle","reader","getByTestId","toBeTruthy","toolbar","findByTestId","queryByTestId","toBeFalsy","queryByText"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { render } from '@testing-library/react';\nimport {\n  fireEvent,\n} from '@ali/4ever-dev-test';\nimport { MobileReader as Zhi } from './reader';\nimport link from './fixtures/link.json';\nimport linkInCardStyle from './fixtures/linkInCardStyle.json';\n\ndescribe('Zhi:link', () => {\n\n  const openLink = jest.fn();\n  let spiedWindowOpen: jest.SpyInstance;\n  let spiedConsoleError: jest.SpyInstance;\n\n  beforeAll(() => {\n    spiedWindowOpen = jest.spyOn(window, 'open');\n    spiedWindowOpen.mockImplementation(openLink);\n  });\n\n  afterAll(() => {\n    spiedConsoleError.mockRestore();\n    spiedWindowOpen.mockRestore();\n  });\n\n  afterEach(() => {\n    openLink.mockReset();\n  });\n\n  test('正确渲染', () => {\n    const asl = ['root', link];\n    const { container } = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n  });\n\n  test('点击链接触发 onOpenLink 事件', () => {\n    const asl = ['root', link];\n    const handleOpenLink = jest.fn();\n    const { container } = render(<Zhi content={asl} openLink={handleOpenLink} />);\n    const linkButton = container.querySelector('a');\n    fireEvent.click(linkButton);\n    expect(handleOpenLink).toHaveBeenCalledWith('https://www.baidu.com/');\n  });\n});\n\ndescribe('Zhi:linkInCardStyle', () => {\n  // 链接卡片依赖于 we-design 不应该使用 snapshot\n  test('正确渲染', () => {\n    const asl = ['root', linkInCardStyle];\n    const reader = render(<Zhi content={asl} />);\n    expect(reader.getByTestId('link-card')).toBeTruthy();\n  });\n\n  test('移动端默认显示复制按键', async () => {\n    const asl = ['root', linkInCardStyle];\n    const handleOpenLink = jest.fn();\n    const reader = render(<Zhi content={asl} openLink={handleOpenLink} />);\n    const toolbar = await reader.findByTestId('link-toolbar-copy');\n    expect(toolbar).toBeTruthy();\n  });\n\n  test('移动端不可复制时，不显示复制按键', async () => {\n    const asl = ['root', linkInCardStyle];\n    const handleOpenLink = jest.fn();\n    const reader = render(<Zhi canCopy={false} content={asl} openLink={handleOpenLink} />);\n    expect(reader.queryByTestId('link-toolbar-copy')).toBeFalsy();\n  });\n\n  test('点击链接触发 onOpenLink 事件', () => {\n    const asl = ['root', linkInCardStyle];\n    const handleOpenLink = jest.fn();\n    const reader = render(<Zhi content={asl} openLink={handleOpenLink} />);\n    const linkButton = reader.queryByText('link');\n    fireEvent.click(linkButton);\n    expect(handleOpenLink).toHaveBeenCalledWith('https://www.baidu.com/');\n  });\n});\n"],"file":"mobileLink.test.js"}