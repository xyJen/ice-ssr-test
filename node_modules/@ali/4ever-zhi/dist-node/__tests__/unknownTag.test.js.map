{"version":3,"sources":["../../../src/__tests__/unknownTag.test.tsx"],"names":["textNode","describe","it","asl","unknownTag","container","expect","toMatchSnapshot","queryByText","toBe","unknownTagError","unknownTagErrorChildren"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAJ4B,a;AAM5B,MAAMA,QAAQ,GAAG,CACf,MADe,EAEf;AACE,eAAa;AADf,CAFe,EAKf,CACE,MADF,EAEE;AACE,eAAa;AADf,CAFF,EAKE,oBALF,CALe,CAAjB;AAcAC,QAAQ,CAAC,SAAD,EAAY,MAAM;AACxBC,EAAAA,EAAE,CAAC,MAAD,EAAS,MAAM;AACf,UAAMC,GAAG,GAAG,CACV,MADU,EAEV,CACE,GADF,EAEEH,QAFF,EAGEI,mBAHF,CAFU,CAAZ;AAQA,UAAMC,SAAS,GAAG,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF;AAAd,MAAP,CAAlB;AACAG,IAAAA,MAAM,CAACD,SAAD,CAAN,CAAkBE,eAAlB;AACAD,IAAAA,MAAM,CAAC,CAAC,CAACD,SAAS,CAACG,WAAV,CAAsB,OAAtB,CAAH,CAAN,CAAyCC,IAAzC,CAA8C,IAA9C;AACD,GAZC,CAAF;AAcAP,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMC,GAAG,GAAG,CACV,MADU,EAEV,CACE,GADF,EAEEH,QAFF,EAGEU,wBAHF,CAFU,CAAZ;AAQA,UAAML,SAAS,GAAG,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF;AAAd,MAAP,CAAlB;AACAG,IAAAA,MAAM,CAACD,SAAD,CAAN,CAAkBE,eAAlB;AACAD,IAAAA,MAAM,CAAC,CAAC,CAACD,SAAS,CAACG,WAAV,CAAsB,OAAtB,CAAH,CAAN,CAAyCC,IAAzC,CAA8C,IAA9C;AACD,GAZC,CAAF;AAcAP,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC9B,UAAMC,GAAG,GAAG,CACV,MADU,EAEV,CACE,GADF,EAEEH,QAFF,EAGEW,gCAHF,CAFU,CAAZ;AAQA,UAAMN,SAAS,GAAG,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF;AAAd,MAAP,CAAlB;AACAG,IAAAA,MAAM,CAACD,SAAD,CAAN,CAAkBE,eAAlB;AACAD,IAAAA,MAAM,CAAC,CAAC,CAACD,SAAS,CAACG,WAAV,CAAsB,OAAtB,CAAH,CAAN,CAAyCC,IAAzC,CAA8C,IAA9C;AACD,GAZC,CAAF;AAaD,CA1CO,CAAR","sourcesContent":["import * as React from 'react';\nimport { render } from '@testing-library/react';\nimport Zhi from './reader';\nimport unknownTag from './fixtures/unknownTag.json';\nimport unknownTagError from './fixtures/unknownTag-error.json';\nimport unknownTagErrorChildren from './fixtures/unknownTag-error-children.json';\n\nconst textNode = [\n  'span',\n  {\n    'data-type': 'text',\n  },\n  [\n    'span',\n    {\n      'data-type': 'leaf',\n    },\n    'This is paragraph.',\n  ],\n];\n\ndescribe('Zhi:tag', () => {\n  it('正确渲染', () => {\n    const asl = [\n      'root',\n      [\n        'p',\n        textNode,\n        unknownTag,\n      ],\n    ];\n    const container = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n    expect(!!container.queryByText('暂无法解析')).toBe(true);\n  });\n\n  it('renderNode 异常渲染', () => {\n    const asl = [\n      'root',\n      [\n        'p',\n        textNode,\n        unknownTagError,\n      ],\n    ];\n    const container = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n    expect(!!container.queryByText('暂无法解析')).toBe(true);\n  });\n\n  it('renderChildren 异常渲染', () => {\n    const asl = [\n      'root',\n      [\n        'p',\n        textNode,\n        unknownTagErrorChildren,\n      ],\n    ];\n    const container = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n    expect(!!container.queryByText('暂无法解析')).toBe(true);\n  });\n});"],"file":"unknownTag.test.js"}