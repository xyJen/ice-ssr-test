{"version":3,"sources":["../../../src/__tests__/unknownCard.test.tsx"],"names":["describe","it","asl","unknownCard","container","expect","toMatchSnapshot","queryByText","toBe","unknownCardError","unknownCardErrorChildren"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAJ4B,a;AAM5BA,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCC,EAAAA,EAAE,CAAC,MAAD,EAAS,MAAM;AACf,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASC,oBAAT,CAAZ;AACA,UAAMC,SAAS,GAAG,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF;AAAd,MAAP,CAAlB;AACAG,IAAAA,MAAM,CAACD,SAAD,CAAN,CAAkBE,eAAlB;AACAD,IAAAA,MAAM,CAAC,CAAC,CAACD,SAAS,CAACG,WAAV,CAAsB,OAAtB,CAAH,CAAN,CAAyCC,IAAzC,CAA8C,IAA9C;AACD,GALC,CAAF;AAOAP,EAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1B,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASO,yBAAT,CAAZ;AACA,UAAML,SAAS,GAAG,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF;AAAd,MAAP,CAAlB;AACAG,IAAAA,MAAM,CAACD,SAAD,CAAN,CAAkBE,eAAlB;AACAD,IAAAA,MAAM,CAAC,CAAC,CAACD,SAAS,CAACG,WAAV,CAAsB,OAAtB,CAAH,CAAN,CAAyCC,IAAzC,CAA8C,IAA9C;AACD,GALC,CAAF;AAOAP,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC9B,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASQ,iCAAT,CAAZ;AACA,UAAMN,SAAS,GAAG,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF;AAAd,MAAP,CAAlB;AACAG,IAAAA,MAAM,CAACD,SAAD,CAAN,CAAkBE,eAAlB;AACAD,IAAAA,MAAM,CAAC,CAAC,CAACD,SAAS,CAACG,WAAV,CAAsB,OAAtB,CAAH,CAAN,CAAyCC,IAAzC,CAA8C,IAA9C;AACD,GALC,CAAF;AAMD,CArBO,CAAR","sourcesContent":["import * as React from 'react';\nimport { render } from '@testing-library/react';\nimport Zhi from './reader';\nimport unknownCard from './fixtures/unknownCard.json';\nimport unknownCardError from './fixtures/unknownCard-error.json';\nimport unknownCardErrorChildren from './fixtures/unknownCard-error-children.json';\n\ndescribe('Zhi:unknownCard', () => {\n  it('正确渲染', () => {\n    const asl = ['root', unknownCard];\n    const container = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n    expect(!!container.queryByText('暂无法解析')).toBe(true);\n  });\n\n  it('renderNode 异常渲染', () => {\n    const asl = ['root', unknownCardError];\n    const container = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n    expect(!!container.queryByText('暂无法解析')).toBe(true);\n  });\n\n  it('renderChildren 异常渲染', () => {\n    const asl = ['root', unknownCardErrorChildren];\n    const container = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n    expect(!!container.queryByText('暂无法解析')).toBe(true);\n  });\n});\n"],"file":"unknownCard.test.js"}