"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var React = _interopRequireWildcard(require("react"));

var _react2 = require("@testing-library/react");

var _reader = _interopRequireDefault(require("./reader"));

var _image = _interopRequireDefault(require("./fixtures/image.json"));

var _imageBorder = _interopRequireDefault(require("./fixtures/imageBorder.json"));

const _createElement = /*#__PURE__*/React.createElement;
const URL = 'https://cn.bing.com/az/hprichbg/rb/TeslaCoil_EN-CN1604235004_1920x1080.jpg';

function renderUrlMap(url, data) {
  return `${url}?x-oss-process=image/resize,w_${data.width}`;
}

;
describe('Zhi:image', () => {
  it('正确渲染', () => {
    const asl = ['root', _image.default];
    const {
      container
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.default, {
      content: asl
    }));
    expect(container.innerHTML).toMatchSnapshot();
  }); // 有报错未找到原因，先注释

  it.skip('正确渲染 border', () => {
    const asl = ['root', _imageBorder.default];
    const {
      container
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.default, {
      content: asl
    }));
    expect(container.innerHTML).toMatchSnapshot();
  }); // 由于图片有加载占位图，不会直接展示 img 标签
  // 而 enzyme 异步请求图片一直超时，暂不处理

  it.skip('点击图片触发 onZoomImage 事件', () => {
    const asl = ['root', _image.default];
    const handleZoomImage = jest.fn();
    const {
      container
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.default, {
      content: asl,
      previewImage: handleZoomImage,
      transformImageURL: renderUrlMap
    }));
    expect(container.querySelectorAll('img')).toHaveLength(0);
    expect(container.querySelector('img').src).toBe(`${URL}?x-oss-process=image/resize,w_1920`);

    _react2.fireEvent.click(container.querySelector('img'));

    expect(handleZoomImage).toHaveBeenCalledWith(URL);
  });
  it.skip('没有 src 属性则不渲染节点', () => {
    const asl = ['root', ['p', ['img', {
      src: null
    }]]];
    const {
      container
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.default, {
      content: asl
    }));
    expect(container.querySelectorAll('img')).toHaveLength(0);
  });
});
//# sourceMappingURL=image.test.js.map