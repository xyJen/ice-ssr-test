"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var React = _interopRequireWildcard(require("react"));

var _react2 = require("@testing-library/react");

var _reader = _interopRequireDefault(require("../reader"));

var _voteCard = _interopRequireDefault(require("../fixtures/voteCard.json"));

var _everDevTest = require("@ali/4ever-dev-test");

const _createElement = /*#__PURE__*/React.createElement;

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

const createData = {
  title: '文字蓝鲸团队2022团建计划',
  voteId: 'abc-123',
  voteType: 1,
  optionInfoList: [{
    content: '北京环球影城',
    pos: 1,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '上海迪士尼',
    pos: 2,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '广州长隆乐园',
    pos: 3,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '常州中华恐龙园',
    pos: 4,
    optionTicket: 0,
    userOptionTicket: 0
  }],
  endTime: new Date().getTime() + 1000 * 60 * 60 * 24 * 7,
  showTicketBeforeVoting: false
};
const modifyData = {
  title: '文字蓝鲸团队2022团建计划',
  voteId: 'abc-123',
  voteType: 2,
  optionInfoList: [{
    content: '北京环球影城',
    pos: 1,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '上海迪士尼',
    pos: 2,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '广州长隆乐园',
    pos: 3,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '常州中华恐龙园',
    pos: 4,
    optionTicket: 0,
    userOptionTicket: 0
  }],
  endTime: new Date().getTime() + 1000 * 60 * 60 * 24 * 7,
  showTicketBeforeVoting: false
};
const votedData = {
  title: '文字蓝鲸团队2022团建计划',
  voteId: 'abc-123',
  voteType: 2,
  optionInfoList: [{
    content: '北京环球影城',
    pos: 1,
    optionTicket: 0,
    userOptionTicket: 1
  }, {
    content: '上海迪士尼',
    pos: 2,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '广州长隆乐园',
    pos: 3,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '常州中华恐龙园',
    pos: 4,
    optionTicket: 0,
    userOptionTicket: 0
  }],
  endTime: new Date().getTime() + 1000 * 60 * 60 * 24 * 7,
  showTicketBeforeVoting: false,
  participateUserCount: 1,
  totalVoteCount: 1
};
const voteCardConfig = {
  locale: {
    remove: '删除',
    add: '添加',
    expired: '截止',
    reVote: '重新投票',
    deadline: '截止日期',
    unit: '票',
    total: '人投票',
    submit: '投票',
    noDeadline: '无截止日期',
    creator: '创建',
    titlePlaceholder: '请输入标题',
    optionPlaceholder: '请输入选项内容',
    checkbox: '多选',
    resultShow: '单选',
    always: '始终显示',
    afterVote: '投票后可见',
    radio: '单选',
    save: '保存',
    cancel: '取消',
    edit: '编辑'
  },
  createVote: () => {
    return Promise.resolve(createData);
  },
  getVote: (_id, setData) => {
    return setData(createData);
  },
  modifyVote: () => {
    return Promise.resolve(modifyData);
  },
  submitVote: () => {
    return Promise.resolve(votedData);
  },
  isGrayEnable: true
};
const voteCardConfig2 = {
  locale: {
    remove: '删除',
    add: '添加',
    expired: '截止',
    reVote: '重新投票',
    deadline: '截止日期',
    unit: '票',
    total: '人投票',
    submit: '投票',
    noDeadline: '无截止日期',
    creator: '创建',
    titlePlaceholder: '请输入标题',
    optionPlaceholder: '请输入选项内容',
    checkbox: '多选',
    resultShow: '单选',
    always: '始终显示',
    afterVote: '投票后可见',
    radio: '单选',
    save: '保存',
    cancel: '取消',
    edit: '编辑'
  },
  createVote: () => {
    return Promise.resolve(createData);
  },
  getVote: (_id, setData) => {
    return setData(createData);
  },
  modifyVote: () => {
    return Promise.resolve(modifyData);
  },
  submitVote: () => {
    return Promise.resolve({});
  },
  isGrayEnable: true
};
describe('Zhi:calendarCard', () => {
  it('pc端正常显示投票', () => {
    const asl = ['root', _voteCard.default];
    const container = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.default, {
      content: asl,
      voteCardConfig: voteCardConfig
    }));
    const voteDom = container.getByTestId('vote');
    expect(!!voteDom).toBe(true);
  });
  it('pc端可以发起投票', async () => {
    const asl = ['root', _voteCard.default];
    const {
      queryByTestId,
      queryByText
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.default, {
      content: asl,
      voteCardConfig: voteCardConfig
    }));
    await sleep(1000);
    const votingCard = queryByTestId('card-vote-container-voting');
    expect(!!votingCard).toBe(true);
    const option = queryByText('北京环球影城');

    _everDevTest.fireEvent.click(option);

    const submitBtn = queryByText('投票');

    _everDevTest.fireEvent.click(submitBtn);

    await sleep(2000);
    await (0, _react2.waitFor)(() => {
      const voteResultCard = queryByTestId('card-vote-container-result');
      expect(!!voteResultCard).toBe(true);
    });
  });
  it('pc端可以发起投票，投票截止', async () => {
    const asl = ['root', _voteCard.default];
    const {
      queryByTestId,
      queryByText
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.default, {
      content: asl,
      voteCardConfig: voteCardConfig2
    }));
    await sleep(1000);
    const votingCard = queryByTestId('card-vote-container-voting');
    expect(!!votingCard).toBe(true);
    const option = queryByText('北京环球影城');

    _everDevTest.fireEvent.click(option);

    const submitBtn = queryByText('投票');

    _everDevTest.fireEvent.click(submitBtn);

    await sleep(2000);
    await (0, _react2.waitFor)(() => {
      const voteResultCard = queryByTestId('card-vote-container-result');
      expect(!!voteResultCard).toBe(true);
    });
  });
});
//# sourceMappingURL=ui.test.js.map