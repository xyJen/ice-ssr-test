{"version":3,"sources":["../../../src/__tests__/code.test.tsx"],"names":["sleep","ms","Promise","resolve","setTimeout","describe","it","asl","code","container","rerender","expect","toMatchSnapshot","mark","querySelector","reject","Error","timeout"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;;AAI5B;AACA;AACA;AACA;AAEA,SAASA,KAAT,CAAeC,EAAf,EAA2B;AACzB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACD;;AAEDI,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBC,EAAAA,EAAE,CAAC,MAAD,EAAS,YAAY;AACrB,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASC,aAAT,CAAZ;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0B,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEH;AAAd,MAAP,CAAhC;AACAI,IAAAA,MAAM,CAACF,SAAD,CAAN,CAAkBG,eAAlB;;AAHqB,4BAMV,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEL;AAAd,MANU;;AAIrB,UAAM,qBAAQ,YAAY;AACxB;AACAG,MAAAA,QAAQ,MAAR;AACA,YAAMV,KAAK,CAAC,CAAD,CAAX;AACA,YAAMa,IAAI,GAAGJ,SAAS,CAACK,aAAV,CAAwB,cAAxB,CAAb;;AACA,UAAI,CAACD,IAAL,EAAW;AACT,eAAOX,OAAO,CAACa,MAAR,CAAeC,KAAK,CAAC,cAAD,CAApB,CAAP;AACD;AACF,KARK,EAQH;AACDC,MAAAA,OAAO,EAAE,OAAO;AADf,KARG,CAAN;AAWAN,IAAAA,MAAM,CAACF,SAAD,CAAN,CAAkBG,eAAlB;AACD,GAhBC,CAAF;AAkBAN,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAY;AAC7B,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASC,aAAT,CAAZ;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0B,kCAAO,eAAC,oBAAD;AAAc,MAAA,OAAO,EAAEH;AAAvB,MAAP,CAAhC;AACAI,IAAAA,MAAM,CAACF,SAAD,CAAN,CAAkBG,eAAlB;;AAH6B,6BAMlB,eAAC,oBAAD;AAAc,MAAA,OAAO,EAAEL;AAAvB,MANkB;;AAI7B,UAAM,qBAAQ,YAAY;AACxB;AACAG,MAAAA,QAAQ,OAAR;AACA,YAAMG,IAAI,GAAGJ,SAAS,CAACK,aAAV,CAAwB,UAAxB,CAAb;;AACA,UAAI,CAACD,IAAL,EAAW;AACT,eAAOX,OAAO,CAACa,MAAR,CAAeC,KAAK,CAAC,gBAAD,CAApB,CAAP;AACD;AACF,KAPK,CAAN;AAQAL,IAAAA,MAAM,CAACF,SAAD,CAAN,CAAkBG,eAAlB;AACD,GAbC,CAAF;AAcD,CAjCO,CAAR","sourcesContent":["import * as React from 'react';\nimport { render, waitFor } from '@testing-library/react';\nimport Zhi, { MobileReader } from './reader';\nimport code from './fixtures/code.json';\n\n// jest.mock(\n//   \"@ali/4ever-bamboo/src/plugins/code/components/simpleCode\",\n//   () => () => <code />,\n// );\n\nfunction sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\ndescribe('Zhi:code', () => {\n  it('正确渲染', async () => {\n    const asl = ['root', code];\n    const { container, rerender } = render(<Zhi content={asl} />);\n    expect(container).toMatchSnapshot();\n    await waitFor(async () => {\n      // codemirror.setOption 似乎不会触发 container 的更新，必须要 rerender\n      rerender(<Zhi content={asl} />);\n      await sleep(1);\n      const mark = container.querySelector('.cm-variable');\n      if (!mark) {\n        return Promise.reject(Error('no highlight'));\n      }\n    }, {\n      timeout: 1000 * 10,\n    });\n    expect(container).toMatchSnapshot();\n  });\n\n  it('正确渲染(mobile)', async () => {\n    const asl = ['root', code];\n    const { container, rerender } = render(<MobileReader content={asl} />);\n    expect(container).toMatchSnapshot();\n    await waitFor(async () => {\n      // codemirror.setOption 似乎不会触发 container 的更新，必须要 rerender\n      rerender(<MobileReader content={asl} />);\n      const mark = container.querySelector('pre>code');\n      if (!mark) {\n        return Promise.reject(Error('no simple code'));\n      }\n    });\n    expect(container).toMatchSnapshot();\n  });\n});\n"],"file":"code.test.js"}