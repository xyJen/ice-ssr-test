"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var React = _interopRequireWildcard(require("react"));

var _react2 = require("@testing-library/react");

var _everDevTest = require("@ali/4ever-dev-test");

var _reader = require("./reader");

var _link = _interopRequireDefault(require("./fixtures/link.json"));

var _linkInCardStyle = _interopRequireDefault(require("./fixtures/linkInCardStyle.json"));

const _createElement = /*#__PURE__*/React.createElement;
describe('Zhi:link', () => {
  const openLink = jest.fn();
  let spiedWindowOpen;
  let spiedConsoleError;
  beforeAll(() => {
    spiedWindowOpen = jest.spyOn(window, 'open');
    spiedWindowOpen.mockImplementation(openLink);
  });
  afterAll(() => {
    spiedConsoleError.mockRestore();
    spiedWindowOpen.mockRestore();
  });
  afterEach(() => {
    openLink.mockReset();
  });
  test('正确渲染', () => {
    const asl = ['root', _link.default];
    const {
      container
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.MobileReader, {
      content: asl
    }));
    expect(container).toMatchSnapshot();
  });
  test('点击链接触发 onOpenLink 事件', () => {
    const asl = ['root', _link.default];
    const handleOpenLink = jest.fn();
    const {
      container
    } = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.MobileReader, {
      content: asl,
      openLink: handleOpenLink
    }));
    const linkButton = container.querySelector('a');

    _everDevTest.fireEvent.click(linkButton);

    expect(handleOpenLink).toHaveBeenCalledWith('https://www.baidu.com/');
  });
});
describe('Zhi:linkInCardStyle', () => {
  // 链接卡片依赖于 we-design 不应该使用 snapshot
  test('正确渲染', () => {
    const asl = ['root', _linkInCardStyle.default];
    const reader = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.MobileReader, {
      content: asl
    }));
    expect(reader.getByTestId('link-card')).toBeTruthy();
  });
  test('移动端默认显示复制按键', async () => {
    const asl = ['root', _linkInCardStyle.default];
    const handleOpenLink = jest.fn();
    const reader = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.MobileReader, {
      content: asl,
      openLink: handleOpenLink
    }));
    const toolbar = await reader.findByTestId('link-toolbar-copy');
    expect(toolbar).toBeTruthy();
  });
  test('移动端不可复制时，不显示复制按键', async () => {
    const asl = ['root', _linkInCardStyle.default];
    const handleOpenLink = jest.fn();
    const reader = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.MobileReader, {
      canCopy: false,
      content: asl,
      openLink: handleOpenLink
    }));
    expect(reader.queryByTestId('link-toolbar-copy')).toBeFalsy();
  });
  test('点击链接触发 onOpenLink 事件', () => {
    const asl = ['root', _linkInCardStyle.default];
    const handleOpenLink = jest.fn();
    const reader = (0, _react2.render)( /*#__PURE__*/_createElement(_reader.MobileReader, {
      content: asl,
      openLink: handleOpenLink
    }));
    const linkButton = reader.queryByText('link');

    _everDevTest.fireEvent.click(linkButton);

    expect(handleOpenLink).toHaveBeenCalledWith('https://www.baidu.com/');
  });
});
//# sourceMappingURL=mobileLink.test.js.map