{"version":3,"sources":["../../../src/__tests__/mention.test.tsx"],"names":["describe","it","asl","mention","container","expect","innerHTML","toMatchSnapshot","onMentionClick","jest","fn","ele","querySelector","fireEvent","click","toHaveBeenCalledWith","avatarUrl","id","login","name","onMentionHover","mouseEnter"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;AAI5BA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BC,EAAAA,EAAE,CAAC,MAAD,EAAS,MAAM;AACf,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASC,gBAAT,CAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAgB,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF;AAAd,MAAP,CAAtB;AACAG,IAAAA,MAAM,CAACD,SAAS,CAACE,SAAX,CAAN,CAA4BC,eAA5B;AACD,GAJC,CAAF;AAMAN,EAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1C,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASC,gBAAT,CAAZ;AACA,UAAMK,cAAc,GAAGC,IAAI,CAACC,EAAL,EAAvB;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAgB,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF,GAAd;AAAmB,MAAA,cAAc,EAAEM;AAAnC,MAAP,CAAtB;AACA,UAAMG,GAAG,GAAGP,SAAS,CAACQ,aAAV,CAAwB,2BAAxB,CAAZ;;AACAC,sBAAUC,KAAV,CAAgBH,GAAhB;;AAEAN,IAAAA,MAAM,CAACG,cAAD,CAAN,CAAuBO,oBAAvB,CAA4C;AAC1CC,MAAAA,SAAS,EAAE,EAD+B;AAE1CC,MAAAA,EAAE,EAAE,GAFsC;AAG1CC,MAAAA,KAAK,EAAE,GAHmC;AAI1CC,MAAAA,IAAI,EAAE;AAJoC,KAA5C;AAMD,GAbC,CAAF;AAeAlB,EAAAA,EAAE,CAAC,oCAAD,EAAuC,MAAM;AAC7C,UAAMC,GAAG,GAAG,CAAC,MAAD,EAASC,gBAAT,CAAZ;AACA,UAAMiB,cAAc,GAAGX,IAAI,CAACC,EAAL,EAAvB;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAgB,kCAAO,eAAC,eAAD;AAAK,MAAA,OAAO,EAAEF,GAAd;AAAmB,MAAA,cAAc,EAAEkB;AAAnC,MAAP,CAAtB;AACA,UAAMT,GAAG,GAAGP,SAAS,CAACQ,aAAV,CAAwB,2BAAxB,CAAZ;;AACAC,sBAAUQ,UAAV,CAAqBV,GAArB;;AACAN,IAAAA,MAAM,CAACe,cAAD,CAAN,CAAuBL,oBAAvB,CAA4C;AAC1CC,MAAAA,SAAS,EAAE,EAD+B;AAE1CC,MAAAA,EAAE,EAAE,GAFsC;AAG1CC,MAAAA,KAAK,EAAE,GAHmC;AAI1CC,MAAAA,IAAI,EAAE;AAJoC,KAA5C;AAMD,GAZC,CAAF;AAaD,CAnCO,CAAR","sourcesContent":["import * as React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport Zhi from './reader';\nimport mention from './fixtures/mention.json';\n\ndescribe('Zhi:mention', () => {\n  it('正确渲染', () => {\n    const asl = ['root', mention];\n    const { container } = render(<Zhi content={asl} />);\n    expect(container.innerHTML).toMatchSnapshot();\n  });\n\n  it('点击 mention 触发 onMentionClick 事件', () => {\n    const asl = ['root', mention];\n    const onMentionClick = jest.fn();\n    const { container } = render(<Zhi content={asl} onMentionClick={onMentionClick} />);\n    const ele = container.querySelector('span[data-type=\"mention\"]');\n    fireEvent.click(ele);\n\n    expect(onMentionClick).toHaveBeenCalledWith({\n      avatarUrl: '',\n      id: '0',\n      login: '0',\n      name: 'youqing',\n    });\n  });\n\n  it('hover mention 触发 onMentionHover 事件', () => {\n    const asl = ['root', mention];\n    const onMentionHover = jest.fn();\n    const { container } = render(<Zhi content={asl} onMentionHover={onMentionHover} />);\n    const ele = container.querySelector('span[data-type=\"mention\"]');\n    fireEvent.mouseEnter(ele);\n    expect(onMentionHover).toHaveBeenCalledWith({\n      avatarUrl: '',\n      id: '0',\n      login: '0',\n      name: 'youqing',\n    });\n  });\n});\n"],"file":"mention.test.js"}