{"version":3,"sources":["../../../src/components/EditParagraph.tsx"],"names":["BorderStyleEnum","MoCommon","DEFAULT_BORDER_COLOR","Paragraph","React","Component","render","id","node","attributes","children","visible","props","isPi","data","pi","alignType","jc","textAlignLast","color","spacing","shd","left","firstLine","right","hanging","IndUtil","fromBlock","isList","list","paddingLeft","nodeStyle","style","nodePaddingLeft","paddingRight","nodePaddingRight","textAlign","textIndent","line","lineHeight","SpacingUtil","getLineHeightFromSpacing","display","marginTop","marginBottom","margin","box","top","bottom","backgroundColor","ShdUtil","transformShd","bdr","val","Single","sz","bdrColor","space","borderStyle","borderColor","borderTop","paddingTop","borderBottom","paddingBottom","borderLeft","borderRight","type","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport * as React from 'react';\nimport { Controller, Block, MoCommon } from '@ali/4ever-cangjie';\nimport { IndUtil, SpacingUtil, ShdUtil } from '@ali/4ever-utils';\nimport type { ParagraphData } from '../mo/models';\nimport { Component } from './styled';\n\n\ntype BdrProperties = Required<ParagraphData>['bdr'];\n\nconst { BorderStyleEnum } = MoCommon;\n\nconst DEFAULT_BORDER_COLOR = '#000000';\n\nexport interface ParagraphProps {\n  id?: string;\n  controller: Controller;\n  node: Block;\n  Component: string;\n  attributes: Record<string, any>;\n  isList?: boolean;\n  visible?: boolean;\n}\n\n\nclass Paragraph extends React.Component<ParagraphProps> {\n  static defaultProps = {\n    Component,\n  };\n\n  render() {\n    const {\n      Component,\n      id,\n      node,\n      attributes,\n      children,\n      visible,\n    } = this.props;\n\n    // TODO: HACK pi 和 bi 实现缩进机制不一致\n    const isPi = !!node.data.pi;\n\n    /* 段落对齐 */\n    let alignType = node.data.jc || 'left';\n    let textAlignLast: 'justify' | undefined;\n\n    if (alignType === 'distribute') {\n      alignType = 'justify';\n      textAlignLast = 'justify';\n    }\n\n    const { color, spacing, shd } = node.data;\n    const {\n      left,\n      firstLine = 0,\n      right,\n      hanging,\n    } = IndUtil.fromBlock(node);\n\n    /* 列表 */\n    const isList = !!node.data.list;\n\n    let paddingLeft = left || 0;\n    if (!isPi && hanging) {\n      // 悬挂缩进时整体 paddingLeft 增加，靠 text-indent < 0 实现\n      paddingLeft += hanging;\n    }\n    const nodeStyle = attributes?.style ?? {};\n    const {\n      paddingLeft: nodePaddingLeft = 0,\n      paddingRight: nodePaddingRight = 0,\n    } = nodeStyle as Record<string, number>;\n\n    // 缩进\n    const style: React.CSSProperties = {\n      ...nodeStyle,\n      textAlign: alignType,\n      textIndent: (isList || isPi) ? 0 : (hanging ? -hanging : firstLine),\n      paddingLeft: isList ? 0 : paddingLeft + nodePaddingLeft,\n      paddingRight: right || nodePaddingRight,\n    };\n\n    if (spacing?.line) {\n      style.lineHeight = SpacingUtil.getLineHeightFromSpacing(spacing);\n    }\n\n    // TODO: refactor\n    if (textAlignLast) {\n      style.textAlignLast = textAlignLast;\n    }\n\n    if (visible === false) {\n      style.display = 'none';\n    }\n\n    if (isPi) {\n      // 列表场景下清空上下边距，在列表处渲染，否则采用盒模型中的边距数据\n      if (isList) {\n        style.marginTop = 0;\n        style.marginBottom = 0;\n      } else {\n      // pi-1.0 中也注入了 pi 信息，但是不全...\n        const { margin = {} } = node.data.pi.box || {};\n        const { top = 0, bottom = 0 } = margin;\n        style.marginTop = top;\n        style.marginBottom = bottom;\n      }\n      // 排版下没有外部统一的 block div，这里特殊兼容下\n      if (shd) {\n        style.backgroundColor = ShdUtil.transformShd(shd);\n      }\n    }\n\n    // 边框：目前的段落和列表结构不严谨，列表会包裹一层 DOM\n    if (!isList) {\n      const bdr = (node.data.bdr || {}) as BdrProperties;\n      if (bdr.top) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.top;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        style.borderTop = `${sz}px ${borderStyle} ${borderColor}`;\n        style.paddingTop = space;\n      }\n      if (bdr.bottom) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.bottom;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        style.borderBottom = `${sz}px ${borderStyle} ${borderColor}`;\n        style.paddingBottom = space;\n      }\n      if (bdr.left) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.left;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        style.borderLeft = `${sz}px ${borderStyle} ${borderColor}`;\n        style.paddingLeft = space + (isList ? 0 : paddingLeft);\n      }\n      if (bdr.right) {\n        const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.right;\n        const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n        const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n        style.borderRight = `${sz}px ${borderStyle} ${borderColor}`;\n        style.paddingRight = space;\n      }\n    }\n\n    if (color) {\n      style.color = color;\n    }\n\n    return (\n      // @ts-ignore\n      <Component {...attributes} data-type={node.type} id={id} style={style}>\n        {children}\n      </Component>\n    );\n  }\n}\n\nexport default Paragraph;\n"],"file":"EditParagraph.js"}