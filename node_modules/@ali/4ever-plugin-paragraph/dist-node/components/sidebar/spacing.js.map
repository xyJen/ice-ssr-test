{"version":3,"sources":["../../../../src/components/sidebar/spacing.tsx"],"names":["setLineHeight","lineHeight","lineRule","type","payload","MAX_LINES","MAX","unitsConverter","toPT","SpacingUtil","linesToPx","SpacingSet","props","controller","Controller","useController","locale","paragraph","pLocale","line","lLocale","unitsLocale","key","value","ptUnit","linesUnit","autoUnit","docStyle","before","beforeLines","beforeAutospacing","after","afterLines","afterAutospacing","query","docDefaults","data","pPr","spacing","units","values","undefined","handleLineChange","arg","val","Math","min","run","logger","sum","handleLineRuleChange","createSpacingChangeHandler","nextSpacing","isLinesUnit","toPX","dispatch","handleBeforeChange","handleAfterChange","createSpacingUnitChangeHandler","unit","theme","defaultLinePitch","defaultAfterAutospacing","defaultBeforeAutospacing","handleBeforeUnitChange","handleAfterUnitChange","spacingBefore","formatNumber10","commonInputNumberProps","inputNumberStyle","spacingAfter","commonSelectStyle","multipleLineRule","exactlyLineRule","formatNumber100","marginLeft"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAL4B,a;;AAkB5B;AACA;AACA;AACA,MAAMA,aAAa,GAAG,CAACC,UAAD,EAAqBC,QAArB,KAA2C;AAC/D,SAAO;AACLC,IAAAA,IAAI,EAAE,uBADD;AAELC,IAAAA,OAAO,EAAE;AACPH,MAAAA,UADO;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARD;AAUA;AACA;AACA;;;AACA,MAAMG,SAAS,GAAG,EAAlB;;AACA,MAAMC,GAAG,GAAGC,0BAAeC,IAAf,CAAqB,GAAEC,uBAAYC,SAAZ,CAAsBL,SAAtB,CAAiC,IAAxD,CAAZ;;AAIe,SAASM,UAAT,CAAoBC,KAApB,EAAkD;AAC/D,QAAMC,UAAU,GAAGC,wBAAWC,aAAX,EAAnB;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,KAAnB;AACA,QAAM;AACJK,IAAAA,SAAS,EAAEC,OAAO,GAAG,EADjB;AAEJC,IAAAA,IAAI,EAAEC,OAAO,GAAG;AAFZ,MAGFJ,MAHJ;AAIA,QAAMK,WAAW,GAAG,CAAC;AACnBC,IAAAA,GAAG,EAAE,IADc;AACRC,IAAAA,KAAK,EAAEL,OAAO,CAACM;AADP,GAAD,EAEjB;AACDF,IAAAA,GAAG,EAAE,OADJ;AACaC,IAAAA,KAAK,EAAEL,OAAO,CAACO;AAD5B,GAFiB,EAIjB;AACDH,IAAAA,GAAG,EAAE,MADJ;AACYC,IAAAA,KAAK,EAAEL,OAAO,CAACQ;AAD3B,GAJiB,CAApB;AAOA,QAAMC,QAAQ,GAAG,4BAAjB;AACA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,gBANI;AAOJ/B,IAAAA,QAAQ,GAAG,MAPP;AAQJiB,IAAAA;AARI,MASFN,UAAU,CAACqB,KAAX,CAAiB,kBAAjB,EAAqCP,QAAQ,EAAEQ,WAAV,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,OAAvE,CATJ;AAWA,QAAMC,KAAmC,GAAG;AAC1CX,IAAAA,MAAM,EAAE,IADkC;AAE1CG,IAAAA,KAAK,EAAE,IAFmC;AAG1CZ,IAAAA,IAAI,EAAEjB,QAAQ,KAAK,MAAb,GAAsB,IAAtB,GAA6B;AAHO,GAA5C;AAKA,QAAMsC,MAAgD,GAAG;AACvDZ,IAAAA,MADuD;AAEvDG,IAAAA,KAFuD;AAGvDZ,IAAAA;AAHuD,GAAzD;;AAMA,MAAIjB,QAAQ,KAAK,MAAjB,EAAyB;AACvBsC,IAAAA,MAAM,CAACrB,IAAP,GAAcZ,0BAAeC,IAAf,CAAqB,GAAEW,IAAK,IAA5B,CAAd;AACD;;AAED,MAAIW,iBAAJ,EAAuB;AACrBS,IAAAA,KAAK,CAACX,MAAN,GAAe,MAAf;AACAY,IAAAA,MAAM,CAACZ,MAAP,GAAgBa,SAAhB;AACD,GAHD,MAGO,IAAIZ,WAAJ,EAAiB;AACtBU,IAAAA,KAAK,CAACX,MAAN,GAAe,OAAf;AACAY,IAAAA,MAAM,CAACZ,MAAP,GAAgBC,WAAhB;AACD;;AACD,MAAIU,KAAK,CAACX,MAAN,KAAiB,IAAjB,IAAyBY,MAAM,CAACZ,MAApC,EAA4C;AAC1C;AACAY,IAAAA,MAAM,CAACZ,MAAP,GAAgBrB,0BAAeC,IAAf,CAAqB,GAAEgC,MAAM,CAACZ,MAAO,IAArC,CAAhB;AACD;;AAED,MAAIK,gBAAJ,EAAsB;AACpBM,IAAAA,KAAK,CAACR,KAAN,GAAc,MAAd;AACAS,IAAAA,MAAM,CAACT,KAAP,GAAeU,SAAf;AACD,GAHD,MAGO,IAAIT,UAAJ,EAAgB;AACrBO,IAAAA,KAAK,CAACR,KAAN,GAAc,OAAd;AACAS,IAAAA,MAAM,CAACT,KAAP,GAAeC,UAAf;AACD;;AAED,MAAIO,KAAK,CAACR,KAAN,KAAgB,IAAhB,IAAwBS,MAAM,CAACT,KAAnC,EAA0C;AACxCS,IAAAA,MAAM,CAACT,KAAP,GAAexB,0BAAeC,IAAf,CAAqB,GAAEgC,MAAM,CAACT,KAAM,IAApC,CAAf;AACD;;AAED,QAAMW,gBAAgB,GAAIC,GAAD,IAAgC;AACvD,QAAIC,GAAG,GAAG,kCAAqBD,GAArB,CAAV;;AACA,QAAIzC,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,KAAK,SAAzC,EAAoD;AAClD;AACA0C,MAAAA,GAAG,IAAI,EAAP;AACD,KALsD,CAMvD;;;AACA,QAAI,CAACA,GAAD,IAAQ,CAAC,6BAAgBA,GAAhB,CAAb,EAAmC;AACnC,QAAIA,GAAG,KAAKJ,MAAM,CAACrB,IAAnB,EAAyB;AACzByB,IAAAA,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASF,GAAT,EAAcL,KAAK,CAACpB,IAAN,KAAe,OAAf,GAAyBd,SAAzB,GAAqCC,GAAnD,CAAN;AAEAO,IAAAA,UAAU,CAACkC,GAAX,CAAe,UAAf,EAA2B/C,aAAa,CAAC4C,GAAD,EAAM1C,QAAN,CAAxC;;AACA8C,wBAAOC,GAAP,CAAW,gCAAX;AACD,GAbD;;AAeA,QAAMC,oBAAoB,GAAI/C,IAAD,IAAkB;AAC7C,QAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB;AACAU,MAAAA,UAAU,CAACkC,GAAX,CAAe,UAAf,EAA2B/C,aAAa,CAAC,CAAD,EAAIG,IAAJ,CAAxC;AACD,KAHD,MAGO,IAAIA,IAAI,KAAK,MAAb,EAAqB;AAC1B;AACAU,MAAAA,UAAU,CAACkC,GAAX,CAAe,UAAf,EAA2B/C,aAAa,CAAC,CAAD,EAAIG,IAAJ,CAAxC;AACD;;AACD6C,wBAAOC,GAAP,CAAY,sCAAqC9C,IAAK,EAAtD;AACD,GATD;;AAWA,QAAMgD,0BAA0B,GAAIhD,IAAD,IAAkB;AACnD,WAAQwC,GAAD,IAAgC;AACrC,UAAIC,GAAG,GAAG,kCAAqBD,GAArB,CAAV;AACA,UAAI,CAAC,6BAAgBC,GAAhB,CAAL,EAA2B;AAC3B,UAAIA,GAAG,KAAKJ,MAAM,CAACrC,IAAD,CAAlB,EAA0B;AAC1ByC,MAAAA,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASF,GAAT,EAAcL,KAAK,CAACpC,IAAD,CAAL,KAAgB,OAAhB,GAA0BE,SAA1B,GAAsCC,GAApD,CAAN;AACA,YAAM8C,WAA8B,GAAG,EAAvC;AACA,YAAMC,WAAW,GAAGd,KAAK,CAACpC,IAAD,CAAL,KAAgB,OAApC;AAEAiD,MAAAA,WAAW,CAAE,GAAEjD,IAAK,aAAT,CAAX,GAAoC,KAApC;;AAEA,UAAIkD,WAAJ,EAAiB;AACfD,QAAAA,WAAW,CAAE,GAAEjD,IAAK,OAAT,CAAX,GAA8ByC,GAA9B,CADe,CAEf;;AACAQ,QAAAA,WAAW,CAACjD,IAAD,CAAX,GAAoBM,uBAAYC,SAAZ,CAAsBkC,GAAtB,CAApB;AACD,OAJD,MAIO;AACLQ,QAAAA,WAAW,CAACjD,IAAD,CAAX,GAAoBI,0BAAe+C,IAAf,CAAqB,GAAEV,GAAI,IAA3B,CAApB;AACD;;AAED/B,MAAAA,UAAU,CAAC0C,QAAX,CAAoB,qBAApB,EAA2CH,WAA3C;;AACAJ,0BAAOC,GAAP,CAAY,6BAA4B9C,IAAK,EAA7C;AACD,KApBD;AAqBD,GAtBD;;AAwBA,QAAMqD,kBAAkB,GAAGL,0BAA0B,CAAC,QAAD,CAArD;AACA,QAAMM,iBAAiB,GAAGN,0BAA0B,CAAC,OAAD,CAApD;;AAEA,QAAMO,8BAA8B,GAAIvD,IAAD,IAAkB;AACvD,WAAQwD,IAAD,IAAkB;AACvB,YAAMP,WAA8B,GAAG,EAAvC;;AACA,UAAIO,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,OAA9B,EAAuC;AACrCP,QAAAA,WAAW,CAAE,GAAEjD,IAAK,aAAT,CAAX,GAAoC,KAApC;AACAiD,QAAAA,WAAW,CAACjD,IAAD,CAAX,GAAoBwD,IAAI,KAAK,IAAT,GAAgBC,iBAAMtB,OAAN,CAAcuB,gBAA9B,GAAiD,CAArE;AACAT,QAAAA,WAAW,CAAE,GAAEjD,IAAK,OAAT,CAAX,GAA8BwD,IAAI,KAAK,IAAT,GAAgB,CAAhB,GAAoB,CAAlD;AACD,OAJD,MAIO,IAAIA,IAAI,KAAK,MAAb,EAAqB;AAC1BP,QAAAA,WAAW,CAAE,GAAEjD,IAAK,aAAT,CAAX,GAAoC,IAApC,CAD0B,CAE1B;;AACAiD,QAAAA,WAAW,CAACjD,IAAD,CAAX,GAAoBA,IAAI,KAAK,OAAT,GAAmByD,iBAAMtB,OAAN,CAAcwB,uBAAjC,GAA2DF,iBAAMtB,OAAN,CAAcyB,wBAA7F;AACD;;AACDlD,MAAAA,UAAU,CAAC0C,QAAX,CAAoB,qBAApB,EAA2CH,WAA3C;;AACAJ,0BAAOC,GAAP,CAAY,6BAA4B9C,IAAK,SAAQwD,IAAK,EAA1D;AACD,KAbD;AAcD,GAfD;;AAiBA,QAAMK,sBAAsB,GAAGN,8BAA8B,CAAC,QAAD,CAA7D;AACA,QAAMO,qBAAqB,GAAGP,8BAA8B,CAAC,OAAD,CAA5D;AAEA,sBACE,kDACE,eAAC,kBAAD,qBACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAyBxC,OAAO,CAACgD,aAAjC,CADF,eAEE,eAAC,qBAAD;AACE,IAAA,KAAK,EAAE1B,MAAM,CAACZ,MADhB;AAEE,IAAA,SAAS,EAAEuC;AAFb,KAGMC,8BAHN;AAIE,IAAA,KAAK,EAAEC,wBAJT;AAKE,IAAA,MAAM,EAAEb,kBALV;AAME,IAAA,YAAY,EAAEA,kBANhB;AAOE,IAAA,MAAM,EAAEA,kBAPV;AAQE,IAAA,GAAG,EAAG,UAAShB,MAAM,CAACZ,MAAO;AAR/B,KAFF,eAYE,eAAC,kBAAD;AACE,IAAA,KAAK,EAAEW,KAAK,CAACX,MADf;AAEE,IAAA,KAAK,EAAEP,WAFT;AAGE,IAAA,QAAQ,EAAE2C;AAHZ,IAZF,CADF,eAmBE,eAAC,kBAAD,qBACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAyB9C,OAAO,CAACoD,YAAjC,CADF,eAEE,eAAC,qBAAD;AACE,IAAA,KAAK,EAAE9B,MAAM,CAACT;AADhB,KAEMqC,8BAFN;AAGE,IAAA,SAAS,EAAED,sBAHb;AAIE,IAAA,KAAK,EAAEE,wBAJT;AAKE,IAAA,MAAM,EAAEZ,iBALV;AAME,IAAA,YAAY,EAAEA,iBANhB;AAOE,IAAA,MAAM,EAAEA,iBAPV;AAQE,IAAA,GAAG,EAAG,SAAQjB,MAAM,CAACT,KAAM;AAR7B,KAFF,eAYE,eAAC,kBAAD;AACE,IAAA,KAAK,EAAEQ,KAAK,CAACR,KADf;AAEE,IAAA,KAAK,EAAEV,WAFT;AAGE,IAAA,QAAQ,EAAE4C;AAHZ,IAZF,CAnBF,eAqCE,eAAC,kBAAD,qBACE,eAAC,gBAAD;AACE,IAAA,YAAY,EAAC,MADf;AAEE,IAAA,KAAK,EAAE/D,QAAQ,KAAK,MAAb,GAAsB,OAAtB,GAAgC,MAFzC;AAGE,IAAA,KAAK,EAAEqE,yBAHT;AAIE,IAAA,QAAQ,EAAErB;AAJZ,kBAME,eAAC,gBAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC;AAArB,KAA6B9B,OAAO,CAACoD,gBAArC,CANF,eAOE,eAAC,gBAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAC;AAArB,KAA8BpD,OAAO,CAACqD,eAAtC,CAPF,CADF,eAUE,eAAC,qBAAD;AACE,IAAA,KAAK,EAAEjC,MAAM,CAACrB;AADhB,KAEMiD,8BAFN;AAGE,IAAA,GAAG,EAAE,GAHP;AAIE,IAAA,IAAI,EAAElE,QAAQ,KAAK,MAAb,GAAsB,GAAtB,GAA4B,CAJpC;AAKE,IAAA,SAAS,EAAEA,QAAQ,KAAK,MAAb,GAAsBwE,uBAAtB,GAAwCP,sBALrD;AAME,IAAA,KAAK,EAAEE,wBANT;AAOE,IAAA,YAAY,EAAE3B,gBAPhB;AAQE,IAAA,MAAM,EAAEA,gBARV;AASE,IAAA,MAAM,EAAEA,gBATV;AAUE,IAAA,GAAG,EAAG,QAAOF,MAAM,CAACrB,IAAK;AAV3B,KAVF,EAsBGoB,KAAK,CAACpB,IAAN,KAAe,IAAf,gBAAsB;AAAM,IAAA,KAAK,EAAE;AAAEwD,MAAAA,UAAU,EAAE;AAAd;AAAb,KAAiCzD,OAAO,CAACM,MAAzC,CAAtB,GAAgF,IAtBnF,CArCF,CADF;AAgED","sourcesContent":["import * as React from 'react';\nimport { Controller, useStyle } from '@ali/4ever-cangjie';\nimport { SpacingProperties, unitsConverter, theme, SpacingUtil } from '@ali/4ever-utils';\nimport { InputNumber, Select } from '@ali/we-design';\nimport logger from '@ali/4ever-logger';\nimport { ConfigItem } from '../styled';\nimport {\n  ParagraphSetCompProps,\n  commonInputNumberProps,\n  inputNumberStyle,\n  UnitSelect,\n  commonSelectStyle,\n  formatNumber10,\n  formatNumber100,\n  checkInputValue,\n  InputNumberChangeType,\n  parseInputNumberPara,\n} from './common';\n\n/** \n * TODO: 待 lineHeight 插件迁移后，改为 package 引入\n */\nconst setLineHeight = (lineHeight: number, lineRule?: string) => {\n  return {\n    type: 'ACTION_LINEHEIGHT_SET',\n    payload: {\n      lineHeight,\n      lineRule,\n    },\n  };\n}\n\n/**\n * 50：大概是一页的高度\n */\nconst MAX_LINES = 50;\nconst MAX = unitsConverter.toPT(`${SpacingUtil.linesToPx(MAX_LINES)}px`);\ntype SPACING_TYPE = 'before' | 'after' | 'line';\n\n\nexport default function SpacingSet(props: ParagraphSetCompProps) {\n  const controller = Controller.useController();\n  const { locale } = props;\n  const {\n    paragraph: pLocale = {},\n    line: lLocale = {},\n  } = locale;\n  const unitsLocale = [{\n    key: 'pt', value: pLocale.ptUnit,\n  }, {\n    key: 'lines', value: pLocale.linesUnit,\n  }, {\n    key: 'auto', value: pLocale.autoUnit,\n  }];\n  const docStyle = useStyle();\n  const {\n    before,\n    beforeLines,\n    beforeAutospacing,\n    after,\n    afterLines,\n    afterAutospacing,\n    lineRule = 'auto',\n    line,\n  } = controller.query('getCommonSpacing', docStyle?.docDefaults?.data?.pPr?.spacing) as SpacingProperties;\n\n  const units: Record<SPACING_TYPE, string> = {\n    before: 'pt',\n    after: 'pt',\n    line: lineRule !== 'auto' ? 'pt' : 'lines',\n  };\n  const values: Record<SPACING_TYPE, number | undefined> = {\n    before,\n    after,\n    line,\n  };\n\n  if (lineRule !== 'auto') {\n    values.line = unitsConverter.toPT(`${line}px`);\n  }\n\n  if (beforeAutospacing) {\n    units.before = 'auto';\n    values.before = undefined;\n  } else if (beforeLines) {\n    units.before = 'lines';\n    values.before = beforeLines;\n  }\n  if (units.before === 'pt' && values.before) {\n    // 转换为 pt\n    values.before = unitsConverter.toPT(`${values.before}px`);\n  }\n\n  if (afterAutospacing) {\n    units.after = 'auto';\n    values.after = undefined;\n  } else if (afterLines) {\n    units.after = 'lines';\n    values.after = afterLines;\n  }\n\n  if (units.after === 'pt' && values.after) {\n    values.after = unitsConverter.toPT(`${values.after}px`);\n  }\n\n  const handleLineChange = (arg: InputNumberChangeType) => {\n    let val = parseInputNumberPara(arg);\n    if (lineRule === 'exact' || lineRule === 'atLeast') {\n      // 转换为与导入一致的单位\n      val /= 12;\n    }\n    // 不允许设置 0\n    if (!val || !checkInputValue(val)) return;\n    if (val === values.line) return;\n    val = Math.min(val, units.line === 'lines' ? MAX_LINES : MAX);\n\n    controller.run('onAction', setLineHeight(val, lineRule));\n    logger.sum('paragraph_sidebar_spacing_line');\n  };\n\n  const handleLineRuleChange = (type: string) => {\n    if (type === 'exact') {\n      // 切换为固定值时默认为 24pt\n      controller.run('onAction', setLineHeight(2, type));\n    } else if (type === 'auto') {\n      // 切换为多倍时默认为 1倍行距\n      controller.run('onAction', setLineHeight(1, type));\n    }\n    logger.sum(`paragraph_sidebar_spacing_lineRule_${type}`);\n  };\n\n  const createSpacingChangeHandler = (type: string) => {\n    return (arg: InputNumberChangeType) => {\n      let val = parseInputNumberPara(arg);\n      if (!checkInputValue(val)) return;\n      if (val === values[type]) return;\n      val = Math.min(val, units[type] === 'lines' ? MAX_LINES : MAX);\n      const nextSpacing: SpacingProperties = {};\n      const isLinesUnit = units[type] === 'lines';\n\n      nextSpacing[`${type}Autospacing`] = false;\n\n      if (isLinesUnit) {\n        nextSpacing[`${type}Lines`] = val;\n        // 同步设置 before/after 作为兜底\n        nextSpacing[type] = SpacingUtil.linesToPx(val);\n      } else {\n        nextSpacing[type] = unitsConverter.toPX(`${val}pt`);\n      }\n\n      controller.dispatch('setParagraphSpacing', nextSpacing);\n      logger.sum(`paragraph_sidebar_spacing_${type}`);\n    };\n  };\n\n  const handleBeforeChange = createSpacingChangeHandler('before');\n  const handleAfterChange = createSpacingChangeHandler('after');\n\n  const createSpacingUnitChangeHandler = (type: string) => {\n    return (unit: string) => {\n      const nextSpacing: SpacingProperties = {};\n      if (unit === 'pt' || unit === 'lines') {\n        nextSpacing[`${type}Autospacing`] = false;\n        nextSpacing[type] = unit === 'pt' ? theme.spacing.defaultLinePitch : 0;\n        nextSpacing[`${type}Lines`] = unit === 'pt' ? 0 : 1;\n      } else if (unit === 'auto') {\n        nextSpacing[`${type}Autospacing`] = true;\n        // 按照前 5pt 后 10pt 兜底\n        nextSpacing[type] = type === 'after' ? theme.spacing.defaultAfterAutospacing : theme.spacing.defaultBeforeAutospacing;\n      }\n      controller.dispatch('setParagraphSpacing', nextSpacing);\n      logger.sum(`paragraph_sidebar_spacing_${type}_unit_${unit}`);\n    };\n  };\n\n  const handleBeforeUnitChange = createSpacingUnitChangeHandler('before');\n  const handleAfterUnitChange = createSpacingUnitChangeHandler('after');\n\n  return (\n    <>\n      <ConfigItem>\n        <span className=\"label\">{pLocale.spacingBefore}</span>\n        <InputNumber\n          value={values.before}\n          formatter={formatNumber10}\n          {...commonInputNumberProps}\n          style={inputNumberStyle}\n          onStep={handleBeforeChange}\n          onPressEnter={handleBeforeChange}\n          onBlur={handleBeforeChange}\n          key={`before_${values.before}`}\n        />\n        <UnitSelect\n          value={units.before}\n          units={unitsLocale}\n          onChange={handleBeforeUnitChange}\n        />\n      </ConfigItem>\n      <ConfigItem>\n        <span className=\"label\">{pLocale.spacingAfter}</span>\n        <InputNumber\n          value={values.after}\n          {...commonInputNumberProps}\n          formatter={formatNumber10}\n          style={inputNumberStyle}\n          onStep={handleAfterChange}\n          onPressEnter={handleAfterChange}\n          onBlur={handleAfterChange}\n          key={`after_${values.after}`}\n        />\n        <UnitSelect\n          value={units.after}\n          units={unitsLocale}\n          onChange={handleAfterUnitChange}\n        />\n      </ConfigItem>\n      <ConfigItem>\n        <Select\n          defaultValue=\"auto\"\n          value={lineRule !== 'auto' ? 'exact' : 'auto'}\n          style={commonSelectStyle}\n          onChange={handleLineRuleChange}\n        >\n          <Select.Option value=\"auto\">{lLocale.multipleLineRule}</Select.Option>\n          <Select.Option value=\"exact\">{lLocale.exactlyLineRule}</Select.Option>\n        </Select>\n        <InputNumber\n          value={values.line}\n          {...commonInputNumberProps}\n          max={100}\n          step={lineRule === 'auto' ? 0.1 : 1}\n          formatter={lineRule === 'auto' ? formatNumber100 : formatNumber10}\n          style={inputNumberStyle}\n          onPressEnter={handleLineChange}\n          onBlur={handleLineChange}\n          onStep={handleLineChange}\n          key={`line_${values.line}`}\n        />\n        {units.line === 'pt' ? <span style={{ marginLeft: 7 }}>{pLocale.ptUnit}</span> : null}\n      </ConfigItem>\n    </>\n  );\n}\n"],"file":"spacing.js"}