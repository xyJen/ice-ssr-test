{"version":3,"sources":["../../../../../src/mo/serializer/htmlToJsonML/parseFromWeb.ts"],"names":["validAlign","left","center","right","justify","distribute","spacingAttrs","marginTop","marginBottom","isValidAlign","align","generateAttrsFromStyle","style","attrs","ind","textAlign","jc","textAlignLast","textIndent","firstLine","unitsConverter","toPX","margin","margins","marginLeft","padding","paddings","marginLeftNum","paddingLeft","paddingLeftNum","indentNum","Object","keys","length","key","valNum","spacing","lineHeight","line","SpacingUtil","fromHtml","fontSize","normalizeAttrs","rawAttrs","tagName","pasteFrom","styleObj","REMAIN_STYLE_SOURCES","includes","before","after","list","listId","level","parseInt","isOrdered","isTaskList","isChecked","listStyle","format","text","flatAppend","state","node","chlidren","current","isPrevText","forEach","child","childTagName","paragraphTags","append","slice","push","lastChild","parseHtml","name","Paragraph","TYPE","onOpenTag","rAttrs","p","onCloseTag","pop"],"mappings":"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","sourcesContent":["import {\n  JsonML,\n  getTagName,\n  getAttributes,\n  getChildren,\n  parseCSSMargin,\n  isCSSAbsoluteLength,\n  isJsonMLInline,\n  isJsonMLText,\n  SpacingUtil,\n  unitsConverter,\n  paragraphTags,\n} from '@ali/4ever-utils';\nimport {\n  createTextWithString,\n  REMAIN_STYLE_SOURCES } from '@ali/4ever-cangjie';\nimport type { MoState as State, MoAttributes as Attributes, HTMLToJsonMLRule } from '@ali/4ever-cangjie';\nimport Paragraph, { ParagraphData } from '../../models';\nimport getParagraphTagStyle from '../utils/getParagraphTagStyle';\n\ntype ListProperties = Required<ParagraphData>['list'];\n\ntype IndentProperties = Required<ParagraphData>['ind'];\n\nconst validAlign: Record<string, boolean> = {\n  left: true,\n  center: true,\n  right: true,\n  justify: true,\n  distribute: true,\n};\n\nconst spacingAttrs = {\n  marginTop: 'before',\n  marginBottom: 'after',\n};\n\nfunction isValidAlign(align = ''): align is Required<ParagraphData>['jc'] {\n  return !!validAlign[align];\n}\n\nfunction generateAttrsFromStyle(\n  style: Partial<CSSStyleDeclaration>,\n): ParagraphData {\n  const attrs: ParagraphData = {};\n  const ind: IndentProperties = {};\n\n  if (isValidAlign(style.textAlign)) {\n    attrs.jc = style.textAlign;\n  }\n\n  if (attrs.jc === 'justify' && style.textAlignLast === 'justify') {\n    attrs.jc = 'distribute';\n  }\n\n  if (style.textIndent) {\n    const firstLine = unitsConverter.toPX(style.textIndent);\n    if (firstLine) {\n      ind.firstLine = firstLine;\n    }\n  }\n\n  if (style.margin) {\n    const margins = parseCSSMargin(style.margin);\n    ind.left = unitsConverter.toPX(margins.marginLeft);\n  }\n\n  if (style.padding) {\n    const paddings = parseCSSMargin(style.padding);\n    ind.left = (ind.left ? ind.left : 0) + unitsConverter.toPX(paddings.marginLeft);\n  }\n\n  if (style.marginLeft && isCSSAbsoluteLength(style.marginLeft)) {\n    const marginLeftNum = unitsConverter.toPX(style.marginLeft);\n    ind.left = (ind.left || 0) + marginLeftNum;\n  }\n\n  if (style.paddingLeft && isCSSAbsoluteLength(style.paddingLeft)) {\n    const paddingLeftNum = unitsConverter.toPX(style.paddingLeft);\n    if (paddingLeftNum) {\n      ind.left = (ind.left || 0) + paddingLeftNum;\n    }\n  }\n\n  if (ind.left) {\n    // @ts-ignore 修正负悬挂缩进与预期不一致\n    const indentNum = ind.firstLine || 0;\n    if (indentNum < 0) {\n      ind.left += indentNum;\n    }\n  }\n\n  if (Object.keys(ind).length) {\n    attrs.ind = ind;\n  }\n\n  for (const key in spacingAttrs) {\n    if (!style[key]) continue;\n    const valNum = unitsConverter.toPX(style[key]);\n    if (!valNum) continue;\n    if (!attrs.spacing) {\n      attrs.spacing = {};\n    }\n    attrs.spacing[spacingAttrs[key]] = valNum;\n  }\n\n  if (style.lineHeight) {\n    if (!attrs.spacing) {\n      attrs.spacing = {};\n    }\n    attrs.spacing.line = SpacingUtil.fromHtml(style.lineHeight, style.fontSize);\n  }\n\n  return attrs;\n}\n\nfunction normalizeAttrs(\n  rawAttrs: Attributes,\n  tagName: string,\n  pasteFrom: string,\n): ParagraphData {\n  let attrs: ParagraphData = {};\n\n  if (rawAttrs.style) {\n    const style = rawAttrs.styleObj;\n    attrs = {\n      ...attrs,\n      ...generateAttrsFromStyle(style),\n    };\n    if (attrs && !REMAIN_STYLE_SOURCES.includes(pasteFrom)) {\n      delete attrs.spacing?.before;\n      delete attrs.spacing?.after;\n      delete attrs.spacing?.line;\n      delete attrs.ind?.left;\n    }\n  }\n\n  const list: ListProperties = {};\n  if (rawAttrs['data-listid']) {\n    list.listId = rawAttrs['data-listid'];\n  }\n  if (rawAttrs['data-level']) {\n    list.level = parseInt(rawAttrs['data-level'], 10);\n  }\n  if ('data-isordered' in rawAttrs) {\n    list.isOrdered = rawAttrs['data-isordered'] === 'true';\n  }\n  if ('data-istasklist' in rawAttrs) {\n    list.isTaskList = rawAttrs['data-istasklist'] === 'true';\n  }\n  if ('data-ischecked' in rawAttrs) {\n    list.isChecked = rawAttrs['data-ischecked'] === 'true';\n  }\n  if (\n    rawAttrs['data-format'] ||\n    rawAttrs['data-text'] ||\n    rawAttrs['data-align']\n  ) {\n    list.listStyle = {\n      format: rawAttrs['data-format'],\n      text: rawAttrs['data-text'],\n      align: rawAttrs['data-align'],\n    };\n    // @ts-ignore to fix list style\n    if (!rawAttrs['data-format']) delete list.listStyle.format;\n    // @ts-ignore to fix list style\n    if (!rawAttrs['data-text']) delete list.listStyle.text;\n    // @ts-ignore to fix list style\n    if (!rawAttrs['data-align']) delete list.listStyle.align;\n  }\n  if (Object.keys(list).length) {\n    attrs.list = list;\n  }\n\n  return attrs;\n}\n\nfunction flatAppend(state: State, node: JsonML): void {\n  const tagName = getTagName(node);\n  const attrs = getAttributes(node);\n  const chlidren = getChildren(node);\n  let current: JsonML = attrs ? [tagName, attrs] : [tagName];\n  let isPrevText = false;\n  chlidren.forEach((child: JsonML) => {\n    const childTagName = getTagName(child);\n    if (\n      paragraphTags[childTagName] ||\n      childTagName === 'hr' ||\n      childTagName === 'table' ||\n      childTagName === 'code'\n    ) {\n      if (getChildren(current).length) {\n        state.append(current);\n      }\n\n      if (childTagName === 'p') {\n        state.append([tagName, ...child.slice(1)]);\n      } else {\n        state.append(child);\n      }\n\n      current = attrs ? [tagName, attrs] : [tagName];\n      isPrevText = false;\n      return;\n    }\n\n    if (!isPrevText && isJsonMLInline(child)) {\n      current.push(createTextWithString(''));\n    }\n\n    current.push(child);\n    isPrevText = isJsonMLText(child);\n  });\n\n  if (getChildren(current).length) {\n    const lastChild = current[current.length - 1];\n    if (isJsonMLInline(lastChild as JsonML)) {\n      current.push(createTextWithString(''));\n    }\n    state.append(current);\n  }\n}\n\nexport default function parseHtml(pasteFrom: string): HTMLToJsonMLRule {\n  return {\n    name: Paragraph.TYPE,\n\n    onOpenTag: (state: State, name: string, rAttrs: Attributes): boolean => {\n      if (!paragraphTags[name]) return false;\n      const { p, rawAttrs } = getParagraphTagStyle(name, rAttrs);\n      const attrs = normalizeAttrs(rawAttrs, name, pasteFrom);\n      if (Object.keys(attrs).length) {\n        p.push(attrs);\n      }\n      state.push(p);\n      return true;\n    },\n\n    onCloseTag: (state: State, name: string): boolean => {\n      if (!paragraphTags[name]) return false;\n\n      const p = state.pop();\n\n      if (getChildren(p).length === 0) {\n        p.push(createTextWithString(''));\n      }\n\n      flatAppend(state, p);\n      return true;\n    },\n  };\n}\n"],"file":"parseFromWeb.js"}