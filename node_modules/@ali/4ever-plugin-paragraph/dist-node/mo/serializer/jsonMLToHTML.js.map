{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToHTML.tsx"],"names":["tagToComponent","h1","h2","h3","h4","h5","h6","p","getHeadStyle","tagName","headDefaultStyle","CommonFormatUtil","getDefaultHeadStyle","fontSize","lineHeight","marginTop","marginBottom","renderList","props","node","children","style","key","attrs","jc","list","ind","firstLine","firstline","isChecked","isTaskList","listStyle","textAlign","textIndent","textAlignLast","Paragraph","Component","path","config","rest","dataType","blockquote","spacing","left","block","Block","create","type","data","spacingStyle","SpacingUtil","toStyle","paragraphStyle","marginLeft","useWebLineHeight","line","toFixed","createJsonMLToHTML","configs","name","ParagraphModel","TYPE","match","convert","map","child","index","paragraph","paragraphConfig"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block, ConvertFunc, JsonMLToHTMLRule } from '@ali/4ever-cangjie';\nimport {\n  JsonML,\n  getTagName,\n  getAttributes,\n  getChildren,\n  SpacingUtil,\n  CommonFormatUtil,\n} from '@ali/4ever-utils';\nimport ParagraphModel from '../models';\nimport { MoParagraphConfig } from '../types';\n\n// TODO: heading 相关逻辑迁移到 heading 中\nconst tagToComponent: Record<string, string> = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  p: 'p',\n};\n\ninterface ParagraphProps {\n  Component: string;\n  node: any;\n  key: number[];\n  path: number[];\n  style?: Record<string, any>;\n  children: React.ReactElement[];\n  config?: MoParagraphConfig;\n}\n\nfunction getHeadStyle(tagName) {\n  const headDefaultStyle = CommonFormatUtil.getDefaultHeadStyle(tagName);\n  if (!headDefaultStyle) return {};\n\n  return {\n    fontSize: headDefaultStyle['font-size'],\n    lineHeight: headDefaultStyle['line-height'],\n    marginTop: headDefaultStyle['margin-top'],\n    marginBottom: headDefaultStyle['margin-bottom'],\n  };\n}\n\nfunction renderList(props: Record<string, any>): React.ReactElement {\n  const { node, children, style = {}, key } = props;\n  const attrs = getAttributes(node) || {};\n  // @ts-ignore\n  const { jc = 'left', list } = attrs;\n  // @ts-ignore\n  const ind = attrs.ind || {};\n  const firstLine = ind.firstLine || ind.firstline || 0;\n  const { isChecked, isTaskList } = list;\n\n  const listStyle = {\n    ...style,\n    textAlign: jc === 'distribute' ? 'justify' : jc,\n    textIndent: firstLine,\n  };\n\n  if (jc === 'distribute') {\n    listStyle.textAlignLast = 'justify';\n  }\n\n  return (\n    <div style={listStyle} key={key}>\n      { isTaskList && (\n        <input type=\"checkbox\" checked={isChecked} readOnly />\n      )}\n      { children }\n    </div>\n  );\n}\n\nfunction Paragraph(props: ParagraphProps): React.ReactElement {\n  const { Component, node, children, style = {}, path, config, ...rest } = props;\n\n  const attrs = getAttributes(node) || {};\n  const dataType = attrs.blockquote && 'blockquote';\n  // @ts-ignore\n  const { jc = 'left', list, spacing = {} } = attrs;\n  // Fixed: ind 可能出现 null 的数据情况\n  // @ts-ignore\n  const ind = attrs.ind || {};\n  const { left = 0 } = ind;\n  const firstLine = ind.firstLine || ind.firstline || 0;\n  if (list) return renderList(props);\n\n  const block = Block.create({\n    type: 'paragraph',\n    data: {\n      spacing,\n    },\n  });\n  const spacingStyle = SpacingUtil.toStyle(block);\n\n  const paragraphStyle: Record<string, any> = {\n    ...getHeadStyle(getTagName(node)),\n    ...style,\n    textAlign: jc === 'distribute' ? 'justify' : jc,\n    textIndent: firstLine,\n    marginLeft: left,\n    // 浏览器里 p 标签会带上 1em marginTop、marginBottom，导致 safari 浏览器自动纠正 text/plain 数据, 产生多余空行\n    marginTop: 0,\n    marginBottom: 0,\n    ...spacingStyle,\n  };\n\n  if (jc === 'distribute') {\n    paragraphStyle.textAlignLast = 'justify';\n  }\n\n  const useWebLineHeight = config && config.useWebLineHeight;\n  if (spacing.line && !useWebLineHeight) {\n    // 转换为百分比兼容word和竞品\n    paragraphStyle.lineHeight = `${(spacing.line * 100).toFixed(0)}%`;\n  }\n\n  return (\n    // @ts-ignore\n    <Component data-type={dataType} {...rest} style={paragraphStyle}>\n      { children }\n    </Component>\n  );\n}\n\nexport default function createJsonMLToHTML(configs: Record<string, any>): JsonMLToHTMLRule {\n  return {\n    name: ParagraphModel.TYPE,\n\n    match: (node: JsonML): boolean => {\n      const tagName = getTagName(node);\n      return !!tagToComponent[tagName];\n    },\n\n    convert: (node: JsonML, key: number[] = [], convert: ConvertFunc): React.ReactElement => {\n      const tagName = getTagName(node);\n      const Component = tagToComponent[tagName];\n      const children = getChildren(node)\n        .map((child, index: number) => convert(child, [...key, index]));\n      const { paragraph: paragraphConfig } = configs || {};\n      return (\n        // @ts-ignore\n        <Paragraph\n          Component={Component}\n          node={node}\n          // @ts-ignore\n          key={key}\n          path={key}\n          config={paragraphConfig}\n        >\n          {children}\n        </Paragraph>\n      );\n    },\n  };\n}\n\n"],"file":"jsonMLToHTML.js"}