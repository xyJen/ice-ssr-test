{"version":3,"sources":["../../../src/components/ReadParagraph.tsx"],"names":["React","MoCommon","IndUtil","SpacingUtil","ShdUtil","BorderStyleEnum","DEFAULT_BORDER_COLOR","forwardRef","props","ref","Component","node","children","isList","style","rest","data","jc","spacing","shd","isPi","pi","fromBlock","left","firstLine","right","hanging","paddingLeft","nodePaddingLeft","paddingRight","nodePaddingRight","paragraphStyle","textAlign","textIndent","textAlignLast","line","lineHeight","getLineHeightFromSpacing","marginTop","marginBottom","box","margin","top","bottom","backgroundColor","transformShd","bdr","val","Single","sz","color","bdrColor","space","borderStyle","borderColor","borderTop","paddingTop","borderBottom","paddingBottom","borderLeft","borderRight","type"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block, MoCommon } from '@ali/4ever-cangjie';\nimport { IndUtil, SpacingUtil, ShdUtil } from '@ali/4ever-utils';\nimport type { ParagraphData } from '../mo/models';\n\ntype BdrProperties = Required<ParagraphData>['bdr'];\n\nconst { BorderStyleEnum } = MoCommon;\n\ninterface ParagraphProps {\n  Component: React.ComponentType<any>;\n  node: Block;\n  isList?: boolean;\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n  id?: string;\n}\n\nconst DEFAULT_BORDER_COLOR = '#000000';\n\nexport default React.forwardRef<HTMLElement, ParagraphProps>((props: ParagraphProps, ref) => {\n  const { Component, node, children, isList, style = {}, ...rest } = props;\n\n  const { jc = 'left', spacing, shd } = node.data as ParagraphData;\n\n  // TODO: HACK pi 和 bi 实现缩进机制不一致\n  const isPi = !!node.data.pi;\n\n  const {\n    left,\n    firstLine = 0,\n    right,\n    hanging,\n  } = IndUtil.fromBlock(node);\n\n  let paddingLeft = left || 0;\n  if (!isPi && hanging) {\n    // 悬挂缩进时整体 paddingLeft 增加，靠 text-indent < 0 实现\n    paddingLeft += hanging;\n  }\n\n  const {\n    paddingLeft: nodePaddingLeft = 0,\n    paddingRight: nodePaddingRight = 0,\n  } = style as Record<string, number>;\n\n  const paragraphStyle = {\n    ...style,\n    textAlign: jc === 'distribute' ? 'justify' : jc,\n    textIndent: (isList || isPi) ? 0 : (hanging ? -hanging : firstLine),\n    paddingLeft: isList ? 0 : paddingLeft + nodePaddingLeft,\n    paddingRight: right || nodePaddingRight,\n  };\n\n  if (jc === 'distribute') {\n    paragraphStyle.textAlignLast = 'justify';\n  }\n\n  if (spacing?.line) {\n    paragraphStyle.lineHeight = SpacingUtil.getLineHeightFromSpacing(spacing);\n  }\n\n  // Pi-2.0 会注入 pi 数据\n  if (node.data.pi) {\n    // 列表场景下清空上下边距，在列表处渲染，否则采用盒模型中的边距数据\n    if (isList) {\n      paragraphStyle.marginTop = 0;\n      paragraphStyle.marginBottom = 0;\n    } else {\n      // pi-1.0 中也注入了 pi 信息，但是不全...\n      const { margin = {} } = node.data.pi.box || {};\n      const { top = 0, bottom = 0 } = margin;\n      paragraphStyle.marginTop = top;\n      paragraphStyle.marginBottom = bottom;\n    }\n    // 排版下没有外部统一的 block div，这里特殊兼容下\n    if (shd) {\n      paragraphStyle.backgroundColor = ShdUtil.transformShd(shd);\n    }\n  }\n\n  // 段落边框：在列表的场景下由于被 wrapper 包裹所以要消掉 border\n  const bdr = (node.data.bdr || {}) as BdrProperties;\n  if (!isList && bdr.top) {\n    const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.top;\n    const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n    const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n    paragraphStyle.borderTop = `${sz}px ${borderStyle} ${borderColor}`;\n    paragraphStyle.paddingTop = space;\n  }\n  if (!isList && bdr.bottom) {\n    const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.bottom;\n    const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n    const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n    paragraphStyle.borderBottom = `${sz}px ${borderStyle} ${borderColor}`;\n    paragraphStyle.paddingBottom = space;\n  }\n  if (!isList && bdr.left) {\n    const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.left;\n    const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n    const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n    paragraphStyle.borderLeft = `${sz}px ${borderStyle} ${borderColor}`;\n    paragraphStyle.paddingLeft = space;\n  }\n  if (!isList && bdr.right) {\n    const { val = BorderStyleEnum.Single, sz = 1, color: bdrColor = DEFAULT_BORDER_COLOR, space = 0 } = bdr.right;\n    const borderStyle = val === BorderStyleEnum.Single ? 'solid' : val;\n    const borderColor = bdrColor === 'auto' ? DEFAULT_BORDER_COLOR : bdrColor;\n    paragraphStyle.borderRight = `${sz}px ${borderStyle} ${borderColor}`;\n    paragraphStyle.paddingRight = space;\n  }\n\n  return (\n    <Component {...rest} data-type={node.type} ref={ref} style={paragraphStyle}>\n      {children}\n    </Component>\n  );\n});\n"],"file":"ReadParagraph.js"}