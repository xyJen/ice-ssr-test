{"version":3,"sources":["../../../src/components/SpecialIndent.tsx"],"names":["React","Select","SelectOption","Option","IndentType","SpecialIndent","props","locale","handleIndentTypeChange","type","none","indentList","title","noneIndent","key","firstLineIndent","firstLine","hangIndent","hang","handleChange","indent","map"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,MAAT,EAAiBC,YAAY,IAAIC,MAAjC,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAQA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA2C;AAAA,MAChDC,MADgD,GACWD,KADX,CAChDC,MADgD;AAAA,MACxCC,sBADwC,GACWF,KADX,CACxCE,sBADwC;AAAA,oBACWF,KADX,CAChBG,IADgB;AAAA,MAChBA,IADgB,4BACTL,UAAU,CAACM,IADF;AAExD,MAAMC,UAAU,GAAG,CACjB;AAAEC,IAAAA,KAAK,EAAEL,MAAM,CAACM,UAAhB;AAA4BC,IAAAA,GAAG,EAAEV,UAAU,CAACM;AAA5C,GADiB,EAEjB;AAAEE,IAAAA,KAAK,EAAEL,MAAM,CAACQ,eAAhB;AAAiCD,IAAAA,GAAG,EAAEV,UAAU,CAACY;AAAjD,GAFiB,EAGjB;AAAEJ,IAAAA,KAAK,EAAEL,MAAM,CAACU,UAAhB;AAA4BH,IAAAA,GAAG,EAAEV,UAAU,CAACc;AAA5C,GAHiB,CAAnB;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAwB;AAC3CZ,IAAAA,sBAAsB,CAACY,MAAD,CAAtB;AACD,GAFD;;AAIA,sBACE,eAAC,MAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,KAAK,EAAEX,IAFT;AAGE,IAAA,QAAQ,EAAEU,YAHZ;AAIE,IAAA,YAAY,EAAEf,UAAU,CAACM;AAJ3B,KAOIC,UAAU,CAACU,GAAX,CAAe,UAAAD,MAAM;AAAA,wBACnB,eAAC,MAAD;AACE,MAAA,KAAK,EAAEA,MAAM,CAACN,GADhB;AAEE,MAAA,GAAG,EAAEM,MAAM,CAACN;AAFd,oBAIE,6BAAOM,MAAM,CAACR,KAAd,CAJF,CADmB;AAAA,GAArB,CAPJ,CADF;AAmBD","sourcesContent":["import * as React from 'react';\nimport { Select, SelectOption as Option } from '@ali/we-design';\nimport { IndentType } from '@ali/4ever-utils';\n\ninterface IndentProps {\n  locale: Record<string, any>;\n  type: IndentType;\n  handleIndentTypeChange: Function;\n}\n\nexport default function SpecialIndent(props: IndentProps) {\n  const { locale, handleIndentTypeChange, type = IndentType.none } = props;\n  const indentList = [\n    { title: locale.noneIndent, key: IndentType.none },\n    { title: locale.firstLineIndent, key: IndentType.firstLine },\n    { title: locale.hangIndent, key: IndentType.hang },\n  ];\n\n  const handleChange = (indent: IndentType) => {\n    handleIndentTypeChange(indent);\n  };\n\n  return (\n    <Select\n      className=\"bi-sidebar-indent\"\n      value={type}\n      onChange={handleChange}\n      defaultValue={IndentType.none}\n    >\n      {\n        indentList.map(indent => (\n          <Option\n            value={indent.key}\n            key={indent.key}\n          >\n            <span>{indent.title}</span>\n          </Option>\n        ))\n      }\n    </Select>\n  );\n}\n"],"file":"SpecialIndent.js"}