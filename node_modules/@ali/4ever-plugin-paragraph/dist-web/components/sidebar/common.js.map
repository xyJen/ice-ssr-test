{"version":3,"sources":["../../../../src/components/sidebar/common.tsx"],"names":["React","Select","isNaN","createNumberFormater","fix","f","number","test","res","Math","round","parseFloat","unitSelectStyle","width","height","fontSize","formatNumber10","formatNumber100","parseInputNumberPara","arg","target","value","NaN","commonInputNumberProps","min","placeholder","step","checkInputValue","inputNumberStyle","margin","commonSelectStyle","padding","UnitSelect","props","units","onChange","options","map","unit","key"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { Select } from '@ali/we-design';\nimport { isNaN } from '@ali/4ever-utils';\n\nconst createNumberFormater = (fix?: number) => {\n  const f = fix || 100;\n  return (number: string | number) => {\n    if (number === '') return '';\n    if (!number || typeof number === 'number') return `${number || 0}`;\n    if (/\\.$/.test(number)) return number;\n    const res = Math.round(parseFloat(number) * f) / f;\n    if (isNaN(res)) return '';\n    return `${res}`;\n  };\n};\n\nconst unitSelectStyle: React.CSSProperties = {\n  width: 50,\n  height: 28,\n  fontSize: 13,\n};\n\nexport const formatNumber10 = createNumberFormater(10);\nexport const formatNumber100 = createNumberFormater(100);\nexport type InputNumberChangeType = number | string | React.KeyboardEvent | React.FocusEvent;\n\nexport function parseInputNumberPara(arg: InputNumberChangeType) {\n  // 点击 上下 button 为 number\n  if (typeof arg === 'number') return arg;\n  // 按键盘上下键为 string\n  if (typeof arg === 'string') return parseFloat(arg);\n  // 按 enter 为 event\n  if (arg?.target) return parseFloat((arg.target as HTMLTextAreaElement).value);\n  return NaN;\n}\n\nexport interface ParagraphSetCompProps {\n  controller: Controller;\n  locale: Record<string, any>;\n}\n\nexport const commonInputNumberProps = {\n  min: 0,\n  placeholder: '',\n  step: 1,\n};\n\nexport function checkInputValue(value: number, min?: number) {\n  if (isNaN(value)) return false;\n  if (value < (min || 0)) return false;\n  return true;\n}\n\nexport const inputNumberStyle: React.CSSProperties = {\n  ...unitSelectStyle,\n  width: 60,\n  margin: '0 5px',\n};\n\nexport const commonSelectStyle = {\n  height: 28,\n  width: 90,\n  fontSize: 13,\n  padding: '0 4px 0 0',\n};\n\ninterface UnitSelectProps {\n  value: string;\n  units: Array<Record<string, string>>;\n  onChange: (value: string) => void;\n}\n\nexport function UnitSelect(props: UnitSelectProps) {\n  const { value, units, onChange } = props;\n  const options = units.map((unit) => {\n    return <Select.Option value={unit.key}>{unit.value}</Select.Option>;\n  });\n  return (\n    <Select\n      value={value}\n      style={unitSelectStyle}\n      onChange={onChange}\n    >\n      {options}\n    </Select>\n  );\n}\n"],"file":"common.js"}