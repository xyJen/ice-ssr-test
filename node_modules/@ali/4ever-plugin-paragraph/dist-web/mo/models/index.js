import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { Block } from '@ali/4ever-cangjie';
import { ELEMENT_TYPE } from "../meta";

var Paragraph = /*#__PURE__*/function (_Block) {
  _inheritsLoose(Paragraph, _Block);

  function Paragraph() {
    return _Block.apply(this, arguments) || this;
  }

  Paragraph.create = function create(properties) {
    if (properties === void 0) {
      properties = {};
    }

    if (typeof properties === 'string') {
      throw new Error('`Paragraph.create` does not accept string');
    }

    if (Paragraph.isParagraph(properties)) {
      return properties;
    }

    return _Block.create.call(this, _extends({}, properties, {
      type: Paragraph.TYPE
    }));
  };

  Paragraph.isParagraph = function isParagraph(maybeParagraph) {
    return Block.isBlock(maybeParagraph) && maybeParagraph.type === Paragraph.TYPE;
  };

  return Paragraph;
}(Block);

Paragraph.TYPE = ELEMENT_TYPE;
export { Paragraph as default };
//# sourceMappingURL=index.js.map