{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToHTML.tsx"],"names":["React","Block","getTagName","getAttributes","getChildren","SpacingUtil","CommonFormatUtil","ParagraphModel","tagToComponent","h1","h2","h3","h4","h5","h6","p","getHeadStyle","tagName","headDefaultStyle","getDefaultHeadStyle","fontSize","lineHeight","marginTop","marginBottom","renderList","props","node","children","style","key","attrs","jc","list","ind","firstLine","firstline","isChecked","isTaskList","listStyle","textAlign","textIndent","textAlignLast","Paragraph","Component","path","config","rest","dataType","blockquote","spacing","left","block","create","type","data","spacingStyle","toStyle","paragraphStyle","marginLeft","useWebLineHeight","line","toFixed","createJsonMLToHTML","configs","name","TYPE","match","convert","map","child","index","paragraphConfig","paragraph"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block, ConvertFunc, JsonMLToHTMLRule } from '@ali/4ever-cangjie';\nimport {\n  JsonML,\n  getTagName,\n  getAttributes,\n  getChildren,\n  SpacingUtil,\n  CommonFormatUtil,\n} from '@ali/4ever-utils';\nimport ParagraphModel from '../models';\nimport { MoParagraphConfig } from '../types';\n\n// TODO: heading 相关逻辑迁移到 heading 中\nconst tagToComponent: Record<string, string> = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  p: 'p',\n};\n\ninterface ParagraphProps {\n  Component: string;\n  node: any;\n  key: number[];\n  path: number[];\n  style?: Record<string, any>;\n  children: React.ReactElement[];\n  config?: MoParagraphConfig;\n}\n\nfunction getHeadStyle(tagName) {\n  const headDefaultStyle = CommonFormatUtil.getDefaultHeadStyle(tagName);\n  if (!headDefaultStyle) return {};\n\n  return {\n    fontSize: headDefaultStyle['font-size'],\n    lineHeight: headDefaultStyle['line-height'],\n    marginTop: headDefaultStyle['margin-top'],\n    marginBottom: headDefaultStyle['margin-bottom'],\n  };\n}\n\nfunction renderList(props: Record<string, any>): React.ReactElement {\n  const { node, children, style = {}, key } = props;\n  const attrs = getAttributes(node) || {};\n  // @ts-ignore\n  const { jc = 'left', list } = attrs;\n  // @ts-ignore\n  const ind = attrs.ind || {};\n  const firstLine = ind.firstLine || ind.firstline || 0;\n  const { isChecked, isTaskList } = list;\n\n  const listStyle = {\n    ...style,\n    textAlign: jc === 'distribute' ? 'justify' : jc,\n    textIndent: firstLine,\n  };\n\n  if (jc === 'distribute') {\n    listStyle.textAlignLast = 'justify';\n  }\n\n  return (\n    <div style={listStyle} key={key}>\n      { isTaskList && (\n        <input type=\"checkbox\" checked={isChecked} readOnly />\n      )}\n      { children }\n    </div>\n  );\n}\n\nfunction Paragraph(props: ParagraphProps): React.ReactElement {\n  const { Component, node, children, style = {}, path, config, ...rest } = props;\n\n  const attrs = getAttributes(node) || {};\n  const dataType = attrs.blockquote && 'blockquote';\n  // @ts-ignore\n  const { jc = 'left', list, spacing = {} } = attrs;\n  // Fixed: ind 可能出现 null 的数据情况\n  // @ts-ignore\n  const ind = attrs.ind || {};\n  const { left = 0 } = ind;\n  const firstLine = ind.firstLine || ind.firstline || 0;\n  if (list) return renderList(props);\n\n  const block = Block.create({\n    type: 'paragraph',\n    data: {\n      spacing,\n    },\n  });\n  const spacingStyle = SpacingUtil.toStyle(block);\n\n  const paragraphStyle: Record<string, any> = {\n    ...getHeadStyle(getTagName(node)),\n    ...style,\n    textAlign: jc === 'distribute' ? 'justify' : jc,\n    textIndent: firstLine,\n    marginLeft: left,\n    // 浏览器里 p 标签会带上 1em marginTop、marginBottom，导致 safari 浏览器自动纠正 text/plain 数据, 产生多余空行\n    marginTop: 0,\n    marginBottom: 0,\n    ...spacingStyle,\n  };\n\n  if (jc === 'distribute') {\n    paragraphStyle.textAlignLast = 'justify';\n  }\n\n  const useWebLineHeight = config && config.useWebLineHeight;\n  if (spacing.line && !useWebLineHeight) {\n    // 转换为百分比兼容word和竞品\n    paragraphStyle.lineHeight = `${(spacing.line * 100).toFixed(0)}%`;\n  }\n\n  return (\n    // @ts-ignore\n    <Component data-type={dataType} {...rest} style={paragraphStyle}>\n      { children }\n    </Component>\n  );\n}\n\nexport default function createJsonMLToHTML(configs: Record<string, any>): JsonMLToHTMLRule {\n  return {\n    name: ParagraphModel.TYPE,\n\n    match: (node: JsonML): boolean => {\n      const tagName = getTagName(node);\n      return !!tagToComponent[tagName];\n    },\n\n    convert: (node: JsonML, key: number[] = [], convert: ConvertFunc): React.ReactElement => {\n      const tagName = getTagName(node);\n      const Component = tagToComponent[tagName];\n      const children = getChildren(node)\n        .map((child, index: number) => convert(child, [...key, index]));\n      const { paragraph: paragraphConfig } = configs || {};\n      return (\n        // @ts-ignore\n        <Paragraph\n          Component={Component}\n          node={node}\n          // @ts-ignore\n          key={key}\n          path={key}\n          config={paragraphConfig}\n        >\n          {children}\n        </Paragraph>\n      );\n    },\n  };\n}\n\n"],"file":"jsonMLToHTML.js"}