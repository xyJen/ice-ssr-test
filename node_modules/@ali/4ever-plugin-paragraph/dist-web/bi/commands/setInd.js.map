{"version":3,"sources":["../../../../src/bi/commands/setInd.ts"],"names":["Commands","isEqualWithDefault","getBlocksFromEditor","canSetParagraphAttr","DEFAULT_INDENT_FULL","setParagraphInd","controller","data","selectedBlocks","length","forEach","node","ind","firstLine","firstLineChars","hanging","hangingChars","leftChars","rightChars","type","command","setNodeByKey","key"],"mappings":";AAAA,SAAqBA,QAArB,QAAqC,oBAArC;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAA0E,kBAA1E;AACA,SAASC,mBAAT,EAA8BC,mBAA9B;AAEA,eAAe,SAASC,eAAT,CAAyBC,UAAzB,EAAiDC,IAAjD,EAA8E;AAAA,MAA7BA,IAA6B;AAA7BA,IAAAA,IAA6B,GAAJ,EAAI;AAAA;;AAC3F,MAAMC,cAAc,GAAGN,mBAAmB,CAACI,UAAD,CAA1C;AACA,MAAI,CAACE,cAAc,CAACC,MAApB,EAA4B,OAAOH,UAAP;AAE5BE,EAAAA,cAAc,CAACE,OAAf,CAAuB,UAACC,IAAD,EAAU;AAC/B,QAAMC,GAAG,gBACJD,IAAI,CAACJ,IAAL,CAAUK,GADN,CAAT,CAD+B,CAK/B;;;AACA,QAAI,aAAaL,IAAb,IAAqB,kBAAkBA,IAA3C,EAAiD;AAC/C;AACA,aAAOK,GAAG,CAACC,SAAX;AACA,aAAOD,GAAG,CAACE,cAAX;AACD,KAJD,MAIO,IAAI,eAAeP,IAAf,IAAuB,oBAAoBA,IAA/C,EAAqD;AAC1D,aAAOK,GAAG,CAACG,OAAX;AACA,aAAOH,GAAG,CAACI,YAAX;AACD;;AAED,QAAI,UAAUT,IAAV,IAAkB,EAAE,eAAeA,IAAjB,CAAtB,EAA8C;AAC5C;AACA,aAAOK,GAAG,CAACK,SAAX;AACD;;AACD,QAAI,WAAWV,IAAX,IAAmB,EAAE,gBAAgBA,IAAlB,CAAvB,EAAgD;AAC9C,aAAOK,GAAG,CAACM,UAAX;AACD;;AACD,QAAI,eAAeX,IAAf,IAAuB,EAAE,oBAAoBA,IAAtB,CAA3B,EAAwD;AACtD,aAAOK,GAAG,CAACE,cAAX;AACD;;AACD,QAAI,aAAaP,IAAb,IAAqB,EAAE,kBAAkBA,IAApB,CAAzB,EAAoD;AAClD,aAAOK,GAAG,CAACI,YAAX;AACD;;AAED,QAAIf,kBAAkB,cAAMW,GAAN,EAAcL,IAAd,GAAsBI,IAAI,CAACJ,IAAL,CAAUK,GAAhC,EAAqCR,mBAArC,CAAtB,EAAiF;AAC/E;AACD;;AAED,QAAID,mBAAmB,CAACQ,IAAI,CAACQ,IAAN,CAAvB,EAAoC;AAClCb,MAAAA,UAAU,CAACc,OAAX,CAAmBpB,QAAQ,CAACqB,YAA5B,EAA0CV,IAAI,CAACW,GAA/C,EAAoD;AAClDf,QAAAA,IAAI,eACCI,IAAI,CAACJ,IADN;AAEFK,UAAAA,GAAG,eACEA,GADF,EAEEL,IAFF;AAFD;AAD8C,OAApD;AASD;AACF,GA5CD;AA6CA,SAAOD,UAAP;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { isEqualWithDefault, getBlocksFromEditor, IndentProperties } from '@ali/4ever-utils';\nimport { canSetParagraphAttr, DEFAULT_INDENT_FULL } from '../../utils';\n\nexport default function setParagraphInd(controller: Controller, data: IndentProperties = {}) {\n  const selectedBlocks = getBlocksFromEditor(controller);\n  if (!selectedBlocks.length) return controller;\n\n  selectedBlocks.forEach((node) => {\n    const ind = {\n      ...node.data.ind,\n    };\n\n    // 处理互斥关系\n    if ('hanging' in data || 'hangingChars' in data) {\n      // 首行与悬挂互斥\n      delete ind.firstLine;\n      delete ind.firstLineChars;\n    } else if ('firstLine' in data || 'firstLineChars' in data) {\n      delete ind.hanging;\n      delete ind.hangingChars;\n    }\n\n    if ('left' in data && !('leftChars' in data)) {\n      // 设置 left 时清除 leftChars（带单位优先级更高）\n      delete ind.leftChars;\n    }\n    if ('right' in data && !('rightChars' in data)) {\n      delete ind.rightChars;\n    }\n    if ('firstLine' in data && !('firstLineChars' in data)) {\n      delete ind.firstLineChars;\n    }\n    if ('hanging' in data && !('hangingChars' in data)) {\n      delete ind.hangingChars;\n    }\n\n    if (isEqualWithDefault({ ...ind, ...data }, node.data.ind, DEFAULT_INDENT_FULL)) {\n      return;\n    }\n\n    if (canSetParagraphAttr(node.type)) {\n      controller.command(Commands.setNodeByKey, node.key, {\n        data: {\n          ...node.data,\n          ind: {\n            ...ind,\n            ...data,\n          },\n        },\n      });\n    }\n  });\n  return controller;\n}\n"],"file":"setInd.js"}