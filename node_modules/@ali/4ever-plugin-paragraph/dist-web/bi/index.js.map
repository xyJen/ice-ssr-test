{"version":3,"sources":["../../../src/bi/index.tsx"],"names":["isEmptyParagraph","moFactory","onAction","createRenderNode","queries","actions","isActions","factory","configs","paragraph","locale","plugin","renderNode","sidebar","placeholder","text","focusMode","when","_","node"],"mappings":";;;AACA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,gBAAP;AACA,SAASC,OAAT;AACA,SAASC,OAAT,EAAkBC,SAAlB;;AAEA,IAAMC,OAAkB,GAAG,SAArBA,OAAqB,CAACC,OAAD,EAAa;AAAA,2BACXA,OADW,CAC9BC,SAD8B;AAAA,MAC9BA,SAD8B,mCAClB,EADkB;AAAA,MAE9BC,MAF8B,GAEnBD,SAFmB,CAE9BC,MAF8B;;AAItC,MAAMC,MAAgB,gBACjBV,SAAS,CAAC,EAAD,CADQ;AAEpBC,IAAAA,QAAQ,EAARA,QAFoB;AAGpBG,IAAAA,OAAO,EAAPA,OAHoB;AAIpBC,IAAAA,SAAS,EAATA,SAJoB;AAKpBF,IAAAA,OAAO,EAAPA,OALoB;AAMpBQ,IAAAA,UAAU,EAAET,gBAAgB,EANR;AAOpBU,IAAAA,OAAO;AAAA,8EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoB;AAAO;AAAP,4BADpB;;AAAA;AACDA,gBAAAA,OADC;AAAA,iDAEAA,OAAO,WAAP,CAAgBL,OAAhB,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAPa;AAWpBM,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAEL,MAAF,oBAAEA,MAAM,CAAEI,WADH;AAEXE,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,IAAI,EAAE,cAACC,CAAD,EAAIC,IAAJ,EAAa;AACjB,eAAOnB,gBAAgB,CAACmB,IAAD,CAAvB;AACD;AALU;AAXO,IAAtB;;AAoBA,SAAOR,MAAP;AACD,CAzBD;;AA2BA,eAAeJ,OAAf","sourcesContent":["import type { BiFactory, BiPlugin } from '@ali/4ever-cangjie';\nimport { isEmptyParagraph } from '@ali/4ever-utils';\nimport moFactory from '../mo/index';\nimport onAction from './handlers/onAction';\nimport createRenderNode from './createRenderNode';\nimport { queries } from './queries';\nimport { actions, isActions } from './actions';\n\nconst factory: BiFactory = (configs) => {\n  const { paragraph = {} } = configs;\n  const { locale } = paragraph;\n\n  const plugin: BiPlugin = {\n    ...moFactory({}),\n    onAction,\n    actions,\n    isActions,\n    queries,\n    renderNode: createRenderNode(),\n    sidebar: async () => {\n      const sidebar: any = await import(/* webpackChunkName: \"paragraph_bi_sidebar\" */'./sidebar');\n      return sidebar.default(configs);\n    },\n    placeholder: {\n      text: locale?.placeholder,\n      focusMode: true,\n      when: (_, node) => {\n        return isEmptyParagraph(node);\n      },\n    },\n  }\n\n  return plugin;\n}\n\nexport default factory;\n"],"file":"index.js"}