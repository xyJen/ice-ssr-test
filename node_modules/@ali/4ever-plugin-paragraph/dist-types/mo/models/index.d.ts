import { Block, BlockChildren, Data, Inline } from '@ali/4ever-cangjie';
import type { MoInterfaces } from '@ali/4ever-cangjie';
import type { IndentProperties, SpacingProperties, ShdData, ListProperties, TabStyle } from '@ali/4ever-utils';
export interface ParagraphData extends Data {
    /**
     * 段落水平对齐方式
     * justify == both
     * start == left
     * end == right
     */
    jc?: 'left' | 'center' | 'right' | 'both' | 'distribute' | 'justify';
    /**
     * 段落缩进方式
     */
    ind?: IndentProperties;
    /**
     * 列表定义
     */
    list?: ListProperties;
    /**
     * 引用定义
     */
    blockquote?: boolean;
    /**
     * 行间距定义
     */
    spacing?: SpacingProperties;
    /**
     * 段落边框
     */
    bdr?: MoInterfaces.Border.Border;
    /**
     * 段落-孤行控制
     */
    widowControl?: boolean;
    /**
     * 段落-与下段同页
     */
    keepNext?: boolean;
    /**
     * 段落-段中不分页
     */
    keepLines?: boolean;
    /**
     * 段落-段前分页
     */
    pageBreakBefore?: boolean;
    /**
     * 图文框 - 浮动页码/首字下沉
     */
    framePr?: MoInterfaces.FramePr.FramePr;
    /**
     * 段落底纹
     */
    shd?: ShdData;
    /**
     * 制表符样式
     */
    tabs?: TabStyle[];
    /**
     * 高亮块
     */
    calloutPr?: MoInterfaces.CalloutPr.CalloutPr;
}
export declare type ParagraphChildren<T extends Inline = Inline> = Array<T>;
export interface ParagraphProperties<D = ParagraphData, N extends BlockChildren = ParagraphChildren> {
    data?: D;
    nodes?: N;
}
export default class Paragraph extends Block<ParagraphData, ParagraphChildren> {
    static TYPE: string;
    static create<SD = ParagraphData, SN extends BlockChildren = ParagraphChildren>(properties?: Paragraph | ParagraphProperties<SD, SN> | string): Block<SD, SN>;
    static isParagraph(maybeParagraph: any): maybeParagraph is Paragraph;
}
