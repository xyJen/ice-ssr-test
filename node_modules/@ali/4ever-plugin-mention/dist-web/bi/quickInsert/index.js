import _extends from "@babel/runtime/helpers/extends";
import renderMention from "../renderNode";
import onKeyDown from "../handlers/onKeyDown";
import createOnAction from "../handlers/createOnAction";
import onSelect from "../handlers/onSelect";
import { QUICK_INSERT_SET } from '@ali/4ever-plugin-quickinsert';
import insertMention from "../commands/insertMention";
import createQuickInsertConfig from "./createQuickInsertConfig";
import menubar from "./menubar";
import isSelectionInMentionSuggestion from "../queries/isSelectionInMentionSuggestion";
import createOnCangjiePaste from "../handlers/onCangjiePaste";
export default function creatMentionPlugin(config) {
  var _config$mention;

  var mentionLocale = ((_config$mention = config.mention) == null ? void 0 : _config$mention.locale) || {};

  var mentionConfig = _extends({
    locale: mentionLocale
  }, config.quickInsertMention);

  var mentionId = mentionConfig && mentionConfig.getMentionId ? mentionConfig.getMentionId() : '';

  var _onAction = createOnAction(mentionConfig);

  return {
    renderNode: renderMention(mentionId, mentionConfig),
    onCangjiePaste: createOnCangjiePaste(config),
    onAction: function onAction(action, controller, next) {
      var type = action.type,
          payload = action.payload;

      if (type === QUICK_INSERT_SET && (payload == null ? void 0 : payload.plugin) === 'quickInsertMention') {
        return controller.command(insertMention);
      }

      return _onAction(action, controller, next);
    },
    onKeyDown: onKeyDown,
    onSelect: onSelect,
    quickInsert: createQuickInsertConfig(mentionConfig),
    menubar: menubar,
    queries: {
      isSelectionInMentionSuggestion: isSelectionInMentionSuggestion
    },
    models: []
  };
}
//# sourceMappingURL=index.js.map