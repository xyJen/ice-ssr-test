{"version":3,"sources":["../../../../src/bi/mobile/insertMention.ts"],"names":["Commands","removeMention","nearsetAt","controller","results","value","query","command","moveToStartOfNextText","selection","document","start","getStart","at","endText","text","offset","mentionLength","deleteBackward","forEach","element","insertInline","type","data","id","login","uid","name","avatarUrl","avatar","focus"],"mappings":"AAAA,SAAqBA,QAArB,QAAgD,oBAAhD;AACA,OAAOC,aAAP;AACA,SAASC,SAAT;AAcA,gBAAe,UAACC,UAAD,EAAyBC,OAAzB,EAA+C;AAC5D,MAAI,CAACA,OAAL,EAAc,OAAOD,UAAP;AAD8C,MAGpDE,KAHoD,GAG1CF,UAH0C,CAGpDE,KAHoD;;AAI5D,MAAIF,UAAU,CAACG,KAAX,CAAiB,yBAAjB,CAAJ,EAAiD;AAC/CH,IAAAA,UAAU,CAACI,OAAX,CAAmBP,QAAQ,CAACQ,qBAA5B;AACD;;AAN2D,MAOpDC,SAPoD,GAO5BJ,KAP4B,CAOpDI,SAPoD;AAAA,MAOzCC,QAPyC,GAO5BL,KAP4B,CAOzCK,QAPyC;AAQ5D,MAAMC,KAAK,GAAGF,SAAS,CAAEG,QAAX,CAAoBF,QAApB,CAAd;AACA,MAAMG,EAAE,GAAGX,SAAS,CAACG,KAAK,CAACS,OAAN,CAAeC,IAAhB,EAAsBJ,KAAK,CAACK,MAA5B,CAApB;AACA,MAAMC,aAAa,GAAGN,KAAK,CAACK,MAAN,GAAeH,EAArC;AAEAV,EAAAA,UAAU,CAACI,OAAX,CAAmBP,QAAQ,CAACkB,cAA5B,EAA4CD,aAA5C;AACAb,EAAAA,OAAO,CAACe,OAAR,CAAgB,UAACC,OAAD,EAAa;AAC3BjB,IAAAA,UAAU,CAACI,OAAX,CAAmBP,QAAQ,CAACqB,YAA5B,EAA0C;AACxCC,MAAAA,IAAI,EAAE,SADkC;AAExCC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAEJ,OAAO,CAACI,EADR;AAEJC,QAAAA,KAAK,EAAEL,OAAO,CAACM,GAFX;AAGJC,QAAAA,IAAI,EAAEP,OAAO,CAACO,IAHV;AAIJC,QAAAA,SAAS,EAAER,OAAO,CAACS;AAJf;AAFkC,KAA1C;AASD,GAVD;AAWA1B,EAAAA,UAAU,CAACI,OAAX,CAAmBP,QAAQ,CAACQ,qBAA5B,EAAmDD,OAAnD,CAA2DP,QAAQ,CAAC8B,KAApE;AACA,SAAO7B,aAAa,CAACE,UAAD,CAApB;AACD,CA1BD","sourcesContent":["import { Controller, Commands, TextPoint } from '@ali/4ever-cangjie';\nimport removeMention from './removeMention';\nimport { nearsetAt } from '../utils';\n\n\nexport interface Result {\n  uid: string;\n  id: string;\n  name: string;\n  avatar: string;\n}\n\nexport interface MobileMultipleInsertMentionPayload {\n  suggestions: Result[];\n}\n\nexport default (controller: Controller, results: Result[]) => {\n  if (!results) return controller;\n\n  const { value } = controller;\n  if (controller.query('isCollapsedInInlineVoid')) {\n    controller.command(Commands.moveToStartOfNextText);\n  }\n  const { selection, document } = value;\n  const start = selection!.getStart(document) as TextPoint;\n  const at = nearsetAt(value.endText!.text, start.offset);\n  const mentionLength = start.offset - at;\n\n  controller.command(Commands.deleteBackward, mentionLength);\n  results.forEach((element) => {\n    controller.command(Commands.insertInline, {\n      type: 'mention',\n      data: {\n        id: element.id,\n        login: element.uid,\n        name: element.name,\n        avatarUrl: element.avatar,\n      },\n    });\n  });\n  controller.command(Commands.moveToStartOfNextText).command(Commands.focus);\n  return removeMention(controller);\n};\n"],"file":"insertMention.js"}