import _extends from "@babel/runtime/helpers/extends";
import React, { useEffect, useRef } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import ReactDOM from 'react-dom';
import { MentionAt } from "../components/styled";

var Portal = function Portal(props) {
  var className = props.className,
      overlay = props.overlay,
      children = props.children;
  return /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children), /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_createElement("div", {
    className: className
  }, /*#__PURE__*/React.cloneElement(overlay)), document.body));
};

var MentionSuggestionPortal = function MentionSuggestionPortal(props) {
  var overlay = props.overlay,
      children = props.children;
  var mentionRef = useRef(null);
  useEffect(function () {
    if (!mentionRef.current) return;
    var screenY = mentionRef.current.getBoundingClientRect().y;
    if (screenY < 100) return;
    window.scrollBy({
      top: screenY - 100,
      left: 0,
      behavior: 'smooth'
    });
  }, []);
  return /*#__PURE__*/_createElement(Portal, {
    overlay: overlay,
    className: "mobile-mention-suggestion-portal"
  }, /*#__PURE__*/_createElement(MentionAt, {
    ref: mentionRef,
    "data-type": "mention-at",
    active: true
  }, children()));
};

export default (function (mentionPanel) {
  return function renderMark(props, controller, next) {
    var mark = props.mark,
        markText = props.text;

    if (mark.type === 'mention' && !controller.query('isDisableMentionPanel')) {
      var text = controller.query('getMentionKeyword');
      if (!mentionPanel) return next();
      if (!text) return next();
      if (text[0] !== markText[0]) return next();
      var overlayElement = mentionPanel(text, controller);
      return /*#__PURE__*/_createElement(MentionSuggestionPortal, _extends({}, props, {
        overlay: overlayElement,
        isComposing: !!controller.value.composing
      }));
    }

    return next();
  };
});
//# sourceMappingURL=renderMark.js.map