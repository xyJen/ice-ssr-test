{"version":3,"sources":["../../../../src/bi/commands/insertMentions.ts"],"names":["Commands","nearsetAt","insertMention","controller","suggestion","command","insertInline","type","data","moveToStartOfNextText","insertText","insertMentions","suggestions","focus","value","selection","document","start","getStart","at","endText","text","offset","mentionLength","deleteBackward","forEach"],"mappings":"AAAA,SAAqBA,QAArB,QAAgD,oBAAhD;AAEA,SAASC,SAAT;;AAEA,SAASC,aAAT,CAAuBC,UAAvB,EAA+CC,UAA/C,EAAuE;AACrE,SAAOD,UAAU,CACdE,OADI,CACIL,QAAQ,CAACM,YADb,EAC2B;AAC9BC,IAAAA,IAAI,EAAE,SADwB;AAE9BC,IAAAA,IAAI,EAAEJ;AAFwB,GAD3B,EAKJC,OALI,CAKIL,QAAQ,CAACS,qBALb,EAMJJ,OANI,CAMIL,QAAQ,CAACU,UANb,EAMyB,GANzB,CAAP;AAOD;;AAED,eAAe,SAASC,cAAT,CACbR,UADa,EAEbS,WAFa,EAGb;AACAT,EAAAA,UAAU,CAACE,OAAX,CAAmBL,QAAQ,CAACa,KAA5B;AADA,MAEQC,KAFR,GAEkBX,UAFlB,CAEQW,KAFR;AAAA,MAGQC,SAHR,GAGgCD,KAHhC,CAGQC,SAHR;AAAA,MAGmBC,QAHnB,GAGgCF,KAHhC,CAGmBE,QAHnB;AAIA,MAAMC,KAAK,GAAGF,SAAS,CAAEG,QAAX,CAAoBF,QAApB,CAAd;AACA,MAAMG,EAAE,GAAGlB,SAAS,CAACa,KAAK,CAACM,OAAN,CAAeC,IAAhB,EAAsBJ,KAAK,CAACK,MAA5B,CAApB;AACA,MAAMC,aAAa,GAAGN,KAAK,CAACK,MAAN,GAAeH,EAArC;AAEAhB,EAAAA,UAAU,CAACE,OAAX,CAAmBL,QAAQ,CAACwB,cAA5B,EAA4CD,aAA5C;AACAX,EAAAA,WAAW,CAACa,OAAZ,CAAoB,UAACrB,UAAD,EAAgB;AAClCD,IAAAA,UAAU,CAACE,OAAX,CAAmBH,aAAnB,EAAkCE,UAAlC;AACD,GAFD;AAGA,SAAOD,UAAP;AACD","sourcesContent":["import { Controller, Commands, TextPoint } from '@ali/4ever-cangjie';\nimport { Suggestion } from '../types';\nimport { nearsetAt } from '../utils';\n\nfunction insertMention(controller: Controller, suggestion: Suggestion) {\n  return controller\n    .command(Commands.insertInline, {\n      type: 'mention',\n      data: suggestion,\n    })\n    .command(Commands.moveToStartOfNextText)\n    .command(Commands.insertText, ' ');\n}\n\nexport default function insertMentions(\n  controller: Controller,\n  suggestions: Suggestion[],\n) {\n  controller.command(Commands.focus);\n  const { value } = controller;\n  const { selection, document } = value;\n  const start = selection!.getStart(document) as TextPoint;\n  const at = nearsetAt(value.endText!.text, start.offset);\n  const mentionLength = start.offset - at;\n\n  controller.command(Commands.deleteBackward, mentionLength);\n  suggestions.forEach((suggestion) => {\n    controller.command(insertMention, suggestion);\n  });\n  return controller;\n}\n"],"file":"insertMentions.js"}