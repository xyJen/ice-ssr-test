{"version":3,"sources":["../../../../src/bi/commands/insertMention.ts"],"names":["Decoration","Commands","Injection","Inline","environment","isSelectionInMention","DEFAULT_PLACEHOLDER_DATA","id","login","name","avatarUrl","isPlaceholder","insertMention","controller","value","IS_MOBILE","query","command","moveToStartOfNextText","insertText","decorations","filter","item","mark","type","point","selection","anchor","push","fromJSON","start","key","offset","klass","end","setDecorations","insertPlaceholder","inline","create","data","injections","injection","active","setInjections","insertInline","setIsFocused","exitPlaceholder","text","node","moveToStartOfNode","focus","removeNodeByKey"],"mappings":"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","sourcesContent":["import { Controller, Decoration, Commands, Injection, Inline, TextPoint, environment } from '@ali/4ever-cangjie';\n\nimport { MentionData } from '../../mo/models';\nimport isSelectionInMention from '../utils/isSelectionInMention';\n\nconst DEFAULT_PLACEHOLDER_DATA: MentionData = {\n  id: '',\n  login: '',\n  name: '',\n  avatarUrl: '',\n  isPlaceholder: true,\n};\n\nexport default function insertMention(controller: Controller) {\n  const { value } = controller;\n\n  if (!environment.IS_MOBILE && (controller.query('isCollapsedInInlineVoid') || isSelectionInMention(value))) {\n    controller.command(Commands.moveToStartOfNextText);\n  }\n\n  controller.command(Commands.insertText, '@');\n  const decorations: Decoration[] = value.decorations.filter(\n    (item) => item.mark.type !== 'mention',\n  );\n\n  const point = controller.value.selection.anchor as TextPoint;\n  decorations.push(\n    Decoration.fromJSON({\n      start: {\n        key: point.key,\n        offset: point.offset - 1,\n        klass: 'point',\n      },\n      end: {\n        key: point.key,\n        offset: point.offset,\n        klass: 'point',\n      },\n      mark: {\n        type: 'mention',\n        klass: 'mark',\n      },\n    }),\n  );\n\n  return controller.setDecorations(decorations);\n}\n\nexport const insertPlaceholder = (controller: Controller) => {\n  const { value } = controller;\n\n  if (controller.query('isCollapsedInInlineVoid') || isSelectionInMention(value)) {\n    controller.command(Commands.moveToStartOfNextText);\n  }\n\n  const inline = Inline.create({\n    type: 'mention',\n    data: DEFAULT_PLACEHOLDER_DATA,\n  });\n  const { injections } = controller.value;\n  const injection = Injection.create({\n    key: inline.key,\n    data: {\n      active: true,\n    },\n  });\n\n  controller.setInjections([...injections, injection]).command(Commands.insertInline, inline);\n  return controller.setIsFocused(false);\n};\n\nexport const exitPlaceholder = (controller: Controller, text: string, node: Inline) => {\n  const { value } = controller;\n  if (controller.query('isCollapsedInInlineVoid') || isSelectionInMention(value)) {\n    controller.command(Commands.moveToStartOfNextText);\n  }\n\n  if (!text) {\n    return controller\n      .command(Commands.moveToStartOfNode, node)\n      .command(Commands.moveToStartOfNextText).command(Commands.focus);\n  }\n\n  return controller\n    .command(Commands.moveToStartOfNode, node)\n    .command(Commands.removeNodeByKey, node.key)\n    .command(Commands.insertText, text);\n};\n"],"file":"insertMention.js"}