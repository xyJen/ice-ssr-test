import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import { Inline } from '@ali/4ever-cangjie';
import { ELEMENT_TYPE } from "../../utils/meta";

var Mention = /*#__PURE__*/function (_Inline) {
  _inheritsLoose(Mention, _Inline);

  function Mention() {
    return _Inline.apply(this, arguments) || this;
  }

  Mention.create = function create(properties) {
    if (typeof properties === 'string') {
      throw new Error('`Mention.create` does not accept string');
    }

    if (Mention.isMention(properties)) {
      return properties;
    }

    return _Inline.create.call(this, _extends({}, properties, {
      type: Mention.TYPE
    }));
  };

  Mention.isMention = function isMention(maybeMention) {
    return Inline.isInline(maybeMention) && maybeMention.type === Mention.TYPE;
  };

  return Mention;
}(Inline);

Mention.TYPE = ELEMENT_TYPE;
export { Mention as default };
//# sourceMappingURL=index.js.map