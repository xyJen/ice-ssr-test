{"version":3,"sources":["../../../../src/mo/models/index.ts"],"names":["Inline","ELEMENT_TYPE","Mention","create","properties","Error","isMention","type","TYPE","maybeMention","isInline"],"mappings":";;AAAA,SAASA,MAAT,QAA+C,oBAA/C;AACA,SAASC,YAAT;;IAcqBC,O;;;;;;;UAGZC,M,GAAP,gBAAcC,UAAd,EAAgE;AAC9D,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACD;;AACD,QAAIH,OAAO,CAACI,SAAR,CAAkBF,UAAlB,CAAJ,EAAmC;AACjC,aAAOA,UAAP;AACD;;AACD,mBAAaD,MAAb,yBACKC,UADL;AAEEG,MAAAA,IAAI,EAAEL,OAAO,CAACM;AAFhB;AAID,G;;UAEMF,S,GAAP,mBAAiBG,YAAjB,EAA6D;AAC3D,WAAOT,MAAM,CAACU,QAAP,CAAgBD,YAAhB,KAAiCA,YAAY,CAACF,IAAb,KAAsBL,OAAO,CAACM,IAAtE;AACD,G;;;EAlBkCR,M;;AAAhBE,O,CACZM,I,GAAOP,Y;SADKC,O","sourcesContent":["import { Inline, InlineProperties, Data } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\nexport interface MentionData extends Data {\n  readonly id?: string;\n  readonly name?: string;\n  readonly login?: string;\n  readonly isPlaceholder?: boolean;\n}\n\nexport interface MentionProperties {\n  data?: MentionData;\n  nodes?: InlineProperties['nodes'];\n}\n\nexport default class Mention extends Inline {\n  static TYPE = ELEMENT_TYPE;\n\n  static create(properties: Mention | MentionProperties | string) {\n    if (typeof properties === 'string') {\n      throw new Error('`Mention.create` does not accept string');\n    }\n    if (Mention.isMention(properties)) {\n      return properties;\n    }\n    return super.create({\n      ...properties,\n      type: Mention.TYPE,\n    }) as Mention;\n  }\n\n  static isMention(maybeMention: any): maybeMention is Mention {\n    return Inline.isInline(maybeMention) && maybeMention.type === Mention.TYPE;\n  }\n}\n"],"file":"index.js"}