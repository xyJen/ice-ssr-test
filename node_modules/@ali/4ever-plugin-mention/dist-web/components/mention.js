import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { MentionSpan, MentionWrapper } from "./styled";
import { getHighlightColor } from "../utils/utils/getHighlightColor";

var Mention = function Mention(props) {
  var children = props.children,
      node = props.node,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      rest = _objectWithoutPropertiesLoose(props, ["children", "node", "style"]);

  var searchMatch = node.data.searchMatch;

  if (searchMatch) {
    var searchSelected = searchMatch.selected;
    style.backgroundColor = getHighlightColor(searchSelected);
  }

  return /*#__PURE__*/_createElement(MentionWrapper, null, /*#__PURE__*/_createElement(MentionSpan, _extends({}, rest, {
    style: style
  }), children));
};

export default Mention;
//# sourceMappingURL=mention.js.map