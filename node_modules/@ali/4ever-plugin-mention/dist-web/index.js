import { moFactory } from "./mo/index";
import { zhiFactory } from "./zhi/index";
import { biFactory } from "./bi/index";
import { mobileBiFactory } from "./bi/mobile";

var mobileZhiFactory = function mobileZhiFactory(configs) {
  return zhiFactory(configs);
}; // make types combination work


import "./utils/types";
// facotry
export { moFactory, biFactory, zhiFactory, mobileBiFactory, mobileZhiFactory }; // Element Model

export { default as Mention } from "./mo/models";
export { ELEMENT_TYPE } from "./utils/meta"; //typs

// serializer
export { default as createSerializationPlugin } from "./mo/serializer/index";
export { createServerSerializationPlugin } from "./mo/serializer/index"; // bi API 兼容

import { commands as OldBiCommands } from "./bi/commands";
import * as OldBiActions from "./bi/actions";
import creatQuickInsertPlugin from "./bi/quickInsert";
import { isSelectionInMention as isSelectionInMentionUtil } from "./bi/utils";
import mobileInsertMentionCommand from "./bi/mobile/insertMention";
import * as OldBambooPlugin from "./utils/bamboo";
export {
/** @deprecated */
OldBiCommands
/** @deprecated */
, OldBiActions, creatQuickInsertPlugin
/** @deprecated */
, mobileInsertMentionCommand
/** @deprecated */
, isSelectionInMentionUtil
/** @deprecated */
, OldBambooPlugin };
//# sourceMappingURL=index.js.map