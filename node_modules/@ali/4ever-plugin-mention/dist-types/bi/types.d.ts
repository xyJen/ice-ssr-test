/**
 * @packageDocumentation
 * @module Plugin-Mention
 */
/// <reference types="react" />
import { Controller, Inline, Mark } from '@ali/4ever-cangjie';
export interface MentionMark extends Mark {
    type: 'mention';
    data: {
        plugin: string;
    };
}
export interface Suggestion {
    /**
     * 业务层可以扩展字段
     */
    [key: string]: any;
    /**
     * 联系人的ID，唯一字段。
     */
    id: string;
    /**
     * 联系人头像 URL。
     */
    avatarUrl: string;
    /**
     * 联系人名字。
     */
    name: string;
    /**
     * 联系人用户名，唯一字段。
     */
    login: string;
    /**
    * 占位符 placeholder
    */
    isPlaceholder?: boolean;
}
export interface MentionPluginLocale {
    /**
     * 默认：「@人」
     */
    buttonTitle: string;
    /**
     * 默认：「提及人」
     */
    quickInsertTitle?: string;
    /**
     * placeholder
     */
    mentionPlaceholder: string;
}
export interface MentionPopupConfig {
    /**
     * 提示列表宽度，默认 '100%'。
     */
    suggestionWidth?: string | number;
    /**
     * 提示列表最大高度，默认 'none'。
     */
    suggestionMaxHeight?: string | number;
    /**
     * 提示列表的底部 offset，默认 0。
     */
    offsetBottom?: number;
    /**
     * 提示列表，每个 item 的高度，默认 50。
     */
    itemHeight?: number;
    /**
     * 提示列表的出现位置，默认 'follow'。
     */
    alignment?: 'follow' | 'top' | 'bottom';
    /**
     * 在 suggestionPosition 不等于 'follow' 情况下，指定额外的 top、left 偏移量。默认 [0, 0]。
     */
    offsets?: [number, number];
    /**
     * 是否在 window.document.body 上挂载
     */
    mountOnBody?: boolean;
}
export declare type onMentionClickType = (node: Inline) => void;
export interface ISearchSuggestionErrData {
    isServiceError?: boolean;
    serviceErrorMsg?: string;
}
export interface MentionPluginConfig {
    /**
     * 获取初始的 Mention ID。组件在渲染的时候，UI 会自动滚动到此 Mention 处。
     */
    getMentionId?: () => string;
    /**
     * 获取当前用户的用户名。组件渲染当前用户的 Mention，会使用不同的样式。
     */
    getCurrentUser?: () => string | null;
    /**
     * 用户选中了一个联系人，这里可以有机会处理一下，并选择是否调用 nextStep 进行后续逻辑。
     */
    onSuggestionSelected?: (suggestion: Suggestion, nextStep: (suggection: Suggestion) => void) => void;
    /**
     * 根据用户输入文字，查找联系人。
     */
    searchSuggestions?: (text: string, setResult: (suggestions: Suggestion[]) => void, setErrData?: (errData: ISearchSuggestionErrData) => void) => void;
    /**
     * 用户滚动到底部了，需要提供下一页的联系人列表。
     */
    loadMoreSuggestions?: (text: string, offset: number, setResult: (suggestions: Suggestion[]) => void) => void;
    /**
     * 自定义渲染 Mention 组件。
     */
    renderItem?: (suggestion: Suggestion) => React.ReactElement;
    /**
     * 在提示列表 Header 的位置，渲染自定义内容。
     */
    renderHeader?: () => React.ReactElement;
    /**
     * 在提示列表 Footer 的位置，渲染自定义内容。
     */
    renderFooter?: () => React.ReactElement;
    /**
     * 正在加载时，渲染自定义内容。
     */
    renderLoading?: () => React.ReactElement;
    /**
     * 渲染自定义 panel
     */
    renderPanel?: () => React.ReactElement;
    /**
     * Empty，渲染自定义内容
     */
    renderEmpty?: () => React.ReactElement;
    /**
     * 点击 mention。
    */
    onMentionClick?: onMentionClickType;
    /**
     * hover mention
     */
    onMentionHover?: onMentionClickType;
    /**
     * 国际化。
     */
    locale?: MentionPluginLocale;
    /**
     * 组件的 UI 自定义选项。
     */
    popupOptions?: MentionPopupConfig;
    /**
     * 渲染自定义的选人面板
     */
    renderMentionPanel?: (text: string, controller: Controller) => React.ReactElement;
}
