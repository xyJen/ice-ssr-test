{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToHTML.tsx"],"names":["name","match","node","tag","attrs","convert","id","login"],"mappings":";;;;;;;;;AAAA;;AACA;;uBAA4B,a;eAMb;AACbA,EAAAA,IAAI,EAAE,SADO;AAGbC,EAAAA,KAAK,EAAGC,IAAD,IAA2B;AAChC,UAAMC,GAAG,GAAG,2BAAWD,IAAX,CAAZ;AACA,UAAME,KAAK,GAAG,8BAAcF,IAAd,CAAd;AACA,WAAOC,GAAG,KAAK,MAAR,IAAkB,CAAC,CAACC,KAApB,IAA6BA,KAAK,CAAC,WAAD,CAAL,KAAuB,SAA3D;AACD,GAPY;AASbC,EAAAA,OAAO,EAAGH,IAAD,IAAsC;AAC7C;AACA,UAAM;AAAEI,MAAAA,EAAF;AAAMN,MAAAA,IAAN;AAAYO,MAAAA;AAAZ,QAAsB,8BAAcL,IAAd,CAA5B;AACA,wBACE,eAAC,KAAD,CAAO,QAAP,qBACE;AAAM,mBAAU,SAAhB;AAA0B,iBAASI,EAAnC;AAAuC,oBAAYC;AAAnD,YAA4DP,IAA5D,CADF,CADF;AAKD;AAjBY,C","sourcesContent":["import * as React from 'react';\nimport {\n  JsonML,\n  getTagName,\n  getAttributes,\n} from '@ali/4ever-utils';\n\nexport default {\n  name: 'mention',\n\n  match: (node: JsonML): boolean => {\n    const tag = getTagName(node);\n    const attrs = getAttributes(node);\n    return tag === 'span' && !!attrs && attrs['data-type'] === 'mention';\n  },\n\n  convert: (node: JsonML): React.ReactElement => {\n    // @ts-ignore\n    const { id, name, login } = getAttributes(node);\n    return (\n      <React.Fragment>\n        <span data-type=\"mention\" data-id={id} data-login={login}>@{name}</span>\n      </React.Fragment>\n    );\n  },\n};\n"],"file":"jsonMLToHTML.js"}