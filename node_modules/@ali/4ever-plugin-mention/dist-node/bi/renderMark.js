"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _suggestionPortal = _interopRequireDefault(require("./components/suggestionPortal"));

const _createElement = /*#__PURE__*/React.createElement;

var _default = config => {
  return function renderMark(props, controller, next) {
    // 如果有 quickInsert 面板显示，则不显示 mention 面板
    const isHidden = controller.query('isSelectionInQuickInsert');
    if (isHidden) return next();
    const {
      mark,
      text: markText
    } = props;

    if (mark.type === 'mention' && !controller.query('isDisableMentionPanel')) {
      const text = controller.query('getMentionKeyword'); // 某些场景 mark 会被分割，此时需要只有第一个 mark 唤起面板

      if (text[0] !== markText[0]) return next();
      return /*#__PURE__*/_createElement(_suggestionPortal.default, (0, _extends2.default)({}, props, config, {
        text: text,
        isComposing: !!controller.value.composing,
        controller: controller
      }));
    }

    return next();
  };
};

exports.default = _default;
//# sourceMappingURL=renderMark.js.map