{"version":3,"sources":["../../../../src/bi/components/suggestionItem.tsx"],"names":["defaultRender","suggestion","avatarUrl","name","MentionSuggestionItem","props","index","style","data","suggestions","selectedIndex","renderItem","onSelect","noop","onSelectedIndexChange","handleMouseEnter","React","useCallback","handleMouseDown","event","preventDefault","stopPropagation","actived","memo"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAsB5B,MAAMA,aAAa,GAAIC,UAAD,iBACpB,eAAC,4BAAD,qBACE,eAAC,cAAD,qBACE;AAAK,EAAA,GAAG,EAAEA,UAAU,CAACC,SAArB;AAAgC,EAAA,GAAG,EAAC;AAApC,EADF,CADF,eAIE,eAAC,gBAAD,qBACE,eAAC,gBAAD,QAAWD,UAAU,CAACE,IAAtB,CADF,CAJF,CADF;;AAWA,MAAMC,qBAA2D,GAAIC,KAAD,IAAW;AAC7E,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAK,GAAG,EAAjB;AAAqBC,IAAAA;AAArB,MAA8BH,KAApC;AACA,QAAM;AACJI,IAAAA,WADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,UAAU,GAAGX,aAHT;AAIJY,IAAAA,QAAQ,GAAGC,YAJP;AAKJC,IAAAA;AALI,MAMFN,IANJ;AAQA,QAAMO,gBAAgB,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAM;AAC/CH,IAAAA,qBAAqB,CAACR,KAAD,CAArB;AACD,GAFwB,EAEtB,CAACA,KAAD,EAAQQ,qBAAR,CAFsB,CAAzB;AAIA,QAAMI,eAAe,GAAGF,KAAK,CAACC,WAAN,CACrBE,KAAD,IAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AACAT,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACD,GALqB,EAMtB,CAACA,KAAD,EAAQM,QAAR,CANsB,CAAxB;AASA,QAAMU,OAAO,GAAGZ,aAAa,KAAKJ,KAAlC;AAEA,sBACE,eAAC,mBAAD;AACE,IAAA,SAAS,EAAG,2BAA0BgB,OAAO,GAAG,SAAH,GAAe,EAAG,EADjE;AAEE,mBAAY,yBAFd;AAGE,iBAAU,yBAHZ;AAIE,IAAA,KAAK,EAAEf,KAJT;AAKE,IAAA,WAAW,EAAEW,eALf;AAME,IAAA,YAAY,EAAEH,gBANhB;AAOE,IAAA,OAAO,EAAEO;AAPX,KASGX,UAAU,CAACF,WAAW,CAACH,KAAD,CAAZ,CATb,CADF;AAaD,CAtCD;;4BAwCeU,KAAK,CAACO,IAAN,CAAWnB,qBAAX,C","sourcesContent":["import * as React from 'react';\nimport { noop } from 'lodash-es';\nimport {\n  MentionItem,\n  Avatar,\n  ItemText,\n  ItemName,\n  MentionItemContainer,\n} from './styled';\nimport { Suggestion } from '../types';\n\nexport interface MentionSuggestionItemProps {\n  index: number;\n  style?: React.CSSProperties;\n  data: {\n    suggestions: Suggestion[];\n    renderItem?: (suggestion: Suggestion) => React.ReactElement;\n    onSelect?: () => void;\n    selectedIndex: number;\n    onSelectedIndexChange: (index: number) => void;\n  };\n}\n\nconst defaultRender = (suggestion: Suggestion) => (\n  <MentionItemContainer>\n    <Avatar>\n      <img src={suggestion.avatarUrl} alt=\"\" />\n    </Avatar>\n    <ItemText>\n      <ItemName>{suggestion.name}</ItemName>\n    </ItemText>\n  </MentionItemContainer>\n);\n\nconst MentionSuggestionItem: React.FC<MentionSuggestionItemProps> = (props) => {\n  const { index, style = {}, data } = props;\n  const {\n    suggestions,\n    selectedIndex,\n    renderItem = defaultRender,\n    onSelect = noop,\n    onSelectedIndexChange,\n  } = data;\n\n  const handleMouseEnter = React.useCallback(() => {\n    onSelectedIndexChange(index);\n  }, [index, onSelectedIndexChange]);\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      onSelect(index);\n    },\n    [index, onSelect],\n  );\n\n  const actived = selectedIndex === index;\n\n  return (\n    <MentionItem\n      className={`mention-suggestion-item ${actived ? 'actived' : ''}`}\n      data-testid=\"mention-suggestion-item\"\n      data-type=\"mention-suggestion-item\"\n      style={style}\n      onMouseDown={handleMouseDown}\n      onMouseEnter={handleMouseEnter}\n      actived={actived}\n    >\n      {renderItem(suggestions[index])}\n    </MentionItem>\n  );\n};\n\nexport default React.memo(MentionSuggestionItem);\n"],"file":"suggestionItem.js"}