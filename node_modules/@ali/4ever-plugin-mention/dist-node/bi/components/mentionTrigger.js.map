{"version":3,"sources":["../../../../src/bi/components/mentionTrigger.tsx"],"names":["PanelBox","styled","div","MentionSuggestionPortal","props","controller","searchSuggestions","loadMoreSuggestions","renderItem","renderHeader","renderFooter","renderLoading","renderEmpty","renderPanel","isComposing","text","popupOptions","theme","offsetBottom","itemHeight","alignment","offsets","suggestionOffset","scrollableContainer","panelVisible","setPanelVisible","suggestions","setSuggestions","searching","delayedSearching","setDelayedSearching","position","setPosition","top","left","portalRef","React","useRef","topOffset","leftOffset","current","console","warn","slice","updatePosition","flag","pos","query","portalDom","children","align","p","value","callback","event","target","HTMLElement","closest","run","window","document","addEventListener","removeEventListener","close","length","overlay","zIndex","ReactDOM","createPortal","body"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { throttle } from 'lodash-es';\nimport { useScrollableContainer } from '@ali/4ever-cangjie';\nimport * as ReactDOM from 'react-dom';\nimport { Toolbar, SuggestionsWrapper } from './styled';\nimport MentionSuggestion, { MentionSuggestionProps } from './suggestion';\nimport { Suggestion } from '../types';\nimport { useDelayedState } from '@ali/4ever-component';\nimport { deactiveMention } from '../actions';\n\nconst PanelBox = styled.div``;\n\nconst MentionSuggestionPortal:\nReact.FunctionComponent<MentionSuggestionProps> = (\n  props,\n) => {\n  const {\n    controller,\n    searchSuggestions,\n    loadMoreSuggestions,\n    renderItem,\n    renderHeader,\n    renderFooter,\n    renderLoading,\n    renderEmpty,\n    renderPanel,\n    isComposing,\n    text,\n    popupOptions = {},\n    theme,\n  } = props;\n  const {\n    offsetBottom,\n    itemHeight,\n    alignment = 'follow',\n    offsets = [0, 0],\n  } = popupOptions;\n  const suggestionOffset = offsets;\n  const scrollableContainer = useScrollableContainer();\n  const [panelVisible, setPanelVisible] = useState(!isComposing);\n  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n  const searching = useRef(false);\n  const [delayedSearching, setDelayedSearching] = useDelayedState(false);\n  const [position, setPosition] = useState<{\n    top: number;\n    left: number;\n  }\n  >({ top: 9999, left: 9999 });\n  const portalRef = React.useRef<HTMLDivElement>(null);\n  const left = useRef<number>(0);\n  const [topOffset, leftOffset] = suggestionOffset;\n\n  // reset loading when search done\n  useEffect(() => {\n    setDelayedSearching(false);\n    searching.current = false;\n  }, [setDelayedSearching, suggestions]);\n\n  // do search when text changed\n  useEffect(() => {\n    if (isComposing) {\n      return;\n    }\n    if (!searchSuggestions) {\n      // eslint-disable-next-line no-console\n      console.warn('Missing `searchSuggestions`');\n      return;\n    }\n    setDelayedSearching(true, 200);\n    searching.current = true;\n    searchSuggestions(text.slice(1), setSuggestions);\n  }, [isComposing, text, searchSuggestions, setDelayedSearching, setSuggestions]);\n\n  useEffect(() => {\n    if (suggestions || delayedSearching) {\n      setPanelVisible(true);\n    } else {\n      setPanelVisible(false);\n    }\n  }, [delayedSearching, setPanelVisible, suggestions]);\n\n  const updatePosition = useCallback(\n    throttle((flag?: Boolean | Event) => {\n      if (isComposing) {\n        return;\n      }\n\n      const pos = controller.query('getMentionPanelPosition', {\n        controller, scrollableContainer: scrollableContainer as HTMLElement, portalDom: portalRef.current!.children[0] as HTMLElement, align: alignment,\n      })!;\n      const p = {\n        left: typeof flag === 'boolean' ? pos.left : left.current,\n        top: pos.top,\n      };\n      setPosition(p);\n      left.current = p.left;\n    }), [controller.value, scrollableContainer],\n  );\n\n  useEffect(() => {\n    const callback = (event: MouseEvent) => {\n      if (\n        event.target instanceof HTMLElement &&\n        event.target.closest('.mention-suggestion-portal')\n      ) {\n        // click inside\n        return;\n      }\n      controller.run('onAction', deactiveMention());\n    };\n    window.document.addEventListener('mousedown', callback);\n    return () => {\n      window.document.removeEventListener('mousedown', callback);\n    };\n  }, [controller]);\n\n  const close = useCallback(() => {\n    return controller.run('onAction', deactiveMention());\n  }, [controller]);\n\n  useEffect(() => {\n    updatePosition(true);\n    scrollableContainer?.addEventListener('scroll', updatePosition);\n\n    return () => {\n      scrollableContainer?.removeEventListener('scroll', updatePosition);\n    };\n  }, [scrollableContainer]);\n\n  useEffect(() => {\n    if (text.length === 1) {\n      updatePosition(true);\n    }\n  }, [text, controller.value]);\n\n  const overlay = (\n    <Toolbar\n      active\n      style={{\n        left: position.left + leftOffset,\n        top: position.top + topOffset,\n        zIndex: 999,\n      }}\n    >\n      <SuggestionsWrapper theme={theme} className=\"mention-suggestion\" data-testid=\"mention-suggestion\">\n        {renderPanel ? renderPanel() : (\n          <MentionSuggestion\n            offsetBottom={offsetBottom}\n            loadMoreSuggestions={loadMoreSuggestions}\n            renderItem={renderItem}\n            renderHeader={renderHeader}\n            renderFooter={renderFooter}\n            delayedSearching={delayedSearching}\n            renderLoading={renderLoading}\n            renderEmpty={renderEmpty}\n            controller={controller}\n            suggestions={suggestions}\n            setSuggestions={setSuggestions}\n            searching={searching}\n            text={text.slice(1)}\n            theme={theme}\n            itemHeight={itemHeight}\n          />\n        )}\n      </SuggestionsWrapper>\n    </Toolbar>\n  );\n\n  return panelVisible ? ReactDOM.createPortal(\n    <PanelBox\n      className=\"mention-suggestion-portal\"\n      data-testid=\"mention-suggestion-portal\"\n      ref={portalRef}\n    >\n      {overlay}\n    </PanelBox>,\n    document.body,\n  ): null;\n};\n\nexport default MentionSuggestionPortal;\n"],"file":"mentionTrigger.js"}