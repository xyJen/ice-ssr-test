{"version":3,"sources":["../../../../src/bi/components/placeholder.tsx"],"names":["Status","PRE_FIX","Placeholder","React","memo","props","placeholderRef","useRef","node","controller","status","setStatus","data","active","normal","handleClick","query","PlaceholderPortal","inputRef","portalRef","scrollableContent","document","body","zoom","onStatusChange","mentionConfig","value","setValue","current","focus","moveAnchorEnd","close","e","contains","target","run","key","trim","parentRef","overlay","slice","handleChange","innerHtml","innerText","range","window","getSelection","anchorNode","childNodes","selectAllChildren","collapseToEnd","locale","mentionPlaceholder","PlaceholderBtn","isSelected","onClick","stopPropagation","environment","IS_MOBILE"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Controller, Injection, Inline, environment, useZoom, useZoomContainer } from '@ali/4ever-cangjie';\nimport { Portal } from '@ali/4ever-component';\nimport MentionSuggestion from '../components/suggestionForQuickInsert';\nimport { useOnClickOutside } from '@ali/4ever-component';\nimport { MentionPluginConfig } from '../types';\nimport { exitPlaceholder, cancelPlaceholder, activePlaceholder } from '../actions';\nimport { PlaceholderInputWrapper, InputSpanWrapper, InputWrapper, InsertWrapper, PlaceholderTextWrapper, PlaceholderIcon } from './styled';\nimport { InlinePlaceholder } from '@ali/we-toolbar';\nimport PlaceholderComponent from '../../components/placeholder';\n\nexport enum Status {\n  normal,\n  active,\n}\ninterface IProps {\n  controller: Controller;\n  injections: Injection[];\n  node: Inline;\n  mentionConfig: MentionPluginConfig;\n  isSelected: boolean;\n}\n\ninterface IPortalProps extends Omit<IProps, 'injections'> {\n  onStatusChange: (status: Status) => void;\n  parentRef: React.RefObject<HTMLDivElement>;\n}\n\ninterface IBtnProps extends Omit<IProps, 'injections'> {\n  onClick: () => void;\n}\n\nconst PRE_FIX = '@';\n\nconst Placeholder: React.FC<IProps> = React.memo((props: IProps) => {\n  const placeholderRef = React.useRef<HTMLDivElement>(null);\n\n  const { node, controller } = props;\n  const [status, setStatus] = useState(node.data.active ? Status.active : Status.normal);\n\n  const handleClick = useCallback(() => {\n    setStatus(Status.active);\n  }, []);\n\n  return (\n    <PlaceholderComponent\n      ref={placeholderRef}\n    >\n      {\n        status === Status.active && !controller.query('isDisableMentionPanel') ?\n          <PlaceholderPortal\n            {...props}\n            parentRef={placeholderRef}\n            onStatusChange={setStatus}\n          />\n          :\n          <PlaceholderBtn {...props} onClick={handleClick} />\n      }\n    </PlaceholderComponent>);\n});\n\nconst PlaceholderPortal: React.FC<IPortalProps> = React.memo((props: IPortalProps) => {\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const portalRef = React.useRef<HTMLDivElement>(null);\n  const scrollableContent = useZoomContainer() || document.body;\n  const zoom = useZoom();\n\n  const { controller, onStatusChange, mentionConfig, node } = props;\n  const [value, setValue] = useState(PRE_FIX);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n    moveAnchorEnd();\n  }, [inputRef.current]);\n\n  const close = useCallback((e) => {\n    // 如点击了 portal 区域 不触发关闭\n    if (portalRef.current?.contains(e.target)) {\n      return;\n    }\n\n    // 清除掉 injection\n    controller.run('onAction', cancelPlaceholder(node.key));\n\n    // 如未输入内容，变成占位符状态\n    // 如输入部分内容，变成文本\n    if (value.trim() === PRE_FIX) {\n      onStatusChange(Status.normal);\n      return;\n    }\n\n    return controller.run('onAction', exitPlaceholder(value.trim(), node));\n  }, [controller, onStatusChange, node, value]);\n\n  useOnClickOutside(props.parentRef, close);\n\n  const overlay = (\n    <InsertWrapper>\n      <MentionSuggestion\n        {...mentionConfig}\n        controller={controller}\n        at={node.key}\n        text={value!.slice(1).trim()}\n      />\n    </InsertWrapper>\n  );\n\n  const handleChange = () => {\n    const innerHtml = inputRef.current?.innerText as string;\n    if (innerHtml === '') {\n      onStatusChange(Status.normal);\n      return controller.run('onAction', exitPlaceholder('', node));\n    }\n    setValue(inputRef.current?.innerText as string);\n  };\n\n  const moveAnchorEnd = () => {\n    const range = window.getSelection();\n    if (range?.anchorNode !== inputRef.current?.childNodes[0]) {\n      return;\n    }\n    range?.selectAllChildren && (range?.selectAllChildren(inputRef.current as HTMLDivElement));\n    range?.collapseToEnd && (range?.collapseToEnd());\n  };\n\n  return (\n    <PlaceholderInputWrapper>\n      <Portal\n        className=\"menu-insert-mention-portal\"\n        data-testid=\"menu-insert-mention-portal\"\n        visible\n        container={scrollableContent}\n        overlay={overlay}\n        portalRef={portalRef}\n        maxWidth={420}\n        zoom={zoom}\n      >\n        <InputWrapper>\n          <InlinePlaceholder\n            icon={(\n              <InputSpanWrapper\n                data-testid=\"menu-insert-mention-input\"\n                contentEditable\n                data-cangjie-not-editable\n                ref={inputRef}\n                onInput={handleChange}\n              >\n                {PRE_FIX}\n              </InputSpanWrapper>\n            )}\n            type=\"normal\"\n            className=\"inline-placeholder\"\n          >\n            {\n              value === PRE_FIX &&\n              <PlaceholderTextWrapper>{mentionConfig.locale?.mentionPlaceholder}</PlaceholderTextWrapper>\n            }\n          </InlinePlaceholder>\n        </InputWrapper>\n      </Portal>\n    </PlaceholderInputWrapper>);\n});\n\nconst PlaceholderBtn: React.FC<IBtnProps> = React.memo((props: IBtnProps) => {\n  const { mentionConfig, controller, isSelected, node, onClick } = props;\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    // 移动端不触发默认逻辑，只传递 action\n    // TODO 移动端 mention 占位符功能\n    if (!environment.IS_MOBILE) {\n      onClick();\n    }\n\n    return controller.run('onAction', activePlaceholder(node));\n  }, [controller, node, onClick]);\n\n  return (\n    <InlinePlaceholder\n      icon={<PlaceholderIcon>{PRE_FIX}</PlaceholderIcon>}\n      type=\"normal\"\n      isSelected={isSelected}\n      onClick={handleClick}\n      testid=\"mention-placeholder-normal\"\n    >\n      {mentionConfig.locale?.mentionPlaceholder}\n    </InlinePlaceholder>\n  )\n});\n\nexport default Placeholder;\n"],"file":"placeholder.js"}