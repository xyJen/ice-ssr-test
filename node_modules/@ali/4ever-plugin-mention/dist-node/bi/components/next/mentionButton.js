"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createMentionButton;

var React = _interopRequireWildcard(require("react"));

var _everComponent = require("@ali/4ever-component");

var _actions = require("../../actions");

var _isSelectionInMention = _interopRequireDefault(require("../../utils/isSelectionInMention"));

const _createElement = /*#__PURE__*/React.createElement;

const isMentionDisabled = controller => {
  const {
    value
  } = controller;
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || (0, _isSelectionInMention.default)(value) || controller.query('isSelectionInLink') || controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard') || controller.query('isSelectionInHr');
  return Boolean(isDisabled);
};

var _ref = /*#__PURE__*/_createElement(_everComponent.IconMention, null);

function createMentionButton(props) {
  const {
    controller,
    locale,
    icon,
    title,
    tooltip,
    badgeDot,
    disabled
  } = props;

  const handleClick = () => controller.run('onAction', (0, _actions.activeMention)());

  const isDisabled = disabled || isMentionDisabled(controller);
  const buttonConfig = {
    icon: icon || _ref,
    onClick: handleClick,
    title: title || locale?.buttonTitle,
    tooltip: tooltip,
    badgeDot,
    disabled: isDisabled,
    testid: "bi-toolbar-mention"
  };
  return buttonConfig;
}
//# sourceMappingURL=mentionButton.js.map