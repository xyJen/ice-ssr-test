{"version":3,"sources":["../../../../src/bi/mobile/insertMention.ts"],"names":["controller","results","value","query","command","Commands","moveToStartOfNextText","selection","document","start","getStart","at","endText","text","offset","mentionLength","deleteBackward","forEach","element","insertInline","type","data","id","login","uid","name","avatarUrl","avatar","focus"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;eAce,CAACA,UAAD,EAAyBC,OAAzB,KAA+C;AAC5D,MAAI,CAACA,OAAL,EAAc,OAAOD,UAAP;AAEd,QAAM;AAAEE,IAAAA;AAAF,MAAYF,UAAlB;;AACA,MAAIA,UAAU,CAACG,KAAX,CAAiB,yBAAjB,CAAJ,EAAiD;AAC/CH,IAAAA,UAAU,CAACI,OAAX,CAAmBC,sBAASC,qBAA5B;AACD;;AACD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BN,KAAhC;AACA,QAAMO,KAAK,GAAGF,SAAS,CAAEG,QAAX,CAAoBF,QAApB,CAAd;AACA,QAAMG,EAAE,GAAG,sBAAUT,KAAK,CAACU,OAAN,CAAeC,IAAzB,EAA+BJ,KAAK,CAACK,MAArC,CAAX;AACA,QAAMC,aAAa,GAAGN,KAAK,CAACK,MAAN,GAAeH,EAArC;AAEAX,EAAAA,UAAU,CAACI,OAAX,CAAmBC,sBAASW,cAA5B,EAA4CD,aAA5C;AACAd,EAAAA,OAAO,CAACgB,OAAR,CAAiBC,OAAD,IAAa;AAC3BlB,IAAAA,UAAU,CAACI,OAAX,CAAmBC,sBAASc,YAA5B,EAA0C;AACxCC,MAAAA,IAAI,EAAE,SADkC;AAExCC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAEJ,OAAO,CAACI,EADR;AAEJC,QAAAA,KAAK,EAAEL,OAAO,CAACM,GAFX;AAGJC,QAAAA,IAAI,EAAEP,OAAO,CAACO,IAHV;AAIJC,QAAAA,SAAS,EAAER,OAAO,CAACS;AAJf;AAFkC,KAA1C;AASD,GAVD;AAWA3B,EAAAA,UAAU,CAACI,OAAX,CAAmBC,sBAASC,qBAA5B,EAAmDF,OAAnD,CAA2DC,sBAASuB,KAApE;AACA,SAAO,4BAAc5B,UAAd,CAAP;AACD,C","sourcesContent":["import { Controller, Commands, TextPoint } from '@ali/4ever-cangjie';\nimport removeMention from './removeMention';\nimport { nearsetAt } from '../utils';\n\n\nexport interface Result {\n  uid: string;\n  id: string;\n  name: string;\n  avatar: string;\n}\n\nexport interface MobileMultipleInsertMentionPayload {\n  suggestions: Result[];\n}\n\nexport default (controller: Controller, results: Result[]) => {\n  if (!results) return controller;\n\n  const { value } = controller;\n  if (controller.query('isCollapsedInInlineVoid')) {\n    controller.command(Commands.moveToStartOfNextText);\n  }\n  const { selection, document } = value;\n  const start = selection!.getStart(document) as TextPoint;\n  const at = nearsetAt(value.endText!.text, start.offset);\n  const mentionLength = start.offset - at;\n\n  controller.command(Commands.deleteBackward, mentionLength);\n  results.forEach((element) => {\n    controller.command(Commands.insertInline, {\n      type: 'mention',\n      data: {\n        id: element.id,\n        login: element.uid,\n        name: element.name,\n        avatarUrl: element.avatar,\n      },\n    });\n  });\n  controller.command(Commands.moveToStartOfNextText).command(Commands.focus);\n  return removeMention(controller);\n};\n"],"file":"insertMention.js"}