{"version":3,"sources":["../../../../src/bi/commands/setMention.ts"],"names":["controller","suggestion","at","value","selection","document","injections","start","getStart","offset","endText","text","mentionLength","inline","Inline","create","type","data","id","login","name","avatarUrl","excludeInjections","filter","i","key","setInjections","command","Commands","setNodeByKey","focus","moveToStartOfNextText","deleteBackward","insertInline"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;eAGe,CAACA,UAAD,EAAyBC,UAAzB,EAAiDC,EAAjD,KAAiE;AAC9E,MAAI,CAACD,UAAL,EAAiB,OAAOD,UAAP;AACjB,QAAM;AAAEG,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAsCH,KAA5C;AACA,QAAMI,KAAK,GAAGH,SAAS,CAACI,QAAV,CAAmBH,QAAnB,CAAd;AAEA,QAAMI,MAAM,GAAG,sBAAUN,KAAK,CAACO,OAAN,CAAeC,IAAzB,EAA+BJ,KAAK,CAACE,MAArC,CAAf;AACA,QAAMG,aAAa,GAAGL,KAAK,CAACE,MAAN,GAAeA,MAArC;;AAEA,QAAMI,MAAM,GAAGC,oBAAOC,MAAP,CAAc;AAC3BC,IAAAA,IAAI,EAAE,SADqB;AAE3BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAEjB,UAAU,CAACiB,EADX;AAEJC,MAAAA,KAAK,EAAElB,UAAU,CAACkB,KAFd;AAGJC,MAAAA,IAAI,EAAEnB,UAAU,CAACmB,IAHb;AAIJC,MAAAA,SAAS,EAAEpB,UAAU,CAACoB;AAJlB;AAFqB,GAAd,CAAf,CAT8E,CAmB9E;;;AACA,MAAInB,EAAJ,EAAQ;AACN,UAAMoB,iBAA8B,GAAGhB,UAAU,CAACiB,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUvB,EAAnC,CAAvC;AACA,WAAOF,UAAU,CACd0B,aADI,CACU,CAAC,GAAGJ,iBAAJ,CADV,EAEJK,OAFI,CAEIC,sBAASC,YAFb,EAE2B3B,EAF3B,EAE+B;AAClCe,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AADqB,KAF/B,EAKJU,OALI,CAKIC,sBAASE,KALb,EAMJH,OANI,CAMIC,sBAASG,qBANb,CAAP;AAOD;;AAED/B,EAAAA,UAAU,CACP2B,OADH,CACWC,sBAASI,cADpB,EACoCpB,aADpC,EAEGe,OAFH,CAEWC,sBAASE,KAFpB,EAGGH,OAHH,CAGWC,sBAASK,YAHpB,EAGkCpB,MAHlC,EAIGc,OAJH,CAIWC,sBAASG,qBAJpB;AAMA,SAAO,4BAAc/B,UAAd,CAAP;AACD,C","sourcesContent":["import { Controller, Commands, Inline, Injection, TextPoint } from '@ali/4ever-cangjie';\nimport removeMention from './removeMention';\nimport { nearsetAt } from '../utils';\nimport { Suggestion } from '../types';\n\nexport default (controller: Controller, suggestion: Suggestion, at?: string) => {\n  if (!suggestion) return controller;\n  const { value } = controller;\n  const { selection, document, injections } = value;\n  const start = selection.getStart(document) as TextPoint;\n\n  const offset = nearsetAt(value.endText!.text, start.offset);\n  const mentionLength = start.offset - offset;\n\n  const inline = Inline.create({\n    type: 'mention',\n    data: {\n      id: suggestion.id,\n      login: suggestion.login,\n      name: suggestion.name,\n      avatarUrl: suggestion.avatarUrl,\n    },\n  });\n\n  // 如果是 placeholder 类型的 mention 做 setData\n  if (at) {\n    const excludeInjections: Injection[] = injections.filter((i) => i.key !== at);\n    return controller\n      .setInjections([...excludeInjections])\n      .command(Commands.setNodeByKey, at, {\n        data: inline.data,\n      })\n      .command(Commands.focus)\n      .command(Commands.moveToStartOfNextText);\n  }\n\n  controller\n    .command(Commands.deleteBackward, mentionLength)\n    .command(Commands.focus)\n    .command(Commands.insertInline, inline)\n    .command(Commands.moveToStartOfNextText);\n\n  return removeMention(controller);\n};\n"],"file":"setMention.js"}