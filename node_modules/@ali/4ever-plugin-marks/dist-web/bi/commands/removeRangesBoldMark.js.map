{"version":3,"sources":["../../../../src/bi/commands/removeRangesBoldMark.ts"],"names":["Heading","getRangesFromEditor","addMarkAtRange","removeMarkAtRange","Bold","removeRangesBoldMark","controller","document","value","ranges","forEach","range","rangeBlocks","getLeafBlocksAtRange","boldMark","create","length","isHeading","TYPE","convertToTextPoints","start","end","startBlock","getClosestBlock","key","endBlock","block","blockRange","moveEndToEndOfNode","moveStartToStartOfNode","undefined"],"mappings":"AACA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,mBAAT,EAA8BC,cAA9B,EAA8CC,iBAA9C,QAAwE,kBAAxE;AACA,SAASC,IAAT;AAEA,eAAe,SAASC,oBAAT,CAA8BC,UAA9B,EAAsD;AAAA,MAC3DC,QAD2D,GAC9CD,UAAU,CAACE,KADmC,CAC3DD,QAD2D;AAEnE,MAAME,MAAM,GAAGR,mBAAmB,CAACK,UAAD,CAAlC;AAEAG,EAAAA,MAAM,CAACC,OAAP,CAAe,UAACC,KAAD,EAAW;AACxB,QAAMC,WAAW,GAAGL,QAAQ,CAACM,oBAAT,CAA8BF,KAA9B,CAApB;AACA,QAAMG,QAAQ,GAAGV,IAAI,CAACW,MAAL,CAAY,KAAZ,CAAjB;;AACA,QAAIH,WAAW,CAACI,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B;AACA,UAAIhB,OAAO,CAACiB,SAAR,CAAkBL,WAAW,CAAC,CAAD,CAA7B,CAAJ,EAAuC;AACrC,eAAOV,cAAc,CAACI,UAAD,EAAaK,KAAb,EAAoBG,QAApB,CAArB;AACD;;AACD,aAAOX,iBAAiB,CAACG,UAAD,EAAaK,KAAb,EAAoBP,IAAI,CAACc,IAAzB,CAAxB;AACD;;AATuB,gCAWDP,KAAK,CAACQ,mBAAN,CAA0BZ,QAA1B,CAXC;AAAA,QAWhBa,KAXgB,yBAWhBA,KAXgB;AAAA,QAWTC,GAXS,yBAWTA,GAXS;;AAYxB,QAAMC,UAAU,GAAGf,QAAQ,CAACgB,eAAT,CAAyBH,KAAK,CAACI,GAA/B,CAAnB;AACA,QAAMC,QAAQ,GAAGlB,QAAQ,CAACgB,eAAT,CAAyBF,GAAG,CAACG,GAA7B,CAAjB;AAEAZ,IAAAA,WAAW,CAACF,OAAZ,CAAoB,UAACgB,KAAD,EAAW;AAC7B,UAAIC,UAAJ;;AACA,UAAID,KAAK,CAACF,GAAN,MAAcF,UAAd,oBAAcA,UAAU,CAAEE,GAA1B,CAAJ,EAAmC;AACjCG,QAAAA,UAAU,GAAGhB,KAAK,CAACiB,kBAAN,CAAyBF,KAAzB,EAAgCpB,UAAhC,CAAb;AACD,OAFD,MAEO,IAAIoB,KAAK,CAACF,GAAN,MAAcC,QAAd,oBAAcA,QAAQ,CAAED,GAAxB,CAAJ,EAAiC;AACtCG,QAAAA,UAAU,GAAGhB,KAAK,CAACkB,sBAAN,CAA6BH,KAA7B,EAAoCpB,UAApC,CAAb;AACD,OAFM,MAEA;AACLqB,QAAAA,UAAU,GAAGhB,KAAK,CAACkB,sBAAN,CAA6BH,KAA7B,EAAoCpB,UAApC,EAAgDsB,kBAAhD,CAAmEF,KAAnE,EAA0EpB,UAA1E,CAAb;AACD;;AAED,UAAIN,OAAO,CAACiB,SAAR,CAAkBS,KAAlB,CAAJ,EAA8B;AAC5BxB,QAAAA,cAAc,CAACI,UAAD,EAAaqB,UAAb,EAAyBb,QAAzB,CAAd;AACD,OAFD,MAEO;AACLX,QAAAA,iBAAiB,CAACG,UAAD,EAAaqB,UAAb,EAAyBvB,IAAI,CAACc,IAA9B,CAAjB;AACD;AACF,KAfD;AAiBA,WAAOY,SAAP;AACD,GAjCD;AAmCA,SAAOxB,UAAP;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { getRangesFromEditor, addMarkAtRange, removeMarkAtRange }  from '@ali/4ever-utils';\nimport { Bold } from '../../mo/models';\n\nexport default function removeRangesBoldMark(controller: Controller) {\n  const { document } = controller.value;\n  const ranges = getRangesFromEditor(controller);\n\n  ranges.forEach((range) => {\n    const rangeBlocks = document.getLeafBlocksAtRange(range);\n    const boldMark = Bold.create(false);\n    if (rangeBlocks.length === 1) {\n      // 选区未跨段落\n      if (Heading.isHeading(rangeBlocks[0])) {\n        return addMarkAtRange(controller, range, boldMark);\n      }\n      return removeMarkAtRange(controller, range, Bold.TYPE);\n    }\n\n    const { start, end } = range.convertToTextPoints(document);\n    const startBlock = document.getClosestBlock(start.key);\n    const endBlock = document.getClosestBlock(end.key);\n\n    rangeBlocks.forEach((block) => {\n      let blockRange;\n      if (block.key === startBlock?.key) {\n        blockRange = range.moveEndToEndOfNode(block, controller);\n      } else if (block.key === endBlock?.key) {\n        blockRange = range.moveStartToStartOfNode(block, controller);\n      } else {\n        blockRange = range.moveStartToStartOfNode(block, controller).moveEndToEndOfNode(block, controller);\n      }\n\n      if (Heading.isHeading(block)) {\n        addMarkAtRange(controller, blockRange, boldMark);\n      } else {\n        removeMarkAtRange(controller, blockRange, Bold.TYPE);\n      }\n    });\n\n    return undefined;\n  });\n\n  return controller;\n}\n"],"file":"removeRangesBoldMark.js"}