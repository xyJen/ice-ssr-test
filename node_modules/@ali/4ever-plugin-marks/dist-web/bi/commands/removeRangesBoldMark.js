import { Heading } from '@ali/4ever-plugin-heading';
import { getRangesFromEditor, addMarkAtRange, removeMarkAtRange } from '@ali/4ever-utils';
import { Bold } from "../../mo/models";
export default function removeRangesBoldMark(controller) {
  var document = controller.value.document;
  var ranges = getRangesFromEditor(controller);
  ranges.forEach(function (range) {
    var rangeBlocks = document.getLeafBlocksAtRange(range);
    var boldMark = Bold.create(false);

    if (rangeBlocks.length === 1) {
      // 选区未跨段落
      if (Heading.isHeading(rangeBlocks[0])) {
        return addMarkAtRange(controller, range, boldMark);
      }

      return removeMarkAtRange(controller, range, Bold.TYPE);
    }

    var _range$convertToTextP = range.convertToTextPoints(document),
        start = _range$convertToTextP.start,
        end = _range$convertToTextP.end;

    var startBlock = document.getClosestBlock(start.key);
    var endBlock = document.getClosestBlock(end.key);
    rangeBlocks.forEach(function (block) {
      var blockRange;

      if (block.key === (startBlock == null ? void 0 : startBlock.key)) {
        blockRange = range.moveEndToEndOfNode(block, controller);
      } else if (block.key === (endBlock == null ? void 0 : endBlock.key)) {
        blockRange = range.moveStartToStartOfNode(block, controller);
      } else {
        blockRange = range.moveStartToStartOfNode(block, controller).moveEndToEndOfNode(block, controller);
      }

      if (Heading.isHeading(block)) {
        addMarkAtRange(controller, blockRange, boldMark);
      } else {
        removeMarkAtRange(controller, blockRange, Bold.TYPE);
      }
    });
    return undefined;
  });
  return controller;
}
//# sourceMappingURL=removeRangesBoldMark.js.map