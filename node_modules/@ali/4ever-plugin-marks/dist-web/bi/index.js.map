{"version":3,"sources":["../../../src/bi/index.ts"],"names":["moFactory","renderMark","React","commands","biFactory","models","renderCaret","props","controller","next","child","value","document","selection","marks","isExpanded","getMarksAtRange","style","reduce","s","mark","type","transformOrigin","transform","cloneElement"],"mappings":";AACA,SAASA,SAAT;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT;AAEA,OAAO,IAAMC,SAAoB,GAAG,SAAvBA,SAAuB,GAAM;AACxC,sBACKJ,SAAS,CAAC,EAAD,CADd;AAEEC,IAAAA,UAAU,EAAEA,UAFd;AAGEI,IAAAA,MAAM,EAAE,EAHV;AAIEF,IAAAA,QAAQ,EAARA,QAJF;AAKEG,IAAAA,WALF,uBAKcC,KALd,EAKqBC,UALrB,EAK6CC,IAL7C,EAKmD;AAC/C,UAAMC,KAAK,GAAGD,IAAI,EAAlB;;AACA,UAAI,CAACC,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AAJ8C,UAMvCC,KANuC,GAM7BH,UAN6B,CAMvCG,KANuC;AAAA,UAOvCC,QAPuC,GAOfD,KAPe,CAOvCC,QAPuC;AAAA,UAO7BC,SAP6B,GAOfF,KAPe,CAO7BE,SAP6B;AAQ/C,UAAMC,KAAK,GAAG,CAACD,SAAD,IAAcA,SAAS,CAACE,UAAxB,GACV,EADU,GAEVF,SAAS,CAACC,KAAV,IAAmBF,QAAQ,CAACI,eAAT,CAAyBH,SAAzB,CAFvB;AAGA,UAAMI,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAkC,UAACC,CAAD,EAAIC,IAAJ,EAAa;AAC3D,YAAIA,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC1B,8BACKF,CADL;AAEEG,YAAAA,eAAe,EAAE,WAFnB;AAGEC,YAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,eAAOJ,CAAP;AACD,OATa,EASX,EATW,CAAd,CAX+C,CAqB/C;;AACA,0BAAOjB,KAAK,CAACsB,YAAN,CAAmBd,KAAnB,EAAiC;AAAEO,QAAAA,KAAK,EAALA;AAAF,OAAjC,CAAP;AACD;AA5BH;AA8BD,CA/BM","sourcesContent":["import { BiFactory, Controller } from \"@ali/4ever-cangjie\";\nimport { moFactory } from '../mo/index';\nimport renderMark from \"../common/renderMark\";\nimport React from \"react\";\nimport { commands } from \"./commands\";\n\nexport const biFactory: BiFactory = () => {\n  return {\n    ...moFactory({}),\n    renderMark: renderMark,\n    models: [],\n    commands,\n    renderCaret(props, controller: Controller, next) {\n      const child = next();\n      if (!child) {\n        return null;\n      }\n\n      const { value } = controller;\n      const { document, selection } = value;\n      const marks = !selection || selection.isExpanded\n        ? []\n        : selection.marks || document.getMarksAtRange(selection);\n      const style = marks.reduce<React.CSSProperties>((s, mark) => {\n        if (mark.type === 'italic') {\n          return {\n            ...s,\n            transformOrigin: 'right 80%',\n            transform: 'rotate(13deg)',\n          };\n        }\n        return s;\n      }, {});\n      // TODO: 各家处理光标的策略不同，后续可以根据临时选区的sz推算光标的高度\n      return React.cloneElement(child as any, { style });\n    },\n  };\n}\n"],"file":"index.js"}