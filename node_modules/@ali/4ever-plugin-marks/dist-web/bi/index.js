import _extends from "@babel/runtime/helpers/extends";
import { moFactory } from "../mo/index";
import renderMark from "../common/renderMark";
import React from "react";
import { commands } from "./commands";
export var biFactory = function biFactory() {
  return _extends({}, moFactory({}), {
    renderMark: renderMark,
    models: [],
    commands: commands,
    renderCaret: function renderCaret(props, controller, next) {
      var child = next();

      if (!child) {
        return null;
      }

      var value = controller.value;
      var document = value.document,
          selection = value.selection;
      var marks = !selection || selection.isExpanded ? [] : selection.marks || document.getMarksAtRange(selection);
      var style = marks.reduce(function (s, mark) {
        if (mark.type === 'italic') {
          return _extends({}, s, {
            transformOrigin: 'right 80%',
            transform: 'rotate(13deg)'
          });
        }

        return s;
      }, {}); // TODO: 各家处理光标的策略不同，后续可以根据临时选区的sz推算光标的高度

      return /*#__PURE__*/React.cloneElement(child, {
        style: style
      });
    }
  });
};
//# sourceMappingURL=index.js.map