var mdMarks = [{
  name: 'fontWeight',
  value: 'bold',
  mark: '**'
}, {
  name: 'fontStyle',
  value: 'italic',
  mark: '_'
}, {
  name: 'textDecorationLine',
  value: 'underline',
  mark: '++'
}, {
  name: 'textDecorationLine',
  value: 'line-through',
  mark: '~~'
}, {
  name: 'verticalAlign',
  value: 'super',
  mark: '^'
}, {
  name: 'verticalAlign',
  value: 'sub',
  mark: '~'
}, {
  name: 'backgroundColor',
  value: 'rgb(255, 192, 0)',
  mark: '=='
}];

var convert = function convert(content, mark) {
  return mark + content + mark;
};

var isHeading = function isHeading(node) {
  var tagName = (node == null ? void 0 : node.tagName) || '';
  return /^H\d$/.test(tagName);
};

export default {
  name: 'marks',
  filter: function filter(node) {
    return node.tagName === 'SPAN' && node.getAttribute('data-type') === 'text';
  },
  replacement: function replacement(content, node) {
    if (content === void 0) {
      content = '';
    }

    if (!node) return content;
    var mdContent = content;
    mdMarks.forEach(function (_ref) {
      var name = _ref.name,
          value = _ref.value,
          mark = _ref.mark;

      if (!isHeading(node.parentElement) && node.style[name].includes(value)) {
        mdContent = convert(mdContent, mark);
      }
    });
    return mdContent;
  }
};
//# sourceMappingURL=htmlToMarkdown.js.map