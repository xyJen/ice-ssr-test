{"version":3,"sources":["../../../../src/mo/models/kern.ts"],"names":["Mark","Kern","TYPE","create","value","type","data","isKern","maybeKern","isMark"],"mappings":"AAAA,SAASA,IAAT,QAA2B,oBAA3B;AAQA,IAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE,MADK;AAGXC,EAAAA,MAHW,kBAGJC,KAHI,EAGiB;AAC1B,WAAOJ,IAAI,CAACG,MAAL,CAAsB;AAC3BE,MAAAA,IAAI,EAAEJ,IAAI,CAACC,IADgB;AAE3BI,MAAAA,IAAI,EAAE;AACJF,QAAAA,KAAK,EAALA;AADI;AAFqB,KAAtB,CAAP;AAMD,GAVU;AAYXG,EAAAA,MAZW,kBAYJC,SAZI,EAY+B;AACxC,WAAOR,IAAI,CAACS,MAAL,CAAYD,SAAZ,KAA0BA,SAAS,CAACH,IAAV,KAAmBJ,IAAI,CAACC,IAAzD;AACD;AAdU,CAAb;AAiBA,eAAeD,IAAf","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface KernData extends Data {\n  value: number;\n}\n\ninterface Kern extends Mark<KernData> {}\n\nconst Kern = {\n  TYPE: 'kern',\n\n  create(value: number): Kern {\n    return Mark.create<KernData>({\n      type: Kern.TYPE,\n      data: {\n        value,\n      },\n    });\n  },\n\n  isKern(maybeKern: any): maybeKern is Kern {\n    return Mark.isMark(maybeKern) && maybeKern.type === Kern.TYPE;\n  },\n};\n\nexport default Kern;\n"],"file":"kern.js"}