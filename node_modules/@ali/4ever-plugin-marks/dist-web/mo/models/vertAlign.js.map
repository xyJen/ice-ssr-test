{"version":3,"sources":["../../../../src/mo/models/vertAlign.ts"],"names":["Mark","VertAlign","TYPE","create","vertAlign","type","data","value","isVertAlign","maybeVertAlign","isMark"],"mappings":"AAAA,SAASA,IAAT,QAA2B,oBAA3B;AAQA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,WADU;AAGhBC,EAAAA,MAHgB,kBAGTC,SAHS,EAGqC;AACnD,WAAOJ,IAAI,CAACG,MAAL,CAA2B;AAChCE,MAAAA,IAAI,EAAEJ,SAAS,CAACC,IADgB;AAEhCI,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAEH;AAAT;AAF0B,KAA3B,CAAP;AAID,GARe;AAUhBI,EAAAA,WAVgB,uBAUJC,cAVI,EAU8C;AAC5D,WAAOT,IAAI,CAACU,MAAL,CAAYD,cAAZ,KAA+BA,cAAc,CAACJ,IAAf,KAAwBJ,SAAS,CAACC,IAAxE;AACD;AAZe,CAAlB;AAeA,eAAeD,SAAf","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface VertAlignData extends Data {\n  value: 'superscript' | 'subscript' | 'baseline';\n}\n\ninterface VertAlign extends Mark<VertAlignData> {}\n\nconst VertAlign = {\n  TYPE: 'vertAlign',\n\n  create(vertAlign: VertAlignData['value']): VertAlign {\n    return Mark.create<VertAlignData>({\n      type: VertAlign.TYPE,\n      data: { value: vertAlign },\n    });\n  },\n\n  isVertAlign(maybeVertAlign: any): maybeVertAlign is VertAlign {\n    return Mark.isMark(maybeVertAlign) && maybeVertAlign.type === VertAlign.TYPE;\n  },\n};\n\nexport default VertAlign;\n"],"file":"vertAlign.js"}