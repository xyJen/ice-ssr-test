{"version":3,"sources":["../../../../src/mo/models/fonts.ts"],"names":["Mark","Fonts","TYPE","create","data","type","isFonts","maybeFonts","isMark"],"mappings":"AAAA,SAASA,IAAT,QAA2B,oBAA3B;AAWA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,OADM;AAGZC,EAAAA,MAHY,kBAGLC,IAHK,EAGmB;AAC7B,WAAOJ,IAAI,CAACG,MAAL,CAAuB;AAC5BE,MAAAA,IAAI,EAAEJ,KAAK,CAACC,IADgB;AAE5BE,MAAAA,IAAI,EAAJA;AAF4B,KAAvB,CAAP;AAID,GARW;AAUZE,EAAAA,OAVY,mBAUJC,UAVI,EAUkC;AAC5C,WAAOP,IAAI,CAACQ,MAAL,CAAYD,UAAZ,KAA2BA,UAAU,CAACF,IAAX,KAAoBJ,KAAK,CAACC,IAA5D;AACD;AAZW,CAAd;AAeA,eAAeD,KAAf","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface FontsData extends Data {\n  ascii: string;\n  hAnsi: string;\n  cs: string;\n  eastAsia: string;\n}\n\ninterface Fonts extends Mark<FontsData> {}\n\nconst Fonts = {\n  TYPE: 'fonts',\n\n  create(data: FontsData): Fonts {\n    return Mark.create<FontsData>({\n      type: Fonts.TYPE,\n      data,\n    });\n  },\n\n  isFonts(maybeFonts: any): maybeFonts is Fonts {\n    return Mark.isMark(maybeFonts) && maybeFonts.type === Fonts.TYPE;\n  },\n};\n\nexport default Fonts;\n"],"file":"fonts.js"}