{"version":3,"sources":["../../../../src/mo/models/sz.ts"],"names":["Mark","Sz","TYPE","create","data","type","isSz","maybeSz","isMark"],"mappings":"AAAA,SAASA,IAAT,QAA2B,oBAA3B;AASA,IAAMC,EAAE,GAAG;AACTC,EAAAA,IAAI,EAAE,IADG;AAGTC,EAAAA,MAHS,kBAGFC,IAHE,EAGgB;AACvB,WAAOJ,IAAI,CAACG,MAAL,CAAoB;AACzBE,MAAAA,IAAI,EAAEJ,EAAE,CAACC,IADgB;AAEzBE,MAAAA,IAAI,EAAJA;AAFyB,KAApB,CAAP;AAID,GARQ;AAUTE,EAAAA,IAVS,gBAUJC,OAVI,EAUyB;AAChC,WAAOP,IAAI,CAACQ,MAAL,CAAYD,OAAZ,KAAwBA,OAAO,CAACF,IAAR,KAAiBJ,EAAE,CAACC,IAAnD;AACD;AAZQ,CAAX;AAeA,eAAeD,EAAf","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface SzData extends Data {\n  value: number;\n  szUnit?: string;\n}\n\ninterface Sz extends Mark<SzData> {}\n\nconst Sz = {\n  TYPE: 'sz',\n\n  create(data: SzData): Sz {\n    return Mark.create<SzData>({\n      type: Sz.TYPE,\n      data,\n    });\n  },\n\n  isSz(maybeSz: any): maybeSz is Sz {\n    return Mark.isMark(maybeSz) && maybeSz.type === Sz.TYPE;\n  },\n};\n\nexport default Sz;\n"],"file":"sz.js"}