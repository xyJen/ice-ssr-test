{"version":3,"sources":["../../../../src/mo/models/shd.ts"],"names":["Mark","Shd","TYPE","create","data","type","isShd","maybeShd","isMark"],"mappings":"AAAA,SAASA,IAAT,QAA2B,oBAA3B;AAUA,IAAMC,GAAG,GAAG;AACVC,EAAAA,IAAI,EAAE,KADI;AAGVC,EAAAA,MAHU,kBAGHC,IAHG,EAGiB;AACzB,WAAOJ,IAAI,CAACG,MAAL,CAAqB;AAC1BE,MAAAA,IAAI,EAAEJ,GAAG,CAACC,IADgB;AAE1BE,MAAAA,IAAI,EAAJA;AAF0B,KAArB,CAAP;AAID,GARS;AAUVE,EAAAA,KAVU,iBAUJC,QAVI,EAU4B;AACpC,WAAOP,IAAI,CAACQ,MAAL,CAAYD,QAAZ,KAAyBA,QAAQ,CAACF,IAAT,KAAkBJ,GAAG,CAACC,IAAtD;AACD;AAZS,CAAZ;AAeA,eAAeD,GAAf","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface ShdData extends Data {\n  val?: string;\n  color?: string;\n  fill?: string;\n}\n\ninterface Shd extends Mark<ShdData> {}\n\nconst Shd = {\n  TYPE: 'shd',\n\n  create(data: ShdData): Shd {\n    return Mark.create<ShdData>({\n      type: Shd.TYPE,\n      data,\n    });\n  },\n\n  isShd(maybeShd: any): maybeShd is Shd {\n    return Mark.isMark(maybeShd) && maybeShd.type === Shd.TYPE;\n  },\n};\n\nexport default Shd;\n"],"file":"shd.js"}