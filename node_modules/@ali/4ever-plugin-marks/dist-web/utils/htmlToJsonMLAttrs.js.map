{"version":3,"sources":["../../../src/utils/htmlToJsonMLAttrs.ts"],"names":["SzUtil","praseCSSBackground","unitsConverter","TinyColor","isDDChatBubbleBgColor","style","backgroundColor","includes","caretColor","color","every","isChromeDefaultBgColor","bgColor","BOLD_SIZE","htmlToJsonMLAttrs","name","attrs","marks","styleObj","fontWeight","parseInt","bold","fontStyle","italic","textDecoration","strike","underline","value","verticalAlign","vertAlign","isValid","size","sz","toPt","szUnit","face","split","replace","fonts","ascii","hAnsi","cs","eastAsia","inlineCode","background","bg","highlight","fontSize","defaulUnit","Number","isNaN","letterSpacing","spacing","toPT","fontKerning","kern","fontFamily"],"mappings":"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","sourcesContent":["import type { LeafRule } from '@ali/4ever-cangjie';\nimport { SzUtil, praseCSSBackground, unitsConverter } from '@ali/4ever-utils';\nimport { TinyColor } from '@ctrl/tinycolor';\n\n/**\n * 钉钉IM消息气泡默认情况会带上背景颜色\n * @param style\n */\nfunction isDDChatBubbleBgColor(style: Partial<CSSStyleDeclaration>) {\n  return (\n    style.backgroundColor?.includes('im_chat_message_bg_color') ||\n    ([style.caretColor, style.color].every(\n      (color) => color === 'rgb(238, 242, 248)',\n    ) &&\n      ['rgb(47, 48, 53)', 'rgb(47, 67, 97)'].includes(\n        style.backgroundColor as string,\n      ))\n  );\n}\n\n/**\n * Chrome 拷贝的时候在默认情况会带上全局的背景颜色\n * @param bgColor\n */\nfunction isChromeDefaultBgColor(bgColor: string) {\n  return bgColor === 'rgb(255, 255, 255)';\n}\n\nconst BOLD_SIZE = 500;\n\nexport const htmlToJsonMLAttrs: NonNullable<LeafRule['htmlToJsonMLAttrs']> = (\n  name,\n  attrs,\n  marks,\n) => {\n  const style = attrs.styleObj;\n  // 优先遵循css style 而不是html标签\n  if (style.fontWeight) {\n    if (\n      style.fontWeight === 'bold' ||\n      parseInt(style.fontWeight, 10) > BOLD_SIZE\n    ) {\n      marks.bold = true;\n    }\n  } else if (name === 'b' || name === 'strong') {\n    marks.bold = true;\n  }\n\n  if (style.fontStyle) {\n    if (style.fontStyle === 'italic' || style.fontStyle === 'oblique') {\n      marks.italic = true;\n    }\n  } else if (name === 'i' || name === 'em') {\n    marks.italic = true;\n  }\n\n  if (\n    name === 's' ||\n    name === 'strike' ||\n    name === 'del' ||\n    (style.textDecoration || '').includes('line-through')\n  ) {\n    marks.strike = true;\n  }\n\n  if (\n    name === 'u' ||\n    name === 'ins' ||\n    (name !== 'a' && (style.textDecoration || '').includes('underline'))\n  ) {\n    marks.underline = {\n      value: 'single',\n    };\n  }\n\n  if (name === 'sub' || style.verticalAlign === 'sub') {\n    marks.vertAlign = 'subscript';\n  }\n\n  if (name === 'sup' || style.verticalAlign === 'super') {\n    marks.vertAlign = 'superscript';\n  }\n\n  if (name === 'font') {\n    if (attrs.color && new TinyColor(attrs.color).isValid) {\n      marks.color = attrs.color;\n    }\n    if (attrs.size) {\n      marks.sz = SzUtil.toPt(attrs.size);\n      marks.szUnit = 'pt';\n    }\n    if (attrs.face) {\n      const value = attrs.face.split(',')[0].replace(/\"/g, '');\n      marks.fonts = {\n        ascii: value,\n        hAnsi: value,\n        cs: value,\n        eastAsia: value,\n      };\n    }\n  }\n\n  if (style.color && new TinyColor(style.color).isValid) {\n    marks.color = style.color;\n  }\n  // 该代码用于在粘贴markdown/html时产生inlineCode marks模型\n  // TODO inline-code全量后需要将该代码注释掉\n  if (name === 'code') {\n    marks.inlineCode = true;\n  }\n  // 只解析背景颜色\n  if (style.background) {\n    const bg = praseCSSBackground(style.background);\n    marks.highlight = bg.backgroundColor;\n  }\n  // 显示的 bgColor 优先级高于 bg\n  if (\n    style.backgroundColor &&\n    !isChromeDefaultBgColor(style.backgroundColor) &&\n    !isDDChatBubbleBgColor(style)\n  ) {\n    marks.highlight = style.backgroundColor;\n  }\n\n  if (style.fontSize) {\n    // 未带单位的 fontSize, 默认单位为 px\n    const defaulUnit = Number.isNaN(Number(style.fontSize)) ? '' : 'px';\n    marks.sz = SzUtil.toPt(style.fontSize, defaulUnit);\n    marks.szUnit = 'pt';\n  }\n\n  if (style.letterSpacing) {\n    const spacing = unitsConverter.toPT(style.letterSpacing);\n    if (spacing) {\n      marks.spacing = spacing / 2;\n    }\n  }\n\n  if (style.fontKerning === 'none') {\n    marks.kern = 0;\n  }\n\n  if (style.fontFamily) {\n    const value = style.fontFamily.split(',')[0].replace(/\"/g, '');\n    marks.fonts = {\n      ascii: value,\n      hAnsi: value,\n      cs: value,\n      eastAsia: value,\n    };\n  }\n\n  return marks;\n};\n"],"file":"htmlToJsonMLAttrs.js"}