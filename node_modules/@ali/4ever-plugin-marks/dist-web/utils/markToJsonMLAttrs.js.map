{"version":3,"sources":["../../../src/utils/markToJsonMLAttrs.ts"],"names":["Bold","Italic","Strike","Dstrike","Underline","Em","InlineCode","Highlight","Color","Shd","Spacing","Kern","VertAlign","Sz","Fonts","markToJsonMLAttrs","mark","isBold","bold","data","value","isItalic","italic","isStrike","strike","isDstrike","dstrike","isUnderline","underline","undefined","isEm","em","isInlineCode","inlineCode","isColor","color","isHighlight","highlight","isShd","shd","isSpacing","spacing","isKern","kern","isVertAlign","vertAlign","isSz","szUnit","sz","isFonts","fonts"],"mappings":"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","sourcesContent":["import type { LeafRule } from \"@ali/4ever-cangjie\";\nimport {\n  Bold,\n  Italic,\n  Strike,\n  Dstrike,\n  Underline,\n  Em,\n  InlineCode,\n  Highlight,\n  Color,\n  Shd,\n  Spacing,\n  Kern,\n  VertAlign,\n  Sz,\n  Fonts,\n} from '../mo/models';\n\nexport const markToJsonMLAttrs: NonNullable<LeafRule['markToJsonMLAttrs']> = (mark) => {\n  if (Bold.isBold(mark)) {\n    return { bold: mark.data.value !== false };\n  }\n  if (Italic.isItalic(mark)) {\n    return { italic: true };\n  }\n  if (Strike.isStrike(mark)) {\n    return { strike: mark.data.value !== false };\n  }\n  if (Dstrike.isDstrike(mark)) {\n    return { dstrike: mark.data.value };\n  }\n  if (Underline.isUnderline(mark)) {\n    return {\n      underline: {\n        ...mark.data,\n        value: mark.data.value === undefined ? 'single' : mark.data.value,\n      },\n    };\n  }\n  if (Em.isEm(mark)) {\n    return {\n      em: mark.data.value,\n    };\n  }\n  if (InlineCode.isInlineCode(mark)) {\n    return { inlineCode: true };\n  }\n  if (Color.isColor(mark)) {\n    return { color: mark.data.value };\n  }\n  if (Highlight.isHighlight(mark)) {\n    return { highlight: mark.data.value };\n  }\n  if (Shd.isShd(mark)) {\n    return {\n      shd: mark.data,\n    };\n  }\n  if (Spacing.isSpacing(mark)) {\n    return { spacing: mark.data.value };\n  }\n  if (Kern.isKern(mark)) {\n    return { kern: mark.data.value };\n  }\n  if (VertAlign.isVertAlign(mark)) {\n    return { vertAlign: mark.data.value };\n  }\n  if (Sz.isSz(mark)) {\n    if (mark.data.szUnit) {\n      return {\n        sz: mark.data.value,\n        szUnit: mark.data.szUnit,\n      };\n    }\n    return {\n      sz: mark.data.value,\n    };\n  }\n  if (Fonts.isFonts(mark)) {\n    return { fonts: mark.data };\n  }\n  return undefined;\n};\n"],"file":"markToJsonMLAttrs.js"}