{"version":3,"sources":["../../../../src/utils/createMarkFactory/mobile.ts"],"names":["capitalize","createToolbar","createOnKeyDown","createOnCangjieInput","createToggleMark","createIsQuery","canToggleMark","createOnAction","actions","createMarkFactoryMobile","moFactory","type","hotKey","delimiter","insideWhitespace","icon","toolbar","onKeyDown","onCangjieInput","toggleMark","isQuery","commands","queries","mobileBiFactory","config","pluginConfig","onAction","models","klass"],"mappings":";AAAA,SAASA,UAAT,QAA2B,WAA3B;AAEA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,SAASC,OAAT;AAYA,OAAO,SAASC,uBAAT,OAOJ;AAAA;;AAAA,MANDC,SAMC,QANDA,SAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,mCAFDC,gBAEC;AAAA,MAFDA,gBAEC,sCAFkB,KAElB;AAAA,MADDC,IACC,QADDA,IACC;AACD,MAAMC,OAAO,GAAGf,aAAa,CAACU,IAAD,EAAOI,IAAP,CAA7B;AACA,MAAME,SAAS,GAAGf,eAAe,CAACS,IAAD,EAAOC,MAAP,EAAeC,SAAf,EAA0BC,gBAA1B,CAAjC;AACA,MAAMI,cAAc,GAAGf,oBAAoB,CAACQ,IAAD,EAAOE,SAAP,EAAkBC,gBAAlB,CAA3C;AACA,MAAMK,UAAU,GAAGf,gBAAgB,CAACO,IAAD,CAAnC;AACA,MAAMS,OAAO,GAAGf,aAAa,CAACM,IAAD,CAA7B;AAEA,MAAMU,QAAiC,yCAC3BrB,UAAU,CAACW,IAAD,CADiB,IACNQ,UADM,YAAvC;AAGA,MAAMG,OAA8B,mCAC5BtB,UAAU,CAACW,IAAD,CADkB,IACPS,OADO,yBAErBpB,UAAU,CAACW,IAAD,CAFW,IAEAL,aAFA,WAApC;;AAKA,MAAMiB,eAAgC,GAAG,SAAnCA,eAAmC,CAACC,MAAD,EAAY;AACnD,QAAMC,YAAY,GAAGD,MAAM,CAACb,IAAD,CAAN,IAAgB,EAArC;AACA,wBACKD,SAAS,CAAC,EAAD,CADd;AAEEM,MAAAA,OAAO,EAAEA,OAAO,CAACS,YAAD,CAFlB;AAGEJ,MAAAA,QAAQ,EAARA,QAHF;AAIEC,MAAAA,OAAO,EAAPA,OAJF;AAKEd,MAAAA,OAAO,EAAPA,OALF;AAMEkB,MAAAA,QAAQ,EAAEnB,cAAc,CAACI,IAAD,CAN1B;AAOEO,MAAAA,cAAc,EAAdA,cAPF;AAQED,MAAAA,SAAS,EAATA,SARF;AASEU,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,MADD;AAENjB,QAAAA,IAAI,EAAJA;AAFM;AATV;AAcD,GAhBD;;AAkBA,SAAOY,eAAP;AACD","sourcesContent":["import { capitalize } from 'lodash-es';\nimport { Command, MobileBiFactory, MoFactory, Query } from '@ali/4ever-cangjie';\nimport createToolbar from './createMobileToolbar';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport createOnCangjieInput from './handlers/onCangjieInput';\nimport createToggleMark from './commands/createToggleMark';\nimport createIsQuery from './queries/createIsQuery';\nimport canToggleMark from './queries/canToggleMark';\nimport createOnAction from './createOnAction';\nimport { actions } from './actions';\nimport type { Delimiter } from '@ali/4ever-utils';\n\nexport interface ICreateMobileMarkFactoryPayload {\n  moFactory: MoFactory;\n  type: string,\n  hotKey: string,\n  delimiter: Delimiter | Delimiter[],\n  insideWhitespace?: boolean,\n  Icon: React.ComponentType,\n}\n\nexport function createMarkFactoryMobile({\n  moFactory,\n  type,\n  hotKey,\n  delimiter,\n  insideWhitespace = false,\n  icon,\n}) {\n  const toolbar = createToolbar(type, icon);\n  const onKeyDown = createOnKeyDown(type, hotKey, delimiter, insideWhitespace);\n  const onCangjieInput = createOnCangjieInput(type, delimiter, insideWhitespace);\n  const toggleMark = createToggleMark(type);\n  const isQuery = createIsQuery(type);\n\n  const commands: Record<string, Command> = {\n    [`toggle${capitalize(type)}`]: toggleMark,\n  };\n  const queries: Record<string, Query> = {\n    [`is${capitalize(type)}`]: isQuery,\n    [`canToggle${capitalize(type)}`]: canToggleMark,\n  };\n\n  const mobileBiFactory: MobileBiFactory = (config) => {\n    const pluginConfig = config[type] || {};\n    return {\n      ...moFactory({}),\n      toolbar: toolbar(pluginConfig),\n      commands,\n      queries,\n      actions,\n      onAction: createOnAction(type),\n      onCangjieInput,\n      onKeyDown,\n      models: {\n        klass: 'mark',\n        type,\n      },\n    };\n  }\n\n  return mobileBiFactory;\n}\n"],"file":"mobile.js"}