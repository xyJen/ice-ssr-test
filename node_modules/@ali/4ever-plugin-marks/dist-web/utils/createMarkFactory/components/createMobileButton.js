import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { capitalize } from 'lodash-es';
import canToggleMark from "../queries/canToggleMark";
import { toggleMark } from "../actions";
export function createMarkMobileButton(type, icon, buttonType) {
  return function MobileButton(props) {
    var controller = props.controller,
        Wrapper = props.Wrapper,
        item = props.item;
    var isDisabled = !canToggleMark(controller);
    var isActive = controller.query("is" + capitalize(type));
    var handleClick = React.useCallback(function () {
      return controller.run('onAction', toggleMark(type));
    }, [controller]);
    var focusAttr = React.useMemo(function () {
      if (!isActive) {
        return {};
      }

      return buttonType === 'big' ? {
        isFocused: true
      } : {
        isActive: true
      };
    }, [isActive]);
    return /*#__PURE__*/_createElement(Wrapper, _extends({}, focusAttr, {
      item: item,
      type: buttonType,
      icon: icon,
      isDisabled: isDisabled,
      onClick: handleClick
    }));
  };
}
//# sourceMappingURL=createMobileButton.js.map