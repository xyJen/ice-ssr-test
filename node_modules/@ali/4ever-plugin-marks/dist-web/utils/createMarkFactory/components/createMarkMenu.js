import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { capitalize } from 'lodash-es';
import { MenuItem } from '@ali/we-design';
import canToggleMark from "../queries/canToggleMark";
import { toggleMark } from "../actions";
export default function createMarkMenu(type) {
  return function MarkButton(props) {
    var menuItem = props.menuItem,
        controller = props.controller;

    var title = menuItem.title,
        rest = _objectWithoutPropertiesLoose(menuItem, ["title"]);

    var isDisabled = !canToggleMark(controller);
    var isActive = controller.query("is" + capitalize(type));

    var handleClick = function handleClick() {
      return controller.run('onAction', toggleMark(type));
    };

    return /*#__PURE__*/_createElement(MenuItem, _extends({
      onClick: handleClick,
      selected: isActive,
      disabled: isDisabled,
      role: type
    }, rest), title);
  };
}
//# sourceMappingURL=createMarkMenu.js.map