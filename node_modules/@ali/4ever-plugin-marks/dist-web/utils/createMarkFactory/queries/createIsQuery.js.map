{"version":3,"sources":["../../../../../src/utils/createMarkFactory/queries/createIsQuery.ts"],"names":["Heading","Bold","emptyBoldMarkHandler","controller","text","value","document","startBlock","block","getClosestBlock","key","isHeading","create","createIsQuery","type","isMark","activeMark","TYPE","query","data"],"mappings":"AACA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,IAAT;;AAEA,SAASC,oBAAT,CAA8BC,UAA9B,EAAsDC,IAAtD,EAAmE;AAAA,0BAChCD,UAAU,CAACE,KADqB;AAAA,MACzDC,QADyD,qBACzDA,QADyD;AAAA,MAC/CC,UAD+C,qBAC/CA,UAD+C;AAEjE,MAAMC,KAAK,GAAGJ,IAAI,GAAGE,QAAQ,CAACG,eAAT,CAAyBL,IAAI,CAACM,GAA9B,CAAH,GAAwCH,UAA1D;;AAEA,MAAIP,OAAO,CAACW,SAAR,CAAkBH,KAAlB,CAAJ,EAA8B;AAC5B,WAAO,CAACP,IAAI,CAACW,MAAL,EAAD,CAAP;AACD;;AAED,SAAO,EAAP;AACD;;AAED,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC1C,SAAO,SAASC,MAAT,CAAgBZ,UAAhB,EAAwC;AAAA;;AAC7C,QAAIa,UAAJ;;AACA,QAAIF,IAAI,KAAKb,IAAI,CAACgB,IAAlB,EAAwB;AACtBD,MAAAA,UAAU,GAAGb,UAAU,CAACe,KAAX,CAAiB,eAAjB,EAAkCJ,IAAlC,EAAwCZ,oBAAxC,CAAb;AACD,KAFD,MAEO;AACLc,MAAAA,UAAU,GAAGb,UAAU,CAACe,KAAX,CAAiB,eAAjB,EAAkCJ,IAAlC,CAAb;AACD;;AACD,QAAI,CAACE,UAAL,EAAiB,OAAO,KAAP;AAEjB,WAAO,qBAAAA,UAAU,CAACG,IAAX,sCAAiBd,KAAjB,MAA2B,KAAlC;AACD,GAVD;AAWD","sourcesContent":["import { Controller, Text, Mark } from '@ali/4ever-cangjie';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { Bold } from '../../../mo/models';\n\nfunction emptyBoldMarkHandler(controller: Controller, text?: Text) {\n  const { document, startBlock } = controller.value;\n  const block = text ? document.getClosestBlock(text.key) : startBlock;\n\n  if (Heading.isHeading(block)) {\n    return [Bold.create()];\n  }\n\n  return [];\n}\n\nexport default function createIsQuery(type) {\n  return function isMark(controller: Controller) {\n    let activeMark: Mark | undefined | null;\n    if (type === Bold.TYPE) {\n      activeMark = controller.query('getActiveMark', type, emptyBoldMarkHandler);\n    } else {\n      activeMark = controller.query('getActiveMark', type);\n    }\n    if (!activeMark) return false;\n\n    return activeMark.data?.value !== false;\n  };\n}\n"],"file":"createIsQuery.js"}