{"version":3,"sources":["../../../src/bi/index.ts"],"names":["biFactory","renderMark","models","commands","renderCaret","props","controller","next","child","value","document","selection","marks","isExpanded","getMarksAtRange","style","reduce","s","mark","type","transformOrigin","transform","React","cloneElement"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAMA,SAAoB,GAAG,MAAM;AACxC,SAAO,EACL,GAAG,sBAAU,EAAV,CADE;AAELC,IAAAA,UAAU,EAAEA,mBAFP;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,QAAQ,EAARA,kBAJK;;AAKLC,IAAAA,WAAW,CAACC,KAAD,EAAQC,UAAR,EAAgCC,IAAhC,EAAsC;AAC/C,YAAMC,KAAK,GAAGD,IAAI,EAAlB;;AACA,UAAI,CAACC,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AAED,YAAM;AAAEC,QAAAA;AAAF,UAAYH,UAAlB;AACA,YAAM;AAAEI,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0BF,KAAhC;AACA,YAAMG,KAAK,GAAG,CAACD,SAAD,IAAcA,SAAS,CAACE,UAAxB,GACV,EADU,GAEVF,SAAS,CAACC,KAAV,IAAmBF,QAAQ,CAACI,eAAT,CAAyBH,SAAzB,CAFvB;AAGA,YAAMI,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAkC,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC3D,YAAIA,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC1B,iBAAO,EACL,GAAGF,CADE;AAELG,YAAAA,eAAe,EAAE,WAFZ;AAGLC,YAAAA,SAAS,EAAE;AAHN,WAAP;AAKD;;AACD,eAAOJ,CAAP;AACD,OATa,EASX,EATW,CAAd,CAX+C,CAqB/C;;AACA,0BAAOK,eAAMC,YAAN,CAAmBf,KAAnB,EAAiC;AAAEO,QAAAA;AAAF,OAAjC,CAAP;AACD;;AA5BI,GAAP;AA8BD,CA/BM","sourcesContent":["import { BiFactory, Controller } from \"@ali/4ever-cangjie\";\nimport { moFactory } from '../mo/index';\nimport renderMark from \"../common/renderMark\";\nimport React from \"react\";\nimport { commands } from \"./commands\";\n\nexport const biFactory: BiFactory = () => {\n  return {\n    ...moFactory({}),\n    renderMark: renderMark,\n    models: [],\n    commands,\n    renderCaret(props, controller: Controller, next) {\n      const child = next();\n      if (!child) {\n        return null;\n      }\n\n      const { value } = controller;\n      const { document, selection } = value;\n      const marks = !selection || selection.isExpanded\n        ? []\n        : selection.marks || document.getMarksAtRange(selection);\n      const style = marks.reduce<React.CSSProperties>((s, mark) => {\n        if (mark.type === 'italic') {\n          return {\n            ...s,\n            transformOrigin: 'right 80%',\n            transform: 'rotate(13deg)',\n          };\n        }\n        return s;\n      }, {});\n      // TODO: 各家处理光标的策略不同，后续可以根据临时选区的sz推算光标的高度\n      return React.cloneElement(child as any, { style });\n    },\n  };\n}\n"],"file":"index.js"}