{"version":3,"sources":["../../../src/__tests__/aslToStyle.test.ts"],"names":["testCases","name","asl","color","style","italic","fontStyle","strike","textDecorationLine","WebkitTextDecorationLine","em","WebkitTextEmphasisStyle","WebkitTextEmphasisPosition","underline","textDecorationStyle","textUnderlinePosition","WebkitTextDecorationStyle","WebkitTextUnderlinePosition","value","textDecorationColor","WebkitTextDecorationColor","spacing","letterSpacing","bold","fontWeight","fonts","ascii","eastAsia","fontFamily","hint","eastAsiaTheme","asciiTheme","hAnsiTheme","cstheme","highlight","backgroundColor","shd","val","fill","sz","szUnit","vertAlign","fontSize","verticalAlign","describe","mo","forEach","testCase","jsonML","jsonMLToValue","marks","document","nodes","leaves","it","expect","toEqual","valueToJsonML"],"mappings":"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","sourcesContent":["import {\n  Mark,\n  createSerializer,\n} from '@ali/4ever-cangjie';\nimport { moFactory as paragraph } from '@ali/4ever-plugin-paragraph';\nimport { moFactory as marks } from '../mo/index';\nimport { marksToStyle } from '../components/marks';\n\nconst testCases = [\n  {\n    name: 'color',\n    asl: {\n      color: '#FF0000',\n    },\n    style: {\n      color: '#FF0000',\n    },\n  },\n  {\n    name: 'italic',\n    asl: {\n      italic: true,\n    },\n    style: {\n      fontStyle: 'italic',\n    },\n  },\n  {\n    name: 'strike',\n    asl: {\n      strike: true,\n    },\n    style: {\n      textDecorationLine: 'line-through',\n      WebkitTextDecorationLine: 'line-through',\n    },\n  },\n  {\n    name: 'em dot',\n    asl: {\n      em: 'dot',\n    },\n    style: {\n      WebkitTextEmphasisStyle: 'dot',\n      WebkitTextEmphasisPosition: 'under',\n    },\n  },\n  {\n    name: 'em comma',\n    asl: {\n      em: 'comma',\n    },\n    style: {\n      WebkitTextEmphasisStyle: 'sesame',\n      WebkitTextEmphasisPosition: 'over',\n    },\n  },\n  {\n    name: 'underline',\n    asl: {\n      underline: 'single',\n    },\n    style: {\n      textDecorationLine: 'underline',\n      textDecorationStyle: 'solid',\n      textUnderlinePosition: 'under',\n      WebkitTextDecorationLine: 'underline',\n      WebkitTextDecorationStyle: 'solid',\n      WebkitTextUnderlinePosition: 'under',\n    },\n  },\n  {\n    name: 'strike underline',\n    asl: {\n      strike: true,\n      underline: {\n        value: 'wave',\n        color: 'red',\n      },\n    },\n    style: {\n      textDecorationLine: 'line-through underline',\n      textDecorationStyle: 'wavy',\n      textDecorationColor: 'red',\n      textUnderlinePosition: 'under',\n      WebkitTextDecorationLine: 'line-through underline',\n      WebkitTextDecorationStyle: 'wavy',\n      WebkitTextDecorationColor: 'red',\n      WebkitTextUnderlinePosition: 'under',\n    },\n  },\n  {\n    name: 'spacing',\n    asl: {\n      spacing: 1.0,\n    },\n    style: {\n      letterSpacing: '2pt',\n    },\n  },\n  {\n    name: 'bold',\n    asl: {\n      bold: true,\n    },\n    style: {\n      fontWeight: 'bold',\n    },\n  },\n  {\n    name: 'bold value is false',\n    asl: {\n      bold: false,\n    },\n    style: {\n      fontWeight: 'normal',\n    },\n  },\n  {\n    name: 'fonts en & zh',\n    asl: {\n      fonts: {\n        ascii: 'Impact',\n        eastAsia: '苹方-简',\n      },\n    },\n    style: {\n      fontFamily: 'Impact,苹方-简,PingFang SC,Microsoft YaHei,SimHei,STHeiti,sans-serif',\n    },\n  },\n  {\n    name: 'fonts',\n    asl: {\n      fonts: {\n        hint: 'eastAsia',\n        eastAsiaTheme: 'minorEastAsia',\n        asciiTheme: 'minorHAnsi',\n        hAnsiTheme: 'minorHAnsi',\n        cstheme: 'minorBidi',\n        ascii: '等线',\n        eastAsia: '等线',\n      },\n    },\n    style: {\n      fontFamily: '等线,Dengxian,Microsoft YaHei,PingFang SC,SimHei,STHeiti,sans-serif',\n    },\n  },\n  {\n    name: 'highlight',\n    asl: {\n      highlight: '#FF0000',\n    },\n    style: {\n      backgroundColor: '#FF0000',\n    },\n  },\n  {\n    name: 'shd',\n    asl: {\n      shd: {\n        val: 'pct15',\n        fill: '#0000FF',\n        color: '#FF0000',\n      },\n    },\n    style: {\n      backgroundColor: '#2600d9',\n    },\n  },\n  {\n    name: 'vertAlign superscript',\n    asl: {\n      sz: 14,\n      szUnit: 'pt',\n      vertAlign: 'superscript',\n    },\n    style: {\n      fontSize: '7pt',\n      verticalAlign: 'super',\n    },\n  },\n  {\n    name: 'vertAlign baseline',\n    asl: {\n      sz: 14,\n      szUnit: 'pt',\n      vertAlign: 'baseline',\n    },\n    style: {\n      fontSize: '14pt',\n    },\n  },\n];\n\n\ndescribe('test aslToStyle', () => {\n  const mo = createSerializer([\n    paragraph({}),\n    marks({}),\n  ])\n\n  testCases.forEach((testCase) => {\n    const { name, asl, style } = testCase;\n    const jsonML = [\n      'root',\n      {},\n      [\n        'p',\n        {},\n        [\n          'span',\n          {\n            'data-type': 'text',\n          },\n          [\n            'span',\n            {\n              'data-type': 'leaf',\n              ...asl,\n            },\n            '',\n          ],\n        ],\n      ],\n    ];\n    // @ts-ignore\n    const value = mo.jsonMLToValue(jsonML);\n    // @ts-ignore\n    const { marks } = value.document.nodes[0].nodes[0].leaves[0];\n    it(`aslToStyle: ${name}`, () => {\n      expect(marksToStyle(marks as unknown as Mark[])).toEqual(style);\n    });\n\n    if (name !== 'underline') {\n      it(`json <=> value ${name}`, () => {\n        expect(mo.valueToJsonML(value)).toEqual(jsonML);\n      });\n    }\n  });\n});\n"],"file":"aslToStyle.test.js"}