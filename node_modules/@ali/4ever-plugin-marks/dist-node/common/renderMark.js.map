{"version":3,"sources":["../../../src/common/renderMark.tsx"],"names":["renderMark","props","_","next","node","offset","mark","marks","builtInMarks","filter","isBuiltInMark","length","key"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAGb,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,CAA3B,EAA8BC,IAA9B,EAAoC;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,MAAgCN,KAAtC;;AACA,MAAIM,KAAK,CAAC,CAAD,CAAL,KAAaD,IAAjB,EAAuB;AACrB;AACA;AACA,UAAME,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,sBAAb,CAArB;;AACA,QAAIF,YAAY,CAACG,MAAjB,EAAyB;AACvB,0BAAO,eAAC,qBAAD,6BAAoBV,KAApB;AAA2B,QAAA,GAAG,EAAG,GAAEG,IAAI,CAACQ,GAAI,IAAGP,MAAO;AAAtD,SAAP;AACD;AACF;;AACD,SAAOF,IAAI,EAAX;AACD","sourcesContent":["import * as React from 'react';\nimport { MarksComponent } from '../components/marks';\nimport isBuiltInMark from '../utils/isBuiltInMark';\n\nexport default function renderMark(props, _, next) {\n  const { node, offset, mark, marks } = props;\n  if (marks[0] === mark) {\n    // buildInMarks 优先级更高\n    // 在第一次调用 renderMark hook 时就消费所有的 buildInMarks，后续不会再消费\n    const builtInMarks = marks.filter(isBuiltInMark);\n    if (builtInMarks.length) {\n      return <MarksComponent {...props} key={`${node.key}:${offset}`} />;\n    }\n  }\n  return next();\n}\n"],"file":"renderMark.js"}