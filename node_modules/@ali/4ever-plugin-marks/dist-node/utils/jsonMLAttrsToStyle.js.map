{"version":3,"sources":["../../../src/utils/jsonMLAttrsToStyle.ts"],"names":["jsonMLAttrsToStyle","attrs","style","bold","italic","strike","dstrike","underline","color","highlight","vertAlign","sz","szUnit","fonts","inlineCode","shd","spacing","fontWeight","fontStyle","textDecoration","isInvalid","value","backgroundColor","ShdUtil","transformShd","verticalAlign","fontSize","SzUtil","toPt","letterSpacing","ascii","hAnsi","cs","eastAsia","fontFamily","padding","INLINE_CODE","margin","border","borderRadius","wordBreak"],"mappings":";;;;;;;AACA;;AAMO,MAAMA,kBAA+D,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/F,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,SARI;AASJC,IAAAA,EATI;AAUJC,IAAAA,MAAM,GAAG,IAVL;AAWJC,IAAAA,KAXI;AAYJC,IAAAA,UAZI;AAaJC,IAAAA,GAbI;AAcJC,IAAAA;AAdI,MAeFf,KAfJ;;AAiBA,MAAIE,IAAJ,EAAU;AACRD,IAAAA,KAAK,CAACe,UAAN,GAAmB,MAAnB;AACD;;AACD,MAAIb,MAAJ,EAAY;AACVF,IAAAA,KAAK,CAACgB,SAAN,GAAkB,QAAlB;AACD;;AACD,MAAIb,MAAM,IAAIC,OAAd,EAAuB;AACrBJ,IAAAA,KAAK,CAACiB,cAAN,GAAuB,cAAvB;AACD;;AACD,MAAIZ,SAAJ,EAAe;AACb;AACA,QAAIa,SAAS,GAAG,IAAhB;;AACA,QACE,OAAOb,SAAP,KAAqB,QAArB,IACCA,SAAS,EAAEc,KAAX,IAAoBd,SAAS,CAACc,KAAV,KAAoB,MAF3C,EAGE;AACAD,MAAAA,SAAS,GAAG,KAAZ;AACD;;AACD,QAAI,CAACA,SAAL,EAAgB;AACdlB,MAAAA,KAAK,CAACiB,cAAN,GAAuBjB,KAAK,CAACiB,cAAN,GAClB,GAAEjB,KAAK,CAACiB,cAAe,YADL,GAEnB,WAFJ;AAGD;AACF;;AACD,MAAIX,KAAJ,EAAW;AACTN,IAAAA,KAAK,CAACM,KAAN,GAAcA,KAAd;AACD;;AACD,MAAIC,SAAJ,EAAe;AACbP,IAAAA,KAAK,CAACoB,eAAN,GAAwBb,SAAxB;AACD,GAFD,MAEO,IAAIM,GAAJ,EAAS;AACdb,IAAAA,KAAK,CAACoB,eAAN,GACEpB,KAAK,CAACoB,eAAN,IAAyBC,mBAAQC,YAAR,CAAqBT,GAArB,CAD3B;AAED;;AACD,MAAIL,SAAJ,EAAe;AACb,QAAIA,SAAS,KAAK,aAAlB,EAAiC;AAC/BR,MAAAA,KAAK,CAACuB,aAAN,GAAsB,OAAtB;AACD,KAFD,MAEO,IAAIf,SAAS,KAAK,WAAlB,EAA+B;AACpCR,MAAAA,KAAK,CAACuB,aAAN,GAAsB,KAAtB;AACD;AACF,GAzD8F,CA0D/F;;;AACA,MAAId,EAAJ,EAAQ;AACNT,IAAAA,KAAK,CAACwB,QAAN,GAAkB,GAAEC,kBAAOC,IAAP,CAAYjB,EAAE,GAAGC,MAAjB,CAAyB,IAA7C;AACD;;AACD,MAAII,OAAJ,EAAa;AACXd,IAAAA,KAAK,CAAC2B,aAAN,GAAuB,GAAEb,OAAQ,IAAjC;AACD;;AACD,MAAIH,KAAJ,EAAW;AACT,UAAM;AAAEiB,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,EAAhB;AAAoBC,MAAAA;AAApB,QAAiCpB,KAAvC;AACAX,IAAAA,KAAK,CAACgC,UAAN,GAAoB,GAAEJ,KAAM,KAAIC,KAAM,KAAIC,EAAG,KAAIC,QAAS,EAA1D;AACD;;AACD,MAAInB,UAAJ,EAAgB;AACdZ,IAAAA,KAAK,CAACiC,OAAN,GAAgBC,2BAAYD,OAA5B;AACAjC,IAAAA,KAAK,CAACmC,MAAN,GAAeD,2BAAYC,MAA3B;AACAnC,IAAAA,KAAK,CAACoC,MAAN,GAAeF,2BAAYE,MAA3B;AACApC,IAAAA,KAAK,CAACqC,YAAN,GAAqBH,2BAAY,eAAZ,CAArB;AACAlC,IAAAA,KAAK,CAACgC,UAAN,GAAmBE,2BAAY,aAAZ,CAAnB;AACAlC,IAAAA,KAAK,CAACsC,SAAN,GAAkBJ,2BAAY,YAAZ,CAAlB;AACAlC,IAAAA,KAAK,CAACoB,eAAN,GAAwBc,2BAAY,kBAAZ,CAAxB;AACD;;AACD,SAAOlC,KAAP;AACD,CA/EM","sourcesContent":["import type { LeafRule } from \"@ali/4ever-cangjie\";\nimport {\n  SzUtil,\n  ShdUtil,\n  inlineCodeTheme as INLINE_CODE,\n} from '@ali/4ever-utils';\n\nexport const jsonMLAttrsToStyle: NonNullable<LeafRule['jsonMLAttrsToStyle']> = (attrs, style) => {\n  const {\n    bold,\n    italic,\n    strike,\n    dstrike,\n    underline,\n    color,\n    highlight,\n    vertAlign,\n    sz,\n    szUnit = 'px',\n    fonts,\n    inlineCode,\n    shd,\n    spacing,\n  } = attrs;\n\n  if (bold) {\n    style.fontWeight = 'bold';\n  }\n  if (italic) {\n    style.fontStyle = 'italic';\n  }\n  if (strike || dstrike) {\n    style.textDecoration = 'line-through';\n  }\n  if (underline) {\n    // 使用最基础的 textDecoration 属性，否则 word/wps 等无法识别\n    let isInvalid = true;\n    if (\n      typeof underline === 'string' ||\n      (underline?.value && underline.value !== 'none')\n    ) {\n      isInvalid = false;\n    }\n    if (!isInvalid) {\n      style.textDecoration = style.textDecoration\n        ? `${style.textDecoration} underline`\n        : 'underline';\n    }\n  }\n  if (color) {\n    style.color = color;\n  }\n  if (highlight) {\n    style.backgroundColor = highlight;\n  } else if (shd) {\n    style.backgroundColor =\n      style.backgroundColor || ShdUtil.transformShd(shd);\n  }\n  if (vertAlign) {\n    if (vertAlign === 'superscript') {\n      style.verticalAlign = 'super';\n    } else if (vertAlign === 'subscript') {\n      style.verticalAlign = 'sub';\n    }\n  }\n  // TODO: 这里无法区分正文or标题，无法给正文设置默认字号\n  if (sz) {\n    style.fontSize = `${SzUtil.toPt(sz + szUnit)}pt`;\n  }\n  if (spacing) {\n    style.letterSpacing = `${spacing}pt`;\n  }\n  if (fonts) {\n    const { ascii, hAnsi, cs, eastAsia } = fonts;\n    style.fontFamily = `${ascii}, ${hAnsi}, ${cs}, ${eastAsia}`;\n  }\n  if (inlineCode) {\n    style.padding = INLINE_CODE.padding;\n    style.margin = INLINE_CODE.margin;\n    style.border = INLINE_CODE.border;\n    style.borderRadius = INLINE_CODE['border-radius'];\n    style.fontFamily = INLINE_CODE['font-family'];\n    style.wordBreak = INLINE_CODE['word-break'] as any;\n    style.backgroundColor = INLINE_CODE['background-color'];\n  }\n  return style;\n}\n"],"file":"jsonMLAttrsToStyle.js"}