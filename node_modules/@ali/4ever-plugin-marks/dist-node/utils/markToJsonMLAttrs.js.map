{"version":3,"sources":["../../../src/utils/markToJsonMLAttrs.ts"],"names":["markToJsonMLAttrs","mark","Bold","isBold","bold","data","value","Italic","isItalic","italic","Strike","isStrike","strike","Dstrike","isDstrike","dstrike","Underline","isUnderline","underline","undefined","Em","isEm","em","InlineCode","isInlineCode","inlineCode","Color","isColor","color","Highlight","isHighlight","highlight","Shd","isShd","shd","Spacing","isSpacing","spacing","Kern","isKern","kern","VertAlign","isVertAlign","vertAlign","Sz","isSz","szUnit","sz","Fonts","isFonts","fonts"],"mappings":"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","sourcesContent":["import type { LeafRule } from \"@ali/4ever-cangjie\";\nimport {\n  Bold,\n  Italic,\n  Strike,\n  Dstrike,\n  Underline,\n  Em,\n  InlineCode,\n  Highlight,\n  Color,\n  Shd,\n  Spacing,\n  Kern,\n  VertAlign,\n  Sz,\n  Fonts,\n} from '../mo/models';\n\nexport const markToJsonMLAttrs: NonNullable<LeafRule['markToJsonMLAttrs']> = (mark) => {\n  if (Bold.isBold(mark)) {\n    return { bold: mark.data.value !== false };\n  }\n  if (Italic.isItalic(mark)) {\n    return { italic: true };\n  }\n  if (Strike.isStrike(mark)) {\n    return { strike: mark.data.value !== false };\n  }\n  if (Dstrike.isDstrike(mark)) {\n    return { dstrike: mark.data.value };\n  }\n  if (Underline.isUnderline(mark)) {\n    return {\n      underline: {\n        ...mark.data,\n        value: mark.data.value === undefined ? 'single' : mark.data.value,\n      },\n    };\n  }\n  if (Em.isEm(mark)) {\n    return {\n      em: mark.data.value,\n    };\n  }\n  if (InlineCode.isInlineCode(mark)) {\n    return { inlineCode: true };\n  }\n  if (Color.isColor(mark)) {\n    return { color: mark.data.value };\n  }\n  if (Highlight.isHighlight(mark)) {\n    return { highlight: mark.data.value };\n  }\n  if (Shd.isShd(mark)) {\n    return {\n      shd: mark.data,\n    };\n  }\n  if (Spacing.isSpacing(mark)) {\n    return { spacing: mark.data.value };\n  }\n  if (Kern.isKern(mark)) {\n    return { kern: mark.data.value };\n  }\n  if (VertAlign.isVertAlign(mark)) {\n    return { vertAlign: mark.data.value };\n  }\n  if (Sz.isSz(mark)) {\n    if (mark.data.szUnit) {\n      return {\n        sz: mark.data.value,\n        szUnit: mark.data.szUnit,\n      };\n    }\n    return {\n      sz: mark.data.value,\n    };\n  }\n  if (Fonts.isFonts(mark)) {\n    return { fonts: mark.data };\n  }\n  return undefined;\n};\n"],"file":"markToJsonMLAttrs.js"}