"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.markToJsonMLAttrs = void 0;

var _models = require("../mo/models");

const markToJsonMLAttrs = mark => {
  if (_models.Bold.isBold(mark)) {
    return {
      bold: mark.data.value !== false
    };
  }

  if (_models.Italic.isItalic(mark)) {
    return {
      italic: true
    };
  }

  if (_models.Strike.isStrike(mark)) {
    return {
      strike: mark.data.value !== false
    };
  }

  if (_models.Dstrike.isDstrike(mark)) {
    return {
      dstrike: mark.data.value
    };
  }

  if (_models.Underline.isUnderline(mark)) {
    return {
      underline: { ...mark.data,
        value: mark.data.value === undefined ? 'single' : mark.data.value
      }
    };
  }

  if (_models.Em.isEm(mark)) {
    return {
      em: mark.data.value
    };
  }

  if (_models.InlineCode.isInlineCode(mark)) {
    return {
      inlineCode: true
    };
  }

  if (_models.Color.isColor(mark)) {
    return {
      color: mark.data.value
    };
  }

  if (_models.Highlight.isHighlight(mark)) {
    return {
      highlight: mark.data.value
    };
  }

  if (_models.Shd.isShd(mark)) {
    return {
      shd: mark.data
    };
  }

  if (_models.Spacing.isSpacing(mark)) {
    return {
      spacing: mark.data.value
    };
  }

  if (_models.Kern.isKern(mark)) {
    return {
      kern: mark.data.value
    };
  }

  if (_models.VertAlign.isVertAlign(mark)) {
    return {
      vertAlign: mark.data.value
    };
  }

  if (_models.Sz.isSz(mark)) {
    if (mark.data.szUnit) {
      return {
        sz: mark.data.value,
        szUnit: mark.data.szUnit
      };
    }

    return {
      sz: mark.data.value
    };
  }

  if (_models.Fonts.isFonts(mark)) {
    return {
      fonts: mark.data
    };
  }

  return undefined;
};

exports.markToJsonMLAttrs = markToJsonMLAttrs;
//# sourceMappingURL=markToJsonMLAttrs.js.map