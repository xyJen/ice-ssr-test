{"version":3,"sources":["../../../src/utils/convert.ts"],"names":["attrsToMarks","attrs","bold","caps","color","fonts","highlight","shd","italic","smallCaps","strike","dstrike","sz","szUnit","underline","vertAlign","inlineCode","spacing","kern","em","rest","marks","Object","keys","forEach","key","data","markData","isObj","Array","isArray","value","push","type","markToAttr","mark","m","marksToAttrs","reduce","assign"],"mappings":";;;;;;;;;AAGA;;AACA;;AA4CO,SAASA,YAAT,CAAsBC,KAAtB,EAAqE;AAC1E,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,GANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,SARI;AASJC,IAAAA,MATI;AAUJC,IAAAA,OAVI;AAWJC,IAAAA,EAXI;AAYJC,IAAAA,MAZI;AAaJC,IAAAA,SAbI;AAcJC,IAAAA,SAdI;AAeJC,IAAAA,UAfI;AAgBJC,IAAAA,OAhBI;AAiBJC,IAAAA,IAjBI;AAkBJC,IAAAA,EAlBI;AAmBJ,OAAGC;AAnBC,MAoBFnB,KApBJ;AAsBA,QAAM;AAAEoB,IAAAA,KAAK,GAAG;AAAV,MAAiB,4CAAmBpB,KAAnB,KAA6B,EAApD;AAEA,SAAOmB,IAAI,CAAC,WAAD,CAAX;AAEAE,EAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA2BC,GAAD,IAAS;AACjC,UAAMC,IAAI,GAAGN,IAAI,CAACK,GAAD,CAAjB;AACA,QAAIE,QAAJ;AACA,UAAMC,KAAK,GAAG,OAAOF,IAAP,KAAgB,QAAhB,IAA4B,CAAC,CAACA,IAA9B,IAAsC,CAACG,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAArD;;AACA,QAAI,CAACE,KAAL,EAAY;AACV;AACAD,MAAAA,QAAQ,GAAG;AAAEI,QAAAA,KAAK,EAAEL;AAAT,OAAX;AACD,KAHD,MAGO;AACLC,MAAAA,QAAQ,GAAGD,IAAX;AACD;;AACDL,IAAAA,KAAK,CAACW,IAAN,CAAW;AAAEC,MAAAA,IAAI,EAAER,GAAR;AAAaC,MAAAA,IAAI,EAAEC;AAAnB,KAAX;AACD,GAXD;AAaA,SAAON,KAAP;AACD;;AAEM,SAASa,UAAT,CAAoBC,IAApB,EAA0C;AAC/C,QAAMC,CAAC,GAAG,0CAAkBD,IAAlB,CAAV;;AAEA,MAAIC,CAAJ,EAAO;AACL,WAAOA,CAAP;AACD;;AAED,SAAO;AAAE,KAACD,IAAI,CAACF,IAAN,GAAaE,IAAI,CAACT;AAApB,GAAP;AACD;;AAEM,SAASW,YAAT,CAAsBhB,KAAtB,EAAiD;AACtD,SAAOA,KAAK,CAACiB,MAAN,CAAa,CAACrC,KAAD,EAAoBkC,IAApB,KAAmCb,MAAM,CAACiB,MAAP,CAActC,KAAd,EAAqBiC,UAAU,CAACC,IAAD,CAA/B,CAAhD,EAAwF,EAAxF,CAAP;AACD","sourcesContent":["import type { Mark, MarkProperties, MoAttributes as Attributes, TextMark } from \"@ali/4ever-cangjie\";\nimport type { CapData } from \"../mo/models/caps\";\n\nimport { jsonMLAttrsToMarks } from './jsonMLAttrsToMarks';\nimport { markToJsonMLAttrs } from './markToJsonMLAttrs';\n\ndeclare module '@ali/4ever-cangjie' {\n  interface TextMark {\n    bold?: boolean; // 加粗\n    italic?: boolean; // 倾斜\n    underline?: {\n      value?: string;\n      color?: string;\n    }; // 下划线\n    strike?: boolean; // 删除线\n    dstrike?: boolean; // 双删除线\n    em?: string; // 着重号\n    color?: string; // 字体颜色\n    highlight?: string; // 高亮\n    shd?: {\n      val?: string;\n      color?: string;\n      fill?: string;\n    };\n    caps?: CapData;\n    smallCaps?: boolean;\n    vertAlign?: 'superscript' | 'subscript' | 'baseline';\n    sz?: number; // 字号设置\n    szUnit?: string; // 字号单位\n    fonts?: {\n      // 字体设置\n      ascii?: string;\n      hAnsi?: string;\n      cs?: string;\n      eastAsia?: string;\n      hint?: string;\n    };\n    br?: {\n      // 换行设置\n      type: 'page' | 'textWrapping' | 'column';\n    };\n    lastRenderedPageBreak?: boolean;\n    inlineCode?: boolean; // 行内代码\n    spacing?: number; // 字符间距\n    kern?: number; // 字偶间距\n  }\n}\n\nexport function attrsToMarks(attrs: TextMark): Array<MarkProperties | Mark> {\n  const {\n    bold,\n    caps,\n    color,\n    fonts,\n    highlight,\n    shd,\n    italic,\n    smallCaps,\n    strike,\n    dstrike,\n    sz,\n    szUnit,\n    underline,\n    vertAlign,\n    inlineCode,\n    spacing,\n    kern,\n    em,\n    ...rest\n  } = attrs;\n\n  const { marks = [] } = jsonMLAttrsToMarks(attrs) || {};\n\n  delete rest['data-type'];\n\n  Object.keys(rest).forEach((key) => {\n    const data = rest[key];\n    let markData: Record<string, any>;\n    const isObj = typeof data === 'object' && !!data && !Array.isArray(data);\n    if (!isObj) {\n      // not a object\n      markData = { value: data };\n    } else {\n      markData = data;\n    }\n    marks.push({ type: key, data: markData });\n  });\n\n  return marks;\n}\n\nexport function markToAttr(mark: Mark): TextMark {\n  const m = markToJsonMLAttrs(mark);\n\n  if (m) {\n    return m;\n  }\n\n  return { [mark.type]: mark.data };\n}\n\nexport function marksToAttrs(marks: Mark[]): Attributes {\n  return marks.reduce((attrs: Attributes, mark: Mark) => Object.assign(attrs, markToAttr(mark)), {} as Attributes);\n}\n"],"file":"convert.js"}