{"version":3,"sources":["../../../../src/utils/createMarkFactory/index.ts"],"names":["createMarkFactory","type","hotKey","Button","delimiter","insideWhitespace","Icon","toolbarIcon","localeKeys","moFactory","toolbar","createRenderToolbar","menubar","onKeyDown","onCangjieInput","toggleMark","isQuery","contextMenu","commands","queries","canToggleMark","biFactory","config","pluginConfig","key","renderToolbar","locale","actions","onAction","models","klass","oldActions"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AAHA;AAkBO,SAASA,iBAAT,CAA2B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA,gBAAgB,GAAG,KAAtD;AAA6DC,EAAAA,IAA7D;AAAmEC,EAAAA,WAAnE;AAAgFC,EAAAA,UAAU,GAAG,EAA7F;AAAiGC,EAAAA;AAAjG,CAA3B,EAAoK;AACzK,QAAMC,OAAO,GAAG,4BAAcT,IAAd,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCG,IAApC,EAA0CF,SAA1C,CAAhB;AACA,QAAMO,mBAAmB,GAAGJ,WAAW,IAAI,kCAA2B;AAAEN,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBK,IAAAA,WAAhB;AAA6BC,IAAAA,UAA7B;AAAyCJ,IAAAA;AAAzC,GAA3B,CAA3C;AACA,QAAMQ,OAAO,GAAG,4BAAcX,IAAd,CAAhB;AACA,QAAMY,SAAS,GAAG,8BAAgBZ,IAAhB,EAAsBC,MAAtB,EAA8BE,SAA9B,EAAyCC,gBAAzC,CAAlB;AACA,QAAMS,cAAc,GAAG,6BAAqBb,IAArB,EAA2BG,SAA3B,EAAsCC,gBAAtC,CAAvB;AACA,QAAMU,UAAU,GAAG,+BAAiBd,IAAjB,CAAnB;AACA,QAAMe,OAAO,GAAG,4BAAcf,IAAd,CAAhB;AACA,QAAMgB,WAAW,GAAG,gCAAkBhB,IAAlB,EAAwBC,MAAxB,CAApB;AAEA,QAAMgB,QAAiC,GAAG;AACxC,KAAE,SAAQ,wBAAWjB,IAAX,CAAiB,EAA3B,GAA+Bc;AADS,GAA1C;AAGA,QAAMI,OAA8B,GAAG;AACrC,KAAE,KAAI,wBAAWlB,IAAX,CAAiB,EAAvB,GAA2Be,OADU;AAErC,KAAE,YAAW,wBAAWf,IAAX,CAAiB,EAA9B,GAAkCmB;AAFG,GAAvC;;AAKA,QAAOC,SAAS,GAAKC,MAAD,IAAsC;AACxD,UAAMC,YAAY,GAAGD,MAAM,CAACrB,IAAD,CAAN,IAAgB,EAArC;AACA,WAAO,EACL,GAAGQ,SAAS,GAAG,EAAH,CADP;AAELe,MAAAA,GAAG,EAAEvB,IAFA;AAGLgB,MAAAA,WAAW,EAAEA,WAAW,CAACM,YAAD,CAHnB;AAILb,MAAAA,OAAO,EAAEA,OAAO,CAACa,YAAD,CAJX;AAKLE,MAAAA,aAAa,EAAEd,mBAAmB,GAAGY,YAAY,CAACG,MAAhB,CAL7B;AAMLd,MAAAA,OAAO,EAAEA,OAAO,EANX;AAOLe,MAAAA,OAAO,EAAPA,kBAPK;AAQLT,MAAAA,QARK;AASLC,MAAAA,OATK;AAULS,MAAAA,QAAQ,EAAE,6BAAe3B,IAAf,CAVL;AAWLY,MAAAA,SAXK;AAYLC,MAAAA,cAZK;AAaLe,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,MADD;AAEN7B,QAAAA;AAFM;AAbH,KAAP;AAkBD,GApBD,CAlByK,CAwCzK;;;AACAoB,EAAAA,SAAS,CAACH,QAAV,GAAqBA,QAArB;AACAG,EAAAA,SAAS,CAACF,OAAV,GAAoBA,OAApB;AACAE,EAAAA,SAAS,CAACM,OAAV,GAAoBI,UAApB;AAEA,SAAOV,SAAP;AACD","sourcesContent":["import { Command, Query, MoFactory, BiPlugin, BiPluginConfig } from '@ali/4ever-cangjie';\nimport { capitalize } from 'lodash-es';\nimport createToolbar from './createToolbar';\nimport createMenubar from './createMenubar';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport createOnCangjieInput from './handlers/onCangjieInput';\nimport createToggleMark from './commands/createToggleMark';\nimport createIsQuery from './queries/createIsQuery';\nimport canToggleMark from './queries/canToggleMark';\nimport createContextMenu from './createContextMenu';\nimport createOnAction from './createOnAction';\n/** depreacted 只为兼容，请勿使用 */\nimport * as oldActions from './actions';\nimport { actions } from './actions';\nimport createRenderToolbarFactory from './createRenderToolbar';\nimport type { Delimiter } from '@ali/4ever-utils';\n\nexport interface ICreateMarkFactoryPayload {\n  moFactory?: MoFactory;\n  type: string,\n  hotKey: string,\n  Button: React.ComponentType,\n  delimiter: Delimiter | Delimiter[],\n  insideWhitespace?: boolean,\n  Icon: React.ComponentType,\n  toolbarIcon?: React.ReactElement,\n  localeKeys?: Record<string, string>,\n}\n\nexport function createMarkFactory({ type, hotKey, Button, delimiter, insideWhitespace = false, Icon, toolbarIcon, localeKeys = {}, moFactory }: ICreateMarkFactoryPayload) {\n  const toolbar = createToolbar(type, hotKey, Button, Icon, delimiter);\n  const createRenderToolbar = toolbarIcon && createRenderToolbarFactory({ type, hotKey, toolbarIcon, localeKeys, delimiter });\n  const menubar = createMenubar(type);\n  const onKeyDown = createOnKeyDown(type, hotKey, delimiter, insideWhitespace);\n  const onCangjieInput = createOnCangjieInput(type, delimiter, insideWhitespace);\n  const toggleMark = createToggleMark(type);\n  const isQuery = createIsQuery(type);\n  const contextMenu = createContextMenu(type, hotKey);\n\n  const commands: Record<string, Command> = {\n    [`toggle${capitalize(type)}`]: toggleMark,\n  };\n  const queries: Record<string, Query> = {\n    [`is${capitalize(type)}`]: isQuery,\n    [`canToggle${capitalize(type)}`]: canToggleMark,\n  };\n\n  const  biFactory  = (config: BiPluginConfig): BiPlugin => {\n    const pluginConfig = config[type] || {};\n    return {\n      ...moFactory?.({}),\n      key: type,\n      contextMenu: contextMenu(pluginConfig),\n      toolbar: toolbar(pluginConfig),\n      renderToolbar: createRenderToolbar?.(pluginConfig.locale),\n      menubar: menubar(),\n      actions,\n      commands,\n      queries,\n      onAction: createOnAction(type),\n      onKeyDown,\n      onCangjieInput,\n      models: {\n        klass: 'mark',\n        type,\n      },\n    };\n  }\n\n  // TODO 插件迁移: 待优化\n  biFactory.commands = commands;\n  biFactory.queries = queries;\n  biFactory.actions = oldActions;\n\n  return biFactory;\n}\n"],"file":"index.js"}