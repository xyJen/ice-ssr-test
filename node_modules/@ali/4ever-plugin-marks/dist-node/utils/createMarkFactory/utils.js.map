{"version":3,"sources":["../../../../src/utils/createMarkFactory/utils.ts"],"names":["getMarkdownFromDelimiter","delimiter","locale","undefined","delimiters","Array","isArray","character","size","repeat","text","space"],"mappings":";;;;;;;AAEO,SAASA,wBAAT,CAAkCC,SAAlC,EAAsEC,MAAtE,EAAuG;AAC5G,MAAI,CAACD,SAAL,EAAgB,OAAOE,SAAP;AAChB,QAAMC,UAAU,GAAG,CAACC,KAAK,CAACC,OAAN,CAAcL,SAAd,CAAD,GAA4B,CAACA,SAAD,CAA5B,GAA0CA,SAA7D;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBJ,UAAU,CAAC,CAAD,CAAtC;AACA,SAAOG,SAAS,CAACE,MAAV,CAAiBD,IAAjB,KAA0BN,MAAM,EAAEQ,IAAR,IAAgB,MAA1C,IAAoDH,SAAS,CAACE,MAAV,CAAiBD,IAAjB,CAApD,GAA6E,GAA7E,IAAoFN,MAAM,EAAES,KAAR,IAAiB,OAArG,CAAP;AACD","sourcesContent":["import type { Delimiter } from '@ali/4ever-utils';\n\nexport function getMarkdownFromDelimiter(delimiter: Delimiter | Delimiter[], locale?: Record<string, string>) {\n  if (!delimiter) return undefined;\n  const delimiters = !Array.isArray(delimiter) ? [delimiter] : delimiter;\n  const { character, size } = delimiters[0];\n  return character.repeat(size) + (locale?.text || 'Text') + character.repeat(size) + ' ' + (locale?.space || 'Space');\n}"],"file":"utils.js"}