{"version":3,"sources":["../../../../src/utils/createMarkFactory/mobile.ts"],"names":["createMarkFactoryMobile","moFactory","type","hotKey","delimiter","insideWhitespace","icon","toolbar","onKeyDown","onCangjieInput","toggleMark","isQuery","commands","queries","canToggleMark","mobileBiFactory","config","pluginConfig","actions","onAction","models","klass"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAYO,SAASA,uBAAT,CAAiC;AACtCC,EAAAA,SADsC;AAEtCC,EAAAA,IAFsC;AAGtCC,EAAAA,MAHsC;AAItCC,EAAAA,SAJsC;AAKtCC,EAAAA,gBAAgB,GAAG,KALmB;AAMtCC,EAAAA;AANsC,CAAjC,EAOJ;AACD,QAAMC,OAAO,GAAG,kCAAcL,IAAd,EAAoBI,IAApB,CAAhB;AACA,QAAME,SAAS,GAAG,8BAAgBN,IAAhB,EAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,gBAAzC,CAAlB;AACA,QAAMI,cAAc,GAAG,6BAAqBP,IAArB,EAA2BE,SAA3B,EAAsCC,gBAAtC,CAAvB;AACA,QAAMK,UAAU,GAAG,+BAAiBR,IAAjB,CAAnB;AACA,QAAMS,OAAO,GAAG,4BAAcT,IAAd,CAAhB;AAEA,QAAMU,QAAiC,GAAG;AACxC,KAAE,SAAQ,wBAAWV,IAAX,CAAiB,EAA3B,GAA+BQ;AADS,GAA1C;AAGA,QAAMG,OAA8B,GAAG;AACrC,KAAE,KAAI,wBAAWX,IAAX,CAAiB,EAAvB,GAA2BS,OADU;AAErC,KAAE,YAAW,wBAAWT,IAAX,CAAiB,EAA9B,GAAkCY;AAFG,GAAvC;;AAKA,QAAMC,eAAgC,GAAIC,MAAD,IAAY;AACnD,UAAMC,YAAY,GAAGD,MAAM,CAACd,IAAD,CAAN,IAAgB,EAArC;AACA,WAAO,EACL,GAAGD,SAAS,CAAC,EAAD,CADP;AAELM,MAAAA,OAAO,EAAEA,OAAO,CAACU,YAAD,CAFX;AAGLL,MAAAA,QAHK;AAILC,MAAAA,OAJK;AAKLK,MAAAA,OAAO,EAAPA,gBALK;AAMLC,MAAAA,QAAQ,EAAE,6BAAejB,IAAf,CANL;AAOLO,MAAAA,cAPK;AAQLD,MAAAA,SARK;AASLY,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,MADD;AAENnB,QAAAA;AAFM;AATH,KAAP;AAcD,GAhBD;;AAkBA,SAAOa,eAAP;AACD","sourcesContent":["import { capitalize } from 'lodash-es';\nimport { Command, MobileBiFactory, MoFactory, Query } from '@ali/4ever-cangjie';\nimport createToolbar from './createMobileToolbar';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport createOnCangjieInput from './handlers/onCangjieInput';\nimport createToggleMark from './commands/createToggleMark';\nimport createIsQuery from './queries/createIsQuery';\nimport canToggleMark from './queries/canToggleMark';\nimport createOnAction from './createOnAction';\nimport { actions } from './actions';\nimport type { Delimiter } from '@ali/4ever-utils';\n\nexport interface ICreateMobileMarkFactoryPayload {\n  moFactory: MoFactory;\n  type: string,\n  hotKey: string,\n  delimiter: Delimiter | Delimiter[],\n  insideWhitespace?: boolean,\n  Icon: React.ComponentType,\n}\n\nexport function createMarkFactoryMobile({\n  moFactory,\n  type,\n  hotKey,\n  delimiter,\n  insideWhitespace = false,\n  icon,\n}) {\n  const toolbar = createToolbar(type, icon);\n  const onKeyDown = createOnKeyDown(type, hotKey, delimiter, insideWhitespace);\n  const onCangjieInput = createOnCangjieInput(type, delimiter, insideWhitespace);\n  const toggleMark = createToggleMark(type);\n  const isQuery = createIsQuery(type);\n\n  const commands: Record<string, Command> = {\n    [`toggle${capitalize(type)}`]: toggleMark,\n  };\n  const queries: Record<string, Query> = {\n    [`is${capitalize(type)}`]: isQuery,\n    [`canToggle${capitalize(type)}`]: canToggleMark,\n  };\n\n  const mobileBiFactory: MobileBiFactory = (config) => {\n    const pluginConfig = config[type] || {};\n    return {\n      ...moFactory({}),\n      toolbar: toolbar(pluginConfig),\n      commands,\n      queries,\n      actions,\n      onAction: createOnAction(type),\n      onCangjieInput,\n      onKeyDown,\n      models: {\n        klass: 'mark',\n        type,\n      },\n    };\n  }\n\n  return mobileBiFactory;\n}\n"],"file":"mobile.js"}