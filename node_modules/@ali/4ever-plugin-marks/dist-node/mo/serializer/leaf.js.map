{"version":3,"sources":["../../../../src/mo/serializer/leaf.ts"],"names":["createLeaf","configs","marks","marksConfig","allowedMarks","allowedMarksMap","reduce","acc","k","leafRules","jsonMLAttrsToStyle","attrs","style","htmlToJsonMLAttrs","name","curMarks","Object","keys","key","jsonMLAttrsToMarks","markToJsonMLAttrs","mark"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAMA,UAAU,GAAIC,OAAD,IAAuC;AAC/D;AACF;AACA;AACE,QAAM;AAAEC,IAAAA,KAAK,EAAEC,WAAW,GAAG;AAAvB,MAA8BF,OAAO,IAAI,EAA/C;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAmBD,WAAzB;AACA,QAAME,eAAe,GAAGD,YAAY,EAAEE,MAAd,CAAqB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACvDD,IAAAA,GAAG,CAACC,CAAD,CAAH,GAAS,IAAT;AACA,WAAOD,GAAP;AACD,GAHuB,EAGrB,EAHqB,CAAxB;AAIA,QAAME,SAAmB,GAAG;AAC1BC,IAAAA,kBAAkB,EAAE,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,aAAO,4CAAmBD,KAAnB,EAA0BC,KAA1B,CAAP;AACD,KAHyB;AAI1BC,IAAAA,iBAAiB,EAAE,CAACC,IAAD,EAAOH,KAAP,EAAcI,QAAd,KAA2B;AAC5C,UAAIb,KAAK,GAAG,0CAAkBY,IAAlB,EAAwBH,KAAxB,EAA+BI,QAA/B,CAAZ;;AACA,UAAIV,eAAJ,EAAqB;AACnBH,QAAAA,KAAK,GAAGc,MAAM,CAACC,IAAP,CAAYf,KAAZ,EAAmBI,MAAnB,CAA0B,CAACC,GAAD,EAAMW,GAAN,KAAc;AAC9C,cAAIb,eAAe,CAACa,GAAD,CAAnB,EAA0B;AACxBX,YAAAA,GAAG,CAACW,GAAD,CAAH,GAAWhB,KAAK,CAACgB,GAAD,CAAhB;AACD;;AACD,iBAAOX,GAAP;AACD,SALO,EAKL,EALK,CAAR;AAMD;;AACD,aAAOL,KAAP;AACD,KAfyB;AAgB1BiB,IAAAA,kBAAkB,EAAGR,KAAD,IAAW;AAC7B,aAAO,4CAAmBA,KAAnB,CAAP;AACD,KAlByB;AAmB1BS,IAAAA,iBAAiB,EAAGC,IAAD,IAAU;AAC3B,aAAO,0CAAkBA,IAAlB,CAAP;AACD;AArByB,GAA5B;AAuBA,SAAOZ,SAAP;AACD,CAlCM","sourcesContent":["import type { LeafRule, MoPluginConfig, TextMark } from '@ali/4ever-cangjie';\nimport { jsonMLAttrsToStyle } from '../../utils/jsonMLAttrsToStyle';\nimport { jsonMLAttrsToMarks } from '../../utils/jsonMLAttrsToMarks';\nimport { markToJsonMLAttrs } from '../../utils/markToJsonMLAttrs';\nimport { htmlToJsonMLAttrs } from '../../utils/htmlToJsonMLAttrs';\n\nexport const createLeaf = (configs: MoPluginConfig): LeafRule => {\n  /**\n   *\n   */\n  const { marks: marksConfig = {} } = configs || {};\n  const { allowedMarks } = marksConfig;\n  const allowedMarksMap = allowedMarks?.reduce((acc, k) => {\n    acc[k] = true;\n    return acc;\n  }, {} as Record<keyof TextMark, true>);\n  const leafRules: LeafRule = {\n    jsonMLAttrsToStyle: (attrs, style) => {\n      return jsonMLAttrsToStyle(attrs, style);\n    },\n    htmlToJsonMLAttrs: (name, attrs, curMarks) => {\n      let marks = htmlToJsonMLAttrs(name, attrs, curMarks);\n      if (allowedMarksMap) {\n        marks = Object.keys(marks).reduce((acc, key) => {\n          if (allowedMarksMap[key]) {\n            acc[key] = marks[key];\n          }\n          return acc;\n        }, {});\n      }\n      return marks;\n    },\n    jsonMLAttrsToMarks: (attrs) => {\n      return jsonMLAttrsToMarks(attrs);\n    },\n    markToJsonMLAttrs: (mark) => {\n      return markToJsonMLAttrs(mark);\n    },\n  };\n  return leafRules;\n};\n"],"file":"leaf.js"}