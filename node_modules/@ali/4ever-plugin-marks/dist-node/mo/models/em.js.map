{"version":3,"sources":["../../../../src/mo/models/em.ts"],"names":["Em","TYPE","create","value","Mark","type","data","isEm","maybeEm","isMark"],"mappings":";;;;;;;AAAA;;AAMoC;AAEpC,MAAMA,EAAE,GAAG;AACTC,EAAAA,IAAI,EAAE,IADG;;AAGTC,EAAAA,MAAM,CAACC,KAAD,EAAgB;AACpB,WAAOC,kBAAKF,MAAL,CAAoB;AACzBG,MAAAA,IAAI,EAAEL,EAAE,CAACC,IADgB;AAEzBK,MAAAA,IAAI,EAAE;AACJH,QAAAA;AADI;AAFmB,KAApB,CAAP;AAMD,GAVQ;;AAYTI,EAAAA,IAAI,CAACC,OAAD,EAA8B;AAChC,WAAOJ,kBAAKK,MAAL,CAAYD,OAAZ,KAAwBA,OAAO,CAACH,IAAR,KAAiBL,EAAE,CAACC,IAAnD;AACD;;AAdQ,CAAX;eAiBeD,E","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface EmData extends Data {\n  value: string;\n}\n\ninterface Em extends Mark<EmData> {};\n\nconst Em = {\n  TYPE: 'em',\n\n  create(value: string) {\n    return Mark.create<EmData>({\n      type: Em.TYPE,\n      data: {\n        value,\n      }\n    });\n  },\n\n  isEm(maybeEm: any): maybeEm is Em {\n    return Mark.isMark(maybeEm) && maybeEm.type === Em.TYPE;\n  },\n};\n\nexport default Em;\n"],"file":"em.js"}