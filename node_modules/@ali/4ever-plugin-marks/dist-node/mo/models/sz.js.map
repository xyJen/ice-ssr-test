{"version":3,"sources":["../../../../src/mo/models/sz.ts"],"names":["Sz","TYPE","create","data","Mark","type","isSz","maybeSz","isMark"],"mappings":";;;;;;;AAAA;;AASA,MAAMA,EAAE,GAAG;AACTC,EAAAA,IAAI,EAAE,IADG;;AAGTC,EAAAA,MAAM,CAACC,IAAD,EAAmB;AACvB,WAAOC,kBAAKF,MAAL,CAAoB;AACzBG,MAAAA,IAAI,EAAEL,EAAE,CAACC,IADgB;AAEzBE,MAAAA;AAFyB,KAApB,CAAP;AAID,GARQ;;AAUTG,EAAAA,IAAI,CAACC,OAAD,EAA8B;AAChC,WAAOH,kBAAKI,MAAL,CAAYD,OAAZ,KAAwBA,OAAO,CAACF,IAAR,KAAiBL,EAAE,CAACC,IAAnD;AACD;;AAZQ,CAAX;eAeeD,E","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface SzData extends Data {\n  value: number;\n  szUnit?: string;\n}\n\ninterface Sz extends Mark<SzData> {}\n\nconst Sz = {\n  TYPE: 'sz',\n\n  create(data: SzData): Sz {\n    return Mark.create<SzData>({\n      type: Sz.TYPE,\n      data,\n    });\n  },\n\n  isSz(maybeSz: any): maybeSz is Sz {\n    return Mark.isMark(maybeSz) && maybeSz.type === Sz.TYPE;\n  },\n};\n\nexport default Sz;\n"],"file":"sz.js"}