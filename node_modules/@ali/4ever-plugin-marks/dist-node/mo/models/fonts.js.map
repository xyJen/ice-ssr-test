{"version":3,"sources":["../../../../src/mo/models/fonts.ts"],"names":["Fonts","TYPE","create","data","Mark","type","isFonts","maybeFonts","isMark"],"mappings":";;;;;;;AAAA;;AAWA,MAAMA,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,OADM;;AAGZC,EAAAA,MAAM,CAACC,IAAD,EAAyB;AAC7B,WAAOC,kBAAKF,MAAL,CAAuB;AAC5BG,MAAAA,IAAI,EAAEL,KAAK,CAACC,IADgB;AAE5BE,MAAAA;AAF4B,KAAvB,CAAP;AAID,GARW;;AAUZG,EAAAA,OAAO,CAACC,UAAD,EAAuC;AAC5C,WAAOH,kBAAKI,MAAL,CAAYD,UAAZ,KAA2BA,UAAU,CAACF,IAAX,KAAoBL,KAAK,CAACC,IAA5D;AACD;;AAZW,CAAd;eAeeD,K","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface FontsData extends Data {\n  ascii: string;\n  hAnsi: string;\n  cs: string;\n  eastAsia: string;\n}\n\ninterface Fonts extends Mark<FontsData> {}\n\nconst Fonts = {\n  TYPE: 'fonts',\n\n  create(data: FontsData): Fonts {\n    return Mark.create<FontsData>({\n      type: Fonts.TYPE,\n      data,\n    });\n  },\n\n  isFonts(maybeFonts: any): maybeFonts is Fonts {\n    return Mark.isMark(maybeFonts) && maybeFonts.type === Fonts.TYPE;\n  },\n};\n\nexport default Fonts;\n"],"file":"fonts.js"}