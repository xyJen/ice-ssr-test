{"version":3,"sources":["../../../../src/mo/models/spacing.ts"],"names":["Spacing","TYPE","create","value","Mark","type","data","isSpacing","maybeSpacing","isMark"],"mappings":";;;;;;;AAAA;;AAQA,MAAMA,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,SADQ;;AAGdC,EAAAA,MAAM,CAACC,KAAD,EAAyB;AAC7B,WAAOC,kBAAKF,MAAL,CAAyB;AAC9BG,MAAAA,IAAI,EAAEL,OAAO,CAACC,IADgB;AAE9BK,MAAAA,IAAI,EAAE;AACJH,QAAAA;AADI;AAFwB,KAAzB,CAAP;AAMD,GAVa;;AAYdI,EAAAA,SAAS,CAACC,YAAD,EAA6C;AACpD,WAAOJ,kBAAKK,MAAL,CAAYD,YAAZ,KAA6BA,YAAY,CAACH,IAAb,KAAsBL,OAAO,CAACC,IAAlE;AACD;;AAda,CAAhB;eAiBeD,O","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface SpacingData extends Data {\n  value: number;\n}\n\ninterface Spacing extends Mark<SpacingData> {}\n\nconst Spacing = {\n  TYPE: 'spacing',\n\n  create(value: number): Spacing {\n    return Mark.create<SpacingData>({\n      type: Spacing.TYPE,\n      data: {\n        value,\n      },\n    });\n  },\n\n  isSpacing(maybeSpacing: any): maybeSpacing is Spacing {\n    return Mark.isMark(maybeSpacing) && maybeSpacing.type === Spacing.TYPE;\n  },\n};\n\nexport default Spacing;\n"],"file":"spacing.js"}