{"version":3,"sources":["../../../../src/mo/models/underline.ts"],"names":["Underline","TYPE","create","underline","color","data","value","Mark","type","isUnderline","maybeUnderline","isMark"],"mappings":";;;;;;;AAAA;;AAOA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,WADU;;AAGhBC,EAAAA,MAAM,CAACC,SAAiB,GAAG,QAArB,EAA+BC,KAA/B,EAA0D;AAC9D,UAAMC,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEH;AADI,KAAb;;AAGA,QAAIC,KAAJ,EAAW;AACT;AACAC,MAAAA,IAAI,CAACD,KAAL,GAAaA,KAAb;AACD;;AACD,WAAOG,kBAAKL,MAAL,CAA2B;AAChCM,MAAAA,IAAI,EAAER,SAAS,CAACC,IADgB;AAEhCI,MAAAA;AAFgC,KAA3B,CAAP;AAID,GAfe;;AAiBhBI,EAAAA,WAAW,CAACC,cAAD,EAAmD;AAC5D,WAAOH,kBAAKI,MAAL,CAAYD,cAAZ,KAA+BA,cAAc,CAACF,IAAf,KAAwBR,SAAS,CAACC,IAAxE;AACD;;AAnBe,CAAlB;eAsBeD,S","sourcesContent":["import { Mark } from '@ali/4ever-cangjie';\nimport type { UnderlineData } from '@ali/4ever-utils';\n\nexport type { UnderlineData };\n\ninterface Underline extends Mark<UnderlineData> {}\n\nconst Underline = {\n  TYPE: 'underline',\n\n  create(underline: string = 'single', color?: string): Underline {\n    const data = { \n      value: underline,\n    };\n    if (color) {\n      // @ts-ignore\n      data.color = color;\n    }\n    return Mark.create<UnderlineData>({\n      type: Underline.TYPE,\n      data,\n    });\n  },\n\n  isUnderline(maybeUnderline: any): maybeUnderline is Underline {\n    return Mark.isMark(maybeUnderline) && maybeUnderline.type === Underline.TYPE;\n  },\n};\n\nexport default Underline;\n"],"file":"underline.js"}