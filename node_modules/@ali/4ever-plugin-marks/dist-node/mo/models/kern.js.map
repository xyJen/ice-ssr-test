{"version":3,"sources":["../../../../src/mo/models/kern.ts"],"names":["Kern","TYPE","create","value","Mark","type","data","isKern","maybeKern","isMark"],"mappings":";;;;;;;AAAA;;AAQA,MAAMA,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE,MADK;;AAGXC,EAAAA,MAAM,CAACC,KAAD,EAAsB;AAC1B,WAAOC,kBAAKF,MAAL,CAAsB;AAC3BG,MAAAA,IAAI,EAAEL,IAAI,CAACC,IADgB;AAE3BK,MAAAA,IAAI,EAAE;AACJH,QAAAA;AADI;AAFqB,KAAtB,CAAP;AAMD,GAVU;;AAYXI,EAAAA,MAAM,CAACC,SAAD,EAAoC;AACxC,WAAOJ,kBAAKK,MAAL,CAAYD,SAAZ,KAA0BA,SAAS,CAACH,IAAV,KAAmBL,IAAI,CAACC,IAAzD;AACD;;AAdU,CAAb;eAiBeD,I","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface KernData extends Data {\n  value: number;\n}\n\ninterface Kern extends Mark<KernData> {}\n\nconst Kern = {\n  TYPE: 'kern',\n\n  create(value: number): Kern {\n    return Mark.create<KernData>({\n      type: Kern.TYPE,\n      data: {\n        value,\n      },\n    });\n  },\n\n  isKern(maybeKern: any): maybeKern is Kern {\n    return Mark.isMark(maybeKern) && maybeKern.type === Kern.TYPE;\n  },\n};\n\nexport default Kern;\n"],"file":"kern.js"}