{"version":3,"sources":["../../../../src/mo/models/highlight.ts"],"names":["Highlight","TYPE","create","highlight","Mark","type","data","value","isHighlight","maybeHighlight","isMark"],"mappings":";;;;;;;AAAA;;AAQA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,WADU;;AAGhBC,EAAAA,MAAM,CAACC,SAAD,EAA+B;AACnC,WAAOC,kBAAKF,MAAL,CAA2B;AAChCG,MAAAA,IAAI,EAAEL,SAAS,CAACC,IADgB;AAEhCK,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAEJ;AAAT;AAF0B,KAA3B,CAAP;AAID,GARe;;AAUhBK,EAAAA,WAAW,CAACC,cAAD,EAAmD;AAC5D,WAAOL,kBAAKM,MAAL,CAAYD,cAAZ,KAA+BA,cAAc,CAACJ,IAAf,KAAwBL,SAAS,CAACC,IAAxE;AACD;;AAZe,CAAlB;eAeeD,S","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface HighlightData extends Data {\n  value: string;\n}\n\ninterface Highlight extends Mark<HighlightData> {}\n\nconst Highlight = {\n  TYPE: 'highlight',\n\n  create(highlight: string): Highlight {\n    return Mark.create<HighlightData>({\n      type: Highlight.TYPE,\n      data: { value: highlight },\n    });\n  },\n\n  isHighlight(maybeHighlight: any): maybeHighlight is Highlight {\n    return Mark.isMark(maybeHighlight) && maybeHighlight.type === Highlight.TYPE;\n  },\n};\n\nexport default Highlight;\n"],"file":"highlight.js"}