{"version":3,"sources":["../../../../src/mo/models/color.ts"],"names":["Color","TYPE","create","color","Mark","type","data","value","isColor","maybeColor","isMark"],"mappings":";;;;;;;AAAA;;AAQA,MAAMA,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,OADM;;AAGZC,EAAAA,MAAM,CAACC,KAAD,EAAuB;AAC3B,WAAOC,kBAAKF,MAAL,CAAuB;AAC5BG,MAAAA,IAAI,EAAEL,KAAK,CAACC,IADgB;AAE5BK,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAEJ;AAAT;AAFsB,KAAvB,CAAP;AAID,GARW;;AAUZK,EAAAA,OAAO,CAACC,UAAD,EAAuC;AAC5C,WAAOL,kBAAKM,MAAL,CAAYD,UAAZ,KAA2BA,UAAU,CAACJ,IAAX,KAAoBL,KAAK,CAACC,IAA5D;AACD;;AAZW,CAAd;eAeeD,K","sourcesContent":["import { Mark, Data } from '@ali/4ever-cangjie';\n\nexport interface ColorData extends Data {\n  value: string;\n}\n\ninterface Color extends Mark<ColorData> {}\n\nconst Color = {\n  TYPE: 'color',\n\n  create(color: string): Color {\n    return Mark.create<ColorData>({\n      type: Color.TYPE,\n      data: { value: color },\n    });\n  },\n\n  isColor(maybeColor: any): maybeColor is Color {\n    return Mark.isMark(maybeColor) && maybeColor.type === Color.TYPE;\n  },\n};\n\nexport default Color;\n"],"file":"color.js"}