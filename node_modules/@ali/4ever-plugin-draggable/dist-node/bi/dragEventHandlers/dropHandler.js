"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everUtils = require("@ali/4ever-utils");

var _actions = require("../actions");

var _draggableData = require("../model/draggableData");

var _isNotEditable = _interopRequireDefault(require("../utils/isNotEditable"));

const dropHandler = (event, controller, dropHolder) => {
  // 不响应链路上含有 data-cangjie-not-editable 的 drop 事件
  if ((0, _isNotEditable.default)(event)) return;
  event.preventDefault();
  const draggableData = (0, _draggableData.getDraggableData)(controller);

  if (draggableData?.dragFragment) {
    const fragmentData = { ...draggableData,
      isCopy: event.dataTransfer?.effectAllowed === 'copy'
    };

    if (dropHolder?.key) {
      // 兼容排版
      fragmentData.dropHolder = { ...dropHolder,
        key: controller.query('getDataKey', dropHolder.key) || dropHolder.key
      };
    }

    return controller.run('onAction', (0, _actions.dropFragment)(fragmentData));
  }

  const dragFragment = event.dataTransfer?.getData(_everUtils.APPLICATION_CANGJIE_DRAG_FRAGMENT);

  if (dragFragment) {
    let dragFragmentData = null;

    try {
      dragFragmentData = JSON.parse(dragFragment);
    } catch (e) {// do nothing
    }

    if (dragFragmentData) {
      return controller.run('onAction', (0, _actions.dropEventFragment)({
        dragFragment: { ...dragFragmentData
        }
      }));
    }
  }

  const html = event.dataTransfer?.getData(_everUtils.TEXT_HTML) || event.dataTransfer?.getData(_everUtils.TEXT_PLAIN);

  if (html) {
    return controller.run('onAction', (0, _actions.dropHtml)(html));
  }
};

var _default = dropHandler;
exports.default = _default;
//# sourceMappingURL=dropHandler.js.map