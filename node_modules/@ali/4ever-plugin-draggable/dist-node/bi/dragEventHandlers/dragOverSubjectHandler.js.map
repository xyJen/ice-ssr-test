{"version":3,"sources":["../../../../src/bi/dragEventHandlers/dragOverSubjectHandler.ts"],"names":["SUBJECT_MARGIN","dropToSubject","event","controller","subject","subjectPr","data","subjectDOM","document","getElementById","id","domUtils","findDOMNode","key","clientRect","getBoundingClientRect","rect","top","left","width","height","dropPosition","clientY","DROP_POSITION","before","after","dropBlock","query","type","dropToCallout","block","calloutStartBlock","calloutDOM","value","prevBlock","getPreviousBlock","calloutEndBlock","nextBlock","getNextBlock","dragOverSubjectHandler","zoom","subjectStartBlock","Heading","isCallout"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-find-dom-node */\nimport { Block, Controller, domUtils } from '@ali/4ever-cangjie';\nimport { ParagraphData } from '@ali/4ever-plugin-paragraph';\nimport { Heading, Heading1Data } from '@ali/4ever-plugin-heading';\nimport { DropHolderProps, DROP_POSITION, RECT } from '../types';\nimport { getBlockFromDragEvent } from '../utils/getRangeFromDragEvent';\nimport dragOverBlockHandler from './dragOverBlockHandler';\n\ntype Subject = Block<Heading1Data>;\n\ntype Callout = Block<ParagraphData>;\n\n/**\n * 议题边距 40px\n */\nconst SUBJECT_MARGIN = 40;\n\n/**\n * 议题拖拽至议题区域内\n * @param event\n * @param controller\n * @param subject\n * @returns\n */\nfunction dropToSubject(event: DragEvent, controller: Controller, subject: Subject): DropHolderProps | null {\n  const { subjectPr = {} } = subject.data;\n  // 先通过 id 找，找不到再通过 key 找\n  const subjectDOM = document.getElementById(subjectPr.id || '') || domUtils.findDOMNode(`${subject.key}-group`);\n\n  if (subjectDOM) {\n    // 议题的 Rect 取整个区块的大小再加上边距距离\n    const clientRect = subjectDOM.getBoundingClientRect();\n    const rect = {\n      top: clientRect.top - (SUBJECT_MARGIN / 2),\n      left: clientRect.left,\n      width: clientRect.width,\n      height: clientRect.height + SUBJECT_MARGIN,\n    };\n\n    const dropPosition = event.clientY < rect.top + (rect.height / 2) ? DROP_POSITION.before : DROP_POSITION.after;\n    const dropBlock = dropPosition === DROP_POSITION.before\n      ? subject\n      : controller.query('getSubjectEndBlock', subject) as Block;\n\n    // dropBlock 不存在\n    if (!dropBlock) {\n      return null;\n    }\n\n    return {\n      type: dropBlock.type,\n      key: dropBlock.key,\n      dropPosition,\n      rect,\n    };\n  }\n\n  return null;\n}\n\n/**\n * 议题拖拽至高亮块区域内\n * @param event\n * @param controller\n * @param block\n * @returns\n */\nfunction dropToCallout(event: DragEvent, controller: Controller, block: Callout): DropHolderProps | null {\n  const calloutStartBlock = controller.query('getCalloutStartBlock', block) as Callout;\n\n  if (!calloutStartBlock) {\n    return null;\n  }\n\n  const calloutDOM = domUtils.findDOMNode(`${calloutStartBlock.key}-group`);\n\n  if (calloutDOM) {\n    const clientRect = calloutDOM.getBoundingClientRect();\n    const { document } = controller.value;\n\n    let dropPosition: DROP_POSITION;\n    let dropBlock: Block;\n    let rect: RECT | undefined;\n\n    // drop 落在高亮块上方\n    if (event.clientY < clientRect.top + (clientRect.height / 2)) {\n      const prevBlock = document.getPreviousBlock(calloutStartBlock.key);\n      if (prevBlock) {\n        dropPosition = DROP_POSITION.after;\n        dropBlock = prevBlock;\n        rect = domUtils.findDOMNode(prevBlock.key).getBoundingClientRect();\n      } else {\n        dropPosition = DROP_POSITION.before;\n        dropBlock = calloutStartBlock;\n        rect = calloutDOM.getBoundingClientRect();\n      }\n    } else {\n      // drop 落在高亮块下方\n      const calloutEndBlock = controller.query('getCalloutEndBlock', block) as Callout;\n      const nextBlock = calloutEndBlock && document.getNextBlock(calloutEndBlock.key);\n\n      if (nextBlock) {\n        dropPosition = DROP_POSITION.before;\n        dropBlock = nextBlock;\n        rect = domUtils.findDOMNode(nextBlock.key).getBoundingClientRect();\n      } else if (calloutEndBlock) {\n        dropPosition = DROP_POSITION.after;\n        dropBlock = calloutEndBlock;\n        rect = calloutDOM.getBoundingClientRect();\n      } else {\n        return null;\n      }\n    }\n\n    return {\n      type: dropBlock.type,\n      key: dropBlock.key,\n      dropPosition,\n      rect,\n    };\n  }\n\n  return null;\n}\n\nfunction dragOverSubjectHandler(event: DragEvent, controller: Controller, zoom: number): DropHolderProps | null {\n  const block = getBlockFromDragEvent(controller, event, zoom);\n\n  // block 为找到则不处理\n  if (!block) {\n    return null;\n  }\n\n  // 若 block 在议题区块内，则只能落在议题前后\n  const subjectStartBlock = controller.query('getSubjectStartBlock', block) as Subject;\n  if (subjectStartBlock) {\n    return dropToSubject(event, controller, subjectStartBlock);\n  }\n\n  // 若 block 是高亮块，则只能落在区块前后\n  if (Heading.isCallout(block)) {\n    return dropToCallout(event, controller, block as Block);\n  }\n\n  // 若不在区块内，则直接返回 block 的 drop 点\n  return dragOverBlockHandler(event, controller);\n}\n\nexport default dragOverSubjectHandler;\n"],"file":"dragOverSubjectHandler.js"}