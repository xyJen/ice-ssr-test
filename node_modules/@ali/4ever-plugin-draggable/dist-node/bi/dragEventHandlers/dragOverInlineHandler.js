"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dragOverInlineHandler;

var _everCangjie = require("@ali/4ever-cangjie");

var _getRangeFromDragEvent = _interopRequireDefault(require("../utils/getRangeFromDragEvent"));

var _draggableData = require("../model/draggableData");

var _types = require("../types");

function dragOverInlineHandler(event, controller) {
  const draggableData = (0, _draggableData.getDraggableData)(controller);
  if (!draggableData) return;
  const {
    dragFragment
  } = draggableData; // 只处理 inline 元素

  if (!dragFragment || dragFragment.type !== _types.DRAG_TYPE.inline) return;
  const range = (0, _getRangeFromDragEvent.default)(controller, event);
  if (!range) return;
  const {
    document,
    selection
  } = controller.value;
  const preFocus = selection.convertToTextPoints(document).focus;
  const nextFocus = range.convertToTextPoints(document).focus;

  if (preFocus.key === nextFocus.key && preFocus.offset === nextFocus.offset) {
    return;
  } // UI 层拿到不到数据层 controller，使用 action 在排版模式下同步更新选区


  controller.run('onCangjieSelect', (0, _everCangjie.CangjieSelectEvent)({
    selection: range
  }));
  controller.run('onCangjieFocus');
}
//# sourceMappingURL=dragOverInlineHandler.js.map