"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onAction;

var _actions = require("../actions");

var _dropFragment = _interopRequireDefault(require("../commands/dropFragment"));

var _updateDragFragment = _interopRequireDefault(require("../commands/updateDragFragment"));

var _updateDragHighlight = _interopRequireDefault(require("../commands/updateDragHighlight"));

var _dropEventFragment = _interopRequireDefault(require("../commands/dropEventFragment"));

var _dropHtml = _interopRequireDefault(require("../commands/dropHtml"));

var _updateImageDropHolder = _interopRequireDefault(require("../commands/updateImageDropHolder"));

var _dragMenuInsertBefore = _interopRequireDefault(require("../commands/dragMenuInsertBefore"));

var _dragMenuInsertAfter = _interopRequireDefault(require("../commands/dragMenuInsertAfter"));

var _dragMenuCutOrCopy = _interopRequireDefault(require("../commands/dragMenuCutOrCopy"));

var _dragMenuDelete = _interopRequireDefault(require("../commands/dragMenuDelete"));

var _deleteDragFragment = _interopRequireDefault(require("../commands/deleteDragFragment"));

var _removeDragHighlightSingle = _interopRequireDefault(require("../commands/removeDragHighlightSingle"));

function onAction(action, controller, next) {
  const {
    type,
    payload
  } = action;

  if (type === _actions.DROP_FRAGMENT) {
    (0, _dropFragment.default)(controller, payload);
  }

  if (type === _actions.DROP_EVENT_FRAGMENT) {
    (0, _dropEventFragment.default)(controller, payload);
  }

  if (type === _actions.DROP_HTML) {
    (0, _dropHtml.default)(controller, payload);
  }

  if (type === _actions.UPDATE_DARGFRAGMENT) {
    (0, _updateDragFragment.default)(controller, payload);
  }

  if (type === _actions.UPDATE_IMAGE_DROP_HOLDER) {
    (0, _updateImageDropHolder.default)(controller, payload);
  }

  if (type === _actions.DRAG_MENU_INSERT_AFTER) {
    (0, _dragMenuInsertAfter.default)(controller, payload);
  }

  if (type === _actions.UPDATE_DRAGHIGHLIGHT) {
    (0, _updateDragHighlight.default)(controller, payload);
  }

  if (type === _actions.REMOVE_DRAGHIGHLIGHT_SINGLE) {
    (0, _removeDragHighlightSingle.default)(controller, payload);
  }

  if (type === _actions.DRAG_MENU_INSERT_BEFORE) {
    (0, _dragMenuInsertBefore.default)(controller, payload);
  }

  if (type === _actions.DRAG_MENU_CUT_OR_COPY) {
    (0, _dragMenuCutOrCopy.default)(controller, payload);
  }

  if (type === _actions.DRAG_MENU_DELETE) {
    (0, _dragMenuDelete.default)(controller, payload);
  }

  if (type === _actions.DELETE_DARGFRAGMENT) {
    (0, _deleteDragFragment.default)(controller, payload);
  }

  return next();
}
//# sourceMappingURL=onAction.js.map