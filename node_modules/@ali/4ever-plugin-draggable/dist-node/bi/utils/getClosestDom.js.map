{"version":3,"sources":["../../../../src/bi/utils/getClosestDom.ts"],"names":["isListNode","node","Inline","isInline","data","list","pi","extra","inList","getClosestDom","nodeDom","key","Image","isImage","querySelector","Block","isBlock","closest","constants","Selector","leafBlock","blockquote","e"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEO,SAASA,UAAT,CAAoBC,IAApB,EAA0C;AAC/C,MAAIC,oBAAOC,QAAP,CAAgBF,IAAhB,CAAJ,EAA2B,OAAO,KAAP,CADoB,CAG/C;;AACA,SAAOA,IAAI,CAACG,IAAL,CAAUC,IAAV,IAAkBJ,IAAI,CAACG,IAAL,CAAUE,EAAV,EAAcC,KAAd,EAAqBC,MAA9C;AACD;;AAEc,SAASC,aAAT,CAAuBR,IAAvB,EAA6D;AAC1E,MAAIS,OAAuB,GAAG,IAA9B;AACA,MAAI,CAACT,IAAI,EAAEU,GAAX,EAAgB,OAAOD,OAAP;;AAChB,MAAI;AACFA,IAAAA,OAAO,GAAG,iCAAiBT,IAAI,CAACU,GAAtB,CAAV;AACA,QAAI,CAACD,OAAL,EAAc,OAAO,IAAP;;AACd,QAAIE,uBAAMC,OAAN,CAAcZ,IAAd,CAAJ,EAAyB;AACvBS,MAAAA,OAAO,GAAGA,OAAO,CAACI,aAAR,CAAsB,KAAtB,CAAV;AACD,KAFD,MAEO,IAAIC,mBAAMC,OAAN,CAAcf,IAAd,CAAJ,EAAyB;AAC9BS,MAAAA,OAAO,GAAGA,OAAO,CAACO,OAAR,CAAgB,2CAAhB,KAAgEP,OAAO,CAACO,OAAR,CAAiB,IAAGC,uBAAUC,QAAV,CAAmBC,SAAU,GAAjD,CAAhE,IAAwHV,OAAlI;AACD;;AACD,QAAIA,OAAO,IAAIT,IAAI,CAACG,IAAL,CAAUiB,UAAzB,EAAqC;AACnC;AACAX,MAAAA,OAAO,GAAGA,OAAO,CAACO,OAAR,CAAgB,YAAhB,KAAiCP,OAA3C;AACD,KAHD,MAGO,IAAIA,OAAO,IAAIV,UAAU,CAACC,IAAD,CAAzB,EAAiC;AACtC;AACAS,MAAAA,OAAO,GAAGA,OAAO,CAACO,OAAR,CAAgB,sBAAhB,KAA2CP,OAArD;AACD;;AACD,WAAOA,OAAP;AACD,GAhBD,CAgBE,OAAOY,CAAP,EAAU,CACV;AACD;;AACD,SAAOZ,OAAP;AACD","sourcesContent":["import { Block, Inline, constants } from '@ali/4ever-cangjie';\nimport { findDOMNodeByKey } from '@ali/4ever-utils';\nimport { Image } from '@ali/4ever-plugin-image';\n\nexport function isListNode(node: Block | Inline) {\n  if (Inline.isInline(node)) return false;\n\n  // 排版模式下 data.list 未下放到 nodes.nodes 中\n  return node.data.list || node.data.pi?.extra?.inList;\n}\n\nexport default function getClosestDom(node: Block | Inline): Element | null {\n  let nodeDom: Element | null = null;\n  if (!node?.key) return nodeDom;\n  try {\n    nodeDom = findDOMNodeByKey(node.key);\n    if (!nodeDom) return null;\n    if (Image.isImage(node)) {\n      nodeDom = nodeDom.querySelector('img');\n    } else if (Block.isBlock(node)) {\n      nodeDom = nodeDom.closest('[data-name=\"heading-group-title-content\"]') || nodeDom.closest(`[${constants.Selector.leafBlock}]`) || nodeDom;\n    }\n    if (nodeDom && node.data.blockquote) {\n      // 引用\n      nodeDom = nodeDom.closest('blockquote') || nodeDom;\n    } else if (nodeDom && isListNode(node)) {\n      // 列表和任务\n      nodeDom = nodeDom.closest('[data-testid=\"list\"]') || nodeDom;\n    }\n    return nodeDom;\n  } catch (e) {\n    // do nothing\n  }\n  return nodeDom;\n}\n"],"file":"getClosestDom.js"}