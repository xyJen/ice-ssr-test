{"version":3,"sources":["../../../../src/bi/utils/moveImageToDrop.ts"],"names":["moveImageToDrop","controller","dragKey","dropBlock","dropPosition","isCopy","document","value","dragImage","getNode","undefined","parent","getParent","key","index","nodes","indexOf","DROP_POSITION","after","right","draggedBlock","Paragraph","create","Inline","fromJSON","toJSON","command","Commands","insertNodeByKey","moveToEndOfNode","focus","removeNodeByKey","error","logger","message"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAT,CACbC,UADa,EAEbC,OAFa,EAGbC,SAHa,EAIbC,YAJa,EAKbC,MALa,EAMb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACM,KAAhC;;AACA,MAAI;AACF,UAAMC,SAAS,GAAGF,QAAQ,CAACG,OAAT,CAAiBP,OAAjB,CAAlB;AACA,QAAI,CAACM,SAAL,EAAgB,OAAOE,SAAP;AAEhB,UAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,CAAmBT,SAAS,CAACU,GAA7B,CAAf;AACA,QAAI,CAACF,MAAL,EAAa,OAAO,IAAP;AAEb,QAAIG,KAAK,GAAGH,MAAM,CAACI,KAAP,CAAaC,OAAb,CAAqBb,SAArB,CAAZ;;AAEA,QAAIC,YAAY,KAAKa,qBAAcC,KAA/B,IAAwCd,YAAY,KAAKa,qBAAcE,KAA3E,EAAkF;AAChFL,MAAAA,KAAK,IAAI,CAAT;AACD;;AAED,UAAMM,YAAY,GAAGC,+BAAUC,MAAV,CAAiB;AACpCP,MAAAA,KAAK,EAAE,CAACQ,oBAAOC,QAAP,CAAgBhB,SAAS,CAACiB,MAAV,EAAhB,CAAD;AAD6B,KAAjB,CAArB;;AAIA,QAAIpB,MAAJ,EAAY;AACVJ,MAAAA,UAAU,CACPyB,OADH,CACWC,sBAASC,eADpB,EACqCjB,MAAM,CAACE,GAD5C,EACiDC,KADjD,EACwDM,YADxD,EAEGM,OAFH,CAEWC,sBAASE,eAFpB,EAEqCT,YAFrC,EAGGM,OAHH,CAGWC,sBAASG,KAHpB;AAID,KALD,MAKO;AACL7B,MAAAA,UAAU,CACPyB,OADH,CACWC,sBAASC,eADpB,EACqCjB,MAAM,CAACE,GAD5C,EACiDC,KADjD,EACwDM,YADxD,EAEGM,OAFH,CAEWC,sBAASI,eAFpB,EAEqCvB,SAAS,CAACK,GAF/C,EAGGa,OAHH,CAGWC,sBAASE,eAHpB,EAGqCT,YAHrC,EAIGM,OAJH,CAIWC,sBAASG,KAJpB;AAKD;;AAED,WAAOV,YAAP;AACD,GA/BD,CA+BE,OAAOY,KAAP,EAAmB;AACnBC,wBAAOD,KAAP,CAAc,+BAA8BA,KAAK,CAACE,OAAQ,EAA1D;;AACA,WAAO,IAAP;AACD;AACF","sourcesContent":["import { Node, Block, Inline, Controller, Commands } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport logger from '@ali/4ever-logger';\nimport {\n  DROP_POSITION,\n} from '../types';\n\n/**\n * 移动节点到 drop 位置\n * @param controller\n * @param dragKey\n * @param dropBlock\n * @param dropPosition\n * @param isCopy\n * @returns 返回移动后的节点\n */\nexport default function moveImageToDrop(\n  controller: Controller,\n  dragKey: string,\n  dropBlock: Node,\n  dropPosition?: DROP_POSITION,\n  isCopy?: boolean,\n) {\n  const { document } = controller.value;\n  try {\n    const dragImage = document.getNode(dragKey);\n    if (!dragImage) return undefined;\n\n    const parent = document.getParent(dropBlock.key);\n    if (!parent) return null;\n\n    let index = parent.nodes.indexOf(dropBlock as Block);\n\n    if (dropPosition === DROP_POSITION.after || dropPosition === DROP_POSITION.right) {\n      index += 1;\n    }\n\n    const draggedBlock = Paragraph.create({\n      nodes: [Inline.fromJSON(dragImage.toJSON())],\n    });\n\n    if (isCopy) {\n      controller\n        .command(Commands.insertNodeByKey, parent.key, index, draggedBlock)\n        .command(Commands.moveToEndOfNode, draggedBlock)\n        .command(Commands.focus);\n    } else {\n      controller\n        .command(Commands.insertNodeByKey, parent.key, index, draggedBlock)\n        .command(Commands.removeNodeByKey, dragImage.key)\n        .command(Commands.moveToEndOfNode, draggedBlock)\n        .command(Commands.focus);\n    }\n\n    return draggedBlock;\n  } catch (error: any) {\n    logger.error(`parse drag fragment failed: ${error.message}`);\n    return null;\n  }\n}\n"],"file":"moveImageToDrop.js"}