{"version":3,"sources":["../../../../src/bi/utils/moveBlockToDrop.ts"],"names":["moveBlockToDrop","controller","dragKey","dropBlock","dropPosition","isCopy","document","value","dragBlock","getNode","undefined","query","parent","getParent","key","isDropToTable","type","index","nodes","indexOf","dragPath","assertPath","dropPath","isYounger","Path","isSibling","DROP_POSITION","before","after","copyedBlock","Block","fromJSON","toJSON","doc","Document","create","command","Commands","insertFragmentByKey","withoutNormalizing","parentPath","getPath","dummyBlock","Paragraph","Text","insertNodeByKey","reverse","forEach","n","path","moveNodeByPath","newDragBlock","removeNodeByKey","draggedBlock","moveToEndOfNode","focus","moveNodeByKey","error","logger","message"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAT,CACbC,UADa,EAEbC,OAFa,EAGbC,SAHa,EAIbC,YAJa,EAKbC,MALa,EAMb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeL,UAAU,CAACM,KAAhC;;AACA,MAAI;AACF,UAAMC,SAAS,GAAGF,QAAQ,CAACG,OAAT,CAAiBP,OAAjB,CAAlB;AACA,QAAI,CAACM,SAAL,EAAgB,OAAOE,SAAP;;AAEhB,QAAIT,UAAU,CAACU,KAAX,CAAiB,aAAjB,EAAgCH,SAAhC,EAAoDL,SAApD,CAAJ,EAA6E;AAC3E,aAAOO,SAAP;AACD;;AAED,UAAME,MAAM,GAAGN,QAAQ,CAACO,SAAT,CAAmBV,SAAS,CAACW,GAA7B,CAAf;AACA,QAAI,CAACF,MAAL,EAAa,OAAO,IAAP;AAEb,UAAMG,aAAa,GAAGd,UAAU,CAACU,KAAX,CAAiB,eAAjB,EAAkCR,SAAlC,EAA6C,IAA7C,CAAtB;;AAEA,QAAKK,SAAD,CAAqBQ,IAArB,KAA8B,OAA9B,IAAyCD,aAA7C,EAA4D;AAC1D;AACA,aAAO,IAAP;AACD;;AAED,QAAIE,KAAK,GAAGL,MAAM,CAACM,KAAP,CAAaC,OAAb,CAAqBhB,SAArB,CAAZ;AAEA,UAAMiB,QAAQ,GAAGd,QAAQ,CAACe,UAAT,CAAoBb,SAAS,CAACM,GAA9B,CAAjB;AACA,UAAMQ,QAAQ,GAAGhB,QAAQ,CAACe,UAAT,CAAoBlB,SAAS,CAACW,GAA9B,CAAjB;;AAEA,UAAMS,SAAS,GAAGC,kBAAKD,SAAL,CAAeH,QAAf,EAAyBE,QAAzB,CAAlB;;AACA,UAAMG,SAAS,GAAGD,kBAAKC,SAAL,CAAeL,QAAf,EAAyBE,QAAzB,CAAlB;;AACA,QAAIG,SAAS,IAAI,CAACpB,MAAlB,EAA0B;AACxB,UAAIkB,SAAS,IAAInB,YAAY,KAAKsB,qBAAcC,MAAhD,EAAwD;AACtDV,QAAAA,KAAK,IAAI,CAAT;AACD,OAFD,MAEO,IAAI,CAACM,SAAD,IAAcnB,YAAY,KAAKsB,qBAAcE,KAAjD,EAAwD;AAC7DX,QAAAA,KAAK,IAAI,CAAT;AACD;AACF,KAND,MAMO,IAAIb,YAAY,KAAKsB,qBAAcE,KAAnC,EAA0C;AAC/CX,MAAAA,KAAK,IAAI,CAAT;AACD,KAjCC,CAmCF;;;AACA,QAAIhB,UAAU,CAACU,KAAX,CAAiB,aAAjB,EAAgCH,SAAhC,CAAJ,EAAgD;AAC9C,UAAIA,SAAS,KAAKL,SAAd,IAA4BK,SAAD,CAAqBC,OAArB,CAA6BN,SAAS,CAACW,GAAvC,CAA/B,EAA4E;AAC1E;AACA,eAAO,IAAP;AACD;;AACD,UAAIT,MAAJ,EAAY;AACV,cAAMwB,WAAW,GAAGC,mBAAMC,QAAN,CAAevB,SAAS,CAACwB,MAAV,EAAf,CAApB;;AACA,cAAMC,GAAG,GAAGC,sBAASC,MAAT,CAAgB;AAC1BjB,UAAAA,KAAK,EAAEW,WAAW,CAACX;AADO,SAAhB,CAAZ;;AAGAjB,QAAAA,UAAU,CACPmC,OADH,CACWC,sBAASC,mBADpB,EACyC1B,MAAM,CAACE,GADhD,EACqDG,KADrD,EAC4DgB,GAD5D;AAED,OAPD,MAOO;AACLhC,QAAAA,UAAU,CAACsC,kBAAX,CAA8B,MAAM;AAClC,gBAAMC,UAAU,GAAGlC,QAAQ,CAACmC,OAAT,CAAiB7B,MAAM,CAACE,GAAxB,CAAnB;AAEA;AACV;AACA;AACA;AACA;AACA;AACA;;AACU,gBAAM4B,UAAU,GAAGC,+BAAUR,MAAV,CAAiB;AAAEjB,YAAAA,KAAK,EAAE,CAAC0B,kBAAKT,MAAL,EAAD;AAAT,WAAjB,CAAnB;;AACAlC,UAAAA,UAAU,CAACmC,OAAX,CAAmBC,sBAASQ,eAA5B,EAA6CrC,SAAS,CAACM,GAAvD,EAA4D,CAA5D,EAA+D4B,UAA/D,EAXkC,CAalC;;AACA,WAAC,GAAIlC,SAAD,CAAqBU,KAAzB,EAAgC4B,OAAhC,GAA0CC,OAA1C,CAAmDC,CAAD,IAAO;AACvD,kBAAMC,IAAI,GAAGhD,UAAU,CAACM,KAAX,CAAiBD,QAAjB,CAA0BmC,OAA1B,CAAkCO,CAAC,CAAClC,GAApC,CAAb;;AACA,gBAAImC,IAAI,IAAIT,UAAZ,EAAwB;AACtBvC,cAAAA,UAAU,CAACmC,OAAX,CAAmBC,sBAASa,cAA5B,EAA4CD,IAA5C,EAAkDT,UAAlD,EAA8DvB,KAA9D;AACD;AACF,WALD,EAdkC,CAoBlC;;AACA,gBAAMkC,YAAY,GAAGlD,UAAU,CAACM,KAAX,CAAiBD,QAAjB,CAA0BO,SAA1B,CAAoC6B,UAAU,CAAC5B,GAA/C,CAArB;;AACA,cAAIqC,YAAJ,EAAkB;AAChBlD,YAAAA,UAAU,CAACmC,OAAX,CAAmBC,sBAASe,eAA5B,EAA6CD,YAAY,CAACrC,GAA1D;AACD;AACF,SAzBD;AA0BD;;AACD,aAAOJ,SAAP;AACD;;AAED,QAAI2C,YAAY,GAAG7C,SAAnB;;AACA,QAAIH,MAAJ,EAAY;AACV,YAAMwB,WAAW,GAAGC,mBAAMC,QAAN,CAAevB,SAAS,CAACwB,MAAV,EAAf,CAApB;;AACAqB,MAAAA,YAAY,GAAGxB,WAAf;AACA5B,MAAAA,UAAU,CACPmC,OADH,CACWC,sBAASQ,eADpB,EACqCjC,MAAM,CAACE,GAD5C,EACiDG,KADjD,EACwDY,WADxD,EAEGO,OAFH,CAEWC,sBAASiB,eAFpB,EAEqCzB,WAFrC,EAGGO,OAHH,CAGWC,sBAASkB,KAHpB;AAID,KAPD,MAOO;AACLtD,MAAAA,UAAU,CACPmC,OADH,CACWC,sBAASmB,aADpB,EACmCtD,OADnC,EAC4CU,MAAM,CAACE,GADnD,EACwDG,KADxD,EAEGmB,OAFH,CAEWC,sBAASiB,eAFpB,EAEqC9C,SAFrC,EAGG4B,OAHH,CAGWC,sBAASkB,KAHpB;AAID;;AAED,WAAOF,YAAP;AACD,GA/FD,CA+FE,OAAOI,KAAP,EAAmB;AACnBC,wBAAOD,KAAP,CAAc,+BAA8BA,KAAK,CAACE,OAAQ,EAA1D;;AACA,WAAO,IAAP;AACD;AACF","sourcesContent":["import { Document, Node, Block, Text, Controller, Commands, Path } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport logger from '@ali/4ever-logger';\nimport {\n  DROP_POSITION,\n} from '../types';\n\n/**\n * 移动节点到 drop 位置\n * @param controller\n * @param dragKey\n * @param dropBlock\n * @param dropPosition\n * @param isCopy\n * @returns 返回移动后的节点\n */\nexport default function moveBlockToDrop(\n  controller: Controller,\n  dragKey: string,\n  dropBlock: Node,\n  dropPosition?: DROP_POSITION,\n  isCopy?: boolean,\n) {\n  const { document } = controller.value;\n  try {\n    const dragBlock = document.getNode(dragKey);\n    if (!dragBlock) return undefined;\n\n    if (controller.query('disableDrop', dragBlock as Block, dropBlock as Block)) {\n      return undefined;\n    }\n\n    const parent = document.getParent(dropBlock.key);\n    if (!parent) return null;\n\n    const isDropToTable = controller.query('isNodeInTable', dropBlock, true);\n\n    if ((dragBlock as Block).type === 'table' && isDropToTable) {\n      // 不允许表格拖入表格\n      return null;\n    }\n\n    let index = parent.nodes.indexOf(dropBlock as Block);\n\n    const dragPath = document.assertPath(dragBlock.key);\n    const dropPath = document.assertPath(dropBlock.key);\n\n    const isYounger = Path.isYounger(dragPath, dropPath);\n    const isSibling = Path.isSibling(dragPath, dropPath);\n    if (isSibling && !isCopy) {\n      if (isYounger && dropPosition === DROP_POSITION.before) {\n        index -= 1;\n      } else if (!isYounger && dropPosition === DROP_POSITION.after) {\n        index += 1;\n      }\n    } else if (dropPosition === DROP_POSITION.after) {\n      index += 1;\n    }\n\n    // source 是个 TableCell，需要过滤掉 Cell 节点。\n    if (controller.query('isTableCell', dragBlock)) {\n      if (dragBlock === dropBlock || (dragBlock as Block).getNode(dropBlock.key)) {\n        // 拖到了自己的 children，直接返回\n        return null;\n      }\n      if (isCopy) {\n        const copyedBlock = Block.fromJSON(dragBlock.toJSON());\n        const doc = Document.create({\n          nodes: copyedBlock.nodes,\n        });\n        controller\n          .command(Commands.insertFragmentByKey, parent.key, index, doc);\n      } else {\n        controller.withoutNormalizing(() => {\n          const parentPath = document.getPath(parent.key);\n\n          /**\n           * 由于河图卡片限制，只能使用 move node 操作。\n           * move mode 之后，需要移除 dragBlock，但是此时 dragBlock 已经无法定位了（path、key 均失效了）。\n           *\n           * 因此这里引入了一个 dummyBlock，先插入到 dragBlock 内部，作为定位使用。\n           * 这样移动完了之后，dragBlock 还剩一个 dummyBlock，可以获取最新的 dragBlock 引用。\n           */\n          const dummyBlock = Paragraph.create({ nodes: [Text.create()] });\n          controller.command(Commands.insertNodeByKey, dragBlock.key, 0, dummyBlock);\n\n          // dragBlock.nodes：旧的 dragBlock 引用，不包含 dummyBlock\n          [...(dragBlock as Block).nodes].reverse().forEach((n) => {\n            const path = controller.value.document.getPath(n.key);\n            if (path && parentPath) {\n              controller.command(Commands.moveNodeByPath, path, parentPath, index);\n            }\n          });\n          // 参考上面注释，这里来获取最新的 dragBlock 引用\n          const newDragBlock = controller.value.document.getParent(dummyBlock.key);\n          if (newDragBlock) {\n            controller.command(Commands.removeNodeByKey, newDragBlock.key);\n          }\n        });\n      }\n      return undefined;\n    }\n\n    let draggedBlock = dragBlock;\n    if (isCopy) {\n      const copyedBlock = Block.fromJSON(dragBlock.toJSON());\n      draggedBlock = copyedBlock;\n      controller\n        .command(Commands.insertNodeByKey, parent.key, index, copyedBlock)\n        .command(Commands.moveToEndOfNode, copyedBlock)\n        .command(Commands.focus);\n    } else {\n      controller\n        .command(Commands.moveNodeByKey, dragKey, parent.key, index)\n        .command(Commands.moveToEndOfNode, dragBlock)\n        .command(Commands.focus);\n    }\n\n    return draggedBlock;\n  } catch (error: any) {\n    logger.error(`parse drag fragment failed: ${error.message}`);\n    return null;\n  }\n}\n"],"file":"moveBlockToDrop.js"}