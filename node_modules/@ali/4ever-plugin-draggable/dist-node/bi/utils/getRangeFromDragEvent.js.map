{"version":3,"sources":["../../../../src/bi/utils/getRangeFromDragEvent.ts"],"names":["COLUMN_BAR_KEY","HORIZ_ADJUST_OFFSET","shouldTraverseBlock","node","Block","isBlock","test","type","getBlockFromDragEvent","controller","event","zoom","onlyEdge","clientX","clientY","left","right","target","getBoundingClientRect","adjustedX","document","value","isOutsideContent","element","dragKey","getAttribute","block","getNode","isElement","nodes","querySelector","paddingLeft","paddingRight","window","getComputedStyle","l","parseInt","r","hitedTarget","elementFromPoint","closest","hasAttribute","pivotY","firstElementChild","bottom","childTarget","lastElementChild","key","split","getParent","getRangeFromDragEvent","domUtils","caretRangeFromTargetAndCoord"],"mappings":"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","sourcesContent":["import { Controller, domUtils, Block, Node } from '@ali/4ever-cangjie';\n\nconst COLUMN_BAR_KEY = 'data-column-dragkey';\nconst HORIZ_ADJUST_OFFSET = 10;\n\nfunction shouldTraverseBlock(node: Node | null) {\n  if (!node) return false;\n\n  if (!Block.isBlock(node)) return true;\n  if (/line/.test(node.type)) return true;\n\n  return false;\n}\n\n/**\n   * 从 drag 事件中计算命中的块级元素\n   * 水平位置矫正策略（I 表示 drag 事件的位置）：\n   * |   [---I---  ]   |\n   * |   [------ I ]   |\n   * | I [-------  ]   |\n   * |   [-------  ] I |\n   * 当事件命中 content 的 padding 区域时，如果取原始的水平位置拿不到 block\n   * 因此矫正为 dragEvent.target 的中点\n   */\nexport function getBlockFromDragEvent(controller: Controller, event: DragEvent, zoom?: number, onlyEdge = false) {\n  const { clientX, clientY } = event;\n  const { left, right } = (event.target as HTMLElement)?.getBoundingClientRect() || {};\n  let adjustedX = (left + right) / 2 || clientX;\n  const { document } = controller.value;\n  let isOutsideContent = false;\n\n  if (event.target) {\n    const element = event.target as HTMLElement;\n    const dragKey = element.getAttribute(COLUMN_BAR_KEY);\n    // 如果刚好到分隔栏上，就直接返回分隔栏的 key\n    if (dragKey) {\n      const block = document.getNode(dragKey);\n      if (block?.isElement()) {\n        return block.nodes[0];\n      }\n    }\n    // 如果在编辑器区域外部，需要加一下 padding，重新获取一下。\n    if (element.querySelector('[data-cangjie-editable]')) {\n      isOutsideContent = true;\n      if (typeof zoom !== 'number') return null;\n      const { paddingLeft, paddingRight } = window.getComputedStyle(event.target as HTMLElement);\n      const l = left + parseInt(paddingLeft, 10) * zoom;\n      const r = right - parseInt(paddingRight, 10) * zoom;\n      if (clientX < l) {\n        adjustedX = l + HORIZ_ADJUST_OFFSET * zoom;\n      } else if (clientX > r) {\n        adjustedX = r - HORIZ_ADJUST_OFFSET * zoom;\n      }\n    }\n  }\n  // 图片仅在拖拽到分隔栏和编辑器区域外部时返回 block\n  if (onlyEdge && !isOutsideContent) {\n    return null;\n  }\n  let hitedTarget = window.document.elementFromPoint(adjustedX, clientY);\n  if (!hitedTarget) return null;\n\n  // 兼容列表悬空区域探测\n  if (hitedTarget.closest('[data-listid]')) {\n    hitedTarget = hitedTarget.querySelector('[data-cangjie-key]') || hitedTarget;\n  }\n  // 兼容分栏悬空区域探测\n  if (hitedTarget.hasAttribute('data-column')) {\n    const pivotY = hitedTarget.firstElementChild?.getBoundingClientRect().bottom || 0;\n    const childTarget = clientY >= pivotY ? hitedTarget.lastElementChild : hitedTarget.firstElementChild;\n    hitedTarget = childTarget?.querySelector('[data-cangjie-key]') || hitedTarget;\n  }\n  const node = hitedTarget.closest('[data-cangjie-key]');\n  let block: Node | null = null;\n  if (node) {\n    const [key] = node.getAttribute('data-cangjie-key')?.split(':') || [];\n    block = document.getNode(key);\n    while (shouldTraverseBlock(block)) {\n      block = document.getParent(block?.key || '');\n    }\n  }\n  if (block?.key === document.key) {\n    return null;\n  }\n  return block;\n}\n\n\nexport default function getRangeFromDragEvent(controller: Controller, event: DragEvent) {\n  getBlockFromDragEvent(controller, event);\n  const { clientX, clientY } = event;\n  let hitedTarget = window.document.elementFromPoint(clientX, clientY);\n  if (!hitedTarget) return null;\n  hitedTarget = hitedTarget.closest('[data-listid]') || hitedTarget;\n  return domUtils.caretRangeFromTargetAndCoord(hitedTarget, clientX, clientY, controller);\n}\n"],"file":"getRangeFromDragEvent.js"}