"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeDragThumbnail = removeDragThumbnail;
exports.removeDragHolderWrapper = removeDragHolderWrapper;
exports.removeDragHightlight = removeDragHightlight;
exports.addDragHighlight = addDragHighlight;
exports.addDragTableHighlight = addDragTableHighlight;
exports.removeDragTableHightlightSingle = removeDragTableHightlightSingle;
exports.removeDragHightlightSingle = removeDragHightlightSingle;
exports.addDargHighlight = addDargHighlight;
Object.defineProperty(exports, "findDOMNodeByKey", {
  enumerable: true,
  get: function () {
    return _everUtils.findDOMNodeByKey;
  }
});
exports.DRAG_HIGHLIGHT_TABLE_CLASSNAME = exports.DRAG_HOLDER_WRAPPER = exports.DRAG_HIGHLIGHT_SHADOW = exports.DRAG_THUMBNAIL_ID = exports.DISABLE_DRAG_HIGHLIGHT_CLASSNAME = exports.DRAG_HIGHLIGHT_CLASSNAME = void 0;

var _everUtils = require("@ali/4ever-utils");

var _getClosestDom = _interopRequireDefault(require("./getClosestDom"));

const DRAG_HIGHLIGHT_CLASSNAME = 'draggable-highlight';
exports.DRAG_HIGHLIGHT_CLASSNAME = DRAG_HIGHLIGHT_CLASSNAME;
const DISABLE_DRAG_HIGHLIGHT_CLASSNAME = 'disable-draggable-highlight';
exports.DISABLE_DRAG_HIGHLIGHT_CLASSNAME = DISABLE_DRAG_HIGHLIGHT_CLASSNAME;
const DRAG_THUMBNAIL_ID = 'drag-custom-thumbnail';
exports.DRAG_THUMBNAIL_ID = DRAG_THUMBNAIL_ID;
const DRAG_HIGHLIGHT_SHADOW = 'shadow-highlight';
exports.DRAG_HIGHLIGHT_SHADOW = DRAG_HIGHLIGHT_SHADOW;
const DRAG_HOLDER_WRAPPER = 'drag-holder-wrapper';
exports.DRAG_HOLDER_WRAPPER = DRAG_HOLDER_WRAPPER;
const DRAG_HIGHLIGHT_TABLE_CLASSNAME = 'draggable-highlight-table';
exports.DRAG_HIGHLIGHT_TABLE_CLASSNAME = DRAG_HIGHLIGHT_TABLE_CLASSNAME;

function removeDragThumbnail() {
  const thumbnail = document.querySelector(`#${DRAG_THUMBNAIL_ID}`);

  if (thumbnail && document.body.contains(thumbnail)) {
    document.body.removeChild(thumbnail);
  }
}

function removeDragHolderWrapper() {
  const thumbnail = document.querySelector(`.${DRAG_HOLDER_WRAPPER}`);

  if (thumbnail && document.body.contains(thumbnail)) {
    document.body.removeChild(thumbnail);
  }
} // 移除整个document的所有高亮
// TODO: 多实例？？


function removeDragHightlight() {
  const draggingElements = Array.from(document.querySelectorAll(`.${DRAG_HIGHLIGHT_CLASSNAME}`));
  draggingElements.forEach(ele => {
    if (ele.classList?.remove) {
      ele.classList.remove(DRAG_HIGHLIGHT_CLASSNAME, DRAG_HIGHLIGHT_SHADOW);
    }
  });
}

function addDragHighlight(itemDom, disableHighlight) {
  if (itemDom?.classList?.add) {
    itemDom.classList.add(DRAG_HIGHLIGHT_CLASSNAME);
    disableHighlight && itemDom.classList.add(DISABLE_DRAG_HIGHLIGHT_CLASSNAME);

    if (itemDom?.querySelector('[data-type="card"]')) {
      itemDom.classList.add(DRAG_HIGHLIGHT_SHADOW);
    }
  }
} // 表格需要定制化，不添加背景色


function addDragTableHighlight(itemDom) {
  if (itemDom?.classList?.add) {
    itemDom.classList.add(DRAG_HIGHLIGHT_TABLE_CLASSNAME);

    if (itemDom?.querySelector('[data-type="card"]')) {
      itemDom.classList.add(DRAG_HIGHLIGHT_SHADOW);
    }
  }
} // 移除表格的高亮


function removeDragTableHightlightSingle(itemDom) {
  if (itemDom?.classList?.remove) {
    itemDom.classList.remove(DRAG_HIGHLIGHT_TABLE_CLASSNAME, DRAG_HIGHLIGHT_SHADOW);
  }
} // 移除指定节点的高亮


function removeDragHightlightSingle(itemDom) {
  if (itemDom?.classList?.remove) {
    itemDom.classList.remove(DRAG_HIGHLIGHT_CLASSNAME, DRAG_HIGHLIGHT_SHADOW, DISABLE_DRAG_HIGHLIGHT_CLASSNAME);
  }
}
/**
 * @param blocks
 * @deprecated
 */


function addDargHighlight(blocks, disableHighlight) {
  for (let i = 0; i < blocks.length; i++) {
    const itemDom = (0, _getClosestDom.default)(blocks[i]);

    if (itemDom?.classList?.add) {
      itemDom.classList.add(DRAG_HIGHLIGHT_CLASSNAME);
      disableHighlight && itemDom.classList.add(DISABLE_DRAG_HIGHLIGHT_CLASSNAME);

      if (itemDom?.querySelector('[data-type="card"]')) {
        itemDom.classList.add(DRAG_HIGHLIGHT_SHADOW);
      }
    }
  }
}
//# sourceMappingURL=domUtils.js.map