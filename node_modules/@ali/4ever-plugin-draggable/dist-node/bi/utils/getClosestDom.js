"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isListNode = isListNode;
exports.default = getClosestDom;

var _everCangjie = require("@ali/4ever-cangjie");

var _everUtils = require("@ali/4ever-utils");

var _everPluginImage = require("@ali/4ever-plugin-image");

function isListNode(node) {
  if (_everCangjie.Inline.isInline(node)) return false; // 排版模式下 data.list 未下放到 nodes.nodes 中

  return node.data.list || node.data.pi?.extra?.inList;
}

function getClosestDom(node) {
  let nodeDom = null;
  if (!node?.key) return nodeDom;

  try {
    nodeDom = (0, _everUtils.findDOMNodeByKey)(node.key);
    if (!nodeDom) return null;

    if (_everPluginImage.Image.isImage(node)) {
      nodeDom = nodeDom.querySelector('img');
    } else if (_everCangjie.Block.isBlock(node)) {
      nodeDom = nodeDom.closest('[data-name="heading-group-title-content"]') || nodeDom.closest(`[${_everCangjie.constants.Selector.leafBlock}]`) || nodeDom;
    }

    if (nodeDom && node.data.blockquote) {
      // 引用
      nodeDom = nodeDom.closest('blockquote') || nodeDom;
    } else if (nodeDom && isListNode(node)) {
      // 列表和任务
      nodeDom = nodeDom.closest('[data-testid="list"]') || nodeDom;
    }

    return nodeDom;
  } catch (e) {// do nothing
  }

  return nodeDom;
}
//# sourceMappingURL=getClosestDom.js.map