{"version":3,"sources":["../../../src/bi/renderContent.tsx"],"names":["DraggableProvider","props","draggableData","dispatch","zoom","controller","draggableConfig","handleDragChange","value","onKeyDown","dragHander","viewKey","onDragOver","event","pageX","pageY","onDrop","dragOverHandler","cancel","dropHolder","onDragEnd","zoomContainer","React","useEffect","undefined","addEventListener","document","removeEventListener","children","config","next","draggable","enabled"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useMemo, useCallback } from 'react';\nimport { Controller, RenderContentProps, useZoomContainer, useZoom, BiPluginConfig } from '@ali/4ever-cangjie';\nimport DropHolder from './components/dropHolder';\nimport { DragHighlightStyle } from './components/styled';\nimport { DraggableContext, useValue } from './draggableContext';\nimport { updateDragHander, clearDropHolder, deleteDragFragment } from './actions';\nimport { DraggablePluginConfig } from './types';\nimport dragOverHandler, { checkAndUpdatePosition } from './dragEventHandlers/dragOverHandler';\nimport dropHandler from './dragEventHandlers/dropHandler';\nimport dragEndHandler from './dragEventHandlers/dragEndHandler';\nimport mouseMoveHandler from './dragEventHandlers/mouseMoveHandler';\nimport { removeDragHightlight, removeDragHolderWrapper } from './utils/domUtils';\nimport { updateDraggableData } from './model/draggableData';\n\ninterface DraggableProviderProps extends Pick<RenderContentProps, 'zoom' | 'children'> {\n  controller: Controller;\n  draggableConfig?: DraggablePluginConfig;\n  handleDragChange: (\n    action: 'clear' | 'disable' | 'enable',\n    controller: Controller,\n  ) => {};\n}\n\nconst DraggableProvider = (props: DraggableProviderProps) => {\n  const [draggableData, dispatch] = useValue();\n  const zoom = useZoom();\n  const { controller, draggableConfig, handleDragChange } = props;\n  const value = useMemo(() => {\n    /**\n     * PERF\n     * never get the data from context when it change constantly or a lot of components useContext\n     * it will cause DISASTER\n     */\n    return {\n      dispatch,\n    };\n  }, [dispatch]);\n\n  const onKeyDown = useCallback(() => {\n    if (draggableData.dragHander?.viewKey) {\n      dispatch(updateDragHander());\n      removeDragHightlight();\n    }\n  }, [dispatch, draggableData]);\n\n  const onDragOver = useCallback((event: DragEvent) => {\n    if (checkAndUpdatePosition(event.pageX, event.pageY)) {\n      dragOverHandler(event, controller, dispatch, zoom, draggableConfig);\n    }\n  }, [controller, dispatch, zoom, draggableConfig]);\n\n  const onDrop = useCallback((event: DragEvent) => {\n    // 取消，避免延迟触发\n    dragOverHandler.cancel();\n    // 清除 UI 拖拽数据\n    dispatch(clearDropHolder());\n    // onDrop triggered means onDragEnd not trigger\n    dropHandler(event, controller, draggableData.dropHolder);\n    dragEndHandler(controller);\n    checkAndUpdatePosition();\n    handleDragChange('clear', controller);\n  }, [dispatch, controller, draggableData]);\n\n  const onDragEnd = useCallback(() => {\n    // 取消拖拽\n    updateDraggableData(controller);\n    dragEndHandler(controller);\n    dispatch(clearDropHolder());\n    checkAndUpdatePosition();\n    handleDragChange('clear', controller);\n  }, [controller, dispatch]);\n\n  const zoomContainer = useZoomContainer();\n\n  React.useEffect(() => {\n    if (!zoomContainer) {\n      return undefined;\n    }\n    zoomContainer.addEventListener('dragover', onDragOver);\n    document.addEventListener('keydown', onKeyDown);\n    zoomContainer.addEventListener('drop', onDrop);\n    document.addEventListener('dragend', onDragEnd);\n    return () => {\n      zoomContainer.removeEventListener('dragover', onDragOver);\n      document.removeEventListener('keydown', onKeyDown);\n      zoomContainer.removeEventListener('drop', onDrop);\n      document.removeEventListener('dragend', onDragEnd);\n    };\n  }, [zoomContainer, onDragOver, onKeyDown, onDrop, onDragEnd]);\n\n  return (\n    <DraggableContext.Provider value={value}>\n      {/* PERF: 使用 props.children 避免 next 在 hook 变更时 rerender */}\n      {props.children}\n      <DragHighlightStyle/>\n      <DropHolder {...draggableData} controller={controller} />\n    </DraggableContext.Provider>\n  );\n};\n\nexport default (config: BiPluginConfig, handleDragChange: (action: 'clear' | 'disable' | 'enable', controller: Controller) => {}) => {\n  return (props: RenderContentProps, controller: Controller, next) => {\n    if (config.draggable?.enabled) {\n      return (\n        <DraggableProvider draggableConfig={config.draggable} controller={controller} zoom={props.zoom} handleDragChange={handleDragChange}>\n          {next()}\n        </DraggableProvider>\n      );\n    }\n    return next();\n  };\n};\n"],"file":"renderContent.js"}