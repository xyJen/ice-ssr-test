"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _styled = require("./styled");

var _dragStartHandler = _interopRequireDefault(require("../dragEventHandlers/dragStartHandler"));

const _createElement = /*#__PURE__*/_react.default.createElement;

const Draggable = props => {
  const {
    controller,
    renderNodeProps
  } = props;
  const {
    node
  } = renderNodeProps; // 是否开启拖拽

  const shouldBeDraggable = !!controller.query('isNodeDraggable', {
    node
  });

  const dragDirectly = _everCangjie.Inline.isInline(node);

  const handleDragStart = event => {
    (0, _dragStartHandler.default)(event, controller, undefined, node.key);
  };

  const handleMouseDown = event => {
    if (dragDirectly) {
      // 避免和选区冲突
      event.stopPropagation();
      event.nativeEvent.stopPropagation();
    }
  };

  if (!shouldBeDraggable) {
    return /*#__PURE__*/_createElement(_react.default.Fragment, null, props.children);
  }

  return /*#__PURE__*/_createElement("span", {
    style: { ..._styled.dragDirectlyStyle
    },
    draggable: 'true',
    onMouseDown: handleMouseDown,
    onDragStart: handleDragStart,
    "data-draggable": node.key
  }, props.children);
};

var _default = Draggable;
exports.default = _default;
//# sourceMappingURL=draggable.js.map