"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DragIcon = exports.PrimaryText = exports.TooltipText = exports.DragIconWrapper = exports.DragTip = exports.DropHolderWrapper = exports.DragHand = exports.dragDirectlyStyle = exports.DragHighlightStyle = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _weDesign = require("@ali/we-design");

const _createElement = /*#__PURE__*/React.createElement;

/**
 * 块级元素添加背景，行内元素不添加背景
 * 添加透明度是为了生成缩略图时不粘连相邻元素
 */
const DragHighlightStyle = /*#__PURE__*/(0, _styledComponents.createGlobalStyle)`
  .draggable-highlight:not(.disable-draggable-highlight) {
    border-radius: 4px;
    opacity: 0.99;
    // 缓动
    transition: background 100ms ease;
    background-color: rgba(0, 137, 255, 0.12) !important;

    &.shadow-highlight {
      border-radius: 8px;
      box-shadow: 0px 0px 0px 3px ${_weDesign.theme.commonBgHoverColor};
    }
  }

  .draggable-highlight-table {
    border-radius: 4px;
    opacity: 0.99;
    // 缓动
    transition: background 100ms ease;
  }

  [data-draggable] {
    transition: backgroundColor 300ms ease-out;
    &.in-blockquote {
      [data-draggable-before] {
        width: 45px;
      }
    }
  }
`;
exports.DragHighlightStyle = DragHighlightStyle;
const dragDirectlyStyle = {
  cursor: 'initial',
  transform: 'translateZ(0)'
};
exports.dragDirectlyStyle = dragDirectlyStyle;

const DragHand = /*#__PURE__*/_styledComponents.default.div(["display:flex;align-items:center;justify-content:center;cursor:", ";line-height:initial;transition:background-color 100ms ease;background-color:#fff;border:1px solid rgba(126,134,142,0.24);border-radius:50%;width:", "px;height:", "px;svg{color:", ";}", " &:hover,&[data-is-hover=true]{background-color:rgba(50,96,201,0.06);}&:active{background-color:rgba(50,96,201,0.09);}"], ({
  draggable
}) => draggable ? 'grab' : 'pointer', p => 19 / p.scale, p => 19 / p.scale, _weDesign.theme.colorText3, ({
  active
}) => active && `background-color: #EAECED;`);

exports.DragHand = DragHand;

const DropHolderWrapper = /*#__PURE__*/_styledComponents.default.div(["background-color:rgba(0,137,255,0.48);border-radius:4px;position:fixed;top:-9999px;pointer-events:none;z-index:999;"]);

exports.DropHolderWrapper = DropHolderWrapper;

const DragTip = /*#__PURE__*/_styledComponents.default.div(["display:none;position:absolute;padding:6px 12px;border-radius:16px;font-size:12px;line-height:20px;background-color:rgba(17,31,44,0.85);color:#ffffff;text-align:center;user-select:none;line-height:1.2;white-space:nowrap;top:27px;left:50%;transform:translateX(-50%);"]);

exports.DragTip = DragTip;

const DragIconWrapper = /*#__PURE__*/_styledComponents.default.div(["width:", "px;height:", "px;border-radius:", "px;svg{width:", "px;height:", "px;}"], p => 20 / p.scale, p => 20 / p.scale, p => 4 / p.scale, p => 20 / p.scale, p => 20 / p.scale);

exports.DragIconWrapper = DragIconWrapper;

const TooltipText = /*#__PURE__*/_styledComponents.default.div(["color:rgba(255,255,255,.56);display:flex;"]);

exports.TooltipText = TooltipText;

const PrimaryText = /*#__PURE__*/_styledComponents.default.div(["margin-right:4px;color:rgba(238,242,248,1);"]);

exports.PrimaryText = PrimaryText;

const DragIcon = /*#__PURE__*/_createElement("svg", {
  width: "7",
  height: "7",
  viewBox: "0 0 7 7",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
}, /*#__PURE__*/_createElement("path", {
  d: "M7 1H0V0H7V1ZM7 4H0V3H7V4ZM0 7H7V6H0V7Z",
  fill: "#171A1D",
  fillOpacity: "0.6"
}));

exports.DragIcon = DragIcon;
//# sourceMappingURL=styled.js.map