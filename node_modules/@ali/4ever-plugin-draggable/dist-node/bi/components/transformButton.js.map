{"version":3,"sources":["../../../../src/bi/components/transformButton.tsx"],"names":["Scrollbar","styled","div","sizeStyle","minWidth","whiteSpace","overflow","maxHeight","Wrapper","TransformButton","props","controller","locale","getContainer","rest","distance","test","top","getBoundingClientRect","bottom","window","innerHeight","Math","max","visible","setVisible","React","useState","handleVisibleChange","value","hide","extras","menus","insertTransMenus","allSelected","Object","keys","filter","item","isMixed","length","text","mixed","paragraph","transform","DraggableRole","dragTransform","EMenuMode","vertical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DropdownAnimation } from '@ali/we-util';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { Menu, EMenuMode } from '@ali/we-design';\nimport { TextMenu } from '@ali/we-toolbar';\nimport {\n  Menu as MenuAdapter,\n  TYPE_MENU_DATA,\n} from '@ali/4ever-component';\nimport useTransformMenus from './useTransformMenus';\nimport styled from 'styled-components';\nimport { DraggableRole } from '../../utils/role';\n\n\nconst Scrollbar = styled.div`\n  // safari下不支持，但是safari下auto表现与overlay一致\n  overflow: auto;\n  overflow: overlay;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 8px;\n    background-color: unset;\n  }\n\n  &:hover::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const sizeStyle: React.CSSProperties = {\n  minWidth: 173,\n  whiteSpace: 'nowrap',\n  overflow: 'auto',\n  maxHeight: 550,\n};\n\nexport interface InsertOnlineDocButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  getContainer: any;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default function TransformButton(props: InsertOnlineDocButtonProps) {\n  const { controller, locale, getContainer, ...rest } = props;\n  let distance: number | null = null;\n  if (typeof getContainer === 'function') {\n    const test = getContainer() as HTMLElement;\n    if (test) {\n      const top = test.getBoundingClientRect().top - 20;\n      const bottom = window.innerHeight - test.getBoundingClientRect().bottom - 20;\n      distance = Math.max(top, bottom);\n    }\n  }\n\n  const [visible, setVisible] = React.useState(false);\n\n  const handleVisibleChange = (value: boolean) => {\n    setVisible(value);\n  };\n\n  const hide = () => {\n    setVisible(false);\n  }\n\n  const {extras, menus: insertTransMenus } = useTransformMenus(locale);\n  const allSelected = Object.keys(extras).filter(item => item !== 'paragraph');\n  const isMixed = allSelected.length > 1;\n  const text = isMixed ? locale?.mixed : locale[allSelected[0]];\n\n  return (<TextMenu\n    visible={visible}\n    value={text || locale?.paragraph || ''}\n    title={locale.transform}\n    tooltip={locale.transform}\n    onVisibleChange={handleVisibleChange}\n    testid=\"transfrom-button\"\n    showTitle={true}\n    getContainer={getContainer}\n    role={DraggableRole.dragTransform}\n    overlay={(\n      <DropdownAnimation visible={visible}>\n        <Scrollbar\n          style={{\n            minWidth: 173,\n            maxHeight: distance || 'calc(50vh - 20px)',\n          }}\n        >\n          <Wrapper>\n            <Menu\n              mode={EMenuMode.vertical}\n              selectedKeys={[]}\n              destroyOverlayWhenInvisible\n              insertSubmenuToMenuRoot\n              style={sizeStyle}\n              onClick={hide}\n              getContainer={getContainer}\n              role={DraggableRole.dragTransform}\n            >\n              <MenuAdapter menus={insertTransMenus.menus as TYPE_MENU_DATA} />\n            </Menu>\n          </Wrapper>\n        </Scrollbar>\n      </DropdownAnimation>\n    )}\n    {...rest}\n  />);\n}\n\n"],"file":"transformButton.js"}