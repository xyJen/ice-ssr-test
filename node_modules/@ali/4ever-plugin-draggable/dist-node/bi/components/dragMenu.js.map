{"version":3,"sources":["../../../../src/bi/components/dragMenu.tsx"],"names":["ACTION_COPY","ACTION_CUT","ContextMenu","sizeStyle","width","whiteSpace","commonHeadStyle","padding","height","fontWeight","menuItemSizeStyle","minWidth","canTransType","Heading","Heading1","TYPE","Heading2","Heading3","Heading4","Heading5","Heading6","Paragraph","Code","canSetColorType","InsertRoles","ShareParagraphType","DragMenu","props","currentBlock","locale","handleClickMenu","getCopyURL","shareParagraph","hetu","refblock","extraTransformMenu","customizeMenus","controller","Controller","useController","blocks","onCutOrCopy","action","run","node","onClickCut","onClickCopy","onClickDelete","onClickAppend","menus","insertTransMenus","onClickInsert","onClickCopyLink","data","subjectPr","uuid","id","err","console","warn","onParagraphShare","type","query","enableUUID","dispatch","blockWithUUID","value","document","assertElement","key","shareParagraphToImFail","copyParagraphUrlFail","shareParagraphToImSuccess","copyParagraphUrlSuccess","onClickCopyRefBlock","onCopyRefBlock","block","insertMenus","transformMenus","push","map","item","TYPE_MENU_ITEM","DragMenuActionType","hetuMenus","enable","config","paragraphMenus","TYPE_SUB_MENU","icon","title","shareParagraphUrl","shareParagraphToIm","menuExtraKey","onClick","Im","role","copyParagraphUrl","Url","copyAsUrl","copyAsUrlOld","refblockMenus","refblockUtils","getRefBlockDragMenuItems","disableNodeInRefBlock","onCopyAsRefBlock","setColorMenu","TYPE_GROUP","arr","copyMenu","copy","cutMenu","cut","insert","testid","append","deleteMenu","delete","includes","paragraphColor","menuKey","length","unshift","getMenus","EMenuMode","vertical","menuDrag"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAUA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA;;AAMA;;AAEA;;AACA;;AACA;;uBAxC4B,a;AA0C5B,MAAM;AAAEA,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAA8BC,wBAApC;AAEO,MAAMC,SAA8B,GAAG;AAC5CC,EAAAA,KAAK,EAAE,GADqC;AAE5CC,EAAAA,UAAU,EAAE;AAFgC,CAAvC;;AAKA,MAAMC,eAAoC,GAAG;AAClDC,EAAAA,OAAO,EAAE,SADyC;AAElDC,EAAAA,MAAM,EAAE,MAF0C;AAGlDC,EAAAA,UAAU,EAAE;AAHsC,CAA7C;;AAMA,MAAMC,iBAAsC,GAAG;AACpDN,EAAAA,KAAK,EAAE,OAD6C;AAEpDO,EAAAA,QAAQ,EAAE;AAF0C,CAA/C;;AAKP,MAAMC,YAAY,GAAG,CACnBC,2BAAQC,QAAR,CAAiBC,IADE,EAEnBF,2BAAQG,QAAR,CAAiBD,IAFE,EAGnBF,2BAAQI,QAAR,CAAiBF,IAHE,EAInBF,2BAAQK,QAAR,CAAiBH,IAJE,EAKnBF,2BAAQM,QAAR,CAAiBJ,IALE,EAMnBF,2BAAQO,QAAR,CAAiBL,IANE,EAOnBM,+BAAUN,IAPS,EAQnBO,qBAAKP,IARc,CAArB;AAWA,MAAMQ,eAAe,GAAG,CACtBV,2BAAQC,QAAR,CAAiBC,IADK,EAEtBF,2BAAQG,QAAR,CAAiBD,IAFK,EAGtBF,2BAAQI,QAAR,CAAiBF,IAHK,EAItBF,2BAAQK,QAAR,CAAiBH,IAJK,EAKtBF,2BAAQM,QAAR,CAAiBJ,IALK,EAMtBF,2BAAQO,QAAR,CAAiBL,IANK,EAOtBM,+BAAUN,IAPY,CAAxB;IAUKS,W,EAaL;;WAbKA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;IAcAC,kB;;WAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,KAAAA,kB;;wBA2LW,eAAC,0BAAD,O;;yBAqBA,eAAC,qBAAD,O;;yBA8BE,eAAC,yBAAD,O;;yBAQA,eAAC,wBAAD,O;;yBAqBA,eAAC,mBAAD,O;;yBASA,eAAC,qBAAD,O;;yBAgBA,eAAC,2BAAD,O;;yBAiBJ,eAAC,qBAAD,O;;AA/Rd,MAAMC,QAAuC,GAAIC,KAAD,IAAW;AACzD,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,kBARI;AASJC,IAAAA,cAAc,GAAG;AATb,MAUFT,KAVJ;;AAWA,QAAMU,UAAU,GAAGC,wBAAWC,aAAX,EAAnB;;AACA,QAAMC,MAAM,GAAG,oBAAQ,MAAM;AAC3B,WAAO,6CAA0BH,UAA1B,EAAsCT,YAAtC,KAAuD,EAA9D;AACD,GAFc,EAEZ,CAACS,UAAD,EAAaT,YAAb,CAFY,CAAf;AAIA,QAAMa,WAAW,GAAG,wBACjBC,MAAD,IAAY;AACV,QAAI,CAACd,YAAL,EAAmB;AACjB;AACD;;AACDS,IAAAA,UAAU,CAACM,GAAX,CACE,UADF,EAEE,gCAAkB;AAChBC,MAAAA,IAAI,EAAEhB,YADU;AAEhBc,MAAAA;AAFgB,KAAlB,CAFF;AAOD,GAZiB,EAalB,CAACd,YAAD,CAbkB,CAApB;AAgBA,QAAMiB,UAAU,GAAG,wBAAY,MAAM;AACnCJ,IAAAA,WAAW,CAACxC,UAAD,CAAX;AACD,GAFkB,EAEhB,CAACwC,WAAD,CAFgB,CAAnB;AAIA,QAAMK,WAAW,GAAG,wBAAY,MAAM;AACpCL,IAAAA,WAAW,CAACzC,WAAD,CAAX;AACD,GAFmB,EAEjB,CAACyC,WAAD,CAFiB,CAApB;AAIA,QAAMM,aAAa,GAAG,wBAAY,MAAM;AACtC,QAAI,CAACnB,YAAL,EAAmB;AACjB;AACD;;AACDS,IAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,6BAAe;AAAEC,MAAAA,IAAI,EAAEhB;AAAR,KAAf,CAA3B;AACD,GALqB,EAKnB,CAACA,YAAD,CALmB,CAAtB;AAOA,QAAMoB,aAAa,GAAG,wBAAY,MAAM;AACtC,QAAI,CAACpB,YAAL,EAAmB;AACjB;AACD;;AACDS,IAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,kCAAoB;AAAEC,MAAAA,IAAI,EAAEhB;AAAR,KAApB,CAA3B;AACD,GALqB,EAKnB,CAACA,YAAD,EAAeS,UAAf,CALmB,CAAtB;AAOA,QAAM;AAAEY,IAAAA,KAAK,EAAEC;AAAT,MAA8B,gCAClCrB,MADkC,EAElCD,YAFkC,EAGlC,IAHkC,CAApC;AAMA,QAAMuB,aAAa,GAAG,wBAAY,MAAM;AACtC,QAAI,CAACvB,YAAL,EAAmB;AACjB;AACD;;AAEDS,IAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,mCAAqB;AAAEC,MAAAA,IAAI,EAAEhB;AAAR,KAArB,CAA3B;AACD,GANqB,EAMnB,CAACS,UAAD,EAAaT,YAAb,CANmB,CAAtB;AAQA,QAAMwB,eAAe,GAAG,wBAAY,MAAM;AACxC,QAAI,CAACxB,YAAD,IAAiB,CAACG,UAAtB,EAAkC;AAChC;AACD;;AAED,QAAI;AACF,YAAM;AACJsB,QAAAA,IAAI,EAAE;AAAEC,UAAAA,SAAS,GAAG,EAAd;AAAkBC,UAAAA,IAAI,EAAEC;AAAxB;AADF,UAEF5B,YAFJ;AAGA,UAAI2B,IAAI,GAAGD,SAAS,CAACE,EAAV,IAAgBA,EAA3B;;AAEA,UAAI,CAACD,IAAL,EAAW;AACTA,QAAAA,IAAI,GAAG,0BAAP;AACAlB,QAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,4BAAYf,YAAZ,EAA0B2B,IAA1B,CAA3B;AACD;;AAEDxB,MAAAA,UAAU,CAACwB,IAAD,CAAV;AACD,KAZD,CAYE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACD;AACF,GApBuB,EAoBrB,CAACpB,UAAD,EAAaT,YAAb,EAA2BG,UAA3B,CApBqB,CAAxB;AAsBA,QAAM6B,gBAAgB,GAAG,wBACtBC,IAAD,IAA8B;AAC5B,QAAI,CAACjC,YAAD,IAAiB,CAACI,cAAtB,EAAsC;AACpC;AACD;;AACD,QAAI;AACF,YAAM;AACJqB,QAAAA,IAAI,EAAE;AAAEC,UAAAA,SAAS,GAAG;AAAd;AADF,UAEF1B,YAFJ;AAGA,UAAI2B,IAAI,GAAGD,SAAS,CAACE,EAAV,IAAgBnB,UAAU,CAACyB,KAAX,CAAiB,QAAjB,EAA2BlC,YAA3B,CAA3B;;AAEA,UAAI,CAAC2B,IAAL,EAAW;AACT,YAAIlB,UAAU,CAAC0B,UAAf,EAA2B;AACzB1B,UAAAA,UAAU,CAAC2B,QAAX,CAAoB,cAApB,EAAoC;AAAEpB,YAAAA,IAAI,EAAEhB;AAAR,WAApC;AACA,gBAAMqC,aAAa,GAAG5B,UAAU,CAAC6B,KAAX,CAAiBC,QAAjB,CAA0BC,aAA1B,CAAwCxC,YAAY,CAACyC,GAArD,CAAtB;AACAd,UAAAA,IAAI,GAAGlB,UAAU,CAACyB,KAAX,CAAiB,QAAjB,EAA2BG,aAA3B,CAAP;AACD,SAJD,MAIO;AACLV,UAAAA,IAAI,GAAG,0BAAP;AACAlB,UAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2B,4BAAYf,YAAZ,EAA0B2B,IAA1B,CAA3B;AACD;AACF;;AACDvB,MAAAA,cAAc,CAAC6B,IAAD,EAAON,IAAP,EAAa3B,YAAb,CAAd;AACD,KAjBD,CAiBE,OAAO6B,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACD;AACF,GAzBsB,EAyBpB,CACDpB,UADC,EACWT,YADX,EAEDC,MAAM,EAAEyC,sBAFP,EAE+BzC,MAAM,EAAE0C,oBAFvC,EAGD1C,MAAM,EAAE2C,yBAHP,EAGkC3C,MAAM,EAAE4C,uBAH1C,EAIDzC,cAJC,CAzBoB,CAAzB;AAiCA,QAAM0C,mBAAmB,GAAG,wBAAY,MAAM;AAC5CrC,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,gBAApB,EAAsCxB,MAAtC;AACD,GAF2B,EAEzB,CAACH,UAAD,EAAaG,MAAb,CAFyB,CAA5B;AAIA,QAAMmC,cAAc,GAAG,wBACpBC,KAAD,IAAqB;AACnBvC,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,cAApB,EAAoCY,KAApC;AACD,GAHoB,EAIrB,CAACvC,UAAD,CAJqB,CAAvB;AAOA,QAAMwC,WAAW,GAAG,oBAAQ,MAAM;AAChC,UAAMC,cAAuB,GAAG,EAAhC;;AAEA,QAAIlD,YAAJ,EAAkB;AAChB;AACAkD,MAAAA,cAAc,CAACC,IAAf,CACE,GAAG5C,kBAAkB,CAAC6C,GAAnB,CAAwBC,IAAD,KAAW;AACnCpB,QAAAA,IAAI,EAAEqB,6BAD6B;AAEnCxC,QAAAA,MAAM,EAAEyC,6BAF2B;AAGnCvD,QAAAA,YAHmC;AAInC,WAAGqD;AAJgC,OAAX,CAAvB,CADL;AAQD,KAb+B,CAehC;;;AACA,UAAMG,SAAS,GAAGnD,IAAI,EAAEoD,MAAN,GACd,gCAAqB;AACrBT,MAAAA,KAAK,EAAEhD,YADc;AAErBC,MAAAA,MAFqB;AAGrByD,MAAAA,MAAM,EAAErD,IAHa;AAIrBI,MAAAA;AAJqB,KAArB,CADc,GAOd,EAPJ,CAhBgC,CAwBhC;;AACA,QAAIkD,cAAqB,GAAG,EAA5B;;AACA,QAAIvD,cAAc,IAAID,UAAtB,EAAkC;AAChCwD,MAAAA,cAAc,GAAGvD,cAAc,GAAG,CAChC;AACE6B,QAAAA,IAAI,EAAE2B,4BADR;AAEEC,QAAAA,IAAI,MAFN;AAGEC,QAAAA,KAAK,EAAE7D,MAAM,EAAE8D,iBAHjB;AAIE1C,QAAAA,KAAK,EAAE,CAAC;AACNY,UAAAA,IAAI,EAAEqB,6BADA;AAENQ,UAAAA,KAAK,EAAE7D,MAAM,EAAE+D,kBAFT;AAGNC,UAAAA,YAAY,EAAE,OAHR;AAINC,UAAAA,OAAO,EAAE,MAAMlC,gBAAgB,CAACnC,kBAAkB,CAACsE,EAApB,CAJzB;AAKNC,UAAAA,IAAI,EAAExE,WAAW,CAACoE;AALZ,SAAD,EAOP;AACE/B,UAAAA,IAAI,EAAEqB,6BADR;AAEEQ,UAAAA,KAAK,EAAE7D,MAAM,EAAEoE,gBAFjB;AAGE5B,UAAAA,GAAG,EAAE,SAHP;AAIEyB,UAAAA,OAAO,EAAE,MAAMlC,gBAAgB,CAACnC,kBAAkB,CAACyE,GAApB,CAJjC;AAKEF,UAAAA,IAAI,EAAExE,WAAW,CAACyE;AALpB,SAPO;AAJT,OADgC,CAAH,GAoB3B,CACF;AACEpC,QAAAA,IAAI,EAAEqB,6BADR;AAEEQ,QAAAA,KAAK,EAAE7D,MAAM,EAAEsE,SAFjB;AAGEV,QAAAA,IAAI,OAHN;AAIEI,QAAAA,YAAY,EAAE,WAJhB;AAKEG,QAAAA,IAAI,EAAExE,WAAW,CAAC4E,YALpB;AAMEN,QAAAA,OAAO,EAAE1C;AANX,OADE,CApBJ;AA8BD,KAzD+B,CA0DhC;;;AACA,UAAMiD,aAAa,GAAGnE,QAAQ,EAAEmD,MAAV,GAClBiB,0BAAcC,wBAAd,CAAuC;AACvC3B,MAAAA,KAAK,EAAEhD,YADgC;AAEvCC,MAAAA,MAAM,EAAEA,MAF+B;AAGvCqC,MAAAA,KAAK,EAAE7B,UAAU,CAAC6B,KAHqB;AAIvCsC,MAAAA,qBAAqB,EAAG5D,IAAD,IAAUP,UAAU,CAACyB,KAAX,CAAiB,uBAAjB,EAA0ClB,IAA1C,MAAoD,IAJ9C;AAKvC6D,MAAAA,gBAAgB,EAAE/B,mBALqB;AAMvCC,MAAAA;AANuC,KAAvC,CADkB,GASlB,EATJ;AAWA,UAAM+B,YAAY,GAAG;AACnB7C,MAAAA,IAAI,EAAE8C,yBADa;AAEnB1D,MAAAA,KAAK,EAAE;AAFY,KAArB;AAIA,UAAM2D,GAAG,GAAG,CACV;AACE/C,MAAAA,IAAI,EAAE8C,yBADR;AAEE1D,MAAAA,KAAK,EAAE,CACL;AACEY,QAAAA,IAAI,EAAEqB,6BADR;AAEEQ,QAAAA,KAAK,EAAE7D,MAAM,EAAEgF,QAFjB;AAGEpB,QAAAA,IAAI,OAHN;AAIEI,QAAAA,YAAY,EAAE,MAJhB;AAKEG,QAAAA,IAAI,EAAExE,WAAW,CAACsF,IALpB;AAMEhB,QAAAA,OAAO,EAAEhD;AANX,OADK,EASL;AACEe,QAAAA,IAAI,EAAEqB,6BADR;AAEEQ,QAAAA,KAAK,EAAE7D,MAAM,EAAEkF,OAFjB;AAGEtB,QAAAA,IAAI,OAHN;AAIEI,QAAAA,YAAY,EAAE,KAJhB;AAKEG,QAAAA,IAAI,EAAExE,WAAW,CAACwF,GALpB;AAMElB,QAAAA,OAAO,EAAEjD;AANX,OATK;AAFT,KADU,EAsBV;AACEgB,MAAAA,IAAI,EAAE8C,yBADR;AAEE1D,MAAAA,KAAK,EAAE,CACL,GAAGsC,cADE,EAEL,GAAGH,SAFE,EAGL,GAAGiB,aAHE,EAIL,GAAGvB,cAJE;AAFT,KAtBU,EA+BV;AACEjB,MAAAA,IAAI,EAAE8C,yBADR;AAEE1D,MAAAA,KAAK,EAAE,CACL;AACEY,QAAAA,IAAI,EAAEqB,6BADR;AAEEO,QAAAA,IAAI,OAFN;AAGEC,QAAAA,KAAK,EAAE7D,MAAM,EAAEoF,MAHjB;AAIEpB,QAAAA,YAAY,EAAE,QAJhB;AAKEC,QAAAA,OAAO,EAAE3C,aALX;AAME6C,QAAAA,IAAI,EAAExE,WAAW,CAACyF,MANpB;AAOEC,QAAAA,MAAM,EAAE;AAPV,OADK,EAUL;AACErD,QAAAA,IAAI,EAAEqB,6BADR;AAEEO,QAAAA,IAAI,OAFN;AAGEC,QAAAA,KAAK,EAAE7D,MAAM,EAAEsF,MAHjB;AAIEtB,QAAAA,YAAY,EAAE,QAJhB;AAKEC,QAAAA,OAAO,EAAE9C,aALX;AAMEgD,QAAAA,IAAI,EAAExE,WAAW,CAAC2F,MANpB;AAOED,QAAAA,MAAM,EAAE;AAPV,OAVK;AAFT,KA/BU,EAsDVR,YAtDU,EAuDV;AACE7C,MAAAA,IAAI,EAAE8C,yBADR;AAEE1D,MAAAA,KAAK,EAAE,CACL;AACEY,QAAAA,IAAI,EAAEqB,6BADR;AAEEQ,QAAAA,KAAK,EAAE7D,MAAM,EAAEuF,UAFjB;AAGE3B,QAAAA,IAAI,OAHN;AAIEI,QAAAA,YAAY,EAAE,QAJhB;AAKEG,QAAAA,IAAI,EAAExE,WAAW,CAAC6F,MALpB;AAMEvB,QAAAA,OAAO,EAAE/C;AANX,OADK;AAFT,KAvDU,CAAZ;;AAsEA,QAAInB,YAAY,IAAIhB,YAAY,CAAC0G,QAAb,CAAsB1F,YAAY,CAACiC,IAAnC,CAApB,EAA8D;AAC5D+C,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAO3D,KAAP,CAAa8B,IAAb,CAAkB7B,gBAAlB;AACD;;AAED,QAAItB,YAAY,IAAIL,eAAe,CAAC+F,QAAhB,CAAyB1F,YAAY,CAACiC,IAAtC,CAApB,EAAiE;AAC/D6C,MAAAA,YAAY,CAACzD,KAAb,CAAmB8B,IAAnB,CAAwB;AACtBlB,QAAAA,IAAI,EAAE2B,4BADgB;AAEtBE,QAAAA,KAAK,EAAE7D,MAAM,EAAE0F,cAFO;AAGtB9B,QAAAA,IAAI,OAHkB;AAItBxC,QAAAA,KAAK,EAAE,CACL;AACEY,UAAAA,IAAI,EAAEqB,6BADR;AAEEsC,UAAAA,OAAO,EAAE,gBAFX;AAGE5F,UAAAA,YAHF;AAIEoE,UAAAA,IAAI,EAAExE,WAAW,CAAC+F;AAJpB,SADK;AAJe,OAAxB;AAaD;;AACD,QAAInF,cAAc,CAACqF,MAAf,KAA0B,CAA9B,EAAiC;AAC/Bb,MAAAA,GAAG,CAACc,OAAJ,CAAY;AACV7D,QAAAA,IAAI,EAAE8C,yBADI;AAEV1D,QAAAA,KAAK,EAAEb;AAFG,OAAZ;AAID;;AACD,WAAOwE,GAAP;AACD,GA1KmB,EA0KjB,CACDhF,YADC,EAEDoB,aAFC,EAGDE,gBAHC,EAIDJ,WAJC,EAKDD,UALC,EAMDE,aANC,EAODI,aAPC,EAQDpB,UARC,EASDC,cATC,EAUDG,kBAVC,EAWDuC,mBAXC,EAYDC,cAZC,CA1KiB,CAApB;AAyLA,QAAMgD,QAAQ,GAAG,wBAAY,MAAM;AACjC,WAAO9C,WAAP;AACD,GAFgB,EAEd,CAACA,WAAD,CAFc,CAAjB;AAIA,sBACE,eAAC,cAAD;AACE,IAAA,IAAI,EAAE+C,oBAAUC,QADlB;AAEE,IAAA,YAAY,EAAE,EAFhB;AAGE,IAAA,2BAA2B,MAH7B;AAIE,IAAA,uBAAuB,MAJzB;AAKE,IAAA,KAAK,EAAE1H,SALT;AAME,IAAA,OAAO,EAAE2B,eANX;AAOE,IAAA,MAAM,EAAC,WAPT;AAQE,IAAA,IAAI,EAAEN,WAAW,CAACsG;AARpB,kBAUE,eAAC,mBAAD;AAAa,IAAA,KAAK,EAAEH,QAAQ;AAA5B,IAVF,CADF;AAcD,CAlVD;;eAoVejG,Q","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { Menu, EMenuMode } from '@ali/we-design';\nimport {\n  ToolbarCutNormal,\n  ToolbarCopyNormal,\n  ToolbarDeleteNormal,\n  AddDownNormal,\n  AddUpNormal,\n  MaodianNormal,\n  ToolbarShareNormal,\n  PaletteNormal,\n} from '@ali/we-icon';\nimport {\n  Controller,\n  Block,\n  ContextMenu,\n  Data,\n  BlockChildren,\n} from '@ali/4ever-cangjie';\nimport { utils as refblockUtils, RefBlock } from '@ali/4ever-plugin-refblock';\nimport { Code } from '@ali/4ever-plugin-code';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { getHetuDragMenuItems, HetuConfig } from '../utils/hetu';\nimport {\n  Menu as MenuAdapter,\n  TYPE_GROUP,\n  TYPE_MENU_ITEM,\n  TYPE_SUB_MENU,\n  TYPE_MENU_DATA,\n} from '@ali/4ever-component';\nimport {\n  dragMenuInsertAfter,\n  dragMenuInsertBefore,\n  dragMenuCutOrCopy,\n  dragMenuDelete,\n} from '../actions';\nimport { setNodeUUID, uniqueId } from '@ali/4ever-utils';\nimport { IMenu } from '../types';\nimport { DragMenuActionType } from '../constants';\nimport { getSiblingDraggableBlocks } from '../utils/getDragNodes';\nimport useTransformMenus from './useTransformMenus';\n\nconst { ACTION_COPY, ACTION_CUT } = ContextMenu;\n\nexport const sizeStyle: React.CSSProperties = {\n  width: 190,\n  whiteSpace: 'nowrap',\n};\n\nexport const commonHeadStyle: React.CSSProperties = {\n  padding: '6px 8px',\n  height: 'auto',\n  fontWeight: 500,\n};\n\nexport const menuItemSizeStyle: React.CSSProperties = {\n  width: '112px',\n  minWidth: '112px',\n};\n\nconst canTransType = [\n  Heading.Heading1.TYPE,\n  Heading.Heading2.TYPE,\n  Heading.Heading3.TYPE,\n  Heading.Heading4.TYPE,\n  Heading.Heading5.TYPE,\n  Heading.Heading6.TYPE,\n  Paragraph.TYPE,\n  Code.TYPE,\n];\n\nconst canSetColorType = [\n  Heading.Heading1.TYPE,\n  Heading.Heading2.TYPE,\n  Heading.Heading3.TYPE,\n  Heading.Heading4.TYPE,\n  Heading.Heading5.TYPE,\n  Heading.Heading6.TYPE,\n  Paragraph.TYPE,\n];\n\nenum InsertRoles {\n  copy = 'copy',\n  cut = 'cut',\n  copyAsUrlOld = 'copyAsUrlOld',\n  shareParagraphToIm = 'shareParagraphToIm',\n  copyParagraphUrl = 'copyParagraphUrl',\n  menuDrag = 'menuDrag',\n  insert = 'insert',\n  append = 'append',\n  delete = 'delete',\n  paragraphColor = 'paragraphColor',\n}\n\n// 分享段落链接的两种形式，im 直接发送到聊天，url 复制到剪切板\nenum ShareParagraphType {\n  Im = 'im',\n  Url = 'url',\n}\n\ninterface DragMenuRenderProps {\n  controller: Controller;\n  currentBlock: Block;\n  locale?: Record<string, string>;\n  getCopyURL?: (id: string) => string;\n  shareParagraph?: (\n    type: string,\n    uuid: string,\n    block: Block<Data, BlockChildren>,\n  ) => void;\n  hetu?: HetuConfig;\n  refblock?: refblockUtils.RefBlockDraggableConfig;\n  handleClickMenu?: any;\n  extraTransformMenu: IMenu[];\n  customizeMenus?: IMenu[];\n}\n\nconst DragMenu: React.FC<DragMenuRenderProps> = (props) => {\n  const {\n    currentBlock,\n    locale,\n    handleClickMenu,\n    getCopyURL,\n    shareParagraph,\n    hetu,\n    refblock,\n    extraTransformMenu,\n    customizeMenus = [],\n  } = props;\n  const controller = Controller.useController();\n  const blocks = useMemo(() => {\n    return getSiblingDraggableBlocks(controller, currentBlock) || [];\n  }, [controller, currentBlock]);\n\n  const onCutOrCopy = useCallback(\n    (action) => {\n      if (!currentBlock) {\n        return;\n      }\n      controller.run(\n        'onAction',\n        dragMenuCutOrCopy({\n          node: currentBlock,\n          action,\n        }),\n      );\n    },\n    [currentBlock],\n  );\n\n  const onClickCut = useCallback(() => {\n    onCutOrCopy(ACTION_CUT);\n  }, [onCutOrCopy]);\n\n  const onClickCopy = useCallback(() => {\n    onCutOrCopy(ACTION_COPY);\n  }, [onCutOrCopy]);\n\n  const onClickDelete = useCallback(() => {\n    if (!currentBlock) {\n      return;\n    }\n    controller.run('onAction', dragMenuDelete({ node: currentBlock }));\n  }, [currentBlock]);\n\n  const onClickAppend = useCallback(() => {\n    if (!currentBlock) {\n      return;\n    }\n    controller.run('onAction', dragMenuInsertAfter({ node: currentBlock }));\n  }, [currentBlock, controller]);\n\n  const { menus: insertTransMenus } = useTransformMenus(\n    locale,\n    currentBlock,\n    true,\n  );\n\n  const onClickInsert = useCallback(() => {\n    if (!currentBlock) {\n      return;\n    }\n\n    controller.run('onAction', dragMenuInsertBefore({ node: currentBlock }));\n  }, [controller, currentBlock]);\n\n  const onClickCopyLink = useCallback(() => {\n    if (!currentBlock || !getCopyURL) {\n      return;\n    }\n\n    try {\n      const {\n        data: { subjectPr = {}, uuid: id },\n      } = currentBlock;\n      let uuid = subjectPr.id || id;\n\n      if (!uuid) {\n        uuid = uniqueId();\n        controller.run('onAction', setNodeUUID(currentBlock, uuid));\n      }\n\n      getCopyURL(uuid);\n    } catch (err) {\n      console.warn(err);\n    }\n  }, [controller, currentBlock, getCopyURL]);\n\n  const onParagraphShare = useCallback(\n    (type: ShareParagraphType) => {\n      if (!currentBlock || !shareParagraph) {\n        return;\n      }\n      try {\n        const {\n          data: { subjectPr = {} },\n        } = currentBlock;\n        let uuid = subjectPr.id || controller.query('anchor', currentBlock);\n\n        if (!uuid) {\n          if (controller.enableUUID) {\n            controller.dispatch('generateUUID', { node: currentBlock });\n            const blockWithUUID = controller.value.document.assertElement(currentBlock.key);\n            uuid = controller.query('anchor', blockWithUUID);\n          } else {\n            uuid = uniqueId();\n            controller.run('onAction', setNodeUUID(currentBlock, uuid));\n          }\n        }\n        shareParagraph(type, uuid, currentBlock);\n      } catch (err) {\n        console.warn(err);\n      }\n    }, [\n      controller, currentBlock,\n      locale?.shareParagraphToImFail, locale?.copyParagraphUrlFail,\n      locale?.shareParagraphToImSuccess, locale?.copyParagraphUrlSuccess,\n      shareParagraph,\n    ],\n  );\n\n  const onClickCopyRefBlock = useCallback(() => {\n    controller.dispatch('copyAsRefBlock', blocks);\n  }, [controller, blocks]);\n\n  const onCopyRefBlock = useCallback(\n    (block: RefBlock) => {\n      controller.dispatch('copyRefBlock', block);\n    },\n    [controller],\n  );\n\n  const insertMenus = useMemo(() => {\n    const transformMenus: IMenu[] = [];\n\n    if (currentBlock) {\n      // 额外的 transform menu 能够独立存在\n      transformMenus.push(\n        ...extraTransformMenu.map((item) => ({\n          type: TYPE_MENU_ITEM,\n          action: DragMenuActionType,\n          currentBlock,\n          ...item,\n        })),\n      );\n    }\n\n    // 河图同步块的 menu 处理\n    const hetuMenus = hetu?.enable\n      ? getHetuDragMenuItems({\n        block: currentBlock,\n        locale,\n        config: hetu,\n        controller,\n      })\n      : [];\n    // 如果 shareParagraph 和 getCopyURL 都没有，不显示这个按钮\n    let paragraphMenus: any[] = [];\n    if (shareParagraph || getCopyURL) {\n      paragraphMenus = shareParagraph ? [\n        {\n          type: TYPE_SUB_MENU,\n          icon: <ToolbarShareNormal />,\n          title: locale?.shareParagraphUrl,\n          menus: [{\n            type: TYPE_MENU_ITEM,\n            title: locale?.shareParagraphToIm,\n            menuExtraKey: 'share',\n            onClick: () => onParagraphShare(ShareParagraphType.Im),\n            role: InsertRoles.shareParagraphToIm,\n          },\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.copyParagraphUrl,\n            key: 'saveUrl',\n            onClick: () => onParagraphShare(ShareParagraphType.Url),\n            role: InsertRoles.copyParagraphUrl,\n          }],\n        },\n      ] : [\n        {\n          type: TYPE_MENU_ITEM,\n          title: locale?.copyAsUrl,\n          icon: <MaodianNormal />,\n          menuExtraKey: 'copyAsUrl',\n          role: InsertRoles.copyAsUrlOld,\n          onClick: onClickCopyLink,\n        },\n      ];\n    }\n    // 引用块菜单\n    const refblockMenus = refblock?.enable\n      ? refblockUtils.getRefBlockDragMenuItems({\n        block: currentBlock,\n        locale: locale!,\n        value: controller.value,\n        disableNodeInRefBlock: (node) => controller.query('disableNodeInRefBlock', node) === true,\n        onCopyAsRefBlock: onClickCopyRefBlock,\n        onCopyRefBlock,\n      })\n      : [];\n\n    const setColorMenu = {\n      type: TYPE_GROUP,\n      menus: [] as any,\n    };\n    const arr = [\n      {\n        type: TYPE_GROUP,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.copyMenu,\n            icon: <ToolbarCopyNormal />,\n            menuExtraKey: 'copy',\n            role: InsertRoles.copy,\n            onClick: onClickCopy,\n          },\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.cutMenu,\n            icon: <ToolbarCutNormal />,\n            menuExtraKey: 'cut',\n            role: InsertRoles.cut,\n            onClick: onClickCut,\n          },\n        ],\n      },\n      {\n        type: TYPE_GROUP,\n        menus: [\n          ...paragraphMenus,\n          ...hetuMenus,\n          ...refblockMenus,\n          ...transformMenus,\n        ],\n      },\n      {\n        type: TYPE_GROUP,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            icon: <AddUpNormal />,\n            title: locale?.insert,\n            menuExtraKey: 'insert',\n            onClick: onClickInsert,\n            role: InsertRoles.insert,\n            testid: 'insert-before',\n          },\n          {\n            type: TYPE_MENU_ITEM,\n            icon: <AddDownNormal />,\n            title: locale?.append,\n            menuExtraKey: 'append',\n            onClick: onClickAppend,\n            role: InsertRoles.append,\n            testid: 'insert-after',\n          },\n        ],\n      },\n      setColorMenu,\n      {\n        type: TYPE_GROUP,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.deleteMenu,\n            icon: <ToolbarDeleteNormal />,\n            menuExtraKey: 'delete',\n            role: InsertRoles.delete,\n            onClick: onClickDelete,\n          },\n        ],\n      },\n    ];\n\n    if (currentBlock && canTransType.includes(currentBlock.type)) {\n      arr[0].menus.push(insertTransMenus);\n    }\n\n    if (currentBlock && canSetColorType.includes(currentBlock.type)) {\n      setColorMenu.menus.push({\n        type: TYPE_SUB_MENU,\n        title: locale?.paragraphColor,\n        icon: <PaletteNormal />,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            menuKey: 'paragraphColor',\n            currentBlock,\n            role: InsertRoles.paragraphColor,\n          },\n        ],\n      });\n    }\n    if (customizeMenus.length !== 0) {\n      arr.unshift({\n        type: TYPE_GROUP,\n        menus: customizeMenus,\n      });\n    }\n    return arr;\n  }, [\n    currentBlock,\n    onClickAppend,\n    insertTransMenus,\n    onClickCopy,\n    onClickCut,\n    onClickDelete,\n    onClickInsert,\n    getCopyURL,\n    shareParagraph,\n    extraTransformMenu,\n    onClickCopyRefBlock,\n    onCopyRefBlock,\n  ]);\n\n  const getMenus = useCallback(() => {\n    return insertMenus;\n  }, [insertMenus]);\n\n  return (\n    <Menu\n      mode={EMenuMode.vertical}\n      selectedKeys={[]}\n      destroyOverlayWhenInvisible\n      insertSubmenuToMenuRoot\n      style={sizeStyle}\n      onClick={handleClickMenu}\n      testid=\"drag-menu\"\n      role={InsertRoles.menuDrag}\n    >\n      <MenuAdapter menus={getMenus() as TYPE_MENU_DATA} />\n    </Menu>\n  );\n};\n\nexport default DragMenu;\n"],"file":"dragMenu.js"}