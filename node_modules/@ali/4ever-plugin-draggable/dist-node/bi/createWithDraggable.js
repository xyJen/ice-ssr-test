"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDraggableElement = createDraggableElement;
exports.default = createWithDraggable;

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _draggable = _interopRequireDefault(require("./components/draggable"));

const _createElement = /*#__PURE__*/React.createElement;

function createDraggableElement(props, controller, component, draggablePluginConfig, draggableConfig) {
  if (!draggablePluginConfig || !draggablePluginConfig.enabled) {
    return component;
  }

  if (_everCangjie.Block.isBlock(props.node)) return component;
  return /*#__PURE__*/_createElement(_draggable.default, {
    controller: controller,
    renderNodeProps: props,
    draggableConfig: draggableConfig
  }, component);
}

function createWithDraggable(renderNode, types, draggablePluginConfig, draggableConfig) {
  if (!draggablePluginConfig || !draggablePluginConfig.enabled) {
    return renderNode;
  }

  return function (props, controller, next) {
    if (_everCangjie.Block.isBlock(props.node) || !types[props.node.type]) return renderNode(props, controller, next);
    return /*#__PURE__*/_createElement(_draggable.default, {
      controller: controller,
      renderNodeProps: props,
      draggableConfig: draggableConfig
    }, renderNode(props, controller, next));
  };
}
//# sourceMappingURL=createWithDraggable.js.map