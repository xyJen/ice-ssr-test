{"version":3,"sources":["../../../../src/bi/commands/dragMenuInsertAfter.ts"],"names":["dragMenuInsertAfter","controller","payload","node","currentBlock","document","value","text","Text","create","paragraph","Paragraph","nodes","parent","getParent","key","index","anchor","TextPoint","offset","command","Commands","insertNodeByKey","select","Selection","focus","run","triggered","point"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEe,SAASA,mBAAT,CAA6BC,UAA7B,EAAqDC,OAArD,EAA8E;AAC3F,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAyBF,OAA/B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeJ,UAAU,CAACK,KAAhC;;AAEA,QAAMC,IAAI,GAAGC,kBAAKC,MAAL,CAAY,EAAZ,CAAb;;AAEA,QAAMC,SAAS,GAAGC,+BAAUF,MAAV,CAAiB;AACjCG,IAAAA,KAAK,EAAE,CAACL,IAAD;AAD0B,GAAjB,CAAlB;;AAIA,QAAMM,MAAM,GAAGR,QAAQ,CAACS,SAAT,CAAmBV,YAAY,CAACW,GAAhC,CAAf;AACA,MAAI,CAACF,MAAL,EAAa,OAAOZ,UAAP;AACb,QAAMe,KAAK,GAAG,6BAAeZ,YAAf,EAA6BS,MAAM,CAACD,KAApC,CAAd;;AACA,QAAMK,MAAM,GAAGC,uBAAUT,MAAV,CAAiB;AAAEM,IAAAA,GAAG,EAAER,IAAI,CAACQ,GAAZ;AAAiBI,IAAAA,MAAM,EAAE;AAAzB,GAAjB,CAAf;;AACAlB,EAAAA,UAAU,CACPmB,OADH,CACWC,sBAASC,eADpB,EACqCT,MAAM,CAACE,GAD5C,EACiDC,KAAK,GAAG,CADzD,EAC4DN,SAD5D,EAEGU,OAFH,CAEWC,sBAASE,MAFpB,EAE4BC,uBAAUf,MAAV,CAAiB;AAAEQ,IAAAA,MAAF;AAAUQ,IAAAA,KAAK,EAAER;AAAjB,GAAjB,CAF5B,EAGGS,GAHH,CAGO,UAHP,EAGmB,+BAAe;AAC9BX,IAAAA,GAAG,EAAEL,SAAS,CAACK,GADe;AAE9BY,IAAAA,SAAS,EAAE,IAFmB;AAG9BC,IAAAA,KAAK,EAAEX;AAHuB,GAAf,CAHnB;AASA,SAAOhB,UAAP;AACD","sourcesContent":["import { Controller, Commands, Text, TextPoint, Selection } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { setNewlineData } from '@ali/4ever-utils';\nimport { DragMenuAction } from '../types';\nimport getIndexOfNode from '../utils/getIndexOfNode';\n\nexport default function dragMenuInsertAfter(controller: Controller, payload: DragMenuAction) {\n  const { node: currentBlock } = payload;\n  const { document } = controller.value;\n\n  const text = Text.create('');\n\n  const paragraph = Paragraph.create({\n    nodes: [text],\n  });\n\n  const parent = document.getParent(currentBlock.key);\n  if (!parent) return controller;\n  const index = getIndexOfNode(currentBlock, parent.nodes);\n  const anchor = TextPoint.create({ key: text.key, offset: 0 });\n  controller\n    .command(Commands.insertNodeByKey, parent.key, index + 1, paragraph)\n    .command(Commands.select, Selection.create({ anchor, focus: anchor }))\n    .run('onAction', setNewlineData({\n      key: paragraph.key,\n      triggered: true,\n      point: anchor,\n    }));\n\n  return controller;\n}\n"],"file":"dragMenuInsertAfter.js"}