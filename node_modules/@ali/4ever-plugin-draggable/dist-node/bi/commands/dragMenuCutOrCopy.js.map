{"version":3,"sources":["../../../../src/bi/commands/dragMenuCutOrCopy.ts"],"names":["dragMenuCutOrCopy","controller","payload","node","currentBlock","action","blocks","length","anchor","focus","ColorBlocks","isColorBlocks","Point","createFromParams","key","newSelection","Selection","create","command","Commands","select","run","type","blur"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGe,SAASA,iBAAT,CAA2BC,UAA3B,EAAmDC,OAAnD,EAA4E;AACzF,QAAM;AAAEC,IAAAA,IAAI,EAAEC,YAAR;AAAsBC,IAAAA;AAAtB,MAAiCH,OAAvC;AACA,QAAMI,MAAM,GAAG,sCAA0BL,UAA1B,EAAsCG,YAAtC,CAAf;;AACA,MAAI,CAACE,MAAD,IAAWA,MAAM,EAAEC,MAAR,KAAmB,CAAlC,EAAqC;AACnC,WAAON,UAAP;AACD;;AACD,MAAIO,MAAJ;AACA,MAAIC,KAAJ;;AACA,MAAIC,mCAAYC,aAAZ,CAA0BP,YAA1B,CAAJ,EAA6C;AAC3CI,IAAAA,MAAM,GAAGI,mBAAMC,gBAAN,CAAuBT,YAAY,CAACU,GAApC,EAAyC,QAAzC,CAAT;AACAL,IAAAA,KAAK,GAAGG,mBAAMC,gBAAN,CAAuBT,YAAY,CAACU,GAApC,EAAyC,OAAzC,CAAR;AACD,GAHD,MAGO;AACLN,IAAAA,MAAM,GAAGI,mBAAMC,gBAAN,CAAuBP,MAAM,CAAC,CAAD,CAAN,CAAUQ,GAAjC,EAAsC,QAAtC,CAAT;AACAL,IAAAA,KAAK,GAAGG,mBAAMC,gBAAN,CAAuBP,MAAM,CAACA,MAAM,CAACC,MAAP,GAAgB,CAAjB,CAAN,CAA0BO,GAAjD,EAAsD,OAAtD,CAAR;AACD;;AACD,QAAMC,YAAY,GAAGC,uBAAUC,MAAV,CAAiB;AACpCT,IAAAA,MADoC;AAEpCC,IAAAA;AAFoC,GAAjB,CAArB;;AAIAR,EAAAA,UAAU,CAACiB,OAAX,CAAmBC,sBAASC,MAA5B,EAAoCL,YAApC;AACAd,EAAAA,UAAU,CAACoB,GAAX,CAAe,UAAf,EAA2B;AACzBC,IAAAA,IAAI,EAAEjB;AADmB,GAA3B;AAGAJ,EAAAA,UAAU,CAACiB,OAAX,CAAmBC,sBAASI,IAA5B;AACA,SAAOtB,UAAP;AACD","sourcesContent":["import { Controller, Commands, Selection, Point } from '@ali/4ever-cangjie';\nimport { ColorBlocks } from '@ali/4ever-plugin-color-blocks';\nimport { getSiblingDraggableBlocks } from '../utils';\nimport { DragMenuAction } from '../types';\n\nexport default function dragMenuCutOrCopy(controller: Controller, payload: DragMenuAction) {\n  const { node: currentBlock, action } = payload;\n  const blocks = getSiblingDraggableBlocks(controller, currentBlock);\n  if (!blocks || blocks?.length === 0) {\n    return controller;\n  }\n  let anchor: ReturnType<typeof Point.createFromParams>;\n  let focus: ReturnType<typeof Point.createFromParams>;\n  if (ColorBlocks.isColorBlocks(currentBlock)) {\n    anchor = Point.createFromParams(currentBlock.key, 'before');\n    focus = Point.createFromParams(currentBlock.key, 'after');\n  } else {\n    anchor = Point.createFromParams(blocks[0].key, 'before');\n    focus = Point.createFromParams(blocks[blocks.length - 1].key, 'after');\n  }\n  const newSelection = Selection.create({\n    anchor,\n    focus,\n  });\n  controller.command(Commands.select, newSelection);\n  controller.run('onAction', {\n    type: action!,\n  });\n  controller.command(Commands.blur);\n  return controller;\n}\n"],"file":"dragMenuCutOrCopy.js"}