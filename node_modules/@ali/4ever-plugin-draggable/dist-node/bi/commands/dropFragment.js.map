{"version":3,"sources":["../../../../src/bi/commands/dropFragment.ts"],"names":["dropFragment","controller","payload","dragFragment","dropHolder","isCopy","type","DRAG_TYPE","blocks","Array","isArray","fragment","blocksCount","length","key","dropKey","dropPosition","pagePosition","position","undefined","isSubjectGroup","DROP_POSITION","after","reverse","document","value","dropBlock","getNode","dragNodes","map","block","filter","node","Heading","isCallout","isAtCalloutEdge","query","isSubjectAtCalloutEdge","forEach","dragNode","command","Commands","setNodeByKey","data","calloutPr","logger","sum","inline"],"mappings":"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","sourcesContent":["import { Block, Commands, Controller } from '@ali/4ever-cangjie';\nimport logger from '@ali/4ever-logger';\nimport { DraggableDataProps, DRAG_TYPE, DROP_POSITION, DragBlocksProps, DragInlineProps } from '../types';\nimport moveBlockToDrop from '../utils/moveBlockToDrop';\nimport moveInlineToDrop from '../utils/moveInlineToDrop';\nimport moveImageToDrop from '../utils/moveImageToDrop';\nimport { updateDraggableData } from '../model/draggableData';\nimport isSubjectFragment from '../utils/isSubjectFragment';\nimport { omit } from 'lodash-es';\nimport { cloneDeep } from 'lodash-es';\nimport { Heading } from '@ali/4ever-plugin-heading';\n\n/**\n * drop 文档中的内容（inline | blocks）\n * controller should be dataController\n */\nexport default function dropFragment(controller: Controller, payload: DraggableDataProps) {\n  const { dragFragment, dropHolder, isCopy } = payload;\n  if (!dragFragment) return controller;\n\n  const { type } = dragFragment;\n  if (type === DRAG_TYPE.blocks && Array.isArray(dragFragment.fragment) && dropHolder) {\n    const fragment = [...dragFragment.fragment] as DragBlocksProps;\n    const blocksCount = fragment.length;\n    const { key: dropKey, dropPosition, pagePosition } = dropHolder;\n\n    if (!blocksCount || !dropKey) return controller;\n\n    const position = pagePosition !== undefined ? pagePosition : dropPosition;\n\n    // 是否是议题组\n    const isSubjectGroup = isSubjectFragment(dragFragment);\n\n    if (blocksCount > 1 && position === DROP_POSITION.after) {\n      /**\n       * 0: A\n       * 1: B\n       * 2: C\n       * 3: D\n       * 现在我们将 [C, D] drop 到 A.after，假设按照正常顺序结果是：\n       * 待移动 [C, D]，文档: [A, B, C, D]\n       * 待移动 [D]，文档: [A, C, B, D]\n       * 待移动 []，文档: [A, D, C, B]\n       * 因为 A.after 是一个固定位，最终的结果 [D, C] 与预期不符，reverse 的话:\n       * 待移动 [D, C]，文档: [A, B, C, D]\n       * 待移动 [C]，文档: [A, D, B, C]\n       * 待移动 []，文档: [A, C, D, B]\n       * 最终结果 [C, D] 的顺序得以保留\n       */\n      fragment.reverse();\n    }\n\n    const { document } = controller.value;\n    const dropBlock = document.getNode(dropKey);\n\n    const dragNodes = dropBlock\n      ? fragment\n        .map((block) => moveBlockToDrop(controller, block.key, dropBlock, position, isCopy))\n        .filter((node) => !!node) as Block[]\n      : [];\n\n    if (Heading.isCallout(dropBlock)) {\n      // dropBlock 是 callout 的边缘节点\n      const isAtCalloutEdge = controller.query('getCalloutStartBlock', dropBlock as any) === dropBlock || controller.query('getCalloutEndBlock', dropBlock as any) === dropBlock;\n      // 在 callout 边缘的议题组则不予处理\n      const isSubjectAtCalloutEdge = isSubjectGroup && isAtCalloutEdge;\n      if (!isSubjectAtCalloutEdge) {\n        dragNodes.forEach((dragNode) => controller.command(Commands.setNodeByKey, dragNode.key, {\n          data: {\n            // 兜底处理，拖进 callout 的 subjectPr 置空\n            ...omit(dragNode.data, 'subjectPr'),\n            calloutPr: cloneDeep((dropBlock as any).data.calloutPr),\n          },\n        }));\n      }\n    }\n\n    if (blocksCount === 1) {\n      logger.sum('drag_block');\n    } else {\n      logger.sum('drag_blocks');\n    }\n  } else if (type === DRAG_TYPE.inline && (dragFragment.fragment as DragInlineProps).type === 'image' && dropHolder) {\n    const { dropPosition, key: dropKey } = dropHolder;\n    const { document } = controller.value;\n    const dropBlock = document.getNode(dropKey);\n    if (!dropBlock) return controller;\n    moveImageToDrop(controller, (dragFragment.fragment as DragInlineProps).key, dropBlock, dropPosition, isCopy);\n  } else if (type === DRAG_TYPE.inline && (dragFragment.fragment as DragInlineProps).key) {\n    moveInlineToDrop(controller, (dragFragment.fragment as DragInlineProps).key, isCopy);\n    logger.sum('drag_inline');\n  }\n  // 清除 controller 上的数据\n  return updateDraggableData(controller);\n}\n"],"file":"dropFragment.js"}