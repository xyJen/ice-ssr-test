"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = updateDragFragment;

var _draggableData = require("../model/draggableData");

var _dragFragment = _interopRequireDefault(require("../model/dragFragment"));

var _getDragNodes = _interopRequireDefault(require("../utils/getDragNodes"));

/**
 * 更新 dragFragment，此处的内容应是排版前的原始数据
 * 使用 action 来更新，以便排版模式下劫持后在 behaviorController 中 getDragNodes
 */
function updateDragFragment(controller, payload) {
  if (!payload) {
    // 清除
    const {
      dragFragment: oldDragFragment
    } = (0, _draggableData.getDraggableData)(controller) || {};
    if (!oldDragFragment) return controller;
    return (0, _draggableData.updateDraggableData)(controller);
  }

  const {
    event,
    key
  } = payload;
  const node = controller.value.document.getNode(key);
  if (!node) return controller; // 获取关联的可拖拽元素

  const nodes = (0, _getDragNodes.default)(controller, key);

  const dragFragment = _dragFragment.default.createDragFragment(event, nodes, controller);

  return (0, _draggableData.updateDragFragment)(controller, dragFragment);
}
//# sourceMappingURL=updateDragFragment.js.map