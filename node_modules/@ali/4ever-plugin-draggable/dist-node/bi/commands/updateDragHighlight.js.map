{"version":3,"sources":["../../../../src/bi/commands/updateDragHighlight.ts"],"names":["Heading1","Heading","updateDragHighlight","controller","payload","key","isTableHighlight","type","block","value","document","getNode","blocks","config","query","data","calloutPr","enableSubjectGroup","isHeading1","subjectPr","group","enableBorderHighlight","forEach","node","dom","dispatch","reason"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,0BAArB;AAEA;AACA;AACA;AACA;;AACe,SAASC,mBAAT,CAA6BC,UAA7B,EAAqDC,OAArD,EAA8D;AAC3E,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,gBAAgB,GAAG,KAA1B;AAAiCC,IAAAA,IAAI,GAAG;AAAxC,MAAoDH,OAA1D;AACA,QAAMI,KAAK,GAAGL,UAAU,CAACM,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCN,GAAG,IAAI,EAAzC,CAAd;AAEA,MAAI,CAACG,KAAL,EAAY,OAAOL,UAAP;AAEZ,QAAMS,MAAM,GAAG,6CAA0BT,UAA1B,EAAsCK,KAAtC,CAAf,CAN2E,CAQ3E;;AACA,QAAMK,MAAM,GAAGV,UAAU,CAACW,KAAX,CAAiB,oBAAjB,CAAf;;AACA,MAAIN,KAAK,EAAEO,IAAP,EAAaC,SAAb,IACDH,MAAM,IAAIA,MAAM,CAACI,kBAAjB,IAAuCjB,QAAQ,CAACkB,UAAT,CAAoBV,KAApB,CAAvC,IAAqEA,KAAK,CAACO,IAAN,CAAWI,SADnF,EAEE;AACA,UAAMC,KAAK,GAAG,gCAAkB,GAAEZ,KAAK,CAACH,GAAI,QAA9B,CAAd;;AACA,QAAIe,KAAJ,EAAW;AACT,UAAId,gBAAJ,EAAsB;AACpB,6CAAsBc,KAAtB;AACD,OAFD,MAEO;AACL,wCAAiBA,KAAjB;AACD;;AACD,aAAOjB,UAAP;AACD;AACF;;AAED,QAAMkB,qBAAqB,GAAGlB,UAAU,CAACW,KAAX,CAAiB,uBAAjB,CAA9B;AAEAF,EAAAA,MAAM,EAAEU,OAAR,CAAiBC,IAAD,IAAU;AACxB,UAAMC,GAAG,GAAG,0BAAcD,IAAd,CAAZ;;AACA,QAAIjB,gBAAJ,EAAsB;AACpB,2CAAsBkB,GAAtB;AACD,KAFD,MAEO;AACL,sCAAiBA,GAAjB,EAAsBH,qBAAtB;AACD;AACF,GAPD;;AASA,MAAIT,MAAM,IAAIS,qBAAd,EAAqC;AACnClB,IAAAA,UAAU,CAACsB,QAAX,CAAoB,iBAApB,EAAuC;AACrCF,MAAAA,IAAI,EAAEX,MAD+B;AAErCL,MAAAA,IAFqC;AAGrCmB,MAAAA,MAAM,EAAE;AAH6B,KAAvC;AAKD;;AAED,SAAOvB,UAAP;AACD","sourcesContent":["import { Controller, Block } from '@ali/4ever-cangjie';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { getSiblingDraggableBlocks } from '../utils/getDragNodes';\nimport { addDragHighlight, addDragTableHighlight, findDOMNodeByKey } from '../utils/domUtils';\nimport { DraggablePluginConfig } from '../types';\nimport { getClosestDom } from '../utils';\n\nconst { Heading1 } = Heading;\n\n/**\n * 给可拖拽元素加高亮（dom操作）\n * 不会引起 controller.value 变更\n */\nexport default function updateDragHighlight(controller: Controller, payload) {\n  const { key, isTableHighlight = false, type = 'hover' } = payload;\n  const block = controller.value.document.getNode(key || '') as Block;\n\n  if (!block) return controller;\n\n  const blocks = getSiblingDraggableBlocks(controller, block);\n\n  // 若支持议题拖拽，则议题的背景色需要统一\n  const config = controller.query('getDraggableConfig') as DraggablePluginConfig;\n  if (block?.data?.calloutPr ||\n    (config && config.enableSubjectGroup && Heading1.isHeading1(block) && block.data.subjectPr)\n  ) {\n    const group = findDOMNodeByKey(`${block.key}-group`);\n    if (group) {\n      if (isTableHighlight) {\n        addDragTableHighlight(group);\n      } else {\n        addDragHighlight(group);\n      }\n      return controller;\n    }\n  }\n\n  const enableBorderHighlight = controller.query('enableBorderHighlight');\n\n  blocks?.forEach((node) => {\n    const dom = getClosestDom(node);\n    if (isTableHighlight) {\n      addDragTableHighlight(dom);\n    } else {\n      addDragHighlight(dom, enableBorderHighlight);\n    }\n  });\n\n  if (blocks && enableBorderHighlight) {\n    controller.dispatch('updateHighlight', {\n      node: blocks,\n      type,\n      reason: 'dragBtn',\n    });\n  }\n\n  return controller;\n}\n"],"file":"updateDragHighlight.js"}