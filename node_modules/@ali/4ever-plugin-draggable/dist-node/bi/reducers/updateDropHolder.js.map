{"version":3,"sources":["../../../../src/bi/reducers/updateDropHolder.ts"],"names":["updateDropHolder","draggableData","payload","dropHolder","rest","key","dropPosition"],"mappings":";;;;;;;AAEe,SAASA,gBAAT,CAA0BC,aAA1B,EAA6DC,OAA7D,EAAwF;AACrG,QAAM;AAAEC,IAAAA,UAAF;AAAc,OAAGC;AAAjB,MAA0BH,aAAhC;;AAEA,MAAI,CAACC,OAAD,IAAY,CAACC,UAAjB,EAA6B;AAC3B;AACA,WAAOF,aAAP;AACD;;AAED,MACEE,UAAU,EAAEE,GAAZ,KAAoBH,OAAO,EAAEG,GAA7B,IACAF,UAAU,EAAEG,YAAZ,KAA6BJ,OAAO,EAAEI,YAFxC,EAGE;AACA;AACA,WAAOL,aAAP;AACD;;AAED,MAAI,CAACC,OAAL,EAAc;AACZ,WAAOE,IAAP;AACD;;AACD,SAAO,EACL,GAAGA,IADE;AAELD,IAAAA,UAAU,EAAED;AAFP,GAAP;AAID","sourcesContent":["import { DraggableDataProps, DropHolderProps } from '../types';\n\nexport default function updateDropHolder(draggableData: DraggableDataProps, payload?: DropHolderProps) {\n  const { dropHolder, ...rest } = draggableData;\n\n  if (!payload && !dropHolder) {\n    // 都为空不更新\n    return draggableData;\n  }\n\n  if (\n    dropHolder?.key === payload?.key &&\n    dropHolder?.dropPosition === payload?.dropPosition\n  ) {\n    // 同样位置不更新\n    return draggableData;\n  }\n\n  if (!payload) {\n    return rest;\n  }\n  return {\n    ...rest,\n    dropHolder: payload,\n  };\n}\n"],"file":"updateDropHolder.js"}