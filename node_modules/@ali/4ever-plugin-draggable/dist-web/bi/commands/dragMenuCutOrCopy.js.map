{"version":3,"sources":["../../../../src/bi/commands/dragMenuCutOrCopy.ts"],"names":["Commands","Selection","Point","ColorBlocks","getSiblingDraggableBlocks","dragMenuCutOrCopy","controller","payload","currentBlock","node","action","blocks","length","anchor","focus","isColorBlocks","createFromParams","key","newSelection","create","command","select","run","type","blur"],"mappings":"AAAA,SAAqBA,QAArB,EAA+BC,SAA/B,EAA0CC,KAA1C,QAAuD,oBAAvD;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,yBAAT;AAGA,eAAe,SAASC,iBAAT,CAA2BC,UAA3B,EAAmDC,OAAnD,EAA4E;AAAA,MAC3EC,YAD2E,GAClDD,OADkD,CACjFE,IADiF;AAAA,MAC7DC,MAD6D,GAClDH,OADkD,CAC7DG,MAD6D;AAEzF,MAAMC,MAAM,GAAGP,yBAAyB,CAACE,UAAD,EAAaE,YAAb,CAAxC;;AACA,MAAI,CAACG,MAAD,IAAW,CAAAA,MAAM,QAAN,YAAAA,MAAM,CAAEC,MAAR,MAAmB,CAAlC,EAAqC;AACnC,WAAON,UAAP;AACD;;AACD,MAAIO,MAAJ;AACA,MAAIC,KAAJ;;AACA,MAAIX,WAAW,CAACY,aAAZ,CAA0BP,YAA1B,CAAJ,EAA6C;AAC3CK,IAAAA,MAAM,GAAGX,KAAK,CAACc,gBAAN,CAAuBR,YAAY,CAACS,GAApC,EAAyC,QAAzC,CAAT;AACAH,IAAAA,KAAK,GAAGZ,KAAK,CAACc,gBAAN,CAAuBR,YAAY,CAACS,GAApC,EAAyC,OAAzC,CAAR;AACD,GAHD,MAGO;AACLJ,IAAAA,MAAM,GAAGX,KAAK,CAACc,gBAAN,CAAuBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAjC,EAAsC,QAAtC,CAAT;AACAH,IAAAA,KAAK,GAAGZ,KAAK,CAACc,gBAAN,CAAuBL,MAAM,CAACA,MAAM,CAACC,MAAP,GAAgB,CAAjB,CAAN,CAA0BK,GAAjD,EAAsD,OAAtD,CAAR;AACD;;AACD,MAAMC,YAAY,GAAGjB,SAAS,CAACkB,MAAV,CAAiB;AACpCN,IAAAA,MAAM,EAANA,MADoC;AAEpCC,IAAAA,KAAK,EAALA;AAFoC,GAAjB,CAArB;AAIAR,EAAAA,UAAU,CAACc,OAAX,CAAmBpB,QAAQ,CAACqB,MAA5B,EAAoCH,YAApC;AACAZ,EAAAA,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2B;AACzBC,IAAAA,IAAI,EAAEb;AADmB,GAA3B;AAGAJ,EAAAA,UAAU,CAACc,OAAX,CAAmBpB,QAAQ,CAACwB,IAA5B;AACA,SAAOlB,UAAP;AACD","sourcesContent":["import { Controller, Commands, Selection, Point } from '@ali/4ever-cangjie';\nimport { ColorBlocks } from '@ali/4ever-plugin-color-blocks';\nimport { getSiblingDraggableBlocks } from '../utils';\nimport { DragMenuAction } from '../types';\n\nexport default function dragMenuCutOrCopy(controller: Controller, payload: DragMenuAction) {\n  const { node: currentBlock, action } = payload;\n  const blocks = getSiblingDraggableBlocks(controller, currentBlock);\n  if (!blocks || blocks?.length === 0) {\n    return controller;\n  }\n  let anchor: ReturnType<typeof Point.createFromParams>;\n  let focus: ReturnType<typeof Point.createFromParams>;\n  if (ColorBlocks.isColorBlocks(currentBlock)) {\n    anchor = Point.createFromParams(currentBlock.key, 'before');\n    focus = Point.createFromParams(currentBlock.key, 'after');\n  } else {\n    anchor = Point.createFromParams(blocks[0].key, 'before');\n    focus = Point.createFromParams(blocks[blocks.length - 1].key, 'after');\n  }\n  const newSelection = Selection.create({\n    anchor,\n    focus,\n  });\n  controller.command(Commands.select, newSelection);\n  controller.run('onAction', {\n    type: action!,\n  });\n  controller.command(Commands.blur);\n  return controller;\n}\n"],"file":"dragMenuCutOrCopy.js"}