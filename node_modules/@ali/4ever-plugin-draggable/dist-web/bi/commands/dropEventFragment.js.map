{"version":3,"sources":["../../../../src/bi/commands/dropEventFragment.ts"],"names":["Commands","Document","Block","Value","Inline","logger","DRAG_TYPE","getFragment","dragFragment","type","fragment","blocks","Array","isArray","nodes","map","block","fromJSON","nodeJson","create","inline","key","node","dropEventFragment","controller","payload","selection","value","serializer","valueToJsonML","document","command","insertFragmentAtRange","sum","e","console","warn"],"mappings":";AAAA,SAAqBA,QAArB,EAA+BC,QAA/B,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,MAAvD,QAAqE,oBAArE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAA6BC,SAA7B;;AAEA,SAASC,WAAT,CAAqBC,YAArB,EAAsD;AAAA,MAC5CC,IAD4C,GACnCD,YADmC,CAC5CC,IAD4C;AAEpD,MAAIC,QAAyB,GAAG,IAAhC;;AACA,MAAID,IAAI,KAAKH,SAAS,CAACK,MAAnB,IAA6BC,KAAK,CAACC,OAAN,CAAcL,YAAY,CAACE,QAA3B,CAAjC,EAAuE;AACrE,QAAMI,KAAK,GAAGN,YAAY,CAACE,QAAb,CAAsBK,GAAtB,CAA0B,UAACC,KAAD,EAAW;AACjD,aAAOd,KAAK,CAACe,QAAN,cACFD,KAAK,CAACE,QADJ,EAAP;AAGD,KAJa,CAAd;AAMAR,IAAAA,QAAQ,GAAGT,QAAQ,CAACkB,MAAT,CAAgB;AACzBL,MAAAA,KAAK,EAALA;AADyB,KAAhB,CAAX;AAGD,GAVD,MAUO,IAAIL,IAAI,KAAKH,SAAS,CAACc,MAAnB,IAA8BZ,YAAY,CAACE,QAAd,CAA2CW,GAA5E,EAAiF;AACtF,QAAMC,IAAI,GAAGlB,MAAM,CAACa,QAAP,CAAiBT,YAAY,CAACE,QAAd,CAA2CQ,QAA3D,CAAb;AACA,QAAMF,KAAK,GAAGd,KAAK,CAACiB,MAAN,CAAa;AACzBV,MAAAA,IAAI,EAAE,WADmB;AAEzBK,MAAAA,KAAK,EAAE,CAACQ,IAAD;AAFkB,KAAb,CAAd;AAIAZ,IAAAA,QAAQ,GAAGT,QAAQ,CAACkB,MAAT,CAAgB;AACzBL,MAAAA,KAAK,EAAE,CAACE,KAAD;AADkB,KAAhB,CAAX;AAGD;;AAED,SAAON,QAAP;AACD;;AAED,eAAe,SAASa,iBAAT,CAA2BC,UAA3B,EAAmDC,OAAnD,EAAgF;AAAA,MACrFjB,YADqF,GACpEiB,OADoE,CACrFjB,YADqF;AAE7F,MAAI,CAACA,YAAL,EAAmB,OAAOgB,UAAP;AAF0E,MAIrFE,SAJqF,GAIvEF,UAAU,CAACG,KAJ4D,CAIrFD,SAJqF;AAK7F,MAAIhB,QAAJ;;AAGA,MAAI;AACFA,IAAAA,QAAQ,GAAGH,WAAW,CAACC,YAAD,CAAtB,CADE,CAEF;;AACAgB,IAAAA,UAAU,CAACI,UAAX,CAAsBC,aAAtB,CAAoC1B,KAAK,CAACgB,MAAN,CAAa;AAAEW,MAAAA,QAAQ,EAAEpB;AAAZ,KAAb,CAApC;;AAEA,QAAIA,QAAJ,EAAc;AACZc,MAAAA,UAAU,CAACO,OAAX,CAAmB/B,QAAQ,CAACgC,qBAA5B,EAAmDN,SAAnD,EAA8DhB,QAA9D;AACD;;AACDL,IAAAA,MAAM,CAAC4B,GAAP,CAAW,eAAX;AACD,GATD,CASE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACA7B,IAAAA,MAAM,CAAC4B,GAAP,CAAW,sBAAX;AACD;;AAED,SAAOT,UAAP;AACD","sourcesContent":["import { Controller, Commands, Document, Block, Value, Inline } from '@ali/4ever-cangjie';\nimport logger from '@ali/4ever-logger';\nimport { DraggableDataProps, DRAG_TYPE, DragFragmentProps, DragInlineProps } from '../types';\n\nfunction getFragment(dragFragment: DragFragmentProps) {\n  const { type } = dragFragment;\n  let fragment: Document | null = null;\n  if (type === DRAG_TYPE.blocks && Array.isArray(dragFragment.fragment)) {\n    const nodes = dragFragment.fragment.map((block) => {\n      return Block.fromJSON({\n        ...block.nodeJson,\n      });\n    });\n\n    fragment = Document.create({\n      nodes,\n    });\n  } else if (type === DRAG_TYPE.inline && (dragFragment.fragment as DragInlineProps).key) {\n    const node = Inline.fromJSON((dragFragment.fragment as DragInlineProps).nodeJson);\n    const block = Block.create({\n      type: 'paragraph',\n      nodes: [node],\n    });\n    fragment = Document.create({\n      nodes: [block],\n    });\n  }\n\n  return fragment;\n}\n\nexport default function dropEventFragment(controller: Controller, payload: DraggableDataProps) {\n  const { dragFragment } = payload;\n  if (!dragFragment) return controller;\n\n  const { selection } = controller.value;\n  let fragment;\n\n\n  try {\n    fragment = getFragment(dragFragment);\n    // 校验，若包含不合法数据直接放弃本次拖拽\n    controller.serializer.valueToJsonML(Value.create({ document: fragment }));\n\n    if (fragment) {\n      controller.command(Commands.insertFragmentAtRange, selection, fragment);\n    }\n    logger.sum('drag_fragment');\n  } catch (e) {\n    console.warn(e);\n    logger.sum('drag_fragment_failed');\n  }\n\n  return controller;\n}\n"],"file":"dropEventFragment.js"}