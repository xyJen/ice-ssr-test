import { Heading } from '@ali/4ever-plugin-heading';
import { getSiblingDraggableBlocks } from "../utils/getDragNodes";
import { addDragHighlight, addDragTableHighlight, findDOMNodeByKey } from "../utils/domUtils";
import { getClosestDom } from "../utils";
var Heading1 = Heading.Heading1;
/**
 * 给可拖拽元素加高亮（dom操作）
 * 不会引起 controller.value 变更
 */

export default function updateDragHighlight(controller, payload) {
  var _block$data;

  var key = payload.key,
      _payload$isTableHighl = payload.isTableHighlight,
      isTableHighlight = _payload$isTableHighl === void 0 ? false : _payload$isTableHighl,
      _payload$type = payload.type,
      type = _payload$type === void 0 ? 'hover' : _payload$type;
  var block = controller.value.document.getNode(key || '');
  if (!block) return controller;
  var blocks = getSiblingDraggableBlocks(controller, block); // 若支持议题拖拽，则议题的背景色需要统一

  var config = controller.query('getDraggableConfig');

  if (block != null && (_block$data = block.data) != null && _block$data.calloutPr || config && config.enableSubjectGroup && Heading1.isHeading1(block) && block.data.subjectPr) {
    var group = findDOMNodeByKey(block.key + "-group");

    if (group) {
      if (isTableHighlight) {
        addDragTableHighlight(group);
      } else {
        addDragHighlight(group);
      }

      return controller;
    }
  }

  var enableBorderHighlight = controller.query('enableBorderHighlight');
  blocks == null ? void 0 : blocks.forEach(function (node) {
    var dom = getClosestDom(node);

    if (isTableHighlight) {
      addDragTableHighlight(dom);
    } else {
      addDragHighlight(dom, enableBorderHighlight);
    }
  });

  if (blocks && enableBorderHighlight) {
    controller.dispatch('updateHighlight', {
      node: blocks,
      type: type,
      reason: 'dragBtn'
    });
  }

  return controller;
}
//# sourceMappingURL=updateDragHighlight.js.map