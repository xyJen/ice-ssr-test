{"version":3,"sources":["../../../../src/bi/utils/getDropPosFromBlock.ts"],"names":["DROP_POSITION","getClosestDom","getDraggableData","Heading","COLUMN_ITEM","COLUMNS_TABLE","getDropPosFromBlock","controller","block","x","y","onlyHorizon","dropHolder","dropDomNode","document","value","dropPosition","rect","getBoundingClientRect","tableNode","closest","tableRect","left","right","table","getClosest","key","n","query","type","top","width","height","isHorizon","before","after","parentColumn","columnsRect","newRect","draggableData","pagePosition","undefined","isInTable","preDropNode","getPreviousSibling","preDropDomNode","isCallout","preDomRect","bottom"],"mappings":"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","sourcesContent":["import { Controller, Block } from '@ali/4ever-cangjie';\nimport {\n  DropHolderProps,\n  DROP_POSITION,\n} from '../types';\nimport getClosestDom from './getClosestDom';\nimport { getDraggableData } from '../model/draggableData';\nimport { Heading } from '@ali/4ever-plugin-heading';\n\nconst COLUMN_ITEM = 'data-column';\nconst COLUMNS_TABLE = 'data-columns';\n\nexport default function getDropPosFromBlock(controller: Controller, block: Block, x: number, y: number, onlyHorizon?: boolean) {\n  let dropHolder: DropHolderProps | null = null;\n  const dropDomNode = getClosestDom(block);\n  if (!dropDomNode) return dropHolder;\n  const { document } = controller.value;\n\n  let dropPosition: DROP_POSITION | undefined;\n  const rect = dropDomNode.getBoundingClientRect();\n\n  // <table> 包含了滚动，这里需要取 <table> 的上一层\n  const tableNode = dropDomNode.closest('table')?.closest('[data-cangjie-key]');\n  const tableRect = tableNode?.getBoundingClientRect();\n\n  // 判断是否是左右方向。\n  // case 1，普通元素的拖拽\n  if (!tableRect) {\n    if (x <= rect.left) {\n      dropPosition = DROP_POSITION.left;\n    }\n    if (x >= rect.right) {\n      dropPosition = DROP_POSITION.right;\n    }\n  // case 2，表格需要单独处理\n  } else if (x < tableRect.left || x > tableRect.right) {\n    // 此时一定是左右拖拽了。\n    dropPosition = x < tableRect.left ? DROP_POSITION.left : DROP_POSITION.right;\n    // 这里取父元素，作为 target node\n    const table = document.getClosest(block.key, n => {\n      return !!controller.query('isTable', n);\n    }) as Block;\n    dropHolder = {\n      type: table.type,\n      rect: {\n        top: tableRect.top,\n        left: tableRect.left,\n        width: tableRect.width,\n        height: tableRect.height,\n      },\n      key: table.key,\n      dropPosition,\n    };\n  }\n\n  const isHorizon = dropPosition === DROP_POSITION.left || dropPosition === DROP_POSITION.right;\n  // 仅左右分栏时，若不满足拖拽到段左、段右，直接返回\n  if (onlyHorizon && !isHorizon) return dropHolder;\n  if (!dropPosition) {\n    dropPosition = y < rect.top + rect.height / 2 ? DROP_POSITION.before : DROP_POSITION.after;\n  }\n\n  // 如果之前没有定义的话，现在可以使用 block 赋值\n  if (!dropHolder) {\n    dropHolder = {\n      type: block.type,\n      rect: {\n        top: rect.top,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height,\n      },\n      key: block.key,\n      dropPosition,\n    };\n  }\n\n  // 如果存在分栏拖拽，单独处理一下 rect。（target node 不需要处理）\n  const parentColumn = dropDomNode.closest(`[${COLUMN_ITEM}]`);\n  if (parentColumn && isHorizon) {\n    const columnsRect = parentColumn.closest(`[${COLUMNS_TABLE}]`)?.getBoundingClientRect();\n    if (!columnsRect) {\n      return dropHolder;\n    }\n    const newRect = parentColumn.getBoundingClientRect();\n    const { left, width } = newRect;\n    const { top, height } = columnsRect;\n    dropHolder.rect = { top, left, width, height };\n  }\n\n  // 处理跨页的情况：pagePosition（由分页模式下的 renderController 计算）\n  // 如果有跨页则覆盖 dropPosition 和 rect\n  const draggableData = getDraggableData(controller);\n  const pagePosition = draggableData?.dropHolder?.pagePosition;\n  if (draggableData && pagePosition !== undefined) {\n    dropHolder.dropPosition = pagePosition;\n    dropHolder.rect = draggableData.dropHolder?.rect;\n  }\n\n  const isInTable = controller.query('isNodeInTable', block);\n  if (\n    pagePosition === undefined &&\n    dropPosition === DROP_POSITION.before &&\n    !isInTable\n  ) {\n    const preDropNode = document.getPreviousSibling(block.key) as Block | null;\n\n    // 高亮块下的元素则不修正\n    const preDropDomNode = preDropNode && !Heading.isCallout(preDropNode) ? getClosestDom(preDropNode) : null;\n    if (preDropDomNode && dropHolder.rect) {\n      // 修正：drop 位置处于元素上方时，取前一个元素的 bottom，确保两个元素之间只有一根线\n      const preDomRect = preDropDomNode.getBoundingClientRect();\n      dropHolder.rect = {\n        top: preDomRect.bottom,\n        left: preDomRect.left,\n        height: preDomRect.height,\n        width: preDomRect.width,\n      };\n    }\n  }\n  return dropHolder;\n}\n"],"file":"getDropPosFromBlock.js"}