{"version":3,"sources":["../../../../src/bi/utils/getClosestDom.ts"],"names":["Block","Inline","constants","findDOMNodeByKey","Image","isListNode","node","isInline","data","list","pi","extra","inList","getClosestDom","nodeDom","key","isImage","querySelector","isBlock","closest","Selector","leafBlock","blockquote","e"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,oBAAzC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,KAAT,QAAsB,yBAAtB;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0C;AAAA;;AAC/C,MAAIL,MAAM,CAACM,QAAP,CAAgBD,IAAhB,CAAJ,EAA2B,OAAO,KAAP,CADoB,CAG/C;;AACA,SAAOA,IAAI,CAACE,IAAL,CAAUC,IAAV,sBAAkBH,IAAI,CAACE,IAAL,CAAUE,EAA5B,4CAAkB,cAAcC,KAAhC,qBAAkB,oBAAqBC,MAAvC,CAAP;AACD;AAED,eAAe,SAASC,aAAT,CAAuBP,IAAvB,EAA6D;AAC1E,MAAIQ,OAAuB,GAAG,IAA9B;AACA,MAAI,EAACR,IAAD,YAACA,IAAI,CAAES,GAAP,CAAJ,EAAgB,OAAOD,OAAP;;AAChB,MAAI;AACFA,IAAAA,OAAO,GAAGX,gBAAgB,CAACG,IAAI,CAACS,GAAN,CAA1B;AACA,QAAI,CAACD,OAAL,EAAc,OAAO,IAAP;;AACd,QAAIV,KAAK,CAACY,OAAN,CAAcV,IAAd,CAAJ,EAAyB;AACvBQ,MAAAA,OAAO,GAAGA,OAAO,CAACG,aAAR,CAAsB,KAAtB,CAAV;AACD,KAFD,MAEO,IAAIjB,KAAK,CAACkB,OAAN,CAAcZ,IAAd,CAAJ,EAAyB;AAC9BQ,MAAAA,OAAO,GAAGA,OAAO,CAACK,OAAR,CAAgB,2CAAhB,KAAgEL,OAAO,CAACK,OAAR,OAAoBjB,SAAS,CAACkB,QAAV,CAAmBC,SAAvC,OAAhE,IAAwHP,OAAlI;AACD;;AACD,QAAIA,OAAO,IAAIR,IAAI,CAACE,IAAL,CAAUc,UAAzB,EAAqC;AACnC;AACAR,MAAAA,OAAO,GAAGA,OAAO,CAACK,OAAR,CAAgB,YAAhB,KAAiCL,OAA3C;AACD,KAHD,MAGO,IAAIA,OAAO,IAAIT,UAAU,CAACC,IAAD,CAAzB,EAAiC;AACtC;AACAQ,MAAAA,OAAO,GAAGA,OAAO,CAACK,OAAR,CAAgB,sBAAhB,KAA2CL,OAArD;AACD;;AACD,WAAOA,OAAP;AACD,GAhBD,CAgBE,OAAOS,CAAP,EAAU,CACV;AACD;;AACD,SAAOT,OAAP;AACD","sourcesContent":["import { Block, Inline, constants } from '@ali/4ever-cangjie';\nimport { findDOMNodeByKey } from '@ali/4ever-utils';\nimport { Image } from '@ali/4ever-plugin-image';\n\nexport function isListNode(node: Block | Inline) {\n  if (Inline.isInline(node)) return false;\n\n  // 排版模式下 data.list 未下放到 nodes.nodes 中\n  return node.data.list || node.data.pi?.extra?.inList;\n}\n\nexport default function getClosestDom(node: Block | Inline): Element | null {\n  let nodeDom: Element | null = null;\n  if (!node?.key) return nodeDom;\n  try {\n    nodeDom = findDOMNodeByKey(node.key);\n    if (!nodeDom) return null;\n    if (Image.isImage(node)) {\n      nodeDom = nodeDom.querySelector('img');\n    } else if (Block.isBlock(node)) {\n      nodeDom = nodeDom.closest('[data-name=\"heading-group-title-content\"]') || nodeDom.closest(`[${constants.Selector.leafBlock}]`) || nodeDom;\n    }\n    if (nodeDom && node.data.blockquote) {\n      // 引用\n      nodeDom = nodeDom.closest('blockquote') || nodeDom;\n    } else if (nodeDom && isListNode(node)) {\n      // 列表和任务\n      nodeDom = nodeDom.closest('[data-testid=\"list\"]') || nodeDom;\n    }\n    return nodeDom;\n  } catch (e) {\n    // do nothing\n  }\n  return nodeDom;\n}\n"],"file":"getClosestDom.js"}