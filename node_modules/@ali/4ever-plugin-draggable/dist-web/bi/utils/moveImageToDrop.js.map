{"version":3,"sources":["../../../../src/bi/utils/moveImageToDrop.ts"],"names":["Inline","Commands","Paragraph","logger","DROP_POSITION","moveImageToDrop","controller","dragKey","dropBlock","dropPosition","isCopy","document","value","dragImage","getNode","undefined","parent","getParent","key","index","nodes","indexOf","after","right","draggedBlock","create","fromJSON","toJSON","command","insertNodeByKey","moveToEndOfNode","focus","removeNodeByKey","error","message"],"mappings":"AAAA,SAAsBA,MAAtB,EAA0CC,QAA1C,QAA0D,oBAA1D;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACEC,aADF;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,eAAT,CACbC,UADa,EAEbC,OAFa,EAGbC,SAHa,EAIbC,YAJa,EAKbC,MALa,EAMb;AAAA,MACQC,QADR,GACqBL,UAAU,CAACM,KADhC,CACQD,QADR;;AAEA,MAAI;AACF,QAAME,SAAS,GAAGF,QAAQ,CAACG,OAAT,CAAiBP,OAAjB,CAAlB;AACA,QAAI,CAACM,SAAL,EAAgB,OAAOE,SAAP;AAEhB,QAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,CAAmBT,SAAS,CAACU,GAA7B,CAAf;AACA,QAAI,CAACF,MAAL,EAAa,OAAO,IAAP;AAEb,QAAIG,KAAK,GAAGH,MAAM,CAACI,KAAP,CAAaC,OAAb,CAAqBb,SAArB,CAAZ;;AAEA,QAAIC,YAAY,KAAKL,aAAa,CAACkB,KAA/B,IAAwCb,YAAY,KAAKL,aAAa,CAACmB,KAA3E,EAAkF;AAChFJ,MAAAA,KAAK,IAAI,CAAT;AACD;;AAED,QAAMK,YAAY,GAAGtB,SAAS,CAACuB,MAAV,CAAiB;AACpCL,MAAAA,KAAK,EAAE,CAACpB,MAAM,CAAC0B,QAAP,CAAgBb,SAAS,CAACc,MAAV,EAAhB,CAAD;AAD6B,KAAjB,CAArB;;AAIA,QAAIjB,MAAJ,EAAY;AACVJ,MAAAA,UAAU,CACPsB,OADH,CACW3B,QAAQ,CAAC4B,eADpB,EACqCb,MAAM,CAACE,GAD5C,EACiDC,KADjD,EACwDK,YADxD,EAEGI,OAFH,CAEW3B,QAAQ,CAAC6B,eAFpB,EAEqCN,YAFrC,EAGGI,OAHH,CAGW3B,QAAQ,CAAC8B,KAHpB;AAID,KALD,MAKO;AACLzB,MAAAA,UAAU,CACPsB,OADH,CACW3B,QAAQ,CAAC4B,eADpB,EACqCb,MAAM,CAACE,GAD5C,EACiDC,KADjD,EACwDK,YADxD,EAEGI,OAFH,CAEW3B,QAAQ,CAAC+B,eAFpB,EAEqCnB,SAAS,CAACK,GAF/C,EAGGU,OAHH,CAGW3B,QAAQ,CAAC6B,eAHpB,EAGqCN,YAHrC,EAIGI,OAJH,CAIW3B,QAAQ,CAAC8B,KAJpB;AAKD;;AAED,WAAOP,YAAP;AACD,GA/BD,CA+BE,OAAOS,KAAP,EAAmB;AACnB9B,IAAAA,MAAM,CAAC8B,KAAP,kCAA4CA,KAAK,CAACC,OAAlD;AACA,WAAO,IAAP;AACD;AACF","sourcesContent":["import { Node, Block, Inline, Controller, Commands } from '@ali/4ever-cangjie';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport logger from '@ali/4ever-logger';\nimport {\n  DROP_POSITION,\n} from '../types';\n\n/**\n * 移动节点到 drop 位置\n * @param controller\n * @param dragKey\n * @param dropBlock\n * @param dropPosition\n * @param isCopy\n * @returns 返回移动后的节点\n */\nexport default function moveImageToDrop(\n  controller: Controller,\n  dragKey: string,\n  dropBlock: Node,\n  dropPosition?: DROP_POSITION,\n  isCopy?: boolean,\n) {\n  const { document } = controller.value;\n  try {\n    const dragImage = document.getNode(dragKey);\n    if (!dragImage) return undefined;\n\n    const parent = document.getParent(dropBlock.key);\n    if (!parent) return null;\n\n    let index = parent.nodes.indexOf(dropBlock as Block);\n\n    if (dropPosition === DROP_POSITION.after || dropPosition === DROP_POSITION.right) {\n      index += 1;\n    }\n\n    const draggedBlock = Paragraph.create({\n      nodes: [Inline.fromJSON(dragImage.toJSON())],\n    });\n\n    if (isCopy) {\n      controller\n        .command(Commands.insertNodeByKey, parent.key, index, draggedBlock)\n        .command(Commands.moveToEndOfNode, draggedBlock)\n        .command(Commands.focus);\n    } else {\n      controller\n        .command(Commands.insertNodeByKey, parent.key, index, draggedBlock)\n        .command(Commands.removeNodeByKey, dragImage.key)\n        .command(Commands.moveToEndOfNode, draggedBlock)\n        .command(Commands.focus);\n    }\n\n    return draggedBlock;\n  } catch (error: any) {\n    logger.error(`parse drag fragment failed: ${error.message}`);\n    return null;\n  }\n}\n"],"file":"moveImageToDrop.js"}