import { Commands, Path, Inline } from '@ali/4ever-cangjie';

function splitNodeAtCurrentRange(controller) {
  var value = controller.value;
  var document = value.document;

  var _value$selection$conv = value.selection.convertToTextPoints(document),
      start = _value$selection$conv.start;

  controller.withoutNormalizing(function () {
    controller.command(Commands.splitNodeByKey, start.key, start.offset);
  });
}

function moveNodeToCurrentRange(dragNode, controller, isCopy) {
  var value = controller.value;
  var document = value.document,
      selection = value.selection;
  var dragNodePath = document.getPath(dragNode.key);

  var _selection$convertToT = selection.convertToTextPoints(document),
      start = _selection$convertToT.start;

  var closestInline = document.getClosestInline(start.key); // 不允许拖拽到 inline 元素内部：start 可能位于行内元素附带的空文本节点或 link 内部

  var dropNode = document.assertNode(closestInline ? closestInline.key : start.key);
  var parent = document.getParent(dropNode.key);
  if (!parent || controller.query('isVoid', parent)) return;
  var dropNodePath = document.getPath(dropNode.key);
  if (!dragNodePath) return;
  var isYounger = Path.isYounger(dragNodePath, dropNodePath);
  var index = parent.nodes.indexOf(dropNode);

  if (isYounger && !isCopy) {
    index--;
  }

  if (isCopy) {
    var copyedNode = Inline.fromJSON(dragNode.toJSON());
    controller.command(Commands.insertNodeByKey, parent.key, index, copyedNode).command(Commands.focus);
  } else {
    controller.command(Commands.moveNodeByKey, dragNode.key, parent.key, index);
  }
}

export default function moveInlineToDrop(controller, dragKey, isCopy) {
  splitNodeAtCurrentRange(controller);
  var value = controller.value;
  var document = value.document,
      selection = value.selection;
  var dragNode = document.getNode(dragKey);
  if (!dragNode || !Inline.isInline(dragNode)) return;
  var start = selection.getStart(document);

  if (start.isEdgePoint()) {
    controller.command(Commands.insertEmptyBlock, start);
  }

  moveNodeToCurrentRange(dragNode, controller, isCopy);
}
//# sourceMappingURL=moveInlineToDrop.js.map