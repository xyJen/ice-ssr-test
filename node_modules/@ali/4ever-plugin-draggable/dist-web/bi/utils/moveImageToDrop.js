import { Inline, Commands } from '@ali/4ever-cangjie';
import { Paragraph } from '@ali/4ever-plugin-paragraph';
import logger from '@ali/4ever-logger';
import { DROP_POSITION } from "../types";
/**
 * 移动节点到 drop 位置
 * @param controller
 * @param dragKey
 * @param dropBlock
 * @param dropPosition
 * @param isCopy
 * @returns 返回移动后的节点
 */

export default function moveImageToDrop(controller, dragKey, dropBlock, dropPosition, isCopy) {
  var document = controller.value.document;

  try {
    var dragImage = document.getNode(dragKey);
    if (!dragImage) return undefined;
    var parent = document.getParent(dropBlock.key);
    if (!parent) return null;
    var index = parent.nodes.indexOf(dropBlock);

    if (dropPosition === DROP_POSITION.after || dropPosition === DROP_POSITION.right) {
      index += 1;
    }

    var draggedBlock = Paragraph.create({
      nodes: [Inline.fromJSON(dragImage.toJSON())]
    });

    if (isCopy) {
      controller.command(Commands.insertNodeByKey, parent.key, index, draggedBlock).command(Commands.moveToEndOfNode, draggedBlock).command(Commands.focus);
    } else {
      controller.command(Commands.insertNodeByKey, parent.key, index, draggedBlock).command(Commands.removeNodeByKey, dragImage.key).command(Commands.moveToEndOfNode, draggedBlock).command(Commands.focus);
    }

    return draggedBlock;
  } catch (error) {
    logger.error("parse drag fragment failed: " + error.message);
    return null;
  }
}
//# sourceMappingURL=moveImageToDrop.js.map