{"version":3,"sources":["../../../../src/bi/utils/getDragNodes.ts"],"names":["isEqual","Inline","isListNode","Heading","Paragraph","headingGroupList","Heading1","groupNodes","node","document","until","path","getPath","key","nodes","index","length","item","push","getSiblingDraggableBlocks","controller","query","enableSubjectGroup","enableHeadingGroup","value","selection","tableSelection","isNormalSelection","isExpanded","allBlocks","getRootBlocksAtRange","some","block","lastBlock","isHeading1","data","subjectPr","blocks","pop","condition","find","when","fold","userData","get","isParagraph","isHeading","calloutPr","startNode","res","nextNode","getDragNodes","getNode","isInline","getTransformNodes","anchor","currentBlock","getClosestBlock"],"mappings":"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","sourcesContent":["import { isEqual } from 'lodash-es';\nimport {\n  Controller,\n  Block,\n  Inline,\n  Document,\n} from '@ali/4ever-cangjie';\nimport { isListNode } from '@ali/4ever-utils';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { headingGroupList } from '@ali/4ever-plugin-heading-group';\nimport { DraggablePluginConfig } from '../types';\n\nconst {\n  Heading1,\n} = Heading;\n\n/**\n * 聚合节点组\n * @param node 聚合开始节点\n * @param document 文档模型\n * @param until 聚合截止\n * @returns\n */\nfunction groupNodes(node: Block, document: Document, until: (node: Block) => boolean): Block[] {\n  const path = document.getPath(node.key);\n\n  if (!path) {\n    return [];\n  }\n\n  const nodes: Block[] = [node];\n  let [index] = path;\n  index += 1;\n\n  while (index < document.nodes.length) {\n    const item = document.nodes[index];\n\n    if (until(item)) {\n      break;\n    }\n\n    nodes.push(item);\n    index += 1;\n  }\n\n  return nodes;\n}\n\n/**\n * 基于 getRootBlocksAtRange 获取关联的可拖拽元素集合\n * 排版模式下有 page、section、line 等自定义层级结构较为复杂，要提取出正确的可拖拽元素比较繁琐\n * @controller 应是排版前的 controller\n */\nexport function getSiblingDraggableBlocks(controller: Controller, node: Block) {\n  const {\n    enableSubjectGroup = false,\n    enableHeadingGroup = false,\n  } = (controller.query('getDraggableConfig') || {}) as DraggablePluginConfig;\n  const { selection, document } = controller.value;\n  const tableSelection = controller.query('hasTableSelection');\n  const isNormalSelection = selection.isExpanded && !tableSelection;\n  if (isNormalSelection) {\n    const allBlocks = document.getRootBlocksAtRange(selection);\n    if (\n      allBlocks.length > 1 &&\n      allBlocks.some((block) => block.key === node.key)\n    ) {\n      // 若最后一个节点附带聚合属性，则向下聚合\n      const lastBlock = allBlocks[allBlocks.length - 1];\n      if (enableSubjectGroup && Heading1.isHeading1(lastBlock) && lastBlock.data.subjectPr) {\n        const blocks = groupNodes(lastBlock, document, (item) => Heading1.isHeading1(item) && !!item.data.subjectPr);\n        allBlocks.pop();\n        allBlocks.push(...blocks);\n      } else if (enableHeadingGroup) {\n        const condition = headingGroupList.find(({ when }) => {\n          const fold = controller.userData.get(lastBlock, 'fold');\n          return when(lastBlock) && fold;\n        });\n        if (condition) {\n          const { until } = condition;\n          const blocks = groupNodes(lastBlock, document, until);\n          allBlocks.pop();\n          allBlocks.push(...blocks);\n        }\n      }\n      // 选区包含多个块级元素 且 包含当前 node\n      return allBlocks;\n    }\n  }\n\n  if ((Paragraph.isParagraph(node) || Heading.isHeading(node)) && node.data.calloutPr) {\n\n    const startNode = controller.query('findFirstBlockOfCalloutPr', node);\n    if (startNode) {\n      const res = groupNodes(startNode, document, (nextNode) => !(nextNode\n        && (Paragraph.isParagraph(nextNode) || Heading.isHeading(nextNode))\n        && !!nextNode.data.calloutPr\n        && isEqual(nextNode.data.calloutPr, node.data.calloutPr)\n      ));\n  \n      return res;\n    }\n  }\n\n  // 议题级联\n  if (enableSubjectGroup && Heading1.isHeading1(node) && node.data.subjectPr) {\n    return groupNodes(node, document, (item) => Heading1.isHeading1(item) && !!item.data.subjectPr);\n  }\n\n  // 标题分组折叠\n  if (enableHeadingGroup) {\n    const condition = headingGroupList.find(({ when }) => {\n      const fold = controller.userData.get(node, 'fold');\n      return when(node) && fold;\n    });\n    // 若标题折叠条件查询成功，则聚合节点组\n    if (condition) {\n      const { until } = condition;\n      return groupNodes(node, document, until);\n    }\n  }\n\n\n  if (!isListNode(node)) return [node];\n  // 列表级联\n  return controller.query('getListChildItems', node);\n}\n\n/**\n * 获取可拖拽元素\n */\nexport default function getDragNodes(controller: Controller, key: string) {\n  const node = controller.value.document.getNode(key);\n  if (!node) return [];\n\n  if (Inline.isInline(node)) return node;\n\n  return getSiblingDraggableBlocks(controller, node as Block);\n}\n\n/**\n * 获取关联的可转换格式的元素，目前跟可拖拽元素保持一致\n */\nexport const getTransformNodes = (controller: Controller) => {\n  const { selection, document } = controller.value;\n  const { anchor } = selection;\n  const currentBlock = document.getClosestBlock(anchor.key);\n  return getDragNodes(controller, currentBlock?.key!);\n};\n"],"file":"getDragNodes.js"}