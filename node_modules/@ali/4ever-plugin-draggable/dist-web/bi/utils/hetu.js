import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { CopyblocklinkNormal, GotoblockNormal } from '@ali/we-icon';
import { TYPE_MENU_ITEM } from '@ali/4ever-component';

var _ref = /*#__PURE__*/_createElement(CopyblocklinkNormal, null);

var _ref2 = /*#__PURE__*/_createElement(GotoblockNormal, null);

export function getHetuDragMenuItems(options) {
  var block = options.block,
      locale = options.locale,
      config = options.config,
      controller = options.controller;
  var type = block.type;
  var _block$data = block.data,
      _block$data$metadata = _block$data.metadata,
      metadata = _block$data$metadata === void 0 ? {} : _block$data$metadata,
      cardType = _block$data.cardType;
  var sync = metadata.sync,
      targetId = metadata.targetId,
      id = metadata.id,
      mimeType = metadata.type; // injection 在 block.data 没生效，直接从 value 获取

  var injections = controller.value.injections.filter(function (i) {
    return i.key === block.key;
  });
  var syncStatus = '';

  if (injections.length) {
    syncStatus = injections[0].data.syncStatus;
  } // 不支持同步块的河图插件，暂不展示


  if (!(type === 'card' && cardType === 'hetu' && config.types.includes(mimeType))) {
    return [];
  }

  var isMainSync = targetId === id; // 如果是副本同步块，在 deleted 时，不展示

  if (syncStatus === 'loading' || !isMainSync && ['deleted'].includes(syncStatus)) {
    return [];
  }

  if (!sync) {
    // 变为同步块并 copy
    return [];
  } else {
    // copyItem，但行为不一致
    var copyItem = {
      type: TYPE_MENU_ITEM,
      title: locale == null ? void 0 : locale.copySyncLink,
      icon: _ref,
      menuExtraKey: 'copySyncLink',
      role: "copySyncLink",
      onClick: function onClick() {
        config.copySyncLink(id, block.key);
      }
    };

    if (isMainSync) {
      return [copyItem];
    } else {
      var toMainItem = {
        type: TYPE_MENU_ITEM,
        title: locale == null ? void 0 : locale.toSyncMain,
        icon: _ref2,
        menuExtraKey: 'toSyncMain',
        role: "toSyncMain",
        onClick: function onClick() {
          config.toOrigin(targetId);
        }
      };
      return [copyItem, toMainItem];
    }
  }
}
//# sourceMappingURL=hetu.js.map