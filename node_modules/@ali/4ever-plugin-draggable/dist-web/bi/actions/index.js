/** ***************** for UI ***************** */
export var CLEAR_DROPHOLDER = Symbol('CLEAR_DROPHOLDER');
export var UPDATE_DRAGHANDER = Symbol('UPDATE_DRAGHANDER');
export var UPDATE_DROPHOLDER = Symbol('UPDATE_DROPHOLDER');
/** ***************** for controller ***************** */

export var DELETE_DARGFRAGMENT = Symbol('DELETE_DARGFRAGMENT');
export var UPDATE_DARGFRAGMENT = Symbol('UPDATE_DARGFRAGMENT');
export var UPDATE_DRAGHIGHLIGHT = Symbol('UPDATE_DRAGHIGHLIGHT');
export var REMOVE_DRAGHIGHLIGHT_SINGLE = Symbol('REMOVE_DRAGHIGHLIGHT_SINGLE');
export var DROP_FRAGMENT = 'DROP_FRAGMENT';
export var DROP_EVENT_FRAGMENT = Symbol('DROP_EVENT_FRAGMENT');
export var DROP_HTML = Symbol('DROP_HTML');
export var COPY_AS_URL = Symbol('COPY_AS_URL');
export var UPDATE_IMAGE_DROP_HOLDER = Symbol('UPDATE_IMAGE_DROP_HOLDER');
export var DRAG_MENU_INSERT_BEFORE = Symbol('DRAG_MENU_INSERT_BEFORE');
export var DRAG_MENU_INSERT_AFTER = Symbol('DRAG_MENU_INSERT_AFTER');
export var DRAG_MENU_CUT_OR_COPY = Symbol('DRAG_MENU_CUT_OR_COPY');
export var DRAG_MENU_DELETE = Symbol('DRAG_MENU_DELETE');
export var MOUNT_LINE_HEADER_TOOLBAR = Symbol('MOUNT_LINE_HEADER_TOOLBAR');
export function dropFragment(payload) {
  return {
    type: DROP_FRAGMENT,
    payload: payload
  };
}

function isDropFragmentAction(action) {
  return action.type === DROP_FRAGMENT;
}

export function dropEventFragment(payload) {
  return {
    type: DROP_EVENT_FRAGMENT,
    payload: payload
  };
}
export function dropHtml(payload) {
  return {
    type: DROP_HTML,
    payload: payload
  };
}
export function clearDropHolder() {
  return {
    type: CLEAR_DROPHOLDER
  };
}
export function updateDragHander(payload) {
  return {
    type: UPDATE_DRAGHANDER,
    payload: payload
  };
}
export function deleteDragFragment(payload) {
  return {
    type: DELETE_DARGFRAGMENT,
    payload: payload
  };
}
export function updateDragFragment(payload) {
  return {
    type: UPDATE_DARGFRAGMENT,
    payload: payload
  };
}
export function updateDragHighlight(payload) {
  return {
    type: UPDATE_DRAGHIGHLIGHT,
    payload: payload
  };
}
export function removeDragHighlightSingle(payload) {
  return {
    type: REMOVE_DRAGHIGHLIGHT_SINGLE,
    payload: payload
  };
}
export function updateDropHolder(payload) {
  return {
    type: UPDATE_DROPHOLDER,
    payload: payload
  };
}
export function copyAsUrl(url) {
  return {
    type: COPY_AS_URL,
    payload: {
      url: url
    }
  };
}
export function updateImageDropHolder(payload) {
  return {
    type: UPDATE_IMAGE_DROP_HOLDER,
    payload: payload
  };
}
export function dragMenuInsertBefore(payload) {
  return {
    type: DRAG_MENU_INSERT_BEFORE,
    payload: payload
  };
}
export function dragMenuInsertAfter(payload) {
  return {
    type: DRAG_MENU_INSERT_AFTER,
    payload: payload
  };
}
export function dragMenuCutOrCopy(payload) {
  return {
    type: DRAG_MENU_CUT_OR_COPY,
    payload: payload
  };
}
export function dragMenuDelete(payload) {
  return {
    type: DRAG_MENU_DELETE,
    payload: payload
  };
}
/**
 * mount 埋点
 */

export function mountDragHander() {
  return {
    type: MOUNT_LINE_HEADER_TOOLBAR
  };
}
export var actions = {};
export var isActions = {
  isDropFragmentAction: isDropFragmentAction
};
//# sourceMappingURL=index.js.map