import { DROP_FRAGMENT, UPDATE_DARGFRAGMENT, UPDATE_DRAGHIGHLIGHT, REMOVE_DRAGHIGHLIGHT_SINGLE, DROP_EVENT_FRAGMENT, DROP_HTML, UPDATE_IMAGE_DROP_HOLDER, DRAG_MENU_CUT_OR_COPY, DRAG_MENU_DELETE, DRAG_MENU_INSERT_AFTER, DRAG_MENU_INSERT_BEFORE, DELETE_DARGFRAGMENT } from "../actions";
import dropFragment from "../commands/dropFragment";
import updateDragFragment from "../commands/updateDragFragment";
import updateDragHighlight from "../commands/updateDragHighlight";
import dropEventFragment from "../commands/dropEventFragment";
import dropHtml from "../commands/dropHtml";
import updateImageDropHolder from "../commands/updateImageDropHolder";
import dragMenuInsertBefore from "../commands/dragMenuInsertBefore";
import dragMenuInsertAfter from "../commands/dragMenuInsertAfter";
import dragMenuCutOrCopy from "../commands/dragMenuCutOrCopy";
import dragMenuDelete from "../commands/dragMenuDelete";
import deleteDragFragment from "../commands/deleteDragFragment";
import removeDragHighlightSingle from "../commands/removeDragHighlightSingle";
export default function onAction(action, controller, next) {
  var type = action.type,
      payload = action.payload;

  if (type === DROP_FRAGMENT) {
    dropFragment(controller, payload);
  }

  if (type === DROP_EVENT_FRAGMENT) {
    dropEventFragment(controller, payload);
  }

  if (type === DROP_HTML) {
    dropHtml(controller, payload);
  }

  if (type === UPDATE_DARGFRAGMENT) {
    updateDragFragment(controller, payload);
  }

  if (type === UPDATE_IMAGE_DROP_HOLDER) {
    updateImageDropHolder(controller, payload);
  }

  if (type === DRAG_MENU_INSERT_AFTER) {
    dragMenuInsertAfter(controller, payload);
  }

  if (type === UPDATE_DRAGHIGHLIGHT) {
    updateDragHighlight(controller, payload);
  }

  if (type === REMOVE_DRAGHIGHLIGHT_SINGLE) {
    removeDragHighlightSingle(controller, payload);
  }

  if (type === DRAG_MENU_INSERT_BEFORE) {
    dragMenuInsertBefore(controller, payload);
  }

  if (type === DRAG_MENU_CUT_OR_COPY) {
    dragMenuCutOrCopy(controller, payload);
  }

  if (type === DRAG_MENU_DELETE) {
    dragMenuDelete(controller, payload);
  }

  if (type === DELETE_DARGFRAGMENT) {
    deleteDragFragment(controller, payload);
  }

  return next();
}
//# sourceMappingURL=onAction.js.map