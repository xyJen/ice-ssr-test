import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Inline } from '@ali/4ever-cangjie';
import { dragDirectlyStyle } from "./styled";
import dragStartHandler from "../dragEventHandlers/dragStartHandler";

var Draggable = function Draggable(props) {
  var controller = props.controller,
      renderNodeProps = props.renderNodeProps;
  var node = renderNodeProps.node; // 是否开启拖拽

  var shouldBeDraggable = !!controller.query('isNodeDraggable', {
    node: node
  });
  var dragDirectly = Inline.isInline(node);

  var handleDragStart = function handleDragStart(event) {
    dragStartHandler(event, controller, undefined, node.key);
  };

  var handleMouseDown = function handleMouseDown(event) {
    if (dragDirectly) {
      // 避免和选区冲突
      event.stopPropagation();
      event.nativeEvent.stopPropagation();
    }
  };

  if (!shouldBeDraggable) {
    return /*#__PURE__*/_createElement(React.Fragment, null, props.children);
  }

  return /*#__PURE__*/_createElement("span", {
    style: _extends({}, dragDirectlyStyle),
    draggable: 'true',
    onMouseDown: handleMouseDown,
    onDragStart: handleDragStart,
    "data-draggable": node.key
  }, props.children);
};

export default Draggable;
//# sourceMappingURL=draggable.js.map