import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import ReactDOM from 'react-dom';
import { DRAG_TYPE, DROP_POSITION } from "../types";
import { DropHolderWrapper } from "./styled";
import { getDraggableData } from "../model/draggableData";
import { DRAG_HOLDER_WRAPPER } from "../utils/domUtils";
var LINE_THICK = 4;
var HORIZ_OFFSET = 20;

var lineStyle = function lineStyle(position, rect) {
  var style = {};

  if (!rect) {
    return style;
  }

  style.left = rect.left;
  style.top = rect.top;
  var isVertical = position === DROP_POSITION.left || position === DROP_POSITION.right;

  if (isVertical) {
    style.width = LINE_THICK;
    style.height = rect.height;

    if (position === DROP_POSITION.right) {
      style.left = rect.left + (rect.width || 0) + HORIZ_OFFSET;
    } else {
      style.left = rect.left - HORIZ_OFFSET;
    }
  } else {
    style.width = rect.width;
    style.height = LINE_THICK;

    if (position === DROP_POSITION.after) {
      style.top = rect.top + (rect.height || 0);
    }
  }

  return style;
};

var DropHolder = function DropHolder(props) {
  var _dragFragment$fragmen;

  var controller = props.controller,
      dropHolder = props.dropHolder;

  var _ref = getDraggableData(controller) || {},
      dragFragment = _ref.dragFragment;

  var showHolder = (dragFragment == null ? void 0 : dragFragment.type) === DRAG_TYPE.blocks || (dragFragment == null ? void 0 : (_dragFragment$fragmen = dragFragment.fragment) == null ? void 0 : _dragFragment$fragmen.type) === 'image';

  if (!showHolder || !dragFragment || !dropHolder) {
    return null;
  }

  var _ref2 = dropHolder || {},
      rect = _ref2.rect,
      dropPosition = _ref2.dropPosition,
      pagePosition = _ref2.pagePosition;

  var position = pagePosition !== undefined ? pagePosition : dropPosition;
  var style = lineStyle(position, rect);
  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_createElement(DropHolderWrapper, {
    className: DRAG_HOLDER_WRAPPER,
    style: _extends({}, style)
  }), document.body);
};

export default DropHolder;
//# sourceMappingURL=dropHolder.js.map