{"version":3,"sources":["../../../../src/bi/components/transformButton.tsx"],"names":["React","DropdownAnimation","Menu","EMenuMode","TextMenu","MenuAdapter","useTransformMenus","styled","DraggableRole","Scrollbar","div","sizeStyle","minWidth","whiteSpace","overflow","maxHeight","Wrapper","TransformButton","props","controller","locale","getContainer","rest","distance","test","top","getBoundingClientRect","bottom","window","innerHeight","Math","max","useState","visible","setVisible","handleVisibleChange","value","hide","extras","insertTransMenus","menus","allSelected","Object","keys","filter","item","isMixed","length","text","mixed","paragraph","transform","dragTransform","vertical"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DropdownAnimation } from '@ali/we-util';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { Menu, EMenuMode } from '@ali/we-design';\nimport { TextMenu } from '@ali/we-toolbar';\nimport {\n  Menu as MenuAdapter,\n  TYPE_MENU_DATA,\n} from '@ali/4ever-component';\nimport useTransformMenus from './useTransformMenus';\nimport styled from 'styled-components';\nimport { DraggableRole } from '../../utils/role';\n\n\nconst Scrollbar = styled.div`\n  // safari下不支持，但是safari下auto表现与overlay一致\n  overflow: auto;\n  overflow: overlay;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 8px;\n    background-color: unset;\n  }\n\n  &:hover::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const sizeStyle: React.CSSProperties = {\n  minWidth: 173,\n  whiteSpace: 'nowrap',\n  overflow: 'auto',\n  maxHeight: 550,\n};\n\nexport interface InsertOnlineDocButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  getContainer: any;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default function TransformButton(props: InsertOnlineDocButtonProps) {\n  const { controller, locale, getContainer, ...rest } = props;\n  let distance: number | null = null;\n  if (typeof getContainer === 'function') {\n    const test = getContainer() as HTMLElement;\n    if (test) {\n      const top = test.getBoundingClientRect().top - 20;\n      const bottom = window.innerHeight - test.getBoundingClientRect().bottom - 20;\n      distance = Math.max(top, bottom);\n    }\n  }\n\n  const [visible, setVisible] = React.useState(false);\n\n  const handleVisibleChange = (value: boolean) => {\n    setVisible(value);\n  };\n\n  const hide = () => {\n    setVisible(false);\n  }\n\n  const {extras, menus: insertTransMenus } = useTransformMenus(locale);\n  const allSelected = Object.keys(extras).filter(item => item !== 'paragraph');\n  const isMixed = allSelected.length > 1;\n  const text = isMixed ? locale?.mixed : locale[allSelected[0]];\n\n  return (<TextMenu\n    visible={visible}\n    value={text || locale?.paragraph || ''}\n    title={locale.transform}\n    tooltip={locale.transform}\n    onVisibleChange={handleVisibleChange}\n    testid=\"transfrom-button\"\n    showTitle={true}\n    getContainer={getContainer}\n    role={DraggableRole.dragTransform}\n    overlay={(\n      <DropdownAnimation visible={visible}>\n        <Scrollbar\n          style={{\n            minWidth: 173,\n            maxHeight: distance || 'calc(50vh - 20px)',\n          }}\n        >\n          <Wrapper>\n            <Menu\n              mode={EMenuMode.vertical}\n              selectedKeys={[]}\n              destroyOverlayWhenInvisible\n              insertSubmenuToMenuRoot\n              style={sizeStyle}\n              onClick={hide}\n              getContainer={getContainer}\n              role={DraggableRole.dragTransform}\n            >\n              <MenuAdapter menus={insertTransMenus.menus as TYPE_MENU_DATA} />\n            </Menu>\n          </Wrapper>\n        </Scrollbar>\n      </DropdownAnimation>\n    )}\n    {...rest}\n  />);\n}\n\n"],"file":"transformButton.js"}