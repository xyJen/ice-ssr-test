import _extends from "@babel/runtime/helpers/extends";
import React, { useMemo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { QuoteBetaNormal } from '@ali/we-design';
import { Controller } from '@ali/4ever-cangjie';
import { Code, CodeRole } from '@ali/4ever-plugin-code';
import { ParagraphRole } from '@ali/4ever-plugin-paragraph';
import { HeadingRole } from '@ali/4ever-plugin-heading';
import { ListRole } from '@ali/4ever-plugin-list';
import { CalloutRole } from '@ali/4ever-plugin-callout';
import { BlockquoteRole } from '@ali/4ever-plugin-blockquote';
import { theme } from '@ali/4ever-utils';
import { DocToolbarH1Normal, DocToolbarH2Normal, DocToolbarH3Normal, DocToolbarH4Normal, ToolbarOrderListNormal, ToolbarCheckBoxNormal, ToolbarUnorderListNormal, DocToolbarTextNormal, DocHighBlockNormal, ChangetoNormal, SelectedNormalNormal } from '@ali/we-icon';
import { isSubjectHeading } from '@ali/4ever-plugin-subject';
import { TYPE_GROUP, TYPE_MENU_ITEM, TYPE_SUB_MENU, IconSquareBrackets } from '@ali/4ever-component';
import isConvertSelected from "../utils/isConvertSelected";
var commonHeadStyle = {
  padding: '6px 8px',
  height: 'auto',
  fontWeight: 500
};
var Selected = /*#__PURE__*/styled.span(["margin-left:20px;svg{fill:#0089FF;}"]);

var _ref = /*#__PURE__*/_createElement(Selected, null, /*#__PURE__*/_createElement(SelectedNormalNormal, null));

var _ref2 = /*#__PURE__*/_createElement(Selected, null, /*#__PURE__*/_createElement(SelectedNormalNormal, null));

var _ref3 = /*#__PURE__*/_createElement(ChangetoNormal, null);

var _ref4 = /*#__PURE__*/_createElement(DocToolbarTextNormal, null);

var _ref5 = /*#__PURE__*/_createElement(DocToolbarH1Normal, null);

var _ref6 = /*#__PURE__*/_createElement(DocToolbarH2Normal, null);

var _ref7 = /*#__PURE__*/_createElement(DocToolbarH3Normal, null);

var _ref8 = /*#__PURE__*/_createElement(DocToolbarH4Normal, null);

var _ref9 = /*#__PURE__*/_createElement(ToolbarOrderListNormal, null);

var _ref10 = /*#__PURE__*/_createElement(ToolbarUnorderListNormal, null);

var _ref11 = /*#__PURE__*/_createElement(ToolbarCheckBoxNormal, null);

var _ref12 = /*#__PURE__*/_createElement(QuoteBetaNormal, null);

var _ref13 = /*#__PURE__*/_createElement(IconSquareBrackets, null);

var _ref14 = /*#__PURE__*/_createElement(DocHighBlockNormal, null);

export default function useTransformMenus(locale, currentBlock, useCustomBlock) {
  var controller = Controller.useController();
  var disableSubjectHeading = useMemo(function () {
    return isSubjectHeading(currentBlock);
  }, [currentBlock]);
  var disableMenu = disableSubjectHeading || controller.query('isListSymbolSelected');
  var isCode = Code.isCode(currentBlock);
  var extras = useMemo(function () {
    var extrasMap = {};
    ['paragraph', 'h1', 'h2', 'h3', 'h4', 'olist', 'ulist', 'tlist', 'blockquote', 'code', 'callout'].forEach(function (key) {
      if (!useCustomBlock && isConvertSelected(key, controller)) {
        // 代表没有指定 currentBlock，由当前选区决定（选区工具栏场景）
        extrasMap[key] = _ref;
      } else if (currentBlock && isConvertSelected(key, controller, currentBlock)) {
        extrasMap[key] = _ref2;
      }
    });
    return extrasMap;
  }, [currentBlock, controller.value, useCustomBlock]);
  var menus = useMemo(function () {
    return {
      type: TYPE_SUB_MENU,
      icon: _ref3,
      title: locale == null ? void 0 : locale.transform,
      maxHeight: 550,
      overlayStyle: {
        minWidth: 173,
        overflow: 'auto'
      },
      menus: [{
        type: TYPE_GROUP,
        title: locale == null ? void 0 : locale.block,
        menus: [{
          type: TYPE_MENU_ITEM,
          menuKey: 'heading.paragraph',
          title: locale == null ? void 0 : locale.paragraph,
          icon: _ref4,
          action: 'format',
          disabled: disableMenu,
          role: ParagraphRole.paragraph,
          extra: extras['paragraph']
        }, {
          type: TYPE_MENU_ITEM,
          menuKey: 'heading.heading1',
          title: locale == null ? void 0 : locale.h1,
          icon: _ref5,
          action: 'format',
          disabled: disableMenu,
          role: HeadingRole.heading1,
          extra: extras['h1'],
          style: _extends({
            fontSize: theme['heading-1']['font-size'],
            lineHeight: theme['heading-1']['line-height']
          }, commonHeadStyle)
        }, {
          type: TYPE_MENU_ITEM,
          title: locale == null ? void 0 : locale.h2,
          menuKey: 'heading.heading2',
          icon: _ref6,
          action: 'format',
          disabled: disableMenu,
          role: HeadingRole.heading2,
          extra: extras['h2'],
          style: _extends({
            fontSize: theme['heading-2']['font-size'],
            lineHeight: theme['heading-2']['line-height']
          }, commonHeadStyle)
        }, {
          type: TYPE_MENU_ITEM,
          menuKey: 'heading.heading3',
          title: locale == null ? void 0 : locale.h3,
          icon: _ref7,
          action: 'format',
          disabled: disableMenu,
          role: HeadingRole.heading3,
          extra: extras['h3'],
          style: _extends({
            fontSize: theme['heading-3']['font-size'],
            lineHeight: theme['heading-3']['line-height']
          }, commonHeadStyle)
        }, {
          type: TYPE_MENU_ITEM,
          menuKey: 'heading.heading4',
          title: locale == null ? void 0 : locale.h4,
          icon: _ref8,
          action: 'format',
          disabled: disableMenu,
          role: HeadingRole.heading4,
          extra: extras['h4'],
          style: _extends({
            fontSize: theme['heading-4']['font-size'],
            lineHeight: theme['heading-4']['line-height']
          }, commonHeadStyle)
        }]
      }, {
        type: TYPE_GROUP,
        title: locale == null ? void 0 : locale.list,
        menus: [{
          type: TYPE_MENU_ITEM,
          menuKey: 'list.olist',
          title: locale == null ? void 0 : locale.olist,
          icon: _ref9,
          action: 'format',
          disabled: disableSubjectHeading,
          role: ListRole.listOrdered,
          extra: extras['olist']
        }, {
          type: TYPE_MENU_ITEM,
          menuKey: 'list.ulist',
          title: locale == null ? void 0 : locale.ulist,
          icon: _ref10,
          action: 'format',
          disabled: disableSubjectHeading,
          role: ListRole.listUnordered,
          extra: extras['ulist']
        }, {
          type: TYPE_MENU_ITEM,
          menuKey: 'list.tlist',
          title: locale == null ? void 0 : locale.tlist,
          icon: _ref11,
          action: 'format',
          disabled: disableSubjectHeading,
          role: ListRole.listTask,
          extra: extras['tlist']
        }]
      }, {
        type: TYPE_GROUP,
        title: locale == null ? void 0 : locale.block,
        menus: [{
          type: TYPE_MENU_ITEM,
          title: locale == null ? void 0 : locale.blockquote,
          menuKey: 'blockquote',
          icon: _ref12,
          action: 'format',
          disabled: disableMenu || isCode,
          role: BlockquoteRole.blockquote,
          extra: extras['blockquote']
        }, {
          type: TYPE_MENU_ITEM,
          title: locale == null ? void 0 : locale.code,
          menuKey: 'code',
          icon: _ref13,
          action: 'format',
          disabled: disableMenu,
          role: CodeRole.code,
          // 为 undefined 会导致显示快捷键
          extra: extras['code'] || ''
        }, {
          type: TYPE_MENU_ITEM,
          title: locale == null ? void 0 : locale.callout,
          menuKey: 'callout',
          icon: _ref14,
          action: 'format',
          disabled: disableMenu || isCode,
          role: CalloutRole.callout,
          extra: extras['callout']
        }]
      }]
    };
  }, [extras, locale, disableMenu, isCode, disableSubjectHeading]);
  return {
    extras: extras,
    menus: menus
  };
}
//# sourceMappingURL=useTransformMenus.js.map