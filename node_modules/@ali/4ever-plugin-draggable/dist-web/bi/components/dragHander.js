/* eslint-disable react-hooks/exhaustive-deps */
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import DragDrowdown from "./dargDropdown";
export default (function (config) {
  return function (_ref) {
    var controller = _ref.controller,
        currentBlock = _ref.currentBlock,
        _ref$scale = _ref.scale,
        scale = _ref$scale === void 0 ? 1 : _ref$scale;
    var composing = controller.value.composing;
    var isNewLine = controller.query('isInsertBtnDisplay', {
      node: currentBlock,
      composing: composing
    });
    var isHideDragButton = controller.query('isHideDragButton', {
      node: currentBlock
    });
    var nodeText = currentBlock == null ? void 0 : currentBlock.text;
    var showBtn = (nodeText || !isNewLine) && !isHideDragButton;

    if (showBtn) {
      var _config$draggable;

      return /*#__PURE__*/_createElement(DragDrowdown, {
        controller: controller,
        currentBlock: currentBlock,
        draggableConfig: config.draggable,
        disableDrag: !((_config$draggable = config.draggable) != null && _config$draggable.enabled),
        scale: scale
      });
    }

    return null;
  };
});
//# sourceMappingURL=dragHander.js.map