{"version":3,"sources":["../../../../src/bi/components/dragMenu.tsx"],"names":["React","useMemo","useCallback","Menu","EMenuMode","ToolbarCutNormal","ToolbarCopyNormal","ToolbarDeleteNormal","AddDownNormal","AddUpNormal","MaodianNormal","ToolbarShareNormal","PaletteNormal","Controller","ContextMenu","utils","refblockUtils","Code","Paragraph","Heading","getHetuDragMenuItems","MenuAdapter","TYPE_GROUP","TYPE_MENU_ITEM","TYPE_SUB_MENU","dragMenuInsertAfter","dragMenuInsertBefore","dragMenuCutOrCopy","dragMenuDelete","setNodeUUID","uniqueId","DragMenuActionType","getSiblingDraggableBlocks","useTransformMenus","ACTION_COPY","ACTION_CUT","sizeStyle","width","whiteSpace","commonHeadStyle","padding","height","fontWeight","menuItemSizeStyle","minWidth","canTransType","Heading1","TYPE","Heading2","Heading3","Heading4","Heading5","Heading6","canSetColorType","InsertRoles","ShareParagraphType","DragMenu","props","currentBlock","locale","handleClickMenu","getCopyURL","shareParagraph","hetu","refblock","extraTransformMenu","customizeMenus","controller","useController","blocks","onCutOrCopy","action","run","node","onClickCut","onClickCopy","onClickDelete","onClickAppend","insertTransMenus","menus","onClickInsert","onClickCopyLink","data","subjectPr","id","uuid","err","console","warn","onParagraphShare","type","query","enableUUID","dispatch","blockWithUUID","value","document","assertElement","key","shareParagraphToImFail","copyParagraphUrlFail","shareParagraphToImSuccess","copyParagraphUrlSuccess","onClickCopyRefBlock","onCopyRefBlock","block","insertMenus","transformMenus","push","map","item","hetuMenus","enable","config","paragraphMenus","icon","title","shareParagraphUrl","shareParagraphToIm","menuExtraKey","onClick","Im","role","copyParagraphUrl","Url","copyAsUrl","copyAsUrlOld","refblockMenus","getRefBlockDragMenuItems","disableNodeInRefBlock","onCopyAsRefBlock","setColorMenu","arr","copyMenu","copy","cutMenu","cut","insert","testid","append","deleteMenu","includes","paragraphColor","menuKey","length","unshift","getMenus","vertical","menuDrag"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { Menu, EMenuMode } from '@ali/we-design';\nimport {\n  ToolbarCutNormal,\n  ToolbarCopyNormal,\n  ToolbarDeleteNormal,\n  AddDownNormal,\n  AddUpNormal,\n  MaodianNormal,\n  ToolbarShareNormal,\n  PaletteNormal,\n} from '@ali/we-icon';\nimport {\n  Controller,\n  Block,\n  ContextMenu,\n  Data,\n  BlockChildren,\n} from '@ali/4ever-cangjie';\nimport { utils as refblockUtils, RefBlock } from '@ali/4ever-plugin-refblock';\nimport { Code } from '@ali/4ever-plugin-code';\nimport { Paragraph } from '@ali/4ever-plugin-paragraph';\nimport { Heading } from '@ali/4ever-plugin-heading';\nimport { getHetuDragMenuItems, HetuConfig } from '../utils/hetu';\nimport {\n  Menu as MenuAdapter,\n  TYPE_GROUP,\n  TYPE_MENU_ITEM,\n  TYPE_SUB_MENU,\n  TYPE_MENU_DATA,\n} from '@ali/4ever-component';\nimport {\n  dragMenuInsertAfter,\n  dragMenuInsertBefore,\n  dragMenuCutOrCopy,\n  dragMenuDelete,\n} from '../actions';\nimport { setNodeUUID, uniqueId } from '@ali/4ever-utils';\nimport { IMenu } from '../types';\nimport { DragMenuActionType } from '../constants';\nimport { getSiblingDraggableBlocks } from '../utils/getDragNodes';\nimport useTransformMenus from './useTransformMenus';\n\nconst { ACTION_COPY, ACTION_CUT } = ContextMenu;\n\nexport const sizeStyle: React.CSSProperties = {\n  width: 190,\n  whiteSpace: 'nowrap',\n};\n\nexport const commonHeadStyle: React.CSSProperties = {\n  padding: '6px 8px',\n  height: 'auto',\n  fontWeight: 500,\n};\n\nexport const menuItemSizeStyle: React.CSSProperties = {\n  width: '112px',\n  minWidth: '112px',\n};\n\nconst canTransType = [\n  Heading.Heading1.TYPE,\n  Heading.Heading2.TYPE,\n  Heading.Heading3.TYPE,\n  Heading.Heading4.TYPE,\n  Heading.Heading5.TYPE,\n  Heading.Heading6.TYPE,\n  Paragraph.TYPE,\n  Code.TYPE,\n];\n\nconst canSetColorType = [\n  Heading.Heading1.TYPE,\n  Heading.Heading2.TYPE,\n  Heading.Heading3.TYPE,\n  Heading.Heading4.TYPE,\n  Heading.Heading5.TYPE,\n  Heading.Heading6.TYPE,\n  Paragraph.TYPE,\n];\n\nenum InsertRoles {\n  copy = 'copy',\n  cut = 'cut',\n  copyAsUrlOld = 'copyAsUrlOld',\n  shareParagraphToIm = 'shareParagraphToIm',\n  copyParagraphUrl = 'copyParagraphUrl',\n  menuDrag = 'menuDrag',\n  insert = 'insert',\n  append = 'append',\n  delete = 'delete',\n  paragraphColor = 'paragraphColor',\n}\n\n// 分享段落链接的两种形式，im 直接发送到聊天，url 复制到剪切板\nenum ShareParagraphType {\n  Im = 'im',\n  Url = 'url',\n}\n\ninterface DragMenuRenderProps {\n  controller: Controller;\n  currentBlock: Block;\n  locale?: Record<string, string>;\n  getCopyURL?: (id: string) => string;\n  shareParagraph?: (\n    type: string,\n    uuid: string,\n    block: Block<Data, BlockChildren>,\n  ) => void;\n  hetu?: HetuConfig;\n  refblock?: refblockUtils.RefBlockDraggableConfig;\n  handleClickMenu?: any;\n  extraTransformMenu: IMenu[];\n  customizeMenus?: IMenu[];\n}\n\nconst DragMenu: React.FC<DragMenuRenderProps> = (props) => {\n  const {\n    currentBlock,\n    locale,\n    handleClickMenu,\n    getCopyURL,\n    shareParagraph,\n    hetu,\n    refblock,\n    extraTransformMenu,\n    customizeMenus = [],\n  } = props;\n  const controller = Controller.useController();\n  const blocks = useMemo(() => {\n    return getSiblingDraggableBlocks(controller, currentBlock) || [];\n  }, [controller, currentBlock]);\n\n  const onCutOrCopy = useCallback(\n    (action) => {\n      if (!currentBlock) {\n        return;\n      }\n      controller.run(\n        'onAction',\n        dragMenuCutOrCopy({\n          node: currentBlock,\n          action,\n        }),\n      );\n    },\n    [currentBlock],\n  );\n\n  const onClickCut = useCallback(() => {\n    onCutOrCopy(ACTION_CUT);\n  }, [onCutOrCopy]);\n\n  const onClickCopy = useCallback(() => {\n    onCutOrCopy(ACTION_COPY);\n  }, [onCutOrCopy]);\n\n  const onClickDelete = useCallback(() => {\n    if (!currentBlock) {\n      return;\n    }\n    controller.run('onAction', dragMenuDelete({ node: currentBlock }));\n  }, [currentBlock]);\n\n  const onClickAppend = useCallback(() => {\n    if (!currentBlock) {\n      return;\n    }\n    controller.run('onAction', dragMenuInsertAfter({ node: currentBlock }));\n  }, [currentBlock, controller]);\n\n  const { menus: insertTransMenus } = useTransformMenus(\n    locale,\n    currentBlock,\n    true,\n  );\n\n  const onClickInsert = useCallback(() => {\n    if (!currentBlock) {\n      return;\n    }\n\n    controller.run('onAction', dragMenuInsertBefore({ node: currentBlock }));\n  }, [controller, currentBlock]);\n\n  const onClickCopyLink = useCallback(() => {\n    if (!currentBlock || !getCopyURL) {\n      return;\n    }\n\n    try {\n      const {\n        data: { subjectPr = {}, uuid: id },\n      } = currentBlock;\n      let uuid = subjectPr.id || id;\n\n      if (!uuid) {\n        uuid = uniqueId();\n        controller.run('onAction', setNodeUUID(currentBlock, uuid));\n      }\n\n      getCopyURL(uuid);\n    } catch (err) {\n      console.warn(err);\n    }\n  }, [controller, currentBlock, getCopyURL]);\n\n  const onParagraphShare = useCallback(\n    (type: ShareParagraphType) => {\n      if (!currentBlock || !shareParagraph) {\n        return;\n      }\n      try {\n        const {\n          data: { subjectPr = {} },\n        } = currentBlock;\n        let uuid = subjectPr.id || controller.query('anchor', currentBlock);\n\n        if (!uuid) {\n          if (controller.enableUUID) {\n            controller.dispatch('generateUUID', { node: currentBlock });\n            const blockWithUUID = controller.value.document.assertElement(currentBlock.key);\n            uuid = controller.query('anchor', blockWithUUID);\n          } else {\n            uuid = uniqueId();\n            controller.run('onAction', setNodeUUID(currentBlock, uuid));\n          }\n        }\n        shareParagraph(type, uuid, currentBlock);\n      } catch (err) {\n        console.warn(err);\n      }\n    }, [\n      controller, currentBlock,\n      locale?.shareParagraphToImFail, locale?.copyParagraphUrlFail,\n      locale?.shareParagraphToImSuccess, locale?.copyParagraphUrlSuccess,\n      shareParagraph,\n    ],\n  );\n\n  const onClickCopyRefBlock = useCallback(() => {\n    controller.dispatch('copyAsRefBlock', blocks);\n  }, [controller, blocks]);\n\n  const onCopyRefBlock = useCallback(\n    (block: RefBlock) => {\n      controller.dispatch('copyRefBlock', block);\n    },\n    [controller],\n  );\n\n  const insertMenus = useMemo(() => {\n    const transformMenus: IMenu[] = [];\n\n    if (currentBlock) {\n      // 额外的 transform menu 能够独立存在\n      transformMenus.push(\n        ...extraTransformMenu.map((item) => ({\n          type: TYPE_MENU_ITEM,\n          action: DragMenuActionType,\n          currentBlock,\n          ...item,\n        })),\n      );\n    }\n\n    // 河图同步块的 menu 处理\n    const hetuMenus = hetu?.enable\n      ? getHetuDragMenuItems({\n        block: currentBlock,\n        locale,\n        config: hetu,\n        controller,\n      })\n      : [];\n    // 如果 shareParagraph 和 getCopyURL 都没有，不显示这个按钮\n    let paragraphMenus: any[] = [];\n    if (shareParagraph || getCopyURL) {\n      paragraphMenus = shareParagraph ? [\n        {\n          type: TYPE_SUB_MENU,\n          icon: <ToolbarShareNormal />,\n          title: locale?.shareParagraphUrl,\n          menus: [{\n            type: TYPE_MENU_ITEM,\n            title: locale?.shareParagraphToIm,\n            menuExtraKey: 'share',\n            onClick: () => onParagraphShare(ShareParagraphType.Im),\n            role: InsertRoles.shareParagraphToIm,\n          },\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.copyParagraphUrl,\n            key: 'saveUrl',\n            onClick: () => onParagraphShare(ShareParagraphType.Url),\n            role: InsertRoles.copyParagraphUrl,\n          }],\n        },\n      ] : [\n        {\n          type: TYPE_MENU_ITEM,\n          title: locale?.copyAsUrl,\n          icon: <MaodianNormal />,\n          menuExtraKey: 'copyAsUrl',\n          role: InsertRoles.copyAsUrlOld,\n          onClick: onClickCopyLink,\n        },\n      ];\n    }\n    // 引用块菜单\n    const refblockMenus = refblock?.enable\n      ? refblockUtils.getRefBlockDragMenuItems({\n        block: currentBlock,\n        locale: locale!,\n        value: controller.value,\n        disableNodeInRefBlock: (node) => controller.query('disableNodeInRefBlock', node) === true,\n        onCopyAsRefBlock: onClickCopyRefBlock,\n        onCopyRefBlock,\n      })\n      : [];\n\n    const setColorMenu = {\n      type: TYPE_GROUP,\n      menus: [] as any,\n    };\n    const arr = [\n      {\n        type: TYPE_GROUP,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.copyMenu,\n            icon: <ToolbarCopyNormal />,\n            menuExtraKey: 'copy',\n            role: InsertRoles.copy,\n            onClick: onClickCopy,\n          },\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.cutMenu,\n            icon: <ToolbarCutNormal />,\n            menuExtraKey: 'cut',\n            role: InsertRoles.cut,\n            onClick: onClickCut,\n          },\n        ],\n      },\n      {\n        type: TYPE_GROUP,\n        menus: [\n          ...paragraphMenus,\n          ...hetuMenus,\n          ...refblockMenus,\n          ...transformMenus,\n        ],\n      },\n      {\n        type: TYPE_GROUP,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            icon: <AddUpNormal />,\n            title: locale?.insert,\n            menuExtraKey: 'insert',\n            onClick: onClickInsert,\n            role: InsertRoles.insert,\n            testid: 'insert-before',\n          },\n          {\n            type: TYPE_MENU_ITEM,\n            icon: <AddDownNormal />,\n            title: locale?.append,\n            menuExtraKey: 'append',\n            onClick: onClickAppend,\n            role: InsertRoles.append,\n            testid: 'insert-after',\n          },\n        ],\n      },\n      setColorMenu,\n      {\n        type: TYPE_GROUP,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            title: locale?.deleteMenu,\n            icon: <ToolbarDeleteNormal />,\n            menuExtraKey: 'delete',\n            role: InsertRoles.delete,\n            onClick: onClickDelete,\n          },\n        ],\n      },\n    ];\n\n    if (currentBlock && canTransType.includes(currentBlock.type)) {\n      arr[0].menus.push(insertTransMenus);\n    }\n\n    if (currentBlock && canSetColorType.includes(currentBlock.type)) {\n      setColorMenu.menus.push({\n        type: TYPE_SUB_MENU,\n        title: locale?.paragraphColor,\n        icon: <PaletteNormal />,\n        menus: [\n          {\n            type: TYPE_MENU_ITEM,\n            menuKey: 'paragraphColor',\n            currentBlock,\n            role: InsertRoles.paragraphColor,\n          },\n        ],\n      });\n    }\n    if (customizeMenus.length !== 0) {\n      arr.unshift({\n        type: TYPE_GROUP,\n        menus: customizeMenus,\n      });\n    }\n    return arr;\n  }, [\n    currentBlock,\n    onClickAppend,\n    insertTransMenus,\n    onClickCopy,\n    onClickCut,\n    onClickDelete,\n    onClickInsert,\n    getCopyURL,\n    shareParagraph,\n    extraTransformMenu,\n    onClickCopyRefBlock,\n    onCopyRefBlock,\n  ]);\n\n  const getMenus = useCallback(() => {\n    return insertMenus;\n  }, [insertMenus]);\n\n  return (\n    <Menu\n      mode={EMenuMode.vertical}\n      selectedKeys={[]}\n      destroyOverlayWhenInvisible\n      insertSubmenuToMenuRoot\n      style={sizeStyle}\n      onClick={handleClickMenu}\n      testid=\"drag-menu\"\n      role={InsertRoles.menuDrag}\n    >\n      <MenuAdapter menus={getMenus() as TYPE_MENU_DATA} />\n    </Menu>\n  );\n};\n\nexport default DragMenu;\n"],"file":"dragMenu.js"}