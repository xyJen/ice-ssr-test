import _extends from "@babel/runtime/helpers/extends";
import { getBlockFromDragEvent } from "../utils/getRangeFromDragEvent";
import getDropPosFromBlock from "../utils/getDropPosFromBlock";
import getDropHolderDataFromViewKeys from "../utils/getDropHolderDataFromViewKeys";
import { getDraggableData } from "../model/draggableData";
import { DRAG_TYPE } from "../types";

function updateBlockDropHolder(controller, dropBlock, event, dragFragment) {
  var document = controller.value.document;
  var fragment = dragFragment.fragment;
  if (!fragment.length) return undefined; // 不允许落到表格单元、行列 以及 排版相关位置

  if (/^table-/.test(dropBlock.type) || /^page|^section/.test(dropBlock.key)) return undefined; // 不允许拖入到 fragment 中

  var dropKey = controller.query('getDataKey', dropBlock.key) || dropBlock.key;
  if (fragment.some(function (node) {
    return node.key === dropKey;
  })) return undefined; // 不允许表格嵌套

  if (dragFragment.isContainTable() && controller.query('isNodeInTable', dropBlock, true)) return undefined;
  var viewKeys = controller.query('getViewKeys', dropKey);
  var clientX = event.clientX,
      clientY = event.clientY;
  var nextDropHolderData = getDropPosFromBlock(controller, dropBlock, clientX, clientY);

  if (nextDropHolderData && (viewKeys == null ? void 0 : viewKeys.length) > 1) {
    // 兼容分页下段落跨页情形
    nextDropHolderData = _extends({}, nextDropHolderData, getDropHolderDataFromViewKeys(controller, event, viewKeys));
  }

  return nextDropHolderData;
}

export default function dragOverBlockHandler(event, controller, zoom) {
  var draggableData = getDraggableData(controller);
  if (!draggableData) return null;
  var dragFragment = draggableData.dragFragment; // 只处理 block 元素

  if (!dragFragment || dragFragment.type !== DRAG_TYPE.blocks) return null; // 根据 drag 事件计算命中的 block

  var block = getBlockFromDragEvent(controller, event, zoom);
  if (!block) return null;
  var nextDropHolderData = updateBlockDropHolder(controller, block, event, dragFragment);
  if (!nextDropHolderData) return null;
  return nextDropHolderData;
}
//# sourceMappingURL=dragOverBlockHandler.js.map