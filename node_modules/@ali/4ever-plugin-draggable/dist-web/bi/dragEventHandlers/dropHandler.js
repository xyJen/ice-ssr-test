import _extends from "@babel/runtime/helpers/extends";
import { APPLICATION_CANGJIE_DRAG_FRAGMENT, TEXT_HTML, TEXT_PLAIN } from '@ali/4ever-utils';
import { dropFragment, dropEventFragment, dropHtml } from "../actions";
import { getDraggableData } from "../model/draggableData";
import isNotEditable from "../utils/isNotEditable";

var dropHandler = function dropHandler(event, controller, dropHolder) {
  var _event$dataTransfer2, _event$dataTransfer3, _event$dataTransfer4;

  // 不响应链路上含有 data-cangjie-not-editable 的 drop 事件
  if (isNotEditable(event)) return;
  event.preventDefault();
  var draggableData = getDraggableData(controller);

  if (draggableData != null && draggableData.dragFragment) {
    var _event$dataTransfer;

    var fragmentData = _extends({}, draggableData, {
      isCopy: ((_event$dataTransfer = event.dataTransfer) == null ? void 0 : _event$dataTransfer.effectAllowed) === 'copy'
    });

    if (dropHolder != null && dropHolder.key) {
      // 兼容排版
      fragmentData.dropHolder = _extends({}, dropHolder, {
        key: controller.query('getDataKey', dropHolder.key) || dropHolder.key
      });
    }

    return controller.run('onAction', dropFragment(fragmentData));
  }

  var dragFragment = (_event$dataTransfer2 = event.dataTransfer) == null ? void 0 : _event$dataTransfer2.getData(APPLICATION_CANGJIE_DRAG_FRAGMENT);

  if (dragFragment) {
    var dragFragmentData = null;

    try {
      dragFragmentData = JSON.parse(dragFragment);
    } catch (e) {// do nothing
    }

    if (dragFragmentData) {
      return controller.run('onAction', dropEventFragment({
        dragFragment: _extends({}, dragFragmentData)
      }));
    }
  }

  var html = ((_event$dataTransfer3 = event.dataTransfer) == null ? void 0 : _event$dataTransfer3.getData(TEXT_HTML)) || ((_event$dataTransfer4 = event.dataTransfer) == null ? void 0 : _event$dataTransfer4.getData(TEXT_PLAIN));

  if (html) {
    return controller.run('onAction', dropHtml(html));
  }
};

export default dropHandler;
//# sourceMappingURL=dropHandler.js.map