{"version":3,"sources":["../../../../src/bi/dragEventHandlers/dragOverInlineHandler.ts"],"names":["CangjieSelectEvent","getRangeFromDragEvent","getDraggableData","DRAG_TYPE","dragOverInlineHandler","event","controller","draggableData","dragFragment","type","inline","range","value","document","selection","preFocus","convertToTextPoints","focus","nextFocus","key","offset","run"],"mappings":"AAAA,SAAqBA,kBAArB,QAA+C,oBAA/C;AACA,OAAOC,qBAAP;AACA,SACEC,gBADF;AAGA,SACEC,SADF;AAKA,eAAe,SAASC,qBAAT,CACbC,KADa,EAEbC,UAFa,EAGb;AACA,MAAMC,aAAa,GAAGL,gBAAgB,CAACI,UAAD,CAAtC;AACA,MAAI,CAACC,aAAL,EAAoB;AAFpB,MAIQC,YAJR,GAIyBD,aAJzB,CAIQC,YAJR,EAKA;;AACA,MAAI,CAACA,YAAD,IAAiBA,YAAY,CAACC,IAAb,KAAsBN,SAAS,CAACO,MAArD,EAA6D;AAE7D,MAAMC,KAAK,GAAGV,qBAAqB,CAACK,UAAD,EAAaD,KAAb,CAAnC;AACA,MAAI,CAACM,KAAL,EAAY;AATZ,0BAWgCL,UAAU,CAACM,KAX3C;AAAA,MAWQC,QAXR,qBAWQA,QAXR;AAAA,MAWkBC,SAXlB,qBAWkBA,SAXlB;AAYA,MAAMC,QAAQ,GAAGD,SAAS,CAACE,mBAAV,CAA8BH,QAA9B,EAAwCI,KAAzD;AACA,MAAMC,SAAS,GAAGP,KAAK,CAACK,mBAAN,CAA0BH,QAA1B,EAAoCI,KAAtD;;AACA,MACEF,QAAQ,CAACI,GAAT,KAAiBD,SAAS,CAACC,GAA3B,IACAJ,QAAQ,CAACK,MAAT,KAAoBF,SAAS,CAACE,MAFhC,EAGE;AACA;AACD,GAnBD,CAqBA;;;AACAd,EAAAA,UAAU,CAACe,GAAX,CAAe,iBAAf,EAAkCrB,kBAAkB,CAAC;AACnDc,IAAAA,SAAS,EAAEH;AADwC,GAAD,CAApD;AAGAL,EAAAA,UAAU,CAACe,GAAX,CAAe,gBAAf;AACD","sourcesContent":["import { Controller, CangjieSelectEvent } from '@ali/4ever-cangjie';\nimport getRangeFromDragEvent from '../utils/getRangeFromDragEvent';\nimport {\n  getDraggableData,\n} from '../model/draggableData';\nimport {\n  DRAG_TYPE,\n} from '../types';\n\n\nexport default function dragOverInlineHandler(\n  event: DragEvent,\n  controller: Controller,\n) {\n  const draggableData = getDraggableData(controller);\n  if (!draggableData) return;\n\n  const { dragFragment } = draggableData;\n  // 只处理 inline 元素\n  if (!dragFragment || dragFragment.type !== DRAG_TYPE.inline) return;\n\n  const range = getRangeFromDragEvent(controller, event);\n  if (!range) return;\n\n  const { document, selection } = controller.value;\n  const preFocus = selection.convertToTextPoints(document).focus;\n  const nextFocus = range.convertToTextPoints(document).focus;\n  if (\n    preFocus.key === nextFocus.key &&\n    preFocus.offset === nextFocus.offset\n  ) {\n    return;\n  }\n\n  // UI 层拿到不到数据层 controller，使用 action 在排版模式下同步更新选区\n  controller.run('onCangjieSelect', CangjieSelectEvent({\n    selection: range,\n  }));\n  controller.run('onCangjieFocus');\n}\n"],"file":"dragOverInlineHandler.js"}