{"version":3,"sources":["../../../../src/bi/dragEventHandlers/dropHandler.ts"],"names":["APPLICATION_CANGJIE_DRAG_FRAGMENT","TEXT_HTML","TEXT_PLAIN","dropFragment","dropEventFragment","dropHtml","getDraggableData","isNotEditable","dropHandler","event","controller","dropHolder","preventDefault","draggableData","dragFragment","fragmentData","isCopy","dataTransfer","effectAllowed","key","query","run","getData","dragFragmentData","JSON","parse","e","html"],"mappings":";AAEA,SAASA,iCAAT,EAA4CC,SAA5C,EAAuDC,UAAvD,QAAyE,kBAAzE;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,QAA1C;AACA,SAASC,gBAAT;AACA,OAAOC,aAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAClBC,KADkB,EAElBC,UAFkB,EAGlBC,UAHkB,EAIf;AAAA;;AACH;AACA,MAAIJ,aAAa,CAACE,KAAD,CAAjB,EAA0B;AAE1BA,EAAAA,KAAK,CAACG,cAAN;AACA,MAAMC,aAAa,GAAGP,gBAAgB,CAACI,UAAD,CAAtC;;AACA,MAAIG,aAAJ,YAAIA,aAAa,CAAEC,YAAnB,EAAiC;AAAA;;AAC/B,QAAMC,YAAY,gBACbF,aADa;AAEhBG,MAAAA,MAAM,EAAE,wBAAAP,KAAK,CAACQ,YAAN,yCAAoBC,aAApB,MAAsC;AAF9B,MAAlB;;AAIA,QAAIP,UAAJ,YAAIA,UAAU,CAAEQ,GAAhB,EAAqB;AACnB;AACAJ,MAAAA,YAAY,CAACJ,UAAb,gBACKA,UADL;AAEEQ,QAAAA,GAAG,EAAET,UAAU,CAACU,KAAX,CAAiB,YAAjB,EAA+BT,UAAU,CAACQ,GAA1C,KAAkDR,UAAU,CAACQ;AAFpE;AAID;;AACD,WAAOT,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2BlB,YAAY,CAACY,YAAD,CAAvC,CAAP;AACD;;AAED,MAAMD,YAAY,2BAAGL,KAAK,CAACQ,YAAT,qBAAG,qBAAoBK,OAApB,CAA4BtB,iCAA5B,CAArB;;AACA,MAAIc,YAAJ,EAAkB;AAChB,QAAIS,gBAA0C,GAAG,IAAjD;;AACA,QAAI;AACFA,MAAAA,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWX,YAAX,CAAnB;AACD,KAFD,CAEE,OAAOY,CAAP,EAAU,CACV;AACD;;AACD,QAAIH,gBAAJ,EAAsB;AACpB,aAAOb,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2BjB,iBAAiB,CAAC;AAClDU,QAAAA,YAAY,eAAOS,gBAAP;AADsC,OAAD,CAA5C,CAAP;AAGD;AACF;;AAED,MAAMI,IAAI,GAAG,yBAAAlB,KAAK,CAACQ,YAAN,0CAAoBK,OAApB,CAA4BrB,SAA5B,+BAA0CQ,KAAK,CAACQ,YAAhD,qBAA0C,qBAAoBK,OAApB,CAA4BpB,UAA5B,CAA1C,CAAb;;AAEA,MAAIyB,IAAJ,EAAU;AACR,WAAOjB,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2BhB,QAAQ,CAACsB,IAAD,CAAnC,CAAP;AACD;AACF,CA7CD;;AA+CA,eAAenB,WAAf","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { DragFragmentProps, DropHolderProps } from '../types';\nimport { APPLICATION_CANGJIE_DRAG_FRAGMENT, TEXT_HTML, TEXT_PLAIN } from '@ali/4ever-utils';\nimport { dropFragment, dropEventFragment, dropHtml } from '../actions';\nimport { getDraggableData } from '../model/draggableData';\nimport isNotEditable from '../utils/isNotEditable';\n\nconst dropHandler = (\n  event: DragEvent,\n  controller: Controller,\n  dropHolder?: DropHolderProps,\n) => {\n  // 不响应链路上含有 data-cangjie-not-editable 的 drop 事件\n  if (isNotEditable(event)) return;\n\n  event.preventDefault();\n  const draggableData = getDraggableData(controller);\n  if (draggableData?.dragFragment) {\n    const fragmentData = {\n      ...draggableData,\n      isCopy: event.dataTransfer?.effectAllowed === 'copy',\n    };\n    if (dropHolder?.key) {\n      // 兼容排版\n      fragmentData.dropHolder = {\n        ...dropHolder,\n        key: controller.query('getDataKey', dropHolder.key) || dropHolder.key,\n      };\n    }\n    return controller.run('onAction', dropFragment(fragmentData));\n  }\n\n  const dragFragment = event.dataTransfer?.getData(APPLICATION_CANGJIE_DRAG_FRAGMENT);\n  if (dragFragment) {\n    let dragFragmentData: DragFragmentProps | null = null;\n    try {\n      dragFragmentData = JSON.parse(dragFragment) as DragFragmentProps;\n    } catch (e) {\n      // do nothing\n    }\n    if (dragFragmentData) {\n      return controller.run('onAction', dropEventFragment({\n        dragFragment: { ...dragFragmentData },\n      }));\n    }\n  }\n\n  const html = event.dataTransfer?.getData(TEXT_HTML) || event.dataTransfer?.getData(TEXT_PLAIN);\n\n  if (html) {\n    return controller.run('onAction', dropHtml(html));\n  }\n};\n\nexport default dropHandler;\n"],"file":"dropHandler.js"}