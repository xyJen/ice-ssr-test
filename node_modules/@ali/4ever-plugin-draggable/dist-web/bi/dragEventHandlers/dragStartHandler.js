import { environment } from '@ali/4ever-cangjie';
import { updateDragFragment } from "../actions";
import getDragThumbnails from "../utils/getDragThumbnails";
import { SCROLLABLE_ATTRIBUTE_KEY } from "../constants";
var DRAG_BLOCK_OFFSET = 20;

var dragStartHandler = function dragStartHandler(event, controller, dragHander, inlineKey) {
  // 仅支持从 行内元素或抓手 发起的拖拽，不识别复杂组件内部冒泡的拖拽事件
  if (!dragHander && !inlineKey) return;
  var key = inlineKey || (dragHander == null ? void 0 : dragHander.viewKey);
  if (!key) return; // 通过 query 在排版模式下进行 key 转换

  var dataKey = controller.query('getDataKey', key) || key;
  var thumbnail = getDragThumbnails(controller, {
    inlineKey: inlineKey,
    viewKey: dragHander == null ? void 0 : dragHander.viewKey
  }, controller.query('getDraggableConfig')); // 允许复制和移动

  event.dataTransfer.effectAllowed = 'copyMove'; // 自定义缩略图

  if (thumbnail) {
    // 行内元素暂时不支持滚动剪裁
    var x = inlineKey ? 0 : DRAG_BLOCK_OFFSET;
    var y = 0;

    if (!inlineKey && !environment.IS_SAFARI) {
      var scrollableThumbnail = thumbnail.querySelector("[" + SCROLLABLE_ATTRIBUTE_KEY + "]");

      var _ref = scrollableThumbnail || {},
          scrollLeft = _ref.scrollLeft,
          scrollTop = _ref.scrollTop; // TODO: 根据滚动矫正缩略图偏移，后续再看看有什么更简单的办法


      x = scrollLeft || x;
      y = scrollTop || y;
    }

    event.dataTransfer.setDragImage(thumbnail, x, y);
  }

  return controller.run('onAction', updateDragFragment({
    event: event,
    key: dataKey
  }));
};

export default dragStartHandler;
//# sourceMappingURL=dragStartHandler.js.map