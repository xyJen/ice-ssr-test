{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToHTML.tsx"],"names":["React","getTagName","getAttributes","getChildren","ELEMENT_TYPE","getStyle","metadata","style","padding","bgcolor","border","backgroundColor","borderRadius","name","match","node","tag","attrs","subType","convert","path","children","map","child","index"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAEEC,UAFF,EAGEC,aAHF,EAIEC,WAJF,QAKO,kBALP;AAOA,SAASC,YAAT;;AAGA,SAASC,QAAT,CAAkBC,QAAlB,EAA0D;AACxD,MAAMC,KAA0B,GAAG;AACjCC,IAAAA,OAAO,EAAE;AADwB,GAAnC;;AADwD,aAIhBF,QAAQ,IAAI,EAJI;AAAA,0BAIhDG,OAJgD;AAAA,MAIhDA,OAJgD,6BAItC,SAJsC;AAAA,MAI3BC,MAJ2B,QAI3BA,MAJ2B;;AAKxD,MAAID,OAAJ,EAAa;AACXF,IAAAA,KAAK,CAACI,eAAN,GAAwBF,OAAxB;AACD;;AACD,MAAIC,MAAJ,EAAY;AACVH,IAAAA,KAAK,CAACG,MAAN,kBAA4BA,MAA5B;AACAH,IAAAA,KAAK,CAACK,YAAN,GAAqB,KAArB;AACD;;AACD,SAAOL,KAAP;AACD;;AAED,eAAe;AACbM,EAAAA,IAAI,EAAE,WADO;AAGbC,EAAAA,KAAK,EAAE,eAACC,IAAD,EAA2B;AAChC,QAAMC,GAAG,GAAGf,UAAU,CAACc,IAAD,CAAtB;AACA,QAAME,KAAK,GAAGf,aAAa,CAACa,IAAD,CAA3B;AACA,WAAOC,GAAG,KAAK,WAAR,IAAuB,CAAAC,KAAK,QAAL,YAAAA,KAAK,CAAEC,OAAP,MAAmBd,YAAjD;AACD,GAPY;AASbe,EAAAA,OAAO,EAAE,iBACPJ,IADO,EAEPK,IAFO,EAGPD,QAHO,EAIgB;AACvB,QAAMF,KAAK,GAAGf,aAAa,CAACa,IAAD,CAAb,IAAuB,EAArC;AAEA,QAAMM,QAAQ,GAAGlB,WAAW,CAACY,IAAD,CAAX,CAAkBO,GAAlB,CAAsB,UAACC,KAAD,EAAQC,KAAR;AAAA,aACrCL,QAAO,CAACI,KAAD,YAAYH,IAAZ,GAAkBI,KAAlB,GAD8B;AAAA,KAAtB,CAAjB;AAIA,QAAMjB,KAAK,GAAGF,QAAQ,CAACY,KAAD,oBAACA,KAAK,CAAEX,QAAR,CAAtB;AACA,wBAAO;AAAK,mBAAU,WAAf;AAA2B,MAAA,KAAK,EAAEC;AAAlC,OAA0Cc,QAA1C,CAAP;AACD;AAtBY,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  JsonML,\n  getTagName,\n  getAttributes,\n  getChildren,\n} from '@ali/4ever-utils';\nimport type { ConvertFunc } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\nimport type { ColorBlocksData } from '../models';\n\nfunction getStyle(metadata?: ColorBlocksData['metadata']) {\n  const style: React.CSSProperties = {\n    padding: '10px 14px',\n  };\n  const { bgcolor = '#FEF8E8', border } = metadata || {};\n  if (bgcolor) {\n    style.backgroundColor = bgcolor;\n  }\n  if (border) {\n    style.border = `1px solid ${border}`;\n    style.borderRadius = '8px';\n  }\n  return style;\n}\n\nexport default {\n  name: 'container',\n\n  match: (node: JsonML): boolean => {\n    const tag = getTagName(node);\n    const attrs = getAttributes(node) as Record<string, any>;\n    return tag === 'container' && attrs?.subType === ELEMENT_TYPE;\n  },\n\n  convert: (\n    node: JsonML,\n    path: number[],\n    convert: ConvertFunc,\n  ): React.ReactElement => {\n    const attrs = getAttributes(node) || {};\n\n    const children = getChildren(node).map((child, index) =>\n      convert(child, [...path, index]),\n    );\n\n    const style = getStyle(attrs?.metadata);\n    return <div data-type='container' style={style}>{children}</div>;\n  },\n};\n"],"file":"jsonMLToHTML.js"}