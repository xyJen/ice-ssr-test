{"version":3,"sources":["../../../../src/mo/serializer/markdownToHTML.ts"],"names":["validTypes","rule","uses","plugin","data","validate","params","trim","match","render","tokens","idx","_options","env","slf","m","info","nesting","attrJoin","renderToken"],"mappings":"AAEA,IAAMA,UAAU,GAAG,uCAAnB;AAEA,IAAMC,IAAwB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,CAAC;AACLC,IAAAA,MAAM,EAAE;AAAA,aAAM,OAAO,uBAAP,CAAN;AAAA,KADH;AAELC,IAAAA,IAAI,EAAE,CACJ,aADI,EAEJ;AACEC,MAAAA,QAAQ,EAAE,kBAASC,MAAT,EAAiB;AACzB,eAAOA,MAAM,CAACC,IAAP,GAAcC,KAAd,CAAoBR,UAApB,CAAP;AACD,OAHH;AAIES,MAAAA,MAAM,EAAE,gBAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,QAAvB,EAAiCC,GAAjC,EAAsCC,GAAtC,EAA2C;AACjD,YAAMC,CAAC,GAAGL,MAAM,CAACC,GAAD,CAAN,CAAYK,IAAZ,CAAiBT,IAAjB,GAAwBC,KAAxB,CAA8BR,UAA9B,CAAV,CADiD,CAEjD;;AACA,YAAIU,MAAM,CAACC,GAAD,CAAN,CAAYM,OAAZ,KAAwB,CAA5B,EAA+B;AAC7BP,UAAAA,MAAM,CAACC,GAAD,CAAN,CAAYO,QAAZ,CAAqB,OAArB,oBAA6CH,CAAC,CAAC,CAAD,CAAD,IAAQ,EAArD;AACD;;AAED,eAAOD,GAAG,CAACK,WAAJ,CAAgBT,MAAhB,EAAwBC,GAAxB,EAA6BC,QAA7B,EAAuCC,GAAvC,EAA4CC,GAA5C,CAAP;AACD;AAZH,KAFI;AAFD,GAAD;AADyB,CAAjC;AAuBA,eAAeb,IAAf","sourcesContent":["import type { MarkdownToHTMLRule } from '@ali/4ever-cangjie';\n\nconst validTypes = /^(warning|info|danger|success|tips)*$/\n\nconst rule: MarkdownToHTMLRule = {\n  uses: [{\n    plugin: () => import('markdown-it-container'),\n    data: [\n      'colorBlocks',\n      {\n        validate: function(params) {\n          return params.trim().match(validTypes);\n        },\n        render: function (tokens, idx, _options, env, slf) {\n          const m = tokens[idx].info.trim().match(validTypes);\n          // add a class to the opening tag\n          if (tokens[idx].nesting === 1) {\n            tokens[idx].attrJoin('class', `colorBlocks ${m[1] || ''}`);\n          }\n\n          return slf.renderToken(tokens, idx, _options, env, slf);\n        }\n      }\n    ]\n  }],\n};\n\nexport default rule;\n"],"file":"markdownToHTML.js"}