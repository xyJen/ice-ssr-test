{"version":3,"sources":["../../../../src/mo/serializer/jsonMLToHTML.tsx"],"names":["getStyle","metadata","style","padding","bgcolor","border","backgroundColor","borderRadius","name","match","node","tag","attrs","subType","ELEMENT_TYPE","convert","path","children","map","child","index"],"mappings":";;;;;;;;;AAAA;;AACA;;AAOA;;uBAP4B,a;;AAU5B,SAASA,QAAT,CAAkBC,QAAlB,EAA0D;AACxD,QAAMC,KAA0B,GAAG;AACjCC,IAAAA,OAAO,EAAE;AADwB,GAAnC;AAGA,QAAM;AAAEC,IAAAA,OAAO,GAAG,SAAZ;AAAuBC,IAAAA;AAAvB,MAAkCJ,QAAQ,IAAI,EAApD;;AACA,MAAIG,OAAJ,EAAa;AACXF,IAAAA,KAAK,CAACI,eAAN,GAAwBF,OAAxB;AACD;;AACD,MAAIC,MAAJ,EAAY;AACVH,IAAAA,KAAK,CAACG,MAAN,GAAgB,aAAYA,MAAO,EAAnC;AACAH,IAAAA,KAAK,CAACK,YAAN,GAAqB,KAArB;AACD;;AACD,SAAOL,KAAP;AACD;;eAEc;AACbM,EAAAA,IAAI,EAAE,WADO;AAGbC,EAAAA,KAAK,EAAGC,IAAD,IAA2B;AAChC,UAAMC,GAAG,GAAG,2BAAWD,IAAX,CAAZ;AACA,UAAME,KAAK,GAAG,8BAAcF,IAAd,CAAd;AACA,WAAOC,GAAG,KAAK,WAAR,IAAuBC,KAAK,EAAEC,OAAP,KAAmBC,kBAAjD;AACD,GAPY;AASbC,EAAAA,OAAO,EAAE,CACPL,IADO,EAEPM,IAFO,EAGPD,OAHO,KAIgB;AACvB,UAAMH,KAAK,GAAG,8BAAcF,IAAd,KAAuB,EAArC;AAEA,UAAMO,QAAQ,GAAG,4BAAYP,IAAZ,EAAkBQ,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KACrCL,OAAO,CAACI,KAAD,EAAQ,CAAC,GAAGH,IAAJ,EAAUI,KAAV,CAAR,CADQ,CAAjB;AAIA,UAAMlB,KAAK,GAAGF,QAAQ,CAACY,KAAK,EAAEX,QAAR,CAAtB;AACA,wBAAO;AAAK,mBAAU,WAAf;AAA2B,MAAA,KAAK,EAAEC;AAAlC,OAA0Ce,QAA1C,CAAP;AACD;AAtBY,C","sourcesContent":["import * as React from 'react';\nimport {\n  JsonML,\n  getTagName,\n  getAttributes,\n  getChildren,\n} from '@ali/4ever-utils';\nimport type { ConvertFunc } from '@ali/4ever-cangjie';\nimport { ELEMENT_TYPE } from '../../utils/meta';\nimport type { ColorBlocksData } from '../models';\n\nfunction getStyle(metadata?: ColorBlocksData['metadata']) {\n  const style: React.CSSProperties = {\n    padding: '10px 14px',\n  };\n  const { bgcolor = '#FEF8E8', border } = metadata || {};\n  if (bgcolor) {\n    style.backgroundColor = bgcolor;\n  }\n  if (border) {\n    style.border = `1px solid ${border}`;\n    style.borderRadius = '8px';\n  }\n  return style;\n}\n\nexport default {\n  name: 'container',\n\n  match: (node: JsonML): boolean => {\n    const tag = getTagName(node);\n    const attrs = getAttributes(node) as Record<string, any>;\n    return tag === 'container' && attrs?.subType === ELEMENT_TYPE;\n  },\n\n  convert: (\n    node: JsonML,\n    path: number[],\n    convert: ConvertFunc,\n  ): React.ReactElement => {\n    const attrs = getAttributes(node) || {};\n\n    const children = getChildren(node).map((child, index) =>\n      convert(child, [...path, index]),\n    );\n\n    const style = getStyle(attrs?.metadata);\n    return <div data-type='container' style={style}>{children}</div>;\n  },\n};\n"],"file":"jsonMLToHTML.js"}