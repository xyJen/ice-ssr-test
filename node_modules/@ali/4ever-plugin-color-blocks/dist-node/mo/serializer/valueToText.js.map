{"version":3,"sources":["../../../../src/mo/serializer/valueToText.ts"],"names":["valueToText","name","match","node","Container","isContainer","data","subType","ELEMENT_TYPE","convert","convertor","nodes","map","n","join"],"mappings":";;;;;;;AACA;;AACA;;AAEA,MAAMA,WAA4B,GAAG;AACnCC,EAAAA,IAAI,EAAE,WAD6B;;AAGnCC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV,WAAOC,+BAAUC,WAAV,CAAsBF,IAAtB,KAA+BA,IAAI,CAACG,IAAL,CAAUC,OAAV,KAAsBC,kBAA5D;AACD,GALkC;;AAOnCC,EAAAA,OAAO,CAACN,IAAD,EAAOO,SAAP,EAAkB;AACvB,WAAQP,IAAD,CAAgBQ,KAAhB,CAAsBC,GAAtB,CAA2BC,CAAD,IAAOH,SAAS,CAACG,CAAD,CAA1C,EAA+CC,IAA/C,CAAoD,EAApD,CAAP;AACD;;AATkC,CAArC;eAYed,W","sourcesContent":["import { Block, ValueToTextRule } from '@ali/4ever-cangjie';\nimport { Container } from '@ali/4ever-plugin-container';\nimport { ELEMENT_TYPE } from '../../utils/meta';\n\nconst valueToText: ValueToTextRule = {\n  name: 'container',\n\n  match(node) {\n    return Container.isContainer(node) && node.data.subType === ELEMENT_TYPE;\n  },\n\n  convert(node, convertor) {\n    return (node as Block).nodes.map((n) => convertor(n)).join('');\n  },\n};\n\nexport default valueToText;\n"],"file":"valueToText.js"}