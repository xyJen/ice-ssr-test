{"version":3,"sources":["../../../../src/mo/serializer/htmlToJsonML.ts"],"names":["name","onOpenTag","state","attrs","class","includes","type","split","metadata","showstk","bgcolor","COLOR_MAP","undefined","colorBlocks","Container","TYPE","subType","push","onCloseTag","colorBlock","pop","append"],"mappings":";;;;;;;AAEA;;AACA;;eAEe;AACbA,EAAAA,IAAI,EAAE,WADO;AAGbC,EAAAA,SAAS,EAAE,CAACC,KAAD,EAAeF,IAAf,EAA6BG,KAA7B,KAA4D;AACrE,QAAIH,IAAI,KAAK,KAAT,IAAkB,CAAC,CAACG,KAAK,CAACC,KAAN,IAAe,EAAhB,EAAoBC,QAApB,CAA6B,aAA7B,CAAvB,EAAoE,OAAO,KAAP;AAEpE,UAAMC,IAAI,GAAGH,KAAK,CAACC,KAAN,CAAYG,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAb;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,OAAO,EAAE,KADM;AAEfC,MAAAA,OAAO,EAAEJ,IAAI,GAAGK,6BAAUL,IAAV,CAAH,GAAqBM;AAFnB,KAAjB;AAKA,UAAMC,WAAmB,GAAG,CAC1BC,+BAAUC,IADgB,EAE1B;AACEC,MAAAA,OAAO,EAAE,aADX;AAEER,MAAAA,QAAQ,EAAEA;AAFZ,KAF0B,CAA5B;AAOAN,IAAAA,KAAK,CAACe,IAAN,CAAWJ,WAAX;AACA,WAAO,IAAP;AACD,GArBY;AAuBbK,EAAAA,UAAU,EAAE,CAAChB,KAAD,EAAeF,IAAf,EAA6BG,KAA7B,KAA4D;AACtE,QAAIH,IAAI,KAAK,KAAT,IAAkB,CAAC,CAACG,KAAK,CAACC,KAAN,IAAe,EAAhB,EAAoBC,QAApB,CAA6B,aAA7B,CAAvB,EAAoE,OAAO,KAAP;AACpE,UAAMc,UAAU,GAAGjB,KAAK,CAACkB,GAAN,EAAnB;AACAlB,IAAAA,KAAK,CAACmB,MAAN,CAAaF,UAAb;AACA,WAAO,IAAP;AACD;AA5BY,C","sourcesContent":["import { JsonML } from '@ali/4ever-utils';\nimport { MoState as State, MoAttributes as Attributes } from '@ali/4ever-cangjie'\nimport { Container } from '@ali/4ever-plugin-container';\nimport { COLOR_MAP } from '@ali/4ever-plugin-callout';\n\nexport default {\n  name: 'container',\n\n  onOpenTag: (state: State, name: string, attrs: Attributes): boolean => {\n    if (name !== 'div' || !(attrs.class || '').includes('colorBlocks')) return false;\n\n    const type = attrs.class.split(' ')[1];\n    const metadata = {\n      showstk: false,\n      bgcolor: type ? COLOR_MAP[type] : undefined,\n    };\n\n    const colorBlocks: JsonML = [\n      Container.TYPE,\n      {\n        subType: 'colorBlocks',\n        metadata: metadata,\n      },\n    ];\n    state.push(colorBlocks);\n    return true;\n  },\n\n  onCloseTag: (state: State, name: string, attrs: Attributes): boolean => {\n    if (name !== 'div' || !(attrs.class || '').includes('colorBlocks')) return false;\n    const colorBlock = state.pop();\n    state.append(colorBlock);\n    return true;\n  },\n};\n"],"file":"htmlToJsonML.js"}