"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getBlockStyle;

var _everUtils = require("@ali/4ever-utils");

function getBlockStyle(node, docStyle, defaultStyle) {
  let style = {};
  const block = node; // 全局的继承样式

  const {
    pPr
  } = docStyle?.docDefaults?.data || {}; // block 指定的默认样式优先级高于全局继承样式

  const inheritedData = { ...pPr,
    ...defaultStyle
  }; // 段间距

  style = { ..._everUtils.ShdUtil.toStyle(block),
    ..._everUtils.SpacingUtil.toStyle(block, inheritedData)
  };
  /**
   * 不在这里渲染行高：
   * 1. 放在外层不一定能确保 paragraph 被包裹的情况下能继承到（被中间某一层覆盖）
   * 2. 放在外层可能影响 paragraph 到 leaf-block 之间的元素（例如列表）
   */

  const {
    lineHeight,
    ...rest
  } = style;
  return rest;
}
//# sourceMappingURL=getBlockStyle.js.map