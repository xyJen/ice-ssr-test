"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var React = _interopRequireWildcard(require("react"));

var _Plugin = require("./Plugin");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var MdChangeTypePlugin = /*#__PURE__*/function (_PluginComponent) {
  (0, _inheritsLoose2.default)(MdChangeTypePlugin, _PluginComponent);

  function MdChangeTypePlugin(props) {
    var _this;

    _this = _PluginComponent.call(this, props) || this;
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  var _proto = MdChangeTypePlugin.prototype;

  _proto.handleClick = function handleClick() {
    var _this$editorConfig;

    (_this$editorConfig = this.editorConfig) === null || _this$editorConfig === void 0 ? void 0 : _this$editorConfig.richText();
  };

  _proto.render = function render() {
    var _this$editorConfig2;

    if (((_this$editorConfig2 = this.editorConfig) === null || _this$editorConfig2 === void 0 ? void 0 : _this$editorConfig2.richText) === undefined) {
      return /*#__PURE__*/React.createElement(React.Fragment, null);
    }

    return /*#__PURE__*/React.createElement("span", {
      className: "button button-type-clear",
      title: '切换富文本',
      onClick: this.handleClick
    }, "\u5BCC\u6587\u672C");
  };

  return MdChangeTypePlugin;
}(_Plugin.PluginComponent);

exports.default = MdChangeTypePlugin;
MdChangeTypePlugin.pluginName = 'clear';