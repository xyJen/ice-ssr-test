import * as React from 'react';
import { EditorConfig } from '../share/var';
import './index.less';
interface EditorProps extends EditorConfig {
    nodeMdText: React.RefObject<HTMLTextAreaElement>;
    id?: string;
    defaultValue?: string;
    value?: string;
    style?: React.CSSProperties;
    autoFocus?: boolean;
    placeholder?: string;
    readOnly?: boolean;
    className?: string;
    config?: any;
    plugins?: string[];
    text?: string;
    ref: React.RefObject<HTMLTextAreaElement>;
    nodeMdEditor?: React.RefObject<HTMLTextAreaElement>;
    useToolbar: false;
    onChange?: (data: {
        text: string;
        html: string;
    }, event?: React.ChangeEvent<HTMLTextAreaElement>) => void;
    onFocus?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;
    onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;
    onDrop?: React.DragEventHandler<HTMLTextAreaElement>;
    onScroll?: React.UIEventHandler<HTMLTextAreaElement>;
    handlePaste?: React.ClipboardEventHandler<HTMLTextAreaElement>;
    onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => string;
    richText: void;
}
declare let nodeMdText: React.RefObject<HTMLTextAreaElement>;
export { nodeMdText };
export declare const use: (comp: any, config?: any) => void;
export declare const EditorInput: (props: EditorProps) => JSX.Element;
