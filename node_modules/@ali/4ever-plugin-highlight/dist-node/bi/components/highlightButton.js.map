{"version":3,"sources":["../../../../src/bi/components/highlightButton.tsx"],"names":["HighlightButton","props","controller","locale","rest","currentHighlight","query","highlight","DEFAULT_COLOR","isCollapsedAtEdge","value","selection","isDisabled","handleChange","React","useCallback","color","run","getColorPanelMode","mode","handleSelectValueChange","EColorPickerIcon","backgroundfont","buttonTitle","HighlightRole"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;uBAN4B,a;AAE5B;;AAWe,SAASA,eAAT,CAAyBC,KAAzB,EAAsD;AACnE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAMI,gBAAgB,GAAGH,UAAU,CAACI,KAAX,CAAiB,cAAjB,CAAzB;AACA,QAAMC,SAAS,GAAG,OAAOF,gBAAP,KAA4B,QAA5B,GAAuCA,gBAAvC,GAA0DG,wBAA5E;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBP,UAAU,CAACQ,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GAAGH,iBAAiB,IAC/BP,UAAU,CAACI,KAAX,CAAiB,oBAAjB,CADc,IAEdJ,UAAU,CAACI,KAAX,CAAiB,iBAAjB,CAFc,IAGdJ,UAAU,CAACI,KAAX,CAAiB,uBAAjB,CAHL;AAMA,QAAMO,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBC,KAAD,IAAmB;AACxDd,IAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2B,2BAAaD,KAAb,CAA3B;AACD,GAFoB,EAElB,CAACd,UAAD,CAFkB,CAArB;AAIA,QAAMgB,iBAAiB,GACrBJ,KAAK,CAACC,WAAN,CAAkB,MAAMb,UAAU,CAACI,KAAX,CAAiB,mBAAjB,GAAuCa,IAA/D,EAAqE,CAACjB,UAAD,CAArE,CADF;AAGA,QAAMkB,uBAAuB,GAAGN,KAAK,CAACC,WAAN,CAAmBI,IAAD,IAA2B;AAC3EjB,IAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2B,uCAAkB;AAAEE,MAAAA;AAAF,KAAlB,CAA3B;AACD,GAF+B,EAE7B,CAACjB,UAAD,CAF6B,CAAhC;AAIA,sBACE,eAAC,sBAAD,6BACME,IADN;AAEE,IAAA,MAAM,EAAC,sBAFT;AAGE,IAAA,QAAQ,EAAE,CAAC,CAACQ,UAHd;AAIE,IAAA,KAAK,EAAEL,SAJT;AAKE,IAAA,aAAa,EAAEM,YALjB;AAME,IAAA,YAAY,EAAE,EANhB;AAOE,IAAA,cAAc,EAAC,EAPjB;AAQE,IAAA,UAAU,EAAC,EARb;AASE,IAAA,OAAO,EAAEQ,4BAAiBC,cAT5B;AAUE,IAAA,YAAY,EAAEnB,MAAM,CAACoB,WAVvB;AAWE,IAAA,IAAI,EAAEC,oBAAcjB,SAXtB;AAYE,IAAA,gBAAgB,MAZlB;AAaE,IAAA,iBAAiB,EAAEW,iBAbrB;AAcE,IAAA,mBAAmB,EAAEE;AAdvB,KADF;AAkBD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { ColorPicker, EColorPickerIcon, EColorPanelMode } from '@ali/we-toolbar';\n;\nimport { setHighlight } from '../actions';\nimport { DEFAULT_COLOR } from '../constants';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\nimport { HighlightRole } from '../../utils/role';\n\nexport interface HighlightButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function HighlightButton(props: HighlightButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const currentHighlight = controller.query('getHighlight');\n  const highlight = typeof currentHighlight === 'string' ? currentHighlight : DEFAULT_COLOR;\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInLinkCard');\n\n\n  const handleChange = React.useCallback((color: string) => {\n    controller.run('onAction', setHighlight(color));\n  }, [controller]);\n\n  const getColorPanelMode =\n    React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);\n\n  const handleSelectValueChange = React.useCallback((mode: EColorPanelMode) => {\n    controller.run('onAction', setColorPanelMode({ mode }));\n  }, [controller]);\n\n  return (\n    <ColorPicker\n      {...rest}\n      testid=\"bi-toolbar-highlight\"\n      disabled={!!isDisabled}\n      color={highlight}\n      onColorPicker={handleChange}\n      defaultColor={''}\n      automaticColor=\"\"\n      clearColor=\"\"\n      btnType={EColorPickerIcon.backgroundfont}\n      shortcutText={locale.buttonTitle}\n      role={HighlightRole.highlight}\n      showToggleSelect\n      getColorPanelMode={getColorPanelMode}\n      onSelectValueChange={handleSelectValueChange}\n    />\n  );\n}\n"],"file":"highlightButton.js"}