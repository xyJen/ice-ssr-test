{"version":3,"sources":["../../../../../src/bi/components/next/highlightButton.tsx"],"names":["HighlightButton","props","controller","locale","rest","currentHighlight","query","highlight","DEFAULT_COLOR","isCollapsedAtEdge","value","selection","isDisabled","handleChange","React","useCallback","color","run","currentPreset","mode","handleSelectValueChange","EColorPanelMode","art","normal","buttonTitle","HighlightRole"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAN4B,a;;AAab,SAASA,eAAT,CAAyBC,KAAzB,EAAsD;AACnE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAMI,gBAAgB,GAAGH,UAAU,CAACI,KAAX,CAAiB,cAAjB,CAAzB;AACA,QAAMC,SAAS,GAAG,OAAOF,gBAAP,KAA4B,QAA5B,GAAuCA,gBAAvC,GAA0DG,wBAA5E;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBP,UAAU,CAACQ,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GAAGH,iBAAiB,IAC/BP,UAAU,CAACI,KAAX,CAAiB,oBAAjB,CADc,IAEdJ,UAAU,CAACI,KAAX,CAAiB,iBAAjB,CAFc,IAGdJ,UAAU,CAACI,KAAX,CAAiB,uBAAjB,CAHL;AAMA,QAAMO,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBC,KAAD,IAAmB;AACxDd,IAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2B,2BAAaD,KAAb,CAA3B;AACD,GAFoB,EAElB,CAACd,UAAD,CAFkB,CAArB;AAIA,QAAMgB,aAAa,GAAGhB,UAAU,CAACI,KAAX,CAAiB,mBAAjB,GAAuCa,IAA7D;AAEA,QAAMC,uBAAuB,GAAGN,KAAK,CAACC,WAAN,CAAmBI,IAAD,IAA4B;AAC5EjB,IAAAA,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2B,uCAAkB;AAAEE,MAAAA,IAAI,EAAGA,IAAI,KAAK,KAAT,GAAiBE,2BAAgBC,GAAjC,GAAuCD,2BAAgBE;AAAhE,KAAlB,CAA3B;AACD,GAF+B,EAE7B,CAACrB,UAAD,CAF6B,CAAhC;AAIA,sBACE,eAAC,mCAAD;AACE,IAAA,MAAM,EAAC,sBADT;AAEE,IAAA,QAAQ,EAAE,CAAC,CAACU,UAFd;AAGE,IAAA,KAAK,EAAEL,SAHT;AAIE,IAAA,aAAa,EAAEM,YAJjB;AAKE,IAAA,KAAK,EAAEV,MAAM,CAACqB,WALhB;AAME,IAAA,OAAO,EAAErB,MAAM,CAACqB,WANlB;AAOE,IAAA,IAAI,EAAEC,oBAAclB,SAPtB;AAQE,IAAA,aAAa,EAAEW,aARjB;AASE,IAAA,qBAAqB,EAAEE;AATzB,KAUMhB,IAVN,EADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { EColorPanelMode } from '@ali/we-toolbar';\nimport { HighlightColorPicker } from '@ali/4ever-component';\nimport { setHighlight } from '../../actions';\nimport { DEFAULT_COLOR } from '../../constants';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\nimport { HighlightRole } from '../../../utils/role';\n\nexport interface HighlightButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function HighlightButton(props: HighlightButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const currentHighlight = controller.query('getHighlight');\n  const highlight = typeof currentHighlight === 'string' ? currentHighlight : DEFAULT_COLOR;\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInLinkCard');\n\n\n  const handleChange = React.useCallback((color: string) => {\n    controller.run('onAction', setHighlight(color));\n  }, [controller]);\n\n  const currentPreset = controller.query('getColorPanelMode')?.mode;\n\n  const handleSelectValueChange = React.useCallback((mode: 'normal' | 'art') => {\n    controller.run('onAction', setColorPanelMode({ mode: (mode === 'art' ? EColorPanelMode.art : EColorPanelMode.normal) }));\n  }, [controller]);\n\n  return (\n    <HighlightColorPicker\n      testid=\"bi-toolbar-highlight\"\n      disabled={!!isDisabled}\n      color={highlight}\n      onColorChange={handleChange}\n      title={locale.buttonTitle}\n      tooltip={locale.buttonTitle}\n      role={HighlightRole.highlight}\n      currentPreset={currentPreset}\n      onCurrentPresetChange={handleSelectValueChange}\n      {...rest}\n    />\n  );\n}\n"],"file":"highlightButton.js"}