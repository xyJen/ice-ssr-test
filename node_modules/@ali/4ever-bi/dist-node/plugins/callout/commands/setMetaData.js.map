{"version":3,"sources":["../../../../../src/plugins/callout/commands/setMetaData.ts"],"names":["setMetaData","controller","key","data","node","value","document","getNode","ColorBlocks","isColorBlocks","color","selection","range","Selection","create","moveToRangeOfNode","convertToTextPoints","command","Commands","select","dispatch","moveToStart","newData","metadata","run","setNodeByKey"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEO,SAASA,WAAT,CACLC,UADK,EAELC,GAFK,EAGLC,IAHK,EAIL;AACA,QAAMC,IAAI,GAAGH,UAAU,CAACI,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCL,GAAlC,CAAb;;AACA,MAAI,CAACM,oBAAYC,aAAZ,CAA0BL,IAA1B,CAAL,EAAsC;AACpC,WAAOH,UAAP;AACD;;AACD,MAAI,OAAOE,IAAI,EAAEO,KAAb,KAAuB,QAA3B,EAAqC;AACnC,UAAM;AAAEC,MAAAA,SAAS,EAAEC,KAAb;AAAoBN,MAAAA;AAApB,QAAiCL,UAAU,CAACI,KAAlD;;AACA,UAAMM,SAAS,GAAGE,uBAAUC,MAAV,CAChBF,KAAK,CAACG,iBAAN,CAAwBX,IAAxB,EAA8BH,UAA9B,EAA0Ce,mBAA1C,CAA8DV,QAA9D,CADgB,CAAlB;;AAGAL,IAAAA,UAAU,CAACgB,OAAX,CAAmBC,sBAASC,MAA5B,EAAoCR,SAApC;AACAV,IAAAA,UAAU,CAACmB,QAAX,CAAoB,UAApB,EAAgCjB,IAAI,EAAEO,KAAtC;AACAT,IAAAA,UAAU,CAACgB,OAAX,CAAmBC,sBAASG,WAA5B;AACD;;AACD,QAAMC,OAAO,GAAGnB,IAAI,IAAI,EAAxB;AACA,QAAMoB,QAAQ,GAAG,EACf,GAAGnB,IAAI,CAACD,IAAL,CAAUoB,QADE;AAEf,OAAGD;AAFY,GAAjB;AAKArB,EAAAA,UAAU,CAACuB,GAAX,CAAe,UAAf,EAA2B,kCAAoBD,QAApB,CAA3B;AAEA,SAAOtB,UAAU,CAACgB,OAAX,CAAmBC,sBAASO,YAA5B,EAA0CvB,GAA1C,EAA+C;AACpDC,IAAAA,IAAI,EAAE,EACJ,GAAGC,IAAI,CAACD,IADJ;AAEJoB,MAAAA;AAFI;AAD8C,GAA/C,CAAP;AAMD","sourcesContent":["import { Controller, Commands, Selection } from '@ali/4ever-cangjie';\nimport { ColorBlocks, ColorBlocksMetaData } from '@ali/4ever-mo';\nimport { broadcastDataChange } from '../actions';\n\nexport function setMetaData(\n  controller: Controller,\n  key: string,\n  data?: Partial<ColorBlocksMetaData>,\n) {\n  const node = controller.value.document.getNode(key);\n  if (!ColorBlocks.isColorBlocks(node)) {\n    return controller;\n  }\n  if (typeof data?.color === 'string') {\n    const { selection: range, document } = controller.value;\n    const selection = Selection.create(\n      range.moveToRangeOfNode(node, controller).convertToTextPoints(document),\n    );\n    controller.command(Commands.select, selection);\n    controller.dispatch('setColor', data?.color);\n    controller.command(Commands.moveToStart);\n  }\n  const newData = data || {};\n  const metadata = {\n    ...node.data.metadata,\n    ...newData,\n  };\n\n  controller.run('onAction', broadcastDataChange(metadata));\n\n  return controller.command(Commands.setNodeByKey, key, {\n    data: {\n      ...node.data,\n      metadata,\n    },\n  });\n}\n"],"file":"setMetaData.js"}