{"version":3,"sources":["../../../../../src/plugins/callout/commands/insertCallout.ts"],"names":["createInsertCallout","config","insertCallout","controller","text","type","selection","document","value","key","focusKey","focus","targetNode","getClosestBlock","targetPath","getPath","length","targetIndex","pop","colorBlock","ColorBlocks","createColorBlocks","getDefaultSetting","bgcolor","CalloutPlugin","COLOR_MAP","command","Commands","insertNodeByPath","moveToStartOfNode","nodes","removeNodeByKey"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEO,SAASA,mBAAT,CAA6BC,MAA7B,EAA0D;AAC/D,SAAO,SAASC,aAAT,CAAuBC,UAAvB,EAA+CC,IAAI,GAAG,EAAtD,EAA0DC,IAAI,GAAG,EAAjE,EAAqE;AAC1E,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0BJ,UAAU,CAACK,KAA3C;AACA,UAAM;AAAEC,MAAAA,GAAG,EAAEC;AAAP,QAAoBJ,SAAS,CAACK,KAApC;AACA,UAAMC,UAAU,GAAGL,QAAQ,CAACM,eAAT,CAAyBH,QAAzB,CAAnB;AACA,UAAMI,UAAU,GAAGF,UAAU,IAAIL,QAAQ,CAACQ,OAAT,CAAiBH,UAAU,CAACH,GAA5B,CAAjC;;AACA,QAAI,CAACK,UAAD,IAAe,CAACA,UAAU,CAACE,MAA/B,EAAuC;AACrC,aAAOb,UAAP;AACD;;AACD,UAAMc,WAAW,GAAGH,UAAU,CAACI,GAAX,EAApB;;AACA,UAAMC,UAAU,GAAGC,oBAAYC,iBAAZ,CAA8B,EAC/C,IAAGpB,MAAM,CAACqB,iBAAP,IAA4BrB,MAAM,CAACqB,iBAAP,EAA/B,CAD+C;AAE/C,UAAIjB,IAAI,GAAG;AAAEkB,QAAAA,OAAO,EAAEC,0BAAcC,SAAd,CAAwBpB,IAAxB,KAAiC;AAA5C,OAAH,GAAsD,EAA9D;AAF+C,KAA9B,CAAnB;;AAIAF,IAAAA,UAAU,CACPuB,OADH,CACWC,sBAASC,gBADpB,EACsCd,UADtC,EACkDG,WAAW,GAAG,CADhE,EACmEE,UADnE,EAEGO,OAFH,CAEWC,sBAASE,iBAFpB,EAEuCV,UAAU,CAACW,KAAX,CAAiB,CAAjB,CAFvC;;AAGA,QAAI,kCAAiBlB,UAAjB,CAAJ,EAAkC;AAChCT,MAAAA,UAAU,CAACuB,OAAX,CAAmBC,sBAASI,eAA5B,EAA6CnB,UAAU,CAACH,GAAxD;AACD;;AACD,WAAON,UAAP;AACD,GApBD;AAqBD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { ColorBlocks } from '@ali/4ever-mo';\nimport { CalloutPluginConfig } from '../types';\nimport { isEmptyParagraph, CalloutPlugin } from '@ali/4ever-bamboo';\n\nexport function createInsertCallout(config: CalloutPluginConfig) {\n  return function insertCallout(controller: Controller, text = '', type = '') {\n    const { selection, document } = controller.value;\n    const { key: focusKey } = selection.focus;\n    const targetNode = document.getClosestBlock(focusKey);\n    const targetPath = targetNode && document.getPath(targetNode.key);\n    if (!targetPath || !targetPath.length) {\n      return controller;\n    }\n    const targetIndex = targetPath.pop()!;\n    const colorBlock = ColorBlocks.createColorBlocks({\n      ...config.getDefaultSetting && config.getDefaultSetting(),\n      ...(type ? { bgcolor: CalloutPlugin.COLOR_MAP[type] || {} } : {}),\n    });\n    controller\n      .command(Commands.insertNodeByPath, targetPath, targetIndex + 1, colorBlock)\n      .command(Commands.moveToStartOfNode, colorBlock.nodes[0]);\n    if (isEmptyParagraph(targetNode)) {\n      controller.command(Commands.removeNodeByKey, targetNode.key);\n    }\n    return controller;\n  };\n}\n"],"file":"insertCallout.js"}