"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorPanel = ColorPanel;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _weDesign = require("@ali/we-design");

var _everBamboo = require("@ali/4ever-bamboo");

var _actions = require("../actions");

const _createElement = /*#__PURE__*/_react.default.createElement;
const {
  DEFAULTS
} = _everBamboo.CalloutPlugin;

const ColorPanelWrapper = /*#__PURE__*/_styledComponents.default.div(["background:white;padding:8px;border-radius:4px;"]);

const blockEvent = event => {
  event.stopPropagation();
  event.preventDefault();
};

function ColorPanel({
  color,
  controller,
  getNode,
  bgcolor,
  border,
  locale,
  showSticker,
  onValueChange
}) {
  const handleChange = key => value => {
    const data = {}; // @ts-ignore

    data[key] = value;
    const node = getNode();
    controller.run('onCangjieBlur');
    controller.run('onAction', (0, _actions.setMetaData)({
      node,
      data
    }));
    onValueChange && onValueChange(key, value);
  };

  const checkboxLayout = [{
    title: locale?.showEmoji || 'Show Sticker',
    defaultValue: true,
    value: Boolean(showSticker),
    onValueChange: value => {
      handleChange('showstk')(value);
    }
  }];
  return /*#__PURE__*/_createElement(ColorPanelWrapper, {
    onMouseDown: blockEvent,
    onClick: blockEvent
  }, /*#__PURE__*/_createElement(_weDesign.ColorPanel, {
    color: color,
    defaultColor: DEFAULTS.color,
    onColorClick: handleChange('color'),
    borderColor: border,
    defaultBorderColor: DEFAULTS.border,
    onBorderColorClick: handleChange('border'),
    backgroundColor: bgcolor,
    defaultBackgroundColor: DEFAULTS.bgcolor,
    onBackgroundColorClick: handleChange('bgcolor'),
    checkboxLayout: checkboxLayout,
    enableResetButton: true
  }));
}
//# sourceMappingURL=colorPanel.js.map