"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorIconMenu = void 0;

var _react = _interopRequireDefault(require("react"));

var _everBamboo = require("@ali/4ever-bamboo");

var _everComponent = require("@ali/4ever-component");

var _actions = require("../../actions");

const _createElement = /*#__PURE__*/_react.default.createElement;
const {
  DEFAULTS
} = _everBamboo.CalloutPlugin;

const ColorIconMenu = props => {
  const {
    controller,
    locale,
    getNode,
    onOverlayVisibleChange
  } = props;

  const getContainer = _everComponent.HoverToolbarHooks.useGetContainer();

  const [isOverlayVisible, setOverlayVisible] = _everComponent.HoverToolbarHooks.usePopoverVisible('callout.color', onOverlayVisibleChange);

  const node = getNode();

  const [metaData, setMetaData] = _react.default.useState(node?.data?.metadata);

  const handleValueChange = key => value => {
    setMetaData(metaData => ({ ...metaData,
      [key]: value
    }));
    const data = {}; // @ts-ignore

    data[key] = value;
    const node = getNode();
    controller.run('onCangjieBlur');
    node && controller.run('onAction', (0, _actions.setMetaData)({
      node,
      data
    }));
  };

  if (!node) return null;
  return /*#__PURE__*/_createElement(_everComponent.ComplexColorIconMenu, {
    color: metaData?.color,
    defaultColor: DEFAULTS.color,
    backgroundColor: metaData?.bgcolor || DEFAULTS.color,
    defaultBackgroundColor: DEFAULTS.bgcolor,
    borderColor: metaData?.border,
    defaultBorderColor: DEFAULTS.border,
    onColorClick: handleValueChange('color'),
    onBorderColorClick: handleValueChange('border'),
    onBackgroundColorClick: handleValueChange('bgcolor'),
    onOverlayVisibleChange: setOverlayVisible,
    isOverlayVisible: isOverlayVisible,
    getContainer: getContainer,
    tooltip: locale.colorTitle,
    role: _everBamboo.PluginRoles.calloutColor
  });
};

exports.ColorIconMenu = ColorIconMenu;
//# sourceMappingURL=colorIconMenu.js.map