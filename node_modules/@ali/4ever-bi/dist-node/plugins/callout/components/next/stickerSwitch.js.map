{"version":3,"sources":["../../../../../../src/plugins/callout/components/next/stickerSwitch.tsx"],"names":["StickerSwitchButton","props","controller","locale","getNode","node","showStk","setShowStk","React","useState","data","metadata","showstk","handleClick","useCallback","v","run","needBlur","showEmoji","PluginRoles","calloutSticker"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAIA;;uBAL4B,a;;wBAoChB,eAAC,wBAAD,O;;AAvBL,MAAMA,mBAAkD,GAAIC,KAAD,IAAW;AAC3E,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,MAAkCH,KAAxC;AACA,QAAMI,IAAI,GAAGD,OAAO,EAApB;;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBC,eAAMC,QAAN,CAAeJ,IAAI,EAAEK,IAAN,EAAYC,QAAZ,EAAsBC,OAAtB,IAAgC,KAA/C,CAA9B;;AAEA,QAAMC,WAAW,GAAGL,eAAMM,WAAN,CAAkB,MAAM;AAC1CP,IAAAA,UAAU,CAACQ,CAAC,IAAI;AACd,YAAML,IAAkC,GAAG,EAA3C,CADc,CAEd;;AACAA,MAAAA,IAAI,CAACE,OAAL,GAAe,CAACG,CAAhB;AACA,YAAMV,IAAI,GAAGD,OAAO,EAApB;AACAF,MAAAA,UAAU,CAACc,GAAX,CAAe,eAAf;AACAX,MAAAA,IAAI,IAAIH,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,0BAAkB;AAAEX,QAAAA,IAAF;AAAQK,QAAAA,IAAR;AAAcO,QAAAA,QAAQ,EAAE;AAAxB,OAAlB,CAA3B,CAAR;AACA,aAAO,CAACF,CAAR;AACD,KARS,CAAV;AASD,GAVmB,EAUjB,EAViB,CAApB;;AAYA,MAAI,CAACV,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE,eAAC,yBAAD;AACE,IAAA,OAAO,EAAEQ,WADX;AAEE,IAAA,MAAM,EAAEP,OAFV;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,OAAO,EAAEH,MAAM,EAAEe,SAAR,IAAqB,cAJhC;AAKE,IAAA,IAAI,EAAEC,wBAAYC;AALpB,IADF;AASD,CA5BM","sourcesContent":["import React from 'react';\nimport { IconButton, IconEmoji } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { ColorBlocksMetaData, ColorBlocks } from '@ali/4ever-mo';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { Locale } from '../../types';\nimport { setMetaData as setMetaDataAction } from '../../actions';\n\nexport interface IColorIconMenuProps {\n  controller: Controller;\n  getNode: () => ColorBlocks | null;\n  locale: Locale;\n}\n\nexport const StickerSwitchButton: React.FC<IColorIconMenuProps> = (props) => {\n  const { controller, locale, getNode } = props;\n  const node = getNode();\n  const [showStk, setShowStk] = React.useState(node?.data?.metadata?.showstk ||false);\n\n  const handleClick = React.useCallback(() => {\n    setShowStk(v => {\n      const data: Partial<ColorBlocksMetaData> = {};\n      // @ts-ignore\n      data.showstk = !v;\n      const node = getNode();\n      controller.run('onCangjieBlur');\n      node && controller.run('onAction', setMetaDataAction({ node, data, needBlur: true }));\n      return !v;\n    });\n  }, []);\n\n  if (!node) return null;\n\n  return (\n    <IconButton\n      onClick={handleClick}\n      active={showStk}\n      icon={<IconEmoji />}\n      tooltip={locale?.showEmoji || 'Show sticker'}\n      role={PluginRoles.calloutSticker}\n    />\n  );\n}"],"file":"stickerSwitch.js"}