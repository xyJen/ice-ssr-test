{"version":3,"sources":["../../../../../src/plugins/callout/components/colorPanel.tsx"],"names":["DEFAULTS","CalloutPlugin","ColorPanelWrapper","styled","div","blockEvent","event","stopPropagation","preventDefault","ColorPanel","color","controller","getNode","bgcolor","border","locale","showSticker","onValueChange","handleChange","key","value","data","node","run","checkboxLayout","title","showEmoji","defaultValue","Boolean"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;uBAL4B,a;AAmB5B,MAAM;AAAEA,EAAAA;AAAF,IAAeC,yBAArB;;AAEA,MAAMC,iBAAiB,gBAAGC,0BAAOC,GAAV,qDAAvB;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAA6B;AAC9CA,EAAAA,KAAK,CAACC,eAAN;AACAD,EAAAA,KAAK,CAACE,cAAN;AACD,CAHD;;AAKO,SAASC,UAAT,CAAoB;AACzBC,EAAAA,KADyB;AAEzBC,EAAAA,UAFyB;AAGzBC,EAAAA,OAHyB;AAIzBC,EAAAA,OAJyB;AAKzBC,EAAAA,MALyB;AAMzBC,EAAAA,MANyB;AAOzBC,EAAAA,WAPyB;AAQzBC,EAAAA;AARyB,CAApB,EASc;AAEnB,QAAMC,YAAY,GAAIC,GAAD,IAAqCC,KAAD,IAAgB;AACvE,UAAMC,IAAkC,GAAG,EAA3C,CADuE,CAEvE;;AACAA,IAAAA,IAAI,CAACF,GAAD,CAAJ,GAAYC,KAAZ;AACA,UAAME,IAAI,GAAGV,OAAO,EAApB;AACAD,IAAAA,UAAU,CAACY,GAAX,CAAe,eAAf;AACAZ,IAAAA,UAAU,CAACY,GAAX,CAAe,UAAf,EAA2B,0BAAY;AAAED,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAZ,CAA3B;AACAJ,IAAAA,aAAa,IAAIA,aAAa,CAACE,GAAD,EAAMC,KAAN,CAA9B;AACD,GARD;;AASA,QAAMI,cAAc,GAAG,CACrB;AACEC,IAAAA,KAAK,EAAEV,MAAM,EAAEW,SAAR,IAAqB,cAD9B;AAEEC,IAAAA,YAAY,EAAE,IAFhB;AAGEP,IAAAA,KAAK,EAAEQ,OAAO,CAACZ,WAAD,CAHhB;AAIEC,IAAAA,aAAa,EAAGG,KAAD,IAAoB;AACjCF,MAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwBE,KAAxB;AACD;AANH,GADqB,CAAvB;AAWA,sBACE,eAAC,iBAAD;AAAmB,IAAA,WAAW,EAAEf,UAAhC;AAA4C,IAAA,OAAO,EAAEA;AAArD,kBACE,eAAC,oBAAD;AACE,IAAA,KAAK,EAAEK,KADT;AAEE,IAAA,YAAY,EAAEV,QAAQ,CAACU,KAFzB;AAGE,IAAA,YAAY,EAAEQ,YAAY,CAAC,OAAD,CAH5B;AAIE,IAAA,WAAW,EAAEJ,MAJf;AAKE,IAAA,kBAAkB,EAAEd,QAAQ,CAACc,MAL/B;AAME,IAAA,kBAAkB,EAAEI,YAAY,CAAC,QAAD,CANlC;AAOE,IAAA,eAAe,EAAEL,OAPnB;AAQE,IAAA,sBAAsB,EAAEb,QAAQ,CAACa,OARnC;AASE,IAAA,sBAAsB,EAAEK,YAAY,CAAC,SAAD,CATtC;AAUE,IAAA,cAAc,EAAEM,cAVlB;AAWE,IAAA,iBAAiB;AAXnB,IADF,CADF;AAiBD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { ColorPanel as ColorPanelComp } from '@ali/we-design';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { CalloutPlugin } from '@ali/4ever-bamboo';\nimport { ColorBlocksMetaData, ColorBlocks } from '@ali/4ever-mo';\nimport { setMetaData } from '../actions';\nimport { Locale } from '../types';\n\nexport interface IColorPanelProps {\n  locale?: Locale;\n  controller: Controller;\n  getNode: () => ColorBlocks;\n  bgcolor: string;\n  color?: string;\n  border?: string;\n  showSticker?: boolean;\n  onValueChange?: (key: keyof ColorBlocksMetaData, value: 'string') => void;\n}\n\nconst { DEFAULTS } = CalloutPlugin;\n\nconst ColorPanelWrapper = styled.div`\n  background: white;\n  padding: 8px;\n  border-radius: 4px;\n`;\n\nconst blockEvent = (event: React.MouseEvent) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n\nexport function ColorPanel({\n  color,\n  controller,\n  getNode,\n  bgcolor,\n  border,\n  locale,\n  showSticker,\n  onValueChange,\n}: IColorPanelProps) {\n\n  const handleChange = (key: keyof ColorBlocksMetaData) => (value: any) => {\n    const data: Partial<ColorBlocksMetaData> = {};\n    // @ts-ignore\n    data[key] = value;\n    const node = getNode();\n    controller.run('onCangjieBlur');\n    controller.run('onAction', setMetaData({ node, data }));\n    onValueChange && onValueChange(key, value);\n  };\n  const checkboxLayout = [\n    {\n      title: locale?.showEmoji || 'Show Sticker',\n      defaultValue: true,\n      value: Boolean(showSticker),\n      onValueChange: (value: boolean) => {\n        handleChange('showstk')(value);\n      },\n    },\n  ];\n\n  return (\n    <ColorPanelWrapper onMouseDown={blockEvent} onClick={blockEvent}>\n      <ColorPanelComp\n        color={color}\n        defaultColor={DEFAULTS.color}\n        onColorClick={handleChange('color')}\n        borderColor={border}\n        defaultBorderColor={DEFAULTS.border}\n        onBorderColorClick={handleChange('border')}\n        backgroundColor={bgcolor}\n        defaultBackgroundColor={DEFAULTS.bgcolor}\n        onBackgroundColorClick={handleChange('bgcolor')}\n        checkboxLayout={checkboxLayout}\n        enableResetButton\n      />\n    </ColorPanelWrapper>\n  );\n}"],"file":"colorPanel.js"}