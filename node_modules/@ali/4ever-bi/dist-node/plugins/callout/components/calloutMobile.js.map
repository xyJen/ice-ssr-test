{"version":3,"sources":["../../../../../src/plugins/callout/components/calloutMobile.tsx"],"names":["StickerItem","StickerPlugin","CalloutBoxWrapper","CalloutBox","ContentBox","StickerBox","StickerInnerBox","DEFAULTS","STICKER_SIZE","PADDING_TOP","CalloutPlugin","Callout","props","node","attributes","children","sticker","stickerBoxRef","React","useRef","bgcolor","stickerCode","stcode","border","showSticker","useMemo","metadata","data","Boolean","showstk","borderColor","whiteBorder","ref","stickerTop","setStickerTop","useState","zoom","useEffect","current","nodes","rect","stickerRect","getBoundingClientRect","height","newTop","top","Math","round","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block, Controller, useZoom } from '@ali/4ever-cangjie';\nimport { StickerPlugin, CalloutPlugin } from '@ali/4ever-bamboo';\nimport { ParagraphData, ColorBlocks } from '@ali/4ever-mo';\nimport { getRectOfNodeFirstText } from '@ali/4ever-utils';\nimport { Locale } from '../types';\n\nconst { StickerItem } = StickerPlugin;\nconst {\n  CalloutBoxWrapper,\n  CalloutBox,\n  ContentBox,\n  StickerBox,\n  StickerInnerBox,\n  DEFAULTS,\n  STICKER_SIZE,\n  PADDING_TOP,\n} = CalloutPlugin;\n\nexport interface CalloutProps {\n  controller: Controller;\n  node: Block<ParagraphData> | ColorBlocks;\n  locale?: Locale;\n  attributes: Record<string, string>;\n  sticker: StickerPlugin.Sticker;\n}\n\n/**\n * 高亮区块\n * @param props\n * @returns\n */\nconst Callout: React.FC<CalloutProps> = (props) => {\n  const { node, attributes, children, sticker } = props;\n  const stickerBoxRef = React.useRef<HTMLDivElement>();\n\n  const {\n    bgcolor = DEFAULTS.bgcolor,\n    sticker: stickerCode = DEFAULTS.stcode,\n    border,\n    showSticker,\n  } = React.useMemo(() => {\n    const { metadata } = (node as ColorBlocks).data;\n    return { ...metadata, showSticker: Boolean(metadata.showstk) };\n  }, [node]);\n\n  // 边框色默认为背景色, 使边框和文字对齐\n  let borderColor = border || bgcolor;\n  if (!border && bgcolor === '#FFFFFF') {\n    borderColor = DEFAULTS.whiteBorder;\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [stickerTop, setStickerTop] = React.useState(0);\n  const zoom = useZoom();\n\n  React.useEffect(() => {\n    if (stickerBoxRef.current && node.nodes[0]) {\n      const rect = getRectOfNodeFirstText(node.nodes[0] as Block);\n      const stickerRect = stickerBoxRef.current?.getBoundingClientRect();\n      if (rect && rect.height && stickerRect) {\n        const newTop =\n          rect.top / zoom -\n          stickerRect.top / zoom -\n          PADDING_TOP +\n          (rect.height / zoom - STICKER_SIZE) / 2 -\n          1;\n        setStickerTop(Math.round(newTop));\n      }\n    }\n  }, [node, stickerBoxRef, zoom]);\n\n  return (\n    <CalloutBoxWrapper {...attributes}>\n      <CalloutBox\n        ref={ref}\n        className=\"callout-box\"\n        data-callout-group\n        data-color-select-panel\n        backgroundColor={bgcolor}\n        borderColor={borderColor}\n        selected={false}\n        onMouseDown={() => {}}\n        data-hover-box=\"borderBox\"\n        onClick={() => {}}\n      >\n        {Boolean(showSticker) && (\n          <StickerBox className=\"callout-sticker-box\" ref={stickerBoxRef}>\n            <StickerInnerBox style={{ top: stickerTop }}>\n              <StickerItem\n                sz={STICKER_SIZE}\n                code={stickerCode}\n                sticker={sticker}\n              />\n            </StickerInnerBox>\n          </StickerBox>\n        )}\n        <ContentBox data-container-block showSticker={showSticker}>\n          {children}\n        </ContentBox>\n      </CalloutBox>\n    </CalloutBoxWrapper>\n  );\n};\n\nCallout.displayName = 'Callout';\n\nexport default Callout;\n"],"file":"calloutMobile.js"}