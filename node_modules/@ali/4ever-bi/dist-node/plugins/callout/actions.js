"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.insertCallout = insertCallout;
exports.transformCallout = transformCallout;
exports.deleteCallout = deleteCallout;
exports.setCalloutStickerCode = setCalloutStickerCode;
exports.setCalloutBackground = setCalloutBackground;
exports.setCalloutSelected = setCalloutSelected;
exports.setMetaData = setMetaData;
exports.clearCalloutSelected = clearCalloutSelected;
exports.convertKeysToContainer = convertKeysToContainer;
exports.broadcastDataChange = broadcastDataChange;
exports.CONVERT_KEYS_TO_CONTAINER = exports.TRANSFORM_CALLOUT = exports.CLEAR_CALLOUT_SELECTED = exports.CALLOUT_DATA_CHANGED = exports.SET_META_DATA = exports.SET_CALLOUT_SELECTED = exports.SET_CALLOUT_BACKGROUND = exports.SET_CALLOUT_STICKER_CODE = exports.DELETE_CALLOUT = exports.INSERT_CALLOUT = void 0;
const INSERT_CALLOUT = Symbol('INSERT_CALLOUT');
exports.INSERT_CALLOUT = INSERT_CALLOUT;
const DELETE_CALLOUT = Symbol('DELETE_CALLOUT');
exports.DELETE_CALLOUT = DELETE_CALLOUT;
const SET_CALLOUT_STICKER_CODE = Symbol('SET_CALLOUT_STICKER_CODE');
exports.SET_CALLOUT_STICKER_CODE = SET_CALLOUT_STICKER_CODE;
const SET_CALLOUT_BACKGROUND = Symbol('SET_CALLOUT_BACKGROUND');
exports.SET_CALLOUT_BACKGROUND = SET_CALLOUT_BACKGROUND;
const SET_CALLOUT_SELECTED = Symbol('SET_CALLOUT_SELECTED');
exports.SET_CALLOUT_SELECTED = SET_CALLOUT_SELECTED;
const SET_META_DATA = Symbol('SET_META_DATA');
exports.SET_META_DATA = SET_META_DATA;
const CALLOUT_DATA_CHANGED = Symbol('CALLOUT_DATA_CHANGED');
exports.CALLOUT_DATA_CHANGED = CALLOUT_DATA_CHANGED;
const CLEAR_CALLOUT_SELECTED = Symbol('CLEAR_CALLOUT_SELECTED');
exports.CLEAR_CALLOUT_SELECTED = CLEAR_CALLOUT_SELECTED;
const TRANSFORM_CALLOUT = Symbol('TRANSFORM_CALLOUT');
exports.TRANSFORM_CALLOUT = TRANSFORM_CALLOUT;
const CONVERT_KEYS_TO_CONTAINER = Symbol('CONVERT_KEYS_TO_CONTAINER');
exports.CONVERT_KEYS_TO_CONTAINER = CONVERT_KEYS_TO_CONTAINER;

function insertCallout(_payload) {
  return {
    type: INSERT_CALLOUT,
    payload: _payload || {
      text: ''
    }
  };
}

function transformCallout() {
  return {
    type: TRANSFORM_CALLOUT
  };
}

function deleteCallout(payload) {
  return {
    type: DELETE_CALLOUT,
    payload
  };
}

function setCalloutStickerCode(payload) {
  return {
    type: SET_CALLOUT_STICKER_CODE,
    payload
  };
}

function setCalloutBackground(payload) {
  return {
    type: SET_CALLOUT_BACKGROUND,
    payload
  };
}

function setCalloutSelected(payload) {
  return {
    type: SET_CALLOUT_SELECTED,
    payload
  };
}

function setMetaData(payload) {
  return {
    type: SET_META_DATA,
    payload
  };
}

function clearCalloutSelected() {
  return {
    type: CLEAR_CALLOUT_SELECTED
  };
}

function convertKeysToContainer(payload) {
  return {
    type: CONVERT_KEYS_TO_CONTAINER,
    payload
  };
}

function broadcastDataChange(obj) {
  const {
    sticker: sc,
    bgcolor: bg,
    border,
    showstk
  } = obj;
  const payload = {
    sc,
    bg,
    border,
    showstk
  };
  return {
    type: CALLOUT_DATA_CHANGED,
    payload
  };
}
//# sourceMappingURL=actions.js.map