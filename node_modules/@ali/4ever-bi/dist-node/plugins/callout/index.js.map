{"version":3,"sources":["../../../../src/plugins/callout/index.ts"],"names":["DEFAULT_STICKERS","Sticker","StickerPlugin","createCalloutPlugin","config","callout","locale","stickerConfig","lang","customSticker","sticker","params","renderNode","onCangjieCopy","onCangjieCopyOrCut","onCangjieCut","onCangjieInput","onCangjieSelect","onQuery","groupNodes","onAction","getNodeStyle","CalloutPlugin","shouldNodeComponentUpdate","prevProps","props","__","next","value","data","selectedCallout","node","calloutPr","key","commands","menubar","onKeyDown","queries","placeholder","text","when","controller","query","renderHoverToolbar","getSnippetConfig","actions"],"mappings":";;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAM;AAAEA,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAAgCC,yBAAtC;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAA+D;AAC7D,QAAM;AAAEC,IAAAA,OAAO,GAAG;AAAZ,MAAmBD,MAAzB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAaD,OAAnB;AACA,QAAME,aAAa,GAAG;AACpB;AACAC,IAAAA,IAAI,EAAE,OAFc;AAGpB;AACAC,IAAAA,aAAa,EAAE,CAACT,gBAAD,CAJK;AAKpB,OAAGI,MAAM,CAACM;AALU,GAAtB;AAOA,QAAMA,OAAO,GAAG,IAAIT,OAAJ,CAAYM,aAAZ,CAAhB;AACA,QAAMI,MAAM,GAAG;AACbJ,IAAAA,aADa;AAEbG,IAAAA,OAFa;AAGbJ,IAAAA,MAAM,EAAED,OAAO,CAACC;AAHH,GAAf;AAMA,SAAO,EACL,GAAG,sCAAU,EAAV,CADE;AAELM,IAAAA,UAAU,EAAE,+BAAiBD,MAAjB,CAFP;AAGL;AACAE,IAAAA,aAAa,EAAEC,2BAJV;AAKLC,IAAAA,YAAY,EAAED,2BALT;AAMLE,IAAAA,cAAc,EAAdA,uBANK;AAOLC,IAAAA,eAAe,EAAE,qCAPZ;AAQLC,IAAAA,OAAO,EAAE,6BARJ;AASLC,IAAAA,UAAU,EAAE,+BAAiBd,OAAjB,CATP;AAULe,IAAAA,QAAQ,EAAE,6BAAef,OAAf,CAVL;AAWLgB,IAAAA,YAAY,EAAEC,0BAAcD,YAXvB;AAYL;AACA;AACAE,IAAAA,yBAAyB,EAAE,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,EAAnB,EAAuBC,IAAvB,KAAgC;AACzD,UACEF,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiBC,eAAjB,KACEN,SAAS,CAACI,KAAV,CAAgBC,IAAhB,CAAqBC,eADvB,IAECL,KAAK,CAACM,IAAP,CAAsBF,IAAtB,EAA4BG,SAF5B,KAGCP,KAAK,CAACM,IAAN,CAAWE,GAAX,KAAmBR,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiBC,eAApC,IACCL,KAAK,CAACM,IAAN,CAAWE,GAAX,KAAmBT,SAAS,CAACI,KAAV,CAAgBC,IAAhB,CAAqBC,eAJ1C,CADF,EAME;AACA,eAAO,IAAP;AACD;;AACD,aAAOH,IAAI,EAAX;AACD,KAzBI;AA0BL;AACAO,IAAAA,QA3BK;AA4BLC,IAAAA,OAAO,EAAPA,gBA5BK;AA6BLC,IAAAA,SAAS,EAATA,kBA7BK;AA8BLC,IAAAA,OAAO,EAAPA,gBA9BK;AA+BLC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAEjC,MAAM,EAAEgC,WADH;AAEXE,MAAAA,IAAI,EAAE,CAACC,UAAD,EAAaV,IAAb,KAAsB;AAC1B,eAAO,kCAAiBA,IAAjB,KACLU,UAAU,CAACC,KAAX,CAAiB,sBAAjB,EAAyCX,IAAzC,MAAmDA,IAD9C,IAELU,UAAU,CAACC,KAAX,CAAiB,oBAAjB,EAAuCX,IAAvC,MAAiDA,IAFnD;AAGD;AANU,KA/BR;AAuCLY,IAAAA,kBAAkB,EAAE,uCAAyBtC,OAAzB,CAvCf;AAwCLuC,IAAAA,gBAAgB,EAAhBA;AAxCK,GAAP;AA0CD;;AAEDzC,mBAAmB,CAAC0C,OAApB,GAA8BA,OAA9B;eAEe1C,mB","sourcesContent":["import { Block } from '@ali/4ever-cangjie';\nimport { BiPlugin, BiPluginConfig } from '../../types';\nimport { StickerPlugin, isEmptyParagraph, CalloutPlugin } from '@ali/4ever-bamboo';\nimport createRenderNode from './handlers/createRenderNode';\nimport * as commands from './commands';\nimport createOnAction from './handlers/createOnAction';\nimport menubar from './menubar';\nimport createGroupNodes from './handlers/createGroupNodes';\nimport createOnQuery from './handlers/createOnQuery';\nimport createOnCangjieSelect from './handlers/createOnCangjieSelect';\nimport onKeyDown from './handlers/onKeyDown';\nimport onCangjieCopyOrCut from './handlers/onCangjieCopyOrCut';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport queries from './queries';\nimport createRenderHoverToolbar from './createRenderHoverToolbar';\nimport getSnippetConfig from './getSnippetConfig';\nimport * as actions from './actions';\nimport { moFactory } from '@ali/4ever-plugin-color-blocks';\n\nconst { DEFAULT_STICKERS, Sticker } = StickerPlugin;\n\nfunction createCalloutPlugin(config: BiPluginConfig): BiPlugin {\n  const { callout = {} } = config;\n  const { locale } = callout;\n  const stickerConfig = {\n    // @ts-ignore\n    lang: 'zh_CN',\n    // @ts-ignore\n    customSticker: [DEFAULT_STICKERS],\n    ...config.sticker,\n  };\n  const sticker = new Sticker(stickerConfig);\n  const params = {\n    stickerConfig,\n    sticker,\n    locale: callout.locale,\n  };\n\n  return {\n    ...moFactory({}),\n    renderNode: createRenderNode(params),\n    // Copy Cut 拦截作用于高亮块全选时\n    onCangjieCopy: onCangjieCopyOrCut,\n    onCangjieCut: onCangjieCopyOrCut,\n    onCangjieInput,\n    onCangjieSelect: createOnCangjieSelect(),\n    onQuery: createOnQuery(),\n    groupNodes: createGroupNodes(callout),\n    onAction: createOnAction(callout),\n    getNodeStyle: CalloutPlugin.getNodeStyle,\n    // 作用于高亮块全选态变化时重渲\n    // controller.value.data 变化可能不会引发重渲\n    shouldNodeComponentUpdate: (prevProps, props, __, next) => {\n      if (\n        props.value.data.selectedCallout !==\n          prevProps.value.data.selectedCallout &&\n        (props.node as Block).data?.calloutPr &&\n        (props.node.key === props.value.data.selectedCallout ||\n          props.node.key === prevProps.value.data.selectedCallout)\n      ) {\n        return true;\n      }\n      return next();\n    },\n    // @ts-ignore 这里是 createCommands\n    commands,\n    menubar,\n    onKeyDown,\n    queries,\n    placeholder: {\n      text: locale?.placeholder,\n      when: (controller, node) => {\n        return isEmptyParagraph(node) &&\n          controller.query('getCalloutStartBlock', node) === node &&\n          controller.query('getCalloutEndBlock', node) === node;\n      },\n    },\n    renderHoverToolbar: createRenderHoverToolbar(callout),\n    getSnippetConfig,\n  };\n}\n\ncreateCalloutPlugin.actions = actions;\n\nexport default createCalloutPlugin;\n"],"file":"index.js"}