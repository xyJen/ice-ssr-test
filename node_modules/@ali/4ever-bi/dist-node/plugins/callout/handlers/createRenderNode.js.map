{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createRenderNode.tsx"],"names":["createRenderNode","param","props","controller","sticker","locale","attributes","children","node","Container","TYPE","data","subType","ColorBlocks","SUB_TYPE"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;uBAF4B,a;;AAM5B,SAASA,gBAAT,CAA0BC,KAA1B,EAGG;AACD,SAAO;AACL,qBAAiB,CAACC,KAAD,EAAgCC,UAAhC,KAA+C;AAC9D,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBJ,KAA5B;AACA,YAAM;AAAEK,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAA2BL,KAAjC;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAWN,KAAjB;AAEA,0BACE,eAAC,gBAAD;AACE,QAAA,UAAU,EAAEC,UADd;AAEE,QAAA,MAAM,EAAEE,MAFV;AAGE,QAAA,IAAI,EAAEG,IAHR;AAIE,QAAA,UAAU,EAAEF,UAJd;AAKE,QAAA,OAAO,EAAEF;AALX,SAOGG,QAAQ,EAPX,CADF;AAWD,KAjBI;AAkBL,KAACE,kBAAUC,IAAX,GAAkB,CAACR,KAAD,EAAgCC,UAAhC,KAA+C;AAC/D,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBJ,KAA5B;AACA,YAAM;AAAEK,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAA2BL,KAAjC;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAWN,KAAjB;;AAEA,UAAIM,IAAI,CAACG,IAAL,CAAUC,OAAV,KAAsBC,oBAAYC,QAAtC,EAAgD;AAC9C,4BAAO,oCAAP;AACD;;AACD,0BACE,eAAC,gBAAD;AACE,QAAA,UAAU,EAAEX,UADd;AAEE,QAAA,MAAM,EAAEE,MAFV;AAGE,QAAA,IAAI,EAAEG,IAHR;AAIE,QAAA,UAAU,EAAEF,UAJd;AAKE,QAAA,OAAO,EAAEF;AALX,SAOGG,QAAQ,EAPX,CADF;AAWD;AArCI,GAAP;AAuCD;;eAEcP,gB","sourcesContent":["import * as React from 'react';\nimport { Plugin, Block, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { ColorBlocks, Container } from '@ali/4ever-mo';\nimport Callout from '../components/callout';\nimport { StickerPlugin } from '@ali/4ever-bamboo';\nimport { Locale } from '../types';\n\nfunction createRenderNode(param: {\n  sticker: StickerPlugin.Sticker;\n  locale?: Locale;\n}) {\n  return {\n    'callout-group': (props: RenderNodeProps<Block>, controller) => {\n      const { sticker, locale } = param;\n      const { attributes, children } = props;\n      const { node } = props;\n\n      return (\n        <Callout\n          controller={controller}\n          locale={locale}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n    [Container.TYPE]: (props: RenderNodeProps<Block>, controller) => {\n      const { sticker, locale } = param;\n      const { attributes, children } = props;\n      const { node } = props;\n\n      if (node.data.subType !== ColorBlocks.SUB_TYPE) {\n        return <></>;\n      }\n      return (\n        <Callout\n          controller={controller}\n          locale={locale}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n  };\n}\n\nexport default createRenderNode;\n"],"file":"createRenderNode.js"}