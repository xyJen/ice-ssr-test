{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createOnAction.ts"],"names":["createOnAction","config","onAction","action","controller","next","type","payload","INSERT_CALLOUT","text","command","TRANSFORM_CALLOUT","transform","SET_CALLOUT_STICKER_CODE","node","stickerCode","setCalloutStickerCode","key","SET_META_DATA","data","needBlur","setMetaData","Commands","blur","flush","SET_CALLOUT_BACKGROUND","background","setCalloutBackground","SET_CALLOUT_SELECTED","setCalloutSelected","CLEAR_CALLOUT_SELECTED","clearCalloutSelected","DELETE_CALLOUT","deleteCallout","CONVERT_KEYS_TO_CONTAINER","keys","convertKeysToContainer"],"mappings":";;;;;;;AAAA;;AACA;;AAWA;;AAsBA,SAASA,cAAT,CAAwBC,MAAxB,EAAyE;AACvE,SAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4C;AACjD,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBJ,MAA1B;;AAEA,QAAIG,IAAI,KAAKE,uBAAb,EAA6B;AAC3B,YAAM;AAAEC,QAAAA,IAAF;AAAQH,QAAAA;AAAR,UAAiBC,OAAvB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmB,mCAAoBT,MAApB,CAAnB,EAAgDQ,IAAhD,EAAsDH,IAAtD;AACD,KAHD,MAGO,IAAIA,IAAI,KAAKK,0BAAb,EAAgC;AACrCP,MAAAA,UAAU,CAACM,OAAX,CAAmBE,mBAAnB;AACD,KAFM,MAEA,IAAIN,IAAI,KAAKO,iCAAb,EAAuC;AAC5C,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAwBR,OAA9B;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmBM,+BAAnB,EAA0CF,IAAI,CAACG,GAA/C,EAAoDF,WAApD;AACD,KAHM,MAGA,IAAIT,IAAI,KAAKY,sBAAb,EAA4B;AACjC,YAAM;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA,IAAR;AAAcC,QAAAA;AAAd,UAA2Bb,OAAjC;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmBW,qBAAnB,EAAgCP,IAAI,CAACG,GAArC,EAA0CE,IAA1C;;AACA,UAAIC,QAAJ,EAAc;AACZhB,QAAAA,UAAU,CAACM,OAAX,CAAmBY,sBAASC,IAA5B,EAAkCC,KAAlC;AACD;AACF,KANM,MAMA,IAAIlB,IAAI,KAAKmB,+BAAb,EAAqC;AAC1C,YAAM;AAAEX,QAAAA,IAAF;AAAQY,QAAAA;AAAR,UAAuBnB,OAA7B;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmBiB,8BAAnB,EAAyCb,IAAI,CAACG,GAA9C,EAAmDS,UAAnD;AACD,KAHM,MAGA,IAAIpB,IAAI,KAAKsB,6BAAb,EAAmC;AACxC,YAAM;AAAEd,QAAAA;AAAF,UAAWP,OAAjB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmBmB,4BAAnB,EAAuCf,IAAvC;AACD,KAHM,MAGA,IAAIR,IAAI,KAAKwB,+BAAb,EAAqC;AAC1C1B,MAAAA,UAAU,CAACM,OAAX,CAAmBqB,8BAAnB;AACD,KAFM,MAEA,IAAIzB,IAAI,KAAK0B,uBAAb,EAA6B;AAClC,YAAM;AAAElB,QAAAA;AAAF,UAAWP,OAAjB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmBuB,uBAAnB,EAAkCnB,IAAI,CAACG,GAAvC;AACD,KAHM,MAGA,IAAIX,IAAI,KAAK4B,kCAAb,EAAwC;AAC7C,YAAM;AAAEC,QAAAA;AAAF,UAAW5B,OAAjB;AACAH,MAAAA,UAAU,CAACM,OAAX,CAAmB0B,gCAAnB,EAA2CD,IAA3C;AACD;;AACD,WAAO9B,IAAI,EAAX;AACD,GAjCD;AAkCD;;eAEcL,c","sourcesContent":["import { Commands, Plugin } from '@ali/4ever-cangjie';\nimport {\n  INSERT_CALLOUT,\n  SET_CALLOUT_STICKER_CODE,\n  SET_CALLOUT_BACKGROUND,\n  SET_CALLOUT_SELECTED,\n  SET_META_DATA,\n  CLEAR_CALLOUT_SELECTED,\n  DELETE_CALLOUT,\n  TRANSFORM_CALLOUT,\n  CONVERT_KEYS_TO_CONTAINER,\n} from '../actions';\nimport {\n  createInsertCallout,\n  deleteCallout,\n  setCalloutStickerCode,\n  setCalloutBackground,\n  setCalloutSelected,\n  setMetaData,\n  clearCalloutSelected,\n  convertKeysToContainer,\n  transform,\n} from '../commands';\nimport {\n  SetCalloutBackgroundPayload,\n  SetCalloutSelectedPayload,\n  SetCalloutStickerCodePayload,\n  SetMedataDataPayload,\n  DeleteCalloutPayload,\n  InsertCalloutPayload,\n  CalloutPluginConfig,\n  ConvertKeysPayload,\n} from '../types';\n\nfunction createOnAction(config: CalloutPluginConfig): Plugin['onAction'] {\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n\n    if (type === INSERT_CALLOUT) {\n      const { text, type } = payload as InsertCalloutPayload;\n      controller.command(createInsertCallout(config), text, type);\n    } else if (type === TRANSFORM_CALLOUT) {\n      controller.command(transform);\n    } else if (type === SET_CALLOUT_STICKER_CODE) {\n      const { node, stickerCode } = payload as SetCalloutStickerCodePayload;\n      controller.command(setCalloutStickerCode, node.key, stickerCode);\n    } else if (type === SET_META_DATA) {\n      const { node, data, needBlur } = payload as SetMedataDataPayload;\n      controller.command(setMetaData, node.key, data);\n      if (needBlur) {\n        controller.command(Commands.blur).flush();\n      }\n    } else if (type === SET_CALLOUT_BACKGROUND) {\n      const { node, background } = payload as SetCalloutBackgroundPayload;\n      controller.command(setCalloutBackground, node.key, background);\n    } else if (type === SET_CALLOUT_SELECTED) {\n      const { node } = payload as SetCalloutSelectedPayload;\n      controller.command(setCalloutSelected, node);\n    } else if (type === CLEAR_CALLOUT_SELECTED) {\n      controller.command(clearCalloutSelected);\n    } else if (type === DELETE_CALLOUT) {\n      const { node } = payload as DeleteCalloutPayload;\n      controller.command(deleteCallout, node.key);\n    } else if (type === CONVERT_KEYS_TO_CONTAINER) {\n      const { keys } = payload as ConvertKeysPayload;\n      controller.command(convertKeysToContainer, keys);\n    }\n    return next();\n  };\n}\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}