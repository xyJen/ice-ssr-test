"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onDelete;

var _isHotkey = _interopRequireDefault(require("is-hotkey"));

var _fastDeepEqual = _interopRequireDefault(require("fast-deep-equal"));

var _actions = require("../actions");

function onDelete(event, controller, next) {
  const {
    value
  } = controller;
  const {
    document,
    data,
    startBlock,
    endBlock,
    selection
  } = value;
  const isBackspaceHotKey = (0, _isHotkey.default)('backspace');

  if (data.selectedCallout && endBlock?.data?.calloutPr) {
    return controller.run('onAction', (0, _actions.deleteCallout)({
      node: endBlock
    }));
  }

  const prevBlock = startBlock && document.getPreviousBlock(startBlock.key);

  if (prevBlock && startBlock && prevBlock.data.calloutPr // !startBlock.data.calloutPr 也包含在下面的条件中
  && !(0, _fastDeepEqual.default)(startBlock.data.calloutPr, prevBlock.data.calloutPr) && selection.isCollapsed && selection.getStart(document).isAtStartOfNode(startBlock) && isBackspaceHotKey(event)) {
    event.preventDefault(); // 正常删除行

    next(); // 删除后选中高亮块

    return controller.run('onAction', (0, _actions.setCalloutSelected)({
      node: prevBlock
    }));
  }

  event.preventDefault();
  return next();
}
//# sourceMappingURL=onDelete.js.map