{"version":3,"sources":["../../../../../src/plugins/callout/handlers/onDelete.ts"],"names":["onDelete","event","controller","next","value","document","data","startBlock","endBlock","selection","isBackspaceHotKey","selectedCallout","calloutPr","run","node","prevBlock","getPreviousBlock","key","isCollapsed","getStart","isAtStartOfNode","preventDefault"],"mappings":";;;;;;;;;AACA;;AACA;;AAEA;;AAEe,SAASA,QAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYF,UAAlB;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA,QAA9B;AAAwCC,IAAAA;AAAxC,MAAsDL,KAA5D;AAEA,QAAMM,iBAAiB,GAAG,uBAAY,WAAZ,CAA1B;;AAEA,MAAIJ,IAAI,CAACK,eAAL,IAAwBH,QAAQ,EAAEF,IAAV,EAAgBM,SAA5C,EAAuD;AACrD,WAAOV,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2B,4BAAc;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAd,CAA3B,CAAP;AACD;;AAED,QAAMO,SAAS,GAAGR,UAAU,IAAIF,QAAQ,CAACW,gBAAT,CAA0BT,UAAU,CAACU,GAArC,CAAhC;;AACA,MACEF,SAAS,IAAIR,UAAb,IACGQ,SAAS,CAACT,IAAV,CAAeM,SADlB,CAEA;AAFA,KAGG,CAAC,4BAAQL,UAAU,CAACD,IAAX,CAAgBM,SAAxB,EAAmCG,SAAS,CAACT,IAAV,CAAeM,SAAlD,CAHJ,IAIGH,SAAS,CAACS,WAJb,IAKGT,SAAS,CAACU,QAAV,CAAmBd,QAAnB,EAA6Be,eAA7B,CAA6Cb,UAA7C,CALH,IAMGG,iBAAiB,CAACT,KAAD,CAPtB,EAQE;AACAA,IAAAA,KAAK,CAACoB,cAAN,GADA,CAGA;;AACAlB,IAAAA,IAAI,GAJJ,CAMA;;AACA,WAAOD,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2B,iCAAmB;AACnDC,MAAAA,IAAI,EAAEC;AAD6C,KAAnB,CAA3B,CAAP;AAGD;;AAEDd,EAAAA,KAAK,CAACoB,cAAN;AAEA,SAAOlB,IAAI,EAAX;AACD","sourcesContent":["import * as React from 'react';\nimport isKeyHotkey from 'is-hotkey';\nimport isEqual from 'fast-deep-equal';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { deleteCallout, setCalloutSelected } from '../actions';\n\nexport default function onDelete(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: Function,\n) {\n  const { value } = controller;\n  const { document, data, startBlock, endBlock, selection } = value;\n\n  const isBackspaceHotKey = isKeyHotkey('backspace');\n\n  if (data.selectedCallout && endBlock?.data?.calloutPr) {\n    return controller.run('onAction', deleteCallout({ node: endBlock }));\n  }\n\n  const prevBlock = startBlock && document.getPreviousBlock(startBlock.key);\n  if (\n    prevBlock && startBlock\n    && prevBlock.data.calloutPr\n    // !startBlock.data.calloutPr 也包含在下面的条件中\n    && !isEqual(startBlock.data.calloutPr, prevBlock.data.calloutPr)\n    && selection.isCollapsed\n    && selection.getStart(document).isAtStartOfNode(startBlock)\n    && isBackspaceHotKey(event)\n  ) {\n    event.preventDefault();\n\n    // 正常删除行\n    next();\n\n    // 删除后选中高亮块\n    return controller.run('onAction', setCalloutSelected({\n      node: prevBlock,\n    }));\n  }\n\n  event.preventDefault();\n\n  return next();\n}\n"],"file":"onDelete.js"}