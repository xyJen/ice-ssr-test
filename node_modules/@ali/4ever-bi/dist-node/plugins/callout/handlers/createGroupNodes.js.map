{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createGroupNodes.ts"],"names":["createGroupNodes","config","groupNodes","start","end","ctx","controller","next","parent","groups","parentGroup","length","first","nodes","shouldDisableGroup","Paragraph","isParagraph","Heading","isHeading","data","calloutPr","i","node","children","slice","result","key","remainedRange"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAEe,SAASA,gBAAT,CAA0BC,MAA1B,EAAwD;AACrE,SAAO,SAASC,UAAT,CAAoB,CAACC,KAAD,EAAQC,GAAR,CAApB,EAAkCC,GAAlC,EAAuCC,UAAvC,EAAmDC,IAAnD,EAAyD;AAC9D,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqBJ,GAA3B;AACA,UAAMK,WAAW,GAAGD,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAA1B;AACA,UAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAP,CAAaV,KAAb,CAAd;;AAEA,QAAIF,MAAM,CAACa,kBAAP,IAA6Bb,MAAM,CAACa,kBAAP,EAAjC,EAA8D;AAC5D,aAAOP,IAAI,EAAX;AACD,KAP6D,CAS9D;;;AACA,QAAI,CAACQ,kBAAUC,WAAV,CAAsBJ,KAAtB,KAAgCK,gBAAQC,SAAR,CAAkBN,KAAlB,CAAjC,KACCA,KAAK,CAACO,IAAN,CAAWC,SADZ,IACyB,CAAC,sBAAUV,WAAV,CAD9B,EACsD;AACpD,UAAIW,CAAC,GAAGlB,KAAK,GAAG,CAAhB;;AACA,aAAOkB,CAAC,GAAGjB,GAAX,EAAgB;AACd,cAAMkB,IAAI,GAAGd,MAAM,CAACK,KAAP,CAAaQ,CAAb,CAAb;;AACA,YAAI,EAAE,CAACN,kBAAUC,WAAV,CAAsBM,IAAtB,KAA+BL,gBAAQC,SAAR,CAAkBI,IAAlB,CAAhC,KACDA,IAAI,CAACH,IAAL,CAAUC,SADT,IAED,4BAAME,IAAI,CAACH,IAAL,CAAUC,SAAhB,EAA2BR,KAAK,CAACO,IAAN,CAAWC,SAAtC,CAFD,CAAJ,EAGG;AACD;AACD;;AACDC,QAAAA,CAAC,IAAI,CAAL;AACD;;AAED,YAAME,QAAQ,GAAGf,MAAM,CAACK,KAAP,CAAaW,KAAb,CAAmBrB,KAAnB,EAA0BkB,CAA1B,CAAjB;AAEA,YAAMI,MAAM,GAAG,0BAAc;AAC3BN,QAAAA,IAAI,EAAEP,KAAK,CAACO,IADe;AAE3BO,QAAAA,GAAG,EAAG,GAAEd,KAAK,CAACc,GAAI,QAFS;AAG3Bb,QAAAA,KAAK,EAAEU;AAHoB,OAAd,CAAf;AAMA,aAAO;AACLD,QAAAA,IAAI,EAAEG,MADD;AAELE,QAAAA,aAAa,EAAE,CAACN,CAAD,EAAIjB,GAAJ;AAFV,OAAP;AAID;;AAED,WAAOG,IAAI,EAAX;AACD,GAvCD;AAwCD","sourcesContent":["import equal from 'fast-deep-equal';\nimport { Plugin, Document, Block } from '@ali/4ever-cangjie';\nimport { Heading, Paragraph } from '@ali/4ever-mo';\nimport { createCallout, isCallout } from '../utils';\n\nexport default function createGroupNodes(config): Plugin['groupNodes'] {\n  return function groupNodes([start, end], ctx, controller, next) {\n    const { parent, groups } = ctx;\n    const parentGroup = groups[groups.length - 1];\n    const first = parent.nodes[start];\n\n    if (config.shouldDisableGroup && config.shouldDisableGroup()) {\n      return next();\n    }\n\n    // 仅仅支持一级分组\n    if ((Paragraph.isParagraph(first) || Heading.isHeading(first))\n      && first.data.calloutPr && !isCallout(parentGroup)) {\n      let i = start + 1;\n      while (i < end) {\n        const node = parent.nodes[i];\n        if (!((Paragraph.isParagraph(node) || Heading.isHeading(node))\n          && node.data.calloutPr\n          && equal(node.data.calloutPr, first.data.calloutPr)\n        )) {\n          break;\n        }\n        i += 1;\n      }\n\n      const children = parent.nodes.slice(start, i) as Block[];\n\n      const result = createCallout({\n        data: first.data,\n        key: `${first.key}-group`,\n        nodes: children,\n      });\n\n      return {\n        node: result,\n        remainedRange: [i, end],\n      };\n    }\n\n    return next();\n  };\n}\n"],"file":"createGroupNodes.js"}