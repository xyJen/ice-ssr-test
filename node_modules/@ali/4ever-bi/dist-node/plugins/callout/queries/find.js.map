{"version":3,"sources":["../../../../../src/plugins/callout/queries/find.ts"],"names":["getCalloutStartBlock","controller","block","document","value","startBlock","previousBlock","getPreviousBlock","key","data","calloutPr","getCalloutEndBlock","endBlock","nextBlock","getNextBlock"],"mappings":";;;;;;;;;;AACA;;AACA;;AAEO,SAASA,oBAAT,CAA8BC,UAA9B,EAAsDC,KAAtD,EAAsE;AAC3E,MAAI,CAAC,+BAAmBA,KAAnB,CAAL,EAAgC;AAC9B,WAAO,IAAP;AACD;;AAED,QAAM;AAAEC,IAAAA;AAAF,MAAeF,UAAU,CAACG,KAAhC;AAEA,MAAIC,UAAU,GAAGH,KAAjB;AACA,MAAII,aAAa,GAAGH,QAAQ,CAACI,gBAAT,CAA0BF,UAAU,CAACG,GAArC,CAApB;;AAEA,SACEF,aAAa,IACb,+BAAmBA,aAAnB,CADA,IAEA,4BAAMD,UAAU,CAACI,IAAX,CAAgBC,SAAtB,EAAiCJ,aAAa,CAACG,IAAd,CAAmBC,SAApD,CAHF,EAIE;AACAL,IAAAA,UAAU,GAAGC,aAAb;AACAA,IAAAA,aAAa,GAAGH,QAAQ,CAACI,gBAAT,CAA0BF,UAAU,CAACG,GAArC,CAAhB;AACD;;AAED,SAAOH,UAAP;AACD;;AAEM,SAASM,kBAAT,CAA4BV,UAA5B,EAAoDC,KAApD,EAAoE;AACzE,MAAI,CAAC,+BAAmBA,KAAnB,CAAL,EAAgC;AAC9B,WAAO,IAAP;AACD;;AAED,QAAM;AAAEC,IAAAA;AAAF,MAAeF,UAAU,CAACG,KAAhC;AAEA,MAAIQ,QAAQ,GAAGV,KAAf;AACA,MAAIW,SAAS,GAAGV,QAAQ,CAACW,YAAT,CAAsBF,QAAQ,CAACJ,GAA/B,CAAhB;;AAEA,SACEK,SAAS,IACT,+BAAmBA,SAAnB,CADA,IAEA,4BAAMD,QAAQ,CAACH,IAAT,CAAcC,SAApB,EAA+BG,SAAS,CAACJ,IAAV,CAAeC,SAA9C,CAHF,EAIE;AACAE,IAAAA,QAAQ,GAAGC,SAAX;AACAA,IAAAA,SAAS,GAAGV,QAAQ,CAACW,YAAT,CAAsBF,QAAQ,CAACJ,GAA/B,CAAZ;AACD;;AAED,SAAOI,QAAP;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport equal from 'fast-deep-equal';\nimport { Callout, isCalloutParagraph } from '../utils';\n\nexport function getCalloutStartBlock(controller: Controller, block: Callout) {\n  if (!isCalloutParagraph(block)) {\n    return null;\n  }\n\n  const { document } = controller.value;\n\n  let startBlock = block;\n  let previousBlock = document.getPreviousBlock(startBlock.key);\n\n  while (\n    previousBlock &&\n    isCalloutParagraph(previousBlock) &&\n    equal(startBlock.data.calloutPr, previousBlock.data.calloutPr)\n  ) {\n    startBlock = previousBlock;\n    previousBlock = document.getPreviousBlock(startBlock.key);\n  }\n\n  return startBlock;\n}\n\nexport function getCalloutEndBlock(controller: Controller, block: Callout) {\n  if (!isCalloutParagraph(block)) {\n    return null;\n  }\n\n  const { document } = controller.value;\n\n  let endBlock = block;\n  let nextBlock = document.getNextBlock(endBlock.key);\n\n  while (\n    nextBlock &&\n    isCalloutParagraph(nextBlock) &&\n    equal(endBlock.data.calloutPr, nextBlock.data.calloutPr)\n  ) {\n    endBlock = nextBlock;\n    nextBlock = document.getNextBlock(endBlock.key);\n  }\n\n  return endBlock;\n}\n"],"file":"find.js"}