"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Button;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _everBamboo = require("@ali/4ever-bamboo");

var _hotKeyTips = require("../utils/hotKeyTips");

var _actions = require("../actions");

const _createElement = /*#__PURE__*/React.createElement;
;
const titles = {
  increase: _hotKeyTips.INCREASE_HOT_KEY_TIP,
  decrease: _hotKeyTips.DECREASE_HOT_KEY_TIP
};
const MemoIndentButton = /*#__PURE__*/React.memo(_weToolbar.IndentButton);

function Button(props) {
  const {
    controller,
    locale,
    ...rest
  } = props;
  const isInc = true; // 默认始终增加缩进

  const onSelect = React.useCallback(value => {
    controller.run('onAction', value === 'increase' ? (0, _actions.increaseIndent)() : (0, _actions.decreaseIndent)());
  }, [controller]);
  const handleClick = React.useCallback(() => {
    controller.run('onAction', (0, _actions.increaseIndent)());
  }, [controller]);
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const disabled = isCollapsedAtEdge || controller.query('isSelectionInListSymbol');
  const tip = isInc ? `${locale.rightButtonTitle} ${_hotKeyTips.INCREASE_HOT_KEY_TIP}` : `${locale.leftButtonTitle} ${_hotKeyTips.DECREASE_HOT_KEY_TIP}`;
  return /*#__PURE__*/_createElement(MemoIndentButton, (0, _extends2.default)({}, rest, {
    shortcutText: tip,
    titles: titles,
    disabled: disabled,
    testid: "bi-toolbar-indent",
    onClick: handleClick,
    onSelect: onSelect,
    role: _everBamboo.PluginRoles.indent
  }));
}
//# sourceMappingURL=IndentButton.js.map