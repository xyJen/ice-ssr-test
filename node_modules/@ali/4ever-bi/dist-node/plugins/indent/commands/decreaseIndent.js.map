{"version":3,"sources":["../../../../../src/plugins/indent/commands/decreaseIndent.ts"],"names":["editor","trigger","givenValue","value","indentVal","undefined","INDENT_SIZE","selectedBlocks","depthItems","hasFirstStart","query","forEach","node","indentNode","indentNodeData","data","list","ind","nextInd","firstLine","firstLineChars","left","leftChars","hanging","hangingChars","firstLineIndent","hangingIndent","IndentTrigger","keyboard","Math","max","INDENT_SIZE_CHARS","MIN_INDENT_SIZE","DEFAULT_INDENT","command","Commands","setNodeByKey","key"],"mappings":"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","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { IndentProperties } from '@ali/4ever-mo';\nimport { getClosestParagraph } from '@ali/4ever-utils';\nimport { getBlocksFromEditor, isEqualWithDefault }  from '@ali/4ever-utils';\nimport { decreaseListLevel } from '../utils/setListLevelByIntent';\nimport { INDENT_SIZE, MIN_INDENT_SIZE, INDENT_SIZE_CHARS, DEFAULT_INDENT, IndentTrigger } from '../utils';\n\nexport default (editor: Controller, trigger?: IndentTrigger, givenValue?: number) => {\n  const { value } = editor;\n  const indentVal = givenValue !== undefined ? givenValue : INDENT_SIZE;\n\n  let selectedBlocks = getBlocksFromEditor(editor);\n  const { depthItems, hasFirstStart } = editor.query('getListDepthItems') || {};\n  if (hasFirstStart) {\n    selectedBlocks = depthItems;\n  }\n  selectedBlocks.forEach((node) => {\n    const indentNode = getClosestParagraph(value, node);\n    if (indentNode) {\n      const indentNodeData = indentNode.data || {};\n      const { list } = indentNodeData;\n\n      if (list) {\n        return decreaseListLevel(editor, indentNode, hasFirstStart!);\n      }\n      const ind = (indentNodeData.ind || {}) as IndentProperties; // data.ind can be null\n      const nextInd: IndentProperties = { ...ind };\n      const {\n        firstLine = 0,\n        firstLineChars = 0,\n        left = 0,\n        leftChars = 0,\n        hanging = 0,\n        hangingChars = 0,\n      } = ind;\n\n      const firstLineIndent = firstLineChars || firstLine;\n      const hangingIndent = hangingChars || hanging || firstLine < 0;\n\n      switch (trigger) {\n        case IndentTrigger.keyboard:\n          if (hangingIndent) {\n            // 取消设置的悬挂缩进\n            delete nextInd.hanging;\n            delete nextInd.hangingChars;\n            if (firstLine < 0) {\n              delete nextInd.firstLine;\n            }\n          } else if (firstLineIndent) {\n            // 取消设置的行首缩进\n            delete nextInd.firstLine;\n            delete nextInd.firstLineChars;\n          } else if (leftChars) {\n            // 未设置行首和悬挂缩进：减少 left 和 leftChars\n            // 一次减少两字符\n            nextInd.leftChars = Math.max(leftChars - INDENT_SIZE_CHARS, MIN_INDENT_SIZE);\n            // 兜底\n            nextInd.left = nextInd.leftChars / INDENT_SIZE_CHARS * INDENT_SIZE;\n          } else {\n            nextInd.left = Math.max(left - indentVal, MIN_INDENT_SIZE);\n          }\n          break;\n        default:\n          // 传进来的视为像素单位\n          if (leftChars) {\n            // toolbar 按钮一次少两个字符\n            nextInd.leftChars = Math.max(leftChars - INDENT_SIZE_CHARS, MIN_INDENT_SIZE);\n            nextInd.left = nextInd.leftChars / INDENT_SIZE_CHARS * INDENT_SIZE;\n          } else {\n            nextInd.left = Math.max(left - indentVal, MIN_INDENT_SIZE);\n          }\n      }\n\n      if (isEqualWithDefault(nextInd, ind, DEFAULT_INDENT)) {\n        return undefined;\n      }\n      editor.command(Commands.setNodeByKey, indentNode.key, {\n        data: {\n          ...indentNodeData,\n          ind: nextInd,\n        },\n      });\n    }\n    return undefined;\n  });\n\n  return editor;\n};\n"],"file":"decreaseIndent.js"}