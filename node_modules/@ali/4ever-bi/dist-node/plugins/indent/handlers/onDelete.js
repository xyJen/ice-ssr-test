"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onDelete;

var _everCangjie = require("@ali/4ever-cangjie");

var _everMo = require("@ali/4ever-mo");

var _decreaseIndent = _interopRequireDefault(require("../commands/decreaseIndent"));

var _everUtils = require("@ali/4ever-utils");

var _utils = require("../utils");

function onDelete(event, editor, next) {
  const {
    value
  } = editor;
  const {
    document
  } = value;
  const {
    selection
  } = value;

  if (selection?.isExpanded) {
    return next();
  }

  const {
    startText
  } = value; // 代码块因为不是 void(历史原因)，当内容末尾是 4 个空格时，要跳过这段逻辑

  if (_everMo.Code.isCode(startText)) {
    return next();
  }

  const startOffset = selection.convertToTextPoints(document).start.offset;

  if (startOffset > 0) {
    if (startOffset < 4) {
      return next();
    }

    const prevText = startText ? startText.text.slice(startOffset - 4, startOffset) : '';

    if (prevText !== '    ') {
      return next();
    }
    /* 若前面有四个连续空格，则删除 */


    event.preventDefault();
    return editor.command(_everCangjie.Commands.removeTextByKey, startText ? startText.key : '', startOffset - 4, '    ');
  }
  /* 在行首 backspace/delete 撤销缩进 */


  const currentParagraph = (0, _everUtils.getClosestParagraph)(value);

  if (!currentParagraph) {
    return next();
  }

  const isDeleteAtFirstChar = selection.anchor.isAtStartOfNode(currentParagraph);

  if (!isDeleteAtFirstChar) {
    return next();
  }

  const {
    ind
  } = currentParagraph.data;

  if (!ind) {
    return next();
  }

  const hasLeftInd = ind.leftChars || ind.left || ind.firstLine || ind.firstLineChars || ind.hanging || ind.hangingChars;

  if (!hasLeftInd) {
    return next();
  }

  event.preventDefault();
  return (0, _decreaseIndent.default)(editor, _utils.IndentTrigger.keyboard);
}
//# sourceMappingURL=onDelete.js.map