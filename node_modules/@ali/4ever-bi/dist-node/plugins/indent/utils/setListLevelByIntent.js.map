{"version":3,"sources":["../../../../../src/plugins/indent/utils/setListLevelByIntent.ts"],"names":["INDENT_SIZE","IndentPlugin","setBlockLeftByKey","controller","listBlock","indLeft","command","Commands","setNodeByKey","key","data","ind","left","increaseListLevel","hasFirstStart","list","Math","min","INDENT_SIZE_CHARS","decreaseListLevel","max"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,wBAAxB;;AAEA,SAASC,iBAAT,CAA2BC,UAA3B,EAAmDC,SAAnD,EAAqEC,OAArE,EAAsF;AACpF,SAAOF,UAAU,CAACG,OAAX,CAAmBC,sBAASC,YAA5B,EAA0CJ,SAAS,CAACK,GAApD,EAAyD;AAC9DC,IAAAA,IAAI,EAAE,EACJ,GAAGN,SAAS,CAACM,IADT;AAEJC,MAAAA,GAAG,EAAE,EACH,GAAIP,SAAD,CAAmBO,GADnB;AAEHC,QAAAA,IAAI,EAAEP;AAFH;AAFD;AADwD,GAAzD,CAAP;AASD;;AAGM,SAASQ,iBAAT,CAA2BV,UAA3B,EAAmDC,SAAnD,EAA4EU,aAA5E,EAAoG;AACzG,MAAI,CAACV,SAAL,EAAgB,OAAOD,UAAP;AAChB,QAAM;AAAEY,IAAAA;AAAF,MAAWX,SAAS,CAACM,IAAV,IAAkB,EAAnC;AACA,MAAI,CAACK,IAAL,EAAW,OAAOZ,UAAP;;AACX,MAAIW,aAAJ,EAAmB;AACjB,UAAMT,OAAO,GAAGW,IAAI,CAACC,GAAL,CAAS,CAACb,SAAS,CAACM,IAAV,EAAgBC,GAAhB,EAAqBC,IAArB,IAA6B,CAA9B,IAAmCZ,WAA5C,EAAyDkB,mBAAzD,CAAhB;AACA,WAAOhB,iBAAiB,CAACC,UAAD,EAAaC,SAAb,EAAwBC,OAAxB,CAAxB;AACD;;AACD,SAAOF,UAAU,CAACG,OAAX,CAAmB,oBAAnB,EAAyC,CAAzC,EAA4CF,SAA5C,CAAP;AACD;;AAEM,SAASe,iBAAT,CAA2BhB,UAA3B,EAAmDC,SAAnD,EAA4EU,aAA5E,EAAoG;AACzG,MAAI,CAACV,SAAL,EAAgB,OAAOD,UAAP;AAChB,QAAM;AAAEY,IAAAA;AAAF,MAAWX,SAAS,CAACM,IAAV,IAAkB,EAAnC;AACA,MAAI,CAACK,IAAL,EAAW,OAAOZ,UAAP;;AACX,MAAIW,aAAJ,EAAmB;AACjB,UAAMT,OAAO,GAAGW,IAAI,CAACI,GAAL,CAAS,CAAChB,SAAS,CAACM,IAAV,EAAgBC,GAAhB,EAAqBC,IAArB,IAA6B,CAA9B,IAAmCZ,WAA5C,EAAyD,CAAzD,CAAhB;AACA,WAAOE,iBAAiB,CAACC,UAAD,EAAaC,SAAb,EAAwBC,OAAxB,CAAxB;AACD;;AACD,SAAOF,UAAU,CAACG,OAAX,CAAmB,oBAAnB,EAAyC,CAAC,CAA1C,EAA6CF,SAA7C,CAAP;AACD","sourcesContent":["import { Controller, Commands, Block } from '@ali/4ever-cangjie';\nimport { IndentPlugin } from '@ali/4ever-bamboo';\nimport { INDENT_SIZE_CHARS } from './';\n\nconst { INDENT_SIZE } = IndentPlugin;\n\nfunction setBlockLeftByKey(controller: Controller, listBlock: Block, indLeft: number) {\n  return controller.command(Commands.setNodeByKey, listBlock.key, {\n    data: {\n      ...listBlock.data,\n      ind: {\n        ...(listBlock as any).ind,\n        left: indLeft,\n      },\n    },\n  });\n}\n\n\nexport function increaseListLevel(controller: Controller, listBlock: Block | null, hasFirstStart: boolean) {\n  if (!listBlock) return controller;\n  const { list } = listBlock.data || {};\n  if (!list) return controller;\n  if (hasFirstStart) {\n    const indLeft = Math.min((listBlock.data?.ind?.left || 0) + INDENT_SIZE, INDENT_SIZE_CHARS);\n    return setBlockLeftByKey(controller, listBlock, indLeft);\n  }\n  return controller.command('increaseItemByNode', 1, listBlock)\n}\n\nexport function decreaseListLevel(controller: Controller, listBlock: Block | null, hasFirstStart: boolean) {\n  if (!listBlock) return controller;\n  const { list } = listBlock.data || {};\n  if (!list) return controller;\n  if (hasFirstStart) {\n    const indLeft = Math.max((listBlock.data?.ind?.left || 0) - INDENT_SIZE, 0);\n    return setBlockLeftByKey(controller, listBlock, indLeft);\n  }\n  return controller.command('increaseItemByNode', -1, listBlock)\n}\n"],"file":"setListLevelByIntent.js"}