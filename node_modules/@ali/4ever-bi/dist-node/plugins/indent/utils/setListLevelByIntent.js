"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.increaseListLevel = increaseListLevel;
exports.decreaseListLevel = decreaseListLevel;

var _everCangjie = require("@ali/4ever-cangjie");

var _everBamboo = require("@ali/4ever-bamboo");

var _ = require("./");

const {
  INDENT_SIZE
} = _everBamboo.IndentPlugin;

function setBlockLeftByKey(controller, listBlock, indLeft) {
  return controller.command(_everCangjie.Commands.setNodeByKey, listBlock.key, {
    data: { ...listBlock.data,
      ind: { ...listBlock.ind,
        left: indLeft
      }
    }
  });
}

function increaseListLevel(controller, listBlock, hasFirstStart) {
  if (!listBlock) return controller;
  const {
    list
  } = listBlock.data || {};
  if (!list) return controller;

  if (hasFirstStart) {
    const indLeft = Math.min((listBlock.data?.ind?.left || 0) + INDENT_SIZE, _.INDENT_SIZE_CHARS);
    return setBlockLeftByKey(controller, listBlock, indLeft);
  }

  return controller.command('increaseItemByNode', 1, listBlock);
}

function decreaseListLevel(controller, listBlock, hasFirstStart) {
  if (!listBlock) return controller;
  const {
    list
  } = listBlock.data || {};
  if (!list) return controller;

  if (hasFirstStart) {
    const indLeft = Math.max((listBlock.data?.ind?.left || 0) - INDENT_SIZE, 0);
    return setBlockLeftByKey(controller, listBlock, indLeft);
  }

  return controller.command('increaseItemByNode', -1, listBlock);
}
//# sourceMappingURL=setListLevelByIntent.js.map