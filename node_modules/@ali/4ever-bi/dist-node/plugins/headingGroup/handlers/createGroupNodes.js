"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

var _everPluginHeadingGroup = require("@ali/4ever-plugin-heading-group");

var _utils = require("../utils");

function defaultIgnore() {
  return false;
}

function createGroupNodes(config) {
  const {
    level = 3,
    ignore = defaultIgnore,
    pass
  } = config;

  const groupConditions = _everPluginHeadingGroup.headingGroupList.slice(0, level);

  return function groupNodes(range, ctx, controller, next) {
    const [start] = range;
    const {
      parent,
      groups
    } = ctx;
    const first = parent.nodes[start];
    const second = parent.nodes[start + 1];
    const parentGroup = groups[groups.length - 1]; // 如果不是一级节点，或者是文档末尾，则不分组

    if (!_everCangjie.Document.isDocument(parent) || !second || ignore(first)) {
      return next();
    } // 查找可用的 group 条件


    const $condition = groupConditions.find(({
      type,
      when
    }) => {
      return when(first) && !(0, _utils.isGroupFrom)(parentGroup, type);
    }); // group 节点

    if ($condition) {
      const {
        until,
        type
      } = $condition;
      return (0, _utils.group)(range, parent, type, until, pass);
    }

    return next();
  };
}

var _default = createGroupNodes;
exports.default = _default;
//# sourceMappingURL=createGroupNodes.js.map