{"version":3,"sources":["../../../../../src/plugins/subject/handlers/createOnAction.ts"],"names":["createOnAction","onAction","action","controller","next","type","payload","TOGGLE_FINISHED","node","finished","command","toggleFinished","INSERT_SUBJECT","direction","properties","insertSubject","INSERT_BLOCK","blockProps","Commands","insertBlock","HIGHLIGHT_SUBJECT","subjectId","highlight","highlightSubject"],"mappings":";;;;;;;AAAA;;AACA;;AAUA;;AAEA,SAASA,cAAT,GAA8C;AAC5C,SAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4C;AACjD,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBJ,MAA1B;;AAEA,QAAIG,IAAI,KAAKE,wBAAb,EAA8B;AAC5B,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAqBH,OAA3B;AACA,aAAOH,UAAU,CAACO,OAAX,CAAmBC,wBAAnB,EAAmCH,IAAnC,EAAyCC,QAAzC,CAAP;AACD;;AAED,QAAIJ,IAAI,KAAKO,uBAAb,EAA6B;AAC3B,YAAM;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA,SAAR;AAAmBC,QAAAA;AAAnB,UAAkCR,OAAxC;AACA,aAAOH,UAAU,CAACO,OAAX,CAAmBK,uBAAnB,EAAkCD,UAAlC,EAA8CN,IAA9C,EAAoDK,SAApD,CAAP;AACD;;AAED,QAAIR,IAAI,KAAKW,qBAAb,EAA2B;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAiBX,OAAvB;AACA,aAAOH,UAAU,CAACO,OAAX,CAAmBQ,sBAASC,WAA5B,EAAyCF,UAAzC,CAAP;AACD;;AAED,QAAIZ,IAAI,KAAKe,0BAAb,EAAgC;AAC9B,YAAM;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAA2BhB,OAAjC;AACA,aAAOH,UAAU,CAACO,OAAX,CAAmBa,0BAAnB,EAAqCF,SAArC,EAAgDC,SAAhD,CAAP;AACD;;AAED,WAAOlB,IAAI,EAAX;AACD,GAxBD;AAyBD;;eAEcJ,c","sourcesContent":["import { Commands, Plugin } from '@ali/4ever-cangjie';\nimport {\n  TOGGLE_FINISHED,\n  ToggleFinishedPayload,\n  INSERT_SUBJECT,\n  InsertSubjectPayload,\n  INSERT_BLOCK,\n  InsertBlockPayload,\n  HIGHLIGHT_SUBJECT,\n  HighlightSubjectPayload,\n} from '../actions';\nimport { highlightSubject, insertSubject, toggleFinished } from '../commands';\n\nfunction createOnAction(): Plugin['onAction'] {\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n\n    if (type === TOGGLE_FINISHED) {\n      const { node, finished } = payload as ToggleFinishedPayload;\n      return controller.command(toggleFinished, node, finished);\n    }\n\n    if (type === INSERT_SUBJECT) {\n      const { node, direction, properties } = payload as InsertSubjectPayload;\n      return controller.command(insertSubject, properties, node, direction);\n    }\n\n    if (type === INSERT_BLOCK) {\n      const { blockProps } = payload as InsertBlockPayload;\n      return controller.command(Commands.insertBlock, blockProps);\n    }\n\n    if (type === HIGHLIGHT_SUBJECT) {\n      const { subjectId, highlight } = payload as HighlightSubjectPayload;\n      return controller.command(highlightSubject, subjectId, highlight);\n    }\n\n    return next();\n  };\n}\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}