{"version":3,"sources":["../../../../src/plugins/subject/helpers.ts"],"names":["Heading1","Heading","isNextNewSubject","node","isDisableNewLineGuide","document","prev1","getPreviousBlock","key","next","getNextBlock","isHeading1","data","subjectPr","name","findPrevSubjectIndex","value","from","selection","focus","path","getPath","i","nodes","findNextSubjectIndex","length","slice","some","block","getSubjectBorderColor","hasSubjectBeenSelected","controller","SELECTED_SUBJECT_KEY"],"mappings":"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","sourcesContent":["import { Block, Controller, Document, Value } from '@ali/4ever-cangjie';\nimport { isEmptyNode, isNormalParagraph, isSubjectHeading } from './utils';\nimport { Heading } from '@ali/4ever-mo';\nimport { SELECTED_SUBJECT_KEY } from './constants';\n\nconst { Heading1 } = Heading;\n\nfunction isNextNewSubject(node: Block | null) {\n  if (node) {\n    return isSubjectHeading(node);\n  }\n  return true;\n}\n\n/**\n * 判断节点是否禁止 newLineGuide\n * @param node\n * @param document\n * @returns\n */\nexport function isDisableNewLineGuide(node: Block, document: Document): boolean {\n  if (isNormalParagraph(node) && isEmptyNode(node)) {\n    const prev1 = document.getPreviousBlock(node.key);\n    const next = document.getNextBlock(node.key);\n\n    // 如果上一个节点不存在\n    if (!prev1) {\n      return false;\n    }\n\n    // 如果上一个节点是闪电回顾标题\n    if (Heading1.isHeading1(prev1) && prev1.data.subjectPr) {\n      const { name } = prev1.data.subjectPr;\n      return (name === 'review' || name === 'topic' || name === 'conclusion') && isNextNewSubject(next);\n    }\n  }\n\n  return false;\n}\n\n/**\n * 查找上一个可插入议题的坐标\n * @param value\n * @param from 查询开始节点，若不指定，则默认为光标 focus 节点\n * @returns\n */\nexport function findPrevSubjectIndex(value: Value, from?: Block): number {\n  const { document, selection } = value;\n  const { focus } = selection;\n\n  const path = from ? document.getPath(from.key) : document.getPath(focus.key);\n  if (!path) {\n    return 0;\n  }\n\n  // 从当前聚焦段落开始查找，因为 while 内默认会 -1，此处坐标定位在下一个位置\n  let i = path[0] + 1;\n\n  while (i > 0) {\n    i -= 1;\n    const node = document.nodes[i];\n    if (isSubjectHeading(node)) {\n      break;\n    }\n  }\n\n  return i;\n}\n\n/**\n * 查找下一个可插入议题的坐标\n * @param value 文档数据\n * @param from 查询开始节点，若不指定，则默认为光标 focus 节点\n * @returns\n */\nexport function findNextSubjectIndex(value: Value, from?: Block): number {\n  const { document, selection } = value;\n  const { focus } = selection;\n\n  const path = from ? document.getPath(from.key) : document.getPath(focus.key);\n  if (!path) {\n    return document.nodes.length;\n  }\n\n  // 从当前聚焦段落的下一个兄弟开始查找\n  let i = path[0] + 1;\n\n  // 若光标前没有议题\n  if (\n    !document.nodes\n      .slice(0, i)\n      .some((node) => Heading1.isHeading1(node) && node.data.subjectPr)\n  ) {\n    return i;\n  }\n\n  for (; i < document.nodes.length; i++) {\n    const block = document.nodes[i];\n    // 找到第一个议题中断\n    if (Heading1.isHeading1(block) && block.data.subjectPr) {\n      break;\n    }\n  }\n\n  return i;\n}\n\n/**\n * 获取议题颜色 (Designed By @狗毛)\n * @param name 议题名称\n * @returns\n */\nexport function getSubjectBorderColor(name: string): string {\n  if (name === 'review') {\n    return '#F4C800';\n  }\n  if (name === 'topic') {\n    return '#0089FF';\n  }\n  if (name === 'conclusion') {\n    return '#00B042';\n  }\n  return '#0089FF';\n}\n\n/**\n * 是否有议题被选中\n * @param controller\n * @returns\n */\nexport function hasSubjectBeenSelected(controller: Controller) {\n  const { data } = controller.value;\n  if (SELECTED_SUBJECT_KEY in data) {\n    return true;\n  }\n  return false;\n}\n"],"file":"helpers.js"}