"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _everBamboo = require("@ali/4ever-bamboo");

var _utils = require("../utils");

const _createElement = /*#__PURE__*/React.createElement;
const {
  Content
} = _everBamboo.HeadingGroupPlugin;
const {
  components
} = _everBamboo.SubjectPlugin;
const {
  Placeholder,
  InlinePlaceholder,
  InnerTextWrapper,
  InnerCardWrapper,
  SubjectPlaceholderWrapper
} = components;

const SubjectContent = props => {
  const {
    node,
    children,
    config,
    controller,
    ...rest
  } = props;
  const {
    subjectPr = {}
  } = node.data;
  const {
    name
  } = subjectPr;
  const {
    locale = {},
    renderInsertAttachmentComponent
  } = config;
  const {
    review: reviewConfig
  } = config;
  const {
    renderReviewPlaceholder: ReviewPlaceholder
  } = reviewConfig || {};
  const {
    reviewTextPlaceholder,
    topicContentPlaceholder,
    topicContentPlaceholderMobile,
    reviewTextPlaceholderMobile,
    conclusionContentPlaceholder
  } = locale;
  const node1 = node.nodes[1];

  const displayPlaceholder1 = item => {
    if (name === 'review' || name === 'topic' || name === 'conclusion') {
      return (0, _utils.isNormalParagraph)(item) && (0, _utils.isEmptyNode)(item) && node.nodes.length === 2;
    }

    return false;
  };

  var _ref = /*#__PURE__*/_createElement(ReviewPlaceholder, {
    node: node
  });

  const renderFileChoosePlaceholder = () => {
    const hasReviewTaskList = !!node.nodes.find(node => node?.data?.list?.isTaskList); // 没有taskList

    if (!hasReviewTaskList && ReviewPlaceholder) {
      return _ref;
    }

    return null;
  };

  const focusToLine = React.useCallback(() => {
    controller.command(_everCangjie.Commands.moveToStartOfNode, node1);
  }, [controller, node1]);

  const renderAttachmentPlaceholder = () => {
    if (renderInsertAttachmentComponent) {
      return renderInsertAttachmentComponent({
        focusToLine
      });
    }

    return null;
  };

  var _ref2 = /*#__PURE__*/_createElement(InlinePlaceholder, {
    "data-placeholder": true
  }, reviewTextPlaceholderMobile);

  var _ref3 = /*#__PURE__*/_createElement(InnerTextWrapper, null, reviewTextPlaceholder);

  var _ref4 = /*#__PURE__*/_createElement(InlinePlaceholder, {
    "data-placeholder": true
  }, topicContentPlaceholderMobile);

  var _ref5 = /*#__PURE__*/_createElement(InnerTextWrapper, null, topicContentPlaceholder);

  var _ref6 = /*#__PURE__*/_createElement(InlinePlaceholder, {
    "data-placeholder": true
  }, conclusionContentPlaceholder);

  const placeholder = React.useMemo(() => {
    if (name === 'review') {
      if (_everCangjie.environment.IS_MOBILE) {
        return _ref2;
      }

      return /*#__PURE__*/_createElement(SubjectPlaceholderWrapper, {
        "data-placeholder": true
      }, _ref3, /*#__PURE__*/_createElement(InnerCardWrapper, null, renderFileChoosePlaceholder()));
    } // 议题内容 placeholder


    if (name === 'topic') {
      if (_everCangjie.environment.IS_MOBILE) {
        return _ref4;
      }

      return /*#__PURE__*/_createElement(SubjectPlaceholderWrapper, {
        "data-placeholder": true
      }, _ref5, /*#__PURE__*/_createElement(InnerCardWrapper, {
        className: "attachment"
      }, renderAttachmentPlaceholder()));
    } // 会议小结内容 placeholder


    if (name === 'conclusion') {
      return _ref6;
    }

    return null;
  }, [conclusionContentPlaceholder, name, reviewTextPlaceholder, topicContentPlaceholder, topicContentPlaceholderMobile, renderFileChoosePlaceholder]);

  if (children.length === 0) {
    return null;
  }

  return /*#__PURE__*/_createElement(Content, rest, node1 && /*#__PURE__*/_createElement(Placeholder, {
    controller: controller,
    node: node1,
    display: displayPlaceholder1,
    placeholder: placeholder
  }, children[0]), children.slice(1));
};

SubjectContent.displayName = 'SubjectContent';
var _default = SubjectContent;
exports.default = _default;
//# sourceMappingURL=content.js.map