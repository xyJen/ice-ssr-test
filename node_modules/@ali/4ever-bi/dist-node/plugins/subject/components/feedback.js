"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _classnames = _interopRequireDefault(require("classnames"));

const _createElement = /*#__PURE__*/React.createElement;
const fadeIn = /*#__PURE__*/(0, _styledComponents.keyframes)(["0%{opacity:0;transform:translate(0,20%);}80%{opacity:1;transform:translate(0,-5%);}100%{transform:translate(0,0);}"]);
const fadeOut = /*#__PURE__*/(0, _styledComponents.keyframes)(["0%{opacity:1;transform:translate(0,0);}100%{opacity:0;transform:translate(0,20%);}"]);

const FeedbackBox = /*#__PURE__*/_styledComponents.default.div(["display:flex;align-items:center;white-space:nowrap;background:#FFFFFF;box-shadow:0px 2px 6px rgba(0,0,0,0.0823864);border-radius:4px;font-size:12px;color:rgba(17,31,44,0.65);cursor:default;&.fade-in{animation-name:", ";animation-duration:0.4s;}&.fade-out{animation-name:", ";animation-duration:0.4s;}"], fadeIn, fadeOut);

const Feedback = props => {
  const {
    visible,
    children,
    className,
    ...rest
  } = props;
  const [internalVisible, setInternalVisible] = React.useState(visible);
  const [animate, setAnimate] = React.useState(false);
  const visibleRef = React.useRef(visible);
  const handleAnimationEnd = React.useCallback(() => {
    setAnimate(false);
    setInternalVisible(visible);
  }, [visible]);
  React.useEffect(() => {
    if (visible !== visibleRef.current) {
      setAnimate(true);
      setInternalVisible(true);
      visibleRef.current = visible;
    }
  }, [visible]);
  const classNames = (0, _classnames.default)(className, {
    'fade-in': animate && visible,
    'fade-out': animate && !visible
  });

  if (!internalVisible) {
    return null;
  }

  return /*#__PURE__*/_createElement(FeedbackBox, (0, _extends2.default)({}, rest, {
    className: classNames,
    onAnimationEnd: handleAnimationEnd
  }), children);
};

Feedback.displayName = 'FeedbackBox';
var _default = Feedback;
exports.default = _default;
//# sourceMappingURL=feedback.js.map