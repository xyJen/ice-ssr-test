{"version":3,"sources":["../../../../../src/plugins/uuid/handlers/onChange.ts"],"names":["createOnChange","config","onChange","controller","next","generateLeafBlockId","tmp","blocks","operations","map","o","type","undefined","path","filter","p","n","value","document","getNodeByPath","Block","isBlock","getClosestBlock","key","reduce","prev","cur","push","node","data","uuid","uuidFn","generator","uniqueId","withoutNormalizing","withoutSaving","forEach","command","Commands","setNodeByKey","refblockUUID"],"mappings":";;;;;;;AAAA;;AACA;;AAGe,SAASA,cAAT,CAAwBC,MAAoB,GAAG,EAA/C,EAAmD;AAChE,SAAO,SAASC,QAAT,CAAkBC,UAAlB,EAA0CC,IAA1C,EAA4D;AACjE,QAAI,CAACH,MAAM,CAACI,mBAAZ,EAAiC;AAC/B,aAAOD,IAAI,EAAX;AACD;;AAED,UAAME,GAAsB,GAAG,EAA/B;AACA,UAAMC,MAAM,GAAGJ,UAAU,CAACK,UAAX,CACZC,GADY,CACPC,CAAD,IAAO;AACV,aAAOA,CAAC,CAACC,IAAF,KAAW,eAAX,GAA6BC,SAA7B,GAAyCF,CAAC,CAACG,IAAlD;AACD,KAHY,EAIZC,MAJY,CAIJC,CAAD,IAAO,CAAC,CAACA,CAJJ,EAKZN,GALY,CAKPM,CAAD,IAAO;AACV,YAAMC,CAAC,GAAGb,UAAU,CAACc,KAAX,CAAiBC,QAAjB,CAA0BC,aAA1B,CAAwCJ,CAAxC,CAAV;;AACA,UAAIC,CAAJ,EAAO;AACL,eAAOI,mBAAMC,OAAN,CAAcL,CAAd,IAAmBA,CAAnB,GAAuBb,UAAU,CAACc,KAAX,CAAiBC,QAAjB,CAA0BI,eAA1B,CAA0CN,CAAC,CAACO,GAA5C,CAA9B;AACD;;AACD,aAAO,IAAP;AACD,KAXY,EAYZC,MAZY,CAYL,CAACC,IAAD,EAAgBC,GAAhB,KAAwB;AAC9B,UAAIA,GAAG,IAAI,CAACpB,GAAG,CAACoB,GAAG,CAACH,GAAL,CAAf,EAA0B;AACxBjB,QAAAA,GAAG,CAACoB,GAAG,CAACH,GAAL,CAAH,GAAe,CAAf;AACAE,QAAAA,IAAI,CAACE,IAAL,CAAUD,GAAV;AACD;;AACD,aAAOD,IAAP;AACD,KAlBY,EAkBV,EAlBU,EAmBZX,MAnBY,CAmBJc,IAAD,IAAU,CAACA,IAAI,CAACC,IAAL,CAAUC,IAnBhB,CAAf;AAqBA,UAAMC,MAAM,GAAG9B,MAAM,CAAC+B,SAAP,IAAoBC,mBAAnC;AAEA9B,IAAAA,UAAU,CAAC+B,kBAAX,CAA8B,MAAM;AAClC;AACA/B,MAAAA,UAAU,CAACgC,aAAX,CAAyB,MAAM;AAC7B5B,QAAAA,MAAM,CAAC6B,OAAP,CAAgBR,IAAD,IAAU;AACvBzB,UAAAA,UAAU,CAACkC,OAAX,CAAmBC,sBAASC,YAA5B,EAA0CX,IAAI,CAAEL,GAAhD,EAAqD;AACnDZ,YAAAA,IAAI,EAAEiB,IAAI,CAAEjB,IADuC;AAEnDkB,YAAAA,IAAI,EAAE,EACJ,GAAGD,IAAI,CAAEC,IADL;AAEJC,cAAAA,IAAI,EAAEF,IAAI,CAACC,IAAL,CAAUW,YAAV,GAAyBZ,IAAI,CAACC,IAAL,CAAUW,YAAnC,GAAkDT,MAAM;AAF1D;AAF6C,WAArD;AAOD,SARD;AASD,OAVD;AAWD,KAbD;AAeA,WAAO3B,IAAI,EAAX;AACD,GA7CD;AA8CD","sourcesContent":["import { Block, Commands, Controller } from '@ali/4ever-cangjie';\nimport { uniqueId }  from '@ali/4ever-utils';\nimport { BiUUIDConfig } from '../util/type';\n\nexport default function createOnChange(config: BiUUIDConfig = {}) {\n  return function onChange(controller: Controller, next: () => void) {\n    if (!config.generateLeafBlockId) {\n      return next();\n    }\n\n    const tmp: Record<string, 1> = {};\n    const blocks = controller.operations\n      .map((o) => {\n        return o.type === 'set_selection' ? undefined : o.path;\n      })\n      .filter((p) => !!p)\n      .map((p) => {\n        const n = controller.value.document.getNodeByPath(p!);\n        if (n) {\n          return Block.isBlock(n) ? n : controller.value.document.getClosestBlock(n.key);\n        }\n        return null;\n      })\n      .reduce((prev: Block[], cur) => {\n        if (cur && !tmp[cur.key]) {\n          tmp[cur.key] = 1;\n          prev.push(cur);\n        }\n        return prev;\n      }, [])\n      .filter((node) => !node.data.uuid);\n\n    const uuidFn = config.generator || uniqueId;\n\n    controller.withoutNormalizing(() => {\n      // NOTE: 加上 withoutSaving 以避免 undo 时 `set_node` 把 redos stack 置空\n      controller.withoutSaving(() => {\n        blocks.forEach((node) => {\n          controller.command(Commands.setNodeByKey, node!.key, {\n            type: node!.type,\n            data: {\n              ...node!.data,\n              uuid: node.data.refblockUUID ? node.data.refblockUUID : uuidFn(),\n            },\n          });\n        });\n      });\n    });\n\n    return next();\n  };\n}\n"],"file":"onChange.js"}