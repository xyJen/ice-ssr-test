"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _clipboardManager = _interopRequireDefault(require("@ali/clipboard-manager"));

var _everPluginClipboard = require("@ali/4ever-plugin-clipboard");

// 兼容
const createClipboardPlugin = configs => (0, _everPluginClipboard.mobileBiFactory)(configs);

const actions = {
  CLIPBOARD_INSERT_FRAGMENT: _everPluginClipboard.CLIPBOARD_INSERT_FRAGMENT,
  CLIPBOARD_SET_DECORATIONS: _everPluginClipboard.CLIPBOARD_SET_DECORATIONS,
  CLIPBOARD_DEL_SELECTION: _everPluginClipboard.CLIPBOARD_DEL_SELECTION,
  CLIPBOARD_HIDE_PASTEPANEL: _everPluginClipboard.CLIPBOARD_HIDE_PASTEPANEL,
  CLIPBOARD_HIDE_CUSTOM_PASTEPANEL: _everPluginClipboard.CLIPBOARD_HIDE_CUSTOM_PASTEPANEL,
  CLIPBOARD_MATCH_MODE: _everPluginClipboard.CLIPBOARD_MATCH_MODE,
  CLIPBOARD_TEXT_MODE: _everPluginClipboard.CLIPBOARD_TEXT_MODE,
  insertFragment: _everPluginClipboard.insertFragment,
  setDecorations: _everPluginClipboard.setDecorations,
  deleteAtRange: _everPluginClipboard.deleteAtRange,
  hidePastePanel: _everPluginClipboard.hidePastePanel,
  hideCustomPastePanel: _everPluginClipboard.hideCustomPastePanel,
  insertMatchFragment: _everPluginClipboard.insertMatchFragment,
  insertTextFragment: _everPluginClipboard.insertTextFragment
};
createClipboardPlugin.actions = actions; // hetu 使用；其他的 urls 引入较多非移动端用内容，暂时不导出

createClipboardPlugin.utils = {
  copyNodes: _everPluginClipboard.copyNodes
};
createClipboardPlugin.ClipboardPad = _everPluginClipboard.ClipboardPad;
createClipboardPlugin.ClipboardManager = _clipboardManager.default;
var _default = createClipboardPlugin;
exports.default = _default;
//# sourceMappingURL=mobile.js.map