{"version":3,"sources":["../../../../../src/plugins/columns/components/ColumnPicker.tsx"],"names":["isArrowRightHotKey","isArrowLeftHotKey","MAX_COLUMN_COUNT","ColumnsPicker","props","activeCount","columnText","onChange","columnItems","items","i","className","onMouseEnter","push","handleKeyDown","event","count","Math","min","max","stopPropagation","document","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;AAG5B,MAAMA,kBAAkB,GAAG,2BAAY,OAAZ,CAA3B;AACA,MAAMC,iBAAiB,GAAG,2BAAY,MAAZ,CAA1B;AACA,MAAMC,gBAAgB,GAAG,CAAzB;;AAQA,MAAMC,aAAsC,GAAIC,KAAD,IAAW;AACxD,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAAwCH,KAA9C;AAEA,QAAMI,WAAW,GAAG,oBAAQ,MAAM;AAChC,UAAMC,KAA2B,GAAG,EAApC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,gBAApB,EAAsCQ,CAAC,EAAvC,EAA2C;AACzC,YAAMN,KAAK,GAAG;AACZO,QAAAA,SAAS,EAAED,CAAC,IAAIL,WAAW,GAAG,CAAnB,GAAuB,QAAvB,GAAkC,EADjC;AAEZO,QAAAA,YAAY,EAAE,MAAML,QAAQ,CAACG,CAAC,GAAG,CAAL;AAFhB,OAAd;AAIAD,MAAAA,KAAK,CAACI,IAAN,eAAW,eAAC,kBAAD,6BAAgBT,KAAhB;AAAuB,QAAA,GAAG,EAAEM,CAA5B;AAA+B,qBAAY,UAASA,CAAC,GAAG,CAAE;AAA1D,SAAX;AACD;;AACD,WAAOD,KAAP;AACD,GAVmB,EAUjB,CAACJ,WAAD,CAViB,CAApB;AAYA,wBAAU,MAAM;AACd,UAAMS,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAIf,kBAAkB,CAACe,KAAD,CAAtB,EAA+B;AAC7BR,QAAAA,QAAQ,CAAES,KAAD,IAAWC,IAAI,CAACC,GAAL,CAASF,KAAK,GAAG,CAAjB,EAAoBd,gBAApB,CAAZ,CAAR;AACD,OAFD,MAEO,IAAID,iBAAiB,CAACc,KAAD,CAArB,EAA8B;AACnCR,QAAAA,QAAQ,CAAES,KAAD,IAAWC,IAAI,CAACE,GAAL,CAASH,KAAK,GAAG,CAAjB,EAAoB,CAApB,CAAZ,CAAR,CADmC,CAEnC;;AACAD,QAAAA,KAAK,CAACK,eAAN;AACD;AACF,KARD;;AASAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCR,aAArC,EAAoD,IAApD;AACA,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCT,aAAxC,EAAuD,IAAvD;AACD,KAFD;AAGD,GAdD,EAcG,EAdH;AAiBA,sBACE,2DACE,eAAC,mBAAD,QAAcT,WAAd,OAA4BC,UAA5B,CADF,eAEE,eAAC,4BAAD,QAAuBE,WAAvB,CAFF,CADF;AAMD,CAtCD;;eAwCeL,a","sourcesContent":["import React, { useMemo, useEffect } from 'react';\nimport { isKeyHotkey } from 'is-hotkey';\nimport { ColumnsPickerWrapper, ColumnItem, ColumnTitle } from './styled';\n\nconst isArrowRightHotKey = isKeyHotkey('right');\nconst isArrowLeftHotKey = isKeyHotkey('left');\nconst MAX_COLUMN_COUNT = 5;\n\ninterface IColumnsProps {\n  activeCount: number;\n  columnText: string;\n  onChange: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst ColumnsPicker: React.FC<IColumnsProps> = (props) => {\n  const { activeCount, columnText, onChange } = props;\n\n  const columnItems = useMemo(() => {\n    const items: React.ReactElement[] = [];\n    for (let i = 0; i < MAX_COLUMN_COUNT; i++) {\n      const props = {\n        className: i <= activeCount - 1 ? 'active' : '',\n        onMouseEnter: () => onChange(i + 1),\n      };\n      items.push(<ColumnItem {...props} key={i} data-role={`columns${i + 1}`}/>);\n    }\n    return items;\n  }, [activeCount]);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (isArrowRightHotKey(event)) {\n        onChange((count) => Math.min(count + 1, MAX_COLUMN_COUNT));\n      } else if (isArrowLeftHotKey(event)) {\n        onChange((count) => Math.max(count - 1, 1));\n        // 防止回退到上一级 menu 菜单\n        event.stopPropagation();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown, true);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, true);\n    }\n  }, []);\n\n\n  return (\n    <>\n      <ColumnTitle>{activeCount} {columnText}</ColumnTitle>\n      <ColumnsPickerWrapper>{columnItems}</ColumnsPickerWrapper>\n    </>\n  );\n};\n\nexport default ColumnsPicker;\n"],"file":"ColumnPicker.js"}