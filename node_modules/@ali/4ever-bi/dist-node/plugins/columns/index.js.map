{"version":3,"sources":["../../../../src/plugins/columns/index.ts"],"names":["hooks","createQueries","ColumnsPlugin","createColumnsPlugin","allConfigs","createOnAction","createOnCangjieSelect","createOnKeyDown","createPlaceholder","createOnCut","beforeCopySelectedNodes","configs","columns","toolbar","commands","setColumnsItemData","leftToolbarHandlers","menubar","queries","renderNode","handleDragChange","onAction","onCangjieSelect","onKeyDown","onCut","placeholder","renderHoverToolbar"],"mappings":";;;;;;;;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAGA,MAAM;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAA2BC,yBAAjC;;AAQA,SAASC,mBAAT,CAA6BC,UAA7B,EAAmD;AACjD,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA,qBAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,iBAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA;AANI,MAOFV,KAPJ;AAQA,QAAMW,OAAO,GAAGP,UAAU,CAACQ,OAA3B;AACA,SAAO;AACL;AACAC,IAAAA,OAAO,EAAE,uBAFJ;AAGLC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,kBAAkB,EAAlBA;AAAF,KAHL;AAIL;AACAC,IAAAA,mBAAmB,EAAnBA,wCALK;AAMLC,IAAAA,OAAO,EAAE,sBAAQN,OAAR,CANJ;AAOLO,IAAAA,OAAO,EAAEjB,aAAa,CAACU,OAAD,CAPjB;AAQLQ,IAAAA,UAAU,EAAE,uCAAsBR,OAAtB,EAA+BS,qCAA/B,CARP;AASLC,IAAAA,QAAQ,EAAEhB,cAAc,CAACM,OAAD,CATnB;AAULW,IAAAA,eAAe,EAAEhB,qBAAqB,CAACK,OAAD,CAVjC;AAWLY,IAAAA,SAAS,EAAEhB,eAAe,EAXrB;AAYLiB,IAAAA,KAAK,EAAEf,WAAW,EAZb;AAaLgB,IAAAA,WAAW,EAAEjB,iBAAiB,CAACG,OAAD,CAbzB;AAcLe,IAAAA,kBAAkB,EAAE,uCAAyBf,OAAzB,CAdf;AAeLD,IAAAA;AAfK,GAAP;AAiBD;;eAEcP,mB","sourcesContent":["import { ConvertToPluginQueries } from '@ali/4ever-cangjie';\nimport { ColumnsPlugin, ColumnsRenderNodeEdit } from '@ali/4ever-bamboo';\n\nimport toolbar from './toolbar';\nimport menubar from './menubar';\nimport setColumnsItemData from './commands/setColumnsItemData';\nimport { leftToolbarHandlers, handleDragChange } from './leftToolbarHandlers';\nimport createRenderHoverToolbar from './createRenderHoverToolbar';\nimport { BiPlugin } from '../../types';\n\nconst { hooks, createQueries } = ColumnsPlugin;\n\ndeclare module '@ali/4ever-cangjie' {\n  interface ColumnsQuery extends ConvertToPluginQueries<{\n    isSelectionInColumns: () => boolean;\n  }> {}\n}\n\nfunction createColumnsPlugin(allConfigs): BiPlugin {\n  const {\n    createOnAction,\n    createOnCangjieSelect,\n    createOnKeyDown,\n    createPlaceholder,\n    createOnCut,\n    beforeCopySelectedNodes,\n  } = hooks;\n  const configs = allConfigs.columns;\n  return {\n    // @ts-ignore\n    toolbar: toolbar(),\n    commands: { setColumnsItemData },\n    // @ts-ignore\n    leftToolbarHandlers,\n    menubar: menubar(configs),\n    queries: createQueries(configs),\n    renderNode: ColumnsRenderNodeEdit(configs, handleDragChange),\n    onAction: createOnAction(configs),\n    onCangjieSelect: createOnCangjieSelect(configs),\n    onKeyDown: createOnKeyDown(),\n    onCut: createOnCut(),\n    placeholder: createPlaceholder(configs),\n    renderHoverToolbar: createRenderHoverToolbar(configs),\n    beforeCopySelectedNodes,\n  };\n}\n\nexport default createColumnsPlugin;\n"],"file":"index.js"}