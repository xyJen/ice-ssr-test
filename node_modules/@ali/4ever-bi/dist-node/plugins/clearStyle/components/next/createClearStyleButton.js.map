{"version":3,"sources":["../../../../../../src/plugins/clearStyle/components/next/createClearStyleButton.tsx"],"names":["MOD","environment","IS_MAC","CLEAR_STYLE_HOT_KEY","createClearStyleButton","props","controller","locale","icon","title","tooltip","tooltipProp","badgeDot","disabled","handleClick","run","React","useMemo","buttonTitle","shortCut","buttonConfig","onClick","testid","role","PluginRoles","clear"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;uBAH4B,a;AAK5B,MAAMA,GAAG,GAAGC,yBAAYC,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;AAEO,MAAMC,mBAAmB,GAAI,GAAEH,GAAI,KAAnC;;;wBAqBW,eAAC,yBAAD,O;;AAdH,SAASI,sBAAT,CAAgCC,KAAhC,EAA4E;AACzF,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA,OAAO,EAAEC,WAA5C;AAAyDC,IAAAA,QAAzD;AAAmEC,IAAAA;AAAnE,MAAgFR,KAAtF;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBR,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2B,2BAA3B;AACD,GAFD;;AAIA,QAAML,OAAO,GAAGM,KAAK,CAACC,OAAN,CAAc,OAAO;AACnCR,IAAAA,KAAK,EAAEA,KAAK,IAAIF,MAAM,EAAEW,WADW;AAEnCC,IAAAA,QAAQ,EAAEhB,mBAFyB;AAGnC,OAAGQ;AAHgC,GAAP,CAAd,EAIZ,CAACF,KAAD,EAAQE,WAAR,CAJY,CAAhB;AAMA,QAAMS,YAA0B,GAAI;AAClCZ,IAAAA,IAAI,EAAEA,IAAI,QADwB;AAElCa,IAAAA,OAAO,EAAEP,WAFyB;AAGlCL,IAAAA,KAAK,EAAEA,KAAK,IAAIF,MAAM,EAAEW,WAHU;AAIlCR,IAAAA,OAAO,EAAEA,OAJyB;AAKlCE,IAAAA,QALkC;AAMlCC,IAAAA,QANkC;AAOlCS,IAAAA,MAAM,EAAE,uBAP0B;AAQlCC,IAAAA,IAAI,EAAEC,wBAAYC;AARgB,GAApC;AAWA,SAAOL,YAAP;AAED","sourcesContent":["import * as React from 'react';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport { IBasicButton, IToolbarButtonConfig, IconEraser } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { clearStyles } from '../../actions';\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\n\nexport const CLEAR_STYLE_HOT_KEY = `${MOD}+\\\\`;\n\nexport interface ClearStyleButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nexport default function createClearStyleButton(props: ClearStyleButtonProps): IBasicButton {\n  const { controller, locale, icon, title, tooltip: tooltipProp, badgeDot, disabled } = props;\n\n  const handleClick = () => {\n    controller.run('onAction', clearStyles());\n  };\n\n  const tooltip = React.useMemo(() => ({\n    title: title || locale?.buttonTitle,\n    shortCut: CLEAR_STYLE_HOT_KEY,\n    ...tooltipProp,\n  }), [title, tooltipProp]);\n\n  const buttonConfig: IBasicButton = ({\n    icon: icon || <IconEraser />,\n    onClick: handleClick,\n    title: title || locale?.buttonTitle,\n    tooltip: tooltip,\n    badgeDot,\n    disabled,\n    testid: 'bi-toolbar-clearstyle',\n    role: PluginRoles.clear,\n  });\n\n  return buttonConfig;\n\n}\n"],"file":"createClearStyleButton.js"}