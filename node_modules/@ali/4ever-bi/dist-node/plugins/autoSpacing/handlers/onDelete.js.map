{"version":3,"sources":["../../../../../src/plugins/autoSpacing/handlers/onDelete.ts"],"names":["onDelete","controller","next","isForward","value","selection","isExpanded","deleted","shift","pop","preText","nextText","length","preLastText","preSecondText","nextFirstText","nextSecondText","shouldDeleteBefore","shouldDeleteAfter","command","Commands","deleteBackward","deleteForward"],"mappings":";;;;;;;AAAA;;AAIA;;AAMe,SAASA,QAAT,CACbC,UADa,EAEbC,IAFa,EAGbC,SAHa,EAIb;AACA;AACA,MAAGF,UAAU,CAACG,KAAX,CAAiBC,SAAjB,CAA2BC,UAA9B,EAA0C,OAAOJ,IAAI,EAAX;AAE1C,QAAMK,OAAO,GAAGJ,SAAS,GAAG,wBAAYF,UAAZ,EAAwBO,KAAxB,EAAH,GAAqC,uBAAWP,UAAX,EAAuBQ,GAAvB,EAA9D,CAJA,CAMA;;AACAP,EAAAA,IAAI,GAPJ,CASA;;AACA,MAAI,CAACK,OAAL,EAAc;AAEd,QAAMG,OAAO,GAAG,uBAAWT,UAAX,CAAhB;AACA,QAAMU,QAAQ,GAAG,wBAAYV,UAAZ,CAAjB;AACA,MAAI,CAACS,OAAO,CAACE,MAAT,IAAmB,CAACD,QAAQ,CAACC,MAAjC,EAAyC;AAEzC,QAAMC,WAAW,GAAGH,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAA3B;AACA,QAAME,aAAa,GAAGJ,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAA7B;AACA,QAAMG,aAAa,GAAGJ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAMK,cAAc,GAAGL,QAAQ,CAAC,CAAD,CAA/B;AAEA,QAAM,CAACM,kBAAD,EAAqBC,iBAArB,IAA0C,uCAA2BJ,aAA3B,EAA0CD,WAA1C,EAAsDE,aAAtD,EAAqEC,cAArE,EAAqFT,OAArF,CAAhD;;AACA,MAAIU,kBAAJ,EAAwB;AACtBhB,IAAAA,UAAU,CAACkB,OAAX,CAAmBC,sBAASC,cAA5B;AACD;;AACD,MAAIH,iBAAJ,EAAuB;AACrBjB,IAAAA,UAAU,CAACkB,OAAX,CAAmBC,sBAASE,aAA5B;AACD;AACF","sourcesContent":["import { \n  Controller, \n  Commands,\n} from '@ali/4ever-cangjie';\nimport { \n  getPreText,\n  getNextText,\n  shouldDeleteSiblingSpacing,\n} from '../utils';\n\nexport default function onDelete(\n  controller: Controller,\n  next: Function,\n  isForward?: boolean,\n) {\n  // 选中内容执行删除不进入空格清除流程\n  if(controller.value.selection.isExpanded) return next();\n\n  const deleted = isForward ? getNextText(controller).shift() : getPreText(controller).pop();\n  \n  // 删除后判断是否需要清除空格\n  next();\n  \n  // 未删除内容提前结束\n  if (!deleted) return;\n\n  const preText = getPreText(controller);\n  const nextText = getNextText(controller);\n  if (!preText.length && !nextText.length) return;\n\n  const preLastText = preText[preText.length - 1];\n  const preSecondText = preText[preText.length - 2];\n  const nextFirstText = nextText[0];\n  const nextSecondText = nextText[1];\n\n  const [shouldDeleteBefore, shouldDeleteAfter] = shouldDeleteSiblingSpacing(preSecondText, preLastText,nextFirstText, nextSecondText, deleted);\n  if (shouldDeleteBefore) {\n    controller.command(Commands.deleteBackward);\n  }\n  if (shouldDeleteAfter) {\n    controller.command(Commands.deleteForward);\n  }\n}\n"],"file":"onDelete.js"}