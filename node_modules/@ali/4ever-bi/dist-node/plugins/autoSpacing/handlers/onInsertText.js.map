{"version":3,"sources":["../../../../../src/plugins/autoSpacing/handlers/onInsertText.ts"],"names":["onInsertText","event","controller","next","nextInputText","detail","data","trim","document","selection","value","isExpanded","preText","nextText","length","preLastText","nextFirstText","inputText","Array","from","inputFirstText","inputLastText","needAddSpaceBefore","needAddSpaceAfter","shouldDeleteSpacingBefore","range","moveToStart","moveAnchorBackward","command","Commands","deleteAtRange","shouldDeleteSpacingAfter","deleteForward","moveBackward"],"mappings":";;;;;;;AAAA;;AAKA;;AAOe,SAASA,YAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AACA,MAAIC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAaC,IAAb,IAAqB,EAAzC;AACA,MAAI,CAACF,aAAa,CAACG,IAAd,EAAL,EAA2B,OAAOJ,IAAI,EAAX;AAE3B,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BP,UAAU,CAACQ,KAA3C;AACA,QAAMC,UAAU,GAAGF,SAAS,CAACE,UAA7B;AAEA,QAAMC,OAAO,GAAG,uBAAWV,UAAX,CAAhB;AACA,QAAMW,QAAQ,GAAG,wBAAYX,UAAZ,CAAjB;AACA,MAAI,CAACU,OAAO,CAACE,MAAT,IAAmB,CAACD,QAAQ,CAACC,MAAjC,EAAyC,OAAOX,IAAI,EAAX;AAEzC,QAAMY,WAAW,GAAGH,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAA3B;AACA,QAAME,aAAa,GAAGH,QAAQ,CAAC,CAAD,CAA9B;AAEA,QAAMI,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWf,aAAX,CAAlB;AACA,QAAMgB,cAAc,GAAGH,SAAS,CAAC,CAAD,CAAhC;AACA,QAAMI,aAAa,GAAGJ,SAAS,CAACA,SAAS,CAACH,MAAV,GAAmB,CAApB,CAA/B,CAhBA,CAkBA;;AACA,QAAMQ,kBAAkB,GAAG,8BAAkBF,cAAlB,EAAkCL,WAAlC,CAA3B;AACA,QAAMQ,iBAAiB,GAAG,8BAAkBF,aAAlB,EAAiCL,aAAjC,CAA1B;;AAEA,MAAGM,kBAAH,EAAuB;AACrBlB,IAAAA,aAAa,GAAI,IAAGA,aAAc,EAAlC;AACD;;AAED,MAAGmB,iBAAH,EAAsB;AACpBnB,IAAAA,aAAa,GAAI,GAAEA,aAAc,GAAjC;AACD,GA5BD,CA8BA;;;AACA,QAAMoB,yBAAyB,GAAG,gCAAoBZ,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAA3B,EAAiDC,WAAjD,EAA8DK,cAA9D,EAA8EJ,aAA9E,EAA6FL,UAA7F,CAAlC;;AACA,MAAIa,yBAAJ,EAA+B;AAC7B,UAAMC,KAAK,GAAGhB,SAAS,CAACiB,WAAV,CAAsBlB,QAAtB,EAAgCmB,kBAAhC,EAAd;AACAzB,IAAAA,UAAU,CAAC0B,OAAX,CAAmBC,sBAASC,aAA5B,EAA2CL,KAA3C;AACD,GAnCD,CAqCA;;;AACA,MAAIH,kBAAkB,IAAIC,iBAA1B,EAA6C;AAC3CpB,IAAAA,IAAI,CAAC,oCAAkB,EACrB,GAAGF,KAAK,CAACI,MADY;AAErBC,MAAAA,IAAI,EAAEF;AAFe,KAAlB,CAAD,CAAJ;AAID,GALD,MAKO;AACLD,IAAAA,IAAI;AACL,GA7CD,CA+CA;;;AACA,QAAM4B,wBAAwB,GAAG,gCAAoBV,aAApB,EAAmCL,aAAnC,EAAkDH,QAAQ,CAAC,CAAD,CAA1D,EAA+DE,WAA/D,EAA4EJ,UAA5E,CAAjC;;AACA,MAAGoB,wBAAH,EAA6B;AAC3B7B,IAAAA,UAAU,CAAC0B,OAAX,CAAmBC,sBAASG,aAA5B;AACD,GAnDD,CAqDA;;;AACA,MAAIT,iBAAJ,EAAuB;AACrBrB,IAAAA,UAAU,CAAC0B,OAAX,CAAmBC,sBAASI,YAA5B;AACD;AACF","sourcesContent":["import { \n  Controller, \n  CangjieInputEvent, \n  Commands,\n} from '@ali/4ever-cangjie';\nimport { \n  shouldAutoSpacing,\n  shouldDeleteSpacing,\n  getPreText,\n  getNextText,\n} from '../utils';\n\nexport default function onInsertText(\n  event: CangjieInputEvent,\n  controller: Controller,\n  next: Function,\n) {\n  let nextInputText = event.detail.data || '';\n  if (!nextInputText.trim()) return next();\n\n  const { document, selection } = controller.value;\n  const isExpanded = selection.isExpanded;\n  \n  const preText = getPreText(controller);\n  const nextText = getNextText(controller);\n  if (!preText.length && !nextText.length) return next();\n\n  const preLastText = preText[preText.length - 1];\n  const nextFirstText = nextText[0];\n  \n  const inputText = Array.from(nextInputText);\n  const inputFirstText = inputText[0];\n  const inputLastText = inputText[inputText.length - 1];\n\n  // check if need add space\n  const needAddSpaceBefore = shouldAutoSpacing(inputFirstText, preLastText);\n  const needAddSpaceAfter = shouldAutoSpacing(inputLastText, nextFirstText);\n\n  if(needAddSpaceBefore) {\n    nextInputText = ` ${nextInputText}`;\n  }\n\n  if(needAddSpaceAfter) {\n    nextInputText = `${nextInputText} `;\n  }\n\n  // 1. 删除前面多余空格（插入后删除需要重新计算位置，因此先行删除）\n  const shouldDeleteSpacingBefore = shouldDeleteSpacing(preText[preText.length - 2], preLastText, inputFirstText, nextFirstText, isExpanded);\n  if (shouldDeleteSpacingBefore) {\n    const range = selection.moveToStart(document).moveAnchorBackward();\n    controller.command(Commands.deleteAtRange, range);\n  }\n\n  // 2. 添加空格\n  if (needAddSpaceBefore || needAddSpaceAfter) {\n    next(CangjieInputEvent({\n      ...event.detail,\n      data: nextInputText,\n    }));\n  } else {\n    next();\n  }\n\n  // 3. 删除后面多余空格\n  const shouldDeleteSpacingAfter = shouldDeleteSpacing(inputLastText, nextFirstText, nextText[1], preLastText, isExpanded);\n  if(shouldDeleteSpacingAfter) {\n    controller.command(Commands.deleteForward);\n  }\n\n  // 4. 光标矫正\n  if (needAddSpaceAfter) {\n    controller.command(Commands.moveBackward);\n  }\n}\n"],"file":"onInsertText.js"}