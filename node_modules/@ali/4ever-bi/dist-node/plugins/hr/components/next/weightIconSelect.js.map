{"version":3,"sources":["../../../../../../src/plugins/hr/components/next/weightIconSelect.tsx"],"names":["MenuItemWrapper","styled","div","MenuItemText","span","WeightIconSelect","props","getNode","controller","onOverlayVisibleChange","locale","node","size","setSize","React","useState","data","sz","getContainer","HoverToolbarHooks","useGetContainer","isPopoverVisible","setPopoverVisible","usePopoverVisible","sizeList","commonLineMap","single","items","map","key","String","selected","title","handleSelect","useCallback","lineSize","MAPPING","run","item","Number","LINE_LENGTH","weight","PluginRoles","hrWeight"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAGA;;AACA;;AACA;;uBAV4B,a;;AAmB5B,MAAMA,eAAe,gBAAGC,0BAAOC,GAAV,yDAArB;;AAMA,MAAMC,YAAY,gBAAGF,0BAAOG,IAAV,uBAAlB;;wBAqDY,eAAC,6BAAD,O;;AAjDL,MAAMC,gBAAkD,GAAIC,KAAD,IAAW;AAC3E,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,sBAAvB;AAA+CC,IAAAA;AAA/C,MAA0DJ,KAAhE;AACA,QAAMK,IAAI,GAAGJ,OAAO,EAApB;;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBC,eAAMC,QAAN,CAAiBJ,IAAD,EAAiBK,IAAlB,EAAmCC,EAAlD,CAAxB;;AACA,QAAMC,YAAY,GAAGC,iCAAkBC,eAAlB,EAArB;;AACA,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCH,iCAAkBI,iBAAlB,CAAoC,WAApC,EAAiDd,sBAAjD,CAA9C;;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAeC,wBAAcC,MAAnC;AAEA,QAAMC,KAAK,GAAGH,QAAQ,CAACI,GAAT,CAAcX,EAAD,KAAS;AAClCY,IAAAA,GAAG,EAAEC,MAAM,CAACb,EAAD,CADuB;AAElCc,IAAAA,QAAQ,EAAED,MAAM,CAACb,EAAD,CAAN,KAAea,MAAM,CAAClB,IAAD,CAFG;AAGlCoB,IAAAA,KAAK,EAAEF,MAAM,CAACb,EAAD;AAHqB,GAAT,CAAb,CAAd;;AAMA,QAAMgB,YAAY,GAAGnB,eAAMoB,WAAN,CAAkB,CAAC,CAACC,QAAD,CAAD,KAAgB;AACrD,UAAMxB,IAAI,GAAGJ,OAAO,EAApB;AACA,QAAI,CAACI,IAAL,EAAW;AACX,UAAMK,IAAI,GAAG,mCAAmB;AAAEJ,MAAAA,IAAI,EAAEuB;AAAR,KAAnB,EAAqDC,kBAArD,CAAb;AACA5B,IAAAA,UAAU,CAAC6B,GAAX,CAAe,UAAf,EAA2B,uBAAS;AAAErB,MAAAA,IAAF;AAAQL,MAAAA;AAAR,KAAT,CAA3B;AACAE,IAAAA,OAAO,CAACsB,QAAD,CAAP;AACAb,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAPoB,EAOlB,CAACf,OAAD,EAAUE,sBAAV,EAAkCa,iBAAlC,CAPkB,CAArB;;AASA,MAAI,CAACX,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE,eAAC,wBAAD;AACE,IAAA,OAAO,eACL,eAAC,kBAAD;AACE,MAAA,KAAK,EAAEgB,KADT;AAEE,MAAA,UAAU,EAAGW,IAAD,IAAU;AACpB,cAAM;AAAET,UAAAA,GAAG,EAAEjB;AAAP,YAAgB0B,IAAtB;AACA,4BACE,eAAC,kBAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAE1B,IAAhB;AAAsB,yBAAc,UAASA,IAAK;AAAlD,wBACE,eAAC,eAAD,qBACE,eAAC,YAAD,QAAeA,IAAf,OADF,eAEE,eAAC,oBAAD;AACE,UAAA,QAAQ,EAAC,QADX;AAEE,UAAA,IAAI,EAAE2B,MAAM,CAAC3B,IAAD,CAFd;AAGE,UAAA,MAAM,EAAE4B,sBAHV;AAIE,UAAA,KAAK,EAAC;AAJR,UAFF,CADF,CADF;AAaD,OAjBH;AAkBE,MAAA,QAAQ,EAAEP;AAlBZ,MAFJ;AAuBE,IAAA,IAAI,MAvBN;AAwBE,IAAA,eAAe,EAAEX,iBAxBnB;AAyBE,IAAA,cAAc,EAAED,gBAzBlB;AA0BE,IAAA,SAAS,EAAC,YA1BZ;AA2BE,IAAA,YAAY,EAAEH,YA3BhB;AA4BE,IAAA,OAAO,EAAER,MAAM,CAAC+B,MA5BlB;AA6BE,IAAA,MAAM,EAAC,sBA7BT;AA8BE,IAAA,IAAI,EAAEC,wBAAYC;AA9BpB,IADF;AAkCD,CA3DM","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { TBIconMenu, Menu } from '@ali/we-design-next';\nimport { PluginRoles } from '@ali/4ever-bamboo';\n// TODO: @淼淼 升级并迁移到 we-icon, commonLineMap 迁移到 we-design-nexts\nimport { commonLineMap, CommonLine, TLineStyle } from '@ali/we-design';\nimport { IconLineWeight, HoverToolbarHooks } from '@ali/4ever-component';\nimport { Controller, Node, Block } from '@ali/4ever-cangjie';\nimport { HrData } from '@ali/4ever-mo';\nimport { MAPPING, parseValueToJsonML, IHrPayload } from '@ali/4ever-utils';\nimport { updateHr } from '../../actions';\nimport { LINE_LENGTH } from './constants';\n\nexport interface IWeightIconSelectProps {\n  controller: Controller;\n  getNode: () => Node | null;\n  onOverlayVisibleChange: (v: boolean) => void;\n  locale: Record<string, string>;\n}\n\nconst MenuItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MenuItemText = styled.span`\n  margin-right: 4px;\n`;\n\nexport const WeightIconSelect: React.FC<IWeightIconSelectProps> = (props) => {\n  const { getNode, controller, onOverlayVisibleChange, locale } = props;\n  const node = getNode();\n  const [size, setSize] = React.useState(((node as Block)?.data as HrData)?.sz);\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isPopoverVisible, setPopoverVisible] = HoverToolbarHooks.usePopoverVisible('hr.weight', onOverlayVisibleChange);\n  const { sizeList } = commonLineMap.single;\n\n  const items = sizeList.map((sz) => ({\n    key: String(sz),\n    selected: String(sz) === String(size),\n    title: String(sz),\n  }));\n\n  const handleSelect = React.useCallback(([lineSize]) => {\n    const node = getNode();\n    if (!node) return;\n    const data = parseValueToJsonML({ size: lineSize } as IHrPayload, MAPPING);\n    controller.run('onAction', updateHr({ data, node }));\n    setSize(lineSize);\n    setPopoverVisible(false);\n  }, [getNode, onOverlayVisibleChange, setPopoverVisible]);\n\n  if (!node) return null;\n\n  return (\n    <TBIconMenu\n      overlay={\n        <Menu\n          items={items}\n          renderItem={(item) => {\n            const { key: size } = item;\n            return (\n              <Menu.Item key={size} data-testid={`option-${size}`}>\n                <MenuItemWrapper >\n                  <MenuItemText>{size}pt</MenuItemText>\n                  <CommonLine\n                    lineType=\"single\"\n                    size={Number(size)}\n                    length={LINE_LENGTH}\n                    color=\"black\"\n                  />\n                </MenuItemWrapper>\n              </Menu.Item>\n            );\n          }}\n          onSelect={handleSelect}\n        />\n      }\n      icon={<IconLineWeight />}\n      onVisibleChange={setPopoverVisible}\n      overlayVisible={isPopoverVisible}\n      placement=\"bottomLeft\"\n      getContainer={getContainer}\n      tooltip={locale.weight}\n      testid=\"bi-toolbar-hr-weight\"\n      role={PluginRoles.hrWeight}\n    />\n  )\n};"],"file":"weightIconSelect.js"}