{"version":3,"sources":["../../../../../src/plugins/hr/components/hrButton.tsx"],"names":["HrButton","props","controller","locale","onChange","React","useCallback","payload","data","MAPPING","run","icon","useMemo","buttonTitle","PluginRoles","hr","HrColor","rest","color","focusBlock","value","parsedPayload","getColorPanelMode","query","mode","handleSelectValueChange","colorButtonTitle","EColorPickerIcon","backgroundfont","DEFAULT_HR_COLOR","hrColor","HrStyle","lineType","style","hrStyle","HrWeight","size","width","lineWidthList","commonLineMap","sizeList","single","weight","hrWeight","map","marginRight"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AAWA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;uBAlB4B,a;;wBA6BQ,eAAC,wBAAD,O;;AAT7B,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBF,KAA/B,CAD8B,CAG9B;;AACA,QAAMG,QAAQ,GAAGC,KAAK,CAACC,WAAN,CAAmBC,OAAD,IAAa;AAC9C,UAAMC,IAAI,GAAG,mCAAmBD,OAAnB,EAA4BE,kBAA5B,CAAb;AACAP,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,uBAASF,IAAT,CAA3B;AACD,GAHgB,EAGd,CAACN,UAAD,CAHc,CAAjB;AAKA,QAAMS,IAAI,GAAGN,KAAK,CAACO,OAAN,CAAc,UAAd,EAA0C,EAA1C,CAAb;AAEA,sBACE,eAAC,gBAAD;AACE,IAAA,KAAK,EAAET,MAAM,CAACU,WADhB;AAEE,IAAA,QAAQ,EAAE,KAFZ;AAGE,IAAA,MAAM,EAAC,mBAHT;AAIE,IAAA,IAAI,EAAEF,IAJR;AAKE,IAAA,OAAO,EAAEP,QALX;AAME,IAAA,IAAI,EAAEU,wBAAYC;AANpB,IADF;AAUD;;AAIM,MAAMC,OAAO,GAAIf,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGc;AAAzB,MAAkChB,KAAxC;;AACA,QAAMG,QAAQ,GAAIc,KAAD,IAAmB;AAClC,UAAMV,IAAI,GAAG,mCAAmB;AAAEU,MAAAA;AAAF,KAAnB,EAA4CT,kBAA5C,CAAb;AACAP,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,uBAASF,IAAT,CAA3B;AACD,GAHD;;AAKA,QAAM;AAAEW,IAAAA;AAAF,MAAiBjB,UAAU,CAACkB,KAAlC;AACA,MAAIC,aAAJ;;AACA,MAAIF,UAAJ,EAAgB;AACd,UAAMZ,OAAO,GAAGY,UAAU,CAACX,IAA3B;AACAa,IAAAA,aAAa,GAAG,mCAAmBd,OAAnB,EAA4BE,kBAA5B,CAAhB;AACD;;AAED,QAAMa,iBAAiB,GACrBjB,KAAK,CAACC,WAAN,CAAkB,MAAMJ,UAAU,CAACqB,KAAX,CAAiB,mBAAjB,GAAuCC,IAA/D,EAAqE,CAACtB,UAAD,CAArE,CADF;AAGA,QAAMuB,uBAAuB,GAAGpB,KAAK,CAACC,WAAN,CAAmBkB,IAAD,IAA2B;AAC3EtB,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,uCAAkB;AAAEc,MAAAA;AAAF,KAAlB,CAA3B;AACD,GAF+B,EAE7B,CAACtB,UAAD,CAF6B,CAAhC;AAIA,sBACE,eAAC,sBAAD,6BACMe,IADN;AAEE,IAAA,KAAK,EAAEd,MAAM,CAACuB,gBAFhB;AAGE,IAAA,OAAO,EAAEC,4BAAiBC,cAH5B;AAIE,IAAA,KAAK,EAAEP,aAAa,EAAEH,KAJxB;AAKE,IAAA,aAAa,EAAEd,QALjB;AAME,IAAA,YAAY,EAAEyB,2BANhB;AAOE,IAAA,cAAc,EAAC,SAPjB;AAQE,IAAA,IAAI,EAAEf,wBAAYgB,OARpB;AASE,IAAA,gBAAgB,MATlB;AAUE,IAAA,iBAAiB,EAAER,iBAVrB;AAWE,IAAA,mBAAmB,EAAEG;AAXvB,KADF;AAeD,CApCM;;;;yBA+DqB,eAAC,wBAAD,O;;AAvBrB,MAAMM,OAAO,GAAI9B,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGc;AAAzB,MAAkChB,KAAxC;;AACA,QAAMG,QAAQ,GAAI4B,QAAD,IAAsB;AACrC,UAAMxB,IAAI,GAAG,mCAAmB;AAAEwB,MAAAA;AAAF,KAAnB,EAA+CvB,kBAA/C,CAAb;AACAP,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,uBAASF,IAAT,CAA3B;AACD,GAHD;;AAKA,QAAM;AAAEW,IAAAA;AAAF,MAAiBjB,UAAU,CAACkB,KAAlC;AACA,MAAIC,aAAJ;;AACA,MAAIF,UAAJ,EAAgB;AACd,UAAMZ,OAAO,GAAGY,UAAU,CAACX,IAA3B;AACAa,IAAAA,aAAa,GAAG,mCAAmBd,OAAnB,EAA4BE,kBAA5B,CAAhB;AACD,GAZ+B,CAchC;;;AACA,sBACE,eAAC,0BAAD,6BACMQ,IADN;AAEE,IAAA,KAAK,EAAEd,MAAM,CAAC8B,KAFhB;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,MAAM,EAAE,EAJV;AAKE,IAAA,QAAQ,EAAEZ,aAAa,EAAEW,QAL3B;AAME,IAAA,gBAAgB,EAAE5B,QANpB;AAOE,IAAA,aAAa,EAAE,WAPjB;AAQE,IAAA,QAAQ,EAAE,KARZ;AASE,IAAA,IAAI,EAAEU,wBAAYoB;AATpB,KADF;AAaD,CA5BM;;;;yBA8DC,eAAC,6BAAD,O;;AA7BD,MAAMC,QAAQ,GAAIlC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGc;AAAzB,MAAkChB,KAAxC;;AACA,QAAMG,QAAQ,GAAIgC,IAAD,IAAkB;AACjC,UAAM5B,IAAI,GAAG,mCAAmB;AAAE4B,MAAAA;AAAF,KAAnB,EAA6B3B,kBAA7B,CAAb;AACAP,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,uBAASF,IAAT,CAA3B;AACD,GAHD;;AAKA,QAAM;AAAEW,IAAAA;AAAF,MAAiBjB,UAAU,CAACkB,KAAlC;AACA,MAAIC,aAAkC,GAAG,EAAzC;;AACA,MAAIF,UAAJ,EAAgB;AACd,UAAMZ,OAAO,GAAGY,UAAU,CAACX,IAA3B;AACAa,IAAAA,aAAa,GAAG,mCAAmBd,OAAnB,EAA4BE,kBAA5B,CAAhB;AACD;;AAED,QAAM;AAAE2B,IAAAA,IAAI,EAAEC,KAAR;AAAeL,IAAAA,QAAQ,GAAG;AAA1B,MAAuCX,aAA7C;AAEA,MAAIiB,aAAa,GAAGC,wBAAcP,QAAd,GAAyBQ,QAA7C;;AAEA,MAAI,CAACF,aAAL,EAAoB;AAClBA,IAAAA,aAAa,GAAGC,wBAAcE,MAAd,CAAqBD,QAArC;AACD;;AAED,sBACE,eAAC,gBAAD,6BACMvB,IADN;AAEE,IAAA,KAAK,EAAEd,MAAM,CAACuC,MAFhB;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,SAAS,EAAC,EAJZ;AAKE,IAAA,aAAa,EAAE,WALjB;AAQE,IAAA,UAAU,MARZ;AASE,IAAA,QAAQ,EAAEjC,QATZ;AAUE,IAAA,MAAM,EAAC,kBAVT;AAWE,IAAA,IAAI,EAAEU,wBAAY6B;AAXpB,MAaGL,aAAa,CAACM,GAAd,CAAmBR,IAAD,IAAU;AAC3B,wBACE,eAAC,sBAAD;AAAc,MAAA,GAAG,EAAEA,IAAnB;AAAyB,MAAA,KAAK,EAAEA,IAAhC;AAAsC,MAAA,MAAM,EAAG,aAAYA,IAAK;AAAhE,oBACE;AAAK,MAAA,KAAK,EAAE;AAAES,QAAAA,WAAW,EAAE;AAAf;AAAZ,OAAiCT,IAAjC,OADF,eAEE,eAAC,oBAAD;AAAY,MAAA,MAAM,EAAE,EAApB;AAAwB,MAAA,QAAQ,EAAC,QAAjC;AAA0C,MAAA,KAAK,EAAC,OAAhD;AAAwD,MAAA,IAAI,EAAEA;AAA9D,MAFF,CADF;AAMD,GAPA,CAbH,CADF;AAwBD,CA9CM","sourcesContent":["import * as React from 'react';\nimport {\n  Button,\n  CommonLine,\n  commonLineMap,\n  CommonLineSelect,\n  DividingLineNormal,\n  LinethicknessNormal,\n  LinetypeNormal,\n  Select,\n  SelectOption,\n} from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\n\nimport { ColorPicker, EColorPanelMode, EColorPickerIcon } from '@ali/we-toolbar';\nimport { MAPPING, parseJsonMLToValue, parseValueToJsonML, IHrPayload } from '@ali/4ever-utils';\n\nimport { insertHr } from '../actions';\nimport { DEFAULT_HR_COLOR } from '../constants';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\n\nexport function HrButton(props) {\n  const { controller, locale } = props;\n\n  // check if color changes\n  const onChange = React.useCallback((payload) => {\n    const data = parseValueToJsonML(payload, MAPPING);\n    controller.run('onAction', insertHr(data));\n  }, [controller]);\n\n  const icon = React.useMemo(() => (<LinetypeNormal />), []);\n\n  return (\n    <Button\n      title={locale.buttonTitle}\n      bordered={false}\n      testid=\"bi-toolbar-hrline\"\n      icon={icon}\n      onClick={onChange}\n      role={PluginRoles.hr}\n    />\n  );\n}\n\ntype ParsedColorPayload = Partial<Pick<IHrPayload, 'color'>>;\n\nexport const HrColor = (props) => {\n  const { controller, locale, ...rest } = props;\n  const onChange = (color: string) => {\n    const data = parseValueToJsonML({ color } as IHrPayload, MAPPING);\n    controller.run('onAction', insertHr(data));\n  };\n\n  const { focusBlock } = controller.value;\n  let parsedPayload: ParsedColorPayload | undefined;\n  if (focusBlock) {\n    const payload = focusBlock.data;\n    parsedPayload = parseJsonMLToValue(payload, MAPPING);\n  }\n\n  const getColorPanelMode =\n    React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);\n\n  const handleSelectValueChange = React.useCallback((mode: EColorPanelMode) => {\n    controller.run('onAction', setColorPanelMode({ mode }));\n  }, [controller]);\n\n  return (\n    <ColorPicker\n      {...rest}\n      title={locale.colorButtonTitle}\n      btnType={EColorPickerIcon.backgroundfont}\n      color={parsedPayload?.color}\n      onColorPicker={onChange}\n      defaultColor={DEFAULT_HR_COLOR}\n      automaticColor=\"#404040\"\n      role={PluginRoles.hrColor}\n      showToggleSelect\n      getColorPanelMode={getColorPanelMode}\n      onSelectValueChange={handleSelectValueChange}\n    />\n  );\n};\n\ntype ParsedStylePayload = Partial<Pick<IHrPayload, 'lineType'>>;\n\nexport const HrStyle = (props) => {\n  const { controller, locale, ...rest } = props;\n  const onChange = (lineType: string) => {\n    const data = parseValueToJsonML({ lineType } as IHrPayload, MAPPING);\n    controller.run('onAction', insertHr(data));\n  };\n\n  const { focusBlock } = controller.value;\n  let parsedPayload: ParsedStylePayload | undefined;\n  if (focusBlock) {\n    const payload = focusBlock.data;\n    parsedPayload = parseJsonMLToValue(payload, MAPPING);\n  }\n\n  // 受控模式\n  return (\n    <CommonLineSelect\n      {...rest}\n      title={locale.style}\n      color=\"#000000\"\n      length={63}\n      lineType={parsedPayload?.lineType}\n      onLineTypeChange={onChange}\n      customTrigger={() => (<LinetypeNormal />)}\n      bordered={false}\n      role={PluginRoles.hrStyle}\n    />\n  );\n};\n\ntype ParsedWeightPayload = Partial<Pick<IHrPayload, 'size' | 'lineType'>>;\n\n\nexport const HrWeight = (props) => {\n  const { controller, locale, ...rest } = props;\n  const onChange = (size: number) => {\n    const data = parseValueToJsonML({ size }, MAPPING);\n    controller.run('onAction', insertHr(data));\n  };\n\n  const { focusBlock } = controller.value;\n  let parsedPayload: ParsedWeightPayload = {};\n  if (focusBlock) {\n    const payload = focusBlock.data;\n    parsedPayload = parseJsonMLToValue(payload, MAPPING);\n  }\n\n  const { size: width, lineType = 'single' } = parsedPayload;\n\n  let lineWidthList = commonLineMap[lineType]?.sizeList;\n\n  if (!lineWidthList) {\n    lineWidthList = commonLineMap.single.sizeList;\n  }\n\n  return (\n    <Select\n      {...rest}\n      title={locale.weight}\n      value={width}\n      className=\"\"\n      renderTrigger={() => (\n        <LinethicknessNormal />\n      )}\n      selectable\n      onChange={onChange}\n      testid=\"hr-weight-button\"\n      role={PluginRoles.hrWeight}\n    >\n      {lineWidthList.map((size) => {\n        return (\n          <SelectOption key={size} value={size} testid={`hr-weight-${size}`}>\n            <div style={{ marginRight: 2 }}>{size}pt</div>\n            <CommonLine length={63} lineType=\"single\" color=\"black\" size={size} />\n          </SelectOption>\n        );\n      })}\n    </Select>\n  );\n};\n"],"file":"hrButton.js"}