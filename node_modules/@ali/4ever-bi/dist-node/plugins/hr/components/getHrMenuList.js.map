{"version":3,"sources":["../../../../../src/plugins/hr/components/getHrMenuList.tsx"],"names":["hrLines","HrPlugin","HrMenu","props","menuItem","controller","handleClick","key","lineType","split","line","find","item","run","type","color","DEFAULT_HR_COLOR","sz","size","lines","map","title","HrInlineMenu","rest"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;uBAJ4B,a;AAM5B,MAAM;AAAEA,EAAAA;AAAF,IAAcC,oBAApB;;AAEO,MAAMC,MAAM,GAAIC,KAAD,IAA8B;AAClD,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;;AAKA,QAAMG,WAAW,GAAIC,GAAD,IAAS;AAC3B,UAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAjB;AACA,UAAMC,IAAI,GAAGV,OAAO,CAACW,IAAR,CAAcC,IAAD,IAAU;AAClC,aAAOA,IAAI,CAACJ,QAAL,KAAkBA,QAAzB;AACD,KAFY,CAAb;;AAIA,QAAIE,IAAJ,EAAU;AACRL,MAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,uBAAS;AAAEC,QAAAA,IAAI,EAAEJ,IAAI,CAACF,QAAb;AAAuBO,QAAAA,KAAK,EAAEC,2BAA9B;AAAgDC,QAAAA,EAAE,EAAEP,IAAI,CAACQ;AAAzD,OAAT,CAA3B;AACD;AACF,GATD;;AAWA,QAAMC,KAAK,GAAGnB,OAAO,CAACoB,GAAR,CAAaV,IAAD,IAAU;AAClC,wBACE,eAAC,kBAAD;AACE,MAAA,MAAM,EAAG,MAAKA,IAAI,CAACF,QAAS,EAD9B;AAEE,MAAA,OAAO,EAAG,MAAKE,IAAI,CAACF,QAAS,EAF/B;AAGE,MAAA,OAAO,EAAEF,WAHX;AAIE,MAAA,GAAG,EAAEI,IAAI,CAACF;AAJZ,oBAME,eAAC,oBAAD;AAAY,MAAA,QAAQ,EAAEE,IAAI,CAACF,QAA3B;AAAmD,MAAA,MAAM,EAAE,GAA3D;AAAgE,MAAA,IAAI,EAAEE,IAAI,CAACQ;AAA3E,MANF,CADF;AAUD,GAXa,CAAd;AAYA,sBACE,eAAC,iBAAD,6BACMd,QADN;AAEE,IAAA,gBAAgB,EAAC,iBAFnB;AAGE,IAAA,KAAK,EAAEA,QAAQ,CAACiB,KAAT,IAAkB,EAH3B;AAIE,IAAA,SAAS,EAAC;AAJZ,MAMGF,KANH,CADF;AAUD,CAvCM;;;;AAyCA,MAAMG,YAAY,GAAInB,KAAD,IAA+B;AACzD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BF,KAAjC;AACA,QAAM,EAAE,GAAGoB;AAAL,MAAcnB,QAApB;;AAEA,QAAME,WAAW,GAAG,MAAM;AACxB,UAAMI,IAAI,GAAGV,OAAO,CAAC,CAAD,CAApB;AACAK,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,uBAAS;AAAEC,MAAAA,IAAI,EAAEJ,IAAI,CAACF,QAAb;AAAuBO,MAAAA,KAAK,EAAEC,2BAA9B;AAAgDC,MAAAA,EAAE,EAAEP,IAAI,CAACQ;AAAzD,KAAT,CAA3B;AACD,GAHD;;AAKA,sBACE,eAAC,wBAAD,6BAAoBK,IAApB;AAA0B,IAAA,OAAO,EAAEjB;AAAnC,KADF;AAGD,CAZM","sourcesContent":["import * as React from 'react';\nimport { CommonLine, MenuItem, SubMenu, InlineMenuItem, TLineStyle, IInlineMenuItemProps } from '@ali/we-design';\nimport { HrPlugin } from '@ali/4ever-bamboo';\nimport { SubMenuInnerProps, MenuItemInnerProps } from '@ali/4ever-component';\nimport { insertHr } from '../actions';\nimport { DEFAULT_HR_COLOR } from '../constants';\n\nconst { hrLines } = HrPlugin;\n\nexport const HrMenu = (props: SubMenuInnerProps) => {\n  const {\n    menuItem,\n    controller,\n  } = props;\n\n  const handleClick = (key) => {\n    const lineType = key.split('_')[1];\n    const line = hrLines.find((item) => {\n      return item.lineType === lineType;\n    });\n\n    if (line) {\n      controller.run('onAction', insertHr({ type: line.lineType, color: DEFAULT_HR_COLOR, sz: line.size }));\n    }\n  };\n\n  const lines = hrLines.map((line) => {\n    return (\n      <MenuItem\n        testid={`hr_${line.lineType}`}\n        menuKey={`hr_${line.lineType}`}\n        onClick={handleClick}\n        key={line.lineType}\n      >\n        <CommonLine lineType={line.lineType as TLineStyle} length={134} size={line.size} />\n      </MenuItem>\n    );\n  });\n  return (\n    <SubMenu\n      {...menuItem}\n      overlayClassName=\"menu-hr-overlay\"\n      title={menuItem.title || ''}\n      maxHeight=\"600\"\n    >\n      {lines}\n    </SubMenu>\n  );\n};\n\nexport const HrInlineMenu = (props: MenuItemInnerProps) => {\n  const { menuItem, controller } = props;\n  const { ...rest } = menuItem as IInlineMenuItemProps;\n\n  const handleClick = () => {\n    const line = hrLines[0];\n    controller.run('onAction', insertHr({ type: line.lineType, color: DEFAULT_HR_COLOR, sz: line.size }));\n  };\n\n  return (\n    <InlineMenuItem {...rest} onClick={handleClick} />\n  );\n};\n"],"file":"getHrMenuList.js"}