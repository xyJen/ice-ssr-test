{"version":3,"sources":["../../../../src/plugins/hr/renderNode.tsx"],"names":["renderNode","hr","props","controller","node","isSelected","payload","data","parsedPayload","MAPPING"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;AAI5B,MAAMA,UAAU,GAAG;AACjBC,EAAAA,EAAE,EAAE,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAuBH,KAA7B;AACE,UAAMI,OAAO,GAAGF,IAAI,CAACG,IAAL,IAAa,EAA7B;AACA,UAAMC,aAAa,GAAG,mCAAmBF,OAAnB,EAA4BG,kBAA5B,CAAtB;AACA,wBACE,eAAC,WAAD,6BACMP,KADN;AAEE,MAAA,UAAU,EAAEG,UAAU,IAAI,8BAAgBF,UAAhB,CAF5B;AAGE,MAAA,OAAO,EAAEK;AAHX,OADF;AAOH;AAZgB,CAAnB;eAeeR,U","sourcesContent":["import * as React from 'react';\nimport Hr from './components/hr';\nimport { MAPPING, parseJsonMLToValue } from '@ali/4ever-utils';\nimport isSelectionInHr from './utils/isSelectionInHr';\n\nconst renderNode = {\n  hr: (props, controller) => {\n    const { node, isSelected } = props;\n      const payload = node.data || {};\n      const parsedPayload = parseJsonMLToValue(payload, MAPPING);\n      return (\n        <Hr\n          {...props}\n          isSelected={isSelected && isSelectionInHr(controller)}\n          payload={parsedPayload}\n        />\n      );\n  },\n}\n\nexport default renderNode;\n\n"],"file":"renderNode.js"}