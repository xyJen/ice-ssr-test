{"version":3,"sources":["../../../../src/plugins/hr/createRenderHoverToolbar.tsx"],"names":["createRenderHoverToolbar","config","locale","props","controller","getNode","buttonName","extraProps"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAIb,SAASA,wBAAT,CACbC,MADa,EAEmB;AAChC,QAAM;AAAEC,IAAAA,MAAM,GAAG;AAAX,MAAkBD,MAAxB;AACA,SAAO,CAACE,KAAD,EAAQC,UAAR,EAAoBC,OAApB,KAAgC;AACrC,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6BJ,KAAnC;;AACA,YAAQG,UAAR;AACE,WAAK,OAAL;AACE,4BACE,eAAC,wBAAD;AAAY,UAAA,OAAO,EAAC;AAApB,wBACE,eAAC,mBAAD;AACE,UAAA,UAAU,EAAEF,UADd;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,MAAM,EAAEH;AAHV,WAIOK,UAJP,EADF,CADF;;AAUF,WAAK,OAAL;AACE,4BACE,eAAC,wBAAD;AAAY,UAAA,OAAO,EAAC;AAApB,wBACE,eAAC,qBAAD;AACE,UAAA,UAAU,EAAEH,UADd;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,MAAM,EAAEH;AAHV,WAIMK,UAJN,EADF,CADF;;AAUF,WAAK,QAAL;AACE,4BACE,eAAC,wBAAD;AAAY,UAAA,OAAO,EAAC;AAApB,wBACE,eAAC,sBAAD;AACE,UAAA,UAAU,EAAEH,UADd;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,MAAM,EAAEH;AAHV,WAIMK,UAJN,EADF,CADF;;AAUF;AAAS,eAAO,IAAP;AAlCX;AAoCD,GAtCD;AAuCD","sourcesContent":["import * as React from 'react';\nimport { TBItemSlot } from '@ali/we-design-next';\nimport { StyleIconSelect, WeightIconSelect, ColorIconMenu } from './components/next';\nimport type { BiPlugin } from '../../types';\n\nexport default function createRenderHoverToolbar(\n  config: any\n): BiPlugin['renderHoverToolbar'] {\n  const { locale = {} } = config;\n  return (props, controller, getNode) => {\n    const { buttonName, extraProps } = props;\n    switch (buttonName) {\n      case 'color':\n        return (\n          <TBItemSlot display='iconMenu'>\n            <ColorIconMenu\n              controller={controller}\n              getNode={getNode}\n              locale={locale}\n              { ...extraProps }\n            />\n          </TBItemSlot>\n        );\n      case 'style':\n        return (\n          <TBItemSlot display='iconMenu'>\n            <StyleIconSelect\n              controller={controller}\n              getNode={getNode}\n              locale={locale}\n              {...extraProps}\n            />\n          </TBItemSlot>\n        );\n      case 'weight':\n        return (\n          <TBItemSlot display='iconMenu'>\n            <WeightIconSelect\n              controller={controller}\n              getNode={getNode}\n              locale={locale}\n              {...extraProps}\n            />\n          </TBItemSlot>\n        );\n      default: return null;\n    }\n  };\n}\n"],"file":"createRenderHoverToolbar.js"}