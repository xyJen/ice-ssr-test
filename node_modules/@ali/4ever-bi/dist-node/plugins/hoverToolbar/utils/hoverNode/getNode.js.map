{"version":3,"sources":["../../../../../../src/plugins/hoverToolbar/utils/hoverNode/getNode.ts"],"names":["findDocumentNode","document","domNode","domUtils","findDOMNodeSafely","key","getNode","event","controller","layouts","layoutKeys","Object","keys","length","value","container","inlineKey","inline","inlineType","indexOf","node","blockKey","block","Document","isDocument","type","getClosestBlock"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AALA;AAOA,SAASA,gBAAT,CAA0BC,QAA1B,EAA8C;AAC5C,QAAMC,OAAO,GAAGC,sBAASC,iBAAT,CAA2BH,QAAQ,CAACI,GAApC,CAAhB;;AACA,SAAOH,OAAO,IAAI,IAAlB;AACD;;AAEc,SAASI,OAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,OAHa,EAIb;AACA,MAAI,CAACA,OAAL,EAAc,OAAO,EAAP;AACd,QAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAnB;AACA,MAAIC,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA6B,OAAO,EAAP;AAC7B,QAAM;AAAEZ,IAAAA;AAAF,MAAeO,UAAU,CAACM,KAAhC;AACA,QAAMC,SAAS,GAAGf,gBAAgB,CAACC,QAAD,CAAlC;AACA,QAAMe,SAAS,GAAG,qCAAuBT,KAAvB,EAA8BN,QAA9B,CAAlB;AACA,QAAMgB,MAAM,GAAGhB,QAAQ,CAACK,OAAT,CAAiBU,SAAjB,CAAf;;AACA,MAAIC,MAAJ,EAAa;AACX,UAAMC,UAAU,GAAG,0BAAYD,MAAZ,EAAoBT,UAApB,CAAnB;;AACA,QAAIE,UAAU,CAACS,OAAX,CAAmBD,UAAnB,IAAiC,CAAC,CAAtC,EAAyC;AACvC,aAAO;AACLE,QAAAA,IAAI,EAAEH;AADD,OAAP;AAGD;AACF;;AACD,QAAMI,QAAQ,GAAG,oCAA2Bd,KAA3B,EAAkCQ,SAAlC,CAAjB;AACA,MAAIO,KAAK,GAAGrB,QAAQ,CAACK,OAAT,CAAiBe,QAAjB,CAAZ;AACA,MAAI,CAACC,KAAD,IAAU,CAACb,OAAf,EAAwB,OAAO,EAAP;;AAExB,SAAMa,KAAK,IAAI,CAACC,sBAASC,UAAT,CAAoBF,KAApB,CAAhB,EAA4C;AAC1C,UAAMG,IAAI,GAAG,0BAAYH,KAAZ,EAAmBd,UAAnB,CAAb;;AACA,QAAIE,UAAU,CAACS,OAAX,CAAmBM,IAAnB,IAA2B,CAAC,CAAhC,EAAmC;AACjC,aAAO;AAAEL,QAAAA,IAAI,EAAEE;AAAR,OAAP;AACD;;AACDA,IAAAA,KAAK,GAAGrB,QAAQ,CAACyB,eAAT,CAAyBJ,KAAK,CAACjB,GAA/B,CAAR;AACD;;AAED,SAAO,EAAP;AACD","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { domUtils, Document, Controller } from '@ali/4ever-cangjie';\nimport findInnerBlockKeyFromEvent from './utils/findBlockKeyFromEvent';\nimport findInlineKeyFromEvent from './utils/findInlineKeyFromEvent';\nimport { IHoverToolbarPluginConfigs } from '../../types';\nimport getNodeType from '../getNodeType';\n\nfunction findDocumentNode(document: Document) {\n  const domNode = domUtils.findDOMNodeSafely(document.key);\n  return domNode || null;\n}\n\nexport default function getNode(\n  event: MouseEvent,\n  controller: Controller,\n  layouts: IHoverToolbarPluginConfigs['layouts'],\n) {\n  if (!layouts) return {};\n  const layoutKeys = Object.keys(layouts);\n  if (layoutKeys.length === 0) return {};\n  const { document } = controller.value;\n  const container = findDocumentNode(document);\n  const inlineKey = findInlineKeyFromEvent(event, document);\n  const inline = document.getNode(inlineKey);\n  if (inline ) {\n    const inlineType = getNodeType(inline, controller);\n    if (layoutKeys.indexOf(inlineType) > -1) {\n      return {\n        node: inline,\n      };\n    }\n  }\n  const blockKey = findInnerBlockKeyFromEvent(event, container);\n  let block = document.getNode(blockKey);\n  if (!block || !layouts) return {};\n\n  while(block && !Document.isDocument(block)) {\n    const type = getNodeType(block, controller);\n    if (layoutKeys.indexOf(type) > -1) {\n      return { node: block };\n    }\n    block = document.getClosestBlock(block.key);\n  }\n\n  return {};\n}\n"],"file":"getNode.js"}