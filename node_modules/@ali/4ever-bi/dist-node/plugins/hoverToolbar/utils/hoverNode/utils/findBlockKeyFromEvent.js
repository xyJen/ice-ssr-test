"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findInnerBlockKeyFromEvent;

var _everCangjie = require("@ali/4ever-cangjie");

/* eslint-disable @typescript-eslint/ban-ts-comment */
const leftThrottle = 100;
const rightThrottle = 30;
const {
  leafBlock: leafBlockKey,
  key: cangjieKey,
  edgeSelectable,
  content: contentKey
} = _everCangjie.constants.Selector;
const COLUMN_SELECTOR = 'data-column';
const VOID_BLOCK = 'data-block-uuid'; // 如果鼠标在 content 左侧，则往右侧偏移一部分，取新的元素。

const RIGHT_OFFSET = 20;
/**
 * 从 target 开始，往 parent 找，一直找到并返回满足 attribute 的元素
 */

function getParentByAttributes(attribute, target) {
  const attributes = Array.isArray(attribute) ? attribute : [attribute];
  let found = target;

  while (found && !found.getAttribute(contentKey) && found !== window.document.body && found !== window.document.documentElement) {
    for (let i = 0; i < attributes.length; i++) {
      if (found.getAttribute(attributes[i])) return found;
    }

    found = found.parentElement;
  }

  return null;
}

function findInnerBlockKeyFromEvent(event, container) {
  const eventTarget = event.target;

  if (!eventTarget) {
    return '';
  }

  let oriTarget = eventTarget;
  let blockKey = '';

  if (container) {
    const paddingLeft = parseInt(getComputedStyle(container).paddingLeft, 10) || leftThrottle;
    const rect = container.getBoundingClientRect();
    const {
      clientX,
      clientY
    } = event;

    if (clientX > rect.left && clientX < rect.left + paddingLeft) {
      oriTarget = window.document.elementFromPoint(rect.left + paddingLeft + RIGHT_OFFSET, clientY) || eventTarget;
    }

    if (clientX > rect.right && clientX < rect.right + rightThrottle) {
      oriTarget = window.document.elementFromPoint(rect.right - rect.width / 2, clientY) || eventTarget;
    }
  }

  let target = oriTarget;
  const blockEle = getParentByAttributes(['data-listid', leafBlockKey, VOID_BLOCK, COLUMN_SELECTOR, edgeSelectable], target);

  if (blockEle) {
    blockKey = blockEle.getAttribute(cangjieKey) || blockEle.querySelector(`[${cangjieKey}]`)?.getAttribute(cangjieKey) || '';
  }

  return blockKey;
}
//# sourceMappingURL=findBlockKeyFromEvent.js.map