{"version":3,"sources":["../../../../src/plugins/hoverToolbar/createOnMouseMove.ts"],"names":["HOVER_TRIGGER_TIME","isHoverInHoverToolbar","event","target","getAttribute","closest","hoverElementHandler","controller","hoverCapture","layouts","result","HoverNode","getNode","trigger","createOnMouseMove","configs","next","isDisabled","disabled","nativeEvent"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAIA,MAAMA,kBAAkB,GAAG,EAA3B;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAkD;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,SAAQC,MAAD,CAAwBC,YAAxB,CAAqC,oBAArC,KAA+DD,MAAD,CAAwBE,OAAxB,CAAgC,6BAAhC,CAArE;AACD;;AAED,MAAMC,mBAAmB,GAAG,sBAC1B,CAACJ,KAAD,EAAoBK,UAApB,EAA4CC,YAA5C,EAAwEC,OAAxE,KAA2H;AACzH,MAAIR,qBAAqB,CAACC,KAAD,CAAzB,EAAkC;;AAClC,QAAMQ,MAAM,GAAGC,mBAAUC,OAAV,CAAkBV,KAAlB,EAAyBK,UAAzB,EAAqCE,OAArC,CAAf;;AACAD,EAAAA,YAAY,CAACK,OAAb,CAAqBH,MAArB;AACD,CALyB,EAM1BV,kBAN0B,CAA5B;;AASe,SAASc,iBAAT,CACbN,YADa,EAEbO,OAFa,EAGb;AACA,SAAO,UAAUb,KAAV,EAAmCK,UAAnC,EAA2DS,IAA3D,EAAiE;AACtE,UAAM;AAAEC,MAAAA;AAAF,QAAiBF,OAAO,IAAI,EAAlC;AACA,UAAMG,QAAQ,GAAGD,UAAU,IAAIA,UAAU,EAAzC;AACA,QAAIC,QAAJ,EAAc,OAAOF,IAAI,EAAX;AACdV,IAAAA,mBAAmB,CAACJ,KAAK,CAACiB,WAAP,EAAoBZ,UAApB,EAAgCC,YAAhC,EAA8CO,OAAO,EAAEN,OAAvD,CAAnB;AACA,WAAOO,IAAI,EAAX;AACD,GAND;AAOD","sourcesContent":["import { debounce } from 'lodash-es';\nimport { Controller } from '@ali/4ever-cangjie';\nimport HoverNode from './utils/hoverNode';\nimport { HoverCapture } from './utils/hoverCapture';\nimport { IHoverToolbarPluginConfigs } from './types';\n\nconst HOVER_TRIGGER_TIME = 60;\n\nfunction isHoverInHoverToolbar(event: MouseEvent) {\n  const { target } = event;\n  return (target as HTMLElement).getAttribute('data-hover-toolbar') || (target as HTMLElement).closest('[data-hover-toolbar=\"true\"]');\n}\n\nconst hoverElementHandler = debounce(\n  (event: MouseEvent, controller: Controller, hoverCapture: HoverCapture, layouts: IHoverToolbarPluginConfigs['layouts']) => {\n    if (isHoverInHoverToolbar(event)) return;\n    const result = HoverNode.getNode(event, controller, layouts);\n    hoverCapture.trigger(result);\n  },\n  HOVER_TRIGGER_TIME,\n);\n\nexport default function createOnMouseMove(\n  hoverCapture: HoverCapture,\n  configs: IHoverToolbarPluginConfigs | undefined,\n) {\n  return function (event: React.MouseEvent, controller: Controller, next) {\n    const { isDisabled } = configs || {};\n    const disabled = isDisabled && isDisabled();\n    if (disabled) return next();\n    hoverElementHandler(event.nativeEvent, controller, hoverCapture, configs?.layouts);\n    return next();\n  };\n}\n"],"file":"createOnMouseMove.js"}