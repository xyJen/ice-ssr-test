{"version":3,"sources":["../../../../../src/plugins/hoverToolbar/components/MoreMenuButton.tsx"],"names":["MoreMenuButton","props","items","onOverlayVisibleChange","onSelect","locale","getContainer","HoverToolbarHooks","useGetContainer","isOverlayVisible","setOverlayVisible","usePopoverVisible","handleSelect","React","useCallback","key","toggleVisible","renderItem","item","find","t","more","PluginRoles","hoverToolbarMore"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;uBAH4B,a;;wBAmEwB,eAAC,uBAAD,O;;AA1C7C,MAAMA,cAA8C,GAAIC,KAAD,IAAW;AACvE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,sBAAT;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA;AAA3C,MAAsDJ,KAA5D;;AACA,QAAMK,YAAY,GAAGC,iCAAkBC,eAAlB,EAArB;;AACA,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCH,iCAAkBI,iBAAlB,CAAoC,MAApC,EAA4CR,sBAA5C,CAA9C;;AAEA,QAAMS,YAAY,GAAGC,eAAMC,WAAN,CAAmBC,GAAD,IAAiB;AACtDX,IAAAA,QAAQ,CAACW,GAAD,CAAR;AACAL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHoB,EAGlB,CAACN,QAAD,EAAWM,iBAAX,CAHkB,CAArB;;AAKA,QAAMM,aAAa,GAAGH,eAAMC,WAAN,CAAkB,MAAM;AAC5CJ,IAAAA,iBAAiB,CAAC,CAACD,gBAAF,CAAjB;AACD,GAFqB,EAEnB,CAACC,iBAAD,EAAoBD,gBAApB,CAFmB,CAAtB;;AAIA,QAAMQ,UAAU,GAAGJ,eAAMC,WAAN,CAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAa;AAChD,QAAI,CAACb,KAAL,EAAY,OAAO,IAAP;AACZ,UAAMgB,IAAI,GAAGhB,KAAK,EAAEiB,IAAP,CAAaC,CAAD,IAAQ,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACL,GAAF,KAAUA,GAAvD,CAAb;AACA,QAAI,CAACG,IAAL,EAAW,OAAO,IAAP;AACX,wBACE,eAAC,kBAAD,CAAM,IAAN,EACMA,IADN,CADF;AAKD,GATkB,EAShB,CAAChB,KAAD,CATgB,CAAnB;;AAWA,sBACE,eAAC,qBAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,OAAO,eACL,eAAC,kBAAD;AACE,qBAAY,+BADd;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,QAAQ,EAAEU,YAHZ;AAIE,mBAAU,sBAJZ;AAKE,MAAA,UAAU,EAAEK;AALd,MAHJ;AAWE,IAAA,eAAe,EAAEP,iBAXnB;AAYE,IAAA,OAAO,EAAED,gBAZX;AAaE,IAAA,YAAY,EAAEH,YAbhB;AAcE,mBAAY;AAdd,kBAgBE,eAAC,0BAAD;AAAc,IAAA,MAAM,EAAEG,gBAAtB;AAAwC,IAAA,IAAI,MAA5C;AAA4D,IAAA,OAAO,EAAEO,aAArE;AAAoF,IAAA,KAAK,EAAEX,MAAM,EAAEgB,IAAR,IAAgB,MAA3G;AAAmH,IAAA,OAAO,EAAEZ,gBAAgB,GAAG,EAAH,GAAQJ,MAAM,EAAEgB,IAAR,IAAgB,MAApK;AAA4K,IAAA,MAAM,EAAC,uBAAnL;AAA2M,IAAA,IAAI,EAAEC,wBAAYC;AAA7N,IAhBF,CADF;AAoBD,CA7CM","sourcesContent":["import React from 'react';\nimport { BiPlugin } from '@ali/4ever-cangjie';\nimport { TBIconButton, Popover, List } from '@ali/we-design-next';\nimport { IconMore, HoverToolbarHooks } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { ILocale } from '../types';\ntype IHoverToolbarButton = NonNullable<ReturnType<BiPlugin['renderHoverToolbar']>>;\n\ntype IHoverButtonConfig = Exclude<IHoverToolbarButton, React.ReactElement>;\n\nexport interface IListItem {\n  key: string,\n  title: NonNullable<IHoverButtonConfig['title']>,\n  prefix: IHoverButtonConfig['icon'],\n  disabled: IHoverButtonConfig['disabled'],\n  testid?: string; \n  ['data-role']?: string;\n}\n\nexport interface IMoreMenuButtonProps {\n  items: Array<IListItem | 'divider'>;\n  onOverlayVisibleChange: (visible: boolean) => void;\n  onSelect: (key: string) => void;\n  locale: ILocale;\n}\n\nexport const MoreMenuButton: React.FC<IMoreMenuButtonProps> = (props) => {\n  const { items, onOverlayVisibleChange, onSelect, locale } = props;\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isOverlayVisible, setOverlayVisible] = HoverToolbarHooks.usePopoverVisible('more', onOverlayVisibleChange);\n\n  const handleSelect = React.useCallback((key: string) => {\n    onSelect(key);\n    setOverlayVisible(false);\n  }, [onSelect, setOverlayVisible]);\n\n  const toggleVisible = React.useCallback(() => {\n    setOverlayVisible(!isOverlayVisible);\n  }, [setOverlayVisible, isOverlayVisible]);\n\n  const renderItem = React.useCallback(({ key }) => {\n    if (!items) return null;\n    const item = items?.find((t) => (typeof t !== 'string' && t.key === key)) as IListItem;\n    if (!item) return null;\n    return (\n      <List.Item\n        {...item}\n      />\n    )\n  }, [items]);\n\n  return (\n    <Popover\n      placement='bottomLeft'\n      content={\n        <List\n          data-testid='bi-toolbar-hover-more-options'\n          items={items}\n          onSelect={handleSelect}\n          data-role='hoverToolbarMoreList'\n          renderItem={renderItem}\n        />\n      }\n      onVisibleChange={setOverlayVisible}\n      visible={isOverlayVisible}\n      getContainer={getContainer}\n      data-testid=\"overlay-bi-toolbar-hover-more\"\n    >\n      <TBIconButton active={isOverlayVisible} icon={<IconMore />} onClick={toggleVisible} title={locale?.more || 'More'} tooltip={isOverlayVisible ? '' : locale?.more || 'More'} testid=\"bi-toolbar-hover-more\" role={PluginRoles.hoverToolbarMore} />\n    </Popover>\n  )\n}"],"file":"MoreMenuButton.js"}