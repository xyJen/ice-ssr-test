{"version":3,"sources":["../../../../src/plugins/hoverToolbar/createRenderHoverToolbar.tsx"],"names":["createRenderHoverToolbar","config","locale","props","controller","getNode","buttonName","icon","title","cut","tooltip","onClick","node","run","type","HOVER_TOOLBAR_CUT_NODE","payload","autoClose","role","PluginRoles","hoverToolbarCut","testid","copy","HOVER_TOOLBAR_COPY_NODE","hoverToolbarCopy","delete","command","Commands","removeNodeByKey","key","hoverToolbarDelete"],"mappings":";;;;;;;;;AAAA;;AACA;;AAGA;;AAKA;;AAEA;;uBAV4B,a;;wBAsBZ,eAAC,sBAAD,O;;yBAqBA,eAAC,uBAAD,O;;yBAqBA,eAAC,yBAAD,O;;AAnDD,SAASA,wBAAT,CACbC,MADa,EAEmB;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,MAAnB;AACA,SAAO,CAACE,KAAD,EAAQC,UAAR,EAAoBC,OAApB,KAAgC;AACrC,UAAM;AAAEC,MAAAA;AAAF,QAAiBH,KAAvB;;AACA,YAAQG,UAAR;AACE,WAAK,KAAL;AACE,eAAO;AACLC,UAAAA,IAAI,MADC;AAELC,UAAAA,KAAK,EAAEN,MAAM,EAAEO,GAAR,IAAe,KAFjB;AAGLC,UAAAA,OAAO,EAAER,MAAM,EAAEO,GAAR,IAAe,KAHnB;AAILE,UAAAA,OAAO,EAAE,MAAM;AACb,kBAAMC,IAAI,GAAGP,OAAO,EAApB;AACAO,YAAAA,IAAI,IAAIR,UAAU,CAACS,GAAX,CACN,UADM,EAEN;AACEC,cAAAA,IAAI,EAAEC,+BADR;AAEEC,cAAAA,OAAO,EAAE;AACPJ,gBAAAA;AADO;AAFX,aAFM,CAAR;AASD,WAfI;AAgBLK,UAAAA,SAAS,EAAE,IAhBN;AAiBLC,UAAAA,IAAI,EAAEC,wBAAYC,eAjBb;AAkBLC,UAAAA,MAAM,EAAE;AAlBH,SAAP;;AAoBF,WAAK,MAAL;AACE,eAAO;AACLd,UAAAA,IAAI,OADC;AAELC,UAAAA,KAAK,EAAEN,MAAM,EAAEoB,IAAR,IAAgB,MAFlB;AAGLZ,UAAAA,OAAO,EAAER,MAAM,EAAEoB,IAAR,IAAgB,MAHpB;AAILX,UAAAA,OAAO,EAAE,MAAM;AACb,kBAAMC,IAAI,GAAGP,OAAO,EAApB;AACAO,YAAAA,IAAI,IAAIR,UAAU,CAACS,GAAX,CACN,UADM,EAEN;AACEC,cAAAA,IAAI,EAAES,gCADR;AAEEP,cAAAA,OAAO,EAAE;AACPJ,gBAAAA;AADO;AAFX,aAFM,CAAR;AASD,WAfI;AAgBLK,UAAAA,SAAS,EAAE,IAhBN;AAiBLC,UAAAA,IAAI,EAAEC,wBAAYK,gBAjBb;AAkBLH,UAAAA,MAAM,EAAE;AAlBH,SAAP;;AAoBF,WAAK,QAAL;AACE,eAAO;AACLd,UAAAA,IAAI,OADC;AAELC,UAAAA,KAAK,EAAEN,MAAM,EAAEuB,MAAR,IAAkB,QAFpB;AAGLf,UAAAA,OAAO,EAAER,MAAM,EAAEuB,MAAR,IAAkB,QAHtB;AAILd,UAAAA,OAAO,EAAE,MAAM;AACb,kBAAMC,IAAI,GAAGP,OAAO,EAApB;AACAO,YAAAA,IAAI,IAAIR,UAAU,CAACsB,OAAX,CAAmBC,sBAASC,eAA5B,EAA6ChB,IAAI,CAACiB,GAAlD,CAAR;AACD,WAPI;AAQLZ,UAAAA,SAAS,EAAE,IARN;AASLC,UAAAA,IAAI,EAAEC,wBAAYW,kBATb;AAULT,UAAAA,MAAM,EAAE;AAVH,SAAP;;AAYF;AAAS,eAAO,IAAP;AAxDX;AA0DD,GA5DD;AA6DD","sourcesContent":["import * as React from 'react';\nimport {\n  PluginRoles,\n} from '@ali/4ever-bamboo';\nimport {\n  IconCopy,\n  IconCut,\n  IconDelete,\n} from '@ali/4ever-component';\nimport { Commands } from '@ali/4ever-cangjie';\nimport type { BiPlugin } from '../../types';\nimport { HOVER_TOOLBAR_CUT_NODE, HOVER_TOOLBAR_COPY_NODE } from './actions';\nimport { IHoverToolbarPluginConfigs } from './types';\n\nexport default function createRenderHoverToolbar(\n  config: IHoverToolbarPluginConfigs,\n): BiPlugin['renderHoverToolbar'] {\n  const { locale } = config;\n  return (props, controller, getNode) => {\n    const { buttonName } = props;\n    switch (buttonName) {\n      case 'cut':\n        return {\n          icon: <IconCut />,\n          title: locale?.cut || 'Cut',\n          tooltip: locale?.cut || 'Cut',\n          onClick: () => {\n            const node = getNode();\n            node && controller.run(\n              'onAction',\n              {\n                type: HOVER_TOOLBAR_CUT_NODE,\n                payload: {\n                  node,\n                },\n              },\n            );\n          },\n          autoClose: true,\n          role: PluginRoles.hoverToolbarCut,\n          testid: 'bi-toolbar-hover-cut',\n        };\n      case 'copy':\n        return {\n          icon: <IconCopy />,\n          title: locale?.copy || 'Copy',\n          tooltip: locale?.copy || 'Copy',\n          onClick: () => {\n            const node = getNode();\n            node && controller.run(\n              'onAction',\n              {\n                type: HOVER_TOOLBAR_COPY_NODE,\n                payload: {\n                  node,\n                },\n              },\n            );\n          },\n          autoClose: true,\n          role: PluginRoles.hoverToolbarCopy,\n          testid: 'bi-toolbar-hover-copy',\n        };\n      case 'delete':\n        return {\n          icon: <IconDelete />,\n          title: locale?.delete || 'Delete',\n          tooltip: locale?.delete || 'Delete',\n          onClick: () => {\n            const node = getNode();\n            node && controller.command(Commands.removeNodeByKey, node.key);\n          },\n          autoClose: true,\n          role: PluginRoles.hoverToolbarDelete,\n          testid: 'bi-toolbar-hover-delete',\n        };\n      default: return null;\n    }\n  };\n}\n"],"file":"createRenderHoverToolbar.js"}