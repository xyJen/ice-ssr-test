{"version":3,"sources":["../../../../src/plugins/formula/actions.ts"],"names":["FORMULA_SET_DATA","Symbol","FORMULA_SET_INJECTION","setFormulaData","node","data","type","payload","setFormulaInjection","key"],"mappings":";;;;;;;;AAIO,MAAMA,gBAAgB,GAAGC,MAAM,CAAC,kBAAD,CAA/B;;AAEA,MAAMC,qBAAqB,GAAGD,MAAM,CAAC,uBAAD,CAApC;;;AAeA,SAASE,cAAT,CAAwBC,IAAxB,EAAoCC,IAApC,EAAwG;AAC7G,SAAO;AACLC,IAAAA,IAAI,EAAEN,gBADD;AAELO,IAAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAEA,IADC;AAEPC,MAAAA;AAFO;AAFJ,GAAP;AAOD;;AAEM,SAASG,mBAAT,CAA6BC,GAA7B,EAA0CJ,IAA1C,EAAqE;AAC1E,SAAO;AACLC,IAAAA,IAAI,EAAEJ,qBADD;AAELK,IAAAA,OAAO,EAAE;AACPE,MAAAA,GADO;AAEPJ,MAAAA;AAFO;AAFJ,GAAP;AAOD","sourcesContent":["import { Node, Action, Inline } from '@ali/4ever-cangjie';\nimport { TagData } from '@ali/4ever-mo';\nimport { FormulaData } from './types';\n\nexport const FORMULA_SET_DATA = Symbol('formula-set-data');\n\nexport const FORMULA_SET_INJECTION = Symbol('formula-set-injection');\n\nexport interface SetFormulaDataPayload extends ActionPayload {\n  data: Partial<TagData<FormulaData>>\n}\n\nexport interface ActionPayload {\n  node: Inline;\n}\n\nexport interface SetInjectionPayload {\n  key: string\n  data: Record<string, any>\n}\n\nexport function setFormulaData(node: Node, data: Partial<TagData<FormulaData>>): Action<SetFormulaDataPayload> {\n  return {\n    type: FORMULA_SET_DATA,\n    payload: {\n      node: node as Inline,\n      data,\n    }\n  };\n}\n\nexport function setFormulaInjection(key: string, data: Record<string, any>) {\n  return {\n    type: FORMULA_SET_INJECTION,\n    payload: {\n      key,\n      data,\n    },\n  };\n}\n"],"file":"actions.js"}