{"version":3,"sources":["../../../../../src/plugins/formula/handlers/onAction.ts"],"names":["onAction","action","controller","next","type","FORMULA_SET_DATA","value","node","data","payload","closestBlock","maxWidth","tagData","width","Math","min","height","run","FORMULA_SET_INJECTION","key"],"mappings":";;;;;;;AAEA;;AAEA;;AAMA;;AACA;;AAEe,SAASA,QAAT,CAAkBC,MAAlB,EAAkCC,UAAlC,EAA0DC,IAA1D,EAA0E;AACvF,MAAIF,MAAM,CAACG,IAAP,KAAgBC,yBAApB,EAAsC;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAYJ,UAAlB;AACA,UAAM;AAAEK,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiBP,MAAM,CAACQ,OAA9B;AACA,UAAMC,YAAY,GAAG,yCAAyBJ,KAAzB,EAAgCC,IAAhC,CAArB;AACA,UAAMI,QAAQ,GAAG,8BAAcD,YAAd,CAAjB;AACA,UAAME,OAAgB,GAAG,EACvB,GAAGJ,IADoB;AAEvBK,MAAAA,KAAK,EAAE,CAACL,IAAI,CAACK,KAAN,GAAcL,IAAI,CAACK,KAAnB,GAA2BC,IAAI,CAACC,GAAL,CAASJ,QAAT,EAAoBH,IAAI,CAACK,KAAzB,CAFX;AAGvBG,MAAAA,MAAM,EAAER,IAAI,CAACQ;AAHU,KAAzB;AAMA,WAAOd,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2B,6BAAWV,IAAX,EAAiBK,OAAjB,CAA3B,CAAP;AACD;;AACD,MAAIX,MAAM,CAACG,IAAP,KAAgBc,8BAApB,EAA2C;AACzC,UAAM;AAAEC,MAAAA,GAAF;AAAOX,MAAAA;AAAP,QAAgBP,MAAM,CAACQ,OAA7B;AACA,WAAO,gCAAaP,UAAb,EAAyBiB,GAAzB,EAA8BX,IAA9B,CAAP;AACD;;AACD,SAAOL,IAAI,EAAX;AACD","sourcesContent":["import { Controller, Action } from '@ali/4ever-cangjie';\nimport { TagData } from '@ali/4ever-mo';\nimport { getClosestContainerBlock } from '@ali/4ever-utils';\nimport { getInnerWidth } from '@ali/4ever-utils';\nimport {\n  FORMULA_SET_DATA,\n  FORMULA_SET_INJECTION,\n  SetFormulaDataPayload,\n  SetInjectionPayload,\n} from '../actions';\nimport { setInjection } from '../commands/setInjection';\nimport { setTagData } from '@ali/4ever-factory';\n\nexport default function onAction(action: Action, controller: Controller, next: Function) {\n  if (action.type === FORMULA_SET_DATA) {\n    const { value } = controller;\n    const { node, data } = action.payload as SetFormulaDataPayload;\n    const closestBlock = getClosestContainerBlock(value, node);\n    const maxWidth = getInnerWidth(closestBlock!);\n    const tagData: TagData = {\n      ...data,\n      width: !data.width ? data.width : Math.min(maxWidth!, data.width),\n      height: data.height,\n    };\n\n    return controller.run('onAction', setTagData(node, tagData));\n  }\n  if (action.type === FORMULA_SET_INJECTION) {\n    const { key, data } = action.payload as SetInjectionPayload;\n    return setInjection(controller, key, data);\n  }\n  return next();\n}\n\n"],"file":"onAction.js"}