"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _katex = require("katex");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _reactTextareaAutosize = _interopRequireDefault(require("react-textarea-autosize"));

var _everBamboo = require("@ali/4ever-bamboo");

var _weDesign = require("@ali/we-design");

const _createElement = /*#__PURE__*/_react.default.createElement;
const {
  getKatexString
} = _everBamboo.FormulaPlugin;

const Wrapper = /*#__PURE__*/_styledComponents.default.div(["max-height:30vh;width:400px;display:flex;flex-direction:column;"]);

const Footer = /*#__PURE__*/_styledComponents.default.div(["display:flex;justify-content:space-between;align-items:center;padding:12px;min-height:60px;"]);

const Info = /*#__PURE__*/_styledComponents.default.div(["height:20px;display:flex;color:rgba(17,31,44,0.85);margin:4px 0;cursor:pointer;&:hover{color:#3e88d6;}"]);

const InfoText = /*#__PURE__*/_styledComponents.default.div(["line-height:20px;font-size:14px;&:hover{text-decoration:underline;}"]);

const Btns = /*#__PURE__*/_styledComponents.default.div(["display:flex;align-items:center;"]);

const ConfirmBtn = /*#__PURE__*/(0, _styledComponents.default)(_weDesign.Button)(["height:32px;border-radius:4px;font-size:14px;line-height:20px;padding:6px 15px;cursor:pointer;margin-left:8px;border:0;background:#2364e8;color:#ffffff !important;&:hover,&:focus{background:#2364e8;}"]);

const ErrorInfo = /*#__PURE__*/_styledComponents.default.p(["color:#ff5219;font-size:12px;line-height:17px;margin:4px 12px 0;max-width:448px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;"]);

const FormulaInput = /*#__PURE__*/(0, _styledComponents.default)(_reactTextareaAutosize.default)(["outline:0;resize:none;padding:6px 8px;outline:0;margin:12px 12px 0;border-radius:4px;border:1px solid #006AFE;box-shadow:0px 0px 0px 3px rgba(0,106,254,0.12);font-size:14px;line-height:1.5;color:#171A1D;cursor:text;white-space:pre-wrap;word-break:break-word;&::placeholder{color:rgba(23,26,29,0.24);}"]);
const HelpIcon = /*#__PURE__*/(0, _styledComponents.default)(_weDesign.HelpBetaNormal)(["width:20px;height:20px;display:flex;justify-content:center;align-items:center;"]);

var _ref = /*#__PURE__*/_createElement(HelpIcon, null);

class FormulaTextarea extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);

    this.onClickConFirm = () => {
      this.props.onButtonClick();
    };

    this.onChange = e => {
      const text = e.currentTarget.value;

      if (this.props.formula !== text) {
        this.props.onChange(text);
      }
    };

    this.openWikiBook = () => {
      window.open(this.props.config?.jumpToUrl);
    };
  }

  get errorMessage() {
    const {
      formula
    } = this.props;

    try {
      getKatexString(formula, true);
      return undefined;
    } catch (e) {
      if (e instanceof _katex.ParseError) {
        return e.message.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
      } else {
        throw e;
      }
    }
  }

  renderErrorMessage() {
    if (!this.errorMessage) {
      return null;
    }

    return /*#__PURE__*/_createElement(ErrorInfo, null, this.errorMessage);
  }

  render() {
    const {
      locale,
      formula,
      textareaRef
    } = this.props;
    return /*#__PURE__*/_createElement(Wrapper, {
      "data-cangjie-not-editable": true
    }, /*#__PURE__*/_createElement(FormulaInput, {
      minRows: 2,
      onChange: this.onChange,
      placeholder: locale.textareaPlaceholder,
      spellCheck: false,
      value: formula,
      ref: textareaRef
    }), this.renderErrorMessage(), /*#__PURE__*/_createElement(Footer, null, /*#__PURE__*/_createElement(Info, {
      onClick: this.openWikiBook
    }, _ref, /*#__PURE__*/_createElement(InfoText, null, locale.info)), /*#__PURE__*/_createElement(Btns, null, /*#__PURE__*/_createElement(ConfirmBtn, {
      onClick: this.onClickConFirm
    }, locale.confirm))));
  }

}

exports.default = FormulaTextarea;
//# sourceMappingURL=textarea.js.map