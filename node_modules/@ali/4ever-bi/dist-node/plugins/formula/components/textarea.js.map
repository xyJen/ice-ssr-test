{"version":3,"sources":["../../../../../src/plugins/formula/components/textarea.tsx"],"names":["getKatexString","FormulaPlugin","Wrapper","styled","div","Footer","Info","InfoText","Btns","ConfirmBtn","Button","ErrorInfo","p","FormulaInput","Textarea","HelpIcon","HelpBetaNormal","FormulaTextarea","React","PureComponent","onClickConFirm","props","onButtonClick","onChange","e","text","currentTarget","value","formula","openWikiBook","window","open","config","jumpToUrl","errorMessage","undefined","ParseError","message","replace","renderErrorMessage","render","locale","textareaRef","textareaPlaceholder","info","confirm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ParseError } from 'katex';\nimport styled from 'styled-components';\nimport Textarea from 'react-textarea-autosize';\nimport { FormulaPlugin } from '@ali/4ever-bamboo';\nimport { Button, HelpBetaNormal } from '@ali/we-design';\nimport { FormulaConfig } from '../types';\n\nconst { getKatexString } = FormulaPlugin;\n\ninterface Props {\n  formula: string;\n  onChange: (text: string) => void;\n  onButtonClick: () => void;\n  config?: FormulaConfig;\n  textareaRef: React.RefObject<HTMLTextAreaElement>;\n  locale: Record<string, any>;\n}\n\nconst Wrapper = styled.div`\n  max-height: 30vh;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px;\n  min-height: 60px;\n`;\n\nconst Info = styled.div`\n  height: 20px;\n  display: flex;\n  color: rgba(17, 31, 44, 0.85);\n  margin: 4px 0;\n  cursor: pointer;\n\n  &:hover {\n    color: #3e88d6;\n  }\n`;\n\nconst InfoText = styled.div`\n  line-height: 20px;\n  font-size: 14px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Btns = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ConfirmBtn = styled(Button)`\n  height: 32px;\n  border-radius: 4px;\n  font-size: 14px;\n  line-height: 20px;\n  padding: 6px 15px;\n  cursor: pointer;\n  margin-left: 8px;\n  border: 0;\n  background: #2364e8;\n  color: #ffffff !important;\n\n  &:hover, &:focus {\n    background: #2364e8;\n  }\n`;\n\nconst ErrorInfo = styled.p`\n  color: #ff5219;\n  font-size: 12px;\n  line-height: 17px;\n  margin: 4px 12px 0;\n  max-width: 448px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst FormulaInput = styled(Textarea)`\n  outline: 0;\n  resize: none;\n  padding: 6px 8px;\n  outline: 0;\n  margin: 12px 12px 0;\n  border-radius: 4px;\n  border: 1px solid #006AFE;\n  box-shadow: 0px 0px 0px 3px rgba(0, 106, 254, 0.12);\n  font-size: 14px;\n  line-height: 1.5;\n  color: #171A1D;\n  cursor: text;\n  white-space: pre-wrap;\n  word-break: break-word;\n\n  &::placeholder {\n    color: rgba(23, 26, 29, 0.24);\n  }\n`;\n\nconst HelpIcon = styled(HelpBetaNormal)`\n  width: 20px;\n  height: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default class FormulaTextarea extends React.PureComponent<Props> {\n  private get errorMessage() {\n    const { formula } = this.props;\n    try {\n      getKatexString(formula, true);\n      return undefined;\n    } catch (e) {\n      if (e instanceof ParseError) {\n        return e.message.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private renderErrorMessage() {\n    if (!this.errorMessage) {\n      return null;\n    }\n\n    return (\n      <ErrorInfo>{this.errorMessage}</ErrorInfo>\n    );\n  }\n\n  render() {\n    const { locale, formula, textareaRef } = this.props\n    return (\n      <Wrapper data-cangjie-not-editable>\n        <FormulaInput\n          minRows={2}\n          onChange={this.onChange}\n          placeholder={locale.textareaPlaceholder}\n          spellCheck={false}\n          value={formula}\n          ref={textareaRef}\n        />\n        { this.renderErrorMessage() }\n        <Footer>\n          <Info onClick={this.openWikiBook}>\n            <HelpIcon />\n            <InfoText>\n              {locale.info}\n            </InfoText>\n          </Info>\n          <Btns>\n            <ConfirmBtn\n              onClick={this.onClickConFirm}\n            >\n              {locale.confirm}\n            </ConfirmBtn>\n          </Btns>\n        </Footer>\n      </Wrapper>\n    );\n  }\n\n  private onClickConFirm = () => {\n    this.props.onButtonClick();\n  };\n\n  private onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const text = e.currentTarget.value;\n    if (this.props.formula !== text) {\n      this.props.onChange(text);\n    }\n  };\n\n  private openWikiBook = () => {\n    window.open(this.props.config?.jumpToUrl);\n  };\n}\n"],"file":"textarea.js"}