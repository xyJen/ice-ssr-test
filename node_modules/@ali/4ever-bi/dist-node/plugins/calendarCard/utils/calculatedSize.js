"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCalculatedReceivers = getCalculatedReceivers;
exports.calculatedSize = calculatedSize;

var _react = _interopRequireDefault(require("react"));

var _everBamboo = require("@ali/4ever-bamboo");

var _zh_CN = _interopRequireDefault(require("../../../locales/zh_CN"));

const _createElement = /*#__PURE__*/_react.default.createElement;
const {
  TotalWarpper,
  TimeTextParagraph,
  PlaceTextParagraph,
  SubjectParagraph,
  ReceiversParagraph,
  CommentTextParagraph,
  CommentTextWrapper,
  ContainerWrapper,
  BodyWrapper,
  getReceiversHeight,
  CALENDAR_CARD_SINGLE_LINE_HEIGHT
} = _everBamboo.CalendarCardPlugin;
/**
 * 计算应该返回的Receivers数量，标签以中文为准
 * 规则：只取前两行，其中最后一行显示为 等{count}人参会
 * @param receivers 参会人
 * @param organizer 组织者
 * @param containerWidth 容器宽度
 */

function getCalculatedReceivers(metadata, containerWidth, totalCount) {
  const {
    topReceivers: receivers = [],
    organizer
  } = metadata;
  const innerWidth = containerWidth - 52; // 实际容器宽度（border）

  const {
    locale
  } = _zh_CN.default.calendarCard;
  const {
    receiverCount
  } = locale;
  const totalCountText = receiverCount.replace('{count}', String(totalCount)); // 最大不超过 2 行

  const maxHeight = (CALENDAR_CARD_SINGLE_LINE_HEIGHT || 1) * 3;
  let index = -1; // 当前Receiver索引

  const len = receivers.length; // 最大两行

  let currHeight = CALENDAR_CARD_SINGLE_LINE_HEIGHT;

  while (currHeight < maxHeight && index < len) {
    index++;
    const currReceivers = receivers.slice(0, index + 1);
    currHeight = getReceiversHeight({
      receivers: currReceivers,
      locale,
      totalCountText,
      singleLineHeight: CALENDAR_CARD_SINGLE_LINE_HEIGHT,
      innerWidth
    });
  }

  if (index === len - 1) {
    if (currHeight <= maxHeight) index += 1;
  }

  return receivers.slice(0, index);
}

async function calculatedSize(metadata, containerWidth) {
  const {
    locale
  } = _zh_CN.default.calendarCard;
  const {
    time,
    place,
    comment,
    subject
  } = metadata;

  const containerNode = /*#__PURE__*/_createElement("div", {
    style: {
      width: `${containerWidth}px`
    }
  }, /*#__PURE__*/_createElement(ContainerWrapper, {
    style: {
      height: 'auto',
      width: 'auto'
    }
  }, /*#__PURE__*/_createElement(BodyWrapper, null, /*#__PURE__*/_createElement(SubjectParagraph, {
    isReadonly: true,
    subject: subject,
    metadata: metadata
  }), /*#__PURE__*/_createElement(TimeTextParagraph, null, time), /*#__PURE__*/_createElement(PlaceTextParagraph, null, place), /*#__PURE__*/_createElement(ReceiversParagraph, {
    isReadonly: true,
    locale: locale,
    metadata: metadata
  }), comment ? /*#__PURE__*/_createElement(CommentTextParagraph, null, /*#__PURE__*/_createElement(CommentTextWrapper, null, comment)) : null)));

  const result = await (0, _everBamboo.calculatedPluginSize)(containerNode, containerWidth);
  return result.height;
}
//# sourceMappingURL=calculatedSize.js.map