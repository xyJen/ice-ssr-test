{"version":3,"sources":["../../../../../src/plugins/calendarCard/hooks/useInit.ts"],"names":["CALENDAR_CARD_MAX_HEIGHT","CalendarCardPlugin","debug","MAX_FIRSTLOADED_REFRESH_COUNT","RETRY_TIMES","Map","useInit","props","isInitialized","isPlaceholder","containerWidthInPC","isLoading","isFirstLoaded","isMobile","calendarId","setLoading","refresh","controller","node","finalMetadata","finalData","injectToData","setRefreshResult","onInitData","mode","isShanhui","CalendarType","SHANHUI","shouldLoadAtFirst","nodeKey","key","has","delete","data","currentTime","get","set","then","res","status","run","metadata","withoutSaving","injectionHeight","undefined","injectionMetadata","newMetadata","getTopReceivers","getCalculatedCalendarReceivers","getCalculatedReceivers","topReceivers","totalCount","calculateHeight","calculatedCalendarSize","calculatedSize","newHeight","isInValidHeight","height","catch","finally"],"mappings":"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","sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { isNil } from 'lodash-es';\nimport Debug from 'debug';\nimport { Controller, Block } from '@ali/4ever-cangjie';\nimport { calculatedCalendarSize, getCalculatedCalendarReceivers } from '../shanhui/calculatedCalendarSize';\nimport {\n  CalendarCardMetadataType,\n  CalendarCardDataType,\n  CalendarCardPluginConfig,\n  RefreshReponse,\n  CalendarInjectionType,\n  CalendarType,\n} from '../types';\nimport { setCardData } from '@ali/4ever-factory';\nimport { calculatedSize, getCalculatedReceivers } from '../utils/calculatedSize';\nimport { CalendarCardPlugin } from '@ali/4ever-bamboo';\nimport isEqualValue from '../utils/isEqualValue';\n\nconst { CALENDAR_CARD_MAX_HEIGHT } = CalendarCardPlugin;\n\nconst debug = Debug('EDITOR:BI:CALENDAR:RENDER');\n\n// 首次加载最大刷新次数，限制 retry 次数\nconst MAX_FIRSTLOADED_REFRESH_COUNT = 2;\n\nconst RETRY_TIMES = new Map<string, number>();\n\ninterface IProps {\n  isInitialized?: boolean;\n  isPlaceholder?: boolean;\n  containerWidthInPC?: number;\n  isLoading: boolean;\n  isFirstLoaded?: boolean;\n  isMobile?: boolean;\n  calendarId: string;\n  setLoading: (isLoading: boolean) => void;\n  refresh: CalendarCardPluginConfig['refresh'];\n  controller: Controller;\n  node: Block;\n  finalMetadata: CalendarCardMetadataType;\n  finalData: CalendarCardDataType;\n  injectToData: (mergeData: CalendarInjectionType) => void;\n  setRefreshResult: (res: RefreshReponse) => void;\n  onInitData?: () => void;\n  mode?: CalendarType;\n}\n\nexport default function useInit(props: IProps) {\n  const {\n    isInitialized,\n    isPlaceholder,\n    containerWidthInPC,\n    isLoading,\n    isFirstLoaded,\n    isMobile,\n    calendarId,\n    setLoading,\n    refresh,\n    controller,\n    node,\n    finalMetadata,\n    finalData,\n    injectToData,\n    setRefreshResult,\n    onInitData,\n    mode,\n  } = props;\n  const isShanhui = mode === CalendarType.SHANHUI;\n  const shouldLoadAtFirst = useCallback(() => {\n    debug('SHOULDLOADATFIRST', isInitialized, isPlaceholder, containerWidthInPC, isLoading, isFirstLoaded);\n    // placeholder 状态不发出请求\n    if (isPlaceholder) return false;\n    // 移动端首次打开应初始化日程数据\n    if (isMobile && !isInitialized && !isLoading) return true;\n    // 打开后已首次加载过不再刷新\n    if (isFirstLoaded) return false;\n    // 避免重复请求\n    if (isLoading) return false;\n    // 闪会场景下自动更新数据\n    if (isShanhui) return true;\n    // 未初始化日程允许发起请求获取最新数据\n    if (!isInitialized) return true;\n    // 移动端不主动刷新 - 只在首次加载后刷新数据\n    if (isMobile) return false;\n    // 闪会日程卡片的刷新tips全部先去掉，另提需求优化刷新逻辑\n    if (isShanhui && isInitialized) return false;\n    // 缺少编辑器容器宽度不刷新请求\n    return !isNil(containerWidthInPC);\n  }, [isInitialized, isPlaceholder, containerWidthInPC, isLoading, isFirstLoaded, isMobile, isShanhui]);\n\n  useEffect(() => {\n    const nodeKey = node.key;\n    return () => {\n      if (RETRY_TIMES.has(nodeKey)) {\n        RETRY_TIMES.delete(nodeKey);\n      }\n    };\n  }, [node]);\n\n  useEffect(() => {\n    if (!calendarId) return;\n    if (!refresh) return;\n    if (!shouldLoadAtFirst()) return;\n    debug('INIT-PARAMS', calendarId, isPlaceholder, isFirstLoaded, isLoading, isInitialized, isMobile);\n    const { key, data } = node;\n    if (RETRY_TIMES.has(key)) {\n      const currentTime = RETRY_TIMES.get(key)! + 1;\n      // 控制 retry 次数\n      if (currentTime > MAX_FIRSTLOADED_REFRESH_COUNT) {\n        return;\n      }\n      RETRY_TIMES.set(key, currentTime);\n    } else {\n      RETRY_TIMES.set(key, 1);\n    }\n    setLoading(true);\n    debug('INIT', calendarId);\n    refresh(calendarId).then(async (res) => {\n      if (res.status !== 'success') {\n        setRefreshResult(res);\n        controller.run('onAction', setCardData(node, {\n          metadata: { ...data.metadata, isInitialized: true },\n          withoutSaving: true,\n        }));\n        injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n        debug('INIT:ERROR', res);\n        return;\n      }\n      let newMetadata = res.data!;\n      const getTopReceivers = isShanhui ? getCalculatedCalendarReceivers : getCalculatedReceivers;\n      newMetadata = {\n        ...newMetadata,\n        mode,\n        topReceivers: await getTopReceivers(newMetadata, containerWidthInPC!, newMetadata.totalCount || 0),\n      };\n      const calculateHeight = isShanhui ? calculatedCalendarSize : calculatedSize;\n      const newHeight = await calculateHeight(newMetadata, containerWidthInPC || CALENDAR_CARD_MAX_HEIGHT);\n      const isInValidHeight = !(finalData.height && newHeight);\n      if ((isInValidHeight || finalData.height === newHeight) && isEqualValue(newMetadata, finalMetadata)) {\n        injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n        debug('INIT:NOCHANGE');\n        return;\n      }\n\n      // 首次创建时自动落库\n      if (!isInitialized) {\n        controller.run('onAction', setCardData(node, {\n          metadata: { ...newMetadata, isInitialized: true },\n          height: newHeight,\n          withoutSaving: true,\n        }));\n        injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n        if (onInitData) onInitData();\n        debug('INIT:ISINITIALIZED');\n        return;\n      }\n      injectToData({\n        isFirstLoaded: true,\n        injectionMetadata: newMetadata,\n        injectionHeight: newHeight,\n      });\n      debug('INIT:USUAL');\n    }).catch(() => {\n      controller.run('onAction', setCardData(node, {\n        metadata: { ...data.metadata, isInitialized: true },\n        withoutSaving: true,\n      }));\n      injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n    }).finally(() => {\n      setLoading(false);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [containerWidthInPC, shouldLoadAtFirst]);\n}\n"],"file":"useInit.js"}