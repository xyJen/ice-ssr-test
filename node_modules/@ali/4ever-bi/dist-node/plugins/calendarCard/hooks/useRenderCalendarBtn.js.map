{"version":3,"sources":["../../../../../src/plugins/calendarCard/hooks/useRenderCalendarBtn.tsx"],"names":["useRenderCalendarBtn","props","isPlaceholder","calendarId","containerWidthInPC","finalMetadata","injectToData","setLoading","setCalendarCardData","key","CalendarBtn","initCalendar","data","topReceivers","totalCount","newMetadata","isInitialized","isFirstLoaded","createCalendarBtn"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAcA,MAAMA,oBAAoB,GAAIC,KAAD,IAAmC;AAC9D,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,mBAPI;AAQJC,IAAAA,GARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAYA,QAAMU,YAAY,GAAG,wBAAY,MAAOC,IAAP,IAA4D;AAC3F,QAAIT,UAAJ,EAAgB,OAAO,KAAP;AAChB,UAAMU,YAAY,GAAG,4CAAuBD,IAAvB,EAA6BR,kBAA7B,EAAiDQ,IAAI,CAACE,UAAtD,CAArB;AACA,UAAMC,WAAqC,GAAG,EAC5C,GAAGH,IADyC;AAE5CC,MAAAA;AAF4C,KAA9C;AAIA,QAAI,2BAAaE,WAAb,EAA0BV,aAA1B,CAAJ,EAA8C,OAAO,KAAP;AAC9C,UAAMG,mBAAmB,CAAC,EAAE,GAAGO,WAAL;AAAkBC,MAAAA,aAAa,EAAE;AAAjC,KAAD,CAAzB;AACAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAD,IAAAA,YAAY,CAAC;AAAEW,MAAAA,aAAa,EAAE;AAAjB,KAAD,CAAZ;AACA,WAAO,IAAP;AACD,GAZoB,EAYlB,CAACd,UAAD,EAAaC,kBAAb,EAAiCC,aAAjC,EAAgDC,YAAhD,EAA8DC,UAA9D,EAA0EC,mBAA1E,CAZkB,CAArB;AAcA,QAAMU,iBAAiB,GAAG,wBAAY,MAAM;AAC1C,QAAI,CAAChB,aAAD,IAAkB,CAACQ,WAAvB,EAAoC,OAAO,IAAP;AACpC,WAAOA,WAAW,CAAC;AAAED,MAAAA,GAAF;AAAOE,MAAAA;AAAP,KAAD,CAAlB;AACD,GAHyB,EAGvB,CAACT,aAAD,EAAgBQ,WAAhB,EAA6BD,GAA7B,EAAkCE,YAAlC,CAHuB,CAA1B;AAKA,SAAO,CAACO,iBAAD,CAAP;AACD,CAjCD;;eAmCelB,oB","sourcesContent":["import { useCallback } from 'react';\nimport { CalendarCardMetadataType, CalendarInjectionType } from '../types';\nimport { getCalculatedReceivers } from '../utils/calculatedSize';\nimport isEqualValue from '../utils/isEqualValue';\n\ninterface RenderCalendarBtnProps {\n  isPlaceholder?: boolean;\n  calendarId?: string;\n  containerWidthInPC: number;\n  finalMetadata: CalendarCardMetadataType;\n  injectToData: (mergeData: CalendarInjectionType) => void;\n  setLoading: (isLoading: boolean) => void;\n  setCalendarCardData: (newMetadata: CalendarCardMetadataType) => Promise<void>;\n  CalendarBtn: any;\n  key: string;\n}\n\nconst useRenderCalendarBtn = (props: RenderCalendarBtnProps) => {\n  const {\n    isPlaceholder,\n    calendarId,\n    containerWidthInPC,\n    finalMetadata,\n    injectToData,\n    setLoading,\n    setCalendarCardData,\n    key,\n    CalendarBtn,\n  } = props;\n\n  const initCalendar = useCallback(async (data: CalendarCardMetadataType): Promise<boolean> => {\n    if (calendarId) return false;\n    const topReceivers = getCalculatedReceivers(data, containerWidthInPC, data.totalCount!);\n    const newMetadata: CalendarCardMetadataType = {\n      ...data,\n      topReceivers,\n    };\n    if (isEqualValue(newMetadata, finalMetadata)) return false;\n    await setCalendarCardData({ ...newMetadata, isInitialized: true });\n    setLoading(false);\n    injectToData({ isFirstLoaded: true });\n    return true;\n  }, [calendarId, containerWidthInPC, finalMetadata, injectToData, setLoading, setCalendarCardData]);\n\n  const createCalendarBtn = useCallback(() => {\n    if (!isPlaceholder || !CalendarBtn) return null;\n    return CalendarBtn({ key, initCalendar });\n  }, [isPlaceholder, CalendarBtn, key, initCalendar]);\n\n  return [createCalendarBtn];\n};\n\nexport default useRenderCalendarBtn;\n"],"file":"useRenderCalendarBtn.js"}