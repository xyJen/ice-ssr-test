{"version":3,"sources":["../../../../src/plugins/formatPainter/index.tsx"],"names":["createOnKeydown","docStyleReference","createFormatPainterPlugin","config","formatPainterConfig","formatPainter","onDocStyleChange","style","docStyle","toolbar","renderToolbar","locale","menubar","renderEditable","props","editor","next","queries","onAction","onKeyDown","onMouseUp","models","actions"],"mappings":";;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAV4B,a;;AAY5B,MAAMA,eAAe,GAAIC,iBAAD,IAA2C;AACjE,SAAO,wBAAUA,iBAAV,CAAP;AACD,CAFD;;AAIA,SAASC,yBAAT,CAAmCC,MAAnC,EAAqD;AACnD,QAAMC,mBAAmB,GAAGD,MAAM,CAACE,aAAP,IAAwB,EAApD,CADmD,CAEnD;;AACA,QAAMJ,iBAAoC,GAAG,EAA7C;;AACA,QAAMK,gBAAgB,GAAIC,KAAD,IAAsB;AAC7CN,IAAAA,iBAAiB,CAACO,QAAlB,GAA6BD,KAA7B;AACD,GAFD;;AAIA,SAAO;AACLE,IAAAA,OAAO,EAAE,sBAAQL,mBAAR,CADJ;AAELM,IAAAA,aAAa,EAAE,kCAAoBN,mBAAmB,CAACO,MAAxC,CAFV;AAGLC,IAAAA,OAAO,EAAE,sBAAQR,mBAAR,CAHJ;;AAILS,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgBC,IAAhB,EAAsB;AAClC;AAAA;AACE;AACA,uBAAC,6BAAD,6BACMF,KADN;AAEE,UAAA,UAAU,EAAEC,MAFd;AAGE,UAAA,gBAAgB,EAAET;AAHpB,YAKGU,IAAI,EALP;AAFF;AAUD,KAfI;;AAgBLC,IAAAA,OAAO,EAAPA,gBAhBK;AAiBLC,IAAAA,QAAQ,EAARA,iBAjBK;AAkBLC,IAAAA,SAAS,EAAEnB,eAAe,CAACC,iBAAD,CAlBrB;AAmBLmB,IAAAA,SAAS,EAATA,kBAnBK;AAoBLC,IAAAA,MAAM,EAAE;AApBH,GAAP;AAsBD;;AAEDnB,yBAAyB,CAACoB,OAA1B,GAAoCA,OAApC;eAEepB,yB","sourcesContent":["import * as React from 'react';\nimport { DocStyle } from '@ali/4ever-cangjie';\nimport { BiPlugin } from '../../types';\nimport menubar from './menubar';\nimport toolbar from './toolbar';\nimport FormatPainterWrapper from './components/formatPainterWrapper';\nimport * as actions from './actions';\nimport onAction from './handlers/onAction';\nimport onKeyDown, { DocStyleReference } from './handlers/onKeyDown';\nimport onMouseUp from './handlers/onMouseUp';\nimport createRenderToolbar from './createRenderToolbar';\nimport { queries } from './queries';\n\nconst createOnKeydown = (docStyleReference?: DocStyleReference) => {\n  return onKeyDown(docStyleReference);\n};\n\nfunction createFormatPainterPlugin(config): BiPlugin {\n  const formatPainterConfig = config.formatPainter || {};\n  // 需要在 onKeydown 里访问 React context，没有想到好的办法，使用闭包传入\n  const docStyleReference: DocStyleReference = {};\n  const onDocStyleChange = (style?: DocStyle) => {\n    docStyleReference.docStyle = style;\n  };\n\n  return {\n    toolbar: toolbar(formatPainterConfig),\n    renderToolbar: createRenderToolbar(formatPainterConfig.locale),\n    menubar: menubar(formatPainterConfig),\n    renderEditable(props, editor, next) {\n      return (\n        // @ts-ignore\n        <FormatPainterWrapper\n          {...props}\n          controller={editor}\n          onDocStyleChange={onDocStyleChange}\n        >\n          {next()}\n        </FormatPainterWrapper>\n      );\n    },\n    queries,\n    onAction,\n    onKeyDown: createOnKeydown(docStyleReference),\n    onMouseUp,\n    models: [],\n  };\n}\n\ncreateFormatPainterPlugin.actions = actions;\n\nexport default createFormatPainterPlugin;\n"],"file":"index.js"}