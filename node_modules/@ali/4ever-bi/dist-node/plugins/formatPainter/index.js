"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _menubar = _interopRequireDefault(require("./menubar"));

var _toolbar = _interopRequireDefault(require("./toolbar"));

var _formatPainterWrapper = _interopRequireDefault(require("./components/formatPainterWrapper"));

var actions = _interopRequireWildcard(require("./actions"));

var _onAction = _interopRequireDefault(require("./handlers/onAction"));

var _onKeyDown = _interopRequireDefault(require("./handlers/onKeyDown"));

var _onMouseUp = _interopRequireDefault(require("./handlers/onMouseUp"));

var _createRenderToolbar = _interopRequireDefault(require("./createRenderToolbar"));

var _queries = require("./queries");

const _createElement = /*#__PURE__*/React.createElement;

const createOnKeydown = docStyleReference => {
  return (0, _onKeyDown.default)(docStyleReference);
};

function createFormatPainterPlugin(config) {
  const formatPainterConfig = config.formatPainter || {}; // 需要在 onKeydown 里访问 React context，没有想到好的办法，使用闭包传入

  const docStyleReference = {};

  const onDocStyleChange = style => {
    docStyleReference.docStyle = style;
  };

  return {
    toolbar: (0, _toolbar.default)(formatPainterConfig),
    renderToolbar: (0, _createRenderToolbar.default)(formatPainterConfig.locale),
    menubar: (0, _menubar.default)(formatPainterConfig),

    renderEditable(props, editor, next) {
      return (
        /*#__PURE__*/
        // @ts-ignore
        _createElement(_formatPainterWrapper.default, (0, _extends2.default)({}, props, {
          controller: editor,
          onDocStyleChange: onDocStyleChange
        }), next())
      );
    },

    queries: _queries.queries,
    onAction: _onAction.default,
    onKeyDown: createOnKeydown(docStyleReference),
    onMouseUp: _onMouseUp.default,
    models: []
  };
}

createFormatPainterPlugin.actions = actions;
var _default = createFormatPainterPlugin;
exports.default = _default;
//# sourceMappingURL=index.js.map