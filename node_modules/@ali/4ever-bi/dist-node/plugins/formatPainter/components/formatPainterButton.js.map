{"version":3,"sources":["../../../../../src/plugins/formatPainter/components/formatPainterButton.tsx"],"names":["FormatPainterButton","props","controller","locale","rest","value","defaultSz","formatClipboard","data","isActive","trigger","shortcutText","doubleTitle","isCollapsedAtEdge","selection","isDisabled","edgeSelection","query","handleClick","React","useCallback","run","handleDoubleClick","PluginRoles","formatPainter"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAGA;;uBAN4B,a;AAI5B;AACA;;AAQe,SAASA,mBAAT,CAA6BC,KAA7B,EAA8D;AAC3E,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYH,UAAlB;AACA,QAAMI,SAAS,GAAG,kCAAlB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAsBF,KAAK,CAACG,IAAlC;AACA,QAAMC,QAAQ,GAAGF,eAAe,IAAIA,eAAe,CAACG,OAAhB,KAA4B,SAAhE;AACA,QAAMC,YAAY,GAAGR,MAAM,CAACS,WAAP,IAAsB,EAA3C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBR,KAAK,CAACS,SAApC;AACA,QAAMC,UAAU,GAAGF,iBAAiB,IAC/BR,KAAK,CAACG,IAAN,CAAWQ,aADG,IAEdd,UAAU,CAACe,KAAX,CAAiB,iBAAjB,CAFc,IAGdf,UAAU,CAACe,KAAX,CAAiB,oBAAjB,CAHc,IAIdf,UAAU,CAACe,KAAX,CAAiB,sBAAjB,CAJc,IAKdf,UAAU,CAACe,KAAX,CAAiB,yBAAjB,CALc,IAMdf,UAAU,CAACe,KAAX,CAAiB,uBAAjB,CANL;AAQA,QAAMC,WAAW,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAM;AAC1C,QAAI,CAACb,eAAL,EAAsB;AACpBL,MAAAA,UAAU,CAACmB,GAAX,CAAe,UAAf,EAA2B,yBAAW,QAAX,EAAqBf,SAArB,CAA3B;AACA;AACD;;AACDJ,IAAAA,UAAU,CAACmB,GAAX,CAAe,UAAf,EAA2B,oCAA3B;AACD,GANmB,EAMjB,CAACnB,UAAD,EAAaI,SAAb,EAAwBC,eAAxB,CANiB,CAApB;AAQA,QAAMe,iBAAiB,GAAGH,KAAK,CAACC,WAAN,CAAkB,MAAM;AAChDlB,IAAAA,UAAU,CAACmB,GAAX,CAAe,UAAf,EAA2B,yBAAW,UAAX,EAAuBf,SAAvB,CAA3B;AACD,GAFyB,EAEvB,CAACJ,UAAD,EAAaI,SAAb,CAFuB,CAA1B;AAIA,sBACE,eAAC,sBAAD,6BACMF,IADN;AAEE,IAAA,YAAY,EAAEO,YAFhB;AAGE,IAAA,MAAM,EAAC,oBAHT;AAIE,IAAA,MAAM,EAAEF,QAJV;AAKE,IAAA,QAAQ,EAAEM,UALZ;AAME,IAAA,OAAO,EAAEG,WANX;AAOE,IAAA,aAAa,EAAEI,iBAPjB;AAQE,IAAA,IAAI,EAAEC,wBAAYC;AARpB,KADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { BrushButton as Button } from '@ali/we-toolbar';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { useDefaultSz } from '@ali/4ever-component';\n;\n;\nimport { copyFormat, clearFormatClipboard } from '../actions';\n\nexport interface FormatPainterButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n}\n\nexport default function FormatPainterButton(props: FormatPainterButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const { value } = controller;\n  const defaultSz = useDefaultSz();\n  const { formatClipboard } = value.data;\n  const isActive = formatClipboard && formatClipboard.trigger === 'toolbar';\n  const shortcutText = locale.doubleTitle || '';\n  const { isCollapsedAtEdge } = value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || value.data.edgeSelection\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleClick = React.useCallback(() => {\n    if (!formatClipboard) {\n      controller.run('onAction', copyFormat('single', defaultSz));\n      return;\n    }\n    controller.run('onAction', clearFormatClipboard());\n  }, [controller, defaultSz, formatClipboard]);\n\n  const handleDoubleClick = React.useCallback(() => {\n    controller.run('onAction', copyFormat('multiple', defaultSz));\n  }, [controller, defaultSz]);\n\n  return (\n    <Button\n      {...rest}\n      shortcutText={shortcutText}\n      testid=\"bi-toolbar-painter\"\n      active={isActive}\n      disabled={isDisabled}\n      onClick={handleClick}\n      onDoubleClick={handleDoubleClick}\n      role={PluginRoles.formatPainter}\n    />\n  );\n}\n"],"file":"formatPainterButton.js"}