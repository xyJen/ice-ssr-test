"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FormatPainterMenu;
exports.CLEAR_STYLE_HOT_KEY = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _weDesign = require("@ali/we-design");

var _actions = require("../actions");

const _createElement = /*#__PURE__*/React.createElement;
;
;
const MOD = _everCangjie.environment.IS_MAC ? 'âŒ˜' : 'Ctrl';
const CLEAR_STYLE_HOT_KEY = `${MOD}+\\`;
exports.CLEAR_STYLE_HOT_KEY = CLEAR_STYLE_HOT_KEY;

function FormatPainterMenu(props) {
  const {
    menuItem,
    controller,
    locale
  } = props;
  const {
    title,
    ...rest
  } = menuItem;
  const {
    value
  } = controller;
  const {
    formatClipboard
  } = value.data;
  const isActive = formatClipboard && formatClipboard.trigger === 'toolbar'; // const shortcutText = locale.doubleTitle || '';

  const {
    isCollapsedAtEdge
  } = value.selection;
  const isDisabled = isCollapsedAtEdge || value.data.edgeSelection || controller.query('isSelectionInHr') || controller.query('isSelectionInImage') || controller.query('isSelectionInMention') || controller.query('isSelectionInListSymbol') || controller.query('isSelectionInLinkCard');
  const handleClick = React.useCallback(() => {
    if (!formatClipboard) {
      controller.run('onAction', (0, _actions.copyFormat)('single'));
      return;
    }

    controller.run('onAction', (0, _actions.clearFormatClipboard)());
  }, [controller, formatClipboard]);
  return /*#__PURE__*/_createElement(_weDesign.MenuItem, (0, _extends2.default)({}, rest, {
    disabled: isDisabled,
    onClick: handleClick,
    testid: 'bi-toolbar-clearstyle'
  }), title || locale?.buttonTitle);
}
//# sourceMappingURL=formatPainterMenu.js.map