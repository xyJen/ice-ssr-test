"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onMouseUp;

var _pasteFormatAtRange = _interopRequireDefault(require("../commands/pasteFormatAtRange"));

var _isParagraphBlock = _interopRequireDefault(require("../utils/isParagraphBlock"));

function onMouseUp(_, controller, next) {
  const {
    value
  } = controller;
  const tableSelection = controller.query('hasTableSelection');

  if (tableSelection) {
    return next();
  }

  const formatClipboard = value.data.formatClipboard;

  if (!formatClipboard || formatClipboard.trigger !== 'toolbar') {
    return next();
  } // NOTE: Do not need `event.preventDefault()`.


  let {
    selection: range
  } = value;

  if (range.isCollapsed) {
    const {
      document
    } = value;
    const paragraph = document.getClosest(range.getStart(document).key, _isParagraphBlock.default);

    if (!paragraph) {
      return next();
    } // TODO: 这里直接将整段都格式化，office上是仅格式化分段


    range = range.moveToRangeOfNode(paragraph, controller);
  }

  return (0, _pasteFormatAtRange.default)(controller, range);
}
//# sourceMappingURL=onMouseUp.js.map