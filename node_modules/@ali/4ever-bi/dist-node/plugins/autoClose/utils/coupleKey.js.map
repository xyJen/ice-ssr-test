{"version":3,"sources":["../../../../../src/plugins/autoClose/utils/coupleKey.ts"],"names":["englishQuotes","chineseQuotes","chineseLeftBrackets","chineseRightBrackets","englishLeftBrackets","englishRightBrackets","rightBrackets","coupleKey","leftCoupleKey","coupleMap","couplePair","chineseQuotePair","isCoupleKey","key","isLeftCoupleKey","isRightBracket","getRightCoupleKey","isCouple","left","right","isEnglishQuoteKey","isChineseQuoteKey","getChineseQuoteCP"],"mappings":"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","sourcesContent":["import { createDict } from '@ali/4ever-utils';\n\nconst englishQuotes = createDict({\n  '\\'': true,\n  '\"': true,\n  '`': true,\n});\nconst chineseQuotes = createDict({\n  '“': true,\n  '”': true,\n  '‘': true,\n  '’': true,\n});\nconst chineseLeftBrackets = createDict({\n  '【': true,\n  '（': true,\n});\nconst chineseRightBrackets = createDict({\n  '】': true,\n  '）': true,\n});\nconst englishLeftBrackets = createDict({\n  '{': true,\n  '[': true,\n  '(': true,\n});\nconst englishRightBrackets = createDict({\n  '}': true,\n  ']': true,\n  ')': true,\n});\nconst rightBrackets = createDict({\n  '}': true,\n  ']': true,\n  ')': true,\n  '】': true,\n  '）': true,\n});\nconst coupleKey = createDict({\n  ...englishLeftBrackets,\n  ...englishRightBrackets,\n  ...englishQuotes,\n  ...chineseLeftBrackets,\n  ...chineseRightBrackets,\n  ...chineseQuotes,\n});\nconst leftCoupleKey = createDict({\n  ...englishLeftBrackets,\n  ...chineseLeftBrackets,\n  ...englishQuotes,\n});\nconst coupleMap = createDict({\n  '\\'': '\\'',\n  '\"': '\"',\n  '`': '`',\n  '{': '}',\n  '[': ']',\n  '(': ')',\n  '【': '】',\n  '（': '）',\n});\nconst couplePair = createDict({\n  '\\'\\'': true,\n  '\"\"': true,\n  '``': true,\n  '{}': true,\n  '[]': true,\n  '()': true,\n  '【】': true,\n  '（）': true,\n  '“”': true,\n  '‘’': true,\n});\nconst chineseQuotePair = createDict({\n  '‘': ['‘', '’'],\n  '’': ['‘', '’'],\n  '“': ['“', '”'],\n  '”': ['“', '”'],\n});\nexport function isCoupleKey(key): boolean {\n  return coupleKey[key];\n}\nexport function isLeftCoupleKey(key): boolean {\n  return leftCoupleKey[key];\n}\nexport function isRightBracket(key): boolean {\n  return rightBrackets[key];\n}\nexport function getRightCoupleKey(key): string {\n  return coupleMap[key];\n}\nexport function isCouple(left, right): boolean {\n  return couplePair[left + right];\n}\nexport function isEnglishQuoteKey(key): boolean {\n  return englishQuotes[key];\n}\nexport function isChineseQuoteKey(key): boolean {\n  return chineseQuotes[key];\n}\nexport function getChineseQuoteCP(key): [string, string] {\n  return chineseQuotePair[key];\n}\n"],"file":"coupleKey.js"}