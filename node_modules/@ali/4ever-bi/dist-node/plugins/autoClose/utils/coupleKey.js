"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCoupleKey = isCoupleKey;
exports.isLeftCoupleKey = isLeftCoupleKey;
exports.isRightBracket = isRightBracket;
exports.getRightCoupleKey = getRightCoupleKey;
exports.isCouple = isCouple;
exports.isEnglishQuoteKey = isEnglishQuoteKey;
exports.isChineseQuoteKey = isChineseQuoteKey;
exports.getChineseQuoteCP = getChineseQuoteCP;

var _everUtils = require("@ali/4ever-utils");

const englishQuotes = (0, _everUtils.createDict)({
  '\'': true,
  '"': true,
  '`': true
});
const chineseQuotes = (0, _everUtils.createDict)({
  '“': true,
  '”': true,
  '‘': true,
  '’': true
});
const chineseLeftBrackets = (0, _everUtils.createDict)({
  '【': true,
  '（': true
});
const chineseRightBrackets = (0, _everUtils.createDict)({
  '】': true,
  '）': true
});
const englishLeftBrackets = (0, _everUtils.createDict)({
  '{': true,
  '[': true,
  '(': true
});
const englishRightBrackets = (0, _everUtils.createDict)({
  '}': true,
  ']': true,
  ')': true
});
const rightBrackets = (0, _everUtils.createDict)({
  '}': true,
  ']': true,
  ')': true,
  '】': true,
  '）': true
});
const coupleKey = (0, _everUtils.createDict)({ ...englishLeftBrackets,
  ...englishRightBrackets,
  ...englishQuotes,
  ...chineseLeftBrackets,
  ...chineseRightBrackets,
  ...chineseQuotes
});
const leftCoupleKey = (0, _everUtils.createDict)({ ...englishLeftBrackets,
  ...chineseLeftBrackets,
  ...englishQuotes
});
const coupleMap = (0, _everUtils.createDict)({
  '\'': '\'',
  '"': '"',
  '`': '`',
  '{': '}',
  '[': ']',
  '(': ')',
  '【': '】',
  '（': '）'
});
const couplePair = (0, _everUtils.createDict)({
  '\'\'': true,
  '""': true,
  '``': true,
  '{}': true,
  '[]': true,
  '()': true,
  '【】': true,
  '（）': true,
  '“”': true,
  '‘’': true
});
const chineseQuotePair = (0, _everUtils.createDict)({
  '‘': ['‘', '’'],
  '’': ['‘', '’'],
  '“': ['“', '”'],
  '”': ['“', '”']
});

function isCoupleKey(key) {
  return coupleKey[key];
}

function isLeftCoupleKey(key) {
  return leftCoupleKey[key];
}

function isRightBracket(key) {
  return rightBrackets[key];
}

function getRightCoupleKey(key) {
  return coupleMap[key];
}

function isCouple(left, right) {
  return couplePair[left + right];
}

function isEnglishQuoteKey(key) {
  return englishQuotes[key];
}

function isChineseQuoteKey(key) {
  return chineseQuotes[key];
}

function getChineseQuoteCP(key) {
  return chineseQuotePair[key];
}
//# sourceMappingURL=coupleKey.js.map