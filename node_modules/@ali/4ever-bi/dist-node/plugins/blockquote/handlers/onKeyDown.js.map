{"version":3,"sources":["../../../../../src/plugins/blockquote/handlers/onKeyDown.ts"],"names":["isBackspaceHotKey","isEnterHotKey","event","editor","next","value","startBlock","selection","document","currentParagraph","isAtQuoteBlockStart","data","blockquote","isCollapsed","anchor","isAtStartOfNode","previousBlock","getPreviousBlock","getEnd","key","preventDefault","isEmptyBlockQuote","text","nodes","length","getFirstNode","isText"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEA,MAAMA,iBAAiB,GAAG,2BAAY,WAAZ,CAA1B;AACA,MAAMC,aAAa,GAAG,2BAAY,OAAZ,CAAtB;;eAEe,CAACC,KAAD,EAAQC,MAAR,EAA4BC,IAA5B,KAAqC;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAYF,MAAlB;AACA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAAsCH,KAA5C,CAFkD,CAIlD;;AACA,QAAMI,gBAAgB,GAAG,oCAAoBJ,KAApB,CAAzB;AACA,QAAMK,mBAAmB,GACvBD,gBAAgB,IAChBA,gBAAgB,CAACE,IAAjB,CAAsBC,UADtB,IAEAL,SAAS,CAACM,WAFV,IAGAN,SAAS,CAACO,MAAV,CAAiBC,eAAjB,CAAiCN,gBAAjC,CAJF;AAKA,QAAMO,aAAa,GAAGR,QAAQ,CAACS,gBAAT,CACpBV,SAAS,CAACW,MAAV,CAAiBV,QAAjB,EAA2BW,GADP,CAAtB;;AAGA,MAAIT,mBAAmB,IAAIV,iBAAiB,CAACE,KAAD,CAA5C,EAAqD;AACnDA,IAAAA,KAAK,CAACkB,cAAN;;AACA,QAAIJ,aAAa,IAAIA,aAAa,CAACL,IAAd,CAAmBC,UAAxC,EAAoD;AAClD;AACA,aAAO,0BAAYT,MAAZ,EAAoBC,IAApB,CAAP;AACD;;AACD,WAAO,0BAAYD,MAAZ,CAAP;AACD,GArBiD,CAuBlD;;;AACA,QAAMkB,iBAAiB,GACrBZ,gBAAgB,EAAEE,IAAlB,CAAuBC,UAAvB,IACA,CAACN,UAAU,CAACgB,IADZ,IAEAhB,UAAU,CAACiB,KAAX,CAAiBC,MAAjB,KAA4B,CAF5B,IAGAlB,UAAU,CAACmB,YAAX,GAA0BC,MAA1B,EAJF;;AAMA,MAAIL,iBAAiB,IAAIpB,aAAa,CAACC,KAAD,CAAtC,EAA+C;AAC7CA,IAAAA,KAAK,CAACkB,cAAN;AACA,WAAO,0BAAYjB,MAAZ,CAAP;AACD;;AAED,SAAOC,IAAI,EAAX;AACD,C","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { isKeyHotkey } from 'is-hotkey';\nimport toggleQuote from '../commands/toggleQuote';\nimport { getClosestParagraph } from '@ali/4ever-utils';\n\nconst isBackspaceHotKey = isKeyHotkey('backspace');\nconst isEnterHotKey = isKeyHotkey('enter');\n\nexport default (event, editor: Controller, next) => {\n  const { value } = editor;\n  const { startBlock, selection, document } = value;\n\n  // 在 block 顶部 delete，移除引用状态\n  const currentParagraph = getClosestParagraph(value);\n  const isAtQuoteBlockStart =\n    currentParagraph &&\n    currentParagraph.data.blockquote &&\n    selection.isCollapsed &&\n    selection.anchor.isAtStartOfNode(currentParagraph);\n  const previousBlock = document.getPreviousBlock(\n    selection.getEnd(document).key,\n  );\n  if (isAtQuoteBlockStart && isBackspaceHotKey(event)) {\n    event.preventDefault();\n    if (previousBlock && previousBlock.data.blockquote) {\n      // 当前一个 block 也是引用时，执行 next 回退一行\n      return toggleQuote(editor, next);\n    }\n    return toggleQuote(editor);\n  }\n\n  // 空 blockquote ，回车删除引用\n  const isEmptyBlockQuote =\n    currentParagraph?.data.blockquote &&\n    !startBlock.text &&\n    startBlock.nodes.length === 1 &&\n    startBlock.getFirstNode().isText();\n\n  if (isEmptyBlockQuote && isEnterHotKey(event)) {\n    event.preventDefault();\n    return toggleQuote(editor);\n  }\n\n  return next();\n};\n"],"file":"onKeyDown.js"}