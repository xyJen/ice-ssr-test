"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = QuoteButton;

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _everBamboo = require("@ali/4ever-bamboo");

var _getBlockquoteState = _interopRequireDefault(require("../utils/getBlockquoteState"));

var _isBlockquoteDisabled = _interopRequireDefault(require("../utils/isBlockquoteDisabled"));

var _actions = require("../actions");

var _everComponent = require("@ali/4ever-component");

const _createElement = /*#__PURE__*/React.createElement;

var _ref = /*#__PURE__*/_createElement(_weDesign.ReferenceNormal, null);

var _ref2 = /*#__PURE__*/_createElement(_weDesign.ReferenceLightNormal, null);

function QuoteButton(props) {
  const {
    controller,
    locale,
    toolbarMode
  } = props;
  const isActive = (0, _getBlockquoteState.default)(controller);
  const handleClick = React.useCallback(() => {
    return controller.run('onAction', (0, _actions.toggleBlockquote)());
  }, [controller]);
  const icon = React.useMemo(() => {
    return toolbarMode === _everComponent.ToolbarMode.single ? _ref : _ref2;
  }, [toolbarMode]);
  return /*#__PURE__*/_createElement(_weDesign.Button, {
    title: locale.quickInsertTitle,
    testid: "bi-toolbar-blockquote",
    icon: icon,
    active: isActive,
    onClick: handleClick,
    bordered: false,
    disabled: (0, _isBlockquoteDisabled.default)(controller),
    role: _everBamboo.PluginRoles.blockquote
  });
}
//# sourceMappingURL=quoteButton.js.map