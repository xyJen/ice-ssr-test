"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inlineMenu = exports.menu = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _everBamboo = require("@ali/4ever-bamboo");

var _actions = require("../actions");

var _isBlockquoteDisabled = _interopRequireDefault(require("../utils/isBlockquoteDisabled"));

const _createElement = /*#__PURE__*/React.createElement;

// 目前 menu 不支持样式上的禁用，待统一调整
function withBlockquoteMenu(Component) {
  return function BlockquoteMenu(props) {
    const {
      menuItem,
      controller
    } = props;
    const {
      value
    } = controller;
    const {
      action,
      title,
      ...rest
    } = menuItem;
    const isDisabled = (0, _isBlockquoteDisabled.default)(controller) || controller.query('isSelectionInSubjectHeading');

    const handleClick = () => {
      // 转换逻辑不再是单向强制转换了，不再使用，避免以后逻辑更改暂时保留注释
      // if (action === 'format') {
      //   return controller.run('onAction', transformBlockquote());
      // }
      controller.run('onAction', (0, _actions.toggleBlockquote)());
    };

    return /*#__PURE__*/_createElement(Component, (0, _extends2.default)({
      disabled: isDisabled
    }, rest, {
      onClick: handleClick,
      role: _everBamboo.PluginRoles.paragraph
    }), title);
  };
}

const menu = withBlockquoteMenu(_weDesign.MenuItem);
exports.menu = menu;
const inlineMenu = withBlockquoteMenu(_weDesign.InlineMenuItem);
exports.inlineMenu = inlineMenu;
//# sourceMappingURL=quoteMenu.js.map