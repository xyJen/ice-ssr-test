{"version":3,"sources":["../../../../../src/plugins/blockquote/components/quoteButton.tsx"],"names":["QuoteButton","props","controller","locale","toolbarMode","isActive","handleClick","React","useCallback","run","icon","useMemo","ToolbarMode","single","quickInsertTitle","PluginRoles","blockquote"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;uBAN4B,a;;wBAuBoB,eAAC,yBAAD,O;;yBAAsB,eAAC,8BAAD,O;;AATvD,SAASA,WAAT,CAAqBC,KAArB,EAA+C;AAC5D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,MAAsCH,KAA5C;AACA,QAAMI,QAAQ,GAAG,iCAAmBH,UAAnB,CAAjB;AAEA,QAAMI,WAAW,GAAGC,KAAK,CAACC,WAAN,CAAkB,MAAM;AAC1C,WAAON,UAAU,CAACO,GAAX,CAAe,UAAf,EAA2B,gCAA3B,CAAP;AACD,GAFmB,EAEjB,CAACP,UAAD,CAFiB,CAApB;AAIA,QAAMQ,IAAI,GAAGH,KAAK,CAACI,OAAN,CAAc,MAAM;AAC/B,WAAOP,WAAW,KAAKQ,2BAAYC,MAA5B,eAAP;AACD,GAFY,EAEV,CAACT,WAAD,CAFU,CAAb;AAIA,sBACE,eAAC,gBAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACW,gBADhB;AAEE,IAAA,MAAM,EAAC,uBAFT;AAGE,IAAA,IAAI,EAAEJ,IAHR;AAIE,IAAA,MAAM,EAAEL,QAJV;AAKE,IAAA,OAAO,EAAEC,WALX;AAME,IAAA,QAAQ,EAAE,KANZ;AAOE,IAAA,QAAQ,EAAE,mCAAqBJ,UAArB,CAPZ;AAQE,IAAA,IAAI,EAAEa,wBAAYC;AARpB,IADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { Button, ReferenceLightNormal, ReferenceNormal } from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport getBlockquoteState from '../utils/getBlockquoteState';\nimport isBlockquoteDisabled from '../utils/isBlockquoteDisabled';\nimport { toggleBlockquote } from '../actions';\nimport { ToolbarMode } from '@ali/4ever-component';\n\ninterface IQuoteButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function QuoteButton(props: IQuoteButtonProps) {\n  const { controller, locale, toolbarMode } = props;\n  const isActive = getBlockquoteState(controller);\n\n  const handleClick = React.useCallback(() => {\n    return controller.run('onAction', toggleBlockquote());\n  }, [controller]);\n\n  const icon = React.useMemo(() => {\n    return toolbarMode === ToolbarMode.single ? <ReferenceNormal /> : <ReferenceLightNormal />;\n  }, [toolbarMode]);\n\n  return (\n    <Button\n      title={locale.quickInsertTitle}\n      testid=\"bi-toolbar-blockquote\"\n      icon={icon}\n      active={isActive}\n      onClick={handleClick}\n      bordered={false}\n      disabled={isBlockquoteDisabled(controller)}\n      role={PluginRoles.blockquote}\n    />\n  );\n}\n"],"file":"quoteButton.js"}