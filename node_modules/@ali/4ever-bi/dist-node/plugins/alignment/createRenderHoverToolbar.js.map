{"version":3,"sources":["../../../../src/plugins/alignment/createRenderHoverToolbar.tsx"],"names":["createRenderHoverToolbar","config","props","controller","getNode","buttonName","extraProps","onOverlayVisibleChange","locale"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;uBAD4B,a;;AAIb,SAASA,wBAAT,CACbC,MADa,EAEmB;AAChC,SAAO,CAACC,KAAD,EAAQC,UAAR,EAAoBC,OAApB,KAAgC;AACrC,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6BJ,KAAnC;AACA,UAAM;AAAEK,MAAAA;AAAF,QAA6BD,UAAnC;;AACA,YAAQD,UAAR;AACE,WAAK,SAAL;AACE,4BACE,eAAC,wBAAD;AAAY,UAAA,OAAO,EAAC;AAApB,wBACE,eAAC,gCAAD;AACE,UAAA,UAAU,EAAEF,UADd;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,sBAAsB,EAAEG,sBAH1B;AAIE,UAAA,MAAM,EAAEN,MAAM,CAACO,MAAP,IAAiB;AAJ3B,UADF,CADF;;AAUF;AAAS,eAAO,IAAP;AAZX;AAcD,GAjBD;AAkBD","sourcesContent":["import * as React from 'react';\nimport { TBItemSlot } from '@ali/we-design-next';\nimport { AlignmentSelect } from './components/hoverToolbar/alignmentSelect';\nimport type { BiPlugin } from '../../types';\n\nexport default function createRenderHoverToolbar(\n  config: any,\n): BiPlugin['renderHoverToolbar'] {\n  return (props, controller, getNode) => {\n    const { buttonName, extraProps } = props;\n    const { onOverlayVisibleChange } = extraProps;\n    switch (buttonName) {\n      case 'default':\n        return (\n          <TBItemSlot display=\"iconSelect\" >\n            <AlignmentSelect\n              controller={controller}\n              getNode={getNode}\n              onOverlayVisibleChange={onOverlayVisibleChange}\n              locale={config.locale || {}}\n            />\n          </TBItemSlot>\n        );\n      default: return null;\n    }\n  };\n}\n"],"file":"createRenderHoverToolbar.js"}