{"version":3,"sources":["../../../../../../src/plugins/alignment/components/next/AlignmentButton.tsx"],"names":["AlignmentButton","props","controller","locale","options","rest","alignment","query","isCollapsedAtEdge","value","selection","isDisabled","handleChange","React","useCallback","run","selectOptions","useMemo","left","title","dropdownLeft","icon","center","dropdownCenter","right","dropdownRight","justify","dropdownJustify","buttonTitle","PluginRoles","alignSelect"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;uBAH4B,a;AAI5B;;AAQe,SAASA,eAAT,CAAyBC,KAAzB,EAAsD;AACnE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,OAAtB;AAA+B,OAAGC;AAAlC,MAA2CJ,KAAjD;AACA,QAAMK,SAAS,GAAGJ,UAAU,CAACK,KAAX,CAAiB,cAAjB,KAAoC,MAAtD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBN,UAAU,CAACO,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GAAGH,iBAAiB,IAAIN,UAAU,CAACK,KAAX,CAAiB,yBAAjB,CAAxC;AACA,QAAMK,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBL,KAAD,IAAmB;AACxDP,IAAAA,UAAU,CAACa,GAAX,CAAe,UAAf,EAA2B,2BAAaN,KAAb,CAA3B;AACD,GAFoB,EAElB,CAACP,UAAD,CAFkB,CAArB;AAKA,QAAMc,aAAa,GAAGH,KAAK,CAACI,OAAN,CAA6E,OAAO;AACxGC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEf,OAAO,EAAEc,IAAT,EAAeC,KAAf,IAAwBhB,MAAM,CAACiB,YADlC;AAEJC,MAAAA,IAAI,EAAEjB,OAAO,EAAEc,IAAT,EAAeG;AAFjB,KADkG;AAKxGC,IAAAA,MAAM,EAAE;AACNH,MAAAA,KAAK,EAAEf,OAAO,EAAEkB,MAAT,EAAiBH,KAAjB,IAA0BhB,MAAM,CAACoB,cADlC;AAENF,MAAAA,IAAI,EAAEjB,OAAO,EAAEkB,MAAT,EAAiBD;AAFjB,KALgG;AASxGG,IAAAA,KAAK,EAAE;AACLL,MAAAA,KAAK,EAAEf,OAAO,EAAEoB,KAAT,EAAgBL,KAAhB,IAAyBhB,MAAM,CAACsB,aADlC;AAELJ,MAAAA,IAAI,EAAEjB,OAAO,EAAEoB,KAAT,EAAgBH;AAFjB,KATiG;AAaxGK,IAAAA,OAAO,EAAE;AACPP,MAAAA,KAAK,EAAEf,OAAO,EAAEsB,OAAT,EAAkBP,KAAlB,IAA2BhB,MAAM,CAACwB,eADlC;AAEPN,MAAAA,IAAI,EAAEjB,OAAO,EAAEsB,OAAT,EAAkBL;AAFjB;AAb+F,GAAP,CAA7E,EAkBlB,CAAClB,MAAD,EAASC,OAAT,CAlBkB,CAAtB;AAqBA,sBACE,eAAC,oCAAD;AACE,IAAA,QAAQ,EAAEQ,YADZ;AAEE,IAAA,KAAK,EAAEN,SAFT;AAGE,IAAA,MAAM,EAAC,kBAHT;AAIE,IAAA,QAAQ,EAAE,CAAC,CAACK,UAJd;AAKE,IAAA,OAAO,EAAER,MAAM,EAAEyB,WAAR,IAAuB,EALlC;AAME,IAAA,IAAI,EAAEC,wBAAYC,WANpB;AAOE,IAAA,OAAO,EAAEd;AAPX,KAQMX,IARN,EADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { HorizontalAlignSelect, IIconButtonProps, HorizontalAlign } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { setAlignment } from '../../actions';\n;\n\nexport interface AlignmentButtonProps extends IIconButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  options?: Partial<Record<HorizontalAlign, { title?: string, icon?: React.ReactElement }>>;\n}\n\nexport default function AlignmentButton(props: AlignmentButtonProps) {\n  const { controller, locale, options, ...rest } = props;\n  const alignment = controller.query('getAlignment') || 'left';\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInListSymbol');\n  const handleChange = React.useCallback((value: string) => {\n    controller.run('onAction', setAlignment(value));\n  }, [controller]);\n\n\n  const selectOptions = React.useMemo<React.ComponentProps<typeof HorizontalAlignSelect>['options']>(() => ({\n    left: {\n      title: options?.left?.title || locale.dropdownLeft,\n      icon: options?.left?.icon,\n    },\n    center: {\n      title: options?.center?.title || locale.dropdownCenter,\n      icon: options?.center?.icon,\n    },\n    right: {\n      title: options?.right?.title || locale.dropdownRight,\n      icon: options?.right?.icon,\n    },\n    justify: {\n      title: options?.justify?.title || locale.dropdownJustify,\n      icon: options?.justify?.icon,\n    },\n\n  }), [locale, options])\n\n\n  return (\n    <HorizontalAlignSelect\n      onChange={handleChange}\n      value={alignment}\n      testid=\"bi-toolbar-align\"\n      disabled={!!isDisabled}\n      tooltip={locale?.buttonTitle || ''}\n      role={PluginRoles.alignSelect}\n      options={selectOptions}\n      {...rest}\n    />\n  );\n}\n"],"file":"AlignmentButton.js"}