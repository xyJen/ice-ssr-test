"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = AlignmentButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everComponent = require("@ali/4ever-component");

var _everBamboo = require("@ali/4ever-bamboo");

var _actions = require("../../actions");

const _createElement = /*#__PURE__*/React.createElement;
;

function AlignmentButton(props) {
  const {
    controller,
    locale,
    options,
    ...rest
  } = props;
  const alignment = controller.query('getAlignment') || 'left';
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInListSymbol');
  const handleChange = React.useCallback(value => {
    controller.run('onAction', (0, _actions.setAlignment)(value));
  }, [controller]);
  const selectOptions = React.useMemo(() => ({
    left: {
      title: options?.left?.title || locale.dropdownLeft,
      icon: options?.left?.icon
    },
    center: {
      title: options?.center?.title || locale.dropdownCenter,
      icon: options?.center?.icon
    },
    right: {
      title: options?.right?.title || locale.dropdownRight,
      icon: options?.right?.icon
    },
    justify: {
      title: options?.justify?.title || locale.dropdownJustify,
      icon: options?.justify?.icon
    }
  }), [locale, options]);
  return /*#__PURE__*/_createElement(_everComponent.HorizontalAlignSelect, (0, _extends2.default)({
    onChange: handleChange,
    value: alignment,
    testid: "bi-toolbar-align",
    disabled: !!isDisabled,
    tooltip: locale?.buttonTitle || '',
    role: _everBamboo.PluginRoles.alignSelect,
    options: selectOptions
  }, rest));
}
//# sourceMappingURL=AlignmentButton.js.map