"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _weIcon = require("@ali/we-icon");

var actions = _interopRequireWildcard(require("../actions"));

var _everBamboo = require("@ali/4ever-bamboo");

var _everLogger = _interopRequireDefault(require("@ali/4ever-logger"));

const _createElement = /*#__PURE__*/_react.default.createElement;
;

var _ref = /*#__PURE__*/_createElement(_weIcon.ToolbarAlignLeftNormal, null);

var _ref2 = /*#__PURE__*/_createElement(_weIcon.ToolbarAlignCenterNormal, null);

var _ref3 = /*#__PURE__*/_createElement(_weIcon.ToolbarAlignRightNormal, null);

const AlignMenu = props => {
  const {
    controller,
    locale
  } = props;
  const activeAlign = controller.query('getAlignment');
  const {
    isCollapsedAtEdge
  } = controller.value.selection;

  const handleClick = _react.default.useCallback(type => {
    controller.run('onAction', actions.setAlignment(type));

    _everLogger.default.sum(`alignment-sidebar-${type}`);
  }, [controller]);

  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInHr') || controller.query('isSelectionInTaskList') || controller.query('isSelectionInListSymbol');

  const alignItems = _react.default.useMemo(() => [{
    icon: _ref,
    title: locale.buttonLeft,
    key: 'left'
  }, {
    icon: _ref2,
    title: locale.buttonCenter,
    key: 'center'
  }, {
    icon: _ref3,
    title: locale.buttonRight,
    key: 'right'
  }], [locale]);

  return !isDisabled ? /*#__PURE__*/_createElement(_everBamboo.Select, {
    items: alignItems,
    value: activeAlign,
    onChange: handleClick
  }) : null;
};

var _default = AlignMenu;
exports.default = _default;
//# sourceMappingURL=sidebarItems.js.map