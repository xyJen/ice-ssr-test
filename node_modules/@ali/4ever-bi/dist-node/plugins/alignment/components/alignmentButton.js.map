{"version":3,"sources":["../../../../../src/plugins/alignment/components/alignmentButton.tsx"],"names":["HorizontalAlignSelect","React","memo","OriginHorizontalAlignSelect","SUPPORT_ALIGNMENT","left","center","right","justify","AlignmentButton","props","controller","locale","size","toolbarMode","alignment","query","isCollapsedAtEdge","value","selection","isDisabled","handleChange","useCallback","run","scrollableContent","getContainer","defaultContainer","window","document","body","shortcut","buttonTitle","PluginRoles","alignSelect","ToolbarMode","inline","undefined"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;uBAN4B,a;AAK5B;AAGA,MAAMA,qBAAqB,gBAAGC,KAAK,CAACC,IAAN,CAAWC,gCAAX,CAA9B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,IADkB;AAExBC,EAAAA,MAAM,EAAE,IAFgB;AAGxBC,EAAAA,KAAK,EAAE,IAHiB;AAIxBC,EAAAA,OAAO,EAAE;AAJe,CAA1B;;AAce,SAASC,eAAT,CAAyBC,KAAzB,EAAsD;AACnE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAA4CJ,KAAlD;AACA,QAAMK,SAAS,GAAGJ,UAAU,CAACK,KAAX,CAAiB,cAAjB,CAAlB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBN,UAAU,CAACO,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GAAGH,iBAAiB,IAAIN,UAAU,CAACK,KAAX,CAAiB,yBAAjB,CAAxC;AACA,QAAMK,YAAY,GAAGpB,KAAK,CAACqB,WAAN,CAAmBJ,KAAD,IAAmB;AACxDP,IAAAA,UAAU,CAACY,GAAX,CAAe,UAAf,EAA2B,2BAAaL,KAAb,CAA3B;AACD,GAFoB,EAElB,CAACP,UAAD,CAFkB,CAArB;AAIA,QAAMa,iBAAiB,GAAG,uCAA1B;AAEA,QAAMC,YAAY,GAAGxB,KAAK,CAACqB,WAAN,CAAkB,MAAM;AAC3C,UAAMI,gBAAgB,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAzC;AACA,WAAOL,iBAAiB,IAAIE,gBAA5B;AACD,GAHoB,EAGlB,CAACF,iBAAD,EAAoBV,WAApB,CAHkB,CAArB;AAKA,sBACE,eAAC,qBAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,QAAQ,EAAEQ,YAFZ;AAGE,IAAA,KAAK,EAAEjB,iBAAiB,CAACW,SAAD,CAAjB,GAA+BA,SAA/B,GAA2C,MAHpD;AAIE,IAAA,MAAM,EAAC,kBAJT;AAKE,IAAA,QAAQ,EAAEK,UALZ;AAME,IAAA,MAAM,EAAEU,uBANV;AAOE,IAAA,OAAO,EAAElB,MAAM,CAACmB,WAPlB;AAQE,IAAA,IAAI,EAAEC,wBAAYC,WARpB;AASE,IAAA,YAAY,EAAEnB,WAAW,KAAKoB,2BAAYC,MAA5B,GAAqCV,YAArC,GAAoDW;AATpE,IADF;AAaD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { HorizontalAlignSelect as OriginHorizontalAlignSelect } from '@ali/we-toolbar';\nimport { PluginRoles, useScrollableContent } from '@ali/4ever-bamboo';\nimport { setAlignment } from '../actions';\nimport { shortcut } from '../utils/getTipsByType';\n;\nimport { ToolbarMode } from '@ali/4ever-component';\n\nconst HorizontalAlignSelect = React.memo(OriginHorizontalAlignSelect);\n\nconst SUPPORT_ALIGNMENT = {\n  left: true,\n  center: true,\n  right: true,\n  justify: true,\n};\n\nexport interface AlignmentButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  size: 'large' | 'medium' | 'small';\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function AlignmentButton(props: AlignmentButtonProps) {\n  const { controller, locale, size, toolbarMode } = props;\n  const alignment = controller.query('getAlignment');\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInListSymbol');\n  const handleChange = React.useCallback((value: string) => {\n    controller.run('onAction', setAlignment(value));\n  }, [controller]);\n\n  const scrollableContent = useScrollableContent();\n  \n  const getContainer = React.useCallback(() => {\n    const defaultContainer = window.document.body;\n    return scrollableContent || defaultContainer;\n  }, [scrollableContent, toolbarMode]);\n\n  return (\n    <HorizontalAlignSelect\n      size={size}\n      onChange={handleChange}\n      value={SUPPORT_ALIGNMENT[alignment] ? alignment : 'left'}\n      testid=\"bi-toolbar-align\"\n      disabled={isDisabled}\n      titles={shortcut}\n      tooltip={locale.buttonTitle}\n      role={PluginRoles.alignSelect}\n      getContainer={toolbarMode === ToolbarMode.inline ? getContainer : undefined}\n    />\n  );\n}\n"],"file":"alignmentButton.js"}