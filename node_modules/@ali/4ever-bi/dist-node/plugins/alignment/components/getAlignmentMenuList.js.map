{"version":3,"sources":["../../../../../src/plugins/alignment/components/getAlignmentMenuList.tsx"],"names":["getActionList","locale","actionList","key","text","dropdownLeft","shortcut","ALIGN_LEFT_HOT_KEY","dropdownCenter","ALIGN_CENTER_HOT_KEY","dropdownRight","ALIGN_RIGHT_HOT_KEY","dropdownJustify","ALIGN_JUSTIFY_HOT_KEY","getAlimentFromProps","controller","isDisabled","isCollapsedAtEdge","value","selection","query","renderSubMenu","props","menuItem","alignment","handleClick","alignType","split","run","aligns","map","align","title"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;uBAL4B,a;;AAmB5B,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,QAAMC,UAAyB,GAAG,CAChC;AACEC,IAAAA,GAAG,EAAE,MADP;AAEEC,IAAAA,IAAI,EAAEH,MAAM,CAACI,YAFf;AAGEC,IAAAA,QAAQ,EAAEC;AAHZ,GADgC,EAMhC;AACEJ,IAAAA,GAAG,EAAE,QADP;AAEEC,IAAAA,IAAI,EAAEH,MAAM,CAACO,cAFf;AAGEF,IAAAA,QAAQ,EAAEG;AAHZ,GANgC,EAWhC;AACEN,IAAAA,GAAG,EAAE,OADP;AAEEC,IAAAA,IAAI,EAAEH,MAAM,CAACS,aAFf;AAGEJ,IAAAA,QAAQ,EAAEK;AAHZ,GAXgC,EAgBhC;AACER,IAAAA,GAAG,EAAE,SADP;AAEEC,IAAAA,IAAI,EAAEH,MAAM,CAACW,eAFf;AAGEN,IAAAA,QAAQ,EAAEO;AAHZ,GAhBgC,CAAlC;AAuBA,SAAOX,UAAP;AACD;;AAED,MAAMY,mBAAmB,GAAIC,UAAD,IAAgB,2BAAaA,UAAb,KAA4B,MAAxE;;AAEA,MAAMC,UAAU,GAAID,UAAD,IAA4B;AAC7C,QAAM;AAAEE,IAAAA;AAAF,MAAwBF,UAAU,CAACG,KAAX,CAAiBC,SAA/C;;AACA,MAAIF,iBAAJ,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,SAAO,CAAC,CAACF,UAAU,CAACK,KAAX,CAAiB,iBAAjB,CAAT;AACD,CAND;;AAQA,MAAMC,aAAa,GAAIC,KAAD,IAA8B;AAClD,QAAM;AAAEP,IAAAA,UAAF;AAAcd,IAAAA,MAAd;AAAsBsB,IAAAA;AAAtB,MAAmCD,KAAzC;AACA,QAAME,SAAS,GAAGV,mBAAmB,CAACC,UAAD,CAArC;AACA,QAAMb,UAAU,GAAGF,aAAa,CAACC,MAAD,CAAhC;;AACA,QAAMwB,WAAW,GAAItB,GAAD,IAAS;AAC3B,UAAMuB,SAAS,GAAGvB,GAAG,CAACwB,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAlB;AACAZ,IAAAA,UAAU,CAACa,GAAX,CAAe,UAAf,EAA2B,2BAAaF,SAAb,CAA3B;AACD,GAHD;;AAIA,QAAMG,MAAM,GAAG3B,UAAU,CAAC4B,GAAX,CAAeC,KAAK,IAAI;AACrC,UAAM5B,GAAG,GAAI,aAAY4B,KAAK,CAAC5B,GAAI,EAAnC;AACA,wBACE,eAAC,kBAAD;AACE,MAAA,QAAQ,EAAEqB,SAAS,KAAKO,KAAK,CAAC5B,GADhC;AAEE,MAAA,OAAO,EAAEA,GAFX;AAGE,MAAA,GAAG,EAAEA,GAHP;AAIE,MAAA,OAAO,EAAEsB,WAJX;AAKE,MAAA,KAAK,EAAEM,KAAK,CAACzB,QALf;AAME,MAAA,IAAI,EAAG,QAAO,wBAAWyB,KAAK,CAAC5B,GAAjB,CAAsB;AANtC,OAOE4B,KAAK,CAAC3B,IAPR,CADF;AAWD,GAbc,CAAf;AAeA,sBACE,eAAC,iBAAD,6BACMmB,QADN;AAEE,IAAA,KAAK,EAAEA,QAAQ,CAACS,KAAT,IAAkB,EAF3B;AAGE,IAAA,QAAQ,EAAEhB,UAAU,CAACD,UAAD;AAHtB,MAKGc,MALH,CADF;AASD,CAhCD;;eAkCeR,a","sourcesContent":["import * as React from 'react';\nimport { SubMenu, MenuItem } from '@ali/we-design';\nimport { capitalize } from 'lodash-es';\nimport { SubMenuInnerProps } from '@ali/4ever-component';\nimport getAlignment from '../queries/getAlignment';\nimport { setAlignment } from '../actions';\nimport {\n  ALIGN_LEFT_HOT_KEY,\n  ALIGN_CENTER_HOT_KEY,\n  ALIGN_JUSTIFY_HOT_KEY,\n  ALIGN_RIGHT_HOT_KEY,\n} from '../utils/hotkeyTips';\nimport { Controller } from '@ali/4ever-cangjie';\n\ninterface IConfigItem {\n  key: string;\n  text: string;\n  shortcut: string;\n}\n\nfunction getActionList(locale) {\n  const actionList: IConfigItem[] = [\n    {\n      key: 'left',\n      text: locale.dropdownLeft,\n      shortcut: ALIGN_LEFT_HOT_KEY,\n    },\n    {\n      key: 'center',\n      text: locale.dropdownCenter,\n      shortcut: ALIGN_CENTER_HOT_KEY,\n    },\n    {\n      key: 'right',\n      text: locale.dropdownRight,\n      shortcut: ALIGN_RIGHT_HOT_KEY,\n    },\n    {\n      key: 'justify',\n      text: locale.dropdownJustify,\n      shortcut: ALIGN_JUSTIFY_HOT_KEY,\n    },\n  ];\n\n  return actionList;\n}\n\nconst getAlimentFromProps = (controller) => getAlignment(controller) || 'left';\n\nconst isDisabled = (controller: Controller) => {\n  const { isCollapsedAtEdge } = controller.value.selection;\n  if (isCollapsedAtEdge) {\n    return false;\n  }\n  return !!controller.query('isSelectionInHr');\n};\n\nconst renderSubMenu = (props: SubMenuInnerProps) => {\n  const { controller, locale, menuItem } = props;\n  const alignment = getAlimentFromProps(controller);\n  const actionList = getActionList(locale);\n  const handleClick = (key) => {\n    const alignType = key.split('_')[1];\n    controller.run('onAction', setAlignment(alignType));\n  };\n  const aligns = actionList.map(align => {\n    const key = `alignment_${align.key}`;\n    return (\n      <MenuItem\n        selected={alignment === align.key}\n        menuKey={key}\n        key={key}\n        onClick={handleClick}\n        extra={align.shortcut}\n        role={`align${capitalize(align.key)}`}\n      >{align.text}\n      </MenuItem>\n    );\n  });\n\n  return (\n    <SubMenu\n      {...menuItem}\n      title={menuItem.title || ''}\n      disabled={isDisabled(controller)}\n    >\n      {aligns}\n    </SubMenu>\n  );\n};\n\nexport default renderSubMenu;\n"],"file":"getAlignmentMenuList.js"}