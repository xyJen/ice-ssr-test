{"version":3,"sources":["../../../../../src/plugins/alignment/components/sidebarItems.tsx"],"names":["AlignMenu","props","controller","locale","activeAlign","query","isCollapsedAtEdge","value","selection","handleClick","React","useCallback","type","run","actions","setAlignment","logger","sum","isDisabled","alignItems","useMemo","icon","title","buttonLeft","key","buttonCenter","buttonRight"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;uBAL4B,a;AAG5B;;wBA0BY,eAAC,8BAAD,O;;yBAKA,eAAC,gCAAD,O;;yBAKA,eAAC,+BAAD,O;;AA3BZ,MAAMA,SAAS,GAAIC,KAAD,IAA4B;AAC5C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBF,KAA/B;AACA,QAAMG,WAAW,GAAGF,UAAU,CAACG,KAAX,CAAiB,cAAjB,CAApB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBJ,UAAU,CAACK,KAAX,CAAiBC,SAA/C;;AAEA,QAAMC,WAAW,GAAGC,eAAMC,WAAN,CAAmBC,IAAD,IAAU;AAC9CV,IAAAA,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2BC,OAAO,CAACC,YAAR,CAAqBH,IAArB,CAA3B;;AACAI,wBAAOC,GAAP,CAAY,qBAAoBL,IAAK,EAArC;AACD,GAHmB,EAGjB,CAACV,UAAD,CAHiB,CAApB;;AAKA,QAAMgB,UAAU,GAAGZ,iBAAiB,IAC7BJ,UAAU,CAACG,KAAX,CAAiB,iBAAjB,CADY,IAEZH,UAAU,CAACG,KAAX,CAAiB,uBAAjB,CAFY,IAGZH,UAAU,CAACG,KAAX,CAAiB,yBAAjB,CAHP;;AAKA,QAAMc,UAAkC,GAAGT,eAAMU,OAAN,CAAc,MAAM,CAC7D;AACEC,IAAAA,IAAI,MADN;AAEEC,IAAAA,KAAK,EAAEnB,MAAM,CAACoB,UAFhB;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAD6D,EAM7D;AACEH,IAAAA,IAAI,OADN;AAEEC,IAAAA,KAAK,EAAEnB,MAAM,CAACsB,YAFhB;AAGED,IAAAA,GAAG,EAAE;AAHP,GAN6D,EAW7D;AACEH,IAAAA,IAAI,OADN;AAEEC,IAAAA,KAAK,EAAEnB,MAAM,CAACuB,WAFhB;AAGEF,IAAAA,GAAG,EAAE;AAHP,GAX6D,CAApB,EAgBxC,CAACrB,MAAD,CAhBwC,CAA3C;;AAkBA,SAAO,CAACe,UAAD,gBACL,eAAC,kBAAD;AACE,IAAA,KAAK,EAAEC,UADT;AAEE,IAAA,KAAK,EAAEf,WAFT;AAGE,IAAA,QAAQ,EAAEK;AAHZ,IADK,GAMH,IANJ;AAOD,CAxCD;;eA0CeT,S","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { ToolbarAlignCenterNormal, ToolbarAlignLeftNormal, ToolbarAlignRightNormal } from '@ali/we-icon';\nimport * as actions from '../actions';\n;\nimport { Select, StyleSelectItemProps } from '@ali/4ever-bamboo';\nimport logger from '@ali/4ever-logger';\n\nexport interface IAlignMenuProps {\n  controller: Controller;\n  locale: any;\n}\n\nconst AlignMenu = (props: IAlignMenuProps) => {\n  const { controller, locale } = props;\n  const activeAlign = controller.query('getAlignment');\n  const { isCollapsedAtEdge } = controller.value.selection;\n\n  const handleClick = React.useCallback((type) => {\n    controller.run('onAction', actions.setAlignment(type));\n    logger.sum(`alignment-sidebar-${type}`);\n  }, [controller]);\n\n  const isDisabled = isCollapsedAtEdge\n      || controller.query('isSelectionInHr')\n      || controller.query('isSelectionInTaskList')\n      || controller.query('isSelectionInListSymbol');\n\n  const alignItems: StyleSelectItemProps[] = React.useMemo(() => [\n    {\n      icon: <ToolbarAlignLeftNormal />,\n      title: locale.buttonLeft,\n      key: 'left',\n    },\n    {\n      icon: <ToolbarAlignCenterNormal />,\n      title: locale.buttonCenter,\n      key: 'center',\n    },\n    {\n      icon: <ToolbarAlignRightNormal />,\n      title: locale.buttonRight,\n      key: 'right',\n    },\n  ], [locale]);\n\n  return !isDisabled ? (\n    <Select\n      items={alignItems}\n      value={activeAlign}\n      onChange={handleClick}\n    />\n  ) : null;\n};\n\nexport default AlignMenu;\n"],"file":"sidebarItems.js"}