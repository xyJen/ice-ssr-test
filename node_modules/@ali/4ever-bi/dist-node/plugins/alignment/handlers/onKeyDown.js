"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onKeyDown;

var _everCangjie = require("@ali/4ever-cangjie");

var _isHotkey = _interopRequireDefault(require("is-hotkey"));

var _setAlignment = _interopRequireDefault(require("../commands/setAlignment"));

var _everUtils = require("@ali/4ever-utils");

const isAlignLeftHotKey = (0, _isHotkey.default)('mod+shift+l');
const isAlignCenterHotkey = (0, _isHotkey.default)('mod+shift+e');
const isAlignRightHotkey = (0, _isHotkey.default)('mod+shift+r');
const isAlignJustifyHotkey = (0, _isHotkey.default)('mod+shift+j');

function onKeyDown(event, controller, next) {
  const {
    value
  } = controller;
  /* 在行首backspace/delete撤销对齐 */

  if (_everCangjie.hotkeys.isDeleteBackward(event)) {
    const currentParagraph = (0, _everUtils.getClosestParagraph)(value);

    if (!currentParagraph || (0, _everUtils.getData)(currentParagraph.data, 'jc', 'left') === 'left') {
      return next();
    }

    const {
      selection,
      startBlock
    } = value;
    const isDeleteAtFirstChar = selection.isCollapsed && selection.anchor.isAtStartOfNode(currentParagraph);
    const isNewLineFirstChar = selection.isCollapsed && selection.anchor.isAtStartOfNode(startBlock);
    if (!isDeleteAtFirstChar && !isNewLineFirstChar) return next();

    if (isDeleteAtFirstChar) {
      return (0, _setAlignment.default)(controller, 'left');
    }
  }

  if (isAlignLeftHotKey(event)) {
    event.preventDefault();
    return (0, _setAlignment.default)(controller, 'left');
  }

  if (isAlignCenterHotkey(event)) {
    event.preventDefault();
    return (0, _setAlignment.default)(controller, 'center');
  }

  if (isAlignRightHotkey(event)) {
    event.preventDefault();
    return (0, _setAlignment.default)(controller, 'right');
  }

  if (isAlignJustifyHotkey(event)) {
    event.preventDefault();
    return (0, _setAlignment.default)(controller, 'justify');
  }

  return next();
}
//# sourceMappingURL=onKeyDown.js.map