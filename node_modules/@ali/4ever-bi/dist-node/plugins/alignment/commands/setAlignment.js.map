{"version":3,"sources":["../../../../../src/plugins/alignment/commands/setAlignment.ts"],"names":["setAlignment","controller","align","key","value","blocks","curBlock","document","getClosestBlock","forEach","block","currentAlignment","prevAlignment","data","jc","newAlignment","DEFAULT_ALIGNMENT","command","Commands","setNodeByKey"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;AACe,SAASA,YAAT,CAAsBC,UAAtB,EAA8CC,KAA9C,EAA6DC,GAA7D,EAA2E;AACxF,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAlB;AAEA,MAAII,MAAJ;;AACA,MAAIF,GAAJ,EAAS;AACP,UAAMG,QAAQ,GAAGF,KAAK,CAACG,QAAN,CAAeC,eAAf,CAA+BL,GAA/B,CAAjB;AACAE,IAAAA,MAAM,GAAGC,QAAQ,GAAG,CAACA,QAAD,CAAH,GAAgB,EAAjC;AACD,GAHD,MAGO;AACLD,IAAAA,MAAM,GAAG,oCAAoBJ,UAApB,CAAT;AACD;;AAGDI,EAAAA,MAAM,CAACI,OAAP,CAAgBC,KAAD,IAAW;AACxB,UAAMC,gBAAgB,GAAG,oCAAoBP,KAApB,EAA2BM,KAA3B,CAAzB;;AACA,QAAIC,gBAAJ,EAAsB;AACpB,YAAMC,aAAa,GAAGD,gBAAgB,CAACE,IAAjB,CAAsBC,EAAtB,GAA2B;AAAEA,QAAAA,EAAE,EAAEH,gBAAgB,CAACE,IAAjB,CAAsBC;AAA5B,OAA3B,GAA8D,EAApF;AACA,YAAMC,YAAY,GAAG;AAAED,QAAAA,EAAE,EAAEZ;AAAN,OAArB;;AACA,UAAI,mCAAmBU,aAAnB,EAAkCG,YAAlC,EAAgDC,wBAAhD,CAAJ,EAAwE;AACtE;AACD;;AACDf,MAAAA,UAAU,CAACgB,OAAX,CAAmBC,sBAASC,YAA5B,EAA0CR,gBAAgB,CAACR,GAA3D,EAAgE;AAC9DU,QAAAA,IAAI,EAAE,EACJ,GAAGF,gBAAgB,CAACE,IADhB;AAEJC,UAAAA,EAAE,EAAEZ;AAFA;AADwD,OAAhE;AAMD;AACF,GAfD;AAiBA,SAAOD,UAAP;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { getClosestParagraph } from '@ali/4ever-utils';\nimport { isEqualWithDefault, getBlocksFromEditor } from '@ali/4ever-utils';\nimport { DEFAULT_ALIGNMENT } from '../utils';\n\n/* eslint-disable max-len */\nexport default function setAlignment(controller: Controller, align: string, key?: string) {\n  const { value } = controller;\n\n  let blocks;\n  if (key) {\n    const curBlock = value.document.getClosestBlock(key);\n    blocks = curBlock ? [curBlock] : [];\n  } else {\n    blocks = getBlocksFromEditor(controller);\n  }\n\n\n  blocks.forEach((block) => {\n    const currentAlignment = getClosestParagraph(value, block);\n    if (currentAlignment) {\n      const prevAlignment = currentAlignment.data.jc ? { jc: currentAlignment.data.jc } : {};\n      const newAlignment = { jc: align };\n      if (isEqualWithDefault(prevAlignment, newAlignment, DEFAULT_ALIGNMENT)) {\n        return;\n      }\n      controller.command(Commands.setNodeByKey, currentAlignment.key, {\n        data: {\n          ...currentAlignment.data,\n          jc: align,\n        },\n      });\n    }\n  });\n\n  return controller;\n}\n"],"file":"setAlignment.js"}