{"version":3,"sources":["../../../../src/plugins/laserPointer/onAction.ts"],"names":["onAction","action","controller","next","type","payload","LASER_POINTER_HIGHLIGHT","path","LASER_POINTER_REMOVE_HIGHLIGHT"],"mappings":";;;;;;;AACA;;AAKA;;AAEA,MAAMA,QAA4B,GAAG,CAACC,MAAD,EAASC,UAAT,EAAqBC,IAArB,KAA8B;AACjE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,MAA1B;;AAEA,MAAIG,IAAI,KAAKE,gCAAb,EAAsC;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAWF,OAAjB;AACA,gCAAgBH,UAAhB,EAA4BK,IAA5B;AACD,GAHD,MAGO,IAAIH,IAAI,KAAKI,uCAAb,EAA6C;AAClD,gCAAgBN,UAAhB;AACD;;AACD,SAAOC,IAAI,EAAX;AACD,CAVD;;eAYeH,Q","sourcesContent":["import { Plugin } from '@ali/4ever-cangjie';\nimport {\n  LaserPointerHightPayload,\n  LASER_POINTER_HIGHLIGHT,\n  LASER_POINTER_REMOVE_HIGHLIGHT,\n} from './actions';\nimport { highlightByPath, removeHighlight } from './utils';\n\nconst onAction: Plugin['onAction'] = (action, controller, next) => {\n  const { type, payload } = action;\n\n  if (type === LASER_POINTER_HIGHLIGHT) {\n    const { path } = payload as LaserPointerHightPayload;\n    highlightByPath(controller, path);\n  } else if (type === LASER_POINTER_REMOVE_HIGHLIGHT) {\n    removeHighlight(controller);\n  }\n  return next();\n};\n\nexport default onAction;\n"],"file":"onAction.js"}