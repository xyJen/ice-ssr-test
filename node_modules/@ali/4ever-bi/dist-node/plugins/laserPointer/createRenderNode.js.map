{"version":3,"sources":["../../../../src/plugins/laserPointer/createRenderNode.tsx"],"names":["createRenderNode","config","renderNode","props","controller","next","node","attributes","isLaserPointerEnabled","getRole","renderHighlight","getHighlightType","type","highlighted","key","value","injections","ref"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AACA;;uBAH4B,a;;AAKb,SAASA,gBAAT,CAA0BC,MAA1B,EAA6D;AAC1E,QAAMC,UAAgC,GAAG,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,KAA6B;AACpE,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAuBJ,KAA7B;;AAEA,QAAI,CAACF,MAAM,EAAEO,qBAAT,IAAkC,CAACP,MAAM,CAACO,qBAAP,EAAvC,EAAuE;AACrE,aAAOH,IAAI,EAAX;AACD;;AAED,UAAM;AAAEI,MAAAA,OAAF;AAAWC,MAAAA,eAAX;AAA4BC,MAAAA;AAA5B,QAAiDV,MAAvD;AAEA,UAAMW,IAAI,GAAGD,gBAAgB,CAACL,IAAD,EAAOF,UAAP,CAA7B;;AACA,QAAIQ,IAAJ,EAAU;AACR,YAAMC,WAAW,GAAG,0BAAcP,IAAI,CAACQ,GAAnB,EAAwBV,UAAU,CAACW,KAAX,CAAiBC,UAAzC,CAApB;AACA,0BACE,eAAC,kBAAD;AACE,QAAA,IAAI,EAAEJ,IADR;AAEE,QAAA,UAAU,EAAER,UAFd;AAGE,QAAA,IAAI,EAAEE,IAHR;AAIE,QAAA,MAAM,EAAEC,UAAU,CAACU,GAJrB;AAKE,QAAA,OAAO,EAAER,OALX;AAME,QAAA,WAAW,EAAEI,WANf;AAOE,QAAA,eAAe,EAAEH;AAPnB,SASGL,IAAI,EATP,CADF;AAaD;;AACD,WAAOA,IAAI,EAAX;AACD,GA3BD;;AA6BA,SAAOH,UAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Plugin } from '@ali/4ever-cangjie';\nimport { LaserPointerPluginConfig } from './types';\nimport Highlight from './components/highlight';\nimport { isHighlighted } from './utils';\n\nexport default function createRenderNode(config?: LaserPointerPluginConfig) {\n  const renderNode: Plugin['renderNode'] = (props, controller, next) => {\n    const { node, attributes } = props;\n\n    if (!config?.isLaserPointerEnabled || !config.isLaserPointerEnabled()) {\n      return next();\n    }\n\n    const { getRole, renderHighlight, getHighlightType } = config;\n\n    const type = getHighlightType(node, controller);\n    if (type) {\n      const highlighted = isHighlighted(node.key, controller.value.injections);\n      return (\n        <Highlight\n          type={type}\n          controller={controller}\n          node={node}\n          domRef={attributes.ref}\n          getRole={getRole}\n          highlighted={highlighted}\n          renderHighlight={renderHighlight}\n        >\n          {next()}\n        </Highlight>\n      );\n    }\n    return next();\n  };\n\n  return renderNode;\n}\n"],"file":"createRenderNode.js"}