{"version":3,"sources":["../../../../../../src/plugins/underline/components/next/underlineButton.tsx"],"names":["MOD","environment","IS_MAC","shortcutText","isDisabled","controller","isCollapsedAtEdge","value","selection","disabled","query","Boolean","UnderlineButton","props","locale","rest","isActive","handleClick","React","useCallback","run","tooltip","useMemo","description","DELIMITER","character","repeat","size","text","space","title","buttonTitle","shortCut","PluginRoles","underline"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;uBAL4B,a;AAG5B;AAIA,MAAMA,GAAG,GAAGC,yBAAYC,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;AACA,MAAMC,YAAY,GAAI,GAAEH,GAAI,IAA5B;;AAOA,MAAMI,UAAU,GAAIC,UAAD,IAA4B;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,UAAU,CAACE,KAAX,CAAiBC,SAA/C;AACA,QAAMC,QAAQ,GACZH,iBAAiB,IACjBD,UAAU,CAACK,KAAX,CAAiB,oBAAjB,CADA,IAEAL,UAAU,CAACK,KAAX,CAAiB,iBAAjB,CAFA,IAGAL,UAAU,CAACK,KAAX,CAAiB,yBAAjB,CAHA,IAIAL,UAAU,CAACK,KAAX,CAAiB,uBAAjB,CALF;AAMA,SAAOC,OAAO,CAACF,QAAD,CAAd;AACD,CATD;;AAWe,SAASG,eAAT,CAAyBC,KAAzB,EAAsD;AACnE,QAAM;AAAER,IAAAA,UAAF;AAAcS,IAAAA,MAAd;AAAsBL,IAAAA,QAAtB;AAAgC,OAAGM;AAAnC,MAA4CF,KAAlD;AAEA,QAAMG,QAAQ,GAAGX,UAAU,CAACK,KAAX,CAAiB,aAAjB,CAAjB;AAEA,QAAMO,WAAW,GAAGC,KAAK,CAACC,WAAN,CAClB,MAAMd,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2B,+BAA3B,CADY,EAElB,CAACf,UAAD,CAFkB,CAApB;AAKA,QAAMgB,OAAO,GAAGH,KAAK,CAACI,OAAN,CAAc,MAAM;AAClC,UAAMC,WAAW,GAAG,eAAeC,qBAAUC,SAAV,CAAoBC,MAApB,CAA2BF,qBAAUG,IAArC,CAAf,IAA6Db,MAAM,EAAEc,IAAR,IAAgB,MAA7E,IAAuFJ,qBAAUC,SAAV,CAAoBC,MAApB,CAA2BF,qBAAUG,IAArC,CAAvF,GAAoI,GAApI,IAA2Ib,MAAM,EAAEe,KAAR,IAAiB,OAA5J,CAApB;AACA,WAAO;AACLC,MAAAA,KAAK,EAAEhB,MAAM,EAAEiB,WAAR,IAAuB,EADzB;AAELR,MAAAA,WAFK;AAGLS,MAAAA,QAAQ,EAAE7B;AAHL,KAAP;AAKD,GAPe,EAOb,EAPa,CAAhB;AASA,sBACE,eAAC,8BAAD;AACE,IAAA,MAAM,EAAC,sBADT;AAEE,IAAA,MAAM,EAAEa,QAFV;AAGE,IAAA,QAAQ,EAAEP,QAAQ,IAAIL,UAAU,CAACC,UAAD,CAHlC;AAIE,IAAA,OAAO,EAAEY,WAJX;AAKE,IAAA,KAAK,EAAEH,MAAM,EAAEiB,WALjB;AAME,IAAA,OAAO,EAAEV,OANX;AAOE,IAAA,IAAI,EAAEY,wBAAYC;AAPpB,KAQMnB,IARN,EADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport { PluginRoles, } from '@ali/4ever-bamboo';\nimport { IToolbarButtonConfig, UnderlineButton as Button } from '@ali/4ever-component';\n;\nimport { toggleUnderline } from '../../actions';\nimport { DELIMITER } from '../../constants';\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\nconst shortcutText = `${MOD}+U`;\n\nexport interface UnderlineButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nconst isDisabled = (controller: Controller) => {\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const disabled =\n    isCollapsedAtEdge ||\n    controller.query('isSelectionInImage') ||\n    controller.query('isSelectionInHr') ||\n    controller.query('isSelectionInListSymbol') ||\n    controller.query('isSelectionInLinkCard');\n  return Boolean(disabled);\n};\n\nexport default function UnderlineButton(props: UnderlineButtonProps) {\n  const { controller, locale, disabled, ...rest } = props;\n\n  const isActive = controller.query('isUnderline');\n\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', toggleUnderline()),\n    [controller],\n  );\n\n  const tooltip = React.useMemo(() => {\n    const description = 'Markdown: ' + DELIMITER.character.repeat(DELIMITER.size) + (locale?.text || 'Text') + DELIMITER.character.repeat(DELIMITER.size) + ' ' + (locale?.space || 'Space');\n    return {\n      title: locale?.buttonTitle || '',\n      description,\n      shortCut: shortcutText,\n    }\n  }, []);\n\n  return (\n    <Button\n      testid=\"bi-toolbar-underline\"\n      active={isActive}\n      disabled={disabled || isDisabled(controller)}\n      onClick={handleClick}\n      title={locale?.buttonTitle}\n      tooltip={tooltip}\n      role={PluginRoles.underline}\n      {...rest}\n    />\n  );\n}\n"],"file":"underlineButton.js"}