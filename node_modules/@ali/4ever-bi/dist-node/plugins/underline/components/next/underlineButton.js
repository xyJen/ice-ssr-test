"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UnderlineButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _everBamboo = require("@ali/4ever-bamboo");

var _everComponent = require("@ali/4ever-component");

var _actions = require("../../actions");

var _constants = require("../../constants");

const _createElement = /*#__PURE__*/React.createElement;
;
const MOD = _everCangjie.environment.IS_MAC ? 'âŒ˜' : 'Ctrl';
const shortcutText = `${MOD}+U`;

const isDisabled = controller => {
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const disabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInListSymbol') || controller.query('isSelectionInLinkCard');
  return Boolean(disabled);
};

function UnderlineButton(props) {
  const {
    controller,
    locale,
    disabled,
    ...rest
  } = props;
  const isActive = controller.query('isUnderline');
  const handleClick = React.useCallback(() => controller.run('onAction', (0, _actions.toggleUnderline)()), [controller]);
  const tooltip = React.useMemo(() => {
    const description = 'Markdown: ' + _constants.DELIMITER.character.repeat(_constants.DELIMITER.size) + (locale?.text || 'Text') + _constants.DELIMITER.character.repeat(_constants.DELIMITER.size) + ' ' + (locale?.space || 'Space');
    return {
      title: locale?.buttonTitle || '',
      description,
      shortCut: shortcutText
    };
  }, []);
  return /*#__PURE__*/_createElement(_everComponent.UnderlineButton, (0, _extends2.default)({
    testid: "bi-toolbar-underline",
    active: isActive,
    disabled: disabled || isDisabled(controller),
    onClick: handleClick,
    title: locale?.buttonTitle,
    tooltip: tooltip,
    role: _everBamboo.PluginRoles.underline
  }, rest));
}
//# sourceMappingURL=underlineButton.js.map