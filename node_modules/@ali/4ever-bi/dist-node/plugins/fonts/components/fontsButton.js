"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FontsButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everCangjie = require("@ali/4ever-cangjie");

var _weToolbar = require("@ali/we-toolbar");

var _everBamboo = require("@ali/4ever-bamboo");

var _everComponent = require("@ali/4ever-component");

var _actions = require("../actions");

var _getActiveFontsMark = require("../utils/getActiveFontsMark");

var _getFontsTip = _interopRequireDefault(require("../utils/getFontsTip"));

const _createElement = /*#__PURE__*/React.createElement;
const FontFamilySelect = /*#__PURE__*/React.memo(_weToolbar.FontFamilySelect);

function FontsButton(props) {
  const {
    controller,
    locale,
    toolbarMode,
    ...rest
  } = props;
  const docStyle = (0, _everCangjie.useStyle)();
  const fonts = controller.query('getFonts', docStyle?.docDefaults?.data?.rPr?.fonts);
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInLinkCard');
  const isDouble = toolbarMode === _everComponent.NewToolbarMode.double;
  const handleChange = React.useCallback(fontsValue => controller.run('onAction', (0, _actions.setFonts)(fontsValue)), [controller]);
  const realWidth = isDouble ? 133 : 66;
  let title = locale?.buttonTitle || '';

  if (fonts && fonts !== _getActiveFontsMark.defaultFonts) {
    // 提示显示当前字体
    title += ` ${(0, _getFontsTip.default)(fonts, locale)}`;
  }

  return /*#__PURE__*/_createElement(FontFamilySelect, (0, _extends2.default)({}, rest, {
    testid: "bi-toolbar-fonts",
    title: title,
    disabled: !!isDisabled,
    value: fonts || locale?.buttonTitle,
    bordered: isDouble,
    onChange: handleChange,
    width: realWidth,
    shortcutText: locale?.buttonTitle,
    role: _everBamboo.PluginRoles.fontFamilySelect
  }));
}
//# sourceMappingURL=fontsButton.js.map