{"version":3,"sources":["../../../../../src/plugins/fonts/queries/getFonts.ts"],"names":["getFonts","controller","inheritedFonts","symbolFont","query","activeFontsMark","eastAsia","ascii","data","defaultFonts"],"mappings":";;;;;;;;;AAGA;;AAEe,SAASA,QAAT,CAAkBC,UAAlB,EAA0CC,cAA1C,EAA0E;AACvF,QAAMC,UAAU,GAAGF,UAAU,CAACG,KAAX,CAAiB,qBAAjB,EAAwC,OAAxC,CAAnB;AACA,MAAID,UAAJ,EAAgB,OAAOA,UAAP;AAChB,QAAME,eAAe,GAAG,iCAAmBJ,UAAnB,EAA+BC,cAA/B,CAAxB;;AAEA,MAAIG,eAAJ,EAAqB;AACnB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAsBF,eAAe,CAACG,IAA5C;;AACA,QAAIF,QAAQ,IAAIA,QAAQ,KAAKG,gCAA7B,EAA2C;AACzC;AACA,aAAOH,QAAP;AACD,KAHD,MAGO,IAAIC,KAAK,IAAIA,KAAK,KAAKE,gCAAvB,EAAqC;AAC1C,aAAOF,KAAP;AACD;;AACD,WAAOE,gCAAP;AACD,GAdsF,CAgBvF;;;AACA,SAAO,EAAP;AACD","sourcesContent":["\nimport { Controller } from '@ali/4ever-cangjie';\nimport { FontsMarkData } from '@ali/4ever-mo';\nimport getActiveFontsMark, { defaultFonts } from '../utils/getActiveFontsMark';\n\nexport default function getFonts(controller: Controller, inheritedFonts?: FontsMarkData) {\n  const symbolFont = controller.query('getSymbolStyleByKey', 'fonts');\n  if (symbolFont) return symbolFont;\n  const activeFontsMark = getActiveFontsMark(controller, inheritedFonts);\n\n  if (activeFontsMark) {\n    const { eastAsia, ascii } = activeFontsMark.data;\n    if (eastAsia && eastAsia !== defaultFonts) {\n      // 优先显示中文字体\n      return eastAsia;\n    } else if (ascii && ascii !== defaultFonts) {\n      return ascii;\n    }\n    return defaultFonts;\n  }\n\n  // 没有公共字体则返回空，以便区别默认\n  return '';\n}\n"],"file":"getFonts.js"}