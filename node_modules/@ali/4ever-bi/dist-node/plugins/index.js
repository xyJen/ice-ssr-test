"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everBamboo = require("@ali/4ever-bamboo");

var _alignment = _interopRequireDefault(require("./alignment"));

var _blockquote = _interopRequireDefault(require("./blockquote"));

var _bold = _interopRequireDefault(require("./bold"));

var _clearStyle = _interopRequireDefault(require("./clearStyle"));

var _everPluginClipboard = require("@ali/4ever-plugin-clipboard");

var _everPluginCode = require("@ali/4ever-plugin-code");

var _everPluginBr = require("@ali/4ever-plugin-br");

var _everPluginInlinePlaceholder = require("@ali/4ever-plugin-inline-placeholder");

var _everPluginInlineCode = require("@ali/4ever-plugin-inline-code");

var _everPluginTextBackground = require("@ali/4ever-plugin-text-background");

var _everPluginTemplateButton = require("@ali/4ever-plugin-template-button");

var _everPluginTable = require("@ali/4ever-plugin-table");

var _color = _interopRequireDefault(require("./color"));

var _everPluginPcContexMenu = require("@ali/4ever-plugin-pc-contex-menu");

var _embed = _interopRequireDefault(require("./embed"));

var _fonts = _interopRequireDefault(require("./fonts"));

var _formatPainter = _interopRequireDefault(require("./formatPainter"));

var _heading = _interopRequireDefault(require("./heading"));

var _highlight = _interopRequireDefault(require("./highlight"));

var _hr = _interopRequireDefault(require("./hr"));

var _image = _interopRequireDefault(require("./image"));

var _indent = _interopRequireDefault(require("./indent"));

var _italic = _interopRequireDefault(require("./italic"));

var _lineheight = _interopRequireDefault(require("./lineheight"));

var _link = _interopRequireDefault(require("./link"));

var _linkCard = _interopRequireDefault(require("./link/linkCard"));

var _list = _interopRequireDefault(require("./list"));

var _marks = _interopRequireDefault(require("./marks"));

var _mention = _interopRequireDefault(require("./mention"));

var _onlineVideo = _interopRequireDefault(require("./onlineVideo"));

var _placeholder = _interopRequireDefault(require("./placeholder"));

var _refer = _interopRequireDefault(require("./refer"));

var _sticker = _interopRequireDefault(require("./sticker"));

var _strike = _interopRequireDefault(require("./strike"));

var _sz = _interopRequireDefault(require("./sz"));

var _translate = _interopRequireDefault(require("./translate"));

var _underline = _interopRequireDefault(require("./underline"));

var _vertAlign = _interopRequireDefault(require("./vertAlign"));

var _video = _interopRequireDefault(require("./video"));

var _draggable = _interopRequireDefault(require("./draggable"));

var _audio = _interopRequireDefault(require("./audio"));

var _newlineGuide = _interopRequireDefault(require("./newlineGuide"));

var _everPluginParagraph = require("@ali/4ever-plugin-paragraph");

var _letterSpacing = _interopRequireDefault(require("./letterSpacing"));

var _paragraphColor = _interopRequireDefault(require("./paragraphColor"));

var _clearParagraphShd = _interopRequireDefault(require("./clearParagraphShd"));

var _autoSpacing = _interopRequireDefault(require("./autoSpacing"));

var _hoverBlock = _interopRequireDefault(require("./hoverBlock"));

var _uuid = _interopRequireDefault(require("./uuid"));

var _pref = _interopRequireDefault(require("./pref"));

var _everPluginSnippets = require("@ali/4ever-plugin-snippets");

// import hoverToolbar from './hoverToolbar';

/**
 * 内置的插件集合
 */
const plugins = {
  snippets: _everPluginSnippets.biFactory,
  br: _everPluginBr.biFactory,
  clipboardLatency: _everPluginClipboard.clipboardLatency,
  // 纯数据采集，放在最前面
  clearParagraphShd: _clearParagraphShd.default,
  // 回车时清除段落底纹，放在前面
  autoSpacing: _autoSpacing.default,
  // 会修改用户输入，放在其它可能影响输入的插件之前
  alignment: _alignment.default,
  bold: _bold.default,
  blockquote: _blockquote.default,
  clearStyle: _clearStyle.default,
  audio: _audio.default,
  video: _video.default,
  embed: _embed.default,
  color: _color.default,
  fonts: _fonts.default,
  formatPainter: _formatPainter.default,
  draggable: _draggable.default,
  // 放在需要拖拽的行内元素之前
  newlineGuide: _newlineGuide.default,
  inlineCode: _everPluginInlineCode.biFactory,
  // mention 要在 heading 之前，否则 heading 处理 Enter 键会造成 mention 在标题插入重复
  mention: _mention.default,
  heading: _heading.default,
  highlight: _highlight.default,
  hr: _hr.default,
  italic: _italic.default,
  strike: _strike.default,
  image: _image.default,
  lineheight: _lineheight.default,
  link: _link.default,
  linkCard: _linkCard.default,
  list: _list.default,
  code: _everPluginCode.biFactory,
  marks: _marks.default,
  textBackground: _everPluginTextBackground.biFactory,
  templateButton: _everPluginTemplateButton.biFactory,
  refer: _refer.default,
  onlineVideo: _onlineVideo.default,
  placeholder: _placeholder.default,
  sticker: _sticker.default,
  sz: _sz.default,
  // table 要放在 indent 前，indent 的 Tab 键会把 table 打挂
  table: _everPluginTable.biFactory,
  indent: _indent.default,
  translate: _translate.default,
  underline: _underline.default,
  vertAlign: _vertAlign.default,
  contextMenu: _everPluginPcContexMenu.biFactory,
  inlinePlaceholder: _everPluginInlinePlaceholder.biFactory,
  paragraph: _everPluginParagraph.biFactory,
  letterSpacing: _letterSpacing.default,
  paragraphColor: _paragraphColor.default,
  // 放在其他插件之后兜底处理默认样式
  docStyle: _everBamboo.DocStylePlugin,
  uuid: _uuid.default,
  // hoverToolbar, @淼淼 todo 此处添加会直接导致原生的 inlineToolbar 失效，应该在应用层手动添加
  hoverBlock: _hoverBlock.default,
  pref: _pref.default
};
var _default = plugins;
exports.default = _default;
//# sourceMappingURL=index.js.map