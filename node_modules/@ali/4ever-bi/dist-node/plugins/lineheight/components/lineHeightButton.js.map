{"version":3,"sources":["../../../../../src/plugins/lineheight/components/lineHeightButton.tsx"],"names":["MemoLineHeightSelect","React","memo","LineHeightSelect","sideBarTriggerFactory","Component","sideBarTrigger","props","LineHeightButton","controller","locale","toolbarMode","rest","line","lineRule","query","lineValue","parseFloat","undefined","isCollapsedAtEdge","value","selection","isDisabled","handleChange","useCallback","run","handleClickCustomize","open","buttonTitle","PluginRoles","lineHeightSelect"],"mappings":";;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;uBAJ4B,a;AAK5B;;AAEA,MAAMA,oBAAoB,gBAAGC,eAAMC,IAAN,CAAWC,2BAAX,CAA7B;;AAaO,SAASC,qBAAT,CAAwCC,SAAxC,EAA2EC,cAA3E,EAAiH;AACtH,SAAQC,KAAD,IAAW;AAChB,wBAAO,eAAC,SAAD,6BAAeA,KAAf;AAAsB,MAAA,cAAc,EAAED;AAAtC,OAAP;AACD,GAFD;AAGD;;AAED,MAAME,gBAAgB,GAAID,KAAD,IAAkC;AACzD,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,WAAtB;AAAmCL,IAAAA,cAAnC;AAAmD,OAAGM;AAAtD,MAA+DL,KAArE;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,QAAQ,GAAG;AAAnB,MAA8BL,UAAU,CAACM,KAAX,CAAiB,eAAjB,CAApC,CAFyD,CAGzD;;AACA,QAAMC,SAAS,GAAGC,UAAU,CAACH,QAAQ,KAAK,MAAb,GAAsBI,SAAtB,GAAkCL,IAAnC,CAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAwBV,UAAU,CAACW,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GACdH,iBAAiB,IACdV,UAAU,CAACM,KAAX,CAAiB,oBAAjB,CADH,IAEGN,UAAU,CAACM,KAAX,CAAiB,iBAAjB,CAFH,IAGGN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CAHH,IAIGN,UAAU,CAACM,KAAX,CAAiB,yBAAjB,CAJH,IAKGN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CANL;;AAQA,QAAMQ,YAAY,GAAGtB,eAAMuB,WAAN,CAAmBJ,KAAD,IAAmB;AACxDX,IAAAA,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2B,4BAAcL,KAAd,CAA3B;AACD,GAFoB,EAElB,CAACX,UAAD,CAFkB,CAArB;;AAIA,QAAMiB,oBAAoB,GAAG,MAAM;AACjC,QAAIpB,cAAc,IAAIA,cAAc,CAACqB,IAArC,EAA2C;AACzCrB,MAAAA,cAAc,CAACqB,IAAf,CAAoB,WAApB;AACD;AACF,GAJD;;AAMA,sBACE,eAAC,oBAAD,6BACMf,IADN;AAEE,IAAA,MAAM,EAAC,uBAFT;AAGE,IAAA,KAAK,EAAEI,SAHT;AAIE,IAAA,QAAQ,EAAEM,UAJZ;AAKE,IAAA,QAAQ,EAAEC,YALZ;AAME,IAAA,WAAW,EAAEjB,cAAc,IAAIA,cAAc,CAACqB,IAAjC,GAAwCD,oBAAxC,GAA+DR,SAN9E;AAOE,IAAA,OAAO,EAAER,MAAM,CAACkB,WAPlB;AAQE,IAAA,IAAI,EAAEC,wBAAYC;AARpB,KADF;AAYD,CApCD;;eAsCetB,gB","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { LineHeightSelect } from '@ali/we-toolbar';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { ToolbarMode } from '@ali/4ever-component';\nimport { setLineHeight } from '../actions';\n;\n\nconst MemoLineHeightSelect = React.memo(LineHeightSelect);\n\ninterface ISideBarTriggerProps {\n  open?: Function;\n}\n\nexport interface LineHeightButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n  sideBarTrigger?: ISideBarTriggerProps;\n}\n\nexport function sideBarTriggerFactory<T = any>(Component: React.ComponentType<T>, sideBarTrigger: ISideBarTriggerProps) {\n  return (props) => {\n    return <Component {...props} sideBarTrigger={sideBarTrigger} />;\n  };\n}\n\nconst LineHeightButton = (props: LineHeightButtonProps) => {\n  const { controller, locale, toolbarMode, sideBarTrigger, ...rest } = props;\n  const { line, lineRule = 'auto' } = controller.query('getLineHeight');\n  // 组件只支持多倍行距，undefined 或 固定值情况视为 NaN 以便组件不勾选\n  const lineValue = parseFloat(lineRule !== 'auto' ? undefined : line);\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled =\n    isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInTaskList')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleChange = React.useCallback((value: number) => {\n    controller.run('onAction', setLineHeight(value));\n  }, [controller]);\n\n  const handleClickCustomize = () => {\n    if (sideBarTrigger && sideBarTrigger.open) {\n      sideBarTrigger.open('paragraph');\n    }\n  };\n\n  return (\n    <MemoLineHeightSelect\n      {...rest}\n      testid=\"bi-toolbar-lineheight\"\n      value={lineValue}\n      disabled={isDisabled}\n      onChange={handleChange}\n      onCustomize={sideBarTrigger && sideBarTrigger.open ? handleClickCustomize : undefined}\n      tooltip={locale.buttonTitle}\n      role={PluginRoles.lineHeightSelect}\n    />\n  );\n};\n\nexport default LineHeightButton;\n"],"file":"lineHeightButton.js"}