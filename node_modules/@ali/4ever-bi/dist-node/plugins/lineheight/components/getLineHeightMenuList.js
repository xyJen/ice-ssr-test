"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _everBamboo = require("@ali/4ever-bamboo");

var _actions = require("../actions");

const _createElement = /*#__PURE__*/React.createElement;
;
const actionList = [{
  key: 1,
  text: '1'
}, {
  key: 1.15,
  text: '1.15'
}, {
  key: 1.5,
  text: '1.5'
}, {
  key: 2,
  text: '2'
}, {
  key: 2.5,
  text: '2.5'
}, {
  key: 3,
  text: '3'
}];

const isDisabled = controller => {
  const {
    value
  } = controller;
  const {
    isCollapsedAtEdge
  } = value.selection;
  return isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInTaskList') || controller.query('isSelectionInLinkCard');
};

const renderSubMenu = props => {
  const {
    controller,
    menuItem
  } = props;
  const {
    MenuContentWrapper = React.Fragment,
    title,
    ...rest
  } = menuItem;
  const {
    line,
    lineRule = 'auto'
  } = controller.query('getLineHeight'); // 组件只支持多倍行距

  const lineValue = parseFloat(lineRule !== 'auto' ? undefined : line);

  const handleClick = key => {
    const height = parseFloat(key.split('_')[1]);
    controller.run('onAction', (0, _actions.setLineHeight)(height));
  };

  const heights = actionList.map(config => {
    const key = `lineheight_${config.key}`;
    return /*#__PURE__*/_createElement(_weDesign.MenuItem, {
      selected: lineValue === config.key,
      menuKey: key,
      key: key,
      onClick: handleClick,
      role: `${_everBamboo.PluginRoles.lineHeight}-${config.text}`
    }, config.text);
  });
  return /*#__PURE__*/_createElement(_weDesign.SubMenu, (0, _extends2.default)({}, rest, {
    title: menuItem.title || '',
    disabled: isDisabled(controller)
  }), /*#__PURE__*/_createElement(MenuContentWrapper, null, heights));
};

var _default = renderSubMenu;
exports.default = _default;
//# sourceMappingURL=getLineHeightMenuList.js.map