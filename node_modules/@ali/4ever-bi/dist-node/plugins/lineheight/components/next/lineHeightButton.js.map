{"version":3,"sources":["../../../../../../src/plugins/lineheight/components/next/lineHeightButton.tsx"],"names":["sideBarTriggerFactory","Component","sideBarTrigger","props","LineHeightButton","controller","locale","rest","line","lineRule","query","lineValue","parseFloat","undefined","isCollapsedAtEdge","value","selection","isDisabled","handleChange","React","useCallback","run","handleClickCustomize","open","buttonTitle","PluginRoles","lineHeightSelect","customButtonTitle"],"mappings":";;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAGA;;uBAL4B,a;AAG5B;AACA;;AAcO,SAASA,qBAAT,CAAwCC,SAAxC,EAA2EC,cAA3E,EAAiH;AACtH,SAAQC,KAAD,IAAW;AAChB,wBAAO,eAAC,SAAD,6BAAeA,KAAf;AAAsB,MAAA,cAAc,EAAED;AAAtC,OAAP;AACD,GAFD;AAGD;;AAED,MAAME,gBAAgB,GAAID,KAAD,IAAkC;AACzD,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBJ,IAAAA,cAAtB;AAAsC,OAAGK;AAAzC,MAAkDJ,KAAxD;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,QAAQ,GAAG;AAAnB,MAA8BJ,UAAU,CAACK,KAAX,CAAiB,eAAjB,CAApC,CAFyD,CAGzD;;AACA,QAAMC,SAAS,GAAGC,UAAU,CAACH,QAAQ,KAAK,MAAb,GAAsBI,SAAtB,GAAkCL,IAAnC,CAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAwBT,UAAU,CAACU,KAAX,CAAiBC,SAA/C;AAEA,QAAMC,UAAU,GACdH,iBAAiB,IACdT,UAAU,CAACK,KAAX,CAAiB,oBAAjB,CADH,IAEGL,UAAU,CAACK,KAAX,CAAiB,iBAAjB,CAFH,IAGGL,UAAU,CAACK,KAAX,CAAiB,uBAAjB,CAHH,IAIGL,UAAU,CAACK,KAAX,CAAiB,yBAAjB,CAJH,IAKGL,UAAU,CAACK,KAAX,CAAiB,uBAAjB,CANL;;AAQA,QAAMQ,YAAY,GAAGC,eAAMC,WAAN,CAAmBL,KAAD,IAAmB;AACxDV,IAAAA,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2B,4BAAcN,KAAd,CAA3B;AACD,GAFoB,EAElB,CAACV,UAAD,CAFkB,CAArB;;AAIA,QAAMiB,oBAAoB,GAAGH,eAAMC,WAAN,CAAkB,MAAM;AACnD,QAAIlB,cAAc,IAAIA,cAAc,CAACqB,IAArC,EAA2C;AACzCrB,MAAAA,cAAc,CAACqB,IAAf,CAAoB,WAApB;AACD;AACF,GAJ4B,EAI1B,CAACrB,cAAD,CAJ0B,CAA7B;;AAMA,sBACE,eAAC,+BAAD;AACE,IAAA,MAAM,EAAC,uBADT;AAEE,IAAA,KAAK,EAAES,SAFT;AAGE,IAAA,QAAQ,EAAE,CAAC,CAACM,UAHd;AAIE,IAAA,QAAQ,EAAEC,YAJZ;AAKE,IAAA,WAAW,EAAEhB,cAAc,IAAIA,cAAc,CAACqB,IAAjC,GAAwCD,oBAAxC,GAA+DT,SAL9E;AAME,IAAA,OAAO,EAAEP,MAAM,EAAEkB,WANnB;AAOE,IAAA,IAAI,EAAEC,wBAAYC,gBAPpB;AAQE,IAAA,iBAAiB,EAAEpB,MAAM,EAAEqB;AAR7B,KASMpB,IATN,EADF;AAaD,CAtCD;;eAwCeH,gB","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { PluginRoles, } from '@ali/4ever-bamboo';\nimport { LineHeightSelect, IToolbarButtonConfig } from '@ali/4ever-component';\n;\n;\nimport { setLineHeight } from '../../actions';\n\n\nexport interface ISideBarTriggerProps {\n  open?: Function;\n}\n\nexport interface LineHeightButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n  sideBarTrigger?: ISideBarTriggerProps;\n}\n\nexport function sideBarTriggerFactory<T = any>(Component: React.ComponentType<T>, sideBarTrigger: ISideBarTriggerProps) {\n  return (props) => {\n    return <Component {...props} sideBarTrigger={sideBarTrigger} />;\n  };\n}\n\nconst LineHeightButton = (props: LineHeightButtonProps) => {\n  const { controller, locale, sideBarTrigger, ...rest } = props;\n  const { line, lineRule = 'auto' } = controller.query('getLineHeight');\n  // 组件只支持多倍行距，undefined 或 固定值情况视为 NaN 以便组件不勾选\n  const lineValue = parseFloat(lineRule !== 'auto' ? undefined : line);\n  const { isCollapsedAtEdge } = controller.value.selection;\n\n  const isDisabled =\n    isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInTaskList')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleChange = React.useCallback((value: number) => {\n    controller.run('onAction', setLineHeight(value));\n  }, [controller]);\n\n  const handleClickCustomize = React.useCallback(() => {\n    if (sideBarTrigger && sideBarTrigger.open) {\n      sideBarTrigger.open('paragraph');\n    }\n  }, [sideBarTrigger]);\n\n  return (\n    <LineHeightSelect\n      testid=\"bi-toolbar-lineheight\"\n      value={lineValue}\n      disabled={!!isDisabled}\n      onChange={handleChange}\n      onCustomize={sideBarTrigger && sideBarTrigger.open ? handleClickCustomize : undefined}\n      tooltip={locale?.buttonTitle}\n      role={PluginRoles.lineHeightSelect}\n      customButtonTitle={locale?.customButtonTitle}\n      {...rest}\n    />\n  );\n};\n\nexport default LineHeightButton;\n"],"file":"lineHeightButton.js"}