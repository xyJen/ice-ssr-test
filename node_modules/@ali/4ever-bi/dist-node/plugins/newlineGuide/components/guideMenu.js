"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _everLogger = _interopRequireDefault(require("@ali/4ever-logger"));

var _actions = require("../actions");

const _createElement = /*#__PURE__*/React.createElement;

const GuideMenu = props => {
  const {
    controller,
    enableKeyboard,
    query,
    withoutEmptyParagraphWhitelist = []
  } = props;

  const handleClickMenu = value => {
    // 这里加_recently的replace是很临时的一个方案，更加合理的方案是后面去除withoutEmptyParagraphWhitelist，这部分能力需要集成到menu配置上
    const needRemoveEmptyParagraph = withoutEmptyParagraphWhitelist.includes(value.replace('_recently', ''));
    controller.run('onAction', (0, _actions.removeNewlineTriggerText)(needRemoveEmptyParagraph));
    controller.run('onAction', (0, _actions.removeNewlineData)());
    /**
     * 这里之所以要做flush是因为外部插入菜单可能导致provider重新rerender导致op丢失
     */

    controller.flush();

    _everLogger.default.sum(`newline_insert_${value}`);

    if (props.onClickGuideMenu) {
      props.onClickGuideMenu(value);
    }
  };

  const isPreventKeyEvent = () => {
    if (controller.value.composing) {
      return true;
    }

    return false;
  };

  return /*#__PURE__*/_createElement(_weDesign.Menu, {
    key: `insert_menu_${query || 'all'}`,
    mode: _weDesign.EMenuMode.vertical,
    selectedKeys: [],
    destroyOverlayWhenInvisible: true,
    onClick: handleClickMenu,
    insertSubmenuToMenuRoot: true,
    shouldSelectFirstItem: !!query,
    shortcutKey: !!enableKeyboard,
    style: {
      padding: 0
    },
    subMenuAutoSelectWithEnter: true,
    isPreventKeyEvent: isPreventKeyEvent
  }, /*#__PURE__*/_createElement("div", {
    "data-testid": "newline-guide-menu" // style={{ padding: '4px 0' }}

  }, props.children));
};

var _default = GuideMenu;
exports.default = _default;
//# sourceMappingURL=guideMenu.js.map