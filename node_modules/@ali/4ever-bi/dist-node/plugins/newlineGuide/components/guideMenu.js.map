{"version":3,"sources":["../../../../../src/plugins/newlineGuide/components/guideMenu.tsx"],"names":["GuideMenu","props","controller","enableKeyboard","query","withoutEmptyParagraphWhitelist","handleClickMenu","value","needRemoveEmptyParagraph","includes","replace","run","flush","logger","sum","onClickGuideMenu","isPreventKeyEvent","composing","EMenuMode","vertical","padding","children"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;uBAH4B,a;;AAa5B,MAAMA,SAAmC,GAAIC,KAAD,IAAW;AACrD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,8BAA8B,GAAG;AAAtE,MAA6EJ,KAAnF;;AAEA,QAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC;AACA,UAAMC,wBAAwB,GAAGH,8BAA8B,CAACI,QAA/B,CAAwCF,KAAK,CAACG,OAAN,CAAc,WAAd,EAA2B,EAA3B,CAAxC,CAAjC;AACAR,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2B,uCAAyBH,wBAAzB,CAA3B;AACAN,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2B,iCAA3B;AACA;AACJ;AACA;;AACIT,IAAAA,UAAU,CAACU,KAAX;;AACAC,wBAAOC,GAAP,CAAY,kBAAiBP,KAAM,EAAnC;;AACA,QAAIN,KAAK,CAACc,gBAAV,EAA4B;AAC1Bd,MAAAA,KAAK,CAACc,gBAAN,CAAuBR,KAAvB;AACD;AACF,GAbD;;AAeA,QAAMS,iBAAiB,GAAG,MAAM;AAC9B,QAAId,UAAU,CAACK,KAAX,CAAiBU,SAArB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GALD;;AAOA,sBACE,eAAC,cAAD;AACE,IAAA,GAAG,EAAG,eAAcb,KAAK,IAAI,KAAM,EADrC;AAEE,IAAA,IAAI,EAAEc,oBAAUC,QAFlB;AAGE,IAAA,YAAY,EAAE,EAHhB;AAIE,IAAA,2BAA2B,MAJ7B;AAKE,IAAA,OAAO,EAAEb,eALX;AAME,IAAA,uBAAuB,MANzB;AAOE,IAAA,qBAAqB,EAAE,CAAC,CAACF,KAP3B;AAQE,IAAA,WAAW,EAAE,CAAC,CAACD,cARjB;AASE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KATT;AAUE,IAAA,0BAA0B,MAV5B;AAWE,IAAA,iBAAiB,EAAEJ;AAXrB,kBAaE;AACE,mBAAY,oBADd,CAEE;;AAFF,KAIGf,KAAK,CAACoB,QAJT,CAbF,CADF;AAsBD,CA/CD;;eAiDerB,S","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { EMenuMode, Menu } from '@ali/we-design';\nimport logger from '@ali/4ever-logger';\nimport { removeNewlineTriggerText, removeNewlineData } from '../actions';\n\nexport interface GuideMenuProps {\n  controller: Controller;\n  enableKeyboard?: boolean;\n  onClickGuideMenu?: Function;\n  query?: string;\n  withoutEmptyParagraphWhitelist?: string[];\n}\n\nconst GuideMenu: React.FC<GuideMenuProps> = (props) => {\n  const { controller, enableKeyboard, query, withoutEmptyParagraphWhitelist = [] } = props;\n\n  const handleClickMenu = (value) => {\n    // 这里加_recently的replace是很临时的一个方案，更加合理的方案是后面去除withoutEmptyParagraphWhitelist，这部分能力需要集成到menu配置上\n    const needRemoveEmptyParagraph = withoutEmptyParagraphWhitelist.includes(value.replace('_recently', ''));\n    controller.run('onAction', removeNewlineTriggerText(needRemoveEmptyParagraph));\n    controller.run('onAction', removeNewlineData());\n    /**\n     * 这里之所以要做flush是因为外部插入菜单可能导致provider重新rerender导致op丢失\n     */\n    controller.flush();\n    logger.sum(`newline_insert_${value}`);\n    if (props.onClickGuideMenu) {\n      props.onClickGuideMenu(value);\n    }\n  };\n\n  const isPreventKeyEvent = () => {\n    if (controller.value.composing) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Menu\n      key={`insert_menu_${query || 'all'}`}\n      mode={EMenuMode.vertical}\n      selectedKeys={[]}\n      destroyOverlayWhenInvisible\n      onClick={handleClickMenu}\n      insertSubmenuToMenuRoot\n      shouldSelectFirstItem={!!query}\n      shortcutKey={!!enableKeyboard}\n      style={{ padding: 0 }}\n      subMenuAutoSelectWithEnter\n      isPreventKeyEvent={isPreventKeyEvent}\n    >\n      <div\n        data-testid=\"newline-guide-menu\"\n        // style={{ padding: '4px 0' }}\n      >\n        {props.children}\n      </div>\n    </Menu>\n  );\n};\n\nexport default GuideMenu;\n"],"file":"guideMenu.js"}