{"version":3,"sources":["../../../../../src/plugins/newlineGuide/handlers/createOnChange.ts"],"names":["createOnChange","config","newlineGuideEnabled","newlineGuide","enabled","controller","next","environment","IS_MOBILE","triggered","point","query","NewlineGuideData","get","selection","document","composing","value","anchor","key","offset","node","getNode","newQuery","text","substring","includes","run"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEe,SAASA,cAAT,CAAwBC,MAAxB,EAAgD;AAC7D,QAAMC,mBAAmB,GAAGD,MAAM,CAACE,YAAP,EAAqBC,OAAjD;AACA,SAAO,CAACC,UAAD,EAAyBC,IAAzB,KAA4C;AACjD,QAAI,CAACJ,mBAAD,IAAwBK,yBAAYC,SAAxC,EAAmD,OAAOF,IAAI,EAAX;AACnD,UAAM;AAAEG,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,QACHC,+BAAiBC,GAAjB,CAAqBR,UAArB,KAAoC,EADvC;AAEA,UAAM;AAAES,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,QAAqCX,UAAU,CAACY,KAAtD;AACA,UAAMC,MAAM,GAAGJ,SAAS,CAACI,MAAzB;;AACA,QAAI,CAACT,SAAD,IAAcO,SAAlB,EAA6B;AAC3B,aAAOV,IAAI,EAAX;AACD;;AACD,QAAII,KAAK,EAAES,GAAP,KAAeD,MAAM,EAAEC,GAAvB,IAA8BT,KAAK,EAAEU,MAAP,IAAiBF,MAAM,EAAEE,MAA3D,EAAmE;AACjE;AACA,YAAMC,IAAI,GAAGN,QAAQ,CAACO,OAAT,CAAiBZ,KAAK,CAACS,GAAvB,CAAb;AACA,YAAMI,QAAQ,GAAGF,IAAI,EAAEG,IAAN,CAAWC,SAAX,CAAqBf,KAAK,CAACU,MAA3B,EAAmCF,MAAM,EAAEE,MAA3C,KAAsD,EAAvE;AACA,UAAIT,KAAK,KAAKY,QAAd,EAAwB,OAAOjB,IAAI,EAAX;;AACxB,UAAIiB,QAAQ,CAACG,QAAT,CAAkB,GAAlB,CAAJ,EAA4B;AAC1BrB,QAAAA,UAAU,CAACsB,GAAX,CAAe,UAAf,EAA2B,iCAA3B;AACA,eAAOrB,IAAI,EAAX;AACD;;AACDD,MAAAA,UAAU,CAACsB,GAAX,CAAe,UAAf,EAA2B,6BAAe;AACxChB,QAAAA,KAAK,EAAEY;AADiC,OAAf,CAA3B;AAGD;;AAED,WAAOjB,IAAI,EAAX;AACD,GAxBD;AAyBD","sourcesContent":["import { Controller, environment, TextPoint } from '@ali/4ever-cangjie';\nimport { BiPluginConfig } from '../../../types';\nimport { NewlineGuideData } from '../model/newlineGuide';\nimport { setNewlineData, removeNewlineData } from '../actions';\n\nexport default function createOnChange(config: BiPluginConfig) {\n  const newlineGuideEnabled = config.newlineGuide?.enabled;\n  return (controller: Controller, next: Function) => {\n    if (!newlineGuideEnabled || environment.IS_MOBILE) return next();\n    const { triggered, point, query } =\n      (NewlineGuideData.get(controller) || {}) as {triggered?: boolean; point?: TextPoint; query?: string};\n    const { selection, document, composing } = controller.value;\n    const anchor = selection.anchor as TextPoint;\n    if (!triggered || composing) {\n      return next();\n    }\n    if (point?.key === anchor?.key && point?.offset <= anchor?.offset) {\n      // 下拉弹窗弹出时计算query\n      const node = document.getNode(point.key);\n      const newQuery = node?.text.substring(point.offset, anchor?.offset) || '';\n      if (query === newQuery) return next();\n      if (newQuery.includes(' ')) {\n        controller.run('onAction', removeNewlineData());\n        return next();\n      }\n      controller.run('onAction', setNewlineData({\n        query: newQuery,\n      }));\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnChange.js"}