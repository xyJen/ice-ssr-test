{"version":3,"sources":["../../../../../src/plugins/newlineGuide/model/newlineGuide.ts"],"names":["NEWLINE_GUIDE_TRIGGER","NEWLINE_GUIDE_TRIGGER_CN","NEWLINE_GUIDE_TRIGGER_PLUS","triggerKeyList","triggerList","setNewlineGuide","controller","payload","_newlineGuide","value","data","setData","removeNewlineGuide","rest","getNewlineGuide","isNewLineInsert","block","removeText","type","jc","ind","left","list","Text","isTextList","nodes","text","removeGuideMenuTriggerText","needRemoveEmptyParagraph","newlineGuideData","key","query","point","newlineBlock","document","getNode","textNode","find","node","triggerText","substring","offset","command","Commands","removeTextByKey","removeNodeByKey","NewlineGuideData","set","get","remove","removeTriggerText"],"mappings":"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","sourcesContent":["import { Controller, Commands, Block, Text, TextPoint } from '@ali/4ever-cangjie';\nimport { NewlineGuideDataProps } from '../actions';\n\nexport const NEWLINE_GUIDE_TRIGGER = '/';\nexport const NEWLINE_GUIDE_TRIGGER_CN = '、';\nexport const NEWLINE_GUIDE_TRIGGER_PLUS = '+';\nexport const triggerKeyList = [NEWLINE_GUIDE_TRIGGER_PLUS, NEWLINE_GUIDE_TRIGGER];\nexport const triggerList = [NEWLINE_GUIDE_TRIGGER_PLUS, NEWLINE_GUIDE_TRIGGER_CN, NEWLINE_GUIDE_TRIGGER];\n\nfunction setNewlineGuide(controller: Controller, payload: NewlineGuideDataProps) {\n  const { _newlineGuide } = controller.value.data;\n  return controller.setData({\n    ...controller.value.data,\n    _newlineGuide: {\n      ..._newlineGuide,\n      ...payload,\n    },\n  });\n}\n\nfunction removeNewlineGuide(controller: Controller) {\n  const { _newlineGuide, ...rest } = controller.value.data;\n  return controller.setData(rest);\n}\n\nfunction getNewlineGuide(controller: Controller): NewlineGuideDataProps | undefined {\n  return controller.value.data._newlineGuide;\n}\n\nconst isNewLineInsert = (block: Block, removeText: string): boolean => {\n  return block.type === 'paragraph'\n  && (block.data.jc || 'left') === 'left'\n  && (!block.data.ind || block.data.ind.left === 0)\n  && !block.data.list\n  && Text.isTextList(block.nodes)\n  && block.text === removeText;\n};\n\nfunction removeGuideMenuTriggerText(controller: Controller, needRemoveEmptyParagraph: boolean) {\n  const newlineGuideData = getNewlineGuide(controller);\n\n  if (!newlineGuideData) return controller;\n\n  const { key, query = '' } = newlineGuideData;\n  const point = newlineGuideData.point as TextPoint;\n  if (!key) return controller;\n  const newlineBlock = controller.value.document.getNode(key) as Block;\n  if (!newlineBlock) return controller;\n  const textNode = newlineBlock.nodes.find((node) => point?.key === node.key);\n  if (!textNode) return controller;\n  const triggerText = textNode.text.substring(point?.offset - 1, point?.offset);\n  let removeText = triggerText;\n\n  if (point && query) {\n    // 点击输入取query的内容\n    removeText = `${triggerText}${query}`;\n  }\n\n  if (textNode.text && textNode.text !== '@' && point?.offset > -1) {\n    controller\n      .command(Commands.removeTextByKey, textNode.key, point.offset - 1, removeText);\n  }\n  \n  if (needRemoveEmptyParagraph && isNewLineInsert(newlineBlock, removeText)) {\n    // 如果是空段落则移除当前行\n    controller.command(Commands.removeNodeByKey, newlineBlock.key);\n  }\n  return controller;\n}\n\nexport const NewlineGuideData = {\n  set: setNewlineGuide,\n  get: getNewlineGuide,\n  remove: removeNewlineGuide,\n  removeTriggerText: removeGuideMenuTriggerText,\n};\n"],"file":"newlineGuide.js"}