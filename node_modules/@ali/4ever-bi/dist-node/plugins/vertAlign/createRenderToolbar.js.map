{"version":3,"sources":["../../../../src/plugins/vertAlign/createRenderToolbar.tsx"],"names":["buttons","SubButton","SupButton","createRenderToolbar","locale","props","controller","buttonName","extraProps","SlotType","splitButton","Component","iconButton"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;uBAH4B,a;AAO5B,MAAMA,OAAwF,GAAG;AAC/F,uBAAqBC,kBAD0E;AAE/F,uBAAqBC;AAF0E,CAAjG;;AAKe,SAASC,mBAAT,CACbC,MADa,EAEE;AAEf,SAAO,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAE5B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6BH,KAAnC;;AAEA,QAAIE,UAAU,KAAK,WAAf,IAA8BA,UAAU,KAAK,mBAAjD,EAAsE;AACpE,0BACE,eAAC,uBAAD;AAAU,QAAA,OAAO,EAAEE,wBAASC;AAA5B,sBACE,eAAC,0BAAD;AACE,QAAA,UAAU,EAAEJ,UADd;AAEE,QAAA,MAAM,EAAEF;AAFV,SAGMI,UAHN,EADF,CADF;AASD;;AAED,UAAMG,SAAS,GAAGX,OAAO,CAACO,UAAD,CAAzB;;AACA,QAAII,SAAJ,EAAe;AACb,0BACE,eAAC,uBAAD;AAAU,QAAA,OAAO,EAAEF,wBAASG;AAA5B,sBACE,eAAC,SAAD;AACE,QAAA,UAAU,EAAEN,UADd;AAEE,QAAA,MAAM,EAAEF;AAFV,SAGMI,UAHN,EADF,CADF;AASD;;AAED,WAAO,IAAP;AACD,GA9BD;AA+BD","sourcesContent":["import * as React from 'react';\nimport { RenderToolbar, ItemKeys, IBasicButton, IToolbarButtonConfig, ItemSlot, SlotType } from '@ali/4ever-component';\nimport SubButton, { SubButtonProps } from './components/next/subButton';\nimport SupButton, { SupButtonProps } from './components/next/supButton';\nimport ScriptSplitButton from './components/next/scriptSplitButton';\n\n\n\nconst buttons: Partial<Record<ItemKeys, React.ComponentType<SubButtonProps | SupButtonProps>>> = {\n  'vertAlign.subMark': SubButton,\n  'vertAlign.supMark': SupButton,\n}\n\nexport default function createRenderToolbar(\n  locale: Record<string, string>,\n): RenderToolbar {\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    if (buttonName === 'vertAlign' || buttonName === 'vertAlign.default') {\n      return (\n        <ItemSlot display={SlotType.splitButton}>\n          <ScriptSplitButton\n            controller={controller}\n            locale={locale}\n            {...extraProps}\n          />\n        </ItemSlot>\n      );\n    }\n\n    const Component = buttons[buttonName]\n    if (Component) {\n      return (\n        <ItemSlot display={SlotType.iconButton}>\n          <Component\n            controller={controller}\n            locale={locale}\n            {...extraProps}\n          />\n        </ItemSlot>\n      )\n    }\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}