"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _everCangjie = require("@ali/4ever-cangjie");

var _everMo = require("@ali/4ever-mo");

var _everBamboo = require("@ali/4ever-bamboo");

var _everComponent = require("@ali/4ever-component");

var _actions = require("../actions");

var _utils = require("../utils");

var _hotKeyTips = require("../utils/hotKeyTips");

var _isSelectionInLink = require("../utils/isSelectionInLink");

const _createElement = /*#__PURE__*/React.createElement;
;
const MOD = _everCangjie.environment.IS_MAC ? '⌘' : 'Ctrl';
const SHORTCUT = `${MOD}+K`;

function isSelectionInDecoration(selection, decotation) {
  const {
    focus
  } = selection;
  return focus.isTextPoint() && focus.key === decotation.start.key && focus.key === decotation.end.key && focus.offset >= decotation.start.offset && focus.offset <= decotation.end.offset;
}

const LinkButton = props => {
  const {
    locale,
    controller,
    toolbarMode,
    ...rest
  } = props;
  const {
    value
  } = controller;
  const {
    startBlock,
    activeMarks,
    selection,
    document
  } = controller.value;
  const shortcut = toolbarMode === _everComponent.ToolbarMode.double ? ` ${SHORTCUT}` : '';
  const decrs = React.useMemo(() => {
    if (startBlock) {
      return controller.run('decorateNode', startBlock);
    }

    return [];
  }, [controller, startBlock]);
  const isSelectionInPureLink = React.useMemo(() => {
    const decrsInSelection = decrs.filter(decr => isSelectionInDecoration(selection, decr));
    const marks = decrsInSelection.map(decr => decr.mark).concat(activeMarks);
    return marks.some(({
      type
    }) => type === 'link') && !marks.some(({
      type
    }) => type === 'unlink');
  }, [decrs, activeMarks, selection]);
  const ploceholder = (0, _isSelectionInLink.tryGetSelectedLinkPlaceholder)(controller.value, locale.addLinkPlaceholder);
  const handleClick = React.useCallback(() => {
    if (isSelectionInPureLink) {
      const {
        document,
        selection
      } = controller.value;
      const focus = selection.focus;
      const linkDecoration = decrs.find(({
        mark,
        start,
        end
      }) => mark.type === 'link' && focus.key === start.key && focus.offset >= start.offset && focus.offset <= end.offset);

      if (!linkDecoration) {
        return;
      }

      const {
        mark,
        start
      } = linkDecoration;
      const {
        data
      } = mark;
      const node = document.getNode(start.key);
      controller.run('onAction', (0, _actions.unwrapPureLink)(node, start.offset, data.href));
    } else {
      if (ploceholder) {
        // 在占位符进行取消链接时，直接执行删除，来自：https://work.aone.alibaba-inc.com/issue/34949369
        controller.run('onAction', (0, _actions.removeLink)(ploceholder));
      } else {
        controller.run('onAction', (0, _actions.wrapLink)());
      }
    }
  }, [controller, decrs, isSelectionInPureLink, ploceholder]);
  const disabled = React.useMemo(() => {
    const inlines = document.getLeafInlinesAtRange(selection);
    const isInvalidInlineInSelection = inlines.some(inline => {
      return !(0, _utils.isLink)(inline) && !_everMo.Image.isImage(inline);
    });
    return isInvalidInlineInSelection || controller.query('isSelectionInListSymbol');
  }, [selection, document, value]);
  const isInLink = (0, _utils.isSelectionInLink)(controller.value) || isSelectionInPureLink;
  return isInLink ? /*#__PURE__*/_createElement(_weToolbar.DeleteLinkButton, (0, _extends2.default)({}, rest, {
    shortcutText: shortcut,
    testid: "bi-toolbar-unlink",
    onClick: handleClick,
    disabled: disabled,
    title: locale?.link,
    role: _everBamboo.PluginRoles.link,
    tooltip: /*#__PURE__*/_createElement(_everComponent.IconButtonShortcut, {
      title: locale?.unlink,
      shortcut: _hotKeyTips.LINK_INSERT_HOT_KEY_TIP,
      description: `Markdown: []() ${locale.space}`
    })
  })) : /*#__PURE__*/_createElement(_weToolbar.AddLinkButton, (0, _extends2.default)({}, rest, {
    shortcutText: shortcut || _hotKeyTips.LINK_INSERT_HOT_KEY_TIP,
    tooltip: /*#__PURE__*/_createElement(_everComponent.IconButtonShortcut, {
      title: locale?.link,
      shortcut: _hotKeyTips.LINK_INSERT_HOT_KEY_TIP,
      description: `Markdown: []() ${locale.space}`
    }),
    testid: "bi-toolbar-link",
    onClick: handleClick,
    disabled: disabled,
    role: _everBamboo.PluginRoles.linkDelete
  }));
};

var _default = LinkButton;
exports.default = _default;
//# sourceMappingURL=linkButton.js.map