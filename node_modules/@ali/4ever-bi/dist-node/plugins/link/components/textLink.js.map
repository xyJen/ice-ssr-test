{"version":3,"sources":["../../../../../src/plugins/link/components/textLink.tsx"],"names":["normalizeLink","openLink","LinkPlugin","TextLink","props","controller","node","locale","attributes","children","protocolAllowList","onCopyLink","getLinkInfo","isSelected","displayType","defaultDisplayType","enableCard","draggable","openLinkOfConfig","enableLinkCardBlock","mountRoot","selection","document","value","href","cardInfo","data","title","cardTitle","imgURL","cardImgURL","desc","cardDesc","text","query","handleRemove","React","useCallback","run","handleCut","handleSave","newText","newHref","fixedHref","length","fixedText","handleRefresh","info","newInfo","e","handleToolbarSwitchStyle","handleUnlink","isPlaceholder","addLinkPlaceholder","handleVisit","isCollapsed","normalizedLink","handleCopy","isLinkFocused","useMemo","isFocused","showPlaceholder","link","fontSize","maxSz","firstPart","placeholdLink","injections","showCard","cardState","isTitleEqualsHref","trim","cardText","actualTitle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { isFirstPart, LinkPlugin } from '@ali/4ever-bamboo';\nimport { ToolbarLinkNormal } from '@ali/we-design';\nimport { Link, LinkCardWrapper, PlaceholerLinkWrapper } from './styled';\nimport { LinkPluginConfig, LinkNode, CardInfo, LinkDisplayType, ILinkCardInfo } from '../types';\nimport {\n  saveLinkCard,\n  updateLink,\n  cutLink,\n  removeLink,\n  updateLinkWithCardInfo,\n  switchDisplayType,\n  switchLink2Card,\n  injectCardInfo,\n  removeInjectCardInfo,\n  copyLink,\n  unwrapLinkCard\n} from '../actions';\nimport LinkPortal from './linkPortal/linkPortal';\nimport LinkCardPortal from './card/LinkCardPortal';\nimport { getCardInfo, getLinkCardState, getLinkDefaultSz } from '../utils';\nimport { BiPluginConfig } from '../../../types';\nimport { convertTextLinkToBlockLinkCard } from '../linkCard/actions';\nimport { InlinePlaceholder } from '@ali/we-toolbar';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\ninterface TextLinkProps extends RenderNodeProps<LinkNode> {\n  locale: LinkPluginConfig['locale'];\n  protocolAllowList: string[];\n  onCopyLink?: (href: string) => void;\n  getLinkInfo?: (href: string) => Promise<CardInfo>;\n  controller: Controller;\n  displayType: LinkDisplayType;\n  // todo 全量后下线配置\n  enableCard: boolean;\n  draggable?: BiPluginConfig['DraggablePluginConfig'];\n  openLink?: (href: string) => void;\n  enableLinkCardBlock?: boolean;\n  mountRoot?: boolean;\n}\n\n\nconst TextLink: React.FC<TextLinkProps> = (props) => {\n  const {\n    controller,\n    node,\n    locale,\n    attributes,\n    children,\n    protocolAllowList,\n    onCopyLink,\n    getLinkInfo,\n    isSelected,\n    displayType: defaultDisplayType,\n    enableCard,\n    draggable,\n    openLink: openLinkOfConfig,\n    enableLinkCardBlock,\n    mountRoot\n  } = props;\n  const { selection, document } = controller.value;\n\n  const { href = '', cardInfo } = node.data;\n\n  const { title: cardTitle, imgURL: cardImgURL, desc: cardDesc } = cardInfo || {};\n\n  const text = controller.query('getText', { node }) || '';\n\n  const handleRemove = React.useCallback(() => {\n    controller.run('onAction', removeLink(node));\n  }, [controller, node]);\n\n  const handleCut = React.useCallback(() => {\n    controller.run('onAction', cutLink(node));\n  }, [controller, node]);\n\n  const handleSave = React.useCallback(\n    async (newText: string, newHref: string, displayType: LinkDisplayType) => {\n      // 编辑框允许 href 或 text 为空字符串，转为卡片时需要保证都不为空\n      const fixedHref = newHref.length > 0 ? newHref : newText;\n      const fixedText = newText.length > 0 ? newText : newHref;\n      // 如果保存为卡片形式形式，\n      if (displayType === 'card' && getLinkInfo && typeof getLinkInfo === 'function') {\n        // 保存为卡片\n        if (enableLinkCardBlock) {\n          // 保存为 block linkCard\n          controller.run('onAction', convertTextLinkToBlockLinkCard(node, fixedText, fixedHref));\n        } else {\n          // 保存为 inline linkCard\n          controller.run('onAction', saveLinkCard(node, fixedText, fixedHref));\n        }\n      } else if (defaultDisplayType === 'card') {\n        controller.run('onAction', updateLinkWithCardInfo(node, fixedText, fixedHref, { displayType: 'link' }));\n      } else {\n        controller.run('onAction', updateLink(node, newText, newHref));\n      }\n      controller.run('onCangjieFocus');\n    },\n    [controller, node, defaultDisplayType, getLinkInfo, enableLinkCardBlock],\n  );\n\n  const handleRefresh = React.useCallback(\n    async () => {\n      if (getLinkInfo && typeof getLinkInfo === 'function') {\n        // 先设置卡片状态为 loading，刷新无需为节点注入信息\n        controller.run('onAction', injectCardInfo(node, { displayType: 'card' }));\n        try {\n          const info = await getLinkInfo(href);\n          if (info) {\n            // 请求成功\n            const { imgURL, title, desc } = info;\n            const newInfo: ILinkCardInfo = { imgURL, title, desc, displayType: 'card' };\n            controller.run('onAction', removeInjectCardInfo(node));\n            controller.run('onAction', updateLinkWithCardInfo(node, text, href, newInfo));\n            controller.run('onCangjieFocus');\n            // 清理临时状态\n            return;\n          }\n        } catch (e) {\n          console.debug(e);\n        }\n        // 请求失败,将状态设置为 error，数据填充 undefined\n        controller.run('onAction', removeInjectCardInfo(node));\n        controller.run('onAction', updateLinkWithCardInfo(node, text, href, { displayType: 'card' }));\n      }\n      controller.run('onCangjieFocus');\n    }, [controller, getLinkInfo, text, href, node],\n  );\n\n  const handleToolbarSwitchStyle = React.useCallback((newHref: string, displayType: LinkDisplayType, title?: string, desc?: string, imgURL?: string) => {\n    // 当 displayType 为 link 时，没有发生 url 转卡片，不保存 CardInfo\n    if (displayType === 'link') {\n      controller.run('onAction', switchDisplayType(node, displayType));\n    } else {\n      const newInfo: ILinkCardInfo = { imgURL, title, desc, displayType };\n      if (enableLinkCardBlock) {\n        // 保存为 block linkCard\n        controller.run('onAction', convertTextLinkToBlockLinkCard(node, text, newHref, newInfo));\n      } else {\n        // 保存为 inline linkCard\n        controller.run('onAction', switchLink2Card(node, text, newHref, newInfo));\n      }\n    }\n  }, [controller, node, text, enableLinkCardBlock]);\n\n  const handleUnlink = React.useCallback(() => {\n    const isPlaceholder = text === locale.addLinkPlaceholder && href === ''\n    if (isPlaceholder) {\n      // 在占位符进行取消链接时，直接执行删除，来自：https://work.aone.alibaba-inc.com/issue/34949369\n      controller.run('onAction', removeLink(node));\n    } else {\n      controller.run('onAction', unwrapLinkCard(node));\n    }\n\n  }, [controller, node, text]);\n\n  const handleVisit = React.useCallback(\n    () => {\n      const isCollapsed = controller.value.selection.isCollapsed;\n      if (!isCollapsed) return;\n      if (openLinkOfConfig) {\n        const normalizedLink = normalizeLink(href, protocolAllowList);\n        openLinkOfConfig(normalizedLink);\n      } else {\n        openLink(href, protocolAllowList);\n      }\n    },\n    [href, protocolAllowList, openLinkOfConfig],\n  );\n\n  const handleCopy = React.useCallback(\n    () => {\n      // 卡片形式下，使用仓颉复制\n      controller.run('onAction', copyLink(node));\n      if (onCopyLink && typeof onCopyLink === 'function') {\n        onCopyLink(href);\n      }\n    },\n    [href, onCopyLink, node, controller],\n  );\n\n  const isLinkFocused = React.useMemo(() => {\n    return controller.value.isFocused && isSelected && selection && selection.isCollapsed;\n  }, [controller.value.isFocused, isSelected, selection]);\n\n  // 当节点的文本为占位符文本时，显示占位符样式；其余情况显示默认链接样式\n  const showPlaceholder = text === locale.addLinkPlaceholder && href === '';\n\n  const link = (\n    <Link {...attributes} data-type=\"link\" data-testid=\"link\" className=\"link\">\n      {children()}\n    </Link>\n  );\n\n  const { fontSize: maxSz } = React.useMemo(() => controller.query('getLinkMaxSz', { node }), [node, controller]);\n  const firstPart = isFirstPart(node);\n\n  const placeholdLink = (\n    <PlaceholerLinkWrapper\n      {...attributes}\n      data-type=\"link\"\n      data-testid=\"link\"\n    >\n      <InlinePlaceholder\n        icon={firstPart ? <ToolbarLinkNormal className=\"link-placeholder-icon\" /> : null}\n        type=\"normal\"\n        isSelected={isLinkFocused}\n        style={{ fontSize: maxSz }}\n      >\n        {children()}\n      </InlinePlaceholder>\n    </PlaceholerLinkWrapper>\n  )\n\n  const { injections } = controller.value;\n  const showCard = getCardInfo(node, injections)?.displayType === 'card';\n  const cardState = getLinkCardState(false, node, injections);\n  const isTitleEqualsHref = text.trim() === href.trim();\n  const cardText = isTitleEqualsHref ? '' : text;\n  const actualTitle = isTitleEqualsHref ? cardTitle : text;\n\n  return (\n    (showCard || defaultDisplayType === 'card')\n      ?\n      <LinkCardWrapper>\n        <LinkCardPortal\n          {...props}\n          controller={controller}\n          locale={locale}\n          onSave={handleSave}\n          onRemove={handleRemove}\n          onCut={handleCut}\n          onUnlink={handleUnlink}\n          href={href}\n          text={cardText}\n          title={actualTitle}\n          state={cardState}\n          displayType={defaultDisplayType}\n          isSelected={isSelected}\n          readonly={false}\n          isMobile={false}\n          imgURL={cardImgURL}\n          desc={cardDesc}\n          onOpenLink={handleVisit}\n          onRefresh={handleRefresh}\n          onCopyLink={handleCopy}\n          node={node}\n          attributes={attributes}\n          draggable={draggable}\n          enableCard={enableCard}\n        />\n      </LinkCardWrapper>\n      :\n      <LinkPortal\n        controller={controller}\n        node={node}\n        href={href}\n        text={cardText}\n        locale={locale}\n        onSave={handleSave}\n        onCut={handleCut}\n        onRemove={handleRemove}\n        onUnlink={handleUnlink}\n        onOpenlink={handleVisit}\n        onCopyLink={handleCopy}\n        getLinkInfo={getLinkInfo}\n        isLinkFocused={isLinkFocused}\n        onToolbarSwitchStyle={handleToolbarSwitchStyle}\n        enableCard={enableCard}\n        mountRoot={mountRoot}\n      >\n        {showPlaceholder ? placeholdLink : link}\n      </LinkPortal>\n  );\n};\n\nexport default TextLink;\n"],"file":"textLink.js"}