{"version":3,"sources":["../../../../../src/plugins/link/components/AnimatePortal.tsx"],"names":["fadeInTop","keyframes","fadeInTopAnimation","css","fadeOut","fadeOutAnimation","AnimateWrapper","styled","div","props","state","AnimatePortal","children","overlay","visible","onOverlayHide","rest","animatedOverlay","enter","exit","React","cloneElement"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;AAS5B,MAAMA,SAAS,oBAAGC,2BAAH,yFAAf;AAWA,MAAMC,kBAAkB,oBAAGC,qBAAH,wEACTH,SADS,CAAxB;AAIA,MAAMI,OAAO,oBAAGH,2BAAH,qCAAb;AASA,MAAMI,gBAAgB,oBAAGF,qBAAH,gFAGPC,OAHO,CAAtB;;AAMA,MAAME,cAAc,gBAAGC,0BAAOC,GAAV,kCAEhBN,kBAFgB,EAGdO,KAAD,IAAW,CAACA,KAAK,CAACC,KAAN,KAAgB,SAAhB,IAA6BD,KAAK,CAACC,KAAN,KAAgB,QAA9C,KAA2DL,gBAHvD,CAApB;;AAOA,MAAMM,aAA2C,GAAIF,KAAD,IAAW;AAE7D,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA,aAA9B;AAA6C,OAAGC;AAAhD,MAAyDP,KAA/D;;AAEA,QAAMQ,eAAe,gBACnB,eAAC,gCAAD;AACE,IAAA,EAAE,EAAEH,OADN;AAEE,IAAA,OAAO,EAAE;AAAEI,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,IAAI,EAAE;AAApB,KAFX;AAGE,IAAA,QAAQ,EAAEJ,aAHZ;AAIE,IAAA,aAAa;AAJf,KAMIL,KAAD,iBACC,eAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA;AAAvB,kBACGU,KAAK,CAACC,YAAN,CAAmBR,OAAnB,CADH,CAPJ,CADF;;AAeA,sBACE,eAAC,qBAAD,6BACMG,IADN;AAEE,IAAA,OAAO,EAAEC,eAFX;AAGE,IAAA,OAAO,EAAEH,OAHX;AAIE,IAAA,oBAAoB,EAAE;AAJxB,MAMGF,QANH,CADF;AAUD,CA7BD;;eA+BeD,a","sourcesContent":["import * as React from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { Transition } from 'react-transition-group';\nimport { Portal } from '@ali/4ever-component';\nimport type { PortalProps } from '@ali/4ever-component';\n\ninterface AnimatePortalProps extends PortalProps {\n  onOverlayHide?: () => void;\n}\n\nconst fadeInTop = keyframes`\n  0% {\n    transform: translateY(-12px);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\nconst fadeInTopAnimation = css`\n  animation: ${fadeInTop} 0.25s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;\n`;\n\nconst fadeOut = keyframes`\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nconst fadeOutAnimation = css`\n  width: fit-content;\n  height: fit-content;\n  animation: ${fadeOut} 0.15s ease-out both;\n`;\n\nconst AnimateWrapper = styled.div<{ state: string }>`\n  position: absolute;\n  ${fadeInTopAnimation}\n  ${((props) => (props.state === 'exiting' || props.state === 'exited') && fadeOutAnimation)}\n`;\n\n\nconst AnimatePortal: React.FC<AnimatePortalProps> = (props) => {\n\n  const { children, overlay, visible, onOverlayHide, ...rest } = props;\n\n  const animatedOverlay = (\n    <Transition\n      in={visible}\n      timeout={{ enter: 250, exit: 150 }}\n      onExited={onOverlayHide}\n      unmountOnExit\n    >\n      {(state) => (\n        <AnimateWrapper state={state}>\n          {React.cloneElement(overlay)}\n        </AnimateWrapper>\n      )}\n    </Transition>\n  );\n\n  return (\n    <Portal\n      {...rest}\n      overlay={animatedOverlay}\n      visible={visible}\n      destroyOverlayOnHide={false}\n    >\n      {children}\n    </Portal>\n  );\n}\n\nexport default AnimatePortal;\n"],"file":"AnimatePortal.js"}