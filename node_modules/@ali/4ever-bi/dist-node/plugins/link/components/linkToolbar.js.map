{"version":3,"sources":["../../../../../src/plugins/link/components/linkToolbar.tsx"],"names":["LinkToolbar","React","forwardRef","props","ref","onEdit","onRemove","onCut","onUnlink","href","onHide","onClickoutside","onCopy","locale","getLinkInfo","onToolbarSwitchStyle","onOpenlink","title","imgURL","desc","enableCard","onMouseLeave","onMouseEnter","onCleanup","isMounted","useRef","cardImgURL","setCardImgURL","useState","cardTitle","setCardTitle","cardDesc","setCardDesc","cardState","setCardState","useEffect","current","handleKeyDown","event","key","toLowerCase","keyCode","preventDefault","document","addEventListener","removeEventListener","handleRefresh","useCallback","info","newImgURL","newTitle","newDesc","e","undefined","handleSwitchStyle","style","handleVisit","handleCopy","handleRemove","stopPropagation","handleUnlink","LinkCardToolbar","NormalToolbar","openLinkTip","edit","copy","unlink","delete","memo"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;uBAL4B,a;;wBAuMpB,eAAC,uBAAD,O;;AAzKR,MAAMA,WAAW,gBAAGC,KAAK,CAACC,UAAN,CAClB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA,MARI;AASJC,IAAAA,MATI;AAUJC,IAAAA,WAVI;AAWJC,IAAAA,oBAXI;AAYJC,IAAAA,UAZI;AAaJC,IAAAA,KAbI;AAcJC,IAAAA,MAdI;AAeJC,IAAAA,IAfI;AAgBJC,IAAAA,UAhBI;AAiBJC,IAAAA,YAjBI;AAkBJC,IAAAA,YAlBI;AAmBJC,IAAAA;AAnBI,MAoBFpB,KApBJ;AAsBA,wCAAkBC,GAAlB,EAA0DO,cAA1D;AACA,QAAMa,SAAS,GAAGvB,KAAK,CAACwB,MAAN,CAAsB,KAAtB,CAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,KAAK,CAAC2B,QAAN,CAAmCV,MAAnC,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4B7B,KAAK,CAAC2B,QAAN,CAAmCX,KAAnC,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0B/B,KAAK,CAAC2B,QAAN,CAAmCT,IAAnC,CAAhC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BjC,KAAK,CAAC2B,QAAN,CAA0B,QAA1B,CAAlC;AAEA3B,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpBX,IAAAA,SAAS,CAACY,OAAV,GAAoB,IAApB;AACA,WAAO,MAAM;AACXZ,MAAAA,SAAS,CAACY,OAAV,GAAoB,KAApB;AACD,KAFD;AAGD,GALD,EAKG,EALH;AAOAnC,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpB,UAAME,aAAa,GAAIC,KAAD,IAA0B;AAC9C,UAAI,CAACA,KAAK,CAACC,GAAX,EAAgB;AACd;AACD;;AACD,YAAMA,GAAG,GAAGD,KAAK,CAACC,GAAN,CAAUC,WAAV,EAAZ;;AACA,UAAID,GAAG,CAACC,WAAJ,OAAsB,QAAtB,IAAkCF,KAAK,CAACG,OAAN,KAAkB,EAAxD,EAA4D;AAC1DH,QAAAA,KAAK,CAACI,cAAN,GAD0D,CAE1D;;AACAhC,QAAAA,MAAM;AACP;AACF,KAVD;;AAWAiC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCP,aAArC;AACA,WAAO,MAAM;AACXM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCR,aAAxC;AACD,KAFD;AAGD,GAhBD,EAgBG,CAAC3B,MAAD,CAhBH;AAkBA,QAAMoC,aAAa,GAAG7C,KAAK,CAAC8C,WAAN,CACpB,YAAY;AACV,QAAIjC,WAAW,IAAI,OAAOA,WAAP,KAAuB,UAA1C,EAAsD;AACpDoB,MAAAA,YAAY,CAAC,SAAD,CAAZ;;AAEA,UAAI;AACF,cAAMc,IAAI,GAAG,MAAMlC,WAAW,CAACL,IAAD,CAA9B,CADE,CAGF;;AACA,YAAI,CAACe,SAAS,CAACY,OAAf,EAAwB;AACtB;AACD;;AACD,YAAIY,IAAJ,EAAU;AACR;AACA,gBAAM;AAAE9B,YAAAA,MAAM,EAAE+B,SAAS,GAAG,EAAtB;AAA0BhC,YAAAA,KAAK,EAAEiC,QAAQ,GAAG,EAA5C;AAAgD/B,YAAAA,IAAI,EAAEgC,OAAO,GAAG;AAAhE,cAAuEH,IAA7E;AACArB,UAAAA,aAAa,CAACsB,SAAD,CAAb;AACAnB,UAAAA,YAAY,CAACoB,QAAD,CAAZ;AACAlB,UAAAA,WAAW,CAACmB,OAAD,CAAX;AACAjB,UAAAA,YAAY,CAAC,QAAD,CAAZ;AACA;AACD;AACF,OAhBD,CAgBE,OAAOkB,CAAP,EAAU,CAEX;AACF,KAvBS,CAwBV;;;AACAlB,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACAP,IAAAA,aAAa,CAAC0B,SAAD,CAAb;AACAvB,IAAAA,YAAY,CAACuB,SAAD,CAAZ;AACArB,IAAAA,WAAW,CAACqB,SAAD,CAAX;AACD,GA9BmB,EA8BjB,CAACvC,WAAD,EAAcL,IAAd,EAAoBe,SAApB,EAA+BU,YAA/B,EAA6CP,aAA7C,EAA4DG,YAA5D,EAA0EE,WAA1E,CA9BiB,CAAtB,CAvDc,CAwFd;;AACA/B,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpB,QAAIf,UAAJ,EAAgB;AACd,UAAIF,MAAM,KAAKmC,SAAX,IAAwBpC,KAAK,KAAKoC,SAAlC,IAA+ClC,IAAI,KAAKkC,SAA5D,EAAuE;AACrEP,QAAAA,aAAa;AACd,OAFD,MAEO;AACLZ,QAAAA,YAAY,CAAC,QAAD,CAAZ;AACD;AACF;;AACD,WAAO,MAAM;AACXX,MAAAA,SAAS;AACV,KAFD;AAGD,GAXD,EAWG,CAACuB,aAAD,EAAgB5B,MAAhB,EAAwBD,KAAxB,EAA+BE,IAA/B,EAAqCe,YAArC,EAAmDd,UAAnD,EAA+DV,MAA/D,EAAuEa,SAAvE,CAXH,EAzFc,CAsGd;;AACAtB,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACXZ,MAAAA,SAAS;AACV,KAFD;AAGD,GAJD,EAIG,CAACA,SAAD,CAJH,EAvGc,CA6Gd;;AACA,QAAM+B,iBAAiB,GAAGrD,KAAK,CAAC8C,WAAN,CAAmBQ,KAAD,IAA4B;AACtExC,IAAAA,oBAAoB,CAACN,IAAD,EAAO8C,KAAP,EAAc1B,SAAd,EAAyBE,QAAzB,EAAmCL,UAAnC,CAApB;AACD,GAFyB,EAEvB,CAACjB,IAAD,EAAOoB,SAAP,EAAkBE,QAAlB,EAA4BL,UAA5B,EAAwCX,oBAAxC,CAFuB,CAA1B;AAIA,QAAMyC,WAAW,GAAGvD,KAAK,CAAC8C,WAAN,CACjBT,KAAD,IAA6B;AAC3BA,IAAAA,KAAK,CAACI,cAAN;AACA1B,IAAAA,UAAU;AACX,GAJiB,EAKlB,CAACA,UAAD,CALkB,CAApB;AAOA,QAAMyC,UAAU,GAAGxD,KAAK,CAAC8C,WAAN,CAChBT,KAAD,IAA8B;AAC5BA,IAAAA,KAAK,EAAEI,cAAP;AACA9B,IAAAA,MAAM,CAACH,IAAD,CAAN;AACD,GAJgB,EAId,CAACA,IAAD,EAAOG,MAAP,CAJc,CAAnB;AAMA,QAAM8C,YAAY,GAAGzD,KAAK,CAAC8C,WAAN,CAClBT,KAAD,IAA8B;AAC5BA,IAAAA,KAAK,EAAEI,cAAP;AACAJ,IAAAA,KAAK,EAAEqB,eAAP;AACArD,IAAAA,QAAQ;AACT,GALkB,EAKhB,CAACA,QAAD,CALgB,CAArB;AAOA,QAAMsD,YAAY,GAAG3D,KAAK,CAAC8C,WAAN,CAClBT,KAAD,IAA8B;AAC5BA,IAAAA,KAAK,EAAEI,cAAP;AACAJ,IAAAA,KAAK,EAAEqB,eAAP;AACAnD,IAAAA,QAAQ;AACT,GALkB,EAKhB,CAACA,QAAD,CALgB,CAArB;;AAQA,QAAMqD,eAAe,gBACnB,eAAC,0BAAD;AAAoB,mBAAY,cAAhC;AAA+C,IAAA,GAAG,EAAEzD,GAApD;AAAyD,IAAA,YAAY,EAAEiB,YAAvE;AAAqF,IAAA,YAAY,EAAEC;AAAnG,kBACE,eAAC,kBAAD;AACE,IAAA,WAAW,EAAE,MADf;AAEE,IAAA,KAAK,EAAEW,SAFT;AAGE,IAAA,IAAI,EAAExB,IAHR;AAIE,IAAA,MAAM,EAAEG,MAJV;AAKE,IAAA,QAAQ,EAAEN,QALZ;AAME,IAAA,KAAK,EAAEC,KANT;AAOE,IAAA,QAAQ,EAAEC,QAPZ;AAQE,IAAA,MAAM,EAAEH,MARV;AASE,IAAA,KAAK,EAAEwB,SATT;AAUE,IAAA,MAAM,EAAEH,UAVV;AAWE,IAAA,IAAI,EAAEK,QAXR;AAYE,IAAA,MAAM,EAAElB,MAZV;AAaE,IAAA,QAAQ,EAAE,KAbZ;AAcE,IAAA,QAAQ,EAAE,KAdZ;AAeE,IAAA,UAAU,EAAEG,UAfd;AAgBE,IAAA,aAAa,EAAEsC,iBAhBjB;AAiBE,IAAA,SAAS,EAAER;AAjBb,IADF,CADF;;AAwBA,QAAMgB,aAAa,gBACjB,eAAC,sBAAD;AAAgB,mBAAY,cAA5B;AAA2C,IAAA,GAAG,EAAE1D,GAAhD;AAAqD,IAAA,YAAY,EAAEiB,YAAnE;AAAiF,IAAA,YAAY,EAAEC;AAA/F,wBAEE,eAAC,uBAAD,qBACE,eAAC,iBAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAET,MAAM,CAACkD;AAA1C,kBACE,eAAC,gBAAD;AAAU,IAAA,WAAW,EAAEP,WAAvB;AAAoC,mBAAY;AAAhD,KACG/C,IADH,CADF,CADF,CAFF,eASE,eAAC,oBAAD;AACE,mBAAY,mBADd;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,GAAG,EAAEI,MAAM,CAACmD,IAHd;AAIE,IAAA,WAAW,EAAE3D;AAJf,IATF,eAeE,eAAC,oBAAD;AACE,mBAAY,mBADd;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,GAAG,EAAEQ,MAAM,CAACoD,IAHd;AAIE,IAAA,WAAW,EAAER;AAJf,IAfF,eAqBE,eAAC,oBAAD;AACE,mBAAY,qBADd;AAEE,IAAA,IAAI,EAAC,kBAFP;AAGE,IAAA,GAAG,EAAE5C,MAAM,CAACqD,MAHd;AAIE,IAAA,WAAW,EAAEN;AAJf,IArBF,eA2BE,eAAC,oBAAD;AACE,mBAAY,qBADd;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,GAAG,EAAE/C,MAAM,CAACsD,MAHd;AAIE,IAAA,WAAW,EAAET;AAJf,IA3BF,CADF;;AAqCA,SAAOtC,UAAU,GAAGyC,eAAH,GAAqBC,aAAtC;AACD,CA7MiB,CAApB;;4BAgNe7D,KAAK,CAACmE,IAAN,CAAWpE,WAAX,C","sourcesContent":["import * as React from 'react';\nimport { Tooltip, WebBetaNormal } from '@ali/we-design';\nimport { ToolbarWrapper, LinkHref, LinkHrefWrapper, CardToolbarWrapper } from './styled';\nimport { useOnClickOutside } from '@ali/4ever-component';\nimport { LinkDisplayType, LinkPluginConfig, CardState } from '../types';\nimport { LinkCard } from './card/LinkCard';\nimport ToolbarIcon from './ToolbarIcon';\n\ninterface LinkToolbarProps {\n  href: string;\n  title?: string;\n  desc?: string;\n  imgURL?: string;\n  onEdit: () => void;\n  onRemove: () => void;\n  onCut: () => void;\n  onHide: () => void;\n  onUnlink: () => void;\n  onOpenlink: () => void;\n  onCopy: (href: string) => void;\n  onClickoutside: (event: MouseEvent) => void;\n  onMouseLeave: (event?: React.MouseEvent) => void;\n  onMouseEnter: (event?: React.MouseEvent) => void;\n  onCleanup: () => void;\n  locale: LinkPluginConfig['locale'];\n  getLinkInfo?: LinkPluginConfig['getLinkInfo'];\n  onToolbarSwitchStyle: (href: string, displayType: LinkDisplayType, title?: string, desc?: string, imgURL?: string) => void;\n  // todo 全量后下线配置\n  enableCard: boolean;\n}\n\nconst LinkToolbar = React.forwardRef<HTMLDivElement, LinkToolbarProps>(\n  (props, ref) => {\n    const {\n      onEdit,\n      onRemove,\n      onCut,\n      onUnlink,\n      href,\n      onHide,\n      onClickoutside,\n      onCopy,\n      locale,\n      getLinkInfo,\n      onToolbarSwitchStyle,\n      onOpenlink,\n      title,\n      imgURL,\n      desc,\n      enableCard,\n      onMouseLeave,\n      onMouseEnter,\n      onCleanup,\n    } = props;\n\n    useOnClickOutside(ref as React.RefObject<HTMLDivElement>, onClickoutside);\n    const isMounted = React.useRef<boolean>(false);\n    const [cardImgURL, setCardImgURL] = React.useState<string | undefined>(imgURL);\n    const [cardTitle, setCardTitle] = React.useState<string | undefined>(title);\n    const [cardDesc, setCardDesc] = React.useState<string | undefined>(desc);\n    const [cardState, setCardState] = React.useState<CardState>('normal');\n\n    React.useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      };\n    }, []);\n\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (!event.key) {\n          return;\n        }\n        const key = event.key.toLowerCase();\n        if (key.toLowerCase() === 'escape' || event.keyCode === 27) {\n          event.preventDefault();\n          // ESC 退出\n          onHide();\n        }\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }, [onHide]);\n\n    const handleRefresh = React.useCallback(\n      async () => {\n        if (getLinkInfo && typeof getLinkInfo === 'function') {\n          setCardState('loading');\n\n          try {\n            const info = await getLinkInfo(href);\n\n            // 组件已经卸载，直接返回\n            if (!isMounted.current) {\n              return;\n            }\n            if (info) {\n              // 请求成功\n              const { imgURL: newImgURL = '', title: newTitle = '', desc: newDesc = '' } = info;\n              setCardImgURL(newImgURL);\n              setCardTitle(newTitle);\n              setCardDesc(newDesc);\n              setCardState('normal');\n              return;\n            }\n          } catch (e) {\n            console.debug(e);\n          }\n        }\n        // 请求失败，不更新数据,将卡片信息设置为 undefined\n        setCardState('error');\n        setCardImgURL(undefined);\n        setCardTitle(undefined);\n        setCardDesc(undefined);\n      }, [getLinkInfo, href, isMounted, setCardState, setCardImgURL, setCardTitle, setCardDesc],\n    );\n\n    // mount 时拉取数据\n    React.useEffect(() => {\n      if (enableCard) {\n        if (imgURL === undefined && title === undefined && desc === undefined) {\n          handleRefresh();\n        } else {\n          setCardState('normal');\n        }\n      }\n      return () => {\n        onCleanup();\n      }\n    }, [handleRefresh, imgURL, title, desc, setCardState, enableCard, onHide, onCleanup]);\n\n    // unmount 时确保 onCleanup 执行\n    React.useEffect(() => {\n      return () => {\n        onCleanup();\n      }\n    }, [onCleanup]);\n\n    // 切换展示风格时，将请求到的数据发出\n    const handleSwitchStyle = React.useCallback((style: LinkDisplayType) => {\n      onToolbarSwitchStyle(href, style, cardTitle, cardDesc, cardImgURL);\n    }, [href, cardTitle, cardDesc, cardImgURL, onToolbarSwitchStyle]);\n\n    const handleVisit = React.useCallback(\n      (event: React.MouseEvent) => {\n        event.preventDefault();\n        onOpenlink();\n      },\n      [onOpenlink],\n    );\n    const handleCopy = React.useCallback(\n      (event?: React.MouseEvent) => {\n        event?.preventDefault();\n        onCopy(href);\n      }, [href, onCopy],\n    );\n    const handleRemove = React.useCallback(\n      (event?: React.MouseEvent) => {\n        event?.preventDefault();\n        event?.stopPropagation();\n        onRemove();\n      }, [onRemove],\n    );\n    const handleUnlink = React.useCallback(\n      (event?: React.MouseEvent) => {\n        event?.preventDefault();\n        event?.stopPropagation();\n        onUnlink();\n      }, [onUnlink],\n    );\n\n    const LinkCardToolbar = (\n      <CardToolbarWrapper data-testid=\"link-toolbar\" ref={ref} onMouseLeave={onMouseLeave} onMouseEnter={onMouseEnter}>\n        <LinkCard\n          displayType={'link'}\n          state={cardState}\n          href={href}\n          onCopy={onCopy}\n          onDelete={onRemove}\n          onCut={onCut}\n          onUnlink={onUnlink}\n          onEdit={onEdit}\n          title={cardTitle}\n          imgURL={cardImgURL}\n          desc={cardDesc}\n          locale={locale}\n          readonly={false}\n          isMobile={false}\n          onOpenLink={onOpenlink}\n          onSwitchStyle={handleSwitchStyle}\n          onRefresh={handleRefresh}\n        />\n      </CardToolbarWrapper>\n    );\n\n    const NormalToolbar = (\n      <ToolbarWrapper data-testid=\"link-toolbar\" ref={ref} onMouseLeave={onMouseLeave} onMouseEnter={onMouseEnter}>\n        <WebBetaNormal />\n        <LinkHrefWrapper>\n          <Tooltip placement=\"bottom\" title={locale.openLinkTip}>\n            <LinkHref onMouseDown={handleVisit} data-testid=\"link-toolbar-visit\">\n              {href}\n            </LinkHref>\n          </Tooltip>\n        </LinkHrefWrapper>\n        <ToolbarIcon\n          data-testid=\"link-toolbar-edit\"\n          type=\"editor-border-beta\"\n          tip={locale.edit}\n          onMouseDown={onEdit}\n        />\n        <ToolbarIcon\n          data-testid=\"link-toolbar-copy\"\n          type=\"copy-beta\"\n          tip={locale.copy}\n          onMouseDown={handleCopy}\n        />\n        <ToolbarIcon\n          data-testid=\"link-toolbar-unlink\"\n          type=\"delete-link-beta\"\n          tip={locale.unlink}\n          onMouseDown={handleUnlink}\n        />\n        <ToolbarIcon\n          data-testid=\"link-toolbar-remove\"\n          type=\"delete-beta\"\n          tip={locale.delete}\n          onMouseDown={handleRemove}\n        />\n      </ToolbarWrapper>\n    );\n\n    return enableCard ? LinkCardToolbar : NormalToolbar;\n  },\n);\n\nexport default React.memo(LinkToolbar);\n"],"file":"linkToolbar.js"}