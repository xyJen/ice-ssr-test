"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _RefreshIcon = require("./RefreshIcon");

var _index = require("../../../../index");

const _createElement = /*#__PURE__*/React.createElement;
const defaultImageLayout = [{
  toolButtons: [{
    name: 'linkCard.refresh'
  }]
}];

const getToolButton = (name, icon, handler, testid) => {
  return () => /*#__PURE__*/_createElement(_weDesign.Button, {
    testid: testid,
    onClick: handler,
    title: name,
    bordered: false,
    icon: icon
  });
};

var _ref = /*#__PURE__*/_createElement(_RefreshIcon.RefreshIcon, null);

const LinkCardToolbarToolbar = props => {
  const {
    triggerNode,
    locale,
    onRefresh
  } = props;
  const getCustomToolButtons = React.useMemo(() => {
    return {
      'linkCard.refresh': getToolButton(locale.refresh, _ref, onRefresh, 'bi-toolbar-linkCard-refres')
    };
  }, [onRefresh, locale]);
  return /*#__PURE__*/_createElement(_index.InlineToolbar, {
    visible: true,
    triggerNode: triggerNode,
    inlineLayout: defaultImageLayout,
    customToolButtons: getCustomToolButtons
  });
};

var _default = LinkCardToolbarToolbar;
exports.default = _default;
//# sourceMappingURL=LinkCardInlineToolbar.js.map