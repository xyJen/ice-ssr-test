{"version":3,"sources":["../../../../../../src/plugins/link/components/card/LinkCard.tsx"],"names":["height","width","margin","theme","link","LINK_WIDTH","Wrapper","styled","span","noop","LinkCard","React","memo","props","state","href","controller","title","imgURL","desc","locale","displayType","displayStyle","onCopy","onRefresh","onOpenLink","onSwitchStyle","onCut","onDelete","isMobile","isSelected","rest","urlInfo","useMemo","triggerNodeRef","useRef","handleCopyLink","useCallback","linkCardLocale","tooltipLocale","editTooltip","edit","copyTooltip","copy","unlinkTooltip","unlink","deleteTooltip","delete","switchStyleTooltip","styleText","handleSwitchStyle","style","finalWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { theme } from '@ali/4ever-bamboo';\nimport { URLLinkCard } from '@ali/we-biz-link-card';\nimport { LinkDisplayType, LinkPluginConfig } from '../../types';\n\nconst { height, width, margin } = theme.link;\nconst LINK_WIDTH = 350;\ninterface IOwnProps {\n  controller?: Controller;\n  isSelected?: boolean;\n}\ninterface ITooltipLocale {\n  editTooltip?: string;\n  copyTooltip?: string;\n  unlinkTooltip?: string;\n  deleteTooltip?: string;\n  switchStyleTooltip?: string;\n}\ninterface IProps extends IOwnProps {\n  title?: string;\n  desc?: string;\n  imgURL?: string;\n  locale: LinkPluginConfig['locale'];\n  state: CardState;\n  href: string;\n  readonly: boolean;\n  isMobile: boolean;\n  isSelected?: boolean;\n  displayType: LinkDisplayType;\n  onEdit?: () => void; // 编辑\n  onCopy?: (href: string) => void; // 复制\n  onCut?: () => void; // 剪切\n  onUnlink?: () => void; // 取消链接\n  onDelete?: () => void; // 删除\n  onRefresh?: () => void;\n  onSwitchStyle?: (style: LinkDisplayType) => void;\n  onOpenLink?: () => void;\n}\n\nexport type CardState = 'loading' | 'error' | 'normal';\n\nconst Wrapper = styled.span`\n  cursor: default;\n  display: inline-block;\n  line-height: normal;\n  box-sizing: content-box;\n  border-radius: 8px;\n`;\n\n\nconst noop = () => { };\n\nexport const LinkCard = React.memo((props: IProps) => {\n  const {\n    state,\n    href,\n    controller,\n    title = '',\n    imgURL = '',\n    desc = '',\n    locale,\n    displayType: displayStyle,\n    onCopy = noop,\n    onRefresh = noop,\n    onOpenLink = noop,\n    onSwitchStyle = noop,\n    onCut = noop,\n    onDelete = noop,\n    isMobile,\n    isSelected = false,\n    ...rest\n  } = props;\n\n  const urlInfo = React.useMemo(() => ({\n    title,\n    imgURL,\n    desc,\n  }), [title, imgURL, desc]);\n\n  const triggerNodeRef = React.useRef<HTMLSpanElement>();\n\n  const handleCopyLink = React.useCallback(() => {\n    if (onCopy && typeof onCopy === 'function') {\n      onCopy(href || '');\n    }\n  }, [onCopy, href]);\n\n  const linkCardLocale = React.useMemo(() => {\n    const tooltipLocale: ITooltipLocale = {\n      editTooltip: locale.edit,\n      copyTooltip: locale.copy,\n      unlinkTooltip: locale.unlink,\n      deleteTooltip: locale.delete,\n      switchStyleTooltip: locale.styleText,\n    };\n    return { ...locale, ...tooltipLocale };\n  }, [locale]);\n\n  const handleSwitchStyle = React.useCallback((style: 'indoc' | 'popup') => {\n    onSwitchStyle(style === 'popup' ? 'link' : 'card');\n  }, [onSwitchStyle]);\n\n  // 当链接呼出卡片时，显示宽度需要调整\n  const finalWidth = displayStyle === 'link' ? LINK_WIDTH : width;\n\n  return (\n    <Wrapper ref={triggerNodeRef} style={{ height: height, width: finalWidth, margin: margin }}>\n      <URLLinkCard\n        isSelected={isSelected}\n        cardStyle={displayStyle === 'link' ? 'popup' : 'indoc'}\n        state={state}\n        url={href}\n        locale={linkCardLocale}\n        urlInfo={urlInfo}\n        isMobile={isMobile}\n        onRefresh={onRefresh}\n        onCopy={handleCopyLink}\n        onOpenURL={onOpenLink}\n        onSwitchStyle={handleSwitchStyle}\n        onDelete={onDelete}\n        onCut={onCut}\n        editBtnTestID=\"link-toolbar-edit\"\n        copyBtnTestID=\"link-toolbar-copy\"\n        cutBtnTestID=\"link-toolbar-cut\"\n        unlinkBtnTestID=\"link-toolbar-unlink\"\n        deleteBtnTestID=\"link-toolbar-remove\"\n        switchStyleBtnTestID=\"link-toolbar-switch\"\n        linkStyleBtnTestID=\"link-toolbar-switch-link\"\n        cardStyleBtnTestID=\"link-toolbar-switch-card\"\n        cardTestID=\"link-card\"\n        {...rest}\n      />\n    </Wrapper>\n  );\n});\n\n"],"file":"LinkCard.js"}