{"version":3,"sources":["../../../../../../src/plugins/link/components/linkPortal/useToolbarPortal.tsx"],"names":["useToolbarPortal","props","node","href","onRemove","onUnlink","controller","locale","onCopyLink","onCut","isLinkFocused","getLinkInfo","onToolbarSwitchStyle","onOpenlink","enableCard","onSwitchToEdit","showToolbar","portalRef","linkRef","hideToolbar","isPlaceholder","cardInfo","data","title","imgURL","desc","isEmptyHref","trim","length","React","useEffect","handleEdit","useCallback","run","handleLinkMouseDown","e","stopPropagation","preventDefault","handleLinkClick","handleClickoutside","event","target","current","contains","overlay","useMemo"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;uBAF4B,a;;AAmB5B,MAAMA,gBAAgB,GAAIC,KAAD,IAA+C;AACtE,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,IAAI,GAAG,EAFH;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,KARI;AASJC,IAAAA,aATI;AAUJC,IAAAA,WAVI;AAWJC,IAAAA,oBAXI;AAYJC,IAAAA,UAZI;AAaJC,IAAAA,UAbI;AAcJC,IAAAA,cAdI;AAeJC,IAAAA,WAfI;AAgBJC,IAAAA,SAhBI;AAiBJC,IAAAA,OAjBI;AAkBJC,IAAAA,WAlBI;AAmBJC,IAAAA;AAnBI,MAoBFnB,KApBJ;AAsBA,QAAMoB,QAAQ,GAAGnB,IAAI,EAAEoB,IAAN,CAAWD,QAAX,IAAuB,EAAxC;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,MAA0BJ,QAAhC;AAEA,QAAMK,WAAW,GAAGvB,IAAI,CAACwB,IAAL,GAAYC,MAAZ,KAAuB,CAA3C,CA1BsE,CA6BtE;;AACAC,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpB;AACA,QAAIpB,aAAa,KAAKU,aAAa,IAAIM,WAAtB,CAAjB,EAAqD;AACnDX,MAAAA,cAAc;AACf;AACF,GALD,EAKG,CAACL,aAAD,EAAgBU,aAAhB,EAA+BM,WAA/B,EAA4CX,cAA5C,CALH;AAOA,QAAMgB,UAAU,GAAGF,KAAK,CAACG,WAAN,CAAkB,MAAM;AACzC;AACAjB,IAAAA,cAAc;AACdT,IAAAA,UAAU,CAAC2B,GAAX,CAAe,UAAf,EAA2B,4BAA3B;AACD,GAJkB,EAIhB,CAAC3B,UAAD,EAAaS,cAAb,CAJgB,CAAnB;AAMA,QAAMmB,mBAAmB,GAAGL,KAAK,CAACG,WAAN,CAAmBG,CAAD,IAAyB;AACrE;AACA,QAAKf,aAAa,IAAIM,WAAtB,EAAoC;AAClCS,MAAAA,CAAC,CAACC,eAAF;AACAD,MAAAA,CAAC,CAACE,cAAF;AACAtB,MAAAA,cAAc;AACf;;AACD,QAAIK,aAAJ,EAAmB;AACjBd,MAAAA,UAAU,CAAC2B,GAAX,CAAe,UAAf,EAA2B,qCAA3B;AACD;AACF,GAV2B,EAUzB,CAAC3B,UAAD,EAAac,aAAb,EAA4BM,WAA5B,EAAyCX,cAAzC,CAVyB,CAA5B,CA3CsE,CAuDtE;;AACA,QAAMuB,eAAe,GAAGT,KAAK,CAACG,WAAN,CAAmBG,CAAD,IAAyB;AACjE,QAAI,CAACf,aAAD,IAAkB,CAACM,WAAvB,EAAoC;AAClC,aAAOb,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,EAA9C;AACD;AACF,GAJuB,EAIrB,CAACA,UAAD,EAAaO,aAAb,EAA4BM,WAA5B,CAJqB,CAAxB;AAMA,QAAMa,kBAAkB,GAAGV,KAAK,CAACG,WAAN,CAAmBQ,KAAD,IAAW;AACtD,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;;AACA,QAAIA,MAAM,KAAKvB,OAAO,CAACwB,OAAnB,IAA8BxB,OAAO,CAACwB,OAAR,EAAiBC,QAAjB,CAA0BF,MAA1B,CAAlC,EAAqE;AACnE;AACD;;AACDtB,IAAAA,WAAW;AACZ,GAN0B,EAMxB,EANwB,CAA3B;AAQA,QAAMyB,OAAO,GAAGf,KAAK,CAACgB,OAAN,CAAc,mBAC5B,eAAC,oBAAD;AACE,IAAA,GAAG,EAAE5B,SADP;AAEE,IAAA,IAAI,EAAEd,IAFR;AAGE,IAAA,KAAK,EAAEoB,KAHT;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,MAAM,EAAEM,UANV;AAOE,IAAA,QAAQ,EAAE3B,QAPZ;AAQE,IAAA,QAAQ,EAAEC,QARZ;AASE,IAAA,MAAM,EAAEc,WATV;AAUE,IAAA,MAAM,EAAEX,UAVV;AAWE,IAAA,KAAK,EAAEC,KAXT;AAYE,IAAA,UAAU,EAAEI,UAZd;AAaE,IAAA,cAAc,EAAE0B,kBAblB;AAcE,IAAA,WAAW,EAAE5B,WAdf;AAeE,IAAA,MAAM,EAAEJ,MAfV;AAgBE,IAAA,UAAU,EAAEO,UAhBd;AAiBE,IAAA,oBAAoB,EAAEF,oBAjBxB;AAkBE,IAAA,YAAY,EAAEO,WAlBhB;AAmBE,IAAA,YAAY,EAAEH,WAnBhB;AAoBE,IAAA,SAAS,EAAEG;AApBb,IADc,EAwBd,CACEF,SADF,EAEEd,IAFF,EAGEoB,KAHF,EAIEC,MAJF,EAKEC,IALF,EAMEM,UANF,EAOE3B,QAPF,EAQEC,QARF,EASEE,MATF,EAUEC,UAVF,EAWEC,KAXF,EAYEK,UAZF,EAaED,UAbF,CAxBc,CAAhB;AAwCA,SAAO;AACL+B,IAAAA,OADK;AAELV,IAAAA,mBAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD,CAnHD;;eAqHetC,gB","sourcesContent":["import * as React from 'react';\nimport { LinkPortalProps } from '../../types';\nimport LinkToolbar from '../linkToolbar';\nimport { editLinkCard, handleLinkPlaceholder } from '../../actions';\n\ninterface ToolbarPortalProps extends LinkPortalProps {\n  onSwitchToEdit: () => void;\n  showToolbar: () => void;\n  hideToolbar: () => void;\n  portalRef: React.RefObject<HTMLDivElement>;\n  linkRef: React.RefObject<HTMLDivElement>;\n  isPlaceholder: boolean;\n}\n\ninterface IToolbarPortal {\n  overlay: React.ReactElement;\n  handleLinkMouseDown: (event: React.MouseEvent) => void;\n  handleLinkClick: (event: React.MouseEvent) => void;\n}\n\nconst useToolbarPortal = (props: ToolbarPortalProps): IToolbarPortal => {\n  const {\n    node,\n    href = '',\n    onRemove,\n    onUnlink,\n    controller,\n    locale,\n    onCopyLink,\n    onCut,\n    isLinkFocused,\n    getLinkInfo,\n    onToolbarSwitchStyle,\n    onOpenlink,\n    enableCard,\n    onSwitchToEdit,\n    showToolbar,\n    portalRef,\n    linkRef,\n    hideToolbar,\n    isPlaceholder,\n  } = props;\n\n  const cardInfo = node?.data.cardInfo || {};\n  const { title, imgURL, desc } = cardInfo;\n\n  const isEmptyHref = href.trim().length === 0;\n\n\n  // isLinkFocused 变化时主动隐藏\n  React.useEffect(() => {\n    // 对于占位符合首次插入链接，直接显示编辑框\n    if (isLinkFocused && (isPlaceholder || isEmptyHref)) {\n      onSwitchToEdit();\n    }\n  }, [isLinkFocused, isPlaceholder, isEmptyHref, onSwitchToEdit]);\n\n  const handleEdit = React.useCallback(() => {\n    // 清理所有状态，切换至编辑模式\n    onSwitchToEdit();\n    controller.run('onAction', editLinkCard());\n  }, [controller, onSwitchToEdit]);\n\n  const handleLinkMouseDown = React.useCallback((e: React.MouseEvent) => {\n    // 仅当链接是占位符，或者空链接，点击生效，显示编辑框\n    if ((isPlaceholder || isEmptyHref)) {\n      e.stopPropagation();\n      e.preventDefault();\n      onSwitchToEdit();\n    }\n    if (isPlaceholder) {\n      controller.run('onAction', handleLinkPlaceholder());\n    }\n  }, [controller, isPlaceholder, isEmptyHref, onSwitchToEdit]);\n\n  // 正常链接点击跳转\n  const handleLinkClick = React.useCallback((e: React.MouseEvent) => {\n    if (!isPlaceholder && !isEmptyHref) {\n      typeof onOpenlink === 'function' && onOpenlink();\n    }\n  }, [onOpenlink, isPlaceholder, isEmptyHref]);\n\n  const handleClickoutside = React.useCallback((event) => {\n    const target = event.target as HTMLElement;\n    if (target === linkRef.current || linkRef.current?.contains(target)) {\n      return;\n    }\n    hideToolbar();\n  }, []);\n\n  const overlay = React.useMemo(() => (\n    <LinkToolbar\n      ref={portalRef}\n      href={href}\n      title={title}\n      imgURL={imgURL}\n      desc={desc}\n      onEdit={handleEdit}\n      onRemove={onRemove}\n      onUnlink={onUnlink}\n      onHide={hideToolbar}\n      onCopy={onCopyLink}\n      onCut={onCut}\n      onOpenlink={onOpenlink}\n      onClickoutside={handleClickoutside}\n      getLinkInfo={getLinkInfo}\n      locale={locale}\n      enableCard={enableCard}\n      onToolbarSwitchStyle={onToolbarSwitchStyle}\n      onMouseLeave={hideToolbar}\n      onMouseEnter={showToolbar}\n      onCleanup={hideToolbar}\n    />\n  ),\n    [\n      portalRef,\n      href,\n      title,\n      imgURL,\n      desc,\n      handleEdit,\n      onRemove,\n      onUnlink,\n      locale,\n      onCopyLink,\n      onCut,\n      enableCard,\n      onOpenlink,\n    ]);\n\n  return {\n    overlay,\n    handleLinkMouseDown,\n    handleLinkClick,\n  };\n};\n\nexport default useToolbarPortal;\n"],"file":"useToolbarPortal.js"}