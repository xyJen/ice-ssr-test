{"version":3,"sources":["../../../../../src/plugins/link/queries/getSelectedLinkUrl.ts"],"names":["getSelectedLinkUrl","controller","tryGetSelectedTextLink","tryGetSelectedPureLink","shouldRenderContextMenu","Boolean","value","document","selection","startKey","getStart","key","linkNode","getClosest","node","Link","isLink","data","cardInfo","displayType","href","view","startBlock","linkMark","getSelectedLinkMark","focus","anchor","isTextPoint","getLinkMark","textPoint","getNode","Text","isText","leaf","leaves","marks","find","mark","type","offsetInNode","offset","length","some"],"mappings":"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","sourcesContent":["import { Link } from '@ali/4ever-mo';\nimport { Block, Node, Document, Text, Selection, Controller, TextPoint } from '@ali/4ever-cangjie';\n\nexport function getSelectedLinkUrl(\n  controller: Controller,\n): string {\n  return tryGetSelectedTextLink(controller) || tryGetSelectedPureLink(controller) || '';\n}\n\n\nexport function shouldRenderContextMenu(\n  controller: Controller,\n): boolean {\n  return Boolean(getSelectedLinkUrl(controller));\n}\n\n\nfunction tryGetSelectedTextLink(controller: Controller): false | string {\n  const { value } = controller;\n\n  const { document, selection } = value;\n\n  const startKey = selection.getStart(document).key;\n\n  if (!startKey) {\n    return false;\n  }\n\n  const linkNode = document.getClosest(\n    startKey,\n    (node) => Link.isLink(node)\n      && node.data?.cardInfo?.displayType !== 'card'\n      && node.data?.href,\n  );\n\n  if (linkNode) {\n    return linkNode.data.href;\n  }\n\n  return false;\n}\n\nfunction tryGetSelectedPureLink(controller: Controller): false | string {\n\n  const { value, view } = controller;\n\n  const { startBlock, selection, } = value;\n\n  if (!startBlock) {\n    return false;\n  }\n\n  const linkMark = getSelectedLinkMark(selection, view);\n\n  if (linkMark) {\n    return linkMark.data.href;\n  }\n\n  return false;\n}\n\nfunction getSelectedLinkMark(selection: Selection, view: Document) {\n  const { focus, anchor } = selection;\n  if (focus.isTextPoint()) {\n    const linkMark = getLinkMark(focus, view);\n    if (linkMark) {\n      return linkMark;\n    }\n  }\n\n  if (anchor.isTextPoint()) {\n    const linkMark = getLinkMark(anchor, view);\n    if (linkMark) {\n      return linkMark;\n    }\n  }\n  return null;\n}\n\nfunction getLinkMark(textPoint: TextPoint, view: Document) {\n  const node = view.getNode(textPoint.key);\n  if (Text.isText(node)) {\n    for (const leaf of node.leaves) {\n      const linkMark = leaf.marks.find(mark =>\n        mark.type === 'link'\n        && typeof mark.data?.offsetInNode === 'number'\n        && typeof mark.data?.href === 'string'\n        && mark.data.offsetInNode <= textPoint.offset\n        && (mark.data.offsetInNode + mark.data.href.length) >= textPoint.offset\n      );\n      if (linkMark && !leaf.marks.some(({ type }) => type === 'unlink')) {\n        return linkMark;\n      }\n    }\n  }\n  return null;\n}"],"file":"getSelectedLinkUrl.js"}