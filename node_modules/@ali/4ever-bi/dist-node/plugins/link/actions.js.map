{"version":3,"sources":["../../../../src/plugins/link/actions.ts"],"names":["LINK_HIDE_EDITOR","Symbol","LINK_HIDE_EDITOR_AND_MOVE_NEXT_TEXT","LINK_REMOVE","LINK_UPDATE","LINK_REMOVE_PURE","LINK_UPDATE_PURE","LINK_WRAP","LINK_UNWRAP","LINK_UNWRAP_CARD","LINK_FOCUS_EDITOR","LINK_UNWRAP_PURE_LINK","LINK_SWITCH_DISPLAYTYPE","LINK_SWITCH_LINK_TO_CARD","LINK_EDIT_LINK_CARD","LINK_HOVER_LINK_CARD","LINK_CLICK_PLACEHOLDER","LINK_INJECT_CARDINFO","LINK_REMOVE_INJECTED_CARDINFO","LINK_COPY_LINK","LINK_CUT_LINK","LINK_SAVE_LINK_CARD","LINK_SHOW_LINK_PASRE_PANEL","LINK_CUT_PURE","LINK_OPEN","hideLinkEditor","type","payload","hideLinkEditorAndMoveToNextText","wrapLink","range","unwrapLink","unwrapLinkCard","node","removeLink","updateLink","link","text","href","updateLinkWithCardInfo","cardInfo","removePureLink","offset","cutPureLink","updatePureLink","srcHref","updatePureLinkWithCardInfo","needFetchLinkInfo","focusLinkEditor","unwrapPureLink","switchDisplayType","displayType","editLinkCard","hoverLinkCard","handleLinkPlaceholder","switchLink2Card","injectCardInfo","removeInjectCardInfo","copyLink","cutLink","saveLinkCard","showLinkPastePanel","getLinkInfo"],"mappings":"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","sourcesContent":["import { Inline, Text } from '@ali/4ever-cangjie';\nimport { Action } from '../../types';\nimport type {\n  CardInfo,\n  CopyLinkPayload,\n  CutLinkPayload,\n  ILinkCardInfo,\n  InjectCardInfoPayload,\n  IRange,\n  LinkDisplayType,\n  LinkNode,\n  RangeType,\n  RemoveInjectedCardInfoPayload,\n  RemoveLinkPayload,\n  SaveLinkCardPayload,\n  ShowLinkPastePanelPayload,\n  SwitchDisplayTypePayload,\n  UnwrapLinkCardPayload,\n  UnwrapPureLinkPayload,\n  UpdatePureLinkPayload,\n} from './types';\n\nexport type {\n  CardInfo,\n  CopyLinkPayload,\n  CutLinkPayload,\n  ILinkCardInfo,\n  InjectCardInfoPayload,\n  IRange,\n  LinkDisplayType,\n  LinkNode,\n  RangeType,\n  RemoveInjectedCardInfoPayload,\n  RemoveLinkPayload,\n  SaveLinkCardPayload,\n  ShowLinkPastePanelPayload,\n  SwitchDisplayTypePayload,\n  UnwrapLinkCardPayload,\n  UnwrapPureLinkPayload,\n  UpdatePureLinkPayload,\n} from './types';\n\nexport const LINK_HIDE_EDITOR = Symbol('LINK_HIDE_EDITOR');\n\nexport const LINK_HIDE_EDITOR_AND_MOVE_NEXT_TEXT = Symbol('LINK_HIDE_EDITOR_AND_MOVE_NEXT_TEXT');\n\nexport const LINK_REMOVE = Symbol('LINK_REMOVE');\n\nexport const LINK_UPDATE = Symbol('LINK_UPDATE');\n\nexport const LINK_REMOVE_PURE = Symbol('LINK_REMOVE_PURE');\n\nexport const LINK_UPDATE_PURE = Symbol('LINK_UPDATE_PURE');\n\nexport const LINK_WRAP = Symbol('LINK_WRAP');\n\nexport const LINK_UNWRAP = Symbol('LINK_UNWRAP');\n\nexport const LINK_UNWRAP_CARD = Symbol('LINK_UNWRAP_CARD');\n\nexport const LINK_FOCUS_EDITOR = Symbol('LINK_FOCUS_EDITOR');\n\nexport const LINK_UNWRAP_PURE_LINK = Symbol('LINK_UNWRAP_PURE_LINK');\n\nexport const LINK_SWITCH_DISPLAYTYPE = Symbol('LINK_SWITCH_DISPLAYTYPE');\n\nexport const LINK_SWITCH_LINK_TO_CARD = Symbol('LINK_SWITCH_LINK_TO_CARD');\n\nexport const LINK_EDIT_LINK_CARD = Symbol('LINK_EDIT_LINK_CARD');\n\nexport const LINK_HOVER_LINK_CARD = Symbol('LINK_HOVER_LINK_CARD');\n\nexport const LINK_CLICK_PLACEHOLDER = Symbol('LINK_CLICK_PLACEHOLDER');\n\nexport const LINK_INJECT_CARDINFO = Symbol('LINK_INJECT_CARDINFO');\n\nexport const LINK_REMOVE_INJECTED_CARDINFO = Symbol('LINK_REMOVE_INJECTED_CARDINFO');\n\nexport const LINK_COPY_LINK = Symbol('LINK_COPY_LINK');\n\nexport const LINK_CUT_LINK = Symbol('LINK_CUT_LINK');\n\nexport const LINK_SAVE_LINK_CARD = Symbol('LINK_SAVE_LINK_CARD');\n\nexport const LINK_SHOW_LINK_PASRE_PANEL = Symbol('LINK_SHOW_LINK_PASRE_PANEL');\n\nexport const LINK_CUT_PURE = Symbol('LINK_CUT_PURE');\n\nexport const LINK_OPEN = Symbol('LINK_OPEN');\n\nexport function hideLinkEditor(): Action<{}> {\n  return {\n    type: LINK_HIDE_EDITOR,\n    payload: {},\n  };\n}\n\nexport function hideLinkEditorAndMoveToNextText(): Action<{}> {\n  return {\n    type: LINK_HIDE_EDITOR_AND_MOVE_NEXT_TEXT,\n    payload: {},\n  };\n}\n\nexport function wrapLink(range?: RangeType) {\n  return {\n    type: LINK_WRAP,\n    payload: {\n      range,\n    },\n  };\n}\n\nexport function unwrapLink(): Action<{}> {\n  return {\n    type: LINK_UNWRAP,\n    payload: {},\n  };\n}\n\nexport function unwrapLinkCard(node: Inline): Action<UnwrapLinkCardPayload> {\n  return {\n    type: LINK_UNWRAP_CARD,\n    payload: { node },\n  };\n}\n\nexport function removeLink(node: Inline): Action<RemoveLinkPayload> {\n  return {\n    type: LINK_REMOVE,\n    payload: { node },\n  };\n}\n\nexport function updateLink(link: Inline, text: string, href: string) {\n  return {\n    type: LINK_UPDATE,\n    payload: {\n      node: link,\n      text,\n      href,\n    },\n  };\n}\n\nexport function updateLinkWithCardInfo(link: Inline, text: string, href: string, cardInfo: ILinkCardInfo) {\n  return {\n    type: LINK_UPDATE,\n    payload: {\n      node: link,\n      text,\n      href,\n      cardInfo,\n    },\n  };\n}\n\nexport function removePureLink(\n  node: Text,\n  offset: number,\n  href: string,\n): Action<{}> {\n  return {\n    type: LINK_REMOVE_PURE,\n    payload: { node, offset, href },\n  };\n}\n\nexport function cutPureLink(\n  node: Text,\n  offset: number,\n  href: string,\n): Action<{}> {\n  return {\n    type: LINK_CUT_PURE,\n    payload: { node, offset, href },\n  };\n}\n\nexport function updatePureLink(\n  link: Text,\n  offset: number,\n  text: string,\n  href: string,\n  srcHref: string,\n): Action<UpdatePureLinkPayload> {\n  return {\n    type: LINK_UPDATE_PURE,\n    payload: {\n      node: link,\n      offset,\n      text,\n      href,\n      srcHref,\n    },\n  };\n}\n\nexport function updatePureLinkWithCardInfo(\n  link: Text,\n  offset: number,\n  text: string,\n  href: string,\n  srcHref: string,\n  cardInfo: ILinkCardInfo,\n  needFetchLinkInfo?: boolean,\n): Action<UpdatePureLinkPayload> {\n  return {\n    type: LINK_UPDATE_PURE,\n    payload: {\n      node: link,\n      offset,\n      text,\n      href,\n      srcHref,\n      cardInfo,\n      needFetchLinkInfo,\n    },\n  };\n}\n\nexport function focusLinkEditor(): Action<{}> {\n  return {\n    type: LINK_FOCUS_EDITOR,\n    payload: {},\n  };\n}\n\nexport function unwrapPureLink(\n  node: Text,\n  offset: number,\n  href: string,\n): Action<UnwrapPureLinkPayload> {\n  return {\n    type: LINK_UNWRAP_PURE_LINK,\n    payload: {\n      node,\n      offset,\n      href,\n    },\n  };\n}\n\nexport function switchDisplayType(\n  node: LinkNode,\n  displayType: LinkDisplayType,\n): Action<SwitchDisplayTypePayload> {\n  return {\n    type: LINK_SWITCH_DISPLAYTYPE,\n    payload: {\n      node,\n      displayType,\n    },\n  };\n}\n\nexport function editLinkCard() {\n  return {\n    type: LINK_EDIT_LINK_CARD,\n    payload: {},\n  };\n}\n\nexport function hoverLinkCard() {\n  return {\n    type: LINK_HOVER_LINK_CARD,\n    payload: {},\n  };\n}\n\nexport function handleLinkPlaceholder() {\n  return {\n    type: LINK_CLICK_PLACEHOLDER,\n    payload: {},\n  };\n}\n\nexport function switchLink2Card(\n  link: Inline,\n  text: string,\n  href: string,\n  cardInfo: ILinkCardInfo,\n) {\n  return {\n    type: LINK_SWITCH_LINK_TO_CARD,\n    payload: {\n      node: link,\n      text,\n      href,\n      cardInfo,\n    },\n  };\n}\n\n\nexport function injectCardInfo(\n  node: Inline | Text,\n  cardInfo: ILinkCardInfo,\n  range?: IRange,\n): Action<InjectCardInfoPayload> {\n  return {\n    type: LINK_INJECT_CARDINFO,\n    payload: {\n      node,\n      cardInfo,\n      range,\n    },\n  };\n}\n\nexport function removeInjectCardInfo(\n  node: Inline | Text,\n): Action<RemoveInjectedCardInfoPayload> {\n  return {\n    type: LINK_REMOVE_INJECTED_CARDINFO,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function copyLink(\n  node: Inline,\n): Action<CopyLinkPayload> {\n  return {\n    type: LINK_COPY_LINK,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function cutLink(\n  node: Inline,\n): Action<CutLinkPayload> {\n  return {\n    type: LINK_CUT_LINK,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function saveLinkCard(\n  node: Inline,\n  text: string,\n  href: string,\n): Action<SaveLinkCardPayload> {\n  return {\n    type: LINK_SAVE_LINK_CARD,\n    payload: {\n      node,\n      text,\n      href,\n    },\n  };\n}\n\nexport function showLinkPastePanel(\n  text: string,\n  getLinkInfo?: (href: string) => Promise<CardInfo>,\n): Action<ShowLinkPastePanelPayload> {\n  return {\n    type: LINK_SHOW_LINK_PASRE_PANEL,\n    payload: {\n      text,\n      getLinkInfo,\n    },\n  };\n}\n"],"file":"actions.js"}