{"version":3,"sources":["../../../../../src/plugins/link/linkCard/actions.ts"],"names":["LINK_CARD_PURE_LINK_TO_BLOCK_LINK_CARD","Symbol","LINK_CARD_TEXT_LINK_TO_BLOCK_LINK_CARD","LINK_CARD_BLOCK_LINK_CARD_TO_TEXT_LINK","LINK_CARD_COPY_LINK","LINK_CARD_CUT_LINK","LINK_CARD_DELETE_LINK","LINK_CARD_UPDATE_DATA","LINK_CARD_UNLINK","LINK_CARD_INSERT_CARD","convertPureLinkToBlockLinkCard","link","offset","text","href","srcHref","cardInfo","needFetchLinkInfo","type","payload","node","convertTextLinkToBlockLinkCard","convertBlockLinkCardToTextLink","data","copyBlockLinkCard","cutBlockLinkCard","deleteBlockLinkCard","updateBlockLinkCardData","unlinkBlockCardData","insertBlockLinkCard"],"mappings":"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","sourcesContent":["import {\n  Inline,\n  RangeSelection,\n  Decoration,\n  Node,\n  Text,\n  Action\n} from '@ali/4ever-cangjie';\nimport { BlockLinkCard, ConvertBlockLinkCardToTextLinkPayload, ConvertPureLinkToBlockLinkCardPayload, ConvertTextLinkToBlockLinkCardPayload, CopyOrCutBlockLinkCardPayload, ILinkCardInfo, InsertBlockLinkCardPayload, IRange, LinkDisplayType, LinkNode, SaveLinkCardPayload, ShowLinkPastePanelPayload, UnlinkBlockLinkCardPayload, UpdateBlockLinkCardDataPayload, UpdatePureLinkPayload } from '../types';\n\n/* #region  actionTypes */\nexport const LINK_CARD_PURE_LINK_TO_BLOCK_LINK_CARD = Symbol('LINK_CARD_PURE_LINK_TO_BLOCK_LINK_CARD');\n\nexport const LINK_CARD_TEXT_LINK_TO_BLOCK_LINK_CARD = Symbol('LINK_CARD_TEXT_LINK_TO_BLOCK_LINK_CARD');\n\nexport const LINK_CARD_BLOCK_LINK_CARD_TO_TEXT_LINK = Symbol('LINK_CARD_BLOCK_LINK_CARD_TO_TEXT_LINK');\n\nexport const LINK_CARD_COPY_LINK = Symbol('LINK_CARD_COPY_LINK');\n\nexport const LINK_CARD_CUT_LINK = Symbol('LINK_CARD_CUT_LINK');\n\nexport const LINK_CARD_DELETE_LINK = Symbol('LINK_CARD_DELETE_LINK');\n\nexport const LINK_CARD_UPDATE_DATA = Symbol('LINK_CARD_UPDATE_DATA');\n\nexport const LINK_CARD_UNLINK = Symbol('LINK_CARD_UNLINK');\n\nexport const LINK_CARD_INSERT_CARD = Symbol('LINK_CARD_INSERT_CARD');\n\n\n/* #endregion */\n\n/* #region  actions */\nexport function convertPureLinkToBlockLinkCard(\n  link: Text,\n  offset: number,\n  text: string,\n  href: string,\n  srcHref: string,\n  cardInfo: ILinkCardInfo,\n  needFetchLinkInfo?: boolean,\n): Action<ConvertPureLinkToBlockLinkCardPayload> {\n  return {\n    type: LINK_CARD_PURE_LINK_TO_BLOCK_LINK_CARD,\n    payload: {\n      node: link,\n      offset,\n      text,\n      href,\n      srcHref,\n      cardInfo,\n      needFetchLinkInfo,\n    },\n  };\n}\n\nexport function convertTextLinkToBlockLinkCard(\n  node: LinkNode,\n  text: string,\n  href: string,\n  cardInfo?: ILinkCardInfo\n): Action<ConvertTextLinkToBlockLinkCardPayload> {\n  return {\n    type: LINK_CARD_TEXT_LINK_TO_BLOCK_LINK_CARD,\n    payload: {\n      node,\n      text,\n      href,\n      cardInfo\n    },\n  };\n}\n\nexport function convertBlockLinkCardToTextLink(\n  node: BlockLinkCard,\n  data?: {\n    text: string;\n    href: string;\n  }\n): Action<ConvertBlockLinkCardToTextLinkPayload> {\n  return {\n    type: LINK_CARD_BLOCK_LINK_CARD_TO_TEXT_LINK,\n    payload: {\n      node,\n      data\n    },\n  };\n}\n\nexport function copyBlockLinkCard(node: BlockLinkCard): Action<CopyOrCutBlockLinkCardPayload> {\n  return {\n    type: LINK_CARD_COPY_LINK,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function cutBlockLinkCard(node: BlockLinkCard): Action<CopyOrCutBlockLinkCardPayload> {\n  return {\n    type: LINK_CARD_CUT_LINK,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function deleteBlockLinkCard(node: BlockLinkCard): Action<CopyOrCutBlockLinkCardPayload> {\n  return {\n    type: LINK_CARD_DELETE_LINK,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function updateBlockLinkCardData(node: BlockLinkCard, text: string, href: string, cardInfo?: ILinkCardInfo): Action<UpdateBlockLinkCardDataPayload> {\n  return {\n    type: LINK_CARD_UPDATE_DATA,\n    payload: {\n      node,\n      text,\n      href,\n      cardInfo\n    },\n  };\n}\n\nexport function unlinkBlockCardData(node: BlockLinkCard): Action<UnlinkBlockLinkCardPayload> {\n  return {\n    type: LINK_CARD_UNLINK,\n    payload: {\n      node,\n    },\n  };\n}\n\nexport function insertBlockLinkCard(\n  text: string,\n  href: string,\n  cardInfo?: ILinkCardInfo,\n): Action<InsertBlockLinkCardPayload> {\n  return {\n    type: LINK_CARD_INSERT_CARD,\n    payload: {\n      text,\n      href,\n      cardInfo,\n    },\n  };\n}\n/* #endregion */"],"file":"actions.js"}