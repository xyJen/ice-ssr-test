{"version":3,"sources":["../../../../../src/plugins/link/linkCard/createRenderNode.tsx"],"names":["normalizeLink","openLink","LinkPlugin","Wrapper","styled","div","LinkCardNode","props","nodeProps","controller","linkConfig","isMobile","locale","biLocale","link","protocolAllowList","onCopyLink","getLinkInfo","openLinkOfConfig","node","isSelected","selection","value","text","href","cardInfo","data","metadata","editMode","setEditMode","React","useState","linkRef","useRef","portalRef","scrollableContent","document","body","scrollContent","zoom","getContainer","useCallback","urlInfo","useMemo","isTitleEqualsHref","trim","actualTitle","title","desc","imgURL","linkCardLocale","tooltipLocale","editTooltip","edit","copyTooltip","copy","unlinkTooltip","unlink","deleteTooltip","delete","switchStyleTooltip","styleText","state","handleVisit","normalizedLink","handleCopy","run","handleCut","handleRemove","handleUnlink","handleSwitchStyle","e","handleRefresh","handleClickoutside","event","target","current","contains","handleEdit","handleEditorHide","handleSave","displayType","overlay","key","getPositionTopRight","offsetY","isCollapsed","createRenderNode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Controller, RenderNodeProps, useZoom, useZoomContainer } from '@ali/4ever-cangjie';\nimport { CustomizedBiCardPluginType } from '@ali/4ever-factory';\nimport { BlockLinkCard, LinkDisplayType, LinkPluginConfig } from '../types';\nimport { URLLinkCard } from '@ali/we-biz-link-card';\nimport { convertBlockLinkCardToTextLink, copyBlockLinkCard, cutBlockLinkCard, deleteBlockLinkCard, unlinkBlockCardData, updateBlockLinkCardData } from './actions';\nimport { getBlockLinkCardState } from './utils/getBlockLinkCardState';\nimport Portal from '../components/AnimatePortal';\nimport { getPositionTopRight, offsetY } from '../utils/getPosition';\nimport { LinkPlugin, useScrollableContent } from '@ali/4ever-bamboo';\nimport LinkEditor from '../components/linkEditor';\nimport biLocale from '../../../locales/zh_CN';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\n\nconst Wrapper = styled.div`\n  cursor: pointer;\n  border-radius: 9px;\n`;\n\nfunction LinkCardNode(props: {\n  nodeProps: RenderNodeProps<BlockLinkCard>,\n  controller: Controller,\n  linkConfig: LinkPluginConfig,\n  isMobile: boolean\n}) {\n\n  const { nodeProps, controller, linkConfig, isMobile } = props;\n\n  const {\n    locale = biLocale.link.locale,\n    protocolAllowList = ['http:', 'https:', 'dingtalk:', 'taobao:'],\n    onCopyLink,\n    getLinkInfo,\n    openLink: openLinkOfConfig,\n  } = linkConfig;\n\n  const { node, isSelected } = nodeProps;\n\n  const { selection } = controller.value;\n\n  const { text, href, cardInfo } = node.data.metadata!;\n\n  const [editMode, setEditMode] = React.useState(false);\n\n  const linkRef = React.useRef<HTMLDivElement>(null);\n\n  const portalRef = React.useRef<HTMLDivElement>(null);\n\n  const scrollableContent = useZoomContainer() || document.body;\n\n  const scrollContent = useScrollableContent() || document.body;\n\n  const zoom = useZoom();\n\n  const getContainer = React.useCallback(() => {\n    return scrollContent;\n  }, [scrollContent]);\n\n  const urlInfo = React.useMemo(() => {\n    const isTitleEqualsHref = text.trim() === href.trim();\n    const actualTitle = isTitleEqualsHref ? cardInfo.title : text;\n    return ({\n      title: actualTitle || '',\n      desc: cardInfo.desc || '',\n      imgURL: cardInfo.imgURL || '',\n    })\n  }, [cardInfo, text, href]);\n\n  const linkCardLocale = React.useMemo(() => {\n    const tooltipLocale = {\n      editTooltip: locale.edit,\n      copyTooltip: locale.copy,\n      unlinkTooltip: locale.unlink,\n      deleteTooltip: locale.delete,\n      switchStyleTooltip: locale.styleText,\n    };\n    return { ...locale, ...tooltipLocale };\n  }, [locale]);\n\n  const state = React.useMemo(() => {\n    return getBlockLinkCardState(node);\n  }, [node]);\n\n  const handleVisit = React.useCallback(\n    () => {\n      if (openLinkOfConfig) {\n        const normalizedLink = normalizeLink(href, protocolAllowList);\n        openLinkOfConfig(normalizedLink);\n      } else {\n        openLink(href, protocolAllowList);\n      }\n    },\n    [href, protocolAllowList, openLinkOfConfig],\n  );\n\n  const handleCopy = React.useCallback(\n    () => {\n      // 卡片形式下，使用仓颉复制\n      controller.run('onAction', copyBlockLinkCard(node));\n      if (onCopyLink && typeof onCopyLink === 'function') {\n        onCopyLink(href);\n      }\n    },\n    [href, onCopyLink, node, controller],\n  );\n\n  const handleCut = React.useCallback(() => {\n    controller.run('onAction', cutBlockLinkCard(node));\n  }, [controller, node]);\n\n  const handleRemove = React.useCallback(() => {\n    controller.run('onAction', deleteBlockLinkCard(node));\n  }, [controller, node]);\n\n  const handleUnlink = React.useCallback(() => {\n    controller.run('onAction', unlinkBlockCardData(node));\n  }, [controller, node]);\n\n  const handleSwitchStyle = React.useCallback((e: 'indoc' | 'popup') => {\n    if (e === 'popup') {\n      controller.run('onAction', convertBlockLinkCardToTextLink(node));\n    }\n  }, [controller, node]);\n\n  const handleRefresh = React.useCallback(() => {\n    controller.run('onAction', updateBlockLinkCardData(node, text, href));\n  }, [controller, getLinkInfo, text, href, node]);\n\n  const handleClickoutside = React.useCallback((event) => {\n    const target = event.target as HTMLElement;\n    if (target === linkRef.current || linkRef.current?.contains(target)) {\n      return;\n    }\n    setEditMode(false);\n  }, []);\n\n  const handleEdit = React.useCallback(() => {\n    setEditMode(true);\n  }, []);\n\n  const handleEditorHide = React.useCallback(() => {\n    setEditMode(false);\n  }, []);\n\n  const handleSave = React.useCallback((text: string, href: string, displayType: LinkDisplayType) => {\n    if (displayType === 'link') {\n      controller.run('onAction', convertBlockLinkCardToTextLink(node, { text, href }));\n    } else {\n      controller.run('onAction', updateBlockLinkCardData(node, text, href));\n    }\n  }, []);\n\n  const overlay = React.useMemo(() => (\n    <LinkEditor\n      ref={portalRef}\n      displayType={'card'}\n      nodeKey={node?.key}\n      text={text.trim() === href.trim() ? '' : text}\n      href={href}\n      onSave={handleSave}\n      onRemove={handleRemove}\n      onUnlink={handleUnlink}\n      locale={linkCardLocale}\n      controller={controller}\n      onHide={handleEditorHide}\n      onClickoutside={handleClickoutside}\n      enableCard={true}\n    />\n  ), [portalRef, node, text, href, linkCardLocale, controller, handleRemove, handleUnlink, handleEditorHide, handleClickoutside]);\n\n  return (\n    <Portal\n      className=\"bi-link-card-portal\"\n      visible={editMode}\n      triggerRef={linkRef}\n      overlay={overlay}\n      portalMatchTrigger={false}\n      container={scrollableContent}\n      getPosition={getPositionTopRight}\n      offset={[0, offsetY]}\n      zoom={zoom}\n    >\n      <Wrapper>\n        <URLLinkCard\n          getContainer={getContainer}\n          isSelected={isSelected && selection.isCollapsed}\n          cardStyle={'indoc'}\n          state={state}\n          url={href}\n          readonly={false}\n          locale={linkCardLocale}\n          urlInfo={urlInfo}\n          isMobile={isMobile}\n          // @ts-ignore\n          onRefresh={handleRefresh}\n          onCopy={handleCopy}\n          onOpenURL={handleVisit}\n          onSwitchStyle={handleSwitchStyle}\n          onDelete={handleRemove}\n          onCut={handleCut}\n          onEdit={handleEdit}\n          onUnlink={handleUnlink}\n          editBtnTestID=\"link-toolbar-edit\"\n          copyBtnTestID=\"link-toolbar-copy\"\n          cutBtnTestID=\"link-toolbar-cut\"\n          unlinkBtnTestID=\"link-toolbar-unlink\"\n          deleteBtnTestID=\"link-toolbar-remove\"\n          switchStyleBtnTestID=\"link-toolbar-switch\"\n          linkStyleBtnTestID=\"link-toolbar-switch-link\"\n          cardStyleBtnTestID=\"link-toolbar-switch-card\"\n          cardTestID=\"link-card\"\n        />\n      </Wrapper>\n    </Portal>);\n}\n\nexport default function createRenderNode(\n  linkConfig: LinkPluginConfig,\n  isMobile: boolean\n): CustomizedBiCardPluginType['renderNode'] {\n\n  return (nodeProps: RenderNodeProps<BlockLinkCard>, controller: Controller) => {\n    return (\n      <LinkCardNode\n        linkConfig={linkConfig}\n        isMobile={isMobile}\n        nodeProps={nodeProps}\n        controller={controller}\n      />\n    )\n  };\n}\n"],"file":"createRenderNode.js"}