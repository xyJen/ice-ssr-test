{"version":3,"sources":["../../../../../../src/plugins/link/linkCard/commands/unwrapLinkCard.ts"],"names":["unwrapLinkCard","controller","node","text","href","cardInfo","data","metadata","nodeText","length","command","Commands","moveToEndOfNode","inline","Inline","create","type","nodes","Text","displayType","insertBlock","Block","DEFAULT_TYPE","moveToRangeOfNode","removeLink"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEe,SAASA,cAAT,CAAwBC,UAAxB,EAAgDC,IAAhD,EAAqE;AAElF,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAA2BH,IAAI,CAACI,IAAL,CAAUC,QAA3C,CAFkF,CAIlF;;AACA,QAAMC,QAAQ,GAAGL,IAAI,CAACM,MAAL,GAAcN,IAAd,GAAqBC,IAAtC;AAEAH,EAAAA,UAAU,CAACS,OAAX,CAAmBC,sBAASC,eAA5B,EAA6CV,IAA7C;;AAEA,QAAMW,MAAM,GAAGC,oBAAOC,MAAP,CAAc;AAC3BC,IAAAA,IAAI,EAAE,MADqB;AAE3BC,IAAAA,KAAK,EAAE,CAACC,kBAAKH,MAAL,CAAYP,QAAZ,CAAD,CAFoB;AAG3BF,IAAAA,IAAI,EAAE;AACJF,MAAAA,IADI;AAEJC,MAAAA,QAAQ,EAAE,EACR,GAAGA,QADK;AAERc,QAAAA,WAAW,EAAE;AAFL;AAFN;AAHqB,GAAd,CAAf,CATkF,CAoBlF;AACA;;;AACAlB,EAAAA,UAAU,CAACS,OAAX,CAAmBC,sBAASC,eAA5B,EAA6CV,IAA7C,EACGQ,OADH,CACWC,sBAASS,WADpB,EACiC;AAC7BJ,IAAAA,IAAI,EAAEK,mBAAMC,YADiB;AAE7BL,IAAAA,KAAK,EAAE,CAACJ,MAAD;AAFsB,GADjC,EAKGH,OALH,CAKWC,sBAASY,iBALpB,EAKuCV,MALvC,EAMGH,OANH,CAMW,YANX,EAOGA,OAPH,CAOWc,mBAPX,EAOuBtB,IAPvB;AASA,SAAOD,UAAP;AACD","sourcesContent":["import { Controller, Inline, Text, Commands, Block } from '@ali/4ever-cangjie';\nimport { BlockLinkCard } from '../../../link/types';\nimport removeLink from './removeLink';\n\nexport default function unwrapLinkCard(controller: Controller, node: BlockLinkCard) {\n\n  const { text, href, cardInfo } = node.data.metadata!;\n\n  // 将 text link 转换为 block link card\n  const nodeText = text.length ? text : href;\n\n  controller.command(Commands.moveToEndOfNode, node);\n\n  const inline = Inline.create({\n    type: 'link',\n    nodes: [Text.create(nodeText)],\n    data: {\n      href,\n      cardInfo: {\n        ...cardInfo,\n        displayType: 'link'\n      }\n    },\n  });\n  // 将 BlockLinkCard 转换为 textLink 后，调用原有的 unwrapLink 方法\n  // 这里需要先插入，再删除，否则会报找不到 path 的异常\n  controller.command(Commands.moveToEndOfNode, node)\n    .command(Commands.insertBlock, {\n      type: Block.DEFAULT_TYPE,\n      nodes: [inline],\n    })\n    .command(Commands.moveToRangeOfNode, inline)\n    .command('unwrapLink')\n    .command(removeLink, node);\n\n  return controller;\n}\n"],"file":"unwrapLinkCard.js"}