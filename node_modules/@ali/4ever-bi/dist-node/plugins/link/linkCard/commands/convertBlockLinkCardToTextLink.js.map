{"version":3,"sources":["../../../../../../src/plugins/link/linkCard/commands/convertBlockLinkCardToTextLink.ts"],"names":["convertBlockLinkCardToTextLink","controller","node","data","cardInfo","metadata","text","href","nodeText","length","textLink","Inline","create","type","nodes","Text","displayType","command","Commands","moveToEndOfNode","insertBlock","Block","DEFAULT_TYPE","removeLink"],"mappings":";;;;;;;;;AAAA;;AACA;;AAIe,SAASA,8BAAT,CACbC,UADa,EAEbC,IAFa,EAGbC,IAHa,EAOb;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeF,IAAI,CAACC,IAAL,CAAUE,QAA/B;AACA,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBL,IAAI,CAACC,IAAL,CAAUE,QAA/B;;AACA,MAAIF,IAAJ,EAAU;AACRG,IAAAA,IAAI,GAAGH,IAAI,CAACG,IAAZ;AACAC,IAAAA,IAAI,GAAGJ,IAAI,CAACI,IAAZ;AACD,GAPD,CASA;;;AACA,QAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAL,GAAcH,IAAd,GAAqBC,IAAtC;;AAEA,QAAMG,QAAQ,GAAGC,oBAAOC,MAAP,CAAc;AAC7BC,IAAAA,IAAI,EAAE,MADuB;AAE7BC,IAAAA,KAAK,EAAE,CAACC,kBAAKH,MAAL,CAAYJ,QAAZ,CAAD,CAFsB;AAG7BL,IAAAA,IAAI,EAAE;AACJI,MAAAA,IADI;AAEJH,MAAAA,QAAQ,EAAE,EACR,GAAGA,QADK;AAERY,QAAAA,WAAW,EAAE;AAFL;AAFN;AAHuB,GAAd,CAAjB,CAZA,CAwBA;;;AACAf,EAAAA,UAAU,CAACgB,OAAX,CAAmBC,sBAASC,eAA5B,EAA6CjB,IAA7C,EACGe,OADH,CACWC,sBAASE,WADpB,EACiC;AAC7BP,IAAAA,IAAI,EAAEQ,mBAAMC,YADiB;AAE7BR,IAAAA,KAAK,EAAE,CAACJ,QAAD;AAFsB,GADjC,EAKGO,OALH,CAKWM,mBALX,EAKuBrB,IALvB;AAQA,SAAOD,UAAP;AACD;;AAAA","sourcesContent":["import { Controller, Text, Commands, Block, Inline } from '@ali/4ever-cangjie';\nimport removeLink from './removeLink';\nimport { BlockLinkCard, } from '../../types';\n\n\nexport default function convertBlockLinkCardToTextLink(\n  controller: Controller,\n  node: BlockLinkCard,\n  data?: {\n    text: string,\n    href: string,\n  }\n) {\n\n  const { cardInfo } = node.data.metadata!;\n  let { text, href } = node.data.metadata!;\n  if (data) {\n    text = data.text;\n    href = data.href;\n  }\n\n  // 将 text link 转换为 block link card\n  const nodeText = text.length ? text : href;\n\n  const textLink = Inline.create({\n    type: 'link',\n    nodes: [Text.create(nodeText)],\n    data: {\n      href,\n      cardInfo: {\n        ...cardInfo,\n        displayType: 'link'\n      }\n    },\n  });\n\n  // 这里需要先插入，再删除，否则会报找不到 path 的异常\n  controller.command(Commands.moveToEndOfNode, node)\n    .command(Commands.insertBlock, {\n      type: Block.DEFAULT_TYPE,\n      nodes: [textLink],\n    })\n    .command(removeLink, node);\n\n\n  return controller;\n};\n\n"],"file":"convertBlockLinkCardToTextLink.js"}