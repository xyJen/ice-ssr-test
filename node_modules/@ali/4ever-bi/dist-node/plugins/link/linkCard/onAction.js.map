{"version":3,"sources":["../../../../../src/plugins/link/linkCard/onAction.ts"],"names":["createOnAction","config","serializer","action","controller","next","type","payload","LINK_CARD_PURE_LINK_TO_BLOCK_LINK_CARD","node","text","href","offset","srcHref","cardInfo","needFetchLinkInfo","command","convertPureLinkToBlockLinkCard","getLinkInfo","LINK_CARD_TEXT_LINK_TO_BLOCK_LINK_CARD","run","convertTextLinkToBlockLinkCard","LINK_CARD_BLOCK_LINK_CARD_TO_TEXT_LINK","data","convertBlockLinkCardToTextLink","LINK_CARD_INSERT_CARD","insertBlockLinkCard","LINK_CARD_COPY_LINK","copyLink","LINK_CARD_CUT_LINK","convertBlockLinkCardToDefaultBlock","LINK_CARD_DELETE_LINK","LINK_CARD_UNLINK","unwrapLinkCard","LINK_CARD_UPDATE_DATA","updateLinkCard"],"mappings":"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","sourcesContent":["import type { Mo } from '@ali/4ever-mo';\nimport { hideCustomPastePanel } from '@ali/4ever-plugin-clipboard';\nimport {\n  LINK_CARD_PURE_LINK_TO_BLOCK_LINK_CARD,\n  LINK_CARD_TEXT_LINK_TO_BLOCK_LINK_CARD,\n  LINK_CARD_COPY_LINK,\n  LINK_CARD_CUT_LINK,\n  LINK_CARD_DELETE_LINK,\n  LINK_CARD_UPDATE_DATA,\n  LINK_CARD_BLOCK_LINK_CARD_TO_TEXT_LINK,\n  LINK_CARD_UNLINK,\n  LINK_CARD_INSERT_CARD,\n} from './actions';\nimport {\n  unwrapLinkCard,\n  convertPureLinkToBlockLinkCard,\n  convertTextLinkToBlockLinkCard,\n  convertBlockLinkCardToTextLink,\n  copyLink,\n  updateLinkCard,\n  insertBlockLinkCard,\n  convertBlockLinkCardToDefaultBlock,\n} from './commands';\nimport {\n  ConvertPureLinkToBlockLinkCardPayload,\n  LinkPluginConfig,\n  ConvertTextLinkToBlockLinkCardPayload,\n  CopyOrCutBlockLinkCardPayload,\n  UpdateBlockLinkCardDataPayload,\n  ConvertBlockLinkCardToTextLinkPayload,\n  UnlinkBlockLinkCardPayload,\n  InsertBlockLinkCardPayload\n} from \"../types\";\nimport { Controller } from '@ali/4ever-cangjie';\n\nconst createOnAction = (config: LinkPluginConfig, serializer?: Mo) => (action, controller: Controller, next) => {\n  const { type, payload } = action;\n  serializer = serializer || controller.serializer;\n\n  if (type === LINK_CARD_PURE_LINK_TO_BLOCK_LINK_CARD) {\n    const {\n      node,\n      text,\n      href,\n      offset,\n      srcHref,\n      cardInfo,\n      needFetchLinkInfo,\n    } = payload as ConvertPureLinkToBlockLinkCardPayload;\n\n    return controller.command(\n      convertPureLinkToBlockLinkCard,\n      node,\n      {\n        offset,\n        text,\n        href,\n        srcHref,\n        cardInfo,\n        needFetchLinkInfo,\n        getLinkInfo: config.getLinkInfo\n      });\n  }\n\n  if (type === LINK_CARD_TEXT_LINK_TO_BLOCK_LINK_CARD) {\n    // 切换卡片显示类型后，隐藏custom面板 to fix: https://work.aone.alibaba-inc.com/issue/44255401\n    controller.run('onAction', hideCustomPastePanel());\n    const { node, text, href, cardInfo } = payload as ConvertTextLinkToBlockLinkCardPayload;\n    return controller.command(convertTextLinkToBlockLinkCard,\n      node,\n      {\n        text,\n        href,\n        cardInfo,\n        getLinkInfo: config.getLinkInfo\n      });\n  }\n\n  if (type === LINK_CARD_BLOCK_LINK_CARD_TO_TEXT_LINK) {\n    const { node, data } = payload as ConvertBlockLinkCardToTextLinkPayload;\n    return controller.command(convertBlockLinkCardToTextLink, node, data);\n  }\n\n  if (type === LINK_CARD_INSERT_CARD) {\n    const { text, href, cardInfo } = payload as InsertBlockLinkCardPayload;\n    return controller.command(insertBlockLinkCard, { text, href, cardInfo, getLinkInfo: config.getLinkInfo });\n  }\n\n  if (type === LINK_CARD_COPY_LINK) {\n    const { node } = payload as CopyOrCutBlockLinkCardPayload;\n    return controller.command(copyLink, node, serializer);\n  }\n\n  if (type === LINK_CARD_CUT_LINK) {\n    const { node } = payload as CopyOrCutBlockLinkCardPayload;\n    return controller.command(copyLink, node, serializer)\n      .command(convertBlockLinkCardToDefaultBlock, node);\n  }\n\n  if (type === LINK_CARD_DELETE_LINK) {\n    const { node } = payload as CopyOrCutBlockLinkCardPayload;\n    return controller.command(convertBlockLinkCardToDefaultBlock, node);\n  }\n\n  if (type === LINK_CARD_UNLINK) {\n    const { node } = payload as UnlinkBlockLinkCardPayload;\n    return controller.command(unwrapLinkCard, node);\n  }\n\n  if (type === LINK_CARD_UPDATE_DATA) {\n    const { node, text, href } = payload as UpdateBlockLinkCardDataPayload;\n    return controller.command(updateLinkCard, node, { text, href, getLinkInfo: config.getLinkInfo });\n  }\n\n  return next();\n}\n\nexport default createOnAction;\n"],"file":"onAction.js"}