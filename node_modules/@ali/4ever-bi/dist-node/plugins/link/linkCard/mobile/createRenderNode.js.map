{"version":3,"sources":["../../../../../../src/plugins/link/linkCard/mobile/createRenderNode.tsx"],"names":["normalizeLink","openLink","LinkPlugin","Wrapper","styled","div","LinkCardNode","props","nodeProps","controller","linkConfig","isMobile","URLLinkCard","locale","biLocale","link","protocolAllowList","onCopyLink","getLinkInfo","openLinkOfConfig","node","isSelected","selection","value","text","href","cardInfo","data","metadata","scrollContent","document","body","getContainer","React","useCallback","urlInfo","useMemo","isTitleEqualsHref","trim","actualTitle","title","desc","imgURL","linkCardLocale","tooltipLocale","editTooltip","edit","copyTooltip","copy","unlinkTooltip","unlink","deleteTooltip","delete","switchStyleTooltip","styleText","state","handleVisit","normalizedLink","handleCopy","run","handleCut","handleRemove","handleUnlink","handleSwitchStyle","e","handleRefresh","isCollapsed","createRenderNode","LazyLoad","lazyload","SimpleLazyLoad","then"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Controller, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { SimpleLazyLoad } from '@ali/4ever-component';\nimport { CustomizedBiCardPluginType } from '@ali/4ever-factory';\nimport { BlockLinkCard, LinkPluginConfig } from '../../types';\nimport {\n  convertBlockLinkCardToTextLink,\n  copyBlockLinkCard,\n  cutBlockLinkCard,\n  deleteBlockLinkCard,\n  unlinkBlockCardData,\n  updateBlockLinkCardData,\n} from '../actions';\nimport { getBlockLinkCardState } from '../utils/getBlockLinkCardState';\nimport { LinkPlugin, useScrollableContent } from '@ali/4ever-bamboo';\nimport biLocale from '../../../../locales/zh_CN';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\nconst Wrapper = styled.div`\n  cursor: pointer;\n  border-radius: 9px;\n`;\n\nfunction LinkCardNode(props: {\n  nodeProps: RenderNodeProps<BlockLinkCard>;\n  controller: Controller;\n  linkConfig: LinkPluginConfig;\n  URLLinkCard: React.ComponentType<any>;\n  isMobile: boolean;\n}) {\n  const { nodeProps, controller, linkConfig, isMobile, URLLinkCard } = props;\n\n  const {\n    locale = biLocale.link.locale,\n    protocolAllowList = ['http:', 'https:', 'dingtalk:', 'taobao:'],\n    onCopyLink,\n    getLinkInfo,\n    openLink: openLinkOfConfig,\n  } = linkConfig;\n\n  const { node, isSelected } = nodeProps;\n\n  const { selection } = controller.value;\n\n  const { text, href, cardInfo } = node.data.metadata!;\n\n  const scrollContent = useScrollableContent() || document.body;\n\n  const getContainer = React.useCallback(() => {\n    return scrollContent;\n  }, [scrollContent]);\n\n  const urlInfo = React.useMemo(() => {\n    const isTitleEqualsHref = text.trim() === href.trim();\n    const actualTitle = isTitleEqualsHref ? cardInfo.title : text;\n    return {\n      title: actualTitle || '',\n      desc: cardInfo.desc || '',\n      imgURL: cardInfo.imgURL || '',\n    };\n  }, [cardInfo, text, href]);\n\n  const linkCardLocale = React.useMemo(() => {\n    const tooltipLocale = {\n      editTooltip: locale.edit,\n      copyTooltip: locale.copy,\n      unlinkTooltip: locale.unlink,\n      deleteTooltip: locale.delete,\n      switchStyleTooltip: locale.styleText,\n    };\n    return { ...locale, ...tooltipLocale };\n  }, [locale]);\n\n  const state = React.useMemo(() => {\n    return getBlockLinkCardState(node);\n  }, [node]);\n\n  const handleVisit = React.useCallback(() => {\n    if (openLinkOfConfig) {\n      const normalizedLink = normalizeLink(href, protocolAllowList);\n      openLinkOfConfig(normalizedLink);\n    } else {\n      openLink(href, protocolAllowList);\n    }\n  }, [href, protocolAllowList, openLinkOfConfig]);\n\n  const handleCopy = React.useCallback(() => {\n    // 卡片形式下，使用仓颉复制\n    controller.run('onAction', copyBlockLinkCard(node));\n    if (onCopyLink && typeof onCopyLink === 'function') {\n      onCopyLink(href);\n    }\n  }, [href, onCopyLink, node, controller]);\n\n  const handleCut = React.useCallback(() => {\n    controller.run('onAction', cutBlockLinkCard(node));\n  }, [controller, node]);\n\n  const handleRemove = React.useCallback(() => {\n    controller.run('onAction', deleteBlockLinkCard(node));\n  }, [controller, node]);\n\n  const handleUnlink = React.useCallback(() => {\n    controller.run('onAction', unlinkBlockCardData(node));\n  }, [controller, node]);\n\n  const handleSwitchStyle = React.useCallback(\n    (e: 'indoc' | 'popup') => {\n      if (e === 'popup') {\n        controller.run('onAction', convertBlockLinkCardToTextLink(node));\n      }\n    },\n    [controller, node],\n  );\n\n  const handleRefresh = React.useCallback(() => {\n    controller.run('onAction', updateBlockLinkCardData(node, text, href));\n  }, [controller, getLinkInfo, text, href, node]);\n\n  return (\n    <Wrapper>\n      <URLLinkCard\n        getContainer={getContainer}\n        isSelected={isSelected && selection.isCollapsed}\n        cardStyle={'indoc'}\n        state={state}\n        url={href}\n        readonly={false}\n        locale={linkCardLocale}\n        urlInfo={urlInfo}\n        isMobile={isMobile}\n        // @ts-ignore\n        onRefresh={handleRefresh}\n        onCopy={handleCopy}\n        onOpenURL={handleVisit}\n        onSwitchStyle={handleSwitchStyle}\n        onDelete={handleRemove}\n        onCut={handleCut}\n        onEdit={() => {}}\n        onUnlink={handleUnlink}\n        editBtnTestID=\"link-toolbar-edit\"\n        copyBtnTestID=\"link-toolbar-copy\"\n        cutBtnTestID=\"link-toolbar-cut\"\n        unlinkBtnTestID=\"link-toolbar-unlink\"\n        deleteBtnTestID=\"link-toolbar-remove\"\n        switchStyleBtnTestID=\"link-toolbar-switch\"\n        linkStyleBtnTestID=\"link-toolbar-switch-link\"\n        cardStyleBtnTestID=\"link-toolbar-switch-card\"\n        cardTestID=\"link-card\"\n      />\n    </Wrapper>\n  );\n}\n\nexport default function createRenderNode(\n  linkConfig: LinkPluginConfig,\n  isMobile: boolean,\n): CustomizedBiCardPluginType['renderNode'] {\n  const LazyLoad = linkConfig.lazyload || SimpleLazyLoad;\n  const URLLinkCard = LazyLoad(() =>\n    import('@ali/we-biz-link-card').then(({ URLLinkCard }) => URLLinkCard),\n  );\n  return (\n    nodeProps: RenderNodeProps<BlockLinkCard>,\n    controller: Controller,\n  ) => {\n    return (\n      <LinkCardNode\n        linkConfig={linkConfig}\n        isMobile={isMobile}\n        nodeProps={nodeProps}\n        URLLinkCard={URLLinkCard}\n        controller={controller}\n      />\n    );\n  };\n}\n"],"file":"createRenderNode.js"}