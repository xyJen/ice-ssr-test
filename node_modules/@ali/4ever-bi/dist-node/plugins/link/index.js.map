{"version":3,"sources":["../../../../src/plugins/link/index.ts"],"names":["createLinkPlugin","config","linkConfig","hotkey","protocolAllowList","locale","link","serializer","clipboard","linkPlugin","toolbar","menubar","sidebar","renderNode","draggable","renderToolbar","shouldNodeComponentUpdate","node","_props","_editor","next","type","onAction","onKeyDown","addLinkPlaceholder","onCangjieInput","onCangjieCopy","onCangjieCopyOrCut","onCangjieCut","onCangjiePaste","commands","insertLink","unwrapLink","updatePureLinkWithCardInfo","getLinkInfo","saveLinkCard","copyLink","showLinkPastePanel","enableLinkCardBlock","queries","quickInsert","models","klass","disableTextRecognize","decorateNode","LinkPlugin","createDecorateNode","renderMark","actions","utils","isSelectionInLink","createCopyLink"],"mappings":"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","sourcesContent":["import { LinkPlugin } from '@ali/4ever-bamboo';\nimport { Inline } from '@ali/4ever-cangjie';\nimport toolbar from './toolbar';\nimport menubar from './menubar';\nimport createRenderNode from './createRenderNode';\nimport createRenderMark from './createRenderMark';\nimport onAction from './handlers/onAction';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport onCangjieCopyOrCut from './handlers/onCangjieCopyorCut';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport createOnCangjiePaste from './handlers/createOnCangjiePaste';\nimport createInsertLink from './commands/createInsertLink';\nimport createUnwrapLink from './commands/createUnwrapLink';\nimport createCopyLink from './commands/createCopyLink';\nimport createUpdatePureLinkWithCardInfo from './commands/createUpdatePureLinkWithCardInfo';\nimport createSaveLinkcard from './commands/createSaveLinkCard';\nimport quickInsert from './quickInsertConfig';\nimport { LinkPluginConfig } from './types';\nimport * as actions from './actions';\nimport { isSelectionInLink } from './utils';\nimport locale from '../../locales/zh_CN';\nimport { BiPluginConfig, BiPlugin } from '../../types';\nimport createShowLinkPastePanel from './commands/showLinkPastePanel';\nimport sidebar from './sidebar';\nimport { queries } from './queries';\nimport createRenderToolbar from './createRenderToolbar';\nimport { moFactory } from '@ali/4ever-plugin-link';\n\nexport { actions };\n\nfunction createLinkPlugin(config: BiPluginConfig = {}): BiPlugin {\n  const linkConfig: LinkPluginConfig = {\n    hotkey: 'mod+k',\n    protocolAllowList: ['http:', 'https:', 'dingtalk:', 'taobao:'],\n    locale: locale.link.locale,\n    ...config.link,\n  };\n\n  const serializer = config.clipboard?.serializer;\n\n  const linkPlugin: BiPlugin = {\n    ...moFactory({}),\n    toolbar: toolbar(linkConfig.locale),\n    menubar: menubar(linkConfig.locale),\n    sidebar: sidebar(linkConfig),\n    renderNode: createRenderNode(linkConfig, config.draggable),\n    renderToolbar: createRenderToolbar(linkConfig.locale),\n    shouldNodeComponentUpdate: (\n      { node },\n      _props,\n      _editor,\n      next,\n    ) => {\n      if ((node as Inline).type === 'link') {\n        return true;\n      }\n      return next();\n    },\n    // @ts-ignore onAction should return void\n    onAction,\n    onKeyDown: createOnKeyDown(linkConfig.hotkey || '', linkConfig.locale.addLinkPlaceholder),\n    onCangjieInput: onCangjieInput,\n    onCangjieCopy: onCangjieCopyOrCut,\n    onCangjieCut: onCangjieCopyOrCut,\n    onCangjiePaste: createOnCangjiePaste(config, linkConfig),\n    commands: {\n      insertLink: createInsertLink(linkConfig.locale),\n      unwrapLink: createUnwrapLink(linkConfig.protocolAllowList),\n      updatePureLinkWithCardInfo: createUpdatePureLinkWithCardInfo(linkConfig.getLinkInfo),\n      saveLinkCard: createSaveLinkcard(linkConfig.getLinkInfo),\n      copyLink: createCopyLink(serializer),\n      showLinkPastePanel: createShowLinkPastePanel(linkConfig.enableLinkCardBlock),\n    },\n    queries,\n    locale: linkConfig.locale || {},\n    quickInsert,\n    models: {\n      klass: 'inline',\n      type: 'link',\n    },\n  };\n\n  // 支持 purelink 识别的情况下，添加 decorateNode 和 renderMark\n  if (!linkConfig.disableTextRecognize) {\n    // @ts-ignore\n    linkPlugin.decorateNode = LinkPlugin.createDecorateNode(linkConfig.protocolAllowList || []);\n    linkPlugin.renderMark = createRenderMark(linkConfig);\n  }\n\n  return linkPlugin;\n}\n\ncreateLinkPlugin.actions = actions;\ncreateLinkPlugin.utils = {\n  isSelectionInLink,\n  createCopyLink,\n};\n\nexport default createLinkPlugin;\n"],"file":"index.js"}