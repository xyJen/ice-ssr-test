{"version":3,"sources":["../../../../../src/plugins/link/handlers/onAction.ts"],"names":["ACTION_COPY","ContextMenu","onAction","action","controller","next","type","payload","LINK_HIDE_EDITOR","command","Commands","focus","selection","startInline","value","isCollapsed","anchor","isAtEndOfNode","moveToStartOfNextText","LINK_HIDE_EDITOR_AND_MOVE_NEXT_TEXT","LINK_WRAP","range","select","wrapLink","LINK_UNWRAP","LINK_UNWRAP_CARD","node","unwrapLinkCard","LINK_REMOVE","LINK_UPDATE","text","href","cardInfo","LINK_CUT_PURE","offset","LINK_REMOVE_PURE","LINK_UPDATE_PURE","srcHref","needFetchLinkInfo","LINK_FOCUS_EDITOR","blur","LINK_UNWRAP_PURE_LINK","unwrapPureLink","LINK_INJECT_CARDINFO","injectCardInfo","LINK_REMOVE_INJECTED_CARDINFO","removeinjectedCardInfo","LINK_COPY_LINK","LINK_CUT_LINK","LINK_SWITCH_DISPLAYTYPE","run","displayType","switchLinkDisplayType","LINK_EDIT_LINK_CARD","LINK_HOVER_LINK_CARD","LINK_CLICK_PLACEHOLDER","LINK_SWITCH_LINK_TO_CARD","LINK_SAVE_LINK_CARD","LINK_SHOW_LINK_PASRE_PANEL","getLinkInfo","LINK_OPEN"],"mappings":"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","sourcesContent":["import { Controller, Commands, ContextMenu, Action } from '@ali/4ever-cangjie';\nimport { copyToClipboard } from '@ali/4ever-bamboo';\nimport { hideCustomPastePanel } from '@ali/4ever-plugin-clipboard';\nimport {\n  LINK_HIDE_EDITOR,\n  LINK_REMOVE,\n  LINK_UPDATE,\n  LINK_WRAP,\n  LINK_UNWRAP,\n  LINK_UNWRAP_CARD,\n  LINK_REMOVE_PURE,\n  LINK_UPDATE_PURE,\n  LINK_FOCUS_EDITOR,\n  LINK_UNWRAP_PURE_LINK,\n  LINK_REMOVE_INJECTED_CARDINFO,\n  LINK_INJECT_CARDINFO,\n  LINK_COPY_LINK,\n  LINK_CUT_LINK,\n  LINK_SWITCH_DISPLAYTYPE,\n  LINK_SWITCH_LINK_TO_CARD,\n  LINK_SAVE_LINK_CARD,\n  LINK_HOVER_LINK_CARD,\n  LINK_EDIT_LINK_CARD,\n  LINK_CLICK_PLACEHOLDER,\n  LINK_SHOW_LINK_PASRE_PANEL,\n  LINK_CUT_PURE,\n  LINK_HIDE_EDITOR_AND_MOVE_NEXT_TEXT,\n  LINK_OPEN,\n} from '../actions';\nimport {\n  updateLink,\n  wrapLink,\n  removeLink,\n  removePureLink,\n  updatePureLink,\n  unwrapPureLink,\n  updateLinkCardInfo,\n  injectCardInfo,\n  removeinjectedCardInfo,\n  selectLink,\n  unwrapLinkCard,\n  switchLinkDisplayType,\n} from '../commands';\nimport {\n  CopyLinkPayload,\n  CutLinkPayload,\n  CutPureLinkPayload,\n  InjectCardInfoPayload,\n  OpenLinkPayload,\n  RemoveInjectedCardInfoPayload,\n  RemoveLinkPayload,\n  RemovePureLinkPayload,\n  SaveLinkCardPayload,\n  ShowLinkPastePanelPayload,\n  SwitchDisplayTypePayload,\n  UnwrapLinkCardPayload,\n  UnwrapPureLinkPayload,\n  UpdateLinkPayload,\n  UpdatePureLinkPayload,\n} from \"../types\";\n\nconst { ACTION_COPY } = ContextMenu;\n\nexport default function onAction(\n  action: Action,\n  controller: Controller,\n  next: () => Controller,\n): Controller {\n  const { type, payload } = action;\n  if (type === LINK_HIDE_EDITOR) {\n    controller.command(Commands.focus);\n    // 若是在末尾取消编辑，则跳出当前链接\n    const { selection, startInline } = controller.value;\n    if (\n      selection!.isCollapsed &&\n      startInline &&\n      selection!.anchor.isAtEndOfNode(startInline)\n    ) {\n      controller.command(Commands.moveToStartOfNextText);\n    }\n    return controller;\n  }\n  if (type === LINK_HIDE_EDITOR_AND_MOVE_NEXT_TEXT) {\n    controller.command(Commands.focus)\n      .command(Commands.moveToStartOfNextText);\n    return controller;\n  }\n  if (type === LINK_WRAP) {\n    const { range } = payload;\n    if (range) {\n      controller.command(Commands.select, range);\n    }\n    return controller.command(Commands.focus).command(wrapLink);\n  }\n  if (type === LINK_UNWRAP) {\n    return controller.command('unwrapLink');\n  }\n  if (type === LINK_UNWRAP_CARD) {\n    const { node } = payload as UnwrapLinkCardPayload;\n    return controller.command(unwrapLinkCard, node);\n  }\n  if (type === LINK_REMOVE) {\n    const { node } = payload as RemoveLinkPayload;\n    return removeLink(controller, node);\n  }\n  if (type === LINK_UPDATE) {\n    const { node, text, href, cardInfo } = payload as UpdateLinkPayload;\n    if (cardInfo) {\n      return updateLinkCardInfo(controller, node, text, href, cardInfo);\n    }\n\n    return updateLink(controller, node, text, href);\n  }\n  if (type === LINK_CUT_PURE) {\n    const { node, offset, href } = payload as CutPureLinkPayload;\n    copyToClipboard(href);\n    return removePureLink(controller, node, offset, href);\n  }\n  if (type === LINK_REMOVE_PURE) {\n    const { node, offset, href } = payload as RemovePureLinkPayload;\n    return removePureLink(controller, node, offset, href);\n  }\n  if (type === LINK_UPDATE_PURE) {\n    const {\n      node,\n      text,\n      href,\n      offset,\n      srcHref,\n      cardInfo,\n      needFetchLinkInfo,\n    } = payload as UpdatePureLinkPayload;\n    if (cardInfo) {\n      return controller.command('updatePureLinkWithCardInfo', node, offset, text, href, srcHref, cardInfo, needFetchLinkInfo);\n    }\n\n    return updatePureLink(controller, node, offset, text, href, srcHref);\n  }\n  if (type === LINK_FOCUS_EDITOR) {\n    return controller.command(Commands.blur);\n  }\n  if (type === LINK_UNWRAP_PURE_LINK) {\n    const { node, offset, href } = payload as UnwrapPureLinkPayload;\n    return controller.command(unwrapPureLink, node, offset, href);\n  }\n\n  if (type === LINK_INJECT_CARDINFO) {\n    const { node, cardInfo, range } = payload as InjectCardInfoPayload;\n    return controller.command(injectCardInfo, node, cardInfo, range);\n  }\n\n  if (type === LINK_REMOVE_INJECTED_CARDINFO) {\n    const { node } = payload as RemoveInjectedCardInfoPayload;\n    return controller.command(removeinjectedCardInfo, node);\n  }\n\n  if (type === LINK_COPY_LINK) {\n    const { node } = payload as CopyLinkPayload;\n    controller.command('copyLink', node);\n    return controller;\n  }\n\n  if (type === LINK_CUT_LINK) {\n    const { node } = payload as CutLinkPayload;\n    controller.command('copyLink', node);\n    removeLink(controller, node);\n    return controller;\n  }\n\n  if (type === LINK_SWITCH_DISPLAYTYPE) {\n    // 切换卡片显示类型后，隐藏custom面板 to fix: https://work.aone.alibaba-inc.com/issue/44255401\n    controller.run('onAction', hideCustomPastePanel());\n    const { node, displayType } = payload as SwitchDisplayTypePayload;\n    return controller.command(switchLinkDisplayType, node, displayType);\n  }\n\n  if (type === LINK_EDIT_LINK_CARD) {\n    return controller.command('editLink');\n  }\n\n  if (type === LINK_HOVER_LINK_CARD) {\n    return controller.command('hoverLink');\n  }\n\n  if (type === LINK_CLICK_PLACEHOLDER) {\n    return controller.command('linkPlaceholder');\n  }\n\n  if (type === LINK_SWITCH_LINK_TO_CARD) {\n    // 切换卡片显示类型后，隐藏custom面板 to fix: https://work.aone.alibaba-inc.com/issue/44255401\n    controller.run('onAction', hideCustomPastePanel());\n    const { node, text, href, cardInfo } = payload as UpdateLinkPayload;\n    if (cardInfo) {\n      return updateLinkCardInfo(controller, node, text, href, cardInfo);\n    }\n\n    return updateLink(controller, node, text, href);\n  }\n\n  if (type === LINK_SAVE_LINK_CARD) {\n    const { node, text, href } = payload as SaveLinkCardPayload;\n    return controller.command('saveLinkCard', node, text, href);\n  }\n\n  if (type === LINK_SHOW_LINK_PASRE_PANEL) {\n    const { text, getLinkInfo } = payload as ShowLinkPastePanelPayload;\n    return controller.command('showLinkPastePanel', text, getLinkInfo);\n  }\n\n  if (type === LINK_OPEN) {\n    const { href } = payload as OpenLinkPayload;\n    return controller.command('openLink', href);\n  }\n\n  return next();\n}\n"],"file":"onAction.js"}