{"version":3,"sources":["../../../../../src/plugins/link/utils/isSelectionInLink.ts"],"names":["isSelectionInLink","value","document","selection","startKey","getStart","key","linkBlock","getClosest","node","Inline","isInline","type","Boolean","tryGetSelectedLinkPlaceholder","placeholder","linkNode","data","href","text"],"mappings":";;;;;;;;AAAA;;AAGe,SAASA,iBAAT,CAA2BC,KAA3B,EAAyC;AACtD,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AAED,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BF,KAAhC;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAO,KAAP;AACD;;AAED,QAAMC,QAAQ,GAAGD,SAAS,CAACE,QAAV,CAAmBH,QAAnB,EAA6BI,GAA9C;;AAEA,MAAI,CAACF,QAAL,EAAe;AACb,WAAO,KAAP;AACD;;AAED,QAAMG,SAAS,GAAGL,QAAQ,CAACM,UAAT,CAChBJ,QADgB,EAEfK,IAAD,IAAUC,oBAAOC,QAAP,CAAgBF,IAAhB,KAAyBA,IAAI,CAACG,IAAL,KAAc,MAFjC,CAAlB;AAKA,SAAOC,OAAO,CAACN,SAAD,CAAd;AACD;;AAEM,SAASO,6BAAT,CAAuCb,KAAvC,EAAqDc,WAArD,EAAyF;AAC9F,MAAI,CAACd,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AAED,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BF,KAAhC;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,QAAMC,QAAQ,GAAGD,SAAS,CAACE,QAAV,CAAmBH,QAAnB,EAA6BI,GAA9C;;AAEA,MAAI,CAACF,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,QAAMY,QAAQ,GAAGd,QAAQ,CAACM,UAAT,CACfJ,QADe,EAEdK,IAAD,IAAUC,oBAAOC,QAAP,CAAgBF,IAAhB,KAAyBA,IAAI,CAACG,IAAL,KAAc,MAAvC,IACLH,IAAI,CAACQ,IAAL,CAAUC,IAAV,KAAmB,EADd,IACoBT,IAAI,CAACU,IAAL,KAAcJ,WAH7B,CAAjB;AAMA,SAAOC,QAAP;AACD","sourcesContent":["import { Value, Inline, Block } from '@ali/4ever-cangjie';\nimport { LinkNode } from '../types';\n\nexport default function isSelectionInLink(value: Value) {\n  if (!value) {\n    return false;\n  }\n\n  const { document, selection } = value;\n\n  if (!selection) {\n    return false;\n  }\n\n  const startKey = selection.getStart(document).key;\n\n  if (!startKey) {\n    return false;\n  }\n\n  const linkBlock = document.getClosest(\n    startKey,\n    (node) => Inline.isInline(node) && node.type === 'link',\n  ) as Block;\n\n  return Boolean(linkBlock);\n}\n\nexport function tryGetSelectedLinkPlaceholder(value: Value, placeholder: string): LinkNode|null {\n  if (!value) {\n    return null;\n  }\n\n  const { document, selection } = value;\n\n  if (!selection) {\n    return null;\n  }\n\n  const startKey = selection.getStart(document).key;\n\n  if (!startKey) {\n    return null;\n  }\n\n  const linkNode = document.getClosest(\n    startKey,\n    (node) => Inline.isInline(node) && node.type === 'link'\n      && node.data.href === '' && node.text === placeholder,\n  ) as LinkNode;\n\n  return linkNode;\n}\n"],"file":"isSelectionInLink.js"}