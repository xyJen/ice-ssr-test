{"version":3,"sources":["../../../../../src/plugins/link/utils/isSelectionInLinkCard.ts"],"names":["isSelectionInLinkCard","value","document","selection","injections","start","getStart","startKey","key","linkNode","getClosest","node","isTextPoint","textNode","getNode","isText","injection","find","i","range","data","startOffset","endOffset","offset"],"mappings":";;;;;;;AACA;;AAGe,SAASA,qBAAT,CAA+BC,KAA/B,EAA6C;AAC1D,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AAED,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAsCH,KAA5C;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAO,KAAP;AACD;;AAED,QAAME,KAAK,GAAGF,SAAS,CAACG,QAAV,CAAmBJ,QAAnB,CAAd;AACA,QAAMK,QAAQ,GAAGF,KAAK,CAACG,GAAvB;;AAEA,MAAI,CAACD,QAAL,EAAe;AACb,WAAO,KAAP;AACD;;AAED,QAAME,QAAQ,GAAGP,QAAQ,CAACQ,UAAT,CACfH,QADe,EAEdI,IAAD,IAAU,gCAAeA,IAAf,EAAqBP,UAArB,CAFK,CAAjB;;AAKA,MAAIK,QAAJ,EAAc;AACZ,WAAO,IAAP;AACD,GAzByD,CA2B1D;;;AACA,MAAIJ,KAAK,CAACO,WAAN,EAAJ,EAAyB;AACvB,UAAMC,QAAQ,GAAGX,QAAQ,CAACY,OAAT,CAAiBP,QAAjB,CAAjB;;AACA,QAAIM,QAAQ,IAAIA,QAAQ,CAACE,MAAT,EAAZ,IAAiC,gCAAeF,QAAf,EAAyBT,UAAzB,CAArC,EAA2E;AACzE,YAAMY,SAAS,GAAGZ,UAAU,CAACa,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACV,GAAF,KAAUK,QAAQ,CAACL,GAA1C,CAAlB;AACA,YAAMW,KAAK,GAAGH,SAAS,EAAEI,IAAX,EAAiBD,KAA/B;;AACA,UAAIA,KAAJ,EAAW;AACT,cAAM;AAAEE,UAAAA,WAAF;AAAeC,UAAAA;AAAf,YAA6BH,KAAnC;AACA,eAAOd,KAAK,CAACkB,MAAN,GAAeF,WAAf,IAA8BhB,KAAK,CAACkB,MAAN,GAAeD,SAApD;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["import { Value } from '@ali/4ever-cangjie';\nimport { isLinkCardNode } from './isLinkCard';\nimport { IRange } from '../types';\n\nexport default function isSelectionInLinkCard(value: Value) {\n  if (!value) {\n    return false;\n  }\n\n  const { document, selection, injections } = value;\n\n  if (!selection) {\n    return false;\n  }\n\n  const start = selection.getStart(document);\n  const startKey = start.key;\n\n  if (!startKey) {\n    return false;\n  }\n\n  const linkNode = document.getClosest(\n    startKey,\n    (node) => isLinkCardNode(node, injections),\n  );\n\n  if (linkNode) {\n    return true;\n  }\n\n  // 对于 purelink 展示位 loading 卡片的瞬时状态，判断 start 的 offset 是否在范围内\n  if (start.isTextPoint()) {\n    const textNode = document.getNode(startKey);\n    if (textNode && textNode.isText() && isLinkCardNode(textNode, injections)) {\n      const injection = injections.find((i) => i.key === textNode.key);\n      const range = injection?.data?.range as IRange;\n      if (range) {\n        const { startOffset, endOffset } = range;\n        return start.offset > startOffset && start.offset < endOffset;\n      }\n    }\n  }\n\n  return false;\n}\n"],"file":"isSelectionInLinkCard.js"}