"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPositionTopRight = getPositionTopRight;
exports.getPositionTopLeft = getPositionTopLeft;
exports.offsetY = void 0;

var _everBamboo = require("@ali/4ever-bamboo");

// 这里的魔数是卡片状态下呼出编辑框的 ui 高度设置: 距离工具栏浮层高度为 4px
const CARD_OFFSETY = 34;
const offsetY = -(_everBamboo.theme.link.height - CARD_OFFSETY);
exports.offsetY = offsetY;

function getPositionTopRight(containerRect, triggerRect, portalRect) {
  const {
    height,
    width
  } = portalRect;
  const baseTop = triggerRect.bottom - containerRect.top;
  const baseRight = triggerRect.right - containerRect.left; // 计算底部剩余空间，若剩余空间能够容纳 portal，则向下展示 portal
  // 如果下方剩余空间无法容纳 portal，还需要判断上方空间能否容纳
  // 若上方也无法容纳(triggerTop < height)，则仍然放到下方
  // 左右则优先放右对齐，不够之后向右偏移

  const bottomSpace = containerRect.height - baseTop;
  const leftSpace = triggerRect.right - containerRect.left;
  const triggerTop = triggerRect.top - containerRect.top;
  const top = bottomSpace < height && triggerTop > height ? triggerTop - height - 4 // 放到上方
  : baseTop + offsetY;
  const left = triggerRect.right < width ? baseRight - leftSpace + 4 : baseRight - width;
  return {
    left,
    top
  };
}

function getPositionTopLeft(containerRect, triggerRect, portalRect) {
  const {
    height,
    width
  } = portalRect;
  const baseTop = triggerRect.bottom - containerRect.top;
  const baseLeft = triggerRect.left - containerRect.left; // 计算底部剩余空间，若剩余空间能够容纳 portal，则向下展示 portal
  // 如果下方剩余空间无法容纳 portal，还需要判断上方空间能否容纳
  // 若上方也无法容纳(triggerRect.top < height)，则仍然放到下方
  // 左右则优先做对齐，不够之后向左偏移

  const bottomSpace = containerRect.height - baseTop;
  const rightSpace = containerRect.width - baseLeft;
  const triggerTop = triggerRect.top - containerRect.top;
  const triggerRight = triggerRect.right - containerRect.left;
  const top = bottomSpace < height && triggerTop > height ? triggerTop - height - 4 // 放到上方
  : baseTop + offsetY;
  const left = rightSpace < width && triggerRight > width ? baseLeft - width + rightSpace - 4 : baseLeft;
  return {
    left,
    top
  };
}
//# sourceMappingURL=getPosition.js.map