{"version":3,"sources":["../../../../../src/plugins/link/utils/isLinkCard.ts"],"names":["isLinkCardNode","node","injections","isLinkNode","data","cardInfo","displayType","length","injection","find","i","key","Inline","isInline","type"],"mappings":";;;;;;;;AAAA;;AAGO,SAASA,cAAT,CAAwBC,IAAxB,EAAoCC,UAApC,EAAgF;AACrF,MAAIC,UAAU,CAACF,IAAD,CAAd,EAAsB;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAWH,IAAjB;;AACA,QAAIG,IAAI,IAAIA,IAAI,CAACC,QAAL,EAAeC,WAAf,KAA+B,MAA3C,EAAmD;AACjD,aAAO,IAAP;AACD;AACF,GANoF,CAOrF;;;AACA,MAAIJ,UAAU,IAAIA,UAAU,CAACK,MAAX,GAAoB,CAAtC,EAAyC;AACvC,UAAMC,SAAS,GAAGN,UAAU,CAACO,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUV,IAAI,CAACU,GAAtC,CAAlB;;AACA,QAAIH,SAAS,IAAIA,SAAS,CAACJ,IAAV,EAAgBC,QAAhB,EAA0BC,WAA1B,KAA0C,MAA3D,EAAmE;AACjE,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;;AAEM,SAASH,UAAT,CAAoBF,IAApB,EAAiD;AACtD,MAAIA,IAAI,IAAIW,oBAAOC,QAAP,CAAgBZ,IAAhB,CAAR,IAAiCA,IAAI,CAACa,IAAL,KAAc,MAAnD,EAA2D;AACzD,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["import { Node, Inline, Injection } from '@ali/4ever-cangjie';\nimport { LinkNode } from '../types';\n\nexport function isLinkCardNode(node: Node, injections?: Injection[]): node is LinkNode {\n  if (isLinkNode(node)) {\n    const { data } = node;\n    if (data && data.cardInfo?.displayType === 'card') {\n      return true;\n    }\n  }\n  // node 注入有 displayType\n  if (injections && injections.length > 0) {\n    const injection = injections.find((i) => i.key === node.key);\n    if (injection && injection.data?.cardInfo?.displayType === 'card') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function isLinkNode(node: any): node is LinkNode {\n  if (node && Inline.isInline(node) && node.type === 'link') {\n    return true;\n  }\n\n  return false;\n}\n"],"file":"isLinkCard.js"}