{"version":3,"sources":["../../../../../src/plugins/link/commands/switchLinkDisplayType.ts"],"names":["switchLinkDisplayType","controller","node","displayType","href","cardInfo","data","originalType","command","Commands","setNodeByKey","key","type","moveToEndOfNode","removeinjectedCardInfo","moveToStartOfNextText","focus"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEe,SAASA,qBAAT,CACbC,UADa,EAEbC,IAFa,EAGbC,WAHa,EAIb;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAQ,GAAG;AAAnB,MAA0BH,IAAI,CAACI,IAArC;AACA,QAAMC,YAAY,GAAGF,QAAQ,EAAEF,WAAV,IAAyB,MAA9C,CAFA,CAIA;;AACA,MAAII,YAAY,KAAKJ,WAArB,EAAkC;AAChC;AACAF,IAAAA,UAAU,CAACO,OAAX,CAAmBC,sBAASC,YAA5B,EAA0CR,IAAI,CAACS,GAA/C,EAAoD;AAClDC,MAAAA,IAAI,EAAE,MAD4C;AAElDN,MAAAA,IAAI,EAAE;AAAEF,QAAAA,IAAF;AAAQC,QAAAA,QAAQ,EAAE,EAAE,GAAGA,QAAL;AAAeF,UAAAA;AAAf;AAAlB;AAF4C,KAApD,EAGGK,OAHH,CAGWC,sBAASI,eAHpB,EAGqCX,IAHrC;;AAIA,QAAIC,WAAW,KAAK,MAApB,EAA4B;AAC1B;AACAF,MAAAA,UAAU,CAACO,OAAX,CAAmBM,+BAAnB,EAA2CZ,IAA3C;AACD;AACF;;AACD,SAAOD,UAAU,CAACO,OAAX,CAAmBC,sBAASM,qBAA5B,EAAmDP,OAAnD,CAA2DC,sBAASO,KAApE,CAAP;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { LinkDisplayType, LinkNode } from '../types';\nimport removeinjectedCardInfo from './removeinjectedCardInfo';\n\nexport default function switchLinkDisplayType(\n  controller: Controller,\n  node: LinkNode,\n  displayType: LinkDisplayType,\n) {\n  const { href, cardInfo = {} } = node.data;\n  const originalType = cardInfo?.displayType ?? 'link';\n\n  // 更新需要控制粒度，避免生成额外 op\n  if (originalType !== displayType) {\n    // 如果更新了卡片信息\n    controller.command(Commands.setNodeByKey, node.key, {\n      type: 'link',\n      data: { href, cardInfo: { ...cardInfo, displayType } },\n    }).command(Commands.moveToEndOfNode, node);\n    if (displayType === 'link') {\n      // 样式切换为链接时，清理节点的 injection 内容\n      controller.command(removeinjectedCardInfo, node);\n    }\n  }\n  return controller.command(Commands.moveToStartOfNextText).command(Commands.focus);\n}\n"],"file":"switchLinkDisplayType.js"}