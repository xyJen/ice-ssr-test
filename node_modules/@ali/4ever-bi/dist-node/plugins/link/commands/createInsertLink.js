"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createInsertLink;

var _everCangjie = require("@ali/4ever-cangjie");

var _everMo = require("@ali/4ever-mo");

var _wrapLink = _interopRequireDefault(require("./wrapLink"));

var _utils = require("../utils");

var _linkStore = require("../utils/linkStore");

function createInsertLink(locale) {
  return function insertLink(controller, href) {
    const text = locale.addLinkPlaceholder;
    const {
      selection,
      document
    } = controller.value;

    if (!selection || (0, _utils.isSelectionInLink)(controller.value)) {
      return controller;
    }

    const {
      focus
    } = selection;

    const wordRange = _everCangjie.RangeSelection.selectWordAtPoint(document, focus);

    if (wordRange && focus.isTextPoint() && wordRange.isExpanded && wordRange.focus.offset !== focus.offset && wordRange.anchor.offset !== focus.offset) {
      controller.command(_everCangjie.Commands.select, wordRange).command(_wrapLink.default, {
        href
      });
    } else {
      controller.command(_everCangjie.Commands.insertInline, {
        type: 'link',
        nodes: [_everCangjie.Text.create(text)],
        data: {
          href
        }
      });
    }

    const linkNode = controller.value.inlines.find(inline => _everMo.Link.isLink(inline));

    if (!href && linkNode) {
      (0, _linkStore.setJustCreated)(linkNode.key, true);
    }

    return controller;
  };
}
//# sourceMappingURL=createInsertLink.js.map