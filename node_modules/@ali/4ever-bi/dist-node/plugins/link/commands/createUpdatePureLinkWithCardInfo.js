"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createFetchLinkInfo;

var _everCangjie = require("@ali/4ever-cangjie");

var _removePureLink = _interopRequireDefault(require("./removePureLink"));

var _injectCardInfo = _interopRequireDefault(require("./injectCardInfo"));

var _removeinjectedCardInfo = _interopRequireDefault(require("./removeinjectedCardInfo"));

var _updateLinkCardInfo = _interopRequireDefault(require("./updateLinkCardInfo"));

function createFetchLinkInfo(getLinkInfo) {
  async function fetchLinkData(node, controller, href, text) {
    if (getLinkInfo && typeof getLinkInfo === 'function') {
      // 先设置卡片状态为 loading，并且为节点注入信息，处理交互兼容
      controller.command(_injectCardInfo.default, node, {
        displayType: 'card'
      }); // 展示卡片

      try {
        const info = await getLinkInfo(href);

        if (info) {
          // 请求成功
          const {
            imgURL = '',
            title = '',
            desc = ''
          } = info;
          const cardInfo = {
            imgURL,
            title,
            desc,
            displayType: 'card'
          }; // 清理注入信息

          controller.command(_removeinjectedCardInfo.default, node).command(_updateLinkCardInfo.default, node, text, href, cardInfo);
          return;
        }
      } catch (e) {} finally {
        // 清理注入信息
        controller.command(_removeinjectedCardInfo.default, node);
      }
    }
  }

  return function updatePureLink(controller, node, offset, text, href, srcHref, cardInfo, needFetchLinkInfo) {
    const originText = controller.query('getText', {
      node
    }) || ''; // 将 pure link 转换为 text link

    if (text !== originText || srcHref !== href || cardInfo) {
      const nodeText = text.length ? text : href;
      const {
        selection
      } = controller.value;
      const range = selection.moveToStartOfNode(node, controller).moveForward(offset);

      if (cardInfo) {
        // 如果更新了卡片信息
        const inline = _everCangjie.Inline.create({
          type: 'link',
          data: {
            href,
            cardInfo: { ...cardInfo
            }
          },
          nodes: [_everCangjie.Text.create(nodeText)]
        });

        (0, _removePureLink.default)(controller, node, offset, srcHref).command(_everCangjie.Commands.insertInlineAtRange, range, inline);

        if (needFetchLinkInfo) {
          fetchLinkData(inline, controller, href, text);
        }

        return controller;
      } else {
        const inline = _everCangjie.Inline.create({
          type: 'link',
          data: {
            href
          },
          nodes: [_everCangjie.Text.create(nodeText)]
        });

        return (0, _removePureLink.default)(controller, node, offset, srcHref).command(_everCangjie.Commands.insertInlineAtRange, range, inline);
      }
    }

    return controller;
  };
}
//# sourceMappingURL=createUpdatePureLinkWithCardInfo.js.map