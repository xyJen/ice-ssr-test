{"version":3,"sources":["../../../../../src/plugins/link/commands/createInsertLink.ts"],"names":["createInsertLink","locale","insertLink","controller","href","text","addLinkPlaceholder","selection","document","value","focus","wordRange","RangeSelection","selectWordAtPoint","isTextPoint","isExpanded","offset","anchor","command","Commands","select","wrapLink","insertInline","type","nodes","Text","create","data","linkNode","inlines","find","inline","Link","isLink","key"],"mappings":";;;;;;;;;AAAA;;AAQA;;AAEA;;AACA;;AACA;;AAEe,SAASA,gBAAT,CACbC,MADa,EAEJ;AACT,SAAO,SAASC,UAAT,CAAoBC,UAApB,EAA4CC,IAA5C,EAA0D;AAC/D,UAAMC,IAAI,GAAGJ,MAAM,CAACK,kBAApB;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0BL,UAAU,CAACM,KAA3C;;AACA,QAAI,CAACF,SAAD,IAAc,8BAAkBJ,UAAU,CAACM,KAA7B,CAAlB,EAAuD;AACrD,aAAON,UAAP;AACD;;AAED,UAAM;AAAEO,MAAAA;AAAF,QAAYH,SAAlB;;AACA,UAAMI,SAAS,GAAGC,4BAAeC,iBAAf,CAAiCL,QAAjC,EAA2CE,KAA3C,CAAlB;;AAEA,QACEC,SAAS,IACTD,KAAK,CAACI,WAAN,EADA,IAEAH,SAAS,CAACI,UAFV,IAGCJ,SAAS,CAACD,KAAX,CAA+BM,MAA/B,KAA0CN,KAAK,CAACM,MAHhD,IAICL,SAAS,CAACM,MAAX,CAAgCD,MAAhC,KAA2CN,KAAK,CAACM,MALnD,EAME;AACAb,MAAAA,UAAU,CACPe,OADH,CACWC,sBAASC,MADpB,EAC4BT,SAD5B,EAEGO,OAFH,CAEWG,iBAFX,EAEqB;AAAEjB,QAAAA;AAAF,OAFrB;AAGD,KAVD,MAUO;AACLD,MAAAA,UAAU,CAACe,OAAX,CAAmBC,sBAASG,YAA5B,EAA0C;AACxCC,QAAAA,IAAI,EAAE,MADkC;AAExCC,QAAAA,KAAK,EAAE,CAACC,kBAAKC,MAAL,CAAYrB,IAAZ,CAAD,CAFiC;AAGxCsB,QAAAA,IAAI,EAAE;AACJvB,UAAAA;AADI;AAHkC,OAA1C;AAOD;;AACD,UAAMwB,QAAQ,GAAGzB,UAAU,CAACM,KAAX,CAAiBoB,OAAjB,CAAyBC,IAAzB,CAA+BC,MAAD,IAAYC,aAAKC,MAAL,CAAYF,MAAZ,CAA1C,CAAjB;;AACA,QAAI,CAAC3B,IAAD,IAASwB,QAAb,EAAuB;AACrB,qCAAeA,QAAQ,CAACM,GAAxB,EAA6B,IAA7B;AACD;;AACD,WAAO/B,UAAP;AACD,GAlCD;AAmCD","sourcesContent":["import {\n  Command,\n  Controller,\n  Commands,\n  Text,\n  RangeSelection,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport { Link } from '@ali/4ever-mo';\nimport { LinkPluginConfig } from '../types';\nimport wrapLink from './wrapLink';\nimport { isSelectionInLink } from '../utils';\nimport { setJustCreated } from '../utils/linkStore';\n\nexport default function createInsertLink(\n  locale: LinkPluginConfig['locale'],\n): Command {\n  return function insertLink(controller: Controller, href: string) {\n    const text = locale.addLinkPlaceholder;\n    const { selection, document } = controller.value;\n    if (!selection || isSelectionInLink(controller.value)) {\n      return controller;\n    }\n\n    const { focus } = selection;\n    const wordRange = RangeSelection.selectWordAtPoint(document, focus);\n\n    if (\n      wordRange &&\n      focus.isTextPoint() &&\n      wordRange.isExpanded &&\n      (wordRange.focus as TextPoint).offset !== focus.offset &&\n      (wordRange.anchor as TextPoint).offset !== focus.offset\n    ) {\n      controller\n        .command(Commands.select, wordRange)\n        .command(wrapLink, { href });\n    } else {\n      controller.command(Commands.insertInline, {\n        type: 'link',\n        nodes: [Text.create(text)],\n        data: {\n          href,\n        },\n      });\n    }\n    const linkNode = controller.value.inlines.find((inline) => Link.isLink(inline));\n    if (!href && linkNode) {\n      setJustCreated(linkNode.key, true);\n    }\n    return controller;\n  };\n}\n"],"file":"createInsertLink.js"}