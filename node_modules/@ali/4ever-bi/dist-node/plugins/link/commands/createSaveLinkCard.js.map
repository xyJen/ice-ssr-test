{"version":3,"sources":["../../../../../src/plugins/link/commands/createSaveLinkCard.ts"],"names":["isCardStyle","node","data","cardInfo","displayType","createSaveLinkCard","getLinkInfo","fetchLinkData","controller","href","text","command","injectCardInfo","info","imgURL","title","desc","removeinjectedCardInfo","updateLinkCardInfo","e","saveLinkCard","refinedNode","value","document","getNode","key"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AAEA,MAAMA,WAAW,GAAIC,IAAD,IAAoB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,IAAjB;AACA,SAAOC,IAAI,IAAIA,IAAI,CAACC,QAAL,EAAeC,WAAf,KAA+B,MAA9C;AACD,CAHD;;AAKe,SAASC,kBAAT,CACbC,WADa,EAEJ;AAET,iBAAeC,aAAf,CAA6BN,IAA7B,EAA2CO,UAA3C,EAAmEC,IAAnE,EAAiFC,IAAjF,EAA+F;AAC7F,QAAIJ,WAAW,IAAI,OAAOA,WAAP,KAAuB,UAA1C,EAAsD;AACpD;AACAE,MAAAA,UAAU,CAACG,OAAX,CAAmBC,uBAAnB,EAAmCX,IAAnC,EAAyC;AAAEG,QAAAA,WAAW,EAAE;AAAf,OAAzC,EAFoD,CAGpD;;AACA,UAAI;AACF,cAAMS,IAAI,GAAG,MAAMP,WAAW,CAACG,IAAD,CAA9B;;AACA,YAAII,IAAJ,EAAU;AACR;AACA,gBAAM;AAAEC,YAAAA,MAAM,GAAG,EAAX;AAAeC,YAAAA,KAAK,GAAG,EAAvB;AAA2BC,YAAAA,IAAI,GAAG;AAAlC,cAAyCH,IAA/C;AACA,gBAAMV,QAAuB,GAAG;AAAEW,YAAAA,MAAF;AAAUC,YAAAA,KAAV;AAAiBC,YAAAA,IAAjB;AAAuBZ,YAAAA,WAAW,EAAE;AAApC,WAAhC,CAHQ,CAIR;;AACAI,UAAAA,UAAU,CAACG,OAAX,CAAmBM,+BAAnB,EAA2ChB,IAA3C,EACGU,OADH,CACWO,2BADX,EAC+BjB,IAD/B,EACqCS,IADrC,EAC2CD,IAD3C,EACiDN,QADjD;AAEA;AACD;AACF,OAXD,CAWE,OAAOgB,CAAP,EAAU;AACV;AAEA;AACAX,QAAAA,UAAU,CAACG,OAAX,CAAmBO,2BAAnB,EAAuCjB,IAAvC,EAA6CS,IAA7C,EAAmDD,IAAnD,EAAyD;AAAEL,UAAAA,WAAW,EAAE;AAAf,SAAzD;AACD,OAhBD,SAgBU;AACR;AACAI,QAAAA,UAAU,CAACG,OAAX,CAAmBM,+BAAnB,EAA2ChB,IAA3C;AACD;AACF;AACF;;AAED,SAAO,SAASmB,YAAT,CACLZ,UADK,EAELP,IAFK,EAGLS,IAHK,EAILD,IAJK,EAKL;AACA;AACA;AACA,QAAIY,WAAW,GAAGpB,IAAlB;;AACA,QAAI,uBAAWA,IAAX,KAAoB,CAACD,WAAW,CAACC,IAAD,CAApC,EAA4C;AAC1CO,MAAAA,UAAU,CAACG,OAAX,CAAmBO,2BAAnB,EAAuCjB,IAAvC,EAA6CS,IAA7C,EAAmDD,IAAnD,EAAyD;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAzD;AACAiB,MAAAA,WAAW,GAAGb,UAAU,CAACc,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCvB,IAAI,CAACwB,GAAvC,CAAd;AACD;;AAEDlB,IAAAA,aAAa,CAACc,WAAD,EAAcb,UAAd,EAA0BC,IAA1B,EAAgCC,IAAhC,CAAb;AAEA,WAAOF,UAAP;AACD,GAjBD;AAkBD","sourcesContent":["import { Controller, Inline, Command } from '@ali/4ever-cangjie';\nimport injectCardInfo from './injectCardInfo';\nimport removeinjectedCardInfo from './removeinjectedCardInfo';\nimport updateLinkCardInfo from './updateLinkCardInfo';\nimport { ILinkCardInfo, LinkPluginConfig, LinkNode } from '../types';\nimport { isLinkNode } from '../utils';\n\nconst isCardStyle = (node: LinkNode) => {\n  const { data } = node;\n  return data && data.cardInfo?.displayType === 'card';\n}\n\nexport default function createSaveLinkCard(\n  getLinkInfo?: LinkPluginConfig['getLinkInfo'],\n): Command {\n\n  async function fetchLinkData(node: Inline, controller: Controller, href: string, text: string) {\n    if (getLinkInfo && typeof getLinkInfo === 'function') {\n      // 先设置卡片状态为 loading，并且为节点注入信息，处理交互兼容\n      controller.command(injectCardInfo, node, { displayType: 'card' });\n      // 展示卡片\n      try {\n        const info = await getLinkInfo(href);\n        if (info) {\n          // 请求成功\n          const { imgURL = '', title = '', desc = '' } = info;\n          const cardInfo: ILinkCardInfo = { imgURL, title, desc, displayType: 'card' };\n          // 清理注入信息\n          controller.command(removeinjectedCardInfo, node)\n            .command(updateLinkCardInfo, node, text, href, cardInfo);\n          return;\n        }\n      } catch (e) {\n        // 获取信息失败，不添加任何数据\n        console.debug(e);\n        // 设置卡片imgURL, title, desc 为 undefined\n        controller.command(updateLinkCardInfo, node, text, href, { displayType: 'card' });\n      } finally {\n        // 清理注入信息\n        controller.command(removeinjectedCardInfo, node);\n      }\n    }\n  }\n\n  return function saveLinkCard(\n    controller: Controller,\n    node: Inline,\n    text: string,\n    href: string,\n  ) {\n    // 如果卡片原来是链接形式，需要先转为卡片形式，再获取信息，避免排版问题\n    // todo 排版 2.0 后清理下面代码\n    let refinedNode = node;\n    if (isLinkNode(node) && !isCardStyle(node)) {\n      controller.command(updateLinkCardInfo, node, text, href, { displayType: 'card' });\n      refinedNode = controller.value.document.getNode(node.key) as Inline;\n    }\n\n    fetchLinkData(refinedNode, controller, href, text);\n\n    return controller;\n  };\n}\n\n"],"file":"createSaveLinkCard.js"}