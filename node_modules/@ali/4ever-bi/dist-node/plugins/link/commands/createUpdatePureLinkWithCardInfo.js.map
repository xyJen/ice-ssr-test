{"version":3,"sources":["../../../../../src/plugins/link/commands/createUpdatePureLinkWithCardInfo.ts"],"names":["createFetchLinkInfo","getLinkInfo","fetchLinkData","node","controller","href","text","command","injectCardInfo","displayType","info","imgURL","title","desc","cardInfo","removeinjectedCardInfo","updateLinkCardInfo","e","updatePureLink","offset","srcHref","needFetchLinkInfo","originText","query","nodeText","length","selection","value","range","moveToStartOfNode","moveForward","inline","Inline","create","type","data","nodes","Text","Commands","insertInlineAtRange"],"mappings":"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","sourcesContent":["import { Controller, Node, Commands, Text, RangeSelection, Point, Inline, Command } from '@ali/4ever-cangjie';\nimport removePureLink from './removePureLink';\nimport injectCardInfo from './injectCardInfo';\nimport removeinjectedCardInfo from './removeinjectedCardInfo';\nimport updateLinkCardInfo from './updateLinkCardInfo';\nimport { ILinkCardInfo, LinkPluginConfig } from '../types';\n\nexport default function createFetchLinkInfo(\n  getLinkInfo?: LinkPluginConfig['getLinkInfo'],\n): Command {\n\n  async function fetchLinkData(node: Inline, controller: Controller, href: string, text: string) {\n    if (getLinkInfo && typeof getLinkInfo === 'function') {\n      // 先设置卡片状态为 loading，并且为节点注入信息，处理交互兼容\n      controller.command(injectCardInfo, node, { displayType: 'card' });\n      // 展示卡片\n      try {\n        const info = await getLinkInfo(href);\n        if (info) {\n          // 请求成功\n          const { imgURL = '', title = '', desc = '' } = info;\n          const cardInfo: ILinkCardInfo = { imgURL, title, desc, displayType: 'card' };\n          // 清理注入信息\n          controller.command(removeinjectedCardInfo, node)\n            .command(updateLinkCardInfo, node, text, href, cardInfo);\n          return;\n        }\n      } catch (e) {\n        // 获取信息失败，不添加任何数据\n        console.debug(e);\n      } finally {\n        // 清理注入信息\n        controller.command(removeinjectedCardInfo, node);\n      }\n    }\n  }\n\n  return function updatePureLink(\n    controller: Controller,\n    node: Node,\n    offset: number,\n    text: string,\n    href: string,\n    srcHref: string,\n    cardInfo?: ILinkCardInfo,\n    needFetchLinkInfo?: boolean\n  ) {\n    const originText = controller.query('getText', { node }) || '';\n    // 将 pure link 转换为 text link\n    if (text !== originText || srcHref !== href || cardInfo) {\n      const nodeText = text.length ? text : href;\n      const { selection } = controller.value;\n      const range = selection\n        .moveToStartOfNode(node, controller)\n        .moveForward(offset);\n      if (cardInfo) {\n        // 如果更新了卡片信息\n        const inline = Inline.create({\n          type: 'link',\n          data: { href, cardInfo: { ...cardInfo } },\n          nodes: [Text.create(nodeText)],\n        });\n        removePureLink(controller, node, offset, srcHref).command(Commands.insertInlineAtRange, range, inline);\n        if (needFetchLinkInfo) {\n          fetchLinkData(inline, controller, href, text);\n        }\n        return controller;\n      } else {\n        const inline = Inline.create({\n          type: 'link',\n          data: { href },\n          nodes: [Text.create(nodeText)],\n        });\n        return removePureLink(controller, node, offset, srcHref).command(Commands.insertInlineAtRange, range, inline);\n      }\n    }\n\n    return controller;\n  }\n}\n\n"],"file":"createUpdatePureLinkWithCardInfo.js"}