{"version":3,"sources":["../../../../../src/plugins/link/commands/createUnwrapLink.ts"],"names":["createUnwrapLink","protocolAllowList","linkify","unwrapLink","controller","selection","document","inlines","focusInline","value","shrinkRangeSelection","shrinkBoundary","start","getStart","end","getEnd","startText","getNode","key","endText","isCollapsed","Link","isLink","href","data","text","trim","test","unlinkRangeSelection","RangeSelection","create","anchor","Point","createFromParams","focus","length","command","Commands","addMarkAtRange","Mark","type","unwrapInline","offset","startInline","getClosest","endInline","startKey","startOffset","endKey","endOffset","preText","getPreviousText","changedPreText","fromStart","unwrapText","getNextText","select","fromJSON","wrapInline","moveToEndOfPreviousText","moveToEnd","allLinks","filter","moveToEndOfInline"],"mappings":"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","sourcesContent":["import { Controller, Commands, RangeSelection, Point, Mark, TextPoint, Element } from '@ali/4ever-cangjie';\nimport { Link } from '@ali/4ever-mo';\nimport { createLinkify } from '@ali/4ever-utils';\nimport { LinkPluginConfig } from '../types';\nimport { isLink } from '../utils';\n\nexport default function createUnwrapLink(\n  protocolAllowList?: LinkPluginConfig['protocolAllowList'],\n) {\n  const linkify = createLinkify(protocolAllowList);\n\n  return function unwrapLink(controller: Controller) {\n    const { selection, document, inlines, focusInline } = controller.value;\n    const shrinkRangeSelection = selection!.shrinkBoundary(document);\n    const start = shrinkRangeSelection.getStart(document) as TextPoint;\n    const end = shrinkRangeSelection.getEnd(document) as TextPoint;\n    const startText = document.getNode(start.key);\n    const endText = document.getNode(end.key);\n\n    // 1. 闭合选区\n    if (shrinkRangeSelection.isCollapsed) {\n      if (Link.isLink(focusInline)) {\n        const { href } = focusInline.data;\n        const text = focusInline.text.trim();\n        if (text === href.trim() && linkify.test(text)) {\n          // Rule: 避免 link 中的 text 是一个合法的 url，导致 unwrapInline 后继续被 decorate 识别\n          const unlinkRangeSelection = RangeSelection.create({\n            anchor: Point.createFromParams(start.key, 0),\n            focus: Point.createFromParams(endText!.key, endText!.text.length),\n          });\n          controller.command(Commands.addMarkAtRange, unlinkRangeSelection, Mark.create({ type: 'unlink' }));\n        }\n      }\n      controller.command(Commands.focus).command(Commands.unwrapInline, 'link');\n      return controller;\n    }\n\n    // 2. 选区跟link完全一致\n    if (startText!.key === start.key &&\n      start.offset === 0 &&\n      endText!.key === end.key &&\n      end.offset === endText!.text.length) {\n      if (Link.isLink(focusInline)) {\n        const text = focusInline.text.trim();\n        if (linkify.test(text)) {\n          // Rule: 避免 link 中的 text 是一个合法的 url，导致 unwrapInline 后继续被 decorate 识别\n          const unlinkRangeSelection = RangeSelection.create({\n            anchor: Point.createFromParams(start.key, 0),\n            focus: Point.createFromParams(endText!.key, endText!.text.length),\n          });\n          controller.command(Commands.addMarkAtRange, unlinkRangeSelection, Mark.create({ type: 'unlink' }));\n        }\n      }\n      controller.command(Commands.focus).command(Commands.unwrapInline, 'link');\n      return controller;\n    }\n    // 3. 选区在inline内，且要么在开头，要么在结束\n    const startInline = document.getClosest(start.key, isLink);\n    const endInline = document.getClosest(end.key, isLink) as Element;\n    if (startInline &&\n      endInline &&\n      startInline.key === endInline.key &&\n      (start.offset === 0 || end.offset === endText!.text.length)) {\n      controller.command(Commands.unwrapInline, 'link');\n      let startKey: string | null = null;\n      let startOffset: number | null = null;\n      let endKey: string | null = null;\n      let endOffset: number | null = null;\n      const preText = document.getPreviousText(start.key);\n      const changedPreText = controller.value.document.getNode(preText!.key);\n      const fromStart = start.offset === 0;\n      if (changedPreText!.text.length === preText!.text.length) {\n        // 说明preText本身也在一个inline元素中，unwrapInline的数据没有合并到preText中\n        const unwrapText = controller.value.document.getNextText(changedPreText!.key);\n        startKey = unwrapText!.key;\n        startOffset = fromStart ? end.offset : 0;\n        endKey = startKey;\n        endOffset = fromStart ? endInline.text.length : start.offset;\n      } else {\n        startKey = changedPreText!.key;\n        startOffset = fromStart ? (preText!.text.length + end.offset) : preText!.text.length;\n        endKey = startKey;\n        endOffset = fromStart ? (preText!.text.length + endInline.text.length) : (preText!.text.length + start.offset);\n      }\n      if (startKey && endKey) {\n        controller.command(Commands.select, RangeSelection.fromJSON({\n          anchor: { key: startKey, offset: startOffset },\n          focus: { key: endKey, offset: endOffset },\n        })).command(Commands.wrapInline, { type: 'link', data: endInline.data })\n          .command(fromStart ? Commands.moveToEndOfPreviousText : Commands.moveToEnd);\n      }\n      return controller;\n    }\n    controller.command(Commands.focus).command(Commands.unwrapInline, 'link');\n    const allLinks = inlines.filter(isLink);\n    const data = allLinks.length === 1 ? allLinks[0].data : { href: '' };\n    // 跟yuque交互保持一直，当选中区域中存在link且同时存在非link选区时，取消选区内所有的链接，同时将选区设置为新的link\n    controller\n      .command(Commands.wrapInline, {\n        type: 'link',\n        data,\n      })\n      .command(Commands.focus)\n      .command(Commands.moveToEndOfInline);\n    return controller;\n  };\n}\n"],"file":"createUnwrapLink.js"}