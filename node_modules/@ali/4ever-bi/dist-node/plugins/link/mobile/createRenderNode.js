"use strict";

var _interopRequireWildcard3 = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createRenderNode;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _interopRequireWildcard2 = _interopRequireDefault(require("@babel/runtime/helpers/interopRequireWildcard"));

var React = _interopRequireWildcard3(require("react"));

var _everComponent = require("@ali/4ever-component");

var _link = _interopRequireDefault(require("./link"));

var _utils = require("../utils");

const _createElement = /*#__PURE__*/React.createElement;

function createRenderNode(linkConfig) {
  const {
    locale,
    protocolAllowList,
    openLink
  } = linkConfig;
  const LazyLoad = linkConfig.lazyload || _everComponent.SimpleLazyLoad;
  const URLLinkCard = LazyLoad(() => Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('@ali/we-biz-link-card'))).then(({
    URLLinkCard
  }) => URLLinkCard));
  return {
    link: props => {
      const node = props.node;
      let linkType = 'link'; // 当 link 是卡片形式

      if ((0, _utils.isLinkCardNode)(node)) {
        const {
          cardInfo
        } = node.data;
        const {
          displayType
        } = cardInfo || {};

        if (displayType === 'card') {
          linkType = 'card';
        }
      }

      return (
        /*#__PURE__*/
        // @ts-ignore
        _createElement(_link.default, (0, _extends2.default)({}, props, {
          protocolAllowList: protocolAllowList || [],
          locale: locale,
          onOpenLink: openLink,
          URLLinkCard: URLLinkCard,
          displayType: linkType
        }))
      );
    }
  };
}
//# sourceMappingURL=createRenderNode.js.map