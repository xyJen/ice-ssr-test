"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everBamboo = require("@ali/4ever-bamboo");

var _createRenderNode = _interopRequireDefault(require("./createRenderNode"));

var _createRenderMark = _interopRequireDefault(require("./createRenderMark"));

var _contextMenu = _interopRequireDefault(require("./contextMenu"));

var _createCopyLink = _interopRequireDefault(require("../commands/createCopyLink"));

var _createOpenLink = _interopRequireDefault(require("../commands/createOpenLink"));

var actions = _interopRequireWildcard(require("../actions"));

var _createOnCangjiePaste = _interopRequireDefault(require("../handlers/createOnCangjiePaste"));

var _insertLink = _interopRequireDefault(require("./insertLink"));

var _zh_CN = _interopRequireDefault(require("../../../locales/zh_CN"));

var _onAction = _interopRequireDefault(require("../handlers/onAction"));

var _queries = require("./queries");

var _everPluginLink = require("@ali/4ever-plugin-link");

const commands = {
  insertLink: _insertLink.default
};

function createLinkPlugin(config) {
  const linkConfig = {
    protocolAllowList: ['http:', 'https:', 'dingtalk:', 'taobao:'],
    locale: _zh_CN.default.link.locale,
    ...(config.link || {})
  };
  const serializer = config.clipboard?.serializer;
  const plugin = { ...(0, _everPluginLink.moFactory)({}),
    commands: { ...commands,
      copyLink: (0, _createCopyLink.default)(serializer),
      openLink: (0, _createOpenLink.default)(linkConfig.protocolAllowList, linkConfig.openLink)
    },
    renderNode: (0, _createRenderNode.default)(linkConfig),
    contextMenu: (0, _contextMenu.default)(linkConfig),
    actions,
    // @ts-ignore
    onAction: _onAction.default,
    onCangjiePaste: (0, _createOnCangjiePaste.default)(config, linkConfig),
    queries: _queries.queries,
    models: {
      klass: 'inline',
      type: 'link'
    }
  }; // 支持 purelink 识别的情况下，添加 decorateNode 和 renderMark

  if (!linkConfig.disableTextRecognize) {
    // @ts-ignore
    plugin.decorateNode = _everBamboo.LinkPlugin.createDecorateNode(linkConfig.protocolAllowList || []);
    plugin.renderMark = (0, _createRenderMark.default)(linkConfig);
  }

  return plugin;
}

createLinkPlugin.actions = actions;
createLinkPlugin.commands = commands;
createLinkPlugin.queries = _queries.queries;
var _default = createLinkPlugin;
exports.default = _default;
//# sourceMappingURL=index.js.map