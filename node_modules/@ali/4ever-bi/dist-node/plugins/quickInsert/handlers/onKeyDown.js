"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onKeyDown;

var _isHotkey = _interopRequireDefault(require("is-hotkey"));

var _remove = _interopRequireDefault(require("../commands/remove"));

var _isSelectionInQuickInsert = _interopRequireDefault(require("../queries/isSelectionInQuickInsert"));

const isEscHotkey = (0, _isHotkey.default)('esc');
const isBackspaceHotkey = (0, _isHotkey.default)('backspace');

function onKeyDown(event, controller, next) {
  if ((0, _isSelectionInQuickInsert.default)(controller)) {
    if (isEscHotkey(event)) {
      controller.command(_remove.default);
    }

    if (isBackspaceHotkey(event)) {
      const {
        selection,
        decorations
      } = controller.value;
      const quickInsertDecoration = decorations.find(({
        mark
      }) => mark.type === 'quick-insert');

      if (selection.focus.moveBackward().offset === quickInsertDecoration.start.offset) {
        return controller.command(_remove.default);
      }
    }
  }

  return next();
}
//# sourceMappingURL=onKeyDown.js.map