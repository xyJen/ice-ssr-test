"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getPos;

var _everCangjie = require("@ali/4ever-cangjie");

function getPos(controller, scrollableContainer, portalDom, align = 'follow') {
  const {
    selection,
    document
  } = controller.value;

  const point = _everCangjie.Point.create({
    key: selection.focus.key,
    // @ts-ignore
    offset: selection.focus.offset - 1
  });

  const contentDOM = _everCangjie.domUtils.findDOMNodeSafely(document.key)?.closest(`[${_everCangjie.constants.Selector.content}]`);

  const pos = _everCangjie.domUtils.findCaretPosition(point, 'start', contentDOM || window);

  if (pos && scrollableContainer && portalDom) {
    // @ts-ignore
    const containerRect = (scrollableContainer.window === scrollableContainer ? window.document.body : scrollableContainer).getBoundingClientRect();
    const {
      clientLeft,
      clientTop,
      height
    } = pos;
    const {
      clientHeight,
      clientWidth
    } = portalDom;
    const isBottomLittleSpace = clientTop > clientHeight && containerRect.height - (clientTop + height) < clientHeight;
    const isLeftLittleSpace = clientLeft > clientWidth && containerRect.width - clientLeft < clientWidth;
    const left = isLeftLittleSpace ? clientLeft + window.scrollX - clientWidth : clientLeft + window.scrollX;
    const top = isBottomLittleSpace ? clientTop + window.scrollY - clientHeight - 2 : pos.clientTop + height + 2 + window.scrollY;

    if (align === 'bottom') {
      return {
        left,
        top: pos.clientTop + height + 2 + window.scrollY
      };
    }

    if (align === 'top') {
      return {
        left,
        top: clientTop + window.scrollY - clientHeight
      };
    }

    return {
      left,
      top
    };
  }

  return {
    left: 9999,
    top: 9999
  };
}
//# sourceMappingURL=pos.js.map