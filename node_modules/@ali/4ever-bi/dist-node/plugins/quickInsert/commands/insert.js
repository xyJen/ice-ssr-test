"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = insert;

var _everCangjie = require("@ali/4ever-cangjie");

var _actions = require("../actions");

;

function getFocusPoint(controller) {
  const {
    selection
  } = controller.value;

  if (!selection) {
    return null;
  }

  const focus = selection.focus;
  return _everCangjie.Point.create({
    key: focus.key,
    // @ts-ignore
    offset: focus.offset
  });
}

function insert(controller, data) {
  if (controller.query('isCollapsedInInlineVoid') || controller.query('isSelectionInMention')) {
    controller.command(_everCangjie.Commands.moveToStartOfNextText);
  }

  controller.run('onAction', (0, _actions.showQuickInsert)());
  controller.run('onAction', (0, _actions.setQuickInsert)(data.plugin));
  const {
    decorations
  } = controller.value;
  const notQuickInsertDescorations = decorations.filter(item => item.mark.type !== 'quick-insert');
  let endPoint = getFocusPoint(controller);

  if (!endPoint) {
    return controller;
  }

  const startPoint = _everCangjie.Point.create({
    key: endPoint.key,
    // @ts-ignore
    offset: Math.max(0, endPoint.offset - 1)
  });

  if (endPoint.offset === startPoint.offset) {
    // 插入空格，保证 decoration 区间不闭合，能够展示 quick-insert 面板
    controller.command(_everCangjie.Commands.insertText, ' ');
    endPoint = _everCangjie.Point.create({
      key: endPoint.key,
      // @ts-ignore
      offset: endPoint.offset + 1
    });
  }

  return controller.setDecorations([...notQuickInsertDescorations, _everCangjie.Decoration.create({
    start: startPoint,
    end: endPoint,
    mark: _everCangjie.Mark.create({
      type: 'quick-insert',
      data
    })
  })]);
}
//# sourceMappingURL=insert.js.map