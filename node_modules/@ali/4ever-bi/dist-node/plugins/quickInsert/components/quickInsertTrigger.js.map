{"version":3,"sources":["../../../../../src/plugins/quickInsert/components/quickInsertTrigger.tsx"],"names":["PANEL_WIDTH","PANEL_HEIGHT","PanelBox","styled","div","InsertWrapper","theme","colorLine1","boxShadow","useActiveInteraction","ActiveInteractionHooks","QuickInsert","props","text","value","groups","controller","insertMap","config","getLifeCycle","current","position","setPosition","top","left","portalRef","scrollableContainer","close","run","activeType","setActiveType","activeRef","React","useRef","useEffect","updatePosition","flag","pos","query","portalDom","children","p","addEventListener","removeEventListener","length","handleChange","useCallback","key","command","Commands","focus","start","performance","now","time","overlay","zIndex","disabled","renderPanel","from","ReactDOM","createPortal","document","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport ReactDOM from 'react-dom';\nimport { Controller, Commands } from '@ali/4ever-cangjie';\nimport { useScrollableContainer } from '@ali/4ever-bamboo';\nimport { ActiveInteractionHooks } from '@ali/4ever-component';\nimport { theme } from '@ali/we-design';\nimport Menu from './menu';\nimport Panel from './panel';\nimport Forbidden from './forbidden';\nimport { resetQuickInsert, removeQuickInsert } from '../actions';\nimport { InsertGroup, InsertItem, QuickInsertPluginConfig } from '../types';\nimport { useOnClickOutside } from '@ali/4ever-component';\nimport { throttle } from 'lodash-es';\n\ninterface QuickInsertProps {\n  controller: Controller;\n  groups: InsertGroup[];\n  value: string;\n  insertMap: Record<string, InsertItem>;\n  config: QuickInsertPluginConfig;\n  text: string;\n}\n\nconst PANEL_WIDTH = 335;\nconst PANEL_HEIGHT = 375;\n\nconst PanelBox = styled.div``;\n\nconst InsertWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${() => theme.colorLine1};\n  box-shadow: ${() => theme.boxShadow};\n  border-radius: 6px;\n  height: ${PANEL_HEIGHT}px;\n  width: ${PANEL_WIDTH}px;\n`;\n\nconst { useActiveInteraction } = ActiveInteractionHooks;\n\nconst QuickInsert: React.FunctionComponent<QuickInsertProps> = (props) => {\n  const { text, value, groups, controller, insertMap, config } = props;\n  const { getLifeCycle } = config;\n\n  const current = insertMap[value];\n  const [position, setPosition] = useState({ top: 99999, left: 99999 });\n  const left = useRef<number>(0);\n  const portalRef = useRef<HTMLDivElement>(null);\n  const scrollableContainer = useScrollableContainer();\n\n  const close = useCallback(() => {\n    controller.run('onAction', removeQuickInsert());\n    return controller;\n  }, [controller]);\n\n  const [activeType, setActiveType] = useActiveInteraction();\n  const activeRef = React.useRef('');\n  activeRef.current = activeType;\n\n  React.useEffect(() => {\n    setActiveType('quickInsertMenu');\n    return () => {\n      if (activeRef.current === 'quickInsertMenu') {\n        setActiveType('');\n      }\n    }\n  }, [setActiveType]);\n\n  const updatePosition = useCallback(\n    throttle((flag?: Boolean | Event) => {\n      const pos = controller.query('getQuickInsertPanelPosition', {\n        controller,\n        scrollableContainer: scrollableContainer as HTMLElement,\n        portalDom: portalRef.current?.children[0],\n      });\n      const p = {\n        left: typeof flag === 'boolean' ? pos.left : left.current,\n        top: pos.top,\n      };\n      setPosition(p);\n      left.current = p.left;\n    }), [scrollableContainer, config],\n  );\n\n  // 等待 DOM 渲染完成之后再计算定位\n  useEffect(() => {\n    updatePosition(true);\n    scrollableContainer?.addEventListener('scroll', updatePosition);\n\n    return () => {\n      scrollableContainer?.removeEventListener('scroll', updatePosition);\n    };\n  }, [scrollableContainer]);\n\n  useEffect(() => {\n    if (text.length === 1) {\n      updatePosition(true);\n    }\n  }, [text, controller.value]);\n\n  const handleChange = React.useCallback(\n    (key: string) => {\n      controller.run('onAction', resetQuickInsert(key));\n      controller.command(Commands.focus);\n    },\n    [controller],\n  );\n\n  useOnClickOutside(portalRef, close);\n\n  useEffect(() => {\n    const start = performance.now();\n    return () => {\n      getLifeCycle && getLifeCycle({ time: performance.now() - start });\n    };\n  }, [getLifeCycle]);\n\n  const overlay = useMemo(() =>\n    (<InsertWrapper\n      style={{\n        left: position.left,\n        top: position.top,\n        zIndex: 999,\n      }}\n    >\n      <Menu\n        groups={groups}\n        value={current.key}\n        onChange={handleChange}\n        editorValue={controller.value}\n      />\n      <Panel>\n        {current.disabled(controller.value) ? (\n          <Forbidden />\n        ) : (\n          current.renderPanel({\n            close,\n            text,\n            controller,\n            from: 'editor',\n          })\n        )}\n      </Panel>\n    </InsertWrapper>),\n  [close, controller, current, groups, handleChange, position.left, position.top, text]);\n\n  return ReactDOM.createPortal(\n    <PanelBox\n      className=\"quick-insert-portal\"\n      data-testid=\"quick-insert-portal\"\n      ref={portalRef}\n    >\n      {overlay}\n    </PanelBox>,\n    document.body,\n  );\n};\n\nexport default QuickInsert;\n"],"file":"quickInsertTrigger.js"}