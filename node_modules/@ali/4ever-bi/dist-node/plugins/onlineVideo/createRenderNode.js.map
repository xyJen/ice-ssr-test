{"version":3,"sources":["../../../../src/plugins/onlineVideo/createRenderNode.tsx"],"names":["createRenderNode","config","pluginState","Editor","undefined","Toolbar","onlineVideoLocaleConfig","locale","isValidVideoURL","getIFramePlayerURL","isIFramePlayerSupported","onMediaLoadSuccess","onMediaLoadError","onlineVideo","props","controller","node","attributes","isSelected"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;uBAD4B,a;;AAIb,SAASA,gBAAT,CAA0BC,MAA1B,EAA2DC,WAA3D,EAAwEC,MAAM,GAAGC,SAAjF,EAA4FC,OAAO,GAAGD,SAAtG,EAAuI;AACpJ,QAAME,uBAAuB,GAAGL,MAAM,CAACM,MAAP,IAAiB,EAAjD;AACA,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA,uBAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA;AALI,MAMFX,MANJ;AAOA,SAAO;AACLY,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAClC,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,UAAR;AAAoBC,QAAAA;AAApB,UAAmCJ,KAAzC;AACA,0BACE,iDAASG,UAAT;AAAqB,uBAAY;AAAjC,uBACE,eAAC,oBAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,UAAU,EAAED,UAFd;AAGE,QAAA,UAAU,EAAEG,UAHd;AAIE,QAAA,MAAM,EAAEf,MAJV;AAKE,QAAA,OAAO,EAAEE,OALX;AAME,QAAA,MAAM,EAAEC,uBANV;AAOE,QAAA,eAAe,EAAEE,eAPnB;AAQE,QAAA,kBAAkB,EAAEC,kBARtB;AASE,QAAA,uBAAuB,EAAEC,uBAT3B;AAUE,QAAA,WAAW,EAAER,WAVf;AAWE,QAAA,kBAAkB,EAAES,kBAXtB;AAYE,QAAA,gBAAgB,EAAEC;AAZpB,QADF,CADF;AAkBD;AArBI,GAAP;AAuBD","sourcesContent":["import * as React from 'react';\nimport { Plugin } from '@ali/4ever-cangjie';\nimport OnlineVideo from './components/onlineVideo';\nimport { OnlineVideoPluginConfig } from './types';\n\nexport default function createRenderNode(config: OnlineVideoPluginConfig, pluginState, Editor = undefined, Toolbar = undefined): Plugin['renderNode'] {\n  const onlineVideoLocaleConfig = config.locale || {};\n  const {\n    isValidVideoURL,\n    getIFramePlayerURL,\n    isIFramePlayerSupported,\n    onMediaLoadSuccess,\n    onMediaLoadError,\n  } = config;\n  return {\n    onlineVideo: (props, controller) => {\n      const { node, attributes, isSelected } = props;\n      return (\n        <div {...attributes} data-testid=\"onlinevideo\">\n          <OnlineVideo\n            node={node}\n            controller={controller}\n            isSelected={isSelected}\n            Editor={Editor}\n            Toolbar={Toolbar}\n            locale={onlineVideoLocaleConfig}\n            isValidVideoURL={isValidVideoURL}\n            getIFramePlayerURL={getIFramePlayerURL}\n            isIFramePlayerSupported={isIFramePlayerSupported}\n            pluginState={pluginState}\n            onMediaLoadSuccess={onMediaLoadSuccess}\n            onMediaLoadError={onMediaLoadError}\n          />\n        </div>\n      );\n    },\n  };\n}\n"],"file":"createRenderNode.js"}