"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _actions = require("../actions");

var _index = require("../../../index");

const _createElement = /*#__PURE__*/React.createElement;

var _ref = /*#__PURE__*/_createElement(_weDesign.DeleteBetaNormal, null);

/* eslint-disable */
const OnlineVideoInlineToolbar = props => {
  const {
    locale = {},
    triggerNode
  } = props;

  const onDeleteOnlineVideo = e => {
    e.preventDefault();
    e.stopPropagation();
    const {
      controller,
      node
    } = props;
    controller.run('onAction', (0, _actions.removeOnlineVideo)(node));
  };

  const DelOnlineVideoButton = () => {
    return /*#__PURE__*/_createElement(_weDesign.Button, {
      className: "onlinevideo-toolbar-delete",
      onClick: onDeleteOnlineVideo,
      title: locale.delete,
      bordered: false,
      icon: _ref
    });
  };

  const customToolButtons = {
    'onlineVideo.del': DelOnlineVideoButton
  };
  const onlineVideoLayout = [{
    toolButtons: [{
      name: 'onlineVideo.del'
    }]
  }];
  return /*#__PURE__*/_createElement(_index.InlineToolbar, {
    visible: true,
    triggerNode: triggerNode || undefined,
    customToolButtons: customToolButtons,
    inlineLayout: onlineVideoLayout
  });
};

var _default = /*#__PURE__*/React.memo(OnlineVideoInlineToolbar);

exports.default = _default;
//# sourceMappingURL=OnlineVideoInlineToolbar.js.map