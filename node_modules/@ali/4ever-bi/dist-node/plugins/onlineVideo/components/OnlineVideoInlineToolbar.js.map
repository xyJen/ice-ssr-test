{"version":3,"sources":["../../../../../src/plugins/onlineVideo/components/OnlineVideoInlineToolbar.tsx"],"names":["OnlineVideoInlineToolbar","props","locale","triggerNode","onDeleteOnlineVideo","e","preventDefault","stopPropagation","controller","node","run","DelOnlineVideoButton","delete","customToolButtons","onlineVideoLayout","toolButtons","name","undefined","React","memo"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;uBAH4B,a;;wBAiChB,eAAC,0BAAD,O;;AAnBZ;AACA,MAAMA,wBAAwB,GAAIC,KAAD,IAAmB;AAClD,QAAM;AAAEC,IAAAA,MAAM,GAAG,EAAX;AAAeC,IAAAA;AAAf,MAA+BF,KAArC;;AAEA,QAAMG,mBAAmB,GACvBC,CAD0B,IAEvB;AACHA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAuBR,KAA7B;AACAO,IAAAA,UAAU,CAACE,GAAX,CAAe,UAAf,EAA2B,gCAAkBD,IAAlB,CAA3B;AACD,GAPD;;AASA,QAAME,oBAAoB,GAAG,MAAM;AACjC,wBAAO,eAAC,gBAAD;AACL,MAAA,SAAS,EAAC,4BADL;AAEL,MAAA,OAAO,EAAEP,mBAFJ;AAGL,MAAA,KAAK,EAAEF,MAAM,CAACU,MAHT;AAIL,MAAA,QAAQ,EAAE,KAJL;AAKL,MAAA,IAAI;AALC,MAAP;AAMD,GAPD;;AASA,QAAMC,iBAAiB,GAAG;AACxB,uBAAmBF;AADK,GAA1B;AAIA,QAAMG,iBAAiB,GAAG,CAAC;AACvBC,IAAAA,WAAW,EAAE,CAAC;AACZC,MAAAA,IAAI,EAAE;AADM,KAAD;AADU,GAAD,CAA1B;AAMA,sBACE,eAAC,oBAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,WAAW,EAAEb,WAAW,IAAIc,SAF9B;AAGE,IAAA,iBAAiB,EAAEJ,iBAHrB;AAIE,IAAA,YAAY,EAAEC;AAJhB,IADF;AAQD,CAvCD;;4BAyCeI,KAAK,CAACC,IAAN,CAAWnB,wBAAX,C","sourcesContent":["import * as React from 'react';\nimport { Controller, Node } from '@ali/4ever-cangjie';\nimport { Button, DeleteBetaNormal } from '@ali/we-design';\nimport { removeOnlineVideo } from '../actions';\nimport {\n  InlineToolbar,\n} from '../../../index';\n\ninterface IProps {\n  controller: Controller;\n  node: Node;\n  locale: any;\n  triggerNode: HTMLDivElement | null;\n}\n\n/* eslint-disable */\nconst OnlineVideoInlineToolbar = (props: IProps) => {\n  const { locale = {}, triggerNode } = props;\n\n  const onDeleteOnlineVideo = (\n    e: React.MouseEvent<HTMLSpanElement> | React.TouchEvent<HTMLSpanElement>,\n  ) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { controller, node } = props;\n    controller.run('onAction', removeOnlineVideo(node));\n  };\n\n  const DelOnlineVideoButton = () => {\n    return <Button \n      className='onlinevideo-toolbar-delete'\n      onClick={onDeleteOnlineVideo} \n      title={locale.delete} \n      bordered={false} \n      icon={<DeleteBetaNormal />} />;\n  };\n\n  const customToolButtons = {\n    'onlineVideo.del': DelOnlineVideoButton,\n  };\n\n  const onlineVideoLayout = [{\n      toolButtons: [{\n        name: 'onlineVideo.del',\n      }],\n  }];\n\n  return (\n    <InlineToolbar\n      visible\n      triggerNode={triggerNode || undefined}\n      customToolButtons={customToolButtons}\n      inlineLayout={onlineVideoLayout}\n    />\n  );\n};\n\nexport default React.memo(OnlineVideoInlineToolbar);\n"],"file":"OnlineVideoInlineToolbar.js"}