{"version":3,"sources":["../../../../../src/plugins/onlineVideo/handlers/onAction.ts"],"names":["onAction","state","action","editor","next","type","payload","ONLINEVIDEO_INSERT","ONLINEVIDEO_UPDATE","node","data","ONLINEVIDEO_REMOVE","ONLINEVIDEO_FOCUS_EDITOR","run","basicActions","createMergeDataAction","FOCUSED_ONLINEVIDEO","key","command","Commands","blur","ONLINEVIDEO_SELECT","focus","moveToRangeOfNode"],"mappings":";;;;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,QAAQ,GAAIC,KAAD,IAAoC,CACnDC,MADmD,EAEnDC,MAFmD,EAGnDC,IAHmD,KAIhD;AACH,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,MAA1B;;AACA,MAAIG,IAAI,KAAKE,2BAAb,EAAiC;AAC/B,WAAO,gCAAkBN,KAAlB,EAAyBE,MAAzB,CAAP;AACD;;AACD,MAAIE,IAAI,KAAKG,2BAAb,EAAiC;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiBJ,OAAvB;AACA,WAAO,gCAAkBH,MAAlB,EAA0BM,IAA1B,EAAgCC,IAAhC,CAAP;AACD;;AACD,MAAIL,IAAI,KAAKM,2BAAb,EAAiC;AAC/B,UAAM;AAAEF,MAAAA;AAAF,QAAWH,OAAjB;AACA,WAAO,gCAAkBH,MAAlB,EAA0BM,IAA1B,CAAP;AACD;;AACD,MAAIJ,IAAI,KAAKO,iCAAb,EAAuC;AACrC,UAAM;AAAEH,MAAAA;AAAF,QAAWH,OAAjB;AACAH,IAAAA,MAAM,CAACU,GAAP,CAAW,UAAX,EAAuBC,2BAAaC,qBAAb,CAAmC;AAAE,OAACC,0BAAD,GAAuBP,IAAI,CAACQ;AAA9B,KAAnC,CAAvB;AACA,WAAOd,MAAM,CAACe,OAAP,CACLC,sBAASC,IADJ,CAAP;AAGD;;AACD,MAAIf,IAAI,KAAKgB,2BAAb,EAAiC;AAC/B,UAAM;AAAEZ,MAAAA;AAAF,QAAWH,OAAjB;AACA,WAAOH,MAAM,CACVe,OADI,CACIC,sBAASG,KADb,EAEJJ,OAFI,CAEIC,sBAASI,iBAFb,EAEgCd,IAFhC,CAAP;AAGD;;AAED,SAAOL,IAAI,EAAX;AACD,CAhCD;;eAkCeJ,Q","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport {\n  ONLINEVIDEO_UPDATE,\n  ONLINEVIDEO_INSERT,\n  ONLINEVIDEO_REMOVE,\n  ONLINEVIDEO_FOCUS_EDITOR,\n  ONLINEVIDEO_SELECT,\n} from '../actions';\nimport updateOnlineVideo from '../commands/updateOnlineVideo';\nimport removeOnlineVideo from '../commands/removeOnlineVideo';\nimport insertOnlineVideo from '../commands/insertOnlineVideo';\nimport { biActions as basicActions } from '@ali/4ever-plugin-basic';\nimport { FOCUSED_ONLINEVIDEO } from '../constants/value';\n\nconst onAction = (state: Record<string, boolean>) => (\n  action,\n  editor: Controller,\n  next,\n) => {\n  const { type, payload } = action;\n  if (type === ONLINEVIDEO_INSERT) {\n    return insertOnlineVideo(state)(editor);\n  }\n  if (type === ONLINEVIDEO_UPDATE) {\n    const { node, data } = payload;\n    return updateOnlineVideo(editor, node, data);\n  }\n  if (type === ONLINEVIDEO_REMOVE) {\n    const { node } = payload;\n    return removeOnlineVideo(editor, node);\n  }\n  if (type === ONLINEVIDEO_FOCUS_EDITOR) {\n    const { node } = payload;\n    editor.run('onAction', basicActions.createMergeDataAction({ [FOCUSED_ONLINEVIDEO]: node.key }));\n    return editor.command(\n      Commands.blur,\n    );\n  }\n  if (type === ONLINEVIDEO_SELECT) {\n    const { node } = payload;\n    return editor\n      .command(Commands.focus)\n      .command(Commands.moveToRangeOfNode, node);\n  }\n\n  return next();\n};\n\nexport default onAction;\n"],"file":"onAction.js"}