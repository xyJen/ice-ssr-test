{"version":3,"sources":["../../../../../../src/plugins/comment/components/next/createCommentButton.tsx"],"names":["MOD","environment","IS_MAC","createCommentButton","props","controller","locale","icon","title","tooltip","badgeDot","disabled","handleClick","run","type","CommentPlugin","actions","ACTION_COMMENT_CLICK","isDisabled","query","queries","canComment","defaultTooltip","React","useMemo","comment","shortCut","buttonConfig","onClick","role","PluginRoles"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;AAS5B,MAAMA,GAAG,GAAGC,yBAAYC,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;;wBAmBkB,eAAC,0BAAD,O;;AAjBH,SAASC,mBAAT,CAA6BC,KAA7B,EAAuE;AACpF,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA,QAA5C;AAAsDC,IAAAA;AAAtD,MAAmEP,KAAzE;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxBP,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B;AACzBC,MAAAA,IAAI,EAAEC,0BAAcC,OAAd,CAAsBC;AADH,KAA3B;AAGD,GAJD;;AAMA,QAAMC,UAAU,GAAGP,QAAQ,IAAI,CAACN,UAAU,CAACc,KAAX,CAAiBJ,0BAAcK,OAAd,CAAsBC,UAAvC,CAAhC;AAEA,QAAMC,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAc,OAAO;AAC1ChB,IAAAA,KAAK,EAAEF,MAAM,EAAEmB,OAD2B;AAE1CC,IAAAA,QAAQ,EAAG,GAAE1B,GAAI;AAFyB,GAAP,CAAd,EAGnB,EAHmB,CAAvB;AAKA,QAAM2B,YAA0B,GAAI;AAClCpB,IAAAA,IAAI,EAAEA,IAAI,QADwB;AAElCqB,IAAAA,OAAO,EAAEhB,WAFyB;AAGlCJ,IAAAA,KAAK,EAAEA,KAAK,IAAIF,MAAM,EAAEE,KAHU;AAIlCC,IAAAA,OAAO,EAAEA,OAAO,IAAIa,cAJc;AAKlCZ,IAAAA,QALkC;AAMlCC,IAAAA,QAAQ,EAAEO,UANwB;AAOlCW,IAAAA,IAAI,EAAEC,wBAAYL;AAPgB,GAApC;AAUA,SAAOE,YAAP;AAED","sourcesContent":["import * as React from 'react';\nimport { PluginRoles, CommentPlugin } from '@ali/4ever-bamboo';\nimport { IBasicButton, IToolbarButtonConfig, IconComment } from '@ali/4ever-component';\nimport { Controller, environment } from '@ali/4ever-cangjie';\n\nexport interface IcommentButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\n\nexport default function createCommentButton(props: IcommentButtonProps): IBasicButton {\n  const { controller, locale, icon, title, tooltip, badgeDot, disabled } = props;\n\n  const handleClick = () => {\n    controller.run('onAction', {\n      type: CommentPlugin.actions.ACTION_COMMENT_CLICK,\n    });\n  };\n\n  const isDisabled = disabled || !controller.query(CommentPlugin.queries.canComment);\n\n  const defaultTooltip = React.useMemo(() => ({\n    title: locale?.comment,\n    shortCut: `${MOD}+Shift+m`,\n  }), []);\n\n  const buttonConfig: IBasicButton = ({\n    icon: icon || <IconComment />,\n    onClick: handleClick,\n    title: title || locale?.title,\n    tooltip: tooltip || defaultTooltip,\n    badgeDot,\n    disabled: isDisabled,\n    role: PluginRoles.comment,\n  });\n\n  return buttonConfig;\n\n}\n"],"file":"createCommentButton.js"}