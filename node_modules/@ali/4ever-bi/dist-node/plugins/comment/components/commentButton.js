"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderButton = exports.CommentButton = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _weIcon = require("@ali/we-icon");

var _everCangjie = require("@ali/4ever-cangjie");

var _everBamboo = require("@ali/4ever-bamboo");

const _createElement = /*#__PURE__*/_react.default.createElement;
const MOD = _everCangjie.environment.IS_MAC ? 'âŒ˜' : 'Ctrl';

var _ref = /*#__PURE__*/_createElement(_weIcon.ToolbarAddCommentNormal, null);

const CommentButton = props => {
  const {
    locale,
    config,
    controller,
    ...rest
  } = props;

  const triggerComment = _react.default.useCallback(() => {
    controller.run('onAction', {
      type: _everBamboo.CommentPlugin.actions.ACTION_COMMENT_CLICK
    });
  }, [controller]);

  const disabled = !controller.query(_everBamboo.CommentPlugin.queries.canComment);
  return (
    /*#__PURE__*/
    // @ts-ignore
    _createElement(_weToolbar.IconButton, (0, _extends2.default)({}, rest, {
      tooltip: `${locale.comment} (${MOD}+Shift+m)`,
      icon: _ref,
      onClick: triggerComment,
      disabled: disabled,
      role: _everBamboo.PluginRoles.comment
    }))
  );
};

exports.CommentButton = CommentButton;

const renderButton = config => {
  return /*#__PURE__*/_createElement(CommentButton, config);
};

exports.renderButton = renderButton;
//# sourceMappingURL=commentButton.js.map