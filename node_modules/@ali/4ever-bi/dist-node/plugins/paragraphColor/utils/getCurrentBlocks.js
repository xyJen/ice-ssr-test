"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

var _everBamboo = require("@ali/4ever-bamboo");

var _everPluginList = require("@ali/4ever-plugin-list");

const {
  isListGroupAvailable
} = _everBamboo.ListGroupPlugin.utils; // 根据 currentBlock.key 获取对应的 nodes

const getCurrentBlocks = (controller, key) => {
  const {
    document,
    selection
  } = controller.value;
  const path = document.getPath(key);
  const targetNode = document.getNodeByPath(path);

  if (!_everCangjie.Block.isBlock(targetNode)) {
    return [];
  }

  const blocks = controller.query('getSiblingDraggableBlocks', targetNode) || []; // 折叠模式下，仅对折叠的列表节点设置样式

  const {
    isCollapsed
  } = selection;

  if (isCollapsed) {
    if (isListGroupAvailable(controller) && _everPluginList.List.isList(blocks[0])) {
      return [blocks[0]];
    }
  } else {
    const listNodesKeys = document.getNodesAtRange(selection).filter(_everPluginList.List.isList).map(node => node.key);
    return blocks.filter(node => !_everPluginList.List.isList(node) || listNodesKeys.includes(node.key));
  }

  return blocks;
};

var _default = getCurrentBlocks;
exports.default = _default;
//# sourceMappingURL=getCurrentBlocks.js.map