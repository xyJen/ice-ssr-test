{"version":3,"sources":["../../../../../src/plugins/paragraphColor/utils/getCurrentBlocks.ts"],"names":["isListGroupAvailable","ListGroupPlugin","utils","getCurrentBlocks","controller","key","document","selection","value","path","getPath","targetNode","getNodeByPath","Block","isBlock","blocks","query","isCollapsed","List","isList","listNodesKeys","getNodesAtRange","filter","map","node","includes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAA2BC,4BAAgBC,KAAjD,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,CAACC,UAAD,EAAyBC,GAAzB,KAAyC;AAChE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BH,UAAU,CAACI,KAA3C;AACA,QAAMC,IAAI,GAAGH,QAAQ,CAACI,OAAT,CAAiBL,GAAjB,CAAb;AACA,QAAMM,UAAU,GAAGL,QAAQ,CAACM,aAAT,CAAuBH,IAAvB,CAAnB;;AAEA,MAAI,CAACI,mBAAMC,OAAN,CAAcH,UAAd,CAAL,EAAgC;AAC9B,WAAO,EAAP;AACD;;AAED,QAAMI,MAAM,GAAGX,UAAU,CAACY,KAAX,CAAiB,2BAAjB,EAA8CL,UAA9C,KAA6D,EAA5E,CATgE,CAWhE;;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBV,SAAxB;;AACA,MAAIU,WAAJ,EAAiB;AACf,QAAIjB,oBAAoB,CAACI,UAAD,CAApB,IAAoCc,qBAAKC,MAAL,CAAYJ,MAAM,CAAC,CAAD,CAAlB,CAAxC,EAAgE;AAC9D,aAAO,CAACA,MAAM,CAAC,CAAD,CAAP,CAAP;AACD;AACF,GAJD,MAIO;AACL,UAAMK,aAAa,GACjBd,QAAQ,CAACe,eAAT,CAAyBd,SAAzB,EAAoCe,MAApC,CAA2CJ,qBAAKC,MAAhD,EAAwDI,GAAxD,CAA6DC,IAAD,IAAUA,IAAI,CAACnB,GAA3E,CADF;AAEA,WAAOU,MAAM,CAACO,MAAP,CAAeE,IAAD,IAAU,CAACN,qBAAKC,MAAL,CAAYK,IAAZ,CAAD,IAAsBJ,aAAa,CAACK,QAAd,CAAuBD,IAAI,CAACnB,GAA5B,CAA9C,CAAP;AACD;;AAED,SAAOU,MAAP;AACD,CAxBD;;eA0BeZ,gB","sourcesContent":["import { Controller, Block } from '@ali/4ever-cangjie';\nimport { ListGroupPlugin } from '@ali/4ever-bamboo';\nimport { List } from '@ali/4ever-plugin-list';\n\nconst { isListGroupAvailable } = ListGroupPlugin.utils;\n\n// 根据 currentBlock.key 获取对应的 nodes\nconst getCurrentBlocks = (controller: Controller, key: string) => {\n  const { document, selection } = controller.value;\n  const path = document.getPath(key);\n  const targetNode = document.getNodeByPath(path);\n\n  if (!Block.isBlock(targetNode)) {\n    return [];\n  }\n\n  const blocks = controller.query('getSiblingDraggableBlocks', targetNode) || [];\n\n  // 折叠模式下，仅对折叠的列表节点设置样式\n  const { isCollapsed } = selection;\n  if (isCollapsed) {\n    if (isListGroupAvailable(controller) && List.isList(blocks[0])) {\n      return [blocks[0]];\n    }\n  } else {\n    const listNodesKeys = \n      document.getNodesAtRange(selection).filter(List.isList).map((node) => node.key);\n    return blocks.filter((node) => !List.isList(node) || listNodesKeys.includes(node.key));\n  }\n\n  return blocks;\n};\n\nexport default getCurrentBlocks;\n"],"file":"getCurrentBlocks.js"}