"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _everBamboo = require("@ali/4ever-bamboo");

var _actions = require("./actions");

/* eslint-disable @typescript-eslint/no-shadow */
const _createElement = /*#__PURE__*/_react.default.createElement;

const createColorPanelMenu = () => {
  return props => {
    const {
      controller,
      menuItem: {
        currentBlock
      }
    } = props;
    const initialColor = (0, _react.useMemo)(() => controller.query('getParagraphColor', {
      node: currentBlock
    }), [controller, currentBlock]);
    const initialBgColor = (0, _react.useMemo)(() => controller.query('getParagraphBgColor', {
      node: currentBlock
    }), [controller, currentBlock]);
    const [color, setColor] = (0, _react.useState)(initialColor);
    const [bgColor, setBgColor] = (0, _react.useState)(initialBgColor);
    const handleColorClick = (0, _react.useCallback)(color => {
      controller.run('onAction', (0, _actions.setParagraphColor)({
        node: currentBlock,
        color
      }));
      setColor(color);
    }, [controller, currentBlock]);
    const handleBackgroundClick = (0, _react.useCallback)(color => {
      controller.run('onAction', (0, _actions.setParagraphBgColor)({
        node: currentBlock,
        color
      }));
      setBgColor(color);
    }, [controller, currentBlock]);
    return /*#__PURE__*/_createElement(_weDesign.ColorPanel, {
      color: color,
      backgroundColor: bgColor,
      onColorClick: handleColorClick,
      onBackgroundColorClick: handleBackgroundClick,
      enableResetButton: true,
      role: _everBamboo.PluginRoles.paragraphColor
    });
  };
};

var _default = createColorPanelMenu;
exports.default = _default;
//# sourceMappingURL=menu.js.map