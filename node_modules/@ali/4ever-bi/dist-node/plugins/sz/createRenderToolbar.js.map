{"version":3,"sources":["../../../../src/plugins/sz/createRenderToolbar.tsx"],"names":["createButtons","createSzBiggerButton","createSzSmallerButton","buttons","SzButton","createRenderToolbar","locale","props","controller","buttonName","extraProps","createButton","ItemKey","sz","SlotType","textSelect","FontSizeSelectSingleLineDefaultWidth"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;uBAF4B,a;AAI5B,MAAMA,aAA6H,GAAG;AACpI,eAAaC,oCADuH;AAEpI,gBAAcC;AAFsH,CAAtI;AAKA,MAAMC,OAAwG,GAAG;AAC/G,QAAMC;AADyG,CAAjH;;AAIe,SAASC,mBAAT,CACbC,MADa,EAEE;AAEf,SAAO,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAE5B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6BH,KAAnC;AAEA,UAAMI,YAAY,GAAGX,aAAa,CAACS,UAAD,CAAlC;;AAEA,QAAIE,YAAJ,EAAkB;AAChB,aAAOA,YAAY,CAAC;AAClBH,QAAAA,UADkB;AAElBF,QAAAA,MAFkB;AAGlB,WAAGI;AAHe,OAAD,CAAnB;AAKD;;AACD,YAAQD,UAAR;AACE,WAAKG,uBAAQC,EAAb;AAEE,4BACE,eAAC,uBAAD;AAAU,UAAA,OAAO,EAAEC,wBAASC,UAA5B;AAAwC,UAAA,KAAK,EAAEC;AAA/C,wBACE,eAAC,iBAAD;AACE,UAAA,UAAU,EAAER,UADd;AAEE,UAAA,MAAM,EAAEF;AAFV,WAGMI,UAHN,EADF,CADF;;AAWF;AACE;AAfJ;;AAmBA,WAAO,IAAP;AACD,GAjCD;AAkCD","sourcesContent":["import * as React from 'react';\nimport { RenderToolbar, ItemKeys, IBasicButton, IToolbarButtonConfig, ItemKey, ItemSlot, SlotType, FontSizeSelectSingleLineDefaultWidth } from '@ali/4ever-component';\nimport { createSzBiggerButton, createSzSmallerButton, SzButtonProps } from './components/next/SzSingleButton';\nimport SzButton from './components/next/SzButton';\n\nconst createButtons: Partial<Record<ItemKeys, ((props: SzButtonProps) => IBasicButton | React.ReactElement<IToolbarButtonConfig>)>> = {\n  'sz.bigger': createSzBiggerButton,\n  'sz.smaller': createSzSmallerButton,\n}\n\nconst buttons: Partial<Record<ItemKeys, ((props: SzButtonProps) => React.ReactElement<IToolbarButtonConfig>)>> = {\n  'sz': SzButton,\n}\n\nexport default function createRenderToolbar(\n  locale: Record<string, string>,\n): RenderToolbar {\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    const createButton = createButtons[buttonName];\n\n    if (createButton) {\n      return createButton({\n        controller,\n        locale,\n        ...extraProps,\n      })\n    }\n    switch (buttonName) {\n      case ItemKey.sz:\n\n        return (\n          <ItemSlot display={SlotType.textSelect} width={FontSizeSelectSingleLineDefaultWidth}>\n            <SzButton\n              controller={controller}\n              locale={locale}\n              {...extraProps}\n            />\n          </ItemSlot>\n\n        )\n\n      default:\n        break;\n    }\n\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}