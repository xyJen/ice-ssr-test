{"version":3,"sources":["../../../../../src/plugins/sz/components/SzButton.tsx"],"names":["SzButton","props","controller","locale","toolbarMode","rest","defaultSz","sz","query","buttonTitle","isCollapsedAtEdge","value","selection","isDisabled","isDouble","ToolbarMode","double","handleChange","React","useCallback","size","run","MemoFontSizeSelect","useMemo","FontSizeSelect","szList","PluginRoles"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;uBAN4B,a;;AAcb,SAASA,QAAT,CAAkBC,KAAlB,EAAwC;AACrD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,WAAtB;AAAmC,OAAGC;AAAtC,MAA+CJ,KAArD;AACA,QAAMK,SAAS,GAAG,kCAAlB;AACA,MAAIC,EAA0B,GAAGL,UAAU,CAACM,KAAX,CAAiB,SAAjB,EAA4BF,SAA5B,CAAjC;;AACA,MAAI,uBAAMC,EAAN,CAAJ,EAAe;AACbA,IAAAA,EAAE,GAAGJ,MAAM,CAACM,WAAZ;AACD;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAwBR,UAAU,CAACS,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GACdH,iBAAiB,IACdR,UAAU,CAACM,KAAX,CAAiB,oBAAjB,CADH,IAEGN,UAAU,CAACM,KAAX,CAAiB,iBAAjB,CAFH,IAGGN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CAJL;AAKA,QAAMM,QAAQ,GAAGV,WAAW,KAAKW,8BAAYC,MAA7C;AAEA,QAAMC,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBC,IAAD,IAAkBlB,UAAU,CAACmB,GAAX,CAAe,UAAf,EAA2B,oBAAMD,IAAN,CAA3B,CAApC,EAA6E,CAAClB,UAAD,CAA7E,CAArB;AACA,QAAMoB,kBAAkB,GAAGJ,KAAK,CAACK,OAAN,CAAc,MAAMC,yBAApB,EAAoC,EAApC,CAA3B;AAEA,sBACE,eAAC,kBAAD;AACE,IAAA,UAAU;AADZ,KAEMnB,IAFN;AAGE,IAAA,MAAM,EAAC,eAHT;AAIE,IAAA,KAAK,EAAEoB,oBAJT;AAKE,IAAA,QAAQ,EAAEZ,UALZ,CAME;AANF;AAOE,IAAA,KAAK,EAAG,GAAEN,EAAG,EAPf;AAQE,IAAA,QAAQ,EAAEU,YARZ;AASE,IAAA,QAAQ,EAAEH,QATZ;AAUE,IAAA,YAAY,EAAEX,MAAM,CAACM,WAVvB;AAWE,IAAA,IAAI,EAAEiB,wBAAYnB;AAXpB,KADF;AAeD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { isNaN, PluginRoles } from '@ali/4ever-bamboo';\nimport { FontSizeSelect } from '@ali/we-toolbar';\nimport { NewToolbarMode as ToolbarMode } from '@ali/4ever-component';\nimport { setSz } from '../actions';\nimport { useDefaultSz } from '@ali/4ever-component';\nimport { szList } from '@ali/4ever-plugin-sz';\n\nexport interface SzButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function SzButton(props: SzButtonProps) {\n  const { controller, locale, toolbarMode, ...rest } = props;\n  const defaultSz = useDefaultSz();\n  let sz: number | string | null = controller.query('getSize', defaultSz);\n  if (isNaN(sz)) {\n    sz = locale.buttonTitle;\n  }\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled =\n    isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInLinkCard');\n  const isDouble = toolbarMode === ToolbarMode.double;\n\n  const handleChange = React.useCallback((size: number) => controller.run('onAction', setSz(size)), [controller]);\n  const MemoFontSizeSelect = React.useMemo(() => FontSizeSelect, []);\n\n  return (\n    <MemoFontSizeSelect\n      allowInput\n      {...rest}\n      testid=\"bi-toolbar-sz\"\n      sizes={szList}\n      disabled={isDisabled}\n      // @ts-ignore 字号是 string 还是 number？\n      value={`${sz}`}\n      onChange={handleChange}\n      bordered={isDouble}\n      shortcutText={locale.buttonTitle}\n      role={PluginRoles.sz}\n    />\n  );\n}\n"],"file":"SzButton.js"}