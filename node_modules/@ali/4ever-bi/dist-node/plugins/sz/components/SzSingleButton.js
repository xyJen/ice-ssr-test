"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SzBiggerButton = SzBiggerButton;
exports.SzSmallerButton = SzSmallerButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weToolbar = require("@ali/we-toolbar");

var _everBamboo = require("@ali/4ever-bamboo");

var _actions = require("../actions");

var _getTipsByType = require("../utils/getTipsByType");

const _createElement = /*#__PURE__*/React.createElement;

function SzBiggerButton(props) {
  const {
    controller,
    locale,
    ...rest
  } = props;
  const handleClick = React.useCallback(() => {
    controller.run('onAction', (0, _actions.adjustSz)(true));
  }, [controller]);
  const isDisabled = controller.query('isSelectionInLinkCard');
  return /*#__PURE__*/_createElement(_weToolbar.AddFontSizeButton, (0, _extends2.default)({}, rest, {
    onClick: handleClick,
    shortcutText: _getTipsByType.SHORTCUT.bigger,
    disabled: isDisabled,
    role: _everBamboo.PluginRoles.szIncrease
  }));
}

function SzSmallerButton(props) {
  const {
    controller,
    locale,
    ...rest
  } = props;
  const handleClick = React.useCallback(() => {
    controller.run('onAction', (0, _actions.adjustSz)(false));
  }, [controller]);
  const isDisabled = controller.query('isSelectionInLinkCard');
  return /*#__PURE__*/_createElement(_weToolbar.ReduceFontSizeButton, (0, _extends2.default)({}, rest, {
    onClick: handleClick,
    shortcutText: _getTipsByType.SHORTCUT.smaller,
    disabled: isDisabled,
    role: _everBamboo.PluginRoles.szDecrease
  }));
}
//# sourceMappingURL=SzSingleButton.js.map