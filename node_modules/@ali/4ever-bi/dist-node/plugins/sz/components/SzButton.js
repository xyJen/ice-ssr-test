"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SzButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everBamboo = require("@ali/4ever-bamboo");

var _weToolbar = require("@ali/we-toolbar");

var _everComponent = require("@ali/4ever-component");

var _actions = require("../actions");

var _everPluginSz = require("@ali/4ever-plugin-sz");

const _createElement = /*#__PURE__*/React.createElement;

function SzButton(props) {
  const {
    controller,
    locale,
    toolbarMode,
    ...rest
  } = props;
  const defaultSz = (0, _everComponent.useDefaultSz)();
  let sz = controller.query('getSize', defaultSz);

  if ((0, _everBamboo.isNaN)(sz)) {
    sz = locale.buttonTitle;
  }

  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInLinkCard');
  const isDouble = toolbarMode === _everComponent.NewToolbarMode.double;
  const handleChange = React.useCallback(size => controller.run('onAction', (0, _actions.setSz)(size)), [controller]);
  const MemoFontSizeSelect = React.useMemo(() => _weToolbar.FontSizeSelect, []);
  return /*#__PURE__*/_createElement(MemoFontSizeSelect, (0, _extends2.default)({
    allowInput: true
  }, rest, {
    testid: "bi-toolbar-sz",
    sizes: _everPluginSz.szList,
    disabled: isDisabled // @ts-ignore 字号是 string 还是 number？
    ,
    value: `${sz}`,
    onChange: handleChange,
    bordered: isDouble,
    shortcutText: locale.buttonTitle,
    role: _everBamboo.PluginRoles.sz
  }));
}
//# sourceMappingURL=SzButton.js.map