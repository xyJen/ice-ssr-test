"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SzSimpleButton;
exports.szList = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everBamboo = require("@ali/4ever-bamboo");

var _weToolbar = require("@ali/we-toolbar");

var _actions = require("../actions");

var _everComponent = require("@ali/4ever-component");

var _styledComponents = _interopRequireDefault(require("styled-components"));

const _createElement = /*#__PURE__*/React.createElement;
const MemoFontSizeSelect = /*#__PURE__*/React.memo(_weToolbar.FontSizeSelect);

const Wrapper = /*#__PURE__*/_styledComponents.default.div([".select_trigger_wrap .select_left_wrap{font-size:1}"]);

const style = {
  fontSize: 14.5,
  minWidth: 25
};
const szList = [9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 42, 48, 72];
exports.szList = szList;

function SzSimpleButton(props) {
  const {
    controller,
    locale,
    toolbarMode,
    ...rest
  } = props;
  const defaultSz = (0, _everComponent.useDefaultSz)();
  let sz = controller.query('getSize', defaultSz);

  if ((0, _everBamboo.isNaN)(sz)) {
    sz = locale.buttonTitle;
  }

  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInLinkCard');
  const handleChange = React.useCallback(size => controller.run('onAction', (0, _actions.setSz)(size)), [controller]);
  return /*#__PURE__*/_createElement(Wrapper, null, /*#__PURE__*/_createElement(MemoFontSizeSelect, (0, _extends2.default)({
    allowInput: false
  }, rest, {
    testid: "bi-toolbar-sz",
    sizes: szList,
    disabled: isDisabled // @ts-ignore 字号是 string 还是 number？
    ,
    value: `${sz}`,
    onChange: handleChange,
    bordered: false,
    shortcutText: locale.buttonTitle,
    style: style,
    role: _everBamboo.PluginRoles.szSelect
  })));
}
//# sourceMappingURL=SzSimpleButton.js.map