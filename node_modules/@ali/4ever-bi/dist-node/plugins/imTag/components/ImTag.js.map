{"version":3,"sources":["../../../../../src/plugins/imTag/components/ImTag.tsx"],"names":["IMTAG_MIN_CONTAINER_WIDTH","TextWrapper","ImTagPlugin","IMTAG_MEASURE_STRING","IMTAG_DEFAULT_HEIGHT","IMTAG_INIT_WIDTH","IMTAG_MAX_WIDTH","ImTagContainer","preventDefaultOnClick","CalendarCardPlugin","ImTag","props","controller","imTagConfig","locale","imFrom","jumpToConversition","getConversitionNameFromCid","node","height","width","metadata","data","imTitle","cid","onClick","React","useCallback","event","preventDefault","stopPropagation","undefined","isStop","updateImTitle","title","targetWidth","getMeasureWidth","Math","abs","newData","run","then","res","success","finally","text","Number","MAX_SAFE_INTEGER"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Controller, RenderNodeProps, Inline } from '@ali/4ever-cangjie';\nimport { ImTagDataType, ImTagPlugin, CalendarCardPlugin, calculatedPluginSize } from '@ali/4ever-bamboo';\nimport { BiPluginConfig } from '../../../types';\nimport { setTagData } from '@ali/4ever-factory';\nimport { isChangeTagData } from '../utils';\n\nconst { IMTAG_MIN_CONTAINER_WIDTH, TextWrapper } = ImTagPlugin;\n\nconst {\n  IMTAG_MEASURE_STRING,\n  IMTAG_DEFAULT_HEIGHT,\n  IMTAG_INIT_WIDTH,\n  IMTAG_MAX_WIDTH,\n  ImTagContainer,\n} = ImTagPlugin;\n\nconst { preventDefaultOnClick } = CalendarCardPlugin;\n\ninterface IProps {\n  props: RenderNodeProps;\n  controller: Controller;\n  imTagConfig: BiPluginConfig['imTag'];\n}\n\nexport const ImTag: React.FC<IProps> = ({\n  props,\n  controller,\n  imTagConfig,\n}) => {\n  const {\n    locale = { imFrom: IMTAG_MEASURE_STRING },\n    jumpToConversition,\n    getConversitionNameFromCid,\n  } = imTagConfig || {};\n\n  const node = props.node as Inline;\n  const { height, width = 0, metadata } = node.data as ImTagDataType;\n  const { imTitle = '', cid } = metadata || {};\n  const onClick = React.useCallback((event: React.MouseEvent<Element>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (jumpToConversition && cid) {\n      jumpToConversition(cid);\n    }\n  }, [cid, jumpToConversition]);\n\n  useEffect(() => {\n    if (!getConversitionNameFromCid) return undefined;\n    let isStop = false;\n\n    const updateImTitle = async (title) => {\n      let targetWidth = await getMeasureWidth(`${IMTAG_MEASURE_STRING} ${title}`);\n\n      if (\n        // 不同端渲染时计算的宽度会有 ±2 像素的差异。\n        Math.abs(targetWidth - width) < 3 ||\n        // Case1： width 为默认宽度时更新标签（后端根据场景不同，选择性设置 imTitle 值，但是宽度未更新）\n        // Case2： imTitle 相同时不更新\n        (width !== IMTAG_INIT_WIDTH && title === imTitle)\n      ) {\n        return;\n      }\n      if (targetWidth > IMTAG_MAX_WIDTH) targetWidth = IMTAG_MAX_WIDTH;\n      const newData = {\n        width: targetWidth,\n        height: IMTAG_DEFAULT_HEIGHT,\n        metadata: {\n          cid: cid!,\n          imTitle: title,\n        },\n      };\n      if (isChangeTagData(node.data as ImTagDataType, newData)) {\n        controller.run('onAction', setTagData(node, newData));\n      }\n    };\n\n    let title = imTitle;\n    getConversitionNameFromCid(cid!).then(async (res) => {\n      if (isStop) return;\n      if (!res.success) return;\n      if (res.success) {\n        title = res.imTitle;\n      }\n    }).finally(async () => {\n      // Case1 取到最新群名，测量并更新群名；\n      // Case2 未取到最新群名（有文档权限无群权限），有可能初始化时的群名的默认宽度不对，需同样测量并更新群名；\n      await updateImTitle(title);\n    });\n    return () => {\n      isStop = true;\n    };\n  }, [cid, controller, getConversitionNameFromCid, imTitle, node, width]);\n\n  return (\n    <ImTagContainer\n      width={width}\n      height={height}\n      onClick={onClick}\n      onMouseDown={preventDefaultOnClick}\n      text={`${locale.imFrom} ${imTitle}`}\n    />\n  );\n};\n\n// 获取测量宽度，最小宽度是28px，字体是14\nexport const getMeasureWidth = async (text: string): Promise<number> => {\n  const { width } = await calculatedPluginSize(<TextWrapper>{text}</TextWrapper>, Number.MAX_SAFE_INTEGER);\n  return width + IMTAG_MIN_CONTAINER_WIDTH;\n};\n"],"file":"ImTag.js"}