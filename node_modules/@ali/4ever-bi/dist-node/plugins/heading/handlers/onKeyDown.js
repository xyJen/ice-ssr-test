"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onKeyDown;

var _everCangjie = require("@ali/4ever-cangjie");

var _onEnter = _interopRequireDefault(require("./onEnter"));

var _onBackspace = _interopRequireDefault(require("./onBackspace"));

var _isHotkey = _interopRequireWildcard(require("is-hotkey"));

var _actions = require("../actions");

const MAX_TITLE_LEVEL = 6;
const ZERO_KEY_CODE = (0, _isHotkey.toKeyCode)('0');
const hotKeys = [...Array.from({
  length: MAX_TITLE_LEVEL + 1
})].map((_, index) => `mod+alt+${index}`);
const isHeadingHotKey = (0, _isHotkey.default)(hotKeys);
const isBackspaceHotKey = (0, _isHotkey.default)('backspace');

function onKeyDown(event, controller, next) {
  if (_everCangjie.hotkeys.isEnter(event)) {
    return (0, _onEnter.default)(event, controller, next);
  }

  if (isBackspaceHotKey(event)) {
    return (0, _onBackspace.default)(event, controller, next);
  } // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506


  if (isHeadingHotKey(event) && !controller.query('isSelectionInSubjectHeading')) {
    event.preventDefault();
    const level = event.keyCode - ZERO_KEY_CODE;

    if (level === 0) {
      controller.run('onAction', (0, _actions.setHeading)('paragraph'));
      return controller;
    }

    if (level <= MAX_TITLE_LEVEL && level > 0) {
      controller.run('onAction', (0, _actions.setHeading)(`heading-${level}`));
      return controller;
    }
  }

  return next();
}
//# sourceMappingURL=onKeyDown.js.map