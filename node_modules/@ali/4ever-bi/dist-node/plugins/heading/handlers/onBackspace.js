"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onBackspace;

var _everCangjie = require("@ali/4ever-cangjie");

var _everPluginHeadingGroup = require("@ali/4ever-plugin-heading-group");

/**
 *   
 * 场景一：标题一 合并到标题
 * 
 *   >标题三             >标题三
 *   >标题二             >标题二I标题一
 *    I标题一    ->           
 * 
 * 
 * 场景二：折叠标题一 合并到 折叠标题二
 * 
 *   >标题三             >标题三
 *   >标题二             >标题二I标题一
 *   >I标题一    ->      ><空标题一> 
 */
function onBackspace(event, controller, next) {
  const {
    selection,
    startBlock
  } = controller.value;
  if (!selection || !startBlock || selection.isExpanded || selection.anchor.offset > 0 || !(0, _everPluginHeadingGroup.isHeadingGroupAvailable)(controller)) return next();
  const isAtBlockStart = selection.anchor.isAtStartOfNode(startBlock);
  if (!isAtBlockStart) return next();
  const previousViewNode = (0, _everPluginHeadingGroup.getPreviousViewGroupNode)(startBlock, controller);

  if (controller.userData.get(previousViewNode, 'fold')) {
    const newNode = startBlock.set('data', { ...startBlock.data,
      fold: true
    });
    return controller.command(_everCangjie.Commands.moveToEndOfNode, previousViewNode).command(_everCangjie.Commands.removeNodeByKey, startBlock.key).command(_everCangjie.Commands.insertBlock, newNode).command(_everCangjie.Commands.moveToStartOfNode, newNode).command(_everCangjie.Commands.mergeNodeByKey, newNode.key);
  } else {
    return next();
  }
}
//# sourceMappingURL=onBackspace.js.map