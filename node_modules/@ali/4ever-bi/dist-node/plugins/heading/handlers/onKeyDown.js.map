{"version":3,"sources":["../../../../../src/plugins/heading/handlers/onKeyDown.ts"],"names":["MAX_TITLE_LEVEL","ZERO_KEY_CODE","hotKeys","Array","from","length","map","_","index","isHeadingHotKey","isBackspaceHotKey","onKeyDown","event","controller","next","hotkeys","isEnter","query","preventDefault","level","keyCode","run"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AAEA,MAAMA,eAAe,GAAG,CAAxB;AACA,MAAMC,aAAa,GAAG,yBAAU,GAAV,CAAtB;AACA,MAAMC,OAAO,GAAG,CAAC,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAEL,eAAe,GAAG;AAA5B,CAAX,CAAJ,EAAiDM,GAAjD,CAAqD,CAACC,CAAD,EAAIC,KAAJ,KAAe,WAAUA,KAAM,EAApF,CAAhB;AACA,MAAMC,eAAe,GAAG,uBAAYP,OAAZ,CAAxB;AACA,MAAMQ,iBAAiB,GAAG,uBAAY,WAAZ,CAA1B;;AAEe,SAASC,SAAT,CAAmBC,KAAnB,EAA+CC,UAA/C,EAAuEC,IAAvE,EAAuF;AACpG,MAAIC,qBAAQC,OAAR,CAAgBJ,KAAhB,CAAJ,EAA4B;AAC1B,WAAO,sBAAQA,KAAR,EAAeC,UAAf,EAA2BC,IAA3B,CAAP;AACD;;AAED,MAAIJ,iBAAiB,CAACE,KAAD,CAArB,EAA8B;AAC5B,WAAO,0BAAYA,KAAZ,EAAmBC,UAAnB,EAA+BC,IAA/B,CAAP;AACD,GAPmG,CASpG;;;AACA,MAAIL,eAAe,CAACG,KAAD,CAAf,IAA0B,CAACC,UAAU,CAACI,KAAX,CAAiB,6BAAjB,CAA/B,EAAgF;AAC9EL,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,KAAK,GAAGP,KAAK,CAACQ,OAAN,GAAgBnB,aAA9B;;AACA,QAAIkB,KAAK,KAAK,CAAd,EAAiB;AACfN,MAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,yBAAiB,WAAjB,CAA3B;AACA,aAAOR,UAAP;AACD;;AACD,QAAIM,KAAK,IAAInB,eAAT,IAA4BmB,KAAK,GAAG,CAAxC,EAA2C;AACzCN,MAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,yBAAkB,WAAUF,KAAM,EAAlC,CAA3B;AACA,aAAON,UAAP;AACD;AACF;;AAED,SAAOC,IAAI,EAAX;AACD","sourcesContent":["import { Controller, hotkeys } from '@ali/4ever-cangjie';\nimport * as React from 'react';\nimport onEnter from './onEnter';\nimport onBackspace from './onBackspace';\nimport onSpace from './onSpace';\nimport isKeyHotKey, { toKeyCode } from 'is-hotkey';\nimport { setHeading as setHeadingAction } from '../actions';\n\nconst MAX_TITLE_LEVEL = 6;\nconst ZERO_KEY_CODE = toKeyCode('0');\nconst hotKeys = [...Array.from({ length: MAX_TITLE_LEVEL + 1 })].map((_, index) => `mod+alt+${index}`);\nconst isHeadingHotKey = isKeyHotKey(hotKeys);\nconst isBackspaceHotKey = isKeyHotKey('backspace');\n\nexport default function onKeyDown(event: React.KeyboardEvent, controller: Controller, next: Function) {\n  if (hotkeys.isEnter(event)) {\n    return onEnter(event, controller, next);\n  }\n\n  if (isBackspaceHotKey(event)) {\n    return onBackspace(event, controller, next);\n  }\n\n  // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506\n  if (isHeadingHotKey(event) && !controller.query('isSelectionInSubjectHeading')) {\n    event.preventDefault();\n    const level = event.keyCode - ZERO_KEY_CODE;\n    if (level === 0) {\n      controller.run('onAction', setHeadingAction('paragraph'));\n      return controller;\n    }\n    if (level <= MAX_TITLE_LEVEL && level > 0) {\n      controller.run('onAction', setHeadingAction(`heading-${level}`));\n      return controller;\n    }\n  }\n\n  return next();\n}\n"],"file":"onKeyDown.js"}