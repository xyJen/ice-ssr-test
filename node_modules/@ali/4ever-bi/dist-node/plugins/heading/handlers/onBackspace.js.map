{"version":3,"sources":["../../../../../src/plugins/heading/handlers/onBackspace.ts"],"names":["onBackspace","event","controller","next","selection","startBlock","value","isExpanded","anchor","offset","isAtBlockStart","isAtStartOfNode","previousViewNode","userData","get","newNode","set","data","fold","command","Commands","moveToEndOfNode","removeNodeByKey","key","insertBlock","moveToStartOfNode","mergeNodeByKey"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASA,WAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA4BH,UAAU,CAACI,KAA7C;AAEA,MACE,CAACF,SAAD,IACA,CAACC,UADD,IAEAD,SAAS,CAACG,UAFV,IAGCH,SAAS,CAACI,MAAX,CAAgCC,MAAhC,GAAyC,CAHzC,IAIA,CAAC,qDAAwBP,UAAxB,CALH,EAME,OAAOC,IAAI,EAAX;AACF,QAAMO,cAAc,GAAGN,SAAS,CAACI,MAAV,CAAiBG,eAAjB,CAAiCN,UAAjC,CAAvB;AAEA,MAAI,CAACK,cAAL,EAAqB,OAAOP,IAAI,EAAX;AAErB,QAAMS,gBAAgB,GAAG,sDAAyBP,UAAzB,EAAqCH,UAArC,CAAzB;;AAEA,MAAIA,UAAU,CAACW,QAAX,CAAoBC,GAApB,CAAwBF,gBAAxB,EAA0C,MAA1C,CAAJ,EAAuD;AACrD,UAAMG,OAAO,GAAGV,UAAU,CAACW,GAAX,CAAe,MAAf,EAAuB,EACrC,GAAGX,UAAU,CAACY,IADuB;AAErCC,MAAAA,IAAI,EAAE;AAF+B,KAAvB,CAAhB;AAIA,WAAOhB,UAAU,CACdiB,OADI,CACIC,sBAASC,eADb,EAC8BT,gBAD9B,EAEJO,OAFI,CAEIC,sBAASE,eAFb,EAE8BjB,UAAU,CAACkB,GAFzC,EAGJJ,OAHI,CAGIC,sBAASI,WAHb,EAG0BT,OAH1B,EAIJI,OAJI,CAIIC,sBAASK,iBAJb,EAIgCV,OAJhC,EAKJI,OALI,CAKIC,sBAASM,cALb,EAK6BX,OAAO,CAACQ,GALrC,CAAP;AAMD,GAXD,MAWO;AACL,WAAOpB,IAAI,EAAX;AACD;AACF","sourcesContent":["import { Controller, Commands, TextPoint } from '@ali/4ever-cangjie';\nimport { getPreviousViewGroupNode, isHeadingGroupAvailable } from '@ali/4ever-plugin-heading-group';\n\n/**\n *   \n * 场景一：标题一 合并到标题\n * \n *   >标题三             >标题三\n *   >标题二             >标题二I标题一\n *    I标题一    ->           \n * \n * \n * 场景二：折叠标题一 合并到 折叠标题二\n * \n *   >标题三             >标题三\n *   >标题二             >标题二I标题一\n *   >I标题一    ->      ><空标题一> \n */\n\nexport default function onBackspace(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: Function,\n) {\n  const { selection, startBlock } = controller.value;\n\n  if (\n    !selection ||\n    !startBlock ||\n    selection.isExpanded ||\n    (selection.anchor as TextPoint).offset > 0 ||\n    !isHeadingGroupAvailable(controller)\n  ) return next();\n  const isAtBlockStart = selection.anchor.isAtStartOfNode(startBlock);\n\n  if (!isAtBlockStart) return next();\n\n  const previousViewNode = getPreviousViewGroupNode(startBlock, controller);\n\n  if (controller.userData.get(previousViewNode, 'fold')) {\n    const newNode = startBlock.set('data', {\n      ...startBlock.data,\n      fold: true,\n    });\n    return controller\n      .command(Commands.moveToEndOfNode, previousViewNode)\n      .command(Commands.removeNodeByKey, startBlock.key)\n      .command(Commands.insertBlock, newNode)\n      .command(Commands.moveToStartOfNode, newNode)\n      .command(Commands.mergeNodeByKey, newNode.key)\n  } else {\n    return next();\n  }\n}"],"file":"onBackspace.js"}