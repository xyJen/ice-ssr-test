{"version":3,"sources":["../../../../src/plugins/heading/index.tsx"],"names":["createHeadingPlugin","config","headingConfig","heading","renderEditable","props","controller","next","onHeadingsChange","renderNode","toolbar","renderToolbar","locale","menubar","actions","commands","queries","onAction","onCangjiePaste","onKeyDown","onCangjieInput","models","placeholder"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;uBAjB4B,a;;AAmB5B,SAASA,mBAAT,CAA6BC,MAA7B,EAA+D;AAC7D,QAAMC,aAAa,GAAGD,MAAM,CAACE,OAAP,IAAkB,EAAxC;AACA,SAAO,EACL,GAAG,kCAAU,EAAV,CADE;;AAEL;AACAC,IAAAA,cAAc,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,EAA0B;AACtC,UAAIL,aAAa,CAACM,gBAAlB,EAAoC;AAClC,4BACE,eAAC,uBAAD,6BACMH,KADN;AAEE,UAAA,UAAU,EAAEC,UAFd;AAGE,UAAA,gBAAgB,EAAEJ,aAAa,CAACM;AAHlC,YAKGD,IAAI,EALP,CADF;AASD;;AACD,aAAOA,IAAI,EAAX;AACD,KAhBI;;AAiBLE,IAAAA,UAAU,EAAE,yCAjBP;AAkBLC,IAAAA,OAAO,EAAE,sBAAQR,aAAR,CAlBJ;AAmBLS,IAAAA,aAAa,EAAE,kCAAoBT,aAAa,CAACU,MAAd,IAAwB,EAA5C,CAnBV;AAoBLC,IAAAA,OAAO,EAAE,uBApBJ;AAqBLC,IAAAA,OArBK;AAsBLC,IAAAA,QAAQ,EAARA,kBAtBK;AAuBLC,IAAAA,OAAO,EAAPA,gBAvBK;AAwBLC,IAAAA,QAAQ,EAARA,iBAxBK;AAyBLC,IAAAA,cAAc,EAAE,mCAAqBjB,MAArB,CAzBX;AA0BLkB,IAAAA,SAAS,EAATA,kBA1BK;AA2BLC,IAAAA,cAAc,EAAdA,uBA3BK;AA4BLC,IAAAA,MAAM,EAAE,gCA5BH;AA6BLC,IAAAA,WAAW,EAAE,0BAAYpB,aAAZ;AA7BR,GAAP;AA+BD;;AAEDF,mBAAmB,CAACc,OAApB,GAA8BA,OAA9B;AACAd,mBAAmB,CAACe,QAApB,GAA+BA,kBAA/B;AACAf,mBAAmB,CAACgB,OAApB,GAA8BA,gBAA9B;eAEehB,mB","sourcesContent":["import * as React from 'react';\nimport toolbar from './toolbar';\nimport menubar from './menubar';\nimport HeadingWrapper from './components/headingWrapper';\nimport setHeading from './commands/setHeading';\nimport onAction from './handlers/onAction';\nimport onKeyDown from './handlers/onKeyDown';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport createOnCangjiePaste from './handlers/createOnCangjiePaste';\nimport * as actions from './actions';\nimport { BiPluginConfig, BiPlugin } from '../../types';\nimport placeholder from './placeholder';\nimport getHeadingModels from './utils/getHeadingModels';\nimport { createRenderNode } from './createRenderNode';\nimport { queries } from './queries';\nimport { commands } from './commands';\nimport { moFactory } from '@ali/4ever-plugin-heading';\n\nimport createRenderToolbar from './createRenderToolbar';\n\nfunction createHeadingPlugin(config: BiPluginConfig): BiPlugin {\n  const headingConfig = config.heading || {};\n  return {\n    ...moFactory({}),\n    // @ts-ignore\n    renderEditable(props, controller, next) {\n      if (headingConfig.onHeadingsChange) {\n        return (\n          <HeadingWrapper\n            {...props}\n            controller={controller}\n            onHeadingsChange={headingConfig.onHeadingsChange}\n          >\n            {next()}\n          </HeadingWrapper>\n        );\n      }\n      return next();\n    },\n    renderNode: createRenderNode(),\n    toolbar: toolbar(headingConfig),\n    renderToolbar: createRenderToolbar(headingConfig.locale || {}),\n    menubar: menubar(),\n    actions,\n    commands,\n    queries,\n    onAction,\n    onCangjiePaste: createOnCangjiePaste(config),\n    onKeyDown,\n    onCangjieInput,\n    models: getHeadingModels(),\n    placeholder: placeholder(headingConfig),\n  };\n}\n\ncreateHeadingPlugin.actions = actions;\ncreateHeadingPlugin.commands = commands;\ncreateHeadingPlugin.queries = queries;\n\nexport default createHeadingPlugin;\n"],"file":"index.js"}