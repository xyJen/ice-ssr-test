{"version":3,"sources":["../../../../../src/plugins/heading/queries/getHeadingPasteFragment.ts"],"names":["SZ_BOLD_MARKS","Marks","Sz","TYPE","Bold","getHeadingPasteFragment","controller","fragment","nodes","isAtHeading","value","isFragStartWithHeading","Heading","isHeading","nextFragment","Paragraph","isParagraph"],"mappings":";;;;;;;AACA;;AACA;;AAKA,MAAMA,aAAa,GAAG,CAACC,cAAMC,EAAN,CAASC,IAAV,EAAgBF,cAAMG,IAAN,CAAWD,IAA3B,CAAtB;;AAEe,SAASE,uBAAT,CAAiCC,UAAjC,EAAyDC,QAAzD,EAA8E;AAC3F,MAAI,CAACA,QAAL,EAAe,OAAOA,QAAP;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAYD,QAAlB;AACA,QAAME,WAAW,GAAG,oCAAqBH,UAAU,CAACI,KAAhC,CAApB;;AACA,QAAMC,sBAAsB,GAAGC,gBAAQC,SAAR,CAAkBL,KAAK,CAAC,CAAD,CAAvB,CAA/B;;AAEA,MAAIM,YAAJ;;AACA,MAAIH,sBAAJ,EAA4B;AAC1B;AACAG,IAAAA,YAAY,GAAG,0CAA2BP,QAA3B,EAAqCP,aAArC,CAAf;AACD,GAHD,MAGO,IAAIe,kBAAUC,WAAV,CAAsBR,KAAK,CAAC,CAAD,CAA3B,KAAmCC,WAAvC,EAAoD;AACzD;AACAK,IAAAA,YAAY,GAAG,0CAA2BP,QAA3B,EAAqCP,aAArC,CAAf;AACD;;AAED,SAAOc,YAAP;AACD","sourcesContent":["import { Controller, Document } from '@ali/4ever-cangjie';\nimport { Heading, Marks, Paragraph } from '@ali/4ever-mo';\nimport {\n  removeFirstNodeMarkByTypes,\n  isSelectionAtHeading,\n} from '../utils/fragment';\n\nconst SZ_BOLD_MARKS = [Marks.Sz.TYPE, Marks.Bold.TYPE];\n\nexport default function getHeadingPasteFragment(controller: Controller, fragment?: Document) {\n  if (!fragment) return fragment;\n  const { nodes } = fragment;\n  const isAtHeading = isSelectionAtHeading(controller.value);\n  const isFragStartWithHeading = Heading.isHeading(nodes[0]);\n\n  let nextFragment: undefined | Document;\n  if (isFragStartWithHeading) {\n    // 1 复制标题内容：移除字号和加粗 mark，以便粘贴到其它段落或标题能匹配目标格式\n    nextFragment = removeFirstNodeMarkByTypes(fragment, SZ_BOLD_MARKS);\n  } else if (Paragraph.isParagraph(nodes[0]) && isAtHeading) {\n    // 2 复制普通段落内容：粘贴到标题中去除 marks 以便匹配标题格式\n    nextFragment = removeFirstNodeMarkByTypes(fragment, SZ_BOLD_MARKS);\n  }\n\n  return nextFragment;\n}"],"file":"getHeadingPasteFragment.js"}