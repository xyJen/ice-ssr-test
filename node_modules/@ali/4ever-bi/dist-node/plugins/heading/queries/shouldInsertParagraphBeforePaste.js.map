{"version":3,"sources":["../../../../../src/plugins/heading/queries/shouldInsertParagraphBeforePaste.ts"],"names":["shouldInsertParagraphBeforePaste","controller","fragment","selection","startBlock","endBlock","document","value","isCollapsedAtEdge","isCollapsed","query","Paragraph","isParagraph","start","end","convertToTextPoints","isAtStartOfNode","isAtEndOfNode","nodes","length","firstFragmentBlock","Heading","isHeading"],"mappings":";;;;;;;AAIA;;AACA;;AAKA;AACA;AACA;AACA;AACe,SAASA,gCAAT,CACbC,UADa,EAEbC,QAFa,EAGb;AACA,MAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AACf,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,MAAgDL,UAAU,CAACM,KAAjE;;AACA,MAAIJ,SAAS,CAACK,iBAAd,EAAiC;AAC/B;AACA,WAAO,KAAP;AACD,GAND,CAQA;;;AACA,MAAI,6BAAcJ,UAAd,CAAJ,EAA+B,OAAO,KAAP;;AAE/B,MAAID,SAAS,CAACM,WAAV,IAAyBR,UAAU,CAACS,KAAX,CAAiB,QAAjB,EAA2BN,UAA3B,CAA7B,EAAqE;AACnE;AACA;AACA,WAAO,IAAP;AACD,GAfD,CAiBA;;;AACA,MAAI,CAACO,kBAAUC,WAAV,CAAsBR,UAAtB,CAAL,EAAwC,OAAO,KAAP;AAExC,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAiBX,SAAS,CAACY,mBAAV,CAA8BT,QAA9B,CAAvB;;AACA,MACEK,kBAAUC,WAAV,CAAsBP,QAAtB,KACAQ,KAAK,CAACG,eAAN,CAAsBZ,UAAtB,CADA,IAEAU,GAAG,CAACG,aAAJ,CAAkBZ,QAAlB,CAHF,EAIE;AACA;AACA,WAAO,KAAP;AACD;;AAED,MAAIH,QAAQ,CAACgB,KAAT,EAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,UAAMC,kBAAkB,GAAGlB,QAAQ,CAACgB,KAAT,CAAe,CAAf,CAA3B,CAD8B,CAE9B;;AACA,QAAIG,gBAAQC,SAAR,CAAkBF,kBAAlB,CAAJ,EAA2C,OAAO,IAAP;AAC5C;;AAED,SAAO,KAAP;AACD","sourcesContent":["import {\n  Controller,\n  Document,\n} from '@ali/4ever-cangjie';\nimport { Heading, Paragraph } from '@ali/4ever-mo';\nimport { \n  isVisualEmpty,\n} from '../utils/fragment';\n\n\n/**\n * 判断是否需要在 insert fragment 前插入空段落\n * 目前只有 heading 有特殊产品需求，因此移到 heading 的 query 中\n */\nexport default function shouldInsertParagraphBeforePaste(\n  controller: Controller,\n  fragment: Document,\n) {\n  if (!fragment) return false;\n  const { selection, startBlock, endBlock, document } = controller.value;\n  if (selection.isCollapsedAtEdge) {\n    // 无需处理光标在 edge 的情形（insert 内部会处理）\n    return false;\n  }\n\n  // 不处理空行\n  if (isVisualEmpty(startBlock)) return false;\n\n  if (selection.isCollapsed && controller.query('isVoid', startBlock)) {\n    // TODO: 待底层支持此种情形后移除这里\n    // 如果是 focus 在 void 上则需要插入空段落（例如光标选中 分割线、card 等）\n    return true;\n  }\n\n  // 不处理非文字段落\n  if (!Paragraph.isParagraph(startBlock)) return false; \n\n  const { start, end } = selection.convertToTextPoints(document);\n  if (\n    Paragraph.isParagraph(endBlock) &&\n    start.isAtStartOfNode(startBlock) &&\n    end.isAtEndOfNode(endBlock)\n  ) {\n    // 选中的整个段落则不 insert 避免插入额外空行\n    return false;\n  }\n\n  if (fragment.nodes?.length > 1) {\n    const firstFragmentBlock = fragment.nodes[0];\n    // 粘贴内容首段是 heading，但目标位置是普通段落时：换行（产品需求）\n    if (Heading.isHeading(firstFragmentBlock)) return true;\n  }\n\n  return false;\n}\n"],"file":"shouldInsertParagraphBeforePaste.js"}