{"version":3,"sources":["../../../../../../src/plugins/heading/components/next/headingGroup.tsx"],"names":["BLOCKQUOTE_KEY","getHeadingGroupWidth","toolbarWidth","HeadingGroup","props","controller","locale","width","rest","type","query","isCollapsedAtEdge","value","selection","isDisabled","handleChange","React","useCallback","headingStr","run","PluginRoles","headingGroup"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;uBAJ4B,a;AAK5B;AAEA,MAAMA,cAAc,GAAG,YAAvB;;AAQO,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgD;AAClF,MAAIA,YAAY,GAAG,IAAnB,EAAyB;AAAE,WAAO,GAAP;AAAa;;AACxC,MAAIA,YAAY,GAAG,IAAnB,EAAyB;AAAE,WAAO,GAAP;AAAa;;AACxC,MAAIA,YAAY,GAAG,IAAnB,EAAyB;AAAE,WAAO,GAAP;AAAa;;AACxC,MAAIA,YAAY,GAAG,IAAnB,EAAyB;AAAE,WAAO,GAAP;AAAa;;AACxC,SAAO,GAAP;AACD,CANM;;;;AAQQ,SAASC,YAAT,CAAsBC,KAAtB,EAAgD;AAC7D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,KAAK,GAAG,GAA9B;AAAmC,OAAGC;AAAtC,MAA+CJ,KAArD;AACA,QAAMK,IAAI,GAAGJ,UAAU,CAACK,KAAX,CAAiB,eAAjB,IAAoCV,cAApC,GAAqDK,UAAU,CAACK,KAAX,CAAiB,YAAjB,CAAlE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBN,UAAU,CAACO,KAAX,CAAiBC,SAA/C;AACA,QAAMC,UAAU,GAAGH,iBAAiB,IAAIN,UAAU,CAACK,KAAX,CAAiB,iBAAjB,CAArB,IAA4DL,UAAU,CAACK,KAAX,CAAiB,yBAAjB,CAA/E;AACA,QAAMK,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBC,UAAD,IAAwB;AAC7D,QAAIA,UAAU,KAAKlB,cAAnB,EAAmC;AACjC,UAAIS,IAAI,KAAK,WAAb,EAA0B;AACxB;AACAJ,QAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,yBAAW,WAAX,CAA3B;AACD;;AACDd,MAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,kCAA3B;AACD,KAND,MAMO;AACL,UAAIV,IAAI,KAAKT,cAAb,EAA6B;AAC3B;AACAK,QAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,kCAA3B;AACD;;AACDd,MAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2B,yBAAWD,UAAX,CAA3B;AACD;AACF,GAdoB,EAclB,CAACb,UAAD,EAAaI,IAAb,CAdkB,CAArB;AAgBA,sBACE,eAAC,gCAAD;AACE,IAAA,MAAM,EAAC,0BADT;AAEE,IAAA,QAAQ,EAAE,CAAC,CAACK,UAFd;AAGE,IAAA,KAAK,EAAEL,IAHT;AAIE,IAAA,QAAQ,EAAEM,YAJZ;AAKE,IAAA,KAAK,EAAER,KALT;AAME,IAAA,IAAI,EAAEa,wBAAYC,YANpB;AAOE,IAAA,MAAM,EAAEf;AAPV,KAQME,IARN,EADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { FontSizeMaxSelect, IToolbarButtonConfig } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { toggleBlockquote } from '@ali/4ever-utils';\nimport { setHeading } from '../../actions';\n;\n\nconst BLOCKQUOTE_KEY = 'blockquote';\n\ninterface HeadingGroupProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n  width?: number\n}\n\nexport const getHeadingGroupWidth = ({ toolbarWidth }: { toolbarWidth: number }) => {\n  if (toolbarWidth > 1720) { return 492; }\n  if (toolbarWidth > 1644) { return 414; }\n  if (toolbarWidth > 1568) { return 340; }\n  if (toolbarWidth > 1492) { return 264; }\n  return 188;\n}\n\nexport default function HeadingGroup(props: HeadingGroupProps) {\n  const { controller, locale, width = 188, ...rest } = props;\n  const type = controller.query('hasBlockQuote') ? BLOCKQUOTE_KEY : controller.query('getHeading');\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInHr') || controller.query('isSelectionInListSymbol');\n  const handleChange = React.useCallback((headingStr: string) => {\n    if (headingStr === BLOCKQUOTE_KEY) {\n      if (type !== 'paragraph') {\n        // 变成引用同时去除标题\n        controller.run('onAction', setHeading('paragraph'));\n      }\n      controller.run('onAction', toggleBlockquote());\n    } else {\n      if (type === BLOCKQUOTE_KEY) {\n        // 变成标题同时去除引用\n        controller.run('onAction', toggleBlockquote());\n      }\n      controller.run('onAction', setHeading(headingStr));\n    }\n  }, [controller, type]);\n\n  return (\n    <FontSizeMaxSelect\n      testid=\"bi-toolbar-heading-group\"\n      disabled={!!isDisabled}\n      value={type}\n      onChange={handleChange}\n      width={width}\n      role={PluginRoles.headingGroup}\n      locale={locale}\n      {...rest}\n    />\n  );\n}\n"],"file":"headingGroup.js"}