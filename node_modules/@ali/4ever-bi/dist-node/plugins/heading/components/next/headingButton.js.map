{"version":3,"sources":["../../../../../../src/plugins/heading/components/next/headingButton.tsx"],"names":["HeadingButton","props","controller","locale","rest","heading","query","isCollapsedAtEdge","value","selection","isDisabled","handleChange","React","useCallback","headingStr","run","title","shortCut","markdown","options","useMemo","key","testid","dropdownBody","dropdownHeading1","dropdownHeading2","dropdownHeading3","dropdownHeading4","tooltip","description","PluginRoles","headingSelect"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;uBAJ4B,a;;AAWb,SAASA,aAAT,CAAuBC,KAAvB,EAAkD;AAC/D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsB,OAAGC;AAAzB,MAAkCH,KAAxC;AACA,QAAMI,OAAO,GAAGH,UAAU,CAACI,KAAX,CAAiB,YAAjB,KAAkC,WAAlD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAwBL,UAAU,CAACM,KAAX,CAAiBC,SAA/C;AAEA,QAAMC,UAAU,GAAGH,iBAAiB,IAC/BL,UAAU,CAACI,KAAX,CAAiB,oBAAjB,CADc,IAEdJ,UAAU,CAACI,KAAX,CAAiB,iBAAjB,CAFc,IAGdJ,UAAU,CAACI,KAAX,CAAiB,yBAAjB,CAHc,IAIdJ,UAAU,CAACI,KAAX,CAAiB,uBAAjB,CAJL;AAMA,QAAMK,YAAY,GAAGC,KAAK,CAACC,WAAN,CAAmBC,UAAD,IAAwB;AAC7DZ,IAAAA,UAAU,CAACa,GAAX,CAAe,UAAf,EAA2B,yBAAWD,UAAX,CAA3B;AACD,GAFoB,EAElB,CAACZ,UAAD,CAFkB,CAArB;AAIA,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAgC,yCAAkBb,OAAlB,EAA2BF,MAA3B,CAAtC;AAEA,QAAMgB,OAAwC,GAAGP,KAAK,CAACQ,OAAN,CAAc,MAAO,CACpE;AAAEC,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,MAAM,EAAE,kBAA5B;AAAgDN,IAAAA,KAAK,EAAEb,MAAM,EAAEoB,YAAR,IAAwB;AAA/E,GADoE,EAEpE;AAAEF,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,MAAM,EAAE,kBAA5B;AAAgDN,IAAAA,KAAK,EAAEb,MAAM,EAAEqB,gBAAR,IAA4B;AAAnF,GAFoE,EAGpE;AAAEH,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,MAAM,EAAE,kBAA5B;AAAgDN,IAAAA,KAAK,EAAEb,MAAM,EAAEsB,gBAAR,IAA4B;AAAnF,GAHoE,EAIpE;AAAEJ,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,MAAM,EAAE,kBAA5B;AAAgDN,IAAAA,KAAK,EAAEb,MAAM,EAAEuB,gBAAR,IAA4B;AAAnF,GAJoE,EAKpE;AAAEL,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,MAAM,EAAE,kBAA5B;AAAgDN,IAAAA,KAAK,EAAEb,MAAM,EAAEwB,gBAAR,IAA4B;AAAnF,GALoE,CAArB,EAM7C,CAACxB,MAAD,CAN6C,CAAjD;AAQA,QAAMyB,OAAO,GAAGhB,KAAK,CAACQ,OAAN,CAAc,OAAO;AACnCJ,IAAAA,KADmC;AAEnCC,IAAAA,QAFmC;AAGnCY,IAAAA,WAAW,EAAEX;AAHsB,GAAP,CAAd,EAIZ,CAACF,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,CAJY,CAAhB;AAMA,sBACE,eAAC,6BAAD;AACE,IAAA,MAAM,EAAC,oBADT;AAEE,IAAA,QAAQ,EAAE,CAAC,CAACR,UAFd;AAGE,IAAA,KAAK,EAAEL,OAHT;AAIE,IAAA,QAAQ,EAAEM,YAJZ;AAKE,IAAA,IAAI,EAAEmB,wBAAYC,aALpB;AAME,IAAA,OAAO,EAAEZ;AANX,KAOMf,IAPN;AAQE,IAAA,OAAO,EAAEwB;AARX,KADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { TextTypeSelect, IToolbarButtonConfig, ITextTypeSelectProps } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { setHeading } from '../../actions';\nimport { getTitleByHeading } from '../../utils/getTipsByHeading';\n\nexport interface HeadingButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nexport default function HeadingButton(props: HeadingButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const heading = controller.query('getHeading') || 'paragraph';\n  const { isCollapsedAtEdge } = controller.value.selection;\n\n  const isDisabled = isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleChange = React.useCallback((headingStr: string) => {\n    controller.run('onAction', setHeading(headingStr));\n  }, [controller]);\n\n  const { title, shortCut, markdown } = getTitleByHeading(heading, locale);\n\n  const options: ITextTypeSelectProps['options'] = React.useMemo(() => ([\n    { key: 'paragraph', testid: 'option-paragraph', title: locale?.dropdownBody || 'Paragraph' },\n    { key: 'heading-1', testid: 'option-heading-1', title: locale?.dropdownHeading1 || 'Heading 1' },\n    { key: 'heading-2', testid: 'option-heading-2', title: locale?.dropdownHeading2 || 'Heading 2' },\n    { key: 'heading-3', testid: 'option-heading-3', title: locale?.dropdownHeading3 || 'Heading 3' },\n    { key: 'heading-4', testid: 'option-heading-4', title: locale?.dropdownHeading4 || 'Heading 4' },\n  ]), [locale]);\n\n  const tooltip = React.useMemo(() => ({\n    title,\n    shortCut,\n    description: markdown,\n  }), [title, shortCut, markdown]);\n\n  return (\n    <TextTypeSelect\n      testid=\"bi-toolbar-heading\"\n      disabled={!!isDisabled}\n      value={heading as any}\n      onChange={handleChange}\n      role={PluginRoles.headingSelect}\n      options={options}\n      {...rest}\n      tooltip={tooltip}\n    />\n  );\n}\n"],"file":"headingButton.js"}