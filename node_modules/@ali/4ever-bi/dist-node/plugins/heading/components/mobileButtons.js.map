{"version":3,"sources":["../../../../../src/plugins/heading/components/mobileButtons.tsx"],"names":["MOBILE_TOOLBAR","fontSize","width","fw","icon","paragraph","blockquote","Title","styled","div","props","isBlockActive","type","block","data","useClick","controller","hType","handleClick","React","useCallback","run","createMobileHeading","Object","keys","reduce","result","Wrapper","item","focusBlock","anchorBlock","value","isActive","locale","title","replace"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { Block } from '@ali/4ever-cangjie';\nimport { setHeading } from '../actions';\nimport { toggleBlockquote, disableBlockquote } from '@ali/4ever-utils';\nimport type { MobileToolbarButtonProps } from '@ali/4ever-component';\nimport { isDisabled } from './headingSimpleButton';\n\nconst MOBILE_TOOLBAR = {\n  'heading-1': {\n    fontSize: 17,\n    width: 81,\n    fw: 'bold',\n    icon: 'h1',\n  },\n  'heading-2': {\n    fontSize: 16,\n    width: 74,\n    fw: 'bold',\n    icon: 'h2',\n  },\n  'heading-3': {\n    fontSize: 15,\n    width: 67,\n    fw: 'bold',\n    icon: 'h3',\n  },\n  'heading-4': {\n    fontSize: 14,\n    width: 62,\n    fw: 'bold',\n    icon: 'h4',\n  },\n  paragraph: {\n    fontSize: 14,\n    width: 55,\n    fw: 'inherit',\n    icon: 'paragraph',\n  },\n  blockquote: {\n    fontSize: 14,\n    width: 55,\n    fw: 'inherit',\n    icon: 'blockquote',\n  },\n};\n\nconst Title = styled.div<{ fontSize: number; fw: 'bold' | 'inherit' }>`\n  color: black;\n  font-weight: ${(props) => props.fw};\n  font-size: ${(props) => props.fontSize}px;\n`;\n\nfunction isBlockActive(type: string, block: Block | null) {\n  if (!block) {\n    return false;\n  }\n  if (type === 'blockquote') {\n    return block.data.blockquote;\n  }\n  if (type === 'paragraph') {\n    return block.type === type && !block.data.blockquote;\n  }\n  return block.type === type;\n}\n\nfunction useClick(controller, hType) {\n  const handleClick = React.useCallback(() => {\n    if (hType === 'blockquote') {\n      controller.run('onAction', setHeading('paragraph'));\n      controller.run('onAction', toggleBlockquote());\n    } else {\n      controller.run('onAction', setHeading(hType));\n      controller.run('onAction', disableBlockquote());\n    }\n  }, [controller, hType]);\n  return handleClick;\n}\n\nexport default function createMobileHeading() {\n  return Object.keys(MOBILE_TOOLBAR).reduce((result, hType) => {\n    result[`${hType}MobileBig`] = (props: MobileToolbarButtonProps) => {\n      const { icon } = MOBILE_TOOLBAR[hType];\n      const { controller, Wrapper, item } = props;\n\n      const { focusBlock, anchorBlock } = controller.value;\n      const isActive =\n        focusBlock === anchorBlock && isBlockActive(hType, focusBlock);\n      const handleClick = useClick(controller, hType);\n      return (\n        <Wrapper\n          item={item}\n          type=\"big\"\n          onClick={handleClick}\n          isFocused={isActive}\n          isDisabled={isDisabled(controller)}\n          icon={icon}\n        />\n      );\n    };\n    result[`${hType}Mobile`] = (props: MobileToolbarButtonProps) => {\n      const { controller, Wrapper, item, locale } = props;\n      const handleClick = useClick(controller, hType);\n      const title = locale && locale[`${hType.replace('-', '')}Mobile`];\n\n      const { focusBlock, anchorBlock } = controller.value;\n      const isActive =\n        focusBlock === anchorBlock && isBlockActive(hType, focusBlock);\n      const { fontSize, width, fw } = MOBILE_TOOLBAR[hType];\n\n      return (\n        <React.Fragment>\n          <Wrapper\n            item={item}\n            type=\"horiz\"\n            width={width}\n            isActive={isActive}\n            isDisabled={isDisabled(controller)}\n            onClick={handleClick}\n          >\n            <Title fontSize={fontSize} fw={fw}>\n              {title}\n            </Title>\n          </Wrapper>\n        </React.Fragment>\n      );\n    };\n    return result;\n  }, {});\n}\n"],"file":"mobileButtons.js"}