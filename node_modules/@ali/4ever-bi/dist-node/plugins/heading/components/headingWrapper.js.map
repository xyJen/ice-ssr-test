{"version":3,"sources":["../../../../../src/plugins/heading/components/headingWrapper.tsx"],"names":["HeadingWrapper","React","Component","handleHeadingChange","controller","onHeadingsChange","props","dataValue","query","value","getChildContext","onHeadingChange","componentWillUnmount","cancel","render","children","childContextTypes","PropTypes","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAQe,MAAMA,cAAN,SAA6BC,KAAK,CAACC,SAAnC,CAAkE;AAAA;AAAA;AAAA,SAkB/EC,mBAlB+E,GAkBP,wCAAuB,MAAM;AACnG,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAmC,KAAKC,KAA9C;AACA,YAAMC,SAAS,GAAGH,UAAU,CAACI,KAAX,CAAiB,cAAjB,CAAlB;AACAH,MAAAA,gBAAgB,CAAC,6BAAYE,SAAS,IAAIH,UAAU,CAACK,KAApC,CAAD,CAAhB;AACD,KAJuE,CAlBO;AAAA;;AAK/EC,EAAAA,eAAe,GAAG;AAChB,WAAO;AACLC,MAAAA,eAAe,EAAE,KAAKR;AADjB,KAAP;AAGD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKT,mBAAT,EAA8B;AAC5B,WAAKA,mBAAL,CAAyBU,MAAzB;AACA,WAAKV,mBAAL,GAA2B,IAA3B;AACD;AACF;;AAQDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AACA,WAAOS,QAAP;AACD;;AA3B8E;;;AAA5Df,c,CACZgB,iB,GAAoB;AACzBL,EAAAA,eAAe,EAAEM,SAAS,CAACC;AADF,C;AA2B5B","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { getHeadings, throttleByIdleCallback } from '@ali/4ever-bamboo';\n\nexport interface HeadingWrapperProps {\n  controller: Controller;\n  style?: React.CSSProperties;\n  onHeadingsChange: (headings) => void;\n}\n\nexport default class HeadingWrapper extends React.Component<HeadingWrapperProps> {\n  static childContextTypes = {\n    onHeadingChange: PropTypes.func,\n  };\n\n  getChildContext() {\n    return {\n      onHeadingChange: this.handleHeadingChange,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.handleHeadingChange) {\n      this.handleHeadingChange.cancel();\n      this.handleHeadingChange = null;\n    }\n  }\n\n  handleHeadingChange: ReturnType<typeof throttleByIdleCallback> | null = throttleByIdleCallback(() => {\n    const { controller, onHeadingsChange } = this.props;\n    const dataValue = controller.query('getDataValue');\n    onHeadingsChange(getHeadings(dataValue || controller.value));\n  });\n\n  render() {\n    const { children } = this.props;\n    return children;\n  }\n};\n"],"file":"headingWrapper.js"}