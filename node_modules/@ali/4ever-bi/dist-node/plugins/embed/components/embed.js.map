{"version":3,"sources":["../../../../../src/plugins/embed/components/embed.tsx"],"names":["previewHeight","DEFAULT_PREVIEW_HEIGHT","theme","embed","EmbedPreviewHeader","EmbedDownloadButton","EmbedCard","EmbedPlugin","MIN_PREVIEW_HEIGHT","MAX_PREVIEW_HEIGHT","HEIGHT_RANGE","Embed","PureComponent","constructor","props","ref","React","createRef","interval","previewTimeout","previewUnfoldTimeout","getNodeData","node","data","onSwitchViewType","viewType","controller","prevViewType","run","setState","previewUrl","onDownloadFile","src","name","type","size","onDownload","handleResizeStart","dragging","handleResize","e","height","handleResizeStop","state","previewSize","showPreviewSlideDown","setTimeout","preview","previewing","onPreview","then","res","truePreviewUrl","catch","previewError","reTryPreview","allowDownload","componentDidMount","componentDidUpdate","prevProps","prevData","componentWillUnmount","clearTimeout","clearInterval","renderCard","isSelected","locale","renderPreviewContent","width","border","background","renderPreview","scale","zoomContainer","transitionProperty","handlePreviewContentMouseDown","preventDefault","enableBorderHighlight","query","Infinity","Math","min","title","display","renderInlineToolbar","enableFilePreview","current","render","attributes","isCollapsed","value","selection","Container","scrollableContainer","document","body"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  useZoom,\n  useZoomContainer,\n  RenderNodeProps,\n} from '@ali/4ever-cangjie';\nimport { sanitizeUrl } from '@ali/4ever-utils';\nimport {\n  EmbedPlugin,\n  useScrollableContainer,\n  EmbedNode,\n  theme,\n} from '@ali/4ever-bamboo';\nimport {\n  EmbedFilePreviewWrapper,\n  PreviewContentWrapper,\n  EmbedFilePreviewMask,\n  PreviewError,\n  PreviewErrorText,\n  PreviewErrorRetry,\n} from './styled';\nimport { updateFile } from '@ali/4ever-factory';\nimport { Resizable } from '@ali/4ever-component';\nimport { EmbedInlineToolbar } from '@ali/4ever-factory';\nimport { EmbedPluginConfig } from '../types';\n\nconst { previewHeight: DEFAULT_PREVIEW_HEIGHT } = theme.embed;\n\nconst {\n  EmbedPreviewHeader, EmbedDownloadButton, EmbedCard,\n} = EmbedPlugin;\n\ninterface IProps extends\n  Pick<EmbedPluginConfig, 'allowDownload' | 'enableFilePreview' | 'locale'>,\n  RenderNodeProps<EmbedNode> {\n  mobile: boolean;\n  onDownload: EmbedPluginConfig['downloadFile'];\n  onPreview: EmbedPluginConfig['transformDocURL'];\n  scrollableContainer: HTMLElement | Window;\n  zoomContainer: HTMLElement | null;\n  scale: number;\n}\n\ninterface IState {\n  height?: number;\n  previewUrl?: string;\n  dragging?: boolean;\n  previewError?: boolean;\n  previewing: boolean;\n  allowDownload: boolean;\n}\n\nconst MIN_PREVIEW_HEIGHT = 150;\nconst MAX_PREVIEW_HEIGHT = 800;\n\nconst HEIGHT_RANGE = [MIN_PREVIEW_HEIGHT, MAX_PREVIEW_HEIGHT] as [\n  number,\n  number,\n];\n\nclass Embed extends PureComponent<IProps, IState> {\n  ref = React.createRef<HTMLDivElement>();\n\n  interval = null;\n\n  previewTimeout = null;\n\n  previewUnfoldTimeout = null;\n\n  constructor(props: IProps) {\n    super(props);\n\n    const { node, allowDownload } = props;\n    const { data } = node;\n    const {\n      previewSize,\n      viewType,\n    } = data;\n\n    let height = 0;\n    if (viewType === 'preview') {\n      if (previewSize) {\n        // @ts-ignore\n        height = previewSize.height;\n      } else {\n        height = DEFAULT_PREVIEW_HEIGHT;\n      }\n    }\n\n    this.state = {\n      height,\n      previewUrl: '',\n      previewError: false,\n      previewing: false,\n      dragging: false,\n      allowDownload: typeof allowDownload === 'boolean' ? allowDownload : false, // 如果布尔值，直接设置\n    };\n  }\n\n  getNodeData = () => {\n    const { node } = this.props;\n    const { data } = node;\n    return data;\n  };\n\n  componentDidMount() {\n    const { src } = this.getNodeData();\n    const { node, allowDownload } = this.props;\n    const { data } = node;\n    const { viewType } = data;\n\n    if (viewType === 'preview' && src) {\n      this.preview();\n    }\n\n    if (typeof allowDownload === 'function') {\n      allowDownload(src).then(res => {\n        this.setState({\n          allowDownload: res,\n        });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data: prevData } = prevProps.node;\n    const { data } = this.props.node;\n    const { viewType: prevViewType } = prevData;\n    const { viewType } = data;\n\n    if (prevViewType !== viewType && viewType === 'preview') {\n      this.showPreviewSlideDown();\n      this.preview();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.previewTimeout) {\n      clearTimeout(this.previewTimeout);\n      this.previewTimeout = null;\n    }\n    if (this.previewUnfoldTimeout) {\n      clearTimeout(this.previewUnfoldTimeout);\n      this.previewUnfoldTimeout = null;\n    }\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  }\n\n  onSwitchViewType = (viewType: string) => {\n    const { controller, node } = this.props;\n    const { data } = node;\n    const { viewType: prevViewType } = this.getNodeData();\n    if (prevViewType === viewType) {\n      return;\n    }\n    controller.run(\n      'onAction',\n      updateFile(\n        node,\n        {\n          ...data,\n          viewType,\n        },\n      ),\n    );\n\n    if (viewType === 'preview') {\n      this.setState({\n        previewUrl: '',\n      });\n    }\n  };\n\n  onDownloadFile = () => {\n    const { src, name, type, size } = this.getNodeData();\n    const { onDownload } = this.props;\n    if (onDownload) {\n      onDownload(src, {\n        name,\n        type,\n        size,\n      });\n    }\n  };\n\n  handleResizeStart = () => {\n    this.setState({\n      dragging: true,\n    });\n  };\n\n  handleResize = (e, size: { height: number }) => {\n    this.setState({\n      height: size.height,\n    });\n  };\n\n  handleResizeStop = () => {\n    const { height } = this.state;\n    const { controller, node } = this.props;\n    const { data } = node;\n    this.setState({\n      dragging: false,\n    });\n    controller.run(\n      'onAction',\n      updateFile(\n        node,\n        {\n          ...data,\n          previewSize: {\n            height,\n          },\n        },\n      ),\n    );\n  };\n\n  showPreviewSlideDown = () => {\n    // slidedown效果\n    this.previewTimeout = setTimeout(() => {\n      this.setState({\n        height: 36,\n      });\n    });\n    this.previewUnfoldTimeout = setTimeout(() => {\n      this.setState({\n        height: DEFAULT_PREVIEW_HEIGHT,\n      });\n    }, 10);\n  };\n\n  preview = () => {\n    const { previewing } = this.state;\n    const { src } = this.getNodeData();\n    const { onPreview } = this.props;\n\n    if (previewing) {\n      return;\n    }\n    this.setState({\n      previewing: true,\n    });\n    if (!onPreview) {\n      return;\n    }\n    onPreview(src)\n      .then((res) => {\n        const { previewUrl: truePreviewUrl } = res;\n        if (truePreviewUrl) {\n          this.setState({\n            previewUrl: truePreviewUrl,\n            previewing: false,\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({\n          previewError: true,\n          previewing: false,\n        });\n      });\n  };\n\n  reTryPreview = () => {\n    this.setState({\n      previewError: false,\n    });\n    this.preview();\n  };\n\n  renderCard() {\n    const { allowDownload } = this.state;\n    const { name, size } = this.getNodeData();\n    const { isSelected, node, locale } = this.props;\n    return (\n      <EmbedCard\n        name={name}\n        allowDownload={allowDownload}\n        isSelected={isSelected}\n        node={node}\n        locale={locale}\n        onDownloadFile={this.onDownloadFile}\n        size={size}\n      />\n    );\n  }\n\n  renderPreviewContent() {\n    const { previewUrl, previewError } = this.state;\n    const { locale = {} } = this.props;\n\n    if (previewError) {\n      return (\n        <PreviewError>\n          <PreviewErrorText>\n            {locale.previewError}\n            <PreviewErrorRetry onClick={this.reTryPreview}>\n              {locale.reTryPreview}\n            </PreviewErrorRetry>\n          </PreviewErrorText>\n        </PreviewError>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {previewUrl ? (\n          <iframe\n            style={{\n              width: '100%',\n              height: '100%',\n              border: 'none',\n              background: '#EDEDED',\n            }}\n            title=\"preview\"\n            src={sanitizeUrl(previewUrl)}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  renderPreview() {\n    const { height, dragging, allowDownload } = this.state;\n    const { type, name, size } = this.getNodeData();\n    const { isSelected, scale, zoomContainer, locale, controller } = this.props;\n    const transitionProperty = dragging ? 'none' : 'height';\n\n    const handlePreviewContentMouseDown = (e) => {\n      e.preventDefault();\n    };\n\n    const enableBorderHighlight = controller.query('enableBorderHighlight');\n\n    return (\n      <Resizable\n        axis=\"y\"\n        visible={isSelected}\n        width={Infinity}\n        height={Math.min(height || 0, MAX_PREVIEW_HEIGHT)}\n        heightRange={HEIGHT_RANGE}\n        onResize={this.handleResize}\n        onResizeStop={this.handleResizeStop}\n        onResizeStart={this.handleResizeStart}\n        speed={1.0 / scale}\n        zoomContainer={zoomContainer}\n        isActive={isSelected}\n        enableBorderHighlight={enableBorderHighlight}\n      >\n        <EmbedFilePreviewWrapper\n          isSelected={isSelected}\n          style={{ height, transitionProperty }}\n          data-testid=\"embed-preview\"\n          data-type={`embed-${type}`}\n        >\n          <EmbedPreviewHeader\n            type={type}\n            name={name}\n            size={size}\n            renderExtra={() => (<EmbedDownloadButton\n              title={locale?.title}\n              onDownloadFile={this.onDownloadFile}\n              allowDownload={allowDownload}\n            />)}\n          />\n          <PreviewContentWrapper onMouseDown={handlePreviewContentMouseDown}>\n            {this.renderPreviewContent()}\n            <EmbedFilePreviewMask\n              style={{ display: !isSelected || dragging ? 'block' : 'none' }}\n            />\n          </PreviewContentWrapper>\n        </EmbedFilePreviewWrapper>\n      </Resizable>\n    );\n  }\n\n  renderInlineToolbar() {\n    const { controller, node, locale, enableFilePreview } = this.props;\n    return (\n      <EmbedInlineToolbar\n        controller={controller}\n        node={node}\n        triggerNode={this.ref.current}\n        locale={locale || {}}\n        onSwitchViewType={this.onSwitchViewType}\n        isMoreButtonShown={enableFilePreview}\n      />\n    );\n  }\n\n  render() {\n    const { viewType } = this.getNodeData();\n    const { attributes, isSelected, controller } = this.props;\n    const { isCollapsed } = controller.value.selection;\n    // const hasHoverToolbar = controller.query('hasHoverToolbar', 'embed');\n    return (\n      <React.Fragment>\n        {isSelected && isCollapsed ? this.renderInlineToolbar() : null}\n        <div\n          {...attributes}\n          ref={this.ref}\n        >\n          {viewType === 'preview' ? this.renderPreview() : this.renderCard()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Container: React.FC<IProps> = (props) => {\n  const scrollableContainer = useScrollableContainer();\n  const zoomContainer = useZoomContainer() || document.body;\n  const scale = useZoom();\n\n  return (\n    <Embed\n      {...props}\n      scrollableContainer={scrollableContainer!}\n      zoomContainer={zoomContainer}\n      scale={scale}\n    />\n  );\n};\n\nexport default Container;\n"],"file":"embed.js"}