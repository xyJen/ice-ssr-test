"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = EmbedButton;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _everBamboo = require("@ali/4ever-bamboo");

var _weToolbar = require("@ali/we-toolbar");

var _weIcon = require("@ali/we-icon");

var _everFactory = require("@ali/4ever-factory");

const _createElement = /*#__PURE__*/React.createElement;
const iconStyle = {
  width: 20,
  height: 20
};

var _ref = /*#__PURE__*/_createElement(_weIcon.ToolbarLocalfileNormal, {
  style: iconStyle
});

function EmbedButton(props) {
  const {
    controller,
    locale,
    ...rest
  } = props;
  const {
    value
  } = controller;
  const isDisabled = controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard');
  const handleClick = isDisabled ? () => {} : () => controller.run('onAction', (0, _everFactory.selectFile)());
  return /*#__PURE__*/_createElement(_weToolbar.IconButton, (0, _extends2.default)({}, rest, {
    title: locale.buttonTitle,
    tooltip: locale.buttonTitle,
    className: "bi-toolbar-embed",
    testid: "bi-toolbar-embed",
    icon: _ref,
    disabled: isDisabled,
    onClick: handleClick,
    role: _everBamboo.PluginRoles.embed
  }));
}
//# sourceMappingURL=embedButton.js.map