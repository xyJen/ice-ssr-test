{"version":3,"sources":["../../../../../src/plugins/translate/components/sidebar.tsx"],"names":["useState","useEffect","useRef","React","MAX_WORD_COUNT","Wrapper","styled","div","Content","p","isFailed","theme","colorRed1","ContentStatus","ContentWrapper","ButtonWrapper","SelectionWrapper","fontSizeSmall","Selection","InnerWrapper","Footer","colorText1","PlaceholderWrapper","span","list","title","key","Sidebar","props","controller","getTranslation","defaultOutputLanguage","outputLanguageList","locale","maxWordCount","wrapperStyle","value","input","setInput","failedText","setFailedText","outputLanguage","setOutputLanguage","isExceedText","setExceedText","text","fragment","inputLanguage","undefined","handleChange","targetLan","then","res","catch","failed","throttled","inputText","outputLan","length","exceedMaxLength","substring","current","disableReplaceText","selection","isCollapsed","disableInsertText","renderContent","content","placeholder","translateTo","map","l","color","run","replace","marginLeft","insert","footer","defaultProps","v"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { throttle } from 'lodash-es';\nimport { ExclamationCircleBetaNormal, Select, SelectOption as Option, theme, Button } from '@ali/we-design';\nimport { replaceWithTranslatedText, insertTranslatedText } from '../actions';\nimport type { Controller } from '@ali/4ever-cangjie';\n\nconst { useState, useEffect, useRef } = React;\n\nconst MAX_WORD_COUNT = 100;\n\nexport interface IGetTranslation {\n  inputLanguage: string;\n  outputLanguage: string;\n  input: string;\n}\n\nexport interface ITranslateConfig {\n  getTranslation?: any; // 翻译接口\n  defaultOutputLanguage?: string; // 默认输出语言\n  outputLanguageList: any[];\n  maxWordCount?: number, // 最大翻译字数, 目前是字符 TODO\n  wrapperStyle?: React.CSSProperties,\n}\n\nexport interface ISidebarTranslate extends ITranslateConfig, ISidebar { }\n\nexport interface ISidebar {\n  controller: Controller;\n  locale: Record<string, any>;\n}\n\n\nconst Wrapper = styled.div<any>`\n  box-sizing: border-box;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: rgba(17,31,44,0.72);\n`;\n\n// 允许换行 和 多空格\nconst Content = styled.div<{ isFailed?: boolean }>`\n  width: 100%;\n  color: ${p => (p.isFailed ? theme.colorRed1 : 'inherit')};\n  word-break: break-all;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  white-space: pre-wrap;\n`;\n\nconst ContentStatus = styled.div`\n  width: 100%;\n  color: #FB602D;\n`;\n\nconst ContentWrapper = styled.div<{ isFailed?: boolean }>`\n  flex: auto;\n  overflow: auto;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  max-height: 379px; \n  width: 100%;\n  border: 1px solid ${p => (p.isFailed ? '#FB602D' : 'rgba(126, 134, 142, 0.24)')};\n  border-radius: 8px;\n  padding: 10px;\n  margin: 10px 0;\n  font-size: 13px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 50px;\n  margin-top: 6px;\n`;\n\nconst SelectionWrapper = styled.div`\n  font-size: ${theme.fontSizeSmall};\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  flex-shrink: 0;\n`;\n\nconst Selection = styled.div`\n  margin-right: 16px;\n  height: 14px;\n  line-height: 14px;\n  font-size: 14px;\n`;\n\nconst InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst Footer = styled.div`\n  color: ${theme.colorText1};\n  font-size: ${theme.fontSizeSmall};\n  text-align: center;\n  margin-bottom: 16px;\n`;\n\nconst PlaceholderWrapper = styled.span`\n  color: rgba(23, 26, 29, 0.24);\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nconst list = [\n  {\n    title: '英文',\n    key: 'en',\n  },\n  {\n    title: '中文',\n    key: 'zh',\n  },\n];\n\nconst Sidebar: React.FC<ISidebarTranslate> = props => {\n  const {\n    controller,\n    getTranslation,\n    defaultOutputLanguage,\n    outputLanguageList,\n    locale = {},\n    maxWordCount,\n    wrapperStyle,\n  } = props;\n  const { value } = controller;\n  const [input, setInput] = useState();\n  const [failedText, setFailedText] = useState();\n  const [outputLanguage, setOutputLanguage] = useState(defaultOutputLanguage);\n  const [isExceedText, setExceedText] = useState(null);\n  let text: string = value.fragment && value.fragment.text;\n\n  const inputLanguage = undefined;\n\n  const handleChange = (targetLan: string) => {\n    setOutputLanguage(targetLan);\n    getTranslation({ inputLanguage, outputLanguage: targetLan, input: text })\n      .then(res => {\n        setFailedText(null);\n        setInput(res);\n      })\n      .catch(() => {\n        // handle exception\n        setFailedText(locale.failed || '翻译失败, 请重试.');\n      });\n  };\n\n  // add throttled to aovid frequent uses input\n  const throttled = useRef(\n    throttle((inputText: string, outputLan: string) => {\n      if (getTranslation) {\n        getTranslation({ inputLanguage, outputLanguage: outputLan, input: inputText })\n          .then(res => {\n            setFailedText(null);\n            setInput(res);\n          })\n          .catch(() => {\n            // handle exception\n            setFailedText(locale.failed || '翻译失败, 请重试.');\n          });\n      }\n    }, 500),\n  );\n\n  useEffect(() => {\n    // add async translation service here\n    if (text) {\n      // cut the input with limits\n      if (text.length > maxWordCount) {\n        setExceedText(locale.exceedMaxLength || '超过最大翻译字数');\n      } else {\n        setExceedText('');\n      }\n      text = text.substring(0, maxWordCount);\n      throttled.current(text, outputLanguage);\n    }\n  }, [text]);\n\n  const disableReplaceText = !!controller.value.selection.isCollapsed || !input || failedText;\n  const disableInsertText = !input || failedText;\n\n  const renderContent = () => {\n    const content = input ? input : (\n      <PlaceholderWrapper>\n        {locale.placeholder || '划词，将在面板中显示翻译结果'}\n      </PlaceholderWrapper>\n    );\n    if (failedText) {\n      return (\n        <Content isFailed>\n          <ExclamationCircleBetaNormal />\n          {failedText}\n        </Content>\n      );\n    } else if (isExceedText) {\n      return (\n        <React.Fragment>\n          <Content>{content}</Content>\n          <ContentStatus>\n            <ExclamationCircleBetaNormal />\n            {isExceedText}\n          </ContentStatus>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <Content>\n          {content}\n        </Content>\n      );\n    }\n  };\n\n  return (\n    <Wrapper data-testid=\"translate-panel\" style={wrapperStyle}>\n      <InnerWrapper>\n        <SelectionWrapper>\n          <Selection>{locale.translateTo}:</Selection>\n          <div>\n            <Select\n              value={outputLanguage}\n              onChange={handleChange}\n            >\n              {\n                outputLanguageList.map(l => (\n                  <Option value={l.key} key={l.key}>\n                    <span style={{ color: 'rgba(17, 31, 44, 0.72)' }}>{l.title}</span>\n                  </Option>\n                ))\n              }\n            </Select>\n          </div>\n        </SelectionWrapper>\n        <ContentWrapper>\n          {renderContent()}\n        </ContentWrapper>\n        <ButtonWrapper>\n          <Button\n            type=\"primary\"\n            onClick={() => controller.run('onAction', replaceWithTranslatedText(input))}\n            disabled={disableReplaceText}\n            testid=\"translate-replace\"\n          >\n            {locale.replace}\n          </Button>\n          <Button\n            type=\"normal\"\n            testid=\"translate-insert\"\n            disabled={disableInsertText}\n            onClick={() => controller.run('onAction', insertTranslatedText(input))}\n            style={{ marginLeft: 8 }}\n          >\n            {locale.insert}\n          </Button>\n        </ButtonWrapper>\n      </InnerWrapper>\n      <Footer>{locale.footer}</Footer>\n    </Wrapper >\n  );\n};\n\nSidebar.defaultProps = {\n  getTranslation: v => v, // 翻译接口\n  defaultOutputLanguage: 'en', // 默认输出语言\n  outputLanguageList: list, // 可翻译的语言列表\n  maxWordCount: MAX_WORD_COUNT, // 最大字数显示\n};\n\nexport default Sidebar;\n"],"file":"sidebar.js"}