{"version":3,"sources":["../../../../../src/plugins/eventTracking/handlers/onCopy.ts"],"names":["trackCopy","controller","run","type","TrackingType","copy","sample","onCopy","event","next","readOnly","canCopy"],"mappings":";;;;;;;AACA;;AACA;;AAEA,MAAMA,SAAS,GAAG,wBAAQC,UAAD,IAAgB;AACvCA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEE,4BAAc;AAAEC,IAAAA,IAAI,EAAEC,sBAAaC;AAArB,GAAd,CAFF;AAID,CALiB,EAKf;AAAEC,EAAAA,MAAM,EAAE;AAAV,CALe,CAAlB;;AAOe,SAASC,MAAT,CAAgBC,KAAhB,EAA6CP,UAA7C,EAAqEQ,IAArE,EAA2E;AACxF,MAAIR,UAAU,CAACS,QAAX,IAAuB,CAACT,UAAU,CAACU,OAAvC,EAAgD;AAC9C,WAAOF,IAAI,EAAX;AACD;;AAEDT,EAAAA,SAAS,CAACC,UAAD,CAAT;AAEA,SAAOQ,IAAI,EAAX;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { sample } from '@ali/4ever-bamboo';\nimport { eventTracking, TrackingType } from '../actions';\n\nconst trackCopy = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({ type: TrackingType.copy }),\n  );\n}, { sample: 10 })\n\nexport default function onCopy(event: React.ClipboardEvent, controller: Controller, next) {\n  if (controller.readOnly && !controller.canCopy) {\n    return next();\n  }\n\n  trackCopy(controller);\n\n  return next();\n}\n"],"file":"onCopy.js"}