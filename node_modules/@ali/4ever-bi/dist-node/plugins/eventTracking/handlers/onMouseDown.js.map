{"version":3,"sources":["../../../../../src/plugins/eventTracking/handlers/onMouseDown.ts"],"names":["trackFocusText","controller","run","type","TrackingType","focusText","sample","onMouseDown","event","next","shiftKey"],"mappings":";;;;;;;AAEA;;AACA;;AAEA,MAAMA,cAAc,GAAG,wBAAQC,UAAD,IAAgB;AAC5CA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEE,4BAAc;AACZC,IAAAA,IAAI,EAAEC,sBAAaC;AADP,GAAd,CAFF;AAMD,CAPsB,EAOpB;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAPoB,CAAvB;;AASe,SAASC,WAAT,CACbC,KADa,EAEbP,UAFa,EAGbQ,IAHa,EAIb;AACA,MAAI,CAACD,KAAK,CAACE,QAAX,EAAqB;AACnBV,IAAAA,cAAc,CAACC,UAAD,CAAd;AACD;;AAED,SAAOQ,IAAI,EAAX;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { sample } from '@ali/4ever-bamboo';\nimport { eventTracking, TrackingType } from '../actions';\n\nconst trackFocusText = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({\n      type: TrackingType.focusText,\n    }),\n  );\n}, { sample: 50 })\n\nexport default function onMouseDown(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: () => void,\n) {\n  if (!event.shiftKey) {\n    trackFocusText(controller);\n  }\n\n  return next();\n}\n"],"file":"onMouseDown.js"}