{"version":3,"sources":["../../../../../src/plugins/eventTracking/handlers/onCut.ts"],"names":["trackCut","controller","run","type","TrackingType","cut","sample","onCut","event","next","readOnly","canCopy"],"mappings":";;;;;;;AACA;;AACA;;AAEA,MAAMA,QAAQ,GAAG,wBAAQC,UAAD,IAAgB;AACtCA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEE,4BAAc;AAAEC,IAAAA,IAAI,EAAEC,sBAAaC;AAArB,GAAd,CAFF;AAID,CALgB,EAKd;AAAEC,EAAAA,MAAM,EAAE;AAAV,CALc,CAAjB;;AAOe,SAASC,KAAT,CAAeC,KAAf,EAA4CP,UAA5C,EAAoEQ,IAApE,EAA0E;AACvF,MAAIR,UAAU,CAACS,QAAX,IAAuB,CAACT,UAAU,CAACU,OAAvC,EAAgD;AAC9C,WAAOF,IAAI,EAAX;AACD;;AAEDT,EAAAA,QAAQ,CAACC,UAAD,CAAR;AAEA,SAAOQ,IAAI,EAAX;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { eventTracking, TrackingType } from '../actions';\nimport { sample } from '@ali/4ever-bamboo';\n\nconst trackCut = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({ type: TrackingType.cut }),\n  );\n}, { sample: 5 })\n\nexport default function onCut(event: React.ClipboardEvent, controller: Controller, next) {\n  if (controller.readOnly && !controller.canCopy) {\n    return next();\n  }\n\n  trackCut(controller);\n\n  return next();\n}\n"],"file":"onCut.js"}