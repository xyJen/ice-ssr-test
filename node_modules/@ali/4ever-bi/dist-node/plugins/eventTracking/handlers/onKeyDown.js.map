{"version":3,"sources":["../../../../../src/plugins/eventTracking/handlers/onKeyDown.ts"],"names":["trackSplitBlock","controller","run","type","TrackingType","splitBlock","sample","trackDeleteText","deleteText","trackSelectAll","selectAll","onKeyDown","event","next","selection","value","isExpanded","anchor","isEdgePoint","focus","hotkeys","isSplitBlock","isDeleteBackward","atFirstPos","offset","isSelectAll"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAEA,MAAMA,eAAe,GAAG,wBAAQC,UAAD,IAAgB;AAC7CA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEE,4BAAc;AACZC,IAAAA,IAAI,EAAEC,sBAAaC;AADP,GAAd,CAFF;AAMD,CAPuB,EAOrB;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAPqB,CAAxB;AASA,MAAMC,eAAe,GAAG,wBAAQN,UAAD,IAAgB;AAC7CA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEE,4BAAc;AACZC,IAAAA,IAAI,EAAEC,sBAAaI;AADP,GAAd,CAFF;AAMD,CAPuB,EAOrB;AAAEF,EAAAA,MAAM,EAAE;AAAV,CAPqB,CAAxB;AASA,MAAMG,cAAc,GAAG,wBAAQR,UAAD,IAAgB;AAC5CA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEE,4BAAc;AACZC,IAAAA,IAAI,EAAEC,sBAAaM;AADP,GAAd,CAFF;AAMD,CAPsB,EAOpB;AAAEJ,EAAAA,MAAM,EAAE;AAAV,CAPoB,CAAvB;;AAUe,SAASK,SAAT,CACbC,KADa,EAEbX,UAFa,EAGbY,IAHa,EAIb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBb,UAAU,CAACc,KAAjC,CADA,CAGA;;AACA,MACE,CAACD,SAAD,IACAA,SAAS,CAACE,UADV,IAEAF,SAAS,CAACG,MAAV,CAAiBC,WAAjB,EAFA,IAGAJ,SAAS,CAACK,KAAV,CAAgBD,WAAhB,EAJF,EAKE;AACA,WAAOL,IAAI,EAAX;AACD;;AAED,MAAIO,qBAAQC,YAAR,CAAqBT,KAArB,CAAJ,EAAiC;AAC/BZ,IAAAA,eAAe,CAACC,UAAD,CAAf;AACD,GAFD,MAEO,IAAImB,qBAAQE,gBAAR,CAAyBV,KAAzB,CAAJ,EAAqC;AAC1C,UAAMW,UAAU,GAAGT,SAAS,CAACG,MAAV,CAAiBO,MAAjB,KAA4B,CAA/C;;AACA,QAAI,CAACD,UAAL,EAAiB;AACfhB,MAAAA,eAAe,CAACN,UAAD,CAAf;AACD;AACF,GALM,MAKA,IAAImB,qBAAQK,WAAR,CAAoBb,KAApB,CAAJ,EAAgC;AACrCH,IAAAA,cAAc,CAACR,UAAD,CAAd;AACD;;AAED,SAAOY,IAAI,EAAX;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller, hotkeys } from '@ali/4ever-cangjie';\nimport { sample } from '@ali/4ever-bamboo';\nimport { eventTracking, TrackingType } from '../actions';\n\nconst trackSplitBlock = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({\n      type: TrackingType.splitBlock\n    }),\n  );\n}, { sample: 10 })\n\nconst trackDeleteText = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({\n      type: TrackingType.deleteText,\n    }),\n  );\n}, { sample: 25 })\n\nconst trackSelectAll = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({\n      type: TrackingType.selectAll,\n    }),\n  );\n}, { sample: 5 })\n\n\nexport default function onKeyDown(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: () => void,\n) {\n  const { selection } = controller.value;\n\n  // 简单排除复杂的情况，选择高频的用户场景\n  if (\n    !selection ||\n    selection.isExpanded ||\n    selection.anchor.isEdgePoint() ||\n    selection.focus.isEdgePoint()\n  ) {\n    return next();\n  }\n\n  if (hotkeys.isSplitBlock(event)) {\n    trackSplitBlock(controller);\n  } else if (hotkeys.isDeleteBackward(event)) {\n    const atFirstPos = selection.anchor.offset === 0\n    if (!atFirstPos) {\n      trackDeleteText(controller)\n    }\n  } else if (hotkeys.isSelectAll(event)) {\n    trackSelectAll(controller);\n  }\n\n  return next();\n}\n"],"file":"onKeyDown.js"}