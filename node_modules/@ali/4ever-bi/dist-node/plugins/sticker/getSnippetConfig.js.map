{"version":3,"sources":["../../../../src/plugins/sticker/getSnippetConfig.tsx"],"names":["EmojiSpan","Styled","span","TitleSpan","getSnippetConfig","_","next","trigger","config","triggerPrefix","fetchItems","emoji","OldBambooPlugin","getEmojiData","Object","keys","map","key","title","prefix","value","filterItems","text","items","searchText","slice","maxResults","insertSnippet","controller","item","command","Commands","insertText","dispatch","mdType","from"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;uBAH4B,a;;AAK5B,MAAMA,SAAS,gBAAGC,0BAAOC,IAAV,kFAAf;;AAQA,MAAMC,SAAS,gBAAGF,0BAAOC,IAAV,gFAAf;;AAcA,MAAME,gBAA4C,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAChE,QAAMC,OAAO,GAAG,qBAAhB;AACA,QAAMC,MAAkC,GAAG;AACzCD,IAAAA,OADyC;AAEzCE,IAAAA,aAAa,EAAE,WAF0B;AAGzCC,IAAAA,UAAU,EAAE,YAAY;AACtB,YAAMC,KAA6B,GAAG,MAAMC,mCAAgBC,YAAhB,EAA5C;AACA,aAAOC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,GAAnB,CAAwBC,GAAD,KAAU;AACtCA,QAAAA,GADsC;AAEtCC,QAAAA,KAAK,eAAE,eAAC,SAAD,aAAaD,GAAb,MAF+B;AAGtCE,QAAAA,MAAM,eAAE,eAAC,SAAD,QAAYR,KAAK,CAACM,GAAD,CAAjB,CAH8B;AAItCG,QAAAA,KAAK,EAAET,KAAK,CAACM,GAAD;AAJ0B,OAAV,CAAvB,CAAP;AAMD,KAXwC;AAYzCI,IAAAA,WAAW,EAAE,OAAOC,IAAP,EAAqBC,KAArB,KAA8C;AACzD,YAAMC,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAnB,CADyD,CAEzD;;AACA,aAAO,MAAM,4BAAYF,KAAZ,EAAmBC,UAAnB,EAA+B;AAAEP,QAAAA,GAAG,EAAE,KAAP;AAAcS,QAAAA,UAAU,EAAE;AAA1B,OAA/B,CAAb;AACD,KAhBwC;AAiBzCC,IAAAA,aAAa,EAAE,CAACC,UAAD,EAAyBC,IAAzB,KAAkC;AAC/CD,MAAAA,UAAU,CAACE,OAAX,CAAmBC,sBAASC,UAA5B,EAAwCH,IAAI,CAACT,KAA7C;AACAQ,MAAAA,UAAU,CAACK,QAAX,CAAoB,6BAApB,EAAmD;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAAnD;AACD;AApBwC,GAA3C;AAuBA,SAAO;AACL,KAAC5B,OAAD,GAAWC,MADN;AAEL,OAAGF,IAAI;AAFF,GAAP;AAID,CA7BD;;eA+BeF,gB","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\nimport { Commands, Controller, Plugin, SnippetConfig, SnippetItemBase } from '@ali/4ever-cangjie';\nimport { OldBambooPlugin } from '@ali/4ever-plugin-sticker';\nimport { fuzzySearch } from '@ali/4ever-utils';\n\nconst EmojiSpan = Styled.span`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  font-size: 20px;\n  margin-right: 8px;\n`;\n\nconst TitleSpan = Styled.span`\n  display: inline-block;\n  font-size: 13px;\n  color: #111F2C;\n  .matched {\n    color: #0089FF;\n  }\n`;\n\ninterface SnippetItem extends SnippetItemBase {\n  value: string;\n}\n\n\nconst getSnippetConfig: Plugin['getSnippetConfig'] = (_, next) => {\n  const trigger = ':([^:\\\\W]|[\\+\\-])+$';\n  const config: SnippetConfig<SnippetItem> = {\n    trigger,\n    triggerPrefix: '([^:]|^)$',\n    fetchItems: async () => {\n      const emoji: Record<string, string> = await OldBambooPlugin.getEmojiData();\n      return Object.keys(emoji).map((key) => ({\n        key,\n        title: <TitleSpan>:{key}:</TitleSpan>,\n        prefix: <EmojiSpan>{emoji[key]}</EmojiSpan>,\n        value: emoji[key],\n      }));\n    },\n    filterItems: async (text: string, items: SnippetItem[]) => {\n      const searchText = text.slice(1);\n      // 性能考虑：至多筛选出 50 条\n      return await fuzzySearch(items, searchText, { key: 'key', maxResults: 50 });\n    },\n    insertSnippet: (controller: Controller, item) => {\n      controller.command(Commands.insertText, item.value);\n      controller.dispatch('createTriggerMarkdownAction', { mdType: 'emoji', from: 'snippet' });\n    },\n  };\n\n  return {\n    [trigger]: config,\n    ...next(),\n  }\n};\n\nexport default getSnippetConfig;"],"file":"getSnippetConfig.js"}