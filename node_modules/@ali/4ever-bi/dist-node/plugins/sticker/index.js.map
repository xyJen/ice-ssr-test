{"version":3,"sources":["../../../../src/plugins/sticker/index.tsx"],"names":["DEFAULT_STICKERS","Sticker","StickerPlugin","createStickerPlugin","config","stickerConfig","lang","DEFAULT_LANG","customSticker","sticker","params","stickerToolbar","enableSticker","toolbar","locale","onPanelVisibleChange","renderNode","StickerPlaceholder","renderToolbar","renderEditable","_","controller","next","_stickerPanel","value","data","menubar","menu","inlineMenu","onAction","onKeyDown","onCangjieSelect","onCangjieInput","getSnippetConfig","models","klass","type","STICKER_NODE_TYPE","defaultSticker","components"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;uBAf4B,a;AAiB5B,MAAM;AAAEA,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAAgCC,yBAAtC;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAA+D;AAC7D,QAAMC,aAAkC,GAAG;AACzCC,IAAAA,IAAI,EAAEC,uBADmC;AAEzCC,IAAAA,aAAa,EAAE,CAACR,gBAAD,CAF0B;AAGzC,OAAGI,MAAM,CAACK;AAH+B,GAA3C;AAKA,QAAMA,OAAO,GAAG,IAAIR,OAAJ,CAAYI,aAAZ,CAAhB;AACA,QAAMK,MAAM,GAAG;AACbL,IAAAA,aADa;AAEbI,IAAAA;AAFa,GAAf;AAIA,QAAME,cAAc,GAAGN,aAAa,CAACO,aAAd,GACnB;AAAEC,IAAAA,OAAO,EAAE,sBAAQH,MAAR;AAAX,GADmB,GAEnB,EAFJ;AAGA,QAAMI,MAAM,GAAGT,aAAa,CAACS,MAAd,IAAwB,EAAvC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAA2BV,aAAjC;AACA,SAAO,EACL,GAAG,kCAAU,EAAV,CADE;AAEL;AACAW,IAAAA,UAAU,EAAE,yBAAiBN,MAAjB,EAAyBO,2BAAzB,CAHP;AAILC,IAAAA,aAAa,EAAE,kCAAoBb,aAAa,CAACS,MAAlC,CAJV;AAKLK,IAAAA,cAAc,EAAE,CAACC,CAAD,EAAIC,UAAJ,EAAgBC,IAAhB,KAAyB;AACvC,YAAM;AAAEC,QAAAA;AAAF,UAAoBF,UAAU,CAACG,KAAX,CAAiBC,IAA3C;AACA,0BACE,qCACGH,IAAI,EADP,eAEE,eAAC,4BAAD;AACE,QAAA,UAAU,EAAED,UADd;AAEE,QAAA,OAAO,EAAEZ,OAFX;AAGE,QAAA,OAAO,EAAEc,aAHX;AAIE,QAAA,MAAM,EAAET,MAJV;AAKE,QAAA,eAAe,EAAEC;AALnB,QAFF,CADF;AAYD,KAnBI;AAoBLW,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAJA,iBADO;AAEPC,MAAAA,UAAU,EAAVA;AAFO,KApBJ;AAwBLC,IAAAA,QAAQ,EAARA,iBAxBK;AAyBLC,IAAAA,SAAS,EAATA,kBAzBK;AA0BLC,IAAAA,eAAe,EAAfA,wBA1BK;AA2BLC,IAAAA,cAAc,EAAdA,uBA3BK;AA4BL,OAAGrB,cA5BE;AA6BLsB,IAAAA,gBAAgB,EAAhBA,yBA7BK;AA8BLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,QADD;AAENC,MAAAA,IAAI,EAAEC;AAFA;AA9BH,GAAP;AAmCD;;AAEDlC,mBAAmB,CAACmC,cAApB,GAAqCtC,gBAArC;AACAG,mBAAmB,CAACoC,UAApB,GAAiC;AAC/BtB,EAAAA,kBAAkB,EAAlBA;AAD+B,CAAjC;eAIed,mB","sourcesContent":["import * as React from 'react';\nimport { StickerPlugin } from '@ali/4ever-bamboo';\nimport { StickerPluginConfig, ICustomSticker } from './types';\nimport createRenderNode from './renderNode';\nimport onCangjieSelect from './handlers/onCangjieSelect';\nimport onAction from './handlers/onAction';\nimport onKeyDown from './handlers/onKeyDown';\nimport toolbar from './toolbar';\nimport getSnippetConfig from './getSnippetConfig';\nimport { DEFAULT_LANG, STICKER_NODE_TYPE } from './constants';\nimport StickerPanelWrapper from './components/stickerPanelWrapper';\nimport { menu, inlineMenu } from './components/stickerMenu';\nimport StickerPlaceholder from './components/stickerPlaceholder';\nimport { BiPlugin, BiPluginConfig } from '../../types';\nimport createRenderToolbar from './createRenderToolbar';\nimport { moFactory } from '@ali/4ever-plugin-sticker';\nimport onCangjieInput from './handlers/onCangjieInput';\n\nconst { DEFAULT_STICKERS, Sticker } = StickerPlugin;\n\nfunction createStickerPlugin(config: BiPluginConfig): BiPlugin {\n  const stickerConfig: StickerPluginConfig = {\n    lang: DEFAULT_LANG,\n    customSticker: [DEFAULT_STICKERS] as ICustomSticker,\n    ...config.sticker,\n  };\n  const sticker = new Sticker(stickerConfig as StickerPlugin.IStickerProps);\n  const params = {\n    stickerConfig,\n    sticker,\n  };\n  const stickerToolbar = stickerConfig.enableSticker\n    ? { toolbar: toolbar(params) }\n    : {};\n  const locale = stickerConfig.locale || {};\n  const { onPanelVisibleChange } = stickerConfig;\n  return {\n    ...moFactory({}),\n    // @ts-ignore\n    renderNode: createRenderNode(params, StickerPlaceholder),\n    renderToolbar: createRenderToolbar(stickerConfig.locale),\n    renderEditable: (_, controller, next) => {\n      const { _stickerPanel } = controller.value.data;\n      return (\n        <>\n          {next()}\n          <StickerPanelWrapper\n            controller={controller}\n            sticker={sticker}\n            visible={_stickerPanel}\n            locale={locale}\n            onVisibleChange={onPanelVisibleChange}\n          />\n        </>\n      );\n    },\n    menubar: {\n      menu,\n      inlineMenu,\n    },\n    onAction,\n    onKeyDown,\n    onCangjieSelect,\n    onCangjieInput,\n    ...stickerToolbar,\n    getSnippetConfig,\n    models: {\n      klass: 'inline',\n      type: STICKER_NODE_TYPE,\n    },\n  };\n}\n\ncreateStickerPlugin.defaultSticker = DEFAULT_STICKERS;\ncreateStickerPlugin.components = {\n  StickerPlaceholder,\n};\n\nexport default createStickerPlugin;\n"],"file":"index.js"}