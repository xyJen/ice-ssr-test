"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.corretCaretPoint = corretCaretPoint;
exports.getCaretPosition = getCaretPosition;

var _everCangjie = require("@ali/4ever-cangjie");

const EXTRA_OFFSET_TOP = 4;
const EXTRA_OFFSET_LEFT = 2;
const EXTRA_OFFSET_RIGHT = 18;
const CARET_SCALE = 1.5;
const NARROW_GAP = 6;
/**
 * 光标位置处理。由于 void 节点内的光标无法定位，尝试获取前一个位置
 */

function corretCaretPoint(controller) {
  const {
    selection,
    document
  } = controller.value;
  const point = selection.getStart(document);

  if (document.getClosestVoid(point.key, controller) || document.getParent(point.key)?.type === 'code') {
    return controller.query(_everCangjie.Queries.pointAtDistance, point, -1);
  }

  return point;
}

let positionCache = null;

function getCaretPosition({
  controller,
  rect,
  zoom,
  panelHeight,
  panelWidth
}) {
  const pointCorrected = corretCaretPoint(controller);

  const position = _everCangjie.domUtils.findCaretPosition(pointCorrected);

  if (position) {
    // @ts-ignore
    positionCache = position;
  } else {
    return positionCache;
  }

  const originLeft = (position.clientLeft - rect.left) / zoom;
  const originTop = (position.clientTop - rect.top) / zoom;
  const holderHeight = position.height / zoom;
  const rectWidth = rect.width / zoom;
  const rectHeight = rect.height / zoom;
  let left = originLeft - EXTRA_OFFSET_LEFT;
  let isAtRight = left + panelWidth > rectWidth;

  if (isAtRight) {
    left = originLeft - panelWidth + EXTRA_OFFSET_RIGHT;

    if (left < 0) {
      // 当右侧溢出且左侧也不够面板展开时，面板紧临右侧展开
      left = rectWidth - panelWidth - NARROW_GAP;
      isAtRight = false;
    }
  }

  let top = originTop + holderHeight + EXTRA_OFFSET_TOP; // 表情面板靠近底部且上部空间足够时，向上展开

  const topWhenShowUp = originTop - panelHeight - EXTRA_OFFSET_TOP * CARET_SCALE;
  const isAtBottom = top + panelHeight > rectHeight && topWhenShowUp > 0;

  if (isAtBottom) {
    top = topWhenShowUp;
  }

  return {
    left,
    top,
    isAtBottom,
    isAtRight
  };
}
//# sourceMappingURL=getCaretPosition.js.map