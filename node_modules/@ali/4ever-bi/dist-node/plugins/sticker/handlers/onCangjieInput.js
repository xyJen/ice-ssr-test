"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everPluginSticker = require("@ali/4ever-plugin-sticker");

var _getMatchedEmojiQuery = _interopRequireDefault(require("../utils/getMatchedEmojiQuery"));

var _actions = require("../actions");

let emojiMap = null;

async function getEmojiMap() {
  if (!emojiMap) {
    return await (0, _everPluginSticker.getEmojiData)();
  }

  return emojiMap;
}

const onCangjieInput = (event, controller, next) => {
  if (event.detail.data !== ' ') return next();
  return onSpace(event, controller, next);
};

var _default = onCangjieInput;
/**
 * 通过::+space触发emoji的逻辑
 * @param event
 * @param controller
 * @param next
 */

exports.default = _default;

async function onSpace(event, controller, next) {
  const {
    selection,
    document,
    startText
  } = controller.value;
  if (selection.isExpanded || !startText || controller.value.anchorInline) return next();
  const endPoint = selection.convertToTextPoints(document).end;
  const text = startText.text.slice(0, endPoint.offset);
  if (!text) return next();
  const queryInfo = (0, _getMatchedEmojiQuery.default)(text, true);
  const path = document.getPath(startText.key);
  if (!queryInfo || !path) return next();
  event.preventDefault();
  const {
    query,
    offsetWithDelimiter
  } = queryInfo;
  const {
    start,
    end
  } = offsetWithDelimiter;
  const emojiMap = await getEmojiMap();
  const emoji = emojiMap[query];
  if (!emoji) return next();
  const key = startText.key;
  controller.run('onAction', (0, _actions.insertMarkdownEmoji)({
    key,
    start,
    end,
    emoji
  }));
}
//# sourceMappingURL=onCangjieInput.js.map