{"version":3,"sources":["../../../../../src/plugins/sticker/handlers/onAction.ts"],"names":["onAction","action","controller","next","type","payload","STICKER_INSERT","command","insertSticker","STICKER_SET","setSticker","STICKER_PANEL_SET_VISIBLE","setStickerPanelVisible","STICKER_MOVE_CARET","moveCaret","STICKER_SET_RANGE","setRange","INSERT_MARKDOWN_EMOJI","key","start","end","emoji","curNode","value","document","getNode","Commands","moveAnchorToKey","moveFocusToKey","insertText","moveToEndOfNode"],"mappings":";;;;;;;AAAA;;AAOA;;AAQA;;AAEe,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAkDC,IAAlD,EAAwD;AACrE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,MAA1B;;AACA,MAAIG,IAAI,KAAKE,uBAAb,EAA6B;AAC3B,WAAOJ,UAAU,CAACK,OAAX,CAAmBC,uBAAnB,EAAkCH,OAAlC,CAAP;AACD;;AACD,MAAID,IAAI,KAAKK,oBAAb,EAA0B;AACxB,WAAOP,UAAU,CAACK,OAAX,CAAmBG,oBAAnB,EAA+BL,OAA/B,CAAP;AACD;;AACD,MAAID,IAAI,KAAKO,kCAAb,EAAwC;AACtC,WAAOT,UAAU,CAACK,OAAX,CAAmBK,gCAAnB,EAA2CP,OAA3C,CAAP;AACD;;AACD,MAAID,IAAI,KAAKS,2BAAb,EAAiC;AAC/B,WAAOX,UAAU,CAACK,OAAX,CAAmBO,mBAAnB,EAA8BT,OAA9B,CAAP;AACD;;AACD,MAAID,IAAI,KAAKW,0BAAb,EAAgC;AAC9B,WAAOb,UAAU,CAACK,OAAX,CAAmBS,kBAAnB,EAA6BX,OAA7B,CAAP;AACD;;AACD,MAAID,IAAI,KAAKa,8BAAb,EAAoC;AAClC,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,GAAd;AAAmBC,MAAAA;AAAnB,QAA6BhB,OAAnC;AACA,UAAMiB,OAAO,GAAGpB,UAAU,CAACqB,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCP,GAAlC,CAAhB;AACAhB,IAAAA,UAAU,CACPK,OADH,CACWmB,sBAASC,eADpB,EACqCT,GADrC,EAC0CC,KAD1C,EAEGZ,OAFH,CAEWmB,sBAASE,cAFpB,EAEoCV,GAFpC,EAEyCE,GAFzC,EAGGb,OAHH,CAGWmB,sBAASG,UAHpB,EAGgCR,KAHhC,EAGuC,EAHvC;AAIA,WAAOC,OAAO,GACVpB,UAAU,CAACK,OAAX,CAAmBmB,sBAASI,eAA5B,EAA6CR,OAA7C,CADU,GAEVpB,UAFJ;AAGD;;AACD,SAAOC,IAAI,EAAX;AACD","sourcesContent":["import {\n  insertSticker,\n  moveCaret,\n  setRange,\n  setSticker,\n  setStickerPanelVisible,\n} from '../commands';\nimport {\n  STICKER_INSERT,\n  STICKER_SET,\n  STICKER_PANEL_SET_VISIBLE,\n  STICKER_MOVE_CARET,\n  STICKER_SET_RANGE,\n  INSERT_MARKDOWN_EMOJI,\n} from '../actions';\nimport { Commands, Controller } from '@ali/4ever-cangjie';\n\nexport default function onAction(action, controller: Controller, next) {\n  const { type, payload } = action;\n  if (type === STICKER_INSERT) {\n    return controller.command(insertSticker, payload);\n  }\n  if (type === STICKER_SET) {\n    return controller.command(setSticker, payload);\n  }\n  if (type === STICKER_PANEL_SET_VISIBLE) {\n    return controller.command(setStickerPanelVisible, payload);\n  }\n  if (type === STICKER_MOVE_CARET) {\n    return controller.command(moveCaret, payload);\n  }\n  if (type === STICKER_SET_RANGE) {\n    return controller.command(setRange, payload);\n  }\n  if (type === INSERT_MARKDOWN_EMOJI) {\n    const { key, start, end, emoji } = payload;\n    const curNode = controller.value.document.getNode(key);\n    controller\n      .command(Commands.moveAnchorToKey, key, start)\n      .command(Commands.moveFocusToKey, key, end)\n      .command(Commands.insertText, emoji, []);\n    return curNode\n      ? controller.command(Commands.moveToEndOfNode, curNode)\n      : controller;\n  }\n  return next();\n}\n"],"file":"onAction.js"}