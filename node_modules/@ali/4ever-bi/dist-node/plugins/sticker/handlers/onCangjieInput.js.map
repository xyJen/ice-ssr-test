{"version":3,"sources":["../../../../../src/plugins/sticker/handlers/onCangjieInput.ts"],"names":["emojiMap","getEmojiMap","onCangjieInput","event","controller","next","detail","data","onSpace","selection","document","startText","value","isExpanded","anchorInline","endPoint","convertToTextPoints","end","text","slice","offset","queryInfo","path","getPath","key","preventDefault","query","offsetWithDelimiter","start","emoji","run"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEA,IAAIA,QAAoC,GAAG,IAA3C;;AACA,eAAeC,WAAf,GAA6B;AAC3B,MAAI,CAACD,QAAL,EAAe;AACb,WAAO,MAAM,sCAAb;AACD;;AACD,SAAOA,QAAP;AACD;;AAED,MAAME,cAAwC,GAAG,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,KAA6B;AAC5E,MAAIF,KAAK,CAACG,MAAN,CAAaC,IAAb,KAAsB,GAA1B,EAA+B,OAAOF,IAAI,EAAX;AAC/B,SAAOG,OAAO,CAACL,KAAD,EAAQC,UAAR,EAAoBC,IAApB,CAAd;AACD,CAHD;;eAIeH,c;AAEf;AACA;AACA;AACA;AACA;AACA;;;;AACA,eAAeM,OAAf,CAAuBL,KAAvB,EAA8BC,UAA9B,EAA0CC,IAA1C,EAAgD;AAC9C,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAqCP,UAAU,CAACQ,KAAtD;AACA,MAAIH,SAAS,CAACI,UAAV,IAAwB,CAACF,SAAzB,IAAsCP,UAAU,CAACQ,KAAX,CAAiBE,YAA3D,EACE,OAAOT,IAAI,EAAX;AACF,QAAMU,QAAQ,GAAGN,SAAS,CAACO,mBAAV,CAA8BN,QAA9B,EAAwCO,GAAzD;AACA,QAAMC,IAAI,GAAGP,SAAS,CAACO,IAAV,CAAeC,KAAf,CAAqB,CAArB,EAAwBJ,QAAQ,CAACK,MAAjC,CAAb;AACA,MAAI,CAACF,IAAL,EAAW,OAAOb,IAAI,EAAX;AACX,QAAMgB,SAAS,GAAG,mCAAqBH,IAArB,EAA2B,IAA3B,CAAlB;AACA,QAAMI,IAAI,GAAGZ,QAAQ,CAACa,OAAT,CAAiBZ,SAAS,CAACa,GAA3B,CAAb;AACA,MAAI,CAACH,SAAD,IAAc,CAACC,IAAnB,EAAyB,OAAOjB,IAAI,EAAX;AACzBF,EAAAA,KAAK,CAACsB,cAAN;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAiCN,SAAvC;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASX,IAAAA;AAAT,MAAiBU,mBAAvB;AACA,QAAM3B,QAAQ,GAAG,MAAMC,WAAW,EAAlC;AACA,QAAM4B,KAAK,GAAG7B,QAAQ,CAAC0B,KAAD,CAAtB;AACA,MAAI,CAACG,KAAL,EAAY,OAAOxB,IAAI,EAAX;AACZ,QAAMmB,GAAG,GAAGb,SAAS,CAACa,GAAtB;AACApB,EAAAA,UAAU,CAAC0B,GAAX,CAAe,UAAf,EAA2B,kCAAoB;AAAEN,IAAAA,GAAF;AAAOI,IAAAA,KAAP;AAAcX,IAAAA,GAAd;AAAmBY,IAAAA;AAAnB,GAApB,CAA3B;AACD","sourcesContent":["import { Plugin } from '@ali/4ever-cangjie';\nimport { getEmojiData } from '@ali/4ever-plugin-sticker';\nimport getMatchedEmojiQuery from '../utils/getMatchedEmojiQuery';\nimport { insertMarkdownEmoji } from '../actions';\n\nlet emojiMap: Record<string, any> | null = null;\nasync function getEmojiMap() {\n  if (!emojiMap) {\n    return await getEmojiData();\n  }\n  return emojiMap;\n}\n\nconst onCangjieInput: Plugin['onCangjieInput'] = (event, controller, next) => {\n  if (event.detail.data !== ' ') return next();\n  return onSpace(event, controller, next);\n};\nexport default onCangjieInput;\n\n/**\n * 通过::+space触发emoji的逻辑\n * @param event\n * @param controller\n * @param next\n */\nasync function onSpace(event, controller, next) {\n  const { selection, document, startText } = controller.value;\n  if (selection.isExpanded || !startText || controller.value.anchorInline)\n    return next();\n  const endPoint = selection.convertToTextPoints(document).end;\n  const text = startText.text.slice(0, endPoint.offset);\n  if (!text) return next();\n  const queryInfo = getMatchedEmojiQuery(text, true);\n  const path = document.getPath(startText.key);\n  if (!queryInfo || !path) return next();\n  event.preventDefault();\n  const { query, offsetWithDelimiter } = queryInfo;\n  const { start, end } = offsetWithDelimiter;\n  const emojiMap = await getEmojiMap();\n  const emoji = emojiMap[query];\n  if (!emoji) return next();\n  const key = startText.key;\n  controller.run('onAction', insertMarkdownEmoji({ key, start, end, emoji }));\n}\n"],"file":"onCangjieInput.js"}