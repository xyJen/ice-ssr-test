"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onCangjieSelect;

var _everCangjie = require("@ali/4ever-cangjie");

var _everMo = require("@ali/4ever-mo");

var _everUtils = require("@ali/4ever-utils");

var _actions = require("../actions");

const {
  MOVE_UPWARD,
  MOVE_DOWNWARD,
  MOVE_BACKWARD,
  MOVE_FORWARD,
  SELECT_START
} = _everUtils.SELECTION_TRIGGER;
const MOVE_SET = {
  [MOVE_UPWARD]: {
    queryRange: 'getUpsideRange',
    getTargetMethod: 'getPreviousNode',
    moveMethod: 'moveToEndOfNode'
  },
  [MOVE_DOWNWARD]: {
    queryRange: 'getDownsideRange',
    getTargetMethod: 'getNextNode',
    moveMethod: 'moveToStartOfNode'
  }
};

function onCangjieSelect(event, controller, next) {
  const {
    trigger,
    selection
  } = event.detail;
  const {
    anchor
  } = selection;
  const {
    value
  } = controller;
  const {
    document
  } = value;

  if (!selection.isCollapsed || !anchor.isTextPoint()) {
    return next();
  }

  const maybeInline = document.getClosestInline(anchor.key);

  if (_everMo.Sticker.isSticker(maybeInline)) {
    if (trigger === MOVE_BACKWARD) {
      return controller.run('onAction', (0, _actions.moveCaret)({
        offset: -1
      }));
    }

    if (trigger === MOVE_FORWARD) {
      return controller.run('onAction', (0, _actions.moveCaret)({
        offset: 1
      }));
    }

    if (trigger === MOVE_UPWARD || trigger === MOVE_DOWNWARD) {
      const {
        queryRange
      } = MOVE_SET[trigger];
      const range = controller.query(_everCangjie.Queries[queryRange]);
      if (!range) return controller;
      const maybeSticker = document.getParent(range.anchor.key);

      if (_everMo.Sticker.isSticker(maybeSticker)) {
        return controller.run('onAction', (0, _actions.setRange)({
          range,
          trigger
        }));
      }
    } // 点击到表格上时，纠正选区到下一个 text 开头


    if (trigger === SELECT_START) {
      const point = controller.query(_everCangjie.Queries.pointAtDistance, selection.anchor, 1);
      return controller.command(_everCangjie.Commands.select, _everCangjie.Selection.create({
        anchor: point,
        focus: point,
        data: selection.data
      }));
    }
  }

  return next();
}
//# sourceMappingURL=onCangjieSelect.js.map