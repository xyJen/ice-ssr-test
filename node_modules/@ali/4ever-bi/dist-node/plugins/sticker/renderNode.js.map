{"version":3,"sources":["../../../../src/plugins/sticker/renderNode.tsx"],"names":["createRenderNode","sticker","PlaceHolder","STICKER_NODE_TYPE","props","controller","node"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;uBAF4B,a;;AAIb,SAASA,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuCC,WAAvC,EAAoD;AACjE,SAAO;AACL,KAACC,4BAAD,GAAqB,CAACC,KAAD,EAAiCC,UAAjC,KAAgD;AACnE,YAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;AACA,0BACE,eAAC,uBAAD;AAAgB,QAAA,IAAI,EAAEA,IAAtB;AAA4B,QAAA,UAAU,EAAED,UAAxC;AAAoD,QAAA,OAAO,EAAEJ,OAA7D;AAAsE,QAAA,kBAAkB,EAAEC;AAA1F,QADF;AAGD;AANI,GAAP;AAQD","sourcesContent":["import React from 'react';\nimport { Inline, RenderNodeProps } from '@ali/4ever-cangjie';\nimport StickerWrapper from './components/stickerWrapper';\nimport { STICKER_NODE_TYPE } from './constants';\n\nexport default function createRenderNode({ sticker }, PlaceHolder) {\n  return {\n    [STICKER_NODE_TYPE]: (props: RenderNodeProps<Inline>, controller) => {\n      const node = props.node as Inline;\n      return (\n        <StickerWrapper node={node} controller={controller} sticker={sticker} StickerPlaceholder={PlaceHolder} />\n      );\n    },\n  };\n}\n"],"file":"renderNode.js"}