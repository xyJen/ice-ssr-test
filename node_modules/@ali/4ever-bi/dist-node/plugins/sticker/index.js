"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _everBamboo = require("@ali/4ever-bamboo");

var _renderNode = _interopRequireDefault(require("./renderNode"));

var _onCangjieSelect = _interopRequireDefault(require("./handlers/onCangjieSelect"));

var _onAction = _interopRequireDefault(require("./handlers/onAction"));

var _onKeyDown = _interopRequireDefault(require("./handlers/onKeyDown"));

var _toolbar = _interopRequireDefault(require("./toolbar"));

var _getSnippetConfig = _interopRequireDefault(require("./getSnippetConfig"));

var _constants = require("./constants");

var _stickerPanelWrapper = _interopRequireDefault(require("./components/stickerPanelWrapper"));

var _stickerMenu = require("./components/stickerMenu");

var _stickerPlaceholder = _interopRequireDefault(require("./components/stickerPlaceholder"));

var _createRenderToolbar = _interopRequireDefault(require("./createRenderToolbar"));

var _everPluginSticker = require("@ali/4ever-plugin-sticker");

var _onCangjieInput = _interopRequireDefault(require("./handlers/onCangjieInput"));

const _createElement = /*#__PURE__*/React.createElement;
const {
  DEFAULT_STICKERS,
  Sticker
} = _everBamboo.StickerPlugin;

function createStickerPlugin(config) {
  const stickerConfig = {
    lang: _constants.DEFAULT_LANG,
    customSticker: [DEFAULT_STICKERS],
    ...config.sticker
  };
  const sticker = new Sticker(stickerConfig);
  const params = {
    stickerConfig,
    sticker
  };
  const stickerToolbar = stickerConfig.enableSticker ? {
    toolbar: (0, _toolbar.default)(params)
  } : {};
  const locale = stickerConfig.locale || {};
  const {
    onPanelVisibleChange
  } = stickerConfig;
  return { ...(0, _everPluginSticker.moFactory)({}),
    // @ts-ignore
    renderNode: (0, _renderNode.default)(params, _stickerPlaceholder.default),
    renderToolbar: (0, _createRenderToolbar.default)(stickerConfig.locale),
    renderEditable: (_, controller, next) => {
      const {
        _stickerPanel
      } = controller.value.data;
      return /*#__PURE__*/_createElement(React.Fragment, null, next(), /*#__PURE__*/_createElement(_stickerPanelWrapper.default, {
        controller: controller,
        sticker: sticker,
        visible: _stickerPanel,
        locale: locale,
        onVisibleChange: onPanelVisibleChange
      }));
    },
    menubar: {
      menu: _stickerMenu.menu,
      inlineMenu: _stickerMenu.inlineMenu
    },
    onAction: _onAction.default,
    onKeyDown: _onKeyDown.default,
    onCangjieSelect: _onCangjieSelect.default,
    onCangjieInput: _onCangjieInput.default,
    ...stickerToolbar,
    getSnippetConfig: _getSnippetConfig.default,
    models: {
      klass: 'inline',
      type: _constants.STICKER_NODE_TYPE
    }
  };
}

createStickerPlugin.defaultSticker = DEFAULT_STICKERS;
createStickerPlugin.components = {
  StickerPlaceholder: _stickerPlaceholder.default
};
var _default = createStickerPlugin;
exports.default = _default;
//# sourceMappingURL=index.js.map