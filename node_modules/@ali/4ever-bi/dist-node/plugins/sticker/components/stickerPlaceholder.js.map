{"version":3,"sources":["../../../../../src/plugins/sticker/components/stickerPlaceholder.tsx"],"names":["DEFAULT_SZ","getStickerStyle","StickerPlugin","StickerPlaceholder","props","controller","node","readonly","_stickerPanel","value","data","placeholderRef","active","setActive","computedSz","sz","unitsConverter","toPX","isDisableStickerPanel","query","iconStyle","iconSz","width","height","handleClick","environment","IS_MOBILE","run","visible","handleClickOutside","fontSize"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;uBAR4B,a;AAU5B,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAAkCC,yBAAxC;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAkD;AAChD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,QAAQ,GAAG;AAA/B,MAAyCH,KAA/C;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAoBH,UAAU,CAACI,KAAX,CAAiBC,IAA3C;AACA,QAAMC,cAAc,GAAG,mBAAuB,IAAvB,CAAvB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB,qBAASL,aAAT,CAA5B;AACA,QAAMM,UAAU,GAAG,oBAAQ,MAAM;AAC/B,UAAM;AAAEC,MAAAA,EAAE,GAAGf;AAAP,QAAsBC,eAAe,CAACK,IAAD,CAA3C;AACA,WAAOU,2BAAeC,IAAf,CAAqB,GAAEF,EAAE,GAAG,GAAI,IAAhC,CAAP;AACD,GAHkB,EAGhB,CAACT,IAAD,CAHgB,CAAnB;AAIA,QAAMY,qBAAqB,GAAGb,UAAU,CAACc,KAAX,CAAiB,uBAAjB,CAA9B;AAEA,QAAMC,SAAS,GAAG,oBAAQ,MAAM;AAC9B,UAAMC,MAAM,GAAGP,UAAU,GAAG,CAA5B;AACA,WAAO;AACLQ,MAAAA,KAAK,EAAED,MADF;AAELE,MAAAA,MAAM,EAAEF;AAFH,KAAP;AAID,GANiB,EAMf,CAACf,IAAD,CANe,CAAlB;AAQA,QAAMkB,WAAW,GAAG,wBAAY,MAAM;AACpC;AACA,QAAIC,yBAAYC,SAAhB,EAA2B;AACzB;AACD,KAJmC,CAKpC;;;AACA,QAAIR,qBAAJ,EAA2B;AACzB;AACD;;AACDL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAR,IAAAA,UAAU,CAACsB,GAAX,CACE,UADF,EAEE,qCAAuB;AACrBC,MAAAA,OAAO,EAAE;AADY,KAAvB,CAFF;AAMD,GAhBmB,EAgBjB,CAACvB,UAAD,EAAaa,qBAAb,CAhBiB,CAApB;AAkBA,QAAMW,kBAAkB,GAAG,wBAAY,MAAM;AAC3ChB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAF0B,EAExB,CAACR,UAAD,CAFwB,CAA3B;AAIA,wCAAkBM,cAAlB,EAAkCkB,kBAAlC,EAAsD,KAAtD;AAEA,sBACE,eAAC,gCAAD;AAA0B,IAAA,GAAG,EAAElB;AAA/B,kBACE,eAAC,4BAAD;AACE,IAAA,IAAI,eAAE,eAAC,4BAAD;AAAoB,MAAA,KAAK,EAAES;AAA3B,MADR;AAEE,IAAA,IAAI,EAAE,CAACb,QAAD,IAAa,CAACW,qBAAd,GAAsC,QAAtC,GAAiD,QAFzD;AAGE,IAAA,UAAU,EAAEN,MAHd;AAIE,IAAA,OAAO,EAAEY,WAJX;AAKE,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAEhB;AAAZ,KALT;AAME,IAAA,SAAS,EAAC;AANZ,IADF,CADF;AAYD;;eAEcX,kB","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport cls from 'classnames';\nimport { environment } from '@ali/4ever-cangjie';\nimport { StickerPlugin, unitsConverter } from '@ali/4ever-bamboo';\nimport { ToolbarEmojiNormal } from '@ali/we-design';\nimport { IStickerProps } from '../types';\nimport { InlinePlaceholderWrapper } from './styled';\nimport { setStickerPanelVisible } from '../actions';\nimport { useOnClickOutside } from '@ali/4ever-component';\nimport { InlinePlaceholder } from '@ali/we-toolbar';\n\nconst { DEFAULT_SZ, getStickerStyle } = StickerPlugin;\n\nfunction StickerPlaceholder(props: IStickerProps) {\n  const { controller, node, readonly = false } = props;\n  const { _stickerPanel } = controller.value.data;\n  const placeholderRef = useRef<HTMLDivElement>(null);\n  const [active, setActive] = useState(_stickerPanel);\n  const computedSz = useMemo(() => {\n    const { sz = DEFAULT_SZ } = getStickerStyle(node);\n    return unitsConverter.toPX(`${sz * 1.5}pt`);\n  }, [node]);\n  const isDisableStickerPanel = controller.query('isDisableStickerPanel');\n\n  const iconStyle = useMemo(() => {\n    const iconSz = computedSz - 4;\n    return {\n      width: iconSz,\n      height: iconSz,\n    };\n  }, [node]);\n\n  const handleClick = useCallback(() => {\n    // TODO 移动端暂不支持插入表情\n    if (environment.IS_MOBILE) {\n      return;\n    }\n    // 禁用 panel\n    if (isDisableStickerPanel) {\n      return;\n    }\n    setActive(true);\n    controller.run(\n      'onAction',\n      setStickerPanelVisible({\n        visible: true,\n      }),\n    );\n  }, [controller, isDisableStickerPanel]);\n\n  const handleClickOutside = useCallback(() => {\n    setActive(false);\n  }, [controller]);\n\n  useOnClickOutside(placeholderRef, handleClickOutside, false);\n\n  return (\n    <InlinePlaceholderWrapper ref={placeholderRef}>\n      <InlinePlaceholder\n        icon={<ToolbarEmojiNormal style={iconStyle} />}\n        type={!readonly && !isDisableStickerPanel ? 'normal' : 'export'}\n        isSelected={active}\n        onClick={handleClick}\n        style={{ fontSize: computedSz }}\n        className=\"inline-placeholder\"\n      />\n    </InlinePlaceholderWrapper>\n  );\n}\n\nexport default StickerPlaceholder;\n"],"file":"stickerPlaceholder.js"}