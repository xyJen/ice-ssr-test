{"version":3,"sources":["../../../../../src/plugins/sticker/components/stickerButton.tsx"],"names":["StickerButton","props","controller","locale","toolbarMode","rest","value","isDisabled","query","handleClick","run","STICKER_PLACEHOLDER_DATA","visible","viewSize","ToolbarMode","single","icon","repeat","buttonTitle"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;uBAL4B,a;;AAcb,SAASA,aAAT,CAAuBC,KAAvB,EAAkD;AAC/D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,WAAtB;AAAmC,OAAGC;AAAtC,MAA+CJ,KAArD;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAYJ,UAAlB;AACA,QAAMK,UAAU,GAAGL,UAAU,CAACM,KAAX,CAAiB,kBAAjB,KAAwCN,UAAU,CAACM,KAAX,CAAiB,oBAAjB,CAAxC,IAAkFN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CAArG;AACA,QAAMC,WAAW,GAAG,wBAAY,MAAM;AACpCP,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2B,4BAAcC,mCAAd,CAA3B;AACAT,IAAAA,UAAU,CAACQ,GAAX,CACE,UADF,EAEE,qCAAuB;AACrBE,MAAAA,OAAO,EAAE;AADY,KAAvB,CAFF;AAMD,GARmB,EAQjB,EARiB,CAApB;AAUA,QAAMC,QAAQ,GAAGT,WAAW,KAAKU,2BAAYC,MAA5B,GAAqC,KAArC,GAA6C,KAA9D,CAf+D,CAgB/D;;AACA,QAAMC,IAAI,gBAAG,eAAC,4BAAD;AAAoB,IAAA,OAAO,EAAG,MAAKH,QAAQ,CAACI,MAAT,CAAgB,CAAhB,CAAmB;AAAtD,IAAb;;AAEA,sBACE,eAAC,0BAAD,6BACMZ,IADN;AAEE,IAAA,MAAM,EAAC,oBAFT,CAGE;AAHF;AAIE,IAAA,IAAI,EAAEW,IAJR;AAKE,IAAA,OAAO,EAAEb,MAAM,CAACe,WALlB;AAME,IAAA,OAAO,EAAET,WANX;AAOE,IAAA,QAAQ,EAAEF,UAPZ;AAQE,IAAA,SAAS,EAAE,KARb;AASE,IAAA,SAAS,EAAE;AATb,KADF;AAaD","sourcesContent":["import React, { useCallback } from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { EmojiMenuButton } from '@ali/we-toolbar';\nimport { ToolbarEmojiNormal } from '@ali/we-design';\nimport { ToolbarMode } from '@ali/4ever-component';\nimport { insertSticker, setStickerPanelVisible } from '../actions';\nimport { STICKER_PLACEHOLDER_DATA } from '../constants';\n\n\nexport interface StickerButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function StickerButton(props: StickerButtonProps) {\n  const { controller, locale, toolbarMode, ...rest } = props;\n\n  const { value } = controller;\n  const isDisabled = controller.query('isDisableSticker') || controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard');\n  const handleClick = useCallback(() => {\n    controller.run('onAction', insertSticker(STICKER_PLACEHOLDER_DATA));\n    controller.run(\n      'onAction',\n      setStickerPanelVisible({\n        visible: true,\n      }),\n    );\n  }, []);\n\n  const viewSize = toolbarMode === ToolbarMode.single ? ' 20' : ' 24';\n  // @ts-ignore 组件没有 viewBox 属性\n  const icon = <ToolbarEmojiNormal viewBox={`0 0${viewSize.repeat(2)}`} />;\n\n  return (\n    <EmojiMenuButton\n      {...rest}\n      testid=\"bi-toolbar-sticker\"\n      // @ts-ignore 组件没有 icon 属性\n      icon={icon}\n      tooltip={locale.buttonTitle}\n      onClick={handleClick}\n      disabled={isDisabled}\n      autoClose={false}\n      showArrow={false}\n    />\n  );\n}\n"],"file":"stickerButton.js"}