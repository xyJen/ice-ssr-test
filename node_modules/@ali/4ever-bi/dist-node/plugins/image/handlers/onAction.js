"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createOnAction;

var _everBamboo = require("@ali/4ever-bamboo");

var _everCangjie = require("@ali/4ever-cangjie");

var _actions = require("../actions");

var _removeInlineImage = _interopRequireDefault(require("../commands/removeInlineImage"));

var _selectImage = _interopRequireDefault(require("../utils/selectImage"));

function createOnAction(config) {
  const {
    image: imageConfig,
    sideBarTrigger
  } = config;
  return function onAction(action, controller, next) {
    const {
      type,
      payload
    } = action;

    if (type === _actions.IMAGE_SELECT) {
      const {
        selectImage = _selectImage.default
      } = imageConfig;
      selectImage().then(file => {
        if (file) {
          controller.command('insertImageFile', file);
        }
      });
    }

    if (type === _actions.IMAGE_UPDATE) {
      const {
        node,
        data,
        container
      } = payload;
      return _everBamboo.ImagePlugin.updateInlineImage(controller, node, data, container);
    }

    if (type === _actions.IMAGE_REMOVE) {
      const {
        node
      } = payload;
      return (0, _removeInlineImage.default)(controller, node);
    }

    if (type === _actions.IMAGE_SET_INJECTION) {
      const {
        key,
        data
      } = payload;
      const {
        injections
      } = controller.value;
      const curInjection = injections.find(inj => inj.key === key) || {};

      const injection = _everCangjie.Injection.create({
        key,
        data: { ...(curInjection.data || {}),
          ...data
        }
      });

      controller.setInjections([...injections.filter(inj => inj.key !== key), injection]);
    }

    if (type === _actions.TOGGLE_IMAGE_SIDEBAR) {
      const {
        node,
        toggle,
        callback
      } = payload; // NOTE: 目前 sidebar 未实现 close 方法

      if (toggle) {
        sideBarTrigger?.open('image.imageOptions', imageConfig?.locale?.options || 'Image Options');

        if (node) {
          controller.command(_everCangjie.Commands.moveToStartOfNode, node).command(_everCangjie.Commands.focus);

          if (callback) {
            callback(controller);
          }

          controller.flush();
        }
      }

      return controller;
    }

    return next();
  };
}
//# sourceMappingURL=onAction.js.map