"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.preloadImage = preloadImage;
exports.default = preloadImages;

var _everBamboo = require("@ali/4ever-bamboo");

var _everUtils = require("@ali/4ever-utils");

async function preloadImage(image, maxWidth, url, extraData) {
  try {
    const src = url || image.data?.src;
    let {
      width,
      height
    } = await (0, _everUtils.loadImg)(src);

    if (width > maxWidth) {
      height *= maxWidth / width;
      width = maxWidth;
    }

    const data = {
      src,
      width,
      height,
      rotation: 0
    };

    if (extraData) {
      data.extraData = extraData;
    }

    return {
      image,
      data
    };
  } catch (error) {
    // 挂载 img 失败
    const data = {
      src: url
    };

    if (extraData) {
      // @ts-ignore
      data.extraData = extraData;
    }

    return {
      image,
      data
    };
  }
} // 预加载后更新图片的尺寸


function preloadImages(controller, images) {
  const maxWidth = _everBamboo.ImagePlugin.getImageMaxWidth(controller.value);

  const preloads = images.map(image => preloadImage(image, maxWidth));
  return preloads;
}
//# sourceMappingURL=preloadImages.js.map