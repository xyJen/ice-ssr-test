{"version":3,"sources":["../../../../../src/plugins/image/commands/insertImagePlaceholder.ts"],"names":["insertImagePlaceholder","controller","value","selection","startInline","isExpanded","command","Commands","moveToStartOfNextText","inline","Inline","create","type","data","insertInline"],"mappings":";;;;;;;AAAA;;AAEe,SAASA,sBAAT,CAAgCC,UAAhC,EAAwD;AACrE,QAAM;AAAEC,IAAAA;AAAF,MAAYD,UAAlB;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BF,KAAnC;AAEA,MAAIC,SAAS,CAACE,UAAd,EAA0B,OAAOJ,UAAP;;AAE1B,MAAIG,WAAJ,EAAiB;AACfH,IAAAA,UAAU,CAACK,OAAX,CAAmBC,sBAASC,qBAA5B;AACD;;AAED,QAAMC,MAAM,GAAGC,oBAAOC,MAAP,CAAc;AAC3BC,IAAAA,IAAI,EAAE,OADqB;AAE3BC,IAAAA,IAAI,EAAE;AAFqB,GAAd,CAAf;;AAKA,SAAOZ,UAAU,CAACK,OAAX,CAAmBC,sBAASO,YAA5B,EAA0CL,MAA1C,CAAP;AACD","sourcesContent":["import { Controller, Commands, Inline } from '@ali/4ever-cangjie';\n\nexport default function insertImagePlaceholder(controller: Controller) {\n  const { value } = controller;\n  const { selection, startInline } = value;\n\n  if (selection.isExpanded) return controller;\n\n  if (startInline) {\n    controller.command(Commands.moveToStartOfNextText);\n  }\n\n  const inline = Inline.create({\n    type: 'image',\n    data: {},\n  });\n\n  return controller.command(Commands.insertInline, inline);\n}\n"],"file":"insertImagePlaceholder.js"}