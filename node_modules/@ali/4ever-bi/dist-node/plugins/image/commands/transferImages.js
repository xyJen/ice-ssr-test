"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = transferImages;

var _everBamboo = require("@ali/4ever-bamboo");

var _preloadImages = require("./preloadImages");

const {
  isLocalFile
} = _everBamboo.ImagePlugin;

async function transferImageData(image, transfer, maxWidth) {
  const {
    src
  } = image.data;

  if (isLocalFile(src)) {
    return {
      image,
      data: {}
    };
  }

  try {
    const {
      url,
      extraData
    } = await transfer(src); // 转存成功，读取 image 宽高信息

    const newData = await (0, _preloadImages.preloadImage)(image, maxWidth, url, extraData);
    return newData;
  } catch (error) {
    console.error(error); // 转存失败
    // HACK: 设置 isError 修复 pi 不更新问题

    return {
      image,
      data: {
        isError: true
      }
    };
  }
}

function transferImages(controller, images, transfer, state) {
  const maxWidth = _everBamboo.ImagePlugin.getImageMaxWidth(controller.value);

  images.forEach(async item => {
    // 转换前先进行标记
    // eslint-disable-next-line no-param-reassign
    state[item.key] = {
      isTransferring: true
    }; // 这里断言 transfer 不会失败
  });
  const transfers = images.map(image => transferImageData(image, transfer, maxWidth));
  return transfers;
}
//# sourceMappingURL=transferImages.js.map