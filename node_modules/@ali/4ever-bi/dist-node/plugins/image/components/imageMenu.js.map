{"version":3,"sources":["../../../../../src/plugins/image/components/imageMenu.tsx"],"names":["ImageMenu","props","menuItem","controller","value","title","rest","isCollapsedAtEdge","selection","isDisabled","query","handleClick","run","PluginRoles","image","ImageSetting","locale","document","React","useCallback","node","focusInline","toggle","useMemo","isCollapsed","focus","getClosestVoid","key","Image","isImage","imageMenuOptions","advancedSettings","ImageDownload","config","downloadImage","src","data","imageMenuDownload","downloadImg"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { MenuItem } from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { Image } from '@ali/4ever-mo';\nimport { ToolbarDownloadNormal, SettingNormal } from '@ali/we-icon';\nimport { MenuItemInnerProps } from '@ali/4ever-component';\nimport { toggleImageSidebar } from '../actions';\n\nimport inSelectionInImage from '../utils/inSelectionInImage';\n;\nimport { selectImage } from '../actions';\nimport { ImagePluginConfig } from '../types';\n\nexport default function ImageMenu(props: MenuItemInnerProps) {\n  const { menuItem, controller } = props;\n  const { value } = controller;\n  const { title, ...rest } = menuItem;\n\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || inSelectionInImage(value)\n    || controller.query('isSelectionInLink')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleClick = () => controller.run('onAction', selectImage());\n\n  return (\n    <MenuItem {...rest} disabled={isDisabled} onClick={handleClick} role={PluginRoles.image}>\n      {title || ''}\n    </MenuItem>\n  );\n}\n\nexport function ImageSetting(props: MenuItemInnerProps) {\n  const { menuItem, controller, locale } = props;\n  const { document, selection } = controller.value;\n  const { title, ...rest } = menuItem;\n\n  const handleClick = React.useCallback(() => {\n    controller.run('onAction', toggleImageSidebar({\n      node: controller.value.focusInline,\n      toggle: true,\n    }));\n  }, [controller]);\n\n  const isDisabled = React.useMemo(() => {\n    const { isCollapsed, focus } = selection;\n    if (isCollapsed) {\n      const node = document.getClosestVoid(focus.key, controller);\n      return !Image.isImage(node);\n    }\n    return true;\n  }, [controller, document, selection]);\n\n  return (\n    <MenuItem\n      testid=\"image-menu-options\"\n      icon={<SettingNormal />}\n      onClick={handleClick}\n      {\n        ...rest\n      }\n      disabled={isDisabled}\n      role={PluginRoles.imageMenuOptions}\n    >\n      {title || locale?.advancedSettings}\n    </MenuItem>\n  );\n}\n\nexport function ImageDownload(props: MenuItemInnerProps & {config: ImagePluginConfig}) {\n  const { menuItem, controller, config, locale } = props;\n  const { focusInline } = controller.value;\n  const { title, ...rest } = menuItem;\n  const { downloadImage } = config;\n  let src;\n  if (focusInline && Image.isImage(focusInline)) {\n    src = focusInline.data?.src;\n  }\n\n  const handleClick = React.useCallback(() => {\n    downloadImage && downloadImage(src);\n  }, [src, downloadImage]);\n\n  return (src && downloadImage) ? (\n    <MenuItem\n      testid=\"image-menu-download\"\n      role={PluginRoles.imageMenuDownload}\n      icon={<ToolbarDownloadNormal />}\n      onClick={handleClick}\n      {\n        ...rest\n      }\n    >\n      {title || locale?.downloadImg }\n    </MenuItem>\n  ) : null;\n}\n"],"file":"imageMenu.js"}