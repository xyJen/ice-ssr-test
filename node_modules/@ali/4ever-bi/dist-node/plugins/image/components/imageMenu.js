"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ImageMenu;
exports.ImageSetting = ImageSetting;
exports.ImageDownload = ImageDownload;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weDesign = require("@ali/we-design");

var _everBamboo = require("@ali/4ever-bamboo");

var _everMo = require("@ali/4ever-mo");

var _weIcon = require("@ali/we-icon");

var _actions = require("../actions");

var _inSelectionInImage = _interopRequireDefault(require("../utils/inSelectionInImage"));

const _createElement = /*#__PURE__*/React.createElement;
;

function ImageMenu(props) {
  const {
    menuItem,
    controller
  } = props;
  const {
    value
  } = controller;
  const {
    title,
    ...rest
  } = menuItem;
  const {
    isCollapsedAtEdge
  } = controller.value.selection;
  const isDisabled = isCollapsedAtEdge || (0, _inSelectionInImage.default)(value) || controller.query('isSelectionInLink') || controller.query('isSelectionInMention') || controller.query('isSelectionInLinkCard');

  const handleClick = () => controller.run('onAction', (0, _actions.selectImage)());

  return /*#__PURE__*/_createElement(_weDesign.MenuItem, (0, _extends2.default)({}, rest, {
    disabled: isDisabled,
    onClick: handleClick,
    role: _everBamboo.PluginRoles.image
  }), title || '');
}

var _ref = /*#__PURE__*/_createElement(_weIcon.SettingNormal, null);

function ImageSetting(props) {
  const {
    menuItem,
    controller,
    locale
  } = props;
  const {
    document,
    selection
  } = controller.value;
  const {
    title,
    ...rest
  } = menuItem;
  const handleClick = React.useCallback(() => {
    controller.run('onAction', (0, _actions.toggleImageSidebar)({
      node: controller.value.focusInline,
      toggle: true
    }));
  }, [controller]);
  const isDisabled = React.useMemo(() => {
    const {
      isCollapsed,
      focus
    } = selection;

    if (isCollapsed) {
      const node = document.getClosestVoid(focus.key, controller);
      return !_everMo.Image.isImage(node);
    }

    return true;
  }, [controller, document, selection]);
  return /*#__PURE__*/_createElement(_weDesign.MenuItem, (0, _extends2.default)({
    testid: "image-menu-options",
    icon: _ref,
    onClick: handleClick
  }, rest, {
    disabled: isDisabled,
    role: _everBamboo.PluginRoles.imageMenuOptions
  }), title || locale?.advancedSettings);
}

var _ref2 = /*#__PURE__*/_createElement(_weIcon.ToolbarDownloadNormal, null);

function ImageDownload(props) {
  const {
    menuItem,
    controller,
    config,
    locale
  } = props;
  const {
    focusInline
  } = controller.value;
  const {
    title,
    ...rest
  } = menuItem;
  const {
    downloadImage
  } = config;
  let src;

  if (focusInline && _everMo.Image.isImage(focusInline)) {
    src = focusInline.data?.src;
  }

  const handleClick = React.useCallback(() => {
    downloadImage && downloadImage(src);
  }, [src, downloadImage]);
  return src && downloadImage ? /*#__PURE__*/_createElement(_weDesign.MenuItem, (0, _extends2.default)({
    testid: "image-menu-download",
    role: _everBamboo.PluginRoles.imageMenuDownload,
    icon: _ref2,
    onClick: handleClick
  }, rest), title || locale?.downloadImg) : null;
}
//# sourceMappingURL=imageMenu.js.map