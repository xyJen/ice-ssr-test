{"version":3,"sources":["../../../../../src/plugins/image/components/imageRotate.tsx"],"names":["ImageRotate","React","Component","constructor","props","originX","originY","currentX","currentY","editorNum","onRotateStart","relativeEvent","onEnterRotationMode","relativeX","relativeY","onRotateMove","zoomContainer","translateX","translateY","state","rotateControl","rotation","rotateImageFrame","scale","rect","rectControl","current","style","display","left","top","objX","width","objY","height","x1","y1","x2","y2","triangleTop","triangleBottom","arc","Math","atan2","PI","newRotate","transform","setState","currentRotation","onRotateEnd","handleRotate","getZoomContainer","handleTouchStart","e","preventDefault","stopPropagation","targetTouches","length","addEventListener","handleTouchEnd","handleTouchMove","removeEventListener","renderRotateNumber","isRotating","ReactDOM","createPortal","createRef","getDerivedStateFromProps","nextProps","prevStates","prevRotation","rWidth","rHeight","componentWillUnmount","render","PluginRoles","imageSingleRotator"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  calcRotationObj,\n  normalizeAngle,\n  getBoundingRelativeRect,\n  getRelativeTouchEvent,\n  RelativeEventType,\n} from '@ali/4ever-utils';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport {\n  RotateControlPot,\n  RotateLine,\n  EditorNum,\n} from './styled';\nimport fitRotate from '../utils/fitRotate';\n\nexport interface ImageRotateProps {\n  isRotating: boolean;\n  onEnterRotationMode(): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRotate(rotate: any): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rotation: any;\n  width: number;\n  height: number;\n  rotateControl: HTMLElement | null;\n  rotateImageFrame: HTMLElement | null;\n  getZoomContainer(): HTMLElement | null;\n  controller: Controller;\n  scale: number;\n}\n\nexport interface ImageRotateState {\n  translateX: number;\n  translateY: number;\n  currentRotation: number;\n  rotation: number;\n  width: number;\n  height: number;\n}\n\nclass ImageRotate extends React.Component<ImageRotateProps, ImageRotateState> {\n  originX: number;\n  originY: number;\n  currentX: number;\n  currentY: number;\n  editorNum: React.RefObject<any>;\n\n  constructor(props) {\n    super(props);\n\n    const { width, height } = props;\n    const rotation = this.props.rotation || 0;\n    const { translateX, translateY } = calcRotationObj(width, height, rotation);\n    this.originX = 0;\n    this.originY = 0;\n    this.currentX = 0;\n    this.currentY = 0;\n    this.state = {\n      rotation,\n      currentRotation: rotation,\n      translateX,\n      translateY,\n      width,\n      height,\n    };\n    this.editorNum = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevStates) {\n    const { width, height } = nextProps;\n    const rotation = nextProps.rotation || 0;\n    const prevRotation = prevStates.rotation || 0;\n    if (rotation !== prevRotation\n      || width !== prevStates.width || height !== prevStates.height) {\n      const { rWidth, rHeight, translateX, translateY } = calcRotationObj(width, height, rotation);\n      return ({\n        rotation,\n        currentRotation: rotation,\n        translateX,\n        translateY,\n        rWidth,\n        rHeight,\n        width,\n        height,\n      });\n    }\n    return null;\n  }\n\n  componentWillUnmount() {\n    const { getZoomContainer } = this.props;\n    const zoomContainer = getZoomContainer();\n    if (zoomContainer) {\n      zoomContainer.removeEventListener('touchend', this.handleTouchEnd);\n      zoomContainer.removeEventListener('touchmove', this.handleTouchMove);\n    }\n  }\n\n  onRotateStart = (relativeEvent: RelativeEventType) => {\n    const { onEnterRotationMode } = this.props;\n    onEnterRotationMode();\n\n    this.originX = relativeEvent.relativeX;\n    this.originY = relativeEvent.relativeY;\n    this.currentX = relativeEvent.relativeX;\n    this.currentY = relativeEvent.relativeY;\n  };\n\n  onRotateMove = (relativeEvent: RelativeEventType, zoomContainer: HTMLElement) => {\n    const { translateX, translateY } = this.state;\n    const { rotateControl, rotation, rotateImageFrame, scale } = this.props;\n\n    if (!rotateImageFrame || !rotateControl) return;\n\n    this.currentX = relativeEvent.relativeX;\n    this.currentY = relativeEvent.relativeY;\n\n    const rect = getBoundingRelativeRect(rotateImageFrame, zoomContainer);\n    const rectControl = getBoundingRelativeRect(rotateControl, zoomContainer);\n\n    this.editorNum.current.style.display = 'inline';\n    this.editorNum.current.style.left = (this.currentX - rectControl.left) + 16 + 'px';\n    this.editorNum.current.style.top = (this.currentY - rectControl.top) + 'px';\n\n    const objX = rect.left + rect.width / 2;\n    const objY = rect.top + rect.height / 2;\n    const x1 = this.originX - objX;\n    const y1 = this.originY - objY;\n    const x2 = this.currentX - objX;\n    const y2 = this.currentY - objY;\n    const triangleTop = x1 * y2 - x2 * y1;\n    const triangleBottom = x1 * x2 + y1 * y2;\n    const arc = Math.atan2(triangleTop, triangleBottom) * 180 / Math.PI;\n    let newRotate = normalizeAngle(rotation + arc);\n    newRotate = fitRotate(newRotate);\n    rotateImageFrame.style.transform = `translate(${translateX * scale}px, ${translateY * scale}px) rotate(${newRotate}deg)`;\n    this.setState({\n      currentRotation: newRotate,\n    });\n  };\n\n  onRotateEnd = () => {\n    const { rotation, handleRotate, rotateImageFrame, getZoomContainer } = this.props;\n\n    let newRotate = null;\n\n    if (rotateImageFrame) {\n      if (this.originX !== this.currentX || this.originY !== this.currentY) {\n        const rect = getBoundingRelativeRect(rotateImageFrame, getZoomContainer());\n        const objX = rect.left + rect.width / 2;\n        const objY = rect.top + rect.height / 2;\n        const x1 = this.originX - objX;\n        const y1 = this.originY - objY;\n        const x2 = this.currentX - objX;\n        const y2 = this.currentY - objY;\n        const triangleTop = x1 * y2 - x2 * y1;\n        const triangleBottom = x1 * x2 + y1 * y2;\n        const arc = Math.atan2(triangleTop, triangleBottom) * 180 / Math.PI;\n        newRotate = normalizeAngle(rotation + arc);\n        newRotate = fitRotate(newRotate);\n      }\n    }\n\n    handleRotate(newRotate);\n\n    this.originX = 0;\n    this.originY = 0;\n    this.currentX = 0;\n    this.currentY = 0;\n  };\n\n  handleTouchStart = (e: React.TouchEvent) => {\n    const { getZoomContainer } = this.props;\n    e.preventDefault();\n    e.stopPropagation();\n\n    const zoomContainer = getZoomContainer();\n    const { targetTouches } = e;\n    if (!zoomContainer || targetTouches.length > 1) {\n      return;\n    }\n    const relativeEvent = getRelativeTouchEvent(targetTouches[0], zoomContainer);\n\n    this.onRotateStart(relativeEvent);\n\n    zoomContainer.addEventListener('touchend', this.handleTouchEnd);\n    zoomContainer.addEventListener('touchmove', this.handleTouchMove);\n  };\n\n  handleTouchMove = (e: TouchEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { rotateImageFrame, getZoomContainer } = this.props;\n    const zoomContainer = getZoomContainer();\n    const { targetTouches } = e;\n    const relativeEvent = getRelativeTouchEvent(targetTouches[0], zoomContainer!);\n\n    if (!rotateImageFrame) return;\n\n    this.onRotateMove(relativeEvent, zoomContainer!);\n  };\n\n  handleTouchEnd = (e: TouchEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.onRotateEnd();\n\n    const { getZoomContainer } = this.props;\n    const zoomContainer = getZoomContainer();\n    zoomContainer && zoomContainer.removeEventListener('touchmove', this.handleTouchMove);\n    zoomContainer && zoomContainer.removeEventListener('touchend', this.handleTouchEnd);\n  };\n\n  renderRotateNumber: () => React.ReactPortal | null = () => {\n    const { currentRotation } = this.state;\n    const { isRotating, rotateControl } = this.props;\n    const rotation = normalizeAngle(currentRotation, true);\n\n    // 传送到没有rotate的control层\n    return isRotating && rotateControl ? ReactDOM.createPortal(\n      <EditorNum ref={this.editorNum} style={{ display: 'none' }} rotating>\n        {rotation}°\n      </EditorNum>,\n      rotateControl,\n    ) : null;\n  };\n\n  render() {\n    return (\n      <span>\n        <RotateLine />\n        <RotateControlPot\n          onTouchStart={this.handleTouchStart}\n          data-role={PluginRoles.imageSingleRotator}\n        />\n        {this.renderRotateNumber()}\n      </span>\n    );\n  }\n}\n\nexport default ImageRotate;\n"],"file":"imageRotate.js"}