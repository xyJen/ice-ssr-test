{"version":3,"sources":["../../../../../../src/plugins/image/components/next/ImageStyleIconMenu.tsx"],"names":["ImageStyleIconMenu","props","controller","getImageNode","locale","onOverlayVisibleChange","testid","getContainer","HoverToolbarHooks","useGetContainer","isOverlayVisible","setOverlayVisible","usePopoverVisible","StyleButtonIcon","recommendStyle"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;uBAH4B,a;;AAUrB,MAAMA,kBAAiD,GAAIC,KAAD,IAAW;AAC1E,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,MAA5B;AAAoCC,IAAAA,sBAApC;AAA4DC,IAAAA;AAA5D,MAAuEL,KAA7E;;AACA,QAAMM,YAAY,GAAGC,iCAAkBC,eAAlB,EAArB;;AACA,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCH,iCAAkBI,iBAAlB,CAAoC,aAApC,EAAmDP,sBAAnD,CAA9C;;AAEA,sBACE,eAAC,wBAAD;AACE,IAAA,IAAI,EAAEQ,uBADR;AAEE,IAAA,OAAO,eACL,eAAC,oCAAD;AACE,MAAA,YAAY,EAAEV,YADhB;AAEE,MAAA,UAAU,EAAED,UAFd;AAGE,MAAA,MAAM,EAAEE,MAHV;AAIE,MAAA,OAAO,EAAE,MAAM;AAAEO,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAAyB;AAJ5C,MAHJ;AAUE,IAAA,cAAc,EAAED,gBAVlB;AAWE,IAAA,eAAe,EAAEC,iBAXnB;AAYE,IAAA,YAAY,EAAEJ,YAZhB;AAaE,IAAA,KAAK,EAAEH,MAAM,CAACU,cAbhB;AAcE,IAAA,OAAO,EAAEV,MAAM,CAACU,cAdlB;AAeE,IAAA,MAAM,EAAER;AAfV,IADF;AAmBD,CAxBM","sourcesContent":["import React from 'react';\nimport { TBIconMenu } from '@ali/we-design-next';\nimport { HoverToolbarHooks } from '@ali/4ever-component';\nimport { StyleButtonIcon } from '../styled';\nimport { ImageStyleOverlay, IImageStyleOverlayProps } from '../imageStyleOverlay';\n\nexport interface IImageStyleIconMenu extends Omit<IImageStyleOverlayProps, 'onClick'> {\n  onOverlayVisibleChange: (visible: boolean) => void;\n  testid?: string;\n}\n\nexport const ImageStyleIconMenu: React.FC<IImageStyleIconMenu> = (props) => {\n  const { controller, getImageNode, locale, onOverlayVisibleChange, testid } = props;\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isOverlayVisible, setOverlayVisible] = HoverToolbarHooks.usePopoverVisible('image.style', onOverlayVisibleChange);\n \n  return (\n    <TBIconMenu\n      icon={StyleButtonIcon}\n      overlay={\n        <ImageStyleOverlay\n          getImageNode={getImageNode}\n          controller={controller}\n          locale={locale}\n          onClick={() => { setOverlayVisible(false)}}\n        />\n      }\n      overlayVisible={isOverlayVisible}\n      onVisibleChange={setOverlayVisible}\n      getContainer={getContainer}\n      title={locale.recommendStyle}\n      tooltip={locale.recommendStyle}\n      testid={testid}\n    />\n  );\n};\n"],"file":"ImageStyleIconMenu.js"}