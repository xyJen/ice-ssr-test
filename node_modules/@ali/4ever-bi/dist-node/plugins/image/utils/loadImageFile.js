"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _everCangjie = require("@ali/4ever-cangjie");

var _everLogger = _interopRequireDefault(require("@ali/4ever-logger"));

var _convertImage = require("./convertImage");

var _checkFileType = _interopRequireDefault(require("./checkFileType"));

var _default = file => {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.addEventListener('load', e => {
      const buffer = e.target.result;
      const {
        file: checkedFile,
        type
      } = (0, _checkFileType.default)(file, buffer);
      const img = new Image(); // 只有 safari 浏览器支持 tiff 格式

      if ((type === 'tiff' || type === 'tif') && !_everCangjie.environment.IS_SAFARI) {
        resolve({
          img,
          handledFile: checkedFile
        });
        return;
      }

      const orientation = (0, _convertImage.getOrientation)(buffer);
      const angle = (0, _convertImage.orientationToAngle)(orientation);
      (0, _convertImage.rotateImage)(checkedFile, angle).then(rotatedFile => {
        img.onload = () => {
          resolve({
            img,
            handledFile: checkedFile
          });
        };

        img.src = URL.createObjectURL(rotatedFile);
      });
    });
    reader.addEventListener('error', () => {
      _everLogger.default.info({
        type: 'loadImageFailed',
        info: file?.type || ''
      });

      reject(file);
    });
    reader.readAsArrayBuffer(file);
  });
};

exports.default = _default;
//# sourceMappingURL=loadImageFile.js.map