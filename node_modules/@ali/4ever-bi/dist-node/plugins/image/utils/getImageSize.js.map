{"version":3,"sources":["../../../../../src/plugins/image/utils/getImageSize.ts"],"names":["getImageSize","src","controller","Promise","resolve","reject","img","Image","onload","width","height","onerror"],"mappings":";;;;;;;;;AACA;;AAIA,MAAMA,YAA+B,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC3D,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAMJ,OAAO,CAAC,4BAAcE,GAAG,CAACG,KAAlB,EAAyBH,GAAG,CAACI,MAA7B,EAAqCR,UAArC,CAAD,CAA1B;;AACAI,IAAAA,GAAG,CAACK,OAAJ,GAAc,MAAMN,MAAM,EAA1B;;AACAC,IAAAA,GAAG,CAACL,GAAJ,GAAUA,GAAV;AACD,GALM,CAAP;AAMD,CAPD;;eASeD,Y","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport calcImageSize from './calcImageSize';\n\ntype IGetImageSizeType = (src: string, controller: Controller) => Promise<ReturnType<typeof calcImageSize>>;\n\nconst getImageSize: IGetImageSizeType = (src, controller) => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(calcImageSize(img.width, img.height, controller));\n    img.onerror = () => reject();\n    img.src = src;\n  });\n};\n\nexport default getImageSize;\n"],"file":"getImageSize.js"}