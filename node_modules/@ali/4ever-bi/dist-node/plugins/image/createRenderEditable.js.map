{"version":3,"sources":["../../../../src/plugins/image/createRenderEditable.tsx"],"names":["config","props","controller","next","transformImageURL","imageManager","React","useMemo","ImagePlugin","ImageManager"],"mappings":";;;;;;;;;AACA;;AAEA;;AAHA;uBAC4B,a;;eAKZA,MAAD,IAA+B;AAC5C,SAAO,CAACC,KAAD,EAA4BC,UAA5B,EAAoDC,IAApD,KAA6D;AAClE,UAAM;AAAEC,MAAAA;AAAF,QAAwBJ,MAAM,IAAI,EAAxC;;AACA,UAAMK,YAAY,GAAGC,eAAMC,OAAN,CAAc,MAAM;AACvC,UAAIH,iBAAJ,EAAuB;AACrB,eAAO,IAAII,wBAAYC,YAAhB,CAA6BL,iBAA7B,EAAgDF,UAAhD,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KALoB,EAKlB,CAACE,iBAAD,CALkB,CAArB;;AAOA,wBACE,eAAC,uBAAD,CAAa,mBAAb,CAAiC,QAAjC;AAA0C,MAAA,KAAK,EAAEC;AAAjD,OACGF,IAAI,EADP,CADF;AAKD,GAdD;AAeD,C","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { RenderContentProps, Controller } from '@ali/4ever-cangjie';\nimport { ImagePlugin } from '@ali/4ever-bamboo';\nimport { ImagePluginConfig } from './types';\n\nexport default (config: ImagePluginConfig) => {\n  return (props: RenderContentProps, controller: Controller, next) => {\n    const { transformImageURL } = config || {};\n    const imageManager = React.useMemo(() => {\n      if (transformImageURL) {\n        return new ImagePlugin.ImageManager(transformImageURL, controller);\n      }\n      return null;\n    }, [transformImageURL]);\n\n    return (\n      <ImagePlugin.ImageManagerContext.Provider value={imageManager}>\n        {next()}\n      </ImagePlugin.ImageManagerContext.Provider>\n    );\n  };\n};\n"],"file":"createRenderEditable.js"}