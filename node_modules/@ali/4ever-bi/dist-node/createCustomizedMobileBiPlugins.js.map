{"version":3,"sources":["../../src/createCustomizedMobileBiPlugins.ts"],"names":["createCustomizedBiPlugins","plugins","paragraphPlugin","paragraph","unknownCard","createUnknownCardMobilePlugin","unknownTag","createUnknownTagMobilePlugin","rest","allPlugins","exception","container","autoClose","clipboard","history","basic","createBiPlugins","configs","array","hash","forEach","key","factory","plugin","push","schema","lang"],"mappings":";;;;;;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAdA;AACA;AACA;AACA;AAqBe,SAASA,yBAAT,CACbC,OADa,EAEb;AACA,QAAMC,eAAe,GAAGD,OAAO,CAACE,SAAR,IAAqBA,oCAA7C;AACA,QAAM;AACJC,IAAAA,WAAW,GAAGC,0CADV;AAEJC,IAAAA,UAAU,GAAGC,yCAFT;AAGJ,OAAGC;AAHC,MAIFP,OAJJ;AAMA,QAAMQ,UAAU,GAAG;AACjBC,IAAAA,SAAS,EAATA,oCADiB;AAEjB,OAAGF,IAFc;AAGjBG,IAAAA,SAAS,EAATA,8BAHiB;AAIjBP,IAAAA,WAJiB;AAKjBE,IAAAA,UALiB;AAMjBM,IAAAA,SAAS,EAATA,kBANiB;AAOjBC,IAAAA,SAAS,EAATA,eAPiB;AAQjBC,IAAAA,OAAO,EAAPA,gBARiB;AASjBX,IAAAA,SAAS,EAAED,eATM;AAUjBa,IAAAA,KAAK,EAALA;AAViB,GAAnB;AAaA,SAAO,SAASC,eAAT,CAAyBC,OAAuB,GAAG,EAAnD,EAAkE;AACvE,UAAMC,KAAe,GAAG,EAAxB;AACA,UAAMC,IAAI,GAAG,EAAb,CAFuE,CAGvE;;AACA,gCAAYV,UAAZ,EAAwBW,OAAxB,CAAgC,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,KAAsB;AACpD,YAAMC,MAAM,GAAGD,OAAO,CAACL,OAAD,EAAUE,IAAV,CAAtB;AACAD,MAAAA,KAAK,CAACM,IAAN,CAAWD,MAAX;AACAJ,MAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYE,MAAZ;AACD,KAJD;AAKA,UAAME,MAAM,GAAG,+BAAaP,KAAb,CAAf;AACAA,IAAAA,KAAK,CAACM,IAAN,CAAW;AAAEC,MAAAA;AAAF,KAAX;AACA,WAAO;AACLP,MAAAA,KADK;AAELC,MAAAA,IAFK;AAGLO,MAAAA,IAAI,EAAET,OAAO,CAACS,IAAR,IAAgB;AAHjB,KAAP;AAKD,GAhBD;AAiBD","sourcesContent":["/**\n * @packageDocumentation\n * @module Editor(Bi)\n */\nimport { createSchema, Plugin } from '@ali/4ever-cangjie';\nimport { mobileBiFactory as exception } from '@ali/4ever-plugin-exception';\nimport { sortPlugins } from '@ali/4ever-utils';\nimport autoClose from './plugins/autoClose';\nimport { createUnknownCardMobilePlugin, createUnknownTagMobilePlugin } from '@ali/4ever-factory';\n\nimport { biFactory as basic } from '@ali/4ever-plugin-basic';\nimport clipboard from './plugins/clipboard/mobile';\nimport history from './plugins/history/mobile';\nimport { mobileBiFactory as paragraph } from '@ali/4ever-plugin-paragraph';\nimport { biFactory as container } from '@ali/4ever-plugin-container';\nimport { BiPluginConfig, PluginFactory } from './types';\n\n\nexport interface BiPlugins {\n  array: Plugin[];\n  hash: Record<string, Plugin>;\n  lang?: string | Record<string, any>;\n}\n\nexport default function createCustomizedBiPlugins(\n  plugins: Record<string, PluginFactory>,\n) {\n  const paragraphPlugin = plugins.paragraph || paragraph;\n  const {\n    unknownCard = createUnknownCardMobilePlugin,\n    unknownTag = createUnknownTagMobilePlugin,\n    ...rest\n  } = plugins;\n\n  const allPlugins = {\n    exception,\n    ...rest,\n    container,\n    unknownCard,\n    unknownTag,\n    autoClose,\n    clipboard,\n    history,\n    paragraph: paragraphPlugin,\n    basic,\n  };\n\n  return function createBiPlugins(configs: BiPluginConfig = {}): BiPlugins {\n    const array: Plugin[] = [];\n    const hash = {};\n    // @ts-ignore\n    sortPlugins(allPlugins).forEach(({ key, factory }) => {\n      const plugin = factory(configs, hash);\n      array.push(plugin);\n      hash[key] = plugin;\n    });\n    const schema = createSchema(array as any);\n    array.push({ schema });\n    return {\n      array,\n      hash,\n      lang: configs.lang || 'zh-CN',\n    };\n  };\n}\n"],"file":"createCustomizedMobileBiPlugins.js"}