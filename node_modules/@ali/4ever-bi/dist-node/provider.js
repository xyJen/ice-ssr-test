"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _weUtil = require("@ali/we-util");

var _weDesignNext = require("@ali/we-design-next");

var _weUi = require("@ali/we-ui");

var _everCangjie = require("@ali/4ever-cangjie");

var _everComponent = require("@ali/4ever-component");

var _everUtils = require("@ali/4ever-utils");

/**
 * @packageDocumentation
 * @module Provider
 */
const _createElement = /*#__PURE__*/React.createElement;

/**
 * 编辑器顶层Provider，提供编辑数据、插件、配置
 * @ignore
 */
class BiProvider extends React.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      value: null
    };
    this.plugins = null;

    this.handleChange = change => {
      const {
        onChange
      } = this.props;
      onChange?.(change);
    };
  }

  resolveCangjiePlugins() {
    if (!this.plugins) {
      const {
        plugins,
        onAction
      } = this.props;
      this.plugins = [// @ts-ignore
      (0, _everCangjie.createPlaceholderPlugin)({
        isPlaceholderVisible: _everUtils.isPlaceholderVisible
      }), {
        onAction
      }, ...(plugins?.array || [])];
    }

    return this.plugins;
  }

  render() {
    const {
      controllerRef,
      children,
      plugins,
      ...rest
    } = this.props;
    const {
      value
    } = this.state;
    return /*#__PURE__*/_createElement(_weDesignNext.LocaleProvider, {
      value: plugins?.lang || 'zh-CN'
    }, /*#__PURE__*/_createElement(_weUi.LocaleProvider, {
      value: plugins?.lang || 'zh-CN'
    }, /*#__PURE__*/_createElement(_weUtil.LocaleProvider, {
      value: plugins?.lang || 'zh-CN'
    }, /*#__PURE__*/_createElement(_everCangjie.Provider, (0, _extends2.default)({}, rest, {
      controllerRef: controllerRef,
      plugins: this.resolveCangjiePlugins(),
      value: value || this.props.value,
      onChange: this.handleChange
    }), /*#__PURE__*/_createElement(_everComponent.PluginsContext.Provider, {
      value: plugins || {
        array: [],
        hash: {}
      }
    }, /*#__PURE__*/_createElement(_everComponent.ActiveInteractionProvider, null, children))))));
  }

}

exports.default = BiProvider;
BiProvider.defaultProps = {
  readOnly: false,

  onAction(action, controller, next) {
    return next();
  },

  onCatch() {},

  onChange() {}

};
//# sourceMappingURL=provider.js.map