{"version":3,"sources":["../../../../src/__tests__/inlineCode/behaviour.test.tsx"],"names":["createBiPlugins","inlineCode","biFactory","marks","marksBiFactory","link","plugins","image","cases","name","input","disabledCases","ignoreInOld","describe","gray","array","runCase","output","it","controller","Controller","create","value","run","actual","toJSON","preserveSelections","expected","expect","toEqual","ans","forEach","item","index"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport createCustomizedBiPlugins from '../../createCustomizedBiPlugins';\nimport { biFactory, toggleInlineCode } from '@ali/4ever-plugin-inline-code';\nimport { biFactory as marksBiFactory } from '@ali/4ever-plugin-marks';\nimport { plugins } from '@ali/4ever-bi';\nimport { Controller, Value, CangjieInputEvent } from '@ali/4ever-cangjie';\nimport { jsx } from '@ali/4ever-dev-test';\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  inlineCode: biFactory,\n  marks: marksBiFactory,\n  link: plugins.link,\n  image: plugins.image,\n});\n\nconst cases = [{\n  name: 'plainText + expanded selection',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <anchor />\n          Hello\n          <focus />\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n}, {\n  name: 'expanded selection in old inlineCode',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <m type=\"inlineCode\">He<anchor />ll<focus />o</m>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n}, {\n  name: 'expanded selection in new inlineCode',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <text></text>\n          <inline type=\"inlineCode\">He<anchor />ll<focus />o</inline>\n          <text></text>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n}, {\n  name: 'collapsed selection in new inlineCode',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <text></text>\n          <inline type=\"inlineCode\">He<cursor />llo</inline>\n          <text></text>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n}];\n\nconst disabledCases = [{\n  name: 'plainText + collapsed selection',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          He<cursor/>llo\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n}, {\n  name: 'collapsed selection in old inlineCode',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <m type=\"inlineCode\">He<cursor />llo</m>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n}, {\n  name: 'expanded selection over text and old inlineCode',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <m type=\"inlineCode\">He<anchor />llo</m> Wor<focus />ld\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n  ignoreInOld: true,\n}, {\n  name: 'expanded selection over text and new inlineCode',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <text></text><inline type=\"inlineCode\">He<anchor />llo</inline><text> Wor<focus />ld</text>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n  ignoreInOld: true,\n}, {\n  name: 'expanded selection over old and new inlineCode',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <m type=\"inlineCode\">He<anchor />llo</m>\n          <text> new</text>\n          <inline type=\"inlineCode\">World<focus /></inline>\n          <text></text>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n  ignoreInOld: true,\n}, {\n  name: 'expanded selection over new inlineCodes',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <text></text>\n          <inline type=\"inlineCode\">He<anchor />llo</inline>\n          <text></text>\n          <inline type=\"inlineCode\">World<focus /></inline>\n          <text></text>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n  ignoreInOld: true,\n}, {\n  name: 'expanded selection over other inlines',\n  input: (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <text><anchor /></text>\n          <inline type=\"image\"><text></text></inline>\n          <text></text>\n          <inline type=\"link\">World<focus /></inline>\n          <text></text>\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value,\n  ignoreInOld: true,\n}];\n\n\ndescribe('Bi/inlineCode(new)/behavior', () => {\n  const plugins = createBiPlugins({\n    inlineCode: {\n      gray: true,\n    }\n  }).array;\n\n  const runCase = ({ name, input, output }: {\n    name: string;\n    input: Value;\n    output: Value;\n  }) => {\n    it(name, () => {\n      const controller = Controller.create({\n        value: input,\n        plugins,\n      });\n      controller.run('onAction', toggleInlineCode());\n      const actual = controller.value.toJSON({ preserveSelections: true });\n      const expected = output.toJSON({ preserveSelections: true });\n      expect(actual).toEqual(expected);\n    });\n  };\n\n\n  describe('toggleInlineCode', () => {\n    const ans = [(\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text></text>\n            <inline type=\"inlineCode\">Hello</inline>\n            <text><cursor /></text>\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value, (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <m type=\"inlineCode\">He</m>\n            <anchor />ll<focus />\n            <m type=\"inlineCode\">o</m>\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value, (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            He<anchor />ll<focus />o\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value, (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            He<cursor />llo\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value,\n  ];\n\n    cases.forEach((item, index) => runCase({ ...item, output: ans[index] }));\n    disabledCases.forEach((item) => runCase({\n      ...item,\n      output: item.input\n    }));\n  });\n});\n\ndescribe('Bi/inlineCode(old)/behavior', () => {\n  const plugins = createBiPlugins({\n    inlineCode: {\n      gray: false,\n    }\n  }).array;\n\n  const runCase = ({ name, input, output }: {\n    name: string;\n    input: Value;\n    output: Value;\n  }) => {\n    it(name, () => {\n      const controller = Controller.create({\n        value: input,\n        plugins,\n      });\n      controller.run('onAction', toggleInlineCode());\n      const actual = controller.value.toJSON({ preserveSelections: true });\n      const expected = output.toJSON({ preserveSelections: true });\n      expect(actual).toEqual(expected);\n    });\n  };\n\n\n  describe('toggleInlineCode', () => {\n    const ans = [(\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor/>\n            <m type=\"inlineCode\">Hello</m>\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value, (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <m type=\"inlineCode\">He</m><anchor />ll<focus /><m type=\"inlineCode\">o</m>\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value, (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text></text>\n            <inline type=\"inlineCode\">He<m type=\"inlineCode\"><anchor />ll<focus /></m>o</inline>\n            <text></text>\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value, (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text></text>\n            <inline type=\"inlineCode\">He<cursor />llo</inline>\n            <text></text>\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value,\n  ];\n\n    cases.forEach((item, index) => runCase({ ...item, output: ans[index] }));\n    disabledCases.forEach((item) => !item.ignoreInOld && runCase({\n      ...item,\n      output: item.input\n    }));\n  });\n});\n"],"file":"behaviour.test.js"}