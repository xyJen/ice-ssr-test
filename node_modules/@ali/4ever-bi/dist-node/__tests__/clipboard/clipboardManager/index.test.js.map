{"version":3,"sources":["../../../../../src/__tests__/clipboard/clipboardManager/index.test.tsx"],"names":["MIME_TYPES","constants","DATA","TEXT","describe","document","execCommand","jest","fn","it","clip","ClipboardManager","selectFake","lastChild","body","expect","nodeName","toBe","destroy","newLastChild","not","action","container","target","createElement","writeText","catch","result","toHaveBeenCalledWith","text","write","HTML","navigator","clipboard","toHaveBeenCalled","paragraphA","Block","create","type","nodes","Text","textB","moSerializer"],"mappings":"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","sourcesContent":["import '@testing-library/jest-dom/extend-expect';\nimport { Block, Text, constants } from '@ali/4ever-cangjie';\nimport { copyNodes  } from '@ali/4ever-plugin-clipboard';\nimport ClipboardManager from '@ali/clipboard-manager';\nimport { moSerializer  } from '@ali/4ever-mo';\n\nconst { MIME_TYPES } = constants;\nconst DATA = {\n  [MIME_TYPES.TEXT]: '123',\n}\n\ndescribe('bi/clipboard/ClipboardManager', () => {\n  document.execCommand = jest.fn();\n  it('创建的 hiddenTextarea 时插入到 body 下，clipboard 对象销毁时 hiddenTextarea 移除掉', () => {\n    const clip = new ClipboardManager();\n    clip.selectFake(DATA);\n    const { lastChild } = document.body;\n    expect(lastChild.nodeName).toBe('TEXTAREA');\n    clip.destroy();\n    const { lastChild: newLastChild } = document.body;\n    expect(newLastChild).not.toBe(lastChild);\n  });\n\n  it('初始化时传入相关配置', () => {\n    const clip = new ClipboardManager({\n      action: 'copy',\n      container: document.body,\n      target: document.createElement('textarea'),\n    });\n    clip.selectFake(DATA);\n    const { lastChild } = document.body;\n    expect(lastChild.nodeName).toBe('TEXTAREA');\n    clip.destroy();\n    const { lastChild: newLastChild } = document.body;\n    expect(newLastChild).not.toBe(lastChild);\n  });\n\n  it('写入纯文本', () => {\n    const clip = new ClipboardManager();\n    clip.writeText('钉钉文档TEXT').catch((result) => {\n      // node 环境不能使用 document.execCommand, 单测仅保证流程是否畅通\n      expect(document.execCommand).toHaveBeenCalledWith('copy');\n      expect(result.action).toBe('copy');\n      expect(result.text).toBe('钉钉文档TEXT');\n    });\n  });\n\n  it('写入自定义 MIME TYPE 数据', () => {\n    const clip = new ClipboardManager();\n    clip.write({\n      [MIME_TYPES.TEXT]: '钉钉文档TEXT',\n      [MIME_TYPES.HTML]: '<div>钉钉文档HTML</div>',\n    }).catch((result) => {\n      expect(document.execCommand).toHaveBeenCalledWith('copy');\n      // node 环境不能使用 document.execCommand, 单测仅保证流程是否畅通\n      expect(result.action).toBe('copy');\n    });\n  });\n\n  it('写入 FILE TYPE 数据', () => {\n    const clip = new ClipboardManager();\n    clip.write({\n      'image/png': 'https://alidocs.oss-accelerate.aliyuncs.com/res/E8K4nyVo6RapqLbj/img/c0d39b35-0c85-46f4-92d7-8f008cd26da6.jpeg',\n      [MIME_TYPES.TEXT]: '图片',\n      [MIME_TYPES.HTML]: '<img src=\"https://alidocs.oss-accelerate.aliyuncs.com/res/E8K4nyVo6RapqLbj/img/c0d39b35-0c85-46f4-92d7-8f008cd26da6.jpeg\">',\n    }).catch((result) => {\n      expect(navigator.clipboard.write).toHaveBeenCalled();\n    });\n  });\n\n  it('通过 nodes 写入数据', () => {\n    const paragraphA = Block.create({\n      type: 'paragraph',\n      nodes: [Text.create('A')],\n    });\n    const textB = Text.create('B');\n    copyNodes([paragraphA, textB], moSerializer).catch((result) => {\n      expect(document.execCommand).toHaveBeenCalledWith('copy');\n      expect(result.action).toBe('copy');\n    });\n  });\n});\n"],"file":"index.test.js"}