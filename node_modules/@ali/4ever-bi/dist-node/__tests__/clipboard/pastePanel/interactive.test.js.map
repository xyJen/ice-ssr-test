{"version":3,"sources":["../../../../../src/__tests__/clipboard/pastePanel/interactive.test.tsx"],"names":["describe","it","skip","value","editor","queryByTestId","expect","toBe","fireEvent","paste","not","keyDown","findByTestId","click","pasteAll","type","content","toBeTruthy","data","list","listId","level","isOrdered","listStyleType","textFormat","cards","querySelectorAll","length","spacing","before","line","firstParagraph","querySelector","style","marginTop","szUnit","secondLeaf","fontSize","fontFamily","timeout"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport React from 'react';\nimport { Value } from '@ali/4ever-cangjie';\nimport {\n  renderEditor,\n  getHotkeyEvent,\n  fireEvent,\n  jsx,\n} from '@ali/4ever-dev-test';\nimport { wait, waitFor } from '@testing-library/react';\n\nimport BiEditor from '../../editor';\n\ndescribe('clipboard', () => {\n  it.skip('粘贴模式默认隐藏，粘贴后显示，有输入操作时自动隐藏', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            *\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    expect(queryByTestId('pastePanel')).toBe(null);\n    fireEvent.paste(editor!, 'text/plain', 'hhh');\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).not.toBe(null);\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('space'));\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).toBe(null);\n    });\n  });\n\n  it.skip('普通内容粘贴', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            *\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    expect(queryByTestId('pastePanel')).toBe(null);\n    fireEvent.paste(editor!, 'text/plain', 'hhh');\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).not.toBe(null);\n    });\n    fireEvent.click(await findByTestId('paste-panel-button'));\n\n    fireEvent.click(await findByTestId('menu-item-sourceFormat'));\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).toBe(null);\n    });\n    fireEvent.paste(editor!, 'text/plain', 'hhh');\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).not.toBe(null);\n    });\n    fireEvent.click(await findByTestId('paste-panel-button'));\n\n    fireEvent.click(await findByTestId('menu-item-matchFormat'));\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).toBe(null);\n    });\n    fireEvent.paste(editor!, 'text/plain', 'hhh');\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).not.toBe(null);\n    });\n    fireEvent.click(await findByTestId('paste-panel-button'));\n\n    fireEvent.click(await findByTestId('menu-item-textFormat'));\n\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).toBe(null);\n    });\n  });\n\n  it.skip('自定义识别内容', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            *\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    expect(queryByTestId('pastePanel')).toBe(null);\n    fireEvent.paste(\n      editor!,\n      'text/plain',\n      'http://gitlab.alibaba-inc.com/alidocs/we-plugin-attachment',\n    );\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).not.toBe(null);\n    });\n    fireEvent.click(await findByTestId('menu-item-text'));\n\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).toBe(null);\n    });\n    fireEvent.paste(\n      editor!,\n      'text/plain',\n      'http://gitlab.alibaba-inc.com/alidocs/we-plugin-attachment',\n    );\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).not.toBe(null);\n    });\n    fireEvent.click(await findByTestId('menu-item-card'));\n\n    // fireEvent.click(await findByTestId('menu-item-sourceFormat'));\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).toBe(null);\n    });\n  });\n\n  // 查看其他分支代码也是失败，TODO 灯少\n  it.skip('粘贴纯文本，出现 Markdown 转富文本选项', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            *\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    expect(queryByTestId('pastePanel')).toBe(null);\n    // 粘贴纯文本，出现转富文本选项\n    fireEvent.paste(editor!, 'text/plain', 'hhh');\n    await waitFor(() => {\n      expect(queryByTestId('pastePanel')).not.toBe(null);\n    });\n    fireEvent.click(await findByTestId('paste-panel-button'));\n\n    await waitFor(() => {\n      expect(queryByTestId('menu-item-markdownToDoc')).not.toBe(null);\n    });\n  });\n\n  it('粘贴 vscode markdown 文本，出现转富文本选项', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            *\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    fireEvent.pasteAll(editor!, [\n      { type: 'text/plain', content: '### hhh' },\n      { type: 'vscode-editor-data', content: '{\"mode\":\"markdown\"}' },\n    ]);\n    fireEvent.click(await findByTestId('paste-panel-button'));\n    await waitFor(() => {\n      expect(queryByTestId('menu-item-markdownToDoc')).toBeTruthy();\n    });\n  });\n\n  it('粘贴 HTML，不出现转富文本选项', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            *\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    fireEvent.paste(editor!, 'text/html', '<div style=\"color: red\">hhh</div>');\n    fireEvent.click(await findByTestId('paste-panel-button'));\n    await waitFor(() => {\n      expect(queryByTestId('menu-item-markdownToDoc')).toBe(null);\n    });\n  });\n\n  it('列表中切换纯文本粘贴模式，仍保持列表类型', async () => {\n    const data = {\n      list: {\n        listId: 'dn7ncrq6m7m',\n        level: 0,\n        isOrdered: false,\n        listStyleType: 'SCIR_ECIR_SREC',\n      }\n    };\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={data}>\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    fireEvent.paste(editor!, 'text/plain', 'hhh');\n    fireEvent.click(await findByTestId('paste-panel-button'));\n    const textFormat = await waitFor(() => queryByTestId('menu-item-textFormat'));\n    fireEvent.click(textFormat);\n    await wait();\n    expect(queryByTestId('list')).not.toBe(null);\n  });\n\n  it('在 edgeSelectable 节点之间插入内容，切换匹配模式', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"card\" />\n          <block type=\"paragraph\"><cursor /></block>\n          <block type=\"card\" />\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId, content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    fireEvent.paste(editor!, 'text/plain', 'hhh');\n    fireEvent.click(await findByTestId('paste-panel-button'));\n    const textFormat = await waitFor(() => queryByTestId('menu-item-matchFormat'));\n    fireEvent.click(textFormat);\n    await wait();\n    const cards = content.querySelectorAll('[data-cangjie-void=\"true\"]');\n    expect(cards.length).toBe(2);\n  });\n\n  it('在空段落插入内容，切换粘贴模式时清除空段落的样式', async () => {\n    const data = {\n      spacing: {\n        before: 182,\n        line: 1,\n      },\n    };\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={data}><cursor /></block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, queryByTestId, findByTestId, content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    fireEvent.paste(editor!, 'text/html', '<div><div style=\"margin-top: 182px;\">升级服务</div><div>123</div></div>');\n    fireEvent.click(await findByTestId('paste-panel-button'));\n    const textFormat = await waitFor(() => queryByTestId('menu-item-textFormat'));\n    fireEvent.click(textFormat);\n    await wait();\n    const firstParagraph = content.querySelector('[data-cangjie-leaf-block=\"true\"]');\n    expect(firstParagraph.style.marginTop).toBe('');\n  });\n\n  it('粘贴非仓颉内容, 字体自动被过滤掉, 复制字体大小如果相同则自动匹配目标位置字体大小', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <m type=\"sz\" data={{ value: 14, szUnit: 'pt' }}>AAA</m><cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    fireEvent.paste(editor!, 'text/html', '<div style=\"font-size: 30px; font-family: songti;\">BBB</div>');\n    await waitFor(() => {\n      const secondLeaf = content.querySelectorAll('[data-cangjie-leaf]')?.[1];\n      expect(secondLeaf?.style.fontSize).toBe('14pt');\n      expect(secondLeaf?.style.fontFamily).toBe('');\n    }, {\n      timeout: 1000,\n    });\n  });\n});\n"],"file":"interactive.test.js"}