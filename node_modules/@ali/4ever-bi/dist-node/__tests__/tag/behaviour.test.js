"use strict";

var _everDevTest = require("@ali/4ever-dev-test");

var _everCangjie = require("@ali/4ever-cangjie");

var _ = require("../..");

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const tagPlugin = (0, _.tagFactory)(() => {
  return {
    tagType: 'tag',
    renderNode: ({
      node
    }, controller) => {
      const onClick = () => {
        controller.run('onAction', (0, _.setTagData)(node, {
          height: 40,
          width: 60
        }));
      };

      const {
        height
      } = node.data;
      return (0, _everDevTest.jsx)("div", {
        "data-testid": "tag-content",
        onClick: onClick,
        "data-tag-height": height
      }, '来至会话 ' + node.data.metadata.imTitle);
    }
  };
});
const createBiPlugins = (0, _.createCustomizedBiPlugins)({
  tagPlugin
});
const plugins = createBiPlugins({}).array;

var _ref = (0, _everDevTest.jsx)("cursor", null);

var _ref2 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "End Paragraph");

var _ref3 = (0, _everDevTest.jsx)("anchor", null);

var _ref4 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "End Paragraph", (0, _everDevTest.jsx)("focus", null));

var _ref5 = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "12345", (0, _everDevTest.jsx)("cursor", null), "6789")));

describe('Bi/tag/behaviour', () => {
  test('在正文全选，可以选中来源于', () => {
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "paragraph"
    }, "Start Paragraph", (0, _everDevTest.jsx)("inline", {
      type: "tag",
      data: {
        tagType: 'tag',
        height: 24,
        width: 100
      }
    }), _ref), _ref2));
    const output = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "paragraph"
    }, _ref3, "Start Paragraph", (0, _everDevTest.jsx)("inline", {
      type: "tag",
      data: {
        tagType: 'tag',
        height: 24,
        width: 100
      }
    })), _ref4));

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    controller.command(_everCangjie.Commands.moveToRangeOfDocument);
    const actual = controller.value.toJSON({
      preserveSelections: true
    });
    const expected = controller.setValue(output).value.toJSON({
      preserveSelections: true
    });
    expect(actual).toEqual(expected);
  });
  test('插入tag元素', () => {
    const value = _ref5;

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    controller.run('onAction', (0, _.insertTag)({
      tagType: 'tag'
    }));
    const firstInlines = controller.value.document.getInlines();
    expect(firstInlines.length === 1).toEqual(true);
    expect(firstInlines[0].data.tagType).toEqual('tag'); // 连续插入

    controller.run('onAction', (0, _.insertTag)({
      tagType: 'tag'
    }));
    const secondInlines = controller.value.document.getInlines();
    expect(secondInlines.length === 2).toEqual(true);
    expect(secondInlines[1].data.tagType).toEqual('tag');
  });
});
//# sourceMappingURL=behaviour.test.js.map