{"version":3,"sources":["../../../../src/__tests__/heading/getHeadings.test.tsx"],"names":["getListData","OldUtils","describe","title","nodes","type","data","level","listStyleType","listId","text","result","forEach","it","blocks","map","value","headings","index","expect","toBe"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Value } from '@ali/4ever-cangjie';\nimport { getHeadings } from '@ali/4ever-bamboo';\nimport { OldUtils } from '@ali/4ever-plugin-list';\n\nconst { getListData } = OldUtils;\n\ndescribe('getHeadings 单测', () => {\n  [\n    {\n      title: '单个有序列表标题，大纲内容要带上序号',\n      nodes: [\n        {\n          type: 'heading-1',\n          data: getListData({ level: 0, type: 'ol', listStyleType: 'DEC_LEN_LROM_P', listId: 'a' }),\n          text: 'hello',\n          result: '1. hello',\n        }\n      ]\n    },\n    {\n      title: '多个不同有序列表标题，大纲内容要带上序号',\n      nodes: [\n        {\n          type: 'heading-1',\n          data: getListData({ level: 0, type: 'ol', listStyleType: 'DEC_LEN_LROM_P', listId: 'a' }),\n          text: 'hello',\n          result: '1. hello',\n        },\n        {\n          type: 'heading-2',\n          data: getListData({ level: 0, type: 'ol', listStyleType: 'DEC_LEN_LROM_P', listId: 'a' }),\n          text: 'hello',\n          result: '2. hello',\n        },\n        {\n          type: 'heading-3',\n          data: getListData({ level: 0, type: 'ol', listStyleType: 'DEC_LEN_LROM_P', listId: 'a' }),\n          text: 'hello',\n          result: '3. hello',\n        },\n      ]\n    },\n    {\n      title: '非有序列表标题，大纲内容不带序号',\n      nodes: [\n        {\n          type: 'heading-1',\n          data: getListData({ level: 0, type: 'ul', listStyleType: 'SCIR_ECIR_SREC', listId: 'a' }),\n          text: 'hello',\n          result: 'hello',\n        },\n        {\n          type: 'heading-1',\n          data: getListData({ level: 0, type: 'tlist', listId: 'a' }),\n          text: 'hello',\n          result: 'hello',\n        }\n      ]\n    },\n    {\n      title: '非列表标题，标题大纲内容仍正常显示',\n      nodes: [\n        {\n          type: 'heading-1',\n          data: {},\n          text: 'hello',\n          result: 'hello',\n        }\n      ]\n    },\n    {\n      title: '多层级有序列表标题，大纲内容能正确显示列表序号',\n      nodes: [\n        {\n          type: 'heading-1',\n          data: getListData({ level: 0, type: 'ol', listId: 'a' }),\n          text: 'hello',\n          result: '1. hello',\n        },\n        {\n          type: 'heading-1',\n          data: getListData({ level: 1, type: 'ol', listId: 'a' }),\n          text: 'hello',\n          result: 'a. hello',\n        },\n        {\n          type: 'heading-1',\n          data: getListData({ level: 2, type: 'ol', listId: 'a' }),\n          text: 'hello',\n          result: 'i. hello',\n        },\n        {\n          type: 'heading-1',\n          data: getListData({ level: 2, type: 'ol', listId: 'a' }),\n          text: 'hello',\n          result: 'ii. hello',\n        },\n        {\n          type: 'heading-1',\n          data: getListData({ level: 1, type: 'ol', listId: 'a' }),\n          text: 'hello',\n          result: 'b. hello',\n        },\n        {\n          type: 'heading-1',\n          data: getListData({ level: 0, type: 'ol', listId: 'a' }),\n          text: 'hello',\n          result: '2. hello',\n        }\n      ]\n    },\n  ].forEach(({ title, nodes }) => {\n    it(title, () => {\n      const blocks = nodes.map(({ data, type, text }) => (\n        <block\n          type={type}\n          data={data}\n        >\n          {text}\n        </block>\n      ) as unknown as Node);\n      const value = ((\n        <value>\n          <document>\n            {blocks}\n          </document>\n        </value>\n      ) as unknown as Value);\n      const headings = getHeadings(value);\n      nodes.forEach(({ result }, index) => {\n        expect(headings[index].text).toBe(result);\n      });\n    });\n  });\n});\n"],"file":"getHeadings.test.js"}