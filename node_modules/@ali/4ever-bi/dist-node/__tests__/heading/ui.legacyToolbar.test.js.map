{"version":3,"sources":["../../../../src/__tests__/heading/ui.legacyToolbar.test.tsx"],"names":["getListData","OldUtils","createValue","text","createListValue","level","type","listStyleType","listId","PARAM_HOT_KEY","describe","triggerText","selector","headType","hotKey","forEach","it","container","queryByTestId","offScreenToolbarItem","querySelector","trigger","fireEvent","click","btn","node","expect","textContent","toBe","listItem","paragraphBtn","para","headings","querySelectorAll","style","marginBottom","length","value","editor","content","cangjieInput","data","keyDown"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { wait, waitFor, waitForElementToBeRemoved } from '@testing-library/react';\nimport { renderEditor, getHotkeyEvent, jsx, fireEvent } from '@ali/4ever-dev-test';\nimport { Value } from '@ali/4ever-cangjie';\nimport { OldUtils } from '@ali/4ever-plugin-list';\nimport { EditorWidthLegacyToolbar as Editor } from '../editor';\n\nconst { getListData } = OldUtils;\n\nfunction createValue(text: string) {\n  return (\n    <value>\n      <document>\n        <block type=\"paragraph\"><cursor />{text}</block>\n      </document>\n    </value>\n  ) as unknown as Value;\n}\n\nfunction createListValue(text: string) {\n  return (\n    <value>\n      <document>\n        <block\n          type=\"paragraph\"\n          data={getListData({ level: 0, type: 'ol', listStyleType: 'DEC_LEN_LROM_P', listId: 'dn7ncrq6m7j' })}\n        >\n          <cursor />\n          {text}\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value;\n}\n\nconst PARAM_HOT_KEY = '0+ctrl+alt';\n\ndescribe('Bi/heading/ui', () => {\n  [{\n    type: '一级标题',\n    triggerText: '#',\n    selector: 'h1',\n    headType: 'heading-1',\n    hotKey: '1+ctrl+alt',\n  }, {\n    type: '二级标题',\n    triggerText: '##',\n    selector: 'h2',\n    headType: 'heading-2',\n    hotKey: '2+ctrl+alt',\n  }, {\n    type: '三级标题',\n    triggerText: '###',\n    selector: 'h3',\n    headType: 'heading-3',\n    hotKey: '3+ctrl+alt',\n  }, {\n    type: '四级标题',\n    triggerText: '####',\n    selector: 'h4',\n    headType: 'heading-4',\n    hotKey: '4+ctrl+alt',\n  }].forEach(({\n    type, headType, triggerText, selector, hotKey,\n  }) => {\n    describe(type, () => {\n      it(`点击按钮把当前行设为${type}`, async () => {\n        const { container, queryByTestId } = await renderEditor(<Editor defaultValue={createValue('Hello')} />);\n        // 避免选中离屏渲染的 toolbar\n        const offScreenToolbarItem = container.querySelector('[class*=\"OffScreen\"] [data-testid=\"SelectWrap-bi-toolbar-heading\"]');\n        if (offScreenToolbarItem) {\n          await waitForElementToBeRemoved(offScreenToolbarItem);\n        }\n        const trigger = await waitFor(() => queryByTestId('SelectWrap-bi-toolbar-heading'));\n        fireEvent.click(trigger!);\n        const btn = await waitFor(() => queryByTestId(`option-${headType}`));\n        fireEvent.click(btn!);\n\n        // flush\n        await wait();\n\n        const node = container.querySelector(selector) as HTMLElement;\n        expect(node.textContent).toBe('Hello');\n\n        const listItem = queryByTestId('list');\n        expect(listItem).toBe(null);\n      });\n      it(`点击按钮把当前列表行设为${type}`, async () => {\n        const { container, queryByTestId } = await renderEditor(<Editor defaultValue={createListValue('Hello')} />);\n        // 避免选中离屏渲染的 toolbar\n        const offScreenToolbarItem = container.querySelector('[class*=\"OffScreen\"] [data-testid=\"SelectWrap-bi-toolbar-heading\"]');\n        if (offScreenToolbarItem) {\n          await waitForElementToBeRemoved(offScreenToolbarItem);\n        }\n        const trigger = await waitFor(() => queryByTestId('SelectWrap-bi-toolbar-heading'));\n        fireEvent.click(trigger!);\n        const btn = await waitFor(() => queryByTestId(`option-${headType}`));\n        fireEvent.click(btn!);\n\n        // flush\n        await wait();\n\n        const node = container.querySelector(selector) as HTMLElement;\n        expect(node.textContent).toBe('Hello');\n\n        const listItem = queryByTestId('list');\n        expect(listItem.textContent).toBe('1.Hello');\n      });\n\n      it(`点击按钮把当前${type}设为普通段落`, async () => {\n        const { container, queryByTestId } = await renderEditor(<Editor defaultValue={createValue('Hello')} />);\n        // 避免选中离屏渲染的 toolbar\n        const offScreenToolbarItem = container.querySelector('[class*=\"OffScreen\"] [data-testid=\"SelectWrap-bi-toolbar-heading\"]');\n        if (offScreenToolbarItem) {\n          await waitForElementToBeRemoved(offScreenToolbarItem);\n        }\n        let trigger = await waitFor(() => queryByTestId('SelectWrap-bi-toolbar-heading'));\n        fireEvent.click(trigger!);\n        const btn = await waitFor(() => queryByTestId(`option-${headType}`));\n        fireEvent.click(btn!);\n\n        // flush\n        await wait();\n\n        trigger = container.querySelector('[data-testid=\"SelectWrap-bi-toolbar-heading\"]');\n\n        // 再次唤起工具栏\n        fireEvent.click(trigger!);\n\n        const paragraphBtn = await waitFor(() => queryByTestId('option-paragraph'));\n        fireEvent.click(paragraphBtn!);\n\n        // flush\n        await wait();\n\n        const para = container.querySelector('[data-type=\"paragraph\"]') as HTMLElement;\n        const headings = container.querySelectorAll(selector);\n        // 确认正文 margin 即段后距, 被reset，before和after支持margin-top=0px\n        expect(para.style.marginBottom).toBe('');\n        expect(para.textContent).toBe('Hello');\n        expect(headings.length).toBe(0);\n      });\n\n      it(`在 ${triggerText} 后输入空格，把 ${triggerText} 替换为 ${type}`, async () => {\n        const value = (\n          <value>\n            <document>\n              <block type=\"paragraph\">{triggerText}<cursor /></block>\n            </document>\n          </value>\n        ) as unknown as Value;\n        const { editor, content } = await renderEditor(<Editor defaultValue={value} />);\n        fireEvent.cangjieInput(editor, { data: ' ' });\n\n        // flush\n        await wait();\n\n        expect(content.querySelectorAll(selector).length).toBe(1);\n      });\n\n      it(`在被嵌套的情况下，不把 ${triggerText} 替换为 ${type}`, async () => {\n        const value = (\n          <value>\n            <document>\n              <block type=\"paragraph\">*{triggerText}<cursor /></block>\n            </document>\n          </value>\n        ) as unknown as Value;\n        const { editor, content } = await renderEditor(<Editor defaultValue={value} />);\n        fireEvent.cangjieInput(editor, { data: ' ' });\n\n        // flush\n        await wait();\n\n        expect(content.querySelector('div[data-type=paragraph] span[data-cangjie-leaf]')?.textContent).toBe(`*${triggerText} `);\n        expect(content.querySelectorAll(selector).length).toBe(0);\n      });\n\n      it(`通过快捷键'${hotKey}'把正文文本设置为${type}, 并可以通过'0+Ctrl+alt'重置为正文`, async () => {\n        const { content, editor } = await renderEditor(<Editor defaultValue={createValue('Hello')} />);\n        fireEvent.keyDown(editor, getHotkeyEvent(hotKey));\n        await wait();\n        expect(content.querySelectorAll(selector).length).toBe(1);\n\n        fireEvent.keyDown(editor, getHotkeyEvent(PARAM_HOT_KEY));\n        await wait();\n        expect(content.querySelectorAll(selector).length).toBe(0);\n      });\n    });\n  });\n});\n"],"file":"ui.legacyToolbar.test.js"}