"use strict";

var _everCangjie = require("@ali/4ever-cangjie");

var _everDevTest = require("@ali/4ever-dev-test");

var _editor = require("../editor");

/** @jsx jsx */
const plugins = (0, _editor.createBiPlugins)().array;

var _ref = (0, _everDevTest.jsx)("cursor", null);

var _ref2 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref3 = (0, _everDevTest.jsx)("cursor", null);

var _ref4 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("cursor", null));

var _ref5 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref6 = (0, _everDevTest.jsx)("cursor", null);

var _ref7 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref8 = (0, _everDevTest.jsx)("cursor", null);

var _ref9 = (0, _everDevTest.jsx)("cursor", null);

var _ref10 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref11 = (0, _everDevTest.jsx)("cursor", null);

var _ref12 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref13 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref14 = (0, _everDevTest.jsx)("block", {
  type: "heading-1"
}, (0, _everDevTest.jsx)("cursor", null));

var _ref15 = (0, _everDevTest.jsx)("cursor", null);

var _ref16 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref17 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref18 = (0, _everDevTest.jsx)("block", {
  type: "heading-1"
}, "a", (0, _everDevTest.jsx)("cursor", null));

var _ref19 = (0, _everDevTest.jsx)("cursor", null);

var _ref20 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref21 = (0, _everDevTest.jsx)("cursor", null);

var _ref22 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref23 = (0, _everDevTest.jsx)("block", {
  type: "heading-1"
}, (0, _everDevTest.jsx)("cursor", null));

var _ref24 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref25 = (0, _everDevTest.jsx)("cursor", null);

var _ref26 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref27 = (0, _everDevTest.jsx)("cursor", null);

var _ref28 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref29 = (0, _everDevTest.jsx)("block", {
  type: "heading-1"
}, (0, _everDevTest.jsx)("cursor", null), "ccc");

var _ref30 = (0, _everDevTest.jsx)("cursor", null);

var _ref31 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref32 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref33 = (0, _everDevTest.jsx)("cursor", null);

var _ref34 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("cursor", null), "bbb");

var _ref35 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "aaa");

var _ref36 = (0, _everDevTest.jsx)("cursor", null);

var _ref37 = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "aaabbb")));

var _ref38 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref39 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("cursor", null), "ddd");

var _ref40 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "bbb");

var _ref41 = (0, _everDevTest.jsx)("cursor", null);

describe('headingGroup', () => {
  [{
    title: '在未折叠的标题节点末尾按 Enter',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, "aaa", _ref), _ref2)),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, "aaa", _ref3), _ref4, _ref5))
  }, {
    title: '在未折叠的标题内容中间按 Enter',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, "aa", _ref6, "a"), _ref7)),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, "aa", _ref8), (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, _ref9, "a"), _ref10))
  }, {
    title: '在折叠的标题节点内容末尾按 Enter',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaa", _ref11), _ref12)),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaa"), _ref13, _ref14))
  }, {
    title: '在折叠的标题节点内容中间按 Enter',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aa", _ref15, "a"), _ref16)),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aa"), _ref17, _ref18))
  }, {
    title: '在下个节点是空标题节点 的折叠标题节点内容结束位置按 Enter',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaa", _ref19), _ref20, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }))),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaa", _ref21), _ref22, _ref23, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    })))
  }, {
    title: '在未折叠的标题内容开始位置按 Enter',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, _ref24, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, _ref25, "aaa"))),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, _ref26, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }), (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, _ref27, "aaa")))
  }].forEach(async ({
    title,
    input,
    output
  }) => {
    it(title, async () => {
      const controller = _everCangjie.Controller.create({
        value: input,
        plugins
      });

      controller.run('onKeyDown', new KeyboardEvent('keydown', (0, _everDevTest.getHotkeyEvent)('enter')));
      const actual = controller.value.toJSON();
      const expected = controller.setValue(output).value.toJSON();
      expect(actual).toEqual(expected);
    });
  });
  [{
    title: '在前一个节点是折叠状态标题的段落开始位置，按下 BackSpace',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaa"), _ref28, _ref29)),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaa", _ref30, "ccc"), _ref31))
  }, {
    title: '在前一个节点是非折叠状态标题的段落开始位置，按下 BackSpace',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaa"), _ref32, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, _ref33, "ccc"))),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, "aaaccc"), _ref34))
  }, {
    title: '在前一个节点是普通段落的标题开始位置，按下 BackSpace',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, _ref35, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: true
      }
    }, _ref36, "bbb"))),
    output: _ref37
  }, {
    title: '在前一个节点是普通段落的标题开始位置，按下 BackSpace',
    input: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-2",
      data: {
        fold: true
      }
    }, "aaa"), _ref38, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, "ccc"), _ref39)),
    output: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "heading-2",
      data: {
        fold: true
      }
    }, "aaa"), _ref40, (0, _everDevTest.jsx)("block", {
      type: "heading-1",
      data: {
        fold: false
      }
    }, "ccc", _ref41, "ddd")))
  }].forEach(async ({
    title,
    input,
    output
  }) => {
    it(title, async () => {
      const controller = _everCangjie.Controller.create({
        value: input,
        plugins
      });

      controller.run('onKeyDown', new KeyboardEvent('keydown', (0, _everDevTest.getHotkeyEvent)('backspace')));
      const actual = controller.value.toJSON();
      const expected = controller.setValue(output).value.toJSON();
      expect(actual).toEqual(expected);
    });
  });
});
//# sourceMappingURL=headingGroupBehaviour.test.js.map