{"version":3,"sources":["../../../../src/__tests__/heading/headingGroupBehaviour.test.tsx"],"names":["plugins","array","describe","title","input","fold","output","forEach","it","controller","Controller","create","value","run","KeyboardEvent","actual","toJSON","expected","setValue","expect","toEqual"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Controller } from '@ali/4ever-cangjie';\nimport { getHotkeyEvent, jsx } from '@ali/4ever-dev-test';\nimport { createBiPlugins } from '../editor';\n\nconst plugins = createBiPlugins().array;\n\n\ndescribe('headingGroup', () => {\n  [\n    {\n      title: '在未折叠的标题节点末尾按 Enter',\n      input: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: false }}>aaa<cursor /></block>\n            <block type=\"paragraph\">bbb</block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: false }}>aaa<cursor /></block>\n            <block type=\"paragraph\"><cursor /></block>\n            <block type=\"paragraph\">bbb</block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在未折叠的标题内容中间按 Enter',\n      input: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: false }}>aa<cursor />a</block>\n            <block type=\"paragraph\">bbb</block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: false }}>aa<cursor /></block>\n            <block type=\"heading-1\" data={{ fold: false }}><cursor />a</block>\n            <block type=\"paragraph\">bbb</block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在折叠的标题节点内容末尾按 Enter',\n      input: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: true }}>aaa<cursor /></block>\n            <block type=\"paragraph\">bbb</block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: true }}>aaa</block>\n            <block type=\"paragraph\">bbb</block>\n            <block type=\"heading-1\"><cursor /></block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在折叠的标题节点内容中间按 Enter',\n      input: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: true }}>aa<cursor />a</block>\n            <block type=\"paragraph\">bbb</block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: true }}>aa</block>\n            <block type=\"paragraph\">bbb</block>\n            <block type=\"heading-1\">a<cursor /></block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在下个节点是空标题节点 的折叠标题节点内容结束位置按 Enter',\n      input: (\n        <value>\n        <document>\n          <block type=\"heading-1\" data={{ fold: true }}>aaa<cursor /></block>\n          <block type=\"paragraph\">bbb</block>\n          <block type=\"heading-1\" data={{ fold: true }}></block>\n        </document>\n      </value>\n      ),\n      output: (\n        <value>\n        <document>\n          <block type=\"heading-1\" data={{ fold: true }}>aaa<cursor /></block>\n          <block type=\"paragraph\">bbb</block>\n          <block type=\"heading-1\"><cursor /></block>\n          <block type=\"heading-1\" data={{ fold: true }}></block>\n        </document>\n      </value>\n      ),\n    },\n    {\n      title: '在未折叠的标题内容开始位置按 Enter',\n      input: (\n        <value>\n          <document>\n            <block type=\"paragraph\">bbb</block>\n            <block type=\"heading-1\" data={{ fold: false }}><cursor />aaa</block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block type=\"paragraph\">bbb</block>\n            <block type=\"heading-1\" data={{ fold: false }}></block>\n            <block type=\"heading-1\" data={{ fold: false }}><cursor />aaa</block>\n          </document>\n        </value>\n      ),\n    },\n  ].forEach(async ({ title, input, output }) => {\n    it(title, async () => {\n      const controller = Controller.create({\n        value: input,\n        plugins,\n      });\n      controller.run(\n        'onKeyDown',\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n      const actual = controller.value.toJSON();\n      const expected = controller.setValue(output).value.toJSON();\n      expect(actual).toEqual(expected);\n    });\n  });\n\n  [\n    {\n      title: '在前一个节点是折叠状态标题的段落开始位置，按下 BackSpace',\n      input: (\n        <value>\n          <document>\n            <block type=\"heading-1\" data={{ fold: true }}>aaa</block>\n            <block type=\"paragraph\">bbb</block>\n            <block type=\"heading-1\"><cursor />ccc</block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n        <document>\n          <block type=\"heading-1\" data={{ fold: true }}>aaa<cursor />ccc</block>\n          <block type=\"paragraph\">bbb</block>\n        </document>\n      </value>\n      ),\n    },\n    {\n      title: '在前一个节点是非折叠状态标题的段落开始位置，按下 BackSpace',\n      input: (\n        <value>\n        <document>\n          <block type=\"heading-1\" data={{ fold: true }}>aaa</block>\n          <block type=\"paragraph\">bbb</block>\n          <block type=\"heading-1\" data={{ fold: false }}><cursor />ccc</block>\n        </document>\n      </value>\n    ),\n    output: (\n      <value>\n      <document>\n        <block type=\"heading-1\" data={{ fold: true }}>aaaccc</block>\n        <block type=\"paragraph\"><cursor />bbb</block>\n      </document>\n    </value>\n      ),\n    },\n    {\n      title: '在前一个节点是普通段落的标题开始位置，按下 BackSpace',\n      input: (\n        <value>\n        <document>\n          <block type=\"paragraph\">aaa</block>\n          <block type=\"heading-1\" data={{ fold: true }}><cursor />bbb</block>\n        </document>\n      </value>\n    ),\n    output: (\n      <value>\n      <document>\n        <block type=\"paragraph\">aaabbb</block>\n      </document>\n    </value>\n      ),\n    },\n    {\n      title: '在前一个节点是普通段落的标题开始位置，按下 BackSpace',\n      input: (\n        <value>\n          <document>\n            <block type=\"heading-2\" data={{ fold: true }}>aaa</block>\n            <block type=\"paragraph\">bbb</block>\n            <block type=\"heading-1\" data={{ fold: false }}>ccc</block>\n            <block type=\"paragraph\"><cursor />ddd</block>\n          </document>\n        </value>\n    ),\n    output: (\n      <value>\n        <document>\n          <block type=\"heading-2\" data={{ fold: true }}>aaa</block>\n          <block type=\"paragraph\">bbb</block>\n          <block type=\"heading-1\" data={{ fold: false }}>ccc<cursor />ddd</block>\n        </document>\n      </value>\n      ),\n    },\n  ].forEach(async ({ title, input, output }) => {\n    it(title, async () => {\n      const controller = Controller.create({\n        value: input,\n        plugins,\n      });\n      controller.run(\n        'onKeyDown',\n        new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n      );\n      const actual = controller.value.toJSON();\n      const expected = controller.setValue(output).value.toJSON();\n      expect(actual).toEqual(expected);\n    });\n  });\n});\n"],"file":"headingGroupBehaviour.test.js"}