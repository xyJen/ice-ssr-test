{"version":3,"sources":["../../../../src/__tests__/heading/ui.ccp.test.tsx"],"names":["MIME_TYPES","constants","marks","type","data","value","szUnit","describe","beforeAll","jest","spyOn","console","error","mockImplementation","afterAll","mockRestore","afterEach","test","editor","content","clipboard","pastePanel","setData","fn","fireEvent","copy","nativeEvent","clipboardData","preventDefault","keyDown","paste","FRAGMENT","mock","calls","expect","querySelectorAll","length","toBe","querySelector","textContent","blocks","getElementsByTagName","tagName"],"mappings":";;;;AAEA;;AACA;;AACA;;AAGA;;AAPA;;AACA;AAQA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,sBAAvB;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,IAAI,EAAE,IADO;AAEbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAFO,CAAD,EAMX;AACDH,EAAAA,IAAI,EAAE,MADL;AAEDC,EAAAA,IAAI,EAAE;AAFL,CANW,CAAd;;WA8BM,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,UACK,qCADL,YACqB,oCADrB,CADF,EAIE;AAAO,EAAA,IAAI,EAAC;AAAZ,EAJF,CADF,C;;YAmCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAM,EAAA,GAAG,EAAC,OAAV;AAAkB,EAAA,KAAK,EAAEF;AAAzB,WAAoC,qCAApC,YAAoD,oCAApD,CADF,CADF,EAIE;AAAO,EAAA,IAAI,EAAC;AAAZ,SAJF,CADF,C;;YAoCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAM,EAAA,GAAG,EAAC,OAAV;AAAkB,EAAA,KAAK,EAAEA;AAAzB,WAAoC,qCAApC,YAAoD,oCAApD,CADF,CADF,EAIE;AAAO,EAAA,IAAI,EAAC;AAAZ,SAJF,CADF,C;;YAoCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAM,EAAA,GAAG,EAAC,OAAV;AAAkB,EAAA,KAAK,EAAEA;AAAzB,WAAoC,qCAApC,YAAoD,oCAApD,CADF,CADF,EAIE;AAAO,EAAA,IAAI,EAAC;AAAZ,SAJF,CADF,C;;YAoCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GAAwB,qCAAxB,QADF,EAEE;AAAO,EAAA,IAAI,EAAC;AAAZ,aAA8B,oCAA9B,CAFF,EAGE;AAAO,EAAA,IAAI,EAAC;AAAZ,SAHF,CADF,C;;YAuCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GAAwB,qCAAxB,QADF,EAEE;AAAO,EAAA,IAAI,EAAC;AAAZ,aAA8B,oCAA9B,CAFF,EAGE;AAAO,EAAA,IAAI,EAAC;AAAZ,OAHF,CADF,C;;YAsCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAM,EAAA,GAAG,EAAC,OAAV;AAAkB,EAAA,KAAK,EAAEA;AAAzB,GAAgC,qCAAhC,QADF,CADF,EAIE;AAAO,EAAA,IAAI,EAAC;AAAZ,aAA8B,oCAA9B,CAJF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,OALF,CADF,C;;YAwCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAM,EAAA,GAAG,EAAC,OAAV;AAAkB,EAAA,KAAK,EAAEA;AAAzB,GAAgC,qCAAhC,QADF,CADF,EAIE;AAAO,EAAA,IAAI,EAAC;AAAZ,aAA8B,oCAA9B,CAJF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,EALF,CADF,C;;YAyCA,qCACE,wCACE,qCADF,EACY;AAAO,EAAA,IAAI,EAAC;AAAZ,EADZ,EAEE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAM,EAAA,GAAG,EAAC,OAAV;AAAkB,EAAA,KAAK,EAAEA;AAAzB,aAAsC,oCAAtC,CADF,CAFF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,SALF,CADF,C;;aAwCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE;AAAM,EAAA,GAAG,EAAC,OAAV;AAAkB,EAAA,KAAK,EAAEA;AAAzB,GAAgC,qCAAhC,QADF,CADF,EAIE;AAAO,EAAA,IAAI,EAAC;AAAZ,aAA8B,oCAA9B,CAJF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,EALF,CADF,C;;aA2CA,qCACE,wCACE,qCADF,EAEE;AAAO,EAAA,IAAI,EAAC;AAAZ,EAFF,EAGE;AAAO,EAAA,IAAI,EAAC;AAAZ,YAHF,EAIE,oCAJF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,EALF,CADF,C;;aAwCA,qCACE,wCACE,qCADF,EAEE;AAAO,EAAA,IAAI,EAAC;AAAZ,SAFF,EAGE;AAAO,EAAA,IAAI,EAAC;AAAZ,YAHF,EAIE,oCAJF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,EALF,CADF,C;;aAwCA,qCACE,wCACE,qCADF,EAEE;AAAO,EAAA,IAAI,EAAC;AAAZ,SAFF,EAGE;AAAO,EAAA,IAAI,EAAC;AAAZ,YAHF,EAIE,oCAJF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,OALF,CADF,C;;AAneNK,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9BC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,EAAoB,OAApB,EAFc,CAGd;;AACAA,IAAAA,OAAO,CAACC,KAAR,CAAcC,kBAAd,CAAiC,MAAM,CAAE,CAAzC;AACD,GALQ,CAAT;AAOAC,EAAAA,QAAQ,CAAC,MAAM;AACb;AACAH,IAAAA,OAAO,CAACC,KAAR,CAAcG,WAAd;AACD,GAHO,CAAR;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACD,GAFQ,CAAT;AAIAC,EAAAA,IAAI,CAAC,iBAAD,EAAoB,YAAY;AAClC,UAAMZ,KAAK,OAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AASAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AACA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGD,GAjCG,CAAJ;AAmCApB,EAAAA,IAAI,CAAC,kBAAD,EAAqB,YAAY;AACnC,UAAMZ,KAAK,QAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AASAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AACA,UAAM,oBAAQ,MAAMd,OAAO,CAACmB,aAAR,CAAsB,yBAAtB,GAAkDC,WAAlD,KAAkE,WAAhF,CAAN;AACA,UAAM,oBAAQ,MAAM;AAClBL,MAAAA,MAAM,CAACf,OAAO,CAACmB,aAAR,CAAsB,oDAAtB,CAAD,CAAN,CAAoFD,IAApF,CAAyF,IAAzF;AACD,KAFK,CAAN;AAGD,GAlCG,CAAJ;AAoCApB,EAAAA,IAAI,CAAC,sBAAD,EAAyB,YAAY;AACvC,UAAMZ,KAAK,QAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AASAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AACA,UAAM,oBAAQ,MAAMd,OAAO,CAACmB,aAAR,CAAsB,yBAAtB,GAAkDC,WAAlD,KAAkE,WAAhF,CAAN;AACA,UAAM,oBAAQ,MAAM;AAClBL,MAAAA,MAAM,CAACf,OAAO,CAACmB,aAAR,CAAsB,oDAAtB,CAAD,CAAN,CAAoFD,IAApF,CAAyF,IAAzF;AACD,KAFK,CAAN;AAGD,GAlCG,CAAJ;AAoCApB,EAAAA,IAAI,CAAC,kBAAD,EAAqB,YAAY;AACnC,UAAMZ,KAAK,QAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AASAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AACA,UAAM,oBAAQ,MAAMd,OAAO,CAACmB,aAAR,CAAsB,yBAAtB,GAAkDC,WAAlD,KAAkE,WAAhF,CAAN;AACA,UAAM,oBAAQ,MAAM;AAClBL,MAAAA,MAAM,CAACf,OAAO,CAACmB,aAAR,CAAsB,oDAAtB,CAAD,CAAN,CAAoFD,IAApF,CAAyF,IAAzF;AACD,KAFK,CAAN;AAGD,GAlCG,CAAJ;AAoCApB,EAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAY;AAC3C,UAAMZ,KAAK,QAAX;AAUA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,KAApC;AACAH,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,KAApC;AACAH,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,QAApC;AACD,GArCG,CAAJ;AAuCApB,EAAAA,IAAI,CAAC,wBAAD,EAA2B,YAAY;AACzC,UAAMZ,KAAK,QAAX;AAUA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,MAApC;AACAH,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,QAApC;AACD,GApCG,CAAJ;AAsCApB,EAAAA,IAAI,CAAC,gCAAD,EAAmC,YAAY;AACjD,UAAMZ,KAAK,QAAX;AAYA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,MAApC;AACAH,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWF,aAAX,CAAyB,4BAAzB,CAAD,CAAN,CAA+DD,IAA/D,CAAoE,IAApE;AACD,GAtCG,CAAJ;AAwCApB,EAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAY;AAC3C,UAAMZ,KAAK,QAAX;AAYA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,KAApC;AACAH,IAAAA,MAAM,CAACf,OAAO,CAACsB,oBAAR,CAA6B,IAA7B,EAAmCL,MAApC,CAAN,CAAkDC,IAAlD,CAAuD,CAAvD;AACD,GAvCG,CAAJ;AAyCApB,EAAAA,IAAI,CAAC,sBAAD,EAAyB,YAAY;AACvC,UAAMZ,KAAK,QAAX;AAYA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,kBAAzB,GAA8CC,MAA/C,CAAN,CAA6DC,IAA7D,CAAkE,CAAlE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,KAApC;AACAH,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,QAApC;AACD,GAtCG,CAAJ;AAwCApB,EAAAA,IAAI,CAAC,uBAAD,EAA0B,YAAY;AACxC,UAAMZ,KAAK,SAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,iBAAf,CAA1B;;AAEAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,KAApC;AACAH,IAAAA,MAAM,CAACf,OAAO,CAACsB,oBAAR,CAA6B,IAA7B,EAAmCL,MAApC,CAAN,CAAkDC,IAAlD,CAAuD,CAAvD;AACD,GAzCG,CAAJ;AA2CApB,EAAAA,IAAI,CAAC,kBAAD,EAAqB,YAAY;AACnC,UAAMZ,KAAK,SAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AAEAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,kBAAzB,GAA8CC,MAA/C,CAAN,CAA6DC,IAA7D,CAAkE,CAAlE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWE,OAAZ,CAAN,CAA2BL,IAA3B,CAAgC,IAAhC;AACAH,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,QAApC;AACD,GAtCG,CAAJ;AAwCApB,EAAAA,IAAI,CAAC,aAAD,EAAgB,YAAY;AAC9B,UAAMZ,KAAK,SAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AAEAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,EAAEJ,MAAT,CAAN,CAAuBC,IAAvB,CAA4B,CAA5B;AACAH,IAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,GAtCG,CAAJ;AAwCApB,EAAAA,IAAI,CAAC,mBAAD,EAAsB,YAAY;AACpC,UAAMZ,KAAK,SAAX;AAWA,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEd,KAAtB;AAA6B,MAAA,aAAa,EAAE;AACzFe,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE;AADH;AAD8E;AAA5C,MAAb,CAAlC;AAKA,UAAMC,OAAO,GAAGb,IAAI,CAACc,EAAL,EAAhB;;AAEAC,2BAAUC,IAAV,CAAeP,MAAf,EAAuB;AACrBQ,MAAAA,WAAW,EAAE;AACXC,QAAAA,aAAa,EAAE;AACbL,UAAAA;AADa,SADJ;;AAIXM,QAAAA,cAAc,GAAG,CAAE;;AAJR;AADQ,KAAvB;;AAQAJ,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,WAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,YAAf,CAA1B;;AACAM,2BAAUK,OAAV,CAAkBX,MAAlB,EAA0B,iCAAe,iBAAf,CAA1B;;AAEAM,2BAAUM,KAAV,CAAgBZ,MAAhB,EAAwBlB,UAAU,CAAC+B,QAAnC,EAA6CT,OAAO,CAACU,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAA7C;;AAEA,UAAM,oBAAQ,MAAM;AAClBC,MAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,KAFK,CAAN;AAGA,UAAMG,MAAM,GAAGrB,OAAO,CAACgB,gBAAR,CAAyB,kCAAzB,CAAf;AACAD,IAAAA,MAAM,CAACM,MAAM,EAAEJ,MAAT,CAAN,CAAuBC,IAAvB,CAA4B,CAA5B;AACAH,IAAAA,MAAM,CAACM,MAAM,CAAC,CAAD,CAAN,EAAWD,WAAZ,CAAN,CAA+BF,IAA/B,CAAoC,KAApC;AACAH,IAAAA,MAAM,CAACf,OAAO,CAACgB,gBAAR,CAAyB,yBAAzB,GAAqDC,MAAtD,CAAN,CAAoEC,IAApE,CAAyE,CAAzE;AACD,GAzCG,CAAJ;AA0CD,CA3gBO,CAAR","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { cleanup, waitFor, wait } from '@testing-library/react';\nimport { renderEditor, getHotkeyEvent, jsx, fireEvent } from '@ali/4ever-dev-test';\nimport { Value, constants, Controller } from '@ali/4ever-cangjie';\nimport { last } from 'lodash-es';\nimport { getHotKeyEvent } from '../helper';\nimport Editor from '../editor';\n\nconst { MIME_TYPES } = constants;\n\nconst marks = [{\n  type: 'sz',\n  data: {\n    value: 20,\n    szUnit: 'pt',\n  },\n}, {\n  type: 'bold',\n  data: {},\n}];\n\ndescribe('Bi/heading/ui', () => {\n  beforeAll(() => {\n    // 防止被 componentDidCatch catch 的 error 被控制台输出\n    jest.spyOn(console, 'error');\n    // @ts-ignore\n    console.error.mockImplementation(() => {});\n  });\n\n  afterAll(() => {\n    // @ts-ignore\n    console.error.mockRestore();\n  });\n\n  afterEach(() => {\n    cleanup();\n  });\n\n  test('复制部分标题到空段落依然是标题', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"heading-1\">\n            get<anchor />Copyed<focus />\n          </block>\n          <block type=\"paragraph\"></block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"heading-1\"]')?.length).toBe(2);\n    });\n  });\n\n  test('复制部分标题到段落中匹配段落格式', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"heading-1\">\n            <text key=\"textA\" marks={marks}>pppp<anchor />Copyed<focus /></text>\n          </block>\n          <block type=\"paragraph\">ppp</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n    await waitFor(() => content.querySelector('[data-type=\"paragraph\"]')?.textContent === 'pppCopyed');\n    await waitFor(() => {\n      expect(content.querySelector('[data-type=\"paragraph\"] [data-cangjie-mark=\"true\"]')).toBe(null);\n    });\n  });\n\n  test('复制部分标题到其它级别标题中匹配目标格式', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"heading-1\">\n            <text key=\"textA\" marks={marks}>pppp<anchor />Copyed<focus /></text>\n          </block>\n          <block type=\"heading-4\">ppp</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n    await waitFor(() => content.querySelector('[data-type=\"heading-4\"]')?.textContent === 'pppCopyed');\n    await waitFor(() => {\n      expect(content.querySelector('[data-type=\"heading-4\"] [data-cangjie-mark=\"true\"]')).toBe(null);\n    });\n  });\n\n  test('复制部分段落到标题中匹配目标格式', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"textA\" marks={marks}>pppp<anchor />Copyed<focus /></text>\n          </block>\n          <block type=\"heading-4\">ppp</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n    await waitFor(() => content.querySelector('[data-type=\"heading-4\"]')?.textContent === 'pppCopyed');\n    await waitFor(() => {\n      expect(content.querySelector('[data-type=\"heading-4\"] [data-cangjie-mark=\"true\"]')).toBe(null);\n    });\n  });\n\n  test('粘贴多个段落（第一段为标题）到段落中先换行再粘贴', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"heading-1\"><anchor />111</block>\n          <block type=\"paragraph\">Copyed<focus /></block>\n          <block type=\"paragraph\">ppp</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"heading-1\"]')?.length).toBe(2);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks[2]?.textContent).toBe('ppp');\n    expect(blocks[3]?.textContent).toBe('111');\n    expect(blocks[4]?.textContent).toBe('Copyed');\n  });\n\n  test('粘贴多个段落（第一段为标题）到同级别中不换行', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"heading-1\"><anchor />111</block>\n          <block type=\"paragraph\">Copyed<focus /></block>\n          <block type=\"heading-1\">p</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"paragraph\"]')?.length).toBe(2);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks[2]?.textContent).toBe('p111');\n    expect(blocks[3]?.textContent).toBe('Copyed');\n  });\n\n  test('粘贴多个段落（第一段为普通段落）到标题中不换行并匹配标题样式', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"textA\" marks={marks}><anchor />111</text>\n          </block>\n          <block type=\"paragraph\">Copyed<focus /></block>\n          <block type=\"heading-1\">p</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"paragraph\"]')?.length).toBe(3);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks[2]?.textContent).toBe('p111');\n    expect(blocks[2]?.querySelector('[data-cangjie-mark=\"true\"]')).toBe(null);\n  });\n\n  test('粘贴多个段落到分割线中，保留分割线并另起一行粘贴', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"textA\" marks={marks}><anchor />111</text>\n          </block>\n          <block type=\"paragraph\">Copyed<focus /></block>\n          <block type=\"hr\"></block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"paragraph\"]')?.length).toBe(4);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks[2]?.textContent).toBe('111');\n    expect(content.getElementsByTagName('hr').length).toBe(1);\n  });\n\n  test('复制内容首个段落是void则另起一行粘贴', async () => {\n    const value = ((\n      <value>\n        <document>\n          <anchor /><block type=\"hr\"></block>\n          <block type=\"paragraph\">\n            <text key=\"textA\" marks={marks}>Copyed<focus /></text>\n          </block>\n          <block type=\"paragraph\">111</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"hr\"]')?.length).toBe(2);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks[1]?.textContent).toBe('111');\n    expect(blocks[2]?.textContent).toBe('Copyed');\n  });\n\n  test('粘贴多个段落，选中分割线中粘贴，移除分割线', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"textA\" marks={marks}><anchor />111</text>\n          </block>\n          <block type=\"paragraph\">Copyed<focus /></block>\n          <block type=\"hr\"></block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('shift+arrowleft'));\n\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"paragraph\"]')?.length).toBe(4);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks[2]?.textContent).toBe('111');\n    expect(content.getElementsByTagName('hr').length).toBe(0);\n  });\n\n  test('粘贴到空标题行，void元素保留', async () => {\n    const value = ((\n      <value>\n        <document>\n          <anchor />\n          <block type=\"hr\"></block>\n          <block type=\"paragraph\">Copyed</block>\n          <focus />\n          <block type=\"heading-1\"></block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"hr\"]')?.length).toBe(2);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks[1]?.tagName).toBe('H1');\n    expect(blocks[2]?.textContent).toBe('Copyed');\n  });\n\n  test('粘贴到空行，无多余空行', async () => {\n    const value = ((\n      <value>\n        <document>\n          <anchor />\n          <block type=\"heading-1\">111</block>\n          <block type=\"paragraph\">Copyed</block>\n          <focus />\n          <block type=\"paragraph\"></block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"heading-1\"]')?.length).toBe(2);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks?.length).toBe(4);\n    expect(content.querySelectorAll('[data-type=\"paragraph\"]')?.length).toBe(2);\n  });\n\n  test('粘贴时选中多个完整段落，无多余空行', async () => {\n    const value = ((\n      <value>\n        <document>\n          <anchor />\n          <block type=\"heading-1\">111</block>\n          <block type=\"paragraph\">Copyed</block>\n          <focus />\n          <block type=\"paragraph\">2</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} pluginConfigs={{\n      clipboard: {\n        pastePanel: true,\n      }\n    }} />);\n    const setData = jest.fn();\n\n    fireEvent.copy(editor, {\n      nativeEvent: {\n        clipboardData: {\n          setData,\n        },\n        preventDefault() {},\n      },\n    });\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n    fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n    fireEvent.keyDown(editor, getHotkeyEvent('shift+arrowleft'));\n\n    fireEvent.paste(editor, MIME_TYPES.FRAGMENT, setData.mock.calls[0][1]);\n\n    await waitFor(() => {\n      expect(content.querySelectorAll('[data-type=\"heading-1\"]')?.length).toBe(2);\n    });\n    const blocks = content.querySelectorAll('[data-cangjie-leaf-block=\"true\"]');\n    expect(blocks?.length).toBe(4);\n    expect(blocks[2]?.textContent).toBe('111');\n    expect(content.querySelectorAll('[data-type=\"paragraph\"]')?.length).toBe(2);\n  });\n});\n"],"file":"ui.ccp.test.js"}