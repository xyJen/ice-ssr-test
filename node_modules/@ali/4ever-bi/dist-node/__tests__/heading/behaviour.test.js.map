{"version":3,"sources":["../../../../src/__tests__/heading/behaviour.test.tsx"],"names":["plugins","array","szMarks","type","data","value","szUnit","describe","test","controller","Controller","create","heading","query","headingPlugin","queries","getHeading","expect","toBe","colsWidth","tableSelection","key","startRowIndex","startColIndex","endRowIndex","endColIndex","table","document","getNode","command","run","actions","setHeading","marks","getFirstText","getMarks","find","m","toEqual","spacing","after","before","line","boldPlugin","toggleMark","KeyboardEvent","block","nodes","forEach","text","selection","length","Commands","select","Selection","anchor","EdgePoint","edge","focus","TextPoint","offset"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { wait } from '@testing-library/react';\nimport { Controller, Value, Block, Commands, Selection, TextPoint, EdgePoint, CangjieInputEvent, Text } from '@ali/4ever-cangjie';\nimport { jsx, getHotkeyEvent } from '@ali/4ever-dev-test';\nimport createBiPlugins from '../../createBiPlugins';\nimport headingPlugin from '../../plugins/heading';\nimport boldPlugin from '../../plugins/bold';\n\n\nconst plugins = createBiPlugins().array;\n\nconst szMarks = [{\n  type: 'sz',\n  data: {\n    value: 16,\n    szUnit: 'pt',\n  },\n}];\n\ndescribe('Bi/heading/behaviour', () => {\n  describe('getHeading 单测', () => {\n    test('默认正文', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              getHeading <cursor />测试\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const heading = controller.query(headingPlugin.queries.getHeading);\n      expect(heading).toBe('paragraph');\n    });\n\n    test('选中标题', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\">\n              <anchor />\n              getHeading\n            </block>\n            <block type=\"heading-1\">\n              测试<focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const heading = controller.query(headingPlugin.queries.getHeading);\n      expect(heading).toBe('heading-1');\n    });\n\n    test('段落选区包含标题和段落', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\">\n              <anchor />\n              getHeading\n            </block>\n            <block type=\"paragraph\">\n              测试<focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const heading = controller.query(headingPlugin.queries.getHeading);\n      expect(heading).toBe('');\n    });\n\n    test('段落选区包含多个标题', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\">\n              <anchor />\n              getHeading\n            </block>\n            <block type=\"heading-2\">\n              测试<focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const heading = controller.query(headingPlugin.queries.getHeading);\n      expect(heading).toBe('');\n    });\n\n    test('表格选区', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <block type=\"heading-1\">\n                    A\n                  </block>\n                </block>\n                <block type=\"table-cell\">\n                  <block type=\"paragraph\">\n                    B\n                  </block>\n                </block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const tableSelection = {\n        key: 'table-key',\n        startRowIndex: 0,\n        startColIndex: 0,\n        endRowIndex: 0,\n        endColIndex: 1,\n      };\n\n      const table = controller.value.document.getNode('table-key');\n      controller.command('selectTableSelection', table as Block, tableSelection);\n      await wait();\n\n      const heading = controller.query(headingPlugin.queries.getHeading);\n      expect(heading).toBe('');\n    });\n\n    test('设置标题包含字号和字重数据', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              paragraph<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n      const heading = controller.value.document.getNode('a');\n      const marks = heading?.getFirstText()?.getMarks();\n\n      expect(marks?.find((m) => m.type === 'sz')?.data.value).toBe(20);\n      expect(!!marks?.find((m) => m.type === 'bold')).toBe(true);\n    });\n\n    test('标题已有字号在重新设置为标题时清除', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-4\" key=\"a\">\n              <text key=\"text\" marks={szMarks}>paragraph<cursor /></text>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n      const heading = controller.value.document.getNode('a');\n      const marks = heading?.getFirstText()?.getMarks();\n\n      expect(marks?.find((m) => m.type === 'sz')?.data.value).toBe(20);\n    });\n\n    test('设置标题包含 spacing 数据', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              paragraph<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n      const heading = controller.value.document.getNode('a');\n\n      expect(heading.data).toEqual({\n        spacing: {\n          after: 12,\n          before: 26.666666666666668,\n          line: 0.8529411764705882,\n        },\n      });\n    });\n\n    test('设置为正文可清除文本、段落格式', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              paragraph<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n      controller.run('onAction', headingPlugin.actions.setHeading('paragraph'));\n      const heading = controller.value.document.getNode('a');\n      const marks = heading.getFirstText().getMarks();\n\n      expect(marks).toEqual([]);\n      expect(heading.data.spacing).toEqual({});\n    });\n\n    test('已有默认标题可取消加粗', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              <anchor />heading-1<focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', boldPlugin.actions.toggleMark('bold'));\n      const heading = controller.value.document.getNode('a');\n      const marks = heading.getFirstText().getMarks();\n\n      expect(marks.find((m) => m.type === 'bold').data.value).toBe(false);\n    });\n\n    test('新生成标题可取消加粗', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              <anchor />heading-1<focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      // 先设置标题后取消加粗\n      controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n      controller.run('onAction', boldPlugin.actions.toggleMark('bold'));\n      const heading = controller.value.document.getNode('a');\n      const marks = heading.getFirstText().getMarks();\n\n      expect(marks.find((m) => m.type === 'bold').data.value).toBe(false);\n    });\n\n    test('默认标题和加粗正文可获取公共的 bold 属性', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              <anchor />heading\n            </block>\n            <block type=\"paragraph\" key=\"b\">\n              <m type=\"bold\">paragraph</m><focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      expect(controller.query('isBold')).toBe(true);\n    });\n\n    test('段落前回车生成新普通段落', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              <cursor />heading-1\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      const block = controller.value.document.nodes[0];\n      expect(block.type).toBe('heading-1');\n    });\n\n    test('段落中回车生成两个标题', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              head\n              <inline type=\"tag\" /><cursor />ing-1\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      controller.value.document.nodes.forEach((block) => {\n        expect(block.type).toBe('heading-1');\n      });\n    });\n\n    test('将段落中回车生成的第二个标题设置为正文后输入文字不包含样式', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              head<cursor />ing-1\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      controller.run('onAction', headingPlugin.actions.setHeading('paragraph'));\n      controller.run(\n        'onCangjieInput',\n        CangjieInputEvent({\n          type: 'insertText',\n          data: 'world',\n        })\n      );\n      const block = controller.value.document.nodes[1];\n      const text = block.nodes[0] as Text;\n      expect(text.marks).toEqual([]);\n    });\n\n    test('段落尾回车生成新段落', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              heading-1\n              <inline type=\"tag\" /><cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      const block = controller.value.document.nodes[1];\n      expect(block.type).toBe('paragraph');\n    });\n\n    test('使用 markdown 语法生成标题回车后会清除选区临时样式', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              ##<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('space')),\n      );\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      const block = controller.value.document.nodes[1];\n      expect(block.type).toBe('paragraph');\n      expect(controller.value.selection.marks).toBe(null);\n    });\n\n    test('inline 元素中回车不生成新段落', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              head\n              <inline type=\"tag\">\n                <cursor />\n              </inline>ing-1\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      expect(controller.value.document.nodes.length).toBe(1);\n    });\n\n    test('空标题回车生成新段落', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              <cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      expect(controller.value.document.nodes[0].type).toBe('heading-1');\n      expect(controller.value.document.nodes[1].type).toBe('paragraph');\n    });\n\n    test('部分选中标题回车生成两个标题', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              he<anchor />ading-<focus />1\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      controller.value.document.nodes.forEach((block) => {\n        expect(block.type).toBe('heading-1');\n      });\n    });\n\n    test('选中标题结束部分回车生成新段落', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"heading-1\" key=\"a\">\n              he<anchor />ading-1<focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      expect(controller.value.document.nodes[0].type).toBe('heading-1');\n      expect(controller.value.document.nodes[1].type).toBe('paragraph');\n    });\n\n    test('表格边缘选区', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <block type=\"paragraph\" key=\"a\">\n                    A\n                  </block>\n                </block>\n                <block type=\"table-cell\">\n                  <block type=\"paragraph\" key=\"b\">\n                    B\n                  </block>\n                </block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.command(Commands.select, Selection.create({\n        anchor: EdgePoint.create({\n          key: 'table-key',\n          edge: 'before',\n        }),\n        focus: TextPoint.create({\n          key: 'b',\n          offset: 1,\n        }),\n      }));\n\n      controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n      expect(controller.value.document.getNode('a').type).toBe('heading-1');\n      expect(controller.value.document.getNode('b').type).toBe('heading-1');\n    });\n  });\n});\n"],"file":"behaviour.test.js"}