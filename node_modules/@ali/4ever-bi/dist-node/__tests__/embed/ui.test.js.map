{"version":3,"sources":["../../../../src/__tests__/embed/ui.test.tsx"],"names":["createBiPlugins","embed","Editor","props","defaultValue","codeConfig","value","setValue","React","useState","plugins","useMemo","config","locale","insertTip","upload","quickInsertTitle","buttonTitle","cardView","previewView","copy","delete","download","enlarge","oversizeError","networkError","previewError","reTryPreview","previewing","code","handleChange","useCallback","changed","toolButtons","name","describe","it","Mo","jsonMLToValue","src","queryByText","expect","not","toBeInTheDocument","skip","viewType","previewSize","height","queryByTestId","preview","style","toBe","fireEvent","click","card"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport * as React from 'react';\nimport { Value } from '@ali/4ever-cangjie';\nimport {\n  fireEvent,\n  renderEditor,\n} from '@ali/4ever-dev-test';\nimport '@testing-library/jest-dom/extend-expect';\nimport {\n  waitForElement,\n  waitForElementToBeRemoved,\n} from '@testing-library/react';\nimport Mo from '../serializer';\nimport { createCustomizedBiPlugins, Toolbar } from '../..';\nimport Provider from '../../provider';\nimport embed from '../../plugins/embed';\nimport Content from '../../content';\n\ninterface EditorProps {\n  codeConfig?: {};\n  defaultValue: Value;\n}\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  embed,\n});\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { defaultValue, codeConfig = {} } = props;\n  const [value, setValue] = React.useState(defaultValue);\n  const plugins = React.useMemo(() => {\n    const config = {\n      locale: {\n        insertTip: '支持各种办公文件、设计文件、音视频媒体、压缩包等',\n        upload: '本地上传',\n        quickInsertTitle: '本地文件',\n        buttonTitle: '本地文件',\n        cardView: '卡片视图',\n        previewView: '预览视图',\n        copy: '复制',\n        delete: '删除',\n        download: '下载',\n        enlarge: '放大',\n        oversizeError: '上传失败，文件不能大于 251MB，请重试',\n        networkError: '网络错误，请重试',\n        previewError: '预览解析失败，',\n        reTryPreview: '请点击重试',\n        previewing: '正在加载预览',\n      },\n      ...codeConfig,\n    };\n\n    return createBiPlugins({\n      code: config,\n      embed: config,\n    });\n  }, [codeConfig]);\n\n  const handleChange = React.useCallback((changed) => {\n    setValue(changed.value);\n  }, []);\n\n  return (\n    <Provider\n      autoFocus\n      value={value}\n      onChange={handleChange}\n      plugins={plugins}\n    >\n      <Toolbar\n        autoFolding={false}\n        singleLayout={[{ toolButtons: [{ name: 'embed' }] }]}\n      />\n      <Content />\n    </Provider>\n  );\n};\n\ndescribe('Bi/embed/ui', () => {\n  it('src 存在时，渲染为上传成功的状态', async () => {\n    const value = Mo.jsonMLToValue([\n      'root',\n      ['embed', {\n        name: 'test.docx',\n        src: 'test.docx',\n      }],\n    ]);\n    const { queryByText } = await renderEditor(\n      <Editor defaultValue={value} />,\n    );\n    expect(queryByText(/上传失败/)).not.toBeInTheDocument();\n  });\n\n  it.skip('src 不存在时，渲染为上传失败的状态', async () => {\n    const value = Mo.jsonMLToValue([\n      'root',\n      ['embed', {\n        name: 'test.docx',\n        src: null,\n      }],\n    ]);\n    const { queryByText } = await renderEditor(\n      <Editor defaultValue={value} />,\n    );\n    await waitForElement(() => queryByText(/请重试/));\n  });\n\n  it('预览状态进入后，会打开预览视图，并设置高度', async () => {\n    const value = Mo.jsonMLToValue([\n      'root',\n      ['embed', {\n        name: 'test.docx',\n        src: 'test.docx',\n        viewType: 'preview',\n        previewSize: {\n          height: 500,\n        },\n      }],\n    ]);\n    const { queryByTestId } = await renderEditor(\n      <Editor defaultValue={value} />,\n    );\n    const preview = await waitForElement(() => queryByTestId('embed-preview'));\n    expect(preview.style.height).toBe('500px');\n  });\n\n  it('选中预览视图，可以打开工具栏', async () => {\n    const value = Mo.jsonMLToValue([\n      'root',\n      ['embed', {\n        name: 'test.docx',\n        src: 'test.docx',\n        viewType: 'preview',\n        previewSize: {\n          height: 500,\n        },\n      }],\n    ]);\n    const { queryByTestId } = await renderEditor(\n      <Editor defaultValue={value} />,\n    );\n    const preview = await waitForElement(() => queryByTestId('embed-preview'));\n    fireEvent.click(preview);\n    await waitForElement(() => queryByTestId('embed-toolbar-previewView'));\n  });\n\n  // it('工具栏 - 视图切换状态', async () => {\n  //   const value = Mo.jsonMLToValue([\n  //     'root',\n  //     ['embed', {\n  //       name: 'test.docx',\n  //       src: 'test.docx',\n  //     }],\n  //   ]);\n  //   const { queryByTestId } = render(<Editor defaultValue={value} />);\n  //   const card = await waitForElement(() =>\n  //     queryByTestId('embed-card'),\n  //   );\n  //   fireEvent.click(card);\n  //   const previewBtn = await waitForElement(() => queryByTestId('embed-toolbar-preview'));\n  //   fireEvent.mouseDown(previewBtn);\n  //   await waitForElement(() => queryByTestId('embed-preview'));\n  // });\n\n  it('工具栏 - 删除', async () => {\n    const value = Mo.jsonMLToValue([\n      'root',\n      ['embed', {\n        name: 'test.docx',\n        src: 'test.docx',\n      }],\n    ]);\n    const { queryByTestId } = await renderEditor(\n      <Editor defaultValue={value} />,\n    );\n    const card = await waitForElement(() => queryByTestId('embed-card'));\n    fireEvent.click(card);\n    await waitForElement(() => queryByTestId('embed-toolbar-delete'));\n    fireEvent.click(queryByTestId('embed-toolbar-delete'));\n    await waitForElementToBeRemoved(() => queryByTestId('embed-card'));\n  });\n});\n"],"file":"ui.test.js"}