"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everDevTest = require("@ali/4ever-dev-test");

var _v = _interopRequireDefault(require("uuid/v4"));

var _everCangjie = require("@ali/4ever-cangjie");

var _ = require("../..");

var _zh_CN = _interopRequireDefault(require("../../locales/zh_CN"));

var _embed = _interopRequireDefault(require("../../plugins/embed"));

var _everFactory = require("@ali/4ever-factory");

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const plugins = (0, _.createBiPlugins)(_zh_CN.default).array;

var _ref = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("cursor", null))));

var _ref2 = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("cursor", null))));

var _ref3 = (0, _everDevTest.jsx)("cursor", null);

var _ref4 = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("cursor", null))));

var _ref5 = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("cursor", null))));

describe('Bi/embed/behaviour', () => {
  it('菜单栏/工具栏 插入文件节点', () => {
    const id = (0, _v.default)();
    const value = _ref;

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    const params = {
      id,
      name: 'test.docx',
      type: 'word',
      size: 33333
    };
    (0, _everFactory.insertFile)(controller, params);
    const {
      document
    } = controller.value;
    expect(document.getBlocksByType('embed').length).toBe(1);
    const embed = document.getBlocksByType('embed')[0];
    expect(embed.data.name).toBe('test.docx');
  });
  it('更新文件节点', () => {
    const id = (0, _v.default)();
    const value = _ref2;

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    const params = {
      id,
      name: 'test.docx',
      type: 'word',
      size: 33333
    };
    (0, _everFactory.insertFile)(controller, params);
    const embedNode = controller.value.document.nodes.find(node => {
      if (node.data.id === id) {
        return node;
      }

      return null;
    });
    const newParams = {
      id,
      src: 'https://test.docx',
      viewType: 'preview'
    };

    if (embedNode) {
      controller.run('onAction', _embed.default.actions.updateFile(embedNode, newParams));
    }

    const {
      document
    } = controller.value;
    const embed = document.getBlocksByType('embed')[0];
    expect(embed.data).toEqual({
      id,
      name: 'test.docx',
      size: 33333,
      src: 'https://test.docx',
      viewType: 'preview',
      type: 'word',
      mimeType: undefined,
      previewSize: undefined,
      errorType: undefined
    });
  });
  it('删除文件节点', () => {
    const id = (0, _v.default)();
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "embed",
      data: {
        id,
        name: 'test.docx',
        size: 1111
      }
    }, _ref3)));
    const output = _ref4;

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    controller.run('onKeyDown', new KeyboardEvent('keydown', (0, _everDevTest.getHotkeyEvent)('backspace')));
    expect(controller.value.toJSON()).toEqual(output.toJSON());
  });
  it('拖拽插入文件节点', () => {
    const value = _ref5;

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    const newFile = new File(['test.docx'], 'test.docx', {
      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
    });

    const onUploadFile = () => {
      return new Promise(resolve => {
        resolve({
          url: 'https://abc.docx'
        });
      });
    };

    (0, _everFactory.uploadFile)(controller, newFile, onUploadFile, true, {});
    setTimeout(() => {
      const {
        document
      } = controller.value;
      const embed = document.getBlocksByType('embed')[0];
      expect(embed.data.viewType).toEqual('preview');
    }, 1000);
  });
});
//# sourceMappingURL=behaviour.test.js.map