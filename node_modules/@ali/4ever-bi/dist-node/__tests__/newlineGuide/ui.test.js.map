{"version":3,"sources":["../../../../src/__tests__/newlineGuide/ui.test.tsx"],"names":["menuTestId","holderTextTestId","insertTextTestId","selectTextTestId","createBiPlugins","newlineGuide","list","indent","leftToolbar","valueForNewlineGuideTest","Editor","props","defaultValue","placeholder","value","setValue","React","useState","plugins","enabled","renderGuideMenu","menu","key","handleChange","useCallback","changed","toolButtons","name","triggerNewlineGuideByInput","val","editor","queryByTestId","rest","fireEvent","focus","keyUp","target","triggerNewlineGuideByClick","insertText","mouseDown","describe","beforeAll","jest","spyOn","console","error","mockImplementation","afterAll","mockRestore","afterEach","test","change","keyDown","cangjieInput","data","queryByText","heading","click","expect","not","toBeInTheDocument"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport * as React from 'react';\nimport { Value } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\nimport {\n  cleanup,\n  waitFor,\n  waitForElementToBeRemoved,\n} from '@testing-library/react';\nimport {\n  renderEditor,\n  fireEvent,\n  jsx,\n  getHotkeyEvent,\n} from '@ali/4ever-dev-test';\nimport newlineGuide from '../../plugins/newlineGuide';\nimport list from '../../plugins/list';\nimport indent from '../../plugins/indent';\nimport leftToolbar from '../../plugins/leftToolbar';\nimport { createCustomizedBiPlugins, Toolbar } from '../..';\nimport Provider from '../../provider';\nimport Content from '../../content';\n\ninterface EditorProps {\n  defaultValue: Value;\n  placeholder?: string;\n}\n\nconst menuTestId = 'newline-guide-menu';\nconst holderTextTestId = 'newline-guide-holderText';\nconst insertTextTestId = 'newline-guide-insertText';\nconst selectTextTestId = 'newline-guide-selectText';\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  newlineGuide,\n  list,\n  indent,\n  leftToolbar,\n});\n\nconst valueForNewlineGuideTest = (\n  <value>\n    <document>\n      <block type=\"paragraph\">first paragraph</block>\n      <block type=\"paragraph\"><cursor /></block>\n    </document>\n  </value>\n);\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { defaultValue, placeholder } = props;\n  const [value, setValue] = React.useState(defaultValue);\n  const plugins = createBiPlugins({\n    newlineGuide: {\n      enabled: true,\n      renderGuideMenu: () => {\n        return (<p>guide menu</p>);\n      },\n    },\n    leftToolbar: {\n      menu: [\n        {\n          key: 'newlineGuide',\n        },\n      ],\n    },\n  });\n\n  const handleChange = React.useCallback((changed) => {\n    setValue(changed.value);\n  }, []);\n\n  return (\n    <Provider\n      plugins={plugins}\n      value={value}\n      onChange={handleChange}\n    >\n      <Toolbar\n        autoFolding={false}\n        singleLayout={[{ toolButtons: [{ name: 'hr' }] }]}\n      />\n      <Content tabIndex={0} placeholder={placeholder} />\n    </Provider>\n  );\n};\n\nasync function triggerNewlineGuideByInput(val?: Value) {\n  const value = val || valueForNewlineGuideTest as unknown as Value;\n  const { editor, queryByTestId, ...rest } = await renderEditor(\n    <Editor defaultValue={value} />,\n  );\n\n  fireEvent.focus(editor);\n\n  // 空行显示引导文案\n  await waitFor(() => queryByTestId(holderTextTestId));\n\n  fireEvent.keyUp(editor, { key: '/', target: { value: '/' } });\n\n  // 输入 + 展示插入菜单\n  await waitFor(() => queryByTestId(menuTestId));\n\n  return {\n    editor,\n    queryByTestId,\n    ...rest,\n  };\n}\n\nasync function triggerNewlineGuideByClick(val?: Value) {\n  const value = val || valueForNewlineGuideTest as unknown as Value;\n  const { editor, queryByTestId, ...rest } = await renderEditor(\n    <Editor defaultValue={value} />,\n  );\n\n  fireEvent.focus(editor);\n\n  // 空行显示引导文案\n  await waitFor(() => queryByTestId(holderTextTestId));\n\n  const insertText = await waitFor(() => queryByTestId(insertTextTestId));\n  fireEvent.mouseDown(insertText);\n\n  // 展示菜单\n  await waitFor(() => queryByTestId(menuTestId));\n\n  // 展示选择占位文案\n  await waitFor(() => queryByTestId(selectTextTestId));\n\n  return {\n    editor,\n    queryByTestId,\n    ...rest,\n  };\n}\n\ndescribe('Bi/newlineGuide/ui', () => {\n  beforeAll(() => {\n    // 防止被 componentDidCatch catch 的 error 被控制台输出\n    jest.spyOn(console, 'error');\n    // @ts-ignore\n    console.error.mockImplementation(() => { });\n  });\n\n  afterAll(() => {\n    // @ts-ignore\n    console.error.mockRestore();\n  });\n\n  afterEach(() => {\n    cleanup();\n  });\n\n  describe('换行引导插件', () => {\n    test('正确展示引导文案和插入菜单', async () => {\n      await triggerNewlineGuideByInput();\n    });\n\n    test('继续输入 菜单消失', async () => {\n      const { editor, queryByTestId } = await triggerNewlineGuideByInput();\n      fireEvent.change(editor, {\n        target: {\n          value: 'AAA',\n        },\n      });\n      await waitForElementToBeRemoved(() => queryByTestId(menuTestId));\n    });\n\n    test('删除 + 菜单消失', async () => {\n      const { editor, queryByTestId } = await triggerNewlineGuideByInput();\n      fireEvent.keyDown(editor, { key: 'backspace' });\n      await waitForElementToBeRemoved(() => queryByTestId(menuTestId));\n    });\n\n    test('undo 菜单消失', async () => {\n      const { editor, queryByTestId } = await triggerNewlineGuideByInput();\n      fireEvent.keyUp(editor, getHotkeyEvent('ctrl+z'));\n      await waitForElementToBeRemoved(() => queryByTestId(menuTestId));\n    });\n\n    test('esc 菜单消失', async () => {\n      const { editor, queryByTestId } = await triggerNewlineGuideByInput();\n      fireEvent.keyUp(editor, getHotkeyEvent('esc'));\n      await waitForElementToBeRemoved(() => queryByTestId(menuTestId));\n    });\n\n    test('增加缩进时 菜单消失', async () => {\n      const { editor, queryByTestId } = await triggerNewlineGuideByInput();\n      fireEvent.cangjieInput(editor, { data: '  ' });\n      await waitForElementToBeRemoved(() => queryByTestId(menuTestId));\n    });\n\n    test('有选区时 菜单消失', async () => {\n      const { editor, queryByTestId } = await triggerNewlineGuideByInput();\n      fireEvent.keyDown(editor, getHotkeyEvent('shift+arrowleft'));\n      await waitForElementToBeRemoved(() => queryByTestId(menuTestId));\n    });\n\n    test('展示菜单后 方向键禁止', async () => {\n      const { editor, queryByTestId } = await triggerNewlineGuideByInput();\n\n      fireEvent.keyDown(editor, getHotkeyEvent('arrowup'));\n      fireEvent.keyDown(editor, getHotkeyEvent('arrowleft'));\n      fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n      fireEvent.keyDown(editor, getHotkeyEvent('arrowright'));\n\n      await waitFor(() => queryByTestId(menuTestId));\n    });\n\n    test('点击其它地方 菜单消失', async () => {\n      const val = ((\n        <value>\n          <document>\n            <block type=\"heading-1\">标题</block>\n            <block type=\"paragraph\"><cursor /></block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByTestId, queryByText } = await triggerNewlineGuideByInput(val);\n\n      const heading = await waitFor(() => queryByText('标题'));\n      fireEvent.click(heading);\n\n      expect(queryByTestId(holderTextTestId)).not.toBeInTheDocument();\n    });\n\n    test('空文档正确展示引导文案和插入菜单', async () => {\n      const val = ((\n        <value>\n          <document>\n            <block type=\"paragraph\"><cursor /></block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      await triggerNewlineGuideByInput(val);\n    });\n\n    test('有占位内容的空文档不展示引导文案', async () => {\n      const val = ((\n        <value>\n          <document>\n            <block type=\"paragraph\"><cursor /></block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={val} placeholder=\"请输入...\" />,\n      );\n\n      expect(queryByTestId(holderTextTestId)).not.toBeInTheDocument();\n    });\n\n    test('删除内容后正确展示引导文案', async () => {\n      const val = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">A<cursor /></block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { editor, queryByTestId } = await renderEditor(\n        <Editor defaultValue={val} />,\n      );\n      fireEvent.keyDown(editor, getHotkeyEvent('backspace'));\n      await waitFor(() => queryByTestId(holderTextTestId));\n    });\n\n    test('移动到新行展示引导文案', async () => {\n      const val = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">A<cursor /></block>\n            <block type=\"paragraph\" />\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { editor, queryByTestId } = await renderEditor(\n        <Editor defaultValue={val} />,\n      );\n\n      expect(queryByTestId(holderTextTestId)).not.toBeInTheDocument();\n\n      fireEvent.keyDown(editor, getHotkeyEvent('arrowdown'));\n      await waitFor(() => queryByTestId(holderTextTestId));\n    });\n\n    test('表格新行输入+展示菜单', async () => {\n      const val = ((\n        <value>\n          <document>\n            <block type=\"table\">\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <block type=\"paragraph\">\n                    <cursor />\n                  </block>\n                </block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { editor, queryByTestId } = await renderEditor(\n        <Editor defaultValue={val} />,\n      );\n\n      fireEvent.cangjieInput(editor, { data: '+' });\n      await waitFor(() => queryByTestId(holderTextTestId));\n    });\n  });\n});\n"],"file":"ui.test.js"}