{"version":3,"sources":["../../../../src/__tests__/newlineGuide/behaviour.test.tsx"],"names":["valueForNewlineGuideTest","valueForNewlineGuideWithText","plugins","newlineGuide","enabled","array","describe","test","value","controller","Controller","create","document","node","getNode","NewlineGuideData","set","key","triggered","point","getFirstNode","offset","showMenu","run","newLineGuidePlugin","actions","removeNewlineTriggerText","expect","text","toBe"],"mappings":";;;;AAGA;;AACA;;AAEA;;AAGA;;AACA;;AACA;;AAXA;;AACA;;AACA;AAWA,MAAMA,wBAAwB,GAC5B,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,EADF,EAEE;AAAO,EAAA,IAAI,EAAC,WAAZ;AAAwB,EAAA,GAAG,EAAC;AAA5B,QAAiD,qCAAjD,CAFF,CADF,CADF;AASA,MAAMC,4BAA4B,GAChC,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,EADF,EAEE;AAAO,EAAA,IAAI,EAAC,WAAZ;AAAwB,EAAA,GAAG,EAAC;AAA5B,YAAqD,qCAArD,CAFF,CADF,CADF;AASA,MAAMC,OAAO,GAAG,uBAAgB;AAC9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE;AADG;AADgB,CAAhB,EAIbC,KAJH;AAMAC,QAAQ,CAAC,2BAAD,EAA8B,MAAM;AAC1CA,EAAAA,QAAQ,CAAC,8BAAD,EAAiC,MAAM;AAC7CC,IAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAY;AAC3C,YAAMC,KAAK,GAAGP,4BAAd;;AAEA,YAAMQ,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCH,QAAAA,KADmC;AAEnCN,QAAAA;AAFmC,OAAlB,CAAnB;;AAKA,YAAM;AAAEU,QAAAA;AAAF,UAAeH,UAAU,CAACD,KAAhC;AACA,YAAMK,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,mBAAjB,CAAb;;AAEAC,sCAAiBC,GAAjB,CAAqBP,UAArB,EAAiC;AAC/BQ,QAAAA,GAAG,EAAE,mBAD0B;AAE/BC,QAAAA,SAAS,EAAE,IAFoB;AAG/BC,QAAAA,KAAK,EAAE;AACLF,UAAAA,GAAG,EAAEJ,IAAI,CAACO,YAAL,IAAqBH,GADrB;AAELI,UAAAA,MAAM,EAAE;AAFH,SAHwB;AAO/BC,QAAAA,QAAQ,EAAE;AAPqB,OAAjC;;AAUAb,MAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2BC,sBAAmBC,OAAnB,CAA2BC,wBAA3B,EAA3B;AAEAC,MAAAA,MAAM,CAAClB,UAAU,CAACD,KAAX,CAAiBI,QAAjB,CAA0BE,OAA1B,CAAkC,mBAAlC,GAAwDc,IAAzD,CAAN,CAAqEC,IAArE,CAA0E,MAA1E;AACD,KAxBG,CAAJ;AAyBD,GA1BO,CAAR;AA4BAvB,EAAAA,QAAQ,CAAC,8BAAD,EAAiC,MAAM;AAC7CC,IAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAY;AAC3C,YAAMC,KAAK,GAAGR,wBAAd;;AAEA,YAAMS,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCH,QAAAA,KADmC;AAEnCN,QAAAA;AAFmC,OAAlB,CAAnB;;AAKA,YAAM;AAAEU,QAAAA;AAAF,UAAeH,UAAU,CAACD,KAAhC;AACA,YAAMK,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,mBAAjB,CAAb;;AAEAC,sCAAiBC,GAAjB,CAAqBP,UAArB,EAAiC;AAC/BQ,QAAAA,GAAG,EAAE,mBAD0B;AAE/BC,QAAAA,SAAS,EAAE,IAFoB;AAG/BC,QAAAA,KAAK,EAAE;AACLF,UAAAA,GAAG,EAAEJ,IAAI,CAACO,YAAL,IAAqBH,GADrB;AAELI,UAAAA,MAAM,EAAE;AAFH,SAHwB;AAO/BC,QAAAA,QAAQ,EAAE;AAPqB,OAAjC;;AAUAb,MAAAA,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2BC,sBAAmBC,OAAnB,CAA2BC,wBAA3B,EAA3B;AAEAC,MAAAA,MAAM,CAAClB,UAAU,CAACD,KAAX,CAAiBI,QAAjB,CAA0BE,OAA1B,CAAkC,mBAAlC,GAAwDc,IAAzD,CAAN,CAAqEC,IAArE,CAA0E,EAA1E;AACD,KAxBG,CAAJ;AAyBD,GA1BO,CAAR;AA2BD,CAxDO,CAAR","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Value, Controller } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  jsx,\n} from '@ali/4ever-dev-test';\nimport newLineGuidePlugin from '../../plugins/newlineGuide';\nimport { NewlineGuideData } from '../../plugins/newlineGuide/model/newlineGuide';\nimport { createBiPlugins } from '../..';\n\nconst valueForNewlineGuideTest = (\n  <value>\n    <document>\n      <block type=\"paragraph\" />\n      <block type=\"paragraph\" key=\"test-newlineGuide\">/<cursor /></block>\n    </document>\n  </value>\n);\n\nconst valueForNewlineGuideWithText = (\n  <value>\n    <document>\n      <block type=\"paragraph\" />\n      <block type=\"paragraph\" key=\"test-newlineGuide\">text/<cursor /></block>\n    </document>\n  </value>\n);\n\nconst plugins = createBiPlugins({\n  newlineGuide: {\n    enabled: true,\n  },\n}).array;\n\ndescribe('Bi/newlineGuide/behaviour', () => {\n  describe('换行引导插件移除 trigger text, 当前有内容', () => {\n    test('removeNewlineTriggerText', async () => {\n      const value = valueForNewlineGuideWithText as unknown as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const { document } = controller.value;\n      const node = document.getNode('test-newlineGuide');\n\n      NewlineGuideData.set(controller, {\n        key: 'test-newlineGuide',\n        triggered: true,\n        point: {\n          key: node.getFirstNode()?.key,\n          offset: 5,\n        },\n        showMenu: true,\n      });\n\n      controller.run('onAction', newLineGuidePlugin.actions.removeNewlineTriggerText());\n\n      expect(controller.value.document.getNode('test-newlineGuide')?.text).toBe('text');\n    });\n  });\n\n  describe('换行引导插件移除 trigger text, 当前无内容', () => {\n    test('removeNewlineTriggerText', async () => {\n      const value = valueForNewlineGuideTest as unknown as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const { document } = controller.value;\n      const node = document.getNode('test-newlineGuide');\n\n      NewlineGuideData.set(controller, {\n        key: 'test-newlineGuide',\n        triggered: true,\n        point: {\n          key: node.getFirstNode()?.key,\n          offset: 1,\n        },\n        showMenu: true,\n      });\n\n      controller.run('onAction', newLineGuidePlugin.actions.removeNewlineTriggerText());\n\n      expect(controller.value.document.getNode('test-newlineGuide')?.text).toBe('');\n    });\n  });\n});\n"],"file":"behaviour.test.js"}