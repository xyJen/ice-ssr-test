"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everCangjie = require("@ali/4ever-cangjie");

require("@testing-library/jest-dom/extend-expect");

var _everDevTest = require("@ali/4ever-dev-test");

var _newlineGuide = _interopRequireDefault(require("../../plugins/newlineGuide"));

var _newlineGuide2 = require("../../plugins/newlineGuide/model/newlineGuide");

var _ = require("../..");

/* eslint-disable @typescript-eslint/no-explicit-any */

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const valueForNewlineGuideTest = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}), (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  key: "test-newlineGuide"
}, "/", (0, _everDevTest.jsx)("cursor", null))));
const valueForNewlineGuideWithText = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}), (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  key: "test-newlineGuide"
}, "text/", (0, _everDevTest.jsx)("cursor", null))));
const plugins = (0, _.createBiPlugins)({
  newlineGuide: {
    enabled: true
  }
}).array;
describe('Bi/newlineGuide/behaviour', () => {
  describe('换行引导插件移除 trigger text, 当前有内容', () => {
    test('removeNewlineTriggerText', async () => {
      const value = valueForNewlineGuideWithText;

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      const {
        document
      } = controller.value;
      const node = document.getNode('test-newlineGuide');

      _newlineGuide2.NewlineGuideData.set(controller, {
        key: 'test-newlineGuide',
        triggered: true,
        point: {
          key: node.getFirstNode()?.key,
          offset: 5
        },
        showMenu: true
      });

      controller.run('onAction', _newlineGuide.default.actions.removeNewlineTriggerText());
      expect(controller.value.document.getNode('test-newlineGuide')?.text).toBe('text');
    });
  });
  describe('换行引导插件移除 trigger text, 当前无内容', () => {
    test('removeNewlineTriggerText', async () => {
      const value = valueForNewlineGuideTest;

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      const {
        document
      } = controller.value;
      const node = document.getNode('test-newlineGuide');

      _newlineGuide2.NewlineGuideData.set(controller, {
        key: 'test-newlineGuide',
        triggered: true,
        point: {
          key: node.getFirstNode()?.key,
          offset: 1
        },
        showMenu: true
      });

      controller.run('onAction', _newlineGuide.default.actions.removeNewlineTriggerText());
      expect(controller.value.document.getNode('test-newlineGuide')?.text).toBe('');
    });
  });
});
//# sourceMappingURL=behaviour.test.js.map