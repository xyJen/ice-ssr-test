{"version":3,"sources":["../../../../src/__tests__/clearStyle/behaviour.test.tsx"],"names":["defaultPlugins","array","describe","test","value","output","plugins","clearStyle","locale","ignores","controller","Controller","create","run","actual","toJSON","preserveSelections","expected","setValue","expect","toEqual","retain","jc","ind","left","firstLine","spacing","before","shd","val","fill","color","list","listId","level","isOrdered","listStyleType","blockquote","KeyboardEvent","type","data","marks","mark","Mark","colsWidth","tableSelection","key","startRowIndex","startColIndex","endRowIndex","endColIndex","table","document","getNode","command","tableNode","getFirstText","getMarks"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx, getHotkeyEvent } from '@ali/4ever-dev-test';\nimport { Value, Controller, CangjieInputEvent, Mark } from '@ali/4ever-cangjie';\nimport { clearStyles } from '../../plugins/clearStyle/actions';\nimport createBiPlugins from '../../createBiPlugins';\nimport { addMarkAtCurrentRange } from '@ali/4ever-utils';\n\nconst defaultPlugins = createBiPlugins().array;\n\ndescribe('Bi/clearStyle/behaviour', () => {\n  test('清除样式', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            <m type=\"bold\">Bold</m>\n            <m type=\"italic\">Italic</m>\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            <m type=\"bold\">Bold</m>\n            Italic\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const plugins = createBiPlugins({\n      clearStyle: {\n        locale: {},\n        ignores: ['bold'],\n      },\n    }).array;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('清除段落格式-不选中状态', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              retain: 'something retain',\n              jc: 'center',\n              ind: {\n                left: 32,\n                firstLine: 32,\n              },\n              spacing: {\n                before: 32,\n              },\n              shd: {\n                val: 'pct15',\n                fill: '#FF0000',\n                color: '#0000FF',\n              }\n            }}\n          >\n            Hello<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ retain: 'something retain' }}>\n            Hello<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('清除段落格式-选中整段状态', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              retain: 'something retain',\n              jc: 'center',\n              ind: {\n                left: 32,\n                firstLine: 32,\n              },\n              spacing: {\n                before: 32,\n              },\n            }}\n          >\n            <anchor />Hello<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ retain: 'something retain' }}>\n            <anchor />Hello<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('清除段落格式-跨段选中状态', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                left: 64,\n              },\n            }}\n          >\n            Hello<anchor /> World\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                before: 64,\n              },\n            }}\n          >\n            say hi<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            Hello<anchor /> World\n          </block>\n          <block\n            type=\"paragraph\"\n          >\n            say hi<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('清除段落和文本样式-选中部分段状态', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                left: 64,\n              },\n            }}\n          >\n            Hello<anchor /> <m type=\"bold\">World</m><focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                left: 64,\n              },\n            }}\n          >\n            Hello<anchor /> World<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('清除段落和文本样式-跨段选中状态', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                left: 64,\n              },\n            }}\n          >\n            Hello<anchor /> <m type=\"bold\">World</m>\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                before: 64,\n              },\n            }}\n          >\n            say hi<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            Hello<anchor /> World\n          </block>\n          <block\n            type=\"paragraph\"\n          >\n            say hi<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('清除段落和文本样式-不选中状态', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                before: 32,\n              },\n            }}\n          >\n            Hello<m type=\"bold\">World<cursor /></m>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            Hello<m type=\"bold\">World<cursor /></m>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('清除段落格式-标题、列表、引用变正文', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"heading-1\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: true,\n                listStyleType: 'DEC_LEN_LROM_P',\n              },\n              blockquote: true,\n              ind: {\n                left: 32,\n              },\n            }}\n          >\n            Hello World<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            Hello World<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('段尾清除样式-回车后可继承空样式', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            Hello<m type=\"bold\">World<cursor /></m>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            Hello<m type=\"bold\">World</m>\n          </block>\n          <block\n            type=\"paragraph\"\n          >\n            w<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n    controller.run('onAction', clearStyles());\n\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n    );\n\n    controller.run('onCangjieInput', CangjieInputEvent({\n      type: 'insertText',\n      data: 'w',\n    }));\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('带样式的空段落可清除样式', () => {\n    const marks = [{\n      type: 'color',\n      data: {\n        value: 'red',\n      },\n    }];\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            <text marks={marks}>with marks<cursor /></text>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            <text marks={marks}>with marks</text>\n          </block>\n          <block\n            type=\"paragraph\"\n          >\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n    );\n    controller.run('onAction', clearStyles());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('表格带样式空 cell 可清除样式', () => {\n    const mark = Mark.create({\n      type: 'color',\n      data: {\n        value: 'red',\n      },\n    });\n    const value = ((\n      <value>\n        <document>\n          <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"a\" />\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"b\" />\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: defaultPlugins,\n    });\n\n    const tableSelection = {\n      key: 'table-key',\n      startRowIndex: 0,\n      startColIndex: 0,\n      endRowIndex: 0,\n      endColIndex: 1,\n    };\n\n    const table = controller.value.document.getNode('table-key');\n    // @ts-ignore\n    controller.command('selectTableSelection', table, tableSelection);\n\n    // 先设置样式\n    addMarkAtCurrentRange(controller, mark);\n    let tableNode = controller.value.document.getNode('a');\n\n    expect(tableNode.getFirstText().getMarks()).toEqual([mark]);\n\n    controller.run('onAction', clearStyles());\n\n    tableNode = controller.value.document.getNode('b');\n\n    expect(tableNode.getFirstText().getMarks()).toEqual([]);\n  });\n});\n"],"file":"behaviour.test.js"}