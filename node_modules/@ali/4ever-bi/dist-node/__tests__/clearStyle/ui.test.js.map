{"version":3,"sources":["../../../../src/__tests__/clearStyle/ui.test.tsx"],"names":["CLEAR_STYLE_HOT_KEY","describe","test","value","spacing","before","output","controllerRef","jest","fn","editor","controller","mock","calls","fireEvent","keyDown","keyPress","actual","toJSON","preserveSelections","expected","setValue","expect","toEqual"],"mappings":";;;;AACA;;AAEA;;AACA;;AACA;;AACA;;AANA;AAQA,MAAMA,mBAAmB,GAAG,SAA5B;;WAeiB;AAAG,EAAA,IAAI,EAAC;AAAR,YAAoB,qCAApB,C;;YAOX,qCACE,wCACE;AACE,EAAA,IAAI,EAAC;AADP,YAGO;AAAG,EAAA,IAAI,EAAC;AAAR,WAHP,OAGgC,qCAHhC,CADF,CADF,C;;AApBNC,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCC,EAAAA,IAAI,CAAC,SAAD,EAAY,YAAY;AAC1B,UAAMC,KAAK,GACT,qCACE,wCACE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AADL;AAFR,qBADF,CADF,CADF;AAiBA,UAAMC,MAAM,QAAZ;AAWA,UAAMC,aAAa,GAAGC,IAAI,CAACC,EAAL,EAAtB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEP,KAAtB;AAA6B,MAAA,aAAa,EAAEI;AAA5C,MAAb,CAAzB;AACA,UAAMI,UAAU,GAAG,kBAAKJ,aAAa,CAACK,IAAd,CAAmBC,KAAxB,EAA+B,CAA/B,CAAnB;;AACAC,2BAAUC,OAAV,CAAkBL,MAAlB,EAA0B,iCAAeV,mBAAf,CAA1B;;AACA,UAAM,kBAAN;;AACAc,2BAAUE,QAAV,CAAmBN,MAAnB,EAA2B,4BAAe,GAAf,CAA3B;;AACA,UAAM,kBAAN;AACA,UAAM,oBAAQ,MAAM;AAClB,YAAMO,MAAM,GAAGN,UAAU,CAACR,KAAX,CAAiBe,MAAjB,CAAwB;AAAEC,QAAAA,kBAAkB,EAAE;AAAtB,OAAxB,CAAf;AACA,YAAMC,QAAQ,GAAGT,UAAU,CACxBU,QADc,CACLf,MADK,EAEdH,KAFc,CAERe,MAFQ,CAED;AAAEC,QAAAA,kBAAkB,EAAE;AAAtB,OAFC,CAAjB;AAGA,aAAOG,MAAM,CAACL,MAAD,CAAN,CAAeM,OAAf,CAAuBH,QAAvB,CAAP;AACD,KANK,CAAN;AAOD,GA3CG,CAAJ;AA4CD,CA7CO,CAAR","sourcesContent":["/** @jsx jsx */\nimport { jsx, getHotkeyEvent, renderEditor, fireEvent } from '@ali/4ever-dev-test';\nimport { Controller, Value } from '@ali/4ever-cangjie';\nimport { last } from 'lodash-es';\nimport Editor from '../editor';\nimport { getHotKeyEvent } from '../helper';\nimport { wait, waitFor } from '@testing-library/react';\n\nconst CLEAR_STYLE_HOT_KEY = 'ctrl+\\\\';\n\ndescribe('Bi/clearStyle/ui', () => {\n  test('清除样式快捷键', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                before: 32,\n              },\n            }}\n          >\n            Hello<m type=\"bold\">World<cursor /></m>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n          >\n            Hello<m type=\"bold\">World</m>!<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controllerRef = jest.fn();\n    const { editor } = await renderEditor(<Editor defaultValue={value} controllerRef={controllerRef} />);\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n    fireEvent.keyDown(editor, getHotkeyEvent(CLEAR_STYLE_HOT_KEY));\n    await wait();\n    fireEvent.keyPress(editor, getHotKeyEvent('!'));\n    await wait();\n    await waitFor(() => {\n      const actual = controller.value.toJSON({ preserveSelections: true });\n      const expected = controller\n        .setValue(output)\n        .value.toJSON({ preserveSelections: true });\n      return expect(actual).toEqual(expected);\n    });\n  });\n});\n"],"file":"ui.test.js"}