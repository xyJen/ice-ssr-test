{"version":3,"sources":["../../../../src/__tests__/laserPointer/ui.test.tsx"],"names":["createBiPlugins","biPlugins","LaserPointerPlugin","plugins","array","Editor","props","defaultValue","laserPointerConfig","value","setValue","React","useState","useMemo","laserPointer","handleChange","useCallback","changed","describe","beforeAll","jest","spyOn","console","error","mockImplementation","afterAll","mockRestore","afterEach","test","isLaserPointerEnabled","getHighlightType","node","controller","document","getPath","key","renderHighlight","type","_","children","getRole","LaserPointerRole","HOST","findByTestId","$element","expect","textContent","toBe","highlighted","highlight","fireEvent","click","Promise","resolve","dataset","AUDIENCE","removeHighlight","event","stopPropagation","removeHighlightButton$","role","t","h","queryByTestId","not","toBeInTheDocument","blockquote","list","listId","level","isOrdered","listStyle","format","text","align","listStyleType","Highlight","getDOMNode","useEffect","dom","setAttribute","Block","isBlock","content","ele","querySelector","getAttribute","blockquoteEle","listEle","Controller","create","$listEle","listNode","toBeNull","$paragraphEle","paragraphNode","$invalidKeyEle","invalidKeyNode","$leafEle","leafNode"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport * as React from 'react';\nimport { Value, Controller, Block } from '@ali/4ever-cangjie';\nimport { renderEditor, jsx, fireEvent } from '@ali/4ever-dev-test';\nimport '@testing-library/jest-dom/extend-expect';\nimport { cleanup } from '@testing-library/react';\nimport equal from 'fast-deep-equal';\nimport { createCustomizedBiPlugins } from '../..';\nimport Provider from '../../provider';\nimport Content from '../../content';\nimport { findClosesetBlock } from '../../plugins/laserPointer/utils';\nimport biPlugins from '../../plugins';\nimport LaserPointerPlugin from '../../plugins/laserPointer';\nimport {\n  LaserPointerPluginConfig,\n  LaserPointerRole,\n} from '../../plugins/laserPointer/types';\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  ...biPlugins,\n  LaserPointerPlugin,\n} as any);\n\nconst plugins = createBiPlugins().array;\n\ninterface EditorProps {\n  defaultValue: Value;\n  laserPointerConfig: LaserPointerPluginConfig;\n}\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { defaultValue, laserPointerConfig } = props;\n  const [value, setValue] = React.useState(defaultValue);\n  const plugins = React.useMemo(() => {\n    return createBiPlugins({\n      laserPointer: laserPointerConfig,\n    });\n  }, [laserPointerConfig]);\n\n  const handleChange = React.useCallback((changed) => {\n    setValue(changed.value);\n  }, []);\n\n  return (\n    <Provider value={value} onChange={handleChange} plugins={plugins} autoFocus>\n      <Content />\n    </Provider>\n  );\n};\n\ndescribe('Bi/laserPointer/ui', () => {\n  beforeAll(() => {\n    // 防止被 componentDidCatch catch 的 error 被控制台输出\n    jest.spyOn(console, 'error');\n    // @ts-ignore\n    console.error.mockImplementation(() => {});\n  });\n\n  afterAll(() => {\n    // @ts-ignore\n    console.error.mockRestore();\n  });\n\n  afterEach(() => {\n    cleanup();\n  });\n\n  test('自定义 highlight getter/renderer', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (type, _, { children }) => {\n        return type === 'block' ? (\n          <div data-testid=\"highlight-wrapper\">{children}</div>\n        ) : null;\n      },\n      getRole: () => LaserPointerRole.HOST,\n    };\n\n    const { findByTestId } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n\n    const $element = await findByTestId('highlight-wrapper');\n    expect($element.textContent).toBe('Hello World');\n  });\n\n  test('主持人能够高亮', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (type, highlighted, { children, highlight }) => {\n        return type === 'block' ? (\n          <div\n            data-testid=\"highlight-wrapper\"\n            data-highlighted={highlighted}\n            onClick={() => highlight()}\n          >\n            {children}\n          </div>\n        ) : null;\n      },\n      getRole: () => LaserPointerRole.HOST,\n    };\n\n    const { findByTestId } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n\n    const $element = await findByTestId('highlight-wrapper');\n    fireEvent.click($element);\n    await Promise.resolve();\n    expect($element.dataset.highlighted).toBe('true');\n  });\n\n  test('非主持人无法高亮', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (type, highlighted, { children, highlight }) => {\n        return type === 'block' ? (\n          <div\n            data-testid=\"highlight-wrapper\"\n            data-highlighted={highlighted}\n            onClick={() => highlight()}\n          >\n            {children}\n          </div>\n        ) : null;\n      },\n      getRole: () => LaserPointerRole.AUDIENCE,\n    };\n\n    const { findByTestId } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n\n    const $element = await findByTestId('highlight-wrapper');\n    fireEvent.click($element);\n    await Promise.resolve();\n    expect($element.dataset.highlighted).toBe('false');\n  });\n\n  test('主持人能够取消高亮', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (\n        type,\n        highlighted,\n        { children, highlight, removeHighlight },\n      ) => {\n        return type === 'block' ? (\n          <div\n            data-testid=\"highlight-wrapper\"\n            data-highlighted={highlighted}\n            onClick={() => highlight()}\n          >\n            <button\n              data-testid=\"remove-highlight\"\n              onClick={(event) => {\n                event.stopPropagation();\n                removeHighlight();\n              }}\n            >\n              取消高亮\n            </button>\n            {children}\n          </div>\n        ) : null;\n      },\n      getRole: () => LaserPointerRole.HOST,\n    };\n\n    const { findByTestId } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n\n    const $element = await findByTestId('highlight-wrapper');\n    fireEvent.click($element);\n    await Promise.resolve();\n    expect($element.dataset.highlighted).toBe('true');\n\n    const removeHighlightButton$ = await findByTestId('remove-highlight');\n    fireEvent.click(removeHighlightButton$);\n    await Promise.resolve();\n\n    expect($element.dataset.highlighted).toBe('false');\n  });\n\n  test('角色切换为主持人后，高亮可用', async () => {\n    let role = LaserPointerRole.AUDIENCE;\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (type, highlighted, { children, highlight }) => {\n        return type === 'block' ? (\n          <div\n            data-testid=\"highlight-wrapper\"\n            data-highlighted={highlighted}\n            onClick={() => highlight()}\n          >\n            {children}\n          </div>\n        ) : null;\n      },\n      getRole: () => role,\n    };\n\n    const { findByTestId } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n\n    const $element = await findByTestId('highlight-wrapper');\n    fireEvent.click($element);\n    await Promise.resolve();\n\n    expect($element.dataset.highlighted).toBe('false');\n\n    role = LaserPointerRole.HOST;\n\n    fireEvent.click($element);\n    await Promise.resolve();\n    expect($element.dataset.highlighted).toBe('true');\n  });\n\n  test('角色切换为观众后，高亮不可用', async () => {\n    let role = LaserPointerRole.HOST;\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (\n        type,\n        highlighted,\n        { children, highlight, removeHighlight },\n      ) => {\n        return type === 'block' ? (\n          <div\n            data-testid=\"highlight-wrapper\"\n            data-highlighted={highlighted}\n            onClick={() => highlight()}\n          >\n            <button\n              data-testid=\"remove-highlight\"\n              onClick={(event) => {\n                event.stopPropagation();\n                removeHighlight();\n              }}\n            >\n              取消高亮\n            </button>\n            {children}\n          </div>\n        ) : null;\n      },\n      getRole: () => role,\n    };\n\n    const { findByTestId } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n\n    const $element = await findByTestId('highlight-wrapper');\n    fireEvent.click($element);\n    await Promise.resolve();\n\n    expect($element.dataset.highlighted).toBe('true');\n    const removeHighlightButton$ = await findByTestId('remove-highlight');\n    fireEvent.click(removeHighlightButton$);\n    await Promise.resolve();\n    expect($element.dataset.highlighted).toBe('false');\n\n    role = LaserPointerRole.AUDIENCE;\n\n    fireEvent.click($element);\n    await Promise.resolve();\n    expect($element.dataset.highlighted).toBe('false');\n  });\n\n  test('若激光笔开关不可用，则无法渲染 highlight', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => false,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (t, h, { children }) => {\n        return <div data-testid=\"highlight-wrapper\">{children}</div>;\n      },\n      getRole: () => LaserPointerRole.HOST,\n    };\n\n    const { queryByTestId } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n\n    const $element = queryByTestId('highlight-wrapper');\n    expect($element).not.toBeInTheDocument();\n  });\n  test('getDOMNode 应该能拿到 dom 节点', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block key='1' type=\"paragraph\">Hello World</block>\n          <block key='3' type=\"paragraph\" data={{ blockquote: true }}>blockquote</block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 1,\n                isOrdered: true,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cb',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            bbb\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const Highlight: React.FC<{ getDOMNode: () => Element | undefined }> = ({ children, getDOMNode }) => {\n      React.useEffect(() => {\n        const dom = getDOMNode();\n        if (dom) {\n          dom.setAttribute('data-highlighted', 'true');\n        }\n      });\n\n      return <>{children}</>;\n    };\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return Block.isBlock(node)\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (type, _, { children, getDOMNode }) => {\n        return type === 'block' ? (\n          <Highlight getDOMNode={getDOMNode}>{children}</Highlight>\n        ) : null;\n      },\n      getRole: () => LaserPointerRole.HOST,\n    };\n\n    const { content } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n    const ele = content.querySelector('[data-cangjie-key=\"1\"]');\n    expect(ele.getAttribute('data-highlighted')).toBe('true');\n\n    const blockquoteEle = content.querySelector('blockquote');\n    expect(blockquoteEle.getAttribute('data-highlighted')).toBe('true');\n\n    const listEle = content.querySelector('[data-listid]');\n    expect(listEle.getAttribute('data-highlighted')).toBe('true');\n  });\n  test('根据 DOM Element 能找到最近的 node', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block key=\"1\" type=\"paragraph\">Hello World</block>\n          <block key=\"xx-1\" type=\"paragraph\">Hello World</block>\n          <block\n            key=\"2\"\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 1,\n                isOrdered: true,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cb',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            bbb\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    const laserPointerConfig: LaserPointerPluginConfig = {\n      isLaserPointerEnabled: () => true,\n      getHighlightType: (node, controller) => {\n        return equal(controller.value.document.getPath(node.key), [0])\n          ? 'block'\n          : null;\n      },\n      renderHighlight: (type, highlighted, { children, highlight }) => {\n        return type === 'block' ? (<>{children}</>) : null;\n      },\n      getRole: () => LaserPointerRole.HOST,\n    };\n\n    const { content } = await renderEditor(\n      <Editor defaultValue={value} laserPointerConfig={laserPointerConfig} />,\n    );\n    const $listEle = content.querySelector('[data-testid=list]');\n    const listNode = findClosesetBlock($listEle, controller);\n    expect(listNode).not.toBeNull();\n    expect(listNode.key).toBe('2');\n\n    const $paragraphEle = content.querySelector('[data-cangjie-key=\"1\"]');\n    const paragraphNode = findClosesetBlock($paragraphEle, controller);\n    expect(paragraphNode).not.toBeNull();\n    expect(paragraphNode.key).toBe('1');\n\n    const $invalidKeyEle = content.querySelector('[data-cangjie-key=\"xx-1\"]');\n    const invalidKeyNode = findClosesetBlock($invalidKeyEle, controller);\n    expect(invalidKeyNode).toBeNull();\n\n    const $leafEle = content.querySelector('[data-cangjie-leaf=\"true\"]');\n    const leafNode = findClosesetBlock($leafEle, controller);\n    expect(leafNode).not.toBeNull();\n  });\n});\n"],"file":"ui.test.js"}