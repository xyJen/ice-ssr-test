{"version":3,"sources":["../../../../src/__tests__/laserPointer/behaviour.test.tsx"],"names":["describe","test","value","controller","Controller","create","plugins","document","node","getNodeByPath","expect","key","injections","toBe","setInjections","Injection","data","laserPointer","uuid","__uuid__","enable","gen","uniqueId","query","first","second"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport * as React from 'react';\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Controller, Value, Injection } from '@ali/4ever-cangjie';\nimport { uniqueId } from 'lodash-es';\nimport {\n  highlightByPath,\n  highlightByUUID,\n  removeHighlight,\n  isHighlighted,\n} from '../../plugins/laserPointer/utils';\n\ndescribe('Bi/laserPointer/behaviour', () => {\n  test('判断节点是否被高亮', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: [],\n    });\n\n    const { document } = controller.value;\n    const node = document.getNodeByPath([0]);\n\n    expect(isHighlighted(node.key, controller.value.injections)).toBe(false);\n\n    controller.setInjections([\n      Injection.create({\n        key: node.key,\n        data: { laserPointer: true },\n      }),\n    ]);\n\n    expect(isHighlighted(node.key, controller.value.injections)).toBe(true);\n  });\n\n  test('通过 path 设置 highlight', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({ value, plugins: [] });\n    const { document } = controller.value;\n    const node = document.getNodeByPath([0]);\n    highlightByPath(controller, [0]);\n    expect(isHighlighted(node.key, controller.value.injections)).toBe(true);\n  });\n\n  test('通过 uuid 设置 highlight', () => {\n    const uuid = 'hello-world-uuid';\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ __uuid__: uuid }} key=\"hello_word\">Hello World</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({ value, plugins: [] }, { uuid: { enable: true, gen: uniqueId } });\n    const key = controller.query('getNodeKeyByUUID', uuid);\n    highlightByUUID(controller, 'hello-world-uuid');\n    expect(isHighlighted(key, controller.value.injections)).toBe(true);\n  });\n\n  test('取消 highlight', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({ value, plugins: [] });\n    const { document } = controller.value;\n    const node = document.getNodeByPath([0]);\n    highlightByPath(controller, [0]);\n    expect(isHighlighted(node.key, controller.value.injections)).toBe(true);\n    removeHighlight(controller, [0]);\n    expect(isHighlighted(node.key, controller.value.injections)).toBe(false);\n  });\n\n  test('设置 highlight 前，取消上一个 highlight', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">Hello World</block>\n          <block type=\"paragraph\">JavaScript</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({ value, plugins: [] });\n    const { document } = controller.value;\n    const first = document.getNodeByPath([0]);\n    const second = document.getNodeByPath([1]);\n    highlightByPath(controller, [0]);\n    expect(isHighlighted(first.key, controller.value.injections)).toBe(true);\n    highlightByPath(controller, [1]);\n    expect(isHighlighted(second.key, controller.value.injections)).toBe(true);\n  });\n});\n"],"file":"behaviour.test.js"}