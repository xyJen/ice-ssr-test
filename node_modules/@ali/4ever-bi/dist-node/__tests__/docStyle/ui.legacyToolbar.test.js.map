{"version":3,"sources":["../../../../src/__tests__/docStyle/ui.legacyToolbar.test.tsx"],"names":["createDocStyle","data","docDefaults","name","type","default","input","describe","it","container","findByTestId","rPr","sz","szUnit","target","querySelector","expect","style","fontSize","toEqual","szInput","value","findByText","fonts","ascii","isSetted","test","fontFamily","fontsDiv","textContent","pPr","spacing","before","after","block","marginTop","marginBottom","list","listId","level","isOrdered","isTaskList","isChecked","shd","color","val","backgroundColor","table","colsWidth","blocks","querySelectorAll","window","getComputedStyle"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport {\n  waitFor,\n} from '@testing-library/react';\nimport {\n  renderEditor,\n  jsx,\n} from '@ali/4ever-dev-test';\nimport {EditorWidthLegacyToolbar as Editor} from '../editor';\n\nconst createDocStyle = (data) => {\n  return {\n    docDefaults: {\n      data,\n      name: 'dingdoc normal',\n      type: 'paragraph',\n      default: 1,\n    },\n  };\n};\n\nconst input = (\n  <value>\n    <document>\n      <block type=\"paragraph\"><cursor />默认样式设置</block>\n    </document>\n  </value>\n);\n\ndescribe('Bi/docStyle/ui', () => {\n  it('支持默认字号', async () => {\n    const { container, findByTestId } = await renderEditor(\n      <Editor\n        defaultValue={input}\n        docStyle={createDocStyle({\n          rPr: {\n            sz: 18,\n            szUnit: 'pt',\n          },\n        })}\n      />,\n    );\n\n    const target = await waitFor(() => container.querySelector('[data-cangjie-content=\"true\"]'));\n    expect(target?.style.fontSize).toEqual('18pt');\n\n    const szInput = await findByTestId('SelectWrap-bi-toolbar-sz');\n    expect(szInput.querySelector('input').value).toEqual('18');\n  });\n  it('支持默认字体', async () => {\n    const { container, findByTestId, findByText } = await renderEditor(\n      <Editor\n        defaultValue={input}\n        docStyle={createDocStyle({\n          rPr: {\n            fonts: {\n              ascii: 'Helvetica',\n            },\n          },\n        })}\n      />,\n    );\n\n    const target = await waitFor(() => container.querySelector('[data-cangjie-content=\"true\"]'));\n    const isSetted = /^Helvetica/.test(target?.style.fontFamily);\n    expect(isSetted).toEqual(true);\n\n    const fontsDiv = await findByTestId('SelectWrap-bi-toolbar-fonts');\n    const fonts = fontsDiv.querySelector('.select_left_wrap div').textContent;\n    expect(fonts).toEqual('Helvetica');\n  });\n  it('支持默认段间距', async () => {\n    const { container } = await renderEditor(\n      <Editor\n        defaultValue={input}\n        docStyle={createDocStyle({\n          pPr: {\n            spacing: {\n              before: 8,\n              after: 12,\n            },\n          },\n        })}\n      />,\n    );\n\n    const block = await waitFor(() => container.querySelector('[data-cangjie-leaf-block=\"true\"]'));\n    expect(block.style.marginTop).toEqual('8px');\n    expect(block.style.marginBottom).toEqual('12px');\n  });\n\n  it('列表 getNodeStyle', async () => {\n    const list = (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                isTaskList: true,\n                isChecked: false,\n              },\n              shd: {\n                color: '#FF0000',\n                val: 'pct5',\n              },\n            }}\n          ><cursor />默认样式设置\n          </block>\n        </document>\n      </value>\n    );\n    const { container } = await renderEditor(\n      <Editor\n        defaultValue={list}\n        docStyle={createDocStyle({\n          pPr: {\n            spacing: {\n              before: 8,\n              after: 12,\n            },\n          },\n        })}\n      />,\n    );\n\n    const block = await waitFor(() => container.querySelector('[data-cangjie-leaf-block=\"true\"]'));\n    expect(block.style.marginTop).toEqual('2.667px');\n    expect(block.style.marginBottom).toEqual('2.667px');\n    // 折叠列表背景色不通过 docStyle 渲染\n    expect(block.style.backgroundColor).toEqual('');\n  });\n\n  it('表格里间距特殊控制', async () => {\n    const table = ((\n      <value>\n        <document>\n          <block\n            type=\"table\"\n            key=\"table\"\n            data={{\n              colsWidth: [300, 300],\n            }}\n          >\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">h</block>\n                <block type=\"paragraph\">h</block>\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">h</block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { container } = await renderEditor(\n      <Editor\n        defaultValue={table}\n        docStyle={createDocStyle({\n          pPr: {\n            spacing: {\n              before: 8,\n              after: 12,\n            },\n          },\n        })}\n      />,\n    );\n\n    const blocks = await waitFor(() => container.querySelectorAll('[data-cangjie-leaf-block=\"true\"]'));\n    expect(window.getComputedStyle(blocks[1]).marginTop).toEqual('2.667px');\n    expect(window.getComputedStyle(blocks[2]).marginBottom).toEqual('2.667px');\n  });\n});\n"],"file":"ui.legacyToolbar.test.js"}