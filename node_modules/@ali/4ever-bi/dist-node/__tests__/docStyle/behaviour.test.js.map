{"version":3,"sources":["../../../../src/__tests__/docStyle/behaviour.test.tsx"],"names":["pluginA","getNodeStyle","props","_","next","node","type","backgroundColor","pluginB","getContentStyle","docStyle","docDefaults","data","rPr","sz","fontSize","createBiPlugins","plugins","value","tableValue","colsWidth","shd","fill","describe","test","controller","Controller","create","array","style","run","document","getNode","expect","toEqual","pPr","spacing","before","after","theme","DEFAULT_SHD_STYLES","marginTop","defaultCompactSpacing","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Controller, Value, Plugin } from '@ali/4ever-cangjie';\nimport { theme } from '@ali/4ever-bamboo';\nimport createCustomizedBiPlugins from '../../createCustomizedBiPlugins';\nimport createBasicBiPlugins from '../../createBiPlugins';\n\nconst pluginA = (): Plugin => {\n  return {\n    getNodeStyle: (props, _, next) => {\n      if (props.node.type === 'a') {\n        return {\n          backgroundColor: 'red',\n        };\n      }\n      return next();\n    },\n  };\n};\nconst pluginB = (): Plugin => {\n  return {\n    getContentStyle: (props, _, next) => {\n      if (props.docStyle?.docDefaults?.data?.rPr?.sz) {\n        return {\n          fontSize: props.docStyle?.docDefaults?.data?.rPr?.sz,\n        };\n      }\n      return next();\n    },\n  };\n};\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  pluginA,\n  pluginB,\n});\n\nconst plugins = createBiPlugins();\n\nconst value = ((\n  <value>\n    <document>\n      <block type=\"a\" key=\"a\">A</block>\n      <block type=\"b\" key=\"b\">B</block>\n    </document>\n  </value>\n) as unknown) as Value;\nconst tableValue = ((\n  <value>\n    <document>\n      <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100] }}>\n        <block type=\"table-row\">\n          <block type=\"table-cell\">\n            <block type=\"paragraph\" key=\"a\" data={{ shd: { fill: 'red' } }}>A</block>\n          </block>\n        </block>\n      </block>\n      <block type=\"paragraph\" key=\"b\">B</block>\n    </document>\n  </value>\n) as unknown) as Value;\n\ndescribe('Bi/docStyle/behaviour', () => {\n  test('getNodeStyle', async () => {\n    const controller = Controller.create({\n      value,\n      plugins: plugins.array,\n    });\n\n    const style = controller.run('getNodeStyle', {\n      node: controller.value.document.getNode('a'),\n    });\n\n    expect(style).toEqual({\n      backgroundColor: 'red',\n    });\n  });\n  test('getNodeStyle in table', async () => {\n    const controller = Controller.create({\n      value: tableValue,\n      plugins: createBasicBiPlugins({}).array,\n    });\n\n    const style = controller.run('getNodeStyle', {\n      node: controller.value.document.getNode('a'),\n      docStyle: {\n        // @ts-ignore\n        docDefaults: {\n          data: {\n            pPr: {\n              spacing: {\n                before: 8,\n                after: 8,\n              },\n            },\n          },\n        },\n      },\n    });\n\n    expect(style).toEqual({\n      ...theme.DEFAULT_SHD_STYLES,\n      backgroundColor: 'red',\n      // 表格内紧凑间距\n      marginTop: theme.spacing.defaultCompactSpacing,\n      marginBottom: theme.spacing.defaultCompactSpacing\n    });\n  });\n  test('getContentStyle', async () => {\n    const controller = Controller.create({\n      value,\n      plugins: plugins.array,\n    });\n\n    const style = controller.run('getContentStyle', {\n      docStyle: {\n        // @ts-ignore\n        docDefaults: {\n          data: {\n            rPr: {\n              sz: 18,\n            },\n          },\n        },\n      },\n    });\n\n    expect(style).toEqual({\n      fontSize: 18,\n    });\n  });\n});\n"],"file":"behaviour.test.js"}