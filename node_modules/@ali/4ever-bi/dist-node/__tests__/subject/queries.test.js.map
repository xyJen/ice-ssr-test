{"version":3,"sources":["../../../../src/__tests__/subject/queries.test.tsx"],"names":["plugins","array","describe","it","value","controller","Controller","create","node","document","nodes","result","query","getLeftToolbarOffset","expect","toBeUndefined","subjectPr","toEqual","x","y","subType"],"mappings":";;;;AACA;;AACA;;AACA;;AACA;;AAJA;AAMA,MAAMA,OAAO,GAAG,gCAAkBC,KAAlC;;WAKM,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,iBADF,CADF,C;;YAiCI;AAAO,EAAA,IAAI,EAAC;AAAZ,iB;;YAqCE;AAAO,EAAA,IAAI,EAAC;AAAZ,iB;;AAzEZC,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BC,EAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC5C,UAAMC,KAAK,OAAX;;AAUA,UAAMC,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCH,MAAAA,KADmC;AAEnCJ,MAAAA;AAFmC,KAAlB,CAAnB;;AAKA,UAAMQ,IAAI,GAAGJ,KAAK,CAACK,QAAN,CAAeC,KAAf,CAAqB,CAArB,CAAb;AACA,UAAMC,MAAM,GAAGN,UAAU,CAACO,KAAX,CAAiBC,6BAAjB,EAAuC;AAAEL,MAAAA;AAAF,KAAvC,CAAf;AACAM,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,aAAf;AACD,GAnBC,CAAF;AAoBAZ,EAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AACjD,UAAMC,KAAK,GACT,qCACE,wCACE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJY,QAAAA,SAAS,EAAE;AACT,gBAAM,QADG;AAET,kBAAQ;AAFC;AADP;AAFR,qBADF,QADF,CADF;;AAqBA,UAAMX,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCH,MAAAA,KADmC;AAEnCJ,MAAAA;AAFmC,KAAlB,CAAnB;;AAKA,UAAMQ,IAAI,GAAGJ,KAAK,CAACK,QAAN,CAAeC,KAAf,CAAqB,CAArB,CAAb;AACA,UAAMC,MAAM,GAAGN,UAAU,CAACO,KAAX,CAAiBC,6BAAjB,EAAuC;AAAEL,MAAAA;AAAF,KAAvC,CAAf;AACAM,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeM,OAAf,CAAuB;AAAEC,MAAAA,CAAC,EAAE,CAAC,EAAN;AAAUC,MAAAA,CAAC,EAAE;AAAb,KAAvB;AACD,GA9BC,CAAF;AA+BAhB,EAAAA,EAAE,CAAC,yCAAD,EAA4C,MAAM;AAClD,UAAMC,KAAK,GACT,qCACE,wCACE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJY,QAAAA,SAAS,EAAE;AACT,gBAAM,QADG;AAET,kBAAQ;AAFC;AADP;AAFR,qBADF,EAYE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJI,QAAAA,OAAO,EAAE;AADL;AAFR,aAZF,CADF,CADF;;AA4BA,UAAMf,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCH,MAAAA,KADmC;AAEnCJ,MAAAA;AAFmC,KAAlB,CAAnB;;AAKA,UAAMQ,IAAI,GAAGJ,KAAK,CAACK,QAAN,CAAeC,KAAf,CAAqB,CAArB,EAAwBA,KAAxB,CAA8B,CAA9B,CAAb;AACA,UAAMC,MAAM,GAAGN,UAAU,CAACO,KAAX,CAAiBC,6BAAjB,EAAuC;AAAEL,MAAAA;AAAF,KAAvC,CAAf;AACAM,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,aAAf;AACD,GArCC,CAAF;AAsCD,CA1FO,CAAR","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Block, Controller, Value } from '@ali/4ever-cangjie';\nimport createBiPlugins from '../../createBiPlugins';\nimport { getLeftToolbarOffset } from '../../plugins/subject/queries';\n\nconst plugins = createBiPlugins().array;\n\ndescribe('Bi/Subject', () => {\n  it('普通段落的 left toolbar offset queries', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type='paragraph'>\n            hello world\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    const node = value.document.nodes[0];\n    const result = controller.query(getLeftToolbarOffset, { node });\n    expect(result).toBeUndefined();\n  });\n  it('议题中包含普通段落的 left toolbar offset queries', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type='heading-1'\n            data={{\n              subjectPr: {\n                \"id\": \"rId100\",\n                \"name\": \"review\"\n              }\n            }}\n          >\n            hello world\n          </block>\n          <block type='paragraph'>\n            hello world\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    const node = value.document.nodes[1];\n    const result = controller.query(getLeftToolbarOffset, { node });\n    expect(result).toEqual({ x: -20, y: 0 });\n  });\n  it('议题中包含黑名单节点的 left toolbar offset queries', () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type='heading-1'\n            data={{\n              subjectPr: {\n                \"id\": \"rId100\",\n                \"name\": \"review\"\n              }\n            }}\n          >\n            hello world\n          </block>\n          <block\n            type='container'\n            data={{\n              subType: 'colorBlocks'\n            }}\n          >\n            <block type='paragraph'>\n              hello world\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    const node = value.document.nodes[1].nodes[0] as Block;\n    const result = controller.query(getLeftToolbarOffset, { node });\n    expect(result).toBeUndefined();\n  });\n});"],"file":"queries.test.js"}