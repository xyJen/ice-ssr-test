{"version":3,"sources":["../../../../src/__tests__/autoSpacing/behaviour.test.tsx"],"names":["plugins","autoSpacing","enable","array","translate","str","describe","in","out","forEach","item","test","value","slice","controller","Controller","create","run","type","data","block","document","nodes","expect","text","toBe","name","before","after","KeyboardEvent","selection","anchor","offset"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Controller, Value, CangjieInputEvent } from '@ali/4ever-cangjie';\nimport { jsx, getHotkeyEvent } from '@ali/4ever-dev-test';\nimport createBiPlugins from '../../createBiPlugins';\n\nconst plugins = createBiPlugins({\n  autoSpacing: {\n    enable: () => true,\n  }\n}).array;\n\nfunction translate(str) {\n  return str === 'en' ? 'en' : 'ä¸­';\n}\n\ndescribe('Bi/autoSpacing/behaviour', () => {\n  describe('insertText', () => {\n    [\n      {\n        in: 'en[zh]zh',\n        out: 'en ä¸­ä¸­',\n      },\n      {\n        in: 'en[zh]en',\n        out: 'en ä¸­ en',\n      },\n      {\n        in: 'zh[zh]zh',\n        out: 'ä¸­ä¸­ä¸­',\n      },\n      {\n        in: 'zh[zh]en',\n        out: 'ä¸­ä¸­ en',\n      },\n      {\n        in: 'zh[en]zh',\n        out: 'ä¸­ en ä¸­',\n      },\n      {\n        in: 'zh[en]en',\n        out: 'ä¸­ enen',\n      },\n      {\n        in: 'en[en]zh',\n        out: 'enen ä¸­',\n      },\n      {\n        in: 'en[en]en',\n        out: 'enenen',\n      }\n      \n    ].forEach(item => {\n      test(item.in, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\" key=\"a\">\n                {translate(item.in.slice(0, 2))}<cursor />{translate(item.in.slice(-2))}\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n  \n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n  \n        controller.run(\n          'onCangjieInput',\n          CangjieInputEvent({\n            type: 'insertText',\n            data: translate(item.in.slice(3, 5)),\n          })\n        );\n  \n        const block = controller.value.document.nodes[0];\n        expect(block.text).toBe(item.out);\n      });\n    });\n   \n    [\n      {\n        name: 'å é¤ååºç©ºæ ¼',\n        before: 'ä¸­ ',\n        after: 'en',\n        in: 'ä¸­',\n        out: 'ä¸­ä¸­ en',\n      }, {\n        name: 'å é¤ååºç©ºæ ¼',\n        before: 'en',\n        after: ' ä¸­',\n        in: 'ä¸­',\n        out: 'en ä¸­ä¸­',\n      }\n    ].forEach(item => {\n      test(item.name, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\" key=\"a\">\n                {item.before}<cursor />{item.after}\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n  \n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n  \n        controller.run(\n          'onCangjieInput',\n          CangjieInputEvent({\n            type: 'insertText',\n            data: item.in,\n          })\n        );\n  \n        const block = controller.value.document.nodes[0];\n        expect(block.text).toBe(item.out);\n      });\n    });\n\n    test('éä¸­åå®¹è¾å¥-æ·»å ç©ºæ ¼', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              en<anchor />en<focus/>en\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onCangjieInput',\n        CangjieInputEvent({\n          type: 'insertText',\n          data: 'ä¸­',\n        })\n      );\n\n      const block = controller.value.document.nodes[0];\n      expect(block.text).toBe('en ä¸­ en');\n    });\n\n    test('éä¸­åå®¹è¾å¥-ä¸æ·»å ç©ºæ ¼', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              ä»ææä»¬å°ä¸¾å <anchor />QQé³ä¹å¹´åº¦<focus/>çå¸\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onCangjieInput',\n        CangjieInputEvent({\n          type: 'insertText',\n          data: 'éé',\n        })\n      );\n\n      const block = controller.value.document.nodes[0];\n      expect(block.text).toBe('ä»ææä»¬å°ä¸¾å ééçå¸');\n    });\n  });\n\n  describe('delete char', () => {\n    [\n      {\n        name: 'å é¤ç¬¬ä¸ä¸ª[backspace]',\n        before: 'ä¸­ e',\n        after: ' en',\n        out: 'ä¸­ en',\n      }, {\n        name: 'å é¤ç¬¬äºä¸ª[backspace]',\n        before: 'en e',\n        after: ' ä¸­',\n        out: 'en ä¸­',\n      }, {\n        name: 'å é¤å¨é¨[backspace]',\n        before: 'ä¸­ e',\n        after: ' ä¸­',\n        out: 'ä¸­ä¸­',\n      }, {\n        name: 'ä¸å é¤[backspace]',\n        before: 'QQ ',\n        after: 'é³ä¹',\n        out: 'QQé³ä¹',\n      }\n    ].forEach(item => {\n      test(item.name, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\" key=\"a\">\n                {item.before}<cursor />{item.after}\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n  \n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n  \n        controller.run(\n          'onKeyDown',\n          // @ts-ignore\n          new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n        );\n  \n        const block = controller.value.document.nodes[0];\n        expect(block.text).toBe(item.out);\n      });\n    });\n\n    [\n      {\n        name: 'å é¤ç¬¬ä¸ä¸ª[delete]',\n        before: 'ä¸­ ',\n        after: 'e en',\n        out: 'ä¸­ en',\n      }, {\n        name: 'å é¤ç¬¬äºä¸ª[delete]',\n        before: 'en ',\n        after: 'e ä¸­',\n        out: 'en ä¸­',\n      }, {\n        name: 'å é¤å¨é¨[delete]',\n        before: 'ä¸­ ',\n        after: 'e ä¸­',\n        out: 'ä¸­ä¸­',\n      }\n    ].forEach(item => {\n      test(item.name, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\" key=\"a\">\n                {item.before}<cursor />{item.after}\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n  \n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n  \n        controller.run(\n          'onKeyDown',\n          // @ts-ignore\n          new KeyboardEvent('keydown', getHotkeyEvent('delete')),\n        );\n  \n        const block = controller.value.document.nodes[0];\n        expect(block.text).toBe(item.out);\n      });\n    });\n\n    test('éä¸­åå®¹å é¤', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              ä¸­ <anchor />en<focus/> en\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n      );\n\n      const block = controller.value.document.nodes[0];\n      expect(block.text).toBe('ä¸­  en');\n    });\n  });\n\n  describe('delete word', () => {\n    [\n      {\n        name: 'å é¤ç¬¬ä¸ä¸ª[alt+backspace]',\n        before: 'ä¸­ en',\n        after: ' en',\n        out: 'ä¸­ en',\n      }, {\n        name: 'å é¤ç¬¬äºä¸ª[alt+backspace]',\n        before: 'en en',\n        after: ' ä¸­',\n        out: 'en ä¸­',\n      }, {\n        name: 'å é¤å¨é¨[alt+backspace]',\n        before: 'ä¸­ en',\n        after: ' ä¸­',\n        out: 'ä¸­ä¸­',\n      }\n    ].forEach(item => {\n      test(item.name, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\" key=\"a\">\n                {item.before}<cursor />{item.after}\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n  \n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n  \n        controller.run(\n          'onKeyDown',\n          // @ts-ignore\n          new KeyboardEvent('keydown', getHotkeyEvent('mod+backspace')),\n        );\n  \n        const block = controller.value.document.nodes[0];\n        expect(block.text).toBe(item.out);\n      });\n    });\n    \n    [\n      {\n        name: 'å é¤ç¬¬ä¸ä¸ª[alt+delete]',\n        before: 'ä¸­ ',\n        after: 'en en',\n        out: 'ä¸­ en',\n      }, {\n        name: 'å é¤ç¬¬äºä¸ª[alt+delete]',\n        before: 'en ',\n        after: 'en ä¸­',\n        out: 'en ä¸­',\n      }, {\n        name: 'å é¤å¨é¨[alt+delete]',\n        before: 'ä¸­ ',\n        after: 'en ä¸­',\n        out: 'ä¸­ä¸­',\n      }\n    ].forEach(item => {\n      test(item.name, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\" key=\"a\">\n                {item.before}<cursor />{item.after}\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n  \n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n  \n        controller.run(\n          'onKeyDown',\n          // @ts-ignore\n          new KeyboardEvent('keydown', getHotkeyEvent('mod+delete')),\n        );\n  \n        const block = controller.value.document.nodes[0];\n        expect(block.text).toBe(item.out);\n      });\n    });\n  });\n\n  describe('others', () => {\n    test('è¿ç»­ç©ºæ ¼-è¥¿æ', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" key=\"a\">\n              en ä¸­<cursor/> en\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        // @ts-ignore\n        new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n      );\n\n      const block = controller.value.document.nodes[0];\n      expect(block.text).toBe('en en');\n      expect(controller.value.selection.anchor.offset).toBe(3);\n    });\n  });\n});\n"],"file":"behaviour.test.js"}