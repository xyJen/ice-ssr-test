{"version":3,"sources":["../../../../src/__tests__/list/transformNumber.test.ts"],"names":["transformNumber","transformString","ListPlugin","arabicTest","name","type","data","chineseCountingTest","alias","chineseCountingThousandTest","lowerLetterTest","upperLetterTest","lowerRomanTest","upperRomanTest","describe","forEach","it","num","index","expect","toBe","str"],"mappings":"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","sourcesContent":["import { ListPlugin } from '@ali/4ever-bamboo';\n\nconst { transformNumber, transformString } = ListPlugin;\n\nconst arabicTest = {\n  name: '阿拉伯数字',\n  type: 'decimal',\n  data: [1, 5, 8, 11, 34, 67, 99, 105, 137, 1010101],\n};\n\nconst chineseCountingTest = {\n  name: '中文数字1',\n  type: 'chineseCounting',\n  alias: 'chinese',\n  data: [\n    '一',\n    '五',\n    '八',\n    '十一',\n    '三十四',\n    '六十七',\n    '九十九',\n    '一百零五',\n    '一百三十七',\n    '一百零一万零一百零一',\n  ],\n};\n\nconst chineseCountingThousandTest = {\n  ...chineseCountingTest,\n  name: '中文数字2',\n  type: 'chineseCountingThousand',\n};\n\nconst lowerLetterTest = {\n  name: '小写英文数字',\n  type: 'lowerLetter',\n  alias: 'letter',\n  data: ['a', 'e', 'h', 'k', 'ah', 'bo', 'cu', 'da', 'eg', 'belfa'],\n};\n\nconst upperLetterTest = {\n  name: '大写英文数字',\n  type: 'upperLetter',\n  alias: 'letter',\n  data: ['A', 'E', 'H', 'K', 'AH', 'BO', 'CU', 'DA', 'EG', 'BELFA'],\n};\n// 罗马最大\nconst lowerRomanTest = {\n  name: '小写罗马数字',\n  type: 'lowerRoman',\n  alias: 'roman',\n  data: ['i', 'v', 'viii', 'xi', 'xxxiv', 'lxvii', 'xcix', 'cv', 'cxxxvii', 'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmci'],\n};\n\nconst upperRomanTest = {\n  name: '大写罗马数字',\n  type: 'upperRoman',\n  alias: 'roman',\n  data: ['I', 'V', 'VIII', 'XI', 'XXXIV', 'LXVII', 'XCIX', 'CV', 'CXXXVII', 'MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMCI'],\n};\n\ndescribe('list', () => {\n  [\n    chineseCountingTest,\n    chineseCountingThousandTest,\n    lowerLetterTest,\n    upperLetterTest,\n    lowerRomanTest,\n    upperRomanTest,\n  ].forEach(({ name, type, data, alias }) => {\n    describe('有序列表数字转换', () => {\n      it(`阿拉伯数字转${name}`, () => {\n        arabicTest.data.forEach((num, index) => {\n          expect(transformNumber(num, type)).toBe(data[index]);\n        });\n      });\n      it(`${name}转阿拉伯数字`, () => {\n        data.forEach((str, index) => {\n          expect(transformString(str, alias)).toBe(arabicTest.data[index]);\n        });\n      });\n    });\n  });\n});\n"],"file":"transformNumber.test.js"}