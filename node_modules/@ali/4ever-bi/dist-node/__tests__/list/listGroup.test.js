"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everDevTest = require("@ali/4ever-dev-test");

var _react = require("@testing-library/react");

var _editor = _interopRequireDefault(require("../editor"));

var _helper = require("../helper");

/** @jsx jsx */
const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("cursor", null), (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  data: {
    list: {
      listId: 'dn7ncrq6m7j',
      level: 0,
      isOrdered: true,
      listStyleType: 'DEC_LEN_LROM_P'
    },
    uuid: 'uuid1'
  }
}, "aaa"), (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  data: {
    list: {
      listId: 'dn7ncrq6m7j',
      level: 1,
      isOrdered: true,
      listStyleType: 'DEC_LEN_LROM_P'
    }
  }
}, "bbb"), (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  data: {
    list: {
      listId: 'dn7ncrq6m7j',
      level: 1,
      isOrdered: true,
      listStyleType: 'DEC_LEN_LROM_P'
    }
  }
}, "ccc")));

async function clickFoldBtn(content) {
  const foldBtn = content.querySelector('[data-name="group-fold-btn"]');
  const listGroup = content.querySelector('[data-type="list-group"]');

  _everDevTest.fireEvent.click(foldBtn);

  await (0, _react.wait)();
  (0, _helper.triggerTransitionEnd)(listGroup.querySelector('.transition'));
  return listGroup.querySelector('.fold');
}

var _ref = (0, _everDevTest.jsx)(_editor.default, {
  defaultValue: value
});

var _ref2 = (0, _everDevTest.jsx)(_editor.default, {
  defaultValue: value,
  dataUid: 'uid1'
});

describe('list', () => {
  describe('有序列表', () => {
    it(`点击折叠按钮, 可以正常折叠、展开 (不传 uid, 存储在 node.data)`, async () => {
      const {
        content
      } = await (0, _everDevTest.renderEditor)(_ref);
      const foldContent = await clickFoldBtn(content);
      expect(foldContent).not.toBe(null);
      const UnfoldContent = await clickFoldBtn(content);
      expect(UnfoldContent).toBe(null);
    });
    it(`点击折叠按钮, 可以正常折叠、展开 (传入 uid, 存储在 userData)`, async () => {
      const {
        content
      } = await (0, _everDevTest.renderEditor)(_ref2);
      const foldContent = await clickFoldBtn(content);
      expect(foldContent).not.toBe(null);
      const UnfoldContent = await clickFoldBtn(content);
      expect(UnfoldContent).toBe(null);
    });
  });
});
//# sourceMappingURL=listGroup.test.js.map