{"version":3,"sources":["../../../../src/__tests__/list/toggleList.test.tsx"],"names":["origin_value","beforeAll","process","env","RUNTIME_ENV","ToolbarLayout","UITEST_FLAG","afterAll","symbolSelector","HEADING_SZ","generateSymbol","mapping","ListPlugin","CANGJIE_EMPTY","constants","DEFAULT_BULLET_LIST_ARRAY","DEFAULT_NUMBER_LIST_ARRAY","clickToolbar","container","selector","quoteBlockElement","querySelector","fireEvent","click","clickTaskToolbar","describe","value","list","listId","level","isOrdered","listStyleType","name","type","forEach","defaultValue","defaultListArray","enumKey","Object","keys","index","Number","isNaN","it","content","queryByTestId","listSet","element","querySelectorAll","listItems","listItem","idx","listSymbol","format","text","align","dataset","step","repeat","result","expect","textContent","toBe","istasklist","String","listStyle","triggerText","order","editor","cangjieInput","data","start","length","toEqual","lists","generateText","indentElement","isordered","reg","RegExp","replace","selectStatus","textType","headingOption","symbol","style","fontSize","parseInt","SzUtil","fromHeadingType","ind","hanging","trigger","btn","controller","Controller","create","command","Commands","moveToRangeOfDocument","textAlign"],"mappings":";;;;AACA;;AAMA;;AACA;;AACA;;AACA;;AACA;;AAXA;AAaA,IAAIA,YAAJ;AACAC,SAAS,CAAC,MAAM;AACdD,EAAAA,YAAY,GAAGE,OAAO,CAACC,GAAR,CAAYC,WAA3B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,GAA0BC,4BAAcC,WAAxC;AACD,CAHQ,CAAT;AAKAC,QAAQ,CAAC,MAAM;AACbL,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,GAA0BJ,YAA1B;AACD,CAFO,CAAR;AAIA,MAAMQ,cAAc,GAAG,gCAAvB;AAEA,MAAMC,UAAU,GAAG,CACjB,WADiB,EAEjB,WAFiB,EAGjB,WAHiB,EAIjB,WAJiB,EAKjB,WALiB,CAAnB;AAQA,MAAM;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,IAA8BC,sBAApC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBC,sBAA1B;AAEA,MAAMC,yBAAyB,GAAG,CAChC,gBADgC,EAEhC,gBAFgC,EAGhC,gBAHgC,EAIhC,gBAJgC,EAKhC,gBALgC,EAMhC,gBANgC,CAAlC;AAQA,MAAMC,yBAAyB,GAAG,CAChC,gBADgC,EAEhC,gBAFgC,EAGhC,eAHgC,EAIhC,gBAJgC,EAKhC,gBALgC,EAMhC,iBANgC,EAOhC,cAPgC,EAQhC,cARgC,CAAlC;;AAWA,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA2C;AACzC,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,aAAV,CAAwBF,QAAxB,CAA1B;;AACAG,yBAAUC,KAAV,CAAgBH,iBAAhB;AACD;;AAED,SAASI,gBAAT,CAA0BN,SAA1B,EAAqCC,QAArC,EAA+C;AAC7C,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,aAAV,CAAwBF,QAAxB,CAA1B;;AACAG,yBAAUC,KAAV,CAAgBH,iBAAhB;AACD;;WAOS,qC;;YAwCA,oC;;YA0EA,qC;;YAuDA,oC;;YA+HI;AAAO,EAAA,IAAI,EAAC;AAAZ,S;;aAGE,qC;;aAsCJ;AACE,EAAA,IAAI,EAAC;AADP,S;;aAKA;AAAO,EAAA,IAAI,EAAC;AAAZ,SAEE,qCAFF,C;;aAoFE;AAAO,EAAA,IAAI,EAAC;AAAZ,UACK,qCADL,C;;aAyBJ;AAAO,EAAA,IAAI,EAAC;AAAZ,SACI,qCADJ,C;;aAqFM,qC;;aA0BJ,qC;;aAmBA,oC;;aAwBI,qC;;aAEJ,oC;;aA+CE,qC;;aAEJ,oC;;aA8BE,qC;;AAnrBZK,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBA,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrB,UAAMC,KAAK,GACT,qCACE,8CAEE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,IAHP;AAIJC,UAAAA,aAAa,EAAE;AAJX;AADF;AAFR,aAFF,EAeE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,IAHP;AAIJC,UAAAA,aAAa,EAAE;AAJX;AADF;AAFR,aAfF,EA4BE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,IAHP;AAIJC,UAAAA,aAAa,EAAE;AAJX;AADF;AAFR,aA5BF,QADF,CADF;AA+CA,KACE;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,IAFR;AAGEP,MAAAA;AAHF,KADF,EAME;AACEM,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,IAFR;AAGEP,MAAAA;AAHF,KANF,EAWEQ,OAXF,CAWU,CAAC;AAAER,MAAAA,KAAK,EAAES,YAAT;AAAuBH,MAAAA,IAAvB;AAA6BC,MAAAA;AAA7B,KAAD,KAAyC;AAAA,kBAS3C,sBAAC,eAAD;AAAU,QAAA,YAAY,EAAEE;AAAxB,QAT2C;;AACjD,YAAMC,gBAAgB,GACpBH,IAAI,KAAK,IAAT,GAAgBlB,yBAAhB,GAA4CC,yBAD9C;;AAEA,WAAK,MAAMqB,OAAX,IAAsBC,MAAM,CAACC,IAAP,CAAYH,gBAAZ,CAAtB,EAAqD;AACnD,cAAMI,KAAK,GAAGC,MAAM,CAACJ,OAAD,CAApB;AACA,YAAIK,KAAK,CAACF,KAAD,CAAT,EAAkB;AAClB,cAAMT,aAAa,GAAGK,gBAAgB,CAACI,KAAD,CAAtC;AACAG,QAAAA,EAAE,CAAE,iBAAgBX,IAAI,IAAIQ,KAAK,GAAG,CAAZ,CAAe,EAArC,EAAwC,YAAY;AACpD,gBAAM;AAAEtB,YAAAA,SAAF;AAAa0B,YAAAA,OAAb;AAAsBC,YAAAA;AAAtB,cAAwC,MAAM,qCAApD;AAGA5B,UAAAA,YAAY,CACVC,SADU,EAET,4BAA2Be,IAAK,qCAFvB,CAAZ;AAIA,gBAAMa,OAAO,GAAGD,aAAa,CAAE,iBAAF,CAA7B;AACA,gBAAME,OAAO,GAAGD,OAAO,CAACE,gBAAR,CAAyB,iBAAzB,EAA4CR,KAA5C,CAAhB;;AACAlB,iCAAUC,KAAV,CAAgBwB,OAAhB;;AACA,gBAAME,SAAS,GAAG,MAAM,oBAAQ,MAAM;AACpC,mBAAOL,OAAO,CAACI,gBAAR,CAAyB,oBAAzB,CAAP;AACD,WAFuB,CAAxB;AAGAC,UAAAA,SAAS,CAACf,OAAV,CAAkB,CAACgB,QAAD,EAAWC,GAAX,KAAmB;AACnC,kBAAMC,UAAU,GAAGF,QAAQ,CAAC7B,aAAT,CAAuBb,cAAvB,CAAnB;AACA,kBAAM,CAAC6C,MAAD,EAASC,IAAT,EAAeC,KAAf,IAAwB5C,OAAO,CAACoB,aAAD,CAAP,CAAuBoB,GAAvB,CAA9B;AACA,kBAAMtB,KAAK,GAAGqB,QAAQ,EAAEM,OAAV,CAAkB3B,KAAlB,IAA2B,CAAzC;AACA,kBAAM4B,IAAI,GAAI,GAAE,KAAKC,MAAL,CAAY7B,KAAZ,CAAmB,GAAnC;AACA,kBAAM8B,MAAM,GACV1B,IAAI,KAAK,IAAT,GACIvB,cAAc,CAACyC,GAAD,EAAM,CAAN,EAASM,IAAT,EAAe,IAAf,EAAqB1B,aAArB,EAAoC;AAClDsB,cAAAA,MADkD;AAElDC,cAAAA,IAFkD;AAGlDC,cAAAA;AAHkD,aAApC,CADlB,GAMID,IAPN;AAQAM,YAAAA,MAAM,CAACR,UAAU,CAACS,WAAZ,CAAN,CAA+BC,IAA/B,CAAoCH,MAApC;AACD,WAdD;AAeD,SA7BC,CAAF;AA8BD;AACF,KAjDD;;AAhDqB,gBAoGjB,sBAAC,eAAD;AAAU,MAAA,YAAY,EAAEjC;AAAxB,MApGiB;;AAkGrBiB,IAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAY;AACnC,YAAM;AAAEzB,QAAAA,SAAF;AAAa0B,QAAAA;AAAb,UAAyB,MAAM,qCAArC;AAGApB,MAAAA,gBAAgB,CAACN,SAAD,EAAY,qCAAZ,CAAhB;AACA,YAAM,oBAAQ,MAAM;AAClB,cAAM+B,SAAS,GAAGL,OAAO,CAACI,gBAAR,CAAyB,oBAAzB,CAAlB;AACAC,QAAAA,SAAS,CAACf,OAAV,CAAkB,CAACgB,QAAD,EAAWV,KAAX,KAAqB;AACrC,gBAAM;AAAEuB,YAAAA,UAAF;AAAclC,YAAAA;AAAd,cAAwBqB,QAAQ,EAAEM,OAAxC;AACAI,UAAAA,MAAM,CAACG,UAAD,CAAN,CAAmBD,IAAnB,CAAwB,MAAxB;AACAF,UAAAA,MAAM,CAAC/B,KAAD,CAAN,CAAciC,IAAd,CAAmBE,MAAM,CAACxB,KAAD,CAAzB;AACD,SAJD;AAKD,OAPK,CAAN;AAQD,KAbC,CAAF;AAcD,GAhHO,CAAR;AAkHAf,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrB,UAAMC,KAAK,GACT,qCACE,+CAEE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,KAHP;AAIJmC,UAAAA,SAAS,EAAE;AACTZ,YAAAA,MAAM,EAAE,QADC;AAETC,YAAAA,IAAI,EAAE,QAFG;AAGTC,YAAAA,KAAK,EAAE;AAHE,WAJP;AASJxB,UAAAA,aAAa,EAAE;AATX;AADF;AAFR,aAFF,EAoBE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,IAHP;AAIJmC,UAAAA,SAAS,EAAE;AACTZ,YAAAA,MAAM,EAAE,QADC;AAETC,YAAAA,IAAI,EAAE,QAFG;AAGTC,YAAAA,KAAK,EAAE;AAHE,WAJP;AASJxB,UAAAA,aAAa,EAAE;AATX;AADF;AAFR,aApBF,EAsCE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,IAHP;AAIJmC,UAAAA,SAAS,EAAE;AACTZ,YAAAA,MAAM,EAAE,QADC;AAETC,YAAAA,IAAI,EAAE,QAFG;AAGTC,YAAAA,KAAK,EAAE;AAHE,WAJP;AASJxB,UAAAA,aAAa,EAAE;AATX;AADF;AAFR,aAtCF,QADF,CADF;AA8DA,KACE;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,IAFR;AAGEP,MAAAA;AAHF,KADF,EAME;AACEM,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE,IAFR;AAGEP,MAAAA;AAHF,KANF,EAWEQ,OAXF,CAWU,CAAC;AAAER,MAAAA,KAAK,EAAES,YAAT;AAAuBH,MAAAA,IAAvB;AAA6BC,MAAAA;AAA7B,KAAD,KAAyC;AAAA,kBAS3C,sBAAC,eAAD;AAAU,QAAA,YAAY,EAAEE;AAAxB,QAT2C;;AACjD,YAAMC,gBAAgB,GACpBH,IAAI,KAAK,IAAT,GAAgBlB,yBAAhB,GAA4CC,yBAD9C;;AAEA,WAAK,MAAMqB,OAAX,IAAsBC,MAAM,CAACC,IAAP,CAAYH,gBAAZ,CAAtB,EAAqD;AACnD,cAAMI,KAAK,GAAGC,MAAM,CAACJ,OAAD,CAApB;AACA,YAAIK,KAAK,CAACF,KAAD,CAAT,EAAkB;AAClB,cAAMT,aAAa,GAAGK,gBAAgB,CAACI,KAAD,CAAtC;AACAG,QAAAA,EAAE,CAAE,iBAAgBX,IAAI,IAAIQ,KAAK,GAAG,CAAZ,CAAe,EAArC,EAAwC,YAAY;AACpD,gBAAM;AAAEtB,YAAAA,SAAF;AAAa0B,YAAAA,OAAb;AAAsBC,YAAAA;AAAtB,cAAwC,MAAM,qCAApD;AAGA5B,UAAAA,YAAY,CACVC,SADU,EAET,4BAA2Be,IAAK,qCAFvB,CAAZ;AAIA,gBAAMa,OAAO,GAAGD,aAAa,CAAE,iBAAF,CAA7B;AACA,gBAAME,OAAO,GAAGD,OAAO,CAACE,gBAAR,CAAyB,iBAAzB,EAA4CR,KAA5C,CAAhB;;AACAlB,iCAAUC,KAAV,CAAgBwB,OAAhB;;AACA,gBAAME,SAAS,GAAG,MAAM,oBAAQ,MAAM;AACpC,mBAAOL,OAAO,CAACI,gBAAR,CAAyB,oBAAzB,CAAP;AACD,WAFuB,CAAxB;AAGAC,UAAAA,SAAS,CAACf,OAAV,CAAkB,CAACgB,QAAD,EAAWC,GAAX,KAAmB;AACnC,kBAAMC,UAAU,GAAGF,QAAQ,CAAC7B,aAAT,CAAuBb,cAAvB,CAAnB;AACA,kBAAM,CAAC6C,MAAD,EAASC,IAAT,EAAeC,KAAf,IAAwB5C,OAAO,CAACoB,aAAD,CAAP,CAAuBoB,GAAvB,CAA9B;AACA,kBAAMtB,KAAK,GAAGqB,QAAQ,EAAEM,OAAV,CAAkB3B,KAAlB,IAA2B,CAAzC;AACA,kBAAM4B,IAAI,GAAI,GAAE,KAAKC,MAAL,CAAY7B,KAAZ,CAAmB,GAAnC;AACA,kBAAM8B,MAAM,GACV1B,IAAI,KAAK,IAAT,GACIvB,cAAc,CAACyC,GAAD,EAAM,CAAN,EAASM,IAAT,EAAe,IAAf,EAAqB1B,aAArB,EAAoC;AAClDsB,cAAAA,MADkD;AAElDC,cAAAA,IAFkD;AAGlDC,cAAAA;AAHkD,aAApC,CADlB,GAMID,IAPN;AAQAM,YAAAA,MAAM,CAACR,UAAU,CAACS,WAAZ,CAAN,CAA+BC,IAA/B,CAAoCH,MAApC;AACD,WAdD;AAeD,SA7BC,CAAF;AA8BD;AACF,KAjDD;;AA/DqB,gBAmHjB,sBAAC,eAAD;AAAU,MAAA,YAAY,EAAEjC;AAAxB,MAnHiB;;AAiHrBiB,IAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAY;AACnC,YAAM;AAAEzB,QAAAA,SAAF;AAAa0B,QAAAA;AAAb,UAAyB,MAAM,qCAArC;AAGApB,MAAAA,gBAAgB,CAACN,SAAD,EAAY,qCAAZ,CAAhB;AACA,YAAM,oBAAQ,MAAM;AAClB,cAAM+B,SAAS,GAAGL,OAAO,CAACI,gBAAR,CAAyB,oBAAzB,CAAlB;AACAC,QAAAA,SAAS,CAACf,OAAV,CAAkB,CAACgB,QAAD,EAAWV,KAAX,KAAqB;AACrC,gBAAM;AAAEuB,YAAAA,UAAF;AAAclC,YAAAA;AAAd,cAAwBqB,QAAQ,EAAEM,OAAxC;AACAI,UAAAA,MAAM,CAACG,UAAD,CAAN,CAAmBD,IAAnB,CAAwB,MAAxB;AACAF,UAAAA,MAAM,CAAC/B,KAAD,CAAN,CAAciC,IAAd,CAAmBE,MAAM,CAACxB,KAAD,CAAzB;AACD,SAJD;AAKD,OAPK,CAAN;AAQD,KAbC,CAAF;AAcD,GA/HO,CAAR;AAgIAf,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzB,KACE;AACEyC,MAAAA,WAAW,EAAE,IADf;AAEEC,MAAAA,KAAK,EAAE,CAFT;AAGE1C,MAAAA,QAAQ,EAAE;AAHZ,KADF,EAME;AACEyC,MAAAA,WAAW,EAAE,IADf;AAEEC,MAAAA,KAAK,EAAE,CAFT;AAGE1C,MAAAA,QAAQ,EAAE;AAHZ,KANF,EAWE;AACEyC,MAAAA,WAAW,EAAE,IADf;AAEEC,MAAAA,KAAK,EAAE,CAFT;AAGE1C,MAAAA,QAAQ,EAAE;AAHZ,KAXF,EAgBES,OAhBF,CAgBU,OAAO;AAAEgC,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsB1C,MAAAA;AAAtB,KAAP,KAA4C;AAAA,mBA0C5C;AAAO,QAAA,IAAI,EAAC;AAAZ,SACGyC,WADH,SA1C4C;;AACpDvB,MAAAA,EAAE,CAAE,IAAGuB,WAAY,aAAYzC,QAAS,EAAtC,EAAyC,YAAY;AACrD,cAAMC,KAAK,GACT,qCACE,wCACE;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,aADJ;AAEJC,cAAAA,KAAK,EAAE,CAFH;AAGJC,cAAAA,SAAS,EAAE,IAHP;AAIJmC,cAAAA,SAAS,EAAE;AACTZ,gBAAAA,MAAM,EAAE,SADC;AAETC,gBAAAA,IAAI,EAAE,QAFG;AAGTC,gBAAAA,KAAK,EAAE;AAHE,eAJP;AASJxB,cAAAA,aAAa,EAAE;AATX;AADF;AAFR,iBADF,EAmBE;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,IAAI,EAAE;AACJJ,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,aADJ;AAEJC,cAAAA,KAAK,EAAE,CAFH;AAGJC,cAAAA,SAAS,EAAE,IAHP;AAIJmC,cAAAA,SAAS,EAAE;AACTZ,gBAAAA,MAAM,EAAE,SADC;AAETC,gBAAAA,IAAI,EAAE,QAFG;AAGTC,gBAAAA,KAAK,EAAE;AAHE,eAJP;AASJxB,cAAAA,aAAa,EAAE;AATX;AADF;AAFR,iBAnBF,gBADF,CADF;AA+CA,cAAM;AAAEa,UAAAA,OAAF;AAAWwB,UAAAA;AAAX,YAAsB,MAAM,+BAChC,sBAAC,eAAD;AAAU,UAAA,YAAY,EAAE1C;AAAxB,UADgC,CAAlC;;AAGAJ,+BAAU+C,YAAV,CAAuBD,MAAvB,EAA+B;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAA/B;;AACA,cAAM,oBAAQ,MAAM;AAClB,gBAAMrB,SAAS,GAAGL,OAAO,CAACI,gBAAR,CAAyB,sBAAzB,CAAlB;AACA,gBAAM;AAAEuB,YAAAA;AAAF,cAAYtB,SAAS,CAACA,SAAS,CAACuB,MAAV,GAAmB,CAApB,CAAT,CAAgChB,OAAlD;AACAI,UAAAA,MAAM,CAACW,KAAD,CAAN,CAAcE,OAAd,CAAsBT,MAAM,CAACG,KAAD,CAA5B;AACD,SAJK,CAAN;AAKD,OAzDC,CAAF;AA0DD,KA3ED;AA4EAxB,IAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAY;AACnD,YAAMjB,KAAK,GACT,qCACE,wCACE;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE;AACJC,YAAAA,MAAM,EAAE,aADJ;AAEJC,YAAAA,KAAK,EAAE,CAFH;AAGJC,YAAAA,SAAS,EAAE,IAHP;AAIJmC,YAAAA,SAAS,EAAE;AACTZ,cAAAA,MAAM,EAAE,SADC;AAETC,cAAAA,IAAI,EAAE,QAFG;AAGTC,cAAAA,KAAK,EAAE;AAHE,aAJP;AASJxB,YAAAA,aAAa,EAAE;AATX;AADF;AAFR,eADF,iBADF,CADF;AAiCA,YAAM;AAAEa,QAAAA,OAAF;AAAWwB,QAAAA;AAAX,UAAsB,MAAM,+BAChC,sBAAC,eAAD;AAAU,QAAA,YAAY,EAAE1C;AAAxB,QADgC,CAAlC;;AAGAJ,6BAAU+C,YAAV,CAAuBD,MAAvB,EAA+B;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAA/B;;AACA,YAAM,oBAAQ,MAAM;AAClB,cAAMrB,SAAS,GAAGL,OAAO,CAACI,gBAAR,CAAyB,sBAAzB,CAAlB;AACA,cAAM;AAAEuB,UAAAA;AAAF,YAAYtB,SAAS,CAACA,SAAS,CAACuB,MAAV,GAAmB,CAApB,CAAT,CAAgChB,OAAlD;AACAI,QAAAA,MAAM,CAACW,KAAD,CAAN,CAAcE,OAAd,CAAsB,GAAtB;AACD,OAJK,CAAN;AAKD,KA3CC,CAAF;AA4CD,GAzHO,CAAR;AA0HAhD,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzB,KACE;AACEN,MAAAA,QAAQ,EAAE,yBADZ;AAEEgD,MAAAA,KAAK,EAAE,CAFT;AAGE1C,MAAAA,QAAQ,EAAE;AAHZ,KADF,EAMES,OANF,CAMU,OAAO;AAAEf,MAAAA,QAAF;AAAYgD,MAAAA,KAAZ;AAAmB1C,MAAAA;AAAnB,KAAP,KAAyC;AACjDkB,MAAAA,EAAE,CAAE,mBAAkBlB,QAAS,EAA7B,EAAgC,YAAY;AAC5C,cAAMC,KAAK,GACT,qCACE,wCACE;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,aADJ;AAEJC,cAAAA,KAAK,EAAE,CAFH;AAGJC,cAAAA,SAAS,EAAE,KAHP;AAIJmC,cAAAA,SAAS,EAAE;AACTZ,gBAAAA,MAAM,EAAE,QADC;AAETC,gBAAAA,IAAI,EAAE,QAFG;AAGTC,gBAAAA,KAAK,EAAE;AAHE,eAJP;AASJxB,cAAAA,aAAa,EAAE;AATX;AADF;AAFR,iBADF,EAmBE;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,IAAI,EAAE;AACJJ,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,aADJ;AAEJC,cAAAA,KAAK,EAAE,CAFH;AAGJC,cAAAA,SAAS,EAAE,KAHP;AAIJmC,cAAAA,SAAS,EAAE;AACTZ,gBAAAA,MAAM,EAAE,QADC;AAETC,gBAAAA,IAAI,EAAE,QAFG;AAGTC,gBAAAA,KAAK,EAAE;AAHE,eAJP;AASJxB,cAAAA,aAAa,EAAE;AATX;AADF;AAFR,iBAnBF,EAqCE;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,IAAI,EAAE;AACJJ,YAAAA,IAAI,EAAE;AACJC,cAAAA,MAAM,EAAE,aADJ;AAEJC,cAAAA,KAAK,EAAE,CAFH;AAGJC,cAAAA,SAAS,EAAE,KAHP;AAIJmC,cAAAA,SAAS,EAAE;AACTZ,gBAAAA,MAAM,EAAE,QADC;AAETC,gBAAAA,IAAI,EAAE,QAFG;AAGTC,gBAAAA,KAAK,EAAE;AAHE,eAJP;AASJxB,cAAAA,aAAa,EAAE;AATX;AADF;AAFR,iBArCF,SADF,CADF;AA+DA,cAAM;AAAEb,UAAAA,SAAF;AAAa0B,UAAAA;AAAb,YAAyB,MAAM,+BACnC,sBAAC,eAAD;AAAU,UAAA,YAAY,EAAElB;AAAxB,UADmC,CAArC;AAGAT,QAAAA,YAAY,CACVC,SADU,EAET,qCAAoCC,QAAS,EAFpC,CAAZ;AAIA,cAAM,oBAAQ,MAAM;AAClB,gBAAM8B,SAAS,GAAGL,OAAO,CAACI,gBAAR,CAAyB,sBAAzB,CAAlB;AACA,gBAAM;AAAEuB,YAAAA;AAAF,cAAYtB,SAAS,CAACA,SAAS,CAACuB,MAAV,GAAmB,CAApB,CAAT,CAAgChB,OAAlD;AACAI,UAAAA,MAAM,CAACW,KAAD,CAAN,CAAcE,OAAd,CAAsBT,MAAM,CAACG,KAAD,CAA5B;AACD,SAJK,CAAN;AAKD,OA5EC,CAAF;AA6ED,KApFD;AAqFD,GAtFO,CAAR;AAuFAxB,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAY;AAC1C,UAAMjB,KAAK,GACT,qCACE,gDAIE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,IAHP;AAIJmC,UAAAA,SAAS,EAAE;AACTZ,YAAAA,MAAM,EAAE,SADC;AAETC,YAAAA,IAAI,EAAE,QAFG;AAGTC,YAAAA,KAAK,EAAE;AAHE,WAJP;AASJxB,UAAAA,aAAa,EAAE;AATX;AADF;AAFR,aAJF,CADF,CADF;AA2BA,UAAM;AAAEa,MAAAA,OAAF;AAAWwB,MAAAA;AAAX,QAAsB,MAAM,+BAChC,sBAAC,eAAD;AAAU,MAAA,YAAY,EAAE1C;AAAxB,MADgC,CAAlC;;AAIAJ,2BAAU+C,YAAV,CAAuBD,MAAvB,EAA+B;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAA/B;;AACA,UAAM,oBAAQ,MAAM;AAClB,YAAMI,KAAK,GAAG9B,OAAO,CAACI,gBAAR,CAAyB,6BAAzB,CAAd;AACAY,MAAAA,MAAM,CAACc,KAAK,CAACF,MAAP,CAAN,CAAqBV,IAArB,CAA0B,CAA1B;AACD,KAHK,CAAN;AAID,GArCC,CAAF;AAsCArC,EAAAA,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7B,KACE;AACEQ,MAAAA,IAAI,EAAE,kBADR;AAEEiC,MAAAA,WAAW,EAAE,IAFf;AAGES,MAAAA,YAAY,EAAE,IAHhB;AAIExD,MAAAA,QAAQ,EAAE;AAJZ,KADF,EAOE;AACEc,MAAAA,IAAI,EAAE,kBADR;AAEEiC,MAAAA,WAAW,EAAE,IAFf;AAGES,MAAAA,YAAY,EAAE,IAHhB;AAIExD,MAAAA,QAAQ,EAAE;AAJZ,KAPF,EAaE;AACEc,MAAAA,IAAI,EAAE,kBADR;AAEEiC,MAAAA,WAAW,EAAE,KAFf;AAGES,MAAAA,YAAY,EAAE,KAHhB;AAIExD,MAAAA,QAAQ,EAAE;AAJZ,KAbF,EAmBE;AACEc,MAAAA,IAAI,EAAE,kBADR;AAEEiC,MAAAA,WAAW,EAAE,KAFf;AAGES,MAAAA,YAAY,EAAE,KAHhB;AAIExD,MAAAA,QAAQ,EAAE;AAJZ,KAnBF,EAyBE;AACEc,MAAAA,IAAI,EAAE,eADR;AAEEiC,MAAAA,WAAW,EAAE,IAFf;AAGES,MAAAA,YAAY,EAAE,IAHhB;AAIExD,MAAAA,QAAQ,EAAE;AAJZ,KAzBF,EA+BE;AACEc,MAAAA,IAAI,EAAE,kBADR;AAEEiC,MAAAA,WAAW,EAAE,IAFf;AAGES,MAAAA,YAAY,EAAE,IAHhB;AAIExD,MAAAA,QAAQ,EAAE;AAJZ,KA/BF,EAqCE;AACEc,MAAAA,IAAI,EAAE,kBADR;AAEEiC,MAAAA,WAAW,EAAE,IAFf;AAGES,MAAAA,YAAY,EAAE,IAHhB;AAIExD,MAAAA,QAAQ,EAAE;AAJZ,KArCF,EA2CEe,OA3CF,CA2CU,CAAC;AAAED,MAAAA,IAAF;AAAQiC,MAAAA,WAAR;AAAqBS,MAAAA,YAArB;AAAmCxD,MAAAA;AAAnC,KAAD,KAAmD;AAAA,mBAGvD,qCACE,wCACE;AAAO,QAAA,IAAI,EAAC;AAAZ,SACG+C,WADH,SADF,CADF,CAHuD;;AAC3DvB,MAAAA,EAAE,CAAE,KAAIuB,WAAY,YAAWjC,IAAK,EAAlC,EAAqC,YAAY;AACjD,cAAMP,KAAK,SAAX;AAUA,cAAM;AAAEkB,UAAAA,OAAF;AAAWwB,UAAAA;AAAX,YAAsB,MAAM,+BAChC,sBAAC,eAAD;AAAU,UAAA,YAAY,EAAE1C;AAAxB,UADgC,CAAlC;;AAIAJ,+BAAU+C,YAAV,CAAuBD,MAAvB,EAA+B;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAA/B;;AACA,cAAM,oBAAQ,MAAM;AAClB,gBAAMM,aAAa,GAAGhC,OAAO,CAACvB,aAAR,CAAsBF,QAAtB,CAAtB;AACA,gBAAM0D,SAAS,GAAGD,aAAa,EAAEpB,OAAf,CAAuBqB,SAAzC;AACA,gBAAMC,GAAG,GAAGC,MAAM,CAAClE,aAAD,EAAgB,GAAhB,CAAlB;AACA+C,UAAAA,MAAM,CAACiB,SAAD,CAAN,CAAkBf,IAAlB,CACEE,MAAM,CAACY,aAAa,EAAEf,WAAf,CAA2BmB,OAA3B,CAAmCF,GAAnC,EAAwC,EAAxC,MAAgDH,YAAjD,CADR;AAGD,SAPK,CAAN;AAQD,OAxBC,CAAF;AAyBD,KArED;AAsED,GAvEO,CAAR;AAwEAlD,EAAAA,QAAQ,CAAC,+BAAD,EAAkC,MAAM;AAC9C,KACE;AACEC,MAAAA,KAAK,EAAG,qCACN,gDAEE;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE;AACJC,YAAAA,MAAM,EAAE,aADJ;AAEJC,YAAAA,KAAK,EAAE,CAFH;AAGJC,YAAAA,SAAS,EAAE,KAHP;AAIJmC,YAAAA,SAAS,EAAE;AACTZ,cAAAA,MAAM,EAAE,QADC;AAETC,cAAAA,IAAI,EAAE,QAFG;AAGTC,cAAAA,KAAK,EAAE;AAHE,aAJP;AASJxB,YAAAA,aAAa,EAAE;AATX;AADF;AAFR,eAFF,SADM,CADV;AAyBEkD,MAAAA,YAAY,EAAE;AAzBhB,KADF,EA4BE;AACEvD,MAAAA,KAAK,EAAG,qCACN,wCACE;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE;AACJC,YAAAA,MAAM,EAAE,aADJ;AAEJC,YAAAA,KAAK,EAAE,CAFH;AAGJC,YAAAA,SAAS,EAAE,KAHP;AAIJmC,YAAAA,SAAS,EAAE;AACTZ,cAAAA,MAAM,EAAE,QADC;AAETC,cAAAA,IAAI,EAAE,QAFG;AAGTC,cAAAA,KAAK,EAAE;AAHE,aAJP;AASJxB,YAAAA,aAAa,EAAE;AATX;AADF;AAFR,2BADF,SADM,CADV;AAwBEkD,MAAAA,YAAY,EAAE;AAxBhB,KA5BF,EAsDE/C,OAtDF,CAsDU,CAAC;AAAER,MAAAA,KAAF;AAASuD,MAAAA;AAAT,KAAD,KAA6B;AAAA,mBAI/B,sBAAC,eAAD;AAAU,QAAA,YAAY,EAAEvD;AAAxB,QAJ+B;;AACrC,WAAK,MAAMwD,QAAX,IAAuBzE,UAAvB,EAAmC;AACjCkC,QAAAA,EAAE,CAAE,KAAIsC,YAAa,wBAAuBC,QAAS,KAAnD,EAAyD,YAAY;AACrE,gBAAM;AAAEhE,YAAAA,SAAF;AAAa0B,YAAAA,OAAb;AAAsBC,YAAAA;AAAtB,cAAwC,MAAM,sCAApD;AAGA,gBAAM,oBAAQ,MAAMA,aAAa,CAAC,oBAAD,CAA3B,CAAN;AACA5B,UAAAA,YAAY,CAACC,SAAD,EAAY,oCAAZ,CAAZ;AACA,gBAAM,oBAAQ,MAAM2B,aAAa,CAAC,4BAAD,CAA3B,CAAN;AACA,gBAAMsC,aAAa,GAAGtC,aAAa,CAAE,4BAA2BqC,QAAS,EAAtC,CAAnC;;AACA5D,iCAAUC,KAAV,CAAgB4D,aAAhB;;AACA,gBAAM,kBAAN;AACA,gBAAMC,MAAM,GAAGxC,OAAO,CAACvB,aAAR,CAAsB,oBAAtB,CAAf;;AACA,cAAI6D,QAAQ,KAAK,WAAjB,EAA8B;AAC5B;AACAtB,YAAAA,MAAM,CAACwB,MAAM,CAACC,KAAP,CAAaC,QAAd,CAAN,CAA8BxB,IAA9B,CAAmC,EAAnC;AACD,WAHD,MAGO;AACLF,YAAAA,MAAM,CAAC2B,QAAQ,CAACH,MAAM,CAACC,KAAP,CAAaC,QAAd,CAAT,CAAN,CAAwCxB,IAAxC,CAA6C0B,mBAAOC,eAAP,CAAuBP,QAAvB,CAA7C;AACD;AACF,SAjBC,CAAF;AAkBD;AACF,KA3ED;AA6EAvC,IAAAA,EAAE,CAAC,iCAAD,EAAoC,YAAY;AAChD,YAAMjB,KAAK,GAAI,qCACb,wCACE;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAE;AACJC,YAAAA,MAAM,EAAE,aADJ;AAEJC,YAAAA,KAAK,EAAE,CAFH;AAGJC,YAAAA,SAAS,EAAE,KAHP;AAIJmC,YAAAA,SAAS,EAAE;AACTZ,cAAAA,MAAM,EAAE,QADC;AAETC,cAAAA,IAAI,EAAE,QAFG;AAGTC,cAAAA,KAAK,EAAE;AAHE,aAJP;AASJxB,YAAAA,aAAa,EAAE;AATX;AADF;AAFR,2BADF,SADa,CAAf;AAuBA,YAAM;AAAEb,QAAAA,SAAF;AAAa0B,QAAAA;AAAb,UAAyB,MAAM,+BACnC,sBAAC,eAAD;AAAU,QAAA,YAAY,EAAElB;AAAxB,QADmC,CAArC;AAGAT,MAAAA,YAAY,CAACC,SAAD,EAAY,2DAAZ,CAAZ;AACA,YAAM,kBAAN;AACA,YAAMkE,MAAM,GAAGxC,OAAO,CAACvB,aAAR,CAAsB,oBAAtB,CAAf;AACAuC,MAAAA,MAAM,CAACwB,MAAM,CAACC,KAAP,CAAaC,QAAd,CAAN,CAA8BxB,IAA9B,CAAmC,MAAnC;AACD,KA/BC,CAAF;AAgCD,GA9GO,CAAR;AA+GArC,EAAAA,QAAQ,CAAC,+CAAD,EAAkD,MAAM;AAC9D,UAAMC,KAAK,GACT,qCACE,wCACE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,KAHP;AAIJC,UAAAA,aAAa,EAAE;AAJX,SADF;AAOJ2D,QAAAA,GAAG,EAAE;AACHC,UAAAA,OAAO,EAAE;AADN;AAPD;AAFR,qBADF,EAkBE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJhE,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,KAHP;AAIJC,UAAAA,aAAa,EAAE;AAJX;AADF;AAFR,aAlBF,EA+BE;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAE;AACJJ,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,aADJ;AAEJC,UAAAA,KAAK,EAAE,CAFH;AAGJC,UAAAA,SAAS,EAAE,KAHP;AAIJC,UAAAA,aAAa,EAAE;AAJX;AADF;AAFR,aA/BF,CADF,CADF;;AAD8D,iBAoD1D,sBAAC,eAAD;AAAU,MAAA,YAAY,EAAEL;AAAxB,MApD0D;;AAkD9DiB,IAAAA,EAAE,CAAC,MAAD,EAAS,YAAY;AACrB,YAAM;AAAEzB,QAAAA,SAAF;AAAa0B,QAAAA,OAAb;AAAsBC,QAAAA;AAAtB,UAAwC,MAAM,sCAApD,CADqB,CAKrB;;AACA,YAAM+C,OAAO,GAAG1E,SAAS,CAACG,aAAV,CAAwB,kCAAxB,CAAhB;;AACAC,6BAAUC,KAAV,CAAgBqE,OAAhB,EAPqB,CAQrB;;;AACA,YAAMC,GAAG,GAAG,MAAM,oBAAQ,MAAMhD,aAAa,CAAC,+BAAD,CAA3B,CAAlB;;AACAvB,6BAAUC,KAAV,CAAgBsE,GAAhB;;AAEA,YAAMC,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AAAEtE,QAAAA;AAAF,OAAlB,CAAnB;;AACAoE,MAAAA,UAAU,CAACG,OAAX,CAAmBC,sBAASC,qBAA5B;AAEA,YAAM,oBAAQ,MAAMtD,aAAa,CAAC,mBAAD,CAA3B,CAAN;AACA5B,MAAAA,YAAY,CACVC,SADU,EAEV,2DAFU,CAAZ;AAIA,YAAMS,IAAI,GAAGiB,OAAO,CAACI,gBAAR,CAAyB,uBAAzB,CAAb;AAEAY,MAAAA,MAAM,CAACjC,IAAI,CAAC6C,MAAN,CAAN,CAAoBV,IAApB,CAAyB,CAAzB;AACAF,MAAAA,MAAM,CAACjC,IAAI,CAAC,CAAD,CAAJ,CAAQ0D,KAAR,CAAce,SAAf,CAAN,CAAgCtC,IAAhC,CAAqC,QAArC;AACAF,MAAAA,MAAM,CAACjC,IAAI,CAAC,CAAD,CAAJ,CAAQ0D,KAAR,CAAce,SAAf,CAAN,CAAgCtC,IAAhC,CAAqC,MAArC;AACAF,MAAAA,MAAM,CAACjC,IAAI,CAAC,CAAD,CAAJ,CAAQ0D,KAAR,CAAce,SAAf,CAAN,CAAgCtC,IAAhC,CAAqC,MAArC;AACD,KA1BC,CAAF;AA2BD,GA7EO,CAAR;AA8ED,CA/uBO,CAAR","sourcesContent":["/** @jsx jsx */\nimport {\n  fireEvent,\n  getHotkeyEvent,\n  jsx,\n  renderEditor,\n} from '@ali/4ever-dev-test';\nimport { Value, constants, Controller, Commands } from '@ali/4ever-cangjie';\nimport { ListPlugin, SzUtil } from '@ali/4ever-bamboo';\nimport { wait, waitFor } from '@testing-library/react';\nimport BiEditor from '../editor';\nimport { ToolbarLayout } from '@ali/we-design-next';\n\nlet origin_value\nbeforeAll(() => {\n  origin_value = process.env.RUNTIME_ENV;\n  process.env.RUNTIME_ENV = ToolbarLayout.UITEST_FLAG\n})\n\nafterAll(() => {\n  process.env.RUNTIME_ENV = origin_value;\n})\n\nconst symbolSelector = '[data-testid=\"symbol-wrapper\"]';\n\nconst HEADING_SZ = [\n  'heading-1',\n  'heading-2',\n  'heading-3',\n  'heading-4',\n  'paragraph',\n];\n\nconst { generateSymbol, mapping } = ListPlugin;\nconst { CANGJIE_EMPTY } = constants;\n\nconst DEFAULT_BULLET_LIST_ARRAY = [\n  'SCIR_ECIR_SREC',\n  'SFDI_SRIG_SREC',\n  'EREC_EREC_EREC',\n  'SARR_SDIO_SCIR',\n  'SSTA_ECIR_SREC',\n  'SRIG_ECIR_SREC',\n];\nconst DEFAULT_NUMBER_LIST_ARRAY = [\n  'DEC_LEN_LROM_P',\n  'DEC_LEN_LROM_H',\n  'DEC_DEC_DEC_P',\n  'UEN_LEN_LROM_P',\n  'UROM_UEN_DEC_P',\n  'DDEC_LEN_LROM_P',\n  'ZH_DEC_LEN_D',\n  'ZH_DEC_LEN_A',\n];\n\nfunction clickToolbar(container, selector) {\n  const quoteBlockElement = container.querySelector(selector);\n  fireEvent.click(quoteBlockElement);\n}\n\nfunction clickTaskToolbar(container, selector) {\n  const quoteBlockElement = container.querySelector(selector);\n  fireEvent.click(quoteBlockElement);\n}\n\ndescribe('list', () => {\n  describe('有序列表', () => {\n    const value = (\n      <value>\n        <document>\n          <anchor />\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: true,\n                listStyleType: 'DEC_LEN_LROM_P',\n              },\n            }}\n          >\n            aaa\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 1,\n                isOrdered: true,\n                listStyleType: 'DEC_LEN_LROM_P',\n              },\n            }}\n          >\n            bbb\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 2,\n                isOrdered: true,\n                listStyleType: 'DEC_LEN_LROM_P',\n              },\n            }}\n          >\n            ccc\n          </block>\n          <focus />\n        </document>\n      </value>\n    );\n    [\n      {\n        name: '无序列表',\n        type: 'ul',\n        value,\n      },\n      {\n        name: '有序列表',\n        type: 'ol',\n        value,\n      },\n    ].forEach(({ value: defaultValue, name, type }) => {\n      const defaultListArray =\n        type === 'ul' ? DEFAULT_BULLET_LIST_ARRAY : DEFAULT_NUMBER_LIST_ARRAY;\n      for (const enumKey of Object.keys(defaultListArray)) {\n        const index = Number(enumKey);\n        if (isNaN(index)) continue;\n        const listStyleType = defaultListArray[index];\n        it(`选中有序列表类型1 切换为 ${name + (index + 1)}`, async () => {\n          const { container, content, queryByTestId } = await renderEditor(\n            <BiEditor defaultValue={defaultValue} />,\n          );\n          clickToolbar(\n            container,\n            `[data-testid=\"bi-toolbar-${type}list\"] .wdn-toolbar-split-btn-arrow`,\n          );\n          const listSet = queryByTestId(`overlay-ListSet`);\n          const element = listSet.querySelectorAll('[role=\"button\"]')[index];\n          fireEvent.click(element);\n          const listItems = await waitFor(() => {\n            return content.querySelectorAll('[data-testid=list]');\n          });\n          listItems.forEach((listItem, idx) => {\n            const listSymbol = listItem.querySelector(symbolSelector);\n            const [format, text, align] = mapping[listStyleType][idx];\n            const level = listItem?.dataset.level || 0;\n            const step = `${'1.'.repeat(level)}1`;\n            const result =\n              type === 'ol'\n                ? generateSymbol(idx, 1, step, true, listStyleType, {\n                  format,\n                  text,\n                  align,\n                })\n                : text;\n            expect(listSymbol.textContent).toBe(result);\n          });\n        });\n      }\n    });\n    it('选中有序列表类型1 切换为 任务列表', async () => {\n      const { container, content } = await renderEditor(\n        <BiEditor defaultValue={value} />,\n      );\n      clickTaskToolbar(container, '[data-testid=\"bi-toolbar-tasklist\"]');\n      await waitFor(() => {\n        const listItems = content.querySelectorAll('[data-testid=list]');\n        listItems.forEach((listItem, index) => {\n          const { istasklist, level } = listItem?.dataset;\n          expect(istasklist).toBe('true');\n          expect(level).toBe(String(index));\n        });\n      });\n    });\n  });\n\n  describe('无序列表', () => {\n    const value = (\n      <value>\n        <document>\n          <anchor />\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cf',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            aaa\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 1,\n                isOrdered: true,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cb',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            bbb\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 2,\n                isOrdered: true,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25a0',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            ccc\n          </block>\n          <focus />\n        </document>\n      </value>\n    );\n    [\n      {\n        name: '无序列表',\n        type: 'ul',\n        value,\n      },\n      {\n        name: '有序列表',\n        type: 'ol',\n        value,\n      },\n    ].forEach(({ value: defaultValue, name, type }) => {\n      const defaultListArray =\n        type === 'ul' ? DEFAULT_BULLET_LIST_ARRAY : DEFAULT_NUMBER_LIST_ARRAY;\n      for (const enumKey of Object.keys(defaultListArray)) {\n        const index = Number(enumKey);\n        if (isNaN(index)) continue;\n        const listStyleType = defaultListArray[index];\n        it(`选中无序列表类型1 切换为 ${name + (index + 1)}`, async () => {\n          const { container, content, queryByTestId } = await renderEditor(\n            <BiEditor defaultValue={defaultValue} />,\n          );\n          clickToolbar(\n            container,\n            `[data-testid=\"bi-toolbar-${type}list\"] .wdn-toolbar-split-btn-arrow`,\n          );\n          const listSet = queryByTestId(`overlay-ListSet`);\n          const element = listSet.querySelectorAll('[role=\"button\"]')[index];\n          fireEvent.click(element);\n          const listItems = await waitFor(() => {\n            return content.querySelectorAll('[data-testid=list]');\n          });\n          listItems.forEach((listItem, idx) => {\n            const listSymbol = listItem.querySelector(symbolSelector);\n            const [format, text, align] = mapping[listStyleType][idx];\n            const level = listItem?.dataset.level || 0;\n            const step = `${'1.'.repeat(level)}1`;\n            const result =\n              type === 'ol'\n                ? generateSymbol(idx, 1, step, true, listStyleType, {\n                  format,\n                  text,\n                  align,\n                })\n                : text;\n            expect(listSymbol.textContent).toBe(result);\n          });\n        });\n      }\n    });\n    it('选中无序列表类型1 切换为 任务列表', async () => {\n      const { container, content } = await renderEditor(\n        <BiEditor defaultValue={value} />,\n      );\n      clickTaskToolbar(container, '[data-testid=\"bi-toolbar-tasklist\"]');\n      await waitFor(() => {\n        const listItems = content.querySelectorAll('[data-testid=list]');\n        listItems.forEach((listItem, index) => {\n          const { istasklist, level } = listItem?.dataset;\n          expect(istasklist).toBe('true');\n          expect(level).toBe(String(index));\n        });\n      });\n    });\n  });\n  describe('有序列表自动续号', () => {\n    [\n      {\n        triggerText: '1.',\n        order: 1,\n        describe: '则重新编号',\n      },\n      {\n        triggerText: '2.',\n        order: 2,\n        describe: '往前遍历，若不存在列表或数字不连续，则不切换为列表',\n      },\n      {\n        triggerText: '3.',\n        order: 3,\n        describe: '往前遍历，若存在列表且数字连续，则自动续号',\n      },\n    ].forEach(async ({ triggerText, order, describe }) => {\n      it(`在${triggerText} + 空格输入空格，${describe}`, async () => {\n        const value = (\n          <value>\n            <document>\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 0,\n                    isOrdered: true,\n                    listStyle: {\n                      format: 'decimal',\n                      text: '\\u25cf',\n                      align: 'left',\n                    },\n                    listStyleType: 'DEC_LEN_LROM_P',\n                  },\n                }}\n              >\n                aaa\n              </block>\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 0,\n                    isOrdered: true,\n                    listStyle: {\n                      format: 'decimal',\n                      text: '\\u25cf',\n                      align: 'left',\n                    },\n                    listStyleType: 'DEC_LEN_LROM_P',\n                  },\n                }}\n              >\n                bbb\n              </block>\n              <block type=\"paragraph\">ccc</block>\n              <block type=\"paragraph\">\n                {triggerText}\n                <cursor />\n              </block>\n            </document>\n          </value>\n        );\n        const { content, editor } = await renderEditor(\n          <BiEditor defaultValue={value} />,\n        );\n        fireEvent.cangjieInput(editor, { data: ' ' });\n        await waitFor(() => {\n          const listItems = content.querySelectorAll('[data-testid=\"list\"]');\n          const { start } = listItems[listItems.length - 1].dataset;\n          expect(start).toEqual(String(order));\n        });\n      });\n    });\n    it('在 1. xxx + 段落 之后快捷输入 1. + 空格，不自动续号', async () => {\n      const value = (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={{\n                list: {\n                  listId: 'dn7ncrq6m7j',\n                  level: 0,\n                  isOrdered: true,\n                  listStyle: {\n                    format: 'decimal',\n                    text: '\\u25cf',\n                    align: 'left',\n                  },\n                  listStyleType: 'DEC_LEN_LROM_P',\n                },\n              }}\n            >\n              aaa\n            </block>\n            <block\n              type=\"paragraph\"\n            >\n              bbb\n            </block>\n            <block type=\"paragraph\">\n              1.\n              <cursor />\n            </block>\n          </document>\n        </value>\n      );\n      const { content, editor } = await renderEditor(\n        <BiEditor defaultValue={value} />,\n      );\n      fireEvent.cangjieInput(editor, { data: ' ' });\n      await waitFor(() => {\n        const listItems = content.querySelectorAll('[data-testid=\"list\"]');\n        const { start } = listItems[listItems.length - 1].dataset;\n        expect(start).toEqual('1');\n      });\n    });\n  });\n  describe('有序列表自动续号', () => {\n    [\n      {\n        selector: '.wdn-toolbar-split-left',\n        order: 1,\n        describe: '往前遍历，若不存在列表或列表类型不同，则重新生成listId',\n      },\n    ].forEach(async ({ selector, order, describe }) => {\n      it(`通过toolbar添加有序列表，${describe}`, async () => {\n        const value = (\n          <value>\n            <document>\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 0,\n                    isOrdered: false,\n                    listStyle: {\n                      format: 'bullet',\n                      text: '\\u25cf',\n                      align: 'left',\n                    },\n                    listStyleType: 'SCIR_ECIR_SREC',\n                  },\n                }}\n              >\n                aaa\n              </block>\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 0,\n                    isOrdered: false,\n                    listStyle: {\n                      format: 'bullet',\n                      text: '\\u25cf',\n                      align: 'left',\n                    },\n                    listStyleType: 'SCIR_ECIR_SREC',\n                  },\n                }}\n              >\n                bbb\n              </block>\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 0,\n                    isOrdered: false,\n                    listStyle: {\n                      format: 'bullet',\n                      text: '\\u25cf',\n                      align: 'left',\n                    },\n                    listStyleType: 'SCIR_ECIR_SREC',\n                  },\n                }}\n              >\n                ccc\n              </block>\n              <block type=\"paragraph\">\n                ddd<cursor />\n              </block>\n            </document>\n          </value>\n        );\n        const { container, content } = await renderEditor(\n          <BiEditor defaultValue={value} />,\n        );\n        clickToolbar(\n          container,\n          `[data-testid=\"bi-toolbar-ollist\"] ${selector}`,\n        );\n        await waitFor(() => {\n          const listItems = content.querySelectorAll('[data-testid=\"list\"]');\n          const { start } = listItems[listItems.length - 1].dataset;\n          expect(start).toEqual(String(order));\n        });\n      });\n    });\n  });\n  it('在有序列表之前快捷输入 1. + 空格, 自动续号', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            1.<cursor />\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: true,\n                listStyle: {\n                  format: 'decimal',\n                  text: '\\u25cf',\n                  align: 'left',\n                },\n                listStyleType: 'DEC_LEN_LROM_P',\n              },\n            }}\n          >\n            aaa\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    await waitFor(() => {\n      const lists = content.querySelectorAll('[data-listid=\"dn7ncrq6m7j\"]');\n      expect(lists.length).toBe(2);\n    });\n  });\n  describe('有序列表快捷输入切换列表', () => {\n    [\n      {\n        type: '有序列表(数字 + 中文右括号)',\n        triggerText: '1）',\n        generateText: '1)',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(数字 + 英文右括号)',\n        triggerText: '1)',\n        generateText: '1)',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(数字 + 中文全括号)',\n        triggerText: '（1）',\n        generateText: '(1)',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(数字 + 英文全括号)',\n        triggerText: '(1)',\n        generateText: '(1)',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(数字 + 顿号)',\n        triggerText: '1、',\n        generateText: '1、',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(字母 + 中文右括号)',\n        triggerText: 'a）',\n        generateText: 'a)',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(字母 + 英文右括号)',\n        triggerText: 'a)',\n        generateText: 'a)',\n        selector: '[data-testid=list]',\n      },\n    ].forEach(({ type, triggerText, generateText, selector }) => {\n      it(`在 ${triggerText} 后输入空格，生成${type}`, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\">\n                {triggerText}\n                <cursor />\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n        const { content, editor } = await renderEditor(\n          <BiEditor defaultValue={value} />,\n        );\n\n        fireEvent.cangjieInput(editor, { data: ' ' });\n        await waitFor(() => {\n          const indentElement = content.querySelector(selector);\n          const isordered = indentElement?.dataset.isordered;\n          const reg = RegExp(CANGJIE_EMPTY, 'g');\n          expect(isordered).toBe(\n            String(indentElement?.textContent.replace(reg, '') === generateText),\n          );\n        });\n      });\n    });\n  });\n  describe('选中列表内容切换为标题或正文, 项目符号继承标题或正文样式', () => {\n    [\n      {\n        value: (<value>\n          <document>\n            <anchor />\n            <block\n              type=\"paragraph\"\n              data={{\n                list: {\n                  listId: 'dn7ncrq6m7j',\n                  level: 0,\n                  isOrdered: false,\n                  listStyle: {\n                    format: 'bullet',\n                    text: '\\u25cf',\n                    align: 'left',\n                  },\n                  listStyleType: 'SCIR_ECIR_SREC',\n                },\n              }}\n            >\n              aaa\n            </block>\n            <focus />\n          </document>\n        </value>),\n        selectStatus: '全部',\n      },\n      {\n        value: (<value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={{\n                list: {\n                  listId: 'dn7ncrq6m7j',\n                  level: 0,\n                  isOrdered: false,\n                  listStyle: {\n                    format: 'bullet',\n                    text: '\\u25cf',\n                    align: 'left',\n                  },\n                  listStyleType: 'SCIR_ECIR_SREC',\n                },\n              }}\n            >\n              aa<anchor />a\n            </block>\n            <focus />\n          </document>\n        </value>),\n        selectStatus: '部分',\n      },\n    ].forEach(({ value, selectStatus }) => {\n      for (const textType of HEADING_SZ) {\n        it(`选中${selectStatus}列表内容,通过toolbar设置列表内容为${textType}类型，`, async () => {\n          const { container, content, queryByTestId } = await renderEditor(\n            <BiEditor defaultValue={value} />,\n          );\n          await waitFor(() => queryByTestId('bi-toolbar-heading'));\n          clickToolbar(container, '[data-testid=\"bi-toolbar-heading\"]');\n          await waitFor(() => queryByTestId('overlay-bi-toolbar-heading'));\n          const headingOption = queryByTestId(`bi-toolbar-heading__list_${textType}`);\n          fireEvent.click(headingOption);\n          await wait();\n          const symbol = content.querySelector('.symbol-align-left');\n          if (textType === 'paragraph') {\n            // 清除字号，遵从文档默认字号\n            expect(symbol.style.fontSize).toBe('');\n          } else {\n            expect(parseInt(symbol.style.fontSize)).toBe(SzUtil.fromHeadingType(textType));\n          }\n        });\n      }\n    });\n\n    it('符号不带样式的标题列表，切换为其他类型列表，自动继承标题的大小', async () => {\n      const value = (<value>\n        <document>\n          <block\n            type=\"heading-1\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cf',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            aa<anchor />a\n          </block>\n          <focus />\n        </document>\n      </value>)\n      const { container, content } = await renderEditor(\n        <BiEditor defaultValue={value} />,\n      );\n      clickToolbar(container, '[data-testid=\"bi-toolbar-ollist\"] .wdn-toolbar-split-left');\n      await wait();\n      const symbol = content.querySelector('.symbol-align-left');\n      expect(symbol.style.fontSize).toBe('20pt');\n    })\n  });\n  describe('多行列表，每一行设置不同的段落格式，取消多行列表的列表格式后，各行仍保持原有独立的段落格式', () => {\n    const value = (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n              ind: {\n                hanging: 32,\n              },\n            }}\n          >\n            <cursor />\n            aaa\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            bbb\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            ccc\n          </block>\n        </document>\n      </value>\n    );\n    it('多行列表', async () => {\n      const { container, content, queryByTestId } = await renderEditor(\n        <BiEditor defaultValue={value} />,\n      );\n\n      // 打开 alignment 工具栏\n      const trigger = container.querySelector('[data-testid=\"bi-toolbar-align\"]');\n      fireEvent.click(trigger!);\n      // 点击对齐方式\n      const btn = await waitFor(() => queryByTestId('bi-toolbar-align__list_center'));\n      fireEvent.click(btn!);\n\n      const controller = Controller.create({ value });\n      controller.command(Commands.moveToRangeOfDocument);\n\n      await waitFor(() => queryByTestId('bi-toolbar-ullist'));\n      clickToolbar(\n        container,\n        '[data-testid=\"bi-toolbar-ullist\"] .wdn-toolbar-split-left',\n      );\n      const list = content.querySelectorAll('[data-type=paragraph]');\n\n      expect(list.length).toBe(3);\n      expect(list[0].style.textAlign).toBe('center');\n      expect(list[1].style.textAlign).toBe('left');\n      expect(list[2].style.textAlign).toBe('left');\n    });\n  });\n});\n"],"file":"toggleList.test.js"}