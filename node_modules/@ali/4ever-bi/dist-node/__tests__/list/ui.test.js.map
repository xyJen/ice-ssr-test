{"version":3,"sources":["../../../../src/__tests__/list/ui.test.tsx"],"names":["clickCheckbox","content","checkbox","querySelector","fireEvent","click","describe","it","value","list","listId","level","isOrdered","isTaskList","isChecked","queryByTestId","bgColor","window","getComputedStyle","getPropertyValue","expect","toBe","only","data","symbolStyle","color","shd","symbol","bgImage"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport {\n  fireEvent,\n  jsx,\n  renderEditor,\n} from '@ali/4ever-dev-test';\nimport { wait, waitFor } from '@testing-library/react';\nimport BiEditor from '../editor';\n\nfunction clickCheckbox(content) {\n  const checkbox = content.querySelector('.checkbox-uncheck');\n  fireEvent.click(checkbox);\n}\n\ndescribe('列表样式', () => {\n  it('未勾选任务列表', async () => {\n    const value = (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                isTaskList: true,\n                isChecked: false,\n              },\n            }}\n          >\n            aaa\n          </block>\n        </document>\n      </value>\n    );\n\n    const { content, queryByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await waitFor(() => {\n      const checkbox = content.querySelector('.checkbox-uncheck');\n      const bgColor = window.getComputedStyle(checkbox).getPropertyValue('background-color');\n      expect(bgColor).toBe('rgb(255, 255, 255)');\n    });\n  });\n  it('勾选任务列表', async () => {\n    const value = (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                isTaskList: true,\n                isChecked: true,\n              },\n            }}\n          >\n            aaa\n          </block>\n        </document>\n      </value>\n    );\n\n    const { content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n    await wait();\n    const checkbox = content.querySelector('.checkbox-checked');\n    const bgColor = window.getComputedStyle(checkbox).getPropertyValue('background-image');\n    expect(bgColor).toBe('url(https://img.alicdn.com/imgextra/i1/O1CN01cRQ5tR1gY7YOFUWcQ_!!6000000004153-55-tps-11-8.svg)');\n  });\n});\n\ndescribe.only('列表符号样式', () => {\n  it('列表符号存在背景色时，渐变色降级为第一个颜色', async () => {\n    const data = {\n      list: {\n        symbolStyle: {\n          color: '#1133FF__#BBFFAA',\n          shd: '#1133FF',\n        },\n      },\n    };\n\n    const value = (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={data}>\n            A\n          </block>\n        </document>\n      </value>\n    );\n\n    const { queryByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await waitFor(() => {\n      const symbol = queryByTestId('symbol-wrapper');\n\n      const color = window.getComputedStyle(symbol).getPropertyValue('color');\n      const bgColor = window.getComputedStyle(symbol).getPropertyValue('background-color');\n      const bgImage = window.getComputedStyle(symbol).getPropertyValue('background-image');\n\n      expect(color).toBe('rgb(17, 51, 255)');\n      expect(bgColor).toBe('rgb(17, 51, 255)');\n      expect(bgImage).toBe('');\n    });\n  });\n});\n"],"file":"ui.test.js"}