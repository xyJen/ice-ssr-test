"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everDevTest = require("@ali/4ever-dev-test");

var _react = require("@testing-library/react");

var _editor = _interopRequireDefault(require("../editor"));

/** @jsx jsx */
function clickCheckbox(content) {
  const checkbox = content.querySelector('.checkbox-uncheck');

  _everDevTest.fireEvent.click(checkbox);
}

describe('列表样式', () => {
  it('未勾选任务列表', async () => {
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "paragraph",
      data: {
        list: {
          listId: 'dn7ncrq6m7j',
          level: 0,
          isOrdered: false,
          isTaskList: true,
          isChecked: false
        }
      }
    }, "aaa")));
    const {
      content,
      queryByTestId
    } = await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value
    }));
    await (0, _react.waitFor)(() => {
      const checkbox = content.querySelector('.checkbox-uncheck');
      const bgColor = window.getComputedStyle(checkbox).getPropertyValue('background-color');
      expect(bgColor).toBe('rgb(255, 255, 255)');
    });
  });
  it('勾选任务列表', async () => {
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "paragraph",
      data: {
        list: {
          listId: 'dn7ncrq6m7j',
          level: 0,
          isOrdered: false,
          isTaskList: true,
          isChecked: true
        }
      }
    }, "aaa")));
    const {
      content
    } = await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value
    }));
    await (0, _react.wait)();
    const checkbox = content.querySelector('.checkbox-checked');
    const bgColor = window.getComputedStyle(checkbox).getPropertyValue('background-image');
    expect(bgColor).toBe('url(https://img.alicdn.com/imgextra/i1/O1CN01cRQ5tR1gY7YOFUWcQ_!!6000000004153-55-tps-11-8.svg)');
  });
});
describe.only('列表符号样式', () => {
  it('列表符号存在背景色时，渐变色降级为第一个颜色', async () => {
    const data = {
      list: {
        symbolStyle: {
          color: '#1133FF__#BBFFAA',
          shd: '#1133FF'
        }
      }
    };
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "paragraph",
      data: data
    }, "A")));
    const {
      queryByTestId
    } = await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value
    }));
    await (0, _react.waitFor)(() => {
      const symbol = queryByTestId('symbol-wrapper');
      const color = window.getComputedStyle(symbol).getPropertyValue('color');
      const bgColor = window.getComputedStyle(symbol).getPropertyValue('background-color');
      const bgImage = window.getComputedStyle(symbol).getPropertyValue('background-image');
      expect(color).toBe('rgb(17, 51, 255)');
      expect(bgColor).toBe('rgb(17, 51, 255)');
      expect(bgImage).toBe('');
    });
  });
});
//# sourceMappingURL=ui.test.js.map