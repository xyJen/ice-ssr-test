{"version":3,"sources":["../../../../src/__tests__/list/listGroupBehaviour.test.tsx"],"names":["plugins","array","getListData","data","list","listId","level","isOrdered","hideSymbol","isChecked","listStyleType","extraData","describe","title","input","output","fold","forEach","it","controller","Controller","create","value","run","KeyboardEvent","actual","toJSON","expected","setValue","expect","toEqual"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Controller } from '@ali/4ever-cangjie';\nimport { getHotkeyEvent, jsx, waitForTime } from '@ali/4ever-dev-test';\nimport { wait } from '@testing-library/react';\nimport { createBiPlugins } from '../editor';\n\nconst plugins = createBiPlugins().array;\n\n\nconst getListData = (data) => {\n  return {\n    ...data,\n    list: {\n      listId: 'dn7ncrq6m7j',\n      level: 1,\n      isOrdered: true,\n      hideSymbol: false,\n      isChecked: false,\n      listStyleType: 'DEC_LEN_LROM_P',\n      extraData: {},\n      ...data.list,\n    },\n  };\n};\n\ndescribe('list', () => {\n  [\n    {\n      title: '在未折叠的列表节点末尾按 Enter',\n      input: (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}>\n              aaa\n              <cursor />\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}>\n              aaa\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}>\n              <cursor />\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在未折叠的列表节点内容中间按 Enter',\n      input: (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}>\n              aa<cursor />a\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}>\n              aa\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}>\n              a<cursor />\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在折叠的列表节点内容末尾按 Enter',\n      input: (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={getListData({ list: { level: 0 }, fold: true })}\n            >\n              aaa\n              <cursor />\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={getListData({ list: { level: 0 }, fold: true })}\n            >\n              aaa\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 }})}>\n              <cursor />\n            </block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在折叠的列表节点内容中间按 Enter',\n      input: (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={getListData({ list: { level: 0 }, fold: true })}\n            >\n              aa<cursor />a\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={getListData({ list: { level: 0 }, fold: true })}\n            >\n              aa\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 }})}>\n              a<cursor />\n            </block>\n          </document>\n        </value>\n      ),\n    },\n    {\n      title: '在下个节点是空列表节点 的折叠列表节点内容结束位置按 Enter',\n      input: (\n        <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({ list: { level: 0 }, fold: false })}\n          >\n            aaa\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 }, fold: true })}>\n            bbb<cursor />\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 2 } })}>\n            ccc\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}></block>\n        </document>\n      </value>\n      ),\n      output: (\n        <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({ list: { level: 0 }, fold: false })}\n          >\n            aaa\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 }, fold: true })}>\n            bbb<cursor />\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 2 } })}>\n            ccc\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}></block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}></block>\n        </document>\n      </value>\n      ),\n    },\n  ].forEach(async ({ title, input, output }) => {\n    it(title, async () => {\n      const controller = Controller.create({\n        value: input,\n        plugins,\n      });\n      controller.run(\n        'onKeyDown',\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n      const actual = controller.value.toJSON();\n      const expected = controller.setValue(output).value.toJSON();\n      expect(actual).toEqual(expected);\n    });\n  });\n\n  [\n    {\n      title: '在前一个节点是折叠状态的列表的段落开始位置，按下 BackSpace',\n      input: (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={getListData({ list: { level: 0 }, fold: true })}>\n              aaa\n            </block>\n            <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n              bbb\n            </block>\n            <block type=\"paragraph\"><cursor />ccc</block>\n          </document>\n        </value>\n      ),\n      output: (\n        <value>\n        <document>\n          <block type=\"paragraph\" data={getListData({ list: { level: 0 }, fold: true })}>\n            aaaccc\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n            bbb\n          </block>\n        </document>\n      </value>\n      ),\n    },\n    {\n      title: '在前一个节点是非折叠状态的列表的段落开始位置，按下 BackSpace',\n      input: (\n        <value>\n        <document>\n          <block type=\"paragraph\" data={getListData({ list: { level: 0 }, fold: false })}>\n            aaa\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n            bbb\n          </block>\n          <block type=\"paragraph\"><cursor />ccc</block>\n        </document>\n      </value>\n    ),\n    output: (\n      <value>\n      <document>\n        <block type=\"paragraph\" data={getListData({ list: { level: 0 }, fold: false })}>\n          aaa\n        </block>\n        <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n          bbbccc\n        </block>\n      </document>\n    </value>\n      ),\n    },\n    {\n      title: '在前一个节点是普通列表的段落开始位置，按下 BackSpace',\n      input: (\n        <value>\n        <document>\n          <block type=\"paragraph\" data={getListData({ list: { level: 0 }})}>\n            aaa\n          </block>\n          <block type=\"paragraph\"><cursor />bbb</block>\n        </document>\n      </value>\n    ),\n    output: (\n      <value>\n      <document>\n        <block type=\"paragraph\" data={getListData({ list: { level: 0 } })}>\n          aaabbb\n        </block>\n      </document>\n    </value>\n      ),\n    },\n    {\n      title: '在前面有多个级嵌套的列表的普通段落开始位置，按下 BackSpace',\n      input: (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={getListData({ list: { level: 0 }, fold: false })}>\n            aaa\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 }, fold: true })}>\n            bbb\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 2 } })}>\n            ccc\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n            ddd\n          </block>\n          <block type=\"paragraph\"><cursor />eee</block>\n        </document>\n      </value>\n    ),\n      output: (\n        <value>\n        <document>\n          <block type=\"paragraph\" data={getListData({ list: { level: 0 }, fold: false })}>\n            aaa\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 }, fold: true })}>\n            bbb\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 2 } })}>\n            ccc\n          </block>\n          <block type=\"paragraph\" data={getListData({ list: { level: 1 } })}>\n            dddeee\n          </block>\n        </document>\n      </value>\n      ),\n    }\n  ].forEach(async ({ title, input, output }) => {\n    it(title, async () => {\n      const controller = Controller.create({\n        value: input,\n        plugins,\n      });\n      controller.run(\n        'onKeyDown',\n        new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n      );\n      const actual = controller.value.toJSON();\n      const expected = controller.setValue(output).value.toJSON();\n      expect(actual).toEqual(expected);\n    });\n  });\n});\n"],"file":"listGroupBehaviour.test.js"}