"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everDevTest = require("@ali/4ever-dev-test");

var _everCangjie = require("@ali/4ever-cangjie");

var _createListMenu = require("@ali/4ever-plugin-list/src/bi/components/createListMenu");

var _createBiPlugins = _interopRequireDefault(require("../../createBiPlugins"));

/** @jsx jsx */
const plugins = (0, _createBiPlugins.default)().array;

var _ref2 = (0, _everDevTest.jsx)("cursor", null);

describe('list menubar', () => {
  [{
    title: '选中任务列表',
    data: {
      list: {
        listId: 'dn7ncrq6m7j',
        level: 0,
        isOrdered: false,
        isTaskList: true,
        isChecked: false
      }
    },
    type: _createListMenu.ListTypeEnum.tlist
  }, {
    title: '选中有序列表',
    data: {
      list: {
        listId: 'dn7ncrq6m7j',
        level: 0,
        isOrdered: true,
        listStyleType: 'DEC_LEN_LROM_P'
      }
    },
    type: _createListMenu.ListTypeEnum.olist
  }, {
    title: '选中无序列表',
    data: {
      list: {
        listId: 'dn7ncrq6m7j',
        level: 0,
        isOrdered: false,
        listStyle: {
          format: 'bullet',
          text: '\u25cf',
          align: 'left'
        },
        listStyleType: 'SCIR_ECIR_SREC'
      }
    },
    type: _createListMenu.ListTypeEnum.ulist
  }, {
    title: '选中普通段落',
    data: {},
    type: _createListMenu.ListTypeEnum.ulist
  }, {
    title: '选中普通段落',
    data: {},
    type: _createListMenu.ListTypeEnum.olist
  }, {
    title: '选中普通段落',
    data: {},
    type: _createListMenu.ListTypeEnum.tlist
  }].forEach(({
    title,
    type,
    data
  }) => {
    var _ref = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "paragraph",
      data: data
    }, "aaa", _ref2)));

    it(title, () => {
      const value = _ref;

      const controller = _everCangjie.Controller.create({
        plugins,
        value
      });

      const result = (0, _createListMenu.getActiveState)(controller, type);

      if (Object.keys(data).length === 0) {
        expect(result).toBe(false);
      } else {
        expect(result).toBe(true);
      }
    });
  });
});
//# sourceMappingURL=menubar.test.js.map