{"version":3,"sources":["../../../../src/__tests__/list/interactive.test.tsx"],"names":["CANGJIE_EMPTY","constants","ROMAN_EXTRA_INDENT","ListPlugin","INDENT_SIZE","IndentPlugin","describe","shortcut","offset","forEach","it","value","list","listId","level","isOrdered","listStyleType","ind","left","content","fireEvent","keyDown","listItems","querySelectorAll","item","index","paddingLeft","style","expect","toBe","romanIndent","type","triggerText","target","selector","editor","cangjieInput","data","indentElement","querySelector","reg","RegExp","textContent","replace"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { constants } from '@ali/4ever-cangjie';\nimport {\n  fireEvent,\n  getHotkeyEvent,\n  jsx,\n  renderEditor,\n} from '@ali/4ever-dev-test';\nimport { ListPlugin, IndentPlugin } from '@ali/4ever-bamboo';\nimport { waitFor } from '@testing-library/react';\nimport BiEditor from '../editor';\n\nconst { CANGJIE_EMPTY } = constants;\nconst { ROMAN_EXTRA_INDENT } = ListPlugin;\nconst { INDENT_SIZE } = IndentPlugin;\n\ndescribe('list', () => {\n  describe('有序列表', () => {\n    [\n      {\n        shortcut: 'tab',\n        describe: '增加',\n        offset: 1,\n      },\n      {\n        shortcut: 'shift+tab',\n        describe: '减少',\n        offset: -1,\n      },\n    ].forEach(({ shortcut, describe, offset }) => {\n      it(`光标在列表第一项，按下${shortcut}后，所有列表项ind.left${describe}一个单位距离，level不变`, async () => {\n        const value = (\n          <value>\n            <document>\n              <cursor />\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 0,\n                    isOrdered: true,\n                    listStyleType: 'DEC_LEN_LROM_P',\n                  },\n                  ind: {\n                    left: 32,\n                  },\n                }}\n              >\n                aaa\n              </block>\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 1,\n                    isOrdered: true,\n                    listStyleType: 'DEC_LEN_LROM_P',\n                  },\n                  ind: {\n                    left: 32,\n                  },\n                }}\n              >\n                bbb\n              </block>\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 2,\n                    isOrdered: true,\n                    listStyleType: 'DEC_LEN_LROM_P',\n                  },\n                  ind: {\n                    left: 32,\n                  },\n                }}\n              >\n                ccc\n              </block>\n            </document>\n          </value>\n        );\n        const { content } = await renderEditor(\n          <BiEditor defaultValue={value} />,\n        );\n        fireEvent.keyDown(content, getHotkeyEvent(shortcut));\n        await waitFor(() => {\n          const listItems = content.querySelectorAll('[data-testid=\"list\"]');\n          listItems.forEach((item, index) => {\n            const { paddingLeft } = item.style;\n            expect(paddingLeft).toBe(`${INDENT_SIZE * (index + 1 + offset)}px`);\n          });\n        });\n      });\n    });\n    [\n      {\n        shortcut: 'tab',\n        describe: '增加',\n        offset: 1,\n        romanIndent: ROMAN_EXTRA_INDENT,\n      },\n      {\n        shortcut: 'shift+tab',\n        describe: '减少',\n        offset: -1,\n        romanIndent: 0,\n      },\n    ].forEach(({ shortcut, describe, offset, romanIndent }) => {\n      it(`光标在列表非第一项，按下${shortcut}后，当前列表项level${describe}一个单位距离，ind.left不变`, async () => {\n        const value = (\n          <value>\n            <document>\n              <cursor />\n              <block\n                type=\"paragraph\"\n                data={{\n                  list: {\n                    listId: 'dn7ncrq6m7j',\n                    level: 1,\n                    isOrdered: true,\n                    listStyleType: 'DEC_LEN_LROM_P',\n                  },\n                }}\n              >\n                aaa\n              </block>\n            </document>\n          </value>\n        );\n        const { content } = await renderEditor(\n          <BiEditor defaultValue={value} />,\n        );\n        fireEvent.keyDown(content, getHotkeyEvent(shortcut));\n        await waitFor(() => {\n          const listItems = content.querySelectorAll('[data-testid=\"list\"]');\n          const { paddingLeft } = listItems[0].style;\n          expect(paddingLeft).toBe(\n            `${INDENT_SIZE * (1 + offset) + romanIndent}px`,\n          );\n        });\n      });\n    });\n    [\n      {\n        type: '有序列表(小写英文 + 英文句号)',\n        triggerText: 'a.',\n        target: 'a.',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(小写英文 + 中文句号)',\n        triggerText: 'a。',\n        target: 'a.',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(大写英文 + 英文句号)',\n        triggerText: 'A.',\n        target: 'A.',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '有序列表(大写英文 + 中文句号)',\n        triggerText: 'A。',\n        target: 'A.',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '无序列表(+)',\n        triggerText: '+',\n        target: '+',\n        selector: '[data-testid=list]',\n      },\n      {\n        type: '无序列表(-)',\n        triggerText: '-',\n        target: '‒',\n        selector: '[data-testid=list]',\n      },\n    ].forEach(async ({ type, triggerText, selector, target }) => {\n      it(`在 ${triggerText} 后输入空格，生成${type}`, async () => {\n        const value = (\n          <value>\n            <document>\n              <block type=\"paragraph\">\n                {triggerText}\n                <cursor />\n              </block>\n            </document>\n          </value>\n        );\n        const { content, editor } = await renderEditor(\n          <BiEditor defaultValue={value} />,\n        );\n\n        fireEvent.cangjieInput(editor, { data: ' ' });\n        await waitFor(() => {\n          const indentElement = content.querySelector(selector);\n          const reg = RegExp(CANGJIE_EMPTY, 'g');\n          expect(indentElement?.textContent.replace(reg, '')).toBe(target);\n        });\n      });\n    });\n  });\n});\n"],"file":"interactive.test.js"}