{"version":3,"sources":["../../../../src/__tests__/list/numbering.test.tsx"],"names":["continueNumbering","OldActions","MIME_TYPES","constants","encodeFragment","transferUtils","plugins","array","OL_LIST_DATA_1","ind","left","list","listId","level","isOrdered","isTaskList","listStyle","format","text","align","hideSymbol","symbolStyle","listStyleType","OL_LIST_DATA_2","UL_LIST_DATA_1","describe","it","value","output","controller","Controller","create","run","actual","toJSON","expected","setValue","expect","toEqual","title","content","result","forEach","type","data","fragment","clipboardData","FRAGMENT","event","items","types","getData","KeyboardEvent"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport {\n  Controller,\n  Value,\n  transferUtils,\n  CangjieInputEvent,\n  constants,\n  CangjieClipboardEvent,\n} from '@ali/4ever-cangjie';\nimport { getHotkeyEvent, jsx, waitForTime } from '@ali/4ever-dev-test';\nimport createBiPlugins from '../../createBiPlugins';\nimport { OldActions } from '@ali/4ever-plugin-list';\n\nconst { continueNumbering } = OldActions;\n\nconst { MIME_TYPES } = constants;\nconst { encodeFragment } = transferUtils;\nconst plugins = createBiPlugins().array;\n\nconst OL_LIST_DATA_1 = {\n  ind: {\n    left: 0,\n  },\n  list: {\n    listId: 'sgdg3hhcv1f',\n    level: 0,\n    isOrdered: true,\n    isTaskList: false,\n    listStyle: {\n      format: 'decimal',\n      text: '%1.',\n      align: 'left',\n    },\n    hideSymbol: false,\n    symbolStyle: {},\n    listStyleType: 'DEC_LEN_LROM_P',\n  },\n};\n\nconst OL_LIST_DATA_2 = {\n  ind: {\n    left: 0,\n  },\n  list: {\n    listId: 'dn7ncrq6m7j',\n    level: 0,\n    isOrdered: true,\n    isTaskList: false,\n    listStyle: {\n      format: 'decimal',\n      text: '%1.',\n      align: 'left',\n    },\n    hideSymbol: false,\n    symbolStyle: {},\n    listStyleType: 'DEC_LEN_LROM_P',\n  },\n};\n\nconst UL_LIST_DATA_1 = {\n  ind: {\n    left: 0,\n  },\n  list: {\n    listId: 'bzbrc33hgd',\n    level: 0,\n    isOrdered: false,\n    isTaskList: false,\n    listStyle: {\n      format: 'bullet',\n      text: '\\u25cf',\n      align: 'left',\n    },\n    hideSymbol: false,\n    symbolStyle: {},\n    listStyleType: 'SCIR_ECIR_SREC',\n  },\n};\n\ndescribe('list', () => {\n  it('跨无序列表, 继续编号, 自动连接到最近的有序列表', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\" data={OL_LIST_DATA_2}><cursor />有序列表2</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}><cursor />有序列表2</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run('onAction', continueNumbering());\n    await waitForTime(1);\n    const actual = controller.value.toJSON();\n    const expected = controller.setValue(output).value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  [\n    {\n      title: '跨无序列表, 输入 \"3 + . \", 序号连接上则自动转为 listId 相同的有序列表',\n      content: '3.',\n      result: <block type=\"paragraph\" data={OL_LIST_DATA_1}><cursor />普通段落</block>,\n    },\n    {\n      title: '跨无序列表, 输入 \"4 + . \", 序号连接不上则保持普通段落',\n      content: '4.',\n      result: <block type=\"paragraph\">4. <cursor />普通段落</block>,\n    },\n  ].forEach(({ title, content, result }) => {\n    it(title, async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n            <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n            <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n            <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n            <block type=\"paragraph\">{content}<cursor />普通段落</block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const output = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n            <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n            <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n            <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n            { result }\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n      controller.run(\n        'onCangjieInput',\n        CangjieInputEvent({\n          type: 'insertText',\n          data: ' ',\n        }),\n      );\n      await waitForTime(1);\n      const actual = controller.value.toJSON();\n      const expected = controller.setValue(output).value.toJSON();\n      expect(actual).toEqual(expected);\n    });\n  });\n\n  it('跨无序列表, 粘贴有序列表 listId 保持不变', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\">\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\" data={UL_LIST_DATA_1}>无序列表1</block>\n          <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const fragment = (\n      <document>\n        <block type=\"paragraph\" data={OL_LIST_DATA_1}>有序列表1</block>\n      </document>\n    );\n\n    const clipboardData = {\n      [MIME_TYPES.FRAGMENT]: encodeFragment(fragment),\n    };\n    const event = CangjieClipboardEvent('cangjiePaste', {\n      clipboardData: {\n        items: [\n          // @ts-ignore\n          { type: MIME_TYPES.FRAGMENT },\n        ],\n        types: [MIME_TYPES.FRAGMENT],\n        data: clipboardData,\n        getData: (format) => {\n          return clipboardData[format];\n        },\n      },\n    });\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run('onCangjiePaste', event);\n    await waitForTime(1);\n    const actual = controller.value.toJSON();\n    const expected = controller.setValue(output).value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  it('在 1.xxx 内容开始位置回车，不生成列表', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\"><cursor />1.有序列表</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\"></block>\n          <block type=\"paragraph\">1.有序列表</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run(\n      'onKeyDown',\n      new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n    );\n    const actual = controller.value.toJSON();\n    const expected = controller.setValue(output).value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n});\n"],"file":"numbering.test.js"}