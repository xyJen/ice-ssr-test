{"version":3,"sources":["../../../../src/__tests__/list/listGroup.test.tsx"],"names":["value","list","listId","level","isOrdered","listStyleType","uuid","clickFoldBtn","content","foldBtn","querySelector","listGroup","fireEvent","click","describe","it","foldContent","expect","not","toBe","UnfoldContent"],"mappings":";;;;AACA;;AAKA;;AACA;;AACA;;AARA;AASA,MAAMA,KAAK,GACT,qCACE,wCACE,qCADF,EAEE;AACE,EAAA,IAAI,EAAC,WADP;AAEE,EAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,aADJ;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,aAAa,EAAE;AAJX,KADF;AAOJC,IAAAA,IAAI,EAAE;AAPF;AAFR,SAFF,EAgBE;AACE,EAAA,IAAI,EAAC,WADP;AAEE,EAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,aADJ;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,aAAa,EAAE;AAJX;AADF;AAFR,SAhBF,EA6BE;AACE,EAAA,IAAI,EAAC,WADP;AAEE,EAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,aADJ;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,aAAa,EAAE;AAJX;AADF;AAFR,SA7BF,CADF,CADF;;AAgDA,eAAeE,YAAf,CAA6BC,OAA7B,EAAsC;AACpC,QAAMC,OAAO,GAAGD,OAAO,CAACE,aAAR,CAAsB,8BAAtB,CAAhB;AACA,QAAMC,SAAS,GAAGH,OAAO,CAACE,aAAR,CAAsB,0BAAtB,CAAlB;;AACAE,yBAAUC,KAAV,CAAgBJ,OAAhB;;AACA,QAAM,kBAAN;AACA,oCAAqBE,SAAS,CAACD,aAAV,CAAwB,aAAxB,CAArB;AACA,SAAOC,SAAS,CAACD,aAAV,CAAwB,OAAxB,CAAP;AACD;;WAMO,sBAAC,eAAD;AAAU,EAAA,YAAY,EAAEV;AAAxB,E;;YAWA,sBAAC,eAAD;AAAU,EAAA,YAAY,EAAEA,KAAxB;AAA+B,EAAA,OAAO,EAAE;AAAxC,E;;AAfRc,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBA,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBC,IAAAA,EAAE,CAAE,2CAAF,EAA8C,YAAY;AAC1D,YAAM;AAAEP,QAAAA;AAAF,UAAc,MAAM,oCAA1B;AAIA,YAAMQ,WAAW,GAAG,MAAMT,YAAY,CAACC,OAAD,CAAtC;AACAS,MAAAA,MAAM,CAACD,WAAD,CAAN,CAAoBE,GAApB,CAAwBC,IAAxB,CAA6B,IAA7B;AAEA,YAAMC,aAAa,GAAG,MAAMb,YAAY,CAACC,OAAD,CAAxC;AACAS,MAAAA,MAAM,CAACG,aAAD,CAAN,CAAsBD,IAAtB,CAA2B,IAA3B;AACD,KAVC,CAAF;AAWAJ,IAAAA,EAAE,CAAE,0CAAF,EAA6C,YAAY;AACzD,YAAM;AAAEP,QAAAA;AAAF,UAAc,MAAM,qCAA1B;AAIA,YAAMQ,WAAW,GAAG,MAAMT,YAAY,CAACC,OAAD,CAAtC;AACAS,MAAAA,MAAM,CAACD,WAAD,CAAN,CAAoBE,GAApB,CAAwBC,IAAxB,CAA6B,IAA7B;AAEA,YAAMC,aAAa,GAAG,MAAMb,YAAY,CAACC,OAAD,CAAxC;AACAS,MAAAA,MAAM,CAACG,aAAD,CAAN,CAAsBD,IAAtB,CAA2B,IAA3B;AACD,KAVC,CAAF;AAWD,GAvBO,CAAR;AAwBD,CAzBO,CAAR","sourcesContent":["/** @jsx jsx */\nimport {\n  fireEvent,\n  jsx,\n  renderEditor,\n} from '@ali/4ever-dev-test';\nimport { wait } from '@testing-library/react';\nimport BiEditor from '../editor';\nimport { triggerTransitionEnd } from '../helper';\nconst value = (\n  <value>\n    <document>\n      <cursor />\n      <block\n        type=\"paragraph\"\n        data={{\n          list: {\n            listId: 'dn7ncrq6m7j',\n            level: 0,\n            isOrdered: true,\n            listStyleType: 'DEC_LEN_LROM_P',\n          },\n          uuid: 'uuid1'\n        }}\n      >\n        aaa\n      </block>\n      <block\n        type=\"paragraph\"\n        data={{\n          list: {\n            listId: 'dn7ncrq6m7j',\n            level: 1,\n            isOrdered: true,\n            listStyleType: 'DEC_LEN_LROM_P',\n          },\n        }}\n      >\n        bbb\n      </block>\n      <block\n        type=\"paragraph\"\n        data={{\n          list: {\n            listId: 'dn7ncrq6m7j',\n            level: 1,\n            isOrdered: true,\n            listStyleType: 'DEC_LEN_LROM_P',\n          },\n        }}\n      >\n        ccc\n      </block>\n    </document>\n  </value>\n);\n\nasync function clickFoldBtn (content) {\n  const foldBtn = content.querySelector('[data-name=\"group-fold-btn\"]');\n  const listGroup = content.querySelector('[data-type=\"list-group\"]');\n  fireEvent.click(foldBtn);\n  await wait();\n  triggerTransitionEnd(listGroup.querySelector('.transition'));\n  return listGroup.querySelector('.fold');\n}\n\ndescribe('list', () => {\n  describe('有序列表', () => {\n    it(`点击折叠按钮, 可以正常折叠、展开 (不传 uid, 存储在 node.data)`, async () => {\n      const { content } = await renderEditor(\n        <BiEditor defaultValue={value} />,\n      );\n      \n      const foldContent = await clickFoldBtn(content);\n      expect(foldContent).not.toBe(null);\n\n      const UnfoldContent = await clickFoldBtn(content);\n      expect(UnfoldContent).toBe(null);\n    });\n    it(`点击折叠按钮, 可以正常折叠、展开 (传入 uid, 存储在 userData)`, async () => {\n      const { content } = await renderEditor(\n        <BiEditor defaultValue={value} dataUid={'uid1'}/>,\n      );\n\n      const foldContent = await clickFoldBtn(content);\n      expect(foldContent).not.toBe(null);\n\n      const UnfoldContent = await clickFoldBtn(content);\n      expect(UnfoldContent).toBe(null);\n    });\n  });\n});\n"],"file":"listGroup.test.js"}