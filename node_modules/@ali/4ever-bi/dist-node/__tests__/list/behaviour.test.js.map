{"version":3,"sources":["../../../../src/__tests__/list/behaviour.test.tsx"],"names":["continueNumbering","restartNumbering","toggleList","OldActions","getListData","OldUtils","MIME_TYPES","constants","encodeFragment","transferUtils","plugins","array","describe","it","value","list","listId","level","isOrdered","listStyle","format","text","align","listStyleType","output","controller","Controller","create","run","KeyboardEvent","type","data","actual","toJSON","expected","setValue","expect","toEqual","extraData","hideSymbol","isChecked","isTaskList","tagType","width","height","metadata","formula","actualListData","document","nodes","listData","triggerText","forEach","valueJSON","prevListId","not","toBe","history","History","undos","length","i","Boolean","ulListData","toInsertListData","fragment","clipboardData","FRAGMENT","event","items","types","getData","mergedLists","filter","n","actualData"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport {\n  Controller,\n  CangjieInputEvent,\n  Value,\n  History,\n  transferUtils,\n  constants,\n  CangjieClipboardEvent,\n} from '@ali/4ever-cangjie';\nimport { getHotkeyEvent, jsx, waitForTime } from '@ali/4ever-dev-test';\nimport { wait } from '@testing-library/react';\nimport createBiPlugins from '../../createBiPlugins';\nimport { OldActions, OldUtils } from '@ali/4ever-plugin-list';\n\nconst { continueNumbering,\n  restartNumbering,\n  toggleList, } = OldActions;\nconst { getListData } = OldUtils;\n\nconst { MIME_TYPES } = constants;\nconst { encodeFragment } = transferUtils;\nconst plugins = createBiPlugins().array;\n\ndescribe('list', async () => {\n  it('列表类型不匹配，快捷输入不转为列表', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cf',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            aaa\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 1,\n                isOrdered: true,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cb',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            bbb\n          </block>\n          <block type=\"paragraph\">\n            3.\n            <cursor />\n            ccc\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cf',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            aaa\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 1,\n                isOrdered: true,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cb',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            bbb\n          </block>\n          <block type=\"paragraph\">\n            3. <cursor />\n            ccc\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run(\n      'onKeyDown',\n      new KeyboardEvent('keydown', getHotkeyEvent('space')),\n    );\n    controller.run(\n      'onCangjieInput',\n      CangjieInputEvent({\n        type: 'insertText',\n        data: ' ',\n      }),\n    );\n    const actual = controller.value.toJSON();\n    const expected = controller.setValue(output).value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n  it('任务列表选中 inline void 节点回车，列表数据不变化', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                extraData: {},\n                hideSymbol: false,\n                isChecked: false,\n                isTaskList: true,\n              },\n            }}\n          >\n            <inline\n              type=\"tag\"\n              data={{\n                tagType: 'formula',\n                width: 98,\n                height: 30,\n                metadata: {\n                  formula: 'c = a + b^2',\n                },\n              }}\n            />\n            <cursor />\n            aaa\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                extraData: {},\n                hideSymbol: false,\n                isChecked: false,\n                isTaskList: true,\n              },\n            }}\n          >\n            <inline\n              type=\"tag\"\n              data={{\n                tagType: 'formula',\n                width: 98,\n                height: 30,\n                metadata: {\n                  formula: 'c = a + b^2',\n                },\n              }}\n            >\n              <cursor />\n            </inline>\n            aaa\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run(\n      'onKeyDown',\n      new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n    );\n\n    const actual = controller.value.toJSON();\n    const expected = controller.setValue(output).value.toJSON();\n    const actualListData = actual.document.nodes[0].data;\n    const listData = expected.document.nodes[0].data;\n    expect(actualListData).toEqual(listData);\n  });\n  [\n    {\n      type: '无序列表',\n      data: {\n        list: {\n          listId: 'dn7ncrq6m7j',\n          level: 0,\n          isOrdered: false,\n          listStyle: {\n            format: 'bullet',\n            text: '\\u25cf',\n            align: 'left',\n          },\n          listStyleType: 'SCIR_ECIR_SREC',\n        },\n      },\n      triggerText: '[]',\n    },\n    {\n      type: '无序列表',\n      triggerText: '[x]',\n      data: {\n        list: {\n          listId: 'dn7ncrq6m7j',\n          level: 0,\n          isOrdered: false,\n          listStyle: {\n            format: 'bullet',\n            text: '\\u25cf',\n            align: 'left',\n          },\n          listStyleType: 'SCIR_ECIR_SREC',\n        },\n      },\n    },\n    {\n      type: '有序列表',\n      triggerText: '[]',\n      data: {\n        list: {\n          listId: 'dn7ncrq6m7j',\n          level: 0,\n          isOrdered: true,\n          listStyleType: 'DEC_LEN_LROM_P',\n        },\n      },\n    },\n    {\n      type: '有序列表',\n      triggerText: '[x]',\n      data: {\n        list: {\n          listId: 'dn7ncrq6m7j',\n          level: 0,\n          isOrdered: true,\n          listStyleType: 'DEC_LEN_LROM_P',\n        },\n      },\n    },\n  ].forEach(({ type, triggerText, data }) => {\n    it(`在${type}之后，生成任务列表的 listId 应该不一样`, async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" data={data}>\n              aaa\n            </block>\n            <block type=\"paragraph\">\n              {triggerText}\n              <cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n      controller.run(\n        'onCangjieInput',\n        CangjieInputEvent({\n          type: 'insertText',\n          data: ' ',\n        }),\n      );\n\n      const valueJSON = controller.value.toJSON();\n      const { listId: prevListId } = valueJSON.document.nodes[0].data.list;\n      const { listId } = valueJSON.document.nodes[1].data.list;\n      expect(listId).not.toBe(prevListId);\n    });\n  });\n});\n\ndescribe('bi/list restartNumbering', () => {\n  it('对列表非首项「重新编号」，产生历史记录，重新编号逻辑正常', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> a.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            <cursor />\n            有序列表 1. -> b.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> c.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 2.\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run('onAction', restartNumbering());\n    await waitForTime(1);\n    const { history = History.create() } = controller.value.data;\n    expect(history.undos.length).toEqual(1);\n\n    // 对节点正确地重新编号\n    const nodes = controller.value.document.nodes;\n    expect(nodes[0].data.list.listId).toBe('a');\n    expect(nodes[1].data.list.listId).toBe('a');\n    expect(nodes[4].data.list.listId).toBe('a');\n    expect(nodes[2].data.list.listId).not.toBe('a');\n    expect(nodes[3].data.list.listId).not.toBe('a');\n    expect(nodes[2].data.list.listId).toEqual(nodes[3].data.list.listId);\n  });\n\n  it('对列表首项「重新编号」，不产生历史记录', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            <cursor />\n            有序列表 1. -> a.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> b.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> c.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 2.\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run('onAction', restartNumbering());\n    await waitForTime(1);\n    const { history = History.create() } = controller.value.data;\n    expect(history.undos.length).toEqual(0);\n  });\n});\n\ndescribe('bi/list continueNumbering', () => {\n  it('对连续的列表 首项「继续编号」，不产生历史记录', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            <cursor />\n            有序列表 1. -> a.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> b.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> c.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 2.\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run('onAction', continueNumbering());\n    await waitForTime(1);\n    const { history = History.create() } = controller.value.data;\n    expect(history.undos.length).toEqual(0);\n  });\n\n  it('对连续的列表 非首项「继续编号」，不产生历史记录', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> a.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            <cursor />\n            有序列表 1. -> b.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> c.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 2.\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run('onAction', continueNumbering());\n    await waitForTime(1);\n    const { history = History.create() } = controller.value.data;\n    expect(history.undos.length).toEqual(0);\n  });\n\n  it('对不连续的列表 中断后起始的那项「继续编号」，产生历史记录，继续编号逻辑正常', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1. -> a.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'otherID',\n            })}\n          >\n            <cursor />\n            有序列表 1. -> a.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'otherID',\n            })}\n          >\n            有序列表 1. -> b.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ol',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 2.\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run('onAction', continueNumbering());\n    await waitForTime(1);\n    const { history = History.create() } = controller.value.data;\n    expect(history.undos.length).toEqual(1);\n\n    // 对节点正确地继续编号\n    const nodes = controller.value.document.nodes;\n    for (let i = 0; i < nodes.length; i++) {\n      expect(nodes[i].data.list.listId).toBe('a');\n    }\n  });\n  it('列表内容输入1.xxx 后回车, 列表 split 后保持列表类型', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 0,\n              type: 'ul',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            有序列表 1.\n          </block>\n          <block\n            type=\"paragraph\"\n            data={getListData({\n              level: 1,\n              type: 'ul',\n              listStyleType: 'DEC_LEN_LROM_P',\n              listId: 'a',\n            })}\n          >\n            1.xxx\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run(\n      'onKeyDown',\n      new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n    );\n    const actual = controller.value.toJSON();\n    const actualListData = actual.document.nodes[1].data;\n    expect(Boolean(actualListData.list)).toEqual(true);\n  });\n  ['1.xxx', 'a.xxx', 'A.xxx'].forEach((text) => {\n    it(`普通段落中输入${text} 后回车, 转成列表类型`, async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              {text}\n              <cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onKeyDown',\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n      const actual = controller.value.toJSON();\n      const actualListData = actual.document.nodes[1].data;\n      expect(Boolean(actualListData.list)).toEqual(true);\n    });\n  });\n\n  it('在空无序列表中插入无序列表, listId 自动合并', async () => {\n    const ulListData = {\n      list: {\n        listId: 'dn7ncrq6m7j',\n        level: 0,\n        isOrdered: false,\n        listStyleType: 'DEC_LEN_LROM_P',\n      },\n    };\n    const toInsertListData = {\n      list: {\n        listId: 'aaa',\n        level: 0,\n        isOrdered: false,\n        listStyleType: 'DEC_LEN_LROM_P',\n      },\n    };\n    [\n      <value>\n        <document>\n          <block type=\"paragraph\" data={ulListData}>\n            a\n          </block>\n          <block type=\"paragraph\">\n            <cursor />\n          </block>\n          <block type=\"paragraph\" data={ulListData}>\n            b\n          </block>\n        </document>\n      </value>,\n    ].forEach(async (value) => {\n      const fragment = ((\n        <document>\n          <block type=\"paragraph\" data={toInsertListData}>\n            c\n          </block>\n          <block type=\"paragraph\" data={toInsertListData}>\n            d\n          </block>\n          <block type=\"paragraph\" data={toInsertListData}>\n            e\n          </block>\n        </document>\n      ) as unknown) as Document;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const clipboardData = {\n        [MIME_TYPES.FRAGMENT]: encodeFragment(fragment),\n      };\n      const event = CangjieClipboardEvent('cangjiePaste', {\n        clipboardData: {\n          items: [\n            // @ts-ignore\n            { type: MIME_TYPES.FRAGMENT },\n          ],\n          types: [MIME_TYPES.FRAGMENT],\n          data: clipboardData,\n          getData: (format) => {\n            return clipboardData[format];\n          },\n        },\n      });\n\n      controller.run('onCangjiePaste', event);\n\n      await waitForTime(10);\n      const actual = controller.value.toJSON();\n      const mergedLists = actual.document.nodes.filter(\n        (n) => n.data?.list?.listId === ulListData.list.listId,\n      );\n      expect(mergedLists.length).toBe(5);\n    });\n  });\n\n  it('普通段落转为表情列表', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    \n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run('onAction', toggleList('ulist', '[茶]'));\n    const actual = controller.value.toJSON();\n    const actualData = actual?.document?.nodes[0].data;\n    expect(actualData?.list.listStyle.text).toEqual('[茶]');\n  });\n});\n"],"file":"behaviour.test.js"}