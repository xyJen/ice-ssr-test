{"version":3,"sources":["../../../../src/__tests__/list/taskList.test.tsx"],"names":["origin_value","beforeAll","process","env","RUNTIME_ENV","ToolbarLayout","UITEST_FLAG","afterAll","clickToolbar","container","selector","quoteBlockElement","querySelector","fireEvent","click","olListData","list","listId","level","isOrdered","listStyleType","describe","it","value","isTaskList","isChecked","content","checkbox","ischecked","dataset","expect","toBe","symbolStyle","bold","listItem","symbolSelector","style","not"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Value } from '@ali/4ever-cangjie';\nimport {\n  renderEditor,\n  fireEvent,\n  jsx,\n} from '@ali/4ever-dev-test';\nimport { waitFor, wait } from '@testing-library/react';\nimport BiEditor from '../editor';\nimport { symbolSelector } from './constants';\nimport { ToolbarLayout } from '@ali/we-design-next';\n\nlet origin_value\nbeforeAll(() => {\n  origin_value = process.env.RUNTIME_ENV;\n  process.env.RUNTIME_ENV = ToolbarLayout.UITEST_FLAG\n})\n\nafterAll(() => {\n  process.env.RUNTIME_ENV = origin_value;\n})\n\nfunction clickToolbar(container, selector) {\n  const quoteBlockElement = container.querySelector(selector);\n  fireEvent.click(quoteBlockElement);\n}\n\nconst olListData = {\n  list: {\n    listId: 'dn7ncrq6m7j',\n    level: 0,\n    isOrdered: true,\n    listStyleType: 'DEC_LEN_LROM_P',\n  },\n};\n\ndescribe('任务列表', () => {\n  it('点击项目符号勾选，勾选正常', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                isTaskList: true,\n                isChecked: false,\n              },\n            }}\n          >\n            aaa\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    const checkbox = content.querySelector('.checkbox-uncheck');\n    fireEvent.click(checkbox);\n\n    await waitFor(() => {\n      const list = content.querySelector('[data-testid=list]');\n      const ischecked = list?.dataset.ischecked;\n      expect(ischecked).toBe('true');\n    });\n  });\n  it('点击项目符号取消勾选，勾选取消', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                isTaskList: true,\n                isChecked: true,\n              },\n            }}\n          >\n            aaa\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    const checkbox = content.querySelector('.checkbox-checked');\n    fireEvent.click(checkbox);\n\n    await waitFor(() => {\n      const list = content.querySelector('[data-testid=list]');\n      const ischecked = list?.dataset.ischecked;\n      expect(ischecked).toBe('false');\n    });\n  });\n\n  it('选中序号是粗体、部分内容是粗体的列表，进行加粗，列表序号保持粗体不变', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                ...olListData.list,\n                symbolStyle: {\n                  bold: true,\n                }\n              }\n            }}\n          >\n            <anchor />\n            <m type=\"bold\">aaa</m>\n            bbb\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const { content, container } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    clickToolbar(container, '[data-testid=\"bi-toolbar-bold\"]');\n    await wait();\n    const listItem = content.querySelector(symbolSelector);\n    expect(listItem.style['font-weight']).toBe('bold');\n    clickToolbar(container, '[data-testid=\"bi-toolbar-bold\"]');\n    await wait();\n    expect(listItem.style['font-weight']).not.toBe('bold');\n  });\n});\n"],"file":"taskList.test.js"}