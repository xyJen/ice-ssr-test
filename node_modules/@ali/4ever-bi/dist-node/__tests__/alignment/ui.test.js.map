{"version":3,"sources":["../../../../src/__tests__/alignment/ui.test.tsx"],"names":["origin_value","beforeAll","process","env","RUNTIME_ENV","ToolbarLayout","UITEST_FLAG","afterAll","createValue","text","cursor","setAlignment","container","queryByTestId","type","trigger","querySelector","fireEvent","click","btn","describe","title","hotKey","forEach","it","content","items","name","para","expect","style","textAlign","toBe","editor","keyDown","textContent","value","mock","onChange","jest","fn","receiveValue","calls","startBlock","data","toEqual","jc","textAlignLast"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport {\n  wait,\n  waitForElement,\n} from '@testing-library/react';\nimport { renderEditor, getHotkeyEvent, jsx, fireEvent } from '@ali/4ever-dev-test';\nimport { Value } from '@ali/4ever-cangjie';\nimport { last } from 'lodash-es';\nimport Editor from '../editor';\nimport { ToolbarLayout } from '@ali/we-design-next';\n\nlet origin_value\nbeforeAll(() => {\n  origin_value = process.env.RUNTIME_ENV;\n  process.env.RUNTIME_ENV = ToolbarLayout.UITEST_FLAG\n})\n\nafterAll(() => {\n  process.env.RUNTIME_ENV = origin_value;\n})\n\n/**\n * 注意不能使用 {cursor === 'start' && <cursor />} 这种语法不然会报错\n * @param text\n * @param cursor 光标的位置\n */\nfunction createValue(text: string, cursor: 'start' | 'end' = 'start') {\n  return (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          {cursor === 'start' ? <cursor /> : null}\n          {text}\n          {cursor === 'end' ? <cursor /> : null}\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value;\n}\n\n/**\n * 打开 alignment 工具栏\n */async function setAlignment (container: HTMLElement, queryByTestId, type) {\n    // 打开 alignment 工具栏\n    const trigger = container.querySelector('[data-testid=\"bi-toolbar-align\"] > div');\n    fireEvent.click(trigger!);\n\n    // 点击对齐方式\n    const btn = await waitForElement(() => queryByTestId(`bi-toolbar-align__list_${type}`));\n    fireEvent.click(btn!);\n }\n\ndescribe('Bi/alignment/ui', () => {\n  [{\n    title: '居中',\n    type: 'center',\n    hotKey: 'e',\n  },\n  {\n    title: '右侧',\n    type: 'right',\n    hotKey: 'r',\n  }, {\n    title: '自动',\n    type: 'justify',\n    hotKey: 'j',\n  }\n].forEach(({ title, type, hotKey }) => {\n    it(`使用按钮切换${title}`, async () => {\n      const { container, content, queryByTestId } = await renderEditor(\n        <Editor\n          defaultValue={createValue('Hello')}\n          singleLayout={[{ items: [{ name: 'alignment' }] }]}\n        />,\n      );\n\n      await setAlignment(container, queryByTestId, type);\n\n      // flush\n      await wait();\n      const para = content.querySelector('[data-type=\"paragraph\"]') as HTMLElement;\n      expect(para.style.textAlign).toBe(type);\n    });\n\n    it(`在行首按backspace撤销${title}`, async () => {\n      const { container, editor, content, queryByTestId } = await renderEditor(\n        <Editor\n          defaultValue={createValue('Hello')}\n          singleLayout={[{ items: [{ name: 'alignment' }] }]}\n        />,\n      );\n\n      await setAlignment(container, queryByTestId, type);\n\n      // flush\n      await wait();\n\n      // 撤销\n      fireEvent.keyDown(editor, getHotkeyEvent('backspace'));\n      await wait();\n\n      const para = content.querySelector('[data-type=\"paragraph\"]') as HTMLElement;\n      expect(para.style.textAlign).toBe('left');\n    });\n\n    it(`使用 ${title} 快捷键`, async () => {\n      const { editor, content } = await renderEditor(\n        <Editor defaultValue={createValue('Hello')} />,\n      );\n\n      fireEvent.keyDown(editor, getHotkeyEvent(`${hotKey}+ctrl+shift`));\n      await wait();\n      const para = content.querySelector('[data-type=\"paragraph\"]') as HTMLElement;\n      expect(para.style.textAlign).toBe(type);\n    });\n  });\n\n  it('在第二行行首能继续删除第一行左对齐的文本', async () => {\n    const { editor, content } = await renderEditor(\n      <Editor\n        defaultValue={createValue('Hello', 'end')}\n      />,\n    );\n\n    fireEvent.keyDown(editor, getHotkeyEvent('enter'));\n    fireEvent.keyDown(editor, getHotkeyEvent('backspace'));\n    fireEvent.keyDown(editor, getHotkeyEvent('backspace'));\n\n    // flush\n    await wait();\n\n    const para = content.querySelector('[data-type=\"paragraph\"]') as HTMLElement;\n    expect(para.textContent).toBe('Hell');\n  });\n\n  it('设置对齐方式不会覆盖节点已有的属性', async () => {\n    const value = (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ mock: true }}>\n            <cursor />Hello\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const onChange = jest.fn();\n    const { container, queryByTestId } = await renderEditor(\n      <Editor\n        defaultValue={value}\n        singleLayout={[{ items: [{ name: 'alignment' }] }]}\n        onChange={onChange}\n      />,\n    );\n\n    await setAlignment(container, queryByTestId, 'center');\n\n    // flush\n    await wait();\n\n    const receiveValue = last(onChange.mock.calls)[0].value as Value;\n    expect(receiveValue.startBlock?.data).toEqual({ mock: true, jc: 'center' });\n  });\n\n  it('distribute 渲染为 justify, 同时加上 text-align-last', async () => {\n    const value = (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ jc: 'distribute' }}>\n            Hello\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const { content } = await renderEditor(<Editor defaultValue={value} />);\n\n    const para = content.querySelector('[data-type=\"paragraph\"]') as HTMLElement;\n\n    expect(para.style.textAlign).toBe('justify');\n    expect(para.style.textAlignLast).toBe('justify');\n  });\n\n  it('居左快捷键可以使段落居左', async () => {\n    const value = (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ jc: 'distribute' }}>\n            Hello\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} />);\n    fireEvent.keyDown(editor, getHotkeyEvent('l+ctrl+shift'));\n\n    await wait();\n\n    const para = content.querySelector('[data-type=\"paragraph\"]') as HTMLElement;\n\n    expect(para.style.textAlign).toBe('left');\n  });\n});\n"],"file":"ui.test.js"}