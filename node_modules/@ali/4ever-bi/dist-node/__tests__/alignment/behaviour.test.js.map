{"version":3,"sources":["../../../../src/__tests__/alignment/behaviour.test.tsx"],"names":["plugins","array","createAlignmentValue","alignment","value","jc","describe","test","controller","Controller","create","expect","toBe","undefined","colsWidth","run","history","History","data","undos","length","toEqual","forEach","align"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Value, Controller, History } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  jsx, waitForTime,\n} from '@ali/4ever-dev-test';\nimport { createBiPlugins } from '../..';\nimport { setAlignment } from '../../plugins/alignment/actions';\nimport getAlignment from '../../plugins/alignment/queries/getAlignment';\n\nconst plugins = createBiPlugins({}).array;\n\nconst createAlignmentValue = (alignment?: string) => ({\n  alignment,\n  value: (\n    <value>\n      <document>\n        <block type=\"paragraph\" data={alignment && { jc: alignment }}><cursor />段落</block>\n      </document>\n    </value>\n  ) as unknown as Value,\n});\n\ndescribe('Bi/alignment/behaviour', () => {\n  describe('queries/getAlignment', () => {\n    test('未设置对齐时，返回左对齐', () => {\n      const { value } = createAlignmentValue();\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n      expect(getAlignment(controller)).toBe('left');\n    });\n\n    test('多个相同对齐样式段落，返回值正确', () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={{ jc: 'center' }}><anchor />段落</block>\n            <block type=\"paragraph\" data={{ jc: 'center' }}><focus />段落</block>\n          </document>\n        </value>\n      );\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n      expect(getAlignment(controller)).toBe('center');\n    });\n\n    test('多个不同对齐样式段落，返回 undefined', () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={{ jc: 'left' }}><anchor />段落</block>\n            <block type=\"paragraph\" data={{ jc: 'center' }}><focus />段落</block>\n          </document>\n        </value>\n      );\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n      expect(getAlignment(controller)).toBe(undefined);\n    });\n\n    test('选中表格内某一列，返回值正常', () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"table\" key=\"table\" data={{\n              colsWidth: [100, 100]\n            }}>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <block type=\"paragraph\" data={{ jc: 'center' }}>段落<anchor /></block>\n                </block>\n                <block type=\"table-cell\">A</block>\n              </block>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <block type=\"paragraph\" data={{ jc: 'center' }}>段落<focus /></block>\n                </block>\n                <block type=\"table-cell\">A</block>\n              </block>\n            </block>\n          </document>\n        </value>\n      );\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n      expect(getAlignment(controller)).toBe('center');\n    });\n  });\n\n  describe('边界场景', () => {\n    test('默认情况下，设置左对齐，不产生 history', async () => {\n      const { value, alignment = 'left' } = createAlignmentValue();\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', setAlignment(alignment));\n      await waitForTime(1);\n      const { history = History.create() } = controller.value.data;\n      expect(history.undos.length).toEqual(0);\n    });\n\n    ['left', 'center', 'right', 'justify'].forEach((align) => {\n      test(`alignment 为 ${align} 时，设置 ${align}，不产生 history`, async () => {\n        const { value, alignment } = createAlignmentValue(align);\n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n\n        controller.run('onAction', setAlignment(alignment));\n        await waitForTime(1);\n        const { history = History.create() } = controller.value.data;\n        expect(history.undos.length).toEqual(0);\n      });\n    });\n  });\n});\n"],"file":"behaviour.test.js"}