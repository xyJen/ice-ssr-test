{"version":3,"sources":["../../../../src/__tests__/link/behaviour.test.tsx"],"names":["jest","mock","fn","mockImplementation","write","mockWrite","plugins","link","locale","addLinkPlaceholder","array","pluginsDisablePurelink","disableTextRecognize","pluginsBlockLinkCard","enableLinkCardBlock","useFakeTimers","afterEach","ClipboardManager","mockClear","describe","test","value","href","output","controller","Controller","create","run","KeyboardEvent","actual","toJSON","preserveSelections","expected","setValue","expect","toEqual","linkPlugin","actions","unwrapLink","document","findDescendant","a","Inline","isInline","key","unwrapLinkCard","wrapLink","src","inline","isElement","type","updateLink","purelink","isText","updatePureLink","maybyPurelink","view","marks","length","data","offsetInNode","cardInfo","displayType","switchDisplayType","updateLinkWithCardInfo","title","copyLink","toHaveBeenCalledTimes","calls","constants","MIME_TYPES","TEXT","list","listId","level","isOrdered","listStyle","format","text","align","listStyleType","HTML","includes","toBeFalsy","cutLink","cardType","height","metadata","Card","isCard","linkCardPlugin","deleteBlockLinkCard"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport mockWrite from './mockfile';\nimport ClipboardManager from '@ali/clipboard-manager';\nimport '@testing-library/jest-dom/extend-expect';\nimport { getHotkeyEvent, jsx } from '@ali/4ever-dev-test';\nimport { Value, Controller, Inline, constants } from '@ali/4ever-cangjie';\nimport createBiPlugins from '../../createBiPlugins';\nimport linkPlugin from '../../plugins/link';\nimport linkCardPlugin from '../../plugins/link/linkCard';\nimport { Card } from '@ali/4ever-mo';\n\njest.mock('@ali/clipboard-manager', () => {\n  return jest.fn().mockImplementation(() => {\n    return ({\n      write: mockWrite\n    });\n  });\n});\n\nconst plugins = createBiPlugins({\n  link: {\n    locale: {\n      addLinkPlaceholder: 'addLinkPlaceholder'\n    },\n  },\n}).array;\n\nconst pluginsDisablePurelink = createBiPlugins({\n  link: {\n    locale: {\n      addLinkPlaceholder: 'addLinkPlaceholder'\n    },\n    disableTextRecognize: true,\n  },\n}).array;\n\nconst pluginsBlockLinkCard = createBiPlugins({\n  link: {\n    locale: {\n      addLinkPlaceholder: 'addLinkPlaceholder'\n    },\n    enableLinkCardBlock: true,\n  },\n}).array;\n\njest.useFakeTimers();\n\nafterEach(() => {\n  ClipboardManager.mockClear();\n  mockWrite.mockClear();\n});\n\ndescribe('Bi/link/behaviour', () => {\n  test('在链接尾部退格，且已经到达链接顶部，删除单个字符', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline type=\"link\" data={{ href: 'https://www.dingtalk.com' }}>\n              link\n            </inline>\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline type=\"link\" data={{ href: 'https://www.dingtalk.com' }}>\n              lin\n            </inline>\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n    );\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('在链接尾部退格，且链接是 placeholder，删除链接节点', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline type=\"link\" data={{ href: '' }}>\n              addLinkPlaceholder\n            </inline>\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n    );\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('在链接尾部退格，且链接仅一个字符，删除链接节点', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline type=\"link\" data={{ href: 'https://www.dingtalk.com' }}>\n              l\n            </inline>\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n    );\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('当链接文本为空时，向前删除文本后，需要删除链接', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk/com' }}\n            >\n              <cursor />\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n    );\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('支持 unwrap 链接的部分', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            one\n            <anchor />\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk/com' }}\n            >\n              two\n              <focus />\n              three\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            onetwo\n            <cursor />\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk/com' }}\n            >\n              three\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run('onAction', linkPlugin.actions.unwrapLink());\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('unwrap 链接,如果 text 部分也是链接，则添加 mark', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk111/com' }}\n            >\n              https://www.ding\n              <focus />\n              talk.com\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <m type=\"unlink\">\n              https://www.dingtalk.com\n            </m>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.unwrapLinkCard(link));\n\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('闭合选区中插入链接，选中选区附近文字（交互参考word）', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，试测试测试测\n            <cursor />\n            试测试测试测试测，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: '' }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run('onAction', linkPlugin.actions.wrapLink());\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('链接中有图片时修改链接地址', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com' }}\n            >\n              link\n              <inline\n                type=\"image\"\n                key=\"image\"\n                data={{\n                  src:\n                    'https://cn.bing.com/az/hprichbg/rb/TeslaCoil_EN-CN1604235004_1920x1080.jpg',\n                }}\n              />\n              link\n            </inline>\n            测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com/233' }}\n            >\n              link\n              <inline\n                type=\"image\"\n                key=\"image\"\n                data={{\n                  src:\n                    'https://cn.bing.com/az/hprichbg/rb/TeslaCoil_EN-CN1604235004_1920x1080.jpg',\n                }}\n              />\n              link\n            </inline>\n            测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const inline = controller.value.document.findDescendant(\n      (a) => a.isElement() && a.type === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updateLink(inline, '', 'https://www.dingtalk.com/233'));\n    const actual = controller.value.document.toJSON({\n      preserveSelections: true,\n    });\n    const expected = controller\n      .setValue(output)\n      .value.document.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('pureLink 更新文本和链接，转为 textlink', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"a\">\n              http://www.baidu.com\n            </text>\n          </block>\n        </document>\n      </value >\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"a\"\n              type=\"link\"\n              data={{ href: 'http://www.baidu' }}\n            >\n              你好\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const purelink = controller.value.document.findDescendant(\n      (a) => a.isText() && a.key === 'a',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updatePureLink(purelink, 0, '你好', 'http://www.baidu', 'http://www.baidu.com'));\n    const actual = controller.value.document.toJSON({\n      preserveSelections: true,\n    });\n    const expected = controller\n      .setValue(output)\n      .value.document.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('pureLink 仅更新链接, 转为 文本为 href 的 textlink', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"a\">\n              http://www.baidu.com\n            </text>\n          </block>\n        </document>\n      </value >\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"a\"\n              type=\"link\"\n              data={{ href: 'http://www.baidu' }}\n            >\n              http://www.baidu\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const purelink = controller.value.document.findDescendant(\n      (a) => a.isText() && a.key === 'a',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updatePureLink(purelink, 0, '', 'http://www.baidu', 'http://www.baidu.com'));\n    const actual = controller.value.document.toJSON({\n      preserveSelections: true,\n    });\n    const expected = controller\n      .setValue(output)\n      .value.document.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('pureLink 仅更新文本, 转为 文本为 href 的 textlink', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"a\">\n              http://www.baidu.com\n            </text>\n          </block>\n        </document>\n      </value >\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"a\"\n              type=\"link\"\n              data={{ href: 'http://www.baidu.com' }}\n            >\n              test\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const purelink = controller.value.document.findDescendant(\n      (a) => a.isText() && a.key === 'a',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updatePureLink(purelink, 0, 'test', 'http://www.baidu.com', 'http://www.baidu.com'));\n    const actual = controller.value.document.toJSON({\n      preserveSelections: true,\n    });\n    const expected = controller\n      .setValue(output)\n      .value.document.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('设置 disableTextRecognize，不会生成 marks', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"a\">\n              http://www.baidu.com\n            </text>\n          </block>\n        </document>\n      </value >\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins: pluginsDisablePurelink,\n    });\n    const maybyPurelink = controller.view.findDescendant(\n      (a) => a.isText() && a.key === 'a',\n    ) as any;\n\n    expect(maybyPurelink.marks.length).toEqual(0);\n  });\n\n  test('未设置 disableTextRecognize，生成对应 marks', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <text key=\"a\">\n              http://www.baidu.com\n            </text>\n          </block>\n        </document>\n      </value >\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const maybyPurelink = controller.view.findDescendant(\n      (a) => a.isText() && a.key === 'a',\n    ) as any;\n\n    expect(maybyPurelink.marks[0]?.type).toEqual('link');\n    expect(maybyPurelink.marks[0]?.data?.href).toEqual('http://www.baidu.com');\n    expect(maybyPurelink.marks[0]?.data?.offsetInNode).toEqual(0);\n  });\n\n  test('卡片取消链接，转换为文本', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n            </inline>\n            ，试测试测试测试测试\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <text>\n              试测试测试测试测试测试测试测\n            </text>\n            ，试测试测试测试测试\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.unwrapLinkCard(link));\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('链接切换为卡片, 替换对应 displayType 为 card', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com' }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.switchDisplayType(link, 'card'));\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('卡片更新 href 信息', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.baidu.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updateLinkWithCardInfo(link, '试测试测试测试测试测试测试测', 'https://www.baidu.com', { displayType: 'card' }));\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('卡片更新 data 信息，data 有效', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card', title: 'xxx' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updateLinkWithCardInfo(link, '试测试测试测试测试测试测试测', 'https://www.dingtalk.com', { title: 'xxx', displayType: 'card' }));\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('卡片更新 data 信息，data 为 {}', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: {} }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updateLinkWithCardInfo(link, '试测试测试测试测试测试测试测', 'https://www.dingtalk.com', {}));\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('卡片更新 text 信息, text 有效', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              foo\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updateLinkWithCardInfo(link, 'foo', 'https://www.dingtalk.com', { displayType: 'card' }));\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('卡片更新 text 信息，text 为空字符串', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              https://www.dingtalk.com\n              <cursor />\n            </inline>\n            ，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n    controller.run('onAction', linkPlugin.actions.updateLinkWithCardInfo(link, '', 'https://www.dingtalk.com', { displayType: 'card' }));\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('复制卡片，text href', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n            </inline>\n            ，试测试测试测试测试\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n\n    controller.run('onAction', linkPlugin.actions.copyLink(link));\n    expect(mockWrite).toHaveBeenCalledTimes(1);\n    expect(mockWrite.mock.calls[0][0][constants.MIME_TYPES.TEXT]).toEqual('https://www.dingtalk.com');\n  });\n\n  test('列表内，复制卡片，不带列表序号', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cf',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n            </inline>\n            ，试测试测试测试测试\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n\n    controller.run('onAction', linkPlugin.actions.copyLink(link));\n    expect(mockWrite).toHaveBeenCalledTimes(1);\n\n    expect(mockWrite.mock.calls[0][0][constants.MIME_TYPES.HTML].includes('<li>')).toBeFalsy();\n  });\n\n  test('列表内，复制链接，不带列表序号', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              list: {\n                listId: 'dn7ncrq6m7j',\n                level: 0,\n                isOrdered: false,\n                listStyle: {\n                  format: 'bullet',\n                  text: '\\u25cf',\n                  align: 'left',\n                },\n                listStyleType: 'SCIR_ECIR_SREC',\n              },\n            }}\n          >\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com' }}\n            >\n              试测试测试测试测试测试测试测\n            </inline>\n            ，试测试测试测试测试\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n\n    controller.run('onAction', linkPlugin.actions.copyLink(link));\n    expect(mockWrite).toHaveBeenCalledTimes(1);\n\n    expect(mockWrite.mock.calls[0][0][constants.MIME_TYPES.HTML].includes('<li>')).toBeFalsy();\n  });\n\n  test('剪切卡片，text href', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n            >\n              试测试测试测试测试测试测试测\n            </inline>\n            ，试测试测试测试测试\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Inline.isInline(a) && a.key === 'link',\n    ) as any;\n\n    controller.run('onAction', linkPlugin.actions.cutLink(link));\n    expect(mockWrite).toHaveBeenCalledTimes(1);\n    expect(mockWrite.mock.calls[0][0][constants.MIME_TYPES.TEXT]).toEqual('https://www.dingtalk.com');\n\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('删除 Block 卡片，留下空行', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"card\" data={{ cardType: 'link', height: 88, metadata: { href:'www.baidu.com', text:'123', cardInfo: { title: 'test' } } }} />\n          <cursor />\n        </document>\n      </value >\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const link = controller.value.document.findDescendant(\n      (a) => Card.isCard(a) && a.data.cardType === 'link',\n    ) as any;\n\n    controller.run('onAction', linkCardPlugin.actions.deleteBlockLinkCard(link));\n\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n});\n"],"file":"behaviour.test.js"}