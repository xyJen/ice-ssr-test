{"version":3,"sources":["../../../../src/__tests__/link/ui.test.tsx"],"names":["origin_value","beforeAll","process","env","RUNTIME_ENV","ToolbarLayout","UITEST_FLAG","afterAll","createBiPlugins","link","linkPlugin","LOCALE","locale","createRangeDescriptor","Object","getOwnPropertyDescriptor","document","defineProperty","configurable","value","range","getClientRects","width","height","top","right","left","bottom","createTextLink","text","href","prefix","suffix","createPureLink","Editor","props","defaultValue","linkConfig","controllerRef","setValue","React","useState","plugins","useMemo","config","hotkey","protocolAllowList","clipboard","pastePanel","handleChange","useCallback","changed","items","name","describe","openLink","jest","fn","spiedWindowOpen","spiedConsoleError","spyOn","console","mockImplementation","window","mockRestore","afterEach","mockReset","initValue","initValueWithSelection","test","queryByTestId","editor","fireEvent","keyDown","linkEditor","input","expect","toHaveFocus","container","linkButton","querySelector","click","activeElement","ownerDocument","nodeName","toBe","textContent","addLinkPlaceholder","queryByText","not","toBeInTheDocument","findByTestId","content","mouseOver","unlinkButton","mouseDown","blankValue","toBeCalledWith","edit","toBeCalled","findByText","prefixText","remove","unlink","visit","mouseEnter","mouseLeave","onLinkCopied","onCopyLink","copy","getEditForm","form","textInput","hrefInput","saveButton","inputChange","getContentText","cangjieInput","data","focus","link2","debug","textLink","HOTKEYS","deleteBackward","deleteForward","paste","enableCard","count","querySelectorAll","length","enter","pastedText","pureLink","pasteAll","type","constants","MIME_TYPES","REFBLOCK","TEXT","forEach","cases","isLink","title","showEditor","encodeURI","it","controller","Controller","create","c","linkNode","findDescendant","Link","linkTitle","linkHref","selection","anchor","key","toEqual","getNextText"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport {\n  wait,\n  cleanup,\n  waitForElement,\n  waitForElementToBeRemoved,\n  waitForDomChange,\n  Matcher,\n  MatcherOptions,\n  waitFor,\n  findByText,\n  findByTestId,\n} from '@testing-library/react';\nimport {\n  renderEditor,\n  getHotkeyEvent,\n  jsx,\n  fireEvent,\n  HOTKEYS,\n  waitForTime,\n} from '@ali/4ever-dev-test';\nimport { Controller, Inline, Value, constants } from '@ali/4ever-cangjie';\nimport * as React from 'react';\nimport linkPlugin from '../../plugins/link';\nimport { createCustomizedBiPlugins, HeadingToolbar, Provider, Content } from '../..';\nimport { LinkPluginConfig } from '../../plugins/link/types';\nimport locale from '../../locales/zh_CN';\nimport { ToolbarLayout } from '@ali/we-design-next';\nimport { Link } from '@ali/4ever-mo';\n\nlet origin_value\nbeforeAll(() => {\n  origin_value = process.env.RUNTIME_ENV;\n  process.env.RUNTIME_ENV = ToolbarLayout.UITEST_FLAG\n})\n\nafterAll(() => {\n  process.env.RUNTIME_ENV = origin_value;\n})\n\ninterface EditorProps {\n  defaultValue: Value;\n  linkConfig?: Partial<LinkPluginConfig>;\n  controllerRef?: (controller: Controller) => void;\n}\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  link: linkPlugin,\n});\n\nconst LOCALE = locale.link.locale;\n\nconst createRangeDescriptor = Object.getOwnPropertyDescriptor(\n  document,\n  'createRange',\n);\n\nbeforeAll(() => {\n  Object.defineProperty(document, 'createRange', {\n    configurable: true,\n    value() {\n      const range = createRangeDescriptor ? createRangeDescriptor.value() : {};\n      return {\n        ...range,\n        getClientRects() {\n          return [\n            {\n              width: 100,\n              height: 60,\n              top: 100,\n              right: 200,\n              left: 200,\n              bottom: 400,\n            },\n          ];\n        },\n      };\n    },\n  });\n});\n\nafterAll(() => {\n  Object.defineProperty(\n    document,\n    'createRange',\n    createRangeDescriptor || {\n      value() {\n        return {};\n      },\n    },\n  );\n});\n\nconst createTextLink = (\n  text = 'DingTalk',\n  href = 'https://www.dingtalk.com',\n  prefix = ' ',\n  suffix = ' ',\n) => {\n  const value = ((\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          {prefix}\n          <inline key=\"link\" type=\"link\" data={{ href }}>\n            {text}\n          </inline>\n          {suffix}\n          <cursor />\n        </block>\n      </document>\n    </value>\n  ) as unknown) as Value;\n  return value;\n};\n\nconst createPureLink = (\n  href = 'https://www.dingtalk.com',\n  prefix = 'before',\n  suffix = 'after',\n) => {\n  const value = ((\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          {`${prefix} ${href} ${suffix}`}\n          <cursor />\n        </block>\n      </document>\n    </value>\n  ) as unknown) as Value;\n  return value;\n};\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { defaultValue, linkConfig = {}, controllerRef } = props;\n  const [value, setValue] = React.useState(defaultValue);\n\n  const plugins = React.useMemo(() => {\n    const config: LinkPluginConfig = {\n      hotkey: 'mod+k',\n      locale: LOCALE,\n      protocolAllowList: ['xxx:', 'http:', 'https:'],\n      ...linkConfig,\n    };\n\n    return createBiPlugins({\n      link: config,\n      clipboard: {\n        pastePanel: true\n      }\n    });\n  }, [linkConfig]);\n\n  const handleChange = React.useCallback((changed) => {\n    setValue(changed.value);\n  }, []);\n\n  return (\n    <Provider controllerRef={controllerRef} plugins={plugins} value={value} onChange={handleChange} autoFocus>\n      <HeadingToolbar\n        singleLayout={[{ items: [{ name: 'link' }] }]}\n      />\n      <Content tabIndex={0} />\n    </Provider>\n  );\n};\n\ndescribe('Bi/link/ui', () => {\n  const openLink = jest.fn();\n  let spiedWindowOpen: jest.SpyInstance;\n  let spiedConsoleError: jest.SpyInstance;\n\n  beforeAll(() => {\n    // 防止被 componentDidCatch catch 的 error 被控制台输出\n    spiedConsoleError = jest.spyOn(console, 'error');\n    spiedConsoleError.mockImplementation(() => { });\n    spiedWindowOpen = jest.spyOn(window, 'open');\n    spiedWindowOpen.mockImplementation(openLink);\n  });\n\n  afterAll(() => {\n    spiedConsoleError.mockRestore();\n    spiedWindowOpen.mockRestore();\n  });\n\n  afterEach(() => {\n    cleanup();\n    openLink.mockReset();\n  });\n\n  describe('插入链接', () => {\n    const initValue = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" />\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const initValueWithSelection = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" >\n            12<anchor />34567<focus />890\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    test('快捷键插入空链接后光标 focus 到「标题地址」中', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={initValue} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      const linkEditor = await waitForElement(() => queryByTestId('link-editor'));\n      // 插入空链接时，光标应该在标题地址中\n      const input = await waitForElement(() => queryByTestId('link-editor-input-text'));\n      expect(input).toHaveFocus();\n    });\n\n    test('工具栏插入空链接后光标 focus 到「标题地址」中', async () => {\n      const { queryByTestId, container } = await renderEditor(\n        <Editor defaultValue={initValue} />,\n      );\n      const linkButton = container.querySelector('[data-testid=\"bi-toolbar-link\"] > div');\n      fireEvent.click(linkButton as HTMLElement);\n      const linkEditor = await waitForElement(() => queryByTestId('link-editor'));\n      // 插入空链接时，光标应该在标题地址中\n      const input = await waitForElement(() => queryByTestId('link-editor-input-text'));\n      expect(input).toHaveFocus();\n    });\n\n    test('首次插入空链接，再次点击编辑器，光标回归编辑器', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={initValue} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      const link = await waitForElement(() => queryByTestId('link'));\n      await waitForElement(() => queryByTestId('link-editor'));\n      fireEvent.click(editor);\n      await waitForElement(() => queryByTestId('link-editor'));\n      const { activeElement } = link.ownerDocument || {};\n      expect(activeElement && activeElement.nodeName === 'TEXTAREA').toBe(true);\n    });\n\n    test('首次插入空链接，再次点击链接，光标focus 到「标题地址」中', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={initValue} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      const link = await waitForElement(() => queryByTestId('link'));\n      await waitForElement(() => queryByTestId('link-editor'));\n      fireEvent.click(link);\n      await waitForElement(() => queryByTestId('link-editor'));\n      const { activeElement } = link.ownerDocument || {};\n      const input = await waitForElement(() => queryByTestId('link-editor-input-text'));\n      expect(input).toHaveFocus();\n    });\n\n    test('快捷键插入链接', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={initValue} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      const link = await waitForElement(() => queryByTestId('link'));\n      expect(link?.textContent).toBe('添加网页链接');\n    });\n    test('有选区状态下快捷键插入链接，光标 focus 到「链接地址」中', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={initValueWithSelection} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      const linkEditor = await waitForElement(() => queryByTestId('link-editor'));\n      const { activeElement } = linkEditor.ownerDocument || {};\n      expect(activeElement && activeElement.nodeName === 'INPUT' && activeElement.name === 'href').toBe(true);\n    });\n\n    test('工具栏插入链接', async () => {\n      const { queryByTestId, container } = await renderEditor(\n        <Editor defaultValue={initValue} />,\n      );\n      const linkButton = container.querySelector('[data-testid=\"bi-toolbar-link\"] > div');\n      fireEvent.click(linkButton as HTMLElement);\n      const link = await waitForElement(() => queryByTestId('link'));\n      expect(link?.textContent).toBe('添加网页链接');\n    });\n    test('有选区状态下工具栏插入链接，光标 focus 到「链接地址」中', async () => {\n      const { queryByTestId, container } = await renderEditor(\n        <Editor defaultValue={initValueWithSelection} />,\n      );\n      const linkButton = container.querySelector('[data-testid=\"bi-toolbar-link\"] > div');\n      fireEvent.click(linkButton as HTMLElement);\n      const linkEditor = await waitForElement(() => queryByTestId('link-editor'));\n      const { activeElement } = linkEditor.ownerDocument || {};\n      expect(activeElement && activeElement.nodeName === 'INPUT' && activeElement.name === 'href').toBe(true);\n    });\n\n    test('自定义预置链接文案', async () => {\n      const { queryByTestId, container } = await renderEditor(\n        <Editor\n          defaultValue={initValue}\n          linkConfig={{ locale: { ...LOCALE, addLinkPlaceholder: 'link' } }}\n        />,\n      );\n      const linkButton = container.querySelector('[data-testid=\"bi-toolbar-link\"] > div');\n      fireEvent.click(linkButton as HTMLElement);\n      const link = await waitForElement(() => queryByTestId('link'));\n      expect(link?.textContent).toBe('link');\n    });\n\n    test('不允许在链接中插入链接', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <inline\n                key=\"link\"\n                type=\"link\"\n                data={{ href: 'https://www.dingtalk.com' }}\n              >\n                Ding\n                <cursor />\n                Talk\n              </inline>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { editor, queryByText } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      await waitForTime(200);\n      expect(queryByText(/Ding添加网页链接Talk/)).not.toBeInTheDocument();\n    });\n\n    test('光标 focus 在链接中时，工具栏链接按钮展示为取消链接', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <inline\n                key=\"link\"\n                type=\"link\"\n                data={{ href: 'https://www.dingtalk.com' }}\n              >\n                Ding\n                <cursor />\n                Talk\n              </inline>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { container } = await renderEditor(<Editor defaultValue={value} />);\n      const linkButton = container.querySelector('[data-testid=\"bi-toolbar-unlink\"]'); // TODO @淼淼 需要修改单测\n      expect(linkButton).toBeInTheDocument();\n    });\n  });\n\n  test('光标 focus 在 text = href 的链接中，执行取消链接', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com' }}\n            >\n              https://www.dingtalk.com\n            </inline>\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, findByTestId, queryByTestId, content } = await renderEditor(<Editor defaultValue={value} />);\n    const link = await waitFor(() => queryByTestId('link'));\n    fireEvent.mouseOver(link);\n    const unlinkButton = await findByTestId('link-toolbar-unlink');\n    fireEvent.mouseDown(unlinkButton as HTMLElement);\n\n    await waitForElementToBeRemoved(() => queryByTestId('link'));\n    expect(!queryByTestId('pure-link')).toBe(true);\n    expect(content?.textContent).toBe('https://www.dingtalk.com');\n  });\n\n  describe('链接工具栏', () => {\n    const blankValue = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" />\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    test('hover 链接后，弹出工具栏', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createTextLink()} />,\n      );\n      const link = await waitForElement(() => queryByTestId('link'));\n      fireEvent.mouseOver(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n    });\n\n    test('点击链接后，跳转页面', async () => {\n      const { findByTestId } = await renderEditor(\n        <Editor defaultValue={createTextLink()} />,\n      );\n      const link = await findByTestId('link');\n      fireEvent.click(link as HTMLElement);\n      expect(openLink).toBeCalledWith('https://www.dingtalk.com');\n    });\n\n    test('点击链接后无 schema link，跳转页面', async () => {\n      const { findByTestId } = await renderEditor(\n        <Editor defaultValue={createTextLink('test', 'www.dingtalk.com')} />,\n      );\n      const link = await findByTestId('link');\n      fireEvent.click(link as HTMLElement);\n      expect(openLink).toBeCalledWith('http://www.dingtalk.com');\n    });\n\n    test('编辑状态下，点击链接不跳转', async () => {\n      const { findByTestId, queryByTestId } = await renderEditor(\n        <Editor defaultValue={createTextLink()} />,\n      );\n      let link = await findByTestId('link');\n      fireEvent.mouseOver(link as HTMLElement);\n      await findByTestId('link-toolbar');\n      const edit = queryByTestId('link-toolbar-edit');\n      fireEvent.mouseDown(edit as HTMLElement);\n      await findByTestId('link-editor');\n      // 点击链接\n      link = await findByTestId('link');\n      fireEvent.click(link as HTMLElement);\n      expect(openLink).not.toBeCalled();\n    });\n\n    test('创建链接时，弹出编辑框', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={blankValue} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      await waitForElement(() => queryByTestId('link-editor'));\n    });\n\n    test('创建链接后，快速移动光标至占位符，编辑框弹出', async () => {\n      const { queryByTestId, editor, findByText } = await renderEditor(\n        <Editor defaultValue={(((\n          <value>\n            <document>\n              <block type=\"paragraph\" >\n                <anchor />\n              </block>>\n              <block type=\"paragraph\" >\n                12\n              </block>>\n            </document>\n          </value>\n        ) as unknown) as Value)} />,\n      );\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('mod+k'));\n      await waitFor(() => queryByTestId('link-editor'));\n      // 通过点击下一个 block 的内容，然后再利用键盘移动光标至占位符，能够呼出编辑框\n      const text = await findByText('12');\n      fireEvent.mouseDown(text as HTMLElement);\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('arrowup'));\n      fireEvent.keyDown(editor as HTMLElement, getHotkeyEvent('arrowright'));\n      await waitFor(() => queryByTestId('link-editor'));\n    });\n\n    test('扩展选区选中链接时，不弹出工具栏', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createTextLink()} />,\n      );\n      expect(queryByTestId('link-toolbar')).not.toBeInTheDocument();\n    });\n\n    test('点击链接后，若地址为空，则直接弹出编辑框', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createTextLink('baidu', '')} />,\n      );\n      const link = await waitForElement(() => queryByTestId('link'));\n      fireEvent.mouseDown(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-editor'));\n    });\n\n    test('光标在同一行时，点击链接后，若地址为空，则直接弹出编辑框', async () => {\n      const { findByText, findByTestId } = await renderEditor(\n        <Editor defaultValue={createTextLink('baidu', '', 'aaa')} />,\n      );\n      const prefixText = await findByText('aaa');\n      fireEvent.mouseDown(prefixText as HTMLElement);\n      const link = await findByTestId('link');\n      fireEvent.mouseDown(link as HTMLElement);\n      await findByTestId('link-editor');\n    });\n\n    test('点击 pure link 后，弹出工具栏', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      fireEvent.mouseOver(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n    });\n\n    test('删除文本链接', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <inline\n                key=\"link\"\n                type=\"link\"\n                data={{ href: 'https://www.dingtalk.com' }}\n              >\n                Ding\n                <cursor />\n                Talk\n              </inline>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByText, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      const link = await findByTestId('link');\n      fireEvent.mouseOver(link as HTMLElement);\n      await findByTestId('link-toolbar');\n      const remove = queryByTestId('link-toolbar-remove');\n      fireEvent.mouseDown(remove as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('link'));\n      expect(queryByText(/DingTalk/)).not.toBeInTheDocument();\n    });\n\n    test('删除 pure link', async () => {\n      const { content, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n\n      const link = await findByTestId('pure-link');\n      fireEvent.mouseOver(link as HTMLElement);\n      await findByTestId('link-toolbar');\n      const remove = queryByTestId('link-toolbar-remove');\n      fireEvent.mouseDown(remove as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('pure-link'));\n      expect(content?.textContent).toBe('before  after');\n    });\n\n    test('取消文本链接', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <inline\n                key=\"link\"\n                type=\"link\"\n                data={{ href: 'https://www.dingtalk.com' }}\n              >\n                Di\n                <cursor />\n                ngTalk\n              </inline>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByTestId, content } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      const link = await waitForElement(() => queryByTestId('link'));\n      fireEvent.mouseOver(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n      const unlink = queryByTestId('link-toolbar-unlink');\n      fireEvent.mouseDown(unlink as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('link'));\n      expect(content?.textContent).toBe('DingTalk');\n    });\n\n    test('取消 pure link', async () => {\n      const { content, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n\n      const link = await findByTestId('pure-link');\n      fireEvent.mouseOver(link as HTMLElement);\n      await findByTestId('link-toolbar');\n      const unlink = queryByTestId('link-toolbar-unlink');\n      fireEvent.mouseDown(unlink as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('pure-link'));\n      expect(content?.textContent).toBe(\n        'before https://www.dingtalk.com after',\n      );\n    });\n\n    test('存在多个 pure link 时，取消 pure link', async () => {\n      const { content, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n\n      const link = await findByTestId('pure-link');\n      fireEvent.mouseOver(link as HTMLElement);\n      await findByTestId('link-toolbar');\n      const unlink = queryByTestId('link-toolbar-unlink');\n      fireEvent.mouseDown(unlink as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('pure-link'));\n      expect(content?.textContent).toBe(\n        'before https://www.dingtalk.com after',\n      );\n    });\n\n    test('取消 pure link 时，若光标已经在文本末尾，则插入空格', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              https://www.dingtalk.com\n              <cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { content, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      const link = await findByTestId('pure-link');\n      fireEvent.mouseOver(link as HTMLElement);\n      await findByTestId('link-toolbar');\n      const unlink = queryByTestId('link-toolbar-unlink');\n      fireEvent.mouseDown(unlink as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('pure-link'));\n      expect(content?.textContent).toBe('https://www.dingtalk.com ');\n    });\n\n    test('存在多个 pure link 时，取消 pure link', async () => {\n      const { content, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n\n      const link = await findByTestId('pure-link');\n      fireEvent.mouseOver(link as HTMLElement);\n      await findByTestId('link-toolbar');\n      const unlink = queryByTestId('link-toolbar-unlink');\n      fireEvent.mouseDown(unlink as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('pure-link'));\n      expect(content?.textContent).toBe(\n        'before https://www.dingtalk.com after',\n      );\n    });\n\n    test('访问链接', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      fireEvent.mouseOver(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n      const visit = queryByTestId('link-toolbar-visit');\n      fireEvent.mouseDown(visit as HTMLElement);\n      expect(openLink).toBeCalledWith('https://www.dingtalk.com');\n    });\n\n    test('支持访问白名单', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor\n          defaultValue={createPureLink('http://www.dingtalk.com')}\n          linkConfig={{\n            protocolAllowList: ['https:'],\n          }}\n        />,\n      );\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      fireEvent.mouseOver(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n      const visit = queryByTestId('link-toolbar-visit');\n      fireEvent.mouseDown(visit as HTMLElement);\n      expect(openLink).toBeCalledWith('');\n    });\n\n    test('进入编辑', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      fireEvent.mouseOver(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n      const edit = queryByTestId('link-toolbar-edit');\n      fireEvent.mouseDown(edit as HTMLElement);\n      await waitForElement(() => queryByTestId('link-editor'));\n    });\n\n    test('mouseleave，关闭 toolbar，并 focus 回编辑器', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      fireEvent.mouseEnter(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n      fireEvent.mouseLeave(link as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('link-toolbar'));\n      expect(queryByTestId('link-toolbar')).not.toBeInTheDocument();\n    });\n\n    test('复制链接', async () => {\n      const onLinkCopied = jest.fn();\n      const { queryByTestId } = await renderEditor(\n        <Editor\n          defaultValue={createPureLink()}\n          linkConfig={{ onCopyLink: onLinkCopied }}\n        />,\n      );\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      fireEvent.mouseOver(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n      const copy = queryByTestId('link-toolbar-copy');\n      fireEvent.mouseDown(copy as HTMLElement);\n      expect(onLinkCopied).toBeCalledWith('https://www.dingtalk.com');\n    });\n  });\n\n  // 编辑框已经去除删除按键，不需要测试删除功能\n  describe('编辑链接', () => {\n    const getEditForm = async (\n      link: HTMLElement,\n      queryByTestId: (\n        text: Matcher,\n        options?: MatcherOptions,\n        waitForElementOptions?: unknown,\n      ) => HTMLElement | null,\n    ) => {\n      fireEvent.mouseOver(link);\n      const edit = await waitForElement(() => queryByTestId('link-toolbar-edit'));\n      fireEvent.mouseDown(edit as HTMLElement);\n      const form = await waitForElement(() => queryByTestId('link-editor'));\n      return form;\n    };\n\n    test('编辑链接信息并保存', async () => {\n      const { queryByTestId, queryByText } = await renderEditor(\n        <Editor defaultValue={createTextLink()} />,\n      );\n      let link = await waitForElement(() => queryByTestId('link'));\n      const form = await getEditForm(link as HTMLElement, queryByTestId);\n      const textInput = form!.querySelector('[name=\"text\"]');\n      const hrefInput = form!.querySelector('[name=\"href\"]');\n      const saveButton = queryByTestId('link-editor-save');\n      fireEvent.inputChange(textInput!, '谷歌');\n      fireEvent.inputChange(hrefInput!, 'https://www.google.com');\n      fireEvent.mouseDown(saveButton as HTMLElement);\n      await waitForElementToBeRemoved(() => queryByTestId('link-editor'));\n      link = queryByTestId('link');\n      expect(link?.textContent).toBe('谷歌');\n      fireEvent.mouseEnter(link as HTMLElement);\n      await waitForElement(() => queryByTestId('link-toolbar'));\n    });\n\n    test('按下 ESC 时，关闭编辑框', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      await getEditForm(link!, queryByTestId);\n      fireEvent.keyDown(queryByTestId('link-editor'), getHotkeyEvent('esc'));\n      await waitForElementToBeRemoved(() => queryByTestId('link-editor'));\n      expect(queryByTestId('link-editor')).not.toBeInTheDocument();\n    });\n\n    test('在链接末尾时按下 ESC 后，关闭编辑框，继续输入，以纯文本进行输入', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <inline\n                key=\"link\"\n                type=\"link\"\n                data={{ href: 'https://www.dingtalk.com' }}\n              >\n                DingTalk\n                <cursor />\n              </inline>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByTestId, editor, getContentText } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      const link = await waitForElement(() => queryByTestId('link'));\n      await getEditForm(link!, queryByTestId);\n      fireEvent.keyDown(queryByTestId('link-editor')!, getHotkeyEvent('esc'));\n      await waitForElementToBeRemoved(() => queryByTestId('link-editor'));\n      expect(queryByTestId('link-editor')).not.toBeInTheDocument();\n      fireEvent.cangjieInput(editor, { data: '!' });\n      await wait();\n      expect(getContentText()).toBe('DingTalk!');\n      expect(link!.textContent).toBe('DingTalk');\n    });\n\n    test('编辑链接信息，若 focus 在输入框，则回车后可保存', async () => {\n      const { queryByTestId, queryByText, findByText } = await renderEditor(\n        <Editor defaultValue={createTextLink()} />,\n      );\n\n      let link = await waitForElement(() => queryByTestId('link'));\n      const form = await getEditForm(link!, queryByTestId);\n      const textInput = form!.querySelector(\n        '[name=\"text\"]',\n      ) as HTMLInputElement;\n      const hrefInput = form!.querySelector(\n        '[name=\"href\"]',\n      ) as HTMLInputElement;\n      fireEvent.inputChange(textInput!, '谷歌');\n      fireEvent.inputChange(hrefInput!, 'https://www.google.com');\n      fireEvent.focus(textInput);\n      fireEvent.keyDown(queryByTestId('link-editor')!, getHotkeyEvent('enter'));\n      await waitForElementToBeRemoved(() => queryByTestId('link-editor'));\n      link = queryByTestId('link');\n      expect(link?.textContent).toBe('谷歌');\n      fireEvent.mouseEnter(link!);\n      await findByText('https://www.google.com');\n      // await waitForElement(() => queryByTestId('link-toolbar'));\n      // expect(queryByText('https://www.google.com')).toBeInTheDocument();\n    });\n\n    test('若文本为空，则转换为纯文本', async () => {\n      const { queryByTestId, content } = await renderEditor(\n        <Editor\n          defaultValue={createTextLink(\n            'baidu',\n            'https://www.baidu.com',\n            '',\n            '',\n          )}\n        />,\n      );\n\n      const link = await waitForElement(() => queryByTestId('link'));\n      const form = await getEditForm(link!, queryByTestId);\n      const textInput = form!.querySelector(\n        '[name=\"text\"]',\n      ) as HTMLInputElement;\n      const hrefInput = form!.querySelector(\n        '[name=\"href\"]',\n      ) as HTMLInputElement;\n      const saveButton = queryByTestId('link-editor-save');\n      fireEvent.inputChange(textInput, '');\n      fireEvent.inputChange(hrefInput, 'https://www.baidu.com');\n      fireEvent.mouseDown(saveButton!);\n      const link2 = await waitFor(() => queryByTestId('link'));\n      expect(link2?.textContent).toBe('https://www.baidu.com');\n    });\n\n    test('若待编辑链接文本内容与链接地址一致，则编辑框只初始化链接', async () => {\n      const { queryByTestId } = await renderEditor(\n        <Editor\n          defaultValue={createTextLink(\n            'https://www.baidu.com',\n            'https://www.baidu.com',\n          )}\n        />,\n      );\n      const link = await waitForElement(() => queryByTestId('link'));\n      const form = await getEditForm(link!, queryByTestId);\n      const textInput = form!.querySelector(\n        '[name=\"text\"]',\n      ) as HTMLInputElement;\n      const hrefInput = form!.querySelector(\n        '[name=\"href\"]',\n      ) as HTMLInputElement;\n      expect(textInput.value).toBe('');\n      expect(hrefInput.value).toBe('https://www.baidu.com');\n    });\n\n    test('若文本及链接都为空，则忽略此次编辑', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" />\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      fireEvent.keyDown(editor!, getHotkeyEvent('mod+k'));\n      const link = await waitForElement(() => queryByTestId('link'));\n      fireEvent.mouseDown(link!);\n      const form = await waitForElement(() => queryByTestId('link-editor'));\n      const textInput = form!.querySelector(\n        '[name=\"text\"]',\n      ) as HTMLInputElement;\n      const hrefInput = form!.querySelector(\n        '[name=\"href\"]',\n      ) as HTMLInputElement;\n      const saveButton = queryByTestId('link-editor-save');\n      fireEvent.inputChange(textInput, '');\n      fireEvent.inputChange(hrefInput, ' ');\n      fireEvent.mouseDown(saveButton!);\n      expect(queryByTestId('link')?.textContent).toBe('添加网页链接');\n    });\n\n    test('pure link 保存后，若文本不为空，转换为 text link', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              before https://www.ding\n              <cursor />\n              talk.com after\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByTestId, content, debug } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      const form = await getEditForm(link!, queryByTestId);\n      const textInput = form!.querySelector(\n        '[name=\"text\"]',\n      ) as HTMLInputElement;\n      const hrefInput = form!.querySelector(\n        '[name=\"href\"]',\n      ) as HTMLInputElement;\n      const saveButton = queryByTestId('link-editor-save');\n      fireEvent.inputChange(textInput, '钉钉');\n      fireEvent.inputChange(hrefInput, 'https://www.google.com');\n      fireEvent.mouseDown(saveButton!);\n      const textLink = await waitForElement(() => queryByTestId('link'));\n      expect(textLink!.textContent).toBe('钉钉');\n      expect(content!.textContent).toBe('before 钉钉 after');\n    });\n\n    test('pure link 保存后，若文本为空，转为 textlink', async () => {\n      const { queryByTestId, content } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      const form = await getEditForm(link!, queryByTestId);\n      const textInput = form!.querySelector(\n        '[name=\"text\"]',\n      ) as HTMLInputElement;\n      const hrefInput = form!.querySelector(\n        '[name=\"href\"]',\n      ) as HTMLInputElement;\n      const saveButton = queryByTestId('link-editor-save');\n      fireEvent.inputChange(textInput, ' ');\n      fireEvent.inputChange(hrefInput, 'https://www.google.com');\n      fireEvent.mouseDown(saveButton!);\n      const textLink = await waitForElement(() => queryByTestId('link'));\n      expect(textLink?.textContent).toBe('https://www.google.com');\n      expect(content?.textContent).toBe('before https://www.google.com after');\n    });\n\n    test('取消文本链接', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <inline key=\"link\" type=\"link\" data={{ href: '' }}>\n                DingTa\n                <cursor />\n                lk\n              </inline>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { content, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      const link = await findByTestId('link');\n      fireEvent.mouseDown(link!);\n      const unlink = await findByTestId('link-editor-unlink');\n      fireEvent.mouseDown(unlink!);\n      await waitForElementToBeRemoved(() => queryByTestId('link'));\n      expect(content?.textContent).toBe('DingTalk');\n    });\n\n    test('取消 pure link', async () => {\n      const { queryByTestId, findByTestId, content } = await renderEditor(\n        <Editor defaultValue={createPureLink()} />,\n      );\n\n      const link = await findByTestId('pure-link');\n      await getEditForm(link!, queryByTestId);\n      const unlink = await findByTestId('link-editor-unlink');\n      fireEvent.mouseDown(unlink!);\n      await waitForElementToBeRemoved(() => queryByTestId('pure-link'));\n      expect(content?.textContent).toBe(\n        'before https://www.dingtalk.com after',\n      );\n    });\n  });\n\n  describe('删除链接', () => {\n    test('向前删除', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <inline\n                key=\"link\"\n                type=\"link\"\n                data={{ href: 'https://www.dingtalk/com' }}\n              >\n                DingTalk\n              </inline>\n              <cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByText, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      await waitForElement(() => queryByText(/DingTalk/));\n      fireEvent.keyDown(editor!, getHotkeyEvent(HOTKEYS.deleteBackward));\n      await waitForElementToBeRemoved(() => queryByText(/DingTalk/));\n    });\n\n    test('向后删除', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <cursor />\n              <inline\n                key=\"link\"\n                type=\"link\"\n                data={{ href: 'https://www.dingtalk/com' }}\n              >\n                DingTalk\n              </inline>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const { queryByText, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      await waitForElement(() => queryByText(/DingTalk/));\n      fireEvent.keyDown(editor!, getHotkeyEvent(HOTKEYS.deleteForward));\n      await waitForElementToBeRemoved(() => queryByText(/DingTalk/));\n    });\n  });\n\n  describe('粘贴链接', () => {\n    const blankValue = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" />\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    test('粘贴链接包含 schema', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={blankValue} />,\n      );\n\n      fireEvent.paste(editor!, 'text/plain', 'https://www.dingtalk.com');\n      const link = await waitForElement(() => queryByTestId('link'));\n      expect(link?.textContent).toBe('https://www.dingtalk.com');\n    });\n\n    test('粘贴链接包含自定义的 protocal', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={blankValue} />,\n      );\n\n      fireEvent.paste(editor!, 'text/plain', 'xxx://yyy');\n      const link = await waitForElement(() => queryByTestId('pure-link'));\n      expect(link?.textContent).toBe('xxx://yyy');\n    });\n\n    test('若选中文本，且粘贴内容为链接，则设置选中文本为链接', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <anchor />\n              钉钉\n              <focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      fireEvent.paste(editor!, 'text/plain', 'https://www.dingtalk.com');\n      // 等待一次 flush\n      await wait();\n      const link = await waitForElement(() => queryByTestId('link'));\n      expect(link?.textContent).toBe('钉钉');\n    });\n\n    test('若选中文本，且粘贴内容为链接，则设置选中文本为链接后，能够回车换行', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <anchor />\n              钉钉\n              <focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor, debug, content, findByText } = await renderEditor(\n        <Editor defaultValue={value} linkConfig={{ enableCard: true }} />,\n      );\n\n      fireEvent.paste(editor!, 'text/plain', 'https://www.dingtalk.com');\n      // 等待一次 flush\n      await waitFor(() => queryByTestId('link'));\n\n      let count = content.querySelectorAll('[data-type=\"paragraph\"]').length;\n      expect(count).toBe(1);\n      fireEvent.keyDown(editor!, getHotkeyEvent(HOTKEYS.enter));\n      fireEvent.cangjieInput(editor!, { data: 'test' });\n      // 等待一次 flush\n      await findByText('test');\n      count = content.querySelectorAll('[data-type=\"paragraph\"]').length;\n      expect(count).toBe(2);\n    });\n\n    test('若选中内容为链接，且粘贴内容为链接，则替换链接', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <anchor />\n              https://www.dingtalk.com\n              <focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      fireEvent.paste(editor!, 'text/plain', 'https://www.google.com');\n      // 等待一次 flush\n      await wait();\n      const link = await waitForElement(() => queryByTestId('link'));\n      expect(link?.textContent).toBe('https://www.google.com');\n    });\n\n    test('粘贴多个链接', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={blankValue} />,\n      );\n\n      const pastedText = 'Head xxx://yyy\\nhttps://www.dingtalk.com?q=测试一下';\n      fireEvent.paste(editor!, 'text/plain', pastedText);\n      const pureLink = await waitForElement(() => queryByTestId('pure-link'));\n      const textLink = await waitForElement(() => queryByTestId('link'));\n      expect(pureLink!.textContent).toBe('xxx://yyy');\n      expect(textLink!.textContent).toBe('https://www.dingtalk.com?q=测试一下');\n    });\n\n\n    test('开启链接卡片时，显示自定义粘贴面板', async () => {\n      const { editor, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={blankValue} linkConfig={{ enableCard: true }} />,\n      );\n      expect(queryByTestId('pastePanel')).toBe(null);\n\n      fireEvent.paste(\n        editor!,\n        'text/plain',\n        'http://gitlab.alibaba-inc.com/alidocs/we-plugin-attachment',\n      );\n      await waitFor(() => {\n        expect(queryByTestId('pastePanel')).not.toBe(null);\n      });\n\n      fireEvent.click(await findByTestId('menu-item-1'));\n\n      // fireEvent.click(await findByTestId('menu-item-sourceFormat'));\n      await waitFor(() => {\n        expect(queryByTestId('pastePanel')).toBe(null);\n      });\n    });\n\n    test('粘贴时，忽略引用块链接', async () => {\n      const { editor, queryByTestId, findByTestId, queryByText } = await renderEditor(\n        <Editor defaultValue={blankValue} linkConfig={{ enableCard: true }} />,\n      );\n      expect(queryByTestId('pastePanel')).toBe(null);\n\n      fireEvent.pasteAll(\n        editor!,\n        [\n          {\n            type: constants.MIME_TYPES.REFBLOCK,\n            content: 'anything',\n          },\n          {\n            type: constants.MIME_TYPES.TEXT,\n            content: 'http://alidocs.com/xxxx'\n          }\n        ],\n      );\n\n      await findByTestId('pastePanel');\n      expect(queryByText(/摘要卡片/)).toBe(null);\n    });\n\n    test('未开启链接卡片时，不显示自定义粘贴面板', async () => {\n      const { editor, queryByTestId, findByTestId } = await renderEditor(\n        <Editor defaultValue={blankValue} linkConfig={{ enableCard: false }} />,\n      );\n      expect(queryByTestId('pastePanel')).toBe(null);\n\n      fireEvent.paste(\n        editor!,\n        'text/plain',\n        'http://gitlab.alibaba-inc.com/alidocs/we-plugin-attachment',\n      );\n      await waitFor(() => {\n        expect(queryByTestId('pastePanel')).not.toBe(null);\n      });\n\n      // 有默认转文本选项\n      await waitFor(() => {\n        expect(queryByTestId('menu-item-textFormat')).not.toBe(null);\n      });\n\n    });\n\n  });\n\n  describe('输入识别', () => {\n    const blankValue = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" />\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    [\n      'https://www.dingtalk.com',\n      'https://www.dingtalk.com?q=测试一下',\n      'xxx://yyy',\n    ].forEach((href) => {\n      test(`如果符合链接格式[${href}]，则装饰当前文本为链接`, async () => {\n        const { queryByTestId, editor } = await renderEditor(\n          <Editor defaultValue={blankValue} />,\n        );\n\n        fireEvent.cangjieInput(editor!, { data: href });\n        const link = await waitForElement(() => queryByTestId('pure-link'));\n        expect(link?.textContent).toBe(href);\n      });\n    });\n\n    test('正在链接中输入，如果不符合链接格式，则还原当前文本为普通文本', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={blankValue} />,\n      );\n\n      fireEvent.cangjieInput(editor!, { data: 'https://w' });\n      await waitForElement(() => queryByTestId('pure-link'));\n      fireEvent.keyDown(editor!, getHotkeyEvent('backspace')); // https://\n      fireEvent.keyDown(editor!, getHotkeyEvent('backspace')); // https:/\n      await waitForElementToBeRemoved(() => queryByTestId('pure-link'));\n    });\n  });\n\n  describe('闭合选区中插入链接，选中选区附近文字（交互参考word）', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            测试测试测试测，试测试测试测\n            <cursor />\n            试测试测试测试测，试测试测试测试测试\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    test('快捷键插入', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      fireEvent.keyDown(editor, getHotkeyEvent('mod+k'));\n      await waitForElement(() => queryByTestId('link'));\n      const input = queryByTestId('link-editor-input-href');\n      expect(input).toBe(editor.ownerDocument.activeElement);\n    });\n\n    test('toolbar 插入', async () => {\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      fireEvent.click(queryByTestId('bi-toolbar-link'));\n      await waitForElement(() => queryByTestId('link'));\n      const input = queryByTestId('link-editor-input-href');\n      expect(input).toBe(editor.ownerDocument.activeElement);\n    });\n  });\n\n  describe('Markdown 格式输入链接', () => {\n    const cases = [{\n      input: '[]()',\n      isLink: true,\n      title: '',\n      href: '',\n      showEditor: true,\n    }, {\n      input: '[abc]()',\n      isLink: true,\n      title: 'abc',\n      href: '',\n      showEditor: true,\n    }, {\n      input: '[abc](def)',\n      isLink: true,\n      title: 'abc',\n      href: 'def',\n      showEditor: false,\n    }, {\n      input: '[[abc](][中文<>![](dd))',\n      isLink: true,\n      title: 'abc',\n      href: encodeURI('][中文<>![](dd)'),\n      showEditor: false,\n    }, {\n      input: 'text[abc](def)',\n      isLink: true,\n      title: 'abc',\n      href: 'def',\n      showEditor: false,\n    }, {\n      input: '[](def)',\n      isLink: false,\n    }, {\n      input: '[abc[c](def)',\n      isLink: true,\n      title: 'c',\n      href: 'def',\n      showEditor: false,\n    }, {\n      input: '[[aaa]](def)',\n      isLink: false,\n    }, {\n      input: '[]](def)',\n      isLink: false,\n    }, {\n      input: '![foo](http://bar)',\n      isLink: false,\n    }];\n    cases.forEach(async ({ input, isLink, title, href, showEditor }) => {\n      it(`test: \\`${input}\\``, async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"paragraph\">\n                {input}<cursor />\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n        let controller: Controller = Controller.create({ value });\n        const { content, editor, queryByTestId } = await renderEditor(\n          <Editor controllerRef={(c) => { controller = c; }} defaultValue={value} />,\n        );\n        fireEvent.cangjieInput(editor, { data: ' ' });\n        await waitForTime(10);\n        const link: HTMLElement | null = await waitFor(() => queryByTestId('link')) as any;\n        expect(!!link).toBe(!!isLink);\n        if (isLink) {\n          const linkNode = controller.value.document.findDescendant(Link.isLink) as Inline;\n          if (title) {\n            expect(linkNode.text).toBe(title);\n            expect(linkNode.data.href).toBe(href);\n          }\n          if (showEditor) {\n            const linkTitle: HTMLInputElement | null = await waitFor(() => queryByTestId('link-editor-input-text')) as any;\n            const linkHref: HTMLInputElement | null = await waitFor(() => queryByTestId('link-editor-input-href')) as any;\n            expect(linkTitle?.value).toBe(title);\n            expect(linkHref?.value).toBe(href);\n          } else {\n            expect(controller.value.selection.anchor.key).toEqual(controller.value.document.getNextText(linkNode.key)?.key)\n          }\n        }\n      });\n    });\n  });\n});\n"],"file":"ui.test.js"}