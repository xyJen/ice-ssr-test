{"version":3,"sources":["../../../../src/__tests__/link/mobile.ui.test.tsx"],"names":["createBiPlugins","link","mobileLinkPlugin","Editor","props","defaultValue","linkConfig","openLink","value","setValue","React","useState","plugins","useMemo","config","hotkey","protocolAllowList","handleChange","useCallback","isFocused","newValue","set","describe","skip","jest","fn","spiedWindowOpen","spiedConsoleError","beforeAll","spyOn","console","mockImplementation","window","afterAll","mockRestore","afterEach","mockReset","test","href","editor","findByTestId","findByText","queryByTestId","btn","getAttribute","fireEvent","click","touchStart","touchEnd","expect","not","toHaveBeenCalled","toBe","toBeCalledWith"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport {\n  cleanup,\n} from '@testing-library/react';\nimport {\n  renderEditor,\n  jsx,\n  fireEvent,\n} from '@ali/4ever-dev-test';\nimport { Value } from '@ali/4ever-cangjie';\nimport * as React from 'react';\nimport mobileLinkPlugin from '../../plugins/link/mobile';\nimport { createCustomizedBiPlugins, Toolbar, Provider, Content } from '../..';\nimport { LinkPluginConfig } from '../../plugins/link/types';\n\ninterface EditorProps {\n  defaultValue: Value;\n  linkConfig?: Partial<LinkPluginConfig>;\n  openLink?: (href) => void;\n}\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  link: mobileLinkPlugin,\n});\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { defaultValue, linkConfig = {}, openLink } = props;\n  const [value, setValue] = React.useState(defaultValue);\n\n  const plugins = React.useMemo(() => {\n    const config: LinkPluginConfig = {\n      hotkey: 'mod+k',\n      protocolAllowList: ['xxx:', 'http:', 'https:'],\n      ...linkConfig,\n      openLink: openLink || linkConfig.openLink,\n    };\n\n    return createBiPlugins({\n      link: config,\n    });\n  }, [linkConfig]);\n\n  const handleChange = React.useCallback(({ value }) => {\n    setValue(value);\n  }, []);\n\n  return (\n    <Provider plugins={plugins} value={value} onChange={handleChange}>\n      <button data-testid=\"btn\" data-focus={value.isFocused} onClick={() => {\n        const newValue = value.set('isFocused', !value.isFocused);\n        handleChange({ value: newValue });\n      }} >editor is {value.isFocused ? 'focus' : 'blur'}</button>\n      <Content tabIndex={0} />\n    </Provider>\n  );\n};\n\n// NOTE: fireEvent 单测有问题，暂时 skip 掉，后续上线时做一下回归测试\ndescribe.skip('Bi/mobileLink/ui', () => {\n  const openLink = jest.fn();\n  let spiedWindowOpen: jest.SpyInstance;\n  let spiedConsoleError: jest.SpyInstance;\n\n  beforeAll(() => {\n    // 防止被 componentDidCatch catch 的 error 被控制台输出\n    spiedConsoleError = jest.spyOn(console, 'error');\n    spiedConsoleError.mockImplementation(() => { });\n    spiedWindowOpen = jest.spyOn(window, 'open');\n    spiedWindowOpen.mockImplementation(openLink);\n  });\n\n  afterAll(() => {\n    spiedConsoleError.mockRestore();\n    spiedWindowOpen.mockRestore();\n  });\n\n  afterEach(() => {\n    cleanup();\n    openLink.mockReset();\n  });\n\n  test('编辑器处于 focus 状态，点击 link，光标进入，不触发跳转', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com' }}\n            >\n              https://www.dingtalk.com\n            </inline>\n            <cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, findByTestId, findByText, queryByTestId } = await renderEditor(<Editor defaultValue={value} openLink={openLink} />);\n    const btn = queryByTestId('btn');\n    if (btn.getAttribute('data-focus') !== 'true') {\n      fireEvent.click(btn as HTMLElement);\n    }\n    await findByText('editor is focus');\n    const link = await findByTestId('link');\n    fireEvent.touchStart(link as HTMLElement);\n    fireEvent.touchEnd(link as HTMLElement);\n\n    // 不会触发 openLink\n    expect(openLink).not.toHaveBeenCalled();\n    // 编辑器处于 focus 状态\n    expect(btn.getAttribute('data-focus')).toBe('true');\n  });\n\n  test('编辑器处于 blur 状态，点击 link，直接跳转，不 focus 到 link 中', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'https://www.dingtalk.com' }}\n            >\n              https://www.dingtalk.com\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, findByTestId, queryByTestId, findByText } = await renderEditor(<Editor defaultValue={value} openLink={openLink} />);\n    const btn = queryByTestId('btn');\n    if (btn.getAttribute('data-focus') === 'true') {\n      fireEvent.click(btn as HTMLElement);\n    }\n    await findByText('editor is blur');\n    const link = await findByTestId('link');\n    fireEvent.touchStart(link as HTMLElement);\n    fireEvent.touchEnd(link as HTMLElement);\n\n    // 触发 openLink\n    expect(openLink).toBeCalledWith('https://www.dingtalk.com');\n    // 编辑器处于 blur 状态\n    expect(btn.getAttribute('data-focus')).toBe('false');\n  });\n\n  test('编辑器处于 blur 状态，点击无 schema 的 link，直接跳转，不 focus 到 link 中', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <inline\n              key=\"link\"\n              type=\"link\"\n              data={{ href: 'www.dingtalk.com' }}\n            >\n              https://www.dingtalk.com\n            </inline>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { editor, findByTestId, queryByTestId, findByText } = await renderEditor(<Editor defaultValue={value} openLink={openLink} />);\n    const btn = queryByTestId('btn');\n    if (btn.getAttribute('data-focus') === 'true') {\n      fireEvent.click(btn as HTMLElement);\n    }\n    await findByText('editor is blur');\n    const link = await findByTestId('link');\n    fireEvent.touchStart(link as HTMLElement);\n    fireEvent.touchEnd(link as HTMLElement);\n\n    // 触发 openLink\n    expect(openLink).toBeCalledWith('https://www.dingtalk.com');\n    // 编辑器处于 blur 状态\n    expect(btn.getAttribute('data-focus')).toBe('false');\n  });\n});\n"],"file":"mobile.ui.test.js"}