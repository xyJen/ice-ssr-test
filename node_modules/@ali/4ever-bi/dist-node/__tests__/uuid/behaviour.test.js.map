{"version":3,"sources":["../../../../src/__tests__/uuid/behaviour.test.tsx"],"names":["plugins","uuid","enable","generateLeafBlockId","generator","Date","now","toString","Math","random","substring","array","checkAddId","fn","check","value","refblockUUID","controller","Controller","create","describe","expect","document","nodes","data","startsWith","toBe","test","command","Commands","insertText","insertInline","deleteBackward","insertBlock","block","run","refblock","oldUuid","f","Document","Block","type","insertFragment","newUuid","not","toEqual","__uuid__","gen","uniqueId","hello","assertElement","world","query"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport {\n  Block,\n  Commands,\n  Controller,\n  Document,\n  Value,\n} from '@ali/4ever-cangjie';\nimport { jsx, waitForTime } from '@ali/4ever-dev-test';\nimport { uniqueId } from 'lodash';\nimport createBiPlugins from '../../createBiPlugins';\nimport { setNodeUUID } from '../../plugins/uuid/actions';\n\nconst plugins = createBiPlugins({\n  uuid: {\n    enable: true,\n    generateLeafBlockId: true,\n    generator: () => `custom_${Date.now().toString(36) + Math.random().toString(36).substring(2)}`\n  },\n}).array;\n\nconst checkAddId = async (fn, check) => {\n  const value = ((\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          hello text\n          <cursor />\n        </block>\n        <block type=\"paragraph\" data={{refblockUUID: 'refuid'}}>\n         refblock\n        </block>\n      </document>\n    </value>\n  ) as unknown) as Value;\n\n  const controller = Controller.create({\n    value,\n    plugins,\n  });\n  fn(controller);\n  await waitForTime(1000);\n  check(controller);\n}\n\ndescribe('Bi/uuid/behaviour', () => {\n  describe('leaf block 自动添加 uuid', () => {\n    const check = (controller: Controller) => expect(controller.value.document.nodes[0].data.uuid.startsWith('custom_')).toBe(true);\n    test('insertText', async () => {\n      await checkAddId((controller) => controller.command(Commands.insertText, 'h'), check);\n    });\n    test('insertInline', async () => {\n      await checkAddId((controller) => controller.command(Commands.insertInline, 'h'), check);\n    });\n    test('deleteBackward', async () => {\n      await checkAddId((controller) => controller.command(Commands.deleteBackward), check);\n    });\n  });\n  describe('block 添加 uuid', () => {\n    test('block 自身', async () => {\n      await checkAddId((controller) => controller.command(Commands.insertBlock, 'h'), (controller: Controller) => {\n        expect(typeof controller.value.document.nodes[1].data.uuid).toBe('string');\n      });\n    });\n  });\n  describe('action', () => {\n    test('action', async () => {\n      await checkAddId((controller) => {\n        const block = controller.value.document.nodes[0];\n        controller.run('onAction', setNodeUUID(block, 'xxx'));\n      }, (controller) => {\n        const block = controller.value.document.nodes[0];\n        expect(block.data.uuid).toBe('xxx');\n      });\n    });\n    test('should not replace refblock uuid', async() => {\n      await checkAddId((controller) => {\n        const refblock = controller.value.document.nodes[1];\n        controller.run('onAction', setNodeUUID(refblock, 'xxx'));\n      }, (controller) => {\n        const refblock = controller.value.document.nodes[1];\n        expect(refblock.data.uuid).toBe('refuid');\n      });\n    });\n  });\n  describe('insert fragment', () => {\n    test('should replace uuid', async () => {\n      const oldUuid = 'old_uuid';\n      const f = Document.create({\n        nodes: [\n          Block.create({\n            data: {\n              uuid: oldUuid,\n            },\n            type: 'card',\n          }),\n        ],\n      });\n      await checkAddId((controller: Controller) => controller.command(Commands.insertFragment, f), (controller) => {\n        const newUuid = controller.value.document.nodes[1].data.uuid;\n        expect(newUuid).not.toEqual(oldUuid);\n      });\n    });\n  });\n\n  describe('uuid-compatible/behaviour', () => {\n    test('prefer legacy uuid as anchor', () => {\n      const value = (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              key=\"hello\"\n              data={{ uuid: 'legacy-hello-uuid', __uuid__: 'new-hello-uuid' }}\n            >\n              Hello\n            </block>\n            <block type=\"paragraph\" key=\"world\" data={{ __uuid__: 'world-uuid' }}>\n              World\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create(\n        {\n          value,\n          plugins: createBiPlugins({\n            uuid: {\n              enable: false,\n            },\n          }).array\n        },\n        { uuid: { enable: true, gen: uniqueId } },\n      );\n      const { document } = controller.value;\n      const hello = document.assertElement('hello');\n      const world = document.assertElement('world');\n      expect(controller.query('anchor', hello)).toBe('legacy-hello-uuid');\n      expect(controller.query('anchor', world)).toBe('world-uuid');\n    });\n  });\n});\n"],"file":"behaviour.test.js"}