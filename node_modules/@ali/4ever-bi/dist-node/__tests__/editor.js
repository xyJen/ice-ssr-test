"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.EditorWidthLegacyToolbar = exports.createBiPlugins = exports.imageConfig = exports.imageDownloadMockFn = exports.imagePreviewMockFn = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _everComponent = require("@ali/4ever-component");

var _ = require("..");

var _utils = require("./image/utils");

var _plugins = _interopRequireDefault(require("../plugins"));

var _listGroup = _interopRequireDefault(require("../plugins/listGroup"));

var _headingGroup = _interopRequireDefault(require("../plugins/headingGroup"));

var _everPluginFindAndReplace = require("@ali/4ever-plugin-find-and-replace");

const _createElement = /*#__PURE__*/React.createElement;
const MOCK_UPLOADED_IMAGE = 'https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/a/12338368861/2252263652/406998a4-df1e-422c-985f-2a1b06d5b8ab';

const SidebarBox = /*#__PURE__*/_styledComponents.default.div(["position:fixed;top:0px;bottom:0px;right:0;width:300px;overflow:auto;background:#fff;box-shadow:1px 0 10px 0px rgba(0,0,0,0.12);padding-top:30px;z-index:999;"]);

const SidebarCloseButton = /*#__PURE__*/_styledComponents.default.div(["position:absolute;top:10px;right:10px;width:28px;height:28px;"]);

const imagePreviewMockFn = jest.fn();
exports.imagePreviewMockFn = imagePreviewMockFn;
const imageDownloadMockFn = jest.fn(src => {});
exports.imageDownloadMockFn = imageDownloadMockFn;
const imageConfig = { ..._.locale_zh_CN.image,
  previewImage: imagePreviewMockFn,
  downloadImage: imageDownloadMockFn,
  selectImage: _utils.selectImage,
  uploadImage: _utils.uploadImage,
  transferImageURL: _utils.transferImageURL,
  shouldTransferImageURL: _utils.shouldTransferImageURL,
  enableLazyLoad: false,
  inlineToolbarLayout: [{
    toolButtons: [{
      name: 'image.reset'
    }, {
      name: 'image.border'
    }]
  }, {
    toolButtons: [{
      name: 'image.crop'
    }, {
      name: 'image.rotateReverse'
    }, {
      name: 'image.rotate'
    }, {
      name: 'image.style'
    }, {
      name: 'image.more'
    }]
  }],
  isTesting: true,
  inlineToolbarMore: [{
    type: _everComponent.TYPE_MENU_ITEM,
    menuKey: 'image.download'
  }, {
    type: _everComponent.TYPE_MENU_ITEM,
    menuKey: 'image.options'
  }]
};
exports.imageConfig = imageConfig;
const createBiPlugins = (0, _.createCustomizedBiPlugins)({ ..._plugins.default,
  callout: _.CalloutPlugin,
  ListGroupPlugin: _listGroup.default,
  HeadingGroupPlugin: _headingGroup.default,
  findAndReplace: _everPluginFindAndReplace.createFindAndReplacePlugin
});
exports.createBiPlugins = createBiPlugins;

var _ref = /*#__PURE__*/_createElement(_.MobileToolbar, {
  layout: _.mobileLayout,
  useVisualBox: true
});

var _ref2 = /*#__PURE__*/_createElement(_everComponent.Sidebar, {
  type: "image.imageOptions"
});

class EditorWidthLegacyToolbar extends React.Component {
  // eslint-disable-next-line react/sort-comp
  constructor(props) {
    super(props);
    this.plugins = createBiPlugins({ ..._.locale_zh_CN,
      mention: { ..._.locale_zh_CN.mention,

        getMentionId() {
          return '';
        },

        renderItem(user) {
          return /*#__PURE__*/_createElement("span", {
            style: {
              display: 'flex'
            }
          }, user.name);
        },

        onMentionSearch: (keyWord, changer) => this.handleMentionSearch(keyWord, changer),
        onMentionSelect: (suggestion, changer) => this.handleMentionSelect(suggestion, changer)
      },
      embed: { ..._.locale_zh_CN.embed,
        onEnlarge: url => void 0,
        onPrint: url => void 0,
        onDownload: url => void 0,
        onPreview: url => this.handlePreviewFile(url),
        onUpload: file => this.handleUploadFile(file)
      },
      clipboard: {
        pastePanel: true
      },
      sticker: {
        enableSticker: true
      },
      image: { ...imageConfig,
        ...this.props.imageCustomConfig
      },
      sideBarTrigger: {
        open: () => {
          this.setState({
            showSidebar: true
          });
        }
      },
      findAndReplace: {
        locale: _.locale_zh_CN.findAndReplace,
        draggableArea: {
          top: 41,
          right: 8,
          bottom: 8,
          left: 8
        },
        initialPosition: {
          marginTop: 0,
          marginRight: 50
        },
        isFindOnly: false,
        role: ''
      },
      ...this.props.pluginConfigs
    });

    this.handleMentionSearch = (keyWord, changer) => {
      const {
        value
      } = this.state;
      let changed = null;

      if (!keyWord) {
        changed = changer(value, this.state.defaultSuggestions);
      } else {
        const mockSuggestions = [];

        for (let i = 0; i < 10; i += 1) {
          mockSuggestions.push({
            name: `又清 ${i}`,
            login: `${i}`,
            avatarUrl: 'https://static.dingtalk.com/media/lADPBbCc1h2tUUPNA8DNA74_958_960.jpg_60x60q90.jpg'
          });
        }

        changed = changer(value, mockSuggestions);
      }

      this.handleChange(changed);
    };

    this.handleMentionSelect = (suggestion, changer) => {
      const changed = changer(this.state.value, suggestion);
      this.handleChange(changed);
    };

    this.handleChange = change => {
      this.setState({
        value: change.value
      });
      this.props.onChange && this.props.onChange(change);
    };

    this.handleUploadFile = file => {
      return new Promise((resolve, reject) => {
        if (file.size > 20 * 1000 * 1000) {
          reject(new Error('文件大小不能大于20M'));
          return;
        }

        setTimeout(() => resolve({
          url: MOCK_UPLOADED_IMAGE
        }), 3000); // setTimeout(() => reject(new Error('网络错误！')), 1000);
      });
    };

    this.handlePreviewFile = url => {
      return new Promise(resolve => {
        setTimeout(() => resolve({
          previewUrl: 'https://yuque.antfin-inc.com/office/lark/0/2019/docx/152/1573008420622-57519a6f-f7e0-4d74-a49d-9e27029293ef.docx?view=doc_embed'
        }), 1000);
      });
    };

    this.handleCloseSidebar = () => {
      this.setState({
        showSidebar: false
      });
    };

    this.getScrollableContent = () => {
      return document.querySelector('[data-cangjie-content-wrapper="true"]') || document.body;
    };

    this.getScrollableContainer = () => {
      return document.documentElement || document.body;
    };

    this.state = {
      value: props.defaultValue,
      defaultSuggestions: [{
        name: '又清0',
        login: '0',
        avatarUrl: 'https://static.dingtalk.com/media/lADPBbCc1h2tUUPNA8DNA74_958_960.jpg_60x60q90.jpg'
      }],
      showSidebar: false
    };
  }

  render() {
    const {
      autoFocus = true,
      controllerRef,
      singleLayout,
      doubleLayout,
      // eslint-disable-next-line @typescript-eslint/no-shadow
      plugins,
      docStyle
    } = this.props;
    const {
      value
    } = this.state;
    return /*#__PURE__*/_createElement(_.Provider, {
      plugins: plugins || this.plugins,
      value: value,
      onChange: this.handleChange,
      autoFocus: autoFocus,
      controllerRef: controllerRef,
      docStyle: docStyle
    }, /*#__PURE__*/_createElement(_.NewToolbar, {
      fineAdaptation: false,
      singleLayout: singleLayout || _.NewToolbarConfig.defaultSingleLayout,
      doubleLayout: doubleLayout || _.NewToolbarConfig.defaultDoubleLayout
    }), _ref, /*#__PURE__*/_createElement(_.Content, {
      tabIndex: 0,
      getScrollableContent: this.getScrollableContent,
      getScrollableContainer: this.getScrollableContainer
    }), this.state.showSidebar && /*#__PURE__*/_createElement(SidebarBox, {
      "data-testid": "image-sidebar"
    }, /*#__PURE__*/_createElement(SidebarCloseButton, {
      onClick: this.handleCloseSidebar
    }, "X"), _ref2));
  }

}

exports.EditorWidthLegacyToolbar = EditorWidthLegacyToolbar;

var _ref3 = /*#__PURE__*/_createElement(_.MobileToolbar, {
  layout: _.mobileLayout,
  useVisualBox: true
});

var _ref4 = /*#__PURE__*/_createElement(_everComponent.Sidebar, {
  type: "image.imageOptions"
});

// eslint-disable-next-line react/no-multi-comp
class EditorWithToolbarNext extends React.Component {
  // eslint-disable-next-line react/sort-comp
  constructor(props) {
    super(props);
    this.plugins = createBiPlugins({ ..._.locale_zh_CN,
      mention: { ..._.locale_zh_CN.mention,

        getMentionId() {
          return '';
        },

        renderItem(user) {
          return /*#__PURE__*/_createElement("span", {
            style: {
              display: 'flex'
            }
          }, user.name);
        },

        onMentionSearch: (keyWord, changer) => this.handleMentionSearch(keyWord, changer),
        onMentionSelect: (suggestion, changer) => this.handleMentionSelect(suggestion, changer)
      },
      embed: { ..._.locale_zh_CN.embed,
        onEnlarge: url => void 0,
        onPrint: url => void 0,
        onDownload: url => void 0,
        onPreview: url => this.handlePreviewFile(url),
        onUpload: file => this.handleUploadFile(file)
      },
      clipboard: {
        pastePanel: true
      },
      sticker: {
        enableSticker: true
      },
      image: { ...imageConfig,
        ...this.props.imageCustomConfig
      },
      sideBarTrigger: {
        open: () => {
          this.setState({
            showSidebar: true
          });
        }
      },
      findAndReplace: {
        locale: _.locale_zh_CN.findAndReplace,
        draggableArea: {
          top: 41,
          right: 8,
          bottom: 8,
          left: 8
        },
        initialPosition: {
          marginTop: 0,
          marginRight: 50
        },
        isFindOnly: false,
        role: ''
      },
      ...this.props.pluginConfigs
    });

    this.handleMentionSearch = (keyWord, changer) => {
      const {
        value
      } = this.state;
      let changed = null;

      if (!keyWord) {
        changed = changer(value, this.state.defaultSuggestions);
      } else {
        const mockSuggestions = [];

        for (let i = 0; i < 10; i += 1) {
          mockSuggestions.push({
            name: `又清 ${i}`,
            login: `${i}`,
            avatarUrl: 'https://static.dingtalk.com/media/lADPBbCc1h2tUUPNA8DNA74_958_960.jpg_60x60q90.jpg'
          });
        }

        changed = changer(value, mockSuggestions);
      }

      this.handleChange(changed);
    };

    this.handleMentionSelect = (suggestion, changer) => {
      const changed = changer(this.state.value, suggestion);
      this.handleChange(changed);
    };

    this.handleChange = change => {
      this.setState({
        value: change.value
      });
      this.props.onChange && this.props.onChange(change);
    };

    this.handleUploadFile = file => {
      return new Promise((resolve, reject) => {
        if (file.size > 20 * 1000 * 1000) {
          reject(new Error('文件大小不能大于20M'));
          return;
        }

        setTimeout(() => resolve({
          url: MOCK_UPLOADED_IMAGE
        }), 3000); // setTimeout(() => reject(new Error('网络错误！')), 1000);
      });
    };

    this.handlePreviewFile = url => {
      return new Promise(resolve => {
        setTimeout(() => resolve({
          previewUrl: 'https://yuque.antfin-inc.com/office/lark/0/2019/docx/152/1573008420622-57519a6f-f7e0-4d74-a49d-9e27029293ef.docx?view=doc_embed'
        }), 1000);
      });
    };

    this.handleCloseSidebar = () => {
      this.setState({
        showSidebar: false
      });
    };

    this.getScrollableContent = () => {
      return document.querySelector('[data-cangjie-content-wrapper="true"]') || document.body;
    };

    this.getScrollableContainer = () => {
      return document.documentElement || document.body;
    };

    this.state = {
      value: props.defaultValue,
      defaultSuggestions: [{
        name: '又清0',
        login: '0',
        avatarUrl: 'https://static.dingtalk.com/media/lADPBbCc1h2tUUPNA8DNA74_958_960.jpg_60x60q90.jpg'
      }],
      showSidebar: false
    };
  }

  render() {
    const {
      autoFocus = true,
      controllerRef,
      singleLayout,
      doubleLayout,
      // eslint-disable-next-line @typescript-eslint/no-shadow
      plugins,
      docStyle,
      dataUid
    } = this.props;
    const {
      value
    } = this.state;
    return /*#__PURE__*/_createElement(_.Provider, {
      plugins: plugins || this.plugins,
      value: value,
      onChange: this.handleChange,
      autoFocus: autoFocus,
      controllerRef: controllerRef,
      docStyle: docStyle,
      dataUid: dataUid
    }, /*#__PURE__*/_createElement(_.HeadingToolbar, {
      singleLayout: singleLayout,
      doubleLayout: doubleLayout
    }), _ref3, /*#__PURE__*/_createElement(_.Content, {
      tabIndex: 0,
      getScrollableContent: this.getScrollableContent,
      getScrollableContainer: this.getScrollableContainer
    }), this.state.showSidebar && /*#__PURE__*/_createElement(SidebarBox, {
      "data-testid": "image-sidebar"
    }, /*#__PURE__*/_createElement(SidebarCloseButton, {
      onClick: this.handleCloseSidebar
    }, "X"), _ref4));
  }

}

exports.default = EditorWithToolbarNext;
//# sourceMappingURL=editor.js.map