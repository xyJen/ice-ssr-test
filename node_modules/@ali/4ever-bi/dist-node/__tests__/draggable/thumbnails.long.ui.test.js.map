{"version":3,"sources":["../../../../src/__tests__/draggable/thumbnails.long.ui.test.tsx"],"names":["getDragThumbnails","oldUtils","App","props","val","controllerRef","value","setValue","React","useState","createBiPlugins","draggable","hr","table","leftToolbar","handleChange","change","enabled","menu","key","renderApp","controller","c","results","container","document","body","findByTestId","paragraphs","querySelectorAll","fireEvent","mouseMove","dragHander","mouseEnter","describe","afterEach","jest","clearAllMocks","test","expect","DRAG_HIGHLIGHT_CLASSNAME","length","toBe","p","querySelector","clientHeightSpy","spyOn","mockImplementation","thumbnail","viewKey","scale","firstElementChild","style","transform","replace","parseFloat","toBeLessThan","mockRestore"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport * as React from 'react';\nimport { fireEvent, jsx, renderEditor } from '@ali/4ever-dev-test';\nimport { cleanup, waitFor, act } from '@testing-library/react';\nimport {\n  Value,\n  Change,\n  Controller,\n} from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport Provider from '../../provider';\nimport Content from '../../content';\nimport { biFactory as table } from '@ali/4ever-plugin-table';\nimport hr from '../../plugins/hr';\nimport draggable from '../../plugins/draggable';\nimport leftToolbar from '../../plugins/leftToolbar';\nimport { DRAG_HIGHLIGHT_CLASSNAME, oldUtils } from '@ali/4ever-plugin-draggable';\nimport createCustomizedBiPlugins from '../../createCustomizedBiPlugins';\n\nconst getDragThumbnails = oldUtils.getDragThumbnails;\n\ninterface AppProps {\n  val?: Value;\n  controllerRef?: (controller: Controller) => void;\n}\n\nconst App: React.FC<AppProps> = (props) => {\n  const { val, controllerRef } = props;\n  const [value, setValue] = React.useState(val);\n  const createBiPlugins = createCustomizedBiPlugins({\n    draggable,\n    hr,\n    table,\n    leftToolbar,\n  });\n\n  const handleChange = (change: Change) => {\n    act(() => {\n      setValue(change.value);\n    });\n  };\n\n  return (\n    <Provider\n      value={value}\n      plugins={createBiPlugins({\n        draggable: {\n          enabled: true,\n        },\n        leftToolbar: {\n          menu: [\n            {\n              key: 'draggable',\n            },\n          ],\n        },\n      })}\n      controllerRef={controllerRef}\n      onChange={handleChange}\n      autoFocus\n    >\n      <Content />\n    </Provider>\n  );\n};\n\nasync function renderApp(val?: Value) {\n  let controller: Controller | undefined;\n  const controllerRef = (c) => {\n    controller = c;\n  };\n  const results = await renderEditor(<App val={val} controllerRef={controllerRef} />, {\n    container: document.body,\n  });\n  const { container, findByTestId } = results;\n  const paragraphs = container.querySelectorAll('[data-type=\"paragraph\"]');\n  fireEvent.mouseMove(paragraphs[0]);\n  const dragHander = await waitFor(() => findByTestId('drag-hander'));\n  fireEvent.mouseEnter(dragHander);\n  return { ...results, paragraphs, controller, dragHander };\n}\n\ndescribe('Bi/draggable/thumbnails', () => {\n  afterEach(() => {\n    cleanup();\n    jest.clearAllMocks();\n  });\n\n  test('single long paragraph thumbnail', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"a\">\n            long<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { container, controller } = await renderApp(value);\n    await waitFor(() => {\n      expect(container.querySelectorAll(`.${DRAG_HIGHLIGHT_CLASSNAME}`).length).toBe(1);\n    });\n    const p = container.querySelector('[data-cangjie-key=\"a\"]');\n    const clientHeightSpy = jest\n      .spyOn(p, 'clientHeight', 'get')\n      .mockImplementation(() => 1000);\n    const thumbnail = getDragThumbnails(controller, {\n      viewKey: 'a',\n    });\n    const scale = thumbnail.firstElementChild.style.transform.replace('scale(', '');\n    expect(parseFloat(scale)).toBeLessThan(1);\n    clientHeightSpy.mockRestore();\n  });\n});\n"],"file":"thumbnails.long.ui.test.js"}