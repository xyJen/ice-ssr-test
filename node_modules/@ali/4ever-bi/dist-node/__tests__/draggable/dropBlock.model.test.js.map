{"version":3,"sources":["../../../../src/__tests__/draggable/dropBlock.model.test.tsx"],"names":["createBiPlugins","draggable","leftToolbar","table","dragBlockCases","name","dragKey","dropKey","dropPosition","DROP_POSITION","after","isCopy","in","out","copyedOut","before","colsWidth","plugins","enabled","menu","key","array","describe","forEach","testCase","value","draggableData","dragFragment","type","DRAG_TYPE","blocks","fragment","dropHolder","actual","expected","controller","test","Controller","create","command","toJSON","setValue","expect","toEqual"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Value, Controller } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  jsx,\n} from '@ali/4ever-dev-test';\nimport { biFactory as table } from '@ali/4ever-plugin-table';\nimport draggable from '../../plugins/draggable';\nimport leftToolbar from '../../plugins/leftToolbar';\nimport {\n  DRAG_TYPE,\n  DROP_POSITION,\n} from '@ali/4ever-plugin-draggable';\nimport { createCustomizedBiPlugins } from '../..';\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  draggable,\n  leftToolbar,\n  table,\n});\n\nconst dragBlockCases = [\n  {\n    name: 'UpDown',\n    dragKey: 'drag-1',\n    dropKey: 'drag-2',\n    dropPosition: DROP_POSITION.after,\n    isCopy: true,\n    in: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n        </document>\n      </value>\n    ),\n    out: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n        </document>\n      </value>\n    ),\n    copyedOut: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n        </document>\n      </value>\n    ),\n  },\n  {\n    name: 'DownUp',\n    dragKey: 'drag-2',\n    dropKey: 'drag-1',\n    dropPosition: DROP_POSITION.before,\n    isCopy: true,\n    in: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n        </document>\n      </value>\n    ),\n    out: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n        </document>\n      </value>\n    ),\n    copyedOut: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n        </document>\n      </value>\n    ),\n  },\n  {\n    name: 'TableInTable',\n    dragKey: 'table-key-1',\n    dropKey: 'drag-2',\n    dropPosition: DROP_POSITION.after,\n    in: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"table\" key=\"table-key-1\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\" />\n            </block>\n          </block>\n          <block type=\"table\" key=\"table-key-2\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"drag-2\">B</block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ),\n    out: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"table\" key=\"table-key-1\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\" />\n            </block>\n          </block>\n          <block type=\"table\" key=\"table-key-2\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"drag-2\">B</block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ),\n  },\n  {\n    name: 'InTable',\n    dragKey: 'drag-1',\n    dropKey: 'drag-2',\n    dropPosition: DROP_POSITION.after,\n    isCopy: true,\n    in: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"drag-2\">B</block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ),\n    out: (\n      <value>\n        <document>\n          <block type=\"paragraph\" />\n          <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"drag-2\">B</block>\n                <block type=\"paragraph\" key=\"drag-1\">A</block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ),\n    copyedOut: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"drag-2\">B</block>\n                <block type=\"paragraph\" key=\"drag-1\">A</block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ),\n  },\n  {\n    name: 'OutTable',\n    dragKey: 'drag-2',\n    dropKey: 'drag-1',\n    dropPosition: DROP_POSITION.before,\n    in: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\">\n                <block type=\"paragraph\" key=\"drag-2\">B</block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ),\n    out: (\n      <value>\n        <document>\n          <block type=\"paragraph\" key=\"drag-2\">B</block>\n          <block type=\"paragraph\" key=\"drag-1\">A</block>\n          <block type=\"paragraph\" />\n          <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100, 100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">A</block>\n              </block>\n              <block type=\"table-cell\" />\n            </block>\n          </block>\n        </document>\n      </value>\n    ),\n  },\n];\n\nconst plugins = createBiPlugins({\n  draggable: {\n    enabled: true,\n  },\n  leftToolbar: {\n    menu: [\n      {\n        key: 'draggable',\n      },\n    ],\n  },\n}).array;\n\ndescribe('bi/draggable/dropBlock.model', () => {\n  describe('drag block', () => {\n    dragBlockCases.forEach((testCase) => {\n      const value = testCase.in as unknown as Value;\n\n      const draggableData = {\n        dragFragment: {\n          type: DRAG_TYPE.blocks,\n          fragment: [{\n            key: testCase.dragKey,\n          }],\n        },\n        dropHolder: {\n          key: testCase.dropKey,\n          dropPosition: testCase.dropPosition,\n        },\n      };\n\n      let actual;\n      let expected;\n      let controller;\n\n      if (testCase.isCopy) {\n        draggableData.isCopy = true;\n\n        test(`块级元素拖拽-${testCase.name}-copy`, async () => {\n          controller = Controller.create({\n            value,\n            plugins,\n          });\n\n          // @ts-ignore\n          controller.command('draggableDropFragment', draggableData);\n\n          actual = controller.value.toJSON();\n          expected = controller\n            .setValue(testCase.copyedOut as unknown as Value)\n            .value.toJSON();\n          expect(actual).toEqual(expected);\n        });\n      }\n\n      test(`块级元素拖拽-${testCase.name}`, async () => {\n        draggableData.isCopy = false;\n        controller = Controller.create({\n          value,\n          plugins,\n        });\n        // @ts-ignore\n        controller.command('draggableDropFragment', draggableData);\n\n        actual = controller.value.toJSON();\n        expected = controller\n          .setValue(testCase.out as unknown as Value)\n          .value.toJSON();\n\n        expect(actual).toEqual(expected);\n      });\n    });\n  });\n});\n"],"file":"dropBlock.model.test.js"}