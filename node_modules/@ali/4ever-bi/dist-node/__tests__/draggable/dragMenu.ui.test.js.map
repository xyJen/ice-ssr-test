{"version":3,"sources":["../../../../src/__tests__/draggable/dragMenu.ui.test.tsx"],"names":["defaultValue","App","props","val","value","setValue","React","useState","createBiPlugins","draggable","ImTagPlugin","leftToolbar","handleChange","change","enabled","menu","key","renderApp","results","container","document","body","paragraphs","querySelectorAll","describe","afterEach","jest","clearAllMocks","test","findByTestId","queryByTestId","fireEvent","mouseMove","dragHander","mouseEnter","click","insertAfter","mouseUp","insertBefore"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport * as React from 'react';\nimport { fireEvent, jsx, renderEditor } from '@ali/4ever-dev-test';\nimport { cleanup, waitFor, fireEvent as event, act } from '@testing-library/react';\nimport {\n  Value,\n  Change,\n} from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport Provider from '../../provider';\nimport Content from '../../content';\nimport draggable from '../../plugins/draggable';\nimport leftToolbar from '../../plugins/leftToolbar';\nimport ImTagPlugin from '../../plugins/imTag';\nimport createCustomizedBiPlugins from '../../createCustomizedBiPlugins';\n\nconst defaultValue = ((\n  <value>\n    <document>\n      <block type=\"paragraph\">\n        AAA\n      </block>\n      <block type=\"paragraph\">\n        BBB<anchor />\n      </block>\n    </document>\n  </value>\n) as unknown) as Value;\n\n\ninterface AppProps {\n  val?: Value;\n}\n\nconst App: React.FC<AppProps> = (props) => {\n  const { val = defaultValue } = props;\n  const [value, setValue] = React.useState(val);\n  const createBiPlugins = createCustomizedBiPlugins({\n    draggable,\n    ImTagPlugin,\n    leftToolbar,\n  });\n\n  const handleChange = (change: Change) => {\n    act(() => {\n      setValue(change.value);\n    });\n  };\n\n  return (\n    <Provider\n      value={value}\n      plugins={createBiPlugins({\n        draggable: {\n          enabled: true,\n        },\n        leftToolbar: {\n          menu: [\n            {\n              key: 'draggable',\n            },\n          ],\n        },\n      })}\n      onChange={handleChange}\n      autoFocus\n    >\n      <Content />\n    </Provider>\n  );\n};\n\nasync function renderApp(val?: Value) {\n  const results = await renderEditor(<App val={val} />, {\n    container: document.body,\n  });\n  const { container } = results;\n  const paragraphs = container.querySelectorAll('[data-type=\"paragraph\"]');\n  return { ...results, paragraphs };\n}\n\ndescribe('Bi/draggable/menu', () => {\n  afterEach(() => {\n    cleanup();\n    jest.clearAllMocks();\n  });\n\n  test('show dragMenu', async () => {\n    const { findByTestId, paragraphs, queryByTestId } = await renderApp();\n    fireEvent.mouseMove(paragraphs[0]);\n    const dragHander = await waitFor(() => findByTestId('drag-hander'));\n    fireEvent.mouseEnter(dragHander);\n\n    await waitFor(() => queryByTestId('drag-menu_root'));\n  });\n\n  test('dragMenu insert after', async () => {\n    const { findByTestId, paragraphs, queryByTestId } = await renderApp();\n    fireEvent.mouseMove(paragraphs[0]);\n    const dragHander = await waitFor(() => findByTestId('drag-hander'));\n    fireEvent.click(dragHander);\n\n    await waitFor(() => findByTestId('drag-menu_root'));\n\n    const insertAfter = await waitFor(() => queryByTestId('menu-item-insert-after'));\n    fireEvent.mouseUp(insertAfter);\n    fireEvent.click(insertAfter);\n\n    await waitFor(() => queryByTestId('newline-guide-menu'));\n  });\n\n  test('dragMenu insert before', async () => {\n    const { findByTestId, paragraphs, queryByTestId } = await renderApp();\n    fireEvent.mouseMove(paragraphs[0]);\n    const dragHander = await waitFor(() => findByTestId('drag-hander'));\n    fireEvent.click(dragHander);\n\n    await waitFor(() => findByTestId('drag-menu_root'));\n\n    const insertBefore = await waitFor(() => queryByTestId('menu-item-insert-before'));\n    fireEvent.mouseUp(insertBefore);\n    fireEvent.click(insertBefore);\n\n    await waitFor(() => queryByTestId('newline-guide-menu'));\n  });\n\n});\n"],"file":"dragMenu.ui.test.js"}