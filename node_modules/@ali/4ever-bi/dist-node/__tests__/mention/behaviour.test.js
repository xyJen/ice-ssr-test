"use strict";

var _everCangjie = require("@ali/4ever-cangjie");

require("@testing-library/jest-dom/extend-expect");

var _everDevTest = require("@ali/4ever-dev-test");

var _ = require("../..");

/* eslint-disable @typescript-eslint/no-explicit-any */

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("inline", {
  key: "123",
  type: "mention",
  data: {
    name: 'tom',
    id: '0',
    login: '0',
    avatarUrl: '0.jpg'
  }
}), (0, _everDevTest.jsx)("cursor", null))));
const plugins = (0, _.createBiPlugins)().array;
describe('Bi/mention/behaviour', () => {
  describe('queries', () => {
    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    const {
      document
    } = controller.value;
    const node = document.getNode('123');
    test('isSupportSearch', async () => {
      const isSupportSearch = controller.query('isSupportSearch', node);
      expect(isSupportSearch).toBeTruthy();
    });
    test('searchResult', async () => {
      const searchResult = controller.query('getSearchResult', 'tom', node);
      expect(searchResult).toEqual({
        key: '123',
        type: 'mention',
        readonly: true
      });
    });
  });
});
//# sourceMappingURL=behaviour.test.js.map