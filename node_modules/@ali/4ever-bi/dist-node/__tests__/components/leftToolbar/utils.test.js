"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everCangjie = require("@ali/4ever-cangjie");

var _everDevTest = require("@ali/4ever-dev-test");

var _editor = _interopRequireDefault(require("../../editor"));

var _everPluginTable = require("@ali/4ever-plugin-table");

var _callout = _interopRequireDefault(require("../../../plugins/callout"));

var _createCustomizedBiPlugins = _interopRequireDefault(require("../../../createCustomizedBiPlugins"));

var _everComponent = require("@ali/4ever-component");

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const createBiPlugins = (0, _createCustomizedBiPlugins.default)({
  calloutPlugin: _callout.default,
  tablePlugin: _everPluginTable.biFactory
});
const plugins = createBiPlugins();

var _ref = (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  key: "p"
});

describe('components/leftToolbar/utils/findBlockKeyFromEvent', () => {
  it('getParentByAttributes - 高亮块在 table 内时，高亮块内的元素父节点为高亮块', async () => {
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "table",
      key: "table",
      data: {
        colsWidth: [100]
      }
    }, (0, _everDevTest.jsx)("block", {
      type: "table-row"
    }, (0, _everDevTest.jsx)("block", {
      type: "table-cell",
      key: "table-cell"
    }, (0, _everDevTest.jsx)("block", {
      type: "container",
      key: "callout",
      data: {
        metadata: {
          showstk: true,
          sticker: '灵感'
        },
        subType: "colorBlocks"
      }
    }, _ref))))));
    const controllerRef = jest.fn();
    const {
      container
    } = await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      plugins: plugins,
      controllerRef: controllerRef
    }));
    const callout = container.querySelector('[data-cangjie-key="callout"]');
    const cell = container.querySelector('[data-cangjie-key="table-cell"]');
    const parent = (0, _everComponent.getParentByAttributes)(_everCangjie.constants.Selector.edgeSelectable, callout.childNodes[0]);
    expect(parent.contains(cell)).toBe(false);
  });
});
//# sourceMappingURL=utils.test.js.map