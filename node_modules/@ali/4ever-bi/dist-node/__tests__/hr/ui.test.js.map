{"version":3,"sources":["../../../../src/__tests__/hr/ui.test.tsx"],"names":["createBiPlugins","hr","Editor","props","defaultValue","controllerRef","value","setValue","React","useState","plugins","handleChange","useCallback","changed","toolButtons","name","describe","beforeAll","jest","spyOn","console","error","mockImplementation","afterAll","mockRestore","afterEach","test","queryByTestId","editor","event","HOTKEYS","enter","fireEvent","keyDown","container","Mo","textToValue","button","querySelector","click","expect","querySelectorAll","toHaveLength","key","keyCode","jc","findByTestId","hrWrapper","colorPanel","colorBox","hrElement","getComputedStyle","backgroundColor","toBe","toggleSelect","artTrigger"],"mappings":";;;;;;AAGA;;AAEA;;AACA;;AAOA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AAxBA;;AACA;;AACA;AA6BA,MAAMA,eAAe,GAAG,iCAA0B;AAChDC,EAAAA,EAAE,EAAFA;AADgD,CAA1B,CAAxB;;WAwBM,sBAAC,gBAAD;AAAS,EAAA,QAAQ,EAAE;AAAnB,E;;AApBN,MAAMC,MAA6B,GAAGC,KAAK,IAAI;AAC7C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCF,KAAxC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBC,KAAK,CAACC,QAAN,CAAeL,YAAf,CAA1B;AACA,QAAMM,OAAO,GAAGV,eAAe,EAA/B;AAEA,QAAMW,YAAY,GAAGH,KAAK,CAACI,WAAN,CAAkBC,OAAO,IAAI;AAChDN,IAAAA,QAAQ,CAACM,OAAO,CAACP,KAAT,CAAR;AACD,GAFoB,EAElB,EAFkB,CAArB;AAIA,SACE,sBAAC,iBAAD;AACE,IAAA,OAAO,EAAEI,OADX;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,QAAQ,EAAEK,YAHZ;AAIE,IAAA,aAAa,EAAEN;AAJjB,KAME,sBAAC,SAAD;AACE,IAAA,WAAW,EAAE,KADf;AAEE,IAAA,YAAY,EAAE,CAAC;AAAES,MAAAA,WAAW,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD;AAAf,KAAD;AAFhB,IANF,OADF;AAcD,CAvBD;;YAgDQ,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,UACK,qCADL,CADF,CADF,C;;YAkBA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,UACK,qCADL,CADF,CADF,C;;YA0BA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE,qCADF,CADF,CADF,C;;YA0BE,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE,qCADF,CADF,CADF,C;;YA0BO,qC;;YAkBT,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,UACK,qCADL,CADF,CADF,C;;YAgCA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,UACK,qCADL,CADF,CADF,C;;AAzKRC,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,EAAoB,OAApB,EAFc,CAGd;;AACAA,IAAAA,OAAO,CAACC,KAAR,CAAcC,kBAAd,CAAiC,MAAM,CAAG,CAA1C;AACD,GALQ,CAAT;AAOAC,EAAAA,QAAQ,CAAC,MAAM;AACb;AACAH,IAAAA,OAAO,CAACC,KAAR,CAAcG,WAAd;AACD,GAHO,CAAR;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACD,GAFQ,CAAT;AAIAT,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBU,IAAAA,IAAI,CAAC,wBAAD,EAA2B,YAAY;AACzC;AACN;AACA;AACM,YAAMpB,KAAK,QAAX;AASA,YAAM;AAAEqB,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,UAA4B,MAAM,+BACtC,sBAAC,MAAD;AAAQ,QAAA,YAAY,EAAEtB;AAAtB,QADsC,CAAxC;AAGA,YAAM,mBAAN;AACA,YAAMuB,KAAK,GAAG,iCAAeC,qBAAQC,KAAvB,CAAd;;AACAC,6BAAUC,OAAV,CAAkBL,MAAlB,EAA2BC,KAA3B;;AACA,YAAM,4BAAe,MAAMF,aAAa,CAAC,cAAD,CAAlC,CAAN;AACD,KApBG,CAAJ;AAqBAD,IAAAA,IAAI,CAAC,wBAAD,EAA2B,YAAY;AACzC,YAAMpB,KAAK,QAAX;AASA,YAAM;AAAEqB,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,UAA4B,MAAM,+BACtC,sBAAC,MAAD;AAAQ,QAAA,YAAY,EAAEtB;AAAtB,QADsC,CAAxC;AAGA,YAAM,mBAAN;AACA,YAAMuB,KAAK,GAAG,iCAAeC,qBAAQC,KAAvB,CAAd;;AACAC,6BAAUC,OAAV,CAAkBL,MAAlB,EAA2BC,KAA3B;;AACA,YAAM,4BAAe,MAAMF,aAAa,CAAC,cAAD,CAAlC,CAAN;AACD,KAjBG,CAAJ;AAkBAD,IAAAA,IAAI,CAAC,OAAD,EAAU,YAAY;AACxB,YAAM;AAAEC,QAAAA,aAAF;AAAiBO,QAAAA;AAAjB,UAA+B,MAAM,+BACzC,sBAAC,MAAD;AAAQ,QAAA,YAAY,EAAEC,oBAAGC,WAAH,CAAe,EAAf;AAAtB,QADyC,CAA3C;AAGA,YAAMC,MAAM,GAAGH,SAAS,CAACI,aAAV,CAAwB,mCAAxB,CAAf,CAJwB,CAIqD;;AAC7EN,6BAAUO,KAAV,CAAgBF,MAAhB;;AACA,YAAM,4BAAe,MAAMV,aAAa,CAAC,cAAD,CAAlC,CAAN;AACD,KAPG,CAAJ;AAQAD,IAAAA,IAAI,CAAC,4BAAD,EAA+B,YAAY;AAC7C,YAAMpB,KAAK,QAAX;AASA,YAAM;AAAEqB,QAAAA,aAAF;AAAiBC,QAAAA,MAAjB;AAAyBM,QAAAA;AAAzB,UAAuC,MAAM,+BACjD,sBAAC,MAAD;AAAQ,QAAA,YAAY,EAAE5B;AAAtB,QADiD,CAAnD;AAGA,YAAM,4BAAe,MAAMqB,aAAa,CAAC,cAAD,CAAlC,CAAN,CAb6C,CAc7C;;AACA,YAAME,KAAK,GAAG,iCAAeC,qBAAQC,KAAvB,CAAd;;AACAC,6BAAUC,OAAV,CAAkBL,MAAlB,EAA2BC,KAA3B,EAhB6C,CAiB7C;;;AACA,YAAM,qBAAQ,MAAM;AAClBW,QAAAA,MAAM,CACJN,SAAS,CAACO,gBAAV,CAA2B,yBAA3B,CADI,CAAN,CAEEC,YAFF,CAEe,CAFf;AAGD,OAJK,CAAN;AAKD,KAvBG,CAAJ;AAyBA1B,IAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBU,MAAAA,IAAI,CAAC,gBAAD,EAAmB,YAAY;AACjC,cAAMpB,KAAK,QAAX;AASA,cAAM;AAAEqB,UAAAA,aAAF;AAAiBC,UAAAA;AAAjB,YAA4B,MAAM,+BACtC,sBAAC,MAAD;AAAQ,UAAA,YAAY,EAAEtB;AAAtB,UADsC,CAAxC;AAGA,cAAM,4BAAe,MAAMqB,aAAa,CAAC,cAAD,CAAlC,CAAN,CAbiC,CAcjC;;AACAK,+BAAUC,OAAV,CAAkBL,MAAlB,EAA2B;AACzBe,UAAAA,GAAG,EAAE,WADoB;AAEzBC,UAAAA,OAAO,EAAE;AAFgB,SAA3B;;AAIA,cAAM,uCAA0B,MAAMjB,aAAa,CAAC,cAAD,CAA7C,CAAN;AACD,OApBG,CAAJ;AAqBD,KAtBO,CAAR;AAwBAD,IAAAA,IAAI,CAAC,qBAAD,EAAwB,YAAY;AACtC,YAAMpB,KAAK,GACT,qCACE,wCACE;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,IAAI,EAAE;AAAEuC,UAAAA,EAAE,EAAE;AAAN;AAA9B,sBADF,CADF,CADF;AASA,YAAM;AAAElB,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,UAA4B,MAAM,+BACtC,sBAAC,MAAD;AAAQ,QAAA,YAAY,EAAEtB;AAAtB,QADsC,CAAxC;AAGA,YAAM,mBAAN;AACA,YAAMuB,KAAK,GAAG,iCAAeC,qBAAQC,KAAvB,CAAd;;AACAC,6BAAUC,OAAV,CAAkBL,MAAlB,EAA2BC,KAA3B;;AACA,YAAM,4BAAe,MAAMF,aAAa,CAAC,cAAD,CAAlC,CAAN;AACD,KAjBG,CAAJ;AAkBD,GAnHO,CAAR;AAqHAX,EAAAA,QAAQ,CAAC,SAAD,EAAY,MAAM;AACxBU,IAAAA,IAAI,CAAC,eAAD,EAAkB,YAAY;AAChC,YAAMpB,KAAK,QAAX;AASA,YAAM;AAAE4B,QAAAA,SAAF;AAAaP,QAAAA,aAAb;AAA4BC,QAAAA,MAA5B;AAAoCkB,QAAAA;AAApC,UAAqD,MAAM,+BAC/D,sBAAC,MAAD;AAAQ,QAAA,YAAY,EAAExC;AAAtB,QAD+D,CAAjE;AAIA,YAAMuB,KAAK,GAAG,iCAAeC,qBAAQC,KAAvB,CAAd;;AACAC,6BAAUC,OAAV,CAAkBL,MAAlB,EAA2BC,KAA3B;;AAEA,YAAMkB,SAAS,GAAG,MAAMD,YAAY,CAAC,cAAD,CAApC;;AACAd,6BAAUO,KAAV,CAAgBQ,SAAhB;;AAEA,YAAMC,UAAU,GAAG,MAAMF,YAAY,CAAC,8CAAD,CAArC;;AACAd,6BAAUO,KAAV,CAAgBS,UAAhB;;AACA,YAAM,mBAAN;AAEA,YAAMC,QAAQ,GAAGf,SAAS,CAACI,aAAV,CAAwB,mBAAxB,CAAjB;;AACAN,6BAAUO,KAAV,CAAgBU,QAAhB;;AACA,YAAM,mBAAN;AAEA,YAAMC,SAAS,GAAGhB,SAAS,CAACI,aAAV,CAAwB,IAAxB,CAAlB;AACAE,MAAAA,MAAM,CAACW,gBAAgB,CAACD,SAAD,CAAhB,CAA4BE,eAA7B,CAAN,CAAoDC,IAApD,CAAyD,gBAAzD;AACD,KA9BG,CAAJ;AAgCA3B,IAAAA,IAAI,CAAC,eAAD,EAAkB,YAAY;AAChC,YAAMpB,KAAK,QAAX;AASA,YAAM;AAAE4B,QAAAA,SAAF;AAAaN,QAAAA,MAAb;AAAqBkB,QAAAA;AAArB,UAAsC,MAAM,+BAChD,sBAAC,MAAD;AAAQ,QAAA,YAAY,EAAExC;AAAtB,QADgD,CAAlD;AAIA,YAAMuB,KAAK,GAAG,iCAAeC,qBAAQC,KAAvB,CAAd;;AACAC,6BAAUC,OAAV,CAAkBL,MAAlB,EAA2BC,KAA3B;;AAEA,YAAMkB,SAAS,GAAG,MAAMD,YAAY,CAAC,cAAD,CAApC;;AACAd,6BAAUO,KAAV,CAAgBQ,SAAhB;;AAEA,YAAMC,UAAU,GAAG,MAAMF,YAAY,CAAC,8CAAD,CAArC;;AACAd,6BAAUO,KAAV,CAAgBS,UAAhB;;AAEA,YAAMM,YAAY,GAAG,MAAMR,YAAY,CAAC,oCAAD,CAAvC;;AACAd,6BAAUO,KAAV,CAAgBe,YAAhB;;AAEA,YAAMC,UAAU,GAAG,MAAMT,YAAY,CAAC,6BAAD,CAArC;;AACAd,6BAAUO,KAAV,CAAgBgB,UAAhB;;AACA,YAAM,mBAAN;AAEA,YAAMN,QAAQ,GAAGf,SAAS,CAACI,aAAV,CAAwB,mBAAxB,CAAjB;;AACAN,6BAAUO,KAAV,CAAgBU,QAAhB;;AACA,YAAM,mBAAN;AAEA,YAAMC,SAAS,GAAGhB,SAAS,CAACI,aAAV,CAAwB,IAAxB,CAAlB;AACAE,MAAAA,MAAM,CAACW,gBAAgB,CAACD,SAAD,CAAhB,CAA4BE,eAA7B,CAAN,CAAoDC,IAApD,CAAyD,iBAAzD;AACD,KApCG,CAAJ;AAqCD,GAtEO,CAAR;AAuED,CA7MO,CAAR","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport * as React from 'react';\nimport { Value, Controller } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\nimport {\n  cleanup,\n  waitForElement,\n  waitForElementToBeRemoved,\n  waitFor,\n  wait,\n} from '@testing-library/react';\nimport {\n  renderEditor,\n  fireEvent,\n  jsx,\n  getHotkeyEvent,\n  HOTKEYS,\n} from '@ali/4ever-dev-test';\nimport Mo from '../serializer';\nimport hr from '../../plugins/hr';\nimport { createCustomizedBiPlugins, Toolbar } from '../..';\nimport Provider from '../../provider';\nimport Content from '../../content';\n\ninterface EditorProps {\n  defaultValue: Value;\n  controllerRef: (controller: Controller) => void;\n}\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  hr,\n});\n\nconst Editor: React.FC<EditorProps> = props => {\n  const { defaultValue, controllerRef } = props;\n  const [value, setValue] = React.useState(defaultValue);\n  const plugins = createBiPlugins();\n\n  const handleChange = React.useCallback(changed => {\n    setValue(changed.value);\n  }, []);\n\n  return (\n    <Provider\n      plugins={plugins}\n      value={value}\n      onChange={handleChange}\n      controllerRef={controllerRef}\n    >\n      <Toolbar\n        autoFolding={false}\n        singleLayout={[{ toolButtons: [{ name: 'hr' }] }]}\n      />\n      <Content tabIndex={0} />\n    </Provider>\n  );\n};\n\ndescribe('Bi/hr/ui', () => {\n  beforeAll(() => {\n    // 防止被 componentDidCatch catch 的 error 被控制台输出\n    jest.spyOn(console, 'error');\n    // @ts-ignore\n    console.error.mockImplementation(() => { });\n  });\n\n  afterAll(() => {\n    // @ts-ignore\n    console.error.mockRestore();\n  });\n\n  afterEach(() => {\n    cleanup();\n  });\n\n  describe('插入分割线', () => {\n    test('快捷键插入: 输入 --- 回车，插入分割线', async () => {\n      /**\n       * 这个 test case 在 CI 中失败率非常高，但是在本地进行多次测试，均无法复现。\n       */\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              ---<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      await wait();\n      const event = getHotkeyEvent(HOTKEYS.enter);\n      fireEvent.keyDown(editor!, event);\n      await waitForElement(() => queryByTestId('horizon-line'));\n    });\n    test('快捷键插入: 输入 *** 回车，插入分割线', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              ***<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      await wait();\n      const event = getHotkeyEvent(HOTKEYS.enter);\n      fireEvent.keyDown(editor!, event);\n      await waitForElement(() => queryByTestId('horizon-line'));\n    });\n    test('工具栏插入', async () => {\n      const { queryByTestId, container } = await renderEditor(\n        <Editor defaultValue={Mo.textToValue('')} />,\n      );\n      const button = container.querySelector('[data-testid=\"bi-toolbar-hrline\"]'); // TODO @淼淼 迁移到3.0 框架中\n      fireEvent.click(button!);\n      await waitForElement(() => queryByTestId('horizon-line'));\n    });\n    test('插入分割线后, 选中, 回车, 出现new line', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"hr\">\n              <cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor, container } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      await waitForElement(() => queryByTestId('horizon-line'));\n      // 回车\n      const event = getHotkeyEvent(HOTKEYS.enter);\n      fireEvent.keyDown(editor!, event);\n      // 只有一个hr和一个空行\n      await waitFor(() => {\n        expect(\n          container.querySelectorAll('[data-type=\"paragraph\"]'),\n        ).toHaveLength(1);\n      });\n    });\n\n    describe('删除分割线', () => {\n      test('插入分割线后, 选中, 删除', async () => {\n        const value = ((\n          <value>\n            <document>\n              <block type=\"hr\">\n                <cursor />\n              </block>\n            </document>\n          </value>\n        ) as unknown) as Value;\n        const { queryByTestId, editor } = await renderEditor(\n          <Editor defaultValue={value} />,\n        );\n        await waitForElement(() => queryByTestId('horizon-line'));\n        // 删除\n        fireEvent.keyDown(editor!, {\n          key: 'Backspace',\n          keyCode: 8,\n        });\n        await waitForElementToBeRemoved(() => queryByTestId('horizon-line'));\n      });\n    });\n\n    test('段落设置对齐方式后, 也可以插入分割线', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\" data={{ jc: 'center' }}>\n              ---<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, editor } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n      await wait();\n      const event = getHotkeyEvent(HOTKEYS.enter);\n      fireEvent.keyDown(editor!, event);\n      await waitForElement(() => queryByTestId('horizon-line'));\n    });\n  });\n\n  describe('设置分割线样式', () => {\n    test('使用标准色卡设置分割线颜色', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              ---<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { container, queryByTestId, editor, findByTestId } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      const event = getHotkeyEvent(HOTKEYS.enter);\n      fireEvent.keyDown(editor!, event);\n\n      const hrWrapper = await findByTestId('horizon-line');\n      fireEvent.click(hrWrapper);\n\n      const colorPanel = await findByTestId('splitbutton-arrow-ColorPicker-backgroundfont');\n      fireEvent.click(colorPanel);\n      await wait();\n\n      const colorBox = container.querySelector('[color=\"#C10002\"]');\n      fireEvent.click(colorBox);\n      await wait();\n\n      const hrElement = container.querySelector('hr');\n      expect(getComputedStyle(hrElement).backgroundColor).toBe('rgb(193, 0, 2)');\n    });\n\n    test('使用艺术色卡设置分割线颜色', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              ---<cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { container, editor, findByTestId } = await renderEditor(\n        <Editor defaultValue={value} />,\n      );\n\n      const event = getHotkeyEvent(HOTKEYS.enter);\n      fireEvent.keyDown(editor!, event);\n\n      const hrWrapper = await findByTestId('horizon-line');\n      fireEvent.click(hrWrapper);\n\n      const colorPanel = await findByTestId('splitbutton-arrow-ColorPicker-backgroundfont');\n      fireEvent.click(colorPanel);\n\n      const toggleSelect = await findByTestId('SelectWrap-color_panel_mode_select');\n      fireEvent.click(toggleSelect);\n\n      const artTrigger = await findByTestId('option-color_panel_art_mode');\n      fireEvent.click(artTrigger);\n      await wait();\n\n      const colorBox = container.querySelector('[color=\"#222328\"]');\n      fireEvent.click(colorBox);\n      await wait();\n\n      const hrElement = container.querySelector('hr');\n      expect(getComputedStyle(hrElement).backgroundColor).toBe('rgb(34, 35, 40)');\n    });\n  });\n});\n"],"file":"ui.test.js"}