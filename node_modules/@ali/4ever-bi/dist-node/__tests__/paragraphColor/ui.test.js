"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("@testing-library/jest-dom/extend-expect");

var _editor = _interopRequireDefault(require("../editor"));

var _everDevTest = require("@ali/4ever-dev-test");

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const DEFAULT_SHD_STYLES = {
  paddingLeft: '2px',
  paddingRight: '2px',
  marginLeft: '-2px',
  marginRight: '-2px',
  marginTop: '1px',
  marginBottom: '1px',
  borderRadius: '4px',
  transition: 'background 300ms'
};

const compareStyles = ele => Object.keys(DEFAULT_SHD_STYLES).every(key => ele.style[key] === DEFAULT_SHD_STYLES[key]);

const paragraphValue = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  data: {
    shd: '#BBFFAA'
  }
}, (0, _everDevTest.jsx)("text", null, "helloWord"))));
const listValue = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  data: {
    list: {
      listId: 'dn7ncrq6m7j',
      level: 0,
      isOrdered: false
    },
    shd: '#BBFFAA'
  }
}, (0, _everDevTest.jsx)("text", null, "helloWord"))));
const blockquoteValue = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  data: {
    blockquote: true,
    shd: '#BBFFAA'
  }
}, (0, _everDevTest.jsx)("text", null, "helloWord"))));

var _ref = (0, _everDevTest.jsx)(_editor.default, {
  defaultValue: paragraphValue
});

var _ref2 = (0, _everDevTest.jsx)(_editor.default, {
  defaultValue: listValue
});

var _ref3 = (0, _everDevTest.jsx)(_editor.default, {
  defaultValue: blockquoteValue
});

describe('设置段落背景颜色后, 存在默认样式', () => {
  test('普通段落设置段落背景颜色后，存在默认样式', async () => {
    const {
      content
    } = await (0, _everDevTest.renderEditor)(_ref);
    const ele = content.querySelector('[data-type="paragraph"]');
    expect(compareStyles(ele)).toBeTruthy();
  });
  test('列表设置段落背景颜色后，存在默认样式', async () => {
    const {
      content
    } = await (0, _everDevTest.renderEditor)(_ref2);
    const ele = content.querySelector('[data-type="paragraph"]').parentElement;
    expect(compareStyles(ele)).toBeTruthy();
  });
  test('引用设置段落背景颜色后，存在默认样式', async () => {
    const {
      content
    } = await (0, _everDevTest.renderEditor)(_ref3);
    const ele = content.querySelector('[data-type="paragraph"]').parentElement.parentElement;
    expect(compareStyles(ele)).toBeTruthy();
  });
});
//# sourceMappingURL=ui.test.js.map