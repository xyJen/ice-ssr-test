"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everCangjie = require("@ali/4ever-cangjie");

require("@testing-library/jest-dom/extend-expect");

var _everDevTest = require("@ali/4ever-dev-test");

var _paragraphColor = _interopRequireDefault(require("../../plugins/paragraphColor"));

var _clearParagraphShd = _interopRequireDefault(require("../../plugins/clearParagraphShd"));

var _actions = require("../../plugins/paragraphColor/actions");

var _ = require("../..");

/* eslint-disable @typescript-eslint/no-explicit-any */

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const defaultValue = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  key: "test-paragraph-color"
}, "Hello Cangjie", (0, _everDevTest.jsx)("cursor", null))));
const plugins = (0, _.createBiPlugins)({
  clearParagraphShdPlugin: _clearParagraphShd.default,
  paragraphColorPlugin: _paragraphColor.default
}).array;
const color = '#BBFFAA';
describe('Bi/paragraphColor/behaviour', () => {
  describe('设置段落字体颜色', () => {
    test('setParagraphColor', async () => {
      const value = defaultValue;

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      const {
        document
      } = controller.value;
      const node = document.getNode('test-paragraph-color');
      controller.run('onAction', (0, _actions.setParagraphColor)({
        node,
        color
      }));
      const paragraphColor = controller.query('getParagraphColor', {
        node
      });
      expect(paragraphColor).toBe('#BBFFAA');
    });
  });
  describe('设置段落背景颜色', () => {
    test('setParagraphBgColor', async () => {
      const value = defaultValue;

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      const {
        document
      } = controller.value;
      const node = document.getNode('test-paragraph-color');
      controller.run('onAction', (0, _actions.setParagraphBgColor)({
        node,
        color
      }));
      const paragraphBgColor = controller.query('getParagraphBgColor', {
        node
      });
      expect(paragraphBgColor).toBe('#BBFFAA');
    });
  });
  describe('设置段落背景颜色后换行，新行不带背景色', () => {
    test('setParagraphBgColor', async () => {
      const value = defaultValue;

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      const {
        document
      } = controller.value;
      const node = document.getNode('test-paragraph-color');
      controller.run('onAction', (0, _actions.setParagraphBgColor)({
        node,
        color
      }));
      controller.run('onKeyDown', new KeyboardEvent('keydown', (0, _everDevTest.getHotkeyEvent)('enter')));
      const newLineNode = controller.value.document.nodes[1];
      const newLineBgColor = controller.query('getParagraphBgColor', {
        node: newLineNode
      });
      expect(newLineBgColor).toBe('auto');
    });
  });
});
//# sourceMappingURL=behaviour.test.js.map