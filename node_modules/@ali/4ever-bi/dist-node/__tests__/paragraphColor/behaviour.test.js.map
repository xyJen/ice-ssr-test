{"version":3,"sources":["../../../../src/__tests__/paragraphColor/behaviour.test.tsx"],"names":["defaultValue","plugins","clearParagraphShdPlugin","paragraphColorPlugin","array","color","describe","test","value","controller","Controller","create","document","node","getNode","run","paragraphColor","query","expect","toBe","paragraphBgColor","KeyboardEvent","newLineNode","nodes","newLineBgColor"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Value, Controller, Block, Commands } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  jsx,\n  getHotkeyEvent,\n} from '@ali/4ever-dev-test';\nimport paragraphColorPlugin from '../../plugins/paragraphColor';\nimport clearParagraphShdPlugin from '../../plugins/clearParagraphShd';\nimport { setParagraphColor, setParagraphBgColor } from '../../plugins/paragraphColor/actions';\n\nimport { createBiPlugins } from '../..';\n\nconst defaultValue = (\n  <value>\n    <document>\n      <block type=\"paragraph\" key=\"test-paragraph-color\">Hello Cangjie<cursor /></block>\n    </document>\n  </value>\n);\n\nconst plugins = createBiPlugins({\n  clearParagraphShdPlugin,\n  paragraphColorPlugin,\n}).array;\n\nconst color = '#BBFFAA';\n\ndescribe('Bi/paragraphColor/behaviour', () => {\n  describe('设置段落字体颜色', () => {\n    test('setParagraphColor', async () => {\n      const value = defaultValue as unknown as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const { document } = controller.value;\n      const node = document.getNode('test-paragraph-color');\n\n      controller.run('onAction', setParagraphColor({ node, color }));\n\n      const paragraphColor = controller.query('getParagraphColor', { node });\n      expect(paragraphColor).toBe('#BBFFAA');\n    });\n  });\n\n  describe('设置段落背景颜色', () => {\n    test('setParagraphBgColor', async () => {\n      const value = defaultValue as unknown as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const { document } = controller.value;\n      const node = document.getNode('test-paragraph-color');\n\n      controller.run('onAction', setParagraphBgColor({ node, color }));\n\n      const paragraphBgColor = controller.query('getParagraphBgColor', { node });\n      expect(paragraphBgColor).toBe('#BBFFAA');\n    });\n  });\n\n  describe('设置段落背景颜色后换行，新行不带背景色', () => {\n    test('setParagraphBgColor', async () => {\n      const value = defaultValue as unknown as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      const { document } = controller.value;\n      const node = document.getNode('test-paragraph-color') as Block;\n\n      controller.run('onAction', setParagraphBgColor({ node, color }));\n\n      controller.run(\n        'onKeyDown',\n        new KeyboardEvent('keydown', getHotkeyEvent('enter')),\n      );\n\n      const newLineNode = controller.value.document.nodes[1];\n      const newLineBgColor = controller.query('getParagraphBgColor', { node: newLineNode });\n      expect(newLineBgColor).toBe('auto');\n    });\n  });\n});\n"],"file":"behaviour.test.js"}