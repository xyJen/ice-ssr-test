{"version":3,"sources":["../../../../src/__tests__/basic/ui.test.tsx"],"names":["describe","test","editor","content","Mo","textToValue","fireEvent","cangjieInput","data","textContent","forEach","pairs","onChange","jest","fn","queryByText","mockClear","keyDown","HOTKEYS","deleteBackward","expect","not","toHaveBeenCalled","deleteForward"],"mappings":";;;;AAEA;;AACA;;AACA;;AAOA;;AACA;;AAZA;;AACA;AAaAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BA,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,IAAAA,IAAI,CAAC,QAAD,EAAW,YAAY;AACzB,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAsB,MAAM,+BAAa,sBAAC,eAAD;AAAQ,QAAA,YAAY,EAAEC,oBAAGC,WAAH,CAAe,EAAf;AAAtB,QAAb,CAAlC;;AACAC,6BAAUC,YAAV,CAAuBL,MAAvB,EAA+B;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAA/B;;AACAF,6BAAUC,YAAV,CAAuBL,MAAvB,EAA+B;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAA/B;;AACAF,6BAAUC,YAAV,CAAuBL,MAAvB,EAA+B;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAA/B;;AACA,YAAM,2BAAe,MAAML,OAAO,EAAEM,WAAT,KAAyB,KAA9C,CAAN;AACD,KANG,CAAJ;AAQA,KAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAaC,OAAb,CAAsBC,KAAD,IAAW;AAC9BV,MAAAA,IAAI,CAAE,YAAWU,KAAK,CAAC,CAAD,CAAI,GAAEA,KAAK,CAAC,CAAD,CAAI,QAAjC,EAA0C,YAAY;AACxD,cAAMC,QAAQ,GAAGC,IAAI,CAACC,EAAL,EAAjB;AACA,cAAM;AAAEZ,UAAAA,MAAF;AAAUa,UAAAA;AAAV,YAA0B,MAAM,+BACpC,sBAAC,eAAD;AAAQ,UAAA,YAAY,EAAEX,oBAAGC,WAAH,CAAe,EAAf,CAAtB;AAA0C,UAAA,QAAQ,EAAEO;AAApD,UADoC,CAAtC;;AAGAN,+BAAUC,YAAV,CAAuBL,MAAvB,EAA+B;AAAEM,UAAAA,IAAI,EAAEG,KAAK,CAAC,CAAD;AAAb,SAA/B;;AACAL,+BAAUC,YAAV,CAAuBL,MAAvB,EAA+B;AAAEM,UAAAA,IAAI,EAAEG,KAAK,CAAC,CAAD;AAAb,SAA/B;;AACA,cAAM,2BAAe,MAAMI,WAAW,CAAC,IAAD,CAAhC,CAAN;AACD,OARG,CAAJ;AASD,KAVD;AAWD,GApBO,CAAR;AAsBAf,EAAAA,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,IAAAA,IAAI,CAAC,2BAAD,EAA8B,YAAY;AAC5C,YAAMW,QAAQ,GAAGC,IAAI,CAACC,EAAL,EAAjB;AACA,YAAM;AAAEZ,QAAAA;AAAF,UAAa,MAAM,+BACvB,sBAAC,eAAD;AACE,QAAA,YAAY,EAAEE,oBAAGC,WAAH,CAAe,cAAf,CADhB;AAEE,QAAA,QAAQ,EAAEO;AAFZ,QADuB,CAAzB;AAOAA,MAAAA,QAAQ,CAACI,SAAT;;AAEAV,6BAAUW,OAAV,CAAkBf,MAAlB,EAAyCgB,qBAAQC,cAAjD;;AAEAC,MAAAA,MAAM,CAACR,QAAD,CAAN,CAAiBS,GAAjB,CAAqBC,gBAArB;AACD,KAdG,CAAJ;AAgBArB,IAAAA,IAAI,CAAC,2BAAD,EAA8B,YAAY;AAC5C,YAAM;AAAEC,QAAAA,MAAF;AAAUa,QAAAA;AAAV,UAA0B,MAAM,+BACpC,sBAAC,eAAD;AAAQ,QAAA,YAAY,EAAEX,oBAAGC,WAAH,CAAe,cAAf;AAAtB,QADoC,CAAtC;;AAIAC,6BAAUW,OAAV,CACEf,MADF,EAEE,iCAAegB,qBAAQK,aAAvB,CAFF;;AAKA,YAAM,2BAAe,MAAMR,WAAW,CAAC,eAAD,CAAhC,CAAN;AACD,KAXG,CAAJ;AAYD,GA7BO,CAAR;AA8BD,CArDO,CAAR","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport { waitForElement } from '@testing-library/react';\nimport {\n  renderEditor,\n  jsx,\n  fireEvent,\n  getHotkeyEvent,\n  HOTKEYS,\n} from '@ali/4ever-dev-test';\nimport Editor from '../editor';\nimport Mo from '../serializer';\n\ndescribe('Bi/basic/ui', () => {\n  describe('input', () => {\n    test('正常输入字符', async () => {\n      const { editor, content } = await renderEditor(<Editor defaultValue={Mo.textToValue('')} />);\n      fireEvent.cangjieInput(editor, { data: 'H' });\n      fireEvent.cangjieInput(editor, { data: 'e' });\n      fireEvent.cangjieInput(editor, { data: 'y' });\n      await waitForElement(() => content?.textContent === 'Hey');\n    });\n\n    [['“', '”']].forEach((pairs) => {\n      test(`正确匹配中文引号 ${pairs[0]}${pairs[1]} -> “”`, async () => {\n        const onChange = jest.fn();\n        const { editor, queryByText } = await renderEditor(\n          <Editor defaultValue={Mo.textToValue('')} onChange={onChange} />,\n        );\n        fireEvent.cangjieInput(editor, { data: pairs[0] });\n        fireEvent.cangjieInput(editor, { data: pairs[1] });\n        await waitForElement(() => queryByText('“”'));\n      });\n    });\n  });\n\n  describe('delete', () => {\n    test('在文档开始位置按 backspace 不做任何处理', async () => {\n      const onChange = jest.fn();\n      const { editor } = await renderEditor(\n        <Editor\n          defaultValue={Mo.textToValue('Hello world!')}\n          onChange={onChange}\n        />,\n      );\n\n      onChange.mockClear();\n\n      fireEvent.keyDown(editor as HTMLElement, HOTKEYS.deleteBackward);\n\n      expect(onChange).not.toHaveBeenCalled();\n    });\n\n    test('在文档开始位置按 delete 删除光标后一个字符', async () => {\n      const { editor, queryByText } = await renderEditor(\n        <Editor defaultValue={Mo.textToValue('Hello world!')} />,\n      );\n\n      fireEvent.keyDown(\n        editor as HTMLElement,\n        getHotkeyEvent(HOTKEYS.deleteForward),\n      );\n\n      await waitForElement(() => queryByText(/^ello world!$/));\n    });\n  });\n});\n"],"file":"ui.test.js"}