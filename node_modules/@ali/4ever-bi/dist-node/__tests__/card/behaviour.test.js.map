{"version":3,"sources":["../../../../src/__tests__/card/behaviour.test.tsx"],"names":["calendarCardPlugin","config","cardType","renderNode","node","controller","onClick","run","height","data","onCangjiePaste","event","next","createBiPlugins","plugins","calendarCard","array","describe","test","value","output","metadata","subject","Controller","create","command","actual","toJSON","preserveSelections","expected","setValue","expect","toEqual","Commands","moveToRangeOfDocument"],"mappings":";;AAEA;;AACA;;AACA;;AAJA;;AACA;AAKA,MAAMA,kBAAkB,GAAG,mBAAaC,MAAD,IAAY;AACjD,SAAO;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,UAAU,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAWC,UAAX,KAAsC;AAChD,YAAMC,OAAO,GAAG,MAAM;AACpBD,QAAAA,UAAU,CAACE,GAAX,CAAe,UAAf,EAA2B,mBAAYH,IAAZ,EAAkB;AAAEI,UAAAA,MAAM,EAAE;AAAV,SAAlB,CAA3B;AACD,OAFD;;AAGA,YAAM;AAAEA,QAAAA;AAAF,UAAaJ,IAAI,CAACK,IAAxB;AACA,aAAO;AAAK,uBAAY,uBAAjB;AAAyC,QAAA,OAAO,EAAEH,OAAlD;AAA2D,4BAAkBE;AAA7E,oCAAP;AACD,KARI;AASLE,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQN,UAAR,EAAoBO,IAApB,KAA6B;AAC3C,aAAOA,IAAI,EAAX;AACD;AAXI,GAAP;AAaD,CAd0B,CAA3B;AAgBA,MAAMC,eAAe,GAAG,iCAA0B;AAChDb,EAAAA;AADgD,CAA1B,CAAxB;AAGA,MAAMc,OAAO,GAAGD,eAAe,CAAC;AAC9BE,EAAAA,YAAY,EAAE;AADgB,CAAD,CAAf,CAEbC,KAFH;;WAOM,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,WAEE,qCAFF,UADF,CADF,C;;YAaI;AAAO,EAAA,IAAI,EAAC;AAAZ,U;;YAEA;AAAO,EAAA,IAAI,EAAC;AAAZ,GAAwB,qCAAxB,U;;YAmBJ,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,sBAEE,qCAFF,CADF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,EALF,EAME;AAAO,EAAA,IAAI,EAAC;AAAZ,EANF,EAOE;AAAO,EAAA,IAAI,EAAC;AAAZ,mBAPF,CADF,C;;YAcA,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE,qCADF,oBADF,EAKE;AAAO,EAAA,IAAI,EAAC;AAAZ,EALF,EAME;AAAO,EAAA,IAAI,EAAC;AAAZ,EANF,EAOE;AAAO,EAAA,IAAI,EAAC;AAAZ,oBAEE,oCAFF,CAPF,CADF,C;;AAnDNC,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClCC,EAAAA,IAAI,CAAC,MAAD,EAAS,MAAM;AACjB,UAAMC,KAAK,OAAX;AAWA,UAAMC,MAAM,GACV,qCACE,+CAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAE;AAAElB,QAAAA,QAAQ,EAAE,UAAZ;AAAwBM,QAAAA,MAAM,EAAE,GAAhC;AAAqCa,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAA/C;AAAzB,MAFF,QADF,CADF;;AAUA,UAAMjB,UAAU,GAAGkB,wBAAWC,MAAX,CAAkB;AACnCL,MAAAA,KADmC;AAEnCL,MAAAA;AAFmC,KAAlB,CAAnB;;AAIAT,IAAAA,UAAU,CAACoB,OAAX,CAAmB,YAAnB,EAAiC;AAAEvB,MAAAA,QAAQ,EAAE,UAAZ;AAAwBM,MAAAA,MAAM,EAAE,GAAhC;AAAqCa,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAA/C,KAAjC;AAEA,UAAMI,MAAM,GAAGrB,UAAU,CAACc,KAAX,CAAiBQ,MAAjB,CAAwB;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAAxB,CAAf;AACA,UAAMC,QAAQ,GAAGxB,UAAU,CACxByB,QADc,CACLV,MADK,EAEdD,KAFc,CAERQ,MAFQ,CAED;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAFC,CAAjB;AAGAG,IAAAA,MAAM,CAACL,MAAD,CAAN,CAAeM,OAAf,CAAuBH,QAAvB;AACD,GAjCG,CAAJ;AAkCAX,EAAAA,IAAI,CAAC,cAAD,EAAiB,MAAM;AACzB,UAAMC,KAAK,QAAX;AAcA,UAAMC,MAAM,QAAZ;;AAgBA,UAAMf,UAAU,GAAGkB,wBAAWC,MAAX,CAAkB;AACnCL,MAAAA,KADmC;AAEnCL,MAAAA;AAFmC,KAAlB,CAAnB;;AAIAT,IAAAA,UAAU,CAACoB,OAAX,CAAmBQ,sBAASC,qBAA5B;AAEA,UAAMR,MAAM,GAAGrB,UAAU,CAACc,KAAX,CAAiBQ,MAAjB,CAAwB;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAAxB,CAAf;AACA,UAAMC,QAAQ,GAAGxB,UAAU,CACxByB,QADc,CACLV,MADK,EAEdD,KAFc,CAERQ,MAFQ,CAED;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAFC,CAAjB;AAGAG,IAAAA,MAAM,CAACL,MAAD,CAAN,CAAeM,OAAf,CAAuBH,QAAvB;AACD,GA1CG,CAAJ;AA2CD,CA9EO,CAAR","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Controller, Commands, Value } from '@ali/4ever-cangjie';\nimport { cardFactory, setCardData, createCustomizedBiPlugins } from '../..';\n\nconst calendarCardPlugin = cardFactory((config) => {\n  return {\n    cardType: 'calendar',\n    renderNode: ({ node }, controller: Controller) => {\n      const onClick = () => {\n        controller.run('onAction', setCardData(node, { height: 300 }));\n      };\n      const { height } = node.data;\n      return <div data-testid=\"calendar-card-content\" onClick={onClick} data-card-height={height}>日程卡片</div>;\n    },\n    onCangjiePaste: (event, controller, next) => {\n      return next();\n    },\n  };\n});\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  calendarCardPlugin,\n});\nconst plugins = createBiPlugins({\n  calendarCard: {},\n}).array;\n\ndescribe('Bi/card/behaviour', () => {\n  test('插入卡片', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            1234\n            <cursor />\n            56789\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block>\n          <block type=\"card\" data={{ cardType: 'calendar', height: 300, metadata: { subject: 'test' } }} />\n          <block type=\"paragraph\"><cursor />56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.command('insertCard', { cardType: 'calendar', height: 300, metadata: { subject: 'test' } });\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n  test('在正文全选，可以选中卡片', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            Start Paragraph\n            <cursor />\n          </block>\n          <block type=\"card\" />\n          <block type=\"card\" />\n          <block type=\"paragraph\">End Paragraph</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            Start Paragraph\n          </block>\n          <block type=\"card\" />\n          <block type=\"card\" />\n          <block type=\"paragraph\">\n            End Paragraph\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.command(Commands.moveToRangeOfDocument);\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n});\n"],"file":"behaviour.test.js"}