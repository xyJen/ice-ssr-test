{"version":3,"sources":["../../../../src/__tests__/templateButton/ui.test.tsx"],"names":["Editor","props","defaultValue","config","controllerRef","value","setValue","React","useState","plugins","useMemo","factories","biFactory","handleChange","useCallback","changed","HeaderToolbarMode","single","items","name","createValue","text","insertTemplateButton","container","queryByTestId","editor","fireEvent","click","querySelector","focus","keyDown","describe","it","expect","document","activeElement","toBe","titleDom","defaultTitle","textContent","findTitle","str","timeout","inputChange","toBeTruthy","inputDom","compositionStart","compositionEnd","ret","cangjieInput","data","toBeFalsy","not","resolves"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport * as React from 'react';\nimport { wait, waitFor, findByText } from '@testing-library/react';\nimport { renderEditor, jsx, fireEvent, getHotkeyEvent } from '@ali/4ever-dev-test';\nimport { Value, Controller } from '@ali/4ever-cangjie';\nimport { biFactory } from '@ali/4ever-plugin-template-button';\nimport { createCustomBiPlugins, Provider, Content } from '@ali/4ever-setup';\nimport { HeadingToolbar, HeaderToolbarMode } from '../../';\nimport { getHotKeyEvent } from '../helper';\n\n\ninterface EditorProps {\n  config?: Partial<any>;\n  defaultValue: Value;\n  controllerRef?: (controller: Controller) => void;\n}\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { defaultValue, config = {}, controllerRef } = props;\n  const [value, setValue] = React.useState(defaultValue);\n  const plugins = React.useMemo(() => {\n    return createCustomBiPlugins({\n      factories: [biFactory],\n    });\n  }, [config]);\n\n  const handleChange = React.useCallback((changed) => {\n    setValue(changed.value);\n  }, []);\n\n  return (\n    <Provider value={value} onChange={handleChange} plugins={plugins} controllerRef={controllerRef} autoFocus>\n      <HeadingToolbar\n        mode={HeaderToolbarMode.single}\n        singleLayout={[{ items: [{ name: 'templateButton' }]}]}\n      />\n      <Content />\n    </Provider>\n  );\n};\n\nfunction createValue(text: string) {\n  return ((\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <cursor />\n          {text}\n        </block>\n      </document>\n    </value>\n  ) as unknown) as Value;\n}\n\n/**\n * \n * @param container \n * @param queryByTestId \n * @param editor 传入该参数则默认 focus 到模板按钮内容区域\n */\nasync function insertTemplateButton(container: HTMLElement, queryByTestId: any, editor?: any) {\n  fireEvent.click(container.querySelector('[data-testid=\"bi-toolbar-templeButton\"]')!);\n  await waitFor(() => queryByTestId('templateButton-openView'));\n  if (editor) {\n    fireEvent.focus(editor);\n    // 用 hack 方式聚焦于模板内容编辑区域\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft'));\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft'));\n  }\n  await wait();\n}\n\n\n\ndescribe('Bi/templateButton', () => {\n  it('通过 Toolbar 添加模板按钮，默认为展开状态，聚焦于模板标题输入框', async () => {\n    const { container, queryByTestId } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId);\n    expect(document.activeElement).toBe(queryByTestId('templateButton-openView')!.querySelector('input[type=\"text\"]'));\n  });\n\n  it('模板按钮标题输入组件受控', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    const titleDom = queryByTestId('templateButton-openView')!.querySelector('.templateButton-title') as HTMLElement;\n    const defaultTitle = titleDom.textContent;\n    const findTitle = (str: string) => waitFor(() => findByText(titleDom, str, {}, { timeout: 10 }));\n    fireEvent.inputChange(queryByTestId('templateButton-openView')!.querySelector('input[type=\"text\"]')!, 'hello');\n    // 输入同步\n    expect(() => findTitle('hello')).toBeTruthy();\n    // 编辑区域 undo 同步\n    fireEvent.focus(editor);\n    await wait();\n    fireEvent.keyDown(editor, getHotkeyEvent('ctrl+z'));\n    await wait();\n    expect((queryByTestId('templateButton-openView')!.querySelector('input[type=\"text\"]')as HTMLInputElement).value).toBe(defaultTitle);\n  });\n\n  it('模板按钮标题输入对 composition 事件的处理', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    \n    const titleDom = queryByTestId('templateButton-openView')!.querySelector('.templateButton-title') as HTMLElement;\n    const inputDom = queryByTestId('templateButton-openView')!.querySelector('input[type=\"text\"]') as HTMLInputElement;\n    const defaultTitle = titleDom.textContent;\n    const findTitle = (str: string) => waitFor(() => findByText(titleDom, str, {}, { timeout: 10 }));\n    fireEvent.compositionStart(inputDom);\n    await wait();\n    fireEvent.inputChange(queryByTestId('templateButton-openView')!.querySelector('input[type=\"text\"]')!, 'hello');\n    // composition 中，不触发更新\n    expect(() => findTitle(defaultTitle)).toBeTruthy();\n    fireEvent.compositionEnd(inputDom);\n    await wait();\n    // composition 结束后，触发更新\n    expect(() => findTitle('hello')).toBeTruthy();\n  });\n\n  it('模板按钮标题输入', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    fireEvent.inputChange(queryByTestId('templateButton-openView')!.querySelector('input[type=\"text\"]')!, 'hello');\n    const ret = await waitFor(() => findByText(queryByTestId('templateButton-openView')!.querySelector('.templateButton-title')!, 'hello', {}, { timeout: 10 }));\n    expect(ret).toBeTruthy();\n  });\n\n  it('模板按钮内容被删除后保留一个空 paragraph', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    // 先删除空的 todo\n    fireEvent.keyDown(editor, getHotKeyEvent('backspace'));\n    // 再尝试删除空的 paragraph\n    fireEvent.keyDown(editor, getHotKeyEvent('backspace'));\n    await wait();\n    expect(container.querySelector('[data-container-block]')!.querySelector('[data-type=\"paragraph\"]')).toBeTruthy();\n  });\n  it('shift + arrow 选区不越过按钮内容区域', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft', 'shift'));\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft', 'shift'));\n    await wait();\n    // 应该是在模板按钮内正常输入，而不是替换掉模板按钮\n    fireEvent.cangjieInput(editor, { data: 'a' });\n    await wait();\n    expect(queryByTestId('templateButton-openView')).toBeTruthy();\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowRight', 'shift'));\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowRight', 'shift'));\n    // 应该是在模板按钮内正常输入，而不是替换掉模板按钮\n    fireEvent.cangjieInput(editor, { data: 'a' });\n    await wait();\n    expect(queryByTestId('templateButton-openView')).toBeTruthy();\n  });\n  it('模板按钮内全选', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    fireEvent.cangjieInput(editor, { data: 'abc' });\n    fireEvent.keyDown(editor, getHotKeyEvent('a', 'ctrl'));\n    // 替换 abc 为 def，而不是将模板按钮替换为 deffff\n    fireEvent.cangjieInput(editor, { data: 'deffff' });\n    await wait();\n    expect(queryByTestId('templateButton-openView')).toBeTruthy();\n    expect(queryByTestId('templateButton-openView')!.querySelector('[data-container-block]')!.textContent).toBe('deffff');\n  });\n  it('模板按钮外全选', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    // 光标移出模板按钮区域\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft'));\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft'));\n    // 全选\n    fireEvent.keyDown(editor, getHotKeyEvent('a', 'ctrl'));\n    // 删除所有\n    fireEvent.keyDown(editor, getHotKeyEvent('backspace'));\n    await wait();\n    expect(queryByTestId('templateButton-openView')).toBeFalsy();\n  });\n  it('由外向内选，则选中整个模板按钮', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    // 光标移到 edge before 前一位\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft'));\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft'));\n    // 应该选中整个模板按钮\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowRight', 'shift'));\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowRight', 'shift'));\n    // 光标应该移到 edge after\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowRight'));\n    // 在模板按钮之后输入 deffff，而非删除模板按钮\n    fireEvent.cangjieInput(editor, { data: 'deffff' });\n    await wait();\n    // 模板按钮存在\n    expect(queryByTestId('templateButton-openView')).toBeTruthy();\n    // deffff 不在模板按钮内\n    expect(queryByTestId('templateButton-openView')!.querySelector('[data-container-block]')!.textContent).not.toBe('deffff');\n    // 外部有 deffff\n    expect(findByText(container, 'deffff')).resolves.toBeTruthy();\n  });\n  it('由外向内选(edge before开始)，则选中整个模板按钮', async () => {\n    const { container, queryByTestId, editor } = await renderEditor(\n      <Editor defaultValue={createValue('Hello')} />,\n    );\n    await insertTemplateButton(container, queryByTestId, editor);\n    // 光标移到 edge before\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowLeft'));\n    // 应该选中整个模板按钮\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowRight', 'shift'));\n    // 光标应该移到 edge after\n    fireEvent.keyDown(editor, getHotKeyEvent('ArrowRight'));\n    // 在模板按钮之后输入 deffff，而非删除模板按钮\n    fireEvent.cangjieInput(editor, { data: 'deffff' });\n    await wait();\n    // 模板按钮存在\n    expect(queryByTestId('templateButton-openView')).toBeTruthy();\n    // deffff 不在模板按钮内\n    expect(queryByTestId('templateButton-openView')!.querySelector('[data-container-block]')!.textContent).not.toBe('deffff');\n    // 外部有 deffff\n    expect(findByText(container, 'deffff')).resolves.toBeTruthy();\n  });\n});\n"],"file":"ui.test.js"}