{"version":3,"sources":["../../../../src/__tests__/templateButton/behaviour.test.tsx"],"names":["getPlugins","custom","plugins","array","describe","test","value","output","subType","metadata","isOnce","direction","title","list","level","isChecked","isOrdered","isTaskList","listId","controller","Controller","create","command","actual","toJSON","preserveSelections","expected","setValue","expect","toEqual","dispatch","key","done","backup","global","document","execCommand","toBe","selection","anchor","edge","focus","Commands","moveBackward"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport React from 'react';\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Controller, Value, Commands } from '@ali/4ever-cangjie';\nimport { createCustomizedBiPlugins, plugins, PluginFactory } from '../../';\n\nconst getPlugins = (custom = {} as Record<string, PluginFactory>) => {\n  return createCustomizedBiPlugins({\n    ...custom,\n    ...plugins,\n  } as any)().array;\n}\n\ndescribe('Bi/templateButton/behaviour', () => {\n  test('插入模板按钮默认数据校验', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            1234\n            <cursor />\n            56789\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block>\n          <block type=\"container\" data={{ subType: 'templateButton', metadata: { isOnce: false, direction: 'bottom', title: 'Add a new to-do' } }}>\n            <block type=\"paragraph\"data={{ list: { level: 0, isChecked: false, isOrdered: false, isTaskList: true, listId: 'test' } }} />\n          </block>\n          <block type=\"paragraph\"><cursor />56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins: getPlugins(),\n    });\n    controller.command('insertTemplateButton', {});\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('Delete Action', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block>\n          <block key=\"test-block\" type=\"container\" data={{ subType: 'templateButton', metadata: { isOnce: false, direction: 'bottom', title: 'Add a new to-do' } }}>\n            <block type=\"paragraph\"data={{ list: { level: 0, isChecked: false, isOrdered: false, isTaskList: true, listId: 'test' } }} />\n          </block>\n          <block type=\"paragraph\"><cursor />56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    \n    const controller = Controller.create({\n      value,\n      plugins: getPlugins(),\n    });\n    controller.dispatch('deleteTemplateButton', { key: 'test-block' });\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block>\n          <block type=\"paragraph\">56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const actual = controller.value.toJSON();\n    const expected = controller\n      .setValue(output)\n      .value.toJSON();\n    expect(actual).toEqual(expected);\n  });\n\n  test('Copy Action', (done) => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block>\n          <block key=\"test-block\" type=\"container\" data={{ subType: 'templateButton', metadata: { isOnce: false, direction: 'bottom', title: 'Add a new to-do' } }}>\n            <block type=\"paragraph\"data={{ list: { level: 0, isChecked: false, isOrdered: false, isTaskList: true, listId: 'test' } }} />\n          </block>\n          <block type=\"paragraph\"><cursor />56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    \n    const controller = Controller.create({\n      value,\n      plugins: getPlugins(),\n    });\n    controller.dispatch('copyTemplateButton', { key: 'test-block' });\n    const backup = global.document.execCommand;\n    global.document.execCommand = function (command: string) {\n      // copy\n      expect(command).toBe('copy');\n      global.document.execCommand = backup;\n      done();\n    }\n    // select\n    expect(controller.value.selection.anchor.key).toEqual('test-block');\n    expect(controller.value.selection.anchor.edge).toEqual('before');\n    expect(controller.value.selection.focus.key).toEqual('test-block');\n    expect(controller.value.selection.focus.edge).toEqual('after');\n  });\n\n  test('Cut Action', (done) => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block>\n          <block key=\"test-block\" type=\"container\" data={{ subType: 'templateButton', metadata: { isOnce: false, direction: 'bottom', title: 'Add a new to-do' } }}>\n            <block type=\"paragraph\"data={{ list: { level: 0, isChecked: false, isOrdered: false, isTaskList: true, listId: 'test' } }} />\n          </block>\n          <block type=\"paragraph\"><cursor />56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    \n    const controller = Controller.create({\n      value,\n      plugins: getPlugins(),\n    });\n    const backup = global.document.execCommand;\n    global.document.execCommand = function (command: string) {\n      // cut\n      expect(command).toBe('cut');\n      global.document.execCommand = backup;\n      done();\n    }\n    controller.dispatch('cutTemplateButton', { key: 'test-block' });\n    // 剪切发生时，确保选区正确\n    expect(controller.value.selection.anchor.key).toEqual('test-block');\n    expect(controller.value.selection.anchor.edge).toEqual('before');\n    expect(controller.value.selection.focus.key).toEqual('test-block');\n    expect(controller.value.selection.focus.edge).toEqual('after');\n  });\n\n  test('Cursor Move', () => {\n    // 收起按钮时为 void 状态，光标移动不进入内容区域\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block>\n          <block key=\"test-block\" type=\"container\" data={{ subType: 'templateButton', metadata: { isOnce: false, direction: 'bottom', title: 'Add a new to-do' } }}>\n            <block type=\"paragraph\">in template button</block>\n          </block>\n          <block type=\"paragraph\"><cursor />56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">1234</block><cursor />\n          <block key=\"test-block\" type=\"container\" data={{ subType: 'templateButton', metadata: { isOnce: false, direction: 'bottom', title: 'Add a new to-do' } }}>\n            <block type=\"paragraph\">in template button</block>\n          </block>\n          <block type=\"paragraph\">56789</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    \n    const controller = Controller.create({\n      value,\n      plugins: getPlugins(),\n    });\n    controller.command(Commands.moveBackward);\n    controller.command(Commands.moveBackward);\n    controller.command(Commands.moveBackward);\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n});\n"],"file":"behaviour.test.js"}