{"version":3,"sources":["../../../../src/__tests__/paragraph/behaviour.test.tsx"],"names":["cases","name","value","spacing","line","before","after","ind","left","right","lineRule","beforeLines","beforeAutospacing","afterLines","afterAutospacing","leftChars","rightChars","firstLine","hangingChars","plugins","array","describe","forEach","testCase","test","controller","Controller","create","query","expect","toEqual","run","firstLineChars","hanging","data","history","History","undos","length"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Value, Controller, History } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { jsx, waitForTime } from '@ali/4ever-dev-test';\nimport { createBiPlugins } from '../..';\nimport {\n  setParagraphInd,\n  setParagraphSpacing,\n} from '@ali/4ever-plugin-paragraph';\n\nconst cases = [\n  {\n    name: '普通段落',\n    value: (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            段落\n          </block>\n          <block type=\"paragraph\">\n            段落\n            <focus />\n          </block>\n        </document>\n      </value>\n    ),\n    spacing: {\n      line: 1,\n      before: 0,\n      after: 0,\n    },\n    ind: {\n      left: 0,\n      right: 0,\n    },\n  },\n  {\n    name: '标题',\n    value: (\n      <value>\n        <document>\n          <block type=\"heading-1\">\n            <anchor />\n            段落\n          </block>\n          <block type=\"heading-1\">\n            段落\n            <focus />\n          </block>\n        </document>\n      </value>\n    ),\n    spacing: {\n      line: 0.8529411764705882,\n      before: 26.666666666666668,\n      after: 12,\n    },\n    ind: {\n      left: 0,\n      right: 0,\n    },\n  },\n  {\n    name: '标题和段落混合',\n    value: (\n      <value>\n        <document>\n          <block type=\"heading-1\">\n            <anchor />\n            段落\n          </block>\n          <block type=\"paragraph\">\n            段落\n            <focus />\n          </block>\n        </document>\n      </value>\n    ),\n    spacing: {},\n    ind: {\n      left: 0,\n      right: 0,\n    },\n  },\n  {\n    name: '相同 line，不同 lineRule',\n    value: (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                line: 2,\n                lineRule: 'exact',\n              },\n            }}\n          >\n            <anchor />\n            段落\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                line: 2,\n                lineRule: 'auto',\n              },\n            }}\n          >\n            段落\n            <focus />\n          </block>\n        </document>\n      </value>\n    ),\n    spacing: {\n      before: 0,\n      after: 0,\n    },\n    ind: {\n      left: 0,\n      right: 0,\n    },\n  },\n  {\n    name: '最终 before/after 不同，其它属性相同',\n    value: (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                before: 10,\n                beforeLines: 10,\n                beforeAutospacing: true,\n                after: 10,\n                afterLines: 10,\n              },\n            }}\n          >\n            <anchor />\n            段落\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              spacing: {\n                before: 10,\n                beforeLines: 10,\n                after: 10,\n                afterLines: 10,\n                afterAutospacing: true,\n              },\n            }}\n          >\n            段落\n            <focus />\n          </block>\n        </document>\n      </value>\n    ),\n    spacing: {\n      line: 1,\n    },\n    ind: {\n      left: 0,\n      right: 0,\n    },\n  },\n  {\n    name: '最终 left/right 不同，其它属性相同',\n    value: (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                left: 30,\n                leftChars: 300,\n                right: 20,\n                rightChars: 200,\n              },\n            }}\n          >\n            <anchor />\n            段落\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                left: 30,\n                leftChars: 200,\n                right: 20,\n                rightChars: 300,\n              },\n            }}\n          >\n            段落\n            <focus />\n          </block>\n        </document>\n      </value>\n    ),\n    spacing: {\n      line: 1,\n      before: 0,\n      after: 0,\n    },\n    ind: {},\n  },\n  {\n    name: '首行与悬挂缩进互斥',\n    value: (\n      <value>\n        <document>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                firstLine: 32,\n                hangingChars: 4,\n              },\n            }}\n          >\n            <anchor />\n            段落\n          </block>\n          <block\n            type=\"paragraph\"\n            data={{\n              ind: {\n                firstLine: 32,\n                hangingChars: 2,\n              },\n            }}\n          >\n            段落\n            <focus />\n          </block>\n        </document>\n      </value>\n    ),\n    spacing: {\n      line: 1,\n      before: 0,\n      after: 0,\n    },\n    ind: {\n      left: 0,\n      right: 0,\n    },\n  },\n];\n\nconst plugins = createBiPlugins({}).array;\n\ndescribe('Bi/paragraph/behaviour', () => {\n  describe('获取公共段落属性', () => {\n    cases.forEach((testCase) => {\n      test(`${testCase.name}`, async () => {\n        const value = testCase.value as unknown as Value;\n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n\n        const spacing = controller.query('getCommonSpacing');\n        const ind = controller.query('getCommonInd');\n        expect(spacing).toEqual(testCase.spacing);\n        expect(ind).toEqual(testCase.ind);\n      });\n    });\n  });\n\n  describe('设置段落属性', () => {\n    test('设置 spacing.before/after', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <anchor />\n              段落\n            </block>\n            <block type=\"paragraph\">\n              段落\n              <focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onAction',\n        setParagraphSpacing({\n          before: 50,\n          after: 30,\n        }),\n      );\n      const spacing = controller.query('getCommonSpacing');\n      expect(spacing).toEqual({\n        before: 50,\n        after: 30,\n        line: 1,\n      });\n    });\n\n    test('设置 spacing.line/lineRule', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <anchor />\n              段落\n            </block>\n            <block type=\"paragraph\">\n              段落\n              <focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onAction',\n        setParagraphSpacing({\n          line: 2,\n          lineRule: 'exact',\n        }),\n      );\n      const spacing = controller.query('getCommonSpacing');\n      expect(spacing).toEqual({\n        before: 0,\n        after: 0,\n        line: 32, // 24pt\n        lineRule: 'exact',\n      });\n    });\n\n    test('设置 spacing 为绝对值单位 会清除 行单位', async () => {\n      const value = (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={{\n                spacing: {\n                  beforeLines: 2,\n                  afterLines: 2,\n                },\n              }}\n            >\n              <cursor />\n              段落\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onAction',\n        setParagraphSpacing({\n          before: 30,\n          after: 30,\n        }),\n      );\n      const spacing = controller.query('getCommonSpacing');\n      expect(spacing).toEqual({\n        before: 30,\n        after: 30,\n        line: 1,\n      });\n    });\n\n    test('跳过不支持的块级元素', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"unknow\">\n              <anchor />\n              段落\n            </block>\n            <block type=\"paragraph\">\n              段落\n              <focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onAction',\n        setParagraphSpacing({\n          before: 50,\n          after: 30,\n        }),\n      );\n      const spacing = controller.query('getCommonSpacing');\n      expect(spacing).toEqual({\n        line: 1,\n      });\n    });\n\n    test('设置 ind.left/right', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <anchor />\n              段落\n            </block>\n            <block type=\"paragraph\">\n              段落\n              <focus />\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onAction',\n        setParagraphInd({\n          left: 50,\n          right: 30,\n        }),\n      );\n      const ind = controller.query('getCommonInd');\n      expect(ind).toEqual({\n        left: 50,\n        right: 30,\n      });\n    });\n\n    test('设置 ind 为绝对值单位 会清除 字符单位', async () => {\n      const value = (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={{\n                ind: {\n                  leftChars: 200,\n                  rightChars: 200,\n                },\n              }}\n            >\n              <cursor />\n              段落\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onAction',\n        setParagraphInd({\n          left: 50,\n          right: 50,\n        }),\n      );\n      const ind = controller.query('getCommonInd');\n      expect(ind).toEqual({\n        left: 50,\n        right: 50,\n      });\n    });\n\n    test('设置 ind 悬挂与行首缩进互斥', async () => {\n      const value = (\n        <value>\n          <document>\n            <block\n              type=\"paragraph\"\n              data={{\n                ind: {\n                  firstLine: 32,\n                  firstLineChars: 200,\n                },\n              }}\n            >\n              <cursor />\n              段落\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run(\n        'onAction',\n        setParagraphInd({\n          hangingChars: 200,\n        }),\n      );\n      const ind = controller.query('getCommonInd');\n      expect(ind).toEqual({\n        left: 0,\n        right: 0,\n        hangingChars: 200,\n        hanging: 29.33333333333333, // 200 / 100 * 11pt = 22pt = 29.33333333333333px\n      });\n    });\n  });\n\n  describe('边界场景', () => {\n    test('设置相同的 indent，不产生 history', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <cursor />\n              段落\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      // 左缩进 0，不产生 history\n      controller.run('onAction', setParagraphInd({ left: 0 }));\n      await waitForTime(1);\n      expect(\n        (controller.value.data.history || History.create()).undos.length,\n      ).toEqual(0);\n\n      // 左缩进 0 字符，不产生 history\n      controller.run('onAction', setParagraphInd({ leftChars: 0, left: 0 }));\n      await waitForTime(1);\n      expect(\n        (controller.value.data.history || History.create()).undos.length,\n      ).toEqual(0);\n\n      // 设置为悬挂缩进，产生 1 条 history\n      controller.run(\n        'onAction',\n        setParagraphInd({ hangingChars: 200, hanging: 28 }),\n      );\n      await waitForTime(1);\n      expect(controller.value.data.history.undos.length).toEqual(1);\n\n      // 悬挂缩进值为 0，产生 1 条 history\n      controller.run(\n        'onAction',\n        setParagraphInd({ hangingChars: 0, hanging: 0 }),\n      );\n      await waitForTime(1);\n      expect(controller.value.data.history.undos.length).toEqual(2);\n\n      // 模拟在 UI 中再次设置为 0，不产生 history\n      controller.run(\n        'onAction',\n        setParagraphInd({ firstLineChars: 0, firstLine: 0 }),\n      );\n      await waitForTime(1);\n      expect(controller.value.data.history.undos.length).toEqual(2);\n    });\n\n    test('默认情况下，设置相同的 spacing，不产生 history', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              <cursor />\n              段落\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      // 段前 0，不产生 history\n      controller.run('onAction', setParagraphSpacing({ before: 0 }));\n      await waitForTime(1);\n      expect(\n        (controller.value.data.history || History.create()).undos.length,\n      ).toEqual(0);\n\n      // 段前 0 行，不产生 history\n      controller.run(\n        'onAction',\n        setParagraphSpacing({ beforeLines: 0, before: 0 }),\n      );\n      await waitForTime(1);\n      expect(\n        (controller.value.data.history || History.create()).undos.length,\n      ).toEqual(0);\n\n      // 段后 0，不产生 history\n      controller.run('onAction', setParagraphSpacing({ after: 0 }));\n      await waitForTime(1);\n      expect(\n        (controller.value.data.history || History.create()).undos.length,\n      ).toEqual(0);\n\n      // 段后 0 行，不产生 history\n      controller.run(\n        'onAction',\n        setParagraphSpacing({ afterLines: 0, after: 0 }),\n      );\n      await waitForTime(1);\n      expect(\n        (controller.value.data.history || History.create()).undos.length,\n      ).toEqual(0);\n    });\n  });\n});\n"],"file":"behaviour.test.js"}