{"version":3,"sources":["../../../../src/__tests__/common/utils.test.ts"],"names":["describe","commonCases","start","end","total","cases","title","mark","delimiter","character","size","insideWhitespace","texts","disableIntraword","forEach","it","input","output","expect","toEqual"],"mappings":"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","sourcesContent":["import { getMarkTextMatchInfo } from '@ali/4ever-utils';\n\ndescribe('Bi/common/utils', () => {\n  describe('getMarkTextMatchInfo', () => {\n    const commonCases = [\n      // normal 情况\n      ['*1*', { start: 1, end: 2, total: 1 }],\n      ['*12*', { start: 1, end: 3, total: 2 }],\n      ['*123*', { start: 1, end: 4, total: 3 }],\n      // 内部有空白符\n      ['*foo bar*', { start: 1, end: 8, total: 7 }],\n      // 内侧有标点\n      ['a *\"foo\"*', { start: 3, end: 8, total: 5 }],\n      ['*(*', { start: 1, end: 2, total: 1 }],\n      // 空白\n      ['', null],\n      ['   ', null],\n      // 仅包含 character\n      ['****', null],\n      // 不一样的 delimiter\n      ['*abc_', null],\n    ];\n    const cases = [{\n      title: '默认不允许内侧空白符，允许 intraword',\n      mark: {\n        delimiter: { character: '*', size: 1 },\n        insideWhitespace: false,\n      },\n      texts: [\n        ...commonCases,\n        // 不允许内侧有空白符\n        ['* 1 *', null],\n        ['* 12 *', null],\n        ['* 123 *', null],\n        ['* 1 3 *', null],\n        // 允许 intraword\n        ['123*45*', { start: 4, end: 6, total: 2 }],\n        ['123 *56*', { start: 5, end: 7, total: 2 }],\n        ['123,*56*', { start: 5, end: 7, total: 2 }],\n        ['123，*56*', { start: 5, end: 7, total: 2 }],\n        ['1 *3*5*', { start: 5, end: 6, total: 1 }],\n      ],\n    }, {\n      title: '不允许内侧空白符，不允许 intraword',\n      mark: {\n        delimiter: { character: '*', size: 1, disableIntraword: true },\n        insideWhitespace: false,\n      },\n      texts: [\n        ...commonCases,\n        // 不允许内侧有空白符\n        ['* 1 *', null],\n        ['* 12 *', null],\n        ['* 123 *', null],\n        ['* 1 3 *', null],\n        // 不允许 intraword\n        ['123*45*', null],\n        ['123 *56*', { start: 5, end: 7, total: 2 }],\n        ['123,*56*', { start: 5, end: 7, total: 2 }],\n        ['123，*56*', { start: 5, end: 7, total: 2 }],\n        ['123。*56*', { start: 5, end: 7, total: 2 }],\n        ['123？*56*', { start: 5, end: 7, total: 2 }],\n        ['123！*56*', { start: 5, end: 7, total: 2 }],\n        ['123：*56*', { start: 5, end: 7, total: 2 }],\n        ['123；*56*', { start: 5, end: 7, total: 2 }],\n        ['1 *3*5*', null],\n      ],\n    }, {\n      title: '允许内侧空白符，不允许 intraword',\n      mark: {\n        delimiter: { character: '*', size: 1, disableIntraword: true },\n        insideWhitespace: true,\n      },\n      texts: [\n        ...commonCases,\n        // 允许内侧有空白符\n        ['* 2 *', { start: 1, end: 4, total: 3 }],\n        ['* 23 *', { start: 1, end: 5, total: 4 }],\n        ['* 234 *', { start: 1, end: 6, total: 5 }],\n        ['* 3 4 *', { start: 1, end: 6, total: 5 }],\n        // 不允许 intraword\n        ['123*45*', null],\n        ['123 *56*', { start: 5, end: 7, total: 2 }],\n        ['123,*56*', { start: 5, end: 7, total: 2 }],\n        ['123，*56*', { start: 5, end: 7, total: 2 }],\n        ['123。*56*', { start: 5, end: 7, total: 2 }],\n        ['123？*56*', { start: 5, end: 7, total: 2 }],\n        ['123！*56*', { start: 5, end: 7, total: 2 }],\n        ['123：*56*', { start: 5, end: 7, total: 2 }],\n        ['123；*56*', { start: 5, end: 7, total: 2 }],\n        ['1 *3*5*', null],\n      ],\n    }, {\n      title: '允许内侧空白符，允许 intraword',\n      mark: {\n        delimiter: { character: '*', size: 1 },\n        insideWhitespace: true,\n      },\n      texts: [\n        ...commonCases,\n        // 允许内侧有空白符\n        ['* 2 *', { start: 1, end: 4, total: 3 }],\n        ['* 23 *', { start: 1, end: 5, total: 4 }],\n        ['* 234 *', { start: 1, end: 6, total: 5 }],\n        ['* 3 4 *', { start: 1, end: 6, total: 5 }],\n        // 允许 intraword\n        ['123*45*', { start: 4, end: 6, total: 2 }],\n        ['123 *56*', { start: 5, end: 7, total: 2 }],\n        ['123,*56*', { start: 5, end: 7, total: 2 }],\n        ['1 *3*5*', { start: 5, end: 6, total: 1 }],\n      ],\n    }, {\n      title: '默认不允许内侧空白符，允许 intraword，delimiter size 改变',\n      mark: {\n        delimiter: { character: '+', size: 2 },\n        insideWhitespace: false,\n      },\n      texts: [\n        // normal 情况\n        ['++1++', { start: 2, end: 3, total: 1 }],\n        ['++12++', { start: 2, end: 4, total: 2 }],\n        ['++123++', { start: 2, end: 5, total: 3 }],\n        // 内部有空白符\n        ['++foo bar++', { start: 2, end: 9, total: 7 }],\n        // 内侧有标点\n        ['a ++\"foo\"++', { start: 4, end: 9, total: 5 }],\n        ['++(++', { start: 2, end: 3, total: 1 }],\n        // 空白\n        ['', null],\n        ['   ', null],\n        // 仅包含 character\n        ['++++++++', null],\n        // 不允许内侧有空白符\n        ['++ 1 ++', null],\n        ['++ 12 ++', null],\n        ['++ 123 ++', null],\n        ['++ 1 3 ++', null],\n        // 允许 intraword\n        ['123++45++', { start: 5, end: 7, total: 2 }],\n        ['123 ++56++', { start: 6, end: 8, total: 2 }],\n        ['123,++56++', { start: 6, end: 8, total: 2 }],\n        ['123，++56++', { start: 6, end: 8, total: 2 }],\n        ['1 ++4++7++', { start: 7, end: 8, total: 1 }],\n      ],\n    }];\n\n    cases.forEach(({ title, mark, texts }) => {\n      it(title, () => {\n        texts.forEach(([input, output]) => {\n          expect(getMarkTextMatchInfo(input as string, mark.delimiter, mark.insideWhitespace)).toEqual(output);\n        });\n      });\n    });\n  });\n});\n"],"file":"utils.test.js"}