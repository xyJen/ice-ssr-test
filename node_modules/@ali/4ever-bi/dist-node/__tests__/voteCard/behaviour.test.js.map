{"version":3,"sources":["../../../../src/__tests__/voteCard/behaviour.test.tsx"],"names":["createBiPlugins","biPlugins","voteCard","VoteCardPlugin","plugins","locale","remove","add","expired","reVote","deadline","unit","total","submit","noDeadline","creator","titlePlaceholder","optionPlaceholder","checkbox","resultShow","always","afterVote","radio","save","cancel","edit","createVote","getVote","modifyVote","submitVote","isGrayEnable","array","DEFAULT_DATA","title","voteType","optionInfoList","content","pos","optionTicket","userOptionTicket","endTime","Date","getTime","showTicketBeforeVoting","describe","test","value","output","metadata","controller","Controller","create","command","cardType","height","actual","toJSON","preserveSelections","expected","setValue","expect","toEqual","Commands","moveToRangeOfDocument"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Controller, Commands, Value } from '@ali/4ever-cangjie';\nimport { createCustomizedBiPlugins, VoteCardPlugin, plugins as biPlugins } from '../..';\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  ...biPlugins,\n  voteCard: VoteCardPlugin,\n} as any);\nconst plugins = createBiPlugins({\n  voteCard: {\n    locale: {\n      remove: '删除',\n      add: '添加',\n      expired: '截止',\n      reVote: '重新投票',\n      deadline: '截止日期',\n      unit: '票',\n      total: '人投票',\n      submit: '投票',\n      noDeadline: '无截止日期',\n      creator: '创建',\n      titlePlaceholder: '请输入标题',\n      optionPlaceholder: '请输入选项内容',\n      checkbox: '多选',\n      resultShow: '单选',\n      always: '始终显示',\n      afterVote: '投票后可见',\n      radio: '单选',\n      save: '保存',\n      cancel: '取消',\n      edit: '编辑',\n    },\n    createVote: () => {},\n    getVote: () => {},\n    modifyVote: () => {},\n    submitVote: () => { },\n    isGrayEnable: true,\n  },\n}).array;\n\nconst DEFAULT_DATA = {\n  title: '',\n  voteType: 1,\n  optionInfoList: [\n    { content: '', pos: 1, optionTicket: 0, userOptionTicket: 0 },\n    { content: '', pos: 2, optionTicket: 0, userOptionTicket: 0 }\n  ],\n  endTime: new Date().getTime() + 1000 * 60 * 60 * 24 * 7,\n  showTicketBeforeVoting: false,\n}\n\ndescribe('Bi/voteCard/behaviour', () => {\n  test('插入投票卡片', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            1234\n            <cursor />\n            56789\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const output = ((\n      <value>\n      <document>\n        <block type=\"paragraph\">1234</block>\n        <block type=\"card\" data={{\"cardType\":'vote', 'height': 300,metadata: DEFAULT_DATA}}></block>\n        <block type=\"paragraph\"><cursor />56789</block>\n      </document>\n    </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.command('insertCard', { cardType: 'vote', height: 300, metadata: DEFAULT_DATA });\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n\n  test('在正文全选，可以选中投票卡片', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            Start Paragraph\n            <cursor />\n          </block>\n          <block type=\"card\" data={{\"cardType\":'vote', 'height': 300,metadata: DEFAULT_DATA}}/>\n          <block type=\"card\" data={{\"cardType\":'vote', 'height': 300,metadata: DEFAULT_DATA}}/>\n          <block type=\"paragraph\">End Paragraph</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            Start Paragraph\n          </block>\n          <block type=\"card\" data={{\"cardType\":'vote', 'height': 300,metadata: DEFAULT_DATA}}/>\n          <block type=\"card\" data={{\"cardType\":'vote', 'height': 300,metadata: DEFAULT_DATA}}/>\n          <block type=\"paragraph\">\n            End Paragraph\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.command(Commands.moveToRangeOfDocument);\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n});\n"],"file":"behaviour.test.js"}