"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var React = _interopRequireWildcard(require("react"));

var _ = require("../..");

var _react2 = require("@testing-library/react");

require("@testing-library/jest-dom/extend-expect");

var _provider = _interopRequireDefault(require("../../provider"));

var _content = _interopRequireDefault(require("../../content"));

var _everDevTest = require("@ali/4ever-dev-test");

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const createBiPlugins = (0, _.createCustomizedBiPlugins)({ ..._.plugins,
  MobileVoteCardPlugin: _.MobileVoteCardPlugin
});

var _ref = (0, _everDevTest.jsx)(_content.default, null);

const Editor = props => {
  const {
    defaultValue
  } = props;
  const [value, setValue] = React.useState(defaultValue);
  const plugins = React.useMemo(() => {
    return createBiPlugins({});
  }, []);
  const handleChange = React.useCallback(changed => {
    setValue(changed.value);
  }, []);
  return (0, _everDevTest.jsx)(_provider.default, {
    value: value,
    onChange: handleChange,
    plugins: plugins,
    autoFocus: true
  }, _ref);
};

const voteCardData = {
  title: "test111111",
  voteType: 1,
  voteId: '12321',
  optionInfoList: [{
    content: '111111',
    pos: 1,
    optionTicket: 0,
    userOptionTicket: 0
  }, {
    content: '222222',
    pos: 2,
    optionTicket: 0,
    userOptionTicket: 0
  }],
  endTime: 124214214200,
  showTicketBeforeVoting: false,
  isGrayEnable: true
};
describe('bi/voteCard/mobile/ui', () => {
  beforeAll(() => {
    // 防止被 componentDidCatch catch 的 error 被控制台输出
    jest.spyOn(console, 'error'); // @ts-ignore

    console.error.mockImplementation(() => {});
  });
  afterAll(() => {
    // @ts-ignore
    console.error.mockRestore();
  });
  afterEach(() => {
    (0, _react2.cleanup)();
  });
  describe('bi/calendarCard/mobile/ui', () => {
    test('移动端暂不显示投票', async () => {
      const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
        type: "card",
        data: {
          cardType: 'vote',
          height: 350,
          metadata: voteCardData
        }
      })));
      const {
        queryByTestId
      } = await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(Editor, {
        defaultValue: value
      }));
      const voteDom = queryByTestId('card-vote-container-result') || queryByTestId('card-vote-container-edit') || queryByTestId('card-vote-container-voting');
      expect(voteDom).toBe(null);
    });
  });
});
//# sourceMappingURL=mobile.ui.test.js.map