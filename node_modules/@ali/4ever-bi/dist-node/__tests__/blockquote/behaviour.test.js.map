{"version":3,"sources":["../../../../src/__tests__/blockquote/behaviour.test.tsx"],"names":["plugins","locale","array","describe","it","value","blockquote","output","controller","Controller","create","run","blockquotePlugin","actions","toggleBlockquote","expect","toJSON","toEqual","KeyboardEvent","preserveSelections","spacing","after","before","line","szUnit","headingPlugin","setHeading"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { jsx, getHotkeyEvent } from '@ali/4ever-dev-test';\nimport { Controller, Value } from '@ali/4ever-cangjie';\nimport locale from '../../locales/zh_CN';\nimport { createBiPlugins } from '../..';\nimport blockquotePlugin from '../../plugins/blockquote';\nimport headingPlugin from '../../plugins/heading';\n\nconst plugins = createBiPlugins(locale).array;\n\ndescribe('Bi/blockquote/behaviour', () => {\n  it('选中三个 block，且第二个存在引用，将三个 block 都取消引用', () => {\n    const value = (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            This is the first paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: true }}>\n            This is the second paragraph\n          </block>\n          <block type=\"paragraph\">\n            This is the third paragraph\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const output = (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ blockquote: false }}>\n            <anchor />\n            This is the first paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: false }}>\n            This is the second paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: false }}>\n            This is the third paragraph\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run('onAction', blockquotePlugin.actions.toggleBlockquote());\n\n    expect(controller.value.toJSON()).toEqual(output.toJSON());\n  });\n\n  it('多段连续引用，首段落顶部触发 Backspace ，移除引用，光标仍然在原行', () => {\n    const value = (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ blockquote: false }}>\n            This is the first paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: true }}>\n            <cursor />\n            This is the second paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: true }}>\n            This is the third paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: true }}>\n            This is the fourth paragraph\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const output = (\n      <value>\n        <document>\n          <block type=\"paragraph\" data={{ blockquote: false }}>\n            This is the first paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: false }}>\n            <cursor />\n            This is the second paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: true }}>\n            This is the third paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: true }}>\n            This is the fourth paragraph\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('backspace')),\n    );\n    expect(controller.value.toJSON({\n      preserveSelections: true,\n    })).toEqual(output.toJSON({\n      preserveSelections: true,\n    }));\n  });\n\n  it('多个段落，其中存在引用，全选，设置 heading, 非引用段落依旧是非引用', () => {\n    const value = (\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            This is the first paragraph\n          </block>\n          <block type=\"paragraph\" data={{ blockquote: true }}>\n            This is the second paragraph\n          </block>\n          <block type=\"paragraph\">\n            This is the third paragraph\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const output = (\n      <value>\n        <document>\n          <block\n            type=\"heading-1\"\n            data={{\n              spacing: {\n                after: 12,\n                before: 26.666666666666668,\n                line: 0.8529411764705882,\n              },\n            }}\n          >\n            <anchor />\n            <m type=\"sz\" data={{ value: 20, szUnit: 'pt' }}><m type=\"bold\">This is the first paragraph</m></m>\n          </block>\n          <block\n            type=\"heading-1\"\n            data={{\n              spacing: {\n                after: 12,\n                before: 26.666666666666668,\n                line: 0.8529411764705882,\n              },\n              blockquote: true,\n            }}\n          >\n             <m type=\"sz\" data={{ value: 20, szUnit: 'pt' }}><m type=\"bold\">This is the second paragraph</m></m>\n          </block>\n          <block\n            type=\"heading-1\"\n            data={{\n              spacing: {\n                after: 12,\n                before: 26.666666666666668,\n                line: 0.8529411764705882,\n              },\n            }}\n          >\n            <m type=\"sz\" data={{ value: 20, szUnit: 'pt' }}><m type=\"bold\">This is the third paragraph</m></m>\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    controller.run('onAction', headingPlugin.actions.setHeading('heading-1'));\n\n    expect(controller.value.toJSON({\n      preserveSelections: true,\n    })).toEqual(output.toJSON({\n      preserveSelections: true,\n    }));\n  });\n});\n"],"file":"behaviour.test.js"}