{"version":3,"sources":["../../../../src/__tests__/blockquote/ui.test.tsx"],"names":["addBlockquoteByShortcut","editor","content","fireEvent","cangjieInput","data","clickQuoteButton","container","quoteBlockElement","querySelector","click","describe","it","value","quoteElement","expect","textContent","toBe","Mo","textToValue","toBeTruthy","keyDown","toBeNull","headerElement","listElement","queryByTestId","skip","blockquoteElement","blockquoteElements","querySelectorAll","length","colsWidth","controllerRef","jest","fn","name","src","blockquote","createBiPlugins","HeadingGroupPlugin","BlockquotePlugin","plugins"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { last } from 'lodash-es';\nimport {\n  renderEditor,\n  getHotkeyEvent,\n  fireEvent,\n  jsx,\n} from '@ali/4ever-dev-test';\nimport { Commands, Controller, Value } from '@ali/4ever-cangjie';\nimport {\n  wait,\n  waitForElement,\n  waitForElementToBeRemoved,\n} from '@testing-library/react';\n\nimport Mo from '../serializer';\nimport { removeInvisibleChars } from '../helper';\nimport BiEditor from '../editor';\nimport { createCustomizedBiPlugins, HeadingGroupPlugin, BlockquotePlugin } from '../..';\n\nasync function addBlockquoteByShortcut(\n  editor: HTMLElement,\n  content: HTMLElement,\n) {\n  fireEvent.cangjieInput(editor, { data: '>' });\n  fireEvent.cangjieInput(editor, { data: ' ' });\n  await wait();\n}\n\nasync function clickQuoteButton(container) {\n  const quoteBlockElement = container.querySelector(\n    '[data-testid=\"bi-toolbar-blockquote\"]',\n  );\n  fireEvent.click(quoteBlockElement);\n  await wait();\n}\n\ndescribe('Bi/blockquote/ui', () => {\n  it('在空 paragraph 中输入 > + space ，插入引用标示，且 > 被移除', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            {'>'}<cursor />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    const quoteElement = await waitForElement(() => (\n      content.querySelector('blockquote')\n    ));\n    expect(removeInvisibleChars(quoteElement?.textContent ?? '')).toBe('');\n  });\n\n  it('在有内容的段落顶部输入 > + space ,把当前段落转换为引用', async () => {\n    const value = Mo.textToValue('hello world');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    const quoteElement = content.querySelector('blockquote');\n    expect(quoteElement?.textContent).toBe('hello world');\n  });\n\n  it('在引用段落顶部触发 Backspace ，移除引用', async () => {\n    const value = Mo.textToValue('hello world');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    let quoteElement = await waitForElement(() => (\n      content.querySelector('blockquote')\n    ));\n    expect(quoteElement).toBeTruthy();\n\n    fireEvent.keyDown(content, getHotkeyEvent('backspace'));\n    await waitForElementToBeRemoved(() => (\n      content.querySelector('blockquote')\n    ));\n    quoteElement = content.querySelector('blockquote');\n    expect(quoteElement).toBeNull();\n  });\n\n  it('在空引用段落中输入回车，移除引用', async () => {\n    const value = Mo.textToValue('');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    let quoteElement = await waitForElement(() => (\n      content.querySelector('blockquote')\n    ));\n    expect(quoteElement).toBeTruthy();\n\n    fireEvent.keyDown(content, getHotkeyEvent('enter'));\n    await waitForElementToBeRemoved(() => (\n      content.querySelector('blockquote')\n    ));\n    quoteElement = content.querySelector('blockquote');\n    expect(quoteElement).toBeNull();\n  });\n\n  it('首行为引用段落，触发退格键，移除引用状态', async () => {\n    const value = Mo.textToValue('Hello World');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    let quoteElement = await waitForElement(() => (\n      content.querySelector('blockquote')\n    ));\n    expect(quoteElement).toBeTruthy();\n\n    fireEvent.keyDown(content, getHotkeyEvent('backspace'));\n    await waitForElementToBeRemoved(() => (\n      content.querySelector('blockquote')\n    ));\n    quoteElement = content.querySelector('blockquote');\n    expect(quoteElement).toBeNull();\n  });\n\n  it('在引用段落顶部，输入 ## 将当前 block 转变为带引用的二级标题', async () => {\n    const value = Mo.textToValue('hello world');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    const quoteElement = await waitForElement(() => (\n      content.querySelector('blockquote')\n    ));\n    expect(quoteElement).toBeTruthy();\n\n    fireEvent.cangjieInput(editor, { data: '##' });\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    const headerElement = await waitForElement(() => (\n      quoteElement?.querySelector('h2')\n    ));\n    expect(headerElement).toBeTruthy();\n  });\n\n  it('在标题前输入 > + space ,不应该把标题转变为引用', async () => {\n    const value = Mo.textToValue('hello world');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    fireEvent.cangjieInput(editor, { data: '##' });\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    await addBlockquoteByShortcut(editor, content);\n    const quoteElement = content.querySelector('blockquote');\n    expect(quoteElement).toBeNull();\n    const headerElement = content.querySelector('h2');\n    expect(headerElement).toBeTruthy();\n    expect(headerElement?.textContent).toBe('> hello world');\n  });\n\n  it('在引用块中输入 * + 空格，保留 *，不出现列表', async () => {\n    const value = Mo.textToValue('hello world');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    fireEvent.cangjieInput(editor, { data: '*' });\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    const quoteElement = await waitForElement(() => (\n      content.querySelector('blockquote')\n    ));\n    expect(quoteElement?.textContent).toBe('* hello world');\n    const listElement = content.querySelector('ul');\n    expect(listElement).toBeNull();\n  });\n\n  it('在列表中输入 > + space, 不将列表转变为引用', async () => {\n    const value = Mo.textToValue('hello world');\n    const { content, editor, queryByTestId } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    fireEvent.cangjieInput(editor, { data: '*' });\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    await addBlockquoteByShortcut(editor, content);\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    await waitForElement(() => (\n      queryByTestId('list')\n    ));\n    const quoteElement = content.querySelector('blockquote');\n    const listElement = queryByTestId('list');\n    expect(listElement?.textContent).toBe('●>  hello world');\n    expect(quoteElement).toBeNull();\n  });\n\n  it('在引用段落中输入 > + space, 保留 >', async () => {\n    const value = Mo.textToValue('hello world');\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    await addBlockquoteByShortcut(editor, content);\n    fireEvent.cangjieInput(editor, { data: ' ' });\n    const quoteElement = await waitForElement(() => (\n      content.querySelector('blockquote')\n    ));\n    expect(quoteElement?.textContent).toBe('>  hello world');\n  });\n\n  it.skip('通过引用按钮可切换段落是否处于引用状态', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />hello world<focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { content, container } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await clickQuoteButton(container);\n    const blockquoteElement = content.querySelector('blockquote');\n    expect(blockquoteElement?.textContent).toBe('hello world');\n  });\n\n  it.skip('选中三个不带选区的 block 时，将满足条件的 block 都转换为引用', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor />\n            This is first paragraph\n          </block>\n          <block type=\"paragraph\">\n            This is second paragraph\n          </block>\n          <block type=\"paragraph\">\n            This is third paragraph\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { container, content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await clickQuoteButton(container);\n    const blockquoteElements = content.querySelectorAll('blockquote');\n    expect(blockquoteElements.length).toBe(3);\n  });\n\n  it('表格中可以插入引用', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"table\" key=\"table-key\" data={{ colsWidth: [100] }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">\n                  <cursor />A\n                </block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controllerRef = jest.fn();\n    const { content, editor } = await renderEditor(\n      <BiEditor defaultValue={value} controllerRef={controllerRef} />,\n    );\n\n    await addBlockquoteByShortcut(editor, content);\n    const blockquoteElements = await waitForElement(() => (\n      content.querySelectorAll('blockquote')\n    ));\n    expect(blockquoteElements.length).toBe(1);\n  });\n\n  it.skip('嵌入文件，代码块，分割线不能被设置为引用', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"embed\"\n            data={{\n              name: 'test.docx',\n              src: 'test.docx',\n            }}\n          >\n            <anchor />\n          </block>\n          <block type=\"code\">\n            const a = 1;\n          </block>\n          <block type=\"paragraph\">\n            hello world\n          </block>\n          <block type=\"hr\">\n            <focus />\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const { container, content } = await renderEditor(\n      <BiEditor defaultValue={value} />,\n    );\n\n    await clickQuoteButton(container);\n    const blockquoteElements = content.querySelectorAll('blockquote');\n    expect(blockquoteElements.length).toBe(1);\n  });\n\n  it('引用不能嵌套标题折叠', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"heading-1\" data={{ blockquote: true }}>\n            引用标题1\n          </block>\n          <block type=\"heading-2\">标题2</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const createBiPlugins = createCustomizedBiPlugins({\n      HeadingGroupPlugin,\n      BlockquotePlugin,\n    });\n\n    const plugins = createBiPlugins();\n    const { content } = await renderEditor(\n      <BiEditor defaultValue={value} plugins={plugins} />,\n    );\n\n    const blockquoteElements = content.querySelectorAll('blockquote');\n    expect(blockquoteElements.length).toBe(1);\n  });\n\n});\n"],"file":"ui.test.js"}