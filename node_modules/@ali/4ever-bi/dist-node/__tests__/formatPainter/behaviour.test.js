"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everCangjie = require("@ali/4ever-cangjie");

var _everDevTest = require("@ali/4ever-dev-test");

var _createBiPlugins = _interopRequireDefault(require("../../createBiPlugins"));

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const plugins = (0, _createBiPlugins.default)().array;

var _ref = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, (0, _everDevTest.jsx)("anchor", null), (0, _everDevTest.jsx)("m", {
  type: "bold",
  key: "a"
}, "bolded"), (0, _everDevTest.jsx)("focus", null)), (0, _everDevTest.jsx)("block", {
  type: "paragraph",
  key: "b"
}, "unbold")));

describe('Bi/formatPainter/behaviour', () => {
  test('快捷键复制粘贴', async () => {
    const value = _ref;

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    controller.run('onKeyDown', // @ts-ignore
    new KeyboardEvent('keydown', (0, _everDevTest.getHotkeyEvent)('c+ctrl+shift')));

    const selection = _everCangjie.Selection.create({
      focus: _everCangjie.TextPoint.create({
        key: controller.value.document.getNode('b')?.getFirstText()?.key || '',
        offset: 0
      }),
      anchor: _everCangjie.TextPoint.create({
        key: controller.value.document.getNode('b')?.getFirstText()?.key || '',
        offset: 6
      })
    });

    controller.command(_everCangjie.Commands.select, selection);
    controller.run('onKeyDown', // @ts-ignore
    new KeyboardEvent('keydown', (0, _everDevTest.getHotkeyEvent)('v+ctrl+shift')));
    expect(!!controller.value.document.getNode('b')?.getFirstText()?.marks.find(m => m.type === 'bold')).toBe(true);
    expect(!!controller.value.data.formatClipboard).toBe(true);
  });
});
//# sourceMappingURL=behaviour.test.js.map