{"version":3,"sources":["../../../../src/__tests__/formatPainter/behaviour.test.tsx"],"names":["plugins","array","describe","test","value","controller","Controller","create","run","KeyboardEvent","selection","Selection","focus","TextPoint","key","document","getNode","getFirstText","offset","anchor","command","Commands","select","expect","marks","find","m","type","toBe","data","formatClipboard"],"mappings":";;;;AAEA;;AACA;;AACA;;AAJA;;AACA;AAMA,MAAMA,OAAO,GAAG,gCAAkBC,KAAlC;;WAMM,qCACE,wCACE;AAAO,EAAA,IAAI,EAAC;AAAZ,GACE,qCADF,EACY;AAAG,EAAA,IAAI,EAAC,MAAR;AAAe,EAAA,GAAG,EAAC;AAAnB,YADZ,EAC6C,oCAD7C,CADF,EAIE;AAAO,EAAA,IAAI,EAAC,WAAZ;AAAwB,EAAA,GAAG,EAAC;AAA5B,YAJF,CADF,C;;AAHNC,QAAQ,CAAC,4BAAD,EAA+B,MAAM;AAC3CC,EAAAA,IAAI,CAAC,SAAD,EAAY,YAAY;AAC1B,UAAMC,KAAK,OAAX;;AAaA,UAAMC,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCH,MAAAA,KADmC;AAEnCJ,MAAAA;AAFmC,KAAlB,CAAnB;;AAKAK,IAAAA,UAAU,CAACG,GAAX,CACE,WADF,EAEE;AACA,QAAIC,aAAJ,CAAkB,SAAlB,EAA6B,iCAAe,cAAf,CAA7B,CAHF;;AAMA,UAAMC,SAAS,GAAGC,uBAAUJ,MAAV,CAAiB;AACjCK,MAAAA,KAAK,EAAEC,uBAAUN,MAAV,CAAiB;AACtBO,QAAAA,GAAG,EAAET,UAAU,CAACD,KAAX,CAAiBW,QAAjB,CAA0BC,OAA1B,CAAkC,GAAlC,GAAwCC,YAAxC,IAAwDH,GAAxD,IAA+D,EAD9C;AAEtBI,QAAAA,MAAM,EAAE;AAFc,OAAjB,CAD0B;AAKjCC,MAAAA,MAAM,EAAEN,uBAAUN,MAAV,CAAiB;AACvBO,QAAAA,GAAG,EAAET,UAAU,CAACD,KAAX,CAAiBW,QAAjB,CAA0BC,OAA1B,CAAkC,GAAlC,GAAwCC,YAAxC,IAAwDH,GAAxD,IAA+D,EAD7C;AAEvBI,QAAAA,MAAM,EAAE;AAFe,OAAjB;AALyB,KAAjB,CAAlB;;AAUAb,IAAAA,UAAU,CAACe,OAAX,CAAmBC,sBAASC,MAA5B,EAAoCZ,SAApC;AAEAL,IAAAA,UAAU,CAACG,GAAX,CACE,WADF,EAEE;AACA,QAAIC,aAAJ,CAAkB,SAAlB,EAA6B,iCAAe,cAAf,CAA7B,CAHF;AAMAc,IAAAA,MAAM,CAAC,CAAC,CAAClB,UAAU,CAACD,KAAX,CAAiBW,QAAjB,CAA0BC,OAA1B,CAAkC,GAAlC,GAAwCC,YAAxC,IAAwDO,KAAxD,CAA8DC,IAA9D,CAAmEC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,MAAnF,CAAH,CAAN,CAAqGC,IAArG,CAA0G,IAA1G;AACAL,IAAAA,MAAM,CAAC,CAAC,CAAClB,UAAU,CAACD,KAAX,CAAiByB,IAAjB,CAAsBC,eAAzB,CAAN,CAAgDF,IAAhD,CAAqD,IAArD;AACD,GA7CG,CAAJ;AA8CD,CA/CO,CAAR","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Controller, Value, Commands, Selection, TextPoint } from '@ali/4ever-cangjie';\nimport { jsx, getHotkeyEvent } from '@ali/4ever-dev-test';\nimport createBiPlugins from '../../createBiPlugins';\n\n\nconst plugins = createBiPlugins().array;\n\n\ndescribe('Bi/formatPainter/behaviour', () => {\n  test('快捷键复制粘贴', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            <anchor /><m type=\"bold\" key=\"a\">bolded</m><focus />\n          </block>\n          <block type=\"paragraph\" key=\"b\">\n            unbold\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('c+ctrl+shift')),\n    );\n    \n    const selection = Selection.create({\n      focus: TextPoint.create({ \n        key: controller.value.document.getNode('b')?.getFirstText()?.key || '', \n        offset: 0,\n      }),\n      anchor: TextPoint.create({ \n        key: controller.value.document.getNode('b')?.getFirstText()?.key || '', \n        offset: 6,\n      }),\n    });\n    controller.command(Commands.select, selection);\n\n    controller.run(\n      'onKeyDown',\n      // @ts-ignore\n      new KeyboardEvent('keydown', getHotkeyEvent('v+ctrl+shift')),\n    );\n\n    expect(!!controller.value.document.getNode('b')?.getFirstText()?.marks.find(m => m.type === 'bold')).toBe(true);\n    expect(!!controller.value.data.formatClipboard).toBe(true);\n  });\n});\n"],"file":"behaviour.test.js"}