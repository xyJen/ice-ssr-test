{"version":3,"sources":["../../../../src/__tests__/lineheight/behaviour.test.tsx"],"names":["plugins","array","describe","createlineHeightValue","line","lineRule","lineHeight","value","spacing","forEach","params","test","controller","Controller","create","run","history","History","data","expect","undos","length","toEqual"],"mappings":";;AAGA;;AACA;;AAEA;;AAGA;;AACA;;AAVA;;AACA;;AACA;AAUA,MAAMA,OAAO,GAAG,uBAAgB,EAAhB,EAAoBC,KAApC;;WAS2E,qC;;YACE,oC;;YA2BS,qC;;YAC1E;AAAO,EAAA,IAAI,EAAC;AAAZ,mBAA0B,oCAA1B,C;;AApCZC,QAAQ,CAAC,yBAAD,EAA4B,MAAM;AACxCA,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrB,UAAMC,qBAAqB,GAAG,CAACC,IAAD,EAAeC,QAAf,MAAsC;AAClEC,MAAAA,UAAU,EAAE;AAAEF,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OADsD;AAElEE,MAAAA,KAAK,EACH,qCACE,wCACE;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAEJ,YAAAA,IAAF;AAAQC,YAAAA;AAAR;AAAX;AAA9B,8BADF,EAEE;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,IAAI,EAAE;AAAEG,UAAAA,OAAO,EAAE;AAAEJ,YAAAA,IAAF;AAAQC,YAAAA;AAAR;AAAX;AAA9B,+BAFF,CADF;AAHgE,KAAtC,CAA9B;;AAYA,KAAC,CAAC,CAAD,CAAD,EAAM,CAAC,CAAD,EAAI,SAAJ,CAAN,EAAsB,CAAC,CAAD,EAAI,OAAJ,CAAtB,EAAoCI,OAApC,CAA6CC,MAAD,IAAY;AACtDC,MAAAA,IAAI,CAAE,sBAAqBD,MAAM,CAAC,CAAD,CAAI,KAAIA,MAAM,CAAC,CAAD,CAAI,eAA/C,EAA+D,YAAY;AAC7E;AACA,cAAM;AAAEH,UAAAA,KAAF;AAASD,UAAAA;AAAT,YAAwBH,qBAAqB,CAAC,GAAGO,MAAJ,CAAnD;;AACA,cAAME,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCP,UAAAA,KADmC;AAEnCP,UAAAA;AAFmC,SAAlB,CAAnB;;AAKAY,QAAAA,UAAU,CAACG,GAAX,CAAe,UAAf,EAA2B,4BAAcT,UAAU,CAACF,IAAzB,EAA+BE,UAAU,CAACD,QAA1C,CAA3B;AACA,cAAM,8BAAY,CAAZ,CAAN;AACA,cAAM;AAAEW,UAAAA,OAAO,GAAGC,qBAAQH,MAAR;AAAZ,YAAiCF,UAAU,CAACL,KAAX,CAAiBW,IAAxD;AACAC,QAAAA,MAAM,CAACH,OAAO,CAACI,KAAR,CAAcC,MAAf,CAAN,CAA6BC,OAA7B,CAAqC,CAArC;AACD,OAZG,CAAJ;AAaD,KAdD;AAiBAX,IAAAA,IAAI,CAAC,2CAAD,EAA8C,YAAY;AAC5D,YAAMJ,KAAK,GACT,qCACE,wCACE;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAEJ,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,QAAQ,EAAE;AAArB;AAAX;AAA9B,+BADF,QADF,CADF;;AAQA,YAAMO,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCP,QAAAA,KADmC;AAEnCP,QAAAA;AAFmC,OAAlB,CAAnB;;AAKAY,MAAAA,UAAU,CAACG,GAAX,CAAe,UAAf,EAA2B,4BAAc,CAAd,CAA3B;AACA,YAAM,8BAAY,CAAZ,CAAN;AACA,YAAM;AAAEC,QAAAA,OAAO,GAAGC,qBAAQH,MAAR;AAAZ,UAAiCF,UAAU,CAACL,KAAX,CAAiBW,IAAxD;AACAC,MAAAA,MAAM,CAACH,OAAO,CAACI,KAAR,CAAcC,MAAf,CAAN,CAA6BC,OAA7B,CAAqC,CAArC;AACD,KAlBG,CAAJ;AAmBD,GAjDO,CAAR;AAkDD,CAnDO,CAAR","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { Value, Controller, History } from '@ali/4ever-cangjie';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  jsx, waitForTime,\n} from '@ali/4ever-dev-test';\nimport { createBiPlugins } from '../..';\nimport { setLineHeight } from '../../plugins/lineheight/actions';\n\nconst plugins = createBiPlugins({}).array;\n\ndescribe('Bi/lineHeight/behaviour', () => {\n  describe('边界场景', () => {\n    const createlineHeightValue = (line: number, lineRule?: string) => ({\n      lineHeight: { line, lineRule },\n      value: (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={{ spacing: { line, lineRule } }}><anchor />段落</block>\n            <block type=\"paragraph\" data={{ spacing: { line, lineRule } }}>段落<focus /></block>\n          </document>\n        </value>\n      ) as unknown as Value,\n    });\n\n    [[1], [2, 'atLeast'], [3, 'exact']].forEach((params) => {\n      test(`设置相同的 lineHeight: (${params[0]}, ${params[1]})，不产生 history`, async () => {\n        // @ts-ignore\n        const { value, lineHeight } = createlineHeightValue(...params as unknown as any);\n        const controller = Controller.create({\n          value,\n          plugins,\n        });\n\n        controller.run('onAction', setLineHeight(lineHeight.line, lineHeight.lineRule));\n        await waitForTime(1);\n        const { history = History.create() } = controller.value.data;\n        expect(history.undos.length).toEqual(0);\n      });\n    });\n\n\n    test('多段落、含默认值时，设置相同的 lineHeight: 1，不产生 history', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"paragraph\" data={{ spacing: { line: 1, lineRule: 'auto' } }}><anchor />段落</block>\n            <block type=\"paragraph\">段落<focus /></block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      controller.run('onAction', setLineHeight(1));\n      await waitForTime(1);\n      const { history = History.create() } = controller.value.data;\n      expect(history.undos.length).toEqual(0);\n    });\n  });\n});\n"],"file":"behaviour.test.js"}