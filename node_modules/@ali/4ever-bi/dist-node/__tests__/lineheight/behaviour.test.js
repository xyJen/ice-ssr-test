"use strict";

var _everCangjie = require("@ali/4ever-cangjie");

require("@testing-library/jest-dom/extend-expect");

var _everDevTest = require("@ali/4ever-dev-test");

var _ = require("../..");

var _actions = require("../../plugins/lineheight/actions");

/* eslint-disable @typescript-eslint/no-explicit-any */

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
const plugins = (0, _.createBiPlugins)({}).array;

var _ref = (0, _everDevTest.jsx)("anchor", null);

var _ref2 = (0, _everDevTest.jsx)("focus", null);

var _ref3 = (0, _everDevTest.jsx)("anchor", null);

var _ref4 = (0, _everDevTest.jsx)("block", {
  type: "paragraph"
}, "\u6BB5\u843D", (0, _everDevTest.jsx)("focus", null));

describe('Bi/lineHeight/behaviour', () => {
  describe('边界场景', () => {
    const createlineHeightValue = (line, lineRule) => ({
      lineHeight: {
        line,
        lineRule
      },
      value: (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
        type: "paragraph",
        data: {
          spacing: {
            line,
            lineRule
          }
        }
      }, _ref, "\u6BB5\u843D"), (0, _everDevTest.jsx)("block", {
        type: "paragraph",
        data: {
          spacing: {
            line,
            lineRule
          }
        }
      }, "\u6BB5\u843D", _ref2)))
    });

    [[1], [2, 'atLeast'], [3, 'exact']].forEach(params => {
      test(`设置相同的 lineHeight: (${params[0]}, ${params[1]})，不产生 history`, async () => {
        // @ts-ignore
        const {
          value,
          lineHeight
        } = createlineHeightValue(...params);

        const controller = _everCangjie.Controller.create({
          value,
          plugins
        });

        controller.run('onAction', (0, _actions.setLineHeight)(lineHeight.line, lineHeight.lineRule));
        await (0, _everDevTest.waitForTime)(1);
        const {
          history = _everCangjie.History.create()
        } = controller.value.data;
        expect(history.undos.length).toEqual(0);
      });
    });
    test('多段落、含默认值时，设置相同的 lineHeight: 1，不产生 history', async () => {
      const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
        type: "paragraph",
        data: {
          spacing: {
            line: 1,
            lineRule: 'auto'
          }
        }
      }, _ref3, "\u6BB5\u843D"), _ref4));

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      controller.run('onAction', (0, _actions.setLineHeight)(1));
      await (0, _everDevTest.waitForTime)(1);
      const {
        history = _everCangjie.History.create()
      } = controller.value.data;
      expect(history.undos.length).toEqual(0);
    });
  });
});
//# sourceMappingURL=behaviour.test.js.map