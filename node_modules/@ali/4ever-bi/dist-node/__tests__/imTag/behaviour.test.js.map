{"version":3,"sources":["../../../../src/__tests__/imTag/behaviour.test.tsx"],"names":["createBiPlugins","ImTagPlugin","plugins","imTag","locale","imFrom","jumpToConversition","cid","getConversitionNameFromCid","Promise","success","setTimeout","imTitle","array","describe","test","value","tagType","height","width","metadata","output","controller","Controller","create","node","document","findDescendant","n","Tag","isTag","expect","toBe","run","actual","toJSON","preserveSelections","expected","setValue","toEqual"],"mappings":";;AAGA;;AACA;;AACA;;AACA;;AALA;;AACA;AAMA,MAAMA,eAAe,GAAG,iCAA0B;AAChDC,EAAAA,WAAW,EAAXA;AADgD,CAA1B,CAAxB;AAGA,MAAMC,OAAO,GAAGF,eAAe,CAAC;AAC9BG,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE;AADF,KADH;AAILC,IAAAA,kBAAkB,EAAGC,GAAD,IAAS,CAE5B,CANI;AAOLC,IAAAA,0BAA0B,EAAGD,GAAD,IAAS;AACnC,aAAO,IAAIE,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO,CAAC;AAAEA,YAAAA,OAAO,EAAE,IAAX;AAAiBE,YAAAA,OAAO,EAAE;AAA1B,WAAD,CAAP;AACD,SAFS,EAEP,CAFO,CAAV;AAGD,OAJM,CAAP;AAKD;AAbI;AADuB,CAAD,CAAf,CAgBbC,KAhBH;;WAoCY,qC;;YAEF;AAAO,EAAA,IAAI,EAAC;AAAZ,mB;;YAoBE,qC;;YAEF;AAAO,EAAA,IAAI,EAAC;AAAZ,mB;;AA1CVC,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnCC,EAAAA,IAAI,CAAC,WAAD,EAAc,MAAM;AACtB,UAAMC,KAAK,GACT,qCACE,wCACE;AAAO,MAAA,IAAI,EAAC;AAAZ,0BAEE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE,IADL;AAEJC,QAAAA,MAAM,EAAE,EAFJ;AAGJC,QAAAA,KAAK,EAAE,GAHH;AAIJC,QAAAA,QAAQ,EAAE;AACRR,UAAAA,OAAO,EAAE;AADD;AAJN;AAFR,MAFF,OADF,QADF,CADF;AAsBA,UAAMS,MAAM,GACV,qCACE,wCACE;AAAO,MAAA,IAAI,EAAC;AAAZ,0BAEE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,IAAI,EAAE;AACJJ,QAAAA,OAAO,EAAE,IADL;AAEJC,QAAAA,MAAM,EAAE,EAFJ;AAGJC,QAAAA,KAAK,EAAE,GAHH;AAIJC,QAAAA,QAAQ,EAAE;AACRR,UAAAA,OAAO,EAAE;AADD;AAJN;AAFR,MAFF,QADF,QADF,CADF;;AAsBA,UAAMU,UAAU,GAAGC,wBAAWC,MAAX,CAAkB;AACnCR,MAAAA,KADmC;AAEnCd,MAAAA;AAFmC,KAAlB,CAAnB;;AAIA,UAAMuB,IAAI,GAAGH,UAAU,CAACN,KAAX,CAAiBU,QAAjB,CAA0BC,cAA1B,CAAyCC,CAAC,IAAIC,YAAIC,KAAJ,CAAUF,CAAV,CAA9C,CAAb;AACAG,IAAAA,MAAM,CAACF,YAAIC,KAAJ,CAAUL,IAAV,CAAD,CAAN,CAAwBO,IAAxB,CAA6B,IAA7B;AACAV,IAAAA,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2B,kBAAWR,IAAX,EAAiB;AAAEL,MAAAA,QAAQ,EAAE;AAAER,QAAAA,OAAO,EAAE;AAAX;AAAZ,KAAjB,CAA3B;AAEA,UAAMsB,MAAM,GAAGZ,UAAU,CAACN,KAAX,CAAiBmB,MAAjB,CAAwB;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAAxB,CAAf;AACA,UAAMC,QAAQ,GAAGf,UAAU,CACxBgB,QADc,CACLjB,MADK,EAEdL,KAFc,CAERmB,MAFQ,CAED;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAFC,CAAjB;AAGAL,IAAAA,MAAM,CAACG,MAAD,CAAN,CAAeK,OAAf,CAAuBF,QAAvB;AACD,GA1DG,CAAJ;AA2DD,CA5DO,CAAR","sourcesContent":["\n/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { jsx } from '@ali/4ever-dev-test';\nimport { Controller, Value, Block } from '@ali/4ever-cangjie';\nimport { createCustomizedBiPlugins, ImTagPlugin, setTagData } from '../..';\nimport { Tag } from '@ali/4ever-mo';\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  ImTagPlugin,\n});\nconst plugins = createBiPlugins({\n  imTag: {\n    locale: {\n      imFrom: '来自会话',\n    },\n    jumpToConversition: (cid) => {\n      console.log('跳转至im对话框：', cid);\n    },\n    getConversitionNameFromCid: (cid) => {\n      return new Promise((success) => {\n        setTimeout(() => {\n          success({ success: true, imTitle: '这里是群名' });\n        }, 0);\n      });\n    },\n  }\n}).array;\n\ndescribe('Bi/imTag/behaviour', () => {\n  test('首次打开后更新数据', () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            Start Paragraph\n            <inline\n              type=\"tag\"\n              data={{\n                tagType: 'im',\n                height: 24,\n                width: 100,\n                metadata: {\n                  imTitle: '233'\n                }\n              }}\n            />\n            <cursor />\n          </block>\n          <block type=\"paragraph\">End Paragraph</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const output = ((\n      <value>\n        <document>\n          <block type=\"paragraph\">\n            Start Paragraph\n            <inline\n              type=\"tag\"\n              data={{\n                tagType: 'im',\n                height: 24,\n                width: 100,\n                metadata: {\n                  imTitle: '这里是群名'\n                }\n              }}\n            />\n            <cursor />\n          </block>\n          <block type=\"paragraph\">End Paragraph</block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n    const node = controller.value.document.findDescendant(n => Tag.isTag(n)) as Block;\n    expect(Tag.isTag(node)).toBe(true);\n    controller.run('onAction', setTagData(node, { metadata: { imTitle: '这里是群名' } }));\n\n    const actual = controller.value.toJSON({ preserveSelections: true });\n    const expected = controller\n      .setValue(output)\n      .value.toJSON({ preserveSelections: true });\n    expect(actual).toEqual(expected);\n  });\n});"],"file":"behaviour.test.js"}