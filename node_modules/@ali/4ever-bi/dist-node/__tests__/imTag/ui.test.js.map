{"version":3,"sources":["../../../../src/__tests__/imTag/ui.test.tsx"],"names":["createBiPlugins","biPlugins","ImTagPlugin","Editor","props","defaultValue","imTitle","value","setValue","React","useState","plugins","useMemo","imTag","locale","imFrom","jumpToConversition","cid","getConversitionNameFromCid","Promise","success","setTimeout","handleChange","useCallback","changed","describe","beforeAll","jest","spyOn","console","error","mockImplementation","afterAll","mockRestore","afterEach","test","tagType","height","width","metadata","queryByTestId","findByText","im","expect","textContent","toBe","newTagNode"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport * as React from 'react';\nimport { Value } from '@ali/4ever-cangjie';\nimport { createCustomizedBiPlugins, ImTagPlugin, plugins as biPlugins } from '../..';\nimport {\n  cleanup,\n} from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport Provider from '../../provider';\nimport Content from '../../content';\nimport { renderEditor, jsx } from '@ali/4ever-dev-test';\n\ninterface EditorProps {\n  defaultValue: Value;\n  imTitle: string;\n}\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  // @ts-ignore\n  ...biPlugins,\n  // @ts-ignore\n  ImTagPlugin,\n});\n\nconst Editor: React.FC<EditorProps> = (props) => {\n  const { defaultValue, imTitle } = props;\n  const [value, setValue] = React.useState(defaultValue);\n  const plugins = React.useMemo(() => {\n    return createBiPlugins({\n      imTag: {\n        locale: {\n          imFrom: '来自会话',\n        },\n        jumpToConversition: (cid) => {\n          console.log('跳转至im对话框：', cid);\n        },\n        getConversitionNameFromCid: () => {\n          return new Promise((success) => {\n            setTimeout(() => {\n              success({ success: true, imTitle });\n            }, 1000);// 兼容 ut 执行\n          });\n        },\n      },\n    });\n  }, [imTitle]);\n  const handleChange = React.useCallback((changed) => {\n    setValue(changed.value);\n  }, []);\n  return (\n    <Provider value={value} onChange={handleChange} plugins={plugins} autoFocus>\n      <Content />\n    </Provider>\n  );\n};\ndescribe('Bi/tag/ui', () => {\n  beforeAll(() => {\n    // 防止被 componentDidCatch catch 的 error 被控制台输出\n    jest.spyOn(console, 'error');\n    // @ts-ignore\n    console.error.mockImplementation(() => { });\n  });\n  afterAll(() => {\n    // @ts-ignore\n    console.error.mockRestore();\n  });\n  afterEach(() => {\n    cleanup();\n  });\n\n  describe('imTag 正常渲染', () => {\n    test('正常渲染 + 群名无更新', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              123<inline\n                type=\"tag\"\n                data={{\n                  tagType: 'im',\n                  height: 20,\n                  width: 100,\n                  metadata: {\n                    imTitle: '蓝鲸-文档协同',\n                  },\n                }}\n              /><cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, findByText } = await renderEditor(<Editor defaultValue={value} imTitle='蓝鲸-文档协同' />);\n      const im = queryByTestId('im');\n      expect(im.textContent).toBe('来自会话 蓝鲸-文档协同');\n      await new Promise<void>((success) => { setTimeout(() => success(), 1000) });\n      const newTagNode = await findByText('来自会话 蓝鲸-文档协同');\n      expect(!!newTagNode).toBe(true);\n    });\n\n    test('正常渲染 + 群名已更新', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"paragraph\">\n              123<inline\n                type=\"tag\"\n                data={{\n                  tagType: 'im',\n                  height: 20,\n                  width: 100,\n                  metadata: {\n                    imTitle: '蓝鲸-文档协同',\n                  },\n                }}\n              /><cursor />\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n      const { queryByTestId, findByText } = await renderEditor(<Editor defaultValue={value} imTitle='这里是异步加载群名' />);\n      const im = queryByTestId('im');\n      expect(im.textContent).toBe('来自会话 蓝鲸-文档协同');\n      const newTagNode = await findByText('来自会话 这里是异步加载群名');\n      expect(!!newTagNode).toBe(true);\n    });\n  });\n});\n"],"file":"ui.test.js"}