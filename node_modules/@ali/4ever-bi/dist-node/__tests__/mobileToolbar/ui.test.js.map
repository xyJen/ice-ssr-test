{"version":3,"sources":["../../../../src/__tests__/mobileToolbar/ui.test.tsx"],"names":["createValue","text","Items","keyboard","insert","mention","font","bold","align","alignRight","selectorForItem","name","describe","it","container","domBase","toolButtons","closest","keyboardButton","querySelector","expect","toBeTruthy","fireEvent","mouseDown","toBeFalsy","addButton","atIcon","fontButton","boldButton","alignButton"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport { wait, waitForElementToBeRemoved } from '@testing-library/react';\nimport { renderEditor, jsx, fireEvent } from '@ali/4ever-dev-test';\nimport { Value } from '@ali/4ever-cangjie';\nimport Editor from '../editorMobile';\n\nfunction createValue(text: string) {\n  return (\n    <value>\n      <document>\n        <block type=\"paragraph\">\n          <cursor />\n          {text}\n        </block>\n      </document>\n    </value>\n  ) as unknown as Value;\n}\n\nconst Items = {\n  keyboard: 'keyboard',\n  insert: 'insert',\n  mention: 'mention_mobileinsert',\n  font: 'font',\n  bold: 'bold',\n  align: 'align',\n  alignRight: 'alignment_rightmobile',\n};\n\nconst selectorForItem = (name: string) => `div[data-toolbar-key=\"${name}\"]`;\n\ndescribe('Bi/mobileToolbar/ui', () => {\n  it('works when clicking Keyboard button', async () => {\n    const { container: domBase } = await renderEditor(\n      <Editor\n        defaultValue={createValue('Hello')}\n        singleLayout={[{ toolButtons: [{ name: 'alignment' }] }]}\n      />,\n    );\n\n    const container = domBase.closest('body')!;\n    let keyboardButton = container.querySelector(\n      selectorForItem(Items.keyboard),\n    );\n    expect(keyboardButton).toBeTruthy();\n\n    fireEvent.mouseDown(keyboardButton);\n    await waitForElementToBeRemoved(() => {\n      return container.querySelector(selectorForItem(Items.keyboard));\n    });\n    keyboardButton = container.querySelector(selectorForItem(Items.keyboard));\n    expect(keyboardButton).toBeFalsy();\n  });\n\n  it('works when clicking Insert button', async () => {\n    const { container: domBase } = await renderEditor(\n      <Editor\n        defaultValue={createValue('Hello')}\n        singleLayout={[{ toolButtons: [{ name: 'alignment' }] }]}\n      />,\n    );\n\n    const container = domBase.closest('body')!;\n    const addButton = container.querySelector(selectorForItem(Items.insert));\n    expect(addButton).toBeTruthy();\n\n    fireEvent.mouseDown(addButton!);\n    await wait();\n    const atIcon = container.querySelector(selectorForItem(Items.mention));\n    expect(atIcon).toBeTruthy();\n  });\n\n  it('works when clicking Fonts button', async () => {\n    const { container: domBase } = await renderEditor(\n      <Editor\n        defaultValue={createValue('Hello')}\n        singleLayout={[{ toolButtons: [{ name: 'alignment' }] }]}\n      />,\n    );\n\n    const container = domBase.closest('body')!;\n    const fontButton = container.querySelector(selectorForItem(Items.font));\n    expect(fontButton).toBeTruthy();\n\n    fireEvent.mouseDown(fontButton!);\n    await wait();\n    const boldButton = container.querySelector(selectorForItem(Items.bold));\n    expect(boldButton).toBeTruthy();\n  });\n\n  it('works when clicking Align button', async () => {\n    const { container: domBase } = await renderEditor(\n      <Editor\n        defaultValue={createValue('Hello')}\n        singleLayout={[{ toolButtons: [{ name: 'alignment' }] }]}\n      />,\n    );\n\n    const container = domBase.closest('body')!;\n    const alignButton = container.querySelector(selectorForItem(Items.align));\n    expect(alignButton).toBeTruthy();\n\n    fireEvent.mouseDown(alignButton!);\n    await wait();\n    const alignRight = container.querySelector(\n      selectorForItem(Items.alignRight),\n    );\n    expect(alignRight).toBeTruthy();\n  });\n});\n"],"file":"ui.test.js"}