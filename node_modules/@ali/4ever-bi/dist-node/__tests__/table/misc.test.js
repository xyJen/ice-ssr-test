"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("@testing-library/jest-dom/extend-expect");

var _everDevTest = require("@ali/4ever-dev-test");

var _react = require("@testing-library/react");

var _weDesignNext = require("@ali/we-design-next");

var _everCangjie = require("@ali/4ever-cangjie");

var _lodash = require("lodash");

var _editor = _interopRequireDefault(require("../editor"));

var _helpers = require("./helpers");

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
let originValue;
beforeAll(() => {
  originValue = process.env.RUNTIME_ENV;
  process.env.RUNTIME_ENV = _weDesignNext.ToolbarLayout.UITEST_FLAG;
});
afterAll(() => {
  process.env.RUNTIME_ENV = originValue;
});
describe('table render', () => {
  // 这个 case 会报错，辛苦 一辙 看下 TODO 一辙
  test.skip('表格 mount 后立刻 unmount，不应该报错', async () => {
    const value = (0, _helpers.createTable)([['A', 'B']]);
    const controllerRef = jest.fn();
    const {
      editor
    } = await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      controllerRef: controllerRef
    }));
    jest.useFakeTimers();
    const controller = (0, _lodash.last)(controllerRef.mock.calls)[0];
    controller.command(_everCangjie.Commands.moveToEndOfDocument);

    _everDevTest.fireEvent.keyDown(editor, (0, _everDevTest.getHotkeyEvent)('Backspace'));

    _everDevTest.fireEvent.keyDown(editor, (0, _everDevTest.getHotkeyEvent)('Backspace'));

    await (0, _react.wait)();
    expect(() => jest.runOnlyPendingTimers()).not.toThrow();
    jest.useRealTimers();
  });
});
describe('table toolbar', () => {
  test('光标在表格内时，点击格式刷按钮正常拷贝样式', async () => {
    const value = (0, _helpers.createTable)([['A', 'B']]);
    const controllerRef = jest.fn();
    await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      controllerRef: controllerRef
    }));
    jest.useFakeTimers();
    const controller = (0, _lodash.last)(controllerRef.mock.calls)[0];
    const toolBtn = document.querySelector('[data-testid="bi-toolbar-painter"]');

    _everDevTest.fireEvent.click(toolBtn);

    jest.runOnlyPendingTimers();
    await Promise.resolve();
    expect(controller.value.data.formatClipboard).not.toBe(null);
    jest.useRealTimers();
  });
});
//# sourceMappingURL=misc.test.js.map