"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("@testing-library/jest-dom/extend-expect");

var _everDevTest = require("@ali/4ever-dev-test");

var _everCangjie = require("@ali/4ever-cangjie");

var _lodash = require("lodash");

var _editor = _interopRequireDefault(require("../editor"));

var _helpers = require("./helpers");

var _react = require("@testing-library/react");

/* eslint-disable import/no-extraneous-dependencies */

/** @jsx jsx */
// 复制选项
const COPY_ITEM = '[data-role="copy"]';
describe('table cornerToolbar', () => {
  test('鼠标在表格内展示汉堡，移出表格隐藏汉堡', async () => {
    const value = (0, _helpers.createTable)([['A', 'B'], ['C', 'D']], {
      before: '<p>123</p>',
      after: '<p>abc</p>'
    });
    const controllerRef = jest.fn();
    await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      controllerRef: controllerRef
    }));
    const controller = (0, _lodash.last)(controllerRef.mock.calls)[0];
    controller.command(_everCangjie.Commands.moveToEndOfDocument);
    const cornerToolbar = document.querySelector('[data-testid="table-corner-toobar-button"]'); // 光标不在表格内

    expect(cornerToolbar.style.display).toBe('none');
    const toolbarItems = document.querySelectorAll('[data-type="table-cell"]');

    _everDevTest.fireEvent.mouseEnter(toolbarItems[0]); // 光标在表格内


    expect(cornerToolbar.style.display).toBe('block');
    jest.useRealTimers();
  });
  test('选中表格时，显示汉堡；点击表格外时隐藏汉堡', async () => {
    const value = (0, _helpers.createTable)([['A', 'B'], ['C', 'D']], {
      before: '<p>123</p>',
      after: '<p>abc</p>'
    });
    const controllerRef = jest.fn();
    await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      controllerRef: controllerRef
    }));
    const controller = (0, _lodash.last)(controllerRef.mock.calls)[0];
    const {
      selection
    } = controller.value;
    const table = (0, _helpers.getTableFromController)(controller);
    const firstCell = table.nodes[0].nodes[0];
    controller.command(_everCangjie.Commands.select, selection.moveToStartOfNode(firstCell, controller));
    await (0, _everDevTest.waitForTime)(0);
    const cornerToolbar = document.querySelector('[data-testid="table-corner-toobar-button"]'); // 光标不在表格内

    expect(cornerToolbar.style.display).toBe('block');
    const tableDOM = document.querySelector('[data-type="table"]');

    _everDevTest.fireEvent.mouseLeave(tableDOM);

    const lastNode = controller.value.document.getLastNode();
    controller.command(_everCangjie.Commands.select, selection.moveToStartOfNode(lastNode, controller));
    await (0, _everDevTest.waitForTime)(0);
    expect(cornerToolbar.style.display).toBe('none');
  });
  test('点击汉堡菜单选项，菜单隐藏', async () => {
    const value = (0, _helpers.createTable)([['A', 'B'], ['C', 'D']], {
      before: '<p>123</p>',
      after: '<p>abc</p>'
    });
    const controllerRef = jest.fn();
    const {
      queryByTestId
    } = await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      controllerRef: controllerRef
    }));
    const controller = (0, _lodash.last)(controllerRef.mock.calls)[0];
    controller.command(_everCangjie.Commands.moveToEndOfDocument);
    const cornerToolbar = await (0, _react.waitForElement)(() => queryByTestId('drag-hander'));
    const toolbarItems = document.querySelectorAll('[data-type="table-cell"]');

    _everDevTest.fireEvent.click(toolbarItems[0]); // 光标点击到汉堡


    _everDevTest.fireEvent.click(cornerToolbar);

    let dragMenuRoot = await (0, _react.waitForElement)(() => queryByTestId('drag-menu_root')); // 菜单显示

    expect(dragMenuRoot).not.toBe(null); // 点击复制按钮

    const copyItem = document.querySelector(COPY_ITEM);

    _everDevTest.fireEvent.click(copyItem);

    await (0, _everDevTest.waitForTime)(1000); // 菜单隐藏

    dragMenuRoot = document.querySelector('[data-testid="drag-menu_root"]');
    expect(dragMenuRoot).toBe(null);
  });
});
//# sourceMappingURL=cornerToolbar.test.js.map