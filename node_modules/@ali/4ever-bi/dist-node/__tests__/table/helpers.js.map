{"version":3,"sources":["../../../../src/__tests__/table/helpers.tsx"],"names":["createTableCell","data","text","TableCell","create","colSpan","rowSpan","nodes","split","map","createEmptyParagraph","createTable","table","extra","Mo","htmlToValue","before","row","cell","join","after","createEditor","tableSelection","shouldAdjust","tableNode","Array","isArray","createTableInstance","unshift","push","value","Value","document","Document","controllerRef","jest","fn","content","editor","controller","mock","calls","cells","getElementsByTagName","t","findDescendant","Table","isTable","command","key","tbSelection","query","expect","toEqual","objectContaining","startCell","fireEvent","mouseDown","plugins","array","createControllerInstance","Controller","createEditorWithTable","colsWidth","isAutofit","rows","TableRow","colsLength","reduce","acc","Math","max","length","tableData","undefined","fill","tblW","w","type","createMergeCell","createHiddenCell","hidden","createMergeTable","colLength","createEmptyTableCell","createMergeTable0","createBigMergeTable","tableNodes","rowIndex","rowNodes","colIndex","expectIsCollapsedInCell","selection","filterDescendants","isTableRow","el","isCollapsed","anchorPath","getPath","anchor","cellPath","Path","isAncestor","getTableFromController","hiddenCell","mergedCell","bigMergedTable"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { last } from 'lodash-es';\nimport { Controller, Value, Document, Path, Block } from '@ali/4ever-cangjie';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { renderEditor, jsx, fireEvent } from '@ali/4ever-dev-test';\nimport { Table, TableCell, TableRow } from '@ali/4ever-mo';\n\nimport { ITableSelection, createEmptyParagraph, createEmptyTableCell } from '@ali/4ever-plugin-table';\nimport Editor from '../editor';\nimport Mo from '../serializer';\nimport createBiPlugins from '../../createBiPlugins';\n\ninterface TableExtra {\n  before?: string;\n  after?: string;\n  tableSelection?: ITableSelection;\n}\n\nfunction createTableCell({\n  data = {},\n  text = '',\n}) {\n  return TableCell.create({\n    data: { colSpan: 1, rowSpan: 1, ...(data || {}) },\n    nodes: text.split('\\n').map(createEmptyParagraph),\n  });\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport function createTable(table: string[][], extra: TableExtra = {}) {\n  return Mo.htmlToValue(`\n    ${extra.before ? extra.before : ''}\n    <table>\n    ${table.map((row) => `\n      <tr>\n      ${row.map((cell) => `<td>${cell}</td>`).join('')}\n      </tr>\n    `).join('')}\n    </table>\n    ${extra.after ? extra.after : ''}\n  `) as Value;\n}\n\n\nexport async function createEditor({\n  table, tableSelection, shouldAdjust, extra = {},\n}: {\n  table: string[][] | Table;\n  tableSelection?: Omit<ITableSelection, 'key'>;\n  shouldAdjust?: boolean;\n  extra?: {\n    before?: string;\n    after?: string;\n  };\n}) {\n  const { before, after } = extra;\n  let tableNode: Table = table;\n  if (Array.isArray(table)) {\n    tableNode = createTableInstance({ table });\n  }\n  const nodes: Block[] = [tableNode];\n  if (before) {\n    nodes.unshift(createEmptyParagraph(before));\n  }\n  if (after) {\n    nodes.push(createEmptyParagraph(after));\n  }\n  const value = Value.create({\n    document: Document.create({\n      nodes,\n    }),\n  });\n  const controllerRef = jest.fn();\n  const { content, editor } = await renderEditor(<Editor defaultValue={value} controllerRef={controllerRef} />);\n  const controller = last(controllerRef.mock.calls)[0] as Controller;\n\n  const cells = content.getElementsByTagName('td');\n  if (tableSelection) {\n    const t = controller.value.document.findDescendant(Table.isTable) as Table;\n    controller.command(\n      'selectTableSelection',\n      t,\n      {\n        ...tableSelection,\n        key: t.key,\n      },\n      shouldAdjust,\n    );\n\n    const tbSelection = controller.query('tableSelection');\n    expect(tbSelection)\n      .toEqual(expect.objectContaining(tableSelection));\n  } else {\n    const startCell = cells[0];\n    // 单元格 A\n    fireEvent.mouseDown(startCell);\n  }\n\n  return { editor, content, controller };\n}\n\nconst plugins = createBiPlugins().array;\n\nexport function createControllerInstance(nodes: Block[]) {\n  const value = Value.create({\n    document: Document.create({\n      nodes,\n    }),\n  });\n  const controller = Controller.create({\n    value,\n    plugins,\n  });\n  return controller;\n}\n\nexport async function createEditorWithTable(\n  table: string[][] | Table,\n  tableSelection?: Omit<ITableSelection, 'key'>,\n) {\n  return createEditor({ table, tableSelection });\n}\n\ninterface CellParams {\n  data?: TableCell['data'];\n  text?: string;\n}\n\ntype TableParams = Array<Array<String | CellParams>> ;\n\nexport function createTableInstance({\n  table = [['A', 'B'], ['C', 'D']],\n  colsWidth,\n  isAutofit,\n}: {\n  table?: TableParams;\n  colsWidth?: number[];\n  isAutofit?: boolean;\n} = {}) {\n  const rows = table.map((row) => {\n    return TableRow.create({\n      nodes: row.map((cell) => {\n        if (typeof cell === 'string') {\n          cell = {\n            text: cell || '',\n          };\n        }\n        return createTableCell(cell as CellParams);\n      }),\n    });\n  });\n  const colsLength = table.reduce(\n    (acc, row) => Math.max(acc, row.length),\n    0,\n  );\n\n  const tableData: Table['data'] = {\n    colsWidth: colsWidth === undefined ? Array(colsLength).fill(100) : colsWidth,\n  };\n  if (isAutofit) {\n    tableData.tblW = {\n      w: 100,\n      type: 'pct',\n    };\n  }\n\n  return Table.create({\n    data: tableData,\n    nodes: rows,\n  });\n}\n\nfunction createMergeCell(rowSpan = 2, colSpan = 2) {\n  return TableCell.create({\n    data: { colSpan, rowSpan },\n    nodes: [createEmptyParagraph()],\n  });\n}\n\nfunction createHiddenCell() {\n  return createEmptyTableCell({ hidden: true });\n}\n\n/**\n * 创建带合并单元格的 table(4x4)，结构如下\n * [\n *   ['', '', '', ''],\n *   ['', 'mergeCell', 'hidden', ''],\n *   ['', 'hidden', 'hidden', ''],\n *   ['', '', '', ''],\n * ]\n */\nexport function createMergeTable() {\n  const colLength = 4;\n  return Table.create({\n    data: {\n      colsWidth: Array(colLength).fill(100),\n    },\n    nodes: [\n      TableRow.create({\n        nodes: Array(colLength).fill('').map(createEmptyTableCell),\n      }),\n      TableRow.create({\n        nodes: [\n          createEmptyTableCell(),\n          createMergeCell(2, 2),\n          createHiddenCell(),\n          createEmptyTableCell(),\n        ],\n      }),\n      TableRow.create({\n        nodes: [\n          createEmptyTableCell(),\n          createHiddenCell(),\n          createHiddenCell(),\n          createEmptyTableCell(),\n        ],\n      }),\n      TableRow.create({\n        nodes: Array(colLength).fill('').map(createEmptyTableCell),\n      }),\n    ],\n  });\n}\n\nexport function createMergeTable0() {\n  const colLength = 4;\n  return Table.create({\n    data: {\n      colsWidth: Array(colLength).fill(100),\n    },\n    nodes: [\n      TableRow.create({\n        nodes: [\n          createMergeCell(2, 2),\n          createHiddenCell(),\n          createEmptyTableCell(),\n          createEmptyTableCell(),\n        ],\n      }),\n      TableRow.create({\n        nodes: [\n          createHiddenCell(),\n          createHiddenCell(),\n          createEmptyTableCell(),\n          createEmptyTableCell(),\n        ],\n      }),\n      TableRow.create({\n        nodes: Array(colLength).fill('').map(createEmptyTableCell),\n      }),\n      TableRow.create({\n        nodes: Array(colLength).fill('').map(createEmptyTableCell),\n      }),\n    ],\n  });\n}\n\nexport function createBigMergeTable({\n  colsWidth = Array(5).fill(100),\n}) {\n  const colLength = colsWidth.length;\n  const tableNodes: TableRow[] = [];\n  for (let rowIndex = 0; rowIndex < colLength; rowIndex++) {\n    const rowNodes: TableCell[] = [];\n    for (let colIndex = 0; colIndex < colLength; colIndex++) {\n      const text = `${rowIndex}${colIndex}`;\n      let data = {};\n      if (rowIndex === 1 && colIndex === 1) {\n        data = {\n          rowSpan: 3,\n          colSpan: 3,\n        };\n      } else if (\n        rowIndex >= 1 &&\n        colIndex >= 1 &&\n        rowIndex <= 3 &&\n        colIndex <= 3\n      ) {\n        data = {\n          hidden: true,\n        };\n      }\n      rowNodes.push(createTableCell({\n        data,\n        text,\n      }));\n    }\n    tableNodes.push(TableRow.create({\n      nodes: tableNodes,\n    }));\n  }\n  return Table.create({\n    data: {\n      colsWidth,\n    },\n    nodes: tableNodes,\n  });\n}\n\nexport function expectIsCollapsedInCell(\n  controller: Controller,\n  rowIndex: number,\n  colIndex: number,\n) {\n  const { selection } = controller.value;\n  const tbSelection = controller.query('tableSelection');\n  expect(tbSelection).toEqual(null);\n\n  const rows = controller.value.document.filterDescendants(TableRow.isTableRow) as TableRow[];\n  const row = rows[rowIndex];\n  const cells = row.filterDescendants((el) => el.type === 'table-cell') as TableCell[];\n  const cell = cells[colIndex];\n  expect(selection.isCollapsed).toEqual(true);\n  const anchorPath = controller.value.document.getPath(selection.anchor.key);\n  const cellPath = controller.value.document.getPath(cell.key);\n  expect(Path.isAncestor(cellPath, anchorPath)).toEqual(true);\n}\n\nexport function getTableFromController(controller: Controller) {\n  return controller.value.document.findDescendant((el) => el.type === 'table') as Table;\n}\n\nexport const hiddenCell = {\n  data: {\n    hidden: true,\n  },\n};\n\nexport const mergedCell = {\n  data: {\n    colSpan: 3,\n    rowSpan: 3,\n  },\n  text: '22',\n};\n\nexport const bigMergedTable = [\n  ['00', '01', '02', '03', '04', '05', '06'],\n  ['10', '11', '12', '13', '14', '15', '16'],\n  ['20', '21', mergedCell, hiddenCell, hiddenCell, '25', '26'],\n  ['30', '31', hiddenCell, hiddenCell, hiddenCell, '35', '36'],\n  ['40', '41', hiddenCell, hiddenCell, hiddenCell, '45', '46'],\n  ['50', '51', '52', '53', '54', '55', '56'],\n  ['60', '61', '62', '63', '64', '65', '66'],\n];\n"],"file":"helpers.js"}