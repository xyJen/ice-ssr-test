{"version":3,"sources":["../../../../src/__tests__/table/paste.test.tsx"],"names":["DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT","TablePlugin","constants","convertFromPercentToPixel","utils","delay","ms","Promise","r","setTimeout","describe","it","controller","editor","content","startColIndex","startRowIndex","endColIndex","endRowIndex","tableSelection","query","expect","toEqual","objectContaining","fireEvent","paste","getElementsByTagName","length","toBe","textContent","value","mouseDown","Mo","htmlToValue","tds","i","j","trim","forEach","cutOrCopy","table","colsWidth","setData","jest","fn","nativeEvent","clipboardData","preventDefault","fragment","transferUtils","decodeFragment","mock","calls","copyTable","findDescendant","Table","isTable","selection","p","Paragraph","isParagraph","command","Commands","select","moveToRangeOfNode","toBeNull","text","originColsWidth","isAutofit","expectCoslWidth","data","isAutofitWidth","extra","before","after","document","firstP","nodes","lastP","newSelection","moveAnchorToStartOfNode","moveFocusToEndOfNode"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport '@testing-library/jest-dom/extend-expect';\nimport { renderEditor, jsx, fireEvent } from '@ali/4ever-dev-test';\nimport {\n  wait,\n} from '@testing-library/react';\nimport { Commands, transferUtils, Value } from '@ali/4ever-cangjie';\nimport { Paragraph, Table } from '@ali/4ever-mo';\nimport { TablePlugin } from '@ali/4ever-bamboo';\nimport Mo from '../serializer';\nimport Editor from '../editor';\nimport { createEditorWithTable, createEditor, createTable, createTableInstance, getTableFromController } from './helpers';\n\nconst { DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT } = TablePlugin.constants;\nconst { convertFromPercentToPixel } = TablePlugin.utils;\n\nconst delay = ms => () => new Promise(r => setTimeout(() => r(), ms));\n\ndescribe('table paste', () => {\n  it('选定选区并粘贴更大表格，获取的表格大小不会超过当前表格', async () => {\n    const { controller, editor, content } = await createEditorWithTable(\n      [\n        ['A', 'B'],\n        ['C', 'D'],\n      ],\n      {\n        startColIndex: 0,\n        startRowIndex: 0,\n        endColIndex: 1,\n        endRowIndex: 1,\n      },\n    );\n\n    await delay(100);\n    const tableSelection = controller.query('tableSelection');\n\n    // 选中目前表格所有单元格\n    expect(tableSelection).toEqual(expect.objectContaining({\n      startRowIndex: 0,\n      endRowIndex: 1,\n      startColIndex: 0,\n      endColIndex: 1,\n    }));\n\n    fireEvent.paste(editor, 'text/html', `\n      <table>\n        <tr><td>A</td><td>B</td><td>C</td><td>D</td></tr>\n        <tr><td>E</td><td>F</td><td>G</td><td>H</td></tr>\n        <tr><td>I</td><td>J</td><td>K</td><td>L</td></tr>\n        <tr><td>M</td><td>N</td><td>O</td><td>P</td></tr>\n      </table>\n    `);\n\n    await wait();\n\n    // 执行粘贴后，依旧是成2x2的表格，因为选区就那么大，不会超过选区\n    expect(content.getElementsByTagName('td').length).toBe(4);\n    expect(content.getElementsByTagName('td')[3].textContent).toBe('F');\n  });\n\n  it('点击单元格并粘贴更大表格，所得表格大小会超过当前表格', async () => {\n    const value = createTable([\n      ['A', 'B'],\n      ['C', 'D'],\n    ]);\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} />);\n\n    fireEvent.mouseDown(content.getElementsByTagName('td')[0]);\n\n    fireEvent.paste(editor, 'text/html', `\n      <table>\n        <tr><td>A</td><td>B</td><td>C</td><td>D</td></tr>\n        <tr><td>E</td><td>F</td><td>G</td><td>H</td></tr>\n        <tr><td>I</td><td>J</td><td>K</td><td>L</td></tr>\n        <tr><td>M</td><td>N</td><td>O</td><td>P</td></tr>\n      </table>\n    `);\n\n    await wait();\n\n    // 执行粘贴后，拓充成4x4的表格了\n    expect(content.getElementsByTagName('td').length).toBe(16);\n    expect(content.getElementsByTagName('td')[4 * 4 - 1].textContent).toBe('P');\n  });\n\n  it('在合并单元格上粘贴合并单元格，正确处理', async () => {\n    const value = Mo.htmlToValue(`\n      <table>\n        <tr>\n          <td rowspan=\"2\" colspan=\"2\">123</td>\n          <td rowspan=\"1\" colspan=\"1\"></td>\n        </tr>\n        <tr>\n          <td rowspan=\"1\" colspan=\"1\"></td>\n          <td rowspan=\"1\" colspan=\"1\"></td>\n        </tr>\n      </table>\n    `) as Value;\n\n    const { editor, content } = await renderEditor(<Editor defaultValue={value} />);\n\n    fireEvent.mouseDown(content.getElementsByTagName('td')[0]);\n\n    fireEvent.paste(editor, 'text/html', `\n      <table>\n        <tr>\n          <td rowspan=\"2\" colspan=\"1\">321</td>\n          <td rowspan=\"2\" colspan=\"1\">666</td>\n        </tr>\n        <tr>\n          <td rowspan=\"1\" colspan=\"1\"></td>\n          <td rowspan=\"1\" colspan=\"1\"></td>\n        </tr>\n      </table>\n    `);\n\n    await wait();\n\n    expect(content.getElementsByTagName('td')[1].textContent).toBe('666');\n  });\n\n  it('选中多个单元格粘贴文本，选中的所有单元格内容替换为该文本', async () => {\n    const { controller, editor, content } = await createEditorWithTable(\n      [\n        ['A', 'B', 'C'],\n        ['D', 'E', 'F\\nNF'],\n        ['G', 'H', 'I'],\n      ],\n      {\n        startColIndex: 1,\n        startRowIndex: 1,\n        endColIndex: 2,\n        endRowIndex: 2,\n      },\n    );\n    fireEvent.paste(editor, 'text/html', `\n      <p>test</p>\n    `);\n\n    await wait();\n\n    // 执行粘贴后，拓充成4x4的表格了\n    const tds = content.getElementsByTagName('td');\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (i > 0 && j > 0) {\n          expect(tds[3 * i + j].textContent).toBe('test');\n        }\n      }\n    }\n  });\n\n  it('有表格选区时，选中包含表格的内容，粘贴至其他表格时过滤粘贴板内的表格', async () => {\n    const { editor, content } = await createEditorWithTable(\n      [\n        ['A', 'B', 'C'],\n        ['D', 'E', 'F'],\n        ['G', 'H', 'I'],\n      ],\n      {\n        startColIndex: 1,\n        startRowIndex: 1,\n        endColIndex: 2,\n        endRowIndex: 2,\n      },\n    );\n    fireEvent.paste(editor, 'text/html', `\n      <p>test0</p>\n      <table><colgroup><col width=\"100\"></colgroup><tbody><tr><td>123</td></tr></tbody></table>\n      <p>test1</p>\n    `);\n\n    await wait();\n\n    const tds = content.getElementsByTagName('td');\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (i > 0 && j > 0) {\n          expect(tds[3 * i + j].textContent?.trim()).toBe('test0test1');\n        }\n      }\n    }\n  });\n\n  it('光标在单元格内时，选中包含表格的内容，粘贴至其他表格时过滤粘贴板内的表格', async () => {\n    const { editor, content } = await createEditorWithTable(\n      [\n        ['A', 'B', 'C'],\n        ['D', 'E', 'F'],\n        ['G', 'H', 'I'],\n      ]\n    );\n    await wait();\n    fireEvent.paste(editor, 'text/html', `\n      <p>test2</p>\n      <table><colgroup><col width=\"100\"></colgroup><tbody><tr><td>123</td></tr></tbody></table>\n      <p>test3</p>\n    `);\n\n    await wait();\n\n    const tds = content.getElementsByTagName('td');\n    expect(tds[0].textContent).toBe('test2test3A');\n  });\n\n  ['cut', 'copy'].forEach((cutOrCopy) => {\n    it(`表格只包含一个单元格：选中单元格${cutOrCopy}，粘贴出整个表格`, async () => {\n      const table = createTableInstance({\n        table: [['A']],\n        colsWidth: [40],\n      });\n      const { editor } = await createEditorWithTable(\n        table,\n        {\n          startColIndex: 0,\n          startRowIndex: 0,\n          endColIndex: 0,\n          endRowIndex: 0,\n        },\n      );\n\n      const setData = jest.fn();\n\n      fireEvent[cutOrCopy](editor, {\n        nativeEvent: {\n          clipboardData: {\n            setData,\n          },\n          preventDefault() {},\n        },\n      });\n      const fragment = transferUtils.decodeFragment(setData.mock.calls[0][1]);\n      const copyTable = fragment.findDescendant(Table.isTable) as Table;\n      expect(Table.isTable(copyTable)).toBe(true);\n    });\n\n    it(`表格只包含一个单元格：选中单元格内文字${cutOrCopy}，粘贴出纯文本`, async () => {\n      const table = createTableInstance({\n        table: [['A']],\n        colsWidth: [40],\n      });\n      const { editor, controller } = await createEditorWithTable(\n        table,\n      );\n\n      const setData = jest.fn();\n      const { selection } = controller.value;\n      const p = getTableFromController(controller).findDescendant(Paragraph.isParagraph);\n      controller.command(Commands.select, selection.moveToRangeOfNode(p, controller));\n\n      fireEvent[cutOrCopy](editor, {\n        nativeEvent: {\n          clipboardData: {\n            setData,\n          },\n          preventDefault() {},\n        },\n      });\n      const fragment = transferUtils.decodeFragment(setData.mock.calls[0][1]);\n      const copyTable = fragment.findDescendant(Table.isTable) as Table;\n      expect(copyTable).toBeNull();\n      expect(fragment.text).toBe('A');\n    });\n\n    it(`存在表格选区时${cutOrCopy}自适应宽度表格，粘贴的表格 colsWidth 值是像素`, async () => {\n      const originColsWidth = [20, 30, 50];\n      const table = createTableInstance({\n        table: [['A', 'A'], ['A', 'A']],\n        colsWidth: originColsWidth,\n        isAutofit: true,\n      });\n      const { editor } = await createEditorWithTable(\n        table,\n        {\n          startColIndex: 0,\n          startRowIndex: 0,\n          endColIndex: 1,\n          endRowIndex: 1,\n        },\n      );\n\n      const setData = jest.fn();\n\n      fireEvent[cutOrCopy](editor, {\n        nativeEvent: {\n          clipboardData: {\n            setData,\n          },\n          preventDefault() {},\n        },\n      });\n      const fragment = transferUtils.decodeFragment(setData.mock.calls[0][1]);\n      const copyTable = fragment.findDescendant(Table.isTable) as Table;\n      const expectCoslWidth = convertFromPercentToPixel(\n        copyTable,\n        DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT\n      )\n      expect(copyTable.data.colsWidth).toEqual(expectCoslWidth);\n      expect(Table.isAutofitWidth(copyTable)).toBe(true);\n    });\n\n    it(`没有表格选区时${cutOrCopy}自适应宽度表格，粘贴的表格 colsWidth 值是像素`, async () => {\n      const originColsWidth = [20, 30, 50];\n      const table = createTableInstance({\n        table: [['A', 'A'], ['A', 'A']],\n        colsWidth: originColsWidth,\n        isAutofit: true,\n      });\n      const { editor, controller } = await createEditor(\n        { table, extra: { before: 'before', after: 'after' } },\n      );\n      const { document, selection } = controller.value;\n      const firstP = document.nodes[0];\n      const lastP = document.nodes[document.nodes.length - 1];\n      const newSelection = selection\n        .moveAnchorToStartOfNode(firstP, controller)\n        .moveFocusToEndOfNode(lastP, controller);\n      controller.command(Commands.select, newSelection);\n      const setData = jest.fn();\n\n      fireEvent[cutOrCopy](editor, {\n        nativeEvent: {\n          clipboardData: {\n            setData,\n          },\n          preventDefault() {},\n        },\n      });\n      const fragment = transferUtils.decodeFragment(setData.mock.calls[0][1]);\n      const copyTable = fragment.findDescendant(Table.isTable) as Table;\n      const expectCoslWidth = convertFromPercentToPixel(\n        copyTable,\n        DEFAULT_TOTAL_WIDTH_FOR_AUTOFIT,\n      );\n      expect(copyTable.data.colsWidth).toEqual(expectCoslWidth);\n      expect(Table.isAutofitWidth(copyTable)).toBe(true);\n      expect(fragment.nodes[0].text).toBe('before');\n      expect(fragment.nodes[fragment.nodes.length - 1].text).toBe('after');\n    });\n  });\n});\n"],"file":"paste.test.js"}