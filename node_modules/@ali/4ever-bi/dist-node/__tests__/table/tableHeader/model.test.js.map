{"version":3,"sources":["../../../../../src/__tests__/table/tableHeader/model.test.tsx"],"names":["describe","it","table","Table","create","data","isColumnHeader","expect","toBe","nodes","TableRow","isTblHeader","TableCell","isRowHeader","tableRow","shouldSticky","rowSpan"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BC,EAAAA,EAAE,CAAC,kBAAD,EAAqB,MAAM;AAC3B,UAAMC,KAAK,GAAGC,cAAMC,MAAN,CAAa;AACzBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,cAAc,EAAE;AADZ;AADmB,KAAb,CAAd;;AAMAC,IAAAA,MAAM,CAACJ,cAAMG,cAAN,CAAqBJ,KAArB,CAAD,CAAN,CAAoCM,IAApC,CAAyC,IAAzC;AACD,GARC,CAAF;AAUAP,EAAAA,EAAE,CAAC,kBAAD,EAAqB,MAAM;AAC3B,UAAMC,KAAK,GAAGC,cAAMC,MAAN,CAAa;AACzBK,MAAAA,KAAK,EAAE,CAACC,iBAASN,MAAT,CAAgB;AACtBC,QAAAA,IAAI,EAAE;AACJM,UAAAA,WAAW,EAAE;AADT,SADgB;AAItBF,QAAAA,KAAK,EAAE,CAACG,kBAAUR,MAAV,CAAiB,EAAjB,CAAD;AAJe,OAAhB,CAAD;AADkB,KAAb,CAAd;;AASAG,IAAAA,MAAM,CAACJ,cAAMU,WAAN,CAAkBX,KAAlB,CAAD,CAAN,CAAiCM,IAAjC,CAAsC,IAAtC;AACD,GAXC,CAAF;AAaAP,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClC,UAAMa,QAAQ,GAAGJ,iBAASN,MAAT,CAAgB;AAC/BC,MAAAA,IAAI,EAAE;AACJM,QAAAA,WAAW,EAAE;AADT,OADyB;AAI/BF,MAAAA,KAAK,EAAE,CAACG,kBAAUR,MAAV,CAAiB,EAAjB,CAAD;AAJwB,KAAhB,CAAjB;;AAOAG,IAAAA,MAAM,CAACG,iBAASK,YAAT,CAAsBD,QAAtB,CAAD,CAAN,CAAwCN,IAAxC,CAA6C,IAA7C;AACD,GATC,CAAF;AAWAP,EAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACtC,UAAMa,QAAQ,GAAGJ,iBAASN,MAAT,CAAgB;AAC/BC,MAAAA,IAAI,EAAE;AACJM,QAAAA,WAAW,EAAE;AADT,OADyB;AAI/BF,MAAAA,KAAK,EAAE,CAACG,kBAAUR,MAAV,CAAiB;AACvBC,QAAAA,IAAI,EAAE;AACJW,UAAAA,OAAO,EAAE;AADL;AADiB,OAAjB,CAAD;AAJwB,KAAhB,CAAjB;;AAWAT,IAAAA,MAAM,CAACG,iBAASK,YAAT,CAAsBD,QAAtB,CAAD,CAAN,CAAwCN,IAAxC,CAA6C,KAA7C;AACD,GAbC,CAAF;AAcD,CAjDO,CAAR","sourcesContent":["import { Table, TableRow, TableCell } from '@ali/4ever-mo';\n\ndescribe('table/model', () => {\n  it('table col header', () => {\n    const table = Table.create({\n      data: {\n        isColumnHeader: true,\n      },\n    });\n\n    expect(Table.isColumnHeader(table)).toBe(true);\n  });\n\n  it('table row header', () => {\n    const table = Table.create({\n      nodes: [TableRow.create({\n        data: {\n          isTblHeader: true,\n        },\n        nodes: [TableCell.create({})],\n      })],\n    });\n\n    expect(Table.isRowHeader(table)).toBe(true);\n  });\n\n  it('table row should sticky', () => {\n    const tableRow = TableRow.create({\n      data: {\n        isTblHeader: true,\n      },\n      nodes: [TableCell.create({})],\n    });\n\n    expect(TableRow.shouldSticky(tableRow)).toBe(true);\n  });\n\n  it('table row should not sticky', () => {\n    const tableRow = TableRow.create({\n      data: {\n        isTblHeader: true,\n      },\n      nodes: [TableCell.create({\n        data: {\n          rowSpan: 2,\n        }\n      })],\n    });\n\n    expect(TableRow.shouldSticky(tableRow)).toBe(false);\n  });\n});"],"file":"model.test.js"}