{"version":3,"sources":["../../../../../src/__tests__/table/commands/deleteRows.test.tsx"],"names":["mergedCell","data","colSpan","rowSpan","text","describe","mergeCases","desc","deleteRowIndex","originMergeCellData","expectedMergeCellData","forEach","it","controller","table","tableSelection","startRowIndex","endRowIndex","startColIndex","endColIndex","shouldAdjust","command","mergeTd","value","document","findDescendant","el","type","expect","toBe","selection","lastCell","nodes","newSelection","moveToRangeOfNode","Commands","select","newTable","length"],"mappings":"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","sourcesContent":["import { Controller, Value, Document, Commands } from '@ali/4ever-cangjie';\nimport { TableCell } from '@ali/4ever-mo';\nimport {\n  createEditor,\n  createMergeTable,\n  createTableInstance,\n  getTableFromController,\n} from '../helpers';\n\nconst mergedCell = {\n  data: {\n    colSpan: 2,\n    rowSpan: 2,\n  },\n  text: '22',\n};\n\ndescribe('Bi: table/commands/deleteRows', () => {\n  const mergeCases = [{\n    desc: '删除合并单元格所在行',\n    deleteRowIndex: 1,\n    originMergeCellData: {\n      rowSpan: 2,\n      colSpan: 2,\n    },\n    expectedMergeCellData: {\n      rowSpan: 1,\n      colSpan: 2,\n    },\n  }, {\n    desc: '删除 hidden 单元格所在行',\n    deleteRowIndex: 2,\n    originMergeCellData: {\n      rowSpan: 2,\n      colSpan: 2,\n    },\n    expectedMergeCellData: {\n      rowSpan: 1,\n      colSpan: 2,\n    },\n  }];\n\n  mergeCases.forEach(({\n    desc,\n    deleteRowIndex,\n    expectedMergeCellData,\n  }) => {\n    it(desc, async () => {\n      const { controller } = await createEditor({\n        table: createMergeTable(),\n        tableSelection: {\n          startRowIndex: deleteRowIndex,\n          endRowIndex: deleteRowIndex,\n          startColIndex: 0,\n          endColIndex: 3,\n        },\n        shouldAdjust: false,\n      });\n\n      const table = getTableFromController(controller);\n      controller.command('deleteRows', table);\n      const mergeTd = controller.value.document.findDescendant(el => {\n        return el.type === 'table-cell' &&\n          (\n            el.data.colSpan > 1 ||\n            el.data.rowSpan > 1\n          );\n      }) as TableCell;\n      expect(mergeTd.data.rowSpan).toBe(expectedMergeCellData.rowSpan);\n      expect(mergeTd.data.colSpan).toBe(expectedMergeCellData.colSpan);\n    });\n  });\n\n  describe('不规整表格删除行', () => {\n    it('删除最后一行，该行存在单元格 rowSpan > 1，可以正常删除行', async () => {\n      const { controller } = await createEditor({\n        table: createTableInstance({\n          table: [\n            ['A', 'B'],\n            [mergedCell, 'D'],\n          ],\n        }),\n      });\n      const { selection } = controller.value;\n      const table = getTableFromController(controller);\n      const lastCell = table.nodes[1].nodes[1];\n      const newSelection = selection.moveToRangeOfNode(lastCell, controller);\n      controller.command(Commands.select, newSelection);\n      controller.command('deleteRows', table)\n      // expect(() => controller.command('deleteRows', table)).not.toThrowError();\n\n      const newTable = getTableFromController(controller);\n      expect(newTable.nodes.length).toBe(1);\n    });\n  });\n});\n"],"file":"deleteRows.test.js"}