{"version":3,"sources":["../../../../../src/__tests__/table/commands/moveCols.test.tsx"],"names":["hiddenCell","data","hidden","mergedCell","colSpan","rowSpan","text","bigMergedTable","createColSpanMergeCell","colSpan1MergeCell","colSpan2MergeCell","createColSpanEmptyCell","colSpan1EmptyCell","colSpan2EmptyCell","describe","cases","description","originTable","table","colsWidth","expectedTable","command","controller","start","end","forEach","it","value","Value","create","document","Document","nodes","controllerRef","jest","fn","mock","calls","newTable","trs","filterDescendants","node","type","row","length","tds","col","expectedCell","actualCell","expect","toBe","Object","entries","k","v","toEqual"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Value, Document, Controller } from '@ali/4ever-cangjie';\nimport { renderEditor, jsx } from '@ali/4ever-dev-test';\nimport { TableCell } from '@ali/4ever-mo';\nimport { last } from 'lodash-es';\nimport {\n  createTableInstance,\n  getTableFromController,\n} from '../helpers';\nimport Editor from '../../editor';\n\nexport const hiddenCell = {\n  data: {\n    hidden: true,\n  },\n};\n\nexport const mergedCell = {\n  data: {\n    colSpan: 3,\n    rowSpan: 3,\n  },\n  text: '22',\n};\n\nexport const bigMergedTable = [\n  ['00', '01', '02', '03', '04', '05', '06'],\n  ['10', '11', '12', '13', '14', '15', '16'],\n  ['20', '21', mergedCell, hiddenCell, hiddenCell, '25', '26'],\n  ['30', '31', hiddenCell, hiddenCell, hiddenCell, '35', '36'],\n  ['40', '41', hiddenCell, hiddenCell, hiddenCell, '45', '46'],\n  ['50', '51', '52', '53', '54', '55', '56'],\n  ['60', '61', '62', '63', '64', '65', '66'],\n];\n\nconst createColSpanMergeCell = (colSpan) => {\n  return {\n    ...mergedCell,\n    data: {\n      ...mergedCell.data,\n      colSpan,\n    },\n  };\n};\n\nconst colSpan1MergeCell = createColSpanMergeCell(1);\nconst colSpan2MergeCell = createColSpanMergeCell(2);\n\nconst createColSpanEmptyCell = (colSpan) => {\n  return {\n    data: {\n      colSpan,\n      rowSpan: mergedCell.data.rowSpan,\n    },\n    text: '',\n  };\n};\nconst colSpan1EmptyCell = createColSpanEmptyCell(1);\nconst colSpan2EmptyCell = createColSpanEmptyCell(2);\n\ndescribe('Bi: table/commands/moveCols', () => {\n  const cases = [\n    {\n      description: '移动单列至左侧',\n      originTable: createTableInstance({\n        table: [['A', 'B'], ['C', 'D']],\n        colsWidth: [50, 100],\n      }),\n      expectedTable: {\n        table: [['B', 'A'], ['D', 'C']],\n        colsWidth: [100, 50],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 1, end: 1 }, 0);\n      },\n    },\n    {\n      description: '移动单列至右侧',\n      originTable: createTableInstance({\n        table: [['A', 'B'], ['C', 'D']],\n        colsWidth: [50, 100],\n      }),\n      expectedTable: {\n        table: [['B', 'A'], ['D', 'C']],\n        colsWidth: [100, 50],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 0, end: 0 }, 2);\n      },\n    },\n    {\n      description: '移动多列至左侧',\n      originTable: createTableInstance({\n        table: [\n          ['00', '01', '02', '03'],\n          ['10', '11', '12', '13'],\n          ['20', '21', '22', '23'],\n          ['30', '31', '32', '33'],\n        ],\n        colsWidth: [20, 40, 60, 80],\n      }),\n      expectedTable: {\n        table: [\n          ['01', '02', '00', '03'],\n          ['11', '12', '10', '13'],\n          ['21', '22', '20', '23'],\n          ['31', '32', '30', '33'],\n        ],\n        colsWidth: [40, 60, 20, 80],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 1, end: 2 }, 0);\n      },\n    },\n    {\n      description: '移动多列至右侧',\n      originTable: createTableInstance({\n        table: [\n          ['00', '01', '02', '03'],\n          ['10', '11', '12', '13'],\n          ['20', '21', '22', '23'],\n          ['30', '31', '32', '33'],\n        ],\n        colsWidth: [20, 40, 60, 80],\n      }),\n      expectedTable: {\n        table: [\n          ['00', '03', '01', '02'],\n          ['10', '13', '11', '12'],\n          ['20', '23', '21', '22'],\n          ['30', '33', '31', '32'],\n        ],\n        colsWidth: [20, 80, 40, 60],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 1, end: 2 }, 4);\n      },\n    },\n    {\n      description: '移动完整合并单元格至左侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['02', '03', '04', '00', '01', '05', '06'],\n          ['12', '13', '14', '10', '11', '15', '16'],\n          [mergedCell, hiddenCell, hiddenCell, '20', '21', '25', '26'],\n          [hiddenCell, hiddenCell, hiddenCell, '30', '31', '35', '36'],\n          [hiddenCell, hiddenCell, hiddenCell, '40', '41', '45', '46'],\n          ['52', '53', '54', '50', '51', '55', '56'],\n          ['62', '63', '64', '60', '61', '65', '66'],\n        ],\n        colsWidth: [30, 40, 50, 10, 20, 60, 70],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 2, end: 4 }, 0);\n      },\n    },\n    {\n      description: '移动完整合并单元格至右侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['00', '01', '05', '06', '02', '03', '04'],\n          ['10', '11', '15', '16', '12', '13', '14'],\n          ['20', '21', '25', '26', mergedCell, hiddenCell, hiddenCell],\n          ['30', '31', '35', '36', hiddenCell, hiddenCell, hiddenCell],\n          ['40', '41', '45', '46', hiddenCell, hiddenCell, hiddenCell],\n          ['50', '51', '55', '56', '52', '53', '54'],\n          ['60', '61', '65', '66', '62', '63', '64'],\n        ],\n        colsWidth: [10, 20, 60, 70, 30, 40, 50],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 2, end: 4 }, 7);\n      },\n    },\n    {\n      description: '移动合并单元格左半部分至左侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['01', '02', '00', '03', '04', '05', '06'],\n          ['11', '12', '10', '13', '14', '15', '16'],\n          ['21', colSpan1MergeCell, '20', colSpan2EmptyCell, hiddenCell, '25', '26'],\n          ['31', hiddenCell, '30', hiddenCell, hiddenCell, '35', '36'],\n          ['41', hiddenCell, '40', hiddenCell, hiddenCell, '45', '46'],\n          ['51', '52', '50', '53', '54', '55', '56'],\n          ['61', '62', '60', '63', '64', '65', '66'],\n        ],\n        colsWidth: [20, 30, 10, 40, 50, 60, 70],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 1, end: 2 }, 0);\n      },\n    },\n    {\n      description: '移动合并单元格左半部分至右侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['00', '04', '05', '01', '02', '03', '06'],\n          ['10', '14', '15', '11', '12', '13', '16'],\n          ['20', colSpan1EmptyCell, '25', '21', colSpan2MergeCell, hiddenCell, '26'],\n          ['30', hiddenCell, '35', '31', hiddenCell, hiddenCell, '36'],\n          ['40', hiddenCell, '45', '41', hiddenCell, hiddenCell, '46'],\n          ['50', '54', '55', '51', '52', '53', '56'],\n          ['60', '64', '65', '61', '62', '63', '66'],\n        ],\n        colsWidth: [10, 50, 60, 20, 30, 40, 70],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 1, end: 3 }, 6);\n      },\n    },\n    {\n      description: '移动合并单元格中间部分至左侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['00', '03', '01', '02', '04', '05', '06'],\n          ['10', '13', '11', '12', '14', '15', '16'],\n          ['20', colSpan1EmptyCell, '21', colSpan2MergeCell, hiddenCell, '25', '26'],\n          ['30', hiddenCell, '31', hiddenCell, hiddenCell, '35', '36'],\n          ['40', hiddenCell, '41', hiddenCell, hiddenCell, '45', '46'],\n          ['50', '53', '51', '52', '54', '55', '56'],\n          ['60', '63', '61', '62', '64', '65', '66'],\n        ],\n        colsWidth: [10, 40, 20, 30, 50, 60, 70],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 3, end: 3 }, 1);\n      },\n    },\n    {\n      description: '移动合并单元格中间部分至右侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['00', '01', '02', '04', '05', '03', '06'],\n          ['10', '11', '12', '14', '15', '13', '16'],\n          ['20', '21', colSpan2MergeCell, hiddenCell, '25', colSpan1EmptyCell, '26'],\n          ['30', '31', hiddenCell, hiddenCell, '35', hiddenCell, '36'],\n          ['40', '41', hiddenCell, hiddenCell, '45', hiddenCell, '46'],\n          ['50', '51', '52', '54', '55', '53', '56'],\n          ['60', '61', '62', '64', '65', '63', '66'],\n        ],\n        colsWidth: [10, 20, 30, 50, 60, 40, 70],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 3, end: 3 }, 6);\n      },\n    },\n    {\n      description: '移动合并单元格右半部分至左侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['00', '03', '04', '05', '01', '02', '06'],\n          ['10', '13', '14', '15', '11', '12', '16'],\n          ['20', colSpan2EmptyCell, hiddenCell, '25', '21', colSpan1MergeCell, '26'],\n          ['30', hiddenCell, hiddenCell, '35', '31', hiddenCell, '36'],\n          ['40', hiddenCell, hiddenCell, '45', '41', hiddenCell, '46'],\n          ['50', '53', '54', '55', '51', '52', '56'],\n          ['60', '63', '64', '65', '61', '62', '66'],\n        ],\n        colsWidth: [10, 40, 50, 60, 20, 30, 70],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 3, end: 5 }, 1);\n      },\n    },\n    {\n      description: '移动合并单元格右半部分至右侧',\n      originTable: createTableInstance({\n        table: bigMergedTable,\n        colsWidth: [10, 20, 30, 40, 50, 60, 70],\n      }),\n      expectedTable: {\n        table: [\n          ['00', '01', '02', '06', '03', '04', '05'],\n          ['10', '11', '12', '16', '13', '14', '15'],\n          ['20', '21', colSpan1MergeCell, '26', colSpan2EmptyCell, hiddenCell, '25'],\n          ['30', '31', hiddenCell, '36', hiddenCell, hiddenCell, '35'],\n          ['40', '41', hiddenCell, '46', hiddenCell, hiddenCell, '45'],\n          ['50', '51', '52', '56', '53', '54', '55'],\n          ['60', '61', '62', '66', '63', '64', '65'],\n        ],\n        colsWidth: [10, 20, 30, 70, 40, 50, 60],\n      },\n      command: (controller, table) => {\n        controller.command('moveCols', table, { start: 3, end: 5 }, 7);\n      },\n    },\n  ];\n  cases.forEach(({\n    description,\n    command,\n    expectedTable,\n    originTable,\n  }) => {\n    it(description, async () => {\n      const value = Value.create({\n        document: Document.create({\n          nodes: [originTable],\n        }),\n      });\n      const controllerRef = jest.fn();\n      await renderEditor(<Editor defaultValue={value} controllerRef={controllerRef} />);\n      const controller = last(controllerRef.mock.calls)[0] as Controller;\n\n      const table = getTableFromController(controller);\n\n      command(controller, table);\n      const newTable = getTableFromController(controller);\n\n      const trs = newTable.filterDescendants(\n        node => node.type === 'table-row',\n      ) as TableCell[];\n\n      for (let row = 0; row < trs.length; row++) {\n        const tds = trs[row].filterDescendants(\n          node => node.type === 'table-cell',\n        ) as TableCell[];\n        for (let col = 0; col < tds.length; col++) {\n          const expectedCell = expectedTable.table[row][col];\n          const actualCell = tds[col];\n          if (typeof expectedCell === 'string') {\n            expect(actualCell.text).toBe(expectedCell);\n          } else {\n            const { data, text } = expectedCell;\n            expect(actualCell.text).toBe(text || '');\n            // eslint-disable-next-line guard-for-in\n            Object.entries(data).forEach(([k, v]) => {\n              expect(actualCell.data[k]).toBe(v);\n            });\n          }\n        }\n      }\n      expect(newTable.data.colsWidth).toEqual(expectedTable.colsWidth);\n    });\n  });\n});\n"],"file":"moveCols.test.js"}