{"version":3,"sources":["../../../../../src/__tests__/table/commands/deleteCols.test.tsx"],"names":["describe","it","controller","document","selection","value","cells","filterDescendants","TableCell","isTableCell","lastCell","length","newSel","moveToStartOfNode","command","Commands","select","table","findDescendant","Table","isTable","newTable","node","type","row0","row1","row2","row3","nodes","expect","toBe","irregularTable","startRowIndex","startColIndex","endRowIndex","endColIndex","mergeCases","desc","deleteColIndex","originMergeCellData","rowSpan","colSpan","expectedMergeCellData","forEach","tableSelection","shouldAdjust","data","colsWidth","mergeTd","el","isAutofit","cell","isAutofitWidth","toEqual"],"mappings":"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","sourcesContent":["import { Commands } from '@ali/4ever-cangjie';\nimport { Table, TableCell } from '@ali/4ever-mo';\nimport {\n  createControllerInstance,\n  createEditor,\n  createEditorWithTable,\n  createMergeTable,\n  createTableInstance,\n  getTableFromController,\n} from '../helpers';\n\ndescribe('Bi: table/commands/deleteCols', () => {\n  it('支持不规则表格删除单列', async () => {\n    const { controller } = await createEditorWithTable(\n      [\n        ['A'],\n        ['A', 'A', 'A'],\n        ['A', 'A'],\n        ['A', 'A', 'A', 'A'],\n      ],\n    );\n\n    const { document, selection } = controller.value;\n    const cells = document.filterDescendants(TableCell.isTableCell);\n    const lastCell = cells[cells.length - 1];\n    const newSel = selection.moveToStartOfNode(lastCell, controller);\n\n    controller.command(Commands.select, newSel);\n\n    const table = controller.value.document.findDescendant(Table.isTable) as Table;\n    controller.command('deleteCols', table);\n    const newTable = controller.value.document.filterDescendants(node => node.type === 'table')[0] as Table;\n    const [row0, row1, row2, row3] = newTable.nodes;\n    expect(row0.nodes.length).toBe(1);\n    expect(row1.nodes.length).toBe(3);\n    expect(row2.nodes.length).toBe(2);\n    expect(row3.nodes.length).toBe(3);\n  });\n\n  it('支持不规则表格删除多列', async () => {\n    const irregularTable = [\n      ['A'],\n      ['A', 'A', 'A'],\n      ['A', 'A'],\n      ['A', 'A', 'A', 'A'],\n    ];\n    const { controller } = await createEditorWithTable(\n      irregularTable,\n      {\n        startRowIndex: 1,\n        startColIndex: 1,\n        endRowIndex: 3,\n        endColIndex: 3,\n      },\n    );\n\n    const table = getTableFromController(controller);\n    controller.command('deleteCols', table);\n    const newTable = getTableFromController(controller);\n    const [row0, row1, row2, row3] = newTable.nodes;\n    expect(row0.nodes.length).toBe(1);\n    expect(row1.nodes.length).toBe(1);\n    expect(row2.nodes.length).toBe(1);\n    expect(row3.nodes.length).toBe(1);\n  });\n\n  const mergeCases = [{\n    desc: '删除合并单元格所在列',\n    deleteColIndex: 1,\n    originMergeCellData: {\n      rowSpan: 2,\n      colSpan: 2,\n    },\n    expectedMergeCellData: {\n      rowSpan: 2,\n      colSpan: 1,\n    },\n  }, {\n    desc: '删除 hidden 单元格所在列',\n    deleteColIndex: 2,\n    originMergeCellData: {\n      rowSpan: 2,\n      colSpan: 2,\n    },\n    expectedMergeCellData: {\n      rowSpan: 2,\n      colSpan: 1,\n    },\n  }];\n\n  mergeCases.forEach(({\n    desc,\n    deleteColIndex,\n    expectedMergeCellData,\n  }) => {\n    it(desc, async () => {\n      const { controller } = await createEditor({\n        table: createMergeTable(),\n        tableSelection: {\n          startRowIndex: 0,\n          endRowIndex: 3,\n          startColIndex: deleteColIndex,\n          endColIndex: deleteColIndex,\n        },\n        shouldAdjust: false,\n      });\n      const table = getTableFromController(controller);\n      controller.command('deleteCols', table);\n      const newTable = getTableFromController(controller);\n      expect(newTable.data.colsWidth.length).toBe(3);\n      const mergeTd = controller.value.document.findDescendant(el => {\n        return el.type === 'table-cell' &&\n          (\n            el.data.colSpan > 1 ||\n            el.data.rowSpan > 1\n          );\n      }) as TableCell;\n      expect(mergeTd.data.rowSpan).toBe(expectedMergeCellData.rowSpan);\n      expect(mergeTd.data.colSpan).toBe(expectedMergeCellData.colSpan);\n    });\n  });\n\n  it('autofit table delete col', () => {\n    const table = createTableInstance({\n      table: [['A', 'B', 'C']],\n      colsWidth: [20, 40, 40],\n      isAutofit: true,\n    });\n    const controller = createControllerInstance([table]);\n    const { selection } = controller.value;\n    const cell = controller.value.document.findDescendant(TableCell.isTableCell)\n    controller.command(Commands.select, selection.moveToStartOfNode(cell, controller));\n    controller.command('deleteCols', table);\n    const newTable = getTableFromController(controller);\n    expect(Table.isAutofitWidth(newTable)).toBe(true);\n    expect(newTable.data.colsWidth).toEqual([50, 50]);\n  });\n});\n"],"file":"deleteCols.test.js"}