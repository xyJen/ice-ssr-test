"use strict";

require("@testing-library/jest-dom/extend-expect");

var _react = require("@testing-library/react");

var _everCangjie = require("@ali/4ever-cangjie");

var _everMo = require("@ali/4ever-mo");

var _helpers = require("./helpers");

/* eslint-disable import/no-extraneous-dependencies */
describe('table selection', () => {
  it('全选包含有空cell的表格，加粗后所有cell均为加粗状态', async () => {
    const {
      controller
    } = await (0, _helpers.createEditorWithTable)([['A', ''], ['', '']], {
      startColIndex: 0,
      startRowIndex: 0,
      endColIndex: 1,
      endRowIndex: 1
    });
    controller.command('toggleRangesMark', 'bold');
    await (0, _react.wait)();
    const firstText = controller.value.document.getNodeByPath([0, 1, 1]).getFirstText();
    expect(firstText.marks.some(a => a.type === 'bold')).toEqual(true);
  });
  it('选区拖动到一半，startCell 被删除，则已生成选区被清空', async () => {
    const {
      controller
    } = await (0, _helpers.createEditorWithTable)([['A', 'B'], ['C', 'D']], {
      startColIndex: 0,
      startRowIndex: 0,
      endColIndex: 1,
      endRowIndex: 0
    });
    const firstRow = controller.value.document.getNodeByPath([0, 0]);
    controller.command(_everCangjie.Commands.removeNodeByKey, firstRow?.key);
    await (0, _react.wait)();
    const tbSelection = controller.query('tableSelection');
    expect(tbSelection).toEqual(null);
  });
  it('拖选合并单元格时，需要辐射选区以选中整个合并单元格', async () => {
    const {
      controller
    } = await (0, _helpers.createEditorWithTable)((0, _helpers.createMergeTable)());
    const table = controller.value.document.findDescendant(_everMo.Table.isTable);
    const tableSelection = {
      startRowIndex: 0,
      startColIndex: 0,
      endColIndex: 1,
      endRowIndex: 1,
      key: table.key
    };
    controller.command('selectTableSelection', table, tableSelection);
    await (0, _react.wait)();
    const resultTableSelection = controller.query('tableSelection'); // 应该选中合并单元格覆盖的所有行列

    expect(resultTableSelection).toEqual(expect.objectContaining({
      startRowIndex: 0,
      startColIndex: 0,
      endRowIndex: 2,
      endColIndex: 2
    }));
  });
});
//# sourceMappingURL=selection.test.js.map