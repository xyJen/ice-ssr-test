{"version":3,"sources":["../../../../../src/__tests__/table/queries/tableSelection.test.tsx"],"names":["plugins","array","describe","it","value","colsWidth","controller","Controller","create","tblSelection","query","expect","toEqual","objectContaining","startRowIndex","startColIndex","endRowIndex","endColIndex","colSpan","rowSpan","hidden","isByTable","expectTblSelection","forEach","desc","selection","newValue","setSelection","setValue"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Controller, Value } from '@ali/4ever-cangjie';\nimport { jsx } from '@ali/4ever-dev-test';\nimport createBiPlugins from '../../../createBiPlugins';\nimport { setSelectionByTable } from '@ali/4ever-plugin-table';\n\nconst plugins = createBiPlugins().array;\n\ndescribe('table/queries/tableSelection', () => {\n  it('普通表格选区计算正确', async () => {\n    const value = (\n      <value>\n        <document>\n          <block type=\"table\" key=\"table\" data={{\n            colsWidth: [100, 100]\n          }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                A<anchor />\n              </block>\n              <block type=\"table-cell\">A</block>\n            </block>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                A<focus />\n              </block>\n              <block type=\"table-cell\">A</block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    const tblSelection = controller.query('tableSelection');\n    expect(tblSelection)\n      .toEqual(expect.objectContaining({\n        startRowIndex: 0,\n        startColIndex: 0,\n        endRowIndex: 1,\n        endColIndex: 0,\n      }));\n  });\n\n  it('合并单元格选区计算正确', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"table\" key=\"table\" data={{\n            colsWidth: [100, 100]\n          }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\" data={{colSpan: 2, rowSpan: 1}}>\n                A<anchor />\n              </block>\n              <block type=\"table-cell\" data={{hidden: true}}>A</block>\n            </block>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                A<focus />\n              </block>\n              <block type=\"table-cell\">A</block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controller = Controller.create({\n      value,\n      plugins,\n    });\n\n    const tblSelection = controller.query('tableSelection');\n    expect(tblSelection)\n      .toEqual(expect.objectContaining({\n        startRowIndex: 0,\n        startColIndex: 0,\n        endRowIndex: 1,\n        endColIndex: 1,\n      }));\n  });\n\n  [\n    {\n      isByTable: true,\n      expectTblSelection: {\n        startRowIndex: 0,\n        startColIndex: 0,\n        endRowIndex: 1,\n        endColIndex: 0,\n      },\n    },\n    {\n      isByTable: false,\n      expectTblSelection: {\n        startRowIndex: 0,\n        startColIndex: 0,\n        endRowIndex: 1,\n        endColIndex: 1,\n      },\n    },\n  ].forEach(({ isByTable, expectTblSelection }) => {\n    const desc = isByTable ? '' : '不';\n    it(`${desc}通过表格工具栏设置：合并单元格选区计算正确`, async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"table\" key=\"table\" data={{\n              colsWidth: [100, 100]\n            }}>\n              <block type=\"table-row\">\n                <block type=\"table-cell\" data={{colSpan: 2, rowSpan: 1}}>\n                  A<anchor />\n                </block>\n                <block type=\"table-cell\" data={{hidden: true}}>A</block>\n              </block>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  A<focus />\n                </block>\n                <block type=\"table-cell\">A</block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      if (isByTable) {\n        const { selection } = controller.value;\n        const newValue = controller.value.setSelection(\n          setSelectionByTable(selection, true),\n        );\n        controller.setValue(newValue);\n      }\n\n      const tblSelection = controller.query('tableSelection');\n      expect(tblSelection)\n        .toEqual(expect.objectContaining(expectTblSelection));\n    });\n  });\n\n  [\n    {\n      isByTable: true,\n      expectTblSelection: {\n        startRowIndex: 0,\n        startColIndex: 0,\n        endRowIndex: 0,\n        endColIndex: 0,\n      },\n    },\n    {\n      isByTable: false,\n      expectTblSelection: null,\n    },\n  ].forEach(({ isByTable, expectTblSelection }) => {\n    const desc = isByTable ? '' : '不';\n    it(`选区 collapse 时，${desc}通过表格工具栏设置`, async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"table\" key=\"table\" data={{\n              colsWidth: [100, 100]\n            }}>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  A<cursor />\n                </block>\n                <block type=\"table-cell\">A</block>\n              </block>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  A\n                </block>\n                <block type=\"table-cell\">A</block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controller = Controller.create({\n        value,\n        plugins,\n      });\n\n      if (isByTable) {\n        const { selection } = controller.value;\n        const newValue = controller.value.setSelection(\n          setSelectionByTable(selection, true),\n        );\n        controller.setValue(newValue);\n      }\n\n      const tblSelection = controller.query('tableSelection');\n      expect(tblSelection)\n        .toEqual(expect.objectContaining(expectTblSelection));\n    });\n  });\n});\n"],"file":"tableSelection.test.js"}