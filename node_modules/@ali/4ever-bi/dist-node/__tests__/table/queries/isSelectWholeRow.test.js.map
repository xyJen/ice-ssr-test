{"version":3,"sources":["../../../../../src/__tests__/table/queries/isSelectWholeRow.test.tsx"],"names":["describe","it","controller","table","tableSelection","startColIndex","startRowIndex","endRowIndex","endColIndex","value","document","findDescendant","Table","isTable","expect","query","node","toEqual","selection","newSelection","moveAnchorToStartOfNode","nodes","moveFocusToStartOfNode","command","Commands","select","expectTblSelection","key","toBe"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Commands } from '@ali/4ever-cangjie';\nimport { Table } from '@ali/4ever-mo';\nimport { ITableSelection } from '@ali/4ever-plugin-table';\nimport { createEditor, getTableFromController } from '../helpers';\n\ndescribe('table/queries/isSelectWholeRow', () => {\n  it('(单行)完全选中所有列单元格，返回 true', async () => {\n    const { controller } = await createEditor({\n      table: [\n        ['A', 'B', 'C', 'D'],\n        ['E', 'F', 'G', 'H'],\n        ['I', 'J', 'K', 'L'],\n      ],\n      tableSelection: {\n        startColIndex: 0,\n        startRowIndex: 0,\n        endRowIndex: 0,\n        endColIndex: 3,\n      },\n    });\n    const table = controller.value.document.findDescendant(Table.isTable);\n    expect(controller.query('isSelectWholeRow', { node: table as Table })).toEqual(true);\n  });\n  it('(多行)完全选中所有列单元格，返回 true', async () => {\n    const { controller } = await createEditor({\n      table: [\n        ['A', 'B', 'C', 'D'],\n        ['E', 'F', 'G', 'H'],\n        ['I', 'J', 'K', 'L'],\n      ],\n      tableSelection: {\n        startColIndex: 0,\n        startRowIndex: 0,\n        endRowIndex: 1,\n        endColIndex: 3,\n      },\n    });\n    const table = controller.value.document.findDescendant(Table.isTable);\n    expect(controller.query('isSelectWholeRow', { node: table as Table })).toEqual(true);\n  });\n  it('(全选)完全选中所有列单元格，返回 false', async () => {\n    const { controller } = await createEditor({\n      table: [\n        ['A', 'B', 'C', 'D'],\n        ['E', 'F', 'G', 'H'],\n        ['I', 'J', 'K', 'L'],\n      ],\n      tableSelection: {\n        startColIndex: 0,\n        startRowIndex: 0,\n        endRowIndex: 2,\n        endColIndex: 3,\n      },\n    });\n    const table = controller.value.document.findDescendant(Table.isTable);\n    expect(controller.query('isSelectWholeRow', { node: table as Table })).toEqual(false);\n  });\n  it('未完全选中所有列单元格，返回 false', async () => {\n    const { controller } = await createEditor({\n      table: [\n        ['A', 'B', 'C', 'D'],\n        ['E', 'F', 'G', 'H'],\n        ['I', 'J', 'K', 'L'],\n      ],\n      tableSelection: {\n        startColIndex: 0,\n        startRowIndex: 0,\n        endRowIndex: 0,\n        endColIndex: 1,\n      },\n    });\n    const table = controller.value.document.findDescendant(Table.isTable);\n    expect(controller.query('isSelectWholeRow', { node: table as Table })).toEqual(false);\n  });\n\n  describe('不规整表格', () => {\n    it('某行缺少单元格', async () => {\n      const { controller } = await createEditor({\n        table: [\n          ['A', 'B'],\n          ['E'],\n          ['I', 'J'],\n        ],\n      });\n\n      const table = getTableFromController(controller);\n      const { selection } = controller.value;\n      const newSelection = selection\n        .moveAnchorToStartOfNode(table.nodes[1].nodes[0], controller)\n        .moveFocusToStartOfNode(table.nodes[2].nodes[1], controller);\n      controller.command(Commands.select, newSelection);\n      const tableSelection = controller.query('tableSelection');\n      const expectTblSelection: ITableSelection = {\n        startRowIndex: 1,\n        endRowIndex: 2,\n        startColIndex: 0,\n        endColIndex: 1,\n        key: table.key,\n      };\n      expect(tableSelection).toEqual(expectTblSelection);\n\n      expect(controller.query('isSelectWholeRow', { node: table })).toBe(true);\n    });\n  });\n});\n"],"file":"isSelectWholeRow.test.js"}