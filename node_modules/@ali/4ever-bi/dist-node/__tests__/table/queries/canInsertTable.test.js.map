{"version":3,"sources":["../../../../../src/__tests__/table/queries/canInsertTable.test.tsx"],"names":["describe","it","value","Value","create","document","Document","nodes","Block","type","Text","controllerRef","jest","fn","controller","mock","calls","expect","query","toEqual","table","tableSelection","startColIndex","startRowIndex","endRowIndex","endColIndex"],"mappings":";;;;AACA;;AACA;;AACA;;AACA;;AACA;;AALA;AAOAA,QAAQ,CAAC,8BAAD,EAAiC,MAAM;AAC7CC,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAY;AACjC,UAAMC,KAAK,GAAGC,mBAAMC,MAAN,CAAa;AACzBC,MAAAA,QAAQ,EAAEC,sBAASF,MAAT,CAAgB;AACxBG,QAAAA,KAAK,EAAE,CAACC,mBAAMJ,MAAN,CAAa;AACnBK,UAAAA,IAAI,EAAE,WADa;AAEnBF,UAAAA,KAAK,EAAE,CAACG,kBAAKN,MAAL,CAAY,EAAZ,CAAD;AAFY,SAAb,CAAD;AADiB,OAAhB;AADe,KAAb,CAAd;;AAQA,UAAMO,aAAa,GAAGC,IAAI,CAACC,EAAL,EAAtB;AACA,UAAM,+BAAa,sBAAC,eAAD;AAAQ,MAAA,YAAY,EAAEX,KAAtB;AAA6B,MAAA,aAAa,EAAES;AAA5C,MAAb,CAAN;AACA,UAAMG,UAAU,GAAG,kBAAKH,aAAa,CAACI,IAAd,CAAmBC,KAAxB,EAA+B,CAA/B,CAAnB;AACAC,IAAAA,MAAM,CAACH,UAAU,CAACI,KAAX,CAAiB,gBAAjB,CAAD,CAAN,CAA2CC,OAA3C,CAAmD,IAAnD;AACD,GAbC,CAAF;AAeAlB,EAAAA,EAAE,CAAC,kBAAD,EAAqB,YAAY;AACjC,UAAM;AAAEa,MAAAA;AAAF,QAAiB,MAAM,2BAAa;AACxCM,MAAAA,KAAK,EAAE,CACL,CAAC,GAAD,EAAM,GAAN,CADK,EAEL,CAAC,GAAD,EAAM,GAAN,CAFK,CADiC;AAKxCC,MAAAA,cAAc,EAAE;AACdC,QAAAA,aAAa,EAAE,CADD;AAEdC,QAAAA,aAAa,EAAE,CAFD;AAGdC,QAAAA,WAAW,EAAE,CAHC;AAIdC,QAAAA,WAAW,EAAE;AAJC;AALwB,KAAb,CAA7B;AAYAR,IAAAA,MAAM,CAACH,UAAU,CAACI,KAAX,CAAiB,gBAAjB,CAAD,CAAN,CAA2CC,OAA3C,CAAmD,KAAnD;AACD,GAdC,CAAF;AAeD,CA/BO,CAAR","sourcesContent":["/** @jsx jsx */\nimport { last } from 'lodash-es';\nimport { Value, Document, Controller, Block, Text } from '@ali/4ever-cangjie';\nimport { renderEditor, jsx } from '@ali/4ever-dev-test';\nimport { createEditor } from '../helpers';\nimport Editor from '../../editor';\n\ndescribe('table/queries/canInsertTable', () => {\n  it('选区不在表格内时，返回 true', async () => {\n    const value = Value.create({\n      document: Document.create({\n        nodes: [Block.create({\n          type: 'paragraph',\n          nodes: [Text.create('')],\n        })],\n      }),\n    });\n    const controllerRef = jest.fn();\n    await renderEditor(<Editor defaultValue={value} controllerRef={controllerRef} />);\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n    expect(controller.query('canInsertTable')).toEqual(true);\n  });\n\n  it('选区在表格内时，返回 false', async () => {\n    const { controller } = await createEditor({\n      table: [\n        ['A', 'B'],\n        ['C', 'D'],\n      ],\n      tableSelection: {\n        startColIndex: 0,\n        startRowIndex: 0,\n        endRowIndex: 0,\n        endColIndex: 1,\n      },\n    });\n    expect(controller.query('canInsertTable')).toEqual(false);\n  });\n});\n"],"file":"canInsertTable.test.js"}