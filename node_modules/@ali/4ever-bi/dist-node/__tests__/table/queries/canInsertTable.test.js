"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _lodash = require("lodash");

var _everCangjie = require("@ali/4ever-cangjie");

var _everDevTest = require("@ali/4ever-dev-test");

var _helpers = require("../helpers");

var _editor = _interopRequireDefault(require("../../editor"));

/** @jsx jsx */
describe('table/queries/canInsertTable', () => {
  it('选区不在表格内时，返回 true', async () => {
    const value = _everCangjie.Value.create({
      document: _everCangjie.Document.create({
        nodes: [_everCangjie.Block.create({
          type: 'paragraph',
          nodes: [_everCangjie.Text.create('')]
        })]
      })
    });

    const controllerRef = jest.fn();
    await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      controllerRef: controllerRef
    }));
    const controller = (0, _lodash.last)(controllerRef.mock.calls)[0];
    expect(controller.query('canInsertTable')).toEqual(true);
  });
  it('选区在表格内时，返回 false', async () => {
    const {
      controller
    } = await (0, _helpers.createEditor)({
      table: [['A', 'B'], ['C', 'D']],
      tableSelection: {
        startColIndex: 0,
        startRowIndex: 0,
        endRowIndex: 0,
        endColIndex: 1
      }
    });
    expect(controller.query('canInsertTable')).toEqual(false);
  });
});
//# sourceMappingURL=canInsertTable.test.js.map