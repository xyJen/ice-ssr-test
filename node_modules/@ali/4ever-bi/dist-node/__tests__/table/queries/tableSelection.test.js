"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _everCangjie = require("@ali/4ever-cangjie");

var _everDevTest = require("@ali/4ever-dev-test");

var _createBiPlugins = _interopRequireDefault(require("../../../createBiPlugins"));

var _everPluginTable = require("@ali/4ever-plugin-table");

/** @jsx jsx */
const plugins = (0, _createBiPlugins.default)().array;

var _ref = (0, _everDevTest.jsx)("block", {
  type: "table-row"
}, (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A", (0, _everDevTest.jsx)("anchor", null)), (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A"));

var _ref2 = (0, _everDevTest.jsx)("block", {
  type: "table-row"
}, (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A", (0, _everDevTest.jsx)("focus", null)), (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A"));

var _ref3 = (0, _everDevTest.jsx)("anchor", null);

var _ref4 = (0, _everDevTest.jsx)("block", {
  type: "table-row"
}, (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A", (0, _everDevTest.jsx)("focus", null)), (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A"));

var _ref5 = (0, _everDevTest.jsx)("anchor", null);

var _ref6 = (0, _everDevTest.jsx)("block", {
  type: "table-row"
}, (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A", (0, _everDevTest.jsx)("focus", null)), (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A"));

var _ref7 = (0, _everDevTest.jsx)("block", {
  type: "table-row"
}, (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A", (0, _everDevTest.jsx)("cursor", null)), (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A"));

var _ref8 = (0, _everDevTest.jsx)("block", {
  type: "table-row"
}, (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A"), (0, _everDevTest.jsx)("block", {
  type: "table-cell"
}, "A"));

describe('table/queries/tableSelection', () => {
  it('普通表格选区计算正确', async () => {
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "table",
      key: "table",
      data: {
        colsWidth: [100, 100]
      }
    }, _ref, _ref2)));

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    const tblSelection = controller.query('tableSelection');
    expect(tblSelection).toEqual(expect.objectContaining({
      startRowIndex: 0,
      startColIndex: 0,
      endRowIndex: 1,
      endColIndex: 0
    }));
  });
  it('合并单元格选区计算正确', async () => {
    const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
      type: "table",
      key: "table",
      data: {
        colsWidth: [100, 100]
      }
    }, (0, _everDevTest.jsx)("block", {
      type: "table-row"
    }, (0, _everDevTest.jsx)("block", {
      type: "table-cell",
      data: {
        colSpan: 2,
        rowSpan: 1
      }
    }, "A", _ref3), (0, _everDevTest.jsx)("block", {
      type: "table-cell",
      data: {
        hidden: true
      }
    }, "A")), _ref4)));

    const controller = _everCangjie.Controller.create({
      value,
      plugins
    });

    const tblSelection = controller.query('tableSelection');
    expect(tblSelection).toEqual(expect.objectContaining({
      startRowIndex: 0,
      startColIndex: 0,
      endRowIndex: 1,
      endColIndex: 1
    }));
  });
  [{
    isByTable: true,
    expectTblSelection: {
      startRowIndex: 0,
      startColIndex: 0,
      endRowIndex: 1,
      endColIndex: 0
    }
  }, {
    isByTable: false,
    expectTblSelection: {
      startRowIndex: 0,
      startColIndex: 0,
      endRowIndex: 1,
      endColIndex: 1
    }
  }].forEach(({
    isByTable,
    expectTblSelection
  }) => {
    const desc = isByTable ? '' : '不';
    it(`${desc}通过表格工具栏设置：合并单元格选区计算正确`, async () => {
      const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
        type: "table",
        key: "table",
        data: {
          colsWidth: [100, 100]
        }
      }, (0, _everDevTest.jsx)("block", {
        type: "table-row"
      }, (0, _everDevTest.jsx)("block", {
        type: "table-cell",
        data: {
          colSpan: 2,
          rowSpan: 1
        }
      }, "A", _ref5), (0, _everDevTest.jsx)("block", {
        type: "table-cell",
        data: {
          hidden: true
        }
      }, "A")), _ref6)));

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      if (isByTable) {
        const {
          selection
        } = controller.value;
        const newValue = controller.value.setSelection((0, _everPluginTable.setSelectionByTable)(selection, true));
        controller.setValue(newValue);
      }

      const tblSelection = controller.query('tableSelection');
      expect(tblSelection).toEqual(expect.objectContaining(expectTblSelection));
    });
  });
  [{
    isByTable: true,
    expectTblSelection: {
      startRowIndex: 0,
      startColIndex: 0,
      endRowIndex: 0,
      endColIndex: 0
    }
  }, {
    isByTable: false,
    expectTblSelection: null
  }].forEach(({
    isByTable,
    expectTblSelection
  }) => {
    const desc = isByTable ? '' : '不';
    it(`选区 collapse 时，${desc}通过表格工具栏设置`, async () => {
      const value = (0, _everDevTest.jsx)("value", null, (0, _everDevTest.jsx)("document", null, (0, _everDevTest.jsx)("block", {
        type: "table",
        key: "table",
        data: {
          colsWidth: [100, 100]
        }
      }, _ref7, _ref8)));

      const controller = _everCangjie.Controller.create({
        value,
        plugins
      });

      if (isByTable) {
        const {
          selection
        } = controller.value;
        const newValue = controller.value.setSelection((0, _everPluginTable.setSelectionByTable)(selection, true));
        controller.setValue(newValue);
      }

      const tblSelection = controller.query('tableSelection');
      expect(tblSelection).toEqual(expect.objectContaining(expectTblSelection));
    });
  });
});
//# sourceMappingURL=tableSelection.test.js.map