"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _lodash = require("lodash");

var _everCangjie = require("@ali/4ever-cangjie");

var _everMo = require("@ali/4ever-mo");

var _everDevTest = require("@ali/4ever-dev-test");

var _helpers = require("../helpers");

var _editor = _interopRequireDefault(require("../../editor"));

/** @jsx jsx */
describe('table/queries/isHideDragButton', () => {
  it('表格外节点，返回 false', async () => {
    const value = _everCangjie.Value.create({
      document: _everCangjie.Document.create({
        nodes: [_everCangjie.Block.create({
          type: 'paragraph',
          nodes: [_everCangjie.Text.create('')]
        })]
      })
    });

    const controllerRef = jest.fn();
    await (0, _everDevTest.renderEditor)((0, _everDevTest.jsx)(_editor.default, {
      defaultValue: value,
      controllerRef: controllerRef
    }));
    const controller = (0, _lodash.last)(controllerRef.mock.calls)[0];
    const p = controller.value.document.findDescendant(_everMo.Paragraph.isParagraph);
    expect(!!controller.query('isHideDragButton', {
      node: p
    })).toEqual(false);
  });
  it('节点在有选区表格内，节点不在选区内，返回 false', async () => {
    const {
      controller
    } = await (0, _helpers.createEditor)({
      table: [['A', 'B'], ['C', 'D']],
      tableSelection: {
        startColIndex: 0,
        startRowIndex: 0,
        endRowIndex: 0,
        endColIndex: 1
      }
    });
    const table = controller.value.document.findDescendant(_everMo.Table.isTable);
    const paragraph = table.nodes[1].nodes[0].nodes[0];
    expect(!!controller.query('isHideDragButton', {
      node: paragraph
    })).toEqual(false);
  });
  it('选中整行，节点在选中行第一个单元格内，返回 true', async () => {
    const {
      controller
    } = await (0, _helpers.createEditor)({
      table: [['A', 'B'], ['C', 'D']],
      tableSelection: {
        startColIndex: 0,
        startRowIndex: 0,
        endRowIndex: 0,
        endColIndex: 1
      }
    });
    const table = controller.value.document.findDescendant(_everMo.Table.isTable);
    const firstParagraph = table.findDescendant(_everMo.Paragraph.isParagraph);
    expect(controller.query('isHideDragButton', {
      node: firstParagraph
    })).toEqual(true);
  });
});
//# sourceMappingURL=isHideDragButton.test.js.map