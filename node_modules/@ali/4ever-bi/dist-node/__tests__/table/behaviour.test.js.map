{"version":3,"sources":["../../../../src/__tests__/table/behaviour.test.tsx"],"names":["setTableBorder","setTableCellFill","biActions","useContainerWidthResize","TablePlugin","components","TYPE_A","TYPE_B","TYPE_A_WIDTH","TYPE_B_WIDTH","renderTimes","createTestPlugin","type","width","renderNode","props","controller","next","node","attributes","resize","models","klass","queries","getMinTableColWidth","_","undefined","testPluginA","testPluginB","createBiPlugins","tablePlugin","linkPlugin","plugins","link","enableCard","locale","describe","test","value","colsWidth","controllerRef","jest","fn","mock","calls","data","tableMinColsWidth","expect","toEqual","table","view","getNode","command","tableResult","lastRenderTimes","toBeGreaterThan","href","cardInfo","displayType","theme","margin","tablePadding","it","Controller","create","array","selection","lineType","size","lineMap","DEFAULT_TABLE_BORDER_STYLE","run","history","history1","History","undos","length","history2","borderProps","color","sz","Dashed","val","bdr","right","left","fill"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/** @jsx jsx */\nimport { wait } from '@testing-library/react';\nimport { Controller, Plugin, Value, History } from '@ali/4ever-cangjie';\nimport { theme, TablePlugin } from '@ali/4ever-bamboo';\nimport { jsx, renderEditor, waitForTime } from '@ali/4ever-dev-test';\nimport { Table } from '@ali/4ever-mo';\nimport { last } from 'lodash-es';\nimport createCustomizedBiPlugins from '../../createCustomizedBiPlugins';\nimport Editor from '../editor';\nimport { biFactory as tablePlugin } from '@ali/4ever-plugin-table';\nimport linkPlugin from '../../plugins/link';\nimport {\n  biActions,\n  getTable,\n  getTableSelection,\n  DEFAULT_TABLE_BORDER_STYLE,\n  lineMap,\n} from '@ali/4ever-plugin-table';\n\nconst { setTableBorder, setTableCellFill } = biActions;\nconst useContainerWidthResize = TablePlugin.components.useContainerWidthResize\n\nconst TYPE_A = 'type-a';\nconst TYPE_B = 'type-b';\n\nconst TYPE_A_WIDTH = 160;\nconst TYPE_B_WIDTH = 200;\n\nlet renderTimes = 0;\n\nconst createTestPlugin = (\n  type: string,\n  width: number,\n): () => Plugin => {\n  return () => {\n    return {\n      renderNode: (props, controller, next) => {\n        const { node, attributes } = props;\n        if (node.type === type) {\n          renderTimes += 1;\n          const resize = useContainerWidthResize();\n          return <div {...attributes}>test</div>;\n        }\n        return next();\n      },\n      models: {\n        klass: 'block',\n        type,\n      },\n      queries: {\n        getMinTableColWidth: (_, { node }) => {\n          if (node.type === type) {\n            return width;\n          }\n          return undefined;\n        },\n      },\n    };\n  };\n};\n\nconst testPluginA = createTestPlugin(TYPE_A, TYPE_A_WIDTH);\nconst testPluginB = createTestPlugin(TYPE_B, TYPE_B_WIDTH);\n\nconst createBiPlugins = createCustomizedBiPlugins({\n  testPluginA,\n  testPluginB,\n  tablePlugin,\n  linkPlugin,\n});\n\nconst plugins = createBiPlugins({\n  link: {\n    enableCard: true,\n    locale: {},\n  },\n});\n\ndescribe('Bi/table/behaviour', () => {\n  describe('\b\b限制表格列宽', () => {\n    test('包含一类特殊元素时，当前列宽调整为限制宽度', async () => {\n      const value = ((\n        <value>\n          <document>\n            <block type=\"table\" key=\"table\" data={{\n              colsWidth: [100]\n            }}>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">\n                  <block key=\"test-a\" type={TYPE_A} />\n                </block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown) as Value;\n\n      const controllerRef = jest.fn();\n      await renderEditor(\n        <Editor defaultValue={value} plugins={plugins} controllerRef={controllerRef} />,\n      );\n      const controller = last(controllerRef.mock.calls)[0] as Controller;\n\n      const { data } = controller.value;\n      const { tableMinColsWidth } = data;\n      expect(tableMinColsWidth).toEqual({\n        'test-a': TYPE_A_WIDTH,\n      });\n      const table = controller.view.getNode('table');\n      expect(table.data.colsWidth).toEqual([TYPE_A_WIDTH]);\n    });\n  });\n\n  test('包含多类特殊元素时，当前列宽自动调整为最大限制宽度', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"table\"\n            key=\"table\"\n            data={{\n              colsWidth: [100]\n            }}\n          >\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block key=\"test-a\" type={TYPE_A} />\n                <block key=\"test-b\" type={TYPE_B} />\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controllerRef = jest.fn();\n    await renderEditor(\n      <Editor defaultValue={value} plugins={plugins} controllerRef={controllerRef} />,\n    );\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n\n    const { data } = controller.value;\n    const { tableMinColsWidth } = data;\n    expect(tableMinColsWidth).toEqual({\n      'test-b': TYPE_B_WIDTH,\n    });\n    const table = controller.view.getNode('table');\n    expect(table.data.colsWidth).toEqual([TYPE_B_WIDTH]);\n  });\n\n  test('多列包含特殊元素时，列宽调整为限制宽度', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"table\" key=\"table\" data={{\n            colsWidth: [100, 100]\n          }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block key=\"test-a\" type={TYPE_A} />\n              </block>\n              <block type=\"table-cell\">\n                <block key=\"test-b\" type={TYPE_B} />\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controllerRef = jest.fn();\n    await renderEditor(\n      <Editor defaultValue={value} plugins={plugins} controllerRef={controllerRef} />,\n    );\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n\n    const { data } = controller.value;\n    const { tableMinColsWidth } = data;\n    expect(tableMinColsWidth).toEqual({\n      'test-a': TYPE_A_WIDTH,\n      'test-b': TYPE_B_WIDTH,\n    });\n    const table = controller.view.getNode('table');\n    expect(table.data.colsWidth).toEqual([TYPE_A_WIDTH, TYPE_B_WIDTH]);\n  });\n\n  test('调整表格宽度时，含有特殊元素列宽度不能超过最小宽度', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"table\"\n            key=\"table\"\n            data={{\n              colsWidth: [TYPE_A_WIDTH, 100]\n            }}\n          >\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block key=\"test-a\" type={TYPE_A} />\n              </block>\n              <block type=\"table-cell\">\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controllerRef = jest.fn();\n    await renderEditor(\n      <Editor defaultValue={value} plugins={plugins} controllerRef={controllerRef} />,\n    );\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n    const table = controller.view.getNode('table') as Table;\n    controller.command('resizeTableWidth', table, -20);\n    await waitForTime(1);\n    const tableResult = controller.view.getNode('table');\n    expect(tableResult.data.colsWidth).toEqual([TYPE_A_WIDTH, 80]);\n  });\n\n  test('单元格宽度变化时，单元格内使用 context 的节点 rerender', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"table\"\n            key=\"table\"\n            data={{\n              colsWidth: [TYPE_A_WIDTH, 100]\n            }}\n          >\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block key=\"test-a\" type={TYPE_A} />\n              </block>\n              <block type=\"table-cell\">\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controllerRef = jest.fn();\n    await renderEditor(\n      <Editor defaultValue={value} plugins={plugins} controllerRef={controllerRef} />,\n    );\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n    const table = controller.view.getNode('table') as Table;\n    const lastRenderTimes = renderTimes;\n    controller.command('resizeTableWidth', table, 20);\n    await wait();\n    expect(renderTimes).toBeGreaterThan(lastRenderTimes)\n  });\n\n  test('调整表格宽度，单元格宽度未变化时，单元格内使用 context 的节点不 rerender', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block\n            type=\"table\"\n            key=\"table\"\n            data={{\n              colsWidth: [TYPE_A_WIDTH, 100]\n            }}\n          >\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block key=\"test-a\" type={TYPE_A} />\n              </block>\n              <block type=\"table-cell\">\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controllerRef = jest.fn();\n    await renderEditor(\n      <Editor defaultValue={value} plugins={plugins} controllerRef={controllerRef} />,\n    );\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n    const table = controller.view.getNode('table') as Table;\n    const lastRenderTimes = renderTimes;\n    controller.command('resizeTableWidth', table, -20);\n    await wait();\n    expect(renderTimes).toBeGreaterThan(lastRenderTimes)\n  });\n\n  test('包含链接卡片时，当前列宽调整为限制宽度', async () => {\n    const value = ((\n      <value>\n        <document>\n          <block type=\"table\" key=\"table\" data={{\n            colsWidth: [100]\n          }}>\n            <block type=\"table-row\">\n              <block type=\"table-cell\">\n                <block type=\"paragraph\">\n                  <inline\n                    key=\"link\"\n                    type=\"link\"\n                    data={{ href: 'https://www.dingtalk.com', cardInfo: { displayType: 'card' } }}\n                  >\n                    试测试测试测\n                    </inline>\n                  <cursor />\n                </block>\n              </block>\n            </block>\n          </block>\n        </document>\n      </value>\n    ) as unknown) as Value;\n\n    const controllerRef = jest.fn();\n    await renderEditor(\n      <Editor defaultValue={value} plugins={plugins} controllerRef={controllerRef} />,\n    );\n    const controller = last(controllerRef.mock.calls)[0] as Controller;\n    const width = theme.link.width + 2 * (theme.link.margin + theme.link.tablePadding);\n    const { data } = controller.value;\n    const { tableMinColsWidth } = data;\n    expect(tableMinColsWidth).toEqual({\n      'link': width,\n    });\n    const table = controller.view.getNode('table');\n    expect(table.data.colsWidth).toEqual([width]);\n  });\n\n  describe('\b\b重复操作', () => {\n    it('默认情况下，设置默认颜色的无边框、设置无底色，不产生操作记录', async () => {\n      const value = (\n        <value>\n          <document>\n            <block type=\"table\" key=\"table-key\">\n              <block type=\"table-row\">\n                <block type=\"table-cell\">A</block>\n                <block type=\"table-cell\"><cursor />B</block>\n              </block>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">C</block>\n                <block type=\"table-cell\">D</block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins: plugins.array,\n      });\n      const table = getTable(value);\n      const selection = getTableSelection(controller);\n      const { lineType, size } = lineMap[DEFAULT_TABLE_BORDER_STYLE];\n      controller.run('onAction', setTableBorder(table, selection, 'none', '#000000', size, lineType));\n      await waitForTime(1);\n      const { history: history1 } = controller.value.data;\n      expect((history1 || History.create()).undos.length).toEqual(0);\n\n      controller.run('onAction', setTableCellFill(table, selection, ''));\n      await waitForTime(1);\n      const { history: history2 } = controller.value.data;\n      expect((history2 || History.create()).undos.length).toEqual(0);\n    });\n\n    it('设置相同样式的左侧边框，不产生操作记录', async () => {\n      const borderProps = {\n        color: '#FF0000',\n        sz: lineMap.Dashed.size,\n        val: lineMap.Dashed.lineType,\n      };\n      const value = (\n        <value>\n          <document>\n            <block type=\"table\" key=\"table-key\">\n              <block type=\"table-row\">\n                <block type=\"table-cell\" data={{\n                  bdr: {\n                    right: borderProps,\n                  }\n                }}>A</block>\n                <block type=\"table-cell\" data={{\n                  bdr: {\n                    left: borderProps,\n                  }\n                }}><cursor />B</block>\n              </block>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">C</block>\n                <block type=\"table-cell\">D</block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins: plugins.array,\n      });\n      const table = getTable(value);\n      const selection = getTableSelection(controller);\n      controller.run('onAction', setTableBorder(table, selection, 'left', borderProps.color, borderProps.sz, borderProps.val));\n      await waitForTime(1);\n      const { history = History.create() } = controller.value.data;\n      expect(history.undos.length).toEqual(0);\n    });\n\n    it('设置相同的底色，不产生操作记录', async () => {\n      const color = '#FF0000';\n      const value = (\n        <value>\n          <document>\n            <block type=\"table\" key=\"table-key\">\n              <block type=\"table-row\">\n                <block type=\"table-cell\">A</block>\n                <block type=\"table-cell\" data={{ fill: color }}><cursor />B</block>\n              </block>\n              <block type=\"table-row\">\n                <block type=\"table-cell\">C</block>\n                <block type=\"table-cell\">D</block>\n              </block>\n            </block>\n          </document>\n        </value>\n      ) as unknown as Value;\n      const controller = Controller.create({\n        value,\n        plugins: plugins.array,\n      });\n      const table = getTable(value);\n      const selection = getTableSelection(controller);\n      controller.run('onAction', setTableCellFill(table, selection, color));\n      await waitForTime(1);\n      const { history = History.create() } = controller.value.data;\n      expect(history.undos.length).toEqual(0);\n    });\n  });\n});\n"],"file":"behaviour.test.js"}