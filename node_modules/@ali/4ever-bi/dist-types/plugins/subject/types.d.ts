/// <reference types="react" />
import { Block } from '@ali/4ever-cangjie';
import { Heading1Data } from '@ali/4ever-mo';
export interface IUserInfoProps {
    uid: string | number;
    nick: string;
    nickPinyin: string;
    avatarUrl?: string;
    type?: string;
}
export interface TopicItem {
    node: Block<Heading1Data>;
    title?: string;
}
export interface SubjectConfig {
    locale?: {
        finishButtonAction?: string;
        finishButtonDone?: string;
        topicTitlePlaceholderBefore?: string;
        topicTitlePlaceholderAfter?: string;
        topicContentPlaceholder?: string;
        topicContentPlaceholderMobile?: string;
        conclusionContentPlaceholder?: string;
        reviewTextPlaceholderMobile?: string;
        reviewTextPlaceholder?: string;
        clickFinishTopicTip?: string;
        cancelFinishTopicTip?: string;
        notifyFinishTip?: string;
        notifyFinish?: string;
        notifyFinishSuccess?: string;
        notifyFinishFailed?: string;
        mentionTip?: string;
        insertTopicTip?: string;
    };
    review?: {
        renderReviewPlaceholder?: (props: {
            node: Block<Heading1Data>;
            type?: string;
        }) => React.ReactElement;
        renderDingIcon?: (props: {
            node: Block<Heading1Data>;
        }) => React.ReactElement;
        renderMeetingClock?: (props: {
            node: Block<Heading1Data>;
            refreshToolWidth: () => void;
        }) => React.ReactElement;
    };
    renderInsertAttachmentComponent?: (props: {
        focusToLine: () => void;
    }) => React.ReactElement;
    /**
     * 文档创建者
     */
    creator?: IUserInfoProps;
    /**
     * 当前用户
     */
    user?: IUserInfoProps;
    /**
     * 通知议题完成
     */
    onNotifyFinishTopic?: (topic: TopicItem) => Promise<void>;
}
