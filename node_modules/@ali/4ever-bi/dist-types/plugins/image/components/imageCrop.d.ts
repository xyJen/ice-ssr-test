import * as React from 'react';
import { RelativeEventType } from '@ali/4ever-utils';
import { Controller } from '@ali/4ever-cangjie';
import { IImgRectData } from './types';
interface IProps {
    onExitCroppingMode: () => void;
    getZoomContainer(): HTMLElement | null;
    src: string;
    rotation: any;
    handleCrop(width: number, height: number, l: number, r: number, t: number, b: number): void;
    controller: Controller;
    scale: number;
    getImgRectData: () => IImgRectData;
    attributes?: any;
}
interface IState {
    width: number;
    height: number;
    l: number;
    r: number;
    t: number;
    b: number;
}
declare class ImageCrop extends React.Component<IProps, IState> {
    private readonly initialRectData;
    private originX;
    private originY;
    private currentX;
    private currentY;
    private readonly cropOuter;
    private readonly cropRealImage;
    private readonly cropFakeImage;
    private readonly cropFakeInner;
    private cropOuterTransform;
    private handleTarget;
    constructor(props: IProps);
    componentWillUnmount(): void;
    onCropStart: (relativeEvent: RelativeEventType, orient: string, parentOrient: string) => void;
    handleMouseDown: (e: any) => void;
    handleTouchStart: (e: React.TouchEvent) => void;
    updateCropFrame: (x: any, y: any, target: any) => void;
    finalizeCropFrame: (x: any, y: any, target: any) => void;
    updateCropImage: (x: any, y: any, target: any) => void;
    finalizeCropImage: (x: any, y: any, target: any) => void;
    updateTranslateFrame: (x: any, y: any) => void;
    finalizeTranslateFrame: (x: any, y: any) => void;
    onCropMove: (relativeEvent: RelativeEventType) => void;
    handleMouseMove: (e: any) => void;
    handleTouchMove: (e: TouchEvent) => void;
    resetOuterPos: () => void;
    onCropEnd: () => void;
    handleMouseUp: (e: any) => void;
    handleTouchEnd: (e: any) => void;
    handleExitCroppingMode: (event: any) => void;
    exit: (event: React.SyntheticEvent) => void;
    componentDidMount(): void;
    render(): JSX.Element;
}
export default ImageCrop;
