import * as React from 'react';
import { RelativeEventType } from '@ali/4ever-utils';
import { Controller } from '@ali/4ever-cangjie';
export interface ImageRotateProps {
    isRotating: boolean;
    onEnterRotationMode(): void;
    handleRotate(rotate: any): void;
    rotation: any;
    width: number;
    height: number;
    rotateControl: HTMLElement | null;
    rotateImageFrame: HTMLElement | null;
    getZoomContainer(): HTMLElement | null;
    controller: Controller;
    scale: number;
}
export interface ImageRotateState {
    translateX: number;
    translateY: number;
    currentRotation: number;
    rotation: number;
    width: number;
    height: number;
}
declare class ImageRotate extends React.Component<ImageRotateProps, ImageRotateState> {
    originX: number;
    originY: number;
    currentX: number;
    currentY: number;
    editorNum: React.RefObject<any>;
    constructor(props: any);
    static getDerivedStateFromProps(nextProps: any, prevStates: any): {
        rotation: any;
        currentRotation: any;
        translateX: number;
        translateY: number;
        rWidth: number;
        rHeight: number;
        width: any;
        height: any;
    } | null;
    componentWillUnmount(): void;
    onRotateStart: (relativeEvent: RelativeEventType) => void;
    onRotateMove: (relativeEvent: RelativeEventType, zoomContainer: HTMLElement) => void;
    onRotateEnd: () => void;
    handleTouchStart: (e: React.TouchEvent) => void;
    handleTouchMove: (e: TouchEvent) => void;
    handleTouchEnd: (e: TouchEvent) => void;
    renderRotateNumber: () => React.ReactPortal | null;
    render(): JSX.Element;
}
export default ImageRotate;
