import { Controller } from '@ali/4ever-cangjie';
/**
 * 判断是否为空白符或emoji
 * 处于性能考虑不做 unicode split，所有长度大于 1 的 grapheme 都被视为 emoji
 */
export declare function isBlankOrEmoji(char?: string): boolean;
/**
 * 检测是够为常见拉丁文
 * ascii: https://www.ascii-code.com/
 * https://newbedev.com/regex-with-extended-latin-alphabet-a-o-u-e-ss
 */
export declare function isLatin(char: string): boolean | "";
/**
 * 判断是否应该删除空格
 * 首先，应该满足在西文前后输入：
 * 中文 [输入:中文][光标]Char：删除前面空格
 * Char[光标][输入:中文] 中文：删除后面空格
 * 其次，必须满足以下 pattern：
 *     a          b          c
 * eastAsian   spacing   eastAsian
 * 另外用户如果是选中内容输入，我们不做空格清除，原因在于无法准确判断用户意图，例如：
 *     [-----选区-----]
 * 中文   Char 中文中文中文中文
 * 我们难以判断此时用户是想输入内容与后面内容联系还是与前面内容联系
 */
export declare function shouldDeleteSpacing(a: string, b: string, c: string, sibling: string, isExpanded: boolean): boolean;
/**
 * 判断两个字符之间是否应该 autoSpacing
 */
export declare function shouldAutoSpacing(a: string, b: string): boolean;
/**
 * 获取当前选区前后的文字
 * @param controller
 */
export declare function getPreText(controller: Controller): string[];
export declare function getNextText(controller: Controller): string[];
/**
 * 连续空格删除逻辑
 * 首先，必须是连续空格相邻
 *     a          b          c          d
 *             spacing    spacing
 * 其次，分别判断 deleted 和 a/b 的类型以决定是否删除对应空格
 * 最后，西文之间是需要空格的，但我们难以判断连续空格前后的语义，因此保留一个空格
 */
export declare function shouldDeleteSiblingSpacing(a: string, b: string, c: string, d: string, deleted?: string): boolean[];
