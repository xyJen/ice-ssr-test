import { ReactNode } from 'react';
import { CalendarCardPlugin } from '@ali/4ever-bamboo';
declare type VoidFun = () => void;
export declare enum CalendarType {
    SHANHUI = "shanhui"
}
export declare enum JumpToCalendarEventType {
    TITLE = "title",
    ICON = "icon",
    RECEIVER = "receiver",
    DOUBLECLICK = "doubleClick"
}
export declare type CalendarCardPluginConfig = {
    locale?: {
        refresh: string;
        refreshTips: string;
        receiverCount: string;
        viewCalendardetails: string;
        noresponse: string;
        received: string;
        refused: string;
        pending: string;
        organizer: string;
        subjectPlaceholder: string;
        timePlaceholder: string;
        participantPlaceholder: string;
    };
    isMobile?: boolean;
    getContainerWidthInPC?: () => number;
    jumpToCalendar?: (link?: string, eventType?: JumpToCalendarEventType) => void;
    openProfile?: (uid: number) => void;
    jumpToAttachment?: (url: string) => void;
    refresh?: (calendarId: string, eventType?: 'click') => Promise<RefreshReponse>;
    onRefreshSuccess?: VoidFun;
    handleCreateCalendar?: (key: string) => void;
    renderCreateCalendarBtn?: (props: {
        key: string;
        initCalendar: (data: CalendarCardPlugin.CalendarCardMetadataType) => Promise<boolean>;
    }) => ReactNode;
    /**
     * 初始化日程
     */
    onInitData?: () => void;
    mode?: CalendarType;
    lazyload?: any;
};
export interface RefreshReponse {
    status: 'success' | 'error';
    message?: string;
    data?: CalendarCardPlugin.CalendarCardMetadataType;
}
export interface CalendarInjectionType {
    injectionMetadata?: CalendarCardMetadataType;
    injectionHeight?: number;
    isFirstLoaded?: boolean;
}
export declare type CalendarCardDataType = CalendarCardPlugin.CalendarCardDataType;
export declare type CalendarCardMetadataType = CalendarCardPlugin.CalendarCardMetadataType;
export declare type CommonMouseEvent = CalendarCardPlugin.CommonMouseEvent;
export declare type IReceiver = CalendarCardPlugin.IReceiver;
export {};
