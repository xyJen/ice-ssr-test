import ClipboardManager from '@ali/clipboard-manager';
import { ClipboardPad, insertFragment, setDecorations, deleteAtRange, hidePastePanel, hideCustomPastePanel, insertMatchFragment, insertTextFragment, utils, createOnCangjieCopyOrCut } from '@ali/4ever-plugin-clipboard';
import type { BiPluginConfig } from '@ali/4ever-cangjie';
declare const createClipboardPlugin: {
    (configs: BiPluginConfig): import("@ali/4ever-cangjie").BiPlugin;
    actions: {
        CLIPBOARD_INSERT_FRAGMENT: symbol;
        CLIPBOARD_SET_DECORATIONS: symbol;
        CLIPBOARD_DEL_SELECTION: symbol;
        CLIPBOARD_HIDE_PASTEPANEL: symbol;
        CLIPBOARD_HIDE_CUSTOM_PASTEPANEL: symbol;
        CLIPBOARD_MATCH_MODE: symbol;
        CLIPBOARD_TEXT_MODE: symbol;
        insertFragment: typeof insertFragment;
        setDecorations: typeof setDecorations;
        deleteAtRange: typeof deleteAtRange;
        hidePastePanel: typeof hidePastePanel;
        hideCustomPastePanel: typeof hideCustomPastePanel;
        insertMatchFragment: typeof insertMatchFragment;
        insertTextFragment: typeof insertTextFragment;
    };
    ClipboardPad: typeof ClipboardPad;
    utils: {
        createOnCangjieCopyOrCut: typeof createOnCangjieCopyOrCut;
        writeClipboardDataToHtml: typeof utils.writeClipboardDataToHtml;
        copyNodes: typeof utils.copyNodes;
        filterFragment(fragment: import("@ali/4ever-cangjie").Document, rules: import("@ali/4ever-plugin-clipboard").ClipboardFilter): import("@ali/4ever-cangjie").Document;
        normalizeFragment(fragment: import("@ali/4ever-cangjie").Document): import("@ali/4ever-cangjie").Document;
        hasTextHtml(data: utils.ClipboardData): boolean;
        hasImage(data: utils.ClipboardData): boolean;
        getSizeofClipboardData(data: utils.ClipboardData, format?: string | undefined): number;
        isDingDocs(data: utils.ClipboardData): boolean;
        isDingSheet(data: utils.ClipboardData): boolean;
        isMicrosoftOffice(data: utils.ClipboardData): boolean;
        isMicrosoftWordOrExcel(data: utils.ClipboardData): boolean;
        isMicrosoftWord(data: utils.ClipboardData): boolean;
        isMicrosoftExcel(data: utils.ClipboardData): boolean;
        isMicrosoftPowerPoint(data: utils.ClipboardData): boolean;
        isGoogleDocs(data: utils.ClipboardData): boolean;
        isGoogleSheet(data: utils.ClipboardData): boolean;
        isShimoDocs(data: utils.ClipboardData): boolean;
        isYuqueDocs(data: utils.ClipboardData): boolean;
        isVsCode(data: utils.ClipboardData): boolean;
        dealWithFragmentOnCopy(props: utils.IDealWithFragmentOnCopyProps): import("@ali/4ever-cangjie").Document;
    };
    ClipboardManager: typeof ClipboardManager;
};
export default createClipboardPlugin;
