import { DocStylePlugin as docStyle } from '@ali/4ever-bamboo';
import alignment from './alignment/mobile';
import blockquote from './blockquote/mobile';
import clearStyle from './clearStyle/mobile';
import columns from './columns/mobile';
import callout from './callout/mobile';
import heading from './heading/mobile';
import hr from './hr/mobile';
import image from './image/mobile';
import indent from './indent/mobile';
import link from './link/mobile';
import onlineVideo from './onlineVideo/mobile';
import placeholder from './placeholder/mobile';
import sz from './sz/mobile';
import sticker from './sticker/mobile';
import underline from './underline/mobile';
import vertAlign from './vertAlign/mobile';
import autoSpacing from './autoSpacing';
declare const _default: {
    br: import("@ali/4ever-cangjie").MoFactory;
    code: import("@ali/4ever-cangjie").MobileBiFactory;
    autoSpacing: typeof autoSpacing;
    alignment: typeof alignment;
    bold: import("@ali/4ever-cangjie").MobileBiFactory;
    blockquote: typeof blockquote;
    color: {
        (configs: import("@ali/4ever-cangjie").BiPluginConfig): import("@ali/4ever-cangjie").BiPlugin;
        actions: {
            setColor: typeof import("@ali/4ever-plugin-color/src/bi/actions").setColor;
            setColorAtRange: typeof import("@ali/4ever-plugin-color/src/bi/actions").setColorAtRange;
        };
        commands: {
            setColorAtRange: typeof import("@ali/4ever-plugin-color/src/bi/commands/setColorAtRange").default;
            setColor: typeof import("@ali/4ever-plugin-color/src/bi/commands/setColorMark").default;
        };
        queries: {
            getColor: typeof import("@ali/4ever-plugin-color/src/bi/queries/getColor").default;
            getColorAtRange: typeof import("@ali/4ever-plugin-color/src/bi/queries/getColorAtRange").default;
        };
    };
    clearStyle: typeof clearStyle;
    heading: typeof heading;
    hr: typeof hr;
    highlight: {
        (configs: import("@ali/4ever-cangjie").BiPluginConfig): import("@ali/4ever-cangjie").BiPlugin;
        actions: typeof import("@ali/4ever-plugin-highlight/src/bi/actions");
        commands: typeof import("@ali/4ever-plugin-highlight/src/bi/commands");
        queries: typeof import("@ali/4ever-plugin-highlight/src/bi/queries");
    };
    image: typeof image;
    italic: import("@ali/4ever-cangjie").MobileBiFactory;
    link: typeof link;
    linkCard: (bizConfig: import("@ali/4ever-cangjie").BiPluginConfig) => import("@ali/4ever-factory").CardPluginType;
    list: {
        (configs: import("@ali/4ever-cangjie").MobileBiPluginConfig): import("@ali/4ever-cangjie").BiPlugin;
        actions: typeof import("@ali/4ever-plugin-list/src/bi/actions");
        queries: {
            isEmpty: typeof import("@ali/4ever-plugin-list/src/bi/queries/isEmpty").default;
            isTaskList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isTaskList").default;
            isOrderedList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isOrderedList").default;
            isSelectionInList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isSelectionInList").isSelectionInList;
            isSelectionInListSymbol: typeof import("@ali/4ever-plugin-list/src/bi/queries/isSelectionInListSymbol").isSelectionInListSymbol;
            isSelectionInTaskList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isSelectionInTaskList").isSelectionInTaskList;
            isUnorderedList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isUnorderedList").default;
            hasListSelection: typeof import("@ali/4ever-plugin-list/src/bi/queries/hasListSelection").default;
            getListStyleText: typeof import("@ali/4ever-plugin-list/src/bi/queries/getListStyleText").default;
            getListCurrentItem: typeof import("@ali/4ever-plugin-list/src/bi/queries/getListCurrentItem").getListCurrentItem;
            getListChildItems: (controller: import("@ali/4ever-cangjie").Controller, currrentItem: import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren>) => import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren>[];
            isListSymbolSelected: typeof import("@ali/4ever-plugin-list/src/bi/queries/isListSymbolUnSelected").isListSymbolSelected;
            getListDepthItems: (controller: import("@ali/4ever-cangjie").Controller) => {
                depthItems: (import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren> | null)[];
                hasFirstStart: boolean;
            };
            getSymbolStyleByKey: typeof import("@ali/4ever-plugin-list/src/utils").getSymbolStyleByKey;
        };
        components: {
            createListItem: typeof import("@ali/4ever-plugin-list").createBiListItem;
        };
    };
    inlineCode: import("@ali/4ever-cangjie").BiFactory;
    marks: {
        (config: import("@ali/4ever-cangjie").BiPluginConfig): import("@ali/4ever-cangjie").BiPlugin;
        createMarksPlugin: import("@ali/4ever-cangjie").ZhiFactory;
    };
    indent: typeof indent;
    textBackground: import("@ali/4ever-cangjie").ZhiFactory;
    columns: typeof columns;
    callout: typeof callout;
    templateButton: import("@ali/4ever-cangjie").MobileBiFactory;
    voteCard: () => {
        cardType: string;
        renderNode(props: any, _: any, next: any): any;
    };
    mention: {
        (configs: import("@ali/4ever-cangjie").MobileBiPluginConfig): import("@ali/4ever-cangjie").BiPlugin;
        actions: typeof import("@ali/4ever-plugin-mention/src/bi/actions");
        commands: {
            insertMention: (controller: import("@ali/4ever-cangjie").Controller, results: import("@ali/4ever-plugin-mention/src/bi/mobile/insertMention").Result[]) => import("@ali/4ever-cangjie").Controller;
        };
    };
    placeholder: typeof placeholder;
    strike: import("@ali/4ever-cangjie").MobileBiFactory;
    sz: typeof sz;
    sticker: typeof sticker;
    table: import("@ali/4ever-cangjie").MobileBiFactory;
    underline: typeof underline;
    vertAlign: typeof vertAlign;
    onlineVideo: typeof onlineVideo;
    inlinePlaceholder: import("@ali/4ever-cangjie").MoFactory;
    paragraph: import("@ali/4ever-cangjie").BiFactory;
    docStyle: typeof docStyle;
};
export default _default;
