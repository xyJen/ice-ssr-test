import * as React from 'react';
import * as PropTypes from 'prop-types';
import { Controller } from '@ali/4ever-cangjie';
import { throttleByIdleCallback } from '@ali/4ever-bamboo';
export interface HeadingWrapperProps {
    controller: Controller;
    style?: React.CSSProperties;
    onHeadingsChange: (headings: any) => void;
}
export default class HeadingWrapper extends React.Component<HeadingWrapperProps> {
    static childContextTypes: {
        onHeadingChange: PropTypes.Requireable<(...args: any[]) => any>;
    };
    getChildContext(): {
        onHeadingChange: {
            (...args: any[]): void;
            cancel(): void;
        } | null;
    };
    componentWillUnmount(): void;
    handleHeadingChange: ReturnType<typeof throttleByIdleCallback> | null;
    render(): React.ReactNode;
}
