import { OldActions, OldUtils, createBiListItem } from '@ali/4ever-plugin-list';
import { BiPluginConfig } from '@ali/4ever-cangjie';
declare const createListPlugin: {
    (configs: BiPluginConfig): import("@ali/4ever-cangjie").BiPlugin;
    actions: typeof OldActions;
    queries: {
        isEmpty: typeof import("@ali/4ever-plugin-list/src/bi/queries/isEmpty").default;
        isTaskList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isTaskList").default;
        isOrderedList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isOrderedList").default;
        isSelectionInList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isSelectionInList").isSelectionInList;
        isSelectionInListSymbol: typeof import("@ali/4ever-plugin-list/src/bi/queries/isSelectionInListSymbol").isSelectionInListSymbol;
        isSelectionInTaskList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isSelectionInTaskList").isSelectionInTaskList;
        isUnorderedList: typeof import("@ali/4ever-plugin-list/src/bi/queries/isUnorderedList").default;
        hasListSelection: typeof import("@ali/4ever-plugin-list/src/bi/queries/hasListSelection").default;
        getListStyleText: typeof import("@ali/4ever-plugin-list/src/bi/queries/getListStyleText").default;
        getListCurrentItem: typeof import("@ali/4ever-plugin-list/src/bi/queries/getListCurrentItem").getListCurrentItem;
        getListChildItems: (controller: import("@ali/4ever-cangjie").Controller, currrentItem: import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren>) => import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren>[];
        isListSymbolSelected: typeof import("@ali/4ever-plugin-list/src/bi/queries/isListSymbolUnSelected").isListSymbolSelected;
        getListDepthItems: (controller: import("@ali/4ever-cangjie").Controller) => {
            depthItems: (import("@ali/4ever-cangjie").Block<import("@ali/4ever-cangjie/src/interfaces/data").default, import("@ali/4ever-cangjie").BlockChildren> | null)[];
            hasFirstStart: boolean;
        };
        getSymbolStyleByKey: typeof import("@ali/4ever-plugin-list/src/utils").getSymbolStyleByKey;
    };
    utils: typeof OldUtils;
    components: {
        createListItem: typeof createBiListItem;
    };
};
export default createListPlugin;
