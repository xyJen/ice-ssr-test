/// <reference types="react" />
import { Controller, Selection } from '@ali/4ever-cangjie';
import { StickerPlugin } from '@ali/4ever-bamboo';
import { Sticker as StickerNode } from '@ali/4ever-mo';
/**
 * @description 雪碧图中每个图片数据
 */
export interface SpriteSticker {
    /**
     * 表情唯一 id
     */
    stickerId: string;
    /**
     * 表情码，如 [微笑]
     */
    code: string;
    /**
     * background-position-x
     */
    x: number;
    /**
     * // background-position-y
     */
    y: number;
    /**
     * 图片宽度
     */
    width: number;
    /**
     * 图片高度
     */
    height: number;
    locale: {
        en_US: string;
        ja_JP: string;
        vi_VN: string;
        zh_CN: string;
        zh_HK: string;
        zh_TW: string;
    };
}
/**
 * @description 雪碧图表情配置
 */
export interface SpriteStickerData {
    type: 'sprite';
    src: string;
    stickers: Array<SpriteSticker | SplitLine>;
}
/**
 * @description 非雪碧图中每个图片数据
 */
export interface SingleSticker extends SpriteSticker {
    src: string;
}
/**
 * @description 非雪碧图表情配置
 */
export interface SingleStickerData {
    type: 'single';
    stickers: Array<SingleSticker | SplitLine>;
}
/**
 * @description 表情面板分割线
 */
export interface SplitLine {
    stickerId: string;
}
/**
 * @description 插入表情节点 Action 传参
 */
export interface InsertStickerProps {
    code: string;
    width: number;
    height: number;
    node?: StickerNode;
}
/**
 * @description 插入表情节点 Action 传参
 */
export interface SetStickerProps extends InsertStickerProps {
    node: StickerNode;
}
export interface SetStickerVisibleProps {
    visible: boolean;
}
export interface MoveCaretProps {
    offset: 1 | -1;
}
export interface SetRangeProps {
    range: Selection;
    trigger: 'moveUpward' | 'moveDownward';
}
/**
 * @description 自定义表情类型
 */
export declare type ICustomSticker = Array<SpriteStickerData | SingleStickerData>;
/**
 * @description Sticker插件配置
 */
export interface StickerPluginConfig {
    lang: string;
    customSticker: ICustomSticker;
    enableSticker?: boolean;
    locale?: any;
    onPanelVisibleChange?: (visible: boolean) => void;
}
/**
 * @description stickerWrapper、stickerPlaceholder 入参
 */
export interface IStickerProps {
    node: StickerNode;
    controller: Controller;
    sticker: StickerPlugin.Sticker;
    readonly?: boolean;
    StickerPlaceholder?: React.ComponentType<any>;
}
