{"version":3,"sources":["../../../../../src/plugins/callout/components/Menu.tsx"],"names":["React","MenuItem","InlineMenuItem","insertCallout","transformCallout","CALLOUT_MENU_STYLE","whiteSpace","WithCalloutMenu","Component","CalloutMenu","props","menuItem","controller","action","title","rest","value","handleClick","run","isDisabled","useMemo","query","menu","inlineMenu"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,gBAAzC;AAEA,SAASC,aAAT,EAAwBC,gBAAxB;AAEA,IAAMC,kBAAuC,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAhD;;AAEA,SAASC,eAAT,CAAyBC,SAAzB,EAA8C;AAC5C,SAAO,SAASC,WAAT,CAAqBC,KAArB,EAAgD;AAAA,QAC7CC,QAD6C,GACpBD,KADoB,CAC7CC,QAD6C;AAAA,QACnCC,UADmC,GACpBF,KADoB,CACnCE,UADmC;;AAAA,QAE7CC,MAF6C,GAElBF,QAFkB,CAE7CE,MAF6C;AAAA,QAErCC,KAFqC,GAElBH,QAFkB,CAErCG,KAFqC;AAAA,QAE3BC,IAF2B,iCAElBJ,QAFkB;;AAAA,QAG7CK,KAH6C,GAGnCJ,UAHmC,CAG7CI,KAH6C;;AAKrD,QAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,UAAIJ,MAAM,KAAK,QAAf,EAAyB;AACvB,eAAOD,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2Bd,gBAAgB,EAA3C,CAAP;AACD;;AACDQ,MAAAA,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2Bf,aAAa,EAAxC;AACD,KALD;;AAOA,QAAMgB,UAAU,GAAGnB,KAAK,CAACoB,OAAN,CACjB;AAAA,aACER,UAAU,CAACS,KAAX,CAAiB,oBAAjB,KACAT,UAAU,CAACS,KAAX,CAAiB,uBAAjB,CADA,IAEAT,UAAU,CAACS,KAAX,CAAiB,6BAAjB,CAHF;AAAA,KADiB,EAKjB,CAACT,UAAD,EAAaI,KAAb,CALiB,CAAnB;AAQA,wBACE,eAAC,SAAD;AACE,MAAA,QAAQ,EAAEG,UADZ;AAEE,MAAA,KAAK,EAAEd;AAFT,OAGMU,IAHN;AAIE;AACA,MAAA,OAAO,EAAEE;AALX,QAOGH,KAAK,IAAI,EAPZ,CADF;AAWD,GA/BD;AAgCD,C,CAED;;;AACA,OAAO,IAAMQ,IAAI,GAAGf,eAAe,CAACN,QAAD,CAA5B,C,CAEP;;AACA,OAAO,IAAMsB,UAAU,GAAGhB,eAAe,CAACL,cAAD,CAAlC","sourcesContent":["import * as React from 'react';\nimport { MenuItem, InlineMenuItem } from '@ali/we-design';\nimport { MenuItemInnerProps } from '@ali/4ever-component';\nimport { insertCallout, transformCallout } from '../actions';\n\nconst CALLOUT_MENU_STYLE: React.CSSProperties = { whiteSpace: 'nowrap' };\n\nfunction WithCalloutMenu(Component: React.FC) {\n  return function CalloutMenu(props: MenuItemInnerProps) {\n    const { menuItem, controller } = props;\n    const { action, title, ...rest } = menuItem;\n    const { value } = controller;\n\n    const handleClick = () => {\n      if (action === 'format') {\n        return controller.run('onAction', transformCallout());\n      }\n      controller.run('onAction', insertCallout());\n    };\n\n    const isDisabled = React.useMemo(\n      () =>\n        controller.query('isSelectionInImage') ||\n        controller.query('isSelectionInLinkCard') ||\n        controller.query('isSelectionInSubjectHeading'),\n      [controller, value],\n    );\n\n    return (\n      <Component\n        disabled={isDisabled}\n        style={CALLOUT_MENU_STYLE}\n        {...rest}\n        // @ts-ignore\n        onClick={handleClick}\n      >\n        {title || ''}\n      </Component>\n    );\n  };\n}\n\n// @ts-ignore\nexport const menu = WithCalloutMenu(MenuItem);\n\n// @ts-ignore\nexport const inlineMenu = WithCalloutMenu(InlineMenuItem);\n"],"file":"Menu.js"}