import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Dropdown } from '@ali/we-design';
import { DropdownAnimation } from '@ali/we-util';
import { IconButton } from '@ali/we-toolbar';
import { PaletteNormal } from '@ali/we-icon';
import { useScrollableContent } from '@ali/4ever-bamboo';
import { CalloutInnerToolbarOuterWrapper, CalloutInnerToolbarWrapper, PaddingHolder } from "./styled";
import { ColorPanel } from "./colorPanel";

var colorToWhite = function colorToWhite(color) {
  return (color || 'white').replace('transparent', 'white');
};

var _ref = /*#__PURE__*/_createElement(IconButton, {
  icon: /*#__PURE__*/_createElement(PaletteNormal, null)
});

var Toolbar = function Toolbar(props) {
  var showInnerToolbar = props.showInnerToolbar,
      bgcolor = props.bgcolor;

  var _React$useState = React.useState(false),
      overlayVisible = _React$useState[0],
      setOverlayVisible = _React$useState[1];

  var _React$useState2 = React.useState(!showInnerToolbar),
      visible = _React$useState2[0],
      setVisible = _React$useState2[1];

  var scrollContent = useScrollableContent() || window.document.body; // 加 EmptyContainer 是因为 IconButton 未监听 onMouseEnter 等， trigger="hover" 无法生效

  React.useEffect(function () {
    if (!showInnerToolbar) {
      setOverlayVisible(false);
    }

    setVisible(showInnerToolbar);
  }, [showInnerToolbar]);
  return /*#__PURE__*/_createElement(PaddingHolder, {
    showInnerToolbar: showInnerToolbar,
    visibile: visible
  }, /*#__PURE__*/_createElement(CalloutInnerToolbarOuterWrapper, {
    bgcolor: colorToWhite(bgcolor)
  }, /*#__PURE__*/_createElement(CalloutInnerToolbarWrapper, null, /*#__PURE__*/_createElement(Dropdown, {
    trigger: "click",
    overlay: /*#__PURE__*/_createElement(DropdownAnimation, {
      visible: overlayVisible
    }, /*#__PURE__*/_createElement(ColorPanel, _extends({}, props, {
      getNode: function getNode() {
        return props.node;
      }
    }))),
    overlayStyle: {
      backgroundColor: 'transparent',
      border: 'none'
    },
    onVisibleChange: function onVisibleChange(vi) {
      setOverlayVisible(vi);
    },
    placement: "topRight",
    visible: overlayVisible,
    getContainer: function getContainer() {
      return scrollContent;
    }
  }, _ref))));
};

export default Toolbar;
//# sourceMappingURL=InnerToolbar.js.map