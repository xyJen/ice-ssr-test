import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { MenuItem, InlineMenuItem } from '@ali/we-design';
import { insertCallout, transformCallout } from "../actions";
var CALLOUT_MENU_STYLE = {
  whiteSpace: 'nowrap'
};

function WithCalloutMenu(Component) {
  return function CalloutMenu(props) {
    var menuItem = props.menuItem,
        controller = props.controller;

    var action = menuItem.action,
        title = menuItem.title,
        rest = _objectWithoutPropertiesLoose(menuItem, ["action", "title"]);

    var value = controller.value;

    var handleClick = function handleClick() {
      if (action === 'format') {
        return controller.run('onAction', transformCallout());
      }

      controller.run('onAction', insertCallout());
    };

    var isDisabled = React.useMemo(function () {
      return controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard') || controller.query('isSelectionInSubjectHeading');
    }, [controller, value]);
    return /*#__PURE__*/_createElement(Component, _extends({
      disabled: isDisabled,
      style: CALLOUT_MENU_STYLE
    }, rest, {
      // @ts-ignore
      onClick: handleClick
    }), title || '');
  };
} // @ts-ignore


export var menu = WithCalloutMenu(MenuItem); // @ts-ignore

export var inlineMenu = WithCalloutMenu(InlineMenuItem);
//# sourceMappingURL=Menu.js.map