{"version":3,"sources":["../../../../../src/plugins/callout/components/calloutMobile.tsx"],"names":["React","useZoom","StickerPlugin","CalloutPlugin","getRectOfNodeFirstText","StickerItem","CalloutBoxWrapper","CalloutBox","ContentBox","StickerBox","StickerInnerBox","DEFAULTS","STICKER_SIZE","PADDING_TOP","Callout","props","node","attributes","children","sticker","stickerBoxRef","useRef","useMemo","metadata","data","showSticker","Boolean","showstk","bgcolor","stickerCode","stcode","border","borderColor","whiteBorder","ref","useState","stickerTop","setStickerTop","zoom","useEffect","current","nodes","rect","stickerRect","getBoundingClientRect","height","newTop","top","Math","round","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Block, Controller, useZoom } from '@ali/4ever-cangjie';\nimport { StickerPlugin, CalloutPlugin } from '@ali/4ever-bamboo';\nimport { ParagraphData, ColorBlocks } from '@ali/4ever-mo';\nimport { getRectOfNodeFirstText } from '@ali/4ever-utils';\nimport { Locale } from '../types';\n\nconst { StickerItem } = StickerPlugin;\nconst {\n  CalloutBoxWrapper,\n  CalloutBox,\n  ContentBox,\n  StickerBox,\n  StickerInnerBox,\n  DEFAULTS,\n  STICKER_SIZE,\n  PADDING_TOP,\n} = CalloutPlugin;\n\nexport interface CalloutProps {\n  controller: Controller;\n  node: Block<ParagraphData> | ColorBlocks;\n  locale?: Locale;\n  attributes: Record<string, string>;\n  sticker: StickerPlugin.Sticker;\n}\n\n/**\n * 高亮区块\n * @param props\n * @returns\n */\nconst Callout: React.FC<CalloutProps> = (props) => {\n  const { node, attributes, children, sticker } = props;\n  const stickerBoxRef = React.useRef<HTMLDivElement>();\n\n  const {\n    bgcolor = DEFAULTS.bgcolor,\n    sticker: stickerCode = DEFAULTS.stcode,\n    border,\n    showSticker,\n  } = React.useMemo(() => {\n    const { metadata } = (node as ColorBlocks).data;\n    return { ...metadata, showSticker: Boolean(metadata.showstk) };\n  }, [node]);\n\n  // 边框色默认为背景色, 使边框和文字对齐\n  let borderColor = border || bgcolor;\n  if (!border && bgcolor === '#FFFFFF') {\n    borderColor = DEFAULTS.whiteBorder;\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [stickerTop, setStickerTop] = React.useState(0);\n  const zoom = useZoom();\n\n  React.useEffect(() => {\n    if (stickerBoxRef.current && node.nodes[0]) {\n      const rect = getRectOfNodeFirstText(node.nodes[0] as Block);\n      const stickerRect = stickerBoxRef.current?.getBoundingClientRect();\n      if (rect && rect.height && stickerRect) {\n        const newTop =\n          rect.top / zoom -\n          stickerRect.top / zoom -\n          PADDING_TOP +\n          (rect.height / zoom - STICKER_SIZE) / 2 -\n          1;\n        setStickerTop(Math.round(newTop));\n      }\n    }\n  }, [node, stickerBoxRef, zoom]);\n\n  return (\n    <CalloutBoxWrapper {...attributes}>\n      <CalloutBox\n        ref={ref}\n        className=\"callout-box\"\n        data-callout-group\n        data-color-select-panel\n        backgroundColor={bgcolor}\n        borderColor={borderColor}\n        selected={false}\n        onMouseDown={() => {}}\n        data-hover-box=\"borderBox\"\n        onClick={() => {}}\n      >\n        {Boolean(showSticker) && (\n          <StickerBox className=\"callout-sticker-box\" ref={stickerBoxRef}>\n            <StickerInnerBox style={{ top: stickerTop }}>\n              <StickerItem\n                sz={STICKER_SIZE}\n                code={stickerCode}\n                sticker={sticker}\n              />\n            </StickerInnerBox>\n          </StickerBox>\n        )}\n        <ContentBox data-container-block showSticker={showSticker}>\n          {children}\n        </ContentBox>\n      </CalloutBox>\n    </CalloutBoxWrapper>\n  );\n};\n\nCallout.displayName = 'Callout';\n\nexport default Callout;\n"],"file":"calloutMobile.js"}