{"version":3,"sources":["../../../../../../src/plugins/callout/components/next/colorIconMenu.tsx"],"names":["React","CalloutPlugin","PluginRoles","ComplexColorIconMenu","HoverToolbarHooks","setMetaData","setMetaDataAction","DEFAULTS","ColorIconMenu","props","controller","locale","getNode","onOverlayVisibleChange","getContainer","useGetContainer","usePopoverVisible","isOverlayVisible","setOverlayVisible","node","useState","data","metadata","metaData","handleValueChange","key","value","run","color","bgcolor","border","colorTitle","calloutColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,sBAAxD;AAIA,SAASC,WAAW,IAAIC,iBAAxB;IASQC,Q,GAAaN,a,CAAbM,Q;AAER,OAAO,IAAMC,aAA4C,GAAG,SAA/CA,aAA+C,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC7DC,UAD6D,GACLD,KADK,CAC7DC,UAD6D;AAAA,MACjDC,MADiD,GACLF,KADK,CACjDE,MADiD;AAAA,MACzCC,OADyC,GACLH,KADK,CACzCG,OADyC;AAAA,MAChCC,sBADgC,GACLJ,KADK,CAChCI,sBADgC;AAErE,MAAMC,YAAY,GAAGV,iBAAiB,CAACW,eAAlB,EAArB;;AAFqE,8BAGvBX,iBAAiB,CAACY,iBAAlB,CAAoC,eAApC,EAAqDH,sBAArD,CAHuB;AAAA,MAG9DI,gBAH8D;AAAA,MAG5CC,iBAH4C;;AAIrE,MAAMC,IAAI,GAAGP,OAAO,EAApB;;AAJqE,wBAKrCZ,KAAK,CAACoB,QAAN,CAAeD,IAAf,kCAAeA,IAAI,CAAEE,IAArB,qBAAe,WAAYC,QAA3B,CALqC;AAAA,MAK9DC,QAL8D;AAAA,MAKpDlB,WALoD;;AAOrE,MAAMmB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD;AAAA,WAAS,UAACC,KAAD,EAAW;AAC5CrB,MAAAA,WAAW,CAAC,UAACkB,QAAD;AAAA;;AAAA,4BACPA,QADO,6BAETE,GAFS,IAEHC,KAFG;AAAA,OAAD,CAAX;AAIA,UAAML,IAAkC,GAAG,EAA3C,CAL4C,CAM5C;;AACAA,MAAAA,IAAI,CAACI,GAAD,CAAJ,GAAYC,KAAZ;AACA,UAAMP,IAAI,GAAGP,OAAO,EAApB;AACAF,MAAAA,UAAU,CAACiB,GAAX,CAAe,eAAf;AACAR,MAAAA,IAAI,IAAIT,UAAU,CAACiB,GAAX,CAAe,UAAf,EAA2BrB,iBAAiB,CAAC;AAAEa,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,IAAI,EAAJA;AAAR,OAAD,CAA5C,CAAR;AACD,KAXyB;AAAA,GAA1B;;AAaA,MAAI,CAACF,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE,eAAC,oBAAD;AACE,IAAA,KAAK,EAAEI,QAAF,oBAAEA,QAAQ,CAAEK,KADnB;AAEE,IAAA,YAAY,EAAErB,QAAQ,CAACqB,KAFzB;AAGE,IAAA,eAAe,EAAE,CAAAL,QAAQ,QAAR,YAAAA,QAAQ,CAAEM,OAAV,KAAqBtB,QAAQ,CAACqB,KAHjD;AAIE,IAAA,sBAAsB,EAAErB,QAAQ,CAACsB,OAJnC;AAKE,IAAA,WAAW,EAAEN,QAAF,oBAAEA,QAAQ,CAAEO,MALzB;AAME,IAAA,kBAAkB,EAAEvB,QAAQ,CAACuB,MAN/B;AAOE,IAAA,YAAY,EAAEN,iBAAiB,CAAC,OAAD,CAPjC;AAQE,IAAA,kBAAkB,EAAEA,iBAAiB,CAAC,QAAD,CARvC;AASE,IAAA,sBAAsB,EAAEA,iBAAiB,CAAC,SAAD,CAT3C;AAUE,IAAA,sBAAsB,EAAEN,iBAV1B;AAWE,IAAA,gBAAgB,EAAED,gBAXpB;AAYE,IAAA,YAAY,EAAEH,YAZhB;AAaE,IAAA,OAAO,EAAEH,MAAM,CAACoB,UAblB;AAcE,IAAA,IAAI,EAAE7B,WAAW,CAAC8B;AAdpB,IADF;AAkBD,CAxCM","sourcesContent":["import React from 'react';\nimport { CalloutPlugin, PluginRoles } from '@ali/4ever-bamboo';\nimport { ComplexColorIconMenu, HoverToolbarHooks } from '@ali/4ever-component';\nimport { ColorBlocksMetaData, ColorBlocks } from '@ali/4ever-mo';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { Locale } from '../../types';\nimport { setMetaData as setMetaDataAction } from '../../actions';\n\nexport interface IColorIconMenuProps {\n  onOverlayVisibleChange: (v: boolean) => void;\n  controller: Controller;\n  getNode: () => ColorBlocks | null;\n  locale: Locale;\n}\n\nconst { DEFAULTS } = CalloutPlugin;\n\nexport const ColorIconMenu: React.FC<IColorIconMenuProps> = (props) => {\n  const { controller, locale, getNode, onOverlayVisibleChange } = props;\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isOverlayVisible, setOverlayVisible] = HoverToolbarHooks.usePopoverVisible('callout.color', onOverlayVisibleChange)\n  const node = getNode();\n  const [metaData, setMetaData] = React.useState(node?.data?.metadata);\n\n  const handleValueChange = (key) => (value) => {\n    setMetaData((metaData) => ({\n      ...metaData,\n      [key]: value,\n    }));\n    const data: Partial<ColorBlocksMetaData> = {};\n    // @ts-ignore\n    data[key] = value;\n    const node = getNode();\n    controller.run('onCangjieBlur');\n    node && controller.run('onAction', setMetaDataAction({ node, data }));\n  }\n\n  if (!node) return null;\n\n  return (\n    <ComplexColorIconMenu\n      color={metaData?.color}\n      defaultColor={DEFAULTS.color}\n      backgroundColor={metaData?.bgcolor || DEFAULTS.color}\n      defaultBackgroundColor={DEFAULTS.bgcolor}\n      borderColor={metaData?.border}\n      defaultBorderColor={DEFAULTS.border}\n      onColorClick={handleValueChange('color')}\n      onBorderColorClick={handleValueChange('border')}\n      onBackgroundColorClick={handleValueChange('bgcolor')}\n      onOverlayVisibleChange={setOverlayVisible}\n      isOverlayVisible={isOverlayVisible}\n      getContainer={getContainer}\n      tooltip={locale.colorTitle}\n      role={PluginRoles.calloutColor}\n    />\n  );\n}"],"file":"colorIconMenu.js"}