import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { IconButton, IconEmoji } from '@ali/4ever-component';
import { PluginRoles } from '@ali/4ever-bamboo';
import { setMetaData as setMetaDataAction } from "../../actions";

var _ref = /*#__PURE__*/_createElement(IconEmoji, null);

export var StickerSwitchButton = function StickerSwitchButton(props) {
  var _node$data, _node$data$metadata;

  var controller = props.controller,
      locale = props.locale,
      getNode = props.getNode;
  var node = getNode();

  var _React$useState = React.useState((node == null ? void 0 : (_node$data = node.data) == null ? void 0 : (_node$data$metadata = _node$data.metadata) == null ? void 0 : _node$data$metadata.showstk) || false),
      showStk = _React$useState[0],
      setShowStk = _React$useState[1];

  var handleClick = React.useCallback(function () {
    setShowStk(function (v) {
      var data = {}; // @ts-ignore

      data.showstk = !v;
      var node = getNode();
      controller.run('onCangjieBlur');
      node && controller.run('onAction', setMetaDataAction({
        node: node,
        data: data,
        needBlur: true
      }));
      return !v;
    });
  }, []);
  if (!node) return null;
  return /*#__PURE__*/_createElement(IconButton, {
    onClick: handleClick,
    active: showStk,
    icon: _ref,
    tooltip: (locale == null ? void 0 : locale.showEmoji) || 'Show sticker',
    role: PluginRoles.calloutSticker
  });
};
//# sourceMappingURL=stickerSwitch.js.map