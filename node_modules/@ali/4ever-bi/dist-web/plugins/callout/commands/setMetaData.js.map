{"version":3,"sources":["../../../../../src/plugins/callout/commands/setMetaData.ts"],"names":["Commands","Selection","ColorBlocks","broadcastDataChange","setMetaData","controller","key","data","node","value","document","getNode","isColorBlocks","color","range","selection","create","moveToRangeOfNode","convertToTextPoints","command","select","dispatch","moveToStart","newData","metadata","run","setNodeByKey"],"mappings":";AAAA,SAAqBA,QAArB,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SAASC,WAAT,QAAiD,eAAjD;AACA,SAASC,mBAAT;AAEA,OAAO,SAASC,WAAT,CACLC,UADK,EAELC,GAFK,EAGLC,IAHK,EAIL;AACA,MAAMC,IAAI,GAAGH,UAAU,CAACI,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCL,GAAlC,CAAb;;AACA,MAAI,CAACJ,WAAW,CAACU,aAAZ,CAA0BJ,IAA1B,CAAL,EAAsC;AACpC,WAAOH,UAAP;AACD;;AACD,MAAI,QAAOE,IAAP,oBAAOA,IAAI,CAAEM,KAAb,MAAuB,QAA3B,EAAqC;AAAA,4BACIR,UAAU,CAACI,KADf;AAAA,QAChBK,KADgB,qBAC3BC,SAD2B;AAAA,QACTL,QADS,qBACTA,QADS;AAEnC,QAAMK,SAAS,GAAGd,SAAS,CAACe,MAAV,CAChBF,KAAK,CAACG,iBAAN,CAAwBT,IAAxB,EAA8BH,UAA9B,EAA0Ca,mBAA1C,CAA8DR,QAA9D,CADgB,CAAlB;AAGAL,IAAAA,UAAU,CAACc,OAAX,CAAmBnB,QAAQ,CAACoB,MAA5B,EAAoCL,SAApC;AACAV,IAAAA,UAAU,CAACgB,QAAX,CAAoB,UAApB,EAAgCd,IAAhC,oBAAgCA,IAAI,CAAEM,KAAtC;AACAR,IAAAA,UAAU,CAACc,OAAX,CAAmBnB,QAAQ,CAACsB,WAA5B;AACD;;AACD,MAAMC,OAAO,GAAGhB,IAAI,IAAI,EAAxB;;AACA,MAAMiB,QAAQ,gBACThB,IAAI,CAACD,IAAL,CAAUiB,QADD,EAETD,OAFS,CAAd;;AAKAlB,EAAAA,UAAU,CAACoB,GAAX,CAAe,UAAf,EAA2BtB,mBAAmB,CAACqB,QAAD,CAA9C;AAEA,SAAOnB,UAAU,CAACc,OAAX,CAAmBnB,QAAQ,CAAC0B,YAA5B,EAA0CpB,GAA1C,EAA+C;AACpDC,IAAAA,IAAI,eACCC,IAAI,CAACD,IADN;AAEFiB,MAAAA,QAAQ,EAARA;AAFE;AADgD,GAA/C,CAAP;AAMD","sourcesContent":["import { Controller, Commands, Selection } from '@ali/4ever-cangjie';\nimport { ColorBlocks, ColorBlocksMetaData } from '@ali/4ever-mo';\nimport { broadcastDataChange } from '../actions';\n\nexport function setMetaData(\n  controller: Controller,\n  key: string,\n  data?: Partial<ColorBlocksMetaData>,\n) {\n  const node = controller.value.document.getNode(key);\n  if (!ColorBlocks.isColorBlocks(node)) {\n    return controller;\n  }\n  if (typeof data?.color === 'string') {\n    const { selection: range, document } = controller.value;\n    const selection = Selection.create(\n      range.moveToRangeOfNode(node, controller).convertToTextPoints(document),\n    );\n    controller.command(Commands.select, selection);\n    controller.dispatch('setColor', data?.color);\n    controller.command(Commands.moveToStart);\n  }\n  const newData = data || {};\n  const metadata = {\n    ...node.data.metadata,\n    ...newData,\n  };\n\n  controller.run('onAction', broadcastDataChange(metadata));\n\n  return controller.command(Commands.setNodeByKey, key, {\n    data: {\n      ...node.data,\n      metadata,\n    },\n  });\n}\n"],"file":"setMetaData.js"}