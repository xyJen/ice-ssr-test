import _extends from "@babel/runtime/helpers/extends";
import { Commands } from '@ali/4ever-cangjie';
import { ColorBlocks } from '@ali/4ever-mo';
import { isEmptyParagraph, CalloutPlugin } from '@ali/4ever-bamboo';
export function createInsertCallout(config) {
  return function insertCallout(controller, text, type) {
    if (text === void 0) {
      text = '';
    }

    if (type === void 0) {
      type = '';
    }

    var _controller$value = controller.value,
        selection = _controller$value.selection,
        document = _controller$value.document;
    var focusKey = selection.focus.key;
    var targetNode = document.getClosestBlock(focusKey);
    var targetPath = targetNode && document.getPath(targetNode.key);

    if (!targetPath || !targetPath.length) {
      return controller;
    }

    var targetIndex = targetPath.pop();
    var colorBlock = ColorBlocks.createColorBlocks(_extends({}, config.getDefaultSetting && config.getDefaultSetting(), type ? {
      bgcolor: CalloutPlugin.COLOR_MAP[type] || {}
    } : {}));
    controller.command(Commands.insertNodeByPath, targetPath, targetIndex + 1, colorBlock).command(Commands.moveToStartOfNode, colorBlock.nodes[0]);

    if (isEmptyParagraph(targetNode)) {
      controller.command(Commands.removeNodeByKey, targetNode.key);
    }

    return controller;
  };
}
//# sourceMappingURL=insertCallout.js.map