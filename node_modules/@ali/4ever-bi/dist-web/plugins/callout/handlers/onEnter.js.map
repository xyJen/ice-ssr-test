{"version":3,"sources":["../../../../../src/plugins/callout/handlers/onEnter.ts"],"names":["Commands","getClosestParagraph","insertCallout","calloutMarkdown","onEnter","event","controller","next","value","startBlock","selection","document","closestParagraphBlock","isCollapsed","convertToTextPoints","start","isAtEndOfNode","matches","text","trim","match","data","calloutPr","preventDefault","type","length","command","moveAnchorToStartOfBlock","del","run","dispatch","mdType","info"],"mappings":"AACA,SAAqBA,QAArB,QAA4C,oBAA5C;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,aAAT,qB,CAEA;AACA;;AACA,IAAMC,eAAe,GAAG,oDAAxB;AAEA,eAAe,SAASC,OAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AAAA,MACQC,KADR,GACkBF,UADlB,CACQE,KADR;AAAA,MAEQC,UAFR,GAE4CD,KAF5C,CAEQC,UAFR;AAAA,MAEoBC,SAFpB,GAE4CF,KAF5C,CAEoBE,SAFpB;AAAA,MAE+BC,QAF/B,GAE4CH,KAF5C,CAE+BG,QAF/B;AAGA,MAAI,CAACF,UAAD,IAAe,CAACC,SAApB,EAA+B,OAAOH,IAAI,EAAX;AAE/B,MAAMK,qBAAmC,GAAGX,mBAAmB,CAACO,KAAD,CAA/D;AACA,MAAI,CAACI,qBAAL,EAA4B,OAAOL,IAAI,EAAX;AAN5B,MAQQM,WARR,GAQwBH,SARxB,CAQQG,WARR;;AAAA,8BASkBH,SAAS,CAACI,mBAAV,CAA8BH,QAA9B,CATlB;AAAA,MASQI,KATR,yBASQA,KATR,EAWA;AACA;;;AACA,MAAIF,WAAW,IAAIE,KAAK,CAACC,aAAN,CAAoBJ,qBAApB,CAAnB,EAA+D;AAC7D,QAAMK,OAAO,GAAGL,qBAAqB,CAACM,IAAtB,CAA2BC,IAA3B,GAAkCC,KAAlC,CAAwCjB,eAAxC,CAAhB;;AACA,QAAIc,OAAO,IAAI,CAACL,qBAAqB,CAACS,IAAtB,CAA2BC,SAA3C,EAAsD;AACpDjB,MAAAA,KAAK,CAACkB,cAAN;AACA,UAAMC,IAAI,GAAGP,OAAO,CAACA,OAAO,CAACQ,MAAR,GAAiB,CAAlB,CAApB;AACAnB,MAAAA,UAAU,CACPoB,OADH,CACW1B,QAAQ,CAAC2B,wBADpB,EAEGD,OAFH,CAEW1B,QAAQ,CAAC4B,GAFpB;AAGAtB,MAAAA,UAAU,CAACuB,GAAX,CAAe,UAAf,EAA2B3B,aAAa,CAAC;AAAEgB,QAAAA,IAAI,EAAE,EAAR;AAAYM,QAAAA,IAAI,EAAJA;AAAZ,OAAD,CAAxC;AACA,aAAOlB,UAAU,CAACwB,QAAX,CAAoB,6BAApB,EAAmD;AAAEC,QAAAA,MAAM,EAAE,aAAV;AAAyBC,QAAAA,IAAI,EAAER;AAA/B,OAAnD,CAAP;AACD;AACF;;AAED,SAAOjB,IAAI,EAAX;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller, Commands, Block } from '@ali/4ever-cangjie';\nimport { getClosestParagraph } from '@ali/4ever-utils';\nimport { insertCallout } from '../actions';\n\n// 支持中英文冒号\n// 3 个冒号 (+ 空格? + type)\nconst calloutMarkdown = /^[:：]{3}(( )*(warning|info|danger|success|tips))?$/;\n\nexport default function onEnter(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: Function,\n) {\n  const { value } = controller;\n  const { startBlock, selection, document } = value;\n  if (!startBlock || !selection) return next();\n\n  const closestParagraphBlock: Block | null = getClosestParagraph(value);\n  if (!closestParagraphBlock) return next();\n\n  const { isCollapsed } = selection;\n  const { start } = selection.convertToTextPoints(document);\n\n  // Markdown 插入高亮块\n  // NOTE: 暂时未限制是否可以在容器元素内嵌套高亮块，与当前交互逻辑保持了一致\n  if (isCollapsed && start.isAtEndOfNode(closestParagraphBlock)) {\n    const matches = closestParagraphBlock.text.trim().match(calloutMarkdown);\n    if (matches && !closestParagraphBlock.data.calloutPr) {\n      event.preventDefault();\n      const type = matches[matches.length - 1] as any;\n      controller\n        .command(Commands.moveAnchorToStartOfBlock)\n        .command(Commands.del);\n      controller.run('onAction', insertCallout({ text: '', type }));\n      return controller.dispatch('createTriggerMarkdownAction', { mdType: 'colorBlocks', info: type });  \n    }\n  }\n\n  return next();\n}\n"],"file":"onEnter.js"}