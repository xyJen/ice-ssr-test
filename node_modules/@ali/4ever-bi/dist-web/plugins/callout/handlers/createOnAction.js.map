{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createOnAction.ts"],"names":["Commands","INSERT_CALLOUT","SET_CALLOUT_STICKER_CODE","SET_CALLOUT_BACKGROUND","SET_CALLOUT_SELECTED","SET_META_DATA","CLEAR_CALLOUT_SELECTED","DELETE_CALLOUT","TRANSFORM_CALLOUT","CONVERT_KEYS_TO_CONTAINER","createInsertCallout","deleteCallout","setCalloutStickerCode","setCalloutBackground","setCalloutSelected","setMetaData","clearCalloutSelected","convertKeysToContainer","transform","createOnAction","config","onAction","action","controller","next","type","payload","text","command","node","stickerCode","key","data","needBlur","blur","flush","background","keys"],"mappings":"AAAA,SAASA,QAAT,QAAiC,oBAAjC;AACA,SACEC,cADF,EAEEC,wBAFF,EAGEC,sBAHF,EAIEC,oBAJF,EAKEC,aALF,EAMEC,sBANF,EAOEC,cAPF,EAQEC,iBARF,EASEC,yBATF;AAWA,SACEC,mBADF,EAEEC,aAFF,EAGEC,qBAHF,EAIEC,oBAJF,EAKEC,kBALF,EAMEC,WANF,EAOEC,oBAPF,EAQEC,sBARF,EASEC,SATF;;AAsBA,SAASC,cAAT,CAAwBC,MAAxB,EAAyE;AACvE,SAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4C;AAAA,QACzCC,IADyC,GACvBH,MADuB,CACzCG,IADyC;AAAA,QACnCC,OADmC,GACvBJ,MADuB,CACnCI,OADmC;;AAGjD,QAAID,IAAI,KAAKxB,cAAb,EAA6B;AAAA,iBACJyB,OADI;AAAA,UACnBC,IADmB,QACnBA,IADmB;AAAA,UACbF,KADa,QACbA,IADa;AAE3BF,MAAAA,UAAU,CAACK,OAAX,CAAmBlB,mBAAmB,CAACU,MAAD,CAAtC,EAAgDO,IAAhD,EAAsDF,KAAtD;AACD,KAHD,MAGO,IAAIA,IAAI,KAAKjB,iBAAb,EAAgC;AACrCe,MAAAA,UAAU,CAACK,OAAX,CAAmBV,SAAnB;AACD,KAFM,MAEA,IAAIO,IAAI,KAAKvB,wBAAb,EAAuC;AAAA,kBACdwB,OADc;AAAA,UACpCG,IADoC,SACpCA,IADoC;AAAA,UAC9BC,WAD8B,SAC9BA,WAD8B;AAE5CP,MAAAA,UAAU,CAACK,OAAX,CAAmBhB,qBAAnB,EAA0CiB,IAAI,CAACE,GAA/C,EAAoDD,WAApD;AACD,KAHM,MAGA,IAAIL,IAAI,KAAKpB,aAAb,EAA4B;AAAA,kBACAqB,OADA;AAAA,UACzBG,KADyB,SACzBA,IADyB;AAAA,UACnBG,IADmB,SACnBA,IADmB;AAAA,UACbC,QADa,SACbA,QADa;AAEjCV,MAAAA,UAAU,CAACK,OAAX,CAAmBb,WAAnB,EAAgCc,KAAI,CAACE,GAArC,EAA0CC,IAA1C;;AACA,UAAIC,QAAJ,EAAc;AACZV,QAAAA,UAAU,CAACK,OAAX,CAAmB5B,QAAQ,CAACkC,IAA5B,EAAkCC,KAAlC;AACD;AACF,KANM,MAMA,IAAIV,IAAI,KAAKtB,sBAAb,EAAqC;AAAA,kBACbuB,OADa;AAAA,UAClCG,MADkC,SAClCA,IADkC;AAAA,UAC5BO,UAD4B,SAC5BA,UAD4B;AAE1Cb,MAAAA,UAAU,CAACK,OAAX,CAAmBf,oBAAnB,EAAyCgB,MAAI,CAACE,GAA9C,EAAmDK,UAAnD;AACD,KAHM,MAGA,IAAIX,IAAI,KAAKrB,oBAAb,EAAmC;AAAA,kBACvBsB,OADuB;AAAA,UAChCG,MADgC,SAChCA,IADgC;AAExCN,MAAAA,UAAU,CAACK,OAAX,CAAmBd,kBAAnB,EAAuCe,MAAvC;AACD,KAHM,MAGA,IAAIJ,IAAI,KAAKnB,sBAAb,EAAqC;AAC1CiB,MAAAA,UAAU,CAACK,OAAX,CAAmBZ,oBAAnB;AACD,KAFM,MAEA,IAAIS,IAAI,KAAKlB,cAAb,EAA6B;AAAA,kBACjBmB,OADiB;AAAA,UAC1BG,MAD0B,SAC1BA,IAD0B;AAElCN,MAAAA,UAAU,CAACK,OAAX,CAAmBjB,aAAnB,EAAkCkB,MAAI,CAACE,GAAvC;AACD,KAHM,MAGA,IAAIN,IAAI,KAAKhB,yBAAb,EAAwC;AAAA,kBAC5BiB,OAD4B;AAAA,UACrCW,IADqC,SACrCA,IADqC;AAE7Cd,MAAAA,UAAU,CAACK,OAAX,CAAmBX,sBAAnB,EAA2CoB,IAA3C;AACD;;AACD,WAAOb,IAAI,EAAX;AACD,GAjCD;AAkCD;;AAED,eAAeL,cAAf","sourcesContent":["import { Commands, Plugin } from '@ali/4ever-cangjie';\nimport {\n  INSERT_CALLOUT,\n  SET_CALLOUT_STICKER_CODE,\n  SET_CALLOUT_BACKGROUND,\n  SET_CALLOUT_SELECTED,\n  SET_META_DATA,\n  CLEAR_CALLOUT_SELECTED,\n  DELETE_CALLOUT,\n  TRANSFORM_CALLOUT,\n  CONVERT_KEYS_TO_CONTAINER,\n} from '../actions';\nimport {\n  createInsertCallout,\n  deleteCallout,\n  setCalloutStickerCode,\n  setCalloutBackground,\n  setCalloutSelected,\n  setMetaData,\n  clearCalloutSelected,\n  convertKeysToContainer,\n  transform,\n} from '../commands';\nimport {\n  SetCalloutBackgroundPayload,\n  SetCalloutSelectedPayload,\n  SetCalloutStickerCodePayload,\n  SetMedataDataPayload,\n  DeleteCalloutPayload,\n  InsertCalloutPayload,\n  CalloutPluginConfig,\n  ConvertKeysPayload,\n} from '../types';\n\nfunction createOnAction(config: CalloutPluginConfig): Plugin['onAction'] {\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n\n    if (type === INSERT_CALLOUT) {\n      const { text, type } = payload as InsertCalloutPayload;\n      controller.command(createInsertCallout(config), text, type);\n    } else if (type === TRANSFORM_CALLOUT) {\n      controller.command(transform);\n    } else if (type === SET_CALLOUT_STICKER_CODE) {\n      const { node, stickerCode } = payload as SetCalloutStickerCodePayload;\n      controller.command(setCalloutStickerCode, node.key, stickerCode);\n    } else if (type === SET_META_DATA) {\n      const { node, data, needBlur } = payload as SetMedataDataPayload;\n      controller.command(setMetaData, node.key, data);\n      if (needBlur) {\n        controller.command(Commands.blur).flush();\n      }\n    } else if (type === SET_CALLOUT_BACKGROUND) {\n      const { node, background } = payload as SetCalloutBackgroundPayload;\n      controller.command(setCalloutBackground, node.key, background);\n    } else if (type === SET_CALLOUT_SELECTED) {\n      const { node } = payload as SetCalloutSelectedPayload;\n      controller.command(setCalloutSelected, node);\n    } else if (type === CLEAR_CALLOUT_SELECTED) {\n      controller.command(clearCalloutSelected);\n    } else if (type === DELETE_CALLOUT) {\n      const { node } = payload as DeleteCalloutPayload;\n      controller.command(deleteCallout, node.key);\n    } else if (type === CONVERT_KEYS_TO_CONTAINER) {\n      const { keys } = payload as ConvertKeysPayload;\n      controller.command(convertKeysToContainer, keys);\n    }\n    return next();\n  };\n}\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}