import isKeyHotkey from 'is-hotkey';
import isEqual from 'fast-deep-equal';
import { deleteCallout, setCalloutSelected } from "../actions";
export default function onDelete(event, controller, next) {
  var _endBlock$data;

  var value = controller.value;
  var document = value.document,
      data = value.data,
      startBlock = value.startBlock,
      endBlock = value.endBlock,
      selection = value.selection;
  var isBackspaceHotKey = isKeyHotkey('backspace');

  if (data.selectedCallout && endBlock != null && (_endBlock$data = endBlock.data) != null && _endBlock$data.calloutPr) {
    return controller.run('onAction', deleteCallout({
      node: endBlock
    }));
  }

  var prevBlock = startBlock && document.getPreviousBlock(startBlock.key);

  if (prevBlock && startBlock && prevBlock.data.calloutPr // !startBlock.data.calloutPr 也包含在下面的条件中
  && !isEqual(startBlock.data.calloutPr, prevBlock.data.calloutPr) && selection.isCollapsed && selection.getStart(document).isAtStartOfNode(startBlock) && isBackspaceHotKey(event)) {
    event.preventDefault(); // 正常删除行

    next(); // 删除后选中高亮块

    return controller.run('onAction', setCalloutSelected({
      node: prevBlock
    }));
  }

  event.preventDefault();
  return next();
}
//# sourceMappingURL=onDelete.js.map