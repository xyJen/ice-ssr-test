{"version":3,"sources":["../../../../../src/plugins/callout/handlers/createRenderNode.tsx"],"names":["React","ColorBlocks","Container","Callout","createRenderNode","param","props","controller","sticker","locale","attributes","children","node","TYPE","data","subType","SUB_TYPE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,eAAvC;AACA,OAAOC,OAAP;;AAIA,SAASC,gBAAT,CAA0BC,KAA1B,EAGG;AAAA;;AACD;AACE,qBAAiB,sBAACC,KAAD,EAAgCC,UAAhC,EAA+C;AAAA,UACtDC,OADsD,GAClCH,KADkC,CACtDG,OADsD;AAAA,UAC7CC,MAD6C,GAClCJ,KADkC,CAC7CI,MAD6C;AAAA,UAEtDC,UAFsD,GAE7BJ,KAF6B,CAEtDI,UAFsD;AAAA,UAE1CC,QAF0C,GAE7BL,KAF6B,CAE1CK,QAF0C;AAAA,UAGtDC,IAHsD,GAG7CN,KAH6C,CAGtDM,IAHsD;AAK9D,0BACE,eAAC,OAAD;AACE,QAAA,UAAU,EAAEL,UADd;AAEE,QAAA,MAAM,EAAEE,MAFV;AAGE,QAAA,IAAI,EAAEG,IAHR;AAIE,QAAA,UAAU,EAAEF,UAJd;AAKE,QAAA,OAAO,EAAEF;AALX,SAOGG,QAAQ,EAPX,CADF;AAWD;AAjBH,UAkBGT,SAAS,CAACW,IAlBb,IAkBoB,UAACP,KAAD,EAAgCC,UAAhC,EAA+C;AAAA,QACvDC,OADuD,GACnCH,KADmC,CACvDG,OADuD;AAAA,QAC9CC,MAD8C,GACnCJ,KADmC,CAC9CI,MAD8C;AAAA,QAEvDC,UAFuD,GAE9BJ,KAF8B,CAEvDI,UAFuD;AAAA,QAE3CC,QAF2C,GAE9BL,KAF8B,CAE3CK,QAF2C;AAAA,QAGvDC,IAHuD,GAG9CN,KAH8C,CAGvDM,IAHuD;;AAK/D,QAAIA,IAAI,CAACE,IAAL,CAAUC,OAAV,KAAsBd,WAAW,CAACe,QAAtC,EAAgD;AAC9C,0BAAO,oCAAP;AACD;;AACD,wBACE,eAAC,OAAD;AACE,MAAA,UAAU,EAAET,UADd;AAEE,MAAA,MAAM,EAAEE,MAFV;AAGE,MAAA,IAAI,EAAEG,IAHR;AAIE,MAAA,UAAU,EAAEF,UAJd;AAKE,MAAA,OAAO,EAAEF;AALX,OAOGG,QAAQ,EAPX,CADF;AAWD,GArCH;AAuCD;;AAED,eAAeP,gBAAf","sourcesContent":["import * as React from 'react';\nimport { Plugin, Block, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { ColorBlocks, Container } from '@ali/4ever-mo';\nimport Callout from '../components/callout';\nimport { StickerPlugin } from '@ali/4ever-bamboo';\nimport { Locale } from '../types';\n\nfunction createRenderNode(param: {\n  sticker: StickerPlugin.Sticker;\n  locale?: Locale;\n}) {\n  return {\n    'callout-group': (props: RenderNodeProps<Block>, controller) => {\n      const { sticker, locale } = param;\n      const { attributes, children } = props;\n      const { node } = props;\n\n      return (\n        <Callout\n          controller={controller}\n          locale={locale}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n    [Container.TYPE]: (props: RenderNodeProps<Block>, controller) => {\n      const { sticker, locale } = param;\n      const { attributes, children } = props;\n      const { node } = props;\n\n      if (node.data.subType !== ColorBlocks.SUB_TYPE) {\n        return <></>;\n      }\n      return (\n        <Callout\n          controller={controller}\n          locale={locale}\n          node={node}\n          attributes={attributes}\n          sticker={sticker}\n        >\n          {children()}\n        </Callout>\n      );\n    },\n  };\n}\n\nexport default createRenderNode;\n"],"file":"createRenderNode.js"}