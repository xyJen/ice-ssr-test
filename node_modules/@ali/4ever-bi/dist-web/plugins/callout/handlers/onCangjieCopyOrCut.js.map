{"version":3,"sources":["../../../../../src/plugins/callout/handlers/onCangjieCopyOrCut.ts"],"names":["constants","transferUtils","Block","Document","ColorBlocks","MIME_TYPES","getClosestColorBlock","controller","value","selection","document","anchor","focus","convertToTextPoints","start","end","startBlock","getClosest","key","isColorBlocks","endBlock","onCangjieCopyOrCut","event","next","clipboardData","tableSelection","query","colorBlock","pathLength","getPath","length","fragment","getFragmentAtRange","node","isDocument","isBlock","nodes","targetFragment","create","setData","FRAGMENT","encodeFragment"],"mappings":"AAAA,SAEEA,SAFF,EAGEC,aAHF,EAKEC,KALF,EAOEC,QAPF,QAQO,oBARP;AASA,SAASC,WAAT,QAA4B,eAA5B;IAEQC,U,GAAeL,S,CAAfK,U;;AAER,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD,EAA4B;AAAA,0BACvBA,UAAU,CAACC,KADY;AAAA,MAC/CC,SAD+C,qBAC/CA,SAD+C;AAAA,MACpCC,QADoC,qBACpCA,QADoC;AAAA,MAE/CC,MAF+C,GAE7BF,SAF6B,CAE/CE,MAF+C;AAAA,MAEvCC,KAFuC,GAE7BH,SAF6B,CAEvCG,KAFuC;;AAAA,8BAGhCH,SAAS,CAACI,mBAAV,CAA8BH,QAA9B,CAHgC;AAAA,MAG/CI,KAH+C,yBAG/CA,KAH+C;AAAA,MAGxCC,GAHwC,yBAGxCA,GAHwC;;AAIvD,MAAMC,UAAU,GAAGN,QAAQ,CAACO,UAAT,CAAoBH,KAAK,CAACI,GAA1B,EAA+Bd,WAAW,CAACe,aAA3C,CAAnB;AACA,MAAMC,QAAQ,GAAGV,QAAQ,CAACO,UAAT,CAAoBF,GAAG,CAACG,GAAxB,EAA6Bd,WAAW,CAACe,aAAzC,CAAjB;;AACA,MAAIR,MAAM,CAACO,GAAP,KAAeN,KAAK,CAACM,GAArB,IAA4BP,MAAM,CAACO,GAAP,MAAeF,UAAf,oBAAeA,UAAU,CAAEE,GAA3B,CAAhC,EAAgE;AAC9D,WAAO,IAAP;AACD;;AACD,SAAOF,UAAU,KAAKI,QAAf,GAA0BJ,UAA1B,GAAuC,IAA9C;AACD,CAVD;;AAYA,eAAe,SAASK,kBAAT,CACbC,KADa,EAEbf,UAFa,EAGbgB,IAHa,EAIb;AACA,MAAI,CAACD,KAAK,CAACE,aAAX,EAA0B;AACxB,WAAOD,IAAI,EAAX;AACD;;AAED,MAAME,cAAc,GAAGlB,UAAU,CAACmB,KAAX,CAAiB,gBAAjB,CAAvB;;AACA,MAAID,cAAJ,EAAoB;AAClB,WAAOF,IAAI,EAAX;AACD;;AAED,MAAMI,UAAU,GAAGrB,oBAAoB,CAACC,UAAD,CAAvC;;AACA,MAAI,CAACoB,UAAL,EAAiB;AACf,WAAOJ,IAAI,EAAX;AACD;;AAbD,2BAegChB,UAAU,CAACC,KAf3C;AAAA,MAeQE,QAfR,sBAeQA,QAfR;AAAA,MAekBD,SAflB,sBAekBA,SAflB;AAgBA,MAAImB,UAAU,GAAGlB,QAAQ,CAACmB,OAAT,CAAiBF,UAAU,CAACT,GAA5B,EAAkCY,MAAnD;AAEA,MAAMC,QAAQ,GAAGrB,QAAQ,CAACsB,kBAAT,CAA4BvB,SAA5B,CAAjB;AAEA,MAAIwB,IAAsB,GAAGF,QAA7B;;AACA,SAAOH,UAAU,KAAKzB,QAAQ,CAAC+B,UAAT,CAAoBD,IAApB,KAA6B/B,KAAK,CAACiC,OAAN,CAAcF,IAAd,CAAlC,CAAjB,EAAyE;AACvEA,IAAAA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,CAAX,CAAP;AACAR,IAAAA,UAAU;AACX;;AAED,MAAI,CAACxB,WAAW,CAACe,aAAZ,CAA0Bc,IAA1B,CAAL,EAAsC;AACpC,WAAOV,IAAI,EAAX;AACD;;AAED,MAAMc,cAAc,GAAGlC,QAAQ,CAACmC,MAAT,CAAgB;AAAEF,IAAAA,KAAK,EAAEH,IAAI,CAACG;AAAd,GAAhB,CAAvB;AACAd,EAAAA,KAAK,CAACE,aAAN,CAAoBe,OAApB,CACElC,UAAU,CAACmC,QADb,EAEEvC,aAAa,CAACwC,cAAd,CAA6BJ,cAA7B,CAFF;AAIA,SAAOd,IAAI,EAAX;AACD","sourcesContent":["import {\n  CangjieClipboardEvent,\n  constants,\n  transferUtils,\n  Node,\n  Block,\n  Controller,\n  Document,\n} from '@ali/4ever-cangjie';\nimport { ColorBlocks } from '@ali/4ever-mo';\n\nconst { MIME_TYPES } = constants;\n\nconst getClosestColorBlock = (controller: Controller) => {\n  const { selection, document } = controller.value;\n  const { anchor, focus } = selection;\n  const { start, end } = selection.convertToTextPoints(document);\n  const startBlock = document.getClosest(start.key, ColorBlocks.isColorBlocks);\n  const endBlock = document.getClosest(end.key, ColorBlocks.isColorBlocks);\n  if (anchor.key === focus.key && anchor.key === startBlock?.key) {\n    return null;\n  }\n  return startBlock === endBlock ? startBlock : null;\n};\n\nexport default function onCangjieCopyOrCut(\n  event: CangjieClipboardEvent,\n  controller: Controller,\n  next,\n) {\n  if (!event.clipboardData) {\n    return next();\n  }\n\n  const tableSelection = controller.query('tableSelection');\n  if (tableSelection) {\n    return next();\n  }\n\n  const colorBlock = getClosestColorBlock(controller);\n  if (!colorBlock) {\n    return next();\n  }\n\n  const { document, selection } = controller.value;\n  let pathLength = document.getPath(colorBlock.key)!.length;\n\n  const fragment = document.getFragmentAtRange(selection);\n\n  let node: Node | undefined = fragment;\n  while (pathLength && (Document.isDocument(node) || Block.isBlock(node))) {\n    node = node.nodes[0];\n    pathLength--;\n  }\n\n  if (!ColorBlocks.isColorBlocks(node)) {\n    return next();\n  }\n\n  const targetFragment = Document.create({ nodes: node.nodes });\n  event.clipboardData.setData(\n    MIME_TYPES.FRAGMENT,\n    transferUtils.encodeFragment(targetFragment),\n  );\n  return next();\n}\n"],"file":"onCangjieCopyOrCut.js"}