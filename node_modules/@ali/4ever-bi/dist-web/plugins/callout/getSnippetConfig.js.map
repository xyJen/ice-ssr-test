{"version":3,"sources":["../../../../src/plugins/callout/getSnippetConfig.tsx"],"names":["fuzzySearch","insertCallout","COLOR_MAP","getSnippetConfig","_","next","trigger","list","Object","keys","config","triggerPrefix","triggerSuffix","fetchItems","map","key","title","filterItems","text","items","searchText","slice","insertSnippet","controller","item","run","type","dispatch","mdType","info","from"],"mappings":";;;AACA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,aAAT;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAKA,IAAMC,gBAA4C,GAAG,SAA/CA,gBAA+C,CAACC,CAAD,EAAIC,IAAJ,EAAa;AAAA;;AAChE,MAAMC,OAAO,GAAG,cAAhB;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYP,SAAZ,CAAb;AAEA,MAAMQ,MAAkC,GAAG;AACzCJ,IAAAA,OAAO,EAAPA,OADyC;AAEzCK,IAAAA,aAAa,EAAE,IAF0B;AAGzCC,IAAAA,aAAa,EAAE,IAH0B;AAIzCC,IAAAA,UAAU;AAAA,iFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,iDACHN,IAAI,CAACO,GAAL,CAAS,UAACC,GAAD;AAAA,yBAAU;AACxBA,oBAAAA,GAAG,EAAHA,GADwB;AAExBC,oBAAAA,KAAK,EAAED;AAFiB,mBAAV;AAAA,iBAAT,CADG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAJ+B;AAUzCE,IAAAA,WAAW;AAAA,kFAAE,kBAAOC,IAAP,EAAqBC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,gBAAAA,UADK,GACQF,IAAI,CAACG,KAAL,CAAW,CAAX,CADR;;AAAA,oBAEND,UAFM;AAAA;AAAA;AAAA;;AAAA,kDAGFD,KAHE;;AAAA;AAAA,kDAKJnB,WAAW,CAACmB,KAAD,EAAQC,UAAR,EAAoB;AAAEL,kBAAAA,GAAG,EAAE;AAAP,iBAApB,CALP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAV8B;AAiBzCO,IAAAA,aAAa,EAAE,uBAACC,UAAD,EAAyBC,IAAzB,EAAkC;AAC/CD,MAAAA,UAAU,CAACE,GAAX,CAAe,UAAf,EAA2BxB,aAAa,CAAC;AAAEiB,QAAAA,IAAI,EAAE,EAAR;AAAYQ,QAAAA,IAAI,EAAEF,IAAI,CAACT;AAAvB,OAAD,CAAxC;AACAQ,MAAAA,UAAU,CAACI,QAAX,CAAoB,6BAApB,EAAmD;AAAEC,QAAAA,MAAM,EAAE,aAAV;AAAyBC,QAAAA,IAAI,EAAEL,IAAI,CAACT,GAApC;AAAyCe,QAAAA,IAAI,EAAE;AAA/C,OAAnD;AACD;AApBwC,GAA3C;AAuBA,6CACGxB,OADH,IACaI,MADb,cAEKL,IAAI,EAFT;AAID,CA/BD;;AAiCA,eAAeF,gBAAf","sourcesContent":["import React from 'react';\nimport { fuzzySearch } from '@ali/4ever-utils';\nimport { Controller, Plugin, SnippetConfig, SnippetItemBase } from '@ali/4ever-cangjie';\nimport { insertCallout } from './actions';\nimport { COLOR_MAP } from '@ali/4ever-plugin-callout';\n\ninterface SnippetItem extends SnippetItemBase {\n}\n\nconst getSnippetConfig: Plugin['getSnippetConfig'] = (_, next) => {\n  const trigger = '[:ï¼š]{3}\\\\w*$';\n  const list = Object.keys(COLOR_MAP);\n\n  const config: SnippetConfig<SnippetItem> = {\n    trigger,\n    triggerPrefix: '^$',\n    triggerSuffix: '^$',\n    fetchItems: async () => {\n      return list.map((key) => ({\n        key,\n        title: key\n      }));\n    },\n    filterItems: async (text: string, items) => {\n      const searchText = text.slice(3);\n      if (!searchText) {\n        return items;\n      }\n      return fuzzySearch(items, searchText, { key: 'key' });\n    },\n    insertSnippet: (controller: Controller, item) => {\n      controller.run('onAction', insertCallout({ text: '', type: item.key as any }));\n      controller.dispatch('createTriggerMarkdownAction', { mdType: 'colorBlocks', info: item.key, from: 'snippet' });\n    },\n  };\n\n  return {\n    [trigger]: config,\n    ...next(),\n  }\n};\n\nexport default getSnippetConfig;"],"file":"getSnippetConfig.js"}