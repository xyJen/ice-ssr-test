import _extends from "@babel/runtime/helpers/extends";
import { StickerPlugin, isEmptyParagraph, CalloutPlugin } from '@ali/4ever-bamboo';
import createRenderNode from "./createRenderNode";
import * as commands from "../commands";
import createOnAction from "../handlers/createOnAction";
import createOnQuery from "../handlers/createOnQuery";
import onKeyDown from "../handlers/onKeyDown";
import onCangjieCopyOrCut from "../handlers/onCangjieCopyOrCut";
import queries from "../queries";
import * as actions from "../actions";
import { moFactory } from '@ali/4ever-plugin-color-blocks';
var DEFAULT_STICKERS = StickerPlugin.DEFAULT_STICKERS,
    Sticker = StickerPlugin.Sticker;

function createCalloutPlugin(config) {
  var _config$callout = config.callout,
      callout = _config$callout === void 0 ? {} : _config$callout;
  var locale = callout.locale;

  var stickerConfig = _extends({
    // @ts-ignore
    lang: 'zh_CN',
    // @ts-ignore
    customSticker: [DEFAULT_STICKERS]
  }, config.sticker);

  var sticker = new Sticker(stickerConfig);
  var params = {
    stickerConfig: stickerConfig,
    sticker: sticker,
    locale: callout.locale
  };
  return _extends({}, moFactory({}), {
    renderNode: createRenderNode(params),
    // Copy Cut 拦截作用于高亮块全选时
    onCangjieCopy: onCangjieCopyOrCut,
    onCangjieCut: onCangjieCopyOrCut,
    onQuery: createOnQuery(),
    onAction: createOnAction(callout),
    getNodeStyle: CalloutPlugin.getNodeStyle,
    // @ts-ignore 这里是 createCommands
    commands: commands,
    onKeyDown: onKeyDown,
    queries: queries,
    placeholder: {
      text: locale == null ? void 0 : locale.placeholder,
      when: function when(controller, node) {
        return isEmptyParagraph(node) && controller.query('getCalloutStartBlock', node) === node && controller.query('getCalloutEndBlock', node) === node;
      }
    }
  });
}

createCalloutPlugin.actions = actions;
export default createCalloutPlugin;
//# sourceMappingURL=index.js.map