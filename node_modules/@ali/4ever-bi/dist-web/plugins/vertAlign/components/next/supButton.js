import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { SuperscriptButton } from '@ali/4ever-component';
import { PluginRoles } from '@ali/4ever-bamboo';
import { toggleSup } from "../../actions";
import { SHORTCUT } from "../../utils";
;
;
;
export default function SupButton(props) {
  var controller = props.controller,
      locale = props.locale,
      tooltipProp = props.tooltip,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale", "tooltip"]);

  var isActive = controller.query('isSup');
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInMention') || controller.query('isSelectionInLink') || controller.query('isSelectionInListSymbol') || controller.query('isSelectionInLinkCard');
  var handleClick = React.useCallback(function () {
    return controller.run('onAction', toggleSup());
  }, [controller]);
  var tooltip = React.useMemo(function () {
    return _extends({
      title: (locale == null ? void 0 : locale.supButtonTitle) || '',
      shortCut: SHORTCUT.sup,
      description: "Markdown: ^" + ((locale == null ? void 0 : locale.text) || 'Text') + "^ " + ((locale == null ? void 0 : locale.space) || 'Space')
    }, tooltipProp);
  }, [tooltipProp]);
  return /*#__PURE__*/_createElement(SuperscriptButton, _extends({
    testid: "bi-toolbar-sup",
    active: isActive,
    disabled: !!isDisabled,
    onClick: handleClick,
    role: PluginRoles.vertAlignSup,
    title: locale == null ? void 0 : locale.supButtonTitle,
    tooltip: tooltip
  }, rest));
}
//# sourceMappingURL=supButton.js.map