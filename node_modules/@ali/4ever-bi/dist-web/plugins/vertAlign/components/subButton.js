import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { SubscriptButton as Button } from '@ali/we-toolbar';
import { PluginRoles } from '@ali/4ever-bamboo';
import { IconButtonShortcut } from '@ali/4ever-component';
;
import { toggleSub } from "../actions";
import { SHORTCUT } from "../utils";
;
export default function SubButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var isActive = controller.query('isSub');
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInMention') || controller.query('isSelectionInLink') || controller.query('isSelectionInListSymbol') || controller.query('isSelectionInLinkCard');
  var handleClick = React.useCallback(function () {
    return controller.run('onAction', toggleSub());
  }, [controller]);
  var title = (locale == null ? void 0 : locale.subButtonTitle) || '';
  var shortCut = SHORTCUT.sub;
  var description = "Markdown: ~" + ((locale == null ? void 0 : locale.text) || 'Text') + "~ + " + ((locale == null ? void 0 : locale.space) || 'Space');
  return /*#__PURE__*/_createElement(Button, _extends({}, rest, {
    shortcutText: SHORTCUT.sub,
    testid: "bi-toolbar-sub",
    active: isActive,
    disabled: !!isDisabled,
    onClick: handleClick,
    role: PluginRoles.vertAlignSub,
    tooltip: /*#__PURE__*/_createElement(IconButtonShortcut, {
      title: title,
      shortcut: shortCut,
      description: description
    })
  }));
}
//# sourceMappingURL=subButton.js.map