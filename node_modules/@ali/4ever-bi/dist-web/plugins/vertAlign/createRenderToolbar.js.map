{"version":3,"sources":["../../../../src/plugins/vertAlign/createRenderToolbar.tsx"],"names":["React","ItemSlot","SlotType","SubButton","SupButton","ScriptSplitButton","buttons","createRenderToolbar","locale","props","controller","buttonName","extraProps","splitButton","Component","iconButton"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAsEC,QAAtE,EAAgFC,QAAhF,QAAgG,sBAAhG;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,iBAAP;AAIA,IAAMC,OAAwF,GAAG;AAC/F,uBAAqBH,SAD0E;AAE/F,uBAAqBC;AAF0E,CAAjG;AAKA,eAAe,SAASG,mBAAT,CACbC,MADa,EAEE;AAEf,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAuB;AAAA,QAEpBC,UAFoB,GAEOF,KAFP,CAEpBE,UAFoB;AAAA,QAERC,UAFQ,GAEOH,KAFP,CAERG,UAFQ;;AAI5B,QAAID,UAAU,KAAK,WAAf,IAA8BA,UAAU,KAAK,mBAAjD,EAAsE;AACpE,0BACE,eAAC,QAAD;AAAU,QAAA,OAAO,EAAET,QAAQ,CAACW;AAA5B,sBACE,eAAC,iBAAD;AACE,QAAA,UAAU,EAAEH,UADd;AAEE,QAAA,MAAM,EAAEF;AAFV,SAGMI,UAHN,EADF,CADF;AASD;;AAED,QAAME,SAAS,GAAGR,OAAO,CAACK,UAAD,CAAzB;;AACA,QAAIG,SAAJ,EAAe;AACb,0BACE,eAAC,QAAD;AAAU,QAAA,OAAO,EAAEZ,QAAQ,CAACa;AAA5B,sBACE,eAAC,SAAD;AACE,QAAA,UAAU,EAAEL,UADd;AAEE,QAAA,MAAM,EAAEF;AAFV,SAGMI,UAHN,EADF,CADF;AASD;;AAED,WAAO,IAAP;AACD,GA9BD;AA+BD","sourcesContent":["import * as React from 'react';\nimport { RenderToolbar, ItemKeys, IBasicButton, IToolbarButtonConfig, ItemSlot, SlotType } from '@ali/4ever-component';\nimport SubButton, { SubButtonProps } from './components/next/subButton';\nimport SupButton, { SupButtonProps } from './components/next/supButton';\nimport ScriptSplitButton from './components/next/scriptSplitButton';\n\n\n\nconst buttons: Partial<Record<ItemKeys, React.ComponentType<SubButtonProps | SupButtonProps>>> = {\n  'vertAlign.subMark': SubButton,\n  'vertAlign.supMark': SupButton,\n}\n\nexport default function createRenderToolbar(\n  locale: Record<string, string>,\n): RenderToolbar {\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    if (buttonName === 'vertAlign' || buttonName === 'vertAlign.default') {\n      return (\n        <ItemSlot display={SlotType.splitButton}>\n          <ScriptSplitButton\n            controller={controller}\n            locale={locale}\n            {...extraProps}\n          />\n        </ItemSlot>\n      );\n    }\n\n    const Component = buttons[buttonName]\n    if (Component) {\n      return (\n        <ItemSlot display={SlotType.iconButton}>\n          <Component\n            controller={controller}\n            locale={locale}\n            {...extraProps}\n          />\n        </ItemSlot>\n      )\n    }\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}