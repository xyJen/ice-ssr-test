{"version":3,"sources":["../../../../../src/plugins/vertAlign/commands/toggleVertAlignMark.ts"],"names":["Commands","Mark","toggleVertAlignMark","controller","ranges","alignType","alignMark","create","type","data","value","selection","activeAlignMark","activeMarks","find","m","length","isCollapsed","command","addMark","removeMark","forEach","range","addMarkAtRange","removeMarkAtRange"],"mappings":"AAAA,SAAqBA,QAArB,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,eAAe,SAASC,mBAAT,CAA6BC,UAA7B,EAAqDC,MAArD,EAA6DC,SAA7D,EAAwE;AACrF,MAAMC,SAAS,GAAGL,IAAI,CAACM,MAAL,CAAY;AAC5BC,IAAAA,IAAI,EAAE,WADsB;AAE5BC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAEL;AAAT;AAFsB,GAAZ,CAAlB;AADqF,MAK7EK,KAL6E,GAKnEP,UALmE,CAK7EO,KAL6E;AAAA,MAM7EC,SAN6E,GAM/DD,KAN+D,CAM7EC,SAN6E;AAOrF,MAAMC,eAAe,GAAGF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACP,IAAF,KAAW,WAAf;AAAA,GAAxB,CAAxB;;AAEA,MAAKJ,MAAM,CAACY,MAAP,KAAkB,CAAnB,IAAyBL,SAAzB,IAAsCA,SAAS,CAACM,WAApD,EAAiE;AAC/D,QAAI,CAACL,eAAL,EAAsB;AACpB,aAAOT,UAAU,CAACe,OAAX,CAAmBlB,QAAQ,CAACmB,OAA5B,EAAqCb,SAArC,CAAP;AACD;;AACD,QAAIM,eAAe,CAACH,IAAhB,CAAqBC,KAArB,KAA+BL,SAAnC,EAA8C;AAC5C,aAAOF,UAAU,CACde,OADI,CACIlB,QAAQ,CAACoB,UADb,EACyBR,eADzB,EAEJM,OAFI,CAEIlB,QAAQ,CAACmB,OAFb,EAEsBb,SAFtB,CAAP;AAGD;;AACDH,IAAAA,UAAU,CAACe,OAAX,CAAmBlB,QAAQ,CAACoB,UAA5B,EAAwCd,SAAxC;AACD,GAVD,MAUO;AACLF,IAAAA,MAAM,CAACiB,OAAP,CAAe,UAACC,KAAD,EAAW;AACxB,UAAI,CAACV,eAAL,EAAsB;AACpB,eAAOT,UAAU,CAACe,OAAX,CAAmBlB,QAAQ,CAACuB,cAA5B,EAA4CD,KAA5C,EAAmDhB,SAAnD,CAAP;AACD;;AACD,UAAIM,eAAe,CAACH,IAAhB,CAAqBC,KAArB,KAA+BL,SAAnC,EAA8C;AAC5C,eAAOF,UAAU,CACde,OADI,CACIlB,QAAQ,CAACwB,iBADb,EACgCF,KADhC,EACuCV,eADvC,EAEJM,OAFI,CAEIlB,QAAQ,CAACuB,cAFb,EAE6BD,KAF7B,EAEoChB,SAFpC,CAAP;AAGD;;AACD,aAAOH,UAAU,CAACe,OAAX,CAAmBlB,QAAQ,CAACwB,iBAA5B,EAA+CF,KAA/C,EAAsDhB,SAAtD,CAAP;AACD,KAVD;AAWD;;AACD,SAAOH,UAAP;AACD","sourcesContent":["import { Controller, Commands, Mark } from '@ali/4ever-cangjie';\n\nexport default function toggleVertAlignMark(controller: Controller, ranges, alignType) {\n  const alignMark = Mark.create({\n    type: 'vertAlign',\n    data: { value: alignType },\n  });\n  const { value } = controller;\n  const { selection } = value;\n  const activeAlignMark = value.activeMarks.find(m => m.type === 'vertAlign');\n\n  if ((ranges.length === 1) && selection && selection.isCollapsed) {\n    if (!activeAlignMark) {\n      return controller.command(Commands.addMark, alignMark);\n    }\n    if (activeAlignMark.data.value !== alignType) {\n      return controller\n        .command(Commands.removeMark, activeAlignMark)\n        .command(Commands.addMark, alignMark);\n    }\n    controller.command(Commands.removeMark, alignMark);\n  } else {\n    ranges.forEach((range) => {\n      if (!activeAlignMark) {\n        return controller.command(Commands.addMarkAtRange, range, alignMark);\n      }\n      if (activeAlignMark.data.value !== alignType) {\n        return controller\n          .command(Commands.removeMarkAtRange, range, activeAlignMark)\n          .command(Commands.addMarkAtRange, range, alignMark);\n      }\n      return controller.command(Commands.removeMarkAtRange, range, alignMark);\n    });\n  }\n  return controller;\n}\n"],"file":"toggleVertAlignMark.js"}