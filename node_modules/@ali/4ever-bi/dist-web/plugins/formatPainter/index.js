import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import menubar from "./menubar";
import toolbar from "./toolbar";
import FormatPainterWrapper from "./components/formatPainterWrapper";
import * as actions from "./actions";
import onAction from "./handlers/onAction";
import onKeyDown from "./handlers/onKeyDown";
import onMouseUp from "./handlers/onMouseUp";
import createRenderToolbar from "./createRenderToolbar";
import { queries } from "./queries";

var createOnKeydown = function createOnKeydown(docStyleReference) {
  return onKeyDown(docStyleReference);
};

function createFormatPainterPlugin(config) {
  var formatPainterConfig = config.formatPainter || {}; // 需要在 onKeydown 里访问 React context，没有想到好的办法，使用闭包传入

  var docStyleReference = {};

  var onDocStyleChange = function onDocStyleChange(style) {
    docStyleReference.docStyle = style;
  };

  return {
    toolbar: toolbar(formatPainterConfig),
    renderToolbar: createRenderToolbar(formatPainterConfig.locale),
    menubar: menubar(formatPainterConfig),
    renderEditable: function renderEditable(props, editor, next) {
      return (
        /*#__PURE__*/
        // @ts-ignore
        _createElement(FormatPainterWrapper, _extends({}, props, {
          controller: editor,
          onDocStyleChange: onDocStyleChange
        }), next())
      );
    },
    queries: queries,
    onAction: onAction,
    onKeyDown: createOnKeydown(docStyleReference),
    onMouseUp: onMouseUp,
    models: []
  };
}

createFormatPainterPlugin.actions = actions;
export default createFormatPainterPlugin;
//# sourceMappingURL=index.js.map