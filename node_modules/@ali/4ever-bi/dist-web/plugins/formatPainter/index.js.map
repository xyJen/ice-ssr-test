{"version":3,"sources":["../../../../src/plugins/formatPainter/index.tsx"],"names":["React","menubar","toolbar","FormatPainterWrapper","actions","onAction","onKeyDown","onMouseUp","createRenderToolbar","queries","createOnKeydown","docStyleReference","createFormatPainterPlugin","config","formatPainterConfig","formatPainter","onDocStyleChange","style","docStyle","renderToolbar","locale","renderEditable","props","editor","next","models"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAE5B,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAOC,oBAAP;AACA,OAAO,KAAKC,OAAZ;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,mBAAP;AACA,SAASC,OAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,iBAAD,EAA2C;AACjE,SAAOL,SAAS,CAACK,iBAAD,CAAhB;AACD,CAFD;;AAIA,SAASC,yBAAT,CAAmCC,MAAnC,EAAqD;AACnD,MAAMC,mBAAmB,GAAGD,MAAM,CAACE,aAAP,IAAwB,EAApD,CADmD,CAEnD;;AACA,MAAMJ,iBAAoC,GAAG,EAA7C;;AACA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAsB;AAC7CN,IAAAA,iBAAiB,CAACO,QAAlB,GAA6BD,KAA7B;AACD,GAFD;;AAIA,SAAO;AACLf,IAAAA,OAAO,EAAEA,OAAO,CAACY,mBAAD,CADX;AAELK,IAAAA,aAAa,EAAEX,mBAAmB,CAACM,mBAAmB,CAACM,MAArB,CAF7B;AAGLnB,IAAAA,OAAO,EAAEA,OAAO,CAACa,mBAAD,CAHX;AAILO,IAAAA,cAJK,0BAIUC,KAJV,EAIiBC,MAJjB,EAIyBC,IAJzB,EAI+B;AAClC;AAAA;AACE;AACA,uBAAC,oBAAD,eACMF,KADN;AAEE,UAAA,UAAU,EAAEC,MAFd;AAGE,UAAA,gBAAgB,EAAEP;AAHpB,YAKGQ,IAAI,EALP;AAFF;AAUD,KAfI;AAgBLf,IAAAA,OAAO,EAAPA,OAhBK;AAiBLJ,IAAAA,QAAQ,EAARA,QAjBK;AAkBLC,IAAAA,SAAS,EAAEI,eAAe,CAACC,iBAAD,CAlBrB;AAmBLJ,IAAAA,SAAS,EAATA,SAnBK;AAoBLkB,IAAAA,MAAM,EAAE;AApBH,GAAP;AAsBD;;AAEDb,yBAAyB,CAACR,OAA1B,GAAoCA,OAApC;AAEA,eAAeQ,yBAAf","sourcesContent":["import * as React from 'react';\nimport { DocStyle } from '@ali/4ever-cangjie';\nimport { BiPlugin } from '../../types';\nimport menubar from './menubar';\nimport toolbar from './toolbar';\nimport FormatPainterWrapper from './components/formatPainterWrapper';\nimport * as actions from './actions';\nimport onAction from './handlers/onAction';\nimport onKeyDown, { DocStyleReference } from './handlers/onKeyDown';\nimport onMouseUp from './handlers/onMouseUp';\nimport createRenderToolbar from './createRenderToolbar';\nimport { queries } from './queries';\n\nconst createOnKeydown = (docStyleReference?: DocStyleReference) => {\n  return onKeyDown(docStyleReference);\n};\n\nfunction createFormatPainterPlugin(config): BiPlugin {\n  const formatPainterConfig = config.formatPainter || {};\n  // 需要在 onKeydown 里访问 React context，没有想到好的办法，使用闭包传入\n  const docStyleReference: DocStyleReference = {};\n  const onDocStyleChange = (style?: DocStyle) => {\n    docStyleReference.docStyle = style;\n  };\n\n  return {\n    toolbar: toolbar(formatPainterConfig),\n    renderToolbar: createRenderToolbar(formatPainterConfig.locale),\n    menubar: menubar(formatPainterConfig),\n    renderEditable(props, editor, next) {\n      return (\n        // @ts-ignore\n        <FormatPainterWrapper\n          {...props}\n          controller={editor}\n          onDocStyleChange={onDocStyleChange}\n        >\n          {next()}\n        </FormatPainterWrapper>\n      );\n    },\n    queries,\n    onAction,\n    onKeyDown: createOnKeydown(docStyleReference),\n    onMouseUp,\n    models: [],\n  };\n}\n\ncreateFormatPainterPlugin.actions = actions;\n\nexport default createFormatPainterPlugin;\n"],"file":"index.js"}