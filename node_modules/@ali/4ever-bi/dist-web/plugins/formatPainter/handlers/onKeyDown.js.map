{"version":3,"sources":["../../../../../src/plugins/formatPainter/handlers/onKeyDown.ts"],"names":["isKeyHotkey","getDocDefaultSz","onCopyFormat","onPasteFormat","clearFormatClipboard","isCopyFormatHotKey","isPasteFormatHotKey","isEscape","onKeyDown","docStyleReference","event","controller","next","docStyle","formatClipboard","value","data","isActive","trigger","run"],"mappings":"AACA,SAASA,WAAT,QAA4B,WAA5B;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,SAASC,oBAAT;AAEA,IAAMC,kBAAkB,GAAGL,WAAW,CAAC,aAAD,CAAtC;AACA,IAAMM,mBAAmB,GAAGN,WAAW,CAAC,aAAD,CAAvC;AACA,IAAMO,QAAQ,GAAGP,WAAW,CAAC,QAAD,CAA5B;AAMA,eAAe,SAASQ,SAAT,CAAmBC,iBAAnB,EAA0D;AACvE,SAAO,UAACC,KAAD,EAA6BC,UAA7B,EAAqDC,IAArD,EAA0E;AAC/E,QAAIP,kBAAkB,CAACK,KAAD,CAAtB,EAA+B;AAC7B,aAAOR,YAAY,CAACQ,KAAD,EAAQC,UAAR,EAAoBV,eAAe,CAACQ,iBAAD,oBAACA,iBAAiB,CAAEI,QAApB,CAAnC,CAAnB;AACD;;AAED,QAAIP,mBAAmB,CAACI,KAAD,CAAvB,EAAgC;AAC9B,aAAOP,aAAa,CAACO,KAAD,EAAQC,UAAR,EAAoBC,IAApB,CAApB;AACD;;AAED,QAAIL,QAAQ,CAACG,KAAD,CAAZ,EAAqB;AAAA,UACXI,eADW,GACSH,UAAU,CAACI,KAAX,CAAiBC,IAD1B,CACXF,eADW;AAEnB,UAAMG,QAAQ,GAAGH,eAAe,IAAIA,eAAe,CAACI,OAAhB,KAA4B,SAAhE;;AACA,UAAID,QAAJ,EAAc;AACZN,QAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2Bf,oBAAoB,EAA/C;AACD;AACF;;AAED,WAAOQ,IAAI,EAAX;AACD,GAlBD;AAmBD","sourcesContent":["import React from 'react';\nimport { isKeyHotkey } from 'is-hotkey';\nimport { DocStyle, Controller } from '@ali/4ever-cangjie';\nimport { getDocDefaultSz } from '@ali/4ever-component';\nimport onCopyFormat from './onCopyFormat';\nimport onPasteFormat from './onPasteFormat';\nimport { clearFormatClipboard } from '../actions';\n\nconst isCopyFormatHotKey = isKeyHotkey('mod+shift+c');\nconst isPasteFormatHotKey = isKeyHotkey('mod+shift+v');\nconst isEscape = isKeyHotkey('escape');\n\nexport interface DocStyleReference {\n  docStyle?: DocStyle;\n}\n\nexport default function onKeyDown(docStyleReference?: DocStyleReference) {\n  return (event: React.KeyboardEvent, controller: Controller, next: () => void) => {\n    if (isCopyFormatHotKey(event)) {\n      return onCopyFormat(event, controller, getDocDefaultSz(docStyleReference?.docStyle));\n    }\n\n    if (isPasteFormatHotKey(event)) {\n      return onPasteFormat(event, controller, next);\n    }\n\n    if (isEscape(event)) {\n      const { formatClipboard } = controller.value.data;\n      const isActive = formatClipboard && formatClipboard.trigger === 'toolbar';\n      if (isActive) {\n        controller.run('onAction', clearFormatClipboard());\n      }\n    }\n\n    return next();\n  };\n}\n"],"file":"onKeyDown.js"}