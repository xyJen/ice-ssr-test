{"version":3,"sources":["../../../../src/plugins/formatPainter/createRenderToolbar.tsx"],"names":["React","ItemSlot","SlotType","FormatPainterButton","buttons","createRenderToolbar","locale","props","controller","buttonName","extraProps","Component","iconButton"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAmBC,QAAnB,EAA4CC,QAA5C,QAA4D,sBAA5D;AACA,OAAOC,mBAAP;AAEA,IAAMC,OAAiF,GAAG;AACxF,mBAAiBD;AADuE,CAA1F;AAIA,eAAe,SAASE,mBAAT,CACbC,MADa,EAEE;AAGf,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAuB;AAAA,QAEpBC,UAFoB,GAEOF,KAFP,CAEpBE,UAFoB;AAAA,QAERC,UAFQ,GAEOH,KAFP,CAERG,UAFQ;AAI5B,QAAMC,SAAS,GAAGP,OAAO,CAACK,UAAD,CAAzB;;AACA,QAAIE,SAAJ,EAAe;AACb,0BACE,eAAC,QAAD;AAAU,QAAA,OAAO,EAAET,QAAQ,CAACU;AAA5B,sBACE,eAAC,SAAD;AACE,QAAA,UAAU,EAAEJ,UADd;AAEE,QAAA,MAAM,EAAEF;AAFV,SAGMI,UAHN,EADF,CADF;AASD;;AAED,WAAO,IAAP;AACD,GAlBD;AAmBD","sourcesContent":["import * as React from 'react';\nimport { ItemKeys, ItemSlot, RenderToolbar, SlotType } from '@ali/4ever-component';\nimport FormatPainterButton, { FormatPainterButtonProps } from './components/next/FormatPainterButton';\n\nconst buttons: Partial<Record<ItemKeys, React.ComponentType<FormatPainterButtonProps>>> = {\n  'formatPainter': FormatPainterButton\n};\n\nexport default function createRenderToolbar(\n  locale: Record<string, string>,\n): RenderToolbar {\n\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    const Component = buttons[buttonName] as React.ComponentType<FormatPainterButtonProps>;\n    if (Component) {\n      return (\n        <ItemSlot display={SlotType.iconButton}>\n          <Component\n            controller={controller}\n            locale={locale}\n            {...extraProps}\n          />\n        </ItemSlot>\n      )\n    }\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}