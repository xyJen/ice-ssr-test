{"version":3,"sources":["../../../../../src/plugins/formatPainter/components/formatPainterMenu.tsx"],"names":["React","environment","MenuItem","copyFormat","clearFormatClipboard","MOD","IS_MAC","CLEAR_STYLE_HOT_KEY","FormatPainterMenu","props","menuItem","controller","locale","title","rest","value","formatClipboard","data","isActive","trigger","isCollapsedAtEdge","selection","isDisabled","edgeSelection","query","handleClick","useCallback","run","buttonTitle"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAqBC,WAArB,QAAwC,oBAAxC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA;AACA;AACA,SAASC,UAAT,EAAqBC,oBAArB;AAEA,IAAMC,GAAG,GAAGJ,WAAW,CAACK,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;AAEA,OAAO,IAAMC,mBAAmB,GAAMF,GAAN,QAAzB;AAEP,eAAe,SAASG,iBAAT,CAA2BC,KAA3B,EAAsD;AAAA,MAC3DC,QAD2D,GAC1BD,KAD0B,CAC3DC,QAD2D;AAAA,MACjDC,UADiD,GAC1BF,KAD0B,CACjDE,UADiD;AAAA,MACrCC,MADqC,GAC1BH,KAD0B,CACrCG,MADqC;;AAAA,MAE3DC,KAF2D,GAExCH,QAFwC,CAE3DG,KAF2D;AAAA,MAEjDC,IAFiD,iCAExCJ,QAFwC;;AAAA,MAG3DK,KAH2D,GAGjDJ,UAHiD,CAG3DI,KAH2D;AAAA,MAI3DC,eAJ2D,GAIvCD,KAAK,CAACE,IAJiC,CAI3DD,eAJ2D;AAKnE,MAAME,QAAQ,GAAGF,eAAe,IAAIA,eAAe,CAACG,OAAhB,KAA4B,SAAhE,CALmE,CAMnE;;AANmE,MAO3DC,iBAP2D,GAOrCL,KAAK,CAACM,SAP+B,CAO3DD,iBAP2D;AAQnE,MAAME,UAAU,GAAGF,iBAAiB,IAC/BL,KAAK,CAACE,IAAN,CAAWM,aADG,IAEdZ,UAAU,CAACa,KAAX,CAAiB,iBAAjB,CAFc,IAGdb,UAAU,CAACa,KAAX,CAAiB,oBAAjB,CAHc,IAIdb,UAAU,CAACa,KAAX,CAAiB,sBAAjB,CAJc,IAKdb,UAAU,CAACa,KAAX,CAAiB,yBAAjB,CALc,IAMdb,UAAU,CAACa,KAAX,CAAiB,uBAAjB,CANL;AAQA,MAAMC,WAAW,GAAGzB,KAAK,CAAC0B,WAAN,CAAkB,YAAM;AAC1C,QAAI,CAACV,eAAL,EAAsB;AACpBL,MAAAA,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2BxB,UAAU,CAAC,QAAD,CAArC;AACA;AACD;;AACDQ,IAAAA,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2BvB,oBAAoB,EAA/C;AACD,GANmB,EAMjB,CAACO,UAAD,EAAaK,eAAb,CANiB,CAApB;AAQA,sBACE,eAAC,QAAD,eACMF,IADN;AAEE,IAAA,QAAQ,EAAEQ,UAFZ;AAGE,IAAA,OAAO,EAAEG,WAHX;AAIE,IAAA,MAAM,EAAE;AAJV,MAMGZ,KAAK,KAAID,MAAJ,oBAAIA,MAAM,CAAEgB,WAAZ,CANR,CADF;AAUD","sourcesContent":["import * as React from 'react';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport { MenuItem } from '@ali/we-design';\nimport { MenuItemInnerProps } from '@ali/4ever-component';\n;\n;\nimport { copyFormat, clearFormatClipboard } from '../actions';\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\n\nexport const CLEAR_STYLE_HOT_KEY = `${MOD}+\\\\`;\n\nexport default function FormatPainterMenu(props: MenuItemInnerProps) {\n  const { menuItem, controller, locale } = props;\n  const { title, ...rest } = menuItem;\n  const { value } = controller;\n  const { formatClipboard } = value.data;\n  const isActive = formatClipboard && formatClipboard.trigger === 'toolbar';\n  // const shortcutText = locale.doubleTitle || '';\n  const { isCollapsedAtEdge } = value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || value.data.edgeSelection\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleClick = React.useCallback(() => {\n    if (!formatClipboard) {\n      controller.run('onAction', copyFormat('single'));\n      return;\n    }\n    controller.run('onAction', clearFormatClipboard());\n  }, [controller, formatClipboard]);\n\n  return (\n    <MenuItem\n      {...rest}\n      disabled={isDisabled}\n      onClick={handleClick}\n      testid={'bi-toolbar-clearstyle'}\n    >\n      {title || locale?.buttonTitle}\n    </MenuItem>\n  );\n}\n"],"file":"formatPainterMenu.js"}