{"version":3,"sources":["../../../../../src/plugins/subject/handlers/createOnAction.ts"],"names":["Commands","TOGGLE_FINISHED","INSERT_SUBJECT","INSERT_BLOCK","HIGHLIGHT_SUBJECT","highlightSubject","insertSubject","toggleFinished","createOnAction","onAction","action","controller","next","type","payload","node","finished","command","direction","properties","blockProps","insertBlock","subjectId","highlight"],"mappings":"AAAA,SAASA,QAAT,QAAiC,oBAAjC;AACA,SACEC,eADF,EAGEC,cAHF,EAKEC,YALF,EAOEC,iBAPF;AAUA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,cAA1C;;AAEA,SAASC,cAAT,GAA8C;AAC5C,SAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4C;AAAA,QACzCC,IADyC,GACvBH,MADuB,CACzCG,IADyC;AAAA,QACnCC,OADmC,GACvBJ,MADuB,CACnCI,OADmC;;AAGjD,QAAID,IAAI,KAAKZ,eAAb,EAA8B;AAAA,iBACDa,OADC;AAAA,UACpBC,IADoB,QACpBA,IADoB;AAAA,UACdC,QADc,QACdA,QADc;AAE5B,aAAOL,UAAU,CAACM,OAAX,CAAmBV,cAAnB,EAAmCQ,IAAnC,EAAyCC,QAAzC,CAAP;AACD;;AAED,QAAIH,IAAI,KAAKX,cAAb,EAA6B;AAAA,kBACaY,OADb;AAAA,UACnBC,KADmB,SACnBA,IADmB;AAAA,UACbG,SADa,SACbA,SADa;AAAA,UACFC,UADE,SACFA,UADE;AAE3B,aAAOR,UAAU,CAACM,OAAX,CAAmBX,aAAnB,EAAkCa,UAAlC,EAA8CJ,KAA9C,EAAoDG,SAApD,CAAP;AACD;;AAED,QAAIL,IAAI,KAAKV,YAAb,EAA2B;AAAA,kBACFW,OADE;AAAA,UACjBM,UADiB,SACjBA,UADiB;AAEzB,aAAOT,UAAU,CAACM,OAAX,CAAmBjB,QAAQ,CAACqB,WAA5B,EAAyCD,UAAzC,CAAP;AACD;;AAED,QAAIP,IAAI,KAAKT,iBAAb,EAAgC;AAAA,kBACGU,OADH;AAAA,UACtBQ,SADsB,SACtBA,SADsB;AAAA,UACXC,SADW,SACXA,SADW;AAE9B,aAAOZ,UAAU,CAACM,OAAX,CAAmBZ,gBAAnB,EAAqCiB,SAArC,EAAgDC,SAAhD,CAAP;AACD;;AAED,WAAOX,IAAI,EAAX;AACD,GAxBD;AAyBD;;AAED,eAAeJ,cAAf","sourcesContent":["import { Commands, Plugin } from '@ali/4ever-cangjie';\nimport {\n  TOGGLE_FINISHED,\n  ToggleFinishedPayload,\n  INSERT_SUBJECT,\n  InsertSubjectPayload,\n  INSERT_BLOCK,\n  InsertBlockPayload,\n  HIGHLIGHT_SUBJECT,\n  HighlightSubjectPayload,\n} from '../actions';\nimport { highlightSubject, insertSubject, toggleFinished } from '../commands';\n\nfunction createOnAction(): Plugin['onAction'] {\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n\n    if (type === TOGGLE_FINISHED) {\n      const { node, finished } = payload as ToggleFinishedPayload;\n      return controller.command(toggleFinished, node, finished);\n    }\n\n    if (type === INSERT_SUBJECT) {\n      const { node, direction, properties } = payload as InsertSubjectPayload;\n      return controller.command(insertSubject, properties, node, direction);\n    }\n\n    if (type === INSERT_BLOCK) {\n      const { blockProps } = payload as InsertBlockPayload;\n      return controller.command(Commands.insertBlock, blockProps);\n    }\n\n    if (type === HIGHLIGHT_SUBJECT) {\n      const { subjectId, highlight } = payload as HighlightSubjectPayload;\n      return controller.command(highlightSubject, subjectId, highlight);\n    }\n\n    return next();\n  };\n}\n\nexport default createOnAction;\n"],"file":"createOnAction.js"}