import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import classnames from 'classnames';
var ButtonBox = /*#__PURE__*/styled.div(["position:relative;display:flex;align-items:center;justify-content:center;padding:0 7px;height:26px;width:fit-content;border-radius:4px;cursor:pointer;background:none;outline:none;border:0;transform-origin:50% 50%;background-color:#FFF;color:#FFF;background-color:rgb(0,137,255);&:not(.finished):hover{background-color:rgb(93,159,255);}&:not(.finished):active{background-color:rgb(57,95,212);}&.finished{color:rgb(186,187,189);background-color:#FFF;box-shadow:0 0 0 1px rgb(223,225,227);}"]);

var FinishButton = function FinishButton(props) {
  var finished = props.finished,
      text = props.text,
      className = props.className,
      rest = _objectWithoutPropertiesLoose(props, ["finished", "text", "className"]);

  var finishedRef = React.useRef(finished);
  var classNames = classnames(className, {
    finished: finished,
    'finish-in': !finishedRef.current && finished
  });
  finishedRef.current = finished;
  return /*#__PURE__*/_createElement(ButtonBox, _extends({}, rest, {
    className: classNames
  }), text);
};

FinishButton.displayName = 'FinishButton';
export default FinishButton;
//# sourceMappingURL=finishButton.js.map