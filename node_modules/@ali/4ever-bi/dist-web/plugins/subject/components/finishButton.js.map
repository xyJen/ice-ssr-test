{"version":3,"sources":["../../../../../src/plugins/subject/components/finishButton.tsx"],"names":["React","styled","classnames","ButtonBox","div","FinishButton","props","finished","text","className","rest","finishedRef","useRef","classNames","current","displayName"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAGA,IAAMC,SAAS,gBAAGF,MAAM,CAACG,GAAV,6eAAf;;AAuCA,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,CAACC,KAAD,EAAW;AAAA,MACnDC,QADmD,GACZD,KADY,CACnDC,QADmD;AAAA,MACzCC,IADyC,GACZF,KADY,CACzCE,IADyC;AAAA,MACnCC,SADmC,GACZH,KADY,CACnCG,SADmC;AAAA,MACrBC,IADqB,iCACZJ,KADY;;AAG3D,MAAMK,WAAW,GAAGX,KAAK,CAACY,MAAN,CAAaL,QAAb,CAApB;AAEA,MAAMM,UAAU,GAAGX,UAAU,CAACO,SAAD,EAAY;AACvCF,IAAAA,QAAQ,EAARA,QADuC;AAEvC,iBAAa,CAACI,WAAW,CAACG,OAAb,IAAwBP;AAFE,GAAZ,CAA7B;AAKAI,EAAAA,WAAW,CAACG,OAAZ,GAAsBP,QAAtB;AAEA,sBACE,eAAC,SAAD,eAAeG,IAAf;AAAqB,IAAA,SAAS,EAAEG;AAAhC,MACGL,IADH,CADF;AAKD,CAjBD;;AAmBAH,YAAY,CAACU,WAAb,GAA2B,cAA3B;AAEA,eAAeV,YAAf","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\n\nconst ButtonBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 7px;\n  height: 26px;\n  width: fit-content;\n  border-radius: 4px;\n  cursor: pointer;\n  background: none;\n  outline: none;\n  border: 0;\n  transform-origin: 50% 50%;\n  background-color: #FFF;\n  color: #FFF;\n  background-color: rgb(0, 137, 255);\n\n  &:not(.finished):hover {\n    background-color: rgb(93, 159, 255);\n  }\n  &:not(.finished):active {\n    background-color: rgb(57, 95, 212);\n  }\n\n  &.finished {\n    color: rgb(186, 187, 189);\n    background-color: #FFF;\n    box-shadow: 0 0 0 1px rgb(223, 225, 227);\n  }\n  \n`;\n\n\nexport interface FinishButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  finished: boolean;\n  text?: string;\n}\n\nconst FinishButton: React.FC<FinishButtonProps> = (props) => {\n  const { finished, text, className, ...rest } = props;\n\n  const finishedRef = React.useRef(finished);\n\n  const classNames = classnames(className, {\n    finished,\n    'finish-in': !finishedRef.current && finished,\n  });\n\n  finishedRef.current = finished;\n\n  return (\n    <ButtonBox {...rest} className={classNames}>\n      {text}\n    </ButtonBox>\n  );\n};\n\nFinishButton.displayName = 'FinishButton';\n\nexport default FinishButton;\n"],"file":"finishButton.js"}