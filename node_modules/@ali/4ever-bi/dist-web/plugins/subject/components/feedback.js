import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled, { keyframes } from 'styled-components';
import classnames from 'classnames';
var fadeIn = /*#__PURE__*/keyframes(["0%{opacity:0;transform:translate(0,20%);}80%{opacity:1;transform:translate(0,-5%);}100%{transform:translate(0,0);}"]);
var fadeOut = /*#__PURE__*/keyframes(["0%{opacity:1;transform:translate(0,0);}100%{opacity:0;transform:translate(0,20%);}"]);
var FeedbackBox = /*#__PURE__*/styled.div(["display:flex;align-items:center;white-space:nowrap;background:#FFFFFF;box-shadow:0px 2px 6px rgba(0,0,0,0.0823864);border-radius:4px;font-size:12px;color:rgba(17,31,44,0.65);cursor:default;&.fade-in{animation-name:", ";animation-duration:0.4s;}&.fade-out{animation-name:", ";animation-duration:0.4s;}"], fadeIn, fadeOut);

var Feedback = function Feedback(props) {
  var visible = props.visible,
      children = props.children,
      className = props.className,
      rest = _objectWithoutPropertiesLoose(props, ["visible", "children", "className"]);

  var _React$useState = React.useState(visible),
      internalVisible = _React$useState[0],
      setInternalVisible = _React$useState[1];

  var _React$useState2 = React.useState(false),
      animate = _React$useState2[0],
      setAnimate = _React$useState2[1];

  var visibleRef = React.useRef(visible);
  var handleAnimationEnd = React.useCallback(function () {
    setAnimate(false);
    setInternalVisible(visible);
  }, [visible]);
  React.useEffect(function () {
    if (visible !== visibleRef.current) {
      setAnimate(true);
      setInternalVisible(true);
      visibleRef.current = visible;
    }
  }, [visible]);
  var classNames = classnames(className, {
    'fade-in': animate && visible,
    'fade-out': animate && !visible
  });

  if (!internalVisible) {
    return null;
  }

  return /*#__PURE__*/_createElement(FeedbackBox, _extends({}, rest, {
    className: classNames,
    onAnimationEnd: handleAnimationEnd
  }), children);
};

Feedback.displayName = 'FeedbackBox';
export default Feedback;
//# sourceMappingURL=feedback.js.map