{"version":3,"sources":["../../../../../src/plugins/subject/queries/selection.ts"],"names":["EdgePoint","Path","isSubjectHeading","SubjectPlugin","SELECTED_SUBJECT_KEY","SUBJECT_PADDING_LEFT","getSubjectEndBlock","queries","isSelectionInSubjectHeading","controller","selection","value","document","blocks","getRootBlocksAtRange","some","block","isSelectionCoverSubjectFromStart","subject","start","getStart","startBlock","getFurthsestBlock","key","isAtStartOfNode","end","getEnd","endBlock","subjectEndBlock","query","isAtEndOfNode","endPath","getPath","subjectEndPath","isAfter","isSelectionCoverSubject","isCoverStart","isBefore","assertPath","isCoverEnd","isSubjectSelected","node","data","getSubjectRange","moveAnchorToStartOfNode","moveFocusToEndOfNode","getSubjectFragment","getFragmentAtRange","getCaretOffset","isExpanded","point","anchor","isEdgePoint","edge","BEFORE","left"],"mappings":"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","sourcesContent":["import { Block, Controller, EdgePoint, Path, Selection } from '@ali/4ever-cangjie';\nimport { isSubjectHeading, Subject } from '../utils';\nimport { SubjectPlugin } from '@ali/4ever-bamboo';\nimport { SELECTED_SUBJECT_KEY } from '../constants';\nimport { SUBJECT_PADDING_LEFT } from '../components/subject';\n\nconst {\n  getSubjectEndBlock,\n} = SubjectPlugin.queries;\n\n/**\n * 判断选区是否在议题之内\n * @param controller\n * @param selection\n * @returns\n */\nexport function isSelectionInSubjectHeading(controller: Controller, selection = controller.value.selection): boolean {\n  const { document } = controller.value;\n  const blocks = document.getRootBlocksAtRange(selection);\n  return blocks.some((block) => isSubjectHeading(block));\n}\n\n/**\n * 判断议题是否完全在选区之内\n * @param controller\n * @param subject\n * @param selection\n * @description 包含逻辑从议题的开始节点开始\n */\nexport function isSelectionCoverSubjectFromStart(\n  controller: Controller,\n  subject: Subject,\n  selection = controller.value.selection,\n): boolean {\n  const { document } = controller.value;\n  const start = selection.getStart(document);\n  const startBlock = document.getFurthsestBlock(start.key);\n\n  // 开始节点不同，返回 false\n  if (startBlock !== subject) {\n    return false;\n  }\n\n  // 开始光标不在议题的开头，返回 false\n  if (!start.isAtStartOfNode(startBlock)) {\n    return false;\n  }\n\n  const end = selection.getEnd(document);\n  const endBlock = document.getFurthsestBlock(end.key);\n  const subjectEndBlock = controller.query(getSubjectEndBlock, startBlock);\n\n  /* 这里的前置条件是光标 start 在议题首个节点的开头 */\n\n  // 若光标在议题结束节点的末尾，返回 true\n  if (endBlock && endBlock === subjectEndBlock && end.isAtEndOfNode(endBlock)) {\n    return true;\n  }\n\n  // 若议题的末尾节点在选区的包含范围之内\n  const endPath = document.getPath(endBlock?.key || '');\n  const subjectEndPath = document.getPath(subjectEndBlock?.key || '');\n  if (endPath && subjectEndPath && Path.isAfter(endPath, subjectEndPath)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * 判断议题组是否完全在选区范围之内\n * @param controller\n * @param startBlock 议题开始节点\n * @param endBlock 议题结束节点\n * @returns\n */\nexport function isSelectionCoverSubject(controller: Controller, startBlock: Block, endBlock: Block) {\n  const { selection, document } = controller.value;\n  const start = selection.getStart(document);\n  const end = selection.getEnd(document);\n\n  const isCoverStart = start.isAtStartOfNode(startBlock) || Path.isBefore(\n    document.assertPath(start.key),\n    document.assertPath(startBlock.key),\n  );\n\n  const isCoverEnd = end.isAtEndOfNode(endBlock) || Path.isAfter(\n    document.assertPath(end.key),\n    document.assertPath(endBlock.key),\n  );\n\n  if (isCoverStart && isCoverEnd) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isSubjectSelected(controller: Controller, node: Subject) {\n  const { data } = controller.value;\n  return data[SELECTED_SUBJECT_KEY] === node.key;\n}\n\n/**\n * 获取议题 Range\n * @param controller\n * @param subject\n * @returns\n */\nexport function getSubjectRange(controller: Controller, subject: Subject) {\n  const { selection } = controller.value;\n  const subjectEndBlock = controller.query(getSubjectEndBlock, subject);\n  if (subjectEndBlock) {\n    return selection.moveAnchorToStartOfNode(subject, controller).moveFocusToEndOfNode(subjectEndBlock, controller);\n  }\n  return selection.moveAnchorToStartOfNode(subject, controller).moveFocusToEndOfNode(subject, controller);\n}\n\n/**\n * 获取议题 fragment\n * @param controller\n * @param subject\n * @returns\n */\nexport function getSubjectFragment(controller: Controller, subject: Subject) {\n  const { document } = controller.value;\n  const selection = getSubjectRange(controller, subject);\n  return document.getFragmentAtRange(selection);\n}\n\n/**\n * 获取光标偏移量\n */\nexport function getCaretOffset(controller: Controller, selection: Selection): { top?: number, left?: number } {\n  if (selection.isExpanded) {\n    return {};\n  }\n\n  const point = selection.anchor;\n  return point.isEdgePoint() && point.edge === EdgePoint.BEFORE ? { left: SUBJECT_PADDING_LEFT } : {};\n}"],"file":"selection.js"}