import { SubjectPlugin } from '@ali/4ever-bamboo';
import createOnAction from "./handlers/createOnAction";
import createOnKeyDown from "./handlers/createOnKeyDown";
import createOnQuery from "./handlers/createOnQuery";
import createRenderNode from "./handlers/createRenderNode";
import createOnCangjieInput from "./handlers/createOnCangjieInput";
import createOnCangjieSelect from "./handlers/createOnCangjieSelect";
import createOnCangjieCopy from "./handlers/createOnCangjieCopy";
import createOnCangjieCut from "./handlers/createOnCangjieCut";
import createOnCangjiePaste from "./handlers/createOnCangjiePaste";
import * as queries from "./queries";
import * as actions from "./actions";
import * as helpers from "./helpers";
import * as utils from "./utils";
import placeholder from "./placeholder";
var _SubjectPlugin$handle = SubjectPlugin.handlers,
    createGroupNodes = _SubjectPlugin$handle.createGroupNodes,
    createRenderMark = _SubjectPlugin$handle.createRenderMark;

function createSubjectPlugin(config) {
  var _config$subject = config.subject,
      subject = _config$subject === void 0 ? {} : _config$subject;
  return {
    groupNodes: createGroupNodes(),
    renderNode: createRenderNode(subject),
    renderMark: createRenderMark(),
    onCangjieInput: createOnCangjieInput(),
    onCangjieSelect: createOnCangjieSelect(),
    onCangjieCopy: createOnCangjieCopy(),
    onCangjieCut: createOnCangjieCut(),
    onCangjiePaste: createOnCangjiePaste(),
    onKeyDown: createOnKeyDown(),
    onAction: createOnAction(),
    onQuery: createOnQuery(),
    queries: queries,
    placeholder: placeholder()
  };
}

createSubjectPlugin.queries = queries;
createSubjectPlugin.actions = actions;
createSubjectPlugin.helpers = helpers;
createSubjectPlugin.utils = utils;
export default createSubjectPlugin;
//# sourceMappingURL=index.js.map