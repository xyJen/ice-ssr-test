{"version":3,"sources":["../../../../../src/plugins/imTag/components/ImTag.tsx"],"names":["React","useEffect","ImTagPlugin","CalendarCardPlugin","calculatedPluginSize","setTagData","isChangeTagData","IMTAG_MIN_CONTAINER_WIDTH","TextWrapper","IMTAG_MEASURE_STRING","IMTAG_DEFAULT_HEIGHT","IMTAG_INIT_WIDTH","IMTAG_MAX_WIDTH","ImTagContainer","preventDefaultOnClick","ImTag","props","controller","imTagConfig","locale","imFrom","jumpToConversition","getConversitionNameFromCid","node","data","height","width","metadata","imTitle","cid","onClick","useCallback","event","preventDefault","stopPropagation","undefined","isStop","updateImTitle","title","getMeasureWidth","targetWidth","Math","abs","newData","run","then","res","success","text","Number","MAX_SAFE_INTEGER"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Controller, RenderNodeProps, Inline } from '@ali/4ever-cangjie';\nimport { ImTagDataType, ImTagPlugin, CalendarCardPlugin, calculatedPluginSize } from '@ali/4ever-bamboo';\nimport { BiPluginConfig } from '../../../types';\nimport { setTagData } from '@ali/4ever-factory';\nimport { isChangeTagData } from '../utils';\n\nconst { IMTAG_MIN_CONTAINER_WIDTH, TextWrapper } = ImTagPlugin;\n\nconst {\n  IMTAG_MEASURE_STRING,\n  IMTAG_DEFAULT_HEIGHT,\n  IMTAG_INIT_WIDTH,\n  IMTAG_MAX_WIDTH,\n  ImTagContainer,\n} = ImTagPlugin;\n\nconst { preventDefaultOnClick } = CalendarCardPlugin;\n\ninterface IProps {\n  props: RenderNodeProps;\n  controller: Controller;\n  imTagConfig: BiPluginConfig['imTag'];\n}\n\nexport const ImTag: React.FC<IProps> = ({\n  props,\n  controller,\n  imTagConfig,\n}) => {\n  const {\n    locale = { imFrom: IMTAG_MEASURE_STRING },\n    jumpToConversition,\n    getConversitionNameFromCid,\n  } = imTagConfig || {};\n\n  const node = props.node as Inline;\n  const { height, width = 0, metadata } = node.data as ImTagDataType;\n  const { imTitle = '', cid } = metadata || {};\n  const onClick = React.useCallback((event: React.MouseEvent<Element>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (jumpToConversition && cid) {\n      jumpToConversition(cid);\n    }\n  }, [cid, jumpToConversition]);\n\n  useEffect(() => {\n    if (!getConversitionNameFromCid) return undefined;\n    let isStop = false;\n\n    const updateImTitle = async (title) => {\n      let targetWidth = await getMeasureWidth(`${IMTAG_MEASURE_STRING} ${title}`);\n\n      if (\n        // 不同端渲染时计算的宽度会有 ±2 像素的差异。\n        Math.abs(targetWidth - width) < 3 ||\n        // Case1： width 为默认宽度时更新标签（后端根据场景不同，选择性设置 imTitle 值，但是宽度未更新）\n        // Case2： imTitle 相同时不更新\n        (width !== IMTAG_INIT_WIDTH && title === imTitle)\n      ) {\n        return;\n      }\n      if (targetWidth > IMTAG_MAX_WIDTH) targetWidth = IMTAG_MAX_WIDTH;\n      const newData = {\n        width: targetWidth,\n        height: IMTAG_DEFAULT_HEIGHT,\n        metadata: {\n          cid: cid!,\n          imTitle: title,\n        },\n      };\n      if (isChangeTagData(node.data as ImTagDataType, newData)) {\n        controller.run('onAction', setTagData(node, newData));\n      }\n    };\n\n    let title = imTitle;\n    getConversitionNameFromCid(cid!).then(async (res) => {\n      if (isStop) return;\n      if (!res.success) return;\n      if (res.success) {\n        title = res.imTitle;\n      }\n    }).finally(async () => {\n      // Case1 取到最新群名，测量并更新群名；\n      // Case2 未取到最新群名（有文档权限无群权限），有可能初始化时的群名的默认宽度不对，需同样测量并更新群名；\n      await updateImTitle(title);\n    });\n    return () => {\n      isStop = true;\n    };\n  }, [cid, controller, getConversitionNameFromCid, imTitle, node, width]);\n\n  return (\n    <ImTagContainer\n      width={width}\n      height={height}\n      onClick={onClick}\n      onMouseDown={preventDefaultOnClick}\n      text={`${locale.imFrom} ${imTitle}`}\n    />\n  );\n};\n\n// 获取测量宽度，最小宽度是28px，字体是14\nexport const getMeasureWidth = async (text: string): Promise<number> => {\n  const { width } = await calculatedPluginSize(<TextWrapper>{text}</TextWrapper>, Number.MAX_SAFE_INTEGER);\n  return width + IMTAG_MIN_CONTAINER_WIDTH;\n};\n"],"file":"ImTag.js"}