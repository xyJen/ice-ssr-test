import _extends from "@babel/runtime/helpers/extends";
import { Block, Commands } from '@ali/4ever-cangjie';
import { uniqueId } from '@ali/4ever-utils';
export default function createOnChange(config) {
  if (config === void 0) {
    config = {};
  }

  return function onChange(controller, next) {
    if (!config.generateLeafBlockId) {
      return next();
    }

    var tmp = {};
    var blocks = controller.operations.map(function (o) {
      return o.type === 'set_selection' ? undefined : o.path;
    }).filter(function (p) {
      return !!p;
    }).map(function (p) {
      var n = controller.value.document.getNodeByPath(p);

      if (n) {
        return Block.isBlock(n) ? n : controller.value.document.getClosestBlock(n.key);
      }

      return null;
    }).reduce(function (prev, cur) {
      if (cur && !tmp[cur.key]) {
        tmp[cur.key] = 1;
        prev.push(cur);
      }

      return prev;
    }, []).filter(function (node) {
      return !node.data.uuid;
    });
    var uuidFn = config.generator || uniqueId;
    controller.withoutNormalizing(function () {
      // NOTE: 加上 withoutSaving 以避免 undo 时 `set_node` 把 redos stack 置空
      controller.withoutSaving(function () {
        blocks.forEach(function (node) {
          controller.command(Commands.setNodeByKey, node.key, {
            type: node.type,
            data: _extends({}, node.data, {
              uuid: node.data.refblockUUID ? node.data.refblockUUID : uuidFn()
            })
          });
        });
      });
    });
    return next();
  };
}
//# sourceMappingURL=onChange.js.map