import { debounce } from 'lodash-es';
import HoverNode from "./utils/hoverNode";
var HOVER_TRIGGER_TIME = 60;

function isHoverInHoverToolbar(event) {
  var target = event.target;
  return target.getAttribute('data-hover-toolbar') || target.closest('[data-hover-toolbar="true"]');
}

var hoverElementHandler = debounce(function (event, controller, hoverCapture, layouts) {
  if (isHoverInHoverToolbar(event)) return;
  var result = HoverNode.getNode(event, controller, layouts);
  hoverCapture.trigger(result);
}, HOVER_TRIGGER_TIME);
export default function createOnMouseMove(hoverCapture, configs) {
  return function (event, controller, next) {
    var _ref = configs || {},
        isDisabled = _ref.isDisabled;

    var disabled = isDisabled && isDisabled();
    if (disabled) return next();
    hoverElementHandler(event.nativeEvent, controller, hoverCapture, configs == null ? void 0 : configs.layouts);
    return next();
  };
}
//# sourceMappingURL=createOnMouseMove.js.map