{"version":3,"sources":["../../../../src/plugins/hoverToolbar/createRenderHoverToolbar.tsx"],"names":["React","PluginRoles","IconCopy","IconCut","IconDelete","Commands","HOVER_TOOLBAR_CUT_NODE","HOVER_TOOLBAR_COPY_NODE","createRenderHoverToolbar","config","locale","props","controller","getNode","buttonName","icon","title","cut","tooltip","onClick","node","run","type","payload","autoClose","role","hoverToolbarCut","testid","copy","hoverToolbarCopy","command","removeNodeByKey","key","hoverToolbarDelete"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SACEC,WADF,QAEO,mBAFP;AAGA,SACEC,QADF,EAEEC,OAFF,EAGEC,UAHF,QAIO,sBAJP;AAKA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,sBAAT,EAAiCC,uBAAjC;;wBAYgB,eAAC,OAAD,O;;yBAqBA,eAAC,QAAD,O;;yBAqBA,eAAC,UAAD,O;;AAnDhB,eAAe,SAASC,wBAAT,CACbC,MADa,EAEmB;AAAA,MACxBC,MADwB,GACbD,MADa,CACxBC,MADwB;AAEhC,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAoBC,OAApB,EAAgC;AAAA,QAC7BC,UAD6B,GACdH,KADc,CAC7BG,UAD6B;;AAErC,YAAQA,UAAR;AACE,WAAK,KAAL;AACE,eAAO;AACLC,UAAAA,IAAI,MADC;AAELC,UAAAA,KAAK,EAAE,CAAAN,MAAM,QAAN,YAAAA,MAAM,CAAEO,GAAR,KAAe,KAFjB;AAGLC,UAAAA,OAAO,EAAE,CAAAR,MAAM,QAAN,YAAAA,MAAM,CAAEO,GAAR,KAAe,KAHnB;AAILE,UAAAA,OAAO,EAAE,mBAAM;AACb,gBAAMC,IAAI,GAAGP,OAAO,EAApB;AACAO,YAAAA,IAAI,IAAIR,UAAU,CAACS,GAAX,CACN,UADM,EAEN;AACEC,cAAAA,IAAI,EAAEhB,sBADR;AAEEiB,cAAAA,OAAO,EAAE;AACPH,gBAAAA,IAAI,EAAJA;AADO;AAFX,aAFM,CAAR;AASD,WAfI;AAgBLI,UAAAA,SAAS,EAAE,IAhBN;AAiBLC,UAAAA,IAAI,EAAExB,WAAW,CAACyB,eAjBb;AAkBLC,UAAAA,MAAM,EAAE;AAlBH,SAAP;;AAoBF,WAAK,MAAL;AACE,eAAO;AACLZ,UAAAA,IAAI,OADC;AAELC,UAAAA,KAAK,EAAE,CAAAN,MAAM,QAAN,YAAAA,MAAM,CAAEkB,IAAR,KAAgB,MAFlB;AAGLV,UAAAA,OAAO,EAAE,CAAAR,MAAM,QAAN,YAAAA,MAAM,CAAEkB,IAAR,KAAgB,MAHpB;AAILT,UAAAA,OAAO,EAAE,mBAAM;AACb,gBAAMC,IAAI,GAAGP,OAAO,EAApB;AACAO,YAAAA,IAAI,IAAIR,UAAU,CAACS,GAAX,CACN,UADM,EAEN;AACEC,cAAAA,IAAI,EAAEf,uBADR;AAEEgB,cAAAA,OAAO,EAAE;AACPH,gBAAAA,IAAI,EAAJA;AADO;AAFX,aAFM,CAAR;AASD,WAfI;AAgBLI,UAAAA,SAAS,EAAE,IAhBN;AAiBLC,UAAAA,IAAI,EAAExB,WAAW,CAAC4B,gBAjBb;AAkBLF,UAAAA,MAAM,EAAE;AAlBH,SAAP;;AAoBF,WAAK,QAAL;AACE,eAAO;AACLZ,UAAAA,IAAI,OADC;AAELC,UAAAA,KAAK,EAAE,CAAAN,MAAM,QAAN,YAAAA,MAAM,UAAN,KAAkB,QAFpB;AAGLQ,UAAAA,OAAO,EAAE,CAAAR,MAAM,QAAN,YAAAA,MAAM,UAAN,KAAkB,QAHtB;AAILS,UAAAA,OAAO,EAAE,mBAAM;AACb,gBAAMC,IAAI,GAAGP,OAAO,EAApB;AACAO,YAAAA,IAAI,IAAIR,UAAU,CAACkB,OAAX,CAAmBzB,QAAQ,CAAC0B,eAA5B,EAA6CX,IAAI,CAACY,GAAlD,CAAR;AACD,WAPI;AAQLR,UAAAA,SAAS,EAAE,IARN;AASLC,UAAAA,IAAI,EAAExB,WAAW,CAACgC,kBATb;AAULN,UAAAA,MAAM,EAAE;AAVH,SAAP;;AAYF;AAAS,eAAO,IAAP;AAxDX;AA0DD,GA5DD;AA6DD","sourcesContent":["import * as React from 'react';\nimport {\n  PluginRoles,\n} from '@ali/4ever-bamboo';\nimport {\n  IconCopy,\n  IconCut,\n  IconDelete,\n} from '@ali/4ever-component';\nimport { Commands } from '@ali/4ever-cangjie';\nimport type { BiPlugin } from '../../types';\nimport { HOVER_TOOLBAR_CUT_NODE, HOVER_TOOLBAR_COPY_NODE } from './actions';\nimport { IHoverToolbarPluginConfigs } from './types';\n\nexport default function createRenderHoverToolbar(\n  config: IHoverToolbarPluginConfigs,\n): BiPlugin['renderHoverToolbar'] {\n  const { locale } = config;\n  return (props, controller, getNode) => {\n    const { buttonName } = props;\n    switch (buttonName) {\n      case 'cut':\n        return {\n          icon: <IconCut />,\n          title: locale?.cut || 'Cut',\n          tooltip: locale?.cut || 'Cut',\n          onClick: () => {\n            const node = getNode();\n            node && controller.run(\n              'onAction',\n              {\n                type: HOVER_TOOLBAR_CUT_NODE,\n                payload: {\n                  node,\n                },\n              },\n            );\n          },\n          autoClose: true,\n          role: PluginRoles.hoverToolbarCut,\n          testid: 'bi-toolbar-hover-cut',\n        };\n      case 'copy':\n        return {\n          icon: <IconCopy />,\n          title: locale?.copy || 'Copy',\n          tooltip: locale?.copy || 'Copy',\n          onClick: () => {\n            const node = getNode();\n            node && controller.run(\n              'onAction',\n              {\n                type: HOVER_TOOLBAR_COPY_NODE,\n                payload: {\n                  node,\n                },\n              },\n            );\n          },\n          autoClose: true,\n          role: PluginRoles.hoverToolbarCopy,\n          testid: 'bi-toolbar-hover-copy',\n        };\n      case 'delete':\n        return {\n          icon: <IconDelete />,\n          title: locale?.delete || 'Delete',\n          tooltip: locale?.delete || 'Delete',\n          onClick: () => {\n            const node = getNode();\n            node && controller.command(Commands.removeNodeByKey, node.key);\n          },\n          autoClose: true,\n          role: PluginRoles.hoverToolbarDelete,\n          testid: 'bi-toolbar-hover-delete',\n        };\n      default: return null;\n    }\n  };\n}\n"],"file":"createRenderHoverToolbar.js"}