import { Block, Inline } from '@ali/4ever-cangjie';
import { isListNode } from '@ali/4ever-utils';
import { Table, TableCell } from '@ali/4ever-mo';
import { isEmpty } from 'lodash-es';
var typeMap = {
  'colorBlocks': 'callout'
};

function getBlockType(block, controller) {
  var type = block.type;

  if (TableCell.isTableCell(block)) {
    var document = controller.value.document;
    var tableRow = document.getParent(block.key);
    var table = tableRow ? document.getParent(tableRow.key) : null;

    if (Table.isTable(table) && table.data.sr) {
      return 'columns';
    }
  }

  if (isListNode(block)) {
    return 'list';
  }

  if (block.type === 'card') {
    var _block$data;

    type = ((_block$data = block.data) == null ? void 0 : _block$data.cardType) || 'card';
  } else if (block.type === 'container') {
    type = block.data.subType || 'container';
  }

  return typeMap[type] || type;
}

function getInlineType(inline) {
  var _inline$data, _inline$data$extraDat;

  if (inline.type === 'image' && (_inline$data = inline.data) != null && (_inline$data$extraDat = _inline$data.extraData) != null && _inline$data$extraDat.isSignature) {
    return 'signature';
  }

  if (inline.type === 'image' && isEmpty(inline.data)) {
    return 'imagePlaceholder';
  }

  return inline.type;
}

export default function getNodeType(node, controller) {
  if (Block.isBlock(node)) {
    return getBlockType(node, controller);
  }

  if (Inline.isInline(node)) {
    return getInlineType(node);
  }

  return '';
}
//# sourceMappingURL=getNodeType.js.map