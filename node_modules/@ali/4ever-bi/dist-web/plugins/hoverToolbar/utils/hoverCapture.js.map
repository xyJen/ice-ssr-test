{"version":3,"sources":["../../../../../src/plugins/hoverToolbar/utils/hoverCapture.ts"],"names":["HoverCapture","callbacks","prev","disabled","on","c","push","off","filter","cb","disableTrigger","enableTrigger","trigger","msg","node","forEach","forceClose","getCurrentNode","hoverCapture"],"mappings":"AAQA,WAAaA,YAAb;AAAA;AAAA,SACUC,SADV,GACmC,EADnC;AAAA,SAEUC,IAFV;AAAA,SAGUC,QAHV,GAGqB,KAHrB;AAAA;;AAAA;;AAAA,SAKEC,EALF,GAKE,YAAGC,CAAH,EAAiB;AACf,SAAKJ,SAAL,CAAeK,IAAf,CAAoBD,CAApB;AACD,GAPH;;AAAA,SASEE,GATF,GASE,aAAIF,CAAJ,EAAkB;AAChB,SAAKJ,SAAL,GAAiB,KAAKA,SAAL,CAAeO,MAAf,CAAsB,UAACC,EAAD;AAAA,aAAQA,EAAE,KAAKJ,CAAf;AAAA,KAAtB,CAAjB;AACD,GAXH;;AAAA,SAaEK,cAbF,GAaE,0BAAiB;AACf,SAAKP,QAAL,GAAgB,IAAhB;AACD,GAfH;;AAAA,SAiBEQ,aAjBF,GAiBE,yBAAgB;AACd,SAAKR,QAAL,GAAgB,KAAhB;AACD,GAnBH;;AAAA,SAqBES,OArBF,GAqBE,iBAAQC,GAAR,EAA+B;AAAA,QAAvBA,GAAuB;AAAvBA,MAAAA,GAAuB,GAAJ,EAAI;AAAA;;AAC7B,QAAK,KAAKX,IAAL,IAAa,KAAKA,IAAL,KAAcW,GAAG,CAACC,IAAhC,IAAyC,KAAKX,QAAlD,EAA4D;AAC1D;AACD;;AACD,SAAKD,IAAL,GAAYW,GAAG,CAACC,IAAhB;AACA,SAAKb,SAAL,CAAec,OAAf,CAAuB,UAACV,CAAD,EAAO;AAAEA,MAAAA,CAAC,CAACQ,GAAD,CAAD;AAAS,KAAzC;AACD,GA3BH;;AAAA,SA6BEG,UA7BF,GA6BE,sBAAa;AACX,SAAKJ,OAAL,CAAa,EAAb;AACD,GA/BH;;AAAA,SAiCEK,cAjCF,GAiCE,0BAAiB;AACf,WAAO,KAAKf,IAAZ;AACD,GAnCH;;AAAA;AAAA;AAsCA,OAAO,IAAMgB,YAAY,GAAG,IAAIlB,YAAJ,EAArB","sourcesContent":["import { Node } from '@ali/4ever-cangjie';\n\nexport interface ICaptureMsg {\n  node?: Node;\n}\n\nexport type ICallback = (msg: ICaptureMsg) => void;\n\nexport class HoverCapture {\n  private callbacks: ICallback[] = [];\n  private prev: Node | undefined;\n  private disabled = false;\n\n  on(c: ICallback) {\n    this.callbacks.push(c);\n  }\n\n  off(c: ICallback) {\n    this.callbacks = this.callbacks.filter((cb) => cb !== c);\n  }\n\n  disableTrigger() {\n    this.disabled = true;\n  }\n\n  enableTrigger() {\n    this.disabled = false;\n  }\n\n  trigger(msg: ICaptureMsg = {}) {\n    if ((this.prev && this.prev === msg.node) || this.disabled) {\n      return;\n    }\n    this.prev = msg.node;\n    this.callbacks.forEach((c) => { c(msg); });\n  }\n\n  forceClose() {\n    this.trigger({});\n  }\n\n  getCurrentNode() {\n    return this.prev;\n  }\n}\n\nexport const hoverCapture = new HoverCapture();\n"],"file":"hoverCapture.js"}