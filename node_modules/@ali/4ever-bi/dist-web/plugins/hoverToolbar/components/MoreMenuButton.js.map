{"version":3,"sources":["../../../../../src/plugins/hoverToolbar/components/MoreMenuButton.tsx"],"names":["React","TBIconButton","Popover","List","IconMore","HoverToolbarHooks","PluginRoles","MoreMenuButton","props","items","onOverlayVisibleChange","onSelect","locale","getContainer","useGetContainer","usePopoverVisible","isOverlayVisible","setOverlayVisible","handleSelect","useCallback","key","toggleVisible","renderItem","item","find","t","more","hoverToolbarMore"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAC5B,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,IAAhC,QAA4C,qBAA5C;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,sBAA5C;AACA,SAASC,WAAT,QAA4B,mBAA5B;;yBAgEoD,eAAC,QAAD,O;;AA1CpD,OAAO,IAAMC,cAA8C,GAAG,SAAjDA,cAAiD,CAACC,KAAD,EAAW;AAAA,MAC/DC,KAD+D,GACXD,KADW,CAC/DC,KAD+D;AAAA,MACxDC,sBADwD,GACXF,KADW,CACxDE,sBADwD;AAAA,MAChCC,QADgC,GACXH,KADW,CAChCG,QADgC;AAAA,MACtBC,MADsB,GACXJ,KADW,CACtBI,MADsB;AAEvE,MAAMC,YAAY,GAAGR,iBAAiB,CAACS,eAAlB,EAArB;;AAFuE,8BAGzBT,iBAAiB,CAACU,iBAAlB,CAAoC,MAApC,EAA4CL,sBAA5C,CAHyB;AAAA,MAGhEM,gBAHgE;AAAA,MAG9CC,iBAH8C;;AAKvE,MAAMC,YAAY,GAAGlB,KAAK,CAACmB,WAAN,CAAkB,UAACC,GAAD,EAAiB;AACtDT,IAAAA,QAAQ,CAACS,GAAD,CAAR;AACAH,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAHoB,EAGlB,CAACN,QAAD,EAAWM,iBAAX,CAHkB,CAArB;AAKA,MAAMI,aAAa,GAAGrB,KAAK,CAACmB,WAAN,CAAkB,YAAM;AAC5CF,IAAAA,iBAAiB,CAAC,CAACD,gBAAF,CAAjB;AACD,GAFqB,EAEnB,CAACC,iBAAD,EAAoBD,gBAApB,CAFmB,CAAtB;AAIA,MAAMM,UAAU,GAAGtB,KAAK,CAACmB,WAAN,CAAkB,gBAAa;AAAA,QAAVC,GAAU,QAAVA,GAAU;AAChD,QAAI,CAACX,KAAL,EAAY,OAAO,IAAP;AACZ,QAAMc,IAAI,GAAGd,KAAH,oBAAGA,KAAK,CAAEe,IAAP,CAAY,UAACC,CAAD;AAAA,aAAQ,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACL,GAAF,KAAUA,GAA3C;AAAA,KAAZ,CAAb;AACA,QAAI,CAACG,IAAL,EAAW,OAAO,IAAP;AACX,wBACE,eAAC,IAAD,CAAM,IAAN,EACMA,IADN,CADF;AAKD,GATkB,EAShB,CAACd,KAAD,CATgB,CAAnB;AAWA,sBACE,eAAC,OAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,OAAO,eACL,eAAC,IAAD;AACE,qBAAY,+BADd;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,QAAQ,EAAES,YAHZ;AAIE,mBAAU,sBAJZ;AAKE,MAAA,UAAU,EAAEI;AALd,MAHJ;AAWE,IAAA,eAAe,EAAEL,iBAXnB;AAYE,IAAA,OAAO,EAAED,gBAZX;AAaE,IAAA,YAAY,EAAEH,YAbhB;AAcE,mBAAY;AAdd,kBAgBE,eAAC,YAAD;AAAc,IAAA,MAAM,EAAEG,gBAAtB;AAAwC,IAAA,IAAI,OAA5C;AAA4D,IAAA,OAAO,EAAEK,aAArE;AAAoF,IAAA,KAAK,EAAE,CAAAT,MAAM,QAAN,YAAAA,MAAM,CAAEc,IAAR,KAAgB,MAA3G;AAAmH,IAAA,OAAO,EAAEV,gBAAgB,GAAG,EAAH,GAAQ,CAAAJ,MAAM,QAAN,YAAAA,MAAM,CAAEc,IAAR,KAAgB,MAApK;AAA4K,IAAA,MAAM,EAAC,uBAAnL;AAA2M,IAAA,IAAI,EAAEpB,WAAW,CAACqB;AAA7N,IAhBF,CADF;AAoBD,CA7CM","sourcesContent":["import React from 'react';\nimport { BiPlugin } from '@ali/4ever-cangjie';\nimport { TBIconButton, Popover, List } from '@ali/we-design-next';\nimport { IconMore, HoverToolbarHooks } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { ILocale } from '../types';\ntype IHoverToolbarButton = NonNullable<ReturnType<BiPlugin['renderHoverToolbar']>>;\n\ntype IHoverButtonConfig = Exclude<IHoverToolbarButton, React.ReactElement>;\n\nexport interface IListItem {\n  key: string,\n  title: NonNullable<IHoverButtonConfig['title']>,\n  prefix: IHoverButtonConfig['icon'],\n  disabled: IHoverButtonConfig['disabled'],\n  testid?: string; \n  ['data-role']?: string;\n}\n\nexport interface IMoreMenuButtonProps {\n  items: Array<IListItem | 'divider'>;\n  onOverlayVisibleChange: (visible: boolean) => void;\n  onSelect: (key: string) => void;\n  locale: ILocale;\n}\n\nexport const MoreMenuButton: React.FC<IMoreMenuButtonProps> = (props) => {\n  const { items, onOverlayVisibleChange, onSelect, locale } = props;\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isOverlayVisible, setOverlayVisible] = HoverToolbarHooks.usePopoverVisible('more', onOverlayVisibleChange);\n\n  const handleSelect = React.useCallback((key: string) => {\n    onSelect(key);\n    setOverlayVisible(false);\n  }, [onSelect, setOverlayVisible]);\n\n  const toggleVisible = React.useCallback(() => {\n    setOverlayVisible(!isOverlayVisible);\n  }, [setOverlayVisible, isOverlayVisible]);\n\n  const renderItem = React.useCallback(({ key }) => {\n    if (!items) return null;\n    const item = items?.find((t) => (typeof t !== 'string' && t.key === key)) as IListItem;\n    if (!item) return null;\n    return (\n      <List.Item\n        {...item}\n      />\n    )\n  }, [items]);\n\n  return (\n    <Popover\n      placement='bottomLeft'\n      content={\n        <List\n          data-testid='bi-toolbar-hover-more-options'\n          items={items}\n          onSelect={handleSelect}\n          data-role='hoverToolbarMoreList'\n          renderItem={renderItem}\n        />\n      }\n      onVisibleChange={setOverlayVisible}\n      visible={isOverlayVisible}\n      getContainer={getContainer}\n      data-testid=\"overlay-bi-toolbar-hover-more\"\n    >\n      <TBIconButton active={isOverlayVisible} icon={<IconMore />} onClick={toggleVisible} title={locale?.more || 'More'} tooltip={isOverlayVisible ? '' : locale?.more || 'More'} testid=\"bi-toolbar-hover-more\" role={PluginRoles.hoverToolbarMore} />\n    </Popover>\n  )\n}"],"file":"MoreMenuButton.js"}