{"version":3,"sources":["../../../../../src/plugins/newlineGuide/handlers/createOnKeyUp.ts"],"names":["environment","Text","isKeyHotkey","NewlineGuideData","triggerKeyList","NEWLINE_GUIDE_TRIGGER_CN","triggerList","removeNewlineData","setNewlineData","whiteList","isEmptyNode","block","defaultText","children","nodes","filter","node","isText","includes","type","text","length","isEscHotKey","isUndoKey","isEqualKey","ignoreKeyList","createOnKeyUp","config","newlineGuideEnabled","newlineGuide","enabled","event","controller","next","IS_MOBILE","query","value","composing","selection","startBlock","anchor","isCollapsed","get","triggered","point","key","offset","run","target","data","substr","showMenu"],"mappings":"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","sourcesContent":["import { Controller, environment, Block, Text, TextPoint, BlockChild } from '@ali/4ever-cangjie';\nimport React from 'react';\nimport { isKeyHotkey } from 'is-hotkey';\nimport { NewlineGuideData, triggerKeyList, NEWLINE_GUIDE_TRIGGER_CN, triggerList } from '../model/newlineGuide';\nimport { BiPluginConfig } from '../../../types';\nimport { removeNewlineData, setNewlineData } from '../actions';\n\nconst whiteList = ['ins'];\nfunction isEmptyNode(block: Block, defaultText = ''): boolean {\n  const children = block.nodes.filter((node) => {\n    // 优先排除text节点的内容\n    return !Text.isText(node);\n  }).filter((node) => {\n    // 过滤掉白名单的节点，例如修订模式插入的节点\n    return !whiteList.includes((node as Exclude<BlockChild, Text>).type);\n  });\n  return block.text === defaultText && children.length === 0;\n}\n\nconst isEscHotKey = isKeyHotkey('esc');\nconst isUndoKey = isKeyHotkey('ctrl+z');\nconst isEqualKey = isKeyHotkey('=');\n// 微软中文输入法下，输入斜杠，key为Process，这种场景下，选择对输入的内容进行判断\nconst ignoreKeyList = ['Process'];\n\n/**\n * 因为在中文输入法下存在keydown与cangjieInput时序不可保证\n * 因此使用onKeyUp来收拢触发移除下拉菜单的逻辑\n * 下拉菜单目前触发逻辑：\n * 1.输入/触发\n * 2.在行首输入、触发\n */\nexport default function createOnKeyUp(config: BiPluginConfig) {\n  const newlineGuideEnabled = config.newlineGuide?.enabled;\n  return (event: React.KeyboardEvent, controller: Controller, next: Function) => {\n    if (!newlineGuideEnabled || environment.IS_MOBILE) return next();\n\n    if (controller.query('isTriggerringSnippets')) {\n      return next();\n    }\n\n    const { composing, selection, startBlock } = controller.value;\n    const { anchor, isCollapsed } = selection as { anchor: TextPoint; isCollapsed: boolean };\n    const { triggered, point } =\n      (NewlineGuideData.get(controller) || {}) as { triggered?: boolean; point?: TextPoint };\n    if (\n      triggered &&\n      (isEscHotKey(event) ||\n      isUndoKey(event) ||\n      anchor.key !== point?.key ||\n      anchor?.offset < point?.offset)\n    ) {\n      controller.run('onAction', removeNewlineData());\n    }\n\n    // 特殊处理keyup事件，当+快速弹起的时候可能会触发shift和=两个事件，最终以value为准，TODO：后续需要处理仓颉底层keyup\n    if (triggerKeyList.includes(event.key) || isEqualKey(event) || ignoreKeyList.includes(event.key)) {\n      // 触发\n      const value = (event.target as HTMLTextAreaElement)?.value;\n      // 优先处理在分页模式下唤起问题，真正原因是由于在排版下从onKeyDown->onKeyUp过程中textarea被reset了，后续在底层解决该问题\n      const data = value?.substr(value.length - 1) || event.key;\n      if (\n        data === NEWLINE_GUIDE_TRIGGER_CN && !isEmptyNode(startBlock, data)\n      ) {\n        // 中文顿号在行中不唤起\n        return next();\n      }\n      if (\n        isCollapsed &&\n        startBlock &&\n        triggerList.includes(data) &&\n        !composing\n      ) {\n        // 获取当前光标位置进行存储\n        controller.run('onAction', setNewlineData({\n          key: startBlock.key,\n          triggered: true,\n          point: selection.anchor,\n          showMenu: true,\n        }));\n      }\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnKeyUp.js"}