import { environment } from '@ali/4ever-cangjie';
import { isKeyHotkey } from 'is-hotkey';
import { NewlineGuideData } from "../model/newlineGuide";

var isMoveHotKey = function isMoveHotKey(event) {
  return ['up', 'down', 'left', 'right', 'enter'].map(function (key) {
    return isKeyHotkey(key);
  }).some(function (isEvent) {
    return isEvent(event);
  });
};
/**
 * onKeyDown 仅仅用于在下拉菜单弹出的时候拦截方向键事件
 */


export default function createOnKeyUp(config) {
  var _config$newlineGuide;

  var newlineGuideEnabled = (_config$newlineGuide = config.newlineGuide) == null ? void 0 : _config$newlineGuide.enabled;
  return function (event, controller, next) {
    if (!newlineGuideEnabled || environment.IS_MOBILE) return next();

    var _ref = NewlineGuideData.get(controller) || {},
        triggered = _ref.triggered,
        showMenu = _ref.showMenu; // 这里由于trigger状态发生了变化，所以需要区分展开下拉框和


    if (triggered && showMenu && isMoveHotKey(event)) {
      return event.preventDefault();
    }

    return next();
  };
}
//# sourceMappingURL=createOnKeyDown.js.map