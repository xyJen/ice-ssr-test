{"version":3,"sources":["../../../../../src/plugins/newlineGuide/components/newlineGuide.tsx"],"names":["React","ReactDOM","useZoomContainer","domUtils","constants","useScrollableContent","PcContextMenu","ActiveInteractionHooks","Dropdown","logger","DropdownAnimation","NewlineGuideData","GuideWrapper","GuideMenu","removeNewlineData","setNewlineData","getStartBlock","closeContextMenu","MAX_ERROR_NUM","useActiveInteraction","NewlineGuide","props","uiVisible","useRef","useState","top","left","guideStyle","setGuideStyle","width","height","triggerStyle","setTriggerStyle","controller","renderGuideMenu","locale","zoom","enableKeyboard","onClickGuideMenu","withoutEmptyParagraphWhitelist","value","document","injections","selection","isFocused","enabled","useMemo","isCollapsed","startBlock","get","triggered","key","query","split","blockKey","isInTable","showMenu","container","window","body","menuContainer","errorNumRef","handleVisibleChange","current","run","getMenuContainer","useEffect","caret","findDOMRange","caretRect","getClientRects","caretTop","caretHeight","caretLeft","getBoundingClientRect","containerTop","containerLeft","guideLeft","editorContainerParent","querySelector","Selector","editable","parentElement","padding","Number","parseInt","getComputedStyle","paddingLeft","nodes","closeContext","useCallback","onQuery","results","length","guideMenu","sum","activeType","setActiveType","activeRef","createPortal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Controller, useSelectionData, useZoomContainer, domUtils, constants } from '@ali/4ever-cangjie';\nimport {\n  useScrollableContent,\n  PcContextMenu,\n} from '@ali/4ever-bamboo';\nimport { ActiveInteractionHooks } from '@ali/4ever-component';\nimport { Dropdown } from '@ali/we-design';\nimport logger from '@ali/4ever-logger';\nimport { DropdownAnimation } from '@ali/we-util';\nimport { MatchItemResult } from '@ali/4ever-utils';\nimport { NewlineGuideData } from '../model/newlineGuide';\nimport {\n  GuideWrapper,\n} from './styled';\nimport GuideMenu from './guideMenu';\nimport { removeNewlineData, setNewlineData } from '../actions';\nimport { NewlineGuidePluginConfig } from '../types';\n;\nimport getStartBlock from '../utils/getStartBlock';\n\nexport interface NewlineGuideProps extends NewlineGuidePluginConfig {\n  controller: Controller;\n  placeholder: string | React.ReactElement<any, string | React.JSXElementConstructor<any>>;\n  locale?: Record<string, string>;\n  zoom?: number;\n  enableKeyboard?: boolean;\n}\n\nconst { closeContextMenu } = PcContextMenu;\n\nconst MAX_ERROR_NUM = 1;\n\nconst { useActiveInteraction } = ActiveInteractionHooks;\n\nconst NewlineGuide: React.FC<NewlineGuideProps> = (props) => {\n  const uiVisible = React.useRef<boolean>(false);\n  const [guideStyle, setGuideStyle] = React.useState({\n    top: -9999,\n    left: -9999,\n  });\n\n  const [triggerStyle, setTriggerStyle] = React.useState({\n    width: 2,\n    height: 0,\n  });\n\n  const { controller, renderGuideMenu, locale, zoom = 1, enableKeyboard, onClickGuideMenu, withoutEmptyParagraphWhitelist } = props;\n  const { document, injections, selection, isFocused } = controller.value;\n  // 失焦或选中内容不显示\n  const enabled = React.useMemo(\n    () => isFocused && selection.isCollapsed,\n    [isFocused, selection],\n  );\n  const startBlock = getStartBlock(controller);\n  const { triggered, key, query } = NewlineGuideData.get(controller) || {};\n  // 这里只能从 renderController 中拿到 viewKey\n  // 通过 onCangjieInput hook 拿到的是 dataKey，且无法通过 action 劫持转换\n  // 通过 点击 触发给到的 key 是这里转换后的后的 dataKey\n  // 因此我们确保：NewlineGuideData.key 一定是 dataKey，而 viewKey 转换 dataKey 方法是相对固定的\n  const [blockKey] = (startBlock?.key || '').split('-');\n  const isInTable = controller.query('isNodeInTable', startBlock);\n  // 当且仅当 focused 在 当前行时 展示面板\n  const showMenu = triggered && key === blockKey;\n\n  const container = useZoomContainer() || window.document.body;\n  const menuContainer = useScrollableContent() || window.document.body;\n\n  const errorNumRef = React.useRef<number>(0);\n\n  const handleVisibleChange = (value: boolean) => {\n    if (!value && showMenu) {\n      uiVisible.current = false;\n      controller.run('onAction', removeNewlineData());\n    }\n  };\n\n  const getMenuContainer = () => {\n    return menuContainer;\n  };\n\n  React.useEffect(() => {\n    if (!enabled && triggered) {\n      // 失焦、有选区存在时 removeNewlineData\n      controller.run('onAction', removeNewlineData());\n    }\n  }, [controller, enabled, triggered]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    // 支持光标 pending 后，需要保证最新的光标渲染完以后再计算位置，否则可能位置不正确\n    if (blockKey && (isInTable || showMenu)) {\n      // 根据目标位置计算光标 Rect\n      // Tips: 不能依赖光标 dom 节点的位置，在 Safari 下的 useEffect、setTimeout 时序会不稳定，导致读取的位置有误\n      const caret = domUtils.findDOMRange(controller.value.selection, controller, container);\n      const caretRect = caret?.getClientRects()[0];\n      // 根据块级元素和光标的位置计算控件位置，以便在任何字号、行高下都对齐光标中间\n      if (caret && caretRect) {\n        const { top: caretTop, height: caretHeight, left: caretLeft } = caretRect;\n        const { top: containerTop, left: containerLeft } = container.getBoundingClientRect();\n        const guideLeft = (caretLeft - containerLeft) / zoom;\n        setGuideStyle({\n          // 光标中间 - 段落顶部 = 控件相对段落的 top\n          top: (caretTop + caretHeight / 2 - containerTop) / zoom,\n          left: guideLeft,\n        });\n        setTriggerStyle({\n          width: 2,\n          height: caretHeight,\n        });\n\n        // 这里需要获取container的padding值，然后计算出插入按钮应该在的位置\n        // PS 这里应该是获取 container 下 [data-cangjie-editable] 元素的 parent 的 padding\n        // 非排版模式下，这个 parent 就是 container，而在排版模式下，这个 container 与 [data-cangjie-editable] 之间有个夹层\n        const editorContainerParent = container?.querySelector(`[${constants.Selector.editable}]`)?.parentElement;\n        let padding = 0;\n        if (editorContainerParent) {\n          padding = Number.parseInt(window.getComputedStyle(editorContainerParent).paddingLeft, 10);\n        }\n      }\n    }\n    // document.nodes、injections 需要作为依赖以便兼容某些 node 导致高度变化的情况（例如插入本地文件上传完成后自动变为预览模式）\n  }, [enabled, isInTable, showMenu, blockKey, container, zoom, document.nodes, injections, query]);\n\n  const closeContext = React.useCallback(() => {\n    controller.run('onAction', closeContextMenu());\n  }, [controller]);\n\n  const onQuery = React.useCallback((results: Array<MatchItemResult<{}>>) => {\n    if (!query || !results || results.length > 0) {\n      controller.run('onAction', setNewlineData({\n        showMenu: true,\n      }));\n      errorNumRef.current = 0;\n      return;\n    }\n    controller.run('onAction', setNewlineData({\n      showMenu: false,\n    }));\n    if (errorNumRef.current > MAX_ERROR_NUM) {\n      controller.run('onAction', removeNewlineData());\n      errorNumRef.current = 0;\n    } else {\n      errorNumRef.current += 1;\n    }\n  }, [query, controller]);\n\n  const guideMenu = React.useMemo(() => {\n    if (!enabled || !showMenu || !renderGuideMenu) return null;\n    // 埋点：区分点击和+\n    logger.sum(`newline_insert_show_by_${uiVisible.current ? 'click' : '+'}`);\n    // 右键菜单栏和插入工具栏需要互斥展示\n    closeContext();\n    return (\n      <GuideMenu withoutEmptyParagraphWhitelist={withoutEmptyParagraphWhitelist} query={query} controller={controller} enableKeyboard={enableKeyboard} onClickGuideMenu={onClickGuideMenu}>\n        {renderGuideMenu(query, onQuery)}\n      </GuideMenu>\n    );\n  }, [enabled, showMenu, renderGuideMenu, controller, enableKeyboard, onClickGuideMenu, query, closeContext, onQuery, withoutEmptyParagraphWhitelist]);\n\n  const [activeType, setActiveType] = useActiveInteraction();\n  const activeRef  = React.useRef('');\n  activeRef.current = activeType;\n\n  React.useEffect(() => {\n    if (showMenu) {\n      setActiveType('insertMenu');\n    } else if (activeRef.current === 'insertMenu') {\n      setActiveType('');\n    }\n  }, [showMenu, setActiveType]);\n\n  if (!enabled) {\n    return null;\n  }\n\n  // dropdown 组件placement向上位置计算存在问题\n  return ReactDOM.createPortal((\n    <GuideWrapper\n      style={guideStyle}\n    >\n      {showMenu ?\n        <Dropdown\n          overlay={\n            <DropdownAnimation\n              visible={showMenu}\n            >\n              {guideMenu}\n            </DropdownAnimation>\n          }\n          visible={showMenu}\n          getContainer={getMenuContainer}\n          onVisibleChange={handleVisibleChange}\n          placement=\"bottomLeft\"\n          overlayAutoAlign\n        >\n          <i style={triggerStyle} />\n        </Dropdown> : null}\n    </GuideWrapper>\n  ), container);\n};\n\nexport default NewlineGuide;\n"],"file":"newlineGuide.js"}