{"version":3,"sources":["../../../../../src/plugins/newlineGuide/components/guideMenu.tsx"],"names":["React","EMenuMode","Menu","logger","removeNewlineTriggerText","removeNewlineData","GuideMenu","props","controller","enableKeyboard","query","withoutEmptyParagraphWhitelist","handleClickMenu","value","needRemoveEmptyParagraph","includes","replace","run","flush","sum","onClickGuideMenu","isPreventKeyEvent","composing","vertical","padding","children"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,SAAT,EAAoBC,IAApB,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,wBAAT,EAAmCC,iBAAnC;;AAUA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,CAACC,KAAD,EAAW;AAAA,MAC7CC,UAD6C,GAC8BD,KAD9B,CAC7CC,UAD6C;AAAA,MACjCC,cADiC,GAC8BF,KAD9B,CACjCE,cADiC;AAAA,MACjBC,KADiB,GAC8BH,KAD9B,CACjBG,KADiB;AAAA,8BAC8BH,KAD9B,CACVI,8BADU;AAAA,MACVA,8BADU,sCACuB,EADvB;;AAGrD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC;AACA,QAAMC,wBAAwB,GAAGH,8BAA8B,CAACI,QAA/B,CAAwCF,KAAK,CAACG,OAAN,CAAc,WAAd,EAA2B,EAA3B,CAAxC,CAAjC;AACAR,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2Bb,wBAAwB,CAACU,wBAAD,CAAnD;AACAN,IAAAA,UAAU,CAACS,GAAX,CAAe,UAAf,EAA2BZ,iBAAiB,EAA5C;AACA;AACJ;AACA;;AACIG,IAAAA,UAAU,CAACU,KAAX;AACAf,IAAAA,MAAM,CAACgB,GAAP,qBAA6BN,KAA7B;;AACA,QAAIN,KAAK,CAACa,gBAAV,EAA4B;AAC1Bb,MAAAA,KAAK,CAACa,gBAAN,CAAuBP,KAAvB;AACD;AACF,GAbD;;AAeA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAIb,UAAU,CAACK,KAAX,CAAiBS,SAArB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GALD;;AAOA,sBACE,eAAC,IAAD;AACE,IAAA,GAAG,oBAAiBZ,KAAK,IAAI,KAA1B,CADL;AAEE,IAAA,IAAI,EAAET,SAAS,CAACsB,QAFlB;AAGE,IAAA,YAAY,EAAE,EAHhB;AAIE,IAAA,2BAA2B,MAJ7B;AAKE,IAAA,OAAO,EAAEX,eALX;AAME,IAAA,uBAAuB,MANzB;AAOE,IAAA,qBAAqB,EAAE,CAAC,CAACF,KAP3B;AAQE,IAAA,WAAW,EAAE,CAAC,CAACD,cARjB;AASE,IAAA,KAAK,EAAE;AAAEe,MAAAA,OAAO,EAAE;AAAX,KATT;AAUE,IAAA,0BAA0B,MAV5B;AAWE,IAAA,iBAAiB,EAAEH;AAXrB,kBAaE;AACE,mBAAY,oBADd,CAEE;;AAFF,KAIGd,KAAK,CAACkB,QAJT,CAbF,CADF;AAsBD,CA/CD;;AAiDA,eAAenB,SAAf","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { EMenuMode, Menu } from '@ali/we-design';\nimport logger from '@ali/4ever-logger';\nimport { removeNewlineTriggerText, removeNewlineData } from '../actions';\n\nexport interface GuideMenuProps {\n  controller: Controller;\n  enableKeyboard?: boolean;\n  onClickGuideMenu?: Function;\n  query?: string;\n  withoutEmptyParagraphWhitelist?: string[];\n}\n\nconst GuideMenu: React.FC<GuideMenuProps> = (props) => {\n  const { controller, enableKeyboard, query, withoutEmptyParagraphWhitelist = [] } = props;\n\n  const handleClickMenu = (value) => {\n    // 这里加_recently的replace是很临时的一个方案，更加合理的方案是后面去除withoutEmptyParagraphWhitelist，这部分能力需要集成到menu配置上\n    const needRemoveEmptyParagraph = withoutEmptyParagraphWhitelist.includes(value.replace('_recently', ''));\n    controller.run('onAction', removeNewlineTriggerText(needRemoveEmptyParagraph));\n    controller.run('onAction', removeNewlineData());\n    /**\n     * 这里之所以要做flush是因为外部插入菜单可能导致provider重新rerender导致op丢失\n     */\n    controller.flush();\n    logger.sum(`newline_insert_${value}`);\n    if (props.onClickGuideMenu) {\n      props.onClickGuideMenu(value);\n    }\n  };\n\n  const isPreventKeyEvent = () => {\n    if (controller.value.composing) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Menu\n      key={`insert_menu_${query || 'all'}`}\n      mode={EMenuMode.vertical}\n      selectedKeys={[]}\n      destroyOverlayWhenInvisible\n      onClick={handleClickMenu}\n      insertSubmenuToMenuRoot\n      shouldSelectFirstItem={!!query}\n      shortcutKey={!!enableKeyboard}\n      style={{ padding: 0 }}\n      subMenuAutoSelectWithEnter\n      isPreventKeyEvent={isPreventKeyEvent}\n    >\n      <div\n        data-testid=\"newline-guide-menu\"\n        // style={{ padding: '4px 0' }}\n      >\n        {props.children}\n      </div>\n    </Menu>\n  );\n};\n\nexport default GuideMenu;\n"],"file":"guideMenu.js"}