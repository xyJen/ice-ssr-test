{"version":3,"sources":["../../../../../src/plugins/newlineGuide/components/insertBtn.tsx"],"names":["React","useMemo","useState","useRef","useEffect","useCallback","Commands","useScrollableContent","Dropdown","Tooltip","LEGAL_EVENT","InsertBtnWrapper","TooltipText","PrimaryText","AddIcon","ActiveInteractionHooks","GuideMenu","DropdownAnimation","useLeftToolbar","mountInsertMenuFromLeftToolbar","useActiveInteraction","InsertBtn","props","controller","currentBlock","renderGuideMenu","onClickGuideMenu","enableKeyboard","locale","trigger","container","document","body","guideMenuVisible","setGuideMenuVisibleState","timeout","actions","activeType","setActiveType","activeRef","current","guideMenuVisibleRef","removeHighlightByType","type","dispatch","node","reason","clearPrevent","clearTimeout","handler","e","visible","detail","setGuideMenuVisible","window","addEventListener","quickInsertMenuVisible","removeEventListener","state","run","handleClickGuideMenu","value","guideMenu","handleMouseLeave","handleMouseEnter","onVisibleChangeForClick","preventMouseMove","onVisibleChangeForHover","setTimeout","handleClick","onMouseDown","startBlock","key","command","moveToEndOfNode","focus","click","clickTip","padding","config","composing","isFocused","isNewLine","query","inTemplateButton","nodeText","text","showBtn","newlineGuide"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA2CC,SAA3C,EAAsDC,WAAtD,QAAyE,OAAzE;qBAC4B,a;AAA5B,SAA4BC,QAA5B,EAAsCC,oBAAtC,QAAkE,oBAAlE;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,gBAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,OAArD;AACA,SAASC,sBAAT,QAAuC,sBAAvC;AAEA,OAAOC,SAAP;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,8BAAT;IAYQC,oB,GAAyBL,sB,CAAzBK,oB;AAER,OAAO,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,CAACC,KAAD,EAAW;AAAA,MAE1DC,UAF0D,GASxDD,KATwD,CAE1DC,UAF0D;AAAA,MAG1DC,YAH0D,GASxDF,KATwD,CAG1DE,YAH0D;AAAA,MAI1DC,eAJ0D,GASxDH,KATwD,CAI1DG,eAJ0D;AAAA,MAK1DC,gBAL0D,GASxDJ,KATwD,CAK1DI,gBAL0D;AAAA,MAM1DC,cAN0D,GASxDL,KATwD,CAM1DK,cAN0D;AAAA,MAO1DC,MAP0D,GASxDN,KATwD,CAO1DM,MAP0D;AAAA,uBASxDN,KATwD,CAQ1DO,OAR0D;AAAA,MAQ1DA,OAR0D,+BAQhD,OARgD,mBAU5D;;AACA,MAAMC,SAAS,GAAGvB,oBAAoB,MAAMwB,QAAQ,CAACC,IAArD;;AAX4D,kBAYP9B,QAAQ,CAAC,KAAD,CAZD;AAAA,MAYrD+B,gBAZqD;AAAA,MAYnCC,wBAZmC;;AAa5D,MAAMC,OAAO,GAAGhC,MAAM,CAAC,IAAD,CAAtB;;AAb4D,wBAczCe,cAAc,EAd2B;AAAA,MAcpDkB,OAdoD;;AAAA,8BAexBhB,oBAAoB,EAfI;AAAA,MAerDiB,UAfqD;AAAA,MAezCC,aAfyC;;AAgB5D,MAAMC,SAAS,GAAGvC,KAAK,CAACG,MAAN,CAAa,EAAb,CAAlB;AACAoC,EAAAA,SAAS,CAACC,OAAV,GAAoBH,UAApB;AACA,MAAMI,mBAAmB,GAAGzC,KAAK,CAACG,MAAN,CAAa8B,gBAAb,CAA5B;AACAQ,EAAAA,mBAAmB,CAACD,OAApB,GAA8BP,gBAA9B;AAEA,MAAMS,qBAAqB,GAAG1C,KAAK,CAACK,WAAN,CAAkB,UAACsC,IAAD,EAA8B;AAC5E,QAAI,CAACnB,YAAL,EAAmB;AACnBD,IAAAA,UAAU,CAACqB,QAAX,CAAoB,iBAApB,EAAuC;AACrCC,MAAAA,IAAI,EAAErB,YAD+B;AAErCmB,MAAAA,IAAI,EAAJA,IAFqC;AAGrCG,MAAAA,MAAM,EAAE;AAH6B,KAAvC;AAKD,GAP6B,EAO3B,EAP2B,CAA9B;AASA1C,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACXgC,MAAAA,OAAO,CAACW,YAAR,GADW,CAEX;;AACAL,MAAAA,qBAAqB,CAAC,OAAD,CAArB;AACAA,MAAAA,qBAAqB,CAAC,QAAD,CAArB;;AACA,UAAID,mBAAmB,CAACD,OAAxB,EAAiC;AAC/BF,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AACDH,MAAAA,OAAO,CAACK,OAAR,IAAmBQ,YAAY,CAACb,OAAO,CAACK,OAAT,CAA/B;AACD,KATD;AAUD,GAXQ,EAWN,CAACE,qBAAD,EAAwBJ,aAAxB,CAXM,CAAT;AAaAlC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM6C,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAY;AAAA,UAClBC,OADkB,GACND,CAAC,CAACE,MADI,CAClBD,OADkB;AAE1BE,MAAAA,mBAAmB,CAACF,OAAD,CAAnB;AACAT,MAAAA,qBAAqB,CAAC,QAAD,CAArB;AACAN,MAAAA,OAAO,CAACW,YAAR;AACAZ,MAAAA,OAAO,CAACK,OAAR,IAAmBQ,YAAY,CAACb,OAAO,CAACK,OAAT,CAA/B;AACD,KAND;;AAOAc,IAAAA,MAAM,CAACvB,QAAP,CAAgBwB,gBAAhB,CAAiC7C,WAAW,CAAC8C,sBAA7C,EAAqEP,OAArE;AACA,WAAO,YAAM;AACXK,MAAAA,MAAM,CAACvB,QAAP,CAAgB0B,mBAAhB,CAAoC/C,WAAW,CAAC8C,sBAAhD,EAAwEP,OAAxE;AACD,KAFD;AAGD,GAZQ,EAYN,CAACP,qBAAD,EAAwBN,OAAxB,CAZM,CAAT;AAcA,MAAMiB,mBAAmB,GAAGhD,WAAW,CAAC,UAACqD,KAAD,EAAW;AACjDxB,IAAAA,wBAAwB,CAACwB,KAAD,CAAxB;;AACA,QAAIA,KAAJ,EAAW;AACTnC,MAAAA,UAAU,CAACoC,GAAX,CAAe,UAAf,EAA2BxC,8BAA8B,EAAzD;AACD;AACF,GALsC,EAKpC,CAACe,wBAAD,EAA2BX,UAA3B,CALoC,CAAvC;;AAOA,MAAMqC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACtCnC,IAAAA,gBAAgB,QAAhB,YAAAA,gBAAgB,CAAGmC,KAAH,CAAhB;AACAR,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAX,IAAAA,qBAAqB,CAAC,QAAD,CAArB;AACAN,IAAAA,OAAO,CAACW,YAAR;AACAZ,IAAAA,OAAO,CAACK,OAAR,IAAmBQ,YAAY,CAACb,OAAO,CAACK,OAAT,CAA/B;AACD,GAND;;AAQA,MAAMsB,SAAS,GAAG7D,OAAO,CAAC,YAAM;AAC9B,QAAI,CAACwB,eAAL,EAAsB;AACpB,aAAO,IAAP;AACD;;AACD,wBACE,eAAC,SAAD;AAAW,MAAA,UAAU,EAAEF,UAAvB;AAAmC,MAAA,cAAc,EAAEI,cAAnD;AAAmE,MAAA,gBAAgB,EAAEiC;AAArF,OACGnC,eAAe,EADlB,CADF;AAKD,GATwB,EAStB,CAACA,eAAD,EAAkBE,cAAlB,EAAkCiC,oBAAlC,CATsB,CAAzB;;AAWA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,KAAC9B,gBAAD,IAAqBS,qBAAqB,CAAC,OAAD,CAA1C;AACAP,IAAAA,OAAO,CAACK,OAAR,IAAmBQ,YAAY,CAACb,OAAO,CAACK,OAAT,CAA/B;AACD,GAHD;;AAKA,MAAMwB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAI,CAACxC,YAAL,EAAmB;AACnBD,IAAAA,UAAU,CAACqB,QAAX,CAAoB,iBAApB,EAAuC;AACrCC,MAAAA,IAAI,EAAErB,YAD+B;AAErCmB,MAAAA,IAAI,EAAE,OAF+B;AAGrCG,MAAAA,MAAM,EAAE;AAH6B,KAAvC;AAKD,GAPD;;AASA,MAAMmB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACd,OAAD,EAAsB;AACpDE,IAAAA,mBAAmB,CAACF,OAAD,CAAnB;;AACA,QAAIA,OAAJ,EAAa;AACXf,MAAAA,OAAO,CAAC8B,gBAAR;AACA3C,MAAAA,UAAU,CAACqB,QAAX,CAAoB,iBAApB,EAAuC;AACrCC,QAAAA,IAAI,EAAErB,YAD+B;AAErCmB,QAAAA,IAAI,EAAE,QAF+B;AAGrCG,QAAAA,MAAM,EAAE;AAH6B,OAAvC;AAKD,KAPD,MAOO;AACLV,MAAAA,OAAO,CAACW,YAAR;AACAL,MAAAA,qBAAqB,CAAC,QAAD,CAArB;AACD;AACF,GAbD;;AAeA,MAAMyB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAChB,OAAD,EAAsB;AACpD,QAAIA,OAAJ,EAAa;AACXhB,MAAAA,OAAO,CAACK,OAAR,GAAkB4B,UAAU,CAAC,YAAM;AACjCf,QAAAA,mBAAmB,CAACF,OAAD,CAAnB;AACAf,QAAAA,OAAO,CAAC8B,gBAAR;AACA3C,QAAAA,UAAU,CAACqB,QAAX,CAAoB,iBAApB,EAAuC;AACrCC,UAAAA,IAAI,EAAErB,YAD+B;AAErCmB,UAAAA,IAAI,EAAE,QAF+B;AAGrCG,UAAAA,MAAM,EAAE;AAH6B,SAAvC;AAKD,OAR2B,EAQzB,GARyB,CAA5B;AASD,KAVD,MAUO;AACLO,MAAAA,mBAAmB,CAACF,OAAD,CAAnB;AACAf,MAAAA,OAAO,CAACW,YAAR;AACAL,MAAAA,qBAAqB,CAAC,QAAD,CAArB;AACAP,MAAAA,OAAO,CAACK,OAAR,IAAmBQ,YAAY,CAACb,OAAO,CAACK,OAAT,CAA/B;AACD;AACF,GAjBD;;AAmBA,MAAM6B,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBhB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAjB,IAAAA,OAAO,CAAC8B,gBAAR;AACD,GAHD;;AAKAlE,EAAAA,KAAK,CAACI,SAAN,CAAgB,YAAM;AACpB,QAAI6B,gBAAJ,EAAsB;AACpBK,MAAAA,aAAa,CAAC,aAAD,CAAb;AACD,KAFD,MAEO;AACL,UAAIC,SAAS,CAACC,OAAV,KAAsB,aAA1B,EAAyC;AACvCF,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF;AACF,GARD,EAQG,CAACL,gBAAD,EAAmBK,aAAnB,CARH;;AAUA,MAAMgC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAI,CAAC9C,YAAL,EAAmB;AADK,QAEhB+C,UAFgB,GAEDhD,UAAU,CAACsC,KAFV,CAEhBU,UAFgB;AAGxB,QAAI,CAAA/C,YAAY,QAAZ,YAAAA,YAAY,CAAEgD,GAAd,OAAsBD,UAAtB,oBAAsBA,UAAU,CAAEC,GAAlC,CAAJ,EAA2C;AAC3CjD,IAAAA,UAAU,CACPkD,OADH,CACWnE,QAAQ,CAACoE,eADpB,EACqClD,YADrC,EAEGiD,OAFH,CAEWnE,QAAQ,CAACqE,KAFpB;AAGD,GAPD;;AASA,sBACE,eAAC,QAAD;AACE,IAAA,OAAO,EAAE1C,gBAAgB,gBACvB,eAAC,iBAAD;AACE,MAAA,OAAO,EAAEA;AADX,oBAGE;AAAK,MAAA,WAAW,EAAEqC;AAAlB,OAAgCR,SAAhC,CAHF,CADuB,GAMrB,IAPN;AAQE,IAAA,SAAS,EAAC,SARZ;AASE,IAAA,OAAO,EAAEjC,OATX;AAUE,IAAA,eAAe,EAAEA,OAAO,KAAK,OAAZ,GAAoBsC,uBAApB,GAA6CF,uBAVhE;AAWE,IAAA,YAAY,EAAE;AAAA,aAAMnC,SAAN;AAAA,KAXhB;AAYE,IAAA,OAAO,EAAEG;AAZX,kBAcE,0CACE,eAAC,OAAD;AACE,IAAA,KAAK,eAAE,eAAC,WAAD,qBAAa,eAAC,WAAD,QAAcL,MAAd,oBAAcA,MAAM,CAAEgD,KAAtB,CAAb,EAAwDhD,MAAxD,oBAAwDA,MAAM,CAAEiD,QAAhE,CADT;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,YAAY,EAAE;AAAA,aAAM/C,SAAN;AAAA,KAHhB;AAIE,IAAA,YAAY,EAAE;AAACgD,MAAAA,OAAO,EAAE;AAAV,KAJhB;AAKE,IAAA,QAAQ,EAAE7C,gBAAgB,IAAIJ,OAAO,KAAK;AAL5C,kBAOE,eAAC,gBAAD;AACE,6BAAuBL,YAAvB,oBAAuBA,YAAY,CAAEgD,GADvC;AAEE,mBAAY,0BAFd;AAGE,IAAA,YAAY,EAAER,gBAHhB;AAIE,IAAA,YAAY,EAAED,gBAJhB;AAKE,IAAA,OAAO,EAAEM;AALX,KAOGvD,OAPH,CAPF,CADF,CAdF,CADF;AAoCD,CA/LM;AAiMP,gBAAe,UAACiE,MAAD,EAA4B;AACzC,SAAO,gBAGD;AAAA,QAHIxD,UAGJ,QAHIA,UAGJ;AAAA,QAHgBC,YAGhB,QAHgBA,YAGhB;AAAA,4BACmDD,UAAU,CAACsC,KAD9D;AAAA,QACImB,SADJ,qBACIA,SADJ;AAAA,QACeT,UADf,qBACeA,UADf;AAAA,QAC2BU,SAD3B,qBAC2BA,SAD3B;AAAA,QACsClD,QADtC,qBACsCA,QADtC;AAEJ,QAAMmD,SAAS,GAAG3D,UAAU,CAAC4D,KAAX,CAAiB,oBAAjB,EAAuC;AACvDtC,MAAAA,IAAI,EAAErB,YADiD;AAEvDwD,MAAAA,SAAS,EAATA;AAFuD,KAAvC,CAAlB;AAIA,QAAII,gBAAgB,GAAG,KAAvB,CANI,CAOJ;;AACA,QAAIF,SAAJ,EAAe;AAAA;;AACb;AACAE,MAAAA,gBAAgB,wBAAG7D,UAAU,CAAC4D,KAAX,CAAiB,wBAAjB,EAA2C;AAC5DtC,QAAAA,IAAI,EAAErB;AADsD,OAA3C,CAAH,gCAEV,KAFN;AAGD;;AACD,QAAM6D,QAAQ,GAAG7D,YAAH,oBAAGA,YAAY,CAAE8D,IAA/B;AACA,QAAMC,OAAO,GAAG,CAACF,QAAD,IAAaH,SAA7B;;AACA,QAAIK,OAAO,IAAI,CAACH,gBAAhB,EAAkC;AAAA;;AAChC,0BACE,eAAC,SAAD;AACE,QAAA,gBAAgB,0BAAEL,MAAM,CAACS,YAAT,qBAAE,qBAAqB9D,gBADzC;AAEE,QAAA,cAAc,2BAAEqD,MAAM,CAACS,YAAT,qBAAE,sBAAqB7D,cAFvC;AAGE,QAAA,MAAM,2BAAEoD,MAAM,CAACS,YAAT,qBAAE,sBAAqB5D,MAH/B;AAIE,QAAA,eAAe,2BAAEmD,MAAM,CAACS,YAAT,qBAAE,sBAAqB/D,eAJxC;AAKE,QAAA,OAAO,2BAAEsD,MAAM,CAACS,YAAT,qBAAE,sBAAqB3D,OALhC;AAME,QAAA,UAAU,EAAEN,UANd;AAOE,QAAA,YAAY,EAAEC;AAPhB,QADF;AAWD;;AACD,WAAO,IAAP;AACD,GAjCD;AAkCD,CAnCD","sourcesContent":["import React, { useMemo, useState, useRef, useEffect, useCallback } from 'react';\nimport { Controller, Block, Commands, useScrollableContent } from '@ali/4ever-cangjie';\nimport { Dropdown, Tooltip } from '@ali/we-design';\nimport { LEGAL_EVENT } from '@ali/4ever-utils';\nimport { InsertBtnWrapper, TooltipText, PrimaryText, AddIcon } from './styled';\nimport { ActiveInteractionHooks } from '@ali/4ever-component';\nimport { BiPluginConfig } from '../../../types';\nimport GuideMenu from './guideMenu';\nimport { DropdownAnimation } from '@ali/we-util';\nimport { useLeftToolbar } from '@ali/4ever-component';\nimport { mountInsertMenuFromLeftToolbar } from '../actions';\n\ninterface InsertBtnProps {\n  controller: Controller;\n  locale?: any;\n  currentBlock: Block;\n  enableKeyboard?: boolean;\n  renderGuideMenu?: Function;\n  onClickGuideMenu?: Function;\n  trigger?: 'hover' | 'click';\n}\n\nconst { useActiveInteraction } = ActiveInteractionHooks\n\nexport const InsertBtn: React.FC<InsertBtnProps> = (props) => {\n  const {\n    controller,\n    currentBlock,\n    renderGuideMenu,\n    onClickGuideMenu,\n    enableKeyboard,\n    locale,\n    trigger = 'hover',\n  } = props;\n  // 数据流改造后 useZoomContainer 在未触发controller二次更新前为 null\n  const container = useScrollableContent() || document.body;\n  const [guideMenuVisible, setGuideMenuVisibleState] = useState(false);\n  const timeout = useRef(null);\n  const [,actions] = useLeftToolbar();\n  const [activeType, setActiveType] = useActiveInteraction();\n  const activeRef = React.useRef('');\n  activeRef.current = activeType;\n  const guideMenuVisibleRef = React.useRef(guideMenuVisible);\n  guideMenuVisibleRef.current = guideMenuVisible;\n\n  const removeHighlightByType = React.useCallback((type: 'hover' | 'select') => {\n    if (!currentBlock) return;\n    controller.dispatch('removeHighlight', {\n      node: currentBlock,\n      type,\n      reason: 'insertBtn',\n    });\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      actions.clearPrevent();\n      // InsertBtn 在不渲染时会被卸载，在这里兜底清除选中的样式\n      removeHighlightByType('hover');\n      removeHighlightByType('select');\n      if (guideMenuVisibleRef.current) {\n        setActiveType('');\n      }\n      timeout.current && clearTimeout(timeout.current);\n    };\n  }, [removeHighlightByType, setActiveType]);\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      const { visible } = e.detail;\n      setGuideMenuVisible(visible);\n      removeHighlightByType('select');\n      actions.clearPrevent();\n      timeout.current && clearTimeout(timeout.current);\n    };\n    window.document.addEventListener(LEGAL_EVENT.quickInsertMenuVisible, handler);\n    return () => {\n      window.document.removeEventListener(LEGAL_EVENT.quickInsertMenuVisible, handler);\n    };\n  }, [removeHighlightByType, actions]);\n\n  const setGuideMenuVisible = useCallback((state) => {\n    setGuideMenuVisibleState(state);\n    if (state) {\n      controller.run('onAction', mountInsertMenuFromLeftToolbar());\n    }\n  }, [setGuideMenuVisibleState, controller]);\n\n  const handleClickGuideMenu = (value) => {\n    onClickGuideMenu?.(value);\n    setGuideMenuVisible(false);\n    removeHighlightByType('select');\n    actions.clearPrevent();\n    timeout.current && clearTimeout(timeout.current);\n  };\n\n  const guideMenu = useMemo(() => {\n    if (!renderGuideMenu) {\n      return null;\n    }\n    return (\n      <GuideMenu controller={controller} enableKeyboard={enableKeyboard} onClickGuideMenu={handleClickGuideMenu}>\n        {renderGuideMenu()}\n      </GuideMenu>\n    );\n  }, [renderGuideMenu, enableKeyboard, handleClickGuideMenu]);\n\n  const handleMouseLeave = () => {\n    !guideMenuVisible && removeHighlightByType('hover');\n    timeout.current && clearTimeout(timeout.current);\n  };\n\n  const handleMouseEnter = () => {\n    if (!currentBlock) return;\n    controller.dispatch('updateHighlight', {\n      node: currentBlock,\n      type: 'hover',\n      reason: 'insertBtn',\n    })\n  };\n\n  const onVisibleChangeForClick = (visible: boolean) => {\n    setGuideMenuVisible(visible);\n    if (visible) {\n      actions.preventMouseMove();\n      controller.dispatch('updateHighlight', {\n        node: currentBlock,\n        type: 'select',\n        reason: 'insertBtn',\n      })\n    } else {\n      actions.clearPrevent();\n      removeHighlightByType('select');\n    }\n  };\n\n  const onVisibleChangeForHover = (visible: boolean) => {\n    if (visible) {\n      timeout.current = setTimeout(() => {\n        setGuideMenuVisible(visible);\n        actions.preventMouseMove();\n        controller.dispatch('updateHighlight', {\n          node: currentBlock,\n          type: 'select',\n          reason: 'insertBtn',\n        })\n      }, 300);\n    } else {\n      setGuideMenuVisible(visible);\n      actions.clearPrevent();\n      removeHighlightByType('select');\n      timeout.current && clearTimeout(timeout.current);\n    }\n  };\n\n  const handleClick = () => {\n    setGuideMenuVisible(true);\n    actions.preventMouseMove();\n  };\n\n  React.useEffect(() => {\n    if (guideMenuVisible) {\n      setActiveType('newLineMenu');\n    } else {\n      if (activeRef.current === 'newLineMenu') {\n        setActiveType('');\n      }\n    }\n  }, [guideMenuVisible, setActiveType]);\n\n  const onMouseDown = () => {\n    if (!currentBlock) return;\n    const { startBlock } = controller.value;\n    if (currentBlock?.key === startBlock?.key) return;\n    controller\n      .command(Commands.moveToEndOfNode, currentBlock)\n      .command(Commands.focus);\n  };\n\n  return (\n    <Dropdown\n      overlay={guideMenuVisible ? (\n        <DropdownAnimation\n          visible={guideMenuVisible}\n        >\n          <div onMouseDown={onMouseDown}>{guideMenu}</div>\n        </DropdownAnimation>\n      ) : null}\n      placement=\"leftTop\"\n      trigger={trigger}\n      onVisibleChange={trigger === 'hover'?onVisibleChangeForHover: onVisibleChangeForClick}\n      getContainer={() => container}\n      visible={guideMenuVisible}\n    >\n      <span>\n        <Tooltip\n          title={<TooltipText><PrimaryText>{locale?.click}</PrimaryText>{locale?.clickTip}</TooltipText>}\n          placement=\"top\"\n          getContainer={() => container}\n          overlayStyle={{padding: 4}}\n          disabled={guideMenuVisible || trigger === 'hover'}\n        >\n          <InsertBtnWrapper\n            data-drag-handler-key={currentBlock?.key}\n            data-testid=\"newline-guide-insertText\"\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n          >\n            {AddIcon}\n          </InsertBtnWrapper>\n        </Tooltip>\n      </span>\n    </Dropdown>\n  );\n};\n\nexport default (config: BiPluginConfig) => {\n  return ({ controller, currentBlock }: {\n    controller: Controller;\n    currentBlock: Block;\n  }) => {\n    const { composing, startBlock, isFocused, document } = controller.value;\n    const isNewLine = controller.query('isInsertBtnDisplay', {\n      node: currentBlock,\n      composing,\n    });\n    let inTemplateButton = false;\n    // perf\n    if (isNewLine) {\n      // 模板按钮内隐藏 insert btn\n      inTemplateButton = controller.query('isNodeInTemplateButton', {\n        node: currentBlock,\n      }) ?? false;\n    }\n    const nodeText = currentBlock?.text;\n    const showBtn = !nodeText && isNewLine;\n    if (showBtn && !inTemplateButton) {\n      return (\n        <InsertBtn\n          onClickGuideMenu={config.newlineGuide?.onClickGuideMenu}\n          enableKeyboard={config.newlineGuide?.enableKeyboard}\n          locale={config.newlineGuide?.locale}\n          renderGuideMenu={config.newlineGuide?.renderGuideMenu}\n          trigger={config.newlineGuide?.trigger}\n          controller={controller}\n          currentBlock={currentBlock}\n        />\n      );\n    }\n    return null;\n  };\n};\n"],"file":"insertBtn.js"}