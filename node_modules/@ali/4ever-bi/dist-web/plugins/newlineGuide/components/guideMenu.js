import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { EMenuMode, Menu } from '@ali/we-design';
import logger from '@ali/4ever-logger';
import { removeNewlineTriggerText, removeNewlineData } from "../actions";

var GuideMenu = function GuideMenu(props) {
  var controller = props.controller,
      enableKeyboard = props.enableKeyboard,
      query = props.query,
      _props$withoutEmptyPa = props.withoutEmptyParagraphWhitelist,
      withoutEmptyParagraphWhitelist = _props$withoutEmptyPa === void 0 ? [] : _props$withoutEmptyPa;

  var handleClickMenu = function handleClickMenu(value) {
    // 这里加_recently的replace是很临时的一个方案，更加合理的方案是后面去除withoutEmptyParagraphWhitelist，这部分能力需要集成到menu配置上
    var needRemoveEmptyParagraph = withoutEmptyParagraphWhitelist.includes(value.replace('_recently', ''));
    controller.run('onAction', removeNewlineTriggerText(needRemoveEmptyParagraph));
    controller.run('onAction', removeNewlineData());
    /**
     * 这里之所以要做flush是因为外部插入菜单可能导致provider重新rerender导致op丢失
     */

    controller.flush();
    logger.sum("newline_insert_" + value);

    if (props.onClickGuideMenu) {
      props.onClickGuideMenu(value);
    }
  };

  var isPreventKeyEvent = function isPreventKeyEvent() {
    if (controller.value.composing) {
      return true;
    }

    return false;
  };

  return /*#__PURE__*/_createElement(Menu, {
    key: "insert_menu_" + (query || 'all'),
    mode: EMenuMode.vertical,
    selectedKeys: [],
    destroyOverlayWhenInvisible: true,
    onClick: handleClickMenu,
    insertSubmenuToMenuRoot: true,
    shouldSelectFirstItem: !!query,
    shortcutKey: !!enableKeyboard,
    style: {
      padding: 0
    },
    subMenuAutoSelectWithEnter: true,
    isPreventKeyEvent: isPreventKeyEvent
  }, /*#__PURE__*/_createElement("div", {
    "data-testid": "newline-guide-menu" // style={{ padding: '4px 0' }}

  }, props.children));
};

export default GuideMenu;
//# sourceMappingURL=guideMenu.js.map