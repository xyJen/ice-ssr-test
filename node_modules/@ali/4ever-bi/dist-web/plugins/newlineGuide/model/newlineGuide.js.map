{"version":3,"sources":["../../../../../src/plugins/newlineGuide/model/newlineGuide.ts"],"names":["Commands","Text","NEWLINE_GUIDE_TRIGGER","NEWLINE_GUIDE_TRIGGER_CN","NEWLINE_GUIDE_TRIGGER_PLUS","triggerKeyList","triggerList","setNewlineGuide","controller","payload","_newlineGuide","value","data","setData","removeNewlineGuide","rest","getNewlineGuide","isNewLineInsert","block","removeText","type","jc","ind","left","list","isTextList","nodes","text","removeGuideMenuTriggerText","needRemoveEmptyParagraph","newlineGuideData","key","query","point","newlineBlock","document","getNode","textNode","find","node","triggerText","substring","offset","command","removeTextByKey","removeNodeByKey","NewlineGuideData","set","get","remove","removeTriggerText"],"mappings":"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","sourcesContent":["import { Controller, Commands, Block, Text, TextPoint } from '@ali/4ever-cangjie';\nimport { NewlineGuideDataProps } from '../actions';\n\nexport const NEWLINE_GUIDE_TRIGGER = '/';\nexport const NEWLINE_GUIDE_TRIGGER_CN = '、';\nexport const NEWLINE_GUIDE_TRIGGER_PLUS = '+';\nexport const triggerKeyList = [NEWLINE_GUIDE_TRIGGER_PLUS, NEWLINE_GUIDE_TRIGGER];\nexport const triggerList = [NEWLINE_GUIDE_TRIGGER_PLUS, NEWLINE_GUIDE_TRIGGER_CN, NEWLINE_GUIDE_TRIGGER];\n\nfunction setNewlineGuide(controller: Controller, payload: NewlineGuideDataProps) {\n  const { _newlineGuide } = controller.value.data;\n  return controller.setData({\n    ...controller.value.data,\n    _newlineGuide: {\n      ..._newlineGuide,\n      ...payload,\n    },\n  });\n}\n\nfunction removeNewlineGuide(controller: Controller) {\n  const { _newlineGuide, ...rest } = controller.value.data;\n  return controller.setData(rest);\n}\n\nfunction getNewlineGuide(controller: Controller): NewlineGuideDataProps | undefined {\n  return controller.value.data._newlineGuide;\n}\n\nconst isNewLineInsert = (block: Block, removeText: string): boolean => {\n  return block.type === 'paragraph'\n  && (block.data.jc || 'left') === 'left'\n  && (!block.data.ind || block.data.ind.left === 0)\n  && !block.data.list\n  && Text.isTextList(block.nodes)\n  && block.text === removeText;\n};\n\nfunction removeGuideMenuTriggerText(controller: Controller, needRemoveEmptyParagraph: boolean) {\n  const newlineGuideData = getNewlineGuide(controller);\n\n  if (!newlineGuideData) return controller;\n\n  const { key, query = '' } = newlineGuideData;\n  const point = newlineGuideData.point as TextPoint;\n  if (!key) return controller;\n  const newlineBlock = controller.value.document.getNode(key) as Block;\n  if (!newlineBlock) return controller;\n  const textNode = newlineBlock.nodes.find((node) => point?.key === node.key);\n  if (!textNode) return controller;\n  const triggerText = textNode.text.substring(point?.offset - 1, point?.offset);\n  let removeText = triggerText;\n\n  if (point && query) {\n    // 点击输入取query的内容\n    removeText = `${triggerText}${query}`;\n  }\n\n  if (textNode.text && textNode.text !== '@' && point?.offset > -1) {\n    controller\n      .command(Commands.removeTextByKey, textNode.key, point.offset - 1, removeText);\n  }\n  \n  if (needRemoveEmptyParagraph && isNewLineInsert(newlineBlock, removeText)) {\n    // 如果是空段落则移除当前行\n    controller.command(Commands.removeNodeByKey, newlineBlock.key);\n  }\n  return controller;\n}\n\nexport const NewlineGuideData = {\n  set: setNewlineGuide,\n  get: getNewlineGuide,\n  remove: removeNewlineGuide,\n  removeTriggerText: removeGuideMenuTriggerText,\n};\n"],"file":"newlineGuide.js"}