import { Commands } from '@ali/4ever-cangjie';
import { isCoupleKey, isLeftCoupleKey, isRightBracket, getRightCoupleKey, isEnglishQuoteKey, isChineseQuoteKey, getChineseQuoteCP } from "../utils/coupleKey";
var regExp = /[\u4e00-\u9fa5\d\w]/;

function isTextOrQuote(_char) {
  return _char && (regExp.test(_char) || isEnglishQuoteKey(_char));
}

export default function onCangjieInput(event, controller, next) {
  var data = event.detail.data;

  if (!data || !isCoupleKey(data)) {
    return next();
  }

  var value = controller.value;
  var selection = value.selection,
      startText = value.startText;

  if (!selection || !startText) {
    return next();
  }

  var _ref = selection.anchor,
      offset = _ref.offset;
  var leftChar = startText.text[offset - 1];
  var rightChar = startText.text[offset];

  if (selection.isExpanded && isChineseQuoteKey(data)) {
    event.preventDefault();
    return controller.command.apply(controller, [Commands.wrapText].concat(getChineseQuoteCP(data)));
  }

  if (selection.isExpanded && isLeftCoupleKey(data)) {
    event.preventDefault();
    return controller.command(Commands.wrapText, data, getRightCoupleKey(data));
  }

  if (selection.isCollapsed && isEnglishQuoteKey(data) && data === rightChar && isTextOrQuote(leftChar)) {
    event.preventDefault();
    return controller.command(Commands.moveForward, 1);
  }

  if (selection.isCollapsed && isEnglishQuoteKey(data) && (isTextOrQuote(leftChar) || isTextOrQuote(rightChar))) {
    return next();
  }

  if (selection.isCollapsed && isLeftCoupleKey(data)) {
    event.preventDefault();
    return controller.command(Commands.wrapText, data, getRightCoupleKey(data));
  }

  if (selection.isCollapsed && isRightBracket(data) && rightChar === data) {
    event.preventDefault();
    return controller.command(Commands.moveForward, 1);
  }

  return next();
}
//# sourceMappingURL=onCangjieInput.js.map