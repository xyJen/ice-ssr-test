import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { PluginRoles, CommentPlugin } from '@ali/4ever-bamboo';
import { IconComment } from '@ali/4ever-component';

var _ref = /*#__PURE__*/_createElement(IconComment, null);

export default function createRenderHoverToolbar(config) {
  var _config$locale = config.locale,
      locale = _config$locale === void 0 ? {} : _config$locale,
      isDisabled = config.isDisabled;
  return function (props, controller, getNode) {
    var buttonName = props.buttonName;

    switch (buttonName) {
      case 'default':
        {
          var disabled = isDisabled && isDisabled();
          return !disabled ? {
            icon: _ref,
            title: locale == null ? void 0 : locale.addComment,
            tooltip: locale == null ? void 0 : locale.addComment,
            onClick: function onClick() {
              var node = getNode();
              if (!node) return;
              controller.command('selectNode', node);
              controller.run('onAction', {
                type: CommentPlugin.actions.ACTION_COMMENT_CLICK
              });
            },
            role: PluginRoles.comment
          } : null;
        }

      default:
        return null;
    }
  };
}
//# sourceMappingURL=createRenderHoverToolbar.js.map