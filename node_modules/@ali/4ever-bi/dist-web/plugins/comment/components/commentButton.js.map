{"version":3,"sources":["../../../../../src/plugins/comment/components/commentButton.tsx"],"names":["React","IconButton","ToolbarAddCommentNormal","environment","CommentPlugin","PluginRoles","MOD","IS_MAC","CommentButton","props","locale","config","controller","rest","triggerComment","useCallback","run","type","actions","ACTION_COMMENT_CLICK","disabled","query","queries","canComment","comment","renderButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,uBAAT,QAAwC,cAAxC;AACA,SAAqBC,WAArB,QAAwC,oBAAxC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AAUA,IAAMC,GAAG,GAAGH,WAAW,CAACI,MAAZ,GAAqB,GAArB,GAA2B,MAAvC;;wBAeY,eAAC,uBAAD,O;;AAbZ,OAAO,IAAMC,aAA4C,GAAG,SAA/CA,aAA+C,CAACC,KAAD,EAAW;AAAA,MAC7DC,MAD6D,GACrBD,KADqB,CAC7DC,MAD6D;AAAA,MACrDC,MADqD,GACrBF,KADqB,CACrDE,MADqD;AAAA,MAC7CC,UAD6C,GACrBH,KADqB,CAC7CG,UAD6C;AAAA,MAC9BC,IAD8B,iCACrBJ,KADqB;;AAErE,MAAMK,cAAc,GAAGd,KAAK,CAACe,WAAN,CAAkB,YAAM;AAC7CH,IAAAA,UAAU,CAACI,GAAX,CAAe,UAAf,EAA2B;AACzBC,MAAAA,IAAI,EAAEb,aAAa,CAACc,OAAd,CAAsBC;AADH,KAA3B;AAGD,GAJsB,EAIpB,CAACP,UAAD,CAJoB,CAAvB;AAKA,MAAMQ,QAAQ,GAAG,CAACR,UAAU,CAACS,KAAX,CAAiBjB,aAAa,CAACkB,OAAd,CAAsBC,UAAvC,CAAlB;AACA;AAAA;AACE;AACA,mBAAC,UAAD,eACMV,IADN;AAEE,MAAA,OAAO,EAAKH,MAAM,CAACc,OAAZ,UAAwBlB,GAAxB,cAFT;AAGE,MAAA,IAAI,MAHN;AAIE,MAAA,OAAO,EAAEQ,cAJX;AAKE,MAAA,QAAQ,EAAEM,QALZ;AAME,MAAA,IAAI,EAAEf,WAAW,CAACmB;AANpB;AAFF;AAWD,CAnBM;AAqBP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACd,MAAD,EAAY;AACtC,sBAAO,eAAC,aAAD,EAAmBA,MAAnB,CAAP;AACD,CAFM","sourcesContent":["import React from 'react';\nimport { IconButton } from '@ali/we-toolbar';\nimport { ToolbarAddCommentNormal } from '@ali/we-icon';\nimport { Controller, environment } from '@ali/4ever-cangjie';\nimport { CommentPlugin, PluginRoles } from '@ali/4ever-bamboo';\n\nexport interface IcommentButtonProps {\n  locale: any;\n  config?: any;\n  size?: string;\n  showTitle?: boolean;\n  controller: Controller;\n}\n\nconst MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';\n\nexport const CommentButton: React.FC<IcommentButtonProps> = (props) => {\n  const { locale, config, controller, ...rest } = props;\n  const triggerComment = React.useCallback(() => {\n    controller.run('onAction', {\n      type: CommentPlugin.actions.ACTION_COMMENT_CLICK,\n    });\n  }, [controller]);\n  const disabled = !controller.query(CommentPlugin.queries.canComment);\n  return (\n    // @ts-ignore\n    <IconButton\n      {...rest}\n      tooltip={`${locale.comment} (${MOD}+Shift+m)`}\n      icon={<ToolbarAddCommentNormal />}\n      onClick={triggerComment}\n      disabled={disabled}\n      role={PluginRoles.comment}\n    />\n  );\n};\n\nexport const renderButton = (config) => {\n  return <CommentButton {...config} />;\n};\n"],"file":"commentButton.js"}