import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { PluginRoles, CommentPlugin } from '@ali/4ever-bamboo';
import { IconComment } from '@ali/4ever-component';
import { environment } from '@ali/4ever-cangjie';
var MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';

var _ref = /*#__PURE__*/_createElement(IconComment, null);

export default function createCommentButton(props) {
  var controller = props.controller,
      locale = props.locale,
      icon = props.icon,
      title = props.title,
      tooltip = props.tooltip,
      badgeDot = props.badgeDot,
      disabled = props.disabled;

  var handleClick = function handleClick() {
    controller.run('onAction', {
      type: CommentPlugin.actions.ACTION_COMMENT_CLICK
    });
  };

  var isDisabled = disabled || !controller.query(CommentPlugin.queries.canComment);
  var defaultTooltip = React.useMemo(function () {
    return {
      title: locale == null ? void 0 : locale.comment,
      shortCut: MOD + "+Shift+m"
    };
  }, []);
  var buttonConfig = {
    icon: icon || _ref,
    onClick: handleClick,
    title: title || (locale == null ? void 0 : locale.title),
    tooltip: tooltip || defaultTooltip,
    badgeDot: badgeDot,
    disabled: isDisabled,
    role: PluginRoles.comment
  };
  return buttonConfig;
}
//# sourceMappingURL=createCommentButton.js.map