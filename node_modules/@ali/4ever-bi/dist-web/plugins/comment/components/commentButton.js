import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { IconButton } from '@ali/we-toolbar';
import { ToolbarAddCommentNormal } from '@ali/we-icon';
import { environment } from '@ali/4ever-cangjie';
import { CommentPlugin, PluginRoles } from '@ali/4ever-bamboo';
var MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';

var _ref = /*#__PURE__*/_createElement(ToolbarAddCommentNormal, null);

export var CommentButton = function CommentButton(props) {
  var locale = props.locale,
      config = props.config,
      controller = props.controller,
      rest = _objectWithoutPropertiesLoose(props, ["locale", "config", "controller"]);

  var triggerComment = React.useCallback(function () {
    controller.run('onAction', {
      type: CommentPlugin.actions.ACTION_COMMENT_CLICK
    });
  }, [controller]);
  var disabled = !controller.query(CommentPlugin.queries.canComment);
  return (
    /*#__PURE__*/
    // @ts-ignore
    _createElement(IconButton, _extends({}, rest, {
      tooltip: locale.comment + " (" + MOD + "+Shift+m)",
      icon: _ref,
      onClick: triggerComment,
      disabled: disabled,
      role: PluginRoles.comment
    }))
  );
};
export var renderButton = function renderButton(config) {
  return /*#__PURE__*/_createElement(CommentButton, config);
};
//# sourceMappingURL=commentButton.js.map