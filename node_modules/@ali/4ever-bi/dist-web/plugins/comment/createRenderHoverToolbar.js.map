{"version":3,"sources":["../../../../src/plugins/comment/createRenderHoverToolbar.tsx"],"names":["React","PluginRoles","CommentPlugin","IconComment","createRenderHoverToolbar","config","locale","isDisabled","props","controller","getNode","buttonName","disabled","icon","title","addComment","tooltip","onClick","node","command","run","type","actions","ACTION_COMMENT_CLICK","role","comment"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,mBAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;;wBAcgB,eAAC,WAAD,O;;AAVhB,eAAe,SAASC,wBAAT,CACbC,MADa,EAEmB;AAAA,uBACIA,MADJ,CACxBC,MADwB;AAAA,MACxBA,MADwB,+BACf,EADe;AAAA,MACXC,UADW,GACIF,MADJ,CACXE,UADW;AAEhC,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAoBC,OAApB,EAAgC;AAAA,QAC7BC,UAD6B,GACdH,KADc,CAC7BG,UAD6B;;AAErC,YAAQA,UAAR;AACE,WAAK,SAAL;AAAgB;AACd,cAAMC,QAAQ,GAAGL,UAAU,IAAIA,UAAU,EAAzC;AACA,iBAAO,CAACK,QAAD,GAAY;AACjBC,YAAAA,IAAI,MADa;AAEjBC,YAAAA,KAAK,EAAER,MAAF,oBAAEA,MAAM,CAAES,UAFE;AAGjBC,YAAAA,OAAO,EAAEV,MAAF,oBAAEA,MAAM,CAAES,UAHA;AAIjBE,YAAAA,OAAO,EAAE,mBAAM;AACb,kBAAMC,IAAI,GAAGR,OAAO,EAApB;AACA,kBAAI,CAACQ,IAAL,EAAW;AACXT,cAAAA,UAAU,CAACU,OAAX,CAAmB,YAAnB,EAAiCD,IAAjC;AACAT,cAAAA,UAAU,CAACW,GAAX,CAAe,UAAf,EAA2B;AACzBC,gBAAAA,IAAI,EAAEnB,aAAa,CAACoB,OAAd,CAAsBC;AADH,eAA3B;AAGD,aAXgB;AAYjBC,YAAAA,IAAI,EAAEvB,WAAW,CAACwB;AAZD,WAAZ,GAaH,IAbJ;AAcD;;AACD;AAAS,eAAO,IAAP;AAlBX;AAoBD,GAtBD;AAuBD","sourcesContent":["import * as React from 'react';\nimport { PluginRoles, CommentPlugin } from '@ali/4ever-bamboo';\nimport { IconComment } from '@ali/4ever-component';\nimport type { CommentPluginConfigs } from '@ali/4ever-plugin-comment';\nimport type { BiPlugin } from '../../types';\n\nexport default function createRenderHoverToolbar(\n  config: CommentPluginConfigs,\n): BiPlugin['renderHoverToolbar'] {\n  const { locale = {}, isDisabled } = config;\n  return (props, controller, getNode) => {\n    const { buttonName } = props;\n    switch (buttonName) {\n      case 'default': {\n        const disabled = isDisabled && isDisabled();\n        return !disabled ? {\n          icon: <IconComment />,\n          title: locale?.addComment,\n          tooltip: locale?.addComment,\n          onClick: () => {\n            const node = getNode();\n            if (!node) return;\n            controller.command('selectNode', node);\n            controller.run('onAction', {\n              type: CommentPlugin.actions.ACTION_COMMENT_CLICK,\n            });\n          },\n          role: PluginRoles.comment,\n        } : null;\n      }\n      default: return null;\n    }\n  };\n}\n"],"file":"createRenderHoverToolbar.js"}