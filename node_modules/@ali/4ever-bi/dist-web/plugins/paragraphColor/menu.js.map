{"version":3,"sources":["../../../../src/plugins/paragraphColor/menu.tsx"],"names":["React","useState","useCallback","useMemo","ColorPanel","PluginRoles","setParagraphColor","setParagraphBgColor","createColorPanelMenu","props","controller","currentBlock","menuItem","initialColor","query","node","initialBgColor","color","setColor","bgColor","setBgColor","handleColorClick","run","handleBackgroundClick","paragraphColor"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;qBAA4B,a;AAC5B,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SAASC,iBAAT,EAA4BC,mBAA5B;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,SAAO,UAACC,KAAD,EAAuB;AAAA,QACpBC,UADoB,GACuBD,KADvB,CACpBC,UADoB;AAAA,QACIC,YADJ,GACuBF,KADvB,CACRG,QADQ,CACID,YADJ;AAG5B,QAAME,YAAY,GAAGV,OAAO,CAC1B;AAAA,aAAMO,UAAU,CAACI,KAAX,CAAiB,mBAAjB,EAAsC;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAtC,CAAN;AAAA,KAD0B,EAExB,CAACD,UAAD,EAAaC,YAAb,CAFwB,CAA5B;AAKA,QAAMK,cAAc,GAAGb,OAAO,CAC5B;AAAA,aAAMO,UAAU,CAACI,KAAX,CAAiB,qBAAjB,EAAwC;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAxC,CAAN;AAAA,KAD4B,EAE1B,CAACD,UAAD,EAAaC,YAAb,CAF0B,CAA9B;;AAR4B,oBAaFV,QAAQ,CAACY,YAAD,CAbN;AAAA,QAarBI,KAbqB;AAAA,QAadC,QAbc;;AAAA,qBAcEjB,QAAQ,CAACe,cAAD,CAdV;AAAA,QAcrBG,OAdqB;AAAA,QAcZC,UAdY;;AAgB5B,QAAMC,gBAAgB,GAAGnB,WAAW,CAAC,UAACe,KAAD,EAAmB;AACtDP,MAAAA,UAAU,CAACY,GAAX,CAAe,UAAf,EAA2BhB,iBAAiB,CAAC;AAAES,QAAAA,IAAI,EAAEJ,YAAR;AAAsBM,QAAAA,KAAK,EAALA;AAAtB,OAAD,CAA5C;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAHmC,EAGjC,CAACP,UAAD,EAAaC,YAAb,CAHiC,CAApC;AAKA,QAAMY,qBAAqB,GAAGrB,WAAW,CAAC,UAACe,KAAD,EAAmB;AAC3DP,MAAAA,UAAU,CAACY,GAAX,CAAe,UAAf,EAA2Bf,mBAAmB,CAAC;AAAEQ,QAAAA,IAAI,EAAEJ,YAAR;AAAsBM,QAAAA,KAAK,EAALA;AAAtB,OAAD,CAA9C;AACAG,MAAAA,UAAU,CAACH,KAAD,CAAV;AACD,KAHwC,EAGtC,CAACP,UAAD,EAAaC,YAAb,CAHsC,CAAzC;AAKA,wBACE,eAAC,UAAD;AACE,MAAA,KAAK,EAAEM,KADT;AAEE,MAAA,eAAe,EAAEE,OAFnB;AAGE,MAAA,YAAY,EAAEE,gBAHhB;AAIE,MAAA,sBAAsB,EAAEE,qBAJ1B;AAKE,MAAA,iBAAiB,MALnB;AAME,MAAA,IAAI,EAAElB,WAAW,CAACmB;AANpB,MADF;AAUD,GApCD;AAqCD,CAtCD;;AAwCA,eAAehB,oBAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { ColorPanel } from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\n\nimport { setParagraphColor, setParagraphBgColor } from './actions';\nimport { IMenuProps } from './types';\n\nconst createColorPanelMenu = () => {\n  return (props: IMenuProps) => {\n    const { controller, menuItem: { currentBlock } } = props;\n\n    const initialColor = useMemo(\n      () => controller.query('getParagraphColor', { node: currentBlock })\n      , [controller, currentBlock],\n    );\n\n    const initialBgColor = useMemo(\n      () => controller.query('getParagraphBgColor', { node: currentBlock })\n      , [controller, currentBlock],\n    );\n\n    const [color, setColor] = useState(initialColor);\n    const [bgColor, setBgColor] = useState(initialBgColor);\n\n    const handleColorClick = useCallback((color: string) => {\n      controller.run('onAction', setParagraphColor({ node: currentBlock, color }));\n      setColor(color);\n    }, [controller, currentBlock]);\n\n    const handleBackgroundClick = useCallback((color: string) => {\n      controller.run('onAction', setParagraphBgColor({ node: currentBlock, color }));\n      setBgColor(color);\n    }, [controller, currentBlock]);\n\n    return (\n      <ColorPanel\n        color={color}\n        backgroundColor={bgColor}\n        onColorClick={handleColorClick}\n        onBackgroundColorClick={handleBackgroundClick}\n        enableResetButton\n        role={PluginRoles.paragraphColor}\n      />\n    );\n  };\n};\n\nexport default createColorPanelMenu;\n"],"file":"menu.js"}