import { Block } from '@ali/4ever-cangjie';
import { ListGroupPlugin } from '@ali/4ever-bamboo';
import { List } from '@ali/4ever-plugin-list';
var isListGroupAvailable = ListGroupPlugin.utils.isListGroupAvailable; // 根据 currentBlock.key 获取对应的 nodes

var getCurrentBlocks = function getCurrentBlocks(controller, key) {
  var _controller$value = controller.value,
      document = _controller$value.document,
      selection = _controller$value.selection;
  var path = document.getPath(key);
  var targetNode = document.getNodeByPath(path);

  if (!Block.isBlock(targetNode)) {
    return [];
  }

  var blocks = controller.query('getSiblingDraggableBlocks', targetNode) || []; // 折叠模式下，仅对折叠的列表节点设置样式

  var isCollapsed = selection.isCollapsed;

  if (isCollapsed) {
    if (isListGroupAvailable(controller) && List.isList(blocks[0])) {
      return [blocks[0]];
    }
  } else {
    var listNodesKeys = document.getNodesAtRange(selection).filter(List.isList).map(function (node) {
      return node.key;
    });
    return blocks.filter(function (node) {
      return !List.isList(node) || listNodesKeys.includes(node.key);
    });
  }

  return blocks;
};

export default getCurrentBlocks;
//# sourceMappingURL=getCurrentBlocks.js.map