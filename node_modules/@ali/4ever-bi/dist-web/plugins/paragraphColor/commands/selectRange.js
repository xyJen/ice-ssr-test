import { Selection, Commands, Queries } from '@ali/4ever-cangjie';

var selectRangeFromNode = function selectRangeFromNode(controller, node) {
  var _controller$value = controller.value,
      range = _controller$value.selection,
      document = _controller$value.document;
  var selection = Selection.create(range.moveToRangeOfNode(node, controller).convertToTextPoints(document));
  return controller.command(Commands.select, selection);
};

var selectRangeFromNodes = function selectRangeFromNodes(controller, nodes) {
  var startBlock = nodes[0];
  var endBlock = nodes[nodes.length - 1];
  var anchor = controller.query(Queries.pointAtStartOfNode, startBlock);
  var focus = controller.query(Queries.pointAtEndOfNode, endBlock);
  var selection = Selection.create({
    anchor: anchor,
    focus: focus
  });
  return controller.command(Commands.select, selection);
};

var selectRange = function selectRange(controller, payload) {
  var nodeOrNodes = payload.nodeOrNodes;

  if (Array.isArray(nodeOrNodes)) {
    return selectRangeFromNodes(controller, nodeOrNodes);
  } else {
    return selectRangeFromNode(controller, nodeOrNodes);
  }
};

export default selectRange;
//# sourceMappingURL=selectRange.js.map