{"version":3,"sources":["../../../../../src/plugins/audio/mobile/audio.tsx"],"names":["React","PureComponent","useScrollableContainer","EmbedPlugin","EmbedInlineToolbar","AudioInlineToolbar","MobileEmbedCard","AudioPreview","Audio","props","ref","createRef","previewRef","getNodeData","node","data","onMediaLoadError","src","onMediaLoadSuccess","onDownloadFile","name","type","size","onDownload","allowDownload","state","componentDidMount","then","res","setState","renderPreview","transformAudioURL","locale","renderCard","onPreview","renderInlineToolbar","controller","current","render","viewType","attributes","isSelected","Container","scrollableContainer"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { useScrollableContainer, EmbedPlugin } from '@ali/4ever-bamboo';\nimport {\n  EmbedInlineToolbar as AudioInlineToolbar,\n} from '@ali/4ever-factory';\n\nconst {\n  MobileEmbedCard, AudioPreview,\n} = EmbedPlugin;\n\ninterface IProps {\n  controller: Controller;\n  attributes: any;\n  node: any;\n  locale: any;\n  mobile: boolean;\n  isSelected: boolean;\n  transformAudioURL?: (src: string) => string;\n  onMediaLoadSuccess?: any;\n  onMediaLoadError?: any;\n  scrollableContainer: HTMLElement | Window;\n  onDownload?: Function;\n  allowDownload?: ((src: string) => Promise<boolean>) | boolean;\n  onPreview?: (\n    url: string,\n  ) => Promise<{ previewUrl: string }>;\n}\n\ninterface IState {\n  allowDownload: boolean;\n}\n\nclass Audio extends PureComponent<IProps, IState> {\n  ref = React.createRef<HTMLDivElement>();\n\n  previewRef = React.createRef();\n\n  constructor(props: IProps) {\n    super(props);\n    const { allowDownload } = props;\n    this.state = {\n      allowDownload: typeof allowDownload === 'boolean' ? allowDownload : false,\n    };\n  }\n\n  componentDidMount() {\n    const { allowDownload } = this.props;\n    const { src } = this.getNodeData();\n\n    if (typeof allowDownload === 'function') {\n      allowDownload(src).then((res) => {\n        this.setState({\n          allowDownload: res,\n        });\n      });\n    }\n  }\n\n  getNodeData = () => {\n    const { node } = this.props;\n    const { data } = node || {};\n    return data;\n  };\n\n  onMediaLoadError = () => {\n    const { src } = this.getNodeData();\n    const { onMediaLoadError } = this.props;\n    if (onMediaLoadError) {\n      onMediaLoadError(src);\n    }\n  };\n\n  onMediaLoadSuccess = () => {\n    const { src } = this.getNodeData();\n    const { onMediaLoadSuccess } = this.props;\n    if (onMediaLoadSuccess) {\n      onMediaLoadSuccess(src);\n    }\n  };\n\n  onDownloadFile = () => {\n    const { src, name, type, size } = this.getNodeData();\n    const { onDownload } = this.props;\n    if (onDownload) {\n      onDownload(src, {\n        name,\n        type,\n        size,\n      });\n    }\n  };\n\n  renderPreview() {\n    const { allowDownload } = this.state;\n    const {\n      transformAudioURL,\n      locale,\n    } = this.props;\n\n    const { name, size, src } = this.getNodeData();\n\n    return (\n      <AudioPreview\n        allowDownload={allowDownload}\n        onMediaLoadSuccess={this.onMediaLoadSuccess}\n        onMediaLoadError={this.onMediaLoadError}\n        transformAudioURL={transformAudioURL}\n        locale={locale}\n        name={name}\n        size={size}\n        src={src}\n        onDownloadFile={this.onDownloadFile}\n        isMobile\n      />\n    );\n  }\n\n  renderCard() {\n    const { name, src, type, size } = this.getNodeData();\n    const { onPreview } = this.props;\n\n    return (\n      <MobileEmbedCard\n        name={name}\n        onPreview={onPreview}\n        src={src}\n        type={type}\n        size={size}\n      />\n    );\n  }\n\n  renderInlineToolbar() {\n    const { controller, node, locale } = this.props;\n\n    return (\n      <AudioInlineToolbar\n        controller={controller}\n        node={node}\n        locale={locale}\n        triggerNode={this.ref.current}\n      />\n    );\n  }\n\n  render() {\n    const { viewType } = this.getNodeData();\n    const { attributes, isSelected } = this.props;\n\n    return (\n      <React.Fragment>\n        {isSelected ? this.renderInlineToolbar() : null}\n        <div {...attributes} ref={this.ref}>\n          {viewType === 'preview' ? this.renderPreview() : this.renderCard()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Container: React.FC<IProps> = (props) => {\n  const scrollableContainer = useScrollableContainer();\n\n  return <Audio {...props} scrollableContainer={scrollableContainer} />;\n};\n\nexport default Container;\n"],"file":"audio.js"}