import { Commands } from '@ali/4ever-cangjie';
import { Code } from '@ali/4ever-mo';
import decreaseIndent from "../commands/decreaseIndent";
import { getClosestParagraph } from '@ali/4ever-utils';
import { IndentTrigger } from "../utils";
export default function onDelete(event, editor, next) {
  var value = editor.value;
  var document = value.document;
  var selection = value.selection;

  if (selection != null && selection.isExpanded) {
    return next();
  }

  var startText = value.startText; // 代码块因为不是 void(历史原因)，当内容末尾是 4 个空格时，要跳过这段逻辑

  if (Code.isCode(startText)) {
    return next();
  }

  var startOffset = selection.convertToTextPoints(document).start.offset;

  if (startOffset > 0) {
    if (startOffset < 4) {
      return next();
    }

    var prevText = startText ? startText.text.slice(startOffset - 4, startOffset) : '';

    if (prevText !== '    ') {
      return next();
    }
    /* 若前面有四个连续空格，则删除 */


    event.preventDefault();
    return editor.command(Commands.removeTextByKey, startText ? startText.key : '', startOffset - 4, '    ');
  }
  /* 在行首 backspace/delete 撤销缩进 */


  var currentParagraph = getClosestParagraph(value);

  if (!currentParagraph) {
    return next();
  }

  var isDeleteAtFirstChar = selection.anchor.isAtStartOfNode(currentParagraph);

  if (!isDeleteAtFirstChar) {
    return next();
  }

  var ind = currentParagraph.data.ind;

  if (!ind) {
    return next();
  }

  var hasLeftInd = ind.leftChars || ind.left || ind.firstLine || ind.firstLineChars || ind.hanging || ind.hangingChars;

  if (!hasLeftInd) {
    return next();
  }

  event.preventDefault();
  return decreaseIndent(editor, IndentTrigger.keyboard);
}
//# sourceMappingURL=onDelete.js.map