import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { IndentButton } from '@ali/we-toolbar';
import { PluginRoles } from '@ali/4ever-bamboo';
import { DECREASE_HOT_KEY_TIP, INCREASE_HOT_KEY_TIP } from "../utils/hotKeyTips";
;
import { increaseIndent, decreaseIndent } from "../actions";
var titles = {
  increase: INCREASE_HOT_KEY_TIP,
  decrease: DECREASE_HOT_KEY_TIP
};
var MemoIndentButton = /*#__PURE__*/React.memo(IndentButton);
export default function Button(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var isInc = true; // 默认始终增加缩进

  var onSelect = React.useCallback(function (value) {
    controller.run('onAction', value === 'increase' ? increaseIndent() : decreaseIndent());
  }, [controller]);
  var handleClick = React.useCallback(function () {
    controller.run('onAction', increaseIndent());
  }, [controller]);
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var disabled = isCollapsedAtEdge || controller.query('isSelectionInListSymbol');
  var tip = isInc ? locale.rightButtonTitle + " " + INCREASE_HOT_KEY_TIP : locale.leftButtonTitle + " " + DECREASE_HOT_KEY_TIP;
  return /*#__PURE__*/_createElement(MemoIndentButton, _extends({}, rest, {
    shortcutText: tip,
    titles: titles,
    disabled: disabled,
    testid: "bi-toolbar-indent",
    onClick: handleClick,
    onSelect: onSelect,
    role: PluginRoles.indent
  }));
}
//# sourceMappingURL=IndentButton.js.map