{"version":3,"sources":["../../../../../src/plugins/indent/components/createMobileButtons.tsx"],"names":["React","increaseIndent","decreaseIndent","getClosestParagraph","MAX_INDENT_SIZE","MOBILE_TOOLBAR","increase","icon","action","decrease","canIndent","controller","isInc","value","startBlock","endBlock","indentNode","data","ind","left","list","level","useDisabledAndClick","isCollapsedAtEdge","selection","isDisabled","Boolean","query","handleClick","useCallback","run","createMobileHeading","locale","Object","keys","reduce","result","type","props","Wrapper","item","indentable"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport * as React from 'react';\nimport { increaseIndent, decreaseIndent } from '../actions';\nimport type { MobileToolbarButtonProps } from '@ali/4ever-component';\nimport { getClosestParagraph, MAX_INDENT_SIZE } from '@ali/4ever-utils';\nimport { Controller } from '@ali/4ever-cangjie';\n\nconst MOBILE_TOOLBAR = {\n  increase: {\n    icon: 'indentRight',\n    action: increaseIndent,\n  },\n  decrease: {\n    icon: 'indentLeft',\n    action: decreaseIndent,\n  },\n};\n\nfunction canIndent(controller: Controller, isInc: boolean) {\n  const { value } = controller;\n  const { startBlock, endBlock } = value;\n  if (startBlock !== endBlock || !startBlock) {\n    return true;\n  }\n  const indentNode = getClosestParagraph(value, startBlock);\n  if (!indentNode) {\n    return true;\n  }\n\n  // 减少的情况。如果没有、或者已经很小了，就 disable\n  if (!isInc && !indentNode.data?.ind?.left && !indentNode.data?.list?.level) {\n    return false;\n  }\n\n  // 增加的情况。如果有、并且已经很大了，就 disable\n  if (\n    isInc &&\n    indentNode.data?.ind?.left &&\n    indentNode.data.ind.left >= MAX_INDENT_SIZE\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction useDisabledAndClick(controller, action) {\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = Boolean(\n    isCollapsedAtEdge ||\n      controller.query('isSelectionInHr') ||\n      controller.query('isSelectionInListSymbol'),\n  );\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', action()),\n    [action, controller],\n  );\n  return { isDisabled, handleClick };\n}\n\nexport default function createMobileHeading(locale: any) {\n  return Object.keys(MOBILE_TOOLBAR).reduce((result, type) => {\n    result[`${type}MobileBig`] = (props: MobileToolbarButtonProps) => {\n      const { controller, Wrapper, item } = props;\n      const { icon, action } = MOBILE_TOOLBAR[type];\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const { isDisabled, handleClick } = useDisabledAndClick(\n        controller,\n        action,\n      );\n      const indentable =\n        !isDisabled && canIndent(controller, type === 'increase');\n\n      return (\n        <Wrapper\n          item={item}\n          type=\"big\"\n          icon={icon}\n          isDisabled={isDisabled || !indentable}\n          onClick={handleClick}\n        />\n      );\n    };\n    result[`${type}Mobile`] = (props: MobileToolbarButtonProps) => {\n      const { controller, Wrapper, item } = props;\n      const { icon, action } = MOBILE_TOOLBAR[type];\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const { isDisabled, handleClick } = useDisabledAndClick(\n        controller,\n        action,\n      );\n\n      return (\n        <Wrapper\n          item={item}\n          type=\"horiz\"\n          icon={icon}\n          isDisabled={Boolean(isDisabled)}\n          onClick={handleClick}\n        />\n      );\n    };\n    return result;\n  }, {});\n}\n"],"file":"createMobileButtons.js"}