{"version":3,"sources":["../../../../../src/plugins/indent/utils/setListLevelByIntent.ts"],"names":["Commands","IndentPlugin","INDENT_SIZE_CHARS","INDENT_SIZE","setBlockLeftByKey","controller","listBlock","indLeft","command","setNodeByKey","key","data","ind","left","increaseListLevel","hasFirstStart","list","Math","min","decreaseListLevel","max"],"mappings":";AAAA,SAAqBA,QAArB,QAA4C,oBAA5C;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,iBAAT;IAEQC,W,GAAgBF,Y,CAAhBE,W;;AAER,SAASC,iBAAT,CAA2BC,UAA3B,EAAmDC,SAAnD,EAAqEC,OAArE,EAAsF;AACpF,SAAOF,UAAU,CAACG,OAAX,CAAmBR,QAAQ,CAACS,YAA5B,EAA0CH,SAAS,CAACI,GAApD,EAAyD;AAC9DC,IAAAA,IAAI,eACCL,SAAS,CAACK,IADX;AAEFC,MAAAA,GAAG,eACGN,SAAD,CAAmBM,GADrB;AAEDC,QAAAA,IAAI,EAAEN;AAFL;AAFD;AAD0D,GAAzD,CAAP;AASD;;AAGD,OAAO,SAASO,iBAAT,CAA2BT,UAA3B,EAAmDC,SAAnD,EAA4ES,aAA5E,EAAoG;AACzG,MAAI,CAACT,SAAL,EAAgB,OAAOD,UAAP;;AADyF,aAExFC,SAAS,CAACK,IAAV,IAAkB,EAFsE;AAAA,MAEjGK,IAFiG,QAEjGA,IAFiG;;AAGzG,MAAI,CAACA,IAAL,EAAW,OAAOX,UAAP;;AACX,MAAIU,aAAJ,EAAmB;AAAA;;AACjB,QAAMR,OAAO,GAAGU,IAAI,CAACC,GAAL,CAAS,CAAC,oBAAAZ,SAAS,CAACK,IAAV,4DAAgBC,GAAhB,yCAAqBC,IAArB,KAA6B,CAA9B,IAAmCV,WAA5C,EAAyDD,iBAAzD,CAAhB;AACA,WAAOE,iBAAiB,CAACC,UAAD,EAAaC,SAAb,EAAwBC,OAAxB,CAAxB;AACD;;AACD,SAAOF,UAAU,CAACG,OAAX,CAAmB,oBAAnB,EAAyC,CAAzC,EAA4CF,SAA5C,CAAP;AACD;AAED,OAAO,SAASa,iBAAT,CAA2Bd,UAA3B,EAAmDC,SAAnD,EAA4ES,aAA5E,EAAoG;AACzG,MAAI,CAACT,SAAL,EAAgB,OAAOD,UAAP;;AADyF,cAExFC,SAAS,CAACK,IAAV,IAAkB,EAFsE;AAAA,MAEjGK,IAFiG,SAEjGA,IAFiG;;AAGzG,MAAI,CAACA,IAAL,EAAW,OAAOX,UAAP;;AACX,MAAIU,aAAJ,EAAmB;AAAA;;AACjB,QAAMR,OAAO,GAAGU,IAAI,CAACG,GAAL,CAAS,CAAC,qBAAAd,SAAS,CAACK,IAAV,8DAAgBC,GAAhB,0CAAqBC,IAArB,KAA6B,CAA9B,IAAmCV,WAA5C,EAAyD,CAAzD,CAAhB;AACA,WAAOC,iBAAiB,CAACC,UAAD,EAAaC,SAAb,EAAwBC,OAAxB,CAAxB;AACD;;AACD,SAAOF,UAAU,CAACG,OAAX,CAAmB,oBAAnB,EAAyC,CAAC,CAA1C,EAA6CF,SAA7C,CAAP;AACD","sourcesContent":["import { Controller, Commands, Block } from '@ali/4ever-cangjie';\nimport { IndentPlugin } from '@ali/4ever-bamboo';\nimport { INDENT_SIZE_CHARS } from './';\n\nconst { INDENT_SIZE } = IndentPlugin;\n\nfunction setBlockLeftByKey(controller: Controller, listBlock: Block, indLeft: number) {\n  return controller.command(Commands.setNodeByKey, listBlock.key, {\n    data: {\n      ...listBlock.data,\n      ind: {\n        ...(listBlock as any).ind,\n        left: indLeft,\n      },\n    },\n  });\n}\n\n\nexport function increaseListLevel(controller: Controller, listBlock: Block | null, hasFirstStart: boolean) {\n  if (!listBlock) return controller;\n  const { list } = listBlock.data || {};\n  if (!list) return controller;\n  if (hasFirstStart) {\n    const indLeft = Math.min((listBlock.data?.ind?.left || 0) + INDENT_SIZE, INDENT_SIZE_CHARS);\n    return setBlockLeftByKey(controller, listBlock, indLeft);\n  }\n  return controller.command('increaseItemByNode', 1, listBlock)\n}\n\nexport function decreaseListLevel(controller: Controller, listBlock: Block | null, hasFirstStart: boolean) {\n  if (!listBlock) return controller;\n  const { list } = listBlock.data || {};\n  if (!list) return controller;\n  if (hasFirstStart) {\n    const indLeft = Math.max((listBlock.data?.ind?.left || 0) - INDENT_SIZE, 0);\n    return setBlockLeftByKey(controller, listBlock, indLeft);\n  }\n  return controller.command('increaseItemByNode', -1, listBlock)\n}\n"],"file":"setListLevelByIntent.js"}