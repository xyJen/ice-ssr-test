{"version":3,"sources":["../../../../../src/plugins/indent/commands/decreaseIndent.ts"],"names":["Commands","getClosestParagraph","getBlocksFromEditor","isEqualWithDefault","decreaseListLevel","INDENT_SIZE","MIN_INDENT_SIZE","INDENT_SIZE_CHARS","DEFAULT_INDENT","IndentTrigger","editor","trigger","givenValue","value","indentVal","undefined","selectedBlocks","query","depthItems","hasFirstStart","forEach","node","indentNode","indentNodeData","data","list","ind","nextInd","firstLine","firstLineChars","left","leftChars","hanging","hangingChars","firstLineIndent","hangingIndent","keyboard","Math","max","command","setNodeByKey","key"],"mappings":"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","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { IndentProperties } from '@ali/4ever-mo';\nimport { getClosestParagraph } from '@ali/4ever-utils';\nimport { getBlocksFromEditor, isEqualWithDefault }  from '@ali/4ever-utils';\nimport { decreaseListLevel } from '../utils/setListLevelByIntent';\nimport { INDENT_SIZE, MIN_INDENT_SIZE, INDENT_SIZE_CHARS, DEFAULT_INDENT, IndentTrigger } from '../utils';\n\nexport default (editor: Controller, trigger?: IndentTrigger, givenValue?: number) => {\n  const { value } = editor;\n  const indentVal = givenValue !== undefined ? givenValue : INDENT_SIZE;\n\n  let selectedBlocks = getBlocksFromEditor(editor);\n  const { depthItems, hasFirstStart } = editor.query('getListDepthItems') || {};\n  if (hasFirstStart) {\n    selectedBlocks = depthItems;\n  }\n  selectedBlocks.forEach((node) => {\n    const indentNode = getClosestParagraph(value, node);\n    if (indentNode) {\n      const indentNodeData = indentNode.data || {};\n      const { list } = indentNodeData;\n\n      if (list) {\n        return decreaseListLevel(editor, indentNode, hasFirstStart!);\n      }\n      const ind = (indentNodeData.ind || {}) as IndentProperties; // data.ind can be null\n      const nextInd: IndentProperties = { ...ind };\n      const {\n        firstLine = 0,\n        firstLineChars = 0,\n        left = 0,\n        leftChars = 0,\n        hanging = 0,\n        hangingChars = 0,\n      } = ind;\n\n      const firstLineIndent = firstLineChars || firstLine;\n      const hangingIndent = hangingChars || hanging || firstLine < 0;\n\n      switch (trigger) {\n        case IndentTrigger.keyboard:\n          if (hangingIndent) {\n            // 取消设置的悬挂缩进\n            delete nextInd.hanging;\n            delete nextInd.hangingChars;\n            if (firstLine < 0) {\n              delete nextInd.firstLine;\n            }\n          } else if (firstLineIndent) {\n            // 取消设置的行首缩进\n            delete nextInd.firstLine;\n            delete nextInd.firstLineChars;\n          } else if (leftChars) {\n            // 未设置行首和悬挂缩进：减少 left 和 leftChars\n            // 一次减少两字符\n            nextInd.leftChars = Math.max(leftChars - INDENT_SIZE_CHARS, MIN_INDENT_SIZE);\n            // 兜底\n            nextInd.left = nextInd.leftChars / INDENT_SIZE_CHARS * INDENT_SIZE;\n          } else {\n            nextInd.left = Math.max(left - indentVal, MIN_INDENT_SIZE);\n          }\n          break;\n        default:\n          // 传进来的视为像素单位\n          if (leftChars) {\n            // toolbar 按钮一次少两个字符\n            nextInd.leftChars = Math.max(leftChars - INDENT_SIZE_CHARS, MIN_INDENT_SIZE);\n            nextInd.left = nextInd.leftChars / INDENT_SIZE_CHARS * INDENT_SIZE;\n          } else {\n            nextInd.left = Math.max(left - indentVal, MIN_INDENT_SIZE);\n          }\n      }\n\n      if (isEqualWithDefault(nextInd, ind, DEFAULT_INDENT)) {\n        return undefined;\n      }\n      editor.command(Commands.setNodeByKey, indentNode.key, {\n        data: {\n          ...indentNodeData,\n          ind: nextInd,\n        },\n      });\n    }\n    return undefined;\n  });\n\n  return editor;\n};\n"],"file":"decreaseIndent.js"}