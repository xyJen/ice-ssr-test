{"version":3,"sources":["../../../../../src/plugins/calendarCard/hooks/useRenderCalendarBtn.tsx"],"names":["useCallback","getCalculatedReceivers","isEqualValue","useRenderCalendarBtn","props","isPlaceholder","calendarId","containerWidthInPC","finalMetadata","injectToData","setLoading","setCalendarCardData","key","CalendarBtn","initCalendar","data","topReceivers","totalCount","newMetadata","isInitialized","isFirstLoaded","createCalendarBtn"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,sBAAT;AACA,OAAOC,YAAP;;AAcA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAmC;AAAA,MAE5DC,aAF4D,GAW1DD,KAX0D,CAE5DC,aAF4D;AAAA,MAG5DC,UAH4D,GAW1DF,KAX0D,CAG5DE,UAH4D;AAAA,MAI5DC,kBAJ4D,GAW1DH,KAX0D,CAI5DG,kBAJ4D;AAAA,MAK5DC,aAL4D,GAW1DJ,KAX0D,CAK5DI,aAL4D;AAAA,MAM5DC,YAN4D,GAW1DL,KAX0D,CAM5DK,YAN4D;AAAA,MAO5DC,UAP4D,GAW1DN,KAX0D,CAO5DM,UAP4D;AAAA,MAQ5DC,mBAR4D,GAW1DP,KAX0D,CAQ5DO,mBAR4D;AAAA,MAS5DC,GAT4D,GAW1DR,KAX0D,CAS5DQ,GAT4D;AAAA,MAU5DC,WAV4D,GAW1DT,KAX0D,CAU5DS,WAV4D;AAa9D,MAAMC,YAAY,GAAGd,WAAW;AAAA,wEAAC,iBAAOe,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3BT,UAD2B;AAAA;AAAA;AAAA;;AAAA,+CACR,KADQ;;AAAA;AAEzBU,cAAAA,YAFyB,GAEVf,sBAAsB,CAACc,IAAD,EAAOR,kBAAP,EAA2BQ,IAAI,CAACE,UAAhC,CAFZ;AAGzBC,cAAAA,WAHyB,gBAI1BH,IAJ0B;AAK7BC,gBAAAA,YAAY,EAAZA;AAL6B;;AAAA,mBAO3Bd,YAAY,CAACgB,WAAD,EAAcV,aAAd,CAPe;AAAA;AAAA;AAAA;;AAAA,+CAOsB,KAPtB;;AAAA;AAAA;AAAA,qBAQzBG,mBAAmB,cAAMO,WAAN;AAAmBC,gBAAAA,aAAa,EAAE;AAAlC,iBARM;;AAAA;AAS/BT,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAD,cAAAA,YAAY,CAAC;AAAEW,gBAAAA,aAAa,EAAE;AAAjB,eAAD,CAAZ;AAV+B,+CAWxB,IAXwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAY7B,CAACd,UAAD,EAAaC,kBAAb,EAAiCC,aAAjC,EAAgDC,YAAhD,EAA8DC,UAA9D,EAA0EC,mBAA1E,CAZ6B,CAAhC;AAcA,MAAMU,iBAAiB,GAAGrB,WAAW,CAAC,YAAM;AAC1C,QAAI,CAACK,aAAD,IAAkB,CAACQ,WAAvB,EAAoC,OAAO,IAAP;AACpC,WAAOA,WAAW,CAAC;AAAED,MAAAA,GAAG,EAAHA,GAAF;AAAOE,MAAAA,YAAY,EAAZA;AAAP,KAAD,CAAlB;AACD,GAHoC,EAGlC,CAACT,aAAD,EAAgBQ,WAAhB,EAA6BD,GAA7B,EAAkCE,YAAlC,CAHkC,CAArC;AAKA,SAAO,CAACO,iBAAD,CAAP;AACD,CAjCD;;AAmCA,eAAelB,oBAAf","sourcesContent":["import { useCallback } from 'react';\nimport { CalendarCardMetadataType, CalendarInjectionType } from '../types';\nimport { getCalculatedReceivers } from '../utils/calculatedSize';\nimport isEqualValue from '../utils/isEqualValue';\n\ninterface RenderCalendarBtnProps {\n  isPlaceholder?: boolean;\n  calendarId?: string;\n  containerWidthInPC: number;\n  finalMetadata: CalendarCardMetadataType;\n  injectToData: (mergeData: CalendarInjectionType) => void;\n  setLoading: (isLoading: boolean) => void;\n  setCalendarCardData: (newMetadata: CalendarCardMetadataType) => Promise<void>;\n  CalendarBtn: any;\n  key: string;\n}\n\nconst useRenderCalendarBtn = (props: RenderCalendarBtnProps) => {\n  const {\n    isPlaceholder,\n    calendarId,\n    containerWidthInPC,\n    finalMetadata,\n    injectToData,\n    setLoading,\n    setCalendarCardData,\n    key,\n    CalendarBtn,\n  } = props;\n\n  const initCalendar = useCallback(async (data: CalendarCardMetadataType): Promise<boolean> => {\n    if (calendarId) return false;\n    const topReceivers = getCalculatedReceivers(data, containerWidthInPC, data.totalCount!);\n    const newMetadata: CalendarCardMetadataType = {\n      ...data,\n      topReceivers,\n    };\n    if (isEqualValue(newMetadata, finalMetadata)) return false;\n    await setCalendarCardData({ ...newMetadata, isInitialized: true });\n    setLoading(false);\n    injectToData({ isFirstLoaded: true });\n    return true;\n  }, [calendarId, containerWidthInPC, finalMetadata, injectToData, setLoading, setCalendarCardData]);\n\n  const createCalendarBtn = useCallback(() => {\n    if (!isPlaceholder || !CalendarBtn) return null;\n    return CalendarBtn({ key, initCalendar });\n  }, [isPlaceholder, CalendarBtn, key, initCalendar]);\n\n  return [createCalendarBtn];\n};\n\nexport default useRenderCalendarBtn;\n"],"file":"useRenderCalendarBtn.js"}