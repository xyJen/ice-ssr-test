import React, { useRef, useMemo, useState, useCallback, useEffect } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { RoundcloseThickNormal, theme } from '@ali/we-design';
import { CalendarCardPlugin } from '@ali/4ever-bamboo';
var ERROR_TIPS_TIMEOUT = 5000;
var RefreshTipsTextWrapper = CalendarCardPlugin.RefreshTipsTextWrapper;

var useRefreshResult = function useRefreshResult() {
  var _useState = useState(null),
      result = _useState[0],
      setResult = _useState[1];

  var tipsNode = useMemo(function () {
    if (!result) return null;
    var status = result.status,
        message = result.message;
    if (status === 'success') return null;
    return /*#__PURE__*/_createElement(React.Fragment, null, /*#__PURE__*/_createElement(RoundcloseThickNormal, {
      style: {
        color: theme.errorColor,
        marginRight: '3px'
      }
    }), /*#__PURE__*/_createElement(RefreshTipsTextWrapper, null, message));
  }, [result]);
  var timeoutRef = useRef();
  var setRefreshResult = useCallback(function (res) {
    setResult(res); // 5s 后错误 tips 消失

    timeoutRef.current = window.setTimeout(function () {
      setResult(null);
      timeoutRef.current = null;
    }, ERROR_TIPS_TIMEOUT);
  }, [setResult]);
  useEffect(function () {
    return function () {
      if (timeoutRef.current) clearTimeout(timeoutRef.current);
    };
  }, []);
  return {
    refreshTipsNode: tipsNode,
    setRefreshResult: setRefreshResult
  };
};

export default useRefreshResult;
//# sourceMappingURL=useRefreshResult.js.map