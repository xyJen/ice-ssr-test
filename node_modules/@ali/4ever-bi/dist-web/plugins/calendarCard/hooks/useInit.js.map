{"version":3,"sources":["../../../../../src/plugins/calendarCard/hooks/useInit.ts"],"names":["useCallback","useEffect","isNil","Debug","calculatedCalendarSize","getCalculatedCalendarReceivers","CalendarType","setCardData","calculatedSize","getCalculatedReceivers","CalendarCardPlugin","isEqualValue","CALENDAR_CARD_MAX_HEIGHT","debug","MAX_FIRSTLOADED_REFRESH_COUNT","RETRY_TIMES","Map","useInit","props","isInitialized","isPlaceholder","containerWidthInPC","isLoading","isFirstLoaded","isMobile","calendarId","setLoading","refresh","controller","node","finalMetadata","finalData","injectToData","setRefreshResult","onInitData","mode","isShanhui","SHANHUI","shouldLoadAtFirst","nodeKey","key","has","data","currentTime","get","set","then","res","status","run","metadata","withoutSaving","injectionHeight","undefined","injectionMetadata","newMetadata","getTopReceivers","totalCount","topReceivers","calculateHeight","newHeight","isInValidHeight","height"],"mappings":"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","sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { isNil } from 'lodash-es';\nimport Debug from 'debug';\nimport { Controller, Block } from '@ali/4ever-cangjie';\nimport { calculatedCalendarSize, getCalculatedCalendarReceivers } from '../shanhui/calculatedCalendarSize';\nimport {\n  CalendarCardMetadataType,\n  CalendarCardDataType,\n  CalendarCardPluginConfig,\n  RefreshReponse,\n  CalendarInjectionType,\n  CalendarType,\n} from '../types';\nimport { setCardData } from '@ali/4ever-factory';\nimport { calculatedSize, getCalculatedReceivers } from '../utils/calculatedSize';\nimport { CalendarCardPlugin } from '@ali/4ever-bamboo';\nimport isEqualValue from '../utils/isEqualValue';\n\nconst { CALENDAR_CARD_MAX_HEIGHT } = CalendarCardPlugin;\n\nconst debug = Debug('EDITOR:BI:CALENDAR:RENDER');\n\n// 首次加载最大刷新次数，限制 retry 次数\nconst MAX_FIRSTLOADED_REFRESH_COUNT = 2;\n\nconst RETRY_TIMES = new Map<string, number>();\n\ninterface IProps {\n  isInitialized?: boolean;\n  isPlaceholder?: boolean;\n  containerWidthInPC?: number;\n  isLoading: boolean;\n  isFirstLoaded?: boolean;\n  isMobile?: boolean;\n  calendarId: string;\n  setLoading: (isLoading: boolean) => void;\n  refresh: CalendarCardPluginConfig['refresh'];\n  controller: Controller;\n  node: Block;\n  finalMetadata: CalendarCardMetadataType;\n  finalData: CalendarCardDataType;\n  injectToData: (mergeData: CalendarInjectionType) => void;\n  setRefreshResult: (res: RefreshReponse) => void;\n  onInitData?: () => void;\n  mode?: CalendarType;\n}\n\nexport default function useInit(props: IProps) {\n  const {\n    isInitialized,\n    isPlaceholder,\n    containerWidthInPC,\n    isLoading,\n    isFirstLoaded,\n    isMobile,\n    calendarId,\n    setLoading,\n    refresh,\n    controller,\n    node,\n    finalMetadata,\n    finalData,\n    injectToData,\n    setRefreshResult,\n    onInitData,\n    mode,\n  } = props;\n  const isShanhui = mode === CalendarType.SHANHUI;\n  const shouldLoadAtFirst = useCallback(() => {\n    debug('SHOULDLOADATFIRST', isInitialized, isPlaceholder, containerWidthInPC, isLoading, isFirstLoaded);\n    // placeholder 状态不发出请求\n    if (isPlaceholder) return false;\n    // 移动端首次打开应初始化日程数据\n    if (isMobile && !isInitialized && !isLoading) return true;\n    // 打开后已首次加载过不再刷新\n    if (isFirstLoaded) return false;\n    // 避免重复请求\n    if (isLoading) return false;\n    // 闪会场景下自动更新数据\n    if (isShanhui) return true;\n    // 未初始化日程允许发起请求获取最新数据\n    if (!isInitialized) return true;\n    // 移动端不主动刷新 - 只在首次加载后刷新数据\n    if (isMobile) return false;\n    // 闪会日程卡片的刷新tips全部先去掉，另提需求优化刷新逻辑\n    if (isShanhui && isInitialized) return false;\n    // 缺少编辑器容器宽度不刷新请求\n    return !isNil(containerWidthInPC);\n  }, [isInitialized, isPlaceholder, containerWidthInPC, isLoading, isFirstLoaded, isMobile, isShanhui]);\n\n  useEffect(() => {\n    const nodeKey = node.key;\n    return () => {\n      if (RETRY_TIMES.has(nodeKey)) {\n        RETRY_TIMES.delete(nodeKey);\n      }\n    };\n  }, [node]);\n\n  useEffect(() => {\n    if (!calendarId) return;\n    if (!refresh) return;\n    if (!shouldLoadAtFirst()) return;\n    debug('INIT-PARAMS', calendarId, isPlaceholder, isFirstLoaded, isLoading, isInitialized, isMobile);\n    const { key, data } = node;\n    if (RETRY_TIMES.has(key)) {\n      const currentTime = RETRY_TIMES.get(key)! + 1;\n      // 控制 retry 次数\n      if (currentTime > MAX_FIRSTLOADED_REFRESH_COUNT) {\n        return;\n      }\n      RETRY_TIMES.set(key, currentTime);\n    } else {\n      RETRY_TIMES.set(key, 1);\n    }\n    setLoading(true);\n    debug('INIT', calendarId);\n    refresh(calendarId).then(async (res) => {\n      if (res.status !== 'success') {\n        setRefreshResult(res);\n        controller.run('onAction', setCardData(node, {\n          metadata: { ...data.metadata, isInitialized: true },\n          withoutSaving: true,\n        }));\n        injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n        debug('INIT:ERROR', res);\n        return;\n      }\n      let newMetadata = res.data!;\n      const getTopReceivers = isShanhui ? getCalculatedCalendarReceivers : getCalculatedReceivers;\n      newMetadata = {\n        ...newMetadata,\n        mode,\n        topReceivers: await getTopReceivers(newMetadata, containerWidthInPC!, newMetadata.totalCount || 0),\n      };\n      const calculateHeight = isShanhui ? calculatedCalendarSize : calculatedSize;\n      const newHeight = await calculateHeight(newMetadata, containerWidthInPC || CALENDAR_CARD_MAX_HEIGHT);\n      const isInValidHeight = !(finalData.height && newHeight);\n      if ((isInValidHeight || finalData.height === newHeight) && isEqualValue(newMetadata, finalMetadata)) {\n        injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n        debug('INIT:NOCHANGE');\n        return;\n      }\n\n      // 首次创建时自动落库\n      if (!isInitialized) {\n        controller.run('onAction', setCardData(node, {\n          metadata: { ...newMetadata, isInitialized: true },\n          height: newHeight,\n          withoutSaving: true,\n        }));\n        injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n        if (onInitData) onInitData();\n        debug('INIT:ISINITIALIZED');\n        return;\n      }\n      injectToData({\n        isFirstLoaded: true,\n        injectionMetadata: newMetadata,\n        injectionHeight: newHeight,\n      });\n      debug('INIT:USUAL');\n    }).catch(() => {\n      controller.run('onAction', setCardData(node, {\n        metadata: { ...data.metadata, isInitialized: true },\n        withoutSaving: true,\n      }));\n      injectToData({ injectionHeight: undefined, injectionMetadata: undefined, isFirstLoaded: true });\n    }).finally(() => {\n      setLoading(false);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [containerWidthInPC, shouldLoadAtFirst]);\n}\n"],"file":"useInit.js"}