import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { calculatedPluginSize, CalendarCardPlugin } from '@ali/4ever-bamboo';
import zhLocale from "../../../locales/zh_CN";
var TotalWarpper = CalendarCardPlugin.TotalWarpper,
    TimeTextParagraph = CalendarCardPlugin.TimeTextParagraph,
    PlaceTextParagraph = CalendarCardPlugin.PlaceTextParagraph,
    SubjectParagraph = CalendarCardPlugin.SubjectParagraph,
    ReceiversParagraph = CalendarCardPlugin.ReceiversParagraph,
    CommentTextParagraph = CalendarCardPlugin.CommentTextParagraph,
    CommentTextWrapper = CalendarCardPlugin.CommentTextWrapper,
    ContainerWrapper = CalendarCardPlugin.ContainerWrapper,
    BodyWrapper = CalendarCardPlugin.BodyWrapper,
    getReceiversHeight = CalendarCardPlugin.getReceiversHeight,
    CALENDAR_CARD_SINGLE_LINE_HEIGHT = CalendarCardPlugin.CALENDAR_CARD_SINGLE_LINE_HEIGHT;
/**
 * 计算应该返回的Receivers数量，标签以中文为准
 * 规则：只取前两行，其中最后一行显示为 等{count}人参会
 * @param receivers 参会人
 * @param organizer 组织者
 * @param containerWidth 容器宽度
 */

export function getCalculatedReceivers(metadata, containerWidth, totalCount) {
  var _metadata$topReceiver = metadata.topReceivers,
      receivers = _metadata$topReceiver === void 0 ? [] : _metadata$topReceiver,
      organizer = metadata.organizer;
  var innerWidth = containerWidth - 52; // 实际容器宽度（border）

  var locale = zhLocale.calendarCard.locale;
  var receiverCount = locale.receiverCount;
  var totalCountText = receiverCount.replace('{count}', String(totalCount)); // 最大不超过 2 行

  var maxHeight = (CALENDAR_CARD_SINGLE_LINE_HEIGHT || 1) * 3;
  var index = -1; // 当前Receiver索引

  var len = receivers.length; // 最大两行

  var currHeight = CALENDAR_CARD_SINGLE_LINE_HEIGHT;

  while (currHeight < maxHeight && index < len) {
    index++;
    var currReceivers = receivers.slice(0, index + 1);
    currHeight = getReceiversHeight({
      receivers: currReceivers,
      locale: locale,
      totalCountText: totalCountText,
      singleLineHeight: CALENDAR_CARD_SINGLE_LINE_HEIGHT,
      innerWidth: innerWidth
    });
  }

  if (index === len - 1) {
    if (currHeight <= maxHeight) index += 1;
  }

  return receivers.slice(0, index);
}
export function calculatedSize(_x, _x2) {
  return _calculatedSize.apply(this, arguments);
}

function _calculatedSize() {
  _calculatedSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(metadata, containerWidth) {
    var locale, time, place, comment, subject, containerNode, result;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            locale = zhLocale.calendarCard.locale;
            time = metadata.time, place = metadata.place, comment = metadata.comment, subject = metadata.subject;
            containerNode = /*#__PURE__*/_createElement("div", {
              style: {
                width: containerWidth + "px"
              }
            }, /*#__PURE__*/_createElement(ContainerWrapper, {
              style: {
                height: 'auto',
                width: 'auto'
              }
            }, /*#__PURE__*/_createElement(BodyWrapper, null, /*#__PURE__*/_createElement(SubjectParagraph, {
              isReadonly: true,
              subject: subject,
              metadata: metadata
            }), /*#__PURE__*/_createElement(TimeTextParagraph, null, time), /*#__PURE__*/_createElement(PlaceTextParagraph, null, place), /*#__PURE__*/_createElement(ReceiversParagraph, {
              isReadonly: true,
              locale: locale,
              metadata: metadata
            }), comment ? /*#__PURE__*/_createElement(CommentTextParagraph, null, /*#__PURE__*/_createElement(CommentTextWrapper, null, comment)) : null)));
            _context.next = 5;
            return calculatedPluginSize(containerNode, containerWidth);

          case 5:
            result = _context.sent;
            return _context.abrupt("return", result.height);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _calculatedSize.apply(this, arguments);
}
//# sourceMappingURL=calculatedSize.js.map