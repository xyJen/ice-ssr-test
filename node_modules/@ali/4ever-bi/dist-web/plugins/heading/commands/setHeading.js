import _extends from "@babel/runtime/helpers/extends";
import { Commands } from '@ali/4ever-cangjie';
import { Heading, Paragraph, Marks } from '@ali/4ever-mo';
import { SpacingUtil, SzUtil } from '@ali/4ever-bamboo';
import { getBlocksFromEditor } from '@ali/4ever-utils';
import { removeMarkAtRange, addMarkAtRange } from '@ali/4ever-utils';
var boldMark = Marks.Bold.create(true);
export default function setHeading(controller, type) {
  var selection = controller.value.selection;
  var allBlocks = getBlocksFromEditor(controller);
  allBlocks.forEach(function (block) {
    // 跳过 hr、code等不支持heading的段落
    if (!Paragraph.isParagraph(block) && !Heading.isHeading(block)) return;
    var blockRange = selection.moveToRangeOfNode(block, controller);

    if (type === Paragraph.TYPE) {
      removeMarkAtRange(controller, blockRange, boldMark.type);
      removeMarkAtRange(controller, blockRange, Marks.Sz.TYPE);
    } else {
      // 非普通段落补一下 sz mark
      var szMark = Marks.Sz.create({
        value: SzUtil.fromHeadingType(type),
        szUnit: 'pt'
      });
      addMarkAtRange(controller, blockRange, boldMark);
      addMarkAtRange(controller, blockRange, szMark);
    } // 覆盖spacing，@tengxun/google


    var spacing = SpacingUtil.fromHeadingType(type);
    controller.command(Commands.setNodeByKey, block.key, {
      type: type,
      data: _extends({}, block.data, {
        spacing: spacing
      })
    });
  });
  return controller;
}
//# sourceMappingURL=setHeading.js.map