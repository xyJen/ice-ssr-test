{"version":3,"sources":["../../../../../src/plugins/heading/commands/setHeading.ts"],"names":["Commands","Heading","Paragraph","Marks","SpacingUtil","SzUtil","getBlocksFromEditor","removeMarkAtRange","addMarkAtRange","boldMark","Bold","create","setHeading","controller","type","selection","value","allBlocks","forEach","block","isParagraph","isHeading","blockRange","moveToRangeOfNode","TYPE","Sz","szMark","fromHeadingType","szUnit","spacing","command","setNodeByKey","key","data"],"mappings":";AAAA,SAAqBA,QAArB,QAAqC,oBAArC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,KAA7B,QAA0C,eAA1C;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,SAASC,mBAAT,QAAqC,kBAArC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,kBAAlD;AAEA,IAAMC,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkB,IAAlB,CAAjB;AAEA,eAAe,SAASC,UAAT,CAAoBC,UAApB,EAA4CC,IAA5C,EAA0D;AAAA,MAC/DC,SAD+D,GACjDF,UAAU,CAACG,KADsC,CAC/DD,SAD+D;AAEvE,MAAME,SAAS,GAAGX,mBAAmB,CAACO,UAAD,CAArC;AACAI,EAAAA,SAAS,CAACC,OAAV,CAAkB,UAACC,KAAD,EAAW;AAC3B;AACA,QAAI,CAACjB,SAAS,CAACkB,WAAV,CAAsBD,KAAtB,CAAD,IAAiC,CAAClB,OAAO,CAACoB,SAAR,CAAkBF,KAAlB,CAAtC,EAAgE;AAEhE,QAAMG,UAAU,GAAGP,SAAS,CAACQ,iBAAV,CAA4BJ,KAA5B,EAAmCN,UAAnC,CAAnB;;AAEA,QAAIC,IAAI,KAAKZ,SAAS,CAACsB,IAAvB,EAA6B;AAC3BjB,MAAAA,iBAAiB,CAACM,UAAD,EAAaS,UAAb,EAAyBb,QAAQ,CAACK,IAAlC,CAAjB;AACAP,MAAAA,iBAAiB,CAACM,UAAD,EAAaS,UAAb,EAAyBnB,KAAK,CAACsB,EAAN,CAASD,IAAlC,CAAjB;AACD,KAHD,MAGO;AACL;AACA,UAAME,MAAM,GAAGvB,KAAK,CAACsB,EAAN,CAASd,MAAT,CAAgB;AAC7BK,QAAAA,KAAK,EAAEX,MAAM,CAACsB,eAAP,CAAuBb,IAAvB,CADsB;AAE7Bc,QAAAA,MAAM,EAAE;AAFqB,OAAhB,CAAf;AAIApB,MAAAA,cAAc,CAACK,UAAD,EAAaS,UAAb,EAAyBb,QAAzB,CAAd;AACAD,MAAAA,cAAc,CAACK,UAAD,EAAaS,UAAb,EAAyBI,MAAzB,CAAd;AACD,KAjB0B,CAmB3B;;;AACA,QAAMG,OAAO,GAAGzB,WAAW,CAACuB,eAAZ,CAA4Bb,IAA5B,CAAhB;AAEAD,IAAAA,UAAU,CAACiB,OAAX,CAAmB9B,QAAQ,CAAC+B,YAA5B,EAA0CZ,KAAK,CAACa,GAAhD,EAAqD;AACnDlB,MAAAA,IAAI,EAAJA,IADmD;AAEnDmB,MAAAA,IAAI,eACCd,KAAK,CAACc,IADP;AAEFJ,QAAAA,OAAO,EAAPA;AAFE;AAF+C,KAArD;AAOD,GA7BD;AA8BA,SAAOhB,UAAP;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { Heading, Paragraph, Marks } from '@ali/4ever-mo';\nimport { SpacingUtil, SzUtil } from '@ali/4ever-bamboo';\nimport { getBlocksFromEditor }  from '@ali/4ever-utils';\nimport { removeMarkAtRange, addMarkAtRange } from '@ali/4ever-utils';\n\nconst boldMark = Marks.Bold.create(true);\n\nexport default function setHeading(controller: Controller, type: string) {\n  const { selection } = controller.value;\n  const allBlocks = getBlocksFromEditor(controller);\n  allBlocks.forEach((block) => {\n    // 跳过 hr、code等不支持heading的段落\n    if (!Paragraph.isParagraph(block) && !Heading.isHeading(block)) return;\n\n    const blockRange = selection.moveToRangeOfNode(block, controller);\n\n    if (type === Paragraph.TYPE) {\n      removeMarkAtRange(controller, blockRange, boldMark.type);\n      removeMarkAtRange(controller, blockRange, Marks.Sz.TYPE);\n    } else {\t\t\n      // 非普通段落补一下 sz mark\n      const szMark = Marks.Sz.create({\n        value: SzUtil.fromHeadingType(type),\n        szUnit: 'pt',\n      });\n      addMarkAtRange(controller, blockRange, boldMark);\n      addMarkAtRange(controller, blockRange, szMark);\t\n    }\n\n    // 覆盖spacing，@tengxun/google\n    const spacing = SpacingUtil.fromHeadingType(type);\n\n    controller.command(Commands.setNodeByKey, block.key, {\n      type,\n      data: {\n        ...block.data,\n        spacing,\n      },\n    });\n  });\n  return controller;\n}\n"],"file":"setHeading.js"}