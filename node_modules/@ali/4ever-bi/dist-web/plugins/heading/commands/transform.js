import { Commands, Text } from '@ali/4ever-cangjie';
import { Paragraph } from '@ali/4ever-mo';
;
import { setHeading } from "../actions";

var paragraph2Heading = function paragraph2Heading(controller, block, type) {
  controller.command(Commands.setNodeByKey, block.key, {
    type: block.type,
    data: {}
  }).command(Commands.moveToEndOfNode, block);
  return controller.run('onAction', setHeading(type));
};

var code2Heading = function code2Heading(controller, block, type) {
  var lineArr = block.text.split('\n');
  controller.withoutNormalizing(function () {
    lineArr.forEach(function (line) {
      var paragraph = Paragraph.create({
        nodes: [Text.create(line)]
      });
      controller.command(Commands.insertBlock, paragraph);
      controller.run('onAction', setHeading(type));
    });
  });
  controller.command(Commands.removeNodeByKey, block.key);
};

export default function transform(controller, type) {
  var blocks = controller.query('getTransformNodes');

  if (Array.isArray(blocks)) {
    controller.withoutNormalizing(function () {
      blocks.forEach(function (block) {
        if (block.type === 'code') {
          return code2Heading(controller, block, type);
        } else if (block.data.calloutPr) {
          return paragraph2Heading(controller, block, type);
        }

        return controller.run('onAction', setHeading(type));
      });
    });
  }

  return controller.command(Commands.focus);
}
//# sourceMappingURL=transform.js.map