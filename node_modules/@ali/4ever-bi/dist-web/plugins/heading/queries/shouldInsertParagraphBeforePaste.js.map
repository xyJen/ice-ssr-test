{"version":3,"sources":["../../../../../src/plugins/heading/queries/shouldInsertParagraphBeforePaste.ts"],"names":["Heading","Paragraph","isVisualEmpty","shouldInsertParagraphBeforePaste","controller","fragment","value","selection","startBlock","endBlock","document","isCollapsedAtEdge","isCollapsed","query","isParagraph","convertToTextPoints","start","end","isAtStartOfNode","isAtEndOfNode","nodes","length","firstFragmentBlock","isHeading"],"mappings":"AAIA,SAASA,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AACA,SACEC,aADF;AAKA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gCAAT,CACbC,UADa,EAEbC,QAFa,EAGb;AAAA;;AACA,MAAI,CAACA,QAAL,EAAe,OAAO,KAAP;AADf,0BAEsDD,UAAU,CAACE,KAFjE;AAAA,MAEQC,SAFR,qBAEQA,SAFR;AAAA,MAEmBC,UAFnB,qBAEmBA,UAFnB;AAAA,MAE+BC,QAF/B,qBAE+BA,QAF/B;AAAA,MAEyCC,QAFzC,qBAEyCA,QAFzC;;AAGA,MAAIH,SAAS,CAACI,iBAAd,EAAiC;AAC/B;AACA,WAAO,KAAP;AACD,GAND,CAQA;;;AACA,MAAIT,aAAa,CAACM,UAAD,CAAjB,EAA+B,OAAO,KAAP;;AAE/B,MAAID,SAAS,CAACK,WAAV,IAAyBR,UAAU,CAACS,KAAX,CAAiB,QAAjB,EAA2BL,UAA3B,CAA7B,EAAqE;AACnE;AACA;AACA,WAAO,IAAP;AACD,GAfD,CAiBA;;;AACA,MAAI,CAACP,SAAS,CAACa,WAAV,CAAsBN,UAAtB,CAAL,EAAwC,OAAO,KAAP;;AAlBxC,8BAoBuBD,SAAS,CAACQ,mBAAV,CAA8BL,QAA9B,CApBvB;AAAA,MAoBQM,KApBR,yBAoBQA,KApBR;AAAA,MAoBeC,GApBf,yBAoBeA,GApBf;;AAqBA,MACEhB,SAAS,CAACa,WAAV,CAAsBL,QAAtB,KACAO,KAAK,CAACE,eAAN,CAAsBV,UAAtB,CADA,IAEAS,GAAG,CAACE,aAAJ,CAAkBV,QAAlB,CAHF,EAIE;AACA;AACA,WAAO,KAAP;AACD;;AAED,MAAI,oBAAAJ,QAAQ,CAACe,KAAT,qCAAgBC,MAAhB,IAAyB,CAA7B,EAAgC;AAC9B,QAAMC,kBAAkB,GAAGjB,QAAQ,CAACe,KAAT,CAAe,CAAf,CAA3B,CAD8B,CAE9B;;AACA,QAAIpB,OAAO,CAACuB,SAAR,CAAkBD,kBAAlB,CAAJ,EAA2C,OAAO,IAAP;AAC5C;;AAED,SAAO,KAAP;AACD","sourcesContent":["import {\n  Controller,\n  Document,\n} from '@ali/4ever-cangjie';\nimport { Heading, Paragraph } from '@ali/4ever-mo';\nimport { \n  isVisualEmpty,\n} from '../utils/fragment';\n\n\n/**\n * 判断是否需要在 insert fragment 前插入空段落\n * 目前只有 heading 有特殊产品需求，因此移到 heading 的 query 中\n */\nexport default function shouldInsertParagraphBeforePaste(\n  controller: Controller,\n  fragment: Document,\n) {\n  if (!fragment) return false;\n  const { selection, startBlock, endBlock, document } = controller.value;\n  if (selection.isCollapsedAtEdge) {\n    // 无需处理光标在 edge 的情形（insert 内部会处理）\n    return false;\n  }\n\n  // 不处理空行\n  if (isVisualEmpty(startBlock)) return false;\n\n  if (selection.isCollapsed && controller.query('isVoid', startBlock)) {\n    // TODO: 待底层支持此种情形后移除这里\n    // 如果是 focus 在 void 上则需要插入空段落（例如光标选中 分割线、card 等）\n    return true;\n  }\n\n  // 不处理非文字段落\n  if (!Paragraph.isParagraph(startBlock)) return false; \n\n  const { start, end } = selection.convertToTextPoints(document);\n  if (\n    Paragraph.isParagraph(endBlock) &&\n    start.isAtStartOfNode(startBlock) &&\n    end.isAtEndOfNode(endBlock)\n  ) {\n    // 选中的整个段落则不 insert 避免插入额外空行\n    return false;\n  }\n\n  if (fragment.nodes?.length > 1) {\n    const firstFragmentBlock = fragment.nodes[0];\n    // 粘贴内容首段是 heading，但目标位置是普通段落时：换行（产品需求）\n    if (Heading.isHeading(firstFragmentBlock)) return true;\n  }\n\n  return false;\n}\n"],"file":"shouldInsertParagraphBeforePaste.js"}