import { Text } from '@ali/4ever-cangjie';
import { Heading } from '@ali/4ever-mo';
import { BlockInsertPosition } from '@ali/4ever-plugin-basic';
/**
 * 获取待插入 Block 应在光标所在标题 Block 的相对位置
 *
 * 获得有效结果的前提条件：光标在标题 && selection collapsed
 * @export
 * @param {Controller} controller
 * @param {Block} cursorAtBlock 当前光标所在 block
 * @returns {(BlockInsertPosition | null)} 插入位置（null 表示无法判定）
 */

export default function getBlockInsertPosition(controller, cursorAtBlock) {
  // 非标题，不属于判定范围内
  if (!Heading.isHeading(cursorAtBlock)) {
    return null;
  }

  var _controller$value = controller.value,
      selection = _controller$value.selection,
      document = _controller$value.document; // selection expanded 状态，不属于判定范围内

  if (selection.isExpanded) {
    return null;
  } // 空标题


  if (cursorAtBlock.text === '' && Text.isTextList(cursorAtBlock.nodes)) {
    return BlockInsertPosition.After;
  }

  var _selection$convertToT = selection.convertToTextPoints(document),
      start = _selection$convertToT.start; // 非空标题情况下，光标在开头


  if (start.isAtStartOfNode(cursorAtBlock)) {
    return BlockInsertPosition.Current;
  } // 非空标题情况下，光标在末尾


  if (start.isAtEndOfNode(cursorAtBlock)) {
    return BlockInsertPosition.After;
  } // 非空标题情况下，光标在末尾


  return BlockInsertPosition.SplitAndAfter;
}
//# sourceMappingURL=getBlockInsertPosition.js.map