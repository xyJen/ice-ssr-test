import { Heading, Paragraph } from '@ali/4ever-mo';
import { isVisualEmpty } from "../utils/fragment";
/**
 * 判断是否需要在 insert fragment 前插入空段落
 * 目前只有 heading 有特殊产品需求，因此移到 heading 的 query 中
 */

export default function shouldInsertParagraphBeforePaste(controller, fragment) {
  var _fragment$nodes;

  if (!fragment) return false;
  var _controller$value = controller.value,
      selection = _controller$value.selection,
      startBlock = _controller$value.startBlock,
      endBlock = _controller$value.endBlock,
      document = _controller$value.document;

  if (selection.isCollapsedAtEdge) {
    // 无需处理光标在 edge 的情形（insert 内部会处理）
    return false;
  } // 不处理空行


  if (isVisualEmpty(startBlock)) return false;

  if (selection.isCollapsed && controller.query('isVoid', startBlock)) {
    // TODO: 待底层支持此种情形后移除这里
    // 如果是 focus 在 void 上则需要插入空段落（例如光标选中 分割线、card 等）
    return true;
  } // 不处理非文字段落


  if (!Paragraph.isParagraph(startBlock)) return false;

  var _selection$convertToT = selection.convertToTextPoints(document),
      start = _selection$convertToT.start,
      end = _selection$convertToT.end;

  if (Paragraph.isParagraph(endBlock) && start.isAtStartOfNode(startBlock) && end.isAtEndOfNode(endBlock)) {
    // 选中的整个段落则不 insert 避免插入额外空行
    return false;
  }

  if (((_fragment$nodes = fragment.nodes) == null ? void 0 : _fragment$nodes.length) > 1) {
    var firstFragmentBlock = fragment.nodes[0]; // 粘贴内容首段是 heading，但目标位置是普通段落时：换行（产品需求）

    if (Heading.isHeading(firstFragmentBlock)) return true;
  }

  return false;
}
//# sourceMappingURL=shouldInsertParagraphBeforePaste.js.map