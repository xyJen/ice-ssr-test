{"version":3,"sources":["../../../../../src/plugins/heading/handlers/onEnter.ts"],"names":["Commands","Block","Heading","getClosestParagraph","omit","getNextViewGroupNode","onEnter","event","controller","next","value","startBlock","selection","document","closestParagraphBlock","isHeading","preventDefault","convertToTextPoints","start","end","isCollapsed","isExpanded","closestInline","getClosestInline","key","isEnterAtInline","type","offset","command","moveToStartOfNextText","isFoldNode","userData","get","splitViewGroup","nextViewNode","splitBlock","anchorBlock","setNodeByKey","data","previous","getPreviousBlock","moveToEndOfNode","parent","getParent","lastNode","nodes","length","index","getPath","moveNodeByKey","moveToStartOfNode","isAtEndOfNode","nextSibling","getNextSibling","isBlock","text","getFirstText","marks","getMarks","forEach","mark","removeMarkByKey","select","set"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller, Commands, Block } from '@ali/4ever-cangjie';\nimport { Heading } from '@ali/4ever-mo';\nimport { getClosestParagraph } from '@ali/4ever-utils';\nimport { omit } from 'lodash-es';\nimport { getNextViewGroupNode } from '@ali/4ever-plugin-heading-group';\n\nexport default function onEnter(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: Function,\n) {\n  const { value } = controller;\n  const { startBlock, selection, document } = value;\n  if (!startBlock || !selection) return next();\n\n  const closestParagraphBlock: Block | null = getClosestParagraph(value);\n  if (!closestParagraphBlock) return next();\n\n  if (!Heading.isHeading(closestParagraphBlock)) {\n    return next();\n  }\n\n  event.preventDefault();\n  const { start, end } = selection.convertToTextPoints(document);\n  const { isCollapsed, isExpanded } = selection;\n  const closestInline = document.getClosestInline(start.key);\n\n  const isEnterAtInline =\n    isCollapsed &&\n    closestInline &&\n    // allow to split a link\n    closestInline.type !== 'link' &&\n    start.offset === 0;\n  if (isEnterAtInline) {\n    // just move to next text like normal paragraph\n    return controller.command(Commands.moveToStartOfNextText);\n  }\n\n  const isFoldNode = controller.userData.get(closestParagraphBlock, 'fold');\n\n  /**\n   * 若当前节点是 GroupNode list 节点，做可视节点的切割\n   *  I -> 光标坐在位置，在光标位置按 Enter 键\n   * \n   * 场景一: 折叠标题一 拆为标题一 和 空标题一\n   * \n   *  >标题一I            >标题一\n   *   标题一       ->     I<空标题一>\n   *                      标题一\n   * \n   * 场景二: 展开标题一 拆为 展开标题一 和 空段落\n   * \n   *   标题一I            标题一\n   *   普通段落       ->  I<空段落>\n   *                     普通段落\n   * 场景三: 折叠标题一 拆为标题一 和 空段落\n   * \n   *  >I标题一            ><空标题一>\n   *   标题一       ->    I标题一\n   *                     \n   * \n   * 场景四：后边无节点的折叠标题一 拆为折叠标题一 和空标题一\n   * \n   *  >标题一I        ->  >标题一\n   *                     I<空标题一>\n   */\n  const splitViewGroup = () => {\n    const nextViewNode = isFoldNode && getNextViewGroupNode(closestParagraphBlock, controller);\n    controller.command(Commands.splitBlock);\n    const anchorBlock = controller.value.anchorBlock;\n    if (!anchorBlock) {\n      return;\n    }\n    controller.command(Commands.setNodeByKey, anchorBlock.key, {\n      data: { ...omit(anchorBlock.data, 'fold', 'uuid') },\n      type: closestParagraphBlock.type,\n    })\n\n    if (nextViewNode) {\n      const previous = document.getPreviousBlock(nextViewNode.key);\n      previous && controller.command(Commands.moveToEndOfNode, previous);\n    } else {\n      const parent = controller.value.document.getParent(closestParagraphBlock.key);\n      const lastNode = parent?.nodes[parent?.nodes.length - 1];\n      lastNode && controller.command(Commands.moveToEndOfNode, lastNode);\n    }\n\n    const key = controller.value.anchorBlock.key;\n    const parent = controller.value.document.getParent(key);\n    const index = parent?.getPath(key);\n    if (parent && index?.length) {\n      controller\n        .command(Commands.moveNodeByKey, anchorBlock.key, parent.key, index[0])\n        .command(Commands.moveToStartOfNode, anchorBlock);\n    }\n  }\n\n  if (isFoldNode) {\n    return splitViewGroup();\n  }\n\n  // test isEnterAtLastChar at first since it can be an empty heading\n  if (isCollapsed && start.isAtEndOfNode(closestParagraphBlock)) {\n    // 使用 splitBlock 保持用户意图\n    controller.command(Commands.splitBlock);\n    // 修正回车换行后的 type, data 和 marks\n    const { key } = closestParagraphBlock;\n    const nextSibling = controller.value.document.getNextSibling(key);\n    if (nextSibling && Block.isBlock(nextSibling)) {\n      controller.command(Commands.setNodeByKey, nextSibling.key, { type: 'paragraph', data: {} });\n      const text = nextSibling.getFirstText();\n      if (text) {\n        const marks = text.getMarks();\n        marks.forEach((mark) => {\n          controller.command(Commands.removeMarkByKey, text.key, 0, text.text.length, mark);\n        });\n      }\n    }\n    // 需要清除选区临时样式（比如通过 # + space 生成的标题会一并设置临时样式）\n    return controller.command(Commands.select, controller.value.selection.set('marks', null));\n  }\n\n  if (isExpanded && end.isAtEndOfNode(closestParagraphBlock)) {\n    // clear style like word/wps\n    return controller\n      .command(Commands.splitBlock)\n      .command('clearStyle');\n  }\n\n  return next();\n}\n"],"file":"onEnter.js"}