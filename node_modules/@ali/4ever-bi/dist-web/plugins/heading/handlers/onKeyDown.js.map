{"version":3,"sources":["../../../../../src/plugins/heading/handlers/onKeyDown.ts"],"names":["hotkeys","onEnter","onBackspace","isKeyHotKey","toKeyCode","setHeading","setHeadingAction","MAX_TITLE_LEVEL","ZERO_KEY_CODE","hotKeys","Array","from","length","map","_","index","isHeadingHotKey","isBackspaceHotKey","onKeyDown","event","controller","next","isEnter","query","preventDefault","level","keyCode","run"],"mappings":"AAAA,SAAqBA,OAArB,QAAoC,oBAApC;AAEA,OAAOC,OAAP;AACA,OAAOC,WAAP;AAEA,OAAOC,WAAP,IAAsBC,SAAtB,QAAuC,WAAvC;AACA,SAASC,UAAU,IAAIC,gBAAvB;AAEA,IAAMC,eAAe,GAAG,CAAxB;AACA,IAAMC,aAAa,GAAGJ,SAAS,CAAC,GAAD,CAA/B;AACA,IAAMK,OAAO,GAAG,UAAIC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAEL,eAAe,GAAG;AAA5B,CAAX,CAAJ,EAAiDM,GAAjD,CAAqD,UAACC,CAAD,EAAIC,KAAJ;AAAA,sBAAyBA,KAAzB;AAAA,CAArD,CAAhB;AACA,IAAMC,eAAe,GAAGb,WAAW,CAACM,OAAD,CAAnC;AACA,IAAMQ,iBAAiB,GAAGd,WAAW,CAAC,WAAD,CAArC;AAEA,eAAe,SAASe,SAAT,CAAmBC,KAAnB,EAA+CC,UAA/C,EAAuEC,IAAvE,EAAuF;AACpG,MAAIrB,OAAO,CAACsB,OAAR,CAAgBH,KAAhB,CAAJ,EAA4B;AAC1B,WAAOlB,OAAO,CAACkB,KAAD,EAAQC,UAAR,EAAoBC,IAApB,CAAd;AACD;;AAED,MAAIJ,iBAAiB,CAACE,KAAD,CAArB,EAA8B;AAC5B,WAAOjB,WAAW,CAACiB,KAAD,EAAQC,UAAR,EAAoBC,IAApB,CAAlB;AACD,GAPmG,CASpG;;;AACA,MAAIL,eAAe,CAACG,KAAD,CAAf,IAA0B,CAACC,UAAU,CAACG,KAAX,CAAiB,6BAAjB,CAA/B,EAAgF;AAC9EJ,IAAAA,KAAK,CAACK,cAAN;AACA,QAAMC,KAAK,GAAGN,KAAK,CAACO,OAAN,GAAgBlB,aAA9B;;AACA,QAAIiB,KAAK,KAAK,CAAd,EAAiB;AACfL,MAAAA,UAAU,CAACO,GAAX,CAAe,UAAf,EAA2BrB,gBAAgB,CAAC,WAAD,CAA3C;AACA,aAAOc,UAAP;AACD;;AACD,QAAIK,KAAK,IAAIlB,eAAT,IAA4BkB,KAAK,GAAG,CAAxC,EAA2C;AACzCL,MAAAA,UAAU,CAACO,GAAX,CAAe,UAAf,EAA2BrB,gBAAgB,cAAYmB,KAAZ,CAA3C;AACA,aAAOL,UAAP;AACD;AACF;;AAED,SAAOC,IAAI,EAAX;AACD","sourcesContent":["import { Controller, hotkeys } from '@ali/4ever-cangjie';\nimport * as React from 'react';\nimport onEnter from './onEnter';\nimport onBackspace from './onBackspace';\nimport onSpace from './onSpace';\nimport isKeyHotKey, { toKeyCode } from 'is-hotkey';\nimport { setHeading as setHeadingAction } from '../actions';\n\nconst MAX_TITLE_LEVEL = 6;\nconst ZERO_KEY_CODE = toKeyCode('0');\nconst hotKeys = [...Array.from({ length: MAX_TITLE_LEVEL + 1 })].map((_, index) => `mod+alt+${index}`);\nconst isHeadingHotKey = isKeyHotKey(hotKeys);\nconst isBackspaceHotKey = isKeyHotKey('backspace');\n\nexport default function onKeyDown(event: React.KeyboardEvent, controller: Controller, next: Function) {\n  if (hotkeys.isEnter(event)) {\n    return onEnter(event, controller, next);\n  }\n\n  if (isBackspaceHotKey(event)) {\n    return onBackspace(event, controller, next);\n  }\n\n  // fix: https://aone.alibaba-inc.com/v2/project/1090534/bug/35667506\n  if (isHeadingHotKey(event) && !controller.query('isSelectionInSubjectHeading')) {\n    event.preventDefault();\n    const level = event.keyCode - ZERO_KEY_CODE;\n    if (level === 0) {\n      controller.run('onAction', setHeadingAction('paragraph'));\n      return controller;\n    }\n    if (level <= MAX_TITLE_LEVEL && level > 0) {\n      controller.run('onAction', setHeadingAction(`heading-${level}`));\n      return controller;\n    }\n  }\n\n  return next();\n}\n"],"file":"onKeyDown.js"}