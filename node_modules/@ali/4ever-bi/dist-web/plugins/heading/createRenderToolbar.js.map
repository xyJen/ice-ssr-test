{"version":3,"sources":["../../../../src/plugins/heading/createRenderToolbar.tsx"],"names":["React","ItemKey","ItemSlot","SlotType","TextTypeSingleLineDefaultWidth","HeadingButton","HeadingGroup","getHeadingGroupWidth","createRenderToolbar","locale","props","controller","buttonName","extraProps","heading","textSelect","custom"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,OAAT,EAAkBC,QAAlB,EAA2CC,QAA3C,EAAqDC,8BAArD,QAA2F,sBAA3F;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP,IAAuBC,oBAAvB;AAEA,eAAe,SAASC,mBAAT,CACbC,MADa,EAEE;AAGf,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAuB;AAAA,QAEpBC,UAFoB,GAEOF,KAFP,CAEpBE,UAFoB;AAAA,QAERC,UAFQ,GAEOH,KAFP,CAERG,UAFQ;;AAI5B,YAAQD,UAAR;AACE,WAAKX,OAAO,CAACa,OAAb;AACE,4BACE,eAAC,QAAD;AAAU,UAAA,OAAO,EAAEX,QAAQ,CAACY,UAA5B;AAAwC,UAAA,KAAK,EAAEX;AAA/C,wBACE,eAAC,aAAD;AACE,UAAA,UAAU,EAAEO,UADd;AAEE,UAAA,MAAM,EAAEF;AAFV,WAGMI,UAHN,EADF,CADF;;AASF,WAAKZ,OAAO,CAAC,eAAD,CAAZ;AACE,4BACE,eAAC,QAAD;AAAU,UAAA,OAAO,EAAEE,QAAQ,CAACa,MAA5B;AAAoC,UAAA,KAAK,EAAET;AAA3C,wBACE,eAAC,YAAD;AACE,UAAA,UAAU,EAAEI,UADd;AAEE,UAAA,MAAM,EAAEF;AAFV,WAGMI,UAHN,EADF,CADF;;AAUF;AACE;AAvBJ;;AA2BA,WAAO,IAAP;AACD,GAhCD;AAiCD","sourcesContent":["import * as React from 'react';\nimport { ItemKey, ItemSlot, RenderToolbar, SlotType, TextTypeSingleLineDefaultWidth } from '@ali/4ever-component';\nimport HeadingButton from './components/next/headingButton';\nimport HeadingGroup, { getHeadingGroupWidth } from './components/next/headingGroup';\n\nexport default function createRenderToolbar(\n  locale: Record<string, string>,\n): RenderToolbar {\n\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    switch (buttonName) {\n      case ItemKey.heading:\n        return (\n          <ItemSlot display={SlotType.textSelect} width={TextTypeSingleLineDefaultWidth}>\n            <HeadingButton\n              controller={controller}\n              locale={locale}\n              {...extraProps}\n            />\n          </ItemSlot>\n        )\n      case ItemKey['heading.group']:\n        return (\n          <ItemSlot display={SlotType.custom} width={getHeadingGroupWidth}>\n            <HeadingGroup\n              controller={controller}\n              locale={locale}\n              {...extraProps}\n            />\n          </ItemSlot>\n        )\n\n      default:\n        break;\n    }\n\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}