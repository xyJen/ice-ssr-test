{"version":3,"sources":["../../../../../src/plugins/heading/components/mobileHeadingButton.tsx"],"names":["React","Button","PluginRoles","setHeading","mobileHeadingButton","heading","HeadingButton","props","controller","value","isCollapsedAtEdge","selection","isDisabled","query","handleClick","run","level","levelMatch","match"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,MAAT,QAAuB,gBAAvB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,UAAT;AAMA,eAAe,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACnD,SAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AAAA,QAC/CC,UAD+C,GAChCD,KADgC,CAC/CC,UAD+C;AAAA,QAE/CC,KAF+C,GAErCD,UAFqC,CAE/CC,KAF+C;AAAA,QAG/CC,iBAH+C,GAGzBF,UAAU,CAACC,KAAX,CAAiBE,SAHQ,CAG/CD,iBAH+C;AAIvD,QAAME,UAAU,GAAGF,iBAAiB,IAC/BF,UAAU,CAACK,KAAX,CAAiB,oBAAjB,CADc,IAEdL,UAAU,CAACK,KAAX,CAAiB,iBAAjB,CAFc,IAGdL,UAAU,CAACK,KAAX,CAAiB,uBAAjB,CAHL;;AAKA,QAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,aAAMN,UAAU,CAACO,GAAX,CAAe,UAAf,EAA2BZ,UAAU,CAACE,OAAD,CAArC,CAAN;AAAA,KAApB;;AAEA,QAAIW,KAAK,GAAG,EAAZ;AACA,QAAMC,UAAU,GAAGZ,OAAH,oBAAGA,OAAO,CAAEa,KAAT,CAAe,KAAf,CAAnB;;AACA,QAAID,UAAU,IAAIA,UAAU,CAAC,CAAD,CAA5B,EAAiC;AAC/BD,MAAAA,KAAK,GAAGC,UAAU,CAAC,CAAD,CAAlB;AACD;;AAED,wBACE,eAAC,MAAD;AACE,MAAA,MAAM,EAAC,oBADT;AAEE,MAAA,IAAI,QAAMD,KAFZ;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,QAAQ,EAAEJ,UAJZ;AAKE,MAAA,OAAO,EAAEE,WALX;AAME,MAAA,IAAI,EAAEZ,WAAW,CAACG;AANpB,MADF;AAUD,GA3BD;AA4BD","sourcesContent":["import * as React from 'react';\nimport { Button } from '@ali/we-design';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { setHeading } from '../actions';\n\nexport interface HeadingButtonProps {\n  controller: Controller;\n}\n\nexport default function mobileHeadingButton(heading) {\n  return function HeadingButton(props: HeadingButtonProps) {\n    const { controller } = props;\n    const { value } = controller;\n    const { isCollapsedAtEdge } = controller.value.selection;\n    const isDisabled = isCollapsedAtEdge\n      || controller.query('isSelectionInImage')\n      || controller.query('isSelectionInHr')\n      || controller.query('isSelectionInLinkCard');\n\n    const handleClick = () => controller.run('onAction', setHeading(heading));\n\n    let level = '';\n    const levelMatch = heading?.match(/\\d+/);\n    if (levelMatch && levelMatch[0]) {\n      level = levelMatch[0];\n    }\n\n    return (\n      <Button\n        testid=\"bi-toolbar-heading\"\n        icon={`H${level}`}\n        bordered={false}\n        disabled={isDisabled}\n        onClick={handleClick}\n        role={PluginRoles.heading}\n      />\n    );\n  };\n}\n"],"file":"mobileHeadingButton.js"}