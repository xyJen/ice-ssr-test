import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import * as React from 'react';
import * as PropTypes from 'prop-types';
import { getHeadings, throttleByIdleCallback } from '@ali/4ever-bamboo';

var HeadingWrapper = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(HeadingWrapper, _React$Component);

  function HeadingWrapper() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.handleHeadingChange = throttleByIdleCallback(function () {
      var _this$props = _this.props,
          controller = _this$props.controller,
          onHeadingsChange = _this$props.onHeadingsChange;
      var dataValue = controller.query('getDataValue');
      onHeadingsChange(getHeadings(dataValue || controller.value));
    });
    return _this;
  }

  var _proto = HeadingWrapper.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      onHeadingChange: this.handleHeadingChange
    };
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    if (this.handleHeadingChange) {
      this.handleHeadingChange.cancel();
      this.handleHeadingChange = null;
    }
  };

  _proto.render = function render() {
    var children = this.props.children;
    return children;
  };

  return HeadingWrapper;
}(React.Component);

HeadingWrapper.childContextTypes = {
  onHeadingChange: PropTypes.func
};
export { HeadingWrapper as default };
;
//# sourceMappingURL=headingWrapper.js.map