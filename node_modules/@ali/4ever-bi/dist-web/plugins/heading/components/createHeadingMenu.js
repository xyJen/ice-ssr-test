import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { MenuItem, InlineMenuItem } from '@ali/we-design';
import { Heading, Paragraph } from '@ali/4ever-mo';
import { setHeading, transformHeading } from "../actions";
import { isSelectionInOnlyHeading } from "../utils/isSelectionInHeading";

function createHeadingMenu(Component, headingType) {
  return function HeadingMenu(props) {
    var menuItem = props.menuItem,
        controller = props.controller;

    var action = menuItem.action,
        title = menuItem.title,
        rest = _objectWithoutPropertiesLoose(menuItem, ["action", "title"]);

    var isDisabled = controller.query('isSelectionInLinkCard') || controller.query('isSelectionInSubjectHeading') || action !== 'format' && headingType === Paragraph.TYPE && isSelectionInOnlyHeading(controller.value, Paragraph.TYPE);

    var handleClick = function handleClick() {
      if (action === 'format') {
        return controller.run('onAction', transformHeading(headingType));
      }

      controller.run('onAction', setHeading(headingType));
    };

    return /*#__PURE__*/_createElement(Component, _extends({
      disabled: isDisabled
    }, rest, {
      onClick: handleClick,
      role: headingType
    }), title);
  };
}

export var heading1 = createHeadingMenu(MenuItem, Heading.Heading1.TYPE);
export var heading2 = createHeadingMenu(MenuItem, Heading.Heading2.TYPE);
export var heading3 = createHeadingMenu(MenuItem, Heading.Heading3.TYPE);
export var heading4 = createHeadingMenu(MenuItem, Heading.Heading4.TYPE);
export var paragraph = createHeadingMenu(MenuItem, 'paragraph');
export var heading1Inline = createHeadingMenu(InlineMenuItem, Heading.Heading1.TYPE);
export var heading2Inline = createHeadingMenu(InlineMenuItem, Heading.Heading2.TYPE);
export var heading3Inline = createHeadingMenu(InlineMenuItem, Heading.Heading3.TYPE);
export var heading4Inline = createHeadingMenu(InlineMenuItem, Heading.Heading4.TYPE);
//# sourceMappingURL=createHeadingMenu.js.map