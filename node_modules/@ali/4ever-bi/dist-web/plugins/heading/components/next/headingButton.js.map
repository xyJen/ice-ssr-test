{"version":3,"sources":["../../../../../../src/plugins/heading/components/next/headingButton.tsx"],"names":["React","TextTypeSelect","PluginRoles","setHeading","getTitleByHeading","HeadingButton","props","controller","locale","rest","heading","query","isCollapsedAtEdge","value","selection","isDisabled","handleChange","useCallback","headingStr","run","title","shortCut","markdown","options","useMemo","key","testid","dropdownBody","dropdownHeading1","dropdownHeading2","dropdownHeading3","dropdownHeading4","tooltip","description","headingSelect"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { TextTypeSelect, IToolbarButtonConfig, ITextTypeSelectProps } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { setHeading } from '../../actions';\nimport { getTitleByHeading } from '../../utils/getTipsByHeading';\n\nexport interface HeadingButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n}\n\nexport default function HeadingButton(props: HeadingButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const heading = controller.query('getHeading') || 'paragraph';\n  const { isCollapsedAtEdge } = controller.value.selection;\n\n  const isDisabled = isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleChange = React.useCallback((headingStr: string) => {\n    controller.run('onAction', setHeading(headingStr));\n  }, [controller]);\n\n  const { title, shortCut, markdown } = getTitleByHeading(heading, locale);\n\n  const options: ITextTypeSelectProps['options'] = React.useMemo(() => ([\n    { key: 'paragraph', testid: 'option-paragraph', title: locale?.dropdownBody || 'Paragraph' },\n    { key: 'heading-1', testid: 'option-heading-1', title: locale?.dropdownHeading1 || 'Heading 1' },\n    { key: 'heading-2', testid: 'option-heading-2', title: locale?.dropdownHeading2 || 'Heading 2' },\n    { key: 'heading-3', testid: 'option-heading-3', title: locale?.dropdownHeading3 || 'Heading 3' },\n    { key: 'heading-4', testid: 'option-heading-4', title: locale?.dropdownHeading4 || 'Heading 4' },\n  ]), [locale]);\n\n  const tooltip = React.useMemo(() => ({\n    title,\n    shortCut,\n    description: markdown,\n  }), [title, shortCut, markdown]);\n\n  return (\n    <TextTypeSelect\n      testid=\"bi-toolbar-heading\"\n      disabled={!!isDisabled}\n      value={heading as any}\n      onChange={handleChange}\n      role={PluginRoles.headingSelect}\n      options={options}\n      {...rest}\n      tooltip={tooltip}\n    />\n  );\n}\n"],"file":"headingButton.js"}