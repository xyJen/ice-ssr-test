import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { TBItemSlot } from '@ali/we-design-next';
import { StyleIconSelect, WeightIconSelect, ColorIconMenu } from "./components/next";
export default function createRenderHoverToolbar(config) {
  var _config$locale = config.locale,
      locale = _config$locale === void 0 ? {} : _config$locale;
  return function (props, controller, getNode) {
    var buttonName = props.buttonName,
        extraProps = props.extraProps;

    switch (buttonName) {
      case 'color':
        return /*#__PURE__*/_createElement(TBItemSlot, {
          display: "iconMenu"
        }, /*#__PURE__*/_createElement(ColorIconMenu, _extends({
          controller: controller,
          getNode: getNode,
          locale: locale
        }, extraProps)));

      case 'style':
        return /*#__PURE__*/_createElement(TBItemSlot, {
          display: "iconMenu"
        }, /*#__PURE__*/_createElement(StyleIconSelect, _extends({
          controller: controller,
          getNode: getNode,
          locale: locale
        }, extraProps)));

      case 'weight':
        return /*#__PURE__*/_createElement(TBItemSlot, {
          display: "iconMenu"
        }, /*#__PURE__*/_createElement(WeightIconSelect, _extends({
          controller: controller,
          getNode: getNode,
          locale: locale
        }, extraProps)));

      default:
        return null;
    }
  };
}
//# sourceMappingURL=createRenderHoverToolbar.js.map