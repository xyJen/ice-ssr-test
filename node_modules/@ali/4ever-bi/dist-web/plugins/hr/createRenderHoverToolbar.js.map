{"version":3,"sources":["../../../../src/plugins/hr/createRenderHoverToolbar.tsx"],"names":["React","TBItemSlot","StyleIconSelect","WeightIconSelect","ColorIconMenu","createRenderHoverToolbar","config","locale","props","controller","getNode","buttonName","extraProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,aAA5C;AAGA,eAAe,SAASC,wBAAT,CACbC,MADa,EAEmB;AAAA,uBACRA,MADQ,CACxBC,MADwB;AAAA,MACxBA,MADwB,+BACf,EADe;AAEhC,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAoBC,OAApB,EAAgC;AAAA,QAC7BC,UAD6B,GACFH,KADE,CAC7BG,UAD6B;AAAA,QACjBC,UADiB,GACFJ,KADE,CACjBI,UADiB;;AAErC,YAAQD,UAAR;AACE,WAAK,OAAL;AACE,4BACE,eAAC,UAAD;AAAY,UAAA,OAAO,EAAC;AAApB,wBACE,eAAC,aAAD;AACE,UAAA,UAAU,EAAEF,UADd;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,MAAM,EAAEH;AAHV,WAIOK,UAJP,EADF,CADF;;AAUF,WAAK,OAAL;AACE,4BACE,eAAC,UAAD;AAAY,UAAA,OAAO,EAAC;AAApB,wBACE,eAAC,eAAD;AACE,UAAA,UAAU,EAAEH,UADd;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,MAAM,EAAEH;AAHV,WAIMK,UAJN,EADF,CADF;;AAUF,WAAK,QAAL;AACE,4BACE,eAAC,UAAD;AAAY,UAAA,OAAO,EAAC;AAApB,wBACE,eAAC,gBAAD;AACE,UAAA,UAAU,EAAEH,UADd;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,MAAM,EAAEH;AAHV,WAIMK,UAJN,EADF,CADF;;AAUF;AAAS,eAAO,IAAP;AAlCX;AAoCD,GAtCD;AAuCD","sourcesContent":["import * as React from 'react';\nimport { TBItemSlot } from '@ali/we-design-next';\nimport { StyleIconSelect, WeightIconSelect, ColorIconMenu } from './components/next';\nimport type { BiPlugin } from '../../types';\n\nexport default function createRenderHoverToolbar(\n  config: any\n): BiPlugin['renderHoverToolbar'] {\n  const { locale = {} } = config;\n  return (props, controller, getNode) => {\n    const { buttonName, extraProps } = props;\n    switch (buttonName) {\n      case 'color':\n        return (\n          <TBItemSlot display='iconMenu'>\n            <ColorIconMenu\n              controller={controller}\n              getNode={getNode}\n              locale={locale}\n              { ...extraProps }\n            />\n          </TBItemSlot>\n        );\n      case 'style':\n        return (\n          <TBItemSlot display='iconMenu'>\n            <StyleIconSelect\n              controller={controller}\n              getNode={getNode}\n              locale={locale}\n              {...extraProps}\n            />\n          </TBItemSlot>\n        );\n      case 'weight':\n        return (\n          <TBItemSlot display='iconMenu'>\n            <WeightIconSelect\n              controller={controller}\n              getNode={getNode}\n              locale={locale}\n              {...extraProps}\n            />\n          </TBItemSlot>\n        );\n      default: return null;\n    }\n  };\n}\n"],"file":"createRenderHoverToolbar.js"}