{"version":3,"sources":["../../../../../src/plugins/hr/components/hrButton.tsx"],"names":["React","Button","CommonLine","commonLineMap","CommonLineSelect","LinethicknessNormal","LinetypeNormal","Select","SelectOption","PluginRoles","ColorPicker","EColorPickerIcon","MAPPING","parseJsonMLToValue","parseValueToJsonML","insertHr","DEFAULT_HR_COLOR","setColorPanelMode","HrButton","props","controller","locale","onChange","useCallback","payload","data","run","icon","useMemo","buttonTitle","hr","HrColor","rest","color","focusBlock","value","parsedPayload","getColorPanelMode","query","mode","handleSelectValueChange","colorButtonTitle","backgroundfont","hrColor","HrStyle","lineType","style","hrStyle","HrWeight","size","width","lineWidthList","sizeList","single","weight","hrWeight","map","marginRight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Button,\n  CommonLine,\n  commonLineMap,\n  CommonLineSelect,\n  DividingLineNormal,\n  LinethicknessNormal,\n  LinetypeNormal,\n  Select,\n  SelectOption,\n} from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\n\nimport { ColorPicker, EColorPanelMode, EColorPickerIcon } from '@ali/we-toolbar';\nimport { MAPPING, parseJsonMLToValue, parseValueToJsonML, IHrPayload } from '@ali/4ever-utils';\n\nimport { insertHr } from '../actions';\nimport { DEFAULT_HR_COLOR } from '../constants';\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\n\nexport function HrButton(props) {\n  const { controller, locale } = props;\n\n  // check if color changes\n  const onChange = React.useCallback((payload) => {\n    const data = parseValueToJsonML(payload, MAPPING);\n    controller.run('onAction', insertHr(data));\n  }, [controller]);\n\n  const icon = React.useMemo(() => (<LinetypeNormal />), []);\n\n  return (\n    <Button\n      title={locale.buttonTitle}\n      bordered={false}\n      testid=\"bi-toolbar-hrline\"\n      icon={icon}\n      onClick={onChange}\n      role={PluginRoles.hr}\n    />\n  );\n}\n\ntype ParsedColorPayload = Partial<Pick<IHrPayload, 'color'>>;\n\nexport const HrColor = (props) => {\n  const { controller, locale, ...rest } = props;\n  const onChange = (color: string) => {\n    const data = parseValueToJsonML({ color } as IHrPayload, MAPPING);\n    controller.run('onAction', insertHr(data));\n  };\n\n  const { focusBlock } = controller.value;\n  let parsedPayload: ParsedColorPayload | undefined;\n  if (focusBlock) {\n    const payload = focusBlock.data;\n    parsedPayload = parseJsonMLToValue(payload, MAPPING);\n  }\n\n  const getColorPanelMode =\n    React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);\n\n  const handleSelectValueChange = React.useCallback((mode: EColorPanelMode) => {\n    controller.run('onAction', setColorPanelMode({ mode }));\n  }, [controller]);\n\n  return (\n    <ColorPicker\n      {...rest}\n      title={locale.colorButtonTitle}\n      btnType={EColorPickerIcon.backgroundfont}\n      color={parsedPayload?.color}\n      onColorPicker={onChange}\n      defaultColor={DEFAULT_HR_COLOR}\n      automaticColor=\"#404040\"\n      role={PluginRoles.hrColor}\n      showToggleSelect\n      getColorPanelMode={getColorPanelMode}\n      onSelectValueChange={handleSelectValueChange}\n    />\n  );\n};\n\ntype ParsedStylePayload = Partial<Pick<IHrPayload, 'lineType'>>;\n\nexport const HrStyle = (props) => {\n  const { controller, locale, ...rest } = props;\n  const onChange = (lineType: string) => {\n    const data = parseValueToJsonML({ lineType } as IHrPayload, MAPPING);\n    controller.run('onAction', insertHr(data));\n  };\n\n  const { focusBlock } = controller.value;\n  let parsedPayload: ParsedStylePayload | undefined;\n  if (focusBlock) {\n    const payload = focusBlock.data;\n    parsedPayload = parseJsonMLToValue(payload, MAPPING);\n  }\n\n  // 受控模式\n  return (\n    <CommonLineSelect\n      {...rest}\n      title={locale.style}\n      color=\"#000000\"\n      length={63}\n      lineType={parsedPayload?.lineType}\n      onLineTypeChange={onChange}\n      customTrigger={() => (<LinetypeNormal />)}\n      bordered={false}\n      role={PluginRoles.hrStyle}\n    />\n  );\n};\n\ntype ParsedWeightPayload = Partial<Pick<IHrPayload, 'size' | 'lineType'>>;\n\n\nexport const HrWeight = (props) => {\n  const { controller, locale, ...rest } = props;\n  const onChange = (size: number) => {\n    const data = parseValueToJsonML({ size }, MAPPING);\n    controller.run('onAction', insertHr(data));\n  };\n\n  const { focusBlock } = controller.value;\n  let parsedPayload: ParsedWeightPayload = {};\n  if (focusBlock) {\n    const payload = focusBlock.data;\n    parsedPayload = parseJsonMLToValue(payload, MAPPING);\n  }\n\n  const { size: width, lineType = 'single' } = parsedPayload;\n\n  let lineWidthList = commonLineMap[lineType]?.sizeList;\n\n  if (!lineWidthList) {\n    lineWidthList = commonLineMap.single.sizeList;\n  }\n\n  return (\n    <Select\n      {...rest}\n      title={locale.weight}\n      value={width}\n      className=\"\"\n      renderTrigger={() => (\n        <LinethicknessNormal />\n      )}\n      selectable\n      onChange={onChange}\n      testid=\"hr-weight-button\"\n      role={PluginRoles.hrWeight}\n    >\n      {lineWidthList.map((size) => {\n        return (\n          <SelectOption key={size} value={size} testid={`hr-weight-${size}`}>\n            <div style={{ marginRight: 2 }}>{size}pt</div>\n            <CommonLine length={63} lineType=\"single\" color=\"black\" size={size} />\n          </SelectOption>\n        );\n      })}\n    </Select>\n  );\n};\n"],"file":"hrButton.js"}