import _extends from "@babel/runtime/helpers/extends";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import * as ReactDOM from 'react-dom';
import styled from 'styled-components';
import { theme } from '@ali/4ever-bamboo'; // HACK: Pi2.0 要求插件尺寸与实际渲染必须保持一致，未来应该对 hr 类型做个映射 @统领

var themeHeight = theme.hr.height; // const ControlPoint = styled.div`
//   width: 14px;
//   height: 14px;
//   box-sizing: border-box;
//   background: #fff;
//   position: absolute;
//   border-radius: 50%;
//   border: 1px solid #ddd;
//   display: ${(props: any) => (props.isActive ? 'visible' : 'none')};
//   &::after {
//     width: 8px;
//     height: 8px;
//     position: absolute;
//     border-radius: 50%;
//     top: 2px;
//     left: 2px;
//     background: #3d8df3;
//     content: '';
//     cursor: ew-resize;
//   }
// `;
// TODO fit-content

var HrWrapper = /*#__PURE__*/styled.div(["position:relative;width:100%;padding:5px 0;background-color:", ";&:hover{background-color:#f4f4f4;};display:flex;align-items:center;& div{width:100%;}"], function (props) {
  return props.isActive ? '#f4f4f4' : '';
});

/**
 * top: 自身高度除去border / 2
 * left: 自身宽度 / 2
 */
// const ControlPointStart = styled(ControlPoint)`
//   position: absolute;
//   top: 6px;
//   left: -7px;
// `;
// const ControlPointEnd = styled(ControlPoint)`
//   position: absolute;
//   top: 6px;
//   right: -7px;
// `;
var HrControl = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(HrControl, _React$Component);

  function HrControl(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;

    _this.handleMouseMove = function (e) {
      e.preventDefault();
      e.stopPropagation();
      var gap = 10;
      var X = e.clientX;
      var _this$state = _this.state,
          originX1 = _this$state.originX1,
          length = _this$state.length,
          originX2 = _this$state.originX2,
          offsetX = _this$state.offsetX,
          flag = _this$state.flag;
      if (!flag) return;
      var finalLen = length;

      if (flag === 'st') {
        if (Math.abs(X - originX1) > gap && originX2 - X > gap) {
          var diffX = X - originX1;
          finalLen = originX2 - X;

          _this.setState({
            originX1: X,
            offsetX: diffX + offsetX,
            length: finalLen
          });
        }
      }

      if (flag === 'et') {
        if (Math.abs(X - originX2) > gap && X - originX1 > gap) {
          finalLen = X - originX1;

          _this.setState({
            originX2: X,
            length: finalLen
          });
        }
      }

      var _this$props = _this.props,
          _this$props$onHrChang = _this$props.onHrChange,
          onHrChange = _this$props$onHrChang === void 0 ? function () {} : _this$props$onHrChang,
          editor = _this$props.editor,
          node = _this$props.node;
      onHrChange(editor, node, {
        length: finalLen
      });
    };

    _this.handleMouseUp = function (e) {
      e.preventDefault();
      e.stopPropagation(); // TODO 建议鼠标收起再赋值

      document.removeEventListener('mousemove', _this.handleMouseMove);
      document.removeEventListener('mouseup', _this.handleMouseUp);
    };

    _this.handleMouseDown = function (e, flag) {
      e.preventDefault();
      e.stopPropagation(); // // 处理逻辑
      // eslint-disable-next-line react/no-find-dom-node

      var target = ReactDOM.findDOMNode(_assertThisInitialized(_this));
      var targetDomInfo = target.getBoundingClientRect();
      var x = targetDomInfo.x,
          width = targetDomInfo.width;

      _this.setState({
        originX1: x,
        originX2: x + width,
        flag: flag
      });

      document.addEventListener('mousemove', _this.handleMouseMove);
      document.addEventListener('mouseup', _this.handleMouseUp);
    };

    var _props$payload = props.payload,
        payload = _props$payload === void 0 ? {} : _props$payload;
    var _length = payload.length;
    _this.state = {
      length: _length,
      originX1: 0,
      // start point
      originX2: 0,
      // end point
      offsetX: 0,
      flag: '' // 操作是左边还是右边

    };
    return _this;
  }
  /**
   * 移动算法, 计算startPoint 和 length, 即可获得具体位置
   * TODO 需要加入边界范围
   */


  var _proto = HrControl.prototype;

  _proto.render = function render() {
    var _this$props2 = this.props,
        children = _this$props2.children,
        isSelected = _this$props2.isSelected,
        attributes = _this$props2.attributes;
    var offsetX = this.state.offsetX;
    return /*#__PURE__*/_createElement(HrWrapper, _extends({
      "data-testid": "horizon-line",
      isActive: isSelected,
      style: {
        height: themeHeight + "px",
        marginLeft: offsetX + "px"
      },
      "data-type": "hr"
    }, attributes), children);
  };

  return HrControl;
}(React.Component);

export { HrControl as default };
//# sourceMappingURL=hrControl.js.map