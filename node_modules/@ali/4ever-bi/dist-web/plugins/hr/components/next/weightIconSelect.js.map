{"version":3,"sources":["../../../../../../src/plugins/hr/components/next/weightIconSelect.tsx"],"names":["React","styled","TBIconMenu","Menu","PluginRoles","commonLineMap","CommonLine","IconLineWeight","HoverToolbarHooks","MAPPING","parseValueToJsonML","updateHr","LINE_LENGTH","MenuItemWrapper","div","MenuItemText","span","WeightIconSelect","props","getNode","controller","onOverlayVisibleChange","locale","node","useState","data","sz","size","setSize","getContainer","useGetContainer","usePopoverVisible","isPopoverVisible","setPopoverVisible","sizeList","single","items","map","key","String","selected","title","handleSelect","useCallback","lineSize","run","item","Number","weight","hrWeight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,qBAAjC;AACA,SAASC,WAAT,QAA4B,mBAA5B,C,CACA;;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAAsD,gBAAtD;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,sBAAlD;AAGA,SAASC,OAAT,EAAkBC,kBAAlB,QAAwD,kBAAxD;AACA,SAASC,QAAT;AACA,SAASC,WAAT;AASA,IAAMC,eAAe,gBAAGZ,MAAM,CAACa,GAAV,yDAArB;AAMA,IAAMC,YAAY,gBAAGd,MAAM,CAACe,IAAV,uBAAlB;;yBAqDY,eAAC,cAAD,O;;AAjDZ,OAAO,IAAMC,gBAAkD,GAAG,SAArDA,gBAAqD,CAACC,KAAD,EAAW;AAAA;;AAAA,MACnEC,OADmE,GACXD,KADW,CACnEC,OADmE;AAAA,MAC1DC,UAD0D,GACXF,KADW,CAC1DE,UAD0D;AAAA,MAC9CC,sBAD8C,GACXH,KADW,CAC9CG,sBAD8C;AAAA,MACtBC,MADsB,GACXJ,KADW,CACtBI,MADsB;AAE3E,MAAMC,IAAI,GAAGJ,OAAO,EAApB;;AAF2E,wBAGnDnB,KAAK,CAACwB,QAAN,CAAiBD,IAAjB,6BAAiBA,IAAD,CAAiBE,IAAjC,qBAAe,MAAmCC,EAAlD,CAHmD;AAAA,MAGpEC,IAHoE;AAAA,MAG9DC,OAH8D;;AAI3E,MAAMC,YAAY,GAAGrB,iBAAiB,CAACsB,eAAlB,EAArB;;AAJ2E,8BAK7BtB,iBAAiB,CAACuB,iBAAlB,CAAoC,WAApC,EAAiDV,sBAAjD,CAL6B;AAAA,MAKpEW,gBALoE;AAAA,MAKlDC,iBALkD;;AAAA,MAMnEC,QANmE,GAMtD7B,aAAa,CAAC8B,MANwC,CAMnED,QANmE;AAQ3E,MAAME,KAAK,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAACX,EAAD;AAAA,WAAS;AAClCY,MAAAA,GAAG,EAAEC,MAAM,CAACb,EAAD,CADuB;AAElCc,MAAAA,QAAQ,EAAED,MAAM,CAACb,EAAD,CAAN,KAAea,MAAM,CAACZ,IAAD,CAFG;AAGlCc,MAAAA,KAAK,EAAEF,MAAM,CAACb,EAAD;AAHqB,KAAT;AAAA,GAAb,CAAd;AAMA,MAAMgB,YAAY,GAAG1C,KAAK,CAAC2C,WAAN,CAAkB,gBAAgB;AAAA,QAAdC,QAAc;AACrD,QAAMrB,IAAI,GAAGJ,OAAO,EAApB;AACA,QAAI,CAACI,IAAL,EAAW;AACX,QAAME,IAAI,GAAGf,kBAAkB,CAAC;AAAEiB,MAAAA,IAAI,EAAEiB;AAAR,KAAD,EAAmCnC,OAAnC,CAA/B;AACAW,IAAAA,UAAU,CAACyB,GAAX,CAAe,UAAf,EAA2BlC,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAJA,IAAF;AAAQF,MAAAA,IAAI,EAAJA;AAAR,KAAD,CAAnC;AACAK,IAAAA,OAAO,CAACgB,QAAD,CAAP;AACAX,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAPoB,EAOlB,CAACd,OAAD,EAAUE,sBAAV,EAAkCY,iBAAlC,CAPkB,CAArB;AASA,MAAI,CAACV,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE,eAAC,UAAD;AACE,IAAA,OAAO,eACL,eAAC,IAAD;AACE,MAAA,KAAK,EAAEa,KADT;AAEE,MAAA,UAAU,EAAE,oBAACU,IAAD,EAAU;AAAA,YACPnB,IADO,GACEmB,IADF,CACZR,GADY;AAEpB,4BACE,eAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEX,IAAhB;AAAsB,qCAAuBA;AAA7C,wBACE,eAAC,eAAD,qBACE,eAAC,YAAD,QAAeA,IAAf,OADF,eAEE,eAAC,UAAD;AACE,UAAA,QAAQ,EAAC,QADX;AAEE,UAAA,IAAI,EAAEoB,MAAM,CAACpB,IAAD,CAFd;AAGE,UAAA,MAAM,EAAEf,WAHV;AAIE,UAAA,KAAK,EAAC;AAJR,UAFF,CADF,CADF;AAaD,OAjBH;AAkBE,MAAA,QAAQ,EAAE8B;AAlBZ,MAFJ;AAuBE,IAAA,IAAI,OAvBN;AAwBE,IAAA,eAAe,EAAET,iBAxBnB;AAyBE,IAAA,cAAc,EAAED,gBAzBlB;AA0BE,IAAA,SAAS,EAAC,YA1BZ;AA2BE,IAAA,YAAY,EAAEH,YA3BhB;AA4BE,IAAA,OAAO,EAAEP,MAAM,CAAC0B,MA5BlB;AA6BE,IAAA,MAAM,EAAC,sBA7BT;AA8BE,IAAA,IAAI,EAAE5C,WAAW,CAAC6C;AA9BpB,IADF;AAkCD,CA3DM","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { TBIconMenu, Menu } from '@ali/we-design-next';\nimport { PluginRoles } from '@ali/4ever-bamboo';\n// TODO: @淼淼 升级并迁移到 we-icon, commonLineMap 迁移到 we-design-nexts\nimport { commonLineMap, CommonLine, TLineStyle } from '@ali/we-design';\nimport { IconLineWeight, HoverToolbarHooks } from '@ali/4ever-component';\nimport { Controller, Node, Block } from '@ali/4ever-cangjie';\nimport { HrData } from '@ali/4ever-mo';\nimport { MAPPING, parseValueToJsonML, IHrPayload } from '@ali/4ever-utils';\nimport { updateHr } from '../../actions';\nimport { LINE_LENGTH } from './constants';\n\nexport interface IWeightIconSelectProps {\n  controller: Controller;\n  getNode: () => Node | null;\n  onOverlayVisibleChange: (v: boolean) => void;\n  locale: Record<string, string>;\n}\n\nconst MenuItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MenuItemText = styled.span`\n  margin-right: 4px;\n`;\n\nexport const WeightIconSelect: React.FC<IWeightIconSelectProps> = (props) => {\n  const { getNode, controller, onOverlayVisibleChange, locale } = props;\n  const node = getNode();\n  const [size, setSize] = React.useState(((node as Block)?.data as HrData)?.sz);\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isPopoverVisible, setPopoverVisible] = HoverToolbarHooks.usePopoverVisible('hr.weight', onOverlayVisibleChange);\n  const { sizeList } = commonLineMap.single;\n\n  const items = sizeList.map((sz) => ({\n    key: String(sz),\n    selected: String(sz) === String(size),\n    title: String(sz),\n  }));\n\n  const handleSelect = React.useCallback(([lineSize]) => {\n    const node = getNode();\n    if (!node) return;\n    const data = parseValueToJsonML({ size: lineSize } as IHrPayload, MAPPING);\n    controller.run('onAction', updateHr({ data, node }));\n    setSize(lineSize);\n    setPopoverVisible(false);\n  }, [getNode, onOverlayVisibleChange, setPopoverVisible]);\n\n  if (!node) return null;\n\n  return (\n    <TBIconMenu\n      overlay={\n        <Menu\n          items={items}\n          renderItem={(item) => {\n            const { key: size } = item;\n            return (\n              <Menu.Item key={size} data-testid={`option-${size}`}>\n                <MenuItemWrapper >\n                  <MenuItemText>{size}pt</MenuItemText>\n                  <CommonLine\n                    lineType=\"single\"\n                    size={Number(size)}\n                    length={LINE_LENGTH}\n                    color=\"black\"\n                  />\n                </MenuItemWrapper>\n              </Menu.Item>\n            );\n          }}\n          onSelect={handleSelect}\n        />\n      }\n      icon={<IconLineWeight />}\n      onVisibleChange={setPopoverVisible}\n      overlayVisible={isPopoverVisible}\n      placement=\"bottomLeft\"\n      getContainer={getContainer}\n      tooltip={locale.weight}\n      testid=\"bi-toolbar-hr-weight\"\n      role={PluginRoles.hrWeight}\n    />\n  )\n};"],"file":"weightIconSelect.js"}