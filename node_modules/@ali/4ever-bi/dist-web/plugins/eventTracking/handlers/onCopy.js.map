{"version":3,"sources":["../../../../../src/plugins/eventTracking/handlers/onCopy.ts"],"names":["sample","eventTracking","TrackingType","trackCopy","controller","run","type","copy","onCopy","event","next","readOnly","canCopy"],"mappings":"AACA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,aAAT,EAAwBC,YAAxB;AAEA,IAAMC,SAAS,GAAGH,MAAM,CAAC,UAACI,UAAD,EAAgB;AACvCA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEEJ,aAAa,CAAC;AAAEK,IAAAA,IAAI,EAAEJ,YAAY,CAACK;AAArB,GAAD,CAFf;AAID,CALuB,EAKrB;AAAEP,EAAAA,MAAM,EAAE;AAAV,CALqB,CAAxB;AAOA,eAAe,SAASQ,MAAT,CAAgBC,KAAhB,EAA6CL,UAA7C,EAAqEM,IAArE,EAA2E;AACxF,MAAIN,UAAU,CAACO,QAAX,IAAuB,CAACP,UAAU,CAACQ,OAAvC,EAAgD;AAC9C,WAAOF,IAAI,EAAX;AACD;;AAEDP,EAAAA,SAAS,CAACC,UAAD,CAAT;AAEA,SAAOM,IAAI,EAAX;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { sample } from '@ali/4ever-bamboo';\nimport { eventTracking, TrackingType } from '../actions';\n\nconst trackCopy = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({ type: TrackingType.copy }),\n  );\n}, { sample: 10 })\n\nexport default function onCopy(event: React.ClipboardEvent, controller: Controller, next) {\n  if (controller.readOnly && !controller.canCopy) {\n    return next();\n  }\n\n  trackCopy(controller);\n\n  return next();\n}\n"],"file":"onCopy.js"}