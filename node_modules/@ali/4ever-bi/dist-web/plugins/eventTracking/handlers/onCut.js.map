{"version":3,"sources":["../../../../../src/plugins/eventTracking/handlers/onCut.ts"],"names":["eventTracking","TrackingType","sample","trackCut","controller","run","type","cut","onCut","event","next","readOnly","canCopy"],"mappings":"AACA,SAASA,aAAT,EAAwBC,YAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAAC,UAACE,UAAD,EAAgB;AACtCA,EAAAA,UAAU,CAACC,GAAX,CACE,UADF,EAEEL,aAAa,CAAC;AAAEM,IAAAA,IAAI,EAAEL,YAAY,CAACM;AAArB,GAAD,CAFf;AAID,CALsB,EAKpB;AAAEL,EAAAA,MAAM,EAAE;AAAV,CALoB,CAAvB;AAOA,eAAe,SAASM,KAAT,CAAeC,KAAf,EAA4CL,UAA5C,EAAoEM,IAApE,EAA0E;AACvF,MAAIN,UAAU,CAACO,QAAX,IAAuB,CAACP,UAAU,CAACQ,OAAvC,EAAgD;AAC9C,WAAOF,IAAI,EAAX;AACD;;AAEDP,EAAAA,QAAQ,CAACC,UAAD,CAAR;AAEA,SAAOM,IAAI,EAAX;AACD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { eventTracking, TrackingType } from '../actions';\nimport { sample } from '@ali/4ever-bamboo';\n\nconst trackCut = sample((controller) => {\n  controller.run(\n    'onAction',\n    eventTracking({ type: TrackingType.cut }),\n  );\n}, { sample: 5 })\n\nexport default function onCut(event: React.ClipboardEvent, controller: Controller, next) {\n  if (controller.readOnly && !controller.canCopy) {\n    return next();\n  }\n\n  trackCut(controller);\n\n  return next();\n}\n"],"file":"onCut.js"}