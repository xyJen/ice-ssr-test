{"version":3,"sources":["../../../../src/plugins/voteCard/index.tsx"],"names":["cardFactory","locale","VoteCardPlugin","createOnCangjieCopy","createRenderNode","createMenubar","copyNodes","createOnAction","createQueries","createPlugin","bizConfig","voteCardConfig","voteCard","renderNode","onAction","cardType","onCangjieCopy","menubar","menu","queries","createBiVoteCardPlugin"],"mappings":";AACA,SAASA,WAAT,QAAwD,oBAAxD;AACA,OAAOC,MAAP;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,mBAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AACA,SAASC,SAAT,QAA0B,6BAA1B;IAEQC,c,GAAkCL,c,CAAlCK,c;IAAgBC,a,GAAkBN,c,CAAlBM,a;;AAExB,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAA2D;AAC9E,MAAMC,cAAc,gBACfV,MAAM,CAACW,QADQ,EAEfF,SAAS,CAACE,QAFK,CAApB,CAD8E,CAM9E;;;AACA,MAAMC,UAAoD,GAAGT,gBAAgB,CAACO,cAAD,CAA7E,CAP8E,CAS9E;;AACA,MAAMG,QAAgD,GAAGP,cAAc,CAACI,cAAD,EAAiBL,SAAjB,CAAvE;AACA,SAAO;AACLS,IAAAA,QAAQ,EAAE,MADL;AAELD,IAAAA,QAAQ,EAARA,QAFK;AAGLD,IAAAA,UAAU,EAAVA,UAHK;AAILG,IAAAA,aAAa,EAAEb,mBAAmB,EAJ7B;AAKLc,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEb,aAAa;AADZ,KALJ;AAQLc,IAAAA,OAAO,EAAEX,aAAa;AARjB,GAAP;AAUD,CArBD;;AAuBA,IAAMY,sBAAsB,GAAGpB,WAAW,CAACS,YAAD,CAA1C;AAEA,eAAeW,sBAAf","sourcesContent":["import { BiPluginConfig } from '../../types';\nimport { cardFactory, CustomizedBiCardPluginType } from '@ali/4ever-factory';\nimport locale from '../../locales/zh_CN';\nimport { VoteCardPlugin } from '@ali/4ever-bamboo';\nimport createOnCangjieCopy from './handlers/createOnCangjieCopy';\nimport createRenderNode from './createRenderNode';\nimport createMenubar from './handlers/createMenu';\nimport { copyNodes } from '@ali/4ever-plugin-clipboard'\n\nconst { createOnAction, createQueries } = VoteCardPlugin;\n\nconst createPlugin = (bizConfig: BiPluginConfig): CustomizedBiCardPluginType => {\n  const voteCardConfig = {\n    ...locale.voteCard,\n    ...bizConfig.voteCard,\n  };\n\n  // @ts-ignore\n  const renderNode: CustomizedBiCardPluginType['renderNode'] = createRenderNode(voteCardConfig);\n\n  // @ts-ignore\n  const onAction: CustomizedBiCardPluginType['onAction'] = createOnAction(voteCardConfig, copyNodes);\n  return {\n    cardType: 'vote',\n    onAction,\n    renderNode,\n    onCangjieCopy: createOnCangjieCopy(),\n    menubar: {\n      menu: createMenubar(),\n    },\n    queries: createQueries(),\n  };\n};\n\nconst createBiVoteCardPlugin = cardFactory(createPlugin);\n\nexport default createBiVoteCardPlugin;\n"],"file":"index.js"}