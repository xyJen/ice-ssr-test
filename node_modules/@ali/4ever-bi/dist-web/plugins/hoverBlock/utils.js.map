{"version":3,"sources":["../../../../src/plugins/hoverBlock/utils.ts"],"names":["Block","Inline","constants","domUtils","Image","Table","HIGHLIGHT_CLASS","isListNode","node","isInline","data","list","pi","extra","inList","getClosestDom","nodeDom","key","findDOMNodeSafely","isTable","isImage","querySelector","Selector","hoverWrapper","isBlock","selector","getAttribute","maybeNodeDom","closest","leafBlock","blockquote","e","updateHighlightSingle","type","reason","dom","hoverBlockType","forEach","highlightType","toLocaleUpperCase","slice","classList","remove","classKey","add","setAttribute","removeHighlightSingle","contains","removeAttribute"],"mappings":"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","sourcesContent":["import { Block, Inline, constants, domUtils } from '@ali/4ever-cangjie';\nimport { Image, Table } from '@ali/4ever-mo';\nimport { HIGHLIGHT_CLASS } from './constants';\nimport type { BorderBoxHighlightType, HoverBlockType } from './types';\n\nfunction isListNode(node: Block | Inline) {\n  if (Inline.isInline(node)) return false;\n\n  // 排版模式下 data.list 未下放到 nodes.nodes 中\n  return node.data.list || node.data.pi?.extra?.inList;\n}\n\nexport function getClosestDom(node: Inline | Block | null): Element | null {\n  let nodeDom: Element | null = null;\n  const key = node?.key;\n  if (!key) return nodeDom;\n  try {\n    nodeDom = domUtils.findDOMNodeSafely(key) || null;\n    if (!nodeDom) return null;\n    // 表格有独立的hover 态\n    if (Table.isTable(node)) return null;\n    if (Image.isImage(node)) {\n      nodeDom = nodeDom.querySelector(`[${constants.Selector.hoverWrapper}]`);\n    } else if (Block.isBlock(node)) {\n      const { hoverWrapper: selector, key } = constants.Selector;\n      if (nodeDom.getAttribute(selector)) {\n        return nodeDom;\n      }\n      let maybeNodeDom = nodeDom.querySelector(`[${selector}]`);\n      if (maybeNodeDom && maybeNodeDom.closest(`[${key}]`) === nodeDom) {\n        return maybeNodeDom;\n      }\n      nodeDom = nodeDom.closest('[data-name=\"heading-group-title-content\"]') || nodeDom.closest(`[${constants.Selector.leafBlock}]`) || nodeDom;\n    }\n    if (nodeDom && node.data.blockquote) {\n      // 引用\n      nodeDom = nodeDom.closest('blockquote') || nodeDom;\n    } else if (nodeDom && isListNode(node)) {\n      // 列表和任务\n      nodeDom = nodeDom.closest('[data-testid=\"list\"]') || nodeDom;\n    }\n    return nodeDom;\n  } catch (e) {\n    // do nothing\n  }\n  return nodeDom;\n}\n\nexport function updateHighlightSingle(node: Block | Inline, type: BorderBoxHighlightType, reason: string) {\n  const key = node?.key;\n  if (!key) return;\n  const dom = domUtils.findDOMNodeSafely(key);\n  if (!dom) return;\n  const hoverWrapper = getClosestDom(node);\n  if (!hoverWrapper) return;\n  const hoverBlockType: HoverBlockType = (hoverWrapper?.getAttribute(constants.Selector.hoverWrapper) as HoverBlockType) || 'noBorderBox';\n  // 同一个时刻元素仅存在一种状态\n  ['select', 'hover', 'active'].forEach((highlightType) => {\n    const key = hoverBlockType + highlightType[0].toLocaleUpperCase() + highlightType.slice(1);\n    hoverWrapper.classList.remove(HIGHLIGHT_CLASS[key]);\n  })\n  const classKey = hoverBlockType + type[0].toLocaleUpperCase() + type.slice(1);\n  hoverWrapper.classList.add(HIGHLIGHT_CLASS[classKey]);\n  hoverWrapper.setAttribute('data-highlight-reason', reason);\n}\n\nexport function removeHighlightSingle(node: Block | Inline, type: BorderBoxHighlightType, reason: string) {\n  const key = node?.key;\n  if (!key) return;\n  const dom = domUtils.findDOMNodeSafely(key);\n  if (!dom) return;\n\n  const hoverWrapper = getClosestDom(node);\n  // 避免时序问题，由不是当前原因触发清除\n  if (!hoverWrapper || hoverWrapper.getAttribute('data-highlight-reason') !== reason) return;\n  const hoverBlockType: HoverBlockType = (hoverWrapper.getAttribute(constants.Selector.hoverWrapper) as HoverBlockType) || 'noBorderBox';\n\n  const classKey = hoverBlockType + type[0].toLocaleUpperCase() + type.slice(1);\n  if (hoverWrapper.classList.contains(HIGHLIGHT_CLASS[classKey])) {\n    hoverWrapper.classList.remove(HIGHLIGHT_CLASS[classKey]);\n    hoverWrapper.removeAttribute('data-highlight-reason');\n  }\n}"],"file":"utils.js"}