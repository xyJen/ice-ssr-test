{"version":3,"sources":["../../../../src/plugins/sticker/index.tsx"],"names":["React","StickerPlugin","createRenderNode","onCangjieSelect","onAction","onKeyDown","toolbar","getSnippetConfig","DEFAULT_LANG","STICKER_NODE_TYPE","StickerPanelWrapper","menu","inlineMenu","StickerPlaceholder","createRenderToolbar","moFactory","onCangjieInput","DEFAULT_STICKERS","Sticker","createStickerPlugin","config","stickerConfig","lang","customSticker","sticker","params","stickerToolbar","enableSticker","locale","onPanelVisibleChange","renderNode","renderToolbar","renderEditable","_","controller","next","_stickerPanel","value","data","menubar","models","klass","type","defaultSticker","components"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAOC,gBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,gBAAP;AACA,SAASC,YAAT,EAAuBC,iBAAvB;AACA,OAAOC,mBAAP;AACA,SAASC,IAAT,EAAeC,UAAf;AACA,OAAOC,kBAAP;AAEA,OAAOC,mBAAP;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,cAAP;IAEQC,gB,GAA8BhB,a,CAA9BgB,gB;IAAkBC,O,GAAYjB,a,CAAZiB,O;;AAE1B,SAASC,mBAAT,CAA6BC,MAA7B,EAA+D;AAC7D,MAAMC,aAAkC;AACtCC,IAAAA,IAAI,EAAEd,YADgC;AAEtCe,IAAAA,aAAa,EAAE,CAACN,gBAAD;AAFuB,KAGnCG,MAAM,CAACI,OAH4B,CAAxC;;AAKA,MAAMA,OAAO,GAAG,IAAIN,OAAJ,CAAYG,aAAZ,CAAhB;AACA,MAAMI,MAAM,GAAG;AACbJ,IAAAA,aAAa,EAAbA,aADa;AAEbG,IAAAA,OAAO,EAAPA;AAFa,GAAf;AAIA,MAAME,cAAc,GAAGL,aAAa,CAACM,aAAd,GACnB;AAAErB,IAAAA,OAAO,EAAEA,OAAO,CAACmB,MAAD;AAAlB,GADmB,GAEnB,EAFJ;AAGA,MAAMG,MAAM,GAAGP,aAAa,CAACO,MAAd,IAAwB,EAAvC;AAd6D,MAerDC,oBAfqD,GAe5BR,aAf4B,CAerDQ,oBAfqD;AAgB7D,sBACKd,SAAS,CAAC,EAAD,CADd;AAEE;AACAe,IAAAA,UAAU,EAAE5B,gBAAgB,CAACuB,MAAD,EAASZ,kBAAT,CAH9B;AAIEkB,IAAAA,aAAa,EAAEjB,mBAAmB,CAACO,aAAa,CAACO,MAAf,CAJpC;AAKEI,IAAAA,cAAc,EAAE,wBAACC,CAAD,EAAIC,UAAJ,EAAgBC,IAAhB,EAAyB;AAAA,UAC/BC,aAD+B,GACbF,UAAU,CAACG,KAAX,CAAiBC,IADJ,CAC/BF,aAD+B;AAEvC,0BACE,qCACGD,IAAI,EADP,eAEE,eAAC,mBAAD;AACE,QAAA,UAAU,EAAED,UADd;AAEE,QAAA,OAAO,EAAEV,OAFX;AAGE,QAAA,OAAO,EAAEY,aAHX;AAIE,QAAA,MAAM,EAAER,MAJV;AAKE,QAAA,eAAe,EAAEC;AALnB,QAFF,CADF;AAYD,KAnBH;AAoBEU,IAAAA,OAAO,EAAE;AACP5B,MAAAA,IAAI,EAAJA,IADO;AAEPC,MAAAA,UAAU,EAAVA;AAFO,KApBX;AAwBER,IAAAA,QAAQ,EAARA,QAxBF;AAyBEC,IAAAA,SAAS,EAATA,SAzBF;AA0BEF,IAAAA,eAAe,EAAfA,eA1BF;AA2BEa,IAAAA,cAAc,EAAdA;AA3BF,KA4BKU,cA5BL;AA6BEnB,IAAAA,gBAAgB,EAAhBA,gBA7BF;AA8BEiC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,QADD;AAENC,MAAAA,IAAI,EAAEjC;AAFA;AA9BV;AAmCD;;AAEDU,mBAAmB,CAACwB,cAApB,GAAqC1B,gBAArC;AACAE,mBAAmB,CAACyB,UAApB,GAAiC;AAC/B/B,EAAAA,kBAAkB,EAAlBA;AAD+B,CAAjC;AAIA,eAAeM,mBAAf","sourcesContent":["import * as React from 'react';\nimport { StickerPlugin } from '@ali/4ever-bamboo';\nimport { StickerPluginConfig, ICustomSticker } from './types';\nimport createRenderNode from './renderNode';\nimport onCangjieSelect from './handlers/onCangjieSelect';\nimport onAction from './handlers/onAction';\nimport onKeyDown from './handlers/onKeyDown';\nimport toolbar from './toolbar';\nimport getSnippetConfig from './getSnippetConfig';\nimport { DEFAULT_LANG, STICKER_NODE_TYPE } from './constants';\nimport StickerPanelWrapper from './components/stickerPanelWrapper';\nimport { menu, inlineMenu } from './components/stickerMenu';\nimport StickerPlaceholder from './components/stickerPlaceholder';\nimport { BiPlugin, BiPluginConfig } from '../../types';\nimport createRenderToolbar from './createRenderToolbar';\nimport { moFactory } from '@ali/4ever-plugin-sticker';\nimport onCangjieInput from './handlers/onCangjieInput';\n\nconst { DEFAULT_STICKERS, Sticker } = StickerPlugin;\n\nfunction createStickerPlugin(config: BiPluginConfig): BiPlugin {\n  const stickerConfig: StickerPluginConfig = {\n    lang: DEFAULT_LANG,\n    customSticker: [DEFAULT_STICKERS] as ICustomSticker,\n    ...config.sticker,\n  };\n  const sticker = new Sticker(stickerConfig as StickerPlugin.IStickerProps);\n  const params = {\n    stickerConfig,\n    sticker,\n  };\n  const stickerToolbar = stickerConfig.enableSticker\n    ? { toolbar: toolbar(params) }\n    : {};\n  const locale = stickerConfig.locale || {};\n  const { onPanelVisibleChange } = stickerConfig;\n  return {\n    ...moFactory({}),\n    // @ts-ignore\n    renderNode: createRenderNode(params, StickerPlaceholder),\n    renderToolbar: createRenderToolbar(stickerConfig.locale),\n    renderEditable: (_, controller, next) => {\n      const { _stickerPanel } = controller.value.data;\n      return (\n        <>\n          {next()}\n          <StickerPanelWrapper\n            controller={controller}\n            sticker={sticker}\n            visible={_stickerPanel}\n            locale={locale}\n            onVisibleChange={onPanelVisibleChange}\n          />\n        </>\n      );\n    },\n    menubar: {\n      menu,\n      inlineMenu,\n    },\n    onAction,\n    onKeyDown,\n    onCangjieSelect,\n    onCangjieInput,\n    ...stickerToolbar,\n    getSnippetConfig,\n    models: {\n      klass: 'inline',\n      type: STICKER_NODE_TYPE,\n    },\n  };\n}\n\ncreateStickerPlugin.defaultSticker = DEFAULT_STICKERS;\ncreateStickerPlugin.components = {\n  StickerPlaceholder,\n};\n\nexport default createStickerPlugin;\n"],"file":"index.js"}