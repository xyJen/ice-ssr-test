var _MOVE_SET;

import { Commands, Selection, Queries } from '@ali/4ever-cangjie';
import { Sticker } from '@ali/4ever-mo';
import { SELECTION_TRIGGER } from '@ali/4ever-utils';
import { moveCaret, setRange } from "../actions";
var MOVE_UPWARD = SELECTION_TRIGGER.MOVE_UPWARD,
    MOVE_DOWNWARD = SELECTION_TRIGGER.MOVE_DOWNWARD,
    MOVE_BACKWARD = SELECTION_TRIGGER.MOVE_BACKWARD,
    MOVE_FORWARD = SELECTION_TRIGGER.MOVE_FORWARD,
    SELECT_START = SELECTION_TRIGGER.SELECT_START;
var MOVE_SET = (_MOVE_SET = {}, _MOVE_SET[MOVE_UPWARD] = {
  queryRange: 'getUpsideRange',
  getTargetMethod: 'getPreviousNode',
  moveMethod: 'moveToEndOfNode'
}, _MOVE_SET[MOVE_DOWNWARD] = {
  queryRange: 'getDownsideRange',
  getTargetMethod: 'getNextNode',
  moveMethod: 'moveToStartOfNode'
}, _MOVE_SET);
export default function onCangjieSelect(event, controller, next) {
  var _event$detail = event.detail,
      trigger = _event$detail.trigger,
      selection = _event$detail.selection;
  var anchor = selection.anchor;
  var value = controller.value;
  var document = value.document;

  if (!selection.isCollapsed || !anchor.isTextPoint()) {
    return next();
  }

  var maybeInline = document.getClosestInline(anchor.key);

  if (Sticker.isSticker(maybeInline)) {
    if (trigger === MOVE_BACKWARD) {
      return controller.run('onAction', moveCaret({
        offset: -1
      }));
    }

    if (trigger === MOVE_FORWARD) {
      return controller.run('onAction', moveCaret({
        offset: 1
      }));
    }

    if (trigger === MOVE_UPWARD || trigger === MOVE_DOWNWARD) {
      var queryRange = MOVE_SET[trigger].queryRange;
      var range = controller.query(Queries[queryRange]);
      if (!range) return controller;
      var maybeSticker = document.getParent(range.anchor.key);

      if (Sticker.isSticker(maybeSticker)) {
        return controller.run('onAction', setRange({
          range: range,
          trigger: trigger
        }));
      }
    } // 点击到表格上时，纠正选区到下一个 text 开头


    if (trigger === SELECT_START) {
      var point = controller.query(Queries.pointAtDistance, selection.anchor, 1);
      return controller.command(Commands.select, Selection.create({
        anchor: point,
        focus: point,
        data: selection.data
      }));
    }
  }

  return next();
}
//# sourceMappingURL=onCangjieSelect.js.map