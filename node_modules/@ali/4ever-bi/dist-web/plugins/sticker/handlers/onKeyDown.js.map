{"version":3,"sources":["../../../../../src/plugins/sticker/handlers/onKeyDown.ts"],"names":["Commands","environment","isKeyHotkey","STICKER_NODE_TYPE","isBackspaceHotKey","onKeyDown","event","controller","next","value","document","data","selection","_stickerPanel","setData","isCollapsed","anchor","curNode","getNode","key","prevNode","getPreviousNode","isAtStart","isAtStartOfNode","IS_MOBILE","type","command","moveAnchorBackward"],"mappings":";AACA,SAAqBA,QAArB,EAA+BC,WAA/B,QAAkD,oBAAlD;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,iBAAT;AAEA,IAAMC,iBAAiB,GAAGF,WAAW,CAAC,WAAD,CAArC;AAEA,eAAe,SAASG,SAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AAAA,0BACsCD,UAAU,CAACE,KADjD;AAAA,MACQC,QADR,qBACQA,QADR;AAAA,MACkBC,IADlB,qBACkBA,IADlB;AAAA,MACwBC,SADxB,qBACwBA,SADxB;AAAA,MAEQC,aAFR,GAE0BF,IAF1B,CAEQE,aAFR;;AAGA,MAAIA,aAAJ,EAAmB;AACjBN,IAAAA,UAAU,CAACO,OAAX,cACKH,IADL;AAEEE,MAAAA,aAAa,EAAE;AAFjB;AAID;;AACD,MAAI,CAACD,SAAS,CAACG,WAAf,EAA4B;AAC1B,WAAOP,IAAI,EAAX;AACD;;AAXD,MAYQQ,MAZR,GAYmBJ,SAZnB,CAYQI,MAZR;AAaA,MAAMC,OAAO,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,MAAM,CAACG,GAAxB,CAAhB;;AACA,MAAIf,iBAAiB,CAACE,KAAD,CAArB,EAA8B;AAC5B,QAAMc,QAAQ,GAAGV,QAAQ,CAACW,eAAT,CAAyBL,MAAM,CAACG,GAAhC,CAAjB;AACA,QAAMG,SAAS,GAAGL,OAAO,IAAID,MAAM,CAACO,eAAP,CAAuBN,OAAvB,CAA7B,CAF4B,CAG5B;;AACA,QAAI,CAAChB,WAAW,CAACuB,SAAb,IAA0BF,SAA1B,IAAuC,CAAAF,QAAQ,QAAR,YAAAA,QAAQ,CAAEK,IAAV,MAAmBtB,iBAA9D,EAAiF;AAC/EI,MAAAA,UAAU,CAACmB,OAAX,CAAmB1B,QAAQ,CAAC2B,kBAA5B,EAAgD,CAAhD;AACD;AACF;;AACD,SAAOnB,IAAI,EAAX;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller, Commands, environment } from '@ali/4ever-cangjie';\nimport { isKeyHotkey } from 'is-hotkey';\nimport { STICKER_NODE_TYPE } from '../constants';\n\nconst isBackspaceHotKey = isKeyHotkey('backspace');\n\nexport default function onKeyDown(\n  event: React.KeyboardEvent,\n  controller: Controller,\n  next: () => void,\n) {\n  const { document, data, selection } = controller.value;\n  const { _stickerPanel } = data;\n  if (_stickerPanel) {\n    controller.setData({\n      ...data,\n      _stickerPanel: false,\n    });\n  }\n  if (!selection.isCollapsed) {\n    return next();\n  }\n  const { anchor } = selection;\n  const curNode = document.getNode(anchor.key);\n  if (isBackspaceHotKey(event)) {\n    const prevNode = document.getPreviousNode(anchor.key);\n    const isAtStart = curNode && anchor.isAtStartOfNode(curNode);\n    // @ts-ignore\n    if (!environment.IS_MOBILE && isAtStart && prevNode?.type === STICKER_NODE_TYPE) {\n      controller.command(Commands.moveAnchorBackward, 1);\n    }\n  }\n  return next();\n}\n"],"file":"onKeyDown.js"}