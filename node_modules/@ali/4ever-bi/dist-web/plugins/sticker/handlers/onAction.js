import { insertSticker, moveCaret, setRange, setSticker, setStickerPanelVisible } from "../commands";
import { STICKER_INSERT, STICKER_SET, STICKER_PANEL_SET_VISIBLE, STICKER_MOVE_CARET, STICKER_SET_RANGE, INSERT_MARKDOWN_EMOJI } from "../actions";
import { Commands } from '@ali/4ever-cangjie';
export default function onAction(action, controller, next) {
  var type = action.type,
      payload = action.payload;

  if (type === STICKER_INSERT) {
    return controller.command(insertSticker, payload);
  }

  if (type === STICKER_SET) {
    return controller.command(setSticker, payload);
  }

  if (type === STICKER_PANEL_SET_VISIBLE) {
    return controller.command(setStickerPanelVisible, payload);
  }

  if (type === STICKER_MOVE_CARET) {
    return controller.command(moveCaret, payload);
  }

  if (type === STICKER_SET_RANGE) {
    return controller.command(setRange, payload);
  }

  if (type === INSERT_MARKDOWN_EMOJI) {
    var key = payload.key,
        start = payload.start,
        end = payload.end,
        emoji = payload.emoji;
    var curNode = controller.value.document.getNode(key);
    controller.command(Commands.moveAnchorToKey, key, start).command(Commands.moveFocusToKey, key, end).command(Commands.insertText, emoji, []);
    return curNode ? controller.command(Commands.moveToEndOfNode, curNode) : controller;
  }

  return next();
}
//# sourceMappingURL=onAction.js.map