{"version":3,"sources":["../../../../../src/plugins/sticker/handlers/onAction.ts"],"names":["insertSticker","moveCaret","setRange","setSticker","setStickerPanelVisible","STICKER_INSERT","STICKER_SET","STICKER_PANEL_SET_VISIBLE","STICKER_MOVE_CARET","STICKER_SET_RANGE","INSERT_MARKDOWN_EMOJI","Commands","onAction","action","controller","next","type","payload","command","key","start","end","emoji","curNode","value","document","getNode","moveAnchorToKey","moveFocusToKey","insertText","moveToEndOfNode"],"mappings":"AAAA,SACEA,aADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,sBALF;AAOA,SACEC,cADF,EAEEC,WAFF,EAGEC,yBAHF,EAIEC,kBAJF,EAKEC,iBALF,EAMEC,qBANF;AAQA,SAASC,QAAT,QAAqC,oBAArC;AAEA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAkDC,IAAlD,EAAwD;AAAA,MAC7DC,IAD6D,GAC3CH,MAD2C,CAC7DG,IAD6D;AAAA,MACvDC,OADuD,GAC3CJ,MAD2C,CACvDI,OADuD;;AAErE,MAAID,IAAI,KAAKX,cAAb,EAA6B;AAC3B,WAAOS,UAAU,CAACI,OAAX,CAAmBlB,aAAnB,EAAkCiB,OAAlC,CAAP;AACD;;AACD,MAAID,IAAI,KAAKV,WAAb,EAA0B;AACxB,WAAOQ,UAAU,CAACI,OAAX,CAAmBf,UAAnB,EAA+Bc,OAA/B,CAAP;AACD;;AACD,MAAID,IAAI,KAAKT,yBAAb,EAAwC;AACtC,WAAOO,UAAU,CAACI,OAAX,CAAmBd,sBAAnB,EAA2Ca,OAA3C,CAAP;AACD;;AACD,MAAID,IAAI,KAAKR,kBAAb,EAAiC;AAC/B,WAAOM,UAAU,CAACI,OAAX,CAAmBjB,SAAnB,EAA8BgB,OAA9B,CAAP;AACD;;AACD,MAAID,IAAI,KAAKP,iBAAb,EAAgC;AAC9B,WAAOK,UAAU,CAACI,OAAX,CAAmBhB,QAAnB,EAA6Be,OAA7B,CAAP;AACD;;AACD,MAAID,IAAI,KAAKN,qBAAb,EAAoC;AAAA,QAC1BS,GAD0B,GACCF,OADD,CAC1BE,GAD0B;AAAA,QACrBC,KADqB,GACCH,OADD,CACrBG,KADqB;AAAA,QACdC,GADc,GACCJ,OADD,CACdI,GADc;AAAA,QACTC,KADS,GACCL,OADD,CACTK,KADS;AAElC,QAAMC,OAAO,GAAGT,UAAU,CAACU,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCP,GAAlC,CAAhB;AACAL,IAAAA,UAAU,CACPI,OADH,CACWP,QAAQ,CAACgB,eADpB,EACqCR,GADrC,EAC0CC,KAD1C,EAEGF,OAFH,CAEWP,QAAQ,CAACiB,cAFpB,EAEoCT,GAFpC,EAEyCE,GAFzC,EAGGH,OAHH,CAGWP,QAAQ,CAACkB,UAHpB,EAGgCP,KAHhC,EAGuC,EAHvC;AAIA,WAAOC,OAAO,GACVT,UAAU,CAACI,OAAX,CAAmBP,QAAQ,CAACmB,eAA5B,EAA6CP,OAA7C,CADU,GAEVT,UAFJ;AAGD;;AACD,SAAOC,IAAI,EAAX;AACD","sourcesContent":["import {\n  insertSticker,\n  moveCaret,\n  setRange,\n  setSticker,\n  setStickerPanelVisible,\n} from '../commands';\nimport {\n  STICKER_INSERT,\n  STICKER_SET,\n  STICKER_PANEL_SET_VISIBLE,\n  STICKER_MOVE_CARET,\n  STICKER_SET_RANGE,\n  INSERT_MARKDOWN_EMOJI,\n} from '../actions';\nimport { Commands, Controller } from '@ali/4ever-cangjie';\n\nexport default function onAction(action, controller: Controller, next) {\n  const { type, payload } = action;\n  if (type === STICKER_INSERT) {\n    return controller.command(insertSticker, payload);\n  }\n  if (type === STICKER_SET) {\n    return controller.command(setSticker, payload);\n  }\n  if (type === STICKER_PANEL_SET_VISIBLE) {\n    return controller.command(setStickerPanelVisible, payload);\n  }\n  if (type === STICKER_MOVE_CARET) {\n    return controller.command(moveCaret, payload);\n  }\n  if (type === STICKER_SET_RANGE) {\n    return controller.command(setRange, payload);\n  }\n  if (type === INSERT_MARKDOWN_EMOJI) {\n    const { key, start, end, emoji } = payload;\n    const curNode = controller.value.document.getNode(key);\n    controller\n      .command(Commands.moveAnchorToKey, key, start)\n      .command(Commands.moveFocusToKey, key, end)\n      .command(Commands.insertText, emoji, []);\n    return curNode\n      ? controller.command(Commands.moveToEndOfNode, curNode)\n      : controller;\n  }\n  return next();\n}\n"],"file":"onAction.js"}