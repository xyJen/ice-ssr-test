import _extends from "@babel/runtime/helpers/extends";
import { Commands, environment } from '@ali/4ever-cangjie';
import { isKeyHotkey } from 'is-hotkey';
import { STICKER_NODE_TYPE } from "../constants";
var isBackspaceHotKey = isKeyHotkey('backspace');
export default function onKeyDown(event, controller, next) {
  var _controller$value = controller.value,
      document = _controller$value.document,
      data = _controller$value.data,
      selection = _controller$value.selection;
  var _stickerPanel = data._stickerPanel;

  if (_stickerPanel) {
    controller.setData(_extends({}, data, {
      _stickerPanel: false
    }));
  }

  if (!selection.isCollapsed) {
    return next();
  }

  var anchor = selection.anchor;
  var curNode = document.getNode(anchor.key);

  if (isBackspaceHotKey(event)) {
    var prevNode = document.getPreviousNode(anchor.key);
    var isAtStart = curNode && anchor.isAtStartOfNode(curNode); // @ts-ignore

    if (!environment.IS_MOBILE && isAtStart && (prevNode == null ? void 0 : prevNode.type) === STICKER_NODE_TYPE) {
      controller.command(Commands.moveAnchorBackward, 1);
    }
  }

  return next();
}
//# sourceMappingURL=onKeyDown.js.map