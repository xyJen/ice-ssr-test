{"version":3,"sources":["../../../../../src/plugins/sticker/components/stickerButton.tsx"],"names":["React","useCallback","EmojiMenuButton","ToolbarEmojiNormal","ToolbarMode","insertSticker","setStickerPanelVisible","STICKER_PLACEHOLDER_DATA","StickerButton","props","controller","locale","toolbarMode","rest","value","isDisabled","query","handleClick","run","visible","viewSize","single","icon","repeat","buttonTitle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;qBAC4B,a;AAC5B,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,aAAT,EAAwBC,sBAAxB;AACA,SAASC,wBAAT;AASA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AAAA,MACvDC,UADuD,GACVD,KADU,CACvDC,UADuD;AAAA,MAC3CC,MAD2C,GACVF,KADU,CAC3CE,MAD2C;AAAA,MACnCC,WADmC,GACVH,KADU,CACnCG,WADmC;AAAA,MACnBC,IADmB,iCACVJ,KADU;;AAAA,MAGvDK,KAHuD,GAG7CJ,UAH6C,CAGvDI,KAHuD;AAI/D,MAAMC,UAAU,GAAGL,UAAU,CAACM,KAAX,CAAiB,kBAAjB,KAAwCN,UAAU,CAACM,KAAX,CAAiB,oBAAjB,CAAxC,IAAkFN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CAArG;AACA,MAAMC,WAAW,GAAGhB,WAAW,CAAC,YAAM;AACpCS,IAAAA,UAAU,CAACQ,GAAX,CAAe,UAAf,EAA2Bb,aAAa,CAACE,wBAAD,CAAxC;AACAG,IAAAA,UAAU,CAACQ,GAAX,CACE,UADF,EAEEZ,sBAAsB,CAAC;AACrBa,MAAAA,OAAO,EAAE;AADY,KAAD,CAFxB;AAMD,GAR8B,EAQ5B,EAR4B,CAA/B;AAUA,MAAMC,QAAQ,GAAGR,WAAW,KAAKR,WAAW,CAACiB,MAA5B,GAAqC,KAArC,GAA6C,KAA9D,CAf+D,CAgB/D;;AACA,MAAMC,IAAI,gBAAG,eAAC,kBAAD;AAAoB,IAAA,OAAO,UAAQF,QAAQ,CAACG,MAAT,CAAgB,CAAhB;AAAnC,IAAb;;AAEA,sBACE,eAAC,eAAD,eACMV,IADN;AAEE,IAAA,MAAM,EAAC,oBAFT,CAGE;AAHF;AAIE,IAAA,IAAI,EAAES,IAJR;AAKE,IAAA,OAAO,EAAEX,MAAM,CAACa,WALlB;AAME,IAAA,OAAO,EAAEP,WANX;AAOE,IAAA,QAAQ,EAAEF,UAPZ;AAQE,IAAA,SAAS,EAAE,KARb;AASE,IAAA,SAAS,EAAE;AATb,KADF;AAaD","sourcesContent":["import React, { useCallback } from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { EmojiMenuButton } from '@ali/we-toolbar';\nimport { ToolbarEmojiNormal } from '@ali/we-design';\nimport { ToolbarMode } from '@ali/4ever-component';\nimport { insertSticker, setStickerPanelVisible } from '../actions';\nimport { STICKER_PLACEHOLDER_DATA } from '../constants';\n\n\nexport interface StickerButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function StickerButton(props: StickerButtonProps) {\n  const { controller, locale, toolbarMode, ...rest } = props;\n\n  const { value } = controller;\n  const isDisabled = controller.query('isDisableSticker') || controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard');\n  const handleClick = useCallback(() => {\n    controller.run('onAction', insertSticker(STICKER_PLACEHOLDER_DATA));\n    controller.run(\n      'onAction',\n      setStickerPanelVisible({\n        visible: true,\n      }),\n    );\n  }, []);\n\n  const viewSize = toolbarMode === ToolbarMode.single ? ' 20' : ' 24';\n  // @ts-ignore 组件没有 viewBox 属性\n  const icon = <ToolbarEmojiNormal viewBox={`0 0${viewSize.repeat(2)}`} />;\n\n  return (\n    <EmojiMenuButton\n      {...rest}\n      testid=\"bi-toolbar-sticker\"\n      // @ts-ignore 组件没有 icon 属性\n      icon={icon}\n      tooltip={locale.buttonTitle}\n      onClick={handleClick}\n      disabled={isDisabled}\n      autoClose={false}\n      showArrow={false}\n    />\n  );\n}\n"],"file":"stickerButton.js"}