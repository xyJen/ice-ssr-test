import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { MenuItem, InlineMenuItem } from '@ali/we-design';
import { PluginRoles } from '@ali/4ever-bamboo';
;
import { insertSticker, setStickerPanelVisible } from "../actions";
import { STICKER_PLACEHOLDER_DATA } from "../constants";

function WithStickerMenu(Component) {
  return function StickerMenu(props) {
    var menuItem = props.menuItem,
        controller = props.controller;
    var value = controller.value;

    var title = menuItem.title,
        rest = _objectWithoutPropertiesLoose(menuItem, ["title"]);

    var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
    var isDisabled = controller.query('isDisableSticker') || isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInLink') || controller.query('isSelectionInMention') || controller.query('isSelectionInLinkCard');
    var handleClick = useCallback(function () {
      controller.run('onAction', insertSticker(STICKER_PLACEHOLDER_DATA));
      controller.run('onAction', setStickerPanelVisible({
        visible: true
      }));
    }, [controller]);
    return /*#__PURE__*/_createElement(Component, _extends({}, rest, {
      disabled: isDisabled,
      onClick: handleClick,
      role: PluginRoles.sticker
    }), title || '');
  };
}

export var menu = WithStickerMenu(MenuItem);
export var inlineMenu = WithStickerMenu(InlineMenuItem);
//# sourceMappingURL=stickerMenu.js.map