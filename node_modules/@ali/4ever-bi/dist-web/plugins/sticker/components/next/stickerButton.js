import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { insertSticker, setStickerPanelVisible } from "../../actions";
import { STICKER_PLACEHOLDER_DATA } from "../../constants";
import { IconEmoji } from '@ali/4ever-component';

var _ref = /*#__PURE__*/_createElement(IconEmoji, null);

export default function createStickerButton(props) {
  var controller = props.controller,
      _props$locale = props.locale,
      locale = _props$locale === void 0 ? {} : _props$locale,
      icon = props.icon,
      title = props.title,
      tooltip = props.tooltip,
      badgeDot = props.badgeDot,
      disabled = props.disabled;

  var handleClick = function handleClick() {
    controller.run('onAction', insertSticker(STICKER_PLACEHOLDER_DATA));
    controller.run('onAction', setStickerPanelVisible({
      visible: true
    }));
  };

  var isDisabled = disabled || controller.query('isDisableSticker') || controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard');
  var buttonConfig = {
    icon: icon || _ref,
    onClick: handleClick,
    title: title || (locale == null ? void 0 : locale.quickInsertTitle),
    tooltip: _extends({
      title: title || (locale == null ? void 0 : locale.quickInsertTitle)
    }, tooltip),
    badgeDot: badgeDot,
    disabled: isDisabled,
    testid: "bi-toolbar-sticker"
  };
  return buttonConfig;
}
//# sourceMappingURL=stickerButton.js.map