{"version":3,"sources":["../../../../src/plugins/sticker/getSnippetConfig.tsx"],"names":["React","Styled","Commands","OldBambooPlugin","fuzzySearch","EmojiSpan","span","TitleSpan","getSnippetConfig","_","next","trigger","config","triggerPrefix","fetchItems","getEmojiData","emoji","Object","keys","map","key","title","prefix","value","filterItems","text","items","searchText","slice","maxResults","insertSnippet","controller","item","command","insertText","dispatch","mdType","from"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAA5B,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAA6E,oBAA7E;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,SAAS,gBAAGJ,MAAM,CAACK,IAAV,kFAAf;AAQA,IAAMC,SAAS,gBAAGN,MAAM,CAACK,IAAV,gFAAf;;AAcA,IAAME,gBAA4C,GAAG,SAA/CA,gBAA+C,CAACC,CAAD,EAAIC,IAAJ,EAAa;AAAA;;AAChE,MAAMC,OAAO,GAAG,qBAAhB;AACA,MAAMC,MAAkC,GAAG;AACzCD,IAAAA,OAAO,EAAPA,OADyC;AAEzCE,IAAAA,aAAa,EAAE,WAF0B;AAGzCC,IAAAA,UAAU;AAAA,iFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACkCX,eAAe,CAACY,YAAhB,EADlC;;AAAA;AACJC,gBAAAA,KADI;AAAA,iDAEHC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuB,UAACC,GAAD;AAAA,yBAAU;AACtCA,oBAAAA,GAAG,EAAHA,GADsC;AAEtCC,oBAAAA,KAAK,eAAE,eAAC,SAAD,aAAaD,GAAb,MAF+B;AAGtCE,oBAAAA,MAAM,eAAE,eAAC,SAAD,QAAYN,KAAK,CAACI,GAAD,CAAjB,CAH8B;AAItCG,oBAAAA,KAAK,EAAEP,KAAK,CAACI,GAAD;AAJ0B,mBAAV;AAAA,iBAAvB,CAFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAH+B;AAYzCI,IAAAA,WAAW;AAAA,kFAAE,kBAAOC,IAAP,EAAqBC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,gBAAAA,UADK,GACQF,IAAI,CAACG,KAAL,CAAW,CAAX,CADR,EAEX;;AAFW;AAAA,uBAGExB,WAAW,CAACsB,KAAD,EAAQC,UAAR,EAAoB;AAAEP,kBAAAA,GAAG,EAAE,KAAP;AAAcS,kBAAAA,UAAU,EAAE;AAA1B,iBAApB,CAHb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAZ8B;AAiBzCC,IAAAA,aAAa,EAAE,uBAACC,UAAD,EAAyBC,IAAzB,EAAkC;AAC/CD,MAAAA,UAAU,CAACE,OAAX,CAAmB/B,QAAQ,CAACgC,UAA5B,EAAwCF,IAAI,CAACT,KAA7C;AACAQ,MAAAA,UAAU,CAACI,QAAX,CAAoB,6BAApB,EAAmD;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAAnD;AACD;AApBwC,GAA3C;AAuBA,6CACG1B,OADH,IACaC,MADb,cAEKF,IAAI,EAFT;AAID,CA7BD;;AA+BA,eAAeF,gBAAf","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\nimport { Commands, Controller, Plugin, SnippetConfig, SnippetItemBase } from '@ali/4ever-cangjie';\nimport { OldBambooPlugin } from '@ali/4ever-plugin-sticker';\nimport { fuzzySearch } from '@ali/4ever-utils';\n\nconst EmojiSpan = Styled.span`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  font-size: 20px;\n  margin-right: 8px;\n`;\n\nconst TitleSpan = Styled.span`\n  display: inline-block;\n  font-size: 13px;\n  color: #111F2C;\n  .matched {\n    color: #0089FF;\n  }\n`;\n\ninterface SnippetItem extends SnippetItemBase {\n  value: string;\n}\n\n\nconst getSnippetConfig: Plugin['getSnippetConfig'] = (_, next) => {\n  const trigger = ':([^:\\\\W]|[\\+\\-])+$';\n  const config: SnippetConfig<SnippetItem> = {\n    trigger,\n    triggerPrefix: '([^:]|^)$',\n    fetchItems: async () => {\n      const emoji: Record<string, string> = await OldBambooPlugin.getEmojiData();\n      return Object.keys(emoji).map((key) => ({\n        key,\n        title: <TitleSpan>:{key}:</TitleSpan>,\n        prefix: <EmojiSpan>{emoji[key]}</EmojiSpan>,\n        value: emoji[key],\n      }));\n    },\n    filterItems: async (text: string, items: SnippetItem[]) => {\n      const searchText = text.slice(1);\n      // 性能考虑：至多筛选出 50 条\n      return await fuzzySearch(items, searchText, { key: 'key', maxResults: 50 });\n    },\n    insertSnippet: (controller: Controller, item) => {\n      controller.command(Commands.insertText, item.value);\n      controller.dispatch('createTriggerMarkdownAction', { mdType: 'emoji', from: 'snippet' });\n    },\n  };\n\n  return {\n    [trigger]: config,\n    ...next(),\n  }\n};\n\nexport default getSnippetConfig;"],"file":"getSnippetConfig.js"}