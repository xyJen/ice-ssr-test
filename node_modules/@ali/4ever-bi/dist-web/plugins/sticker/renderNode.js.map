{"version":3,"sources":["../../../../src/plugins/sticker/renderNode.tsx"],"names":["React","StickerWrapper","STICKER_NODE_TYPE","createRenderNode","PlaceHolder","sticker","props","controller","node"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAC5B,OAAOC,cAAP;AACA,SAASC,iBAAT;AAEA,eAAe,SAASC,gBAAT,OAAuCC,WAAvC,EAAoD;AAAA;;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AACjE,2BACGH,iBADH,IACuB,UAACI,KAAD,EAAiCC,UAAjC,EAAgD;AACnE,QAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;AACA,wBACE,eAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,IAAtB;AAA4B,MAAA,UAAU,EAAED,UAAxC;AAAoD,MAAA,OAAO,EAAEF,OAA7D;AAAsE,MAAA,kBAAkB,EAAED;AAA1F,MADF;AAGD,GANH;AAQD","sourcesContent":["import React from 'react';\nimport { Inline, RenderNodeProps } from '@ali/4ever-cangjie';\nimport StickerWrapper from './components/stickerWrapper';\nimport { STICKER_NODE_TYPE } from './constants';\n\nexport default function createRenderNode({ sticker }, PlaceHolder) {\n  return {\n    [STICKER_NODE_TYPE]: (props: RenderNodeProps<Inline>, controller) => {\n      const node = props.node as Inline;\n      return (\n        <StickerWrapper node={node} controller={controller} sticker={sticker} StickerPlaceholder={PlaceHolder} />\n      );\n    },\n  };\n}\n"],"file":"renderNode.js"}