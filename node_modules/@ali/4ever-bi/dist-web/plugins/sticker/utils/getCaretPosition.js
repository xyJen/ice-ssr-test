import { domUtils, Queries } from '@ali/4ever-cangjie';
var EXTRA_OFFSET_TOP = 4;
var EXTRA_OFFSET_LEFT = 2;
var EXTRA_OFFSET_RIGHT = 18;
var CARET_SCALE = 1.5;
var NARROW_GAP = 6;
/**
 * 光标位置处理。由于 void 节点内的光标无法定位，尝试获取前一个位置
 */

export function corretCaretPoint(controller) {
  var _document$getParent;

  var _controller$value = controller.value,
      selection = _controller$value.selection,
      document = _controller$value.document;
  var point = selection.getStart(document);

  if (document.getClosestVoid(point.key, controller) || ((_document$getParent = document.getParent(point.key)) == null ? void 0 : _document$getParent.type) === 'code') {
    return controller.query(Queries.pointAtDistance, point, -1);
  }

  return point;
}
var positionCache = null;
export function getCaretPosition(_ref) {
  var controller = _ref.controller,
      rect = _ref.rect,
      zoom = _ref.zoom,
      panelHeight = _ref.panelHeight,
      panelWidth = _ref.panelWidth;
  var pointCorrected = corretCaretPoint(controller);
  var position = domUtils.findCaretPosition(pointCorrected);

  if (position) {
    // @ts-ignore
    positionCache = position;
  } else {
    return positionCache;
  }

  var originLeft = (position.clientLeft - rect.left) / zoom;
  var originTop = (position.clientTop - rect.top) / zoom;
  var holderHeight = position.height / zoom;
  var rectWidth = rect.width / zoom;
  var rectHeight = rect.height / zoom;
  var left = originLeft - EXTRA_OFFSET_LEFT;
  var isAtRight = left + panelWidth > rectWidth;

  if (isAtRight) {
    left = originLeft - panelWidth + EXTRA_OFFSET_RIGHT;

    if (left < 0) {
      // 当右侧溢出且左侧也不够面板展开时，面板紧临右侧展开
      left = rectWidth - panelWidth - NARROW_GAP;
      isAtRight = false;
    }
  }

  var top = originTop + holderHeight + EXTRA_OFFSET_TOP; // 表情面板靠近底部且上部空间足够时，向上展开

  var topWhenShowUp = originTop - panelHeight - EXTRA_OFFSET_TOP * CARET_SCALE;
  var isAtBottom = top + panelHeight > rectHeight && topWhenShowUp > 0;

  if (isAtBottom) {
    top = topWhenShowUp;
  }

  return {
    left: left,
    top: top,
    isAtBottom: isAtBottom,
    isAtRight: isAtRight
  };
}
//# sourceMappingURL=getCaretPosition.js.map