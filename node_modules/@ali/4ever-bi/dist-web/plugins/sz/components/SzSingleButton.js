import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { AddFontSizeButton, ReduceFontSizeButton } from '@ali/we-toolbar';
import { PluginRoles } from '@ali/4ever-bamboo';
import { adjustSz } from "../actions";
import { SHORTCUT } from "../utils/getTipsByType";
export function SzBiggerButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var handleClick = React.useCallback(function () {
    controller.run('onAction', adjustSz(true));
  }, [controller]);
  var isDisabled = controller.query('isSelectionInLinkCard');
  return /*#__PURE__*/_createElement(AddFontSizeButton, _extends({}, rest, {
    onClick: handleClick,
    shortcutText: SHORTCUT.bigger,
    disabled: isDisabled,
    role: PluginRoles.szIncrease
  }));
}
export function SzSmallerButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var handleClick = React.useCallback(function () {
    controller.run('onAction', adjustSz(false));
  }, [controller]);
  var isDisabled = controller.query('isSelectionInLinkCard');
  return /*#__PURE__*/_createElement(ReduceFontSizeButton, _extends({}, rest, {
    onClick: handleClick,
    shortcutText: SHORTCUT.smaller,
    disabled: isDisabled,
    role: PluginRoles.szDecrease
  }));
}
//# sourceMappingURL=SzSingleButton.js.map