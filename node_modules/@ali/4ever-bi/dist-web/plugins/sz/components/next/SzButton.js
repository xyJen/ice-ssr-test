import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { isNaN, PluginRoles } from '@ali/4ever-bamboo';
import { FontSizeSelect, useDefaultSz } from '@ali/4ever-component';
;
import { setSz } from "../../actions";
export default function SzButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var defaultSz = useDefaultSz();

  var _React$useState = React.useState(undefined),
      _ = _React$useState[0],
      setSzValue = _React$useState[1];

  var sz = controller.query('getSize', defaultSz);

  if (isNaN(sz)) {
    sz = undefined;
  }

  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInLinkCard');
  var handleChange = React.useCallback(function (size) {
    controller.run('onAction', setSz(size));
    setSzValue(size);
  }, [controller]);
  return /*#__PURE__*/_createElement(FontSizeSelect, _extends({
    testid: "bi-toolbar-sz",
    disabled: isDisabled,
    value: sz,
    onChange: handleChange,
    tooltip: (locale == null ? void 0 : locale.buttonTitle) || '',
    role: PluginRoles.sz
  }, rest));
}
//# sourceMappingURL=SzButton.js.map