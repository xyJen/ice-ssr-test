{"version":3,"sources":["../../../../../src/plugins/sz/components/SzButton.tsx"],"names":["React","isNaN","PluginRoles","FontSizeSelect","NewToolbarMode","ToolbarMode","setSz","useDefaultSz","szList","SzButton","props","controller","locale","toolbarMode","rest","defaultSz","sz","query","buttonTitle","isCollapsedAtEdge","value","selection","isDisabled","isDouble","handleChange","useCallback","size","run","MemoFontSizeSelect","useMemo"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,mBAAnC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,sBAA9C;AACA,SAASC,KAAT;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAQA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAAA,MAC7CC,UAD6C,GACAD,KADA,CAC7CC,UAD6C;AAAA,MACjCC,MADiC,GACAF,KADA,CACjCE,MADiC;AAAA,MACzBC,WADyB,GACAH,KADA,CACzBG,WADyB;AAAA,MACTC,IADS,iCACAJ,KADA;;AAErD,MAAMK,SAAS,GAAGR,YAAY,EAA9B;AACA,MAAIS,EAA0B,GAAGL,UAAU,CAACM,KAAX,CAAiB,SAAjB,EAA4BF,SAA5B,CAAjC;;AACA,MAAId,KAAK,CAACe,EAAD,CAAT,EAAe;AACbA,IAAAA,EAAE,GAAGJ,MAAM,CAACM,WAAZ;AACD;;AANoD,MAO7CC,iBAP6C,GAOvBR,UAAU,CAACS,KAAX,CAAiBC,SAPM,CAO7CF,iBAP6C;AAQrD,MAAMG,UAAU,GACdH,iBAAiB,IACdR,UAAU,CAACM,KAAX,CAAiB,oBAAjB,CADH,IAEGN,UAAU,CAACM,KAAX,CAAiB,iBAAjB,CAFH,IAGGN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CAJL;AAKA,MAAMM,QAAQ,GAAGV,WAAW,KAAKR,WAAW,UAA5C;AAEA,MAAMmB,YAAY,GAAGxB,KAAK,CAACyB,WAAN,CAAkB,UAACC,IAAD;AAAA,WAAkBf,UAAU,CAACgB,GAAX,CAAe,UAAf,EAA2BrB,KAAK,CAACoB,IAAD,CAAhC,CAAlB;AAAA,GAAlB,EAA6E,CAACf,UAAD,CAA7E,CAArB;AACA,MAAMiB,kBAAkB,GAAG5B,KAAK,CAAC6B,OAAN,CAAc;AAAA,WAAM1B,cAAN;AAAA,GAAd,EAAoC,EAApC,CAA3B;AAEA,sBACE,eAAC,kBAAD;AACE,IAAA,UAAU;AADZ,KAEMW,IAFN;AAGE,IAAA,MAAM,EAAC,eAHT;AAIE,IAAA,KAAK,EAAEN,MAJT;AAKE,IAAA,QAAQ,EAAEc,UALZ,CAME;AANF;AAOE,IAAA,KAAK,OAAKN,EAPZ;AAQE,IAAA,QAAQ,EAAEQ,YARZ;AASE,IAAA,QAAQ,EAAED,QATZ;AAUE,IAAA,YAAY,EAAEX,MAAM,CAACM,WAVvB;AAWE,IAAA,IAAI,EAAEhB,WAAW,CAACc;AAXpB,KADF;AAeD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { isNaN, PluginRoles } from '@ali/4ever-bamboo';\nimport { FontSizeSelect } from '@ali/we-toolbar';\nimport { NewToolbarMode as ToolbarMode } from '@ali/4ever-component';\nimport { setSz } from '../actions';\nimport { useDefaultSz } from '@ali/4ever-component';\nimport { szList } from '@ali/4ever-plugin-sz';\n\nexport interface SzButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function SzButton(props: SzButtonProps) {\n  const { controller, locale, toolbarMode, ...rest } = props;\n  const defaultSz = useDefaultSz();\n  let sz: number | string | null = controller.query('getSize', defaultSz);\n  if (isNaN(sz)) {\n    sz = locale.buttonTitle;\n  }\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled =\n    isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInLinkCard');\n  const isDouble = toolbarMode === ToolbarMode.double;\n\n  const handleChange = React.useCallback((size: number) => controller.run('onAction', setSz(size)), [controller]);\n  const MemoFontSizeSelect = React.useMemo(() => FontSizeSelect, []);\n\n  return (\n    <MemoFontSizeSelect\n      allowInput\n      {...rest}\n      testid=\"bi-toolbar-sz\"\n      sizes={szList}\n      disabled={isDisabled}\n      // @ts-ignore 字号是 string 还是 number？\n      value={`${sz}`}\n      onChange={handleChange}\n      bordered={isDouble}\n      shortcutText={locale.buttonTitle}\n      role={PluginRoles.sz}\n    />\n  );\n}\n"],"file":"SzButton.js"}