import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { isNaN, PluginRoles } from '@ali/4ever-bamboo';
import { FontSizeSelect } from '@ali/we-toolbar';
import { setSz } from "../actions";
import { useDefaultSz } from '@ali/4ever-component';
import styled from 'styled-components';
var MemoFontSizeSelect = /*#__PURE__*/React.memo(FontSizeSelect);
var Wrapper = /*#__PURE__*/styled.div([".select_trigger_wrap .select_left_wrap{font-size:1}"]);
var style = {
  fontSize: 14.5,
  minWidth: 25
};
export var szList = [9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 42, 48, 72];
export default function SzSimpleButton(props) {
  var controller = props.controller,
      locale = props.locale,
      toolbarMode = props.toolbarMode,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale", "toolbarMode"]);

  var defaultSz = useDefaultSz();
  var sz = controller.query('getSize', defaultSz);

  if (isNaN(sz)) {
    sz = locale.buttonTitle;
  }

  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInLinkCard');
  var handleChange = React.useCallback(function (size) {
    return controller.run('onAction', setSz(size));
  }, [controller]);
  return /*#__PURE__*/_createElement(Wrapper, null, /*#__PURE__*/_createElement(MemoFontSizeSelect, _extends({
    allowInput: false
  }, rest, {
    testid: "bi-toolbar-sz",
    sizes: szList,
    disabled: isDisabled // @ts-ignore 字号是 string 还是 number？
    ,
    value: "" + sz,
    onChange: handleChange,
    bordered: false,
    shortcutText: locale.buttonTitle,
    style: style,
    role: PluginRoles.szSelect
  })));
}
//# sourceMappingURL=SzSimpleButton.js.map