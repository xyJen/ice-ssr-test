{"version":3,"sources":["../../../../src/plugins/sz/createRenderToolbar.tsx"],"names":["React","ItemKey","ItemSlot","SlotType","FontSizeSelectSingleLineDefaultWidth","createSzBiggerButton","createSzSmallerButton","SzButton","createButtons","buttons","createRenderToolbar","locale","props","controller","buttonName","extraProps","createButton","sz","textSelect"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAsEC,OAAtE,EAA+EC,QAA/E,EAAyFC,QAAzF,EAAmGC,oCAAnG,QAA+I,sBAA/I;AACA,SAASC,oBAAT,EAA+BC,qBAA/B;AACA,OAAOC,QAAP;AAEA,IAAMC,aAA6H,GAAG;AACpI,eAAaH,oBADuH;AAEpI,gBAAcC;AAFsH,CAAtI;AAKA,IAAMG,OAAwG,GAAG;AAC/G,QAAMF;AADyG,CAAjH;AAIA,eAAe,SAASG,mBAAT,CACbC,MADa,EAEE;AAEf,SAAO,UAACC,KAAD,EAAQC,UAAR,EAAuB;AAAA,QAEpBC,UAFoB,GAEOF,KAFP,CAEpBE,UAFoB;AAAA,QAERC,UAFQ,GAEOH,KAFP,CAERG,UAFQ;AAI5B,QAAMC,YAAY,GAAGR,aAAa,CAACM,UAAD,CAAlC;;AAEA,QAAIE,YAAJ,EAAkB;AAChB,aAAOA,YAAY;AACjBH,QAAAA,UAAU,EAAVA,UADiB;AAEjBF,QAAAA,MAAM,EAANA;AAFiB,SAGdI,UAHc,EAAnB;AAKD;;AACD,YAAQD,UAAR;AACE,WAAKb,OAAO,CAACgB,EAAb;AAEE,4BACE,eAAC,QAAD;AAAU,UAAA,OAAO,EAAEd,QAAQ,CAACe,UAA5B;AAAwC,UAAA,KAAK,EAAEd;AAA/C,wBACE,eAAC,QAAD;AACE,UAAA,UAAU,EAAES,UADd;AAEE,UAAA,MAAM,EAAEF;AAFV,WAGMI,UAHN,EADF,CADF;;AAWF;AACE;AAfJ;;AAmBA,WAAO,IAAP;AACD,GAjCD;AAkCD","sourcesContent":["import * as React from 'react';\nimport { RenderToolbar, ItemKeys, IBasicButton, IToolbarButtonConfig, ItemKey, ItemSlot, SlotType, FontSizeSelectSingleLineDefaultWidth } from '@ali/4ever-component';\nimport { createSzBiggerButton, createSzSmallerButton, SzButtonProps } from './components/next/SzSingleButton';\nimport SzButton from './components/next/SzButton';\n\nconst createButtons: Partial<Record<ItemKeys, ((props: SzButtonProps) => IBasicButton | React.ReactElement<IToolbarButtonConfig>)>> = {\n  'sz.bigger': createSzBiggerButton,\n  'sz.smaller': createSzSmallerButton,\n}\n\nconst buttons: Partial<Record<ItemKeys, ((props: SzButtonProps) => React.ReactElement<IToolbarButtonConfig>)>> = {\n  'sz': SzButton,\n}\n\nexport default function createRenderToolbar(\n  locale: Record<string, string>,\n): RenderToolbar {\n\n  return (props, controller) => {\n\n    const { buttonName, extraProps } = props;\n\n    const createButton = createButtons[buttonName];\n\n    if (createButton) {\n      return createButton({\n        controller,\n        locale,\n        ...extraProps,\n      })\n    }\n    switch (buttonName) {\n      case ItemKey.sz:\n\n        return (\n          <ItemSlot display={SlotType.textSelect} width={FontSizeSelectSingleLineDefaultWidth}>\n            <SzButton\n              controller={controller}\n              locale={locale}\n              {...extraProps}\n            />\n          </ItemSlot>\n\n        )\n\n      default:\n        break;\n    }\n\n\n    return null\n  };\n}\n"],"file":"createRenderToolbar.js"}