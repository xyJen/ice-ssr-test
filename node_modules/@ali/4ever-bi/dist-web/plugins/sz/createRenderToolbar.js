import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { ItemKey, ItemSlot, SlotType, FontSizeSelectSingleLineDefaultWidth } from '@ali/4ever-component';
import { createSzBiggerButton, createSzSmallerButton } from "./components/next/SzSingleButton";
import SzButton from "./components/next/SzButton";
var createButtons = {
  'sz.bigger': createSzBiggerButton,
  'sz.smaller': createSzSmallerButton
};
var buttons = {
  'sz': SzButton
};
export default function createRenderToolbar(locale) {
  return function (props, controller) {
    var buttonName = props.buttonName,
        extraProps = props.extraProps;
    var createButton = createButtons[buttonName];

    if (createButton) {
      return createButton(_extends({
        controller: controller,
        locale: locale
      }, extraProps));
    }

    switch (buttonName) {
      case ItemKey.sz:
        return /*#__PURE__*/_createElement(ItemSlot, {
          display: SlotType.textSelect,
          width: FontSizeSelectSingleLineDefaultWidth
        }, /*#__PURE__*/_createElement(SzButton, _extends({
          controller: controller,
          locale: locale
        }, extraProps)));

      default:
        break;
    }

    return null;
  };
}
//# sourceMappingURL=createRenderToolbar.js.map