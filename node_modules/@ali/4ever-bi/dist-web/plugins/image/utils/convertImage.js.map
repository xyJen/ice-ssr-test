{"version":3,"sources":["../../../../../src/plugins/image/utils/convertImage.ts"],"names":["isMobileSafari","test","navigator","userAgent","isNativeSupport","document","createElement","style","Orientations","orientationToAngle","orientation","String","getStringFromCharCode","dataView","start","length","str","i","fromCharCode","getUint8","getOrientation","buffer","DataView","byteLength","exifIDCode","tiffOffset","firstIFDOffset","littleEndian","endianness","app1Start","ifdStart","offset","getUint16","getUint32","e","loadBuffer","url","fetch","credentials","mode","redirect","res","arrayBuffer","loadImage","Promise","resolve","reject","image","Image","addEventListener","err","imageOrientation","src","canvasToBlob","canvas","toBlob","blob","createObjectURL","ArrayBuffer","Blob","type","URL","rotateImage","imageFile","angle","localURL","isRightRngle","Math","abs","oldWidth","width","oldHeight","height","window","screen","maxWidth","maxHeight","ratioX","ratioY","ratio","min","ctx","getContext","translate","rotate","PI","drawImage","revokeObjectURL","File","name"],"mappings":"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","sourcesContent":["export function isMobileSafari() {\n  return /(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent);\n}\n\nexport function isNativeSupport() {\n  return (\n    isMobileSafari() ||\n    \"imageOrientation\" in document.createElement(\"image\").style\n  );\n}\n\nexport type OrientationType = 1 | 3 | 6 | 8;\n\nexport const Orientations: { [name: string]: number } = {\n  [\"1\"]: 0,\n  [\"3\"]: 180,\n  [\"6\"]: 90,\n  [\"8\"]: -90\n};\n\nexport function orientationToAngle(orientation: OrientationType) {\n  return Orientations[String(orientation)] || 0;\n}\n\nexport function getStringFromCharCode(\n  dataView: DataView,\n  start: number,\n  length: number\n) {\n  let str = \"\",\n    i;\n  for (i = start, length += start; i < length; i++) {\n    str += String.fromCharCode(dataView.getUint8(i));\n  }\n  return str;\n}\n\nexport function getOrientation(buffer: ArrayBuffer): OrientationType {\n  if (isNativeSupport()) {\n    return 1;\n  }\n  const dataView = new DataView(buffer);\n  let length = dataView.byteLength;\n  let orientation;\n  let exifIDCode;\n  let tiffOffset;\n  let firstIFDOffset;\n  let littleEndian;\n  let endianness;\n  let app1Start;\n  let ifdStart;\n  let offset;\n  let i;\n  try {\n    // Only handle JPEG image (start by 0xFFD8)\n    if (dataView.getUint8(0) === 0xff && dataView.getUint8(1) === 0xd8) {\n      offset = 2;\n      while (offset < length) {\n        if (\n          dataView.getUint8(offset) === 0xff &&\n          dataView.getUint8(offset + 1) === 0xe1\n        ) {\n          app1Start = offset;\n          break;\n        }\n        offset++;\n      }\n    }\n    if (app1Start) {\n      exifIDCode = app1Start + 4;\n      tiffOffset = app1Start + 10;\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === \"Exif\") {\n        endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n        if (littleEndian || endianness === 0x4d4d /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002a) {\n            firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n      }\n    }\n    if (ifdStart) {\n      length = dataView.getUint16(ifdStart, littleEndian);\n      for (i = 0; i < length; i++) {\n        offset = ifdStart + i * 12 + 2;\n        if (\n          dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */\n        ) {\n          // 8 is the offset of the current tag's value\n          offset += 8;\n          // Get the original orientation value\n          orientation = dataView.getUint16(offset, littleEndian);\n          break;\n        }\n      }\n    }\n    return orientation as OrientationType;\n  } catch (e) {\n    return 1;\n  }\n}\n\nexport async function loadBuffer(url: string) {\n  const res = await fetch(url, {\n    credentials: \"same-origin\",\n    mode: \"cors\",\n    redirect: \"follow\"\n  });\n  return res.arrayBuffer();\n}\n\nexport function loadImage(url: string) {\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", err => reject(err));\n    image.style.imageOrientation = \"from-image\";\n    image.src = url;\n  });\n}\n\nexport function canvasToBlob(canvas: HTMLCanvasElement) {\n  return new Promise<Blob>(resolve => {\n    canvas.toBlob(blob => resolve(blob));\n  });\n}\n\nexport function createObjectURL(blob: ArrayBuffer | Blob) {\n  if (blob instanceof ArrayBuffer) {\n    blob = new Blob([blob], { type: \"image/jpeg\" });\n  }\n  return URL.createObjectURL(blob);\n}\n\nexport async function rotateImage(\n  imageFile: File,\n  angle: number,\n) {\n  if (!angle || angle === 0) {\n    return imageFile;\n  }\n  const localURL = createObjectURL(imageFile);\n  const image = await loadImage(localURL);\n  const isRightRngle = Math.abs(angle) === 90;\n  const { width: oldWidth, height: oldHeight } = image;\n  const { width: maxWidth, height: maxHeight } = window.screen;\n  const ratioX = oldWidth > maxWidth ? maxWidth / oldWidth : 1;\n  const ratioY = oldHeight > maxHeight ? maxHeight / oldHeight : 1;\n  const ratio = Math.min(ratioX, ratioY);\n  const width = (isRightRngle ? oldHeight : oldWidth) * ratio;\n  const height = (isRightRngle ? oldWidth : oldHeight) * ratio;\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = width;\n  canvas.height = height;\n  ctx.translate(width / 2, height / 2);\n  ctx.rotate((angle * Math.PI) / 180);\n  if (isRightRngle) {\n    ctx.drawImage(image, -height / 2, -width / 2, height, width);\n  } else {\n    ctx.drawImage(image, -width / 2, -height / 2, width, height);\n  }\n  const blob = await canvasToBlob(canvas);\n  URL.revokeObjectURL(localURL);\n  return new File([blob], imageFile.name, { type: 'image/jpeg' });\n}\n"],"file":"convertImage.js"}