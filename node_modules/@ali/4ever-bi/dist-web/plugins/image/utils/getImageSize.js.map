{"version":3,"sources":["../../../../../src/plugins/image/utils/getImageSize.ts"],"names":["calcImageSize","getImageSize","src","controller","Promise","resolve","reject","img","Image","onload","width","height","onerror"],"mappings":"AACA,OAAOA,aAAP;;AAIA,IAAMC,YAA+B,GAAG,SAAlCA,YAAkC,CAACC,GAAD,EAAMC,UAAN,EAAqB;AAC3D,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa;AAAA,aAAMJ,OAAO,CAACL,aAAa,CAACO,GAAG,CAACG,KAAL,EAAYH,GAAG,CAACI,MAAhB,EAAwBR,UAAxB,CAAd,CAAb;AAAA,KAAb;;AACAI,IAAAA,GAAG,CAACK,OAAJ,GAAc;AAAA,aAAMN,MAAM,EAAZ;AAAA,KAAd;;AACAC,IAAAA,GAAG,CAACL,GAAJ,GAAUA,GAAV;AACD,GALM,CAAP;AAMD,CAPD;;AASA,eAAeD,YAAf","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport calcImageSize from './calcImageSize';\n\ntype IGetImageSizeType = (src: string, controller: Controller) => Promise<ReturnType<typeof calcImageSize>>;\n\nconst getImageSize: IGetImageSizeType = (src, controller) => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(calcImageSize(img.width, img.height, controller));\n    img.onerror = () => reject();\n    img.src = src;\n  });\n};\n\nexport default getImageSize;\n"],"file":"getImageSize.js"}