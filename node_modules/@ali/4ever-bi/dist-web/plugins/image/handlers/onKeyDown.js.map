{"version":3,"sources":["../../../../../src/plugins/image/handlers/onKeyDown.ts"],"names":["isKeyHotkey","setInjection","isEnter","isEscape","onKeyDown","event","controller","next","value","injections","focusInline","type","croppingImage","find","inj","key","data","isImageCropping","preventDefault"],"mappings":"AAEA,SAASA,WAAT,QAA4B,WAA5B;AACA,OAAOC,YAAP;AAEA,IAAMC,OAAO,GAAGF,WAAW,CAAC,OAAD,CAA3B;AACA,IAAMG,QAAQ,GAAGH,WAAW,CAAC,QAAD,CAA5B;AAEA,eAAe,SAASI,SAAT,CAAmBC,KAAnB,EAA+CC,UAA/C,EAAuEC,IAAvE,EAA6E;AAAA,0BACtDD,UAAU,CAACE,KAD2C;AAAA,MAClFC,UADkF,qBAClFA,UADkF;AAAA,MACtEC,WADsE,qBACtEA,WADsE;;AAG1F,MAAI,EAAEA,WAAW,IAAIA,WAAW,CAACC,IAAZ,KAAqB,OAAtC,CAAJ,EAAoD;AAClD,WAAOJ,IAAI,EAAX;AACD;;AAED,MAAIL,OAAO,CAACG,KAAD,CAAP,IAAkBF,QAAQ,CAACE,KAAD,CAA9B,EAAuC;AACrC,QAAMO,aAAa,GAAGH,UAAU,CAACI,IAAX,CAAgB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,GAAJ,KAAYL,WAAW,CAACK,GAA5B;AAAA,KAAnB,CAAtB;;AACA,QAAIH,aAAa,IAAIA,aAAa,CAACI,IAAd,CAAmBC,eAAxC,EAAyD;AACvDhB,MAAAA,YAAY,CAACK,UAAD,EAAaI,WAAb,EAA0B;AACpCO,QAAAA,eAAe,EAAE;AADmB,OAA1B,CAAZ;AAGAZ,MAAAA,KAAK,CAACa,cAAN;AACA,aAAOZ,UAAP;AACD;AACF;;AACD,SAAOC,IAAI,EAAX;AACD","sourcesContent":["\nimport { Controller } from '@ali/4ever-cangjie';\nimport { isKeyHotkey } from 'is-hotkey';\nimport setInjection from '../commands/setInjection';\n\nconst isEnter = isKeyHotkey('enter');\nconst isEscape = isKeyHotkey('escape');\n\nexport default function onKeyDown(event: React.KeyboardEvent, controller: Controller, next) {\n  const { injections, focusInline } = controller.value;\n\n  if (!(focusInline && focusInline.type === 'image')) {\n    return next();\n  }\n\n  if (isEnter(event) || isEscape(event)) {\n    const croppingImage = injections.find(inj => inj.key === focusInline.key);\n    if (croppingImage && croppingImage.data.isImageCropping) {\n      setInjection(controller, focusInline, {\n        isImageCropping: false,\n      });\n      event.preventDefault();\n      return controller;\n    }\n  }\n  return next();\n}\n"],"file":"onKeyDown.js"}