{"version":3,"sources":["../../../../../src/plugins/image/handlers/onAction.ts"],"names":["ImagePlugin","Injection","Commands","IMAGE_UPDATE","IMAGE_REMOVE","IMAGE_SELECT","IMAGE_SET_INJECTION","TOGGLE_IMAGE_SIDEBAR","removeInlineImage","defaultSelectImage","createOnAction","config","imageConfig","image","sideBarTrigger","onAction","action","controller","next","type","payload","selectImage","then","file","command","node","data","container","updateInlineImage","key","injections","value","curInjection","find","inj","injection","create","setInjections","filter","toggle","callback","open","locale","options","moveToStartOfNode","focus","flush"],"mappings":"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","sourcesContent":["import { ImagePlugin } from '@ali/4ever-bamboo';\nimport { Plugin, Injection, Commands } from '@ali/4ever-cangjie';\nimport { BiPluginConfig } from '../../../types';\nimport { IMAGE_UPDATE, IMAGE_REMOVE, IMAGE_SELECT, IMAGE_SET_INJECTION, TOGGLE_IMAGE_SIDEBAR, INSERT_IMAGE_PLACEHOLDER } from '../actions';\nimport type { ToggleImageSidebarPayload } from '../actions';\nimport removeInlineImage from '../commands/removeInlineImage';\nimport defaultSelectImage from '../utils/selectImage';\n\nexport default function createOnAction(\n  config: BiPluginConfig,\n): Plugin['onAction'] {\n  const { image: imageConfig, sideBarTrigger } = config;\n  return function onAction(action, controller, next) {\n    const { type, payload } = action;\n    if (type === IMAGE_SELECT) {\n      const { selectImage = defaultSelectImage } = imageConfig;\n      selectImage().then((file) => {\n        if (file) {\n          controller.command('insertImageFile', file);\n        }\n      });\n    }\n    if (type === IMAGE_UPDATE) {\n      const { node, data, container } = payload!;\n      return ImagePlugin.updateInlineImage(controller, node, data, container);\n    }\n    if (type === IMAGE_REMOVE) {\n      const { node } = payload!;\n      return removeInlineImage(controller, node);\n    }\n    if (type === IMAGE_SET_INJECTION) {\n      const { key, data } = payload!;\n      const { injections } = controller.value;\n      const curInjection = injections.find(inj => inj.key === key) || {} as Injection;\n      const injection = Injection.create({\n        key,\n        data: {\n          ...(curInjection.data || {}),\n          ...data,\n        },\n      });\n\n      controller.setInjections([\n        ...injections.filter(inj => inj.key !== key),\n        injection,\n      ]);\n    }\n    if (type === TOGGLE_IMAGE_SIDEBAR) {\n      const { node, toggle, callback } = payload as ToggleImageSidebarPayload;\n      // NOTE: 目前 sidebar 未实现 close 方法\n      if (toggle) {\n        sideBarTrigger?.open('image.imageOptions', imageConfig?.locale?.options || 'Image Options');\n        if (node) {\n          controller.command(Commands.moveToStartOfNode, node).command(Commands.focus);\n          if (callback) {\n            callback(controller);\n          }\n          controller.flush();\n        }\n      }\n      return controller;\n    }\n\n    return next();\n  };\n}\n"],"file":"onAction.js"}