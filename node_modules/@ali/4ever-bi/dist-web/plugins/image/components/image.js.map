{"version":3,"sources":["../../../../../src/plugins/image/components/image.tsx"],"names":["React","ReactDOM","throttle","isEqual","isEmpty","omit","classnames","ResizeObserver","useZoom","useZoomContainer","useSelectionData","useHover","ImagePlugin","PcContextMenu","useScrollableContent","sanitizeUrl","getBoundingRelativeRect","normalizeAngle","getData","updateImage","setImageInjection","selectImage","ImageEditor","ImageCrop","ImageInlineToolbar","ImgContent","ImgMeta","Img","isComplexImg","isNodeInTable","isValidSize","closeContextMenu","THROTTLE_PREVIEW_TIME","IS_EMPTY_IGNORE_PROPS","isImageRectChanged","prevData","data","width","height","rotation","rectClip","outline","prevWidth","prevHeight","prevRotation","prevRectClip","prevOutline","Image","getDerivedStateFromProps","props","state","isSelected","node","isRectUpdating","newIsCanPreview","isCanPreview","undefined","newUpdate","isUpdating","image","ref","isFirstLoad","frameId","updatingEndFrameId","updateMaxWidthFrameId","isFocusedBeforeClick","resizeObserver","prevMaxWidth","getPortalPosition","scale","zoomContainer","current","left","right","rect","top","setIsLoaded","isLoaded","setState","getZoomContainer","getScrollableContent","scrollableContent","window","document","body","onEnterCroppingMode","e","preventDefault","stopPropagation","controller","run","key","isImageCropping","onExitCroppingMode","onEnterRotationMode","isRotating","onEnterResizingMode","isResizing","exitRotationMode","cb","getImageContainer","handleChangeSize","l","r","t","b","Number","bottom","handleRotate","container","handleInlineToolbarRotate","newRotation","handleInlineToolbarRotateAntiClockwise","getUploadProgress","src","uploadPercent","getCursor","imageConfig","previewImage","isFocused","value","shouldShowToolbar","handlePreviewImage","isSelectingNode","query","throttleHandlePreviewImage","handleLoad","pluginState","url","startsWith","URL","revokeObjectURL","handleContextMenu","event","handleImgClick","isParentClickable","handleImgDoubleClick","handleMouseDown","handleMouseEnter","isHovering","handleMouseLeave","handleMouseOver","onMouseOver","getImgRectData","isComplex","isValid","position","fixedOutline","renderImgWidth","clientWidth","renderImgHeight","clientHeight","renderVisibleWidth","renderContainerWidth","renderContainerHeight","renderVisibleHeight","getImgRef","renderImage","children","attributes","isTransferring","maxWidth","renderExtraNode","isBlurred","uploadProgress","normalizeRotation","transformedSrc","calcSrc","isImageSelected","isHover","isCropping","createPortal","visibility","userSelect","isTesting","getIsAutoFit","createRef","disableStretchMode","isInTable","disableStretch","isAutoFit","initResizeObserver","getMaxWidthContainer","maxWidthContainer","updateMaxWidth","requestAnimationFrame","observerCallback","entries","entry","contentRect","observe","componentDidMount","componentDidUpdate","prevProps","prevState","prevPluginState","cancelAnimationFrame","componentWillUnmount","disconnect","imageManager","protocolAllowList","renderSrc","getTransformedURL","selection","isCollapsed","isSettingBorder","renderInlineToolbar","showToolbar","downloadImage","locale","customToolbars","inlineToolbarMore","realInlineLayout","hasInlineToolbar","Array","isArray","length","render","disableInlineToolbar","Component","Container","useImageManager","useState","setSelected","hoverHandlers","handlePendingSelectionChange","useCallback","anchor","isPendingSelected","hasNode","selectionData$","placeholder","enablePending"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-find-dom-node */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { throttle, isEqual, isEmpty, omit } from 'lodash-es';\nimport classnames from 'classnames';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { Inline, useZoom, useZoomContainer, useSelectionData, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { useHover } from '@ali/4ever-component';\nimport {\n  ImagePlugin,\n  PcContextMenu,\n  useScrollableContent,\n} from '@ali/4ever-bamboo';\nimport { sanitizeUrl, getBoundingRelativeRect, normalizeAngle, getData } from '@ali/4ever-utils';\nimport { ImageData } from '@ali/4ever-mo';\nimport { updateImage, setImageInjection, selectImage } from '../actions';\nimport ImageEditor from './imageEditor';\nimport ImageCrop from './imageCrop';\nimport ImageInlineToolbar from './ImageInlineToolbar';\nimport { IImageData, ImagePluginConfig } from '../types';\nimport { ImgContent, ImgMeta } from './styled';\n\nconst {\n  Img,\n  isComplexImg,\n  isNodeInTable,\n  isValidSize,\n} = ImagePlugin;\n\nconst { closeContextMenu } = PcContextMenu;\n\nconst THROTTLE_PREVIEW_TIME = 400;\nconst IS_EMPTY_IGNORE_PROPS = ['uuid'];\n\ninterface IOwnProps extends RenderNodeProps<Inline>{\n  pluginState: any;\n  imageConfig?: ImagePluginConfig;\n}\n\ninterface IProps extends IOwnProps {\n  scrollableContent: HTMLElement | null;\n  zoomContainer: HTMLElement | null;\n  scale: number;\n  imageManager: ImagePlugin.ImageManager | null;\n  // TODO: @淼淼 hoverToolbar 全量后移除\n  disableInlineToolbar: boolean;\n  onMouseOver: React.MouseEventHandler;\n}\n\ninterface IState {\n  isRotating: boolean;\n  isResizing: boolean;\n  isHovering: boolean;\n  isTransferring: boolean;\n  isLoaded: boolean;\n  isCanPreview: boolean;\n  isUpdating: boolean;\n  prevData: ImageData;\n  maxWidth?: number | string;\n}\n\nfunction isImageRectChanged(prevData: ImageData, data: ImageData) {\n  const { width, height, rotation, rectClip, outline } = data;\n  const { width: prevWidth, height: prevHeight, rotation: prevRotation, rectClip: prevRectClip, outline: prevOutline } = prevData;\n  return width !== prevWidth\n    || height !== prevHeight\n    || rotation !== prevRotation\n    || !isEqual(rectClip, prevRectClip)\n    || outline?.width !== prevOutline?.width;\n}\n\nclass Image extends React.Component<IProps, IState> {\n  static getDerivedStateFromProps(props: IProps, state: IState): Partial<IState> | null {\n    const { isSelected, node } = props;\n    const isRectUpdating = isImageRectChanged(state.prevData, node.data);\n    if (!isSelected || isRectUpdating) {\n      const newIsCanPreview = !isSelected ? {\n        isCanPreview: false,\n      } : undefined;\n      const newUpdate = isRectUpdating ? {\n        isUpdating: true,\n        prevData: node.data,\n      } : undefined;\n      return {\n        ...newIsCanPreview,\n        ...newUpdate,\n      };\n    }\n    return null;\n  }\n\n  image: React.RefObject<HTMLImageElement>;\n\n  ref: React.RefObject<HTMLElement>;\n\n  isFirstLoad: boolean;\n\n  private frameId = -1;\n\n  private updatingEndFrameId = -1;\n\n  private updateMaxWidthFrameId = -1;\n\n  private isFocusedBeforeClick = false;\n\n  private resizeObserver: ResizeObserver | null = null;\n\n  private prevMaxWidth?: number;\n\n  constructor(props: IProps) {\n    super(props);\n\n    const { pluginState, isSelected, node, imageConfig } = props;\n    this.state = {\n      isRotating: false,\n      isResizing: false,\n      isHovering: false,\n      isTransferring: pluginState && pluginState.isTransferring,\n      // @ts-ignore\n      isLoaded: !!imageConfig?.isTesting,\n      isCanPreview: isSelected,\n      // 解决图片编辑后，编辑框未更新或编辑框闪烁更新\n      // 原因: 由于自适应后图片编辑后的尺寸不一定与编辑结束时一致，Image Editor 需要感知图片实际 render 的尺寸，但是可能传入未渲染完成的 render size，造成编辑框未更新。\n      // 解法1：在本组件的 componentDidUpdate 中，更新render size state时加上延时，可以解决未更新的问题，但是编辑框会闪烁。\n      // 解法2：增加 isUpdating state，默认为 false，在resize 和 旋转结束、更新图片时设置 isUpdating 为 true，紧接着延时设置为 false（预期渲染完毕）\n      // ，触发render，由于在 isUpdating = true 时不会渲染编辑框，因此不会出现编辑框闪烁的问题。\n      isUpdating: false,\n      prevData: node.data,\n      maxWidth: this.getIsAutoFit() ? '100%' : undefined,\n    };\n    this.image = React.createRef();\n    this.ref = React.createRef();\n    this.isFirstLoad = true;\n  }\n\n  getIsAutoFit() {\n    const { node, controller, imageConfig } = this.props;\n    const { disableStretchMode } = imageConfig || {};\n    const isInTable = isNodeInTable(node, controller.value.document);\n    const disableStretch = typeof disableStretchMode === 'function' && disableStretchMode();\n    const isAutoFit = !disableStretch || isInTable;\n    return isAutoFit;\n  }\n\n  getPortalPosition = () => {\n    const { scale, zoomContainer } = this.props;\n    if (!this.ref.current) {\n      return {\n        left: -9999,\n        right: -9999,\n      };\n    }\n    const rect = getBoundingRelativeRect(this.ref.current, zoomContainer);\n    const left = rect.left / scale;\n    const top = rect.top / scale;\n\n    return {\n      left,\n      top,\n    };\n  };\n\n  initResizeObserver() {\n    const { imageConfig = {}, controller, node } = this.props;\n    const { getMaxWidthContainer } = imageConfig;\n    const maxWidthContainer = getMaxWidthContainer && getMaxWidthContainer(node, controller.value.document);\n    if (!maxWidthContainer) {\n      return;\n    }\n    const updateMaxWidth = throttle(() => {\n      this.updateMaxWidthFrameId = window.requestAnimationFrame(() => {\n        const maxWidth = maxWidthContainer.clientWidth;\n        this.setState({\n          maxWidth: maxWidth || '100%',\n        });\n      });\n    }, 200);\n\n    const observerCallback = (entries) => {\n      for (const entry of entries) {\n        if (this.prevMaxWidth !== entry.contentRect.width) {\n          updateMaxWidth();\n          this.prevMaxWidth = entry.contentRect.width;\n        }\n      }\n    };\n\n    this.resizeObserver = new ResizeObserver(observerCallback);\n    this.resizeObserver.observe(maxWidthContainer);\n  }\n\n  componentDidMount() {\n    if (this.getIsAutoFit()) {\n      this.initResizeObserver();\n    }\n  }\n\n  componentDidUpdate(prevProps: IProps, prevState: IState) {\n    const { pluginState } = this.props;\n    const prevPluginState = prevProps.pluginState;\n    const { isTransferring } = pluginState;\n    if (prevPluginState.isTransferring !== isTransferring) {\n      this.setState({\n        isTransferring,\n      });\n    }\n    if (this.state.isUpdating && this.state.prevData && this.state.prevData !== prevState.prevData) {\n      window.cancelAnimationFrame(this.updatingEndFrameId);\n      this.updatingEndFrameId = window.requestAnimationFrame(() => {\n        this.setState({\n          isUpdating: false,\n          isResizing: false,\n          isRotating: false,\n        });\n      });\n    }\n\n    // preview 功能等待一个 frame 周期，防止 mousedown 提前更新导致的单击进入预览的问题\n    if (this.props.isSelected && !this.state.isCanPreview) {\n      this.frameId = window.requestAnimationFrame(() => {\n        this.setState({\n          isCanPreview: true,\n        });\n      });\n    }\n    if (!this.props.isSelected && prevProps.isSelected) {\n      this.state.isResizing && this.setState({\n        isResizing: false,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.frameId);\n    window.cancelAnimationFrame(this.updatingEndFrameId);\n    window.cancelAnimationFrame(this.updateMaxWidthFrameId);\n    this.resizeObserver && this.resizeObserver.disconnect();\n    const { url } = this.props.pluginState || {};\n    if (url && (url as string).startsWith('blob:')) {\n      URL.revokeObjectURL(url);\n    }\n  }\n\n  setIsLoaded = (isLoaded: boolean) => {\n    this.setState({\n      isLoaded,\n    });\n  };\n\n  calcSrc(src) {\n    if (src === null) return null;\n\n    if (!src) {\n      const { pluginState } = this.props;\n      const { url } = pluginState || {};\n      return url;\n    }\n\n    const { imageManager, imageConfig = {} } = this.props;\n    const { protocolAllowList } = imageConfig;\n    const renderSrc = imageManager?.getTransformedURL(src) || src;\n    return sanitizeUrl(renderSrc, protocolAllowList);\n  }\n\n  getZoomContainer = () => {\n    const { zoomContainer } = this.props;\n    return zoomContainer;\n  };\n\n  getScrollableContent = () => {\n    return this.props.scrollableContent || window.document.body;\n  };\n\n  shouldShowToolbar() {\n    const { controller, isSelected } = this.props;\n    return !this.isCropping()\n      && isSelected\n      && controller.value.selection.isCollapsed;\n  }\n\n  isCropping() {\n    const { node } = this.props;\n    return node.data.isImageCropping;\n  }\n\n  isSettingBorder() {\n    const { node } = this.props;\n    return node.data.isSettingBorder;\n  }\n\n  isRotating() {\n    const { isRotating } = this.state;\n    const { node } = this.props;\n    const { width, height } = node.data;\n    return (\n      isRotating && typeof width === 'number' && typeof height === 'number'\n    );\n  }\n\n  onEnterCroppingMode = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { controller, node } = this.props;\n    controller.run(\n      'onAction',\n      setImageInjection(node.key, {\n        isImageCropping: true,\n      }),\n    );\n  };\n\n  onExitCroppingMode = () => {\n    const { controller, node } = this.props;\n    controller.run(\n      'onAction',\n      setImageInjection(node.key, {\n        isImageCropping: false,\n      }),\n    );\n  };\n\n  onEnterRotationMode = () => {\n    this.setState({\n      isRotating: true,\n    });\n  };\n\n  onEnterResizingMode = () => {\n    this.setState({\n      isResizing: true,\n    });\n  };\n\n  exitRotationMode = (cb?: () => void) => {\n    this.setState({\n      isRotating: false,\n    }, cb);\n  };\n\n  getImageContainer = () => {\n    return this.ref.current;\n  };\n\n  /**\n   * 调整图片的宽度、高度\n   */\n  handleChangeSize = (width, height, l = 0, r = 0, t = 0, b = 0) => {\n    width = Number(width);\n    height = Number(height);\n\n    if (typeof width !== 'number' || typeof height !== 'number') return;\n\n    const { node, controller } = this.props;\n    const data: IImageData = {\n      width,\n      height,\n    };\n    if (l || t || r || b) {\n      data.rectClip = {\n        left: l,\n        right: r,\n        top: t,\n        bottom: b,\n      };\n    }\n\n    const { rotation } = node.data;\n    if (typeof rotation !== 'number') {\n      data.rotation = 0;\n    }\n\n    controller.run('onAction', updateImage(node, data));\n    this.setState({\n      isResizing: false,\n    });\n  };\n\n  handleRotate = (rotation, cb?: () => void) => {\n    // 旋转同时会设置高宽，以方便排版等计算\n    const { node, controller } = this.props;\n    const { width, height } = node.data;\n    const container = this.getZoomContainer();\n    if (rotation !== null) {\n      rotation = normalizeAngle(rotation, true);\n      controller.run(\n        'onAction',\n        updateImage(node, {\n          rotation,\n          width,\n          height,\n        }, container),\n      );\n    }\n    this.exitRotationMode(cb);\n  };\n\n  handleInlineToolbarRotate = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { node } = this.props;\n    const rotation = getData(node.data, 'rotation', 0);\n    const newRotation = normalizeAngle(rotation + 90);\n    this.handleRotate(newRotation);\n  };\n\n  handleInlineToolbarRotateAntiClockwise = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { node } = this.props;\n    const rotation = getData(node.data, 'rotation', 0);\n    const newRotation = normalizeAngle(rotation - 90);\n    this.handleRotate(newRotation);\n  };\n\n  getUploadProgress = () => {\n    const { node } = this.props;\n    const { src, uploadPercent = 0 } = node.data || {};\n    // upload.progress 到达 100% 时，整体进度只展示 95%\n    // 不展示 100% 原因是还需要下载图片\n    // 目前看 progress 在生产环境可代表真实进度\n    return src ? 100 : uploadPercent * 0.95;\n  };\n\n  getCursor = () => {\n    const { imageConfig = {}, controller } = this.props;\n    const { previewImage } = imageConfig;\n    const { isFocused } = controller.value;\n    if (previewImage && this.shouldShowToolbar() && isFocused) {\n      return 'zoom-in';\n    }\n    return 'auto';\n  };\n\n  renderInlineToolbar() {\n    const { controller, node, imageConfig } = this.props;\n    const showToolbar = this.shouldShowToolbar() && (controller.value.isFocused || this.isSettingBorder());\n    if (!showToolbar) return null;\n\n    const { previewImage, downloadImage, locale, customToolbars, inlineToolbarMore } = imageConfig || {};\n    const realInlineLayout = controller.query('getImageInlineToolbarLayout');\n    const hasInlineToolbar = Array.isArray(realInlineLayout) && realInlineLayout.length > 0;\n    return hasInlineToolbar && (\n      <ImageInlineToolbar\n        visible\n        controller={controller}\n        triggerNode={this.ref.current}\n        node={node}\n        locale={locale}\n        handleInlineToolbarRotate={this.handleInlineToolbarRotate}\n        handleInlineToolbarRotateAntiClockwise={\n          this.handleInlineToolbarRotateAntiClockwise\n        }\n        previewImage={previewImage}\n        downloadImage={downloadImage}\n        onEnterCroppingMode={this.onEnterCroppingMode}\n        getZoomContainer={this.getZoomContainer}\n        getScrollableContent={this.getScrollableContent}\n        inlineToolbarLayout={realInlineLayout}\n        // @ts-ignore\n        customToolbars={customToolbars}\n        inlineToolbarMore={inlineToolbarMore}\n      />\n    );\n  }\n\n  handlePreviewImage = () => {\n    const { isLoaded } = this.state;\n    const { imageConfig, node, controller } = this.props;\n    const previewImage = imageConfig?.previewImage;\n    if (!isLoaded || !previewImage) return;\n    const { src } = node.data;\n    const isSelectingNode = controller.query('isSelectingNode');\n    if (isSelectingNode) return;\n    previewImage(src, node);\n  };\n\n  throttleHandlePreviewImage = throttle(this.handlePreviewImage, THROTTLE_PREVIEW_TIME);\n\n  handleLoad = () => {\n    this.setIsLoaded(true);\n    const { url } = this.props.pluginState || {};\n    if (url && (url as string).startsWith('blob:')) {\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  handleContextMenu = (event) => {\n    event.preventDefault();\n  };\n\n  closeContextMenu = () => {\n    const { controller } = this.props;\n    controller.run('onAction', closeContextMenu());\n  };\n\n  handleImgClick = () => {\n    this.closeContextMenu();\n    const { controller, node } = this.props;\n    if (ImagePlugin.isParentClickable(controller, node)) {\n      return;\n    }\n    if (this.state.isCanPreview && this.isFocusedBeforeClick) {\n      this.handlePreviewImage();\n    }\n  };\n\n  handleImgDoubleClick = () => {\n    this.throttleHandlePreviewImage();\n  };\n\n  handleMouseDown = () => {\n    this.isFocusedBeforeClick = this.props.controller.value.isFocused;\n  };\n\n  handleMouseEnter = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.setState({\n      isHovering: true,\n    });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({\n      isHovering: false,\n    });\n  };\n\n  handleMouseOver = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.props.onMouseOver(e);\n  };\n\n  getImgRectData = () => {\n    const { node } = this.props;\n    const { width, height, outline, rectClip } = node.data as ImageData;\n    const isComplex = isComplexImg(node.data);\n    const isValid = isValidSize(width, height);\n    const position = this.getPortalPosition();\n    const l = rectClip?.left || 0;\n    const r = rectClip?.right || 0;\n    const t = rectClip?.top || 0;\n    const b = rectClip?.bottom || 0;\n    if (isComplex && isValid) {\n      // img 标签的实际渲染宽度\n      const fixedOutline = ((outline?.width || 0)) * 2;\n      // HACK: 图片增加边框后整体所占的宽高不变，其实会导致图片变形，原因是宽高向内收缩的像素是相同的，但是图片的宽高比例不同\n      // img 元素的实际宽度\n      const renderImgWidth = (this.image.current?.clientWidth) || 0;\n      // img 元素的实际长度\n      const renderImgHeight = (this.image.current?.clientHeight) || 0;\n      // 图片实际可见的宽度（不包含边框）= img 元素的实际宽度 * 剪裁后剩余部分所占的比例\n      const renderVisibleWidth = renderImgWidth * (width! / (width! + l + r));\n      // 图片整体可见的宽度（包含边框）\n      const renderContainerWidth = renderVisibleWidth + fixedOutline;\n      // 图片整体可见的高度（包含边框）= 图片整体可见的宽度（包含边框） * 落库的高相对于宽的比例\n      const renderContainerHeight = renderContainerWidth * (height! / width!);\n      // 图片实际可见的高度（不包含边框） = 图片整体可见的高度 - 固定的边框（用户添加的边框）\n      const renderVisibleHeight = renderContainerHeight - fixedOutline;\n\n      return {\n        width: renderVisibleWidth,\n        height: renderVisibleHeight,\n        l: renderImgWidth * (l / (width! + l + r)),\n        r: renderImgWidth * (r / (width! + l + r)),\n        t: renderImgHeight * (t / (height! + t + b)),\n        b: renderImgHeight * (b / (height! + t + b)),\n        ...position,\n      };\n    }\n    return {\n      width: this.image.current?.clientWidth || 0,\n      height: this.image.current?.clientHeight || 0,\n      l,\n      r,\n      t,\n      b,\n      ...position,\n    };\n  };\n\n  getImgRef = () => {\n    return this.image.current;\n  };\n\n  renderImage = () => {\n    const {\n      node,\n      children,\n      attributes,\n      controller,\n      scale,\n      pluginState,\n      imageConfig = {},\n      zoomContainer,\n    } = this.props;\n    const { url } = pluginState || {};\n    const { isRotating, isResizing, isHovering, isTransferring, isLoaded, maxWidth } = this.state;\n    const { src } = node.data as ImageData;\n    const { renderExtraNode } = imageConfig;\n    const rotation = getData(node.data, 'rotation', 0);\n    const { isBlurred } = controller.value;\n    const uploadProgress = this.getUploadProgress();\n    const normalizeRotation = normalizeAngle(rotation);\n\n    const transformedSrc = this.calcSrc(src);\n    const isImageSelected = this.shouldShowToolbar();\n    const isHover = !isRotating && !isResizing && isHovering;\n\n    return (\n      <React.Fragment>\n        {children}\n        {zoomContainer\n          && this.isCropping()\n          && this.ref.current\n          ? ReactDOM.createPortal(\n            <ImageCrop\n              src={transformedSrc}\n              rotation={normalizeRotation}\n              handleCrop={this.handleChangeSize}\n              onExitCroppingMode={this.onExitCroppingMode}\n              getImgRectData={this.getImgRectData}\n              getZoomContainer={this.getZoomContainer}\n              controller={controller}\n              scale={scale}\n            />,\n            zoomContainer,\n          )\n          : null}\n        <ImgMeta\n          style={{\n            visibility:\n              this.isCropping() || this.isRotating() ? 'hidden' : 'visible',\n            userSelect:\n              this.isCropping() || this.isRotating() ? 'none' : 'auto',\n            maxWidth,\n          }}\n          className={classnames({\n            'show-highlight': isImageSelected && !isResizing && !isBlurred,\n            'disable-highlight-when-hover': isResizing,\n          })}\n          imgCursor={this.getCursor()}\n          onMouseEnter={renderExtraNode && this.handleMouseEnter}\n          onMouseLeave={renderExtraNode && this.handleMouseLeave}\n          onMouseOver={this.handleMouseOver}\n          data-hover-box=\"noBorderBox\"\n        >\n          <Img\n            {...attributes}\n            ref={this.image}\n            uploadPlaceholder={url}\n            node={node}\n            controller={controller}\n            uploadProgress={uploadProgress}\n            onDoubleClick={this.handleImgDoubleClick}\n            onContextMenu={this.handleContextMenu}\n            onClick={this.handleImgClick}\n            onMouseDown={this.handleMouseDown}\n            isTransferring={isTransferring}\n            imageConfig={imageConfig}\n            onLoad={this.handleLoad}\n          />\n          {\n            renderExtraNode && renderExtraNode(node, isHover, isImageSelected)\n          }\n        </ImgMeta>\n        {zoomContainer &&\n          isImageSelected &&\n          !this.state.isUpdating &&\n          this.ref.current &&\n          ReactDOM.createPortal(\n            <ImageEditor\n              node={node}\n              src={transformedSrc}\n              controller={controller}\n              scale={scale}\n              rotation={normalizeRotation}\n              onChangeSize={this.handleChangeSize}\n              onEnterRotationMode={this.onEnterRotationMode}\n              handleRotate={this.handleRotate}\n              onEnterResizingMode={this.onEnterResizingMode}\n              isRotating={isRotating}\n              getZoomContainer={this.getZoomContainer}\n              onContextMenu={this.handleContextMenu}\n              imageConfig={imageConfig}\n              isLoaded={isLoaded}\n              isBlurred={isBlurred}\n              getImgRectData={this.getImgRectData}\n              getImgRef={this.getImgRef}\n            />,\n            zoomContainer,\n          )}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { isLoaded, isResizing, isRotating } = this.state;\n    const { disableInlineToolbar } = this.props;\n    return (\n      <React.Fragment>\n        { !disableInlineToolbar && isLoaded && !(isResizing || isRotating) && this.renderInlineToolbar()}\n        <ImgContent ref={this.ref}>{this.renderImage()}</ImgContent>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Container: React.FC<IOwnProps> = (props) => {\n  const { controller, node, imageConfig } = props;\n  const scrollableContent = useScrollableContent();\n  const zoomContainer = useZoomContainer() || document.body;\n  const scale = useZoom();\n  const imageManager = ImagePlugin.useImageManager();\n  const [isSelected, setSelected] = React.useState<boolean>(false);\n  const disableInlineToolbar = controller.query('hasHoverToolbar', 'image');\n  const hoverHandlers = useHover(true)[1];\n\n  const handlePendingSelectionChange = React.useCallback(() => {\n    const { selection } = controller.value;\n    const { isCollapsed, anchor } = selection;\n    if (!isCollapsed) {\n      isSelected && setSelected(false);\n    } else {\n      const isPendingSelected = node.hasNode(anchor.key);\n      isSelected !== isPendingSelected && setSelected(isPendingSelected);\n    }\n  }, [controller, node, isSelected]);\n\n  useSelectionData(controller.selectionData$, null, handlePendingSelectionChange, []);\n\n\n  if (!node.data || isEmpty(omit(node.data, IS_EMPTY_IGNORE_PROPS))) {\n    return (\n      <ImagePlugin.InlinePlaceholder\n        onClick={() => controller.run('onAction', selectImage(node.key))}\n      >\n        {imageConfig?.locale?.placeholder || 'Image'}\n      </ImagePlugin.InlinePlaceholder>\n    );\n  }\n\n  return (\n    <Image\n      {...props}\n      scrollableContent={scrollableContent}\n      zoomContainer={zoomContainer}\n      scale={scale}\n      isSelected={controller.enablePending.selection ? isSelected : props.isSelected}\n      imageManager={imageManager}\n      disableInlineToolbar={disableInlineToolbar}\n      onMouseOver={hoverHandlers.onMouseOver}\n    />\n  );\n};\n\nexport default Container;\n"],"file":"image.js"}