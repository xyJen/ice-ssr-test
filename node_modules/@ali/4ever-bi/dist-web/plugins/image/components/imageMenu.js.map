{"version":3,"sources":["../../../../../src/plugins/image/components/imageMenu.tsx"],"names":["React","MenuItem","PluginRoles","Image","ToolbarDownloadNormal","SettingNormal","toggleImageSidebar","inSelectionInImage","selectImage","ImageMenu","props","menuItem","controller","value","title","rest","isCollapsedAtEdge","selection","isDisabled","query","handleClick","run","image","ImageSetting","locale","document","useCallback","node","focusInline","toggle","useMemo","isCollapsed","focus","getClosestVoid","key","isImage","imageMenuOptions","advancedSettings","ImageDownload","config","downloadImage","src","data","imageMenuDownload","downloadImg"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { MenuItem } from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { Image } from '@ali/4ever-mo';\nimport { ToolbarDownloadNormal, SettingNormal } from '@ali/we-icon';\nimport { MenuItemInnerProps } from '@ali/4ever-component';\nimport { toggleImageSidebar } from '../actions';\n\nimport inSelectionInImage from '../utils/inSelectionInImage';\n;\nimport { selectImage } from '../actions';\nimport { ImagePluginConfig } from '../types';\n\nexport default function ImageMenu(props: MenuItemInnerProps) {\n  const { menuItem, controller } = props;\n  const { value } = controller;\n  const { title, ...rest } = menuItem;\n\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || inSelectionInImage(value)\n    || controller.query('isSelectionInLink')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInLinkCard');\n\n  const handleClick = () => controller.run('onAction', selectImage());\n\n  return (\n    <MenuItem {...rest} disabled={isDisabled} onClick={handleClick} role={PluginRoles.image}>\n      {title || ''}\n    </MenuItem>\n  );\n}\n\nexport function ImageSetting(props: MenuItemInnerProps) {\n  const { menuItem, controller, locale } = props;\n  const { document, selection } = controller.value;\n  const { title, ...rest } = menuItem;\n\n  const handleClick = React.useCallback(() => {\n    controller.run('onAction', toggleImageSidebar({\n      node: controller.value.focusInline,\n      toggle: true,\n    }));\n  }, [controller]);\n\n  const isDisabled = React.useMemo(() => {\n    const { isCollapsed, focus } = selection;\n    if (isCollapsed) {\n      const node = document.getClosestVoid(focus.key, controller);\n      return !Image.isImage(node);\n    }\n    return true;\n  }, [controller, document, selection]);\n\n  return (\n    <MenuItem\n      testid=\"image-menu-options\"\n      icon={<SettingNormal />}\n      onClick={handleClick}\n      {\n        ...rest\n      }\n      disabled={isDisabled}\n      role={PluginRoles.imageMenuOptions}\n    >\n      {title || locale?.advancedSettings}\n    </MenuItem>\n  );\n}\n\nexport function ImageDownload(props: MenuItemInnerProps & {config: ImagePluginConfig}) {\n  const { menuItem, controller, config, locale } = props;\n  const { focusInline } = controller.value;\n  const { title, ...rest } = menuItem;\n  const { downloadImage } = config;\n  let src;\n  if (focusInline && Image.isImage(focusInline)) {\n    src = focusInline.data?.src;\n  }\n\n  const handleClick = React.useCallback(() => {\n    downloadImage && downloadImage(src);\n  }, [src, downloadImage]);\n\n  return (src && downloadImage) ? (\n    <MenuItem\n      testid=\"image-menu-download\"\n      role={PluginRoles.imageMenuDownload}\n      icon={<ToolbarDownloadNormal />}\n      onClick={handleClick}\n      {\n        ...rest\n      }\n    >\n      {title || locale?.downloadImg }\n    </MenuItem>\n  ) : null;\n}\n"],"file":"imageMenu.js"}