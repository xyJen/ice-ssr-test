{"version":3,"sources":["../../../../../src/plugins/image/components/imageButton.tsx"],"names":["React","Dropdown","DropdownAnimation","RestorepictureNormal","ChangePicNormal","SettingNormal","StrokeNormal","PictureButton","BorderPicker","BorderPickerOverlay","IconButton","Button","IconMenu","PluginRoles","ImagePlugin","useScrollableContent","Image","logger","inSelectionInImage","getImageSize","selectImage","updateImage","setImageInjection","toggleImageSidebar","setColorPanelMode","blockEvent","BorderButton","BorderButtonIcon","StyleButtonIcon","RESTORE_DATA","ImageStyleOverlay","lineStyleMap","single","lineType","size","dotted","dashed","lineSizeMap","DEFAULT_COLOR","DEFAULT_BORDER_ICON_COLOR","DEFAULT_TYPE","DEFAULT_WIDTH","isButtonDisabled","controller","value","isCollapsedAtEdge","selection","isDisabled","query","Boolean","ImageButton","props","locale","rest","handleClick","useCallback","run","image","ImageBorder","isButtonType","focusInline","imgOutline","data","outline","lineStyle","type","lineSize","width","useState","isOverlayVisible","setOverlayVisible","isSizeSelectVisible","setSizeSelectVisible","isStyleSelectVisible","setStyleSelectVisible","handleColorPick","colorValue","color","sum","handleLineStyleChange","key","handleLineSizeChange","borderLocale","border","handleActiveChange","visible","isSettingBorder","getColorPanelMode","mode","handleSelectValueChange","pathColors","useMemo","handleVisibleChange","e","style","imageBorder","borderInput","ImageReset","originData","src","then","height","newPayload","resetTitle","imageReset","ImageStyle","dropdownVisible","setDropdownVisible","scrollableContent","getContainer","document","body","useFocusImage","styleOptions","imageRecommendStyle","OptionsButton","node","event","preventDefault","stopPropagation","toggle","isImage","options","imageOptions","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ILineTypeValue, Dropdown } from '@ali/we-design';\nimport { DropdownAnimation } from '@ali/we-util';\nimport { RestorepictureNormal as ChangePicNormal, SettingNormal, StrokeNormal, ToolbarPictureNormal } from '@ali/we-icon';\nimport { PictureButton, BorderPicker, BorderPickerOverlay, IconButton as Button, EColorPanelMode, IconMenu } from '@ali/we-toolbar';\nimport { Controller, Inline } from '@ali/4ever-cangjie';\nimport { PluginRoles, ImagePlugin, useScrollableContent } from '@ali/4ever-bamboo';\nimport { Image } from '@ali/4ever-mo';\nimport logger from '@ali/4ever-logger';\nimport inSelectionInImage from '../utils/inSelectionInImage';\nimport getImageSize from '../utils/getImageSize';\n;\nimport { selectImage, updateImage, setImageInjection, toggleImageSidebar } from '../actions';\n;\nimport { setColorPanelMode } from '@ali/4ever-plugin-pref';\nimport { blockEvent }  from '@ali/4ever-utils';\nimport { RecommendStyleMenuType } from './recommendStyleItems';\nimport { BorderButton, BorderButtonIcon, StyleButtonIcon } from './styled';\nimport { RESTORE_DATA } from '../constants';\nimport { ImageStyleOverlay } from './imageStyleOverlay';\n\nconst lineStyleMap: Record<string, ILineTypeValue> = {\n  single: {\n    lineType: 'single',\n    size: 1,\n  },\n  dotted: {\n    lineType: 'dotted',\n    size: 1,\n  },\n  dashed: {\n    lineType: 'dashed',\n    size: 1,\n  },\n};\n\nconst lineSizeMap: Record<string, ILineTypeValue> = {\n  1: {\n    lineType: 'single',\n    size: 1,\n  },\n  2: {\n    lineType: 'single',\n    size: 2,\n  },\n  4: {\n    lineType: 'single',\n    size: 4,\n  },\n  6: {\n    lineType: 'single',\n    size: 6,\n  },\n};\n\nconst DEFAULT_COLOR = '#D8D8D8';\nconst DEFAULT_BORDER_ICON_COLOR = 'rgb(17, 31, 44)';\nconst DEFAULT_TYPE = 'single';\nconst DEFAULT_WIDTH = 1;\n\nexport interface ImageButtonProps {\n  controller: Controller;\n  locale: ImagePlugin.ILocale;\n}\n\nexport const isButtonDisabled = (controller: Controller) => {\n  const { value } = controller;\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || inSelectionInImage(value)\n    || controller.query('isSelectionInLink')\n    || controller.query('isSelectionInMention')\n    || controller.query('isSelectionInListSymbol')\n    || controller.query('isSelectionInLinkCard');\n  return Boolean(isDisabled);\n}\n\nexport function ImageButton(props: ImageButtonProps) {\n  const { controller, locale, ...rest } = props;\n  const handleClick = React.useCallback(() => controller.run('onAction', selectImage()), [controller]);\n  return (\n    <PictureButton\n      {...rest}\n      testid=\"bi-toolbar-picture\"\n      disabled={isButtonDisabled(controller)}\n      onClick={handleClick}\n      role={PluginRoles.image}\n    />\n  );\n}\n\nexport const ImageBorder: React.FC<ImageButtonProps & { isButtonType?: boolean }> = props => {\n  const { controller, locale, isButtonType, ...rest } = props;\n  const { value } = controller;\n  const { focusInline } = value;\n  const imgOutline = focusInline?.data?.outline || {};\n  // TODO: 历史数据兼容，此处先处理为default，后续需要we-ui支持不选中状态\n  const lineStyle = lineStyleMap[imgOutline.type] ? imgOutline.type : DEFAULT_TYPE;\n  const lineSize = `${lineSizeMap[imgOutline.width] ? imgOutline.width : DEFAULT_WIDTH}`;\n\n  const [isOverlayVisible, setOverlayVisible] = React.useState(false);\n  const [isSizeSelectVisible, setSizeSelectVisible] = React.useState(false);\n  const [isStyleSelectVisible, setStyleSelectVisible] = React.useState(false);\n\n  const handleColorPick = (colorValue: string) => {\n    const outline = {\n      width: DEFAULT_WIDTH,\n      ...focusInline?.data?.outline,\n      color: colorValue,\n    };\n\n    if (!colorValue) {\n      delete outline.width;\n      delete outline.color;\n    }\n    logger.sum('image-border-line-color');\n    controller.run('onAction', updateImage(focusInline, { outline }));\n  };\n\n  const handleLineStyleChange = (key: string) => {\n    const outline = {\n      color: DEFAULT_COLOR,\n      width: DEFAULT_WIDTH,\n      ...imgOutline,\n      type: lineStyleMap[key].lineType,\n    };\n\n    controller.run('onAction', updateImage(focusInline, { outline }));\n    logger.sum('image-border-line-style');\n  };\n\n  const handleLineSizeChange = (key?: string) => {\n    const outline = {\n      color: DEFAULT_COLOR,\n      ...imgOutline,\n      width: key ? (lineSizeMap[key]?.size || DEFAULT_WIDTH) : DEFAULT_WIDTH,\n    };\n    controller.run('onAction', updateImage(focusInline, { outline }));\n    logger.sum('image-border-line-size');\n  };\n\n  const borderLocale = (locale && locale.border) || {};\n\n  const handleActiveChange = (visible) => {\n    controller.run('onAction', setImageInjection(focusInline?.key, {\n      isSettingBorder: visible,\n    }));\n  };\n\n  const getColorPanelMode =\n    React.useCallback(() => controller.query('getColorPanelMode')?.mode, [controller]);\n\n  const handleSelectValueChange = React.useCallback((mode: EColorPanelMode) => {\n    controller.run('onAction', setColorPanelMode({ mode }));\n  }, [controller]);\n\n  const color = imgOutline.color || DEFAULT_COLOR;\n\n  const pathColors = React.useMemo(() => ([\n    // 当选中颜色为白色时，选中边框的外边缘为黑色，否则选中边框外边缘与内部颜色一致\n    color ?? DEFAULT_COLOR,\n    DEFAULT_BORDER_ICON_COLOR,\n  ]), [color]);\n\n  const handleVisibleChange = React.useCallback((e) => {\n    if (!e && (isSizeSelectVisible || isStyleSelectVisible)) {\n      return;\n    }\n    setOverlayVisible(e);\n  }, [isSizeSelectVisible, isStyleSelectVisible]);\n\n  return !isButtonType ? (\n    <BorderPicker\n      {...rest}\n      color={color}\n      title={(borderLocale as Record<string, any>).style}\n      tooltip={(borderLocale as Record<string, any>).style}\n      lineStyle={lineStyle}\n      lineSize={lineSize}\n      lineStyleMap={lineStyleMap}\n      lineSizeMap={lineSizeMap}\n      onColorPick={handleColorPick}\n      onLineStyleChange={handleLineStyleChange}\n      onLineSizeChange={handleLineSizeChange}\n      onClick={handleLineSizeChange}\n      automaticColor=\"\"\n      clearColor=\"\"\n      onActiveChange={handleActiveChange}\n      role={PluginRoles.imageBorder}\n      showToggleSelect\n      getColorPanelMode={getColorPanelMode}\n      onSelectValueChange={handleSelectValueChange}\n      testid=\"BorderPicker\"\n    />\n  ) : (\n    <Dropdown\n      visible={isOverlayVisible || isSizeSelectVisible || isStyleSelectVisible}\n      onVisibleChange={handleVisibleChange}\n      testid=\"image-sidebar-border-dropdown\"\n      role={PluginRoles.imageBorder}\n      overlay={\n        <DropdownAnimation visible={isOverlayVisible}>\n          <BorderPickerOverlay\n            color={imgOutline.color || DEFAULT_COLOR}\n            // @ts-ignore 组件不存在 title 属性\n            title={(borderLocale as Record<string, any>).style}\n            tooltip={(borderLocale as Record<string, any>).style}\n            lineStyle={lineStyle}\n            lineSize={lineSize}\n            lineStyleMap={lineStyleMap}\n            lineSizeMap={lineSizeMap}\n            onColorPick={handleColorPick}\n            onLineStyleChange={handleLineStyleChange}\n            onLineSizeChange={handleLineSizeChange}\n            onClick={handleLineSizeChange}\n            automaticColor=\"\"\n            clearColor=\"\"\n            getColorPanelMode={getColorPanelMode}\n            onSelectValueChange={handleSelectValueChange}\n            onSizeSelectVisibleChange={setSizeSelectVisible}\n            onStyleSelectVisibleChange={setStyleSelectVisible}\n            showToggleSelect\n          />\n        </DropdownAnimation>\n      }\n    >\n      <BorderButton onMouseDown={blockEvent} data-testid=\"image-sidebar-border-button\">\n        <BorderButtonIcon><StrokeNormal pathColors={pathColors} /></BorderButtonIcon>\n        {borderLocale.borderInput}\n      </BorderButton>\n    </Dropdown>\n  );\n};\n\nexport const ImageReset: React.FC<ImageButtonProps> = (props) => {\n  const { controller, locale, ...rest } = props;\n\n  const handleClick = () => {\n    const { value } = controller;\n    const { focusInline } = value;\n    let originData: Record<string, any> = {};\n    if (focusInline) {\n      originData = focusInline.data || {};\n    }\n    getImageSize(originData.src, controller).then(({ width, height }) => {\n      const newPayload = {\n        width,\n        height,\n        ...RESTORE_DATA,\n      };\n      controller.run('onAction', updateImage(focusInline, newPayload));\n    });\n  };\n  return (\n    <Button\n      {...rest}\n      title={locale.resetTitle}\n      tooltip={locale.resetTitle}\n      testid=\"bi-toolbar-reset-pic\"\n      icon={<ChangePicNormal />}\n      onClick={handleClick}\n      role={PluginRoles.imageReset}\n    />\n  );\n};\n\nexport const ImageStyle: React.FC<ImageButtonProps & { size?: RecommendStyleMenuType }> = (props) => {\n  const { controller, locale, size } = props;\n  const [dropdownVisible, setDropdownVisible] = React.useState(false);\n  const scrollableContent = useScrollableContent();\n\n  const getContainer = React.useCallback(() => (scrollableContent || document.body), [scrollableContent]);\n\n  const image = ImagePlugin.useFocusImage(controller);\n\n  return (\n    <IconMenu\n      overlay={\n        <ImageStyleOverlay\n          controller={controller}\n          getImageNode={() => image}\n          locale={locale}\n          onClick={() => { setDropdownVisible(false)}}\n        />}\n      title={locale.styleOptions}\n      tooltip={locale.styleOptions}\n      size={size}\n      icon={StyleButtonIcon}\n      onVisibleChange={setDropdownVisible}\n      active={dropdownVisible}\n      testid=\"image-toolbar-recommend-styles\"\n      role={PluginRoles.imageRecommendStyle}\n      getContainer={getContainer}\n    />\n  );\n}\n\nexport interface OptionsButtonProps {\n  controller: Controller;\n  locale: ImagePlugin.ILocale;\n}\n\nexport const OptionsButton: React.FC<OptionsButtonProps> = (props) => {\n  const { controller, locale } = props;\n  const { focusInline: node } = controller.value;\n\n  const handleClick = React.useCallback((event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    controller.run('onAction', toggleImageSidebar({\n      node,\n      toggle: true,\n    }));\n  }, [controller, node]);\n\n  const isDisabled = !Image.isImage(node);\n\n  return (\n    <Button\n      icon={<SettingNormal />}\n      tooltip={locale.options}\n      onClick={handleClick}\n      disabled={isDisabled}\n      testid=\"pi-toolbar-image-options\"\n      role={PluginRoles.imageOptions}\n    />\n  );\n};\n\nOptionsButton.displayName = 'OptionsButton';\n"],"file":"imageButton.js"}