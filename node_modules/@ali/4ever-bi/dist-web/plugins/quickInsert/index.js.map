{"version":3,"sources":["../../../../src/plugins/quickInsert/index.tsx"],"names":["stubFalse","biLocale","actions","createRenderMark","createRenderEditable","onKeyDown","onSelect","onCommand","onAction","createOnCangjieInput","isSelectionInQuickInsert","getQuickInsertDecoration","getQuickInsertKeyword","getQuickInsertPanelPosition","insertPlugin","createQuickInsertPlugin","configs","plugins","pluginConfig","triggers","groups","getLifeCycle","locale","quickInsert","getItem","item","key","console","warn","renderIcon","renderPanel","onMenuClick","title","quickInsertTitle","props","disabled","map","group","items","filter","insertMap","reduce","forEach","onCangjieInput","renderEditable","renderMark","queries","commands","models","klass","type"],"mappings":"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","sourcesContent":["import { stubFalse } from 'lodash-es';\nimport biLocale from '../../locales/zh_CN';\nimport {\n  QuickInsertPluginConfig,\n  GroupItem,\n  InsertItem,\n  QuickInsertConfig,\n} from './types';\nimport * as actions from './actions';\nimport createRenderMark from './createRenderMark';\nimport createRenderEditable from './createRenderEditable';\nimport onKeyDown from './handlers/onKeyDown';\nimport onSelect from './handlers/onSelect';\nimport onCommand from './handlers/onCommand';\nimport onAction from './handlers/onAction';\nimport createOnCangjieInput from './handlers/createOnCangjieInput';\nimport isSelectionInQuickInsert from './queries/isSelectionInQuickInsert';\nimport getQuickInsertDecoration from './queries/getQuickInsertDecoration';\nimport getQuickInsertKeyword from './queries/getQuickInsertKeyword';\nimport getQuickInsertPanelPosition from './queries/getPanelPosition';\nimport insertPlugin from './commands/insert';\nimport { BiPluginConfig } from '../../types';\n\nfunction createQuickInsertPlugin(\n  configs: BiPluginConfig,\n  plugins: {\n    [key: string]: {\n      quickInsert?: QuickInsertConfig;\n    };\n  },\n) {\n  const pluginConfig: QuickInsertPluginConfig = {\n    triggers: {},\n    groups: [],\n    getLifeCycle: () => {},\n    locale: biLocale.quickInsert.locale,\n    ...configs.quickInsert,\n  };\n\n  function getItem(item: GroupItem): InsertItem | null {\n    const key = typeof item === 'string' ? item : item.key;\n    if (!configs[key] || !plugins[key] || !plugins[key].quickInsert) {\n      // eslint-disable-next-line no-console\n      console.warn(`can not find [${item}]'s \\`quickInsert\\` configuration`);\n      return null;\n    }\n    const { locale } = configs[key] || {};\n    const { quickInsert } = plugins[key];\n\n    const { renderIcon, renderPanel, onMenuClick } = quickInsert!;\n    return {\n      key,\n      title: locale.quickInsertTitle || key,\n      renderIcon,\n      renderPanel: (props) => renderPanel({ ...props, locale }),\n      onMenuClick,\n      disabled:\n        typeof item === 'string' ? stubFalse : item.disabled || stubFalse,\n    };\n  }\n\n  const groups = pluginConfig.groups.map((group) => ({\n    ...group,\n    items: (group.items || [])\n      .map(getItem)\n      .filter((item) => !!item) as InsertItem[],\n  }));\n\n  const insertMap = groups.reduce<Record<string, InsertItem>>((map, group) => {\n    group.items.forEach((item) => {\n      // eslint-disable-next-line no-param-reassign\n      map[item.key] = item;\n    });\n    return map;\n  }, {});\n\n  return {\n    onCangjieInput: createOnCangjieInput(pluginConfig, insertMap),\n    onKeyDown,\n    onSelect,\n    onCommand,\n    renderEditable: createRenderEditable(groups, insertMap, pluginConfig),\n    renderMark: createRenderMark(),\n    onAction,\n    queries: {\n      isSelectionInQuickInsert,\n      getQuickInsertDecoration,\n      getQuickInsertKeyword,\n      getQuickInsertPanelPosition,\n    },\n    commands: {\n      insertPlugin,\n    },\n    models: [{\n      klass: 'inline',\n      type: 'mention',\n    }],\n  };\n}\n\ncreateQuickInsertPlugin.actions = actions;\n\nexport default createQuickInsertPlugin;\n"],"file":"index.js"}