import { Point, domUtils, constants } from '@ali/4ever-cangjie';
export default function getPos(controller, scrollableContainer, portalDom, align) {
  var _domUtils$findDOMNode;

  if (align === void 0) {
    align = 'follow';
  }

  var _controller$value = controller.value,
      selection = _controller$value.selection,
      document = _controller$value.document;
  var point = Point.create({
    key: selection.focus.key,
    // @ts-ignore
    offset: selection.focus.offset - 1
  });
  var contentDOM = (_domUtils$findDOMNode = domUtils.findDOMNodeSafely(document.key)) == null ? void 0 : _domUtils$findDOMNode.closest("[" + constants.Selector.content + "]");
  var pos = domUtils.findCaretPosition(point, 'start', contentDOM || window);

  if (pos && scrollableContainer && portalDom) {
    // @ts-ignore
    var containerRect = (scrollableContainer.window === scrollableContainer ? window.document.body : scrollableContainer).getBoundingClientRect();
    var clientLeft = pos.clientLeft,
        clientTop = pos.clientTop,
        height = pos.height;
    var clientHeight = portalDom.clientHeight,
        clientWidth = portalDom.clientWidth;
    var isBottomLittleSpace = clientTop > clientHeight && containerRect.height - (clientTop + height) < clientHeight;
    var isLeftLittleSpace = clientLeft > clientWidth && containerRect.width - clientLeft < clientWidth;
    var left = isLeftLittleSpace ? clientLeft + window.scrollX - clientWidth : clientLeft + window.scrollX;
    var top = isBottomLittleSpace ? clientTop + window.scrollY - clientHeight - 2 : pos.clientTop + height + 2 + window.scrollY;

    if (align === 'bottom') {
      return {
        left: left,
        top: pos.clientTop + height + 2 + window.scrollY
      };
    }

    if (align === 'top') {
      return {
        left: left,
        top: clientTop + window.scrollY - clientHeight
      };
    }

    return {
      left: left,
      top: top
    };
  }

  return {
    left: 9999,
    top: 9999
  };
}
//# sourceMappingURL=pos.js.map