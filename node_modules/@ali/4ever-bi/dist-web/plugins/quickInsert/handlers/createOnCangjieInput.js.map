{"version":3,"sources":["../../../../../src/plugins/quickInsert/handlers/createOnCangjieInput.ts"],"names":["insertQuickInsert","removeQuickInsert","isSelectionInQuickInsert","createOnCangjieInput","config","insertMap","triggers","onCangjieInput","event","controller","next","plugin","detail","data","preventDefault","decorations","value","quickInsertDecoration","find","mark","type","command"],"mappings":"AAEA,OAAOA,iBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,wBAAP;AAEA,eAAe,SAASC,oBAAT,CACbC,MADa,EAEbC,SAFa,EAGb;AAAA,MACQC,QADR,GACqBF,MADrB,CACQE,QADR;AAEA,SAAO,SAASC,cAAT,CACLC,KADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AACA,QAAMC,MAAM,GAAGL,QAAQ,CAACE,KAAK,CAACI,MAAN,CAAaC,IAAd,CAAvB;;AAEA,QAAI,CAACF,MAAD,IAAW,CAACN,SAAS,CAACM,MAAD,CAAzB,EAAmC;AACjC,aAAOD,IAAI,EAAX;AACD;;AAEDF,IAAAA,KAAK,CAACM,cAAN;;AAEA,QAAIZ,wBAAwB,CAACO,UAAD,CAA5B,EAA0C;AAAA,UAChCM,WADgC,GAChBN,UAAU,CAACO,KADK,CAChCD,WADgC,EAExC;;AACA,UAAME,qBAAqB,GAAGF,WAAW,CAACG,IAAZ,CAC5B;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eAAcA,IAAI,CAACC,IAAL,KAAc,cAA5B;AAAA,OAD4B,CAA9B;;AAGA,UAAIH,qBAAqB,CAAEE,IAAvB,CAA4BN,IAA5B,CAAiCF,MAAjC,KAA4CA,MAAhD,EAAwD;AACtD,eAAOF,UAAU,CACdY,OADI,CACIpB,iBADJ,EAEJoB,OAFI,CAEIrB,iBAFJ,EAEuB;AAAEW,UAAAA,MAAM,EAANA;AAAF,SAFvB,CAAP;AAGD;;AACD,aAAOD,IAAI,EAAX;AACD;;AACD,WAAOD,UAAU,CAACY,OAAX,CAAmBrB,iBAAnB,EAAsC;AAAEW,MAAAA,MAAM,EAANA;AAAF,KAAtC,CAAP;AACD,GA3BD;AA4BD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { QuickInsertPluginConfig, InsertItem } from '../types';\nimport insertQuickInsert from '../commands/insert';\nimport removeQuickInsert from '../commands/remove';\nimport isSelectionInQuickInsert from '../queries/isSelectionInQuickInsert';\n\nexport default function createOnCangjieInput(\n  config: QuickInsertPluginConfig,\n  insertMap: Record<string, InsertItem>,\n) {\n  const { triggers } = config;\n  return function onCangjieInput(\n    event: CustomEvent,\n    controller: Controller,\n    next: () => void,\n  ) {\n    const plugin = triggers[event.detail.data!];\n\n    if (!plugin || !insertMap[plugin]) {\n      return next();\n    }\n\n    event.preventDefault();\n\n    if (isSelectionInQuickInsert(controller)) {\n      const { decorations } = controller.value;\n      // 若此时仍尝试呼出相同插入，则重新呼出\n      const quickInsertDecoration = decorations.find(\n        ({ mark }) => mark.type === 'quick-insert',\n      );\n      if (quickInsertDecoration!.mark.data.plugin === plugin) {\n        return controller\n          .command(removeQuickInsert)\n          .command(insertQuickInsert, { plugin });\n      }\n      return next();\n    }\n    return controller.command(insertQuickInsert, { plugin });\n  };\n}\n"],"file":"createOnCangjieInput.js"}