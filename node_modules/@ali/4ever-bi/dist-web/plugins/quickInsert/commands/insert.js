import { Commands, Point, Decoration, Mark } from '@ali/4ever-cangjie';
;
import { showQuickInsert, setQuickInsert } from "../actions";

function getFocusPoint(controller) {
  var selection = controller.value.selection;

  if (!selection) {
    return null;
  }

  var focus = selection.focus;
  return Point.create({
    key: focus.key,
    // @ts-ignore
    offset: focus.offset
  });
}

export default function insert(controller, data) {
  if (controller.query('isCollapsedInInlineVoid') || controller.query('isSelectionInMention')) {
    controller.command(Commands.moveToStartOfNextText);
  }

  controller.run('onAction', showQuickInsert());
  controller.run('onAction', setQuickInsert(data.plugin));
  var decorations = controller.value.decorations;
  var notQuickInsertDescorations = decorations.filter(function (item) {
    return item.mark.type !== 'quick-insert';
  });
  var endPoint = getFocusPoint(controller);

  if (!endPoint) {
    return controller;
  }

  var startPoint = Point.create({
    key: endPoint.key,
    // @ts-ignore
    offset: Math.max(0, endPoint.offset - 1)
  });

  if (endPoint.offset === startPoint.offset) {
    // 插入空格，保证 decoration 区间不闭合，能够展示 quick-insert 面板
    controller.command(Commands.insertText, ' ');
    endPoint = Point.create({
      key: endPoint.key,
      // @ts-ignore
      offset: endPoint.offset + 1
    });
  }

  return controller.setDecorations([].concat(notQuickInsertDescorations, [Decoration.create({
    start: startPoint,
    end: endPoint,
    mark: Mark.create({
      type: 'quick-insert',
      data: data
    })
  })]));
}
//# sourceMappingURL=insert.js.map