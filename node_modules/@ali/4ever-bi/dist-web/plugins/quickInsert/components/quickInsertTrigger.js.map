{"version":3,"sources":["../../../../../src/plugins/quickInsert/components/quickInsertTrigger.tsx"],"names":["React","useEffect","useMemo","useRef","useState","useCallback","styled","ReactDOM","Commands","useScrollableContainer","ActiveInteractionHooks","theme","Menu","Panel","Forbidden","resetQuickInsert","removeQuickInsert","useOnClickOutside","throttle","PANEL_WIDTH","PANEL_HEIGHT","PanelBox","div","InsertWrapper","colorLine1","boxShadow","useActiveInteraction","QuickInsert","props","text","value","groups","controller","insertMap","config","getLifeCycle","current","top","left","position","setPosition","portalRef","scrollableContainer","close","run","activeType","setActiveType","activeRef","updatePosition","flag","pos","query","portalDom","children","p","addEventListener","removeEventListener","length","handleChange","key","command","focus","start","performance","now","time","overlay","zIndex","disabled","renderPanel","from","createPortal","document","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport ReactDOM from 'react-dom';\nimport { Controller, Commands } from '@ali/4ever-cangjie';\nimport { useScrollableContainer } from '@ali/4ever-bamboo';\nimport { ActiveInteractionHooks } from '@ali/4ever-component';\nimport { theme } from '@ali/we-design';\nimport Menu from './menu';\nimport Panel from './panel';\nimport Forbidden from './forbidden';\nimport { resetQuickInsert, removeQuickInsert } from '../actions';\nimport { InsertGroup, InsertItem, QuickInsertPluginConfig } from '../types';\nimport { useOnClickOutside } from '@ali/4ever-component';\nimport { throttle } from 'lodash-es';\n\ninterface QuickInsertProps {\n  controller: Controller;\n  groups: InsertGroup[];\n  value: string;\n  insertMap: Record<string, InsertItem>;\n  config: QuickInsertPluginConfig;\n  text: string;\n}\n\nconst PANEL_WIDTH = 335;\nconst PANEL_HEIGHT = 375;\n\nconst PanelBox = styled.div``;\n\nconst InsertWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${() => theme.colorLine1};\n  box-shadow: ${() => theme.boxShadow};\n  border-radius: 6px;\n  height: ${PANEL_HEIGHT}px;\n  width: ${PANEL_WIDTH}px;\n`;\n\nconst { useActiveInteraction } = ActiveInteractionHooks;\n\nconst QuickInsert: React.FunctionComponent<QuickInsertProps> = (props) => {\n  const { text, value, groups, controller, insertMap, config } = props;\n  const { getLifeCycle } = config;\n\n  const current = insertMap[value];\n  const [position, setPosition] = useState({ top: 99999, left: 99999 });\n  const left = useRef<number>(0);\n  const portalRef = useRef<HTMLDivElement>(null);\n  const scrollableContainer = useScrollableContainer();\n\n  const close = useCallback(() => {\n    controller.run('onAction', removeQuickInsert());\n    return controller;\n  }, [controller]);\n\n  const [activeType, setActiveType] = useActiveInteraction();\n  const activeRef = React.useRef('');\n  activeRef.current = activeType;\n\n  React.useEffect(() => {\n    setActiveType('quickInsertMenu');\n    return () => {\n      if (activeRef.current === 'quickInsertMenu') {\n        setActiveType('');\n      }\n    }\n  }, [setActiveType]);\n\n  const updatePosition = useCallback(\n    throttle((flag?: Boolean | Event) => {\n      const pos = controller.query('getQuickInsertPanelPosition', {\n        controller,\n        scrollableContainer: scrollableContainer as HTMLElement,\n        portalDom: portalRef.current?.children[0],\n      });\n      const p = {\n        left: typeof flag === 'boolean' ? pos.left : left.current,\n        top: pos.top,\n      };\n      setPosition(p);\n      left.current = p.left;\n    }), [scrollableContainer, config],\n  );\n\n  // 等待 DOM 渲染完成之后再计算定位\n  useEffect(() => {\n    updatePosition(true);\n    scrollableContainer?.addEventListener('scroll', updatePosition);\n\n    return () => {\n      scrollableContainer?.removeEventListener('scroll', updatePosition);\n    };\n  }, [scrollableContainer]);\n\n  useEffect(() => {\n    if (text.length === 1) {\n      updatePosition(true);\n    }\n  }, [text, controller.value]);\n\n  const handleChange = React.useCallback(\n    (key: string) => {\n      controller.run('onAction', resetQuickInsert(key));\n      controller.command(Commands.focus);\n    },\n    [controller],\n  );\n\n  useOnClickOutside(portalRef, close);\n\n  useEffect(() => {\n    const start = performance.now();\n    return () => {\n      getLifeCycle && getLifeCycle({ time: performance.now() - start });\n    };\n  }, [getLifeCycle]);\n\n  const overlay = useMemo(() =>\n    (<InsertWrapper\n      style={{\n        left: position.left,\n        top: position.top,\n        zIndex: 999,\n      }}\n    >\n      <Menu\n        groups={groups}\n        value={current.key}\n        onChange={handleChange}\n        editorValue={controller.value}\n      />\n      <Panel>\n        {current.disabled(controller.value) ? (\n          <Forbidden />\n        ) : (\n          current.renderPanel({\n            close,\n            text,\n            controller,\n            from: 'editor',\n          })\n        )}\n      </Panel>\n    </InsertWrapper>),\n  [close, controller, current, groups, handleChange, position.left, position.top, text]);\n\n  return ReactDOM.createPortal(\n    <PanelBox\n      className=\"quick-insert-portal\"\n      data-testid=\"quick-insert-portal\"\n      ref={portalRef}\n    >\n      {overlay}\n    </PanelBox>,\n    document.body,\n  );\n};\n\nexport default QuickInsert;\n"],"file":"quickInsertTrigger.js"}