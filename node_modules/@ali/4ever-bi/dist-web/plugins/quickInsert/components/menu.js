/* eslint-disable react/no-array-index-key */
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled from 'styled-components';
import { theme, Tooltip } from '@ali/we-design';
var MenuWrapper = /*#__PURE__*/styled.div(["display:flex;background:", ";height:32px;padding:0px 6px;width:100%;overflow:visible;"], function () {
  return theme.colorFill1;
});
var MenuGroup = /*#__PURE__*/styled.div(["display:flex;height:100%;"]);
var MenuGroupWrapper = /*#__PURE__*/styled.div(["display:flex;align-items:center;:not(:last-child){margin-right:6px;}"]);
var MenuItemWrapper = /*#__PURE__*/styled.div(["font-size:17px;display:flex;position:relative;align-items:center;justify-content:center;padding:0px 4px;border-bottom:2px solid transparent;height:100%;border-bottom-color:", ";color:", ";cursor:", ";user-select:none;:not(:last-child){margin-right:6px;}"], function (props) {
  return props.actived ? theme.colorBlue1 : 'transparent';
}, function (props) {
  return props.actived ? theme.colorBlue1 : theme.colorText3;
}, function (props) {
  return props.disabled ? 'not-allowed' : 'pointer';
});
var Divider = /*#__PURE__*/styled.div(["background-color:", ";width:1px;height:17px;margin-left:6px;"], function () {
  return theme.colorLine2;
});
var MenuItem = /*#__PURE__*/React.memo(function (props) {
  var item = props.item,
      onClick = props.onClick,
      disabled = props.disabled,
      actived = props.actived;
  var handleClick = React.useCallback(function () {
    if (!disabled && !actived) {
      onClick(item.key);
    }
  }, [item, onClick, disabled, actived]);
  return /*#__PURE__*/_createElement(MenuItemWrapper, {
    "data-testid": "group-item",
    onClick: handleClick,
    disabled: disabled,
    actived: actived
  }, /*#__PURE__*/_createElement(Tooltip, {
    placement: "bottom",
    title: item.title
  }, item.renderIcon({
    actived: actived,
    disabled: disabled
  })));
});

var _ref2 = /*#__PURE__*/_createElement(Divider, null);

var Menu = /*#__PURE__*/React.memo(function (props) {
  var groups = props.groups,
      value = props.value,
      onChange = props.onChange,
      editorValue = props.editorValue;
  return /*#__PURE__*/_createElement(MenuWrapper, null, groups.map(function (_ref, index) {
    var key = _ref.key,
        items = _ref.items;
    return /*#__PURE__*/_createElement(MenuGroupWrapper, {
      key: key
    }, /*#__PURE__*/_createElement(MenuGroup, {
      "data-testid": "group"
    }, items.map(function (item) {
      return /*#__PURE__*/_createElement(MenuItem, {
        key: item.key,
        item: item,
        actived: value === item.key,
        disabled: item.disabled(editorValue),
        onClick: onChange
      });
    })), index !== groups.length - 1 && _ref2);
  }));
});
export default Menu;
//# sourceMappingURL=menu.js.map