import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import Video from "./components/video";
export default function createRenderNode(config) {
  var videoConfig = config.video || {};
  var _videoConfig$locale = videoConfig.locale,
      videoLocaleConfig = _videoConfig$locale === void 0 ? {} : _videoConfig$locale,
      downloadFile = videoConfig.downloadFile,
      transformVideoURL = videoConfig.transformVideoURL,
      onMediaLoadSuccess = videoConfig.onMediaLoadSuccess,
      onMediaLoadError = videoConfig.onMediaLoadError,
      setTempPosterUrl = videoConfig.setTempPosterUrl,
      renderVideoMask = videoConfig.renderVideoMask,
      allowDownload = videoConfig.allowDownload,
      allowFullscreen = videoConfig.allowFullscreen;
  return {
    embed: function embed(props, controller, next) {
      var node = props.node;

      if (node.data.type === 'video' && node.data.src) {
        return /*#__PURE__*/_createElement(Video, _extends({}, props, {
          controller: controller,
          onDownload: downloadFile,
          locale: videoLocaleConfig,
          transformVideoURL: transformVideoURL,
          onMediaLoadSuccess: onMediaLoadSuccess,
          onMediaLoadError: onMediaLoadError,
          setTempPosterUrl: setTempPosterUrl,
          renderVideoMask: renderVideoMask,
          allowDownload: allowDownload,
          allowFullscreen: allowFullscreen
        }));
      }

      return next();
    }
  };
}
//# sourceMappingURL=createRenderNode.js.map