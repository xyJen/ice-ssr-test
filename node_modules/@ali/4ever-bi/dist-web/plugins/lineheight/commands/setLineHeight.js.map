{"version":3,"sources":["../../../../../src/plugins/lineheight/commands/setLineHeight.ts"],"names":["Commands","Paragraph","Heading","isEqualWithDefault","getBlocksFromEditor","controller","lineHeight","lineRule","selectedBlocks","length","forEach","node","data","spacing","oldLineHeight","line","newLineHeight","isParagraph","isHeading","command","setNodeByKey","key"],"mappings":";AAAA,SAAqBA,QAArB,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,kBAAxD;AAEA,gBAAe,UAACC,UAAD,EAAyBC,UAAzB,EAA6CC,QAA7C,EAAmE;AAChF,MAAMC,cAAc,GAAGJ,mBAAmB,CAACC,UAAD,CAA1C;;AACA,MAAI,CAACG,cAAc,CAACC,MAApB,EAA4B;AAC1B,WAAOJ,UAAP;AACD;;AAEDG,EAAAA,cAAc,CAACE,OAAf,CAAuB,UAACC,IAAD,EAAU;AAC/B;AACA;AAF+B,6BAGNA,IAAI,CAACC,IAHC,CAGvBC,OAHuB;AAAA,QAGvBA,OAHuB,mCAGb,EAHa;AAK/B,QAAMC,aAAa,GAAG;AACpBC,MAAAA,IAAI,EAAEF,OAAO,CAACE,IAAR,IAAgB,CADF;AAEpBR,MAAAA,QAAQ,EAAEM,OAAO,CAACN,QAAR,IAAoB;AAFV,KAAtB;AAIA,QAAMS,aAAa,GAAG;AACpBD,MAAAA,IAAI,EAAET,UAAU,IAAI,CADA;AAEpBC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAFF,KAAtB;;AAIA,QAAIJ,kBAAkB,CAACa,aAAD,EAAgBF,aAAhB,CAAtB,EAAsD;AACpD;AACD;;AAED,QAAIb,SAAS,CAACgB,WAAV,CAAsBN,IAAtB,KAA+BT,OAAO,CAACgB,SAAR,CAAkBP,IAAlB,CAAnC,EAA4D;AAC1DN,MAAAA,UAAU,CAACc,OAAX,CAAmBnB,QAAQ,CAACoB,YAA5B,EAA0CT,IAAI,CAACU,GAA/C,EAAoD;AAClDT,QAAAA,IAAI,eACCD,IAAI,CAACC,IADN;AAEFC,UAAAA,OAAO,eACFA,OADE,EAEFG,aAFE;AAFL;AAD8C,OAApD;AASD;AACF,GA5BD;AA6BA,SAAOX,UAAP;AACD,CApCD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { Paragraph, Heading } from '@ali/4ever-mo';\nimport { isEqualWithDefault, getBlocksFromEditor } from '@ali/4ever-utils';\n\nexport default (controller: Controller, lineHeight: number, lineRule?: string) => {\n  const selectedBlocks = getBlocksFromEditor(controller);\n  if (!selectedBlocks.length) {\n    return controller;\n  }\n\n  selectedBlocks.forEach((node) => {\n    // TODO 其他需要支持行高的 block 需要配置这里\n    // 要保留spacing的其他设置，比如段落间距\n    const { spacing = {} } = node.data;\n\n    const oldLineHeight = {\n      line: spacing.line || 1,\n      lineRule: spacing.lineRule || 'auto',\n    };\n    const newLineHeight = {\n      line: lineHeight || 1,\n      lineRule: lineRule || 'auto',\n    };\n    if (isEqualWithDefault(newLineHeight, oldLineHeight)) {\n      return;\n    }\n\n    if (Paragraph.isParagraph(node) || Heading.isHeading(node)) {\n      controller.command(Commands.setNodeByKey, node.key, {\n        data: {\n          ...node.data,\n          spacing: {\n            ...spacing,\n            ...newLineHeight,\n          },\n        },\n      });\n    }\n  });\n  return controller;\n};\n"],"file":"setLineHeight.js"}