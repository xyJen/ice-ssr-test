{"version":3,"sources":["../../../../../src/plugins/lineheight/components/getLineHeightMenuList.tsx"],"names":["React","SubMenu","MenuItem","PluginRoles","setLineHeight","actionList","key","text","isDisabled","controller","value","isCollapsedAtEdge","selection","query","renderSubMenu","props","menuItem","MenuContentWrapper","Fragment","title","rest","line","lineRule","lineValue","parseFloat","undefined","handleClick","height","split","run","heights","map","config","lineHeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller, Value } from '@ali/4ever-cangjie';\nimport { SubMenu, MenuItem } from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { SubMenuInnerProps } from '@ali/4ever-component';\n;\nimport { setLineHeight } from '../actions';\n\ninterface IConfigItem {\n  key: number;\n  text: string;\n}\n\nconst actionList: IConfigItem[] = [\n  {\n    key: 1,\n    text: '1',\n  },\n  {\n    key: 1.15,\n    text: '1.15',\n  },\n  {\n    key: 1.5,\n    text: '1.5',\n  },\n  {\n    key: 2,\n    text: '2',\n  },\n  {\n    key: 2.5,\n    text: '2.5',\n  },\n  {\n    key: 3,\n    text: '3',\n  },\n];\n\nconst isDisabled = (controller: Controller) => {\n  const { value } = controller;\n  const { isCollapsedAtEdge } = value.selection;\n  return isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInTaskList')\n    || controller.query('isSelectionInLinkCard');\n};\n\nconst renderSubMenu = (props: SubMenuInnerProps) => {\n  const { controller, menuItem } = props;\n  const { MenuContentWrapper = React.Fragment, title, ...rest } = menuItem;\n  const { line, lineRule = 'auto' } = controller.query('getLineHeight');\n  // 组件只支持多倍行距\n  const lineValue = parseFloat(lineRule !== 'auto' ? undefined : line);\n\n  const handleClick = (key) => {\n    const height = parseFloat(key.split('_')[1]);\n    controller.run('onAction', setLineHeight(height));\n  };\n\n  const heights = actionList.map((config: IConfigItem) => {\n    const key = `lineheight_${config.key}`;\n    return (\n      <MenuItem\n        selected={lineValue === config.key}\n        menuKey={key}\n        key={key}\n        onClick={handleClick}\n        role={`${PluginRoles.lineHeight}-${config.text}`}\n      >{config.text}\n      </MenuItem>\n    );\n  });\n\n  return (\n    <SubMenu {...rest} title={menuItem.title || ''} disabled={isDisabled(controller)}>\n      <MenuContentWrapper>\n        {heights}\n      </MenuContentWrapper>\n    </SubMenu>\n  );\n};\n\nexport default renderSubMenu;\n"],"file":"getLineHeightMenuList.js"}