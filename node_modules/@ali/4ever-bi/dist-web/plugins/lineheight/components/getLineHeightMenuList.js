import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { SubMenu, MenuItem } from '@ali/we-design';
import { PluginRoles } from '@ali/4ever-bamboo';
;
import { setLineHeight } from "../actions";
var actionList = [{
  key: 1,
  text: '1'
}, {
  key: 1.15,
  text: '1.15'
}, {
  key: 1.5,
  text: '1.5'
}, {
  key: 2,
  text: '2'
}, {
  key: 2.5,
  text: '2.5'
}, {
  key: 3,
  text: '3'
}];

var isDisabled = function isDisabled(controller) {
  var value = controller.value;
  var isCollapsedAtEdge = value.selection.isCollapsedAtEdge;
  return isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInTaskList') || controller.query('isSelectionInLinkCard');
};

var renderSubMenu = function renderSubMenu(props) {
  var controller = props.controller,
      menuItem = props.menuItem;

  var _menuItem$MenuContent = menuItem.MenuContentWrapper,
      MenuContentWrapper = _menuItem$MenuContent === void 0 ? React.Fragment : _menuItem$MenuContent,
      title = menuItem.title,
      rest = _objectWithoutPropertiesLoose(menuItem, ["MenuContentWrapper", "title"]);

  var _controller$query = controller.query('getLineHeight'),
      line = _controller$query.line,
      _controller$query$lin = _controller$query.lineRule,
      lineRule = _controller$query$lin === void 0 ? 'auto' : _controller$query$lin; // 组件只支持多倍行距


  var lineValue = parseFloat(lineRule !== 'auto' ? undefined : line);

  var handleClick = function handleClick(key) {
    var height = parseFloat(key.split('_')[1]);
    controller.run('onAction', setLineHeight(height));
  };

  var heights = actionList.map(function (config) {
    var key = "lineheight_" + config.key;
    return /*#__PURE__*/_createElement(MenuItem, {
      selected: lineValue === config.key,
      menuKey: key,
      key: key,
      onClick: handleClick,
      role: PluginRoles.lineHeight + "-" + config.text
    }, config.text);
  });
  return /*#__PURE__*/_createElement(SubMenu, _extends({}, rest, {
    title: menuItem.title || '',
    disabled: isDisabled(controller)
  }), /*#__PURE__*/_createElement(MenuContentWrapper, null, heights));
};

export default renderSubMenu;
//# sourceMappingURL=getLineHeightMenuList.js.map