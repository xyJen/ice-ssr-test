{"version":3,"sources":["../../../../src/plugins/common/commonPlugin.ts"],"names":["isAtEndOfParagraph","isAtStartOfParagraph","isSelectionAtSameBlock","getPointAndBlockOnSelection","changeNullSelectionMark","generateKey","getClosestParagraph","getRandomId","hasMark","isCollapsedInEmptyText","isInsertInline","re","getMatches","getOffset","getMarkTextMatchInfo","CommonPlugin","utils","toggleRangesMark","controller","mark","command"],"mappings":"AAAA;AAEA,SACEA,kBADF,EAEEC,oBAFF,EAGEC,sBAHF,EAIEC,2BAJF,EAKEC,uBALF,EAMEC,WANF,EAOEC,mBAPF,EAQEC,WARF,EASEC,OATF,EAUEC,sBAVF,EAWEC,cAXF,EAYEC,EAZF,EAYMC,UAZN,EAYkBC,SAZlB,EAY6BC,oBAZ7B,QAaO,kBAbP;AAeA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,gBAAgB,EAAE,0BAACC,UAAD,EAAaC,IAAb;AAAA,aAAsBD,UAAU,CAACE,OAAX,CAAmB,kBAAnB,EAAuCD,IAAvC,CAAtB;AAAA,KADb;AAELnB,IAAAA,kBAAkB,EAAlBA,kBAFK;AAGLC,IAAAA,oBAAoB,EAApBA,oBAHK;AAIL;AACAC,IAAAA,sBAAsB,EAAtBA,sBALK;AAML;AACAC,IAAAA,2BAA2B,EAA3BA,2BAPK;AAQL;AACAC,IAAAA,uBAAuB,EAAvBA,uBATK;AAULC,IAAAA,WAAW,EAAXA,WAVK;AAWLC,IAAAA,mBAAmB,EAAnBA,mBAXK;AAYLC,IAAAA,WAAW,EAAXA,WAZK;AAaLC,IAAAA,OAAO,EAAPA,OAbK;AAcLC,IAAAA,sBAAsB,EAAtBA,sBAdK;AAeLC,IAAAA,cAAc,EAAdA,cAfK;AAgBLC,IAAAA,EAAE,EAAFA,EAhBK;AAgBDC,IAAAA,UAAU,EAAVA,UAhBC;AAgBWC,IAAAA,SAAS,EAATA,SAhBX;AAgBsBC,IAAAA,oBAAoB,EAApBA;AAhBtB;AADY,CAArB;AAqBA,SAASC,YAAT","sourcesContent":["// reexport for bi api, 插件改为从 4ever-utils 引入\n\nimport {\n  isAtEndOfParagraph,\n  isAtStartOfParagraph,\n  isSelectionAtSameBlock,\n  getPointAndBlockOnSelection,\n  changeNullSelectionMark,\n  generateKey,\n  getClosestParagraph,\n  getRandomId,\n  hasMark,\n  isCollapsedInEmptyText,\n  isInsertInline,\n  re, getMatches, getOffset, getMarkTextMatchInfo,\n} from '@ali/4ever-utils';\n\nconst CommonPlugin = { \n  utils: {\n    toggleRangesMark: (controller, mark) => controller.command('toggleRangesMark', mark),\n    isAtEndOfParagraph,\n    isAtStartOfParagraph,\n    //isSection,\n    isSelectionAtSameBlock,\n    //isSingleSection,\n    getPointAndBlockOnSelection,\n    //unwrapSingleSection,\n    changeNullSelectionMark,\n    generateKey,\n    getClosestParagraph,\n    getRandomId,\n    hasMark,\n    isCollapsedInEmptyText,\n    isInsertInline,\n    re, getMatches, getOffset, getMarkTextMatchInfo,\n  }\n};\n\nexport { CommonPlugin }\n"],"file":"commonPlugin.js"}