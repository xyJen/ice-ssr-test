{"version":3,"sources":["../../../../src/plugins/onlineVideo/createRenderNode.tsx"],"names":["React","OnlineVideo","createRenderNode","config","pluginState","Editor","Toolbar","undefined","onlineVideoLocaleConfig","locale","isValidVideoURL","getIFramePlayerURL","isIFramePlayerSupported","onMediaLoadSuccess","onMediaLoadError","onlineVideo","props","controller","node","attributes","isSelected"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,OAAOC,WAAP;AAGA,eAAe,SAASC,gBAAT,CAA0BC,MAA1B,EAA2DC,WAA3D,EAAwEC,MAAxE,EAA4FC,OAA5F,EAAuI;AAAA,MAA/DD,MAA+D;AAA/DA,IAAAA,MAA+D,GAAtDE,SAAsD;AAAA;;AAAA,MAA3CD,OAA2C;AAA3CA,IAAAA,OAA2C,GAAjCC,SAAiC;AAAA;;AACpJ,MAAMC,uBAAuB,GAAGL,MAAM,CAACM,MAAP,IAAiB,EAAjD;AADoJ,MAGlJC,eAHkJ,GAQhJP,MARgJ,CAGlJO,eAHkJ;AAAA,MAIlJC,kBAJkJ,GAQhJR,MARgJ,CAIlJQ,kBAJkJ;AAAA,MAKlJC,uBALkJ,GAQhJT,MARgJ,CAKlJS,uBALkJ;AAAA,MAMlJC,kBANkJ,GAQhJV,MARgJ,CAMlJU,kBANkJ;AAAA,MAOlJC,gBAPkJ,GAQhJX,MARgJ,CAOlJW,gBAPkJ;AASpJ,SAAO;AACLC,IAAAA,WAAW,EAAE,qBAACC,KAAD,EAAQC,UAAR,EAAuB;AAAA,UAC1BC,IAD0B,GACOF,KADP,CAC1BE,IAD0B;AAAA,UACpBC,UADoB,GACOH,KADP,CACpBG,UADoB;AAAA,UACRC,UADQ,GACOJ,KADP,CACRI,UADQ;AAElC,0BACE,mCAASD,UAAT;AAAqB,uBAAY;AAAjC,uBACE,eAAC,WAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,UAAU,EAAED,UAFd;AAGE,QAAA,UAAU,EAAEG,UAHd;AAIE,QAAA,MAAM,EAAEf,MAJV;AAKE,QAAA,OAAO,EAAEC,OALX;AAME,QAAA,MAAM,EAAEE,uBANV;AAOE,QAAA,eAAe,EAAEE,eAPnB;AAQE,QAAA,kBAAkB,EAAEC,kBARtB;AASE,QAAA,uBAAuB,EAAEC,uBAT3B;AAUE,QAAA,WAAW,EAAER,WAVf;AAWE,QAAA,kBAAkB,EAAES,kBAXtB;AAYE,QAAA,gBAAgB,EAAEC;AAZpB,QADF,CADF;AAkBD;AArBI,GAAP;AAuBD","sourcesContent":["import * as React from 'react';\nimport { Plugin } from '@ali/4ever-cangjie';\nimport OnlineVideo from './components/onlineVideo';\nimport { OnlineVideoPluginConfig } from './types';\n\nexport default function createRenderNode(config: OnlineVideoPluginConfig, pluginState, Editor = undefined, Toolbar = undefined): Plugin['renderNode'] {\n  const onlineVideoLocaleConfig = config.locale || {};\n  const {\n    isValidVideoURL,\n    getIFramePlayerURL,\n    isIFramePlayerSupported,\n    onMediaLoadSuccess,\n    onMediaLoadError,\n  } = config;\n  return {\n    onlineVideo: (props, controller) => {\n      const { node, attributes, isSelected } = props;\n      return (\n        <div {...attributes} data-testid=\"onlinevideo\">\n          <OnlineVideo\n            node={node}\n            controller={controller}\n            isSelected={isSelected}\n            Editor={Editor}\n            Toolbar={Toolbar}\n            locale={onlineVideoLocaleConfig}\n            isValidVideoURL={isValidVideoURL}\n            getIFramePlayerURL={getIFramePlayerURL}\n            isIFramePlayerSupported={isIFramePlayerSupported}\n            pluginState={pluginState}\n            onMediaLoadSuccess={onMediaLoadSuccess}\n            onMediaLoadError={onMediaLoadError}\n          />\n        </div>\n      );\n    },\n  };\n}\n"],"file":"createRenderNode.js"}