import { Commands } from '@ali/4ever-cangjie';
import { ONLINEVIDEO_UPDATE, ONLINEVIDEO_INSERT, ONLINEVIDEO_REMOVE, ONLINEVIDEO_FOCUS_EDITOR, ONLINEVIDEO_SELECT } from "../actions";
import updateOnlineVideo from "../commands/updateOnlineVideo";
import removeOnlineVideo from "../commands/removeOnlineVideo";
import insertOnlineVideo from "../commands/insertOnlineVideo";
import { biActions as basicActions } from '@ali/4ever-plugin-basic';
import { FOCUSED_ONLINEVIDEO } from "../constants/value";

var onAction = function onAction(state) {
  return function (action, editor, next) {
    var type = action.type,
        payload = action.payload;

    if (type === ONLINEVIDEO_INSERT) {
      return insertOnlineVideo(state)(editor);
    }

    if (type === ONLINEVIDEO_UPDATE) {
      var node = payload.node,
          data = payload.data;
      return updateOnlineVideo(editor, node, data);
    }

    if (type === ONLINEVIDEO_REMOVE) {
      var _node = payload.node;
      return removeOnlineVideo(editor, _node);
    }

    if (type === ONLINEVIDEO_FOCUS_EDITOR) {
      var _basicActions$createM;

      var _node2 = payload.node;
      editor.run('onAction', basicActions.createMergeDataAction((_basicActions$createM = {}, _basicActions$createM[FOCUSED_ONLINEVIDEO] = _node2.key, _basicActions$createM)));
      return editor.command(Commands.blur);
    }

    if (type === ONLINEVIDEO_SELECT) {
      var _node3 = payload.node;
      return editor.command(Commands.focus).command(Commands.moveToRangeOfNode, _node3);
    }

    return next();
  };
};

export default onAction;
//# sourceMappingURL=onAction.js.map