{"version":3,"sources":["../../../../../src/plugins/onlineVideo/components/onlineVideo.tsx"],"names":["React","environment","sanitizeUrl","updateOnlineVideo","selectOnlineVideo","YoukuPlayer","VideoWrapper","YoukuPlayerWrapper","YoukuPlayerPlaceholder","YoukuPlayerMask","isMobile","IS_MOBILE","OnlineVideo","props","node","controller","isSelected","isValidVideoURL","getIFramePlayerURL","isIFramePlayerSupported","locale","pluginState","onMediaLoadSuccess","onMediaLoadError","Editor","Toolbar","data","src","type","poster","wrapperRef","useRef","nodeRef","useState","isFocused","setFocusState","isCollapsed","value","selection","showToolbar","onFocus","useCallback","onBlur","onSave","params","run","onPlayerFocus","current","handleMediaLoadError","handleMediaLoadSuccess","renderVideoContent","videoRef","createRef","setTimeout","disablePictureInPicture","notSupportText","url","display","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Controller, Node, environment, Block } from '@ali/4ever-cangjie';\nimport { sanitizeUrl } from '@ali/4ever-utils';\nimport { updateOnlineVideo, selectOnlineVideo } from '../actions';\nimport {\n  YoukuPlayer,\n  VideoWrapper,\n  YoukuPlayerWrapper,\n  YoukuPlayerPlaceholder,\n  YoukuPlayerMask,\n} from './styled';\n\nconst isMobile = environment.IS_MOBILE;\n\ninterface IProps {\n  node: Node;\n  controller: Controller;\n  isSelected: boolean;\n  isValidVideoURL: (url: string) => boolean;\n  getIFramePlayerURL: (src: string) => string;\n  isIFramePlayerSupported: (src: string) => boolean;\n  locale: Record<string, any>;\n  pluginState: any;\n  onMediaLoadSuccess: Function;\n  onMediaLoadError: Function;\n  Editor?: React.ComponentType<any>;\n  Toolbar?: React.ComponentType<any>;\n}\n\nconst OnlineVideo = (props: IProps) => {\n  const {\n    node,\n    controller,\n    isSelected,\n    isValidVideoURL,\n    getIFramePlayerURL,\n    isIFramePlayerSupported,\n    locale = {},\n    pluginState,\n    onMediaLoadSuccess,\n    onMediaLoadError,\n    Editor,\n    Toolbar,\n  } = props;\n  const { data } = node as Block;\n  const { src } = data;\n  const { type } = data;\n  const { poster } = data;\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const nodeRef = React.useRef(node);\n  const [isFocused, setFocusState] = React.useState(false);\n\n  const { isCollapsed } = controller.value.selection;\n\n  const showToolbar = isFocused || (isSelected && isCollapsed);\n\n  const onFocus = React.useCallback(() => {\n    setFocusState(true);\n  }, []);\n\n  const onBlur = React.useCallback(() => {\n    setFocusState(false);\n  }, []);\n\n  const onSave = React.useCallback((params) => {\n    controller.run(\n      'onAction',\n      updateOnlineVideo(node, {\n        src: params.src,\n        type: params.type,\n      }),\n    );\n  }, [controller, node]);\n\n  const onPlayerFocus = React.useCallback(() => {\n    controller.run('onAction', selectOnlineVideo(nodeRef.current));\n  }, [controller]);\n\n  const handleMediaLoadError = () => {\n    if (onMediaLoadError) {\n      onMediaLoadError(src);\n    }\n  };\n\n  const handleMediaLoadSuccess = () => {\n    if (onMediaLoadSuccess) {\n      onMediaLoadSuccess(src);\n    }\n  };\n\n  const renderVideoContent = () => {\n    if (!src) {\n      // 移动端不展示地址输入框\n      if (isMobile || !Editor) {\n        return null;\n      }\n      return (\n        <Editor\n          locale={locale}\n          controller={controller}\n          onSave={onSave}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          node={node}\n          isValidVideoURL={isValidVideoURL}\n          pluginState={pluginState}\n        />\n      );\n    }\n    if (type === 'mp4') {\n      const videoRef = React.createRef<HTMLVideoElement>();\n      // React16.8 不支持 video 标签的 disablePictureInPicture 属性，16.9 支持\n      // 暂时只能通过这种方式，后续升级 React 后，改回 disablePictureInPicture 属性\n      setTimeout(() => {\n        if (videoRef.current) {\n          // @ts-ignore\n          videoRef.current.disablePictureInPicture = true;\n        }\n      }, 100);\n\n      return (\n        <VideoWrapper isMobile={isMobile} onClick={onPlayerFocus}>\n          <video // eslint-disable-line\n            data-type=\"onlineVideo\"\n            controls\n            raw-controls=\"true\" // UC内核独有属性\n            controlsList=\"nodownload noremoteplayback\"\n            ref={videoRef}\n            poster={sanitizeUrl(poster)}\n            onCanPlay={handleMediaLoadSuccess}\n            onError={handleMediaLoadError}\n          >\n            <source src={src} type=\"video/mp4\" />\n          </video>\n        </VideoWrapper>\n      );\n    }\n    if (type === 'youku') {\n      // android低版本容器有bug：https://work.aone.alibaba-inc.com/issue/26118887\n      if (isIFramePlayerSupported && !isIFramePlayerSupported(src)) {\n        return (\n          <YoukuPlayerPlaceholder>\n            <span>{locale.notSupportText}</span>\n          </YoukuPlayerPlaceholder>\n        );\n      }\n      const url = getIFramePlayerURL && getIFramePlayerURL(src);\n      if (url) {\n        return (\n          <YoukuPlayerWrapper isMobile={isMobile} onClick={onPlayerFocus}>\n            <YoukuPlayerMask\n              style={{ display: isSelected ? 'none' : 'block' }}\n            />\n            <YoukuPlayer src={sanitizeUrl(url)} allowFullScreen />\n          </YoukuPlayerWrapper>\n        );\n      }\n      return null;\n    }\n\n    return null;\n  };\n\n  return (\n    <div ref={wrapperRef}>\n      {showToolbar && !!Toolbar ?\n        <Toolbar\n          controller={controller}\n          node={node}\n          locale={locale}\n          triggerNode={wrapperRef.current}\n        />\n        : null}\n      {renderVideoContent()}\n    </div>\n  );\n};\n\nexport default React.memo(OnlineVideo);\n"],"file":"onlineVideo.js"}