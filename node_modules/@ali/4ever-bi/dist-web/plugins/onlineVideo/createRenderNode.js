import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import OnlineVideo from "./components/onlineVideo";
export default function createRenderNode(config, pluginState, Editor, Toolbar) {
  if (Editor === void 0) {
    Editor = undefined;
  }

  if (Toolbar === void 0) {
    Toolbar = undefined;
  }

  var onlineVideoLocaleConfig = config.locale || {};
  var isValidVideoURL = config.isValidVideoURL,
      getIFramePlayerURL = config.getIFramePlayerURL,
      isIFramePlayerSupported = config.isIFramePlayerSupported,
      onMediaLoadSuccess = config.onMediaLoadSuccess,
      onMediaLoadError = config.onMediaLoadError;
  return {
    onlineVideo: function onlineVideo(props, controller) {
      var node = props.node,
          attributes = props.attributes,
          isSelected = props.isSelected;
      return /*#__PURE__*/_createElement("div", _extends({}, attributes, {
        "data-testid": "onlinevideo"
      }), /*#__PURE__*/_createElement(OnlineVideo, {
        node: node,
        controller: controller,
        isSelected: isSelected,
        Editor: Editor,
        Toolbar: Toolbar,
        locale: onlineVideoLocaleConfig,
        isValidVideoURL: isValidVideoURL,
        getIFramePlayerURL: getIFramePlayerURL,
        isIFramePlayerSupported: isIFramePlayerSupported,
        pluginState: pluginState,
        onMediaLoadSuccess: onMediaLoadSuccess,
        onMediaLoadError: onMediaLoadError
      }));
    }
  };
}
//# sourceMappingURL=createRenderNode.js.map