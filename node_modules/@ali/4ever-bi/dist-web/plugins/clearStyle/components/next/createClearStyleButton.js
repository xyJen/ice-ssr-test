import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { environment } from '@ali/4ever-cangjie';
import { IconEraser } from '@ali/4ever-component';
import { PluginRoles } from '@ali/4ever-bamboo';
import { clearStyles } from "../../actions";
var MOD = environment.IS_MAC ? 'âŒ˜' : 'Ctrl';
export var CLEAR_STYLE_HOT_KEY = MOD + "+\\";

var _ref = /*#__PURE__*/_createElement(IconEraser, null);

export default function createClearStyleButton(props) {
  var controller = props.controller,
      locale = props.locale,
      icon = props.icon,
      title = props.title,
      tooltipProp = props.tooltip,
      badgeDot = props.badgeDot,
      disabled = props.disabled;

  var handleClick = function handleClick() {
    controller.run('onAction', clearStyles());
  };

  var tooltip = React.useMemo(function () {
    return _extends({
      title: title || (locale == null ? void 0 : locale.buttonTitle),
      shortCut: CLEAR_STYLE_HOT_KEY
    }, tooltipProp);
  }, [title, tooltipProp]);
  var buttonConfig = {
    icon: icon || _ref,
    onClick: handleClick,
    title: title || (locale == null ? void 0 : locale.buttonTitle),
    tooltip: tooltip,
    badgeDot: badgeDot,
    disabled: disabled,
    testid: 'bi-toolbar-clearstyle',
    role: PluginRoles.clear
  };
  return buttonConfig;
}
//# sourceMappingURL=createClearStyleButton.js.map