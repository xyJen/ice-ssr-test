{"version":3,"sources":["../../../../../src/plugins/formula/handlers/onAction.ts"],"names":["getClosestContainerBlock","getInnerWidth","FORMULA_SET_DATA","FORMULA_SET_INJECTION","setInjection","setTagData","onAction","action","controller","next","type","value","payload","node","data","closestBlock","maxWidth","tagData","width","Math","min","height","run","key"],"mappings":";AAEA,SAASA,wBAAT,QAAyC,kBAAzC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,gBADF,EAEEC,qBAFF;AAMA,SAASC,YAAT;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAAkCC,UAAlC,EAA0DC,IAA1D,EAA0E;AACvF,MAAIF,MAAM,CAACG,IAAP,KAAgBR,gBAApB,EAAsC;AAAA,QAC5BS,KAD4B,GAClBH,UADkB,CAC5BG,KAD4B;AAAA,eAEbJ,MAAM,CAACK,OAFM;AAAA,QAE5BC,IAF4B,QAE5BA,IAF4B;AAAA,QAEtBC,IAFsB,QAEtBA,IAFsB;AAGpC,QAAMC,YAAY,GAAGf,wBAAwB,CAACW,KAAD,EAAQE,IAAR,CAA7C;AACA,QAAMG,QAAQ,GAAGf,aAAa,CAACc,YAAD,CAA9B;;AACA,QAAME,OAAgB,gBACjBH,IADiB;AAEpBI,MAAAA,KAAK,EAAE,CAACJ,IAAI,CAACI,KAAN,GAAcJ,IAAI,CAACI,KAAnB,GAA2BC,IAAI,CAACC,GAAL,CAASJ,QAAT,EAAoBF,IAAI,CAACI,KAAzB,CAFd;AAGpBG,MAAAA,MAAM,EAAEP,IAAI,CAACO;AAHO,MAAtB;;AAMA,WAAOb,UAAU,CAACc,GAAX,CAAe,UAAf,EAA2BjB,UAAU,CAACQ,IAAD,EAAOI,OAAP,CAArC,CAAP;AACD;;AACD,MAAIV,MAAM,CAACG,IAAP,KAAgBP,qBAApB,EAA2C;AAAA,gBACnBI,MAAM,CAACK,OADY;AAAA,QACjCW,GADiC,SACjCA,GADiC;AAAA,QAC5BT,KAD4B,SAC5BA,IAD4B;AAEzC,WAAOV,YAAY,CAACI,UAAD,EAAae,GAAb,EAAkBT,KAAlB,CAAnB;AACD;;AACD,SAAOL,IAAI,EAAX;AACD","sourcesContent":["import { Controller, Action } from '@ali/4ever-cangjie';\nimport { TagData } from '@ali/4ever-mo';\nimport { getClosestContainerBlock } from '@ali/4ever-utils';\nimport { getInnerWidth } from '@ali/4ever-utils';\nimport {\n  FORMULA_SET_DATA,\n  FORMULA_SET_INJECTION,\n  SetFormulaDataPayload,\n  SetInjectionPayload,\n} from '../actions';\nimport { setInjection } from '../commands/setInjection';\nimport { setTagData } from '@ali/4ever-factory';\n\nexport default function onAction(action: Action, controller: Controller, next: Function) {\n  if (action.type === FORMULA_SET_DATA) {\n    const { value } = controller;\n    const { node, data } = action.payload as SetFormulaDataPayload;\n    const closestBlock = getClosestContainerBlock(value, node);\n    const maxWidth = getInnerWidth(closestBlock!);\n    const tagData: TagData = {\n      ...data,\n      width: !data.width ? data.width : Math.min(maxWidth!, data.width),\n      height: data.height,\n    };\n\n    return controller.run('onAction', setTagData(node, tagData));\n  }\n  if (action.type === FORMULA_SET_INJECTION) {\n    const { key, data } = action.payload as SetInjectionPayload;\n    return setInjection(controller, key, data);\n  }\n  return next();\n}\n\n"],"file":"onAction.js"}