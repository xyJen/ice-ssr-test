import React, { useState, useEffect } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import styled, { css } from 'styled-components';
import { FormulaPlugin } from '@ali/4ever-bamboo';
import "../katex.css";
var getKatexString = FormulaPlugin.getKatexString;
var Wrapper = /*#__PURE__*/styled.div(["display:flex;align-items:center;min-height:32px;border-radius:4px;position:relative;z-index:1;", " ", " ", ""], function (_ref) {
  var readOnly = _ref.readOnly;
  return readOnly ? css(["cursor:default;"]) : css(["cursor:pointer;&:hover{background-color:rgba(126,134,142,0.12);}&:active{background-color:hsla(210,6.6115702479338845%,52.54901960784314%,0.12);}"]);
}, function (_ref2) {
  var isEditing = _ref2.isEditing;
  return isEditing ? css(["background-color:rgba(126,134,142,0.12);margin-right:-20px;"]) : undefined;
}, function (_ref3) {
  var isSelected = _ref3.isSelected;
  return isSelected ? css(["background-color:rgba(0,106,254,0.12);"]) : undefined;
});
var FormulaContainer = /*#__PURE__*/styled.div(["overflow-x:auto;overflow-y:hidden;"]);
var Formula = /*#__PURE__*/styled.div(["margin:0px 4px;font-size:11pt;"]);
export default (function (props) {
  var formula = props.formula,
      isEditing = props.isEditing,
      isSelected = props.isSelected,
      readOnly = props.readOnly;

  var _useState = useState(''),
      domString = _useState[0],
      setDomString = _useState[1];

  useEffect(function () {
    setDomString(getKatexString(formula.trim()));
  }, [formula]);
  return /*#__PURE__*/_createElement(Wrapper, {
    isEditing: isEditing,
    isSelected: isSelected && !isEditing,
    readOnly: readOnly
  }, /*#__PURE__*/_createElement(FormulaContainer, null, /*#__PURE__*/_createElement(Formula, {
    dangerouslySetInnerHTML: {
      __html: domString
    }
  })));
});
//# sourceMappingURL=view.js.map