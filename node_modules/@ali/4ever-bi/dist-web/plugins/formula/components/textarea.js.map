{"version":3,"sources":["../../../../../src/plugins/formula/components/textarea.tsx"],"names":["React","ParseError","styled","Textarea","FormulaPlugin","Button","HelpBetaNormal","getKatexString","Wrapper","div","Footer","Info","InfoText","Btns","ConfirmBtn","ErrorInfo","p","FormulaInput","HelpIcon","FormulaTextarea","onClickConFirm","props","onButtonClick","onChange","e","text","currentTarget","value","formula","openWikiBook","window","open","config","jumpToUrl","renderErrorMessage","errorMessage","render","locale","textareaRef","textareaPlaceholder","info","confirm","undefined","message","replace","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ParseError } from 'katex';\nimport styled from 'styled-components';\nimport Textarea from 'react-textarea-autosize';\nimport { FormulaPlugin } from '@ali/4ever-bamboo';\nimport { Button, HelpBetaNormal } from '@ali/we-design';\nimport { FormulaConfig } from '../types';\n\nconst { getKatexString } = FormulaPlugin;\n\ninterface Props {\n  formula: string;\n  onChange: (text: string) => void;\n  onButtonClick: () => void;\n  config?: FormulaConfig;\n  textareaRef: React.RefObject<HTMLTextAreaElement>;\n  locale: Record<string, any>;\n}\n\nconst Wrapper = styled.div`\n  max-height: 30vh;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px;\n  min-height: 60px;\n`;\n\nconst Info = styled.div`\n  height: 20px;\n  display: flex;\n  color: rgba(17, 31, 44, 0.85);\n  margin: 4px 0;\n  cursor: pointer;\n\n  &:hover {\n    color: #3e88d6;\n  }\n`;\n\nconst InfoText = styled.div`\n  line-height: 20px;\n  font-size: 14px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Btns = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ConfirmBtn = styled(Button)`\n  height: 32px;\n  border-radius: 4px;\n  font-size: 14px;\n  line-height: 20px;\n  padding: 6px 15px;\n  cursor: pointer;\n  margin-left: 8px;\n  border: 0;\n  background: #2364e8;\n  color: #ffffff !important;\n\n  &:hover, &:focus {\n    background: #2364e8;\n  }\n`;\n\nconst ErrorInfo = styled.p`\n  color: #ff5219;\n  font-size: 12px;\n  line-height: 17px;\n  margin: 4px 12px 0;\n  max-width: 448px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst FormulaInput = styled(Textarea)`\n  outline: 0;\n  resize: none;\n  padding: 6px 8px;\n  outline: 0;\n  margin: 12px 12px 0;\n  border-radius: 4px;\n  border: 1px solid #006AFE;\n  box-shadow: 0px 0px 0px 3px rgba(0, 106, 254, 0.12);\n  font-size: 14px;\n  line-height: 1.5;\n  color: #171A1D;\n  cursor: text;\n  white-space: pre-wrap;\n  word-break: break-word;\n\n  &::placeholder {\n    color: rgba(23, 26, 29, 0.24);\n  }\n`;\n\nconst HelpIcon = styled(HelpBetaNormal)`\n  width: 20px;\n  height: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default class FormulaTextarea extends React.PureComponent<Props> {\n  private get errorMessage() {\n    const { formula } = this.props;\n    try {\n      getKatexString(formula, true);\n      return undefined;\n    } catch (e) {\n      if (e instanceof ParseError) {\n        return e.message.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private renderErrorMessage() {\n    if (!this.errorMessage) {\n      return null;\n    }\n\n    return (\n      <ErrorInfo>{this.errorMessage}</ErrorInfo>\n    );\n  }\n\n  render() {\n    const { locale, formula, textareaRef } = this.props\n    return (\n      <Wrapper data-cangjie-not-editable>\n        <FormulaInput\n          minRows={2}\n          onChange={this.onChange}\n          placeholder={locale.textareaPlaceholder}\n          spellCheck={false}\n          value={formula}\n          ref={textareaRef}\n        />\n        { this.renderErrorMessage() }\n        <Footer>\n          <Info onClick={this.openWikiBook}>\n            <HelpIcon />\n            <InfoText>\n              {locale.info}\n            </InfoText>\n          </Info>\n          <Btns>\n            <ConfirmBtn\n              onClick={this.onClickConFirm}\n            >\n              {locale.confirm}\n            </ConfirmBtn>\n          </Btns>\n        </Footer>\n      </Wrapper>\n    );\n  }\n\n  private onClickConFirm = () => {\n    this.props.onButtonClick();\n  };\n\n  private onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const text = e.currentTarget.value;\n    if (this.props.formula !== text) {\n      this.props.onChange(text);\n    }\n  };\n\n  private openWikiBook = () => {\n    window.open(this.props.config?.jumpToUrl);\n  };\n}\n"],"file":"textarea.js"}