{"version":3,"sources":["../../../../../src/plugins/formula/commands/setInjection.ts"],"names":["Injection","setInjection","controller","key","data","injections","value","injection","create","setInjections","filter","inj"],"mappings":"AAAA,SAAqBA,SAArB,QAAsC,oBAAtC;AAEA,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAA8CC,GAA9C,EAA2DC,IAA3D,EAAsF;AAAA,MACnFC,UADmF,GACpEH,UAAU,CAACI,KADyD,CACnFD,UADmF;AAE3F,MAAME,SAAS,GAAGP,SAAS,CAACQ,MAAV,CAAiB;AACjCL,IAAAA,GAAG,EAAHA,GADiC;AAEjCC,IAAAA,IAAI,EAAJA;AAFiC,GAAjB,CAAlB;AAIA,SAAOF,UAAU,CAACO,aAAX,WACFJ,UAAU,CAACK,MAAX,CAAkB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACR,GAAJ,KAAYA,GAAhB;AAAA,GAArB,CADE,GAELI,SAFK,GAAP;AAID","sourcesContent":["import { Controller, Injection } from '@ali/4ever-cangjie';\n\nexport function setInjection(controller: Controller, key: string, data: Record<string, any>) {\n  const { injections } = controller.value;\n  const injection = Injection.create({\n    key,\n    data,\n  });\n  return controller.setInjections([\n    ...injections.filter(inj => inj.key !== key),\n    injection,\n  ]);\n}\n"],"file":"setInjection.js"}