{"version":3,"sources":["../../../../../src/plugins/columns/commands/setColumnsItemData.ts"],"names":["Commands","Selection","TableCell","setColumnsItemData","controller","key","data","node","value","document","getNode","isTableCell","color","range","selection","create","moveToRangeOfNode","convertToTextPoints","command","select","dispatch","moveToStart","dataParams","newData","setNodeByKey"],"mappings":";AAAA,SAAqBA,QAArB,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,eAAe,SAASC,kBAAT,CACbC,UADa,EAEbC,GAFa,EAGbC,IAHa,EAIb;AACA,MAAMC,IAAI,GAAGH,UAAU,CAACI,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCL,GAAlC,CAAb;;AACA,MAAI,CAACH,SAAS,CAACS,WAAV,CAAsBJ,IAAtB,CAAL,EAAkC;AAChC,WAAOH,UAAP;AACD;;AACD,MAAI,QAAOE,IAAP,oBAAOA,IAAI,CAAEM,KAAb,MAAuB,QAA3B,EAAqC;AAAA,4BACIR,UAAU,CAACI,KADf;AAAA,QAChBK,KADgB,qBAC3BC,SAD2B;AAAA,QACTL,QADS,qBACTA,QADS;AAEnC,QAAMK,SAAS,GAAGb,SAAS,CAACc,MAAV,CAChBF,KAAK,CAACG,iBAAN,CAAwBT,IAAxB,EAA8BH,UAA9B,EAA0Ca,mBAA1C,CAA8DR,QAA9D,CADgB,CAAlB;AAGAL,IAAAA,UAAU,CAACc,OAAX,CAAmBlB,QAAQ,CAACmB,MAA5B,EAAoCL,SAApC;AACAV,IAAAA,UAAU,CAACgB,QAAX,CAAoB,UAApB,EAAgCd,IAAhC,oBAAgCA,IAAI,CAAEM,KAAtC;AACAR,IAAAA,UAAU,CAACc,OAAX,CAAmBlB,QAAQ,CAACqB,WAA5B;AACD;;AACD,MAAMC,UAAU,GAAGhB,IAAI,IAAI,EAA3B;;AACA,MAAMiB,OAAO,gBACRhB,IAAI,CAACD,IADG,EAERgB,UAFQ,CAAb;;AAKA,SAAOlB,UAAU,CAACc,OAAX,CAAmBlB,QAAQ,CAACwB,YAA5B,EAA0CnB,GAA1C,EAA+C;AACpDC,IAAAA,IAAI,EAAEiB;AAD8C,GAA/C,CAAP;AAGD","sourcesContent":["import { Controller, Commands, Selection } from '@ali/4ever-cangjie';\nimport { TableCell } from '@ali/4ever-mo';\n\nexport default function setColumnsItemData(\n  controller: Controller,\n  key: string,\n  data?: any,\n) {\n  const node = controller.value.document.getNode(key);\n  if (!TableCell.isTableCell(node)) {\n    return controller;\n  }\n  if (typeof data?.color === 'string') {\n    const { selection: range, document } = controller.value;\n    const selection = Selection.create(\n      range.moveToRangeOfNode(node, controller).convertToTextPoints(document),\n    );\n    controller.command(Commands.select, selection);\n    controller.dispatch('setColor', data?.color);\n    controller.command(Commands.moveToStart);\n  }\n  const dataParams = data || {};\n  const newData = {\n    ...node.data,\n    ...dataParams,\n  };\n\n  return controller.command(Commands.setNodeByKey, key, {\n    data: newData,\n  });\n}\n"],"file":"setColumnsItemData.js"}