import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { TBItemSlot } from '@ali/we-design-next';
import { ColorIconMenu } from "./components/next/colorIconMenu";
export default function createRenderHoverToolbar(config) {
  return function (props, controller, getNode) {
    var _config$locale;

    var buttonName = props.buttonName,
        extraProps = props.extraProps;

    switch (buttonName) {
      case 'style':
        return getNode() ? /*#__PURE__*/_createElement(TBItemSlot, {
          display: "iconButton"
        }, /*#__PURE__*/_createElement(ColorIconMenu, _extends({
          controller: controller,
          getNode: getNode,
          tooltip: (_config$locale = config.locale) == null ? void 0 : _config$locale.colorTitle
        }, extraProps))) : null;

      default:
        return null;
    }
  };
}
//# sourceMappingURL=createRenderHoverToolbar.js.map