{"version":3,"sources":["../../../../../src/plugins/quickPreview/hooks/onAction.ts"],"names":["Commands","Actions","findNativeTextArea","getScreenSelection","createOnAction","configs","onToggleMode","handleAction","action","controller","next","type","ENTER","setData","value","data","_exitPreview","_mobileFocusedSelection","undefined","EXIT","payload","noScroll","noFocus","selection","command","select","run","textArea","focus","preventScroll"],"mappings":";AAAA,SAA6BA,QAA7B,QAA6C,oBAA7C;AACA,OAAOC,OAAP;AAEA,OAAOC,kBAAP;AACA,SAASC,kBAAT;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAuD;AAAA,aAC3CA,OAAO,IAAI,EADgC;AAAA,MAC5DC,YAD4D,QAC5DA,YAD4D;;AAEpE,SAAO,SAASC,YAAT,CACLC,MADK,EAELC,UAFK,EAGLC,IAHK,EAIL;AACA,QAAIF,MAAM,CAACG,IAAP,KAAgBV,OAAO,CAACW,KAA5B,EAAmC;AACjCH,MAAAA,UAAU,CAACI,OAAX,cACKJ,UAAU,CAACK,KAAX,CAAiBC,IADtB;AAEEC,QAAAA,YAAY,EAAE,KAFhB;AAGE;AACAC,QAAAA,uBAAuB,EAAEC;AAJ3B;AAMAZ,MAAAA,YAAY,IAAIA,YAAY,CAAC,IAAD,CAA5B;AACD,KARD,MAQO,IAAIE,MAAM,CAACG,IAAP,KAAgBV,OAAO,CAACkB,IAA5B,EAAkC;AAAA,kBACTX,MAAM,CAACY,OAAP,IAAkB,EADT;AAAA,UAC/BC,QAD+B,SAC/BA,QAD+B;AAAA,UACrBC,OADqB,SACrBA,OADqB;;AAAA,UAE/BP,IAF+B,GAEtBN,UAAU,CAACK,KAFW,CAE/BC,IAF+B;AAGvC,UAAMQ,SAAS,GAAGF,QAAQ,GAAG,IAAH,GAAUlB,kBAAkB,CAACM,UAAD,CAAtD;;AACA,UAAIc,SAAJ,EAAe;AACbd,QAAAA,UAAU,CAACe,OAAX,CAAmBxB,QAAQ,CAACyB,MAA5B,EAAoCF,SAApC;AACD;;AACDd,MAAAA,UAAU,CAACI,OAAX,cAAwBE,IAAxB;AAA8BC,QAAAA,YAAY,EAAE;AAA5C;AACAV,MAAAA,YAAY,IAAIA,YAAY,CAAC,KAAD,CAA5B;;AAEA,UAAI,CAACgB,OAAL,EAAc;AACZb,QAAAA,UAAU,CAACiB,GAAX,CAAe,gBAAf;AACA,YAAMC,QAAQ,GAAGzB,kBAAkB,CAACO,UAAD,CAAnC;;AACA,YAAIkB,QAAJ,YAAIA,QAAQ,CAAEC,KAAd,EAAqB;AACnBD,UAAAA,QAAQ,CAACC,KAAT,CAAe;AACbC,YAAAA,aAAa,EAAE;AADF,WAAf;AAGD;AACF;AACF;;AACD,WAAOnB,IAAI,EAAX;AACD,GAlCD;AAmCD","sourcesContent":["import { Action, Controller, Commands } from '@ali/4ever-cangjie';\nimport Actions from '../actions';\nimport { QuickPreviewConfigs } from '../types';\nimport findNativeTextArea from '../utils/findNativeTextArea';\nimport { getScreenSelection } from '../utils/getScreenSelection';\n\nexport default function createOnAction(configs?: QuickPreviewConfigs) {\n  const { onToggleMode } = configs || {};\n  return function handleAction(\n    action: Action,\n    controller: Controller,\n    next: any,\n  ) {\n    if (action.type === Actions.ENTER) {\n      controller.setData({\n        ...controller.value.data,\n        _exitPreview: false,\n        // 进入预览模式时，需要隐藏弹出菜单\n        _mobileFocusedSelection: undefined,\n      });\n      onToggleMode && onToggleMode(true);\n    } else if (action.type === Actions.EXIT) {\n      const { noScroll, noFocus } = action.payload || {};\n      const { data } = controller.value;\n      const selection = noScroll ? null : getScreenSelection(controller);\n      if (selection) {\n        controller.command(Commands.select, selection);\n      }\n      controller.setData({ ...data, _exitPreview: true });\n      onToggleMode && onToggleMode(false);\n\n      if (!noFocus) {\n        controller.run('onCangjieFocus');\n        const textArea = findNativeTextArea(controller);\n        if (textArea?.focus) {\n          textArea.focus({\n            preventScroll: true,\n          });\n        }\n      }\n    }\n    return next();\n  };\n}\n"],"file":"onAction.js"}