import _extends from "@babel/runtime/helpers/extends";
import { Commands } from '@ali/4ever-cangjie';
import { isKeyHotkey } from 'is-hotkey';
var isEnterHotKey = isKeyHotkey('enter'); // 回车清除段落底纹

var onKeyDown = function onKeyDown(event, controller, next) {
  next();
  var _controller$value = controller.value,
      startBlock = _controller$value.startBlock,
      selection = _controller$value.selection;

  if (isEnterHotKey(event) && startBlock && selection.isCollapsed) {
    var data = startBlock.data,
        key = startBlock.key;

    if (!data.shd || !data.shd.fill) {
      return controller;
    }

    var newData = _extends({}, data);

    var list = newData.list;

    if (list && list.level !== 0) {
      // 非首级列表继承样式,不清除
      return controller;
    }

    delete newData.shd;
    return controller.command(Commands.setNodeByKey, key, {
      data: newData
    });
  }

  return controller;
};

export default onKeyDown;
//# sourceMappingURL=onKeyDown.js.map