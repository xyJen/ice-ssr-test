{"version":3,"sources":["../../../../../src/plugins/embed/mobile/embed.tsx"],"names":["React","PureComponent","EmbedPlugin","useScrollableContainer","EmbedInlineToolbar","MobileEmbedCard","Embed","ref","createRef","previewRef","getNodeData","node","props","data","renderCard","name","src","type","size","onPreview","renderInlineToolbar","controller","locale","current","render","attributes","isSelected","Container","scrollableContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;qBAC4B,a;AAC5B,SACEC,WADF,EAEEC,sBAFF,QAGO,mBAHP;AAIA,SAASC,kBAAT,QAAmC,oBAAnC;IAGEC,e,GACEH,W,CADFG,e;;IAeIC,K;;;;;;;;;;;UACJC,G,gBAAMP,KAAK,CAACQ,SAAN,E;UAENC,U,gBAAaT,KAAK,CAACQ,SAAN,E;;UAEbE,W,GAAc,YAAM;AAAA,UACVC,IADU,GACD,MAAKC,KADJ,CACVD,IADU;;AAAA,iBAEDA,IAAI,IAAI,EAFP;AAAA,UAEVE,IAFU,QAEVA,IAFU;;AAGlB,aAAOA,IAAP;AACD,K;;;;;;;SAEDC,U,GAAA,sBAAa;AAAA,4BACuB,KAAKJ,WAAL,EADvB;AAAA,QACHK,IADG,qBACHA,IADG;AAAA,QACGC,GADH,qBACGA,GADH;AAAA,QACQC,IADR,qBACQA,IADR;AAAA,QACcC,IADd,qBACcA,IADd;;AAAA,QAEHC,SAFG,GAEW,KAAKP,KAFhB,CAEHO,SAFG;AAIX,wBACE,eAAC,eAAD;AACE,MAAA,IAAI,EAAEJ,IADR;AAEE,MAAA,SAAS,EAAEI,SAFb;AAGE,MAAA,GAAG,EAAEH,GAHP;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,IAAI,EAAEC;AALR,MADF;AASD,G;;SAEDE,mB,GAAA,+BAAsB;AAAA,sBACiB,KAAKR,KADtB;AAAA,QACZS,UADY,eACZA,UADY;AAAA,QACAV,IADA,eACAA,IADA;AAAA,QACMW,MADN,eACMA,MADN;AAGpB,wBACE,eAAC,kBAAD;AACE,MAAA,UAAU,EAAED,UADd;AAEE,MAAA,IAAI,EAAEV,IAFR;AAGE,MAAA,MAAM,EAAEW,MAHV;AAIE,MAAA,WAAW,EAAE,KAAKf,GAAL,CAASgB;AAJxB,MADF;AAQD,G;;SAEDC,M,GAAA,kBAAS;AAAA,uBAC4B,KAAKZ,KADjC;AAAA,QACCa,UADD,gBACCA,UADD;AAAA,QACaC,UADb,gBACaA,UADb;AAEP,wBACE,eAAC,KAAD,CAAO,QAAP,QACGA,UAAU,GAAG,KAAKN,mBAAL,EAAH,GAAgC,IAD7C,eAEE,mCAASK,UAAT;AAAqB,MAAA,GAAG,EAAE,KAAKlB;AAA/B,QACG,KAAKO,UAAL,EADH,CAFF,CADF;AAQD,G;;;EAjDiBb,a;;AAoDpB,IAAM0B,SAA2B,GAAG,SAA9BA,SAA8B,CAACf,KAAD,EAAW;AAC7C,MAAMgB,mBAAmB,GAAGzB,sBAAsB,EAAlD;AAEA,sBAAO,eAAC,KAAD,eAAWS,KAAX;AAAkB,IAAA,mBAAmB,EAAEgB;AAAvC,KAAP;AACD,CAJD;;AAMA,eAAeD,SAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport {\n  EmbedPlugin,\n  useScrollableContainer,\n} from '@ali/4ever-bamboo';\nimport { EmbedInlineToolbar } from '@ali/4ever-factory';\n\nconst {\n  MobileEmbedCard,\n} = EmbedPlugin;\n\ninterface IProps {\n  controller: Controller;\n  attributes: any;\n  node: any;\n  locale: any;\n  mobile: boolean;\n  isSelected: boolean;\n  onDownload: Function;\n  onPreview?: (src: string) => void;\n  scrollableContainer: HTMLElement | Window;\n}\n\nclass Embed extends PureComponent<IProps> {\n  ref = React.createRef<HTMLDivElement>();\n\n  previewRef = React.createRef();\n\n  getNodeData = () => {\n    const { node } = this.props;\n    const { data } = node || {};\n    return data;\n  };\n\n  renderCard() {\n    const { name, src, type, size } = this.getNodeData();\n    const { onPreview } = this.props;\n\n    return (\n      <MobileEmbedCard\n        name={name}\n        onPreview={onPreview}\n        src={src}\n        type={type}\n        size={size}\n      />\n    );\n  }\n\n  renderInlineToolbar() {\n    const { controller, node, locale } = this.props;\n\n    return (\n      <EmbedInlineToolbar\n        controller={controller}\n        node={node}\n        locale={locale}\n        triggerNode={this.ref.current}\n      />\n    );\n  }\n\n  render() {\n    const { attributes, isSelected } = this.props;\n    return (\n      <React.Fragment>\n        {isSelected ? this.renderInlineToolbar() : null}\n        <div {...attributes} ref={this.ref}>\n          {this.renderCard()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Container: React.FC<IProps> = (props) => {\n  const scrollableContainer = useScrollableContainer();\n\n  return <Embed {...props} scrollableContainer={scrollableContainer} />;\n};\n\nexport default Container;\n"],"file":"embed.js"}