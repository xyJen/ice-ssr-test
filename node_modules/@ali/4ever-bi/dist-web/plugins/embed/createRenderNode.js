import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import Embed from "./components/embed";
import { UploadOrFailedCard } from '@ali/4ever-factory';
export default function createRenderNode(config) {
  var embedConfig = config.embed || {};
  var _embedConfig$locale = embedConfig.locale,
      embedLocaleConfig = _embedConfig$locale === void 0 ? {} : _embedConfig$locale,
      downloadFile = embedConfig.downloadFile,
      transformDocURL = embedConfig.transformDocURL,
      _embedConfig$enableFi = embedConfig.enableFilePreview,
      enableFilePreview = _embedConfig$enableFi === void 0 ? true : _embedConfig$enableFi,
      allowDownload = embedConfig.allowDownload;
  return {
    embed: function embed(props, controller, next) {
      var node = props.node;

      if (!node.data.src) {
        return /*#__PURE__*/_createElement(UploadOrFailedCard, _extends({}, props, {
          node: node,
          locale: embedLocaleConfig,
          controller: controller
        }));
      } else if (node.data.type !== 'video' && node.data.type !== 'audio') {
        return /*#__PURE__*/_createElement(Embed, _extends({}, props, {
          controller: controller,
          onDownload: downloadFile,
          onPreview: transformDocURL,
          locale: embedLocaleConfig,
          enableFilePreview: enableFilePreview,
          allowDownload: allowDownload
        }));
      }

      return next();
    }
  };
}
//# sourceMappingURL=createRenderNode.js.map