{"version":3,"sources":["../../../../../src/plugins/embed/components/embed.tsx"],"names":["React","PureComponent","useZoom","useZoomContainer","sanitizeUrl","EmbedPlugin","useScrollableContainer","theme","EmbedFilePreviewWrapper","PreviewContentWrapper","EmbedFilePreviewMask","PreviewError","PreviewErrorText","PreviewErrorRetry","updateFile","Resizable","EmbedInlineToolbar","DEFAULT_PREVIEW_HEIGHT","embed","previewHeight","EmbedPreviewHeader","EmbedDownloadButton","EmbedCard","MIN_PREVIEW_HEIGHT","MAX_PREVIEW_HEIGHT","HEIGHT_RANGE","Embed","props","ref","createRef","interval","previewTimeout","previewUnfoldTimeout","getNodeData","node","data","onSwitchViewType","viewType","controller","prevViewType","run","setState","previewUrl","onDownloadFile","src","name","type","size","onDownload","handleResizeStart","dragging","handleResize","e","height","handleResizeStop","state","previewSize","showPreviewSlideDown","setTimeout","preview","previewing","onPreview","then","res","truePreviewUrl","previewError","reTryPreview","allowDownload","componentDidMount","componentDidUpdate","prevProps","prevData","componentWillUnmount","clearTimeout","clearInterval","renderCard","isSelected","locale","renderPreviewContent","width","border","background","renderPreview","scale","zoomContainer","transitionProperty","handlePreviewContentMouseDown","preventDefault","enableBorderHighlight","query","Infinity","Math","min","title","display","renderInlineToolbar","enableFilePreview","current","render","attributes","isCollapsed","value","selection","Container","scrollableContainer","document","body"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;qBAC4B,a;AAA5B,SACEC,OADF,EAEEC,gBAFF,QAIO,oBAJP;AAKA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACEC,WADF,EAEEC,sBAFF,EAIEC,KAJF,QAKO,mBALP;AAMA,SACEC,uBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,iBANF;AAQA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;IAGuBC,sB,GAA2BV,KAAK,CAACW,K,CAAhDC,a;IAGNC,kB,GACEf,W,CADFe,kB;IAAoBC,mB,GAClBhB,W,CADkBgB,mB;IAAqBC,S,GACvCjB,W,CADuCiB,S;AAuB3C,IAAMC,kBAAkB,GAAG,GAA3B;AACA,IAAMC,kBAAkB,GAAG,GAA3B;AAEA,IAAMC,YAAY,GAAG,CAACF,kBAAD,EAAqBC,kBAArB,CAArB;;IAKME,K;;;AASJ,iBAAYC,KAAZ,EAA2B;AAAA;;AACzB,sCAAMA,KAAN;AADyB,UAR3BC,GAQ2B,gBARrB5B,KAAK,CAAC6B,SAAN,EAQqB;AAAA,UAN3BC,QAM2B,GANhB,IAMgB;AAAA,UAJ3BC,cAI2B,GAJV,IAIU;AAAA,UAF3BC,oBAE2B,GAFJ,IAEI;;AAAA,UA8B3BC,WA9B2B,GA8Bb,YAAM;AAAA,UACVC,IADU,GACD,MAAKP,KADJ,CACVO,IADU;AAAA,UAEVC,IAFU,GAEDD,IAFC,CAEVC,IAFU;AAGlB,aAAOA,IAAP;AACD,KAlC0B;;AAAA,UAkF3BC,gBAlF2B,GAkFR,UAACC,QAAD,EAAsB;AAAA,wBACV,MAAKV,KADK;AAAA,UAC/BW,UAD+B,eAC/BA,UAD+B;AAAA,UACnBJ,IADmB,eACnBA,IADmB;AAAA,UAE/BC,IAF+B,GAEtBD,IAFsB,CAE/BC,IAF+B;;AAAA,8BAGJ,MAAKF,WAAL,EAHI;AAAA,UAGrBM,YAHqB,qBAG/BF,QAH+B;;AAIvC,UAAIE,YAAY,KAAKF,QAArB,EAA+B;AAC7B;AACD;;AACDC,MAAAA,UAAU,CAACE,GAAX,CACE,UADF,EAEE1B,UAAU,CACRoB,IADQ,eAGHC,IAHG;AAINE,QAAAA,QAAQ,EAARA;AAJM,SAFZ;;AAWA,UAAIA,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,cAAKI,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF,KAzG0B;;AAAA,UA2G3BC,cA3G2B,GA2GV,YAAM;AAAA,+BACa,MAAKV,WAAL,EADb;AAAA,UACbW,GADa,sBACbA,GADa;AAAA,UACRC,IADQ,sBACRA,IADQ;AAAA,UACFC,IADE,sBACFA,IADE;AAAA,UACIC,IADJ,sBACIA,IADJ;;AAAA,UAEbC,UAFa,GAEE,MAAKrB,KAFP,CAEbqB,UAFa;;AAGrB,UAAIA,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACJ,GAAD,EAAM;AACdC,UAAAA,IAAI,EAAJA,IADc;AAEdC,UAAAA,IAAI,EAAJA,IAFc;AAGdC,UAAAA,IAAI,EAAJA;AAHc,SAAN,CAAV;AAKD;AACF,KArH0B;;AAAA,UAuH3BE,iBAvH2B,GAuHP,YAAM;AACxB,YAAKR,QAAL,CAAc;AACZS,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KA3H0B;;AAAA,UA6H3BC,YA7H2B,GA6HZ,UAACC,CAAD,EAAIL,IAAJ,EAAiC;AAC9C,YAAKN,QAAL,CAAc;AACZY,QAAAA,MAAM,EAAEN,IAAI,CAACM;AADD,OAAd;AAGD,KAjI0B;;AAAA,UAmI3BC,gBAnI2B,GAmIR,YAAM;AAAA,UACfD,MADe,GACJ,MAAKE,KADD,CACfF,MADe;AAAA,yBAEM,MAAK1B,KAFX;AAAA,UAEfW,UAFe,gBAEfA,UAFe;AAAA,UAEHJ,IAFG,gBAEHA,IAFG;AAAA,UAGfC,IAHe,GAGND,IAHM,CAGfC,IAHe;;AAIvB,YAAKM,QAAL,CAAc;AACZS,QAAAA,QAAQ,EAAE;AADE,OAAd;;AAGAZ,MAAAA,UAAU,CAACE,GAAX,CACE,UADF,EAEE1B,UAAU,CACRoB,IADQ,eAGHC,IAHG;AAINqB,QAAAA,WAAW,EAAE;AACXH,UAAAA,MAAM,EAANA;AADW;AAJP,SAFZ;AAYD,KAtJ0B;;AAAA,UAwJ3BI,oBAxJ2B,GAwJJ,YAAM;AAC3B;AACA,YAAK1B,cAAL,GAAsB2B,UAAU,CAAC,YAAM;AACrC,cAAKjB,QAAL,CAAc;AACZY,UAAAA,MAAM,EAAE;AADI,SAAd;AAGD,OAJ+B,CAAhC;AAKA,YAAKrB,oBAAL,GAA4B0B,UAAU,CAAC,YAAM;AAC3C,cAAKjB,QAAL,CAAc;AACZY,UAAAA,MAAM,EAAEpC;AADI,SAAd;AAGD,OAJqC,EAInC,EAJmC,CAAtC;AAKD,KApK0B;;AAAA,UAsK3B0C,OAtK2B,GAsKjB,YAAM;AAAA,UACNC,UADM,GACS,MAAKL,KADd,CACNK,UADM;;AAAA,+BAEE,MAAK3B,WAAL,EAFF;AAAA,UAENW,GAFM,sBAENA,GAFM;;AAAA,UAGNiB,SAHM,GAGQ,MAAKlC,KAHb,CAGNkC,SAHM;;AAKd,UAAID,UAAJ,EAAgB;AACd;AACD;;AACD,YAAKnB,QAAL,CAAc;AACZmB,QAAAA,UAAU,EAAE;AADA,OAAd;;AAGA,UAAI,CAACC,SAAL,EAAgB;AACd;AACD;;AACDA,MAAAA,SAAS,CAACjB,GAAD,CAAT,CACGkB,IADH,CACQ,UAACC,GAAD,EAAS;AAAA,YACOC,cADP,GAC0BD,GAD1B,CACLrB,UADK;;AAEb,YAAIsB,cAAJ,EAAoB;AAClB,gBAAKvB,QAAL,CAAc;AACZC,YAAAA,UAAU,EAAEsB,cADA;AAEZJ,YAAAA,UAAU,EAAE;AAFA,WAAd;AAID;AACF,OATH,WAUS,YAAM;AACX,cAAKnB,QAAL,CAAc;AACZwB,UAAAA,YAAY,EAAE,IADF;AAEZL,UAAAA,UAAU,EAAE;AAFA,SAAd;AAID,OAfH;AAgBD,KApM0B;;AAAA,UAsM3BM,YAtM2B,GAsMZ,YAAM;AACnB,YAAKzB,QAAL,CAAc;AACZwB,QAAAA,YAAY,EAAE;AADF,OAAd;;AAGA,YAAKN,OAAL;AACD,KA3M0B;;AAAA,QAGjBzB,KAHiB,GAGOP,KAHP,CAGjBO,IAHiB;AAAA,QAGXiC,aAHW,GAGOxC,KAHP,CAGXwC,aAHW;AAAA,QAIjBhC,KAJiB,GAIRD,KAJQ,CAIjBC,IAJiB;AAAA,QAMvBqB,WANuB,GAQrBrB,KARqB,CAMvBqB,WANuB;AAAA,QAOvBnB,SAPuB,GAQrBF,KARqB,CAOvBE,QAPuB;AAUzB,QAAIgB,OAAM,GAAG,CAAb;;AACA,QAAIhB,SAAQ,KAAK,SAAjB,EAA4B;AAC1B,UAAImB,WAAJ,EAAiB;AACf;AACAH,QAAAA,OAAM,GAAGG,WAAW,CAACH,MAArB;AACD,OAHD,MAGO;AACLA,QAAAA,OAAM,GAAGpC,sBAAT;AACD;AACF;;AAED,UAAKsC,KAAL,GAAa;AACXF,MAAAA,MAAM,EAANA,OADW;AAEXX,MAAAA,UAAU,EAAE,EAFD;AAGXuB,MAAAA,YAAY,EAAE,KAHH;AAIXL,MAAAA,UAAU,EAAE,KAJD;AAKXV,MAAAA,QAAQ,EAAE,KALC;AAMXiB,MAAAA,aAAa,EAAE,OAAOA,aAAP,KAAyB,SAAzB,GAAqCA,aAArC,GAAqD,KANzD,CAMgE;;AANhE,KAAb;AApByB;AA4B1B;;;;SAQDC,iB,GAAA,6BAAoB;AAAA;;AAAA,6BACF,KAAKnC,WAAL,EADE;AAAA,QACVW,GADU,sBACVA,GADU;;AAAA,uBAEc,KAAKjB,KAFnB;AAAA,QAEVO,IAFU,gBAEVA,IAFU;AAAA,QAEJiC,aAFI,gBAEJA,aAFI;AAAA,QAGVhC,IAHU,GAGDD,IAHC,CAGVC,IAHU;AAAA,QAIVE,QAJU,GAIGF,IAJH,CAIVE,QAJU;;AAMlB,QAAIA,QAAQ,KAAK,SAAb,IAA0BO,GAA9B,EAAmC;AACjC,WAAKe,OAAL;AACD;;AAED,QAAI,OAAOQ,aAAP,KAAyB,UAA7B,EAAyC;AACvCA,MAAAA,aAAa,CAACvB,GAAD,CAAb,CAAmBkB,IAAnB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,QAAA,MAAI,CAACtB,QAAL,CAAc;AACZ0B,UAAAA,aAAa,EAAEJ;AADH,SAAd;AAGD,OAJD;AAKD;AACF,G;;SAEDM,kB,GAAA,4BAAmBC,SAAnB,EAA8B;AAAA,QACdC,QADc,GACDD,SAAS,CAACpC,IADT,CACpBC,IADoB;AAAA,QAEpBA,IAFoB,GAEX,KAAKR,KAAL,CAAWO,IAFA,CAEpBC,IAFoB;AAAA,QAGVI,YAHU,GAGOgC,QAHP,CAGpBlC,QAHoB;AAAA,QAIpBA,QAJoB,GAIPF,IAJO,CAIpBE,QAJoB;;AAM5B,QAAIE,YAAY,KAAKF,QAAjB,IAA6BA,QAAQ,KAAK,SAA9C,EAAyD;AACvD,WAAKoB,oBAAL;AACA,WAAKE,OAAL;AACD;AACF,G;;SAEDa,oB,GAAA,gCAAuB;AACrB,QAAI,KAAKzC,cAAT,EAAyB;AACvB0C,MAAAA,YAAY,CAAC,KAAK1C,cAAN,CAAZ;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACD;;AACD,QAAI,KAAKC,oBAAT,EAA+B;AAC7ByC,MAAAA,YAAY,CAAC,KAAKzC,oBAAN,CAAZ;AACA,WAAKA,oBAAL,GAA4B,IAA5B;AACD;;AACD,QAAI,KAAKF,QAAT,EAAmB;AACjB4C,MAAAA,aAAa,CAAC,KAAK5C,QAAN,CAAb;AACA,WAAKA,QAAL,GAAgB,IAAhB;AACD;AACF,G;;SA6HD6C,U,GAAA,sBAAa;AAAA,QACHR,aADG,GACe,KAAKZ,KADpB,CACHY,aADG;;AAAA,6BAEY,KAAKlC,WAAL,EAFZ;AAAA,QAEHY,IAFG,sBAEHA,IAFG;AAAA,QAEGE,IAFH,sBAEGA,IAFH;;AAAA,uBAG0B,KAAKpB,KAH/B;AAAA,QAGHiD,UAHG,gBAGHA,UAHG;AAAA,QAGS1C,IAHT,gBAGSA,IAHT;AAAA,QAGe2C,MAHf,gBAGeA,MAHf;AAIX,wBACE,eAAC,SAAD;AACE,MAAA,IAAI,EAAEhC,IADR;AAEE,MAAA,aAAa,EAAEsB,aAFjB;AAGE,MAAA,UAAU,EAAES,UAHd;AAIE,MAAA,IAAI,EAAE1C,IAJR;AAKE,MAAA,MAAM,EAAE2C,MALV;AAME,MAAA,cAAc,EAAE,KAAKlC,cANvB;AAOE,MAAA,IAAI,EAAEI;AAPR,MADF;AAWD,G;;SAED+B,oB,GAAA,gCAAuB;AAAA,sBACgB,KAAKvB,KADrB;AAAA,QACbb,UADa,eACbA,UADa;AAAA,QACDuB,YADC,eACDA,YADC;AAAA,6BAEG,KAAKtC,KAFR,CAEbkD,MAFa;AAAA,QAEbA,MAFa,mCAEJ,EAFI;;AAIrB,QAAIZ,YAAJ,EAAkB;AAChB,0BACE,eAAC,YAAD,qBACE,eAAC,gBAAD,QACGY,MAAM,CAACZ,YADV,eAEE,eAAC,iBAAD;AAAmB,QAAA,OAAO,EAAE,KAAKC;AAAjC,SACGW,MAAM,CAACX,YADV,CAFF,CADF,CADF;AAUD;;AAED,wBACE,eAAC,KAAD,CAAO,QAAP,QACGxB,UAAU,gBACT;AACE,MAAA,KAAK,EAAE;AACLqC,QAAAA,KAAK,EAAE,MADF;AAEL1B,QAAAA,MAAM,EAAE,MAFH;AAGL2B,QAAAA,MAAM,EAAE,MAHH;AAILC,QAAAA,UAAU,EAAE;AAJP,OADT;AAOE,MAAA,KAAK,EAAC,SAPR;AAQE,MAAA,GAAG,EAAE7E,WAAW,CAACsC,UAAD;AARlB,MADS,GAWP,IAZN,CADF;AAgBD,G;;SAEDwC,a,GAAA,yBAAgB;AAAA;;AAAA,uBAC8B,KAAK3B,KADnC;AAAA,QACNF,MADM,gBACNA,MADM;AAAA,QACEH,QADF,gBACEA,QADF;AAAA,QACYiB,aADZ,gBACYA,aADZ;;AAAA,6BAEe,KAAKlC,WAAL,EAFf;AAAA,QAENa,IAFM,sBAENA,IAFM;AAAA,QAEAD,IAFA,sBAEAA,IAFA;AAAA,QAEME,IAFN,sBAEMA,IAFN;;AAAA,uBAGmD,KAAKpB,KAHxD;AAAA,QAGNiD,UAHM,gBAGNA,UAHM;AAAA,QAGMO,KAHN,gBAGMA,KAHN;AAAA,QAGaC,aAHb,gBAGaA,aAHb;AAAA,QAG4BP,MAH5B,gBAG4BA,MAH5B;AAAA,QAGoCvC,UAHpC,gBAGoCA,UAHpC;AAId,QAAM+C,kBAAkB,GAAGnC,QAAQ,GAAG,MAAH,GAAY,QAA/C;;AAEA,QAAMoC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAClC,CAAD,EAAO;AAC3CA,MAAAA,CAAC,CAACmC,cAAF;AACD,KAFD;;AAIA,QAAMC,qBAAqB,GAAGlD,UAAU,CAACmD,KAAX,CAAiB,uBAAjB,CAA9B;AAEA,wBACE,eAAC,SAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,OAAO,EAAEb,UAFX;AAGE,MAAA,KAAK,EAAEc,QAHT;AAIE,MAAA,MAAM,EAAEC,IAAI,CAACC,GAAL,CAASvC,MAAM,IAAI,CAAnB,EAAsB7B,kBAAtB,CAJV;AAKE,MAAA,WAAW,EAAEC,YALf;AAME,MAAA,QAAQ,EAAE,KAAK0B,YANjB;AAOE,MAAA,YAAY,EAAE,KAAKG,gBAPrB;AAQE,MAAA,aAAa,EAAE,KAAKL,iBARtB;AASE,MAAA,KAAK,EAAE,MAAMkC,KATf;AAUE,MAAA,aAAa,EAAEC,aAVjB;AAWE,MAAA,QAAQ,EAAER,UAXZ;AAYE,MAAA,qBAAqB,EAAEY;AAZzB,oBAcE,eAAC,uBAAD;AACE,MAAA,UAAU,EAAEZ,UADd;AAEE,MAAA,KAAK,EAAE;AAAEvB,QAAAA,MAAM,EAANA,MAAF;AAAUgC,QAAAA,kBAAkB,EAAlBA;AAAV,OAFT;AAGE,qBAAY,eAHd;AAIE,8BAAoBvC;AAJtB,oBAME,eAAC,kBAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,IAAI,EAAEE,IAHR;AAIE,MAAA,WAAW,EAAE;AAAA,4BAAO,eAAC,mBAAD;AAClB,UAAA,KAAK,EAAE8B,MAAF,oBAAEA,MAAM,CAAEgB,KADG;AAElB,UAAA,cAAc,EAAE,MAAI,CAAClD,cAFH;AAGlB,UAAA,aAAa,EAAEwB;AAHG,UAAP;AAAA;AAJf,MANF,eAgBE,eAAC,qBAAD;AAAuB,MAAA,WAAW,EAAEmB;AAApC,OACG,KAAKR,oBAAL,EADH,eAEE,eAAC,oBAAD;AACE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,OAAO,EAAE,CAAClB,UAAD,IAAe1B,QAAf,GAA0B,OAA1B,GAAoC;AAA/C;AADT,MAFF,CAhBF,CAdF,CADF;AAwCD,G;;SAED6C,mB,GAAA,+BAAsB;AAAA,uBACoC,KAAKpE,KADzC;AAAA,QACZW,UADY,gBACZA,UADY;AAAA,QACAJ,IADA,gBACAA,IADA;AAAA,QACM2C,MADN,gBACMA,MADN;AAAA,QACcmB,iBADd,gBACcA,iBADd;AAEpB,wBACE,eAAC,kBAAD;AACE,MAAA,UAAU,EAAE1D,UADd;AAEE,MAAA,IAAI,EAAEJ,IAFR;AAGE,MAAA,WAAW,EAAE,KAAKN,GAAL,CAASqE,OAHxB;AAIE,MAAA,MAAM,EAAEpB,MAAM,IAAI,EAJpB;AAKE,MAAA,gBAAgB,EAAE,KAAKzC,gBALzB;AAME,MAAA,iBAAiB,EAAE4D;AANrB,MADF;AAUD,G;;SAEDE,M,GAAA,kBAAS;AAAA,6BACc,KAAKjE,WAAL,EADd;AAAA,QACCI,QADD,sBACCA,QADD;;AAAA,uBAEwC,KAAKV,KAF7C;AAAA,QAECwE,UAFD,gBAECA,UAFD;AAAA,QAEavB,UAFb,gBAEaA,UAFb;AAAA,QAEyBtC,UAFzB,gBAEyBA,UAFzB;AAAA,QAGC8D,WAHD,GAGiB9D,UAAU,CAAC+D,KAAX,CAAiBC,SAHlC,CAGCF,WAHD,EAIP;;AACA,wBACE,eAAC,KAAD,CAAO,QAAP,QACGxB,UAAU,IAAIwB,WAAd,GAA4B,KAAKL,mBAAL,EAA5B,GAAyD,IAD5D,eAEE,mCACMI,UADN;AAEE,MAAA,GAAG,EAAE,KAAKvE;AAFZ,QAIGS,QAAQ,KAAK,SAAb,GAAyB,KAAK6C,aAAL,EAAzB,GAAgD,KAAKP,UAAL,EAJnD,CAFF,CADF;AAWD,G;;;EA9ViB1E,a;;AAiWpB,IAAMsG,SAA2B,GAAG,SAA9BA,SAA8B,CAAC5E,KAAD,EAAW;AAC7C,MAAM6E,mBAAmB,GAAGlG,sBAAsB,EAAlD;AACA,MAAM8E,aAAa,GAAGjF,gBAAgB,MAAMsG,QAAQ,CAACC,IAArD;AACA,MAAMvB,KAAK,GAAGjF,OAAO,EAArB;AAEA,sBACE,eAAC,KAAD,eACMyB,KADN;AAEE,IAAA,mBAAmB,EAAE6E,mBAFvB;AAGE,IAAA,aAAa,EAAEpB,aAHjB;AAIE,IAAA,KAAK,EAAED;AAJT,KADF;AAQD,CAbD;;AAeA,eAAeoB,SAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  useZoom,\n  useZoomContainer,\n  RenderNodeProps,\n} from '@ali/4ever-cangjie';\nimport { sanitizeUrl } from '@ali/4ever-utils';\nimport {\n  EmbedPlugin,\n  useScrollableContainer,\n  EmbedNode,\n  theme,\n} from '@ali/4ever-bamboo';\nimport {\n  EmbedFilePreviewWrapper,\n  PreviewContentWrapper,\n  EmbedFilePreviewMask,\n  PreviewError,\n  PreviewErrorText,\n  PreviewErrorRetry,\n} from './styled';\nimport { updateFile } from '@ali/4ever-factory';\nimport { Resizable } from '@ali/4ever-component';\nimport { EmbedInlineToolbar } from '@ali/4ever-factory';\nimport { EmbedPluginConfig } from '../types';\n\nconst { previewHeight: DEFAULT_PREVIEW_HEIGHT } = theme.embed;\n\nconst {\n  EmbedPreviewHeader, EmbedDownloadButton, EmbedCard,\n} = EmbedPlugin;\n\ninterface IProps extends\n  Pick<EmbedPluginConfig, 'allowDownload' | 'enableFilePreview' | 'locale'>,\n  RenderNodeProps<EmbedNode> {\n  mobile: boolean;\n  onDownload: EmbedPluginConfig['downloadFile'];\n  onPreview: EmbedPluginConfig['transformDocURL'];\n  scrollableContainer: HTMLElement | Window;\n  zoomContainer: HTMLElement | null;\n  scale: number;\n}\n\ninterface IState {\n  height?: number;\n  previewUrl?: string;\n  dragging?: boolean;\n  previewError?: boolean;\n  previewing: boolean;\n  allowDownload: boolean;\n}\n\nconst MIN_PREVIEW_HEIGHT = 150;\nconst MAX_PREVIEW_HEIGHT = 800;\n\nconst HEIGHT_RANGE = [MIN_PREVIEW_HEIGHT, MAX_PREVIEW_HEIGHT] as [\n  number,\n  number,\n];\n\nclass Embed extends PureComponent<IProps, IState> {\n  ref = React.createRef<HTMLDivElement>();\n\n  interval = null;\n\n  previewTimeout = null;\n\n  previewUnfoldTimeout = null;\n\n  constructor(props: IProps) {\n    super(props);\n\n    const { node, allowDownload } = props;\n    const { data } = node;\n    const {\n      previewSize,\n      viewType,\n    } = data;\n\n    let height = 0;\n    if (viewType === 'preview') {\n      if (previewSize) {\n        // @ts-ignore\n        height = previewSize.height;\n      } else {\n        height = DEFAULT_PREVIEW_HEIGHT;\n      }\n    }\n\n    this.state = {\n      height,\n      previewUrl: '',\n      previewError: false,\n      previewing: false,\n      dragging: false,\n      allowDownload: typeof allowDownload === 'boolean' ? allowDownload : false, // 如果布尔值，直接设置\n    };\n  }\n\n  getNodeData = () => {\n    const { node } = this.props;\n    const { data } = node;\n    return data;\n  };\n\n  componentDidMount() {\n    const { src } = this.getNodeData();\n    const { node, allowDownload } = this.props;\n    const { data } = node;\n    const { viewType } = data;\n\n    if (viewType === 'preview' && src) {\n      this.preview();\n    }\n\n    if (typeof allowDownload === 'function') {\n      allowDownload(src).then(res => {\n        this.setState({\n          allowDownload: res,\n        });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data: prevData } = prevProps.node;\n    const { data } = this.props.node;\n    const { viewType: prevViewType } = prevData;\n    const { viewType } = data;\n\n    if (prevViewType !== viewType && viewType === 'preview') {\n      this.showPreviewSlideDown();\n      this.preview();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.previewTimeout) {\n      clearTimeout(this.previewTimeout);\n      this.previewTimeout = null;\n    }\n    if (this.previewUnfoldTimeout) {\n      clearTimeout(this.previewUnfoldTimeout);\n      this.previewUnfoldTimeout = null;\n    }\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  }\n\n  onSwitchViewType = (viewType: string) => {\n    const { controller, node } = this.props;\n    const { data } = node;\n    const { viewType: prevViewType } = this.getNodeData();\n    if (prevViewType === viewType) {\n      return;\n    }\n    controller.run(\n      'onAction',\n      updateFile(\n        node,\n        {\n          ...data,\n          viewType,\n        },\n      ),\n    );\n\n    if (viewType === 'preview') {\n      this.setState({\n        previewUrl: '',\n      });\n    }\n  };\n\n  onDownloadFile = () => {\n    const { src, name, type, size } = this.getNodeData();\n    const { onDownload } = this.props;\n    if (onDownload) {\n      onDownload(src, {\n        name,\n        type,\n        size,\n      });\n    }\n  };\n\n  handleResizeStart = () => {\n    this.setState({\n      dragging: true,\n    });\n  };\n\n  handleResize = (e, size: { height: number }) => {\n    this.setState({\n      height: size.height,\n    });\n  };\n\n  handleResizeStop = () => {\n    const { height } = this.state;\n    const { controller, node } = this.props;\n    const { data } = node;\n    this.setState({\n      dragging: false,\n    });\n    controller.run(\n      'onAction',\n      updateFile(\n        node,\n        {\n          ...data,\n          previewSize: {\n            height,\n          },\n        },\n      ),\n    );\n  };\n\n  showPreviewSlideDown = () => {\n    // slidedown效果\n    this.previewTimeout = setTimeout(() => {\n      this.setState({\n        height: 36,\n      });\n    });\n    this.previewUnfoldTimeout = setTimeout(() => {\n      this.setState({\n        height: DEFAULT_PREVIEW_HEIGHT,\n      });\n    }, 10);\n  };\n\n  preview = () => {\n    const { previewing } = this.state;\n    const { src } = this.getNodeData();\n    const { onPreview } = this.props;\n\n    if (previewing) {\n      return;\n    }\n    this.setState({\n      previewing: true,\n    });\n    if (!onPreview) {\n      return;\n    }\n    onPreview(src)\n      .then((res) => {\n        const { previewUrl: truePreviewUrl } = res;\n        if (truePreviewUrl) {\n          this.setState({\n            previewUrl: truePreviewUrl,\n            previewing: false,\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({\n          previewError: true,\n          previewing: false,\n        });\n      });\n  };\n\n  reTryPreview = () => {\n    this.setState({\n      previewError: false,\n    });\n    this.preview();\n  };\n\n  renderCard() {\n    const { allowDownload } = this.state;\n    const { name, size } = this.getNodeData();\n    const { isSelected, node, locale } = this.props;\n    return (\n      <EmbedCard\n        name={name}\n        allowDownload={allowDownload}\n        isSelected={isSelected}\n        node={node}\n        locale={locale}\n        onDownloadFile={this.onDownloadFile}\n        size={size}\n      />\n    );\n  }\n\n  renderPreviewContent() {\n    const { previewUrl, previewError } = this.state;\n    const { locale = {} } = this.props;\n\n    if (previewError) {\n      return (\n        <PreviewError>\n          <PreviewErrorText>\n            {locale.previewError}\n            <PreviewErrorRetry onClick={this.reTryPreview}>\n              {locale.reTryPreview}\n            </PreviewErrorRetry>\n          </PreviewErrorText>\n        </PreviewError>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {previewUrl ? (\n          <iframe\n            style={{\n              width: '100%',\n              height: '100%',\n              border: 'none',\n              background: '#EDEDED',\n            }}\n            title=\"preview\"\n            src={sanitizeUrl(previewUrl)}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  renderPreview() {\n    const { height, dragging, allowDownload } = this.state;\n    const { type, name, size } = this.getNodeData();\n    const { isSelected, scale, zoomContainer, locale, controller } = this.props;\n    const transitionProperty = dragging ? 'none' : 'height';\n\n    const handlePreviewContentMouseDown = (e) => {\n      e.preventDefault();\n    };\n\n    const enableBorderHighlight = controller.query('enableBorderHighlight');\n\n    return (\n      <Resizable\n        axis=\"y\"\n        visible={isSelected}\n        width={Infinity}\n        height={Math.min(height || 0, MAX_PREVIEW_HEIGHT)}\n        heightRange={HEIGHT_RANGE}\n        onResize={this.handleResize}\n        onResizeStop={this.handleResizeStop}\n        onResizeStart={this.handleResizeStart}\n        speed={1.0 / scale}\n        zoomContainer={zoomContainer}\n        isActive={isSelected}\n        enableBorderHighlight={enableBorderHighlight}\n      >\n        <EmbedFilePreviewWrapper\n          isSelected={isSelected}\n          style={{ height, transitionProperty }}\n          data-testid=\"embed-preview\"\n          data-type={`embed-${type}`}\n        >\n          <EmbedPreviewHeader\n            type={type}\n            name={name}\n            size={size}\n            renderExtra={() => (<EmbedDownloadButton\n              title={locale?.title}\n              onDownloadFile={this.onDownloadFile}\n              allowDownload={allowDownload}\n            />)}\n          />\n          <PreviewContentWrapper onMouseDown={handlePreviewContentMouseDown}>\n            {this.renderPreviewContent()}\n            <EmbedFilePreviewMask\n              style={{ display: !isSelected || dragging ? 'block' : 'none' }}\n            />\n          </PreviewContentWrapper>\n        </EmbedFilePreviewWrapper>\n      </Resizable>\n    );\n  }\n\n  renderInlineToolbar() {\n    const { controller, node, locale, enableFilePreview } = this.props;\n    return (\n      <EmbedInlineToolbar\n        controller={controller}\n        node={node}\n        triggerNode={this.ref.current}\n        locale={locale || {}}\n        onSwitchViewType={this.onSwitchViewType}\n        isMoreButtonShown={enableFilePreview}\n      />\n    );\n  }\n\n  render() {\n    const { viewType } = this.getNodeData();\n    const { attributes, isSelected, controller } = this.props;\n    const { isCollapsed } = controller.value.selection;\n    // const hasHoverToolbar = controller.query('hasHoverToolbar', 'embed');\n    return (\n      <React.Fragment>\n        {isSelected && isCollapsed ? this.renderInlineToolbar() : null}\n        <div\n          {...attributes}\n          ref={this.ref}\n        >\n          {viewType === 'preview' ? this.renderPreview() : this.renderCard()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Container: React.FC<IProps> = (props) => {\n  const scrollableContainer = useScrollableContainer();\n  const zoomContainer = useZoomContainer() || document.body;\n  const scale = useZoom();\n\n  return (\n    <Embed\n      {...props}\n      scrollableContainer={scrollableContainer!}\n      zoomContainer={zoomContainer}\n      scale={scale}\n    />\n  );\n};\n\nexport default Container;\n"],"file":"embed.js"}