import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { PluginRoles } from '@ali/4ever-bamboo';
import { IconButton as Button } from '@ali/we-toolbar';
import { ToolbarLocalfileNormal } from '@ali/we-icon';
import { selectFile } from '@ali/4ever-factory';
var iconStyle = {
  width: 20,
  height: 20
};

var _ref = /*#__PURE__*/_createElement(ToolbarLocalfileNormal, {
  style: iconStyle
});

export default function EmbedButton(props) {
  var controller = props.controller,
      locale = props.locale,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale"]);

  var value = controller.value;
  var isDisabled = controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard');
  var handleClick = isDisabled ? function () {} : function () {
    return controller.run('onAction', selectFile());
  };
  return /*#__PURE__*/_createElement(Button, _extends({}, rest, {
    title: locale.buttonTitle,
    tooltip: locale.buttonTitle,
    className: "bi-toolbar-embed",
    testid: "bi-toolbar-embed",
    icon: _ref,
    disabled: isDisabled,
    onClick: handleClick,
    role: PluginRoles.embed
  }));
}
//# sourceMappingURL=embedButton.js.map