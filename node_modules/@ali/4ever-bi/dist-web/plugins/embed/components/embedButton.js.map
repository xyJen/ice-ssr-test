{"version":3,"sources":["../../../../../src/plugins/embed/components/embedButton.tsx"],"names":["React","PluginRoles","IconButton","Button","ToolbarLocalfileNormal","selectFile","iconStyle","width","height","EmbedButton","props","controller","locale","rest","value","isDisabled","query","handleClick","run","buttonTitle","embed"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,UAAU,IAAIC,MAAvB,QAAqC,iBAArC;AACA,SAASC,sBAAT,QAAuC,cAAvC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AASA,IAAMC,SAA8B,GAAG;AACrCC,EAAAA,KAAK,EAAE,EAD8B;AAErCC,EAAAA,MAAM,EAAE;AAF6B,CAAvC;;wBAoBY,eAAC,sBAAD;AAAwB,EAAA,KAAK,EAAEF;AAA/B,E;;AAfZ,eAAe,SAASG,WAAT,CAAqBC,KAArB,EAA4C;AAAA,MACjDC,UADiD,GACjBD,KADiB,CACjDC,UADiD;AAAA,MACrCC,MADqC,GACjBF,KADiB,CACrCE,MADqC;AAAA,MAC1BC,IAD0B,iCACjBH,KADiB;;AAAA,MAEjDI,KAFiD,GAEvCH,UAFuC,CAEjDG,KAFiD;AAGzD,MAAMC,UAAU,GAAGJ,UAAU,CAACK,KAAX,CAAiB,oBAAjB,KAA0CL,UAAU,CAACK,KAAX,CAAiB,uBAAjB,CAA7D;AACA,MAAMC,WAAW,GAAGF,UAAU,GAC1B,YAAM,CAAG,CADiB,GAE1B;AAAA,WAAMJ,UAAU,CAACO,GAAX,CAAe,UAAf,EAA2Bb,UAAU,EAArC,CAAN;AAAA,GAFJ;AAIA,sBACE,eAAC,MAAD,eACMQ,IADN;AAEE,IAAA,KAAK,EAAED,MAAM,CAACO,WAFhB;AAGE,IAAA,OAAO,EAAEP,MAAM,CAACO,WAHlB;AAIE,IAAA,SAAS,EAAC,kBAJZ;AAKE,IAAA,MAAM,EAAC,kBALT;AAME,IAAA,IAAI,MANN;AAOE,IAAA,QAAQ,EAAEJ,UAPZ;AAQE,IAAA,OAAO,EAAEE,WARX;AASE,IAAA,IAAI,EAAEhB,WAAW,CAACmB;AATpB,KADF;AAaD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { IconButton as Button } from '@ali/we-toolbar';\nimport { ToolbarLocalfileNormal } from '@ali/we-icon';\nimport { selectFile } from '@ali/4ever-factory';\nimport { ToolbarMode } from '@ali/4ever-component';\n\nexport interface EmbedMenuProps {\n  controller: Controller;\n  locale: any;\n  toolbarMode?: ToolbarMode;\n}\n\nconst iconStyle: React.CSSProperties = {\n  width: 20,\n  height: 20,\n};\n\nexport default function EmbedButton(props: EmbedMenuProps) {\n  const { controller, locale, ...rest } = props;\n  const { value } = controller;\n  const isDisabled = controller.query('isSelectionInImage') || controller.query('isSelectionInLinkCard');\n  const handleClick = isDisabled\n    ? () => { }\n    : () => controller.run('onAction', selectFile());\n\n  return (\n    <Button\n      {...rest}\n      title={locale.buttonTitle}\n      tooltip={locale.buttonTitle}\n      className=\"bi-toolbar-embed\"\n      testid=\"bi-toolbar-embed\"\n      icon={<ToolbarLocalfileNormal style={iconStyle} />}\n      disabled={isDisabled}\n      onClick={handleClick}\n      role={PluginRoles.embed}\n    />\n  );\n}\n"],"file":"embedButton.js"}