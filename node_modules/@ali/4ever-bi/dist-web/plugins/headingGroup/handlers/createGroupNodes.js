import { Document } from '@ali/4ever-cangjie';
import { headingGroupList } from '@ali/4ever-plugin-heading-group';
import { group, isGroupFrom } from "../utils";

function defaultIgnore() {
  return false;
}

function createGroupNodes(config) {
  var _config$level = config.level,
      level = _config$level === void 0 ? 3 : _config$level,
      _config$ignore = config.ignore,
      ignore = _config$ignore === void 0 ? defaultIgnore : _config$ignore,
      pass = config.pass;
  var groupConditions = headingGroupList.slice(0, level);
  return function groupNodes(range, ctx, controller, next) {
    var start = range[0];
    var parent = ctx.parent,
        groups = ctx.groups;
    var first = parent.nodes[start];
    var second = parent.nodes[start + 1];
    var parentGroup = groups[groups.length - 1]; // 如果不是一级节点，或者是文档末尾，则不分组

    if (!Document.isDocument(parent) || !second || ignore(first)) {
      return next();
    } // 查找可用的 group 条件


    var $condition = groupConditions.find(function (_ref) {
      var type = _ref.type,
          when = _ref.when;
      return when(first) && !isGroupFrom(parentGroup, type);
    }); // group 节点

    if ($condition) {
      var until = $condition.until,
          type = $condition.type;
      return group(range, parent, type, until, pass);
    }

    return next();
  };
}

export default createGroupNodes;
//# sourceMappingURL=createGroupNodes.js.map