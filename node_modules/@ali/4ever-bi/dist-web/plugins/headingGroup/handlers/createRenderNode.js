import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Block } from '@ali/4ever-cangjie';
import { Heading } from '@ali/4ever-mo';
import { GroupFactory } from '@ali/4ever-bamboo';
import { condition, generateGroupType } from "../utils";
var Group = GroupFactory.Group;
var Heading1 = Heading.Heading1,
    Heading2 = Heading.Heading2,
    Heading3 = Heading.Heading3,
    Heading4 = Heading.Heading4,
    Heading5 = Heading.Heading5,
    Heading6 = Heading.Heading6;
var headingList = [Heading1, Heading2, Heading3, Heading4, Heading5, Heading6];

function createRenderNode(config) {
  var _config$level = config.level,
      level = _config$level === void 0 ? 3 : _config$level;
  var hCondition = condition.apply(void 0, headingList.slice(0, level).map(function (H) {
    return function (node) {
      return Block.isBlock(node) && node.type === generateGroupType(H.TYPE);
    };
  }));
  return function renderNode(props, controller, next) {
    var node = props.node,
        attributes = props.attributes,
        isSelected = props.isSelected,
        children = props.children;

    if (hCondition.some(node)) {
      return /*#__PURE__*/_createElement(Group, {
        node: node,
        attributes: attributes,
        controller: controller,
        isSelected: isSelected
      }, children());
    }

    return next();
  };
}

export default createRenderNode;
//# sourceMappingURL=createRenderNode.js.map